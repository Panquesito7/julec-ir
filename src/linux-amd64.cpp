// Auto generated by JuleC.
// JuleC version: beta 0.0.5 @master
// Date: 20/9/2023 21.10 (DD/MM/YYYY) (HH.MM) UTC
//
// Recommended Compile Command;
// clang++ -O0 -Wno-everything --std=c++17 dist/ir.cpp

#include "api/jule.hpp"                                   

#include <dirent.h>
#include <fcntl.h>
#include <unistd.h>
#include <cstdio>
#include <sys/stat.h>
#include <time.h>
#include "std/jule/integrated/integrated.hpp"                                   
#include "std/sys/syscall_unix.hpp"                                   
#include "std/vector/alloc.hpp"                                   

struct _1ab194c20_Importer;
struct _1ac6d02c0_Kind;
struct _1aae290e2_Lookup;
struct _1a977abdc_RangeSetter;

struct _1cde4dc3c_AnsiEscape;


struct _1cde4dc3c_Logger;


struct _1cdd187e9_LazyBuff;


struct _1cdeeb191_Log;


struct _1b5e99d17_bits_error;


struct _1cdd4411b_FloatInfo;


struct _1cdd4411b_DecimalSlice;


struct _1b588cbe4_LeftCheat;


struct _1b588cbe4_Decimal;


struct _1b61b1e74_DirEntry;


struct _1b61b2a8a_File;


struct _1a8bb56ee_Status;


struct _1a9930e4c_FoldPair;


struct _1a9930e4c_CaseRange;


struct _1a9930e4c_Range16;


struct _1a9930e4c_Range32;


struct _1a9930e4c_RangeTable;


struct _1a99595b3_accept_range;


struct _1b61ec5ec_Token;


struct _1b61ece27_File;


struct _1b62ba104_KindPair;


struct _1b62ba104_Lex;


struct _1b61d1d62_Ast;


struct _1b61ca014_CommentGroup;


struct _1b61ca014_NamespaceTypeDecl;


struct _1b61ca014_RefTypeDecl;


struct _1b61ca014_SlcTypeDecl;


struct _1b61ca014_TupleTypeDecl;


struct _1b61ca014_PtrTypeDecl;


struct _1b61ca014_ArrTypeDecl;


struct _1b61ca014_MapTypeDecl;


struct _1b61ca014_RetTypeDecl;


struct _1b61ca014_TupleExpr;


struct _1b61ca014_CastExpr;


struct _1b61ca014_StructLit;


struct _1b61ca014_ScopeTree;


struct _1b61ca014_Conditional;


struct _1a9b97966_FileInfo;


struct _1a9b97966_PackageInfo;


struct _1a9b97a76_Stmt;


struct _1a9b97a76_ScopeParser;


struct _1a9ba6854_CallData;


struct _1a9ba6854_Precedencer;


struct _1a9ba6854_ExprBuilder;


struct _1a9e07434_Parser;


struct _1b5d9c0c1_TypeBuilder;


struct _1ac90c3ed_Const;




struct _1b5e07a00_FieldIns;


struct _1b5e07a00_StructIns;


struct _1b557cd24_RetType;


struct _1b557cd24_ParamIns;


struct _1b557cd24_FnIns;


struct _1b5589c76_ReferenceStack;


struct _1b5589c76_SymbolBuilder;


struct _1ab009de8_Scope;


struct _1ab009de8_If;


struct _1ab009de8_Else;


struct _1ab009de8_Conditional;


struct _1ab009de8_InfIter;


struct _1ab009de8_WhileIter;


struct _1ab009de8_RangeIter;


struct _1ab009de8_ContSt;


struct _1ab009de8_BreakSt;


struct _1ab009de8_Label;


struct _1ab009de8_GotoSt;


struct _1ab009de8_Postfix;


struct _1ab009de8_Assign;


struct _1ab009de8_MultiAssign;


struct _1ab009de8_Match;


struct _1ab009de8_Case;


struct _1ab009de8_FallSt;


struct _1ab009de8_RetSt;


struct _1ab009de8_Recover;


struct _1ab009de8_ScopeGoto;


struct _1ab009de8_ScopeChecker;


struct _1ab33d083_BinopExprModel;


struct _1ab33d083_UnaryExprModel;


struct _1ab33d083_GetRefPtrExprModel;


struct _1ab33d083_StructArgExprModel;


struct _1ab33d083_StructLitExprModel;


struct _1ab33d083_AllocStructLitExprModel;


struct _1ab33d083_CastingExprModel;


struct _1ab33d083_FnCallExprModel;


struct _1ab33d083_SliceExprModel;


struct _1ab33d083_IndexigExprModel;


struct _1ab33d083_AnonFnExprModel;


struct _1ab33d083_KeyValPairExprModel;


struct _1ab33d083_MapExprModel;


struct _1ab33d083_SlicingExprModel;


struct _1ab33d083_TraitSubIdentExprModel;


struct _1ab33d083_StructSubIdentExprModel;


struct _1ab33d083_StructStaticIdentExprModel;


struct _1ab33d083_ArrayExprModel;


struct _1ab33d083_CommonIdentExprModel;


struct _1ab33d083_CommonSubIdentExprModel;


struct _1ab33d083_TupleExprModel;


struct _1ab33d083_BuiltinOutCallExprModel;


struct _1ab33d083_BuiltinOutlnCallExprModel;


struct _1ab33d083_BuiltinCloneCallExprModel;


struct _1ab33d083_BuiltinNewCallExprModel;


struct _1ab33d083_BuiltinRealCallExprModel;


struct _1ab33d083_BuiltinDropCallExprModel;


struct _1ab33d083_BuiltinPanicCallExprModel;


struct _1ab33d083_BuiltinMakeCallExprModel;


struct _1ab33d083_BuiltinAppendCallExprModel;


struct _1ab33d083_BuiltinErrorTraitSubIdentExprModel;


struct _1ab33d083_SizeofExprModel;


struct _1ab33d083_AlignofExprModel;


struct _1ab33d083_RuneExprModel;


struct _1ab33d083_ExplicitDerefExprModel;


struct _1ab33d083_IntegratedToStrExprModel;


struct _1ab33d083_TernaryExprModel;


struct _1ab194c20_Package;


struct _1ab195050_Sema;


struct _1a8dc912c_RangeChecker;


struct _1ab00cc20_SymbolTable;


struct _1ab00dbcc_Data;


struct _1ab00dbcc_Value;


struct _1ab00dbcc_Eval;


struct _1ac6d02c0_TypeKind;


struct _1ac6d02c0_TypeSymbol;


struct _1ac6d02c0_Prim;


struct _1ac6d02c0_Ref;


struct _1ac6d02c0_Slc;


struct _1ac6d02c0_Tuple;


struct _1ac6d02c0_Map;


struct _1ac6d02c0_Arr;


struct _1ac6d02c0_Ptr;


struct _1ac6d02c0_Referencer;


struct _1b615c804_PlainImporter;


struct _1b60cc7c9_OrderedDefines;


struct _1b60cc7c9_DefineOrderer;


struct _1b60bd9da_ScopeDeadCode;


struct _1ad0abb9b_AbsTime;


struct _1ad0abb9b_Time;


struct _1a977abdc_IndexRangeSetter;


struct _1a977abdc_MapRangeSetter;


struct _1b61ca014_LitExpr;


struct _1b61ca014_UnsafeExpr;


struct _1b61ca014_IdentExpr;


struct _1b61ca014_UnaryExpr;


struct _1b61ca014_VariadicExpr;


struct _1b61ca014_NsSelectionExpr;


struct _1b61ca014_SubIdentExpr;


struct _1b61ca014_BinopExpr;


struct _1b61ca014_FieldExprPair;


struct _1b61ca014_BraceLit;


struct _1b61ca014_KeyValPair;


struct _1b61ca014_SliceExpr;


struct _1b61ca014_IndexingExpr;


struct _1b61ca014_SlicingExpr;


struct _1b61ca014_TernaryExpr;


struct _1a8dc912c_DynamicTypeAnnotation;


struct _1a8dc912c_StructLitChecker;


struct _1b61ca014_LabelSt;


struct _1b61ca014_FallSt;


struct _1b61ca014_AssignSt;


struct _1b61ca014_RetSt;


struct _1b61ca014_Iter;


struct _1b61ca014_WhileKind;


struct _1b61ca014_RangeKind;


struct _1b61ca014_MatchCase;


struct _1a8dc912c_AssignTypeChecker;


struct _1a8dc912c_FnCallArgChecker;


struct _1b61ca014_GenericDecl;


struct _1a8dc912c_RetTypeChecker;


struct _1b61ca014_GotoSt;


struct _1b61ca014_AssignLeft;


struct _1ab00dbcc_BinopSolver;


struct _1ac6d02c0_TypeAlias;


struct _1b61ca014_Comment;


struct _1b61ca014_ParamDecl;


struct _1b61ca014_FnDecl;


struct _1b61ca014_VarDecl;


struct _1b61ca014_BreakSt;


struct _1ac6d02c0_TypeChecker;


struct _1b61ca014_ContSt;


struct _1b60cd1d1_IR;


struct _1b61ca014_If;


struct _1b61ca014_Else;


struct _1ab009de8_ScopeLabel;


struct _1b61ca014_Directive;


struct _1b61ca014_TypeAliasDecl;


struct _1b61ca014_Case;


struct _1b61ca014_UseDecl;


struct _1b61ca014_EnumItemDecl;


struct _1b61ca014_EnumDecl;


struct _1b61ca014_FieldDecl;


struct _1b61ca014_StructDecl;


struct _1b61ca014_TraitDecl;


struct _1b61ca014_Impl;


struct _1b61ca014_Expr;


struct _1b61ca014_TypeDecl;


struct _1a9e07148_AssignInfo;


struct _1b61ca014_IdentTypeDecl;


struct _1b61ca014_FnCallExpr;


struct _1b5e07a00_Field;


struct _1b5e07a00_Struct;


struct _1b61ca014_Node;


struct _1b557cd24_Param;


struct _1b557cd24_Fn;


struct _1b5589c76_Pass;


struct _1aaee9091_Trait;


struct _1a909ac6b_EnumItem;


struct _1a909ac6b_Enum;


struct _1ab194c20_ImportInfo;


struct _1ab0017b3_Impl;


struct _1b623eab2_Var;


struct _1a8dc912c_TypeCompatibilityChecker;

struct _1ab194c20_Importer {
	virtual ~_1ab194c20_Importer(void) {}

	virtual jule::Ref<_1ab194c20_ImportInfo> _method_get_import(jule::Str _1633_path) { return {}; }
	virtual std::tuple<jule::Slice<jule::Ref<_1b61d1d62_Ast>>,jule::Slice<_1cdeeb191_Log>> _method_import_package(jule::Str _2037_path) { return {}; }
	virtual void _method_imported(jule::Ref<_1ab194c20_ImportInfo>) {}
};

struct _1ac6d02c0_Kind {
	virtual ~_1ac6d02c0_Kind(void) {}

	virtual jule::Str _method_to_str(void) { return {}; }
	virtual jule::Bool _method_equals(jule::Ref<_1ac6d02c0_TypeKind> _4621_other) { return {}; }
};

struct _1aae290e2_Lookup {
	virtual ~_1aae290e2_Lookup(void) {}

	virtual jule::Ref<_1ab194c20_ImportInfo> _method_find_package(jule::Str _935_ident) { return {}; }
	virtual jule::Ref<_1ab194c20_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ref<_1ab194c20_ImportInfo>)> _1337_selector) { return {}; }
	virtual jule::Ref<_1b623eab2_Var> _method_find_var(jule::Str _1731_ident,jule::Bool _1743_cpp_linked) { return {}; }
	virtual jule::Ref<_1ac6d02c0_TypeAlias> _method_find_type_alias(jule::Str _2138_ident,jule::Bool _2150_cpp_linked) { return {}; }
	virtual jule::Ref<_1b5e07a00_Struct> _method_find_struct(jule::Str _2534_ident,jule::Bool _2546_cpp_linked) { return {}; }
	virtual jule::Ref<_1b557cd24_Fn> _method_find_fn(jule::Str _2930_ident,jule::Bool _2942_cpp_linked) { return {}; }
	virtual jule::Ref<_1aaee9091_Trait> _method_find_trait(jule::Str _3333_ident) { return {}; }
	virtual jule::Ref<_1a909ac6b_Enum> _method_find_enum(jule::Str _3732_ident) { return {}; }
};

struct _1a977abdc_RangeSetter {
	virtual ~_1a977abdc_RangeSetter(void) {}

	virtual jule::Str _method_setup_vars(jule::Ref<_1b623eab2_Var> _4029_key_a,jule::Ref<_1b623eab2_Var> _4046_key_b) { return {}; }
	virtual jule::Str _method_next_steps(jule::Ref<_1b623eab2_Var> _4129_key_a,jule::Ref<_1b623eab2_Var> _4146_key_b,jule::Str _4159_begin) { return {}; }
};


struct _1cde4dc3c_AnsiEscape {
	jule::Ref<_1cde4dc3c_AnsiEscape> self{};

	~_1cde4dc3c_AnsiEscape(void) { this->self.ref = nullptr; }

	_1cde4dc3c_AnsiEscape(void) { this->self = jule::Ref<_1cde4dc3c_AnsiEscape>::make(this, nullptr); }

	static inline void _static_method_reset(void);


	static inline void _static_method_print(jule::Str,jule::Str);


	inline bool operator==(const _1cde4dc3c_AnsiEscape &_Src) const { return true; }

	inline bool operator!=(const _1cde4dc3c_AnsiEscape &_Src) const { return !this->operator==(_Src); }
};


struct _1cde4dc3c_Logger {
	jule::Ref<_1cde4dc3c_Logger> self{};

	~_1cde4dc3c_Logger(void) { this->self.ref = nullptr; }

	_1cde4dc3c_Logger(void) { this->self = jule::Ref<_1cde4dc3c_Logger>::make(this, nullptr); }

	static inline void _static_method_log_flat(_1cdeeb191_Log&);


	static inline void _static_method_log_error(_1cdeeb191_Log&);


	static inline void _static_method_log(_1cdeeb191_Log&);


	static inline void _static_method_print_logs(jule::Slice<_1cdeeb191_Log>&);


	inline bool operator==(const _1cde4dc3c_Logger &_Src) const { return true; }

	inline bool operator!=(const _1cde4dc3c_Logger &_Src) const { return !this->operator==(_Src); }
};


struct _1cdd187e9_LazyBuff {
	jule::Ref<_1cdd187e9_LazyBuff> self{};

	jule::Str _field_path{jule::Str()};
	jule::Slice<jule::U8> _field_buff{jule::Slice<jule::U8>()};
	jule::Int _field_w{jule::Int()};
	jule::Str _field_vol_and_path{jule::Str()};
	jule::Int _field_vol_len{jule::Int()};


	_1cdd187e9_LazyBuff(jule::Str __param_path, jule::Slice<jule::U8> __param_buff, jule::Int __param_w, jule::Str __param_vol_and_path, jule::Int __param_vol_len) {
		this->self = jule::Ref<_1cdd187e9_LazyBuff>::make(this, nullptr);

		this->_field_path = __param_path;
		this->_field_buff = __param_buff;
		this->_field_w = __param_w;
		this->_field_vol_and_path = __param_vol_and_path;
		this->_field_vol_len = __param_vol_len;
	}

	~_1cdd187e9_LazyBuff(void) { this->self.ref = nullptr; }

	_1cdd187e9_LazyBuff(void) { this->self = jule::Ref<_1cdd187e9_LazyBuff>::make(this, nullptr); }

	inline jule::U8 _method_index(jule::Int);


	inline void _method_append(jule::U8);


	inline jule::Str _method_string(void);


	inline bool operator==(const _1cdd187e9_LazyBuff &_Src) const {
		return 
			this->_field_path == _Src._field_path &&
			this->_field_buff == _Src._field_buff &&
			this->_field_w == _Src._field_w &&
			this->_field_vol_and_path == _Src._field_vol_and_path &&
			this->_field_vol_len == _Src._field_vol_len;
	}

	inline bool operator!=(const _1cdd187e9_LazyBuff &_Src) const { return !this->operator==(_Src); }
};


struct _1cdeeb191_Log {
	jule::Ref<_1cdeeb191_Log> self{};

	jule::Int _field_kind{0LLU};
	jule::Int _field_row{jule::Int()};
	jule::Int _field_column{jule::Int()};
	jule::Str _field_path{jule::Str()};
	jule::Str _field_text{jule::Str()};
	jule::Str _field_line{jule::Str()};
	jule::Str _field_suggestion{jule::Str()};


	_1cdeeb191_Log(jule::Int __param_kind, jule::Int __param_row, jule::Int __param_column, jule::Str __param_path, jule::Str __param_text, jule::Str __param_line, jule::Str __param_suggestion) {
		this->self = jule::Ref<_1cdeeb191_Log>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_row = __param_row;
		this->_field_column = __param_column;
		this->_field_path = __param_path;
		this->_field_text = __param_text;
		this->_field_line = __param_line;
		this->_field_suggestion = __param_suggestion;
	}

	~_1cdeeb191_Log(void) { this->self.ref = nullptr; }

	_1cdeeb191_Log(void) { this->self = jule::Ref<_1cdeeb191_Log>::make(this, nullptr); }

	inline bool operator==(const _1cdeeb191_Log &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_row == _Src._field_row &&
			this->_field_column == _Src._field_column &&
			this->_field_path == _Src._field_path &&
			this->_field_text == _Src._field_text &&
			this->_field_line == _Src._field_line &&
			this->_field_suggestion == _Src._field_suggestion;
	}

	inline bool operator!=(const _1cdeeb191_Log &_Src) const { return !this->operator==(_Src); }
};


struct _1b5e99d17_bits_error: public jule::Error {
	jule::Ref<_1b5e99d17_bits_error> self{};

	jule::Str _field_message{jule::Str()};


	_1b5e99d17_bits_error(jule::Str __param_message) {
		this->self = jule::Ref<_1b5e99d17_bits_error>::make(this, nullptr);

		this->_field_message = __param_message;
	}

	~_1b5e99d17_bits_error(void) { this->self.ref = nullptr; }

	_1b5e99d17_bits_error(void) { this->self = jule::Ref<_1b5e99d17_bits_error>::make(this, nullptr); }

	inline jule::Str _method_error(void);


	inline bool operator==(const _1b5e99d17_bits_error &_Src) const {
		return 
			this->_field_message == _Src._field_message;
	}

	inline bool operator!=(const _1b5e99d17_bits_error &_Src) const { return !this->operator==(_Src); }
};


struct _1cdd4411b_FloatInfo {
	jule::Ref<_1cdd4411b_FloatInfo> self{};

	jule::Uint _field_mantbits{jule::Uint()};
	jule::Uint _field_expbits{jule::Uint()};
	jule::Int _field_bias{jule::Int()};


	_1cdd4411b_FloatInfo(jule::Uint __param_mantbits, jule::Uint __param_expbits, jule::Int __param_bias) {
		this->self = jule::Ref<_1cdd4411b_FloatInfo>::make(this, nullptr);

		this->_field_mantbits = __param_mantbits;
		this->_field_expbits = __param_expbits;
		this->_field_bias = __param_bias;
	}

	~_1cdd4411b_FloatInfo(void) { this->self.ref = nullptr; }

	_1cdd4411b_FloatInfo(void) { this->self = jule::Ref<_1cdd4411b_FloatInfo>::make(this, nullptr); }

	inline bool operator==(const _1cdd4411b_FloatInfo &_Src) const {
		return 
			this->_field_mantbits == _Src._field_mantbits &&
			this->_field_expbits == _Src._field_expbits &&
			this->_field_bias == _Src._field_bias;
	}

	inline bool operator!=(const _1cdd4411b_FloatInfo &_Src) const { return !this->operator==(_Src); }
};


struct _1cdd4411b_DecimalSlice {
	jule::Ref<_1cdd4411b_DecimalSlice> self{};

	jule::Slice<jule::U8> _field_d{jule::Slice<jule::U8>()};
	jule::Int _field_nd{jule::Int()};
	jule::Int _field_dp{jule::Int()};
	jule::Bool _field_neg{jule::Bool()};


	_1cdd4411b_DecimalSlice(jule::Slice<jule::U8> __param_d, jule::Int __param_nd, jule::Int __param_dp, jule::Bool __param_neg) {
		this->self = jule::Ref<_1cdd4411b_DecimalSlice>::make(this, nullptr);

		this->_field_d = __param_d;
		this->_field_nd = __param_nd;
		this->_field_dp = __param_dp;
		this->_field_neg = __param_neg;
	}

	~_1cdd4411b_DecimalSlice(void) { this->self.ref = nullptr; }

	_1cdd4411b_DecimalSlice(void) { this->self = jule::Ref<_1cdd4411b_DecimalSlice>::make(this, nullptr); }

	inline bool operator==(const _1cdd4411b_DecimalSlice &_Src) const {
		return 
			this->_field_d == _Src._field_d &&
			this->_field_nd == _Src._field_nd &&
			this->_field_dp == _Src._field_dp &&
			this->_field_neg == _Src._field_neg;
	}

	inline bool operator!=(const _1cdd4411b_DecimalSlice &_Src) const { return !this->operator==(_Src); }
};


struct _1b588cbe4_LeftCheat {
	jule::Ref<_1b588cbe4_LeftCheat> self{};

	jule::Int _field_delta{jule::Int()};
	jule::Str _field_cutoff{jule::Str()};


	_1b588cbe4_LeftCheat(jule::Int __param_delta, jule::Str __param_cutoff) {
		this->self = jule::Ref<_1b588cbe4_LeftCheat>::make(this, nullptr);

		this->_field_delta = __param_delta;
		this->_field_cutoff = __param_cutoff;
	}

	~_1b588cbe4_LeftCheat(void) { this->self.ref = nullptr; }

	_1b588cbe4_LeftCheat(void) { this->self = jule::Ref<_1b588cbe4_LeftCheat>::make(this, nullptr); }

	inline bool operator==(const _1b588cbe4_LeftCheat &_Src) const {
		return 
			this->_field_delta == _Src._field_delta &&
			this->_field_cutoff == _Src._field_cutoff;
	}

	inline bool operator!=(const _1b588cbe4_LeftCheat &_Src) const { return !this->operator==(_Src); }
};


struct _1b588cbe4_Decimal {
	jule::Ref<_1b588cbe4_Decimal> self{};

	jule::Array<jule::U8,800> _field_d{jule::Array<jule::U8,800>()};
	jule::Int _field_nd{jule::Int()};
	jule::Int _field_dp{jule::Int()};
	jule::Bool _field_neg{jule::Bool()};
	jule::Bool _field_trunc{jule::Bool()};


	_1b588cbe4_Decimal(jule::Array<jule::U8,800> __param_d, jule::Int __param_nd, jule::Int __param_dp, jule::Bool __param_neg, jule::Bool __param_trunc) {
		this->self = jule::Ref<_1b588cbe4_Decimal>::make(this, nullptr);

		this->_field_d = __param_d;
		this->_field_nd = __param_nd;
		this->_field_dp = __param_dp;
		this->_field_neg = __param_neg;
		this->_field_trunc = __param_trunc;
	}

	~_1b588cbe4_Decimal(void) { this->self.ref = nullptr; }

	_1b588cbe4_Decimal(void) { this->self = jule::Ref<_1b588cbe4_Decimal>::make(this, nullptr); }

	inline jule::Bool _method_set(jule::Str);


	inline std::tuple<jule::U64,jule::Bool> _method_float_bits(_1cdd4411b_FloatInfo&);


	inline void _method_assign(jule::U64);


	inline void _method_shift(jule::Int);


	inline void _method_round_down(jule::Int);


	inline void _method_round_up(jule::Int);


	inline void _method_round(jule::Int);


	inline jule::U64 _method_rounded_integer(void);


	inline bool operator==(const _1b588cbe4_Decimal &_Src) const {
		return 
			this->_field_d == _Src._field_d &&
			this->_field_nd == _Src._field_nd &&
			this->_field_dp == _Src._field_dp &&
			this->_field_neg == _Src._field_neg &&
			this->_field_trunc == _Src._field_trunc;
	}

	inline bool operator!=(const _1b588cbe4_Decimal &_Src) const { return !this->operator==(_Src); }
};


struct _1b61b1e74_DirEntry {
	jule::Ref<_1b61b1e74_DirEntry> self{};

	jule::Str _field_name{jule::Str()};
	jule::Ref<_1a8bb56ee_Status> _field_stat{jule::Ref<_1a8bb56ee_Status>()};


	_1b61b1e74_DirEntry(jule::Str __param_name, jule::Ref<_1a8bb56ee_Status> __param_stat) {
		this->self = jule::Ref<_1b61b1e74_DirEntry>::make(this, nullptr);

		this->_field_name = __param_name;
		this->_field_stat = __param_stat;
	}

	~_1b61b1e74_DirEntry(void) { this->self.ref = nullptr; }

	_1b61b1e74_DirEntry(void) { this->self = jule::Ref<_1b61b1e74_DirEntry>::make(this, nullptr); }

	inline bool operator==(const _1b61b1e74_DirEntry &_Src) const {
		return 
			this->_field_name == _Src._field_name &&
			this->_field_stat == _Src._field_stat;
	}

	inline bool operator!=(const _1b61b1e74_DirEntry &_Src) const { return !this->operator==(_Src); }
};


struct _1b61b2a8a_File {
	jule::Ref<_1b61b2a8a_File> self{};

	jule::Uintptr _field_handle{jule::Uintptr()};


	_1b61b2a8a_File(jule::Uintptr __param_handle) {
		this->self = jule::Ref<_1b61b2a8a_File>::make(this, nullptr);

		this->_field_handle = __param_handle;
	}

	~_1b61b2a8a_File(void) { this->self.ref = nullptr; }

	_1b61b2a8a_File(void) { this->self = jule::Ref<_1b61b2a8a_File>::make(this, nullptr); }

	inline std::tuple<jule::Int,jule::Int> _method_write(jule::Slice<jule::U8>);


	inline std::tuple<jule::Int,jule::Int> _method_read(jule::Slice<jule::U8>);


	static inline jule::Ref<_1b61b2a8a_File> _static_method_new(jule::Uintptr);


	inline std::tuple<jule::I64,jule::Int> _method_seek(jule::I64,jule::Int);


	inline jule::Int _method_close(void);


	inline bool operator==(const _1b61b2a8a_File &_Src) const {
		return 
			this->_field_handle == _Src._field_handle;
	}

	inline bool operator!=(const _1b61b2a8a_File &_Src) const { return !this->operator==(_Src); }
};


struct _1a8bb56ee_Status {
	jule::Ref<_1a8bb56ee_Status> self{};

	jule::Uint _field_mode{jule::Uint()};
	jule::Uint _field_size{jule::Uint()};


	_1a8bb56ee_Status(jule::Uint __param_mode, jule::Uint __param_size) {
		this->self = jule::Ref<_1a8bb56ee_Status>::make(this, nullptr);

		this->_field_mode = __param_mode;
		this->_field_size = __param_size;
	}

	~_1a8bb56ee_Status(void) { this->self.ref = nullptr; }

	_1a8bb56ee_Status(void) { this->self = jule::Ref<_1a8bb56ee_Status>::make(this, nullptr); }

	inline jule::Bool _method_is_dir(void);


	inline jule::Bool _method_is_reg(void);


	inline bool operator==(const _1a8bb56ee_Status &_Src) const {
		return 
			this->_field_mode == _Src._field_mode &&
			this->_field_size == _Src._field_size;
	}

	inline bool operator!=(const _1a8bb56ee_Status &_Src) const { return !this->operator==(_Src); }
};


struct _1a9930e4c_FoldPair {
	jule::Ref<_1a9930e4c_FoldPair> self{};

	jule::U16 _field_from{jule::U16()};
	jule::U16 _field_to{jule::U16()};


	_1a9930e4c_FoldPair(jule::U16 __param_from, jule::U16 __param_to) {
		this->self = jule::Ref<_1a9930e4c_FoldPair>::make(this, nullptr);

		this->_field_from = __param_from;
		this->_field_to = __param_to;
	}

	~_1a9930e4c_FoldPair(void) { this->self.ref = nullptr; }

	_1a9930e4c_FoldPair(void) { this->self = jule::Ref<_1a9930e4c_FoldPair>::make(this, nullptr); }

	inline bool operator==(const _1a9930e4c_FoldPair &_Src) const {
		return 
			this->_field_from == _Src._field_from &&
			this->_field_to == _Src._field_to;
	}

	inline bool operator!=(const _1a9930e4c_FoldPair &_Src) const { return !this->operator==(_Src); }
};


struct _1a9930e4c_CaseRange {
	jule::Ref<_1a9930e4c_CaseRange> self{};

	jule::U32 _field_lo{jule::U32()};
	jule::U32 _field_hi{jule::U32()};
	jule::Array<jule::I32,3> _field_delta{jule::Array<jule::I32,3>()};


	_1a9930e4c_CaseRange(jule::U32 __param_lo, jule::U32 __param_hi, jule::Array<jule::I32,3> __param_delta) {
		this->self = jule::Ref<_1a9930e4c_CaseRange>::make(this, nullptr);

		this->_field_lo = __param_lo;
		this->_field_hi = __param_hi;
		this->_field_delta = __param_delta;
	}

	~_1a9930e4c_CaseRange(void) { this->self.ref = nullptr; }

	_1a9930e4c_CaseRange(void) { this->self = jule::Ref<_1a9930e4c_CaseRange>::make(this, nullptr); }

	inline bool operator==(const _1a9930e4c_CaseRange &_Src) const {
		return 
			this->_field_lo == _Src._field_lo &&
			this->_field_hi == _Src._field_hi &&
			this->_field_delta == _Src._field_delta;
	}

	inline bool operator!=(const _1a9930e4c_CaseRange &_Src) const { return !this->operator==(_Src); }
};


struct _1a9930e4c_Range16 {
	jule::Ref<_1a9930e4c_Range16> self{};

	jule::U16 _field_lo{jule::U16()};
	jule::U16 _field_hi{jule::U16()};
	jule::U16 _field_stride{jule::U16()};


	_1a9930e4c_Range16(jule::U16 __param_lo, jule::U16 __param_hi, jule::U16 __param_stride) {
		this->self = jule::Ref<_1a9930e4c_Range16>::make(this, nullptr);

		this->_field_lo = __param_lo;
		this->_field_hi = __param_hi;
		this->_field_stride = __param_stride;
	}

	~_1a9930e4c_Range16(void) { this->self.ref = nullptr; }

	_1a9930e4c_Range16(void) { this->self = jule::Ref<_1a9930e4c_Range16>::make(this, nullptr); }

	inline bool operator==(const _1a9930e4c_Range16 &_Src) const {
		return 
			this->_field_lo == _Src._field_lo &&
			this->_field_hi == _Src._field_hi &&
			this->_field_stride == _Src._field_stride;
	}

	inline bool operator!=(const _1a9930e4c_Range16 &_Src) const { return !this->operator==(_Src); }
};


struct _1a9930e4c_Range32 {
	jule::Ref<_1a9930e4c_Range32> self{};

	jule::U32 _field_lo{jule::U32()};
	jule::U32 _field_hi{jule::U32()};
	jule::U32 _field_stride{jule::U32()};


	_1a9930e4c_Range32(jule::U32 __param_lo, jule::U32 __param_hi, jule::U32 __param_stride) {
		this->self = jule::Ref<_1a9930e4c_Range32>::make(this, nullptr);

		this->_field_lo = __param_lo;
		this->_field_hi = __param_hi;
		this->_field_stride = __param_stride;
	}

	~_1a9930e4c_Range32(void) { this->self.ref = nullptr; }

	_1a9930e4c_Range32(void) { this->self = jule::Ref<_1a9930e4c_Range32>::make(this, nullptr); }

	inline bool operator==(const _1a9930e4c_Range32 &_Src) const {
		return 
			this->_field_lo == _Src._field_lo &&
			this->_field_hi == _Src._field_hi &&
			this->_field_stride == _Src._field_stride;
	}

	inline bool operator!=(const _1a9930e4c_Range32 &_Src) const { return !this->operator==(_Src); }
};


struct _1a9930e4c_RangeTable {
	jule::Ref<_1a9930e4c_RangeTable> self{};

	jule::Slice<_1a9930e4c_Range16> _field_r16{jule::Slice<_1a9930e4c_Range16>()};
	jule::Slice<_1a9930e4c_Range32> _field_r32{jule::Slice<_1a9930e4c_Range32>()};
	jule::Int _field_latin_offset{jule::Int()};


	_1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16> __param_r16, jule::Slice<_1a9930e4c_Range32> __param_r32, jule::Int __param_latin_offset) {
		this->self = jule::Ref<_1a9930e4c_RangeTable>::make(this, nullptr);

		this->_field_r16 = __param_r16;
		this->_field_r32 = __param_r32;
		this->_field_latin_offset = __param_latin_offset;
	}

	~_1a9930e4c_RangeTable(void) { this->self.ref = nullptr; }

	_1a9930e4c_RangeTable(void) { this->self = jule::Ref<_1a9930e4c_RangeTable>::make(this, nullptr); }

	inline bool operator==(const _1a9930e4c_RangeTable &_Src) const {
		return 
			this->_field_r16 == _Src._field_r16 &&
			this->_field_r32 == _Src._field_r32 &&
			this->_field_latin_offset == _Src._field_latin_offset;
	}

	inline bool operator!=(const _1a9930e4c_RangeTable &_Src) const { return !this->operator==(_Src); }
};


struct _1a99595b3_accept_range {
	jule::Ref<_1a99595b3_accept_range> self{};

	jule::U8 _field_lo{jule::U8()};
	jule::U8 _field_hi{jule::U8()};


	_1a99595b3_accept_range(jule::U8 __param_lo, jule::U8 __param_hi) {
		this->self = jule::Ref<_1a99595b3_accept_range>::make(this, nullptr);

		this->_field_lo = __param_lo;
		this->_field_hi = __param_hi;
	}

	~_1a99595b3_accept_range(void) { this->self.ref = nullptr; }

	_1a99595b3_accept_range(void) { this->self = jule::Ref<_1a99595b3_accept_range>::make(this, nullptr); }

	inline bool operator==(const _1a99595b3_accept_range &_Src) const {
		return 
			this->_field_lo == _Src._field_lo &&
			this->_field_hi == _Src._field_hi;
	}

	inline bool operator!=(const _1a99595b3_accept_range &_Src) const { return !this->operator==(_Src); }
};


struct _1b61ec5ec_Token {
	jule::Ref<_1b61ec5ec_Token> self{};

	jule::Ref<_1b61ece27_File> _field_file{jule::Ref<_1b61ece27_File>()};
	jule::Int _field_row{jule::Int()};
	jule::Int _field_column{jule::Int()};
	jule::Str _field_kind{jule::Str()};
	jule::Uint _field_id{0LLU};


	_1b61ec5ec_Token(jule::Ref<_1b61ece27_File> __param_file, jule::Int __param_row, jule::Int __param_column, jule::Str __param_kind, jule::Uint __param_id) {
		this->self = jule::Ref<_1b61ec5ec_Token>::make(this, nullptr);

		this->_field_file = __param_file;
		this->_field_row = __param_row;
		this->_field_column = __param_column;
		this->_field_kind = __param_kind;
		this->_field_id = __param_id;
	}

	~_1b61ec5ec_Token(void) { this->self.ref = nullptr; }

	_1b61ec5ec_Token(void) { this->self = jule::Ref<_1b61ec5ec_Token>::make(this, nullptr); }

	inline jule::Int _method_prec(void);


	inline bool operator==(const _1b61ec5ec_Token &_Src) const {
		return 
			this->_field_file == _Src._field_file &&
			this->_field_row == _Src._field_row &&
			this->_field_column == _Src._field_column &&
			this->_field_kind == _Src._field_kind &&
			this->_field_id == _Src._field_id;
	}

	inline bool operator!=(const _1b61ec5ec_Token &_Src) const { return !this->operator==(_Src); }
};


struct _1b61ece27_File {
	jule::Ref<_1b61ece27_File> self{};

	jule::Slice<jule::U8> _field_data{jule::Slice<jule::U8>()};
	jule::Str _field__path{jule::Str()};
	jule::Slice<_1b61ec5ec_Token> _field__tokens{jule::Slice<_1b61ec5ec_Token>()};


	_1b61ece27_File(jule::Slice<jule::U8> __param_data, jule::Str __param__path, jule::Slice<_1b61ec5ec_Token> __param__tokens) {
		this->self = jule::Ref<_1b61ece27_File>::make(this, nullptr);

		this->_field_data = __param_data;
		this->_field__path = __param__path;
		this->_field__tokens = __param__tokens;
	}

	~_1b61ece27_File(void) { this->self.ref = nullptr; }

	_1b61ece27_File(void) { this->self = jule::Ref<_1b61ece27_File>::make(this, nullptr); }

	inline jule::Bool _method_is_ok(void);


	inline void _method_fill(jule::Slice<jule::U8>);


	inline jule::Str _method_path(void);


	inline jule::Str _method_dir(void);


	inline jule::Str _method_name(void);


	inline jule::Uintptr _method_addr(void);


	inline jule::Slice<_1b61ec5ec_Token> _method_tokens(void);


	inline jule::Str _method_get_row(jule::Int);


	inline bool operator==(const _1b61ece27_File &_Src) const {
		return 
			this->_field_data == _Src._field_data &&
			this->_field__path == _Src._field__path &&
			this->_field__tokens == _Src._field__tokens;
	}

	inline bool operator!=(const _1b61ece27_File &_Src) const { return !this->operator==(_Src); }
};


struct _1b62ba104_KindPair {
	jule::Ref<_1b62ba104_KindPair> self{};

	jule::Str _field_kind{jule::Str("::", 2)};
	jule::Uint _field_id{0LLU};


	_1b62ba104_KindPair(jule::Str __param_kind, jule::Uint __param_id) {
		this->self = jule::Ref<_1b62ba104_KindPair>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_id = __param_id;
	}

	~_1b62ba104_KindPair(void) { this->self.ref = nullptr; }

	_1b62ba104_KindPair(void) { this->self = jule::Ref<_1b62ba104_KindPair>::make(this, nullptr); }

	inline bool operator==(const _1b62ba104_KindPair &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_id == _Src._field_id;
	}

	inline bool operator!=(const _1b62ba104_KindPair &_Src) const { return !this->operator==(_Src); }
};


struct _1b62ba104_Lex {
	jule::Ref<_1b62ba104_Lex> self{};

	jule::Slice<_1b61ec5ec_Token> _field_tokens{jule::Slice<_1b61ec5ec_Token>()};
	jule::Ref<_1b61ece27_File> _field_file{jule::Ref<_1b61ece27_File>()};
	jule::Int _field_pos{jule::Int()};
	jule::Int _field_column{jule::Int()};
	jule::Int _field_row{jule::Int()};
	jule::Slice<_1cdeeb191_Log> _field_errors{jule::Slice<_1cdeeb191_Log>()};


	_1b62ba104_Lex(jule::Slice<_1b61ec5ec_Token> __param_tokens, jule::Ref<_1b61ece27_File> __param_file, jule::Int __param_pos, jule::Int __param_column, jule::Int __param_row, jule::Slice<_1cdeeb191_Log> __param_errors) {
		this->self = jule::Ref<_1b62ba104_Lex>::make(this, nullptr);

		this->_field_tokens = __param_tokens;
		this->_field_file = __param_file;
		this->_field_pos = __param_pos;
		this->_field_column = __param_column;
		this->_field_row = __param_row;
		this->_field_errors = __param_errors;
	}

	~_1b62ba104_Lex(void) { this->self.ref = nullptr; }

	_1b62ba104_Lex(void) { this->self = jule::Ref<_1b62ba104_Lex>::make(this, nullptr); }

	inline void _method_push_err(jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_err_tok(_1b61ec5ec_Token&,jule::Str);


	inline void _method_lex(void);


	inline jule::Str _method_id(jule::Slice<jule::U8>&);


	inline jule::Slice<jule::U8> _method_resume(void);


	inline void _method_lex_line_comment(_1b61ec5ec_Token&);


	inline void _method_lex_range_comment(void);


	inline jule::Str _method_num(jule::Slice<jule::U8>&);


	inline jule::Str _method_escape_seq(jule::Slice<jule::U8>&);


	inline jule::Str _method_get_rune(jule::Slice<jule::U8>&,jule::Bool);


	inline jule::Str _method_lex_rune(jule::Slice<jule::U8>&);


	inline jule::Str _method_lex_str(void);


	inline jule::Bool _method_is_first_token_of_line(void);


	inline void _method_new_line(void);


	inline jule::Bool _method_is_op(jule::Slice<jule::U8>&,jule::Str,jule::Uint,_1b61ec5ec_Token&);


	inline jule::Bool _method_lex_basic_ops(jule::Slice<jule::U8>,_1b61ec5ec_Token&);


	inline jule::Bool _method_lex_id(jule::Slice<jule::U8>&,_1b61ec5ec_Token&);


	inline jule::Bool _method_lex_num(jule::Slice<jule::U8>&,_1b61ec5ec_Token&);


	inline _1b61ec5ec_Token _method_token(void);


	inline bool operator==(const _1b62ba104_Lex &_Src) const {
		return 
			this->_field_tokens == _Src._field_tokens &&
			this->_field_file == _Src._field_file &&
			this->_field_pos == _Src._field_pos &&
			this->_field_column == _Src._field_column &&
			this->_field_row == _Src._field_row &&
			this->_field_errors == _Src._field_errors;
	}

	inline bool operator!=(const _1b62ba104_Lex &_Src) const { return !this->operator==(_Src); }
};


struct _1b61d1d62_Ast {
	jule::Ref<_1b61d1d62_Ast> self{};

	jule::Ref<_1b61ece27_File> _field_file{jule::Ref<_1b61ece27_File>()};
	jule::Slice<jule::Ref<_1b61ca014_Directive>> _field_top_directives{jule::Slice<jule::Ref<_1b61ca014_Directive>>()};
	jule::Slice<jule::Ref<_1b61ca014_UseDecl>> _field_use_decls{jule::Slice<jule::Ref<_1b61ca014_UseDecl>>()};
	jule::Slice<jule::Ref<_1b61ca014_Impl>> _field_impls{jule::Slice<jule::Ref<_1b61ca014_Impl>>()};
	jule::Slice<jule::Ref<_1b61ca014_Comment>> _field_comments{jule::Slice<jule::Ref<_1b61ca014_Comment>>()};
	jule::Slice<_1b61ca014_Node> _field_decls{jule::Slice<_1b61ca014_Node>()};


	_1b61d1d62_Ast(jule::Ref<_1b61ece27_File> __param_file, jule::Slice<jule::Ref<_1b61ca014_Directive>> __param_top_directives, jule::Slice<jule::Ref<_1b61ca014_UseDecl>> __param_use_decls, jule::Slice<jule::Ref<_1b61ca014_Impl>> __param_impls, jule::Slice<jule::Ref<_1b61ca014_Comment>> __param_comments, jule::Slice<_1b61ca014_Node> __param_decls) {
		this->self = jule::Ref<_1b61d1d62_Ast>::make(this, nullptr);

		this->_field_file = __param_file;
		this->_field_top_directives = __param_top_directives;
		this->_field_use_decls = __param_use_decls;
		this->_field_impls = __param_impls;
		this->_field_comments = __param_comments;
		this->_field_decls = __param_decls;
	}

	~_1b61d1d62_Ast(void) { this->self.ref = nullptr; }

	_1b61d1d62_Ast(void) { this->self = jule::Ref<_1b61d1d62_Ast>::make(this, nullptr); }

	inline bool operator==(const _1b61d1d62_Ast &_Src) const {
		return 
			this->_field_file == _Src._field_file &&
			this->_field_top_directives == _Src._field_top_directives &&
			this->_field_use_decls == _Src._field_use_decls &&
			this->_field_impls == _Src._field_impls &&
			this->_field_comments == _Src._field_comments &&
			this->_field_decls == _Src._field_decls;
	}

	inline bool operator!=(const _1b61d1d62_Ast &_Src) const { return !this->operator==(_Src); }
};


struct _1b61ca014_CommentGroup {
	jule::Ref<_1b61ca014_CommentGroup> self{};

	jule::Slice<jule::Ref<_1b61ca014_Comment>> _field_comments{jule::Slice<jule::Ref<_1b61ca014_Comment>>()};


	_1b61ca014_CommentGroup(jule::Slice<jule::Ref<_1b61ca014_Comment>> __param_comments) {
		this->self = jule::Ref<_1b61ca014_CommentGroup>::make(this, nullptr);

		this->_field_comments = __param_comments;
	}

	~_1b61ca014_CommentGroup(void) { this->self.ref = nullptr; }

	_1b61ca014_CommentGroup(void) { this->self = jule::Ref<_1b61ca014_CommentGroup>::make(this, nullptr); }

	inline bool operator==(const _1b61ca014_CommentGroup &_Src) const {
		return 
			this->_field_comments == _Src._field_comments;
	}

	inline bool operator!=(const _1b61ca014_CommentGroup &_Src) const { return !this->operator==(_Src); }
};


struct _1b61ca014_NamespaceTypeDecl {
	jule::Ref<_1b61ca014_NamespaceTypeDecl> self{};

	jule::Slice<_1b61ec5ec_Token> _field_idents{jule::Slice<_1b61ec5ec_Token>()};
	jule::Ref<_1b61ca014_IdentTypeDecl> _field_kind{jule::Ref<_1b61ca014_IdentTypeDecl>()};


	_1b61ca014_NamespaceTypeDecl(jule::Slice<_1b61ec5ec_Token> __param_idents, jule::Ref<_1b61ca014_IdentTypeDecl> __param_kind) {
		this->self = jule::Ref<_1b61ca014_NamespaceTypeDecl>::make(this, nullptr);

		this->_field_idents = __param_idents;
		this->_field_kind = __param_kind;
	}

	~_1b61ca014_NamespaceTypeDecl(void) { this->self.ref = nullptr; }

	_1b61ca014_NamespaceTypeDecl(void) { this->self = jule::Ref<_1b61ca014_NamespaceTypeDecl>::make(this, nullptr); }

	inline bool operator==(const _1b61ca014_NamespaceTypeDecl &_Src) const {
		return 
			this->_field_idents == _Src._field_idents &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1b61ca014_NamespaceTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1b61ca014_RefTypeDecl {
	jule::Ref<_1b61ca014_RefTypeDecl> self{};

	jule::Ref<_1b61ca014_TypeDecl> _field_elem{jule::Ref<_1b61ca014_TypeDecl>()};


	_1b61ca014_RefTypeDecl(jule::Ref<_1b61ca014_TypeDecl> __param_elem) {
		this->self = jule::Ref<_1b61ca014_RefTypeDecl>::make(this, nullptr);

		this->_field_elem = __param_elem;
	}

	~_1b61ca014_RefTypeDecl(void) { this->self.ref = nullptr; }

	_1b61ca014_RefTypeDecl(void) { this->self = jule::Ref<_1b61ca014_RefTypeDecl>::make(this, nullptr); }

	inline bool operator==(const _1b61ca014_RefTypeDecl &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _1b61ca014_RefTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1b61ca014_SlcTypeDecl {
	jule::Ref<_1b61ca014_SlcTypeDecl> self{};

	jule::Ref<_1b61ca014_TypeDecl> _field_elem{jule::Ref<_1b61ca014_TypeDecl>()};


	_1b61ca014_SlcTypeDecl(jule::Ref<_1b61ca014_TypeDecl> __param_elem) {
		this->self = jule::Ref<_1b61ca014_SlcTypeDecl>::make(this, nullptr);

		this->_field_elem = __param_elem;
	}

	~_1b61ca014_SlcTypeDecl(void) { this->self.ref = nullptr; }

	_1b61ca014_SlcTypeDecl(void) { this->self = jule::Ref<_1b61ca014_SlcTypeDecl>::make(this, nullptr); }

	inline bool operator==(const _1b61ca014_SlcTypeDecl &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _1b61ca014_SlcTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1b61ca014_TupleTypeDecl {
	jule::Ref<_1b61ca014_TupleTypeDecl> self{};

	jule::Slice<jule::Ref<_1b61ca014_TypeDecl>> _field_types{jule::Slice<jule::Ref<_1b61ca014_TypeDecl>>()};


	_1b61ca014_TupleTypeDecl(jule::Slice<jule::Ref<_1b61ca014_TypeDecl>> __param_types) {
		this->self = jule::Ref<_1b61ca014_TupleTypeDecl>::make(this, nullptr);

		this->_field_types = __param_types;
	}

	~_1b61ca014_TupleTypeDecl(void) { this->self.ref = nullptr; }

	_1b61ca014_TupleTypeDecl(void) { this->self = jule::Ref<_1b61ca014_TupleTypeDecl>::make(this, nullptr); }

	inline bool operator==(const _1b61ca014_TupleTypeDecl &_Src) const {
		return 
			this->_field_types == _Src._field_types;
	}

	inline bool operator!=(const _1b61ca014_TupleTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1b61ca014_PtrTypeDecl {
	jule::Ref<_1b61ca014_PtrTypeDecl> self{};

	jule::Ref<_1b61ca014_TypeDecl> _field_elem{jule::Ref<_1b61ca014_TypeDecl>()};


	_1b61ca014_PtrTypeDecl(jule::Ref<_1b61ca014_TypeDecl> __param_elem) {
		this->self = jule::Ref<_1b61ca014_PtrTypeDecl>::make(this, nullptr);

		this->_field_elem = __param_elem;
	}

	~_1b61ca014_PtrTypeDecl(void) { this->self.ref = nullptr; }

	_1b61ca014_PtrTypeDecl(void) { this->self = jule::Ref<_1b61ca014_PtrTypeDecl>::make(this, nullptr); }

	inline jule::Bool _method_is_unsafe(void);


	inline bool operator==(const _1b61ca014_PtrTypeDecl &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _1b61ca014_PtrTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1b61ca014_ArrTypeDecl {
	jule::Ref<_1b61ca014_ArrTypeDecl> self{};

	jule::Ref<_1b61ca014_TypeDecl> _field_elem{jule::Ref<_1b61ca014_TypeDecl>()};
	jule::Ref<_1b61ca014_Expr> _field_size{jule::Ref<_1b61ca014_Expr>()};


	_1b61ca014_ArrTypeDecl(jule::Ref<_1b61ca014_TypeDecl> __param_elem, jule::Ref<_1b61ca014_Expr> __param_size) {
		this->self = jule::Ref<_1b61ca014_ArrTypeDecl>::make(this, nullptr);

		this->_field_elem = __param_elem;
		this->_field_size = __param_size;
	}

	~_1b61ca014_ArrTypeDecl(void) { this->self.ref = nullptr; }

	_1b61ca014_ArrTypeDecl(void) { this->self = jule::Ref<_1b61ca014_ArrTypeDecl>::make(this, nullptr); }

	inline jule::Bool _method_auto_sized(void);


	inline bool operator==(const _1b61ca014_ArrTypeDecl &_Src) const {
		return 
			this->_field_elem == _Src._field_elem &&
			this->_field_size == _Src._field_size;
	}

	inline bool operator!=(const _1b61ca014_ArrTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1b61ca014_MapTypeDecl {
	jule::Ref<_1b61ca014_MapTypeDecl> self{};

	jule::Ref<_1b61ca014_TypeDecl> _field_key{jule::Ref<_1b61ca014_TypeDecl>()};
	jule::Ref<_1b61ca014_TypeDecl> _field_val{jule::Ref<_1b61ca014_TypeDecl>()};


	_1b61ca014_MapTypeDecl(jule::Ref<_1b61ca014_TypeDecl> __param_key, jule::Ref<_1b61ca014_TypeDecl> __param_val) {
		this->self = jule::Ref<_1b61ca014_MapTypeDecl>::make(this, nullptr);

		this->_field_key = __param_key;
		this->_field_val = __param_val;
	}

	~_1b61ca014_MapTypeDecl(void) { this->self.ref = nullptr; }

	_1b61ca014_MapTypeDecl(void) { this->self = jule::Ref<_1b61ca014_MapTypeDecl>::make(this, nullptr); }

	inline bool operator==(const _1b61ca014_MapTypeDecl &_Src) const {
		return 
			this->_field_key == _Src._field_key &&
			this->_field_val == _Src._field_val;
	}

	inline bool operator!=(const _1b61ca014_MapTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1b61ca014_RetTypeDecl {
	jule::Ref<_1b61ca014_RetTypeDecl> self{};

	jule::Ref<_1b61ca014_TypeDecl> _field_kind{jule::Ref<_1b61ca014_TypeDecl>()};
	jule::Slice<_1b61ec5ec_Token> _field_idents{jule::Slice<_1b61ec5ec_Token>()};


	_1b61ca014_RetTypeDecl(jule::Ref<_1b61ca014_TypeDecl> __param_kind, jule::Slice<_1b61ec5ec_Token> __param_idents) {
		this->self = jule::Ref<_1b61ca014_RetTypeDecl>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_idents = __param_idents;
	}

	~_1b61ca014_RetTypeDecl(void) { this->self.ref = nullptr; }

	_1b61ca014_RetTypeDecl(void) { this->self = jule::Ref<_1b61ca014_RetTypeDecl>::make(this, nullptr); }

	inline bool operator==(const _1b61ca014_RetTypeDecl &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_idents == _Src._field_idents;
	}

	inline bool operator!=(const _1b61ca014_RetTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1b61ca014_TupleExpr {
	jule::Ref<_1b61ca014_TupleExpr> self{};

	jule::Slice<jule::Ref<_1b61ca014_Expr>> _field_expr{jule::Slice<jule::Ref<_1b61ca014_Expr>>()};


	_1b61ca014_TupleExpr(jule::Slice<jule::Ref<_1b61ca014_Expr>> __param_expr) {
		this->self = jule::Ref<_1b61ca014_TupleExpr>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_1b61ca014_TupleExpr(void) { this->self.ref = nullptr; }

	_1b61ca014_TupleExpr(void) { this->self = jule::Ref<_1b61ca014_TupleExpr>::make(this, nullptr); }

	inline bool operator==(const _1b61ca014_TupleExpr &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1b61ca014_TupleExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1b61ca014_CastExpr {
	jule::Ref<_1b61ca014_CastExpr> self{};

	jule::Ref<_1b61ca014_TypeDecl> _field_kind{jule::Ref<_1b61ca014_TypeDecl>()};
	jule::Any _field_expr{jule::Any()};


	_1b61ca014_CastExpr(jule::Ref<_1b61ca014_TypeDecl> __param_kind, jule::Any __param_expr) {
		this->self = jule::Ref<_1b61ca014_CastExpr>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_expr = __param_expr;
	}

	~_1b61ca014_CastExpr(void) { this->self.ref = nullptr; }

	_1b61ca014_CastExpr(void) { this->self = jule::Ref<_1b61ca014_CastExpr>::make(this, nullptr); }

	inline bool operator==(const _1b61ca014_CastExpr &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1b61ca014_CastExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1b61ca014_StructLit {
	jule::Ref<_1b61ca014_StructLit> self{};

	jule::Ref<_1b61ca014_TypeDecl> _field_kind{jule::Ref<_1b61ca014_TypeDecl>()};
	jule::Slice<jule::Any> _field_exprs{jule::Slice<jule::Any>()};


	_1b61ca014_StructLit(jule::Ref<_1b61ca014_TypeDecl> __param_kind, jule::Slice<jule::Any> __param_exprs) {
		this->self = jule::Ref<_1b61ca014_StructLit>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_exprs = __param_exprs;
	}

	~_1b61ca014_StructLit(void) { this->self.ref = nullptr; }

	_1b61ca014_StructLit(void) { this->self = jule::Ref<_1b61ca014_StructLit>::make(this, nullptr); }

	inline bool operator==(const _1b61ca014_StructLit &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_exprs == _Src._field_exprs;
	}

	inline bool operator!=(const _1b61ca014_StructLit &_Src) const { return !this->operator==(_Src); }
};


struct _1b61ca014_ScopeTree {
	jule::Ref<_1b61ca014_ScopeTree> self{};

	jule::Ref<_1b61ca014_ScopeTree> _field_parent{jule::Ref<_1b61ca014_ScopeTree>()};
	jule::Bool _field_unsafety{jule::Bool()};
	jule::Bool _field_deferred{jule::Bool()};
	jule::Slice<jule::Any> _field_stmts{jule::Slice<jule::Any>()};


	_1b61ca014_ScopeTree(jule::Ref<_1b61ca014_ScopeTree> __param_parent, jule::Bool __param_unsafety, jule::Bool __param_deferred, jule::Slice<jule::Any> __param_stmts) {
		this->self = jule::Ref<_1b61ca014_ScopeTree>::make(this, nullptr);

		this->_field_parent = __param_parent;
		this->_field_unsafety = __param_unsafety;
		this->_field_deferred = __param_deferred;
		this->_field_stmts = __param_stmts;
	}

	~_1b61ca014_ScopeTree(void) { this->self.ref = nullptr; }

	_1b61ca014_ScopeTree(void) { this->self = jule::Ref<_1b61ca014_ScopeTree>::make(this, nullptr); }

	inline bool operator==(const _1b61ca014_ScopeTree &_Src) const {
		return 
			this->_field_parent == _Src._field_parent &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_deferred == _Src._field_deferred &&
			this->_field_stmts == _Src._field_stmts;
	}

	inline bool operator!=(const _1b61ca014_ScopeTree &_Src) const { return !this->operator==(_Src); }
};


struct _1b61ca014_Conditional {
	jule::Ref<_1b61ca014_Conditional> self{};

	jule::Ref<_1b61ca014_If> _field_head{jule::Ref<_1b61ca014_If>()};
	jule::Slice<jule::Ref<_1b61ca014_If>> _field_tail{jule::Slice<jule::Ref<_1b61ca014_If>>()};
	jule::Ref<_1b61ca014_Else> _field_default{jule::Ref<_1b61ca014_Else>()};


	_1b61ca014_Conditional(jule::Ref<_1b61ca014_If> __param_head, jule::Slice<jule::Ref<_1b61ca014_If>> __param_tail, jule::Ref<_1b61ca014_Else> __param_default) {
		this->self = jule::Ref<_1b61ca014_Conditional>::make(this, nullptr);

		this->_field_head = __param_head;
		this->_field_tail = __param_tail;
		this->_field_default = __param_default;
	}

	~_1b61ca014_Conditional(void) { this->self.ref = nullptr; }

	_1b61ca014_Conditional(void) { this->self = jule::Ref<_1b61ca014_Conditional>::make(this, nullptr); }

	inline bool operator==(const _1b61ca014_Conditional &_Src) const {
		return 
			this->_field_head == _Src._field_head &&
			this->_field_tail == _Src._field_tail &&
			this->_field_default == _Src._field_default;
	}

	inline bool operator!=(const _1b61ca014_Conditional &_Src) const { return !this->operator==(_Src); }
};


struct _1a9b97966_FileInfo {
	jule::Ref<_1a9b97966_FileInfo> self{};

	jule::Ref<_1b61d1d62_Ast> _field_ast{jule::Ref<_1b61d1d62_Ast>()};
	jule::Slice<_1cdeeb191_Log> _field_errors{jule::Slice<_1cdeeb191_Log>()};


	_1a9b97966_FileInfo(jule::Ref<_1b61d1d62_Ast> __param_ast, jule::Slice<_1cdeeb191_Log> __param_errors) {
		this->self = jule::Ref<_1a9b97966_FileInfo>::make(this, nullptr);

		this->_field_ast = __param_ast;
		this->_field_errors = __param_errors;
	}

	~_1a9b97966_FileInfo(void) { this->self.ref = nullptr; }

	_1a9b97966_FileInfo(void) { this->self = jule::Ref<_1a9b97966_FileInfo>::make(this, nullptr); }

	inline bool operator==(const _1a9b97966_FileInfo &_Src) const {
		return 
			this->_field_ast == _Src._field_ast &&
			this->_field_errors == _Src._field_errors;
	}

	inline bool operator!=(const _1a9b97966_FileInfo &_Src) const { return !this->operator==(_Src); }
};


struct _1a9b97966_PackageInfo {
	jule::Ref<_1a9b97966_PackageInfo> self{};

	jule::Slice<jule::Ref<_1a9b97966_FileInfo>> _field_files{jule::Slice<jule::Ref<_1a9b97966_FileInfo>>()};


	_1a9b97966_PackageInfo(jule::Slice<jule::Ref<_1a9b97966_FileInfo>> __param_files) {
		this->self = jule::Ref<_1a9b97966_PackageInfo>::make(this, nullptr);

		this->_field_files = __param_files;
	}

	~_1a9b97966_PackageInfo(void) { this->self.ref = nullptr; }

	_1a9b97966_PackageInfo(void) { this->self = jule::Ref<_1a9b97966_PackageInfo>::make(this, nullptr); }

	inline bool operator==(const _1a9b97966_PackageInfo &_Src) const {
		return 
			this->_field_files == _Src._field_files;
	}

	inline bool operator!=(const _1a9b97966_PackageInfo &_Src) const { return !this->operator==(_Src); }
};


struct _1a9b97a76_Stmt {
	jule::Ref<_1a9b97a76_Stmt> self{};

	jule::Slice<_1b61ec5ec_Token> _field_tokens{jule::Slice<_1b61ec5ec_Token>()};
	jule::Bool _field_terminated{jule::Bool()};


	_1a9b97a76_Stmt(jule::Slice<_1b61ec5ec_Token> __param_tokens, jule::Bool __param_terminated) {
		this->self = jule::Ref<_1a9b97a76_Stmt>::make(this, nullptr);

		this->_field_tokens = __param_tokens;
		this->_field_terminated = __param_terminated;
	}

	~_1a9b97a76_Stmt(void) { this->self.ref = nullptr; }

	_1a9b97a76_Stmt(void) { this->self = jule::Ref<_1a9b97a76_Stmt>::make(this, nullptr); }

	inline bool operator==(const _1a9b97a76_Stmt &_Src) const {
		return 
			this->_field_tokens == _Src._field_tokens &&
			this->_field_terminated == _Src._field_terminated;
	}

	inline bool operator!=(const _1a9b97a76_Stmt &_Src) const { return !this->operator==(_Src); }
};


struct _1a9b97a76_ScopeParser {
	jule::Ref<_1a9b97a76_ScopeParser> self{};

	jule::Ref<_1a9e07434_Parser> _field_p{jule::Ref<_1a9e07434_Parser>()};
	jule::Ref<_1b61ca014_ScopeTree> _field_s{jule::Ref<_1b61ca014_ScopeTree>()};
	jule::Slice<jule::Ref<_1a9b97a76_Stmt>> _field_stms{jule::Slice<jule::Ref<_1a9b97a76_Stmt>>()};
	jule::Int _field_pos{jule::Int()};


	_1a9b97a76_ScopeParser(jule::Ref<_1a9e07434_Parser> __param_p, jule::Ref<_1b61ca014_ScopeTree> __param_s, jule::Slice<jule::Ref<_1a9b97a76_Stmt>> __param_stms, jule::Int __param_pos) {
		this->self = jule::Ref<_1a9b97a76_ScopeParser>::make(this, nullptr);

		this->_field_p = __param_p;
		this->_field_s = __param_s;
		this->_field_stms = __param_stms;
		this->_field_pos = __param_pos;
	}

	~_1a9b97a76_ScopeParser(void) { this->self.ref = nullptr; }

	_1a9b97a76_ScopeParser(void) { this->self = jule::Ref<_1a9b97a76_ScopeParser>::make(this, nullptr); }

	inline void _method_stop(void);


	inline jule::Bool _method_stopped(void);


	inline jule::Bool _method_finished(void);


	inline jule::Bool _method_is_last_st(void);


	inline void _method_push_err(_1b61ec5ec_Token,jule::Str);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline void _method_insert_as_next(jule::Slice<_1b61ec5ec_Token>&);


	inline jule::Ref<_1a9b97a76_Stmt> _method_next(void);


	inline jule::Ref<_1b61ca014_ScopeTree> _method_build_scope(jule::Slice<_1b61ec5ec_Token>&);


	inline jule::Any _method_build_var_st(jule::Slice<_1b61ec5ec_Token>&);


	inline jule::Any _method_build_ret_st(jule::Slice<_1b61ec5ec_Token>);


	inline jule::Any _method_build_while_next_iter(jule::Ref<_1a9b97a76_Stmt>&);


	inline jule::Ref<_1b61ca014_WhileKind> _method_build_while_iter_kind(jule::Slice<_1b61ec5ec_Token>&);


	inline jule::Slice<jule::Slice<_1b61ec5ec_Token>> _method_get_range_kind_keys_tokens(jule::Slice<_1b61ec5ec_Token>&);


	inline jule::Ref<_1b61ca014_VarDecl> _method_build_range_kind_key(jule::Slice<_1b61ec5ec_Token>&);


	inline jule::Slice<jule::Ref<_1b61ca014_VarDecl>> _method_build_range_kind_keys(jule::Slice<jule::Slice<_1b61ec5ec_Token>>&);


	inline void _method_setup_range_kind_keys_plain(jule::Ref<_1b61ca014_RangeKind>&,jule::Slice<_1b61ec5ec_Token>&);


	inline void _method_setup_range_kind_keys_explicit(jule::Ref<_1b61ca014_RangeKind>&,jule::Slice<_1b61ec5ec_Token>&);


	inline void _method_setup_range_kind_keys(jule::Ref<_1b61ca014_RangeKind>&,jule::Slice<_1b61ec5ec_Token>&);


	inline jule::Ref<_1b61ca014_RangeKind> _method_build_range_iter_kind(jule::Slice<_1b61ec5ec_Token>&,jule::Slice<_1b61ec5ec_Token>&,_1b61ec5ec_Token&);


	inline jule::Any _method_build_common_iter_kind(jule::Slice<_1b61ec5ec_Token>&,_1b61ec5ec_Token&);


	inline jule::Any _method_build_common_iter(jule::Slice<_1b61ec5ec_Token>);


	inline jule::Any _method_buid_iter_st(jule::Ref<_1a9b97a76_Stmt>&);


	inline jule::Any _method_build_break_st(jule::Slice<_1b61ec5ec_Token>&);


	inline jule::Any _method_build_cont_st(jule::Slice<_1b61ec5ec_Token>&);


	inline jule::Ref<_1b61ca014_If> _method_build_if(jule::Slice<_1b61ec5ec_Token>&);


	inline jule::Ref<_1b61ca014_Else> _method_build_else(jule::Slice<_1b61ec5ec_Token>&);


	inline jule::Any _method_build_if_else_chain(jule::Slice<_1b61ec5ec_Token>);


	inline jule::Any _method_build_comment_st(_1b61ec5ec_Token&);


	inline jule::Any _method_build_call_st(jule::Slice<_1b61ec5ec_Token>&);


	inline jule::Any _method_build_co_call_st(jule::Slice<_1b61ec5ec_Token>);


	inline jule::Any _method_build_goto_st(jule::Slice<_1b61ec5ec_Token>&);


	inline jule::Any _method_build_fall_st(jule::Slice<_1b61ec5ec_Token>&);


	inline jule::Any _method_build_type_alias_st(jule::Slice<_1b61ec5ec_Token>&);


	inline void _method_push_case_expr(jule::Slice<_1b61ec5ec_Token>,_1b61ec5ec_Token,jule::Bool,jule::Slice<jule::Ref<_1b61ca014_Expr>>&);


	inline jule::Slice<jule::Ref<_1b61ca014_Expr>> _method_build_case_exprs(jule::Slice<_1b61ec5ec_Token>&,jule::Bool);


	inline jule::Ref<_1b61ca014_ScopeTree> _method_build_case_scope(jule::Slice<_1b61ec5ec_Token>&);


	inline std::tuple<jule::Ref<_1b61ca014_Case>,jule::Bool> _method_build_case(jule::Slice<_1b61ec5ec_Token>&,jule::Bool);


	inline std::tuple<jule::Slice<jule::Ref<_1b61ca014_Case>>,jule::Ref<_1b61ca014_Else>> _method_build_cases(jule::Slice<_1b61ec5ec_Token>,jule::Bool);


	inline jule::Ref<_1b61ca014_MatchCase> _method_build_match_case(jule::Slice<_1b61ec5ec_Token>);


	inline jule::Ref<_1b61ca014_ScopeTree> _method_build_scope_st(jule::Slice<_1b61ec5ec_Token>);


	inline jule::Ref<_1b61ca014_LabelSt> _method_build_label_st(jule::Slice<_1b61ec5ec_Token>&);


	inline std::tuple<jule::Any,jule::Bool> _method_build_id_st(jule::Slice<_1b61ec5ec_Token>&);


	inline jule::Ref<_1a9e07148_AssignInfo> _method_build_assign_info(jule::Slice<_1b61ec5ec_Token>&);


	inline jule::Ref<_1b61ca014_AssignLeft> _method_build_assign_l(jule::Slice<_1b61ec5ec_Token>&);


	inline jule::Slice<jule::Ref<_1b61ca014_AssignLeft>> _method_build_assign_ls(jule::Slice<jule::Slice<_1b61ec5ec_Token>>&);


	inline std::tuple<jule::Ref<_1b61ca014_AssignSt>,jule::Bool> _method_build_plain_assign(jule::Slice<_1b61ec5ec_Token>&);


	inline std::tuple<jule::Ref<_1b61ca014_AssignSt>,jule::Bool> _method_build_decl_assign(jule::Slice<_1b61ec5ec_Token>);


	inline std::tuple<jule::Ref<_1b61ca014_AssignSt>,jule::Bool> _method_build_assign_st(jule::Slice<_1b61ec5ec_Token>&);


	inline jule::Any _method_build_st(jule::Ref<_1a9b97a76_Stmt>&);


	inline void _method_build(jule::Slice<_1b61ec5ec_Token>&,jule::Ref<_1b61ca014_ScopeTree>&);


	inline bool operator==(const _1a9b97a76_ScopeParser &_Src) const {
		return 
			this->_field_p == _Src._field_p &&
			this->_field_s == _Src._field_s &&
			this->_field_stms == _Src._field_stms &&
			this->_field_pos == _Src._field_pos;
	}

	inline bool operator!=(const _1a9b97a76_ScopeParser &_Src) const { return !this->operator==(_Src); }
};


struct _1a9ba6854_CallData {
	jule::Ref<_1a9ba6854_CallData> self{};

	jule::Slice<_1b61ec5ec_Token> _field_expr_tokens{jule::Slice<_1b61ec5ec_Token>()};
	jule::Slice<_1b61ec5ec_Token> _field_args_tokens{jule::Slice<_1b61ec5ec_Token>()};
	jule::Slice<_1b61ec5ec_Token> _field_generics_tokens{jule::Slice<_1b61ec5ec_Token>()};


	_1a9ba6854_CallData(jule::Slice<_1b61ec5ec_Token> __param_expr_tokens, jule::Slice<_1b61ec5ec_Token> __param_args_tokens, jule::Slice<_1b61ec5ec_Token> __param_generics_tokens) {
		this->self = jule::Ref<_1a9ba6854_CallData>::make(this, nullptr);

		this->_field_expr_tokens = __param_expr_tokens;
		this->_field_args_tokens = __param_args_tokens;
		this->_field_generics_tokens = __param_generics_tokens;
	}

	~_1a9ba6854_CallData(void) { this->self.ref = nullptr; }

	_1a9ba6854_CallData(void) { this->self = jule::Ref<_1a9ba6854_CallData>::make(this, nullptr); }

	inline bool operator==(const _1a9ba6854_CallData &_Src) const {
		return 
			this->_field_expr_tokens == _Src._field_expr_tokens &&
			this->_field_args_tokens == _Src._field_args_tokens &&
			this->_field_generics_tokens == _Src._field_generics_tokens;
	}

	inline bool operator!=(const _1a9ba6854_CallData &_Src) const { return !this->operator==(_Src); }
};


struct _1a9ba6854_Precedencer {
	jule::Ref<_1a9ba6854_Precedencer> self{};

	jule::Slice<jule::Slice<jule::Any>> _field_pairs{jule::Slice<jule::Slice<jule::Any>>()};


	_1a9ba6854_Precedencer(jule::Slice<jule::Slice<jule::Any>> __param_pairs) {
		this->self = jule::Ref<_1a9ba6854_Precedencer>::make(this, nullptr);

		this->_field_pairs = __param_pairs;
	}

	~_1a9ba6854_Precedencer(void) { this->self.ref = nullptr; }

	_1a9ba6854_Precedencer(void) { this->self = jule::Ref<_1a9ba6854_Precedencer>::make(this, nullptr); }

	inline void _method_set(jule::Int,jule::Any);


	inline jule::Any _method_get_lower(void);


	inline bool operator==(const _1a9ba6854_Precedencer &_Src) const {
		return 
			this->_field_pairs == _Src._field_pairs;
	}

	inline bool operator!=(const _1a9ba6854_Precedencer &_Src) const { return !this->operator==(_Src); }
};


struct _1a9ba6854_ExprBuilder {
	jule::Ref<_1a9ba6854_ExprBuilder> self{};

	jule::Ref<_1a9e07434_Parser> _field_p{jule::Ref<_1a9e07434_Parser>()};


	_1a9ba6854_ExprBuilder(jule::Ref<_1a9e07434_Parser> __param_p) {
		this->self = jule::Ref<_1a9ba6854_ExprBuilder>::make(this, nullptr);

		this->_field_p = __param_p;
	}

	~_1a9ba6854_ExprBuilder(void) { this->self.ref = nullptr; }

	_1a9ba6854_ExprBuilder(void) { this->self = jule::Ref<_1a9ba6854_ExprBuilder>::make(this, nullptr); }

	inline void _method_push_err(_1b61ec5ec_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline jule::Ref<_1b61ca014_TupleExpr> _method_build_tuple(jule::Slice<jule::Slice<_1b61ec5ec_Token>>&);


	inline jule::Ref<_1b61ca014_LitExpr> _method_build_lit(_1b61ec5ec_Token);


	inline jule::Ref<_1b61ca014_TypeDecl> _method_build_primitive_type(_1b61ec5ec_Token&);


	inline jule::Any _method_build_single(_1b61ec5ec_Token);


	inline jule::Ref<_1b61ca014_IdentExpr> _method_build_cpp_linked_ident(jule::Slice<_1b61ec5ec_Token>&);


	inline jule::Ref<_1b61ca014_UnaryExpr> _method_build_unary(jule::Slice<_1b61ec5ec_Token>);


	inline jule::Ref<_1b61ca014_SubIdentExpr> _method_build_obj_sub_ident(jule::Slice<_1b61ec5ec_Token>);


	inline jule::Ref<_1b61ca014_NsSelectionExpr> _method_build_ns_sub_ident(jule::Slice<_1b61ec5ec_Token>&);


	inline jule::Ref<_1b61ca014_TypeDecl> _method_build_type(jule::Slice<_1b61ec5ec_Token>&);


	inline jule::Any _method_build_sub_ident(jule::Slice<_1b61ec5ec_Token>&);


	inline jule::Ref<_1b61ca014_VariadicExpr> _method_build_variadic(jule::Slice<_1b61ec5ec_Token>);


	inline jule::Any _method_build_op_right(jule::Slice<_1b61ec5ec_Token>&);


	inline jule::Any _method_build_between_parentheses(jule::Slice<_1b61ec5ec_Token>);


	inline jule::Ref<_1b61ca014_CastExpr> _method_try_build_cast(jule::Slice<_1b61ec5ec_Token>&);


	inline void _method_push_arg(jule::Slice<jule::Ref<_1b61ca014_Expr>>&,jule::Slice<_1b61ec5ec_Token>,_1b61ec5ec_Token);


	inline jule::Slice<jule::Ref<_1b61ca014_Expr>> _method_build_args(jule::Slice<_1b61ec5ec_Token>);


	inline jule::Slice<jule::Ref<_1b61ca014_TypeDecl>> _method_build_call_generics(jule::Slice<_1b61ec5ec_Token>);


	inline jule::Ref<_1b61ca014_FnCallExpr> _method_build_fn_call(_1b61ec5ec_Token&,jule::Ref<_1a9ba6854_CallData>&);


	inline jule::Any _method_build_parentheses_range(jule::Slice<_1b61ec5ec_Token>&);


	inline jule::Ref<_1b61ca014_UnsafeExpr> _method_build_unsafe_expr(jule::Slice<_1b61ec5ec_Token>);


	inline jule::Ref<_1b61ca014_FnDecl> _method_build_anon_fn(jule::Slice<_1b61ec5ec_Token>&);


	inline jule::Any _method_build_unsafe(jule::Slice<_1b61ec5ec_Token>&);


	inline void _method_push_range_lit_part(jule::Slice<_1b61ec5ec_Token>,_1b61ec5ec_Token,jule::Slice<jule::Slice<_1b61ec5ec_Token>>&);


	inline jule::Slice<jule::Slice<_1b61ec5ec_Token>> _method_get_brace_range_lit_expr_parts(jule::Slice<_1b61ec5ec_Token>);


	inline jule::Ref<_1b61ca014_FieldExprPair> _method_build_field_expr_pair(jule::Slice<_1b61ec5ec_Token>);


	inline jule::Any _method_build_struct_lit_expr(jule::Slice<_1b61ec5ec_Token>&);


	inline jule::Slice<jule::Any> _method_build_struct_lit_exprs(jule::Slice<_1b61ec5ec_Token>&);


	inline jule::Ref<_1b61ca014_StructLit> _method_build_typed_struct_literal(jule::Slice<_1b61ec5ec_Token>);


	inline jule::Any _method_build_brace_lit_part(jule::Slice<_1b61ec5ec_Token>&);


	inline jule::Ref<_1b61ca014_BraceLit> _method_build_brace_lit(jule::Slice<_1b61ec5ec_Token>&);


	inline jule::Any _method_build_brace_range(jule::Slice<_1b61ec5ec_Token>&);


	inline jule::Slice<jule::Slice<_1b61ec5ec_Token>> _method_get_enumerable_parts(jule::Slice<_1b61ec5ec_Token>);


	inline jule::Ref<_1b61ca014_SliceExpr> _method_build_slice(jule::Slice<_1b61ec5ec_Token>);


	inline jule::Ref<_1b61ca014_IndexingExpr> _method_build_indexing(jule::Slice<_1b61ec5ec_Token>,jule::Slice<_1b61ec5ec_Token>,_1b61ec5ec_Token);


	inline jule::Ref<_1b61ca014_SlicingExpr> _method_build_slicing(jule::Slice<_1b61ec5ec_Token>&,jule::Slice<_1b61ec5ec_Token>&,jule::Int&,_1b61ec5ec_Token&);


	inline jule::Any _method_build_bracket_range(jule::Slice<_1b61ec5ec_Token>);


	inline jule::Any _method_build_ternary(jule::Slice<_1b61ec5ec_Token>);


	inline jule::Any _method_build_data(jule::Slice<_1b61ec5ec_Token>&);


	inline jule::Ref<_1b61ca014_BinopExpr> _method_build_binop(jule::Slice<_1b61ec5ec_Token>&,jule::Int);


	inline jule::Any _method_build(jule::Slice<_1b61ec5ec_Token>&);


	inline jule::Any _method_build_kind(jule::Slice<_1b61ec5ec_Token>&);


	inline jule::Ref<_1b61ca014_Expr> _method_build_from_tokens(jule::Slice<_1b61ec5ec_Token>);


	inline bool operator==(const _1a9ba6854_ExprBuilder &_Src) const {
		return 
			this->_field_p == _Src._field_p;
	}

	inline bool operator!=(const _1a9ba6854_ExprBuilder &_Src) const { return !this->operator==(_Src); }
};


struct _1a9e07434_Parser {
	jule::Ref<_1a9e07434_Parser> self{};

	jule::Ref<_1b61d1d62_Ast> _field_ast{jule::Ref<_1b61d1d62_Ast>()};
	jule::Slice<jule::Ref<_1b61ca014_Directive>> _field_directives{jule::Slice<jule::Ref<_1b61ca014_Directive>>()};
	jule::Ref<_1b61ca014_CommentGroup> _field_comment_group{jule::Ref<_1b61ca014_CommentGroup>()};
	jule::Slice<_1cdeeb191_Log> _field_errors{jule::Slice<_1cdeeb191_Log>()};


	_1a9e07434_Parser(jule::Ref<_1b61d1d62_Ast> __param_ast, jule::Slice<jule::Ref<_1b61ca014_Directive>> __param_directives, jule::Ref<_1b61ca014_CommentGroup> __param_comment_group, jule::Slice<_1cdeeb191_Log> __param_errors) {
		this->self = jule::Ref<_1a9e07434_Parser>::make(this, nullptr);

		this->_field_ast = __param_ast;
		this->_field_directives = __param_directives;
		this->_field_comment_group = __param_comment_group;
		this->_field_errors = __param_errors;
	}

	~_1a9e07434_Parser(void) { this->self.ref = nullptr; }

	_1a9e07434_Parser(void) { this->self = jule::Ref<_1a9e07434_Parser>::make(this, nullptr); }

	inline void _method_stop(void);


	inline jule::Bool _method_stopped(void);


	inline void _method_push_err(_1b61ec5ec_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline jule::Ref<_1b61ca014_Expr> _method_build_expr(jule::Slice<_1b61ec5ec_Token>&);


	inline jule::Ref<_1b61ca014_Directive> _method_get_directive(jule::Ref<_1b61ca014_Comment>);


	inline void _method_push_directive(jule::Ref<_1b61ca014_Comment>&);


	inline void _method_process_comment(jule::Ref<_1b61ca014_Comment>&);


	inline jule::Ref<_1b61ca014_ScopeTree> _method_build_scope(jule::Slice<_1b61ec5ec_Token>&);


	inline std::tuple<jule::Ref<_1b61ca014_TypeDecl>,jule::Bool> _method___build_type(jule::Slice<_1b61ec5ec_Token>&,jule::Int*,jule::Bool);


	inline std::tuple<jule::Ref<_1b61ca014_TypeDecl>,jule::Bool> _method_build_type(jule::Slice<_1b61ec5ec_Token>&,jule::Int*,jule::Bool);


	inline jule::Ref<_1b61ca014_TypeAliasDecl> _method_build_type_alias_decl(jule::Slice<_1b61ec5ec_Token>&);


	inline void _method_build_var_type_and_expr(jule::Ref<_1b61ca014_VarDecl>&,jule::Slice<_1b61ec5ec_Token>&);


	inline void _method_build_var_common(jule::Ref<_1b61ca014_VarDecl>&,jule::Slice<_1b61ec5ec_Token>);


	inline void _method_build_var_begin(jule::Ref<_1b61ca014_VarDecl>&,jule::Ref<jule::Int>,jule::Slice<_1b61ec5ec_Token>&);


	inline jule::Ref<_1b61ca014_VarDecl> _method_build_var(jule::Slice<_1b61ec5ec_Token>);


	inline jule::Ref<_1b61ca014_GenericDecl> _method_build_generic(jule::Slice<_1b61ec5ec_Token>&);


	inline jule::Slice<jule::Ref<_1b61ca014_GenericDecl>> _method_build_generics(jule::Slice<_1b61ec5ec_Token>&,_1b61ec5ec_Token&);


	inline jule::Ref<_1b61ca014_ParamDecl> _method_build_self_param(jule::Slice<_1b61ec5ec_Token>);


	inline void _method_param_type_begin(jule::Ref<_1b61ca014_ParamDecl>&,jule::Int&,jule::Slice<_1b61ec5ec_Token>&);


	inline void _method_build_param_type(jule::Ref<_1b61ca014_ParamDecl>&,jule::Slice<_1b61ec5ec_Token>&);


	inline void _method_param_body_id(jule::Ref<_1b61ca014_ParamDecl>,_1b61ec5ec_Token);


	inline void _method_build_param_body(jule::Ref<_1b61ca014_ParamDecl>&,jule::Ref<jule::Int>,jule::Slice<_1b61ec5ec_Token>);


	inline jule::Ref<_1b61ca014_ParamDecl> _method_build_param(jule::Slice<_1b61ec5ec_Token>);


	inline void _method_check_params(jule::Slice<jule::Ref<_1b61ca014_ParamDecl>>&);


	inline jule::Slice<jule::Ref<_1b61ca014_ParamDecl>> _method_build_params(jule::Slice<_1b61ec5ec_Token>&,jule::Bool);


	inline std::tuple<jule::Ref<_1b61ca014_RetTypeDecl>,jule::Bool> _method_build_multi_ret_type(jule::Slice<_1b61ec5ec_Token>&,jule::Int&);


	inline std::tuple<jule::Ref<_1b61ca014_RetTypeDecl>,jule::Bool> _method_build_ret_type(jule::Slice<_1b61ec5ec_Token>&,jule::Int&);


	inline jule::Ref<_1b61ca014_FnDecl> _method_build_fn_prototype(jule::Slice<_1b61ec5ec_Token>&,jule::Int&,jule::Bool);


	inline jule::Ref<_1b61ca014_FnDecl> _method_build_fn(jule::Slice<_1b61ec5ec_Token>&,jule::Bool,jule::Bool);


	inline jule::Slice<_1b61ec5ec_Token> _method_get_use_decl_selectors(jule::Slice<_1b61ec5ec_Token>);


	inline void _method_build_cpp_use_decl(jule::Ref<_1b61ca014_UseDecl>&,jule::Slice<_1b61ec5ec_Token>&);


	inline void _method_build_std_use_decl(jule::Ref<_1b61ca014_UseDecl>&,jule::Slice<_1b61ec5ec_Token>);


	inline void _method_build_ident_use_decl(jule::Ref<_1b61ca014_UseDecl>&,jule::Slice<_1b61ec5ec_Token>);


	inline void _method_parse_use_decl(jule::Ref<_1b61ca014_UseDecl>&,jule::Slice<_1b61ec5ec_Token>);


	inline jule::Ref<_1b61ca014_UseDecl> _method_build_use_decl(jule::Slice<_1b61ec5ec_Token>,jule::Bool);


	inline jule::Ref<_1b61ca014_Expr> _method_build_enum_item_expr(jule::Ref<jule::Int>,jule::Slice<_1b61ec5ec_Token>&);


	inline jule::Slice<jule::Ref<_1b61ca014_EnumItemDecl>> _method_build_enum_items(jule::Slice<_1b61ec5ec_Token>&);


	inline jule::Ref<_1b61ca014_EnumDecl> _method_build_enum_decl(jule::Slice<_1b61ec5ec_Token>&);


	inline jule::Ref<_1b61ca014_FieldDecl> _method_build_field(jule::Slice<_1b61ec5ec_Token>);


	inline jule::Slice<jule::Ref<_1b61ca014_FieldDecl>> _method_build_struct_decl_fields(jule::Slice<_1b61ec5ec_Token>);


	inline jule::Ref<_1b61ca014_StructDecl> _method_build_struct_decl(jule::Slice<_1b61ec5ec_Token>&);


	inline void _method_check_method_receiver(jule::Ref<_1b61ca014_FnDecl>&);


	inline jule::Slice<jule::Ref<_1b61ca014_FnDecl>> _method_build_trait_methods(jule::Slice<_1b61ec5ec_Token>);


	inline jule::Ref<_1b61ca014_TraitDecl> _method_build_trait_decl(jule::Slice<_1b61ec5ec_Token>&);


	inline jule::Ref<_1b61ca014_FnDecl> _method_build_cpp_link_fn(jule::Slice<_1b61ec5ec_Token>);


	inline jule::Ref<_1b61ca014_VarDecl> _method_build_cpp_link_var(jule::Slice<_1b61ec5ec_Token>);


	inline jule::Ref<_1b61ca014_StructDecl> _method_build_cpp_link_struct(jule::Slice<_1b61ec5ec_Token>);


	inline jule::Ref<_1b61ca014_TypeAliasDecl> _method_build_cpp_link_type_alias(jule::Slice<_1b61ec5ec_Token>);


	inline jule::Ref<_1b61ca014_UseDecl> _method_build_cpp_link_use(jule::Slice<_1b61ec5ec_Token>);


	inline jule::Any _method_build_cpp_link(jule::Slice<_1b61ec5ec_Token>&);


	inline jule::Ref<_1b61ca014_FnDecl> _method_get_method(jule::Slice<_1b61ec5ec_Token>&);


	inline void _method_parse_impl_trait(jule::Ref<_1b61ca014_Impl>&,jule::Slice<_1b61ec5ec_Token>);


	inline void _method_parse_impl_struct(jule::Ref<_1b61ca014_Impl>&,jule::Slice<_1b61ec5ec_Token>);


	inline void _method_parse_impl_body(jule::Ref<_1b61ca014_Impl>&,jule::Slice<_1b61ec5ec_Token>&);


	inline jule::Ref<_1b61ca014_Impl> _method_build_impl(jule::Slice<_1b61ec5ec_Token>);


	inline jule::Any _method_build_node_data(jule::Slice<_1b61ec5ec_Token>&);


	inline void _method_check_comment_group(_1b61ca014_Node&);


	inline void _method_check_directive(_1b61ca014_Node&);


	inline void _method_apply_meta(_1b61ca014_Node&,jule::Bool);


	inline void _method_check_use_decl(_1b61ca014_Node&);


	inline std::tuple<jule::Bool,jule::Any> _method_build_general_scope_node_data(jule::Slice<_1b61ec5ec_Token>);


	inline _1b61ca014_Node _method_parse_node(jule::Slice<_1b61ec5ec_Token>&);


	inline void _method_append_node(jule::Slice<_1b61ec5ec_Token>&);


	inline void _method_remove_range(jule::Int,jule::Str,jule::Slice<_1b61ec5ec_Token>&,jule::Slice<jule::Int>&);


	inline void _method_push_wrong_order_close_err(_1b61ec5ec_Token&,jule::Slice<_1b61ec5ec_Token>&,jule::Slice<jule::Int>&);


	inline void _method_push_range_close(_1b61ec5ec_Token,jule::Str,jule::Slice<_1b61ec5ec_Token>&,jule::Slice<jule::Int>&);


	inline void _method_check_ranges(jule::Slice<_1b61ec5ec_Token>&);


	inline void _method_parse(jule::Ref<_1b61ece27_File>&);


	inline bool operator==(const _1a9e07434_Parser &_Src) const {
		return 
			this->_field_ast == _Src._field_ast &&
			this->_field_directives == _Src._field_directives &&
			this->_field_comment_group == _Src._field_comment_group &&
			this->_field_errors == _Src._field_errors;
	}

	inline bool operator!=(const _1a9e07434_Parser &_Src) const { return !this->operator==(_Src); }
};


struct _1b5d9c0c1_TypeBuilder {
	jule::Ref<_1b5d9c0c1_TypeBuilder> self{};

	jule::Ref<_1a9e07434_Parser> _field_p{jule::Ref<_1a9e07434_Parser>()};
	jule::Slice<_1b61ec5ec_Token> _field_tokens{jule::Slice<_1b61ec5ec_Token>()};
	jule::Int* _field_i{nullptr};
	jule::Bool _field_err{jule::Bool()};


	_1b5d9c0c1_TypeBuilder(jule::Ref<_1a9e07434_Parser> __param_p, jule::Slice<_1b61ec5ec_Token> __param_tokens, jule::Int* __param_i, jule::Bool __param_err) {
		this->self = jule::Ref<_1b5d9c0c1_TypeBuilder>::make(this, nullptr);

		this->_field_p = __param_p;
		this->_field_tokens = __param_tokens;
		this->_field_i = __param_i;
		this->_field_err = __param_err;
	}

	~_1b5d9c0c1_TypeBuilder(void) { this->self.ref = nullptr; }

	_1b5d9c0c1_TypeBuilder(void) { this->self = jule::Ref<_1b5d9c0c1_TypeBuilder>::make(this, nullptr); }

	inline void _method_push_err(_1b61ec5ec_Token,jule::Str);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline jule::Ref<_1b61ca014_TypeDecl> _method_build_prim(void);


	inline jule::Ref<_1b61ca014_TypeDecl> _method_build_namespace(void);


	inline jule::Slice<jule::Ref<_1b61ca014_TypeDecl>> _method_build_generics(void);


	inline jule::Slice<jule::Slice<_1b61ec5ec_Token>> _method_ident_generics(void);


	inline jule::Ref<_1b61ca014_TypeDecl> _method_build_ident(void);


	inline jule::Ref<_1b61ca014_TypeDecl> _method_build_cpp_link(void);


	inline jule::Ref<_1b61ca014_TypeDecl> _method_build_fn(void);


	inline jule::Ref<_1b61ca014_TypeDecl> _method_build_ptr(void);


	inline jule::Ref<_1b61ca014_TypeDecl> _method_build_ref(void);


	inline jule::Ref<_1b61ca014_TypeDecl> _method_build_op(void);


	inline jule::Ref<_1b61ca014_TypeDecl> _method_build_slc(void);


	inline jule::Ref<_1b61ca014_TypeDecl> _method_build_arr(void);


	inline jule::Ref<_1b61ca014_TypeDecl> _method_build_map(jule::Int,jule::Slice<_1b61ec5ec_Token>&);


	inline jule::Ref<_1b61ca014_TypeDecl> _method_build_enumerable(void);


	inline jule::Ref<_1b61ca014_TypeDecl> _method_step(void);


	inline std::tuple<jule::Ref<_1b61ca014_TypeDecl>,jule::Bool> _method_build(void);


	inline bool operator==(const _1b5d9c0c1_TypeBuilder &_Src) const {
		return 
			this->_field_p == _Src._field_p &&
			this->_field_tokens == _Src._field_tokens &&
			this->_field_i == _Src._field_i &&
			this->_field_err == _Src._field_err;
	}

	inline bool operator!=(const _1b5d9c0c1_TypeBuilder &_Src) const { return !this->operator==(_Src); }
};


struct _1ac90c3ed_Const {
	jule::Ref<_1ac90c3ed_Const> self{};

	jule::Any _field_data{jule::Any()};


	_1ac90c3ed_Const(jule::Any __param_data) {
		this->self = jule::Ref<_1ac90c3ed_Const>::make(this, nullptr);

		this->_field_data = __param_data;
	}

	~_1ac90c3ed_Const(void) { this->self.ref = nullptr; }

	_1ac90c3ed_Const(void) { this->self = jule::Ref<_1ac90c3ed_Const>::make(this, nullptr); }

	static inline jule::Ref<_1ac90c3ed_Const> _static_method_new_i64(jule::I64);


	static inline jule::Ref<_1ac90c3ed_Const> _static_method_new_u64(jule::U64);


	static inline jule::Ref<_1ac90c3ed_Const> _static_method_new_bool(jule::Bool);


	static inline jule::Ref<_1ac90c3ed_Const> _static_method_new_str(jule::Str);


	static inline jule::Ref<_1ac90c3ed_Const> _static_method_new_f64(jule::F64);


	static inline jule::Ref<_1ac90c3ed_Const> _static_method_new_nil(void);


	inline jule::I64 _method_read_i64(void);


	inline jule::U64 _method_read_u64(void);


	inline jule::Bool _method_read_bool(void);


	inline jule::Str _method_read_str(void);


	inline jule::F64 _method_read_f64(void);


	inline jule::I64 _method_as_i64(void);


	inline jule::U64 _method_as_u64(void);


	inline jule::F64 _method_as_f64(void);


	inline void _method_set_i64(jule::I64);


	inline void _method_set_u64(jule::U64);


	inline void _method_set_bool(jule::Bool);


	inline void _method_set_str(jule::Str);


	inline void _method_set_f64(jule::F64);


	inline void _method_set_nil(void);


	inline void _method_set_by_type(jule::F64,_1ac90c3ed_Const);


	inline jule::Bool _method_is_i64(void);


	inline jule::Bool _method_is_u64(void);


	inline jule::Bool _method_is_bool(void);


	inline jule::Bool _method_is_str(void);


	inline jule::Bool _method_is_f64(void);


	inline jule::Bool _method_is_nil(void);


	inline jule::Bool _method_are_same_types(_1ac90c3ed_Const);


	inline jule::Bool _method_and(_1ac90c3ed_Const);


	inline jule::Bool _method_or(_1ac90c3ed_Const);


	inline jule::Bool _method_eqs(_1ac90c3ed_Const);


	inline jule::Bool _method_lt(_1ac90c3ed_Const);


	inline jule::Bool _method_gt(_1ac90c3ed_Const);


	inline jule::Bool _method_add(_1ac90c3ed_Const);


	inline jule::Bool _method_sub(_1ac90c3ed_Const);


	inline jule::Bool _method_mul(_1ac90c3ed_Const);


	inline jule::Bool _method_div(_1ac90c3ed_Const);


	inline jule::Bool _method_mod(_1ac90c3ed_Const);


	inline jule::Bool _method_bitwise_and(_1ac90c3ed_Const);


	inline jule::Bool _method_bitwise_or(_1ac90c3ed_Const);


	inline jule::Bool _method_xor(_1ac90c3ed_Const);


	inline jule::Bool _method_lshift(_1ac90c3ed_Const);


	inline jule::Bool _method_rshift(_1ac90c3ed_Const);


	inline bool operator==(const _1ac90c3ed_Const &_Src) const {
		return 
			this->_field_data == _Src._field_data;
	}

	inline bool operator!=(const _1ac90c3ed_Const &_Src) const { return !this->operator==(_Src); }
};




struct _1b5e07a00_FieldIns {
	jule::Ref<_1b5e07a00_FieldIns> self{};

	jule::Ref<_1b5e07a00_Field> _field_decl{jule::Ref<_1b5e07a00_Field>()};
	jule::Ref<_1ac6d02c0_TypeKind> _field_kind{jule::Ref<_1ac6d02c0_TypeKind>()};


	_1b5e07a00_FieldIns(jule::Ref<_1b5e07a00_Field> __param_decl, jule::Ref<_1ac6d02c0_TypeKind> __param_kind) {
		this->self = jule::Ref<_1b5e07a00_FieldIns>::make(this, nullptr);

		this->_field_decl = __param_decl;
		this->_field_kind = __param_kind;
	}

	~_1b5e07a00_FieldIns(void) { this->self.ref = nullptr; }

	_1b5e07a00_FieldIns(void) { this->self = jule::Ref<_1b5e07a00_FieldIns>::make(this, nullptr); }

	inline bool operator==(const _1b5e07a00_FieldIns &_Src) const {
		return 
			this->_field_decl == _Src._field_decl &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1b5e07a00_FieldIns &_Src) const { return !this->operator==(_Src); }
};


struct _1b5e07a00_StructIns: public _1ac6d02c0_Kind {
	jule::Ref<_1b5e07a00_StructIns> self{};

	jule::Bool _field_checked{jule::Bool()};
	jule::Ref<_1b5e07a00_Struct> _field_decl{jule::Ref<_1b5e07a00_Struct>()};
	jule::Slice<jule::Ref<_1ac6d02c0_TypeKind>> _field_generics{jule::Slice<jule::Ref<_1ac6d02c0_TypeKind>>()};
	jule::Slice<jule::Ref<_1b5e07a00_FieldIns>> _field_fields{jule::Slice<jule::Ref<_1b5e07a00_FieldIns>>()};
	jule::Slice<jule::Ref<_1b557cd24_Fn>> _field_methods{jule::Slice<jule::Ref<_1b557cd24_Fn>>()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Ref<_1b5589c76_ReferenceStack> _field_references{jule::Ref<_1b5589c76_ReferenceStack>()};


	_1b5e07a00_StructIns(jule::Bool __param_checked, jule::Ref<_1b5e07a00_Struct> __param_decl, jule::Slice<jule::Ref<_1ac6d02c0_TypeKind>> __param_generics, jule::Slice<jule::Ref<_1b5e07a00_FieldIns>> __param_fields, jule::Slice<jule::Ref<_1b557cd24_Fn>> __param_methods, jule::Bool __param_mutable, jule::Ref<_1b5589c76_ReferenceStack> __param_references) {
		this->self = jule::Ref<_1b5e07a00_StructIns>::make(this, nullptr);

		this->_field_checked = __param_checked;
		this->_field_decl = __param_decl;
		this->_field_generics = __param_generics;
		this->_field_fields = __param_fields;
		this->_field_methods = __param_methods;
		this->_field_mutable = __param_mutable;
		this->_field_references = __param_references;
	}

	~_1b5e07a00_StructIns(void) { this->self.ref = nullptr; }

	_1b5e07a00_StructIns(void) { this->self = jule::Ref<_1b5e07a00_StructIns>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1ac6d02c0_TypeKind>);


	inline jule::Ref<_1b557cd24_Fn> _method_find_method(jule::Str,jule::Bool);


	inline jule::Ref<_1b5e07a00_FieldIns> _method_find_field(jule::Str);


	inline bool operator==(const _1b5e07a00_StructIns &_Src) const {
		return 
			this->_field_checked == _Src._field_checked &&
			this->_field_decl == _Src._field_decl &&
			this->_field_generics == _Src._field_generics &&
			this->_field_fields == _Src._field_fields &&
			this->_field_methods == _Src._field_methods &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_references == _Src._field_references;
	}

	inline bool operator!=(const _1b5e07a00_StructIns &_Src) const { return !this->operator==(_Src); }
};


struct _1b557cd24_RetType {
	jule::Ref<_1b557cd24_RetType> self{};

	jule::Ref<_1ac6d02c0_TypeSymbol> _field_kind{jule::Ref<_1ac6d02c0_TypeSymbol>()};
	jule::Slice<_1b61ec5ec_Token> _field_idents{jule::Slice<_1b61ec5ec_Token>()};


	_1b557cd24_RetType(jule::Ref<_1ac6d02c0_TypeSymbol> __param_kind, jule::Slice<_1b61ec5ec_Token> __param_idents) {
		this->self = jule::Ref<_1b557cd24_RetType>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_idents = __param_idents;
	}

	~_1b557cd24_RetType(void) { this->self.ref = nullptr; }

	_1b557cd24_RetType(void) { this->self = jule::Ref<_1b557cd24_RetType>::make(this, nullptr); }

	inline bool operator==(const _1b557cd24_RetType &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_idents == _Src._field_idents;
	}

	inline bool operator!=(const _1b557cd24_RetType &_Src) const { return !this->operator==(_Src); }
};


struct _1b557cd24_ParamIns {
	jule::Ref<_1b557cd24_ParamIns> self{};

	jule::Ref<_1b557cd24_Param> _field_decl{jule::Ref<_1b557cd24_Param>()};
	jule::Ref<_1ac6d02c0_TypeKind> _field_kind{jule::Ref<_1ac6d02c0_TypeKind>()};


	_1b557cd24_ParamIns(jule::Ref<_1b557cd24_Param> __param_decl, jule::Ref<_1ac6d02c0_TypeKind> __param_kind) {
		this->self = jule::Ref<_1b557cd24_ParamIns>::make(this, nullptr);

		this->_field_decl = __param_decl;
		this->_field_kind = __param_kind;
	}

	~_1b557cd24_ParamIns(void) { this->self.ref = nullptr; }

	_1b557cd24_ParamIns(void) { this->self = jule::Ref<_1b557cd24_ParamIns>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline bool operator==(const _1b557cd24_ParamIns &_Src) const {
		return 
			this->_field_decl == _Src._field_decl &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1b557cd24_ParamIns &_Src) const { return !this->operator==(_Src); }
};


struct _1b557cd24_FnIns: public _1ac6d02c0_Kind {
	jule::Ref<_1b557cd24_FnIns> self{};

	jule::Ref<_1b5e07a00_StructIns> _field_owner{jule::Ref<_1b5e07a00_StructIns>()};
	jule::Ref<_1b557cd24_Fn> _field_decl{jule::Ref<_1b557cd24_Fn>()};
	jule::Slice<jule::Ref<_1ac6d02c0_TypeKind>> _field_generics{jule::Slice<jule::Ref<_1ac6d02c0_TypeKind>>()};
	jule::Slice<jule::Ref<_1b557cd24_ParamIns>> _field_params{jule::Slice<jule::Ref<_1b557cd24_ParamIns>>()};
	jule::Ref<_1ac6d02c0_TypeKind> _field_result{jule::Ref<_1ac6d02c0_TypeKind>()};
	jule::Ref<_1ab009de8_Scope> _field_scope{jule::Ref<_1ab009de8_Scope>()};
	jule::Ref<_1b5589c76_ReferenceStack> _field_references{jule::Ref<_1b5589c76_ReferenceStack>()};
	jule::Ref<_1b5589c76_ReferenceStack> _field_refers{jule::Ref<_1b5589c76_ReferenceStack>()};
	jule::Fn<jule::Ref<_1ab00dbcc_Data>(jule::Ref<_1ab00dbcc_Eval>&,jule::Ref<_1b61ca014_FnCallExpr>&,jule::Ref<_1ab00dbcc_Data>&)> _field_caller{jule::Fn<jule::Ref<_1ab00dbcc_Data>(jule::Ref<_1ab00dbcc_Eval>&,jule::Ref<_1b61ca014_FnCallExpr>&,jule::Ref<_1ab00dbcc_Data>&)>()};
	jule::Bool _field_reloaded{jule::Bool()};
	jule::Bool _field_anon{jule::Bool()};


	_1b557cd24_FnIns(jule::Ref<_1b5e07a00_StructIns> __param_owner, jule::Ref<_1b557cd24_Fn> __param_decl, jule::Slice<jule::Ref<_1ac6d02c0_TypeKind>> __param_generics, jule::Slice<jule::Ref<_1b557cd24_ParamIns>> __param_params, jule::Ref<_1ac6d02c0_TypeKind> __param_result, jule::Ref<_1ab009de8_Scope> __param_scope, jule::Ref<_1b5589c76_ReferenceStack> __param_references, jule::Ref<_1b5589c76_ReferenceStack> __param_refers, jule::Fn<jule::Ref<_1ab00dbcc_Data>(jule::Ref<_1ab00dbcc_Eval>&,jule::Ref<_1b61ca014_FnCallExpr>&,jule::Ref<_1ab00dbcc_Data>&)> __param_caller, jule::Bool __param_reloaded, jule::Bool __param_anon) {
		this->self = jule::Ref<_1b557cd24_FnIns>::make(this, nullptr);

		this->_field_owner = __param_owner;
		this->_field_decl = __param_decl;
		this->_field_generics = __param_generics;
		this->_field_params = __param_params;
		this->_field_result = __param_result;
		this->_field_scope = __param_scope;
		this->_field_references = __param_references;
		this->_field_refers = __param_refers;
		this->_field_caller = __param_caller;
		this->_field_reloaded = __param_reloaded;
		this->_field_anon = __param_anon;
	}

	~_1b557cd24_FnIns(void) { this->self.ref = nullptr; }

	_1b557cd24_FnIns(void) { this->self = jule::Ref<_1b557cd24_FnIns>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1ac6d02c0_TypeKind>);


	inline jule::Bool _method_is_builtin(void);


	inline jule::Bool _method_is_anon(void);


	inline jule::Str _method_get_kind_str(jule::Bool);


	inline bool operator==(const _1b557cd24_FnIns &_Src) const {
		return 
			this->_field_owner == _Src._field_owner &&
			this->_field_decl == _Src._field_decl &&
			this->_field_generics == _Src._field_generics &&
			this->_field_params == _Src._field_params &&
			this->_field_result == _Src._field_result &&
			this->_field_scope == _Src._field_scope &&
			this->_field_references == _Src._field_references &&
			this->_field_refers == _Src._field_refers &&
			this->_field_caller == _Src._field_caller &&
			this->_field_reloaded == _Src._field_reloaded &&
			this->_field_anon == _Src._field_anon;
	}

	inline bool operator!=(const _1b557cd24_FnIns &_Src) const { return !this->operator==(_Src); }
};


struct _1b5589c76_ReferenceStack {
	jule::Ref<_1b5589c76_ReferenceStack> self{};

	jule::Slice<jule::Any> _field_buffer{jule::Slice<jule::Any>()};


	_1b5589c76_ReferenceStack(jule::Slice<jule::Any> __param_buffer) {
		this->self = jule::Ref<_1b5589c76_ReferenceStack>::make(this, nullptr);

		this->_field_buffer = __param_buffer;
	}

	~_1b5589c76_ReferenceStack(void) { this->self.ref = nullptr; }

	_1b5589c76_ReferenceStack(void) { this->self = jule::Ref<_1b5589c76_ReferenceStack>::make(this, nullptr); }

	static inline jule::Ref<_1b5589c76_ReferenceStack> _static_method_new(void);


	inline jule::Int _method_len(void);


	inline jule::Any _method_at(jule::Int);


	inline void _method_push(jule::Any);


	inline jule::Bool _method_exist_0(jule::Ref<_1b623eab2_Var>);
	inline jule::Bool _method_exist_1(jule::Ref<_1b557cd24_FnIns>);
	inline jule::Bool _method_exist_2(jule::Ref<_1b5e07a00_StructIns>);


	inline bool operator==(const _1b5589c76_ReferenceStack &_Src) const {
		return 
			this->_field_buffer == _Src._field_buffer;
	}

	inline bool operator!=(const _1b5589c76_ReferenceStack &_Src) const { return !this->operator==(_Src); }
};


struct _1b5589c76_SymbolBuilder {
	jule::Ref<_1b5589c76_SymbolBuilder> self{};

	jule::Ref<_1b5589c76_SymbolBuilder> _field_owner{jule::Ref<_1b5589c76_SymbolBuilder>()};
	jule::Trait<_1ab194c20_Importer> _field_importer{jule::Trait<_1ab194c20_Importer>()};
	jule::Slice<_1cdeeb191_Log> _field_errors{jule::Slice<_1cdeeb191_Log>()};
	jule::Ref<_1b61d1d62_Ast> _field_ast{jule::Ref<_1b61d1d62_Ast>()};
	jule::Ref<_1ab00cc20_SymbolTable> _field_table{jule::Ref<_1ab00cc20_SymbolTable>()};


	_1b5589c76_SymbolBuilder(jule::Ref<_1b5589c76_SymbolBuilder> __param_owner, jule::Trait<_1ab194c20_Importer> __param_importer, jule::Slice<_1cdeeb191_Log> __param_errors, jule::Ref<_1b61d1d62_Ast> __param_ast, jule::Ref<_1ab00cc20_SymbolTable> __param_table) {
		this->self = jule::Ref<_1b5589c76_SymbolBuilder>::make(this, nullptr);

		this->_field_owner = __param_owner;
		this->_field_importer = __param_importer;
		this->_field_errors = __param_errors;
		this->_field_ast = __param_ast;
		this->_field_table = __param_table;
	}

	~_1b5589c76_SymbolBuilder(void) { this->self.ref = nullptr; }

	_1b5589c76_SymbolBuilder(void) { this->self = jule::Ref<_1b5589c76_SymbolBuilder>::make(this, nullptr); }

	inline jule::Ref<_1b5589c76_SymbolBuilder> _method_get_root(void);


	inline void _method_push_err(_1b61ec5ec_Token&,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_err_text(_1b61ec5ec_Token&,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline jule::Bool _method_check_cpp_use_decl_path(jule::Ref<_1b61ca014_UseDecl>&);


	inline jule::Ref<_1ab194c20_ImportInfo> _method_build_cpp_header_import(jule::Ref<_1b61ca014_UseDecl>&);


	inline jule::Ref<_1ab194c20_ImportInfo> _method_build_std_import(jule::Ref<_1b61ca014_UseDecl>&);


	inline jule::Ref<_1ab194c20_ImportInfo> _method_build_ident_import(jule::Ref<_1b61ca014_UseDecl>&);


	inline jule::Ref<_1ab194c20_ImportInfo> _method_build_import(jule::Ref<_1b61ca014_UseDecl>&);


	inline jule::Bool _method_check_duplicate_use_decl(jule::Ref<_1ab194c20_ImportInfo>&);


	inline void _method_impl_import_selections(jule::Ref<_1ab194c20_ImportInfo>&,jule::Ref<_1b61ca014_UseDecl>&);


	inline jule::Str _method_get_as_link_path(jule::Str);


	inline void _method_push_cycle_error(jule::Ref<_1b5589c76_SymbolBuilder>&,jule::Str,jule::Str&);


	inline void _method_push_cross_cycle_error(jule::Ref<_1b5589c76_SymbolBuilder>&,jule::Ref<_1ab194c20_ImportInfo>&,_1b61ec5ec_Token&);


	inline jule::Bool _method_check_import_cycles(jule::Ref<_1ab194c20_ImportInfo>,jule::Ref<_1b61ca014_UseDecl>&);


	inline jule::Bool _method_import_package(jule::Ref<_1ab194c20_ImportInfo>&,jule::Ref<_1b61ca014_UseDecl>&);


	inline jule::Ref<_1ab194c20_ImportInfo> _method_import_use_decl(jule::Ref<_1b61ca014_UseDecl>&);


	inline void _method_import_use_decls(void);


	inline void _method_append_decl(_1b61ca014_Node&);


	inline void _method_append_decls(void);


	inline void _method_append_impls(void);


	inline void _method_push_directive_pass(jule::Ref<_1b61ca014_Directive>&);


	inline void _method_append_top_directives(void);


	inline void _method_build(void);


	inline bool operator==(const _1b5589c76_SymbolBuilder &_Src) const {
		return 
			this->_field_owner == _Src._field_owner &&
			this->_field_importer == _Src._field_importer &&
			this->_field_errors == _Src._field_errors &&
			this->_field_ast == _Src._field_ast &&
			this->_field_table == _Src._field_table;
	}

	inline bool operator!=(const _1b5589c76_SymbolBuilder &_Src) const { return !this->operator==(_Src); }
};


struct _1ab009de8_Scope {
	jule::Ref<_1ab009de8_Scope> self{};

	jule::Ref<_1ab009de8_Scope> _field_parent{jule::Ref<_1ab009de8_Scope>()};
	jule::Bool _field_unsafety{jule::Bool()};
	jule::Bool _field_deferred{jule::Bool()};
	jule::Slice<jule::Any> _field_stmts{jule::Slice<jule::Any>()};


	_1ab009de8_Scope(jule::Ref<_1ab009de8_Scope> __param_parent, jule::Bool __param_unsafety, jule::Bool __param_deferred, jule::Slice<jule::Any> __param_stmts) {
		this->self = jule::Ref<_1ab009de8_Scope>::make(this, nullptr);

		this->_field_parent = __param_parent;
		this->_field_unsafety = __param_unsafety;
		this->_field_deferred = __param_deferred;
		this->_field_stmts = __param_stmts;
	}

	~_1ab009de8_Scope(void) { this->self.ref = nullptr; }

	_1ab009de8_Scope(void) { this->self = jule::Ref<_1ab009de8_Scope>::make(this, nullptr); }

	inline bool operator==(const _1ab009de8_Scope &_Src) const {
		return 
			this->_field_parent == _Src._field_parent &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_deferred == _Src._field_deferred &&
			this->_field_stmts == _Src._field_stmts;
	}

	inline bool operator!=(const _1ab009de8_Scope &_Src) const { return !this->operator==(_Src); }
};


struct _1ab009de8_If {
	jule::Ref<_1ab009de8_If> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Ref<_1ab009de8_Scope> _field_scope{jule::Ref<_1ab009de8_Scope>()};


	_1ab009de8_If(jule::Any __param_expr, jule::Ref<_1ab009de8_Scope> __param_scope) {
		this->self = jule::Ref<_1ab009de8_If>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_scope = __param_scope;
	}

	~_1ab009de8_If(void) { this->self.ref = nullptr; }

	_1ab009de8_If(void) { this->self = jule::Ref<_1ab009de8_If>::make(this, nullptr); }

	inline bool operator==(const _1ab009de8_If &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _1ab009de8_If &_Src) const { return !this->operator==(_Src); }
};


struct _1ab009de8_Else {
	jule::Ref<_1ab009de8_Else> self{};

	jule::Ref<_1ab009de8_Scope> _field_scope{jule::Ref<_1ab009de8_Scope>()};


	_1ab009de8_Else(jule::Ref<_1ab009de8_Scope> __param_scope) {
		this->self = jule::Ref<_1ab009de8_Else>::make(this, nullptr);

		this->_field_scope = __param_scope;
	}

	~_1ab009de8_Else(void) { this->self.ref = nullptr; }

	_1ab009de8_Else(void) { this->self = jule::Ref<_1ab009de8_Else>::make(this, nullptr); }

	inline bool operator==(const _1ab009de8_Else &_Src) const {
		return 
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _1ab009de8_Else &_Src) const { return !this->operator==(_Src); }
};


struct _1ab009de8_Conditional {
	jule::Ref<_1ab009de8_Conditional> self{};

	jule::Slice<jule::Ref<_1ab009de8_If>> _field_elifs{jule::Slice<jule::Ref<_1ab009de8_If>>()};
	jule::Ref<_1ab009de8_Else> _field_default{jule::Ref<_1ab009de8_Else>()};


	_1ab009de8_Conditional(jule::Slice<jule::Ref<_1ab009de8_If>> __param_elifs, jule::Ref<_1ab009de8_Else> __param_default) {
		this->self = jule::Ref<_1ab009de8_Conditional>::make(this, nullptr);

		this->_field_elifs = __param_elifs;
		this->_field_default = __param_default;
	}

	~_1ab009de8_Conditional(void) { this->self.ref = nullptr; }

	_1ab009de8_Conditional(void) { this->self = jule::Ref<_1ab009de8_Conditional>::make(this, nullptr); }

	inline bool operator==(const _1ab009de8_Conditional &_Src) const {
		return 
			this->_field_elifs == _Src._field_elifs &&
			this->_field_default == _Src._field_default;
	}

	inline bool operator!=(const _1ab009de8_Conditional &_Src) const { return !this->operator==(_Src); }
};


struct _1ab009de8_InfIter {
	jule::Ref<_1ab009de8_InfIter> self{};

	jule::Ref<_1ab009de8_Scope> _field_scope{jule::Ref<_1ab009de8_Scope>()};


	_1ab009de8_InfIter(jule::Ref<_1ab009de8_Scope> __param_scope) {
		this->self = jule::Ref<_1ab009de8_InfIter>::make(this, nullptr);

		this->_field_scope = __param_scope;
	}

	~_1ab009de8_InfIter(void) { this->self.ref = nullptr; }

	_1ab009de8_InfIter(void) { this->self = jule::Ref<_1ab009de8_InfIter>::make(this, nullptr); }

	inline bool operator==(const _1ab009de8_InfIter &_Src) const {
		return 
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _1ab009de8_InfIter &_Src) const { return !this->operator==(_Src); }
};


struct _1ab009de8_WhileIter {
	jule::Ref<_1ab009de8_WhileIter> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Any _field_next{jule::Any()};
	jule::Ref<_1ab009de8_Scope> _field_scope{jule::Ref<_1ab009de8_Scope>()};


	_1ab009de8_WhileIter(jule::Any __param_expr, jule::Any __param_next, jule::Ref<_1ab009de8_Scope> __param_scope) {
		this->self = jule::Ref<_1ab009de8_WhileIter>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_next = __param_next;
		this->_field_scope = __param_scope;
	}

	~_1ab009de8_WhileIter(void) { this->self.ref = nullptr; }

	_1ab009de8_WhileIter(void) { this->self = jule::Ref<_1ab009de8_WhileIter>::make(this, nullptr); }

	inline jule::Bool _method_is_while_next(void);


	inline bool operator==(const _1ab009de8_WhileIter &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_next == _Src._field_next &&
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _1ab009de8_WhileIter &_Src) const { return !this->operator==(_Src); }
};


struct _1ab009de8_RangeIter {
	jule::Ref<_1ab009de8_RangeIter> self{};

	jule::Ref<_1ab00dbcc_Data> _field_expr{jule::Ref<_1ab00dbcc_Data>()};
	jule::Ref<_1ab009de8_Scope> _field_scope{jule::Ref<_1ab009de8_Scope>()};
	jule::Ref<_1b623eab2_Var> _field_key_a{jule::Ref<_1b623eab2_Var>()};
	jule::Ref<_1b623eab2_Var> _field_key_b{jule::Ref<_1b623eab2_Var>()};


	_1ab009de8_RangeIter(jule::Ref<_1ab00dbcc_Data> __param_expr, jule::Ref<_1ab009de8_Scope> __param_scope, jule::Ref<_1b623eab2_Var> __param_key_a, jule::Ref<_1b623eab2_Var> __param_key_b) {
		this->self = jule::Ref<_1ab009de8_RangeIter>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_scope = __param_scope;
		this->_field_key_a = __param_key_a;
		this->_field_key_b = __param_key_b;
	}

	~_1ab009de8_RangeIter(void) { this->self.ref = nullptr; }

	_1ab009de8_RangeIter(void) { this->self = jule::Ref<_1ab009de8_RangeIter>::make(this, nullptr); }

	inline bool operator==(const _1ab009de8_RangeIter &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_scope == _Src._field_scope &&
			this->_field_key_a == _Src._field_key_a &&
			this->_field_key_b == _Src._field_key_b;
	}

	inline bool operator!=(const _1ab009de8_RangeIter &_Src) const { return !this->operator==(_Src); }
};


struct _1ab009de8_ContSt {
	jule::Ref<_1ab009de8_ContSt> self{};

	jule::Uintptr _field_it{jule::Uintptr()};


	_1ab009de8_ContSt(jule::Uintptr __param_it) {
		this->self = jule::Ref<_1ab009de8_ContSt>::make(this, nullptr);

		this->_field_it = __param_it;
	}

	~_1ab009de8_ContSt(void) { this->self.ref = nullptr; }

	_1ab009de8_ContSt(void) { this->self = jule::Ref<_1ab009de8_ContSt>::make(this, nullptr); }

	inline bool operator==(const _1ab009de8_ContSt &_Src) const {
		return 
			this->_field_it == _Src._field_it;
	}

	inline bool operator!=(const _1ab009de8_ContSt &_Src) const { return !this->operator==(_Src); }
};


struct _1ab009de8_BreakSt {
	jule::Ref<_1ab009de8_BreakSt> self{};

	jule::Uintptr _field_it{jule::Uintptr()};
	jule::Uintptr _field_mtch{jule::Uintptr()};


	_1ab009de8_BreakSt(jule::Uintptr __param_it, jule::Uintptr __param_mtch) {
		this->self = jule::Ref<_1ab009de8_BreakSt>::make(this, nullptr);

		this->_field_it = __param_it;
		this->_field_mtch = __param_mtch;
	}

	~_1ab009de8_BreakSt(void) { this->self.ref = nullptr; }

	_1ab009de8_BreakSt(void) { this->self = jule::Ref<_1ab009de8_BreakSt>::make(this, nullptr); }

	inline bool operator==(const _1ab009de8_BreakSt &_Src) const {
		return 
			this->_field_it == _Src._field_it &&
			this->_field_mtch == _Src._field_mtch;
	}

	inline bool operator!=(const _1ab009de8_BreakSt &_Src) const { return !this->operator==(_Src); }
};


struct _1ab009de8_Label {
	jule::Ref<_1ab009de8_Label> self{};

	jule::Str _field_ident{jule::Str()};


	_1ab009de8_Label(jule::Str __param_ident) {
		this->self = jule::Ref<_1ab009de8_Label>::make(this, nullptr);

		this->_field_ident = __param_ident;
	}

	~_1ab009de8_Label(void) { this->self.ref = nullptr; }

	_1ab009de8_Label(void) { this->self = jule::Ref<_1ab009de8_Label>::make(this, nullptr); }

	inline bool operator==(const _1ab009de8_Label &_Src) const {
		return 
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1ab009de8_Label &_Src) const { return !this->operator==(_Src); }
};


struct _1ab009de8_GotoSt {
	jule::Ref<_1ab009de8_GotoSt> self{};

	jule::Str _field_ident{jule::Str()};


	_1ab009de8_GotoSt(jule::Str __param_ident) {
		this->self = jule::Ref<_1ab009de8_GotoSt>::make(this, nullptr);

		this->_field_ident = __param_ident;
	}

	~_1ab009de8_GotoSt(void) { this->self.ref = nullptr; }

	_1ab009de8_GotoSt(void) { this->self = jule::Ref<_1ab009de8_GotoSt>::make(this, nullptr); }

	inline bool operator==(const _1ab009de8_GotoSt &_Src) const {
		return 
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1ab009de8_GotoSt &_Src) const { return !this->operator==(_Src); }
};


struct _1ab009de8_Postfix {
	jule::Ref<_1ab009de8_Postfix> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Str _field_op{jule::Str()};


	_1ab009de8_Postfix(jule::Any __param_expr, jule::Str __param_op) {
		this->self = jule::Ref<_1ab009de8_Postfix>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_op = __param_op;
	}

	~_1ab009de8_Postfix(void) { this->self.ref = nullptr; }

	_1ab009de8_Postfix(void) { this->self = jule::Ref<_1ab009de8_Postfix>::make(this, nullptr); }

	inline bool operator==(const _1ab009de8_Postfix &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _1ab009de8_Postfix &_Src) const { return !this->operator==(_Src); }
};


struct _1ab009de8_Assign {
	jule::Ref<_1ab009de8_Assign> self{};

	jule::Any _field_l{jule::Any()};
	jule::Any _field_r{jule::Any()};
	jule::Str _field_op{jule::Str()};


	_1ab009de8_Assign(jule::Any __param_l, jule::Any __param_r, jule::Str __param_op) {
		this->self = jule::Ref<_1ab009de8_Assign>::make(this, nullptr);

		this->_field_l = __param_l;
		this->_field_r = __param_r;
		this->_field_op = __param_op;
	}

	~_1ab009de8_Assign(void) { this->self.ref = nullptr; }

	_1ab009de8_Assign(void) { this->self = jule::Ref<_1ab009de8_Assign>::make(this, nullptr); }

	inline bool operator==(const _1ab009de8_Assign &_Src) const {
		return 
			this->_field_l == _Src._field_l &&
			this->_field_r == _Src._field_r &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _1ab009de8_Assign &_Src) const { return !this->operator==(_Src); }
};


struct _1ab009de8_MultiAssign {
	jule::Ref<_1ab009de8_MultiAssign> self{};

	jule::Slice<jule::Any> _field_l{jule::Slice<jule::Any>()};
	jule::Any _field_r{jule::Any()};


	_1ab009de8_MultiAssign(jule::Slice<jule::Any> __param_l, jule::Any __param_r) {
		this->self = jule::Ref<_1ab009de8_MultiAssign>::make(this, nullptr);

		this->_field_l = __param_l;
		this->_field_r = __param_r;
	}

	~_1ab009de8_MultiAssign(void) { this->self.ref = nullptr; }

	_1ab009de8_MultiAssign(void) { this->self = jule::Ref<_1ab009de8_MultiAssign>::make(this, nullptr); }

	inline bool operator==(const _1ab009de8_MultiAssign &_Src) const {
		return 
			this->_field_l == _Src._field_l &&
			this->_field_r == _Src._field_r;
	}

	inline bool operator!=(const _1ab009de8_MultiAssign &_Src) const { return !this->operator==(_Src); }
};


struct _1ab009de8_Match {
	jule::Ref<_1ab009de8_Match> self{};

	jule::Ref<_1ab00dbcc_Data> _field_expr{jule::Ref<_1ab00dbcc_Data>()};
	jule::Bool _field_type_match{jule::Bool()};
	jule::Slice<jule::Ref<_1ab009de8_Case>> _field_cases{jule::Slice<jule::Ref<_1ab009de8_Case>>()};
	jule::Ref<_1ab009de8_Case> _field_default{jule::Ref<_1ab009de8_Case>()};


	_1ab009de8_Match(jule::Ref<_1ab00dbcc_Data> __param_expr, jule::Bool __param_type_match, jule::Slice<jule::Ref<_1ab009de8_Case>> __param_cases, jule::Ref<_1ab009de8_Case> __param_default) {
		this->self = jule::Ref<_1ab009de8_Match>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_type_match = __param_type_match;
		this->_field_cases = __param_cases;
		this->_field_default = __param_default;
	}

	~_1ab009de8_Match(void) { this->self.ref = nullptr; }

	_1ab009de8_Match(void) { this->self = jule::Ref<_1ab009de8_Match>::make(this, nullptr); }

	inline bool operator==(const _1ab009de8_Match &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_type_match == _Src._field_type_match &&
			this->_field_cases == _Src._field_cases &&
			this->_field_default == _Src._field_default;
	}

	inline bool operator!=(const _1ab009de8_Match &_Src) const { return !this->operator==(_Src); }
};


struct _1ab009de8_Case {
	jule::Ref<_1ab009de8_Case> self{};

	jule::Ref<_1ab009de8_Match> _field_owner{jule::Ref<_1ab009de8_Match>()};
	jule::Ref<_1ab009de8_Scope> _field_scope{jule::Ref<_1ab009de8_Scope>()};
	jule::Slice<jule::Any> _field_exprs{jule::Slice<jule::Any>()};
	jule::Ref<_1ab009de8_Case> _field_next{jule::Ref<_1ab009de8_Case>()};


	_1ab009de8_Case(jule::Ref<_1ab009de8_Match> __param_owner, jule::Ref<_1ab009de8_Scope> __param_scope, jule::Slice<jule::Any> __param_exprs, jule::Ref<_1ab009de8_Case> __param_next) {
		this->self = jule::Ref<_1ab009de8_Case>::make(this, nullptr);

		this->_field_owner = __param_owner;
		this->_field_scope = __param_scope;
		this->_field_exprs = __param_exprs;
		this->_field_next = __param_next;
	}

	~_1ab009de8_Case(void) { this->self.ref = nullptr; }

	_1ab009de8_Case(void) { this->self = jule::Ref<_1ab009de8_Case>::make(this, nullptr); }

	inline jule::Bool _method_is_default(void);


	inline bool operator==(const _1ab009de8_Case &_Src) const {
		return 
			this->_field_owner == _Src._field_owner &&
			this->_field_scope == _Src._field_scope &&
			this->_field_exprs == _Src._field_exprs &&
			this->_field_next == _Src._field_next;
	}

	inline bool operator!=(const _1ab009de8_Case &_Src) const { return !this->operator==(_Src); }
};


struct _1ab009de8_FallSt {
	jule::Ref<_1ab009de8_FallSt> self{};

	jule::Uintptr _field_dest_case{jule::Uintptr()};


	_1ab009de8_FallSt(jule::Uintptr __param_dest_case) {
		this->self = jule::Ref<_1ab009de8_FallSt>::make(this, nullptr);

		this->_field_dest_case = __param_dest_case;
	}

	~_1ab009de8_FallSt(void) { this->self.ref = nullptr; }

	_1ab009de8_FallSt(void) { this->self = jule::Ref<_1ab009de8_FallSt>::make(this, nullptr); }

	inline bool operator==(const _1ab009de8_FallSt &_Src) const {
		return 
			this->_field_dest_case == _Src._field_dest_case;
	}

	inline bool operator!=(const _1ab009de8_FallSt &_Src) const { return !this->operator==(_Src); }
};


struct _1ab009de8_RetSt {
	jule::Ref<_1ab009de8_RetSt> self{};

	jule::Slice<jule::Ref<_1b623eab2_Var>> _field_vars{jule::Slice<jule::Ref<_1b623eab2_Var>>()};
	jule::Any _field_expr{jule::Any()};


	_1ab009de8_RetSt(jule::Slice<jule::Ref<_1b623eab2_Var>> __param_vars, jule::Any __param_expr) {
		this->self = jule::Ref<_1ab009de8_RetSt>::make(this, nullptr);

		this->_field_vars = __param_vars;
		this->_field_expr = __param_expr;
	}

	~_1ab009de8_RetSt(void) { this->self.ref = nullptr; }

	_1ab009de8_RetSt(void) { this->self = jule::Ref<_1ab009de8_RetSt>::make(this, nullptr); }

	inline bool operator==(const _1ab009de8_RetSt &_Src) const {
		return 
			this->_field_vars == _Src._field_vars &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1ab009de8_RetSt &_Src) const { return !this->operator==(_Src); }
};


struct _1ab009de8_Recover {
	jule::Ref<_1ab009de8_Recover> self{};

	jule::Ref<_1b557cd24_FnIns> _field_handler{jule::Ref<_1b557cd24_FnIns>()};
	jule::Any _field_handler_expr{jule::Any()};
	jule::Ref<_1ab009de8_Scope> _field_scope{jule::Ref<_1ab009de8_Scope>()};
	jule::Ref<_1b557cd24_FnIns> _field_scope_owner{jule::Ref<_1b557cd24_FnIns>()};


	_1ab009de8_Recover(jule::Ref<_1b557cd24_FnIns> __param_handler, jule::Any __param_handler_expr, jule::Ref<_1ab009de8_Scope> __param_scope, jule::Ref<_1b557cd24_FnIns> __param_scope_owner) {
		this->self = jule::Ref<_1ab009de8_Recover>::make(this, nullptr);

		this->_field_handler = __param_handler;
		this->_field_handler_expr = __param_handler_expr;
		this->_field_scope = __param_scope;
		this->_field_scope_owner = __param_scope_owner;
	}

	~_1ab009de8_Recover(void) { this->self.ref = nullptr; }

	_1ab009de8_Recover(void) { this->self = jule::Ref<_1ab009de8_Recover>::make(this, nullptr); }

	inline bool operator==(const _1ab009de8_Recover &_Src) const {
		return 
			this->_field_handler == _Src._field_handler &&
			this->_field_handler_expr == _Src._field_handler_expr &&
			this->_field_scope == _Src._field_scope &&
			this->_field_scope_owner == _Src._field_scope_owner;
	}

	inline bool operator!=(const _1ab009de8_Recover &_Src) const { return !this->operator==(_Src); }
};


struct _1ab009de8_ScopeGoto {
	jule::Ref<_1ab009de8_ScopeGoto> self{};

	jule::Ref<_1b61ca014_GotoSt> _field_gt{jule::Ref<_1b61ca014_GotoSt>()};
	jule::Ref<_1ab009de8_ScopeChecker> _field_scope{jule::Ref<_1ab009de8_ScopeChecker>()};
	jule::Int _field_pos{jule::Int()};


	_1ab009de8_ScopeGoto(jule::Ref<_1b61ca014_GotoSt> __param_gt, jule::Ref<_1ab009de8_ScopeChecker> __param_scope, jule::Int __param_pos) {
		this->self = jule::Ref<_1ab009de8_ScopeGoto>::make(this, nullptr);

		this->_field_gt = __param_gt;
		this->_field_scope = __param_scope;
		this->_field_pos = __param_pos;
	}

	~_1ab009de8_ScopeGoto(void) { this->self.ref = nullptr; }

	_1ab009de8_ScopeGoto(void) { this->self = jule::Ref<_1ab009de8_ScopeGoto>::make(this, nullptr); }

	inline bool operator==(const _1ab009de8_ScopeGoto &_Src) const {
		return 
			this->_field_gt == _Src._field_gt &&
			this->_field_scope == _Src._field_scope &&
			this->_field_pos == _Src._field_pos;
	}

	inline bool operator!=(const _1ab009de8_ScopeGoto &_Src) const { return !this->operator==(_Src); }
};


struct _1ab009de8_ScopeChecker: public _1aae290e2_Lookup {
	jule::Ref<_1ab009de8_ScopeChecker> self{};

	jule::Ref<_1ab195050_Sema> _field_s{jule::Ref<_1ab195050_Sema>()};
	jule::Ref<_1b557cd24_FnIns> _field_owner{jule::Ref<_1b557cd24_FnIns>()};
	jule::Ref<_1ab009de8_ScopeChecker> _field_parent{jule::Ref<_1ab009de8_ScopeChecker>()};
	jule::Int _field_child_index{jule::Int()};
	jule::Ref<_1ab00cc20_SymbolTable> _field_table{jule::Ref<_1ab00cc20_SymbolTable>()};
	jule::Ref<_1ab009de8_Scope> _field_scope{jule::Ref<_1ab009de8_Scope>()};
	jule::Ref<_1b61ca014_ScopeTree> _field_tree{jule::Ref<_1b61ca014_ScopeTree>()};
	jule::Uintptr _field_it{jule::Uintptr()};
	jule::Uintptr _field_cse{jule::Uintptr()};
	jule::Ref<jule::Slice<jule::Ref<_1ab009de8_ScopeLabel>>> _field_labels{jule::Ref<jule::Slice<jule::Ref<_1ab009de8_ScopeLabel>>>()};
	jule::Ref<jule::Slice<jule::Ref<_1ab009de8_ScopeGoto>>> _field_gotos{jule::Ref<jule::Slice<jule::Ref<_1ab009de8_ScopeGoto>>>()};
	jule::Int _field_i{jule::Int()};


	_1ab009de8_ScopeChecker(jule::Ref<_1ab195050_Sema> __param_s, jule::Ref<_1b557cd24_FnIns> __param_owner, jule::Ref<_1ab009de8_ScopeChecker> __param_parent, jule::Int __param_child_index, jule::Ref<_1ab00cc20_SymbolTable> __param_table, jule::Ref<_1ab009de8_Scope> __param_scope, jule::Ref<_1b61ca014_ScopeTree> __param_tree, jule::Uintptr __param_it, jule::Uintptr __param_cse, jule::Ref<jule::Slice<jule::Ref<_1ab009de8_ScopeLabel>>> __param_labels, jule::Ref<jule::Slice<jule::Ref<_1ab009de8_ScopeGoto>>> __param_gotos, jule::Int __param_i) {
		this->self = jule::Ref<_1ab009de8_ScopeChecker>::make(this, nullptr);

		this->_field_s = __param_s;
		this->_field_owner = __param_owner;
		this->_field_parent = __param_parent;
		this->_field_child_index = __param_child_index;
		this->_field_table = __param_table;
		this->_field_scope = __param_scope;
		this->_field_tree = __param_tree;
		this->_field_it = __param_it;
		this->_field_cse = __param_cse;
		this->_field_labels = __param_labels;
		this->_field_gotos = __param_gotos;
		this->_field_i = __param_i;
	}

	~_1ab009de8_ScopeChecker(void) { this->self.ref = nullptr; }

	_1ab009de8_ScopeChecker(void) { this->self = jule::Ref<_1ab009de8_ScopeChecker>::make(this, nullptr); }

	inline jule::Ref<_1ab194c20_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ref<_1ab194c20_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ref<_1ab194c20_ImportInfo>)>);


	inline jule::Ref<_1b623eab2_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ref<_1ac6d02c0_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ref<_1b5e07a00_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ref<_1b557cd24_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ref<_1aaee9091_Trait> _method_find_trait(jule::Str);


	inline jule::Ref<_1a909ac6b_Enum> _method_find_enum(jule::Str);


	inline jule::Bool _method_is_unsafe(void);


	inline jule::Bool _method_is_root(void);


	inline jule::Ref<_1ab009de8_ScopeChecker> _method_get_root(void);


	inline jule::Ref<_1ab009de8_Label> _method_find_label(jule::Str);


	inline jule::Ref<_1ab009de8_ScopeLabel> _method_find_label_scope(jule::Str);


	inline jule::Ref<_1ab009de8_ScopeLabel> _method_find_label_all(jule::Str);


	inline jule::Bool _method_is_duplicated_ident(jule::Uintptr,jule::Str);


	inline void _method_check_var_decl(jule::Ref<_1b61ca014_VarDecl>);


	inline void _method_check_type_alias_decl(jule::Ref<_1b61ca014_TypeAliasDecl>);


	inline jule::Ref<_1ab009de8_Scope> _method_get_child(void);


	inline void _method_check_child_ssc(jule::Ref<_1b61ca014_ScopeTree>,jule::Ref<_1ab009de8_Scope>,jule::Ref<_1ab009de8_ScopeChecker>);


	inline jule::Ref<_1ab009de8_Scope> _method_check_child_sc(jule::Ref<_1b61ca014_ScopeTree>,jule::Ref<_1ab009de8_ScopeChecker>);


	inline jule::Ref<_1ab009de8_Scope> _method_check_child(jule::Ref<_1b61ca014_ScopeTree>);


	inline void _method_check_anon_scope(jule::Ref<_1b61ca014_ScopeTree>);


	inline jule::Bool _method_try_call_recover(jule::Ref<_1ab00dbcc_Data>);


	inline void _method_check_expr(jule::Ref<_1b61ca014_Expr>);


	inline jule::Ref<_1ab009de8_If> _method_check_if(jule::Ref<_1b61ca014_If>);


	inline jule::Ref<_1ab009de8_Else> _method_check_else(jule::Ref<_1b61ca014_Else>);


	inline void _method_check_conditional(jule::Ref<_1b61ca014_Conditional>);


	inline jule::Ref<_1ab009de8_Scope> _method_check_iter_scope_sc(jule::Uintptr,jule::Ref<_1b61ca014_ScopeTree>,jule::Ref<_1ab009de8_ScopeChecker>);


	inline jule::Ref<_1ab009de8_Scope> _method_check_iter_scope(jule::Uintptr,jule::Ref<_1b61ca014_ScopeTree>);


	inline void _method_check_inf_iter(jule::Ref<_1b61ca014_Iter>);


	inline void _method_check_while_iter(jule::Ref<_1b61ca014_Iter>);


	inline void _method_check_range_iter(jule::Ref<_1b61ca014_Iter>);


	inline void _method_check_iter(jule::Ref<_1b61ca014_Iter>);


	inline jule::Bool _method_check_valid_cont_label(jule::Uintptr);


	inline jule::Bool _method_check_valid_break_label(jule::Uintptr);


	inline jule::Ref<_1ab009de8_ContSt> _method_check_cont_valid_scope(jule::Ref<_1b61ca014_ContSt>);


	inline void _method_check_cont(jule::Ref<_1b61ca014_ContSt>);


	inline void _method_check_label(jule::Ref<_1b61ca014_LabelSt>);


	inline void _method_push_goto(jule::Ref<_1b61ca014_GotoSt>);


	inline void _method_check_postfix(jule::Ref<_1b61ca014_AssignSt>);


	inline jule::Bool _method_is_new_assign_ident(jule::Str);


	inline void _method_check_single_assign(jule::Ref<_1b61ca014_AssignSt>);


	inline void _method___process_end_part_of_multi_assign(jule::Ref<_1ab009de8_MultiAssign>,jule::Ref<_1b61ca014_AssignSt>,jule::Ref<_1b61ca014_AssignLeft>,jule::Ref<_1ab00dbcc_Data>,jule::Ref<_1ab00dbcc_Data>);


	inline void _method_check_ret_multi_assign(jule::Ref<_1b61ca014_AssignSt>);


	inline void _method_check_multi_assign(jule::Ref<_1b61ca014_AssignSt>);


	inline void _method_check_assign_st(jule::Ref<_1b61ca014_AssignSt>);


	inline jule::Ref<_1ab009de8_Scope> _method_check_case_scope(jule::Ref<_1ab009de8_Case>,jule::Ref<_1b61ca014_ScopeTree>);


	inline jule::Ref<_1ab009de8_Case> _method_check_case(jule::Ref<_1ab009de8_Match>,jule::Int,jule::Ref<_1b61ca014_Case>,jule::Ref<_1ab00dbcc_Data>);


	inline void _method_check_cases(jule::Ref<_1b61ca014_MatchCase>,jule::Ref<_1ab009de8_Match>,jule::Ref<_1ab00dbcc_Data>);


	inline jule::Ref<_1ab009de8_Case> _method_check_default(jule::Ref<_1ab009de8_Match>,jule::Ref<_1b61ca014_Else>);


	inline void _method_check_type_match(jule::Ref<_1b61ca014_MatchCase>);


	inline void _method_check_common_match(jule::Ref<_1b61ca014_MatchCase>);


	inline void _method_check_match(jule::Ref<_1b61ca014_MatchCase>);


	inline void _method_check_fall(jule::Ref<_1b61ca014_FallSt>);


	inline jule::Ref<_1ab009de8_BreakSt> _method_check_break_with_label(jule::Ref<_1b61ca014_BreakSt>);


	inline jule::Ref<_1ab009de8_BreakSt> _method_check_plain_break(jule::Ref<_1b61ca014_BreakSt>);


	inline void _method_check_break(jule::Ref<_1b61ca014_BreakSt>);


	inline void _method_check_ret(jule::Ref<_1b61ca014_RetSt>);


	inline void _method_check_node(jule::Any);


	inline void _method_check_tree(void);


	inline void _method_check_same_scope_goto(jule::Ref<_1ab009de8_ScopeGoto>,jule::Ref<_1ab009de8_ScopeLabel>);


	inline jule::Bool _method_check_label_parents(jule::Ref<_1ab009de8_ScopeGoto>,jule::Ref<_1ab009de8_ScopeLabel>);


	inline void _method_check_goto_scope(jule::Ref<_1ab009de8_ScopeGoto>,jule::Ref<_1ab009de8_ScopeLabel>);


	inline void _method_check_diff_scope_goto(jule::Ref<_1ab009de8_ScopeGoto>,jule::Ref<_1ab009de8_ScopeLabel>);


	inline void _method_check_goto(jule::Ref<_1ab009de8_ScopeGoto>,jule::Ref<_1ab009de8_ScopeLabel>);


	inline void _method_check_gotos(void);


	inline void _method_check_labels(void);


	inline void _method_check_vars(void);


	inline void _method_check_aliases(void);


	inline void _method_check(jule::Ref<_1b61ca014_ScopeTree>,jule::Ref<_1ab009de8_Scope>);


	inline jule::Ref<_1ab009de8_ScopeChecker> _method_new_child_checker(void);


	inline bool operator==(const _1ab009de8_ScopeChecker &_Src) const {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_owner == _Src._field_owner &&
			this->_field_parent == _Src._field_parent &&
			this->_field_child_index == _Src._field_child_index &&
			this->_field_table == _Src._field_table &&
			this->_field_scope == _Src._field_scope &&
			this->_field_tree == _Src._field_tree &&
			this->_field_it == _Src._field_it &&
			this->_field_cse == _Src._field_cse &&
			this->_field_labels == _Src._field_labels &&
			this->_field_gotos == _Src._field_gotos &&
			this->_field_i == _Src._field_i;
	}

	inline bool operator!=(const _1ab009de8_ScopeChecker &_Src) const { return !this->operator==(_Src); }
};


struct _1ab33d083_BinopExprModel {
	jule::Ref<_1ab33d083_BinopExprModel> self{};

	jule::Any _field_left{jule::Any()};
	jule::Any _field_right{jule::Any()};
	jule::Str _field_op{jule::Str()};


	_1ab33d083_BinopExprModel(jule::Any __param_left, jule::Any __param_right, jule::Str __param_op) {
		this->self = jule::Ref<_1ab33d083_BinopExprModel>::make(this, nullptr);

		this->_field_left = __param_left;
		this->_field_right = __param_right;
		this->_field_op = __param_op;
	}

	~_1ab33d083_BinopExprModel(void) { this->self.ref = nullptr; }

	_1ab33d083_BinopExprModel(void) { this->self = jule::Ref<_1ab33d083_BinopExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab33d083_BinopExprModel &_Src) const {
		return 
			this->_field_left == _Src._field_left &&
			this->_field_right == _Src._field_right &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _1ab33d083_BinopExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab33d083_UnaryExprModel {
	jule::Ref<_1ab33d083_UnaryExprModel> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Str _field_op{jule::Str()};


	_1ab33d083_UnaryExprModel(jule::Any __param_expr, jule::Str __param_op) {
		this->self = jule::Ref<_1ab33d083_UnaryExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_op = __param_op;
	}

	~_1ab33d083_UnaryExprModel(void) { this->self.ref = nullptr; }

	_1ab33d083_UnaryExprModel(void) { this->self = jule::Ref<_1ab33d083_UnaryExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab33d083_UnaryExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _1ab33d083_UnaryExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab33d083_GetRefPtrExprModel {
	jule::Ref<_1ab33d083_GetRefPtrExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_1ab33d083_GetRefPtrExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_1ab33d083_GetRefPtrExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_1ab33d083_GetRefPtrExprModel(void) { this->self.ref = nullptr; }

	_1ab33d083_GetRefPtrExprModel(void) { this->self = jule::Ref<_1ab33d083_GetRefPtrExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab33d083_GetRefPtrExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1ab33d083_GetRefPtrExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab33d083_StructArgExprModel {
	jule::Ref<_1ab33d083_StructArgExprModel> self{};

	jule::Ref<_1b5e07a00_FieldIns> _field_field{jule::Ref<_1b5e07a00_FieldIns>()};
	jule::Any _field_expr{jule::Any()};


	_1ab33d083_StructArgExprModel(jule::Ref<_1b5e07a00_FieldIns> __param_field, jule::Any __param_expr) {
		this->self = jule::Ref<_1ab33d083_StructArgExprModel>::make(this, nullptr);

		this->_field_field = __param_field;
		this->_field_expr = __param_expr;
	}

	~_1ab33d083_StructArgExprModel(void) { this->self.ref = nullptr; }

	_1ab33d083_StructArgExprModel(void) { this->self = jule::Ref<_1ab33d083_StructArgExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab33d083_StructArgExprModel &_Src) const {
		return 
			this->_field_field == _Src._field_field &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1ab33d083_StructArgExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab33d083_StructLitExprModel {
	jule::Ref<_1ab33d083_StructLitExprModel> self{};

	jule::Ref<_1b5e07a00_StructIns> _field_strct{jule::Ref<_1b5e07a00_StructIns>()};
	jule::Slice<jule::Ref<_1ab33d083_StructArgExprModel>> _field_args{jule::Slice<jule::Ref<_1ab33d083_StructArgExprModel>>()};


	_1ab33d083_StructLitExprModel(jule::Ref<_1b5e07a00_StructIns> __param_strct, jule::Slice<jule::Ref<_1ab33d083_StructArgExprModel>> __param_args) {
		this->self = jule::Ref<_1ab33d083_StructLitExprModel>::make(this, nullptr);

		this->_field_strct = __param_strct;
		this->_field_args = __param_args;
	}

	~_1ab33d083_StructLitExprModel(void) { this->self.ref = nullptr; }

	_1ab33d083_StructLitExprModel(void) { this->self = jule::Ref<_1ab33d083_StructLitExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab33d083_StructLitExprModel &_Src) const {
		return 
			this->_field_strct == _Src._field_strct &&
			this->_field_args == _Src._field_args;
	}

	inline bool operator!=(const _1ab33d083_StructLitExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab33d083_AllocStructLitExprModel {
	jule::Ref<_1ab33d083_AllocStructLitExprModel> self{};

	jule::Ref<_1ab33d083_StructLitExprModel> _field_lit{jule::Ref<_1ab33d083_StructLitExprModel>()};


	_1ab33d083_AllocStructLitExprModel(jule::Ref<_1ab33d083_StructLitExprModel> __param_lit) {
		this->self = jule::Ref<_1ab33d083_AllocStructLitExprModel>::make(this, nullptr);

		this->_field_lit = __param_lit;
	}

	~_1ab33d083_AllocStructLitExprModel(void) { this->self.ref = nullptr; }

	_1ab33d083_AllocStructLitExprModel(void) { this->self = jule::Ref<_1ab33d083_AllocStructLitExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab33d083_AllocStructLitExprModel &_Src) const {
		return 
			this->_field_lit == _Src._field_lit;
	}

	inline bool operator!=(const _1ab33d083_AllocStructLitExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab33d083_CastingExprModel {
	jule::Ref<_1ab33d083_CastingExprModel> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Ref<_1ac6d02c0_TypeKind> _field_kind{jule::Ref<_1ac6d02c0_TypeKind>()};
	jule::Ref<_1ac6d02c0_TypeKind> _field_expr_kind{jule::Ref<_1ac6d02c0_TypeKind>()};


	_1ab33d083_CastingExprModel(jule::Any __param_expr, jule::Ref<_1ac6d02c0_TypeKind> __param_kind, jule::Ref<_1ac6d02c0_TypeKind> __param_expr_kind) {
		this->self = jule::Ref<_1ab33d083_CastingExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_kind = __param_kind;
		this->_field_expr_kind = __param_expr_kind;
	}

	~_1ab33d083_CastingExprModel(void) { this->self.ref = nullptr; }

	_1ab33d083_CastingExprModel(void) { this->self = jule::Ref<_1ab33d083_CastingExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab33d083_CastingExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_kind == _Src._field_kind &&
			this->_field_expr_kind == _Src._field_expr_kind;
	}

	inline bool operator!=(const _1ab33d083_CastingExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab33d083_FnCallExprModel {
	jule::Ref<_1ab33d083_FnCallExprModel> self{};

	jule::Ref<_1b557cd24_FnIns> _field_func{jule::Ref<_1b557cd24_FnIns>()};
	jule::Bool _field_is_co{jule::Bool()};
	jule::Any _field_expr{jule::Any()};
	jule::Slice<jule::Any> _field_args{jule::Slice<jule::Any>()};


	_1ab33d083_FnCallExprModel(jule::Ref<_1b557cd24_FnIns> __param_func, jule::Bool __param_is_co, jule::Any __param_expr, jule::Slice<jule::Any> __param_args) {
		this->self = jule::Ref<_1ab33d083_FnCallExprModel>::make(this, nullptr);

		this->_field_func = __param_func;
		this->_field_is_co = __param_is_co;
		this->_field_expr = __param_expr;
		this->_field_args = __param_args;
	}

	~_1ab33d083_FnCallExprModel(void) { this->self.ref = nullptr; }

	_1ab33d083_FnCallExprModel(void) { this->self = jule::Ref<_1ab33d083_FnCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab33d083_FnCallExprModel &_Src) const {
		return 
			this->_field_func == _Src._field_func &&
			this->_field_is_co == _Src._field_is_co &&
			this->_field_expr == _Src._field_expr &&
			this->_field_args == _Src._field_args;
	}

	inline bool operator!=(const _1ab33d083_FnCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab33d083_SliceExprModel {
	jule::Ref<_1ab33d083_SliceExprModel> self{};

	jule::Ref<_1ac6d02c0_TypeKind> _field_elem_kind{jule::Ref<_1ac6d02c0_TypeKind>()};
	jule::Slice<jule::Any> _field_elems{jule::Slice<jule::Any>()};


	_1ab33d083_SliceExprModel(jule::Ref<_1ac6d02c0_TypeKind> __param_elem_kind, jule::Slice<jule::Any> __param_elems) {
		this->self = jule::Ref<_1ab33d083_SliceExprModel>::make(this, nullptr);

		this->_field_elem_kind = __param_elem_kind;
		this->_field_elems = __param_elems;
	}

	~_1ab33d083_SliceExprModel(void) { this->self.ref = nullptr; }

	_1ab33d083_SliceExprModel(void) { this->self = jule::Ref<_1ab33d083_SliceExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab33d083_SliceExprModel &_Src) const {
		return 
			this->_field_elem_kind == _Src._field_elem_kind &&
			this->_field_elems == _Src._field_elems;
	}

	inline bool operator!=(const _1ab33d083_SliceExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab33d083_IndexigExprModel {
	jule::Ref<_1ab33d083_IndexigExprModel> self{};

	jule::Ref<_1ab00dbcc_Data> _field_expr{jule::Ref<_1ab00dbcc_Data>()};
	jule::Ref<_1ab00dbcc_Data> _field_index{jule::Ref<_1ab00dbcc_Data>()};


	_1ab33d083_IndexigExprModel(jule::Ref<_1ab00dbcc_Data> __param_expr, jule::Ref<_1ab00dbcc_Data> __param_index) {
		this->self = jule::Ref<_1ab33d083_IndexigExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_index = __param_index;
	}

	~_1ab33d083_IndexigExprModel(void) { this->self.ref = nullptr; }

	_1ab33d083_IndexigExprModel(void) { this->self = jule::Ref<_1ab33d083_IndexigExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab33d083_IndexigExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_index == _Src._field_index;
	}

	inline bool operator!=(const _1ab33d083_IndexigExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab33d083_AnonFnExprModel {
	jule::Ref<_1ab33d083_AnonFnExprModel> self{};

	jule::Ref<_1b557cd24_FnIns> _field_func{jule::Ref<_1b557cd24_FnIns>()};
	jule::Bool _field_global{jule::Bool()};


	_1ab33d083_AnonFnExprModel(jule::Ref<_1b557cd24_FnIns> __param_func, jule::Bool __param_global) {
		this->self = jule::Ref<_1ab33d083_AnonFnExprModel>::make(this, nullptr);

		this->_field_func = __param_func;
		this->_field_global = __param_global;
	}

	~_1ab33d083_AnonFnExprModel(void) { this->self.ref = nullptr; }

	_1ab33d083_AnonFnExprModel(void) { this->self = jule::Ref<_1ab33d083_AnonFnExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab33d083_AnonFnExprModel &_Src) const {
		return 
			this->_field_func == _Src._field_func &&
			this->_field_global == _Src._field_global;
	}

	inline bool operator!=(const _1ab33d083_AnonFnExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab33d083_KeyValPairExprModel {
	jule::Ref<_1ab33d083_KeyValPairExprModel> self{};

	jule::Any _field_key{jule::Any()};
	jule::Any _field_val{jule::Any()};


	_1ab33d083_KeyValPairExprModel(jule::Any __param_key, jule::Any __param_val) {
		this->self = jule::Ref<_1ab33d083_KeyValPairExprModel>::make(this, nullptr);

		this->_field_key = __param_key;
		this->_field_val = __param_val;
	}

	~_1ab33d083_KeyValPairExprModel(void) { this->self.ref = nullptr; }

	_1ab33d083_KeyValPairExprModel(void) { this->self = jule::Ref<_1ab33d083_KeyValPairExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab33d083_KeyValPairExprModel &_Src) const {
		return 
			this->_field_key == _Src._field_key &&
			this->_field_val == _Src._field_val;
	}

	inline bool operator!=(const _1ab33d083_KeyValPairExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab33d083_MapExprModel {
	jule::Ref<_1ab33d083_MapExprModel> self{};

	jule::Ref<_1ac6d02c0_TypeKind> _field_key_kind{jule::Ref<_1ac6d02c0_TypeKind>()};
	jule::Ref<_1ac6d02c0_TypeKind> _field_val_kind{jule::Ref<_1ac6d02c0_TypeKind>()};
	jule::Slice<jule::Ref<_1ab33d083_KeyValPairExprModel>> _field_entries{jule::Slice<jule::Ref<_1ab33d083_KeyValPairExprModel>>()};


	_1ab33d083_MapExprModel(jule::Ref<_1ac6d02c0_TypeKind> __param_key_kind, jule::Ref<_1ac6d02c0_TypeKind> __param_val_kind, jule::Slice<jule::Ref<_1ab33d083_KeyValPairExprModel>> __param_entries) {
		this->self = jule::Ref<_1ab33d083_MapExprModel>::make(this, nullptr);

		this->_field_key_kind = __param_key_kind;
		this->_field_val_kind = __param_val_kind;
		this->_field_entries = __param_entries;
	}

	~_1ab33d083_MapExprModel(void) { this->self.ref = nullptr; }

	_1ab33d083_MapExprModel(void) { this->self = jule::Ref<_1ab33d083_MapExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab33d083_MapExprModel &_Src) const {
		return 
			this->_field_key_kind == _Src._field_key_kind &&
			this->_field_val_kind == _Src._field_val_kind &&
			this->_field_entries == _Src._field_entries;
	}

	inline bool operator!=(const _1ab33d083_MapExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab33d083_SlicingExprModel {
	jule::Ref<_1ab33d083_SlicingExprModel> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Any _field_left{jule::Any()};
	jule::Any _field_right{jule::Any()};


	_1ab33d083_SlicingExprModel(jule::Any __param_expr, jule::Any __param_left, jule::Any __param_right) {
		this->self = jule::Ref<_1ab33d083_SlicingExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_left = __param_left;
		this->_field_right = __param_right;
	}

	~_1ab33d083_SlicingExprModel(void) { this->self.ref = nullptr; }

	_1ab33d083_SlicingExprModel(void) { this->self = jule::Ref<_1ab33d083_SlicingExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab33d083_SlicingExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_left == _Src._field_left &&
			this->_field_right == _Src._field_right;
	}

	inline bool operator!=(const _1ab33d083_SlicingExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab33d083_TraitSubIdentExprModel {
	jule::Ref<_1ab33d083_TraitSubIdentExprModel> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Str _field_ident{jule::Str()};


	_1ab33d083_TraitSubIdentExprModel(jule::Any __param_expr, jule::Str __param_ident) {
		this->self = jule::Ref<_1ab33d083_TraitSubIdentExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_ident = __param_ident;
	}

	~_1ab33d083_TraitSubIdentExprModel(void) { this->self.ref = nullptr; }

	_1ab33d083_TraitSubIdentExprModel(void) { this->self = jule::Ref<_1ab33d083_TraitSubIdentExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab33d083_TraitSubIdentExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1ab33d083_TraitSubIdentExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab33d083_StructSubIdentExprModel {
	jule::Ref<_1ab33d083_StructSubIdentExprModel> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Ref<_1ac6d02c0_TypeKind> _field_expr_kind{jule::Ref<_1ac6d02c0_TypeKind>()};
	jule::Ref<_1b557cd24_FnIns> _field_method{jule::Ref<_1b557cd24_FnIns>()};
	jule::Ref<_1b5e07a00_FieldIns> _field_field{jule::Ref<_1b5e07a00_FieldIns>()};


	_1ab33d083_StructSubIdentExprModel(jule::Any __param_expr, jule::Ref<_1ac6d02c0_TypeKind> __param_expr_kind, jule::Ref<_1b557cd24_FnIns> __param_method, jule::Ref<_1b5e07a00_FieldIns> __param_field) {
		this->self = jule::Ref<_1ab33d083_StructSubIdentExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_expr_kind = __param_expr_kind;
		this->_field_method = __param_method;
		this->_field_field = __param_field;
	}

	~_1ab33d083_StructSubIdentExprModel(void) { this->self.ref = nullptr; }

	_1ab33d083_StructSubIdentExprModel(void) { this->self = jule::Ref<_1ab33d083_StructSubIdentExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab33d083_StructSubIdentExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_expr_kind == _Src._field_expr_kind &&
			this->_field_method == _Src._field_method &&
			this->_field_field == _Src._field_field;
	}

	inline bool operator!=(const _1ab33d083_StructSubIdentExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab33d083_StructStaticIdentExprModel {
	jule::Ref<_1ab33d083_StructStaticIdentExprModel> self{};

	jule::Ref<_1b5e07a00_StructIns> _field_structure{jule::Ref<_1b5e07a00_StructIns>()};
	jule::Any _field_expr{jule::Any()};
	jule::Ref<_1b557cd24_FnIns> _field_method{jule::Ref<_1b557cd24_FnIns>()};


	_1ab33d083_StructStaticIdentExprModel(jule::Ref<_1b5e07a00_StructIns> __param_structure, jule::Any __param_expr, jule::Ref<_1b557cd24_FnIns> __param_method) {
		this->self = jule::Ref<_1ab33d083_StructStaticIdentExprModel>::make(this, nullptr);

		this->_field_structure = __param_structure;
		this->_field_expr = __param_expr;
		this->_field_method = __param_method;
	}

	~_1ab33d083_StructStaticIdentExprModel(void) { this->self.ref = nullptr; }

	_1ab33d083_StructStaticIdentExprModel(void) { this->self = jule::Ref<_1ab33d083_StructStaticIdentExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab33d083_StructStaticIdentExprModel &_Src) const {
		return 
			this->_field_structure == _Src._field_structure &&
			this->_field_expr == _Src._field_expr &&
			this->_field_method == _Src._field_method;
	}

	inline bool operator!=(const _1ab33d083_StructStaticIdentExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab33d083_ArrayExprModel {
	jule::Ref<_1ab33d083_ArrayExprModel> self{};

	jule::Ref<_1ac6d02c0_Arr> _field_kind{jule::Ref<_1ac6d02c0_Arr>()};
	jule::Slice<jule::Any> _field_elems{jule::Slice<jule::Any>()};


	_1ab33d083_ArrayExprModel(jule::Ref<_1ac6d02c0_Arr> __param_kind, jule::Slice<jule::Any> __param_elems) {
		this->self = jule::Ref<_1ab33d083_ArrayExprModel>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_elems = __param_elems;
	}

	~_1ab33d083_ArrayExprModel(void) { this->self.ref = nullptr; }

	_1ab33d083_ArrayExprModel(void) { this->self = jule::Ref<_1ab33d083_ArrayExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab33d083_ArrayExprModel &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_elems == _Src._field_elems;
	}

	inline bool operator!=(const _1ab33d083_ArrayExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab33d083_CommonIdentExprModel {
	jule::Ref<_1ab33d083_CommonIdentExprModel> self{};

	jule::Str _field_ident{jule::Str()};


	_1ab33d083_CommonIdentExprModel(jule::Str __param_ident) {
		this->self = jule::Ref<_1ab33d083_CommonIdentExprModel>::make(this, nullptr);

		this->_field_ident = __param_ident;
	}

	~_1ab33d083_CommonIdentExprModel(void) { this->self.ref = nullptr; }

	_1ab33d083_CommonIdentExprModel(void) { this->self = jule::Ref<_1ab33d083_CommonIdentExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab33d083_CommonIdentExprModel &_Src) const {
		return 
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1ab33d083_CommonIdentExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab33d083_CommonSubIdentExprModel {
	jule::Ref<_1ab33d083_CommonSubIdentExprModel> self{};

	jule::Ref<_1ac6d02c0_TypeKind> _field_expr_kind{jule::Ref<_1ac6d02c0_TypeKind>()};
	jule::Any _field_expr{jule::Any()};
	jule::Str _field_ident{jule::Str()};


	_1ab33d083_CommonSubIdentExprModel(jule::Ref<_1ac6d02c0_TypeKind> __param_expr_kind, jule::Any __param_expr, jule::Str __param_ident) {
		this->self = jule::Ref<_1ab33d083_CommonSubIdentExprModel>::make(this, nullptr);

		this->_field_expr_kind = __param_expr_kind;
		this->_field_expr = __param_expr;
		this->_field_ident = __param_ident;
	}

	~_1ab33d083_CommonSubIdentExprModel(void) { this->self.ref = nullptr; }

	_1ab33d083_CommonSubIdentExprModel(void) { this->self = jule::Ref<_1ab33d083_CommonSubIdentExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab33d083_CommonSubIdentExprModel &_Src) const {
		return 
			this->_field_expr_kind == _Src._field_expr_kind &&
			this->_field_expr == _Src._field_expr &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1ab33d083_CommonSubIdentExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab33d083_TupleExprModel {
	jule::Ref<_1ab33d083_TupleExprModel> self{};

	jule::Slice<jule::Ref<_1ab00dbcc_Data>> _field_datas{jule::Slice<jule::Ref<_1ab00dbcc_Data>>()};


	_1ab33d083_TupleExprModel(jule::Slice<jule::Ref<_1ab00dbcc_Data>> __param_datas) {
		this->self = jule::Ref<_1ab33d083_TupleExprModel>::make(this, nullptr);

		this->_field_datas = __param_datas;
	}

	~_1ab33d083_TupleExprModel(void) { this->self.ref = nullptr; }

	_1ab33d083_TupleExprModel(void) { this->self = jule::Ref<_1ab33d083_TupleExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab33d083_TupleExprModel &_Src) const {
		return 
			this->_field_datas == _Src._field_datas;
	}

	inline bool operator!=(const _1ab33d083_TupleExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab33d083_BuiltinOutCallExprModel {
	jule::Ref<_1ab33d083_BuiltinOutCallExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_1ab33d083_BuiltinOutCallExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_1ab33d083_BuiltinOutCallExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_1ab33d083_BuiltinOutCallExprModel(void) { this->self.ref = nullptr; }

	_1ab33d083_BuiltinOutCallExprModel(void) { this->self = jule::Ref<_1ab33d083_BuiltinOutCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab33d083_BuiltinOutCallExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1ab33d083_BuiltinOutCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab33d083_BuiltinOutlnCallExprModel {
	jule::Ref<_1ab33d083_BuiltinOutlnCallExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_1ab33d083_BuiltinOutlnCallExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_1ab33d083_BuiltinOutlnCallExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_1ab33d083_BuiltinOutlnCallExprModel(void) { this->self.ref = nullptr; }

	_1ab33d083_BuiltinOutlnCallExprModel(void) { this->self = jule::Ref<_1ab33d083_BuiltinOutlnCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab33d083_BuiltinOutlnCallExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1ab33d083_BuiltinOutlnCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab33d083_BuiltinCloneCallExprModel {
	jule::Ref<_1ab33d083_BuiltinCloneCallExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_1ab33d083_BuiltinCloneCallExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_1ab33d083_BuiltinCloneCallExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_1ab33d083_BuiltinCloneCallExprModel(void) { this->self.ref = nullptr; }

	_1ab33d083_BuiltinCloneCallExprModel(void) { this->self = jule::Ref<_1ab33d083_BuiltinCloneCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab33d083_BuiltinCloneCallExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1ab33d083_BuiltinCloneCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab33d083_BuiltinNewCallExprModel {
	jule::Ref<_1ab33d083_BuiltinNewCallExprModel> self{};

	jule::Ref<_1ac6d02c0_TypeKind> _field_kind{jule::Ref<_1ac6d02c0_TypeKind>()};
	jule::Any _field_init{jule::Any()};


	_1ab33d083_BuiltinNewCallExprModel(jule::Ref<_1ac6d02c0_TypeKind> __param_kind, jule::Any __param_init) {
		this->self = jule::Ref<_1ab33d083_BuiltinNewCallExprModel>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_init = __param_init;
	}

	~_1ab33d083_BuiltinNewCallExprModel(void) { this->self.ref = nullptr; }

	_1ab33d083_BuiltinNewCallExprModel(void) { this->self = jule::Ref<_1ab33d083_BuiltinNewCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab33d083_BuiltinNewCallExprModel &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_init == _Src._field_init;
	}

	inline bool operator!=(const _1ab33d083_BuiltinNewCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab33d083_BuiltinRealCallExprModel {
	jule::Ref<_1ab33d083_BuiltinRealCallExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_1ab33d083_BuiltinRealCallExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_1ab33d083_BuiltinRealCallExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_1ab33d083_BuiltinRealCallExprModel(void) { this->self.ref = nullptr; }

	_1ab33d083_BuiltinRealCallExprModel(void) { this->self = jule::Ref<_1ab33d083_BuiltinRealCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab33d083_BuiltinRealCallExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1ab33d083_BuiltinRealCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab33d083_BuiltinDropCallExprModel {
	jule::Ref<_1ab33d083_BuiltinDropCallExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_1ab33d083_BuiltinDropCallExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_1ab33d083_BuiltinDropCallExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_1ab33d083_BuiltinDropCallExprModel(void) { this->self.ref = nullptr; }

	_1ab33d083_BuiltinDropCallExprModel(void) { this->self = jule::Ref<_1ab33d083_BuiltinDropCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab33d083_BuiltinDropCallExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1ab33d083_BuiltinDropCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab33d083_BuiltinPanicCallExprModel {
	jule::Ref<_1ab33d083_BuiltinPanicCallExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_1ab33d083_BuiltinPanicCallExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_1ab33d083_BuiltinPanicCallExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_1ab33d083_BuiltinPanicCallExprModel(void) { this->self.ref = nullptr; }

	_1ab33d083_BuiltinPanicCallExprModel(void) { this->self = jule::Ref<_1ab33d083_BuiltinPanicCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab33d083_BuiltinPanicCallExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1ab33d083_BuiltinPanicCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab33d083_BuiltinMakeCallExprModel {
	jule::Ref<_1ab33d083_BuiltinMakeCallExprModel> self{};

	jule::Ref<_1ac6d02c0_TypeKind> _field_kind{jule::Ref<_1ac6d02c0_TypeKind>()};
	jule::Any _field_len{jule::Any()};
	jule::Any _field_cap{jule::Any()};


	_1ab33d083_BuiltinMakeCallExprModel(jule::Ref<_1ac6d02c0_TypeKind> __param_kind, jule::Any __param_len, jule::Any __param_cap) {
		this->self = jule::Ref<_1ab33d083_BuiltinMakeCallExprModel>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_len = __param_len;
		this->_field_cap = __param_cap;
	}

	~_1ab33d083_BuiltinMakeCallExprModel(void) { this->self.ref = nullptr; }

	_1ab33d083_BuiltinMakeCallExprModel(void) { this->self = jule::Ref<_1ab33d083_BuiltinMakeCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab33d083_BuiltinMakeCallExprModel &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_len == _Src._field_len &&
			this->_field_cap == _Src._field_cap;
	}

	inline bool operator!=(const _1ab33d083_BuiltinMakeCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab33d083_BuiltinAppendCallExprModel {
	jule::Ref<_1ab33d083_BuiltinAppendCallExprModel> self{};

	jule::Any _field_dest{jule::Any()};
	jule::Any _field_elements{jule::Any()};


	_1ab33d083_BuiltinAppendCallExprModel(jule::Any __param_dest, jule::Any __param_elements) {
		this->self = jule::Ref<_1ab33d083_BuiltinAppendCallExprModel>::make(this, nullptr);

		this->_field_dest = __param_dest;
		this->_field_elements = __param_elements;
	}

	~_1ab33d083_BuiltinAppendCallExprModel(void) { this->self.ref = nullptr; }

	_1ab33d083_BuiltinAppendCallExprModel(void) { this->self = jule::Ref<_1ab33d083_BuiltinAppendCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab33d083_BuiltinAppendCallExprModel &_Src) const {
		return 
			this->_field_dest == _Src._field_dest &&
			this->_field_elements == _Src._field_elements;
	}

	inline bool operator!=(const _1ab33d083_BuiltinAppendCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab33d083_BuiltinErrorTraitSubIdentExprModel {
	jule::Ref<_1ab33d083_BuiltinErrorTraitSubIdentExprModel> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Str _field_ident{jule::Str()};


	_1ab33d083_BuiltinErrorTraitSubIdentExprModel(jule::Any __param_expr, jule::Str __param_ident) {
		this->self = jule::Ref<_1ab33d083_BuiltinErrorTraitSubIdentExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_ident = __param_ident;
	}

	~_1ab33d083_BuiltinErrorTraitSubIdentExprModel(void) { this->self.ref = nullptr; }

	_1ab33d083_BuiltinErrorTraitSubIdentExprModel(void) { this->self = jule::Ref<_1ab33d083_BuiltinErrorTraitSubIdentExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab33d083_BuiltinErrorTraitSubIdentExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1ab33d083_BuiltinErrorTraitSubIdentExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab33d083_SizeofExprModel {
	jule::Ref<_1ab33d083_SizeofExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_1ab33d083_SizeofExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_1ab33d083_SizeofExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_1ab33d083_SizeofExprModel(void) { this->self.ref = nullptr; }

	_1ab33d083_SizeofExprModel(void) { this->self = jule::Ref<_1ab33d083_SizeofExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab33d083_SizeofExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1ab33d083_SizeofExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab33d083_AlignofExprModel {
	jule::Ref<_1ab33d083_AlignofExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_1ab33d083_AlignofExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_1ab33d083_AlignofExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_1ab33d083_AlignofExprModel(void) { this->self.ref = nullptr; }

	_1ab33d083_AlignofExprModel(void) { this->self = jule::Ref<_1ab33d083_AlignofExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab33d083_AlignofExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1ab33d083_AlignofExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab33d083_RuneExprModel {
	jule::Ref<_1ab33d083_RuneExprModel> self{};

	jule::I32 _field_code{jule::I32()};


	_1ab33d083_RuneExprModel(jule::I32 __param_code) {
		this->self = jule::Ref<_1ab33d083_RuneExprModel>::make(this, nullptr);

		this->_field_code = __param_code;
	}

	~_1ab33d083_RuneExprModel(void) { this->self.ref = nullptr; }

	_1ab33d083_RuneExprModel(void) { this->self = jule::Ref<_1ab33d083_RuneExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab33d083_RuneExprModel &_Src) const {
		return 
			this->_field_code == _Src._field_code;
	}

	inline bool operator!=(const _1ab33d083_RuneExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab33d083_ExplicitDerefExprModel {
	jule::Ref<_1ab33d083_ExplicitDerefExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_1ab33d083_ExplicitDerefExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_1ab33d083_ExplicitDerefExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_1ab33d083_ExplicitDerefExprModel(void) { this->self.ref = nullptr; }

	_1ab33d083_ExplicitDerefExprModel(void) { this->self = jule::Ref<_1ab33d083_ExplicitDerefExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab33d083_ExplicitDerefExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1ab33d083_ExplicitDerefExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab33d083_IntegratedToStrExprModel {
	jule::Ref<_1ab33d083_IntegratedToStrExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_1ab33d083_IntegratedToStrExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_1ab33d083_IntegratedToStrExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_1ab33d083_IntegratedToStrExprModel(void) { this->self.ref = nullptr; }

	_1ab33d083_IntegratedToStrExprModel(void) { this->self = jule::Ref<_1ab33d083_IntegratedToStrExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab33d083_IntegratedToStrExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1ab33d083_IntegratedToStrExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab33d083_TernaryExprModel {
	jule::Ref<_1ab33d083_TernaryExprModel> self{};

	jule::Any _field_condition{jule::Any()};
	jule::Any _field_true_expr{jule::Any()};
	jule::Any _field_false_expr{jule::Any()};


	_1ab33d083_TernaryExprModel(jule::Any __param_condition, jule::Any __param_true_expr, jule::Any __param_false_expr) {
		this->self = jule::Ref<_1ab33d083_TernaryExprModel>::make(this, nullptr);

		this->_field_condition = __param_condition;
		this->_field_true_expr = __param_true_expr;
		this->_field_false_expr = __param_false_expr;
	}

	~_1ab33d083_TernaryExprModel(void) { this->self.ref = nullptr; }

	_1ab33d083_TernaryExprModel(void) { this->self = jule::Ref<_1ab33d083_TernaryExprModel>::make(this, nullptr); }

	inline bool operator==(const _1ab33d083_TernaryExprModel &_Src) const {
		return 
			this->_field_condition == _Src._field_condition &&
			this->_field_true_expr == _Src._field_true_expr &&
			this->_field_false_expr == _Src._field_false_expr;
	}

	inline bool operator!=(const _1ab33d083_TernaryExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1ab194c20_Package: public _1aae290e2_Lookup {
	jule::Ref<_1ab194c20_Package> self{};

	jule::Slice<jule::Ref<_1ab00cc20_SymbolTable>> _field_files{jule::Slice<jule::Ref<_1ab00cc20_SymbolTable>>()};


	_1ab194c20_Package(jule::Slice<jule::Ref<_1ab00cc20_SymbolTable>> __param_files) {
		this->self = jule::Ref<_1ab194c20_Package>::make(this, nullptr);

		this->_field_files = __param_files;
	}

	~_1ab194c20_Package(void) { this->self.ref = nullptr; }

	_1ab194c20_Package(void) { this->self = jule::Ref<_1ab194c20_Package>::make(this, nullptr); }

	inline jule::Ref<_1ab194c20_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ref<_1ab194c20_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ref<_1ab194c20_ImportInfo>)>);


	inline jule::Ref<_1b623eab2_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ref<_1ac6d02c0_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ref<_1b5e07a00_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ref<_1b557cd24_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ref<_1aaee9091_Trait> _method_find_trait(jule::Str);


	inline jule::Ref<_1a909ac6b_Enum> _method_find_enum(jule::Str);


	inline bool operator==(const _1ab194c20_Package &_Src) const {
		return 
			this->_field_files == _Src._field_files;
	}

	inline bool operator!=(const _1ab194c20_Package &_Src) const { return !this->operator==(_Src); }
};


struct _1ab195050_Sema: public _1aae290e2_Lookup {
	jule::Ref<_1ab195050_Sema> self{};

	jule::Slice<_1cdeeb191_Log> _field_errors{jule::Slice<_1cdeeb191_Log>()};
	jule::Slice<jule::Ref<_1ab00cc20_SymbolTable>> _field_files{jule::Slice<jule::Ref<_1ab00cc20_SymbolTable>>()};
	jule::Ref<_1ab00cc20_SymbolTable> _field_file{jule::Ref<_1ab00cc20_SymbolTable>()};
	jule::Int _field_flags{0LL};


	_1ab195050_Sema(jule::Slice<_1cdeeb191_Log> __param_errors, jule::Slice<jule::Ref<_1ab00cc20_SymbolTable>> __param_files, jule::Ref<_1ab00cc20_SymbolTable> __param_file, jule::Int __param_flags) {
		this->self = jule::Ref<_1ab195050_Sema>::make(this, nullptr);

		this->_field_errors = __param_errors;
		this->_field_files = __param_files;
		this->_field_file = __param_file;
		this->_field_flags = __param_flags;
	}

	~_1ab195050_Sema(void) { this->self.ref = nullptr; }

	_1ab195050_Sema(void) { this->self = jule::Ref<_1ab195050_Sema>::make(this, nullptr); }

	inline jule::Ref<_1ab194c20_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ref<_1ab194c20_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ref<_1ab194c20_ImportInfo>)>);


	inline jule::Ref<_1b623eab2_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ref<_1ac6d02c0_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ref<_1b5e07a00_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ref<_1b557cd24_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ref<_1aaee9091_Trait> _method_find_trait(jule::Str);


	inline jule::Ref<_1a909ac6b_Enum> _method_find_enum(jule::Str);


	inline jule::Bool _method_is_flag(jule::Int);


	inline void _method_set_current_file(jule::Ref<_1ab00cc20_SymbolTable>);


	inline void _method_push_err(_1b61ec5ec_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline jule::Bool _method_is_accessible_define(jule::Bool,_1b61ec5ec_Token);


	inline jule::Bool _method_is_duplicated_ident(jule::Uintptr,jule::Str,jule::Bool);


	inline jule::Bool _method_check_generic_quantity(jule::Int,jule::Int,_1b61ec5ec_Token);


	inline jule::Bool _method_is_duplicated_import_selection(jule::Uintptr,jule::Str);


	inline jule::Any _method_get_import_def(jule::Str,jule::Ref<_1ab194c20_ImportInfo>&);


	inline void _method_check_import_selections(jule::Ref<_1ab194c20_ImportInfo>&);


	inline jule::Bool _method_is_use_alias_duplication(jule::Ref<_1ab194c20_ImportInfo>&);


	inline jule::Bool _method_check_import(jule::Ref<_1ab194c20_ImportInfo>&);


	inline void _method_check_imports(void);


	inline void _method_impl_file_impls(void);


	inline void _method_impl_impls(void);


	inline void _method_check_enums(void);


	inline jule::Bool _method_check_type_with_refers(jule::Ref<_1ac6d02c0_TypeSymbol>&,jule::Trait<_1aae290e2_Lookup>,jule::Ref<_1ac6d02c0_Referencer>);


	inline jule::Bool _method_check_type(jule::Ref<_1ac6d02c0_TypeSymbol>&,jule::Trait<_1aae290e2_Lookup>);


	inline jule::Ref<_1ac6d02c0_TypeKind> _method_build_type_with_generics(jule::Ref<_1b61ca014_TypeDecl>&,jule::Slice<jule::Ref<_1ac6d02c0_TypeAlias>>);


	inline jule::Ref<_1ac6d02c0_TypeKind> _method_build_type(jule::Ref<_1b61ca014_TypeDecl>&);


	inline jule::Ref<_1ab00dbcc_Data> _method_evalpd(jule::Ref<_1b61ca014_Expr>&,jule::Trait<_1aae290e2_Lookup>,jule::Ref<_1ac6d02c0_TypeKind>,jule::Ref<_1b623eab2_Var>);


	inline jule::Ref<_1ab00dbcc_Data> _method_evalp(jule::Ref<_1b61ca014_Expr>,jule::Trait<_1aae290e2_Lookup>,jule::Ref<_1ac6d02c0_TypeKind>);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval(jule::Ref<_1b61ca014_Expr>&,jule::Trait<_1aae290e2_Lookup>);


	inline void _method_check_assign_type(jule::Bool,jule::Ref<_1ac6d02c0_TypeKind>&,jule::Ref<_1ab00dbcc_Data>&,_1b61ec5ec_Token,jule::Bool);


	inline jule::Bool _method_check_type_compatibility(jule::Ref<_1ac6d02c0_TypeKind>&,jule::Ref<_1ac6d02c0_TypeKind>&,_1b61ec5ec_Token&,jule::Bool);


	inline jule::Ref<_1ac6d02c0_TypeKind> _method_build_non_generic_type_kind(jule::Ref<_1b61ca014_TypeDecl>&,jule::Slice<jule::Ref<_1b61ca014_GenericDecl>>&);


	inline void _method_build_fn_non_generic_type_kinds(jule::Ref<_1b557cd24_FnIns>&);


	inline jule::Ref<_1b557cd24_FnIns> _method_get_trait_check_fn_kind(jule::Ref<_1b557cd24_Fn>&);


	inline jule::Bool _method_reload_fn_ins_types(jule::Ref<_1b557cd24_FnIns>&);


	inline void _method_check_ref_validity_for_init_expr(jule::Bool,jule::Ref<_1ab00dbcc_Data>&,_1b61ec5ec_Token&);


	inline void _method_check_validity_for_init_expr(jule::Bool,jule::Bool,jule::Ref<_1ac6d02c0_TypeKind>&,jule::Ref<_1ab00dbcc_Data>&,_1b61ec5ec_Token&);


	inline jule::Bool _method_check_type_alias_decl_kind(jule::Ref<_1ac6d02c0_TypeAlias>&,jule::Trait<_1aae290e2_Lookup>);


	inline void _method_check_type_alias_decl(jule::Ref<_1ac6d02c0_TypeAlias>&,jule::Trait<_1aae290e2_Lookup>);


	inline void _method_check_type_alias_decl_dup(jule::Ref<_1ac6d02c0_TypeAlias>&);


	inline jule::Bool _method_check_type_alias_decls(void);


	inline void _method_check_enum_items_dup(jule::Ref<_1a909ac6b_Enum>);


	inline void _method_check_enum_items_str(jule::Ref<_1a909ac6b_Enum>&);


	inline void _method_check_enum_items_int(jule::Ref<_1a909ac6b_Enum>&);


	inline void _method_check_enum_decl(jule::Ref<_1a909ac6b_Enum>&);


	inline jule::Bool _method_check_enum_decls(void);


	inline jule::Bool _method_check_decl_generics(jule::Slice<jule::Ref<_1b61ca014_GenericDecl>>&);


	inline jule::Bool _method_check_fn_decl_params_dup(jule::Ref<_1b557cd24_Fn>&);


	inline jule::Bool _method_check_fn_decl_result_dup(jule::Ref<_1b557cd24_Fn>&);


	inline jule::Bool _method_check_fn_decl_types(jule::Ref<_1b557cd24_Fn>&);


	inline jule::Bool _method_check_fn_decl_prototype(jule::Ref<_1b557cd24_Fn>&);


	inline void _method_check_trait_decl_method(jule::Ref<_1b557cd24_Fn>&);


	inline void _method_check_trait_decl_methods(jule::Ref<_1aaee9091_Trait>&);


	inline void _method_check_trait_decl(jule::Ref<_1aaee9091_Trait>&);


	inline jule::Bool _method_check_trait_decls(void);


	inline jule::Bool _method_check_trait_impl_methods(jule::Ref<_1aaee9091_Trait>&,jule::Ref<_1ab0017b3_Impl>&);


	inline jule::Bool _method_impl_to_struct(jule::Ref<_1b5e07a00_Struct>&,jule::Ref<_1ab0017b3_Impl>&);


	inline void _method_impl_trait(jule::Ref<_1ab0017b3_Impl>&);


	inline void _method_impl_struct(jule::Ref<_1ab0017b3_Impl>&);


	inline void _method_impl_impl(jule::Ref<_1ab0017b3_Impl>&);


	inline void _method_check_var_decl(jule::Ref<_1b623eab2_Var>&,jule::Trait<_1aae290e2_Lookup>);


	inline void _method_check_global_var_decl(jule::Ref<_1b623eab2_Var>&);


	inline jule::Bool _method_check_global_decls(void);


	inline jule::Bool _method_check_struct_trait_impl(jule::Ref<_1b5e07a00_Struct>&,jule::Ref<_1aaee9091_Trait>&);


	inline jule::Bool _method_check_struct_impls(jule::Ref<_1b5e07a00_Struct>&);


	inline jule::Bool _method_check_struct_fields(jule::Ref<_1b5e07a00_Struct>&);


	inline jule::Bool _method_check_struct_decl_methods(jule::Ref<_1b5e07a00_Struct>&);


	inline void _method_check_struct_decl(jule::Ref<_1b5e07a00_Struct>&);


	inline jule::Bool _method_check_struct_decls(void);


	inline void _method_check_fn_decl(jule::Ref<_1b557cd24_Fn>&);


	inline jule::Bool _method_check_fn_decls(void);


	inline jule::Bool _method_check_directive_pass(_1b5589c76_Pass&);


	inline jule::Bool _method_check_passes(void);


	inline void _method_push_cycle_error(jule::Ref<_1b5e07a00_Struct>&,jule::Ref<_1b5e07a00_Struct>&,jule::Str&);


	inline jule::Bool _method_check_cross_cycle(jule::Ref<_1b5e07a00_Struct>&,jule::Ref<_1b5e07a00_Struct>&,jule::Str&);


	inline jule::Bool _method_check_struct_derive_illegal_cycles(jule::Str,jule::Ref<_1b5e07a00_Struct>&,jule::Ref<_1ac6d02c0_TypeKind>&);


	inline jule::Bool _method_check_struct_ins_derive_clone(jule::Ref<_1b5e07a00_StructIns>);


	inline jule::Bool _method_check_struct_derive_clone(jule::Ref<_1b5e07a00_Struct>&);


	inline jule::Bool _method_check_file_derives(void);


	inline void _method_check_package_derives(void);


	inline void _method_check_package_decls(void);


	inline void _method_check_data_for_type_inference(jule::Ref<_1ab00dbcc_Data>&,_1b61ec5ec_Token&);


	inline void _method_check_var(jule::Ref<_1b623eab2_Var>&);


	inline void _method_check_type_var(jule::Ref<_1b623eab2_Var>&,jule::Trait<_1aae290e2_Lookup>);


	inline void _method_check_global_types(void);


	inline void _method_check_type_method(jule::Ref<_1b5e07a00_StructIns>&,jule::Ref<_1b557cd24_Fn>&);


	inline void _method_check_type_struct(jule::Ref<_1b5e07a00_Struct>&);


	inline void _method_check_struct_types(void);


	inline void _method_check_rets(jule::Ref<_1b557cd24_FnIns>&);


	inline void _method_check_fn_ins_sc(jule::Ref<_1b557cd24_FnIns>&,jule::Ref<_1ab009de8_ScopeChecker>&);


	inline void _method_check_fn_ins(jule::Ref<_1b557cd24_FnIns>&);


	inline void _method_check_type_fn(jule::Ref<_1b557cd24_Fn>&);


	inline void _method_precheck_type_fn(jule::Ref<_1b557cd24_Fn>&);


	inline jule::Bool _method_precheck_fn_types(void);


	inline jule::Bool _method_check_fn_types(void);


	inline void _method_check_package_types(void);


	inline void _method_set_file_sema_fields(void);


	inline void _method_set_sema_fields(void);


	inline void _method_check(jule::Slice<jule::Ref<_1ab00cc20_SymbolTable>>&);


	inline bool operator==(const _1ab195050_Sema &_Src) const {
		return 
			this->_field_errors == _Src._field_errors &&
			this->_field_files == _Src._field_files &&
			this->_field_file == _Src._field_file &&
			this->_field_flags == _Src._field_flags;
	}

	inline bool operator!=(const _1ab195050_Sema &_Src) const { return !this->operator==(_Src); }
};


struct _1a8dc912c_RangeChecker {
	jule::Ref<_1a8dc912c_RangeChecker> self{};

	jule::Ref<_1ab009de8_ScopeChecker> _field_sc{jule::Ref<_1ab009de8_ScopeChecker>()};
	jule::Ref<_1b61ca014_RangeKind> _field_rang{jule::Ref<_1b61ca014_RangeKind>()};
	jule::Ref<_1ab009de8_RangeIter> _field_kind{jule::Ref<_1ab009de8_RangeIter>()};
	jule::Ref<_1ab00dbcc_Data> _field_d{jule::Ref<_1ab00dbcc_Data>()};


	_1a8dc912c_RangeChecker(jule::Ref<_1ab009de8_ScopeChecker> __param_sc, jule::Ref<_1b61ca014_RangeKind> __param_rang, jule::Ref<_1ab009de8_RangeIter> __param_kind, jule::Ref<_1ab00dbcc_Data> __param_d) {
		this->self = jule::Ref<_1a8dc912c_RangeChecker>::make(this, nullptr);

		this->_field_sc = __param_sc;
		this->_field_rang = __param_rang;
		this->_field_kind = __param_kind;
		this->_field_d = __param_d;
	}

	~_1a8dc912c_RangeChecker(void) { this->self.ref = nullptr; }

	_1a8dc912c_RangeChecker(void) { this->self = jule::Ref<_1a8dc912c_RangeChecker>::make(this, nullptr); }

	inline jule::Ref<_1b623eab2_Var> _method_build_var(jule::Ref<_1b61ca014_VarDecl>&);


	inline void _method_set_size_key(void);


	inline void _method_check_range_expr_validity(jule::Ref<_1ab00dbcc_Data>&,jule::Ref<_1b623eab2_Var>&,jule::Ref<_1ac6d02c0_TypeKind>&);


	inline void _method_check_slice(void);


	inline void _method_check_array(void);


	inline void _method_check_map_key_a(void);


	inline void _method_check_map_key_b(void);


	inline void _method_check_map(void);


	inline void _method_check_str(void);


	inline jule::Bool _method_check(void);


	inline bool operator==(const _1a8dc912c_RangeChecker &_Src) const {
		return 
			this->_field_sc == _Src._field_sc &&
			this->_field_rang == _Src._field_rang &&
			this->_field_kind == _Src._field_kind &&
			this->_field_d == _Src._field_d;
	}

	inline bool operator!=(const _1a8dc912c_RangeChecker &_Src) const { return !this->operator==(_Src); }
};


struct _1ab00cc20_SymbolTable: public _1aae290e2_Lookup {
	jule::Ref<_1ab00cc20_SymbolTable> self{};

	jule::Ref<_1b61ece27_File> _field_file{jule::Ref<_1b61ece27_File>()};
	jule::Slice<_1b5589c76_Pass> _field_passes{jule::Slice<_1b5589c76_Pass>()};
	jule::Slice<jule::Ref<_1ab194c20_ImportInfo>> _field_imports{jule::Slice<jule::Ref<_1ab194c20_ImportInfo>>()};
	jule::Slice<jule::Ref<_1b623eab2_Var>> _field_vars{jule::Slice<jule::Ref<_1b623eab2_Var>>()};
	jule::Slice<jule::Ref<_1ac6d02c0_TypeAlias>> _field_type_aliases{jule::Slice<jule::Ref<_1ac6d02c0_TypeAlias>>()};
	jule::Slice<jule::Ref<_1b5e07a00_Struct>> _field_structs{jule::Slice<jule::Ref<_1b5e07a00_Struct>>()};
	jule::Slice<jule::Ref<_1b557cd24_Fn>> _field_funcs{jule::Slice<jule::Ref<_1b557cd24_Fn>>()};
	jule::Slice<jule::Ref<_1aaee9091_Trait>> _field_traits{jule::Slice<jule::Ref<_1aaee9091_Trait>>()};
	jule::Slice<jule::Ref<_1a909ac6b_Enum>> _field_enums{jule::Slice<jule::Ref<_1a909ac6b_Enum>>()};
	jule::Slice<jule::Ref<_1ab0017b3_Impl>> _field_impls{jule::Slice<jule::Ref<_1ab0017b3_Impl>>()};


	_1ab00cc20_SymbolTable(jule::Ref<_1b61ece27_File> __param_file, jule::Slice<_1b5589c76_Pass> __param_passes, jule::Slice<jule::Ref<_1ab194c20_ImportInfo>> __param_imports, jule::Slice<jule::Ref<_1b623eab2_Var>> __param_vars, jule::Slice<jule::Ref<_1ac6d02c0_TypeAlias>> __param_type_aliases, jule::Slice<jule::Ref<_1b5e07a00_Struct>> __param_structs, jule::Slice<jule::Ref<_1b557cd24_Fn>> __param_funcs, jule::Slice<jule::Ref<_1aaee9091_Trait>> __param_traits, jule::Slice<jule::Ref<_1a909ac6b_Enum>> __param_enums, jule::Slice<jule::Ref<_1ab0017b3_Impl>> __param_impls) {
		this->self = jule::Ref<_1ab00cc20_SymbolTable>::make(this, nullptr);

		this->_field_file = __param_file;
		this->_field_passes = __param_passes;
		this->_field_imports = __param_imports;
		this->_field_vars = __param_vars;
		this->_field_type_aliases = __param_type_aliases;
		this->_field_structs = __param_structs;
		this->_field_funcs = __param_funcs;
		this->_field_traits = __param_traits;
		this->_field_enums = __param_enums;
		this->_field_impls = __param_impls;
	}

	~_1ab00cc20_SymbolTable(void) { this->self.ref = nullptr; }

	_1ab00cc20_SymbolTable(void) { this->self = jule::Ref<_1ab00cc20_SymbolTable>::make(this, nullptr); }

	inline jule::Ref<_1ab194c20_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ref<_1ab194c20_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ref<_1ab194c20_ImportInfo>)>);


	inline jule::Ref<_1b623eab2_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ref<_1ac6d02c0_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ref<_1b5e07a00_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ref<_1b557cd24_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ref<_1aaee9091_Trait> _method_find_trait(jule::Str);


	inline jule::Ref<_1a909ac6b_Enum> _method_find_enum(jule::Str);


	inline jule::Ref<_1b623eab2_Var> _method___find_var(jule::Str,jule::Bool,jule::Bool);


	inline jule::Ref<_1ac6d02c0_TypeAlias> _method___find_type_alias(jule::Str,jule::Bool,jule::Bool);


	inline jule::Any _method_def_by_ident(jule::Str,jule::Bool);


	inline jule::Bool _method_is_duplicated_ident(jule::Uintptr,jule::Str,jule::Bool);


	inline bool operator==(const _1ab00cc20_SymbolTable &_Src) const {
		return 
			this->_field_file == _Src._field_file &&
			this->_field_passes == _Src._field_passes &&
			this->_field_imports == _Src._field_imports &&
			this->_field_vars == _Src._field_vars &&
			this->_field_type_aliases == _Src._field_type_aliases &&
			this->_field_structs == _Src._field_structs &&
			this->_field_funcs == _Src._field_funcs &&
			this->_field_traits == _Src._field_traits &&
			this->_field_enums == _Src._field_enums &&
			this->_field_impls == _Src._field_impls;
	}

	inline bool operator!=(const _1ab00cc20_SymbolTable &_Src) const { return !this->operator==(_Src); }
};


struct _1ab00dbcc_Data {
	jule::Ref<_1ab00dbcc_Data> self{};

	jule::Ref<_1ac6d02c0_TypeKind> _field_kind{jule::Ref<_1ac6d02c0_TypeKind>()};
	jule::Ref<_1ac6d02c0_TypeKind> _field_cast_kind{jule::Ref<_1ac6d02c0_TypeKind>()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Bool _field_reference{jule::Bool()};
	jule::Bool _field_lvalue{jule::Bool()};
	jule::Bool _field_variadiced{jule::Bool()};
	jule::Bool _field_is_rune{jule::Bool()};
	jule::Any _field_model{jule::Any()};
	jule::Bool _field_decl{jule::Bool()};
	jule::Ref<_1ac90c3ed_Const> _field_constant{jule::Ref<_1ac90c3ed_Const>()};


	_1ab00dbcc_Data(jule::Ref<_1ac6d02c0_TypeKind> __param_kind, jule::Ref<_1ac6d02c0_TypeKind> __param_cast_kind, jule::Bool __param_mutable, jule::Bool __param_reference, jule::Bool __param_lvalue, jule::Bool __param_variadiced, jule::Bool __param_is_rune, jule::Any __param_model, jule::Bool __param_decl, jule::Ref<_1ac90c3ed_Const> __param_constant) {
		this->self = jule::Ref<_1ab00dbcc_Data>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_cast_kind = __param_cast_kind;
		this->_field_mutable = __param_mutable;
		this->_field_reference = __param_reference;
		this->_field_lvalue = __param_lvalue;
		this->_field_variadiced = __param_variadiced;
		this->_field_is_rune = __param_is_rune;
		this->_field_model = __param_model;
		this->_field_decl = __param_decl;
		this->_field_constant = __param_constant;
	}

	~_1ab00dbcc_Data(void) { this->self.ref = nullptr; }

	_1ab00dbcc_Data(void) { this->self = jule::Ref<_1ab00dbcc_Data>::make(this, nullptr); }

	inline jule::Bool _method_is_nil(void);


	inline jule::Bool _method_is_void(void);


	inline jule::Bool _method_is_const(void);


	inline bool operator==(const _1ab00dbcc_Data &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_cast_kind == _Src._field_cast_kind &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_reference == _Src._field_reference &&
			this->_field_lvalue == _Src._field_lvalue &&
			this->_field_variadiced == _Src._field_variadiced &&
			this->_field_is_rune == _Src._field_is_rune &&
			this->_field_model == _Src._field_model &&
			this->_field_decl == _Src._field_decl &&
			this->_field_constant == _Src._field_constant;
	}

	inline bool operator!=(const _1ab00dbcc_Data &_Src) const { return !this->operator==(_Src); }
};


struct _1ab00dbcc_Value {
	jule::Ref<_1ab00dbcc_Value> self{};

	jule::Ref<_1b61ca014_Expr> _field_expr{jule::Ref<_1b61ca014_Expr>()};
	jule::Ref<_1ab00dbcc_Data> _field_data{jule::Ref<_1ab00dbcc_Data>()};


	_1ab00dbcc_Value(jule::Ref<_1b61ca014_Expr> __param_expr, jule::Ref<_1ab00dbcc_Data> __param_data) {
		this->self = jule::Ref<_1ab00dbcc_Value>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_data = __param_data;
	}

	~_1ab00dbcc_Value(void) { this->self.ref = nullptr; }

	_1ab00dbcc_Value(void) { this->self = jule::Ref<_1ab00dbcc_Value>::make(this, nullptr); }

	inline bool operator==(const _1ab00dbcc_Value &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_data == _Src._field_data;
	}

	inline bool operator!=(const _1ab00dbcc_Value &_Src) const { return !this->operator==(_Src); }
};


struct _1ab00dbcc_Eval {
	jule::Ref<_1ab00dbcc_Eval> self{};

	jule::Ref<_1ab195050_Sema> _field_s{jule::Ref<_1ab195050_Sema>()};
	jule::Trait<_1aae290e2_Lookup> _field_lookup{jule::Trait<_1aae290e2_Lookup>()};
	jule::Ref<_1ac6d02c0_TypeKind> _field_prefix{jule::Ref<_1ac6d02c0_TypeKind>()};
	jule::Bool _field_unsafety{jule::Bool()};
	jule::Ref<_1b623eab2_Var> _field_owner{jule::Ref<_1b623eab2_Var>()};


	_1ab00dbcc_Eval(jule::Ref<_1ab195050_Sema> __param_s, jule::Trait<_1aae290e2_Lookup> __param_lookup, jule::Ref<_1ac6d02c0_TypeKind> __param_prefix, jule::Bool __param_unsafety, jule::Ref<_1b623eab2_Var> __param_owner) {
		this->self = jule::Ref<_1ab00dbcc_Eval>::make(this, nullptr);

		this->_field_s = __param_s;
		this->_field_lookup = __param_lookup;
		this->_field_prefix = __param_prefix;
		this->_field_unsafety = __param_unsafety;
		this->_field_owner = __param_owner;
	}

	~_1ab00dbcc_Eval(void) { this->self.ref = nullptr; }

	_1ab00dbcc_Eval(void) { this->self = jule::Ref<_1ab00dbcc_Eval>::make(this, nullptr); }

	inline void _method_push_err(_1b61ec5ec_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline jule::Bool _method_is_unsafe(void);


	inline jule::Bool _method_is_global(void);


	inline jule::Ref<_1ab00dbcc_Data> _method_lit_nil(void);


	inline jule::Ref<_1ab00dbcc_Data> _method_lit_str(jule::Ref<_1b61ca014_LitExpr>);


	inline jule::Ref<_1ab00dbcc_Data> _method_lit_bool(jule::Ref<_1b61ca014_LitExpr>);


	inline jule::Ref<_1ab00dbcc_Data> _method_lit_rune(jule::Ref<_1b61ca014_LitExpr>);


	inline jule::Ref<_1ab00dbcc_Data> _method_lit_float(jule::Ref<_1b61ca014_LitExpr>);


	inline jule::Ref<_1ab00dbcc_Data> _method_lit_int(jule::Ref<_1b61ca014_LitExpr>);


	inline jule::Ref<_1ab00dbcc_Data> _method_lit_num(jule::Ref<_1b61ca014_LitExpr>);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_lit(jule::Ref<_1b61ca014_LitExpr>);


	inline jule::Any _method_find_builtins(jule::Str);


	inline jule::Any _method_get_def(jule::Str,jule::Bool);


	inline void _method_push_reference(jule::Ref<_1b5589c76_ReferenceStack>);


	inline void _method_push_reference_to_fn(jule::Ref<_1b557cd24_FnIns>);


	inline void _method_push_reference_to_var(jule::Ref<_1b623eab2_Var>);


	inline void _method_push_reference_to_struct(jule::Ref<_1b5e07a00_StructIns>);


	inline jule::Ref<_1ab00dbcc_Data> _method___eval_enum(jule::Ref<_1a909ac6b_Enum>);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_enum(jule::Ref<_1a909ac6b_Enum>,_1b61ec5ec_Token);


	inline jule::Ref<_1ab00dbcc_Data> _method___eval_struct(jule::Ref<_1b5e07a00_StructIns>);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_struct(jule::Ref<_1b5e07a00_StructIns>,_1b61ec5ec_Token);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_fn_ins(jule::Ref<_1b557cd24_FnIns>);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_fn(jule::Ref<_1b557cd24_Fn>,_1b61ec5ec_Token);


	inline void _method_push_illegal_cycle_error(jule::Ref<_1b623eab2_Var>,jule::Ref<_1b623eab2_Var>,jule::Str&);


	inline jule::Bool _method_check_cross_cycle(jule::Ref<_1b623eab2_Var>,jule::Str&);


	inline jule::Bool _method_check_illegal_cycles(jule::Ref<_1b623eab2_Var>,_1b61ec5ec_Token);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_var(jule::Ref<_1b623eab2_Var>,_1b61ec5ec_Token);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_type_alias(jule::Ref<_1ac6d02c0_TypeAlias>,_1b61ec5ec_Token);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_def(jule::Any,_1b61ec5ec_Token);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_ident(jule::Ref<_1b61ca014_IdentExpr>);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_unary_minus(jule::Ref<_1ab00dbcc_Data>);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_unary_plus(jule::Ref<_1ab00dbcc_Data>);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_unary_caret(jule::Ref<_1ab00dbcc_Data>);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_unary_excl(jule::Ref<_1ab00dbcc_Data>);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_unary_star(jule::Ref<_1ab00dbcc_Data>,_1b61ec5ec_Token);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_unary_amper(jule::Ref<_1ab00dbcc_Data>);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_unary_type_decl(jule::Ref<_1ab00dbcc_Data>,jule::Ref<_1b61ca014_UnaryExpr>);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_unary(jule::Ref<_1b61ca014_UnaryExpr>);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_variadic(jule::Ref<_1b61ca014_VariadicExpr>);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_unsafe(jule::Ref<_1b61ca014_UnsafeExpr>);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_arr(jule::Ref<_1b61ca014_SliceExpr>);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_exp_slc(jule::Ref<_1b61ca014_SliceExpr>,jule::Ref<_1ac6d02c0_TypeKind>);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_slice_expr(jule::Ref<_1b61ca014_SliceExpr>);


	inline void _method_check_integer_indexing_by_data(jule::Ref<_1ab00dbcc_Data>,_1b61ec5ec_Token);


	inline void _method_indexing_ptr(jule::Ref<_1ab00dbcc_Data>,jule::Ref<_1ab00dbcc_Data>,jule::Ref<_1b61ca014_IndexingExpr>);


	inline void _method_indexing_arr(jule::Ref<_1ab00dbcc_Data>,jule::Ref<_1ab00dbcc_Data>,jule::Ref<_1b61ca014_IndexingExpr>);


	inline void _method_indexing_slc(jule::Ref<_1ab00dbcc_Data>,jule::Ref<_1ab00dbcc_Data>,jule::Ref<_1b61ca014_IndexingExpr>);


	inline void _method_indexing_map(jule::Ref<_1ab00dbcc_Data>,jule::Ref<_1ab00dbcc_Data>,jule::Ref<_1b61ca014_IndexingExpr>);


	inline void _method_indexing_str(jule::Ref<_1ab00dbcc_Data>,jule::Ref<_1ab00dbcc_Data>,jule::Ref<_1b61ca014_IndexingExpr>);


	inline void _method_to_indexing(jule::Ref<_1ab00dbcc_Data>,jule::Ref<_1ab00dbcc_Data>,jule::Ref<_1b61ca014_IndexingExpr>);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_ident_decl_from_indexing(jule::Ref<_1b61ca014_IndexingExpr>);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_indexing(jule::Ref<_1b61ca014_IndexingExpr>);


	inline std::tuple<jule::Ref<_1ab00dbcc_Data>,jule::Ref<_1ab00dbcc_Data>> _method_eval_slicing_exprs(jule::Ref<_1b61ca014_SlicingExpr>);


	inline void _method_slicing_arr(jule::Ref<_1ab00dbcc_Data>);


	inline void _method_slicing_slc(jule::Ref<_1ab00dbcc_Data>);


	inline void _method_slicing_str(jule::Ref<_1ab00dbcc_Data>,jule::Ref<_1ab00dbcc_Data>,jule::Ref<_1ab00dbcc_Data>);


	inline void _method_check_slicing(jule::Ref<_1ab00dbcc_Data>,jule::Ref<_1ab00dbcc_Data>,jule::Ref<_1ab00dbcc_Data>,jule::Ref<_1b61ca014_SlicingExpr>);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_slicing(jule::Ref<_1b61ca014_SlicingExpr>);


	inline void _method_cast_ptr(jule::Ref<_1ac6d02c0_TypeKind>,jule::Ref<_1ab00dbcc_Data>,_1b61ec5ec_Token);


	inline void _method_cast_struct(jule::Ref<_1ac6d02c0_TypeKind>,jule::Ref<_1ab00dbcc_Data>,_1b61ec5ec_Token);


	inline void _method_cast_ref(jule::Ref<_1ac6d02c0_TypeKind>,jule::Ref<_1ab00dbcc_Data>,_1b61ec5ec_Token);


	inline void _method_cast_slc(jule::Ref<_1ac6d02c0_TypeKind>,jule::Ref<_1ab00dbcc_Data>,_1b61ec5ec_Token);


	inline void _method_cast_str(jule::Ref<_1ab00dbcc_Data>,_1b61ec5ec_Token);


	inline void _method_cast_int(jule::Ref<_1ac6d02c0_TypeKind>,jule::Ref<_1ab00dbcc_Data>,_1b61ec5ec_Token);


	inline void _method_cast_num(jule::Ref<_1ac6d02c0_TypeKind>,jule::Ref<_1ab00dbcc_Data>,_1b61ec5ec_Token);


	inline void _method_cast_prim(jule::Ref<_1ac6d02c0_TypeKind>,jule::Ref<_1ab00dbcc_Data>,_1b61ec5ec_Token);


	inline void _method_cast_constant(jule::Ref<_1ac6d02c0_TypeKind>&,jule::Ref<_1ab00dbcc_Data>&);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_cast_by_type_n_data(jule::Ref<_1ac6d02c0_TypeKind>,jule::Ref<_1ab00dbcc_Data>,_1b61ec5ec_Token);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_cast(jule::Ref<_1b61ca014_CastExpr>);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_ns_selection(jule::Ref<_1b61ca014_NsSelectionExpr>);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_struct_lit_explicit(jule::Ref<_1b5e07a00_StructIns>,jule::Slice<jule::Any>,_1b61ec5ec_Token);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_struct_lit(jule::Ref<_1b61ca014_StructLit>);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_type(jule::Ref<_1b61ca014_TypeDecl>);


	inline jule::Ref<_1ab00dbcc_Data> _method_call_type_fn(jule::Ref<_1b61ca014_FnCallExpr>,jule::Ref<_1ab00dbcc_Data>);


	inline std::tuple<jule::Bool,jule::Bool> _method_check_fn_call_generics(jule::Ref<_1b557cd24_FnIns>,jule::Ref<_1b61ca014_FnCallExpr>);


	inline jule::Ref<_1ab00dbcc_Data> _method_call_builtin_fn(jule::Ref<_1b61ca014_FnCallExpr>,jule::Ref<_1ab00dbcc_Data>);


	inline void _method_check_fn_of_concurrent_call(jule::Ref<_1b557cd24_FnIns>&,_1b61ec5ec_Token);


	inline jule::Ref<_1ab00dbcc_Data> _method_call_fn(jule::Ref<_1b61ca014_FnCallExpr>,jule::Ref<_1ab00dbcc_Data>);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_fn_call(jule::Ref<_1b61ca014_FnCallExpr>);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_enum_static(jule::Ref<_1a909ac6b_Enum>,_1b61ec5ec_Token);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_struct_static(jule::Ref<_1b5e07a00_StructIns>,_1b61ec5ec_Token);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_trait_sub_ident(jule::Ref<_1ab00dbcc_Data>,jule::Ref<_1aaee9091_Trait>,_1b61ec5ec_Token);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_struct_sub_ident(jule::Ref<_1ab00dbcc_Data>,jule::Ref<_1b5e07a00_StructIns>,jule::Ref<_1b61ca014_SubIdentExpr>,jule::Bool);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_slice_sub_ident(jule::Ref<_1ab00dbcc_Data>,_1b61ec5ec_Token);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_array_sub_ident(jule::Ref<_1ab00dbcc_Data>,_1b61ec5ec_Token);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_map_sub_ident(jule::Ref<_1ab00dbcc_Data>,_1b61ec5ec_Token);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_str_sub_ident(jule::Ref<_1ab00dbcc_Data>,_1b61ec5ec_Token);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_int_type_static(_1b61ec5ec_Token);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_uint_type_static(_1b61ec5ec_Token);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_i8_type_static(_1b61ec5ec_Token);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_i16_type_static(_1b61ec5ec_Token);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_i32_type_static(_1b61ec5ec_Token);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_i64_type_static(_1b61ec5ec_Token);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_u8_type_static(_1b61ec5ec_Token);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_u16_type_static(_1b61ec5ec_Token);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_u32_type_static(_1b61ec5ec_Token);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_u64_type_static(_1b61ec5ec_Token);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_f32_type_tatic(_1b61ec5ec_Token);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_f64_type_static(_1b61ec5ec_Token);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_prim_static(jule::Str,_1b61ec5ec_Token);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_type_static(jule::Ref<_1ab00dbcc_Data>,jule::Ref<_1b61ca014_SubIdentExpr>);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_obj_sub_ident(jule::Ref<_1ab00dbcc_Data>,jule::Ref<_1b61ca014_SubIdentExpr>);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_sub_ident(jule::Ref<_1b61ca014_SubIdentExpr>);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_tuple(jule::Ref<_1b61ca014_TupleExpr>);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_map(jule::Ref<_1ac6d02c0_Map>,jule::Ref<_1b61ca014_BraceLit>);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_brace_lit(jule::Ref<_1b61ca014_BraceLit>);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_anon_fn(jule::Ref<_1b61ca014_FnDecl>);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_binop(jule::Ref<_1b61ca014_BinopExpr>);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_ternary(jule::Ref<_1b61ca014_TernaryExpr>);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_expr_kind(jule::Any);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval(jule::Ref<_1b61ca014_Expr>);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_expr(jule::Ref<_1b61ca014_Expr>);


	inline bool operator==(const _1ab00dbcc_Eval &_Src) const {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_lookup == _Src._field_lookup &&
			this->_field_prefix == _Src._field_prefix &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_owner == _Src._field_owner;
	}

	inline bool operator!=(const _1ab00dbcc_Eval &_Src) const { return !this->operator==(_Src); }
};


struct _1ac6d02c0_TypeKind: public _1ac6d02c0_Kind {
	jule::Ref<_1ac6d02c0_TypeKind> self{};

	jule::Str _field_cpp_ident{jule::Str()};
	jule::Bool _field_variadic{jule::Bool()};
	jule::Trait<_1ac6d02c0_Kind> _field_kind{jule::Trait<_1ac6d02c0_Kind>()};


	_1ac6d02c0_TypeKind(jule::Str __param_cpp_ident, jule::Bool __param_variadic, jule::Trait<_1ac6d02c0_Kind> __param_kind) {
		this->self = jule::Ref<_1ac6d02c0_TypeKind>::make(this, nullptr);

		this->_field_cpp_ident = __param_cpp_ident;
		this->_field_variadic = __param_variadic;
		this->_field_kind = __param_kind;
	}

	~_1ac6d02c0_TypeKind(void) { this->self.ref = nullptr; }

	_1ac6d02c0_TypeKind(void) { this->self = jule::Ref<_1ac6d02c0_TypeKind>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1ac6d02c0_TypeKind>);


	inline jule::Ref<_1ac6d02c0_TypeKind> _method_clone(void);


	inline jule::Bool _method_cpp_linked(void);


	inline jule::Bool _method_is_nil(void);


	inline jule::Bool _method_void(void);


	inline jule::Bool _method_lvalue(void);


	inline jule::Bool _method_mutable(void);


	inline jule::Bool _method_nil_compatible(void);


	inline jule::Bool _method_supports_cloning(void);


	inline jule::Bool _method_variadicable(void);


	inline jule::Ref<_1ac6d02c0_Prim> _method_prim(void);


	inline jule::Ref<_1ac6d02c0_Ref> _method_ref(void);


	inline jule::Ref<_1ac6d02c0_Ptr> _method_ptr(void);


	inline jule::Ref<_1a909ac6b_Enum> _method_enm(void);


	inline jule::Ref<_1ac6d02c0_Arr> _method_arr(void);


	inline jule::Ref<_1ac6d02c0_Slc> _method_slc(void);


	inline jule::Ref<_1b557cd24_FnIns> _method_fnc(void);


	inline jule::Ref<_1b5e07a00_StructIns> _method_strct(void);


	inline jule::Ref<_1aaee9091_Trait> _method_trt(void);


	inline jule::Ref<_1ac6d02c0_Map> _method_map(void);


	inline jule::Ref<_1ac6d02c0_Tuple> _method_tup(void);


	inline bool operator==(const _1ac6d02c0_TypeKind &_Src) const {
		return 
			this->_field_cpp_ident == _Src._field_cpp_ident &&
			this->_field_variadic == _Src._field_variadic &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1ac6d02c0_TypeKind &_Src) const { return !this->operator==(_Src); }
};


struct _1ac6d02c0_TypeSymbol {
	jule::Ref<_1ac6d02c0_TypeSymbol> self{};

	jule::Ref<_1b61ca014_TypeDecl> _field_decl{jule::Ref<_1b61ca014_TypeDecl>()};
	jule::Ref<_1ac6d02c0_TypeKind> _field_kind{jule::Ref<_1ac6d02c0_TypeKind>()};


	_1ac6d02c0_TypeSymbol(jule::Ref<_1b61ca014_TypeDecl> __param_decl, jule::Ref<_1ac6d02c0_TypeKind> __param_kind) {
		this->self = jule::Ref<_1ac6d02c0_TypeSymbol>::make(this, nullptr);

		this->_field_decl = __param_decl;
		this->_field_kind = __param_kind;
	}

	~_1ac6d02c0_TypeSymbol(void) { this->self.ref = nullptr; }

	_1ac6d02c0_TypeSymbol(void) { this->self = jule::Ref<_1ac6d02c0_TypeSymbol>::make(this, nullptr); }

	inline jule::Bool _method_checked(void);


	inline void _method_remove_kind(void);


	inline bool operator==(const _1ac6d02c0_TypeSymbol &_Src) const {
		return 
			this->_field_decl == _Src._field_decl &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1ac6d02c0_TypeSymbol &_Src) const { return !this->operator==(_Src); }
};


struct _1ac6d02c0_Prim: public _1ac6d02c0_Kind {
	jule::Ref<_1ac6d02c0_Prim> self{};

	jule::Str _field_kind{jule::Str()};


	_1ac6d02c0_Prim(jule::Str __param_kind) {
		this->self = jule::Ref<_1ac6d02c0_Prim>::make(this, nullptr);

		this->_field_kind = __param_kind;
	}

	~_1ac6d02c0_Prim(void) { this->self.ref = nullptr; }

	_1ac6d02c0_Prim(void) { this->self = jule::Ref<_1ac6d02c0_Prim>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1ac6d02c0_TypeKind>);


	inline jule::Bool _method_is_i8(void);


	inline jule::Bool _method_is_i16(void);


	inline jule::Bool _method_is_i32(void);


	inline jule::Bool _method_is_i64(void);


	inline jule::Bool _method_is_u8(void);


	inline jule::Bool _method_is_u16(void);


	inline jule::Bool _method_is_u32(void);


	inline jule::Bool _method_is_u64(void);


	inline jule::Bool _method_is_f32(void);


	inline jule::Bool _method_is_f64(void);


	inline jule::Bool _method_is_int(void);


	inline jule::Bool _method_is_uint(void);


	inline jule::Bool _method_is_uintptr(void);


	inline jule::Bool _method_is_bool(void);


	inline jule::Bool _method_is_str(void);


	inline jule::Bool _method_is_any(void);


	inline bool operator==(const _1ac6d02c0_Prim &_Src) const {
		return 
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1ac6d02c0_Prim &_Src) const { return !this->operator==(_Src); }
};


struct _1ac6d02c0_Ref: public _1ac6d02c0_Kind {
	jule::Ref<_1ac6d02c0_Ref> self{};

	jule::Ref<_1ac6d02c0_TypeKind> _field_elem{jule::Ref<_1ac6d02c0_TypeKind>()};


	_1ac6d02c0_Ref(jule::Ref<_1ac6d02c0_TypeKind> __param_elem) {
		this->self = jule::Ref<_1ac6d02c0_Ref>::make(this, nullptr);

		this->_field_elem = __param_elem;
	}

	~_1ac6d02c0_Ref(void) { this->self.ref = nullptr; }

	_1ac6d02c0_Ref(void) { this->self = jule::Ref<_1ac6d02c0_Ref>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1ac6d02c0_TypeKind>);


	inline bool operator==(const _1ac6d02c0_Ref &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _1ac6d02c0_Ref &_Src) const { return !this->operator==(_Src); }
};


struct _1ac6d02c0_Slc: public _1ac6d02c0_Kind {
	jule::Ref<_1ac6d02c0_Slc> self{};

	jule::Ref<_1ac6d02c0_TypeKind> _field_elem{jule::Ref<_1ac6d02c0_TypeKind>()};


	_1ac6d02c0_Slc(jule::Ref<_1ac6d02c0_TypeKind> __param_elem) {
		this->self = jule::Ref<_1ac6d02c0_Slc>::make(this, nullptr);

		this->_field_elem = __param_elem;
	}

	~_1ac6d02c0_Slc(void) { this->self.ref = nullptr; }

	_1ac6d02c0_Slc(void) { this->self = jule::Ref<_1ac6d02c0_Slc>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1ac6d02c0_TypeKind>);


	inline bool operator==(const _1ac6d02c0_Slc &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _1ac6d02c0_Slc &_Src) const { return !this->operator==(_Src); }
};


struct _1ac6d02c0_Tuple: public _1ac6d02c0_Kind {
	jule::Ref<_1ac6d02c0_Tuple> self{};

	jule::Slice<jule::Ref<_1ac6d02c0_TypeKind>> _field_types{jule::Slice<jule::Ref<_1ac6d02c0_TypeKind>>()};


	_1ac6d02c0_Tuple(jule::Slice<jule::Ref<_1ac6d02c0_TypeKind>> __param_types) {
		this->self = jule::Ref<_1ac6d02c0_Tuple>::make(this, nullptr);

		this->_field_types = __param_types;
	}

	~_1ac6d02c0_Tuple(void) { this->self.ref = nullptr; }

	_1ac6d02c0_Tuple(void) { this->self = jule::Ref<_1ac6d02c0_Tuple>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1ac6d02c0_TypeKind>);


	inline bool operator==(const _1ac6d02c0_Tuple &_Src) const {
		return 
			this->_field_types == _Src._field_types;
	}

	inline bool operator!=(const _1ac6d02c0_Tuple &_Src) const { return !this->operator==(_Src); }
};


struct _1ac6d02c0_Map: public _1ac6d02c0_Kind {
	jule::Ref<_1ac6d02c0_Map> self{};

	jule::Ref<_1ac6d02c0_TypeKind> _field_key{jule::Ref<_1ac6d02c0_TypeKind>()};
	jule::Ref<_1ac6d02c0_TypeKind> _field_val{jule::Ref<_1ac6d02c0_TypeKind>()};


	_1ac6d02c0_Map(jule::Ref<_1ac6d02c0_TypeKind> __param_key, jule::Ref<_1ac6d02c0_TypeKind> __param_val) {
		this->self = jule::Ref<_1ac6d02c0_Map>::make(this, nullptr);

		this->_field_key = __param_key;
		this->_field_val = __param_val;
	}

	~_1ac6d02c0_Map(void) { this->self.ref = nullptr; }

	_1ac6d02c0_Map(void) { this->self = jule::Ref<_1ac6d02c0_Map>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1ac6d02c0_TypeKind>);


	inline bool operator==(const _1ac6d02c0_Map &_Src) const {
		return 
			this->_field_key == _Src._field_key &&
			this->_field_val == _Src._field_val;
	}

	inline bool operator!=(const _1ac6d02c0_Map &_Src) const { return !this->operator==(_Src); }
};


struct _1ac6d02c0_Arr: public _1ac6d02c0_Kind {
	jule::Ref<_1ac6d02c0_Arr> self{};

	jule::Bool _field_auto{jule::Bool()};
	jule::Int _field_n{jule::Int()};
	jule::Ref<_1ac6d02c0_TypeKind> _field_elem{jule::Ref<_1ac6d02c0_TypeKind>()};


	_1ac6d02c0_Arr(jule::Bool __param_auto, jule::Int __param_n, jule::Ref<_1ac6d02c0_TypeKind> __param_elem) {
		this->self = jule::Ref<_1ac6d02c0_Arr>::make(this, nullptr);

		this->_field_auto = __param_auto;
		this->_field_n = __param_n;
		this->_field_elem = __param_elem;
	}

	~_1ac6d02c0_Arr(void) { this->self.ref = nullptr; }

	_1ac6d02c0_Arr(void) { this->self = jule::Ref<_1ac6d02c0_Arr>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1ac6d02c0_TypeKind>);


	inline bool operator==(const _1ac6d02c0_Arr &_Src) const {
		return 
			this->_field_auto == _Src._field_auto &&
			this->_field_n == _Src._field_n &&
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _1ac6d02c0_Arr &_Src) const { return !this->operator==(_Src); }
};


struct _1ac6d02c0_Ptr: public _1ac6d02c0_Kind {
	jule::Ref<_1ac6d02c0_Ptr> self{};

	jule::Ref<_1ac6d02c0_TypeKind> _field_elem{jule::Ref<_1ac6d02c0_TypeKind>()};


	_1ac6d02c0_Ptr(jule::Ref<_1ac6d02c0_TypeKind> __param_elem) {
		this->self = jule::Ref<_1ac6d02c0_Ptr>::make(this, nullptr);

		this->_field_elem = __param_elem;
	}

	~_1ac6d02c0_Ptr(void) { this->self.ref = nullptr; }

	_1ac6d02c0_Ptr(void) { this->self = jule::Ref<_1ac6d02c0_Ptr>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1ac6d02c0_TypeKind>);


	inline jule::Bool _method_is_unsafe(void);


	inline bool operator==(const _1ac6d02c0_Ptr &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _1ac6d02c0_Ptr &_Src) const { return !this->operator==(_Src); }
};


struct _1ac6d02c0_Referencer {
	jule::Ref<_1ac6d02c0_Referencer> self{};

	jule::Str _field_ident{jule::Str()};
	jule::Any _field_owner{jule::Any()};
	jule::Slice<jule::Any>* _field_refs{nullptr};


	_1ac6d02c0_Referencer(jule::Str __param_ident, jule::Any __param_owner, jule::Slice<jule::Any>* __param_refs) {
		this->self = jule::Ref<_1ac6d02c0_Referencer>::make(this, nullptr);

		this->_field_ident = __param_ident;
		this->_field_owner = __param_owner;
		this->_field_refs = __param_refs;
	}

	~_1ac6d02c0_Referencer(void) { this->self.ref = nullptr; }

	_1ac6d02c0_Referencer(void) { this->self = jule::Ref<_1ac6d02c0_Referencer>::make(this, nullptr); }

	inline bool operator==(const _1ac6d02c0_Referencer &_Src) const {
		return 
			this->_field_ident == _Src._field_ident &&
			this->_field_owner == _Src._field_owner &&
			this->_field_refs == _Src._field_refs;
	}

	inline bool operator!=(const _1ac6d02c0_Referencer &_Src) const { return !this->operator==(_Src); }
};


struct _1b615c804_PlainImporter: public _1ab194c20_Importer {
	jule::Ref<_1b615c804_PlainImporter> self{};

	jule::Slice<jule::Ref<_1ab194c20_ImportInfo>> _field_all_packages{jule::Slice<jule::Ref<_1ab194c20_ImportInfo>>()};


	_1b615c804_PlainImporter(jule::Slice<jule::Ref<_1ab194c20_ImportInfo>> __param_all_packages) {
		this->self = jule::Ref<_1b615c804_PlainImporter>::make(this, nullptr);

		this->_field_all_packages = __param_all_packages;
	}

	~_1b615c804_PlainImporter(void) { this->self.ref = nullptr; }

	_1b615c804_PlainImporter(void) { this->self = jule::Ref<_1b615c804_PlainImporter>::make(this, nullptr); }

	inline jule::Ref<_1ab194c20_ImportInfo> _method_get_import(jule::Str);


	inline std::tuple<jule::Slice<jule::Ref<_1b61d1d62_Ast>>,jule::Slice<_1cdeeb191_Log>> _method_import_package(jule::Str);


	inline void _method_imported(jule::Ref<_1ab194c20_ImportInfo>);


	inline bool operator==(const _1b615c804_PlainImporter &_Src) const {
		return 
			this->_field_all_packages == _Src._field_all_packages;
	}

	inline bool operator!=(const _1b615c804_PlainImporter &_Src) const { return !this->operator==(_Src); }
};


struct _1b60cc7c9_OrderedDefines {
	jule::Ref<_1b60cc7c9_OrderedDefines> self{};

	jule::Slice<jule::Ref<_1b5e07a00_Struct>> _field_structs{jule::Slice<jule::Ref<_1b5e07a00_Struct>>()};
	jule::Slice<jule::Ref<_1b623eab2_Var>> _field_globals{jule::Slice<jule::Ref<_1b623eab2_Var>>()};


	_1b60cc7c9_OrderedDefines(jule::Slice<jule::Ref<_1b5e07a00_Struct>> __param_structs, jule::Slice<jule::Ref<_1b623eab2_Var>> __param_globals) {
		this->self = jule::Ref<_1b60cc7c9_OrderedDefines>::make(this, nullptr);

		this->_field_structs = __param_structs;
		this->_field_globals = __param_globals;
	}

	~_1b60cc7c9_OrderedDefines(void) { this->self.ref = nullptr; }

	_1b60cc7c9_OrderedDefines(void) { this->self = jule::Ref<_1b60cc7c9_OrderedDefines>::make(this, nullptr); }

	inline bool operator==(const _1b60cc7c9_OrderedDefines &_Src) const {
		return 
			this->_field_structs == _Src._field_structs &&
			this->_field_globals == _Src._field_globals;
	}

	inline bool operator!=(const _1b60cc7c9_OrderedDefines &_Src) const { return !this->operator==(_Src); }
};


struct _1b60cc7c9_DefineOrderer {
	jule::Ref<_1b60cc7c9_DefineOrderer> self{};

	~_1b60cc7c9_DefineOrderer(void) { this->self.ref = nullptr; }

	_1b60cc7c9_DefineOrderer(void) { this->self = jule::Ref<_1b60cc7c9_DefineOrderer>::make(this, nullptr); }

	static inline jule::Bool _static_method_is_common_ordered_0(jule::Slice<jule::Ref<_1b623eab2_Var>>&,jule::Ref<_1b623eab2_Var>);
	static inline jule::Bool _static_method_is_common_ordered_1(jule::Slice<jule::Ref<_1b5e07a00_Struct>>&,jule::Ref<_1b5e07a00_Struct>);


	static inline void _static_method_order_common_0(jule::Slice<jule::Ref<_1b623eab2_Var>>&);
	static inline void _static_method_order_common_1(jule::Slice<jule::Ref<_1b5e07a00_Struct>>&);


	static inline void _static_method_order_variables(jule::Slice<jule::Ref<_1b623eab2_Var>>&);


	static inline void _static_method_order_structures(jule::Slice<jule::Ref<_1b5e07a00_Struct>>&);


	inline bool operator==(const _1b60cc7c9_DefineOrderer &_Src) const { return true; }

	inline bool operator!=(const _1b60cc7c9_DefineOrderer &_Src) const { return !this->operator==(_Src); }
};


struct _1b60bd9da_ScopeDeadCode {
	jule::Ref<_1b60bd9da_ScopeDeadCode> self{};

	jule::Ref<_1b60bd9da_ScopeDeadCode> _field_parent{jule::Ref<_1b60bd9da_ScopeDeadCode>()};
	jule::Ref<_1ab009de8_Scope> _field_s{jule::Ref<_1ab009de8_Scope>()};
	jule::Slice<jule::Any>* _field_stmts{nullptr};
	jule::Int _field_i{jule::Int()};


	_1b60bd9da_ScopeDeadCode(jule::Ref<_1b60bd9da_ScopeDeadCode> __param_parent, jule::Ref<_1ab009de8_Scope> __param_s, jule::Slice<jule::Any>* __param_stmts, jule::Int __param_i) {
		this->self = jule::Ref<_1b60bd9da_ScopeDeadCode>::make(this, nullptr);

		this->_field_parent = __param_parent;
		this->_field_s = __param_s;
		this->_field_stmts = __param_stmts;
		this->_field_i = __param_i;
	}

	~_1b60bd9da_ScopeDeadCode(void) { this->self.ref = nullptr; }

	_1b60bd9da_ScopeDeadCode(void) { this->self = jule::Ref<_1b60bd9da_ScopeDeadCode>::make(this, nullptr); }

	inline void _method_optimize_child(jule::Ref<_1ab009de8_Scope>&);


	inline void _method_eliminate_followed(void);


	inline void _method_optimize_stmt(jule::Any);


	inline void _method_optimize_stmts(void);


	inline bool operator==(const _1b60bd9da_ScopeDeadCode &_Src) const {
		return 
			this->_field_parent == _Src._field_parent &&
			this->_field_s == _Src._field_s &&
			this->_field_stmts == _Src._field_stmts &&
			this->_field_i == _Src._field_i;
	}

	inline bool operator!=(const _1b60bd9da_ScopeDeadCode &_Src) const { return !this->operator==(_Src); }
};


struct _1ad0abb9b_AbsTime {
	jule::Ref<_1ad0abb9b_AbsTime> self{};

	jule::Uint _field_day{jule::Uint()};
	jule::Uint _field_week_day{jule::Uint()};
	jule::Uint _field_year_day{jule::Uint()};
	jule::Uint _field_month{jule::Uint()};
	jule::Uint _field_year{jule::Uint()};
	jule::Uint _field_second{jule::Uint()};
	jule::Uint _field_minute{jule::Uint()};
	jule::Uint _field_hour{jule::Uint()};


	_1ad0abb9b_AbsTime(jule::Uint __param_day, jule::Uint __param_week_day, jule::Uint __param_year_day, jule::Uint __param_month, jule::Uint __param_year, jule::Uint __param_second, jule::Uint __param_minute, jule::Uint __param_hour) {
		this->self = jule::Ref<_1ad0abb9b_AbsTime>::make(this, nullptr);

		this->_field_day = __param_day;
		this->_field_week_day = __param_week_day;
		this->_field_year_day = __param_year_day;
		this->_field_month = __param_month;
		this->_field_year = __param_year;
		this->_field_second = __param_second;
		this->_field_minute = __param_minute;
		this->_field_hour = __param_hour;
	}

	~_1ad0abb9b_AbsTime(void) { this->self.ref = nullptr; }

	_1ad0abb9b_AbsTime(void) { this->self = jule::Ref<_1ad0abb9b_AbsTime>::make(this, nullptr); }

	inline bool operator==(const _1ad0abb9b_AbsTime &_Src) const {
		return 
			this->_field_day == _Src._field_day &&
			this->_field_week_day == _Src._field_week_day &&
			this->_field_year_day == _Src._field_year_day &&
			this->_field_month == _Src._field_month &&
			this->_field_year == _Src._field_year &&
			this->_field_second == _Src._field_second &&
			this->_field_minute == _Src._field_minute &&
			this->_field_hour == _Src._field_hour;
	}

	inline bool operator!=(const _1ad0abb9b_AbsTime &_Src) const { return !this->operator==(_Src); }
};


struct _1ad0abb9b_Time {
	jule::Ref<_1ad0abb9b_Time> self{};

	jule::U64 _field_sec{jule::U64()};


	_1ad0abb9b_Time(jule::U64 __param_sec) {
		this->self = jule::Ref<_1ad0abb9b_Time>::make(this, nullptr);

		this->_field_sec = __param_sec;
	}

	~_1ad0abb9b_Time(void) { this->self.ref = nullptr; }

	_1ad0abb9b_Time(void) { this->self = jule::Ref<_1ad0abb9b_Time>::make(this, nullptr); }

	static inline _1ad0abb9b_Time _static_method_unix(jule::U64);


	static inline _1ad0abb9b_Time _static_method_now(void);


	inline jule::U64 _method_unix(void);


	inline jule::Uint _method_day(void);


	inline jule::Uint _method_month(void);


	inline jule::Uint _method_year(void);


	inline jule::Uint _method_second(void);


	inline jule::Uint _method_minute(void);


	inline jule::Uint _method_hour(void);


	inline _1ad0abb9b_AbsTime _method_abs(void);


	inline bool operator==(const _1ad0abb9b_Time &_Src) const {
		return 
			this->_field_sec == _Src._field_sec;
	}

	inline bool operator!=(const _1ad0abb9b_Time &_Src) const { return !this->operator==(_Src); }
};


struct _1a977abdc_IndexRangeSetter: public _1a977abdc_RangeSetter {
	jule::Ref<_1a977abdc_IndexRangeSetter> self{};

	~_1a977abdc_IndexRangeSetter(void) { this->self.ref = nullptr; }

	_1a977abdc_IndexRangeSetter(void) { this->self = jule::Ref<_1a977abdc_IndexRangeSetter>::make(this, nullptr); }

	inline jule::Str _method_setup_vars(jule::Ref<_1b623eab2_Var>,jule::Ref<_1b623eab2_Var>);


	inline jule::Str _method_next_steps(jule::Ref<_1b623eab2_Var>,jule::Ref<_1b623eab2_Var>,jule::Str);


	inline bool operator==(const _1a977abdc_IndexRangeSetter &_Src) const { return true; }

	inline bool operator!=(const _1a977abdc_IndexRangeSetter &_Src) const { return !this->operator==(_Src); }
};


struct _1a977abdc_MapRangeSetter: public _1a977abdc_RangeSetter {
	jule::Ref<_1a977abdc_MapRangeSetter> self{};

	~_1a977abdc_MapRangeSetter(void) { this->self.ref = nullptr; }

	_1a977abdc_MapRangeSetter(void) { this->self = jule::Ref<_1a977abdc_MapRangeSetter>::make(this, nullptr); }

	inline jule::Str _method_setup_vars(jule::Ref<_1b623eab2_Var>,jule::Ref<_1b623eab2_Var>);


	inline jule::Str _method_next_steps(jule::Ref<_1b623eab2_Var>,jule::Ref<_1b623eab2_Var>,jule::Str);


	inline bool operator==(const _1a977abdc_MapRangeSetter &_Src) const { return true; }

	inline bool operator!=(const _1a977abdc_MapRangeSetter &_Src) const { return !this->operator==(_Src); }
};


struct _1b61ca014_LitExpr {
	jule::Ref<_1b61ca014_LitExpr> self{};

	_1b61ec5ec_Token _field_token{_1b61ec5ec_Token()};
	jule::Str _field_value{jule::Str()};


	_1b61ca014_LitExpr(_1b61ec5ec_Token __param_token, jule::Str __param_value) {
		this->self = jule::Ref<_1b61ca014_LitExpr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_value = __param_value;
	}

	~_1b61ca014_LitExpr(void) { this->self.ref = nullptr; }

	_1b61ca014_LitExpr(void) { this->self = jule::Ref<_1b61ca014_LitExpr>::make(this, nullptr); }

	inline jule::Bool _method_is_nil(void);


	inline bool operator==(const _1b61ca014_LitExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_value == _Src._field_value;
	}

	inline bool operator!=(const _1b61ca014_LitExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1b61ca014_UnsafeExpr {
	jule::Ref<_1b61ca014_UnsafeExpr> self{};

	_1b61ec5ec_Token _field_token{_1b61ec5ec_Token()};
	jule::Any _field_expr{jule::Any()};


	_1b61ca014_UnsafeExpr(_1b61ec5ec_Token __param_token, jule::Any __param_expr) {
		this->self = jule::Ref<_1b61ca014_UnsafeExpr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_expr = __param_expr;
	}

	~_1b61ca014_UnsafeExpr(void) { this->self.ref = nullptr; }

	_1b61ca014_UnsafeExpr(void) { this->self = jule::Ref<_1b61ca014_UnsafeExpr>::make(this, nullptr); }

	inline bool operator==(const _1b61ca014_UnsafeExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1b61ca014_UnsafeExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1b61ca014_IdentExpr {
	jule::Ref<_1b61ca014_IdentExpr> self{};

	_1b61ec5ec_Token _field_token{_1b61ec5ec_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_cpp_linked{jule::Bool()};


	_1b61ca014_IdentExpr(_1b61ec5ec_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked) {
		this->self = jule::Ref<_1b61ca014_IdentExpr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_cpp_linked = __param_cpp_linked;
	}

	~_1b61ca014_IdentExpr(void) { this->self.ref = nullptr; }

	_1b61ca014_IdentExpr(void) { this->self = jule::Ref<_1b61ca014_IdentExpr>::make(this, nullptr); }

	inline jule::Bool _method_is_self(void);


	inline bool operator==(const _1b61ca014_IdentExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_cpp_linked == _Src._field_cpp_linked;
	}

	inline bool operator!=(const _1b61ca014_IdentExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1b61ca014_UnaryExpr {
	jule::Ref<_1b61ca014_UnaryExpr> self{};

	_1b61ec5ec_Token _field_op{_1b61ec5ec_Token()};
	jule::Any _field_expr{jule::Any()};


	_1b61ca014_UnaryExpr(_1b61ec5ec_Token __param_op, jule::Any __param_expr) {
		this->self = jule::Ref<_1b61ca014_UnaryExpr>::make(this, nullptr);

		this->_field_op = __param_op;
		this->_field_expr = __param_expr;
	}

	~_1b61ca014_UnaryExpr(void) { this->self.ref = nullptr; }

	_1b61ca014_UnaryExpr(void) { this->self = jule::Ref<_1b61ca014_UnaryExpr>::make(this, nullptr); }

	inline bool operator==(const _1b61ca014_UnaryExpr &_Src) const {
		return 
			this->_field_op == _Src._field_op &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1b61ca014_UnaryExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1b61ca014_VariadicExpr {
	jule::Ref<_1b61ca014_VariadicExpr> self{};

	_1b61ec5ec_Token _field_token{_1b61ec5ec_Token()};
	jule::Any _field_expr{jule::Any()};


	_1b61ca014_VariadicExpr(_1b61ec5ec_Token __param_token, jule::Any __param_expr) {
		this->self = jule::Ref<_1b61ca014_VariadicExpr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_expr = __param_expr;
	}

	~_1b61ca014_VariadicExpr(void) { this->self.ref = nullptr; }

	_1b61ca014_VariadicExpr(void) { this->self = jule::Ref<_1b61ca014_VariadicExpr>::make(this, nullptr); }

	inline bool operator==(const _1b61ca014_VariadicExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1b61ca014_VariadicExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1b61ca014_NsSelectionExpr {
	jule::Ref<_1b61ca014_NsSelectionExpr> self{};

	jule::Slice<_1b61ec5ec_Token> _field_ns{jule::Slice<_1b61ec5ec_Token>()};
	_1b61ec5ec_Token _field_ident{_1b61ec5ec_Token()};


	_1b61ca014_NsSelectionExpr(jule::Slice<_1b61ec5ec_Token> __param_ns, _1b61ec5ec_Token __param_ident) {
		this->self = jule::Ref<_1b61ca014_NsSelectionExpr>::make(this, nullptr);

		this->_field_ns = __param_ns;
		this->_field_ident = __param_ident;
	}

	~_1b61ca014_NsSelectionExpr(void) { this->self.ref = nullptr; }

	_1b61ca014_NsSelectionExpr(void) { this->self = jule::Ref<_1b61ca014_NsSelectionExpr>::make(this, nullptr); }

	inline bool operator==(const _1b61ca014_NsSelectionExpr &_Src) const {
		return 
			this->_field_ns == _Src._field_ns &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1b61ca014_NsSelectionExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1b61ca014_SubIdentExpr {
	jule::Ref<_1b61ca014_SubIdentExpr> self{};

	jule::Bool _field_is_self{jule::Bool()};
	jule::Any _field_expr{jule::Any()};
	_1b61ec5ec_Token _field_ident{_1b61ec5ec_Token()};


	_1b61ca014_SubIdentExpr(jule::Bool __param_is_self, jule::Any __param_expr, _1b61ec5ec_Token __param_ident) {
		this->self = jule::Ref<_1b61ca014_SubIdentExpr>::make(this, nullptr);

		this->_field_is_self = __param_is_self;
		this->_field_expr = __param_expr;
		this->_field_ident = __param_ident;
	}

	~_1b61ca014_SubIdentExpr(void) { this->self.ref = nullptr; }

	_1b61ca014_SubIdentExpr(void) { this->self = jule::Ref<_1b61ca014_SubIdentExpr>::make(this, nullptr); }

	inline bool operator==(const _1b61ca014_SubIdentExpr &_Src) const {
		return 
			this->_field_is_self == _Src._field_is_self &&
			this->_field_expr == _Src._field_expr &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1b61ca014_SubIdentExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1b61ca014_BinopExpr {
	jule::Ref<_1b61ca014_BinopExpr> self{};

	jule::Any _field_left{jule::Any()};
	jule::Any _field_right{jule::Any()};
	_1b61ec5ec_Token _field_op{_1b61ec5ec_Token()};


	_1b61ca014_BinopExpr(jule::Any __param_left, jule::Any __param_right, _1b61ec5ec_Token __param_op) {
		this->self = jule::Ref<_1b61ca014_BinopExpr>::make(this, nullptr);

		this->_field_left = __param_left;
		this->_field_right = __param_right;
		this->_field_op = __param_op;
	}

	~_1b61ca014_BinopExpr(void) { this->self.ref = nullptr; }

	_1b61ca014_BinopExpr(void) { this->self = jule::Ref<_1b61ca014_BinopExpr>::make(this, nullptr); }

	inline bool operator==(const _1b61ca014_BinopExpr &_Src) const {
		return 
			this->_field_left == _Src._field_left &&
			this->_field_right == _Src._field_right &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _1b61ca014_BinopExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1b61ca014_FieldExprPair {
	jule::Ref<_1b61ca014_FieldExprPair> self{};

	_1b61ec5ec_Token _field_field{_1b61ec5ec_Token()};
	jule::Any _field_expr{jule::Any()};


	_1b61ca014_FieldExprPair(_1b61ec5ec_Token __param_field, jule::Any __param_expr) {
		this->self = jule::Ref<_1b61ca014_FieldExprPair>::make(this, nullptr);

		this->_field_field = __param_field;
		this->_field_expr = __param_expr;
	}

	~_1b61ca014_FieldExprPair(void) { this->self.ref = nullptr; }

	_1b61ca014_FieldExprPair(void) { this->self = jule::Ref<_1b61ca014_FieldExprPair>::make(this, nullptr); }

	inline jule::Bool _method_is_targeted(void);


	inline bool operator==(const _1b61ca014_FieldExprPair &_Src) const {
		return 
			this->_field_field == _Src._field_field &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1b61ca014_FieldExprPair &_Src) const { return !this->operator==(_Src); }
};


struct _1b61ca014_BraceLit {
	jule::Ref<_1b61ca014_BraceLit> self{};

	_1b61ec5ec_Token _field_token{_1b61ec5ec_Token()};
	jule::Slice<jule::Any> _field_exprs{jule::Slice<jule::Any>()};


	_1b61ca014_BraceLit(_1b61ec5ec_Token __param_token, jule::Slice<jule::Any> __param_exprs) {
		this->self = jule::Ref<_1b61ca014_BraceLit>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_exprs = __param_exprs;
	}

	~_1b61ca014_BraceLit(void) { this->self.ref = nullptr; }

	_1b61ca014_BraceLit(void) { this->self = jule::Ref<_1b61ca014_BraceLit>::make(this, nullptr); }

	inline jule::Bool _method_is_empty(void);


	inline bool operator==(const _1b61ca014_BraceLit &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_exprs == _Src._field_exprs;
	}

	inline bool operator!=(const _1b61ca014_BraceLit &_Src) const { return !this->operator==(_Src); }
};


struct _1b61ca014_KeyValPair {
	jule::Ref<_1b61ca014_KeyValPair> self{};

	jule::Any _field_key{jule::Any()};
	jule::Any _field_val{jule::Any()};
	_1b61ec5ec_Token _field_colon{_1b61ec5ec_Token()};


	_1b61ca014_KeyValPair(jule::Any __param_key, jule::Any __param_val, _1b61ec5ec_Token __param_colon) {
		this->self = jule::Ref<_1b61ca014_KeyValPair>::make(this, nullptr);

		this->_field_key = __param_key;
		this->_field_val = __param_val;
		this->_field_colon = __param_colon;
	}

	~_1b61ca014_KeyValPair(void) { this->self.ref = nullptr; }

	_1b61ca014_KeyValPair(void) { this->self = jule::Ref<_1b61ca014_KeyValPair>::make(this, nullptr); }

	inline bool operator==(const _1b61ca014_KeyValPair &_Src) const {
		return 
			this->_field_key == _Src._field_key &&
			this->_field_val == _Src._field_val &&
			this->_field_colon == _Src._field_colon;
	}

	inline bool operator!=(const _1b61ca014_KeyValPair &_Src) const { return !this->operator==(_Src); }
};


struct _1b61ca014_SliceExpr {
	jule::Ref<_1b61ca014_SliceExpr> self{};

	_1b61ec5ec_Token _field_token{_1b61ec5ec_Token()};
	jule::Slice<jule::Any> _field_elems{jule::Slice<jule::Any>()};


	_1b61ca014_SliceExpr(_1b61ec5ec_Token __param_token, jule::Slice<jule::Any> __param_elems) {
		this->self = jule::Ref<_1b61ca014_SliceExpr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_elems = __param_elems;
	}

	~_1b61ca014_SliceExpr(void) { this->self.ref = nullptr; }

	_1b61ca014_SliceExpr(void) { this->self = jule::Ref<_1b61ca014_SliceExpr>::make(this, nullptr); }

	inline jule::Bool _method_is_empty(void);


	inline bool operator==(const _1b61ca014_SliceExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_elems == _Src._field_elems;
	}

	inline bool operator!=(const _1b61ca014_SliceExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1b61ca014_IndexingExpr {
	jule::Ref<_1b61ca014_IndexingExpr> self{};

	_1b61ec5ec_Token _field_token{_1b61ec5ec_Token()};
	jule::Any _field_expr{jule::Any()};
	jule::Any _field_index{jule::Any()};


	_1b61ca014_IndexingExpr(_1b61ec5ec_Token __param_token, jule::Any __param_expr, jule::Any __param_index) {
		this->self = jule::Ref<_1b61ca014_IndexingExpr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_expr = __param_expr;
		this->_field_index = __param_index;
	}

	~_1b61ca014_IndexingExpr(void) { this->self.ref = nullptr; }

	_1b61ca014_IndexingExpr(void) { this->self = jule::Ref<_1b61ca014_IndexingExpr>::make(this, nullptr); }

	inline bool operator==(const _1b61ca014_IndexingExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_index == _Src._field_index;
	}

	inline bool operator!=(const _1b61ca014_IndexingExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1b61ca014_SlicingExpr {
	jule::Ref<_1b61ca014_SlicingExpr> self{};

	_1b61ec5ec_Token _field_token{_1b61ec5ec_Token()};
	jule::Any _field_expr{jule::Any()};
	jule::Any _field_start{jule::Any()};
	jule::Any _field_to{jule::Any()};


	_1b61ca014_SlicingExpr(_1b61ec5ec_Token __param_token, jule::Any __param_expr, jule::Any __param_start, jule::Any __param_to) {
		this->self = jule::Ref<_1b61ca014_SlicingExpr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_expr = __param_expr;
		this->_field_start = __param_start;
		this->_field_to = __param_to;
	}

	~_1b61ca014_SlicingExpr(void) { this->self.ref = nullptr; }

	_1b61ca014_SlicingExpr(void) { this->self = jule::Ref<_1b61ca014_SlicingExpr>::make(this, nullptr); }

	inline bool operator==(const _1b61ca014_SlicingExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_start == _Src._field_start &&
			this->_field_to == _Src._field_to;
	}

	inline bool operator!=(const _1b61ca014_SlicingExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1b61ca014_TernaryExpr {
	jule::Ref<_1b61ca014_TernaryExpr> self{};

	_1b61ec5ec_Token _field_token{_1b61ec5ec_Token()};
	jule::Any _field_condition{jule::Any()};
	jule::Any _field_true_expr{jule::Any()};
	jule::Any _field_false_expr{jule::Any()};


	_1b61ca014_TernaryExpr(_1b61ec5ec_Token __param_token, jule::Any __param_condition, jule::Any __param_true_expr, jule::Any __param_false_expr) {
		this->self = jule::Ref<_1b61ca014_TernaryExpr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_condition = __param_condition;
		this->_field_true_expr = __param_true_expr;
		this->_field_false_expr = __param_false_expr;
	}

	~_1b61ca014_TernaryExpr(void) { this->self.ref = nullptr; }

	_1b61ca014_TernaryExpr(void) { this->self = jule::Ref<_1b61ca014_TernaryExpr>::make(this, nullptr); }

	inline bool operator==(const _1b61ca014_TernaryExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_condition == _Src._field_condition &&
			this->_field_true_expr == _Src._field_true_expr &&
			this->_field_false_expr == _Src._field_false_expr;
	}

	inline bool operator!=(const _1b61ca014_TernaryExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1a8dc912c_DynamicTypeAnnotation {
	jule::Ref<_1a8dc912c_DynamicTypeAnnotation> self{};

	jule::Ref<_1ab00dbcc_Eval> _field_e{jule::Ref<_1ab00dbcc_Eval>()};
	jule::Ref<_1b557cd24_FnIns> _field_f{jule::Ref<_1b557cd24_FnIns>()};
	jule::Ref<_1b557cd24_ParamIns> _field_p{jule::Ref<_1b557cd24_ParamIns>()};
	jule::Ref<_1ab00dbcc_Data> _field_a{jule::Ref<_1ab00dbcc_Data>()};
	_1b61ec5ec_Token _field_error_token{_1b61ec5ec_Token()};
	_1ac6d02c0_TypeKind** _field_k{nullptr};


	_1a8dc912c_DynamicTypeAnnotation(jule::Ref<_1ab00dbcc_Eval> __param_e, jule::Ref<_1b557cd24_FnIns> __param_f, jule::Ref<_1b557cd24_ParamIns> __param_p, jule::Ref<_1ab00dbcc_Data> __param_a, _1b61ec5ec_Token __param_error_token, _1ac6d02c0_TypeKind** __param_k) {
		this->self = jule::Ref<_1a8dc912c_DynamicTypeAnnotation>::make(this, nullptr);

		this->_field_e = __param_e;
		this->_field_f = __param_f;
		this->_field_p = __param_p;
		this->_field_a = __param_a;
		this->_field_error_token = __param_error_token;
		this->_field_k = __param_k;
	}

	~_1a8dc912c_DynamicTypeAnnotation(void) { this->self.ref = nullptr; }

	_1a8dc912c_DynamicTypeAnnotation(void) { this->self = jule::Ref<_1a8dc912c_DynamicTypeAnnotation>::make(this, nullptr); }

	inline void _method_push_generic(jule::Ref<_1ac6d02c0_TypeKind>&,jule::Int);


	inline jule::Bool _method_annotate_prim(jule::Ref<_1ac6d02c0_TypeKind>&);


	inline jule::Bool _method_annotate_slc(jule::Ref<_1ac6d02c0_TypeKind>&);


	inline jule::Bool _method_check_map_key(_1ac6d02c0_TypeKind**,jule::Ref<_1ac6d02c0_TypeKind>&);


	inline jule::Bool _method_annotate_map(jule::Ref<_1ac6d02c0_TypeKind>&);


	inline jule::Bool _method_annotate_fn(jule::Ref<_1ac6d02c0_TypeKind>&);


	inline jule::Bool _method_annotate_ptr(jule::Ref<_1ac6d02c0_TypeKind>&);


	inline jule::Bool _method_annotate_ref(jule::Ref<_1ac6d02c0_TypeKind>&);


	inline jule::Bool _method_annotate_any(jule::Ref<_1ac6d02c0_TypeKind>&);


	inline jule::Bool _method_annotate_kind(jule::Ref<_1ac6d02c0_TypeKind>&);


	inline jule::Bool _method_annotate(void);


	inline bool operator==(const _1a8dc912c_DynamicTypeAnnotation &_Src) const {
		return 
			this->_field_e == _Src._field_e &&
			this->_field_f == _Src._field_f &&
			this->_field_p == _Src._field_p &&
			this->_field_a == _Src._field_a &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_k == _Src._field_k;
	}

	inline bool operator!=(const _1a8dc912c_DynamicTypeAnnotation &_Src) const { return !this->operator==(_Src); }
};


struct _1a8dc912c_StructLitChecker {
	jule::Ref<_1a8dc912c_StructLitChecker> self{};

	jule::Ref<_1ab00dbcc_Eval> _field_e{jule::Ref<_1ab00dbcc_Eval>()};
	_1b61ec5ec_Token _field_error_token{_1b61ec5ec_Token()};
	jule::Ref<_1b5e07a00_StructIns> _field_s{jule::Ref<_1b5e07a00_StructIns>()};
	jule::Slice<jule::Ref<_1ab33d083_StructArgExprModel>> _field_args{jule::Slice<jule::Ref<_1ab33d083_StructArgExprModel>>()};


	_1a8dc912c_StructLitChecker(jule::Ref<_1ab00dbcc_Eval> __param_e, _1b61ec5ec_Token __param_error_token, jule::Ref<_1b5e07a00_StructIns> __param_s, jule::Slice<jule::Ref<_1ab33d083_StructArgExprModel>> __param_args) {
		this->self = jule::Ref<_1a8dc912c_StructLitChecker>::make(this, nullptr);

		this->_field_e = __param_e;
		this->_field_error_token = __param_error_token;
		this->_field_s = __param_s;
		this->_field_args = __param_args;
	}

	~_1a8dc912c_StructLitChecker(void) { this->self.ref = nullptr; }

	_1a8dc912c_StructLitChecker(void) { this->self = jule::Ref<_1a8dc912c_StructLitChecker>::make(this, nullptr); }

	inline void _method_push_err(_1b61ec5ec_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_match(jule::Ref<_1b5e07a00_FieldIns>&,jule::Ref<_1ab00dbcc_Data>&,_1b61ec5ec_Token&);


	inline void _method_check_pair(jule::Ref<_1b61ca014_FieldExprPair>&,jule::Slice<jule::Any>&);


	inline jule::Bool _method_ready_exprs(jule::Slice<jule::Any>&);


	inline void _method_check(jule::Slice<jule::Any>&);


	inline bool operator==(const _1a8dc912c_StructLitChecker &_Src) const {
		return 
			this->_field_e == _Src._field_e &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_s == _Src._field_s &&
			this->_field_args == _Src._field_args;
	}

	inline bool operator!=(const _1a8dc912c_StructLitChecker &_Src) const { return !this->operator==(_Src); }
};


struct _1b61ca014_LabelSt {
	jule::Ref<_1b61ca014_LabelSt> self{};

	_1b61ec5ec_Token _field_token{_1b61ec5ec_Token()};
	jule::Str _field_ident{jule::Str()};


	_1b61ca014_LabelSt(_1b61ec5ec_Token __param_token, jule::Str __param_ident) {
		this->self = jule::Ref<_1b61ca014_LabelSt>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
	}

	~_1b61ca014_LabelSt(void) { this->self.ref = nullptr; }

	_1b61ca014_LabelSt(void) { this->self = jule::Ref<_1b61ca014_LabelSt>::make(this, nullptr); }

	inline bool operator==(const _1b61ca014_LabelSt &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1b61ca014_LabelSt &_Src) const { return !this->operator==(_Src); }
};


struct _1b61ca014_FallSt {
	jule::Ref<_1b61ca014_FallSt> self{};

	_1b61ec5ec_Token _field_token{_1b61ec5ec_Token()};


	_1b61ca014_FallSt(_1b61ec5ec_Token __param_token) {
		this->self = jule::Ref<_1b61ca014_FallSt>::make(this, nullptr);

		this->_field_token = __param_token;
	}

	~_1b61ca014_FallSt(void) { this->self.ref = nullptr; }

	_1b61ca014_FallSt(void) { this->self = jule::Ref<_1b61ca014_FallSt>::make(this, nullptr); }

	inline bool operator==(const _1b61ca014_FallSt &_Src) const {
		return 
			this->_field_token == _Src._field_token;
	}

	inline bool operator!=(const _1b61ca014_FallSt &_Src) const { return !this->operator==(_Src); }
};


struct _1b61ca014_AssignSt {
	jule::Ref<_1b61ca014_AssignSt> self{};

	jule::Bool _field_declarative{jule::Bool()};
	_1b61ec5ec_Token _field_setter{_1b61ec5ec_Token()};
	jule::Slice<jule::Ref<_1b61ca014_AssignLeft>> _field_left{jule::Slice<jule::Ref<_1b61ca014_AssignLeft>>()};
	jule::Ref<_1b61ca014_Expr> _field_right{jule::Ref<_1b61ca014_Expr>()};


	_1b61ca014_AssignSt(jule::Bool __param_declarative, _1b61ec5ec_Token __param_setter, jule::Slice<jule::Ref<_1b61ca014_AssignLeft>> __param_left, jule::Ref<_1b61ca014_Expr> __param_right) {
		this->self = jule::Ref<_1b61ca014_AssignSt>::make(this, nullptr);

		this->_field_declarative = __param_declarative;
		this->_field_setter = __param_setter;
		this->_field_left = __param_left;
		this->_field_right = __param_right;
	}

	~_1b61ca014_AssignSt(void) { this->self.ref = nullptr; }

	_1b61ca014_AssignSt(void) { this->self = jule::Ref<_1b61ca014_AssignSt>::make(this, nullptr); }

	inline bool operator==(const _1b61ca014_AssignSt &_Src) const {
		return 
			this->_field_declarative == _Src._field_declarative &&
			this->_field_setter == _Src._field_setter &&
			this->_field_left == _Src._field_left &&
			this->_field_right == _Src._field_right;
	}

	inline bool operator!=(const _1b61ca014_AssignSt &_Src) const { return !this->operator==(_Src); }
};


struct _1b61ca014_RetSt {
	jule::Ref<_1b61ca014_RetSt> self{};

	_1b61ec5ec_Token _field_token{_1b61ec5ec_Token()};
	jule::Ref<_1b61ca014_Expr> _field_expr{jule::Ref<_1b61ca014_Expr>()};


	_1b61ca014_RetSt(_1b61ec5ec_Token __param_token, jule::Ref<_1b61ca014_Expr> __param_expr) {
		this->self = jule::Ref<_1b61ca014_RetSt>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_expr = __param_expr;
	}

	~_1b61ca014_RetSt(void) { this->self.ref = nullptr; }

	_1b61ca014_RetSt(void) { this->self = jule::Ref<_1b61ca014_RetSt>::make(this, nullptr); }

	inline bool operator==(const _1b61ca014_RetSt &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1b61ca014_RetSt &_Src) const { return !this->operator==(_Src); }
};


struct _1b61ca014_Iter {
	jule::Ref<_1b61ca014_Iter> self{};

	_1b61ec5ec_Token _field_token{_1b61ec5ec_Token()};
	jule::Any _field_kind{jule::Any()};
	jule::Ref<_1b61ca014_ScopeTree> _field_scope{jule::Ref<_1b61ca014_ScopeTree>()};


	_1b61ca014_Iter(_1b61ec5ec_Token __param_token, jule::Any __param_kind, jule::Ref<_1b61ca014_ScopeTree> __param_scope) {
		this->self = jule::Ref<_1b61ca014_Iter>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_kind = __param_kind;
		this->_field_scope = __param_scope;
	}

	~_1b61ca014_Iter(void) { this->self.ref = nullptr; }

	_1b61ca014_Iter(void) { this->self = jule::Ref<_1b61ca014_Iter>::make(this, nullptr); }

	inline jule::Bool _method_is_inf(void);


	inline bool operator==(const _1b61ca014_Iter &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_kind == _Src._field_kind &&
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _1b61ca014_Iter &_Src) const { return !this->operator==(_Src); }
};


struct _1b61ca014_WhileKind {
	jule::Ref<_1b61ca014_WhileKind> self{};

	jule::Ref<_1b61ca014_Expr> _field_expr{jule::Ref<_1b61ca014_Expr>()};
	jule::Any _field_next{jule::Any()};
	_1b61ec5ec_Token _field_next_token{_1b61ec5ec_Token()};


	_1b61ca014_WhileKind(jule::Ref<_1b61ca014_Expr> __param_expr, jule::Any __param_next, _1b61ec5ec_Token __param_next_token) {
		this->self = jule::Ref<_1b61ca014_WhileKind>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_next = __param_next;
		this->_field_next_token = __param_next_token;
	}

	~_1b61ca014_WhileKind(void) { this->self.ref = nullptr; }

	_1b61ca014_WhileKind(void) { this->self = jule::Ref<_1b61ca014_WhileKind>::make(this, nullptr); }

	inline jule::Bool _method_is_while_next(void);


	inline bool operator==(const _1b61ca014_WhileKind &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_next == _Src._field_next &&
			this->_field_next_token == _Src._field_next_token;
	}

	inline bool operator!=(const _1b61ca014_WhileKind &_Src) const { return !this->operator==(_Src); }
};


struct _1b61ca014_RangeKind {
	jule::Ref<_1b61ca014_RangeKind> self{};

	_1b61ec5ec_Token _field_in_token{_1b61ec5ec_Token()};
	jule::Ref<_1b61ca014_Expr> _field_expr{jule::Ref<_1b61ca014_Expr>()};
	jule::Ref<_1b61ca014_VarDecl> _field_key_a{jule::Ref<_1b61ca014_VarDecl>()};
	jule::Ref<_1b61ca014_VarDecl> _field_key_b{jule::Ref<_1b61ca014_VarDecl>()};


	_1b61ca014_RangeKind(_1b61ec5ec_Token __param_in_token, jule::Ref<_1b61ca014_Expr> __param_expr, jule::Ref<_1b61ca014_VarDecl> __param_key_a, jule::Ref<_1b61ca014_VarDecl> __param_key_b) {
		this->self = jule::Ref<_1b61ca014_RangeKind>::make(this, nullptr);

		this->_field_in_token = __param_in_token;
		this->_field_expr = __param_expr;
		this->_field_key_a = __param_key_a;
		this->_field_key_b = __param_key_b;
	}

	~_1b61ca014_RangeKind(void) { this->self.ref = nullptr; }

	_1b61ca014_RangeKind(void) { this->self = jule::Ref<_1b61ca014_RangeKind>::make(this, nullptr); }

	inline bool operator==(const _1b61ca014_RangeKind &_Src) const {
		return 
			this->_field_in_token == _Src._field_in_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_key_a == _Src._field_key_a &&
			this->_field_key_b == _Src._field_key_b;
	}

	inline bool operator!=(const _1b61ca014_RangeKind &_Src) const { return !this->operator==(_Src); }
};


struct _1b61ca014_MatchCase {
	jule::Ref<_1b61ca014_MatchCase> self{};

	_1b61ec5ec_Token _field_token{_1b61ec5ec_Token()};
	jule::Bool _field_type_match{jule::Bool()};
	jule::Ref<_1b61ca014_Expr> _field_expr{jule::Ref<_1b61ca014_Expr>()};
	jule::Slice<jule::Ref<_1b61ca014_Case>> _field_cases{jule::Slice<jule::Ref<_1b61ca014_Case>>()};
	jule::Ref<_1b61ca014_Else> _field_default{jule::Ref<_1b61ca014_Else>()};


	_1b61ca014_MatchCase(_1b61ec5ec_Token __param_token, jule::Bool __param_type_match, jule::Ref<_1b61ca014_Expr> __param_expr, jule::Slice<jule::Ref<_1b61ca014_Case>> __param_cases, jule::Ref<_1b61ca014_Else> __param_default) {
		this->self = jule::Ref<_1b61ca014_MatchCase>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_type_match = __param_type_match;
		this->_field_expr = __param_expr;
		this->_field_cases = __param_cases;
		this->_field_default = __param_default;
	}

	~_1b61ca014_MatchCase(void) { this->self.ref = nullptr; }

	_1b61ca014_MatchCase(void) { this->self = jule::Ref<_1b61ca014_MatchCase>::make(this, nullptr); }

	inline bool operator==(const _1b61ca014_MatchCase &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_type_match == _Src._field_type_match &&
			this->_field_expr == _Src._field_expr &&
			this->_field_cases == _Src._field_cases &&
			this->_field_default == _Src._field_default;
	}

	inline bool operator!=(const _1b61ca014_MatchCase &_Src) const { return !this->operator==(_Src); }
};


struct _1a8dc912c_AssignTypeChecker {
	jule::Ref<_1a8dc912c_AssignTypeChecker> self{};

	jule::Ref<_1ab195050_Sema> _field_s{jule::Ref<_1ab195050_Sema>()};
	jule::Ref<_1ac6d02c0_TypeKind> _field_dest{jule::Ref<_1ac6d02c0_TypeKind>()};
	jule::Ref<_1ab00dbcc_Data> _field_d{jule::Ref<_1ab00dbcc_Data>()};
	_1b61ec5ec_Token _field_error_token{_1b61ec5ec_Token()};
	jule::Bool _field_deref{jule::Bool()};


	_1a8dc912c_AssignTypeChecker(jule::Ref<_1ab195050_Sema> __param_s, jule::Ref<_1ac6d02c0_TypeKind> __param_dest, jule::Ref<_1ab00dbcc_Data> __param_d, _1b61ec5ec_Token __param_error_token, jule::Bool __param_deref) {
		this->self = jule::Ref<_1a8dc912c_AssignTypeChecker>::make(this, nullptr);

		this->_field_s = __param_s;
		this->_field_dest = __param_dest;
		this->_field_d = __param_d;
		this->_field_error_token = __param_error_token;
		this->_field_deref = __param_deref;
	}

	~_1a8dc912c_AssignTypeChecker(void) { this->self.ref = nullptr; }

	_1a8dc912c_AssignTypeChecker(void) { this->self = jule::Ref<_1a8dc912c_AssignTypeChecker>::make(this, nullptr); }

	inline void _method_push_err(jule::Str,jule::Slice<jule::Any>);


	inline jule::Bool _method_check_validity(void);


	inline jule::Bool _method_check_const(void);


	inline jule::Bool _method_check(void);


	inline bool operator==(const _1a8dc912c_AssignTypeChecker &_Src) const {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_dest == _Src._field_dest &&
			this->_field_d == _Src._field_d &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_deref == _Src._field_deref;
	}

	inline bool operator!=(const _1a8dc912c_AssignTypeChecker &_Src) const { return !this->operator==(_Src); }
};


struct _1a8dc912c_FnCallArgChecker {
	jule::Ref<_1a8dc912c_FnCallArgChecker> self{};

	jule::Ref<_1ab00dbcc_Eval> _field_e{jule::Ref<_1ab00dbcc_Eval>()};
	jule::Slice<jule::Ref<_1b61ca014_Expr>> _field_args{jule::Slice<jule::Ref<_1b61ca014_Expr>>()};
	_1b61ec5ec_Token _field_error_token{_1b61ec5ec_Token()};
	jule::Ref<_1b557cd24_FnIns> _field_f{jule::Ref<_1b557cd24_FnIns>()};
	jule::Bool _field_dynamic_annotation{jule::Bool()};
	jule::Slice<jule::Any> _field_arg_models{jule::Slice<jule::Any>()};


	_1a8dc912c_FnCallArgChecker(jule::Ref<_1ab00dbcc_Eval> __param_e, jule::Slice<jule::Ref<_1b61ca014_Expr>> __param_args, _1b61ec5ec_Token __param_error_token, jule::Ref<_1b557cd24_FnIns> __param_f, jule::Bool __param_dynamic_annotation, jule::Slice<jule::Any> __param_arg_models) {
		this->self = jule::Ref<_1a8dc912c_FnCallArgChecker>::make(this, nullptr);

		this->_field_e = __param_e;
		this->_field_args = __param_args;
		this->_field_error_token = __param_error_token;
		this->_field_f = __param_f;
		this->_field_dynamic_annotation = __param_dynamic_annotation;
		this->_field_arg_models = __param_arg_models;
	}

	~_1a8dc912c_FnCallArgChecker(void) { this->self.ref = nullptr; }

	_1a8dc912c_FnCallArgChecker(void) { this->self = jule::Ref<_1a8dc912c_FnCallArgChecker>::make(this, nullptr); }

	inline void _method_push_err_token(_1b61ec5ec_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_err(jule::Str,jule::Slice<jule::Any>);


	inline jule::Slice<jule::Ref<_1b557cd24_ParamIns>> _method_get_params(void);


	inline jule::Bool _method_check_counts(jule::Slice<jule::Ref<_1b557cd24_ParamIns>>&);


	inline jule::Bool _method_check_arg(jule::Ref<_1b557cd24_ParamIns>&,jule::Ref<_1ab00dbcc_Data>&,_1b61ec5ec_Token&);


	inline jule::Bool _method_push(jule::Ref<_1b557cd24_ParamIns>&,jule::Ref<_1b61ca014_Expr>);


	inline jule::Bool _method_push_variadic(jule::Ref<_1b557cd24_ParamIns>&,jule::Int);


	inline jule::Bool _method_check_args(jule::Slice<jule::Ref<_1b557cd24_ParamIns>>&);


	inline jule::Bool _method_check_dynamic_type_annotation(void);


	inline jule::Bool _method_check(void);


	inline bool operator==(const _1a8dc912c_FnCallArgChecker &_Src) const {
		return 
			this->_field_e == _Src._field_e &&
			this->_field_args == _Src._field_args &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_f == _Src._field_f &&
			this->_field_dynamic_annotation == _Src._field_dynamic_annotation &&
			this->_field_arg_models == _Src._field_arg_models;
	}

	inline bool operator!=(const _1a8dc912c_FnCallArgChecker &_Src) const { return !this->operator==(_Src); }
};


struct _1b61ca014_GenericDecl {
	jule::Ref<_1b61ca014_GenericDecl> self{};

	_1b61ec5ec_Token _field_token{_1b61ec5ec_Token()};
	jule::Str _field_ident{jule::Str()};


	_1b61ca014_GenericDecl(_1b61ec5ec_Token __param_token, jule::Str __param_ident) {
		this->self = jule::Ref<_1b61ca014_GenericDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
	}

	~_1b61ca014_GenericDecl(void) { this->self.ref = nullptr; }

	_1b61ca014_GenericDecl(void) { this->self = jule::Ref<_1b61ca014_GenericDecl>::make(this, nullptr); }

	inline bool operator==(const _1b61ca014_GenericDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1b61ca014_GenericDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1a8dc912c_RetTypeChecker {
	jule::Ref<_1a8dc912c_RetTypeChecker> self{};

	jule::Ref<_1ab009de8_ScopeChecker> _field_sc{jule::Ref<_1ab009de8_ScopeChecker>()};
	jule::Ref<_1b557cd24_FnIns> _field_f{jule::Ref<_1b557cd24_FnIns>()};
	jule::Slice<jule::Ref<_1ac6d02c0_TypeKind>> _field_types{jule::Slice<jule::Ref<_1ac6d02c0_TypeKind>>()};
	jule::Slice<jule::Ref<_1b61ca014_Expr>> _field_exprs{jule::Slice<jule::Ref<_1b61ca014_Expr>>()};
	jule::Slice<jule::Ref<_1b623eab2_Var>> _field_vars{jule::Slice<jule::Ref<_1b623eab2_Var>>()};
	_1b61ec5ec_Token _field_error_token{_1b61ec5ec_Token()};
	jule::Any _field_model{jule::Any()};


	_1a8dc912c_RetTypeChecker(jule::Ref<_1ab009de8_ScopeChecker> __param_sc, jule::Ref<_1b557cd24_FnIns> __param_f, jule::Slice<jule::Ref<_1ac6d02c0_TypeKind>> __param_types, jule::Slice<jule::Ref<_1b61ca014_Expr>> __param_exprs, jule::Slice<jule::Ref<_1b623eab2_Var>> __param_vars, _1b61ec5ec_Token __param_error_token, jule::Any __param_model) {
		this->self = jule::Ref<_1a8dc912c_RetTypeChecker>::make(this, nullptr);

		this->_field_sc = __param_sc;
		this->_field_f = __param_f;
		this->_field_types = __param_types;
		this->_field_exprs = __param_exprs;
		this->_field_vars = __param_vars;
		this->_field_error_token = __param_error_token;
		this->_field_model = __param_model;
	}

	~_1a8dc912c_RetTypeChecker(void) { this->self.ref = nullptr; }

	_1a8dc912c_RetTypeChecker(void) { this->self = jule::Ref<_1a8dc912c_RetTypeChecker>::make(this, nullptr); }

	inline void _method_prepare_types(void);


	inline void _method_prepare_exprs(jule::Ref<_1b61ca014_Expr>&);


	inline void _method_ret_vars(void);


	inline void _method_check_exprs(void);


	inline jule::Bool _method_check(jule::Ref<_1b61ca014_Expr>&);


	inline bool operator==(const _1a8dc912c_RetTypeChecker &_Src) const {
		return 
			this->_field_sc == _Src._field_sc &&
			this->_field_f == _Src._field_f &&
			this->_field_types == _Src._field_types &&
			this->_field_exprs == _Src._field_exprs &&
			this->_field_vars == _Src._field_vars &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_model == _Src._field_model;
	}

	inline bool operator!=(const _1a8dc912c_RetTypeChecker &_Src) const { return !this->operator==(_Src); }
};


struct _1b61ca014_GotoSt {
	jule::Ref<_1b61ca014_GotoSt> self{};

	_1b61ec5ec_Token _field_token{_1b61ec5ec_Token()};
	_1b61ec5ec_Token _field_label{_1b61ec5ec_Token()};


	_1b61ca014_GotoSt(_1b61ec5ec_Token __param_token, _1b61ec5ec_Token __param_label) {
		this->self = jule::Ref<_1b61ca014_GotoSt>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_label = __param_label;
	}

	~_1b61ca014_GotoSt(void) { this->self.ref = nullptr; }

	_1b61ca014_GotoSt(void) { this->self = jule::Ref<_1b61ca014_GotoSt>::make(this, nullptr); }

	inline bool operator==(const _1b61ca014_GotoSt &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_label == _Src._field_label;
	}

	inline bool operator!=(const _1b61ca014_GotoSt &_Src) const { return !this->operator==(_Src); }
};


struct _1b61ca014_AssignLeft {
	jule::Ref<_1b61ca014_AssignLeft> self{};

	_1b61ec5ec_Token _field_token{_1b61ec5ec_Token()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Bool _field_reference{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_1b61ca014_Expr> _field_expr{jule::Ref<_1b61ca014_Expr>()};


	_1b61ca014_AssignLeft(_1b61ec5ec_Token __param_token, jule::Bool __param_mutable, jule::Bool __param_reference, jule::Str __param_ident, jule::Ref<_1b61ca014_Expr> __param_expr) {
		this->self = jule::Ref<_1b61ca014_AssignLeft>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_mutable = __param_mutable;
		this->_field_reference = __param_reference;
		this->_field_ident = __param_ident;
		this->_field_expr = __param_expr;
	}

	~_1b61ca014_AssignLeft(void) { this->self.ref = nullptr; }

	_1b61ca014_AssignLeft(void) { this->self = jule::Ref<_1b61ca014_AssignLeft>::make(this, nullptr); }

	inline bool operator==(const _1b61ca014_AssignLeft &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_reference == _Src._field_reference &&
			this->_field_ident == _Src._field_ident &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1b61ca014_AssignLeft &_Src) const { return !this->operator==(_Src); }
};


struct _1ab00dbcc_BinopSolver {
	jule::Ref<_1ab00dbcc_BinopSolver> self{};

	jule::Ref<_1ab00dbcc_Eval> _field_e{jule::Ref<_1ab00dbcc_Eval>()};
	jule::Ref<_1ab00dbcc_Data> _field_l{jule::Ref<_1ab00dbcc_Data>()};
	jule::Ref<_1ab00dbcc_Data> _field_r{jule::Ref<_1ab00dbcc_Data>()};
	_1b61ec5ec_Token _field_op{_1b61ec5ec_Token()};


	_1ab00dbcc_BinopSolver(jule::Ref<_1ab00dbcc_Eval> __param_e, jule::Ref<_1ab00dbcc_Data> __param_l, jule::Ref<_1ab00dbcc_Data> __param_r, _1b61ec5ec_Token __param_op) {
		this->self = jule::Ref<_1ab00dbcc_BinopSolver>::make(this, nullptr);

		this->_field_e = __param_e;
		this->_field_l = __param_l;
		this->_field_r = __param_r;
		this->_field_op = __param_op;
	}

	~_1ab00dbcc_BinopSolver(void) { this->self.ref = nullptr; }

	_1ab00dbcc_BinopSolver(void) { this->self = jule::Ref<_1ab00dbcc_BinopSolver>::make(this, nullptr); }

	inline jule::Bool _method_check_type_compatibility(void);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_nil(void);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_enum(void);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_ptr(void);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_arr(void);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_slc(void);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_fn(void);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_struct(void);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_trait(void);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_any(void);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_bool(void);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_str(void);


	inline void _method_set_type_to_greater(void);


	inline void _method_check_mod_data(jule::Ref<_1ab00dbcc_Data>);


	inline void _method_mod(void);


	inline jule::Bool _method_numbers_are_compatibile(jule::Str&,jule::Str&);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_float(void);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_unsig_int(void);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_sig_int(void);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval_prim(void);


	inline jule::Ref<_1ab00dbcc_Data> _method_eval(void);


	inline void _method_assign_shift(jule::Ref<_1ab00dbcc_Data>,jule::F64);


	inline void _method_solve_const(jule::Ref<_1ab00dbcc_Data>);


	inline void _method_post_const(jule::Ref<_1ab00dbcc_Data>);


	inline void _method_prepare_data(jule::Ref<_1ab00dbcc_Data>);


	inline void _method_prepare_eval(void);


	inline void _method_check_data(jule::Ref<_1ab00dbcc_Data>);


	inline void _method_check_datas(void);


	inline jule::Ref<_1ab00dbcc_Data> _method_solve_explicit(jule::Ref<_1ab00dbcc_Data>,jule::Ref<_1ab00dbcc_Data>);


	inline jule::Ref<_1ab00dbcc_Data> _method_solve(jule::Ref<_1b61ca014_BinopExpr>);


	inline bool operator==(const _1ab00dbcc_BinopSolver &_Src) const {
		return 
			this->_field_e == _Src._field_e &&
			this->_field_l == _Src._field_l &&
			this->_field_r == _Src._field_r &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _1ab00dbcc_BinopSolver &_Src) const { return !this->operator==(_Src); }
};


struct _1ac6d02c0_TypeAlias {
	jule::Ref<_1ac6d02c0_TypeAlias> self{};

	jule::Ref<_1b61ca014_ScopeTree> _field_scope{jule::Ref<_1b61ca014_ScopeTree>()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_used{jule::Bool()};
	_1b61ec5ec_Token _field_token{_1b61ec5ec_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_1ac6d02c0_TypeSymbol> _field_kind{jule::Ref<_1ac6d02c0_TypeSymbol>()};
	jule::Str _field_doc{jule::Str()};
	jule::Slice<jule::Any> _field_refers{jule::Slice<jule::Any>()};


	_1ac6d02c0_TypeAlias(jule::Ref<_1b61ca014_ScopeTree> __param_scope, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Bool __param_used, _1b61ec5ec_Token __param_token, jule::Str __param_ident, jule::Ref<_1ac6d02c0_TypeSymbol> __param_kind, jule::Str __param_doc, jule::Slice<jule::Any> __param_refers) {
		this->self = jule::Ref<_1ac6d02c0_TypeAlias>::make(this, nullptr);

		this->_field_scope = __param_scope;
		this->_field_public = __param_public;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_used = __param_used;
		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_kind = __param_kind;
		this->_field_doc = __param_doc;
		this->_field_refers = __param_refers;
	}

	~_1ac6d02c0_TypeAlias(void) { this->self.ref = nullptr; }

	_1ac6d02c0_TypeAlias(void) { this->self = jule::Ref<_1ac6d02c0_TypeAlias>::make(this, nullptr); }

	inline bool operator==(const _1ac6d02c0_TypeAlias &_Src) const {
		return 
			this->_field_scope == _Src._field_scope &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_used == _Src._field_used &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind &&
			this->_field_doc == _Src._field_doc &&
			this->_field_refers == _Src._field_refers;
	}

	inline bool operator!=(const _1ac6d02c0_TypeAlias &_Src) const { return !this->operator==(_Src); }
};


struct _1b61ca014_Comment {
	jule::Ref<_1b61ca014_Comment> self{};

	_1b61ec5ec_Token _field_token{_1b61ec5ec_Token()};
	jule::Str _field_text{jule::Str()};


	_1b61ca014_Comment(_1b61ec5ec_Token __param_token, jule::Str __param_text) {
		this->self = jule::Ref<_1b61ca014_Comment>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_text = __param_text;
	}

	~_1b61ca014_Comment(void) { this->self.ref = nullptr; }

	_1b61ca014_Comment(void) { this->self = jule::Ref<_1b61ca014_Comment>::make(this, nullptr); }

	inline jule::Bool _method_is_directive(void);


	inline bool operator==(const _1b61ca014_Comment &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_text == _Src._field_text;
	}

	inline bool operator!=(const _1b61ca014_Comment &_Src) const { return !this->operator==(_Src); }
};


struct _1b61ca014_ParamDecl {
	jule::Ref<_1b61ca014_ParamDecl> self{};

	_1b61ec5ec_Token _field_token{_1b61ec5ec_Token()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Bool _field_variadic{jule::Bool()};
	jule::Bool _field_reference{jule::Bool()};
	jule::Ref<_1b61ca014_TypeDecl> _field_kind{jule::Ref<_1b61ca014_TypeDecl>()};
	jule::Str _field_ident{jule::Str()};


	_1b61ca014_ParamDecl(_1b61ec5ec_Token __param_token, jule::Bool __param_mutable, jule::Bool __param_variadic, jule::Bool __param_reference, jule::Ref<_1b61ca014_TypeDecl> __param_kind, jule::Str __param_ident) {
		this->self = jule::Ref<_1b61ca014_ParamDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_mutable = __param_mutable;
		this->_field_variadic = __param_variadic;
		this->_field_reference = __param_reference;
		this->_field_kind = __param_kind;
		this->_field_ident = __param_ident;
	}

	~_1b61ca014_ParamDecl(void) { this->self.ref = nullptr; }

	_1b61ca014_ParamDecl(void) { this->self = jule::Ref<_1b61ca014_ParamDecl>::make(this, nullptr); }

	inline jule::Bool _method_is_self(void);


	inline jule::Bool _method_is_ref(void);


	inline bool operator==(const _1b61ca014_ParamDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_variadic == _Src._field_variadic &&
			this->_field_reference == _Src._field_reference &&
			this->_field_kind == _Src._field_kind &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1b61ca014_ParamDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1b61ca014_FnDecl {
	jule::Ref<_1b61ca014_FnDecl> self{};

	_1b61ec5ec_Token _field_token{_1b61ec5ec_Token()};
	jule::Bool _field_global{jule::Bool()};
	jule::Bool _field_unsafety{jule::Bool()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_statically{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Slice<jule::Ref<_1b61ca014_Directive>> _field_directives{jule::Slice<jule::Ref<_1b61ca014_Directive>>()};
	jule::Ref<_1b61ca014_CommentGroup> _field_doc_comments{jule::Ref<_1b61ca014_CommentGroup>()};
	jule::Ref<_1b61ca014_ScopeTree> _field_scope{jule::Ref<_1b61ca014_ScopeTree>()};
	jule::Slice<jule::Ref<_1b61ca014_GenericDecl>> _field_generics{jule::Slice<jule::Ref<_1b61ca014_GenericDecl>>()};
	jule::Ref<_1b61ca014_RetTypeDecl> _field_result{jule::Ref<_1b61ca014_RetTypeDecl>()};
	jule::Slice<jule::Ref<_1b61ca014_ParamDecl>> _field_params{jule::Slice<jule::Ref<_1b61ca014_ParamDecl>>()};


	_1b61ca014_FnDecl(_1b61ec5ec_Token __param_token, jule::Bool __param_global, jule::Bool __param_unsafety, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Bool __param_statically, jule::Str __param_ident, jule::Slice<jule::Ref<_1b61ca014_Directive>> __param_directives, jule::Ref<_1b61ca014_CommentGroup> __param_doc_comments, jule::Ref<_1b61ca014_ScopeTree> __param_scope, jule::Slice<jule::Ref<_1b61ca014_GenericDecl>> __param_generics, jule::Ref<_1b61ca014_RetTypeDecl> __param_result, jule::Slice<jule::Ref<_1b61ca014_ParamDecl>> __param_params) {
		this->self = jule::Ref<_1b61ca014_FnDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_global = __param_global;
		this->_field_unsafety = __param_unsafety;
		this->_field_public = __param_public;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_statically = __param_statically;
		this->_field_ident = __param_ident;
		this->_field_directives = __param_directives;
		this->_field_doc_comments = __param_doc_comments;
		this->_field_scope = __param_scope;
		this->_field_generics = __param_generics;
		this->_field_result = __param_result;
		this->_field_params = __param_params;
	}

	~_1b61ca014_FnDecl(void) { this->self.ref = nullptr; }

	_1b61ca014_FnDecl(void) { this->self = jule::Ref<_1b61ca014_FnDecl>::make(this, nullptr); }

	inline jule::Bool _method_is_anon(void);


	inline bool operator==(const _1b61ca014_FnDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_global == _Src._field_global &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_statically == _Src._field_statically &&
			this->_field_ident == _Src._field_ident &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc_comments == _Src._field_doc_comments &&
			this->_field_scope == _Src._field_scope &&
			this->_field_generics == _Src._field_generics &&
			this->_field_result == _Src._field_result &&
			this->_field_params == _Src._field_params;
	}

	inline bool operator!=(const _1b61ca014_FnDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1b61ca014_VarDecl {
	jule::Ref<_1b61ca014_VarDecl> self{};

	jule::Ref<_1b61ca014_ScopeTree> _field_scope{jule::Ref<_1b61ca014_ScopeTree>()};
	_1b61ec5ec_Token _field_token{_1b61ec5ec_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Bool _field_constant{jule::Bool()};
	jule::Bool _field_statically{jule::Bool()};
	jule::Bool _field_reference{jule::Bool()};
	jule::Slice<jule::Ref<_1b61ca014_Directive>> _field_directives{jule::Slice<jule::Ref<_1b61ca014_Directive>>()};
	jule::Ref<_1b61ca014_CommentGroup> _field_doc_comments{jule::Ref<_1b61ca014_CommentGroup>()};
	jule::Ref<_1b61ca014_TypeDecl> _field_kind{jule::Ref<_1b61ca014_TypeDecl>()};
	jule::Ref<_1b61ca014_Expr> _field_expr{jule::Ref<_1b61ca014_Expr>()};


	_1b61ca014_VarDecl(jule::Ref<_1b61ca014_ScopeTree> __param_scope, _1b61ec5ec_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked, jule::Bool __param_public, jule::Bool __param_mutable, jule::Bool __param_constant, jule::Bool __param_statically, jule::Bool __param_reference, jule::Slice<jule::Ref<_1b61ca014_Directive>> __param_directives, jule::Ref<_1b61ca014_CommentGroup> __param_doc_comments, jule::Ref<_1b61ca014_TypeDecl> __param_kind, jule::Ref<_1b61ca014_Expr> __param_expr) {
		this->self = jule::Ref<_1b61ca014_VarDecl>::make(this, nullptr);

		this->_field_scope = __param_scope;
		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_public = __param_public;
		this->_field_mutable = __param_mutable;
		this->_field_constant = __param_constant;
		this->_field_statically = __param_statically;
		this->_field_reference = __param_reference;
		this->_field_directives = __param_directives;
		this->_field_doc_comments = __param_doc_comments;
		this->_field_kind = __param_kind;
		this->_field_expr = __param_expr;
	}

	~_1b61ca014_VarDecl(void) { this->self.ref = nullptr; }

	_1b61ca014_VarDecl(void) { this->self = jule::Ref<_1b61ca014_VarDecl>::make(this, nullptr); }

	inline bool operator==(const _1b61ca014_VarDecl &_Src) const {
		return 
			this->_field_scope == _Src._field_scope &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_public == _Src._field_public &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_constant == _Src._field_constant &&
			this->_field_statically == _Src._field_statically &&
			this->_field_reference == _Src._field_reference &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc_comments == _Src._field_doc_comments &&
			this->_field_kind == _Src._field_kind &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1b61ca014_VarDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1b61ca014_BreakSt {
	jule::Ref<_1b61ca014_BreakSt> self{};

	_1b61ec5ec_Token _field_token{_1b61ec5ec_Token()};
	_1b61ec5ec_Token _field_label{_1b61ec5ec_Token()};


	_1b61ca014_BreakSt(_1b61ec5ec_Token __param_token, _1b61ec5ec_Token __param_label) {
		this->self = jule::Ref<_1b61ca014_BreakSt>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_label = __param_label;
	}

	~_1b61ca014_BreakSt(void) { this->self.ref = nullptr; }

	_1b61ca014_BreakSt(void) { this->self = jule::Ref<_1b61ca014_BreakSt>::make(this, nullptr); }

	inline bool operator==(const _1b61ca014_BreakSt &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_label == _Src._field_label;
	}

	inline bool operator!=(const _1b61ca014_BreakSt &_Src) const { return !this->operator==(_Src); }
};


struct _1ac6d02c0_TypeChecker {
	jule::Ref<_1ac6d02c0_TypeChecker> self{};

	jule::Ref<_1ab195050_Sema> _field_s{jule::Ref<_1ab195050_Sema>()};
	jule::Trait<_1aae290e2_Lookup> _field_lookup{jule::Trait<_1aae290e2_Lookup>()};
	jule::Ref<_1ac6d02c0_Referencer> _field_referencer{jule::Ref<_1ac6d02c0_Referencer>()};
	_1b61ec5ec_Token _field_error_token{_1b61ec5ec_Token()};
	jule::Slice<jule::Ref<_1b61ca014_GenericDecl>> _field_ignore_generics{jule::Slice<jule::Ref<_1b61ca014_GenericDecl>>()};
	jule::Slice<jule::Ref<_1ac6d02c0_TypeAlias>> _field_use_generics{jule::Slice<jule::Ref<_1ac6d02c0_TypeAlias>>()};
	jule::Bool _field_not_plain{jule::Bool()};


	_1ac6d02c0_TypeChecker(jule::Ref<_1ab195050_Sema> __param_s, jule::Trait<_1aae290e2_Lookup> __param_lookup, jule::Ref<_1ac6d02c0_Referencer> __param_referencer, _1b61ec5ec_Token __param_error_token, jule::Slice<jule::Ref<_1b61ca014_GenericDecl>> __param_ignore_generics, jule::Slice<jule::Ref<_1ac6d02c0_TypeAlias>> __param_use_generics, jule::Bool __param_not_plain) {
		this->self = jule::Ref<_1ac6d02c0_TypeChecker>::make(this, nullptr);

		this->_field_s = __param_s;
		this->_field_lookup = __param_lookup;
		this->_field_referencer = __param_referencer;
		this->_field_error_token = __param_error_token;
		this->_field_ignore_generics = __param_ignore_generics;
		this->_field_use_generics = __param_use_generics;
		this->_field_not_plain = __param_not_plain;
	}

	~_1ac6d02c0_TypeChecker(void) { this->self.ref = nullptr; }

	_1ac6d02c0_TypeChecker(void) { this->self = jule::Ref<_1ac6d02c0_TypeChecker>::make(this, nullptr); }

	inline void _method_push_err(_1b61ec5ec_Token,jule::Str,jule::Slice<jule::Any>);


	inline jule::Ref<_1ac6d02c0_Prim> _method_build_prim(jule::Ref<_1b61ca014_IdentTypeDecl>&);


	inline void _method_push_cycle_error(jule::Any,jule::Any,jule::Str&);


	inline jule::Bool _method_are_equals_cross_cycle_data_0(jule::Any,jule::Any);
	inline jule::Bool _method_are_equals_cross_cycle_data_1(jule::Any,jule::Any);


	inline jule::Bool _method_check_cross_cycle(jule::Any,jule::Str&);


	inline jule::Bool _method_check_illegal_cycles(jule::Ref<_1b61ca014_IdentTypeDecl>&,jule::Any);


	inline jule::Trait<_1ac6d02c0_Kind> _method_from_type_alias(jule::Ref<_1b61ca014_IdentTypeDecl>&,jule::Ref<_1ac6d02c0_TypeAlias>&);


	inline jule::Ref<_1a909ac6b_Enum> _method_from_enum(jule::Ref<_1b61ca014_IdentTypeDecl>&,jule::Ref<_1a909ac6b_Enum>&);


	inline jule::Bool _method_check_struct_ins(jule::Ref<_1b5e07a00_StructIns>&,_1b61ec5ec_Token&);


	inline void _method_append_used_struct_reference(jule::Ref<_1b5e07a00_Struct>&);


	inline jule::Ref<_1b5e07a00_StructIns> _method_from_struct(jule::Ref<_1b61ca014_IdentTypeDecl>&,jule::Ref<_1b5e07a00_Struct>&);


	inline jule::Trait<_1ac6d02c0_Kind> _method_get_def(jule::Ref<_1b61ca014_IdentTypeDecl>&);


	inline jule::Trait<_1ac6d02c0_Kind> _method_build_ident(jule::Ref<_1b61ca014_IdentTypeDecl>);


	inline jule::Ref<_1ac6d02c0_Ref> _method_build_ref_from_type(jule::Ref<_1ac6d02c0_TypeKind>&);


	inline jule::Ref<_1ac6d02c0_Ref> _method_build_ref(jule::Ref<_1b61ca014_RefTypeDecl>);


	inline jule::Ref<_1ac6d02c0_Ptr> _method_build_ptr_from_type(jule::Ref<_1ac6d02c0_TypeKind>&);


	inline jule::Ref<_1ac6d02c0_Ptr> _method_build_ptr(jule::Ref<_1b61ca014_PtrTypeDecl>);


	inline jule::Ref<_1ac6d02c0_Slc> _method_build_slc(jule::Ref<_1b61ca014_SlcTypeDecl>);


	inline jule::Ref<_1ac6d02c0_Arr> _method_build_arr(jule::Ref<_1b61ca014_ArrTypeDecl>);


	inline jule::Ref<_1ac6d02c0_Map> _method_build_map(jule::Ref<_1b61ca014_MapTypeDecl>);


	inline jule::Ref<_1ac6d02c0_Tuple> _method_build_tuple(jule::Ref<_1b61ca014_TupleTypeDecl>);


	inline jule::Bool _method_check_fn_types(jule::Ref<_1b557cd24_FnIns>&);


	inline jule::Ref<_1b557cd24_FnIns> _method_build_fn(jule::Ref<_1b61ca014_FnDecl>);


	inline jule::Trait<_1ac6d02c0_Kind> _method_build_by_namespace(jule::Ref<_1b61ca014_NamespaceTypeDecl>);


	inline jule::Ref<_1ac6d02c0_TypeKind> _method_build(jule::Any&);


	inline jule::Ref<_1ac6d02c0_TypeKind> _method_check_decl(jule::Ref<_1b61ca014_TypeDecl>&);


	inline void _method_check(jule::Ref<_1ac6d02c0_TypeSymbol>&);


	inline bool operator==(const _1ac6d02c0_TypeChecker &_Src) const {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_lookup == _Src._field_lookup &&
			this->_field_referencer == _Src._field_referencer &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_ignore_generics == _Src._field_ignore_generics &&
			this->_field_use_generics == _Src._field_use_generics &&
			this->_field_not_plain == _Src._field_not_plain;
	}

	inline bool operator!=(const _1ac6d02c0_TypeChecker &_Src) const { return !this->operator==(_Src); }
};


struct _1b61ca014_ContSt {
	jule::Ref<_1b61ca014_ContSt> self{};

	_1b61ec5ec_Token _field_token{_1b61ec5ec_Token()};
	_1b61ec5ec_Token _field_label{_1b61ec5ec_Token()};


	_1b61ca014_ContSt(_1b61ec5ec_Token __param_token, _1b61ec5ec_Token __param_label) {
		this->self = jule::Ref<_1b61ca014_ContSt>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_label = __param_label;
	}

	~_1b61ca014_ContSt(void) { this->self.ref = nullptr; }

	_1b61ca014_ContSt(void) { this->self = jule::Ref<_1b61ca014_ContSt>::make(this, nullptr); }

	inline bool operator==(const _1b61ca014_ContSt &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_label == _Src._field_label;
	}

	inline bool operator!=(const _1b61ca014_ContSt &_Src) const { return !this->operator==(_Src); }
};


struct _1b60cd1d1_IR {
	jule::Ref<_1b60cd1d1_IR> self{};

	jule::Slice<jule::Str> _field_passes{jule::Slice<jule::Str>()};
	jule::Ref<_1ab194c20_Package> _field_main{jule::Ref<_1ab194c20_Package>()};
	jule::Slice<jule::Ref<_1ab194c20_ImportInfo>> _field_used{jule::Slice<jule::Ref<_1ab194c20_ImportInfo>>()};
	_1b60cc7c9_OrderedDefines _field_ordered{_1b60cc7c9_OrderedDefines()};


	_1b60cd1d1_IR(jule::Slice<jule::Str> __param_passes, jule::Ref<_1ab194c20_Package> __param_main, jule::Slice<jule::Ref<_1ab194c20_ImportInfo>> __param_used, _1b60cc7c9_OrderedDefines __param_ordered) {
		this->self = jule::Ref<_1b60cd1d1_IR>::make(this, nullptr);

		this->_field_passes = __param_passes;
		this->_field_main = __param_main;
		this->_field_used = __param_used;
		this->_field_ordered = __param_ordered;
	}

	~_1b60cd1d1_IR(void) { this->self.ref = nullptr; }

	_1b60cd1d1_IR(void) { this->self = jule::Ref<_1b60cd1d1_IR>::make(this, nullptr); }

	static inline std::tuple<jule::Ref<_1b60cd1d1_IR>,jule::Slice<_1cdeeb191_Log>> _static_method_build(jule::Str,jule::Int);


	inline void _method_append_structs(jule::Ref<_1ab194c20_Package>&,jule::Slice<jule::Ref<_1b5e07a00_Struct>>&);


	inline jule::Slice<jule::Ref<_1b5e07a00_Struct>> _method_get_all_structures(void);


	inline void _method_append_vars(jule::Ref<_1ab194c20_Package>&,jule::Slice<jule::Ref<_1b623eab2_Var>>&);


	inline jule::Slice<jule::Ref<_1b623eab2_Var>> _method_get_all_variables(void);


	inline void _method_order(void);


	inline bool operator==(const _1b60cd1d1_IR &_Src) const {
		return 
			this->_field_passes == _Src._field_passes &&
			this->_field_main == _Src._field_main &&
			this->_field_used == _Src._field_used &&
			this->_field_ordered == _Src._field_ordered;
	}

	inline bool operator!=(const _1b60cd1d1_IR &_Src) const { return !this->operator==(_Src); }
};


struct _1b61ca014_If {
	jule::Ref<_1b61ca014_If> self{};

	_1b61ec5ec_Token _field_token{_1b61ec5ec_Token()};
	jule::Ref<_1b61ca014_Expr> _field_expr{jule::Ref<_1b61ca014_Expr>()};
	jule::Ref<_1b61ca014_ScopeTree> _field_scope{jule::Ref<_1b61ca014_ScopeTree>()};


	_1b61ca014_If(_1b61ec5ec_Token __param_token, jule::Ref<_1b61ca014_Expr> __param_expr, jule::Ref<_1b61ca014_ScopeTree> __param_scope) {
		this->self = jule::Ref<_1b61ca014_If>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_expr = __param_expr;
		this->_field_scope = __param_scope;
	}

	~_1b61ca014_If(void) { this->self.ref = nullptr; }

	_1b61ca014_If(void) { this->self = jule::Ref<_1b61ca014_If>::make(this, nullptr); }

	inline bool operator==(const _1b61ca014_If &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _1b61ca014_If &_Src) const { return !this->operator==(_Src); }
};


struct _1b61ca014_Else {
	jule::Ref<_1b61ca014_Else> self{};

	_1b61ec5ec_Token _field_token{_1b61ec5ec_Token()};
	jule::Ref<_1b61ca014_ScopeTree> _field_scope{jule::Ref<_1b61ca014_ScopeTree>()};


	_1b61ca014_Else(_1b61ec5ec_Token __param_token, jule::Ref<_1b61ca014_ScopeTree> __param_scope) {
		this->self = jule::Ref<_1b61ca014_Else>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_scope = __param_scope;
	}

	~_1b61ca014_Else(void) { this->self.ref = nullptr; }

	_1b61ca014_Else(void) { this->self = jule::Ref<_1b61ca014_Else>::make(this, nullptr); }

	inline bool operator==(const _1b61ca014_Else &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _1b61ca014_Else &_Src) const { return !this->operator==(_Src); }
};


struct _1ab009de8_ScopeLabel {
	jule::Ref<_1ab009de8_ScopeLabel> self{};

	_1b61ec5ec_Token _field_token{_1b61ec5ec_Token()};
	jule::Ref<_1ab009de8_Label> _field_label{jule::Ref<_1ab009de8_Label>()};
	jule::Int _field_pos{jule::Int()};
	jule::Ref<_1ab009de8_ScopeChecker> _field_scope{jule::Ref<_1ab009de8_ScopeChecker>()};
	jule::Bool _field_used{jule::Bool()};


	_1ab009de8_ScopeLabel(_1b61ec5ec_Token __param_token, jule::Ref<_1ab009de8_Label> __param_label, jule::Int __param_pos, jule::Ref<_1ab009de8_ScopeChecker> __param_scope, jule::Bool __param_used) {
		this->self = jule::Ref<_1ab009de8_ScopeLabel>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_label = __param_label;
		this->_field_pos = __param_pos;
		this->_field_scope = __param_scope;
		this->_field_used = __param_used;
	}

	~_1ab009de8_ScopeLabel(void) { this->self.ref = nullptr; }

	_1ab009de8_ScopeLabel(void) { this->self = jule::Ref<_1ab009de8_ScopeLabel>::make(this, nullptr); }

	inline bool operator==(const _1ab009de8_ScopeLabel &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_label == _Src._field_label &&
			this->_field_pos == _Src._field_pos &&
			this->_field_scope == _Src._field_scope &&
			this->_field_used == _Src._field_used;
	}

	inline bool operator!=(const _1ab009de8_ScopeLabel &_Src) const { return !this->operator==(_Src); }
};


struct _1b61ca014_Directive {
	jule::Ref<_1b61ca014_Directive> self{};

	_1b61ec5ec_Token _field_token{_1b61ec5ec_Token()};
	jule::Str _field_tag{jule::Str()};
	jule::Slice<jule::Str> _field_args{jule::Slice<jule::Str>()};


	_1b61ca014_Directive(_1b61ec5ec_Token __param_token, jule::Str __param_tag, jule::Slice<jule::Str> __param_args) {
		this->self = jule::Ref<_1b61ca014_Directive>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_tag = __param_tag;
		this->_field_args = __param_args;
	}

	~_1b61ca014_Directive(void) { this->self.ref = nullptr; }

	_1b61ca014_Directive(void) { this->self = jule::Ref<_1b61ca014_Directive>::make(this, nullptr); }

	inline bool operator==(const _1b61ca014_Directive &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_tag == _Src._field_tag &&
			this->_field_args == _Src._field_args;
	}

	inline bool operator!=(const _1b61ca014_Directive &_Src) const { return !this->operator==(_Src); }
};


struct _1b61ca014_TypeAliasDecl {
	jule::Ref<_1b61ca014_TypeAliasDecl> self{};

	jule::Ref<_1b61ca014_ScopeTree> _field_scope{jule::Ref<_1b61ca014_ScopeTree>()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	_1b61ec5ec_Token _field_token{_1b61ec5ec_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_1b61ca014_TypeDecl> _field_kind{jule::Ref<_1b61ca014_TypeDecl>()};
	jule::Ref<_1b61ca014_CommentGroup> _field_doc_comments{jule::Ref<_1b61ca014_CommentGroup>()};


	_1b61ca014_TypeAliasDecl(jule::Ref<_1b61ca014_ScopeTree> __param_scope, jule::Bool __param_public, jule::Bool __param_cpp_linked, _1b61ec5ec_Token __param_token, jule::Str __param_ident, jule::Ref<_1b61ca014_TypeDecl> __param_kind, jule::Ref<_1b61ca014_CommentGroup> __param_doc_comments) {
		this->self = jule::Ref<_1b61ca014_TypeAliasDecl>::make(this, nullptr);

		this->_field_scope = __param_scope;
		this->_field_public = __param_public;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_kind = __param_kind;
		this->_field_doc_comments = __param_doc_comments;
	}

	~_1b61ca014_TypeAliasDecl(void) { this->self.ref = nullptr; }

	_1b61ca014_TypeAliasDecl(void) { this->self = jule::Ref<_1b61ca014_TypeAliasDecl>::make(this, nullptr); }

	inline bool operator==(const _1b61ca014_TypeAliasDecl &_Src) const {
		return 
			this->_field_scope == _Src._field_scope &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind &&
			this->_field_doc_comments == _Src._field_doc_comments;
	}

	inline bool operator!=(const _1b61ca014_TypeAliasDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1b61ca014_Case {
	jule::Ref<_1b61ca014_Case> self{};

	_1b61ec5ec_Token _field_token{_1b61ec5ec_Token()};
	jule::Ref<_1b61ca014_ScopeTree> _field_scope{jule::Ref<_1b61ca014_ScopeTree>()};
	jule::Slice<jule::Ref<_1b61ca014_Expr>> _field_exprs{jule::Slice<jule::Ref<_1b61ca014_Expr>>()};


	_1b61ca014_Case(_1b61ec5ec_Token __param_token, jule::Ref<_1b61ca014_ScopeTree> __param_scope, jule::Slice<jule::Ref<_1b61ca014_Expr>> __param_exprs) {
		this->self = jule::Ref<_1b61ca014_Case>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_scope = __param_scope;
		this->_field_exprs = __param_exprs;
	}

	~_1b61ca014_Case(void) { this->self.ref = nullptr; }

	_1b61ca014_Case(void) { this->self = jule::Ref<_1b61ca014_Case>::make(this, nullptr); }

	inline bool operator==(const _1b61ca014_Case &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_scope == _Src._field_scope &&
			this->_field_exprs == _Src._field_exprs;
	}

	inline bool operator!=(const _1b61ca014_Case &_Src) const { return !this->operator==(_Src); }
};


struct _1b61ca014_UseDecl {
	jule::Ref<_1b61ca014_UseDecl> self{};

	_1b61ec5ec_Token _field_token{_1b61ec5ec_Token()};
	jule::Str _field_link_path{jule::Str()};
	jule::Str _field_alias{jule::Str()};
	jule::Bool _field_full{jule::Bool()};
	jule::Slice<_1b61ec5ec_Token> _field_selected{jule::Slice<_1b61ec5ec_Token>()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_std{jule::Bool()};


	_1b61ca014_UseDecl(_1b61ec5ec_Token __param_token, jule::Str __param_link_path, jule::Str __param_alias, jule::Bool __param_full, jule::Slice<_1b61ec5ec_Token> __param_selected, jule::Bool __param_cpp_linked, jule::Bool __param_std) {
		this->self = jule::Ref<_1b61ca014_UseDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_link_path = __param_link_path;
		this->_field_alias = __param_alias;
		this->_field_full = __param_full;
		this->_field_selected = __param_selected;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_std = __param_std;
	}

	~_1b61ca014_UseDecl(void) { this->self.ref = nullptr; }

	_1b61ca014_UseDecl(void) { this->self = jule::Ref<_1b61ca014_UseDecl>::make(this, nullptr); }

	inline bool operator==(const _1b61ca014_UseDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_link_path == _Src._field_link_path &&
			this->_field_alias == _Src._field_alias &&
			this->_field_full == _Src._field_full &&
			this->_field_selected == _Src._field_selected &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_std == _Src._field_std;
	}

	inline bool operator!=(const _1b61ca014_UseDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1b61ca014_EnumItemDecl {
	jule::Ref<_1b61ca014_EnumItemDecl> self{};

	_1b61ec5ec_Token _field_token{_1b61ec5ec_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_1b61ca014_Expr> _field_expr{jule::Ref<_1b61ca014_Expr>()};


	_1b61ca014_EnumItemDecl(_1b61ec5ec_Token __param_token, jule::Str __param_ident, jule::Ref<_1b61ca014_Expr> __param_expr) {
		this->self = jule::Ref<_1b61ca014_EnumItemDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_expr = __param_expr;
	}

	~_1b61ca014_EnumItemDecl(void) { this->self.ref = nullptr; }

	_1b61ca014_EnumItemDecl(void) { this->self = jule::Ref<_1b61ca014_EnumItemDecl>::make(this, nullptr); }

	inline jule::Bool _method_auto_expr(void);


	inline bool operator==(const _1b61ca014_EnumItemDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1b61ca014_EnumItemDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1b61ca014_EnumDecl {
	jule::Ref<_1b61ca014_EnumDecl> self{};

	_1b61ec5ec_Token _field_token{_1b61ec5ec_Token()};
	jule::Bool _field_public{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_1b61ca014_TypeDecl> _field_kind{jule::Ref<_1b61ca014_TypeDecl>()};
	jule::Slice<jule::Ref<_1b61ca014_EnumItemDecl>> _field_items{jule::Slice<jule::Ref<_1b61ca014_EnumItemDecl>>()};
	jule::Ref<_1b61ca014_CommentGroup> _field_doc_comments{jule::Ref<_1b61ca014_CommentGroup>()};


	_1b61ca014_EnumDecl(_1b61ec5ec_Token __param_token, jule::Bool __param_public, jule::Str __param_ident, jule::Ref<_1b61ca014_TypeDecl> __param_kind, jule::Slice<jule::Ref<_1b61ca014_EnumItemDecl>> __param_items, jule::Ref<_1b61ca014_CommentGroup> __param_doc_comments) {
		this->self = jule::Ref<_1b61ca014_EnumDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_public = __param_public;
		this->_field_ident = __param_ident;
		this->_field_kind = __param_kind;
		this->_field_items = __param_items;
		this->_field_doc_comments = __param_doc_comments;
	}

	~_1b61ca014_EnumDecl(void) { this->self.ref = nullptr; }

	_1b61ca014_EnumDecl(void) { this->self = jule::Ref<_1b61ca014_EnumDecl>::make(this, nullptr); }

	inline jule::Bool _method_default_typed(void);


	inline bool operator==(const _1b61ca014_EnumDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_public == _Src._field_public &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind &&
			this->_field_items == _Src._field_items &&
			this->_field_doc_comments == _Src._field_doc_comments;
	}

	inline bool operator!=(const _1b61ca014_EnumDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1b61ca014_FieldDecl {
	jule::Ref<_1b61ca014_FieldDecl> self{};

	_1b61ec5ec_Token _field_token{_1b61ec5ec_Token()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_1b61ca014_TypeDecl> _field_kind{jule::Ref<_1b61ca014_TypeDecl>()};


	_1b61ca014_FieldDecl(_1b61ec5ec_Token __param_token, jule::Bool __param_public, jule::Bool __param_mutable, jule::Str __param_ident, jule::Ref<_1b61ca014_TypeDecl> __param_kind) {
		this->self = jule::Ref<_1b61ca014_FieldDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_public = __param_public;
		this->_field_mutable = __param_mutable;
		this->_field_ident = __param_ident;
		this->_field_kind = __param_kind;
	}

	~_1b61ca014_FieldDecl(void) { this->self.ref = nullptr; }

	_1b61ca014_FieldDecl(void) { this->self = jule::Ref<_1b61ca014_FieldDecl>::make(this, nullptr); }

	inline bool operator==(const _1b61ca014_FieldDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_public == _Src._field_public &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1b61ca014_FieldDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1b61ca014_StructDecl {
	jule::Ref<_1b61ca014_StructDecl> self{};

	_1b61ec5ec_Token _field_token{_1b61ec5ec_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Slice<jule::Ref<_1b61ca014_FieldDecl>> _field_fields{jule::Slice<jule::Ref<_1b61ca014_FieldDecl>>()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Slice<jule::Ref<_1b61ca014_Directive>> _field_directives{jule::Slice<jule::Ref<_1b61ca014_Directive>>()};
	jule::Ref<_1b61ca014_CommentGroup> _field_doc_comments{jule::Ref<_1b61ca014_CommentGroup>()};
	jule::Slice<jule::Ref<_1b61ca014_GenericDecl>> _field_generics{jule::Slice<jule::Ref<_1b61ca014_GenericDecl>>()};


	_1b61ca014_StructDecl(_1b61ec5ec_Token __param_token, jule::Str __param_ident, jule::Slice<jule::Ref<_1b61ca014_FieldDecl>> __param_fields, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Slice<jule::Ref<_1b61ca014_Directive>> __param_directives, jule::Ref<_1b61ca014_CommentGroup> __param_doc_comments, jule::Slice<jule::Ref<_1b61ca014_GenericDecl>> __param_generics) {
		this->self = jule::Ref<_1b61ca014_StructDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_fields = __param_fields;
		this->_field_public = __param_public;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_directives = __param_directives;
		this->_field_doc_comments = __param_doc_comments;
		this->_field_generics = __param_generics;
	}

	~_1b61ca014_StructDecl(void) { this->self.ref = nullptr; }

	_1b61ca014_StructDecl(void) { this->self = jule::Ref<_1b61ca014_StructDecl>::make(this, nullptr); }

	inline bool operator==(const _1b61ca014_StructDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_fields == _Src._field_fields &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc_comments == _Src._field_doc_comments &&
			this->_field_generics == _Src._field_generics;
	}

	inline bool operator!=(const _1b61ca014_StructDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1b61ca014_TraitDecl {
	jule::Ref<_1b61ca014_TraitDecl> self{};

	_1b61ec5ec_Token _field_token{_1b61ec5ec_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_public{jule::Bool()};
	jule::Ref<_1b61ca014_CommentGroup> _field_doc_comments{jule::Ref<_1b61ca014_CommentGroup>()};
	jule::Slice<jule::Ref<_1b61ca014_FnDecl>> _field_methods{jule::Slice<jule::Ref<_1b61ca014_FnDecl>>()};


	_1b61ca014_TraitDecl(_1b61ec5ec_Token __param_token, jule::Str __param_ident, jule::Bool __param_public, jule::Ref<_1b61ca014_CommentGroup> __param_doc_comments, jule::Slice<jule::Ref<_1b61ca014_FnDecl>> __param_methods) {
		this->self = jule::Ref<_1b61ca014_TraitDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_public = __param_public;
		this->_field_doc_comments = __param_doc_comments;
		this->_field_methods = __param_methods;
	}

	~_1b61ca014_TraitDecl(void) { this->self.ref = nullptr; }

	_1b61ca014_TraitDecl(void) { this->self = jule::Ref<_1b61ca014_TraitDecl>::make(this, nullptr); }

	inline bool operator==(const _1b61ca014_TraitDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_public == _Src._field_public &&
			this->_field_doc_comments == _Src._field_doc_comments &&
			this->_field_methods == _Src._field_methods;
	}

	inline bool operator!=(const _1b61ca014_TraitDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1b61ca014_Impl {
	jule::Ref<_1b61ca014_Impl> self{};

	_1b61ec5ec_Token _field_base{_1b61ec5ec_Token()};
	_1b61ec5ec_Token _field_dest{_1b61ec5ec_Token()};
	jule::Slice<jule::Ref<_1b61ca014_FnDecl>> _field_methods{jule::Slice<jule::Ref<_1b61ca014_FnDecl>>()};


	_1b61ca014_Impl(_1b61ec5ec_Token __param_base, _1b61ec5ec_Token __param_dest, jule::Slice<jule::Ref<_1b61ca014_FnDecl>> __param_methods) {
		this->self = jule::Ref<_1b61ca014_Impl>::make(this, nullptr);

		this->_field_base = __param_base;
		this->_field_dest = __param_dest;
		this->_field_methods = __param_methods;
	}

	~_1b61ca014_Impl(void) { this->self.ref = nullptr; }

	_1b61ca014_Impl(void) { this->self = jule::Ref<_1b61ca014_Impl>::make(this, nullptr); }

	inline jule::Bool _method_is_trait_impl(void);


	inline jule::Bool _method_is_struct_impl(void);


	inline bool operator==(const _1b61ca014_Impl &_Src) const {
		return 
			this->_field_base == _Src._field_base &&
			this->_field_dest == _Src._field_dest &&
			this->_field_methods == _Src._field_methods;
	}

	inline bool operator!=(const _1b61ca014_Impl &_Src) const { return !this->operator==(_Src); }
};


struct _1b61ca014_Expr {
	jule::Ref<_1b61ca014_Expr> self{};

	_1b61ec5ec_Token _field_token{_1b61ec5ec_Token()};
	jule::Any _field_kind{jule::Any()};


	_1b61ca014_Expr(_1b61ec5ec_Token __param_token, jule::Any __param_kind) {
		this->self = jule::Ref<_1b61ca014_Expr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_kind = __param_kind;
	}

	~_1b61ca014_Expr(void) { this->self.ref = nullptr; }

	_1b61ca014_Expr(void) { this->self = jule::Ref<_1b61ca014_Expr>::make(this, nullptr); }

	inline jule::Bool _method_is_fn_call(void);


	inline bool operator==(const _1b61ca014_Expr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1b61ca014_Expr &_Src) const { return !this->operator==(_Src); }
};


struct _1b61ca014_TypeDecl {
	jule::Ref<_1b61ca014_TypeDecl> self{};

	_1b61ec5ec_Token _field_token{_1b61ec5ec_Token()};
	jule::Any _field_kind{jule::Any()};


	_1b61ca014_TypeDecl(_1b61ec5ec_Token __param_token, jule::Any __param_kind) {
		this->self = jule::Ref<_1b61ca014_TypeDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_kind = __param_kind;
	}

	~_1b61ca014_TypeDecl(void) { this->self.ref = nullptr; }

	_1b61ca014_TypeDecl(void) { this->self = jule::Ref<_1b61ca014_TypeDecl>::make(this, nullptr); }

	inline bool operator==(const _1b61ca014_TypeDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1b61ca014_TypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1a9e07148_AssignInfo {
	jule::Ref<_1a9e07148_AssignInfo> self{};

	jule::Slice<_1b61ec5ec_Token> _field_l{jule::Slice<_1b61ec5ec_Token>()};
	jule::Slice<_1b61ec5ec_Token> _field_r{jule::Slice<_1b61ec5ec_Token>()};
	_1b61ec5ec_Token _field_setter{_1b61ec5ec_Token()};
	jule::Bool _field_ok{jule::Bool()};


	_1a9e07148_AssignInfo(jule::Slice<_1b61ec5ec_Token> __param_l, jule::Slice<_1b61ec5ec_Token> __param_r, _1b61ec5ec_Token __param_setter, jule::Bool __param_ok) {
		this->self = jule::Ref<_1a9e07148_AssignInfo>::make(this, nullptr);

		this->_field_l = __param_l;
		this->_field_r = __param_r;
		this->_field_setter = __param_setter;
		this->_field_ok = __param_ok;
	}

	~_1a9e07148_AssignInfo(void) { this->self.ref = nullptr; }

	_1a9e07148_AssignInfo(void) { this->self = jule::Ref<_1a9e07148_AssignInfo>::make(this, nullptr); }

	inline bool operator==(const _1a9e07148_AssignInfo &_Src) const {
		return 
			this->_field_l == _Src._field_l &&
			this->_field_r == _Src._field_r &&
			this->_field_setter == _Src._field_setter &&
			this->_field_ok == _Src._field_ok;
	}

	inline bool operator!=(const _1a9e07148_AssignInfo &_Src) const { return !this->operator==(_Src); }
};


struct _1b61ca014_IdentTypeDecl {
	jule::Ref<_1b61ca014_IdentTypeDecl> self{};

	_1b61ec5ec_Token _field_token{_1b61ec5ec_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Slice<jule::Ref<_1b61ca014_TypeDecl>> _field_generics{jule::Slice<jule::Ref<_1b61ca014_TypeDecl>>()};


	_1b61ca014_IdentTypeDecl(_1b61ec5ec_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked, jule::Slice<jule::Ref<_1b61ca014_TypeDecl>> __param_generics) {
		this->self = jule::Ref<_1b61ca014_IdentTypeDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_generics = __param_generics;
	}

	~_1b61ca014_IdentTypeDecl(void) { this->self.ref = nullptr; }

	_1b61ca014_IdentTypeDecl(void) { this->self = jule::Ref<_1b61ca014_IdentTypeDecl>::make(this, nullptr); }

	inline jule::Bool _method_is_prim(void);


	inline bool operator==(const _1b61ca014_IdentTypeDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_generics == _Src._field_generics;
	}

	inline bool operator!=(const _1b61ca014_IdentTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1b61ca014_FnCallExpr {
	jule::Ref<_1b61ca014_FnCallExpr> self{};

	_1b61ec5ec_Token _field_token{_1b61ec5ec_Token()};
	jule::Ref<_1b61ca014_Expr> _field_expr{jule::Ref<_1b61ca014_Expr>()};
	jule::Slice<jule::Ref<_1b61ca014_TypeDecl>> _field_generics{jule::Slice<jule::Ref<_1b61ca014_TypeDecl>>()};
	jule::Slice<jule::Ref<_1b61ca014_Expr>> _field_args{jule::Slice<jule::Ref<_1b61ca014_Expr>>()};
	jule::Bool _field_concurrent{jule::Bool()};


	_1b61ca014_FnCallExpr(_1b61ec5ec_Token __param_token, jule::Ref<_1b61ca014_Expr> __param_expr, jule::Slice<jule::Ref<_1b61ca014_TypeDecl>> __param_generics, jule::Slice<jule::Ref<_1b61ca014_Expr>> __param_args, jule::Bool __param_concurrent) {
		this->self = jule::Ref<_1b61ca014_FnCallExpr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_expr = __param_expr;
		this->_field_generics = __param_generics;
		this->_field_args = __param_args;
		this->_field_concurrent = __param_concurrent;
	}

	~_1b61ca014_FnCallExpr(void) { this->self.ref = nullptr; }

	_1b61ca014_FnCallExpr(void) { this->self = jule::Ref<_1b61ca014_FnCallExpr>::make(this, nullptr); }

	inline bool operator==(const _1b61ca014_FnCallExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_generics == _Src._field_generics &&
			this->_field_args == _Src._field_args &&
			this->_field_concurrent == _Src._field_concurrent;
	}

	inline bool operator!=(const _1b61ca014_FnCallExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1b5e07a00_Field {
	jule::Ref<_1b5e07a00_Field> self{};

	jule::Ref<_1b5e07a00_Struct> _field_owner{jule::Ref<_1b5e07a00_Struct>()};
	_1b61ec5ec_Token _field_token{_1b61ec5ec_Token()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_1ac6d02c0_TypeSymbol> _field_kind{jule::Ref<_1ac6d02c0_TypeSymbol>()};


	_1b5e07a00_Field(jule::Ref<_1b5e07a00_Struct> __param_owner, _1b61ec5ec_Token __param_token, jule::Bool __param_public, jule::Bool __param_mutable, jule::Str __param_ident, jule::Ref<_1ac6d02c0_TypeSymbol> __param_kind) {
		this->self = jule::Ref<_1b5e07a00_Field>::make(this, nullptr);

		this->_field_owner = __param_owner;
		this->_field_token = __param_token;
		this->_field_public = __param_public;
		this->_field_mutable = __param_mutable;
		this->_field_ident = __param_ident;
		this->_field_kind = __param_kind;
	}

	~_1b5e07a00_Field(void) { this->self.ref = nullptr; }

	_1b5e07a00_Field(void) { this->self = jule::Ref<_1b5e07a00_Field>::make(this, nullptr); }

	inline jule::Ref<_1b5e07a00_FieldIns> _method_instance(void);


	inline bool operator==(const _1b5e07a00_Field &_Src) const {
		return 
			this->_field_owner == _Src._field_owner &&
			this->_field_token == _Src._field_token &&
			this->_field_public == _Src._field_public &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1b5e07a00_Field &_Src) const { return !this->operator==(_Src); }
};


struct _1b5e07a00_Struct {
	jule::Ref<_1b5e07a00_Struct> self{};

	jule::Ref<_1ab195050_Sema> _field_sema{jule::Ref<_1ab195050_Sema>()};
	jule::Slice<jule::Ref<_1b5e07a00_Struct>> _field_depends{jule::Slice<jule::Ref<_1b5e07a00_Struct>>()};
	jule::Slice<jule::Ref<_1b5e07a00_Struct>> _field_uses{jule::Slice<jule::Ref<_1b5e07a00_Struct>>()};
	_1b61ec5ec_Token _field_token{_1b61ec5ec_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Slice<jule::Ref<_1b5e07a00_Field>> _field_fields{jule::Slice<jule::Ref<_1b5e07a00_Field>>()};
	jule::Slice<jule::Ref<_1b557cd24_Fn>> _field_methods{jule::Slice<jule::Ref<_1b557cd24_Fn>>()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Slice<jule::Ref<_1b61ca014_Directive>> _field_directives{jule::Slice<jule::Ref<_1b61ca014_Directive>>()};
	jule::Str _field_doc{jule::Str()};
	jule::Slice<jule::Ref<_1b61ca014_GenericDecl>> _field_generics{jule::Slice<jule::Ref<_1b61ca014_GenericDecl>>()};
	jule::Slice<jule::Ref<_1aaee9091_Trait>> _field_implements{jule::Slice<jule::Ref<_1aaee9091_Trait>>()};
	jule::Slice<jule::Ref<_1b5e07a00_StructIns>> _field_instances{jule::Slice<jule::Ref<_1b5e07a00_StructIns>>()};


	_1b5e07a00_Struct(jule::Ref<_1ab195050_Sema> __param_sema, jule::Slice<jule::Ref<_1b5e07a00_Struct>> __param_depends, jule::Slice<jule::Ref<_1b5e07a00_Struct>> __param_uses, _1b61ec5ec_Token __param_token, jule::Str __param_ident, jule::Slice<jule::Ref<_1b5e07a00_Field>> __param_fields, jule::Slice<jule::Ref<_1b557cd24_Fn>> __param_methods, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Slice<jule::Ref<_1b61ca014_Directive>> __param_directives, jule::Str __param_doc, jule::Slice<jule::Ref<_1b61ca014_GenericDecl>> __param_generics, jule::Slice<jule::Ref<_1aaee9091_Trait>> __param_implements, jule::Slice<jule::Ref<_1b5e07a00_StructIns>> __param_instances) {
		this->self = jule::Ref<_1b5e07a00_Struct>::make(this, nullptr);

		this->_field_sema = __param_sema;
		this->_field_depends = __param_depends;
		this->_field_uses = __param_uses;
		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_fields = __param_fields;
		this->_field_methods = __param_methods;
		this->_field_public = __param_public;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_directives = __param_directives;
		this->_field_doc = __param_doc;
		this->_field_generics = __param_generics;
		this->_field_implements = __param_implements;
		this->_field_instances = __param_instances;
	}

	~_1b5e07a00_Struct(void) { this->self.ref = nullptr; }

	_1b5e07a00_Struct(void) { this->self = jule::Ref<_1b5e07a00_Struct>::make(this, nullptr); }

	inline jule::Ref<_1b5e07a00_StructIns> _method_instance(void);


	inline jule::Ref<_1b5e07a00_StructIns> _method_append_instance(jule::Ref<_1b5e07a00_StructIns>&);


	inline jule::Ref<_1b557cd24_Fn> _method_find_method(jule::Str,jule::Bool);


	inline jule::Ref<_1b5e07a00_Field> _method_find_field(jule::Str);


	inline jule::Bool _method_is_implements(jule::Ref<_1aaee9091_Trait>);


	inline jule::Bool _method_is_derives(jule::Str);


	inline jule::Bool _method_is_uses(jule::Ref<_1b5e07a00_Struct>);


	inline bool operator==(const _1b5e07a00_Struct &_Src) const {
		return 
			this->_field_sema == _Src._field_sema &&
			this->_field_depends == _Src._field_depends &&
			this->_field_uses == _Src._field_uses &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_fields == _Src._field_fields &&
			this->_field_methods == _Src._field_methods &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc == _Src._field_doc &&
			this->_field_generics == _Src._field_generics &&
			this->_field_implements == _Src._field_implements &&
			this->_field_instances == _Src._field_instances;
	}

	inline bool operator!=(const _1b5e07a00_Struct &_Src) const { return !this->operator==(_Src); }
};


struct _1b61ca014_Node {
	jule::Ref<_1b61ca014_Node> self{};

	_1b61ec5ec_Token _field_token{_1b61ec5ec_Token()};
	jule::Any _field_data{jule::Any()};


	_1b61ca014_Node(_1b61ec5ec_Token __param_token, jule::Any __param_data) {
		this->self = jule::Ref<_1b61ca014_Node>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_data = __param_data;
	}

	~_1b61ca014_Node(void) { this->self.ref = nullptr; }

	_1b61ca014_Node(void) { this->self = jule::Ref<_1b61ca014_Node>::make(this, nullptr); }

	inline jule::Bool _method_is_decl(void);


	inline jule::Bool _method_is_comment(void);


	inline jule::Bool _method_is_impl(void);


	inline jule::Bool _method_is_use_decl(void);


	inline bool operator==(const _1b61ca014_Node &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_data == _Src._field_data;
	}

	inline bool operator!=(const _1b61ca014_Node &_Src) const { return !this->operator==(_Src); }
};


struct _1b557cd24_Param {
	jule::Ref<_1b557cd24_Param> self{};

	_1b61ec5ec_Token _field_token{_1b61ec5ec_Token()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Bool _field_variadic{jule::Bool()};
	jule::Bool _field_reference{jule::Bool()};
	jule::Ref<_1ac6d02c0_TypeSymbol> _field_kind{jule::Ref<_1ac6d02c0_TypeSymbol>()};
	jule::Str _field_ident{jule::Str()};


	_1b557cd24_Param(_1b61ec5ec_Token __param_token, jule::Bool __param_mutable, jule::Bool __param_variadic, jule::Bool __param_reference, jule::Ref<_1ac6d02c0_TypeSymbol> __param_kind, jule::Str __param_ident) {
		this->self = jule::Ref<_1b557cd24_Param>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_mutable = __param_mutable;
		this->_field_variadic = __param_variadic;
		this->_field_reference = __param_reference;
		this->_field_kind = __param_kind;
		this->_field_ident = __param_ident;
	}

	~_1b557cd24_Param(void) { this->self.ref = nullptr; }

	_1b557cd24_Param(void) { this->self = jule::Ref<_1b557cd24_Param>::make(this, nullptr); }

	inline jule::Ref<_1b557cd24_ParamIns> _method_instance(void);


	inline jule::Bool _method_is_self(void);


	inline jule::Bool _method_is_ref(void);


	inline bool operator==(const _1b557cd24_Param &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_variadic == _Src._field_variadic &&
			this->_field_reference == _Src._field_reference &&
			this->_field_kind == _Src._field_kind &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1b557cd24_Param &_Src) const { return !this->operator==(_Src); }
};


struct _1b557cd24_Fn {
	jule::Ref<_1b557cd24_Fn> self{};

	jule::Ref<_1ab195050_Sema> _field_sema{jule::Ref<_1ab195050_Sema>()};
	_1b61ec5ec_Token _field_token{_1b61ec5ec_Token()};
	jule::Bool _field_global{jule::Bool()};
	jule::Bool _field_unsafety{jule::Bool()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_statically{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Slice<jule::Ref<_1b61ca014_Directive>> _field_directives{jule::Slice<jule::Ref<_1b61ca014_Directive>>()};
	jule::Str _field_doc{jule::Str()};
	jule::Ref<_1b61ca014_ScopeTree> _field_scope{jule::Ref<_1b61ca014_ScopeTree>()};
	jule::Slice<jule::Ref<_1b61ca014_GenericDecl>> _field_generics{jule::Slice<jule::Ref<_1b61ca014_GenericDecl>>()};
	jule::Ref<_1b557cd24_RetType> _field_result{jule::Ref<_1b557cd24_RetType>()};
	jule::Slice<jule::Ref<_1b557cd24_Param>> _field_params{jule::Slice<jule::Ref<_1b557cd24_Param>>()};
	jule::Ref<_1b5e07a00_Struct> _field_owner{jule::Ref<_1b5e07a00_Struct>()};
	jule::Slice<jule::Ref<_1b557cd24_FnIns>> _field_instances{jule::Slice<jule::Ref<_1b557cd24_FnIns>>()};


	_1b557cd24_Fn(jule::Ref<_1ab195050_Sema> __param_sema, _1b61ec5ec_Token __param_token, jule::Bool __param_global, jule::Bool __param_unsafety, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Bool __param_statically, jule::Str __param_ident, jule::Slice<jule::Ref<_1b61ca014_Directive>> __param_directives, jule::Str __param_doc, jule::Ref<_1b61ca014_ScopeTree> __param_scope, jule::Slice<jule::Ref<_1b61ca014_GenericDecl>> __param_generics, jule::Ref<_1b557cd24_RetType> __param_result, jule::Slice<jule::Ref<_1b557cd24_Param>> __param_params, jule::Ref<_1b5e07a00_Struct> __param_owner, jule::Slice<jule::Ref<_1b557cd24_FnIns>> __param_instances) {
		this->self = jule::Ref<_1b557cd24_Fn>::make(this, nullptr);

		this->_field_sema = __param_sema;
		this->_field_token = __param_token;
		this->_field_global = __param_global;
		this->_field_unsafety = __param_unsafety;
		this->_field_public = __param_public;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_statically = __param_statically;
		this->_field_ident = __param_ident;
		this->_field_directives = __param_directives;
		this->_field_doc = __param_doc;
		this->_field_scope = __param_scope;
		this->_field_generics = __param_generics;
		this->_field_result = __param_result;
		this->_field_params = __param_params;
		this->_field_owner = __param_owner;
		this->_field_instances = __param_instances;
	}

	~_1b557cd24_Fn(void) { this->self.ref = nullptr; }

	_1b557cd24_Fn(void) { this->self = jule::Ref<_1b557cd24_Fn>::make(this, nullptr); }

	inline jule::Bool _method_is_void(void);


	inline jule::Bool _method_is_method(void);


	inline jule::Bool _method_is_entry_point(void);


	inline jule::Bool _method_is_init(void);


	inline jule::Bool _method_is_anon(void);


	inline jule::Bool _method_any_var(void);


	inline jule::Bool _method_parameters_uses_generics(void);


	inline jule::Bool _method_result_uses_generics(void);


	inline jule::Ref<_1b557cd24_FnIns> _method_instance_force(void);


	inline jule::Ref<_1b557cd24_FnIns> _method_instance(void);


	inline std::tuple<jule::Bool,jule::Int> _method_append_instance(jule::Ref<_1b557cd24_FnIns>&);


	inline bool operator==(const _1b557cd24_Fn &_Src) const {
		return 
			this->_field_sema == _Src._field_sema &&
			this->_field_token == _Src._field_token &&
			this->_field_global == _Src._field_global &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_statically == _Src._field_statically &&
			this->_field_ident == _Src._field_ident &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc == _Src._field_doc &&
			this->_field_scope == _Src._field_scope &&
			this->_field_generics == _Src._field_generics &&
			this->_field_result == _Src._field_result &&
			this->_field_params == _Src._field_params &&
			this->_field_owner == _Src._field_owner &&
			this->_field_instances == _Src._field_instances;
	}

	inline bool operator!=(const _1b557cd24_Fn &_Src) const { return !this->operator==(_Src); }
};


struct _1b5589c76_Pass {
	jule::Ref<_1b5589c76_Pass> self{};

	_1b61ec5ec_Token _field_token{_1b61ec5ec_Token()};
	jule::Str _field_text{jule::Str()};


	_1b5589c76_Pass(_1b61ec5ec_Token __param_token, jule::Str __param_text) {
		this->self = jule::Ref<_1b5589c76_Pass>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_text = __param_text;
	}

	~_1b5589c76_Pass(void) { this->self.ref = nullptr; }

	_1b5589c76_Pass(void) { this->self = jule::Ref<_1b5589c76_Pass>::make(this, nullptr); }

	inline bool operator==(const _1b5589c76_Pass &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_text == _Src._field_text;
	}

	inline bool operator!=(const _1b5589c76_Pass &_Src) const { return !this->operator==(_Src); }
};


struct _1aaee9091_Trait: public _1ac6d02c0_Kind {
	jule::Ref<_1aaee9091_Trait> self{};

	_1b61ec5ec_Token _field_token{_1b61ec5ec_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Str _field_doc{jule::Str()};
	jule::Slice<jule::Ref<_1b557cd24_Fn>> _field_methods{jule::Slice<jule::Ref<_1b557cd24_Fn>>()};
	jule::Slice<jule::Ref<_1b5e07a00_Struct>> _field_implemented{jule::Slice<jule::Ref<_1b5e07a00_Struct>>()};


	_1aaee9091_Trait(_1b61ec5ec_Token __param_token, jule::Str __param_ident, jule::Bool __param_public, jule::Bool __param_mutable, jule::Str __param_doc, jule::Slice<jule::Ref<_1b557cd24_Fn>> __param_methods, jule::Slice<jule::Ref<_1b5e07a00_Struct>> __param_implemented) {
		this->self = jule::Ref<_1aaee9091_Trait>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_public = __param_public;
		this->_field_mutable = __param_mutable;
		this->_field_doc = __param_doc;
		this->_field_methods = __param_methods;
		this->_field_implemented = __param_implemented;
	}

	~_1aaee9091_Trait(void) { this->self.ref = nullptr; }

	_1aaee9091_Trait(void) { this->self = jule::Ref<_1aaee9091_Trait>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1ac6d02c0_TypeKind>);


	inline jule::Bool _method_is_builtin(void);


	inline jule::Ref<_1b557cd24_Fn> _method_find_method(jule::Str);


	inline bool operator==(const _1aaee9091_Trait &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_public == _Src._field_public &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_doc == _Src._field_doc &&
			this->_field_methods == _Src._field_methods &&
			this->_field_implemented == _Src._field_implemented;
	}

	inline bool operator!=(const _1aaee9091_Trait &_Src) const { return !this->operator==(_Src); }
};


struct _1a909ac6b_EnumItem {
	jule::Ref<_1a909ac6b_EnumItem> self{};

	_1b61ec5ec_Token _field_token{_1b61ec5ec_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_1ab00dbcc_Value> _field_value{jule::Ref<_1ab00dbcc_Value>()};


	_1a909ac6b_EnumItem(_1b61ec5ec_Token __param_token, jule::Str __param_ident, jule::Ref<_1ab00dbcc_Value> __param_value) {
		this->self = jule::Ref<_1a909ac6b_EnumItem>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_value = __param_value;
	}

	~_1a909ac6b_EnumItem(void) { this->self.ref = nullptr; }

	_1a909ac6b_EnumItem(void) { this->self = jule::Ref<_1a909ac6b_EnumItem>::make(this, nullptr); }

	inline jule::Bool _method_auto_expr(void);


	inline bool operator==(const _1a909ac6b_EnumItem &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_value == _Src._field_value;
	}

	inline bool operator!=(const _1a909ac6b_EnumItem &_Src) const { return !this->operator==(_Src); }
};


struct _1a909ac6b_Enum: public _1ac6d02c0_Kind {
	jule::Ref<_1a909ac6b_Enum> self{};

	_1b61ec5ec_Token _field_token{_1b61ec5ec_Token()};
	jule::Bool _field_public{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_1ac6d02c0_TypeSymbol> _field_kind{jule::Ref<_1ac6d02c0_TypeSymbol>()};
	jule::Slice<jule::Ref<_1a909ac6b_EnumItem>> _field_items{jule::Slice<jule::Ref<_1a909ac6b_EnumItem>>()};
	jule::Str _field_doc{jule::Str()};


	_1a909ac6b_Enum(_1b61ec5ec_Token __param_token, jule::Bool __param_public, jule::Str __param_ident, jule::Ref<_1ac6d02c0_TypeSymbol> __param_kind, jule::Slice<jule::Ref<_1a909ac6b_EnumItem>> __param_items, jule::Str __param_doc) {
		this->self = jule::Ref<_1a909ac6b_Enum>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_public = __param_public;
		this->_field_ident = __param_ident;
		this->_field_kind = __param_kind;
		this->_field_items = __param_items;
		this->_field_doc = __param_doc;
	}

	~_1a909ac6b_Enum(void) { this->self.ref = nullptr; }

	_1a909ac6b_Enum(void) { this->self = jule::Ref<_1a909ac6b_Enum>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1ac6d02c0_TypeKind>);


	inline jule::Ref<_1a909ac6b_EnumItem> _method_find_item(jule::Str);


	inline bool operator==(const _1a909ac6b_Enum &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_public == _Src._field_public &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind &&
			this->_field_items == _Src._field_items &&
			this->_field_doc == _Src._field_doc;
	}

	inline bool operator!=(const _1a909ac6b_Enum &_Src) const { return !this->operator==(_Src); }
};


struct _1ab194c20_ImportInfo: public _1aae290e2_Lookup {
	jule::Ref<_1ab194c20_ImportInfo> self{};

	_1b61ec5ec_Token _field_token{_1b61ec5ec_Token()};
	jule::Str _field_path{jule::Str()};
	jule::Str _field_link_path{jule::Str()};
	jule::Str _field_ident{jule::Str()};
	jule::Str _field_alias{jule::Str()};
	jule::Bool _field_duplicate{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_std{jule::Bool()};
	jule::Bool _field_import_all{jule::Bool()};
	jule::Slice<_1b61ec5ec_Token> _field_selected{jule::Slice<_1b61ec5ec_Token>()};
	jule::Ref<_1ab194c20_Package> _field_package{jule::Ref<_1ab194c20_Package>()};


	_1ab194c20_ImportInfo(_1b61ec5ec_Token __param_token, jule::Str __param_path, jule::Str __param_link_path, jule::Str __param_ident, jule::Str __param_alias, jule::Bool __param_duplicate, jule::Bool __param_cpp_linked, jule::Bool __param_std, jule::Bool __param_import_all, jule::Slice<_1b61ec5ec_Token> __param_selected, jule::Ref<_1ab194c20_Package> __param_package) {
		this->self = jule::Ref<_1ab194c20_ImportInfo>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_path = __param_path;
		this->_field_link_path = __param_link_path;
		this->_field_ident = __param_ident;
		this->_field_alias = __param_alias;
		this->_field_duplicate = __param_duplicate;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_std = __param_std;
		this->_field_import_all = __param_import_all;
		this->_field_selected = __param_selected;
		this->_field_package = __param_package;
	}

	~_1ab194c20_ImportInfo(void) { this->self.ref = nullptr; }

	_1ab194c20_ImportInfo(void) { this->self = jule::Ref<_1ab194c20_ImportInfo>::make(this, nullptr); }

	inline jule::Ref<_1ab194c20_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ref<_1ab194c20_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ref<_1ab194c20_ImportInfo>)>);


	inline jule::Ref<_1b623eab2_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ref<_1ac6d02c0_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ref<_1b5e07a00_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ref<_1b557cd24_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ref<_1aaee9091_Trait> _method_find_trait(jule::Str);


	inline jule::Ref<_1a909ac6b_Enum> _method_find_enum(jule::Str);


	inline jule::Bool _method_is_lookupable(jule::Str);


	inline jule::Bool _method_exist_ident(jule::Str);


	inline bool operator==(const _1ab194c20_ImportInfo &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_path == _Src._field_path &&
			this->_field_link_path == _Src._field_link_path &&
			this->_field_ident == _Src._field_ident &&
			this->_field_alias == _Src._field_alias &&
			this->_field_duplicate == _Src._field_duplicate &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_std == _Src._field_std &&
			this->_field_import_all == _Src._field_import_all &&
			this->_field_selected == _Src._field_selected &&
			this->_field_package == _Src._field_package;
	}

	inline bool operator!=(const _1ab194c20_ImportInfo &_Src) const { return !this->operator==(_Src); }
};


struct _1ab0017b3_Impl {
	jule::Ref<_1ab0017b3_Impl> self{};

	_1b61ec5ec_Token _field_base{_1b61ec5ec_Token()};
	_1b61ec5ec_Token _field_dest{_1b61ec5ec_Token()};
	jule::Slice<jule::Ref<_1b557cd24_Fn>> _field_methods{jule::Slice<jule::Ref<_1b557cd24_Fn>>()};


	_1ab0017b3_Impl(_1b61ec5ec_Token __param_base, _1b61ec5ec_Token __param_dest, jule::Slice<jule::Ref<_1b557cd24_Fn>> __param_methods) {
		this->self = jule::Ref<_1ab0017b3_Impl>::make(this, nullptr);

		this->_field_base = __param_base;
		this->_field_dest = __param_dest;
		this->_field_methods = __param_methods;
	}

	~_1ab0017b3_Impl(void) { this->self.ref = nullptr; }

	_1ab0017b3_Impl(void) { this->self = jule::Ref<_1ab0017b3_Impl>::make(this, nullptr); }

	inline jule::Bool _method_is_trait_impl(void);


	inline jule::Bool _method_is_struct_impl(void);


	inline bool operator==(const _1ab0017b3_Impl &_Src) const {
		return 
			this->_field_base == _Src._field_base &&
			this->_field_dest == _Src._field_dest &&
			this->_field_methods == _Src._field_methods;
	}

	inline bool operator!=(const _1ab0017b3_Impl &_Src) const { return !this->operator==(_Src); }
};


struct _1b623eab2_Var {
	jule::Ref<_1b623eab2_Var> self{};

	jule::Ref<_1ab009de8_Scope> _field_scope{jule::Ref<_1ab009de8_Scope>()};
	_1b61ec5ec_Token _field_token{_1b61ec5ec_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_constant{jule::Bool()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_used{jule::Bool()};
	jule::Bool _field_statically{jule::Bool()};
	jule::Bool _field_reference{jule::Bool()};
	jule::Str _field_doc{jule::Str()};
	jule::Ref<_1ac6d02c0_TypeSymbol> _field_kind{jule::Ref<_1ac6d02c0_TypeSymbol>()};
	jule::Ref<_1ab00dbcc_Value> _field_value{jule::Ref<_1ab00dbcc_Value>()};
	jule::Ref<_1b5589c76_ReferenceStack> _field_references{jule::Ref<_1b5589c76_ReferenceStack>()};
	jule::Slice<jule::Ref<_1b61ca014_Directive>> _field_directives{jule::Slice<jule::Ref<_1b61ca014_Directive>>()};
	jule::Slice<jule::Ref<_1b623eab2_Var>> _field_depends{jule::Slice<jule::Ref<_1b623eab2_Var>>()};


	_1b623eab2_Var(jule::Ref<_1ab009de8_Scope> __param_scope, _1b61ec5ec_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked, jule::Bool __param_constant, jule::Bool __param_mutable, jule::Bool __param_public, jule::Bool __param_used, jule::Bool __param_statically, jule::Bool __param_reference, jule::Str __param_doc, jule::Ref<_1ac6d02c0_TypeSymbol> __param_kind, jule::Ref<_1ab00dbcc_Value> __param_value, jule::Ref<_1b5589c76_ReferenceStack> __param_references, jule::Slice<jule::Ref<_1b61ca014_Directive>> __param_directives, jule::Slice<jule::Ref<_1b623eab2_Var>> __param_depends) {
		this->self = jule::Ref<_1b623eab2_Var>::make(this, nullptr);

		this->_field_scope = __param_scope;
		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_constant = __param_constant;
		this->_field_mutable = __param_mutable;
		this->_field_public = __param_public;
		this->_field_used = __param_used;
		this->_field_statically = __param_statically;
		this->_field_reference = __param_reference;
		this->_field_doc = __param_doc;
		this->_field_kind = __param_kind;
		this->_field_value = __param_value;
		this->_field_references = __param_references;
		this->_field_directives = __param_directives;
		this->_field_depends = __param_depends;
	}

	~_1b623eab2_Var(void) { this->self.ref = nullptr; }

	_1b623eab2_Var(void) { this->self = jule::Ref<_1b623eab2_Var>::make(this, nullptr); }

	inline jule::Bool _method_is_initialized(void);


	inline jule::Bool _method_is_type_inferred(void);


	inline bool operator==(const _1b623eab2_Var &_Src) const {
		return 
			this->_field_scope == _Src._field_scope &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_constant == _Src._field_constant &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_public == _Src._field_public &&
			this->_field_used == _Src._field_used &&
			this->_field_statically == _Src._field_statically &&
			this->_field_reference == _Src._field_reference &&
			this->_field_doc == _Src._field_doc &&
			this->_field_kind == _Src._field_kind &&
			this->_field_value == _Src._field_value &&
			this->_field_references == _Src._field_references &&
			this->_field_directives == _Src._field_directives &&
			this->_field_depends == _Src._field_depends;
	}

	inline bool operator!=(const _1b623eab2_Var &_Src) const { return !this->operator==(_Src); }
};


struct _1a8dc912c_TypeCompatibilityChecker {
	jule::Ref<_1a8dc912c_TypeCompatibilityChecker> self{};

	jule::Ref<_1ab195050_Sema> _field_s{jule::Ref<_1ab195050_Sema>()};
	jule::Ref<_1ac6d02c0_TypeKind> _field_dest{jule::Ref<_1ac6d02c0_TypeKind>()};
	jule::Ref<_1ac6d02c0_TypeKind> _field_src{jule::Ref<_1ac6d02c0_TypeKind>()};
	_1b61ec5ec_Token _field_error_token{_1b61ec5ec_Token()};
	jule::Bool _field_ignore_any{jule::Bool()};
	jule::Bool _field_deref{jule::Bool()};
	jule::Bool _field_sub_check{jule::Bool()};


	_1a8dc912c_TypeCompatibilityChecker(jule::Ref<_1ab195050_Sema> __param_s, jule::Ref<_1ac6d02c0_TypeKind> __param_dest, jule::Ref<_1ac6d02c0_TypeKind> __param_src, _1b61ec5ec_Token __param_error_token, jule::Bool __param_ignore_any, jule::Bool __param_deref, jule::Bool __param_sub_check) {
		this->self = jule::Ref<_1a8dc912c_TypeCompatibilityChecker>::make(this, nullptr);

		this->_field_s = __param_s;
		this->_field_dest = __param_dest;
		this->_field_src = __param_src;
		this->_field_error_token = __param_error_token;
		this->_field_ignore_any = __param_ignore_any;
		this->_field_deref = __param_deref;
		this->_field_sub_check = __param_sub_check;
	}

	~_1a8dc912c_TypeCompatibilityChecker(void) { this->self.ref = nullptr; }

	_1a8dc912c_TypeCompatibilityChecker(void) { this->self = jule::Ref<_1a8dc912c_TypeCompatibilityChecker>::make(this, nullptr); }

	inline void _method_push_err(jule::Str,jule::Slice<jule::Any>);


	inline jule::Bool _method_check_trait(void);


	inline jule::Bool _method_check_ref(void);


	inline jule::Bool _method_check_ptr(void);


	inline jule::Bool _method_check_slc(void);


	inline jule::Bool _method_check_arr(void);


	inline jule::Bool _method_check_map(void);


	inline jule::Bool _method_check_struct(void);


	inline jule::Bool _method_check_fn(void);


	inline jule::Bool _method_check_enum(void);


	inline jule::Bool _method_check_prim(void);


	inline jule::Bool _method_check_cpp_linked(void);


	inline jule::Bool _method_check(void);


	inline bool operator==(const _1a8dc912c_TypeCompatibilityChecker &_Src) const {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_dest == _Src._field_dest &&
			this->_field_src == _Src._field_src &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_ignore_any == _Src._field_ignore_any &&
			this->_field_deref == _Src._field_deref &&
			this->_field_sub_check == _Src._field_sub_check;
	}

	inline bool operator!=(const _1a8dc912c_TypeCompatibilityChecker &_Src) const { return !this->operator==(_Src); }
};


inline jule::Bool _1b55d918d_is_surrogate(jule::I32);
inline jule::I32 _1b55d918d_decode_rune(jule::I32,jule::I32);
inline std::tuple<jule::I32,jule::I32> _1b55d918d_encode_rune(jule::I32);
inline jule::Slice<jule::U16> _1b55d918d_encode(jule::Slice<jule::I32>);
inline jule::Slice<jule::I32> _1b55d918d_decode(jule::Slice<jule::U16>);
inline jule::Slice<jule::U16> _1b55d918d_append_rune(jule::Slice<jule::U16>,jule::I32);
inline void* _1cdd8d41d_malloc(jule::Uint);
inline void* _1cdd8d41d_calloc(jule::Uint,jule::Uint);
inline void* _1cdd8d41d_realloc(void*,jule::Uint);
inline void _1cdd8d41d_free(void*);
inline jule::Str _1cde2d667_type_id(jule::Any);
inline jule::Slice<jule::U16> _1cde2d8dc_utf16_from_str(jule::Str);
inline jule::Str _1cde2d8dc_utf16_to_str(jule::Slice<jule::U16>);
inline jule::Str _1cde2d8dc_u16_ptr_to_str(jule::U16*);
inline jule::Str _1cde2d8dc_byte_ptr_to_str(jule::U8*);
inline jule::Int _1cde2d9a8_puts(jule::Str);
inline jule::Int _1cdd76a22_get_last_errno(void);
inline jule::Int _1cdd8e298_stat(jule::U8*,struct stat*);
inline jule::Int _1cdd8e298_open(jule::U8*,jule::Int,jule::Int);
inline jule::U8* _1cdd8e298_getcwd(jule::U8*,jule::Uint);
inline DIR* _1cdd8e298_opendir(jule::U8*);
inline struct dirent* _1cdd8e298_readdir(DIR*);
inline jule::Int _1cdd8e298_closedir(DIR*);
inline jule::Int _1cdd8e298_chdir(jule::U8*);
inline jule::Int _1cdd8e298_remove(jule::U8*);
inline jule::Int _1cdd8e298_mkdir(jule::U8*,jule::Int);
inline jule::Int _1cdd8e298_rmdir(jule::U8*);
inline jule::Int _1cdd8e298_unlink(jule::U8*);
inline jule::I64 _1cde0376e_seek(jule::Int,jule::I64,jule::Int);
inline jule::Int _1cde0376e_read(jule::Int,void*,jule::Uint);
inline jule::Int _1cde0376e_close(jule::Int);
inline jule::Int _1cde0376e_write(jule::Int,void*,jule::Uint);
inline void _1cde0376e_exit(jule::Int);
inline jule::Int _1cdd70a3d_get_last_os_error(void);
inline std::tuple<jule::Str,jule::Int> _1cdd79b13_working_dir(void);
inline jule::Int _1cdd79b13_set_working_dir(jule::Str);
inline void _1cdd79b13_init(void);
inline std::tuple<jule::Str,jule::Int> _1cdd71742___getwd(void);
inline jule::Int _1cdd71742___chdir(jule::Str);
inline jule::Str _1cdd187e9_clean(jule::Str);
inline jule::Str _1cdd187e9_to_slash(jule::Str);
inline jule::Str _1cdd187e9_from_slash(jule::Str);
inline jule::Str _1cdd187e9_join(jule::Slice<jule::Str>);
inline jule::Str _1cdd187e9_ext(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _1cdd187e9_abs(jule::Str);
inline jule::Str _1cdd187e9_base(jule::Str);
inline jule::Str _1cdd187e9_dir(jule::Str);
inline jule::Str _1cdd187e9_volume_name(jule::Str);
inline jule::Bool _1cdd112b4_is_path_sep(jule::U8);
inline jule::Bool _1cdd112b4_is_abs(jule::Str);
inline jule::Int _1cdd112b4_volume_name_len(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _1cdd112b4___abs(jule::Str);
inline jule::Str _1cdd112b4_str_join(jule::Slice<jule::Str>,jule::Str);
inline jule::Str _1cdd112b4___join(jule::Slice<jule::Str>);
inline void _1cdd2665e_exit(jule::Int);
inline jule::Str _1cdd2665e_executable(void);
inline jule::Bool _1cdee4c4a_is_std_header_path(jule::Str);
inline jule::Bool _1cdee4c4a_is_valid_header_ext(jule::Str);
inline jule::Bool _1cdee4c4a_is_valid_cpp_ext(jule::Str);
inline jule::Str _1cdeeb191_logf(jule::Str,jule::Slice<jule::Any>);
inline jule::Str _1cdeeb191_arg_to_str(jule::Any);
inline jule::Int _1cdeeb191_find_next_fmt(jule::Str);
inline jule::Str _1cdeeb191_apply_fmt(jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _1ce0019d2_is_top_directive(jule::Str);
inline jule::Bool _1cde73206_is_windows(jule::Str);
inline jule::Bool _1cde73206_is_darwin(jule::Str);
inline jule::Bool _1cde73206_is_linux(jule::Str);
inline jule::Bool _1cde73206_is_i386(jule::Str);
inline jule::Bool _1cde73206_is_amd64(jule::Str);
inline jule::Bool _1cde73206_is_arm64(jule::Str);
inline jule::Bool _1cde73206_is_unix(jule::Str);
inline jule::Bool _1cde73206_is_32bit(jule::Str);
inline jule::Bool _1cde73206_is_64bit(jule::Str);
inline void _1ce0450b9_exit_err(jule::Str);
inline void _1ce0450b9_init(void);
inline jule::Bool _1ce0461b9_is_jule(jule::Str);
inline jule::Int _1b5e977e8_leading_zeros(jule::Uint);
inline jule::Int _1b5e977e8_leading_zeros8(jule::U8);
inline jule::Int _1b5e977e8_leading_zeros16(jule::U16);
inline jule::Int _1b5e977e8_leading_zeros32(jule::U32);
inline jule::Int _1b5e977e8_leading_zeros64(jule::U64);
inline jule::Int _1b5e977e8_trailing_zeros(jule::Uint);
inline jule::Int _1b5e977e8_trailing_zeros8(jule::U8);
inline jule::Int _1b5e977e8_trailing_zeros16(jule::U16);
inline jule::Int _1b5e977e8_trailing_zeros32(jule::U32);
inline jule::Int _1b5e977e8_trailing_zeros64(jule::U64);
inline jule::Int _1b5e977e8_ones_count(jule::Uint);
inline jule::Int _1b5e977e8_ones_count8(jule::U8);
inline jule::Int _1b5e977e8_ones_count16(jule::U16);
inline jule::Int _1b5e977e8_ones_count32(jule::U32);
inline jule::Int _1b5e977e8_ones_count64(jule::U64);
inline jule::Uint _1b5e977e8_rotate_left(jule::Uint,jule::Int);
inline jule::U8 _1b5e977e8_rotate_left8(jule::U8,jule::Int);
inline jule::U16 _1b5e977e8_rotate_left16(jule::U16,jule::Int);
inline jule::U32 _1b5e977e8_rotate_left32(jule::U32,jule::Int);
inline jule::U64 _1b5e977e8_rotate_left64(jule::U64,jule::Int);
inline jule::Uint _1b5e977e8_reverse(jule::Uint);
inline jule::U8 _1b5e977e8_reverse8(jule::U8);
inline jule::U16 _1b5e977e8_reverse16(jule::U16);
inline jule::U32 _1b5e977e8_reverse32(jule::U32);
inline jule::U64 _1b5e977e8_reverse64(jule::U64);
inline jule::Uint _1b5e977e8_reverse_bytes(jule::Uint);
inline jule::U16 _1b5e977e8_reverse_bytes16(jule::U16);
inline jule::U32 _1b5e977e8_reverse_bytes32(jule::U32);
inline jule::U64 _1b5e977e8_reverse_bytes64(jule::U64);
inline jule::Int _1b5e977e8_len(jule::Uint);
inline jule::Int _1b5e977e8_len8(jule::U8);
inline jule::Int _1b5e977e8_len16(jule::U16);
inline jule::Int _1b5e977e8_len32(jule::U32);
inline jule::Int _1b5e977e8_len64(jule::U64);
inline std::tuple<jule::Uint,jule::Uint> _1b5e977e8_add(jule::Uint,jule::Uint,jule::Uint);
inline std::tuple<jule::U32,jule::U32> _1b5e977e8_add32(jule::U32,jule::U32,jule::U32);
inline std::tuple<jule::U64,jule::U64> _1b5e977e8_add64(jule::U64,jule::U64,jule::U64);
inline std::tuple<jule::Uint,jule::Uint> _1b5e977e8_sub(jule::Uint,jule::Uint,jule::Uint);
inline std::tuple<jule::U32,jule::U32> _1b5e977e8_sub32(jule::U32,jule::U32,jule::U32);
inline std::tuple<jule::U64,jule::U64> _1b5e977e8_sub64(jule::U64,jule::U64,jule::U64);
inline std::tuple<jule::Uint,jule::Uint> _1b5e977e8_mul(jule::Uint,jule::Uint);
inline std::tuple<jule::U32,jule::U32> _1b5e977e8_mul32(jule::U32,jule::U32);
inline std::tuple<jule::U64,jule::U64> _1b5e977e8_mul64(jule::U64,jule::U64);
inline std::tuple<jule::Uint,jule::Uint> _1b5e977e8_div(jule::Uint,jule::Uint,jule::Uint);
inline std::tuple<jule::U32,jule::U32> _1b5e977e8_div32(jule::U32,jule::U32,jule::U32);
inline std::tuple<jule::U64,jule::U64> _1b5e977e8_div64(jule::U64,jule::U64,jule::U64);
inline jule::Uint _1b5e977e8_rem(jule::Uint,jule::Uint,jule::Uint);
inline jule::U32 _1b5e977e8_rem32(jule::U32,jule::U32,jule::U32);
inline jule::U64 _1b5e977e8_rem64(jule::U64,jule::U64,jule::U64);
inline jule::F64 _1b59e957b_atanh(jule::F64);
inline jule::U32 _1b5a07116_f32_bits(jule::F32);
inline jule::F32 _1b5a07116_f32_from_bits(jule::U32);
inline jule::U64 _1b5a07116_f64_bits(jule::F64);
inline jule::F64 _1b5a07116_f64_from_bits(jule::U64);
inline jule::F64 _1b5a241aa_cos(jule::F64);
inline jule::F64 _1b5a241aa_sin(jule::F64);
inline jule::F64 _1b5a246d8_tan(jule::F64);
inline jule::F64 _1b5a00bae_mod(jule::F64,jule::F64);
inline std::tuple<jule::F64,jule::Int> _1b5a00d57_frexp(jule::F64);
inline jule::F32 _1b5a62e74_nextafter32(jule::F32,jule::F32);
inline jule::F64 _1b5a62e74_nextafter(jule::F64,jule::F64);
inline jule::F64 _1b5a8b860_copysign(jule::F64,jule::F64);
inline std::tuple<jule::U64,jule::F64> _1b5a99ebc_trig_reduce(jule::F64);
inline jule::F64 _1b5abd452_atan2(jule::F64,jule::F64);
inline jule::F64 _1b5abde69_floor(jule::F64);
inline jule::F64 _1b5abde69_ceil(jule::F64);
inline jule::F64 _1b5abde69_trunc(jule::F64);
inline jule::F64 _1b5abde69_round(jule::F64);
inline jule::F64 _1b5abde69_round_even(jule::F64);
inline jule::F64 _1b5ab659e_nan(void);
inline jule::Bool _1b5ab659e_is_nan(jule::F64);
inline jule::F64 _1b5ab659e_inf(jule::Int);
inline jule::Bool _1b5ab659e_is_inf(jule::F64,jule::Int);
inline std::tuple<jule::F64,jule::Int> _1b5ab659e_normalize(jule::F64);
inline std::tuple<jule::F64,jule::F64> _1b5b280a0_sincos(jule::F64);
inline jule::F64 _1b5b3791c_dim(jule::F64,jule::F64);
inline jule::F64 _1b5b3791c_max(jule::F64,jule::F64);
inline jule::F64 _1b5b3791c_min(jule::F64,jule::F64);
inline jule::F64 _1b5b07eb4_log(jule::F64);
inline jule::F64 _1b5ba459e_expm1(jule::F64);
inline jule::F64 _1b5c0ce54_abs(jule::F64);
inline jule::F64 _1b5b08a97_j1(jule::F64);
inline jule::F64 _1b5b08a97_y1(jule::F64);
inline jule::F64 _1b5b08a97_pone(jule::F64);
inline jule::F64 _1b5b08a97_qone(jule::F64);
inline jule::U64 _1b5b81c63_zero(jule::U64);
inline jule::U64 _1b5b81c63_nonzero(jule::U64);
inline std::tuple<jule::U64,jule::U64> _1b5b81c63_shl(jule::U64,jule::U64,jule::Uint);
inline std::tuple<jule::U64,jule::U64> _1b5b81c63_shr(jule::U64,jule::U64,jule::Uint);
inline std::tuple<jule::U64,jule::U64> _1b5b81c63_shrcompress(jule::U64,jule::U64,jule::Uint);
inline jule::I32 _1b5b81c63_lz(jule::U64,jule::U64);
inline std::tuple<jule::U32,jule::I32,jule::U64> _1b5b81c63_split(jule::U64);
inline jule::F64 _1b5b81c63_fma(jule::F64,jule::F64,jule::F64);
inline std::tuple<jule::F64,jule::F64> _1b5c13311_modf(jule::F64);
inline jule::F64 _1b5cccee1_log10(jule::F64);
inline jule::F64 _1b5cccee1_log2(jule::F64);
inline jule::F64 _1b5ce3710_hypot(jule::F64,jule::F64);
inline jule::F64 _1b5cdb043_j0(jule::F64);
inline jule::F64 _1b5cdb043_y0(jule::F64);
inline jule::F64 _1b5cdb043_pzero(jule::F64);
inline jule::F64 _1b5cdb043_qzero(jule::F64);
inline jule::F64 _1cde6cc4a_ldexp(jule::F64,jule::Int);
inline jule::Bool _1ce032bbc_signbit(jule::F64);
inline jule::F64 _1b54d2251_sinh(jule::F64);
inline jule::F64 _1b54d2251_cosh(jule::F64);
inline std::tuple<jule::F64,jule::Int> _1b54d7256_lgamma(jule::F64);
inline jule::F64 _1b54d7256_sin_pi(jule::F64);
inline jule::F64 _1b54d7b5d_acosh(jule::F64);
inline jule::F64 _1b551b2ce_tanh(jule::F64);
inline jule::F64 _1b5589061_cbrt(jule::F64);
inline jule::F64 _1b55867ab_pow(jule::F64,jule::F64);
inline jule::Bool _1b55867ab_is_odd_int(jule::F64);
inline jule::F64 _1b5e05bda_exp(jule::F64);
inline jule::F64 _1b5e05bda_exp2(jule::F64);
inline jule::F64 _1b5e05bda_expmulti(jule::F64,jule::F64,jule::Int);
inline jule::F64 _1b605ec01_log1p(jule::F64);
inline std::tuple<jule::F64,jule::F64> _1b5d5c8bc_stirling(jule::F64);
inline jule::F64 _1b5d5c8bc_gamma(jule::F64);
inline jule::Bool _1b5d5c8bc_is_neg_int(jule::F64);
inline jule::F64 _1b5d748b2_erfinv(jule::F64);
inline jule::F64 _1b5d748b2_erfcinv(jule::F64);
inline jule::F64 _1b5dbb871_erf(jule::F64);
inline jule::F64 _1b5dbb871_erfc(jule::F64);
inline jule::F64 _1b6e3d43b_pow10(jule::Int);
inline jule::F64 _1b5dbbec0_sqrt(jule::F64);
inline jule::F64 _1b6e74483_logb(jule::F64);
inline jule::Int _1b6e74483_ilogb(jule::F64);
inline jule::Int _1b6e74483__ilogb(jule::F64);
inline jule::F64 _1b6e91e84_jn(jule::Int,jule::F64);
inline jule::F64 _1b6e91e84_yn(jule::Int,jule::F64);
inline jule::F64 _1b701e2ec_remainder(jule::F64,jule::F64);
inline jule::F64 _1b6e68b1a_xatan(jule::F64);
inline jule::F64 _1b6e68b1a_satan(jule::F64);
inline jule::F64 _1b6e68b1a_atan(jule::F64);
inline jule::F64 _1b6ea387a_asin(jule::F64);
inline jule::F64 _1b6ea387a_acos(jule::F64);
inline jule::F64 _1b70401b9_asinh(jule::F64);
inline std::tuple<jule::Bool,jule::Int> _1cddaa10a_conv_bool(jule::Str);
inline jule::Str _1cddaa10a_fmt_bool(jule::Bool);
inline jule::Str _1cdd4411b_fmt_float(jule::F64,jule::U8,jule::Int,jule::Int);
inline jule::Slice<jule::U8> _1cdd4411b_generic_ftoa(jule::Slice<jule::U8>,jule::F64,jule::U8,jule::Int,jule::Int);
inline jule::Slice<jule::U8> _1cdd4411b_big_ftoa(jule::Slice<jule::U8>,jule::Int,jule::U8,jule::Bool,jule::U64,jule::Int,_1cdd4411b_FloatInfo&);
inline jule::Slice<jule::U8> _1cdd4411b_fmt_digits(jule::Slice<jule::U8>,jule::Bool,jule::Bool,_1cdd4411b_DecimalSlice,jule::Int,jule::U8);
inline void _1cdd4411b_round_shortest(_1b588cbe4_Decimal&,jule::U64,jule::Int,_1cdd4411b_FloatInfo&);
inline jule::Slice<jule::U8> _1cdd4411b_fmt_e(jule::Slice<jule::U8>,jule::Bool,_1cdd4411b_DecimalSlice,jule::Int,jule::U8);
inline jule::Slice<jule::U8> _1cdd4411b_fmt_f(jule::Slice<jule::U8>,jule::Bool,_1cdd4411b_DecimalSlice,jule::Int);
inline jule::Slice<jule::U8> _1cdd4411b_fmt_b(jule::Slice<jule::U8>,jule::Bool,jule::U64,jule::Int,_1cdd4411b_FloatInfo&);
inline jule::Slice<jule::U8> _1cdd4411b_fmt_x(jule::Slice<jule::U8>,jule::Int,jule::U8,jule::Bool,jule::U64,jule::Int,_1cdd4411b_FloatInfo&);
inline jule::Int _1cdd4411b_min(jule::Int,jule::Int);
inline jule::Int _1cdd4411b_max(jule::Int,jule::Int);
inline jule::U8 _1cdd97339_lower(jule::U8);
inline std::tuple<jule::U64,jule::Int> _1cdd97339_parse_uint(jule::Str,jule::Int,jule::Int);
inline std::tuple<jule::I64,jule::Int> _1cdd97339_parse_int(jule::Str,jule::Int,jule::Int);
inline std::tuple<jule::F64,jule::Bool> _1cde06541_eisel_lemire64(jule::U64,jule::Int,jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _1cde06541_eisel_lemire32(jule::U64,jule::Int,jule::Bool);
inline jule::Int _1cddd8c93_common_prefix_len_ignore_case(jule::Str,jule::Str);
inline std::tuple<jule::F64,jule::Int,jule::Bool> _1cddd8c93_special(jule::Str);
inline std::tuple<jule::U64,jule::Int,jule::Bool,jule::Bool,jule::Bool,jule::Int,jule::Bool> _1cddd8c93_read_float(jule::Str);
inline std::tuple<jule::F64,jule::Bool> _1cddd8c93_atof64_exact(jule::U64,jule::Int,jule::Bool);
inline std::tuple<jule::F64,jule::Bool> _1cddd8c93_atof64exact(jule::U64,jule::Int,jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _1cddd8c93_atof32exact(jule::U64,jule::Int,jule::Bool);
inline std::tuple<jule::F64,jule::Int> _1cddd8c93_atof_hex(jule::Str,_1cdd4411b_FloatInfo&,jule::U64,jule::Int,jule::Bool,jule::Bool);
inline std::tuple<jule::F32,jule::Int,jule::Int> _1cddd8c93_atof32(jule::Str);
inline std::tuple<jule::F64,jule::Int,jule::Int> _1cddd8c93_atof64(jule::Str);
inline std::tuple<jule::F64,jule::Int,jule::Int> _1cddd8c93_parse_float_prefix(jule::Str,jule::Int);
inline std::tuple<jule::F64,jule::Int> _1cddd8c93_parse_float(jule::Str,jule::Int);
inline void _1b56e9897_ryu_ftoa_fixed32(_1cdd4411b_DecimalSlice&,jule::U32,jule::Int,jule::Int);
inline void _1b56e9897_ryu_ftoa_fixed64(_1cdd4411b_DecimalSlice&,jule::U64,jule::Int,jule::Int);
inline void _1b56e9897_format_decimal(_1cdd4411b_DecimalSlice&,jule::U64,jule::Bool,jule::Bool,jule::Int);
inline void _1b56e9897_ryu_ftoa_shortest(_1cdd4411b_DecimalSlice&,jule::U64,jule::Int,_1cdd4411b_FloatInfo&);
inline jule::Int _1b56e9897_mul_by_log2_log10(jule::Int);
inline jule::Int _1b56e9897_mul_by_log10_log2(jule::Int);
inline std::tuple<jule::U64,jule::U64,jule::U64,jule::Int> _1b56e9897_compute_bounds(jule::U64,jule::Int,_1cdd4411b_FloatInfo&);
inline void _1b56e9897_ryu_digits(_1cdd4411b_DecimalSlice&,jule::U64,jule::U64,jule::U64,jule::Bool,jule::Bool);
inline void _1b56e9897_ryu_digits32(_1cdd4411b_DecimalSlice&,jule::U32,jule::U32,jule::U32,jule::Bool,jule::Bool,jule::Int);
inline std::tuple<jule::U32,jule::Int,jule::Bool> _1b56e9897_mult64bit_pow10(jule::U32,jule::Int,jule::Int);
inline std::tuple<jule::U64,jule::Int,jule::Bool> _1b56e9897_mult128bit_pow10(jule::U64,jule::Int,jule::Int);
inline jule::Bool _1b56e9897_divisible_by_pow5(jule::U64,jule::Int);
inline std::tuple<jule::U32,jule::U32> _1b56e9897_divmod1e9(jule::U64);
inline jule::Int _1b588cbe4_digit_zero(jule::Slice<jule::U8>);
inline void _1b588cbe4_trim(_1b588cbe4_Decimal&);
inline void _1b588cbe4_right_shift(_1b588cbe4_Decimal&,jule::Uint);
inline jule::Bool _1b588cbe4_prefix_is_less_than(jule::Slice<jule::U8>,jule::Str);
inline void _1b588cbe4_left_shift(_1b588cbe4_Decimal&,jule::Uint);
inline jule::Bool _1b588cbe4_should_round_up(_1b588cbe4_Decimal&,jule::Int);
inline jule::Str _1b59a1be8_fmt_uint(jule::U64,jule::Int);
inline jule::Str _1b59a1be8_fmt_int(jule::I64,jule::Int);
inline jule::Str _1b59a1be8_itoa(jule::Int);
inline jule::Str _1b59a1be8_small(jule::Int);
inline jule::Bool _1b59a1be8_is_power_of_two(jule::Int);
inline std::tuple<jule::Slice<jule::U8>,jule::Str> _1b59a1be8_fmt_bits(jule::Slice<jule::U8>,jule::U64,jule::Int,jule::Bool,jule::Bool);
inline void _1b615dbac_push_opt_level(jule::Int);
inline jule::Bool _1b615dbac_is_opt_enabled(jule::Str);
inline jule::Int _1b618d5c1_get_last_fs_error(void);
inline std::tuple<jule::Ref<_1b61b2a8a_File>,jule::Int> _1b618de0c_open(jule::Str,jule::Int,jule::Int);
inline jule::Int _1b618de0c_remove_file(jule::Str);
inline std::tuple<jule::Ref<_1a8bb56ee_Status>,jule::Int> _1b618d48e_stat(jule::Str);
inline std::tuple<jule::Slice<jule::U8>,jule::Int> _1b61b2a8a_read_file(jule::Str);
inline std::tuple<jule::Slice<jule::Ref<_1b61b1e74_DirEntry>>,jule::Int> _1b61bea42_read_dir(jule::Str);
inline jule::Int _1b61bea42_create_dir(jule::Str);
inline jule::Int _1b61bea42_remove_dir(jule::Str);
inline jule::Bool _1b5ac328c_is_graphic(jule::I32);
inline jule::Bool _1b5ac328c_is_in(jule::I32,jule::Slice<jule::Ref<_1a9930e4c_RangeTable>>);
inline jule::Bool _1b5ac328c_is_letter(jule::I32);
inline jule::Bool _1b5ac328c_is_number(jule::I32);
inline jule::Bool _1b5ac328c_is_punct(jule::I32);
inline jule::Bool _1b5ac328c_is_space(jule::I32);
inline jule::Bool _1a992dd4b_is_digit(jule::I32);
inline std::tuple<jule::I32,jule::Bool> _1a9930e4c___to(jule::Int,jule::I32,jule::Slice<_1a9930e4c_CaseRange>);
inline jule::I32 _1a9930e4c_to(jule::Int,jule::I32);
inline jule::I32 _1a9930e4c_to_upper(jule::I32);
inline jule::I32 _1a9930e4c_to_lower(jule::I32);
inline jule::Bool _1a9930e4c_is16(jule::Slice<_1a9930e4c_Range16>,jule::U16);
inline jule::Bool _1a9930e4c_is32(jule::Slice<_1a9930e4c_Range32>,jule::U32);
inline jule::Bool _1a9930e4c_is(jule::Ref<_1a9930e4c_RangeTable>,jule::I32);
inline jule::Bool _1a9930e4c_is_excluding_latin(jule::Ref<_1a9930e4c_RangeTable>,jule::I32);
inline jule::Bool _1a9930e4c_is_upper(jule::I32);
inline jule::Bool _1a9930e4c_is_lower(jule::I32);
inline jule::Bool _1a99595b3_full_rune(jule::Slice<jule::U8>);
inline jule::Bool _1a99595b3_full_rune_str(jule::Str);
inline std::tuple<jule::I32,jule::Int> _1a99595b3_decode_rune(jule::Slice<jule::U8>);
inline std::tuple<jule::I32,jule::Int> _1a99595b3_decode_rune_str(jule::Str);
inline std::tuple<jule::I32,jule::Int> _1a99595b3_decode_last_rune(jule::Slice<jule::U8>);
inline std::tuple<jule::I32,jule::Int> _1a99595b3_decode_last_rune_str(jule::Str);
inline jule::Int _1a99595b3_rune_len(jule::I32);
inline jule::Int _1a99595b3_encode_rune(jule::Slice<jule::U8>,jule::I32);
inline jule::Slice<jule::U8> _1a99595b3_append_rune(jule::Slice<jule::U8>,jule::I32);
inline jule::Slice<jule::U8> _1a99595b3_append_rune_non_ascii(jule::Slice<jule::U8>,jule::I32);
inline jule::Int _1a99595b3_rune_count(jule::Slice<jule::U8>);
inline jule::Int _1a99595b3_rune_count_str(jule::Str);
inline jule::Bool _1a99595b3_rune_start(jule::U8);
inline jule::Bool _1a99595b3_valid(jule::Slice<jule::U8>);
inline jule::Bool _1a99595b3_valid_str(jule::Str);
inline jule::Bool _1a99595b3_valid_rune(jule::I32);
inline jule::Bool _1b61ec5ec_is_unary_op(jule::Str);
inline jule::Bool _1b61ec5ec_is_bin_op(jule::Str);
inline jule::Bool _1b61ec5ec_is_weak_op(jule::Str);
inline jule::Bool _1b61ec5ec_is_str(jule::Str);
inline jule::Bool _1b61ec5ec_is_raw_str(jule::Str);
inline jule::Bool _1b61ec5ec_is_rune(jule::Str);
inline jule::Bool _1b61ec5ec_is_nil(jule::Str);
inline jule::Bool _1b61ec5ec_is_bool(jule::Str);
inline jule::Bool _1b61ec5ec_contains_any(jule::Str,jule::Str);
inline jule::Bool _1b61ec5ec_is_float(jule::Str);
inline jule::Bool _1b61ec5ec_is_num(jule::Str);
inline jule::Bool _1b61ec5ec_is_lit(jule::Str);
inline jule::Bool _1b61ec5ec_is_ignore_ident(jule::Str);
inline jule::Bool _1b61ec5ec_is_anon_ident(jule::Str);
inline jule::Bool _1b61ec5ec_is_punct(jule::I32);
inline jule::Bool _1b61ec5ec_is_space(jule::I32);
inline jule::Bool _1b61ec5ec_is_letter(jule::I32);
inline jule::Bool _1b61ec5ec_is_ident_rune(jule::Str);
inline jule::Bool _1b61ec5ec_is_decimal(jule::U8);
inline jule::Bool _1b61ec5ec_is_binary(jule::U8);
inline jule::Bool _1b61ec5ec_is_octal(jule::U8);
inline jule::Bool _1b61ec5ec_is_hex(jule::U8);
inline jule::Bool _1b61ec5ec_is_assign(jule::Uint);
inline jule::Bool _1b61ec5ec_is_postfix_op(jule::Str);
inline jule::Bool _1b61ec5ec_is_assign_op(jule::Str);
inline jule::Ref<_1b61ece27_File> _1b61ece27_new_file_set(jule::Str);
inline _1cdeeb191_Log _1b62ba104_make_err(jule::Int,jule::Int,jule::Ref<_1b61ece27_File>&,jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _1b62ba104_bytes_has_prefix(jule::Slice<jule::U8>&,jule::Str);
inline jule::Str _1b62ba104_float_fmt_e(jule::Slice<jule::U8>&,jule::Int);
inline jule::Str _1b62ba104_float_fmt_p(jule::Slice<jule::U8>&,jule::Int);
inline jule::Str _1b62ba104_float_fmt_dotnp(jule::Slice<jule::U8>&,jule::Int);
inline jule::Str _1b62ba104_float_fmt_dotfp(jule::Slice<jule::U8>&,jule::Int);
inline jule::Str _1b62ba104_float_fmt_dotp(jule::Slice<jule::U8>&,jule::Int);
inline jule::Str _1b62ba104_float_num(jule::Slice<jule::U8>&,jule::Int);
inline jule::Str _1b62ba104_common_num(jule::Slice<jule::U8>&);
inline jule::Str _1b62ba104_binary_num(jule::Slice<jule::U8>&);
inline jule::Bool _1b62ba104_is_float_fmt_e(jule::U8,jule::Int);
inline jule::Bool _1b62ba104_is_float_fmt_p(jule::U8,jule::Int);
inline jule::Bool _1b62ba104_is_float_fmt_dotnp(jule::Slice<jule::U8>&,jule::Int);
inline jule::Bool _1b62ba104_is_float_fmt_dotp(jule::Slice<jule::U8>&,jule::Int);
inline jule::Bool _1b62ba104_is_float_fmt_dotfp(jule::Slice<jule::U8>&,jule::Int);
inline jule::Str _1b62ba104_octal_num(jule::Slice<jule::U8>&);
inline jule::Str _1b62ba104_hex_num(jule::Slice<jule::U8>&);
inline jule::Str _1b62ba104_hex_escape(jule::Slice<jule::U8>&,jule::Int);
inline jule::Str _1b62ba104_big_unicode_point_escape(jule::Slice<jule::U8>&);
inline jule::Str _1b62ba104_little_unicode_point_escape(jule::Slice<jule::U8>&);
inline jule::Str _1b62ba104_hex_byte_escape(jule::Slice<jule::U8>&);
inline jule::Str _1b62ba104_byte_escape(jule::Slice<jule::U8>&);
inline jule::Slice<_1cdeeb191_Log> _1b62ba104_lex(jule::Ref<_1b61ece27_File>);
inline jule::Ref<_1a9b97966_FileInfo> _1a9b97966_parse_file(jule::Ref<_1b61ece27_File>);
inline jule::Ref<_1a9b97966_PackageInfo> _1a9b97966_parse_package(jule::Slice<jule::Ref<_1b61ece27_File>>);
inline std::tuple<jule::Ref<_1b61d1d62_Ast>,jule::Slice<_1cdeeb191_Log>> _1a9b97966_parse_fileset(jule::Ref<_1b61ece27_File>);
inline jule::Ref<_1b61ca014_ScopeTree> _1a9b97a76_new_scope(void);
inline std::tuple<jule::Bool,jule::Bool> _1a9b97a76_is_st(_1b61ec5ec_Token,_1b61ec5ec_Token);
inline jule::Bool _1a9b97a76_prev_is_incomplete_binary_expr(jule::Slice<_1b61ec5ec_Token>&,jule::Int&);
inline std::tuple<jule::Int,jule::Bool> _1a9b97a76_next_st_pos(jule::Slice<_1b61ec5ec_Token>&,jule::Int);
inline std::tuple<jule::Slice<_1b61ec5ec_Token>,jule::Bool> _1a9b97a76_skip_st(jule::Int&,jule::Slice<_1b61ec5ec_Token>);
inline jule::Slice<jule::Ref<_1a9b97a76_Stmt>> _1a9b97a76_split_stms(jule::Slice<_1b61ec5ec_Token>&);
inline jule::Slice<_1b61ec5ec_Token> _1a9ba6854_is_fn_call(jule::Slice<_1b61ec5ec_Token>&);
inline jule::Ref<_1a9ba6854_CallData> _1a9ba6854_get_call_data(jule::Slice<_1b61ec5ec_Token>&);
inline jule::Slice<_1b61ec5ec_Token> _1a9ba6854_get_block_expr(jule::Slice<_1b61ec5ec_Token>&);
inline std::tuple<jule::Slice<_1b61ec5ec_Token>,jule::Slice<_1b61ec5ec_Token>> _1a9ba6854_split_colon(jule::Slice<_1b61ec5ec_Token>&);
inline jule::Slice<_1b61ec5ec_Token> _1a9ba6854_eliminate_comments(jule::Slice<_1b61ec5ec_Token>&);
inline jule::Int _1a9ba6854_find_lowest_prec_op(jule::Slice<_1b61ec5ec_Token>&);
inline jule::Ref<_1b61ca014_IdentExpr> _1a9ba6854_build_ident_expr(_1b61ec5ec_Token&);
inline std::tuple<jule::Slice<_1b61ec5ec_Token>,jule::Int> _1a9ba6854_get_range_expr_tokens(jule::Slice<_1b61ec5ec_Token>&);
inline jule::Bool _1a9e07148_check_assign_tokens(jule::Slice<_1b61ec5ec_Token>&);
inline _1cdeeb191_Log _1a9e07434_make_err(jule::Int,jule::Int,jule::Ref<_1b61ece27_File>&,jule::Str,jule::Slice<jule::Any>);
inline jule::Slice<_1b61ec5ec_Token> _1a9e07434_range(jule::Int&,jule::Str,jule::Str,jule::Slice<_1b61ec5ec_Token>&);
inline std::tuple<jule::Slice<_1b61ec5ec_Token>,jule::Slice<_1b61ec5ec_Token>> _1a9e07434_range_last(jule::Slice<_1b61ec5ec_Token>&);
inline std::tuple<jule::Slice<jule::Slice<_1b61ec5ec_Token>>,jule::Slice<_1cdeeb191_Log>> _1a9e07434_parts(jule::Slice<_1b61ec5ec_Token>&,jule::Uint,jule::Bool);
inline jule::Str _1a9e07434_get_close_kind_of_brace(jule::Str);
inline _1cdeeb191_Log _1a9e07434_compiler_err(_1b61ec5ec_Token&,jule::Str&,jule::Slice<jule::Any>);
inline void _1a9e07434_push_suggestion(_1cdeeb191_Log*,jule::Str,jule::Slice<jule::Any>);
inline jule::Ref<_1b61ca014_Comment> _1a9e07434_build_comment(_1b61ec5ec_Token&);
inline jule::Str _1a9e07434_tokstoa(jule::Slice<_1b61ec5ec_Token>&);
inline jule::Ref<_1b61ca014_TypeDecl> _1b5d9c0c1_build_void_type(void);
inline jule::Ref<_1b61ca014_TypeDecl> _1b5d9c0c1_build_prim_type(_1b61ec5ec_Token);
inline std::tuple<jule::Slice<_1b61ec5ec_Token>,jule::Int> _1b5d9c0c1_split_map_range(jule::Slice<_1b61ec5ec_Token>&,jule::Int&);
inline void _1ac90c3ed_lshift_unsig(_1ac90c3ed_Const&,_1ac90c3ed_Const&);
inline void _1ac90c3ed_rshift_unsig(_1ac90c3ed_Const&,_1ac90c3ed_Const&);
inline jule::Bool _1ac90e3bc_check_bit(jule::Str,jule::Int,jule::Fn<jule::Bool(jule::Str,jule::Int,jule::Int)>);
inline jule::Str _1ac90e3bc_real_kind_of(jule::Str);
inline jule::Int _1ac90e3bc_bitsize_of(jule::Str);
inline jule::Str _1ac90e3bc_int_from_bits(jule::U64);
inline jule::Str _1ac90e3bc_uint_from_bits(jule::U64);
inline jule::Str _1ac90e3bc_float_from_bits(jule::U64);
inline jule::Bool _1ac90e3bc_check_bit_int(jule::Str,jule::Int);
inline jule::Bool _1ac90e3bc_check_bit_uint(jule::Str,jule::Int);
inline jule::Bool _1ac90e3bc_check_bit_float(jule::Str,jule::Int);
inline jule::U64 _1ac90e3bc_bitsize_of_float(jule::F64);
inline jule::U64 _1ac90e3bc_bitsize_of_int(jule::I64);
inline jule::U64 _1ac90e3bc_bitsize_of_uint(jule::U64);
inline jule::F64 _1ac928bde_min(jule::Str);
inline jule::F64 _1ac928bde_max(jule::Str);
inline jule::Bool _1ac9d0e1c_is_i8_compatible(jule::Str);
inline jule::Bool _1ac9d0e1c_is_i16_compatible(jule::Str);
inline jule::Bool _1ac9d0e1c_is_i32_compatible(jule::Str);
inline jule::Bool _1ac9d0e1c_is_i64_compatible(jule::Str);
inline jule::Bool _1ac9d0e1c_is_u8_compatible(jule::Str);
inline jule::Bool _1ac9d0e1c_is_u16_compatible(jule::Str);
inline jule::Bool _1ac9d0e1c_is_u32_compatible(jule::Str);
inline jule::Bool _1ac9d0e1c_is_u64_compatible(jule::Str);
inline jule::Bool _1ac9d0e1c_is_f32_compatible(jule::Str);
inline jule::Bool _1ac9d0e1c_is_f64_compatible(jule::Str);
inline jule::Bool _1ac9d0e1c_types_are_compatible(jule::Str,jule::Str);
inline jule::Bool _1ac9d0e1c_is_i16_greater(jule::Str);
inline jule::Bool _1ac9d0e1c_is_i32_greater(jule::Str);
inline jule::Bool _1ac9d0e1c_is_i64_greater(jule::Str);
inline jule::Bool _1ac9d0e1c_is_u8_greater(jule::Str);
inline jule::Bool _1ac9d0e1c_is_u16_greater(jule::Str);
inline jule::Bool _1ac9d0e1c_is_u32_greater(jule::Str);
inline jule::Bool _1ac9d0e1c_is_u64_greater(jule::Str);
inline jule::Bool _1ac9d0e1c_is_f32_greater(jule::Str);
inline jule::Bool _1ac9d0e1c_is_f64_greater(jule::Str);
inline jule::Bool _1ac9d0e1c_is_greater(jule::Str,jule::Str);
inline jule::Bool _1ac92d7e8_is_sig_int(jule::Str);
inline jule::Bool _1ac92d7e8_is_unsig_int(jule::Str);
inline jule::Bool _1ac92d7e8_is_int(jule::Str);
inline jule::Bool _1ac92d7e8_is_float(jule::Str);
inline jule::Bool _1ac92d7e8_is_num(jule::Str);
inline jule::Bool _1ac92d7e8_is_sig_num(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _1acb355b0_is_byte_lit(jule::Str);
inline jule::I32 _1acb355b0_to_rune(jule::Slice<jule::U8>);
inline jule::Str _1acb355b0_to_raw_str(jule::Slice<jule::U8>);
inline jule::Str _1acb355b0_to_str(jule::Slice<jule::U8>);
inline std::tuple<jule::U8,jule::Bool> _1acb355b0_try_btoa_common_esq(jule::Slice<jule::U8>);
inline jule::I32 _1acb355b0_rune_from_esq_seq(jule::Slice<jule::U8>,jule::Int&);
inline jule::Str _1acb355b0_str_esq_seq(jule::Slice<jule::U8>,jule::Int&);
inline jule::Bool _1b557cd24_kind_uses_generics(jule::Ref<_1ac6d02c0_TypeKind>,jule::Slice<jule::Ref<_1b61ca014_GenericDecl>>&);
inline jule::Bool _1b557cd24_parameter_uses_generics(jule::Ref<_1b557cd24_Param>&,jule::Slice<jule::Ref<_1b61ca014_GenericDecl>>&);
inline jule::Str _1b5589c76_str_repeat(jule::Str,jule::Int);
inline jule::Str _1b5589c76_build_doc(jule::Ref<_1b61ca014_CommentGroup>);
inline jule::Ref<_1ac6d02c0_TypeSymbol> _1b5589c76_build_type(jule::Ref<_1b61ca014_TypeDecl>);
inline jule::Ref<_1ab00dbcc_Value> _1b5589c76_build_expr(jule::Ref<_1b61ca014_Expr>);
inline jule::Ref<_1ac6d02c0_TypeAlias> _1b5589c76_build_type_alias(jule::Ref<_1b61ca014_TypeAliasDecl>);
inline jule::Ref<_1b5e07a00_Field> _1b5589c76_build_field(jule::Ref<_1b61ca014_FieldDecl>);
inline jule::Slice<jule::Ref<_1b5e07a00_Field>> _1b5589c76_build_fields(jule::Slice<jule::Ref<_1b61ca014_FieldDecl>>&);
inline jule::Ref<_1b5e07a00_Struct> _1b5589c76_build_struct(jule::Ref<_1b61ca014_StructDecl>);
inline jule::Ref<_1b557cd24_Param> _1b5589c76_build_param(jule::Ref<_1b61ca014_ParamDecl>);
inline jule::Slice<jule::Ref<_1b557cd24_Param>> _1b5589c76_build_params(jule::Slice<jule::Ref<_1b61ca014_ParamDecl>>&);
inline jule::Ref<_1b557cd24_RetType> _1b5589c76_build_ret_type(jule::Ref<_1b61ca014_RetTypeDecl>);
inline jule::Ref<_1b557cd24_Fn> _1b5589c76_build_fn(jule::Ref<_1b61ca014_FnDecl>);
inline jule::Slice<jule::Ref<_1b557cd24_Fn>> _1b5589c76_build_methods(jule::Slice<jule::Ref<_1b61ca014_FnDecl>>&);
inline jule::Ref<_1aaee9091_Trait> _1b5589c76_build_trait(jule::Ref<_1b61ca014_TraitDecl>);
inline jule::Ref<_1a909ac6b_EnumItem> _1b5589c76_build_enum_item(jule::Ref<_1b61ca014_EnumItemDecl>);
inline jule::Slice<jule::Ref<_1a909ac6b_EnumItem>> _1b5589c76_build_enum_items(jule::Slice<jule::Ref<_1b61ca014_EnumItemDecl>>&);
inline jule::Ref<_1a909ac6b_Enum> _1b5589c76_build_enum(jule::Ref<_1b61ca014_EnumDecl>);
inline jule::Ref<_1b623eab2_Var> _1b5589c76_build_var(jule::Ref<_1b61ca014_VarDecl>);
inline jule::Ref<_1ab0017b3_Impl> _1b5589c76_build_impl(jule::Ref<_1b61ca014_Impl>);
inline jule::Ref<_1ab009de8_ScopeChecker> _1ab009de8_new_scope_checker_base(jule::Ref<_1ab195050_Sema>,jule::Ref<_1b557cd24_FnIns>);
inline jule::Ref<_1ab009de8_ScopeChecker> _1ab009de8_new_scope_checker(jule::Ref<_1ab195050_Sema>,jule::Ref<_1b557cd24_FnIns>);
inline jule::Ref<_1ab009de8_ScopeLabel> _1ab009de8_find_label_parent(jule::Str,jule::Ref<_1ab009de8_ScopeChecker>);
inline jule::Int _1ab009de8_count_match_type(jule::Ref<_1ab009de8_Match>,jule::Ref<_1ac6d02c0_TypeKind>);
inline jule::Slice<jule::Ref<_1ab00dbcc_Data>> _1ab009de8_get_datas_from_tuple_data(jule::Ref<_1ab00dbcc_Data>);
inline jule::Slice<jule::Any> _1ab009de8_get_expr_models(jule::Any);
inline jule::Bool _1ab009de8_check_mut(jule::Ref<_1ab195050_Sema>,jule::Ref<_1ab00dbcc_Data>,jule::Ref<_1ab00dbcc_Data>,_1b61ec5ec_Token);
inline jule::Bool _1ab009de8_check_assign(jule::Ref<_1ab195050_Sema>,jule::Ref<_1ab00dbcc_Data>,jule::Ref<_1ab00dbcc_Data>,_1b61ec5ec_Token);
inline jule::Bool _1ab009de8_is_valid_ast_st_for_next_st(jule::Any);
inline jule::Bool _1ab009de8_is_valid_st_for_next_st(jule::Any);
inline jule::Bool _1ab009de8_st_is_def(jule::Any);
inline jule::Ref<_1b623eab2_Var> _1ab194c20_find_var_in_package(jule::Slice<jule::Ref<_1ab00cc20_SymbolTable>>&,jule::Str,jule::Bool);
inline jule::Ref<_1ac6d02c0_TypeAlias> _1ab194c20_find_type_alias_in_package(jule::Slice<jule::Ref<_1ab00cc20_SymbolTable>>&,jule::Str,jule::Bool);
inline jule::Ref<_1b5e07a00_Struct> _1ab194c20_find_struct_in_package(jule::Slice<jule::Ref<_1ab00cc20_SymbolTable>>&,jule::Str,jule::Bool);
inline jule::Ref<_1b557cd24_Fn> _1ab194c20_find_fn_in_package(jule::Slice<jule::Ref<_1ab00cc20_SymbolTable>>&,jule::Str,jule::Bool);
inline jule::Ref<_1aaee9091_Trait> _1ab194c20_find_trait_in_package(jule::Slice<jule::Ref<_1ab00cc20_SymbolTable>>&,jule::Str);
inline jule::Ref<_1a909ac6b_Enum> _1ab194c20_find_enum_in_package(jule::Slice<jule::Ref<_1ab00cc20_SymbolTable>>&,jule::Str);
inline jule::Bool _1ab195050_is_valid_model_for_ref(jule::Any);
inline _1cdeeb191_Log _1ab195050_compiler_err(_1b61ec5ec_Token&,jule::Bool,jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _1ab195050_imp_is_lookupable(jule::Ref<_1ab194c20_ImportInfo>&,jule::Str);
inline jule::Slice<jule::Ref<_1b623eab2_Var>> _1ab195050_build_ret_vars(jule::Ref<_1b557cd24_FnIns>&);
inline jule::Slice<jule::Ref<_1b623eab2_Var>> _1ab195050_build_param_vars(jule::Ref<_1b557cd24_FnIns>&);
inline jule::Slice<jule::Ref<_1ac6d02c0_TypeAlias>> _1ab195050_build_generic_type_aliases(jule::Ref<_1b557cd24_FnIns>&);
inline jule::Ref<_1ab00cc20_SymbolTable> _1ab195050_find_file(jule::Slice<jule::Ref<_1ab00cc20_SymbolTable>>&,jule::Ref<_1b61ece27_File>&);
inline std::tuple<jule::Bool,jule::Bool> _1ab195050_conditional_has_ret(jule::Ref<_1ab009de8_Conditional>);
inline jule::Bool _1ab195050_match_has_ret(jule::Ref<_1ab009de8_Match>);
inline std::tuple<jule::Bool,jule::Bool,jule::Bool> _1ab195050___has_ret(jule::Ref<_1ab009de8_Scope>);
inline jule::Bool _1ab195050_has_ret(jule::Ref<_1ab009de8_Scope>);
inline void _1ab195050_push_suggestion(_1cdeeb191_Log*,jule::Str,jule::Slice<jule::Any>);
inline jule::Slice<jule::Ref<_1ac6d02c0_TypeKind>> _1a8dc912c_get_fn_result_types(jule::Ref<_1b557cd24_FnIns>&);
inline jule::Bool _1a8dc912c_trait_has_reference_receiver(jule::Ref<_1aaee9091_Trait>&);
inline jule::Bool _1a8dc912c_float_assignable(jule::Str,jule::Ref<_1ab00dbcc_Data>&);
inline jule::Bool _1a8dc912c_sig_assignable(jule::Str,jule::Ref<_1ab00dbcc_Data>&);
inline jule::Bool _1a8dc912c_unsig_assignable(jule::Str,jule::Ref<_1ab00dbcc_Data>&);
inline jule::Bool _1a8dc912c_int_assignable(jule::Str,jule::Ref<_1ab00dbcc_Data>&);
inline jule::Any _1ab00dbcc_find_builtins_import(jule::Str,jule::Ref<_1ab194c20_ImportInfo>);
inline jule::Any _1ab00dbcc_find_builtins_sema(jule::Str,jule::Ref<_1ab195050_Sema>);
inline jule::Bool _1ab00dbcc_is_ok_for_shifting(jule::Ref<_1ab00dbcc_Data>);
inline jule::Bool _1ab00dbcc_is_instanced_struct(jule::Ref<_1b5e07a00_StructIns>);
inline void _1ab00dbcc_normalize_bitsize(jule::Ref<_1ab00dbcc_Data>);
inline void _1ab00dbcc_normalize_type(jule::Ref<_1ab00dbcc_Data>);
inline void _1ab00dbcc_apply_cast_kind_model(jule::Ref<_1ab00dbcc_Data>);
inline void _1ab00dbcc_apply_cast_kind(jule::Ref<_1ab00dbcc_Data>);
inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_build_void_data(void);
inline jule::Str _1ab00dbcc_kind_by_bitsize(jule::Any);
inline jule::Str _1ab00dbcc_check_data_for_integer_indexing(jule::Ref<_1ab00dbcc_Data>);
inline jule::Bool _1ac6d02c0_can_get_ptr(jule::Ref<_1ab00dbcc_Data>&);
inline jule::Bool _1ac6d02c0_is_valid_for_ref_type(jule::Ref<_1ac6d02c0_TypeKind>&);
inline jule::Bool _1ac6d02c0_is_valid_for_ref(jule::Ref<_1ac6d02c0_TypeKind>&);
inline jule::Str _1ac6d02c0_build_link_path_by_tokens(jule::Slice<_1b61ec5ec_Token>&);
inline jule::Ref<_1ac6d02c0_Prim> _1ac6d02c0_build_prim_type(jule::Str);
inline jule::Ref<_1b5e07a00_Struct> _1ac6d02c0_get_struct_from_kind(jule::Ref<_1ac6d02c0_TypeKind>);
inline jule::Bool _1ac6d02c0_is_prim(jule::Str);
inline std::tuple<jule::Ref<_1ab00cc20_SymbolTable>,jule::Slice<_1cdeeb191_Log>> _1aae299b6_build_symbols(jule::Ref<_1b61d1d62_Ast>&,jule::Trait<_1ab194c20_Importer>&,jule::Ref<_1b5589c76_SymbolBuilder>);
inline std::tuple<jule::Ref<_1ab194c20_Package>,jule::Slice<_1cdeeb191_Log>> _1aae299b6___analyze_package(jule::Slice<jule::Ref<_1b61d1d62_Ast>>&,jule::Trait<_1ab194c20_Importer>&,jule::Int&);
inline std::tuple<jule::Ref<_1ab194c20_Package>,jule::Slice<_1cdeeb191_Log>> _1aae299b6_analyze_package(jule::Slice<jule::Ref<_1b61d1d62_Ast>>,jule::Trait<_1ab194c20_Importer>,jule::Int);
inline std::tuple<jule::Ref<_1ab00cc20_SymbolTable>,jule::Slice<_1cdeeb191_Log>> _1aae299b6_analyze_file(jule::Ref<_1b61d1d62_Ast>,jule::Trait<_1ab194c20_Importer>,jule::Int);
inline void _1aae49684_init(void);
inline jule::Ref<_1b557cd24_FnIns> _1aae49684_find_builtin_fn(jule::Str);
inline jule::Ref<_1ac6d02c0_TypeAlias> _1aae49684_find_builtin_type_alias(jule::Str);
inline jule::Ref<_1aaee9091_Trait> _1aae49684_find_builtin_trait(jule::Str);
inline jule::Any _1aae49684_find_builtin_def(jule::Str);
inline jule::Any _1aae49684_find_builtin_def_std_mem(jule::Str);
inline jule::Any _1aae49684_find_builtin_def_std_jule_integrated(jule::Str);
inline jule::Any _1aae49684_find_package_builtin_def(jule::Str,jule::Str);
inline jule::Ref<_1ab00dbcc_Data> _1aae49684_builtin_caller_common_plain(jule::Ref<_1ab00dbcc_Eval>&,jule::Ref<_1b61ca014_FnCallExpr>&,jule::Ref<_1ab00dbcc_Data>&);
inline jule::Ref<_1ab00dbcc_Data> _1aae49684_builtin_caller_common(jule::Ref<_1ab00dbcc_Eval>&,jule::Ref<_1b61ca014_FnCallExpr>&,jule::Ref<_1ab00dbcc_Data>&);
inline jule::Ref<_1ab00dbcc_Data> _1aae49684_builtin_caller_common_mut(jule::Ref<_1ab00dbcc_Eval>&,jule::Ref<_1b61ca014_FnCallExpr>&,jule::Ref<_1ab00dbcc_Data>&);
inline jule::Ref<_1ab00dbcc_Data> _1aae49684_builtin_caller_out(jule::Ref<_1ab00dbcc_Eval>&,jule::Ref<_1b61ca014_FnCallExpr>&,jule::Ref<_1ab00dbcc_Data>&);
inline jule::Ref<_1ab00dbcc_Data> _1aae49684_builtin_caller_outln(jule::Ref<_1ab00dbcc_Eval>&,jule::Ref<_1b61ca014_FnCallExpr>&,jule::Ref<_1ab00dbcc_Data>&);
inline jule::Ref<_1ab00dbcc_Data> _1aae49684_builtin_caller_new(jule::Ref<_1ab00dbcc_Eval>&,jule::Ref<_1b61ca014_FnCallExpr>&,jule::Ref<_1ab00dbcc_Data>&);
inline jule::Ref<_1ab00dbcc_Data> _1aae49684_builtin_caller_real(jule::Ref<_1ab00dbcc_Eval>&,jule::Ref<_1b61ca014_FnCallExpr>&,jule::Ref<_1ab00dbcc_Data>&);
inline jule::Ref<_1ab00dbcc_Data> _1aae49684_builtin_caller_drop(jule::Ref<_1ab00dbcc_Eval>&,jule::Ref<_1b61ca014_FnCallExpr>&,jule::Ref<_1ab00dbcc_Data>&);
inline jule::Ref<_1ab00dbcc_Data> _1aae49684_builtin_caller_panic(jule::Ref<_1ab00dbcc_Eval>&,jule::Ref<_1b61ca014_FnCallExpr>&,jule::Ref<_1ab00dbcc_Data>&);
inline jule::Ref<_1ab00dbcc_Data> _1aae49684_builtin_caller_make(jule::Ref<_1ab00dbcc_Eval>&,jule::Ref<_1b61ca014_FnCallExpr>&,jule::Ref<_1ab00dbcc_Data>&);
inline jule::Ref<_1ab00dbcc_Data> _1aae49684_builtin_caller_append(jule::Ref<_1ab00dbcc_Eval>&,jule::Ref<_1b61ca014_FnCallExpr>&,jule::Ref<_1ab00dbcc_Data>&);
inline jule::Ref<_1ab00dbcc_Data> _1aae49684_builtin_caller_copy(jule::Ref<_1ab00dbcc_Eval>&,jule::Ref<_1b61ca014_FnCallExpr>&,jule::Ref<_1ab00dbcc_Data>&);
inline jule::Ref<_1ab00dbcc_Data> _1aae49684_builtin_caller_recover(jule::Ref<_1ab00dbcc_Eval>&,jule::Ref<_1b61ca014_FnCallExpr>&,jule::Ref<_1ab00dbcc_Data>&);
inline jule::Ref<_1ab00dbcc_Data> _1aae49684_builtin_caller_clone(jule::Ref<_1ab00dbcc_Eval>&,jule::Ref<_1b61ca014_FnCallExpr>&,jule::Ref<_1ab00dbcc_Data>&);
inline jule::Ref<_1ab00dbcc_Data> _1aae49684_builtin_caller_std_mem_size_of(jule::Ref<_1ab00dbcc_Eval>&,jule::Ref<_1b61ca014_FnCallExpr>&,jule::Ref<_1ab00dbcc_Data>&);
inline jule::Ref<_1ab00dbcc_Data> _1aae49684_builtin_caller_std_mem_align_of(jule::Ref<_1ab00dbcc_Eval>&,jule::Ref<_1b61ca014_FnCallExpr>&,jule::Ref<_1ab00dbcc_Data>&);
inline jule::Ref<_1ab00dbcc_Data> _1aae49684_builtin_caller_std_jule_integrated_to_str(jule::Ref<_1ab00dbcc_Eval>&,jule::Ref<_1b61ca014_FnCallExpr>&,jule::Ref<_1ab00dbcc_Data>&);
inline std::tuple<jule::Bool,jule::Bool> _1b610d72d_check_os(jule::Str);
inline std::tuple<jule::Bool,jule::Bool> _1b610d72d_check_arch(jule::Str);
inline jule::Bool _1b610d72d_is_pass_file_annotation(jule::Str);
inline jule::Bool _1b6121257_eval_directive_ident(jule::Str);
inline jule::Bool _1b6121257_eval_directive_part(jule::Str);
inline jule::Slice<jule::Str> _1b6121257_split_operans(jule::Str,jule::Str);
inline jule::Bool _1b6121257_eval_directive_expr(jule::Str);
inline void _1b6121345_set_os_flags(void);
inline void _1b6121345_set_arch_flags(void);
inline void _1b6121345_init_flags(void);
inline void _1b615c804_exit_err(jule::Str);
inline jule::Slice<jule::U8> _1b615c804_read_buff(jule::Str);
inline _1cdeeb191_Log _1b615c804_flat_compiler_err(jule::Str);
inline std::tuple<jule::Slice<jule::Ref<_1b61b1e74_DirEntry>>,jule::Str> _1b615c804_read_package_dirents(jule::Str);
inline jule::Str _1b615c804_concat_all_parts(jule::Slice<jule::Str>);
inline jule::Bool _1b615c804_is_pass_build_directives(jule::Ref<_1b61d1d62_Ast>&);
inline void _1b60cd1d1_push_passes(jule::Ref<_1ab194c20_Package>&,jule::Slice<jule::Str>&);
inline jule::Slice<jule::Str> _1b60cd1d1_get_all_unique_passes(jule::Ref<_1ab194c20_Package>&,jule::Slice<jule::Ref<_1ab194c20_ImportInfo>>);
inline jule::Bool _1b550a80c_is_exist_0(jule::Slice<jule::Any>,jule::Ref<_1b557cd24_FnIns>);
inline jule::Bool _1b550a80c_is_exist_1(jule::Slice<jule::Any>,jule::Ref<_1b623eab2_Var>);
inline jule::Bool _1b550a80c_is_exist_2(jule::Slice<jule::Any>,jule::Ref<_1b5e07a00_StructIns>);
inline jule::Bool _1b550a80c_is_exist_3(jule::Slice<jule::Any>,jule::Ref<_1aaee9091_Trait>);
inline jule::Bool _1b550a80c_is_exist_ref(jule::Slice<jule::Any>,jule::Any);
inline jule::Bool _1b550a80c_is_dead(jule::Any);
inline void _1b550a80c_drop_ref(jule::Slice<jule::Any>&,jule::Int);
inline jule::Bool _1b550a80c_is_all_references_are_dead_0(jule::Ref<_1b5589c76_ReferenceStack>);
inline jule::Bool _1b550a80c_is_all_references_are_dead_1(jule::Ref<_1b5589c76_ReferenceStack>);
inline jule::Bool _1b550a80c_is_all_references_are_dead_2(jule::Ref<_1b5589c76_ReferenceStack>);
inline jule::Bool _1b550a80c_is_fn_dead(jule::Ref<_1b557cd24_FnIns>);
inline jule::Bool _1b550a80c_is_var_dead(jule::Ref<_1b623eab2_Var>);
inline jule::Bool _1b550a80c_kind_is_dead(jule::Ref<_1ac6d02c0_TypeKind>);
inline jule::Bool _1b550a80c_is_any_generic_is_dead(jule::Slice<jule::Ref<_1ac6d02c0_TypeKind>>&);
inline jule::Bool _1b550a80c_is_struct_dead(jule::Ref<_1b5e07a00_StructIns>);
inline jule::Bool _1b550a80c_is_trait_dead(jule::Ref<_1aaee9091_Trait>);
inline void _1b550a80c_eliminate_dead_functions(jule::Slice<jule::Ref<_1b557cd24_Fn>>&);
inline void _1b550a80c_eliminate_dead_globals(jule::Ref<_1ab194c20_Package>&);
inline void _1b550a80c_eliminate_dead_functions_package(jule::Ref<_1ab194c20_Package>&);
inline void _1b550a80c_eliminate_dead_structs(jule::Ref<_1ab194c20_Package>&);
inline void _1b550a80c_eliminate_dead_traits(jule::Ref<_1ab194c20_Package>&);
inline void _1b550a80c_catch_alive_init(jule::Ref<_1ab194c20_Package>&);
inline void _1b550a80c_eliminate_package(jule::Ref<_1ab194c20_Package>&);
inline void _1b550a80c_eliminate(jule::Ref<_1b60cd1d1_IR>&);
inline void _1b60bd9da_eliminate_dead_code_of_scope(jule::Ref<_1ab009de8_Scope>);
inline jule::U64 _1ad0abb9b_unix(void);
inline jule::Str _1a977abdc_gen_if(jule::Ref<_1ab009de8_If>);
inline jule::Str _1a977abdc_gen_conditional(jule::Ref<_1ab009de8_Conditional>);
inline jule::Str _1a977abdc_gen_inf_iter(jule::Ref<_1ab009de8_InfIter>);
inline jule::Str _1a977abdc_gen_while_iter(jule::Ref<_1ab009de8_WhileIter>);
inline jule::Trait<_1a977abdc_RangeSetter> _1a977abdc_get_range_setter(jule::Ref<_1ab009de8_RangeIter>);
inline jule::Str _1a977abdc_gen_range_iter(jule::Ref<_1ab009de8_RangeIter>);
inline jule::Str _1a977abdc_gen_cont(jule::Ref<_1ab009de8_ContSt>);
inline jule::Str _1a977abdc_gen_label(jule::Ref<_1ab009de8_Label>);
inline jule::Str _1a977abdc_gen_goto(jule::Ref<_1ab009de8_GotoSt>);
inline jule::Str _1a977abdc_gen_postfix(jule::Ref<_1ab009de8_Postfix>);
inline jule::Str _1a977abdc_gen_div_by_zero_assign(jule::Ref<_1ab009de8_Assign>);
inline jule::Str _1a977abdc_gen_assign(jule::Ref<_1ab009de8_Assign>);
inline jule::Str _1a977abdc_gen_multi_assign(jule::Ref<_1ab009de8_MultiAssign>);
inline jule::Str _1a977abdc_gen_case(jule::Ref<_1ab009de8_Match>,jule::Ref<_1ab009de8_Case>);
inline jule::Str _1a977abdc_gen_match(jule::Ref<_1ab009de8_Match>);
inline jule::Str _1a977abdc_gen_fall_st(jule::Ref<_1ab009de8_FallSt>);
inline jule::Str _1a977abdc_gen_break_st(jule::Ref<_1ab009de8_BreakSt>);
inline jule::Str _1a977abdc_gen_ret_vars(jule::Ref<_1ab009de8_RetSt>);
inline jule::Str _1a977abdc_gen_ret_expr_tuple(jule::Ref<_1ab009de8_RetSt>);
inline jule::Str _1a977abdc_gen_ret_expr(jule::Ref<_1ab009de8_RetSt>);
inline jule::Str _1a977abdc_gen_ret_st(jule::Ref<_1ab009de8_RetSt>);
inline jule::Str _1a977abdc_gen_ret_st_with_defaults(jule::Ref<_1ac6d02c0_TypeKind>);
inline jule::Str _1a977abdc_gen_recover(jule::Ref<_1ab009de8_Recover>);
inline jule::Str _1a977abdc_gen_data_expr(jule::Ref<_1ab00dbcc_Data>);
inline jule::Str _1a977abdc_gen_scope_var(jule::Ref<_1b623eab2_Var>);
inline jule::Str _1a977abdc_gen_st(jule::Any);
inline jule::Str _1a977abdc_gen_scope(jule::Ref<_1ab009de8_Scope>);
inline jule::Str _1a977abdc_gen_fn_scope(jule::Ref<_1b557cd24_FnIns>);
inline jule::Str _1a977abdc_gen_method_scope(jule::Ref<_1b557cd24_FnIns>);
inline jule::Str _1aad99bde_concat_all_parts(jule::Slice<jule::Str>);
inline jule::Str _1aad99bde_get_accessor(jule::Ref<_1ac6d02c0_TypeKind>);
inline jule::Str _1aad99bde_decompose_common_esq(jule::U8);
inline jule::Str _1aad99bde_sbtoa(jule::U8);
inline jule::Str _1aad99bde_get_str_model(jule::Ref<_1ac90c3ed_Const>);
inline jule::Str _1aad99bde_get_bool_model(jule::Ref<_1ac90c3ed_Const>);
inline jule::Str _1aad99bde_get_nil_model(void);
inline jule::Str _1aad99bde_gen_float_special_cases(jule::F64);
inline jule::Str _1aad99bde_ftoa(jule::F64,jule::Int);
inline jule::Str _1aad99bde_get_f32_model(jule::Ref<_1ac90c3ed_Const>);
inline jule::Str _1aad99bde_get_f64_model(jule::Ref<_1ac90c3ed_Const>);
inline jule::Str _1aad99bde_get_float_model(jule::Ref<_1ab00dbcc_Data>);
inline jule::Str _1aad99bde_i64toa(jule::I64);
inline jule::Str _1aad99bde_get_i64_model(jule::Ref<_1ac90c3ed_Const>);
inline jule::Str _1aad99bde_u64toa(jule::U64);
inline jule::Str _1aad99bde_get_u64_model(jule::Ref<_1ac90c3ed_Const>);
inline jule::Str _1aad99bde_gen_const_expr(jule::Ref<_1ab00dbcc_Data>);
inline jule::Str _1aad99bde_gen_const_expr_model(jule::Ref<_1ac90c3ed_Const>);
inline jule::Str _1aad99bde_gen_div_by_zero_binop_expr_model(jule::Str,jule::Any,jule::Any);
inline jule::Str _1aad99bde_gen_binop_expr_model(jule::Ref<_1ab33d083_BinopExprModel>);
inline jule::Str _1aad99bde_gen_var_expr_model(jule::Ref<_1b623eab2_Var>);
inline jule::Str _1aad99bde_gen_struct_expr_model(jule::Ref<_1b5e07a00_Struct>);
inline jule::Str _1aad99bde_gen_struct_ins_expr_model(jule::Ref<_1b5e07a00_StructIns>);
inline jule::Str _1aad99bde_gen_unary_expr_model(jule::Ref<_1ab33d083_UnaryExprModel>);
inline jule::Str _1aad99bde_gen_get_ref_ptr_expr_model(jule::Ref<_1ab33d083_GetRefPtrExprModel>);
inline jule::Str _1aad99bde_gen_cpp_struct_lit_expr_model(jule::Ref<_1ab33d083_StructLitExprModel>);
inline jule::Str _1aad99bde_gen_struct_lit_expr_model(jule::Ref<_1ab33d083_StructLitExprModel>);
inline jule::Str _1aad99bde_gen_alloc_struct_lit_expr_model(jule::Ref<_1ab33d083_AllocStructLitExprModel>);
inline jule::Str _1aad99bde_gen_casting_expr_model(jule::Ref<_1ab33d083_CastingExprModel>);
inline jule::Str _1aad99bde_gen_arg_expr_models(jule::Slice<jule::Any>);
inline jule::Str _1aad99bde_gen_expr_model_for_call(jule::Any);
inline jule::Str _1aad99bde_gen_fn_call_expr_model(jule::Ref<_1ab33d083_FnCallExprModel>);
inline jule::Str _1aad99bde_gen_slice_expr_model(jule::Ref<_1ab33d083_SliceExprModel>);
inline jule::Str _1aad99bde_gen_indexing_expr_model(jule::Ref<_1ab33d083_IndexigExprModel>);
inline jule::Str _1aad99bde_gen_anon_fn_expr_model(jule::Ref<_1ab33d083_AnonFnExprModel>);
inline jule::Str _1aad99bde_gen_map_expr_model(jule::Ref<_1ab33d083_MapExprModel>);
inline jule::Str _1aad99bde_gen_slicing_expr_model(jule::Ref<_1ab33d083_SlicingExprModel>);
inline jule::Str _1aad99bde_gen_trait_sub_ident_expr_model(jule::Ref<_1ab33d083_TraitSubIdentExprModel>);
inline jule::Str _1aad99bde_gen_struct_sub_ident_expr_model(jule::Ref<_1ab33d083_StructSubIdentExprModel>);
inline jule::Str _1aad99bde_gen_common_ident_expr_model(jule::Ref<_1ab33d083_CommonIdentExprModel>);
inline jule::Str _1aad99bde_gen_common_sub_ident_expr_model(jule::Ref<_1ab33d083_CommonSubIdentExprModel>);
inline jule::Str _1aad99bde_gen_array_expr_model(jule::Ref<_1ab33d083_ArrayExprModel>);
inline jule::Str _1aad99bde_gen_fn_ins_expr_model_common(jule::Ref<_1b557cd24_FnIns>);
inline jule::Str _1aad99bde_gen_fn_ins_expr_model(jule::Ref<_1b557cd24_FnIns>);
inline jule::Str _1aad99bde_gen_tuple_expr_model(jule::Ref<_1ab33d083_TupleExprModel>);
inline jule::Str _1aad99bde_gen_builtin_new_call_expr_model(jule::Ref<_1ab33d083_BuiltinNewCallExprModel>);
inline jule::Str _1aad99bde_gen_builtin_out_call_expr_model(jule::Ref<_1ab33d083_BuiltinOutCallExprModel>);
inline jule::Str _1aad99bde_gen_builtin_outln_call_expr_model(jule::Ref<_1ab33d083_BuiltinOutlnCallExprModel>);
inline jule::Str _1aad99bde_gen_builtin_real_call_expr_model(jule::Ref<_1ab33d083_BuiltinRealCallExprModel>);
inline jule::Str _1aad99bde_gen_builtin_drop_call_expr_model(jule::Ref<_1ab33d083_BuiltinDropCallExprModel>);
inline jule::Str _1aad99bde_gen_builtin_panic_call_expr_model(jule::Ref<_1ab33d083_BuiltinPanicCallExprModel>);
inline jule::Str _1aad99bde_gen_builtin_make_call_expr_model(jule::Ref<_1ab33d083_BuiltinMakeCallExprModel>);
inline jule::Str _1aad99bde_gen_builtin_append_call_expr_model_assign_opt(jule::Bool,jule::Str&,jule::Ref<_1ac6d02c0_TypeKind>&,jule::Ref<_1ab33d083_SliceExprModel>&,jule::Ref<_1ab33d083_BuiltinAppendCallExprModel>&);
inline std::tuple<jule::Str,jule::Bool> _1aad99bde_gen_builtin_append_call_expr_model_assign(jule::Any,jule::Ref<_1ab33d083_BuiltinAppendCallExprModel>);
inline jule::Str _1aad99bde_gen_builtin_append_call_expr_model(jule::Ref<_1ab33d083_BuiltinAppendCallExprModel>);
inline jule::Str _1aad99bde_gen_builtin_clone_call_expr_model(jule::Ref<_1ab33d083_BuiltinCloneCallExprModel>);
inline jule::Str _1aad99bde_gen_sizeof_expr_model(jule::Ref<_1ab33d083_SizeofExprModel>);
inline jule::Str _1aad99bde_gen_alignof_expr_model(jule::Ref<_1ab33d083_AlignofExprModel>);
inline jule::Str _1aad99bde_gen_rune_expr_model(jule::Ref<_1ab33d083_RuneExprModel>);
inline jule::Str _1aad99bde_gen_builtin_error_trait_sub_ident_expr_model(jule::Ref<_1ab33d083_BuiltinErrorTraitSubIdentExprModel>);
inline jule::Str _1aad99bde_gen_explicit_deref_expr_model(jule::Ref<_1ab33d083_ExplicitDerefExprModel>);
inline jule::Str _1aad99bde_gen_struct_static_ident_expr_model(jule::Ref<_1ab33d083_StructStaticIdentExprModel>);
inline jule::Str _1aad99bde_gen_integrated_to_str_expr_model(jule::Ref<_1ab33d083_IntegratedToStrExprModel>);
inline jule::Str _1aad99bde_gen_ternary_expr_model(jule::Ref<_1ab33d083_TernaryExprModel>);
inline jule::Str _1aad99bde_gen_expr_model(jule::Any);
inline jule::Str _1aad99bde_gen_expr(jule::Any);
inline jule::Str _1aad99bde_gen_val(jule::Ref<_1ab00dbcc_Value>);
inline jule::Str _1aad99bde_get_init_expr(jule::Ref<_1ac6d02c0_TypeKind>);
inline jule::Str _1acca738b_get_derive_fn_decl_clone(jule::Ref<_1b5e07a00_Struct>&);
inline jule::Str _1acca738b_get_derive_fn_def_clone(jule::Ref<_1b5e07a00_Struct>&);
inline jule::Str _1acde36d6_as_ident(jule::Str);
inline jule::Str _1acde36d6_as_jt(jule::Str);
inline jule::Str _1acde36d6_get_addr_as_ident(jule::Uintptr);
inline jule::Str _1acde36d6_as_out_ident(jule::Str,jule::Uintptr);
inline jule::Str _1acde36d6_as_local_ident(jule::Int,jule::Int,jule::Str);
inline jule::Str _1acde36d6_fn_out_ident(jule::Ref<_1b557cd24_Fn>&);
inline jule::Str _1acde36d6_fn_ins_out_ident(jule::Ref<_1b557cd24_FnIns>&);
inline jule::Str _1acde36d6_trait_out_ident(jule::Ref<_1aaee9091_Trait>);
inline jule::Str _1acde36d6_param_out_ident(jule::Ref<_1b557cd24_Param>&);
inline jule::Str _1acde36d6_struct_out_ident(jule::Ref<_1b5e07a00_Struct>&);
inline jule::Str _1acde36d6_struct_ins_out_ident(jule::Ref<_1b5e07a00_StructIns>&);
inline jule::Str _1acde36d6_field_out_ident(jule::Ref<_1b5e07a00_Field>&);
inline jule::Str _1acde36d6_var_out_ident(jule::Ref<_1b623eab2_Var>);
inline jule::Str _1acde36d6_iter_begin_label_ident(jule::Uintptr);
inline jule::Str _1acde36d6_iter_end_label_ident(jule::Uintptr);
inline jule::Str _1acde36d6_iter_next_label_ident(jule::Uintptr);
inline jule::Str _1acde36d6_label_ident(jule::Str);
inline jule::Str _1acde36d6_match_end_label_ident(jule::Uintptr);
inline jule::Str _1acde36d6_case_begin_label_ident(jule::Uintptr);
inline jule::Str _1acde36d6_case_end_label_ident(jule::Uintptr);
inline jule::Bool _1ace28a7e_any_equals_0(jule::Ref<_1b623eab2_Var>&,jule::Any&);
inline jule::Bool _1ace28a7e_any_equals_1(jule::Ref<_1b5e07a00_FieldIns>&,jule::Any&);
inline jule::Ref<_1b61ca014_Directive> _1ace28a7e_find_directive(jule::Slice<jule::Ref<_1b61ca014_Directive>>&,jule::Str);
inline jule::Bool _1ace28a7e_has_directive(jule::Slice<jule::Ref<_1b61ca014_Directive>>&,jule::Str);
inline jule::Str _1ace28a7e_gen_prim_kind(jule::Ref<_1ac6d02c0_Prim>);
inline jule::Str _1ace28a7e_gen_tuple_kind(jule::Ref<_1ac6d02c0_Tuple>);
inline jule::Str _1ace28a7e_as_ref_kind(jule::Str);
inline jule::Str _1ace28a7e_gen_ref_kind(jule::Ref<_1ac6d02c0_Ref>);
inline jule::Str _1ace28a7e_gen_ptr_kind(jule::Ref<_1ac6d02c0_Ptr>);
inline jule::Str _1ace28a7e_gen_enum_kind(jule::Ref<_1a909ac6b_Enum>);
inline jule::Str _1ace28a7e_as_slice_kind(jule::Ref<_1ac6d02c0_TypeKind>);
inline jule::Str _1ace28a7e_gen_slice_kind(jule::Ref<_1ac6d02c0_Slc>);
inline jule::Str _1ace28a7e_gen_map_kind(jule::Ref<_1ac6d02c0_Map>);
inline jule::Str _1ace28a7e_gen_trait_kind_from_ident(jule::Str);
inline jule::Str _1ace28a7e_gen_trait_kind(jule::Ref<_1aaee9091_Trait>);
inline jule::Str _1ace28a7e_gen_struct_kind(jule::Ref<_1b5e07a00_Struct>);
inline jule::Str _1ace28a7e_gen_struct_kind_ins(jule::Ref<_1b5e07a00_StructIns>);
inline jule::Str _1ace28a7e_gen_array_kind(jule::Ref<_1ac6d02c0_Arr>);
inline jule::Str _1ace28a7e_gen_fn_anon_decl(jule::Ref<_1b557cd24_FnIns>);
inline jule::Str _1ace28a7e_gen_fn_kind(jule::Ref<_1b557cd24_FnIns>);
inline jule::Str _1ace28a7e_gen_type_kind(jule::Ref<_1ac6d02c0_TypeKind>);
inline void _1acde57a4_add_indent(void);
inline void _1acde57a4_done_indent(void);
inline jule::Str _1acde57a4_indent(void);
inline jule::Bool _1acde57a4_is_cpp_header_file(jule::Str);
inline jule::Str _1acde57a4_gen_links(jule::Ref<_1b60cd1d1_IR>&);
inline jule::Str _1acde57a4_gen_fn_result(jule::Ref<_1b557cd24_Fn>&);
inline jule::Str _1acde57a4_gen_fn_ins_result(jule::Ref<_1b557cd24_FnIns>&);
inline jule::Str _1acde57a4_gen_param_prototype(jule::Ref<_1b557cd24_Param>&);
inline jule::Str _1acde57a4_gen_param_ins(jule::Ref<_1b557cd24_ParamIns>&);
inline jule::Str _1acde57a4_gen_param_ins_prototype(jule::Ref<_1b557cd24_ParamIns>&);
inline jule::Str _1acde57a4_gen_param(jule::Ref<_1b557cd24_Param>&);
inline jule::Str _1acde57a4_gen_params(jule::Slice<jule::Ref<_1b557cd24_Param>>&);
inline jule::Str _1acde57a4_gen_params_ins(jule::Slice<jule::Ref<_1b557cd24_ParamIns>>&);
inline jule::Str _1acde57a4_gen_params_prototypes(jule::Slice<jule::Ref<_1b557cd24_ParamIns>>&);
inline jule::Str _1acde57a4_gen_trait(jule::Ref<_1aaee9091_Trait>&);
inline jule::Str _1acde57a4_gen_traits_tbl(jule::Ref<_1ab00cc20_SymbolTable>&);
inline jule::Str _1acde57a4_gen_traits_pkg(jule::Ref<_1ab194c20_Package>&);
inline jule::Str _1acde57a4_gen_traits(jule::Ref<_1b60cd1d1_IR>&);
inline jule::Str _1acde57a4_gen_trait_prototype(jule::Ref<_1aaee9091_Trait>&);
inline jule::Str _1acde57a4_gen_trait_prototypes(jule::Ref<_1ab194c20_Package>&);
inline jule::Str _1acde57a4_gen_struct_plain_prototype(jule::Ref<_1b5e07a00_Struct>&);
inline jule::Str _1acde57a4_gen_struct_plain_prototypes(jule::Slice<jule::Ref<_1b5e07a00_Struct>>&);
inline jule::Str _1acde57a4_gen_struct_traits(jule::Ref<_1b5e07a00_Struct>&);
inline jule::Str _1acde57a4_gen_field_decl(jule::Ref<_1b5e07a00_FieldIns>&);
inline jule::Str _1acde57a4_gen_struct_self_field_type_kind(jule::Ref<_1b5e07a00_StructIns>&);
inline jule::Str _1acde57a4_gen_struct_self_field(jule::Ref<_1b5e07a00_StructIns>&);
inline jule::Str _1acde57a4_gen_struct_self_field_init_st(jule::Ref<_1b5e07a00_StructIns>&);
inline jule::Str _1acde57a4_gen_struct_constructor(jule::Ref<_1b5e07a00_StructIns>&);
inline jule::Str _1acde57a4_gen_struct_destructor(jule::Ref<_1b5e07a00_StructIns>&);
inline jule::Str _1acde57a4_gen_struct_operators(jule::Ref<_1b5e07a00_StructIns>&);
inline jule::Str _1acde57a4_gen_struct_derive_defs_prototypes(jule::Ref<_1b5e07a00_StructIns>&);
inline jule::Str _1acde57a4_gen_struct_ins_prototype(jule::Ref<_1b5e07a00_StructIns>&);
inline jule::Str _1acde57a4_gen_struct_prototype(jule::Ref<_1b5e07a00_Struct>&);
inline jule::Str _1acde57a4_gen_struct_prototypes(jule::Slice<jule::Ref<_1b5e07a00_Struct>>&);
inline jule::Str _1acde57a4_gen_fn_decl_head(jule::Ref<_1b557cd24_FnIns>&,jule::Bool);
inline jule::Str _1acde57a4_gen_fn_prototype(jule::Ref<_1b557cd24_Fn>&,jule::Bool);
inline jule::Str _1acde57a4_gen_fn_prototypes(jule::Ref<_1ab194c20_Package>&);
inline jule::Str _1acde57a4_gen_prototypes(jule::Ref<_1b60cd1d1_IR>&);
inline jule::Str _1acde57a4_gen_var_init_expr(jule::Ref<_1b623eab2_Var>&,jule::Str);
inline jule::Str _1acde57a4_gen_var(jule::Ref<_1b623eab2_Var>);
inline jule::Str _1acde57a4_gen_globals(jule::Slice<jule::Ref<_1b623eab2_Var>>&);
inline jule::Str _1acde57a4_gen_fn(jule::Ref<_1b557cd24_Fn>&);
inline jule::Str _1acde57a4_gen_pkg_fns(jule::Ref<_1ab194c20_Package>&);
inline jule::Str _1acde57a4_gen_struct_method_defs(jule::Ref<_1b5e07a00_StructIns>&);
inline jule::Str _1acde57a4_gen_struct_ostream(jule::Ref<_1b5e07a00_StructIns>&);
inline jule::Str _1acde57a4_gen_struct_derive_defs(jule::Ref<_1b5e07a00_StructIns>&);
inline jule::Str _1acde57a4_gen_struct_ins(jule::Ref<_1b5e07a00_StructIns>&);
inline jule::Str _1acde57a4_gen_struct(jule::Ref<_1b5e07a00_Struct>&);
inline jule::Str _1acde57a4_gen_structs(jule::Slice<jule::Ref<_1b5e07a00_Struct>>&);
inline jule::Str _1acde57a4_gen_fns(jule::Ref<_1b60cd1d1_IR>&);
inline void _1acde57a4_push_init(jule::Ref<_1ab194c20_Package>&,jule::Str&);
inline jule::Str _1acde57a4_gen_init_caller(jule::Ref<_1b60cd1d1_IR>&);
inline void _1acde57a4_append_standard(jule::Str&,jule::Str,jule::Str);
inline jule::Str _1acde57a4_gen(jule::Ref<_1b60cd1d1_IR>&);
inline jule::Str _1cdd02591_str_repeat(jule::Str,jule::Int);
inline void _1cdd02591_print_error_message(jule::Str);
inline void _1cdd02591_help(void);
inline void _1cdd02591_version(void);
inline void _1cdd02591_tool_distos(void);
inline void _1cdd02591_tool_distarch(void);
inline void _1cdd02591_tool(void);
inline void _1cdd02591_julenv(void);
inline jule::Bool _1cdd02591_process_command(void);
inline void _1cdd02591_exit_err(jule::Str);
void entry_point(void);
inline void _1cde501b1___init_common(void);
inline void _1cde6d971_init(void);
inline jule::Int _1cde6b6e9_system(jule::Str);
inline std::tuple<jule::Str,jule::Str> _1cde6b6e9_get_option(jule::Slice<jule::Str>&,jule::Int&);
inline jule::Str _1cde6b6e9_get_option_value(jule::Slice<jule::Str>&,jule::Int&);
inline void _1cde6b6e9_parse_out_option(jule::Slice<jule::Str>&,jule::Int&);
inline void _1cde6b6e9_parse_opt_option(jule::Slice<jule::Str>&,jule::Int&);
inline void _1cde6b6e9_check_target_arch(jule::Str);
inline void _1cde6b6e9_check_target_os(jule::Str);
inline void _1cde6b6e9_parse_target_option(jule::Slice<jule::Str>&,jule::Int&);
inline void _1cde6b6e9_parse_compiler_option(jule::Slice<jule::Str>&,jule::Int&);
inline jule::Str _1cde6b6e9_parse_options(jule::Slice<jule::Str>&);
inline void _1cde6b6e9_write_output(jule::Str,jule::Str);
inline void _1cde6b6e9_clear_objects(void);
inline void _1cde6b6e9_compile_ir(jule::Str,jule::Str);
inline void _1cde6b6e9_do_spell(jule::Str,jule::Str,jule::Str);
inline void _1cde6b6e9_check_mode(void);
inline void _1cde6b6e9_check_compiler(void);
inline void _1cde6b6e9_set(void);
inline jule::Bool _1cde6b6e9_is_cpp_source_file(jule::Str);
inline std::tuple<jule::Str,jule::Str> _1cde6b6e9_gen_compile_cmd(jule::Str,jule::Ref<_1b60cd1d1_IR>&);
inline jule::Str _1cde6b6e9_get_compile_path(void);
inline void _1cde6b6e9_apply_target_independent_optimizations(jule::Ref<_1b60cd1d1_IR>&);
inline void _1cde6b6e9_compile_command(void);


static jule::Str _1cde6b6e9_COMPILER = jule::Str("", 0);
static jule::Str _1cde6b6e9_COMPILER_PATH = jule::Str("", 0);
static jule::Str _1cde6b6e9_OUT_DIR = jule::Str("dist", 4);
static jule::Int _1cde6b6e9_MODE = 0LLU;
static jule::Str _1cde6b6e9_OUT_NAME = jule::Str("ir.cpp", 6);
static jule::Str _1cde6b6e9_OUT = jule::Str("", 0);
static jule::Str _1cde6b6e9_CPP_STD = jule::Str("c++17", 5);
static jule::Int _1cde6b6e9_SEMA_FLAGS = 0LL;
static jule::Uintptr _1cdd8e298_STDIN = 0LLU;
static jule::Uintptr _1cdd8e298_STDOUT = 1LLU;
static jule::Uintptr _1cdd8e298_STDERR = 2LLU;
static jule::Slice<jule::Str> _1cdd79b13_ARGS = nullptr;
static jule::Slice<jule::Str> _1cdd79b13_ENV = nullptr;
static jule::Array<jule::Str,4> _1cdee4c4a_CPP_HEADER_EXTS = jule::Array<jule::Str,4>({jule::Str(".h", 2),jule::Str(".hpp", 4),jule::Str(".hxx", 4),jule::Str(".hh", 3)});
static jule::Array<jule::Str,3> _1cdee4c4a_CPP_EXTS = jule::Array<jule::Str,3>({jule::Str(".cpp", 4),jule::Str(".cc", 3),jule::Str(".cxx", 4)});
static jule::Array<jule::Str,1> _1cdee4c4a_OBJECTIVE_CPP_EXTS = jule::Array<jule::Str,1>({jule::Str(".mm", 3)});
static jule::Array<jule::Str,6> _1ce0019d2_DIRECTIVES = jule::Array<jule::Str,6>({jule::Str("cdef", 4),jule::Str("typedef", 7),jule::Str("derive", 6),jule::Str("pass", 4),jule::Str("build", 5),jule::Str("namespace", 9)});
static jule::Array<jule::Str,3> _1cde73206_DISTOS = jule::Array<jule::Str,3>({jule::Str("windows", 7),jule::Str("linux", 5),jule::Str("darwin", 6)});
static jule::Array<jule::Str,3> _1cde73206_DISTARCH = jule::Array<jule::Str,3>({jule::Str("arm64", 5),jule::Str("amd64", 5),jule::Str("i386", 4)});
static jule::Str _1ce0450b9_PATH_STDLIB = jule::Str("", 0);
static jule::Str _1ce0450b9_PATH_EXEC = jule::Str("", 0);
static jule::Str _1ce0450b9_PATH_WD = jule::Str("", 0);
static jule::Str _1ce0450b9_PATH_API = jule::Str("", 0);
static jule::Array<jule::U8,32> _1b5e977e8_DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
static jule::Array<jule::U8,64> _1b5e977e8_DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
static jule::Trait<jule::Error> _1b5e99d17_OVERFLOW_ERROR = jule::new_struct<_1b5e99d17_bits_error>(new( std::nothrow ) _1b5e99d17_bits_error(jule::Str("integer overflow", 16)));
static jule::Trait<jule::Error> _1b5e99d17_DIVIDE_ERROR = jule::new_struct<_1b5e99d17_bits_error>(new( std::nothrow ) _1b5e99d17_bits_error(jule::Str("integer divide by zero", 22)));
static jule::Array<jule::F64,6> _1b5a241aa__SIN = jule::Array<jule::F64,6>({0.00000000015896230157654656,-0.000000025050747762857807,0.0000027557313621385722,-0.0001984126982958954,0.008333333333322118,-0.1666666666666663});
static jule::Array<jule::F64,6> _1b5a241aa__COS = jule::Array<jule::F64,6>({-0.000000000011358536521387682,0.000000002087570084197473,-0.0000002755731417929674,0.000024801587288851704,-0.0013888888888873056,0.041666666666666595});
static jule::Array<jule::F64,3> _1b5a246d8__TAN_P = jule::Array<jule::F64,3>({-13093.693918138379,1153516.6483858742,-17956525.197648488});
static jule::Array<jule::F64,5> _1b5a246d8__TAN_Q = jule::Array<jule::F64,5>({1LL,13681.296347069296,-1320892.3444021097,25008380.18233579,-53869575.592945464});
static jule::Array<jule::U64,20> _1b5a99ebc_M_PI4 = jule::Array<jule::U64,20>({1LLU,5040379952546458195LLU,17892431488136887169LLU,13169980181085364355LLU,18204331823439776451LLU,7946843935494350272LLU,905889640498799673LLU,18175356263134875261LLU,15061281708168349961LLU,15220161563773041794LLU,8296664548579374057LLU,4109744767560208502LLU,4607516669194743839LLU,16023283104648321598LLU,15739233654134936430LLU,11424645774684705882LLU,16883842788696515318LLU,8795094592981902804LLU,15561835991111744016LLU,12395701187267450711LLU});
static jule::Array<jule::F64,6> _1b5b08a97_P_1R8 = jule::Array<jule::F64,6>({0LL,0.11718749999998865,13.239480659307358,412.05185430737856,3874.7453891396053,7914.479540318917});
static jule::Array<jule::F64,5> _1b5b08a97_P_1S8 = jule::Array<jule::F64,5>({114.20737037567841,3650.9308342085346,36956.206026903346,97602.79359349508,30804.27206278888});
static jule::Array<jule::F64,6> _1b5b08a97_P_1R5 = jule::Array<jule::F64,6>({0.000000000013199051955624352,0.1171874931906141,6.802751278684329,108.30818299018911,517.6361395331998,528.7152013633375});
static jule::Array<jule::F64,5> _1b5b08a97_P_1S5 = jule::Array<jule::F64,5>({59.28059872211313,991.4014187336144,5353.26695291488,7844.690317495512,1504.0468881036106});
static jule::Array<jule::F64,6> _1b5b08a97_P_1R3 = jule::Array<jule::F64,6>({0.000000003025039161373736,0.11718686556725359,3.9329775003331564,35.11940355916369,91.05501107507813,48.55906851973649});
static jule::Array<jule::F64,5> _1b5b08a97_P_1S3 = jule::Array<jule::F64,5>({34.79130950012515,336.76245874782575,1046.8713997577513,890.8113463982564,103.78793243963928});
static jule::Array<jule::F64,6> _1b5b08a97_P_1R2 = jule::Array<jule::F64,6>({0.00000010771083010687374,0.11717621946268335,2.368514966676088,12.242610914826123,17.693971127168773,5.073523125888185});
static jule::Array<jule::F64,5> _1b5b08a97_P_1S2 = jule::Array<jule::F64,5>({21.43648593638214,125.29022716840275,232.2764690571628,117.6793732871471,8.364638933716183});
static jule::Array<jule::F64,6> _1b5b08a97_Q_1R8 = jule::Array<jule::F64,6>({0LL,-0.10253906249999271,-16.271753454459,-759.6017225139501,-11849.806670242959,-48438.512428575035});
static jule::Array<jule::F64,6> _1b5b08a97_Q_1S8 = jule::Array<jule::F64,6>({161.3953697007229,7825.385999233485,133875.33628724958,719657.7236832409,666601.2326177764,-294490.26430383464});
static jule::Array<jule::F64,6> _1b5b08a97_Q_1R5 = jule::Array<jule::F64,6>({-0.00000000002089799311417641,-0.10253905024137543,-8.05644828123936,-183.66960747488838,-1373.1937606550816,-2612.4444045321566});
static jule::Array<jule::F64,6> _1b5b08a97_Q_1S5 = jule::Array<jule::F64,6>({81.27655013843358,1991.7987346048596,17468.48519249089,49851.42709103523,27948.075163891812,-4719.183547951285});
static jule::Array<jule::F64,6> _1b5b08a97_Q_1R3 = jule::Array<jule::F64,6>({-0.000000005078312264617666,-0.10253782982083709,-4.610115811394734,-57.847221656278364,-228.2445407376317,-219.21012847890933});
static jule::Array<jule::F64,6> _1b5b08a97_Q_1S3 = jule::Array<jule::F64,6>({47.66515503237295,673.8651126766997,3380.1528667952634,5547.729097207228,1903.119193388108,-135.20119144430734});
static jule::Array<jule::F64,6> _1b5b08a97_Q_1R2 = jule::Array<jule::F64,6>({-0.00000017838172751095887,-0.10251704260798555,-2.7522056827818746,-19.663616264370372,-42.32531333728305,-21.371921170370406});
static jule::Array<jule::F64,6> _1b5b08a97_Q_1S2 = jule::Array<jule::F64,6>({29.533362906052385,252.98154998219053,757.5028348686454,739.3932053204672,155.94900333666612,-4.959498988226282});
static jule::Array<jule::F64,6> _1b5cdb043_P_0R8 = jule::Array<jule::F64,6>({0LL,-0.07031249999999004,-8.081670412753498,-257.06310567970485,-2485.216410094288,-5253.043804907295});
static jule::Array<jule::F64,5> _1b5cdb043_P_0S8 = jule::Array<jule::F64,5>({116.53436461966818,3833.7447536412183,40597.857264847255,116752.97256437592,47627.728414673096});
static jule::Array<jule::F64,6> _1b5cdb043_P_0R5 = jule::Array<jule::F64,6>({-0.00000000001141254646918945,-0.07031249408735993,-4.159610644705878,-67.67476522651673,-331.23129964917297,-346.4333883656049});
static jule::Array<jule::F64,5> _1b5cdb043_P_0S5 = jule::Array<jule::F64,5>({60.753938269230034,1051.2523059570458,5978.970943338558,9625.445143577745,2406.058159229391});
static jule::Array<jule::F64,6> _1b5cdb043_P_0R3 = jule::Array<jule::F64,6>({-0.000000002547046017719519,-0.07031196163814817,-2.409032215495296,-21.96597747348831,-58.07917047017376,-31.44794705948885});
static jule::Array<jule::F64,5> _1b5cdb043_P_0S3 = jule::Array<jule::F64,5>({35.85603380552097,361.51398305030386,1193.6078379211153,1127.9967985690741,173.58093081333575});
static jule::Array<jule::F64,6> _1b5cdb043_P_0R2 = jule::Array<jule::F64,6>({-0.00000008875343330325264,-0.07030309954836247,-1.4507384678095299,-7.635696138235278,-11.193166886035675,-3.2336457935133534});
static jule::Array<jule::F64,5> _1b5cdb043_P_0S2 = jule::Array<jule::F64,5>({22.22029975320888,136.2067942182152,270.4702786580835,153.87539420832033,14.65761769482562});
static jule::Array<jule::F64,6> _1b5cdb043_Q_0R8 = jule::Array<jule::F64,6>({0LL,0.0732421874999935,11.76820646822527,557.6733802564019,8859.197207564686,37014.62677768878});
static jule::Array<jule::F64,6> _1b5cdb043_Q_0S8 = jule::Array<jule::F64,6>({163.77602689568982,8098.344946564498,142538.29141912048,803309.2571195144,840501.5798190605,-343899.2935378666});
static jule::Array<jule::F64,6> _1b5cdb043_Q_0R5 = jule::Array<jule::F64,6>({0.000000000018408596359451553,0.07324217666126848,5.8356350896205695,135.11157728644983,1027.243765961641,1989.9778586460538});
static jule::Array<jule::F64,6> _1b5cdb043_Q_0S5 = jule::Array<jule::F64,6>({82.77661022365378,2077.81416421393,18847.28877857181,56751.11228949473,35976.75384251145,-5354.342756019448});
static jule::Array<jule::F64,6> _1b5cdb043_Q_0R3 = jule::Array<jule::F64,6>({0.000000004377410140897386,0.07324111800429114,3.344231375161707,42.621844074541265,170.8080913405656,166.73394869665117});
static jule::Array<jule::F64,6> _1b5cdb043_Q_0S3 = jule::Array<jule::F64,6>({48.75887297245872,709.689221056606,3704.1482262011136,6460.425167525689,2516.3336892036896,-149.2474518361564});
static jule::Array<jule::F64,6> _1b5cdb043_Q_0R2 = jule::Array<jule::F64,6>({0.00000015044444488698327,0.07322342659630793,1.99819174093816,14.495602934788574,31.666231750478154,16.252707571092927});
static jule::Array<jule::F64,6> _1b5cdb043_Q_0S2 = jule::Array<jule::F64,6>({30.36558483552192,269.34811860804984,844.7837575953201,882.9358451124886,212.66638851179883,-5.3109549388266695});
static jule::Array<jule::F64,12> _1b54d7256__LGAM_A = jule::Array<jule::F64,12>({0.07721566490153287,0.3224670334241136,0.06735230105312927,0.020580808432516733,0.007385550860814029,0.0028905138367341563,0.0011927076318336207,0.0005100697921535113,0.00022086279071390839,0.00010801156724758394,0.000025214456545125733,0.000044864094961891516});
static jule::Array<jule::F64,7> _1b54d7256__LGAM_R = jule::Array<jule::F64,7>({1LL,1.3920053346762105,0.7219355475671381,0.17193386563280308,0.01864591917156529,0.0007779424963818936,0.000007326684307446256});
static jule::Array<jule::F64,7> _1b54d7256__LGAM_S = jule::Array<jule::F64,7>({-0.07721566490153287,0.21498241596060885,0.325778796408931,0.14635047265246445,0.02664227030336386,0.0018402845140733772,0.00003194753265841009});
static jule::Array<jule::F64,15> _1b54d7256__LGAM_T = jule::Array<jule::F64,15>({0.48383612272381005,-0.1475877229945939,0.06462494023913339,-0.032788541075985965,0.01797067508118204,-0.010314224129834144,0.006100538702462913,-0.0036845201678113826,0.0022596478090061247,-0.0014034646998923284,0.000881081882437654,-0.0005385953053567405,0.00031563207090362595,-0.00031275416837512086,0.0003355291926355191});
static jule::Array<jule::F64,6> _1b54d7256__LGAM_U = jule::Array<jule::F64,6>({-0.07721566490153287,0.6328270640250934,1.4549225013723477,0.9777175279633727,0.22896372806469245,0.013381091853678766});
static jule::Array<jule::F64,6> _1b54d7256__LGAM_V = jule::Array<jule::F64,6>({1LL,2.4559779371304113,2.128489763798934,0.7692851504566728,0.10422264559336913,0.003217092422824239});
static jule::Array<jule::F64,7> _1b54d7256__LGAM_W = jule::Array<jule::F64,7>({0.4189385332046727,0.08333333333333297,-0.0027777777772877554,0.0007936505586430196,-0.00059518755745034,0.0008363399189962821,-0.0016309293409657527});
static jule::Array<jule::F64,3> _1b551b2ce_TANH_P = jule::Array<jule::F64,3>({-0.9643991794250523,-99.28772310019185,-1614.6876844170845});
static jule::Array<jule::F64,3> _1b551b2ce_TANH_Q = jule::Array<jule::F64,3>({112.81167849163293,2235.4883906010045,4844.063053251255});
static jule::Array<jule::F64,7> _1b5d5c8bc__GAM_P = jule::Array<jule::F64,7>({0.00016011952247675185,0.0011913514700658638,0.010421379756176158,0.04763678004571372,0.20744822764843598,0.4942148268014971,1LL});
static jule::Array<jule::F64,8> _1b5d5c8bc__GAM_Q = jule::Array<jule::F64,8>({-0.000023158187332412014,0.0005396055804933034,-0.004456419138517973,0.011813978522206043,0.035823639860549865,-0.23459179571824335,0.0714304917030273,1LL});
static jule::Array<jule::F64,5> _1b5d5c8bc__GAM_S = jule::Array<jule::F64,5>({0.0007873113957930937,-0.00022954996161337813,-0.0026813261780578124,0.0034722222160545866,0.08333333333334822});
static jule::Array<jule::F64,32> _1b6e3d43b_POW10_TAB = jule::Array<jule::F64,32>({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0,100000000000000000000000.0,1000000000000000000000000.0,10000000000000000000000000.0,100000000000000000000000000.0,1000000000000000000000000000.0,10000000000000000000000000000.0,100000000000000000000000000000.0,1000000000000000000000000000000.0,10000000000000000000000000000000.0});
static jule::Array<jule::F64,10> _1b6e3d43b_POW10_POSTAB32 = jule::Array<jule::F64,10>({1LL,100000000000000000000000000000000.0,10000000000000000000000000000000000000000000000000000000000000000.0,1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0,100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0,10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0,1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0,100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0,10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0,1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0});
static jule::Array<jule::F64,11> _1b6e3d43b_POW10_NEGTAB32 = jule::Array<jule::F64,11>({1LL,0.00000000000000000000000000000001,0.0000000000000000000000000000000000000000000000000000000000000001,0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001,0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001,0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001,0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001,0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001,0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001,0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001,0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001});
static _1cdd4411b_FloatInfo _1cdd4411b_F32_INFO = _1cdd4411b_FloatInfo(23LLU,8LLU,-127LL);
static _1cdd4411b_FloatInfo _1cdd4411b_F64_INFO = _1cdd4411b_FloatInfo(52LLU,11LLU,-1023LL);
static jule::Array<jule::Array<jule::U64,2>,696> _1cde06541_DETAILED_POWS_OF_TEN = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
static jule::Slice<jule::Int> _1cddd8c93_POWTAB = jule::Slice<jule::Int>({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
static jule::Slice<jule::F64> _1cddd8c93_F64_POW10 = jule::Slice<jule::F64>({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
static jule::Slice<jule::F32> _1cddd8c93_F32_POW10 = jule::Slice<jule::F32>({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL});
static jule::Array<jule::U64,20> _1b56e9897_U64_POW10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
static jule::Slice<_1b588cbe4_LeftCheat> _1b588cbe4_LEFTCHEATS = jule::Slice<_1b588cbe4_LeftCheat>({_1b588cbe4_LeftCheat(0LL,jule::Str("", 0)),_1b588cbe4_LeftCheat(1LL,jule::Str("5", 1)),_1b588cbe4_LeftCheat(1LL,jule::Str("25", 2)),_1b588cbe4_LeftCheat(1LL,jule::Str("125", 3)),_1b588cbe4_LeftCheat(2LL,jule::Str("625", 3)),_1b588cbe4_LeftCheat(2LL,jule::Str("3125", 4)),_1b588cbe4_LeftCheat(2LL,jule::Str("15625", 5)),_1b588cbe4_LeftCheat(3LL,jule::Str("78125", 5)),_1b588cbe4_LeftCheat(3LL,jule::Str("390625", 6)),_1b588cbe4_LeftCheat(3LL,jule::Str("1953125", 7)),_1b588cbe4_LeftCheat(4LL,jule::Str("9765625", 7)),_1b588cbe4_LeftCheat(4LL,jule::Str("48828125", 8)),_1b588cbe4_LeftCheat(4LL,jule::Str("244140625", 9)),_1b588cbe4_LeftCheat(4LL,jule::Str("1220703125", 10)),_1b588cbe4_LeftCheat(5LL,jule::Str("6103515625", 10)),_1b588cbe4_LeftCheat(5LL,jule::Str("30517578125", 11)),_1b588cbe4_LeftCheat(5LL,jule::Str("152587890625", 12)),_1b588cbe4_LeftCheat(6LL,jule::Str("762939453125", 12)),_1b588cbe4_LeftCheat(6LL,jule::Str("3814697265625", 13)),_1b588cbe4_LeftCheat(6LL,jule::Str("19073486328125", 14)),_1b588cbe4_LeftCheat(7LL,jule::Str("95367431640625", 14)),_1b588cbe4_LeftCheat(7LL,jule::Str("476837158203125", 15)),_1b588cbe4_LeftCheat(7LL,jule::Str("2384185791015625", 16)),_1b588cbe4_LeftCheat(7LL,jule::Str("11920928955078125", 17)),_1b588cbe4_LeftCheat(8LL,jule::Str("59604644775390625", 17)),_1b588cbe4_LeftCheat(8LL,jule::Str("298023223876953125", 18)),_1b588cbe4_LeftCheat(8LL,jule::Str("1490116119384765625", 19)),_1b588cbe4_LeftCheat(9LL,jule::Str("7450580596923828125", 19)),_1b588cbe4_LeftCheat(9LL,jule::Str("37252902984619140625", 20)),_1b588cbe4_LeftCheat(9LL,jule::Str("186264514923095703125", 21)),_1b588cbe4_LeftCheat(10LL,jule::Str("931322574615478515625", 21)),_1b588cbe4_LeftCheat(10LL,jule::Str("4656612873077392578125", 22)),_1b588cbe4_LeftCheat(10LL,jule::Str("23283064365386962890625", 23)),_1b588cbe4_LeftCheat(10LL,jule::Str("116415321826934814453125", 24)),_1b588cbe4_LeftCheat(11LL,jule::Str("582076609134674072265625", 24)),_1b588cbe4_LeftCheat(11LL,jule::Str("2910383045673370361328125", 25)),_1b588cbe4_LeftCheat(11LL,jule::Str("14551915228366851806640625", 26)),_1b588cbe4_LeftCheat(12LL,jule::Str("72759576141834259033203125", 26)),_1b588cbe4_LeftCheat(12LL,jule::Str("363797880709171295166015625", 27)),_1b588cbe4_LeftCheat(12LL,jule::Str("1818989403545856475830078125", 28)),_1b588cbe4_LeftCheat(13LL,jule::Str("9094947017729282379150390625", 28)),_1b588cbe4_LeftCheat(13LL,jule::Str("45474735088646411895751953125", 29)),_1b588cbe4_LeftCheat(13LL,jule::Str("227373675443232059478759765625", 30)),_1b588cbe4_LeftCheat(13LL,jule::Str("1136868377216160297393798828125", 31)),_1b588cbe4_LeftCheat(14LL,jule::Str("5684341886080801486968994140625", 31)),_1b588cbe4_LeftCheat(14LL,jule::Str("28421709430404007434844970703125", 32)),_1b588cbe4_LeftCheat(14LL,jule::Str("142108547152020037174224853515625", 33)),_1b588cbe4_LeftCheat(15LL,jule::Str("710542735760100185871124267578125", 33)),_1b588cbe4_LeftCheat(15LL,jule::Str("3552713678800500929355621337890625", 34)),_1b588cbe4_LeftCheat(15LL,jule::Str("17763568394002504646778106689453125", 35)),_1b588cbe4_LeftCheat(16LL,jule::Str("88817841970012523233890533447265625", 35)),_1b588cbe4_LeftCheat(16LL,jule::Str("444089209850062616169452667236328125", 36)),_1b588cbe4_LeftCheat(16LL,jule::Str("2220446049250313080847263336181640625", 37)),_1b588cbe4_LeftCheat(16LL,jule::Str("11102230246251565404236316680908203125", 38)),_1b588cbe4_LeftCheat(17LL,jule::Str("55511151231257827021181583404541015625", 38)),_1b588cbe4_LeftCheat(17LL,jule::Str("277555756156289135105907917022705078125", 39)),_1b588cbe4_LeftCheat(17LL,jule::Str("1387778780781445675529539585113525390625", 40)),_1b588cbe4_LeftCheat(18LL,jule::Str("6938893903907228377647697925567626953125", 40)),_1b588cbe4_LeftCheat(18LL,jule::Str("34694469519536141888238489627838134765625", 41)),_1b588cbe4_LeftCheat(18LL,jule::Str("173472347597680709441192448139190673828125", 42)),_1b588cbe4_LeftCheat(19LL,jule::Str("867361737988403547205962240695953369140625", 42))});
static jule::Slice<jule::Str> _1b615dbac_OPTIMIZATIONS = nullptr;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__C = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(0LLU,31LLU,1LLU),_1a9930e4c_Range16(127LLU,159LLU,1LLU),_1a9930e4c_Range16(173LLU,1536LLU,1363LLU),_1a9930e4c_Range16(1537LLU,1541LLU,1LLU),_1a9930e4c_Range16(1564LLU,1757LLU,193LLU),_1a9930e4c_Range16(1807LLU,2192LLU,385LLU),_1a9930e4c_Range16(2193LLU,2274LLU,81LLU),_1a9930e4c_Range16(6158LLU,8203LLU,2045LLU),_1a9930e4c_Range16(8204LLU,8207LLU,1LLU),_1a9930e4c_Range16(8234LLU,8238LLU,1LLU),_1a9930e4c_Range16(8288LLU,8292LLU,1LLU),_1a9930e4c_Range16(8294LLU,8303LLU,1LLU),_1a9930e4c_Range16(55296LLU,63743LLU,1LLU),_1a9930e4c_Range16(65279LLU,65529LLU,250LLU),_1a9930e4c_Range16(65530LLU,65531LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(69821LLU,69837LLU,16LLU),_1a9930e4c_Range32(78896LLU,78911LLU,1LLU),_1a9930e4c_Range32(113824LLU,113827LLU,1LLU),_1a9930e4c_Range32(119155LLU,119162LLU,1LLU),_1a9930e4c_Range32(917505LLU,917536LLU,31LLU),_1a9930e4c_Range32(917537LLU,917631LLU,1LLU),_1a9930e4c_Range32(983040LLU,1048573LLU,1LLU),_1a9930e4c_Range32(1048576LLU,1114109LLU,1LLU)}),2LL));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__CC = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(0LLU,31LLU,1LLU),_1a9930e4c_Range16(127LLU,159LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),2LL));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__CF = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(173LLU,1536LLU,1363LLU),_1a9930e4c_Range16(1537LLU,1541LLU,1LLU),_1a9930e4c_Range16(1564LLU,1757LLU,193LLU),_1a9930e4c_Range16(1807LLU,2192LLU,385LLU),_1a9930e4c_Range16(2193LLU,2274LLU,81LLU),_1a9930e4c_Range16(6158LLU,8203LLU,2045LLU),_1a9930e4c_Range16(8204LLU,8207LLU,1LLU),_1a9930e4c_Range16(8234LLU,8238LLU,1LLU),_1a9930e4c_Range16(8288LLU,8292LLU,1LLU),_1a9930e4c_Range16(8294LLU,8303LLU,1LLU),_1a9930e4c_Range16(65279LLU,65529LLU,250LLU),_1a9930e4c_Range16(65530LLU,65531LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(69821LLU,69837LLU,16LLU),_1a9930e4c_Range32(78896LLU,78911LLU,1LLU),_1a9930e4c_Range32(113824LLU,113827LLU,1LLU),_1a9930e4c_Range32(119155LLU,119162LLU,1LLU),_1a9930e4c_Range32(917505LLU,917536LLU,31LLU),_1a9930e4c_Range32(917537LLU,917631LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__CO = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(57344LLU,63743LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(983040LLU,1048573LLU,1LLU),_1a9930e4c_Range32(1048576LLU,1114109LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__CS = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(55296LLU,57343LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__L = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(65LLU,90LLU,1LLU),_1a9930e4c_Range16(97LLU,122LLU,1LLU),_1a9930e4c_Range16(170LLU,181LLU,11LLU),_1a9930e4c_Range16(186LLU,192LLU,6LLU),_1a9930e4c_Range16(193LLU,214LLU,1LLU),_1a9930e4c_Range16(216LLU,246LLU,1LLU),_1a9930e4c_Range16(248LLU,705LLU,1LLU),_1a9930e4c_Range16(710LLU,721LLU,1LLU),_1a9930e4c_Range16(736LLU,740LLU,1LLU),_1a9930e4c_Range16(748LLU,750LLU,2LLU),_1a9930e4c_Range16(880LLU,884LLU,1LLU),_1a9930e4c_Range16(886LLU,887LLU,1LLU),_1a9930e4c_Range16(890LLU,893LLU,1LLU),_1a9930e4c_Range16(895LLU,902LLU,7LLU),_1a9930e4c_Range16(904LLU,906LLU,1LLU),_1a9930e4c_Range16(908LLU,910LLU,2LLU),_1a9930e4c_Range16(911LLU,929LLU,1LLU),_1a9930e4c_Range16(931LLU,1013LLU,1LLU),_1a9930e4c_Range16(1015LLU,1153LLU,1LLU),_1a9930e4c_Range16(1162LLU,1327LLU,1LLU),_1a9930e4c_Range16(1329LLU,1366LLU,1LLU),_1a9930e4c_Range16(1369LLU,1376LLU,7LLU),_1a9930e4c_Range16(1377LLU,1416LLU,1LLU),_1a9930e4c_Range16(1488LLU,1514LLU,1LLU),_1a9930e4c_Range16(1519LLU,1522LLU,1LLU),_1a9930e4c_Range16(1568LLU,1610LLU,1LLU),_1a9930e4c_Range16(1646LLU,1647LLU,1LLU),_1a9930e4c_Range16(1649LLU,1747LLU,1LLU),_1a9930e4c_Range16(1749LLU,1765LLU,16LLU),_1a9930e4c_Range16(1766LLU,1774LLU,8LLU),_1a9930e4c_Range16(1775LLU,1786LLU,11LLU),_1a9930e4c_Range16(1787LLU,1788LLU,1LLU),_1a9930e4c_Range16(1791LLU,1808LLU,17LLU),_1a9930e4c_Range16(1810LLU,1839LLU,1LLU),_1a9930e4c_Range16(1869LLU,1957LLU,1LLU),_1a9930e4c_Range16(1969LLU,1994LLU,25LLU),_1a9930e4c_Range16(1995LLU,2026LLU,1LLU),_1a9930e4c_Range16(2036LLU,2037LLU,1LLU),_1a9930e4c_Range16(2042LLU,2048LLU,6LLU),_1a9930e4c_Range16(2049LLU,2069LLU,1LLU),_1a9930e4c_Range16(2074LLU,2084LLU,10LLU),_1a9930e4c_Range16(2088LLU,2112LLU,24LLU),_1a9930e4c_Range16(2113LLU,2136LLU,1LLU),_1a9930e4c_Range16(2144LLU,2154LLU,1LLU),_1a9930e4c_Range16(2160LLU,2183LLU,1LLU),_1a9930e4c_Range16(2185LLU,2190LLU,1LLU),_1a9930e4c_Range16(2208LLU,2249LLU,1LLU),_1a9930e4c_Range16(2308LLU,2361LLU,1LLU),_1a9930e4c_Range16(2365LLU,2384LLU,19LLU),_1a9930e4c_Range16(2392LLU,2401LLU,1LLU),_1a9930e4c_Range16(2417LLU,2432LLU,1LLU),_1a9930e4c_Range16(2437LLU,2444LLU,1LLU),_1a9930e4c_Range16(2447LLU,2448LLU,1LLU),_1a9930e4c_Range16(2451LLU,2472LLU,1LLU),_1a9930e4c_Range16(2474LLU,2480LLU,1LLU),_1a9930e4c_Range16(2482LLU,2486LLU,4LLU),_1a9930e4c_Range16(2487LLU,2489LLU,1LLU),_1a9930e4c_Range16(2493LLU,2510LLU,17LLU),_1a9930e4c_Range16(2524LLU,2525LLU,1LLU),_1a9930e4c_Range16(2527LLU,2529LLU,1LLU),_1a9930e4c_Range16(2544LLU,2545LLU,1LLU),_1a9930e4c_Range16(2556LLU,2565LLU,9LLU),_1a9930e4c_Range16(2566LLU,2570LLU,1LLU),_1a9930e4c_Range16(2575LLU,2576LLU,1LLU),_1a9930e4c_Range16(2579LLU,2600LLU,1LLU),_1a9930e4c_Range16(2602LLU,2608LLU,1LLU),_1a9930e4c_Range16(2610LLU,2611LLU,1LLU),_1a9930e4c_Range16(2613LLU,2614LLU,1LLU),_1a9930e4c_Range16(2616LLU,2617LLU,1LLU),_1a9930e4c_Range16(2649LLU,2652LLU,1LLU),_1a9930e4c_Range16(2654LLU,2674LLU,20LLU),_1a9930e4c_Range16(2675LLU,2676LLU,1LLU),_1a9930e4c_Range16(2693LLU,2701LLU,1LLU),_1a9930e4c_Range16(2703LLU,2705LLU,1LLU),_1a9930e4c_Range16(2707LLU,2728LLU,1LLU),_1a9930e4c_Range16(2730LLU,2736LLU,1LLU),_1a9930e4c_Range16(2738LLU,2739LLU,1LLU),_1a9930e4c_Range16(2741LLU,2745LLU,1LLU),_1a9930e4c_Range16(2749LLU,2768LLU,19LLU),_1a9930e4c_Range16(2784LLU,2785LLU,1LLU),_1a9930e4c_Range16(2809LLU,2821LLU,12LLU),_1a9930e4c_Range16(2822LLU,2828LLU,1LLU),_1a9930e4c_Range16(2831LLU,2832LLU,1LLU),_1a9930e4c_Range16(2835LLU,2856LLU,1LLU),_1a9930e4c_Range16(2858LLU,2864LLU,1LLU),_1a9930e4c_Range16(2866LLU,2867LLU,1LLU),_1a9930e4c_Range16(2869LLU,2873LLU,1LLU),_1a9930e4c_Range16(2877LLU,2908LLU,31LLU),_1a9930e4c_Range16(2909LLU,2911LLU,2LLU),_1a9930e4c_Range16(2912LLU,2913LLU,1LLU),_1a9930e4c_Range16(2929LLU,2947LLU,18LLU),_1a9930e4c_Range16(2949LLU,2954LLU,1LLU),_1a9930e4c_Range16(2958LLU,2960LLU,1LLU),_1a9930e4c_Range16(2962LLU,2965LLU,1LLU),_1a9930e4c_Range16(2969LLU,2970LLU,1LLU),_1a9930e4c_Range16(2972LLU,2974LLU,2LLU),_1a9930e4c_Range16(2975LLU,2979LLU,4LLU),_1a9930e4c_Range16(2980LLU,2984LLU,4LLU),_1a9930e4c_Range16(2985LLU,2986LLU,1LLU),_1a9930e4c_Range16(2990LLU,3001LLU,1LLU),_1a9930e4c_Range16(3024LLU,3077LLU,53LLU),_1a9930e4c_Range16(3078LLU,3084LLU,1LLU),_1a9930e4c_Range16(3086LLU,3088LLU,1LLU),_1a9930e4c_Range16(3090LLU,3112LLU,1LLU),_1a9930e4c_Range16(3114LLU,3129LLU,1LLU),_1a9930e4c_Range16(3133LLU,3160LLU,27LLU),_1a9930e4c_Range16(3161LLU,3162LLU,1LLU),_1a9930e4c_Range16(3165LLU,3168LLU,3LLU),_1a9930e4c_Range16(3169LLU,3200LLU,31LLU),_1a9930e4c_Range16(3205LLU,3212LLU,1LLU),_1a9930e4c_Range16(3214LLU,3216LLU,1LLU),_1a9930e4c_Range16(3218LLU,3240LLU,1LLU),_1a9930e4c_Range16(3242LLU,3251LLU,1LLU),_1a9930e4c_Range16(3253LLU,3257LLU,1LLU),_1a9930e4c_Range16(3261LLU,3293LLU,32LLU),_1a9930e4c_Range16(3294LLU,3296LLU,2LLU),_1a9930e4c_Range16(3297LLU,3313LLU,16LLU),_1a9930e4c_Range16(3314LLU,3332LLU,18LLU),_1a9930e4c_Range16(3333LLU,3340LLU,1LLU),_1a9930e4c_Range16(3342LLU,3344LLU,1LLU),_1a9930e4c_Range16(3346LLU,3386LLU,1LLU),_1a9930e4c_Range16(3389LLU,3406LLU,17LLU),_1a9930e4c_Range16(3412LLU,3414LLU,1LLU),_1a9930e4c_Range16(3423LLU,3425LLU,1LLU),_1a9930e4c_Range16(3450LLU,3455LLU,1LLU),_1a9930e4c_Range16(3461LLU,3478LLU,1LLU),_1a9930e4c_Range16(3482LLU,3505LLU,1LLU),_1a9930e4c_Range16(3507LLU,3515LLU,1LLU),_1a9930e4c_Range16(3517LLU,3520LLU,3LLU),_1a9930e4c_Range16(3521LLU,3526LLU,1LLU),_1a9930e4c_Range16(3585LLU,3632LLU,1LLU),_1a9930e4c_Range16(3634LLU,3635LLU,1LLU),_1a9930e4c_Range16(3648LLU,3654LLU,1LLU),_1a9930e4c_Range16(3713LLU,3714LLU,1LLU),_1a9930e4c_Range16(3716LLU,3718LLU,2LLU),_1a9930e4c_Range16(3719LLU,3722LLU,1LLU),_1a9930e4c_Range16(3724LLU,3747LLU,1LLU),_1a9930e4c_Range16(3749LLU,3751LLU,2LLU),_1a9930e4c_Range16(3752LLU,3760LLU,1LLU),_1a9930e4c_Range16(3762LLU,3763LLU,1LLU),_1a9930e4c_Range16(3773LLU,3776LLU,3LLU),_1a9930e4c_Range16(3777LLU,3780LLU,1LLU),_1a9930e4c_Range16(3782LLU,3804LLU,22LLU),_1a9930e4c_Range16(3805LLU,3807LLU,1LLU),_1a9930e4c_Range16(3840LLU,3904LLU,64LLU),_1a9930e4c_Range16(3905LLU,3911LLU,1LLU),_1a9930e4c_Range16(3913LLU,3948LLU,1LLU),_1a9930e4c_Range16(3976LLU,3980LLU,1LLU),_1a9930e4c_Range16(4096LLU,4138LLU,1LLU),_1a9930e4c_Range16(4159LLU,4176LLU,17LLU),_1a9930e4c_Range16(4177LLU,4181LLU,1LLU),_1a9930e4c_Range16(4186LLU,4189LLU,1LLU),_1a9930e4c_Range16(4193LLU,4197LLU,4LLU),_1a9930e4c_Range16(4198LLU,4206LLU,8LLU),_1a9930e4c_Range16(4207LLU,4208LLU,1LLU),_1a9930e4c_Range16(4213LLU,4225LLU,1LLU),_1a9930e4c_Range16(4238LLU,4256LLU,18LLU),_1a9930e4c_Range16(4257LLU,4293LLU,1LLU),_1a9930e4c_Range16(4295LLU,4301LLU,6LLU),_1a9930e4c_Range16(4304LLU,4346LLU,1LLU),_1a9930e4c_Range16(4348LLU,4680LLU,1LLU),_1a9930e4c_Range16(4682LLU,4685LLU,1LLU),_1a9930e4c_Range16(4688LLU,4694LLU,1LLU),_1a9930e4c_Range16(4696LLU,4698LLU,2LLU),_1a9930e4c_Range16(4699LLU,4701LLU,1LLU),_1a9930e4c_Range16(4704LLU,4744LLU,1LLU),_1a9930e4c_Range16(4746LLU,4749LLU,1LLU),_1a9930e4c_Range16(4752LLU,4784LLU,1LLU),_1a9930e4c_Range16(4786LLU,4789LLU,1LLU),_1a9930e4c_Range16(4792LLU,4798LLU,1LLU),_1a9930e4c_Range16(4800LLU,4802LLU,2LLU),_1a9930e4c_Range16(4803LLU,4805LLU,1LLU),_1a9930e4c_Range16(4808LLU,4822LLU,1LLU),_1a9930e4c_Range16(4824LLU,4880LLU,1LLU),_1a9930e4c_Range16(4882LLU,4885LLU,1LLU),_1a9930e4c_Range16(4888LLU,4954LLU,1LLU),_1a9930e4c_Range16(4992LLU,5007LLU,1LLU),_1a9930e4c_Range16(5024LLU,5109LLU,1LLU),_1a9930e4c_Range16(5112LLU,5117LLU,1LLU),_1a9930e4c_Range16(5121LLU,5740LLU,1LLU),_1a9930e4c_Range16(5743LLU,5759LLU,1LLU),_1a9930e4c_Range16(5761LLU,5786LLU,1LLU),_1a9930e4c_Range16(5792LLU,5866LLU,1LLU),_1a9930e4c_Range16(5873LLU,5880LLU,1LLU),_1a9930e4c_Range16(5888LLU,5905LLU,1LLU),_1a9930e4c_Range16(5919LLU,5937LLU,1LLU),_1a9930e4c_Range16(5952LLU,5969LLU,1LLU),_1a9930e4c_Range16(5984LLU,5996LLU,1LLU),_1a9930e4c_Range16(5998LLU,6000LLU,1LLU),_1a9930e4c_Range16(6016LLU,6067LLU,1LLU),_1a9930e4c_Range16(6103LLU,6108LLU,5LLU),_1a9930e4c_Range16(6176LLU,6264LLU,1LLU),_1a9930e4c_Range16(6272LLU,6276LLU,1LLU),_1a9930e4c_Range16(6279LLU,6312LLU,1LLU),_1a9930e4c_Range16(6314LLU,6320LLU,6LLU),_1a9930e4c_Range16(6321LLU,6389LLU,1LLU),_1a9930e4c_Range16(6400LLU,6430LLU,1LLU),_1a9930e4c_Range16(6480LLU,6509LLU,1LLU),_1a9930e4c_Range16(6512LLU,6516LLU,1LLU),_1a9930e4c_Range16(6528LLU,6571LLU,1LLU),_1a9930e4c_Range16(6576LLU,6601LLU,1LLU),_1a9930e4c_Range16(6656LLU,6678LLU,1LLU),_1a9930e4c_Range16(6688LLU,6740LLU,1LLU),_1a9930e4c_Range16(6823LLU,6917LLU,94LLU),_1a9930e4c_Range16(6918LLU,6963LLU,1LLU),_1a9930e4c_Range16(6981LLU,6988LLU,1LLU),_1a9930e4c_Range16(7043LLU,7072LLU,1LLU),_1a9930e4c_Range16(7086LLU,7087LLU,1LLU),_1a9930e4c_Range16(7098LLU,7141LLU,1LLU),_1a9930e4c_Range16(7168LLU,7203LLU,1LLU),_1a9930e4c_Range16(7245LLU,7247LLU,1LLU),_1a9930e4c_Range16(7258LLU,7293LLU,1LLU),_1a9930e4c_Range16(7296LLU,7304LLU,1LLU),_1a9930e4c_Range16(7312LLU,7354LLU,1LLU),_1a9930e4c_Range16(7357LLU,7359LLU,1LLU),_1a9930e4c_Range16(7401LLU,7404LLU,1LLU),_1a9930e4c_Range16(7406LLU,7411LLU,1LLU),_1a9930e4c_Range16(7413LLU,7414LLU,1LLU),_1a9930e4c_Range16(7418LLU,7424LLU,6LLU),_1a9930e4c_Range16(7425LLU,7615LLU,1LLU),_1a9930e4c_Range16(7680LLU,7957LLU,1LLU),_1a9930e4c_Range16(7960LLU,7965LLU,1LLU),_1a9930e4c_Range16(7968LLU,8005LLU,1LLU),_1a9930e4c_Range16(8008LLU,8013LLU,1LLU),_1a9930e4c_Range16(8016LLU,8023LLU,1LLU),_1a9930e4c_Range16(8025LLU,8031LLU,2LLU),_1a9930e4c_Range16(8032LLU,8061LLU,1LLU),_1a9930e4c_Range16(8064LLU,8116LLU,1LLU),_1a9930e4c_Range16(8118LLU,8124LLU,1LLU),_1a9930e4c_Range16(8126LLU,8130LLU,4LLU),_1a9930e4c_Range16(8131LLU,8132LLU,1LLU),_1a9930e4c_Range16(8134LLU,8140LLU,1LLU),_1a9930e4c_Range16(8144LLU,8147LLU,1LLU),_1a9930e4c_Range16(8150LLU,8155LLU,1LLU),_1a9930e4c_Range16(8160LLU,8172LLU,1LLU),_1a9930e4c_Range16(8178LLU,8180LLU,1LLU),_1a9930e4c_Range16(8182LLU,8188LLU,1LLU),_1a9930e4c_Range16(8305LLU,8319LLU,14LLU),_1a9930e4c_Range16(8336LLU,8348LLU,1LLU),_1a9930e4c_Range16(8450LLU,8455LLU,5LLU),_1a9930e4c_Range16(8458LLU,8467LLU,1LLU),_1a9930e4c_Range16(8469LLU,8473LLU,4LLU),_1a9930e4c_Range16(8474LLU,8477LLU,1LLU),_1a9930e4c_Range16(8484LLU,8490LLU,2LLU),_1a9930e4c_Range16(8491LLU,8493LLU,1LLU),_1a9930e4c_Range16(8495LLU,8505LLU,1LLU),_1a9930e4c_Range16(8508LLU,8511LLU,1LLU),_1a9930e4c_Range16(8517LLU,8521LLU,1LLU),_1a9930e4c_Range16(8526LLU,8579LLU,53LLU),_1a9930e4c_Range16(8580LLU,11264LLU,2684LLU),_1a9930e4c_Range16(11265LLU,11492LLU,1LLU),_1a9930e4c_Range16(11499LLU,11502LLU,1LLU),_1a9930e4c_Range16(11506LLU,11507LLU,1LLU),_1a9930e4c_Range16(11520LLU,11557LLU,1LLU),_1a9930e4c_Range16(11559LLU,11565LLU,6LLU),_1a9930e4c_Range16(11568LLU,11623LLU,1LLU),_1a9930e4c_Range16(11631LLU,11648LLU,17LLU),_1a9930e4c_Range16(11649LLU,11670LLU,1LLU),_1a9930e4c_Range16(11680LLU,11686LLU,1LLU),_1a9930e4c_Range16(11688LLU,11694LLU,1LLU),_1a9930e4c_Range16(11696LLU,11702LLU,1LLU),_1a9930e4c_Range16(11704LLU,11710LLU,1LLU),_1a9930e4c_Range16(11712LLU,11718LLU,1LLU),_1a9930e4c_Range16(11720LLU,11726LLU,1LLU),_1a9930e4c_Range16(11728LLU,11734LLU,1LLU),_1a9930e4c_Range16(11736LLU,11742LLU,1LLU),_1a9930e4c_Range16(11823LLU,12293LLU,470LLU),_1a9930e4c_Range16(12294LLU,12337LLU,43LLU),_1a9930e4c_Range16(12338LLU,12341LLU,1LLU),_1a9930e4c_Range16(12347LLU,12348LLU,1LLU),_1a9930e4c_Range16(12353LLU,12438LLU,1LLU),_1a9930e4c_Range16(12445LLU,12447LLU,1LLU),_1a9930e4c_Range16(12449LLU,12538LLU,1LLU),_1a9930e4c_Range16(12540LLU,12543LLU,1LLU),_1a9930e4c_Range16(12549LLU,12591LLU,1LLU),_1a9930e4c_Range16(12593LLU,12686LLU,1LLU),_1a9930e4c_Range16(12704LLU,12735LLU,1LLU),_1a9930e4c_Range16(12784LLU,12799LLU,1LLU),_1a9930e4c_Range16(13312LLU,19903LLU,1LLU),_1a9930e4c_Range16(19968LLU,42124LLU,1LLU),_1a9930e4c_Range16(42192LLU,42237LLU,1LLU),_1a9930e4c_Range16(42240LLU,42508LLU,1LLU),_1a9930e4c_Range16(42512LLU,42527LLU,1LLU),_1a9930e4c_Range16(42538LLU,42539LLU,1LLU),_1a9930e4c_Range16(42560LLU,42606LLU,1LLU),_1a9930e4c_Range16(42623LLU,42653LLU,1LLU),_1a9930e4c_Range16(42656LLU,42725LLU,1LLU),_1a9930e4c_Range16(42775LLU,42783LLU,1LLU),_1a9930e4c_Range16(42786LLU,42888LLU,1LLU),_1a9930e4c_Range16(42891LLU,42954LLU,1LLU),_1a9930e4c_Range16(42960LLU,42961LLU,1LLU),_1a9930e4c_Range16(42963LLU,42965LLU,2LLU),_1a9930e4c_Range16(42966LLU,42969LLU,1LLU),_1a9930e4c_Range16(42994LLU,43009LLU,1LLU),_1a9930e4c_Range16(43011LLU,43013LLU,1LLU),_1a9930e4c_Range16(43015LLU,43018LLU,1LLU),_1a9930e4c_Range16(43020LLU,43042LLU,1LLU),_1a9930e4c_Range16(43072LLU,43123LLU,1LLU),_1a9930e4c_Range16(43138LLU,43187LLU,1LLU),_1a9930e4c_Range16(43250LLU,43255LLU,1LLU),_1a9930e4c_Range16(43259LLU,43261LLU,2LLU),_1a9930e4c_Range16(43262LLU,43274LLU,12LLU),_1a9930e4c_Range16(43275LLU,43301LLU,1LLU),_1a9930e4c_Range16(43312LLU,43334LLU,1LLU),_1a9930e4c_Range16(43360LLU,43388LLU,1LLU),_1a9930e4c_Range16(43396LLU,43442LLU,1LLU),_1a9930e4c_Range16(43471LLU,43488LLU,17LLU),_1a9930e4c_Range16(43489LLU,43492LLU,1LLU),_1a9930e4c_Range16(43494LLU,43503LLU,1LLU),_1a9930e4c_Range16(43514LLU,43518LLU,1LLU),_1a9930e4c_Range16(43520LLU,43560LLU,1LLU),_1a9930e4c_Range16(43584LLU,43586LLU,1LLU),_1a9930e4c_Range16(43588LLU,43595LLU,1LLU),_1a9930e4c_Range16(43616LLU,43638LLU,1LLU),_1a9930e4c_Range16(43642LLU,43646LLU,4LLU),_1a9930e4c_Range16(43647LLU,43695LLU,1LLU),_1a9930e4c_Range16(43697LLU,43701LLU,4LLU),_1a9930e4c_Range16(43702LLU,43705LLU,3LLU),_1a9930e4c_Range16(43706LLU,43709LLU,1LLU),_1a9930e4c_Range16(43712LLU,43714LLU,2LLU),_1a9930e4c_Range16(43739LLU,43741LLU,1LLU),_1a9930e4c_Range16(43744LLU,43754LLU,1LLU),_1a9930e4c_Range16(43762LLU,43764LLU,1LLU),_1a9930e4c_Range16(43777LLU,43782LLU,1LLU),_1a9930e4c_Range16(43785LLU,43790LLU,1LLU),_1a9930e4c_Range16(43793LLU,43798LLU,1LLU),_1a9930e4c_Range16(43808LLU,43814LLU,1LLU),_1a9930e4c_Range16(43816LLU,43822LLU,1LLU),_1a9930e4c_Range16(43824LLU,43866LLU,1LLU),_1a9930e4c_Range16(43868LLU,43881LLU,1LLU),_1a9930e4c_Range16(43888LLU,44002LLU,1LLU),_1a9930e4c_Range16(44032LLU,55203LLU,1LLU),_1a9930e4c_Range16(55216LLU,55238LLU,1LLU),_1a9930e4c_Range16(55243LLU,55291LLU,1LLU),_1a9930e4c_Range16(63744LLU,64109LLU,1LLU),_1a9930e4c_Range16(64112LLU,64217LLU,1LLU),_1a9930e4c_Range16(64256LLU,64262LLU,1LLU),_1a9930e4c_Range16(64275LLU,64279LLU,1LLU),_1a9930e4c_Range16(64285LLU,64287LLU,2LLU),_1a9930e4c_Range16(64288LLU,64296LLU,1LLU),_1a9930e4c_Range16(64298LLU,64310LLU,1LLU),_1a9930e4c_Range16(64312LLU,64316LLU,1LLU),_1a9930e4c_Range16(64318LLU,64320LLU,2LLU),_1a9930e4c_Range16(64321LLU,64323LLU,2LLU),_1a9930e4c_Range16(64324LLU,64326LLU,2LLU),_1a9930e4c_Range16(64327LLU,64433LLU,1LLU),_1a9930e4c_Range16(64467LLU,64829LLU,1LLU),_1a9930e4c_Range16(64848LLU,64911LLU,1LLU),_1a9930e4c_Range16(64914LLU,64967LLU,1LLU),_1a9930e4c_Range16(65008LLU,65019LLU,1LLU),_1a9930e4c_Range16(65136LLU,65140LLU,1LLU),_1a9930e4c_Range16(65142LLU,65276LLU,1LLU),_1a9930e4c_Range16(65313LLU,65338LLU,1LLU),_1a9930e4c_Range16(65345LLU,65370LLU,1LLU),_1a9930e4c_Range16(65382LLU,65470LLU,1LLU),_1a9930e4c_Range16(65474LLU,65479LLU,1LLU),_1a9930e4c_Range16(65482LLU,65487LLU,1LLU),_1a9930e4c_Range16(65490LLU,65495LLU,1LLU),_1a9930e4c_Range16(65498LLU,65500LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(65536LLU,65547LLU,1LLU),_1a9930e4c_Range32(65549LLU,65574LLU,1LLU),_1a9930e4c_Range32(65576LLU,65594LLU,1LLU),_1a9930e4c_Range32(65596LLU,65597LLU,1LLU),_1a9930e4c_Range32(65599LLU,65613LLU,1LLU),_1a9930e4c_Range32(65616LLU,65629LLU,1LLU),_1a9930e4c_Range32(65664LLU,65786LLU,1LLU),_1a9930e4c_Range32(66176LLU,66204LLU,1LLU),_1a9930e4c_Range32(66208LLU,66256LLU,1LLU),_1a9930e4c_Range32(66304LLU,66335LLU,1LLU),_1a9930e4c_Range32(66349LLU,66368LLU,1LLU),_1a9930e4c_Range32(66370LLU,66377LLU,1LLU),_1a9930e4c_Range32(66384LLU,66421LLU,1LLU),_1a9930e4c_Range32(66432LLU,66461LLU,1LLU),_1a9930e4c_Range32(66464LLU,66499LLU,1LLU),_1a9930e4c_Range32(66504LLU,66511LLU,1LLU),_1a9930e4c_Range32(66560LLU,66717LLU,1LLU),_1a9930e4c_Range32(66736LLU,66771LLU,1LLU),_1a9930e4c_Range32(66776LLU,66811LLU,1LLU),_1a9930e4c_Range32(66816LLU,66855LLU,1LLU),_1a9930e4c_Range32(66864LLU,66915LLU,1LLU),_1a9930e4c_Range32(66928LLU,66938LLU,1LLU),_1a9930e4c_Range32(66940LLU,66954LLU,1LLU),_1a9930e4c_Range32(66956LLU,66962LLU,1LLU),_1a9930e4c_Range32(66964LLU,66965LLU,1LLU),_1a9930e4c_Range32(66967LLU,66977LLU,1LLU),_1a9930e4c_Range32(66979LLU,66993LLU,1LLU),_1a9930e4c_Range32(66995LLU,67001LLU,1LLU),_1a9930e4c_Range32(67003LLU,67004LLU,1LLU),_1a9930e4c_Range32(67072LLU,67382LLU,1LLU),_1a9930e4c_Range32(67392LLU,67413LLU,1LLU),_1a9930e4c_Range32(67424LLU,67431LLU,1LLU),_1a9930e4c_Range32(67456LLU,67461LLU,1LLU),_1a9930e4c_Range32(67463LLU,67504LLU,1LLU),_1a9930e4c_Range32(67506LLU,67514LLU,1LLU),_1a9930e4c_Range32(67584LLU,67589LLU,1LLU),_1a9930e4c_Range32(67592LLU,67594LLU,2LLU),_1a9930e4c_Range32(67595LLU,67637LLU,1LLU),_1a9930e4c_Range32(67639LLU,67640LLU,1LLU),_1a9930e4c_Range32(67644LLU,67647LLU,3LLU),_1a9930e4c_Range32(67648LLU,67669LLU,1LLU),_1a9930e4c_Range32(67680LLU,67702LLU,1LLU),_1a9930e4c_Range32(67712LLU,67742LLU,1LLU),_1a9930e4c_Range32(67808LLU,67826LLU,1LLU),_1a9930e4c_Range32(67828LLU,67829LLU,1LLU),_1a9930e4c_Range32(67840LLU,67861LLU,1LLU),_1a9930e4c_Range32(67872LLU,67897LLU,1LLU),_1a9930e4c_Range32(67968LLU,68023LLU,1LLU),_1a9930e4c_Range32(68030LLU,68031LLU,1LLU),_1a9930e4c_Range32(68096LLU,68112LLU,16LLU),_1a9930e4c_Range32(68113LLU,68115LLU,1LLU),_1a9930e4c_Range32(68117LLU,68119LLU,1LLU),_1a9930e4c_Range32(68121LLU,68149LLU,1LLU),_1a9930e4c_Range32(68192LLU,68220LLU,1LLU),_1a9930e4c_Range32(68224LLU,68252LLU,1LLU),_1a9930e4c_Range32(68288LLU,68295LLU,1LLU),_1a9930e4c_Range32(68297LLU,68324LLU,1LLU),_1a9930e4c_Range32(68352LLU,68405LLU,1LLU),_1a9930e4c_Range32(68416LLU,68437LLU,1LLU),_1a9930e4c_Range32(68448LLU,68466LLU,1LLU),_1a9930e4c_Range32(68480LLU,68497LLU,1LLU),_1a9930e4c_Range32(68608LLU,68680LLU,1LLU),_1a9930e4c_Range32(68736LLU,68786LLU,1LLU),_1a9930e4c_Range32(68800LLU,68850LLU,1LLU),_1a9930e4c_Range32(68864LLU,68899LLU,1LLU),_1a9930e4c_Range32(69248LLU,69289LLU,1LLU),_1a9930e4c_Range32(69296LLU,69297LLU,1LLU),_1a9930e4c_Range32(69376LLU,69404LLU,1LLU),_1a9930e4c_Range32(69415LLU,69424LLU,9LLU),_1a9930e4c_Range32(69425LLU,69445LLU,1LLU),_1a9930e4c_Range32(69488LLU,69505LLU,1LLU),_1a9930e4c_Range32(69552LLU,69572LLU,1LLU),_1a9930e4c_Range32(69600LLU,69622LLU,1LLU),_1a9930e4c_Range32(69635LLU,69687LLU,1LLU),_1a9930e4c_Range32(69745LLU,69746LLU,1LLU),_1a9930e4c_Range32(69749LLU,69763LLU,14LLU),_1a9930e4c_Range32(69764LLU,69807LLU,1LLU),_1a9930e4c_Range32(69840LLU,69864LLU,1LLU),_1a9930e4c_Range32(69891LLU,69926LLU,1LLU),_1a9930e4c_Range32(69956LLU,69959LLU,3LLU),_1a9930e4c_Range32(69968LLU,70002LLU,1LLU),_1a9930e4c_Range32(70006LLU,70019LLU,13LLU),_1a9930e4c_Range32(70020LLU,70066LLU,1LLU),_1a9930e4c_Range32(70081LLU,70084LLU,1LLU),_1a9930e4c_Range32(70106LLU,70108LLU,2LLU),_1a9930e4c_Range32(70144LLU,70161LLU,1LLU),_1a9930e4c_Range32(70163LLU,70187LLU,1LLU),_1a9930e4c_Range32(70207LLU,70208LLU,1LLU),_1a9930e4c_Range32(70272LLU,70278LLU,1LLU),_1a9930e4c_Range32(70280LLU,70282LLU,2LLU),_1a9930e4c_Range32(70283LLU,70285LLU,1LLU),_1a9930e4c_Range32(70287LLU,70301LLU,1LLU),_1a9930e4c_Range32(70303LLU,70312LLU,1LLU),_1a9930e4c_Range32(70320LLU,70366LLU,1LLU),_1a9930e4c_Range32(70405LLU,70412LLU,1LLU),_1a9930e4c_Range32(70415LLU,70416LLU,1LLU),_1a9930e4c_Range32(70419LLU,70440LLU,1LLU),_1a9930e4c_Range32(70442LLU,70448LLU,1LLU),_1a9930e4c_Range32(70450LLU,70451LLU,1LLU),_1a9930e4c_Range32(70453LLU,70457LLU,1LLU),_1a9930e4c_Range32(70461LLU,70480LLU,19LLU),_1a9930e4c_Range32(70493LLU,70497LLU,1LLU),_1a9930e4c_Range32(70656LLU,70708LLU,1LLU),_1a9930e4c_Range32(70727LLU,70730LLU,1LLU),_1a9930e4c_Range32(70751LLU,70753LLU,1LLU),_1a9930e4c_Range32(70784LLU,70831LLU,1LLU),_1a9930e4c_Range32(70852LLU,70853LLU,1LLU),_1a9930e4c_Range32(70855LLU,71040LLU,185LLU),_1a9930e4c_Range32(71041LLU,71086LLU,1LLU),_1a9930e4c_Range32(71128LLU,71131LLU,1LLU),_1a9930e4c_Range32(71168LLU,71215LLU,1LLU),_1a9930e4c_Range32(71236LLU,71296LLU,60LLU),_1a9930e4c_Range32(71297LLU,71338LLU,1LLU),_1a9930e4c_Range32(71352LLU,71424LLU,72LLU),_1a9930e4c_Range32(71425LLU,71450LLU,1LLU),_1a9930e4c_Range32(71488LLU,71494LLU,1LLU),_1a9930e4c_Range32(71680LLU,71723LLU,1LLU),_1a9930e4c_Range32(71840LLU,71903LLU,1LLU),_1a9930e4c_Range32(71935LLU,71942LLU,1LLU),_1a9930e4c_Range32(71945LLU,71948LLU,3LLU),_1a9930e4c_Range32(71949LLU,71955LLU,1LLU),_1a9930e4c_Range32(71957LLU,71958LLU,1LLU),_1a9930e4c_Range32(71960LLU,71983LLU,1LLU),_1a9930e4c_Range32(71999LLU,72001LLU,2LLU),_1a9930e4c_Range32(72096LLU,72103LLU,1LLU),_1a9930e4c_Range32(72106LLU,72144LLU,1LLU),_1a9930e4c_Range32(72161LLU,72163LLU,2LLU),_1a9930e4c_Range32(72192LLU,72203LLU,11LLU),_1a9930e4c_Range32(72204LLU,72242LLU,1LLU),_1a9930e4c_Range32(72250LLU,72272LLU,22LLU),_1a9930e4c_Range32(72284LLU,72329LLU,1LLU),_1a9930e4c_Range32(72349LLU,72368LLU,19LLU),_1a9930e4c_Range32(72369LLU,72440LLU,1LLU),_1a9930e4c_Range32(72704LLU,72712LLU,1LLU),_1a9930e4c_Range32(72714LLU,72750LLU,1LLU),_1a9930e4c_Range32(72768LLU,72818LLU,50LLU),_1a9930e4c_Range32(72819LLU,72847LLU,1LLU),_1a9930e4c_Range32(72960LLU,72966LLU,1LLU),_1a9930e4c_Range32(72968LLU,72969LLU,1LLU),_1a9930e4c_Range32(72971LLU,73008LLU,1LLU),_1a9930e4c_Range32(73030LLU,73056LLU,26LLU),_1a9930e4c_Range32(73057LLU,73061LLU,1LLU),_1a9930e4c_Range32(73063LLU,73064LLU,1LLU),_1a9930e4c_Range32(73066LLU,73097LLU,1LLU),_1a9930e4c_Range32(73112LLU,73440LLU,328LLU),_1a9930e4c_Range32(73441LLU,73458LLU,1LLU),_1a9930e4c_Range32(73474LLU,73476LLU,2LLU),_1a9930e4c_Range32(73477LLU,73488LLU,1LLU),_1a9930e4c_Range32(73490LLU,73523LLU,1LLU),_1a9930e4c_Range32(73648LLU,73728LLU,80LLU),_1a9930e4c_Range32(73729LLU,74649LLU,1LLU),_1a9930e4c_Range32(74880LLU,75075LLU,1LLU),_1a9930e4c_Range32(77712LLU,77808LLU,1LLU),_1a9930e4c_Range32(77824LLU,78895LLU,1LLU),_1a9930e4c_Range32(78913LLU,78918LLU,1LLU),_1a9930e4c_Range32(82944LLU,83526LLU,1LLU),_1a9930e4c_Range32(92160LLU,92728LLU,1LLU),_1a9930e4c_Range32(92736LLU,92766LLU,1LLU),_1a9930e4c_Range32(92784LLU,92862LLU,1LLU),_1a9930e4c_Range32(92880LLU,92909LLU,1LLU),_1a9930e4c_Range32(92928LLU,92975LLU,1LLU),_1a9930e4c_Range32(92992LLU,92995LLU,1LLU),_1a9930e4c_Range32(93027LLU,93047LLU,1LLU),_1a9930e4c_Range32(93053LLU,93071LLU,1LLU),_1a9930e4c_Range32(93760LLU,93823LLU,1LLU),_1a9930e4c_Range32(93952LLU,94026LLU,1LLU),_1a9930e4c_Range32(94032LLU,94099LLU,67LLU),_1a9930e4c_Range32(94100LLU,94111LLU,1LLU),_1a9930e4c_Range32(94176LLU,94177LLU,1LLU),_1a9930e4c_Range32(94179LLU,94208LLU,29LLU),_1a9930e4c_Range32(94209LLU,100343LLU,1LLU),_1a9930e4c_Range32(100352LLU,101589LLU,1LLU),_1a9930e4c_Range32(101632LLU,101640LLU,1LLU),_1a9930e4c_Range32(110576LLU,110579LLU,1LLU),_1a9930e4c_Range32(110581LLU,110587LLU,1LLU),_1a9930e4c_Range32(110589LLU,110590LLU,1LLU),_1a9930e4c_Range32(110592LLU,110882LLU,1LLU),_1a9930e4c_Range32(110898LLU,110928LLU,30LLU),_1a9930e4c_Range32(110929LLU,110930LLU,1LLU),_1a9930e4c_Range32(110933LLU,110948LLU,15LLU),_1a9930e4c_Range32(110949LLU,110951LLU,1LLU),_1a9930e4c_Range32(110960LLU,111355LLU,1LLU),_1a9930e4c_Range32(113664LLU,113770LLU,1LLU),_1a9930e4c_Range32(113776LLU,113788LLU,1LLU),_1a9930e4c_Range32(113792LLU,113800LLU,1LLU),_1a9930e4c_Range32(113808LLU,113817LLU,1LLU),_1a9930e4c_Range32(119808LLU,119892LLU,1LLU),_1a9930e4c_Range32(119894LLU,119964LLU,1LLU),_1a9930e4c_Range32(119966LLU,119967LLU,1LLU),_1a9930e4c_Range32(119970LLU,119973LLU,3LLU),_1a9930e4c_Range32(119974LLU,119977LLU,3LLU),_1a9930e4c_Range32(119978LLU,119980LLU,1LLU),_1a9930e4c_Range32(119982LLU,119993LLU,1LLU),_1a9930e4c_Range32(119995LLU,119997LLU,2LLU),_1a9930e4c_Range32(119998LLU,120003LLU,1LLU),_1a9930e4c_Range32(120005LLU,120069LLU,1LLU),_1a9930e4c_Range32(120071LLU,120074LLU,1LLU),_1a9930e4c_Range32(120077LLU,120084LLU,1LLU),_1a9930e4c_Range32(120086LLU,120092LLU,1LLU),_1a9930e4c_Range32(120094LLU,120121LLU,1LLU),_1a9930e4c_Range32(120123LLU,120126LLU,1LLU),_1a9930e4c_Range32(120128LLU,120132LLU,1LLU),_1a9930e4c_Range32(120134LLU,120138LLU,4LLU),_1a9930e4c_Range32(120139LLU,120144LLU,1LLU),_1a9930e4c_Range32(120146LLU,120485LLU,1LLU),_1a9930e4c_Range32(120488LLU,120512LLU,1LLU),_1a9930e4c_Range32(120514LLU,120538LLU,1LLU),_1a9930e4c_Range32(120540LLU,120570LLU,1LLU),_1a9930e4c_Range32(120572LLU,120596LLU,1LLU),_1a9930e4c_Range32(120598LLU,120628LLU,1LLU),_1a9930e4c_Range32(120630LLU,120654LLU,1LLU),_1a9930e4c_Range32(120656LLU,120686LLU,1LLU),_1a9930e4c_Range32(120688LLU,120712LLU,1LLU),_1a9930e4c_Range32(120714LLU,120744LLU,1LLU),_1a9930e4c_Range32(120746LLU,120770LLU,1LLU),_1a9930e4c_Range32(120772LLU,120779LLU,1LLU),_1a9930e4c_Range32(122624LLU,122654LLU,1LLU),_1a9930e4c_Range32(122661LLU,122666LLU,1LLU),_1a9930e4c_Range32(122928LLU,122989LLU,1LLU),_1a9930e4c_Range32(123136LLU,123180LLU,1LLU),_1a9930e4c_Range32(123191LLU,123197LLU,1LLU),_1a9930e4c_Range32(123214LLU,123536LLU,322LLU),_1a9930e4c_Range32(123537LLU,123565LLU,1LLU),_1a9930e4c_Range32(123584LLU,123627LLU,1LLU),_1a9930e4c_Range32(124112LLU,124139LLU,1LLU),_1a9930e4c_Range32(124896LLU,124902LLU,1LLU),_1a9930e4c_Range32(124904LLU,124907LLU,1LLU),_1a9930e4c_Range32(124909LLU,124910LLU,1LLU),_1a9930e4c_Range32(124912LLU,124926LLU,1LLU),_1a9930e4c_Range32(124928LLU,125124LLU,1LLU),_1a9930e4c_Range32(125184LLU,125251LLU,1LLU),_1a9930e4c_Range32(125259LLU,126464LLU,1205LLU),_1a9930e4c_Range32(126465LLU,126467LLU,1LLU),_1a9930e4c_Range32(126469LLU,126495LLU,1LLU),_1a9930e4c_Range32(126497LLU,126498LLU,1LLU),_1a9930e4c_Range32(126500LLU,126503LLU,3LLU),_1a9930e4c_Range32(126505LLU,126514LLU,1LLU),_1a9930e4c_Range32(126516LLU,126519LLU,1LLU),_1a9930e4c_Range32(126521LLU,126523LLU,2LLU),_1a9930e4c_Range32(126530LLU,126535LLU,5LLU),_1a9930e4c_Range32(126537LLU,126541LLU,2LLU),_1a9930e4c_Range32(126542LLU,126543LLU,1LLU),_1a9930e4c_Range32(126545LLU,126546LLU,1LLU),_1a9930e4c_Range32(126548LLU,126551LLU,3LLU),_1a9930e4c_Range32(126553LLU,126561LLU,2LLU),_1a9930e4c_Range32(126562LLU,126564LLU,2LLU),_1a9930e4c_Range32(126567LLU,126570LLU,1LLU),_1a9930e4c_Range32(126572LLU,126578LLU,1LLU),_1a9930e4c_Range32(126580LLU,126583LLU,1LLU),_1a9930e4c_Range32(126585LLU,126588LLU,1LLU),_1a9930e4c_Range32(126590LLU,126592LLU,2LLU),_1a9930e4c_Range32(126593LLU,126601LLU,1LLU),_1a9930e4c_Range32(126603LLU,126619LLU,1LLU),_1a9930e4c_Range32(126625LLU,126627LLU,1LLU),_1a9930e4c_Range32(126629LLU,126633LLU,1LLU),_1a9930e4c_Range32(126635LLU,126651LLU,1LLU),_1a9930e4c_Range32(131072LLU,173791LLU,1LLU),_1a9930e4c_Range32(173824LLU,177977LLU,1LLU),_1a9930e4c_Range32(177984LLU,178205LLU,1LLU),_1a9930e4c_Range32(178208LLU,183969LLU,1LLU),_1a9930e4c_Range32(183984LLU,191456LLU,1LLU),_1a9930e4c_Range32(194560LLU,195101LLU,1LLU),_1a9930e4c_Range32(196608LLU,201546LLU,1LLU),_1a9930e4c_Range32(201552LLU,205743LLU,1LLU)}),6LL));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__LL = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(97LLU,122LLU,1LLU),_1a9930e4c_Range16(181LLU,223LLU,42LLU),_1a9930e4c_Range16(224LLU,246LLU,1LLU),_1a9930e4c_Range16(248LLU,255LLU,1LLU),_1a9930e4c_Range16(257LLU,311LLU,2LLU),_1a9930e4c_Range16(312LLU,328LLU,2LLU),_1a9930e4c_Range16(329LLU,375LLU,2LLU),_1a9930e4c_Range16(378LLU,382LLU,2LLU),_1a9930e4c_Range16(383LLU,384LLU,1LLU),_1a9930e4c_Range16(387LLU,389LLU,2LLU),_1a9930e4c_Range16(392LLU,396LLU,4LLU),_1a9930e4c_Range16(397LLU,402LLU,5LLU),_1a9930e4c_Range16(405LLU,409LLU,4LLU),_1a9930e4c_Range16(410LLU,411LLU,1LLU),_1a9930e4c_Range16(414LLU,417LLU,3LLU),_1a9930e4c_Range16(419LLU,421LLU,2LLU),_1a9930e4c_Range16(424LLU,426LLU,2LLU),_1a9930e4c_Range16(427LLU,429LLU,2LLU),_1a9930e4c_Range16(432LLU,436LLU,4LLU),_1a9930e4c_Range16(438LLU,441LLU,3LLU),_1a9930e4c_Range16(442LLU,445LLU,3LLU),_1a9930e4c_Range16(446LLU,447LLU,1LLU),_1a9930e4c_Range16(454LLU,460LLU,3LLU),_1a9930e4c_Range16(462LLU,476LLU,2LLU),_1a9930e4c_Range16(477LLU,495LLU,2LLU),_1a9930e4c_Range16(496LLU,499LLU,3LLU),_1a9930e4c_Range16(501LLU,505LLU,4LLU),_1a9930e4c_Range16(507LLU,563LLU,2LLU),_1a9930e4c_Range16(564LLU,569LLU,1LLU),_1a9930e4c_Range16(572LLU,575LLU,3LLU),_1a9930e4c_Range16(576LLU,578LLU,2LLU),_1a9930e4c_Range16(583LLU,591LLU,2LLU),_1a9930e4c_Range16(592LLU,659LLU,1LLU),_1a9930e4c_Range16(661LLU,687LLU,1LLU),_1a9930e4c_Range16(881LLU,883LLU,2LLU),_1a9930e4c_Range16(887LLU,891LLU,4LLU),_1a9930e4c_Range16(892LLU,893LLU,1LLU),_1a9930e4c_Range16(912LLU,940LLU,28LLU),_1a9930e4c_Range16(941LLU,974LLU,1LLU),_1a9930e4c_Range16(976LLU,977LLU,1LLU),_1a9930e4c_Range16(981LLU,983LLU,1LLU),_1a9930e4c_Range16(985LLU,1007LLU,2LLU),_1a9930e4c_Range16(1008LLU,1011LLU,1LLU),_1a9930e4c_Range16(1013LLU,1019LLU,3LLU),_1a9930e4c_Range16(1020LLU,1072LLU,52LLU),_1a9930e4c_Range16(1073LLU,1119LLU,1LLU),_1a9930e4c_Range16(1121LLU,1153LLU,2LLU),_1a9930e4c_Range16(1163LLU,1215LLU,2LLU),_1a9930e4c_Range16(1218LLU,1230LLU,2LLU),_1a9930e4c_Range16(1231LLU,1327LLU,2LLU),_1a9930e4c_Range16(1376LLU,1416LLU,1LLU),_1a9930e4c_Range16(4304LLU,4346LLU,1LLU),_1a9930e4c_Range16(4349LLU,4351LLU,1LLU),_1a9930e4c_Range16(5112LLU,5117LLU,1LLU),_1a9930e4c_Range16(7296LLU,7304LLU,1LLU),_1a9930e4c_Range16(7424LLU,7467LLU,1LLU),_1a9930e4c_Range16(7531LLU,7543LLU,1LLU),_1a9930e4c_Range16(7545LLU,7578LLU,1LLU),_1a9930e4c_Range16(7681LLU,7829LLU,2LLU),_1a9930e4c_Range16(7830LLU,7837LLU,1LLU),_1a9930e4c_Range16(7839LLU,7935LLU,2LLU),_1a9930e4c_Range16(7936LLU,7943LLU,1LLU),_1a9930e4c_Range16(7952LLU,7957LLU,1LLU),_1a9930e4c_Range16(7968LLU,7975LLU,1LLU),_1a9930e4c_Range16(7984LLU,7991LLU,1LLU),_1a9930e4c_Range16(8000LLU,8005LLU,1LLU),_1a9930e4c_Range16(8016LLU,8023LLU,1LLU),_1a9930e4c_Range16(8032LLU,8039LLU,1LLU),_1a9930e4c_Range16(8048LLU,8061LLU,1LLU),_1a9930e4c_Range16(8064LLU,8071LLU,1LLU),_1a9930e4c_Range16(8080LLU,8087LLU,1LLU),_1a9930e4c_Range16(8096LLU,8103LLU,1LLU),_1a9930e4c_Range16(8112LLU,8116LLU,1LLU),_1a9930e4c_Range16(8118LLU,8119LLU,1LLU),_1a9930e4c_Range16(8126LLU,8130LLU,4LLU),_1a9930e4c_Range16(8131LLU,8132LLU,1LLU),_1a9930e4c_Range16(8134LLU,8135LLU,1LLU),_1a9930e4c_Range16(8144LLU,8147LLU,1LLU),_1a9930e4c_Range16(8150LLU,8151LLU,1LLU),_1a9930e4c_Range16(8160LLU,8167LLU,1LLU),_1a9930e4c_Range16(8178LLU,8180LLU,1LLU),_1a9930e4c_Range16(8182LLU,8183LLU,1LLU),_1a9930e4c_Range16(8458LLU,8462LLU,4LLU),_1a9930e4c_Range16(8463LLU,8467LLU,4LLU),_1a9930e4c_Range16(8495LLU,8505LLU,5LLU),_1a9930e4c_Range16(8508LLU,8509LLU,1LLU),_1a9930e4c_Range16(8518LLU,8521LLU,1LLU),_1a9930e4c_Range16(8526LLU,8580LLU,54LLU),_1a9930e4c_Range16(11312LLU,11359LLU,1LLU),_1a9930e4c_Range16(11361LLU,11365LLU,4LLU),_1a9930e4c_Range16(11366LLU,11372LLU,2LLU),_1a9930e4c_Range16(11377LLU,11379LLU,2LLU),_1a9930e4c_Range16(11380LLU,11382LLU,2LLU),_1a9930e4c_Range16(11383LLU,11387LLU,1LLU),_1a9930e4c_Range16(11393LLU,11491LLU,2LLU),_1a9930e4c_Range16(11492LLU,11500LLU,8LLU),_1a9930e4c_Range16(11502LLU,11507LLU,5LLU),_1a9930e4c_Range16(11520LLU,11557LLU,1LLU),_1a9930e4c_Range16(11559LLU,11565LLU,6LLU),_1a9930e4c_Range16(42561LLU,42605LLU,2LLU),_1a9930e4c_Range16(42625LLU,42651LLU,2LLU),_1a9930e4c_Range16(42787LLU,42799LLU,2LLU),_1a9930e4c_Range16(42800LLU,42801LLU,1LLU),_1a9930e4c_Range16(42803LLU,42865LLU,2LLU),_1a9930e4c_Range16(42866LLU,42872LLU,1LLU),_1a9930e4c_Range16(42874LLU,42876LLU,2LLU),_1a9930e4c_Range16(42879LLU,42887LLU,2LLU),_1a9930e4c_Range16(42892LLU,42894LLU,2LLU),_1a9930e4c_Range16(42897LLU,42899LLU,2LLU),_1a9930e4c_Range16(42900LLU,42901LLU,1LLU),_1a9930e4c_Range16(42903LLU,42921LLU,2LLU),_1a9930e4c_Range16(42927LLU,42933LLU,6LLU),_1a9930e4c_Range16(42935LLU,42947LLU,2LLU),_1a9930e4c_Range16(42952LLU,42954LLU,2LLU),_1a9930e4c_Range16(42961LLU,42969LLU,2LLU),_1a9930e4c_Range16(42998LLU,43002LLU,4LLU),_1a9930e4c_Range16(43824LLU,43866LLU,1LLU),_1a9930e4c_Range16(43872LLU,43880LLU,1LLU),_1a9930e4c_Range16(43888LLU,43967LLU,1LLU),_1a9930e4c_Range16(64256LLU,64262LLU,1LLU),_1a9930e4c_Range16(64275LLU,64279LLU,1LLU),_1a9930e4c_Range16(65345LLU,65370LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(66600LLU,66639LLU,1LLU),_1a9930e4c_Range32(66776LLU,66811LLU,1LLU),_1a9930e4c_Range32(66967LLU,66977LLU,1LLU),_1a9930e4c_Range32(66979LLU,66993LLU,1LLU),_1a9930e4c_Range32(66995LLU,67001LLU,1LLU),_1a9930e4c_Range32(67003LLU,67004LLU,1LLU),_1a9930e4c_Range32(68800LLU,68850LLU,1LLU),_1a9930e4c_Range32(71872LLU,71903LLU,1LLU),_1a9930e4c_Range32(93792LLU,93823LLU,1LLU),_1a9930e4c_Range32(119834LLU,119859LLU,1LLU),_1a9930e4c_Range32(119886LLU,119892LLU,1LLU),_1a9930e4c_Range32(119894LLU,119911LLU,1LLU),_1a9930e4c_Range32(119938LLU,119963LLU,1LLU),_1a9930e4c_Range32(119990LLU,119993LLU,1LLU),_1a9930e4c_Range32(119995LLU,119997LLU,2LLU),_1a9930e4c_Range32(119998LLU,120003LLU,1LLU),_1a9930e4c_Range32(120005LLU,120015LLU,1LLU),_1a9930e4c_Range32(120042LLU,120067LLU,1LLU),_1a9930e4c_Range32(120094LLU,120119LLU,1LLU),_1a9930e4c_Range32(120146LLU,120171LLU,1LLU),_1a9930e4c_Range32(120198LLU,120223LLU,1LLU),_1a9930e4c_Range32(120250LLU,120275LLU,1LLU),_1a9930e4c_Range32(120302LLU,120327LLU,1LLU),_1a9930e4c_Range32(120354LLU,120379LLU,1LLU),_1a9930e4c_Range32(120406LLU,120431LLU,1LLU),_1a9930e4c_Range32(120458LLU,120485LLU,1LLU),_1a9930e4c_Range32(120514LLU,120538LLU,1LLU),_1a9930e4c_Range32(120540LLU,120545LLU,1LLU),_1a9930e4c_Range32(120572LLU,120596LLU,1LLU),_1a9930e4c_Range32(120598LLU,120603LLU,1LLU),_1a9930e4c_Range32(120630LLU,120654LLU,1LLU),_1a9930e4c_Range32(120656LLU,120661LLU,1LLU),_1a9930e4c_Range32(120688LLU,120712LLU,1LLU),_1a9930e4c_Range32(120714LLU,120719LLU,1LLU),_1a9930e4c_Range32(120746LLU,120770LLU,1LLU),_1a9930e4c_Range32(120772LLU,120777LLU,1LLU),_1a9930e4c_Range32(120779LLU,122624LLU,1845LLU),_1a9930e4c_Range32(122625LLU,122633LLU,1LLU),_1a9930e4c_Range32(122635LLU,122654LLU,1LLU),_1a9930e4c_Range32(122661LLU,122666LLU,1LLU),_1a9930e4c_Range32(125218LLU,125251LLU,1LLU)}),4LL));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__LM = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(688LLU,705LLU,1LLU),_1a9930e4c_Range16(710LLU,721LLU,1LLU),_1a9930e4c_Range16(736LLU,740LLU,1LLU),_1a9930e4c_Range16(748LLU,750LLU,2LLU),_1a9930e4c_Range16(884LLU,890LLU,6LLU),_1a9930e4c_Range16(1369LLU,1600LLU,231LLU),_1a9930e4c_Range16(1765LLU,1766LLU,1LLU),_1a9930e4c_Range16(2036LLU,2037LLU,1LLU),_1a9930e4c_Range16(2042LLU,2074LLU,32LLU),_1a9930e4c_Range16(2084LLU,2088LLU,4LLU),_1a9930e4c_Range16(2249LLU,2417LLU,168LLU),_1a9930e4c_Range16(3654LLU,3782LLU,128LLU),_1a9930e4c_Range16(4348LLU,6103LLU,1755LLU),_1a9930e4c_Range16(6211LLU,6823LLU,612LLU),_1a9930e4c_Range16(7288LLU,7293LLU,1LLU),_1a9930e4c_Range16(7468LLU,7530LLU,1LLU),_1a9930e4c_Range16(7544LLU,7579LLU,35LLU),_1a9930e4c_Range16(7580LLU,7615LLU,1LLU),_1a9930e4c_Range16(8305LLU,8319LLU,14LLU),_1a9930e4c_Range16(8336LLU,8348LLU,1LLU),_1a9930e4c_Range16(11388LLU,11389LLU,1LLU),_1a9930e4c_Range16(11631LLU,11823LLU,192LLU),_1a9930e4c_Range16(12293LLU,12337LLU,44LLU),_1a9930e4c_Range16(12338LLU,12341LLU,1LLU),_1a9930e4c_Range16(12347LLU,12445LLU,98LLU),_1a9930e4c_Range16(12446LLU,12540LLU,94LLU),_1a9930e4c_Range16(12541LLU,12542LLU,1LLU),_1a9930e4c_Range16(40981LLU,42232LLU,1251LLU),_1a9930e4c_Range16(42233LLU,42237LLU,1LLU),_1a9930e4c_Range16(42508LLU,42623LLU,115LLU),_1a9930e4c_Range16(42652LLU,42653LLU,1LLU),_1a9930e4c_Range16(42775LLU,42783LLU,1LLU),_1a9930e4c_Range16(42864LLU,42888LLU,24LLU),_1a9930e4c_Range16(42994LLU,42996LLU,1LLU),_1a9930e4c_Range16(43000LLU,43001LLU,1LLU),_1a9930e4c_Range16(43471LLU,43494LLU,23LLU),_1a9930e4c_Range16(43632LLU,43741LLU,109LLU),_1a9930e4c_Range16(43763LLU,43764LLU,1LLU),_1a9930e4c_Range16(43868LLU,43871LLU,1LLU),_1a9930e4c_Range16(43881LLU,65392LLU,21511LLU),_1a9930e4c_Range16(65438LLU,65439LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(67456LLU,67461LLU,1LLU),_1a9930e4c_Range32(67463LLU,67504LLU,1LLU),_1a9930e4c_Range32(67506LLU,67514LLU,1LLU),_1a9930e4c_Range32(92992LLU,92995LLU,1LLU),_1a9930e4c_Range32(94099LLU,94111LLU,1LLU),_1a9930e4c_Range32(94176LLU,94177LLU,1LLU),_1a9930e4c_Range32(94179LLU,110576LLU,16397LLU),_1a9930e4c_Range32(110577LLU,110579LLU,1LLU),_1a9930e4c_Range32(110581LLU,110587LLU,1LLU),_1a9930e4c_Range32(110589LLU,110590LLU,1LLU),_1a9930e4c_Range32(122928LLU,122989LLU,1LLU),_1a9930e4c_Range32(123191LLU,123197LLU,1LLU),_1a9930e4c_Range32(124139LLU,125259LLU,1120LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__LO = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(170LLU,186LLU,16LLU),_1a9930e4c_Range16(443LLU,448LLU,5LLU),_1a9930e4c_Range16(449LLU,451LLU,1LLU),_1a9930e4c_Range16(660LLU,1488LLU,828LLU),_1a9930e4c_Range16(1489LLU,1514LLU,1LLU),_1a9930e4c_Range16(1519LLU,1522LLU,1LLU),_1a9930e4c_Range16(1568LLU,1599LLU,1LLU),_1a9930e4c_Range16(1601LLU,1610LLU,1LLU),_1a9930e4c_Range16(1646LLU,1647LLU,1LLU),_1a9930e4c_Range16(1649LLU,1747LLU,1LLU),_1a9930e4c_Range16(1749LLU,1774LLU,25LLU),_1a9930e4c_Range16(1775LLU,1786LLU,11LLU),_1a9930e4c_Range16(1787LLU,1788LLU,1LLU),_1a9930e4c_Range16(1791LLU,1808LLU,17LLU),_1a9930e4c_Range16(1810LLU,1839LLU,1LLU),_1a9930e4c_Range16(1869LLU,1957LLU,1LLU),_1a9930e4c_Range16(1969LLU,1994LLU,25LLU),_1a9930e4c_Range16(1995LLU,2026LLU,1LLU),_1a9930e4c_Range16(2048LLU,2069LLU,1LLU),_1a9930e4c_Range16(2112LLU,2136LLU,1LLU),_1a9930e4c_Range16(2144LLU,2154LLU,1LLU),_1a9930e4c_Range16(2160LLU,2183LLU,1LLU),_1a9930e4c_Range16(2185LLU,2190LLU,1LLU),_1a9930e4c_Range16(2208LLU,2248LLU,1LLU),_1a9930e4c_Range16(2308LLU,2361LLU,1LLU),_1a9930e4c_Range16(2365LLU,2384LLU,19LLU),_1a9930e4c_Range16(2392LLU,2401LLU,1LLU),_1a9930e4c_Range16(2418LLU,2432LLU,1LLU),_1a9930e4c_Range16(2437LLU,2444LLU,1LLU),_1a9930e4c_Range16(2447LLU,2448LLU,1LLU),_1a9930e4c_Range16(2451LLU,2472LLU,1LLU),_1a9930e4c_Range16(2474LLU,2480LLU,1LLU),_1a9930e4c_Range16(2482LLU,2486LLU,4LLU),_1a9930e4c_Range16(2487LLU,2489LLU,1LLU),_1a9930e4c_Range16(2493LLU,2510LLU,17LLU),_1a9930e4c_Range16(2524LLU,2525LLU,1LLU),_1a9930e4c_Range16(2527LLU,2529LLU,1LLU),_1a9930e4c_Range16(2544LLU,2545LLU,1LLU),_1a9930e4c_Range16(2556LLU,2565LLU,9LLU),_1a9930e4c_Range16(2566LLU,2570LLU,1LLU),_1a9930e4c_Range16(2575LLU,2576LLU,1LLU),_1a9930e4c_Range16(2579LLU,2600LLU,1LLU),_1a9930e4c_Range16(2602LLU,2608LLU,1LLU),_1a9930e4c_Range16(2610LLU,2611LLU,1LLU),_1a9930e4c_Range16(2613LLU,2614LLU,1LLU),_1a9930e4c_Range16(2616LLU,2617LLU,1LLU),_1a9930e4c_Range16(2649LLU,2652LLU,1LLU),_1a9930e4c_Range16(2654LLU,2674LLU,20LLU),_1a9930e4c_Range16(2675LLU,2676LLU,1LLU),_1a9930e4c_Range16(2693LLU,2701LLU,1LLU),_1a9930e4c_Range16(2703LLU,2705LLU,1LLU),_1a9930e4c_Range16(2707LLU,2728LLU,1LLU),_1a9930e4c_Range16(2730LLU,2736LLU,1LLU),_1a9930e4c_Range16(2738LLU,2739LLU,1LLU),_1a9930e4c_Range16(2741LLU,2745LLU,1LLU),_1a9930e4c_Range16(2749LLU,2768LLU,19LLU),_1a9930e4c_Range16(2784LLU,2785LLU,1LLU),_1a9930e4c_Range16(2809LLU,2821LLU,12LLU),_1a9930e4c_Range16(2822LLU,2828LLU,1LLU),_1a9930e4c_Range16(2831LLU,2832LLU,1LLU),_1a9930e4c_Range16(2835LLU,2856LLU,1LLU),_1a9930e4c_Range16(2858LLU,2864LLU,1LLU),_1a9930e4c_Range16(2866LLU,2867LLU,1LLU),_1a9930e4c_Range16(2869LLU,2873LLU,1LLU),_1a9930e4c_Range16(2877LLU,2908LLU,31LLU),_1a9930e4c_Range16(2909LLU,2911LLU,2LLU),_1a9930e4c_Range16(2912LLU,2913LLU,1LLU),_1a9930e4c_Range16(2929LLU,2947LLU,18LLU),_1a9930e4c_Range16(2949LLU,2954LLU,1LLU),_1a9930e4c_Range16(2958LLU,2960LLU,1LLU),_1a9930e4c_Range16(2962LLU,2965LLU,1LLU),_1a9930e4c_Range16(2969LLU,2970LLU,1LLU),_1a9930e4c_Range16(2972LLU,2974LLU,2LLU),_1a9930e4c_Range16(2975LLU,2979LLU,4LLU),_1a9930e4c_Range16(2980LLU,2984LLU,4LLU),_1a9930e4c_Range16(2985LLU,2986LLU,1LLU),_1a9930e4c_Range16(2990LLU,3001LLU,1LLU),_1a9930e4c_Range16(3024LLU,3077LLU,53LLU),_1a9930e4c_Range16(3078LLU,3084LLU,1LLU),_1a9930e4c_Range16(3086LLU,3088LLU,1LLU),_1a9930e4c_Range16(3090LLU,3112LLU,1LLU),_1a9930e4c_Range16(3114LLU,3129LLU,1LLU),_1a9930e4c_Range16(3133LLU,3160LLU,27LLU),_1a9930e4c_Range16(3161LLU,3162LLU,1LLU),_1a9930e4c_Range16(3165LLU,3168LLU,3LLU),_1a9930e4c_Range16(3169LLU,3200LLU,31LLU),_1a9930e4c_Range16(3205LLU,3212LLU,1LLU),_1a9930e4c_Range16(3214LLU,3216LLU,1LLU),_1a9930e4c_Range16(3218LLU,3240LLU,1LLU),_1a9930e4c_Range16(3242LLU,3251LLU,1LLU),_1a9930e4c_Range16(3253LLU,3257LLU,1LLU),_1a9930e4c_Range16(3261LLU,3293LLU,32LLU),_1a9930e4c_Range16(3294LLU,3296LLU,2LLU),_1a9930e4c_Range16(3297LLU,3313LLU,16LLU),_1a9930e4c_Range16(3314LLU,3332LLU,18LLU),_1a9930e4c_Range16(3333LLU,3340LLU,1LLU),_1a9930e4c_Range16(3342LLU,3344LLU,1LLU),_1a9930e4c_Range16(3346LLU,3386LLU,1LLU),_1a9930e4c_Range16(3389LLU,3406LLU,17LLU),_1a9930e4c_Range16(3412LLU,3414LLU,1LLU),_1a9930e4c_Range16(3423LLU,3425LLU,1LLU),_1a9930e4c_Range16(3450LLU,3455LLU,1LLU),_1a9930e4c_Range16(3461LLU,3478LLU,1LLU),_1a9930e4c_Range16(3482LLU,3505LLU,1LLU),_1a9930e4c_Range16(3507LLU,3515LLU,1LLU),_1a9930e4c_Range16(3517LLU,3520LLU,3LLU),_1a9930e4c_Range16(3521LLU,3526LLU,1LLU),_1a9930e4c_Range16(3585LLU,3632LLU,1LLU),_1a9930e4c_Range16(3634LLU,3635LLU,1LLU),_1a9930e4c_Range16(3648LLU,3653LLU,1LLU),_1a9930e4c_Range16(3713LLU,3714LLU,1LLU),_1a9930e4c_Range16(3716LLU,3718LLU,2LLU),_1a9930e4c_Range16(3719LLU,3722LLU,1LLU),_1a9930e4c_Range16(3724LLU,3747LLU,1LLU),_1a9930e4c_Range16(3749LLU,3751LLU,2LLU),_1a9930e4c_Range16(3752LLU,3760LLU,1LLU),_1a9930e4c_Range16(3762LLU,3763LLU,1LLU),_1a9930e4c_Range16(3773LLU,3776LLU,3LLU),_1a9930e4c_Range16(3777LLU,3780LLU,1LLU),_1a9930e4c_Range16(3804LLU,3807LLU,1LLU),_1a9930e4c_Range16(3840LLU,3904LLU,64LLU),_1a9930e4c_Range16(3905LLU,3911LLU,1LLU),_1a9930e4c_Range16(3913LLU,3948LLU,1LLU),_1a9930e4c_Range16(3976LLU,3980LLU,1LLU),_1a9930e4c_Range16(4096LLU,4138LLU,1LLU),_1a9930e4c_Range16(4159LLU,4176LLU,17LLU),_1a9930e4c_Range16(4177LLU,4181LLU,1LLU),_1a9930e4c_Range16(4186LLU,4189LLU,1LLU),_1a9930e4c_Range16(4193LLU,4197LLU,4LLU),_1a9930e4c_Range16(4198LLU,4206LLU,8LLU),_1a9930e4c_Range16(4207LLU,4208LLU,1LLU),_1a9930e4c_Range16(4213LLU,4225LLU,1LLU),_1a9930e4c_Range16(4238LLU,4352LLU,114LLU),_1a9930e4c_Range16(4353LLU,4680LLU,1LLU),_1a9930e4c_Range16(4682LLU,4685LLU,1LLU),_1a9930e4c_Range16(4688LLU,4694LLU,1LLU),_1a9930e4c_Range16(4696LLU,4698LLU,2LLU),_1a9930e4c_Range16(4699LLU,4701LLU,1LLU),_1a9930e4c_Range16(4704LLU,4744LLU,1LLU),_1a9930e4c_Range16(4746LLU,4749LLU,1LLU),_1a9930e4c_Range16(4752LLU,4784LLU,1LLU),_1a9930e4c_Range16(4786LLU,4789LLU,1LLU),_1a9930e4c_Range16(4792LLU,4798LLU,1LLU),_1a9930e4c_Range16(4800LLU,4802LLU,2LLU),_1a9930e4c_Range16(4803LLU,4805LLU,1LLU),_1a9930e4c_Range16(4808LLU,4822LLU,1LLU),_1a9930e4c_Range16(4824LLU,4880LLU,1LLU),_1a9930e4c_Range16(4882LLU,4885LLU,1LLU),_1a9930e4c_Range16(4888LLU,4954LLU,1LLU),_1a9930e4c_Range16(4992LLU,5007LLU,1LLU),_1a9930e4c_Range16(5121LLU,5740LLU,1LLU),_1a9930e4c_Range16(5743LLU,5759LLU,1LLU),_1a9930e4c_Range16(5761LLU,5786LLU,1LLU),_1a9930e4c_Range16(5792LLU,5866LLU,1LLU),_1a9930e4c_Range16(5873LLU,5880LLU,1LLU),_1a9930e4c_Range16(5888LLU,5905LLU,1LLU),_1a9930e4c_Range16(5919LLU,5937LLU,1LLU),_1a9930e4c_Range16(5952LLU,5969LLU,1LLU),_1a9930e4c_Range16(5984LLU,5996LLU,1LLU),_1a9930e4c_Range16(5998LLU,6000LLU,1LLU),_1a9930e4c_Range16(6016LLU,6067LLU,1LLU),_1a9930e4c_Range16(6108LLU,6176LLU,68LLU),_1a9930e4c_Range16(6177LLU,6210LLU,1LLU),_1a9930e4c_Range16(6212LLU,6264LLU,1LLU),_1a9930e4c_Range16(6272LLU,6276LLU,1LLU),_1a9930e4c_Range16(6279LLU,6312LLU,1LLU),_1a9930e4c_Range16(6314LLU,6320LLU,6LLU),_1a9930e4c_Range16(6321LLU,6389LLU,1LLU),_1a9930e4c_Range16(6400LLU,6430LLU,1LLU),_1a9930e4c_Range16(6480LLU,6509LLU,1LLU),_1a9930e4c_Range16(6512LLU,6516LLU,1LLU),_1a9930e4c_Range16(6528LLU,6571LLU,1LLU),_1a9930e4c_Range16(6576LLU,6601LLU,1LLU),_1a9930e4c_Range16(6656LLU,6678LLU,1LLU),_1a9930e4c_Range16(6688LLU,6740LLU,1LLU),_1a9930e4c_Range16(6917LLU,6963LLU,1LLU),_1a9930e4c_Range16(6981LLU,6988LLU,1LLU),_1a9930e4c_Range16(7043LLU,7072LLU,1LLU),_1a9930e4c_Range16(7086LLU,7087LLU,1LLU),_1a9930e4c_Range16(7098LLU,7141LLU,1LLU),_1a9930e4c_Range16(7168LLU,7203LLU,1LLU),_1a9930e4c_Range16(7245LLU,7247LLU,1LLU),_1a9930e4c_Range16(7258LLU,7287LLU,1LLU),_1a9930e4c_Range16(7401LLU,7404LLU,1LLU),_1a9930e4c_Range16(7406LLU,7411LLU,1LLU),_1a9930e4c_Range16(7413LLU,7414LLU,1LLU),_1a9930e4c_Range16(7418LLU,8501LLU,1083LLU),_1a9930e4c_Range16(8502LLU,8504LLU,1LLU),_1a9930e4c_Range16(11568LLU,11623LLU,1LLU),_1a9930e4c_Range16(11648LLU,11670LLU,1LLU),_1a9930e4c_Range16(11680LLU,11686LLU,1LLU),_1a9930e4c_Range16(11688LLU,11694LLU,1LLU),_1a9930e4c_Range16(11696LLU,11702LLU,1LLU),_1a9930e4c_Range16(11704LLU,11710LLU,1LLU),_1a9930e4c_Range16(11712LLU,11718LLU,1LLU),_1a9930e4c_Range16(11720LLU,11726LLU,1LLU),_1a9930e4c_Range16(11728LLU,11734LLU,1LLU),_1a9930e4c_Range16(11736LLU,11742LLU,1LLU),_1a9930e4c_Range16(12294LLU,12348LLU,54LLU),_1a9930e4c_Range16(12353LLU,12438LLU,1LLU),_1a9930e4c_Range16(12447LLU,12449LLU,2LLU),_1a9930e4c_Range16(12450LLU,12538LLU,1LLU),_1a9930e4c_Range16(12543LLU,12549LLU,6LLU),_1a9930e4c_Range16(12550LLU,12591LLU,1LLU),_1a9930e4c_Range16(12593LLU,12686LLU,1LLU),_1a9930e4c_Range16(12704LLU,12735LLU,1LLU),_1a9930e4c_Range16(12784LLU,12799LLU,1LLU),_1a9930e4c_Range16(13312LLU,19903LLU,1LLU),_1a9930e4c_Range16(19968LLU,40980LLU,1LLU),_1a9930e4c_Range16(40982LLU,42124LLU,1LLU),_1a9930e4c_Range16(42192LLU,42231LLU,1LLU),_1a9930e4c_Range16(42240LLU,42507LLU,1LLU),_1a9930e4c_Range16(42512LLU,42527LLU,1LLU),_1a9930e4c_Range16(42538LLU,42539LLU,1LLU),_1a9930e4c_Range16(42606LLU,42656LLU,50LLU),_1a9930e4c_Range16(42657LLU,42725LLU,1LLU),_1a9930e4c_Range16(42895LLU,42999LLU,104LLU),_1a9930e4c_Range16(43003LLU,43009LLU,1LLU),_1a9930e4c_Range16(43011LLU,43013LLU,1LLU),_1a9930e4c_Range16(43015LLU,43018LLU,1LLU),_1a9930e4c_Range16(43020LLU,43042LLU,1LLU),_1a9930e4c_Range16(43072LLU,43123LLU,1LLU),_1a9930e4c_Range16(43138LLU,43187LLU,1LLU),_1a9930e4c_Range16(43250LLU,43255LLU,1LLU),_1a9930e4c_Range16(43259LLU,43261LLU,2LLU),_1a9930e4c_Range16(43262LLU,43274LLU,12LLU),_1a9930e4c_Range16(43275LLU,43301LLU,1LLU),_1a9930e4c_Range16(43312LLU,43334LLU,1LLU),_1a9930e4c_Range16(43360LLU,43388LLU,1LLU),_1a9930e4c_Range16(43396LLU,43442LLU,1LLU),_1a9930e4c_Range16(43488LLU,43492LLU,1LLU),_1a9930e4c_Range16(43495LLU,43503LLU,1LLU),_1a9930e4c_Range16(43514LLU,43518LLU,1LLU),_1a9930e4c_Range16(43520LLU,43560LLU,1LLU),_1a9930e4c_Range16(43584LLU,43586LLU,1LLU),_1a9930e4c_Range16(43588LLU,43595LLU,1LLU),_1a9930e4c_Range16(43616LLU,43631LLU,1LLU),_1a9930e4c_Range16(43633LLU,43638LLU,1LLU),_1a9930e4c_Range16(43642LLU,43646LLU,4LLU),_1a9930e4c_Range16(43647LLU,43695LLU,1LLU),_1a9930e4c_Range16(43697LLU,43701LLU,4LLU),_1a9930e4c_Range16(43702LLU,43705LLU,3LLU),_1a9930e4c_Range16(43706LLU,43709LLU,1LLU),_1a9930e4c_Range16(43712LLU,43714LLU,2LLU),_1a9930e4c_Range16(43739LLU,43740LLU,1LLU),_1a9930e4c_Range16(43744LLU,43754LLU,1LLU),_1a9930e4c_Range16(43762LLU,43777LLU,15LLU),_1a9930e4c_Range16(43778LLU,43782LLU,1LLU),_1a9930e4c_Range16(43785LLU,43790LLU,1LLU),_1a9930e4c_Range16(43793LLU,43798LLU,1LLU),_1a9930e4c_Range16(43808LLU,43814LLU,1LLU),_1a9930e4c_Range16(43816LLU,43822LLU,1LLU),_1a9930e4c_Range16(43968LLU,44002LLU,1LLU),_1a9930e4c_Range16(44032LLU,55203LLU,1LLU),_1a9930e4c_Range16(55216LLU,55238LLU,1LLU),_1a9930e4c_Range16(55243LLU,55291LLU,1LLU),_1a9930e4c_Range16(63744LLU,64109LLU,1LLU),_1a9930e4c_Range16(64112LLU,64217LLU,1LLU),_1a9930e4c_Range16(64285LLU,64287LLU,2LLU),_1a9930e4c_Range16(64288LLU,64296LLU,1LLU),_1a9930e4c_Range16(64298LLU,64310LLU,1LLU),_1a9930e4c_Range16(64312LLU,64316LLU,1LLU),_1a9930e4c_Range16(64318LLU,64320LLU,2LLU),_1a9930e4c_Range16(64321LLU,64323LLU,2LLU),_1a9930e4c_Range16(64324LLU,64326LLU,2LLU),_1a9930e4c_Range16(64327LLU,64433LLU,1LLU),_1a9930e4c_Range16(64467LLU,64829LLU,1LLU),_1a9930e4c_Range16(64848LLU,64911LLU,1LLU),_1a9930e4c_Range16(64914LLU,64967LLU,1LLU),_1a9930e4c_Range16(65008LLU,65019LLU,1LLU),_1a9930e4c_Range16(65136LLU,65140LLU,1LLU),_1a9930e4c_Range16(65142LLU,65276LLU,1LLU),_1a9930e4c_Range16(65382LLU,65391LLU,1LLU),_1a9930e4c_Range16(65393LLU,65437LLU,1LLU),_1a9930e4c_Range16(65440LLU,65470LLU,1LLU),_1a9930e4c_Range16(65474LLU,65479LLU,1LLU),_1a9930e4c_Range16(65482LLU,65487LLU,1LLU),_1a9930e4c_Range16(65490LLU,65495LLU,1LLU),_1a9930e4c_Range16(65498LLU,65500LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(65536LLU,65547LLU,1LLU),_1a9930e4c_Range32(65549LLU,65574LLU,1LLU),_1a9930e4c_Range32(65576LLU,65594LLU,1LLU),_1a9930e4c_Range32(65596LLU,65597LLU,1LLU),_1a9930e4c_Range32(65599LLU,65613LLU,1LLU),_1a9930e4c_Range32(65616LLU,65629LLU,1LLU),_1a9930e4c_Range32(65664LLU,65786LLU,1LLU),_1a9930e4c_Range32(66176LLU,66204LLU,1LLU),_1a9930e4c_Range32(66208LLU,66256LLU,1LLU),_1a9930e4c_Range32(66304LLU,66335LLU,1LLU),_1a9930e4c_Range32(66349LLU,66368LLU,1LLU),_1a9930e4c_Range32(66370LLU,66377LLU,1LLU),_1a9930e4c_Range32(66384LLU,66421LLU,1LLU),_1a9930e4c_Range32(66432LLU,66461LLU,1LLU),_1a9930e4c_Range32(66464LLU,66499LLU,1LLU),_1a9930e4c_Range32(66504LLU,66511LLU,1LLU),_1a9930e4c_Range32(66640LLU,66717LLU,1LLU),_1a9930e4c_Range32(66816LLU,66855LLU,1LLU),_1a9930e4c_Range32(66864LLU,66915LLU,1LLU),_1a9930e4c_Range32(67072LLU,67382LLU,1LLU),_1a9930e4c_Range32(67392LLU,67413LLU,1LLU),_1a9930e4c_Range32(67424LLU,67431LLU,1LLU),_1a9930e4c_Range32(67584LLU,67589LLU,1LLU),_1a9930e4c_Range32(67592LLU,67594LLU,2LLU),_1a9930e4c_Range32(67595LLU,67637LLU,1LLU),_1a9930e4c_Range32(67639LLU,67640LLU,1LLU),_1a9930e4c_Range32(67644LLU,67647LLU,3LLU),_1a9930e4c_Range32(67648LLU,67669LLU,1LLU),_1a9930e4c_Range32(67680LLU,67702LLU,1LLU),_1a9930e4c_Range32(67712LLU,67742LLU,1LLU),_1a9930e4c_Range32(67808LLU,67826LLU,1LLU),_1a9930e4c_Range32(67828LLU,67829LLU,1LLU),_1a9930e4c_Range32(67840LLU,67861LLU,1LLU),_1a9930e4c_Range32(67872LLU,67897LLU,1LLU),_1a9930e4c_Range32(67968LLU,68023LLU,1LLU),_1a9930e4c_Range32(68030LLU,68031LLU,1LLU),_1a9930e4c_Range32(68096LLU,68112LLU,16LLU),_1a9930e4c_Range32(68113LLU,68115LLU,1LLU),_1a9930e4c_Range32(68117LLU,68119LLU,1LLU),_1a9930e4c_Range32(68121LLU,68149LLU,1LLU),_1a9930e4c_Range32(68192LLU,68220LLU,1LLU),_1a9930e4c_Range32(68224LLU,68252LLU,1LLU),_1a9930e4c_Range32(68288LLU,68295LLU,1LLU),_1a9930e4c_Range32(68297LLU,68324LLU,1LLU),_1a9930e4c_Range32(68352LLU,68405LLU,1LLU),_1a9930e4c_Range32(68416LLU,68437LLU,1LLU),_1a9930e4c_Range32(68448LLU,68466LLU,1LLU),_1a9930e4c_Range32(68480LLU,68497LLU,1LLU),_1a9930e4c_Range32(68608LLU,68680LLU,1LLU),_1a9930e4c_Range32(68864LLU,68899LLU,1LLU),_1a9930e4c_Range32(69248LLU,69289LLU,1LLU),_1a9930e4c_Range32(69296LLU,69297LLU,1LLU),_1a9930e4c_Range32(69376LLU,69404LLU,1LLU),_1a9930e4c_Range32(69415LLU,69424LLU,9LLU),_1a9930e4c_Range32(69425LLU,69445LLU,1LLU),_1a9930e4c_Range32(69488LLU,69505LLU,1LLU),_1a9930e4c_Range32(69552LLU,69572LLU,1LLU),_1a9930e4c_Range32(69600LLU,69622LLU,1LLU),_1a9930e4c_Range32(69635LLU,69687LLU,1LLU),_1a9930e4c_Range32(69745LLU,69746LLU,1LLU),_1a9930e4c_Range32(69749LLU,69763LLU,14LLU),_1a9930e4c_Range32(69764LLU,69807LLU,1LLU),_1a9930e4c_Range32(69840LLU,69864LLU,1LLU),_1a9930e4c_Range32(69891LLU,69926LLU,1LLU),_1a9930e4c_Range32(69956LLU,69959LLU,3LLU),_1a9930e4c_Range32(69968LLU,70002LLU,1LLU),_1a9930e4c_Range32(70006LLU,70019LLU,13LLU),_1a9930e4c_Range32(70020LLU,70066LLU,1LLU),_1a9930e4c_Range32(70081LLU,70084LLU,1LLU),_1a9930e4c_Range32(70106LLU,70108LLU,2LLU),_1a9930e4c_Range32(70144LLU,70161LLU,1LLU),_1a9930e4c_Range32(70163LLU,70187LLU,1LLU),_1a9930e4c_Range32(70207LLU,70208LLU,1LLU),_1a9930e4c_Range32(70272LLU,70278LLU,1LLU),_1a9930e4c_Range32(70280LLU,70282LLU,2LLU),_1a9930e4c_Range32(70283LLU,70285LLU,1LLU),_1a9930e4c_Range32(70287LLU,70301LLU,1LLU),_1a9930e4c_Range32(70303LLU,70312LLU,1LLU),_1a9930e4c_Range32(70320LLU,70366LLU,1LLU),_1a9930e4c_Range32(70405LLU,70412LLU,1LLU),_1a9930e4c_Range32(70415LLU,70416LLU,1LLU),_1a9930e4c_Range32(70419LLU,70440LLU,1LLU),_1a9930e4c_Range32(70442LLU,70448LLU,1LLU),_1a9930e4c_Range32(70450LLU,70451LLU,1LLU),_1a9930e4c_Range32(70453LLU,70457LLU,1LLU),_1a9930e4c_Range32(70461LLU,70480LLU,19LLU),_1a9930e4c_Range32(70493LLU,70497LLU,1LLU),_1a9930e4c_Range32(70656LLU,70708LLU,1LLU),_1a9930e4c_Range32(70727LLU,70730LLU,1LLU),_1a9930e4c_Range32(70751LLU,70753LLU,1LLU),_1a9930e4c_Range32(70784LLU,70831LLU,1LLU),_1a9930e4c_Range32(70852LLU,70853LLU,1LLU),_1a9930e4c_Range32(70855LLU,71040LLU,185LLU),_1a9930e4c_Range32(71041LLU,71086LLU,1LLU),_1a9930e4c_Range32(71128LLU,71131LLU,1LLU),_1a9930e4c_Range32(71168LLU,71215LLU,1LLU),_1a9930e4c_Range32(71236LLU,71296LLU,60LLU),_1a9930e4c_Range32(71297LLU,71338LLU,1LLU),_1a9930e4c_Range32(71352LLU,71424LLU,72LLU),_1a9930e4c_Range32(71425LLU,71450LLU,1LLU),_1a9930e4c_Range32(71488LLU,71494LLU,1LLU),_1a9930e4c_Range32(71680LLU,71723LLU,1LLU),_1a9930e4c_Range32(71935LLU,71942LLU,1LLU),_1a9930e4c_Range32(71945LLU,71948LLU,3LLU),_1a9930e4c_Range32(71949LLU,71955LLU,1LLU),_1a9930e4c_Range32(71957LLU,71958LLU,1LLU),_1a9930e4c_Range32(71960LLU,71983LLU,1LLU),_1a9930e4c_Range32(71999LLU,72001LLU,2LLU),_1a9930e4c_Range32(72096LLU,72103LLU,1LLU),_1a9930e4c_Range32(72106LLU,72144LLU,1LLU),_1a9930e4c_Range32(72161LLU,72163LLU,2LLU),_1a9930e4c_Range32(72192LLU,72203LLU,11LLU),_1a9930e4c_Range32(72204LLU,72242LLU,1LLU),_1a9930e4c_Range32(72250LLU,72272LLU,22LLU),_1a9930e4c_Range32(72284LLU,72329LLU,1LLU),_1a9930e4c_Range32(72349LLU,72368LLU,19LLU),_1a9930e4c_Range32(72369LLU,72440LLU,1LLU),_1a9930e4c_Range32(72704LLU,72712LLU,1LLU),_1a9930e4c_Range32(72714LLU,72750LLU,1LLU),_1a9930e4c_Range32(72768LLU,72818LLU,50LLU),_1a9930e4c_Range32(72819LLU,72847LLU,1LLU),_1a9930e4c_Range32(72960LLU,72966LLU,1LLU),_1a9930e4c_Range32(72968LLU,72969LLU,1LLU),_1a9930e4c_Range32(72971LLU,73008LLU,1LLU),_1a9930e4c_Range32(73030LLU,73056LLU,26LLU),_1a9930e4c_Range32(73057LLU,73061LLU,1LLU),_1a9930e4c_Range32(73063LLU,73064LLU,1LLU),_1a9930e4c_Range32(73066LLU,73097LLU,1LLU),_1a9930e4c_Range32(73112LLU,73440LLU,328LLU),_1a9930e4c_Range32(73441LLU,73458LLU,1LLU),_1a9930e4c_Range32(73474LLU,73476LLU,2LLU),_1a9930e4c_Range32(73477LLU,73488LLU,1LLU),_1a9930e4c_Range32(73490LLU,73523LLU,1LLU),_1a9930e4c_Range32(73648LLU,73728LLU,80LLU),_1a9930e4c_Range32(73729LLU,74649LLU,1LLU),_1a9930e4c_Range32(74880LLU,75075LLU,1LLU),_1a9930e4c_Range32(77712LLU,77808LLU,1LLU),_1a9930e4c_Range32(77824LLU,78895LLU,1LLU),_1a9930e4c_Range32(78913LLU,78918LLU,1LLU),_1a9930e4c_Range32(82944LLU,83526LLU,1LLU),_1a9930e4c_Range32(92160LLU,92728LLU,1LLU),_1a9930e4c_Range32(92736LLU,92766LLU,1LLU),_1a9930e4c_Range32(92784LLU,92862LLU,1LLU),_1a9930e4c_Range32(92880LLU,92909LLU,1LLU),_1a9930e4c_Range32(92928LLU,92975LLU,1LLU),_1a9930e4c_Range32(93027LLU,93047LLU,1LLU),_1a9930e4c_Range32(93053LLU,93071LLU,1LLU),_1a9930e4c_Range32(93952LLU,94026LLU,1LLU),_1a9930e4c_Range32(94032LLU,94208LLU,176LLU),_1a9930e4c_Range32(94209LLU,100343LLU,1LLU),_1a9930e4c_Range32(100352LLU,101589LLU,1LLU),_1a9930e4c_Range32(101632LLU,101640LLU,1LLU),_1a9930e4c_Range32(110592LLU,110882LLU,1LLU),_1a9930e4c_Range32(110898LLU,110928LLU,30LLU),_1a9930e4c_Range32(110929LLU,110930LLU,1LLU),_1a9930e4c_Range32(110933LLU,110948LLU,15LLU),_1a9930e4c_Range32(110949LLU,110951LLU,1LLU),_1a9930e4c_Range32(110960LLU,111355LLU,1LLU),_1a9930e4c_Range32(113664LLU,113770LLU,1LLU),_1a9930e4c_Range32(113776LLU,113788LLU,1LLU),_1a9930e4c_Range32(113792LLU,113800LLU,1LLU),_1a9930e4c_Range32(113808LLU,113817LLU,1LLU),_1a9930e4c_Range32(122634LLU,123136LLU,502LLU),_1a9930e4c_Range32(123137LLU,123180LLU,1LLU),_1a9930e4c_Range32(123214LLU,123536LLU,322LLU),_1a9930e4c_Range32(123537LLU,123565LLU,1LLU),_1a9930e4c_Range32(123584LLU,123627LLU,1LLU),_1a9930e4c_Range32(124112LLU,124138LLU,1LLU),_1a9930e4c_Range32(124896LLU,124902LLU,1LLU),_1a9930e4c_Range32(124904LLU,124907LLU,1LLU),_1a9930e4c_Range32(124909LLU,124910LLU,1LLU),_1a9930e4c_Range32(124912LLU,124926LLU,1LLU),_1a9930e4c_Range32(124928LLU,125124LLU,1LLU),_1a9930e4c_Range32(126464LLU,126467LLU,1LLU),_1a9930e4c_Range32(126469LLU,126495LLU,1LLU),_1a9930e4c_Range32(126497LLU,126498LLU,1LLU),_1a9930e4c_Range32(126500LLU,126503LLU,3LLU),_1a9930e4c_Range32(126505LLU,126514LLU,1LLU),_1a9930e4c_Range32(126516LLU,126519LLU,1LLU),_1a9930e4c_Range32(126521LLU,126523LLU,2LLU),_1a9930e4c_Range32(126530LLU,126535LLU,5LLU),_1a9930e4c_Range32(126537LLU,126541LLU,2LLU),_1a9930e4c_Range32(126542LLU,126543LLU,1LLU),_1a9930e4c_Range32(126545LLU,126546LLU,1LLU),_1a9930e4c_Range32(126548LLU,126551LLU,3LLU),_1a9930e4c_Range32(126553LLU,126561LLU,2LLU),_1a9930e4c_Range32(126562LLU,126564LLU,2LLU),_1a9930e4c_Range32(126567LLU,126570LLU,1LLU),_1a9930e4c_Range32(126572LLU,126578LLU,1LLU),_1a9930e4c_Range32(126580LLU,126583LLU,1LLU),_1a9930e4c_Range32(126585LLU,126588LLU,1LLU),_1a9930e4c_Range32(126590LLU,126592LLU,2LLU),_1a9930e4c_Range32(126593LLU,126601LLU,1LLU),_1a9930e4c_Range32(126603LLU,126619LLU,1LLU),_1a9930e4c_Range32(126625LLU,126627LLU,1LLU),_1a9930e4c_Range32(126629LLU,126633LLU,1LLU),_1a9930e4c_Range32(126635LLU,126651LLU,1LLU),_1a9930e4c_Range32(131072LLU,173791LLU,1LLU),_1a9930e4c_Range32(173824LLU,177977LLU,1LLU),_1a9930e4c_Range32(177984LLU,178205LLU,1LLU),_1a9930e4c_Range32(178208LLU,183969LLU,1LLU),_1a9930e4c_Range32(183984LLU,191456LLU,1LLU),_1a9930e4c_Range32(194560LLU,195101LLU,1LLU),_1a9930e4c_Range32(196608LLU,201546LLU,1LLU),_1a9930e4c_Range32(201552LLU,205743LLU,1LLU)}),1LL));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__LT = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(453LLU,459LLU,3LLU),_1a9930e4c_Range16(498LLU,8072LLU,7574LLU),_1a9930e4c_Range16(8073LLU,8079LLU,1LLU),_1a9930e4c_Range16(8088LLU,8095LLU,1LLU),_1a9930e4c_Range16(8104LLU,8111LLU,1LLU),_1a9930e4c_Range16(8124LLU,8140LLU,16LLU),_1a9930e4c_Range16(8188LLU,8188LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__LU = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(65LLU,90LLU,1LLU),_1a9930e4c_Range16(192LLU,214LLU,1LLU),_1a9930e4c_Range16(216LLU,222LLU,1LLU),_1a9930e4c_Range16(256LLU,310LLU,2LLU),_1a9930e4c_Range16(313LLU,327LLU,2LLU),_1a9930e4c_Range16(330LLU,376LLU,2LLU),_1a9930e4c_Range16(377LLU,381LLU,2LLU),_1a9930e4c_Range16(385LLU,386LLU,1LLU),_1a9930e4c_Range16(388LLU,390LLU,2LLU),_1a9930e4c_Range16(391LLU,393LLU,2LLU),_1a9930e4c_Range16(394LLU,395LLU,1LLU),_1a9930e4c_Range16(398LLU,401LLU,1LLU),_1a9930e4c_Range16(403LLU,404LLU,1LLU),_1a9930e4c_Range16(406LLU,408LLU,1LLU),_1a9930e4c_Range16(412LLU,413LLU,1LLU),_1a9930e4c_Range16(415LLU,416LLU,1LLU),_1a9930e4c_Range16(418LLU,422LLU,2LLU),_1a9930e4c_Range16(423LLU,425LLU,2LLU),_1a9930e4c_Range16(428LLU,430LLU,2LLU),_1a9930e4c_Range16(431LLU,433LLU,2LLU),_1a9930e4c_Range16(434LLU,435LLU,1LLU),_1a9930e4c_Range16(437LLU,439LLU,2LLU),_1a9930e4c_Range16(440LLU,444LLU,4LLU),_1a9930e4c_Range16(452LLU,461LLU,3LLU),_1a9930e4c_Range16(463LLU,475LLU,2LLU),_1a9930e4c_Range16(478LLU,494LLU,2LLU),_1a9930e4c_Range16(497LLU,500LLU,3LLU),_1a9930e4c_Range16(502LLU,504LLU,1LLU),_1a9930e4c_Range16(506LLU,562LLU,2LLU),_1a9930e4c_Range16(570LLU,571LLU,1LLU),_1a9930e4c_Range16(573LLU,574LLU,1LLU),_1a9930e4c_Range16(577LLU,579LLU,2LLU),_1a9930e4c_Range16(580LLU,582LLU,1LLU),_1a9930e4c_Range16(584LLU,590LLU,2LLU),_1a9930e4c_Range16(880LLU,882LLU,2LLU),_1a9930e4c_Range16(886LLU,895LLU,9LLU),_1a9930e4c_Range16(902LLU,904LLU,2LLU),_1a9930e4c_Range16(905LLU,906LLU,1LLU),_1a9930e4c_Range16(908LLU,910LLU,2LLU),_1a9930e4c_Range16(911LLU,913LLU,2LLU),_1a9930e4c_Range16(914LLU,929LLU,1LLU),_1a9930e4c_Range16(931LLU,939LLU,1LLU),_1a9930e4c_Range16(975LLU,978LLU,3LLU),_1a9930e4c_Range16(979LLU,980LLU,1LLU),_1a9930e4c_Range16(984LLU,1006LLU,2LLU),_1a9930e4c_Range16(1012LLU,1015LLU,3LLU),_1a9930e4c_Range16(1017LLU,1018LLU,1LLU),_1a9930e4c_Range16(1021LLU,1071LLU,1LLU),_1a9930e4c_Range16(1120LLU,1152LLU,2LLU),_1a9930e4c_Range16(1162LLU,1216LLU,2LLU),_1a9930e4c_Range16(1217LLU,1229LLU,2LLU),_1a9930e4c_Range16(1232LLU,1326LLU,2LLU),_1a9930e4c_Range16(1329LLU,1366LLU,1LLU),_1a9930e4c_Range16(4256LLU,4293LLU,1LLU),_1a9930e4c_Range16(4295LLU,4301LLU,6LLU),_1a9930e4c_Range16(5024LLU,5109LLU,1LLU),_1a9930e4c_Range16(7312LLU,7354LLU,1LLU),_1a9930e4c_Range16(7357LLU,7359LLU,1LLU),_1a9930e4c_Range16(7680LLU,7828LLU,2LLU),_1a9930e4c_Range16(7838LLU,7934LLU,2LLU),_1a9930e4c_Range16(7944LLU,7951LLU,1LLU),_1a9930e4c_Range16(7960LLU,7965LLU,1LLU),_1a9930e4c_Range16(7976LLU,7983LLU,1LLU),_1a9930e4c_Range16(7992LLU,7999LLU,1LLU),_1a9930e4c_Range16(8008LLU,8013LLU,1LLU),_1a9930e4c_Range16(8025LLU,8031LLU,2LLU),_1a9930e4c_Range16(8040LLU,8047LLU,1LLU),_1a9930e4c_Range16(8120LLU,8123LLU,1LLU),_1a9930e4c_Range16(8136LLU,8139LLU,1LLU),_1a9930e4c_Range16(8152LLU,8155LLU,1LLU),_1a9930e4c_Range16(8168LLU,8172LLU,1LLU),_1a9930e4c_Range16(8184LLU,8187LLU,1LLU),_1a9930e4c_Range16(8450LLU,8455LLU,5LLU),_1a9930e4c_Range16(8459LLU,8461LLU,1LLU),_1a9930e4c_Range16(8464LLU,8466LLU,1LLU),_1a9930e4c_Range16(8469LLU,8473LLU,4LLU),_1a9930e4c_Range16(8474LLU,8477LLU,1LLU),_1a9930e4c_Range16(8484LLU,8490LLU,2LLU),_1a9930e4c_Range16(8491LLU,8493LLU,1LLU),_1a9930e4c_Range16(8496LLU,8499LLU,1LLU),_1a9930e4c_Range16(8510LLU,8511LLU,1LLU),_1a9930e4c_Range16(8517LLU,8579LLU,62LLU),_1a9930e4c_Range16(11264LLU,11311LLU,1LLU),_1a9930e4c_Range16(11360LLU,11362LLU,2LLU),_1a9930e4c_Range16(11363LLU,11364LLU,1LLU),_1a9930e4c_Range16(11367LLU,11373LLU,2LLU),_1a9930e4c_Range16(11374LLU,11376LLU,1LLU),_1a9930e4c_Range16(11378LLU,11381LLU,3LLU),_1a9930e4c_Range16(11390LLU,11392LLU,1LLU),_1a9930e4c_Range16(11394LLU,11490LLU,2LLU),_1a9930e4c_Range16(11499LLU,11501LLU,2LLU),_1a9930e4c_Range16(11506LLU,42560LLU,31054LLU),_1a9930e4c_Range16(42562LLU,42604LLU,2LLU),_1a9930e4c_Range16(42624LLU,42650LLU,2LLU),_1a9930e4c_Range16(42786LLU,42798LLU,2LLU),_1a9930e4c_Range16(42802LLU,42862LLU,2LLU),_1a9930e4c_Range16(42873LLU,42877LLU,2LLU),_1a9930e4c_Range16(42878LLU,42886LLU,2LLU),_1a9930e4c_Range16(42891LLU,42893LLU,2LLU),_1a9930e4c_Range16(42896LLU,42898LLU,2LLU),_1a9930e4c_Range16(42902LLU,42922LLU,2LLU),_1a9930e4c_Range16(42923LLU,42926LLU,1LLU),_1a9930e4c_Range16(42928LLU,42932LLU,1LLU),_1a9930e4c_Range16(42934LLU,42948LLU,2LLU),_1a9930e4c_Range16(42949LLU,42951LLU,1LLU),_1a9930e4c_Range16(42953LLU,42960LLU,7LLU),_1a9930e4c_Range16(42966LLU,42968LLU,2LLU),_1a9930e4c_Range16(42997LLU,65313LLU,22316LLU),_1a9930e4c_Range16(65314LLU,65338LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(66560LLU,66599LLU,1LLU),_1a9930e4c_Range32(66736LLU,66771LLU,1LLU),_1a9930e4c_Range32(66928LLU,66938LLU,1LLU),_1a9930e4c_Range32(66940LLU,66954LLU,1LLU),_1a9930e4c_Range32(66956LLU,66962LLU,1LLU),_1a9930e4c_Range32(66964LLU,66965LLU,1LLU),_1a9930e4c_Range32(68736LLU,68786LLU,1LLU),_1a9930e4c_Range32(71840LLU,71871LLU,1LLU),_1a9930e4c_Range32(93760LLU,93791LLU,1LLU),_1a9930e4c_Range32(119808LLU,119833LLU,1LLU),_1a9930e4c_Range32(119860LLU,119885LLU,1LLU),_1a9930e4c_Range32(119912LLU,119937LLU,1LLU),_1a9930e4c_Range32(119964LLU,119966LLU,2LLU),_1a9930e4c_Range32(119967LLU,119973LLU,3LLU),_1a9930e4c_Range32(119974LLU,119977LLU,3LLU),_1a9930e4c_Range32(119978LLU,119980LLU,1LLU),_1a9930e4c_Range32(119982LLU,119989LLU,1LLU),_1a9930e4c_Range32(120016LLU,120041LLU,1LLU),_1a9930e4c_Range32(120068LLU,120069LLU,1LLU),_1a9930e4c_Range32(120071LLU,120074LLU,1LLU),_1a9930e4c_Range32(120077LLU,120084LLU,1LLU),_1a9930e4c_Range32(120086LLU,120092LLU,1LLU),_1a9930e4c_Range32(120120LLU,120121LLU,1LLU),_1a9930e4c_Range32(120123LLU,120126LLU,1LLU),_1a9930e4c_Range32(120128LLU,120132LLU,1LLU),_1a9930e4c_Range32(120134LLU,120138LLU,4LLU),_1a9930e4c_Range32(120139LLU,120144LLU,1LLU),_1a9930e4c_Range32(120172LLU,120197LLU,1LLU),_1a9930e4c_Range32(120224LLU,120249LLU,1LLU),_1a9930e4c_Range32(120276LLU,120301LLU,1LLU),_1a9930e4c_Range32(120328LLU,120353LLU,1LLU),_1a9930e4c_Range32(120380LLU,120405LLU,1LLU),_1a9930e4c_Range32(120432LLU,120457LLU,1LLU),_1a9930e4c_Range32(120488LLU,120512LLU,1LLU),_1a9930e4c_Range32(120546LLU,120570LLU,1LLU),_1a9930e4c_Range32(120604LLU,120628LLU,1LLU),_1a9930e4c_Range32(120662LLU,120686LLU,1LLU),_1a9930e4c_Range32(120720LLU,120744LLU,1LLU),_1a9930e4c_Range32(120778LLU,125184LLU,4406LLU),_1a9930e4c_Range32(125185LLU,125217LLU,1LLU)}),3LL));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__M = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(768LLU,879LLU,1LLU),_1a9930e4c_Range16(1155LLU,1161LLU,1LLU),_1a9930e4c_Range16(1425LLU,1469LLU,1LLU),_1a9930e4c_Range16(1471LLU,1473LLU,2LLU),_1a9930e4c_Range16(1474LLU,1476LLU,2LLU),_1a9930e4c_Range16(1477LLU,1479LLU,2LLU),_1a9930e4c_Range16(1552LLU,1562LLU,1LLU),_1a9930e4c_Range16(1611LLU,1631LLU,1LLU),_1a9930e4c_Range16(1648LLU,1750LLU,102LLU),_1a9930e4c_Range16(1751LLU,1756LLU,1LLU),_1a9930e4c_Range16(1759LLU,1764LLU,1LLU),_1a9930e4c_Range16(1767LLU,1768LLU,1LLU),_1a9930e4c_Range16(1770LLU,1773LLU,1LLU),_1a9930e4c_Range16(1809LLU,1840LLU,31LLU),_1a9930e4c_Range16(1841LLU,1866LLU,1LLU),_1a9930e4c_Range16(1958LLU,1968LLU,1LLU),_1a9930e4c_Range16(2027LLU,2035LLU,1LLU),_1a9930e4c_Range16(2045LLU,2070LLU,25LLU),_1a9930e4c_Range16(2071LLU,2073LLU,1LLU),_1a9930e4c_Range16(2075LLU,2083LLU,1LLU),_1a9930e4c_Range16(2085LLU,2087LLU,1LLU),_1a9930e4c_Range16(2089LLU,2093LLU,1LLU),_1a9930e4c_Range16(2137LLU,2139LLU,1LLU),_1a9930e4c_Range16(2200LLU,2207LLU,1LLU),_1a9930e4c_Range16(2250LLU,2273LLU,1LLU),_1a9930e4c_Range16(2275LLU,2307LLU,1LLU),_1a9930e4c_Range16(2362LLU,2364LLU,1LLU),_1a9930e4c_Range16(2366LLU,2383LLU,1LLU),_1a9930e4c_Range16(2385LLU,2391LLU,1LLU),_1a9930e4c_Range16(2402LLU,2403LLU,1LLU),_1a9930e4c_Range16(2433LLU,2435LLU,1LLU),_1a9930e4c_Range16(2492LLU,2494LLU,2LLU),_1a9930e4c_Range16(2495LLU,2500LLU,1LLU),_1a9930e4c_Range16(2503LLU,2504LLU,1LLU),_1a9930e4c_Range16(2507LLU,2509LLU,1LLU),_1a9930e4c_Range16(2519LLU,2530LLU,11LLU),_1a9930e4c_Range16(2531LLU,2558LLU,27LLU),_1a9930e4c_Range16(2561LLU,2563LLU,1LLU),_1a9930e4c_Range16(2620LLU,2622LLU,2LLU),_1a9930e4c_Range16(2623LLU,2626LLU,1LLU),_1a9930e4c_Range16(2631LLU,2632LLU,1LLU),_1a9930e4c_Range16(2635LLU,2637LLU,1LLU),_1a9930e4c_Range16(2641LLU,2672LLU,31LLU),_1a9930e4c_Range16(2673LLU,2677LLU,4LLU),_1a9930e4c_Range16(2689LLU,2691LLU,1LLU),_1a9930e4c_Range16(2748LLU,2750LLU,2LLU),_1a9930e4c_Range16(2751LLU,2757LLU,1LLU),_1a9930e4c_Range16(2759LLU,2761LLU,1LLU),_1a9930e4c_Range16(2763LLU,2765LLU,1LLU),_1a9930e4c_Range16(2786LLU,2787LLU,1LLU),_1a9930e4c_Range16(2810LLU,2815LLU,1LLU),_1a9930e4c_Range16(2817LLU,2819LLU,1LLU),_1a9930e4c_Range16(2876LLU,2878LLU,2LLU),_1a9930e4c_Range16(2879LLU,2884LLU,1LLU),_1a9930e4c_Range16(2887LLU,2888LLU,1LLU),_1a9930e4c_Range16(2891LLU,2893LLU,1LLU),_1a9930e4c_Range16(2901LLU,2903LLU,1LLU),_1a9930e4c_Range16(2914LLU,2915LLU,1LLU),_1a9930e4c_Range16(2946LLU,3006LLU,60LLU),_1a9930e4c_Range16(3007LLU,3010LLU,1LLU),_1a9930e4c_Range16(3014LLU,3016LLU,1LLU),_1a9930e4c_Range16(3018LLU,3021LLU,1LLU),_1a9930e4c_Range16(3031LLU,3072LLU,41LLU),_1a9930e4c_Range16(3073LLU,3076LLU,1LLU),_1a9930e4c_Range16(3132LLU,3134LLU,2LLU),_1a9930e4c_Range16(3135LLU,3140LLU,1LLU),_1a9930e4c_Range16(3142LLU,3144LLU,1LLU),_1a9930e4c_Range16(3146LLU,3149LLU,1LLU),_1a9930e4c_Range16(3157LLU,3158LLU,1LLU),_1a9930e4c_Range16(3170LLU,3171LLU,1LLU),_1a9930e4c_Range16(3201LLU,3203LLU,1LLU),_1a9930e4c_Range16(3260LLU,3262LLU,2LLU),_1a9930e4c_Range16(3263LLU,3268LLU,1LLU),_1a9930e4c_Range16(3270LLU,3272LLU,1LLU),_1a9930e4c_Range16(3274LLU,3277LLU,1LLU),_1a9930e4c_Range16(3285LLU,3286LLU,1LLU),_1a9930e4c_Range16(3298LLU,3299LLU,1LLU),_1a9930e4c_Range16(3315LLU,3328LLU,13LLU),_1a9930e4c_Range16(3329LLU,3331LLU,1LLU),_1a9930e4c_Range16(3387LLU,3388LLU,1LLU),_1a9930e4c_Range16(3390LLU,3396LLU,1LLU),_1a9930e4c_Range16(3398LLU,3400LLU,1LLU),_1a9930e4c_Range16(3402LLU,3405LLU,1LLU),_1a9930e4c_Range16(3415LLU,3426LLU,11LLU),_1a9930e4c_Range16(3427LLU,3457LLU,30LLU),_1a9930e4c_Range16(3458LLU,3459LLU,1LLU),_1a9930e4c_Range16(3530LLU,3535LLU,5LLU),_1a9930e4c_Range16(3536LLU,3540LLU,1LLU),_1a9930e4c_Range16(3542LLU,3544LLU,2LLU),_1a9930e4c_Range16(3545LLU,3551LLU,1LLU),_1a9930e4c_Range16(3570LLU,3571LLU,1LLU),_1a9930e4c_Range16(3633LLU,3636LLU,3LLU),_1a9930e4c_Range16(3637LLU,3642LLU,1LLU),_1a9930e4c_Range16(3655LLU,3662LLU,1LLU),_1a9930e4c_Range16(3761LLU,3764LLU,3LLU),_1a9930e4c_Range16(3765LLU,3772LLU,1LLU),_1a9930e4c_Range16(3784LLU,3790LLU,1LLU),_1a9930e4c_Range16(3864LLU,3865LLU,1LLU),_1a9930e4c_Range16(3893LLU,3897LLU,2LLU),_1a9930e4c_Range16(3902LLU,3903LLU,1LLU),_1a9930e4c_Range16(3953LLU,3972LLU,1LLU),_1a9930e4c_Range16(3974LLU,3975LLU,1LLU),_1a9930e4c_Range16(3981LLU,3991LLU,1LLU),_1a9930e4c_Range16(3993LLU,4028LLU,1LLU),_1a9930e4c_Range16(4038LLU,4139LLU,101LLU),_1a9930e4c_Range16(4140LLU,4158LLU,1LLU),_1a9930e4c_Range16(4182LLU,4185LLU,1LLU),_1a9930e4c_Range16(4190LLU,4192LLU,1LLU),_1a9930e4c_Range16(4194LLU,4196LLU,1LLU),_1a9930e4c_Range16(4199LLU,4205LLU,1LLU),_1a9930e4c_Range16(4209LLU,4212LLU,1LLU),_1a9930e4c_Range16(4226LLU,4237LLU,1LLU),_1a9930e4c_Range16(4239LLU,4250LLU,11LLU),_1a9930e4c_Range16(4251LLU,4253LLU,1LLU),_1a9930e4c_Range16(4957LLU,4959LLU,1LLU),_1a9930e4c_Range16(5906LLU,5909LLU,1LLU),_1a9930e4c_Range16(5938LLU,5940LLU,1LLU),_1a9930e4c_Range16(5970LLU,5971LLU,1LLU),_1a9930e4c_Range16(6002LLU,6003LLU,1LLU),_1a9930e4c_Range16(6068LLU,6099LLU,1LLU),_1a9930e4c_Range16(6109LLU,6155LLU,46LLU),_1a9930e4c_Range16(6156LLU,6157LLU,1LLU),_1a9930e4c_Range16(6159LLU,6277LLU,118LLU),_1a9930e4c_Range16(6278LLU,6313LLU,35LLU),_1a9930e4c_Range16(6432LLU,6443LLU,1LLU),_1a9930e4c_Range16(6448LLU,6459LLU,1LLU),_1a9930e4c_Range16(6679LLU,6683LLU,1LLU),_1a9930e4c_Range16(6741LLU,6750LLU,1LLU),_1a9930e4c_Range16(6752LLU,6780LLU,1LLU),_1a9930e4c_Range16(6783LLU,6832LLU,49LLU),_1a9930e4c_Range16(6833LLU,6862LLU,1LLU),_1a9930e4c_Range16(6912LLU,6916LLU,1LLU),_1a9930e4c_Range16(6964LLU,6980LLU,1LLU),_1a9930e4c_Range16(7019LLU,7027LLU,1LLU),_1a9930e4c_Range16(7040LLU,7042LLU,1LLU),_1a9930e4c_Range16(7073LLU,7085LLU,1LLU),_1a9930e4c_Range16(7142LLU,7155LLU,1LLU),_1a9930e4c_Range16(7204LLU,7223LLU,1LLU),_1a9930e4c_Range16(7376LLU,7378LLU,1LLU),_1a9930e4c_Range16(7380LLU,7400LLU,1LLU),_1a9930e4c_Range16(7405LLU,7412LLU,7LLU),_1a9930e4c_Range16(7415LLU,7417LLU,1LLU),_1a9930e4c_Range16(7616LLU,7679LLU,1LLU),_1a9930e4c_Range16(8400LLU,8432LLU,1LLU),_1a9930e4c_Range16(11503LLU,11505LLU,1LLU),_1a9930e4c_Range16(11647LLU,11744LLU,97LLU),_1a9930e4c_Range16(11745LLU,11775LLU,1LLU),_1a9930e4c_Range16(12330LLU,12335LLU,1LLU),_1a9930e4c_Range16(12441LLU,12442LLU,1LLU),_1a9930e4c_Range16(42607LLU,42610LLU,1LLU),_1a9930e4c_Range16(42612LLU,42621LLU,1LLU),_1a9930e4c_Range16(42654LLU,42655LLU,1LLU),_1a9930e4c_Range16(42736LLU,42737LLU,1LLU),_1a9930e4c_Range16(43010LLU,43014LLU,4LLU),_1a9930e4c_Range16(43019LLU,43043LLU,24LLU),_1a9930e4c_Range16(43044LLU,43047LLU,1LLU),_1a9930e4c_Range16(43052LLU,43136LLU,84LLU),_1a9930e4c_Range16(43137LLU,43188LLU,51LLU),_1a9930e4c_Range16(43189LLU,43205LLU,1LLU),_1a9930e4c_Range16(43232LLU,43249LLU,1LLU),_1a9930e4c_Range16(43263LLU,43302LLU,39LLU),_1a9930e4c_Range16(43303LLU,43309LLU,1LLU),_1a9930e4c_Range16(43335LLU,43347LLU,1LLU),_1a9930e4c_Range16(43392LLU,43395LLU,1LLU),_1a9930e4c_Range16(43443LLU,43456LLU,1LLU),_1a9930e4c_Range16(43493LLU,43561LLU,68LLU),_1a9930e4c_Range16(43562LLU,43574LLU,1LLU),_1a9930e4c_Range16(43587LLU,43596LLU,9LLU),_1a9930e4c_Range16(43597LLU,43643LLU,46LLU),_1a9930e4c_Range16(43644LLU,43645LLU,1LLU),_1a9930e4c_Range16(43696LLU,43698LLU,2LLU),_1a9930e4c_Range16(43699LLU,43700LLU,1LLU),_1a9930e4c_Range16(43703LLU,43704LLU,1LLU),_1a9930e4c_Range16(43710LLU,43711LLU,1LLU),_1a9930e4c_Range16(43713LLU,43755LLU,42LLU),_1a9930e4c_Range16(43756LLU,43759LLU,1LLU),_1a9930e4c_Range16(43765LLU,43766LLU,1LLU),_1a9930e4c_Range16(44003LLU,44010LLU,1LLU),_1a9930e4c_Range16(44012LLU,44013LLU,1LLU),_1a9930e4c_Range16(64286LLU,65024LLU,738LLU),_1a9930e4c_Range16(65025LLU,65039LLU,1LLU),_1a9930e4c_Range16(65056LLU,65071LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(66045LLU,66272LLU,227LLU),_1a9930e4c_Range32(66422LLU,66426LLU,1LLU),_1a9930e4c_Range32(68097LLU,68099LLU,1LLU),_1a9930e4c_Range32(68101LLU,68102LLU,1LLU),_1a9930e4c_Range32(68108LLU,68111LLU,1LLU),_1a9930e4c_Range32(68152LLU,68154LLU,1LLU),_1a9930e4c_Range32(68159LLU,68325LLU,166LLU),_1a9930e4c_Range32(68326LLU,68900LLU,574LLU),_1a9930e4c_Range32(68901LLU,68903LLU,1LLU),_1a9930e4c_Range32(69291LLU,69292LLU,1LLU),_1a9930e4c_Range32(69373LLU,69375LLU,1LLU),_1a9930e4c_Range32(69446LLU,69456LLU,1LLU),_1a9930e4c_Range32(69506LLU,69509LLU,1LLU),_1a9930e4c_Range32(69632LLU,69634LLU,1LLU),_1a9930e4c_Range32(69688LLU,69702LLU,1LLU),_1a9930e4c_Range32(69744LLU,69747LLU,3LLU),_1a9930e4c_Range32(69748LLU,69759LLU,11LLU),_1a9930e4c_Range32(69760LLU,69762LLU,1LLU),_1a9930e4c_Range32(69808LLU,69818LLU,1LLU),_1a9930e4c_Range32(69826LLU,69888LLU,62LLU),_1a9930e4c_Range32(69889LLU,69890LLU,1LLU),_1a9930e4c_Range32(69927LLU,69940LLU,1LLU),_1a9930e4c_Range32(69957LLU,69958LLU,1LLU),_1a9930e4c_Range32(70003LLU,70016LLU,13LLU),_1a9930e4c_Range32(70017LLU,70018LLU,1LLU),_1a9930e4c_Range32(70067LLU,70080LLU,1LLU),_1a9930e4c_Range32(70089LLU,70092LLU,1LLU),_1a9930e4c_Range32(70094LLU,70095LLU,1LLU),_1a9930e4c_Range32(70188LLU,70199LLU,1LLU),_1a9930e4c_Range32(70206LLU,70209LLU,3LLU),_1a9930e4c_Range32(70367LLU,70378LLU,1LLU),_1a9930e4c_Range32(70400LLU,70403LLU,1LLU),_1a9930e4c_Range32(70459LLU,70460LLU,1LLU),_1a9930e4c_Range32(70462LLU,70468LLU,1LLU),_1a9930e4c_Range32(70471LLU,70472LLU,1LLU),_1a9930e4c_Range32(70475LLU,70477LLU,1LLU),_1a9930e4c_Range32(70487LLU,70498LLU,11LLU),_1a9930e4c_Range32(70499LLU,70502LLU,3LLU),_1a9930e4c_Range32(70503LLU,70508LLU,1LLU),_1a9930e4c_Range32(70512LLU,70516LLU,1LLU),_1a9930e4c_Range32(70709LLU,70726LLU,1LLU),_1a9930e4c_Range32(70750LLU,70832LLU,82LLU),_1a9930e4c_Range32(70833LLU,70851LLU,1LLU),_1a9930e4c_Range32(71087LLU,71093LLU,1LLU),_1a9930e4c_Range32(71096LLU,71104LLU,1LLU),_1a9930e4c_Range32(71132LLU,71133LLU,1LLU),_1a9930e4c_Range32(71216LLU,71232LLU,1LLU),_1a9930e4c_Range32(71339LLU,71351LLU,1LLU),_1a9930e4c_Range32(71453LLU,71467LLU,1LLU),_1a9930e4c_Range32(71724LLU,71738LLU,1LLU),_1a9930e4c_Range32(71984LLU,71989LLU,1LLU),_1a9930e4c_Range32(71991LLU,71992LLU,1LLU),_1a9930e4c_Range32(71995LLU,71998LLU,1LLU),_1a9930e4c_Range32(72000LLU,72002LLU,2LLU),_1a9930e4c_Range32(72003LLU,72145LLU,142LLU),_1a9930e4c_Range32(72146LLU,72151LLU,1LLU),_1a9930e4c_Range32(72154LLU,72160LLU,1LLU),_1a9930e4c_Range32(72164LLU,72193LLU,29LLU),_1a9930e4c_Range32(72194LLU,72202LLU,1LLU),_1a9930e4c_Range32(72243LLU,72249LLU,1LLU),_1a9930e4c_Range32(72251LLU,72254LLU,1LLU),_1a9930e4c_Range32(72263LLU,72273LLU,10LLU),_1a9930e4c_Range32(72274LLU,72283LLU,1LLU),_1a9930e4c_Range32(72330LLU,72345LLU,1LLU),_1a9930e4c_Range32(72751LLU,72758LLU,1LLU),_1a9930e4c_Range32(72760LLU,72767LLU,1LLU),_1a9930e4c_Range32(72850LLU,72871LLU,1LLU),_1a9930e4c_Range32(72873LLU,72886LLU,1LLU),_1a9930e4c_Range32(73009LLU,73014LLU,1LLU),_1a9930e4c_Range32(73018LLU,73020LLU,2LLU),_1a9930e4c_Range32(73021LLU,73023LLU,2LLU),_1a9930e4c_Range32(73024LLU,73029LLU,1LLU),_1a9930e4c_Range32(73031LLU,73098LLU,67LLU),_1a9930e4c_Range32(73099LLU,73102LLU,1LLU),_1a9930e4c_Range32(73104LLU,73105LLU,1LLU),_1a9930e4c_Range32(73107LLU,73111LLU,1LLU),_1a9930e4c_Range32(73459LLU,73462LLU,1LLU),_1a9930e4c_Range32(73472LLU,73473LLU,1LLU),_1a9930e4c_Range32(73475LLU,73524LLU,49LLU),_1a9930e4c_Range32(73525LLU,73530LLU,1LLU),_1a9930e4c_Range32(73534LLU,73538LLU,1LLU),_1a9930e4c_Range32(78912LLU,78919LLU,7LLU),_1a9930e4c_Range32(78920LLU,78933LLU,1LLU),_1a9930e4c_Range32(92912LLU,92916LLU,1LLU),_1a9930e4c_Range32(92976LLU,92982LLU,1LLU),_1a9930e4c_Range32(94031LLU,94033LLU,2LLU),_1a9930e4c_Range32(94034LLU,94087LLU,1LLU),_1a9930e4c_Range32(94095LLU,94098LLU,1LLU),_1a9930e4c_Range32(94180LLU,94192LLU,12LLU),_1a9930e4c_Range32(94193LLU,113821LLU,19628LLU),_1a9930e4c_Range32(113822LLU,118528LLU,4706LLU),_1a9930e4c_Range32(118529LLU,118573LLU,1LLU),_1a9930e4c_Range32(118576LLU,118598LLU,1LLU),_1a9930e4c_Range32(119141LLU,119145LLU,1LLU),_1a9930e4c_Range32(119149LLU,119154LLU,1LLU),_1a9930e4c_Range32(119163LLU,119170LLU,1LLU),_1a9930e4c_Range32(119173LLU,119179LLU,1LLU),_1a9930e4c_Range32(119210LLU,119213LLU,1LLU),_1a9930e4c_Range32(119362LLU,119364LLU,1LLU),_1a9930e4c_Range32(121344LLU,121398LLU,1LLU),_1a9930e4c_Range32(121403LLU,121452LLU,1LLU),_1a9930e4c_Range32(121461LLU,121476LLU,15LLU),_1a9930e4c_Range32(121499LLU,121503LLU,1LLU),_1a9930e4c_Range32(121505LLU,121519LLU,1LLU),_1a9930e4c_Range32(122880LLU,122886LLU,1LLU),_1a9930e4c_Range32(122888LLU,122904LLU,1LLU),_1a9930e4c_Range32(122907LLU,122913LLU,1LLU),_1a9930e4c_Range32(122915LLU,122916LLU,1LLU),_1a9930e4c_Range32(122918LLU,122922LLU,1LLU),_1a9930e4c_Range32(123023LLU,123184LLU,161LLU),_1a9930e4c_Range32(123185LLU,123190LLU,1LLU),_1a9930e4c_Range32(123566LLU,123628LLU,62LLU),_1a9930e4c_Range32(123629LLU,123631LLU,1LLU),_1a9930e4c_Range32(124140LLU,124143LLU,1LLU),_1a9930e4c_Range32(125136LLU,125142LLU,1LLU),_1a9930e4c_Range32(125252LLU,125258LLU,1LLU),_1a9930e4c_Range32(917760LLU,917999LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__MC = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(2307LLU,2363LLU,56LLU),_1a9930e4c_Range16(2366LLU,2368LLU,1LLU),_1a9930e4c_Range16(2377LLU,2380LLU,1LLU),_1a9930e4c_Range16(2382LLU,2383LLU,1LLU),_1a9930e4c_Range16(2434LLU,2435LLU,1LLU),_1a9930e4c_Range16(2494LLU,2496LLU,1LLU),_1a9930e4c_Range16(2503LLU,2504LLU,1LLU),_1a9930e4c_Range16(2507LLU,2508LLU,1LLU),_1a9930e4c_Range16(2519LLU,2563LLU,44LLU),_1a9930e4c_Range16(2622LLU,2624LLU,1LLU),_1a9930e4c_Range16(2691LLU,2750LLU,59LLU),_1a9930e4c_Range16(2751LLU,2752LLU,1LLU),_1a9930e4c_Range16(2761LLU,2763LLU,2LLU),_1a9930e4c_Range16(2764LLU,2818LLU,54LLU),_1a9930e4c_Range16(2819LLU,2878LLU,59LLU),_1a9930e4c_Range16(2880LLU,2887LLU,7LLU),_1a9930e4c_Range16(2888LLU,2891LLU,3LLU),_1a9930e4c_Range16(2892LLU,2903LLU,11LLU),_1a9930e4c_Range16(3006LLU,3007LLU,1LLU),_1a9930e4c_Range16(3009LLU,3010LLU,1LLU),_1a9930e4c_Range16(3014LLU,3016LLU,1LLU),_1a9930e4c_Range16(3018LLU,3020LLU,1LLU),_1a9930e4c_Range16(3031LLU,3073LLU,42LLU),_1a9930e4c_Range16(3074LLU,3075LLU,1LLU),_1a9930e4c_Range16(3137LLU,3140LLU,1LLU),_1a9930e4c_Range16(3202LLU,3203LLU,1LLU),_1a9930e4c_Range16(3262LLU,3264LLU,2LLU),_1a9930e4c_Range16(3265LLU,3268LLU,1LLU),_1a9930e4c_Range16(3271LLU,3272LLU,1LLU),_1a9930e4c_Range16(3274LLU,3275LLU,1LLU),_1a9930e4c_Range16(3285LLU,3286LLU,1LLU),_1a9930e4c_Range16(3315LLU,3330LLU,15LLU),_1a9930e4c_Range16(3331LLU,3390LLU,59LLU),_1a9930e4c_Range16(3391LLU,3392LLU,1LLU),_1a9930e4c_Range16(3398LLU,3400LLU,1LLU),_1a9930e4c_Range16(3402LLU,3404LLU,1LLU),_1a9930e4c_Range16(3415LLU,3458LLU,43LLU),_1a9930e4c_Range16(3459LLU,3535LLU,76LLU),_1a9930e4c_Range16(3536LLU,3537LLU,1LLU),_1a9930e4c_Range16(3544LLU,3551LLU,1LLU),_1a9930e4c_Range16(3570LLU,3571LLU,1LLU),_1a9930e4c_Range16(3902LLU,3903LLU,1LLU),_1a9930e4c_Range16(3967LLU,4139LLU,172LLU),_1a9930e4c_Range16(4140LLU,4145LLU,5LLU),_1a9930e4c_Range16(4152LLU,4155LLU,3LLU),_1a9930e4c_Range16(4156LLU,4182LLU,26LLU),_1a9930e4c_Range16(4183LLU,4194LLU,11LLU),_1a9930e4c_Range16(4195LLU,4196LLU,1LLU),_1a9930e4c_Range16(4199LLU,4205LLU,1LLU),_1a9930e4c_Range16(4227LLU,4228LLU,1LLU),_1a9930e4c_Range16(4231LLU,4236LLU,1LLU),_1a9930e4c_Range16(4239LLU,4250LLU,11LLU),_1a9930e4c_Range16(4251LLU,4252LLU,1LLU),_1a9930e4c_Range16(5909LLU,5940LLU,31LLU),_1a9930e4c_Range16(6070LLU,6078LLU,8LLU),_1a9930e4c_Range16(6079LLU,6085LLU,1LLU),_1a9930e4c_Range16(6087LLU,6088LLU,1LLU),_1a9930e4c_Range16(6435LLU,6438LLU,1LLU),_1a9930e4c_Range16(6441LLU,6443LLU,1LLU),_1a9930e4c_Range16(6448LLU,6449LLU,1LLU),_1a9930e4c_Range16(6451LLU,6456LLU,1LLU),_1a9930e4c_Range16(6681LLU,6682LLU,1LLU),_1a9930e4c_Range16(6741LLU,6743LLU,2LLU),_1a9930e4c_Range16(6753LLU,6755LLU,2LLU),_1a9930e4c_Range16(6756LLU,6765LLU,9LLU),_1a9930e4c_Range16(6766LLU,6770LLU,1LLU),_1a9930e4c_Range16(6916LLU,6965LLU,49LLU),_1a9930e4c_Range16(6971LLU,6973LLU,2LLU),_1a9930e4c_Range16(6974LLU,6977LLU,1LLU),_1a9930e4c_Range16(6979LLU,6980LLU,1LLU),_1a9930e4c_Range16(7042LLU,7073LLU,31LLU),_1a9930e4c_Range16(7078LLU,7079LLU,1LLU),_1a9930e4c_Range16(7082LLU,7143LLU,61LLU),_1a9930e4c_Range16(7146LLU,7148LLU,1LLU),_1a9930e4c_Range16(7150LLU,7154LLU,4LLU),_1a9930e4c_Range16(7155LLU,7204LLU,49LLU),_1a9930e4c_Range16(7205LLU,7211LLU,1LLU),_1a9930e4c_Range16(7220LLU,7221LLU,1LLU),_1a9930e4c_Range16(7393LLU,7415LLU,22LLU),_1a9930e4c_Range16(12334LLU,12335LLU,1LLU),_1a9930e4c_Range16(43043LLU,43044LLU,1LLU),_1a9930e4c_Range16(43047LLU,43136LLU,89LLU),_1a9930e4c_Range16(43137LLU,43188LLU,51LLU),_1a9930e4c_Range16(43189LLU,43203LLU,1LLU),_1a9930e4c_Range16(43346LLU,43347LLU,1LLU),_1a9930e4c_Range16(43395LLU,43444LLU,49LLU),_1a9930e4c_Range16(43445LLU,43450LLU,5LLU),_1a9930e4c_Range16(43451LLU,43454LLU,3LLU),_1a9930e4c_Range16(43455LLU,43456LLU,1LLU),_1a9930e4c_Range16(43567LLU,43568LLU,1LLU),_1a9930e4c_Range16(43571LLU,43572LLU,1LLU),_1a9930e4c_Range16(43597LLU,43643LLU,46LLU),_1a9930e4c_Range16(43645LLU,43755LLU,110LLU),_1a9930e4c_Range16(43758LLU,43759LLU,1LLU),_1a9930e4c_Range16(43765LLU,44003LLU,238LLU),_1a9930e4c_Range16(44004LLU,44006LLU,2LLU),_1a9930e4c_Range16(44007LLU,44009LLU,2LLU),_1a9930e4c_Range16(44010LLU,44012LLU,2LLU)}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(69632LLU,69634LLU,2LLU),_1a9930e4c_Range32(69762LLU,69808LLU,46LLU),_1a9930e4c_Range32(69809LLU,69810LLU,1LLU),_1a9930e4c_Range32(69815LLU,69816LLU,1LLU),_1a9930e4c_Range32(69932LLU,69957LLU,25LLU),_1a9930e4c_Range32(69958LLU,70018LLU,60LLU),_1a9930e4c_Range32(70067LLU,70069LLU,1LLU),_1a9930e4c_Range32(70079LLU,70080LLU,1LLU),_1a9930e4c_Range32(70094LLU,70188LLU,94LLU),_1a9930e4c_Range32(70189LLU,70190LLU,1LLU),_1a9930e4c_Range32(70194LLU,70195LLU,1LLU),_1a9930e4c_Range32(70197LLU,70368LLU,171LLU),_1a9930e4c_Range32(70369LLU,70370LLU,1LLU),_1a9930e4c_Range32(70402LLU,70403LLU,1LLU),_1a9930e4c_Range32(70462LLU,70463LLU,1LLU),_1a9930e4c_Range32(70465LLU,70468LLU,1LLU),_1a9930e4c_Range32(70471LLU,70472LLU,1LLU),_1a9930e4c_Range32(70475LLU,70477LLU,1LLU),_1a9930e4c_Range32(70487LLU,70498LLU,11LLU),_1a9930e4c_Range32(70499LLU,70709LLU,210LLU),_1a9930e4c_Range32(70710LLU,70711LLU,1LLU),_1a9930e4c_Range32(70720LLU,70721LLU,1LLU),_1a9930e4c_Range32(70725LLU,70832LLU,107LLU),_1a9930e4c_Range32(70833LLU,70834LLU,1LLU),_1a9930e4c_Range32(70841LLU,70843LLU,2LLU),_1a9930e4c_Range32(70844LLU,70846LLU,1LLU),_1a9930e4c_Range32(70849LLU,71087LLU,238LLU),_1a9930e4c_Range32(71088LLU,71089LLU,1LLU),_1a9930e4c_Range32(71096LLU,71099LLU,1LLU),_1a9930e4c_Range32(71102LLU,71216LLU,114LLU),_1a9930e4c_Range32(71217LLU,71218LLU,1LLU),_1a9930e4c_Range32(71227LLU,71228LLU,1LLU),_1a9930e4c_Range32(71230LLU,71340LLU,110LLU),_1a9930e4c_Range32(71342LLU,71343LLU,1LLU),_1a9930e4c_Range32(71350LLU,71456LLU,106LLU),_1a9930e4c_Range32(71457LLU,71462LLU,5LLU),_1a9930e4c_Range32(71724LLU,71726LLU,1LLU),_1a9930e4c_Range32(71736LLU,71984LLU,248LLU),_1a9930e4c_Range32(71985LLU,71989LLU,1LLU),_1a9930e4c_Range32(71991LLU,71992LLU,1LLU),_1a9930e4c_Range32(71997LLU,72000LLU,3LLU),_1a9930e4c_Range32(72002LLU,72145LLU,143LLU),_1a9930e4c_Range32(72146LLU,72147LLU,1LLU),_1a9930e4c_Range32(72156LLU,72159LLU,1LLU),_1a9930e4c_Range32(72164LLU,72249LLU,85LLU),_1a9930e4c_Range32(72279LLU,72280LLU,1LLU),_1a9930e4c_Range32(72343LLU,72751LLU,408LLU),_1a9930e4c_Range32(72766LLU,72873LLU,107LLU),_1a9930e4c_Range32(72881LLU,72884LLU,3LLU),_1a9930e4c_Range32(73098LLU,73102LLU,1LLU),_1a9930e4c_Range32(73107LLU,73108LLU,1LLU),_1a9930e4c_Range32(73110LLU,73461LLU,351LLU),_1a9930e4c_Range32(73462LLU,73475LLU,13LLU),_1a9930e4c_Range32(73524LLU,73525LLU,1LLU),_1a9930e4c_Range32(73534LLU,73535LLU,1LLU),_1a9930e4c_Range32(73537LLU,94033LLU,20496LLU),_1a9930e4c_Range32(94034LLU,94087LLU,1LLU),_1a9930e4c_Range32(94192LLU,94193LLU,1LLU),_1a9930e4c_Range32(119141LLU,119142LLU,1LLU),_1a9930e4c_Range32(119149LLU,119154LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__ME = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(1160LLU,1161LLU,1LLU),_1a9930e4c_Range16(6846LLU,8413LLU,1567LLU),_1a9930e4c_Range16(8414LLU,8416LLU,1LLU),_1a9930e4c_Range16(8418LLU,8420LLU,1LLU),_1a9930e4c_Range16(42608LLU,42610LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__MN = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(768LLU,879LLU,1LLU),_1a9930e4c_Range16(1155LLU,1159LLU,1LLU),_1a9930e4c_Range16(1425LLU,1469LLU,1LLU),_1a9930e4c_Range16(1471LLU,1473LLU,2LLU),_1a9930e4c_Range16(1474LLU,1476LLU,2LLU),_1a9930e4c_Range16(1477LLU,1479LLU,2LLU),_1a9930e4c_Range16(1552LLU,1562LLU,1LLU),_1a9930e4c_Range16(1611LLU,1631LLU,1LLU),_1a9930e4c_Range16(1648LLU,1750LLU,102LLU),_1a9930e4c_Range16(1751LLU,1756LLU,1LLU),_1a9930e4c_Range16(1759LLU,1764LLU,1LLU),_1a9930e4c_Range16(1767LLU,1768LLU,1LLU),_1a9930e4c_Range16(1770LLU,1773LLU,1LLU),_1a9930e4c_Range16(1809LLU,1840LLU,31LLU),_1a9930e4c_Range16(1841LLU,1866LLU,1LLU),_1a9930e4c_Range16(1958LLU,1968LLU,1LLU),_1a9930e4c_Range16(2027LLU,2035LLU,1LLU),_1a9930e4c_Range16(2045LLU,2070LLU,25LLU),_1a9930e4c_Range16(2071LLU,2073LLU,1LLU),_1a9930e4c_Range16(2075LLU,2083LLU,1LLU),_1a9930e4c_Range16(2085LLU,2087LLU,1LLU),_1a9930e4c_Range16(2089LLU,2093LLU,1LLU),_1a9930e4c_Range16(2137LLU,2139LLU,1LLU),_1a9930e4c_Range16(2200LLU,2207LLU,1LLU),_1a9930e4c_Range16(2250LLU,2273LLU,1LLU),_1a9930e4c_Range16(2275LLU,2306LLU,1LLU),_1a9930e4c_Range16(2362LLU,2364LLU,2LLU),_1a9930e4c_Range16(2369LLU,2376LLU,1LLU),_1a9930e4c_Range16(2381LLU,2385LLU,4LLU),_1a9930e4c_Range16(2386LLU,2391LLU,1LLU),_1a9930e4c_Range16(2402LLU,2403LLU,1LLU),_1a9930e4c_Range16(2433LLU,2492LLU,59LLU),_1a9930e4c_Range16(2497LLU,2500LLU,1LLU),_1a9930e4c_Range16(2509LLU,2530LLU,21LLU),_1a9930e4c_Range16(2531LLU,2558LLU,27LLU),_1a9930e4c_Range16(2561LLU,2562LLU,1LLU),_1a9930e4c_Range16(2620LLU,2625LLU,5LLU),_1a9930e4c_Range16(2626LLU,2631LLU,5LLU),_1a9930e4c_Range16(2632LLU,2635LLU,3LLU),_1a9930e4c_Range16(2636LLU,2637LLU,1LLU),_1a9930e4c_Range16(2641LLU,2672LLU,31LLU),_1a9930e4c_Range16(2673LLU,2677LLU,4LLU),_1a9930e4c_Range16(2689LLU,2690LLU,1LLU),_1a9930e4c_Range16(2748LLU,2753LLU,5LLU),_1a9930e4c_Range16(2754LLU,2757LLU,1LLU),_1a9930e4c_Range16(2759LLU,2760LLU,1LLU),_1a9930e4c_Range16(2765LLU,2786LLU,21LLU),_1a9930e4c_Range16(2787LLU,2810LLU,23LLU),_1a9930e4c_Range16(2811LLU,2815LLU,1LLU),_1a9930e4c_Range16(2817LLU,2876LLU,59LLU),_1a9930e4c_Range16(2879LLU,2881LLU,2LLU),_1a9930e4c_Range16(2882LLU,2884LLU,1LLU),_1a9930e4c_Range16(2893LLU,2901LLU,8LLU),_1a9930e4c_Range16(2902LLU,2914LLU,12LLU),_1a9930e4c_Range16(2915LLU,2946LLU,31LLU),_1a9930e4c_Range16(3008LLU,3021LLU,13LLU),_1a9930e4c_Range16(3072LLU,3076LLU,4LLU),_1a9930e4c_Range16(3132LLU,3134LLU,2LLU),_1a9930e4c_Range16(3135LLU,3136LLU,1LLU),_1a9930e4c_Range16(3142LLU,3144LLU,1LLU),_1a9930e4c_Range16(3146LLU,3149LLU,1LLU),_1a9930e4c_Range16(3157LLU,3158LLU,1LLU),_1a9930e4c_Range16(3170LLU,3171LLU,1LLU),_1a9930e4c_Range16(3201LLU,3260LLU,59LLU),_1a9930e4c_Range16(3263LLU,3270LLU,7LLU),_1a9930e4c_Range16(3276LLU,3277LLU,1LLU),_1a9930e4c_Range16(3298LLU,3299LLU,1LLU),_1a9930e4c_Range16(3328LLU,3329LLU,1LLU),_1a9930e4c_Range16(3387LLU,3388LLU,1LLU),_1a9930e4c_Range16(3393LLU,3396LLU,1LLU),_1a9930e4c_Range16(3405LLU,3426LLU,21LLU),_1a9930e4c_Range16(3427LLU,3457LLU,30LLU),_1a9930e4c_Range16(3530LLU,3538LLU,8LLU),_1a9930e4c_Range16(3539LLU,3540LLU,1LLU),_1a9930e4c_Range16(3542LLU,3633LLU,91LLU),_1a9930e4c_Range16(3636LLU,3642LLU,1LLU),_1a9930e4c_Range16(3655LLU,3662LLU,1LLU),_1a9930e4c_Range16(3761LLU,3764LLU,3LLU),_1a9930e4c_Range16(3765LLU,3772LLU,1LLU),_1a9930e4c_Range16(3784LLU,3790LLU,1LLU),_1a9930e4c_Range16(3864LLU,3865LLU,1LLU),_1a9930e4c_Range16(3893LLU,3897LLU,2LLU),_1a9930e4c_Range16(3953LLU,3966LLU,1LLU),_1a9930e4c_Range16(3968LLU,3972LLU,1LLU),_1a9930e4c_Range16(3974LLU,3975LLU,1LLU),_1a9930e4c_Range16(3981LLU,3991LLU,1LLU),_1a9930e4c_Range16(3993LLU,4028LLU,1LLU),_1a9930e4c_Range16(4038LLU,4141LLU,103LLU),_1a9930e4c_Range16(4142LLU,4144LLU,1LLU),_1a9930e4c_Range16(4146LLU,4151LLU,1LLU),_1a9930e4c_Range16(4153LLU,4154LLU,1LLU),_1a9930e4c_Range16(4157LLU,4158LLU,1LLU),_1a9930e4c_Range16(4184LLU,4185LLU,1LLU),_1a9930e4c_Range16(4190LLU,4192LLU,1LLU),_1a9930e4c_Range16(4209LLU,4212LLU,1LLU),_1a9930e4c_Range16(4226LLU,4229LLU,3LLU),_1a9930e4c_Range16(4230LLU,4237LLU,7LLU),_1a9930e4c_Range16(4253LLU,4957LLU,704LLU),_1a9930e4c_Range16(4958LLU,4959LLU,1LLU),_1a9930e4c_Range16(5906LLU,5908LLU,1LLU),_1a9930e4c_Range16(5938LLU,5939LLU,1LLU),_1a9930e4c_Range16(5970LLU,5971LLU,1LLU),_1a9930e4c_Range16(6002LLU,6003LLU,1LLU),_1a9930e4c_Range16(6068LLU,6069LLU,1LLU),_1a9930e4c_Range16(6071LLU,6077LLU,1LLU),_1a9930e4c_Range16(6086LLU,6089LLU,3LLU),_1a9930e4c_Range16(6090LLU,6099LLU,1LLU),_1a9930e4c_Range16(6109LLU,6155LLU,46LLU),_1a9930e4c_Range16(6156LLU,6157LLU,1LLU),_1a9930e4c_Range16(6159LLU,6277LLU,118LLU),_1a9930e4c_Range16(6278LLU,6313LLU,35LLU),_1a9930e4c_Range16(6432LLU,6434LLU,1LLU),_1a9930e4c_Range16(6439LLU,6440LLU,1LLU),_1a9930e4c_Range16(6450LLU,6457LLU,7LLU),_1a9930e4c_Range16(6458LLU,6459LLU,1LLU),_1a9930e4c_Range16(6679LLU,6680LLU,1LLU),_1a9930e4c_Range16(6683LLU,6742LLU,59LLU),_1a9930e4c_Range16(6744LLU,6750LLU,1LLU),_1a9930e4c_Range16(6752LLU,6754LLU,2LLU),_1a9930e4c_Range16(6757LLU,6764LLU,1LLU),_1a9930e4c_Range16(6771LLU,6780LLU,1LLU),_1a9930e4c_Range16(6783LLU,6832LLU,49LLU),_1a9930e4c_Range16(6833LLU,6845LLU,1LLU),_1a9930e4c_Range16(6847LLU,6862LLU,1LLU),_1a9930e4c_Range16(6912LLU,6915LLU,1LLU),_1a9930e4c_Range16(6964LLU,6966LLU,2LLU),_1a9930e4c_Range16(6967LLU,6970LLU,1LLU),_1a9930e4c_Range16(6972LLU,6978LLU,6LLU),_1a9930e4c_Range16(7019LLU,7027LLU,1LLU),_1a9930e4c_Range16(7040LLU,7041LLU,1LLU),_1a9930e4c_Range16(7074LLU,7077LLU,1LLU),_1a9930e4c_Range16(7080LLU,7081LLU,1LLU),_1a9930e4c_Range16(7083LLU,7085LLU,1LLU),_1a9930e4c_Range16(7142LLU,7144LLU,2LLU),_1a9930e4c_Range16(7145LLU,7149LLU,4LLU),_1a9930e4c_Range16(7151LLU,7153LLU,1LLU),_1a9930e4c_Range16(7212LLU,7219LLU,1LLU),_1a9930e4c_Range16(7222LLU,7223LLU,1LLU),_1a9930e4c_Range16(7376LLU,7378LLU,1LLU),_1a9930e4c_Range16(7380LLU,7392LLU,1LLU),_1a9930e4c_Range16(7394LLU,7400LLU,1LLU),_1a9930e4c_Range16(7405LLU,7412LLU,7LLU),_1a9930e4c_Range16(7416LLU,7417LLU,1LLU),_1a9930e4c_Range16(7616LLU,7679LLU,1LLU),_1a9930e4c_Range16(8400LLU,8412LLU,1LLU),_1a9930e4c_Range16(8417LLU,8421LLU,4LLU),_1a9930e4c_Range16(8422LLU,8432LLU,1LLU),_1a9930e4c_Range16(11503LLU,11505LLU,1LLU),_1a9930e4c_Range16(11647LLU,11744LLU,97LLU),_1a9930e4c_Range16(11745LLU,11775LLU,1LLU),_1a9930e4c_Range16(12330LLU,12333LLU,1LLU),_1a9930e4c_Range16(12441LLU,12442LLU,1LLU),_1a9930e4c_Range16(42607LLU,42612LLU,5LLU),_1a9930e4c_Range16(42613LLU,42621LLU,1LLU),_1a9930e4c_Range16(42654LLU,42655LLU,1LLU),_1a9930e4c_Range16(42736LLU,42737LLU,1LLU),_1a9930e4c_Range16(43010LLU,43014LLU,4LLU),_1a9930e4c_Range16(43019LLU,43045LLU,26LLU),_1a9930e4c_Range16(43046LLU,43052LLU,6LLU),_1a9930e4c_Range16(43204LLU,43205LLU,1LLU),_1a9930e4c_Range16(43232LLU,43249LLU,1LLU),_1a9930e4c_Range16(43263LLU,43302LLU,39LLU),_1a9930e4c_Range16(43303LLU,43309LLU,1LLU),_1a9930e4c_Range16(43335LLU,43345LLU,1LLU),_1a9930e4c_Range16(43392LLU,43394LLU,1LLU),_1a9930e4c_Range16(43443LLU,43446LLU,3LLU),_1a9930e4c_Range16(43447LLU,43449LLU,1LLU),_1a9930e4c_Range16(43452LLU,43453LLU,1LLU),_1a9930e4c_Range16(43493LLU,43561LLU,68LLU),_1a9930e4c_Range16(43562LLU,43566LLU,1LLU),_1a9930e4c_Range16(43569LLU,43570LLU,1LLU),_1a9930e4c_Range16(43573LLU,43574LLU,1LLU),_1a9930e4c_Range16(43587LLU,43596LLU,9LLU),_1a9930e4c_Range16(43644LLU,43696LLU,52LLU),_1a9930e4c_Range16(43698LLU,43700LLU,1LLU),_1a9930e4c_Range16(43703LLU,43704LLU,1LLU),_1a9930e4c_Range16(43710LLU,43711LLU,1LLU),_1a9930e4c_Range16(43713LLU,43756LLU,43LLU),_1a9930e4c_Range16(43757LLU,43766LLU,9LLU),_1a9930e4c_Range16(44005LLU,44008LLU,3LLU),_1a9930e4c_Range16(44013LLU,64286LLU,20273LLU),_1a9930e4c_Range16(65024LLU,65039LLU,1LLU),_1a9930e4c_Range16(65056LLU,65071LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(66045LLU,66272LLU,227LLU),_1a9930e4c_Range32(66422LLU,66426LLU,1LLU),_1a9930e4c_Range32(68097LLU,68099LLU,1LLU),_1a9930e4c_Range32(68101LLU,68102LLU,1LLU),_1a9930e4c_Range32(68108LLU,68111LLU,1LLU),_1a9930e4c_Range32(68152LLU,68154LLU,1LLU),_1a9930e4c_Range32(68159LLU,68325LLU,166LLU),_1a9930e4c_Range32(68326LLU,68900LLU,574LLU),_1a9930e4c_Range32(68901LLU,68903LLU,1LLU),_1a9930e4c_Range32(69291LLU,69292LLU,1LLU),_1a9930e4c_Range32(69373LLU,69375LLU,1LLU),_1a9930e4c_Range32(69446LLU,69456LLU,1LLU),_1a9930e4c_Range32(69506LLU,69509LLU,1LLU),_1a9930e4c_Range32(69633LLU,69688LLU,55LLU),_1a9930e4c_Range32(69689LLU,69702LLU,1LLU),_1a9930e4c_Range32(69744LLU,69747LLU,3LLU),_1a9930e4c_Range32(69748LLU,69759LLU,11LLU),_1a9930e4c_Range32(69760LLU,69761LLU,1LLU),_1a9930e4c_Range32(69811LLU,69814LLU,1LLU),_1a9930e4c_Range32(69817LLU,69818LLU,1LLU),_1a9930e4c_Range32(69826LLU,69888LLU,62LLU),_1a9930e4c_Range32(69889LLU,69890LLU,1LLU),_1a9930e4c_Range32(69927LLU,69931LLU,1LLU),_1a9930e4c_Range32(69933LLU,69940LLU,1LLU),_1a9930e4c_Range32(70003LLU,70016LLU,13LLU),_1a9930e4c_Range32(70017LLU,70070LLU,53LLU),_1a9930e4c_Range32(70071LLU,70078LLU,1LLU),_1a9930e4c_Range32(70089LLU,70092LLU,1LLU),_1a9930e4c_Range32(70095LLU,70191LLU,96LLU),_1a9930e4c_Range32(70192LLU,70193LLU,1LLU),_1a9930e4c_Range32(70196LLU,70198LLU,2LLU),_1a9930e4c_Range32(70199LLU,70206LLU,7LLU),_1a9930e4c_Range32(70209LLU,70367LLU,158LLU),_1a9930e4c_Range32(70371LLU,70378LLU,1LLU),_1a9930e4c_Range32(70400LLU,70401LLU,1LLU),_1a9930e4c_Range32(70459LLU,70460LLU,1LLU),_1a9930e4c_Range32(70464LLU,70502LLU,38LLU),_1a9930e4c_Range32(70503LLU,70508LLU,1LLU),_1a9930e4c_Range32(70512LLU,70516LLU,1LLU),_1a9930e4c_Range32(70712LLU,70719LLU,1LLU),_1a9930e4c_Range32(70722LLU,70724LLU,1LLU),_1a9930e4c_Range32(70726LLU,70750LLU,24LLU),_1a9930e4c_Range32(70835LLU,70840LLU,1LLU),_1a9930e4c_Range32(70842LLU,70847LLU,5LLU),_1a9930e4c_Range32(70848LLU,70850LLU,2LLU),_1a9930e4c_Range32(70851LLU,71090LLU,239LLU),_1a9930e4c_Range32(71091LLU,71093LLU,1LLU),_1a9930e4c_Range32(71100LLU,71101LLU,1LLU),_1a9930e4c_Range32(71103LLU,71104LLU,1LLU),_1a9930e4c_Range32(71132LLU,71133LLU,1LLU),_1a9930e4c_Range32(71219LLU,71226LLU,1LLU),_1a9930e4c_Range32(71229LLU,71231LLU,2LLU),_1a9930e4c_Range32(71232LLU,71339LLU,107LLU),_1a9930e4c_Range32(71341LLU,71344LLU,3LLU),_1a9930e4c_Range32(71345LLU,71349LLU,1LLU),_1a9930e4c_Range32(71351LLU,71453LLU,102LLU),_1a9930e4c_Range32(71454LLU,71455LLU,1LLU),_1a9930e4c_Range32(71458LLU,71461LLU,1LLU),_1a9930e4c_Range32(71463LLU,71467LLU,1LLU),_1a9930e4c_Range32(71727LLU,71735LLU,1LLU),_1a9930e4c_Range32(71737LLU,71738LLU,1LLU),_1a9930e4c_Range32(71995LLU,71996LLU,1LLU),_1a9930e4c_Range32(71998LLU,72003LLU,5LLU),_1a9930e4c_Range32(72148LLU,72151LLU,1LLU),_1a9930e4c_Range32(72154LLU,72155LLU,1LLU),_1a9930e4c_Range32(72160LLU,72193LLU,33LLU),_1a9930e4c_Range32(72194LLU,72202LLU,1LLU),_1a9930e4c_Range32(72243LLU,72248LLU,1LLU),_1a9930e4c_Range32(72251LLU,72254LLU,1LLU),_1a9930e4c_Range32(72263LLU,72273LLU,10LLU),_1a9930e4c_Range32(72274LLU,72278LLU,1LLU),_1a9930e4c_Range32(72281LLU,72283LLU,1LLU),_1a9930e4c_Range32(72330LLU,72342LLU,1LLU),_1a9930e4c_Range32(72344LLU,72345LLU,1LLU),_1a9930e4c_Range32(72752LLU,72758LLU,1LLU),_1a9930e4c_Range32(72760LLU,72765LLU,1LLU),_1a9930e4c_Range32(72767LLU,72850LLU,83LLU),_1a9930e4c_Range32(72851LLU,72871LLU,1LLU),_1a9930e4c_Range32(72874LLU,72880LLU,1LLU),_1a9930e4c_Range32(72882LLU,72883LLU,1LLU),_1a9930e4c_Range32(72885LLU,72886LLU,1LLU),_1a9930e4c_Range32(73009LLU,73014LLU,1LLU),_1a9930e4c_Range32(73018LLU,73020LLU,2LLU),_1a9930e4c_Range32(73021LLU,73023LLU,2LLU),_1a9930e4c_Range32(73024LLU,73029LLU,1LLU),_1a9930e4c_Range32(73031LLU,73104LLU,73LLU),_1a9930e4c_Range32(73105LLU,73109LLU,4LLU),_1a9930e4c_Range32(73111LLU,73459LLU,348LLU),_1a9930e4c_Range32(73460LLU,73472LLU,12LLU),_1a9930e4c_Range32(73473LLU,73526LLU,53LLU),_1a9930e4c_Range32(73527LLU,73530LLU,1LLU),_1a9930e4c_Range32(73536LLU,73538LLU,2LLU),_1a9930e4c_Range32(78912LLU,78919LLU,7LLU),_1a9930e4c_Range32(78920LLU,78933LLU,1LLU),_1a9930e4c_Range32(92912LLU,92916LLU,1LLU),_1a9930e4c_Range32(92976LLU,92982LLU,1LLU),_1a9930e4c_Range32(94031LLU,94095LLU,64LLU),_1a9930e4c_Range32(94096LLU,94098LLU,1LLU),_1a9930e4c_Range32(94180LLU,113821LLU,19641LLU),_1a9930e4c_Range32(113822LLU,118528LLU,4706LLU),_1a9930e4c_Range32(118529LLU,118573LLU,1LLU),_1a9930e4c_Range32(118576LLU,118598LLU,1LLU),_1a9930e4c_Range32(119143LLU,119145LLU,1LLU),_1a9930e4c_Range32(119163LLU,119170LLU,1LLU),_1a9930e4c_Range32(119173LLU,119179LLU,1LLU),_1a9930e4c_Range32(119210LLU,119213LLU,1LLU),_1a9930e4c_Range32(119362LLU,119364LLU,1LLU),_1a9930e4c_Range32(121344LLU,121398LLU,1LLU),_1a9930e4c_Range32(121403LLU,121452LLU,1LLU),_1a9930e4c_Range32(121461LLU,121476LLU,15LLU),_1a9930e4c_Range32(121499LLU,121503LLU,1LLU),_1a9930e4c_Range32(121505LLU,121519LLU,1LLU),_1a9930e4c_Range32(122880LLU,122886LLU,1LLU),_1a9930e4c_Range32(122888LLU,122904LLU,1LLU),_1a9930e4c_Range32(122907LLU,122913LLU,1LLU),_1a9930e4c_Range32(122915LLU,122916LLU,1LLU),_1a9930e4c_Range32(122918LLU,122922LLU,1LLU),_1a9930e4c_Range32(123023LLU,123184LLU,161LLU),_1a9930e4c_Range32(123185LLU,123190LLU,1LLU),_1a9930e4c_Range32(123566LLU,123628LLU,62LLU),_1a9930e4c_Range32(123629LLU,123631LLU,1LLU),_1a9930e4c_Range32(124140LLU,124143LLU,1LLU),_1a9930e4c_Range32(125136LLU,125142LLU,1LLU),_1a9930e4c_Range32(125252LLU,125258LLU,1LLU),_1a9930e4c_Range32(917760LLU,917999LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__N = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(48LLU,57LLU,1LLU),_1a9930e4c_Range16(178LLU,179LLU,1LLU),_1a9930e4c_Range16(185LLU,188LLU,3LLU),_1a9930e4c_Range16(189LLU,190LLU,1LLU),_1a9930e4c_Range16(1632LLU,1641LLU,1LLU),_1a9930e4c_Range16(1776LLU,1785LLU,1LLU),_1a9930e4c_Range16(1984LLU,1993LLU,1LLU),_1a9930e4c_Range16(2406LLU,2415LLU,1LLU),_1a9930e4c_Range16(2534LLU,2543LLU,1LLU),_1a9930e4c_Range16(2548LLU,2553LLU,1LLU),_1a9930e4c_Range16(2662LLU,2671LLU,1LLU),_1a9930e4c_Range16(2790LLU,2799LLU,1LLU),_1a9930e4c_Range16(2918LLU,2927LLU,1LLU),_1a9930e4c_Range16(2930LLU,2935LLU,1LLU),_1a9930e4c_Range16(3046LLU,3058LLU,1LLU),_1a9930e4c_Range16(3174LLU,3183LLU,1LLU),_1a9930e4c_Range16(3192LLU,3198LLU,1LLU),_1a9930e4c_Range16(3302LLU,3311LLU,1LLU),_1a9930e4c_Range16(3416LLU,3422LLU,1LLU),_1a9930e4c_Range16(3430LLU,3448LLU,1LLU),_1a9930e4c_Range16(3558LLU,3567LLU,1LLU),_1a9930e4c_Range16(3664LLU,3673LLU,1LLU),_1a9930e4c_Range16(3792LLU,3801LLU,1LLU),_1a9930e4c_Range16(3872LLU,3891LLU,1LLU),_1a9930e4c_Range16(4160LLU,4169LLU,1LLU),_1a9930e4c_Range16(4240LLU,4249LLU,1LLU),_1a9930e4c_Range16(4969LLU,4988LLU,1LLU),_1a9930e4c_Range16(5870LLU,5872LLU,1LLU),_1a9930e4c_Range16(6112LLU,6121LLU,1LLU),_1a9930e4c_Range16(6128LLU,6137LLU,1LLU),_1a9930e4c_Range16(6160LLU,6169LLU,1LLU),_1a9930e4c_Range16(6470LLU,6479LLU,1LLU),_1a9930e4c_Range16(6608LLU,6618LLU,1LLU),_1a9930e4c_Range16(6784LLU,6793LLU,1LLU),_1a9930e4c_Range16(6800LLU,6809LLU,1LLU),_1a9930e4c_Range16(6992LLU,7001LLU,1LLU),_1a9930e4c_Range16(7088LLU,7097LLU,1LLU),_1a9930e4c_Range16(7232LLU,7241LLU,1LLU),_1a9930e4c_Range16(7248LLU,7257LLU,1LLU),_1a9930e4c_Range16(8304LLU,8308LLU,4LLU),_1a9930e4c_Range16(8309LLU,8313LLU,1LLU),_1a9930e4c_Range16(8320LLU,8329LLU,1LLU),_1a9930e4c_Range16(8528LLU,8578LLU,1LLU),_1a9930e4c_Range16(8581LLU,8585LLU,1LLU),_1a9930e4c_Range16(9312LLU,9371LLU,1LLU),_1a9930e4c_Range16(9450LLU,9471LLU,1LLU),_1a9930e4c_Range16(10102LLU,10131LLU,1LLU),_1a9930e4c_Range16(11517LLU,12295LLU,778LLU),_1a9930e4c_Range16(12321LLU,12329LLU,1LLU),_1a9930e4c_Range16(12344LLU,12346LLU,1LLU),_1a9930e4c_Range16(12690LLU,12693LLU,1LLU),_1a9930e4c_Range16(12832LLU,12841LLU,1LLU),_1a9930e4c_Range16(12872LLU,12879LLU,1LLU),_1a9930e4c_Range16(12881LLU,12895LLU,1LLU),_1a9930e4c_Range16(12928LLU,12937LLU,1LLU),_1a9930e4c_Range16(12977LLU,12991LLU,1LLU),_1a9930e4c_Range16(42528LLU,42537LLU,1LLU),_1a9930e4c_Range16(42726LLU,42735LLU,1LLU),_1a9930e4c_Range16(43056LLU,43061LLU,1LLU),_1a9930e4c_Range16(43216LLU,43225LLU,1LLU),_1a9930e4c_Range16(43264LLU,43273LLU,1LLU),_1a9930e4c_Range16(43472LLU,43481LLU,1LLU),_1a9930e4c_Range16(43504LLU,43513LLU,1LLU),_1a9930e4c_Range16(43600LLU,43609LLU,1LLU),_1a9930e4c_Range16(44016LLU,44025LLU,1LLU),_1a9930e4c_Range16(65296LLU,65305LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(65799LLU,65843LLU,1LLU),_1a9930e4c_Range32(65856LLU,65912LLU,1LLU),_1a9930e4c_Range32(65930LLU,65931LLU,1LLU),_1a9930e4c_Range32(66273LLU,66299LLU,1LLU),_1a9930e4c_Range32(66336LLU,66339LLU,1LLU),_1a9930e4c_Range32(66369LLU,66378LLU,9LLU),_1a9930e4c_Range32(66513LLU,66517LLU,1LLU),_1a9930e4c_Range32(66720LLU,66729LLU,1LLU),_1a9930e4c_Range32(67672LLU,67679LLU,1LLU),_1a9930e4c_Range32(67705LLU,67711LLU,1LLU),_1a9930e4c_Range32(67751LLU,67759LLU,1LLU),_1a9930e4c_Range32(67835LLU,67839LLU,1LLU),_1a9930e4c_Range32(67862LLU,67867LLU,1LLU),_1a9930e4c_Range32(68028LLU,68029LLU,1LLU),_1a9930e4c_Range32(68032LLU,68047LLU,1LLU),_1a9930e4c_Range32(68050LLU,68095LLU,1LLU),_1a9930e4c_Range32(68160LLU,68168LLU,1LLU),_1a9930e4c_Range32(68221LLU,68222LLU,1LLU),_1a9930e4c_Range32(68253LLU,68255LLU,1LLU),_1a9930e4c_Range32(68331LLU,68335LLU,1LLU),_1a9930e4c_Range32(68440LLU,68447LLU,1LLU),_1a9930e4c_Range32(68472LLU,68479LLU,1LLU),_1a9930e4c_Range32(68521LLU,68527LLU,1LLU),_1a9930e4c_Range32(68858LLU,68863LLU,1LLU),_1a9930e4c_Range32(68912LLU,68921LLU,1LLU),_1a9930e4c_Range32(69216LLU,69246LLU,1LLU),_1a9930e4c_Range32(69405LLU,69414LLU,1LLU),_1a9930e4c_Range32(69457LLU,69460LLU,1LLU),_1a9930e4c_Range32(69573LLU,69579LLU,1LLU),_1a9930e4c_Range32(69714LLU,69743LLU,1LLU),_1a9930e4c_Range32(69872LLU,69881LLU,1LLU),_1a9930e4c_Range32(69942LLU,69951LLU,1LLU),_1a9930e4c_Range32(70096LLU,70105LLU,1LLU),_1a9930e4c_Range32(70113LLU,70132LLU,1LLU),_1a9930e4c_Range32(70384LLU,70393LLU,1LLU),_1a9930e4c_Range32(70736LLU,70745LLU,1LLU),_1a9930e4c_Range32(70864LLU,70873LLU,1LLU),_1a9930e4c_Range32(71248LLU,71257LLU,1LLU),_1a9930e4c_Range32(71360LLU,71369LLU,1LLU),_1a9930e4c_Range32(71472LLU,71483LLU,1LLU),_1a9930e4c_Range32(71904LLU,71922LLU,1LLU),_1a9930e4c_Range32(72016LLU,72025LLU,1LLU),_1a9930e4c_Range32(72784LLU,72812LLU,1LLU),_1a9930e4c_Range32(73040LLU,73049LLU,1LLU),_1a9930e4c_Range32(73120LLU,73129LLU,1LLU),_1a9930e4c_Range32(73552LLU,73561LLU,1LLU),_1a9930e4c_Range32(73664LLU,73684LLU,1LLU),_1a9930e4c_Range32(74752LLU,74862LLU,1LLU),_1a9930e4c_Range32(92768LLU,92777LLU,1LLU),_1a9930e4c_Range32(92864LLU,92873LLU,1LLU),_1a9930e4c_Range32(93008LLU,93017LLU,1LLU),_1a9930e4c_Range32(93019LLU,93025LLU,1LLU),_1a9930e4c_Range32(93824LLU,93846LLU,1LLU),_1a9930e4c_Range32(119488LLU,119507LLU,1LLU),_1a9930e4c_Range32(119520LLU,119539LLU,1LLU),_1a9930e4c_Range32(119648LLU,119672LLU,1LLU),_1a9930e4c_Range32(120782LLU,120831LLU,1LLU),_1a9930e4c_Range32(123200LLU,123209LLU,1LLU),_1a9930e4c_Range32(123632LLU,123641LLU,1LLU),_1a9930e4c_Range32(124144LLU,124153LLU,1LLU),_1a9930e4c_Range32(125127LLU,125135LLU,1LLU),_1a9930e4c_Range32(125264LLU,125273LLU,1LLU),_1a9930e4c_Range32(126065LLU,126123LLU,1LLU),_1a9930e4c_Range32(126125LLU,126127LLU,1LLU),_1a9930e4c_Range32(126129LLU,126132LLU,1LLU),_1a9930e4c_Range32(126209LLU,126253LLU,1LLU),_1a9930e4c_Range32(126255LLU,126269LLU,1LLU),_1a9930e4c_Range32(127232LLU,127244LLU,1LLU),_1a9930e4c_Range32(130032LLU,130041LLU,1LLU)}),4LL));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__ND = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(48LLU,57LLU,1LLU),_1a9930e4c_Range16(1632LLU,1641LLU,1LLU),_1a9930e4c_Range16(1776LLU,1785LLU,1LLU),_1a9930e4c_Range16(1984LLU,1993LLU,1LLU),_1a9930e4c_Range16(2406LLU,2415LLU,1LLU),_1a9930e4c_Range16(2534LLU,2543LLU,1LLU),_1a9930e4c_Range16(2662LLU,2671LLU,1LLU),_1a9930e4c_Range16(2790LLU,2799LLU,1LLU),_1a9930e4c_Range16(2918LLU,2927LLU,1LLU),_1a9930e4c_Range16(3046LLU,3055LLU,1LLU),_1a9930e4c_Range16(3174LLU,3183LLU,1LLU),_1a9930e4c_Range16(3302LLU,3311LLU,1LLU),_1a9930e4c_Range16(3430LLU,3439LLU,1LLU),_1a9930e4c_Range16(3558LLU,3567LLU,1LLU),_1a9930e4c_Range16(3664LLU,3673LLU,1LLU),_1a9930e4c_Range16(3792LLU,3801LLU,1LLU),_1a9930e4c_Range16(3872LLU,3881LLU,1LLU),_1a9930e4c_Range16(4160LLU,4169LLU,1LLU),_1a9930e4c_Range16(4240LLU,4249LLU,1LLU),_1a9930e4c_Range16(6112LLU,6121LLU,1LLU),_1a9930e4c_Range16(6160LLU,6169LLU,1LLU),_1a9930e4c_Range16(6470LLU,6479LLU,1LLU),_1a9930e4c_Range16(6608LLU,6617LLU,1LLU),_1a9930e4c_Range16(6784LLU,6793LLU,1LLU),_1a9930e4c_Range16(6800LLU,6809LLU,1LLU),_1a9930e4c_Range16(6992LLU,7001LLU,1LLU),_1a9930e4c_Range16(7088LLU,7097LLU,1LLU),_1a9930e4c_Range16(7232LLU,7241LLU,1LLU),_1a9930e4c_Range16(7248LLU,7257LLU,1LLU),_1a9930e4c_Range16(42528LLU,42537LLU,1LLU),_1a9930e4c_Range16(43216LLU,43225LLU,1LLU),_1a9930e4c_Range16(43264LLU,43273LLU,1LLU),_1a9930e4c_Range16(43472LLU,43481LLU,1LLU),_1a9930e4c_Range16(43504LLU,43513LLU,1LLU),_1a9930e4c_Range16(43600LLU,43609LLU,1LLU),_1a9930e4c_Range16(44016LLU,44025LLU,1LLU),_1a9930e4c_Range16(65296LLU,65305LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(66720LLU,66729LLU,1LLU),_1a9930e4c_Range32(68912LLU,68921LLU,1LLU),_1a9930e4c_Range32(69734LLU,69743LLU,1LLU),_1a9930e4c_Range32(69872LLU,69881LLU,1LLU),_1a9930e4c_Range32(69942LLU,69951LLU,1LLU),_1a9930e4c_Range32(70096LLU,70105LLU,1LLU),_1a9930e4c_Range32(70384LLU,70393LLU,1LLU),_1a9930e4c_Range32(70736LLU,70745LLU,1LLU),_1a9930e4c_Range32(70864LLU,70873LLU,1LLU),_1a9930e4c_Range32(71248LLU,71257LLU,1LLU),_1a9930e4c_Range32(71360LLU,71369LLU,1LLU),_1a9930e4c_Range32(71472LLU,71481LLU,1LLU),_1a9930e4c_Range32(71904LLU,71913LLU,1LLU),_1a9930e4c_Range32(72016LLU,72025LLU,1LLU),_1a9930e4c_Range32(72784LLU,72793LLU,1LLU),_1a9930e4c_Range32(73040LLU,73049LLU,1LLU),_1a9930e4c_Range32(73120LLU,73129LLU,1LLU),_1a9930e4c_Range32(73552LLU,73561LLU,1LLU),_1a9930e4c_Range32(92768LLU,92777LLU,1LLU),_1a9930e4c_Range32(92864LLU,92873LLU,1LLU),_1a9930e4c_Range32(93008LLU,93017LLU,1LLU),_1a9930e4c_Range32(120782LLU,120831LLU,1LLU),_1a9930e4c_Range32(123200LLU,123209LLU,1LLU),_1a9930e4c_Range32(123632LLU,123641LLU,1LLU),_1a9930e4c_Range32(124144LLU,124153LLU,1LLU),_1a9930e4c_Range32(125264LLU,125273LLU,1LLU),_1a9930e4c_Range32(130032LLU,130041LLU,1LLU)}),1LL));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__NL = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(5870LLU,5872LLU,1LLU),_1a9930e4c_Range16(8544LLU,8578LLU,1LLU),_1a9930e4c_Range16(8581LLU,8584LLU,1LLU),_1a9930e4c_Range16(12295LLU,12321LLU,26LLU),_1a9930e4c_Range16(12322LLU,12329LLU,1LLU),_1a9930e4c_Range16(12344LLU,12346LLU,1LLU),_1a9930e4c_Range16(42726LLU,42735LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(65856LLU,65908LLU,1LLU),_1a9930e4c_Range32(66369LLU,66378LLU,9LLU),_1a9930e4c_Range32(66513LLU,66517LLU,1LLU),_1a9930e4c_Range32(74752LLU,74862LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__NO = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(178LLU,179LLU,1LLU),_1a9930e4c_Range16(185LLU,188LLU,3LLU),_1a9930e4c_Range16(189LLU,190LLU,1LLU),_1a9930e4c_Range16(2548LLU,2553LLU,1LLU),_1a9930e4c_Range16(2930LLU,2935LLU,1LLU),_1a9930e4c_Range16(3056LLU,3058LLU,1LLU),_1a9930e4c_Range16(3192LLU,3198LLU,1LLU),_1a9930e4c_Range16(3416LLU,3422LLU,1LLU),_1a9930e4c_Range16(3440LLU,3448LLU,1LLU),_1a9930e4c_Range16(3882LLU,3891LLU,1LLU),_1a9930e4c_Range16(4969LLU,4988LLU,1LLU),_1a9930e4c_Range16(6128LLU,6137LLU,1LLU),_1a9930e4c_Range16(6618LLU,8304LLU,1686LLU),_1a9930e4c_Range16(8308LLU,8313LLU,1LLU),_1a9930e4c_Range16(8320LLU,8329LLU,1LLU),_1a9930e4c_Range16(8528LLU,8543LLU,1LLU),_1a9930e4c_Range16(8585LLU,9312LLU,727LLU),_1a9930e4c_Range16(9313LLU,9371LLU,1LLU),_1a9930e4c_Range16(9450LLU,9471LLU,1LLU),_1a9930e4c_Range16(10102LLU,10131LLU,1LLU),_1a9930e4c_Range16(11517LLU,12690LLU,1173LLU),_1a9930e4c_Range16(12691LLU,12693LLU,1LLU),_1a9930e4c_Range16(12832LLU,12841LLU,1LLU),_1a9930e4c_Range16(12872LLU,12879LLU,1LLU),_1a9930e4c_Range16(12881LLU,12895LLU,1LLU),_1a9930e4c_Range16(12928LLU,12937LLU,1LLU),_1a9930e4c_Range16(12977LLU,12991LLU,1LLU),_1a9930e4c_Range16(43056LLU,43061LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(65799LLU,65843LLU,1LLU),_1a9930e4c_Range32(65909LLU,65912LLU,1LLU),_1a9930e4c_Range32(65930LLU,65931LLU,1LLU),_1a9930e4c_Range32(66273LLU,66299LLU,1LLU),_1a9930e4c_Range32(66336LLU,66339LLU,1LLU),_1a9930e4c_Range32(67672LLU,67679LLU,1LLU),_1a9930e4c_Range32(67705LLU,67711LLU,1LLU),_1a9930e4c_Range32(67751LLU,67759LLU,1LLU),_1a9930e4c_Range32(67835LLU,67839LLU,1LLU),_1a9930e4c_Range32(67862LLU,67867LLU,1LLU),_1a9930e4c_Range32(68028LLU,68029LLU,1LLU),_1a9930e4c_Range32(68032LLU,68047LLU,1LLU),_1a9930e4c_Range32(68050LLU,68095LLU,1LLU),_1a9930e4c_Range32(68160LLU,68168LLU,1LLU),_1a9930e4c_Range32(68221LLU,68222LLU,1LLU),_1a9930e4c_Range32(68253LLU,68255LLU,1LLU),_1a9930e4c_Range32(68331LLU,68335LLU,1LLU),_1a9930e4c_Range32(68440LLU,68447LLU,1LLU),_1a9930e4c_Range32(68472LLU,68479LLU,1LLU),_1a9930e4c_Range32(68521LLU,68527LLU,1LLU),_1a9930e4c_Range32(68858LLU,68863LLU,1LLU),_1a9930e4c_Range32(69216LLU,69246LLU,1LLU),_1a9930e4c_Range32(69405LLU,69414LLU,1LLU),_1a9930e4c_Range32(69457LLU,69460LLU,1LLU),_1a9930e4c_Range32(69573LLU,69579LLU,1LLU),_1a9930e4c_Range32(69714LLU,69733LLU,1LLU),_1a9930e4c_Range32(70113LLU,70132LLU,1LLU),_1a9930e4c_Range32(71482LLU,71483LLU,1LLU),_1a9930e4c_Range32(71914LLU,71922LLU,1LLU),_1a9930e4c_Range32(72794LLU,72812LLU,1LLU),_1a9930e4c_Range32(73664LLU,73684LLU,1LLU),_1a9930e4c_Range32(93019LLU,93025LLU,1LLU),_1a9930e4c_Range32(93824LLU,93846LLU,1LLU),_1a9930e4c_Range32(119488LLU,119507LLU,1LLU),_1a9930e4c_Range32(119520LLU,119539LLU,1LLU),_1a9930e4c_Range32(119648LLU,119672LLU,1LLU),_1a9930e4c_Range32(125127LLU,125135LLU,1LLU),_1a9930e4c_Range32(126065LLU,126123LLU,1LLU),_1a9930e4c_Range32(126125LLU,126127LLU,1LLU),_1a9930e4c_Range32(126129LLU,126132LLU,1LLU),_1a9930e4c_Range32(126209LLU,126253LLU,1LLU),_1a9930e4c_Range32(126255LLU,126269LLU,1LLU),_1a9930e4c_Range32(127232LLU,127244LLU,1LLU)}),3LL));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__P = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(33LLU,35LLU,1LLU),_1a9930e4c_Range16(37LLU,42LLU,1LLU),_1a9930e4c_Range16(44LLU,47LLU,1LLU),_1a9930e4c_Range16(58LLU,59LLU,1LLU),_1a9930e4c_Range16(63LLU,64LLU,1LLU),_1a9930e4c_Range16(91LLU,93LLU,1LLU),_1a9930e4c_Range16(95LLU,123LLU,28LLU),_1a9930e4c_Range16(125LLU,161LLU,36LLU),_1a9930e4c_Range16(167LLU,171LLU,4LLU),_1a9930e4c_Range16(182LLU,183LLU,1LLU),_1a9930e4c_Range16(187LLU,191LLU,4LLU),_1a9930e4c_Range16(894LLU,903LLU,9LLU),_1a9930e4c_Range16(1370LLU,1375LLU,1LLU),_1a9930e4c_Range16(1417LLU,1418LLU,1LLU),_1a9930e4c_Range16(1470LLU,1472LLU,2LLU),_1a9930e4c_Range16(1475LLU,1478LLU,3LLU),_1a9930e4c_Range16(1523LLU,1524LLU,1LLU),_1a9930e4c_Range16(1545LLU,1546LLU,1LLU),_1a9930e4c_Range16(1548LLU,1549LLU,1LLU),_1a9930e4c_Range16(1563LLU,1565LLU,2LLU),_1a9930e4c_Range16(1566LLU,1567LLU,1LLU),_1a9930e4c_Range16(1642LLU,1645LLU,1LLU),_1a9930e4c_Range16(1748LLU,1792LLU,44LLU),_1a9930e4c_Range16(1793LLU,1805LLU,1LLU),_1a9930e4c_Range16(2039LLU,2041LLU,1LLU),_1a9930e4c_Range16(2096LLU,2110LLU,1LLU),_1a9930e4c_Range16(2142LLU,2404LLU,262LLU),_1a9930e4c_Range16(2405LLU,2416LLU,11LLU),_1a9930e4c_Range16(2557LLU,2678LLU,121LLU),_1a9930e4c_Range16(2800LLU,3191LLU,391LLU),_1a9930e4c_Range16(3204LLU,3572LLU,368LLU),_1a9930e4c_Range16(3663LLU,3674LLU,11LLU),_1a9930e4c_Range16(3675LLU,3844LLU,169LLU),_1a9930e4c_Range16(3845LLU,3858LLU,1LLU),_1a9930e4c_Range16(3860LLU,3898LLU,38LLU),_1a9930e4c_Range16(3899LLU,3901LLU,1LLU),_1a9930e4c_Range16(3973LLU,4048LLU,75LLU),_1a9930e4c_Range16(4049LLU,4052LLU,1LLU),_1a9930e4c_Range16(4057LLU,4058LLU,1LLU),_1a9930e4c_Range16(4170LLU,4175LLU,1LLU),_1a9930e4c_Range16(4347LLU,4960LLU,613LLU),_1a9930e4c_Range16(4961LLU,4968LLU,1LLU),_1a9930e4c_Range16(5120LLU,5742LLU,622LLU),_1a9930e4c_Range16(5787LLU,5788LLU,1LLU),_1a9930e4c_Range16(5867LLU,5869LLU,1LLU),_1a9930e4c_Range16(5941LLU,5942LLU,1LLU),_1a9930e4c_Range16(6100LLU,6102LLU,1LLU),_1a9930e4c_Range16(6104LLU,6106LLU,1LLU),_1a9930e4c_Range16(6144LLU,6154LLU,1LLU),_1a9930e4c_Range16(6468LLU,6469LLU,1LLU),_1a9930e4c_Range16(6686LLU,6687LLU,1LLU),_1a9930e4c_Range16(6816LLU,6822LLU,1LLU),_1a9930e4c_Range16(6824LLU,6829LLU,1LLU),_1a9930e4c_Range16(7002LLU,7008LLU,1LLU),_1a9930e4c_Range16(7037LLU,7038LLU,1LLU),_1a9930e4c_Range16(7164LLU,7167LLU,1LLU),_1a9930e4c_Range16(7227LLU,7231LLU,1LLU),_1a9930e4c_Range16(7294LLU,7295LLU,1LLU),_1a9930e4c_Range16(7360LLU,7367LLU,1LLU),_1a9930e4c_Range16(7379LLU,8208LLU,829LLU),_1a9930e4c_Range16(8209LLU,8231LLU,1LLU),_1a9930e4c_Range16(8240LLU,8259LLU,1LLU),_1a9930e4c_Range16(8261LLU,8273LLU,1LLU),_1a9930e4c_Range16(8275LLU,8286LLU,1LLU),_1a9930e4c_Range16(8317LLU,8318LLU,1LLU),_1a9930e4c_Range16(8333LLU,8334LLU,1LLU),_1a9930e4c_Range16(8968LLU,8971LLU,1LLU),_1a9930e4c_Range16(9001LLU,9002LLU,1LLU),_1a9930e4c_Range16(10088LLU,10101LLU,1LLU),_1a9930e4c_Range16(10181LLU,10182LLU,1LLU),_1a9930e4c_Range16(10214LLU,10223LLU,1LLU),_1a9930e4c_Range16(10627LLU,10648LLU,1LLU),_1a9930e4c_Range16(10712LLU,10715LLU,1LLU),_1a9930e4c_Range16(10748LLU,10749LLU,1LLU),_1a9930e4c_Range16(11513LLU,11516LLU,1LLU),_1a9930e4c_Range16(11518LLU,11519LLU,1LLU),_1a9930e4c_Range16(11632LLU,11776LLU,144LLU),_1a9930e4c_Range16(11777LLU,11822LLU,1LLU),_1a9930e4c_Range16(11824LLU,11855LLU,1LLU),_1a9930e4c_Range16(11858LLU,11869LLU,1LLU),_1a9930e4c_Range16(12289LLU,12291LLU,1LLU),_1a9930e4c_Range16(12296LLU,12305LLU,1LLU),_1a9930e4c_Range16(12308LLU,12319LLU,1LLU),_1a9930e4c_Range16(12336LLU,12349LLU,13LLU),_1a9930e4c_Range16(12448LLU,12539LLU,91LLU),_1a9930e4c_Range16(42238LLU,42239LLU,1LLU),_1a9930e4c_Range16(42509LLU,42511LLU,1LLU),_1a9930e4c_Range16(42611LLU,42622LLU,11LLU),_1a9930e4c_Range16(42738LLU,42743LLU,1LLU),_1a9930e4c_Range16(43124LLU,43127LLU,1LLU),_1a9930e4c_Range16(43214LLU,43215LLU,1LLU),_1a9930e4c_Range16(43256LLU,43258LLU,1LLU),_1a9930e4c_Range16(43260LLU,43310LLU,50LLU),_1a9930e4c_Range16(43311LLU,43359LLU,48LLU),_1a9930e4c_Range16(43457LLU,43469LLU,1LLU),_1a9930e4c_Range16(43486LLU,43487LLU,1LLU),_1a9930e4c_Range16(43612LLU,43615LLU,1LLU),_1a9930e4c_Range16(43742LLU,43743LLU,1LLU),_1a9930e4c_Range16(43760LLU,43761LLU,1LLU),_1a9930e4c_Range16(44011LLU,64830LLU,20819LLU),_1a9930e4c_Range16(64831LLU,65040LLU,209LLU),_1a9930e4c_Range16(65041LLU,65049LLU,1LLU),_1a9930e4c_Range16(65072LLU,65106LLU,1LLU),_1a9930e4c_Range16(65108LLU,65121LLU,1LLU),_1a9930e4c_Range16(65123LLU,65128LLU,5LLU),_1a9930e4c_Range16(65130LLU,65131LLU,1LLU),_1a9930e4c_Range16(65281LLU,65283LLU,1LLU),_1a9930e4c_Range16(65285LLU,65290LLU,1LLU),_1a9930e4c_Range16(65292LLU,65295LLU,1LLU),_1a9930e4c_Range16(65306LLU,65307LLU,1LLU),_1a9930e4c_Range16(65311LLU,65312LLU,1LLU),_1a9930e4c_Range16(65339LLU,65341LLU,1LLU),_1a9930e4c_Range16(65343LLU,65371LLU,28LLU),_1a9930e4c_Range16(65373LLU,65375LLU,2LLU),_1a9930e4c_Range16(65376LLU,65381LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(65792LLU,65794LLU,1LLU),_1a9930e4c_Range32(66463LLU,66512LLU,49LLU),_1a9930e4c_Range32(66927LLU,67671LLU,744LLU),_1a9930e4c_Range32(67871LLU,67903LLU,32LLU),_1a9930e4c_Range32(68176LLU,68184LLU,1LLU),_1a9930e4c_Range32(68223LLU,68336LLU,113LLU),_1a9930e4c_Range32(68337LLU,68342LLU,1LLU),_1a9930e4c_Range32(68409LLU,68415LLU,1LLU),_1a9930e4c_Range32(68505LLU,68508LLU,1LLU),_1a9930e4c_Range32(69293LLU,69461LLU,168LLU),_1a9930e4c_Range32(69462LLU,69465LLU,1LLU),_1a9930e4c_Range32(69510LLU,69513LLU,1LLU),_1a9930e4c_Range32(69703LLU,69709LLU,1LLU),_1a9930e4c_Range32(69819LLU,69820LLU,1LLU),_1a9930e4c_Range32(69822LLU,69825LLU,1LLU),_1a9930e4c_Range32(69952LLU,69955LLU,1LLU),_1a9930e4c_Range32(70004LLU,70005LLU,1LLU),_1a9930e4c_Range32(70085LLU,70088LLU,1LLU),_1a9930e4c_Range32(70093LLU,70107LLU,14LLU),_1a9930e4c_Range32(70109LLU,70111LLU,1LLU),_1a9930e4c_Range32(70200LLU,70205LLU,1LLU),_1a9930e4c_Range32(70313LLU,70731LLU,418LLU),_1a9930e4c_Range32(70732LLU,70735LLU,1LLU),_1a9930e4c_Range32(70746LLU,70747LLU,1LLU),_1a9930e4c_Range32(70749LLU,70854LLU,105LLU),_1a9930e4c_Range32(71105LLU,71127LLU,1LLU),_1a9930e4c_Range32(71233LLU,71235LLU,1LLU),_1a9930e4c_Range32(71264LLU,71276LLU,1LLU),_1a9930e4c_Range32(71353LLU,71484LLU,131LLU),_1a9930e4c_Range32(71485LLU,71486LLU,1LLU),_1a9930e4c_Range32(71739LLU,72004LLU,265LLU),_1a9930e4c_Range32(72005LLU,72006LLU,1LLU),_1a9930e4c_Range32(72162LLU,72255LLU,93LLU),_1a9930e4c_Range32(72256LLU,72262LLU,1LLU),_1a9930e4c_Range32(72346LLU,72348LLU,1LLU),_1a9930e4c_Range32(72350LLU,72354LLU,1LLU),_1a9930e4c_Range32(72448LLU,72457LLU,1LLU),_1a9930e4c_Range32(72769LLU,72773LLU,1LLU),_1a9930e4c_Range32(72816LLU,72817LLU,1LLU),_1a9930e4c_Range32(73463LLU,73464LLU,1LLU),_1a9930e4c_Range32(73539LLU,73551LLU,1LLU),_1a9930e4c_Range32(73727LLU,74864LLU,1137LLU),_1a9930e4c_Range32(74865LLU,74868LLU,1LLU),_1a9930e4c_Range32(77809LLU,77810LLU,1LLU),_1a9930e4c_Range32(92782LLU,92783LLU,1LLU),_1a9930e4c_Range32(92917LLU,92983LLU,66LLU),_1a9930e4c_Range32(92984LLU,92987LLU,1LLU),_1a9930e4c_Range32(92996LLU,93847LLU,851LLU),_1a9930e4c_Range32(93848LLU,93850LLU,1LLU),_1a9930e4c_Range32(94178LLU,113823LLU,19645LLU),_1a9930e4c_Range32(121479LLU,121483LLU,1LLU),_1a9930e4c_Range32(125278LLU,125279LLU,1LLU)}),11LL));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__PC = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(95LLU,8255LLU,8160LLU),_1a9930e4c_Range16(8256LLU,8276LLU,20LLU),_1a9930e4c_Range16(65075LLU,65076LLU,1LLU),_1a9930e4c_Range16(65101LLU,65103LLU,1LLU),_1a9930e4c_Range16(65343LLU,65343LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__PD = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(45LLU,1418LLU,1373LLU),_1a9930e4c_Range16(1470LLU,5120LLU,3650LLU),_1a9930e4c_Range16(6150LLU,8208LLU,2058LLU),_1a9930e4c_Range16(8209LLU,8213LLU,1LLU),_1a9930e4c_Range16(11799LLU,11802LLU,3LLU),_1a9930e4c_Range16(11834LLU,11835LLU,1LLU),_1a9930e4c_Range16(11840LLU,11869LLU,29LLU),_1a9930e4c_Range16(12316LLU,12336LLU,20LLU),_1a9930e4c_Range16(12448LLU,65073LLU,52625LLU),_1a9930e4c_Range16(65074LLU,65112LLU,38LLU),_1a9930e4c_Range16(65123LLU,65293LLU,170LLU)}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(69293LLU,69293LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__PE = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(41LLU,93LLU,52LLU),_1a9930e4c_Range16(125LLU,3899LLU,3774LLU),_1a9930e4c_Range16(3901LLU,5788LLU,1887LLU),_1a9930e4c_Range16(8262LLU,8318LLU,56LLU),_1a9930e4c_Range16(8334LLU,8969LLU,635LLU),_1a9930e4c_Range16(8971LLU,9002LLU,31LLU),_1a9930e4c_Range16(10089LLU,10101LLU,2LLU),_1a9930e4c_Range16(10182LLU,10215LLU,33LLU),_1a9930e4c_Range16(10217LLU,10223LLU,2LLU),_1a9930e4c_Range16(10628LLU,10648LLU,2LLU),_1a9930e4c_Range16(10713LLU,10715LLU,2LLU),_1a9930e4c_Range16(10749LLU,11811LLU,1062LLU),_1a9930e4c_Range16(11813LLU,11817LLU,2LLU),_1a9930e4c_Range16(11862LLU,11868LLU,2LLU),_1a9930e4c_Range16(12297LLU,12305LLU,2LLU),_1a9930e4c_Range16(12309LLU,12315LLU,2LLU),_1a9930e4c_Range16(12318LLU,12319LLU,1LLU),_1a9930e4c_Range16(64830LLU,65048LLU,218LLU),_1a9930e4c_Range16(65078LLU,65092LLU,2LLU),_1a9930e4c_Range16(65096LLU,65114LLU,18LLU),_1a9930e4c_Range16(65116LLU,65118LLU,2LLU),_1a9930e4c_Range16(65289LLU,65341LLU,52LLU),_1a9930e4c_Range16(65373LLU,65379LLU,3LLU)}),jule::Slice<_1a9930e4c_Range32>(),1LL));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__PF = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(187LLU,8217LLU,8030LLU),_1a9930e4c_Range16(8221LLU,8250LLU,29LLU),_1a9930e4c_Range16(11779LLU,11781LLU,2LLU),_1a9930e4c_Range16(11786LLU,11789LLU,3LLU),_1a9930e4c_Range16(11805LLU,11809LLU,4LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__PI = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(171LLU,8216LLU,8045LLU),_1a9930e4c_Range16(8219LLU,8220LLU,1LLU),_1a9930e4c_Range16(8223LLU,8249LLU,26LLU),_1a9930e4c_Range16(11778LLU,11780LLU,2LLU),_1a9930e4c_Range16(11785LLU,11788LLU,3LLU),_1a9930e4c_Range16(11804LLU,11808LLU,4LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__PO = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(33LLU,35LLU,1LLU),_1a9930e4c_Range16(37LLU,39LLU,1LLU),_1a9930e4c_Range16(42LLU,46LLU,2LLU),_1a9930e4c_Range16(47LLU,58LLU,11LLU),_1a9930e4c_Range16(59LLU,63LLU,4LLU),_1a9930e4c_Range16(64LLU,92LLU,28LLU),_1a9930e4c_Range16(161LLU,167LLU,6LLU),_1a9930e4c_Range16(182LLU,183LLU,1LLU),_1a9930e4c_Range16(191LLU,894LLU,703LLU),_1a9930e4c_Range16(903LLU,1370LLU,467LLU),_1a9930e4c_Range16(1371LLU,1375LLU,1LLU),_1a9930e4c_Range16(1417LLU,1472LLU,55LLU),_1a9930e4c_Range16(1475LLU,1478LLU,3LLU),_1a9930e4c_Range16(1523LLU,1524LLU,1LLU),_1a9930e4c_Range16(1545LLU,1546LLU,1LLU),_1a9930e4c_Range16(1548LLU,1549LLU,1LLU),_1a9930e4c_Range16(1563LLU,1565LLU,2LLU),_1a9930e4c_Range16(1566LLU,1567LLU,1LLU),_1a9930e4c_Range16(1642LLU,1645LLU,1LLU),_1a9930e4c_Range16(1748LLU,1792LLU,44LLU),_1a9930e4c_Range16(1793LLU,1805LLU,1LLU),_1a9930e4c_Range16(2039LLU,2041LLU,1LLU),_1a9930e4c_Range16(2096LLU,2110LLU,1LLU),_1a9930e4c_Range16(2142LLU,2404LLU,262LLU),_1a9930e4c_Range16(2405LLU,2416LLU,11LLU),_1a9930e4c_Range16(2557LLU,2678LLU,121LLU),_1a9930e4c_Range16(2800LLU,3191LLU,391LLU),_1a9930e4c_Range16(3204LLU,3572LLU,368LLU),_1a9930e4c_Range16(3663LLU,3674LLU,11LLU),_1a9930e4c_Range16(3675LLU,3844LLU,169LLU),_1a9930e4c_Range16(3845LLU,3858LLU,1LLU),_1a9930e4c_Range16(3860LLU,3973LLU,113LLU),_1a9930e4c_Range16(4048LLU,4052LLU,1LLU),_1a9930e4c_Range16(4057LLU,4058LLU,1LLU),_1a9930e4c_Range16(4170LLU,4175LLU,1LLU),_1a9930e4c_Range16(4347LLU,4960LLU,613LLU),_1a9930e4c_Range16(4961LLU,4968LLU,1LLU),_1a9930e4c_Range16(5742LLU,5867LLU,125LLU),_1a9930e4c_Range16(5868LLU,5869LLU,1LLU),_1a9930e4c_Range16(5941LLU,5942LLU,1LLU),_1a9930e4c_Range16(6100LLU,6102LLU,1LLU),_1a9930e4c_Range16(6104LLU,6106LLU,1LLU),_1a9930e4c_Range16(6144LLU,6149LLU,1LLU),_1a9930e4c_Range16(6151LLU,6154LLU,1LLU),_1a9930e4c_Range16(6468LLU,6469LLU,1LLU),_1a9930e4c_Range16(6686LLU,6687LLU,1LLU),_1a9930e4c_Range16(6816LLU,6822LLU,1LLU),_1a9930e4c_Range16(6824LLU,6829LLU,1LLU),_1a9930e4c_Range16(7002LLU,7008LLU,1LLU),_1a9930e4c_Range16(7037LLU,7038LLU,1LLU),_1a9930e4c_Range16(7164LLU,7167LLU,1LLU),_1a9930e4c_Range16(7227LLU,7231LLU,1LLU),_1a9930e4c_Range16(7294LLU,7295LLU,1LLU),_1a9930e4c_Range16(7360LLU,7367LLU,1LLU),_1a9930e4c_Range16(7379LLU,8214LLU,835LLU),_1a9930e4c_Range16(8215LLU,8224LLU,9LLU),_1a9930e4c_Range16(8225LLU,8231LLU,1LLU),_1a9930e4c_Range16(8240LLU,8248LLU,1LLU),_1a9930e4c_Range16(8251LLU,8254LLU,1LLU),_1a9930e4c_Range16(8257LLU,8259LLU,1LLU),_1a9930e4c_Range16(8263LLU,8273LLU,1LLU),_1a9930e4c_Range16(8275LLU,8277LLU,2LLU),_1a9930e4c_Range16(8278LLU,8286LLU,1LLU),_1a9930e4c_Range16(11513LLU,11516LLU,1LLU),_1a9930e4c_Range16(11518LLU,11519LLU,1LLU),_1a9930e4c_Range16(11632LLU,11776LLU,144LLU),_1a9930e4c_Range16(11777LLU,11782LLU,5LLU),_1a9930e4c_Range16(11783LLU,11784LLU,1LLU),_1a9930e4c_Range16(11787LLU,11790LLU,3LLU),_1a9930e4c_Range16(11791LLU,11798LLU,1LLU),_1a9930e4c_Range16(11800LLU,11801LLU,1LLU),_1a9930e4c_Range16(11803LLU,11806LLU,3LLU),_1a9930e4c_Range16(11807LLU,11818LLU,11LLU),_1a9930e4c_Range16(11819LLU,11822LLU,1LLU),_1a9930e4c_Range16(11824LLU,11833LLU,1LLU),_1a9930e4c_Range16(11836LLU,11839LLU,1LLU),_1a9930e4c_Range16(11841LLU,11843LLU,2LLU),_1a9930e4c_Range16(11844LLU,11855LLU,1LLU),_1a9930e4c_Range16(11858LLU,11860LLU,1LLU),_1a9930e4c_Range16(12289LLU,12291LLU,1LLU),_1a9930e4c_Range16(12349LLU,12539LLU,190LLU),_1a9930e4c_Range16(42238LLU,42239LLU,1LLU),_1a9930e4c_Range16(42509LLU,42511LLU,1LLU),_1a9930e4c_Range16(42611LLU,42622LLU,11LLU),_1a9930e4c_Range16(42738LLU,42743LLU,1LLU),_1a9930e4c_Range16(43124LLU,43127LLU,1LLU),_1a9930e4c_Range16(43214LLU,43215LLU,1LLU),_1a9930e4c_Range16(43256LLU,43258LLU,1LLU),_1a9930e4c_Range16(43260LLU,43310LLU,50LLU),_1a9930e4c_Range16(43311LLU,43359LLU,48LLU),_1a9930e4c_Range16(43457LLU,43469LLU,1LLU),_1a9930e4c_Range16(43486LLU,43487LLU,1LLU),_1a9930e4c_Range16(43612LLU,43615LLU,1LLU),_1a9930e4c_Range16(43742LLU,43743LLU,1LLU),_1a9930e4c_Range16(43760LLU,43761LLU,1LLU),_1a9930e4c_Range16(44011LLU,65040LLU,21029LLU),_1a9930e4c_Range16(65041LLU,65046LLU,1LLU),_1a9930e4c_Range16(65049LLU,65072LLU,23LLU),_1a9930e4c_Range16(65093LLU,65094LLU,1LLU),_1a9930e4c_Range16(65097LLU,65100LLU,1LLU),_1a9930e4c_Range16(65104LLU,65106LLU,1LLU),_1a9930e4c_Range16(65108LLU,65111LLU,1LLU),_1a9930e4c_Range16(65119LLU,65121LLU,1LLU),_1a9930e4c_Range16(65128LLU,65130LLU,2LLU),_1a9930e4c_Range16(65131LLU,65281LLU,150LLU),_1a9930e4c_Range16(65282LLU,65283LLU,1LLU),_1a9930e4c_Range16(65285LLU,65287LLU,1LLU),_1a9930e4c_Range16(65290LLU,65294LLU,2LLU),_1a9930e4c_Range16(65295LLU,65306LLU,11LLU),_1a9930e4c_Range16(65307LLU,65311LLU,4LLU),_1a9930e4c_Range16(65312LLU,65340LLU,28LLU),_1a9930e4c_Range16(65377LLU,65380LLU,3LLU),_1a9930e4c_Range16(65381LLU,65381LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(65792LLU,65794LLU,1LLU),_1a9930e4c_Range32(66463LLU,66512LLU,49LLU),_1a9930e4c_Range32(66927LLU,67671LLU,744LLU),_1a9930e4c_Range32(67871LLU,67903LLU,32LLU),_1a9930e4c_Range32(68176LLU,68184LLU,1LLU),_1a9930e4c_Range32(68223LLU,68336LLU,113LLU),_1a9930e4c_Range32(68337LLU,68342LLU,1LLU),_1a9930e4c_Range32(68409LLU,68415LLU,1LLU),_1a9930e4c_Range32(68505LLU,68508LLU,1LLU),_1a9930e4c_Range32(69461LLU,69465LLU,1LLU),_1a9930e4c_Range32(69510LLU,69513LLU,1LLU),_1a9930e4c_Range32(69703LLU,69709LLU,1LLU),_1a9930e4c_Range32(69819LLU,69820LLU,1LLU),_1a9930e4c_Range32(69822LLU,69825LLU,1LLU),_1a9930e4c_Range32(69952LLU,69955LLU,1LLU),_1a9930e4c_Range32(70004LLU,70005LLU,1LLU),_1a9930e4c_Range32(70085LLU,70088LLU,1LLU),_1a9930e4c_Range32(70093LLU,70107LLU,14LLU),_1a9930e4c_Range32(70109LLU,70111LLU,1LLU),_1a9930e4c_Range32(70200LLU,70205LLU,1LLU),_1a9930e4c_Range32(70313LLU,70731LLU,418LLU),_1a9930e4c_Range32(70732LLU,70735LLU,1LLU),_1a9930e4c_Range32(70746LLU,70747LLU,1LLU),_1a9930e4c_Range32(70749LLU,70854LLU,105LLU),_1a9930e4c_Range32(71105LLU,71127LLU,1LLU),_1a9930e4c_Range32(71233LLU,71235LLU,1LLU),_1a9930e4c_Range32(71264LLU,71276LLU,1LLU),_1a9930e4c_Range32(71353LLU,71484LLU,131LLU),_1a9930e4c_Range32(71485LLU,71486LLU,1LLU),_1a9930e4c_Range32(71739LLU,72004LLU,265LLU),_1a9930e4c_Range32(72005LLU,72006LLU,1LLU),_1a9930e4c_Range32(72162LLU,72255LLU,93LLU),_1a9930e4c_Range32(72256LLU,72262LLU,1LLU),_1a9930e4c_Range32(72346LLU,72348LLU,1LLU),_1a9930e4c_Range32(72350LLU,72354LLU,1LLU),_1a9930e4c_Range32(72448LLU,72457LLU,1LLU),_1a9930e4c_Range32(72769LLU,72773LLU,1LLU),_1a9930e4c_Range32(72816LLU,72817LLU,1LLU),_1a9930e4c_Range32(73463LLU,73464LLU,1LLU),_1a9930e4c_Range32(73539LLU,73551LLU,1LLU),_1a9930e4c_Range32(73727LLU,74864LLU,1137LLU),_1a9930e4c_Range32(74865LLU,74868LLU,1LLU),_1a9930e4c_Range32(77809LLU,77810LLU,1LLU),_1a9930e4c_Range32(92782LLU,92783LLU,1LLU),_1a9930e4c_Range32(92917LLU,92983LLU,66LLU),_1a9930e4c_Range32(92984LLU,92987LLU,1LLU),_1a9930e4c_Range32(92996LLU,93847LLU,851LLU),_1a9930e4c_Range32(93848LLU,93850LLU,1LLU),_1a9930e4c_Range32(94178LLU,113823LLU,19645LLU),_1a9930e4c_Range32(121479LLU,121483LLU,1LLU),_1a9930e4c_Range32(125278LLU,125279LLU,1LLU)}),8LL));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__PS = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(40LLU,91LLU,51LLU),_1a9930e4c_Range16(123LLU,3898LLU,3775LLU),_1a9930e4c_Range16(3900LLU,5787LLU,1887LLU),_1a9930e4c_Range16(8218LLU,8222LLU,4LLU),_1a9930e4c_Range16(8261LLU,8317LLU,56LLU),_1a9930e4c_Range16(8333LLU,8968LLU,635LLU),_1a9930e4c_Range16(8970LLU,9001LLU,31LLU),_1a9930e4c_Range16(10088LLU,10100LLU,2LLU),_1a9930e4c_Range16(10181LLU,10214LLU,33LLU),_1a9930e4c_Range16(10216LLU,10222LLU,2LLU),_1a9930e4c_Range16(10627LLU,10647LLU,2LLU),_1a9930e4c_Range16(10712LLU,10714LLU,2LLU),_1a9930e4c_Range16(10748LLU,11810LLU,1062LLU),_1a9930e4c_Range16(11812LLU,11816LLU,2LLU),_1a9930e4c_Range16(11842LLU,11861LLU,19LLU),_1a9930e4c_Range16(11863LLU,11867LLU,2LLU),_1a9930e4c_Range16(12296LLU,12304LLU,2LLU),_1a9930e4c_Range16(12308LLU,12314LLU,2LLU),_1a9930e4c_Range16(12317LLU,64831LLU,52514LLU),_1a9930e4c_Range16(65047LLU,65077LLU,30LLU),_1a9930e4c_Range16(65079LLU,65091LLU,2LLU),_1a9930e4c_Range16(65095LLU,65113LLU,18LLU),_1a9930e4c_Range16(65115LLU,65117LLU,2LLU),_1a9930e4c_Range16(65288LLU,65339LLU,51LLU),_1a9930e4c_Range16(65371LLU,65375LLU,4LLU),_1a9930e4c_Range16(65378LLU,65378LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),1LL));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__S = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(36LLU,43LLU,7LLU),_1a9930e4c_Range16(60LLU,62LLU,1LLU),_1a9930e4c_Range16(94LLU,96LLU,2LLU),_1a9930e4c_Range16(124LLU,126LLU,2LLU),_1a9930e4c_Range16(162LLU,166LLU,1LLU),_1a9930e4c_Range16(168LLU,169LLU,1LLU),_1a9930e4c_Range16(172LLU,174LLU,2LLU),_1a9930e4c_Range16(175LLU,177LLU,1LLU),_1a9930e4c_Range16(180LLU,184LLU,4LLU),_1a9930e4c_Range16(215LLU,247LLU,32LLU),_1a9930e4c_Range16(706LLU,709LLU,1LLU),_1a9930e4c_Range16(722LLU,735LLU,1LLU),_1a9930e4c_Range16(741LLU,747LLU,1LLU),_1a9930e4c_Range16(749LLU,751LLU,2LLU),_1a9930e4c_Range16(752LLU,767LLU,1LLU),_1a9930e4c_Range16(885LLU,900LLU,15LLU),_1a9930e4c_Range16(901LLU,1014LLU,113LLU),_1a9930e4c_Range16(1154LLU,1421LLU,267LLU),_1a9930e4c_Range16(1422LLU,1423LLU,1LLU),_1a9930e4c_Range16(1542LLU,1544LLU,1LLU),_1a9930e4c_Range16(1547LLU,1550LLU,3LLU),_1a9930e4c_Range16(1551LLU,1758LLU,207LLU),_1a9930e4c_Range16(1769LLU,1789LLU,20LLU),_1a9930e4c_Range16(1790LLU,2038LLU,248LLU),_1a9930e4c_Range16(2046LLU,2047LLU,1LLU),_1a9930e4c_Range16(2184LLU,2546LLU,362LLU),_1a9930e4c_Range16(2547LLU,2554LLU,7LLU),_1a9930e4c_Range16(2555LLU,2801LLU,246LLU),_1a9930e4c_Range16(2928LLU,3059LLU,131LLU),_1a9930e4c_Range16(3060LLU,3066LLU,1LLU),_1a9930e4c_Range16(3199LLU,3407LLU,208LLU),_1a9930e4c_Range16(3449LLU,3647LLU,198LLU),_1a9930e4c_Range16(3841LLU,3843LLU,1LLU),_1a9930e4c_Range16(3859LLU,3861LLU,2LLU),_1a9930e4c_Range16(3862LLU,3863LLU,1LLU),_1a9930e4c_Range16(3866LLU,3871LLU,1LLU),_1a9930e4c_Range16(3892LLU,3896LLU,2LLU),_1a9930e4c_Range16(4030LLU,4037LLU,1LLU),_1a9930e4c_Range16(4039LLU,4044LLU,1LLU),_1a9930e4c_Range16(4046LLU,4047LLU,1LLU),_1a9930e4c_Range16(4053LLU,4056LLU,1LLU),_1a9930e4c_Range16(4254LLU,4255LLU,1LLU),_1a9930e4c_Range16(5008LLU,5017LLU,1LLU),_1a9930e4c_Range16(5741LLU,6107LLU,366LLU),_1a9930e4c_Range16(6464LLU,6622LLU,158LLU),_1a9930e4c_Range16(6623LLU,6655LLU,1LLU),_1a9930e4c_Range16(7009LLU,7018LLU,1LLU),_1a9930e4c_Range16(7028LLU,7036LLU,1LLU),_1a9930e4c_Range16(8125LLU,8127LLU,2LLU),_1a9930e4c_Range16(8128LLU,8129LLU,1LLU),_1a9930e4c_Range16(8141LLU,8143LLU,1LLU),_1a9930e4c_Range16(8157LLU,8159LLU,1LLU),_1a9930e4c_Range16(8173LLU,8175LLU,1LLU),_1a9930e4c_Range16(8189LLU,8190LLU,1LLU),_1a9930e4c_Range16(8260LLU,8274LLU,14LLU),_1a9930e4c_Range16(8314LLU,8316LLU,1LLU),_1a9930e4c_Range16(8330LLU,8332LLU,1LLU),_1a9930e4c_Range16(8352LLU,8384LLU,1LLU),_1a9930e4c_Range16(8448LLU,8449LLU,1LLU),_1a9930e4c_Range16(8451LLU,8454LLU,1LLU),_1a9930e4c_Range16(8456LLU,8457LLU,1LLU),_1a9930e4c_Range16(8468LLU,8470LLU,2LLU),_1a9930e4c_Range16(8471LLU,8472LLU,1LLU),_1a9930e4c_Range16(8478LLU,8483LLU,1LLU),_1a9930e4c_Range16(8485LLU,8489LLU,2LLU),_1a9930e4c_Range16(8494LLU,8506LLU,12LLU),_1a9930e4c_Range16(8507LLU,8512LLU,5LLU),_1a9930e4c_Range16(8513LLU,8516LLU,1LLU),_1a9930e4c_Range16(8522LLU,8525LLU,1LLU),_1a9930e4c_Range16(8527LLU,8586LLU,59LLU),_1a9930e4c_Range16(8587LLU,8592LLU,5LLU),_1a9930e4c_Range16(8593LLU,8967LLU,1LLU),_1a9930e4c_Range16(8972LLU,9000LLU,1LLU),_1a9930e4c_Range16(9003LLU,9254LLU,1LLU),_1a9930e4c_Range16(9280LLU,9290LLU,1LLU),_1a9930e4c_Range16(9372LLU,9449LLU,1LLU),_1a9930e4c_Range16(9472LLU,10087LLU,1LLU),_1a9930e4c_Range16(10132LLU,10180LLU,1LLU),_1a9930e4c_Range16(10183LLU,10213LLU,1LLU),_1a9930e4c_Range16(10224LLU,10626LLU,1LLU),_1a9930e4c_Range16(10649LLU,10711LLU,1LLU),_1a9930e4c_Range16(10716LLU,10747LLU,1LLU),_1a9930e4c_Range16(10750LLU,11123LLU,1LLU),_1a9930e4c_Range16(11126LLU,11157LLU,1LLU),_1a9930e4c_Range16(11159LLU,11263LLU,1LLU),_1a9930e4c_Range16(11493LLU,11498LLU,1LLU),_1a9930e4c_Range16(11856LLU,11857LLU,1LLU),_1a9930e4c_Range16(11904LLU,11929LLU,1LLU),_1a9930e4c_Range16(11931LLU,12019LLU,1LLU),_1a9930e4c_Range16(12032LLU,12245LLU,1LLU),_1a9930e4c_Range16(12272LLU,12283LLU,1LLU),_1a9930e4c_Range16(12292LLU,12306LLU,14LLU),_1a9930e4c_Range16(12307LLU,12320LLU,13LLU),_1a9930e4c_Range16(12342LLU,12343LLU,1LLU),_1a9930e4c_Range16(12350LLU,12351LLU,1LLU),_1a9930e4c_Range16(12443LLU,12444LLU,1LLU),_1a9930e4c_Range16(12688LLU,12689LLU,1LLU),_1a9930e4c_Range16(12694LLU,12703LLU,1LLU),_1a9930e4c_Range16(12736LLU,12771LLU,1LLU),_1a9930e4c_Range16(12800LLU,12830LLU,1LLU),_1a9930e4c_Range16(12842LLU,12871LLU,1LLU),_1a9930e4c_Range16(12880LLU,12896LLU,16LLU),_1a9930e4c_Range16(12897LLU,12927LLU,1LLU),_1a9930e4c_Range16(12938LLU,12976LLU,1LLU),_1a9930e4c_Range16(12992LLU,13311LLU,1LLU),_1a9930e4c_Range16(19904LLU,19967LLU,1LLU),_1a9930e4c_Range16(42128LLU,42182LLU,1LLU),_1a9930e4c_Range16(42752LLU,42774LLU,1LLU),_1a9930e4c_Range16(42784LLU,42785LLU,1LLU),_1a9930e4c_Range16(42889LLU,42890LLU,1LLU),_1a9930e4c_Range16(43048LLU,43051LLU,1LLU),_1a9930e4c_Range16(43062LLU,43065LLU,1LLU),_1a9930e4c_Range16(43639LLU,43641LLU,1LLU),_1a9930e4c_Range16(43867LLU,43882LLU,15LLU),_1a9930e4c_Range16(43883LLU,64297LLU,20414LLU),_1a9930e4c_Range16(64434LLU,64450LLU,1LLU),_1a9930e4c_Range16(64832LLU,64847LLU,1LLU),_1a9930e4c_Range16(64975LLU,65020LLU,45LLU),_1a9930e4c_Range16(65021LLU,65023LLU,1LLU),_1a9930e4c_Range16(65122LLU,65124LLU,2LLU),_1a9930e4c_Range16(65125LLU,65126LLU,1LLU),_1a9930e4c_Range16(65129LLU,65284LLU,155LLU),_1a9930e4c_Range16(65291LLU,65308LLU,17LLU),_1a9930e4c_Range16(65309LLU,65310LLU,1LLU),_1a9930e4c_Range16(65342LLU,65344LLU,2LLU),_1a9930e4c_Range16(65372LLU,65374LLU,2LLU),_1a9930e4c_Range16(65504LLU,65510LLU,1LLU),_1a9930e4c_Range16(65512LLU,65518LLU,1LLU),_1a9930e4c_Range16(65532LLU,65533LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(65847LLU,65855LLU,1LLU),_1a9930e4c_Range32(65913LLU,65929LLU,1LLU),_1a9930e4c_Range32(65932LLU,65934LLU,1LLU),_1a9930e4c_Range32(65936LLU,65948LLU,1LLU),_1a9930e4c_Range32(65952LLU,66000LLU,48LLU),_1a9930e4c_Range32(66001LLU,66044LLU,1LLU),_1a9930e4c_Range32(67703LLU,67704LLU,1LLU),_1a9930e4c_Range32(68296LLU,71487LLU,3191LLU),_1a9930e4c_Range32(73685LLU,73713LLU,1LLU),_1a9930e4c_Range32(92988LLU,92991LLU,1LLU),_1a9930e4c_Range32(92997LLU,113820LLU,20823LLU),_1a9930e4c_Range32(118608LLU,118723LLU,1LLU),_1a9930e4c_Range32(118784LLU,119029LLU,1LLU),_1a9930e4c_Range32(119040LLU,119078LLU,1LLU),_1a9930e4c_Range32(119081LLU,119140LLU,1LLU),_1a9930e4c_Range32(119146LLU,119148LLU,1LLU),_1a9930e4c_Range32(119171LLU,119172LLU,1LLU),_1a9930e4c_Range32(119180LLU,119209LLU,1LLU),_1a9930e4c_Range32(119214LLU,119274LLU,1LLU),_1a9930e4c_Range32(119296LLU,119361LLU,1LLU),_1a9930e4c_Range32(119365LLU,119552LLU,187LLU),_1a9930e4c_Range32(119553LLU,119638LLU,1LLU),_1a9930e4c_Range32(120513LLU,120539LLU,26LLU),_1a9930e4c_Range32(120571LLU,120597LLU,26LLU),_1a9930e4c_Range32(120629LLU,120655LLU,26LLU),_1a9930e4c_Range32(120687LLU,120713LLU,26LLU),_1a9930e4c_Range32(120745LLU,120771LLU,26LLU),_1a9930e4c_Range32(120832LLU,121343LLU,1LLU),_1a9930e4c_Range32(121399LLU,121402LLU,1LLU),_1a9930e4c_Range32(121453LLU,121460LLU,1LLU),_1a9930e4c_Range32(121462LLU,121475LLU,1LLU),_1a9930e4c_Range32(121477LLU,121478LLU,1LLU),_1a9930e4c_Range32(123215LLU,123647LLU,432LLU),_1a9930e4c_Range32(126124LLU,126128LLU,4LLU),_1a9930e4c_Range32(126254LLU,126704LLU,450LLU),_1a9930e4c_Range32(126705LLU,126976LLU,271LLU),_1a9930e4c_Range32(126977LLU,127019LLU,1LLU),_1a9930e4c_Range32(127024LLU,127123LLU,1LLU),_1a9930e4c_Range32(127136LLU,127150LLU,1LLU),_1a9930e4c_Range32(127153LLU,127167LLU,1LLU),_1a9930e4c_Range32(127169LLU,127183LLU,1LLU),_1a9930e4c_Range32(127185LLU,127221LLU,1LLU),_1a9930e4c_Range32(127245LLU,127405LLU,1LLU),_1a9930e4c_Range32(127462LLU,127490LLU,1LLU),_1a9930e4c_Range32(127504LLU,127547LLU,1LLU),_1a9930e4c_Range32(127552LLU,127560LLU,1LLU),_1a9930e4c_Range32(127568LLU,127569LLU,1LLU),_1a9930e4c_Range32(127584LLU,127589LLU,1LLU),_1a9930e4c_Range32(127744LLU,128727LLU,1LLU),_1a9930e4c_Range32(128732LLU,128748LLU,1LLU),_1a9930e4c_Range32(128752LLU,128764LLU,1LLU),_1a9930e4c_Range32(128768LLU,128886LLU,1LLU),_1a9930e4c_Range32(128891LLU,128985LLU,1LLU),_1a9930e4c_Range32(128992LLU,129003LLU,1LLU),_1a9930e4c_Range32(129008LLU,129024LLU,16LLU),_1a9930e4c_Range32(129025LLU,129035LLU,1LLU),_1a9930e4c_Range32(129040LLU,129095LLU,1LLU),_1a9930e4c_Range32(129104LLU,129113LLU,1LLU),_1a9930e4c_Range32(129120LLU,129159LLU,1LLU),_1a9930e4c_Range32(129168LLU,129197LLU,1LLU),_1a9930e4c_Range32(129200LLU,129201LLU,1LLU),_1a9930e4c_Range32(129280LLU,129619LLU,1LLU),_1a9930e4c_Range32(129632LLU,129645LLU,1LLU),_1a9930e4c_Range32(129648LLU,129660LLU,1LLU),_1a9930e4c_Range32(129664LLU,129672LLU,1LLU),_1a9930e4c_Range32(129680LLU,129725LLU,1LLU),_1a9930e4c_Range32(129727LLU,129733LLU,1LLU),_1a9930e4c_Range32(129742LLU,129755LLU,1LLU),_1a9930e4c_Range32(129760LLU,129768LLU,1LLU),_1a9930e4c_Range32(129776LLU,129784LLU,1LLU),_1a9930e4c_Range32(129792LLU,129938LLU,1LLU),_1a9930e4c_Range32(129940LLU,129994LLU,1LLU)}),10LL));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__SC = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(36LLU,162LLU,126LLU),_1a9930e4c_Range16(163LLU,165LLU,1LLU),_1a9930e4c_Range16(1423LLU,1547LLU,124LLU),_1a9930e4c_Range16(2046LLU,2047LLU,1LLU),_1a9930e4c_Range16(2546LLU,2547LLU,1LLU),_1a9930e4c_Range16(2555LLU,2801LLU,246LLU),_1a9930e4c_Range16(3065LLU,3647LLU,582LLU),_1a9930e4c_Range16(6107LLU,8352LLU,2245LLU),_1a9930e4c_Range16(8353LLU,8384LLU,1LLU),_1a9930e4c_Range16(43064LLU,65020LLU,21956LLU),_1a9930e4c_Range16(65129LLU,65284LLU,155LLU),_1a9930e4c_Range16(65504LLU,65505LLU,1LLU),_1a9930e4c_Range16(65509LLU,65510LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(73693LLU,73696LLU,1LLU),_1a9930e4c_Range32(123647LLU,126128LLU,2481LLU)}),2LL));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__SK = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(94LLU,96LLU,2LLU),_1a9930e4c_Range16(168LLU,175LLU,7LLU),_1a9930e4c_Range16(180LLU,184LLU,4LLU),_1a9930e4c_Range16(706LLU,709LLU,1LLU),_1a9930e4c_Range16(722LLU,735LLU,1LLU),_1a9930e4c_Range16(741LLU,747LLU,1LLU),_1a9930e4c_Range16(749LLU,751LLU,2LLU),_1a9930e4c_Range16(752LLU,767LLU,1LLU),_1a9930e4c_Range16(885LLU,900LLU,15LLU),_1a9930e4c_Range16(901LLU,2184LLU,1283LLU),_1a9930e4c_Range16(8125LLU,8127LLU,2LLU),_1a9930e4c_Range16(8128LLU,8129LLU,1LLU),_1a9930e4c_Range16(8141LLU,8143LLU,1LLU),_1a9930e4c_Range16(8157LLU,8159LLU,1LLU),_1a9930e4c_Range16(8173LLU,8175LLU,1LLU),_1a9930e4c_Range16(8189LLU,8190LLU,1LLU),_1a9930e4c_Range16(12443LLU,12444LLU,1LLU),_1a9930e4c_Range16(42752LLU,42774LLU,1LLU),_1a9930e4c_Range16(42784LLU,42785LLU,1LLU),_1a9930e4c_Range16(42889LLU,42890LLU,1LLU),_1a9930e4c_Range16(43867LLU,43882LLU,15LLU),_1a9930e4c_Range16(43883LLU,64434LLU,20551LLU),_1a9930e4c_Range16(64435LLU,64450LLU,1LLU),_1a9930e4c_Range16(65342LLU,65344LLU,2LLU),_1a9930e4c_Range16(65507LLU,65507LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(127995LLU,127999LLU,1LLU)}),3LL));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__SM = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(43LLU,60LLU,17LLU),_1a9930e4c_Range16(61LLU,62LLU,1LLU),_1a9930e4c_Range16(124LLU,126LLU,2LLU),_1a9930e4c_Range16(172LLU,177LLU,5LLU),_1a9930e4c_Range16(215LLU,247LLU,32LLU),_1a9930e4c_Range16(1014LLU,1542LLU,528LLU),_1a9930e4c_Range16(1543LLU,1544LLU,1LLU),_1a9930e4c_Range16(8260LLU,8274LLU,14LLU),_1a9930e4c_Range16(8314LLU,8316LLU,1LLU),_1a9930e4c_Range16(8330LLU,8332LLU,1LLU),_1a9930e4c_Range16(8472LLU,8512LLU,40LLU),_1a9930e4c_Range16(8513LLU,8516LLU,1LLU),_1a9930e4c_Range16(8523LLU,8592LLU,69LLU),_1a9930e4c_Range16(8593LLU,8596LLU,1LLU),_1a9930e4c_Range16(8602LLU,8603LLU,1LLU),_1a9930e4c_Range16(8608LLU,8614LLU,3LLU),_1a9930e4c_Range16(8622LLU,8654LLU,32LLU),_1a9930e4c_Range16(8655LLU,8658LLU,3LLU),_1a9930e4c_Range16(8660LLU,8692LLU,32LLU),_1a9930e4c_Range16(8693LLU,8959LLU,1LLU),_1a9930e4c_Range16(8992LLU,8993LLU,1LLU),_1a9930e4c_Range16(9084LLU,9115LLU,31LLU),_1a9930e4c_Range16(9116LLU,9139LLU,1LLU),_1a9930e4c_Range16(9180LLU,9185LLU,1LLU),_1a9930e4c_Range16(9655LLU,9665LLU,10LLU),_1a9930e4c_Range16(9720LLU,9727LLU,1LLU),_1a9930e4c_Range16(9839LLU,10176LLU,337LLU),_1a9930e4c_Range16(10177LLU,10180LLU,1LLU),_1a9930e4c_Range16(10183LLU,10213LLU,1LLU),_1a9930e4c_Range16(10224LLU,10239LLU,1LLU),_1a9930e4c_Range16(10496LLU,10626LLU,1LLU),_1a9930e4c_Range16(10649LLU,10711LLU,1LLU),_1a9930e4c_Range16(10716LLU,10747LLU,1LLU),_1a9930e4c_Range16(10750LLU,11007LLU,1LLU),_1a9930e4c_Range16(11056LLU,11076LLU,1LLU),_1a9930e4c_Range16(11079LLU,11084LLU,1LLU),_1a9930e4c_Range16(64297LLU,65122LLU,825LLU),_1a9930e4c_Range16(65124LLU,65126LLU,1LLU),_1a9930e4c_Range16(65291LLU,65308LLU,17LLU),_1a9930e4c_Range16(65309LLU,65310LLU,1LLU),_1a9930e4c_Range16(65372LLU,65374LLU,2LLU),_1a9930e4c_Range16(65506LLU,65513LLU,7LLU),_1a9930e4c_Range16(65514LLU,65516LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(120513LLU,120539LLU,26LLU),_1a9930e4c_Range32(120571LLU,120597LLU,26LLU),_1a9930e4c_Range32(120629LLU,120655LLU,26LLU),_1a9930e4c_Range32(120687LLU,120713LLU,26LLU),_1a9930e4c_Range32(120745LLU,120771LLU,26LLU),_1a9930e4c_Range32(126704LLU,126705LLU,1LLU)}),5LL));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__SO = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(166LLU,169LLU,3LLU),_1a9930e4c_Range16(174LLU,176LLU,2LLU),_1a9930e4c_Range16(1154LLU,1421LLU,267LLU),_1a9930e4c_Range16(1422LLU,1550LLU,128LLU),_1a9930e4c_Range16(1551LLU,1758LLU,207LLU),_1a9930e4c_Range16(1769LLU,1789LLU,20LLU),_1a9930e4c_Range16(1790LLU,2038LLU,248LLU),_1a9930e4c_Range16(2554LLU,2928LLU,374LLU),_1a9930e4c_Range16(3059LLU,3064LLU,1LLU),_1a9930e4c_Range16(3066LLU,3199LLU,133LLU),_1a9930e4c_Range16(3407LLU,3449LLU,42LLU),_1a9930e4c_Range16(3841LLU,3843LLU,1LLU),_1a9930e4c_Range16(3859LLU,3861LLU,2LLU),_1a9930e4c_Range16(3862LLU,3863LLU,1LLU),_1a9930e4c_Range16(3866LLU,3871LLU,1LLU),_1a9930e4c_Range16(3892LLU,3896LLU,2LLU),_1a9930e4c_Range16(4030LLU,4037LLU,1LLU),_1a9930e4c_Range16(4039LLU,4044LLU,1LLU),_1a9930e4c_Range16(4046LLU,4047LLU,1LLU),_1a9930e4c_Range16(4053LLU,4056LLU,1LLU),_1a9930e4c_Range16(4254LLU,4255LLU,1LLU),_1a9930e4c_Range16(5008LLU,5017LLU,1LLU),_1a9930e4c_Range16(5741LLU,6464LLU,723LLU),_1a9930e4c_Range16(6622LLU,6655LLU,1LLU),_1a9930e4c_Range16(7009LLU,7018LLU,1LLU),_1a9930e4c_Range16(7028LLU,7036LLU,1LLU),_1a9930e4c_Range16(8448LLU,8449LLU,1LLU),_1a9930e4c_Range16(8451LLU,8454LLU,1LLU),_1a9930e4c_Range16(8456LLU,8457LLU,1LLU),_1a9930e4c_Range16(8468LLU,8470LLU,2LLU),_1a9930e4c_Range16(8471LLU,8478LLU,7LLU),_1a9930e4c_Range16(8479LLU,8483LLU,1LLU),_1a9930e4c_Range16(8485LLU,8489LLU,2LLU),_1a9930e4c_Range16(8494LLU,8506LLU,12LLU),_1a9930e4c_Range16(8507LLU,8522LLU,15LLU),_1a9930e4c_Range16(8524LLU,8525LLU,1LLU),_1a9930e4c_Range16(8527LLU,8586LLU,59LLU),_1a9930e4c_Range16(8587LLU,8597LLU,10LLU),_1a9930e4c_Range16(8598LLU,8601LLU,1LLU),_1a9930e4c_Range16(8604LLU,8607LLU,1LLU),_1a9930e4c_Range16(8609LLU,8610LLU,1LLU),_1a9930e4c_Range16(8612LLU,8613LLU,1LLU),_1a9930e4c_Range16(8615LLU,8621LLU,1LLU),_1a9930e4c_Range16(8623LLU,8653LLU,1LLU),_1a9930e4c_Range16(8656LLU,8657LLU,1LLU),_1a9930e4c_Range16(8659LLU,8661LLU,2LLU),_1a9930e4c_Range16(8662LLU,8691LLU,1LLU),_1a9930e4c_Range16(8960LLU,8967LLU,1LLU),_1a9930e4c_Range16(8972LLU,8991LLU,1LLU),_1a9930e4c_Range16(8994LLU,9000LLU,1LLU),_1a9930e4c_Range16(9003LLU,9083LLU,1LLU),_1a9930e4c_Range16(9085LLU,9114LLU,1LLU),_1a9930e4c_Range16(9140LLU,9179LLU,1LLU),_1a9930e4c_Range16(9186LLU,9254LLU,1LLU),_1a9930e4c_Range16(9280LLU,9290LLU,1LLU),_1a9930e4c_Range16(9372LLU,9449LLU,1LLU),_1a9930e4c_Range16(9472LLU,9654LLU,1LLU),_1a9930e4c_Range16(9656LLU,9664LLU,1LLU),_1a9930e4c_Range16(9666LLU,9719LLU,1LLU),_1a9930e4c_Range16(9728LLU,9838LLU,1LLU),_1a9930e4c_Range16(9840LLU,10087LLU,1LLU),_1a9930e4c_Range16(10132LLU,10175LLU,1LLU),_1a9930e4c_Range16(10240LLU,10495LLU,1LLU),_1a9930e4c_Range16(11008LLU,11055LLU,1LLU),_1a9930e4c_Range16(11077LLU,11078LLU,1LLU),_1a9930e4c_Range16(11085LLU,11123LLU,1LLU),_1a9930e4c_Range16(11126LLU,11157LLU,1LLU),_1a9930e4c_Range16(11159LLU,11263LLU,1LLU),_1a9930e4c_Range16(11493LLU,11498LLU,1LLU),_1a9930e4c_Range16(11856LLU,11857LLU,1LLU),_1a9930e4c_Range16(11904LLU,11929LLU,1LLU),_1a9930e4c_Range16(11931LLU,12019LLU,1LLU),_1a9930e4c_Range16(12032LLU,12245LLU,1LLU),_1a9930e4c_Range16(12272LLU,12283LLU,1LLU),_1a9930e4c_Range16(12292LLU,12306LLU,14LLU),_1a9930e4c_Range16(12307LLU,12320LLU,13LLU),_1a9930e4c_Range16(12342LLU,12343LLU,1LLU),_1a9930e4c_Range16(12350LLU,12351LLU,1LLU),_1a9930e4c_Range16(12688LLU,12689LLU,1LLU),_1a9930e4c_Range16(12694LLU,12703LLU,1LLU),_1a9930e4c_Range16(12736LLU,12771LLU,1LLU),_1a9930e4c_Range16(12800LLU,12830LLU,1LLU),_1a9930e4c_Range16(12842LLU,12871LLU,1LLU),_1a9930e4c_Range16(12880LLU,12896LLU,16LLU),_1a9930e4c_Range16(12897LLU,12927LLU,1LLU),_1a9930e4c_Range16(12938LLU,12976LLU,1LLU),_1a9930e4c_Range16(12992LLU,13311LLU,1LLU),_1a9930e4c_Range16(19904LLU,19967LLU,1LLU),_1a9930e4c_Range16(42128LLU,42182LLU,1LLU),_1a9930e4c_Range16(43048LLU,43051LLU,1LLU),_1a9930e4c_Range16(43062LLU,43063LLU,1LLU),_1a9930e4c_Range16(43065LLU,43639LLU,574LLU),_1a9930e4c_Range16(43640LLU,43641LLU,1LLU),_1a9930e4c_Range16(64832LLU,64847LLU,1LLU),_1a9930e4c_Range16(64975LLU,65021LLU,46LLU),_1a9930e4c_Range16(65022LLU,65023LLU,1LLU),_1a9930e4c_Range16(65508LLU,65512LLU,4LLU),_1a9930e4c_Range16(65517LLU,65518LLU,1LLU),_1a9930e4c_Range16(65532LLU,65533LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(65847LLU,65855LLU,1LLU),_1a9930e4c_Range32(65913LLU,65929LLU,1LLU),_1a9930e4c_Range32(65932LLU,65934LLU,1LLU),_1a9930e4c_Range32(65936LLU,65948LLU,1LLU),_1a9930e4c_Range32(65952LLU,66000LLU,48LLU),_1a9930e4c_Range32(66001LLU,66044LLU,1LLU),_1a9930e4c_Range32(67703LLU,67704LLU,1LLU),_1a9930e4c_Range32(68296LLU,71487LLU,3191LLU),_1a9930e4c_Range32(73685LLU,73692LLU,1LLU),_1a9930e4c_Range32(73697LLU,73713LLU,1LLU),_1a9930e4c_Range32(92988LLU,92991LLU,1LLU),_1a9930e4c_Range32(92997LLU,113820LLU,20823LLU),_1a9930e4c_Range32(118608LLU,118723LLU,1LLU),_1a9930e4c_Range32(118784LLU,119029LLU,1LLU),_1a9930e4c_Range32(119040LLU,119078LLU,1LLU),_1a9930e4c_Range32(119081LLU,119140LLU,1LLU),_1a9930e4c_Range32(119146LLU,119148LLU,1LLU),_1a9930e4c_Range32(119171LLU,119172LLU,1LLU),_1a9930e4c_Range32(119180LLU,119209LLU,1LLU),_1a9930e4c_Range32(119214LLU,119274LLU,1LLU),_1a9930e4c_Range32(119296LLU,119361LLU,1LLU),_1a9930e4c_Range32(119365LLU,119552LLU,187LLU),_1a9930e4c_Range32(119553LLU,119638LLU,1LLU),_1a9930e4c_Range32(120832LLU,121343LLU,1LLU),_1a9930e4c_Range32(121399LLU,121402LLU,1LLU),_1a9930e4c_Range32(121453LLU,121460LLU,1LLU),_1a9930e4c_Range32(121462LLU,121475LLU,1LLU),_1a9930e4c_Range32(121477LLU,121478LLU,1LLU),_1a9930e4c_Range32(123215LLU,126124LLU,2909LLU),_1a9930e4c_Range32(126254LLU,126976LLU,722LLU),_1a9930e4c_Range32(126977LLU,127019LLU,1LLU),_1a9930e4c_Range32(127024LLU,127123LLU,1LLU),_1a9930e4c_Range32(127136LLU,127150LLU,1LLU),_1a9930e4c_Range32(127153LLU,127167LLU,1LLU),_1a9930e4c_Range32(127169LLU,127183LLU,1LLU),_1a9930e4c_Range32(127185LLU,127221LLU,1LLU),_1a9930e4c_Range32(127245LLU,127405LLU,1LLU),_1a9930e4c_Range32(127462LLU,127490LLU,1LLU),_1a9930e4c_Range32(127504LLU,127547LLU,1LLU),_1a9930e4c_Range32(127552LLU,127560LLU,1LLU),_1a9930e4c_Range32(127568LLU,127569LLU,1LLU),_1a9930e4c_Range32(127584LLU,127589LLU,1LLU),_1a9930e4c_Range32(127744LLU,127994LLU,1LLU),_1a9930e4c_Range32(128000LLU,128727LLU,1LLU),_1a9930e4c_Range32(128732LLU,128748LLU,1LLU),_1a9930e4c_Range32(128752LLU,128764LLU,1LLU),_1a9930e4c_Range32(128768LLU,128886LLU,1LLU),_1a9930e4c_Range32(128891LLU,128985LLU,1LLU),_1a9930e4c_Range32(128992LLU,129003LLU,1LLU),_1a9930e4c_Range32(129008LLU,129024LLU,16LLU),_1a9930e4c_Range32(129025LLU,129035LLU,1LLU),_1a9930e4c_Range32(129040LLU,129095LLU,1LLU),_1a9930e4c_Range32(129104LLU,129113LLU,1LLU),_1a9930e4c_Range32(129120LLU,129159LLU,1LLU),_1a9930e4c_Range32(129168LLU,129197LLU,1LLU),_1a9930e4c_Range32(129200LLU,129201LLU,1LLU),_1a9930e4c_Range32(129280LLU,129619LLU,1LLU),_1a9930e4c_Range32(129632LLU,129645LLU,1LLU),_1a9930e4c_Range32(129648LLU,129660LLU,1LLU),_1a9930e4c_Range32(129664LLU,129672LLU,1LLU),_1a9930e4c_Range32(129680LLU,129725LLU,1LLU),_1a9930e4c_Range32(129727LLU,129733LLU,1LLU),_1a9930e4c_Range32(129742LLU,129755LLU,1LLU),_1a9930e4c_Range32(129760LLU,129768LLU,1LLU),_1a9930e4c_Range32(129776LLU,129784LLU,1LLU),_1a9930e4c_Range32(129792LLU,129938LLU,1LLU),_1a9930e4c_Range32(129940LLU,129994LLU,1LLU)}),2LL));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__Z = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(32LLU,160LLU,128LLU),_1a9930e4c_Range16(5760LLU,8192LLU,2432LLU),_1a9930e4c_Range16(8193LLU,8202LLU,1LLU),_1a9930e4c_Range16(8232LLU,8233LLU,1LLU),_1a9930e4c_Range16(8239LLU,8287LLU,48LLU),_1a9930e4c_Range16(12288LLU,12288LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),1LL));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__ZL = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(8232LLU,8232LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__ZP = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(8233LLU,8233LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__ZS = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(32LLU,160LLU,128LLU),_1a9930e4c_Range16(5760LLU,8192LLU,2432LLU),_1a9930e4c_Range16(8193LLU,8202LLU,1LLU),_1a9930e4c_Range16(8239LLU,8287LLU,48LLU),_1a9930e4c_Range16(12288LLU,12288LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),1LL));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__ADLAM = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(125184LLU,125259LLU,1LLU),_1a9930e4c_Range32(125264LLU,125273LLU,1LLU),_1a9930e4c_Range32(125278LLU,125279LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__AHOM = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(71424LLU,71450LLU,1LLU),_1a9930e4c_Range32(71453LLU,71467LLU,1LLU),_1a9930e4c_Range32(71472LLU,71494LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__ANATOLIAN_HIEROGLYPHS = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(82944LLU,83526LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__ARABIC = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(1536LLU,1540LLU,1LLU),_1a9930e4c_Range16(1542LLU,1547LLU,1LLU),_1a9930e4c_Range16(1549LLU,1562LLU,1LLU),_1a9930e4c_Range16(1564LLU,1566LLU,1LLU),_1a9930e4c_Range16(1568LLU,1599LLU,1LLU),_1a9930e4c_Range16(1601LLU,1610LLU,1LLU),_1a9930e4c_Range16(1622LLU,1647LLU,1LLU),_1a9930e4c_Range16(1649LLU,1756LLU,1LLU),_1a9930e4c_Range16(1758LLU,1791LLU,1LLU),_1a9930e4c_Range16(1872LLU,1919LLU,1LLU),_1a9930e4c_Range16(2160LLU,2190LLU,1LLU),_1a9930e4c_Range16(2192LLU,2193LLU,1LLU),_1a9930e4c_Range16(2200LLU,2273LLU,1LLU),_1a9930e4c_Range16(2275LLU,2303LLU,1LLU),_1a9930e4c_Range16(64336LLU,64450LLU,1LLU),_1a9930e4c_Range16(64467LLU,64829LLU,1LLU),_1a9930e4c_Range16(64832LLU,64911LLU,1LLU),_1a9930e4c_Range16(64914LLU,64967LLU,1LLU),_1a9930e4c_Range16(64975LLU,65008LLU,33LLU),_1a9930e4c_Range16(65009LLU,65023LLU,1LLU),_1a9930e4c_Range16(65136LLU,65140LLU,1LLU),_1a9930e4c_Range16(65142LLU,65276LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(69216LLU,69246LLU,1LLU),_1a9930e4c_Range32(69373LLU,69375LLU,1LLU),_1a9930e4c_Range32(126464LLU,126467LLU,1LLU),_1a9930e4c_Range32(126469LLU,126495LLU,1LLU),_1a9930e4c_Range32(126497LLU,126498LLU,1LLU),_1a9930e4c_Range32(126500LLU,126503LLU,3LLU),_1a9930e4c_Range32(126505LLU,126514LLU,1LLU),_1a9930e4c_Range32(126516LLU,126519LLU,1LLU),_1a9930e4c_Range32(126521LLU,126523LLU,2LLU),_1a9930e4c_Range32(126530LLU,126535LLU,5LLU),_1a9930e4c_Range32(126537LLU,126541LLU,2LLU),_1a9930e4c_Range32(126542LLU,126543LLU,1LLU),_1a9930e4c_Range32(126545LLU,126546LLU,1LLU),_1a9930e4c_Range32(126548LLU,126551LLU,3LLU),_1a9930e4c_Range32(126553LLU,126561LLU,2LLU),_1a9930e4c_Range32(126562LLU,126564LLU,2LLU),_1a9930e4c_Range32(126567LLU,126570LLU,1LLU),_1a9930e4c_Range32(126572LLU,126578LLU,1LLU),_1a9930e4c_Range32(126580LLU,126583LLU,1LLU),_1a9930e4c_Range32(126585LLU,126588LLU,1LLU),_1a9930e4c_Range32(126590LLU,126592LLU,2LLU),_1a9930e4c_Range32(126593LLU,126601LLU,1LLU),_1a9930e4c_Range32(126603LLU,126619LLU,1LLU),_1a9930e4c_Range32(126625LLU,126627LLU,1LLU),_1a9930e4c_Range32(126629LLU,126633LLU,1LLU),_1a9930e4c_Range32(126635LLU,126651LLU,1LLU),_1a9930e4c_Range32(126704LLU,126705LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__ARMENIAN = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(1329LLU,1366LLU,1LLU),_1a9930e4c_Range16(1369LLU,1418LLU,1LLU),_1a9930e4c_Range16(1421LLU,1423LLU,1LLU),_1a9930e4c_Range16(64275LLU,64279LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__AVESTAN = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(68352LLU,68405LLU,1LLU),_1a9930e4c_Range32(68409LLU,68415LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__BALINESE = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(6912LLU,6988LLU,1LLU),_1a9930e4c_Range16(6992LLU,7038LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__BAMUM = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(42656LLU,42743LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(92160LLU,92728LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__BASSA_VAH = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(92880LLU,92909LLU,1LLU),_1a9930e4c_Range32(92912LLU,92917LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__BATAK = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(7104LLU,7155LLU,1LLU),_1a9930e4c_Range16(7164LLU,7167LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__BENGALI = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(2432LLU,2435LLU,1LLU),_1a9930e4c_Range16(2437LLU,2444LLU,1LLU),_1a9930e4c_Range16(2447LLU,2448LLU,1LLU),_1a9930e4c_Range16(2451LLU,2472LLU,1LLU),_1a9930e4c_Range16(2474LLU,2480LLU,1LLU),_1a9930e4c_Range16(2482LLU,2486LLU,4LLU),_1a9930e4c_Range16(2487LLU,2489LLU,1LLU),_1a9930e4c_Range16(2492LLU,2500LLU,1LLU),_1a9930e4c_Range16(2503LLU,2504LLU,1LLU),_1a9930e4c_Range16(2507LLU,2510LLU,1LLU),_1a9930e4c_Range16(2519LLU,2524LLU,5LLU),_1a9930e4c_Range16(2525LLU,2527LLU,2LLU),_1a9930e4c_Range16(2528LLU,2531LLU,1LLU),_1a9930e4c_Range16(2534LLU,2558LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__BHAIKSUKI = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(72704LLU,72712LLU,1LLU),_1a9930e4c_Range32(72714LLU,72758LLU,1LLU),_1a9930e4c_Range32(72760LLU,72773LLU,1LLU),_1a9930e4c_Range32(72784LLU,72812LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__BOPOMOFO = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(746LLU,747LLU,1LLU),_1a9930e4c_Range16(12549LLU,12591LLU,1LLU),_1a9930e4c_Range16(12704LLU,12735LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__BRAHMI = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(69632LLU,69709LLU,1LLU),_1a9930e4c_Range32(69714LLU,69749LLU,1LLU),_1a9930e4c_Range32(69759LLU,69759LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__BRAILLE = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(10240LLU,10495LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__BUGINESE = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(6656LLU,6683LLU,1LLU),_1a9930e4c_Range16(6686LLU,6687LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__BUHID = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(5952LLU,5971LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__CANADIAN_ABORIGINAL = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(5120LLU,5759LLU,1LLU),_1a9930e4c_Range16(6320LLU,6389LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(72368LLU,72383LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__CARIAN = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(66208LLU,66256LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__CAUCASIAN_ALBANIAN = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(66864LLU,66915LLU,1LLU),_1a9930e4c_Range32(66927LLU,66927LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__CHAKMA = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(69888LLU,69940LLU,1LLU),_1a9930e4c_Range32(69942LLU,69959LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__CHAM = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(43520LLU,43574LLU,1LLU),_1a9930e4c_Range16(43584LLU,43597LLU,1LLU),_1a9930e4c_Range16(43600LLU,43609LLU,1LLU),_1a9930e4c_Range16(43612LLU,43615LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__CHEROKEE = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(5024LLU,5109LLU,1LLU),_1a9930e4c_Range16(5112LLU,5117LLU,1LLU),_1a9930e4c_Range16(43888LLU,43967LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__CHORASMIAN = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(69552LLU,69579LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__COMMON = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(0LLU,64LLU,1LLU),_1a9930e4c_Range16(91LLU,96LLU,1LLU),_1a9930e4c_Range16(123LLU,169LLU,1LLU),_1a9930e4c_Range16(171LLU,185LLU,1LLU),_1a9930e4c_Range16(187LLU,191LLU,1LLU),_1a9930e4c_Range16(215LLU,247LLU,32LLU),_1a9930e4c_Range16(697LLU,735LLU,1LLU),_1a9930e4c_Range16(741LLU,745LLU,1LLU),_1a9930e4c_Range16(748LLU,767LLU,1LLU),_1a9930e4c_Range16(884LLU,894LLU,10LLU),_1a9930e4c_Range16(901LLU,903LLU,2LLU),_1a9930e4c_Range16(1541LLU,1548LLU,7LLU),_1a9930e4c_Range16(1563LLU,1567LLU,4LLU),_1a9930e4c_Range16(1600LLU,1757LLU,157LLU),_1a9930e4c_Range16(2274LLU,2404LLU,130LLU),_1a9930e4c_Range16(2405LLU,3647LLU,1242LLU),_1a9930e4c_Range16(4053LLU,4056LLU,1LLU),_1a9930e4c_Range16(4347LLU,5867LLU,1520LLU),_1a9930e4c_Range16(5868LLU,5869LLU,1LLU),_1a9930e4c_Range16(5941LLU,5942LLU,1LLU),_1a9930e4c_Range16(6146LLU,6147LLU,1LLU),_1a9930e4c_Range16(6149LLU,7379LLU,1230LLU),_1a9930e4c_Range16(7393LLU,7401LLU,8LLU),_1a9930e4c_Range16(7402LLU,7404LLU,1LLU),_1a9930e4c_Range16(7406LLU,7411LLU,1LLU),_1a9930e4c_Range16(7413LLU,7415LLU,1LLU),_1a9930e4c_Range16(7418LLU,8192LLU,774LLU),_1a9930e4c_Range16(8193LLU,8203LLU,1LLU),_1a9930e4c_Range16(8206LLU,8292LLU,1LLU),_1a9930e4c_Range16(8294LLU,8304LLU,1LLU),_1a9930e4c_Range16(8308LLU,8318LLU,1LLU),_1a9930e4c_Range16(8320LLU,8334LLU,1LLU),_1a9930e4c_Range16(8352LLU,8384LLU,1LLU),_1a9930e4c_Range16(8448LLU,8485LLU,1LLU),_1a9930e4c_Range16(8487LLU,8489LLU,1LLU),_1a9930e4c_Range16(8492LLU,8497LLU,1LLU),_1a9930e4c_Range16(8499LLU,8525LLU,1LLU),_1a9930e4c_Range16(8527LLU,8543LLU,1LLU),_1a9930e4c_Range16(8585LLU,8587LLU,1LLU),_1a9930e4c_Range16(8592LLU,9254LLU,1LLU),_1a9930e4c_Range16(9280LLU,9290LLU,1LLU),_1a9930e4c_Range16(9312LLU,10239LLU,1LLU),_1a9930e4c_Range16(10496LLU,11123LLU,1LLU),_1a9930e4c_Range16(11126LLU,11157LLU,1LLU),_1a9930e4c_Range16(11159LLU,11263LLU,1LLU),_1a9930e4c_Range16(11776LLU,11869LLU,1LLU),_1a9930e4c_Range16(12272LLU,12283LLU,1LLU),_1a9930e4c_Range16(12288LLU,12292LLU,1LLU),_1a9930e4c_Range16(12294LLU,12296LLU,2LLU),_1a9930e4c_Range16(12297LLU,12320LLU,1LLU),_1a9930e4c_Range16(12336LLU,12343LLU,1LLU),_1a9930e4c_Range16(12348LLU,12351LLU,1LLU),_1a9930e4c_Range16(12443LLU,12444LLU,1LLU),_1a9930e4c_Range16(12448LLU,12539LLU,91LLU),_1a9930e4c_Range16(12540LLU,12688LLU,148LLU),_1a9930e4c_Range16(12689LLU,12703LLU,1LLU),_1a9930e4c_Range16(12736LLU,12771LLU,1LLU),_1a9930e4c_Range16(12832LLU,12895LLU,1LLU),_1a9930e4c_Range16(12927LLU,13007LLU,1LLU),_1a9930e4c_Range16(13055LLU,13144LLU,89LLU),_1a9930e4c_Range16(13145LLU,13311LLU,1LLU),_1a9930e4c_Range16(19904LLU,19967LLU,1LLU),_1a9930e4c_Range16(42752LLU,42785LLU,1LLU),_1a9930e4c_Range16(42888LLU,42890LLU,1LLU),_1a9930e4c_Range16(43056LLU,43065LLU,1LLU),_1a9930e4c_Range16(43310LLU,43471LLU,161LLU),_1a9930e4c_Range16(43867LLU,43882LLU,15LLU),_1a9930e4c_Range16(43883LLU,64830LLU,20947LLU),_1a9930e4c_Range16(64831LLU,65040LLU,209LLU),_1a9930e4c_Range16(65041LLU,65049LLU,1LLU),_1a9930e4c_Range16(65072LLU,65106LLU,1LLU),_1a9930e4c_Range16(65108LLU,65126LLU,1LLU),_1a9930e4c_Range16(65128LLU,65131LLU,1LLU),_1a9930e4c_Range16(65279LLU,65281LLU,2LLU),_1a9930e4c_Range16(65282LLU,65312LLU,1LLU),_1a9930e4c_Range16(65339LLU,65344LLU,1LLU),_1a9930e4c_Range16(65371LLU,65381LLU,1LLU),_1a9930e4c_Range16(65392LLU,65438LLU,46LLU),_1a9930e4c_Range16(65439LLU,65504LLU,65LLU),_1a9930e4c_Range16(65505LLU,65510LLU,1LLU),_1a9930e4c_Range16(65512LLU,65518LLU,1LLU),_1a9930e4c_Range16(65529LLU,65533LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(65792LLU,65794LLU,1LLU),_1a9930e4c_Range32(65799LLU,65843LLU,1LLU),_1a9930e4c_Range32(65847LLU,65855LLU,1LLU),_1a9930e4c_Range32(65936LLU,65948LLU,1LLU),_1a9930e4c_Range32(66000LLU,66044LLU,1LLU),_1a9930e4c_Range32(66273LLU,66299LLU,1LLU),_1a9930e4c_Range32(113824LLU,113827LLU,1LLU),_1a9930e4c_Range32(118608LLU,118723LLU,1LLU),_1a9930e4c_Range32(118784LLU,119029LLU,1LLU),_1a9930e4c_Range32(119040LLU,119078LLU,1LLU),_1a9930e4c_Range32(119081LLU,119142LLU,1LLU),_1a9930e4c_Range32(119146LLU,119162LLU,1LLU),_1a9930e4c_Range32(119171LLU,119172LLU,1LLU),_1a9930e4c_Range32(119180LLU,119209LLU,1LLU),_1a9930e4c_Range32(119214LLU,119274LLU,1LLU),_1a9930e4c_Range32(119488LLU,119507LLU,1LLU),_1a9930e4c_Range32(119520LLU,119539LLU,1LLU),_1a9930e4c_Range32(119552LLU,119638LLU,1LLU),_1a9930e4c_Range32(119648LLU,119672LLU,1LLU),_1a9930e4c_Range32(119808LLU,119892LLU,1LLU),_1a9930e4c_Range32(119894LLU,119964LLU,1LLU),_1a9930e4c_Range32(119966LLU,119967LLU,1LLU),_1a9930e4c_Range32(119970LLU,119973LLU,3LLU),_1a9930e4c_Range32(119974LLU,119977LLU,3LLU),_1a9930e4c_Range32(119978LLU,119980LLU,1LLU),_1a9930e4c_Range32(119982LLU,119993LLU,1LLU),_1a9930e4c_Range32(119995LLU,119997LLU,2LLU),_1a9930e4c_Range32(119998LLU,120003LLU,1LLU),_1a9930e4c_Range32(120005LLU,120069LLU,1LLU),_1a9930e4c_Range32(120071LLU,120074LLU,1LLU),_1a9930e4c_Range32(120077LLU,120084LLU,1LLU),_1a9930e4c_Range32(120086LLU,120092LLU,1LLU),_1a9930e4c_Range32(120094LLU,120121LLU,1LLU),_1a9930e4c_Range32(120123LLU,120126LLU,1LLU),_1a9930e4c_Range32(120128LLU,120132LLU,1LLU),_1a9930e4c_Range32(120134LLU,120138LLU,4LLU),_1a9930e4c_Range32(120139LLU,120144LLU,1LLU),_1a9930e4c_Range32(120146LLU,120485LLU,1LLU),_1a9930e4c_Range32(120488LLU,120779LLU,1LLU),_1a9930e4c_Range32(120782LLU,120831LLU,1LLU),_1a9930e4c_Range32(126065LLU,126132LLU,1LLU),_1a9930e4c_Range32(126209LLU,126269LLU,1LLU),_1a9930e4c_Range32(126976LLU,127019LLU,1LLU),_1a9930e4c_Range32(127024LLU,127123LLU,1LLU),_1a9930e4c_Range32(127136LLU,127150LLU,1LLU),_1a9930e4c_Range32(127153LLU,127167LLU,1LLU),_1a9930e4c_Range32(127169LLU,127183LLU,1LLU),_1a9930e4c_Range32(127185LLU,127221LLU,1LLU),_1a9930e4c_Range32(127232LLU,127405LLU,1LLU),_1a9930e4c_Range32(127462LLU,127487LLU,1LLU),_1a9930e4c_Range32(127489LLU,127490LLU,1LLU),_1a9930e4c_Range32(127504LLU,127547LLU,1LLU),_1a9930e4c_Range32(127552LLU,127560LLU,1LLU),_1a9930e4c_Range32(127568LLU,127569LLU,1LLU),_1a9930e4c_Range32(127584LLU,127589LLU,1LLU),_1a9930e4c_Range32(127744LLU,128727LLU,1LLU),_1a9930e4c_Range32(128732LLU,128748LLU,1LLU),_1a9930e4c_Range32(128752LLU,128764LLU,1LLU),_1a9930e4c_Range32(128768LLU,128886LLU,1LLU),_1a9930e4c_Range32(128891LLU,128985LLU,1LLU),_1a9930e4c_Range32(128992LLU,129003LLU,1LLU),_1a9930e4c_Range32(129008LLU,129024LLU,16LLU),_1a9930e4c_Range32(129025LLU,129035LLU,1LLU),_1a9930e4c_Range32(129040LLU,129095LLU,1LLU),_1a9930e4c_Range32(129104LLU,129113LLU,1LLU),_1a9930e4c_Range32(129120LLU,129159LLU,1LLU),_1a9930e4c_Range32(129168LLU,129197LLU,1LLU),_1a9930e4c_Range32(129200LLU,129201LLU,1LLU),_1a9930e4c_Range32(129280LLU,129619LLU,1LLU),_1a9930e4c_Range32(129632LLU,129645LLU,1LLU),_1a9930e4c_Range32(129648LLU,129660LLU,1LLU),_1a9930e4c_Range32(129664LLU,129672LLU,1LLU),_1a9930e4c_Range32(129680LLU,129725LLU,1LLU),_1a9930e4c_Range32(129727LLU,129733LLU,1LLU),_1a9930e4c_Range32(129742LLU,129755LLU,1LLU),_1a9930e4c_Range32(129760LLU,129768LLU,1LLU),_1a9930e4c_Range32(129776LLU,129784LLU,1LLU),_1a9930e4c_Range32(129792LLU,129938LLU,1LLU),_1a9930e4c_Range32(129940LLU,129994LLU,1LLU),_1a9930e4c_Range32(130032LLU,130041LLU,1LLU),_1a9930e4c_Range32(917505LLU,917536LLU,31LLU),_1a9930e4c_Range32(917537LLU,917631LLU,1LLU)}),6LL));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__COPTIC = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(994LLU,1007LLU,1LLU),_1a9930e4c_Range16(11392LLU,11507LLU,1LLU),_1a9930e4c_Range16(11513LLU,11519LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__CUNEIFORM = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(73728LLU,74649LLU,1LLU),_1a9930e4c_Range32(74752LLU,74862LLU,1LLU),_1a9930e4c_Range32(74864LLU,74868LLU,1LLU),_1a9930e4c_Range32(74880LLU,75075LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__CYPRIOT = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(67584LLU,67589LLU,1LLU),_1a9930e4c_Range32(67592LLU,67594LLU,2LLU),_1a9930e4c_Range32(67595LLU,67637LLU,1LLU),_1a9930e4c_Range32(67639LLU,67640LLU,1LLU),_1a9930e4c_Range32(67644LLU,67647LLU,3LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__CYPRO_MINOAN = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(77712LLU,77810LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__CYRILLIC = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(1024LLU,1156LLU,1LLU),_1a9930e4c_Range16(1159LLU,1327LLU,1LLU),_1a9930e4c_Range16(7296LLU,7304LLU,1LLU),_1a9930e4c_Range16(7467LLU,7544LLU,77LLU),_1a9930e4c_Range16(11744LLU,11775LLU,1LLU),_1a9930e4c_Range16(42560LLU,42655LLU,1LLU),_1a9930e4c_Range16(65070LLU,65071LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(122928LLU,122989LLU,1LLU),_1a9930e4c_Range32(123023LLU,123023LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__DESERET = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(66560LLU,66639LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__DEVANAGARI = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(2304LLU,2384LLU,1LLU),_1a9930e4c_Range16(2389LLU,2403LLU,1LLU),_1a9930e4c_Range16(2406LLU,2431LLU,1LLU),_1a9930e4c_Range16(43232LLU,43263LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(72448LLU,72457LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__DIVES_AKURU = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(71936LLU,71942LLU,1LLU),_1a9930e4c_Range32(71945LLU,71948LLU,3LLU),_1a9930e4c_Range32(71949LLU,71955LLU,1LLU),_1a9930e4c_Range32(71957LLU,71958LLU,1LLU),_1a9930e4c_Range32(71960LLU,71989LLU,1LLU),_1a9930e4c_Range32(71991LLU,71992LLU,1LLU),_1a9930e4c_Range32(71995LLU,72006LLU,1LLU),_1a9930e4c_Range32(72016LLU,72025LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__DOGRA = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(71680LLU,71739LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__DUPLOYAN = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(113664LLU,113770LLU,1LLU),_1a9930e4c_Range32(113776LLU,113788LLU,1LLU),_1a9930e4c_Range32(113792LLU,113800LLU,1LLU),_1a9930e4c_Range32(113808LLU,113817LLU,1LLU),_1a9930e4c_Range32(113820LLU,113823LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__EGYPTIAN_HIEROGLYPHS = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(77824LLU,78933LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__ELBASAN = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(66816LLU,66855LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__ELYMAIC = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(69600LLU,69622LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__ETHIOPIC = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(4608LLU,4680LLU,1LLU),_1a9930e4c_Range16(4682LLU,4685LLU,1LLU),_1a9930e4c_Range16(4688LLU,4694LLU,1LLU),_1a9930e4c_Range16(4696LLU,4698LLU,2LLU),_1a9930e4c_Range16(4699LLU,4701LLU,1LLU),_1a9930e4c_Range16(4704LLU,4744LLU,1LLU),_1a9930e4c_Range16(4746LLU,4749LLU,1LLU),_1a9930e4c_Range16(4752LLU,4784LLU,1LLU),_1a9930e4c_Range16(4786LLU,4789LLU,1LLU),_1a9930e4c_Range16(4792LLU,4798LLU,1LLU),_1a9930e4c_Range16(4800LLU,4802LLU,2LLU),_1a9930e4c_Range16(4803LLU,4805LLU,1LLU),_1a9930e4c_Range16(4808LLU,4822LLU,1LLU),_1a9930e4c_Range16(4824LLU,4880LLU,1LLU),_1a9930e4c_Range16(4882LLU,4885LLU,1LLU),_1a9930e4c_Range16(4888LLU,4954LLU,1LLU),_1a9930e4c_Range16(4957LLU,4988LLU,1LLU),_1a9930e4c_Range16(4992LLU,5017LLU,1LLU),_1a9930e4c_Range16(11648LLU,11670LLU,1LLU),_1a9930e4c_Range16(11680LLU,11686LLU,1LLU),_1a9930e4c_Range16(11688LLU,11694LLU,1LLU),_1a9930e4c_Range16(11696LLU,11702LLU,1LLU),_1a9930e4c_Range16(11704LLU,11710LLU,1LLU),_1a9930e4c_Range16(11712LLU,11718LLU,1LLU),_1a9930e4c_Range16(11720LLU,11726LLU,1LLU),_1a9930e4c_Range16(11728LLU,11734LLU,1LLU),_1a9930e4c_Range16(11736LLU,11742LLU,1LLU),_1a9930e4c_Range16(43777LLU,43782LLU,1LLU),_1a9930e4c_Range16(43785LLU,43790LLU,1LLU),_1a9930e4c_Range16(43793LLU,43798LLU,1LLU),_1a9930e4c_Range16(43808LLU,43814LLU,1LLU),_1a9930e4c_Range16(43816LLU,43822LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(124896LLU,124902LLU,1LLU),_1a9930e4c_Range32(124904LLU,124907LLU,1LLU),_1a9930e4c_Range32(124909LLU,124910LLU,1LLU),_1a9930e4c_Range32(124912LLU,124926LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__GEORGIAN = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(4256LLU,4293LLU,1LLU),_1a9930e4c_Range16(4295LLU,4301LLU,6LLU),_1a9930e4c_Range16(4304LLU,4346LLU,1LLU),_1a9930e4c_Range16(4348LLU,4351LLU,1LLU),_1a9930e4c_Range16(7312LLU,7354LLU,1LLU),_1a9930e4c_Range16(7357LLU,7359LLU,1LLU),_1a9930e4c_Range16(11520LLU,11557LLU,1LLU),_1a9930e4c_Range16(11559LLU,11565LLU,6LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__GLAGOLITIC = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(11264LLU,11359LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(122880LLU,122886LLU,1LLU),_1a9930e4c_Range32(122888LLU,122904LLU,1LLU),_1a9930e4c_Range32(122907LLU,122913LLU,1LLU),_1a9930e4c_Range32(122915LLU,122916LLU,1LLU),_1a9930e4c_Range32(122918LLU,122922LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__GOTHIC = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(66352LLU,66378LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__GRANTHA = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(70400LLU,70403LLU,1LLU),_1a9930e4c_Range32(70405LLU,70412LLU,1LLU),_1a9930e4c_Range32(70415LLU,70416LLU,1LLU),_1a9930e4c_Range32(70419LLU,70440LLU,1LLU),_1a9930e4c_Range32(70442LLU,70448LLU,1LLU),_1a9930e4c_Range32(70450LLU,70451LLU,1LLU),_1a9930e4c_Range32(70453LLU,70457LLU,1LLU),_1a9930e4c_Range32(70460LLU,70468LLU,1LLU),_1a9930e4c_Range32(70471LLU,70472LLU,1LLU),_1a9930e4c_Range32(70475LLU,70477LLU,1LLU),_1a9930e4c_Range32(70480LLU,70487LLU,7LLU),_1a9930e4c_Range32(70493LLU,70499LLU,1LLU),_1a9930e4c_Range32(70502LLU,70508LLU,1LLU),_1a9930e4c_Range32(70512LLU,70516LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__GREEK = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(880LLU,883LLU,1LLU),_1a9930e4c_Range16(885LLU,887LLU,1LLU),_1a9930e4c_Range16(890LLU,893LLU,1LLU),_1a9930e4c_Range16(895LLU,900LLU,5LLU),_1a9930e4c_Range16(902LLU,904LLU,2LLU),_1a9930e4c_Range16(905LLU,906LLU,1LLU),_1a9930e4c_Range16(908LLU,910LLU,2LLU),_1a9930e4c_Range16(911LLU,929LLU,1LLU),_1a9930e4c_Range16(931LLU,993LLU,1LLU),_1a9930e4c_Range16(1008LLU,1023LLU,1LLU),_1a9930e4c_Range16(7462LLU,7466LLU,1LLU),_1a9930e4c_Range16(7517LLU,7521LLU,1LLU),_1a9930e4c_Range16(7526LLU,7530LLU,1LLU),_1a9930e4c_Range16(7615LLU,7936LLU,321LLU),_1a9930e4c_Range16(7937LLU,7957LLU,1LLU),_1a9930e4c_Range16(7960LLU,7965LLU,1LLU),_1a9930e4c_Range16(7968LLU,8005LLU,1LLU),_1a9930e4c_Range16(8008LLU,8013LLU,1LLU),_1a9930e4c_Range16(8016LLU,8023LLU,1LLU),_1a9930e4c_Range16(8025LLU,8031LLU,2LLU),_1a9930e4c_Range16(8032LLU,8061LLU,1LLU),_1a9930e4c_Range16(8064LLU,8116LLU,1LLU),_1a9930e4c_Range16(8118LLU,8132LLU,1LLU),_1a9930e4c_Range16(8134LLU,8147LLU,1LLU),_1a9930e4c_Range16(8150LLU,8155LLU,1LLU),_1a9930e4c_Range16(8157LLU,8175LLU,1LLU),_1a9930e4c_Range16(8178LLU,8180LLU,1LLU),_1a9930e4c_Range16(8182LLU,8190LLU,1LLU),_1a9930e4c_Range16(8486LLU,43877LLU,35391LLU)}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(65856LLU,65934LLU,1LLU),_1a9930e4c_Range32(65952LLU,119296LLU,53344LLU),_1a9930e4c_Range32(119297LLU,119365LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__GUJARATI = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(2689LLU,2691LLU,1LLU),_1a9930e4c_Range16(2693LLU,2701LLU,1LLU),_1a9930e4c_Range16(2703LLU,2705LLU,1LLU),_1a9930e4c_Range16(2707LLU,2728LLU,1LLU),_1a9930e4c_Range16(2730LLU,2736LLU,1LLU),_1a9930e4c_Range16(2738LLU,2739LLU,1LLU),_1a9930e4c_Range16(2741LLU,2745LLU,1LLU),_1a9930e4c_Range16(2748LLU,2757LLU,1LLU),_1a9930e4c_Range16(2759LLU,2761LLU,1LLU),_1a9930e4c_Range16(2763LLU,2765LLU,1LLU),_1a9930e4c_Range16(2768LLU,2784LLU,16LLU),_1a9930e4c_Range16(2785LLU,2787LLU,1LLU),_1a9930e4c_Range16(2790LLU,2801LLU,1LLU),_1a9930e4c_Range16(2809LLU,2815LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__GUNJALA_GONDI = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(73056LLU,73061LLU,1LLU),_1a9930e4c_Range32(73063LLU,73064LLU,1LLU),_1a9930e4c_Range32(73066LLU,73102LLU,1LLU),_1a9930e4c_Range32(73104LLU,73105LLU,1LLU),_1a9930e4c_Range32(73107LLU,73112LLU,1LLU),_1a9930e4c_Range32(73120LLU,73129LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__GURMUKHI = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(2561LLU,2563LLU,1LLU),_1a9930e4c_Range16(2565LLU,2570LLU,1LLU),_1a9930e4c_Range16(2575LLU,2576LLU,1LLU),_1a9930e4c_Range16(2579LLU,2600LLU,1LLU),_1a9930e4c_Range16(2602LLU,2608LLU,1LLU),_1a9930e4c_Range16(2610LLU,2611LLU,1LLU),_1a9930e4c_Range16(2613LLU,2614LLU,1LLU),_1a9930e4c_Range16(2616LLU,2617LLU,1LLU),_1a9930e4c_Range16(2620LLU,2622LLU,2LLU),_1a9930e4c_Range16(2623LLU,2626LLU,1LLU),_1a9930e4c_Range16(2631LLU,2632LLU,1LLU),_1a9930e4c_Range16(2635LLU,2637LLU,1LLU),_1a9930e4c_Range16(2641LLU,2649LLU,8LLU),_1a9930e4c_Range16(2650LLU,2652LLU,1LLU),_1a9930e4c_Range16(2654LLU,2662LLU,8LLU),_1a9930e4c_Range16(2663LLU,2678LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__HAN = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(11904LLU,11929LLU,1LLU),_1a9930e4c_Range16(11931LLU,12019LLU,1LLU),_1a9930e4c_Range16(12032LLU,12245LLU,1LLU),_1a9930e4c_Range16(12293LLU,12295LLU,2LLU),_1a9930e4c_Range16(12321LLU,12329LLU,1LLU),_1a9930e4c_Range16(12344LLU,12347LLU,1LLU),_1a9930e4c_Range16(13312LLU,19903LLU,1LLU),_1a9930e4c_Range16(19968LLU,40959LLU,1LLU),_1a9930e4c_Range16(63744LLU,64109LLU,1LLU),_1a9930e4c_Range16(64112LLU,64217LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(94178LLU,94179LLU,1LLU),_1a9930e4c_Range32(94192LLU,94193LLU,1LLU),_1a9930e4c_Range32(131072LLU,173791LLU,1LLU),_1a9930e4c_Range32(173824LLU,177977LLU,1LLU),_1a9930e4c_Range32(177984LLU,178205LLU,1LLU),_1a9930e4c_Range32(178208LLU,183969LLU,1LLU),_1a9930e4c_Range32(183984LLU,191456LLU,1LLU),_1a9930e4c_Range32(194560LLU,195101LLU,1LLU),_1a9930e4c_Range32(196608LLU,201546LLU,1LLU),_1a9930e4c_Range32(201552LLU,205743LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__HANGUL = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(4352LLU,4607LLU,1LLU),_1a9930e4c_Range16(12334LLU,12335LLU,1LLU),_1a9930e4c_Range16(12593LLU,12686LLU,1LLU),_1a9930e4c_Range16(12800LLU,12830LLU,1LLU),_1a9930e4c_Range16(12896LLU,12926LLU,1LLU),_1a9930e4c_Range16(43360LLU,43388LLU,1LLU),_1a9930e4c_Range16(44032LLU,55203LLU,1LLU),_1a9930e4c_Range16(55216LLU,55238LLU,1LLU),_1a9930e4c_Range16(55243LLU,55291LLU,1LLU),_1a9930e4c_Range16(65440LLU,65470LLU,1LLU),_1a9930e4c_Range16(65474LLU,65479LLU,1LLU),_1a9930e4c_Range16(65482LLU,65487LLU,1LLU),_1a9930e4c_Range16(65490LLU,65495LLU,1LLU),_1a9930e4c_Range16(65498LLU,65500LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__HANIFI_ROHINGYA = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(68864LLU,68903LLU,1LLU),_1a9930e4c_Range32(68912LLU,68921LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__HANUNOO = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(5920LLU,5940LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__HATRAN = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(67808LLU,67826LLU,1LLU),_1a9930e4c_Range32(67828LLU,67829LLU,1LLU),_1a9930e4c_Range32(67835LLU,67839LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__HEBREW = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(1425LLU,1479LLU,1LLU),_1a9930e4c_Range16(1488LLU,1514LLU,1LLU),_1a9930e4c_Range16(1519LLU,1524LLU,1LLU),_1a9930e4c_Range16(64285LLU,64310LLU,1LLU),_1a9930e4c_Range16(64312LLU,64316LLU,1LLU),_1a9930e4c_Range16(64318LLU,64320LLU,2LLU),_1a9930e4c_Range16(64321LLU,64323LLU,2LLU),_1a9930e4c_Range16(64324LLU,64326LLU,2LLU),_1a9930e4c_Range16(64327LLU,64335LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__HIRAGANA = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(12353LLU,12438LLU,1LLU),_1a9930e4c_Range16(12445LLU,12447LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(110593LLU,110879LLU,1LLU),_1a9930e4c_Range32(110898LLU,110928LLU,30LLU),_1a9930e4c_Range32(110929LLU,110930LLU,1LLU),_1a9930e4c_Range32(127488LLU,127488LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__IMPERIAL_ARAMAIC = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(67648LLU,67669LLU,1LLU),_1a9930e4c_Range32(67671LLU,67679LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__INHERITED = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(768LLU,879LLU,1LLU),_1a9930e4c_Range16(1157LLU,1158LLU,1LLU),_1a9930e4c_Range16(1611LLU,1621LLU,1LLU),_1a9930e4c_Range16(1648LLU,2385LLU,737LLU),_1a9930e4c_Range16(2386LLU,2388LLU,1LLU),_1a9930e4c_Range16(6832LLU,6862LLU,1LLU),_1a9930e4c_Range16(7376LLU,7378LLU,1LLU),_1a9930e4c_Range16(7380LLU,7392LLU,1LLU),_1a9930e4c_Range16(7394LLU,7400LLU,1LLU),_1a9930e4c_Range16(7405LLU,7412LLU,7LLU),_1a9930e4c_Range16(7416LLU,7417LLU,1LLU),_1a9930e4c_Range16(7616LLU,7679LLU,1LLU),_1a9930e4c_Range16(8204LLU,8205LLU,1LLU),_1a9930e4c_Range16(8400LLU,8432LLU,1LLU),_1a9930e4c_Range16(12330LLU,12333LLU,1LLU),_1a9930e4c_Range16(12441LLU,12442LLU,1LLU),_1a9930e4c_Range16(65024LLU,65039LLU,1LLU),_1a9930e4c_Range16(65056LLU,65069LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(66045LLU,66272LLU,227LLU),_1a9930e4c_Range32(70459LLU,118528LLU,48069LLU),_1a9930e4c_Range32(118529LLU,118573LLU,1LLU),_1a9930e4c_Range32(118576LLU,118598LLU,1LLU),_1a9930e4c_Range32(119143LLU,119145LLU,1LLU),_1a9930e4c_Range32(119163LLU,119170LLU,1LLU),_1a9930e4c_Range32(119173LLU,119179LLU,1LLU),_1a9930e4c_Range32(119210LLU,119213LLU,1LLU),_1a9930e4c_Range32(917760LLU,917999LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__INSCRIPTIONAL_PAHLAVI = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(68448LLU,68466LLU,1LLU),_1a9930e4c_Range32(68472LLU,68479LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__INSCRIPTIONAL_PARTHIAN = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(68416LLU,68437LLU,1LLU),_1a9930e4c_Range32(68440LLU,68447LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__JAVANESE = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(43392LLU,43469LLU,1LLU),_1a9930e4c_Range16(43472LLU,43481LLU,1LLU),_1a9930e4c_Range16(43486LLU,43487LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__KAITHI = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(69760LLU,69826LLU,1LLU),_1a9930e4c_Range32(69837LLU,69837LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__KANNADA = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(3200LLU,3212LLU,1LLU),_1a9930e4c_Range16(3214LLU,3216LLU,1LLU),_1a9930e4c_Range16(3218LLU,3240LLU,1LLU),_1a9930e4c_Range16(3242LLU,3251LLU,1LLU),_1a9930e4c_Range16(3253LLU,3257LLU,1LLU),_1a9930e4c_Range16(3260LLU,3268LLU,1LLU),_1a9930e4c_Range16(3270LLU,3272LLU,1LLU),_1a9930e4c_Range16(3274LLU,3277LLU,1LLU),_1a9930e4c_Range16(3285LLU,3286LLU,1LLU),_1a9930e4c_Range16(3293LLU,3294LLU,1LLU),_1a9930e4c_Range16(3296LLU,3299LLU,1LLU),_1a9930e4c_Range16(3302LLU,3311LLU,1LLU),_1a9930e4c_Range16(3313LLU,3315LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__KATAKANA = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(12449LLU,12538LLU,1LLU),_1a9930e4c_Range16(12541LLU,12543LLU,1LLU),_1a9930e4c_Range16(12784LLU,12799LLU,1LLU),_1a9930e4c_Range16(13008LLU,13054LLU,1LLU),_1a9930e4c_Range16(13056LLU,13143LLU,1LLU),_1a9930e4c_Range16(65382LLU,65391LLU,1LLU),_1a9930e4c_Range16(65393LLU,65437LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(110576LLU,110579LLU,1LLU),_1a9930e4c_Range32(110581LLU,110587LLU,1LLU),_1a9930e4c_Range32(110589LLU,110590LLU,1LLU),_1a9930e4c_Range32(110592LLU,110880LLU,288LLU),_1a9930e4c_Range32(110881LLU,110882LLU,1LLU),_1a9930e4c_Range32(110933LLU,110948LLU,15LLU),_1a9930e4c_Range32(110949LLU,110951LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__KAWI = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(73472LLU,73488LLU,1LLU),_1a9930e4c_Range32(73490LLU,73530LLU,1LLU),_1a9930e4c_Range32(73534LLU,73561LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__KAYAH_LI = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(43264LLU,43309LLU,1LLU),_1a9930e4c_Range16(43311LLU,43311LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__KHAROSHTHI = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(68096LLU,68099LLU,1LLU),_1a9930e4c_Range32(68101LLU,68102LLU,1LLU),_1a9930e4c_Range32(68108LLU,68115LLU,1LLU),_1a9930e4c_Range32(68117LLU,68119LLU,1LLU),_1a9930e4c_Range32(68121LLU,68149LLU,1LLU),_1a9930e4c_Range32(68152LLU,68154LLU,1LLU),_1a9930e4c_Range32(68159LLU,68168LLU,1LLU),_1a9930e4c_Range32(68176LLU,68184LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__KHITAN_SMALL_SCRIPT = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(94180LLU,101120LLU,6940LLU),_1a9930e4c_Range32(101121LLU,101589LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__KHMER = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(6016LLU,6109LLU,1LLU),_1a9930e4c_Range16(6112LLU,6121LLU,1LLU),_1a9930e4c_Range16(6128LLU,6137LLU,1LLU),_1a9930e4c_Range16(6624LLU,6655LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__KHOJKI = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(70144LLU,70161LLU,1LLU),_1a9930e4c_Range32(70163LLU,70209LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__KHUDAWADI = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(70320LLU,70378LLU,1LLU),_1a9930e4c_Range32(70384LLU,70393LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__LAO = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(3713LLU,3714LLU,1LLU),_1a9930e4c_Range16(3716LLU,3718LLU,2LLU),_1a9930e4c_Range16(3719LLU,3722LLU,1LLU),_1a9930e4c_Range16(3724LLU,3747LLU,1LLU),_1a9930e4c_Range16(3749LLU,3751LLU,2LLU),_1a9930e4c_Range16(3752LLU,3773LLU,1LLU),_1a9930e4c_Range16(3776LLU,3780LLU,1LLU),_1a9930e4c_Range16(3782LLU,3784LLU,2LLU),_1a9930e4c_Range16(3785LLU,3790LLU,1LLU),_1a9930e4c_Range16(3792LLU,3801LLU,1LLU),_1a9930e4c_Range16(3804LLU,3807LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__LATIN = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(65LLU,90LLU,1LLU),_1a9930e4c_Range16(97LLU,122LLU,1LLU),_1a9930e4c_Range16(170LLU,186LLU,16LLU),_1a9930e4c_Range16(192LLU,214LLU,1LLU),_1a9930e4c_Range16(216LLU,246LLU,1LLU),_1a9930e4c_Range16(248LLU,696LLU,1LLU),_1a9930e4c_Range16(736LLU,740LLU,1LLU),_1a9930e4c_Range16(7424LLU,7461LLU,1LLU),_1a9930e4c_Range16(7468LLU,7516LLU,1LLU),_1a9930e4c_Range16(7522LLU,7525LLU,1LLU),_1a9930e4c_Range16(7531LLU,7543LLU,1LLU),_1a9930e4c_Range16(7545LLU,7614LLU,1LLU),_1a9930e4c_Range16(7680LLU,7935LLU,1LLU),_1a9930e4c_Range16(8305LLU,8319LLU,14LLU),_1a9930e4c_Range16(8336LLU,8348LLU,1LLU),_1a9930e4c_Range16(8490LLU,8491LLU,1LLU),_1a9930e4c_Range16(8498LLU,8526LLU,28LLU),_1a9930e4c_Range16(8544LLU,8584LLU,1LLU),_1a9930e4c_Range16(11360LLU,11391LLU,1LLU),_1a9930e4c_Range16(42786LLU,42887LLU,1LLU),_1a9930e4c_Range16(42891LLU,42954LLU,1LLU),_1a9930e4c_Range16(42960LLU,42961LLU,1LLU),_1a9930e4c_Range16(42963LLU,42965LLU,2LLU),_1a9930e4c_Range16(42966LLU,42969LLU,1LLU),_1a9930e4c_Range16(42994LLU,43007LLU,1LLU),_1a9930e4c_Range16(43824LLU,43866LLU,1LLU),_1a9930e4c_Range16(43868LLU,43876LLU,1LLU),_1a9930e4c_Range16(43878LLU,43881LLU,1LLU),_1a9930e4c_Range16(64256LLU,64262LLU,1LLU),_1a9930e4c_Range16(65313LLU,65338LLU,1LLU),_1a9930e4c_Range16(65345LLU,65370LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(67456LLU,67461LLU,1LLU),_1a9930e4c_Range32(67463LLU,67504LLU,1LLU),_1a9930e4c_Range32(67506LLU,67514LLU,1LLU),_1a9930e4c_Range32(122624LLU,122654LLU,1LLU),_1a9930e4c_Range32(122661LLU,122666LLU,1LLU)}),5LL));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__LEPCHA = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(7168LLU,7223LLU,1LLU),_1a9930e4c_Range16(7227LLU,7241LLU,1LLU),_1a9930e4c_Range16(7245LLU,7247LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__LIMBU = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(6400LLU,6430LLU,1LLU),_1a9930e4c_Range16(6432LLU,6443LLU,1LLU),_1a9930e4c_Range16(6448LLU,6459LLU,1LLU),_1a9930e4c_Range16(6464LLU,6468LLU,4LLU),_1a9930e4c_Range16(6469LLU,6479LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__LINEAR_A = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(67072LLU,67382LLU,1LLU),_1a9930e4c_Range32(67392LLU,67413LLU,1LLU),_1a9930e4c_Range32(67424LLU,67431LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__LINEAR_B = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(65536LLU,65547LLU,1LLU),_1a9930e4c_Range32(65549LLU,65574LLU,1LLU),_1a9930e4c_Range32(65576LLU,65594LLU,1LLU),_1a9930e4c_Range32(65596LLU,65597LLU,1LLU),_1a9930e4c_Range32(65599LLU,65613LLU,1LLU),_1a9930e4c_Range32(65616LLU,65629LLU,1LLU),_1a9930e4c_Range32(65664LLU,65786LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__LISU = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(42192LLU,42239LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(73648LLU,73648LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__LYCIAN = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(66176LLU,66204LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__LYDIAN = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(67872LLU,67897LLU,1LLU),_1a9930e4c_Range32(67903LLU,67903LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__MAHAJANI = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(69968LLU,70006LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__MAKASAR = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(73440LLU,73464LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__MALAYALAM = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(3328LLU,3340LLU,1LLU),_1a9930e4c_Range16(3342LLU,3344LLU,1LLU),_1a9930e4c_Range16(3346LLU,3396LLU,1LLU),_1a9930e4c_Range16(3398LLU,3400LLU,1LLU),_1a9930e4c_Range16(3402LLU,3407LLU,1LLU),_1a9930e4c_Range16(3412LLU,3427LLU,1LLU),_1a9930e4c_Range16(3430LLU,3455LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__MANDAIC = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(2112LLU,2139LLU,1LLU),_1a9930e4c_Range16(2142LLU,2142LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__MANICHAEAN = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(68288LLU,68326LLU,1LLU),_1a9930e4c_Range32(68331LLU,68342LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__MARCHEN = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(72816LLU,72847LLU,1LLU),_1a9930e4c_Range32(72850LLU,72871LLU,1LLU),_1a9930e4c_Range32(72873LLU,72886LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__MASARAM_GONDI = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(72960LLU,72966LLU,1LLU),_1a9930e4c_Range32(72968LLU,72969LLU,1LLU),_1a9930e4c_Range32(72971LLU,73014LLU,1LLU),_1a9930e4c_Range32(73018LLU,73020LLU,2LLU),_1a9930e4c_Range32(73021LLU,73023LLU,2LLU),_1a9930e4c_Range32(73024LLU,73031LLU,1LLU),_1a9930e4c_Range32(73040LLU,73049LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__MEDEFAIDRIN = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(93760LLU,93850LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__MEETEI_MAYEK = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(43744LLU,43766LLU,1LLU),_1a9930e4c_Range16(43968LLU,44013LLU,1LLU),_1a9930e4c_Range16(44016LLU,44025LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__MENDE_KIKAKUI = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(124928LLU,125124LLU,1LLU),_1a9930e4c_Range32(125127LLU,125142LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__MEROITIC_CURSIVE = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(68000LLU,68023LLU,1LLU),_1a9930e4c_Range32(68028LLU,68047LLU,1LLU),_1a9930e4c_Range32(68050LLU,68095LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__MEROITIC_HIEROGLYPHS = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(67968LLU,67999LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__MIAO = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(93952LLU,94026LLU,1LLU),_1a9930e4c_Range32(94031LLU,94087LLU,1LLU),_1a9930e4c_Range32(94095LLU,94111LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__MODI = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(71168LLU,71236LLU,1LLU),_1a9930e4c_Range32(71248LLU,71257LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__MONGOLIAN = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(6144LLU,6145LLU,1LLU),_1a9930e4c_Range16(6148LLU,6150LLU,2LLU),_1a9930e4c_Range16(6151LLU,6169LLU,1LLU),_1a9930e4c_Range16(6176LLU,6264LLU,1LLU),_1a9930e4c_Range16(6272LLU,6314LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(71264LLU,71276LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__MRO = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(92736LLU,92766LLU,1LLU),_1a9930e4c_Range32(92768LLU,92777LLU,1LLU),_1a9930e4c_Range32(92782LLU,92783LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__MULTANI = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(70272LLU,70278LLU,1LLU),_1a9930e4c_Range32(70280LLU,70282LLU,2LLU),_1a9930e4c_Range32(70283LLU,70285LLU,1LLU),_1a9930e4c_Range32(70287LLU,70301LLU,1LLU),_1a9930e4c_Range32(70303LLU,70313LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__MYANMAR = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(4096LLU,4255LLU,1LLU),_1a9930e4c_Range16(43488LLU,43518LLU,1LLU),_1a9930e4c_Range16(43616LLU,43647LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__NABATAEAN = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(67712LLU,67742LLU,1LLU),_1a9930e4c_Range32(67751LLU,67759LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__NAG_MUNDARI = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(124112LLU,124153LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__NANDINAGARI = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(72096LLU,72103LLU,1LLU),_1a9930e4c_Range32(72106LLU,72151LLU,1LLU),_1a9930e4c_Range32(72154LLU,72164LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__NEW_TAI_LUE = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(6528LLU,6571LLU,1LLU),_1a9930e4c_Range16(6576LLU,6601LLU,1LLU),_1a9930e4c_Range16(6608LLU,6618LLU,1LLU),_1a9930e4c_Range16(6622LLU,6623LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__NEWA = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(70656LLU,70747LLU,1LLU),_1a9930e4c_Range32(70749LLU,70753LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__NKO = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(1984LLU,2042LLU,1LLU),_1a9930e4c_Range16(2045LLU,2047LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__NUSHU = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(94177LLU,110960LLU,16783LLU),_1a9930e4c_Range32(110961LLU,111355LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__NYIAKENG_PUACHUE_HMONG = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(123136LLU,123180LLU,1LLU),_1a9930e4c_Range32(123184LLU,123197LLU,1LLU),_1a9930e4c_Range32(123200LLU,123209LLU,1LLU),_1a9930e4c_Range32(123214LLU,123215LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__OGHAM = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(5760LLU,5788LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__OL_CHIKI = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(7248LLU,7295LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__OLD_HUNGARIAN = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(68736LLU,68786LLU,1LLU),_1a9930e4c_Range32(68800LLU,68850LLU,1LLU),_1a9930e4c_Range32(68858LLU,68863LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__OLD_ITALIC = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(66304LLU,66339LLU,1LLU),_1a9930e4c_Range32(66349LLU,66351LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__OLD_NORTH_ARABIAN = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(68224LLU,68255LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__OLD_PERMIC = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(66384LLU,66426LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__OLD_PERSIAN = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(66464LLU,66499LLU,1LLU),_1a9930e4c_Range32(66504LLU,66517LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__OLD_SOGDIAN = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(69376LLU,69415LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__OLD_SOUTH_ARABIAN = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(68192LLU,68223LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__OLD_TURKIC = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(68608LLU,68680LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__OLD_UYGHUR = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(69488LLU,69513LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__ORIYA = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(2817LLU,2819LLU,1LLU),_1a9930e4c_Range16(2821LLU,2828LLU,1LLU),_1a9930e4c_Range16(2831LLU,2832LLU,1LLU),_1a9930e4c_Range16(2835LLU,2856LLU,1LLU),_1a9930e4c_Range16(2858LLU,2864LLU,1LLU),_1a9930e4c_Range16(2866LLU,2867LLU,1LLU),_1a9930e4c_Range16(2869LLU,2873LLU,1LLU),_1a9930e4c_Range16(2876LLU,2884LLU,1LLU),_1a9930e4c_Range16(2887LLU,2888LLU,1LLU),_1a9930e4c_Range16(2891LLU,2893LLU,1LLU),_1a9930e4c_Range16(2901LLU,2903LLU,1LLU),_1a9930e4c_Range16(2908LLU,2909LLU,1LLU),_1a9930e4c_Range16(2911LLU,2915LLU,1LLU),_1a9930e4c_Range16(2918LLU,2935LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__OSAGE = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(66736LLU,66771LLU,1LLU),_1a9930e4c_Range32(66776LLU,66811LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__OSMANYA = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(66688LLU,66717LLU,1LLU),_1a9930e4c_Range32(66720LLU,66729LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__PAHAWH_HMONG = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(92928LLU,92997LLU,1LLU),_1a9930e4c_Range32(93008LLU,93017LLU,1LLU),_1a9930e4c_Range32(93019LLU,93025LLU,1LLU),_1a9930e4c_Range32(93027LLU,93047LLU,1LLU),_1a9930e4c_Range32(93053LLU,93071LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__PALMYRENE = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(67680LLU,67711LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__PAU_CIN_HAU = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(72384LLU,72440LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__PHAGS_PA = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(43072LLU,43127LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__PHOENICIAN = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(67840LLU,67867LLU,1LLU),_1a9930e4c_Range32(67871LLU,67871LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__PSALTER_PAHLAVI = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(68480LLU,68497LLU,1LLU),_1a9930e4c_Range32(68505LLU,68508LLU,1LLU),_1a9930e4c_Range32(68521LLU,68527LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__REJANG = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(43312LLU,43347LLU,1LLU),_1a9930e4c_Range16(43359LLU,43359LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__RUNIC = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(5792LLU,5866LLU,1LLU),_1a9930e4c_Range16(5870LLU,5880LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__SAMARITAN = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(2048LLU,2093LLU,1LLU),_1a9930e4c_Range16(2096LLU,2110LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__SAURASHTRA = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(43136LLU,43205LLU,1LLU),_1a9930e4c_Range16(43214LLU,43225LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__SHARADA = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(70016LLU,70111LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__SHAVIAN = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(66640LLU,66687LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__SIDDHAM = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(71040LLU,71093LLU,1LLU),_1a9930e4c_Range32(71096LLU,71133LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__SIGN_WRITING = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(120832LLU,121483LLU,1LLU),_1a9930e4c_Range32(121499LLU,121503LLU,1LLU),_1a9930e4c_Range32(121505LLU,121519LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__SINHALA = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(3457LLU,3459LLU,1LLU),_1a9930e4c_Range16(3461LLU,3478LLU,1LLU),_1a9930e4c_Range16(3482LLU,3505LLU,1LLU),_1a9930e4c_Range16(3507LLU,3515LLU,1LLU),_1a9930e4c_Range16(3517LLU,3520LLU,3LLU),_1a9930e4c_Range16(3521LLU,3526LLU,1LLU),_1a9930e4c_Range16(3530LLU,3535LLU,5LLU),_1a9930e4c_Range16(3536LLU,3540LLU,1LLU),_1a9930e4c_Range16(3542LLU,3544LLU,2LLU),_1a9930e4c_Range16(3545LLU,3551LLU,1LLU),_1a9930e4c_Range16(3558LLU,3567LLU,1LLU),_1a9930e4c_Range16(3570LLU,3572LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(70113LLU,70132LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__SOGDIAN = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(69424LLU,69465LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__SORA_SOMPENG = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(69840LLU,69864LLU,1LLU),_1a9930e4c_Range32(69872LLU,69881LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__SOYOMBO = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(72272LLU,72354LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__SUNDANESE = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(7040LLU,7103LLU,1LLU),_1a9930e4c_Range16(7360LLU,7367LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__SYLOTI_NAGRI = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(43008LLU,43052LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__SYRIAC = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(1792LLU,1805LLU,1LLU),_1a9930e4c_Range16(1807LLU,1866LLU,1LLU),_1a9930e4c_Range16(1869LLU,1871LLU,1LLU),_1a9930e4c_Range16(2144LLU,2154LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__TAGALOG = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(5888LLU,5909LLU,1LLU),_1a9930e4c_Range16(5919LLU,5919LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__TAGBANWA = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(5984LLU,5996LLU,1LLU),_1a9930e4c_Range16(5998LLU,6000LLU,1LLU),_1a9930e4c_Range16(6002LLU,6003LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__TAI_LE = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(6480LLU,6509LLU,1LLU),_1a9930e4c_Range16(6512LLU,6516LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__TAI_THAM = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(6688LLU,6750LLU,1LLU),_1a9930e4c_Range16(6752LLU,6780LLU,1LLU),_1a9930e4c_Range16(6783LLU,6793LLU,1LLU),_1a9930e4c_Range16(6800LLU,6809LLU,1LLU),_1a9930e4c_Range16(6816LLU,6829LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__TAI_VIET = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(43648LLU,43714LLU,1LLU),_1a9930e4c_Range16(43739LLU,43743LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__TAKRI = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(71296LLU,71353LLU,1LLU),_1a9930e4c_Range32(71360LLU,71369LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__TAMIL = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(2946LLU,2947LLU,1LLU),_1a9930e4c_Range16(2949LLU,2954LLU,1LLU),_1a9930e4c_Range16(2958LLU,2960LLU,1LLU),_1a9930e4c_Range16(2962LLU,2965LLU,1LLU),_1a9930e4c_Range16(2969LLU,2970LLU,1LLU),_1a9930e4c_Range16(2972LLU,2974LLU,2LLU),_1a9930e4c_Range16(2975LLU,2979LLU,4LLU),_1a9930e4c_Range16(2980LLU,2984LLU,4LLU),_1a9930e4c_Range16(2985LLU,2986LLU,1LLU),_1a9930e4c_Range16(2990LLU,3001LLU,1LLU),_1a9930e4c_Range16(3006LLU,3010LLU,1LLU),_1a9930e4c_Range16(3014LLU,3016LLU,1LLU),_1a9930e4c_Range16(3018LLU,3021LLU,1LLU),_1a9930e4c_Range16(3024LLU,3031LLU,7LLU),_1a9930e4c_Range16(3046LLU,3066LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(73664LLU,73713LLU,1LLU),_1a9930e4c_Range32(73727LLU,73727LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__TANGSA = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(92784LLU,92862LLU,1LLU),_1a9930e4c_Range32(92864LLU,92873LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__TANGUT = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(94176LLU,94208LLU,32LLU),_1a9930e4c_Range32(94209LLU,100343LLU,1LLU),_1a9930e4c_Range32(100352LLU,101119LLU,1LLU),_1a9930e4c_Range32(101632LLU,101640LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__TELUGU = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(3072LLU,3084LLU,1LLU),_1a9930e4c_Range16(3086LLU,3088LLU,1LLU),_1a9930e4c_Range16(3090LLU,3112LLU,1LLU),_1a9930e4c_Range16(3114LLU,3129LLU,1LLU),_1a9930e4c_Range16(3132LLU,3140LLU,1LLU),_1a9930e4c_Range16(3142LLU,3144LLU,1LLU),_1a9930e4c_Range16(3146LLU,3149LLU,1LLU),_1a9930e4c_Range16(3157LLU,3158LLU,1LLU),_1a9930e4c_Range16(3160LLU,3162LLU,1LLU),_1a9930e4c_Range16(3165LLU,3168LLU,3LLU),_1a9930e4c_Range16(3169LLU,3171LLU,1LLU),_1a9930e4c_Range16(3174LLU,3183LLU,1LLU),_1a9930e4c_Range16(3191LLU,3199LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__THAANA = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(1920LLU,1969LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__THAI = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(3585LLU,3642LLU,1LLU),_1a9930e4c_Range16(3648LLU,3675LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__TIBETAN = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(3840LLU,3911LLU,1LLU),_1a9930e4c_Range16(3913LLU,3948LLU,1LLU),_1a9930e4c_Range16(3953LLU,3991LLU,1LLU),_1a9930e4c_Range16(3993LLU,4028LLU,1LLU),_1a9930e4c_Range16(4030LLU,4044LLU,1LLU),_1a9930e4c_Range16(4046LLU,4052LLU,1LLU),_1a9930e4c_Range16(4057LLU,4058LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__TIFINAGH = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(11568LLU,11623LLU,1LLU),_1a9930e4c_Range16(11631LLU,11632LLU,1LLU),_1a9930e4c_Range16(11647LLU,11647LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__TIRHUTA = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(70784LLU,70855LLU,1LLU),_1a9930e4c_Range32(70864LLU,70873LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__TOTO = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(123536LLU,123566LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__UGARITIC = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(66432LLU,66461LLU,1LLU),_1a9930e4c_Range32(66463LLU,66463LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__VAI = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(42240LLU,42539LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__VITHKUQI = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(66928LLU,66938LLU,1LLU),_1a9930e4c_Range32(66940LLU,66954LLU,1LLU),_1a9930e4c_Range32(66956LLU,66962LLU,1LLU),_1a9930e4c_Range32(66964LLU,66965LLU,1LLU),_1a9930e4c_Range32(66967LLU,66977LLU,1LLU),_1a9930e4c_Range32(66979LLU,66993LLU,1LLU),_1a9930e4c_Range32(66995LLU,67001LLU,1LLU),_1a9930e4c_Range32(67003LLU,67004LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__WANCHO = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(123584LLU,123641LLU,1LLU),_1a9930e4c_Range32(123647LLU,123647LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__WARANG_CITI = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(71840LLU,71922LLU,1LLU),_1a9930e4c_Range32(71935LLU,71935LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__YEZIDI = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(69248LLU,69289LLU,1LLU),_1a9930e4c_Range32(69291LLU,69293LLU,1LLU),_1a9930e4c_Range32(69296LLU,69297LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__YI = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(40960LLU,42124LLU,1LLU),_1a9930e4c_Range16(42128LLU,42182LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__ZANABAZAR_SQUARE = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(72192LLU,72263LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__ASCII_HEX_DIGIT = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(48LLU,57LLU,1LLU),_1a9930e4c_Range16(65LLU,70LLU,1LLU),_1a9930e4c_Range16(97LLU,102LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),3LL));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__BIDI_CONTROL = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(1564LLU,8206LLU,6642LLU),_1a9930e4c_Range16(8207LLU,8234LLU,27LLU),_1a9930e4c_Range16(8235LLU,8238LLU,1LLU),_1a9930e4c_Range16(8294LLU,8297LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__DASH = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(45LLU,1418LLU,1373LLU),_1a9930e4c_Range16(1470LLU,5120LLU,3650LLU),_1a9930e4c_Range16(6150LLU,8208LLU,2058LLU),_1a9930e4c_Range16(8209LLU,8213LLU,1LLU),_1a9930e4c_Range16(8275LLU,8315LLU,40LLU),_1a9930e4c_Range16(8331LLU,8722LLU,391LLU),_1a9930e4c_Range16(11799LLU,11802LLU,3LLU),_1a9930e4c_Range16(11834LLU,11835LLU,1LLU),_1a9930e4c_Range16(11840LLU,11869LLU,29LLU),_1a9930e4c_Range16(12316LLU,12336LLU,20LLU),_1a9930e4c_Range16(12448LLU,65073LLU,52625LLU),_1a9930e4c_Range16(65074LLU,65112LLU,38LLU),_1a9930e4c_Range16(65123LLU,65293LLU,170LLU)}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(69293LLU,69293LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__DEPRECATED = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(329LLU,1651LLU,1322LLU),_1a9930e4c_Range16(3959LLU,3961LLU,2LLU),_1a9930e4c_Range16(6051LLU,6052LLU,1LLU),_1a9930e4c_Range16(8298LLU,8303LLU,1LLU),_1a9930e4c_Range16(9001LLU,9002LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(917505LLU,917505LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__DIACRITIC = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(94LLU,96LLU,2LLU),_1a9930e4c_Range16(168LLU,175LLU,7LLU),_1a9930e4c_Range16(180LLU,183LLU,3LLU),_1a9930e4c_Range16(184LLU,688LLU,504LLU),_1a9930e4c_Range16(689LLU,846LLU,1LLU),_1a9930e4c_Range16(848LLU,855LLU,1LLU),_1a9930e4c_Range16(861LLU,866LLU,1LLU),_1a9930e4c_Range16(884LLU,885LLU,1LLU),_1a9930e4c_Range16(890LLU,900LLU,10LLU),_1a9930e4c_Range16(901LLU,1155LLU,254LLU),_1a9930e4c_Range16(1156LLU,1159LLU,1LLU),_1a9930e4c_Range16(1369LLU,1425LLU,56LLU),_1a9930e4c_Range16(1426LLU,1441LLU,1LLU),_1a9930e4c_Range16(1443LLU,1469LLU,1LLU),_1a9930e4c_Range16(1471LLU,1473LLU,2LLU),_1a9930e4c_Range16(1474LLU,1476LLU,2LLU),_1a9930e4c_Range16(1611LLU,1618LLU,1LLU),_1a9930e4c_Range16(1623LLU,1624LLU,1LLU),_1a9930e4c_Range16(1759LLU,1760LLU,1LLU),_1a9930e4c_Range16(1765LLU,1766LLU,1LLU),_1a9930e4c_Range16(1770LLU,1772LLU,1LLU),_1a9930e4c_Range16(1840LLU,1866LLU,1LLU),_1a9930e4c_Range16(1958LLU,1968LLU,1LLU),_1a9930e4c_Range16(2027LLU,2037LLU,1LLU),_1a9930e4c_Range16(2072LLU,2073LLU,1LLU),_1a9930e4c_Range16(2200LLU,2207LLU,1LLU),_1a9930e4c_Range16(2249LLU,2258LLU,1LLU),_1a9930e4c_Range16(2275LLU,2302LLU,1LLU),_1a9930e4c_Range16(2364LLU,2381LLU,17LLU),_1a9930e4c_Range16(2385LLU,2388LLU,1LLU),_1a9930e4c_Range16(2417LLU,2492LLU,75LLU),_1a9930e4c_Range16(2509LLU,2620LLU,111LLU),_1a9930e4c_Range16(2637LLU,2748LLU,111LLU),_1a9930e4c_Range16(2765LLU,2813LLU,48LLU),_1a9930e4c_Range16(2814LLU,2815LLU,1LLU),_1a9930e4c_Range16(2876LLU,2893LLU,17LLU),_1a9930e4c_Range16(2901LLU,3021LLU,120LLU),_1a9930e4c_Range16(3132LLU,3149LLU,17LLU),_1a9930e4c_Range16(3260LLU,3277LLU,17LLU),_1a9930e4c_Range16(3387LLU,3388LLU,1LLU),_1a9930e4c_Range16(3405LLU,3655LLU,125LLU),_1a9930e4c_Range16(3656LLU,3660LLU,1LLU),_1a9930e4c_Range16(3662LLU,3770LLU,108LLU),_1a9930e4c_Range16(3784LLU,3788LLU,1LLU),_1a9930e4c_Range16(3864LLU,3865LLU,1LLU),_1a9930e4c_Range16(3893LLU,3897LLU,2LLU),_1a9930e4c_Range16(3902LLU,3903LLU,1LLU),_1a9930e4c_Range16(3970LLU,3972LLU,1LLU),_1a9930e4c_Range16(3974LLU,3975LLU,1LLU),_1a9930e4c_Range16(4038LLU,4151LLU,113LLU),_1a9930e4c_Range16(4153LLU,4154LLU,1LLU),_1a9930e4c_Range16(4195LLU,4196LLU,1LLU),_1a9930e4c_Range16(4201LLU,4205LLU,1LLU),_1a9930e4c_Range16(4231LLU,4237LLU,1LLU),_1a9930e4c_Range16(4239LLU,4250LLU,11LLU),_1a9930e4c_Range16(4251LLU,4957LLU,706LLU),_1a9930e4c_Range16(4958LLU,4959LLU,1LLU),_1a9930e4c_Range16(5908LLU,5909LLU,1LLU),_1a9930e4c_Range16(6089LLU,6099LLU,1LLU),_1a9930e4c_Range16(6109LLU,6457LLU,348LLU),_1a9930e4c_Range16(6458LLU,6459LLU,1LLU),_1a9930e4c_Range16(6773LLU,6780LLU,1LLU),_1a9930e4c_Range16(6783LLU,6832LLU,49LLU),_1a9930e4c_Range16(6833LLU,6846LLU,1LLU),_1a9930e4c_Range16(6849LLU,6859LLU,1LLU),_1a9930e4c_Range16(6964LLU,6980LLU,16LLU),_1a9930e4c_Range16(7019LLU,7027LLU,1LLU),_1a9930e4c_Range16(7082LLU,7083LLU,1LLU),_1a9930e4c_Range16(7222LLU,7223LLU,1LLU),_1a9930e4c_Range16(7288LLU,7293LLU,1LLU),_1a9930e4c_Range16(7376LLU,7400LLU,1LLU),_1a9930e4c_Range16(7405LLU,7412LLU,7LLU),_1a9930e4c_Range16(7415LLU,7417LLU,1LLU),_1a9930e4c_Range16(7468LLU,7530LLU,1LLU),_1a9930e4c_Range16(7620LLU,7631LLU,1LLU),_1a9930e4c_Range16(7669LLU,7679LLU,1LLU),_1a9930e4c_Range16(8125LLU,8127LLU,2LLU),_1a9930e4c_Range16(8128LLU,8129LLU,1LLU),_1a9930e4c_Range16(8141LLU,8143LLU,1LLU),_1a9930e4c_Range16(8157LLU,8159LLU,1LLU),_1a9930e4c_Range16(8173LLU,8175LLU,1LLU),_1a9930e4c_Range16(8189LLU,8190LLU,1LLU),_1a9930e4c_Range16(11503LLU,11505LLU,1LLU),_1a9930e4c_Range16(11823LLU,12330LLU,507LLU),_1a9930e4c_Range16(12331LLU,12335LLU,1LLU),_1a9930e4c_Range16(12441LLU,12444LLU,1LLU),_1a9930e4c_Range16(12540LLU,42607LLU,30067LLU),_1a9930e4c_Range16(42620LLU,42621LLU,1LLU),_1a9930e4c_Range16(42623LLU,42652LLU,29LLU),_1a9930e4c_Range16(42653LLU,42736LLU,83LLU),_1a9930e4c_Range16(42737LLU,42752LLU,15LLU),_1a9930e4c_Range16(42753LLU,42785LLU,1LLU),_1a9930e4c_Range16(42888LLU,42890LLU,1LLU),_1a9930e4c_Range16(43000LLU,43001LLU,1LLU),_1a9930e4c_Range16(43204LLU,43232LLU,28LLU),_1a9930e4c_Range16(43233LLU,43249LLU,1LLU),_1a9930e4c_Range16(43307LLU,43310LLU,1LLU),_1a9930e4c_Range16(43347LLU,43443LLU,96LLU),_1a9930e4c_Range16(43456LLU,43493LLU,37LLU),_1a9930e4c_Range16(43643LLU,43645LLU,1LLU),_1a9930e4c_Range16(43711LLU,43714LLU,1LLU),_1a9930e4c_Range16(43766LLU,43867LLU,101LLU),_1a9930e4c_Range16(43868LLU,43871LLU,1LLU),_1a9930e4c_Range16(43881LLU,43883LLU,1LLU),_1a9930e4c_Range16(44012LLU,44013LLU,1LLU),_1a9930e4c_Range16(64286LLU,65056LLU,770LLU),_1a9930e4c_Range16(65057LLU,65071LLU,1LLU),_1a9930e4c_Range16(65342LLU,65344LLU,2LLU),_1a9930e4c_Range16(65392LLU,65438LLU,46LLU),_1a9930e4c_Range16(65439LLU,65507LLU,68LLU)}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(66272LLU,67456LLU,1184LLU),_1a9930e4c_Range32(67457LLU,67461LLU,1LLU),_1a9930e4c_Range32(67463LLU,67504LLU,1LLU),_1a9930e4c_Range32(67506LLU,67514LLU,1LLU),_1a9930e4c_Range32(68325LLU,68326LLU,1LLU),_1a9930e4c_Range32(68898LLU,68903LLU,1LLU),_1a9930e4c_Range32(69373LLU,69375LLU,1LLU),_1a9930e4c_Range32(69446LLU,69456LLU,1LLU),_1a9930e4c_Range32(69506LLU,69509LLU,1LLU),_1a9930e4c_Range32(69702LLU,69744LLU,42LLU),_1a9930e4c_Range32(69817LLU,69818LLU,1LLU),_1a9930e4c_Range32(69939LLU,69940LLU,1LLU),_1a9930e4c_Range32(70003LLU,70080LLU,77LLU),_1a9930e4c_Range32(70090LLU,70092LLU,1LLU),_1a9930e4c_Range32(70197LLU,70198LLU,1LLU),_1a9930e4c_Range32(70377LLU,70378LLU,1LLU),_1a9930e4c_Range32(70460LLU,70477LLU,17LLU),_1a9930e4c_Range32(70502LLU,70508LLU,1LLU),_1a9930e4c_Range32(70512LLU,70516LLU,1LLU),_1a9930e4c_Range32(70722LLU,70726LLU,4LLU),_1a9930e4c_Range32(70850LLU,70851LLU,1LLU),_1a9930e4c_Range32(71103LLU,71104LLU,1LLU),_1a9930e4c_Range32(71231LLU,71350LLU,119LLU),_1a9930e4c_Range32(71351LLU,71467LLU,116LLU),_1a9930e4c_Range32(71737LLU,71738LLU,1LLU),_1a9930e4c_Range32(71997LLU,71998LLU,1LLU),_1a9930e4c_Range32(72003LLU,72160LLU,157LLU),_1a9930e4c_Range32(72244LLU,72263LLU,19LLU),_1a9930e4c_Range32(72345LLU,72767LLU,422LLU),_1a9930e4c_Range32(73026LLU,73028LLU,2LLU),_1a9930e4c_Range32(73029LLU,73111LLU,82LLU),_1a9930e4c_Range32(78919LLU,78933LLU,1LLU),_1a9930e4c_Range32(92912LLU,92916LLU,1LLU),_1a9930e4c_Range32(92976LLU,92982LLU,1LLU),_1a9930e4c_Range32(94095LLU,94111LLU,1LLU),_1a9930e4c_Range32(94192LLU,94193LLU,1LLU),_1a9930e4c_Range32(110576LLU,110579LLU,1LLU),_1a9930e4c_Range32(110581LLU,110587LLU,1LLU),_1a9930e4c_Range32(110589LLU,110590LLU,1LLU),_1a9930e4c_Range32(118528LLU,118573LLU,1LLU),_1a9930e4c_Range32(118576LLU,118598LLU,1LLU),_1a9930e4c_Range32(119143LLU,119145LLU,1LLU),_1a9930e4c_Range32(119149LLU,119154LLU,1LLU),_1a9930e4c_Range32(119163LLU,119170LLU,1LLU),_1a9930e4c_Range32(119173LLU,119179LLU,1LLU),_1a9930e4c_Range32(119210LLU,119213LLU,1LLU),_1a9930e4c_Range32(122928LLU,122989LLU,1LLU),_1a9930e4c_Range32(123184LLU,123190LLU,1LLU),_1a9930e4c_Range32(123566LLU,123628LLU,62LLU),_1a9930e4c_Range32(123629LLU,123631LLU,1LLU),_1a9930e4c_Range32(125136LLU,125142LLU,1LLU),_1a9930e4c_Range32(125252LLU,125254LLU,1LLU),_1a9930e4c_Range32(125256LLU,125258LLU,1LLU)}),3LL));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__EXTENDER = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(183LLU,720LLU,537LLU),_1a9930e4c_Range16(721LLU,1600LLU,879LLU),_1a9930e4c_Range16(2042LLU,2901LLU,859LLU),_1a9930e4c_Range16(3654LLU,3782LLU,128LLU),_1a9930e4c_Range16(6154LLU,6211LLU,57LLU),_1a9930e4c_Range16(6823LLU,7222LLU,399LLU),_1a9930e4c_Range16(7291LLU,12293LLU,5002LLU),_1a9930e4c_Range16(12337LLU,12341LLU,1LLU),_1a9930e4c_Range16(12445LLU,12446LLU,1LLU),_1a9930e4c_Range16(12540LLU,12542LLU,1LLU),_1a9930e4c_Range16(40981LLU,42508LLU,1527LLU),_1a9930e4c_Range16(43471LLU,43494LLU,23LLU),_1a9930e4c_Range16(43632LLU,43741LLU,109LLU),_1a9930e4c_Range16(43763LLU,43764LLU,1LLU),_1a9930e4c_Range16(65392LLU,65392LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(67457LLU,67458LLU,1LLU),_1a9930e4c_Range32(70493LLU,71110LLU,617LLU),_1a9930e4c_Range32(71111LLU,71112LLU,1LLU),_1a9930e4c_Range32(72344LLU,92994LLU,20650LLU),_1a9930e4c_Range32(92995LLU,94176LLU,1181LLU),_1a9930e4c_Range32(94177LLU,94179LLU,2LLU),_1a9930e4c_Range32(123196LLU,123197LLU,1LLU),_1a9930e4c_Range32(125252LLU,125254LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__HEX_DIGIT = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(48LLU,57LLU,1LLU),_1a9930e4c_Range16(65LLU,70LLU,1LLU),_1a9930e4c_Range16(97LLU,102LLU,1LLU),_1a9930e4c_Range16(65296LLU,65305LLU,1LLU),_1a9930e4c_Range16(65313LLU,65318LLU,1LLU),_1a9930e4c_Range16(65345LLU,65350LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),3LL));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__HYPHEN = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(45LLU,173LLU,128LLU),_1a9930e4c_Range16(1418LLU,6150LLU,4732LLU),_1a9930e4c_Range16(8208LLU,8209LLU,1LLU),_1a9930e4c_Range16(11799LLU,12539LLU,740LLU),_1a9930e4c_Range16(65123LLU,65293LLU,170LLU),_1a9930e4c_Range16(65381LLU,65381LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),1LL));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__IDS_BINARY_OPERATOR = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(12272LLU,12273LLU,1LLU),_1a9930e4c_Range16(12276LLU,12283LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__IDS_TRINARY_OPERATOR = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(12274LLU,12275LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__IDEOGRAPHIC = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(12294LLU,12295LLU,1LLU),_1a9930e4c_Range16(12321LLU,12329LLU,1LLU),_1a9930e4c_Range16(12344LLU,12346LLU,1LLU),_1a9930e4c_Range16(13312LLU,19903LLU,1LLU),_1a9930e4c_Range16(19968LLU,40959LLU,1LLU),_1a9930e4c_Range16(63744LLU,64109LLU,1LLU),_1a9930e4c_Range16(64112LLU,64217LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(94180LLU,94208LLU,28LLU),_1a9930e4c_Range32(94209LLU,100343LLU,1LLU),_1a9930e4c_Range32(100352LLU,101589LLU,1LLU),_1a9930e4c_Range32(101632LLU,101640LLU,1LLU),_1a9930e4c_Range32(110960LLU,111355LLU,1LLU),_1a9930e4c_Range32(131072LLU,173791LLU,1LLU),_1a9930e4c_Range32(173824LLU,177977LLU,1LLU),_1a9930e4c_Range32(177984LLU,178205LLU,1LLU),_1a9930e4c_Range32(178208LLU,183969LLU,1LLU),_1a9930e4c_Range32(183984LLU,191456LLU,1LLU),_1a9930e4c_Range32(194560LLU,195101LLU,1LLU),_1a9930e4c_Range32(196608LLU,201546LLU,1LLU),_1a9930e4c_Range32(201552LLU,205743LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__JOIN_CONTROL = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(8204LLU,8205LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__LOGICAL_ORDER_EXCEPTION = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(3648LLU,3652LLU,1LLU),_1a9930e4c_Range16(3776LLU,3780LLU,1LLU),_1a9930e4c_Range16(6581LLU,6583LLU,1LLU),_1a9930e4c_Range16(6586LLU,43701LLU,37115LLU),_1a9930e4c_Range16(43702LLU,43705LLU,3LLU),_1a9930e4c_Range16(43707LLU,43708LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__NONCHARACTER_CODE_POINT = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(64976LLU,65007LLU,1LLU),_1a9930e4c_Range16(65534LLU,65535LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(131070LLU,131071LLU,1LLU),_1a9930e4c_Range32(196606LLU,196607LLU,1LLU),_1a9930e4c_Range32(262142LLU,262143LLU,1LLU),_1a9930e4c_Range32(327678LLU,327679LLU,1LLU),_1a9930e4c_Range32(393214LLU,393215LLU,1LLU),_1a9930e4c_Range32(458750LLU,458751LLU,1LLU),_1a9930e4c_Range32(524286LLU,524287LLU,1LLU),_1a9930e4c_Range32(589822LLU,589823LLU,1LLU),_1a9930e4c_Range32(655358LLU,655359LLU,1LLU),_1a9930e4c_Range32(720894LLU,720895LLU,1LLU),_1a9930e4c_Range32(786430LLU,786431LLU,1LLU),_1a9930e4c_Range32(851966LLU,851967LLU,1LLU),_1a9930e4c_Range32(917502LLU,917503LLU,1LLU),_1a9930e4c_Range32(983038LLU,983039LLU,1LLU),_1a9930e4c_Range32(1048574LLU,1048575LLU,1LLU),_1a9930e4c_Range32(1114110LLU,1114111LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__OTHER_ALPHABETIC = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(837LLU,1456LLU,619LLU),_1a9930e4c_Range16(1457LLU,1469LLU,1LLU),_1a9930e4c_Range16(1471LLU,1473LLU,2LLU),_1a9930e4c_Range16(1474LLU,1476LLU,2LLU),_1a9930e4c_Range16(1477LLU,1479LLU,2LLU),_1a9930e4c_Range16(1552LLU,1562LLU,1LLU),_1a9930e4c_Range16(1611LLU,1623LLU,1LLU),_1a9930e4c_Range16(1625LLU,1631LLU,1LLU),_1a9930e4c_Range16(1648LLU,1750LLU,102LLU),_1a9930e4c_Range16(1751LLU,1756LLU,1LLU),_1a9930e4c_Range16(1761LLU,1764LLU,1LLU),_1a9930e4c_Range16(1767LLU,1768LLU,1LLU),_1a9930e4c_Range16(1773LLU,1809LLU,36LLU),_1a9930e4c_Range16(1840LLU,1855LLU,1LLU),_1a9930e4c_Range16(1958LLU,1968LLU,1LLU),_1a9930e4c_Range16(2070LLU,2071LLU,1LLU),_1a9930e4c_Range16(2075LLU,2083LLU,1LLU),_1a9930e4c_Range16(2085LLU,2087LLU,1LLU),_1a9930e4c_Range16(2089LLU,2092LLU,1LLU),_1a9930e4c_Range16(2260LLU,2271LLU,1LLU),_1a9930e4c_Range16(2275LLU,2281LLU,1LLU),_1a9930e4c_Range16(2288LLU,2307LLU,1LLU),_1a9930e4c_Range16(2362LLU,2363LLU,1LLU),_1a9930e4c_Range16(2366LLU,2380LLU,1LLU),_1a9930e4c_Range16(2382LLU,2383LLU,1LLU),_1a9930e4c_Range16(2389LLU,2391LLU,1LLU),_1a9930e4c_Range16(2402LLU,2403LLU,1LLU),_1a9930e4c_Range16(2433LLU,2435LLU,1LLU),_1a9930e4c_Range16(2494LLU,2500LLU,1LLU),_1a9930e4c_Range16(2503LLU,2504LLU,1LLU),_1a9930e4c_Range16(2507LLU,2508LLU,1LLU),_1a9930e4c_Range16(2519LLU,2530LLU,11LLU),_1a9930e4c_Range16(2531LLU,2561LLU,30LLU),_1a9930e4c_Range16(2562LLU,2563LLU,1LLU),_1a9930e4c_Range16(2622LLU,2626LLU,1LLU),_1a9930e4c_Range16(2631LLU,2632LLU,1LLU),_1a9930e4c_Range16(2635LLU,2636LLU,1LLU),_1a9930e4c_Range16(2641LLU,2672LLU,31LLU),_1a9930e4c_Range16(2673LLU,2677LLU,4LLU),_1a9930e4c_Range16(2689LLU,2691LLU,1LLU),_1a9930e4c_Range16(2750LLU,2757LLU,1LLU),_1a9930e4c_Range16(2759LLU,2761LLU,1LLU),_1a9930e4c_Range16(2763LLU,2764LLU,1LLU),_1a9930e4c_Range16(2786LLU,2787LLU,1LLU),_1a9930e4c_Range16(2810LLU,2812LLU,1LLU),_1a9930e4c_Range16(2817LLU,2819LLU,1LLU),_1a9930e4c_Range16(2878LLU,2884LLU,1LLU),_1a9930e4c_Range16(2887LLU,2888LLU,1LLU),_1a9930e4c_Range16(2891LLU,2892LLU,1LLU),_1a9930e4c_Range16(2902LLU,2903LLU,1LLU),_1a9930e4c_Range16(2914LLU,2915LLU,1LLU),_1a9930e4c_Range16(2946LLU,3006LLU,60LLU),_1a9930e4c_Range16(3007LLU,3010LLU,1LLU),_1a9930e4c_Range16(3014LLU,3016LLU,1LLU),_1a9930e4c_Range16(3018LLU,3020LLU,1LLU),_1a9930e4c_Range16(3031LLU,3072LLU,41LLU),_1a9930e4c_Range16(3073LLU,3076LLU,1LLU),_1a9930e4c_Range16(3134LLU,3140LLU,1LLU),_1a9930e4c_Range16(3142LLU,3144LLU,1LLU),_1a9930e4c_Range16(3146LLU,3148LLU,1LLU),_1a9930e4c_Range16(3157LLU,3158LLU,1LLU),_1a9930e4c_Range16(3170LLU,3171LLU,1LLU),_1a9930e4c_Range16(3201LLU,3203LLU,1LLU),_1a9930e4c_Range16(3262LLU,3268LLU,1LLU),_1a9930e4c_Range16(3270LLU,3272LLU,1LLU),_1a9930e4c_Range16(3274LLU,3276LLU,1LLU),_1a9930e4c_Range16(3285LLU,3286LLU,1LLU),_1a9930e4c_Range16(3298LLU,3299LLU,1LLU),_1a9930e4c_Range16(3315LLU,3328LLU,13LLU),_1a9930e4c_Range16(3329LLU,3331LLU,1LLU),_1a9930e4c_Range16(3390LLU,3396LLU,1LLU),_1a9930e4c_Range16(3398LLU,3400LLU,1LLU),_1a9930e4c_Range16(3402LLU,3404LLU,1LLU),_1a9930e4c_Range16(3415LLU,3426LLU,11LLU),_1a9930e4c_Range16(3427LLU,3457LLU,30LLU),_1a9930e4c_Range16(3458LLU,3459LLU,1LLU),_1a9930e4c_Range16(3535LLU,3540LLU,1LLU),_1a9930e4c_Range16(3542LLU,3544LLU,2LLU),_1a9930e4c_Range16(3545LLU,3551LLU,1LLU),_1a9930e4c_Range16(3570LLU,3571LLU,1LLU),_1a9930e4c_Range16(3633LLU,3636LLU,3LLU),_1a9930e4c_Range16(3637LLU,3642LLU,1LLU),_1a9930e4c_Range16(3661LLU,3761LLU,100LLU),_1a9930e4c_Range16(3764LLU,3769LLU,1LLU),_1a9930e4c_Range16(3771LLU,3772LLU,1LLU),_1a9930e4c_Range16(3789LLU,3953LLU,164LLU),_1a9930e4c_Range16(3954LLU,3971LLU,1LLU),_1a9930e4c_Range16(3981LLU,3991LLU,1LLU),_1a9930e4c_Range16(3993LLU,4028LLU,1LLU),_1a9930e4c_Range16(4139LLU,4150LLU,1LLU),_1a9930e4c_Range16(4152LLU,4155LLU,3LLU),_1a9930e4c_Range16(4156LLU,4158LLU,1LLU),_1a9930e4c_Range16(4182LLU,4185LLU,1LLU),_1a9930e4c_Range16(4190LLU,4192LLU,1LLU),_1a9930e4c_Range16(4194LLU,4196LLU,1LLU),_1a9930e4c_Range16(4199LLU,4205LLU,1LLU),_1a9930e4c_Range16(4209LLU,4212LLU,1LLU),_1a9930e4c_Range16(4226LLU,4237LLU,1LLU),_1a9930e4c_Range16(4239LLU,4250LLU,11LLU),_1a9930e4c_Range16(4251LLU,4253LLU,1LLU),_1a9930e4c_Range16(5906LLU,5907LLU,1LLU),_1a9930e4c_Range16(5938LLU,5939LLU,1LLU),_1a9930e4c_Range16(5970LLU,5971LLU,1LLU),_1a9930e4c_Range16(6002LLU,6003LLU,1LLU),_1a9930e4c_Range16(6070LLU,6088LLU,1LLU),_1a9930e4c_Range16(6277LLU,6278LLU,1LLU),_1a9930e4c_Range16(6313LLU,6432LLU,119LLU),_1a9930e4c_Range16(6433LLU,6443LLU,1LLU),_1a9930e4c_Range16(6448LLU,6456LLU,1LLU),_1a9930e4c_Range16(6679LLU,6683LLU,1LLU),_1a9930e4c_Range16(6741LLU,6750LLU,1LLU),_1a9930e4c_Range16(6753LLU,6772LLU,1LLU),_1a9930e4c_Range16(6847LLU,6848LLU,1LLU),_1a9930e4c_Range16(6860LLU,6862LLU,1LLU),_1a9930e4c_Range16(6912LLU,6916LLU,1LLU),_1a9930e4c_Range16(6965LLU,6979LLU,1LLU),_1a9930e4c_Range16(7040LLU,7042LLU,1LLU),_1a9930e4c_Range16(7073LLU,7081LLU,1LLU),_1a9930e4c_Range16(7084LLU,7085LLU,1LLU),_1a9930e4c_Range16(7143LLU,7153LLU,1LLU),_1a9930e4c_Range16(7204LLU,7222LLU,1LLU),_1a9930e4c_Range16(7655LLU,7668LLU,1LLU),_1a9930e4c_Range16(9398LLU,9449LLU,1LLU),_1a9930e4c_Range16(11744LLU,11775LLU,1LLU),_1a9930e4c_Range16(42612LLU,42619LLU,1LLU),_1a9930e4c_Range16(42654LLU,42655LLU,1LLU),_1a9930e4c_Range16(43010LLU,43019LLU,9LLU),_1a9930e4c_Range16(43043LLU,43047LLU,1LLU),_1a9930e4c_Range16(43136LLU,43137LLU,1LLU),_1a9930e4c_Range16(43188LLU,43203LLU,1LLU),_1a9930e4c_Range16(43205LLU,43263LLU,58LLU),_1a9930e4c_Range16(43302LLU,43306LLU,1LLU),_1a9930e4c_Range16(43335LLU,43346LLU,1LLU),_1a9930e4c_Range16(43392LLU,43395LLU,1LLU),_1a9930e4c_Range16(43444LLU,43455LLU,1LLU),_1a9930e4c_Range16(43493LLU,43561LLU,68LLU),_1a9930e4c_Range16(43562LLU,43574LLU,1LLU),_1a9930e4c_Range16(43587LLU,43596LLU,9LLU),_1a9930e4c_Range16(43597LLU,43643LLU,46LLU),_1a9930e4c_Range16(43644LLU,43645LLU,1LLU),_1a9930e4c_Range16(43696LLU,43698LLU,2LLU),_1a9930e4c_Range16(43699LLU,43700LLU,1LLU),_1a9930e4c_Range16(43703LLU,43704LLU,1LLU),_1a9930e4c_Range16(43710LLU,43755LLU,45LLU),_1a9930e4c_Range16(43756LLU,43759LLU,1LLU),_1a9930e4c_Range16(43765LLU,44003LLU,238LLU),_1a9930e4c_Range16(44004LLU,44010LLU,1LLU),_1a9930e4c_Range16(64286LLU,64286LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(66422LLU,66426LLU,1LLU),_1a9930e4c_Range32(68097LLU,68099LLU,1LLU),_1a9930e4c_Range32(68101LLU,68102LLU,1LLU),_1a9930e4c_Range32(68108LLU,68111LLU,1LLU),_1a9930e4c_Range32(68900LLU,68903LLU,1LLU),_1a9930e4c_Range32(69291LLU,69292LLU,1LLU),_1a9930e4c_Range32(69632LLU,69634LLU,1LLU),_1a9930e4c_Range32(69688LLU,69701LLU,1LLU),_1a9930e4c_Range32(69747LLU,69748LLU,1LLU),_1a9930e4c_Range32(69760LLU,69762LLU,1LLU),_1a9930e4c_Range32(69808LLU,69816LLU,1LLU),_1a9930e4c_Range32(69826LLU,69888LLU,62LLU),_1a9930e4c_Range32(69889LLU,69890LLU,1LLU),_1a9930e4c_Range32(69927LLU,69938LLU,1LLU),_1a9930e4c_Range32(69957LLU,69958LLU,1LLU),_1a9930e4c_Range32(70016LLU,70018LLU,1LLU),_1a9930e4c_Range32(70067LLU,70079LLU,1LLU),_1a9930e4c_Range32(70094LLU,70095LLU,1LLU),_1a9930e4c_Range32(70188LLU,70196LLU,1LLU),_1a9930e4c_Range32(70199LLU,70206LLU,7LLU),_1a9930e4c_Range32(70209LLU,70367LLU,158LLU),_1a9930e4c_Range32(70368LLU,70376LLU,1LLU),_1a9930e4c_Range32(70400LLU,70403LLU,1LLU),_1a9930e4c_Range32(70462LLU,70468LLU,1LLU),_1a9930e4c_Range32(70471LLU,70472LLU,1LLU),_1a9930e4c_Range32(70475LLU,70476LLU,1LLU),_1a9930e4c_Range32(70487LLU,70498LLU,11LLU),_1a9930e4c_Range32(70499LLU,70709LLU,210LLU),_1a9930e4c_Range32(70710LLU,70721LLU,1LLU),_1a9930e4c_Range32(70723LLU,70725LLU,1LLU),_1a9930e4c_Range32(70832LLU,70849LLU,1LLU),_1a9930e4c_Range32(71087LLU,71093LLU,1LLU),_1a9930e4c_Range32(71096LLU,71102LLU,1LLU),_1a9930e4c_Range32(71132LLU,71133LLU,1LLU),_1a9930e4c_Range32(71216LLU,71230LLU,1LLU),_1a9930e4c_Range32(71232LLU,71339LLU,107LLU),_1a9930e4c_Range32(71340LLU,71349LLU,1LLU),_1a9930e4c_Range32(71453LLU,71466LLU,1LLU),_1a9930e4c_Range32(71724LLU,71736LLU,1LLU),_1a9930e4c_Range32(71984LLU,71989LLU,1LLU),_1a9930e4c_Range32(71991LLU,71992LLU,1LLU),_1a9930e4c_Range32(71995LLU,71996LLU,1LLU),_1a9930e4c_Range32(72000LLU,72002LLU,2LLU),_1a9930e4c_Range32(72145LLU,72151LLU,1LLU),_1a9930e4c_Range32(72154LLU,72159LLU,1LLU),_1a9930e4c_Range32(72164LLU,72193LLU,29LLU),_1a9930e4c_Range32(72194LLU,72202LLU,1LLU),_1a9930e4c_Range32(72245LLU,72249LLU,1LLU),_1a9930e4c_Range32(72251LLU,72254LLU,1LLU),_1a9930e4c_Range32(72273LLU,72283LLU,1LLU),_1a9930e4c_Range32(72330LLU,72343LLU,1LLU),_1a9930e4c_Range32(72751LLU,72758LLU,1LLU),_1a9930e4c_Range32(72760LLU,72766LLU,1LLU),_1a9930e4c_Range32(72850LLU,72871LLU,1LLU),_1a9930e4c_Range32(72873LLU,72886LLU,1LLU),_1a9930e4c_Range32(73009LLU,73014LLU,1LLU),_1a9930e4c_Range32(73018LLU,73020LLU,2LLU),_1a9930e4c_Range32(73021LLU,73023LLU,2LLU),_1a9930e4c_Range32(73024LLU,73025LLU,1LLU),_1a9930e4c_Range32(73027LLU,73031LLU,4LLU),_1a9930e4c_Range32(73098LLU,73102LLU,1LLU),_1a9930e4c_Range32(73104LLU,73105LLU,1LLU),_1a9930e4c_Range32(73107LLU,73110LLU,1LLU),_1a9930e4c_Range32(73459LLU,73462LLU,1LLU),_1a9930e4c_Range32(73472LLU,73473LLU,1LLU),_1a9930e4c_Range32(73475LLU,73524LLU,49LLU),_1a9930e4c_Range32(73525LLU,73530LLU,1LLU),_1a9930e4c_Range32(73534LLU,73536LLU,1LLU),_1a9930e4c_Range32(94031LLU,94033LLU,2LLU),_1a9930e4c_Range32(94034LLU,94087LLU,1LLU),_1a9930e4c_Range32(94095LLU,94098LLU,1LLU),_1a9930e4c_Range32(94192LLU,94193LLU,1LLU),_1a9930e4c_Range32(113822LLU,122880LLU,9058LLU),_1a9930e4c_Range32(122881LLU,122886LLU,1LLU),_1a9930e4c_Range32(122888LLU,122904LLU,1LLU),_1a9930e4c_Range32(122907LLU,122913LLU,1LLU),_1a9930e4c_Range32(122915LLU,122916LLU,1LLU),_1a9930e4c_Range32(122918LLU,122922LLU,1LLU),_1a9930e4c_Range32(123023LLU,125255LLU,2232LLU),_1a9930e4c_Range32(127280LLU,127305LLU,1LLU),_1a9930e4c_Range32(127312LLU,127337LLU,1LLU),_1a9930e4c_Range32(127344LLU,127369LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__OTHER_DEFAULT_IGNORABLE_CODE_POINT = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(847LLU,4447LLU,3600LLU),_1a9930e4c_Range16(4448LLU,6068LLU,1620LLU),_1a9930e4c_Range16(6069LLU,8293LLU,2224LLU),_1a9930e4c_Range16(12644LLU,65440LLU,52796LLU),_1a9930e4c_Range16(65520LLU,65528LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(917504LLU,917506LLU,2LLU),_1a9930e4c_Range32(917507LLU,917535LLU,1LLU),_1a9930e4c_Range32(917632LLU,917759LLU,1LLU),_1a9930e4c_Range32(918000LLU,921599LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__OTHER_GRAPHEME_EXTEND = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(2494LLU,2519LLU,25LLU),_1a9930e4c_Range16(2878LLU,2903LLU,25LLU),_1a9930e4c_Range16(3006LLU,3031LLU,25LLU),_1a9930e4c_Range16(3266LLU,3285LLU,19LLU),_1a9930e4c_Range16(3286LLU,3390LLU,104LLU),_1a9930e4c_Range16(3415LLU,3535LLU,120LLU),_1a9930e4c_Range16(3551LLU,6965LLU,3414LLU),_1a9930e4c_Range16(8204LLU,12334LLU,4130LLU),_1a9930e4c_Range16(12335LLU,65438LLU,53103LLU),_1a9930e4c_Range16(65439LLU,65439LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(70462LLU,70487LLU,25LLU),_1a9930e4c_Range32(70832LLU,70845LLU,13LLU),_1a9930e4c_Range32(71087LLU,71984LLU,897LLU),_1a9930e4c_Range32(119141LLU,119150LLU,9LLU),_1a9930e4c_Range32(119151LLU,119154LLU,1LLU),_1a9930e4c_Range32(917536LLU,917631LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__OTHER_ID_CONTINUE = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(183LLU,903LLU,720LLU),_1a9930e4c_Range16(4969LLU,4977LLU,1LLU),_1a9930e4c_Range16(6618LLU,6618LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__OTHER_ID_START = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(6277LLU,6278LLU,1LLU),_1a9930e4c_Range16(8472LLU,8494LLU,22LLU),_1a9930e4c_Range16(12443LLU,12444LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__OTHER_LOWERCASE = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(170LLU,186LLU,16LLU),_1a9930e4c_Range16(688LLU,696LLU,1LLU),_1a9930e4c_Range16(704LLU,705LLU,1LLU),_1a9930e4c_Range16(736LLU,740LLU,1LLU),_1a9930e4c_Range16(837LLU,890LLU,53LLU),_1a9930e4c_Range16(4348LLU,7468LLU,3120LLU),_1a9930e4c_Range16(7469LLU,7530LLU,1LLU),_1a9930e4c_Range16(7544LLU,7579LLU,35LLU),_1a9930e4c_Range16(7580LLU,7615LLU,1LLU),_1a9930e4c_Range16(8305LLU,8319LLU,14LLU),_1a9930e4c_Range16(8336LLU,8348LLU,1LLU),_1a9930e4c_Range16(8560LLU,8575LLU,1LLU),_1a9930e4c_Range16(9424LLU,9449LLU,1LLU),_1a9930e4c_Range16(11388LLU,11389LLU,1LLU),_1a9930e4c_Range16(42652LLU,42653LLU,1LLU),_1a9930e4c_Range16(42864LLU,42994LLU,130LLU),_1a9930e4c_Range16(42995LLU,42996LLU,1LLU),_1a9930e4c_Range16(43000LLU,43001LLU,1LLU),_1a9930e4c_Range16(43868LLU,43871LLU,1LLU),_1a9930e4c_Range16(43881LLU,43881LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(67456LLU,67459LLU,3LLU),_1a9930e4c_Range32(67460LLU,67461LLU,1LLU),_1a9930e4c_Range32(67463LLU,67504LLU,1LLU),_1a9930e4c_Range32(67506LLU,67514LLU,1LLU),_1a9930e4c_Range32(122928LLU,122989LLU,1LLU)}),1LL));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__OTHER_MATH = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(94LLU,976LLU,882LLU),_1a9930e4c_Range16(977LLU,978LLU,1LLU),_1a9930e4c_Range16(981LLU,1008LLU,27LLU),_1a9930e4c_Range16(1009LLU,1012LLU,3LLU),_1a9930e4c_Range16(1013LLU,8214LLU,7201LLU),_1a9930e4c_Range16(8242LLU,8244LLU,1LLU),_1a9930e4c_Range16(8256LLU,8289LLU,33LLU),_1a9930e4c_Range16(8290LLU,8292LLU,1LLU),_1a9930e4c_Range16(8317LLU,8318LLU,1LLU),_1a9930e4c_Range16(8333LLU,8334LLU,1LLU),_1a9930e4c_Range16(8400LLU,8412LLU,1LLU),_1a9930e4c_Range16(8417LLU,8421LLU,4LLU),_1a9930e4c_Range16(8422LLU,8427LLU,5LLU),_1a9930e4c_Range16(8428LLU,8431LLU,1LLU),_1a9930e4c_Range16(8450LLU,8455LLU,5LLU),_1a9930e4c_Range16(8458LLU,8467LLU,1LLU),_1a9930e4c_Range16(8469LLU,8473LLU,4LLU),_1a9930e4c_Range16(8474LLU,8477LLU,1LLU),_1a9930e4c_Range16(8484LLU,8488LLU,4LLU),_1a9930e4c_Range16(8489LLU,8492LLU,3LLU),_1a9930e4c_Range16(8493LLU,8495LLU,2LLU),_1a9930e4c_Range16(8496LLU,8497LLU,1LLU),_1a9930e4c_Range16(8499LLU,8504LLU,1LLU),_1a9930e4c_Range16(8508LLU,8511LLU,1LLU),_1a9930e4c_Range16(8517LLU,8521LLU,1LLU),_1a9930e4c_Range16(8597LLU,8601LLU,1LLU),_1a9930e4c_Range16(8604LLU,8607LLU,1LLU),_1a9930e4c_Range16(8609LLU,8610LLU,1LLU),_1a9930e4c_Range16(8612LLU,8613LLU,1LLU),_1a9930e4c_Range16(8615LLU,8617LLU,2LLU),_1a9930e4c_Range16(8618LLU,8621LLU,1LLU),_1a9930e4c_Range16(8624LLU,8625LLU,1LLU),_1a9930e4c_Range16(8630LLU,8631LLU,1LLU),_1a9930e4c_Range16(8636LLU,8653LLU,1LLU),_1a9930e4c_Range16(8656LLU,8657LLU,1LLU),_1a9930e4c_Range16(8659LLU,8661LLU,2LLU),_1a9930e4c_Range16(8662LLU,8667LLU,1LLU),_1a9930e4c_Range16(8669LLU,8676LLU,7LLU),_1a9930e4c_Range16(8677LLU,8968LLU,291LLU),_1a9930e4c_Range16(8969LLU,8971LLU,1LLU),_1a9930e4c_Range16(9140LLU,9141LLU,1LLU),_1a9930e4c_Range16(9143LLU,9168LLU,25LLU),_1a9930e4c_Range16(9186LLU,9632LLU,446LLU),_1a9930e4c_Range16(9633LLU,9646LLU,13LLU),_1a9930e4c_Range16(9647LLU,9654LLU,1LLU),_1a9930e4c_Range16(9660LLU,9664LLU,1LLU),_1a9930e4c_Range16(9670LLU,9671LLU,1LLU),_1a9930e4c_Range16(9674LLU,9675LLU,1LLU),_1a9930e4c_Range16(9679LLU,9683LLU,1LLU),_1a9930e4c_Range16(9698LLU,9700LLU,2LLU),_1a9930e4c_Range16(9703LLU,9708LLU,1LLU),_1a9930e4c_Range16(9733LLU,9734LLU,1LLU),_1a9930e4c_Range16(9792LLU,9794LLU,2LLU),_1a9930e4c_Range16(9824LLU,9827LLU,1LLU),_1a9930e4c_Range16(9837LLU,9838LLU,1LLU),_1a9930e4c_Range16(10181LLU,10182LLU,1LLU),_1a9930e4c_Range16(10214LLU,10223LLU,1LLU),_1a9930e4c_Range16(10627LLU,10648LLU,1LLU),_1a9930e4c_Range16(10712LLU,10715LLU,1LLU),_1a9930e4c_Range16(10748LLU,10749LLU,1LLU),_1a9930e4c_Range16(65121LLU,65123LLU,2LLU),_1a9930e4c_Range16(65128LLU,65340LLU,212LLU),_1a9930e4c_Range16(65342LLU,65342LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(119808LLU,119892LLU,1LLU),_1a9930e4c_Range32(119894LLU,119964LLU,1LLU),_1a9930e4c_Range32(119966LLU,119967LLU,1LLU),_1a9930e4c_Range32(119970LLU,119973LLU,3LLU),_1a9930e4c_Range32(119974LLU,119977LLU,3LLU),_1a9930e4c_Range32(119978LLU,119980LLU,1LLU),_1a9930e4c_Range32(119982LLU,119993LLU,1LLU),_1a9930e4c_Range32(119995LLU,119997LLU,2LLU),_1a9930e4c_Range32(119998LLU,120003LLU,1LLU),_1a9930e4c_Range32(120005LLU,120069LLU,1LLU),_1a9930e4c_Range32(120071LLU,120074LLU,1LLU),_1a9930e4c_Range32(120077LLU,120084LLU,1LLU),_1a9930e4c_Range32(120086LLU,120092LLU,1LLU),_1a9930e4c_Range32(120094LLU,120121LLU,1LLU),_1a9930e4c_Range32(120123LLU,120126LLU,1LLU),_1a9930e4c_Range32(120128LLU,120132LLU,1LLU),_1a9930e4c_Range32(120134LLU,120138LLU,4LLU),_1a9930e4c_Range32(120139LLU,120144LLU,1LLU),_1a9930e4c_Range32(120146LLU,120485LLU,1LLU),_1a9930e4c_Range32(120488LLU,120512LLU,1LLU),_1a9930e4c_Range32(120514LLU,120538LLU,1LLU),_1a9930e4c_Range32(120540LLU,120570LLU,1LLU),_1a9930e4c_Range32(120572LLU,120596LLU,1LLU),_1a9930e4c_Range32(120598LLU,120628LLU,1LLU),_1a9930e4c_Range32(120630LLU,120654LLU,1LLU),_1a9930e4c_Range32(120656LLU,120686LLU,1LLU),_1a9930e4c_Range32(120688LLU,120712LLU,1LLU),_1a9930e4c_Range32(120714LLU,120744LLU,1LLU),_1a9930e4c_Range32(120746LLU,120770LLU,1LLU),_1a9930e4c_Range32(120772LLU,120779LLU,1LLU),_1a9930e4c_Range32(120782LLU,120831LLU,1LLU),_1a9930e4c_Range32(126464LLU,126467LLU,1LLU),_1a9930e4c_Range32(126469LLU,126495LLU,1LLU),_1a9930e4c_Range32(126497LLU,126498LLU,1LLU),_1a9930e4c_Range32(126500LLU,126503LLU,3LLU),_1a9930e4c_Range32(126505LLU,126514LLU,1LLU),_1a9930e4c_Range32(126516LLU,126519LLU,1LLU),_1a9930e4c_Range32(126521LLU,126523LLU,2LLU),_1a9930e4c_Range32(126530LLU,126535LLU,5LLU),_1a9930e4c_Range32(126537LLU,126541LLU,2LLU),_1a9930e4c_Range32(126542LLU,126543LLU,1LLU),_1a9930e4c_Range32(126545LLU,126546LLU,1LLU),_1a9930e4c_Range32(126548LLU,126551LLU,3LLU),_1a9930e4c_Range32(126553LLU,126561LLU,2LLU),_1a9930e4c_Range32(126562LLU,126564LLU,2LLU),_1a9930e4c_Range32(126567LLU,126570LLU,1LLU),_1a9930e4c_Range32(126572LLU,126578LLU,1LLU),_1a9930e4c_Range32(126580LLU,126583LLU,1LLU),_1a9930e4c_Range32(126585LLU,126588LLU,1LLU),_1a9930e4c_Range32(126590LLU,126592LLU,2LLU),_1a9930e4c_Range32(126593LLU,126601LLU,1LLU),_1a9930e4c_Range32(126603LLU,126619LLU,1LLU),_1a9930e4c_Range32(126625LLU,126627LLU,1LLU),_1a9930e4c_Range32(126629LLU,126633LLU,1LLU),_1a9930e4c_Range32(126635LLU,126651LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__OTHER_UPPERCASE = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(8544LLU,8559LLU,1LLU),_1a9930e4c_Range16(9398LLU,9423LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(127280LLU,127305LLU,1LLU),_1a9930e4c_Range32(127312LLU,127337LLU,1LLU),_1a9930e4c_Range32(127344LLU,127369LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__PATTERN_SYNTAX = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(33LLU,47LLU,1LLU),_1a9930e4c_Range16(58LLU,64LLU,1LLU),_1a9930e4c_Range16(91LLU,94LLU,1LLU),_1a9930e4c_Range16(96LLU,123LLU,27LLU),_1a9930e4c_Range16(124LLU,126LLU,1LLU),_1a9930e4c_Range16(161LLU,167LLU,1LLU),_1a9930e4c_Range16(169LLU,171LLU,2LLU),_1a9930e4c_Range16(172LLU,176LLU,2LLU),_1a9930e4c_Range16(177LLU,187LLU,5LLU),_1a9930e4c_Range16(191LLU,215LLU,24LLU),_1a9930e4c_Range16(247LLU,8208LLU,7961LLU),_1a9930e4c_Range16(8209LLU,8231LLU,1LLU),_1a9930e4c_Range16(8240LLU,8254LLU,1LLU),_1a9930e4c_Range16(8257LLU,8275LLU,1LLU),_1a9930e4c_Range16(8277LLU,8286LLU,1LLU),_1a9930e4c_Range16(8592LLU,9311LLU,1LLU),_1a9930e4c_Range16(9472LLU,10101LLU,1LLU),_1a9930e4c_Range16(10132LLU,11263LLU,1LLU),_1a9930e4c_Range16(11776LLU,11903LLU,1LLU),_1a9930e4c_Range16(12289LLU,12291LLU,1LLU),_1a9930e4c_Range16(12296LLU,12320LLU,1LLU),_1a9930e4c_Range16(12336LLU,64830LLU,52494LLU),_1a9930e4c_Range16(64831LLU,65093LLU,262LLU),_1a9930e4c_Range16(65094LLU,65094LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),10LL));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__PATTERN_WHITE_SPACE = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(9LLU,13LLU,1LLU),_1a9930e4c_Range16(32LLU,133LLU,101LLU),_1a9930e4c_Range16(8206LLU,8207LLU,1LLU),_1a9930e4c_Range16(8232LLU,8233LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),2LL));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__PREPENDED_CONCATENATION_MARK = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(1536LLU,1541LLU,1LLU),_1a9930e4c_Range16(1757LLU,1807LLU,50LLU),_1a9930e4c_Range16(2192LLU,2193LLU,1LLU),_1a9930e4c_Range16(2274LLU,2274LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(69821LLU,69837LLU,16LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__QUOTATION_MARK = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(34LLU,39LLU,5LLU),_1a9930e4c_Range16(171LLU,187LLU,16LLU),_1a9930e4c_Range16(8216LLU,8223LLU,1LLU),_1a9930e4c_Range16(8249LLU,8250LLU,1LLU),_1a9930e4c_Range16(11842LLU,12300LLU,458LLU),_1a9930e4c_Range16(12301LLU,12303LLU,1LLU),_1a9930e4c_Range16(12317LLU,12319LLU,1LLU),_1a9930e4c_Range16(65089LLU,65092LLU,1LLU),_1a9930e4c_Range16(65282LLU,65287LLU,5LLU),_1a9930e4c_Range16(65378LLU,65379LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),2LL));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__RADICAL = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(11904LLU,11929LLU,1LLU),_1a9930e4c_Range16(11931LLU,12019LLU,1LLU),_1a9930e4c_Range16(12032LLU,12245LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__REGIONAL_INDICATOR = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(127462LLU,127487LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__SENTENCE_TERMINAL = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(33LLU,46LLU,13LLU),_1a9930e4c_Range16(63LLU,1417LLU,1354LLU),_1a9930e4c_Range16(1565LLU,1567LLU,1LLU),_1a9930e4c_Range16(1748LLU,1792LLU,44LLU),_1a9930e4c_Range16(1793LLU,1794LLU,1LLU),_1a9930e4c_Range16(2041LLU,2103LLU,62LLU),_1a9930e4c_Range16(2105LLU,2109LLU,4LLU),_1a9930e4c_Range16(2110LLU,2404LLU,294LLU),_1a9930e4c_Range16(2405LLU,4170LLU,1765LLU),_1a9930e4c_Range16(4171LLU,4962LLU,791LLU),_1a9930e4c_Range16(4967LLU,4968LLU,1LLU),_1a9930e4c_Range16(5742LLU,5941LLU,199LLU),_1a9930e4c_Range16(5942LLU,6147LLU,205LLU),_1a9930e4c_Range16(6153LLU,6468LLU,315LLU),_1a9930e4c_Range16(6469LLU,6824LLU,355LLU),_1a9930e4c_Range16(6825LLU,6827LLU,1LLU),_1a9930e4c_Range16(7002LLU,7003LLU,1LLU),_1a9930e4c_Range16(7006LLU,7007LLU,1LLU),_1a9930e4c_Range16(7037LLU,7038LLU,1LLU),_1a9930e4c_Range16(7227LLU,7228LLU,1LLU),_1a9930e4c_Range16(7294LLU,7295LLU,1LLU),_1a9930e4c_Range16(8252LLU,8253LLU,1LLU),_1a9930e4c_Range16(8263LLU,8265LLU,1LLU),_1a9930e4c_Range16(11822LLU,11836LLU,14LLU),_1a9930e4c_Range16(11859LLU,11860LLU,1LLU),_1a9930e4c_Range16(12290LLU,42239LLU,29949LLU),_1a9930e4c_Range16(42510LLU,42511LLU,1LLU),_1a9930e4c_Range16(42739LLU,42743LLU,4LLU),_1a9930e4c_Range16(43126LLU,43127LLU,1LLU),_1a9930e4c_Range16(43214LLU,43215LLU,1LLU),_1a9930e4c_Range16(43311LLU,43464LLU,153LLU),_1a9930e4c_Range16(43465LLU,43613LLU,148LLU),_1a9930e4c_Range16(43614LLU,43615LLU,1LLU),_1a9930e4c_Range16(43760LLU,43761LLU,1LLU),_1a9930e4c_Range16(44011LLU,65106LLU,21095LLU),_1a9930e4c_Range16(65110LLU,65111LLU,1LLU),_1a9930e4c_Range16(65281LLU,65294LLU,13LLU),_1a9930e4c_Range16(65311LLU,65377LLU,66LLU)}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(68182LLU,68183LLU,1LLU),_1a9930e4c_Range32(69461LLU,69465LLU,1LLU),_1a9930e4c_Range32(69510LLU,69513LLU,1LLU),_1a9930e4c_Range32(69703LLU,69704LLU,1LLU),_1a9930e4c_Range32(69822LLU,69825LLU,1LLU),_1a9930e4c_Range32(69953LLU,69955LLU,1LLU),_1a9930e4c_Range32(70085LLU,70086LLU,1LLU),_1a9930e4c_Range32(70093LLU,70110LLU,17LLU),_1a9930e4c_Range32(70111LLU,70200LLU,89LLU),_1a9930e4c_Range32(70201LLU,70203LLU,2LLU),_1a9930e4c_Range32(70204LLU,70313LLU,109LLU),_1a9930e4c_Range32(70731LLU,70732LLU,1LLU),_1a9930e4c_Range32(71106LLU,71107LLU,1LLU),_1a9930e4c_Range32(71113LLU,71127LLU,1LLU),_1a9930e4c_Range32(71233LLU,71234LLU,1LLU),_1a9930e4c_Range32(71484LLU,71486LLU,1LLU),_1a9930e4c_Range32(72004LLU,72006LLU,2LLU),_1a9930e4c_Range32(72258LLU,72259LLU,1LLU),_1a9930e4c_Range32(72347LLU,72348LLU,1LLU),_1a9930e4c_Range32(72769LLU,72770LLU,1LLU),_1a9930e4c_Range32(73463LLU,73464LLU,1LLU),_1a9930e4c_Range32(73539LLU,73540LLU,1LLU),_1a9930e4c_Range32(92782LLU,92783LLU,1LLU),_1a9930e4c_Range32(92917LLU,92983LLU,66LLU),_1a9930e4c_Range32(92984LLU,92996LLU,12LLU),_1a9930e4c_Range32(93848LLU,113823LLU,19975LLU),_1a9930e4c_Range32(121480LLU,121480LLU,1LLU)}),1LL));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__SOFT_DOTTED = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(105LLU,106LLU,1LLU),_1a9930e4c_Range16(303LLU,585LLU,282LLU),_1a9930e4c_Range16(616LLU,669LLU,53LLU),_1a9930e4c_Range16(690LLU,1011LLU,321LLU),_1a9930e4c_Range16(1110LLU,1112LLU,2LLU),_1a9930e4c_Range16(7522LLU,7574LLU,52LLU),_1a9930e4c_Range16(7588LLU,7592LLU,4LLU),_1a9930e4c_Range16(7725LLU,7883LLU,158LLU),_1a9930e4c_Range16(8305LLU,8520LLU,215LLU),_1a9930e4c_Range16(8521LLU,11388LLU,2867LLU)}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(119842LLU,119843LLU,1LLU),_1a9930e4c_Range32(119894LLU,119895LLU,1LLU),_1a9930e4c_Range32(119946LLU,119947LLU,1LLU),_1a9930e4c_Range32(119998LLU,119999LLU,1LLU),_1a9930e4c_Range32(120050LLU,120051LLU,1LLU),_1a9930e4c_Range32(120102LLU,120103LLU,1LLU),_1a9930e4c_Range32(120154LLU,120155LLU,1LLU),_1a9930e4c_Range32(120206LLU,120207LLU,1LLU),_1a9930e4c_Range32(120258LLU,120259LLU,1LLU),_1a9930e4c_Range32(120310LLU,120311LLU,1LLU),_1a9930e4c_Range32(120362LLU,120363LLU,1LLU),_1a9930e4c_Range32(120414LLU,120415LLU,1LLU),_1a9930e4c_Range32(120466LLU,120467LLU,1LLU),_1a9930e4c_Range32(122650LLU,122956LLU,306LLU),_1a9930e4c_Range32(122957LLU,122984LLU,27LLU)}),1LL));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__TERMINAL_PUNCTUATION = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(33LLU,44LLU,11LLU),_1a9930e4c_Range16(46LLU,58LLU,12LLU),_1a9930e4c_Range16(59LLU,63LLU,4LLU),_1a9930e4c_Range16(894LLU,903LLU,9LLU),_1a9930e4c_Range16(1417LLU,1475LLU,58LLU),_1a9930e4c_Range16(1548LLU,1563LLU,15LLU),_1a9930e4c_Range16(1565LLU,1567LLU,1LLU),_1a9930e4c_Range16(1748LLU,1792LLU,44LLU),_1a9930e4c_Range16(1793LLU,1802LLU,1LLU),_1a9930e4c_Range16(1804LLU,2040LLU,236LLU),_1a9930e4c_Range16(2041LLU,2096LLU,55LLU),_1a9930e4c_Range16(2097LLU,2110LLU,1LLU),_1a9930e4c_Range16(2142LLU,2404LLU,262LLU),_1a9930e4c_Range16(2405LLU,3674LLU,1269LLU),_1a9930e4c_Range16(3675LLU,3848LLU,173LLU),_1a9930e4c_Range16(3853LLU,3858LLU,1LLU),_1a9930e4c_Range16(4170LLU,4171LLU,1LLU),_1a9930e4c_Range16(4961LLU,4968LLU,1LLU),_1a9930e4c_Range16(5742LLU,5867LLU,125LLU),_1a9930e4c_Range16(5868LLU,5869LLU,1LLU),_1a9930e4c_Range16(5941LLU,5942LLU,1LLU),_1a9930e4c_Range16(6100LLU,6102LLU,1LLU),_1a9930e4c_Range16(6106LLU,6146LLU,40LLU),_1a9930e4c_Range16(6147LLU,6149LLU,1LLU),_1a9930e4c_Range16(6152LLU,6153LLU,1LLU),_1a9930e4c_Range16(6468LLU,6469LLU,1LLU),_1a9930e4c_Range16(6824LLU,6827LLU,1LLU),_1a9930e4c_Range16(7002LLU,7003LLU,1LLU),_1a9930e4c_Range16(7005LLU,7007LLU,1LLU),_1a9930e4c_Range16(7037LLU,7038LLU,1LLU),_1a9930e4c_Range16(7227LLU,7231LLU,1LLU),_1a9930e4c_Range16(7294LLU,7295LLU,1LLU),_1a9930e4c_Range16(8252LLU,8253LLU,1LLU),_1a9930e4c_Range16(8263LLU,8265LLU,1LLU),_1a9930e4c_Range16(11822LLU,11836LLU,14LLU),_1a9930e4c_Range16(11841LLU,11852LLU,11LLU),_1a9930e4c_Range16(11854LLU,11855LLU,1LLU),_1a9930e4c_Range16(11859LLU,11860LLU,1LLU),_1a9930e4c_Range16(12289LLU,12290LLU,1LLU),_1a9930e4c_Range16(42238LLU,42239LLU,1LLU),_1a9930e4c_Range16(42509LLU,42511LLU,1LLU),_1a9930e4c_Range16(42739LLU,42743LLU,1LLU),_1a9930e4c_Range16(43126LLU,43127LLU,1LLU),_1a9930e4c_Range16(43214LLU,43215LLU,1LLU),_1a9930e4c_Range16(43311LLU,43463LLU,152LLU),_1a9930e4c_Range16(43464LLU,43465LLU,1LLU),_1a9930e4c_Range16(43613LLU,43615LLU,1LLU),_1a9930e4c_Range16(43743LLU,43760LLU,17LLU),_1a9930e4c_Range16(43761LLU,44011LLU,250LLU),_1a9930e4c_Range16(65104LLU,65106LLU,1LLU),_1a9930e4c_Range16(65108LLU,65111LLU,1LLU),_1a9930e4c_Range16(65281LLU,65292LLU,11LLU),_1a9930e4c_Range16(65294LLU,65306LLU,12LLU),_1a9930e4c_Range16(65307LLU,65311LLU,4LLU),_1a9930e4c_Range16(65377LLU,65380LLU,3LLU)}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(66463LLU,66512LLU,49LLU),_1a9930e4c_Range32(67671LLU,67871LLU,200LLU),_1a9930e4c_Range32(68182LLU,68183LLU,1LLU),_1a9930e4c_Range32(68336LLU,68341LLU,1LLU),_1a9930e4c_Range32(68410LLU,68415LLU,1LLU),_1a9930e4c_Range32(68505LLU,68508LLU,1LLU),_1a9930e4c_Range32(69461LLU,69465LLU,1LLU),_1a9930e4c_Range32(69510LLU,69513LLU,1LLU),_1a9930e4c_Range32(69703LLU,69709LLU,1LLU),_1a9930e4c_Range32(69822LLU,69825LLU,1LLU),_1a9930e4c_Range32(69953LLU,69955LLU,1LLU),_1a9930e4c_Range32(70085LLU,70086LLU,1LLU),_1a9930e4c_Range32(70093LLU,70110LLU,17LLU),_1a9930e4c_Range32(70111LLU,70200LLU,89LLU),_1a9930e4c_Range32(70201LLU,70204LLU,1LLU),_1a9930e4c_Range32(70313LLU,70731LLU,418LLU),_1a9930e4c_Range32(70732LLU,70733LLU,1LLU),_1a9930e4c_Range32(70746LLU,70747LLU,1LLU),_1a9930e4c_Range32(71106LLU,71109LLU,1LLU),_1a9930e4c_Range32(71113LLU,71127LLU,1LLU),_1a9930e4c_Range32(71233LLU,71234LLU,1LLU),_1a9930e4c_Range32(71484LLU,71486LLU,1LLU),_1a9930e4c_Range32(72004LLU,72006LLU,2LLU),_1a9930e4c_Range32(72258LLU,72259LLU,1LLU),_1a9930e4c_Range32(72347LLU,72348LLU,1LLU),_1a9930e4c_Range32(72353LLU,72354LLU,1LLU),_1a9930e4c_Range32(72769LLU,72771LLU,1LLU),_1a9930e4c_Range32(72817LLU,73463LLU,646LLU),_1a9930e4c_Range32(73464LLU,73539LLU,75LLU),_1a9930e4c_Range32(73540LLU,74864LLU,1324LLU),_1a9930e4c_Range32(74865LLU,74868LLU,1LLU),_1a9930e4c_Range32(92782LLU,92783LLU,1LLU),_1a9930e4c_Range32(92917LLU,92983LLU,66LLU),_1a9930e4c_Range32(92984LLU,92985LLU,1LLU),_1a9930e4c_Range32(92996LLU,93847LLU,851LLU),_1a9930e4c_Range32(93848LLU,113823LLU,19975LLU),_1a9930e4c_Range32(121479LLU,121482LLU,1LLU)}),3LL));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__UNIFIED_IDEOGRAPH = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(13312LLU,19903LLU,1LLU),_1a9930e4c_Range16(19968LLU,40959LLU,1LLU),_1a9930e4c_Range16(64014LLU,64015LLU,1LLU),_1a9930e4c_Range16(64017LLU,64019LLU,2LLU),_1a9930e4c_Range16(64020LLU,64031LLU,11LLU),_1a9930e4c_Range16(64033LLU,64035LLU,2LLU),_1a9930e4c_Range16(64036LLU,64039LLU,3LLU),_1a9930e4c_Range16(64040LLU,64041LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(131072LLU,173791LLU,1LLU),_1a9930e4c_Range32(173824LLU,177977LLU,1LLU),_1a9930e4c_Range32(177984LLU,178205LLU,1LLU),_1a9930e4c_Range32(178208LLU,183969LLU,1LLU),_1a9930e4c_Range32(183984LLU,191456LLU,1LLU),_1a9930e4c_Range32(196608LLU,201546LLU,1LLU),_1a9930e4c_Range32(201552LLU,205743LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__VARIATION_SELECTOR = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(6155LLU,6157LLU,1LLU),_1a9930e4c_Range16(6159LLU,65024LLU,58865LLU),_1a9930e4c_Range16(65025LLU,65039LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(917760LLU,917999LLU,1LLU)}),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461__WHITE_SPACE = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(9LLU,13LLU,1LLU),_1a9930e4c_Range16(32LLU,133LLU,101LLU),_1a9930e4c_Range16(160LLU,5760LLU,5600LLU),_1a9930e4c_Range16(8192LLU,8202LLU,1LLU),_1a9930e4c_Range16(8232LLU,8233LLU,1LLU),_1a9930e4c_Range16(8239LLU,8287LLU,48LLU),_1a9930e4c_Range16(12288LLU,12288LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),2LL));
static jule::Array<jule::U16,128> _1b56c0461_ASCII_FOLD = jule::Array<jule::U16,128>({0LLU,1LLU,2LLU,3LLU,4LLU,5LLU,6LLU,7LLU,8LLU,9LLU,10LLU,11LLU,12LLU,13LLU,14LLU,15LLU,16LLU,17LLU,18LLU,19LLU,20LLU,21LLU,22LLU,23LLU,24LLU,25LLU,26LLU,27LLU,28LLU,29LLU,30LLU,31LLU,32LLU,33LLU,34LLU,35LLU,36LLU,37LLU,38LLU,39LLU,40LLU,41LLU,42LLU,43LLU,44LLU,45LLU,46LLU,47LLU,48LLU,49LLU,50LLU,51LLU,52LLU,53LLU,54LLU,55LLU,56LLU,57LLU,58LLU,59LLU,60LLU,61LLU,62LLU,63LLU,64LLU,97LLU,98LLU,99LLU,100LLU,101LLU,102LLU,103LLU,104LLU,105LLU,106LLU,107LLU,108LLU,109LLU,110LLU,111LLU,112LLU,113LLU,114LLU,115LLU,116LLU,117LLU,118LLU,119LLU,120LLU,121LLU,122LLU,91LLU,92LLU,93LLU,94LLU,95LLU,96LLU,65LLU,66LLU,67LLU,68LLU,69LLU,70LLU,71LLU,72LLU,73LLU,74LLU,8490LLU,76LLU,77LLU,78LLU,79LLU,80LLU,81LLU,82LLU,383LLU,84LLU,85LLU,86LLU,87LLU,88LLU,89LLU,90LLU,123LLU,124LLU,125LLU,126LLU,127LLU});
static jule::Slice<_1a9930e4c_FoldPair> _1b56c0461_CASE_ORBIT = jule::Slice<_1a9930e4c_FoldPair>({_1a9930e4c_FoldPair(75LLU,107LLU),_1a9930e4c_FoldPair(83LLU,115LLU),_1a9930e4c_FoldPair(107LLU,8490LLU),_1a9930e4c_FoldPair(115LLU,383LLU),_1a9930e4c_FoldPair(181LLU,924LLU),_1a9930e4c_FoldPair(197LLU,229LLU),_1a9930e4c_FoldPair(223LLU,7838LLU),_1a9930e4c_FoldPair(229LLU,8491LLU),_1a9930e4c_FoldPair(304LLU,304LLU),_1a9930e4c_FoldPair(305LLU,305LLU),_1a9930e4c_FoldPair(383LLU,83LLU),_1a9930e4c_FoldPair(452LLU,453LLU),_1a9930e4c_FoldPair(453LLU,454LLU),_1a9930e4c_FoldPair(454LLU,452LLU),_1a9930e4c_FoldPair(455LLU,456LLU),_1a9930e4c_FoldPair(456LLU,457LLU),_1a9930e4c_FoldPair(457LLU,455LLU),_1a9930e4c_FoldPair(458LLU,459LLU),_1a9930e4c_FoldPair(459LLU,460LLU),_1a9930e4c_FoldPair(460LLU,458LLU),_1a9930e4c_FoldPair(497LLU,498LLU),_1a9930e4c_FoldPair(498LLU,499LLU),_1a9930e4c_FoldPair(499LLU,497LLU),_1a9930e4c_FoldPair(837LLU,921LLU),_1a9930e4c_FoldPair(914LLU,946LLU),_1a9930e4c_FoldPair(917LLU,949LLU),_1a9930e4c_FoldPair(920LLU,952LLU),_1a9930e4c_FoldPair(921LLU,953LLU),_1a9930e4c_FoldPair(922LLU,954LLU),_1a9930e4c_FoldPair(924LLU,956LLU),_1a9930e4c_FoldPair(928LLU,960LLU),_1a9930e4c_FoldPair(929LLU,961LLU),_1a9930e4c_FoldPair(931LLU,962LLU),_1a9930e4c_FoldPair(934LLU,966LLU),_1a9930e4c_FoldPair(937LLU,969LLU),_1a9930e4c_FoldPair(946LLU,976LLU),_1a9930e4c_FoldPair(949LLU,1013LLU),_1a9930e4c_FoldPair(952LLU,977LLU),_1a9930e4c_FoldPair(953LLU,8126LLU),_1a9930e4c_FoldPair(954LLU,1008LLU),_1a9930e4c_FoldPair(956LLU,181LLU),_1a9930e4c_FoldPair(960LLU,982LLU),_1a9930e4c_FoldPair(961LLU,1009LLU),_1a9930e4c_FoldPair(962LLU,963LLU),_1a9930e4c_FoldPair(963LLU,931LLU),_1a9930e4c_FoldPair(966LLU,981LLU),_1a9930e4c_FoldPair(969LLU,8486LLU),_1a9930e4c_FoldPair(976LLU,914LLU),_1a9930e4c_FoldPair(977LLU,1012LLU),_1a9930e4c_FoldPair(981LLU,934LLU),_1a9930e4c_FoldPair(982LLU,928LLU),_1a9930e4c_FoldPair(1008LLU,922LLU),_1a9930e4c_FoldPair(1009LLU,929LLU),_1a9930e4c_FoldPair(1012LLU,920LLU),_1a9930e4c_FoldPair(1013LLU,917LLU),_1a9930e4c_FoldPair(1042LLU,1074LLU),_1a9930e4c_FoldPair(1044LLU,1076LLU),_1a9930e4c_FoldPair(1054LLU,1086LLU),_1a9930e4c_FoldPair(1057LLU,1089LLU),_1a9930e4c_FoldPair(1058LLU,1090LLU),_1a9930e4c_FoldPair(1066LLU,1098LLU),_1a9930e4c_FoldPair(1074LLU,7296LLU),_1a9930e4c_FoldPair(1076LLU,7297LLU),_1a9930e4c_FoldPair(1086LLU,7298LLU),_1a9930e4c_FoldPair(1089LLU,7299LLU),_1a9930e4c_FoldPair(1090LLU,7300LLU),_1a9930e4c_FoldPair(1098LLU,7302LLU),_1a9930e4c_FoldPair(1122LLU,1123LLU),_1a9930e4c_FoldPair(1123LLU,7303LLU),_1a9930e4c_FoldPair(7296LLU,1042LLU),_1a9930e4c_FoldPair(7297LLU,1044LLU),_1a9930e4c_FoldPair(7298LLU,1054LLU),_1a9930e4c_FoldPair(7299LLU,1057LLU),_1a9930e4c_FoldPair(7300LLU,7301LLU),_1a9930e4c_FoldPair(7301LLU,1058LLU),_1a9930e4c_FoldPair(7302LLU,1066LLU),_1a9930e4c_FoldPair(7303LLU,1122LLU),_1a9930e4c_FoldPair(7304LLU,42570LLU),_1a9930e4c_FoldPair(7776LLU,7777LLU),_1a9930e4c_FoldPair(7777LLU,7835LLU),_1a9930e4c_FoldPair(7835LLU,7776LLU),_1a9930e4c_FoldPair(7838LLU,223LLU),_1a9930e4c_FoldPair(8126LLU,837LLU),_1a9930e4c_FoldPair(8486LLU,937LLU),_1a9930e4c_FoldPair(8490LLU,75LLU),_1a9930e4c_FoldPair(8491LLU,197LLU),_1a9930e4c_FoldPair(42570LLU,42571LLU),_1a9930e4c_FoldPair(42571LLU,7304LLU)});
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_FOLD_L = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(837LLU,837LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_FOLD_LL = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(65LLU,90LLU,1LLU),_1a9930e4c_Range16(192LLU,214LLU,1LLU),_1a9930e4c_Range16(216LLU,222LLU,1LLU),_1a9930e4c_Range16(256LLU,302LLU,2LLU),_1a9930e4c_Range16(306LLU,310LLU,2LLU),_1a9930e4c_Range16(313LLU,327LLU,2LLU),_1a9930e4c_Range16(330LLU,376LLU,2LLU),_1a9930e4c_Range16(377LLU,381LLU,2LLU),_1a9930e4c_Range16(385LLU,386LLU,1LLU),_1a9930e4c_Range16(388LLU,390LLU,2LLU),_1a9930e4c_Range16(391LLU,393LLU,2LLU),_1a9930e4c_Range16(394LLU,395LLU,1LLU),_1a9930e4c_Range16(398LLU,401LLU,1LLU),_1a9930e4c_Range16(403LLU,404LLU,1LLU),_1a9930e4c_Range16(406LLU,408LLU,1LLU),_1a9930e4c_Range16(412LLU,413LLU,1LLU),_1a9930e4c_Range16(415LLU,416LLU,1LLU),_1a9930e4c_Range16(418LLU,422LLU,2LLU),_1a9930e4c_Range16(423LLU,425LLU,2LLU),_1a9930e4c_Range16(428LLU,430LLU,2LLU),_1a9930e4c_Range16(431LLU,433LLU,2LLU),_1a9930e4c_Range16(434LLU,435LLU,1LLU),_1a9930e4c_Range16(437LLU,439LLU,2LLU),_1a9930e4c_Range16(440LLU,444LLU,4LLU),_1a9930e4c_Range16(452LLU,453LLU,1LLU),_1a9930e4c_Range16(455LLU,456LLU,1LLU),_1a9930e4c_Range16(458LLU,459LLU,1LLU),_1a9930e4c_Range16(461LLU,475LLU,2LLU),_1a9930e4c_Range16(478LLU,494LLU,2LLU),_1a9930e4c_Range16(497LLU,498LLU,1LLU),_1a9930e4c_Range16(500LLU,502LLU,2LLU),_1a9930e4c_Range16(503LLU,504LLU,1LLU),_1a9930e4c_Range16(506LLU,562LLU,2LLU),_1a9930e4c_Range16(570LLU,571LLU,1LLU),_1a9930e4c_Range16(573LLU,574LLU,1LLU),_1a9930e4c_Range16(577LLU,579LLU,2LLU),_1a9930e4c_Range16(580LLU,582LLU,1LLU),_1a9930e4c_Range16(584LLU,590LLU,2LLU),_1a9930e4c_Range16(837LLU,880LLU,43LLU),_1a9930e4c_Range16(882LLU,886LLU,4LLU),_1a9930e4c_Range16(895LLU,902LLU,7LLU),_1a9930e4c_Range16(904LLU,906LLU,1LLU),_1a9930e4c_Range16(908LLU,910LLU,2LLU),_1a9930e4c_Range16(911LLU,913LLU,2LLU),_1a9930e4c_Range16(914LLU,929LLU,1LLU),_1a9930e4c_Range16(931LLU,939LLU,1LLU),_1a9930e4c_Range16(975LLU,984LLU,9LLU),_1a9930e4c_Range16(986LLU,1006LLU,2LLU),_1a9930e4c_Range16(1012LLU,1015LLU,3LLU),_1a9930e4c_Range16(1017LLU,1018LLU,1LLU),_1a9930e4c_Range16(1021LLU,1071LLU,1LLU),_1a9930e4c_Range16(1120LLU,1152LLU,2LLU),_1a9930e4c_Range16(1162LLU,1216LLU,2LLU),_1a9930e4c_Range16(1217LLU,1229LLU,2LLU),_1a9930e4c_Range16(1232LLU,1326LLU,2LLU),_1a9930e4c_Range16(1329LLU,1366LLU,1LLU),_1a9930e4c_Range16(4256LLU,4293LLU,1LLU),_1a9930e4c_Range16(4295LLU,4301LLU,6LLU),_1a9930e4c_Range16(5024LLU,5109LLU,1LLU),_1a9930e4c_Range16(7312LLU,7354LLU,1LLU),_1a9930e4c_Range16(7357LLU,7359LLU,1LLU),_1a9930e4c_Range16(7680LLU,7828LLU,2LLU),_1a9930e4c_Range16(7838LLU,7934LLU,2LLU),_1a9930e4c_Range16(7944LLU,7951LLU,1LLU),_1a9930e4c_Range16(7960LLU,7965LLU,1LLU),_1a9930e4c_Range16(7976LLU,7983LLU,1LLU),_1a9930e4c_Range16(7992LLU,7999LLU,1LLU),_1a9930e4c_Range16(8008LLU,8013LLU,1LLU),_1a9930e4c_Range16(8025LLU,8031LLU,2LLU),_1a9930e4c_Range16(8040LLU,8047LLU,1LLU),_1a9930e4c_Range16(8072LLU,8079LLU,1LLU),_1a9930e4c_Range16(8088LLU,8095LLU,1LLU),_1a9930e4c_Range16(8104LLU,8111LLU,1LLU),_1a9930e4c_Range16(8120LLU,8124LLU,1LLU),_1a9930e4c_Range16(8136LLU,8140LLU,1LLU),_1a9930e4c_Range16(8152LLU,8155LLU,1LLU),_1a9930e4c_Range16(8168LLU,8172LLU,1LLU),_1a9930e4c_Range16(8184LLU,8188LLU,1LLU),_1a9930e4c_Range16(8486LLU,8490LLU,4LLU),_1a9930e4c_Range16(8491LLU,8498LLU,7LLU),_1a9930e4c_Range16(8579LLU,11264LLU,2685LLU),_1a9930e4c_Range16(11265LLU,11311LLU,1LLU),_1a9930e4c_Range16(11360LLU,11362LLU,2LLU),_1a9930e4c_Range16(11363LLU,11364LLU,1LLU),_1a9930e4c_Range16(11367LLU,11373LLU,2LLU),_1a9930e4c_Range16(11374LLU,11376LLU,1LLU),_1a9930e4c_Range16(11378LLU,11381LLU,3LLU),_1a9930e4c_Range16(11390LLU,11392LLU,1LLU),_1a9930e4c_Range16(11394LLU,11490LLU,2LLU),_1a9930e4c_Range16(11499LLU,11501LLU,2LLU),_1a9930e4c_Range16(11506LLU,42560LLU,31054LLU),_1a9930e4c_Range16(42562LLU,42604LLU,2LLU),_1a9930e4c_Range16(42624LLU,42650LLU,2LLU),_1a9930e4c_Range16(42786LLU,42798LLU,2LLU),_1a9930e4c_Range16(42802LLU,42862LLU,2LLU),_1a9930e4c_Range16(42873LLU,42877LLU,2LLU),_1a9930e4c_Range16(42878LLU,42886LLU,2LLU),_1a9930e4c_Range16(42891LLU,42893LLU,2LLU),_1a9930e4c_Range16(42896LLU,42898LLU,2LLU),_1a9930e4c_Range16(42902LLU,42922LLU,2LLU),_1a9930e4c_Range16(42923LLU,42926LLU,1LLU),_1a9930e4c_Range16(42928LLU,42932LLU,1LLU),_1a9930e4c_Range16(42934LLU,42948LLU,2LLU),_1a9930e4c_Range16(42949LLU,42951LLU,1LLU),_1a9930e4c_Range16(42953LLU,42960LLU,7LLU),_1a9930e4c_Range16(42966LLU,42968LLU,2LLU),_1a9930e4c_Range16(42997LLU,65313LLU,22316LLU),_1a9930e4c_Range16(65314LLU,65338LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(66560LLU,66599LLU,1LLU),_1a9930e4c_Range32(66736LLU,66771LLU,1LLU),_1a9930e4c_Range32(66928LLU,66938LLU,1LLU),_1a9930e4c_Range32(66940LLU,66954LLU,1LLU),_1a9930e4c_Range32(66956LLU,66962LLU,1LLU),_1a9930e4c_Range32(66964LLU,66965LLU,1LLU),_1a9930e4c_Range32(68736LLU,68786LLU,1LLU),_1a9930e4c_Range32(71840LLU,71871LLU,1LLU),_1a9930e4c_Range32(93760LLU,93791LLU,1LLU),_1a9930e4c_Range32(125184LLU,125217LLU,1LLU)}),3LL));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_FOLD_LT = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(452LLU,454LLU,2LLU),_1a9930e4c_Range16(455LLU,457LLU,2LLU),_1a9930e4c_Range16(458LLU,460LLU,2LLU),_1a9930e4c_Range16(497LLU,499LLU,2LLU),_1a9930e4c_Range16(8064LLU,8071LLU,1LLU),_1a9930e4c_Range16(8080LLU,8087LLU,1LLU),_1a9930e4c_Range16(8096LLU,8103LLU,1LLU),_1a9930e4c_Range16(8115LLU,8131LLU,16LLU),_1a9930e4c_Range16(8179LLU,8179LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_FOLD_LU = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(97LLU,122LLU,1LLU),_1a9930e4c_Range16(181LLU,223LLU,42LLU),_1a9930e4c_Range16(224LLU,246LLU,1LLU),_1a9930e4c_Range16(248LLU,255LLU,1LLU),_1a9930e4c_Range16(257LLU,303LLU,2LLU),_1a9930e4c_Range16(307LLU,311LLU,2LLU),_1a9930e4c_Range16(314LLU,328LLU,2LLU),_1a9930e4c_Range16(331LLU,375LLU,2LLU),_1a9930e4c_Range16(378LLU,382LLU,2LLU),_1a9930e4c_Range16(383LLU,384LLU,1LLU),_1a9930e4c_Range16(387LLU,389LLU,2LLU),_1a9930e4c_Range16(392LLU,396LLU,4LLU),_1a9930e4c_Range16(402LLU,405LLU,3LLU),_1a9930e4c_Range16(409LLU,410LLU,1LLU),_1a9930e4c_Range16(414LLU,417LLU,3LLU),_1a9930e4c_Range16(419LLU,421LLU,2LLU),_1a9930e4c_Range16(424LLU,429LLU,5LLU),_1a9930e4c_Range16(432LLU,436LLU,4LLU),_1a9930e4c_Range16(438LLU,441LLU,3LLU),_1a9930e4c_Range16(445LLU,447LLU,2LLU),_1a9930e4c_Range16(453LLU,454LLU,1LLU),_1a9930e4c_Range16(456LLU,457LLU,1LLU),_1a9930e4c_Range16(459LLU,460LLU,1LLU),_1a9930e4c_Range16(462LLU,476LLU,2LLU),_1a9930e4c_Range16(477LLU,495LLU,2LLU),_1a9930e4c_Range16(498LLU,499LLU,1LLU),_1a9930e4c_Range16(501LLU,505LLU,4LLU),_1a9930e4c_Range16(507LLU,543LLU,2LLU),_1a9930e4c_Range16(547LLU,563LLU,2LLU),_1a9930e4c_Range16(572LLU,575LLU,3LLU),_1a9930e4c_Range16(576LLU,578LLU,2LLU),_1a9930e4c_Range16(583LLU,591LLU,2LLU),_1a9930e4c_Range16(592LLU,596LLU,1LLU),_1a9930e4c_Range16(598LLU,599LLU,1LLU),_1a9930e4c_Range16(601LLU,603LLU,2LLU),_1a9930e4c_Range16(604LLU,608LLU,4LLU),_1a9930e4c_Range16(609LLU,613LLU,2LLU),_1a9930e4c_Range16(614LLU,616LLU,2LLU),_1a9930e4c_Range16(617LLU,620LLU,1LLU),_1a9930e4c_Range16(623LLU,625LLU,2LLU),_1a9930e4c_Range16(626LLU,629LLU,3LLU),_1a9930e4c_Range16(637LLU,640LLU,3LLU),_1a9930e4c_Range16(642LLU,643LLU,1LLU),_1a9930e4c_Range16(647LLU,652LLU,1LLU),_1a9930e4c_Range16(658LLU,669LLU,11LLU),_1a9930e4c_Range16(670LLU,837LLU,167LLU),_1a9930e4c_Range16(881LLU,883LLU,2LLU),_1a9930e4c_Range16(887LLU,891LLU,4LLU),_1a9930e4c_Range16(892LLU,893LLU,1LLU),_1a9930e4c_Range16(940LLU,943LLU,1LLU),_1a9930e4c_Range16(945LLU,974LLU,1LLU),_1a9930e4c_Range16(976LLU,977LLU,1LLU),_1a9930e4c_Range16(981LLU,983LLU,1LLU),_1a9930e4c_Range16(985LLU,1007LLU,2LLU),_1a9930e4c_Range16(1008LLU,1011LLU,1LLU),_1a9930e4c_Range16(1013LLU,1019LLU,3LLU),_1a9930e4c_Range16(1072LLU,1119LLU,1LLU),_1a9930e4c_Range16(1121LLU,1153LLU,2LLU),_1a9930e4c_Range16(1163LLU,1215LLU,2LLU),_1a9930e4c_Range16(1218LLU,1230LLU,2LLU),_1a9930e4c_Range16(1231LLU,1327LLU,2LLU),_1a9930e4c_Range16(1377LLU,1414LLU,1LLU),_1a9930e4c_Range16(4304LLU,4346LLU,1LLU),_1a9930e4c_Range16(4349LLU,4351LLU,1LLU),_1a9930e4c_Range16(5112LLU,5117LLU,1LLU),_1a9930e4c_Range16(7296LLU,7304LLU,1LLU),_1a9930e4c_Range16(7545LLU,7549LLU,4LLU),_1a9930e4c_Range16(7566LLU,7681LLU,115LLU),_1a9930e4c_Range16(7683LLU,7829LLU,2LLU),_1a9930e4c_Range16(7835LLU,7841LLU,6LLU),_1a9930e4c_Range16(7843LLU,7935LLU,2LLU),_1a9930e4c_Range16(7936LLU,7943LLU,1LLU),_1a9930e4c_Range16(7952LLU,7957LLU,1LLU),_1a9930e4c_Range16(7968LLU,7975LLU,1LLU),_1a9930e4c_Range16(7984LLU,7991LLU,1LLU),_1a9930e4c_Range16(8000LLU,8005LLU,1LLU),_1a9930e4c_Range16(8017LLU,8023LLU,2LLU),_1a9930e4c_Range16(8032LLU,8039LLU,1LLU),_1a9930e4c_Range16(8048LLU,8061LLU,1LLU),_1a9930e4c_Range16(8112LLU,8113LLU,1LLU),_1a9930e4c_Range16(8126LLU,8144LLU,18LLU),_1a9930e4c_Range16(8145LLU,8160LLU,15LLU),_1a9930e4c_Range16(8161LLU,8165LLU,4LLU),_1a9930e4c_Range16(8526LLU,8580LLU,54LLU),_1a9930e4c_Range16(11312LLU,11359LLU,1LLU),_1a9930e4c_Range16(11361LLU,11365LLU,4LLU),_1a9930e4c_Range16(11366LLU,11372LLU,2LLU),_1a9930e4c_Range16(11379LLU,11382LLU,3LLU),_1a9930e4c_Range16(11393LLU,11491LLU,2LLU),_1a9930e4c_Range16(11500LLU,11502LLU,2LLU),_1a9930e4c_Range16(11507LLU,11520LLU,13LLU),_1a9930e4c_Range16(11521LLU,11557LLU,1LLU),_1a9930e4c_Range16(11559LLU,11565LLU,6LLU),_1a9930e4c_Range16(42561LLU,42605LLU,2LLU),_1a9930e4c_Range16(42625LLU,42651LLU,2LLU),_1a9930e4c_Range16(42787LLU,42799LLU,2LLU),_1a9930e4c_Range16(42803LLU,42863LLU,2LLU),_1a9930e4c_Range16(42874LLU,42876LLU,2LLU),_1a9930e4c_Range16(42879LLU,42887LLU,2LLU),_1a9930e4c_Range16(42892LLU,42897LLU,5LLU),_1a9930e4c_Range16(42899LLU,42900LLU,1LLU),_1a9930e4c_Range16(42903LLU,42921LLU,2LLU),_1a9930e4c_Range16(42933LLU,42947LLU,2LLU),_1a9930e4c_Range16(42952LLU,42954LLU,2LLU),_1a9930e4c_Range16(42961LLU,42967LLU,6LLU),_1a9930e4c_Range16(42969LLU,42998LLU,29LLU),_1a9930e4c_Range16(43859LLU,43888LLU,29LLU),_1a9930e4c_Range16(43889LLU,43967LLU,1LLU),_1a9930e4c_Range16(65345LLU,65370LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>({_1a9930e4c_Range32(66600LLU,66639LLU,1LLU),_1a9930e4c_Range32(66776LLU,66811LLU,1LLU),_1a9930e4c_Range32(66967LLU,66977LLU,1LLU),_1a9930e4c_Range32(66979LLU,66993LLU,1LLU),_1a9930e4c_Range32(66995LLU,67001LLU,1LLU),_1a9930e4c_Range32(67003LLU,67004LLU,1LLU),_1a9930e4c_Range32(68800LLU,68850LLU,1LLU),_1a9930e4c_Range32(71872LLU,71903LLU,1LLU),_1a9930e4c_Range32(93792LLU,93823LLU,1LLU),_1a9930e4c_Range32(125218LLU,125251LLU,1LLU)}),4LL));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_FOLD_M = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(921LLU,953LLU,32LLU),_1a9930e4c_Range16(8126LLU,8126LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_FOLD_MN = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(921LLU,953LLU,32LLU),_1a9930e4c_Range16(8126LLU,8126LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_FOLD_COMMON = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(924LLU,956LLU,32LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_FOLD_GREEK = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(181LLU,837LLU,656LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_FOLD_INHERITED = jule::new_struct<_1a9930e4c_RangeTable>(new( std::nothrow ) _1a9930e4c_RangeTable(jule::Slice<_1a9930e4c_Range16>({_1a9930e4c_Range16(921LLU,953LLU,32LLU),_1a9930e4c_Range16(8126LLU,8126LLU,1LLU)}),jule::Slice<_1a9930e4c_Range32>(),jule::Int()));
static jule::Array<jule::I32,33> _1b61ec5ec_PUNCTS = jule::Array<jule::I32,33>({'!','#','$',',','.','\'','\"',':',';','<','>','=','?','-','+','*','(',')','[',']','{','}','%','&','/','\\','@','^','_','`','|','~',166LL});
static jule::Array<jule::I32,5> _1b61ec5ec_SPACES = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
static jule::Array<jule::Str,6> _1b61ec5ec_UNARY_OPS = jule::Array<jule::Str,6>({jule::Str("-", 1),jule::Str("+", 1),jule::Str("^", 1),jule::Str("!", 1),jule::Str("*", 1),jule::Str("&", 1)});
static jule::Array<jule::Str,13> _1b61ec5ec_BIN_OPS = jule::Array<jule::Str,13>({jule::Str("+", 1),jule::Str("-", 1),jule::Str("*", 1),jule::Str("/", 1),jule::Str("%", 1),jule::Str("&", 1),jule::Str("|", 1),jule::Str("^", 1),jule::Str("<", 1),jule::Str(">", 1),jule::Str("!", 1),jule::Str("&&", 2),jule::Str("||", 2)});
static jule::Array<jule::Str,2> _1b61ec5ec_WEAK_OPS = jule::Array<jule::Str,2>({jule::Str("...", 3),jule::Str(":", 1)});
static jule::Array<jule::Str,2> _1b61ec5ec_POSTFIX_OPS = jule::Array<jule::Str,2>({jule::Str("++", 2),jule::Str("--", 2)});
static jule::Array<jule::Str,11> _1b61ec5ec_ASSING_OPS = jule::Array<jule::Str,11>({jule::Str("=", 1),jule::Str("+=", 2),jule::Str("-=", 2),jule::Str("/=", 2),jule::Str("*=", 2),jule::Str("%=", 2),jule::Str(">>=", 3),jule::Str("<<=", 3),jule::Str("|=", 2),jule::Str("&=", 2),jule::Str("^=", 2)});
static jule::Array<_1b62ba104_KindPair,46> _1b62ba104_KEYWORDS = jule::Array<_1b62ba104_KindPair,46>({_1b62ba104_KindPair(jule::Str("i8", 2),1LLU),_1b62ba104_KindPair(jule::Str("i16", 3),1LLU),_1b62ba104_KindPair(jule::Str("i32", 3),1LLU),_1b62ba104_KindPair(jule::Str("i64", 3),1LLU),_1b62ba104_KindPair(jule::Str("u8", 2),1LLU),_1b62ba104_KindPair(jule::Str("u16", 3),1LLU),_1b62ba104_KindPair(jule::Str("u32", 3),1LLU),_1b62ba104_KindPair(jule::Str("u64", 3),1LLU),_1b62ba104_KindPair(jule::Str("f32", 3),1LLU),_1b62ba104_KindPair(jule::Str("f64", 3),1LLU),_1b62ba104_KindPair(jule::Str("uint", 4),1LLU),_1b62ba104_KindPair(jule::Str("int", 3),1LLU),_1b62ba104_KindPair(jule::Str("uintptr", 7),1LLU),_1b62ba104_KindPair(jule::Str("bool", 4),1LLU),_1b62ba104_KindPair(jule::Str("str", 3),1LLU),_1b62ba104_KindPair(jule::Str("any", 3),1LLU),_1b62ba104_KindPair(jule::Str("true", 4),6LLU),_1b62ba104_KindPair(jule::Str("false", 5),6LLU),_1b62ba104_KindPair(jule::Str("nil", 3),6LLU),_1b62ba104_KindPair(jule::Str("const", 5),9LLU),_1b62ba104_KindPair(jule::Str("ret", 3),4LLU),_1b62ba104_KindPair(jule::Str("type", 4),10LLU),_1b62ba104_KindPair(jule::Str("for", 3),12LLU),_1b62ba104_KindPair(jule::Str("break", 5),13LLU),_1b62ba104_KindPair(jule::Str("continue", 8),14LLU),_1b62ba104_KindPair(jule::Str("in", 2),15LLU),_1b62ba104_KindPair(jule::Str("if", 2),16LLU),_1b62ba104_KindPair(jule::Str("else", 4),17LLU),_1b62ba104_KindPair(jule::Str("use", 3),19LLU),_1b62ba104_KindPair(jule::Str("pub", 3),21LLU),_1b62ba104_KindPair(jule::Str("goto", 4),22LLU),_1b62ba104_KindPair(jule::Str("enum", 4),24LLU),_1b62ba104_KindPair(jule::Str("struct", 6),25LLU),_1b62ba104_KindPair(jule::Str("co", 2),26LLU),_1b62ba104_KindPair(jule::Str("match", 5),27LLU),_1b62ba104_KindPair(jule::Str("self", 4),28LLU),_1b62ba104_KindPair(jule::Str("trait", 5),29LLU),_1b62ba104_KindPair(jule::Str("impl", 4),30LLU),_1b62ba104_KindPair(jule::Str("cpp", 3),31LLU),_1b62ba104_KindPair(jule::Str("fall", 4),32LLU),_1b62ba104_KindPair(jule::Str("fn", 2),33LLU),_1b62ba104_KindPair(jule::Str("let", 3),34LLU),_1b62ba104_KindPair(jule::Str("unsafe", 6),35LLU),_1b62ba104_KindPair(jule::Str("mut", 3),36LLU),_1b62ba104_KindPair(jule::Str("defer", 5),37LLU),_1b62ba104_KindPair(jule::Str("static", 6),38LLU)});
static jule::Array<_1b62ba104_KindPair,38> _1b62ba104_BASIC_OPS = jule::Array<_1b62ba104_KindPair,38>({_1b62ba104_KindPair(jule::Str("::", 2),23LLU),_1b62ba104_KindPair(jule::Str(":", 1),11LLU),_1b62ba104_KindPair(jule::Str(";", 1),5LLU),_1b62ba104_KindPair(jule::Str(",", 1),8LLU),_1b62ba104_KindPair(jule::Str("...", 3),7LLU),_1b62ba104_KindPair(jule::Str(".", 1),20LLU),_1b62ba104_KindPair(jule::Str("+=", 2),7LLU),_1b62ba104_KindPair(jule::Str("-=", 2),7LLU),_1b62ba104_KindPair(jule::Str("*=", 2),7LLU),_1b62ba104_KindPair(jule::Str("/=", 2),7LLU),_1b62ba104_KindPair(jule::Str("%=", 2),7LLU),_1b62ba104_KindPair(jule::Str("<<=", 3),7LLU),_1b62ba104_KindPair(jule::Str(">>=", 3),7LLU),_1b62ba104_KindPair(jule::Str("^=", 2),7LLU),_1b62ba104_KindPair(jule::Str("&=", 2),7LLU),_1b62ba104_KindPair(jule::Str("|=", 2),7LLU),_1b62ba104_KindPair(jule::Str("==", 2),7LLU),_1b62ba104_KindPair(jule::Str("!=", 2),7LLU),_1b62ba104_KindPair(jule::Str(">=", 2),7LLU),_1b62ba104_KindPair(jule::Str("<=", 2),7LLU),_1b62ba104_KindPair(jule::Str("&&", 2),7LLU),_1b62ba104_KindPair(jule::Str("||", 2),7LLU),_1b62ba104_KindPair(jule::Str("<<", 2),7LLU),_1b62ba104_KindPair(jule::Str(">>", 2),7LLU),_1b62ba104_KindPair(jule::Str("++", 2),7LLU),_1b62ba104_KindPair(jule::Str("--", 2),7LLU),_1b62ba104_KindPair(jule::Str("+", 1),7LLU),_1b62ba104_KindPair(jule::Str("-", 1),7LLU),_1b62ba104_KindPair(jule::Str("*", 1),7LLU),_1b62ba104_KindPair(jule::Str("/", 1),7LLU),_1b62ba104_KindPair(jule::Str("%", 1),7LLU),_1b62ba104_KindPair(jule::Str("&", 1),7LLU),_1b62ba104_KindPair(jule::Str("|", 1),7LLU),_1b62ba104_KindPair(jule::Str("^", 1),7LLU),_1b62ba104_KindPair(jule::Str("!", 1),7LLU),_1b62ba104_KindPair(jule::Str("<", 1),7LLU),_1b62ba104_KindPair(jule::Str(">", 1),7LLU),_1b62ba104_KindPair(jule::Str("=", 1),7LLU)});
static jule::Ref<_1b557cd24_FnIns> _1aae49684_BUILTIN_FN_OUT = jule::new_struct<_1b557cd24_FnIns>(new( std::nothrow ) _1b557cd24_FnIns());
static jule::Ref<_1b557cd24_FnIns> _1aae49684_BUILTIN_FN_OUTLN = jule::new_struct<_1b557cd24_FnIns>(new( std::nothrow ) _1b557cd24_FnIns());
static jule::Ref<_1b557cd24_FnIns> _1aae49684_BUILTIN_FN_NEW = jule::new_struct<_1b557cd24_FnIns>(new( std::nothrow ) _1b557cd24_FnIns());
static jule::Ref<_1b557cd24_FnIns> _1aae49684_BUILTIN_FN_DROP = jule::new_struct<_1b557cd24_FnIns>(new( std::nothrow ) _1b557cd24_FnIns());
static jule::Ref<_1b557cd24_FnIns> _1aae49684_BUILTIN_FN_PANIC = jule::new_struct<_1b557cd24_FnIns>(new( std::nothrow ) _1b557cd24_FnIns());
static jule::Ref<_1b557cd24_FnIns> _1aae49684_BUILTIN_FN_MAKE = jule::new_struct<_1b557cd24_FnIns>(new( std::nothrow ) _1b557cd24_FnIns());
static jule::Ref<_1b557cd24_FnIns> _1aae49684_BUILTIN_FN_APPEND = jule::new_struct<_1b557cd24_FnIns>(new( std::nothrow ) _1b557cd24_FnIns());
static jule::Ref<_1b557cd24_FnIns> _1aae49684_BUILTIN_FN_RECOVER = jule::new_struct<_1b557cd24_FnIns>(new( std::nothrow ) _1b557cd24_FnIns());
static jule::Ref<_1b557cd24_FnIns> _1aae49684_BUILTIN_FN_CLONE = jule::new_struct<_1b557cd24_FnIns>(new( std::nothrow ) _1b557cd24_FnIns());
static jule::Ref<_1b557cd24_FnIns> _1aae49684_BUILTIN_FN_STD_MEM_SIZE_OF = jule::new_struct<_1b557cd24_FnIns>(new( std::nothrow ) _1b557cd24_FnIns());
static jule::Ref<_1b557cd24_FnIns> _1aae49684_BUILTIN_FN_STD_MEM_ALIGN_OF = jule::new_struct<_1b557cd24_FnIns>(new( std::nothrow ) _1b557cd24_FnIns());
static jule::Ref<_1b557cd24_FnIns> _1aae49684_BUILTIN_FN_STD_JULE_INTEGRATED_TO_STR = jule::new_struct<_1b557cd24_FnIns>(new( std::nothrow ) _1b557cd24_FnIns());
static jule::Ref<_1b557cd24_FnIns> _1aae49684_BUILTIN_FN_REAL = jule::new_struct<_1b557cd24_FnIns>(new( std::nothrow ) _1b557cd24_FnIns(jule::Ref<_1b5e07a00_StructIns>(),jule::Ref<_1b557cd24_Fn>(),jule::Slice<jule::Ref<_1ac6d02c0_TypeKind>>(),jule::Slice<jule::Ref<_1b557cd24_ParamIns>>(),jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_1ac6d02c0_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1ab009de8_Scope>(),jule::Ref<_1b5589c76_ReferenceStack>(),jule::Ref<_1b5589c76_ReferenceStack>(),jule::Fn<jule::Ref<_1ab00dbcc_Data>(jule::Ref<_1ab00dbcc_Eval>&,jule::Ref<_1b61ca014_FnCallExpr>&,jule::Ref<_1ab00dbcc_Data>&)>(),jule::Bool(),jule::Bool()));
static jule::Ref<_1b557cd24_FnIns> _1aae49684_BUILTIN_FN_COPY = jule::new_struct<_1b557cd24_FnIns>(new( std::nothrow ) _1b557cd24_FnIns(jule::Ref<_1b5e07a00_StructIns>(),jule::Ref<_1b557cd24_Fn>(),jule::Slice<jule::Ref<_1ac6d02c0_TypeKind>>(),jule::Slice<jule::Ref<_1b557cd24_ParamIns>>(),jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_1ac6d02c0_build_prim_type(jule::Str("int", 3)))),jule::Ref<_1ab009de8_Scope>(),jule::Ref<_1b5589c76_ReferenceStack>(),jule::Ref<_1b5589c76_ReferenceStack>(),jule::Fn<jule::Ref<_1ab00dbcc_Data>(jule::Ref<_1ab00dbcc_Eval>&,jule::Ref<_1b61ca014_FnCallExpr>&,jule::Ref<_1ab00dbcc_Data>&)>(),jule::Bool(),jule::Bool()));
static jule::Ref<_1ac6d02c0_TypeAlias> _1aae49684_BUILTIN_TYPE_ALIAS_BYTE = jule::new_struct<_1ac6d02c0_TypeAlias>(new( std::nothrow ) _1ac6d02c0_TypeAlias(jule::Ref<_1b61ca014_ScopeTree>(),true,jule::Bool(),jule::Bool(),_1b61ec5ec_Token(),jule::Str(),jule::new_struct<_1ac6d02c0_TypeSymbol>(new( std::nothrow ) _1ac6d02c0_TypeSymbol(jule::Ref<_1b61ca014_TypeDecl>(),jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_1ac6d02c0_build_prim_type(jule::Str("u8", 2)))))),jule::Str(),jule::Slice<jule::Any>()));
static jule::Ref<_1ac6d02c0_TypeAlias> _1aae49684_BUILTIN_TYPE_ALIAS_RUNE = jule::new_struct<_1ac6d02c0_TypeAlias>(new( std::nothrow ) _1ac6d02c0_TypeAlias(jule::Ref<_1b61ca014_ScopeTree>(),true,jule::Bool(),jule::Bool(),_1b61ec5ec_Token(),jule::Str(),jule::new_struct<_1ac6d02c0_TypeSymbol>(new( std::nothrow ) _1ac6d02c0_TypeSymbol(jule::Ref<_1b61ca014_TypeDecl>(),jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_1ac6d02c0_build_prim_type(jule::Str("i32", 3)))))),jule::Str(),jule::Slice<jule::Any>()));
static jule::Ref<_1aaee9091_Trait> _1aae49684_BUILTIN_TRAIT_ERROR = jule::new_struct<_1aaee9091_Trait>(new( std::nothrow ) _1aaee9091_Trait(_1b61ec5ec_Token(),jule::Str("Error", 5),true,jule::Bool(),jule::Str(),jule::Slice<jule::Ref<_1b557cd24_Fn>>({jule::new_struct<_1b557cd24_Fn>(new( std::nothrow ) _1b557cd24_Fn(jule::Ref<_1ab195050_Sema>(),_1b61ec5ec_Token(),jule::Bool(),jule::Bool(),true,jule::Bool(),jule::Bool(),jule::Str("error", 5),jule::Slice<jule::Ref<_1b61ca014_Directive>>(),jule::Str(),jule::Ref<_1b61ca014_ScopeTree>(),jule::Slice<jule::Ref<_1b61ca014_GenericDecl>>(),jule::new_struct<_1b557cd24_RetType>(new( std::nothrow ) _1b557cd24_RetType(jule::new_struct<_1ac6d02c0_TypeSymbol>(new( std::nothrow ) _1ac6d02c0_TypeSymbol(jule::new_struct<_1b61ca014_TypeDecl>(new( std::nothrow ) _1b61ca014_TypeDecl(_1b61ec5ec_Token(),jule::Any(jule::new_struct<_1b61ca014_IdentTypeDecl>(new( std::nothrow ) _1b61ca014_IdentTypeDecl(_1b61ec5ec_Token(),jule::Str("str", 3),jule::Bool(),jule::Slice<jule::Ref<_1b61ca014_TypeDecl>>()))))),jule::Ref<_1ac6d02c0_TypeKind>())),jule::Slice<_1b61ec5ec_Token>())),jule::Slice<jule::Ref<_1b557cd24_Param>>({jule::new_struct<_1b557cd24_Param>(new( std::nothrow ) _1b557cd24_Param(_1b61ec5ec_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1ac6d02c0_TypeSymbol>(),jule::Str("self", 4)))}),jule::Ref<_1b5e07a00_Struct>(),jule::Slice<jule::Ref<_1b557cd24_FnIns>>()))}),jule::Slice<jule::Ref<_1b5e07a00_Struct>>()));
static jule::Ref<_1aaee9091_Trait> _1aae49684_BUILTIN_TRAIT_DISPOSE = jule::new_struct<_1aaee9091_Trait>(new( std::nothrow ) _1aaee9091_Trait(_1b61ec5ec_Token(),jule::Str("Dispose", 7),true,jule::Bool(),jule::Str(),jule::Slice<jule::Ref<_1b557cd24_Fn>>({jule::new_struct<_1b557cd24_Fn>(new( std::nothrow ) _1b557cd24_Fn(jule::Ref<_1ab195050_Sema>(),_1b61ec5ec_Token(),jule::Bool(),jule::Bool(),true,jule::Bool(),jule::Bool(),jule::Str("dispose", 7),jule::Slice<jule::Ref<_1b61ca014_Directive>>(),jule::Str(),jule::Ref<_1b61ca014_ScopeTree>(),jule::Slice<jule::Ref<_1b61ca014_GenericDecl>>(),jule::Ref<_1b557cd24_RetType>(),jule::Slice<jule::Ref<_1b557cd24_Param>>({jule::new_struct<_1b557cd24_Param>(new( std::nothrow ) _1b557cd24_Param(_1b61ec5ec_Token(),true,jule::Bool(),jule::Bool(),jule::Ref<_1ac6d02c0_TypeSymbol>(),jule::Str("self", 4)))}),jule::Ref<_1b5e07a00_Struct>(),jule::Slice<jule::Ref<_1b557cd24_FnIns>>()))}),jule::Slice<jule::Ref<_1b5e07a00_Struct>>()));
static jule::Slice<jule::Str> _1b6121345_FLAGS = nullptr;
static jule::Slice<jule::Any> _1b550a80c_deads = nullptr;
static jule::Slice<jule::Any> _1b550a80c_checking = nullptr;
static jule::Any _1b550a80c_current = jule::Any(nullptr);
static jule::Any _1b550a80c_main_current = jule::Any(nullptr);
static jule::Slice<jule::Int> _1ad0abb9b_MDAYS = jule::Slice<jule::Int>({31LL,30LL,31LL,30LL,31LL,31LL,30LL,31LL,30LL,31LL,31LL,29LL});
static jule::U64 _1acde57a4_INDENT = 0LLU;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_CUNEIFORM = _1b56c0461__CUNEIFORM;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_CYPRIOT = _1b56c0461__CYPRIOT;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_CYPRO_MINOAN = _1b56c0461__CYPRO_MINOAN;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_CYRILLIC = _1b56c0461__CYRILLIC;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_DESERET = _1b56c0461__DESERET;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_DEVANAGARI = _1b56c0461__DEVANAGARI;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_DIVES_AKURU = _1b56c0461__DIVES_AKURU;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_DOGRA = _1b56c0461__DOGRA;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_DUPLOYAN = _1b56c0461__DUPLOYAN;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_EGYPTIAN_HIEROGLYPHS = _1b56c0461__EGYPTIAN_HIEROGLYPHS;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_ELBASAN = _1b56c0461__ELBASAN;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_ELYMAIC = _1b56c0461__ELYMAIC;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_ETHIOPIC = _1b56c0461__ETHIOPIC;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_GEORGIAN = _1b56c0461__GEORGIAN;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_GLAGOLITIC = _1b56c0461__GLAGOLITIC;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_GOTHIC = _1b56c0461__GOTHIC;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_GRANTHA = _1b56c0461__GRANTHA;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_GREEK = _1b56c0461__GREEK;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_GUJARATI = _1b56c0461__GUJARATI;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_GUNJALA_GONDI = _1b56c0461__GUNJALA_GONDI;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_GURMUKHI = _1b56c0461__GURMUKHI;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_HAN = _1b56c0461__HAN;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_HANGUL = _1b56c0461__HANGUL;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_HANIFI_ROHINGYA = _1b56c0461__HANIFI_ROHINGYA;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_HANUNOO = _1b56c0461__HANUNOO;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_HATRAN = _1b56c0461__HATRAN;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_HEBREW = _1b56c0461__HEBREW;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_HIRAGANA = _1b56c0461__HIRAGANA;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_IMPERIAL_ARAMAIC = _1b56c0461__IMPERIAL_ARAMAIC;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_INHERITED = _1b56c0461__INHERITED;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_INSCRIPTIONAL_PAHLAVI = _1b56c0461__INSCRIPTIONAL_PAHLAVI;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_INSCRIPTIONAL_PARTHIAN = _1b56c0461__INSCRIPTIONAL_PARTHIAN;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_JAVANESE = _1b56c0461__JAVANESE;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_KAITHI = _1b56c0461__KAITHI;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_KANNADA = _1b56c0461__KANNADA;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_KATAKANA = _1b56c0461__KATAKANA;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_KAWI = _1b56c0461__KAWI;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_KAYAH_LI = _1b56c0461__KAYAH_LI;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_KHAROSHTHI = _1b56c0461__KHAROSHTHI;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_KHITAN_SMALL_SCRIPT = _1b56c0461__KHITAN_SMALL_SCRIPT;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_KHMER = _1b56c0461__KHMER;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_KHOJKI = _1b56c0461__KHOJKI;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_KHUDAWADI = _1b56c0461__KHUDAWADI;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_LAO = _1b56c0461__LAO;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_LATIN = _1b56c0461__LATIN;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_LEPCHA = _1b56c0461__LEPCHA;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_LIMBU = _1b56c0461__LIMBU;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_LINEAR_A = _1b56c0461__LINEAR_A;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_LINEAR_B = _1b56c0461__LINEAR_B;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_LISU = _1b56c0461__LISU;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_LYCIAN = _1b56c0461__LYCIAN;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_LYDIAN = _1b56c0461__LYDIAN;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_MAHAJANI = _1b56c0461__MAHAJANI;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_MAKASAR = _1b56c0461__MAKASAR;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_MALAYALAM = _1b56c0461__MALAYALAM;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_MANDAIC = _1b56c0461__MANDAIC;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_MANICHAEAN = _1b56c0461__MANICHAEAN;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_MARCHEN = _1b56c0461__MARCHEN;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_MASARAM_GONDI = _1b56c0461__MASARAM_GONDI;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_MEDEFAIDRIN = _1b56c0461__MEDEFAIDRIN;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_MEETEI_MAYEK = _1b56c0461__MEETEI_MAYEK;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_MENDE_KIKAKUI = _1b56c0461__MENDE_KIKAKUI;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_MEROITIC_CURSIVE = _1b56c0461__MEROITIC_CURSIVE;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_MEROITIC_HIEROGLYPHS = _1b56c0461__MEROITIC_HIEROGLYPHS;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_MIAO = _1b56c0461__MIAO;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_MODI = _1b56c0461__MODI;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_MONGOLIAN = _1b56c0461__MONGOLIAN;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_MRO = _1b56c0461__MRO;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_MULTANI = _1b56c0461__MULTANI;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_MYANMAR = _1b56c0461__MYANMAR;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_NABATAEAN = _1b56c0461__NABATAEAN;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_NAG_MUNDARI = _1b56c0461__NAG_MUNDARI;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_NANDINAGARI = _1b56c0461__NANDINAGARI;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_NEW_TAI_LUE = _1b56c0461__NEW_TAI_LUE;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_NEWA = _1b56c0461__NEWA;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_NKO = _1b56c0461__NKO;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_NUSHU = _1b56c0461__NUSHU;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_NYIAKENG_PUACHUE_HMONG = _1b56c0461__NYIAKENG_PUACHUE_HMONG;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_OGHAM = _1b56c0461__OGHAM;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_OL_CHIKI = _1b56c0461__OL_CHIKI;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_OLD_HUNGARIAN = _1b56c0461__OLD_HUNGARIAN;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_OLD_ITALIC = _1b56c0461__OLD_ITALIC;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_OLD_NORTH_ARABIAN = _1b56c0461__OLD_NORTH_ARABIAN;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_OLD_PERMIC = _1b56c0461__OLD_PERMIC;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_OLD_PERSIAN = _1b56c0461__OLD_PERSIAN;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_OLD_SOGDIAN = _1b56c0461__OLD_SOGDIAN;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_OLD_SOUTH_ARABIAN = _1b56c0461__OLD_SOUTH_ARABIAN;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_OLD_TURKIC = _1b56c0461__OLD_TURKIC;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_OLD_UYGHUR = _1b56c0461__OLD_UYGHUR;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_ORIYA = _1b56c0461__ORIYA;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_OSAGE = _1b56c0461__OSAGE;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_OSMANYA = _1b56c0461__OSMANYA;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_PAHAWH_HMONG = _1b56c0461__PAHAWH_HMONG;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_PALMYRENE = _1b56c0461__PALMYRENE;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_PAU_CIN_HAU = _1b56c0461__PAU_CIN_HAU;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_PHAGS_PA = _1b56c0461__PHAGS_PA;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_PHOENICIAN = _1b56c0461__PHOENICIAN;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_PSALTER_PAHLAVI = _1b56c0461__PSALTER_PAHLAVI;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_REJANG = _1b56c0461__REJANG;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_RUNIC = _1b56c0461__RUNIC;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_SAMARITAN = _1b56c0461__SAMARITAN;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_SAURASHTRA = _1b56c0461__SAURASHTRA;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_SHARADA = _1b56c0461__SHARADA;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_SHAVIAN = _1b56c0461__SHAVIAN;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_SIDDHAM = _1b56c0461__SIDDHAM;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_SIGN_WRITING = _1b56c0461__SIGN_WRITING;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_SINHALA = _1b56c0461__SINHALA;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_SOGDIAN = _1b56c0461__SOGDIAN;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_SORA_SOMPENG = _1b56c0461__SORA_SOMPENG;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_SOYOMBO = _1b56c0461__SOYOMBO;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_SUNDANESE = _1b56c0461__SUNDANESE;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_SYLOTI_NAGRI = _1b56c0461__SYLOTI_NAGRI;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_SYRIAC = _1b56c0461__SYRIAC;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_TAGALOG = _1b56c0461__TAGALOG;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_TAGBANWA = _1b56c0461__TAGBANWA;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_TAI_LE = _1b56c0461__TAI_LE;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_TAI_THAM = _1b56c0461__TAI_THAM;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_TAI_VIET = _1b56c0461__TAI_VIET;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_TAKRI = _1b56c0461__TAKRI;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_TAMIL = _1b56c0461__TAMIL;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_TANGSA = _1b56c0461__TANGSA;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_TANGUT = _1b56c0461__TANGUT;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_TELUGU = _1b56c0461__TELUGU;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_THAANA = _1b56c0461__THAANA;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_THAI = _1b56c0461__THAI;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_TIBETAN = _1b56c0461__TIBETAN;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_TIFINAGH = _1b56c0461__TIFINAGH;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_TIRHUTA = _1b56c0461__TIRHUTA;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_TOTO = _1b56c0461__TOTO;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_UGARITIC = _1b56c0461__UGARITIC;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_VAI = _1b56c0461__VAI;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_VITHKUQI = _1b56c0461__VITHKUQI;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_WANCHO = _1b56c0461__WANCHO;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_WARANG_CITI = _1b56c0461__WARANG_CITI;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_YEZIDI = _1b56c0461__YEZIDI;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_YI = _1b56c0461__YI;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_ZANABAZAR_SQUARE = _1b56c0461__ZANABAZAR_SQUARE;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_CC = _1b56c0461__CC;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_CF = _1b56c0461__CF;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_CO = _1b56c0461__CO;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_CS = _1b56c0461__CS;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_DIGIT = _1b56c0461__ND;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_ND = _1b56c0461__ND;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_LETTER = _1b56c0461__L;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_L = _1b56c0461__L;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_LM = _1b56c0461__LM;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_LO = _1b56c0461__LO;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_LOWER = _1b56c0461__LL;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_LL = _1b56c0461__LL;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_MARK = _1b56c0461__M;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_M = _1b56c0461__M;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_MC = _1b56c0461__MC;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_ME = _1b56c0461__ME;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_MN = _1b56c0461__MN;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_NL = _1b56c0461__NL;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_NO = _1b56c0461__NO;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_NUMBER = _1b56c0461__N;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_N = _1b56c0461__N;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_OTHER = _1b56c0461__C;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_C = _1b56c0461__C;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_PC = _1b56c0461__PC;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_PD = _1b56c0461__PD;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_PE = _1b56c0461__PE;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_PF = _1b56c0461__PF;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_PI = _1b56c0461__PI;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_PO = _1b56c0461__PO;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_PS = _1b56c0461__PS;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_PUNCT = _1b56c0461__P;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_P = _1b56c0461__P;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_SC = _1b56c0461__SC;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_ASCII_HEX_DIGIT = _1b56c0461__ASCII_HEX_DIGIT;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_BIDI_CONTROL = _1b56c0461__BIDI_CONTROL;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_DASH = _1b56c0461__DASH;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_DEPRECATED = _1b56c0461__DEPRECATED;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_DIACRITIC = _1b56c0461__DIACRITIC;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_EXTENDER = _1b56c0461__EXTENDER;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_HEX_DIGIT = _1b56c0461__HEX_DIGIT;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_HYPHEN = _1b56c0461__HYPHEN;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_IDS_BINARY_OPERATOR = _1b56c0461__IDS_BINARY_OPERATOR;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_IDS_TRINARY_OPERATOR = _1b56c0461__IDS_TRINARY_OPERATOR;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_IDEOGRAPHIC = _1b56c0461__IDEOGRAPHIC;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_JOIN_CONTROL = _1b56c0461__JOIN_CONTROL;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_LOGICAL_ORDER_EXCEPTION = _1b56c0461__LOGICAL_ORDER_EXCEPTION;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_NONCHARACTER_CODE_POINT = _1b56c0461__NONCHARACTER_CODE_POINT;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_OTHER_ALPHABETIC = _1b56c0461__OTHER_ALPHABETIC;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_OTHER_DEFAULT_IGNORABLE_CODE_POINT = _1b56c0461__OTHER_DEFAULT_IGNORABLE_CODE_POINT;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_OTHER_GRAPHEME_EXTEND = _1b56c0461__OTHER_GRAPHEME_EXTEND;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_OTHER_ID_CONTINUE = _1b56c0461__OTHER_ID_CONTINUE;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_OTHER_ID_START = _1b56c0461__OTHER_ID_START;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_OTHER_LOWERCASE = _1b56c0461__OTHER_LOWERCASE;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_OTHER_MATH = _1b56c0461__OTHER_MATH;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_OTHER_UPPERCASE = _1b56c0461__OTHER_UPPERCASE;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_PATTERN_SYNTAX = _1b56c0461__PATTERN_SYNTAX;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_PATTERN_WHITE_SPACE = _1b56c0461__PATTERN_WHITE_SPACE;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_PREPENDED_CONCATENATION_MARK = _1b56c0461__PREPENDED_CONCATENATION_MARK;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_QUOTATION_MARK = _1b56c0461__QUOTATION_MARK;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_RADICAL = _1b56c0461__RADICAL;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_REGIONAL_INDICATOR = _1b56c0461__REGIONAL_INDICATOR;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_SENTENCE_TERMINAL = _1b56c0461__SENTENCE_TERMINAL;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_SOFT_DOTTED = _1b56c0461__SOFT_DOTTED;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_TERMINAL_PUNCTUATION = _1b56c0461__TERMINAL_PUNCTUATION;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_UNIFIED_IDEOGRAPH = _1b56c0461__UNIFIED_IDEOGRAPH;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_VARIATION_SELECTOR = _1b56c0461__VARIATION_SELECTOR;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_WHITE_SPACE = _1b56c0461__WHITE_SPACE;
static jule::Map<jule::Str,jule::Ref<_1a9930e4c_RangeTable>> _1b56c0461_PROPERTIES = jule::Map<jule::Str,jule::Ref<_1a9930e4c_RangeTable>>({{jule::Str("ASCII_HEX_DIGIT", 15),_1b56c0461_ASCII_HEX_DIGIT},{jule::Str("BIDI_CONTROL", 12),_1b56c0461_BIDI_CONTROL},{jule::Str("DASH", 4),_1b56c0461_DASH},{jule::Str("DEPRECATED", 10),_1b56c0461_DEPRECATED},{jule::Str("DIACRITIC", 9),_1b56c0461_DIACRITIC},{jule::Str("EXTENDER", 8),_1b56c0461_EXTENDER},{jule::Str("HEX_DIGIT", 9),_1b56c0461_HEX_DIGIT},{jule::Str("HYPHEN", 6),_1b56c0461_HYPHEN},{jule::Str("IDS_BINARY_OPERATOR", 19),_1b56c0461_IDS_BINARY_OPERATOR},{jule::Str("IDS_TRINARY_OPERATOR", 20),_1b56c0461_IDS_TRINARY_OPERATOR},{jule::Str("IDEOGRAPHIC", 11),_1b56c0461_IDEOGRAPHIC},{jule::Str("JOIN_CONTROL", 12),_1b56c0461_JOIN_CONTROL},{jule::Str("LOGICAL_ORDER_EXCEPTION", 23),_1b56c0461_LOGICAL_ORDER_EXCEPTION},{jule::Str("NONCHARACTER_CODE_POINT", 23),_1b56c0461_NONCHARACTER_CODE_POINT},{jule::Str("OTHER_ALPHABETIC", 16),_1b56c0461_OTHER_ALPHABETIC},{jule::Str("OTHER_DEFAULT_IGNORABLE_CODE_POINT", 34),_1b56c0461_OTHER_DEFAULT_IGNORABLE_CODE_POINT},{jule::Str("OTHER_GRAPHEME_EXTEND", 21),_1b56c0461_OTHER_GRAPHEME_EXTEND},{jule::Str("OTHER_ID_CONTINUE", 17),_1b56c0461_OTHER_ID_CONTINUE},{jule::Str("OTHER_ID_START", 14),_1b56c0461_OTHER_ID_START},{jule::Str("OTHER_LOWERCASE", 15),_1b56c0461_OTHER_LOWERCASE},{jule::Str("OTHER_MATH", 10),_1b56c0461_OTHER_MATH},{jule::Str("OTHER_UPPERCASE", 15),_1b56c0461_OTHER_UPPERCASE},{jule::Str("PATTERN_SYNTAX", 14),_1b56c0461_PATTERN_SYNTAX},{jule::Str("PATTERN_WHITE_SPACE", 19),_1b56c0461_PATTERN_WHITE_SPACE},{jule::Str("PREPENDED_CONCATENATION_MARK", 28),_1b56c0461_PREPENDED_CONCATENATION_MARK},{jule::Str("QUOTATION_MARK", 14),_1b56c0461_QUOTATION_MARK},{jule::Str("RADICAL", 7),_1b56c0461_RADICAL},{jule::Str("REGIONAL_INDICATOR", 18),_1b56c0461_REGIONAL_INDICATOR},{jule::Str("SENTENCE_TERMINAL", 17),_1b56c0461_SENTENCE_TERMINAL},{jule::Str("SOFT_DOTTED", 11),_1b56c0461_SOFT_DOTTED},{jule::Str("TERMINAL_PUNCTUATION", 20),_1b56c0461_TERMINAL_PUNCTUATION},{jule::Str("UNIFIED_IDEOGRAPH", 17),_1b56c0461_UNIFIED_IDEOGRAPH},{jule::Str("VARIATION_SELECTOR", 18),_1b56c0461_VARIATION_SELECTOR},{jule::Str("WHITE_SPACE", 11),_1b56c0461_WHITE_SPACE}});
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_SK = _1b56c0461__SK;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_SM = _1b56c0461__SM;
static jule::Map<jule::Str,jule::Ref<_1a9930e4c_RangeTable>> _1b56c0461_FOLD_CATEGORY = jule::Map<jule::Str,jule::Ref<_1a9930e4c_RangeTable>>({{jule::Str("L", 1),_1b56c0461_FOLD_L},{jule::Str("LL", 2),_1b56c0461_FOLD_LL},{jule::Str("LT", 2),_1b56c0461_FOLD_LT},{jule::Str("LU", 2),_1b56c0461_FOLD_LU},{jule::Str("M", 1),_1b56c0461_FOLD_M},{jule::Str("MN", 2),_1b56c0461_FOLD_MN}});
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_SO = _1b56c0461__SO;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_SPACE = _1b56c0461__Z;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_Z = _1b56c0461__Z;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_SYMBOL = _1b56c0461__S;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_S = _1b56c0461__S;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_TITLE = _1b56c0461__LT;
static jule::Map<jule::Str,jule::Ref<_1a9930e4c_RangeTable>> _1b56c0461_FOLD_SCRIPT = jule::Map<jule::Str,jule::Ref<_1a9930e4c_RangeTable>>({{jule::Str("Common", 6),_1b56c0461_FOLD_COMMON},{jule::Str("Greek", 5),_1b56c0461_FOLD_GREEK},{jule::Str("Inherited", 9),_1b56c0461_FOLD_INHERITED}});
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_LT = _1b56c0461__LT;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_UPPER = _1b56c0461__LU;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_LU = _1b56c0461__LU;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_ZL = _1b56c0461__ZL;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_ZP = _1b56c0461__ZP;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_ZS = _1b56c0461__ZS;
static jule::Slice<jule::Ref<_1a9930e4c_RangeTable>> _1b5ac328c_GRAPHIC_RANGES = jule::Slice<jule::Ref<_1a9930e4c_RangeTable>>({_1b56c0461_L,_1b56c0461_M,_1b56c0461_N,_1b56c0461_P,_1b56c0461_S,_1b56c0461_ZS});
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_ADLAM = _1b56c0461__ADLAM;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_AHOM = _1b56c0461__AHOM;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_ANATOLIAN_HIEROGLYPHS = _1b56c0461__ANATOLIAN_HIEROGLYPHS;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_ARABIC = _1b56c0461__ARABIC;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_ARMENIAN = _1b56c0461__ARMENIAN;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_AVESTAN = _1b56c0461__AVESTAN;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_BALINESE = _1b56c0461__BALINESE;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_BAMUM = _1b56c0461__BAMUM;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_BASSA_VAH = _1b56c0461__BASSA_VAH;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_BATAK = _1b56c0461__BATAK;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_BENGALI = _1b56c0461__BENGALI;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_BHAIKSUKI = _1b56c0461__BHAIKSUKI;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_BOPOMOFO = _1b56c0461__BOPOMOFO;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_BRAHMI = _1b56c0461__BRAHMI;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_BRAILLE = _1b56c0461__BRAILLE;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_BUGINESE = _1b56c0461__BUGINESE;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_BUHID = _1b56c0461__BUHID;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_CANADIAN_ABORIGINAL = _1b56c0461__CANADIAN_ABORIGINAL;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_CARIAN = _1b56c0461__CARIAN;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_CAUCASIAN_ALBANIAN = _1b56c0461__CAUCASIAN_ALBANIAN;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_CHAKMA = _1b56c0461__CHAKMA;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_CHAM = _1b56c0461__CHAM;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_CHEROKEE = _1b56c0461__CHEROKEE;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_CHORASMIAN = _1b56c0461__CHORASMIAN;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_COMMON = _1b56c0461__COMMON;
static jule::Ref<_1a9930e4c_RangeTable> _1b56c0461_COPTIC = _1b56c0461__COPTIC;
static jule::Array<jule::Array<jule::Str,2>,4> _1cdd02591_HELP_MAP = jule::Array<jule::Array<jule::Str,2>,4>({jule::Array<jule::Str,2>({jule::Str("help", 4),jule::Str("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str("version", 7),jule::Str("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str("tool", 4),jule::Str("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str("julenv", 6),jule::Str("Show information about native jule environment", 46)})});
static jule::Map<jule::Str,jule::Ref<_1a9930e4c_RangeTable>> _1b56c0461_CATEGORIES = jule::Map<jule::Str,jule::Ref<_1a9930e4c_RangeTable>>({{jule::Str("C", 1),_1b56c0461_C},{jule::Str("CC", 2),_1b56c0461_CC},{jule::Str("CF", 2),_1b56c0461_CF},{jule::Str("CO", 2),_1b56c0461_CO},{jule::Str("CS", 2),_1b56c0461_CS},{jule::Str("L", 1),_1b56c0461_L},{jule::Str("LL", 2),_1b56c0461_LL},{jule::Str("LM", 2),_1b56c0461_LM},{jule::Str("LO", 2),_1b56c0461_LO},{jule::Str("LT", 2),_1b56c0461_LT},{jule::Str("LU", 2),_1b56c0461_LU},{jule::Str("M", 1),_1b56c0461_M},{jule::Str("MC", 2),_1b56c0461_MC},{jule::Str("ME", 2),_1b56c0461_ME},{jule::Str("MN", 2),_1b56c0461_MN},{jule::Str("N", 1),_1b56c0461_N},{jule::Str("ND", 2),_1b56c0461_ND},{jule::Str("NL", 2),_1b56c0461_NL},{jule::Str("NO", 2),_1b56c0461_NO},{jule::Str("P", 1),_1b56c0461_P},{jule::Str("PC", 2),_1b56c0461_PC},{jule::Str("PD", 2),_1b56c0461_PD},{jule::Str("PE", 2),_1b56c0461_PE},{jule::Str("PF", 2),_1b56c0461_PF},{jule::Str("PI", 2),_1b56c0461_PI},{jule::Str("PO", 2),_1b56c0461_PO},{jule::Str("PS", 2),_1b56c0461_PS},{jule::Str("S", 1),_1b56c0461_S},{jule::Str("SC", 2),_1b56c0461_SC},{jule::Str("SK", 2),_1b56c0461_SK},{jule::Str("SM", 2),_1b56c0461_SM},{jule::Str("SO", 2),_1b56c0461_SO},{jule::Str("Z", 1),_1b56c0461_Z},{jule::Str("ZL", 2),_1b56c0461_ZL},{jule::Str("ZP", 2),_1b56c0461_ZP},{jule::Str("ZS", 2),_1b56c0461_ZS}});
static jule::Array<jule::U8,256> _1b56c0461__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});
static jule::Str _1b614c8b0_OS = jule::Str("linux", 5);
static jule::Slice<_1a9930e4c_CaseRange> _1b56c0461__CASE_RANGES = jule::Slice<_1a9930e4c_CaseRange>({_1a9930e4c_CaseRange(65LLU,90LLU,jule::Array<jule::I32,3>({0LL,32LL,0LL})),_1a9930e4c_CaseRange(97LLU,122LLU,jule::Array<jule::I32,3>({-32LL,0LL,-32LL})),_1a9930e4c_CaseRange(181LLU,181LLU,jule::Array<jule::I32,3>({743LL,0LL,743LL})),_1a9930e4c_CaseRange(192LLU,214LLU,jule::Array<jule::I32,3>({0LL,32LL,0LL})),_1a9930e4c_CaseRange(216LLU,222LLU,jule::Array<jule::I32,3>({0LL,32LL,0LL})),_1a9930e4c_CaseRange(224LLU,246LLU,jule::Array<jule::I32,3>({-32LL,0LL,-32LL})),_1a9930e4c_CaseRange(248LLU,254LLU,jule::Array<jule::I32,3>({-32LL,0LL,-32LL})),_1a9930e4c_CaseRange(255LLU,255LLU,jule::Array<jule::I32,3>({121LL,0LL,121LL})),_1a9930e4c_CaseRange(256LLU,303LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1a9930e4c_CaseRange(304LLU,304LLU,jule::Array<jule::I32,3>({0LL,-199LL,0LL})),_1a9930e4c_CaseRange(305LLU,305LLU,jule::Array<jule::I32,3>({-232LL,0LL,-232LL})),_1a9930e4c_CaseRange(306LLU,311LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1a9930e4c_CaseRange(313LLU,328LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1a9930e4c_CaseRange(330LLU,375LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1a9930e4c_CaseRange(376LLU,376LLU,jule::Array<jule::I32,3>({0LL,-121LL,0LL})),_1a9930e4c_CaseRange(377LLU,382LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1a9930e4c_CaseRange(383LLU,383LLU,jule::Array<jule::I32,3>({-300LL,0LL,-300LL})),_1a9930e4c_CaseRange(384LLU,384LLU,jule::Array<jule::I32,3>({195LL,0LL,195LL})),_1a9930e4c_CaseRange(385LLU,385LLU,jule::Array<jule::I32,3>({0LL,210LL,0LL})),_1a9930e4c_CaseRange(386LLU,389LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1a9930e4c_CaseRange(390LLU,390LLU,jule::Array<jule::I32,3>({0LL,206LL,0LL})),_1a9930e4c_CaseRange(391LLU,392LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1a9930e4c_CaseRange(393LLU,394LLU,jule::Array<jule::I32,3>({0LL,205LL,0LL})),_1a9930e4c_CaseRange(395LLU,396LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1a9930e4c_CaseRange(398LLU,398LLU,jule::Array<jule::I32,3>({0LL,79LL,0LL})),_1a9930e4c_CaseRange(399LLU,399LLU,jule::Array<jule::I32,3>({0LL,202LL,0LL})),_1a9930e4c_CaseRange(400LLU,400LLU,jule::Array<jule::I32,3>({0LL,203LL,0LL})),_1a9930e4c_CaseRange(401LLU,402LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1a9930e4c_CaseRange(403LLU,403LLU,jule::Array<jule::I32,3>({0LL,205LL,0LL})),_1a9930e4c_CaseRange(404LLU,404LLU,jule::Array<jule::I32,3>({0LL,207LL,0LL})),_1a9930e4c_CaseRange(405LLU,405LLU,jule::Array<jule::I32,3>({97LL,0LL,97LL})),_1a9930e4c_CaseRange(406LLU,406LLU,jule::Array<jule::I32,3>({0LL,211LL,0LL})),_1a9930e4c_CaseRange(407LLU,407LLU,jule::Array<jule::I32,3>({0LL,209LL,0LL})),_1a9930e4c_CaseRange(408LLU,409LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1a9930e4c_CaseRange(410LLU,410LLU,jule::Array<jule::I32,3>({163LL,0LL,163LL})),_1a9930e4c_CaseRange(412LLU,412LLU,jule::Array<jule::I32,3>({0LL,211LL,0LL})),_1a9930e4c_CaseRange(413LLU,413LLU,jule::Array<jule::I32,3>({0LL,213LL,0LL})),_1a9930e4c_CaseRange(414LLU,414LLU,jule::Array<jule::I32,3>({130LL,0LL,130LL})),_1a9930e4c_CaseRange(415LLU,415LLU,jule::Array<jule::I32,3>({0LL,214LL,0LL})),_1a9930e4c_CaseRange(416LLU,421LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1a9930e4c_CaseRange(422LLU,422LLU,jule::Array<jule::I32,3>({0LL,218LL,0LL})),_1a9930e4c_CaseRange(423LLU,424LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1a9930e4c_CaseRange(425LLU,425LLU,jule::Array<jule::I32,3>({0LL,218LL,0LL})),_1a9930e4c_CaseRange(428LLU,429LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1a9930e4c_CaseRange(430LLU,430LLU,jule::Array<jule::I32,3>({0LL,218LL,0LL})),_1a9930e4c_CaseRange(431LLU,432LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1a9930e4c_CaseRange(433LLU,434LLU,jule::Array<jule::I32,3>({0LL,217LL,0LL})),_1a9930e4c_CaseRange(435LLU,438LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1a9930e4c_CaseRange(439LLU,439LLU,jule::Array<jule::I32,3>({0LL,219LL,0LL})),_1a9930e4c_CaseRange(440LLU,441LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1a9930e4c_CaseRange(444LLU,445LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1a9930e4c_CaseRange(447LLU,447LLU,jule::Array<jule::I32,3>({56LL,0LL,56LL})),_1a9930e4c_CaseRange(452LLU,452LLU,jule::Array<jule::I32,3>({0LL,2LL,1LL})),_1a9930e4c_CaseRange(453LLU,453LLU,jule::Array<jule::I32,3>({-1LL,1LL,0LL})),_1a9930e4c_CaseRange(454LLU,454LLU,jule::Array<jule::I32,3>({-2LL,0LL,-1LL})),_1a9930e4c_CaseRange(455LLU,455LLU,jule::Array<jule::I32,3>({0LL,2LL,1LL})),_1a9930e4c_CaseRange(456LLU,456LLU,jule::Array<jule::I32,3>({-1LL,1LL,0LL})),_1a9930e4c_CaseRange(457LLU,457LLU,jule::Array<jule::I32,3>({-2LL,0LL,-1LL})),_1a9930e4c_CaseRange(458LLU,458LLU,jule::Array<jule::I32,3>({0LL,2LL,1LL})),_1a9930e4c_CaseRange(459LLU,459LLU,jule::Array<jule::I32,3>({-1LL,1LL,0LL})),_1a9930e4c_CaseRange(460LLU,460LLU,jule::Array<jule::I32,3>({-2LL,0LL,-1LL})),_1a9930e4c_CaseRange(461LLU,476LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1a9930e4c_CaseRange(477LLU,477LLU,jule::Array<jule::I32,3>({-79LL,0LL,-79LL})),_1a9930e4c_CaseRange(478LLU,495LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1a9930e4c_CaseRange(497LLU,497LLU,jule::Array<jule::I32,3>({0LL,2LL,1LL})),_1a9930e4c_CaseRange(498LLU,498LLU,jule::Array<jule::I32,3>({-1LL,1LL,0LL})),_1a9930e4c_CaseRange(499LLU,499LLU,jule::Array<jule::I32,3>({-2LL,0LL,-1LL})),_1a9930e4c_CaseRange(500LLU,501LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1a9930e4c_CaseRange(502LLU,502LLU,jule::Array<jule::I32,3>({0LL,-97LL,0LL})),_1a9930e4c_CaseRange(503LLU,503LLU,jule::Array<jule::I32,3>({0LL,-56LL,0LL})),_1a9930e4c_CaseRange(504LLU,543LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1a9930e4c_CaseRange(544LLU,544LLU,jule::Array<jule::I32,3>({0LL,-130LL,0LL})),_1a9930e4c_CaseRange(546LLU,563LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1a9930e4c_CaseRange(570LLU,570LLU,jule::Array<jule::I32,3>({0LL,10795LL,0LL})),_1a9930e4c_CaseRange(571LLU,572LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1a9930e4c_CaseRange(573LLU,573LLU,jule::Array<jule::I32,3>({0LL,-163LL,0LL})),_1a9930e4c_CaseRange(574LLU,574LLU,jule::Array<jule::I32,3>({0LL,10792LL,0LL})),_1a9930e4c_CaseRange(575LLU,576LLU,jule::Array<jule::I32,3>({10815LL,0LL,10815LL})),_1a9930e4c_CaseRange(577LLU,578LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1a9930e4c_CaseRange(579LLU,579LLU,jule::Array<jule::I32,3>({0LL,-195LL,0LL})),_1a9930e4c_CaseRange(580LLU,580LLU,jule::Array<jule::I32,3>({0LL,69LL,0LL})),_1a9930e4c_CaseRange(581LLU,581LLU,jule::Array<jule::I32,3>({0LL,71LL,0LL})),_1a9930e4c_CaseRange(582LLU,591LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1a9930e4c_CaseRange(592LLU,592LLU,jule::Array<jule::I32,3>({10783LL,0LL,10783LL})),_1a9930e4c_CaseRange(593LLU,593LLU,jule::Array<jule::I32,3>({10780LL,0LL,10780LL})),_1a9930e4c_CaseRange(594LLU,594LLU,jule::Array<jule::I32,3>({10782LL,0LL,10782LL})),_1a9930e4c_CaseRange(595LLU,595LLU,jule::Array<jule::I32,3>({-210LL,0LL,-210LL})),_1a9930e4c_CaseRange(596LLU,596LLU,jule::Array<jule::I32,3>({-206LL,0LL,-206LL})),_1a9930e4c_CaseRange(598LLU,599LLU,jule::Array<jule::I32,3>({-205LL,0LL,-205LL})),_1a9930e4c_CaseRange(601LLU,601LLU,jule::Array<jule::I32,3>({-202LL,0LL,-202LL})),_1a9930e4c_CaseRange(603LLU,603LLU,jule::Array<jule::I32,3>({-203LL,0LL,-203LL})),_1a9930e4c_CaseRange(604LLU,604LLU,jule::Array<jule::I32,3>({42319LL,0LL,42319LL})),_1a9930e4c_CaseRange(608LLU,608LLU,jule::Array<jule::I32,3>({-205LL,0LL,-205LL})),_1a9930e4c_CaseRange(609LLU,609LLU,jule::Array<jule::I32,3>({42315LL,0LL,42315LL})),_1a9930e4c_CaseRange(611LLU,611LLU,jule::Array<jule::I32,3>({-207LL,0LL,-207LL})),_1a9930e4c_CaseRange(613LLU,613LLU,jule::Array<jule::I32,3>({42280LL,0LL,42280LL})),_1a9930e4c_CaseRange(614LLU,614LLU,jule::Array<jule::I32,3>({42308LL,0LL,42308LL})),_1a9930e4c_CaseRange(616LLU,616LLU,jule::Array<jule::I32,3>({-209LL,0LL,-209LL})),_1a9930e4c_CaseRange(617LLU,617LLU,jule::Array<jule::I32,3>({-211LL,0LL,-211LL})),_1a9930e4c_CaseRange(618LLU,618LLU,jule::Array<jule::I32,3>({42308LL,0LL,42308LL})),_1a9930e4c_CaseRange(619LLU,619LLU,jule::Array<jule::I32,3>({10743LL,0LL,10743LL})),_1a9930e4c_CaseRange(620LLU,620LLU,jule::Array<jule::I32,3>({42305LL,0LL,42305LL})),_1a9930e4c_CaseRange(623LLU,623LLU,jule::Array<jule::I32,3>({-211LL,0LL,-211LL})),_1a9930e4c_CaseRange(625LLU,625LLU,jule::Array<jule::I32,3>({10749LL,0LL,10749LL})),_1a9930e4c_CaseRange(626LLU,626LLU,jule::Array<jule::I32,3>({-213LL,0LL,-213LL})),_1a9930e4c_CaseRange(629LLU,629LLU,jule::Array<jule::I32,3>({-214LL,0LL,-214LL})),_1a9930e4c_CaseRange(637LLU,637LLU,jule::Array<jule::I32,3>({10727LL,0LL,10727LL})),_1a9930e4c_CaseRange(640LLU,640LLU,jule::Array<jule::I32,3>({-218LL,0LL,-218LL})),_1a9930e4c_CaseRange(642LLU,642LLU,jule::Array<jule::I32,3>({42307LL,0LL,42307LL})),_1a9930e4c_CaseRange(643LLU,643LLU,jule::Array<jule::I32,3>({-218LL,0LL,-218LL})),_1a9930e4c_CaseRange(647LLU,647LLU,jule::Array<jule::I32,3>({42282LL,0LL,42282LL})),_1a9930e4c_CaseRange(648LLU,648LLU,jule::Array<jule::I32,3>({-218LL,0LL,-218LL})),_1a9930e4c_CaseRange(649LLU,649LLU,jule::Array<jule::I32,3>({-69LL,0LL,-69LL})),_1a9930e4c_CaseRange(650LLU,651LLU,jule::Array<jule::I32,3>({-217LL,0LL,-217LL})),_1a9930e4c_CaseRange(652LLU,652LLU,jule::Array<jule::I32,3>({-71LL,0LL,-71LL})),_1a9930e4c_CaseRange(658LLU,658LLU,jule::Array<jule::I32,3>({-219LL,0LL,-219LL})),_1a9930e4c_CaseRange(669LLU,669LLU,jule::Array<jule::I32,3>({42261LL,0LL,42261LL})),_1a9930e4c_CaseRange(670LLU,670LLU,jule::Array<jule::I32,3>({42258LL,0LL,42258LL})),_1a9930e4c_CaseRange(837LLU,837LLU,jule::Array<jule::I32,3>({84LL,0LL,84LL})),_1a9930e4c_CaseRange(880LLU,883LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1a9930e4c_CaseRange(886LLU,887LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1a9930e4c_CaseRange(891LLU,893LLU,jule::Array<jule::I32,3>({130LL,0LL,130LL})),_1a9930e4c_CaseRange(895LLU,895LLU,jule::Array<jule::I32,3>({0LL,116LL,0LL})),_1a9930e4c_CaseRange(902LLU,902LLU,jule::Array<jule::I32,3>({0LL,38LL,0LL})),_1a9930e4c_CaseRange(904LLU,906LLU,jule::Array<jule::I32,3>({0LL,37LL,0LL})),_1a9930e4c_CaseRange(908LLU,908LLU,jule::Array<jule::I32,3>({0LL,64LL,0LL})),_1a9930e4c_CaseRange(910LLU,911LLU,jule::Array<jule::I32,3>({0LL,63LL,0LL})),_1a9930e4c_CaseRange(913LLU,929LLU,jule::Array<jule::I32,3>({0LL,32LL,0LL})),_1a9930e4c_CaseRange(931LLU,939LLU,jule::Array<jule::I32,3>({0LL,32LL,0LL})),_1a9930e4c_CaseRange(940LLU,940LLU,jule::Array<jule::I32,3>({-38LL,0LL,-38LL})),_1a9930e4c_CaseRange(941LLU,943LLU,jule::Array<jule::I32,3>({-37LL,0LL,-37LL})),_1a9930e4c_CaseRange(945LLU,961LLU,jule::Array<jule::I32,3>({-32LL,0LL,-32LL})),_1a9930e4c_CaseRange(962LLU,962LLU,jule::Array<jule::I32,3>({-31LL,0LL,-31LL})),_1a9930e4c_CaseRange(963LLU,971LLU,jule::Array<jule::I32,3>({-32LL,0LL,-32LL})),_1a9930e4c_CaseRange(972LLU,972LLU,jule::Array<jule::I32,3>({-64LL,0LL,-64LL})),_1a9930e4c_CaseRange(973LLU,974LLU,jule::Array<jule::I32,3>({-63LL,0LL,-63LL})),_1a9930e4c_CaseRange(975LLU,975LLU,jule::Array<jule::I32,3>({0LL,8LL,0LL})),_1a9930e4c_CaseRange(976LLU,976LLU,jule::Array<jule::I32,3>({-62LL,0LL,-62LL})),_1a9930e4c_CaseRange(977LLU,977LLU,jule::Array<jule::I32,3>({-57LL,0LL,-57LL})),_1a9930e4c_CaseRange(981LLU,981LLU,jule::Array<jule::I32,3>({-47LL,0LL,-47LL})),_1a9930e4c_CaseRange(982LLU,982LLU,jule::Array<jule::I32,3>({-54LL,0LL,-54LL})),_1a9930e4c_CaseRange(983LLU,983LLU,jule::Array<jule::I32,3>({-8LL,0LL,-8LL})),_1a9930e4c_CaseRange(984LLU,1007LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1a9930e4c_CaseRange(1008LLU,1008LLU,jule::Array<jule::I32,3>({-86LL,0LL,-86LL})),_1a9930e4c_CaseRange(1009LLU,1009LLU,jule::Array<jule::I32,3>({-80LL,0LL,-80LL})),_1a9930e4c_CaseRange(1010LLU,1010LLU,jule::Array<jule::I32,3>({7LL,0LL,7LL})),_1a9930e4c_CaseRange(1011LLU,1011LLU,jule::Array<jule::I32,3>({-116LL,0LL,-116LL})),_1a9930e4c_CaseRange(1012LLU,1012LLU,jule::Array<jule::I32,3>({0LL,-60LL,0LL})),_1a9930e4c_CaseRange(1013LLU,1013LLU,jule::Array<jule::I32,3>({-96LL,0LL,-96LL})),_1a9930e4c_CaseRange(1015LLU,1016LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1a9930e4c_CaseRange(1017LLU,1017LLU,jule::Array<jule::I32,3>({0LL,-7LL,0LL})),_1a9930e4c_CaseRange(1018LLU,1019LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1a9930e4c_CaseRange(1021LLU,1023LLU,jule::Array<jule::I32,3>({0LL,-130LL,0LL})),_1a9930e4c_CaseRange(1024LLU,1039LLU,jule::Array<jule::I32,3>({0LL,80LL,0LL})),_1a9930e4c_CaseRange(1040LLU,1071LLU,jule::Array<jule::I32,3>({0LL,32LL,0LL})),_1a9930e4c_CaseRange(1072LLU,1103LLU,jule::Array<jule::I32,3>({-32LL,0LL,-32LL})),_1a9930e4c_CaseRange(1104LLU,1119LLU,jule::Array<jule::I32,3>({-80LL,0LL,-80LL})),_1a9930e4c_CaseRange(1120LLU,1153LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1a9930e4c_CaseRange(1162LLU,1215LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1a9930e4c_CaseRange(1216LLU,1216LLU,jule::Array<jule::I32,3>({0LL,15LL,0LL})),_1a9930e4c_CaseRange(1217LLU,1230LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1a9930e4c_CaseRange(1231LLU,1231LLU,jule::Array<jule::I32,3>({-15LL,0LL,-15LL})),_1a9930e4c_CaseRange(1232LLU,1327LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1a9930e4c_CaseRange(1329LLU,1366LLU,jule::Array<jule::I32,3>({0LL,48LL,0LL})),_1a9930e4c_CaseRange(1377LLU,1414LLU,jule::Array<jule::I32,3>({-48LL,0LL,-48LL})),_1a9930e4c_CaseRange(4256LLU,4293LLU,jule::Array<jule::I32,3>({0LL,7264LL,0LL})),_1a9930e4c_CaseRange(4295LLU,4295LLU,jule::Array<jule::I32,3>({0LL,7264LL,0LL})),_1a9930e4c_CaseRange(4301LLU,4301LLU,jule::Array<jule::I32,3>({0LL,7264LL,0LL})),_1a9930e4c_CaseRange(4304LLU,4346LLU,jule::Array<jule::I32,3>({3008LL,0LL,0LL})),_1a9930e4c_CaseRange(4349LLU,4351LLU,jule::Array<jule::I32,3>({3008LL,0LL,0LL})),_1a9930e4c_CaseRange(5024LLU,5103LLU,jule::Array<jule::I32,3>({0LL,38864LL,0LL})),_1a9930e4c_CaseRange(5104LLU,5109LLU,jule::Array<jule::I32,3>({0LL,8LL,0LL})),_1a9930e4c_CaseRange(5112LLU,5117LLU,jule::Array<jule::I32,3>({-8LL,0LL,-8LL})),_1a9930e4c_CaseRange(7296LLU,7296LLU,jule::Array<jule::I32,3>({-6254LL,0LL,-6254LL})),_1a9930e4c_CaseRange(7297LLU,7297LLU,jule::Array<jule::I32,3>({-6253LL,0LL,-6253LL})),_1a9930e4c_CaseRange(7298LLU,7298LLU,jule::Array<jule::I32,3>({-6244LL,0LL,-6244LL})),_1a9930e4c_CaseRange(7299LLU,7300LLU,jule::Array<jule::I32,3>({-6242LL,0LL,-6242LL})),_1a9930e4c_CaseRange(7301LLU,7301LLU,jule::Array<jule::I32,3>({-6243LL,0LL,-6243LL})),_1a9930e4c_CaseRange(7302LLU,7302LLU,jule::Array<jule::I32,3>({-6236LL,0LL,-6236LL})),_1a9930e4c_CaseRange(7303LLU,7303LLU,jule::Array<jule::I32,3>({-6181LL,0LL,-6181LL})),_1a9930e4c_CaseRange(7304LLU,7304LLU,jule::Array<jule::I32,3>({35266LL,0LL,35266LL})),_1a9930e4c_CaseRange(7312LLU,7354LLU,jule::Array<jule::I32,3>({0LL,-3008LL,0LL})),_1a9930e4c_CaseRange(7357LLU,7359LLU,jule::Array<jule::I32,3>({0LL,-3008LL,0LL})),_1a9930e4c_CaseRange(7545LLU,7545LLU,jule::Array<jule::I32,3>({35332LL,0LL,35332LL})),_1a9930e4c_CaseRange(7549LLU,7549LLU,jule::Array<jule::I32,3>({3814LL,0LL,3814LL})),_1a9930e4c_CaseRange(7566LLU,7566LLU,jule::Array<jule::I32,3>({35384LL,0LL,35384LL})),_1a9930e4c_CaseRange(7680LLU,7829LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1a9930e4c_CaseRange(7835LLU,7835LLU,jule::Array<jule::I32,3>({-59LL,0LL,-59LL})),_1a9930e4c_CaseRange(7838LLU,7838LLU,jule::Array<jule::I32,3>({0LL,-7615LL,0LL})),_1a9930e4c_CaseRange(7840LLU,7935LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1a9930e4c_CaseRange(7936LLU,7943LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1a9930e4c_CaseRange(7944LLU,7951LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1a9930e4c_CaseRange(7952LLU,7957LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1a9930e4c_CaseRange(7960LLU,7965LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1a9930e4c_CaseRange(7968LLU,7975LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1a9930e4c_CaseRange(7976LLU,7983LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1a9930e4c_CaseRange(7984LLU,7991LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1a9930e4c_CaseRange(7992LLU,7999LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1a9930e4c_CaseRange(8000LLU,8005LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1a9930e4c_CaseRange(8008LLU,8013LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1a9930e4c_CaseRange(8017LLU,8017LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1a9930e4c_CaseRange(8019LLU,8019LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1a9930e4c_CaseRange(8021LLU,8021LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1a9930e4c_CaseRange(8023LLU,8023LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1a9930e4c_CaseRange(8025LLU,8025LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1a9930e4c_CaseRange(8027LLU,8027LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1a9930e4c_CaseRange(8029LLU,8029LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1a9930e4c_CaseRange(8031LLU,8031LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1a9930e4c_CaseRange(8032LLU,8039LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1a9930e4c_CaseRange(8040LLU,8047LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1a9930e4c_CaseRange(8048LLU,8049LLU,jule::Array<jule::I32,3>({74LL,0LL,74LL})),_1a9930e4c_CaseRange(8050LLU,8053LLU,jule::Array<jule::I32,3>({86LL,0LL,86LL})),_1a9930e4c_CaseRange(8054LLU,8055LLU,jule::Array<jule::I32,3>({100LL,0LL,100LL})),_1a9930e4c_CaseRange(8056LLU,8057LLU,jule::Array<jule::I32,3>({128LL,0LL,128LL})),_1a9930e4c_CaseRange(8058LLU,8059LLU,jule::Array<jule::I32,3>({112LL,0LL,112LL})),_1a9930e4c_CaseRange(8060LLU,8061LLU,jule::Array<jule::I32,3>({126LL,0LL,126LL})),_1a9930e4c_CaseRange(8064LLU,8071LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1a9930e4c_CaseRange(8072LLU,8079LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1a9930e4c_CaseRange(8080LLU,8087LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1a9930e4c_CaseRange(8088LLU,8095LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1a9930e4c_CaseRange(8096LLU,8103LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1a9930e4c_CaseRange(8104LLU,8111LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1a9930e4c_CaseRange(8112LLU,8113LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1a9930e4c_CaseRange(8115LLU,8115LLU,jule::Array<jule::I32,3>({9LL,0LL,9LL})),_1a9930e4c_CaseRange(8120LLU,8121LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1a9930e4c_CaseRange(8122LLU,8123LLU,jule::Array<jule::I32,3>({0LL,-74LL,0LL})),_1a9930e4c_CaseRange(8124LLU,8124LLU,jule::Array<jule::I32,3>({0LL,-9LL,0LL})),_1a9930e4c_CaseRange(8126LLU,8126LLU,jule::Array<jule::I32,3>({-7205LL,0LL,-7205LL})),_1a9930e4c_CaseRange(8131LLU,8131LLU,jule::Array<jule::I32,3>({9LL,0LL,9LL})),_1a9930e4c_CaseRange(8136LLU,8139LLU,jule::Array<jule::I32,3>({0LL,-86LL,0LL})),_1a9930e4c_CaseRange(8140LLU,8140LLU,jule::Array<jule::I32,3>({0LL,-9LL,0LL})),_1a9930e4c_CaseRange(8144LLU,8145LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1a9930e4c_CaseRange(8152LLU,8153LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1a9930e4c_CaseRange(8154LLU,8155LLU,jule::Array<jule::I32,3>({0LL,-100LL,0LL})),_1a9930e4c_CaseRange(8160LLU,8161LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1a9930e4c_CaseRange(8165LLU,8165LLU,jule::Array<jule::I32,3>({7LL,0LL,7LL})),_1a9930e4c_CaseRange(8168LLU,8169LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1a9930e4c_CaseRange(8170LLU,8171LLU,jule::Array<jule::I32,3>({0LL,-112LL,0LL})),_1a9930e4c_CaseRange(8172LLU,8172LLU,jule::Array<jule::I32,3>({0LL,-7LL,0LL})),_1a9930e4c_CaseRange(8179LLU,8179LLU,jule::Array<jule::I32,3>({9LL,0LL,9LL})),_1a9930e4c_CaseRange(8184LLU,8185LLU,jule::Array<jule::I32,3>({0LL,-128LL,0LL})),_1a9930e4c_CaseRange(8186LLU,8187LLU,jule::Array<jule::I32,3>({0LL,-126LL,0LL})),_1a9930e4c_CaseRange(8188LLU,8188LLU,jule::Array<jule::I32,3>({0LL,-9LL,0LL})),_1a9930e4c_CaseRange(8486LLU,8486LLU,jule::Array<jule::I32,3>({0LL,-7517LL,0LL})),_1a9930e4c_CaseRange(8490LLU,8490LLU,jule::Array<jule::I32,3>({0LL,-8383LL,0LL})),_1a9930e4c_CaseRange(8491LLU,8491LLU,jule::Array<jule::I32,3>({0LL,-8262LL,0LL})),_1a9930e4c_CaseRange(8498LLU,8498LLU,jule::Array<jule::I32,3>({0LL,28LL,0LL})),_1a9930e4c_CaseRange(8526LLU,8526LLU,jule::Array<jule::I32,3>({-28LL,0LL,-28LL})),_1a9930e4c_CaseRange(8544LLU,8559LLU,jule::Array<jule::I32,3>({0LL,16LL,0LL})),_1a9930e4c_CaseRange(8560LLU,8575LLU,jule::Array<jule::I32,3>({-16LL,0LL,-16LL})),_1a9930e4c_CaseRange(8579LLU,8580LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1a9930e4c_CaseRange(9398LLU,9423LLU,jule::Array<jule::I32,3>({0LL,26LL,0LL})),_1a9930e4c_CaseRange(9424LLU,9449LLU,jule::Array<jule::I32,3>({-26LL,0LL,-26LL})),_1a9930e4c_CaseRange(11264LLU,11311LLU,jule::Array<jule::I32,3>({0LL,48LL,0LL})),_1a9930e4c_CaseRange(11312LLU,11359LLU,jule::Array<jule::I32,3>({-48LL,0LL,-48LL})),_1a9930e4c_CaseRange(11360LLU,11361LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1a9930e4c_CaseRange(11362LLU,11362LLU,jule::Array<jule::I32,3>({0LL,-10743LL,0LL})),_1a9930e4c_CaseRange(11363LLU,11363LLU,jule::Array<jule::I32,3>({0LL,-3814LL,0LL})),_1a9930e4c_CaseRange(11364LLU,11364LLU,jule::Array<jule::I32,3>({0LL,-10727LL,0LL})),_1a9930e4c_CaseRange(11365LLU,11365LLU,jule::Array<jule::I32,3>({-10795LL,0LL,-10795LL})),_1a9930e4c_CaseRange(11366LLU,11366LLU,jule::Array<jule::I32,3>({-10792LL,0LL,-10792LL})),_1a9930e4c_CaseRange(11367LLU,11372LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1a9930e4c_CaseRange(11373LLU,11373LLU,jule::Array<jule::I32,3>({0LL,-10780LL,0LL})),_1a9930e4c_CaseRange(11374LLU,11374LLU,jule::Array<jule::I32,3>({0LL,-10749LL,0LL})),_1a9930e4c_CaseRange(11375LLU,11375LLU,jule::Array<jule::I32,3>({0LL,-10783LL,0LL})),_1a9930e4c_CaseRange(11376LLU,11376LLU,jule::Array<jule::I32,3>({0LL,-10782LL,0LL})),_1a9930e4c_CaseRange(11378LLU,11379LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1a9930e4c_CaseRange(11381LLU,11382LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1a9930e4c_CaseRange(11390LLU,11391LLU,jule::Array<jule::I32,3>({0LL,-10815LL,0LL})),_1a9930e4c_CaseRange(11392LLU,11491LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1a9930e4c_CaseRange(11499LLU,11502LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1a9930e4c_CaseRange(11506LLU,11507LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1a9930e4c_CaseRange(11520LLU,11557LLU,jule::Array<jule::I32,3>({-7264LL,0LL,-7264LL})),_1a9930e4c_CaseRange(11559LLU,11559LLU,jule::Array<jule::I32,3>({-7264LL,0LL,-7264LL})),_1a9930e4c_CaseRange(11565LLU,11565LLU,jule::Array<jule::I32,3>({-7264LL,0LL,-7264LL})),_1a9930e4c_CaseRange(42560LLU,42605LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1a9930e4c_CaseRange(42624LLU,42651LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1a9930e4c_CaseRange(42786LLU,42799LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1a9930e4c_CaseRange(42802LLU,42863LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1a9930e4c_CaseRange(42873LLU,42876LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1a9930e4c_CaseRange(42877LLU,42877LLU,jule::Array<jule::I32,3>({0LL,-35332LL,0LL})),_1a9930e4c_CaseRange(42878LLU,42887LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1a9930e4c_CaseRange(42891LLU,42892LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1a9930e4c_CaseRange(42893LLU,42893LLU,jule::Array<jule::I32,3>({0LL,-42280LL,0LL})),_1a9930e4c_CaseRange(42896LLU,42899LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1a9930e4c_CaseRange(42900LLU,42900LLU,jule::Array<jule::I32,3>({48LL,0LL,48LL})),_1a9930e4c_CaseRange(42902LLU,42921LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1a9930e4c_CaseRange(42922LLU,42922LLU,jule::Array<jule::I32,3>({0LL,-42308LL,0LL})),_1a9930e4c_CaseRange(42923LLU,42923LLU,jule::Array<jule::I32,3>({0LL,-42319LL,0LL})),_1a9930e4c_CaseRange(42924LLU,42924LLU,jule::Array<jule::I32,3>({0LL,-42315LL,0LL})),_1a9930e4c_CaseRange(42925LLU,42925LLU,jule::Array<jule::I32,3>({0LL,-42305LL,0LL})),_1a9930e4c_CaseRange(42926LLU,42926LLU,jule::Array<jule::I32,3>({0LL,-42308LL,0LL})),_1a9930e4c_CaseRange(42928LLU,42928LLU,jule::Array<jule::I32,3>({0LL,-42258LL,0LL})),_1a9930e4c_CaseRange(42929LLU,42929LLU,jule::Array<jule::I32,3>({0LL,-42282LL,0LL})),_1a9930e4c_CaseRange(42930LLU,42930LLU,jule::Array<jule::I32,3>({0LL,-42261LL,0LL})),_1a9930e4c_CaseRange(42931LLU,42931LLU,jule::Array<jule::I32,3>({0LL,928LL,0LL})),_1a9930e4c_CaseRange(42932LLU,42947LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1a9930e4c_CaseRange(42948LLU,42948LLU,jule::Array<jule::I32,3>({0LL,-48LL,0LL})),_1a9930e4c_CaseRange(42949LLU,42949LLU,jule::Array<jule::I32,3>({0LL,-42307LL,0LL})),_1a9930e4c_CaseRange(42950LLU,42950LLU,jule::Array<jule::I32,3>({0LL,-35384LL,0LL})),_1a9930e4c_CaseRange(42951LLU,42954LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1a9930e4c_CaseRange(42960LLU,42961LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1a9930e4c_CaseRange(42966LLU,42969LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1a9930e4c_CaseRange(42997LLU,42998LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1a9930e4c_CaseRange(43859LLU,43859LLU,jule::Array<jule::I32,3>({-928LL,0LL,-928LL})),_1a9930e4c_CaseRange(43888LLU,43967LLU,jule::Array<jule::I32,3>({-38864LL,0LL,-38864LL})),_1a9930e4c_CaseRange(65313LLU,65338LLU,jule::Array<jule::I32,3>({0LL,32LL,0LL})),_1a9930e4c_CaseRange(65345LLU,65370LLU,jule::Array<jule::I32,3>({-32LL,0LL,-32LL})),_1a9930e4c_CaseRange(66560LLU,66599LLU,jule::Array<jule::I32,3>({0LL,40LL,0LL})),_1a9930e4c_CaseRange(66600LLU,66639LLU,jule::Array<jule::I32,3>({-40LL,0LL,-40LL})),_1a9930e4c_CaseRange(66736LLU,66771LLU,jule::Array<jule::I32,3>({0LL,40LL,0LL})),_1a9930e4c_CaseRange(66776LLU,66811LLU,jule::Array<jule::I32,3>({-40LL,0LL,-40LL})),_1a9930e4c_CaseRange(66928LLU,66938LLU,jule::Array<jule::I32,3>({0LL,39LL,0LL})),_1a9930e4c_CaseRange(66940LLU,66954LLU,jule::Array<jule::I32,3>({0LL,39LL,0LL})),_1a9930e4c_CaseRange(66956LLU,66962LLU,jule::Array<jule::I32,3>({0LL,39LL,0LL})),_1a9930e4c_CaseRange(66964LLU,66965LLU,jule::Array<jule::I32,3>({0LL,39LL,0LL})),_1a9930e4c_CaseRange(66967LLU,66977LLU,jule::Array<jule::I32,3>({-39LL,0LL,-39LL})),_1a9930e4c_CaseRange(66979LLU,66993LLU,jule::Array<jule::I32,3>({-39LL,0LL,-39LL})),_1a9930e4c_CaseRange(66995LLU,67001LLU,jule::Array<jule::I32,3>({-39LL,0LL,-39LL})),_1a9930e4c_CaseRange(67003LLU,67004LLU,jule::Array<jule::I32,3>({-39LL,0LL,-39LL})),_1a9930e4c_CaseRange(68736LLU,68786LLU,jule::Array<jule::I32,3>({0LL,64LL,0LL})),_1a9930e4c_CaseRange(68800LLU,68850LLU,jule::Array<jule::I32,3>({-64LL,0LL,-64LL})),_1a9930e4c_CaseRange(71840LLU,71871LLU,jule::Array<jule::I32,3>({0LL,32LL,0LL})),_1a9930e4c_CaseRange(71872LLU,71903LLU,jule::Array<jule::I32,3>({-32LL,0LL,-32LL})),_1a9930e4c_CaseRange(93760LLU,93791LLU,jule::Array<jule::I32,3>({0LL,32LL,0LL})),_1a9930e4c_CaseRange(93792LLU,93823LLU,jule::Array<jule::I32,3>({-32LL,0LL,-32LL})),_1a9930e4c_CaseRange(125184LLU,125217LLU,jule::Array<jule::I32,3>({0LL,34LL,0LL})),_1a9930e4c_CaseRange(125218LLU,125251LLU,jule::Array<jule::I32,3>({-34LL,0LL,-34LL}))});
static jule::Slice<_1a9930e4c_CaseRange> _1b56c0461_CASE_RANGES = _1b56c0461__CASE_RANGES;
static jule::Array<jule::U8,256> _1a99595b3_FIRST = jule::Array<jule::U8,256>({});
static jule::Array<_1a99595b3_accept_range,16> _1a99595b3_ACCEPT_RANGES = jule::Array<_1a99595b3_accept_range,16>({_1a99595b3_accept_range(128LLU,191LLU),_1a99595b3_accept_range(160LLU,191LLU),_1a99595b3_accept_range(128LLU,159LLU),_1a99595b3_accept_range(144LLU,191LLU),_1a99595b3_accept_range(128LLU,143LLU)});
static jule::Map<jule::Str,jule::Ref<_1a9930e4c_RangeTable>> _1b56c0461_SCRIPTS = jule::Map<jule::Str,jule::Ref<_1a9930e4c_RangeTable>>({{jule::Str("Adlam", 5),_1b56c0461_ADLAM},{jule::Str("Ahom", 4),_1b56c0461_AHOM},{jule::Str("Anatolian_Hieroglyphs", 21),_1b56c0461_ANATOLIAN_HIEROGLYPHS},{jule::Str("Arabic", 6),_1b56c0461_ARABIC},{jule::Str("Armenian", 8),_1b56c0461_ARMENIAN},{jule::Str("Avestan", 7),_1b56c0461_AVESTAN},{jule::Str("Balinese", 8),_1b56c0461_BALINESE},{jule::Str("Bamum", 5),_1b56c0461_BAMUM},{jule::Str("Bassa_Vah", 9),_1b56c0461_BASSA_VAH},{jule::Str("Batak", 5),_1b56c0461_BATAK},{jule::Str("Bengali", 7),_1b56c0461_BENGALI},{jule::Str("Bhaiksuki", 9),_1b56c0461_BHAIKSUKI},{jule::Str("Bopomofo", 8),_1b56c0461_BOPOMOFO},{jule::Str("Brahmi", 6),_1b56c0461_BRAHMI},{jule::Str("Braille", 7),_1b56c0461_BRAILLE},{jule::Str("Buginese", 8),_1b56c0461_BUGINESE},{jule::Str("Buhid", 5),_1b56c0461_BUHID},{jule::Str("Canadian_Aboriginal", 19),_1b56c0461_CANADIAN_ABORIGINAL},{jule::Str("Carian", 6),_1b56c0461_CARIAN},{jule::Str("Caucasian_Albanian", 18),_1b56c0461_CAUCASIAN_ALBANIAN},{jule::Str("Chakma", 6),_1b56c0461_CHAKMA},{jule::Str("Cham", 4),_1b56c0461_CHAM},{jule::Str("Cherokee", 8),_1b56c0461_CHEROKEE},{jule::Str("Chorasmian", 10),_1b56c0461_CHORASMIAN},{jule::Str("Common", 6),_1b56c0461_COMMON},{jule::Str("Coptic", 6),_1b56c0461_COPTIC},{jule::Str("Cuneiform", 9),_1b56c0461_CUNEIFORM},{jule::Str("Cypriot", 7),_1b56c0461_CYPRIOT},{jule::Str("Cypro_Minoan", 12),_1b56c0461_CYPRO_MINOAN},{jule::Str("Cyrillic", 8),_1b56c0461_CYRILLIC},{jule::Str("Deseret", 7),_1b56c0461_DESERET},{jule::Str("Devanagari", 10),_1b56c0461_DEVANAGARI},{jule::Str("Dives_Akuru", 11),_1b56c0461_DIVES_AKURU},{jule::Str("Dogra", 5),_1b56c0461_DOGRA},{jule::Str("Duployan", 8),_1b56c0461_DUPLOYAN},{jule::Str("Egyptian_Hieroglyphs", 20),_1b56c0461_EGYPTIAN_HIEROGLYPHS},{jule::Str("Elbasan", 7),_1b56c0461_ELBASAN},{jule::Str("Elymaic", 7),_1b56c0461_ELYMAIC},{jule::Str("Ethiopic", 8),_1b56c0461_ETHIOPIC},{jule::Str("Georgian", 8),_1b56c0461_GEORGIAN},{jule::Str("Glagolitic", 10),_1b56c0461_GLAGOLITIC},{jule::Str("Gothic", 6),_1b56c0461_GOTHIC},{jule::Str("Grantha", 7),_1b56c0461_GRANTHA},{jule::Str("Greek", 5),_1b56c0461_GREEK},{jule::Str("Gujarati", 8),_1b56c0461_GUJARATI},{jule::Str("Gunjala_Gondi", 13),_1b56c0461_GUNJALA_GONDI},{jule::Str("Gurmukhi", 8),_1b56c0461_GURMUKHI},{jule::Str("Han", 3),_1b56c0461_HAN},{jule::Str("Hangul", 6),_1b56c0461_HANGUL},{jule::Str("Hanifi_Rohingya", 15),_1b56c0461_HANIFI_ROHINGYA},{jule::Str("Hanunoo", 7),_1b56c0461_HANUNOO},{jule::Str("Hatran", 6),_1b56c0461_HATRAN},{jule::Str("Hebrew", 6),_1b56c0461_HEBREW},{jule::Str("Hiragana", 8),_1b56c0461_HIRAGANA},{jule::Str("Imperial_Aramaic", 16),_1b56c0461_IMPERIAL_ARAMAIC},{jule::Str("Inherited", 9),_1b56c0461_INHERITED},{jule::Str("Inscriptional_Pahlavi", 21),_1b56c0461_INSCRIPTIONAL_PAHLAVI},{jule::Str("Inscriptional_Parthian", 22),_1b56c0461_INSCRIPTIONAL_PARTHIAN},{jule::Str("Javanese", 8),_1b56c0461_JAVANESE},{jule::Str("Kaithi", 6),_1b56c0461_KAITHI},{jule::Str("Kannada", 7),_1b56c0461_KANNADA},{jule::Str("Katakana", 8),_1b56c0461_KATAKANA},{jule::Str("Kawi", 4),_1b56c0461_KAWI},{jule::Str("Kayah_Li", 8),_1b56c0461_KAYAH_LI},{jule::Str("Kharoshthi", 10),_1b56c0461_KHAROSHTHI},{jule::Str("Khitan_Small_Script", 19),_1b56c0461_KHITAN_SMALL_SCRIPT},{jule::Str("Khmer", 5),_1b56c0461_KHMER},{jule::Str("Khojki", 6),_1b56c0461_KHOJKI},{jule::Str("Khudawadi", 9),_1b56c0461_KHUDAWADI},{jule::Str("Lao", 3),_1b56c0461_LAO},{jule::Str("Latin", 5),_1b56c0461_LATIN},{jule::Str("Lepcha", 6),_1b56c0461_LEPCHA},{jule::Str("Limbu", 5),_1b56c0461_LIMBU},{jule::Str("Linear_A", 8),_1b56c0461_LINEAR_A},{jule::Str("Linear_B", 8),_1b56c0461_LINEAR_B},{jule::Str("Lisu", 4),_1b56c0461_LISU},{jule::Str("Lycian", 6),_1b56c0461_LYCIAN},{jule::Str("Lydian", 6),_1b56c0461_LYDIAN},{jule::Str("Mahajani", 8),_1b56c0461_MAHAJANI},{jule::Str("Makasar", 7),_1b56c0461_MAKASAR},{jule::Str("Malayalam", 9),_1b56c0461_MALAYALAM},{jule::Str("Mandaic", 7),_1b56c0461_MANDAIC},{jule::Str("Manichaean", 10),_1b56c0461_MANICHAEAN},{jule::Str("Marchen", 7),_1b56c0461_MARCHEN},{jule::Str("Masaram_Gondi", 13),_1b56c0461_MASARAM_GONDI},{jule::Str("Medefaidrin", 11),_1b56c0461_MEDEFAIDRIN},{jule::Str("Meetei_Mayek", 12),_1b56c0461_MEETEI_MAYEK},{jule::Str("Mende_Kikakui", 13),_1b56c0461_MENDE_KIKAKUI},{jule::Str("Meroitic_Cursive", 16),_1b56c0461_MEROITIC_CURSIVE},{jule::Str("Meroitic_Hieroglyphs", 20),_1b56c0461_MEROITIC_HIEROGLYPHS},{jule::Str("Miao", 4),_1b56c0461_MIAO},{jule::Str("Modi", 4),_1b56c0461_MODI},{jule::Str("Mongolian", 9),_1b56c0461_MONGOLIAN},{jule::Str("Mro", 3),_1b56c0461_MRO},{jule::Str("Multani", 7),_1b56c0461_MULTANI},{jule::Str("Myanmar", 7),_1b56c0461_MYANMAR},{jule::Str("Nabataean", 9),_1b56c0461_NABATAEAN},{jule::Str("Nag_Mundari", 11),_1b56c0461_NAG_MUNDARI},{jule::Str("Nandinagari", 11),_1b56c0461_NANDINAGARI},{jule::Str("New_Tai_Lue", 11),_1b56c0461_NEW_TAI_LUE},{jule::Str("Newa", 4),_1b56c0461_NEWA},{jule::Str("Nko", 3),_1b56c0461_NKO},{jule::Str("Nushu", 5),_1b56c0461_NUSHU},{jule::Str("Nyiakeng_Puachue_Hmong", 22),_1b56c0461_NYIAKENG_PUACHUE_HMONG},{jule::Str("Ogham", 5),_1b56c0461_OGHAM},{jule::Str("Ol_Chiki", 8),_1b56c0461_OL_CHIKI},{jule::Str("Old_Hungarian", 13),_1b56c0461_OLD_HUNGARIAN},{jule::Str("Old_Italic", 10),_1b56c0461_OLD_ITALIC},{jule::Str("Old_North_Arabian", 17),_1b56c0461_OLD_NORTH_ARABIAN},{jule::Str("Old_Permic", 10),_1b56c0461_OLD_PERMIC},{jule::Str("Old_Persian", 11),_1b56c0461_OLD_PERSIAN},{jule::Str("Old_Sogdian", 11),_1b56c0461_OLD_SOGDIAN},{jule::Str("Old_South_Arabian", 17),_1b56c0461_OLD_SOUTH_ARABIAN},{jule::Str("Old_Turkic", 10),_1b56c0461_OLD_TURKIC},{jule::Str("Old_Uyghur", 10),_1b56c0461_OLD_UYGHUR},{jule::Str("Oriya", 5),_1b56c0461_ORIYA},{jule::Str("Osage", 5),_1b56c0461_OSAGE},{jule::Str("Osmanya", 7),_1b56c0461_OSMANYA},{jule::Str("Pahawh_Hmong", 12),_1b56c0461_PAHAWH_HMONG},{jule::Str("Palmyrene", 9),_1b56c0461_PALMYRENE},{jule::Str("Pau_Cin_Hau", 11),_1b56c0461_PAU_CIN_HAU},{jule::Str("Phags_Pa", 8),_1b56c0461_PHAGS_PA},{jule::Str("Phoenician", 10),_1b56c0461_PHOENICIAN},{jule::Str("Psalter_Pahlavi", 15),_1b56c0461_PSALTER_PAHLAVI},{jule::Str("Rejang", 6),_1b56c0461_REJANG},{jule::Str("Runic", 5),_1b56c0461_RUNIC},{jule::Str("Samaritan", 9),_1b56c0461_SAMARITAN},{jule::Str("Saurashtra", 10),_1b56c0461_SAURASHTRA},{jule::Str("Sharada", 7),_1b56c0461_SHARADA},{jule::Str("Shavian", 7),_1b56c0461_SHAVIAN},{jule::Str("Siddham", 7),_1b56c0461_SIDDHAM},{jule::Str("SignWriting", 11),_1b56c0461_SIGN_WRITING},{jule::Str("Sinhala", 7),_1b56c0461_SINHALA},{jule::Str("Sogdian", 7),_1b56c0461_SOGDIAN},{jule::Str("Sora_Sompeng", 12),_1b56c0461_SORA_SOMPENG},{jule::Str("Soyombo", 7),_1b56c0461_SOYOMBO},{jule::Str("Sundanese", 9),_1b56c0461_SUNDANESE},{jule::Str("Syloti_Nagri", 12),_1b56c0461_SYLOTI_NAGRI},{jule::Str("Syriac", 6),_1b56c0461_SYRIAC},{jule::Str("Tagalog", 7),_1b56c0461_TAGALOG},{jule::Str("Tagbanwa", 8),_1b56c0461_TAGBANWA},{jule::Str("Tai_Le", 6),_1b56c0461_TAI_LE},{jule::Str("Tai_Tham", 8),_1b56c0461_TAI_THAM},{jule::Str("Tai_Viet", 8),_1b56c0461_TAI_VIET},{jule::Str("Takri", 5),_1b56c0461_TAKRI},{jule::Str("Tamil", 5),_1b56c0461_TAMIL},{jule::Str("Tangsa", 6),_1b56c0461_TANGSA},{jule::Str("Tangut", 6),_1b56c0461_TANGUT},{jule::Str("Telugu", 6),_1b56c0461_TELUGU},{jule::Str("Thaana", 6),_1b56c0461_THAANA},{jule::Str("Thai", 4),_1b56c0461_THAI},{jule::Str("Tibetan", 7),_1b56c0461_TIBETAN},{jule::Str("Tifinagh", 8),_1b56c0461_TIFINAGH},{jule::Str("Tirhuta", 7),_1b56c0461_TIRHUTA},{jule::Str("Toto", 4),_1b56c0461_TOTO},{jule::Str("Ugaritic", 8),_1b56c0461_UGARITIC},{jule::Str("Vai", 3),_1b56c0461_VAI},{jule::Str("Vithkuqi", 8),_1b56c0461_VITHKUQI},{jule::Str("Wancho", 6),_1b56c0461_WANCHO},{jule::Str("Warang_Citi", 11),_1b56c0461_WARANG_CITI},{jule::Str("Yezidi", 6),_1b56c0461_YEZIDI},{jule::Str("Yi", 2),_1b56c0461_YI},{jule::Str("Zanabazar_Square", 16),_1b56c0461_ZANABAZAR_SQUARE}});
static jule::Str _1b614c8b0_ARCH = jule::Str("amd64", 5);

inline void _1cde4dc3c_AnsiEscape::_static_method_reset(void) {
	jule::out(jule::Str("\033[0m", 4));
}



inline void _1cde4dc3c_AnsiEscape::_static_method_print(jule::Str _2021_escape,jule::Str _2034_text) {
	jule::out(_2021_escape);
	jule::out(_2034_text);
	_1cde4dc3c_AnsiEscape::_static_method_reset();
}







std::ostream &operator<<(std::ostream &_Stream, const _1cde4dc3c_AnsiEscape &_Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void _1cde4dc3c_Logger::_static_method_log_flat(_1cdeeb191_Log& _3125_l) {
	jule::outln(_3125_l._field_text);
}



inline void _1cde4dc3c_Logger::_static_method_log_error(_1cdeeb191_Log& _3426_l) {
	jule::out(jule::Str("\033[31m", 5));
	jule::out(jule::Str("error: ", 7));
	jule::out(_3426_l._field_text);
	_1cde4dc3c_AnsiEscape::_static_method_reset();
	jule::out(jule::Str("\n  --> ", 7));
	jule::out(_3426_l._field_path);
	jule::out(jule::Str(":", 1));
	jule::out(_1b59a1be8_itoa(_3426_l._field_row));
	jule::out(jule::Str(":", 1));
	jule::out(_1b59a1be8_itoa(_3426_l._field_column));
	if (_3426_l._field_line.len() != 0LL) {
		jule::Str _4721_line = _3426_l._field_line.ltrim(jule::Str("\r\n\v\b ", 5));
		jule::I64 _4821_offset = (_3426_l._field_line.len() - _4721_line.len()) + 1LL;
		jule::I64 _4921_old_len = _4721_line.len();
		_4721_line=_4721_line.ltrim(jule::Str("\t", 1));
		if (_4921_old_len != _4721_line.len()) {
			_4821_offset+=static_cast<jule::I64>((_4921_old_len - _4721_line.len()) * 8LL);
		}
		jule::out(jule::Str("\n  ", 3));
		jule::Str _5517_row = _1b59a1be8_itoa(_3426_l._field_row);
		jule::out(_5517_row);
		jule::out(jule::Str(" | ", 3));
		jule::out(_4721_line);
		jule::out(jule::Str("\n  ", 3));
		jule::out(_1cdd02591_str_repeat(jule::Str(" ", 1),static_cast<jule::I64>(_5517_row.len())));
		jule::out(jule::Str(" | ", 3));
		jule::out(_1cdd02591_str_repeat(jule::Str(" ", 1),static_cast<jule::Int>(_3426_l._field_column - _4821_offset)));
		jule::out(jule::Str("^", 1));
		if (_3426_l._field_suggestion.len() != 0LL) {
			jule::out(jule::Str("\n  ", 3));
			jule::out(_1cdd02591_str_repeat(jule::Str(" ", 1),static_cast<jule::I64>(_5517_row.len())));
			jule::out(jule::Str(" | ", 3));
			_1cde4dc3c_AnsiEscape::_static_method_print(jule::Str("\033[95m", 5),jule::Str("suggestion: ", 12));
			jule::out(_3426_l._field_suggestion);
		}
	}
	jule::outln(jule::Str("\n", 1));
}



inline void _1cde4dc3c_Logger::_static_method_log(_1cdeeb191_Log& _7620_l) {
	{
		auto _match_expr{ _7620_l._field_kind };
		if (!((0LLU) == _match_expr)) { goto _case_end_4448249872; }
		_case_begin_4448249872:;
		{
			_1cde4dc3c_Logger::_static_method_log_flat(_7620_l);
		}
		goto _match_end_4448248448;
		_case_end_4448249872:;
		if (!((1LLU) == _match_expr)) { goto _case_end_4448249984; }
		_case_begin_4448249984:;
		{
			_1cde4dc3c_Logger::_static_method_log_error(_7620_l);
		}
		goto _match_end_4448248448;
		_case_end_4448249984:;
		_match_end_4448248448:;
	}
}



inline void _1cde4dc3c_Logger::_static_method_print_logs(jule::Slice<_1cdeeb191_Log>& _8427_logs) {
	{
		auto _range_expr = _8427_logs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			_1cdeeb191_Log _1cde4dc3c_l = *_range_begin;
			_iter_begin_4448254208:;
			{
				_1cde4dc3c_Logger::_static_method_log(_1cde4dc3c_l);
			}
			_iter_next_4448254208:;
			++_range_begin;
			if (_range_begin != _range_end) { _1cde4dc3c_l = *_range_begin; goto _iter_begin_4448254208; }
			_iter_end_4448254208:;
		}
	}
	jule::out(jule::Str("=== ", 4));
	jule::out(_1b59a1be8_itoa(static_cast<jule::I64>(_8427_logs.len())));
	jule::outln(jule::Str(" error generated ===", 20));
}







std::ostream &operator<<(std::ostream &_Stream, const _1cde4dc3c_Logger &_Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1cdd187e9_LazyBuff::_method_index(jule::Int _5324_i) {
	if ((*this)._field_buff != nullptr) {
		return (*this)._field_buff[static_cast<jule::Int>(_5324_i)];
	}
	return (*this)._field_path[static_cast<jule::Int>(_5324_i)];
}



inline void _1cdd187e9_LazyBuff::_method_append(jule::U8 _6025_c) {
	if ((*this)._field_buff == nullptr) {
		if (((*this)._field_w < (*this)._field_path.len()) && ((*this)._field_path[static_cast<jule::Int>((*this)._field_w)] == _6025_c)) {
			((*this)._field_w)++;
			return;
		}
		(*this)._field_buff=jule::Slice<jule::U8>::alloc(static_cast<jule::Int>(static_cast<jule::I64>((*this)._field_path.len())));
		copy((*this)._field_buff,static_cast<jule::Slice<jule::U8>>((*this)._field_path.slice(0LL,static_cast<jule::Int>((*this)._field_w))));
	}
	(*this)._field_buff[static_cast<jule::Int>((*this)._field_w)]=_6025_c;
	((*this)._field_w)++;
}



inline jule::Str _1cdd187e9_LazyBuff::_method_string(void) {
	if ((*this)._field_buff == nullptr) {
		return (*this)._field_vol_and_path.slice(0LL,static_cast<jule::Int>((*this)._field_vol_len + (*this)._field_w));
	}
	return (*this)._field_vol_and_path.slice(0LL,static_cast<jule::Int>((*this)._field_vol_len)) + static_cast<jule::Str>((*this)._field_buff.slice(0LL,static_cast<jule::Int>((*this)._field_w)));
}







std::ostream &operator<<(std::ostream &_Stream, const _1cdd187e9_LazyBuff &_Src) {
	_Stream << "LazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "vol_and_path:" << _Src._field_vol_and_path << ", ";
	_Stream << "vol_len:" << _Src._field_vol_len;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1cdeeb191_Log &_Src) {
	_Stream << "Log{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "text:" << _Src._field_text << ", ";
	_Stream << "line:" << _Src._field_line << ", ";
	_Stream << "suggestion:" << _Src._field_suggestion;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b5e99d17_bits_error::_method_error(void) {
	return jule::Str("runtime error: ", 15) + (*this)._field_message;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b5e99d17_bits_error &_Src) {
	_Stream << "bits_error{";
	_Stream << "message:" << _Src._field_message;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1cdd4411b_FloatInfo &_Src) {
	_Stream << "FloatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1cdd4411b_DecimalSlice &_Src) {
	_Stream << "DecimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b588cbe4_LeftCheat &_Src) {
	_Stream << "LeftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b588cbe4_Decimal::_method_set(jule::Str _22922_s) {
	jule::Bool _22932_ok = jule::Bool();
	jule::Int _23017_i = 0LL;
	(*this)._field_neg=false;
	(*this)._field_trunc=false;
	if (_23017_i >= _22922_s.len()) {
		return _22932_ok;
	}
	{
		if (!((_22922_s[static_cast<jule::Int>(_23017_i)] == '+'))) { goto _case_end_4425067936; }
		_case_begin_4425067936:;
		{
			(_23017_i)++;
		}
		goto _match_end_4425068768;
		_case_end_4425067936:;
		if (!((_22922_s[static_cast<jule::Int>(_23017_i)] == '-'))) { goto _case_end_4425068384; }
		_case_begin_4425068384:;
		{
			(*this)._field_neg=true;
			(_23017_i)++;
		}
		goto _match_end_4425068768;
		_case_end_4425068384:;
		_match_end_4425068768:;
	}
	jule::Bool _24717_sawdot = false;
	jule::Bool _24817_sawdigits = false;
	_iter_begin_4425067584:;
	if (!(_23017_i < _22922_s.len())) { goto _iter_end_4425067584; }
	{
		{
			if (!((_22922_s[static_cast<jule::Int>(_23017_i)] == '.'))) { goto _case_end_4425075952; }
			_case_begin_4425075952:;
			{
				if (_24717_sawdot) {
					return _22932_ok;
				}
				_24717_sawdot=true;
				(*this)._field_dp=(*this)._field_nd;
				goto _iter_next_4425067584;
			}
			goto _match_end_4425075712;
			_case_end_4425075952:;
			if (!((('0' <= _22922_s[static_cast<jule::Int>(_23017_i)]) && (_22922_s[static_cast<jule::Int>(_23017_i)] <= '9')))) { goto _case_end_4425076080; }
			_case_begin_4425076080:;
			{
				_24817_sawdigits=true;
				if ((_22922_s[static_cast<jule::Int>(_23017_i)] == '0') && ((*this)._field_nd == 0LL)) {
					((*this)._field_dp)--;
					goto _iter_next_4425067584;
				}
				if ((*this)._field_nd < 800LL) {
					(*this)._field_d[static_cast<jule::Int>((*this)._field_nd)]=_22922_s[static_cast<jule::Int>(_23017_i)];
					((*this)._field_nd)++;
				} else if (_22922_s[static_cast<jule::Int>(_23017_i)] != '0') {
					(*this)._field_trunc=true;
				}
				goto _iter_next_4425067584;
			}
			goto _match_end_4425075712;
			_case_end_4425076080:;
			_match_end_4425075712:;
		}
		goto _iter_end_4425067584;
	}
	_iter_next_4425067584:;
	(_23017_i)++;
	goto _iter_begin_4425067584;
	_iter_end_4425067584:;
	if ((!(_24817_sawdigits))) {
		return _22932_ok;
	}
	if ((!(_24717_sawdot))) {
		(*this)._field_dp=(*this)._field_nd;
	}
	if ((_23017_i < _22922_s.len()) && (_1cdd97339_lower(_22922_s[static_cast<jule::Int>(_23017_i)]) == 'e')) {
		(_23017_i)++;
		if (_23017_i >= _22922_s.len()) {
			return _22932_ok;
		}
		jule::Int _29121_esign = 1LL;
		if (_22922_s[static_cast<jule::Int>(_23017_i)] == '+') {
			(_23017_i)++;
		} else if (_22922_s[static_cast<jule::Int>(_23017_i)] == '-') {
			(_23017_i)++;
			_29121_esign=-1LL;
		}
		if (((_23017_i >= _22922_s.len()) || (_22922_s[static_cast<jule::Int>(_23017_i)] < '0')) || (_22922_s[static_cast<jule::Int>(_23017_i)] > '9')) {
			return _22932_ok;
		}
		jule::Int _30121_e = 0LL;
		_iter_begin_4425101280:;
		if (!((_23017_i < _22922_s.len()) && (('0' <= _22922_s[static_cast<jule::Int>(_23017_i)]) && (_22922_s[static_cast<jule::Int>(_23017_i)] <= '9')))) { goto _iter_end_4425101280; }
		{
			if (_30121_e < 10000LL) {
				_30121_e=static_cast<jule::Int>(((_30121_e * 10LL) + static_cast<jule::Int>(_22922_s[static_cast<jule::Int>(_23017_i)])) - '0');
			}
		}
		_iter_next_4425101280:;
		(_23017_i)++;
		goto _iter_begin_4425101280;
		_iter_end_4425101280:;
		(*this)._field_dp+=static_cast<jule::Int>(_30121_e * _29121_esign);
	}
	if (_23017_i != _22922_s.len()) {
		return _22932_ok;
	}
	_22932_ok=true;
	return _22932_ok;
}



inline std::tuple<jule::U64,jule::Bool> _1b588cbe4_Decimal::_method_float_bits(_1cdd4411b_FloatInfo& _31830_flt) {
	jule::U64 _31848_b = jule::U64();
	jule::Bool _31856_overflow = jule::Bool();
	jule::Int _31917_exp = 0LL;
	jule::U64 _32017_mant = 0LLU;
	if ((*this)._field_nd == 0LL) {
		_32017_mant=0LL;
		_31917_exp=_31830_flt._field_bias;
		goto _julec_label_out;
	}
	if ((*this)._field_dp > 310LL) {
		goto _julec_label_overflow;
	}
	if ((*this)._field_dp < -330LL) {
		_32017_mant=0LL;
		_31917_exp=_31830_flt._field_bias;
		goto _julec_label_out;
	}
	_31917_exp=0LL;
	_iter_begin_4425126480:;
	if (!((*this)._field_dp > 0LL)) { goto _iter_end_4425126480; }
	{
		jule::Int _34521_n = 0LL;
		if ((*this)._field_dp >= _1cddd8c93_POWTAB.len()) {
			_34521_n=27LL;
		} else {
			_34521_n=_1cddd8c93_POWTAB[static_cast<jule::Int>((*this)._field_dp)];
		}
		(*this)._method_shift(static_cast<jule::Int>((-(_34521_n))));
		_31917_exp+=_34521_n;
	}
	_iter_next_4425126480:;
	goto _iter_begin_4425126480;
	_iter_end_4425126480:;
	_iter_begin_4425128592:;
	if (!(((*this)._field_dp < 0LL) || (((*this)._field_dp == 0LL) && ((*this)._field_d[0LL] < '5')))) { goto _iter_end_4425128592; }
	{
		jule::Int _35521_n = 0LL;
		if ((-((*this)._field_dp)) >= _1cddd8c93_POWTAB.len()) {
			_35521_n=27LL;
		} else {
			_35521_n=_1cddd8c93_POWTAB[static_cast<jule::Int>((-((*this)._field_dp)))];
		}
		(*this)._method_shift(_35521_n);
		_31917_exp-=_35521_n;
	}
	_iter_next_4425128592:;
	goto _iter_begin_4425128592;
	_iter_end_4425128592:;
	(_31917_exp)--;
	if (_31917_exp < (_31830_flt._field_bias + 1LL)) {
		jule::Int _37217_n = (_31830_flt._field_bias + 1LL) - _31917_exp;
		(*this)._method_shift(static_cast<jule::Int>((-(_37217_n))));
		_31917_exp+=_37217_n;
	}
	if ((_31917_exp - _31830_flt._field_bias) >= ((1LL << _31830_flt._field_expbits) - 1LL)) {
		goto _julec_label_overflow;
	}
	(*this)._method_shift(static_cast<jule::Int>(1LL + _31830_flt._field_mantbits));
	_32017_mant=static_cast<jule::U64>((*this)._method_rounded_integer());
	if (_32017_mant == (2LL << _31830_flt._field_mantbits)) {
		_32017_mant>>=1LL;
		(_31917_exp)++;
		if ((_31917_exp - _31830_flt._field_bias) >= ((1LL << _31830_flt._field_expbits) - 1LL)) {
			goto _julec_label_overflow;
		}
	}
	if ((_32017_mant & (1LL << _31830_flt._field_mantbits)) == 0LL) {
		_31917_exp=_31830_flt._field_bias;
	}
	goto _julec_label_out;
	_julec_label_overflow:;
	_32017_mant=0LL;
	_31917_exp=static_cast<jule::Int>(((1LL << _31830_flt._field_expbits) - 1LL) + _31830_flt._field_bias);
	_31856_overflow=true;
	_julec_label_out:;
	jule::U64 _40817_bits = _32017_mant & ((static_cast<jule::U64>(1LLU) << _31830_flt._field_mantbits) - 1LL);
	_40817_bits|=static_cast<jule::U64>(static_cast<jule::U64>((_31917_exp - _31830_flt._field_bias) & ((1LL << _31830_flt._field_expbits) - 1LL)) << _31830_flt._field_mantbits);
	if ((*this)._field_neg) {
		_40817_bits|=static_cast<jule::Int>((1LL << _31830_flt._field_mantbits) << _31830_flt._field_expbits);
	}
	_31848_b = _40817_bits;
	_31856_overflow = _31856_overflow;
	return std::make_tuple(_31848_b,_31856_overflow);
}



inline void _1b588cbe4_Decimal::_method_assign(jule::U64 _15229_v) {
	jule::Array<jule::U8,24> _15317_buf = jule::Array<jule::U8,24>({});
	jule::Int _15617_n = 0LL;
	_iter_begin_4425169040:;
	if (!(_15229_v > 0LL)) { goto _iter_end_4425169040; }
	{
		jule::U64 _15817_v1 = jule::div(_15229_v,10LL);
		_15229_v-=static_cast<jule::U64>(10LL * _15817_v1);
		_15317_buf[static_cast<jule::Int>(_15617_n)]=static_cast<jule::U8>(_15229_v + '0');
		(_15617_n)++;
		_15229_v=_15817_v1;
	}
	_iter_next_4425169040:;
	goto _iter_begin_4425169040;
	_iter_end_4425169040:;
	(*this)._field_nd=0LL;
	(_15617_n)--;
	_iter_begin_4425169808:;
	if (!(_15617_n >= 0LL)) { goto _iter_end_4425169808; }
	{
		(*this)._field_d[static_cast<jule::Int>((*this)._field_nd)]=_15317_buf[static_cast<jule::Int>(_15617_n)];
		((*this)._field_nd)++;
	}
	_iter_next_4425169808:;
	(_15617_n)--;
	goto _iter_begin_4425169808;
	_iter_end_4425169808:;
	(*this)._field_dp=(*this)._field_nd;
	_1b588cbe4_trim((*this));
}



inline void _1b588cbe4_Decimal::_method_shift(jule::Int _17728_k) {
	{
		if (!(((*this)._field_nd == 0LL))) { goto _case_end_4425181408; }
		goto _match_end_4425181168;
		_case_end_4425181408:;
		if (!((_17728_k > 0LL))) { goto _case_end_4425181536; }
		_case_begin_4425181536:;
		{
			_iter_begin_4425182848:;
			if (!(_17728_k > 60LL)) { goto _iter_end_4425182848; }
			{
				_1b588cbe4_left_shift((*this),60LLU);
				_17728_k-=60LL;
			}
			_iter_next_4425182848:;
			goto _iter_begin_4425182848;
			_iter_end_4425182848:;
			_1b588cbe4_left_shift((*this),static_cast<jule::Uint>(_17728_k));
		}
		goto _match_end_4425181168;
		_case_end_4425181536:;
		if (!((_17728_k < 0LL))) { goto _case_end_4425181664; }
		_case_begin_4425181664:;
		{
			_iter_begin_4425181840:;
			if (!(_17728_k < -60LL)) { goto _iter_end_4425181840; }
			{
				_1b588cbe4_right_shift((*this),60LLU);
				_17728_k+=60LL;
			}
			_iter_next_4425181840:;
			goto _iter_begin_4425181840;
			_iter_end_4425181840:;
			_1b588cbe4_right_shift((*this),static_cast<jule::Uint>((-(_17728_k))));
		}
		goto _match_end_4425181168;
		_case_end_4425181664:;
		_match_end_4425181168:;
	}
}



inline void _1b588cbe4_Decimal::_method_round_down(jule::Int _19729_nd) {
	if ((_19729_nd < 0LL) || (_19729_nd >= (*this)._field_nd)) {
		return;
	}
	(*this)._field_nd=_19729_nd;
	_1b588cbe4_trim((*this));
}



inline void _1b588cbe4_Decimal::_method_round_up(jule::Int _20627_nd) {
	if ((_20627_nd < 0LL) || (_20627_nd >= (*this)._field_nd)) {
		return;
	}
	jule::Int _21217_i = _20627_nd - 1LL;
	_iter_begin_4425194640:;
	if (!(_21217_i >= 0LL)) { goto _iter_end_4425194640; }
	{
		jule::U8 _21417_c = (*this)._field_d[static_cast<jule::Int>(_21217_i)];
		if (_21417_c < '9') {
			((*this)._field_d[static_cast<jule::Int>(_21217_i)])++;
			(*this)._field_nd=static_cast<jule::Int>(_21217_i + 1LL);
			return;
		}
	}
	_iter_next_4425194640:;
	(_21217_i)--;
	goto _iter_begin_4425194640;
	_iter_end_4425194640:;
	(*this)._field_d[0LL]='1';
	(*this)._field_nd=1LL;
	((*this)._field_dp)++;
}



inline void _1b588cbe4_Decimal::_method_round(jule::Int _23324_nd) {
	if ((_23324_nd < 0LL) || (_23324_nd >= (*this)._field_nd)) {
		return;
	}
	if (_1b588cbe4_should_round_up((*this),_23324_nd)) {
		(*this)._method_round_up(_23324_nd);
	} else {
		(*this)._method_round_down(_23324_nd);
	}
}



inline jule::U64 _1b588cbe4_Decimal::_method_rounded_integer(void) {
	if ((*this)._field_dp > 20LL) {
		return jule::MAX_U64;
	}
	jule::Int _25017_i = 0LL;
	jule::U64 _25117_n = 0LLU;
	_iter_begin_4425212304:;
	if (!((_25017_i < (*this)._field_dp) && (_25017_i < (*this)._field_nd))) { goto _iter_end_4425212304; }
	{
		_25117_n=static_cast<jule::U64>((_25117_n * 10LL) + static_cast<jule::U64>((*this)._field_d[static_cast<jule::Int>(_25017_i)] - '0'));
	}
	_iter_next_4425212304:;
	(_25017_i)++;
	goto _iter_begin_4425212304;
	_iter_end_4425212304:;
	_iter_begin_4425213696:;
	if (!(_25017_i < (*this)._field_dp)) { goto _iter_end_4425213696; }
	{
		_25117_n*=10LL;
	}
	_iter_next_4425213696:;
	(_25017_i)++;
	goto _iter_begin_4425213696;
	_iter_end_4425213696:;
	if (_1b588cbe4_should_round_up((*this),(*this)._field_dp)) {
		(_25117_n)++;
	}
	return _25117_n;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b588cbe4_Decimal &_Src) {
	_Stream << "Decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61b1e74_DirEntry &_Src) {
	_Stream << "DirEntry{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "stat:" << _Src._field_stat;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::Int,jule::Int> _1b61b2a8a_File::_method_write(jule::Slice<jule::U8> _1528_buff) {
	jule::Int _1544_n = jule::Int();
	if (_1528_buff.len() == 0LL) {
		_1544_n = 0LL;
		return std::make_tuple(_1544_n,0LLU);
	}
	_1544_n=static_cast<jule::Int>(static_cast<jule::Int>(_1cde0376e_write(static_cast<jule::Int>((*this)._field_handle),(&(_1528_buff[0LL])),static_cast<jule::Uint>(_1528_buff.len()))));
	if (_1544_n == -1LL) {
		_1544_n = 0LL;
		return std::make_tuple(_1544_n,_1b618d5c1_get_last_fs_error());
	}
	_1544_n = _1544_n;
	return std::make_tuple(_1544_n,0LLU);
}



inline std::tuple<jule::Int,jule::Int> _1b61b2a8a_File::_method_read(jule::Slice<jule::U8> _3731_buff) {
	jule::Int _3747_n = jule::Int();
	if (_3731_buff.len() == 0LL) {
		_3747_n = 0LL;
		return std::make_tuple(_3747_n,0LLU);
	}
	_3747_n=static_cast<jule::Int>(static_cast<jule::Int>(_1cde0376e_read(static_cast<jule::Int>((*this)._field_handle),(&(_3731_buff[0LL])),static_cast<jule::Uint>(_3731_buff.len()))));
	if (_3747_n == -1LL) {
		_3747_n=0LL;
		_3747_n = _3747_n;
		return std::make_tuple(_3747_n,_1b618d5c1_get_last_fs_error());
	}
	_3747_n = _3747_n;
	return std::make_tuple(_3747_n,0LLU);
}



inline jule::Ref<_1b61b2a8a_File> _1b61b2a8a_File::_static_method_new(jule::Uintptr _4523_handle) {
	return jule::new_struct<_1b61b2a8a_File>(new( std::nothrow ) _1b61b2a8a_File(_4523_handle));
}



inline std::tuple<jule::I64,jule::Int> _1b61b2a8a_File::_method_seek(jule::I64 _6027_offset,jule::Int _6040_origin) {
	jule::I64 _6113_pos = _1cde0376e_seek(static_cast<jule::Int>((*this)._field_handle),_6027_offset,static_cast<jule::Int>(_6040_origin));
	return std::make_tuple(_6113_pos,0LLU);
}



inline jule::Int _1b61b2a8a_File::_method_close(void) {
	if (_1cde0376e_close(static_cast<jule::Int>((*this)._field_handle)) == -1LL) {
		return _1b618d5c1_get_last_fs_error();
	}
	return 0LLU;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61b2a8a_File &_Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a8bb56ee_Status::_method_is_dir(void) {
	return ((*this)._field_mode & 16384LL) == 16384LL;
}



inline jule::Bool _1a8bb56ee_Status::_method_is_reg(void) {
	return ((*this)._field_mode & 32768LL) == 32768LL;
}







std::ostream &operator<<(std::ostream &_Stream, const _1a8bb56ee_Status &_Src) {
	_Stream << "Status{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1a9930e4c_FoldPair &_Src) {
	_Stream << "FoldPair{";
	_Stream << "from:" << _Src._field_from << ", ";
	_Stream << "to:" << _Src._field_to;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1a9930e4c_CaseRange &_Src) {
	_Stream << "CaseRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "delta:" << _Src._field_delta;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1a9930e4c_Range16 &_Src) {
	_Stream << "Range16{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "stride:" << _Src._field_stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1a9930e4c_Range32 &_Src) {
	_Stream << "Range32{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "stride:" << _Src._field_stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1a9930e4c_RangeTable &_Src) {
	_Stream << "RangeTable{";
	_Stream << "r16:" << _Src._field_r16 << ", ";
	_Stream << "r32:" << _Src._field_r32 << ", ";
	_Stream << "latin_offset:" << _Src._field_latin_offset;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1a99595b3_accept_range &_Src) {
	_Stream << "accept_range{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}



inline jule::Int _1b61ec5ec_Token::_method_prec(void) {
	if ((*this)._field_id != 7LLU) {
		return -1LL;
	}
	{
		auto _match_expr{ (*this)._field_kind };
		if (!((jule::Str("*", 1)) == _match_expr || (jule::Str("%", 1)) == _match_expr || (jule::Str("/", 1)) == _match_expr || (jule::Str(">>", 2)) == _match_expr || (jule::Str("<<", 2)) == _match_expr || (jule::Str("&", 1)) == _match_expr)) { goto _case_end_4430743648; }
		_case_begin_4430743648:;
		{
			return 5LL;
		}
		goto _match_end_4430740640;
		_case_end_4430743648:;
		if (!((jule::Str("+", 1)) == _match_expr || (jule::Str("-", 1)) == _match_expr || (jule::Str("|", 1)) == _match_expr || (jule::Str("^", 1)) == _match_expr)) { goto _case_end_4430743760; }
		_case_begin_4430743760:;
		{
			return 4LL;
		}
		goto _match_end_4430740640;
		_case_end_4430743760:;
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr || (jule::Str("=", 1)) == _match_expr || (jule::Str("<", 1)) == _match_expr || (jule::Str("<=", 2)) == _match_expr || (jule::Str(">", 1)) == _match_expr || (jule::Str(">=", 2)) == _match_expr)) { goto _case_end_4430743936; }
		_case_begin_4430743936:;
		{
			return 3LL;
		}
		goto _match_end_4430740640;
		_case_end_4430743936:;
		if (!((jule::Str("&&", 2)) == _match_expr)) { goto _case_end_4430744048; }
		_case_begin_4430744048:;
		{
			return 2LL;
		}
		goto _match_end_4430740640;
		_case_end_4430744048:;
		if (!((jule::Str("||", 2)) == _match_expr)) { goto _case_end_4430744160; }
		_case_begin_4430744160:;
		{
			return 1LL;
		}
		goto _match_end_4430740640;
		_case_end_4430744160:;
		_case_begin_4430741760:;
		{
			return -1LL;
		}
		goto _match_end_4430740640;
		_case_end_4430741760:;
		_match_end_4430740640:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61ec5ec_Token &_Src) {
	_Stream << "Token{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b61ece27_File::_method_is_ok(void) {
	jule::Int _1917_err;
	std::tie(std::ignore,_1917_err) = _1b618d48e_stat((*this)._field__path);
	return _1917_err == 0LLU;
}



inline void _1b61ece27_File::_method_fill(jule::Slice<jule::U8> _2431_data) {
	(*this)._field_data=_2431_data;
}



inline jule::Str _1b61ece27_File::_method_path(void) {
	return (*this)._field__path;
}



inline jule::Str _1b61ece27_File::_method_dir(void) {
	return _1cdd187e9_dir((*this)._field__path);
}



inline jule::Str _1b61ece27_File::_method_name(void) {
	return _1cdd187e9_base((*this)._field__path);
}



inline jule::Uintptr _1b61ece27_File::_method_addr(void) {
	return ((jule::Uintptr)((&((*this)))));
}



inline jule::Slice<_1b61ec5ec_Token> _1b61ece27_File::_method_tokens(void) {
	return (*this)._field__tokens;
}



inline jule::Str _1b61ece27_File::_method_get_row(jule::Int _4426_row) {
	jule::Int _4517_n = 0LL;
	jule::Int _4617_line_start = 0LL;
	jule::Int _4717_i = 0LL;
	_iter_begin_4373185760:;
	if (!(_4717_i < (*this)._field_data.len())) { goto _iter_end_4373185760; }
	{
		if ((*this)._field_data[static_cast<jule::Int>(_4717_i)] != '\n') {
			goto _iter_next_4373185760;
		}
		(_4517_n)++;
		if (_4517_n == _4426_row) {
			return static_cast<jule::Str>((*this)._field_data.slice(static_cast<jule::Int>(_4617_line_start),static_cast<jule::Int>(_4717_i)));
		}
		_4617_line_start=static_cast<jule::Int>(_4717_i + 1LL);
	}
	_iter_next_4373185760:;
	(_4717_i)++;
	goto _iter_begin_4373185760;
	_iter_end_4373185760:;
	return jule::Str("", 0);
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61ece27_File &_Src) {
	_Stream << "File{";
	_Stream << "data:" << _Src._field_data << ", ";
	_Stream << "_path:" << _Src._field__path << ", ";
	_Stream << "_tokens:" << _Src._field__tokens;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b62ba104_KindPair &_Src) {
	_Stream << "KindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _1b62ba104_Lex::_method_push_err(jule::Str _40227_fmt,jule::Slice<jule::Any> _40240_args) {
	(*this)._field_errors=jule::append((*this)._field_errors,jule::Slice<_1cdeeb191_Log>({_1b62ba104_make_err((*this)._field_row,(*this)._field_column,(*this)._field_file,_40227_fmt,_40240_args)}));
}



inline void _1b62ba104_Lex::_method_push_err_tok(_1b61ec5ec_Token& _40732_token,jule::Str _40746_fmt) {
	(*this)._field_errors=jule::append((*this)._field_errors,jule::Slice<_1cdeeb191_Log>({_1b62ba104_make_err(_40732_token._field_row,_40732_token._field_column,(*this)._field_file,_40746_fmt,jule::Slice<jule::Any>({}))}));
}



inline void _1b62ba104_Lex::_method_lex(void) {
	(*this)._field_errors=nullptr;
	(*this)._method_new_line();
	_iter_begin_4373130480:;
	if (!((*this)._field_pos < (*this)._field_file->_field_data.len())) { goto _iter_end_4373130480; }
	{
		_1b61ec5ec_Token _41721_token = (*this)._method_token();
		if (_41721_token._field_id != 0LLU) {
			(*this)._field_tokens=jule::append((*this)._field_tokens,jule::Slice<_1b61ec5ec_Token>({_41721_token}));
		}
	}
	_iter_next_4373130480:;
	goto _iter_begin_4373130480;
	_iter_end_4373130480:;
}



inline jule::Str _1b62ba104_Lex::_method_id(jule::Slice<jule::U8>& _42622_ln) {
	if (_42622_ln.len() == 0LL) {
		return jule::Str("", 0);
	}
	jule::I32 _43014_r;
	jule::Int _43021_i;
	std::tie(_43014_r,_43021_i) = _1a99595b3_decode_rune(_42622_ln);
	if ((_43014_r != '_') && (!(_1b61ec5ec_is_letter(_43014_r)))) {
		return jule::Str("", 0);
	}
	_iter_begin_4373123536:;
	if (!(_43021_i < _42622_ln.len())) { goto _iter_end_4373123536; }
	{
		jule::I32 _43618_r;
		jule::Int _43621_n;
		std::tie(_43618_r,_43621_n) = _1a99595b3_decode_rune(_42622_ln.slice(static_cast<jule::Int>(_43021_i)));
		if (((_43618_r != '_') && (!(_1b61ec5ec_is_decimal(static_cast<jule::U8>(_43618_r))))) && (!(_1b61ec5ec_is_letter(_43618_r)))) {
			(*this)._field_pos+=_43021_i;
			return static_cast<jule::Str>(_42622_ln.slice(0LL,static_cast<jule::Int>(_43021_i)));
		}
		_43021_i+=_43621_n;
	}
	_iter_next_4373123536:;
	goto _iter_begin_4373123536;
	_iter_end_4373123536:;
	(*this)._field_pos+=static_cast<jule::I64>(_42622_ln.len());
	return static_cast<jule::Str>(_42622_ln);
}



inline jule::Slice<jule::U8> _1b62ba104_Lex::_method_resume(void) {
	jule::Int _45117_i = (*this)._field_pos;
	_iter_begin_4400536912:;
	if (!(_45117_i < (*this)._field_file->_field_data.len())) { goto _iter_end_4400536912; }
	{
		jule::I32 _45317_r = static_cast<jule::I32>((*this)._field_file->_field_data[static_cast<jule::Int>(_45117_i)]);
		if (_1b61ec5ec_is_space(_45317_r)) {
			((*this)._field_pos)++;
			{
				auto _match_expr{ _45317_r };
				if (!(('\n') == _match_expr)) { goto _case_end_4400314192; }
				_case_begin_4400314192:;
				{
					(*this)._method_new_line();
				}
				goto _match_end_4372989376;
				_case_end_4400314192:;
				if (!(('\t') == _match_expr)) { goto _case_end_4400414352; }
				_case_begin_4400414352:;
				{
					(*this)._field_column+=8LL;
				}
				goto _match_end_4372989376;
				_case_end_4400414352:;
				_case_begin_4400312160:;
				{
					((*this)._field_column)++;
				}
				goto _match_end_4372989376;
				_case_end_4400312160:;
				_match_end_4372989376:;
			}
			goto _iter_next_4400536912;
		}
		jule::Int _46421_j = _45117_i;
		_iter_begin_4400420160:;
		if (!(_46421_j < (*this)._field_file->_field_data.len())) { goto _iter_end_4400420160; }
		{
			if ((*this)._field_file->_field_data[static_cast<jule::Int>(_46421_j)] == '\n') {
				goto _iter_end_4400420160;
			}
		}
		_iter_next_4400420160:;
		(_46421_j)++;
		goto _iter_begin_4400420160;
		_iter_end_4400420160:;
		return (*this)._field_file->_field_data.slice(static_cast<jule::Int>(_45117_i),static_cast<jule::Int>(_46421_j));
	}
	_iter_next_4400536912:;
	(_45117_i)++;
	goto _iter_begin_4400536912;
	_iter_end_4400536912:;
	return nullptr;
}



inline void _1b62ba104_Lex::_method_lex_line_comment(_1b61ec5ec_Token& _47640_token) {
	jule::Int _47713_start = (*this)._field_pos;
	(*this)._field_pos+=2LL;
	_iter_begin_4400413584:;
	if (!((*this)._field_pos < (*this)._field_file->_field_data.len())) { goto _iter_end_4400413584; }
	{
		jule::U8 _48117_r = (*this)._field_file->_field_data[static_cast<jule::Int>((*this)._field_pos)];
		if ((_48117_r == '\n') || (_48117_r == '\r')) {
			if ((*this)._method_is_first_token_of_line()) {
				_47640_token._field_id=18LLU;
				_47640_token._field_kind=static_cast<jule::Str>((*this)._field_file->_field_data.slice(static_cast<jule::Int>(_47713_start),static_cast<jule::Int>((*this)._field_pos)));
			}
			return;
		}
	}
	_iter_next_4400413584:;
	((*this)._field_pos)++;
	goto _iter_begin_4400413584;
	_iter_end_4400413584:;
	if ((*this)._method_is_first_token_of_line()) {
		_47640_token._field_id=18LLU;
		_47640_token._field_kind=static_cast<jule::Str>((*this)._field_file->_field_data.slice(static_cast<jule::Int>(_47713_start)));
	}
}



inline void _1b62ba104_Lex::_method_lex_range_comment(void) {
	(*this)._field_pos+=2LL;
	_iter_begin_4373267712:;
	if (!((*this)._field_pos < (*this)._field_file->_field_data.len())) { goto _iter_end_4373267712; }
	{
		jule::U8 _50017_r = (*this)._field_file->_field_data[static_cast<jule::Int>((*this)._field_pos)];
		if (_50017_r == '\r') {
			goto _iter_next_4373267712;
		}
		if (_50017_r == '\n') {
			(*this)._method_new_line();
			goto _iter_next_4373267712;
		}
		(*this)._field_column+=1LL;
		if (((((*this)._field_pos + 1LL) < (*this)._field_file->_field_data.len()) && (_50017_r == '*')) && ((*this)._field_file->_field_data[static_cast<jule::Int>((*this)._field_pos + 1LL)] == '/')) {
			(*this)._field_column+=2LL;
			(*this)._field_pos+=2LL;
			return;
		}
	}
	_iter_next_4373267712:;
	((*this)._field_pos)++;
	goto _iter_begin_4373267712;
	_iter_end_4373267712:;
	(*this)._method_push_err(jule::Str("missing block comment close", 27),jule::Slice<jule::Any>({}));
}



inline jule::Str _1b62ba104_Lex::_method_num(jule::Slice<jule::U8>& _52123_txt) {
	jule::Str _52138_lit = jule::Str();
	_52138_lit=_1b62ba104_hex_num(_52123_txt);
	if (_52138_lit != jule::Str("", 0)) {
		goto _julec_label_end;
	}
	_52138_lit=_1b62ba104_octal_num(_52123_txt);
	if (_52138_lit != jule::Str("", 0)) {
		goto _julec_label_end;
	}
	_52138_lit=_1b62ba104_binary_num(_52123_txt);
	if (_52138_lit != jule::Str("", 0)) {
		goto _julec_label_end;
	}
	_52138_lit=_1b62ba104_common_num(_52123_txt);
	_julec_label_end:;
	(*this)._field_pos+=static_cast<jule::I64>(_52138_lit.len());
	return _52138_lit;
}



inline jule::Str _1b62ba104_Lex::_method_escape_seq(jule::Slice<jule::U8>& _54030_txt) {
	jule::Str _54117_seq = jule::Str("", 0);
	if (_54030_txt.len() < 2LL) {
		goto _julec_label_end;
	}
	{
		auto _match_expr{ _54030_txt[1LL] };
		if (!(('\\') == _match_expr || ('\'') == _match_expr || ('\"') == _match_expr || ('a') == _match_expr || ('b') == _match_expr || ('f') == _match_expr || ('n') == _match_expr || ('r') == _match_expr || ('t') == _match_expr || ('v') == _match_expr)) { goto _case_end_4400804624; }
		_case_begin_4400804624:;
		{
			(*this)._field_pos+=2LL;
			return static_cast<jule::Str>(_54030_txt.slice(0LL,2LL));
		}
		goto _match_end_4400801952;
		_case_end_4400804624:;
		if (!(('U') == _match_expr)) { goto _case_end_4400805552; }
		_case_begin_4400805552:;
		{
			_54117_seq=_1b62ba104_big_unicode_point_escape(_54030_txt);
		}
		goto _match_end_4400801952;
		_case_end_4400805552:;
		if (!(('u') == _match_expr)) { goto _case_end_4400805664; }
		_case_begin_4400805664:;
		{
			_54117_seq=_1b62ba104_little_unicode_point_escape(_54030_txt);
		}
		goto _match_end_4400801952;
		_case_end_4400805664:;
		if (!(('x') == _match_expr)) { goto _case_end_4400803984; }
		_case_begin_4400803984:;
		{
			_54117_seq=_1b62ba104_hex_byte_escape(_54030_txt);
		}
		goto _match_end_4400801952;
		_case_end_4400803984:;
		_case_begin_4400803680:;
		{
			_54117_seq=_1b62ba104_byte_escape(_54030_txt);
		}
		goto _match_end_4400801952;
		_case_end_4400803680:;
		_match_end_4400801952:;
	}
	_julec_label_end:;
	if (_54117_seq == jule::Str("", 0)) {
		((*this)._field_pos)++;
		(*this)._method_push_err(jule::Str("invalid escape sequence", 23),jule::Slice<jule::Any>({}));
		return jule::Str("", 0);
	}
	(*this)._field_pos+=static_cast<jule::I64>(_54117_seq.len());
	return _54117_seq;
}



inline jule::Str _1b62ba104_Lex::_method_get_rune(jule::Slice<jule::U8>& _57428_txt,jule::Bool _57441_raw) {
	if ((!(_57441_raw)) && (_57428_txt[0LL] == '\\')) {
		return (*this)._method_escape_seq(_57428_txt);
	}
	jule::I32 _57914_r;
	jule::Int _57917_n;
	std::tie(_57914_r,_57917_n) = _1a99595b3_decode_rune(_57428_txt);
	(*this)._field_pos+=_57917_n;
	return static_cast<jule::Str>(_57914_r);
}



inline jule::Str _1b62ba104_Lex::_method_lex_rune(jule::Slice<jule::U8>& _58428_txt) {
	jule::Str _58517_run = jule::Str("'", 1);
	((*this)._field_column)++;
	jule::Int _58717_n = 0LL;
	jule::Int _58817_i = 1LL;
	_iter_begin_4400825184:;
	if (!(_58817_i < _58428_txt.len())) { goto _iter_end_4400825184; }
	{
		if (_58428_txt[static_cast<jule::Int>(_58817_i)] == '\r') {
			goto _iter_next_4400825184;
		}
		if (_58428_txt[static_cast<jule::Int>(_58817_i)] == '\n') {
			(*this)._method_push_err(jule::Str("rune is not finished", 20),jule::Slice<jule::Any>({}));
			((*this)._field_pos)++;
			(*this)._method_new_line();
			return jule::Str("", 0);
		}
		jule::Slice<jule::U8> _60017_part = _58428_txt.slice(static_cast<jule::Int>(_58817_i));
		jule::Str _60117_r = (*this)._method_get_rune(_60017_part,false);
		_58517_run+=_60117_r;
		jule::I64 _60317_length = _60117_r.len();
		(*this)._field_column+=_60317_length;
		if (_60117_r == jule::Str("'", 1)) {
			((*this)._field_pos)++;
			goto _iter_end_4400825184;
		}
		if (_60317_length > 1LL) {
			_58817_i+=static_cast<jule::I64>(_60317_length - 1LL);
		}
		(_58717_n)++;
	}
	_iter_next_4400825184:;
	(_58817_i)++;
	goto _iter_begin_4400825184;
	_iter_end_4400825184:;
	if (_58717_n == 0LL) {
		(*this)._method_push_err(jule::Str("rune is cannot empty", 20),jule::Slice<jule::Any>({}));
	} else if (_58717_n > 1LL) {
		(*this)._method_push_err(jule::Str("rune is should be single", 24),jule::Slice<jule::Any>({}));
	}
	return _58517_run;
}



inline jule::Str _1b62ba104_Lex::_method_lex_str(void) {
	jule::Str _62517_s = jule::Str("", 0);
	jule::U8 _62613_mark = (*this)._field_file->_field_data[static_cast<jule::Int>((*this)._field_pos)];
	((*this)._field_pos)++;
	jule::Bool _62813_raw = _62613_mark == '`';
	_62517_s+=static_cast<jule::Str>(_62613_mark);
	((*this)._field_column)++;
	_iter_begin_4400854368:;
	if (!((*this)._field_pos < (*this)._field_file->_field_data.len())) { goto _iter_end_4400854368; }
	{
		jule::U8 _63317_ch = (*this)._field_file->_field_data[static_cast<jule::Int>((*this)._field_pos)];
		if (_63317_ch == '\r') {
			goto _iter_next_4400854368;
		}
		if (_63317_ch == '\n') {
			(*this)._method_new_line();
			if ((!(_62813_raw))) {
				(*this)._method_push_err(jule::Str("string is not finished", 22),jule::Slice<jule::Any>({}));
				((*this)._field_pos)++;
				return jule::Str("", 0);
			}
		}
		jule::Slice<jule::U8> _64521_part = (*this)._field_file->_field_data.slice(static_cast<jule::Int>((*this)._field_pos));
		jule::Str _64617_r = (*this)._method_get_rune(_64521_part,_62813_raw);
		_62517_s+=_64617_r;
		(*this)._field_column+=static_cast<jule::I64>(_64617_r.len());
		if (_63317_ch == _62613_mark) {
			goto _iter_end_4400854368;
		}
	}
	_iter_next_4400854368:;
	goto _iter_begin_4400854368;
	_iter_end_4400854368:;
	return _62517_s;
}



inline jule::Bool _1b62ba104_Lex::_method_is_first_token_of_line(void) {
	return (*this)._field_column == 1LL;
}



inline void _1b62ba104_Lex::_method_new_line(void) {
	((*this)._field_row)++;
	(*this)._field_column=1LL;
}



inline jule::Bool _1b62ba104_Lex::_method_is_op(jule::Slice<jule::U8>& _66625_txt,jule::Str _66638_kind,jule::Uint _66649_id,_1b61ec5ec_Token& _66667_t) {
	if ((!(_1b62ba104_bytes_has_prefix(_66625_txt,_66638_kind)))) {
		return false;
	}
	_66667_t._field_kind=_66638_kind;
	_66667_t._field_id=_66649_id;
	(*this)._field_pos+=static_cast<jule::I64>(_66638_kind.len());
	return true;
}



inline jule::Bool _1b62ba104_Lex::_method_lex_basic_ops(jule::Slice<jule::U8> _67732_txt,_1b61ec5ec_Token& _67750_tok) {
	{
		auto _range_expr = _1b62ba104_BASIC_OPS;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			_1b62ba104_KindPair _1b62ba104_pair = *_range_begin;
			_iter_begin_4431309408:;
			{
				if ((*this)._method_is_op(_67732_txt,_1b62ba104_pair._field_kind,_1b62ba104_pair._field_id,_67750_tok)) {
					return true;
				}
			}
			_iter_next_4431309408:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b62ba104_pair = *_range_begin; goto _iter_begin_4431309408; }
			_iter_end_4431309408:;
		}
	}
	return false;
}



inline jule::Bool _1b62ba104_Lex::_method_lex_id(jule::Slice<jule::U8>& _68726_txt,_1b61ec5ec_Token& _68744_t) {
	jule::Str _68813_lex = (*this)._method_id(_68726_txt);
	if (_68813_lex == jule::Str("", 0)) {
		return false;
	}
	_68744_t._field_kind=_68813_lex;
	_68744_t._field_id=2LLU;
	return true;
}



inline jule::Bool _1b62ba104_Lex::_method_lex_num(jule::Slice<jule::U8>& _69827_txt,_1b61ec5ec_Token& _69845_t) {
	jule::Str _69913_lex = (*this)._method_num(_69827_txt);
	if (_69913_lex == jule::Str("", 0)) {
		return false;
	}
	_69845_t._field_kind=_69913_lex;
	_69845_t._field_id=6LLU;
	return true;
}



inline _1b61ec5ec_Token _1b62ba104_Lex::_method_token(void) {
	_1b61ec5ec_Token _71117_t = _1b61ec5ec_Token((*this)._field_file,jule::Int(),jule::Int(),jule::Str(),0LLU);
	jule::Slice<jule::U8> _71313_txt = (*this)._method_resume();
	if (_71313_txt == nullptr) {
		return _71117_t;
	}
	_71117_t._field_column=(*this)._field_column;
	_71117_t._field_row=(*this)._field_row;
	{
		if (!(((*this)._method_lex_num(_71313_txt,_71117_t)))) { goto _case_end_4386430448; }
		goto _match_end_4413970272;
		_case_end_4386430448:;
		if (!((_71313_txt[0LL] == '\''))) { goto _case_end_4413670384; }
		_case_begin_4413670384:;
		{
			_71117_t._field_kind=(*this)._method_lex_rune(_71313_txt);
			_71117_t._field_id=6LLU;
			return _71117_t;
		}
		goto _match_end_4413970272;
		_case_end_4413670384:;
		if (!(((_71313_txt[0LL] == '\"') || (_71313_txt[0LL] == '`')))) { goto _case_end_4413696224; }
		_case_begin_4413696224:;
		{
			_71117_t._field_kind=(*this)._method_lex_str();
			_71117_t._field_id=6LLU;
			return _71117_t;
		}
		goto _match_end_4413970272;
		_case_end_4413696224:;
		if (!((_1b62ba104_bytes_has_prefix(_71313_txt,jule::Str("//", 2))))) { goto _case_end_4413750352; }
		_case_begin_4413750352:;
		{
			(*this)._method_lex_line_comment(_71117_t);
			return _71117_t;
		}
		goto _match_end_4413970272;
		_case_end_4413750352:;
		if (!((_1b62ba104_bytes_has_prefix(_71313_txt,jule::Str("/*", 2))))) { goto _case_end_4413828704; }
		_case_begin_4413828704:;
		{
			(*this)._method_lex_range_comment();
			return _71117_t;
		}
		goto _match_end_4413970272;
		_case_end_4413828704:;
		if (!(((*this)._method_is_op(_71313_txt,jule::Str("(", 1),3LLU,_71117_t)) || ((*this)._method_is_op(_71313_txt,jule::Str(")", 1),3LLU,_71117_t)) || ((*this)._method_is_op(_71313_txt,jule::Str("{", 1),3LLU,_71117_t)) || ((*this)._method_is_op(_71313_txt,jule::Str("}", 1),3LLU,_71117_t)) || ((*this)._method_is_op(_71313_txt,jule::Str("[", 1),3LLU,_71117_t)) || ((*this)._method_is_op(_71313_txt,jule::Str("]", 1),3LLU,_71117_t)) || ((*this)._method_lex_basic_ops(_71313_txt,_71117_t)))) { goto _case_end_4413952272; }
		goto _match_end_4413970272;
		_case_end_4413952272:;
		if (!(((*this)._method_lex_id(_71313_txt,_71117_t)))) { goto _case_end_4413972176; }
		_case_begin_4413972176:;
		{
			{
				auto _range_expr = _1b62ba104_KEYWORDS;
				if (_range_expr.begin() != _range_expr.end()) {
					auto _range_begin = _range_expr.begin();
					const auto _range_end = _range_expr.end();
					_1b62ba104_KindPair _1b62ba104_pair = *_range_begin;
					_iter_begin_4414115440:;
					{
						if (_1b62ba104_pair._field_kind == _71117_t._field_kind) {
							_71117_t._field_id=_1b62ba104_pair._field_id;
							goto _iter_end_4414115440;
						}
					}
					_iter_next_4414115440:;
					++_range_begin;
					if (_range_begin != _range_end) { _1b62ba104_pair = *_range_begin; goto _iter_begin_4414115440; }
					_iter_end_4414115440:;
				}
			}
		}
		goto _match_end_4413970272;
		_case_end_4413972176:;
		_case_begin_4506181328:;
		{
			jule::I32 _76318_r;
			jule::Int _76321_sz;
			std::tie(_76318_r,_76321_sz) = _1a99595b3_decode_rune(_71313_txt);
			(*this)._method_push_err(jule::Str("undefined code content: @", 25),jule::Slice<jule::Any>({jule::Any(_76318_r)}));
			((*this)._field_column)++;
			(*this)._field_pos+=_76321_sz;
			return _71117_t;
		}
		goto _match_end_4413970272;
		_case_end_4506181328:;
		_match_end_4413970272:;
	}
	(*this)._field_column+=static_cast<jule::I64>(_71117_t._field_kind.len());
	return _71117_t;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b62ba104_Lex &_Src) {
	_Stream << "Lex{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61d1d62_Ast &_Src) {
	_Stream << "Ast{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "top_directives:" << _Src._field_top_directives << ", ";
	_Stream << "use_decls:" << _Src._field_use_decls << ", ";
	_Stream << "impls:" << _Src._field_impls << ", ";
	_Stream << "comments:" << _Src._field_comments << ", ";
	_Stream << "decls:" << _Src._field_decls;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61ca014_CommentGroup &_Src) {
	_Stream << "CommentGroup{";
	_Stream << "comments:" << _Src._field_comments;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61ca014_NamespaceTypeDecl &_Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "idents:" << _Src._field_idents << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61ca014_RefTypeDecl &_Src) {
	_Stream << "RefTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61ca014_SlcTypeDecl &_Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61ca014_TupleTypeDecl &_Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "types:" << _Src._field_types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b61ca014_PtrTypeDecl::_method_is_unsafe(void) {
	return (!(jule::real((*this)._field_elem)));
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61ca014_PtrTypeDecl &_Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b61ca014_ArrTypeDecl::_method_auto_sized(void) {
	return (!(jule::real((*this)._field_size)));
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61ca014_ArrTypeDecl &_Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61ca014_MapTypeDecl &_Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61ca014_RetTypeDecl &_Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "idents:" << _Src._field_idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61ca014_TupleExpr &_Src) {
	_Stream << "TupleExpr{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61ca014_CastExpr &_Src) {
	_Stream << "CastExpr{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61ca014_StructLit &_Src) {
	_Stream << "StructLit{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61ca014_ScopeTree &_Src) {
	_Stream << "ScopeTree{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "deferred:" << _Src._field_deferred << ", ";
	_Stream << "stmts:" << _Src._field_stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61ca014_Conditional &_Src) {
	_Stream << "Conditional{";
	_Stream << "head:" << _Src._field_head << ", ";
	_Stream << "tail:" << _Src._field_tail << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1a9b97966_FileInfo &_Src) {
	_Stream << "FileInfo{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1a9b97966_PackageInfo &_Src) {
	_Stream << "PackageInfo{";
	_Stream << "files:" << _Src._field_files;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1a9b97a76_Stmt &_Src) {
	_Stream << "Stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _1a9b97a76_ScopeParser::_method_stop(void) {
	(*this)._field_pos=-1LL;
}



inline jule::Bool _1a9b97a76_ScopeParser::_method_stopped(void) {
	return (*this)._field_pos == -1LL;
}



inline jule::Bool _1a9b97a76_ScopeParser::_method_finished(void) {
	return (*this)._field_pos >= (*this)._field_stms.len();
}



inline jule::Bool _1a9b97a76_ScopeParser::_method_is_last_st(void) {
	return ((*this)._field_pos + 1LL) >= (*this)._field_stms.len();
}



inline void _1a9b97a76_ScopeParser::_method_push_err(_1b61ec5ec_Token _17527_token,jule::Str _17541_fmt) {
	(*this)._field_p->_method_push_err(_17527_token,_17541_fmt,jule::Slice<jule::Any>({}));
}



inline void _1a9b97a76_ScopeParser::_method_push_suggestion(jule::Str _17834_fmt,jule::Slice<jule::Any> _17847_args) {
	(*this)._field_p->_method_push_suggestion(_17834_fmt,_17847_args);
}



inline void _1a9b97a76_ScopeParser::_method_insert_as_next(jule::Slice<_1b61ec5ec_Token>& _18238_tokens) {
	(*this)._field_stms=jule::append((*this)._field_stms.slice(0LL,static_cast<jule::Int>((*this)._field_pos + 1LL)),(*this)._field_stms.slice(static_cast<jule::Int>((*this)._field_pos)));
	(*this)._field_stms[static_cast<jule::Int>((*this)._field_pos + 1LL)]=jule::new_struct<_1a9b97a76_Stmt>(new( std::nothrow ) _1a9b97a76_Stmt(_18238_tokens,jule::Bool()));
}



inline jule::Ref<_1a9b97a76_Stmt> _1a9b97a76_ScopeParser::_method_next(void) {
	((*this)._field_pos)++;
	return (*this)._field_stms[static_cast<jule::Int>((*this)._field_pos)];
}



inline jule::Ref<_1b61ca014_ScopeTree> _1a9b97a76_ScopeParser::_method_build_scope(jule::Slice<_1b61ec5ec_Token>& _19235_tokens) {
	jule::Ref<_1b61ca014_ScopeTree> _19317_s = _1a9b97a76_new_scope();
	_19317_s->_field_parent=(*this)._field_s;
	_1a9b97a76_ScopeParser _19517_ssp = _1a9b97a76_ScopeParser((*this)._field_p,jule::Ref<_1b61ca014_ScopeTree>(),jule::Slice<jule::Ref<_1a9b97a76_Stmt>>(),jule::Int());
	_19517_ssp._method_build(_19235_tokens,_19317_s);
	return _19317_s;
}



inline jule::Any _1a9b97a76_ScopeParser::_method_build_var_st(jule::Slice<_1b61ec5ec_Token>& _20236_tokens) {
	jule::Ref<_1b61ca014_VarDecl> _20317_v = (*this)._field_p->_method_build_var(_20236_tokens);
	_20317_v->_field_scope=(*this)._field_s;
	return jule::Any(_20317_v);
}



inline jule::Any _1a9b97a76_ScopeParser::_method_build_ret_st(jule::Slice<_1b61ec5ec_Token> _20835_tokens) {
	jule::Ref<_1b61ca014_RetSt> _20917_st = jule::new_struct<_1b61ca014_RetSt>(new( std::nothrow ) _1b61ca014_RetSt(_20835_tokens[0LL],jule::Ref<_1b61ca014_Expr>()));
	if (_20835_tokens.len() > 1LL) {
		_20835_tokens=_20835_tokens.slice(1LL);
		_20917_st->_field_expr=(*this)._field_p->_method_build_expr(_20835_tokens);
	}
	return jule::Any(_20917_st);
}



inline jule::Any _1a9b97a76_ScopeParser::_method_build_while_next_iter(jule::Ref<_1a9b97a76_Stmt>& _21945_s) {
	jule::Ref<_1b61ca014_Iter> _22017_it = jule::new_struct<_1b61ca014_Iter>(new( std::nothrow ) _1b61ca014_Iter(_21945_s->_field_tokens[0LL],jule::Any(),jule::Ref<_1b61ca014_ScopeTree>()));
	jule::Slice<_1b61ec5ec_Token> _22317_tokens = _21945_s->_field_tokens.slice(1LL);
	jule::Ref<_1b61ca014_WhileKind> _22417_kind = jule::new_struct<_1b61ca014_WhileKind>(new( std::nothrow ) _1b61ca014_WhileKind());
	if (_22317_tokens.len() > 0LL) {
		_22417_kind->_field_expr=(*this)._field_p->_method_build_expr(_22317_tokens);
	}
	if ((*this)._method_is_last_st()) {
		(*this)._method_push_err(_22017_it->_field_token,jule::Str("invalid syntax", 14));
		return jule::Any(nullptr);
	}
	_22317_tokens=(*this)._method_next()->_field_tokens;
	jule::Slice<_1b61ec5ec_Token> _23617_st_tokens = _1a9ba6854_get_block_expr(_22317_tokens);
	if (_23617_st_tokens.len() > 0LL) {
		jule::Ref<_1a9b97a76_Stmt> _23821_stmt = jule::new_struct<_1a9b97a76_Stmt>(new( std::nothrow ) _1a9b97a76_Stmt(_23617_st_tokens,_21945_s->_field_terminated));
		_22417_kind->_field_next_token=_23617_st_tokens[0LL];
		_22417_kind->_field_next=(*this)._method_build_st(_23821_stmt);
	}
	jule::I64 _24617_i = _23617_st_tokens.len();
	jule::Slice<_1b61ec5ec_Token> _24717_block_tokens = _1a9e07434_range(_24617_i,jule::Str("{", 1),jule::Str("}", 1),_22317_tokens);
	if (_24717_block_tokens == nullptr) {
		(*this)._method_stop();
		(*this)._method_push_err(_22017_it->_field_token,jule::Str("body is not exist", 17));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::Any(nullptr);
	}
	if (_24617_i < _22317_tokens.len()) {
		(*this)._method_push_err(_22317_tokens[static_cast<jule::Int>(_24617_i)],jule::Str("invalid syntax", 14));
	}
	_22017_it->_field_scope=(*this)._method_build_scope(_24717_block_tokens);
	_22017_it->_field_kind=jule::Any(_22417_kind);
	return jule::Any(_22017_it);
}



inline jule::Ref<_1b61ca014_WhileKind> _1a9b97a76_ScopeParser::_method_build_while_iter_kind(jule::Slice<_1b61ec5ec_Token>& _26445_tokens) {
	return jule::new_struct<_1b61ca014_WhileKind>(new( std::nothrow ) _1b61ca014_WhileKind((*this)._field_p->_method_build_expr(_26445_tokens),jule::Any(),_1b61ec5ec_Token()));
}



inline jule::Slice<jule::Slice<_1b61ec5ec_Token>> _1a9b97a76_ScopeParser::_method_get_range_kind_keys_tokens(jule::Slice<_1b61ec5ec_Token>& _27050_toks) {
	jule::Slice<jule::Slice<_1b61ec5ec_Token>> _27118_vars;
	jule::Slice<_1cdeeb191_Log> _27124_errs;
	std::tie(_27118_vars,_27124_errs) = _1a9e07434_parts(_27050_toks,8LLU,true);
	(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_27124_errs);
	return _27118_vars;
}



inline jule::Ref<_1b61ca014_VarDecl> _1a9b97a76_ScopeParser::_method_build_range_kind_key(jule::Slice<_1b61ec5ec_Token>& _27644_tokens) {
	if (_27644_tokens.len() == 0LL) {
		return jule::new_ref<_1b61ca014_VarDecl>();
	}
	jule::Ref<_1b61ca014_VarDecl> _28017_key = jule::new_struct<_1b61ca014_VarDecl>(new( std::nothrow ) _1b61ca014_VarDecl(jule::Ref<_1b61ca014_ScopeTree>(),_27644_tokens[0LL],jule::Str(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Slice<jule::Ref<_1b61ca014_Directive>>(),jule::Ref<_1b61ca014_CommentGroup>(),jule::Ref<_1b61ca014_TypeDecl>(),jule::Ref<_1b61ca014_Expr>()));
	if (_28017_key->_field_token._field_id == 36LLU) {
		_28017_key->_field_mutable=true;
		if (_27644_tokens.len() == 1LL) {
			(*this)._method_push_err(_28017_key->_field_token,jule::Str("invalid syntax", 14));
		}
		_28017_key->_field_token=_27644_tokens[1LL];
	} else if (_27644_tokens.len() > 1LL) {
		(*this)._method_push_err(_27644_tokens[1LL],jule::Str("invalid syntax", 14));
	}
	if (_28017_key->_field_token._field_id != 2LLU) {
		(*this)._method_push_err(_28017_key->_field_token,jule::Str("invalid syntax", 14));
		(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b61ca014_VarDecl>();
	}
	_28017_key->_field_ident=_28017_key->_field_token._field_kind;
	return _28017_key;
}



inline jule::Slice<jule::Ref<_1b61ca014_VarDecl>> _1a9b97a76_ScopeParser::_method_build_range_kind_keys(jule::Slice<jule::Slice<_1b61ec5ec_Token>>& _30145_parts) {
	jule::Slice<jule::Ref<_1b61ca014_VarDecl>> _30217_keys = nullptr;
	{
		auto _range_expr = _30145_parts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Slice<_1b61ec5ec_Token> _1a9b97a76_tokens = *_range_begin;
			_iter_begin_4432960096:;
			{
				_30217_keys=jule::append(_30217_keys,jule::Slice<jule::Ref<_1b61ca014_VarDecl>>({(*this)._method_build_range_kind_key(_1a9b97a76_tokens)}));
			}
			_iter_next_4432960096:;
			++_range_begin;
			if (_range_begin != _range_end) { _1a9b97a76_tokens = *_range_begin; goto _iter_begin_4432960096; }
			_iter_end_4432960096:;
		}
	}
	return _30217_keys;
}



inline void _1a9b97a76_ScopeParser::_method_setup_range_kind_keys_plain(jule::Ref<_1b61ca014_RangeKind>& _30951_rng,jule::Slice<_1b61ec5ec_Token>& _30973_tokens) {
	jule::Slice<jule::Slice<_1b61ec5ec_Token>> _31017_key_tokens = (*this)._method_get_range_kind_keys_tokens(_30973_tokens);
	if (_31017_key_tokens.len() == 0LL) {
		return;
	}
	if (_31017_key_tokens.len() > 2LL) {
		(*this)._method_push_err(_30951_rng->_field_in_token,jule::Str("range variables can be maximum two", 34));
	}
	jule::Slice<jule::Ref<_1b61ca014_VarDecl>> _31717_keys = (*this)._method_build_range_kind_keys(_31017_key_tokens);
	_30951_rng->_field_key_a=_31717_keys[0LL];
	if (_31717_keys.len() > 1LL) {
		_30951_rng->_field_key_b=_31717_keys[1LL];
	}
}



inline void _1a9b97a76_ScopeParser::_method_setup_range_kind_keys_explicit(jule::Ref<_1b61ca014_RangeKind>& _32454_rng,jule::Slice<_1b61ec5ec_Token>& _32476_tokens) {
	jule::Int _32517_i = 0LL;
	jule::Slice<_1b61ec5ec_Token> _32617_rang = _1a9e07434_range(_32517_i,jule::Str("(", 1),jule::Str(")", 1),_32476_tokens);
	if (_32517_i < _32476_tokens.len()) {
		(*this)._method_push_err(_32454_rng->_field_in_token,jule::Str("invalid syntax", 14));
	}
	(*this)._method_setup_range_kind_keys_plain(_32454_rng,_32617_rang);
}



inline void _1a9b97a76_ScopeParser::_method_setup_range_kind_keys(jule::Ref<_1b61ca014_RangeKind>& _33345_rng,jule::Slice<_1b61ec5ec_Token>& _33367_tokens) {
	if (_33367_tokens[0LL]._field_id == 3LLU) {
		if (_33367_tokens[0LL]._field_kind != jule::Str("(", 1)) {
			(*this)._method_push_err(_33367_tokens[0LL],jule::Str("invalid syntax", 14));
			return;
		}
		(*this)._method_setup_range_kind_keys_explicit(_33345_rng,_33367_tokens);
		return;
	}
	(*this)._method_setup_range_kind_keys_plain(_33345_rng,_33367_tokens);
}



inline jule::Ref<_1b61ca014_RangeKind> _1a9b97a76_ScopeParser::_method_build_range_iter_kind(jule::Slice<_1b61ec5ec_Token>& _34545_var_tokens,jule::Slice<_1b61ec5ec_Token>& _34614_expr_tokens,_1b61ec5ec_Token& _34641_in_token) {
	jule::Ref<_1b61ca014_RangeKind> _34717_rng = jule::new_struct<_1b61ca014_RangeKind>(new( std::nothrow ) _1b61ca014_RangeKind(_34641_in_token,jule::Ref<_1b61ca014_Expr>(),jule::Ref<_1b61ca014_VarDecl>(),jule::Ref<_1b61ca014_VarDecl>()));
	if (_34614_expr_tokens.len() == 0LL) {
		(*this)._method_push_err(_34717_rng->_field_in_token,jule::Str("expression missing", 18));
		return _34717_rng;
	}
	_34717_rng->_field_expr=(*this)._field_p->_method_build_expr(_34614_expr_tokens);
	if (_34545_var_tokens.len() > 0LL) {
		(*this)._method_setup_range_kind_keys(_34717_rng,_34545_var_tokens);
	}
	return _34717_rng;
}



inline jule::Any _1a9b97a76_ScopeParser::_method_build_common_iter_kind(jule::Slice<_1b61ec5ec_Token>& _36146_tokens,_1b61ec5ec_Token& _36164_err_tok) {
	jule::Int _36217_brace_n = 0LL;
	{
		auto _range_expr = _36146_tokens;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1a9b97a76_i = 0;
			_1b61ec5ec_Token _1a9b97a76_tok = *_range_begin;
			_iter_begin_4433009952:;
			{
				if (_1a9b97a76_tok._field_id == 3LLU) {
					{
						auto _match_expr{ _1a9b97a76_tok._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4433014304; }
						_case_begin_4433014304:;
						{
							(_36217_brace_n)++;
							goto _iter_next_4433009952;
						}
						goto _match_end_4433012720;
						_case_end_4433014304:;
						_case_begin_4433013504:;
						{
							(_36217_brace_n)--;
						}
						goto _match_end_4433012720;
						_case_end_4433013504:;
						_match_end_4433012720:;
					}
				}
				if (_36217_brace_n != 0LL) {
					goto _iter_next_4433009952;
				}
				{
					auto _match_expr{ _1a9b97a76_tok._field_id };
					if (!((15LLU) == _match_expr)) { goto _case_end_4433015488; }
					_case_begin_4433015488:;
					{
						jule::Slice<_1b61ec5ec_Token> _38125_decl_tokens = _36146_tokens.slice(0LL,static_cast<jule::Int>(_1a9b97a76_i));
						jule::Slice<_1b61ec5ec_Token> _38225_expr_tokens = _36146_tokens.slice(static_cast<jule::Int>(_1a9b97a76_i + 1LL));
						return jule::Any((*this)._method_build_range_iter_kind(_38125_decl_tokens,_38225_expr_tokens,_1a9b97a76_tok));
					}
					goto _match_end_4433012144;
					_case_end_4433015488:;
					_match_end_4433012144:;
				}
			}
			_iter_next_4433009952:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1a9b97a76_i; _1a9b97a76_tok = *_range_begin; goto _iter_begin_4433009952; }
			_iter_end_4433009952:;
		}
	}
	return jule::Any((*this)._method_build_while_iter_kind(_36146_tokens));
}



inline jule::Any _1a9b97a76_ScopeParser::_method_build_common_iter(jule::Slice<_1b61ec5ec_Token> _38940_tokens) {
	jule::Ref<_1b61ca014_Iter> _39017_it = jule::new_struct<_1b61ca014_Iter>(new( std::nothrow ) _1b61ca014_Iter(_38940_tokens[0LL],jule::Any(),jule::Ref<_1b61ca014_ScopeTree>()));
	_38940_tokens=_38940_tokens.slice(1LL);
	if (_38940_tokens.len() == 0LL) {
		(*this)._method_stop();
		(*this)._method_push_err(_39017_it->_field_token,jule::Str("body is not exist", 17));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::Any(nullptr);
	}
	jule::Slice<_1b61ec5ec_Token> _40017_expr_tokens = _1a9ba6854_get_block_expr(_38940_tokens);
	if (_40017_expr_tokens.len() > 0LL) {
		_39017_it->_field_kind=(*this)._method_build_common_iter_kind(_40017_expr_tokens,_39017_it->_field_token);
	}
	jule::I64 _40417_i = _40017_expr_tokens.len();
	jule::Slice<_1b61ec5ec_Token> _40517_scope_tokens = _1a9e07434_range(_40417_i,jule::Str("{", 1),jule::Str("}", 1),_38940_tokens);
	if (_40517_scope_tokens == nullptr) {
		(*this)._method_stop();
		(*this)._method_push_err(_39017_it->_field_token,jule::Str("body is not exist", 17));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::Any(nullptr);
	}
	if (_40417_i < _38940_tokens.len()) {
		(*this)._method_push_err(_38940_tokens[static_cast<jule::Int>(_40417_i)],jule::Str("invalid syntax", 14));
	}
	_39017_it->_field_scope=(*this)._method_build_scope(_40517_scope_tokens);
	return jule::Any(_39017_it);
}



inline jule::Any _1a9b97a76_ScopeParser::_method_buid_iter_st(jule::Ref<_1a9b97a76_Stmt>& _41936_st) {
	if (_41936_st->_field_terminated) {
		return (*this)._method_build_while_next_iter(_41936_st);
	}
	return (*this)._method_build_common_iter(_41936_st->_field_tokens);
}



inline jule::Any _1a9b97a76_ScopeParser::_method_build_break_st(jule::Slice<_1b61ec5ec_Token>& _42638_tokens) {
	jule::Ref<_1b61ca014_BreakSt> _42717_brk = jule::new_struct<_1b61ca014_BreakSt>(new( std::nothrow ) _1b61ca014_BreakSt(_42638_tokens[0LL],_1b61ec5ec_Token()));
	if (_42638_tokens.len() > 1LL) {
		if (_42638_tokens[1LL]._field_id != 2LLU) {
			(*this)._method_push_err(_42638_tokens[1LL],jule::Str("invalid syntax", 14));
			(*this)._method_push_suggestion(jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>({}));
		} else {
			_42717_brk->_field_label=_42638_tokens[1LL];
			if (_42638_tokens.len() > 2LL) {
				(*this)._method_push_err(_42638_tokens[1LL],jule::Str("invalid syntax", 14));
			}
		}
	}
	return jule::Any(_42717_brk);
}



inline jule::Any _1a9b97a76_ScopeParser::_method_build_cont_st(jule::Slice<_1b61ec5ec_Token>& _44437_tokens) {
	jule::Ref<_1b61ca014_ContSt> _44517_cont = jule::new_struct<_1b61ca014_ContSt>(new( std::nothrow ) _1b61ca014_ContSt(_44437_tokens[0LL],_1b61ec5ec_Token()));
	if (_44437_tokens.len() > 1LL) {
		if (_44437_tokens[1LL]._field_id != 2LLU) {
			(*this)._method_push_err(_44437_tokens[1LL],jule::Str("invalid syntax", 14));
			(*this)._method_push_suggestion(jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>({}));
		} else {
			_44517_cont->_field_label=_44437_tokens[1LL];
			if (_44437_tokens.len() > 2LL) {
				(*this)._method_push_err(_44437_tokens[1LL],jule::Str("invalid syntax", 14));
			}
		}
	}
	return jule::Any(_44517_cont);
}



inline jule::Ref<_1b61ca014_If> _1a9b97a76_ScopeParser::_method_build_if(jule::Slice<_1b61ec5ec_Token>& _46232_tokens) {
	jule::Ref<_1b61ca014_If> _46317_model = jule::new_struct<_1b61ca014_If>(new( std::nothrow ) _1b61ca014_If(_46232_tokens[0LL],jule::Ref<_1b61ca014_Expr>(),jule::Ref<_1b61ca014_ScopeTree>()));
	_46232_tokens=_46232_tokens.slice(1LL);
	jule::Slice<_1b61ec5ec_Token> _46717_expr_tokens = _1a9ba6854_get_block_expr(_46232_tokens);
	jule::Int _46817_i = 0LL;
	if (_46717_expr_tokens.len() == 0LL) {
		(*this)._method_push_err(_46317_model->_field_token,jule::Str("expression missing", 18));
	} else {
		_46817_i=static_cast<jule::I64>(_46717_expr_tokens.len());
	}
	jule::Slice<_1b61ec5ec_Token> _47417_scope_tokens = _1a9e07434_range(_46817_i,jule::Str("{", 1),jule::Str("}", 1),_46232_tokens);
	if (_47417_scope_tokens == nullptr) {
		(*this)._method_stop();
		(*this)._method_push_err(_46317_model->_field_token,jule::Str("body is not exist", 17));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b61ca014_If>();
	}
	if (_46817_i < _46232_tokens.len()) {
		if (_46232_tokens[static_cast<jule::Int>(_46817_i)]._field_id == 17LLU) {
			_46232_tokens=_46232_tokens.slice(static_cast<jule::Int>(_46817_i));
		} else {
			(*this)._method_push_err(_46232_tokens[static_cast<jule::Int>(_46817_i)],jule::Str("invalid syntax", 14));
			_46232_tokens=nullptr;
		}
	}
	_46317_model->_field_expr=(*this)._field_p->_method_build_expr(_46717_expr_tokens);
	_46317_model->_field_scope=(*this)._method_build_scope(_47417_scope_tokens);
	return _46317_model;
}



inline jule::Ref<_1b61ca014_Else> _1a9b97a76_ScopeParser::_method_build_else(jule::Slice<_1b61ec5ec_Token>& _49434_tokens) {
	jule::Ref<_1b61ca014_Else> _49517_els = jule::new_struct<_1b61ca014_Else>(new( std::nothrow ) _1b61ca014_Else(_49434_tokens[0LL],jule::Ref<_1b61ca014_ScopeTree>()));
	_49434_tokens=_49434_tokens.slice(1LL);
	jule::Int _49917_i = 0LL;
	jule::Slice<_1b61ec5ec_Token> _50017_scope_tokens = _1a9e07434_range(_49917_i,jule::Str("{", 1),jule::Str("}", 1),_49434_tokens);
	if (_50017_scope_tokens == nullptr) {
		if (_49917_i < _49434_tokens.len()) {
			(*this)._method_push_err(_49517_els->_field_token,jule::Str("else's cannot have any expression", 33));
		} else {
			(*this)._method_stop();
			(*this)._method_push_err(_49517_els->_field_token,jule::Str("body is not exist", 17));
			(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		}
		return jule::new_ref<_1b61ca014_Else>();
	}
	if (_49917_i < _49434_tokens.len()) {
		(*this)._method_push_err(_49434_tokens[static_cast<jule::Int>(_49917_i)],jule::Str("invalid syntax", 14));
	}
	_49517_els->_field_scope=(*this)._method_build_scope(_50017_scope_tokens);
	return _49517_els;
}



inline jule::Any _1a9b97a76_ScopeParser::_method_build_if_else_chain(jule::Slice<_1b61ec5ec_Token> _51842_tokens) {
	jule::Ref<_1b61ca014_Conditional> _51917_chain = jule::new_struct<_1b61ca014_Conditional>(new( std::nothrow ) _1b61ca014_Conditional((*this)._method_build_if(_51842_tokens),jule::Slice<jule::Ref<_1b61ca014_If>>(),jule::Ref<_1b61ca014_Else>()));
	if ((!(jule::real(_51917_chain->_field_head)))) {
		return jule::Any(nullptr);
	}
	_iter_begin_4430213056:;
	if (!(_51842_tokens != nullptr)) { goto _iter_end_4430213056; }
	{
		if (_51842_tokens[0LL]._field_id != 17LLU) {
			goto _iter_end_4430213056;
		}
		if ((_51842_tokens.len() > 1LL) && (_51842_tokens[1LL]._field_id == 16LLU)) {
			_51842_tokens=_51842_tokens.slice(1LL);
			jule::Ref<_1b61ca014_If> _53125_elif = (*this)._method_build_if(_51842_tokens);
			_51917_chain->_field_tail=jule::append(_51917_chain->_field_tail,jule::Slice<jule::Ref<_1b61ca014_If>>({_53125_elif}));
			goto _iter_next_4430213056;
		}
		_51917_chain->_field_default=(*this)._method_build_else(_51842_tokens);
		goto _iter_end_4430213056;
	}
	_iter_next_4430213056:;
	goto _iter_begin_4430213056;
	_iter_end_4430213056:;
	return jule::Any(_51917_chain);
}



inline jule::Any _1a9b97a76_ScopeParser::_method_build_comment_st(_1b61ec5ec_Token& _54136_token) {
	return jule::Any(_1a9e07434_build_comment(_54136_token));
}



inline jule::Any _1a9b97a76_ScopeParser::_method_build_call_st(jule::Slice<_1b61ec5ec_Token>& _54537_tokens) {
	_1b61ec5ec_Token _54613_token = _54537_tokens[0LL];
	if (_1a9ba6854_is_fn_call(_54537_tokens) == nullptr) {
		(*this)._method_push_err(_54613_token,jule::Str("statement must have function call expression", 44));
	}
	jule::Ref<_1b61ca014_Expr> _55017_expr = (*this)._field_p->_method_build_expr(_54537_tokens);
	if (jule::real(_55017_expr) && (!(_55017_expr->_method_is_fn_call()))) {
		(*this)._method_push_err(_54613_token,jule::Str("invalid syntax", 14));
	}
	return jule::Any(_55017_expr);
}



inline jule::Any _1a9b97a76_ScopeParser::_method_build_co_call_st(jule::Slice<_1b61ec5ec_Token> _55739_tokens) {
	_55739_tokens=_55739_tokens.slice(1LL);
	jule::Any _55917_cc = (*this)._method_build_call_st(_55739_tokens);
	_55917_cc.operator jule::Ref<_1b61ca014_Expr>()->_field_kind.operator jule::Ref<_1b61ca014_FnCallExpr>()->_field_concurrent=true;
	return _55917_cc;
}



inline jule::Any _1a9b97a76_ScopeParser::_method_build_goto_st(jule::Slice<_1b61ec5ec_Token>& _56437_tokens) {
	jule::Ref<_1b61ca014_GotoSt> _56517_gt = jule::new_struct<_1b61ca014_GotoSt>(new( std::nothrow ) _1b61ca014_GotoSt(_56437_tokens[0LL],_1b61ec5ec_Token()));
	if (_56437_tokens.len() == 1LL) {
		(*this)._method_push_err(_56517_gt->_field_token,jule::Str("missing label identifier for goto statement", 43));
		return jule::Any(nullptr);
	} else if (_56437_tokens.len() > 2LL) {
		(*this)._method_push_err(_56437_tokens[2LL],jule::Str("invalid syntax", 14));
	}
	_1b61ec5ec_Token _57417_ident_token = _56437_tokens[1LL];
	if (_57417_ident_token._field_id != 2LLU) {
		(*this)._method_push_err(_57417_ident_token,jule::Str("invalid syntax", 14));
		(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
		return jule::Any(_56517_gt);
	}
	_56517_gt->_field_label=_57417_ident_token;
	return jule::Any(_56517_gt);
}



inline jule::Any _1a9b97a76_ScopeParser::_method_build_fall_st(jule::Slice<_1b61ec5ec_Token>& _58437_tokens) {
	jule::Ref<_1b61ca014_FallSt> _58517_fll = jule::new_struct<_1b61ca014_FallSt>(new( std::nothrow ) _1b61ca014_FallSt(_58437_tokens[0LL]));
	if (_58437_tokens.len() > 1LL) {
		(*this)._method_push_err(_58437_tokens[1LL],jule::Str("invalid syntax", 14));
	}
	return jule::Any(_58517_fll);
}



inline jule::Any _1a9b97a76_ScopeParser::_method_build_type_alias_st(jule::Slice<_1b61ec5ec_Token>& _59443_tokens) {
	jule::Ref<_1b61ca014_TypeAliasDecl> _59517_tad = (*this)._field_p->_method_build_type_alias_decl(_59443_tokens);
	_59517_tad->_field_scope=(*this)._field_s;
	return jule::Any(_59517_tad);
}



inline void _1a9b97a76_ScopeParser::_method_push_case_expr(jule::Slice<_1b61ec5ec_Token> _60037_tokens,_1b61ec5ec_Token _60058_token,jule::Bool _6019_type_match,jule::Slice<jule::Ref<_1b61ca014_Expr>>& _60132_exprs) {
	if (_60037_tokens.len() == 0LL) {
		return;
	}
	if (_6019_type_match) {
		jule::Int _60721_i = 0LL;
		jule::Ref<_1b61ca014_TypeDecl> _60822_t;
		jule::Bool _60825_ok;
		std::tie(_60822_t,_60825_ok) = (*this)._field_p->_method_build_type(_60037_tokens,(&(_60721_i)),true);
		if (_60825_ok) {
			_60132_exprs=jule::append(_60132_exprs,jule::Slice<jule::Ref<_1b61ca014_Expr>>({jule::new_struct<_1b61ca014_Expr>(new( std::nothrow ) _1b61ca014_Expr(_60058_token,jule::Any(_60822_t)))}));
		}
		if (_60721_i < _60037_tokens.len()) {
			(*this)._method_push_err(_60037_tokens[static_cast<jule::Int>(_60721_i)],jule::Str("invalid syntax", 14));
		}
		return;
	}
	_60132_exprs=jule::append(_60132_exprs,jule::Slice<jule::Ref<_1b61ca014_Expr>>({(*this)._field_p->_method_build_expr(_60037_tokens)}));
}



inline jule::Slice<jule::Ref<_1b61ca014_Expr>> _1a9b97a76_ScopeParser::_method_build_case_exprs(jule::Slice<_1b61ec5ec_Token>& _62340_tokens,jule::Bool _62357_type_match) {
	jule::Slice<jule::Ref<_1b61ca014_Expr>> _62417_exprs = jule::Slice<jule::Ref<_1b61ca014_Expr>>::alloc(0LL,1LL);
	jule::Int _62617_brace_n = 0LL;
	jule::Int _62717_j = 0LL;
	{
		auto _range_expr = _62340_tokens;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1a9b97a76_i = 0;
			_1b61ec5ec_Token _1a9b97a76_tok = *_range_begin;
			_iter_begin_4433126304:;
			{
				if (_1a9b97a76_tok._field_id == 3LLU) {
					{
						auto _match_expr{ _1a9b97a76_tok._field_kind };
						if (!((jule::Str("(", 1)) == _match_expr || (jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr)) { goto _case_end_4433130976; }
						_case_begin_4433130976:;
						{
							(_62617_brace_n)++;
						}
						goto _match_end_4433129392;
						_case_end_4433130976:;
						_case_begin_4433130176:;
						{
							(_62617_brace_n)--;
						}
						goto _match_end_4433129392;
						_case_end_4433130176:;
						_match_end_4433129392:;
					}
					goto _iter_next_4433126304;
				} else if (_62617_brace_n != 0LL) {
					goto _iter_next_4433126304;
				}
				{
					if (!(((_1a9b97a76_tok._field_id == 7LLU) && (_1a9b97a76_tok._field_kind == jule::Str("|", 1))))) { goto _case_end_4433128864; }
					_case_begin_4433128864:;
					{
						jule::Slice<_1b61ec5ec_Token> _64521_expr_tokens = _62340_tokens.slice(static_cast<jule::Int>(_62717_j),static_cast<jule::Int>(_1a9b97a76_i));
						if (_64521_expr_tokens.len() == 0LL) {
							(*this)._method_push_err(_1a9b97a76_tok,jule::Str("expression missing", 18));
						} else {
							(*this)._method_push_case_expr(_62340_tokens.slice(static_cast<jule::Int>(_62717_j),static_cast<jule::Int>(_1a9b97a76_i)),_1a9b97a76_tok,_62357_type_match,_62417_exprs);
						}
						_62717_j=static_cast<jule::Int>(_1a9b97a76_i + 1LL);
					}
					goto _match_end_4433132208;
					_case_end_4433128864:;
					if (!((_1a9b97a76_tok._field_id == 11LLU))) { goto _case_end_4433128976; }
					_case_begin_4433128976:;
					{
						(*this)._method_push_case_expr(_62340_tokens.slice(static_cast<jule::Int>(_62717_j),static_cast<jule::Int>(_1a9b97a76_i)),_1a9b97a76_tok,_62357_type_match,_62417_exprs);
						_62340_tokens=_62340_tokens.slice(static_cast<jule::Int>(_1a9b97a76_i + 1LL));
						return _62417_exprs;
					}
					goto _match_end_4433132208;
					_case_end_4433128976:;
					_match_end_4433132208:;
				}
			}
			_iter_next_4433126304:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1a9b97a76_i; _1a9b97a76_tok = *_range_begin; goto _iter_begin_4433126304; }
			_iter_end_4433126304:;
		}
	}
	(*this)._method_push_err(_62340_tokens[0LL],jule::Str("invalid syntax", 14));
	_62340_tokens=nullptr;
	return nullptr;
}



inline jule::Ref<_1b61ca014_ScopeTree> _1a9b97a76_ScopeParser::_method_build_case_scope(jule::Slice<_1b61ec5ec_Token>& _66440_tokens) {
	jule::Int _66517_n = 0LL;
	_iter_begin_4433150160:;
	{
		jule::Int _66721_i = 0LL;
		jule::Slice<_1b61ec5ec_Token> _66822_next;
		std::tie(_66822_next,std::ignore) = _1a9b97a76_skip_st(_66721_i,_66440_tokens.slice(static_cast<jule::Int>(_66517_n)));
		if (_66822_next.len() == 0LL) {
			goto _iter_end_4433150160;
		}
		_1b61ec5ec_Token _67217_tok = _66822_next[0LL];
		if ((_67217_tok._field_id != 7LLU) || (_67217_tok._field_kind != jule::Str("|", 1))) {
			_66517_n+=_66721_i;
			goto _iter_next_4433150160;
		}
		jule::Slice<_1b61ec5ec_Token> _67721_scope_tokens = _66440_tokens.slice(0LL,static_cast<jule::Int>(_66517_n));
		jule::Ref<_1b61ca014_ScopeTree> _67821_scope = (*this)._method_build_scope(_67721_scope_tokens);
		_66440_tokens=_66440_tokens.slice(static_cast<jule::Int>(_66517_n));
		return _67821_scope;
	}
	_iter_next_4433150160:;
	goto _iter_begin_4433150160;
	_iter_end_4433150160:;
	jule::Ref<_1b61ca014_ScopeTree> _68217_scope = (*this)._method_build_scope(_66440_tokens);
	_66440_tokens=nullptr;
	return _68217_scope;
}



inline std::tuple<jule::Ref<_1b61ca014_Case>,jule::Bool> _1a9b97a76_ScopeParser::_method_build_case(jule::Slice<_1b61ec5ec_Token>& _68734_tokens,jule::Bool _68751_type_match) {
	jule::Ref<_1b61ca014_Case> _68817_c = jule::new_struct<_1b61ca014_Case>(new( std::nothrow ) _1b61ca014_Case(_68734_tokens[0LL],jule::Ref<_1b61ca014_ScopeTree>(),jule::Slice<jule::Ref<_1b61ca014_Expr>>()));
	_68734_tokens=_68734_tokens.slice(1LL);
	_68817_c->_field_exprs=(*this)._method_build_case_exprs(_68734_tokens,_68751_type_match);
	_68817_c->_field_scope=(*this)._method_build_case_scope(_68734_tokens);
	jule::Bool _69413_is_default = _68817_c->_field_exprs.len() == 0LL;
	return std::make_tuple(_68817_c,_69413_is_default);
}



inline std::tuple<jule::Slice<jule::Ref<_1b61ca014_Case>>,jule::Ref<_1b61ca014_Else>> _1a9b97a76_ScopeParser::_method_build_cases(jule::Slice<_1b61ec5ec_Token> _69834_tokens,jule::Bool _69851_type_match) {
	jule::Slice<jule::Ref<_1b61ca014_Case>> _69917_cases = nullptr;
	jule::Ref<_1b61ca014_Else> _70017_def = jule::new_ref<_1b61ca014_Else>();
	jule::Bool _70117_def_not_last = false;
	_iter_begin_4433183776:;
	if (!(_69834_tokens.len() > 0LL)) { goto _iter_end_4433183776; }
	{
		_1b61ec5ec_Token _70321_tok = _69834_tokens[0LL];
		if (_70321_tok._field_id == 18LLU) {
			_69834_tokens=_69834_tokens.slice(1LL);
			goto _iter_next_4433183776;
		}
		if ((_70321_tok._field_id != 7LLU) || (_70321_tok._field_kind != jule::Str("|", 1))) {
			(*this)._method_push_err(_70321_tok,jule::Str("invalid syntax", 14));
			goto _iter_end_4433183776;
		}
		jule::Ref<_1b61ca014_Case> _71422_c;
		jule::Bool _71425_is_default;
		std::tie(_71422_c,_71425_is_default) = (*this)._method_build_case(_69834_tokens,_69851_type_match);
		if (_71425_is_default) {
			_71422_c->_field_token=_70321_tok;
			if ((!(jule::real(_70017_def)))) {
				_70017_def=jule::new_struct<_1b61ca014_Else>(new( std::nothrow ) _1b61ca014_Else(_71422_c->_field_token,_71422_c->_field_scope));
			} else {
				(*this)._method_push_err(_70321_tok,jule::Str("invalid syntax", 14));
			}
		} else {
			_70117_def_not_last=_70117_def_not_last || jule::real(_70017_def);
			_69917_cases=jule::append(_69917_cases,jule::Slice<jule::Ref<_1b61ca014_Case>>({_71422_c}));
		}
	}
	_iter_next_4433183776:;
	goto _iter_begin_4433183776;
	_iter_end_4433183776:;
	if (_70117_def_not_last) {
		(*this)._method_push_err(_70017_def->_field_token,jule::Str("default case should be last case", 32));
	}
	return std::make_tuple(_69917_cases,_70017_def);
}



inline jule::Ref<_1b61ca014_MatchCase> _1a9b97a76_ScopeParser::_method_build_match_case(jule::Slice<_1b61ec5ec_Token> _73839_tokens) {
	jule::Ref<_1b61ca014_MatchCase> _73917_m = jule::new_struct<_1b61ca014_MatchCase>(new( std::nothrow ) _1b61ca014_MatchCase(_73839_tokens[0LL],jule::Bool(),jule::Ref<_1b61ca014_Expr>(),jule::Slice<jule::Ref<_1b61ca014_Case>>(),jule::Ref<_1b61ca014_Else>()));
	_73839_tokens=_73839_tokens.slice(1LL);
	if ((_73839_tokens.len() > 0LL) && (_73839_tokens[0LL]._field_id == 10LLU)) {
		_73917_m->_field_type_match=true;
		_73839_tokens=_73839_tokens.slice(1LL);
	}
	jule::Slice<_1b61ec5ec_Token> _74917_expr_tokens = _1a9ba6854_get_block_expr(_73839_tokens);
	if (_74917_expr_tokens.len() > 0LL) {
		_73917_m->_field_expr=(*this)._field_p->_method_build_expr(_74917_expr_tokens);
	} else if (_73917_m->_field_type_match) {
		(*this)._method_push_err(_73917_m->_field_token,jule::Str("expression missing", 18));
	}
	jule::I64 _75617_i = _74917_expr_tokens.len();
	jule::Slice<_1b61ec5ec_Token> _75717_block_toks = _1a9e07434_range(_75617_i,jule::Str("{", 1),jule::Str("}", 1),_73839_tokens);
	if (_75717_block_toks == nullptr) {
		(*this)._method_stop();
		(*this)._method_push_err(_73917_m->_field_token,jule::Str("body is not exist", 17));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b61ca014_MatchCase>();
	}
	std::tie(_73917_m->_field_cases,_73917_m->_field_default) = (*this)._method_build_cases(_75717_block_toks,_73917_m->_field_type_match);
	return _73917_m;
}



inline jule::Ref<_1b61ca014_ScopeTree> _1a9b97a76_ScopeParser::_method_build_scope_st(jule::Slice<_1b61ec5ec_Token> _76937_tokens) {
	jule::Bool _77017_is_unsafe = false;
	jule::Bool _77117_is_deferred = false;
	_1b61ec5ec_Token _77217_token = _76937_tokens[0LL];
	if (_77217_token._field_id == 35LLU) {
		_77017_is_unsafe=true;
		_76937_tokens=_76937_tokens.slice(1LL);
		if (_76937_tokens.len() == 0LL) {
			(*this)._method_push_err(_77217_token,jule::Str("invalid syntax", 14));
			return jule::new_ref<_1b61ca014_ScopeTree>();
		}
		_77217_token=_76937_tokens[0LL];
		if (_77217_token._field_id == 37LLU) {
			_77117_is_deferred=true;
			_76937_tokens=_76937_tokens.slice(1LL);
			if (_76937_tokens.len() == 0LL) {
				(*this)._method_push_err(_77217_token,jule::Str("invalid syntax", 14));
				return jule::new_ref<_1b61ca014_ScopeTree>();
			}
		}
	} else if (_77217_token._field_id == 37LLU) {
		_77117_is_deferred=true;
		_76937_tokens=_76937_tokens.slice(1LL);
		if (_76937_tokens.len() == 0LL) {
			(*this)._method_push_err(_77217_token,jule::Str("invalid syntax", 14));
			return jule::new_ref<_1b61ca014_ScopeTree>();
		}
	}
	jule::Int _79817_i = 0LL;
	jule::Slice<_1b61ec5ec_Token> _79917_scope_tokens = _1a9e07434_range(_79817_i,jule::Str("{", 1),jule::Str("}", 1),_76937_tokens);
	if (_79917_scope_tokens == nullptr) {
		(*this)._method_push_err(_77217_token,jule::Str("invalid syntax", 14));
		return jule::new_ref<_1b61ca014_ScopeTree>();
	} else if (_79817_i < _76937_tokens.len()) {
		(*this)._method_push_err(_76937_tokens[static_cast<jule::Int>(_79817_i)],jule::Str("invalid syntax", 14));
	}
	jule::Ref<_1b61ca014_ScopeTree> _80617_scope = (*this)._method_build_scope(_79917_scope_tokens);
	_80617_scope->_field_unsafety=_77017_is_unsafe;
	_80617_scope->_field_deferred=_77117_is_deferred;
	return _80617_scope;
}



inline jule::Ref<_1b61ca014_LabelSt> _1a9b97a76_ScopeParser::_method_build_label_st(jule::Slice<_1b61ec5ec_Token>& _81238_tokens) {
	jule::Ref<_1b61ca014_LabelSt> _81317_lbl = jule::new_struct<_1b61ca014_LabelSt>(new( std::nothrow ) _1b61ca014_LabelSt(_81238_tokens[0LL],_81238_tokens[0LL]._field_kind));
	if (_81238_tokens.len() > 2LL) {
		_81238_tokens=_81238_tokens.slice(2LL);
		(*this)._method_insert_as_next(_81238_tokens);
	}
	return _81317_lbl;
}



inline std::tuple<jule::Any,jule::Bool> _1a9b97a76_ScopeParser::_method_build_id_st(jule::Slice<_1b61ec5ec_Token>& _82735_tokens) {
	jule::Bool _82764_ok = jule::Bool();
	if (_82735_tokens.len() == 1LL) {
		return std::make_tuple(jule::Any(),_82764_ok);
	}
	_1b61ec5ec_Token _83217_token = _82735_tokens[1LL];
	{
		auto _match_expr{ _83217_token._field_id };
		if (!((11LLU) == _match_expr)) { goto _case_end_4433263520; }
		_case_begin_4433263520:;
		{
			_82764_ok = true;
			return std::make_tuple(jule::Any((*this)._method_build_label_st(_82735_tokens)),_82764_ok);
		}
		goto _match_end_4433259952;
		_case_end_4433263520:;
		_match_end_4433259952:;
	}
	return std::make_tuple(jule::Any(),_82764_ok);
}



inline jule::Ref<_1a9e07148_AssignInfo> _1a9b97a76_ScopeParser::_method_build_assign_info(jule::Slice<_1b61ec5ec_Token>& _84141_tokens) {
	jule::Ref<_1a9e07148_AssignInfo> _84217_info = jule::new_struct<_1a9e07148_AssignInfo>(new( std::nothrow ) _1a9e07148_AssignInfo(jule::Slice<_1b61ec5ec_Token>(),jule::Slice<_1b61ec5ec_Token>(),_1b61ec5ec_Token(),true));
	jule::Int _84517_brace_n = 0LL;
	{
		auto _range_expr = _84141_tokens;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1a9b97a76_i = 0;
			_1b61ec5ec_Token _1a9b97a76_token = *_range_begin;
			_iter_begin_4433271792:;
			{
				if (_1a9b97a76_token._field_id == 3LLU) {
					{
						auto _match_expr{ _1a9b97a76_token._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4433276256; }
						_case_begin_4433276256:;
						{
							(_84517_brace_n)++;
						}
						goto _match_end_4433274672;
						_case_end_4433276256:;
						_case_begin_4433275456:;
						{
							(_84517_brace_n)--;
						}
						goto _match_end_4433274672;
						_case_end_4433275456:;
						_match_end_4433274672:;
					}
				}
				{
					if (!((_84517_brace_n > 0LL))) { goto _case_end_4433277328; }
					_case_begin_4433277328:;
					{
						goto _iter_next_4433271792;
					}
					goto _match_end_4433277552;
					_case_end_4433277328:;
					if (!((_1a9b97a76_token._field_id != 7LLU))) { goto _case_end_4433274032; }
					_case_begin_4433274032:;
					{
						goto _iter_next_4433271792;
					}
					goto _match_end_4433277552;
					_case_end_4433274032:;
					if (!(((!(_1b61ec5ec_is_assign_op(_1a9b97a76_token._field_kind)))))) { goto _case_end_4433274144; }
					_case_begin_4433274144:;
					{
						goto _iter_next_4433271792;
					}
					goto _match_end_4433277552;
					_case_end_4433274144:;
					_match_end_4433277552:;
				}
				_84217_info->_field_l=_84141_tokens.slice(0LL,static_cast<jule::Int>(_1a9b97a76_i));
				if (_84217_info->_field_l.len() == 0LL) {
					_84217_info->_field_ok=false;
				}
				_84217_info->_field_setter=_1a9b97a76_token;
				if ((_1a9b97a76_i + 1LL) >= _84141_tokens.len()) {
					_84217_info->_field_r=nullptr;
					_84217_info->_field_ok=_1b61ec5ec_is_postfix_op(_84217_info->_field_setter._field_kind);
					goto _iter_end_4433271792;
				}
				_84217_info->_field_r=_84141_tokens.slice(static_cast<jule::Int>(_1a9b97a76_i + 1LL));
				if (_1b61ec5ec_is_postfix_op(_84217_info->_field_setter._field_kind)) {
					if (_84217_info->_field_r.len() > 0LL) {
						(*this)._method_push_err(_84217_info->_field_r[0LL],jule::Str("invalid syntax", 14));
						_84217_info->_field_r=nullptr;
					}
				}
				goto _iter_end_4433271792;
			}
			_iter_next_4433271792:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1a9b97a76_i; _1a9b97a76_token = *_range_begin; goto _iter_begin_4433271792; }
			_iter_end_4433271792:;
		}
	}
	return _84217_info;
}



inline jule::Ref<_1b61ca014_AssignLeft> _1a9b97a76_ScopeParser::_method_build_assign_l(jule::Slice<_1b61ec5ec_Token>& _88838_tokens) {
	jule::Ref<_1b61ca014_AssignLeft> _88917_l = jule::new_struct<_1b61ca014_AssignLeft>(new( std::nothrow ) _1b61ca014_AssignLeft(_88838_tokens[0LL],jule::Bool(),jule::Bool(),jule::Str(),jule::Ref<_1b61ca014_Expr>()));
	if (_88838_tokens[0LL]._field_id == 2LLU) {
		_88917_l->_field_ident=_88917_l->_field_token._field_kind;
	}
	_88917_l->_field_expr=(*this)._field_p->_method_build_expr(_88838_tokens);
	return _88917_l;
}



inline jule::Slice<jule::Ref<_1b61ca014_AssignLeft>> _1a9b97a76_ScopeParser::_method_build_assign_ls(jule::Slice<jule::Slice<_1b61ec5ec_Token>>& _90139_parts) {
	jule::Slice<jule::Ref<_1b61ca014_AssignLeft>> _90217_lefts = nullptr;
	{
		auto _range_expr = _90139_parts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Slice<_1b61ec5ec_Token> _1a9b97a76_part = *_range_begin;
			_iter_begin_4433305600:;
			{
				jule::Ref<_1b61ca014_AssignLeft> _90421_l = (*this)._method_build_assign_l(_1a9b97a76_part);
				_90217_lefts=jule::append(_90217_lefts,jule::Slice<jule::Ref<_1b61ca014_AssignLeft>>({_90421_l}));
			}
			_iter_next_4433305600:;
			++_range_begin;
			if (_range_begin != _range_end) { _1a9b97a76_part = *_range_begin; goto _iter_begin_4433305600; }
			_iter_end_4433305600:;
		}
	}
	return _90217_lefts;
}



inline std::tuple<jule::Ref<_1b61ca014_AssignSt>,jule::Bool> _1a9b97a76_ScopeParser::_method_build_plain_assign(jule::Slice<_1b61ec5ec_Token>& _91142_tokens) {
	jule::Ref<_1a9e07148_AssignInfo> _91217_info = (*this)._method_build_assign_info(_91142_tokens);
	if ((!(_91217_info->_field_ok))) {
		return std::make_tuple(jule::new_ref<_1b61ca014_AssignSt>(),false);
	}
	jule::Ref<_1b61ca014_AssignSt> _91717_assign = jule::new_struct<_1b61ca014_AssignSt>(new( std::nothrow ) _1b61ca014_AssignSt(jule::Bool(),_91217_info->_field_setter,jule::Slice<jule::Ref<_1b61ca014_AssignLeft>>(),jule::Ref<_1b61ca014_Expr>()));
	jule::Slice<jule::Slice<_1b61ec5ec_Token>> _92118_parts;
	jule::Slice<_1cdeeb191_Log> _92125_errs;
	std::tie(_92118_parts,_92125_errs) = _1a9e07434_parts(_91217_info->_field_l,8LLU,true);
	if (_92125_errs.len() > 0LL) {
		(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_92125_errs);
		return std::make_tuple(jule::new_ref<_1b61ca014_AssignSt>(),false);
	}
	_91717_assign->_field_left=(*this)._method_build_assign_ls(_92118_parts);
	if (_91217_info->_field_r != nullptr) {
		_91717_assign->_field_right=(*this)._field_p->_method_build_expr(_91217_info->_field_r);
	}
	return std::make_tuple(_91717_assign,true);
}



inline std::tuple<jule::Ref<_1b61ca014_AssignSt>,jule::Bool> _1a9b97a76_ScopeParser::_method_build_decl_assign(jule::Slice<_1b61ec5ec_Token> _93540_tokens) {
	if (_93540_tokens.len() < 1LL) {
		return std::make_tuple(jule::new_ref<_1b61ca014_AssignSt>(),false);
	}
	_93540_tokens=_93540_tokens.slice(1LL);
	_1b61ec5ec_Token _94117_token = _93540_tokens[0LL];
	if ((_94117_token._field_id != 3LLU) || (_94117_token._field_kind != jule::Str("(", 1))) {
		return std::make_tuple(jule::new_ref<_1b61ca014_AssignSt>(),false);
	}
	jule::Ref<_1b61ca014_AssignSt> _94617_assign = jule::new_struct<_1b61ca014_AssignSt>(new( std::nothrow ) _1b61ca014_AssignSt(true,_1b61ec5ec_Token(),jule::Slice<jule::Ref<_1b61ca014_AssignLeft>>(),jule::Ref<_1b61ca014_Expr>()));
	jule::Int _95017_i = 0LL;
	jule::Slice<_1b61ec5ec_Token> _95117_rang = _1a9e07434_range(_95017_i,jule::Str("(", 1),jule::Str(")", 1),_93540_tokens);
	if (_95117_rang == nullptr) {
		(*this)._method_push_err(_94117_token,jule::Str("invalid syntax", 14));
		return std::make_tuple(jule::new_ref<_1b61ca014_AssignSt>(),false);
	} else if ((_95017_i + 1LL) < _93540_tokens.len()) {
		_94617_assign->_field_setter=_93540_tokens[static_cast<jule::Int>(_95017_i)];
		(_95017_i)++;
		jule::Slice<_1b61ec5ec_Token> _95821_expr_tokens = _93540_tokens.slice(static_cast<jule::Int>(_95017_i));
		_94617_assign->_field_right=(*this)._field_p->_method_build_expr(_95821_expr_tokens);
	}
	jule::Slice<jule::Slice<_1b61ec5ec_Token>> _96318_parts;
	jule::Slice<_1cdeeb191_Log> _96325_errs;
	std::tie(_96318_parts,_96325_errs) = _1a9e07434_parts(_95117_rang,8LLU,true);
	if (_96325_errs.len() > 0LL) {
		(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_96325_errs);
		return std::make_tuple(jule::new_ref<_1b61ca014_AssignSt>(),false);
	}
	{
		auto _range_expr = _96318_parts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Slice<_1b61ec5ec_Token> _1a9b97a76_part = *_range_begin;
			_iter_begin_4433349296:;
			{
				jule::Bool _97021_is_mut = false;
				jule::Bool _97121_is_ref = false;
				_94117_token=_1a9b97a76_part[0LL];
				if (_94117_token._field_id == 36LLU) {
					_97021_is_mut=true;
					_1a9b97a76_part=_1a9b97a76_part.slice(1LL);
					if (_1a9b97a76_part.len() == 0LL) {
						(*this)._method_push_err(_94117_token,jule::Str("invalid syntax", 14));
						goto _iter_next_4433349296;
					}
				}
				if ((_1a9b97a76_part[0LL]._field_id == 7LLU) && (_1a9b97a76_part[0LL]._field_kind == jule::Str("&", 1))) {
					_97121_is_ref=true;
					_1a9b97a76_part=_1a9b97a76_part.slice(1LL);
					if (_1a9b97a76_part.len() == 0LL) {
						(*this)._method_push_err(_94117_token,jule::Str("invalid syntax", 14));
						goto _iter_next_4433349296;
					}
				}
				if (((_1a9b97a76_part[0LL]._field_id != 2LLU) && (_1a9b97a76_part[0LL]._field_id != 3LLU)) && (_1a9b97a76_part[0LL]._field_kind != jule::Str("(", 1))) {
					(*this)._method_push_err(_94117_token,jule::Str("invalid syntax", 14));
					goto _iter_next_4433349296;
				}
				jule::Ref<_1b61ca014_AssignLeft> _99921_l = (*this)._method_build_assign_l(_1a9b97a76_part);
				_99921_l->_field_mutable=_97021_is_mut;
				_99921_l->_field_reference=_97121_is_ref;
				_94617_assign->_field_left=jule::append(_94617_assign->_field_left,jule::Slice<jule::Ref<_1b61ca014_AssignLeft>>({_99921_l}));
			}
			_iter_next_4433349296:;
			++_range_begin;
			if (_range_begin != _range_end) { _1a9b97a76_part = *_range_begin; goto _iter_begin_4433349296; }
			_iter_end_4433349296:;
		}
	}
	return std::make_tuple(_94617_assign,true);
}



inline std::tuple<jule::Ref<_1b61ca014_AssignSt>,jule::Bool> _1a9b97a76_ScopeParser::_method_build_assign_st(jule::Slice<_1b61ec5ec_Token>& _100839_tokens) {
	jule::Ref<_1b61ca014_AssignSt> _100858_st = jule::Ref<_1b61ca014_AssignSt>();
	jule::Bool _100873_ok = jule::Bool();
	if ((!(_1a9e07148_check_assign_tokens(_100839_tokens)))) {
		_100858_st = jule::new_ref<_1b61ca014_AssignSt>();
		_100873_ok = false;
		return std::make_tuple(_100858_st,_100873_ok);
	}
	{
		auto _match_expr{ _100839_tokens[0LL]._field_id };
		if (!((34LLU) == _match_expr)) { goto _case_end_4434451968; }
		_case_begin_4434451968:;
		{
			std::tie(_100858_st,_100873_ok) = (*this)._method_build_decl_assign(_100839_tokens);
		}
		goto _match_end_4434446992;
		_case_end_4434451968:;
		_case_begin_4434449216:;
		{
			std::tie(_100858_st,_100873_ok) = (*this)._method_build_plain_assign(_100839_tokens);
		}
		goto _match_end_4434446992;
		_case_end_4434449216:;
		_match_end_4434446992:;
	}
	return std::make_tuple(_100858_st,_100873_ok);
}



inline jule::Any _1a9b97a76_ScopeParser::_method_build_st(jule::Ref<_1a9b97a76_Stmt>& _102132_st) {
	_1b61ec5ec_Token _102217_token = _102132_st->_field_tokens[0LL];
	if (_102217_token._field_id == 2LLU) {
		jule::Any _102422_s;
		jule::Bool _102425_ok;
		std::tie(_102422_s,_102425_ok) = (*this)._method_build_id_st(_102132_st->_field_tokens);
		if (_102425_ok) {
			return _102422_s;
		}
	}
	jule::Ref<_1b61ca014_AssignSt> _103018_s;
	jule::Bool _103021_ok;
	std::tie(_103018_s,_103021_ok) = (*this)._method_build_assign_st(_102132_st->_field_tokens);
	if (_103021_ok) {
		return jule::Any(_103018_s);
	}
	{
		auto _match_expr{ _102217_token._field_id };
		if (!((38LLU) == _match_expr || (9LLU) == _match_expr || (34LLU) == _match_expr || (36LLU) == _match_expr)) { goto _case_end_4434464768; }
		_case_begin_4434464768:;
		{
			return (*this)._method_build_var_st(_102132_st->_field_tokens);
		}
		goto _match_end_4434462656;
		_case_end_4434464768:;
		if (!((4LLU) == _match_expr)) { goto _case_end_4434463664; }
		_case_begin_4434463664:;
		{
			return (*this)._method_build_ret_st(_102132_st->_field_tokens);
		}
		goto _match_end_4434462656;
		_case_end_4434463664:;
		if (!((12LLU) == _match_expr)) { goto _case_end_4434463776; }
		_case_begin_4434463776:;
		{
			return (*this)._method_buid_iter_st(_102132_st);
		}
		goto _match_end_4434462656;
		_case_end_4434463776:;
		if (!((13LLU) == _match_expr)) { goto _case_end_4434463888; }
		_case_begin_4434463888:;
		{
			return (*this)._method_build_break_st(_102132_st->_field_tokens);
		}
		goto _match_end_4434462656;
		_case_end_4434463888:;
		if (!((14LLU) == _match_expr)) { goto _case_end_4434463040; }
		_case_begin_4434463040:;
		{
			return (*this)._method_build_cont_st(_102132_st->_field_tokens);
		}
		goto _match_end_4434462656;
		_case_end_4434463040:;
		if (!((16LLU) == _match_expr)) { goto _case_end_4434463152; }
		_case_begin_4434463152:;
		{
			return (*this)._method_build_if_else_chain(_102132_st->_field_tokens);
		}
		goto _match_end_4434462656;
		_case_end_4434463152:;
		if (!((18LLU) == _match_expr)) { goto _case_end_4434463264; }
		_case_begin_4434463264:;
		{
			return (*this)._method_build_comment_st(_102217_token);
		}
		goto _match_end_4434462656;
		_case_end_4434463264:;
		if (!((26LLU) == _match_expr)) { goto _case_end_4434463376; }
		_case_begin_4434463376:;
		{
			return (*this)._method_build_co_call_st(_102132_st->_field_tokens);
		}
		goto _match_end_4434462656;
		_case_end_4434463376:;
		if (!((22LLU) == _match_expr)) { goto _case_end_4434466240; }
		_case_begin_4434466240:;
		{
			return (*this)._method_build_goto_st(_102132_st->_field_tokens);
		}
		goto _match_end_4434462656;
		_case_end_4434466240:;
		if (!((32LLU) == _match_expr)) { goto _case_end_4434466352; }
		_case_begin_4434466352:;
		{
			return (*this)._method_build_fall_st(_102132_st->_field_tokens);
		}
		goto _match_end_4434462656;
		_case_end_4434466352:;
		if (!((10LLU) == _match_expr)) { goto _case_end_4434466464; }
		_case_begin_4434466464:;
		{
			return (*this)._method_build_type_alias_st(_102132_st->_field_tokens);
		}
		goto _match_end_4434462656;
		_case_end_4434466464:;
		if (!((27LLU) == _match_expr)) { goto _case_end_4434466576; }
		_case_begin_4434466576:;
		{
			return jule::Any((*this)._method_build_match_case(_102132_st->_field_tokens));
		}
		goto _match_end_4434462656;
		_case_end_4434466576:;
		if (!((35LLU) == _match_expr || (37LLU) == _match_expr)) { goto _case_end_4434466688; }
		_case_begin_4434466688:;
		{
			return jule::Any((*this)._method_build_scope_st(_102132_st->_field_tokens));
		}
		goto _match_end_4434462656;
		_case_end_4434466688:;
		if (!((3LLU) == _match_expr)) { goto _case_end_4434466800; }
		_case_begin_4434466800:;
		{
			if (_102217_token._field_kind == jule::Str("{", 1)) {
				return jule::Any((*this)._method_build_scope_st(_102132_st->_field_tokens));
			}
		}
		goto _match_end_4434462656;
		_case_end_4434466800:;
		_case_begin_4434460320:;
		{
			if (_1a9ba6854_is_fn_call(_102132_st->_field_tokens) != nullptr) {
				return (*this)._method_build_call_st(_102132_st->_field_tokens);
			}
		}
		goto _match_end_4434462656;
		_case_end_4434460320:;
		_match_end_4434462656:;
	}
	(*this)._method_push_err(_102217_token,jule::Str("invalid syntax", 14));
	return jule::Any(nullptr);
}



inline void _1a9b97a76_ScopeParser::_method_build(jule::Slice<_1b61ec5ec_Token>& _109729_tokens,jule::Ref<_1b61ca014_ScopeTree>& _109751_s) {
	if ((!(jule::real(_109751_s)))) {
		return;
	}
	(*this)._field_stms=_1a9b97a76_split_stms(_109729_tokens);
	(*this)._field_pos=-1LL;
	(*this)._field_s=_109751_s;
	_iter_begin_4434489536:;
	if (!((!((*this)._method_is_last_st())) && (!((*this)._method_finished())))) { goto _iter_end_4434489536; }
	{
		jule::Ref<_1a9b97a76_Stmt> _110621_st = (*this)._method_next();
		jule::Any _110721_data = (*this)._method_build_st(_110621_st);
		if (_110721_data != nullptr) {
			(*this)._field_s->_field_stmts=jule::append((*this)._field_s->_field_stmts,jule::Slice<jule::Any>({_110721_data}));
		}
		if ((*this)._method_stopped()) {
			goto _iter_end_4434489536;
		}
	}
	_iter_next_4434489536:;
	goto _iter_begin_4434489536;
	_iter_end_4434489536:;
}







std::ostream &operator<<(std::ostream &_Stream, const _1a9b97a76_ScopeParser &_Src) {
	_Stream << "ScopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stms:" << _Src._field_stms << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1a9ba6854_CallData &_Src) {
	_Stream << "CallData{";
	_Stream << "expr_tokens:" << _Src._field_expr_tokens << ", ";
	_Stream << "args_tokens:" << _Src._field_args_tokens << ", ";
	_Stream << "generics_tokens:" << _Src._field_generics_tokens;
	_Stream << "}";
	return _Stream;
}



inline void _1a9ba6854_Precedencer::_method_set(jule::Int _15622_level,jule::Any _15634_expr) {
	{
		auto _range_expr = (*this)._field_pairs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1a9ba6854_i = 0;
			jule::Slice<jule::Any> _1a9ba6854_pair = *_range_begin;
			_iter_begin_4434499008:;
			{
				jule::Int _15817_pair_level = _1a9ba6854_pair[0LL].operator jule::Int();
				if (_15622_level > _15817_pair_level) {
					jule::Slice<jule::Slice<jule::Any>> _16025_first = (*this)._field_pairs.slice(0LL,static_cast<jule::Int>(_1a9ba6854_i));
					jule::Slice<jule::Slice<jule::Any>> _16125_buffer = jule::Slice<jule::Slice<jule::Any>>({jule::Slice<jule::Any>({jule::Any(_15622_level),_15634_expr})});
					jule::Slice<jule::Slice<jule::Any>> _16225_appended = jule::append(_16125_buffer,(*this)._field_pairs.slice(static_cast<jule::Int>(_1a9ba6854_i)));
					(*this)._field_pairs=jule::append(_16025_first,_16225_appended);
					return;
				}
			}
			_iter_next_4434499008:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1a9ba6854_i; _1a9ba6854_pair = *_range_begin; goto _iter_begin_4434499008; }
			_iter_end_4434499008:;
		}
	}
	(*this)._field_pairs=jule::append((*this)._field_pairs,jule::Slice<jule::Slice<jule::Any>>({jule::Slice<jule::Any>({jule::Any(_15622_level),_15634_expr})}));
}



inline jule::Any _1a9ba6854_Precedencer::_method_get_lower(void) {
	jule::I64 _17117_i = (*this)._field_pairs.len() - 1LL;
	_iter_begin_4434498400:;
	if (!(_17117_i >= 0LL)) { goto _iter_end_4434498400; }
	{
		jule::Any _17321_data = (*this)._field_pairs[static_cast<jule::Int>(_17117_i)][1LL];
		if (_17321_data != nullptr) {
			return _17321_data;
		}
	}
	_iter_next_4434498400:;
	(_17117_i)--;
	goto _iter_begin_4434498400;
	_iter_end_4434498400:;
	return jule::Any(nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, const _1a9ba6854_Precedencer &_Src) {
	_Stream << "Precedencer{";
	_Stream << "pairs:" << _Src._field_pairs;
	_Stream << "}";
	return _Stream;
}



inline void _1a9ba6854_ExprBuilder::_method_push_err(_1b61ec5ec_Token _28827_token,jule::Str _28841_fmt,jule::Slice<jule::Any> _28854_args) {
	(*this)._field_p->_method_push_err(_28827_token,_28841_fmt,_28854_args);
}



inline void _1a9ba6854_ExprBuilder::_method_push_suggestion(jule::Str _29334_fmt,jule::Slice<jule::Any> _29347_args) {
	(*this)._field_p->_method_push_suggestion(_29334_fmt,_29347_args);
}



inline jule::Ref<_1b61ca014_TupleExpr> _1a9ba6854_ExprBuilder::_method_build_tuple(jule::Slice<jule::Slice<_1b61ec5ec_Token>>& _29735_parts) {
	jule::Ref<_1b61ca014_TupleExpr> _29817_tuple = jule::new_struct<_1b61ca014_TupleExpr>(new( std::nothrow ) _1b61ca014_TupleExpr(jule::Slice<jule::Ref<_1b61ca014_Expr>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_29735_parts.len())))));
	{
		auto _range_expr = _29735_parts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1a9ba6854_i = 0;
			jule::Slice<_1b61ec5ec_Token> _1a9ba6854_part = *_range_begin;
			_iter_begin_4434552368:;
			{
				_29817_tuple->_field_expr[static_cast<jule::Int>(_1a9ba6854_i)]=(*this)._method_build_from_tokens(_1a9ba6854_part);
			}
			_iter_next_4434552368:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1a9ba6854_i; _1a9ba6854_part = *_range_begin; goto _iter_begin_4434552368; }
			_iter_end_4434552368:;
		}
	}
	return _29817_tuple;
}



inline jule::Ref<_1b61ca014_LitExpr> _1a9ba6854_ExprBuilder::_method_build_lit(_1b61ec5ec_Token _30728_token) {
	return jule::new_struct<_1b61ca014_LitExpr>(new( std::nothrow ) _1b61ca014_LitExpr(_30728_token,_30728_token._field_kind));
}



inline jule::Ref<_1b61ca014_TypeDecl> _1a9ba6854_ExprBuilder::_method_build_primitive_type(_1b61ec5ec_Token& _31440_token) {
	return _1b5d9c0c1_build_prim_type(_31440_token);
}



inline jule::Any _1a9ba6854_ExprBuilder::_method_build_single(_1b61ec5ec_Token _31835_token) {
	{
		auto _match_expr{ _31835_token._field_id };
		if (!((6LLU) == _match_expr)) { goto _case_end_4434568640; }
		_case_begin_4434568640:;
		{
			return jule::Any((*this)._method_build_lit(_31835_token));
		}
		goto _match_end_4434564928;
		_case_end_4434568640:;
		if (!((2LLU) == _match_expr || (28LLU) == _match_expr)) { goto _case_end_4434565840; }
		_case_begin_4434565840:;
		{
			return jule::Any(_1a9ba6854_build_ident_expr(_31835_token));
		}
		goto _match_end_4434564928;
		_case_end_4434565840:;
		if (!((1LLU) == _match_expr)) { goto _case_end_4434565952; }
		_case_begin_4434565952:;
		{
			return jule::Any((*this)._method_build_primitive_type(_31835_token));
		}
		goto _match_end_4434564928;
		_case_end_4434565952:;
		_case_begin_4434565536:;
		{
			(*this)._method_push_err(_31835_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::Any(nullptr);
		}
		goto _match_end_4434564928;
		_case_end_4434565536:;
		_match_end_4434564928:;
	}
}



inline jule::Ref<_1b61ca014_IdentExpr> _1a9ba6854_ExprBuilder::_method_build_cpp_linked_ident(jule::Slice<_1b61ec5ec_Token>& _33646_tokens) {
	if (_33646_tokens[0LL]._field_id != 31LLU) {
		return jule::new_ref<_1b61ca014_IdentExpr>();
	} else if (_33646_tokens[1LL]._field_id != 20LLU) {
		(*this)._method_push_err(_33646_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("use dot (.) to access cpp-linked defines", 40),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b61ca014_IdentExpr>();
	}
	_1b61ec5ec_Token _34417_token = _33646_tokens[2LL];
	if (_34417_token._field_id != 2LLU) {
		(*this)._method_push_err(_33646_tokens[2LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b61ca014_IdentExpr>();
	}
	jule::Ref<_1b61ca014_IdentExpr> _35017_expr = _1a9ba6854_build_ident_expr(_34417_token);
	_35017_expr->_field_cpp_linked=true;
	return _35017_expr;
}



inline jule::Ref<_1b61ca014_UnaryExpr> _1a9ba6854_ExprBuilder::_method_build_unary(jule::Slice<_1b61ec5ec_Token> _35534_tokens) {
	_1b61ec5ec_Token _35617_op = _35534_tokens[0LL];
	if (_35534_tokens.len() == 1LL) {
		(*this)._method_push_err(_35617_op,jule::Str("missing expression for unary operator", 37),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b61ca014_UnaryExpr>();
	} else if ((!(_1b61ec5ec_is_unary_op(_35617_op._field_kind)))) {
		(*this)._method_push_err(_35617_op,jule::Str("invalid_operator_for_unary: @", 29),jule::Slice<jule::Any>({jule::Any(_35617_op._field_kind)}));
		return jule::new_ref<_1b61ca014_UnaryExpr>();
	}
	_35534_tokens=_35534_tokens.slice(1LL);
	return jule::new_struct<_1b61ca014_UnaryExpr>(new( std::nothrow ) _1b61ca014_UnaryExpr(_35617_op,(*this)._method_build(_35534_tokens)));
}



inline jule::Ref<_1b61ca014_SubIdentExpr> _1a9ba6854_ExprBuilder::_method_build_obj_sub_ident(jule::Slice<_1b61ec5ec_Token> _37642_tokens) {
	jule::I64 _37717_i = _37642_tokens.len() - 1LL;
	_1b61ec5ec_Token _37817_ident_token = _37642_tokens[static_cast<jule::Int>(_37717_i)];
	(_37717_i)--;
	_37642_tokens=_37642_tokens.slice(0LL,static_cast<jule::Int>(_37717_i));
	if (_37642_tokens.len() == 0LL) {
		(*this)._method_push_err(_37817_ident_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b61ca014_SubIdentExpr>();
	}
	return jule::new_struct<_1b61ca014_SubIdentExpr>(new( std::nothrow ) _1b61ca014_SubIdentExpr(jule::Bool(),(*this)._method_build(_37642_tokens),_37817_ident_token));
}



inline jule::Ref<_1b61ca014_NsSelectionExpr> _1a9ba6854_ExprBuilder::_method_build_ns_sub_ident(jule::Slice<_1b61ec5ec_Token>& _39142_tokens) {
	jule::Ref<_1b61ca014_NsSelectionExpr> _39217_ns = jule::new_struct<_1b61ca014_NsSelectionExpr>(new( std::nothrow ) _1b61ca014_NsSelectionExpr());
	{
		auto _range_expr = _39142_tokens;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1a9ba6854_i = 0;
			_1b61ec5ec_Token _1a9ba6854_token = *_range_begin;
			_iter_begin_4434614336:;
			{
				if (jule::mod(_1a9ba6854_i,2LL) == 0LL) {
					if (_1a9ba6854_token._field_id != 2LLU) {
						(*this)._method_push_err(_1a9ba6854_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
						(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
					}
					_39217_ns->_field_ns=jule::append(_39217_ns->_field_ns,jule::Slice<_1b61ec5ec_Token>({_1a9ba6854_token}));
				} else if (_1a9ba6854_token._field_id != 23LLU) {
					(*this)._method_push_err(_1a9ba6854_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
					(*this)._method_push_suggestion(jule::Str("expected double colon \"::\"", 26),jule::Slice<jule::Any>({}));
				}
			}
			_iter_next_4434614336:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1a9ba6854_i; _1a9ba6854_token = *_range_begin; goto _iter_begin_4434614336; }
			_iter_end_4434614336:;
		}
	}
	_39217_ns->_field_ident=_39217_ns->_field_ns[static_cast<jule::Int>(_39217_ns->_field_ns.len() - 1LL)];
	_39217_ns->_field_ns=_39217_ns->_field_ns.slice(0LL,static_cast<jule::Int>(_39217_ns->_field_ns.len() - 1LL));
	return _39217_ns;
}



inline jule::Ref<_1b61ca014_TypeDecl> _1a9ba6854_ExprBuilder::_method_build_type(jule::Slice<_1b61ec5ec_Token>& _41034_tokens) {
	jule::Int _41117_i = 0LL;
	jule::Ref<_1b61ca014_TypeDecl> _41218_t;
	jule::Bool _41221_ok;
	std::tie(_41218_t,_41221_ok) = (*this)._field_p->_method_build_type(_41034_tokens,(&(_41117_i)),false);
	if ((!(_41221_ok))) {
		(*this)._method_push_err(_41034_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b61ca014_TypeDecl>();
	}
	if (_41117_i < _41034_tokens.len()) {
		(*this)._method_push_err(_41034_tokens[static_cast<jule::Int>(_41117_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	return _41218_t;
}



inline jule::Any _1a9ba6854_ExprBuilder::_method_build_sub_ident(jule::Slice<_1b61ec5ec_Token>& _42439_tokens) {
	jule::I64 _42513_i = _42439_tokens.len() - 2LL;
	_1b61ec5ec_Token _42613_token = _42439_tokens[static_cast<jule::Int>(_42513_i)];
	{
		auto _match_expr{ _42613_token._field_id };
		if (!((20LLU) == _match_expr)) { goto _case_end_4434646096; }
		_case_begin_4434646096:;
		{
			return jule::Any((*this)._method_build_obj_sub_ident(_42439_tokens));
		}
		goto _match_end_4434643664;
		_case_end_4434646096:;
		if (!((23LLU) == _match_expr)) { goto _case_end_4434646208; }
		_case_begin_4434646208:;
		{
			return jule::Any((*this)._method_build_ns_sub_ident(_42439_tokens));
		}
		goto _match_end_4434643664;
		_case_end_4434646208:;
		if (!((3LLU) == _match_expr)) { goto _case_end_4434646320; }
		_case_begin_4434646320:;
		{
			if (_42613_token._field_kind == jule::Str("]", 1)) {
				return jule::Any((*this)._method_build_type(_42439_tokens));
			}
		}
		goto _match_end_4434643664;
		_case_end_4434646320:;
		_match_end_4434643664:;
	}
	(*this)._method_push_err(_42613_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	return jule::Any(nullptr);
}



inline jule::Ref<_1b61ca014_VariadicExpr> _1a9ba6854_ExprBuilder::_method_build_variadic(jule::Slice<_1b61ec5ec_Token> _44537_tokens) {
	_1b61ec5ec_Token _44617_token = _44537_tokens[static_cast<jule::Int>(_44537_tokens.len() - 1LL)];
	_44537_tokens=_44537_tokens.slice(0LL,static_cast<jule::Int>(_44537_tokens.len() - 1LL));
	return jule::new_struct<_1b61ca014_VariadicExpr>(new( std::nothrow ) _1b61ca014_VariadicExpr(_44617_token,(*this)._method_build(_44537_tokens)));
}



inline jule::Any _1a9ba6854_ExprBuilder::_method_build_op_right(jule::Slice<_1b61ec5ec_Token>& _45438_tokens) {
	_1b61ec5ec_Token _45517_token = _45438_tokens[static_cast<jule::Int>(_45438_tokens.len() - 1LL)];
	{
		auto _match_expr{ _45517_token._field_kind };
		if (!((jule::Str("...", 3)) == _match_expr)) { goto _case_end_4434665456; }
		_case_begin_4434665456:;
		{
			return jule::Any((*this)._method_build_variadic(_45438_tokens));
		}
		goto _match_end_4434663952;
		_case_end_4434665456:;
		_case_begin_4434664640:;
		{
			(*this)._method_push_err(_45517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::Any(nullptr);
		}
		goto _match_end_4434663952;
		_case_end_4434664640:;
		_match_end_4434663952:;
	}
}



inline jule::Any _1a9ba6854_ExprBuilder::_method_build_between_parentheses(jule::Slice<_1b61ec5ec_Token> _46648_tokens) {
	_1b61ec5ec_Token _46713_token = _46648_tokens[0LL];
	_46648_tokens=_46648_tokens.slice(1LL,static_cast<jule::Int>(_46648_tokens.len() - 1LL));
	if (_46648_tokens.len() == 0LL) {
		(*this)._method_push_err(_46713_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("empty parentheses are not valid expression, must include an expression in range", 79),jule::Slice<jule::Any>({}));
		return jule::Any(nullptr);
	}
	return (*this)._method_build(_46648_tokens);
}



inline jule::Ref<_1b61ca014_CastExpr> _1a9ba6854_ExprBuilder::_method_try_build_cast(jule::Slice<_1b61ec5ec_Token>& _47738_tokens) {
	jule::Int _47817_range_n = 0LL;
	{
		auto _range_expr = _47738_tokens;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1a9ba6854_i = 0;
			_1b61ec5ec_Token _1a9ba6854_token = *_range_begin;
			_iter_begin_4434681200:;
			{
				if (_1a9ba6854_token._field_id == 3LLU) {
					{
						auto _match_expr{ _1a9ba6854_token._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4434685552; }
						_case_begin_4434685552:;
						{
							(_47817_range_n)++;
							goto _iter_next_4434681200;
						}
						goto _match_end_4434683968;
						_case_end_4434685552:;
						_case_begin_4434684752:;
						{
							(_47817_range_n)--;
						}
						goto _match_end_4434683968;
						_case_end_4434684752:;
						_match_end_4434683968:;
					}
				}
				if (_47817_range_n > 0LL) {
					goto _iter_next_4434681200;
				} else if ((_1a9ba6854_i + 1LL) == _47738_tokens.len()) {
					return jule::new_ref<_1b61ca014_CastExpr>();
				}
				jule::Slice<_1b61ec5ec_Token> _49921_type_tokens = _47738_tokens.slice(0LL,static_cast<jule::Int>(_1a9ba6854_i + 1LL));
				jule::Slice<_1b61ec5ec_Token> _50021_expr_tokens = _47738_tokens.slice(static_cast<jule::Int>(_1a9ba6854_i + 1LL));
				if (_50021_expr_tokens.len() == 0LL) {
					return jule::new_ref<_1b61ca014_CastExpr>();
				}
				_1b61ec5ec_Token _50717_tok = _50021_expr_tokens[0LL];
				if ((_50717_tok._field_id != 3LLU) || (_50717_tok._field_kind != jule::Str("(", 1))) {
					return jule::new_ref<_1b61ca014_CastExpr>();
				}
				jule::Ref<_1b61ca014_CastExpr> _51221_cast = jule::new_struct<_1b61ca014_CastExpr>(new( std::nothrow ) _1b61ca014_CastExpr());
				if (_50021_expr_tokens.len() == 2LL) {
					(*this)._method_push_err(_50021_expr_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
					(*this)._method_push_suggestion(jule::Str("give an expression for casting", 30),jule::Slice<jule::Any>({}));
				}
				if (_49921_type_tokens.len() == 2LL) {
					(*this)._method_push_err(_49921_type_tokens[0LL],jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
					(*this)._method_push_suggestion(jule::Str("type declaration expected for casting", 37),jule::Slice<jule::Any>({}));
				} else {
					_49921_type_tokens=_49921_type_tokens.slice(1LL,static_cast<jule::Int>(_49921_type_tokens.len() - 1LL));
					jule::Int _52625_type_index = 0LL;
					jule::Ref<_1b61ca014_TypeDecl> _52726_t;
					jule::Bool _52729_ok;
					std::tie(_52726_t,_52729_ok) = (*this)._field_p->_method_build_type(_49921_type_tokens,(&(_52625_type_index)),true);
					if (_52729_ok && (_52625_type_index < _49921_type_tokens.len())) {
						(*this)._method_push_err(_49921_type_tokens[static_cast<jule::Int>(_52625_type_index)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
					} else if ((!(_52729_ok))) {
						return _51221_cast;
					}
					_51221_cast->_field_kind=_52726_t;
					if (_50021_expr_tokens.len() > 2LL) {
						jule::Int _53729_j = 0LL;
						_1a9e07434_range(_53729_j,jule::Str("(", 1),jule::Str(")", 1),_50021_expr_tokens);
						if (_53729_j < _50021_expr_tokens.len()) {
							return jule::new_ref<_1b61ca014_CastExpr>();
						}
						_50021_expr_tokens=_50021_expr_tokens.slice(0LL,static_cast<jule::Int>(_53729_j));
						_51221_cast->_field_expr=(*this)._method_build(_50021_expr_tokens);
					}
				}
				return _51221_cast;
			}
			_iter_next_4434681200:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1a9ba6854_i; _1a9ba6854_token = *_range_begin; goto _iter_begin_4434681200; }
			_iter_end_4434681200:;
		}
	}
	return jule::new_ref<_1b61ca014_CastExpr>();
}



inline void _1a9ba6854_ExprBuilder::_method_push_arg(jule::Slice<jule::Ref<_1b61ca014_Expr>>& _55232_args,jule::Slice<_1b61ec5ec_Token> _55251_tokens,_1b61ec5ec_Token _55268_err_token) {
	if (_55251_tokens.len() == 0LL) {
		(*this)._method_push_err(_55268_err_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("an expression expected", 22),jule::Slice<jule::Any>({}));
		return;
	}
	_55232_args=jule::append(_55232_args,jule::Slice<jule::Ref<_1b61ca014_Expr>>({(*this)._method_build_from_tokens(_55251_tokens)}));
}



inline jule::Slice<jule::Ref<_1b61ca014_Expr>> _1a9ba6854_ExprBuilder::_method_build_args(jule::Slice<_1b61ec5ec_Token> _56133_tokens) {
	if (_56133_tokens.len() < 2LL) {
		return nullptr;
	}
	jule::Slice<jule::Ref<_1b61ca014_Expr>> _56717_args = nullptr;
	jule::Int _56817_last = 0LL;
	jule::Int _56917_range_n = 0LL;
	_56133_tokens=_56133_tokens.slice(1LL,static_cast<jule::Int>(_56133_tokens.len() - 1LL));
	{
		auto _range_expr = _56133_tokens;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1a9ba6854_i = 0;
			_1b61ec5ec_Token _1a9ba6854_token = *_range_begin;
			_iter_begin_4434736288:;
			{
				if (_1a9ba6854_token._field_id == 3LLU) {
					{
						auto _match_expr{ _1a9ba6854_token._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4434741856; }
						_case_begin_4434741856:;
						{
							(_56917_range_n)++;
						}
						goto _match_end_4434740272;
						_case_end_4434741856:;
						_case_begin_4434741056:;
						{
							(_56917_range_n)--;
						}
						goto _match_end_4434740272;
						_case_end_4434741056:;
						_match_end_4434740272:;
					}
				}
				if ((_56917_range_n > 0LL) || (_1a9ba6854_token._field_id != 8LLU)) {
					goto _iter_next_4434736288;
				}
				(*this)._method_push_arg(_56717_args,_56133_tokens.slice(static_cast<jule::Int>(_56817_last),static_cast<jule::Int>(_1a9ba6854_i)),_1a9ba6854_token);
				_56817_last=static_cast<jule::Int>(_1a9ba6854_i + 1LL);
			}
			_iter_next_4434736288:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1a9ba6854_i; _1a9ba6854_token = *_range_begin; goto _iter_begin_4434736288; }
			_iter_end_4434736288:;
		}
	}
	if (_56817_last < _56133_tokens.len()) {
		if (_56817_last == 0LL) {
			if (_56133_tokens.len() > 0LL) {
				(*this)._method_push_arg(_56717_args,_56133_tokens.slice(static_cast<jule::Int>(_56817_last)),_56133_tokens[static_cast<jule::Int>(_56817_last)]);
			}
		} else {
			(*this)._method_push_arg(_56717_args,_56133_tokens.slice(static_cast<jule::Int>(_56817_last)),_56133_tokens[static_cast<jule::Int>(_56817_last - 1LL)]);
		}
	}
	return _56717_args;
}



inline jule::Slice<jule::Ref<_1b61ca014_TypeDecl>> _1a9ba6854_ExprBuilder::_method_build_call_generics(jule::Slice<_1b61ec5ec_Token> _60442_tokens) {
	if (_60442_tokens.len() == 0LL) {
		return nullptr;
	}
	_60442_tokens=_60442_tokens.slice(1LL,static_cast<jule::Int>(_60442_tokens.len() - 1LL));
	jule::Slice<jule::Slice<_1b61ec5ec_Token>> _61018_parts;
	jule::Slice<_1cdeeb191_Log> _61025_errs;
	std::tie(_61018_parts,_61025_errs) = _1a9e07434_parts(_60442_tokens,8LLU,true);
	jule::Slice<jule::Ref<_1b61ca014_TypeDecl>> _61117_generics = jule::Slice<jule::Ref<_1b61ca014_TypeDecl>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_61018_parts.len())));
	(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_61025_errs);
	{
		auto _range_expr = _61018_parts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1a9ba6854_i = 0;
			jule::Slice<_1b61ec5ec_Token> _1a9ba6854_part = *_range_begin;
			_iter_begin_4434761808:;
			{
				if (_1a9ba6854_part.len() == 0LL) {
					goto _iter_next_4434761808;
				}
				jule::Int _61721_j = 0LL;
				jule::Ref<_1b61ca014_TypeDecl> _61822_generic;
				std::tie(_61822_generic,std::ignore) = (*this)._field_p->_method_build_type(_1a9ba6854_part,(&(_61721_j)),true);
				if (_61721_j < _1a9ba6854_part.len()) {
					(*this)._method_push_err(_1a9ba6854_part[static_cast<jule::Int>(_61721_j)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				}
				_61117_generics[static_cast<jule::Int>(_1a9ba6854_i)]=_61822_generic;
			}
			_iter_next_4434761808:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1a9ba6854_i; _1a9ba6854_part = *_range_begin; goto _iter_begin_4434761808; }
			_iter_end_4434761808:;
		}
	}
	return _61117_generics;
}



inline jule::Ref<_1b61ca014_FnCallExpr> _1a9ba6854_ExprBuilder::_method_build_fn_call(_1b61ec5ec_Token& _62837_token,jule::Ref<_1a9ba6854_CallData>& _62856_data) {
	return jule::new_struct<_1b61ca014_FnCallExpr>(new( std::nothrow ) _1b61ca014_FnCallExpr(_62837_token,(*this)._method_build_from_tokens(_62856_data->_field_expr_tokens),(*this)._method_build_call_generics(_62856_data->_field_generics_tokens),(*this)._method_build_args(_62856_data->_field_args_tokens),jule::Bool()));
}



inline jule::Any _1a9ba6854_ExprBuilder::_method_build_parentheses_range(jule::Slice<_1b61ec5ec_Token>& _63747_tokens) {
	_1b61ec5ec_Token _63817_token = _63747_tokens[0LL];
	{
		auto _match_expr{ _63817_token._field_id };
		if (!((3LLU) == _match_expr)) { goto _case_end_4434787968; }
		_case_begin_4434787968:;
		{
			{
				auto _match_expr{ _63817_token._field_kind };
				if (!((jule::Str("(", 1)) == _match_expr)) { goto _case_end_4434789680; }
				_case_begin_4434789680:;
				{
					jule::Ref<_1b61ca014_CastExpr> _64325_expr = (*this)._method_try_build_cast(_63747_tokens);
					if (jule::real(_64325_expr)) {
						return jule::Any(_64325_expr);
					}
				}
				goto _match_end_4434788528;
				_case_end_4434789680:;
				_match_end_4434788528:;
			}
		}
		goto _match_end_4434787248;
		_case_end_4434787968:;
		_match_end_4434787248:;
	}
	jule::Ref<_1a9ba6854_CallData> _65017_data = _1a9ba6854_get_call_data(_63747_tokens);
	if (_65017_data->_field_expr_tokens.len() == 0LL) {
		return (*this)._method_build_between_parentheses(_65017_data->_field_args_tokens);
	}
	return jule::Any((*this)._method_build_fn_call(_63817_token,_65017_data));
}



inline jule::Ref<_1b61ca014_UnsafeExpr> _1a9ba6854_ExprBuilder::_method_build_unsafe_expr(jule::Slice<_1b61ec5ec_Token> _66140_tokens) {
	_1b61ec5ec_Token _66217_token = _66140_tokens[0LL];
	_66140_tokens=_66140_tokens.slice(1LL);
	jule::Int _66417_i = 0LL;
	jule::Slice<_1b61ec5ec_Token> _66517_range_tokens = _1a9e07434_range(_66417_i,jule::Str("{", 1),jule::Str("}", 1),_66140_tokens);
	if (_66517_range_tokens.len() == 0LL) {
		(*this)._method_push_err(_66140_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b61ca014_UnsafeExpr>();
	}
	return jule::new_struct<_1b61ca014_UnsafeExpr>(new( std::nothrow ) _1b61ca014_UnsafeExpr(_66217_token,(*this)._method_build_from_tokens(_66517_range_tokens)->_field_kind));
}



inline jule::Ref<_1b61ca014_FnDecl> _1a9ba6854_ExprBuilder::_method_build_anon_fn(jule::Slice<_1b61ec5ec_Token>& _67637_tokens) {
	jule::Ref<_1b61ca014_FnDecl> _67717_f = (*this)._field_p->_method_build_fn(_67637_tokens,false,false);
	if ((!(_67717_f->_method_is_anon()))) {
		(*this)._method_push_err(_67717_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("anonymous function expected, remove identifier of function", 58),jule::Slice<jule::Any>({}));
	}
	return _67717_f;
}



inline jule::Any _1a9ba6854_ExprBuilder::_method_build_unsafe(jule::Slice<_1b61ec5ec_Token>& _68536_tokens) {
	{
		auto _match_expr{ _68536_tokens[1LL]._field_id };
		if (!((33LLU) == _match_expr)) { goto _case_end_4434821696; }
		_case_begin_4434821696:;
		{
			return jule::Any((*this)._method_build_anon_fn(_68536_tokens));
		}
		goto _match_end_4434818944;
		_case_end_4434821696:;
		_case_begin_4434820240:;
		{
			return jule::Any((*this)._method_build_unsafe_expr(_68536_tokens));
		}
		goto _match_end_4434818944;
		_case_end_4434820240:;
		_match_end_4434818944:;
	}
}



inline void _1a9ba6854_ExprBuilder::_method_push_range_lit_part(jule::Slice<_1b61ec5ec_Token> _69642_part,_1b61ec5ec_Token _6979_error_token,jule::Slice<jule::Slice<_1b61ec5ec_Token>>& _69734_parts) {
	if (_69642_part.len() == 0LL) {
		(*this)._method_push_err(_6979_error_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("an expression expected", 22),jule::Slice<jule::Any>({}));
		return;
	}
	_69734_parts=jule::append(_69734_parts,jule::Slice<jule::Slice<_1b61ec5ec_Token>>({_69642_part}));
}



inline jule::Slice<jule::Slice<_1b61ec5ec_Token>> _1a9ba6854_ExprBuilder::_method_get_brace_range_lit_expr_parts(jule::Slice<_1b61ec5ec_Token> _70753_tokens) {
	if (_70753_tokens.len() < 2LL) {
		return nullptr;
	}
	jule::Slice<jule::Slice<_1b61ec5ec_Token>> _71317_parts = nullptr;
	jule::Int _71517_last = 0LL;
	jule::Int _71617_range_n = 0LL;
	_70753_tokens=_70753_tokens.slice(1LL,static_cast<jule::Int>(_70753_tokens.len() - 1LL));
	{
		auto _range_expr = _70753_tokens;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1a9ba6854_i = 0;
			_1b61ec5ec_Token _1a9ba6854_token = *_range_begin;
			_iter_begin_4434838784:;
			{
				if (_1a9ba6854_token._field_id == 3LLU) {
					{
						auto _match_expr{ _1a9ba6854_token._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4434844352; }
						_case_begin_4434844352:;
						{
							(_71617_range_n)++;
						}
						goto _match_end_4434842768;
						_case_end_4434844352:;
						_case_begin_4434843552:;
						{
							(_71617_range_n)--;
						}
						goto _match_end_4434842768;
						_case_end_4434843552:;
						_match_end_4434842768:;
					}
				}
				if ((_71617_range_n > 0LL) || (_1a9ba6854_token._field_id != 8LLU)) {
					goto _iter_next_4434838784;
				}
				(*this)._method_push_range_lit_part(_70753_tokens.slice(static_cast<jule::Int>(_71517_last),static_cast<jule::Int>(_1a9ba6854_i)),_1a9ba6854_token,_71317_parts);
				_71517_last=static_cast<jule::Int>(_1a9ba6854_i + 1LL);
			}
			_iter_next_4434838784:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1a9ba6854_i; _1a9ba6854_token = *_range_begin; goto _iter_begin_4434838784; }
			_iter_end_4434838784:;
		}
	}
	if (_71517_last < _70753_tokens.len()) {
		if (_71517_last == 0LL) {
			if (_70753_tokens.len() > 0LL) {
				(*this)._method_push_range_lit_part(_70753_tokens.slice(static_cast<jule::Int>(_71517_last)),_70753_tokens[static_cast<jule::Int>(_71517_last)],_71317_parts);
			}
		} else {
			(*this)._method_push_range_lit_part(_70753_tokens.slice(static_cast<jule::Int>(_71517_last)),_70753_tokens[static_cast<jule::Int>(_71517_last - 1LL)],_71317_parts);
		}
	}
	return _71317_parts;
}



inline jule::Ref<_1b61ca014_FieldExprPair> _1a9ba6854_ExprBuilder::_method_build_field_expr_pair(jule::Slice<_1b61ec5ec_Token> _75044_tokens) {
	jule::Ref<_1b61ca014_FieldExprPair> _75117_pair = jule::new_struct<_1b61ca014_FieldExprPair>(new( std::nothrow ) _1b61ca014_FieldExprPair(_75044_tokens[0LL],jule::Any()));
	_75044_tokens=_75044_tokens.slice(2LL);
	_75117_pair->_field_expr=(*this)._method_build_from_tokens(_75044_tokens)->_field_kind;
	return _75117_pair;
}



inline jule::Any _1a9ba6854_ExprBuilder::_method_build_struct_lit_expr(jule::Slice<_1b61ec5ec_Token>& _75945_tokens) {
	_1b61ec5ec_Token _76017_token = _75945_tokens[0LL];
	if (_76017_token._field_id == 2LLU) {
		if (_75945_tokens.len() > 1LL) {
			_76017_token=_75945_tokens[1LL];
			if (_76017_token._field_id == 11LLU) {
				return jule::Any((*this)._method_build_field_expr_pair(_75945_tokens));
			}
		}
	}
	return jule::Any((*this)._method_build_from_tokens(_75945_tokens));
}



inline jule::Slice<jule::Any> _1a9ba6854_ExprBuilder::_method_build_struct_lit_exprs(jule::Slice<_1b61ec5ec_Token>& _77246_tokens) {
	jule::Slice<jule::Slice<_1b61ec5ec_Token>> _77317_parts = (*this)._method_get_brace_range_lit_expr_parts(_77246_tokens);
	if (_77317_parts.len() == 0LL) {
		return nullptr;
	}
	jule::Slice<jule::Any> _77817_pairs = jule::Slice<jule::Any>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_77317_parts.len())));
	{
		auto _range_expr = _77317_parts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1a9ba6854_i = 0;
			jule::Slice<_1b61ec5ec_Token> _1a9ba6854_part = *_range_begin;
			_iter_begin_4434880080:;
			{
				_77817_pairs[static_cast<jule::Int>(_1a9ba6854_i)]=(*this)._method_build_struct_lit_expr(_1a9ba6854_part);
			}
			_iter_next_4434880080:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1a9ba6854_i; _1a9ba6854_part = *_range_begin; goto _iter_begin_4434880080; }
			_iter_end_4434880080:;
		}
	}
	return _77817_pairs;
}



inline jule::Ref<_1b61ca014_StructLit> _1a9ba6854_ExprBuilder::_method_build_typed_struct_literal(jule::Slice<_1b61ec5ec_Token> _78549_tokens) {
	jule::Int _78617_i = 0LL;
	jule::Ref<_1b61ca014_TypeDecl> _78718_t;
	jule::Bool _78721_ok;
	std::tie(_78718_t,_78721_ok) = (*this)._field_p->_method_build_type(_78549_tokens,(&(_78617_i)),true);
	if ((!(_78721_ok))) {
		return jule::new_ref<_1b61ca014_StructLit>();
	} else if (_78617_i >= _78549_tokens.len()) {
		(*this)._method_push_err(_78549_tokens[static_cast<jule::Int>(_78617_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b61ca014_StructLit>();
	}
	_78549_tokens=_78549_tokens.slice(static_cast<jule::Int>(_78617_i));
	_1b61ec5ec_Token _79613_token = _78549_tokens[0LL];
	if ((_79613_token._field_id != 3LLU) || (_79613_token._field_kind != jule::Str("{", 1))) {
		(*this)._method_push_err(_79613_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b61ca014_StructLit>();
	}
	return jule::new_struct<_1b61ca014_StructLit>(new( std::nothrow ) _1b61ca014_StructLit(_78718_t,(*this)._method_build_struct_lit_exprs(_78549_tokens)));
}



inline jule::Any _1a9ba6854_ExprBuilder::_method_build_brace_lit_part(jule::Slice<_1b61ec5ec_Token>& _80844_tokens) {
	jule::Slice<_1b61ec5ec_Token> _80918_l;
	jule::Slice<_1b61ec5ec_Token> _80925_r;
	std::tie(_80918_l,_80925_r) = _1a9ba6854_split_colon(_80844_tokens);
	if (_80918_l != nullptr) {
		return jule::Any(jule::new_struct<_1b61ca014_KeyValPair>(new( std::nothrow ) _1b61ca014_KeyValPair((*this)._method_build_from_tokens(_80918_l)->_field_kind,(*this)._method_build_from_tokens(_80925_r)->_field_kind,_80844_tokens[static_cast<jule::Int>(_80918_l.len())])));
	}
	return jule::Any((*this)._method_build_from_tokens(_80844_tokens));
}



inline jule::Ref<_1b61ca014_BraceLit> _1a9ba6854_ExprBuilder::_method_build_brace_lit(jule::Slice<_1b61ec5ec_Token>& _82139_tokens) {
	jule::Ref<_1b61ca014_BraceLit> _82217_lit = jule::new_struct<_1b61ca014_BraceLit>(new( std::nothrow ) _1b61ca014_BraceLit(_82139_tokens[0LL],jule::Slice<jule::Any>()));
	jule::Slice<jule::Slice<_1b61ec5ec_Token>> _82617_parts = (*this)._method_get_brace_range_lit_expr_parts(_82139_tokens);
	if (_82617_parts == nullptr) {
		return _82217_lit;
	}
	_82217_lit->_field_exprs=jule::Slice<jule::Any>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_82617_parts.len())));
	{
		auto _range_expr = _82617_parts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1a9ba6854_i = 0;
			jule::Slice<_1b61ec5ec_Token> _1a9ba6854_part = *_range_begin;
			_iter_begin_4434917056:;
			{
				_82217_lit->_field_exprs[static_cast<jule::Int>(_1a9ba6854_i)]=(*this)._method_build_brace_lit_part(_1a9ba6854_part);
			}
			_iter_next_4434917056:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1a9ba6854_i; _1a9ba6854_part = *_range_begin; goto _iter_begin_4434917056; }
			_iter_end_4434917056:;
		}
	}
	return _82217_lit;
}



inline jule::Any _1a9ba6854_ExprBuilder::_method_build_brace_range(jule::Slice<_1b61ec5ec_Token>& _83941_tokens) {
	jule::Slice<_1b61ec5ec_Token> _84014_expr_tokens;
	jule::Int _84027_range_n;
	std::tie(_84014_expr_tokens,_84027_range_n) = _1a9ba6854_get_range_expr_tokens(_83941_tokens);
	{
		if (!((_84014_expr_tokens.len() == 0LL))) { goto _case_end_4434926464; }
		_case_begin_4434926464:;
		{
			return jule::Any((*this)._method_build_brace_lit(_83941_tokens));
		}
		goto _match_end_4434926320;
		_case_end_4434926464:;
		if (!((_84027_range_n > 0LL))) { goto _case_end_4434926592; }
		_case_begin_4434926592:;
		{
			(*this)._method_push_err(_83941_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::Any(nullptr);
		}
		goto _match_end_4434926320;
		_case_end_4434926592:;
		_match_end_4434926320:;
	}
	{
		auto _match_expr{ _84014_expr_tokens[0LL]._field_id };
		if (!((35LLU) == _match_expr)) { goto _case_end_4434936192; }
		_case_begin_4434936192:;
		{
			return (*this)._method_build_unsafe(_83941_tokens);
		}
		goto _match_end_4434931920;
		_case_end_4434936192:;
		if (!((33LLU) == _match_expr)) { goto _case_end_4434935440; }
		_case_begin_4434935440:;
		{
			return jule::Any((*this)._method_build_anon_fn(_83941_tokens));
		}
		goto _match_end_4434931920;
		_case_end_4434935440:;
		if (!((2LLU) == _match_expr || (31LLU) == _match_expr)) { goto _case_end_4434935552; }
		_case_begin_4434935552:;
		{
			return jule::Any((*this)._method_build_typed_struct_literal(_83941_tokens));
		}
		goto _match_end_4434931920;
		_case_end_4434935552:;
		_case_begin_4434928688:;
		{
			(*this)._method_push_err(_84014_expr_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::Any(nullptr);
		}
		goto _match_end_4434931920;
		_case_end_4434928688:;
		_match_end_4434931920:;
	}
}



inline jule::Slice<jule::Slice<_1b61ec5ec_Token>> _1a9ba6854_ExprBuilder::_method_get_enumerable_parts(jule::Slice<_1b61ec5ec_Token> _86943_tokens) {
	_86943_tokens=_86943_tokens.slice(1LL,static_cast<jule::Int>(_86943_tokens.len() - 1LL));
	jule::Slice<jule::Slice<_1b61ec5ec_Token>> _87118_parts;
	jule::Slice<_1cdeeb191_Log> _87125_errors;
	std::tie(_87118_parts,_87125_errors) = _1a9e07434_parts(_86943_tokens,8LLU,true);
	(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_87125_errors);
	return _87118_parts;
}



inline jule::Ref<_1b61ca014_SliceExpr> _1a9ba6854_ExprBuilder::_method_build_slice(jule::Slice<_1b61ec5ec_Token> _87634_tokens) {
	jule::Ref<_1b61ca014_SliceExpr> _87717_slc = jule::new_struct<_1b61ca014_SliceExpr>(new( std::nothrow ) _1b61ca014_SliceExpr(_87634_tokens[0LL],jule::Slice<jule::Any>()));
	jule::Slice<jule::Slice<_1b61ec5ec_Token>> _88117_parts = (*this)._method_get_enumerable_parts(_87634_tokens);
	if (_88117_parts.len() == 0LL) {
		return _87717_slc;
	}
	_87717_slc->_field_elems=jule::Slice<jule::Any>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_88117_parts.len())));
	{
		auto _range_expr = _88117_parts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1a9ba6854_i = 0;
			jule::Slice<_1b61ec5ec_Token> _1a9ba6854_p = *_range_begin;
			_iter_begin_4434952672:;
			{
				_87717_slc->_field_elems[static_cast<jule::Int>(_1a9ba6854_i)]=(*this)._method_build_from_tokens(_1a9ba6854_p)->_field_kind;
			}
			_iter_next_4434952672:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1a9ba6854_i; _1a9ba6854_p = *_range_begin; goto _iter_begin_4434952672; }
			_iter_end_4434952672:;
		}
	}
	return _87717_slc;
}



inline jule::Ref<_1b61ca014_IndexingExpr> _1a9ba6854_ExprBuilder::_method_build_indexing(jule::Slice<_1b61ec5ec_Token> _89437_expr_tokens,jule::Slice<_1b61ec5ec_Token> _89513_tokens,_1b61ec5ec_Token _89534_error_token) {
	_89513_tokens=_89513_tokens.slice(1LL,static_cast<jule::Int>(_89513_tokens.len() - 1LL));
	return jule::new_struct<_1b61ca014_IndexingExpr>(new( std::nothrow ) _1b61ca014_IndexingExpr(_89534_error_token,(*this)._method_build_from_tokens(_89437_expr_tokens)->_field_kind,(*this)._method_build_from_tokens(_89513_tokens)->_field_kind));
}



inline jule::Ref<_1b61ca014_SlicingExpr> _1a9ba6854_ExprBuilder::_method_build_slicing(jule::Slice<_1b61ec5ec_Token>& _90437_expr_tokens,jule::Slice<_1b61ec5ec_Token>& _90464_slicing_tokens,jule::Int& _90510_colon,_1b61ec5ec_Token& _90527_error_token) {
	jule::Ref<_1b61ca014_SlicingExpr> _90617_slc = jule::new_struct<_1b61ca014_SlicingExpr>(new( std::nothrow ) _1b61ca014_SlicingExpr(_90527_error_token,(*this)._method_build_from_tokens(_90437_expr_tokens)->_field_kind,jule::Any(),jule::Any()));
	jule::Slice<_1b61ec5ec_Token> _91117_start_expr_tokens = _90464_slicing_tokens.slice(0LL,static_cast<jule::Int>(_90510_colon));
	if (_91117_start_expr_tokens.len() > 0LL) {
		_90617_slc->_field_start=(*this)._method_build_from_tokens(_91117_start_expr_tokens)->_field_kind;
	}
	jule::Slice<_1b61ec5ec_Token> _91617_to_expr_tokens = _90464_slicing_tokens.slice(static_cast<jule::Int>(_90510_colon + 1LL));
	if (_91617_to_expr_tokens.len() > 0LL) {
		_90617_slc->_field_to=(*this)._method_build_from_tokens(_91617_to_expr_tokens)->_field_kind;
	}
	return _90617_slc;
}



inline jule::Any _1a9ba6854_ExprBuilder::_method_build_bracket_range(jule::Slice<_1b61ec5ec_Token> _92442_tokens) {
	_1b61ec5ec_Token _92517_error_token = _92442_tokens[0LL];
	jule::Slice<_1b61ec5ec_Token> _92618_expr_tokens;
	jule::Int _92631_range_n;
	std::tie(_92618_expr_tokens,_92631_range_n) = _1a9ba6854_get_range_expr_tokens(_92442_tokens);
	{
		if (!((_92618_expr_tokens.len() == 0LL))) { goto _case_end_4434987088; }
		_case_begin_4434987088:;
		{
			return jule::Any((*this)._method_build_slice(_92442_tokens));
		}
		goto _match_end_4434986944;
		_case_end_4434987088:;
		if (!(((_92618_expr_tokens.len() == 0LL) || (_92631_range_n > 0LL)))) { goto _case_end_4434987200; }
		_case_begin_4434987200:;
		{
			(*this)._method_push_err(_92517_error_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::Any(nullptr);
		}
		goto _match_end_4434986944;
		_case_end_4434987200:;
		_match_end_4434986944:;
	}
	_92442_tokens=_92442_tokens.slice(static_cast<jule::Int>(_92618_expr_tokens.len()));
	jule::Int _94517_i = 0LL;
	jule::Slice<_1b61ec5ec_Token> _94618_slicing_tokens;
	jule::Int _94634_colon;
	std::tie(_94618_slicing_tokens,_94634_colon) = _1b5d9c0c1_split_map_range(_92442_tokens,_94517_i);
	if (_94634_colon != -1LL) {
		return jule::Any((*this)._method_build_slicing(_92618_expr_tokens,_94618_slicing_tokens,_94634_colon,_92517_error_token));
	}
	return jule::Any((*this)._method_build_indexing(_92618_expr_tokens,_92442_tokens,_92517_error_token));
}



inline jule::Any _1a9ba6854_ExprBuilder::_method_build_ternary(jule::Slice<_1b61ec5ec_Token> _95336_tokens) {
	jule::Ref<_1b61ca014_TernaryExpr> _95417_ter = jule::new_struct<_1b61ca014_TernaryExpr>(new( std::nothrow ) _1b61ca014_TernaryExpr());
	_95417_ter->_field_token=_95336_tokens[0LL];
	_95336_tokens=_95336_tokens.slice(1LL);
	jule::Slice<_1b61ec5ec_Token> _95817_expr_tokens = _1a9ba6854_get_block_expr(_95336_tokens);
	if (_95817_expr_tokens.len() == 0LL) {
		(*this)._method_push_err(_95417_ter->_field_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
	}
	_95417_ter->_field_condition=(*this)._method_build_kind(_95817_expr_tokens);
	jule::I64 _96517_i = _95817_expr_tokens.len();
	jule::Slice<_1b61ec5ec_Token> _96617_true_expr = _1a9e07434_range(_96517_i,jule::Str("{", 1),jule::Str("}", 1),_95336_tokens);
	if (_96617_true_expr == nullptr) {
		(*this)._method_push_err(_95417_ter->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::Any(_95417_ter);
	} else if (_96617_true_expr.len() == 0LL) {
		(*this)._method_push_err(_95336_tokens[static_cast<jule::Int>(_95817_expr_tokens.len())],jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
	}
	if (_96517_i >= _95336_tokens.len()) {
		(*this)._method_push_err(_95417_ter->_field_token,jule::Str("else block missed for ternary operator", 38),jule::Slice<jule::Any>({}));
		return jule::Any(_95417_ter);
	}
	_1b61ec5ec_Token _98013_else_token = _95336_tokens[static_cast<jule::Int>(_96517_i)];
	if (_98013_else_token._field_id != 17LLU) {
		(*this)._method_push_err(_98013_else_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("else keyword expected for else block of ternary operator", 56),jule::Slice<jule::Any>({}));
		return jule::Any(_95417_ter);
	}
	(_96517_i)++;
	jule::I64 _98813_j = _96517_i;
	jule::Slice<_1b61ec5ec_Token> _98917_false_expr = _1a9e07434_range(_96517_i,jule::Str("{", 1),jule::Str("}", 1),_95336_tokens);
	if (_98917_false_expr == nullptr) {
		(*this)._method_push_err(_98013_else_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::Any(_95417_ter);
	} else if (_98917_false_expr.len() == 0LL) {
		(*this)._method_push_err(_95336_tokens[static_cast<jule::Int>(_98813_j)],jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
	}
	if (_96517_i < _95336_tokens.len()) {
		(*this)._method_push_err(_95336_tokens[static_cast<jule::Int>(_96517_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	_95417_ter->_field_true_expr=(*this)._method_build_kind(_96617_true_expr);
	_95417_ter->_field_false_expr=(*this)._method_build_kind(_98917_false_expr);
	return jule::Any(_95417_ter);
}



inline jule::Any _1a9ba6854_ExprBuilder::_method_build_data(jule::Slice<_1b61ec5ec_Token>& _100834_tokens) {
	{
		auto _match_expr{ _100834_tokens.len() };
		if (!((0LL) == _match_expr)) { goto _case_end_4435040880; }
		_case_begin_4435040880:;
		{
			return jule::Any(nullptr);
		}
		goto _match_end_4435040048;
		_case_end_4435040880:;
		if (!((1LL) == _match_expr)) { goto _case_end_4435040992; }
		_case_begin_4435040992:;
		{
			return (*this)._method_build_single(_100834_tokens[0LL]);
		}
		goto _match_end_4435040048;
		_case_end_4435040992:;
		if (!((3LL) == _match_expr)) { goto _case_end_4435041104; }
		_case_begin_4435041104:;
		{
			if (_100834_tokens[0LL]._field_id == 31LLU) {
				return jule::Any((*this)._method_build_cpp_linked_ident(_100834_tokens));
			}
		}
		goto _match_end_4435040048;
		_case_end_4435041104:;
		_match_end_4435040048:;
	}
	_1b61ec5ec_Token _102217_token = _100834_tokens[0LL];
	{
		auto _match_expr{ _102217_token._field_id };
		if (!((7LLU) == _match_expr)) { goto _case_end_4435048880; }
		_case_begin_4435048880:;
		{
			if ((_100834_tokens.len() > 1LL) && (_102217_token._field_kind == jule::Str("*", 1))) {
				_102217_token=_100834_tokens[1LL];
				if ((_102217_token._field_id == 1LLU) || (_102217_token._field_id == 35LLU)) {
					return jule::Any((*this)._method_build_type(_100834_tokens));
				}
			}
			return jule::Any((*this)._method_build_unary(_100834_tokens));
		}
		goto _match_end_4435046544;
		_case_end_4435048880:;
		if (!((3LLU) == _match_expr)) { goto _case_end_4435048992; }
		_case_begin_4435048992:;
		{
			if ((_102217_token._field_kind != jule::Str("[", 1)) || (_100834_tokens.len() < 3LL)) {
				goto _match_end_4435046544;
			}
			_1b61ec5ec_Token _104017_next = _100834_tokens[1LL];
			if ((_104017_next._field_id != 3LLU) || (_104017_next._field_kind != jule::Str("]", 1))) {
				goto _match_end_4435046544;
			}
			return jule::Any((*this)._method_build_type(_100834_tokens));
		}
		goto _match_end_4435046544;
		_case_end_4435048992:;
		_match_end_4435046544:;
	}
	_102217_token=_100834_tokens[static_cast<jule::Int>(_100834_tokens.len() - 1LL)];
	{
		auto _match_expr{ _102217_token._field_id };
		if (!((2LLU) == _match_expr)) { goto _case_end_4435062480; }
		_case_begin_4435062480:;
		{
			return (*this)._method_build_sub_ident(_100834_tokens);
		}
		goto _match_end_4435061328;
		_case_end_4435062480:;
		if (!((1LLU) == _match_expr)) { goto _case_end_4435062608; }
		_case_begin_4435062608:;
		{
			return jule::Any((*this)._method_build_type(_100834_tokens));
		}
		goto _match_end_4435061328;
		_case_end_4435062608:;
		if (!((7LLU) == _match_expr)) { goto _case_end_4435062736; }
		_case_begin_4435062736:;
		{
			return (*this)._method_build_op_right(_100834_tokens);
		}
		goto _match_end_4435061328;
		_case_end_4435062736:;
		if (!((3LLU) == _match_expr)) { goto _case_end_4435062864; }
		_case_begin_4435062864:;
		{
			{
				auto _match_expr{ _102217_token._field_kind };
				if (!((jule::Str(")", 1)) == _match_expr)) { goto _case_end_4435067488; }
				_case_begin_4435067488:;
				{
					return (*this)._method_build_parentheses_range(_100834_tokens);
				}
				goto _match_end_4435065376;
				_case_end_4435067488:;
				if (!((jule::Str("}", 1)) == _match_expr)) { goto _case_end_4435067664; }
				_case_begin_4435067664:;
				{
					return (*this)._method_build_brace_range(_100834_tokens);
				}
				goto _match_end_4435065376;
				_case_end_4435067664:;
				if (!((jule::Str("]", 1)) == _match_expr)) { goto _case_end_4435067776; }
				_case_begin_4435067776:;
				{
					return (*this)._method_build_bracket_range(_100834_tokens);
				}
				goto _match_end_4435065376;
				_case_end_4435067776:;
				_match_end_4435065376:;
			}
		}
		goto _match_end_4435061328;
		_case_end_4435062864:;
		_match_end_4435061328:;
	}
	(*this)._method_push_err(_102217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	return jule::Any(nullptr);
}



inline jule::Ref<_1b61ca014_BinopExpr> _1a9ba6854_ExprBuilder::_method_build_binop(jule::Slice<_1b61ec5ec_Token>& _107735_tokens,jule::Int _107752_i) {
	jule::Slice<_1b61ec5ec_Token> _107817_left_tokens = _107735_tokens.slice(0LL,static_cast<jule::Int>(_107752_i));
	jule::Slice<_1b61ec5ec_Token> _107917_right_tokens = _107735_tokens.slice(static_cast<jule::Int>(_107752_i + 1LL));
	if (_107817_left_tokens.len() == 0LL) {
		(*this)._method_push_err(_107735_tokens[static_cast<jule::Int>(_107752_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("left operand expected for binary operator", 41),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b61ca014_BinopExpr>();
	}
	if (_107917_right_tokens.len() == 0LL) {
		(*this)._method_push_err(_107735_tokens[static_cast<jule::Int>(_107752_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("right operand expected for binary operator", 42),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b61ca014_BinopExpr>();
	}
	return jule::new_struct<_1b61ca014_BinopExpr>(new( std::nothrow ) _1b61ca014_BinopExpr((*this)._method_build(_107817_left_tokens),(*this)._method_build(_107917_right_tokens),_107735_tokens[static_cast<jule::Int>(_107752_i)]));
}



inline jule::Any _1a9ba6854_ExprBuilder::_method_build(jule::Slice<_1b61ec5ec_Token>& _110029_tokens) {
	_1b61ec5ec_Token _110117_token = _110029_tokens[0LL];
	{
		auto _match_expr{ _110117_token._field_id };
		if (!((16LLU) == _match_expr)) { goto _case_end_4435093472; }
		_case_begin_4435093472:;
		{
			return (*this)._method_build_ternary(_110029_tokens);
		}
		goto _match_end_4435092800;
		_case_end_4435093472:;
		_match_end_4435092800:;
	}
	jule::Int _110713_i = _1a9ba6854_find_lowest_prec_op(_110029_tokens);
	if (_110713_i == -1LL) {
		return (*this)._method_build_data(_110029_tokens);
	}
	return jule::Any((*this)._method_build_binop(_110029_tokens,_110713_i));
}



inline jule::Any _1a9ba6854_ExprBuilder::_method_build_kind(jule::Slice<_1b61ec5ec_Token>& _111434_tokens) {
	jule::Slice<jule::Slice<_1b61ec5ec_Token>> _111518_parts;
	jule::Slice<_1cdeeb191_Log> _111525_errors;
	std::tie(_111518_parts,_111525_errors) = _1a9e07434_parts(_111434_tokens,8LLU,true);
	if (_111525_errors != nullptr) {
		(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_111525_errors);
		return jule::Any(nullptr);
	} else if (_111518_parts.len() > 1LL) {
		return jule::Any((*this)._method_build_tuple(_111518_parts));
	}
	return (*this)._method_build(_111434_tokens);
}



inline jule::Ref<_1b61ca014_Expr> _1a9ba6854_ExprBuilder::_method_build_from_tokens(jule::Slice<_1b61ec5ec_Token> _112540_tokens) {
	_112540_tokens=_1a9ba6854_eliminate_comments(_112540_tokens);
	if (_112540_tokens.len() == 0LL) {
		return jule::new_ref<_1b61ca014_Expr>();
	}
	return jule::new_struct<_1b61ca014_Expr>(new( std::nothrow ) _1b61ca014_Expr(_112540_tokens[0LL],(*this)._method_build_kind(_112540_tokens)));
}







std::ostream &operator<<(std::ostream &_Stream, const _1a9ba6854_ExprBuilder &_Src) {
	_Stream << "ExprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}



inline void _1a9e07434_Parser::_method_stop(void) {
	jule::drop((*this)._field_ast);
}



inline jule::Bool _1a9e07434_Parser::_method_stopped(void) {
	return (!(jule::real((*this)._field_ast)));
}



inline void _1a9e07434_Parser::_method_push_err(_1b61ec5ec_Token _24027_token,jule::Str _24041_fmt,jule::Slice<jule::Any> _24054_args) {
	(*this)._field_errors=jule::append((*this)._field_errors,jule::Slice<_1cdeeb191_Log>({_1a9e07434_compiler_err(_24027_token,_24041_fmt,_24054_args)}));
}



inline void _1a9e07434_Parser::_method_push_suggestion(jule::Str _24534_fmt,jule::Slice<jule::Any> _24547_args) {
	{
		_1a9e07434_push_suggestion((&((*this)._field_errors[static_cast<jule::Int>((*this)._field_errors.len() - 1LL)])),_24534_fmt,_24547_args);
	}
}



inline jule::Ref<_1b61ca014_Expr> _1a9e07434_Parser::_method_build_expr(jule::Slice<_1b61ec5ec_Token>& _24935_tokens) {
	jule::Ref<_1a9ba6854_ExprBuilder> _25017_ep = jule::new_struct<_1a9ba6854_ExprBuilder>(new( std::nothrow ) _1a9ba6854_ExprBuilder(this->self));
	jule::Ref<_1b61ca014_Expr> _25117_expr = _25017_ep->_method_build_from_tokens(_24935_tokens);
	return _25117_expr;
}



inline jule::Ref<_1b61ca014_Directive> _1a9e07434_Parser::_method_get_directive(jule::Ref<_1b61ca014_Comment> _25532_c) {
	if (_25532_c->_field_text.len() <= jule::Str("jule:", 5).len()) {
		return jule::new_ref<_1b61ca014_Directive>();
	}
	jule::Ref<_1b61ca014_Directive> _26017_d = jule::new_struct<_1b61ca014_Directive>(new( std::nothrow ) _1b61ca014_Directive(_25532_c->_field_token,jule::Str(),jule::Slice<jule::Str>()));
	jule::Str _26413_pragma = _25532_c->_field_token._field_kind.slice(static_cast<jule::Int>(jule::Str("jule:", 5).len()));
	jule::Slice<jule::Str> _26517_parts = _26413_pragma.split(jule::Str(" ", 1),-1LL);
	_26017_d->_field_tag=_26517_parts[0LL];
	_26017_d->_field_args=_26517_parts.slice(1LL);
	jule::Bool _27117_ok = false;
	{
		auto _range_expr = _1ce0019d2_DIRECTIVES;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _1a9e07434_kind = *_range_begin;
			_iter_begin_4435143152:;
			{
				if (_26017_d->_field_tag == _1a9e07434_kind) {
					_27117_ok=true;
					goto _iter_end_4435143152;
				}
			}
			_iter_next_4435143152:;
			++_range_begin;
			if (_range_begin != _range_end) { _1a9e07434_kind = *_range_begin; goto _iter_begin_4435143152; }
			_iter_end_4435143152:;
		}
	}
	if ((!(_27117_ok))) {
		return jule::new_ref<_1b61ca014_Directive>();
	}
	return _26017_d;
}



inline void _1a9e07434_Parser::_method_push_directive(jule::Ref<_1b61ca014_Comment>& _28538_c) {
	jule::Ref<_1b61ca014_Directive> _28617_d = (*this)._method_get_directive(_28538_c);
	if ((!(jule::real(_28617_d)))) {
		return;
	}
	{
		auto _range_expr = (*this)._field_directives;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b61ca014_Directive> _1a9e07434_pd = *_range_begin;
			_iter_begin_4435150144:;
			{
				if (_28617_d->_field_tag == _1a9e07434_pd->_field_tag) {
					return;
				}
			}
			_iter_next_4435150144:;
			++_range_begin;
			if (_range_begin != _range_end) { _1a9e07434_pd = *_range_begin; goto _iter_begin_4435150144; }
			_iter_end_4435150144:;
		}
	}
	(*this)._field_directives=jule::append((*this)._field_directives,jule::Slice<jule::Ref<_1b61ca014_Directive>>({_28617_d}));
}



inline void _1a9e07434_Parser::_method_process_comment(jule::Ref<_1b61ca014_Comment>& _30139_c) {
	if (_30139_c->_method_is_directive()) {
		(*this)._method_push_directive(_30139_c);
		return;
	}
	if ((!(jule::real((*this)._field_comment_group)))) {
		(*this)._field_comment_group=jule::new_struct<_1b61ca014_CommentGroup>(new( std::nothrow ) _1b61ca014_CommentGroup());
	}
	(*this)._field_comment_group->_field_comments=jule::append((*this)._field_comment_group->_field_comments,jule::Slice<jule::Ref<_1b61ca014_Comment>>({_30139_c}));
}



inline jule::Ref<_1b61ca014_ScopeTree> _1a9e07434_Parser::_method_build_scope(jule::Slice<_1b61ec5ec_Token>& _31236_tokens) {
	jule::Ref<_1b61ca014_ScopeTree> _31317_s = _1a9b97a76_new_scope();
	_1a9b97a76_ScopeParser _31417_sp = _1a9b97a76_ScopeParser(this->self,jule::Ref<_1b61ca014_ScopeTree>(),jule::Slice<jule::Ref<_1a9b97a76_Stmt>>(),jule::Int());
	_31417_sp._method_build(_31236_tokens,_31317_s);
	return _31317_s;
}



inline std::tuple<jule::Ref<_1b61ca014_TypeDecl>,jule::Bool> _1a9e07434_Parser::_method___build_type(jule::Slice<_1b61ec5ec_Token>& _32144_tokens,jule::Int* _32213_i,jule::Bool _32222_err) {
	_1b5d9c0c1_TypeBuilder _32317_tb = _1b5d9c0c1_TypeBuilder(this->self,_32144_tokens,_32213_i,_32222_err);
	jule::Ref<_1b61ca014_TypeDecl> _32918_decl;
	jule::Bool _32924_ok;
	std::tie(_32918_decl,_32924_ok) = _32317_tb._method_build();
	return std::make_tuple(_32918_decl,_32924_ok);
}



inline std::tuple<jule::Ref<_1b61ca014_TypeDecl>,jule::Bool> _1a9e07434_Parser::_method_build_type(jule::Slice<_1b61ec5ec_Token>& _33442_tokens,jule::Int* _33513_i,jule::Bool _33522_err) {
	_1b61ec5ec_Token _33613_token = _33442_tokens[static_cast<jule::Int>((*(_33513_i)))];
	jule::Ref<_1b61ca014_TypeDecl> _33718_t;
	jule::Bool _33721_ok;
	std::tie(_33718_t,_33721_ok) = this->self->_method___build_type(_33442_tokens,_33513_i,_33522_err);
	if (_33522_err && (!(_33721_ok))) {
		this->self->_method_push_err(_33613_token,jule::Str("invalid data-type", 17),jule::Slice<jule::Any>({}));
	}
	return std::make_tuple(_33718_t,_33721_ok);
}



inline jule::Ref<_1b61ca014_TypeAliasDecl> _1a9e07434_Parser::_method_build_type_alias_decl(jule::Slice<_1b61ec5ec_Token>& _34446_tokens) {
	jule::Int _34517_i = 1LL;
	if (_34517_i >= _34446_tokens.len()) {
		this->self->_method_push_err(_34446_tokens[static_cast<jule::Int>(_34517_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b61ca014_TypeAliasDecl>();
	}
	jule::Ref<_1b61ca014_TypeAliasDecl> _35017_tad = jule::new_struct<_1b61ca014_TypeAliasDecl>(new( std::nothrow ) _1b61ca014_TypeAliasDecl(jule::Ref<_1b61ca014_ScopeTree>(),jule::Bool(),jule::Bool(),_34446_tokens[1LL],_34446_tokens[1LL]._field_kind,jule::Ref<_1b61ca014_TypeDecl>(),jule::Ref<_1b61ca014_CommentGroup>()));
	_1b61ec5ec_Token _35417_token = _34446_tokens[static_cast<jule::Int>(_34517_i)];
	if (_35417_token._field_id != 2LLU) {
		this->self->_method_push_err(_35417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
	}
	(_34517_i)++;
	if (_34517_i >= _34446_tokens.len()) {
		this->self->_method_push_err(_34446_tokens[static_cast<jule::Int>(_34517_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return _35017_tad;
	}
	_35417_token=_34446_tokens[static_cast<jule::Int>(_34517_i)];
	if (_35417_token._field_id != 11LLU) {
		this->self->_method_push_err(_34446_tokens[static_cast<jule::Int>(_34517_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("expected colon \":\"", 18),jule::Slice<jule::Any>({}));
		return _35017_tad;
	}
	(_34517_i)++;
	if (_34517_i >= _34446_tokens.len()) {
		this->self->_method_push_err(_34446_tokens[static_cast<jule::Int>(_34517_i - 1LL)],jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
		return _35017_tad;
	}
	jule::Ref<_1b61ca014_TypeDecl> _37518_t;
	jule::Bool _37521_ok;
	std::tie(_37518_t,_37521_ok) = this->self->_method_build_type(_34446_tokens,(&(_34517_i)),true);
	_35017_tad->_field_kind=_37518_t;
	if (_37521_ok && (_34517_i < _34446_tokens.len())) {
		this->self->_method_push_err(_34446_tokens[static_cast<jule::Int>(_34517_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	return _35017_tad;
}



inline void _1a9e07434_Parser::_method_build_var_type_and_expr(jule::Ref<_1b61ca014_VarDecl>& _38348_v,jule::Slice<_1b61ec5ec_Token>& _38366_tokens) {
	jule::Int _38417_i = 0LL;
	_1b61ec5ec_Token _38517_tok = _38366_tokens[static_cast<jule::Int>(_38417_i)];
	if (_38517_tok._field_id == 11LLU) {
		(_38417_i)++;
		if ((_38417_i >= _38366_tokens.len()) || ((_38366_tokens[static_cast<jule::Int>(_38417_i)]._field_id == 7LLU) && (_38366_tokens[static_cast<jule::Int>(_38417_i)]._field_kind == jule::Str("=", 1)))) {
			this->self->_method_push_err(_38517_tok,jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
			return;
		}
		jule::Ref<_1b61ca014_TypeDecl> _39322_t;
		jule::Bool _39325_ok;
		std::tie(_39322_t,_39325_ok) = this->self->_method_build_type(_38366_tokens,(&(_38417_i)),true);
		if (_39325_ok) {
			_38348_v->_field_kind=_39322_t;
			if (_38417_i >= _38366_tokens.len()) {
				return;
			}
			_38517_tok=_38366_tokens[static_cast<jule::Int>(_38417_i)];
		}
	}
	if (_38517_tok._field_id == 7LLU) {
		if (_38517_tok._field_kind != jule::Str("=", 1)) {
			this->self->_method_push_err(_38517_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return;
		}
		jule::Slice<_1b61ec5ec_Token> _40821_expr_tokens = _38366_tokens.slice(static_cast<jule::Int>(_38417_i + 1LL));
		if (_40821_expr_tokens.len() == 0LL) {
			this->self->_method_push_err(_38517_tok,jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
			return;
		}
		_38348_v->_field_expr=this->self->_method_build_expr(_40821_expr_tokens);
	} else {
		this->self->_method_push_err(_38517_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
}



inline void _1a9e07434_Parser::_method_build_var_common(jule::Ref<_1b61ca014_VarDecl>& _41941_v,jule::Slice<_1b61ec5ec_Token> _41958_tokens) {
	_41941_v->_field_token=_41958_tokens[0LL];
	if (_41941_v->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_41941_v->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
		return;
	}
	_41941_v->_field_ident=_41941_v->_field_token._field_kind;
	jule::drop(_41941_v->_field_kind);
	if (_41958_tokens.len() > 1LL) {
		_41958_tokens=_41958_tokens.slice(1LL);
		this->self->_method_build_var_type_and_expr(_41941_v,_41958_tokens);
	}
}



inline void _1a9e07434_Parser::_method_build_var_begin(jule::Ref<_1b61ca014_VarDecl>& _43439_v,jule::Ref<jule::Int> _43456_i,jule::Slice<_1b61ec5ec_Token>& _43466_tokens) {
	_1b61ec5ec_Token _43513_tok = _43466_tokens[static_cast<jule::Int>(_43456_i)];
	{
		auto _match_expr{ _43513_tok._field_id };
		if (!((38LLU) == _match_expr)) { goto _case_end_4435276032; }
		_case_begin_4435276032:;
		{
			_43439_v->_field_statically=true;
			goto _case_begin_4435276144;
		}
		goto _match_end_4435272912;
		_case_end_4435276032:;
		if (!((34LLU) == _match_expr)) { goto _case_end_4435276144; }
		_case_begin_4435276144:;
		{
			(_43456_i)++;
			if (_43456_i >= _43466_tokens.len()) {
				(*this)._method_push_err(_43513_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			if (_43466_tokens[static_cast<jule::Int>(_43456_i)]._field_id == 36LLU) {
				_43439_v->_field_mutable=true;
				(_43456_i)++;
			}
		}
		goto _match_end_4435272912;
		_case_end_4435276144:;
		if (!((9LLU) == _match_expr)) { goto _case_end_4435276256; }
		_case_begin_4435276256:;
		{
			(_43456_i)++;
			_43439_v->_field_constant=true;
		}
		goto _match_end_4435272912;
		_case_end_4435276256:;
		_case_begin_4435273600:;
		{
			(*this)._method_push_err(_43513_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4435272912;
		_case_end_4435273600:;
		_match_end_4435272912:;
	}
	if (_43456_i >= _43466_tokens.len()) {
		(*this)._method_push_err(_43513_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
}



inline jule::Ref<_1b61ca014_VarDecl> _1a9e07434_Parser::_method_build_var(jule::Slice<_1b61ec5ec_Token> _46833_tokens) {
	jule::Ref<jule::Int> _46917_i = jule::new_ref<jule::Int>(0LL);
	jule::Ref<_1b61ca014_VarDecl> _47017_v = jule::new_struct<_1b61ca014_VarDecl>(new( std::nothrow ) _1b61ca014_VarDecl(jule::Ref<_1b61ca014_ScopeTree>(),_46833_tokens[static_cast<jule::Int>(_46917_i)],jule::Str(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Slice<jule::Ref<_1b61ca014_Directive>>(),jule::Ref<_1b61ca014_CommentGroup>(),jule::Ref<_1b61ca014_TypeDecl>(),jule::Ref<_1b61ca014_Expr>()));
	this->self->_method_build_var_begin(_47017_v,_46917_i,_46833_tokens);
	if (_46917_i >= _46833_tokens.len()) {
		return jule::new_ref<_1b61ca014_VarDecl>();
	}
	_46833_tokens=_46833_tokens.slice(static_cast<jule::Int>(_46917_i));
	if ((_46833_tokens[0LL]._field_id == 7LLU) && (_46833_tokens[0LL]._field_kind == jule::Str("&", 1))) {
		_47017_v->_field_reference=true;
		if (_46833_tokens.len() == 1LL) {
			return jule::new_ref<_1b61ca014_VarDecl>();
		}
		_46833_tokens=_46833_tokens.slice(1LL);
	}
	this->self->_method_build_var_common(_47017_v,_46833_tokens);
	return _47017_v;
}



inline jule::Ref<_1b61ca014_GenericDecl> _1a9e07434_Parser::_method_build_generic(jule::Slice<_1b61ec5ec_Token>& _49037_tokens) {
	if (_49037_tokens.len() > 1LL) {
		(*this)._method_push_err(_49037_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1b61ca014_GenericDecl> _49417_g = jule::new_struct<_1b61ca014_GenericDecl>(new( std::nothrow ) _1b61ca014_GenericDecl(_49037_tokens[0LL],jule::Str()));
	if (_49417_g->_field_token._field_id != 2LLU) {
		(*this)._method_push_err(_49417_g->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
	}
	_49417_g->_field_ident=_49417_g->_field_token._field_kind;
	return _49417_g;
}



inline jule::Slice<jule::Ref<_1b61ca014_GenericDecl>> _1a9e07434_Parser::_method_build_generics(jule::Slice<_1b61ec5ec_Token>& _50538_tokens,_1b61ec5ec_Token& _50556_error_token) {
	if (_50538_tokens.len() == 0LL) {
		(*this)._method_push_err(_50556_error_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	jule::Slice<jule::Slice<_1b61ec5ec_Token>> _51118_parts;
	jule::Slice<_1cdeeb191_Log> _51125_errors;
	std::tie(_51118_parts,_51125_errors) = _1a9e07434_parts(_50538_tokens,8LLU,true);
	(*this)._field_errors=jule::append((*this)._field_errors,_51125_errors);
	jule::Slice<jule::Ref<_1b61ca014_GenericDecl>> _51417_generics = jule::Slice<jule::Ref<_1b61ca014_GenericDecl>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_51118_parts.len())));
	{
		auto _range_expr = _51118_parts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1a9e07434_i = 0;
			jule::Slice<_1b61ec5ec_Token> _1a9e07434_part = *_range_begin;
			_iter_begin_4435320480:;
			{
				if (_51118_parts.len() > 0LL) {
					_51417_generics[static_cast<jule::Int>(_1a9e07434_i)]=(*this)._method_build_generic(_1a9e07434_part);
				}
			}
			_iter_next_4435320480:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1a9e07434_i; _1a9e07434_part = *_range_begin; goto _iter_begin_4435320480; }
			_iter_end_4435320480:;
		}
	}
	return _51417_generics;
}



inline jule::Ref<_1b61ca014_ParamDecl> _1a9e07434_Parser::_method_build_self_param(jule::Slice<_1b61ec5ec_Token> _52439_tokens) {
	if (_52439_tokens.len() == 0LL) {
		return jule::new_ref<_1b61ca014_ParamDecl>();
	}
	jule::Ref<_1b61ca014_ParamDecl> _52917_param = jule::new_struct<_1b61ca014_ParamDecl>(new( std::nothrow ) _1b61ca014_ParamDecl());
	jule::Int _53217_i = 0LL;
	if (_52439_tokens[static_cast<jule::Int>(_53217_i)]._field_id == 36LLU) {
		_52917_param->_field_mutable=true;
		(_53217_i)++;
		if (_53217_i >= _52439_tokens.len()) {
			(*this)._method_push_err(_52439_tokens[static_cast<jule::Int>(_53217_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1b61ca014_ParamDecl>();
		}
	}
	if (_52439_tokens[static_cast<jule::Int>(_53217_i)]._field_kind == jule::Str("&", 1)) {
		_52917_param->_field_ident=jule::Str("&", 1);
		(_53217_i)++;
		if (_53217_i >= _52439_tokens.len()) {
			(*this)._method_push_err(_52439_tokens[static_cast<jule::Int>(_53217_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1b61ca014_ParamDecl>();
		}
	}
	if (_52439_tokens[static_cast<jule::Int>(_53217_i)]._field_id == 28LLU) {
		_52917_param->_field_ident+=jule::Str("self", 4);
		_52917_param->_field_token=_52439_tokens[static_cast<jule::Int>(_53217_i)];
		(_53217_i)++;
		if (_53217_i < _52439_tokens.len()) {
			(*this)._method_push_err(_52439_tokens[static_cast<jule::Int>(_53217_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		}
	}
	return _52917_param;
}



inline void _1a9e07434_Parser::_method_param_type_begin(jule::Ref<_1b61ca014_ParamDecl>& _56340_param,jule::Int& _56364_i,jule::Slice<_1b61ec5ec_Token>& _56373_tokens) {
	_iter_begin_4435355456:;
	if (!(_56364_i < _56373_tokens.len())) { goto _iter_end_4435355456; }
	{
		_1b61ec5ec_Token _56517_token = _56373_tokens[static_cast<jule::Int>(_56364_i)];
		if (_56517_token._field_id != 7LLU) {
			return;
		} else if (_56517_token._field_kind != jule::Str("...", 3)) {
			return;
		}
		if (_56340_param->_field_variadic) {
			(*this)._method_push_err(_56517_token,jule::Str("define is already variadic", 26),jule::Slice<jule::Any>({}));
			goto _iter_next_4435355456;
		}
		_56340_param->_field_variadic=true;
	}
	_iter_next_4435355456:;
	(_56364_i)++;
	goto _iter_begin_4435355456;
	_iter_end_4435355456:;
}



inline void _1a9e07434_Parser::_method_build_param_type(jule::Ref<_1b61ca014_ParamDecl>& _58041_param,jule::Slice<_1b61ec5ec_Token>& _58065_tokens) {
	jule::Int _58117_i = 0LL;
	this->self->_method_param_type_begin(_58041_param,_58117_i,_58065_tokens);
	if (_58117_i >= _58065_tokens.len()) {
		return;
	}
	std::tie(_58041_param->_field_kind,std::ignore) = this->self->_method_build_type(_58065_tokens,(&(_58117_i)),true);
	if (_58117_i < _58065_tokens.len()) {
		this->self->_method_push_err(_58065_tokens[static_cast<jule::Int>(_58117_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
}



inline void _1a9e07434_Parser::_method_param_body_id(jule::Ref<_1b61ca014_ParamDecl> _59332_param,_1b61ec5ec_Token _59351_token) {
	if (_1b61ec5ec_is_ignore_ident(_59351_token._field_kind)) {
		_59332_param->_field_ident=jule::Str("<anonymous>", 11);
		return;
	}
	_59332_param->_field_ident=_59351_token._field_kind;
}



inline void _1a9e07434_Parser::_method_build_param_body(jule::Ref<_1b61ca014_ParamDecl>& _60141_param,jule::Ref<jule::Int> _60164_i,jule::Slice<_1b61ec5ec_Token> _60177_tokens) {
	this->self->_method_param_body_id(_60141_param,_60177_tokens[static_cast<jule::Int>(_60164_i)]);
	_1b61ec5ec_Token _60317_tok = _60177_tokens[static_cast<jule::Int>(_60164_i)];
	if ((_60164_i + 1LL) >= _60177_tokens.len()) {
		return;
	} else if (((_60177_tokens.len() - _60164_i) - 1LL) < 2LL) {
		this->self->_method_push_err(_60317_tok,jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
		return;
	}
	_60317_tok=_60177_tokens[static_cast<jule::Int>(_60164_i + 1LL)];
	if (_60317_tok._field_id != 11LLU) {
		this->self->_method_build_param_type(_60141_param,_60177_tokens);
		return;
	}
	_60177_tokens=_60177_tokens.slice(static_cast<jule::Int>(_60164_i + 2LL));
	this->self->_method_build_param_type(_60141_param,_60177_tokens);
}



inline jule::Ref<_1b61ca014_ParamDecl> _1a9e07434_Parser::_method_build_param(jule::Slice<_1b61ec5ec_Token> _62235_tokens) {
	jule::Ref<_1b61ca014_ParamDecl> _62317_param = jule::new_struct<_1b61ca014_ParamDecl>(new( std::nothrow ) _1b61ca014_ParamDecl(_62235_tokens[0LL],jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1b61ca014_TypeDecl>(),jule::Str()));
	if (_62317_param->_field_token._field_id == 36LLU) {
		_62317_param->_field_mutable=true;
		if (_62235_tokens.len() == 1LL) {
			this->self->_method_push_err(_62235_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1b61ca014_ParamDecl>();
		}
		_62235_tokens=_62235_tokens.slice(1LL);
		_62317_param->_field_token=_62235_tokens[0LL];
	}
	if (_62235_tokens.len() >= 3LL) {
		if ((_62317_param->_field_token._field_id == 7LLU) && (_62317_param->_field_token._field_kind == jule::Str("&", 1))) {
			if (_62235_tokens.len() == 1LL) {
				this->self->_method_push_err(_62235_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return jule::new_ref<_1b61ca014_ParamDecl>();
			}
			if ((_62235_tokens[1LL]._field_id == 2LLU) && (_62235_tokens[2LL]._field_id == 11LLU)) {
				_62317_param->_field_reference=true;
				_62235_tokens=_62235_tokens.slice(1LL);
				_62317_param->_field_token=_62235_tokens[0LL];
			}
		}
	}
	if (_62317_param->_field_token._field_id != 2LLU) {
		_62317_param->_field_ident=jule::Str("<anonymous>", 11);
		this->self->_method_build_param_type(_62317_param,_62235_tokens);
	} else {
		jule::Ref<jule::Int> _65921_i = jule::new_ref<jule::Int>(0LL);
		this->self->_method_build_param_body(_62317_param,_65921_i,_62235_tokens);
	}
	return _62317_param;
}



inline void _1a9e07434_Parser::_method_check_params(jule::Slice<jule::Ref<_1b61ca014_ParamDecl>>& _66636_params) {
	{
		auto _range_expr = _66636_params;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b61ca014_ParamDecl> _1a9e07434_param = *_range_begin;
			_iter_begin_4435425632:;
			{
				if (_1a9e07434_param->_method_is_self() || jule::real(_1a9e07434_param->_field_kind)) {
					goto _iter_next_4435425632;
				}
				if (_1a9e07434_param->_field_token._field_id == 0LLU) {
					(*this)._method_push_err(_1a9e07434_param->_field_token,jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
				} else {
					_1a9e07434_param->_field_kind=jule::new_struct<_1b61ca014_TypeDecl>(new( std::nothrow ) _1b61ca014_TypeDecl(_1a9e07434_param->_field_token,jule::Any(jule::new_struct<_1b61ca014_IdentTypeDecl>(new( std::nothrow ) _1b61ca014_IdentTypeDecl(_1a9e07434_param->_field_token,_1a9e07434_param->_field_token._field_kind,jule::Bool(),jule::Slice<jule::Ref<_1b61ca014_TypeDecl>>())))));
					_1a9e07434_param->_field_ident=jule::Str("<anonymous>", 11);
					_1a9e07434_param->_field_token=_1b61ec5ec_Token();
				}
			}
			_iter_next_4435425632:;
			++_range_begin;
			if (_range_begin != _range_end) { _1a9e07434_param = *_range_begin; goto _iter_begin_4435425632; }
			_iter_end_4435425632:;
		}
	}
}



inline jule::Slice<jule::Ref<_1b61ca014_ParamDecl>> _1a9e07434_Parser::_method_build_params(jule::Slice<_1b61ec5ec_Token>& _68737_tokens,jule::Bool _68754_method) {
	jule::Slice<jule::Slice<_1b61ec5ec_Token>> _68818_parts;
	jule::Slice<_1cdeeb191_Log> _68825_errs;
	std::tie(_68818_parts,_68825_errs) = _1a9e07434_parts(_68737_tokens,8LLU,true);
	this->self->_field_errors=jule::append(this->self->_field_errors,_68825_errs);
	if (_68818_parts.len() == 0LL) {
		return nullptr;
	}
	jule::Slice<jule::Ref<_1b61ca014_ParamDecl>> _69417_params = nullptr;
	if (_68754_method && (_68818_parts.len() > 0LL)) {
		jule::Ref<_1b61ca014_ParamDecl> _69621_param = this->self->_method_build_self_param(_68818_parts[0LL]);
		if (jule::real(_69621_param) && _69621_param->_method_is_self()) {
			_69417_params=jule::append(_69417_params,jule::Slice<jule::Ref<_1b61ca014_ParamDecl>>({_69621_param}));
			_68818_parts=_68818_parts.slice(1LL);
		}
	}
	{
		auto _range_expr = _68818_parts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Slice<_1b61ec5ec_Token> _1a9e07434_part = *_range_begin;
			_iter_begin_4435443920:;
			{
				jule::Ref<_1b61ca014_ParamDecl> _70421_param = this->self->_method_build_param(_1a9e07434_part);
				if (jule::real(_70421_param)) {
					_69417_params=jule::append(_69417_params,jule::Slice<jule::Ref<_1b61ca014_ParamDecl>>({_70421_param}));
				}
			}
			_iter_next_4435443920:;
			++_range_begin;
			if (_range_begin != _range_end) { _1a9e07434_part = *_range_begin; goto _iter_begin_4435443920; }
			_iter_end_4435443920:;
		}
	}
	this->self->_method_check_params(_69417_params);
	return _69417_params;
}



inline std::tuple<jule::Ref<_1b61ca014_RetTypeDecl>,jule::Bool> _1a9e07434_Parser::_method_build_multi_ret_type(jule::Slice<_1b61ec5ec_Token>& _71445_tokens,jule::Int& _71467_i) {
	jule::Ref<_1b61ca014_RetTypeDecl> _71477_t = jule::Ref<_1b61ca014_RetTypeDecl>();
	jule::Bool _71494_ok = jule::Bool();
	_71477_t=jule::new_struct<_1b61ca014_RetTypeDecl>(new( std::nothrow ) _1b61ca014_RetTypeDecl());
	(_71467_i)++;
	if (_71467_i >= _71445_tokens.len()) {
		(_71467_i)--;
		std::tie(_71477_t->_field_kind,_71494_ok) = this->self->_method_build_type(_71445_tokens,(&(_71467_i)),false);
		return std::make_tuple(_71477_t,_71494_ok);
	}
	(_71467_i)--;
	jule::Slice<_1b61ec5ec_Token> _72417_range_tokens = _1a9e07434_range(_71467_i,jule::Str("(", 1),jule::Str(")", 1),_71445_tokens);
	jule::Slice<jule::Slice<_1b61ec5ec_Token>> _72618_parts;
	jule::Slice<_1cdeeb191_Log> _72625_errs;
	std::tie(_72618_parts,_72625_errs) = _1a9e07434_parts(_72417_range_tokens,8LLU,true);
	this->self->_field_errors=jule::append(this->self->_field_errors,_72625_errs);
	if (_72618_parts.len() == 0LL) {
		return std::make_tuple(_71477_t,_71494_ok);
	}
	jule::Slice<jule::Ref<_1b61ca014_TypeDecl>> _73217_types = jule::Slice<jule::Ref<_1b61ca014_TypeDecl>>::alloc(0LL,static_cast<jule::Int>(static_cast<jule::I64>(_72618_parts.len())));
	_71477_t->_field_idents=jule::Slice<_1b61ec5ec_Token>::alloc(0LL,static_cast<jule::Int>(static_cast<jule::I64>(_72618_parts.len())));
	{
		auto _range_expr = _72618_parts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Slice<_1b61ec5ec_Token> _1a9e07434_part = *_range_begin;
			_iter_begin_4435470000:;
			{
				_1b61ec5ec_Token _73521_token = _1a9e07434_part[0LL];
				jule::Int _73621_offset = 0LL;
				if (_1a9e07434_part.len() > 1LL) {
					_73521_token=_1a9e07434_part[1LL];
					if (_73521_token._field_id == 11LLU) {
						_73621_offset=2LL;
						if (_1a9e07434_part.len() < 3LL) {
							this->self->_method_push_err(_73521_token,jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
							goto _iter_next_4435470000;
						}
					}
				}
				_73521_token=_1a9e07434_part[0LL];
				if (_73621_offset == 2LL) {
					if (_73521_token._field_id != 2LLU) {
					}
					_71477_t->_field_idents=jule::append(_71477_t->_field_idents,jule::Slice<_1b61ec5ec_Token>({_73521_token}));
				} else {
					_73521_token._field_kind=jule::Str("_", 1);
					_71477_t->_field_idents=jule::append(_71477_t->_field_idents,jule::Slice<_1b61ec5ec_Token>({_73521_token}));
				}
				jule::Ref<_1b61ca014_TypeDecl> _76122_t;
				std::tie(_76122_t,std::ignore) = this->self->_method_build_type(_1a9e07434_part,(&(_73621_offset)),true);
				if (_73621_offset < _1a9e07434_part.len()) {
					this->self->_method_push_err(_1a9e07434_part[static_cast<jule::Int>(_73621_offset)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				}
				_73217_types=jule::append(_73217_types,jule::Slice<jule::Ref<_1b61ca014_TypeDecl>>({_76122_t}));
			}
			_iter_next_4435470000:;
			++_range_begin;
			if (_range_begin != _range_end) { _1a9e07434_part = *_range_begin; goto _iter_begin_4435470000; }
			_iter_end_4435470000:;
		}
	}
	if (_73217_types.len() > 1LL) {
		_71477_t->_field_kind=jule::new_struct<_1b61ca014_TypeDecl>(new( std::nothrow ) _1b61ca014_TypeDecl(_71445_tokens[0LL],jule::Any(jule::new_struct<_1b61ca014_TupleTypeDecl>(new( std::nothrow ) _1b61ca014_TupleTypeDecl(_73217_types)))));
	} else {
		_71477_t->_field_kind=_73217_types[0LL];
	}
	_71494_ok=true;
	return std::make_tuple(_71477_t,_71494_ok);
}



inline std::tuple<jule::Ref<_1b61ca014_RetTypeDecl>,jule::Bool> _1a9e07434_Parser::_method_build_ret_type(jule::Slice<_1b61ec5ec_Token>& _78439_tokens,jule::Int& _78461_i) {
	jule::Ref<_1b61ca014_RetTypeDecl> _78471_t = jule::Ref<_1b61ca014_RetTypeDecl>();
	jule::Bool _78488_ok = jule::Bool();
	_78471_t=jule::new_struct<_1b61ca014_RetTypeDecl>(new( std::nothrow ) _1b61ca014_RetTypeDecl());
	if (_78461_i >= _78439_tokens.len()) {
		return std::make_tuple(_78471_t,_78488_ok);
	}
	_1b61ec5ec_Token _79017_token = _78439_tokens[static_cast<jule::Int>(_78461_i)];
	{
		auto _match_expr{ _79017_token._field_id };
		if (!((3LLU) == _match_expr)) { goto _case_end_4435522752; }
		_case_begin_4435522752:;
		{
			if (_79017_token._field_kind == jule::Str("{", 1)) {
				return std::make_tuple(_78471_t,_78488_ok);
			}
		}
		goto _match_end_4435521040;
		_case_end_4435522752:;
		if (!((7LLU) == _match_expr)) { goto _case_end_4435522864; }
		_case_begin_4435522864:;
		{
			if (_79017_token._field_kind == jule::Str("=", 1)) {
				return std::make_tuple(_78471_t,_78488_ok);
			}
		}
		goto _match_end_4435521040;
		_case_end_4435522864:;
		if (!((11LLU) == _match_expr)) { goto _case_end_4435522976; }
		_case_begin_4435522976:;
		{
			if ((_78461_i + 1LL) >= _78439_tokens.len()) {
				this->self->_method_push_err(_79017_token,jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
				return std::make_tuple(_78471_t,_78488_ok);
			}
			(_78461_i)++;
			_79017_token=_78439_tokens[static_cast<jule::Int>(_78461_i)];
			if (_79017_token._field_id == 3LLU) {
				{
					auto _match_expr{ _79017_token._field_kind };
					if (!((jule::Str("(", 1)) == _match_expr)) { goto _case_end_4435531856; }
					_case_begin_4435531856:;
					{
						jule::Ref<_1b61ca014_RetTypeDecl> _81330_decl;
						jule::Bool _81336_ok;
						std::tie(_81330_decl,_81336_ok) = this->self->_method_build_multi_ret_type(_78439_tokens,_78461_i);
						_78471_t = _81330_decl;
						_78488_ok = _81336_ok;
						return std::make_tuple(_78471_t,_78488_ok);
					}
					goto _match_end_4435530544;
					_case_end_4435531856:;
					if (!((jule::Str("{", 1)) == _match_expr)) { goto _case_end_4435531968; }
					_case_begin_4435531968:;
					{
						this->self->_method_push_err(_79017_token,jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
						return std::make_tuple(_78471_t,_78488_ok);
					}
					goto _match_end_4435530544;
					_case_end_4435531968:;
					_match_end_4435530544:;
				}
			}
			std::tie(_78471_t->_field_kind,_78488_ok) = this->self->_method_build_type(_78439_tokens,(&(_78461_i)),true);
			return std::make_tuple(_78471_t,_78488_ok);
		}
		goto _match_end_4435521040;
		_case_end_4435522976:;
		_match_end_4435521040:;
	}
	(_78461_i)++;
	this->self->_method_push_err(_79017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	return std::make_tuple(_78471_t,_78488_ok);
}



inline jule::Ref<_1b61ca014_FnDecl> _1a9e07434_Parser::_method_build_fn_prototype(jule::Slice<_1b61ec5ec_Token>& _83243_tokens,jule::Int& _83265_i,jule::Bool _83273_method) {
	jule::Ref<_1b61ca014_FnDecl> _83317_f = jule::new_struct<_1b61ca014_FnDecl>(new( std::nothrow ) _1b61ca014_FnDecl(_83243_tokens[static_cast<jule::Int>(_83265_i)],jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Str(),jule::Slice<jule::Ref<_1b61ca014_Directive>>(),jule::Ref<_1b61ca014_CommentGroup>(),jule::Ref<_1b61ca014_ScopeTree>(),jule::Slice<jule::Ref<_1b61ca014_GenericDecl>>(),jule::Ref<_1b61ca014_RetTypeDecl>(),jule::Slice<jule::Ref<_1b61ca014_ParamDecl>>()));
	if (_83317_f->_field_token._field_id == 38LLU) {
		_83317_f->_field_statically=true;
		(_83265_i)++;
		if (_83265_i >= _83243_tokens.len()) {
			this->self->_method_push_err(_83317_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1b61ca014_FnDecl>();
		}
		_83317_f->_field_token=_83243_tokens[static_cast<jule::Int>(_83265_i)];
	}
	if (_83317_f->_field_token._field_id == 35LLU) {
		_83317_f->_field_unsafety=true;
		(_83265_i)++;
		if (_83265_i >= _83243_tokens.len()) {
			this->self->_method_push_err(_83317_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1b61ca014_FnDecl>();
		}
		_83317_f->_field_token=_83243_tokens[static_cast<jule::Int>(_83265_i)];
	}
	(_83265_i)++;
	if (_83265_i >= _83243_tokens.len()) {
		this->self->_method_push_err(_83317_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b61ca014_FnDecl>();
	}
	_1b61ec5ec_Token _86613_tok = _83243_tokens[static_cast<jule::Int>(_83265_i)];
	if (_86613_tok._field_id == 2LLU) {
		(_83265_i)++;
		if (_83265_i >= _83243_tokens.len()) {
			this->self->_method_push_err(_83317_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1b61ca014_FnDecl>();
		}
		_83317_f->_field_ident=_86613_tok._field_kind;
	} else {
		_83317_f->_field_ident=jule::Str("<anonymous>", 11);
	}
	_1b61ec5ec_Token _87813_error_token = _83243_tokens[static_cast<jule::Int>(_83265_i)];
	jule::Slice<_1b61ec5ec_Token> _87917_generics_tokens = _1a9e07434_range(_83265_i,jule::Str("[", 1),jule::Str("]", 1),_83243_tokens);
	if (_87917_generics_tokens != nullptr) {
		_83317_f->_field_generics=this->self->_method_build_generics(_87917_generics_tokens,_87813_error_token);
	}
	if (_83243_tokens[static_cast<jule::Int>(_83265_i)]._field_kind != jule::Str("(", 1)) {
		this->self->_method_push_err(_83243_tokens[static_cast<jule::Int>(_83265_i)],jule::Str("missing function parentheses", 28),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b61ca014_FnDecl>();
	}
	jule::Slice<_1b61ec5ec_Token> _88917_params_toks = _1a9e07434_range(_83265_i,jule::Str("(", 1),jule::Str(")", 1),_83243_tokens);
	if (_88917_params_toks.len() > 0LL) {
		_83317_f->_field_params=this->self->_method_build_params(_88917_params_toks,_83273_method);
	}
	std::tie(_83317_f->_field_result,std::ignore) = this->self->_method_build_ret_type(_83243_tokens,_83265_i);
	return _83317_f;
}



inline jule::Ref<_1b61ca014_FnDecl> _1a9e07434_Parser::_method_build_fn(jule::Slice<_1b61ec5ec_Token>& _90033_tokens,jule::Bool _90050_method,jule::Bool _90064_prototype) {
	jule::Int _90117_i = 0LL;
	jule::Ref<_1b61ca014_FnDecl> _90217_f = this->self->_method_build_fn_prototype(_90033_tokens,_90117_i,_90050_method);
	if (_90064_prototype) {
		if (_90117_i < _90033_tokens.len()) {
			this->self->_method_push_err(_90033_tokens[static_cast<jule::Int>(_90117_i + 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		}
		return _90217_f;
	} else if ((!(jule::real(_90217_f)))) {
		return _90217_f;
	}
	if (_90117_i >= _90033_tokens.len()) {
		this->self->_method_stop();
		this->self->_method_push_err(_90217_f->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b61ca014_FnDecl>();
	}
	jule::Slice<_1b61ec5ec_Token> _91817_block_tokens = _1a9e07434_range(_90117_i,jule::Str("{", 1),jule::Str("}", 1),_90033_tokens);
	if (_91817_block_tokens != nullptr) {
		_90217_f->_field_scope=this->self->_method_build_scope(_91817_block_tokens);
		_90217_f->_field_scope->_field_unsafety=_90217_f->_field_unsafety;
		if (_90117_i < _90033_tokens.len()) {
			this->self->_method_push_err(_90033_tokens[static_cast<jule::Int>(_90117_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		}
	} else {
		this->self->_method_stop();
		this->self->_method_push_err(_90217_f->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b61ca014_FnDecl>();
	}
	return _90217_f;
}



inline jule::Slice<_1b61ec5ec_Token> _1a9e07434_Parser::_method_get_use_decl_selectors(jule::Slice<_1b61ec5ec_Token> _93445_tokens) {
	jule::Int _93517_i = 0LL;
	_93445_tokens=_1a9e07434_range(_93517_i,jule::Str("{", 1),jule::Str("}", 1),_93445_tokens);
	jule::Slice<jule::Slice<_1b61ec5ec_Token>> _93718_parts;
	jule::Slice<_1cdeeb191_Log> _93725_errs;
	std::tie(_93718_parts,_93725_errs) = _1a9e07434_parts(_93445_tokens,8LLU,true);
	if (_93725_errs.len() > 0LL) {
		(*this)._field_errors=jule::append((*this)._field_errors,_93725_errs);
		return nullptr;
	}
	jule::Slice<_1b61ec5ec_Token> _94317_selectors = jule::Slice<_1b61ec5ec_Token>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_93718_parts.len())));
	{
		auto _range_expr = _93718_parts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1a9e07434_j = 0;
			jule::Slice<_1b61ec5ec_Token> _1a9e07434_part = *_range_begin;
			_iter_begin_4435610400:;
			{
				if (_1a9e07434_part.len() > 1LL) {
					(*this)._method_push_err(_1a9e07434_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				}
				_1b61ec5ec_Token _94821_tok = _1a9e07434_part[0LL];
				if ((_94821_tok._field_id != 2LLU) && (_94821_tok._field_id != 28LLU)) {
					(*this)._method_push_err(_94821_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
					(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
					goto _iter_next_4435610400;
				}
				_94317_selectors[static_cast<jule::Int>(_1a9e07434_j)]=_94821_tok;
			}
			_iter_next_4435610400:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1a9e07434_j; _1a9e07434_part = *_range_begin; goto _iter_begin_4435610400; }
			_iter_end_4435610400:;
		}
	}
	return _94317_selectors;
}



inline void _1a9e07434_Parser::_method_build_cpp_use_decl(jule::Ref<_1b61ca014_UseDecl>& _95942_decl,jule::Slice<_1b61ec5ec_Token>& _95959_tokens) {
	if (_95959_tokens.len() > 1LL) {
		(*this)._method_push_err(_95959_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	_1b61ec5ec_Token _96313_token = _95959_tokens[0LL];
	if ((_96313_token._field_id != 6LLU) || ((_96313_token._field_kind[0LL] != '`') && (_96313_token._field_kind[0LL] != '\"'))) {
		(*this)._method_push_err(_96313_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		return;
	}
	_95942_decl->_field_cpp_linked=true;
	_95942_decl->_field_link_path=_96313_token._field_kind.slice(1LL,static_cast<jule::Int>(_96313_token._field_kind.len() - 1LL));
	if ((!(_1cdee4c4a_is_std_header_path(_95942_decl->_field_link_path)))) {
		_95942_decl->_field_link_path=_1cdd187e9_join(jule::Slice<jule::Str>({_96313_token._field_file->_method_dir(),_95942_decl->_field_link_path}));
	}
}



inline void _1a9e07434_Parser::_method_build_std_use_decl(jule::Ref<_1b61ca014_UseDecl>& _97542_decl,jule::Slice<_1b61ec5ec_Token> _97562_tokens) {
	_97542_decl->_field_std=true;
	_1b61ec5ec_Token _97817_token = _97562_tokens[0LL];
	if (_97562_tokens.len() < 3LL) {
		(*this)._method_push_err(_97817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return;
	}
	_97562_tokens=_97562_tokens.slice(2LL);
	_97817_token=_97562_tokens[static_cast<jule::Int>(_97562_tokens.len() - 1LL)];
	{
		auto _match_expr{ _97817_token._field_id };
		if (!((23LLU) == _match_expr)) { goto _case_end_4435654608; }
		_case_begin_4435654608:;
		{
			(*this)._method_push_err(_97817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4435652288;
		_case_end_4435654608:;
		if (!((3LLU) == _match_expr)) { goto _case_end_4435654736; }
		_case_begin_4435654736:;
		{
			if (_97817_token._field_kind != jule::Str("}", 1)) {
				(*this)._method_push_err(_97817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			jule::Slice<_1b61ec5ec_Token> _99621_selectors = nullptr;
			std::tie(_97562_tokens,_99621_selectors) = _1a9e07434_range_last(_97562_tokens);
			_97542_decl->_field_selected=(*this)._method_get_use_decl_selectors(_99621_selectors);
			if (_97562_tokens.len() == 0LL) {
				(*this)._method_push_err(_97817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_97817_token=_97562_tokens[static_cast<jule::Int>(_97562_tokens.len() - 1LL)];
			if (_97817_token._field_id != 23LLU) {
				(*this)._method_push_err(_97817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_97562_tokens=_97562_tokens.slice(0LL,static_cast<jule::Int>(_97562_tokens.len() - 1LL));
			if (_97562_tokens.len() == 0LL) {
				(*this)._method_push_err(_97817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
		}
		goto _match_end_4435652288;
		_case_end_4435654736:;
		if (!((7LLU) == _match_expr)) { goto _case_end_4435654864; }
		_case_begin_4435654864:;
		{
			if (_97817_token._field_kind != jule::Str("*", 1)) {
				(*this)._method_push_err(_97817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_97562_tokens=_97562_tokens.slice(0LL,static_cast<jule::Int>(_97562_tokens.len() - 1LL));
			if (_97562_tokens.len() == 0LL) {
				(*this)._method_push_err(_97817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_97817_token=_97562_tokens[static_cast<jule::Int>(_97562_tokens.len() - 1LL)];
			if (_97817_token._field_id != 23LLU) {
				(*this)._method_push_err(_97817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_97562_tokens=_97562_tokens.slice(0LL,static_cast<jule::Int>(_97562_tokens.len() - 1LL));
			if (_97562_tokens.len() == 0LL) {
				(*this)._method_push_err(_97817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_97542_decl->_field_full=true;
		}
		goto _match_end_4435652288;
		_case_end_4435654864:;
		_match_end_4435652288:;
	}
	_97542_decl->_field_link_path=jule::Str("std::", 5) + _1a9e07434_tokstoa(_97562_tokens);
}



inline void _1a9e07434_Parser::_method_build_ident_use_decl(jule::Ref<_1b61ca014_UseDecl>& _103944_decl,jule::Slice<_1b61ec5ec_Token> _103964_tokens) {
	_103944_decl->_field_std=false;
	_1b61ec5ec_Token _104217_token = _103964_tokens[static_cast<jule::Int>(_103964_tokens.len() - 1LL)];
	{
		auto _match_expr{ _104217_token._field_id };
		if (!((23LLU) == _match_expr)) { goto _case_end_4435691280; }
		_case_begin_4435691280:;
		{
			(*this)._method_push_err(_104217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4435687792;
		_case_end_4435691280:;
		if (!((3LLU) == _match_expr)) { goto _case_end_4435691392; }
		_case_begin_4435691392:;
		{
			if (_104217_token._field_kind != jule::Str("}", 1)) {
				(*this)._method_push_err(_104217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			jule::Slice<_1b61ec5ec_Token> _105421_selectors = nullptr;
			std::tie(_103964_tokens,_105421_selectors) = _1a9e07434_range_last(_103964_tokens);
			_103944_decl->_field_selected=(*this)._method_get_use_decl_selectors(_105421_selectors);
			if (_103964_tokens.len() == 0LL) {
				(*this)._method_push_err(_104217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_104217_token=_103964_tokens[static_cast<jule::Int>(_103964_tokens.len() - 1LL)];
			if (_104217_token._field_id != 23LLU) {
				(*this)._method_push_err(_104217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_103964_tokens=_103964_tokens.slice(0LL,static_cast<jule::Int>(_103964_tokens.len() - 1LL));
			if (_103964_tokens.len() == 0LL) {
				(*this)._method_push_err(_104217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
		}
		goto _match_end_4435687792;
		_case_end_4435691392:;
		if (!((7LLU) == _match_expr)) { goto _case_end_4435691504; }
		_case_begin_4435691504:;
		{
			if (_104217_token._field_kind != jule::Str("*", 1)) {
				(*this)._method_push_err(_104217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_103964_tokens=_103964_tokens.slice(0LL,static_cast<jule::Int>(_103964_tokens.len() - 1LL));
			if (_103964_tokens.len() == 0LL) {
				(*this)._method_push_err(_104217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_104217_token=_103964_tokens[static_cast<jule::Int>(_103964_tokens.len() - 1LL)];
			if (_104217_token._field_id != 23LLU) {
				(*this)._method_push_err(_104217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_103964_tokens=_103964_tokens.slice(0LL,static_cast<jule::Int>(_103964_tokens.len() - 1LL));
			if (_103964_tokens.len() == 0LL) {
				(*this)._method_push_err(_104217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_103944_decl->_field_full=true;
		}
		goto _match_end_4435687792;
		_case_end_4435691504:;
		_match_end_4435687792:;
	}
	_103944_decl->_field_link_path=_1a9e07434_tokstoa(_103964_tokens);
}



inline void _1a9e07434_Parser::_method_parse_use_decl(jule::Ref<_1b61ca014_UseDecl>& _110438_decl,jule::Slice<_1b61ec5ec_Token> _110458_tokens) {
	if (_110438_decl->_field_cpp_linked) {
		(*this)._method_build_cpp_use_decl(_110438_decl,_110458_tokens);
		return;
	}
	_1b61ec5ec_Token _111017_token = _110458_tokens[0LL];
	if (_111017_token._field_id != 2LLU) {
		(*this)._method_push_err(_111017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
		return;
	}
	if ((_110458_tokens.len() > 2LL) && (_110458_tokens[1LL]._field_id == 12LLU)) {
		_110438_decl->_field_alias=_111017_token._field_kind;
		if (_110458_tokens[2LL]._field_id != 2LLU) {
			(*this)._method_push_err(_111017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
			return;
		}
		_110458_tokens=_110458_tokens.slice(2LL);
		_111017_token=_110458_tokens[0LL];
	}
	
	{
		if (!((_111017_token._field_kind == jule::Str("std", 3)))) { goto _case_end_4435740896; }
		_case_begin_4435740896:;
		{
			(*this)._method_build_std_use_decl(_110438_decl,_110458_tokens);
		}
		goto _match_end_4435739936;
		_case_end_4435740896:;
		_case_begin_4435740064:;
		{
			(*this)._method_build_ident_use_decl(_110438_decl,_110458_tokens);
		}
		goto _match_end_4435739936;
		_case_end_4435740064:;
		_match_end_4435739936:;
	}
}



inline jule::Ref<_1b61ca014_UseDecl> _1a9e07434_Parser::_method_build_use_decl(jule::Slice<_1b61ec5ec_Token> _113937_tokens,jule::Bool _113954_cpp_linked) {
	jule::Ref<_1b61ca014_UseDecl> _114017_decl = jule::new_struct<_1b61ca014_UseDecl>(new( std::nothrow ) _1b61ca014_UseDecl(_113937_tokens[0LL],jule::Str(),jule::Str(),jule::Bool(),jule::Slice<_1b61ec5ec_Token>(),_113954_cpp_linked,jule::Bool()));
	if (_113937_tokens.len() < 2LL) {
		(*this)._method_push_err(_114017_decl->_field_token,jule::Str("missing path of use statement", 29),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b61ca014_UseDecl>();
	}
	_113937_tokens=_113937_tokens.slice(1LL);
	(*this)._method_parse_use_decl(_114017_decl,_113937_tokens);
	return _114017_decl;
}



inline jule::Ref<_1b61ca014_Expr> _1a9e07434_Parser::_method_build_enum_item_expr(jule::Ref<jule::Int> _115344_i,jule::Slice<_1b61ec5ec_Token>& _115358_tokens) {
	jule::Int _115417_brace_n = 0LL;
	jule::Int _115513_expr_start = _115344_i;
	_iter_begin_4435758720:;
	if (!(_115344_i < _115358_tokens.len())) { goto _iter_end_4435758720; }
	{
		_1b61ec5ec_Token _115717_t = _115358_tokens[static_cast<jule::Int>(_115344_i)];
		if (_115717_t._field_id == 3LLU) {
			{
				auto _match_expr{ _115717_t._field_kind };
				if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4435764144; }
				_case_begin_4435764144:;
				{
					(_115417_brace_n)++;
					goto _iter_next_4435758720;
				}
				goto _match_end_4435762560;
				_case_end_4435764144:;
				_case_begin_4435763344:;
				{
					(_115417_brace_n)--;
				}
				goto _match_end_4435762560;
				_case_end_4435763344:;
				_match_end_4435762560:;
			}
		}
		if (_115417_brace_n > 0LL) {
			goto _iter_next_4435758720;
		}
		if ((_115717_t._field_id == 8LLU) || ((_115344_i + 1LL) >= _115358_tokens.len())) {
			jule::Slice<_1b61ec5ec_Token> _117625_expr_tokens = nullptr;
			if (_115717_t._field_id == 8LLU) {
				_117625_expr_tokens=_115358_tokens.slice(static_cast<jule::Int>(_115513_expr_start),static_cast<jule::Int>(_115344_i));
			} else {
				_117625_expr_tokens=_115358_tokens.slice(static_cast<jule::Int>(_115513_expr_start));
			}
			return this->self->_method_build_expr(_117625_expr_tokens);
		}
	}
	_iter_next_4435758720:;
	(_115344_i)++;
	goto _iter_begin_4435758720;
	_iter_end_4435758720:;
	return jule::new_ref<_1b61ca014_Expr>();
}



inline jule::Slice<jule::Ref<_1b61ca014_EnumItemDecl>> _1a9e07434_Parser::_method_build_enum_items(jule::Slice<_1b61ec5ec_Token>& _118841_tokens) {
	jule::Slice<jule::Ref<_1b61ca014_EnumItemDecl>> _118917_items = jule::Slice<jule::Ref<_1b61ca014_EnumItemDecl>>::alloc(0LL);
	jule::Ref<jule::Int> _119017_i = jule::new_ref<jule::Int>(0LL);
	_iter_begin_4435776768:;
	if (!(_119017_i < _118841_tokens.len())) { goto _iter_end_4435776768; }
	{
		_1b61ec5ec_Token _119221_t = _118841_tokens[static_cast<jule::Int>(_119017_i)];
		if (_119221_t._field_id == 18LLU) {
			goto _iter_next_4435776768;
		}
		jule::Ref<_1b61ca014_EnumItemDecl> _119721_item = jule::new_struct<_1b61ca014_EnumItemDecl>(new( std::nothrow ) _1b61ca014_EnumItemDecl());
		_119721_item->_field_token=_119221_t;
		if (_119721_item->_field_token._field_id != 2LLU) {
			this->self->_method_push_err(_119721_item->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
		}
		_119721_item->_field_ident=_119721_item->_field_token._field_kind;
		if (((_119017_i + 1LL) >= _118841_tokens.len()) || (_118841_tokens[static_cast<jule::Int>(_119017_i + 1LL)]._field_id == 8LLU)) {
			if ((_119017_i + 1LL) < _118841_tokens.len()) {
				(_119017_i)++;
			}
			_118917_items=jule::append(_118917_items,jule::Slice<jule::Ref<_1b61ca014_EnumItemDecl>>({_119721_item}));
			goto _iter_next_4435776768;
		}
		(_119017_i)++;
		_119221_t=_118841_tokens[static_cast<jule::Int>(_119017_i)];
		(_119017_i)++;
		if ((_119221_t._field_id != 7LLU) || (_119221_t._field_kind != jule::Str("=", 1))) {
			this->self->_method_push_err(_119221_t,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			this->self->_method_push_suggestion(jule::Str("expected equals \"=\" for assignment", 34),jule::Slice<jule::Any>({}));
			goto _iter_next_4435776768;
		}
		if ((_119017_i >= _118841_tokens.len()) || (_118841_tokens[static_cast<jule::Int>(_119017_i)]._field_id == 8LLU)) {
			this->self->_method_push_err(_119221_t,jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
			goto _iter_next_4435776768;
		}
		_119721_item->_field_expr=this->self->_method_build_enum_item_expr(_119017_i,_118841_tokens);
		_118917_items=jule::append(_118917_items,jule::Slice<jule::Ref<_1b61ca014_EnumItemDecl>>({_119721_item}));
	}
	_iter_next_4435776768:;
	(_119017_i)++;
	goto _iter_begin_4435776768;
	_iter_end_4435776768:;
	return _118917_items;
}



inline jule::Ref<_1b61ca014_EnumDecl> _1a9e07434_Parser::_method_build_enum_decl(jule::Slice<_1b61ec5ec_Token>& _122940_tokens) {
	if ((_122940_tokens.len() < 2LL) || (_122940_tokens.len() < 3LL)) {
		this->self->_method_push_err(_122940_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b61ca014_EnumDecl>();
	}
	jule::Ref<_1b61ca014_EnumDecl> _123417_e = jule::new_struct<_1b61ca014_EnumDecl>(new( std::nothrow ) _1b61ca014_EnumDecl(_122940_tokens[1LL],jule::Bool(),jule::Str(),jule::Ref<_1b61ca014_TypeDecl>(),jule::Slice<jule::Ref<_1b61ca014_EnumItemDecl>>(),jule::Ref<_1b61ca014_CommentGroup>()));
	if (_123417_e->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_123417_e->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
	}
	_123417_e->_field_ident=_123417_e->_field_token._field_kind;
	jule::Int _124217_i = 2LL;
	if (_122940_tokens[static_cast<jule::Int>(_124217_i)]._field_id == 11LLU) {
		(_124217_i)++;
		if (_124217_i >= _122940_tokens.len()) {
			this->self->_method_push_err(_122940_tokens[static_cast<jule::Int>(_124217_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return _123417_e;
		}
		std::tie(_123417_e->_field_kind,std::ignore) = this->self->_method_build_type(_122940_tokens,(&(_124217_i)),true);
		if (_124217_i >= _122940_tokens.len()) {
			this->self->_method_stop();
			this->self->_method_push_err(_123417_e->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>({}));
			this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
			return _123417_e;
		}
	} else {
		jule::drop(_123417_e->_field_kind);
	}
	jule::Slice<_1b61ec5ec_Token> _125917_item_tokens = _1a9e07434_range(_124217_i,jule::Str("{", 1),jule::Str("}", 1),_122940_tokens);
	if (_125917_item_tokens == nullptr) {
		this->self->_method_stop();
		this->self->_method_push_err(_123417_e->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return _123417_e;
	} else if (_124217_i < _122940_tokens.len()) {
		this->self->_method_push_err(_122940_tokens[static_cast<jule::Int>(_124217_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	_123417_e->_field_items=this->self->_method_build_enum_items(_125917_item_tokens);
	return _123417_e;
}



inline jule::Ref<_1b61ca014_FieldDecl> _1a9e07434_Parser::_method_build_field(jule::Slice<_1b61ec5ec_Token> _127235_tokens) {
	jule::Ref<_1b61ca014_FieldDecl> _127317_f = jule::new_struct<_1b61ca014_FieldDecl>(new( std::nothrow ) _1b61ca014_FieldDecl());
	_127317_f->_field_public=_127235_tokens[0LL]._field_id == 21LLU;
	if (_127317_f->_field_public) {
		if (_127235_tokens.len() == 1LL) {
			this->self->_method_push_err(_127235_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1b61ca014_FieldDecl>();
		}
		_127235_tokens=_127235_tokens.slice(1LL);
	}
	_127317_f->_field_mutable=_127235_tokens[0LL]._field_id == 36LLU;
	if (_127317_f->_field_mutable) {
		if (_127235_tokens.len() == 1LL) {
			this->self->_method_push_err(_127235_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1b61ca014_FieldDecl>();
		}
		_127235_tokens=_127235_tokens.slice(1LL);
	}
	_127317_f->_field_token=_127235_tokens[0LL];
	if (_127317_f->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_127317_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b61ca014_FieldDecl>();
	}
	_127317_f->_field_ident=_127317_f->_field_token._field_kind;
	if (_127235_tokens.len() == 1LL) {
		this->self->_method_push_err(_127235_tokens[0LL],jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b61ca014_FieldDecl>();
	} else if (_127235_tokens[1LL]._field_id != 11LLU) {
		this->self->_method_push_err(_127235_tokens[1LL],jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b61ca014_FieldDecl>();
	}
	_127235_tokens=_127235_tokens.slice(2LL);
	jule::Int _131017_i = 0LL;
	std::tie(_127317_f->_field_kind,std::ignore) = this->self->_method_build_type(_127235_tokens,(&(_131017_i)),true);
	if (_131017_i < _127235_tokens.len()) {
		this->self->_method_push_err(_127235_tokens[static_cast<jule::Int>(_131017_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b61ca014_FieldDecl>();
	}
	return _127317_f;
}



inline jule::Slice<jule::Ref<_1b61ca014_FieldDecl>> _1a9e07434_Parser::_method_build_struct_decl_fields(jule::Slice<_1b61ec5ec_Token> _132048_tokens) {
	jule::Slice<jule::Ref<_1b61ca014_FieldDecl>> _132117_fields = nullptr;
	jule::Slice<jule::Ref<_1a9b97a76_Stmt>> _132217_stms = _1a9b97a76_split_stms(_132048_tokens);
	{
		auto _range_expr = _132217_stms;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1a9b97a76_Stmt> _1a9e07434_st = *_range_begin;
			_iter_begin_4435878672:;
			{
				_132048_tokens=_1a9e07434_st->_field_tokens;
				if (_132048_tokens[0LL]._field_id == 18LLU) {
					goto _iter_next_4435878672;
				}
				jule::Ref<_1b61ca014_FieldDecl> _132821_f = this->self->_method_build_field(_132048_tokens);
				_132117_fields=jule::append(_132117_fields,jule::Slice<jule::Ref<_1b61ca014_FieldDecl>>({_132821_f}));
			}
			_iter_next_4435878672:;
			++_range_begin;
			if (_range_begin != _range_end) { _1a9e07434_st = *_range_begin; goto _iter_begin_4435878672; }
			_iter_end_4435878672:;
		}
	}
	return _132117_fields;
}



inline jule::Ref<_1b61ca014_StructDecl> _1a9e07434_Parser::_method_build_struct_decl(jule::Slice<_1b61ec5ec_Token>& _133442_tokens) {
	if (_133442_tokens.len() < 3LL) {
		this->self->_method_push_err(_133442_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b61ca014_StructDecl>();
	}
	jule::Int _134017_i = 1LL;
	jule::Ref<_1b61ca014_StructDecl> _134117_s = jule::new_struct<_1b61ca014_StructDecl>(new( std::nothrow ) _1b61ca014_StructDecl(_133442_tokens[static_cast<jule::Int>(_134017_i)],jule::Str(),jule::Slice<jule::Ref<_1b61ca014_FieldDecl>>(),jule::Bool(),jule::Bool(),jule::Slice<jule::Ref<_1b61ca014_Directive>>(),jule::Ref<_1b61ca014_CommentGroup>(),jule::Slice<jule::Ref<_1b61ca014_GenericDecl>>()));
	if (_134117_s->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_134117_s->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
	}
	(_134017_i)++;
	if (_134017_i >= _133442_tokens.len()) {
		this->self->_method_push_err(_133442_tokens[static_cast<jule::Int>(_134017_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return _134117_s;
	}
	_134117_s->_field_ident=_134117_s->_field_token._field_kind;
	_1b61ec5ec_Token _135513_error_token = _133442_tokens[static_cast<jule::Int>(_134017_i)];
	jule::Slice<_1b61ec5ec_Token> _135617_generics_tokens = _1a9e07434_range(_134017_i,jule::Str("[", 1),jule::Str("]", 1),_133442_tokens);
	if (_135617_generics_tokens != nullptr) {
		_134117_s->_field_generics=this->self->_method_build_generics(_135617_generics_tokens,_135513_error_token);
	}
	if (_134017_i >= _133442_tokens.len()) {
		this->self->_method_push_err(_133442_tokens[static_cast<jule::Int>(_134017_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return _134117_s;
	}
	jule::Slice<_1b61ec5ec_Token> _136517_body_tokens = _1a9e07434_range(_134017_i,jule::Str("{", 1),jule::Str("}", 1),_133442_tokens);
	if (_136517_body_tokens == nullptr) {
		this->self->_method_stop();
		this->self->_method_push_err(_134117_s->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return _134117_s;
	}
	if (_134017_i < _133442_tokens.len()) {
		this->self->_method_push_err(_133442_tokens[static_cast<jule::Int>(_134017_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	_134117_s->_field_fields=this->self->_method_build_struct_decl_fields(_136517_body_tokens);
	return _134117_s;
}



inline void _1a9e07434_Parser::_method_check_method_receiver(jule::Ref<_1b61ca014_FnDecl>& _137941_f) {
	if (_137941_f->_field_statically) {
		if ((_137941_f->_field_params.len() > 0LL) && _137941_f->_field_params[0LL]->_method_is_self()) {
			(*this)._method_push_err(_137941_f->_field_token,jule::Str("static functions cannot have receiver parameter", 47),jule::Slice<jule::Any>({}));
		}
		return;
	}
	if (_137941_f->_field_params.len() == 0LL) {
		(*this)._method_push_err(_137941_f->_field_token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>({}));
		return;
	}
	jule::Ref<_1b61ca014_ParamDecl> _139213_param = _137941_f->_field_params[0LL];
	if ((!(_139213_param->_method_is_self()))) {
		(*this)._method_push_err(_137941_f->_field_token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>({}));
		return;
	}
}



inline jule::Slice<jule::Ref<_1b61ca014_FnDecl>> _1a9e07434_Parser::_method_build_trait_methods(jule::Slice<_1b61ec5ec_Token> _139943_tokens) {
	jule::Slice<jule::Ref<_1b61ca014_FnDecl>> _140017_methods = nullptr;
	jule::Slice<jule::Ref<_1a9b97a76_Stmt>> _140117_stms = _1a9b97a76_split_stms(_139943_tokens);
	{
		auto _range_expr = _140117_stms;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1a9b97a76_Stmt> _1a9e07434_st = *_range_begin;
			_iter_begin_4435938416:;
			{
				_139943_tokens=_1a9ba6854_eliminate_comments(_1a9e07434_st->_field_tokens);
				if (_139943_tokens.len() == 0LL) {
					goto _iter_next_4435938416;
				}
				jule::Bool _140821_is_pub = false;
				if (_139943_tokens[0LL]._field_id == 21LLU) {
					_140821_is_pub=true;
					if (_139943_tokens.len() == 1LL) {
						this->self->_method_push_err(_139943_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
						goto _iter_next_4435938416;
					}
					_139943_tokens=_139943_tokens.slice(1LL);
				}
				jule::Ref<_1b61ca014_FnDecl> _141821_f = this->self->_method_build_fn(_139943_tokens,true,true);
				if (jule::real(_141821_f)) {
					if (_141821_f->_method_is_anon()) {
						this->self->_method_push_err(_141821_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
					}
					this->self->_method_check_method_receiver(_141821_f);
					if (_141821_f->_field_generics.len() > 0LL) {
						this->self->_method_push_err(_141821_f->_field_token,jule::Str("trait methods cannot have generics", 34),jule::Slice<jule::Any>({}));
					}
					_141821_f->_field_public=_140821_is_pub;
					_140017_methods=jule::append(_140017_methods,jule::Slice<jule::Ref<_1b61ca014_FnDecl>>({_141821_f}));
				}
			}
			_iter_next_4435938416:;
			++_range_begin;
			if (_range_begin != _range_end) { _1a9e07434_st = *_range_begin; goto _iter_begin_4435938416; }
			_iter_end_4435938416:;
		}
	}
	return _140017_methods;
}



inline jule::Ref<_1b61ca014_TraitDecl> _1a9e07434_Parser::_method_build_trait_decl(jule::Slice<_1b61ec5ec_Token>& _143441_tokens) {
	if (_143441_tokens.len() < 3LL) {
		this->self->_method_push_err(_143441_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b61ca014_TraitDecl>();
	}
	jule::Ref<_1b61ca014_TraitDecl> _143917_t = jule::new_struct<_1b61ca014_TraitDecl>(new( std::nothrow ) _1b61ca014_TraitDecl(_143441_tokens[1LL],jule::Str(),jule::Bool(),jule::Ref<_1b61ca014_CommentGroup>(),jule::Slice<jule::Ref<_1b61ca014_FnDecl>>()));
	if (_143917_t->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_143917_t->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
	}
	_143917_t->_field_ident=_143917_t->_field_token._field_kind;
	jule::Int _144717_i = 2LL;
	jule::Slice<_1b61ec5ec_Token> _144817_body_tokens = _1a9e07434_range(_144717_i,jule::Str("{", 1),jule::Str("}", 1),_143441_tokens);
	if (_144817_body_tokens == nullptr) {
		this->self->_method_stop();
		this->self->_method_push_err(_143917_t->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b61ca014_TraitDecl>();
	}
	if (_144717_i < _143441_tokens.len()) {
		this->self->_method_push_err(_143441_tokens[static_cast<jule::Int>(_144717_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	_143917_t->_field_methods=this->self->_method_build_trait_methods(_144817_body_tokens);
	return _143917_t;
}



inline jule::Ref<_1b61ca014_FnDecl> _1a9e07434_Parser::_method_build_cpp_link_fn(jule::Slice<_1b61ec5ec_Token> _146241_tokens) {
	_146241_tokens=_146241_tokens.slice(1LL);
	jule::Ref<_1b61ca014_FnDecl> _146417_f = this->self->_method_build_fn(_146241_tokens,false,true);
	if (jule::real(_146417_f)) {
		if (_146417_f->_method_is_anon()) {
			this->self->_method_push_err(_146417_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		}
		_146417_f->_field_cpp_linked=true;
	}
	return _146417_f;
}



inline jule::Ref<_1b61ca014_VarDecl> _1a9e07434_Parser::_method_build_cpp_link_var(jule::Slice<_1b61ec5ec_Token> _147442_tokens) {
	_147442_tokens=_147442_tokens.slice(1LL);
	jule::Ref<_1b61ca014_VarDecl> _147617_v = this->self->_method_build_var(_147442_tokens);
	if (jule::real(_147617_v)) {
		_147617_v->_field_cpp_linked=true;
		if (jule::real(_147617_v->_field_expr)) {
			this->self->_method_push_err(_147617_v->_field_token,jule::Str("cpp linked variables cannot have expression", 43),jule::Slice<jule::Any>({}));
		}
	}
	return _147617_v;
}



inline jule::Ref<_1b61ca014_StructDecl> _1a9e07434_Parser::_method_build_cpp_link_struct(jule::Slice<_1b61ec5ec_Token> _148645_tokens) {
	_148645_tokens=_148645_tokens.slice(1LL);
	jule::Ref<_1b61ca014_StructDecl> _148817_s = this->self->_method_build_struct_decl(_148645_tokens);
	if (jule::real(_148817_s)) {
		_148817_s->_field_cpp_linked=true;
	}
	return _148817_s;
}



inline jule::Ref<_1b61ca014_TypeAliasDecl> _1a9e07434_Parser::_method_build_cpp_link_type_alias(jule::Slice<_1b61ec5ec_Token> _149549_tokens) {
	_149549_tokens=_149549_tokens.slice(1LL);
	jule::Ref<_1b61ca014_TypeAliasDecl> _149717_t = this->self->_method_build_type_alias_decl(_149549_tokens);
	if (jule::real(_149717_t)) {
		_149717_t->_field_cpp_linked=true;
	}
	return _149717_t;
}



inline jule::Ref<_1b61ca014_UseDecl> _1a9e07434_Parser::_method_build_cpp_link_use(jule::Slice<_1b61ec5ec_Token> _150442_tokens) {
	if (_150442_tokens.len() == 1LL) {
		this->self->_method_push_err(_150442_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b61ca014_UseDecl>();
	}
	_150442_tokens=_150442_tokens.slice(1LL);
	
	return this->self->_method_build_use_decl(_150442_tokens,true);
}



inline jule::Any _1a9e07434_Parser::_method_build_cpp_link(jule::Slice<_1b61ec5ec_Token>& _151539_tokens) {
	_1b61ec5ec_Token _151617_token = _151539_tokens[0LL];
	if (_151539_tokens.len() == 1LL) {
		this->self->_method_push_err(_151617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::Any(nullptr);
	}
	_151617_token=_151539_tokens[1LL];
	{
		auto _match_expr{ _151617_token._field_id };
		if (!((19LLU) == _match_expr)) { goto _case_end_4436024144; }
		_case_begin_4436024144:;
		{
			return jule::Any(this->self->_method_build_cpp_link_use(_151539_tokens));
		}
		goto _match_end_4436022384;
		_case_end_4436024144:;
		if (!((33LLU) == _match_expr || (35LLU) == _match_expr)) { goto _case_end_4436023664; }
		_case_begin_4436023664:;
		{
			return jule::Any(this->self->_method_build_cpp_link_fn(_151539_tokens));
		}
		goto _match_end_4436022384;
		_case_end_4436023664:;
		if (!((9LLU) == _match_expr || (34LLU) == _match_expr)) { goto _case_end_4436023776; }
		_case_begin_4436023776:;
		{
			return jule::Any(this->self->_method_build_cpp_link_var(_151539_tokens));
		}
		goto _match_end_4436022384;
		_case_end_4436023776:;
		if (!((25LLU) == _match_expr)) { goto _case_end_4436023888; }
		_case_begin_4436023888:;
		{
			return jule::Any(this->self->_method_build_cpp_link_struct(_151539_tokens));
		}
		goto _match_end_4436022384;
		_case_end_4436023888:;
		if (!((10LLU) == _match_expr)) { goto _case_end_4436025600; }
		_case_begin_4436025600:;
		{
			return jule::Any(this->self->_method_build_cpp_link_type_alias(_151539_tokens));
		}
		goto _match_end_4436022384;
		_case_end_4436025600:;
		_case_begin_4436023264:;
		{
			this->self->_method_push_err(_151617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4436022384;
		_case_end_4436023264:;
		_match_end_4436022384:;
	}
	return jule::Any(nullptr);
}



inline jule::Ref<_1b61ca014_FnDecl> _1a9e07434_Parser::_method_get_method(jule::Slice<_1b61ec5ec_Token>& _154635_tokens) {
	jule::Int _154717_i = 0LL;
	_1b61ec5ec_Token _154817_token = _154635_tokens[static_cast<jule::Int>(_154717_i)];
	if (_154817_token._field_id == 38LLU) {
		if ((_154717_i + 1LL) >= _154635_tokens.len()) {
			this->self->_method_push_err(_154817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1b61ca014_FnDecl>();
		}
		(_154717_i)++;
		_154817_token=_154635_tokens[static_cast<jule::Int>(_154717_i)];
	}
	if (_154817_token._field_id == 35LLU) {
		if ((_154717_i + 1LL) >= _154635_tokens.len()) {
			this->self->_method_push_err(_154817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1b61ca014_FnDecl>();
		}
		(_154717_i)++;
		_154817_token=_154635_tokens[static_cast<jule::Int>(_154717_i)];
	}
	if (_154817_token._field_id != 33LLU) {
		this->self->_method_push_err(_154817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b61ca014_FnDecl>();
	}
	jule::Ref<_1b61ca014_FnDecl> _157217_f = this->self->_method_build_fn(_154635_tokens,true,false);
	if (jule::real(_157217_f) && _157217_f->_method_is_anon()) {
		this->self->_method_push_err(_157217_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	return _157217_f;
}



inline void _1a9e07434_Parser::_method_parse_impl_trait(jule::Ref<_1b61ca014_Impl>& _157941_ipl,jule::Slice<_1b61ec5ec_Token> _157957_tokens) {
	jule::Slice<jule::Ref<_1a9b97a76_Stmt>> _158017_stms = _1a9b97a76_split_stms(_157957_tokens);
	{
		auto _range_expr = _158017_stms;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1a9b97a76_Stmt> _1a9e07434_st = *_range_begin;
			_iter_begin_4436057072:;
			{
				_157957_tokens=_1a9e07434_st->_field_tokens;
				_1b61ec5ec_Token _158321_token = _157957_tokens[0LL];
				jule::Bool _158421_is_pub = false;
				{
					auto _match_expr{ _158321_token._field_id };
					if (!((18LLU) == _match_expr)) { goto _case_end_4436062144; }
					_case_begin_4436062144:;
					{
						goto _iter_next_4436057072;
					}
					goto _match_end_4436060496;
					_case_end_4436062144:;
					if (!((21LLU) == _match_expr)) { goto _case_end_4436062256; }
					_case_begin_4436062256:;
					{
						_158421_is_pub=true;
						if (_157957_tokens.len() == 1LL) {
							this->self->_method_push_err(_157957_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
							goto _iter_next_4436057072;
						}
						_157957_tokens=_157957_tokens.slice(1LL);
						if (_157957_tokens.len() > 0LL) {
							_158321_token=_157957_tokens[0LL];
						}
					}
					goto _match_end_4436060496;
					_case_end_4436062256:;
					_match_end_4436060496:;
				}
				{
					auto _match_expr{ _158321_token._field_id };
					if (!((38LLU) == _match_expr || (33LLU) == _match_expr || (35LLU) == _match_expr)) { goto _case_end_4436071344; }
					_case_begin_4436071344:;
					{
						jule::Ref<_1b61ca014_FnDecl> _160625_f = this->self->_method_get_method(_157957_tokens);
						if (jule::real(_160625_f)) {
							_160625_f->_field_public=_158421_is_pub;
							this->self->_method_check_method_receiver(_160625_f);
							_157941_ipl->_field_methods=jule::append(_157941_ipl->_field_methods,jule::Slice<jule::Ref<_1b61ca014_FnDecl>>({_160625_f}));
						}
					}
					goto _match_end_4436067248;
					_case_end_4436071344:;
					_case_begin_4436063232:;
					{
						this->self->_method_push_err(_158321_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
						goto _iter_next_4436057072;
					}
					goto _match_end_4436067248;
					_case_end_4436063232:;
					_match_end_4436067248:;
				}
			}
			_iter_next_4436057072:;
			++_range_begin;
			if (_range_begin != _range_end) { _1a9e07434_st = *_range_begin; goto _iter_begin_4436057072; }
			_iter_end_4436057072:;
		}
	}
}



inline void _1a9e07434_Parser::_method_parse_impl_struct(jule::Ref<_1b61ca014_Impl>& _162042_ipl,jule::Slice<_1b61ec5ec_Token> _162058_tokens) {
	jule::Slice<jule::Ref<_1a9b97a76_Stmt>> _162117_stms = _1a9b97a76_split_stms(_162058_tokens);
	{
		auto _range_expr = _162117_stms;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1a9b97a76_Stmt> _1a9e07434_st = *_range_begin;
			_iter_begin_4436080960:;
			{
				_162058_tokens=_1a9e07434_st->_field_tokens;
				_1b61ec5ec_Token _162421_token = _162058_tokens[0LL];
				jule::Bool _162521_is_pub = false;
				{
					auto _match_expr{ _162421_token._field_id };
					if (!((18LLU) == _match_expr)) { goto _case_end_4436086032; }
					_case_begin_4436086032:;
					{
						goto _iter_next_4436080960;
					}
					goto _match_end_4436084384;
					_case_end_4436086032:;
					if (!((21LLU) == _match_expr)) { goto _case_end_4436086144; }
					_case_begin_4436086144:;
					{
						_162521_is_pub=true;
						if (_162058_tokens.len() == 1LL) {
							this->self->_method_push_err(_162058_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
							goto _iter_next_4436080960;
						}
						_162058_tokens=_162058_tokens.slice(1LL);
						if (_162058_tokens.len() > 0LL) {
							_162421_token=_162058_tokens[0LL];
						}
					}
					goto _match_end_4436084384;
					_case_end_4436086144:;
					_match_end_4436084384:;
				}
				{
					auto _match_expr{ _162421_token._field_id };
					if (!((38LLU) == _match_expr || (33LLU) == _match_expr || (35LLU) == _match_expr)) { goto _case_end_4436095232; }
					_case_begin_4436095232:;
					{
						jule::Ref<_1b61ca014_FnDecl> _164725_f = this->self->_method_get_method(_162058_tokens);
						if (jule::real(_164725_f)) {
							_164725_f->_field_public=_162521_is_pub;
							this->self->_method_check_method_receiver(_164725_f);
							_162042_ipl->_field_methods=jule::append(_162042_ipl->_field_methods,jule::Slice<jule::Ref<_1b61ca014_FnDecl>>({_164725_f}));
						}
					}
					goto _match_end_4436091136;
					_case_end_4436095232:;
					_case_begin_4436087120:;
					{
						this->self->_method_push_err(_162421_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
						goto _iter_next_4436080960;
					}
					goto _match_end_4436091136;
					_case_end_4436087120:;
					_match_end_4436091136:;
				}
			}
			_iter_next_4436080960:;
			++_range_begin;
			if (_range_begin != _range_end) { _1a9e07434_st = *_range_begin; goto _iter_begin_4436080960; }
			_iter_end_4436080960:;
		}
	}
}



inline void _1a9e07434_Parser::_method_parse_impl_body(jule::Ref<_1b61ca014_Impl>& _166140_ipl,jule::Slice<_1b61ec5ec_Token>& _166157_tokens) {
	if (_166140_ipl->_method_is_trait_impl()) {
		this->self->_method_parse_impl_trait(_166140_ipl,_166157_tokens);
		return;
	}
	this->self->_method_parse_impl_struct(_166140_ipl,_166157_tokens);
}



inline jule::Ref<_1b61ca014_Impl> _1a9e07434_Parser::_method_build_impl(jule::Slice<_1b61ec5ec_Token> _166934_tokens) {
	_1b61ec5ec_Token _167017_token = _166934_tokens[0LL];
	if (_166934_tokens.len() < 2LL) {
		this->self->_method_push_err(_167017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b61ca014_Impl>();
	}
	_167017_token=_166934_tokens[1LL];
	if (_167017_token._field_id != 2LLU) {
		this->self->_method_push_err(_167017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b61ca014_Impl>();
	}
	if (_166934_tokens.len() < 3LL) {
		this->self->_method_push_err(_167017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b61ca014_Impl>();
	}
	jule::Ref<_1b61ca014_Impl> _168517_ipl = jule::new_struct<_1b61ca014_Impl>(new( std::nothrow ) _1b61ca014_Impl(_167017_token,_1b61ec5ec_Token(),jule::Slice<jule::Ref<_1b61ca014_FnDecl>>()));
	_167017_token=_166934_tokens[2LL];
	if (_167017_token._field_id != 12LLU) {
		if ((_167017_token._field_id == 3LLU) && (_167017_token._field_kind == jule::Str("{", 1))) {
			std::tie(_168517_ipl->_field_base,_168517_ipl->_field_dest) = std::make_tuple(_168517_ipl->_field_dest,_168517_ipl->_field_base);
			_166934_tokens=_166934_tokens.slice(2LL);
			goto _julec_label_body;
		}
		this->self->_method_push_err(_167017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b61ca014_Impl>();
	}
	if (_166934_tokens.len() < 4LL) {
		this->self->_method_push_err(_167017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b61ca014_Impl>();
	}
	_167017_token=_166934_tokens[3LL];
	if (_167017_token._field_id != 2LLU) {
		this->self->_method_push_err(_167017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b61ca014_Impl>();
	}
	_168517_ipl->_field_dest=_167017_token;
	_166934_tokens=_166934_tokens.slice(4LL);
	_julec_label_body:;
	jule::Int _171517_i = 0LL;
	jule::Slice<_1b61ec5ec_Token> _171617_body_tokens = _1a9e07434_range(_171517_i,jule::Str("{", 1),jule::Str("}", 1),_166934_tokens);
	if (_171617_body_tokens == nullptr) {
		this->self->_method_stop();
		this->self->_method_push_err(_168517_ipl->_field_base,jule::Str("body is not exist", 17),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b61ca014_Impl>();
	}
	if (_171517_i < _166934_tokens.len()) {
		this->self->_method_push_err(_166934_tokens[static_cast<jule::Int>(_171517_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	this->self->_method_parse_impl_body(_168517_ipl,_171617_body_tokens);
	return _168517_ipl;
}



inline jule::Any _1a9e07434_Parser::_method_build_node_data(jule::Slice<_1b61ec5ec_Token>& _173040_tokens) {
	_1b61ec5ec_Token _173117_token = _173040_tokens[0LL];
	{
		auto _match_expr{ _173117_token._field_id };
		if (!((19LLU) == _match_expr)) { goto _case_end_4436153712; }
		_case_begin_4436153712:;
		{
			
			return jule::Any(this->self->_method_build_use_decl(_173040_tokens,false));
		}
		goto _match_end_4436152208;
		_case_end_4436153712:;
		if (!((33LLU) == _match_expr || (35LLU) == _match_expr)) { goto _case_end_4436155264; }
		_case_begin_4436155264:;
		{
			jule::Ref<_1b61ca014_FnDecl> _173921_f = this->self->_method_build_fn(_173040_tokens,false,false);
			if (jule::real(_173921_f)) {
				_173921_f->_field_global=true;
				if (_173921_f->_method_is_anon()) {
					this->self->_method_push_err(_173921_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				}
			}
			return jule::Any(_173921_f);
		}
		goto _match_end_4436152208;
		_case_end_4436155264:;
		if (!((34LLU) == _match_expr || (9LLU) == _match_expr || (36LLU) == _match_expr || (38LLU) == _match_expr)) { goto _case_end_4436155376; }
		_case_begin_4436155376:;
		{
			return jule::Any(this->self->_method_build_var(_173040_tokens));
		}
		goto _match_end_4436152208;
		_case_end_4436155376:;
		if (!((10LLU) == _match_expr)) { goto _case_end_4436153200; }
		_case_begin_4436153200:;
		{
			return jule::Any(this->self->_method_build_type_alias_decl(_173040_tokens));
		}
		goto _match_end_4436152208;
		_case_end_4436153200:;
		if (!((24LLU) == _match_expr)) { goto _case_end_4436153312; }
		_case_begin_4436153312:;
		{
			return jule::Any(this->self->_method_build_enum_decl(_173040_tokens));
		}
		goto _match_end_4436152208;
		_case_end_4436153312:;
		if (!((25LLU) == _match_expr)) { goto _case_end_4436153424; }
		_case_begin_4436153424:;
		{
			return jule::Any(this->self->_method_build_struct_decl(_173040_tokens));
		}
		goto _match_end_4436152208;
		_case_end_4436153424:;
		if (!((29LLU) == _match_expr)) { goto _case_end_4436156128; }
		_case_begin_4436156128:;
		{
			return jule::Any(this->self->_method_build_trait_decl(_173040_tokens));
		}
		goto _match_end_4436152208;
		_case_end_4436156128:;
		if (!((30LLU) == _match_expr)) { goto _case_end_4436156240; }
		_case_begin_4436156240:;
		{
			return jule::Any(this->self->_method_build_impl(_173040_tokens));
		}
		goto _match_end_4436152208;
		_case_end_4436156240:;
		if (!((31LLU) == _match_expr)) { goto _case_end_4436156352; }
		_case_begin_4436156352:;
		{
			return this->self->_method_build_cpp_link(_173040_tokens);
		}
		goto _match_end_4436152208;
		_case_end_4436156352:;
		if (!((18LLU) == _match_expr)) { goto _case_end_4436156464; }
		_case_begin_4436156464:;
		{
			jule::Ref<_1b61ca014_Comment> _177621_c = _1a9e07434_build_comment(_173117_token);
			this->self->_method_process_comment(_177621_c);
			return jule::Any(_177621_c);
		}
		goto _match_end_4436152208;
		_case_end_4436156464:;
		_case_begin_4436152896:;
		{
			this->self->_method_push_err(_173117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::Any(nullptr);
		}
		goto _match_end_4436152208;
		_case_end_4436152896:;
		_match_end_4436152208:;
	}
}



inline void _1a9e07434_Parser::_method_check_comment_group(_1b61ca014_Node& _178639_node) {
	if ((!(jule::real((*this)._field_comment_group)))) {
		return;
	}
	{
		auto _match_expr{ _178639_node._field_data };
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_Comment>>() || _match_expr.type_is<jule::Ref<_1b61ca014_Directive>>())) { goto _case_end_4436178176; }
		goto _match_end_4436176736;
		_case_end_4436178176:;
		_case_begin_4436177200:;
		{
			jule::drop((*this)._field_comment_group);
		}
		goto _match_end_4436176736;
		_case_end_4436177200:;
		_match_end_4436176736:;
	}
}



inline void _1a9e07434_Parser::_method_check_directive(_1b61ca014_Node& _180035_node) {
	if ((*this)._field_directives == nullptr) {
		return;
	}
	{
		auto _match_expr{ _180035_node._field_data };
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_Directive>>() || _match_expr.type_is<jule::Ref<_1b61ca014_Comment>>())) { goto _case_end_4436184720; }
		goto _match_end_4436182336;
		_case_end_4436184720:;
		_case_begin_4436181792:;
		{
			(*this)._field_directives=nullptr;
		}
		goto _match_end_4436182336;
		_case_end_4436181792:;
		_match_end_4436182336:;
	}
}



inline void _1a9e07434_Parser::_method_apply_meta(_1b61ca014_Node& _181534_node,jule::Bool _181550_is_pub) {
	{
		auto _match_expr{ _181534_node._field_data };
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_VarDecl>>())) { goto _case_end_4436188368; }
		_case_begin_4436188368:;
		{
			jule::Ref<_1b61ca014_VarDecl> _181821_v = _181534_node._field_data.operator jule::Ref<_1b61ca014_VarDecl>();
			if ((!(jule::real(_181821_v)))) {
				return;
			}
			_181821_v->_field_public=_181550_is_pub;
			_181550_is_pub=false;
			_181821_v->_field_doc_comments=(*this)._field_comment_group;
			jule::drop((*this)._field_comment_group);
			_181821_v->_field_directives=(*this)._field_directives;
			(*this)._field_directives=nullptr;
		}
		goto _match_end_4436187632;
		_case_end_4436188368:;
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_FnDecl>>())) { goto _case_end_4436188480; }
		_case_begin_4436188480:;
		{
			jule::Ref<_1b61ca014_FnDecl> _183221_f = _181534_node._field_data.operator jule::Ref<_1b61ca014_FnDecl>();
			if ((!(jule::real(_183221_f)))) {
				return;
			}
			_183221_f->_field_public=_181550_is_pub;
			_181550_is_pub=false;
			_183221_f->_field_directives=(*this)._field_directives;
			(*this)._field_directives=nullptr;
			_183221_f->_field_doc_comments=(*this)._field_comment_group;
			jule::drop((*this)._field_comment_group);
		}
		goto _match_end_4436187632;
		_case_end_4436188480:;
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_TypeAliasDecl>>())) { goto _case_end_4436188608; }
		_case_begin_4436188608:;
		{
			jule::Ref<_1b61ca014_TypeAliasDecl> _184521_tad = _181534_node._field_data.operator jule::Ref<_1b61ca014_TypeAliasDecl>();
			if ((!(jule::real(_184521_tad)))) {
				return;
			}
			_184521_tad->_field_public=_181550_is_pub;
			_181550_is_pub=false;
			_184521_tad->_field_doc_comments=(*this)._field_comment_group;
			jule::drop((*this)._field_comment_group);
		}
		goto _match_end_4436187632;
		_case_end_4436188608:;
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_EnumDecl>>())) { goto _case_end_4436188736; }
		_case_begin_4436188736:;
		{
			jule::Ref<_1b61ca014_EnumDecl> _185521_ed = _181534_node._field_data.operator jule::Ref<_1b61ca014_EnumDecl>();
			if ((!(jule::real(_185521_ed)))) {
				return;
			}
			_185521_ed->_field_doc_comments=(*this)._field_comment_group;
			jule::drop((*this)._field_comment_group);
			_185521_ed->_field_public=_181550_is_pub;
			_181550_is_pub=false;
		}
		goto _match_end_4436187632;
		_case_end_4436188736:;
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_StructDecl>>())) { goto _case_end_4436188864; }
		_case_begin_4436188864:;
		{
			jule::Ref<_1b61ca014_StructDecl> _186521_sd = _181534_node._field_data.operator jule::Ref<_1b61ca014_StructDecl>();
			if ((!(jule::real(_186521_sd)))) {
				return;
			}
			_186521_sd->_field_directives=(*this)._field_directives;
			(*this)._field_directives=nullptr;
			_186521_sd->_field_doc_comments=(*this)._field_comment_group;
			jule::drop((*this)._field_comment_group);
			_186521_sd->_field_public=_181550_is_pub;
			_181550_is_pub=false;
		}
		goto _match_end_4436187632;
		_case_end_4436188864:;
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_TraitDecl>>())) { goto _case_end_4436188992; }
		_case_begin_4436188992:;
		{
			jule::Ref<_1b61ca014_TraitDecl> _187721_td = _181534_node._field_data.operator jule::Ref<_1b61ca014_TraitDecl>();
			if ((!(jule::real(_187721_td)))) {
				return;
			}
			_187721_td->_field_doc_comments=(*this)._field_comment_group;
			jule::drop((*this)._field_comment_group);
			_187721_td->_field_public=_181550_is_pub;
			_181550_is_pub=false;
		}
		goto _match_end_4436187632;
		_case_end_4436188992:;
		_match_end_4436187632:;
	}
	if (_181550_is_pub) {
		(*this)._method_push_err(_181534_node._field_token,jule::Str("define is not supports pub modifier", 35),jule::Slice<jule::Any>({}));
	}
}



inline void _1a9e07434_Parser::_method_check_use_decl(_1b61ca014_Node& _189134_node) {
	{
		auto _match_expr{ _189134_node._field_data };
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_UseDecl>>())) { goto _case_end_4436225344; }
		goto _match_end_4436223664;
		_case_end_4436225344:;
		_case_begin_4436224320:;
		{
			return;
		}
		goto _match_end_4436223664;
		_case_end_4436224320:;
		_match_end_4436223664:;
	}
	if ((*this)._field_ast->_field_decls.len() > 0LL) {
		(*this)._method_push_err(_189134_node._field_token,jule::Str("use declarations must declared before other declarations", 56),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("move this use declaration to top of source file", 47),jule::Slice<jule::Any>({}));
	}
}



inline std::tuple<jule::Bool,jule::Any> _1a9e07434_Parser::_method_build_general_scope_node_data(jule::Slice<_1b61ec5ec_Token> _190653_st) {
	jule::Bool _190668_is_pub = jule::Bool();
	jule::Any _190682_data = jule::Any();
	if (_190653_st[0LL]._field_id == 21LLU) {
		_190668_is_pub=true;
		_190653_st=_190653_st.slice(1LL);
		if (_190653_st.len() == 0LL) {
			this->self->_method_push_err(_190653_st[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return std::make_tuple(_190668_is_pub,_190682_data);
		}
	}
	_190682_data=this->self->_method_build_node_data(_190653_st);
	_190668_is_pub = _190668_is_pub;
	_190682_data = _190682_data;
	return std::make_tuple(_190668_is_pub,_190682_data);
}



inline _1b61ca014_Node _1a9e07434_Parser::_method_parse_node(jule::Slice<_1b61ec5ec_Token>& _192135_st) {
	_1b61ca014_Node _192217_node = _1b61ca014_Node(_192135_st[0LL],jule::Any());
	jule::Bool _192614_is_pub;
	jule::Any _192626_data;
	std::tie(_192614_is_pub,_192626_data) = this->self->_method_build_general_scope_node_data(_192135_st);
	if (_192626_data == nullptr) {
		return _192217_node;
	}
	_192217_node._field_data=_192626_data;
	this->self->_method_apply_meta(_192217_node,_192614_is_pub);
	this->self->_method_check_comment_group(_192217_node);
	this->self->_method_check_directive(_192217_node);
	this->self->_method_check_use_decl(_192217_node);
	return _192217_node;
}



inline void _1a9e07434_Parser::_method_append_node(jule::Slice<_1b61ec5ec_Token>& _194036_st) {
	if (_194036_st.len() == 0LL) {
		return;
	}
	_1b61ca014_Node _194517_node = this->self->_method_parse_node(_194036_st);
	if ((_194517_node._field_data == nullptr) || this->self->_method_stopped()) {
		return;
	}
	{
		if (!((_194517_node._method_is_use_decl()))) { goto _case_end_4436259872; }
		_case_begin_4436259872:;
		{
			this->self->_field_ast->_field_use_decls=jule::append(this->self->_field_ast->_field_use_decls,jule::Slice<jule::Ref<_1b61ca014_UseDecl>>({_194517_node._field_data.operator jule::Ref<_1b61ca014_UseDecl>()}));
		}
		goto _match_end_4436258528;
		_case_end_4436259872:;
		if (!((_194517_node._method_is_decl()))) { goto _case_end_4436261584; }
		_case_begin_4436261584:;
		{
			this->self->_field_ast->_field_decls=jule::append(this->self->_field_ast->_field_decls,jule::Slice<_1b61ca014_Node>({_194517_node}));
		}
		goto _match_end_4436258528;
		_case_end_4436261584:;
		if (!((_194517_node._method_is_comment()))) { goto _case_end_4436259360; }
		_case_begin_4436259360:;
		{
			jule::Ref<_1b61ca014_Comment> _196021_c = _194517_node._field_data.operator jule::Ref<_1b61ca014_Comment>();
			this->self->_field_ast->_field_comments=jule::append(this->self->_field_ast->_field_comments,jule::Slice<jule::Ref<_1b61ca014_Comment>>({_196021_c}));
		}
		goto _match_end_4436258528;
		_case_end_4436259360:;
		if (!((_194517_node._method_is_impl()))) { goto _case_end_4436259472; }
		_case_begin_4436259472:;
		{
			this->self->_field_ast->_field_impls=jule::append(this->self->_field_ast->_field_impls,jule::Slice<jule::Ref<_1b61ca014_Impl>>({_194517_node._field_data.operator jule::Ref<_1b61ca014_Impl>()}));
		}
		goto _match_end_4436258528;
		_case_end_4436259472:;
		_case_begin_4436259056:;
		{
			this->self->_method_push_err(_194517_node._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4436258528;
		_case_end_4436259056:;
		_match_end_4436258528:;
	}
}



inline void _1a9e07434_Parser::_method_remove_range(jule::Int _197131_i,jule::Str _197139_kind,jule::Slice<_1b61ec5ec_Token>& _197151_tokens,jule::Slice<jule::Int>& _197173_ranges) {
	jule::Str _197213_close = _1a9e07434_get_close_kind_of_brace(_197139_kind);
	_iter_begin_4436279264:;
	if (!(_197131_i >= 0LL)) { goto _iter_end_4436279264; }
	{
		_1b61ec5ec_Token _197417_tok = _197151_tokens[static_cast<jule::Int>(_197173_ranges[static_cast<jule::Int>(_197131_i)])];
		if (_197417_tok._field_kind != _197213_close) {
			goto _iter_next_4436279264;
		}
		_197173_ranges=jule::append(_197173_ranges.slice(0LL,static_cast<jule::Int>(_197131_i)),_197173_ranges.slice(static_cast<jule::Int>(_197131_i + 1LL)));
		goto _iter_end_4436279264;
	}
	_iter_next_4436279264:;
	(_197131_i)--;
	goto _iter_begin_4436279264;
	_iter_end_4436279264:;
}



inline void _1a9e07434_Parser::_method_push_wrong_order_close_err(_1b61ec5ec_Token& _198446_t,jule::Slice<_1b61ec5ec_Token>& _198457_tokens,jule::Slice<jule::Int>& _198475_ranges) {
	{
		auto _match_expr{ _198457_tokens[static_cast<jule::Int>(_198475_ranges[static_cast<jule::Int>(_198475_ranges.len() - 1LL)])]._field_kind };
		if (!((jule::Str("(", 1)) == _match_expr)) { goto _case_end_4436293808; }
		_case_begin_4436293808:;
		{
			(*this)._method_push_err(_198446_t,jule::Str("was expected parentheses close", 30),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4436290992;
		_case_end_4436293808:;
		if (!((jule::Str("{", 1)) == _match_expr)) { goto _case_end_4436293936; }
		_case_begin_4436293936:;
		{
			(*this)._method_push_err(_198446_t,jule::Str("was expected brace close", 24),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4436290992;
		_case_end_4436293936:;
		if (!((jule::Str("[", 1)) == _match_expr)) { goto _case_end_4436294064; }
		_case_begin_4436294064:;
		{
			(*this)._method_push_err(_198446_t,jule::Str("was expected bracket close", 26),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4436290992;
		_case_end_4436294064:;
		_match_end_4436290992:;
	}
}



inline void _1a9e07434_Parser::_method_push_range_close(_1b61ec5ec_Token _199235_t,jule::Str _199245_left,jule::Slice<_1b61ec5ec_Token>& _199257_tokens,jule::Slice<jule::Int>& _199279_ranges) {
	jule::I64 _199313_n = _199279_ranges.len();
	if (_199313_n == 0LL) {
		{
			auto _match_expr{ _199235_t._field_kind };
			if (!((jule::Str("]", 1)) == _match_expr)) { goto _case_end_4436306608; }
			_case_begin_4436306608:;
			{
				(*this)._method_push_err(_199235_t,jule::Str("extra closed brackets", 21),jule::Slice<jule::Any>({}));
			}
			goto _match_end_4436305856;
			_case_end_4436306608:;
			if (!((jule::Str("}", 1)) == _match_expr)) { goto _case_end_4436306720; }
			_case_begin_4436306720:;
			{
				(*this)._method_push_err(_199235_t,jule::Str("extra closed braces", 19),jule::Slice<jule::Any>({}));
			}
			goto _match_end_4436305856;
			_case_end_4436306720:;
			if (!((jule::Str(")", 1)) == _match_expr)) { goto _case_end_4436306848; }
			_case_begin_4436306848:;
			{
				(*this)._method_push_err(_199235_t,jule::Str("extra closed parentheses", 24),jule::Slice<jule::Any>({}));
			}
			goto _match_end_4436305856;
			_case_end_4436306848:;
			_match_end_4436305856:;
		}
		return;
	} else if (_199257_tokens[static_cast<jule::Int>(_199279_ranges[static_cast<jule::Int>(_199313_n - 1LL)])]._field_kind != _199245_left) {
		(*this)._method_push_wrong_order_close_err(_199235_t,_199257_tokens,_199279_ranges);
	}
	(*this)._method_remove_range(static_cast<jule::I64>(_199313_n - 1LL),_199235_t._field_kind,_199257_tokens,_199279_ranges);
}



inline void _1a9e07434_Parser::_method_check_ranges(jule::Slice<_1b61ec5ec_Token>& _200732_tokens) {
	jule::Slice<jule::Int> _200817_ranges = nullptr;
	{
		auto _range_expr = _200732_tokens;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1a9e07434_i = 0;
			_1b61ec5ec_Token _1a9e07434_token = *_range_begin;
			_iter_begin_4436320256:;
			{
				if (_1a9e07434_token._field_id != 3LLU) {
					goto _iter_next_4436320256;
				}
				{
					auto _match_expr{ _1a9e07434_token._field_kind };
					if (!((jule::Str("(", 1)) == _match_expr || (jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr)) { goto _case_end_4436323520; }
					_case_begin_4436323520:;
					{
						_200817_ranges=jule::append(_200817_ranges,jule::Slice<jule::Int>({_1a9e07434_i}));
					}
					goto _match_end_4436323744;
					_case_end_4436323520:;
					if (!((jule::Str(")", 1)) == _match_expr)) { goto _case_end_4436324016; }
					_case_begin_4436324016:;
					{
						(*this)._method_push_range_close(_1a9e07434_token,jule::Str("(", 1),_200732_tokens,_200817_ranges);
					}
					goto _match_end_4436323744;
					_case_end_4436324016:;
					if (!((jule::Str("}", 1)) == _match_expr)) { goto _case_end_4436324128; }
					_case_begin_4436324128:;
					{
						(*this)._method_push_range_close(_1a9e07434_token,jule::Str("{", 1),_200732_tokens,_200817_ranges);
					}
					goto _match_end_4436323744;
					_case_end_4436324128:;
					if (!((jule::Str("]", 1)) == _match_expr)) { goto _case_end_4436324240; }
					_case_begin_4436324240:;
					{
						(*this)._method_push_range_close(_1a9e07434_token,jule::Str("[", 1),_200732_tokens,_200817_ranges);
					}
					goto _match_end_4436323744;
					_case_end_4436324240:;
					_match_end_4436323744:;
				}
			}
			_iter_next_4436320256:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1a9e07434_i; _1a9e07434_token = *_range_begin; goto _iter_begin_4436320256; }
			_iter_end_4436320256:;
		}
	}
	{
		auto _range_expr = _200817_ranges;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1a9e07434_i = *_range_begin;
			_iter_begin_4436329104:;
			{
				_1b61ec5ec_Token _203317_token = _200732_tokens[static_cast<jule::Int>(_1a9e07434_i)];
				{
					auto _match_expr{ _203317_token._field_kind };
					if (!((jule::Str("(", 1)) == _match_expr)) { goto _case_end_4436333696; }
					_case_begin_4436333696:;
					{
						(*this)._method_push_err(_203317_token,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>({}));
					}
					goto _match_end_4436332960;
					_case_end_4436333696:;
					if (!((jule::Str("{", 1)) == _match_expr)) { goto _case_end_4436333808; }
					_case_begin_4436333808:;
					{
						(*this)._method_push_err(_203317_token,jule::Str("brace waiting to close", 22),jule::Slice<jule::Any>({}));
					}
					goto _match_end_4436332960;
					_case_end_4436333808:;
					if (!((jule::Str("[", 1)) == _match_expr)) { goto _case_end_4436333920; }
					_case_begin_4436333920:;
					{
						(*this)._method_push_err(_203317_token,jule::Str("bracket are waiting to close", 28),jule::Slice<jule::Any>({}));
					}
					goto _match_end_4436332960;
					_case_end_4436333920:;
					_match_end_4436332960:;
				}
			}
			_iter_next_4436329104:;
			++_range_begin;
			if (_range_begin != _range_end) { _1a9e07434_i = *_range_begin; goto _iter_begin_4436329104; }
			_iter_end_4436329104:;
		}
	}
}



inline void _1a9e07434_Parser::_method_parse(jule::Ref<_1b61ece27_File>& _204230_f) {
	this->self->_field_ast=jule::new_struct<_1b61d1d62_Ast>(new( std::nothrow ) _1b61d1d62_Ast(_204230_f,jule::Slice<jule::Ref<_1b61ca014_Directive>>(),jule::Slice<jule::Ref<_1b61ca014_UseDecl>>(),jule::Slice<jule::Ref<_1b61ca014_Impl>>(),jule::Slice<jule::Ref<_1b61ca014_Comment>>(),jule::Slice<_1b61ca014_Node>()));
	jule::Slice<_1b61ec5ec_Token> _204717_tokens = _204230_f->_method_tokens();
	this->self->_method_check_ranges(_204717_tokens);
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	jule::Slice<jule::Ref<_1a9b97a76_Stmt>> _205317_stms = _1a9b97a76_split_stms(_204717_tokens);
	jule::Int _205617_i = 0LL;
	_iter_begin_4436339856:;
	if (!(_205617_i < _205317_stms.len())) { goto _iter_end_4436339856; }
	{
		jule::Ref<_1a9b97a76_Stmt> _205821_st = _205317_stms[static_cast<jule::Int>(_205617_i)];
		if (_205821_st->_field_tokens.len() == 0LL) {
			return;
		}
		jule::Any _206325_data;
		std::tie(std::ignore,_206325_data) = this->self->_method_build_general_scope_node_data(_205821_st->_field_tokens);
		if (_206325_data == nullptr) {
			goto _iter_end_4436339856;
		}
		if (this->self->_method_stopped()) {
			return;
		}
		_1b61ca014_Node _207221_node = _1b61ca014_Node(_1b61ec5ec_Token(),_206325_data);
		if (_207221_node._method_is_comment()) {
			jule::Ref<_1b61ca014_Directive> _207425_d = this->self->_method_get_directive(_207221_node._field_data.operator jule::Ref<_1b61ca014_Comment>());
			if (jule::real(_207425_d) && _1ce0019d2_is_top_directive(_207425_d->_field_tag)) {
				this->self->_field_ast->_field_top_directives=jule::append(this->self->_field_ast->_field_top_directives,jule::Slice<jule::Ref<_1b61ca014_Directive>>({_207425_d}));
			}
		} else {
			goto _iter_end_4436339856;
		}
	}
	_iter_next_4436339856:;
	(_205617_i)++;
	goto _iter_begin_4436339856;
	_iter_end_4436339856:;
	this->self->_field_errors=nullptr;
	_iter_begin_4436354592:;
	if (!(_205617_i < _205317_stms.len())) { goto _iter_end_4436354592; }
	{
		jule::Ref<_1a9b97a76_Stmt> _208721_st = _205317_stms[static_cast<jule::Int>(_205617_i)];
		this->self->_method_append_node(_208721_st->_field_tokens);
		if (this->self->_method_stopped()) {
			goto _iter_end_4436354592;
		}
	}
	_iter_next_4436354592:;
	(_205617_i)++;
	goto _iter_begin_4436354592;
	_iter_end_4436354592:;
}







std::ostream &operator<<(std::ostream &_Stream, const _1a9e07434_Parser &_Src) {
	_Stream << "Parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "comment_group:" << _Src._field_comment_group << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}



inline void _1b5d9c0c1_TypeBuilder::_method_push_err(_1b61ec5ec_Token _7827_token,jule::Str _7841_fmt) {
	if ((*this)._field_err) {
		(*this)._field_p->_method_push_err(_7827_token,_7841_fmt,jule::Slice<jule::Any>({}));
	}
}



inline void _1b5d9c0c1_TypeBuilder::_method_push_suggestion(jule::Str _8534_fmt,jule::Slice<jule::Any> _8547_args) {
	if ((*this)._field_err) {
		(*this)._field_p->_method_push_suggestion(_8534_fmt,_8547_args);
	}
}



inline jule::Ref<_1b61ca014_TypeDecl> _1b5d9c0c1_TypeBuilder::_method_build_prim(void) {
	jule::Ref<_1b61ca014_TypeDecl> _9217_t = _1b5d9c0c1_build_prim_type((*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))]);
	((*((*this)._field_i)))++;
	return _9217_t;
}



inline jule::Ref<_1b61ca014_TypeDecl> _1b5d9c0c1_TypeBuilder::_method_build_namespace(void) {
	jule::Ref<_1b61ca014_TypeDecl> _9817_t = jule::new_struct<_1b61ca014_TypeDecl>(new( std::nothrow ) _1b61ca014_TypeDecl((*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))],jule::Any()));
	jule::Ref<_1b61ca014_NamespaceTypeDecl> _10217_nst = jule::new_struct<_1b61ca014_NamespaceTypeDecl>(new( std::nothrow ) _1b61ca014_NamespaceTypeDecl());
	jule::Int _10317_n = 0LL;
	_iter_begin_4436386032:;
	if (!((*((*this)._field_i)) < (*this)._field_tokens.len())) { goto _iter_end_4436386032; }
	{
		_1b61ec5ec_Token _10521_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
		if (jule::mod(_10317_n,2LL) == 0LL) {
			if (_10521_token._field_id != 2LLU) {
				(*this)._method_push_err(_10521_token,jule::Str("invalid syntax", 14));
				(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
			}
			_10217_nst->_field_idents=jule::append(_10217_nst->_field_idents,jule::Slice<_1b61ec5ec_Token>({_10521_token}));
		} else if (_10521_token._field_id != 23LLU) {
			goto _iter_end_4436386032;
		}
		(_10317_n)++;
	}
	_iter_next_4436386032:;
	((*((*this)._field_i)))++;
	goto _iter_begin_4436386032;
	_iter_end_4436386032:;
	_10217_nst->_field_idents=_10217_nst->_field_idents.slice(0LL,static_cast<jule::Int>(_10217_nst->_field_idents.len() - 1LL));
	((*((*this)._field_i)))--;
	_10217_nst->_field_kind=(*this)._method_build_ident()->_field_kind.operator jule::Ref<_1b61ca014_IdentTypeDecl>();
	_9817_t->_field_kind=jule::Any(_10217_nst);
	return _9817_t;
}



inline jule::Slice<jule::Ref<_1b61ca014_TypeDecl>> _1b5d9c0c1_TypeBuilder::_method_build_generics(void) {
	if ((*((*this)._field_i)) >= (*this)._field_tokens.len()) {
		return nullptr;
	}
	_1b61ec5ec_Token _13113_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	if ((_13113_token._field_id != 3LLU) || (_13113_token._field_kind != jule::Str("[", 1))) {
		return nullptr;
	}
	jule::Slice<jule::Slice<_1b61ec5ec_Token>> _13617_parts = (*this)._method_ident_generics();
	if (_13617_parts.len() == 0LL) {
		(*this)._method_push_err(_13113_token,jule::Str("invalid syntax", 14));
		return nullptr;
	}
	jule::Slice<jule::Ref<_1b61ca014_TypeDecl>> _14217_types = jule::Slice<jule::Ref<_1b61ca014_TypeDecl>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_13617_parts.len())));
	{
		auto _range_expr = _13617_parts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1b5d9c0c1_i = 0;
			jule::Slice<_1b61ec5ec_Token> _1b5d9c0c1_part = *_range_begin;
			_iter_begin_4436413888:;
			{
				jule::Int _14421_j = 0LL;
				jule::Ref<_1b61ca014_TypeDecl> _14522_t;
				std::tie(_14522_t,std::ignore) = (*this)._field_p->_method_build_type(_1b5d9c0c1_part,(&(_14421_j)),true);
				if (_14421_j < _1b5d9c0c1_part.len()) {
					(*this)._method_push_err(_1b5d9c0c1_part[static_cast<jule::Int>(_14421_j)],jule::Str("invalid syntax", 14));
				}
				_14217_types[static_cast<jule::Int>(_1b5d9c0c1_i)]=_14522_t;
			}
			_iter_next_4436413888:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1b5d9c0c1_i; _1b5d9c0c1_part = *_range_begin; goto _iter_begin_4436413888; }
			_iter_end_4436413888:;
		}
	}
	return _14217_types;
}



inline jule::Slice<jule::Slice<_1b61ec5ec_Token>> _1b5d9c0c1_TypeBuilder::_method_ident_generics(void) {
	jule::Int _15513_first = (*((*this)._field_i));
	jule::Int _15617_range_n = 0LL;
	_iter_begin_4436410112:;
	if (!((*((*this)._field_i)) < (*this)._field_tokens.len())) { goto _iter_end_4436410112; }
	{
		_1b61ec5ec_Token _15817_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
		if (_15817_token._field_id == 3LLU) {
			{
				auto _match_expr{ _15817_token._field_kind };
				if (!((jule::Str("[", 1)) == _match_expr)) { goto _case_end_4436430896; }
				_case_begin_4436430896:;
				{
					(_15617_range_n)++;
				}
				goto _match_end_4436430064;
				_case_end_4436430896:;
				if (!((jule::Str("]", 1)) == _match_expr)) { goto _case_end_4436431008; }
				_case_begin_4436431008:;
				{
					(_15617_range_n)--;
				}
				goto _match_end_4436430064;
				_case_end_4436431008:;
				_match_end_4436430064:;
			}
		}
		if (_15617_range_n == 0LL) {
			((*((*this)._field_i)))++;
			goto _iter_end_4436410112;
		}
	}
	_iter_next_4436410112:;
	((*((*this)._field_i)))++;
	goto _iter_begin_4436410112;
	_iter_end_4436410112:;
	jule::Slice<_1b61ec5ec_Token> _17017_tokens = (*this)._field_tokens.slice(static_cast<jule::Int>(_15513_first + 1LL),static_cast<jule::Int>((*((*this)._field_i)) - 1LL));
	jule::Slice<jule::Slice<_1b61ec5ec_Token>> _17118_parts;
	jule::Slice<_1cdeeb191_Log> _17125_errors;
	std::tie(_17118_parts,_17125_errors) = _1a9e07434_parts(_17017_tokens,8LLU,true);
	if ((*this)._field_err) {
		(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_17125_errors);
	}
	return _17118_parts;
}



inline jule::Ref<_1b61ca014_TypeDecl> _1b5d9c0c1_TypeBuilder::_method_build_ident(void) {
	if ((((*((*this)._field_i)) + 1LL) < (*this)._field_tokens.len()) && ((*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)) + 1LL)]._field_id == 23LLU)) {
		return (*this)._method_build_namespace();
	}
	_1b61ec5ec_Token _18217_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	jule::Ref<_1b61ca014_IdentTypeDecl> _18317_it = jule::new_struct<_1b61ca014_IdentTypeDecl>(new( std::nothrow ) _1b61ca014_IdentTypeDecl(_18217_token,_18217_token._field_kind,false,jule::Slice<jule::Ref<_1b61ca014_TypeDecl>>()));
	((*((*this)._field_i)))++;
	_18317_it->_field_generics=(*this)._method_build_generics();
	return jule::new_struct<_1b61ca014_TypeDecl>(new( std::nothrow ) _1b61ca014_TypeDecl(_18217_token,jule::Any(_18317_it)));
}



inline jule::Ref<_1b61ca014_TypeDecl> _1b5d9c0c1_TypeBuilder::_method_build_cpp_link(void) {
	if ((((*((*this)._field_i)) + 1LL) >= (*this)._field_tokens.len()) || ((*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)) + 1LL)]._field_id != 20LLU)) {
		(*this)._method_push_err((*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))],jule::Str("invalid syntax", 14));
		return jule::new_ref<_1b61ca014_TypeDecl>();
	}
	(*((*this)._field_i))+=2LL;
	jule::Ref<_1b61ca014_TypeDecl> _20217_t = (*this)._method_build_ident();
	_20217_t->_field_kind.operator jule::Ref<_1b61ca014_IdentTypeDecl>()->_field_cpp_linked=true;
	return _20217_t;
}



inline jule::Ref<_1b61ca014_TypeDecl> _1b5d9c0c1_TypeBuilder::_method_build_fn(void) {
	_1b61ec5ec_Token _20817_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	jule::Ref<_1b61ca014_FnDecl> _20917_f = (*this)._field_p->_method_build_fn_prototype((*this)._field_tokens,(*((*this)._field_i)),false);
	if ((!(jule::real(_20917_f)))) {
		return jule::new_ref<_1b61ca014_TypeDecl>();
	}
	if ((!(_20917_f->_method_is_anon()))) {
		(*this)._method_push_err(_20917_f->_field_token,jule::Str("invalid syntax", 14));
	}
	return jule::new_struct<_1b61ca014_TypeDecl>(new( std::nothrow ) _1b61ca014_TypeDecl(_20817_token,jule::Any(_20917_f)));
}



inline jule::Ref<_1b61ca014_TypeDecl> _1b5d9c0c1_TypeBuilder::_method_build_ptr(void) {
	_1b61ec5ec_Token _22317_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	if (((*((*this)._field_i)) + 1LL) >= (*this)._field_tokens.len()) {
		(*this)._method_push_err(_22317_token,jule::Str("invalid syntax", 14));
		return jule::new_ref<_1b61ca014_TypeDecl>();
	}
	((*((*this)._field_i)))++;
	if ((*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))]._field_id == 35LLU) {
		((*((*this)._field_i)))++;
		return jule::new_struct<_1b61ca014_TypeDecl>(new( std::nothrow ) _1b61ca014_TypeDecl(_22317_token,jule::Any(jule::new_struct<_1b61ca014_PtrTypeDecl>(new( std::nothrow ) _1b61ca014_PtrTypeDecl(jule::new_ref<_1b61ca014_TypeDecl>())))));
	}
	jule::Ref<_1b61ca014_TypeDecl> _24017_elem = (*this)._method_step();
	if ((!(jule::real(_24017_elem)))) {
		return jule::new_ref<_1b61ca014_TypeDecl>();
	}
	return jule::new_struct<_1b61ca014_TypeDecl>(new( std::nothrow ) _1b61ca014_TypeDecl(_22317_token,jule::Any(jule::new_struct<_1b61ca014_PtrTypeDecl>(new( std::nothrow ) _1b61ca014_PtrTypeDecl(_24017_elem)))));
}



inline jule::Ref<_1b61ca014_TypeDecl> _1b5d9c0c1_TypeBuilder::_method_build_ref(void) {
	_1b61ec5ec_Token _25417_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	if (((*((*this)._field_i)) + 1LL) >= (*this)._field_tokens.len()) {
		(*this)._method_push_err(_25417_token,jule::Str("invalid syntax", 14));
		return jule::new_ref<_1b61ca014_TypeDecl>();
	}
	((*((*this)._field_i)))++;
	jule::Ref<_1b61ca014_TypeDecl> _26117_elem = (*this)._method_step();
	if ((!(jule::real(_26117_elem)))) {
		return jule::new_ref<_1b61ca014_TypeDecl>();
	}
	return jule::new_struct<_1b61ca014_TypeDecl>(new( std::nothrow ) _1b61ca014_TypeDecl(_25417_token,jule::Any(jule::new_struct<_1b61ca014_RefTypeDecl>(new( std::nothrow ) _1b61ca014_RefTypeDecl(_26117_elem)))));
}



inline jule::Ref<_1b61ca014_TypeDecl> _1b5d9c0c1_TypeBuilder::_method_build_op(void) {
	_1b61ec5ec_Token _27517_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	{
		auto _match_expr{ _27517_token._field_kind };
		if (!((jule::Str("*", 1)) == _match_expr)) { goto _case_end_4433510320; }
		_case_begin_4433510320:;
		{
			return (*this)._method_build_ptr();
		}
		goto _match_end_4433506768;
		_case_end_4433510320:;
		if (!((jule::Str("&", 1)) == _match_expr)) { goto _case_end_4433510896; }
		_case_begin_4433510896:;
		{
			return (*this)._method_build_ref();
		}
		goto _match_end_4433506768;
		_case_end_4433510896:;
		if (!((jule::Str("&&", 2)) == _match_expr)) { goto _case_end_4433510560; }
		_case_begin_4433510560:;
		{
			(*this)._method_push_err(_27517_token,jule::Str("references cannot reference to another reference", 48));
			return (*this)._method_build_ref();
		}
		goto _match_end_4433506768;
		_case_end_4433510560:;
		_case_begin_4433507456:;
		{
			(*this)._method_push_err(_27517_token,jule::Str("invalid syntax", 14));
			return jule::new_ref<_1b61ca014_TypeDecl>();
		}
		goto _match_end_4433506768;
		_case_end_4433507456:;
		_match_end_4433506768:;
	}
}



inline jule::Ref<_1b61ca014_TypeDecl> _1b5d9c0c1_TypeBuilder::_method_build_slc(void) {
	_1b61ec5ec_Token _29417_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	((*((*this)._field_i)))++;
	jule::Ref<_1b61ca014_TypeDecl> _29617_elem = (*this)._method_step();
	if ((!(jule::real(_29617_elem)))) {
		return jule::new_ref<_1b61ca014_TypeDecl>();
	}
	return jule::new_struct<_1b61ca014_TypeDecl>(new( std::nothrow ) _1b61ca014_TypeDecl(_29417_token,jule::Any(jule::new_struct<_1b61ca014_SlcTypeDecl>(new( std::nothrow ) _1b61ca014_SlcTypeDecl(_29617_elem)))));
}



inline jule::Ref<_1b61ca014_TypeDecl> _1b5d9c0c1_TypeBuilder::_method_build_arr(void) {
	if ((*((*this)._field_i)) >= (*this)._field_tokens.len()) {
		(*this)._method_push_err((*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)) - 1LL)],jule::Str("data-type missing", 17));
		return jule::new_ref<_1b61ca014_TypeDecl>();
	}
	jule::Int _31713_expr_delta = (*((*this)._field_i));
	jule::Ref<_1b61ca014_TypeDecl> _31917_elem = (*this)._method_step();
	if ((!(jule::real(_31917_elem)))) {
		return jule::new_ref<_1b61ca014_TypeDecl>();
	}
	jule::Ref<_1b61ca014_ArrTypeDecl> _32417_arrt = jule::new_struct<_1b61ca014_ArrTypeDecl>(new( std::nothrow ) _1b61ca014_ArrTypeDecl(_31917_elem,jule::Ref<_1b61ca014_Expr>()));
	jule::Slice<_1b61ec5ec_Token> _32817_expr_tokens = (*this)._field_tokens.slice(0LL,static_cast<jule::Int>(_31713_expr_delta));
	std::tie(std::ignore,_32817_expr_tokens) = _1a9e07434_range_last(_32817_expr_tokens);
	_32817_expr_tokens=_32817_expr_tokens.slice(1LL,static_cast<jule::Int>(_32817_expr_tokens.len() - 1LL));
	_1b61ec5ec_Token _33117_token = _32817_expr_tokens[0LL];
	if (((_32817_expr_tokens.len() == 1LL) && (_33117_token._field_id == 7LLU)) && (_33117_token._field_kind == jule::Str("...", 3))) {
	} else {
		_32417_arrt->_field_size=(*this)._field_p->_method_build_expr(_32817_expr_tokens);
	}
	return jule::new_struct<_1b61ca014_TypeDecl>(new( std::nothrow ) _1b61ca014_TypeDecl(_33117_token,jule::Any(_32417_arrt)));
}



inline jule::Ref<_1b61ca014_TypeDecl> _1b5d9c0c1_TypeBuilder::_method_build_map(jule::Int _34428_colon,jule::Slice<_1b61ec5ec_Token>& _34445_tokens) {
	_1b61ec5ec_Token _34517_colon_token = (*this)._field_tokens[static_cast<jule::Int>(_34428_colon)];
	if ((_34428_colon == 0LL) || ((_34428_colon + 1LL) >= _34445_tokens.len())) {
		(*this)._method_push_err(_34517_colon_token,jule::Str("data-type missing", 17));
		return jule::new_ref<_1b61ca014_TypeDecl>();
	}
	jule::Slice<_1b61ec5ec_Token> _35017_key_tokens = _34445_tokens.slice(0LL,static_cast<jule::Int>(_34428_colon));
	jule::Slice<_1b61ec5ec_Token> _35117_val_tokens = _34445_tokens.slice(static_cast<jule::Int>(_34428_colon + 1LL));
	jule::Ref<_1b61ca014_MapTypeDecl> _35217_mapt = jule::new_struct<_1b61ca014_MapTypeDecl>(new( std::nothrow ) _1b61ca014_MapTypeDecl());
	jule::Int _35417_j = 0LL;
	jule::Ref<_1b61ca014_TypeDecl> _35518_keyt;
	jule::Bool _35528_ok;
	std::tie(_35518_keyt,_35528_ok) = (*this)._field_p->_method_build_type(_35017_key_tokens,(&(_35417_j)),(*this)._field_err);
	if ((!(_35528_ok))) {
		return jule::new_ref<_1b61ca014_TypeDecl>();
	} else if (_35417_j < _35017_key_tokens.len()) {
		(*this)._method_push_err(_35017_key_tokens[static_cast<jule::Int>(_35417_j)],jule::Str("invalid syntax", 14));
	}
	_35217_mapt->_field_key=_35518_keyt;
	_35417_j=0LL;
	jule::Ref<_1b61ca014_TypeDecl> _36418_valt;
	std::tie(_36418_valt,_35528_ok) = (*this)._field_p->_method_build_type(_35117_val_tokens,(&(_35417_j)),(*this)._field_err);
	if ((!(_35528_ok))) {
		return jule::new_ref<_1b61ca014_TypeDecl>();
	} else if (_35417_j < _35117_val_tokens.len()) {
		(*this)._method_push_err(_35117_val_tokens[static_cast<jule::Int>(_35417_j)],jule::Str("invalid syntax", 14));
	}
	_35217_mapt->_field_val=_36418_valt;
	return jule::new_struct<_1b61ca014_TypeDecl>(new( std::nothrow ) _1b61ca014_TypeDecl(_34517_colon_token,jule::Any(_35217_mapt)));
}



inline jule::Ref<_1b61ca014_TypeDecl> _1b5d9c0c1_TypeBuilder::_method_build_enumerable(void) {
	_1b61ec5ec_Token _37917_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	if (((((*((*this)._field_i)) + 2LL) >= (*this)._field_tokens.len()) || (_37917_token._field_id != 3LLU)) || (_37917_token._field_kind != jule::Str("[", 1))) {
		(*this)._method_push_err(_37917_token,jule::Str("invalid syntax", 14));
		return jule::new_ref<_1b61ca014_TypeDecl>();
	}
	((*((*this)._field_i)))++;
	_37917_token=(*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	if ((_37917_token._field_id == 3LLU) && (_37917_token._field_kind == jule::Str("]", 1))) {
		return (*this)._method_build_slc();
	}
	((*((*this)._field_i)))--;
	jule::Slice<_1b61ec5ec_Token> _39318_map_tokens;
	jule::Int _39330_colon;
	std::tie(_39318_map_tokens,_39330_colon) = _1b5d9c0c1_split_map_range((*this)._field_tokens,(*((*this)._field_i)));
	((*((*this)._field_i)))++;
	if (_39330_colon == -1LL) {
		return (*this)._method_build_arr();
	}
	return (*this)._method_build_map(_39330_colon,_39318_map_tokens);
}



inline jule::Ref<_1b61ca014_TypeDecl> _1b5d9c0c1_TypeBuilder::_method_step(void) {
	_1b61ec5ec_Token _40213_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	{
		auto _match_expr{ _40213_token._field_id };
		if (!((1LLU) == _match_expr)) { goto _case_end_4433590656; }
		_case_begin_4433590656:;
		{
			return (*this)._method_build_prim();
		}
		goto _match_end_4433586416;
		_case_end_4433590656:;
		if (!((2LLU) == _match_expr)) { goto _case_end_4433587392; }
		_case_begin_4433587392:;
		{
			return (*this)._method_build_ident();
		}
		goto _match_end_4433586416;
		_case_end_4433587392:;
		if (!((31LLU) == _match_expr)) { goto _case_end_4433587504; }
		_case_begin_4433587504:;
		{
			return (*this)._method_build_cpp_link();
		}
		goto _match_end_4433586416;
		_case_end_4433587504:;
		if (!((33LLU) == _match_expr)) { goto _case_end_4433587616; }
		_case_begin_4433587616:;
		{
			return (*this)._method_build_fn();
		}
		goto _match_end_4433586416;
		_case_end_4433587616:;
		if (!((7LLU) == _match_expr)) { goto _case_end_4433589808; }
		_case_begin_4433589808:;
		{
			return (*this)._method_build_op();
		}
		goto _match_end_4433586416;
		_case_end_4433589808:;
		if (!((3LLU) == _match_expr)) { goto _case_end_4433589920; }
		_case_begin_4433589920:;
		{
			return (*this)._method_build_enumerable();
		}
		goto _match_end_4433586416;
		_case_end_4433589920:;
		_case_begin_4433587088:;
		{
			((*((*this)._field_i)))++;
			(*this)._method_push_err(_40213_token,jule::Str("invalid syntax", 14));
			return jule::new_ref<_1b61ca014_TypeDecl>();
		}
		goto _match_end_4433586416;
		_case_end_4433587088:;
		_match_end_4433586416:;
	}
}



inline std::tuple<jule::Ref<_1b61ca014_TypeDecl>,jule::Bool> _1b5d9c0c1_TypeBuilder::_method_build(void) {
	jule::Bool _43144_ok = jule::Bool();
	jule::Ref<_1b61ca014_TypeDecl> _43217_root = (*this)._method_step();
	if ((!(jule::real(_43217_root)))) {
		_43144_ok = false;
		return std::make_tuple(_1b5d9c0c1_build_void_type(),_43144_ok);
	}
	_43144_ok = true;
	return std::make_tuple(_43217_root,_43144_ok);
}







std::ostream &operator<<(std::ostream &_Stream, const _1b5d9c0c1_TypeBuilder &_Src) {
	_Stream << "TypeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_1ac90c3ed_Const> _1ac90c3ed_Const::_static_method_new_i64(jule::I64 _1327_x) {
	return jule::new_struct<_1ac90c3ed_Const>(new( std::nothrow ) _1ac90c3ed_Const(jule::Any(_1327_x)));
}



inline jule::Ref<_1ac90c3ed_Const> _1ac90c3ed_Const::_static_method_new_u64(jule::U64 _1527_x) {
	return jule::new_struct<_1ac90c3ed_Const>(new( std::nothrow ) _1ac90c3ed_Const(jule::Any(_1527_x)));
}



inline jule::Ref<_1ac90c3ed_Const> _1ac90c3ed_Const::_static_method_new_bool(jule::Bool _1728_x) {
	return jule::new_struct<_1ac90c3ed_Const>(new( std::nothrow ) _1ac90c3ed_Const(jule::Any(_1728_x)));
}



inline jule::Ref<_1ac90c3ed_Const> _1ac90c3ed_Const::_static_method_new_str(jule::Str _1927_x) {
	return jule::new_struct<_1ac90c3ed_Const>(new( std::nothrow ) _1ac90c3ed_Const(jule::Any(_1927_x)));
}



inline jule::Ref<_1ac90c3ed_Const> _1ac90c3ed_Const::_static_method_new_f64(jule::F64 _2127_x) {
	return jule::new_struct<_1ac90c3ed_Const>(new( std::nothrow ) _1ac90c3ed_Const(jule::Any(_2127_x)));
}



inline jule::Ref<_1ac90c3ed_Const> _1ac90c3ed_Const::_static_method_new_nil(void) {
	return jule::new_struct<_1ac90c3ed_Const>(new( std::nothrow ) _1ac90c3ed_Const(jule::Any(nullptr)));
}



inline jule::I64 _1ac90c3ed_Const::_method_read_i64(void) {
	if ((!((*this)._method_is_i64()))) {
		return 0LL;
	}
	return (*this)._field_data.operator jule::I64();
}



inline jule::U64 _1ac90c3ed_Const::_method_read_u64(void) {
	if ((!((*this)._method_is_u64()))) {
		return 0LL;
	}
	return (*this)._field_data.operator jule::U64();
}



inline jule::Bool _1ac90c3ed_Const::_method_read_bool(void) {
	if ((!((*this)._method_is_bool()))) {
		return false;
	}
	return (*this)._field_data.operator jule::Bool();
}



inline jule::Str _1ac90c3ed_Const::_method_read_str(void) {
	if ((!((*this)._method_is_str()))) {
		return jule::Str("", 0);
	}
	return (*this)._field_data.operator jule::Str();
}



inline jule::F64 _1ac90c3ed_Const::_method_read_f64(void) {
	if ((!((*this)._method_is_f64()))) {
		return 0LL;
	}
	return (*this)._field_data.operator jule::F64();
}



inline jule::I64 _1ac90c3ed_Const::_method_as_i64(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::I64>())) { goto _case_end_4433687120; }
		_case_begin_4433687120:;
		{
			return (*this)._field_data.operator jule::I64();
		}
		goto _match_end_4433684592;
		_case_end_4433687120:;
		if (!(_match_expr.type_is<jule::U64>())) { goto _case_end_4433686688; }
		_case_begin_4433686688:;
		{
			return static_cast<jule::I64>((*this)._field_data.operator jule::U64());
		}
		goto _match_end_4433684592;
		_case_end_4433686688:;
		if (!(_match_expr.type_is<jule::F64>())) { goto _case_end_4433686800; }
		_case_begin_4433686800:;
		{
			return static_cast<jule::I64>((*this)._field_data.operator jule::F64());
		}
		goto _match_end_4433684592;
		_case_end_4433686800:;
		_case_begin_4433685232:;
		{
			return 0LL;
		}
		goto _match_end_4433684592;
		_case_end_4433685232:;
		_match_end_4433684592:;
	}
}



inline jule::U64 _1ac90c3ed_Const::_method_as_u64(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::U64>())) { goto _case_end_4433693488; }
		_case_begin_4433693488:;
		{
			return (*this)._field_data.operator jule::U64();
		}
		goto _match_end_4433687504;
		_case_end_4433693488:;
		if (!(_match_expr.type_is<jule::I64>())) { goto _case_end_4433693056; }
		_case_begin_4433693056:;
		{
			return static_cast<jule::U64>((*this)._field_data.operator jule::I64());
		}
		goto _match_end_4433687504;
		_case_end_4433693056:;
		if (!(_match_expr.type_is<jule::F64>())) { goto _case_end_4433693168; }
		_case_begin_4433693168:;
		{
			return static_cast<jule::U64>((*this)._field_data.operator jule::F64());
		}
		goto _match_end_4433687504;
		_case_end_4433693168:;
		_case_begin_4433685344:;
		{
			return 0LL;
		}
		goto _match_end_4433687504;
		_case_end_4433685344:;
		_match_end_4433687504:;
	}
}



inline jule::F64 _1ac90c3ed_Const::_method_as_f64(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::F64>())) { goto _case_end_4433700672; }
		_case_begin_4433700672:;
		{
			return (*this)._field_data.operator jule::F64();
		}
		goto _match_end_4433695184;
		_case_end_4433700672:;
		if (!(_match_expr.type_is<jule::I64>())) { goto _case_end_4433700240; }
		_case_begin_4433700240:;
		{
			return static_cast<jule::F64>((*this)._field_data.operator jule::I64());
		}
		goto _match_end_4433695184;
		_case_end_4433700240:;
		if (!(_match_expr.type_is<jule::U64>())) { goto _case_end_4433700352; }
		_case_begin_4433700352:;
		{
			return static_cast<jule::F64>((*this)._field_data.operator jule::U64());
		}
		goto _match_end_4433695184;
		_case_end_4433700352:;
		_case_begin_4433698848:;
		{
			return 0LL;
		}
		goto _match_end_4433695184;
		_case_end_4433698848:;
		_match_end_4433695184:;
	}
}



inline void _1ac90c3ed_Const::_method_set_i64(jule::I64 _14030_x) {
	(*this)._field_data=jule::Any(_14030_x);
}



inline void _1ac90c3ed_Const::_method_set_u64(jule::U64 _14230_x) {
	(*this)._field_data=jule::Any(_14230_x);
}



inline void _1ac90c3ed_Const::_method_set_bool(jule::Bool _14431_x) {
	(*this)._field_data=jule::Any(_14431_x);
}



inline void _1ac90c3ed_Const::_method_set_str(jule::Str _14630_x) {
	(*this)._field_data=jule::Any(_14630_x);
}



inline void _1ac90c3ed_Const::_method_set_f64(jule::F64 _14830_x) {
	(*this)._field_data=jule::Any(_14830_x);
}



inline void _1ac90c3ed_Const::_method_set_nil(void) {
	(*this)._field_data=jule::Any(nullptr);
}



inline void _1ac90c3ed_Const::_method_set_by_type(jule::F64 _15230_v,_1ac90c3ed_Const _15238_x) {
	{
		if (!((_15238_x._method_is_f64()))) { goto _case_end_4433724016; }
		_case_begin_4433724016:;
		{
			(*this)._method_set_f64(_15230_v);
		}
		goto _match_end_4433723744;
		_case_end_4433724016:;
		if (!(((*this)._method_is_f64()))) { goto _case_end_4433724144; }
		_case_begin_4433724144:;
		{
			(*this)._method_set_f64(_15230_v);
		}
		goto _match_end_4433723744;
		_case_end_4433724144:;
		if (!(((*this)._method_is_i64()))) { goto _case_end_4433724272; }
		_case_begin_4433724272:;
		{
			(*this)._method_set_i64(static_cast<jule::I64>(_15230_v));
		}
		goto _match_end_4433723744;
		_case_end_4433724272:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4433724400; }
		_case_begin_4433724400:;
		{
			(*this)._method_set_u64(static_cast<jule::U64>(_15230_v));
		}
		goto _match_end_4433723744;
		_case_end_4433724400:;
		_match_end_4433723744:;
	}
}



inline jule::Bool _1ac90c3ed_Const::_method_is_i64(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::I64>())) { goto _case_end_4433732880; }
		_case_begin_4433732880:;
		{
			return true;
		}
		goto _match_end_4433723264;
		_case_end_4433732880:;
		_case_begin_4433732432:;
		{
			return false;
		}
		goto _match_end_4433723264;
		_case_end_4433732432:;
		_match_end_4433723264:;
	}
}



inline jule::Bool _1ac90c3ed_Const::_method_is_u64(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::U64>())) { goto _case_end_4433735504; }
		_case_begin_4433735504:;
		{
			return true;
		}
		goto _match_end_4433734288;
		_case_end_4433735504:;
		_case_begin_4433735072:;
		{
			return false;
		}
		goto _match_end_4433734288;
		_case_end_4433735072:;
		_match_end_4433734288:;
	}
}



inline jule::Bool _1ac90c3ed_Const::_method_is_bool(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Bool>())) { goto _case_end_4433738112; }
		_case_begin_4433738112:;
		{
			return true;
		}
		goto _match_end_4433736896;
		_case_end_4433738112:;
		_case_begin_4433737680:;
		{
			return false;
		}
		goto _match_end_4433736896;
		_case_end_4433737680:;
		_match_end_4433736896:;
	}
}



inline jule::Bool _1ac90c3ed_Const::_method_is_str(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Str>())) { goto _case_end_4433740720; }
		_case_begin_4433740720:;
		{
			return true;
		}
		goto _match_end_4433739504;
		_case_end_4433740720:;
		_case_begin_4433740288:;
		{
			return false;
		}
		goto _match_end_4433739504;
		_case_end_4433740288:;
		_match_end_4433739504:;
	}
}



inline jule::Bool _1ac90c3ed_Const::_method_is_f64(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::F64>())) { goto _case_end_4433743328; }
		_case_begin_4433743328:;
		{
			return true;
		}
		goto _match_end_4433742112;
		_case_end_4433743328:;
		_case_begin_4433742896:;
		{
			return false;
		}
		goto _match_end_4433742112;
		_case_end_4433742896:;
		_match_end_4433742112:;
	}
}



inline jule::Bool _1ac90c3ed_Const::_method_is_nil(void) {
	return (*this)._field_data == nullptr;
}



inline jule::Bool _1ac90c3ed_Const::_method_are_same_types(_1ac90c3ed_Const _20933_x) {
	{
		if (!(((*this)._method_is_i64() == _20933_x._method_is_i64()))) { goto _case_end_4433749552; }
		_case_begin_4433749552:;
		{
			return true;
		}
		goto _match_end_4433748960;
		_case_end_4433749552:;
		if (!(((*this)._method_is_u64() == _20933_x._method_is_u64()))) { goto _case_end_4433749664; }
		_case_begin_4433749664:;
		{
			return true;
		}
		goto _match_end_4433748960;
		_case_end_4433749664:;
		if (!(((*this)._method_is_f64() == _20933_x._method_is_f64()))) { goto _case_end_4433750832; }
		_case_begin_4433750832:;
		{
			return true;
		}
		goto _match_end_4433748960;
		_case_end_4433750832:;
		if (!(((*this)._method_is_bool() == _20933_x._method_is_bool()))) { goto _case_end_4433750944; }
		_case_begin_4433750944:;
		{
			return true;
		}
		goto _match_end_4433748960;
		_case_end_4433750944:;
		if (!(((*this)._method_is_str() == _20933_x._method_is_str()))) { goto _case_end_4433751056; }
		_case_begin_4433751056:;
		{
			return true;
		}
		goto _match_end_4433748960;
		_case_end_4433751056:;
		if (!(((*this)._method_is_nil() == _20933_x._method_is_nil()))) { goto _case_end_4433751168; }
		_case_begin_4433751168:;
		{
			return true;
		}
		goto _match_end_4433748960;
		_case_end_4433751168:;
		_case_begin_4433749136:;
		{
			return false;
		}
		goto _match_end_4433748960;
		_case_end_4433749136:;
		_match_end_4433748960:;
	}
}



inline jule::Bool _1ac90c3ed_Const::_method_and(_1ac90c3ed_Const _22722_x) {
	{
		if (!(((*this)._method_is_bool() && _22722_x._method_is_bool()))) { goto _case_end_4433761648; }
		_case_begin_4433761648:;
		{
			return (*this)._method_read_bool() && _22722_x._method_read_bool();
		}
		goto _match_end_4433761168;
		_case_end_4433761648:;
		_case_begin_4433761344:;
		{
			return false;
		}
		goto _match_end_4433761168;
		_case_end_4433761344:;
		_match_end_4433761168:;
	}
}



inline jule::Bool _1ac90c3ed_Const::_method_or(_1ac90c3ed_Const _23921_x) {
	{
		if (!(((*this)._method_is_bool() && _23921_x._method_is_bool()))) { goto _case_end_4433767472; }
		_case_begin_4433767472:;
		{
			return (*this)._method_read_bool() || _23921_x._method_read_bool();
		}
		goto _match_end_4433766992;
		_case_end_4433767472:;
		_case_begin_4433767168:;
		{
			return false;
		}
		goto _match_end_4433766992;
		_case_end_4433767168:;
		_match_end_4433766992:;
	}
}



inline jule::Bool _1ac90c3ed_Const::_method_eqs(_1ac90c3ed_Const _25122_x) {
	{
		if (!(((*this)._method_is_nil()))) { goto _case_end_4433773248; }
		_case_begin_4433773248:;
		{
			return _25122_x._method_is_nil();
		}
		goto _match_end_4433772656;
		_case_end_4433773248:;
		if (!(((*this)._method_is_bool()))) { goto _case_end_4433773360; }
		_case_begin_4433773360:;
		{
			return _25122_x._method_is_bool() && ((*this)._method_read_bool() == _25122_x._method_read_bool());
		}
		goto _match_end_4433772656;
		_case_end_4433773360:;
		if (!(((*this)._method_is_str()))) { goto _case_end_4433774528; }
		_case_begin_4433774528:;
		{
			return _25122_x._method_is_str() && ((*this)._method_read_str() == _25122_x._method_read_str());
		}
		goto _match_end_4433772656;
		_case_end_4433774528:;
		if (!(((*this)._method_is_i64()))) { goto _case_end_4433774640; }
		_case_begin_4433774640:;
		{
			return (*this)._method_read_i64() == _25122_x._method_as_i64();
		}
		goto _match_end_4433772656;
		_case_end_4433774640:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4433774752; }
		_case_begin_4433774752:;
		{
			return (*this)._method_read_u64() == _25122_x._method_as_u64();
		}
		goto _match_end_4433772656;
		_case_end_4433774752:;
		if (!(((*this)._method_is_f64()))) { goto _case_end_4433774864; }
		_case_begin_4433774864:;
		{
			return (*this)._method_read_f64() == _25122_x._method_as_f64();
		}
		goto _match_end_4433772656;
		_case_end_4433774864:;
		_case_begin_4433772832:;
		{
			return false;
		}
		goto _match_end_4433772656;
		_case_end_4433772832:;
		_match_end_4433772656:;
	}
}



inline jule::Bool _1ac90c3ed_Const::_method_lt(_1ac90c3ed_Const _28321_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4433788224; }
		_case_begin_4433788224:;
		{
			return (*this)._method_read_i64() < _28321_x._method_as_i64();
		}
		goto _match_end_4433787680;
		_case_end_4433788224:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4433788336; }
		_case_begin_4433788336:;
		{
			return (*this)._method_read_u64() < _28321_x._method_as_u64();
		}
		goto _match_end_4433787680;
		_case_end_4433788336:;
		if (!(((*this)._method_is_f64()))) { goto _case_end_4433788448; }
		_case_begin_4433788448:;
		{
			return (*this)._method_read_f64() < _28321_x._method_as_f64();
		}
		goto _match_end_4433787680;
		_case_end_4433788448:;
		_case_begin_4433787856:;
		{
			return false;
		}
		goto _match_end_4433787680;
		_case_end_4433787856:;
		_match_end_4433787680:;
	}
}



inline jule::Bool _1ac90c3ed_Const::_method_gt(_1ac90c3ed_Const _30621_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4433796880; }
		_case_begin_4433796880:;
		{
			return (*this)._method_read_i64() > _30621_x._method_as_i64();
		}
		goto _match_end_4433796336;
		_case_end_4433796880:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4433796992; }
		_case_begin_4433796992:;
		{
			return (*this)._method_read_u64() > _30621_x._method_as_u64();
		}
		goto _match_end_4433796336;
		_case_end_4433796992:;
		if (!(((*this)._method_is_f64()))) { goto _case_end_4433797104; }
		_case_begin_4433797104:;
		{
			return (*this)._method_read_f64() > _30621_x._method_as_f64();
		}
		goto _match_end_4433796336;
		_case_end_4433797104:;
		_case_begin_4433796512:;
		{
			return false;
		}
		goto _match_end_4433796336;
		_case_end_4433796512:;
		_match_end_4433796336:;
	}
}



inline jule::Bool _1ac90c3ed_Const::_method_add(_1ac90c3ed_Const _32826_x) {
	{
		if (!(((*this)._method_is_str()))) { goto _case_end_4433805840; }
		_case_begin_4433805840:;
		{
			if ((!(_32826_x._method_is_str()))) {
				return false;
			}
			(*this)._method_set_str((*this)._method_read_str() + _32826_x._method_read_str());
		}
		goto _match_end_4433805312;
		_case_end_4433805840:;
		if (!(((*this)._method_is_f64()) || ((*this)._method_is_i64()) || ((*this)._method_is_u64()))) { goto _case_end_4433805952; }
		_case_begin_4433805952:;
		{
			(*this)._method_set_by_type(static_cast<jule::F64>((*this)._method_as_f64() + _32826_x._method_as_f64()),_32826_x);
		}
		goto _match_end_4433805312;
		_case_end_4433805952:;
		_case_begin_4433805488:;
		{
			return false;
		}
		goto _match_end_4433805312;
		_case_end_4433805488:;
		_match_end_4433805312:;
	}
	return true;
}



inline jule::Bool _1ac90c3ed_Const::_method_sub(_1ac90c3ed_Const _34926_x) {
	{
		if (!(((*this)._method_is_f64()) || ((*this)._method_is_i64()) || ((*this)._method_is_u64()))) { goto _case_end_4433816720; }
		_case_begin_4433816720:;
		{
			(*this)._method_set_by_type(static_cast<jule::F64>((*this)._method_as_f64() - _34926_x._method_as_f64()),_34926_x);
		}
		goto _match_end_4433816240;
		_case_end_4433816720:;
		_case_begin_4433816416:;
		{
			return false;
		}
		goto _match_end_4433816240;
		_case_end_4433816416:;
		_match_end_4433816240:;
	}
	return true;
}



inline jule::Bool _1ac90c3ed_Const::_method_mul(_1ac90c3ed_Const _36426_x) {
	{
		if (!(((*this)._method_is_f64()) || ((*this)._method_is_i64()) || ((*this)._method_is_u64()))) { goto _case_end_4433823664; }
		_case_begin_4433823664:;
		{
			(*this)._method_set_by_type(static_cast<jule::F64>((*this)._method_as_f64() * _36426_x._method_as_f64()),_36426_x);
		}
		goto _match_end_4433823184;
		_case_end_4433823664:;
		_case_begin_4433823360:;
		{
			return false;
		}
		goto _match_end_4433823184;
		_case_end_4433823360:;
		_match_end_4433823184:;
	}
	return true;
}



inline jule::Bool _1ac90c3ed_Const::_method_div(_1ac90c3ed_Const _38326_x) {
	{
		if (!(((*this)._method_is_f64()))) { goto _case_end_4433830736; }
		_case_begin_4433830736:;
		{
			jule::F64 _38617_l = _38326_x._method_as_f64();
			if (_38617_l == 0LL) {
				return false;
			}
			(*this)._method_set_f64(static_cast<jule::F64>(jule::div((*this)._method_read_f64(),_38617_l)));
		}
		goto _match_end_4433830192;
		_case_end_4433830736:;
		if (!(((*this)._method_is_i64()))) { goto _case_end_4433830848; }
		_case_begin_4433830848:;
		{
			jule::F64 _39317_l = _38326_x._method_as_f64();
			if (_39317_l == 0LL) {
				return false;
			}
			(*this)._method_set_f64(static_cast<jule::F64>(jule::div((*this)._method_as_f64(),_39317_l)));
		}
		goto _match_end_4433830192;
		_case_end_4433830848:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4433830960; }
		_case_begin_4433830960:;
		{
			jule::F64 _40017_l = _38326_x._method_as_f64();
			if (_40017_l == 0LL) {
				return false;
			}
			(*this)._method_set_f64(static_cast<jule::F64>(jule::div((*this)._method_as_f64(),_40017_l)));
		}
		goto _match_end_4433830192;
		_case_end_4433830960:;
		_case_begin_4433830368:;
		{
			return false;
		}
		goto _match_end_4433830192;
		_case_end_4433830368:;
		_match_end_4433830192:;
	}
	return true;
}



inline jule::Bool _1ac90c3ed_Const::_method_mod(_1ac90c3ed_Const _41526_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4433847040; }
		_case_begin_4433847040:;
		{
			jule::I64 _41817_l = _41526_x._method_as_i64();
			if (_41817_l == 0LL) {
				return false;
			}
			(*this)._method_set_i64(static_cast<jule::I64>(jule::mod((*this)._method_read_i64(),_41817_l)));
		}
		goto _match_end_4433846512;
		_case_end_4433847040:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4433847152; }
		_case_begin_4433847152:;
		{
			jule::U64 _42517_l = _41526_x._method_as_u64();
			if (_42517_l == 0LL) {
				return false;
			}
			(*this)._method_set_u64(static_cast<jule::U64>(jule::mod((*this)._method_read_u64(),_42517_l)));
		}
		goto _match_end_4433846512;
		_case_end_4433847152:;
		_case_begin_4433846688:;
		{
			return false;
		}
		goto _match_end_4433846512;
		_case_end_4433846688:;
		_match_end_4433846512:;
	}
	return true;
}



inline jule::Bool _1ac90c3ed_Const::_method_bitwise_and(_1ac90c3ed_Const _43934_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4433858896; }
		_case_begin_4433858896:;
		{
			(*this)._method_set_i64(static_cast<jule::I64>((*this)._method_read_i64() & _43934_x._method_as_i64()));
		}
		goto _match_end_4433858368;
		_case_end_4433858896:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4433859008; }
		_case_begin_4433859008:;
		{
			(*this)._method_set_u64(static_cast<jule::U64>((*this)._method_read_u64() & _43934_x._method_as_u64()));
		}
		goto _match_end_4433858368;
		_case_end_4433859008:;
		_case_begin_4433858544:;
		{
			return false;
		}
		goto _match_end_4433858368;
		_case_end_4433858544:;
		_match_end_4433858368:;
	}
	return true;
}



inline jule::Bool _1ac90c3ed_Const::_method_bitwise_or(_1ac90c3ed_Const _45533_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4433867712; }
		_case_begin_4433867712:;
		{
			(*this)._method_set_i64(static_cast<jule::I64>((*this)._method_read_i64() | _45533_x._method_as_i64()));
		}
		goto _match_end_4433867184;
		_case_end_4433867712:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4433867824; }
		_case_begin_4433867824:;
		{
			(*this)._method_set_u64(static_cast<jule::U64>((*this)._method_read_u64() | _45533_x._method_as_u64()));
		}
		goto _match_end_4433867184;
		_case_end_4433867824:;
		_case_begin_4433867360:;
		{
			return false;
		}
		goto _match_end_4433867184;
		_case_end_4433867360:;
		_match_end_4433867184:;
	}
	return true;
}



inline jule::Bool _1ac90c3ed_Const::_method_xor(_1ac90c3ed_Const _47126_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4433876336; }
		_case_begin_4433876336:;
		{
			(*this)._method_set_i64(static_cast<jule::I64>((*this)._method_read_i64() ^ _47126_x._method_as_i64()));
		}
		goto _match_end_4433875808;
		_case_end_4433876336:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4433876448; }
		_case_begin_4433876448:;
		{
			(*this)._method_set_u64(static_cast<jule::U64>((*this)._method_read_u64() ^ _47126_x._method_as_u64()));
		}
		goto _match_end_4433875808;
		_case_end_4433876448:;
		_case_begin_4433875984:;
		{
			return false;
		}
		goto _match_end_4433875808;
		_case_end_4433875984:;
		_match_end_4433875808:;
	}
	return true;
}



inline jule::Bool _1ac90c3ed_Const::_method_lshift(_1ac90c3ed_Const _48729_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4433885472; }
		_case_begin_4433885472:;
		{
			jule::I64 _49017_l = (*this)._method_as_i64();
			if (_49017_l < 0LL) {
				jule::U64 _49221_r = _48729_x._method_as_u64();
				(*this)._method_set_i64(static_cast<jule::I64>(_49017_l << _49221_r));
			} else {
				_1ac90c3ed_lshift_unsig((*this),_48729_x);
			}
		}
		goto _match_end_4433884944;
		_case_end_4433885472:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4433885584; }
		_case_begin_4433885584:;
		{
			_1ac90c3ed_lshift_unsig((*this),_48729_x);
		}
		goto _match_end_4433884944;
		_case_end_4433885584:;
		_case_begin_4433885120:;
		{
			return false;
		}
		goto _match_end_4433884944;
		_case_end_4433885120:;
		_match_end_4433884944:;
	}
	return true;
}



inline jule::Bool _1ac90c3ed_Const::_method_rshift(_1ac90c3ed_Const _51029_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4433896544; }
		_case_begin_4433896544:;
		{
			jule::I64 _51317_l = (*this)._method_as_i64();
			if (_51317_l < 0LL) {
				jule::U64 _51521_r = _51029_x._method_as_u64();
				(*this)._method_set_i64(static_cast<jule::I64>(_51317_l >> _51521_r));
			} else {
				_1ac90c3ed_rshift_unsig((*this),_51029_x);
			}
		}
		goto _match_end_4433896016;
		_case_end_4433896544:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4433896656; }
		_case_begin_4433896656:;
		{
			_1ac90c3ed_rshift_unsig((*this),_51029_x);
		}
		goto _match_end_4433896016;
		_case_end_4433896656:;
		_case_begin_4433896192:;
		{
			return false;
		}
		goto _match_end_4433896016;
		_case_end_4433896192:;
		_match_end_4433896016:;
	}
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ac90c3ed_Const &_Src) {
	_Stream << "Const{";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}











std::ostream &operator<<(std::ostream &_Stream, const _1b5e07a00_FieldIns &_Src) {
	_Stream << "FieldIns{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b5e07a00_StructIns::_method_to_str(void) {
	jule::Str _20217_kind = jule::Str("", 0);
	_20217_kind+=(*this)._field_decl->_field_ident;
	if ((*this)._field_generics.len() > 0LL) {
		_20217_kind+=jule::Str("[", 1);
		{
			auto _range_expr = (*this)._field_generics;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_1ac6d02c0_TypeKind> _1b5e07a00_g = *_range_begin;
				_iter_begin_4438742992:;
				{
					_20217_kind+=_1b5e07a00_g->_method_to_str();
					_20217_kind+=jule::Str(",", 1);
				}
				_iter_next_4438742992:;
				++_range_begin;
				if (_range_begin != _range_end) { _1b5e07a00_g = *_range_begin; goto _iter_begin_4438742992; }
				_iter_end_4438742992:;
			}
		}
		_20217_kind=_20217_kind.slice(0LL,static_cast<jule::Int>(_20217_kind.len() - 1LL));
		_20217_kind+=jule::Str("]", 1);
	}
	return _20217_kind;
}



inline jule::Bool _1b5e07a00_StructIns::_method_equals(jule::Ref<_1ac6d02c0_TypeKind> _21721_other) {
	jule::Ref<_1b5e07a00_StructIns> _21813_s = (_21721_other).alloc->_method_strct();
	if ((!(jule::real(_21813_s)))) {
		return false;
	}
	if (((*this)._field_decl).alloc != (_21813_s->_field_decl).alloc) {
		return false;
	}
	if ((*this)._field_generics.len() != _21813_s->_field_generics.len()) {
		return false;
	}
	jule::Int _23117_i = 0LL;
	_iter_begin_4438752400:;
	if (!(_23117_i < (*this)._field_generics.len())) { goto _iter_end_4438752400; }
	{
		if ((!((*this)._field_generics[static_cast<jule::Int>(_23117_i)]->_method_equals(_21813_s->_field_generics[static_cast<jule::Int>(_23117_i)])))) {
			return false;
		}
	}
	_iter_next_4438752400:;
	(_23117_i)++;
	goto _iter_begin_4438752400;
	_iter_end_4438752400:;
	return true;
}



inline jule::Ref<_1b557cd24_Fn> _1b5e07a00_StructIns::_method_find_method(jule::Str _24534_ident,jule::Bool _24546_statically) {
	{
		auto _range_expr = (*this)._field_methods;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b557cd24_Fn> _1b5e07a00_f = *_range_begin;
			_iter_begin_4438764272:;
			{
				if ((_1b5e07a00_f->_field_statically == _24546_statically) && (_1b5e07a00_f->_field_ident == _24534_ident)) {
					return _1b5e07a00_f;
				}
			}
			_iter_next_4438764272:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b5e07a00_f = *_range_begin; goto _iter_begin_4438764272; }
			_iter_end_4438764272:;
		}
	}
	return jule::new_ref<_1b557cd24_Fn>();
}



inline jule::Ref<_1b5e07a00_FieldIns> _1b5e07a00_StructIns::_method_find_field(jule::Str _25633_ident) {
	{
		auto _range_expr = (*this)._field_fields;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b5e07a00_FieldIns> _1b5e07a00_f = *_range_begin;
			_iter_begin_4438769872:;
			{
				if (_1b5e07a00_f->_field_decl->_field_ident == _25633_ident) {
					return _1b5e07a00_f;
				}
			}
			_iter_next_4438769872:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b5e07a00_f = *_range_begin; goto _iter_begin_4438769872; }
			_iter_end_4438769872:;
		}
	}
	return jule::new_ref<_1b5e07a00_FieldIns>();
}







std::ostream &operator<<(std::ostream &_Stream, const _1b5e07a00_StructIns &_Src) {
	_Stream << "StructIns{";
	_Stream << "checked:" << _Src._field_checked << ", ";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "references:" << _Src._field_references;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b557cd24_RetType &_Src) {
	_Stream << "RetType{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "idents:" << _Src._field_idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b557cd24_ParamIns::_method_to_str(void) {
	jule::Str _18117_s = jule::Str("", 0);
	if ((*this)._field_decl->_field_mutable) {
		_18117_s+=jule::Str("mut ", 4);
	}
	if ((*this)._field_decl->_field_reference) {
		_18117_s+=jule::Str("&_:", 3);
	}
	if ((*this)._field_decl->_method_is_self()) {
		if ((*this)._field_decl->_method_is_ref()) {
			_18117_s+=jule::Str("&", 1);
		}
		_18117_s+=jule::Str("self", 4);
		return _18117_s;
	}
	if ((*this)._field_decl->_field_variadic) {
		_18117_s+=jule::Str("...", 3);
	}
	if (jule::real((*this)._field_kind)) {
		_18117_s+=(*this)._field_kind->_method_to_str();
	}
	return _18117_s;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b557cd24_ParamIns &_Src) {
	_Stream << "ParamIns{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b557cd24_FnIns::_method_to_str(void) {
	
	return (*this)._method_get_kind_str(false);
}



inline jule::Bool _1b557cd24_FnIns::_method_equals(jule::Ref<_1ac6d02c0_TypeKind> _23621_other) {
	jule::Ref<_1b557cd24_FnIns> _23713_f = (_23621_other).alloc->_method_fnc();
	if ((!(jule::real(_23713_f)))) {
		return false;
	}
	if ((*this)._field_decl->_field_statically != _23713_f->_field_decl->_field_statically) {
		return false;
	}
	if ((*this)._field_decl->_field_unsafety != _23713_f->_field_decl->_field_unsafety) {
		return false;
	}
	if ((*this)._field_generics.len() != _23713_f->_field_generics.len()) {
		return false;
	}
	if ((*this)._field_decl->_method_is_void() != _23713_f->_field_decl->_method_is_void()) {
		return false;
	}
	jule::Int _25817_i = 0LL;
	_iter_begin_4438859136:;
	if (!(_25817_i < (*this)._field_generics.len())) { goto _iter_end_4438859136; }
	{
		if ((!((*this)._field_generics[static_cast<jule::Int>(_25817_i)]->_method_equals(_23713_f->_field_generics[static_cast<jule::Int>(_25817_i)])))) {
			return false;
		}
	}
	_iter_next_4438859136:;
	(_25817_i)++;
	goto _iter_begin_4438859136;
	_iter_end_4438859136:;
	jule::Fn<jule::Bool(jule::Ref<_1b557cd24_ParamIns>,jule::Ref<_1b557cd24_ParamIns>)> _26513_check_params = jule::Fn<jule::Bool(jule::Ref<_1b557cd24_ParamIns>,jule::Ref<_1b557cd24_ParamIns>)>([=](jule::Ref<_1b557cd24_ParamIns> _26531_p1,jule::Ref<_1b557cd24_ParamIns> _26546_p2) mutable -> jule::Bool {
		if (_26531_p1->_field_decl->_field_mutable != _26546_p2->_field_decl->_field_mutable) {
			return false;
		}
		if (_26531_p1->_field_decl->_method_is_self()) {
			if ((!(_26546_p2->_field_decl->_method_is_self()))) {
				return false;
			}
			if (_26531_p1->_field_decl->_method_is_ref() != _26546_p2->_field_decl->_method_is_ref()) {
				return false;
			}
			return true;
		}
		if (_26531_p1->_field_decl->_field_reference != _26546_p2->_field_decl->_field_reference) {
			return false;
		}
		if (_26531_p1->_field_decl->_field_variadic != _26546_p2->_field_decl->_field_variadic) {
			return false;
		}
		return _26531_p1->_field_kind->_method_equals(_26546_p2->_field_kind);
	});
	_25817_i=0LL;
	_iter_begin_4438868384:;
	if (!(_25817_i < (*this)._field_params.len())) { goto _iter_end_4438868384; }
	{
		if ((!(_26513_check_params((*this)._field_params[static_cast<jule::Int>(_25817_i)],_23713_f->_field_params[static_cast<jule::Int>(_25817_i)])))) {
			return false;
		}
	}
	_iter_next_4438868384:;
	(_25817_i)++;
	goto _iter_begin_4438868384;
	_iter_end_4438868384:;
	if ((!((*this)._field_decl->_method_is_void()))) {
		if ((!((*this)._field_result->_method_equals(_23713_f->_field_result)))) {
			return false;
		}
	}
	return true;
}



inline jule::Bool _1b557cd24_FnIns::_method_is_builtin(void) {
	return (*this)._field_caller != nullptr;
}



inline jule::Bool _1b557cd24_FnIns::_method_is_anon(void) {
	return (*this)._field_anon || (jule::real((*this)._field_decl) && (*this)._field_decl->_method_is_anon());
}



inline jule::Str _1b557cd24_FnIns::_method_get_kind_str(jule::Bool _32031_ident) {
	jule::Str _32117_s = jule::Str("", 0);
	if ((*this)._field_decl->_field_statically) {
		_32117_s+=jule::Str("static ", 7);
	}
	if ((*this)._field_decl->_field_unsafety) {
		_32117_s+=jule::Str("unsafe ", 7);
	}
	_32117_s+=jule::Str("fn", 2);
	if (_32031_ident && jule::real((*this)._field_decl)) {
		_32117_s+=jule::Str(" ", 1) + (*this)._field_decl->_field_ident;
	}
	if ((*this)._field_generics.len() > 0LL) {
		_32117_s+=jule::Str("[", 1);
		{
			auto _range_expr = (*this)._field_generics;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Int _1b557cd24_i = 0;
				jule::Ref<_1ac6d02c0_TypeKind> _1b557cd24_t = *_range_begin;
				_iter_begin_4438906224:;
				{
					_32117_s+=_1b557cd24_t->_method_to_str();
					if ((_1b557cd24_i + 1LL) < (*this)._field_generics.len()) {
						_32117_s+=jule::Str(",", 1);
					}
				}
				_iter_next_4438906224:;
				++_range_begin;
				if (_range_begin != _range_end) { ++_1b557cd24_i; _1b557cd24_t = *_range_begin; goto _iter_begin_4438906224; }
				_iter_end_4438906224:;
			}
		}
		_32117_s+=jule::Str("]", 1);
	} else if ((*this)._field_decl->_field_generics.len() > 0LL) {
		_32117_s+=jule::Str("[", 1);
		{
			auto _range_expr = (*this)._field_decl->_field_generics;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Int _1b557cd24_i = 0;
				jule::Ref<_1b61ca014_GenericDecl> _1b557cd24_g = *_range_begin;
				_iter_begin_4438913824:;
				{
					_32117_s+=_1b557cd24_g->_field_ident;
					if ((_1b557cd24_i + 1LL) < (*this)._field_decl->_field_generics.len()) {
						_32117_s+=jule::Str(",", 1);
					}
				}
				_iter_next_4438913824:;
				++_range_begin;
				if (_range_begin != _range_end) { ++_1b557cd24_i; _1b557cd24_g = *_range_begin; goto _iter_begin_4438913824; }
				_iter_end_4438913824:;
			}
		}
		_32117_s+=jule::Str("]", 1);
	}
	_32117_s+=jule::Str("(", 1);
	jule::I64 _35813_n = (*this)._field_params.len();
	if (_35813_n > 0LL) {
		{
			auto _range_expr = (*this)._field_params;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_1b557cd24_ParamIns> _1b557cd24_p = *_range_begin;
				_iter_begin_4438921072:;
				{
					_32117_s+=_1b557cd24_p->_method_to_str();
					_32117_s+=jule::Str(",", 1);
				}
				_iter_next_4438921072:;
				++_range_begin;
				if (_range_begin != _range_end) { _1b557cd24_p = *_range_begin; goto _iter_begin_4438921072; }
				_iter_end_4438921072:;
			}
		}
		_32117_s=_32117_s.slice(0LL,static_cast<jule::Int>(_32117_s.len() - 1LL));
	}
	_32117_s+=jule::Str(")", 1);
	if ((!((*this)._field_decl->_method_is_void()))) {
		_32117_s+=jule::Str(":", 1);
		_32117_s+=(*this)._field_result->_method_to_str();
	}
	return _32117_s;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b557cd24_FnIns &_Src) {
	_Stream << "FnIns{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "params:" << _Src._field_params << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "references:" << _Src._field_references << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "caller:" << _Src._field_caller << ", ";
	_Stream << "reloaded:" << _Src._field_reloaded << ", ";
	_Stream << "anon:" << _Src._field_anon;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_1b5589c76_ReferenceStack> _1b5589c76_ReferenceStack::_static_method_new(void) {
	return jule::new_struct<_1b5589c76_ReferenceStack>(new( std::nothrow ) _1b5589c76_ReferenceStack());
}



inline jule::Int _1b5589c76_ReferenceStack::_method_len(void) {
	return static_cast<jule::I64>((*this)._field_buffer.len());
}



inline jule::Any _1b5589c76_ReferenceStack::_method_at(jule::Int _5825_i) {
	return (*this)._field_buffer[static_cast<jule::Int>(_5825_i)];
}



inline void _1b5589c76_ReferenceStack::_method_push(jule::Any _6331_ref) {
	(*this)._field_buffer=jule::append((*this)._field_buffer,jule::Slice<jule::Any>({_6331_ref}));
}



inline jule::Bool _1b5589c76_ReferenceStack::_method_exist_0(jule::Ref<_1b623eab2_Var> _6827_t) {
	{
		auto _range_expr = (*this)._field_buffer;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Any _1b5589c76_ref = *_range_begin;
			_iter_begin_4442612368:;
			{
				{
					auto _match_expr{ _1b5589c76_ref };
					if (!(_match_expr.type_is<jule::Ref<_1b623eab2_Var>>())) { goto _case_end_4442614240; }
					_case_begin_4442614240:;
					{
						if ((_1b5589c76_ref.operator jule::Ref<_1b623eab2_Var>()).alloc == (_6827_t).alloc) {
							return true;
						}
					}
					goto _match_end_4442613680;
					_case_end_4442614240:;
					_match_end_4442613680:;
				}
			}
			_iter_next_4442612368:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b5589c76_ref = *_range_begin; goto _iter_begin_4442612368; }
			_iter_end_4442612368:;
		}
	}
	return false;
}

inline jule::Bool _1b5589c76_ReferenceStack::_method_exist_1(jule::Ref<_1b557cd24_FnIns> _6827_t) {
	{
		auto _range_expr = (*this)._field_buffer;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Any _1b5589c76_ref = *_range_begin;
			_iter_begin_4442623904:;
			{
				{
					auto _match_expr{ _1b5589c76_ref };
					if (!(_match_expr.type_is<jule::Ref<_1b557cd24_FnIns>>())) { goto _case_end_4442625776; }
					_case_begin_4442625776:;
					{
						if ((_1b5589c76_ref.operator jule::Ref<_1b557cd24_FnIns>()).alloc == (_6827_t).alloc) {
							return true;
						}
					}
					goto _match_end_4442625216;
					_case_end_4442625776:;
					_match_end_4442625216:;
				}
			}
			_iter_next_4442623904:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b5589c76_ref = *_range_begin; goto _iter_begin_4442623904; }
			_iter_end_4442623904:;
		}
	}
	return false;
}

inline jule::Bool _1b5589c76_ReferenceStack::_method_exist_2(jule::Ref<_1b5e07a00_StructIns> _6827_t) {
	{
		auto _range_expr = (*this)._field_buffer;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Any _1b5589c76_ref = *_range_begin;
			_iter_begin_4442664544:;
			{
				{
					auto _match_expr{ _1b5589c76_ref };
					if (!(_match_expr.type_is<jule::Ref<_1b5e07a00_StructIns>>())) { goto _case_end_4442666416; }
					_case_begin_4442666416:;
					{
						if ((_1b5589c76_ref.operator jule::Ref<_1b5e07a00_StructIns>()).alloc == (_6827_t).alloc) {
							return true;
						}
					}
					goto _match_end_4442665856;
					_case_end_4442666416:;
					_match_end_4442665856:;
				}
			}
			_iter_next_4442664544:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b5589c76_ref = *_range_begin; goto _iter_begin_4442664544; }
			_iter_end_4442664544:;
		}
	}
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b5589c76_ReferenceStack &_Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_1b5589c76_SymbolBuilder> _1b5589c76_SymbolBuilder::_method_get_root(void) {
	jule::Ref<_1b5589c76_SymbolBuilder> _30517_root = this->self;
	_iter_begin_4438936704:;
	if (!(jule::real(_30517_root->_field_owner))) { goto _iter_end_4438936704; }
	{
		_30517_root=_30517_root->_field_owner;
	}
	_iter_next_4438936704:;
	goto _iter_begin_4438936704;
	_iter_end_4438936704:;
	return _30517_root;
}



inline void _1b5589c76_SymbolBuilder::_method_push_err(_1b61ec5ec_Token& _31228_token,jule::Str _31242_fmt,jule::Slice<jule::Any> _31255_args) {
	(*this)._field_errors=jule::append((*this)._field_errors,jule::Slice<_1cdeeb191_Log>({_1ab195050_compiler_err(_31228_token,true,_31242_fmt,_31255_args)}));
}



inline void _1b5589c76_SymbolBuilder::_method_push_err_text(_1b61ec5ec_Token& _31633_token,jule::Str _31647_fmt,jule::Slice<jule::Any> _31660_args) {
	(*this)._field_errors=jule::append((*this)._field_errors,jule::Slice<_1cdeeb191_Log>({_1ab195050_compiler_err(_31633_token,false,_31647_fmt,_31660_args)}));
}



inline void _1b5589c76_SymbolBuilder::_method_push_suggestion(jule::Str _32134_fmt,jule::Slice<jule::Any> _32147_args) {
	{
		_1ab195050_push_suggestion((&((*this)._field_errors[static_cast<jule::Int>((*this)._field_errors.len() - 1LL)])),_32134_fmt,_32147_args);
	}
}



inline jule::Bool _1b5589c76_SymbolBuilder::_method_check_cpp_use_decl_path(jule::Ref<_1b61ca014_UseDecl>& _32543_decl) {
	jule::Bool _32561_ok = jule::Bool();
	if (_1cdee4c4a_is_std_header_path(_32543_decl->_field_link_path)) {
		_32561_ok = true;
		return _32561_ok;
	}
	jule::Str _33013_ext = _1cdd187e9_ext(_32543_decl->_field_link_path);
	if ((!(_1cdee4c4a_is_valid_header_ext(_33013_ext))) && (!(_1cdee4c4a_is_valid_cpp_ext(_33013_ext)))) {
		(*this)._method_push_err(_32543_decl->_field_token,jule::Str("invalid C++ extension: @", 24),jule::Slice<jule::Any>({jule::Any(_33013_ext)}));
		_32561_ok = false;
		return _32561_ok;
	}
	jule::Ref<_1a8bb56ee_Status> _33614_info;
	jule::Int _33620_err;
	std::tie(_33614_info,_33620_err) = _1b618d48e_stat(_32543_decl->_field_link_path);
	if ((_33620_err != 0LLU) || _33614_info->_method_is_dir()) {
		(*this)._method_push_err(_32543_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_32543_decl->_field_link_path)}));
		_32561_ok = false;
		return _32561_ok;
	}
	_32561_ok = true;
	return _32561_ok;
}



inline jule::Ref<_1ab194c20_ImportInfo> _1b5589c76_SymbolBuilder::_method_build_cpp_header_import(jule::Ref<_1b61ca014_UseDecl>& _34647_decl) {
	jule::Str _34717_path = _34647_decl->_field_link_path;
	if ((!(_1cdee4c4a_is_std_header_path(_34647_decl->_field_link_path)))) {
		jule::Bool _35021_ok = (*this)._method_check_cpp_use_decl_path(_34647_decl);
		if ((!(_35021_ok))) {
			return jule::new_ref<_1ab194c20_ImportInfo>();
		}
		std::tie(_34717_path,_35021_ok) = _1cdd187e9_abs(_34647_decl->_field_link_path);
		if ((!(_35021_ok))) {
			(*this)._method_push_err(_34647_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_34647_decl->_field_link_path)}));
		}
	}
	return jule::new_struct<_1ab194c20_ImportInfo>(new( std::nothrow ) _1ab194c20_ImportInfo(_34647_decl->_field_token,_34717_path,_34647_decl->_field_link_path,jule::Str("", 0),jule::Str(),jule::Bool(),true,false,jule::Bool(),jule::Slice<_1b61ec5ec_Token>(),jule::new_ref<_1ab194c20_Package>()));
}



inline jule::Ref<_1ab194c20_ImportInfo> _1b5589c76_SymbolBuilder::_method_build_std_import(jule::Ref<_1b61ca014_UseDecl>& _37340_decl) {
	jule::Str _37417_path = _37340_decl->_field_link_path.slice(static_cast<jule::Int>(jule::Str("std::", 5).len()));
	_37417_path=_37417_path.replace(jule::Str("::", 2),static_cast<jule::Str>(47LL),-1LL);
	_37417_path=_1cdd187e9_join(jule::Slice<jule::Str>({_1ce0450b9_PATH_STDLIB,_37417_path}));
	jule::Bool _37720_ok;
	std::tie(_37417_path,_37720_ok) = _1cdd187e9_abs(_37417_path);
	if ((!(_37720_ok))) {
		(*this)._method_push_err(_37340_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_37340_decl->_field_link_path)}));
		return jule::new_ref<_1ab194c20_ImportInfo>();
	}
	jule::Ref<_1a8bb56ee_Status> _38314_info;
	jule::Int _38320_err;
	std::tie(_38314_info,_38320_err) = _1b618d48e_stat(_37417_path);
	if ((_38320_err != 0LLU) || (!(_38314_info->_method_is_dir()))) {
		(*this)._method_push_err(_37340_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_37340_decl->_field_link_path)}));
		return jule::new_ref<_1ab194c20_ImportInfo>();
	}
	jule::Str _39113_ident = _37340_decl->_field_link_path.slice(static_cast<jule::Int>(_37340_decl->_field_link_path.rfind(jule::Str("::", 2)) + 1LL));
	return jule::new_struct<_1ab194c20_ImportInfo>(new( std::nothrow ) _1ab194c20_ImportInfo(_37340_decl->_field_token,_37417_path,_37340_decl->_field_link_path,_39113_ident,_37340_decl->_field_alias,jule::Bool(),false,true,_37340_decl->_field_full,jule::Slice<_1b61ec5ec_Token>(),jule::new_struct<_1ab194c20_Package>(new( std::nothrow ) _1ab194c20_Package(nullptr))));
}



inline jule::Ref<_1ab194c20_ImportInfo> _1b5589c76_SymbolBuilder::_method_build_ident_import(jule::Ref<_1b61ca014_UseDecl>& _40843_decl) {
	jule::Str _40917_path = _40843_decl->_field_link_path;
	_40917_path=_40917_path.replace(jule::Str("::", 2),static_cast<jule::Str>(47LL),-1LL);
	_40917_path=_1cdd187e9_join(jule::Slice<jule::Str>({this->self->_method_get_root()->_field_ast->_field_file->_method_dir(),_40917_path}));
	jule::Bool _41320_ok;
	std::tie(_40917_path,_41320_ok) = _1cdd187e9_abs(_40917_path);
	if ((!(_41320_ok))) {
		this->self->_method_push_err(_40843_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_40843_decl->_field_link_path)}));
		return jule::new_ref<_1ab194c20_ImportInfo>();
	}
	jule::Ref<_1a8bb56ee_Status> _41914_info;
	jule::Int _41920_err;
	std::tie(_41914_info,_41920_err) = _1b618d48e_stat(_40917_path);
	if ((_41920_err != 0LLU) || (!(_41914_info->_method_is_dir()))) {
		this->self->_method_push_err(_40843_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_40843_decl->_field_link_path)}));
		return jule::new_ref<_1ab194c20_ImportInfo>();
	}
	jule::Str _42713_ident = _40843_decl->_field_link_path.slice(static_cast<jule::Int>(_40843_decl->_field_link_path.rfind(jule::Str("::", 2)) + 1LL));
	return jule::new_struct<_1ab194c20_ImportInfo>(new( std::nothrow ) _1ab194c20_ImportInfo(_40843_decl->_field_token,_40917_path,_40843_decl->_field_link_path,_42713_ident,_40843_decl->_field_alias,jule::Bool(),false,false,_40843_decl->_field_full,jule::Slice<_1b61ec5ec_Token>(),jule::new_struct<_1ab194c20_Package>(new( std::nothrow ) _1ab194c20_Package(nullptr))));
}



inline jule::Ref<_1ab194c20_ImportInfo> _1b5589c76_SymbolBuilder::_method_build_import(jule::Ref<_1b61ca014_UseDecl>& _44437_decl) {
	{
		if (!((_44437_decl->_field_cpp_linked))) { goto _case_end_4439035376; }
		_case_begin_4439035376:;
		{
			return this->self->_method_build_cpp_header_import(_44437_decl);
		}
		goto _match_end_4439033744;
		_case_end_4439035376:;
		if (!((_44437_decl->_field_std))) { goto _case_end_4439034976; }
		_case_begin_4439034976:;
		{
			return this->self->_method_build_std_import(_44437_decl);
		}
		goto _match_end_4439033744;
		_case_end_4439034976:;
		_case_begin_4439033920:;
		{
			return this->self->_method_build_ident_import(_44437_decl);
		}
		goto _match_end_4439033744;
		_case_end_4439033920:;
		_match_end_4439033744:;
	}
}



inline jule::Bool _1b5589c76_SymbolBuilder::_method_check_duplicate_use_decl(jule::Ref<_1ab194c20_ImportInfo>& _45244_pkg) {
	jule::Bool _45264_ok = jule::Bool();
	jule::Ref<_1ab194c20_ImportInfo> _45413_lpkg = (*this)._field_table->_method_select_package(jule::Fn<jule::Bool(jule::Ref<_1ab194c20_ImportInfo>)>([=](jule::Ref<_1ab194c20_ImportInfo> _45449_spkg) mutable -> jule::Bool {
		return _45244_pkg->_field_path == _45449_spkg->_field_path;
	}));
	if ((!(jule::real(_45413_lpkg)))) {
		_45264_ok = true;
		return _45264_ok;
	}
	(*this)._method_push_err(_45244_pkg->_field_token,jule::Str("duplicate use declaration: @", 28),jule::Slice<jule::Any>({jule::Any(_45244_pkg->_field_link_path)}));
	(*this)._method_push_suggestion(jule::Str("remove this use declaration, already used, it is safe", 53),jule::Slice<jule::Any>({}));
	_45264_ok = false;
	return _45264_ok;
}



inline void _1b5589c76_SymbolBuilder::_method_impl_import_selections(jule::Ref<_1ab194c20_ImportInfo>& _46646_imp,jule::Ref<_1b61ca014_UseDecl>& _46669_decl) {
	{
		auto _range_expr = _46669_decl->_field_selected;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			_1b61ec5ec_Token _1b5589c76_ident = *_range_begin;
			_iter_begin_4439056736:;
			{
				if (_46646_imp->_method_exist_ident(_1b5589c76_ident._field_kind)) {
					(*this)._method_push_err(_1b5589c76_ident,jule::Str("duplicated identifier selection: @", 34),jule::Slice<jule::Any>({jule::Any(_1b5589c76_ident._field_kind)}));
					(*this)._method_push_suggestion(jule::Str("remove this use selection, already selected, it is safe", 55),jule::Slice<jule::Any>({}));
					goto _iter_next_4439056736;
				}
				_46646_imp->_field_selected=jule::append(_46646_imp->_field_selected,jule::Slice<_1b61ec5ec_Token>({_1b5589c76_ident}));
			}
			_iter_next_4439056736:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b5589c76_ident = *_range_begin; goto _iter_begin_4439056736; }
			_iter_end_4439056736:;
		}
	}
}



inline jule::Str _1b5589c76_SymbolBuilder::_method_get_as_link_path(jule::Str _47840_path) {
	if (_47840_path.has_prefix(_1ce0450b9_PATH_STDLIB)) {
		_47840_path=_47840_path.slice(static_cast<jule::Int>(_1ce0450b9_PATH_STDLIB.len()));
		return jule::Str("std", 3) + _47840_path.replace(static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL);
	}
	jule::Str _48414_root;
	std::tie(_48414_root,std::ignore) = _1cdd187e9_abs(this->self->_method_get_root()->_field_ast->_field_file->_method_dir());
	_47840_path=_47840_path.slice(static_cast<jule::Int>(_48414_root.len()));
	if (_47840_path[0LL] == 47LL) {
		_47840_path=_47840_path.slice(1LL);
	}
	return _47840_path.replace(static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL);
}



inline void _1b5589c76_SymbolBuilder::_method_push_cycle_error(jule::Ref<_1b5589c76_SymbolBuilder>& _49237_sb,jule::Str _49257_path,jule::Str& _49273_message) {
	
	jule::Str _49513_refers_to = _1cdeeb191_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(this->self->_method_get_as_link_path(_49237_sb->_field_table->_field_file->_method_dir())),jule::Any(this->self->_method_get_as_link_path(_49257_path))}));
	_49273_message=((_1b5589c76_str_repeat(jule::Str(" ", 1),4LL) + _49513_refers_to) + jule::Str("\n", 1)) + _49273_message;
}



inline void _1b5589c76_SymbolBuilder::_method_push_cross_cycle_error(jule::Ref<_1b5589c76_SymbolBuilder>& _50243_target,jule::Ref<_1ab194c20_ImportInfo>& _50268_imp,_1b61ec5ec_Token& _50287_error_token) {
	jule::Str _50317_message = jule::Str("", 0);
	this->self->_method_push_cycle_error(this->self,_50268_imp->_field_path,_50317_message);
	jule::Ref<_1b5589c76_SymbolBuilder> _50717_owner = this->self->_field_owner;
	jule::Ref<_1b5589c76_SymbolBuilder> _50817_old = this->self;
	_iter_begin_4439097920:;
	if (!(jule::real(_50717_owner->_field_owner))) { goto _iter_end_4439097920; }
	{
		this->self->_method_push_cycle_error(_50817_old->_field_owner,_50817_old->_field_table->_field_file->_method_dir(),_50317_message);
		if ((_50717_owner->_field_owner).alloc == (_50243_target).alloc) {
			this->self->_method_push_cycle_error(_50243_target,_50717_owner->_field_table->_field_file->_method_dir(),_50317_message);
			goto _iter_end_4439097920;
		}
		_50817_old=_50717_owner;
		_50717_owner=_50717_owner->_field_owner;
	}
	_iter_next_4439097920:;
	goto _iter_begin_4439097920;
	_iter_end_4439097920:;
	this->self->_method_push_err(_50287_error_token,jule::Str("illegal cross cycle in use declarations;\n@", 42),jule::Slice<jule::Any>({jule::Any(_50317_message)}));
}



inline jule::Bool _1b5589c76_SymbolBuilder::_method_check_import_cycles(jule::Ref<_1ab194c20_ImportInfo> _52539_imp,jule::Ref<_1b61ca014_UseDecl>& _52558_decl) {
	if (_52539_imp->_field_path == this->self->_field_table->_field_file->_method_dir()) {
		this->self->_method_push_err(_52558_decl->_field_token,jule::Str("illegal cycle in use declaration, package @ refers to itself", 60),jule::Slice<jule::Any>({jule::Any(this->self->_method_get_as_link_path(_52539_imp->_field_path))}));
		return false;
	}
	if ((!(jule::real(this->self->_field_owner)))) {
		return true;
	}
	if (this->self->_field_owner->_field_table->_field_file->_method_dir() == _52539_imp->_field_path) {
		this->self->_method_push_cross_cycle_error(this->self->_field_owner,_52539_imp,_52558_decl->_field_token);
		return false;
	}
	jule::Ref<_1b5589c76_SymbolBuilder> _54017_owner = this->self->_field_owner;
	_julec_label_iter:;
	if (_54017_owner->_field_table->_field_file->_method_dir() == _52539_imp->_field_path) {
		this->self->_method_push_cross_cycle_error(_54017_owner,_52539_imp,_52558_decl->_field_token);
		return false;
	}
	if (jule::real(_54017_owner->_field_owner)) {
		_54017_owner=_54017_owner->_field_owner;
		goto _julec_label_iter;
	}
	return true;
}



inline jule::Bool _1b5589c76_SymbolBuilder::_method_import_package(jule::Ref<_1ab194c20_ImportInfo>& _55539_imp,jule::Ref<_1b61ca014_UseDecl>& _55562_decl) {
	jule::Bool _55580_ok = jule::Bool();
	if (_55539_imp->_field_cpp_linked) {
		_55580_ok = true;
		return _55580_ok;
	}
	jule::Ref<_1ab194c20_ImportInfo> _56017_port = this->self->_field_importer.get()._method_get_import(_55539_imp->_field_path);
	if (jule::real(_56017_port)) {
		_55539_imp->_field_package=_56017_port->_field_package;
		_55539_imp->_field_duplicate=true;
	} else {
		if ((!(this->self->_method_check_import_cycles(_55539_imp,_55562_decl)))) {
			_55580_ok = false;
			return _55580_ok;
		}
		jule::Slice<jule::Ref<_1b61d1d62_Ast>> _56922_asts;
		jule::Slice<_1cdeeb191_Log> _56928_errors;
		std::tie(_56922_asts,_56928_errors) = this->self->_field_importer.get()._method_import_package(_55539_imp->_field_path);
		if (_56928_errors.len() > 0LL) {
			this->self->_field_errors=jule::append(this->self->_field_errors,_56928_errors);
			_55580_ok = false;
			return _55580_ok;
		}
		{
			auto _range_expr = _56922_asts;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_1b61d1d62_Ast> _1b5589c76_ast = *_range_begin;
				_iter_begin_4439145872:;
				{
					jule::Ref<_1ab00cc20_SymbolTable> _57626_table;
					jule::Slice<_1cdeeb191_Log> _57633_errors;
					std::tie(_57626_table,_57633_errors) = _1aae299b6_build_symbols(_1b5589c76_ast,this->self->_field_importer,this->self);
					if (_57633_errors.len() > 0LL) {
						this->self->_field_errors=jule::append(this->self->_field_errors,_57633_errors);
						this->self->_method_push_err_text(_55539_imp->_field_token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>({jule::Any(_55539_imp->_field_link_path)}));
						_55580_ok = false;
						return _55580_ok;
					}
					_55539_imp->_field_package->_field_files=jule::append(_55539_imp->_field_package->_field_files,jule::Slice<jule::Ref<_1ab00cc20_SymbolTable>>({_57626_table}));
				}
				_iter_next_4439145872:;
				++_range_begin;
				if (_range_begin != _range_end) { _1b5589c76_ast = *_range_begin; goto _iter_begin_4439145872; }
				_iter_end_4439145872:;
			}
		}
	}
	this->self->_method_impl_import_selections(_55539_imp,_55562_decl);
	_55580_ok = true;
	return _55580_ok;
}



inline jule::Ref<_1ab194c20_ImportInfo> _1b5589c76_SymbolBuilder::_method_import_use_decl(jule::Ref<_1b61ca014_UseDecl>& _59440_decl) {
	jule::Ref<_1ab194c20_ImportInfo> _59517_imp = this->self->_method_build_import(_59440_decl);
	if ((!(jule::real(_59517_imp)))) {
		return jule::new_ref<_1ab194c20_ImportInfo>();
	}
	jule::Bool _60117_ok = this->self->_method_check_duplicate_use_decl(_59517_imp);
	if ((!(_60117_ok))) {
		return jule::new_ref<_1ab194c20_ImportInfo>();
	}
	if ((_59517_imp->_field_alias.len() != 0LL) && (_59440_decl->_field_selected.len() > 0LL)) {
		this->self->_method_push_err(_59440_decl->_field_token,jule::Str("use aliases cannot useable for selected package defines", 55),jule::Slice<jule::Any>({}));
	}
	_60117_ok=this->self->_method_import_package(_59517_imp,_59440_decl);
	this->self->_field_table->_field_imports=jule::append(this->self->_field_table->_field_imports,jule::Slice<jule::Ref<_1ab194c20_ImportInfo>>({_59517_imp}));
	if (_60117_ok) {
		this->self->_field_importer.get()._method_imported(_59517_imp);
		return _59517_imp;
	}
	return jule::new_ref<_1ab194c20_ImportInfo>();
}



inline void _1b5589c76_SymbolBuilder::_method_import_use_decls(void) {
	{
		auto _range_expr = this->self->_field_ast->_field_use_decls;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b61ca014_UseDecl> _1b5589c76_decl = *_range_begin;
			_iter_begin_4439169552:;
			{
				this->self->_method_import_use_decl(_1b5589c76_decl);
				if (this->self->_field_errors.len() > 0LL) {
					goto _iter_end_4439169552;
				}
			}
			_iter_next_4439169552:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b5589c76_decl = *_range_begin; goto _iter_begin_4439169552; }
			_iter_end_4439169552:;
		}
	}
}



inline void _1b5589c76_SymbolBuilder::_method_append_decl(_1b61ca014_Node& _63035_decl) {
	{
		auto _match_expr{ _63035_decl._field_data };
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_TypeAliasDecl>>())) { goto _case_end_4439175888; }
		_case_begin_4439175888:;
		{
			jule::Ref<_1ac6d02c0_TypeAlias> _63321_ta = _1b5589c76_build_type_alias(_63035_decl._field_data.operator jule::Ref<_1b61ca014_TypeAliasDecl>());
			(*this)._field_table->_field_type_aliases=jule::append((*this)._field_table->_field_type_aliases,jule::Slice<jule::Ref<_1ac6d02c0_TypeAlias>>({_63321_ta}));
		}
		goto _match_end_4439174416;
		_case_end_4439175888:;
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_StructDecl>>())) { goto _case_end_4439175408; }
		_case_begin_4439175408:;
		{
			jule::Ref<_1b5e07a00_Struct> _63721_srct = _1b5589c76_build_struct(_63035_decl._field_data.operator jule::Ref<_1b61ca014_StructDecl>());
			(*this)._field_table->_field_structs=jule::append((*this)._field_table->_field_structs,jule::Slice<jule::Ref<_1b5e07a00_Struct>>({_63721_srct}));
		}
		goto _match_end_4439174416;
		_case_end_4439175408:;
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_FnDecl>>())) { goto _case_end_4439175520; }
		_case_begin_4439175520:;
		{
			jule::Ref<_1b557cd24_Fn> _64121_f = _1b5589c76_build_fn(_63035_decl._field_data.operator jule::Ref<_1b61ca014_FnDecl>());
			(*this)._field_table->_field_funcs=jule::append((*this)._field_table->_field_funcs,jule::Slice<jule::Ref<_1b557cd24_Fn>>({_64121_f}));
		}
		goto _match_end_4439174416;
		_case_end_4439175520:;
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_TraitDecl>>())) { goto _case_end_4439175632; }
		_case_begin_4439175632:;
		{
			jule::Ref<_1aaee9091_Trait> _64521_t = _1b5589c76_build_trait(_63035_decl._field_data.operator jule::Ref<_1b61ca014_TraitDecl>());
			(*this)._field_table->_field_traits=jule::append((*this)._field_table->_field_traits,jule::Slice<jule::Ref<_1aaee9091_Trait>>({_64521_t}));
		}
		goto _match_end_4439174416;
		_case_end_4439175632:;
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_VarDecl>>())) { goto _case_end_4439177712; }
		_case_begin_4439177712:;
		{
			jule::Ref<_1b623eab2_Var> _64921_v = _1b5589c76_build_var(_63035_decl._field_data.operator jule::Ref<_1b61ca014_VarDecl>());
			(*this)._field_table->_field_vars=jule::append((*this)._field_table->_field_vars,jule::Slice<jule::Ref<_1b623eab2_Var>>({_64921_v}));
		}
		goto _match_end_4439174416;
		_case_end_4439177712:;
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_EnumDecl>>())) { goto _case_end_4439177824; }
		_case_begin_4439177824:;
		{
			jule::Ref<_1a909ac6b_Enum> _65321_e = _1b5589c76_build_enum(_63035_decl._field_data.operator jule::Ref<_1b61ca014_EnumDecl>());
			(*this)._field_table->_field_enums=jule::append((*this)._field_table->_field_enums,jule::Slice<jule::Ref<_1a909ac6b_Enum>>({_65321_e}));
		}
		goto _match_end_4439174416;
		_case_end_4439177824:;
		_case_begin_4439175104:;
		{
			(*this)._method_push_err(_63035_decl._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4439174416;
		_case_end_4439175104:;
		_match_end_4439174416:;
	}
}



inline void _1b5589c76_SymbolBuilder::_method_append_decls(void) {
	{
		auto _range_expr = (*this)._field_ast->_field_decls;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			_1b61ca014_Node _1b5589c76_decl = *_range_begin;
			_iter_begin_4439200224:;
			{
				(*this)._method_append_decl(_1b5589c76_decl);
			}
			_iter_next_4439200224:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b5589c76_decl = *_range_begin; goto _iter_begin_4439200224; }
			_iter_end_4439200224:;
		}
	}
}



inline void _1b5589c76_SymbolBuilder::_method_append_impls(void) {
	(*this)._field_table->_field_impls=jule::Slice<jule::Ref<_1ab0017b3_Impl>>::alloc(0LL,static_cast<jule::Int>(static_cast<jule::I64>((*this)._field_ast->_field_impls.len())));
	{
		auto _range_expr = (*this)._field_ast->_field_impls;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b61ca014_Impl> _1b5589c76_decl = *_range_begin;
			_iter_begin_4439206864:;
			{
				(*this)._field_table->_field_impls=jule::append((*this)._field_table->_field_impls,jule::Slice<jule::Ref<_1ab0017b3_Impl>>({_1b5589c76_build_impl(_1b5589c76_decl)}));
			}
			_iter_next_4439206864:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b5589c76_decl = *_range_begin; goto _iter_begin_4439206864; }
			_iter_end_4439206864:;
		}
	}
}



inline void _1b5589c76_SymbolBuilder::_method_push_directive_pass(jule::Ref<_1b61ca014_Directive>& _67443_d) {
	_1b5589c76_Pass _67517_pass = _1b5589c76_Pass(_67443_d->_field_token,jule::Str());
	{
		auto _range_expr = _67443_d->_field_args;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _1b5589c76_arg = *_range_begin;
			_iter_begin_4439215280:;
			{
				if (_1b5589c76_arg != jule::Str("", 0)) {
					_67517_pass._field_text+=_1b5589c76_arg + jule::Str(" ", 1);
				}
			}
			_iter_next_4439215280:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b5589c76_arg = *_range_begin; goto _iter_begin_4439215280; }
			_iter_end_4439215280:;
		}
	}
	_67517_pass._field_text=_67517_pass._field_text.trim(jule::Str(" \n\r\t\v", 5));
	(*this)._field_table->_field_passes=jule::append((*this)._field_table->_field_passes,jule::Slice<_1b5589c76_Pass>({_67517_pass}));
}



inline void _1b5589c76_SymbolBuilder::_method_append_top_directives(void) {
	{
		auto _range_expr = (*this)._field_ast->_field_top_directives;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b61ca014_Directive> _1b5589c76_d = *_range_begin;
			_iter_begin_4439220592:;
			{
				{
					auto _match_expr{ _1b5589c76_d->_field_tag };
					if (!((jule::Str("pass", 4)) == _match_expr)) { goto _case_end_4439224528; }
					_case_begin_4439224528:;
					{
						(*this)._method_push_directive_pass(_1b5589c76_d);
					}
					goto _match_end_4439223744;
					_case_end_4439224528:;
					_match_end_4439223744:;
				}
			}
			_iter_next_4439220592:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b5589c76_d = *_range_begin; goto _iter_begin_4439220592; }
			_iter_end_4439220592:;
		}
	}
}



inline void _1b5589c76_SymbolBuilder::_method_build(void) {
	this->self->_field_table=jule::new_struct<_1ab00cc20_SymbolTable>(new( std::nothrow ) _1ab00cc20_SymbolTable(this->self->_field_ast->_field_file,jule::Slice<_1b5589c76_Pass>(),jule::Slice<jule::Ref<_1ab194c20_ImportInfo>>(),jule::Slice<jule::Ref<_1b623eab2_Var>>(),jule::Slice<jule::Ref<_1ac6d02c0_TypeAlias>>(),jule::Slice<jule::Ref<_1b5e07a00_Struct>>(),jule::Slice<jule::Ref<_1b557cd24_Fn>>(),jule::Slice<jule::Ref<_1aaee9091_Trait>>(),jule::Slice<jule::Ref<_1a909ac6b_Enum>>(),jule::Slice<jule::Ref<_1ab0017b3_Impl>>()));
	this->self->_method_append_top_directives();
	this->self->_method_import_use_decls();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_append_decls();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_append_impls();
}







std::ostream &operator<<(std::ostream &_Stream, const _1b5589c76_SymbolBuilder &_Src) {
	_Stream << "SymbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab009de8_Scope &_Src) {
	_Stream << "Scope{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "deferred:" << _Src._field_deferred << ", ";
	_Stream << "stmts:" << _Src._field_stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab009de8_If &_Src) {
	_Stream << "If{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab009de8_Else &_Src) {
	_Stream << "Else{";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab009de8_Conditional &_Src) {
	_Stream << "Conditional{";
	_Stream << "elifs:" << _Src._field_elifs << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab009de8_InfIter &_Src) {
	_Stream << "InfIter{";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ab009de8_WhileIter::_method_is_while_next(void) {
	return (*this)._field_next != nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab009de8_WhileIter &_Src) {
	_Stream << "WhileIter{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "next:" << _Src._field_next << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab009de8_RangeIter &_Src) {
	_Stream << "RangeIter{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "key_a:" << _Src._field_key_a << ", ";
	_Stream << "key_b:" << _Src._field_key_b;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab009de8_ContSt &_Src) {
	_Stream << "ContSt{";
	_Stream << "it:" << _Src._field_it;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab009de8_BreakSt &_Src) {
	_Stream << "BreakSt{";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "mtch:" << _Src._field_mtch;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab009de8_Label &_Src) {
	_Stream << "Label{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab009de8_GotoSt &_Src) {
	_Stream << "GotoSt{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab009de8_Postfix &_Src) {
	_Stream << "Postfix{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab009de8_Assign &_Src) {
	_Stream << "Assign{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab009de8_MultiAssign &_Src) {
	_Stream << "MultiAssign{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab009de8_Match &_Src) {
	_Stream << "Match{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "type_match:" << _Src._field_type_match << ", ";
	_Stream << "cases:" << _Src._field_cases << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ab009de8_Case::_method_is_default(void) {
	return (*this)._field_exprs == nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab009de8_Case &_Src) {
	_Stream << "Case{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "next:" << _Src._field_next;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab009de8_FallSt &_Src) {
	_Stream << "FallSt{";
	_Stream << "dest_case:" << _Src._field_dest_case;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab009de8_RetSt &_Src) {
	_Stream << "RetSt{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab009de8_Recover &_Src) {
	_Stream << "Recover{";
	_Stream << "handler:" << _Src._field_handler << ", ";
	_Stream << "handler_expr:" << _Src._field_handler_expr << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "scope_owner:" << _Src._field_scope_owner;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab009de8_ScopeGoto &_Src) {
	_Stream << "ScopeGoto{";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_1ab194c20_ImportInfo> _1ab009de8_ScopeChecker::_method_find_package(jule::Str _37735_ident) {
	return (*this)._field_s->_method_find_package(_37735_ident);
}



inline jule::Ref<_1ab194c20_ImportInfo> _1ab009de8_ScopeChecker::_method_select_package(jule::Fn<jule::Bool(jule::Ref<_1ab194c20_ImportInfo>)> _38737_selector) {
	return (*this)._field_s->_method_select_package(_38737_selector);
}



inline jule::Ref<_1b623eab2_Var> _1ab009de8_ScopeChecker::_method_find_var(jule::Str _39831_ident,jule::Bool _39843_cpp_linked) {
	
	jule::Ref<_1b623eab2_Var> _40117_v = (*this)._field_table->_method___find_var(_39831_ident,_39843_cpp_linked,true);
	if (jule::real(_40117_v)) {
		return _40117_v;
	}
	jule::Ref<_1ab009de8_ScopeChecker> _40617_parent = (*this)._field_parent;
	_iter_begin_4439293424:;
	if (!(jule::real(_40617_parent))) { goto _iter_end_4439293424; }
	{
		_40117_v=_40617_parent->_field_table->_method___find_var(_39831_ident,_39843_cpp_linked,true);
		if (jule::real(_40117_v)) {
			return _40117_v;
		}
		_40617_parent=_40617_parent->_field_parent;
	}
	_iter_next_4439293424:;
	goto _iter_begin_4439293424;
	_iter_end_4439293424:;
	return (*this)._field_s->_method_find_var(_39831_ident,_39843_cpp_linked);
}



inline jule::Ref<_1ac6d02c0_TypeAlias> _1ab009de8_ScopeChecker::_method_find_type_alias(jule::Str _42538_ident,jule::Bool _42550_cpp_linked) {
	
	jule::Ref<_1ac6d02c0_TypeAlias> _42817_ta = (*this)._field_table->_method___find_type_alias(_42538_ident,_42550_cpp_linked,true);
	if (jule::real(_42817_ta)) {
		return _42817_ta;
	}
	jule::Ref<_1ab009de8_ScopeChecker> _43317_parent = (*this)._field_parent;
	_iter_begin_4439307904:;
	if (!(jule::real(_43317_parent))) { goto _iter_end_4439307904; }
	{
		_42817_ta=_43317_parent->_field_table->_method___find_type_alias(_42538_ident,_42550_cpp_linked,true);
		if (jule::real(_42817_ta)) {
			return _42817_ta;
		}
		_43317_parent=_43317_parent->_field_parent;
	}
	_iter_next_4439307904:;
	goto _iter_begin_4439307904;
	_iter_end_4439307904:;
	return (*this)._field_s->_method_find_type_alias(_42538_ident,_42550_cpp_linked);
}



inline jule::Ref<_1b5e07a00_Struct> _1ab009de8_ScopeChecker::_method_find_struct(jule::Str _45034_ident,jule::Bool _45046_cpp_linked) {
	return (*this)._field_s->_method_find_struct(_45034_ident,_45046_cpp_linked);
}



inline jule::Ref<_1b557cd24_Fn> _1ab009de8_ScopeChecker::_method_find_fn(jule::Str _45930_ident,jule::Bool _45942_cpp_linked) {
	return (*this)._field_s->_method_find_fn(_45930_ident,_45942_cpp_linked);
}



inline jule::Ref<_1aaee9091_Trait> _1ab009de8_ScopeChecker::_method_find_trait(jule::Str _46833_ident) {
	return (*this)._field_s->_method_find_trait(_46833_ident);
}



inline jule::Ref<_1a909ac6b_Enum> _1ab009de8_ScopeChecker::_method_find_enum(jule::Str _47732_ident) {
	return (*this)._field_s->_method_find_enum(_47732_ident);
}



inline jule::Bool _1ab009de8_ScopeChecker::_method_is_unsafe(void) {
	jule::Ref<_1ab009de8_ScopeChecker> _48517_scope = this->self;
	_julec_label_iter:;
	if (_48517_scope->_field_scope->_field_unsafety) {
		return true;
	}
	if (jule::real(_48517_scope->_field_parent)) {
		_48517_scope=_48517_scope->_field_parent;
		goto _julec_label_iter;
	}
	return false;
}



inline jule::Bool _1ab009de8_ScopeChecker::_method_is_root(void) {
	return (!(jule::real((*this)._field_parent))) || jule::real((*this)._field_owner);
}



inline jule::Ref<_1ab009de8_ScopeChecker> _1ab009de8_ScopeChecker::_method_get_root(void) {
	jule::Ref<_1ab009de8_ScopeChecker> _50717_root = this->self;
	_iter_begin_4439347328:;
	if (!(jule::real(_50717_root->_field_parent) && (!(jule::real(_50717_root->_field_owner))))) { goto _iter_end_4439347328; }
	{
		_50717_root=_50717_root->_field_parent;
	}
	_iter_next_4439347328:;
	goto _iter_begin_4439347328;
	_iter_end_4439347328:;
	return _50717_root;
}



inline jule::Ref<_1ab009de8_Label> _1ab009de8_ScopeChecker::_method_find_label(jule::Str _51729_ident) {
	{
		auto _range_expr = (*this)._field_scope->_field_stmts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Any _1ab009de8_st = *_range_begin;
			_iter_begin_4439352656:;
			{
				{
					auto _match_expr{ _1ab009de8_st };
					if (!(_match_expr.type_is<jule::Ref<_1ab009de8_Label>>())) { goto _case_end_4439354544; }
					_case_begin_4439354544:;
					{
						jule::Ref<_1ab009de8_Label> _52125_label = _1ab009de8_st.operator jule::Ref<_1ab009de8_Label>();
						if (_52125_label->_field_ident == _51729_ident) {
							return _52125_label;
						}
					}
					goto _match_end_4439353984;
					_case_end_4439354544:;
					_match_end_4439353984:;
				}
			}
			_iter_next_4439352656:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab009de8_st = *_range_begin; goto _iter_begin_4439352656; }
			_iter_end_4439352656:;
		}
	}
	return jule::new_ref<_1ab009de8_Label>();
}



inline jule::Ref<_1ab009de8_ScopeLabel> _1ab009de8_ScopeChecker::_method_find_label_scope(jule::Str _53336_ident) {
	jule::Ref<_1ab009de8_ScopeLabel> _53417_label = this->self->_method_find_label_all(_53336_ident);
	if (jule::real(_53417_label) && ((_53417_label->_field_scope).alloc == (this->self).alloc)) {
		return _53417_label;
	}
	return jule::new_ref<_1ab009de8_ScopeLabel>();
}



inline jule::Ref<_1ab009de8_ScopeLabel> _1ab009de8_ScopeChecker::_method_find_label_all(jule::Str _54533_ident) {
	{
		auto _range_expr = (*this)._field_labels.get();
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab009de8_ScopeLabel> _1ab009de8_lbl = *_range_begin;
			_iter_begin_4439364608:;
			{
				if (_1ab009de8_lbl->_field_label->_field_ident == _54533_ident) {
					return _1ab009de8_lbl;
				}
			}
			_iter_next_4439364608:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab009de8_lbl = *_range_begin; goto _iter_begin_4439364608; }
			_iter_end_4439364608:;
		}
	}
	return jule::new_ref<_1ab009de8_ScopeLabel>();
}



inline jule::Bool _1ab009de8_ScopeChecker::_method_is_duplicated_ident(jule::Uintptr _55738_itself,jule::Str _55755_ident) {
	jule::Ref<_1b623eab2_Var> _55813_v = (*this)._method_find_var(_55755_ident,false);
	if (jule::real(_55813_v) && (((jule::Uintptr)((_55813_v).alloc)) != _55738_itself)) {
		if ((!(jule::real(_55813_v->_field_scope)))) {
			return false;
		}
		return ((_55813_v->_field_scope).alloc == ((*this)._field_scope).alloc) || (!((*this)._field_s->_method_is_flag(1LL)));
	}
	jule::Ref<_1ac6d02c0_TypeAlias> _56613_ta = (*this)._method_find_type_alias(_55755_ident,false);
	if (jule::real(_56613_ta) && (((jule::Uintptr)((_56613_ta).alloc)) != _55738_itself)) {
		if ((!(jule::real(_56613_ta->_field_scope)))) {
			return false;
		}
		return ((_56613_ta->_field_scope).alloc == ((*this)._field_tree).alloc) || (!((*this)._field_s->_method_is_flag(1LL)));
	}
	return false;
}



inline void _1ab009de8_ScopeChecker::_method_check_var_decl(jule::Ref<_1b61ca014_VarDecl> _57738_decl) {
	jule::Ref<_1b623eab2_Var> _57817_v = _1b5589c76_build_var(_57738_decl);
	_57817_v->_field_scope=this->self->_field_scope;
	__JULE_DEFER({
		this->self->_field_table->_field_vars=jule::append(this->self->_field_table->_field_vars,jule::Slice<jule::Ref<_1b623eab2_Var>>({_57817_v}));
		this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_57817_v)}));
	});
	if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_57817_v).alloc)),_57817_v->_field_ident)) {
		this->self->_field_s->_method_push_err(_57817_v->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_57817_v->_field_ident)}));
		this->self->_field_s->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	this->self->_field_s->_method_check_var_decl(_57817_v,this->self);
	if ((!(_57817_v->_method_is_type_inferred())) && ((!(jule::real(_57817_v->_field_kind))) || (!(jule::real(_57817_v->_field_kind->_field_kind))))) {
		return;
	}
	this->self->_field_s->_method_check_type_var(_57817_v,this->self);
}



inline void _1ab009de8_ScopeChecker::_method_check_type_alias_decl(jule::Ref<_1b61ca014_TypeAliasDecl> _59945_decl) {
	jule::Ref<_1ac6d02c0_TypeAlias> _60017_ta = _1b5589c76_build_type_alias(_59945_decl);
	if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_60017_ta).alloc)),_60017_ta->_field_ident)) {
		this->self->_field_s->_method_push_err(_60017_ta->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_60017_ta->_field_ident)}));
		this->self->_field_s->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	this->self->_field_s->_method_check_type_alias_decl(_60017_ta,this->self);
	this->self->_field_table->_field_type_aliases=jule::append(this->self->_field_table->_field_type_aliases,jule::Slice<jule::Ref<_1ac6d02c0_TypeAlias>>({_60017_ta}));
}



inline jule::Ref<_1ab009de8_Scope> _1ab009de8_ScopeChecker::_method_get_child(void) {
	return jule::new_struct<_1ab009de8_Scope>(new( std::nothrow ) _1ab009de8_Scope((*this)._field_scope,jule::Bool(),jule::Bool(),jule::Slice<jule::Any>()));
}



inline void _1ab009de8_ScopeChecker::_method_check_child_ssc(jule::Ref<_1b61ca014_ScopeTree> _61639_tree,jule::Ref<_1ab009de8_Scope> _61661_s,jule::Ref<_1ab009de8_ScopeChecker> _61676_ssc) {
	_61676_ssc->_field_parent=this->self;
	_61676_ssc->_method_check(_61639_tree,_61661_s);
}



inline jule::Ref<_1ab009de8_Scope> _1ab009de8_ScopeChecker::_method_check_child_sc(jule::Ref<_1b61ca014_ScopeTree> _62138_tree,jule::Ref<_1ab009de8_ScopeChecker> _62160_ssc) {
	jule::Ref<_1ab009de8_Scope> _62217_s = this->self->_method_get_child();
	this->self->_method_check_child_ssc(_62138_tree,_62217_s,_62160_ssc);
	return _62217_s;
}



inline jule::Ref<_1ab009de8_Scope> _1ab009de8_ScopeChecker::_method_check_child(jule::Ref<_1b61ca014_ScopeTree> _62735_tree) {
	jule::Ref<_1ab009de8_ScopeChecker> _62817_ssc = this->self->_method_new_child_checker();
	return this->self->_method_check_child_sc(_62735_tree,_62817_ssc);
}



inline void _1ab009de8_ScopeChecker::_method_check_anon_scope(jule::Ref<_1b61ca014_ScopeTree> _63240_tree) {
	jule::Ref<_1ab009de8_Scope> _63317_s = this->self->_method_check_child(_63240_tree);
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_63317_s)}));
}



inline jule::Bool _1ab009de8_ScopeChecker::_method_try_call_recover(jule::Ref<_1ab00dbcc_Data> _63740_d) {
	{
		auto _match_expr{ _63740_d->_field_model };
		if (!(_match_expr.type_is<jule::Ref<_1ab009de8_Recover>>())) { goto _case_end_4439446752; }
		goto _match_end_4439445776;
		_case_end_4439446752:;
		_case_begin_4439446416:;
		{
			return false;
		}
		goto _match_end_4439445776;
		_case_end_4439446416:;
		_match_end_4439445776:;
	}
	jule::Ref<_1ab009de8_Recover> _64317_rec = _63740_d->_field_model.operator jule::Ref<_1ab009de8_Recover>();
	_64317_rec->_field_handler=_63740_d->_field_kind->_method_fnc();
	_64317_rec->_field_scope=jule::new_struct<_1ab009de8_Scope>(new( std::nothrow ) _1ab009de8_Scope());
	_64317_rec->_field_scope_owner=this->self->_method_get_root()->_field_owner;
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_64317_rec)}));
	this->self->_field_tree->_field_stmts=this->self->_field_tree->_field_stmts.slice(static_cast<jule::Int>(this->self->_field_i + 1LL));
	this->self->_field_scope=_64317_rec->_field_scope;
	this->self->_method_check_tree();
	return true;
}



inline void _1ab009de8_ScopeChecker::_method_check_expr(jule::Ref<_1b61ca014_Expr> _65634_expr) {
	jule::Ref<_1ab00dbcc_Data> _65717_d = this->self->_field_s->_method_eval(_65634_expr,this->self);
	if ((!(jule::real(_65717_d)))) {
		return;
	}
	if (_65634_expr->_method_is_fn_call()) {
		jule::Bool _66317_ok = this->self->_method_try_call_recover(_65717_d);
		if (_66317_ok) {
			return;
		}
	}
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_65717_d)}));
}



inline jule::Ref<_1ab009de8_If> _1ab009de8_ScopeChecker::_method_check_if(jule::Ref<_1b61ca014_If> _67232_i) {
	jule::Ref<_1ab009de8_Scope> _67317_s = this->self->_method_check_child(_67232_i->_field_scope);
	jule::Ref<_1ab00dbcc_Data> _67517_d = this->self->_field_s->_method_eval(_67232_i->_field_expr,this->self);
	if ((!(jule::real(_67517_d)))) {
		return jule::new_ref<_1ab009de8_If>();
	}
	jule::Ref<_1ac6d02c0_Prim> _68013_prim = _67517_d->_field_kind->_method_prim();
	if ((!(jule::real(_68013_prim)))) {
		this->self->_field_s->_method_push_err(_67232_i->_field_expr->_field_token,jule::Str("if conditions must be have boolean expression", 45),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1ab009de8_If>();
	}
	if ((!(_68013_prim->_method_is_bool()))) {
		this->self->_field_s->_method_push_err(_67232_i->_field_expr->_field_token,jule::Str("if conditions must be have boolean expression", 45),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1ab009de8_If>();
	}
	return jule::new_struct<_1ab009de8_If>(new( std::nothrow ) _1ab009de8_If(_67517_d->_field_model,_67317_s));
}



inline jule::Ref<_1ab009de8_Else> _1ab009de8_ScopeChecker::_method_check_else(jule::Ref<_1b61ca014_Else> _69734_e) {
	jule::Ref<_1ab009de8_Scope> _69817_s = this->self->_method_check_child(_69734_e->_field_scope);
	return jule::new_struct<_1ab009de8_Else>(new( std::nothrow ) _1ab009de8_Else(_69817_s));
}



inline void _1ab009de8_ScopeChecker::_method_check_conditional(jule::Ref<_1b61ca014_Conditional> _70441_conditional) {
	jule::Ref<_1ab009de8_Conditional> _70517_c = jule::new_struct<_1ab009de8_Conditional>(new( std::nothrow ) _1ab009de8_Conditional());
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_70517_c)}));
	_70517_c->_field_elifs=jule::Slice<jule::Ref<_1ab009de8_If>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_70441_conditional->_field_tail.len() + 1LL)));
	_70517_c->_field_elifs[0LL]=this->self->_method_check_if(_70441_conditional->_field_head);
	{
		auto _range_expr = _70441_conditional->_field_tail;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ab009de8_i = 0;
			jule::Ref<_1b61ca014_If> _1ab009de8_elif = *_range_begin;
			_iter_begin_4439499312:;
			{
				_70517_c->_field_elifs[static_cast<jule::Int>(_1ab009de8_i + 1LL)]=this->self->_method_check_if(_1ab009de8_elif);
			}
			_iter_next_4439499312:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ab009de8_i; _1ab009de8_elif = *_range_begin; goto _iter_begin_4439499312; }
			_iter_end_4439499312:;
		}
	}
	if (jule::real(_70441_conditional->_field_default)) {
		_70517_c->_field_default=this->self->_method_check_else(_70441_conditional->_field_default);
	}
}



inline jule::Ref<_1ab009de8_Scope> _1ab009de8_ScopeChecker::_method_check_iter_scope_sc(jule::Uintptr _72039_it,jule::Ref<_1b61ca014_ScopeTree> _72056_tree,jule::Ref<_1ab009de8_ScopeChecker> _72078_ssc) {
	_72078_ssc->_field_it=_72039_it;
	return this->self->_method_check_child_sc(_72056_tree,_72078_ssc);
}



inline jule::Ref<_1ab009de8_Scope> _1ab009de8_ScopeChecker::_method_check_iter_scope(jule::Uintptr _72536_it,jule::Ref<_1b61ca014_ScopeTree> _72553_tree) {
	jule::Ref<_1ab009de8_ScopeChecker> _72617_ssc = this->self->_method_new_child_checker();
	return this->self->_method_check_iter_scope_sc(_72536_it,_72553_tree,_72617_ssc);
}



inline void _1ab009de8_ScopeChecker::_method_check_inf_iter(jule::Ref<_1b61ca014_Iter> _73038_it) {
	jule::Ref<_1ab009de8_InfIter> _73117_kind = jule::new_struct<_1ab009de8_InfIter>(new( std::nothrow ) _1ab009de8_InfIter());
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_73117_kind)}));
	_73117_kind->_field_scope=this->self->_method_check_iter_scope(((jule::Uintptr)((_73117_kind).alloc)),_73038_it->_field_scope);
}



inline void _1ab009de8_ScopeChecker::_method_check_while_iter(jule::Ref<_1b61ca014_Iter> _73840_it) {
	jule::Ref<_1b61ca014_WhileKind> _73917_wh = _73840_it->_field_kind.operator jule::Ref<_1b61ca014_WhileKind>();
	if ((!(jule::real(_73917_wh->_field_expr))) && (_73917_wh->_field_next == nullptr)) {
		this->self->_method_check_inf_iter(_73840_it);
		return;
	}
	jule::Ref<_1ab009de8_WhileIter> _74517_kind = jule::new_struct<_1ab009de8_WhileIter>(new( std::nothrow ) _1ab009de8_WhileIter());
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_74517_kind)}));
	_74517_kind->_field_scope=this->self->_method_check_iter_scope(((jule::Uintptr)((_74517_kind).alloc)),_73840_it->_field_scope);
	if (jule::real(_73917_wh->_field_expr)) {
		jule::Ref<_1ab00dbcc_Data> _75221_d = this->self->_field_s->_method_eval(_73917_wh->_field_expr,this->self);
		if ((!(jule::real(_75221_d)))) {
			return;
		}
		jule::Ref<_1ac6d02c0_Prim> _75717_prim = _75221_d->_field_kind->_method_prim();
		if ((!(jule::real(_75717_prim)))) {
			this->self->_field_s->_method_push_err(_73840_it->_field_token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>({}));
			return;
		}
		if ((!(_75717_prim->_method_is_bool()))) {
			this->self->_field_s->_method_push_err(_73840_it->_field_token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>({}));
			return;
		}
		_74517_kind->_field_expr=_75221_d->_field_model;
	}
	if (_73917_wh->_method_is_while_next()) {
		if ((!(_1ab009de8_is_valid_ast_st_for_next_st(_73917_wh->_field_next)))) {
			this->self->_field_s->_method_push_err(_73917_wh->_field_next_token,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>({}));
			return;
		}
		jule::I64 _77717_n = this->self->_field_scope->_field_stmts.len();
		this->self->_method_check_node(_73917_wh->_field_next);
		if (_77717_n < this->self->_field_scope->_field_stmts.len()) {
			jule::Any _78025_st = this->self->_field_scope->_field_stmts[static_cast<jule::Int>(_77717_n)];
			this->self->_field_scope->_field_stmts=this->self->_field_scope->_field_stmts.slice(0LL,static_cast<jule::Int>(_77717_n));
			if ((!(_1ab009de8_is_valid_st_for_next_st(_78025_st)))) {
				this->self->_field_s->_method_push_err(_73917_wh->_field_next_token,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>({}));
			}
			_74517_kind->_field_next=_78025_st;
		}
	}
}



inline void _1ab009de8_ScopeChecker::_method_check_range_iter(jule::Ref<_1b61ca014_Iter> _79140_it) {
	jule::Ref<_1b61ca014_RangeKind> _79217_rang = _79140_it->_field_kind.operator jule::Ref<_1b61ca014_RangeKind>();
	jule::Ref<_1ab00dbcc_Data> _79417_d = this->self->_field_s->_method_eval(_79217_rang->_field_expr,this->self);
	if ((!(jule::real(_79417_d)))) {
		return;
	}
	jule::Ref<_1ab009de8_RangeIter> _79917_kind = jule::new_struct<_1ab009de8_RangeIter>(new( std::nothrow ) _1ab009de8_RangeIter(_79417_d,jule::Ref<_1ab009de8_Scope>(),jule::Ref<_1b623eab2_Var>(),jule::Ref<_1b623eab2_Var>()));
	_1a8dc912c_RangeChecker _80317_rc = _1a8dc912c_RangeChecker(this->self,_79217_rang,_79917_kind,_79417_d);
	jule::Bool _80913_ok = _80317_rc._method_check();
	if ((!(_80913_ok))) {
		return;
	}
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_79917_kind)}));
	jule::Ref<_1ab009de8_ScopeChecker> _81617_ssc = this->self->_method_new_child_checker();
	if (jule::real(_79917_kind->_field_key_a)) {
		if ((!(this->self->_field_s->_method_is_flag(1LL))) && this->self->_method_is_duplicated_ident(0LLU,_79917_kind->_field_key_a->_field_ident)) {
			this->self->_field_s->_method_push_err(_79917_kind->_field_key_a->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_79917_kind->_field_key_a->_field_ident)}));
			this->self->_field_s->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
		}
		_81617_ssc->_field_table->_field_vars=jule::append(_81617_ssc->_field_table->_field_vars,jule::Slice<jule::Ref<_1b623eab2_Var>>({_79917_kind->_field_key_a}));
	}
	if (jule::real(_79917_kind->_field_key_b)) {
		if ((!(this->self->_field_s->_method_is_flag(1LL))) && this->self->_method_is_duplicated_ident(0LLU,_79917_kind->_field_key_b->_field_ident)) {
			this->self->_field_s->_method_push_err(_79917_kind->_field_key_b->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_79917_kind->_field_key_b->_field_ident)}));
			this->self->_field_s->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
		}
		_81617_ssc->_field_table->_field_vars=jule::append(_81617_ssc->_field_table->_field_vars,jule::Slice<jule::Ref<_1b623eab2_Var>>({_79917_kind->_field_key_b}));
	}
	_79917_kind->_field_scope=this->self->_method_check_iter_scope_sc(((jule::Uintptr)((_79917_kind).alloc)),_79140_it->_field_scope,_81617_ssc);
}



inline void _1ab009de8_ScopeChecker::_method_check_iter(jule::Ref<_1b61ca014_Iter> _83734_it) {
	if (_83734_it->_method_is_inf()) {
		this->self->_method_check_inf_iter(_83734_it);
		return;
	}
	{
		auto _match_expr{ _83734_it->_field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_WhileKind>>())) { goto _case_end_4439605936; }
		_case_begin_4439605936:;
		{
			this->self->_method_check_while_iter(_83734_it);
		}
		goto _match_end_4439604624;
		_case_end_4439605936:;
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_RangeKind>>())) { goto _case_end_4439606048; }
		_case_begin_4439606048:;
		{
			this->self->_method_check_range_iter(_83734_it);
		}
		goto _match_end_4439604624;
		_case_end_4439606048:;
		_case_begin_4439603184:;
		{
			jule::outln(jule::Str("error <unimplemented iteration kind>", 36));
		}
		goto _match_end_4439604624;
		_case_end_4439603184:;
		_match_end_4439604624:;
	}
}



inline jule::Bool _1ab009de8_ScopeChecker::_method_check_valid_cont_label(jule::Uintptr _85042_it) {
	jule::Ref<_1ab009de8_ScopeChecker> _85117_scope = this->self;
	_julec_label_iter:;
	if (_85117_scope->_field_it == _85042_it) {
		return true;
	}
	if (jule::real(_85117_scope->_field_parent)) {
		_85117_scope=_85117_scope->_field_parent;
		goto _julec_label_iter;
	}
	return false;
}



inline jule::Bool _1ab009de8_ScopeChecker::_method_check_valid_break_label(jule::Uintptr _86643_ptr) {
	jule::Ref<_1ab009de8_ScopeChecker> _86717_scope = this->self;
	_julec_label_iter:;
	if (_86717_scope->_field_it == _86643_ptr) {
		return true;
	}
	if (_86717_scope->_field_cse != 0LL) {
		jule::Uintptr _87517_mtch = ((jule::Uintptr)((((_1ab009de8_Case*)(_86717_scope->_field_cse))->_field_owner).alloc));
		if (_87517_mtch == _86643_ptr) {
			return true;
		}
	}
	if (jule::real(_86717_scope->_field_parent)) {
		_86717_scope=_86717_scope->_field_parent;
		goto _julec_label_iter;
	}
	return false;
}



inline jule::Ref<_1ab009de8_ContSt> _1ab009de8_ScopeChecker::_method_check_cont_valid_scope(jule::Ref<_1b61ca014_ContSt> _88941_c) {
	if (_88941_c->_field_label._field_id != 0LLU) {
		return jule::new_struct<_1ab009de8_ContSt>(new( std::nothrow ) _1ab009de8_ContSt());
	}
	_1ab009de8_ScopeChecker _89417_scope = (*this);
	_julec_label_iter:;
	{
		if (!((((_89417_scope._field_it == 0LL) && jule::real(_89417_scope._field_parent)) && (!(jule::real(_89417_scope._field_owner)))))) { goto _case_end_4439634224; }
		_case_begin_4439634224:;
		{
			_89417_scope=_89417_scope._field_parent;
			goto _julec_label_iter;
		}
		goto _match_end_4439634048;
		_case_end_4439634224:;
		if (!((_89417_scope._field_it != 0LL))) { goto _case_end_4439634352; }
		_case_begin_4439634352:;
		{
			return jule::new_struct<_1ab009de8_ContSt>(new( std::nothrow ) _1ab009de8_ContSt(_89417_scope._field_it));
		}
		goto _match_end_4439634048;
		_case_end_4439634352:;
		_match_end_4439634048:;
	}
	(*this)._field_s->_method_push_err(_88941_c->_field_token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>({}));
	return jule::new_ref<_1ab009de8_ContSt>();
}



inline void _1ab009de8_ScopeChecker::_method_check_cont(jule::Ref<_1b61ca014_ContSt> _90930_c) {
	jule::Ref<_1ab009de8_ContSt> _91017_cont = this->self->_method_check_cont_valid_scope(_90930_c);
	if ((!(jule::real(_91017_cont)))) {
		return;
	}
	if (_90930_c->_field_label._field_id != 0LLU) {
		jule::Ref<_1ab009de8_ScopeLabel> _91621_label = _1ab009de8_find_label_parent(_90930_c->_field_label._field_kind,this->self->_field_parent);
		if ((!(jule::real(_91621_label)))) {
			this->self->_field_s->_method_push_err(_90930_c->_field_label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>({jule::Any(_90930_c->_field_label._field_kind)}));
			return;
		}
		_91621_label->_field_used=true;
		if ((_91621_label->_field_pos + 1LL) >= _91621_label->_field_scope->_field_scope->_field_stmts.len()) {
			this->self->_field_s->_method_push_err(_90930_c->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
			return;
		}
		jule::Int _92917_i = _91621_label->_field_pos + 1LL;
		if (_92917_i >= _91621_label->_field_scope->_field_scope->_field_stmts.len()) {
			this->self->_field_s->_method_push_err(_90930_c->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
		} else {
			jule::Any _93325_st = _91621_label->_field_scope->_field_scope->_field_stmts[static_cast<jule::Int>(_92917_i)];
			{
				auto _match_expr{ _93325_st };
				if (!(_match_expr.type_is<jule::Ref<_1ab009de8_InfIter>>())) { goto _case_end_4439666320; }
				_case_begin_4439666320:;
				{
					_91017_cont->_field_it=((jule::Uintptr)((_93325_st.operator jule::Ref<_1ab009de8_InfIter>()).alloc));
				}
				goto _match_end_4439663104;
				_case_end_4439666320:;
				if (!(_match_expr.type_is<jule::Ref<_1ab009de8_RangeIter>>())) { goto _case_end_4439663984; }
				_case_begin_4439663984:;
				{
					_91017_cont->_field_it=((jule::Uintptr)((_93325_st.operator jule::Ref<_1ab009de8_RangeIter>()).alloc));
				}
				goto _match_end_4439663104;
				_case_end_4439663984:;
				if (!(_match_expr.type_is<jule::Ref<_1ab009de8_WhileIter>>())) { goto _case_end_4439664096; }
				_case_begin_4439664096:;
				{
					_91017_cont->_field_it=((jule::Uintptr)((_93325_st.operator jule::Ref<_1ab009de8_WhileIter>()).alloc));
				}
				goto _match_end_4439663104;
				_case_end_4439664096:;
				_case_begin_4439663616:;
				{
					this->self->_field_s->_method_push_err(_90930_c->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
				}
				goto _match_end_4439663104;
				_case_end_4439663616:;
				_match_end_4439663104:;
			}
		}
	}
	if (_91017_cont->_field_it != 0LL) {
		if ((!(this->self->_method_check_valid_cont_label(_91017_cont->_field_it)))) {
			this->self->_field_s->_method_push_err(_90930_c->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
		}
	}
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_91017_cont)}));
}



inline void _1ab009de8_ScopeChecker::_method_check_label(jule::Ref<_1b61ca014_LabelSt> _95235_l) {
	if (jule::real(this->self->_method_find_label(_95235_l->_field_ident))) {
		this->self->_field_s->_method_push_err(_95235_l->_field_token,jule::Str("label is already exist in this identifier: @", 44),jule::Slice<jule::Any>({jule::Any(_95235_l->_field_ident)}));
		return;
	}
	jule::Ref<_1ab009de8_Label> _95817_label = jule::new_struct<_1ab009de8_Label>(new( std::nothrow ) _1ab009de8_Label(_95235_l->_field_ident));
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_95817_label)}));
	this->self->_field_labels=jule::append(this->self->_field_labels.get(),jule::Slice<jule::Ref<_1ab009de8_ScopeLabel>>({jule::new_struct<_1ab009de8_ScopeLabel>(new( std::nothrow ) _1ab009de8_ScopeLabel(_95235_l->_field_token,_95817_label,static_cast<jule::I64>(this->self->_field_scope->_field_stmts.len() - 1LL),this->self,jule::Bool()))}));
}



inline void _1ab009de8_ScopeChecker::_method_push_goto(jule::Ref<_1b61ca014_GotoSt> _97133_gt) {
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(jule::new_struct<_1ab009de8_GotoSt>(new( std::nothrow ) _1ab009de8_GotoSt(_97133_gt->_field_label._field_kind)))}));
	this->self->_field_gotos=jule::append(this->self->_field_gotos.get(),jule::Slice<jule::Ref<_1ab009de8_ScopeGoto>>({jule::new_struct<_1ab009de8_ScopeGoto>(new( std::nothrow ) _1ab009de8_ScopeGoto(_97133_gt,this->self,static_cast<jule::I64>(this->self->_field_scope->_field_stmts.len() - 1LL)))}));
}



inline void _1ab009de8_ScopeChecker::_method_check_postfix(jule::Ref<_1b61ca014_AssignSt> _98337_a) {
	if (_98337_a->_field_left.len() > 1LL) {
		this->self->_field_s->_method_push_err(_98337_a->_field_setter,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return;
	}
	jule::Ref<_1b61ca014_Expr> _98917_expr = _98337_a->_field_left[0LL]->_field_expr;
	jule::Ref<_1ab00dbcc_Data> _99017_d = this->self->_field_s->_method_eval(_98917_expr,this->self);
	if ((!(jule::real(_99017_d)))) {
		return;
	}
	_1ab009de8_check_assign(this->self->_field_s,_99017_d,jule::new_ref<_1ab00dbcc_Data>(),_98337_a->_field_setter);
	if (jule::real(_99017_d->_field_kind->_method_ptr())) {
		jule::Ref<_1ac6d02c0_Ptr> _99821_ptr = _99017_d->_field_kind->_method_ptr();
		if ((!(_99821_ptr->_method_is_unsafe())) && (!(this->self->_method_is_unsafe()))) {
			this->self->_field_s->_method_push_err(_98337_a->_field_left[0LL]->_field_expr->_field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>({}));
			return;
		}
	}
	jule::Ref<_1ac6d02c0_TypeKind> _100517_check_t = _99017_d->_field_kind;
	if (jule::real(_99017_d->_field_kind->_method_ref())) {
		_100517_check_t=_99017_d->_field_kind->_method_ref()->_field_elem;
	}
	if ((!(jule::real(_100517_check_t->_method_prim()))) || (!(_1ac92d7e8_is_num(_100517_check_t->_method_prim()->_field_kind)))) {
		this->self->_field_s->_method_push_err(_98337_a->_field_setter,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any(_98337_a->_field_setter._field_kind),jule::Any(_99017_d->_field_kind->_method_to_str())}));
		return;
	}
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(jule::new_struct<_1ab009de8_Postfix>(new( std::nothrow ) _1ab009de8_Postfix(_99017_d->_field_model,_98337_a->_field_setter._field_kind)))}));
}



inline jule::Bool _1ab009de8_ScopeChecker::_method_is_new_assign_ident(jule::Str _102138_ident) {
	if (_1b61ec5ec_is_ignore_ident(_102138_ident) || (_102138_ident == jule::Str("", 0))) {
		return false;
	}
	return (*this)._field_table->_method_def_by_ident(_102138_ident,false) == nullptr;
}



inline void _1ab009de8_ScopeChecker::_method_check_single_assign(jule::Ref<_1b61ca014_AssignSt> _102943_a) {
	jule::Ref<_1ab00dbcc_Data> _103017_l = jule::new_ref<_1ab00dbcc_Data>();
	jule::Ref<_1ab00dbcc_Data> _103117_r = jule::new_ref<_1ab00dbcc_Data>();
	if ((!(_1b61ec5ec_is_ignore_ident(_102943_a->_field_left[0LL]->_field_ident)))) {
		jule::Ref<_1b61ca014_Expr> _103421_expr = _102943_a->_field_left[0LL]->_field_expr;
		_103017_l=this->self->_field_s->_method_eval(_103421_expr,this->self);
		if ((!(jule::real(_103017_l)))) {
			return;
		}
	}
	if (jule::real(_103017_l)) {
		_103117_r=this->self->_field_s->_method_evalp(_102943_a->_field_right,this->self,_103017_l->_field_kind);
	} else {
		_103117_r=this->self->_field_s->_method_eval(_102943_a->_field_right,this->self);
	}
	if ((!(jule::real(_103117_r)))) {
		return;
	}
	if ((!(jule::real(_103017_l)))) {
		if (_103117_r->_field_kind->_method_void()) {
			this->self->_field_s->_method_push_err(_102943_a->_field_right->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		}
		this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_103117_r)}));
		return;
	}
	if ((!(_1ab009de8_check_assign(this->self->_field_s,_103017_l,_103117_r,_102943_a->_field_setter)))) {
		return;
	}
	if (jule::real(_103117_r->_field_kind->_method_tup())) {
		this->self->_field_s->_method_push_err(_102943_a->_field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>({}));
		return;
	}
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(jule::new_struct<_1ab009de8_Assign>(new( std::nothrow ) _1ab009de8_Assign(_103017_l->_field_model,_103117_r->_field_model,_102943_a->_field_setter._field_kind)))}));
	if ((_102943_a->_field_setter._field_kind != jule::Str("=", 1)) && (!(_103117_r->_method_is_const()))) {
		_102943_a->_field_setter._field_kind=_102943_a->_field_setter._field_kind.slice(0LL,static_cast<jule::Int>(_102943_a->_field_setter._field_kind.len() - 1LL));
		_1ab00dbcc_BinopSolver _107721_solver = _1ab00dbcc_BinopSolver(jule::new_struct<_1ab00dbcc_Eval>(new( std::nothrow ) _1ab00dbcc_Eval(this->self->_field_s,this->self,jule::Ref<_1ac6d02c0_TypeKind>(),this->self->_method_is_unsafe(),jule::Ref<_1b623eab2_Var>())),jule::Ref<_1ab00dbcc_Data>(),jule::Ref<_1ab00dbcc_Data>(),_102943_a->_field_setter);
		_103117_r=_107721_solver._method_solve_explicit(_103017_l,_103117_r);
		if ((!(jule::real(_103117_r)))) {
			return;
		}
		_102943_a->_field_setter._field_kind+=jule::Str("=", 1);
	}
	_1a8dc912c_AssignTypeChecker _109317_checker = _1a8dc912c_AssignTypeChecker(this->self->_field_s,_103017_l->_field_kind,_103117_r,_102943_a->_field_setter,true);
	_109317_checker._method_check();
}



inline void _1ab009de8_ScopeChecker::_method___process_end_part_of_multi_assign(jule::Ref<_1ab009de8_MultiAssign> _110357_st,jule::Ref<_1b61ca014_AssignSt> _110413_a,jule::Ref<_1b61ca014_AssignLeft> _110431_lexpr,jule::Ref<_1ab00dbcc_Data> _110455_l,jule::Ref<_1ab00dbcc_Data> _110469_r) {
	if (_1b61ec5ec_is_ignore_ident(_110431_lexpr->_field_ident)) {
		if (_110469_r->_field_kind->_method_void()) {
			(*this)._field_s->_method_push_err(_110413_a->_field_right->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		}
		_110357_st->_field_l=jule::append(_110357_st->_field_l,jule::Slice<jule::Any>({jule::Any(nullptr)}));
		return;
	}
	if (_110413_a->_field_declarative && (*this)._method_is_new_assign_ident(_110431_lexpr->_field_ident)) {
		jule::Ref<_1b623eab2_Var> _111621_v = jule::new_struct<_1b623eab2_Var>(new( std::nothrow ) _1b623eab2_Var((*this)._field_scope,_110431_lexpr->_field_token,_110431_lexpr->_field_ident,jule::Bool(),jule::Bool(),_110431_lexpr->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),_110431_lexpr->_field_reference,jule::Str(),jule::Ref<_1ac6d02c0_TypeSymbol>(),jule::new_struct<_1ab00dbcc_Value>(new( std::nothrow ) _1ab00dbcc_Value(_110413_a->_field_right,_110469_r)),jule::Ref<_1b5589c76_ReferenceStack>(),jule::Slice<jule::Ref<_1b61ca014_Directive>>(),jule::Slice<jule::Ref<_1b623eab2_Var>>()));
		(*this)._field_s->_method_check_var(_111621_v);
		_110357_st->_field_l=jule::append(_110357_st->_field_l,jule::Slice<jule::Any>({jule::Any(_111621_v)}));
		(*this)._field_table->_field_vars=jule::append((*this)._field_table->_field_vars,jule::Slice<jule::Ref<_1b623eab2_Var>>({_111621_v}));
		(*this)._field_scope->_field_stmts=jule::append((*this)._field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_111621_v)}));
		return;
	}
	if (_110431_lexpr->_field_mutable || _110431_lexpr->_field_reference) {
		(*this)._field_s->_method_push_err(_110431_lexpr->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_110431_lexpr->_field_ident)}));
		(*this)._field_s->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	if ((!(_1ab009de8_check_assign((*this)._field_s,_110455_l,_110469_r,_110413_a->_field_setter)))) {
		return;
	}
	
	(*this)._field_s->_method_check_validity_for_init_expr(_110455_l->_field_mutable,false,_110455_l->_field_kind,_110469_r,_110413_a->_field_setter);
	_1a8dc912c_AssignTypeChecker _115117_checker = _1a8dc912c_AssignTypeChecker((*this)._field_s,_110455_l->_field_kind,_110469_r,_110413_a->_field_setter,true);
	_115117_checker._method_check();
	_110357_st->_field_l=jule::append(_110357_st->_field_l,jule::Slice<jule::Any>({_110455_l->_field_model}));
}



inline void _1ab009de8_ScopeChecker::_method_check_ret_multi_assign(jule::Ref<_1b61ca014_AssignSt> _116346_a) {
	jule::Ref<_1ab00dbcc_Data> _116417_rd = this->self->_field_s->_method_eval(_116346_a->_field_right,this->self);
	if ((!(jule::real(_116417_rd)))) {
		return;
	}
	jule::Slice<jule::Ref<_1ab00dbcc_Data>> _116917_r = _1ab009de8_get_datas_from_tuple_data(_116417_rd);
	{
		if (!((_116346_a->_field_left.len() > _116917_r.len()))) { goto _case_end_4439855696; }
		_case_begin_4439855696:;
		{
			this->self->_field_s->_method_push_err(_116346_a->_field_setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4439855520;
		_case_end_4439855696:;
		if (!((_116346_a->_field_left.len() < _116917_r.len()))) { goto _case_end_4439855840; }
		_case_begin_4439855840:;
		{
			this->self->_field_s->_method_push_err(_116346_a->_field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4439855520;
		_case_end_4439855840:;
		_match_end_4439855520:;
	}
	jule::Ref<_1ab009de8_MultiAssign> _118117_st = jule::new_struct<_1ab009de8_MultiAssign>(new( std::nothrow ) _1ab009de8_MultiAssign(jule::Slice<jule::Any>(),_116417_rd->_field_model));
	if ((!(jule::real(_116417_rd->_field_kind->_method_tup())))) {
		_118117_st->_field_r=jule::Any(jule::new_struct<_1ab33d083_TupleExprModel>(new( std::nothrow ) _1ab33d083_TupleExprModel(_116917_r)));
	}
	{
		auto _range_expr = _116346_a->_field_left;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ab009de8_i = 0;
			_iter_begin_4439866128:;
			{
				jule::Ref<_1b61ca014_AssignLeft> _119021_lexpr = _116346_a->_field_left[static_cast<jule::Int>(_1ab009de8_i)];
				jule::Ref<_1ab00dbcc_Data> _119121_l = jule::new_ref<_1ab00dbcc_Data>();
				if ((!(_1b61ec5ec_is_ignore_ident(_119021_lexpr->_field_ident))) && ((!(_116346_a->_field_declarative)) || (!(this->self->_method_is_new_assign_ident(_119021_lexpr->_field_ident))))) {
					_119121_l=this->self->_field_s->_method_eval(_119021_lexpr->_field_expr,this->self);
					if ((!(jule::real(_119121_l)))) {
						goto _iter_next_4439866128;
					}
				}
				this->self->_method___process_end_part_of_multi_assign(_118117_st,_116346_a,_119021_lexpr,_119121_l,_116917_r[static_cast<jule::Int>(_1ab009de8_i)]);
			}
			_iter_next_4439866128:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ab009de8_i; goto _iter_begin_4439866128; }
			_iter_end_4439866128:;
		}
	}
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_118117_st)}));
}



inline void _1ab009de8_ScopeChecker::_method_check_multi_assign(jule::Ref<_1b61ca014_AssignSt> _120642_a) {
	{
		auto _match_expr{ _120642_a->_field_right->_field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_FnCallExpr>>())) { goto _case_end_4439883120; }
		_case_begin_4439883120:;
		{
			this->self->_method_check_ret_multi_assign(_120642_a);
			return;
		}
		goto _match_end_4439882224;
		_case_end_4439883120:;
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_UnsafeExpr>>())) { goto _case_end_4439883248; }
		_case_begin_4439883248:;
		{
			{
				auto _match_expr{ _120642_a->_field_right->_field_kind.operator jule::Ref<_1b61ca014_UnsafeExpr>()->_field_expr };
				if (!(_match_expr.type_is<jule::Ref<_1b61ca014_FnCallExpr>>())) { goto _case_end_4439887552; }
				_case_begin_4439887552:;
				{
					this->self->_method_check_ret_multi_assign(_120642_a);
					return;
				}
				goto _match_end_4439885072;
				_case_end_4439887552:;
				_match_end_4439885072:;
			}
		}
		goto _match_end_4439882224;
		_case_end_4439883248:;
		_match_end_4439882224:;
	}
	jule::Slice<jule::Any> _122017_right = _1ab009de8_get_expr_models(_120642_a->_field_right->_field_kind);
	{
		if (!((_120642_a->_field_left.len() > _122017_right.len()))) { goto _case_end_4439890528; }
		_case_begin_4439890528:;
		{
			this->self->_field_s->_method_push_err(_120642_a->_field_setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4439888736;
		_case_end_4439890528:;
		if (!((_120642_a->_field_left.len() < _122017_right.len()))) { goto _case_end_4439890640; }
		_case_begin_4439890640:;
		{
			this->self->_field_s->_method_push_err(_120642_a->_field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4439888736;
		_case_end_4439890640:;
		_match_end_4439888736:;
	}
	jule::Ref<_1ab33d083_TupleExprModel> _123217_right_tuple = jule::new_struct<_1ab33d083_TupleExprModel>(new( std::nothrow ) _1ab33d083_TupleExprModel());
	jule::Ref<_1ab009de8_MultiAssign> _123417_st = jule::new_struct<_1ab009de8_MultiAssign>(new( std::nothrow ) _1ab009de8_MultiAssign(jule::Slice<jule::Any>(),jule::Any(_123217_right_tuple)));
	{
		auto _range_expr = _120642_a->_field_left;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ab009de8_i = 0;
			_iter_begin_4439900000:;
			{
				jule::Ref<_1b61ca014_AssignLeft> _123921_lexpr = _120642_a->_field_left[static_cast<jule::Int>(_1ab009de8_i)];
				jule::Ref<_1ab00dbcc_Data> _124021_l = jule::new_ref<_1ab00dbcc_Data>();
				jule::Ref<_1ab00dbcc_Data> _124121_r = jule::new_ref<_1ab00dbcc_Data>();
				if ((!(_1b61ec5ec_is_ignore_ident(_123921_lexpr->_field_ident))) && ((!(_120642_a->_field_declarative)) || (!(this->self->_method_is_new_assign_ident(_123921_lexpr->_field_ident))))) {
					_124021_l=this->self->_field_s->_method_eval(_123921_lexpr->_field_expr,this->self);
					if ((!(jule::real(_124021_l)))) {
						goto _iter_next_4439900000;
					}
				}
				if (jule::real(_124021_l)) {
					jule::Ref<_1b61ca014_Expr> _125125_expr = jule::new_struct<_1b61ca014_Expr>(new( std::nothrow ) _1b61ca014_Expr(_120642_a->_field_right->_field_token,_122017_right[static_cast<jule::Int>(_1ab009de8_i)]));
					_124121_r=this->self->_field_s->_method_evalp(_125125_expr,this->self,_124021_l->_field_kind);
				} else {
					jule::Ref<_1b61ca014_Expr> _125425_expr = jule::new_struct<_1b61ca014_Expr>(new( std::nothrow ) _1b61ca014_Expr(_120642_a->_field_right->_field_token,_122017_right[static_cast<jule::Int>(_1ab009de8_i)]));
					_124121_r=this->self->_field_s->_method_eval(_125425_expr,this->self);
				}
				if ((!(jule::real(_124121_r)))) {
					goto _iter_next_4439900000;
				}
				_123217_right_tuple->_field_datas=jule::append(_123217_right_tuple->_field_datas,jule::Slice<jule::Ref<_1ab00dbcc_Data>>({_124121_r}));
				this->self->_method___process_end_part_of_multi_assign(_123417_st,_120642_a,_123921_lexpr,_124021_l,_124121_r);
			}
			_iter_next_4439900000:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ab009de8_i; goto _iter_begin_4439900000; }
			_iter_end_4439900000:;
		}
	}
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_123417_st)}));
}



inline void _1ab009de8_ScopeChecker::_method_check_assign_st(jule::Ref<_1b61ca014_AssignSt> _126939_a) {
	if (_1b61ec5ec_is_postfix_op(_126939_a->_field_setter._field_kind)) {
		this->self->_method_check_postfix(_126939_a);
		return;
	}
	if ((_126939_a->_field_left.len() == 1LL) && (!(_126939_a->_field_declarative))) {
		this->self->_method_check_single_assign(_126939_a);
		return;
	}
	this->self->_method_check_multi_assign(_126939_a);
}



inline jule::Ref<_1ab009de8_Scope> _1ab009de8_ScopeChecker::_method_check_case_scope(jule::Ref<_1ab009de8_Case> _128336_c,jule::Ref<_1b61ca014_ScopeTree> _128350_tree) {
	jule::Ref<_1ab009de8_ScopeChecker> _128417_ssc = this->self->_method_new_child_checker();
	_128417_ssc->_field_cse=((jule::Uintptr)((_128336_c).alloc));
	return this->self->_method_check_child_sc(_128350_tree,_128417_ssc);
}



inline jule::Ref<_1ab009de8_Case> _1ab009de8_ScopeChecker::_method_check_case(jule::Ref<_1ab009de8_Match> _128934_m,jule::Int _128945_i,jule::Ref<_1b61ca014_Case> _128957_c,jule::Ref<_1ab00dbcc_Data> _128987_expr) {
	jule::Ref<_1ab009de8_Case> _129017__case = _128934_m->_field_cases[static_cast<jule::Int>(_128945_i)];
	_129017__case->_field_exprs=jule::Slice<jule::Any>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_128957_c->_field_exprs.len())));
	{
		auto _range_expr = _128957_c->_field_exprs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ab009de8_j = 0;
			jule::Ref<_1b61ca014_Expr> _1ab009de8_e = *_range_begin;
			_iter_begin_4439949712:;
			{
				if (_128934_m->_field_type_match) {
					jule::Ref<_1ab00dbcc_Eval> _129525_eval = jule::new_struct<_1ab00dbcc_Eval>(new( std::nothrow ) _1ab00dbcc_Eval(this->self->_field_s,this->self,jule::Ref<_1ac6d02c0_TypeKind>(),jule::Bool(),jule::Ref<_1b623eab2_Var>()));
					jule::Ref<_1ab00dbcc_Data> _130025_d = _129525_eval->_method_eval(_1ab009de8_e);
					if (jule::real(_130025_d)) {
						_129017__case->_field_exprs[static_cast<jule::Int>(_1ab009de8_j)]=jule::Any(_130025_d->_field_kind);
						if (_1ab009de8_count_match_type(_128934_m,_130025_d->_field_kind) > 1LL) {
							this->self->_field_s->_method_push_err(_1ab009de8_e->_field_token,jule::Str("type is already checked: @", 26),jule::Slice<jule::Any>({jule::Any(_130025_d->_field_kind->_method_to_str())}));
						}
					}
					jule::Ref<_1aaee9091_Trait> _130821_trt = _128987_expr->_field_kind->_method_trt();
					if (jule::real(_130821_trt)) {
						this->self->_field_s->_method_check_type_compatibility(_128987_expr->_field_kind,_130025_d->_field_kind,_1ab009de8_e->_field_token,false);
					}
					goto _iter_next_4439949712;
				}
				jule::Ref<_1ab00dbcc_Data> _131621_d = this->self->_field_s->_method_eval(_1ab009de8_e,this->self);
				if ((!(jule::real(_131621_d)))) {
					goto _iter_next_4439949712;
				}
				_129017__case->_field_exprs[static_cast<jule::Int>(_1ab009de8_j)]=_131621_d->_field_model;
				_1a8dc912c_AssignTypeChecker _132321_checker = _1a8dc912c_AssignTypeChecker(this->self->_field_s,_128987_expr->_field_kind,_131621_d,_1ab009de8_e->_field_token,true);
				_132321_checker._method_check();
			}
			_iter_next_4439949712:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ab009de8_j; _1ab009de8_e = *_range_begin; goto _iter_begin_4439949712; }
			_iter_end_4439949712:;
		}
	}
	_129017__case->_field_scope=this->self->_method_check_case_scope(_129017__case,_128957_c->_field_scope);
	return _129017__case;
}



inline void _1ab009de8_ScopeChecker::_method_check_cases(jule::Ref<_1b61ca014_MatchCase> _133735_m,jule::Ref<_1ab009de8_Match> _133770_rm,jule::Ref<_1ab00dbcc_Data> _133786_expr) {
	_133770_rm->_field_cases=jule::Slice<jule::Ref<_1ab009de8_Case>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_133735_m->_field_cases.len())));
	{
		auto _range_expr = _133735_m->_field_cases;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ab009de8_i = 0;
			_iter_begin_4439984528:;
			{
				jule::Ref<_1ab009de8_Case> _134021__case = jule::new_struct<_1ab009de8_Case>(new( std::nothrow ) _1ab009de8_Case(_133770_rm,jule::Ref<_1ab009de8_Scope>(),jule::Slice<jule::Any>(),jule::Ref<_1ab009de8_Case>()));
				if (_1ab009de8_i > 0LL) {
					_133770_rm->_field_cases[static_cast<jule::Int>(_1ab009de8_i - 1LL)]->_field_next=_134021__case;
				}
				_133770_rm->_field_cases[static_cast<jule::Int>(_1ab009de8_i)]=_134021__case;
			}
			_iter_next_4439984528:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ab009de8_i; goto _iter_begin_4439984528; }
			_iter_end_4439984528:;
		}
	}
	if (jule::real(_133770_rm->_field_default) && (_133735_m->_field_cases.len() > 0LL)) {
		_133770_rm->_field_cases[static_cast<jule::Int>(_133770_rm->_field_cases.len() - 1LL)]->_field_next=_133770_rm->_field_default;
	}
	{
		auto _range_expr = _133735_m->_field_cases;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ab009de8_i = 0;
			jule::Ref<_1b61ca014_Case> _1ab009de8_c = *_range_begin;
			_iter_begin_4439991856:;
			{
				this->self->_method_check_case(_133770_rm,_1ab009de8_i,_1ab009de8_c,_133786_expr);
			}
			_iter_next_4439991856:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ab009de8_i; _1ab009de8_c = *_range_begin; goto _iter_begin_4439991856; }
			_iter_end_4439991856:;
		}
	}
}



inline jule::Ref<_1ab009de8_Case> _1ab009de8_ScopeChecker::_method_check_default(jule::Ref<_1ab009de8_Match> _136037_m,jule::Ref<_1b61ca014_Else> _136052_d) {
	jule::Ref<_1ab009de8_Case> _136117_def = jule::new_struct<_1ab009de8_Case>(new( std::nothrow ) _1ab009de8_Case(_136037_m,jule::Ref<_1ab009de8_Scope>(),jule::Slice<jule::Any>(),jule::Ref<_1ab009de8_Case>()));
	_136117_def->_field_scope=this->self->_method_check_case_scope(_136117_def,_136052_d->_field_scope);
	return _136117_def;
}



inline void _1ab009de8_ScopeChecker::_method_check_type_match(jule::Ref<_1b61ca014_MatchCase> _136840_m) {
	jule::Ref<_1ab00dbcc_Data> _136917_d = this->self->_field_s->_method_eval(_136840_m->_field_expr,this->self);
	if ((!(jule::real(_136917_d)))) {
		return;
	}
	if ((!((jule::real(_136917_d->_field_kind->_method_prim()) && _136917_d->_field_kind->_method_prim()->_method_is_any()) || jule::real(_136917_d->_field_kind->_method_trt())))) {
		this->self->_field_s->_method_push_err(_136840_m->_field_expr->_field_token,jule::Str("type-case must be have <any> or trait typed expression", 54),jule::Slice<jule::Any>({}));
		return;
	}
	jule::Ref<_1ab009de8_Match> _137917_tm = jule::new_struct<_1ab009de8_Match>(new( std::nothrow ) _1ab009de8_Match(_136917_d,true,jule::Slice<jule::Ref<_1ab009de8_Case>>(),jule::Ref<_1ab009de8_Case>()));
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_137917_tm)}));
	if (jule::real(_136840_m->_field_default)) {
		_137917_tm->_field_default=this->self->_method_check_default(_137917_tm,_136840_m->_field_default);
	}
	this->self->_method_check_cases(_136840_m,_137917_tm,_136917_d);
}



inline void _1ab009de8_ScopeChecker::_method_check_common_match(jule::Ref<_1b61ca014_MatchCase> _139242_m) {
	jule::Ref<_1ab00dbcc_Data> _139317_d = jule::new_ref<_1ab00dbcc_Data>();
	if ((!(jule::real(_139242_m->_field_expr)))) {
		_139317_d=jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_1ac6d02c0_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1ac6d02c0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),_1ac90c3ed_Const::_static_method_new_bool(true)));
		_139317_d->_field_model=jule::Any(_139317_d->_field_constant);
	} else {
		_139317_d=this->self->_field_s->_method_eval(_139242_m->_field_expr,this->self);
		if ((!(jule::real(_139317_d)))) {
			return;
		}
	}
	jule::Ref<_1ab009de8_Match> _140717_mc = jule::new_struct<_1ab009de8_Match>(new( std::nothrow ) _1ab009de8_Match(_139317_d,jule::Bool(),jule::Slice<jule::Ref<_1ab009de8_Case>>(),jule::Ref<_1ab009de8_Case>()));
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_140717_mc)}));
	if (jule::real(_139242_m->_field_default)) {
		_140717_mc->_field_default=this->self->_method_check_default(_140717_mc,_139242_m->_field_default);
	}
	this->self->_method_check_cases(_139242_m,_140717_mc,_139317_d);
}



inline void _1ab009de8_ScopeChecker::_method_check_match(jule::Ref<_1b61ca014_MatchCase> _141935_m) {
	if (_141935_m->_field_type_match) {
		this->self->_method_check_type_match(_141935_m);
		return;
	}
	this->self->_method_check_common_match(_141935_m);
}



inline void _1ab009de8_ScopeChecker::_method_check_fall(jule::Ref<_1b61ca014_FallSt> _142729_f) {
	if (((*this)._field_cse == 0LL) || (((*this)._field_scope->_field_stmts.len() + 1LL) < (*this)._field_scope->_field_stmts.len())) {
		(*this)._field_s->_method_push_err(_142729_f->_field_token,jule::Str("fallthrough keyword can only useable at end of the case scopes", 62),jule::Slice<jule::Any>({}));
		return;
	}
	_1ab009de8_Case* _143317__case = ((_1ab009de8_Case*)((*this)._field_cse));
	if ((!(jule::real(_143317__case->_field_next)))) {
		(*this)._field_s->_method_push_err(_142729_f->_field_token,jule::Str("fallthrough cannot useable at final case", 40),jule::Slice<jule::Any>({}));
		(*this)._field_s->_method_push_suggestion(jule::Str("remove \"fall\" keyword", 21),jule::Slice<jule::Any>({}));
		return;
	}
	(*this)._field_scope->_field_stmts=jule::append((*this)._field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(jule::new_struct<_1ab009de8_FallSt>(new( std::nothrow ) _1ab009de8_FallSt(static_cast<jule::Uintptr>(((jule::Uintptr)((_143317__case->_field_next).alloc))))))}));
}



inline jule::Ref<_1ab009de8_BreakSt> _1ab009de8_ScopeChecker::_method_check_break_with_label(jule::Ref<_1b61ca014_BreakSt> _144542_b) {
	jule::Ref<_1ab009de8_BreakSt> _144617_brk = this->self->_method_check_plain_break(_144542_b);
	if ((!(jule::real(_144617_brk)))) {
		return jule::new_ref<_1ab009de8_BreakSt>();
	}
	_144617_brk->_field_it=0LL;
	_144617_brk->_field_mtch=0LL;
	jule::Ref<_1ab009de8_ScopeLabel> _145617_label = _1ab009de8_find_label_parent(_144542_b->_field_label._field_kind,this->self->_field_parent);
	if ((!(jule::real(_145617_label)))) {
		this->self->_field_s->_method_push_err(_144542_b->_field_label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>({jule::Any(_144542_b->_field_label._field_kind)}));
		return jule::new_ref<_1ab009de8_BreakSt>();
	}
	_145617_label->_field_used=true;
	if ((_145617_label->_field_pos + 1LL) >= _145617_label->_field_scope->_field_scope->_field_stmts.len()) {
		this->self->_field_s->_method_push_err(_144542_b->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1ab009de8_BreakSt>();
	}
	jule::Int _146913_i = _145617_label->_field_pos + 1LL;
	if (_146913_i >= _145617_label->_field_scope->_field_scope->_field_stmts.len()) {
		this->self->_field_s->_method_push_err(_144542_b->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
	} else {
		jule::Any _147321_st = _145617_label->_field_scope->_field_scope->_field_stmts[static_cast<jule::Int>(_146913_i)];
		{
			auto _match_expr{ _147321_st };
			if (!(_match_expr.type_is<jule::Ref<_1ab009de8_InfIter>>())) { goto _case_end_4440083168; }
			_case_begin_4440083168:;
			{
				_144617_brk->_field_it=((jule::Uintptr)((_147321_st.operator jule::Ref<_1ab009de8_InfIter>()).alloc));
			}
			goto _match_end_4440079952;
			_case_end_4440083168:;
			if (!(_match_expr.type_is<jule::Ref<_1ab009de8_RangeIter>>())) { goto _case_end_4440080832; }
			_case_begin_4440080832:;
			{
				_144617_brk->_field_it=((jule::Uintptr)((_147321_st.operator jule::Ref<_1ab009de8_RangeIter>()).alloc));
			}
			goto _match_end_4440079952;
			_case_end_4440080832:;
			if (!(_match_expr.type_is<jule::Ref<_1ab009de8_WhileIter>>())) { goto _case_end_4440080944; }
			_case_begin_4440080944:;
			{
				_144617_brk->_field_it=((jule::Uintptr)((_147321_st.operator jule::Ref<_1ab009de8_WhileIter>()).alloc));
			}
			goto _match_end_4440079952;
			_case_end_4440080944:;
			if (!(_match_expr.type_is<jule::Ref<_1ab009de8_Match>>())) { goto _case_end_4440081056; }
			_case_begin_4440081056:;
			{
				_144617_brk->_field_mtch=((jule::Uintptr)((_147321_st.operator jule::Ref<_1ab009de8_Match>()).alloc));
			}
			goto _match_end_4440079952;
			_case_end_4440081056:;
			_case_begin_4440080464:;
			{
				this->self->_field_s->_method_push_err(_144542_b->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
			}
			goto _match_end_4440079952;
			_case_end_4440080464:;
			_match_end_4440079952:;
		}
	}
	if (_144617_brk->_field_it != 0LL) {
		if ((!(this->self->_method_check_valid_break_label(_144617_brk->_field_it)))) {
			this->self->_field_s->_method_push_err(_144542_b->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
		}
	}
	if (_144617_brk->_field_mtch != 0LL) {
		if ((!(this->self->_method_check_valid_break_label(_144617_brk->_field_mtch)))) {
			this->self->_field_s->_method_push_err(_144542_b->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
		}
	}
	return _144617_brk;
}



inline jule::Ref<_1ab009de8_BreakSt> _1ab009de8_ScopeChecker::_method_check_plain_break(jule::Ref<_1b61ca014_BreakSt> _149837_b) {
	jule::Ref<_1ab009de8_ScopeChecker> _149917_scope = this->self;
	_julec_label_iter:;
	{
		if (!(((((_149917_scope->_field_it == 0LL) && (_149917_scope->_field_cse == 0LL)) && jule::real(_149917_scope->_field_parent)) && (!(jule::real(_149917_scope->_field_owner)))))) { goto _case_end_4440100624; }
		_case_begin_4440100624:;
		{
			_149917_scope=_149917_scope->_field_parent;
			goto _julec_label_iter;
		}
		goto _match_end_4440100368;
		_case_end_4440100624:;
		if (!((_149917_scope->_field_it != 0LL))) { goto _case_end_4440100752; }
		_case_begin_4440100752:;
		{
			return jule::new_struct<_1ab009de8_BreakSt>(new( std::nothrow ) _1ab009de8_BreakSt(_149917_scope->_field_it,jule::Uintptr()));
		}
		goto _match_end_4440100368;
		_case_end_4440100752:;
		if (!((_149917_scope->_field_cse != 0LL))) { goto _case_end_4440100880; }
		_case_begin_4440100880:;
		{
			return jule::new_struct<_1ab009de8_BreakSt>(new( std::nothrow ) _1ab009de8_BreakSt(jule::Uintptr(),static_cast<jule::Uintptr>(((jule::Uintptr)((((_1ab009de8_Case*)(_149917_scope->_field_cse))->_field_owner).alloc)))));
		}
		goto _match_end_4440100368;
		_case_end_4440100880:;
		_match_end_4440100368:;
	}
	this->self->_field_s->_method_push_err(_149837_b->_field_token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>({}));
	return jule::new_ref<_1ab009de8_BreakSt>();
}



inline void _1ab009de8_ScopeChecker::_method_check_break(jule::Ref<_1b61ca014_BreakSt> _151731_b) {
	if (_151731_b->_field_label._field_id != 0LLU) {
		jule::Ref<_1ab009de8_BreakSt> _151921_brk = this->self->_method_check_break_with_label(_151731_b);
		this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_151921_brk)}));
		return;
	}
	jule::Ref<_1ab009de8_BreakSt> _152417_brk = this->self->_method_check_plain_break(_151731_b);
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_152417_brk)}));
}



inline void _1ab009de8_ScopeChecker::_method_check_ret(jule::Ref<_1b61ca014_RetSt> _152833_r) {
	jule::Ref<_1ab009de8_RetSt> _152917_rt = jule::new_struct<_1ab009de8_RetSt>(new( std::nothrow ) _1ab009de8_RetSt());
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_152917_rt)}));
	jule::Ref<_1a8dc912c_RetTypeChecker> _153217_rtc = jule::new_struct<_1a8dc912c_RetTypeChecker>(new( std::nothrow ) _1a8dc912c_RetTypeChecker(this->self,this->self->_method_get_root()->_field_owner,jule::Slice<jule::Ref<_1ac6d02c0_TypeKind>>(),jule::Slice<jule::Ref<_1b61ca014_Expr>>(),jule::Slice<jule::Ref<_1b623eab2_Var>>(),_152833_r->_field_token,jule::Any()));
	jule::Bool _153713_ok = _153217_rtc->_method_check(_152833_r->_field_expr);
	if ((!(_153713_ok))) {
		return;
	}
	if ((!(jule::real(_152833_r->_field_expr))) && (_153217_rtc->_field_vars.len() == 0LL)) {
		return;
	}
	_152917_rt->_field_vars=_153217_rtc->_field_vars;
	if (jule::real(_152833_r->_field_expr)) {
		_152917_rt->_field_expr=_153217_rtc->_field_model;
	}
}



inline void _1ab009de8_ScopeChecker::_method_check_node(jule::Any _155334_node) {
	{
		auto _match_expr{ _155334_node };
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_Comment>>())) { goto _case_end_4440144176; }
		_case_begin_4440144176:;
		{
			goto _match_end_4440142752;
		}
		goto _match_end_4440142752;
		_case_end_4440144176:;
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_ScopeTree>>())) { goto _case_end_4440144688; }
		_case_begin_4440144688:;
		{
			this->self->_method_check_anon_scope(_155334_node.operator jule::Ref<_1b61ca014_ScopeTree>());
		}
		goto _match_end_4440142752;
		_case_end_4440144688:;
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_VarDecl>>())) { goto _case_end_4440143856; }
		_case_begin_4440143856:;
		{
			this->self->_method_check_var_decl(_155334_node.operator jule::Ref<_1b61ca014_VarDecl>());
		}
		goto _match_end_4440142752;
		_case_end_4440143856:;
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_TypeAliasDecl>>())) { goto _case_end_4440143968; }
		_case_begin_4440143968:;
		{
			this->self->_method_check_type_alias_decl(_155334_node.operator jule::Ref<_1b61ca014_TypeAliasDecl>());
		}
		goto _match_end_4440142752;
		_case_end_4440143968:;
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_Expr>>())) { goto _case_end_4440145232; }
		_case_begin_4440145232:;
		{
			this->self->_method_check_expr(_155334_node.operator jule::Ref<_1b61ca014_Expr>());
		}
		goto _match_end_4440142752;
		_case_end_4440145232:;
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_Conditional>>())) { goto _case_end_4440145344; }
		_case_begin_4440145344:;
		{
			this->self->_method_check_conditional(_155334_node.operator jule::Ref<_1b61ca014_Conditional>());
		}
		goto _match_end_4440142752;
		_case_end_4440145344:;
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_Iter>>())) { goto _case_end_4440145456; }
		_case_begin_4440145456:;
		{
			this->self->_method_check_iter(_155334_node.operator jule::Ref<_1b61ca014_Iter>());
		}
		goto _match_end_4440142752;
		_case_end_4440145456:;
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_ContSt>>())) { goto _case_end_4440145568; }
		_case_begin_4440145568:;
		{
			this->self->_method_check_cont(_155334_node.operator jule::Ref<_1b61ca014_ContSt>());
		}
		goto _match_end_4440142752;
		_case_end_4440145568:;
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_LabelSt>>())) { goto _case_end_4440145680; }
		_case_begin_4440145680:;
		{
			this->self->_method_check_label(_155334_node.operator jule::Ref<_1b61ca014_LabelSt>());
		}
		goto _match_end_4440142752;
		_case_end_4440145680:;
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_GotoSt>>())) { goto _case_end_4440145792; }
		_case_begin_4440145792:;
		{
			this->self->_method_push_goto(_155334_node.operator jule::Ref<_1b61ca014_GotoSt>());
		}
		goto _match_end_4440142752;
		_case_end_4440145792:;
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_AssignSt>>())) { goto _case_end_4440145904; }
		_case_begin_4440145904:;
		{
			this->self->_method_check_assign_st(_155334_node.operator jule::Ref<_1b61ca014_AssignSt>());
		}
		goto _match_end_4440142752;
		_case_end_4440145904:;
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_MatchCase>>())) { goto _case_end_4440146016; }
		_case_begin_4440146016:;
		{
			this->self->_method_check_match(_155334_node.operator jule::Ref<_1b61ca014_MatchCase>());
		}
		goto _match_end_4440142752;
		_case_end_4440146016:;
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_FallSt>>())) { goto _case_end_4440146128; }
		_case_begin_4440146128:;
		{
			this->self->_method_check_fall(_155334_node.operator jule::Ref<_1b61ca014_FallSt>());
		}
		goto _match_end_4440142752;
		_case_end_4440146128:;
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_BreakSt>>())) { goto _case_end_4440146240; }
		_case_begin_4440146240:;
		{
			this->self->_method_check_break(_155334_node.operator jule::Ref<_1b61ca014_BreakSt>());
		}
		goto _match_end_4440142752;
		_case_end_4440146240:;
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_RetSt>>())) { goto _case_end_4440146352; }
		_case_begin_4440146352:;
		{
			this->self->_method_check_ret(_155334_node.operator jule::Ref<_1b61ca014_RetSt>());
		}
		goto _match_end_4440142752;
		_case_end_4440146352:;
		_case_begin_4440143216:;
		{
			jule::outln(jule::Str("error <unimplemented scope node>", 32));
		}
		goto _match_end_4440142752;
		_case_end_4440143216:;
		_match_end_4440142752:;
	}
}



inline void _1ab009de8_ScopeChecker::_method_check_tree(void) {
	{
		auto _range_expr = this->self->_field_tree->_field_stmts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Any _1ab009de8_stmt = *_range_begin;
			_iter_begin_4440174816:;
			{
				this->self->_method_check_node(_1ab009de8_stmt);
			}
			_iter_next_4440174816:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab009de8_stmt = *_range_begin; goto _iter_begin_4440174816; }
			_iter_end_4440174816:;
		}
	}
}



inline void _1ab009de8_ScopeChecker::_method_check_same_scope_goto(jule::Ref<_1ab009de8_ScopeGoto> _158040_gt,jule::Ref<_1ab009de8_ScopeLabel> _158060_label) {
	if (_158060_label->_field_pos < _158040_gt->_field_pos) {
		return;
	}
	jule::Int _158517_i = _158060_label->_field_pos;
	_iter_begin_4440180464:;
	if (!(_158517_i > _158040_gt->_field_pos)) { goto _iter_end_4440180464; }
	{
		jule::Any _158717_stmt = _158060_label->_field_scope->_field_scope->_field_stmts[static_cast<jule::Int>(_158517_i)];
		if (_1ab009de8_st_is_def(_158717_stmt)) {
			(*this)._field_s->_method_push_err(_158040_gt->_field_gt->_field_token,jule::Str("goto @ jumps over declaration(s)", 32),jule::Slice<jule::Any>({jule::Any(_158040_gt->_field_gt->_field_label._field_kind)}));
			goto _iter_end_4440180464;
		}
	}
	_iter_next_4440180464:;
	(_158517_i)--;
	goto _iter_begin_4440180464;
	_iter_end_4440180464:;
}



inline jule::Bool _1ab009de8_ScopeChecker::_method_check_label_parents(jule::Ref<_1ab009de8_ScopeGoto> _159538_gt,jule::Ref<_1ab009de8_ScopeLabel> _159558_label) {
	jule::Ref<_1ab009de8_ScopeChecker> _159617_scope = _159558_label->_field_scope;
	_julec_label_parent_scopes:;
	if (jule::real(_159617_scope->_field_parent) && ((_159617_scope->_field_parent).alloc != (_159538_gt->_field_scope).alloc)) {
		_159617_scope=_159617_scope->_field_parent;
		{
			auto _range_expr = _159617_scope->_field_scope->_field_stmts;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Int _1ab009de8_i = 0;
				jule::Any _1ab009de8_stmt = *_range_begin;
				_iter_begin_4440196256:;
				{
					{
						if (!((_1ab009de8_i >= _159558_label->_field_pos))) { goto _case_end_4440198752; }
						_case_begin_4440198752:;
						{
							return true;
						}
						goto _match_end_4440198512;
						_case_end_4440198752:;
						if (!((_1ab009de8_st_is_def(_1ab009de8_stmt)))) { goto _case_end_4440198880; }
						_case_begin_4440198880:;
						{
							(*this)._field_s->_method_push_err(_159538_gt->_field_gt->_field_token,jule::Str("goto @ jumps over declaration(s)", 32),jule::Slice<jule::Any>({jule::Any(_159538_gt->_field_gt->_field_label._field_kind)}));
							return false;
						}
						goto _match_end_4440198512;
						_case_end_4440198880:;
						_match_end_4440198512:;
					}
				}
				_iter_next_4440196256:;
				++_range_begin;
				if (_range_begin != _range_end) { ++_1ab009de8_i; _1ab009de8_stmt = *_range_begin; goto _iter_begin_4440196256; }
				_iter_end_4440196256:;
			}
		}
		goto _julec_label_parent_scopes;
	}
	return true;
}



inline void _1ab009de8_ScopeChecker::_method_check_goto_scope(jule::Ref<_1ab009de8_ScopeGoto> _161839_gt,jule::Ref<_1ab009de8_ScopeLabel> _161855_label) {
	jule::Int _161917_i = _161839_gt->_field_pos;
	_iter_begin_4440209024:;
	if (!(_161917_i < _161839_gt->_field_scope->_field_scope->_field_stmts.len())) { goto _iter_end_4440209024; }
	{
		{
			if (!((_161917_i >= _161855_label->_field_pos))) { goto _case_end_4440211120; }
			_case_begin_4440211120:;
			{
				return;
			}
			goto _match_end_4440210880;
			_case_end_4440211120:;
			if (!((_1ab009de8_st_is_def(_161839_gt->_field_scope->_field_scope->_field_stmts[static_cast<jule::Int>(_161917_i)])))) { goto _case_end_4440211248; }
			_case_begin_4440211248:;
			{
				(*this)._field_s->_method_push_err(_161839_gt->_field_gt->_field_token,jule::Str("goto @ jumps over declaration(s)", 32),jule::Slice<jule::Any>({jule::Any(_161839_gt->_field_gt->_field_label._field_kind)}));
				return;
			}
			goto _match_end_4440210880;
			_case_end_4440211248:;
			_match_end_4440210880:;
		}
	}
	_iter_next_4440209024:;
	(_161917_i)++;
	goto _iter_begin_4440209024;
	_iter_end_4440209024:;
}



inline void _1ab009de8_ScopeChecker::_method_check_diff_scope_goto(jule::Ref<_1ab009de8_ScopeGoto> _163244_gt,jule::Ref<_1ab009de8_ScopeLabel> _163264_label) {
	{
		if (!(((_163264_label->_field_scope->_field_child_index > 0LL) && (_163244_gt->_field_scope->_field_child_index == 0LL)))) { goto _case_end_4440221888; }
		_case_begin_4440221888:;
		{
			if ((!((*this)._method_check_label_parents(_163244_gt,_163264_label)))) {
				return;
			}
		}
		goto _match_end_4440221648;
		_case_end_4440221888:;
		if (!((_163264_label->_field_scope->_field_child_index < _163244_gt->_field_scope->_field_child_index))) { goto _case_end_4440222016; }
		_case_begin_4440222016:;
		{
			return;
		}
		goto _match_end_4440221648;
		_case_end_4440222016:;
		_match_end_4440221648:;
	}
	jule::Ref<_1ab009de8_ScopeChecker> _164317_scope = _163264_label->_field_scope;
	jule::Int _164417_i = _163264_label->_field_pos - 1LL;
	_iter_begin_4440221744:;
	if (!(_164417_i >= 0LL)) { goto _iter_end_4440221744; }
	{
		jule::Any _164617_s = _164317_scope->_field_scope->_field_stmts[static_cast<jule::Int>(_164417_i)];
		{
			auto _match_expr{ _164617_s };
			if (!(_match_expr.type_is<jule::Ref<_1ab009de8_Scope>>())) { goto _case_end_4440232336; }
			_case_begin_4440232336:;
			{
				if (_164417_i <= _163244_gt->_field_pos) {
					return;
				}
			}
			goto _match_end_4440231824;
			_case_end_4440232336:;
			_match_end_4440231824:;
		}
		if (_1ab009de8_st_is_def(_164617_s)) {
			(*this)._field_s->_method_push_err(_163244_gt->_field_gt->_field_token,jule::Str("goto @ jumps over declaration(s)", 32),jule::Slice<jule::Any>({jule::Any(_163244_gt->_field_gt->_field_label._field_kind)}));
			goto _iter_end_4440221744;
		}
	}
	_iter_next_4440221744:;
	(_164417_i)--;
	goto _iter_begin_4440221744;
	_iter_end_4440221744:;
	if (jule::real(_164317_scope->_field_parent) && ((_164317_scope->_field_parent).alloc != (_163244_gt->_field_scope).alloc)) {
		(*this)._method_check_label_parents(_163244_gt,_163264_label);
	} else {
		(*this)._method_check_goto_scope(_163244_gt,_163264_label);
	}
}



inline void _1ab009de8_ScopeChecker::_method_check_goto(jule::Ref<_1ab009de8_ScopeGoto> _166833_gt,jule::Ref<_1ab009de8_ScopeLabel> _166853_label) {
	{
		if (!(((_166833_gt->_field_scope).alloc == (_166853_label->_field_scope).alloc))) { goto _case_end_4440244192; }
		_case_begin_4440244192:;
		{
			(*this)._method_check_same_scope_goto(_166833_gt,_166853_label);
		}
		goto _match_end_4440243952;
		_case_end_4440244192:;
		if (!((_166853_label->_field_scope->_field_child_index > 0LL))) { goto _case_end_4440244320; }
		_case_begin_4440244320:;
		{
			(*this)._method_check_diff_scope_goto(_166833_gt,_166853_label);
		}
		goto _match_end_4440243952;
		_case_end_4440244320:;
		_match_end_4440243952:;
	}
}



inline void _1ab009de8_ScopeChecker::_method_check_gotos(void) {
	{
		auto _range_expr = (*this)._field_gotos.get();
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab009de8_ScopeGoto> _1ab009de8_gt = *_range_begin;
			_iter_begin_4440249904:;
			{
				jule::Ref<_1ab009de8_ScopeLabel> _168021_label = (*this)._method_find_label_all(_1ab009de8_gt->_field_gt->_field_label._field_kind);
				if ((!(jule::real(_168021_label)))) {
					(*this)._field_s->_method_push_err(_1ab009de8_gt->_field_gt->_field_token,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>({jule::Any(_1ab009de8_gt->_field_gt->_field_label._field_kind)}));
					goto _iter_next_4440249904;
				}
				_168021_label->_field_used=true;
				(*this)._method_check_goto(_1ab009de8_gt,_168021_label);
			}
			_iter_next_4440249904:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab009de8_gt = *_range_begin; goto _iter_begin_4440249904; }
			_iter_end_4440249904:;
		}
	}
}



inline void _1ab009de8_ScopeChecker::_method_check_labels(void) {
	{
		auto _range_expr = (*this)._field_labels.get();
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab009de8_ScopeLabel> _1ab009de8_l = *_range_begin;
			_iter_begin_4440260672:;
			{
				if ((!(_1ab009de8_l->_field_used))) {
					(*this)._field_s->_method_push_err(_1ab009de8_l->_field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>({jule::Any(_1ab009de8_l->_field_label->_field_ident)}));
				}
			}
			_iter_next_4440260672:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab009de8_l = *_range_begin; goto _iter_begin_4440260672; }
			_iter_end_4440260672:;
		}
	}
}



inline void _1ab009de8_ScopeChecker::_method_check_vars(void) {
	{
		auto _range_expr = (*this)._field_table->_field_vars;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b623eab2_Var> _1ab009de8_v = *_range_begin;
			_iter_begin_4440266640:;
			{
				if ((((!(_1ab009de8_v->_field_used)) && (!(_1b61ec5ec_is_ignore_ident(_1ab009de8_v->_field_ident)))) && (!(_1b61ec5ec_is_anon_ident(_1ab009de8_v->_field_ident)))) && (_1ab009de8_v->_field_ident != jule::Str("self", 4))) {
					(*this)._field_s->_method_push_err(_1ab009de8_v->_field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>({jule::Any(_1ab009de8_v->_field_ident)}));
				}
			}
			_iter_next_4440266640:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab009de8_v = *_range_begin; goto _iter_begin_4440266640; }
			_iter_end_4440266640:;
		}
	}
}



inline void _1ab009de8_ScopeChecker::_method_check_aliases(void) {
	{
		auto _range_expr = (*this)._field_table->_field_type_aliases;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ac6d02c0_TypeAlias> _1ab009de8_a = *_range_begin;
			_iter_begin_4440274160:;
			{
				if (((!(_1ab009de8_a->_field_used)) && (!(_1b61ec5ec_is_ignore_ident(_1ab009de8_a->_field_ident)))) && (!(_1b61ec5ec_is_anon_ident(_1ab009de8_a->_field_ident)))) {
					(*this)._field_s->_method_push_err(_1ab009de8_a->_field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>({jule::Any(_1ab009de8_a->_field_ident)}));
				}
			}
			_iter_next_4440274160:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab009de8_a = *_range_begin; goto _iter_begin_4440274160; }
			_iter_end_4440274160:;
		}
	}
}



inline void _1ab009de8_ScopeChecker::_method_check(jule::Ref<_1b61ca014_ScopeTree> _171629_tree,jule::Ref<_1ab009de8_Scope> _171651_s) {
	_171651_s->_field_deferred=_171629_tree->_field_deferred;
	_171651_s->_field_unsafety=_171629_tree->_field_unsafety;
	jule::I64 _172013_errors = this->self->_field_s->_field_errors.len();
	this->self->_field_tree=_171629_tree;
	this->self->_field_scope=_171651_s;
	this->self->_method_check_tree();
	if (_172013_errors == this->self->_field_s->_field_errors.len()) {
		this->self->_method_check_vars();
		this->self->_method_check_aliases();
	}
	if (this->self->_method_is_root()) {
		this->self->_method_check_gotos();
		this->self->_method_check_labels();
	}
}



inline jule::Ref<_1ab009de8_ScopeChecker> _1ab009de8_ScopeChecker::_method_new_child_checker(void) {
	jule::Ref<_1ab009de8_ScopeChecker> _174017_base = _1ab009de8_new_scope_checker_base(this->self->_field_s,jule::new_ref<_1b557cd24_FnIns>());
	_174017_base->_field_parent=this->self;
	_174017_base->_field_labels=this->self->_field_labels;
	_174017_base->_field_gotos=this->self->_field_gotos;
	_174017_base->_field_child_index=static_cast<jule::Int>(this->self->_field_child_index + 1LL);
	return _174017_base;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab009de8_ScopeChecker &_Src) {
	_Stream << "ScopeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "child_index:" << _Src._field_child_index << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab33d083_BinopExprModel &_Src) {
	_Stream << "BinopExprModel{";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab33d083_UnaryExprModel &_Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab33d083_GetRefPtrExprModel &_Src) {
	_Stream << "GetRefPtrExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab33d083_StructArgExprModel &_Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab33d083_StructLitExprModel &_Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "strct:" << _Src._field_strct << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab33d083_AllocStructLitExprModel &_Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "lit:" << _Src._field_lit;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab33d083_CastingExprModel &_Src) {
	_Stream << "CastingExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr_kind:" << _Src._field_expr_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab33d083_FnCallExprModel &_Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "is_co:" << _Src._field_is_co << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab33d083_SliceExprModel &_Src) {
	_Stream << "SliceExprModel{";
	_Stream << "elem_kind:" << _Src._field_elem_kind << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab33d083_IndexigExprModel &_Src) {
	_Stream << "IndexigExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "index:" << _Src._field_index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab33d083_AnonFnExprModel &_Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "global:" << _Src._field_global;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab33d083_KeyValPairExprModel &_Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab33d083_MapExprModel &_Src) {
	_Stream << "MapExprModel{";
	_Stream << "key_kind:" << _Src._field_key_kind << ", ";
	_Stream << "val_kind:" << _Src._field_val_kind << ", ";
	_Stream << "entries:" << _Src._field_entries;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab33d083_SlicingExprModel &_Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab33d083_TraitSubIdentExprModel &_Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab33d083_StructSubIdentExprModel &_Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "expr_kind:" << _Src._field_expr_kind << ", ";
	_Stream << "method:" << _Src._field_method << ", ";
	_Stream << "field:" << _Src._field_field;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab33d083_StructStaticIdentExprModel &_Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "structure:" << _Src._field_structure << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "method:" << _Src._field_method;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab33d083_ArrayExprModel &_Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab33d083_CommonIdentExprModel &_Src) {
	_Stream << "CommonIdentExprModel{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab33d083_CommonSubIdentExprModel &_Src) {
	_Stream << "CommonSubIdentExprModel{";
	_Stream << "expr_kind:" << _Src._field_expr_kind << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab33d083_TupleExprModel &_Src) {
	_Stream << "TupleExprModel{";
	_Stream << "datas:" << _Src._field_datas;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab33d083_BuiltinOutCallExprModel &_Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab33d083_BuiltinOutlnCallExprModel &_Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab33d083_BuiltinCloneCallExprModel &_Src) {
	_Stream << "BuiltinCloneCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab33d083_BuiltinNewCallExprModel &_Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "init:" << _Src._field_init;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab33d083_BuiltinRealCallExprModel &_Src) {
	_Stream << "BuiltinRealCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab33d083_BuiltinDropCallExprModel &_Src) {
	_Stream << "BuiltinDropCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab33d083_BuiltinPanicCallExprModel &_Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab33d083_BuiltinMakeCallExprModel &_Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "len:" << _Src._field_len << ", ";
	_Stream << "cap:" << _Src._field_cap;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab33d083_BuiltinAppendCallExprModel &_Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "elements:" << _Src._field_elements;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab33d083_BuiltinErrorTraitSubIdentExprModel &_Src) {
	_Stream << "BuiltinErrorTraitSubIdentExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab33d083_SizeofExprModel &_Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab33d083_AlignofExprModel &_Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab33d083_RuneExprModel &_Src) {
	_Stream << "RuneExprModel{";
	_Stream << "code:" << _Src._field_code;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab33d083_ExplicitDerefExprModel &_Src) {
	_Stream << "ExplicitDerefExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab33d083_IntegratedToStrExprModel &_Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab33d083_TernaryExprModel &_Src) {
	_Stream << "TernaryExprModel{";
	_Stream << "condition:" << _Src._field_condition << ", ";
	_Stream << "true_expr:" << _Src._field_true_expr << ", ";
	_Stream << "false_expr:" << _Src._field_false_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_1ab194c20_ImportInfo> _1ab194c20_Package::_method_find_package(jule::Str ) {
	return jule::new_ref<_1ab194c20_ImportInfo>();
}



inline jule::Ref<_1ab194c20_ImportInfo> _1ab194c20_Package::_method_select_package(jule::Fn<jule::Bool(jule::Ref<_1ab194c20_ImportInfo>)> ) {
	return jule::new_ref<_1ab194c20_ImportInfo>();
}



inline jule::Ref<_1b623eab2_Var> _1ab194c20_Package::_method_find_var(jule::Str _26631_ident,jule::Bool _26643_cpp_linked) {
	return _1ab194c20_find_var_in_package((*this)._field_files,_26631_ident,_26643_cpp_linked);
}



inline jule::Ref<_1ac6d02c0_TypeAlias> _1ab194c20_Package::_method_find_type_alias(jule::Str _27238_ident,jule::Bool _27250_cpp_linked) {
	return _1ab194c20_find_type_alias_in_package((*this)._field_files,_27238_ident,_27250_cpp_linked);
}



inline jule::Ref<_1b5e07a00_Struct> _1ab194c20_Package::_method_find_struct(jule::Str _27834_ident,jule::Bool _27846_cpp_linked) {
	return _1ab194c20_find_struct_in_package((*this)._field_files,_27834_ident,_27846_cpp_linked);
}



inline jule::Ref<_1b557cd24_Fn> _1ab194c20_Package::_method_find_fn(jule::Str _28430_ident,jule::Bool _28442_cpp_linked) {
	return _1ab194c20_find_fn_in_package((*this)._field_files,_28430_ident,_28442_cpp_linked);
}



inline jule::Ref<_1aaee9091_Trait> _1ab194c20_Package::_method_find_trait(jule::Str _29033_ident) {
	return _1ab194c20_find_trait_in_package((*this)._field_files,_29033_ident);
}



inline jule::Ref<_1a909ac6b_Enum> _1ab194c20_Package::_method_find_enum(jule::Str _29632_ident) {
	return _1ab194c20_find_enum_in_package((*this)._field_files,_29632_ident);
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab194c20_Package &_Src) {
	_Stream << "Package{";
	_Stream << "files:" << _Src._field_files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_1ab194c20_ImportInfo> _1ab195050_Sema::_method_find_package(jule::Str _33335_ident) {
	return (*this)._field_file->_method_find_package(_33335_ident);
}



inline jule::Ref<_1ab194c20_ImportInfo> _1ab195050_Sema::_method_select_package(jule::Fn<jule::Bool(jule::Ref<_1ab194c20_ImportInfo>)> _34337_selector) {
	return (*this)._field_file->_method_select_package(_34337_selector);
}



inline jule::Ref<_1b623eab2_Var> _1ab195050_Sema::_method_find_var(jule::Str _35331_ident,jule::Bool _35343_cpp_linked) {
	jule::Ref<_1b623eab2_Var> _35517_v = _1ab194c20_find_var_in_package((*this)._field_files,_35331_ident,_35343_cpp_linked);
	if (jule::real(_35517_v)) {
		return _35517_v;
	}
	{
		auto _range_expr = (*this)._field_file->_field_imports;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab194c20_ImportInfo> _1ab195050_imp = *_range_begin;
			_iter_begin_4440390672:;
			{
				if ((!(_1ab195050_imp_is_lookupable(_1ab195050_imp,_35331_ident)))) {
					goto _iter_next_4440390672;
				}
				_35517_v=_1ab195050_imp->_method_find_var(_35331_ident,_35343_cpp_linked);
				if (jule::real(_35517_v) && (*this)._method_is_accessible_define(_35517_v->_field_public,_35517_v->_field_token)) {
					return _35517_v;
				}
			}
			_iter_next_4440390672:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab195050_imp = *_range_begin; goto _iter_begin_4440390672; }
			_iter_end_4440390672:;
		}
	}
	return jule::new_ref<_1b623eab2_Var>();
}



inline jule::Ref<_1ac6d02c0_TypeAlias> _1ab195050_Sema::_method_find_type_alias(jule::Str _38038_ident,jule::Bool _38050_cpp_linked) {
	jule::Ref<_1ac6d02c0_TypeAlias> _38217_ta = _1ab194c20_find_type_alias_in_package((*this)._field_files,_38038_ident,_38050_cpp_linked);
	if (jule::real(_38217_ta)) {
		return _38217_ta;
	}
	{
		auto _range_expr = (*this)._field_file->_field_imports;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab194c20_ImportInfo> _1ab195050_imp = *_range_begin;
			_iter_begin_4440402592:;
			{
				if ((!(_1ab195050_imp_is_lookupable(_1ab195050_imp,_38038_ident)))) {
					goto _iter_next_4440402592;
				}
				_38217_ta=_1ab195050_imp->_method_find_type_alias(_38038_ident,_38050_cpp_linked);
				if (jule::real(_38217_ta) && (*this)._method_is_accessible_define(_38217_ta->_field_public,_38217_ta->_field_token)) {
					return _38217_ta;
				}
			}
			_iter_next_4440402592:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab195050_imp = *_range_begin; goto _iter_begin_4440402592; }
			_iter_end_4440402592:;
		}
	}
	return jule::new_ref<_1ac6d02c0_TypeAlias>();
}



inline jule::Ref<_1b5e07a00_Struct> _1ab195050_Sema::_method_find_struct(jule::Str _40734_ident,jule::Bool _40746_cpp_linked) {
	jule::Ref<_1b5e07a00_Struct> _40917_s = _1ab194c20_find_struct_in_package((*this)._field_files,_40734_ident,_40746_cpp_linked);
	if (jule::real(_40917_s)) {
		return _40917_s;
	}
	{
		auto _range_expr = (*this)._field_file->_field_imports;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab194c20_ImportInfo> _1ab195050_imp = *_range_begin;
			_iter_begin_4440413648:;
			{
				if ((!(_1ab195050_imp_is_lookupable(_1ab195050_imp,_40734_ident)))) {
					goto _iter_next_4440413648;
				}
				_40917_s=_1ab195050_imp->_method_find_struct(_40734_ident,_40746_cpp_linked);
				if (jule::real(_40917_s) && (*this)._method_is_accessible_define(_40917_s->_field_public,_40917_s->_field_token)) {
					return _40917_s;
				}
			}
			_iter_next_4440413648:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab195050_imp = *_range_begin; goto _iter_begin_4440413648; }
			_iter_end_4440413648:;
		}
	}
	return jule::new_ref<_1b5e07a00_Struct>();
}



inline jule::Ref<_1b557cd24_Fn> _1ab195050_Sema::_method_find_fn(jule::Str _43430_ident,jule::Bool _43442_cpp_linked) {
	jule::Ref<_1b557cd24_Fn> _43617_f = _1ab194c20_find_fn_in_package((*this)._field_files,_43430_ident,_43442_cpp_linked);
	if (jule::real(_43617_f)) {
		return _43617_f;
	}
	{
		auto _range_expr = (*this)._field_file->_field_imports;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab194c20_ImportInfo> _1ab195050_imp = *_range_begin;
			_iter_begin_4440424528:;
			{
				if ((!(_1ab195050_imp_is_lookupable(_1ab195050_imp,_43430_ident)))) {
					goto _iter_next_4440424528;
				}
				_43617_f=_1ab195050_imp->_method_find_fn(_43430_ident,_43442_cpp_linked);
				if (jule::real(_43617_f) && (*this)._method_is_accessible_define(_43617_f->_field_public,_43617_f->_field_token)) {
					return _43617_f;
				}
			}
			_iter_next_4440424528:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab195050_imp = *_range_begin; goto _iter_begin_4440424528; }
			_iter_end_4440424528:;
		}
	}
	return jule::new_ref<_1b557cd24_Fn>();
}



inline jule::Ref<_1aaee9091_Trait> _1ab195050_Sema::_method_find_trait(jule::Str _46133_ident) {
	jule::Ref<_1aaee9091_Trait> _46317_t = _1ab194c20_find_trait_in_package((*this)._field_files,_46133_ident);
	if (jule::real(_46317_t)) {
		return _46317_t;
	}
	{
		auto _range_expr = (*this)._field_file->_field_imports;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab194c20_ImportInfo> _1ab195050_imp = *_range_begin;
			_iter_begin_4440434176:;
			{
				if ((!(_1ab195050_imp_is_lookupable(_1ab195050_imp,_46133_ident)))) {
					goto _iter_next_4440434176;
				}
				_46317_t=_1ab195050_imp->_method_find_trait(_46133_ident);
				if (jule::real(_46317_t) && (*this)._method_is_accessible_define(_46317_t->_field_public,_46317_t->_field_token)) {
					return _46317_t;
				}
			}
			_iter_next_4440434176:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab195050_imp = *_range_begin; goto _iter_begin_4440434176; }
			_iter_end_4440434176:;
		}
	}
	return jule::new_ref<_1aaee9091_Trait>();
}



inline jule::Ref<_1a909ac6b_Enum> _1ab195050_Sema::_method_find_enum(jule::Str _48832_ident) {
	jule::Ref<_1a909ac6b_Enum> _49017_e = _1ab194c20_find_enum_in_package((*this)._field_files,_48832_ident);
	if (jule::real(_49017_e)) {
		return _49017_e;
	}
	{
		auto _range_expr = (*this)._field_file->_field_imports;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab194c20_ImportInfo> _1ab195050_imp = *_range_begin;
			_iter_begin_4440444112:;
			{
				if ((!(_1ab195050_imp_is_lookupable(_1ab195050_imp,_48832_ident)))) {
					goto _iter_next_4440444112;
				}
				_49017_e=_1ab195050_imp->_method_find_enum(_48832_ident);
				if (jule::real(_49017_e) && (*this)._method_is_accessible_define(_49017_e->_field_public,_49017_e->_field_token)) {
					return _49017_e;
				}
			}
			_iter_next_4440444112:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab195050_imp = *_range_begin; goto _iter_begin_4440444112; }
			_iter_end_4440444112:;
		}
	}
	return jule::new_ref<_1a909ac6b_Enum>();
}



inline jule::Bool _1ab195050_Sema::_method_is_flag(jule::Int _51222_flags) {
	return ((*this)._field_flags & _51222_flags) == _51222_flags;
}



inline void _1ab195050_Sema::_method_set_current_file(jule::Ref<_1ab00cc20_SymbolTable> _51439_f) {
	(*this)._field_file=_51439_f;
}



inline void _1ab195050_Sema::_method_push_err(_1b61ec5ec_Token _51627_token,jule::Str _51641_fmt,jule::Slice<jule::Any> _51654_args) {
	(*this)._field_errors=jule::append((*this)._field_errors,jule::Slice<_1cdeeb191_Log>({_1ab195050_compiler_err(_51627_token,true,_51641_fmt,_51654_args)}));
}



inline void _1ab195050_Sema::_method_push_suggestion(jule::Str _52134_fmt,jule::Slice<jule::Any> _52147_args) {
	{
		_1ab195050_push_suggestion((&((*this)._field_errors[static_cast<jule::Int>((*this)._field_errors.len() - 1LL)])),_52134_fmt,_52147_args);
	}
}



inline jule::Bool _1ab195050_Sema::_method_is_accessible_define(jule::Bool _52635_public,_1b61ec5ec_Token _52649_token) {
	return (_52635_public || (!(jule::real(_52649_token._field_file)))) || ((*this)._field_file->_field_file->_method_dir() == _52649_token._field_file->_method_dir());
}



inline jule::Bool _1ab195050_Sema::_method_is_duplicated_ident(jule::Uintptr _53334_itself,jule::Str _53351_ident,jule::Bool _53363_cpp_linked) {
	{
		auto _range_expr = (*this)._field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab00cc20_SymbolTable> _1ab195050_f = *_range_begin;
			_iter_begin_4440474960:;
			{
				if (_1ab195050_f->_method_is_duplicated_ident(_53334_itself,_53351_ident,_53363_cpp_linked)) {
					return true;
				}
				{
					auto _range_expr = _1ab195050_f->_field_imports;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Ref<_1ab194c20_ImportInfo> _1ab195050_imp = *_range_begin;
						_iter_begin_4440479872:;
						{
							{
								auto _range_expr = _1ab195050_imp->_field_selected;
								if (_range_expr.begin() != _range_expr.end()) {
									auto _range_begin = _range_expr.begin();
									const auto _range_end = _range_expr.end();
									_1b61ec5ec_Token _1ab195050_selected = *_range_begin;
									_iter_begin_4440481712:;
									{
										if (_1ab195050_selected._field_kind == _53351_ident) {
											return true;
										}
									}
									_iter_next_4440481712:;
									++_range_begin;
									if (_range_begin != _range_end) { _1ab195050_selected = *_range_begin; goto _iter_begin_4440481712; }
									_iter_end_4440481712:;
								}
							}
						}
						_iter_next_4440479872:;
						++_range_begin;
						if (_range_begin != _range_end) { _1ab195050_imp = *_range_begin; goto _iter_begin_4440479872; }
						_iter_end_4440479872:;
					}
				}
			}
			_iter_next_4440474960:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab195050_f = *_range_begin; goto _iter_begin_4440474960; }
			_iter_end_4440474960:;
		}
	}
	return false;
}



inline jule::Bool _1ab195050_Sema::_method_check_generic_quantity(jule::Int _55041_required,jule::Int _55056_given,_1b61ec5ec_Token _55068_error_token) {
	jule::Bool _55090_ok = jule::Bool();
	{
		if (!(((_55041_required == 0LL) && (_55056_given > 0LL)))) { goto _case_end_4440488864; }
		_case_begin_4440488864:;
		{
			(*this)._method_push_err(_55068_error_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
			_55090_ok = false;
			return _55090_ok;
		}
		goto _match_end_4440487664;
		_case_end_4440488864:;
		if (!(((_55041_required > 0LL) && (_55056_given == 0LL)))) { goto _case_end_4440488976; }
		_case_begin_4440488976:;
		{
			(*this)._method_push_err(_55068_error_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>({}));
			_55090_ok = false;
			return _55090_ok;
		}
		goto _match_end_4440487664;
		_case_end_4440488976:;
		if (!((_55041_required < _55056_given))) { goto _case_end_4440489088; }
		_case_begin_4440489088:;
		{
			(*this)._method_push_err(_55068_error_token,jule::Str("overflow generics", 17),jule::Slice<jule::Any>({}));
			_55090_ok = false;
			return _55090_ok;
		}
		goto _match_end_4440487664;
		_case_end_4440489088:;
		if (!((_55041_required > _55056_given))) { goto _case_end_4440488112; }
		_case_begin_4440488112:;
		{
			(*this)._method_push_err(_55068_error_token,jule::Str("missing generics", 16),jule::Slice<jule::Any>({}));
			_55090_ok = false;
			return _55090_ok;
		}
		goto _match_end_4440487664;
		_case_end_4440488112:;
		_case_begin_4440487808:;
		{
			_55090_ok = true;
			return _55090_ok;
		}
		goto _match_end_4440487664;
		_case_end_4440487808:;
		_match_end_4440487664:;
	}
}



inline jule::Bool _1ab195050_Sema::_method_is_duplicated_import_selection(jule::Uintptr _57345_itself,jule::Str _57362_ident) {
	{
		auto _range_expr = (*this)._field_file->_field_imports;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab194c20_ImportInfo> _1ab195050_imp = *_range_begin;
			_iter_begin_4440500416:;
			{
				if (((jule::Uintptr)((_1ab195050_imp).alloc)) == _57345_itself) {
					goto _iter_end_4440500416;
				}
				if (_1ab195050_imp->_method_exist_ident(_57362_ident)) {
					return true;
				}
			}
			_iter_next_4440500416:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab195050_imp = *_range_begin; goto _iter_begin_4440500416; }
			_iter_end_4440500416:;
		}
	}
	return false;
}



inline jule::Any _1ab195050_Sema::_method_get_import_def(jule::Str _58829_ident,jule::Ref<_1ab194c20_ImportInfo>& _58846_imp) {
	if (_1aae49684_find_package_builtin_def(_58846_imp->_field_link_path,_58829_ident) != nullptr) {
		return jule::Any(true);
	}
	{
		auto _range_expr = _58846_imp->_field_package->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab00cc20_SymbolTable> _1ab195050_f = *_range_begin;
			_iter_begin_4440509808:;
			{
				
				jule::Any _59521_def = _1ab195050_f->_method_def_by_ident(_58829_ident,false);
				if (_59521_def != nullptr) {
					return _59521_def;
				}
			}
			_iter_next_4440509808:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab195050_f = *_range_begin; goto _iter_begin_4440509808; }
			_iter_end_4440509808:;
		}
	}
	return jule::Any(nullptr);
}



inline void _1ab195050_Sema::_method_check_import_selections(jule::Ref<_1ab194c20_ImportInfo>& _60447_imp) {
	{
		auto _range_expr = _60447_imp->_field_selected;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			_1b61ec5ec_Token _1ab195050_ident = *_range_begin;
			_iter_begin_4440516096:;
			{
				if (_1ab195050_ident._field_kind == jule::Str("self", 4)) {
					goto _iter_next_4440516096;
				}
				if ((*this)._method_is_duplicated_import_selection(((jule::Uintptr)((_60447_imp).alloc)),_1ab195050_ident._field_kind)) {
					(*this)._method_push_err(_1ab195050_ident,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1ab195050_ident._field_kind)}));
					(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
					goto _iter_next_4440516096;
				}
				jule::Any _61621_def = (*this)._method_get_import_def(_1ab195050_ident._field_kind,_60447_imp);
				{
					auto _match_expr{ _61621_def };
					if (!(_match_expr.type_is<jule::Bool>())) { goto _case_end_4440525824; }
					_case_begin_4440525824:;
					{
						goto _iter_next_4440516096;
					}
					goto _match_end_4440519920;
					_case_end_4440525824:;
					if (!(_match_expr.type_is<jule::Ref<_1b623eab2_Var>>())) { goto _case_end_4440525936; }
					_case_begin_4440525936:;
					{
						jule::Ref<_1b623eab2_Var> _62325_v = _61621_def.operator jule::Ref<_1b623eab2_Var>();
						if ((*this)._method_is_accessible_define(_62325_v->_field_public,_62325_v->_field_token)) {
							goto _iter_next_4440516096;
						}
					}
					goto _match_end_4440519920;
					_case_end_4440525936:;
					if (!(_match_expr.type_is<jule::Ref<_1ac6d02c0_TypeAlias>>())) { goto _case_end_4440526048; }
					_case_begin_4440526048:;
					{
						jule::Ref<_1ac6d02c0_TypeAlias> _62925_ta = _61621_def.operator jule::Ref<_1ac6d02c0_TypeAlias>();
						if ((*this)._method_is_accessible_define(_62925_ta->_field_public,_62925_ta->_field_token)) {
							goto _iter_next_4440516096;
						}
					}
					goto _match_end_4440519920;
					_case_end_4440526048:;
					if (!(_match_expr.type_is<jule::Ref<_1b5e07a00_Struct>>())) { goto _case_end_4440528032; }
					_case_begin_4440528032:;
					{
						jule::Ref<_1b5e07a00_Struct> _63525_strct = _61621_def.operator jule::Ref<_1b5e07a00_Struct>();
						if ((*this)._method_is_accessible_define(_63525_strct->_field_public,_63525_strct->_field_token)) {
							goto _iter_next_4440516096;
						}
					}
					goto _match_end_4440519920;
					_case_end_4440528032:;
					if (!(_match_expr.type_is<jule::Ref<_1aaee9091_Trait>>())) { goto _case_end_4440528144; }
					_case_begin_4440528144:;
					{
						jule::Ref<_1aaee9091_Trait> _64125_t = _61621_def.operator jule::Ref<_1aaee9091_Trait>();
						if ((*this)._method_is_accessible_define(_64125_t->_field_public,_64125_t->_field_token)) {
							goto _iter_next_4440516096;
						}
					}
					goto _match_end_4440519920;
					_case_end_4440528144:;
					if (!(_match_expr.type_is<jule::Ref<_1a909ac6b_Enum>>())) { goto _case_end_4440528256; }
					_case_begin_4440528256:;
					{
						jule::Ref<_1a909ac6b_Enum> _64725_e = _61621_def.operator jule::Ref<_1a909ac6b_Enum>();
						if ((*this)._method_is_accessible_define(_64725_e->_field_public,_64725_e->_field_token)) {
							goto _iter_next_4440516096;
						}
					}
					goto _match_end_4440519920;
					_case_end_4440528256:;
					if (!(_match_expr.type_is<jule::Ref<_1b557cd24_Fn>>())) { goto _case_end_4440528368; }
					_case_begin_4440528368:;
					{
						jule::Ref<_1b557cd24_Fn> _65325_f = _61621_def.operator jule::Ref<_1b557cd24_Fn>();
						if ((*this)._method_is_accessible_define(_65325_f->_field_public,_65325_f->_field_token)) {
							goto _iter_next_4440516096;
						}
					}
					goto _match_end_4440519920;
					_case_end_4440528368:;
					_case_begin_4440525264:;
					{
						(*this)._method_push_err(_1ab195050_ident,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_1ab195050_ident._field_kind)}));
						goto _iter_next_4440516096;
					}
					goto _match_end_4440519920;
					_case_end_4440525264:;
					_match_end_4440519920:;
				}
				(*this)._method_push_err(_1ab195050_ident,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_1ab195050_ident._field_kind)}));
				(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>({}));
			}
			_iter_next_4440516096:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab195050_ident = *_range_begin; goto _iter_begin_4440516096; }
			_iter_end_4440516096:;
		}
	}
}



inline jule::Bool _1ab195050_Sema::_method_is_use_alias_duplication(jule::Ref<_1ab194c20_ImportInfo>& _66844_imp) {
	if (_66844_imp->_field_alias.len() == 0LL) {
		return false;
	}
	{
		auto _range_expr = (*this)._field_file->_field_imports;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab194c20_ImportInfo> _1ab195050_imp2 = *_range_begin;
			_iter_begin_4440555088:;
			{
				if ((_1ab195050_imp2).alloc == (_66844_imp).alloc) {
					goto _iter_end_4440555088;
				}
				if (_1ab195050_imp2->_field_alias == _66844_imp->_field_alias) {
					return true;
				}
			}
			_iter_next_4440555088:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab195050_imp2 = *_range_begin; goto _iter_begin_4440555088; }
			_iter_end_4440555088:;
		}
	}
	return false;
}



inline jule::Bool _1ab195050_Sema::_method_check_import(jule::Ref<_1ab194c20_ImportInfo>& _68436_imp) {
	if (_68436_imp->_field_cpp_linked || (_68436_imp->_field_package->_field_files.len() == 0LL)) {
		return true;
	}
	if ((*this)._method_is_use_alias_duplication(_68436_imp)) {
		(*this)._method_push_err(_68436_imp->_field_token,jule::Str("identifier \"@\" is already used for another use declaration", 58),jule::Slice<jule::Any>({jule::Any(_68436_imp->_field_alias)}));
		(*this)._method_push_suggestion(jule::Str("rename alias for this use declaration to avoid duplication", 58),jule::Slice<jule::Any>({}));
	}
	if (_68436_imp->_field_duplicate) {
		return true;
	}
	jule::Ref<_1ab195050_Sema> _69817_sema = jule::new_struct<_1ab195050_Sema>(new( std::nothrow ) _1ab195050_Sema(jule::Slice<_1cdeeb191_Log>(),jule::Slice<jule::Ref<_1ab00cc20_SymbolTable>>(),jule::Ref<_1ab00cc20_SymbolTable>(),(*this)._field_flags));
	_69817_sema->_method_check(_68436_imp->_field_package->_field_files);
	if (_69817_sema->_field_errors.len() > 0LL) {
		(*this)._field_errors=jule::append((*this)._field_errors,_69817_sema->_field_errors);
		return false;
	}
	(*this)._method_check_import_selections(_68436_imp);
	return true;
}



inline void _1ab195050_Sema::_method_check_imports(void) {
	{
		auto _range_expr = (*this)._field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab00cc20_SymbolTable> _1ab195050_file = *_range_begin;
			_iter_begin_4440574416:;
			{
				(*this)._method_set_current_file(_1ab195050_file);
				{
					auto _range_expr = _1ab195050_file->_field_imports;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Ref<_1ab194c20_ImportInfo> _1ab195050_imp = *_range_begin;
						_iter_begin_4440579200:;
						{
							jule::Bool _71621_ok = (*this)._method_check_import(_1ab195050_imp);
							if ((!(_71621_ok))) {
								(*this)._method_push_err(_1ab195050_imp->_field_token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>({jule::Any(_1ab195050_imp->_field_link_path)}));
								return;
							}
						}
						_iter_next_4440579200:;
						++_range_begin;
						if (_range_begin != _range_end) { _1ab195050_imp = *_range_begin; goto _iter_begin_4440579200; }
						_iter_end_4440579200:;
					}
				}
			}
			_iter_next_4440574416:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab195050_file = *_range_begin; goto _iter_begin_4440574416; }
			_iter_end_4440574416:;
		}
	}
}



inline void _1ab195050_Sema::_method_impl_file_impls(void) {
	{
		auto _range_expr = this->self->_field_file->_field_impls;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab0017b3_Impl> _1ab195050_imp = *_range_begin;
			_iter_begin_4440580304:;
			{
				this->self->_method_impl_impl(_1ab195050_imp);
			}
			_iter_next_4440580304:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab195050_imp = *_range_begin; goto _iter_begin_4440580304; }
			_iter_end_4440580304:;
		}
	}
}



inline void _1ab195050_Sema::_method_impl_impls(void) {
	{
		auto _range_expr = this->self->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab00cc20_SymbolTable> _1ab195050_file = *_range_begin;
			_iter_begin_4440589984:;
			{
				this->self->_method_set_current_file(_1ab195050_file);
				this->self->_method_impl_file_impls();
			}
			_iter_next_4440589984:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab195050_file = *_range_begin; goto _iter_begin_4440589984; }
			_iter_end_4440589984:;
		}
	}
}



inline void _1ab195050_Sema::_method_check_enums(void) {
	{
		auto _range_expr = this->self->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab00cc20_SymbolTable> _1ab195050_file = *_range_begin;
			_iter_begin_4440594416:;
			{
				this->self->_method_set_current_file(_1ab195050_file);
				this->self->_method_check_enum_decls();
			}
			_iter_next_4440594416:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab195050_file = *_range_begin; goto _iter_begin_4440594416; }
			_iter_end_4440594416:;
		}
	}
}



inline jule::Bool _1ab195050_Sema::_method_check_type_with_refers(jule::Ref<_1ac6d02c0_TypeSymbol>& _74947_t,jule::Trait<_1aae290e2_Lookup> _75013_l,jule::Ref<_1ac6d02c0_Referencer> _75028_referencer) {
	jule::Bool _75055_ok = jule::Bool();
	if (_74947_t->_method_checked()) {
		_75055_ok = true;
		return _75055_ok;
	}
	_1ac6d02c0_TypeChecker _75417_tc = _1ac6d02c0_TypeChecker(this->self,_75013_l,_75028_referencer,_1b61ec5ec_Token(),jule::Slice<jule::Ref<_1b61ca014_GenericDecl>>(),jule::Slice<jule::Ref<_1ac6d02c0_TypeAlias>>(),jule::Bool());
	_75417_tc._method_check(_74947_t);
	_75055_ok = _74947_t->_method_checked();
	return _75055_ok;
}



inline jule::Bool _1ab195050_Sema::_method_check_type(jule::Ref<_1ac6d02c0_TypeSymbol>& _76535_t,jule::Trait<_1aae290e2_Lookup> _76555_l) {
	jule::Bool _76568_ok = jule::Bool();
	_76568_ok = this->self->_method_check_type_with_refers(_76535_t,_76555_l,jule::new_ref<_1ac6d02c0_Referencer>());
	return _76568_ok;
}



inline jule::Ref<_1ac6d02c0_TypeKind> _1ab195050_Sema::_method_build_type_with_generics(jule::Ref<_1b61ca014_TypeDecl>& _77149_t,jule::Slice<jule::Ref<_1ac6d02c0_TypeAlias>> _77213_generics) {
	jule::Ref<_1ac6d02c0_TypeChecker> _77317_tc = jule::new_struct<_1ac6d02c0_TypeChecker>(new( std::nothrow ) _1ac6d02c0_TypeChecker(this->self,this->self,jule::Ref<_1ac6d02c0_Referencer>(),_1b61ec5ec_Token(),jule::Slice<jule::Ref<_1b61ca014_GenericDecl>>(),_77213_generics,jule::Bool()));
	return _77317_tc->_method_check_decl(_77149_t);
}



inline jule::Ref<_1ac6d02c0_TypeKind> _1ab195050_Sema::_method_build_type(jule::Ref<_1b61ca014_TypeDecl>& _78235_t) {
	return this->self->_method_build_type_with_generics(_78235_t,nullptr);
}



inline jule::Ref<_1ab00dbcc_Data> _1ab195050_Sema::_method_evalpd(jule::Ref<_1b61ca014_Expr>& _78831_expr,jule::Trait<_1aae290e2_Lookup> _78848_l,jule::Ref<_1ac6d02c0_TypeKind> _78913_p,jule::Ref<_1b623eab2_Var> _78931_owner) {
	jule::Ref<_1ab00dbcc_Eval> _79017_e = jule::new_struct<_1ab00dbcc_Eval>(new( std::nothrow ) _1ab00dbcc_Eval(this->self,_78848_l,jule::Ref<_1ac6d02c0_TypeKind>(),jule::Bool(),_78931_owner));
	{
		auto _match_expr{ _78848_l };
		if (!(_match_expr.type_is<jule::Ref<_1ab009de8_ScopeChecker>>())) { goto _case_end_4440647888; }
		_case_begin_4440647888:;
		{
			_79017_e->_field_unsafety=_78848_l.operator jule::Ref<_1ab009de8_ScopeChecker>()->_method_is_unsafe();
		}
		goto _match_end_4440647472;
		_case_end_4440647888:;
		_match_end_4440647472:;
	}
	_79017_e->_field_prefix=_78913_p;
	return _79017_e->_method_eval_expr(_78831_expr);
}



inline jule::Ref<_1ab00dbcc_Data> _1ab195050_Sema::_method_evalp(jule::Ref<_1b61ca014_Expr> _80729_expr,jule::Trait<_1aae290e2_Lookup> _80746_l,jule::Ref<_1ac6d02c0_TypeKind> _80761_p) {
	return this->self->_method_evalpd(_80729_expr,_80746_l,_80761_p,jule::new_ref<_1b623eab2_Var>());
}



inline jule::Ref<_1ab00dbcc_Data> _1ab195050_Sema::_method_eval(jule::Ref<_1b61ca014_Expr>& _81229_expr,jule::Trait<_1aae290e2_Lookup> _81246_l) {
	return this->self->_method_evalp(_81229_expr,_81246_l,jule::new_ref<_1ac6d02c0_TypeKind>());
}



inline void _1ab195050_Sema::_method_check_assign_type(jule::Bool _81637_dest_is_ref,jule::Ref<_1ac6d02c0_TypeKind>& _81661_dest,jule::Ref<_1ab00dbcc_Data>& _81714_d,_1b61ec5ec_Token _81728_error_token,jule::Bool _81748_deref) {
	if (_81637_dest_is_ref) {
		if ((!(_81661_dest->_method_equals(_81714_d->_field_kind)))) {
			this->self->_method_push_err(_81728_error_token,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_81661_dest->_method_to_str()),jule::Any(_81714_d->_field_kind->_method_to_str())}));
		}
	} else {
		jule::Ref<_1a8dc912c_AssignTypeChecker> _82321_atc = jule::new_struct<_1a8dc912c_AssignTypeChecker>(new( std::nothrow ) _1a8dc912c_AssignTypeChecker(this->self,_81661_dest,_81714_d,_81728_error_token,_81748_deref));
		jule::Bool _83017_ok = _82321_atc->_method_check();
		if ((!(_83017_ok))) {
			return;
		}
	}
	if ((!(_81714_d->_method_is_const())) || (!(jule::real(_81661_dest->_method_prim())))) {
		return;
	}
	jule::Str _84017_kind = _81661_dest->_method_prim()->_field_kind;
	{
		if (!((_1ac92d7e8_is_sig_int(_84017_kind)))) { goto _case_end_4440673696; }
		_case_begin_4440673696:;
		{
			_81714_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_81714_d->_field_constant->_method_as_i64()));
		}
		goto _match_end_4440673504;
		_case_end_4440673696:;
		if (!((_1ac92d7e8_is_unsig_int(_84017_kind)))) { goto _case_end_4440673824; }
		_case_begin_4440673824:;
		{
			_81714_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_81714_d->_field_constant->_method_as_u64()));
		}
		goto _match_end_4440673504;
		_case_end_4440673824:;
		if (!((_1ac92d7e8_is_float(_84017_kind)))) { goto _case_end_4440673952; }
		_case_begin_4440673952:;
		{
			_81714_d->_field_constant->_method_set_f64(static_cast<jule::F64>(_81714_d->_field_constant->_method_as_f64()));
		}
		goto _match_end_4440673504;
		_case_end_4440673952:;
		_match_end_4440673504:;
	}
}



inline jule::Bool _1ab195050_Sema::_method_check_type_compatibility(jule::Ref<_1ac6d02c0_TypeKind>& _84949_dest,jule::Ref<_1ac6d02c0_TypeKind>& _85014_src,_1b61ec5ec_Token& _85035_error_token,jule::Bool _85055_deref) {
	if (jule::real(_85014_src->_method_tup())) {
		this->self->_method_push_err(_85035_error_token,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_84949_dest->_method_to_str()),jule::Any(_85014_src->_method_to_str())}));
		return false;
	}
	jule::Ref<_1a8dc912c_TypeCompatibilityChecker> _85817_tcc = jule::new_struct<_1a8dc912c_TypeCompatibilityChecker>(new( std::nothrow ) _1a8dc912c_TypeCompatibilityChecker(this->self,_84949_dest,_85014_src,_85035_error_token,jule::Bool(),_85055_deref,jule::Bool()));
	jule::Bool _86513_ok = _85817_tcc->_method_check();
	if ((!(_86513_ok))) {
		this->self->_method_push_err(_85035_error_token,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_84949_dest->_method_to_str()),jule::Any(_85014_src->_method_to_str())}));
	}
	return _86513_ok;
}



inline jule::Ref<_1ac6d02c0_TypeKind> _1ab195050_Sema::_method_build_non_generic_type_kind(jule::Ref<_1b61ca014_TypeDecl>& _87952_ast,jule::Slice<jule::Ref<_1b61ca014_GenericDecl>>& _88014_generics) {
	jule::Ref<_1ac6d02c0_TypeChecker> _88117_tc = jule::new_struct<_1ac6d02c0_TypeChecker>(new( std::nothrow ) _1ac6d02c0_TypeChecker(this->self,this->self,jule::Ref<_1ac6d02c0_Referencer>(),_1b61ec5ec_Token(),_88014_generics,jule::Slice<jule::Ref<_1ac6d02c0_TypeAlias>>(),jule::Bool()));
	return _88117_tc->_method_check_decl(_87952_ast);
}



inline void _1ab195050_Sema::_method_build_fn_non_generic_type_kinds(jule::Ref<_1b557cd24_FnIns>& _88956_f) {
	jule::Slice<jule::Ref<_1b61ca014_GenericDecl>> _89017_generics = nullptr;
	if (_88956_f->_field_decl->_method_is_method()) {
		_89017_generics=jule::append(_88956_f->_field_decl->_field_generics,_88956_f->_field_decl->_field_owner->_field_generics);
	} else {
		_89017_generics=_88956_f->_field_decl->_field_generics;
	}
	{
		auto _range_expr = _88956_f->_field_params;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b557cd24_ParamIns> _1ab195050_p = *_range_begin;
			_iter_begin_4440712720:;
			{
				if ((!(_1ab195050_p->_field_decl->_method_is_self()))) {
					_1ab195050_p->_field_kind=this->self->_method_build_non_generic_type_kind(_1ab195050_p->_field_decl->_field_kind->_field_decl,_89017_generics);
				}
			}
			_iter_next_4440712720:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab195050_p = *_range_begin; goto _iter_begin_4440712720; }
			_iter_end_4440712720:;
		}
	}
	if ((!(_88956_f->_field_decl->_method_is_void()))) {
		_88956_f->_field_result=this->self->_method_build_non_generic_type_kind(_88956_f->_field_decl->_field_result->_field_kind->_field_decl,_89017_generics);
	}
}



inline jule::Ref<_1b557cd24_FnIns> _1ab195050_Sema::_method_get_trait_check_fn_kind(jule::Ref<_1b557cd24_Fn>& _90748_f) {
	jule::Ref<_1b557cd24_FnIns> _90817_ins = _90748_f->_method_instance_force();
	this->self->_method_build_fn_non_generic_type_kinds(_90817_ins);
	return _90817_ins;
}



inline jule::Bool _1ab195050_Sema::_method_reload_fn_ins_types(jule::Ref<_1b557cd24_FnIns>& _91344_f) {
	jule::Bool _91357_ok = jule::Bool();
	if (_91344_f->_method_is_builtin() || _91344_f->_method_is_anon()) {
		_91357_ok = true;
		return _91357_ok;
	}
	jule::Ref<_1ab195050_Sema> _91817_sema = _91344_f->_field_decl->_field_sema;
	jule::Ref<_1ab00cc20_SymbolTable> _92017_old = _91344_f->_field_decl->_field_sema->_field_file;
	__JULE_DEFER({
		_91344_f->_field_decl->_field_sema->_method_set_current_file(_92017_old);
	});
	jule::Ref<_1ab00cc20_SymbolTable> _92217_file = _1ab195050_find_file(_91344_f->_field_decl->_field_sema->_field_files,_91344_f->_field_decl->_field_token._field_file);
	if (jule::real(_92217_file)) {
		_91344_f->_field_decl->_field_sema->_method_set_current_file(_92217_file);
	}
	jule::I64 _92717_size = _91344_f->_field_generics.len();
	if (jule::real(_91344_f->_field_decl) && jule::real(_91344_f->_field_decl->_field_owner)) {
		_92717_size+=static_cast<jule::I64>(_91344_f->_field_decl->_field_owner->_field_generics.len());
	}
	jule::Slice<jule::Ref<_1ac6d02c0_TypeAlias>> _93217_generics = jule::Slice<jule::Ref<_1ac6d02c0_TypeAlias>>::alloc(0LL,static_cast<jule::Int>(_92717_size));
	{
		auto _range_expr = _91344_f->_field_generics;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ab195050_i = 0;
			jule::Ref<_1ac6d02c0_TypeKind> _1ab195050_g = *_range_begin;
			_iter_begin_4440764752:;
			{
				_93217_generics=jule::append(_93217_generics,jule::Slice<jule::Ref<_1ac6d02c0_TypeAlias>>({jule::new_struct<_1ac6d02c0_TypeAlias>(new( std::nothrow ) _1ac6d02c0_TypeAlias(jule::Ref<_1b61ca014_ScopeTree>(),jule::Bool(),jule::Bool(),jule::Bool(),_1b61ec5ec_Token(),_91344_f->_field_decl->_field_generics[static_cast<jule::Int>(_1ab195050_i)]->_field_ident,jule::new_struct<_1ac6d02c0_TypeSymbol>(new( std::nothrow ) _1ac6d02c0_TypeSymbol(jule::Ref<_1b61ca014_TypeDecl>(),_1ab195050_g)),jule::Str(),jule::Slice<jule::Any>()))}));
			}
			_iter_next_4440764752:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ab195050_i; _1ab195050_g = *_range_begin; goto _iter_begin_4440764752; }
			_iter_end_4440764752:;
		}
	}
	if (jule::real(_91344_f->_field_decl) && jule::real(_91344_f->_field_decl->_field_owner)) {
		jule::Ref<_1b5e07a00_StructIns> _94421_owner = _91344_f->_field_owner;
		{
			auto _range_expr = _94421_owner->_field_generics;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Int _1ab195050_i = 0;
				jule::Ref<_1ac6d02c0_TypeKind> _1ab195050_g = *_range_begin;
				_iter_begin_4440765952:;
				{
					_93217_generics=jule::append(_93217_generics,jule::Slice<jule::Ref<_1ac6d02c0_TypeAlias>>({jule::new_struct<_1ac6d02c0_TypeAlias>(new( std::nothrow ) _1ac6d02c0_TypeAlias(jule::Ref<_1b61ca014_ScopeTree>(),jule::Bool(),jule::Bool(),jule::Bool(),_1b61ec5ec_Token(),_94421_owner->_field_decl->_field_generics[static_cast<jule::Int>(_1ab195050_i)]->_field_ident,jule::new_struct<_1ac6d02c0_TypeSymbol>(new( std::nothrow ) _1ac6d02c0_TypeSymbol(jule::Ref<_1b61ca014_TypeDecl>(),_1ab195050_g)),jule::Str(),jule::Slice<jule::Any>()))}));
				}
				_iter_next_4440765952:;
				++_range_begin;
				if (_range_begin != _range_end) { ++_1ab195050_i; _1ab195050_g = *_range_begin; goto _iter_begin_4440765952; }
				_iter_end_4440765952:;
			}
		}
	}
	_91357_ok=true;
	{
		auto _range_expr = _91344_f->_field_params;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b557cd24_ParamIns> _1ab195050_p = *_range_begin;
			_iter_begin_4440779168:;
			{
				if ((!(_1ab195050_p->_field_decl->_method_is_self()))) {
					_1ab195050_p->_field_kind=_91817_sema->_method_build_type_with_generics(_1ab195050_p->_field_decl->_field_kind->_field_decl,_93217_generics);
					if (jule::real(_1ab195050_p->_field_kind)) {
						if (_1ab195050_p->_field_decl->_field_reference && (!(_1ac6d02c0_is_valid_for_ref(_1ab195050_p->_field_kind)))) {
							this->self->_method_push_err(_1ab195050_p->_field_decl->_field_token,jule::Str("references cannot points to \"@\" type", 36),jule::Slice<jule::Any>({jule::Any(_1ab195050_p->_field_kind->_method_to_str())}));
						}
					} else {
						_91357_ok=false;
					}
				}
			}
			_iter_next_4440779168:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab195050_p = *_range_begin; goto _iter_begin_4440779168; }
			_iter_end_4440779168:;
		}
	}
	if ((!(_91344_f->_field_decl->_method_is_void()))) {
		_91344_f->_field_result=_91817_sema->_method_build_type_with_generics(_91344_f->_field_decl->_field_result->_field_kind->_field_decl,_93217_generics);
		_91357_ok=jule::real(_91344_f->_field_result) && _91357_ok;
	}
	if ((_91817_sema).alloc != (this->self).alloc) {
		this->self->_field_errors=jule::append(this->self->_field_errors,_91817_sema->_field_errors);
		_91817_sema->_field_errors=nullptr;
	}
	_91357_ok = _91357_ok;
	return _91357_ok;
}



inline void _1ab195050_Sema::_method_check_ref_validity_for_init_expr(jule::Bool _98252_left_mut,jule::Ref<_1ab00dbcc_Data>& _98269_d,_1b61ec5ec_Token& _98284_error_token) {
	{
		auto _match_expr{ _98269_d->_field_model };
		if (!(_match_expr.type_is<jule::Ref<_1b623eab2_Var>>())) { goto _case_end_4440797232; }
		goto _match_end_4440795808;
		_case_end_4440797232:;
		if (!(_match_expr.type_is<jule::Ref<_1ab33d083_TraitSubIdentExprModel>>())) { goto _case_end_4440796736; }
		_case_begin_4440796736:;
		{
			jule::Ref<_1ab33d083_TraitSubIdentExprModel> _98817_model = _98269_d->_field_model.operator jule::Ref<_1ab33d083_TraitSubIdentExprModel>();
			if ((!(_1ab195050_is_valid_model_for_ref(_98817_model->_field_expr)))) {
				this->self->_method_push_err(_98284_error_token,jule::Str("you cannot use \"@\" reference variable, because reference is dangling", 68),jule::Slice<jule::Any>({jule::Any(_98817_model->_field_ident)}));
			}
		}
		goto _match_end_4440795808;
		_case_end_4440796736:;
		if (!(_match_expr.type_is<jule::Ref<_1ab33d083_StructSubIdentExprModel>>())) { goto _case_end_4440796848; }
		_case_begin_4440796848:;
		{
			jule::Ref<_1ab33d083_StructSubIdentExprModel> _99417_model = _98269_d->_field_model.operator jule::Ref<_1ab33d083_StructSubIdentExprModel>();
			if ((!(_1ab195050_is_valid_model_for_ref(_99417_model->_field_expr)))) {
				this->self->_method_push_err(_98284_error_token,jule::Str("you cannot use \"@\" reference variable, because reference is dangling", 68),jule::Slice<jule::Any>({jule::Any(_99417_model->_field_field->_field_decl->_field_ident)}));
			}
		}
		goto _match_end_4440795808;
		_case_end_4440796848:;
		if (!(_match_expr.type_is<jule::Ref<_1ab33d083_CommonIdentExprModel>>() || _match_expr.type_is<jule::Ref<_1ab33d083_CommonSubIdentExprModel>>())) { goto _case_end_4440796960; }
		_case_begin_4440796960:;
		{
			this->self->_method_push_err(_98284_error_token,jule::Str("built-in defines cannot pass to references", 42),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4440795808;
		_case_end_4440796960:;
		if (!(_match_expr.type_is<jule::Ref<_1ab33d083_UnaryExprModel>>())) { goto _case_end_4440798800; }
		_case_begin_4440798800:;
		{
			jule::Ref<_1ab33d083_UnaryExprModel> _100417_unary = _98269_d->_field_model.operator jule::Ref<_1ab33d083_UnaryExprModel>();
			if (_100417_unary->_field_op == jule::Str("*", 1)) {
				goto _match_end_4440795808;
			}
			goto _case_begin_4440796432;
		}
		goto _match_end_4440795808;
		_case_end_4440798800:;
		_case_begin_4440796432:;
		{
			this->self->_method_push_err(_98284_error_token,jule::Str("references requires variable for assignment", 43),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4440795808;
		_case_end_4440796432:;
		_match_end_4440795808:;
	}
	if (_98252_left_mut && (!(_98269_d->_field_mutable))) {
		this->self->_method_push_err(_98284_error_token,jule::Str("mutable reference cannot point to immutable data", 48),jule::Slice<jule::Any>({}));
	}
}



inline void _1ab195050_Sema::_method_check_validity_for_init_expr(jule::Bool _102048_left_mut,jule::Bool _102064_left_ref,jule::Ref<_1ac6d02c0_TypeKind>& _102110_left_kind,jule::Ref<_1ab00dbcc_Data>& _102137_d,_1b61ec5ec_Token& _102152_error_token) {
	if ((_102048_left_mut && (!(_102137_d->_field_mutable))) && _102137_d->_field_kind->_method_mutable()) {
		this->self->_method_push_err(_102152_error_token,jule::Str("cannot assign mutable type used immutable define to mutable define", 66),jule::Slice<jule::Any>({}));
	}
	if (_102064_left_ref) {
		this->self->_method_check_ref_validity_for_init_expr(_102048_left_mut,_102137_d,_102152_error_token);
	}
	jule::Ref<_1a8dc912c_AssignTypeChecker> _102917_atc = jule::new_struct<_1a8dc912c_AssignTypeChecker>(new( std::nothrow ) _1a8dc912c_AssignTypeChecker(this->self,jule::Ref<_1ac6d02c0_TypeKind>(),_102137_d,_102152_error_token,jule::Bool()));
	_102917_atc->_method_check_validity();
}



inline jule::Bool _1ab195050_Sema::_method_check_type_alias_decl_kind(jule::Ref<_1ac6d02c0_TypeAlias>& _103751_ta,jule::Trait<_1aae290e2_Lookup> _103771_l) {
	jule::Bool _103784_ok = jule::Bool();
	jule::Ref<_1ab00cc20_SymbolTable> _103817_old = this->self->_field_file;
	__JULE_DEFER({
		this->self->_method_set_current_file(_103817_old);
	});
	jule::Ref<_1ab00cc20_SymbolTable> _104017_file = _1ab195050_find_file(this->self->_field_files,_103751_ta->_field_token._field_file);
	if (jule::real(_104017_file)) {
		this->self->_method_set_current_file(_104017_file);
	}
	_103784_ok=this->self->_method_check_type_with_refers(_103751_ta->_field_kind,_103771_l,jule::new_struct<_1ac6d02c0_Referencer>(new( std::nothrow ) _1ac6d02c0_Referencer(_103751_ta->_field_ident,jule::Any(_103751_ta),(&(_103751_ta->_field_refers)))));
	if ((_103784_ok && jule::real(_103751_ta->_field_kind->_field_kind->_method_arr())) && _103751_ta->_field_kind->_field_kind->_method_arr()->_field_auto) {
		this->self->_method_push_err(_103751_ta->_field_kind->_field_decl->_field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>({}));
		_103784_ok=false;
	}
	return _103784_ok;
}



inline void _1ab195050_Sema::_method_check_type_alias_decl(jule::Ref<_1ac6d02c0_TypeAlias>& _105746_ta,jule::Trait<_1aae290e2_Lookup> _105766_l) {
	if (_1b61ec5ec_is_ignore_ident(_105746_ta->_field_ident)) {
		this->self->_method_push_err(_105746_ta->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
	}
	this->self->_method_check_type_alias_decl_kind(_105746_ta,_105766_l);
}



inline void _1ab195050_Sema::_method_check_type_alias_decl_dup(jule::Ref<_1ac6d02c0_TypeAlias>& _106550_ta) {
	if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_106550_ta).alloc)),_106550_ta->_field_ident,_106550_ta->_field_cpp_linked)) {
		this->self->_method_push_err(_106550_ta->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_106550_ta->_field_ident)}));
		this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	this->self->_method_check_type_alias_decl_kind(_106550_ta,this->self);
}



inline jule::Bool _1ab195050_Sema::_method_check_type_alias_decls(void) {
	jule::Bool _107444_ok = jule::Bool();
	{
		auto _range_expr = this->self->_field_file->_field_type_aliases;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ac6d02c0_TypeAlias> _1ab195050_ta = *_range_begin;
			_iter_begin_4440859072:;
			{
				this->self->_method_check_type_alias_decl_dup(_1ab195050_ta);
				if (this->self->_field_errors.len() > 0LL) {
					_107444_ok = false;
					return _107444_ok;
				}
			}
			_iter_next_4440859072:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab195050_ta = *_range_begin; goto _iter_begin_4440859072; }
			_iter_end_4440859072:;
		}
	}
	_107444_ok = true;
	return _107444_ok;
}



inline void _1ab195050_Sema::_method_check_enum_items_dup(jule::Ref<_1a909ac6b_Enum> _108639_e) {
	{
		auto _range_expr = _108639_e->_field_items;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1a909ac6b_EnumItem> _1ab195050_item = *_range_begin;
			_iter_begin_4440865248:;
			{
				if (_1b61ec5ec_is_ignore_ident(_1ab195050_item->_field_ident)) {
					(*this)._method_push_err(_1ab195050_item->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
				} else {
					{
						auto _range_expr = _108639_e->_field_items;
						if (_range_expr.begin() != _range_expr.end()) {
							auto _range_begin = _range_expr.begin();
							const auto _range_end = _range_expr.end();
							jule::Ref<_1a909ac6b_EnumItem> _1ab195050_citem = *_range_begin;
							_iter_begin_4440867312:;
							{
								if (_1ab195050_item == _1ab195050_citem) {
									goto _iter_end_4440867312;
								} else if (_1ab195050_item->_field_ident == _1ab195050_citem->_field_ident) {
									(*this)._method_push_err(_1ab195050_item->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1ab195050_item->_field_ident)}));
									(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
									goto _iter_end_4440867312;
								}
							}
							_iter_next_4440867312:;
							++_range_begin;
							if (_range_begin != _range_end) { _1ab195050_citem = *_range_begin; goto _iter_begin_4440867312; }
							_iter_end_4440867312:;
						}
					}
				}
			}
			_iter_next_4440865248:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab195050_item = *_range_begin; goto _iter_begin_4440865248; }
			_iter_end_4440865248:;
		}
	}
}



inline void _1ab195050_Sema::_method_check_enum_items_str(jule::Ref<_1a909ac6b_Enum>& _110445_e) {
	{
		auto _range_expr = _110445_e->_field_items;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1a909ac6b_EnumItem> _1ab195050_item = *_range_begin;
			_iter_begin_4440877248:;
			{
				if (_1ab195050_item->_method_auto_expr()) {
					_1ab195050_item->_field_value=jule::new_struct<_1ab00dbcc_Value>(new( std::nothrow ) _1ab00dbcc_Value(jule::Ref<_1b61ca014_Expr>(),jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::Ref<_1ac6d02c0_TypeKind>(),jule::Ref<_1ac6d02c0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),_1ac90c3ed_Const::_static_method_new_str(_1ab195050_item->_field_ident)))));
					_1ab195050_item->_field_value->_field_data->_field_model=jule::Any(_1ab195050_item->_field_value->_field_data->_field_constant);
				} else {
					jule::Ref<_1ab00dbcc_Data> _111425_d = this->self->_method_eval(_1ab195050_item->_field_value->_field_expr,this->self);
					if ((!(jule::real(_111425_d)))) {
						goto _iter_next_4440877248;
					}
					if ((!(_111425_d->_method_is_const()))) {
						this->self->_method_push_err(_1ab195050_item->_field_value->_field_expr->_field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>({}));
					}
					this->self->_method_check_assign_type(false,_110445_e->_field_kind->_field_kind,_111425_d,_1ab195050_item->_field_token,false);
					_1ab195050_item->_field_value->_field_data=_111425_d;
				}
			}
			_iter_next_4440877248:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab195050_item = *_range_begin; goto _iter_begin_4440877248; }
			_iter_end_4440877248:;
		}
	}
}



inline void _1ab195050_Sema::_method_check_enum_items_int(jule::Ref<_1a909ac6b_Enum>& _112945_e) {
	jule::U64 _113017_max = static_cast<jule::U64>(_1ac928bde_max(_112945_e->_field_kind->_field_kind->_method_prim()->_method_to_str()));
	{
		auto _range_expr = _112945_e->_field_items;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ab195050_i = 0;
			jule::Ref<_1a909ac6b_EnumItem> _1ab195050_item = *_range_begin;
			_iter_begin_4440897008:;
			{
				if (_113017_max == 0LL) {
					this->self->_method_push_err(_1ab195050_item->_field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>({}));
				} else {
					(_113017_max)--;
				}
				if (_1ab195050_item->_method_auto_expr()) {
					_1ab195050_item->_field_value=jule::new_struct<_1ab00dbcc_Value>(new( std::nothrow ) _1ab00dbcc_Value(jule::Ref<_1b61ca014_Expr>(),jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::Ref<_1ac6d02c0_TypeKind>(),jule::Ref<_1ac6d02c0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),_1ac90c3ed_Const::_static_method_new_u64(static_cast<jule::U64>(_113017_max - (_113017_max - static_cast<jule::U64>(_1ab195050_i))))))));
					_1ab195050_item->_field_value->_field_data->_field_model=jule::Any(_1ab195050_item->_field_value->_field_data->_field_constant);
				} else {
					jule::Ref<_1ab00dbcc_Data> _114625_d = this->self->_method_eval(_1ab195050_item->_field_value->_field_expr,this->self);
					if ((!(jule::real(_114625_d)))) {
						goto _iter_next_4440897008;
					}
					if ((!(_114625_d->_method_is_const()))) {
						this->self->_method_push_err(_1ab195050_item->_field_value->_field_expr->_field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>({}));
					}
					this->self->_method_check_assign_type(false,_112945_e->_field_kind->_field_kind,_114625_d,_1ab195050_item->_field_token,false);
					_1ab195050_item->_field_value->_field_data=_114625_d;
				}
			}
			_iter_next_4440897008:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ab195050_i; _1ab195050_item = *_range_begin; goto _iter_begin_4440897008; }
			_iter_end_4440897008:;
		}
	}
}



inline void _1ab195050_Sema::_method_check_enum_decl(jule::Ref<_1a909ac6b_Enum>& _116140_e) {
	if (_1b61ec5ec_is_ignore_ident(_116140_e->_field_ident)) {
		this->self->_method_push_err(_116140_e->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
	} else if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_116140_e).alloc)),_116140_e->_field_ident,false)) {
		this->self->_method_push_err(_116140_e->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_116140_e->_field_ident)}));
		this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	if (_116140_e->_field_items.len() == 0LL) {
		this->self->_method_push_err(_116140_e->_field_token,jule::Str("there is no member for enum: @", 30),jule::Slice<jule::Any>({jule::Any(_116140_e->_field_ident)}));
	}
	this->self->_method_check_enum_items_dup(_116140_e);
	if (jule::real(_116140_e->_field_kind)) {
		if ((!(this->self->_method_check_type(_116140_e->_field_kind,this->self)))) {
			return;
		}
	} else {
		_116140_e->_field_kind=jule::new_struct<_1ac6d02c0_TypeSymbol>(new( std::nothrow ) _1ac6d02c0_TypeSymbol(jule::Ref<_1b61ca014_TypeDecl>(),jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_1ac6d02c0_build_prim_type(jule::Str("int", 3))))));
	}
	jule::Ref<_1ac6d02c0_Prim> _118817_t = _116140_e->_field_kind->_field_kind->_method_prim();
	if ((!(jule::real(_118817_t)))) {
		this->self->_method_push_err(_116140_e->_field_token,jule::Str("invalid data-type source", 24),jule::Slice<jule::Any>({}));
		return;
	}
	{
		if (!((_118817_t->_method_is_str()))) { goto _case_end_4440938176; }
		_case_begin_4440938176:;
		{
			this->self->_method_check_enum_items_str(_116140_e);
		}
		goto _match_end_4440935776;
		_case_end_4440938176:;
		if (!((_1ac92d7e8_is_int(_118817_t->_method_to_str())))) { goto _case_end_4440936112; }
		_case_begin_4440936112:;
		{
			this->self->_method_check_enum_items_int(_116140_e);
		}
		goto _match_end_4440935776;
		_case_end_4440936112:;
		_case_begin_4440925184:;
		{
			this->self->_method_push_err(_116140_e->_field_token,jule::Str("invalid data-type source", 24),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4440935776;
		_case_end_4440925184:;
		_match_end_4440935776:;
	}
}



inline jule::Bool _1ab195050_Sema::_method_check_enum_decls(void) {
	jule::Bool _120838_ok = jule::Bool();
	{
		auto _range_expr = this->self->_field_file->_field_enums;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1a909ac6b_Enum> _1ab195050_e = *_range_begin;
			_iter_begin_4440943872:;
			{
				this->self->_method_check_enum_decl(_1ab195050_e);
				if (this->self->_field_errors.len() > 0LL) {
					_120838_ok = false;
					return _120838_ok;
				}
			}
			_iter_next_4440943872:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab195050_e = *_range_begin; goto _iter_begin_4440943872; }
			_iter_end_4440943872:;
		}
	}
	_120838_ok = true;
	return _120838_ok;
}



inline jule::Bool _1ab195050_Sema::_method_check_decl_generics(jule::Slice<jule::Ref<_1b61ca014_GenericDecl>>& _122039_generics) {
	jule::Bool _122067_ok = jule::Bool();
	_122067_ok=true;
	{
		auto _range_expr = _122039_generics;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ab195050_i = 0;
			jule::Ref<_1b61ca014_GenericDecl> _1ab195050_g = *_range_begin;
			_iter_begin_4440950704:;
			{
				if (_1b61ec5ec_is_ignore_ident(_1ab195050_g->_field_ident)) {
					(*this)._method_push_err(_1ab195050_g->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
					_122067_ok=false;
					goto _iter_next_4440950704;
				}
				_julec_label_duplication_lookup:;
				{
					auto _range_expr = _122039_generics;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Int _1ab195050_j = 0;
						jule::Ref<_1b61ca014_GenericDecl> _1ab195050_ct = *_range_begin;
						_iter_begin_4440953536:;
						{
							{
								if (!((_1ab195050_j >= _1ab195050_i))) { goto _case_end_4440959056; }
								_case_begin_4440959056:;
								{
									goto _iter_end_4440953536;
								}
								goto _match_end_4440958816;
								_case_end_4440959056:;
								if (!((_1ab195050_g->_field_ident == _1ab195050_ct->_field_ident))) { goto _case_end_4440959184; }
								_case_begin_4440959184:;
								{
									(*this)._method_push_err(_1ab195050_g->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1ab195050_g->_field_ident)}));
									(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
									_122067_ok=false;
									goto _iter_end_4440953536;
								}
								goto _match_end_4440958816;
								_case_end_4440959184:;
								_match_end_4440958816:;
							}
						}
						_iter_next_4440953536:;
						++_range_begin;
						if (_range_begin != _range_end) { ++_1ab195050_j; _1ab195050_ct = *_range_begin; goto _iter_begin_4440953536; }
						_iter_end_4440953536:;
					}
				}
			}
			_iter_next_4440950704:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ab195050_i; _1ab195050_g = *_range_begin; goto _iter_begin_4440950704; }
			_iter_end_4440950704:;
		}
	}
	return _122067_ok;
}



inline jule::Bool _1ab195050_Sema::_method_check_fn_decl_params_dup(jule::Ref<_1b557cd24_Fn>& _124844_f) {
	jule::Bool _124854_ok = jule::Bool();
	_124854_ok=true;
	_julec_label_check:;
	{
		auto _range_expr = _124844_f->_field_params;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ab195050_i = 0;
			jule::Ref<_1b557cd24_Param> _1ab195050_p = *_range_begin;
			_iter_begin_4440968080:;
			{
				{
					auto _range_expr = _124844_f->_field_generics;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Ref<_1b61ca014_GenericDecl> _1ab195050_g = *_range_begin;
						_iter_begin_4440971328:;
						{
							if (_1ab195050_p->_field_ident == _1ab195050_g->_field_ident) {
								_124854_ok=false;
								(*this)._method_push_err(_1ab195050_p->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1ab195050_p->_field_ident)}));
								(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
								goto _iter_next_4440968080;
							}
						}
						_iter_next_4440971328:;
						++_range_begin;
						if (_range_begin != _range_end) { _1ab195050_g = *_range_begin; goto _iter_begin_4440971328; }
						_iter_end_4440971328:;
					}
				}
				_julec_label_params_lookup:;
				{
					auto _range_expr = _124844_f->_field_params;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Int _1ab195050_j = 0;
						jule::Ref<_1b557cd24_Param> _1ab195050_jp = *_range_begin;
						_iter_begin_4440971952:;
						{
							{
								if (!((_1ab195050_j >= _1ab195050_i))) { goto _case_end_4440979792; }
								_case_begin_4440979792:;
								{
									goto _iter_end_4440971952;
								}
								goto _match_end_4440979536;
								_case_end_4440979792:;
								if (!((_1b61ec5ec_is_anon_ident(_1ab195050_p->_field_ident) || _1b61ec5ec_is_anon_ident(_1ab195050_jp->_field_ident)))) { goto _case_end_4440979920; }
								_case_begin_4440979920:;
								{
									goto _iter_end_4440971952;
								}
								goto _match_end_4440979536;
								_case_end_4440979920:;
								if (!((_1ab195050_p->_field_ident == _1ab195050_jp->_field_ident))) { goto _case_end_4440980048; }
								_case_begin_4440980048:;
								{
									_124854_ok=false;
									(*this)._method_push_err(_1ab195050_p->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1ab195050_p->_field_ident)}));
									(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
									goto _iter_next_4440968080;
								}
								goto _match_end_4440979536;
								_case_end_4440980048:;
								_match_end_4440979536:;
							}
						}
						_iter_next_4440971952:;
						++_range_begin;
						if (_range_begin != _range_end) { ++_1ab195050_j; _1ab195050_jp = *_range_begin; goto _iter_begin_4440971952; }
						_iter_end_4440971952:;
					}
				}
			}
			_iter_next_4440968080:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ab195050_i; _1ab195050_p = *_range_begin; goto _iter_begin_4440968080; }
			_iter_end_4440968080:;
		}
	}
	return _124854_ok;
}



inline jule::Bool _1ab195050_Sema::_method_check_fn_decl_result_dup(jule::Ref<_1b557cd24_Fn>& _128444_f) {
	jule::Bool _128454_ok = jule::Bool();
	_128454_ok=true;
	if (_128444_f->_method_is_void()) {
		return _128454_ok;
	}
	{
		auto _range_expr = _128444_f->_field_result->_field_idents;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ab195050_i = 0;
			_1b61ec5ec_Token _1ab195050_v = *_range_begin;
			_iter_begin_4440991632:;
			{
				if (_1b61ec5ec_is_ignore_ident(_1ab195050_v._field_kind)) {
					goto _iter_next_4440991632;
				}
				{
					auto _range_expr = _128444_f->_field_generics;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Ref<_1b61ca014_GenericDecl> _1ab195050_g = *_range_begin;
						_iter_begin_4440995376:;
						{
							if (_1ab195050_v._field_kind == _1ab195050_g->_field_ident) {
								goto _julec_label_exist;
							}
						}
						_iter_next_4440995376:;
						++_range_begin;
						if (_range_begin != _range_end) { _1ab195050_g = *_range_begin; goto _iter_begin_4440995376; }
						_iter_end_4440995376:;
					}
				}
				{
					auto _range_expr = _128444_f->_field_params;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Ref<_1b557cd24_Param> _1ab195050_p = *_range_begin;
						_iter_begin_4440998992:;
						{
							if (_1ab195050_v._field_kind == _1ab195050_p->_field_ident) {
								goto _julec_label_exist;
							}
						}
						_iter_next_4440998992:;
						++_range_begin;
						if (_range_begin != _range_end) { _1ab195050_p = *_range_begin; goto _iter_begin_4440998992; }
						_iter_end_4440998992:;
					}
				}
				_julec_label_itself_lookup:;
				{
					auto _range_expr = _128444_f->_field_result->_field_idents;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Int _1ab195050_j = 0;
						_1b61ec5ec_Token _1ab195050_jv = *_range_begin;
						_iter_begin_4441003456:;
						{
							{
								if (!((_1ab195050_j >= _1ab195050_i))) { goto _case_end_4441005968; }
								_case_begin_4441005968:;
								{
									goto _iter_end_4441003456;
								}
								goto _match_end_4441005728;
								_case_end_4441005968:;
								if (!((_1ab195050_jv._field_kind == _1ab195050_v._field_kind))) { goto _case_end_4441006096; }
								_case_begin_4441006096:;
								{
									goto _julec_label_exist;
								}
								goto _match_end_4441005728;
								_case_end_4441006096:;
								_match_end_4441005728:;
							}
						}
						_iter_next_4441003456:;
						++_range_begin;
						if (_range_begin != _range_end) { ++_1ab195050_j; _1ab195050_jv = *_range_begin; goto _iter_begin_4441003456; }
						_iter_end_4441003456:;
					}
				}
				goto _iter_next_4440991632;
				_julec_label_exist:;
				(*this)._method_push_err(_1ab195050_v,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1ab195050_v._field_kind)}));
				(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
				_128454_ok=false;
			}
			_iter_next_4440991632:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ab195050_i; _1ab195050_v = *_range_begin; goto _iter_begin_4440991632; }
			_iter_end_4440991632:;
		}
	}
	return _128454_ok;
}



inline jule::Bool _1ab195050_Sema::_method_check_fn_decl_types(jule::Ref<_1b557cd24_Fn>& _133344_f) {
	jule::Bool _133354_ok = jule::Bool();
	_133354_ok=true;
	jule::Slice<jule::Ref<_1b61ca014_GenericDecl>> _133617_generics = _133344_f->_field_generics;
	if (jule::real(_133344_f->_field_owner)) {
		_133617_generics=jule::append(_133617_generics,_133344_f->_field_owner->_field_generics);
	}
	{
		auto _range_expr = _133344_f->_field_params;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b557cd24_Param> _1ab195050_p = *_range_begin;
			_iter_begin_4441018176:;
			{
				if ((!(_1ab195050_p->_method_is_self()))) {
					jule::Ref<_1ac6d02c0_TypeKind> _134325_kind = this->self->_method_build_non_generic_type_kind(_1ab195050_p->_field_kind->_field_decl,_133617_generics);
					_133354_ok=jule::real(_134325_kind) && _133354_ok;
					_1ab195050_p->_field_kind->_field_kind=_134325_kind;
				}
			}
			_iter_next_4441018176:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab195050_p = *_range_begin; goto _iter_begin_4441018176; }
			_iter_end_4441018176:;
		}
	}
	if ((!(_133344_f->_method_is_void()))) {
		jule::Ref<_1ac6d02c0_TypeKind> _135021_kind = this->self->_method_build_non_generic_type_kind(_133344_f->_field_result->_field_kind->_field_decl,_133617_generics);
		_133354_ok=jule::real(_135021_kind) && _133354_ok;
		_133344_f->_field_result->_field_kind->_field_kind=_135021_kind;
	}
	_133354_ok = _133354_ok;
	return _133354_ok;
}



inline jule::Bool _1ab195050_Sema::_method_check_fn_decl_prototype(jule::Ref<_1b557cd24_Fn>& _136048_f) {
	jule::Bool _136058_ok = jule::Bool();
	{
		if (!(((!(this->self->_method_check_decl_generics(_136048_f->_field_generics)))))) { goto _case_end_4441032912; }
		_case_begin_4441032912:;
		{
			_136058_ok = false;
			return _136058_ok;
		}
		goto _match_end_4441031680;
		_case_end_4441032912:;
		if (!(((!(this->self->_method_check_fn_decl_params_dup(_136048_f)))))) { goto _case_end_4441033024; }
		_case_begin_4441033024:;
		{
			_136058_ok = false;
			return _136058_ok;
		}
		goto _match_end_4441031680;
		_case_end_4441033024:;
		if (!(((!(this->self->_method_check_fn_decl_result_dup(_136048_f)))))) { goto _case_end_4441033136; }
		_case_begin_4441033136:;
		{
			_136058_ok = false;
			return _136058_ok;
		}
		goto _match_end_4441031680;
		_case_end_4441033136:;
		if (!(((!(this->self->_method_check_fn_decl_types(_136048_f)))))) { goto _case_end_4441032160; }
		_case_begin_4441032160:;
		{
			_136058_ok = false;
			return _136058_ok;
		}
		goto _match_end_4441031680;
		_case_end_4441032160:;
		_case_begin_4441031856:;
		{
			_136058_ok = true;
			return _136058_ok;
		}
		goto _match_end_4441031680;
		_case_end_4441031856:;
		_match_end_4441031680:;
	}
}



inline void _1ab195050_Sema::_method_check_trait_decl_method(jule::Ref<_1b557cd24_Fn>& _137048_f) {
	if (_1b61ec5ec_is_ignore_ident(_137048_f->_field_ident)) {
		this->self->_method_push_err(_137048_f->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
	}
	this->self->_method_check_fn_decl_prototype(_137048_f);
	_137048_f->_field_sema=this->self;
}



inline void _1ab195050_Sema::_method_check_trait_decl_methods(jule::Ref<_1aaee9091_Trait>& _137949_t) {
	{
		auto _range_expr = _137949_t->_field_methods;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ab195050_i = 0;
			jule::Ref<_1b557cd24_Fn> _1ab195050_f = *_range_begin;
			_iter_begin_4441046896:;
			{
				this->self->_method_check_trait_decl_method(_1ab195050_f);
				_137949_t->_field_mutable=_137949_t->_field_mutable || _1ab195050_f->_field_params[0LL]->_field_mutable;
				if (this->self->_field_errors.len() > 0LL) {
					return;
				}
				_julec_label_duplicate_lookup:;
				{
					auto _range_expr = _137949_t->_field_methods;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Int _1ab195050_j = 0;
						jule::Ref<_1b557cd24_Fn> _1ab195050_jf = *_range_begin;
						_iter_begin_4441053920:;
						{
							{
								if (!((_1ab195050_j >= _1ab195050_i))) { goto _case_end_4441056704; }
								_case_begin_4441056704:;
								{
									goto _iter_end_4441053920;
								}
								goto _match_end_4441056464;
								_case_end_4441056704:;
								if (!((_1ab195050_f->_field_ident == _1ab195050_jf->_field_ident))) { goto _case_end_4441056832; }
								_case_begin_4441056832:;
								{
									this->self->_method_push_err(_1ab195050_f->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1ab195050_f->_field_ident)}));
									this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
									goto _iter_end_4441053920;
								}
								goto _match_end_4441056464;
								_case_end_4441056832:;
								_match_end_4441056464:;
							}
						}
						_iter_next_4441053920:;
						++_range_begin;
						if (_range_begin != _range_end) { ++_1ab195050_j; _1ab195050_jf = *_range_begin; goto _iter_begin_4441053920; }
						_iter_end_4441053920:;
					}
				}
			}
			_iter_next_4441046896:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ab195050_i; _1ab195050_f = *_range_begin; goto _iter_begin_4441046896; }
			_iter_end_4441046896:;
		}
	}
}



inline void _1ab195050_Sema::_method_check_trait_decl(jule::Ref<_1aaee9091_Trait>& _141141_t) {
	if (_1b61ec5ec_is_ignore_ident(_141141_t->_field_ident)) {
		this->self->_method_push_err(_141141_t->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
	} else if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_141141_t).alloc)),_141141_t->_field_ident,false)) {
		this->self->_method_push_err(_141141_t->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_141141_t->_field_ident)}));
		this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	this->self->_method_check_trait_decl_methods(_141141_t);
}



inline jule::Bool _1ab195050_Sema::_method_check_trait_decls(void) {
	jule::Bool _142339_ok = jule::Bool();
	{
		auto _range_expr = this->self->_field_file->_field_traits;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1aaee9091_Trait> _1ab195050_t = *_range_begin;
			_iter_begin_4441075216:;
			{
				this->self->_method_check_trait_decl(_1ab195050_t);
				if (this->self->_field_errors.len() > 0LL) {
					_142339_ok = false;
					return _142339_ok;
				}
			}
			_iter_next_4441075216:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab195050_t = *_range_begin; goto _iter_begin_4441075216; }
			_iter_end_4441075216:;
		}
	}
	_142339_ok = true;
	return _142339_ok;
}



inline jule::Bool _1ab195050_Sema::_method_check_trait_impl_methods(jule::Ref<_1aaee9091_Trait>& _143548_base,jule::Ref<_1ab0017b3_Impl>& _143563_ipl) {
	jule::Bool _143577_ok = jule::Bool();
	_143577_ok=true;
	{
		auto _range_expr = _143563_ipl->_field_methods;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b557cd24_Fn> _1ab195050_f = *_range_begin;
			_iter_begin_4441083280:;
			{
				if ((!(jule::real(_143548_base->_method_find_method(_1ab195050_f->_field_ident))))) {
					(*this)._method_push_err(_1ab195050_f->_field_token,jule::Str("trait @ have not any define in this identifier: @", 49),jule::Slice<jule::Any>({jule::Any(_143548_base->_field_ident),jule::Any(_1ab195050_f->_field_ident)}));
					_143577_ok=false;
				}
			}
			_iter_next_4441083280:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab195050_f = *_range_begin; goto _iter_begin_4441083280; }
			_iter_end_4441083280:;
		}
	}
	return _143577_ok;
}



inline jule::Bool _1ab195050_Sema::_method_impl_to_struct(jule::Ref<_1b5e07a00_Struct>& _144639_dest,jule::Ref<_1ab0017b3_Impl>& _144659_ipl) {
	jule::Bool _144673_ok = jule::Bool();
	_144673_ok=true;
	{
		auto _range_expr = _144659_ipl->_field_methods;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b557cd24_Fn> _1ab195050_f = *_range_begin;
			_iter_begin_4441093168:;
			{
				if (jule::real(_144639_dest->_method_find_method(_1ab195050_f->_field_ident,_1ab195050_f->_field_statically)) || jule::real(_144639_dest->_method_find_field(_1ab195050_f->_field_ident))) {
					this->self->_method_push_err(_1ab195050_f->_field_token,jule::Str("struct @ already have a define in this identifier: @", 52),jule::Slice<jule::Any>({jule::Any(_144639_dest->_field_ident),jule::Any(_1ab195050_f->_field_ident)}));
					_144673_ok=false;
					goto _iter_next_4441093168;
				}
				if ((_144639_dest->_field_generics.len() > 0LL) && (_1ab195050_f->_field_generics.len() > 0LL)) {
					{
						auto _range_expr = _1ab195050_f->_field_generics;
						if (_range_expr.begin() != _range_expr.end()) {
							auto _range_begin = _range_expr.begin();
							const auto _range_end = _range_expr.end();
							jule::Ref<_1b61ca014_GenericDecl> _1ab195050_fg = *_range_begin;
							_iter_begin_4441101504:;
							{
								{
									auto _range_expr = _144639_dest->_field_generics;
									if (_range_expr.begin() != _range_expr.end()) {
										auto _range_begin = _range_expr.begin();
										const auto _range_end = _range_expr.end();
										jule::Ref<_1b61ca014_GenericDecl> _1ab195050_dg = *_range_begin;
										_iter_begin_4441103488:;
										{
											if (_1ab195050_fg->_field_ident == _1ab195050_dg->_field_ident) {
												this->self->_method_push_err(_1ab195050_fg->_field_token,jule::Str("methods cannot have same generic identifier with owner same time", 64),jule::Slice<jule::Any>({}));
												_144673_ok=false;
											}
										}
										_iter_next_4441103488:;
										++_range_begin;
										if (_range_begin != _range_end) { _1ab195050_dg = *_range_begin; goto _iter_begin_4441103488; }
										_iter_end_4441103488:;
									}
								}
							}
							_iter_next_4441101504:;
							++_range_begin;
							if (_range_begin != _range_end) { _1ab195050_fg = *_range_begin; goto _iter_begin_4441101504; }
							_iter_end_4441101504:;
						}
					}
				}
				_1ab195050_f->_field_sema=this->self;
				_1ab195050_f->_field_owner=_144639_dest;
				_144639_dest->_field_methods=jule::append(_144639_dest->_field_methods,jule::Slice<jule::Ref<_1b557cd24_Fn>>({_1ab195050_f}));
			}
			_iter_next_4441093168:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab195050_f = *_range_begin; goto _iter_begin_4441093168; }
			_iter_end_4441093168:;
		}
	}
	return _144673_ok;
}



inline void _1ab195050_Sema::_method_impl_trait(jule::Ref<_1ab0017b3_Impl>& _147435_decl) {
	jule::Ref<_1aaee9091_Trait> _147517_base = this->self->_method_find_trait(_147435_decl->_field_base._field_kind);
	if ((!(jule::real(_147517_base)))) {
		_147517_base=_1aae49684_find_builtin_trait(_147435_decl->_field_base._field_kind);
	}
	if ((!(jule::real(_147517_base)))) {
		this->self->_method_push_err(_147435_decl->_field_base,jule::Str("any valid base definition is not exist in this identifier: @", 60),jule::Slice<jule::Any>({jule::Any(_147435_decl->_field_base._field_kind)}));
		return;
	}
	
	jule::Ref<_1b5e07a00_Struct> _148817_dest = this->self->_method_find_struct(_147435_decl->_field_dest._field_kind,false);
	if ((!(jule::real(_148817_dest)))) {
		this->self->_method_push_err(_147435_decl->_field_dest,jule::Str("any valid destination definition is not exist in this identifier: @", 67),jule::Slice<jule::Any>({jule::Any(_147435_decl->_field_dest._field_kind)}));
		return;
	}
	if (_148817_dest->_field_token._field_file->_method_dir() != this->self->_field_file->_field_file->_method_dir()) {
		this->self->_method_push_err(_147435_decl->_field_dest,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>({}));
		return;
	}
	_147517_base->_field_implemented=jule::append(_147517_base->_field_implemented,jule::Slice<jule::Ref<_1b5e07a00_Struct>>({_148817_dest}));
	_148817_dest->_field_implements=jule::append(_148817_dest->_field_implements,jule::Slice<jule::Ref<_1aaee9091_Trait>>({_147517_base}));
	{
		if (!(((!(this->self->_method_check_trait_impl_methods(_147517_base,_147435_decl)))))) { goto _case_end_4441130416; }
		_case_begin_4441130416:;
		{
			return;
		}
		goto _match_end_4441128112;
		_case_end_4441130416:;
		if (!(((!(this->self->_method_impl_to_struct(_148817_dest,_147435_decl)))))) { goto _case_end_4441130800; }
		_case_begin_4441130800:;
		{
			return;
		}
		goto _match_end_4441128112;
		_case_end_4441130800:;
		_match_end_4441128112:;
	}
}



inline void _1ab195050_Sema::_method_impl_struct(jule::Ref<_1ab0017b3_Impl>& _150836_decl) {
	
	jule::Ref<_1b5e07a00_Struct> _151317_dest = this->self->_method_find_struct(_150836_decl->_field_dest._field_kind,false);
	if ((!(jule::real(_151317_dest)))) {
		this->self->_method_push_err(_150836_decl->_field_dest,jule::Str("any valid destination definition is not exist in this identifier: @", 67),jule::Slice<jule::Any>({jule::Any(_150836_decl->_field_dest._field_kind)}));
		return;
	}
	if (_151317_dest->_field_token._field_file->_method_dir() != this->self->_field_file->_field_file->_method_dir()) {
		this->self->_method_push_err(_150836_decl->_field_dest,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>({}));
		return;
	}
	{
		if (!(((!(this->self->_method_impl_to_struct(_151317_dest,_150836_decl)))))) { goto _case_end_4441144608; }
		_case_begin_4441144608:;
		{
			return;
		}
		goto _match_end_4441143328;
		_case_end_4441144608:;
		_match_end_4441143328:;
	}
}



inline void _1ab195050_Sema::_method_impl_impl(jule::Ref<_1ab0017b3_Impl>& _153134_decl) {
	{
		if (!((_153134_decl->_method_is_trait_impl()))) { goto _case_end_4441147712; }
		_case_begin_4441147712:;
		{
			this->self->_method_impl_trait(_153134_decl);
		}
		goto _match_end_4441147488;
		_case_end_4441147712:;
		if (!((_153134_decl->_method_is_struct_impl()))) { goto _case_end_4441147840; }
		_case_begin_4441147840:;
		{
			this->self->_method_impl_struct(_153134_decl);
		}
		goto _match_end_4441147488;
		_case_end_4441147840:;
		_match_end_4441147488:;
	}
}



inline void _1ab195050_Sema::_method_check_var_decl(jule::Ref<_1b623eab2_Var>& _154039_decl,jule::Trait<_1aae290e2_Lookup> _154055_l) {
	if (_1b61ec5ec_is_ignore_ident(_154039_decl->_field_ident)) {
		this->self->_method_push_err(_154039_decl->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
	}
	if (_154039_decl->_method_is_type_inferred()) {
		if (_154039_decl->_field_statically) {
			this->self->_method_push_err(_154039_decl->_field_token,jule::Str("static variables must be have type annotation", 45),jule::Slice<jule::Any>({}));
		}
		if ((!(_154039_decl->_method_is_initialized()))) {
			this->self->_method_push_err(_154039_decl->_field_token,jule::Str("type inference declarations should have a initializer", 53),jule::Slice<jule::Any>({}));
		}
	} else {
		this->self->_method_check_type(_154039_decl->_field_kind,_154055_l);
	}
	if (_154039_decl->_field_constant && _154039_decl->_field_reference) {
		this->self->_method_push_err(_154039_decl->_field_token,jule::Str("references cannot be constant", 29),jule::Slice<jule::Any>({}));
	}
	if ((!(_154039_decl->_method_is_initialized()))) {
		if (_154039_decl->_field_constant) {
			this->self->_method_push_err(_154039_decl->_field_token,jule::Str("constant variable must have initialize expression", 49),jule::Slice<jule::Any>({}));
		}
		if (_154039_decl->_field_statically) {
			this->self->_method_push_err(_154039_decl->_field_token,jule::Str("static variables must be have initialize expression", 51),jule::Slice<jule::Any>({}));
		}
		if (_154039_decl->_field_reference) {
			this->self->_method_push_err(_154039_decl->_field_token,jule::Str("reference variables must be have lvalue initialize expression", 61),jule::Slice<jule::Any>({}));
		}
	}
}



inline void _1ab195050_Sema::_method_check_global_var_decl(jule::Ref<_1b623eab2_Var>& _157746_decl) {
	if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_157746_decl).alloc)),_157746_decl->_field_ident,_157746_decl->_field_cpp_linked)) {
		this->self->_method_push_err(_157746_decl->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_157746_decl->_field_ident)}));
		this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	if (_157746_decl->_field_cpp_linked && _157746_decl->_field_constant) {
		this->self->_method_push_err(_157746_decl->_field_token,jule::Str("cpp linked variables cannot constant", 36),jule::Slice<jule::Any>({}));
	}
	if (((!(_157746_decl->_field_cpp_linked)) && (!(_157746_decl->_field_constant))) && (!(_157746_decl->_field_statically))) {
		this->self->_method_push_err(_157746_decl->_field_token,jule::Str("global variables must be static", 31),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("use \"static\" keyword to define", 30),jule::Slice<jule::Any>({}));
	}
	this->self->_method_check_var_decl(_157746_decl,this->self);
}



inline jule::Bool _1ab195050_Sema::_method_check_global_decls(void) {
	jule::Bool _159440_ok = jule::Bool();
	{
		auto _range_expr = this->self->_field_file->_field_vars;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b623eab2_Var> _1ab195050_decl = *_range_begin;
			_iter_begin_4441189280:;
			{
				this->self->_method_check_global_var_decl(_1ab195050_decl);
				if (this->self->_field_errors.len() > 0LL) {
					_159440_ok = false;
					return _159440_ok;
				}
			}
			_iter_next_4441189280:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab195050_decl = *_range_begin; goto _iter_begin_4441189280; }
			_iter_end_4441189280:;
		}
	}
	_159440_ok = true;
	return _159440_ok;
}



inline jule::Bool _1ab195050_Sema::_method_check_struct_trait_impl(jule::Ref<_1b5e07a00_Struct>& _160648_strct,jule::Ref<_1aaee9091_Trait>& _160669_trt) {
	jule::Bool _160684_ok = jule::Bool();
	{
		auto _range_expr = _160669_trt->_field_methods;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b557cd24_Fn> _1ab195050_tf = *_range_begin;
			_iter_begin_4441197632:;
			{
				jule::Bool _160821_exist = false;
				jule::Ref<_1b557cd24_Fn> _160921_sf = _160648_strct->_method_find_method(_1ab195050_tf->_field_ident,_1ab195050_tf->_field_statically);
				jule::Ref<_1b557cd24_FnIns> _161017_tf_k = this->self->_method_get_trait_check_fn_kind(_1ab195050_tf);
				if (jule::real(_160921_sf)) {
					jule::Ref<_1b557cd24_FnIns> _161225_sf_k = this->self->_method_get_trait_check_fn_kind(_160921_sf);
					_160821_exist=((_161017_tf_k->_field_decl->_field_public == _161225_sf_k->_field_decl->_field_public) && (_161017_tf_k->_field_decl->_field_ident == _161225_sf_k->_field_decl->_field_ident)) && _161017_tf_k->_method_equals(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_161225_sf_k)));
				}
				if ((!(_160821_exist))) {
					
					jule::Str _162125_s = _161017_tf_k->_method_get_kind_str(true);
					if (_1ab195050_tf->_field_public) {
						_162125_s=jule::Str("pub ", 4) + _162125_s;
					}
					this->self->_method_push_err(_160648_strct->_field_token,jule::Str("trait @ derived but not implemented trait's \"@\" define", 54),jule::Slice<jule::Any>({jule::Any(_160669_trt->_field_ident),jule::Any(_162125_s)}));
					_160684_ok=false;
				}
			}
			_iter_next_4441197632:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab195050_tf = *_range_begin; goto _iter_begin_4441197632; }
			_iter_end_4441197632:;
		}
	}
	return _160684_ok;
}



inline jule::Bool _1ab195050_Sema::_method_check_struct_impls(jule::Ref<_1b5e07a00_Struct>& _163243_s) {
	jule::Bool _163257_ok = jule::Bool();
	_163257_ok=true;
	{
		auto _range_expr = _163243_s->_field_implements;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1aaee9091_Trait> _1ab195050_trt = *_range_begin;
			_iter_begin_4441217520:;
			{
				_163257_ok=this->self->_method_check_struct_trait_impl(_163243_s,_1ab195050_trt) && _163257_ok;
			}
			_iter_next_4441217520:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab195050_trt = *_range_begin; goto _iter_begin_4441217520; }
			_iter_end_4441217520:;
		}
	}
	_163257_ok = _163257_ok;
	return _163257_ok;
}



inline jule::Bool _1ab195050_Sema::_method_check_struct_fields(jule::Ref<_1b5e07a00_Struct>& _164044_st) {
	jule::Bool _164059_ok = jule::Bool();
	_164059_ok=true;
	jule::Ref<_1ac6d02c0_TypeChecker> _164317_tc = jule::new_struct<_1ac6d02c0_TypeChecker>(new( std::nothrow ) _1ac6d02c0_TypeChecker(this->self,this->self,jule::new_struct<_1ac6d02c0_Referencer>(new( std::nothrow ) _1ac6d02c0_Referencer(_164044_st->_field_ident,jule::Any(_164044_st),nullptr)),_1b61ec5ec_Token(),_164044_st->_field_generics,jule::Slice<jule::Ref<_1ac6d02c0_TypeAlias>>(),jule::Bool()));
	jule::I64 _165313_n = _164044_st->_field_instances.len();
	{
		auto _range_expr = _164044_st->_field_fields;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b5e07a00_Field> _1ab195050_f = *_range_begin;
			_iter_begin_4441227968:;
			{
				_1ab195050_f->_field_owner=_164044_st;
				_1ab195050_f->_field_kind->_field_kind=_164317_tc->_method_check_decl(_1ab195050_f->_field_kind->_field_decl);
				_164059_ok=jule::real(_1ab195050_f->_field_kind->_field_kind) && _164059_ok;
				{
					auto _range_expr = _164044_st->_field_fields;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Ref<_1b5e07a00_Field> _1ab195050_cf = *_range_begin;
						_iter_begin_4441232592:;
						{
							if (_1ab195050_f == _1ab195050_cf) {
								goto _iter_end_4441232592;
							} else if (_1ab195050_f->_field_ident == _1ab195050_cf->_field_ident) {
								this->self->_method_push_err(_1ab195050_f->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1ab195050_f->_field_ident)}));
								this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
								_164059_ok=false;
							}
						}
						_iter_next_4441232592:;
						++_range_begin;
						if (_range_begin != _range_end) { _1ab195050_cf = *_range_begin; goto _iter_begin_4441232592; }
						_iter_end_4441232592:;
					}
				}
			}
			_iter_next_4441227968:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab195050_f = *_range_begin; goto _iter_begin_4441227968; }
			_iter_end_4441227968:;
		}
	}
	if (_164059_ok && (_165313_n != _164044_st->_field_instances.len())) {
		jule::drop(_164317_tc->_field_referencer);
		_164044_st->_field_instances=_164044_st->_field_instances.slice(0LL,static_cast<jule::Int>(_165313_n));
		{
			auto _range_expr = _164044_st->_field_fields;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_1b5e07a00_Field> _1ab195050_f = *_range_begin;
				_iter_begin_4441239952:;
				{
					_1ab195050_f->_field_kind->_field_kind=_164317_tc->_method_check_decl(_1ab195050_f->_field_kind->_field_decl);
				}
				_iter_next_4441239952:;
				++_range_begin;
				if (_range_begin != _range_end) { _1ab195050_f = *_range_begin; goto _iter_begin_4441239952; }
				_iter_end_4441239952:;
			}
		}
	}
	_164059_ok = _164059_ok;
	return _164059_ok;
}



inline jule::Bool _1ab195050_Sema::_method_check_struct_decl_methods(jule::Ref<_1b5e07a00_Struct>& _168250_s) {
	jule::Bool _168264_ok = jule::Bool();
	{
		auto _range_expr = _168250_s->_field_methods;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b557cd24_Fn> _1ab195050_m = *_range_begin;
			_iter_begin_4441247168:;
			{
				if ((!(this->self->_method_check_fn_decl_types(_1ab195050_m)))) {
					_168264_ok = false;
					return _168264_ok;
				}
			}
			_iter_next_4441247168:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab195050_m = *_range_begin; goto _iter_begin_4441247168; }
			_iter_end_4441247168:;
		}
	}
	_168264_ok = true;
	return _168264_ok;
}



inline void _1ab195050_Sema::_method_check_struct_decl(jule::Ref<_1b5e07a00_Struct>& _169142_s) {
	if (_1b61ec5ec_is_ignore_ident(_169142_s->_field_ident)) {
		this->self->_method_push_err(_169142_s->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
	} else if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_169142_s).alloc)),_169142_s->_field_ident,_169142_s->_field_cpp_linked)) {
		this->self->_method_push_err(_169142_s->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_169142_s->_field_ident)}));
		this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	_169142_s->_field_sema=this->self;
	{
		if (!(((!(this->self->_method_check_decl_generics(_169142_s->_field_generics)))))) { goto _case_end_4441259552; }
		_case_begin_4441259552:;
		{
			return;
		}
		goto _match_end_4441259920;
		_case_end_4441259552:;
		if (!(((!(this->self->_method_check_struct_fields(_169142_s)))))) { goto _case_end_4441259664; }
		_case_begin_4441259664:;
		{
			return;
		}
		goto _match_end_4441259920;
		_case_end_4441259664:;
		if (!(((!(this->self->_method_check_struct_decl_methods(_169142_s)))))) { goto _case_end_4441260144; }
		_case_begin_4441260144:;
		{
			return;
		}
		goto _match_end_4441259920;
		_case_end_4441260144:;
		if (!(((!(this->self->_method_check_struct_impls(_169142_s)))))) { goto _case_end_4441260256; }
		_case_begin_4441260256:;
		{
			return;
		}
		goto _match_end_4441259920;
		_case_end_4441260256:;
		_match_end_4441259920:;
	}
}



inline jule::Bool _1ab195050_Sema::_method_check_struct_decls(void) {
	jule::Bool _170940_ok = jule::Bool();
	{
		auto _range_expr = this->self->_field_file->_field_structs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b5e07a00_Struct> _1ab195050_s = *_range_begin;
			_iter_begin_4441267488:;
			{
				this->self->_method_check_struct_decl(_1ab195050_s);
				if (this->self->_field_errors.len() > 0LL) {
					_170940_ok = false;
					return _170940_ok;
				}
			}
			_iter_next_4441267488:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab195050_s = *_range_begin; goto _iter_begin_4441267488; }
			_iter_end_4441267488:;
		}
	}
	_170940_ok = true;
	return _170940_ok;
}



inline void _1ab195050_Sema::_method_check_fn_decl(jule::Ref<_1b557cd24_Fn>& _172238_f) {
	if (_1b61ec5ec_is_ignore_ident(_172238_f->_field_ident)) {
		this->self->_method_push_err(_172238_f->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
	} else if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_172238_f).alloc)),_172238_f->_field_ident,_172238_f->_field_cpp_linked)) {
		this->self->_method_push_err(_172238_f->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_172238_f->_field_ident)}));
		this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	_172238_f->_field_sema=this->self;
	this->self->_method_check_fn_decl_prototype(_172238_f);
}



inline jule::Bool _1ab195050_Sema::_method_check_fn_decls(void) {
	jule::Bool _173536_ok = jule::Bool();
	{
		auto _range_expr = this->self->_field_file->_field_funcs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b557cd24_Fn> _1ab195050_f = *_range_begin;
			_iter_begin_4441284336:;
			{
				this->self->_method_check_fn_decl(_1ab195050_f);
				if (this->self->_field_errors.len() > 0LL) {
					_173536_ok = false;
					return _173536_ok;
				}
			}
			_iter_next_4441284336:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab195050_f = *_range_begin; goto _iter_begin_4441284336; }
			_iter_end_4441284336:;
		}
	}
	_173536_ok = true;
	return _173536_ok;
}



inline jule::Bool _1ab195050_Sema::_method_check_directive_pass(_1b5589c76_Pass& _174740_pass) {
	jule::Bool _174754_ok = jule::Bool();
	if (_174740_pass._field_text == jule::Str("", 0)) {
		_174754_ok = true;
		return _174754_ok;
	}
	if (_174740_pass._field_text[0LL] != '-') {
		(*this)._method_push_err(_174740_pass._field_token,jule::Str("the pass directive must be start with dash", 42),jule::Slice<jule::Any>({}));
		_174754_ok = false;
		return _174754_ok;
	}
	_174754_ok = true;
	return _174754_ok;
}



inline jule::Bool _1ab195050_Sema::_method_check_passes(void) {
	jule::Bool _176033_ok = jule::Bool();
	_176033_ok=true;
	{
		auto _range_expr = (*this)._field_file->_field_passes;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			_1b5589c76_Pass _1ab195050_pass = *_range_begin;
			_iter_begin_4441297920:;
			{
				_176033_ok=(*this)._method_check_directive_pass(_1ab195050_pass) && _176033_ok;
			}
			_iter_next_4441297920:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab195050_pass = *_range_begin; goto _iter_begin_4441297920; }
			_iter_end_4441297920:;
		}
	}
	return _176033_ok;
}



inline void _1ab195050_Sema::_method_push_cycle_error(jule::Ref<_1b5e07a00_Struct>& _176832_st1,jule::Ref<_1b5e07a00_Struct>& _176847_st2,jule::Str& _176866_message) {
	
	jule::Str _177113_refers_to = _1cdeeb191_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(_176832_st1->_field_ident),jule::Any(_176847_st2->_field_ident)}));
	_176866_message=((_1b5589c76_str_repeat(jule::Str(" ", 1),4LL) + _177113_refers_to) + jule::Str("\n", 1)) + _176866_message;
}



inline jule::Bool _1ab195050_Sema::_method_check_cross_cycle(jule::Ref<_1b5e07a00_Struct>& _177533_st1,jule::Ref<_1b5e07a00_Struct>& _177548_st2,jule::Str& _177567_message) {
	{
		auto _range_expr = _177548_st2->_field_uses;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b5e07a00_Struct> _1ab195050_u = *_range_begin;
			_iter_begin_4441313376:;
			{
				if ((_1ab195050_u).alloc == (_177533_st1).alloc) {
					(*this)._method_push_cycle_error(_177548_st2,_1ab195050_u,_177567_message);
					return false;
				}
				if ((!((*this)._method_check_cross_cycle(_177533_st1,_1ab195050_u,_177567_message)))) {
					(*this)._method_push_cycle_error(_177548_st2,_1ab195050_u,_177567_message);
					return false;
				}
			}
			_iter_next_4441313376:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab195050_u = *_range_begin; goto _iter_begin_4441313376; }
			_iter_end_4441313376:;
		}
	}
	return true;
}



inline jule::Bool _1ab195050_Sema::_method_check_struct_derive_illegal_cycles(jule::Str _179153_derive,jule::Ref<_1b5e07a00_Struct>& _179167_st1,jule::Ref<_1ac6d02c0_TypeKind>& _179186_k) {
	jule::Bool _1791102_ok = jule::Bool();
	jule::Ref<_1b5e07a00_Struct> _179217_st2 = _1ac6d02c0_get_struct_from_kind(_179186_k);
	if ((!(jule::real(_179217_st2)))) {
		_1791102_ok = true;
		return _1791102_ok;
	}
	if ((_179167_st1).alloc == (_179217_st2).alloc) {
		(*this)._method_push_err(_179167_st1->_field_token,jule::Str("illegal cycle for \"@\" derive, struct \"@\" refers to itself", 57),jule::Slice<jule::Any>({jule::Any(_179153_derive),jule::Any(_179167_st1->_field_ident)}));
		_1791102_ok = false;
		return _1791102_ok;
	}
	jule::Str _180417_message = jule::Str("", 0);
	if ((!((*this)._method_check_cross_cycle(_179167_st1,_179217_st2,_180417_message)))) {
		jule::Str _180721_err_msg = _180417_message;
		_180417_message=jule::Str("", 0);
		(*this)._method_push_cycle_error(_179167_st1,_179217_st2,_180417_message);
		_180721_err_msg=_180721_err_msg + _180417_message;
		(*this)._method_push_err(_179167_st1->_field_token,jule::Str("illegal cross cycle for \"@\" derive;\n@", 37),jule::Slice<jule::Any>({jule::Any(_179153_derive),jule::Any(_180721_err_msg)}));
		_1791102_ok = false;
		return _1791102_ok;
	}
	_1791102_ok = true;
	return _1791102_ok;
}



inline jule::Bool _1ab195050_Sema::_method_check_struct_ins_derive_clone(jule::Ref<_1b5e07a00_StructIns> _181852_st) {
	jule::Bool _181870_ok = jule::Bool();
	if ((!(_181852_st->_field_decl->_method_is_derives(jule::Str("Clone", 5))))) {
		_181870_ok = true;
		return _181870_ok;
	}
	{
		auto _range_expr = _181852_st->_field_fields;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b5e07a00_FieldIns> _1ab195050_f = *_range_begin;
			_iter_begin_4441338704:;
			{
				if ((!(jule::real(_1ab195050_f->_field_kind))) || (!(_1ab195050_f->_field_kind->_method_mutable()))) {
					goto _iter_next_4441338704;
				}
				if ((!(_1ab195050_f->_field_kind->_method_supports_cloning()))) {
					(*this)._method_push_err(_181852_st->_field_decl->_field_token,jule::Str("type \"@\" is not compatible to derive \"@\"", 40),jule::Slice<jule::Any>({jule::Any(_1ab195050_f->_field_kind->_method_to_str()),jule::Any(jule::Str("Clone", 5))}));
					_181870_ok = false;
					return _181870_ok;
				}
				if ((!((*this)._method_check_struct_derive_illegal_cycles(jule::Str("Clone", 5),_181852_st->_field_decl,_1ab195050_f->_field_kind)))) {
					_181870_ok = false;
					return _181870_ok;
				}
			}
			_iter_next_4441338704:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab195050_f = *_range_begin; goto _iter_begin_4441338704; }
			_iter_end_4441338704:;
		}
	}
	_181870_ok = true;
	return _181870_ok;
}



inline jule::Bool _1ab195050_Sema::_method_check_struct_derive_clone(jule::Ref<_1b5e07a00_Struct>& _184149_st) {
	jule::Bool _184164_ok = jule::Bool();
	_184164_ok = (*this)._method_check_struct_ins_derive_clone(_184149_st->_method_instance());
	return _184164_ok;
}



inline jule::Bool _1ab195050_Sema::_method_check_file_derives(void) {
	jule::Bool _184539_ok = jule::Bool();
	{
		auto _range_expr = (*this)._field_file->_field_structs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b5e07a00_Struct> _1ab195050_st = *_range_begin;
			_iter_begin_4441356848:;
			{
				_184539_ok=(*this)._method_check_struct_derive_clone(_1ab195050_st);
				if ((!(_184539_ok))) {
					goto _iter_end_4441356848;
				}
			}
			_iter_next_4441356848:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab195050_st = *_range_begin; goto _iter_begin_4441356848; }
			_iter_end_4441356848:;
		}
	}
	_184539_ok = _184539_ok;
	return _184539_ok;
}



inline void _1ab195050_Sema::_method_check_package_derives(void) {
	{
		auto _range_expr = (*this)._field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab00cc20_SymbolTable> _1ab195050_f = *_range_begin;
			_iter_begin_4441360944:;
			{
				(*this)._method_set_current_file(_1ab195050_f);
				jule::Bool _186017_ok = (*this)._method_check_file_derives();
				if ((!(_186017_ok))) {
					return;
				}
			}
			_iter_next_4441360944:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab195050_f = *_range_begin; goto _iter_begin_4441360944; }
			_iter_end_4441360944:;
		}
	}
}



inline void _1ab195050_Sema::_method_check_package_decls(void) {
	{
		auto _range_expr = this->self->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab00cc20_SymbolTable> _1ab195050_f = *_range_begin;
			_iter_begin_4441366480:;
			{
				this->self->_method_set_current_file(_1ab195050_f);
				if ((!(this->self->_method_check_passes()))) {
					return;
				}
			}
			_iter_next_4441366480:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab195050_f = *_range_begin; goto _iter_begin_4441366480; }
			_iter_end_4441366480:;
		}
	}
	{
		auto _range_expr = this->self->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab00cc20_SymbolTable> _1ab195050_f = *_range_begin;
			_iter_begin_4441367504:;
			{
				this->self->_method_set_current_file(_1ab195050_f);
				if ((!(this->self->_method_check_type_alias_decls()))) {
					return;
				}
			}
			_iter_next_4441367504:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab195050_f = *_range_begin; goto _iter_begin_4441367504; }
			_iter_end_4441367504:;
		}
	}
	{
		auto _range_expr = this->self->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab00cc20_SymbolTable> _1ab195050_f = *_range_begin;
			_iter_begin_4441370880:;
			{
				this->self->_method_set_current_file(_1ab195050_f);
				if ((!(this->self->_method_check_trait_decls()))) {
					return;
				}
			}
			_iter_next_4441370880:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab195050_f = *_range_begin; goto _iter_begin_4441370880; }
			_iter_end_4441370880:;
		}
	}
	{
		auto _range_expr = this->self->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab00cc20_SymbolTable> _1ab195050_f = *_range_begin;
			_iter_begin_4441374128:;
			{
				this->self->_method_set_current_file(_1ab195050_f);
				if ((!(this->self->_method_check_global_decls()))) {
					return;
				}
			}
			_iter_next_4441374128:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab195050_f = *_range_begin; goto _iter_begin_4441374128; }
			_iter_end_4441374128:;
		}
	}
	{
		auto _range_expr = this->self->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab00cc20_SymbolTable> _1ab195050_f = *_range_begin;
			_iter_begin_4441377216:;
			{
				this->self->_method_set_current_file(_1ab195050_f);
				if ((!(this->self->_method_check_fn_decls()))) {
					return;
				}
			}
			_iter_next_4441377216:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab195050_f = *_range_begin; goto _iter_begin_4441377216; }
			_iter_end_4441377216:;
		}
	}
	{
		auto _range_expr = this->self->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab00cc20_SymbolTable> _1ab195050_f = *_range_begin;
			_iter_begin_4441380352:;
			{
				this->self->_method_set_current_file(_1ab195050_f);
				if ((!(this->self->_method_check_struct_decls()))) {
					return;
				}
			}
			_iter_next_4441380352:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab195050_f = *_range_begin; goto _iter_begin_4441380352; }
			_iter_end_4441380352:;
		}
	}
	this->self->_method_check_package_derives();
}



inline void _1ab195050_Sema::_method_check_data_for_type_inference(jule::Ref<_1ab00dbcc_Data>& _191549_d,_1b61ec5ec_Token& _191560_err_token) {
	{
		if (!((_191549_d->_method_is_nil()))) { goto _case_end_4441389840; }
		_case_begin_4441389840:;
		{
			(*this)._method_push_err(_191560_err_token,jule::Str("nil is cannot use with type inferred definitions", 48),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4441389584;
		_case_end_4441389840:;
		if (!((_191549_d->_method_is_void()))) { goto _case_end_4441389968; }
		_case_begin_4441389968:;
		{
			(*this)._method_push_err(_191560_err_token,jule::Str("void data is cannot use for type inferred definitions", 53),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4441389584;
		_case_end_4441389968:;
		if (!((_191549_d->_field_kind->_field_variadic))) { goto _case_end_4441390096; }
		_case_begin_4441390096:;
		{
			(*this)._method_push_err(_191560_err_token,jule::Str("invalid expression for type inference", 37),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4441389584;
		_case_end_4441390096:;
		_match_end_4441389584:;
	}
}



inline void _1ab195050_Sema::_method_check_var(jule::Ref<_1b623eab2_Var>& _192834_v) {
	if (_192834_v->_field_cpp_linked) {
		return;
	}
	if (_192834_v->_method_is_type_inferred()) {
		_192834_v->_field_kind=jule::new_struct<_1ac6d02c0_TypeSymbol>(new( std::nothrow ) _1ac6d02c0_TypeSymbol(jule::Ref<_1b61ca014_TypeDecl>(),_192834_v->_field_value->_field_data->_field_kind));
		this->self->_method_check_data_for_type_inference(_192834_v->_field_value->_field_data,_192834_v->_field_value->_field_expr->_field_token);
	} else {
		jule::Ref<_1ac6d02c0_Arr> _194021_arr = _192834_v->_field_kind->_field_kind->_method_arr();
		if (jule::real(_194021_arr)) {
			if (_194021_arr->_field_auto) {
				jule::Ref<_1ac6d02c0_Arr> _194325_data_arr = _192834_v->_field_value->_field_data->_field_kind->_method_arr();
				if (jule::real(_194325_data_arr)) {
					_194021_arr->_field_n=_194325_data_arr->_field_n;
				}
			}
		}
		this->self->_method_check_assign_type(_192834_v->_field_reference,_192834_v->_field_kind->_field_kind,_192834_v->_field_value->_field_data,_192834_v->_field_value->_field_expr->_field_token,false);
	}
	if (_192834_v->_field_reference && (!(_1ac6d02c0_is_valid_for_ref(_192834_v->_field_kind->_field_kind)))) {
		this->self->_method_push_err(_192834_v->_field_token,jule::Str("references cannot points to \"@\" type", 36),jule::Slice<jule::Any>({jule::Any(_192834_v->_field_kind->_field_kind->_method_to_str())}));
	}
	this->self->_method_check_validity_for_init_expr(_192834_v->_field_mutable,_192834_v->_field_reference,_192834_v->_field_kind->_field_kind,_192834_v->_field_value->_field_data,_192834_v->_field_value->_field_expr->_field_token);
	if (_192834_v->_field_constant) {
		if ((!(_192834_v->_field_value->_field_data->_method_is_const()))) {
			this->self->_method_push_err(_192834_v->_field_value->_field_expr->_field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>({}));
		}
	} else {
		jule::drop(_192834_v->_field_value->_field_data->_field_constant);
	}
	if (jule::real(_192834_v->_field_kind->_field_kind->_method_tup())) {
		jule::drop(_192834_v->_field_kind->_field_kind);
	}
}



inline void _1ab195050_Sema::_method_check_type_var(jule::Ref<_1b623eab2_Var>& _197839_decl,jule::Trait<_1aae290e2_Lookup> _197855_l) {
	if (_197839_decl->_field_cpp_linked || (!(_197839_decl->_method_is_initialized()))) {
		return;
	}
	if (jule::real(_197839_decl->_field_kind)) {
		_197839_decl->_field_value->_field_data=this->self->_method_evalpd(_197839_decl->_field_value->_field_expr,_197855_l,_197839_decl->_field_kind->_field_kind,_197839_decl);
	} else {
		_197839_decl->_field_value->_field_data=this->self->_method_evalpd(_197839_decl->_field_value->_field_expr,_197855_l,jule::new_ref<_1ac6d02c0_TypeKind>(),_197839_decl);
	}
	if ((!(jule::real(_197839_decl->_field_value->_field_data)))) {
		return;
	}
	this->self->_method_check_var(_197839_decl);
}



inline void _1ab195050_Sema::_method_check_global_types(void) {
	{
		auto _range_expr = this->self->_field_file->_field_vars;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b623eab2_Var> _1ab195050_decl = *_range_begin;
			_iter_begin_4441438016:;
			{
				this->self->_method_check_type_var(_1ab195050_decl,this->self);
			}
			_iter_next_4441438016:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab195050_decl = *_range_begin; goto _iter_begin_4441438016; }
			_iter_end_4441438016:;
		}
	}
}



inline void _1ab195050_Sema::_method_check_type_method(jule::Ref<_1b5e07a00_StructIns>& _200442_strct,jule::Ref<_1b557cd24_Fn>& _200466_f) {
	if (_200466_f->_field_cpp_linked) {
		return;
	}
	if (_200466_f->_field_generics.len() > 0LL) {
		return;
	}
	if (_200466_f->_field_instances.len() == 0LL) {
		jule::Ref<_1b557cd24_FnIns> _201521_ins = _200466_f->_method_instance();
		_201521_ins->_field_owner=_200442_strct;
		_200466_f->_method_append_instance(_201521_ins);
		this->self->_method_reload_fn_ins_types(_201521_ins);
		_201521_ins->_field_reloaded=true;
	}
	{
		auto _range_expr = _200466_f->_field_instances;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b557cd24_FnIns> _1ab195050_ins = *_range_begin;
			_iter_begin_4441445696:;
			{
				if (_1ab195050_ins->_field_scope->_field_stmts.len() > 0LL) {
					goto _iter_next_4441445696;
				}
				this->self->_method_check_fn_ins(_1ab195050_ins);
			}
			_iter_next_4441445696:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab195050_ins = *_range_begin; goto _iter_begin_4441445696; }
			_iter_end_4441445696:;
		}
	}
}



inline void _1ab195050_Sema::_method_check_type_struct(jule::Ref<_1b5e07a00_Struct>& _203142_strct) {
	if (_203142_strct->_field_cpp_linked) {
		return;
	}
	if (_203142_strct->_field_generics.len() > 0LL) {
		return;
	}
	if (_203142_strct->_field_instances.len() == 0LL) {
		jule::Ref<_1b5e07a00_StructIns> _204221_ins = _203142_strct->_method_instance();
		_204221_ins->_field_checked=true;
		_203142_strct->_method_append_instance(_204221_ins);
	}
	{
		auto _range_expr = _203142_strct->_field_instances;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b5e07a00_StructIns> _1ab195050_ins = *_range_begin;
			_iter_begin_4441464112:;
			{
				{
					auto _range_expr = _1ab195050_ins->_field_methods;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Ref<_1b557cd24_Fn> _1ab195050_f = *_range_begin;
						_iter_begin_4441466016:;
						{
							this->self->_method_check_type_method(_1ab195050_ins,_1ab195050_f);
						}
						_iter_next_4441466016:;
						++_range_begin;
						if (_range_begin != _range_end) { _1ab195050_f = *_range_begin; goto _iter_begin_4441466016; }
						_iter_end_4441466016:;
					}
				}
			}
			_iter_next_4441464112:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab195050_ins = *_range_begin; goto _iter_begin_4441464112; }
			_iter_end_4441464112:;
		}
	}
}



inline void _1ab195050_Sema::_method_check_struct_types(void) {
	{
		auto _range_expr = this->self->_field_file->_field_structs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b5e07a00_Struct> _1ab195050_s = *_range_begin;
			_iter_begin_4441469456:;
			{
				this->self->_method_check_type_struct(_1ab195050_s);
			}
			_iter_next_4441469456:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab195050_s = *_range_begin; goto _iter_begin_4441469456; }
			_iter_end_4441469456:;
		}
	}
}



inline void _1ab195050_Sema::_method_check_rets(jule::Ref<_1b557cd24_FnIns>& _206034_f) {
	if (_206034_f->_field_decl->_method_is_void()) {
		return;
	}
	jule::Bool _206513_ok = _1ab195050_has_ret(_206034_f->_field_scope);
	if ((!(_206513_ok))) {
		(*this)._method_push_err(_206034_f->_field_decl->_field_token,jule::Str("missing return at end of function", 33),jule::Slice<jule::Any>({}));
	}
}



inline void _1ab195050_Sema::_method_check_fn_ins_sc(jule::Ref<_1b557cd24_FnIns>& _207139_f,jule::Ref<_1ab009de8_ScopeChecker>& _207155_sc) {
	if (_207139_f->_field_decl->_field_cpp_linked) {
		return;
	}
	jule::Slice<jule::Ref<_1b623eab2_Var>> _207617_vars = _1ab195050_build_ret_vars(_207139_f);
	_207155_sc->_field_table->_field_vars=jule::append(_207155_sc->_field_table->_field_vars,_207617_vars);
	_207155_sc->_field_table->_field_vars=jule::append(_207155_sc->_field_table->_field_vars,_1ab195050_build_param_vars(_207139_f));
	_207155_sc->_field_table->_field_type_aliases=jule::append(_207155_sc->_field_table->_field_type_aliases,_1ab195050_build_generic_type_aliases(_207139_f));
	_207155_sc->_method_check(_207139_f->_field_decl->_field_scope,_207139_f->_field_scope);
	if (_207617_vars.len() > 0LL) {
		jule::Slice<jule::Any> _208621_stmts = jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::Int>(static_cast<jule::I64>(_207139_f->_field_scope->_field_stmts.len() + _207617_vars.len())));
		{
			auto _range_expr = _207617_vars;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_1b623eab2_Var> _1ab195050_v = *_range_begin;
				_iter_begin_4441493536:;
				{
					_208621_stmts=jule::append(_208621_stmts,jule::Slice<jule::Any>({jule::Any(_1ab195050_v)}));
				}
				_iter_next_4441493536:;
				++_range_begin;
				if (_range_begin != _range_end) { _1ab195050_v = *_range_begin; goto _iter_begin_4441493536; }
				_iter_end_4441493536:;
			}
		}
		_208621_stmts=jule::append(_208621_stmts,_207139_f->_field_scope->_field_stmts);
		_207139_f->_field_scope->_field_stmts=_208621_stmts;
	}
	(*this)._method_check_rets(_207139_f);
}



inline void _1ab195050_Sema::_method_check_fn_ins(jule::Ref<_1b557cd24_FnIns>& _209836_f) {
	if (_209836_f->_field_decl->_field_cpp_linked) {
		return;
	}
	jule::Ref<_1ab00cc20_SymbolTable> _210317_old = _209836_f->_field_decl->_field_sema->_field_file;
	__JULE_DEFER({
		_209836_f->_field_decl->_field_sema->_method_set_current_file(_210317_old);
	});
	jule::Ref<_1ab00cc20_SymbolTable> _210517_file = _1ab195050_find_file(_209836_f->_field_decl->_field_sema->_field_files,_209836_f->_field_decl->_field_token._field_file);
	if (jule::real(_210517_file)) {
		_209836_f->_field_decl->_field_sema->_method_set_current_file(_210517_file);
	}
	jule::Ref<_1ab009de8_ScopeChecker> _211017_sc = _1ab009de8_new_scope_checker(_209836_f->_field_decl->_field_sema,_209836_f);
	(*this)._method_check_fn_ins_sc(_209836_f,_211017_sc);
	if ((_209836_f->_field_decl->_field_sema).alloc != (&((*this)))) {
		(*this)._field_errors=jule::append((*this)._field_errors,_209836_f->_field_decl->_field_sema->_field_errors);
		_209836_f->_field_decl->_field_sema->_field_errors=nullptr;
	}
}



inline void _1ab195050_Sema::_method_check_type_fn(jule::Ref<_1b557cd24_Fn>& _211938_f) {
	if (_211938_f->_field_cpp_linked) {
		return;
	}
	if (_211938_f->_field_generics.len() > 0LL) {
		return;
	}
	{
		auto _range_expr = _211938_f->_field_instances;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b557cd24_FnIns> _1ab195050_ins = *_range_begin;
			_iter_begin_4441516592:;
			{
				this->self->_method_check_fn_ins(_1ab195050_ins);
			}
			_iter_next_4441516592:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab195050_ins = *_range_begin; goto _iter_begin_4441516592; }
			_iter_end_4441516592:;
		}
	}
}



inline void _1ab195050_Sema::_method_precheck_type_fn(jule::Ref<_1b557cd24_Fn>& _213441_f) {
	if (_213441_f->_field_cpp_linked) {
		return;
	}
	if (_213441_f->_field_generics.len() > 0LL) {
		return;
	}
	if (_213441_f->_field_instances.len() == 0LL) {
		jule::Ref<_1b557cd24_FnIns> _214521_ins = _213441_f->_method_instance();
		_213441_f->_field_instances=jule::append(_213441_f->_field_instances,jule::Slice<jule::Ref<_1b557cd24_FnIns>>({_214521_ins}));
		this->self->_method_reload_fn_ins_types(_214521_ins);
		_214521_ins->_field_reloaded=true;
	}
}



inline jule::Bool _1ab195050_Sema::_method_precheck_fn_types(void) {
	jule::Bool _215339_ok = jule::Bool();
	{
		auto _range_expr = this->self->_field_file->_field_funcs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b557cd24_Fn> _1ab195050_decl = *_range_begin;
			_iter_begin_4441530896:;
			{
				this->self->_method_precheck_type_fn(_1ab195050_decl);
			}
			_iter_next_4441530896:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab195050_decl = *_range_begin; goto _iter_begin_4441530896; }
			_iter_end_4441530896:;
		}
	}
	_215339_ok = true;
	return _215339_ok;
}



inline jule::Bool _1ab195050_Sema::_method_check_fn_types(void) {
	jule::Bool _216136_ok = jule::Bool();
	{
		auto _range_expr = this->self->_field_file->_field_funcs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b557cd24_Fn> _1ab195050_decl = *_range_begin;
			_iter_begin_4441535888:;
			{
				this->self->_method_check_type_fn(_1ab195050_decl);
			}
			_iter_next_4441535888:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab195050_decl = *_range_begin; goto _iter_begin_4441535888; }
			_iter_end_4441535888:;
		}
	}
	_216136_ok = true;
	return _216136_ok;
}



inline void _1ab195050_Sema::_method_check_package_types(void) {
	{
		auto _range_expr = this->self->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab00cc20_SymbolTable> _1ab195050_f = *_range_begin;
			_iter_begin_4441539856:;
			{
				this->self->_method_set_current_file(_1ab195050_f);
				this->self->_method_check_global_types();
			}
			_iter_next_4441539856:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab195050_f = *_range_begin; goto _iter_begin_4441539856; }
			_iter_end_4441539856:;
		}
	}
	{
		auto _range_expr = this->self->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab00cc20_SymbolTable> _1ab195050_f = *_range_begin;
			_iter_begin_4441540784:;
			{
				this->self->_method_set_current_file(_1ab195050_f);
				this->self->_method_precheck_fn_types();
			}
			_iter_next_4441540784:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab195050_f = *_range_begin; goto _iter_begin_4441540784; }
			_iter_end_4441540784:;
		}
	}
	{
		auto _range_expr = this->self->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab00cc20_SymbolTable> _1ab195050_f = *_range_begin;
			_iter_begin_4441543808:;
			{
				this->self->_method_set_current_file(_1ab195050_f);
				this->self->_method_check_fn_types();
			}
			_iter_next_4441543808:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab195050_f = *_range_begin; goto _iter_begin_4441543808; }
			_iter_end_4441543808:;
		}
	}
	{
		auto _range_expr = this->self->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab00cc20_SymbolTable> _1ab195050_f = *_range_begin;
			_iter_begin_4441546656:;
			{
				this->self->_method_set_current_file(_1ab195050_f);
				this->self->_method_check_struct_types();
			}
			_iter_next_4441546656:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab195050_f = *_range_begin; goto _iter_begin_4441546656; }
			_iter_end_4441546656:;
		}
	}
}



inline void _1ab195050_Sema::_method_set_file_sema_fields(void) {
	{
		auto _range_expr = this->self->_field_file->_field_funcs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b557cd24_Fn> _1ab195050_f = *_range_begin;
			_iter_begin_4441552752:;
			{
				_1ab195050_f->_field_sema=this->self;
			}
			_iter_next_4441552752:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab195050_f = *_range_begin; goto _iter_begin_4441552752; }
			_iter_end_4441552752:;
		}
	}
	{
		auto _range_expr = this->self->_field_file->_field_structs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b5e07a00_Struct> _1ab195050_st = *_range_begin;
			_iter_begin_4441553568:;
			{
				_1ab195050_st->_field_sema=this->self;
			}
			_iter_next_4441553568:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab195050_st = *_range_begin; goto _iter_begin_4441553568; }
			_iter_end_4441553568:;
		}
	}
}



inline void _1ab195050_Sema::_method_set_sema_fields(void) {
	{
		auto _range_expr = this->self->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab00cc20_SymbolTable> _1ab195050_file = *_range_begin;
			_iter_begin_4441557888:;
			{
				this->self->_method_set_current_file(_1ab195050_file);
				this->self->_method_set_file_sema_fields();
			}
			_iter_next_4441557888:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab195050_file = *_range_begin; goto _iter_begin_4441557888; }
			_iter_end_4441557888:;
		}
	}
}



inline void _1ab195050_Sema::_method_check(jule::Slice<jule::Ref<_1ab00cc20_SymbolTable>>& _220930_files) {
	this->self->_field_files=_220930_files;
	this->self->_method_check_imports();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_check_enums();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_set_sema_fields();
	this->self->_method_impl_impls();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_check_package_decls();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_check_package_types();
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab195050_Sema &_Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_1b623eab2_Var> _1a8dc912c_RangeChecker::_method_build_var(jule::Ref<_1b61ca014_VarDecl>& _109229_decl) {
	jule::Ref<_1b623eab2_Var> _109317_v = _1b5589c76_build_var(_109229_decl);
	return _109317_v;
}



inline void _1a8dc912c_RangeChecker::_method_set_size_key(void) {
	if ((!(jule::real((*this)._field_rang->_field_key_a))) || _1b61ec5ec_is_ignore_ident((*this)._field_rang->_field_key_a->_field_ident)) {
		return;
	}
	(*this)._field_kind->_field_key_a=(*this)._method_build_var((*this)._field_rang->_field_key_a);
	(*this)._field_kind->_field_key_a->_field_kind=jule::new_struct<_1ac6d02c0_TypeSymbol>(new( std::nothrow ) _1ac6d02c0_TypeSymbol(jule::Ref<_1b61ca014_TypeDecl>(),jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_1ac6d02c0_build_prim_type(jule::Str("int", 3))))));
}



inline void _1a8dc912c_RangeChecker::_method_check_range_expr_validity(jule::Ref<_1ab00dbcc_Data>& _111649_d,jule::Ref<_1b623eab2_Var>& _111660_key,jule::Ref<_1ac6d02c0_TypeKind>& _111676_k) {
	jule::Bool _111717__mut = _111660_key->_field_mutable;
	if (_111717__mut && (!(_111676_k->_method_mutable()))) {
		_111717__mut=false;
	}
	(*this)._field_sc->_field_s->_method_check_validity_for_init_expr(_111717__mut,_111660_key->_field_reference,_111660_key->_field_kind->_field_kind,_111649_d,(*this)._field_rang->_field_in_token);
}



inline void _1a8dc912c_RangeChecker::_method_check_slice(void) {
	(*this)._method_set_size_key();
	if ((!(jule::real((*this)._field_rang->_field_key_b))) || _1b61ec5ec_is_ignore_ident((*this)._field_rang->_field_key_b->_field_ident)) {
		return;
	}
	jule::Ref<_1ac6d02c0_Slc> _113517_slc = (*this)._field_d->_field_kind->_method_slc();
	(*this)._field_kind->_field_key_b=(*this)._method_build_var((*this)._field_rang->_field_key_b);
	(*this)._field_kind->_field_key_b->_field_kind=jule::new_struct<_1ac6d02c0_TypeSymbol>(new( std::nothrow ) _1ac6d02c0_TypeSymbol(jule::Ref<_1b61ca014_TypeDecl>(),_113517_slc->_field_elem));
	(*this)._method_check_range_expr_validity((*this)._field_d,(*this)._field_kind->_field_key_b,_113517_slc->_field_elem);
}



inline void _1a8dc912c_RangeChecker::_method_check_array(void) {
	(*this)._method_set_size_key();
	if ((!(jule::real((*this)._field_rang->_field_key_b))) || _1b61ec5ec_is_ignore_ident((*this)._field_rang->_field_key_b->_field_ident)) {
		return;
	}
	jule::Ref<_1ac6d02c0_Arr> _114817_arr = (*this)._field_d->_field_kind->_method_arr();
	(*this)._field_kind->_field_key_b=(*this)._method_build_var((*this)._field_rang->_field_key_b);
	(*this)._field_kind->_field_key_b->_field_kind=jule::new_struct<_1ac6d02c0_TypeSymbol>(new( std::nothrow ) _1ac6d02c0_TypeSymbol(jule::Ref<_1b61ca014_TypeDecl>(),_114817_arr->_field_elem));
	(*this)._method_check_range_expr_validity((*this)._field_d,(*this)._field_kind->_field_key_b,_114817_arr->_field_elem);
}



inline void _1a8dc912c_RangeChecker::_method_check_map_key_a(void) {
	if ((!(jule::real((*this)._field_rang->_field_key_a))) || _1b61ec5ec_is_ignore_ident((*this)._field_rang->_field_key_a->_field_ident)) {
		return;
	}
	jule::Ref<_1ac6d02c0_Map> _116017_m = (*this)._field_d->_field_kind->_method_map();
	(*this)._field_kind->_field_key_a=(*this)._method_build_var((*this)._field_rang->_field_key_a);
	(*this)._field_kind->_field_key_a->_field_kind=jule::new_struct<_1ac6d02c0_TypeSymbol>(new( std::nothrow ) _1ac6d02c0_TypeSymbol(jule::Ref<_1b61ca014_TypeDecl>(),_116017_m->_field_key));
	jule::Ref<_1ab00dbcc_Data> _116417_d = jule::new_ref<_1ab00dbcc_Data>((*this)._field_d.get());
	_116417_d->_field_kind=_116017_m->_field_key;
	(*this)._method_check_range_expr_validity(_116417_d,(*this)._field_kind->_field_key_a,_116017_m->_field_key);
}



inline void _1a8dc912c_RangeChecker::_method_check_map_key_b(void) {
	if ((!(jule::real((*this)._field_rang->_field_key_b))) || _1b61ec5ec_is_ignore_ident((*this)._field_rang->_field_key_b->_field_ident)) {
		return;
	}
	jule::Ref<_1ac6d02c0_Map> _117517_m = (*this)._field_d->_field_kind->_method_map();
	(*this)._field_kind->_field_key_b=(*this)._method_build_var((*this)._field_rang->_field_key_b);
	(*this)._field_kind->_field_key_b->_field_kind=jule::new_struct<_1ac6d02c0_TypeSymbol>(new( std::nothrow ) _1ac6d02c0_TypeSymbol(jule::Ref<_1b61ca014_TypeDecl>(),_117517_m->_field_val));
	jule::Ref<_1ab00dbcc_Data> _117917_d = jule::new_ref<_1ab00dbcc_Data>((*this)._field_d.get());
	_117917_d->_field_kind=_117517_m->_field_val;
	(*this)._method_check_range_expr_validity(_117917_d,(*this)._field_kind->_field_key_b,_117517_m->_field_val);
}



inline void _1a8dc912c_RangeChecker::_method_check_map(void) {
	(*this)._method_check_map_key_a();
	(*this)._method_check_map_key_b();
}



inline void _1a8dc912c_RangeChecker::_method_check_str(void) {
	(*this)._method_set_size_key();
	if ((!(jule::real((*this)._field_rang->_field_key_b))) || _1b61ec5ec_is_ignore_ident((*this)._field_rang->_field_key_b->_field_ident)) {
		return;
	}
	(*this)._field_kind->_field_key_b=(*this)._method_build_var((*this)._field_rang->_field_key_b);
	(*this)._field_kind->_field_key_b->_field_kind=jule::new_struct<_1ac6d02c0_TypeSymbol>(new( std::nothrow ) _1ac6d02c0_TypeSymbol(jule::Ref<_1b61ca014_TypeDecl>(),jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_1ac6d02c0_build_prim_type(jule::Str("u8", 2))))));
}



inline jule::Bool _1a8dc912c_RangeChecker::_method_check(void) {
	if (jule::real((*this)._field_d->_field_kind->_method_ref())) {
		(*this)._field_d->_field_model=jule::Any(jule::new_struct<_1ab33d083_ExplicitDerefExprModel>(new( std::nothrow ) _1ab33d083_ExplicitDerefExprModel((*this)._field_d->_field_model)));
		(*this)._field_d->_field_kind=(*this)._field_d->_field_kind->_method_ref()->_field_elem;
	}
	{
		if (!((jule::real((*this)._field_d->_field_kind->_method_slc())))) { goto _case_end_4442267664; }
		_case_begin_4442267664:;
		{
			(*this)._method_check_slice();
			return true;
		}
		goto _match_end_4442267168;
		_case_end_4442267664:;
		if (!((jule::real((*this)._field_d->_field_kind->_method_arr())))) { goto _case_end_4442267792; }
		_case_begin_4442267792:;
		{
			(*this)._method_check_array();
			return true;
		}
		goto _match_end_4442267168;
		_case_end_4442267792:;
		if (!((jule::real((*this)._field_d->_field_kind->_method_map())))) { goto _case_end_4442267920; }
		_case_begin_4442267920:;
		{
			(*this)._method_check_map();
			return true;
		}
		goto _match_end_4442267168;
		_case_end_4442267920:;
		_match_end_4442267168:;
	}
	jule::Ref<_1ac6d02c0_Prim> _122613_prim = (*this)._field_d->_field_kind->_method_prim();
	if (jule::real(_122613_prim) && _122613_prim->_method_is_str()) {
		(*this)._method_check_str();
		return true;
	}
	(*this)._field_sc->_field_s->_method_push_err((*this)._field_rang->_field_in_token,jule::Str("range iterations must be have enumerable expression", 51),jule::Slice<jule::Any>({}));
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _1a8dc912c_RangeChecker &_Src) {
	_Stream << "RangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_1ab194c20_ImportInfo> _1ab00cc20_SymbolTable::_method_find_package(jule::Str _2535_ident) {
	{
		auto _range_expr = (*this)._field_imports;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab194c20_ImportInfo> _1ab00cc20_pkg = *_range_begin;
			_iter_begin_4442356224:;
			{
				if (_1ab00cc20_pkg->_field_ident == _2535_ident) {
					return _1ab00cc20_pkg;
				}
			}
			_iter_next_4442356224:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab00cc20_pkg = *_range_begin; goto _iter_begin_4442356224; }
			_iter_end_4442356224:;
		}
	}
	return jule::new_ref<_1ab194c20_ImportInfo>();
}



inline jule::Ref<_1ab194c20_ImportInfo> _1ab00cc20_SymbolTable::_method_select_package(jule::Fn<jule::Bool(jule::Ref<_1ab194c20_ImportInfo>)> _3737_selector) {
	if (_3737_selector == nullptr) {
		return jule::new_ref<_1ab194c20_ImportInfo>();
	}
	{
		auto _range_expr = (*this)._field_imports;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab194c20_ImportInfo> _1ab00cc20_pkg = *_range_begin;
			_iter_begin_4442361280:;
			{
				if (_3737_selector(_1ab00cc20_pkg)) {
					return _1ab00cc20_pkg;
				}
			}
			_iter_next_4442361280:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab00cc20_pkg = *_range_begin; goto _iter_begin_4442361280; }
			_iter_end_4442361280:;
		}
	}
	return jule::new_ref<_1ab194c20_ImportInfo>();
}



inline jule::Ref<_1b623eab2_Var> _1ab00cc20_SymbolTable::_method_find_var(jule::Str _5231_ident,jule::Bool _5243_cpp_linked) {
	return (*this)._method___find_var(_5231_ident,_5243_cpp_linked,false);
}



inline jule::Ref<_1ac6d02c0_TypeAlias> _1ab00cc20_SymbolTable::_method_find_type_alias(jule::Str _5838_ident,jule::Bool _5850_cpp_linked) {
	return (*this)._method___find_type_alias(_5838_ident,_5850_cpp_linked,false);
}



inline jule::Ref<_1b5e07a00_Struct> _1ab00cc20_SymbolTable::_method_find_struct(jule::Str _6434_ident,jule::Bool _6446_cpp_linked) {
	{
		auto _range_expr = (*this)._field_structs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b5e07a00_Struct> _1ab00cc20_s = *_range_begin;
			_iter_begin_4442371360:;
			{
				if ((_1ab00cc20_s->_field_ident == _6434_ident) && (_1ab00cc20_s->_field_cpp_linked == _6446_cpp_linked)) {
					return _1ab00cc20_s;
				}
			}
			_iter_next_4442371360:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab00cc20_s = *_range_begin; goto _iter_begin_4442371360; }
			_iter_end_4442371360:;
		}
	}
	return jule::new_ref<_1b5e07a00_Struct>();
}



inline jule::Ref<_1b557cd24_Fn> _1ab00cc20_SymbolTable::_method_find_fn(jule::Str _7530_ident,jule::Bool _7542_cpp_linked) {
	{
		auto _range_expr = (*this)._field_funcs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b557cd24_Fn> _1ab00cc20_f = *_range_begin;
			_iter_begin_4442376560:;
			{
				if ((_1ab00cc20_f->_field_ident == _7530_ident) && (_1ab00cc20_f->_field_cpp_linked == _7542_cpp_linked)) {
					return _1ab00cc20_f;
				}
			}
			_iter_next_4442376560:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab00cc20_f = *_range_begin; goto _iter_begin_4442376560; }
			_iter_end_4442376560:;
		}
	}
	return jule::new_ref<_1b557cd24_Fn>();
}



inline jule::Ref<_1aaee9091_Trait> _1ab00cc20_SymbolTable::_method_find_trait(jule::Str _8633_ident) {
	{
		auto _range_expr = (*this)._field_traits;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1aaee9091_Trait> _1ab00cc20_t = *_range_begin;
			_iter_begin_4442380928:;
			{
				if (_1ab00cc20_t->_field_ident == _8633_ident) {
					return _1ab00cc20_t;
				}
			}
			_iter_next_4442380928:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab00cc20_t = *_range_begin; goto _iter_begin_4442380928; }
			_iter_end_4442380928:;
		}
	}
	return jule::new_ref<_1aaee9091_Trait>();
}



inline jule::Ref<_1a909ac6b_Enum> _1ab00cc20_SymbolTable::_method_find_enum(jule::Str _9732_ident) {
	{
		auto _range_expr = (*this)._field_enums;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1a909ac6b_Enum> _1ab00cc20_e = *_range_begin;
			_iter_begin_4442384912:;
			{
				if (_1ab00cc20_e->_field_ident == _9732_ident) {
					return _1ab00cc20_e;
				}
			}
			_iter_next_4442384912:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab00cc20_e = *_range_begin; goto _iter_begin_4442384912; }
			_iter_end_4442384912:;
		}
	}
	return jule::new_ref<_1a909ac6b_Enum>();
}



inline jule::Ref<_1b623eab2_Var> _1ab00cc20_SymbolTable::_method___find_var(jule::Str _10829_ident,jule::Bool _10841_cpp_linked,jule::Bool _10859_reverse) {
	if (_10859_reverse) {
		jule::I64 _11021_i = (*this)._field_vars.len() - 1LL;
		_iter_begin_4442390960:;
		if (!(_11021_i >= 0LL)) { goto _iter_end_4442390960; }
		{
			jule::Ref<_1b623eab2_Var> _11225_v = (*this)._field_vars[static_cast<jule::Int>(_11021_i)];
			if ((_11225_v->_field_ident == _10829_ident) && (_11225_v->_field_cpp_linked == _10841_cpp_linked)) {
				return _11225_v;
			}
		}
		_iter_next_4442390960:;
		(_11021_i)--;
		goto _iter_begin_4442390960;
		_iter_end_4442390960:;
	} else {
		{
			auto _range_expr = (*this)._field_vars;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_1b623eab2_Var> _1ab00cc20_v = *_range_begin;
				_iter_begin_4442389824:;
				{
					if ((_1ab00cc20_v->_field_ident == _10829_ident) && (_1ab00cc20_v->_field_cpp_linked == _10841_cpp_linked)) {
						return _1ab00cc20_v;
					}
				}
				_iter_next_4442389824:;
				++_range_begin;
				if (_range_begin != _range_end) { _1ab00cc20_v = *_range_begin; goto _iter_begin_4442389824; }
				_iter_end_4442389824:;
			}
		}
	}
	return jule::new_ref<_1b623eab2_Var>();
}



inline jule::Ref<_1ac6d02c0_TypeAlias> _1ab00cc20_SymbolTable::_method___find_type_alias(jule::Str _12736_ident,jule::Bool _12748_cpp_linked,jule::Bool _12766_reverse) {
	if (_12766_reverse) {
		jule::I64 _12921_i = (*this)._field_type_aliases.len() - 1LL;
		_iter_begin_4442402896:;
		if (!(_12921_i >= 0LL)) { goto _iter_end_4442402896; }
		{
			jule::Ref<_1ac6d02c0_TypeAlias> _13125_ta = (*this)._field_type_aliases[static_cast<jule::Int>(_12921_i)];
			if ((_13125_ta->_field_ident == _12736_ident) && (_13125_ta->_field_cpp_linked == _12748_cpp_linked)) {
				return _13125_ta;
			}
		}
		_iter_next_4442402896:;
		(_12921_i)--;
		goto _iter_begin_4442402896;
		_iter_end_4442402896:;
	} else {
		{
			auto _range_expr = (*this)._field_type_aliases;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_1ac6d02c0_TypeAlias> _1ab00cc20_ta = *_range_begin;
				_iter_begin_4442401760:;
				{
					if ((_1ab00cc20_ta->_field_ident == _12736_ident) && (_1ab00cc20_ta->_field_cpp_linked == _12748_cpp_linked)) {
						return _1ab00cc20_ta;
					}
				}
				_iter_next_4442401760:;
				++_range_begin;
				if (_range_begin != _range_end) { _1ab00cc20_ta = *_range_begin; goto _iter_begin_4442401760; }
				_iter_end_4442401760:;
			}
		}
	}
	return jule::new_ref<_1ac6d02c0_TypeAlias>();
}



inline jule::Any _1ab00cc20_SymbolTable::_method_def_by_ident(jule::Str _14831_ident,jule::Bool _14843_cpp_linked) {
	{
		auto _range_expr = (*this)._field_vars;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b623eab2_Var> _1ab00cc20_v = *_range_begin;
			_iter_begin_4442413376:;
			{
				if ((_1ab00cc20_v->_field_ident == _14831_ident) && (_1ab00cc20_v->_field_cpp_linked == _14843_cpp_linked)) {
					return jule::Any(_1ab00cc20_v);
				}
			}
			_iter_next_4442413376:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab00cc20_v = *_range_begin; goto _iter_begin_4442413376; }
			_iter_end_4442413376:;
		}
	}
	{
		auto _range_expr = (*this)._field_type_aliases;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ac6d02c0_TypeAlias> _1ab00cc20_ta = *_range_begin;
			_iter_begin_4442414912:;
			{
				if ((_1ab00cc20_ta->_field_ident == _14831_ident) && (_1ab00cc20_ta->_field_cpp_linked == _14843_cpp_linked)) {
					return jule::Any(_1ab00cc20_ta);
				}
			}
			_iter_next_4442414912:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab00cc20_ta = *_range_begin; goto _iter_begin_4442414912; }
			_iter_end_4442414912:;
		}
	}
	{
		auto _range_expr = (*this)._field_structs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b5e07a00_Struct> _1ab00cc20_s = *_range_begin;
			_iter_begin_4442414384:;
			{
				if ((_1ab00cc20_s->_field_ident == _14831_ident) && (_1ab00cc20_s->_field_cpp_linked == _14843_cpp_linked)) {
					return jule::Any(_1ab00cc20_s);
				}
			}
			_iter_next_4442414384:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab00cc20_s = *_range_begin; goto _iter_begin_4442414384; }
			_iter_end_4442414384:;
		}
	}
	{
		auto _range_expr = (*this)._field_funcs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b557cd24_Fn> _1ab00cc20_f = *_range_begin;
			_iter_begin_4442422912:;
			{
				if ((_1ab00cc20_f->_field_ident == _14831_ident) && (_1ab00cc20_f->_field_cpp_linked == _14843_cpp_linked)) {
					return jule::Any(_1ab00cc20_f);
				}
			}
			_iter_next_4442422912:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab00cc20_f = *_range_begin; goto _iter_begin_4442422912; }
			_iter_end_4442422912:;
		}
	}
	if (_14843_cpp_linked) {
		return jule::Any(nullptr);
	}
	{
		auto _range_expr = (*this)._field_traits;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1aaee9091_Trait> _1ab00cc20_t = *_range_begin;
			_iter_begin_4442425984:;
			{
				if (_1ab00cc20_t->_field_ident == _14831_ident) {
					return jule::Any(_1ab00cc20_t);
				}
			}
			_iter_next_4442425984:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab00cc20_t = *_range_begin; goto _iter_begin_4442425984; }
			_iter_end_4442425984:;
		}
	}
	{
		auto _range_expr = (*this)._field_enums;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1a909ac6b_Enum> _1ab00cc20_e = *_range_begin;
			_iter_begin_4442427216:;
			{
				if (_1ab00cc20_e->_field_ident == _14831_ident) {
					return jule::Any(_1ab00cc20_e);
				}
			}
			_iter_next_4442427216:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab00cc20_e = *_range_begin; goto _iter_begin_4442427216; }
			_iter_end_4442427216:;
		}
	}
	return jule::Any(nullptr);
}



inline jule::Bool _1ab00cc20_SymbolTable::_method_is_duplicated_ident(jule::Uintptr _19534_itself,jule::Str _19551_ident,jule::Bool _19563_cpp_linked) {
	{
		auto _range_expr = (*this)._field_vars;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b623eab2_Var> _1ab00cc20_v = *_range_begin;
			_iter_begin_4442433792:;
			{
				if (((((jule::Uintptr)((_1ab00cc20_v).alloc)) != _19534_itself) && (_1ab00cc20_v->_field_ident == _19551_ident)) && (_1ab00cc20_v->_field_cpp_linked == _19563_cpp_linked)) {
					return true;
				}
			}
			_iter_next_4442433792:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab00cc20_v = *_range_begin; goto _iter_begin_4442433792; }
			_iter_end_4442433792:;
		}
	}
	{
		auto _range_expr = (*this)._field_type_aliases;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ac6d02c0_TypeAlias> _1ab00cc20_ta = *_range_begin;
			_iter_begin_4442436416:;
			{
				if (((((jule::Uintptr)((_1ab00cc20_ta).alloc)) != _19534_itself) && (_1ab00cc20_ta->_field_ident == _19551_ident)) && (_1ab00cc20_ta->_field_cpp_linked == _19563_cpp_linked)) {
					return true;
				}
			}
			_iter_next_4442436416:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab00cc20_ta = *_range_begin; goto _iter_begin_4442436416; }
			_iter_end_4442436416:;
		}
	}
	{
		auto _range_expr = (*this)._field_structs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b5e07a00_Struct> _1ab00cc20_s = *_range_begin;
			_iter_begin_4442440032:;
			{
				if (((((jule::Uintptr)((_1ab00cc20_s).alloc)) != _19534_itself) && (_1ab00cc20_s->_field_ident == _19551_ident)) && (_1ab00cc20_s->_field_cpp_linked == _19563_cpp_linked)) {
					return true;
				}
			}
			_iter_next_4442440032:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab00cc20_s = *_range_begin; goto _iter_begin_4442440032; }
			_iter_end_4442440032:;
		}
	}
	{
		auto _range_expr = (*this)._field_funcs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b557cd24_Fn> _1ab00cc20_f = *_range_begin;
			_iter_begin_4442443712:;
			{
				if (((((jule::Uintptr)((_1ab00cc20_f).alloc)) != _19534_itself) && (_1ab00cc20_f->_field_ident == _19551_ident)) && (_1ab00cc20_f->_field_cpp_linked == _19563_cpp_linked)) {
					return true;
				}
			}
			_iter_next_4442443712:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab00cc20_f = *_range_begin; goto _iter_begin_4442443712; }
			_iter_end_4442443712:;
		}
	}
	if (_19563_cpp_linked) {
		return false;
	}
	{
		auto _range_expr = (*this)._field_traits;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1aaee9091_Trait> _1ab00cc20_t = *_range_begin;
			_iter_begin_4442445936:;
			{
				if ((((jule::Uintptr)((_1ab00cc20_t).alloc)) != _19534_itself) && (_1ab00cc20_t->_field_ident == _19551_ident)) {
					return true;
				}
			}
			_iter_next_4442445936:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab00cc20_t = *_range_begin; goto _iter_begin_4442445936; }
			_iter_end_4442445936:;
		}
	}
	{
		auto _range_expr = (*this)._field_enums;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1a909ac6b_Enum> _1ab00cc20_e = *_range_begin;
			_iter_begin_4442449632:;
			{
				if ((((jule::Uintptr)((_1ab00cc20_e).alloc)) != _19534_itself) && (_1ab00cc20_e->_field_ident == _19551_ident)) {
					return true;
				}
			}
			_iter_next_4442449632:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab00cc20_e = *_range_begin; goto _iter_begin_4442449632; }
			_iter_end_4442449632:;
		}
	}
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab00cc20_SymbolTable &_Src) {
	_Stream << "SymbolTable{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "passes:" << _Src._field_passes << ", ";
	_Stream << "imports:" << _Src._field_imports << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "type_aliases:" << _Src._field_type_aliases << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "funcs:" << _Src._field_funcs << ", ";
	_Stream << "traits:" << _Src._field_traits << ", ";
	_Stream << "enums:" << _Src._field_enums << ", ";
	_Stream << "impls:" << _Src._field_impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ab00dbcc_Data::_method_is_nil(void) {
	return (*this)._field_kind->_method_is_nil();
}



inline jule::Bool _1ab00dbcc_Data::_method_is_void(void) {
	return (*this)._field_kind->_method_void();
}



inline jule::Bool _1ab00dbcc_Data::_method_is_const(void) {
	return jule::real((*this)._field_constant);
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab00dbcc_Data &_Src) {
	_Stream << "Data{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "cast_kind:" << _Src._field_cast_kind << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "lvalue:" << _Src._field_lvalue << ", ";
	_Stream << "variadiced:" << _Src._field_variadiced << ", ";
	_Stream << "is_rune:" << _Src._field_is_rune << ", ";
	_Stream << "model:" << _Src._field_model << ", ";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "constant:" << _Src._field_constant;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab00dbcc_Value &_Src) {
	_Stream << "Value{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline void _1ab00dbcc_Eval::_method_push_err(_1b61ec5ec_Token _24827_token,jule::Str _24841_fmt,jule::Slice<jule::Any> _24854_args) {
	(*this)._field_s->_method_push_err(_24827_token,_24841_fmt,_24854_args);
}



inline void _1ab00dbcc_Eval::_method_push_suggestion(jule::Str _25334_fmt,jule::Slice<jule::Any> _25347_args) {
	(*this)._field_s->_method_push_suggestion(_25334_fmt,_25347_args);
}



inline jule::Bool _1ab00dbcc_Eval::_method_is_unsafe(void) {
	return (*this)._field_unsafety;
}



inline jule::Bool _1ab00dbcc_Eval::_method_is_global(void) {
	{
		auto _match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_1ab195050_Sema>>())) { goto _case_end_4442470896; }
		_case_begin_4442470896:;
		{
			return true;
		}
		goto _match_end_4442469952;
		_case_end_4442470896:;
		_case_begin_4442470592:;
		{
			return false;
		}
		goto _match_end_4442469952;
		_case_end_4442470592:;
		_match_end_4442469952:;
	}
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_lit_nil(void) {
	jule::Ref<_1ac90c3ed_Const> _27217_constant = _1ac90c3ed_Const::_static_method_new_nil();
	return jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),nullptr)),jule::Ref<_1ac6d02c0_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(_27217_constant),false,_27217_constant));
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_lit_str(jule::Ref<_1b61ca014_LitExpr> _28322_lt) {
	jule::Str _28417_s = _28322_lt->_field_value.slice(1LL,static_cast<jule::Int>(_28322_lt->_field_value.len() - 1LL));
	if (_1b61ec5ec_is_raw_str(_28322_lt->_field_value)) {
		_28417_s=_1acb355b0_to_raw_str(static_cast<jule::Slice<jule::U8>>(_28417_s));
	} else {
		_28417_s=_1acb355b0_to_str(static_cast<jule::Slice<jule::U8>>(_28417_s));
	}
	jule::Ref<_1ac90c3ed_Const> _29017_constant = _1ac90c3ed_Const::_static_method_new_str(_28417_s);
	return jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_1ac6d02c0_build_prim_type(jule::Str("str", 3)))),jule::Ref<_1ac6d02c0_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(_29017_constant),false,_29017_constant));
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_lit_bool(jule::Ref<_1b61ca014_LitExpr> _30423_lit) {
	jule::Ref<_1ac90c3ed_Const> _30517_constant = _1ac90c3ed_Const::_static_method_new_bool(_30423_lit->_field_value == jule::Str("true", 4));
	return jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_1ac6d02c0_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1ac6d02c0_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(_30517_constant),false,_30517_constant));
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_lit_rune(jule::Ref<_1b61ca014_LitExpr> _31823_l) {
	
	
	jule::Str _32213_lt = _31823_l->_field_value.slice(1LL,static_cast<jule::Int>(_31823_l->_field_value.len() - 1LL));
	jule::I32 _32313_r = _1acb355b0_to_rune(static_cast<jule::Slice<jule::U8>>(_32213_lt));
	jule::Ref<_1ab00dbcc_Data> _32417_data = jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::Ref<_1ac6d02c0_TypeKind>(),jule::Ref<_1ac6d02c0_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),false,_1ac90c3ed_Const::_static_method_new_i64(static_cast<jule::I64>(_32313_r))));
	jule::Bool _33117_is_byte;
	std::tie(std::ignore,_33117_is_byte) = _1acb355b0_is_byte_lit(_31823_l->_field_value);
	if (_33117_is_byte) {
		_32417_data->_field_kind=jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_1ac6d02c0_build_prim_type(jule::Str("u8", 2))));
	} else {
		_32417_data->_field_kind=jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_1ac6d02c0_build_prim_type(jule::Str("i32", 3))));
	}
	_32417_data->_field_model=jule::Any(jule::new_struct<_1ab33d083_RuneExprModel>(new( std::nothrow ) _1ab33d083_RuneExprModel(_32313_r)));
	_32417_data->_field_is_rune=true;
	return _32417_data;
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_lit_float(jule::Ref<_1b61ca014_LitExpr> _34724_l) {
	
	jule::F64 _35014_f;
	std::tie(_35014_f,std::ignore) = _1cddd8c93_parse_float(_34724_l->_field_value,64LL);
	jule::Ref<_1ac90c3ed_Const> _35117_constant = _1ac90c3ed_Const::_static_method_new_f64(_35014_f);
	return jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_1ac6d02c0_build_prim_type(jule::Str("f64", 3)))),jule::Ref<_1ac6d02c0_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(_35117_constant),false,_35117_constant));
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_lit_int(jule::Ref<_1b61ca014_LitExpr> _36526_l) {
	
	jule::Str _36817_lit = _36526_l->_field_value;
	jule::Int _36917_base = 0LL;
	{
		if (!((_36817_lit.has_prefix(jule::Str("0x", 2))))) { goto _case_end_4442523888; }
		_case_begin_4442523888:;
		{
			_36817_lit=_36817_lit.slice(2LL);
			_36917_base=16LL;
		}
		goto _match_end_4442522240;
		_case_end_4442523888:;
		if (!((_36817_lit.has_prefix(jule::Str("0b", 2))))) { goto _case_end_4442523536; }
		_case_begin_4442523536:;
		{
			_36817_lit=_36817_lit.slice(2LL);
			_36917_base=2LL;
		}
		goto _match_end_4442522240;
		_case_end_4442523536:;
		if (!((_36817_lit.has_prefix(jule::Str("0o", 2))))) { goto _case_end_4442523648; }
		_case_begin_4442523648:;
		{
			_36817_lit=_36817_lit.slice(2LL);
			_36917_base=8LL;
		}
		goto _match_end_4442522240;
		_case_end_4442523648:;
		if (!(((_36817_lit[0LL] == '0') && (_36817_lit.len() > 1LL)))) { goto _case_end_4442522656; }
		_case_begin_4442522656:;
		{
			_36817_lit=_36817_lit.slice(1LL);
			_36917_base=8LL;
		}
		goto _match_end_4442522240;
		_case_end_4442522656:;
		_case_begin_4442522352:;
		{
			_36917_base=10LL;
		}
		goto _match_end_4442522240;
		_case_end_4442522352:;
		_match_end_4442522240:;
	}
	jule::Ref<_1ab00dbcc_Data> _39217_d = jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::Ref<_1ac6d02c0_TypeKind>(),jule::Ref<_1ac6d02c0_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),false,jule::Ref<_1ac90c3ed_Const>()));
	jule::Any _39817_value = jule::Any(nullptr);
	jule::I64 _39914_sig;
	jule::Int _39919_err;
	std::tie(_39914_sig,_39919_err) = _1cdd97339_parse_int(_36817_lit,_36917_base,64LL);
	if (_39919_err == 0LLU) {
		_39817_value=jule::Any(_39914_sig);
		_39217_d->_field_constant=_1ac90c3ed_Const::_static_method_new_i64(_39914_sig);
	} else {
		jule::U64 _40418_unsig;
		jule::Int _40425_err;
		std::tie(_40418_unsig,_40425_err) = _1cdd97339_parse_uint(_36817_lit,_36917_base,64LL);
		if (_40425_err != 0LLU) {
			(*this)._method_push_err(_36526_l->_field_token,jule::Str("arithmetic value overflow", 25),jule::Slice<jule::Any>({}));
			(*this)._method_push_suggestion(jule::Str("floating-point literals may solve your problem", 46),jule::Slice<jule::Any>({}));
		}
		_39217_d->_field_constant=_1ac90c3ed_Const::_static_method_new_u64(_40418_unsig);
		_39817_value=jule::Any(_40418_unsig);
	}
	_39217_d->_field_kind=jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_1ac6d02c0_build_prim_type(_1ab00dbcc_kind_by_bitsize(_39817_value))));
	_1ab00dbcc_normalize_bitsize(_39217_d);
	_39217_d->_field_model=jule::Any(_39217_d->_field_constant);
	return _39217_d;
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_lit_num(jule::Ref<_1b61ca014_LitExpr> _42326_l) {
	{
		if (!((_1b61ec5ec_is_float(_42326_l->_field_value)))) { goto _case_end_4442552432; }
		_case_begin_4442552432:;
		{
			return (*this)._method_lit_float(_42326_l);
		}
		goto _match_end_4442550800;
		_case_end_4442552432:;
		_case_begin_4442550976:;
		{
			return (*this)._method_lit_int(_42326_l);
		}
		goto _match_end_4442550800;
		_case_end_4442550976:;
		_match_end_4442550800:;
	}
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_eval_lit(jule::Ref<_1b61ca014_LitExpr> _43027_lit) {
	{
		if (!((_43027_lit->_method_is_nil()))) { goto _case_end_4442559232; }
		_case_begin_4442559232:;
		{
			return (*this)._method_lit_nil();
		}
		goto _match_end_4442556608;
		_case_end_4442559232:;
		if (!((_1b61ec5ec_is_str(_43027_lit->_field_value)))) { goto _case_end_4442558240; }
		_case_begin_4442558240:;
		{
			return (*this)._method_lit_str(_43027_lit);
		}
		goto _match_end_4442556608;
		_case_end_4442558240:;
		if (!((_1b61ec5ec_is_bool(_43027_lit->_field_value)))) { goto _case_end_4442558448; }
		_case_begin_4442558448:;
		{
			return (*this)._method_lit_bool(_43027_lit);
		}
		goto _match_end_4442556608;
		_case_end_4442558448:;
		if (!((_1b61ec5ec_is_rune(_43027_lit->_field_value)))) { goto _case_end_4442558896; }
		_case_begin_4442558896:;
		{
			return (*this)._method_lit_rune(_43027_lit);
		}
		goto _match_end_4442556608;
		_case_end_4442558896:;
		if (!((_1b61ec5ec_is_num(_43027_lit->_field_value)))) { goto _case_end_4442559008; }
		_case_begin_4442559008:;
		{
			return (*this)._method_lit_num(_43027_lit);
		}
		goto _match_end_4442556608;
		_case_end_4442559008:;
		_case_begin_4442556784:;
		{
			return jule::new_ref<_1ab00dbcc_Data>();
		}
		goto _match_end_4442556608;
		_case_end_4442556784:;
		_match_end_4442556608:;
	}
}



inline jule::Any _1ab00dbcc_Eval::_method_find_builtins(jule::Str _44132_ident) {
	{
		auto _match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_1ab194c20_ImportInfo>>())) { goto _case_end_4442568096; }
		_case_begin_4442568096:;
		{
			jule::Any _44421_def = _1ab00dbcc_find_builtins_import(_44132_ident,(*this)._field_lookup.operator jule::Ref<_1ab194c20_ImportInfo>());
			if (_44421_def != nullptr) {
				return _44421_def;
			}
		}
		goto _match_end_4442567424;
		_case_end_4442568096:;
		if (!(_match_expr.type_is<jule::Ref<_1ab195050_Sema>>())) { goto _case_end_4442568224; }
		_case_begin_4442568224:;
		{
			jule::Any _45021_def = _1ab00dbcc_find_builtins_sema(_44132_ident,(*this)._field_lookup.operator jule::Ref<_1ab195050_Sema>());
			if (_45021_def != nullptr) {
				return _45021_def;
			}
		}
		goto _match_end_4442567424;
		_case_end_4442568224:;
		if (!(_match_expr.type_is<jule::Ref<_1ab009de8_ScopeChecker>>())) { goto _case_end_4442568352; }
		_case_begin_4442568352:;
		{
			jule::Any _45621_def = _1ab00dbcc_find_builtins_sema(_44132_ident,(*this)._field_lookup.operator jule::Ref<_1ab009de8_ScopeChecker>()->_field_s);
			if (_45621_def != nullptr) {
				return _45621_def;
			}
		}
		goto _match_end_4442567424;
		_case_end_4442568352:;
		_match_end_4442567424:;
	}
	return _1aae49684_find_builtin_def(_44132_ident);
}



inline jule::Any _1ab00dbcc_Eval::_method_get_def(jule::Str _46526_ident,jule::Bool _46538_cpp_linked) {
	if ((!(_46538_cpp_linked))) {
		jule::Ref<_1a909ac6b_Enum> _46721_enm = (*this)._field_lookup.get()._method_find_enum(_46526_ident);
		if (jule::real(_46721_enm)) {
			return jule::Any(_46721_enm);
		}
	}
	jule::Ref<_1b623eab2_Var> _47317_v = (*this)._field_lookup.get()._method_find_var(_46526_ident,_46538_cpp_linked);
	if (jule::real(_47317_v)) {
		return jule::Any(_47317_v);
	}
	jule::Ref<_1b557cd24_Fn> _47817_f = (*this)._field_lookup.get()._method_find_fn(_46526_ident,_46538_cpp_linked);
	if (jule::real(_47817_f)) {
		return jule::Any(_47817_f);
	}
	jule::Ref<_1b5e07a00_Struct> _48317_s = (*this)._field_lookup.get()._method_find_struct(_46526_ident,_46538_cpp_linked);
	if (jule::real(_48317_s)) {
		return jule::Any(_48317_s);
	}
	jule::Ref<_1ac6d02c0_TypeAlias> _48817_ta = (*this)._field_lookup.get()._method_find_type_alias(_46526_ident,_46538_cpp_linked);
	if (jule::real(_48817_ta)) {
		return jule::Any(_48817_ta);
	}
	return (*this)._method_find_builtins(_46526_ident);
}



inline void _1ab00dbcc_Eval::_method_push_reference(jule::Ref<_1b5589c76_ReferenceStack> _49637_references) {
	{
		auto _match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_1ab009de8_ScopeChecker>>())) { goto _case_end_4442617760; }
		_case_begin_4442617760:;
		{
			jule::Ref<_1ab009de8_ScopeChecker> _49921_sc = (*this)._field_lookup.operator jule::Ref<_1ab009de8_ScopeChecker>()->_method_get_root();
			if ((!(_49637_references->_method_exist_1(_49921_sc->_field_owner)))) {
				_49637_references->_method_push(jule::Any(_49921_sc->_field_owner));
			}
		}
		goto _match_end_4442603104;
		_case_end_4442617760:;
		_case_begin_4442603728:;
		{
			if (jule::real((*this)._field_owner) && (!(_49637_references->_method_exist_0((*this)._field_owner)))) {
				_49637_references->_method_push(jule::Any((*this)._field_owner));
			}
		}
		goto _match_end_4442603104;
		_case_end_4442603728:;
		_match_end_4442603104:;
	}
}



inline void _1ab00dbcc_Eval::_method_push_reference_to_fn(jule::Ref<_1b557cd24_FnIns> _51143_f) {
	{
		auto _match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_1ab009de8_ScopeChecker>>())) { goto _case_end_4442628448; }
		_case_begin_4442628448:;
		{
			jule::Ref<_1ab009de8_ScopeChecker> _51421_sc = (*this)._field_lookup.operator jule::Ref<_1ab009de8_ScopeChecker>()->_method_get_root();
			if (_51421_sc->_field_owner->_field_decl->_method_is_init() && (!(_51421_sc->_field_owner->_field_references->_method_exist_1(_51143_f)))) {
				_51421_sc->_field_owner->_field_refers->_method_push(jule::Any(_51143_f));
			}
		}
		goto _match_end_4442622928;
		_case_end_4442628448:;
		_match_end_4442622928:;
	}
	(*this)._method_push_reference(_51143_f->_field_references);
}



inline void _1ab00dbcc_Eval::_method_push_reference_to_var(jule::Ref<_1b623eab2_Var> _52244_v) {
	if ((!(jule::real(_52244_v->_field_references)))) {
		return;
	}
	{
		auto _match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_1ab009de8_ScopeChecker>>())) { goto _case_end_4442640784; }
		_case_begin_4442640784:;
		{
			jule::Ref<_1ab009de8_ScopeChecker> _52921_sc = (*this)._field_lookup.operator jule::Ref<_1ab009de8_ScopeChecker>()->_method_get_root();
			if (_52921_sc->_field_owner->_field_decl->_method_is_init() && (!(_52921_sc->_field_owner->_field_references->_method_exist_0(_52244_v)))) {
				_52921_sc->_field_owner->_field_refers->_method_push(jule::Any(_52244_v));
			}
		}
		goto _match_end_4442640352;
		_case_end_4442640784:;
		_match_end_4442640352:;
	}
	(*this)._method_push_reference(_52244_v->_field_references);
}



inline void _1ab00dbcc_Eval::_method_push_reference_to_struct(jule::Ref<_1b5e07a00_StructIns> _53847_s) {
	{
		auto _match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_1ab009de8_ScopeChecker>>())) { goto _case_end_4442652576; }
		_case_begin_4442652576:;
		{
			jule::Ref<_1ab009de8_ScopeChecker> _54121_sc = (*this)._field_lookup.operator jule::Ref<_1ab009de8_ScopeChecker>()->_method_get_root();
			if (_54121_sc->_field_owner->_field_decl->_method_is_init() && (!(_54121_sc->_field_owner->_field_references->_method_exist_2(_53847_s)))) {
				_54121_sc->_field_owner->_field_refers->_method_push(jule::Any(_53847_s));
			}
		}
		goto _match_end_4442651920;
		_case_end_4442652576:;
		_match_end_4442651920:;
	}
	(*this)._method_push_reference(_53847_s->_field_references);
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method___eval_enum(jule::Ref<_1a909ac6b_Enum> _54930_enm) {
	return jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_54930_enm)),jule::Ref<_1ac6d02c0_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),true,jule::new_ref<_1ac90c3ed_Const>()));
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_eval_enum(jule::Ref<_1a909ac6b_Enum> _56132_enm,_1b61ec5ec_Token _56144_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_56132_enm->_field_public,_56132_enm->_field_token)))) {
		(*this)._method_push_err(_56144_error_token,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_56132_enm->_field_ident)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	return (*this)._method___eval_enum(_56132_enm);
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method___eval_struct(jule::Ref<_1b5e07a00_StructIns> _57132_s) {
	return jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_57132_s)),jule::Ref<_1ac6d02c0_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(_57132_s),true,jule::new_ref<_1ac90c3ed_Const>()));
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_eval_struct(jule::Ref<_1b5e07a00_StructIns> _58434_s,_1b61ec5ec_Token _58449_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_58434_s->_field_decl->_field_public,_58434_s->_field_decl->_field_token)))) {
		(*this)._method_push_err(_58449_error_token,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_58434_s->_field_decl->_field_ident)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	return (*this)._method___eval_struct(_58434_s);
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_eval_fn_ins(jule::Ref<_1b557cd24_FnIns> _59430_f) {
	return jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_59430_f)),jule::Ref<_1ac6d02c0_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(_59430_f),false,jule::new_ref<_1ac90c3ed_Const>()));
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_eval_fn(jule::Ref<_1b557cd24_Fn> _60730_f,_1b61ec5ec_Token _60738_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_60730_f->_field_public,_60730_f->_field_token)))) {
		(*this)._method_push_err(_60738_error_token,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_60730_f->_field_ident)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	jule::Ref<_1b557cd24_FnIns> _61417_ins = _60730_f->_method_instance();
	(*this)._method_push_reference_to_fn(_61417_ins);
	return (*this)._method_eval_fn_ins(_61417_ins);
}



inline void _1ab00dbcc_Eval::_method_push_illegal_cycle_error(jule::Ref<_1b623eab2_Var> _61943_v1,jule::Ref<_1b623eab2_Var> _61953_v2,jule::Str& _61968_message) {
	
	jule::Str _62213_refers_to = _1cdeeb191_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(_61943_v1->_field_ident),jule::Any(_61953_v2->_field_ident)}));
	_61968_message=((_1b5589c76_str_repeat(jule::Str(" ", 1),4LL) + _62213_refers_to) + jule::Str("\n", 1)) + _61968_message;
}



inline jule::Bool _1ab00dbcc_Eval::_method_check_cross_cycle(jule::Ref<_1b623eab2_Var> _62636_v,jule::Str& _62650_message) {
	{
		auto _range_expr = _62636_v->_field_depends;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b623eab2_Var> _1ab00dbcc_d = *_range_begin;
			_iter_begin_4442719760:;
			{
				if ((_1ab00dbcc_d).alloc == ((*this)._field_owner).alloc) {
					(*this)._method_push_illegal_cycle_error(_62636_v,_1ab00dbcc_d,_62650_message);
					return false;
				}
				if ((!((*this)._method_check_cross_cycle(_1ab00dbcc_d,_62650_message)))) {
					(*this)._method_push_illegal_cycle_error(_62636_v,_1ab00dbcc_d,_62650_message);
					return false;
				}
			}
			_iter_next_4442719760:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab00dbcc_d = *_range_begin; goto _iter_begin_4442719760; }
			_iter_end_4442719760:;
		}
	}
	return true;
}



inline jule::Bool _1ab00dbcc_Eval::_method_check_illegal_cycles(jule::Ref<_1b623eab2_Var> _64543_v,_1b61ec5ec_Token _64552_decl_token) {
	jule::Bool _64573_ok = jule::Bool();
	if ((!(jule::real((*this)._field_owner)))) {
		_64573_ok = true;
		return _64573_ok;
	}
	if (((*this)._field_owner).alloc == (_64543_v).alloc) {
		(*this)._method_push_err((*this)._field_owner->_field_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>({jule::Any((*this)._field_owner->_field_ident)}));
		_64573_ok = false;
		return _64573_ok;
	}
	jule::Str _65717_message = jule::Str("", 0);
	if ((!((*this)._method_check_cross_cycle(_64543_v,_65717_message)))) {
		jule::Str _66021_err_msg = _65717_message;
		_65717_message=jule::Str("", 0);
		(*this)._method_push_illegal_cycle_error((*this)._field_owner,_64543_v,_65717_message);
		_66021_err_msg=_66021_err_msg + _65717_message;
		(*this)._method_push_err(_64552_decl_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>({jule::Any(_66021_err_msg)}));
		_64573_ok = false;
		return _64573_ok;
	}
	(*this)._field_owner->_field_depends=jule::append((*this)._field_owner->_field_depends,jule::Slice<jule::Ref<_1b623eab2_Var>>({_64543_v}));
	_64573_ok = true;
	return _64573_ok;
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_eval_var(jule::Ref<_1b623eab2_Var> _67231_v,_1b61ec5ec_Token _67240_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_67231_v->_field_public,_67231_v->_field_token)))) {
		(*this)._method_push_err(_67240_error_token,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_67231_v->_field_ident)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	_67231_v->_field_used=true;
	{
		auto _match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_1ab195050_Sema>>())) { goto _case_end_4442750992; }
		_case_begin_4442750992:;
		{
			jule::Bool _68417_ok = (*this)._method_check_illegal_cycles(_67231_v,_67240_error_token);
			if ((!(_68417_ok))) {
				return jule::new_ref<_1ab00dbcc_Data>();
			}
		}
		goto _match_end_4442748080;
		_case_end_4442750992:;
		if (!(_match_expr.type_is<jule::Ref<_1ab009de8_ScopeChecker>>())) { goto _case_end_4442751104; }
		_case_begin_4442751104:;
		{
			if ((!(_67231_v->_field_reference)) || (*this)._method_is_unsafe()) {
				goto _match_end_4442748080;
			}
			jule::Ref<_1ab009de8_ScopeChecker> _69421_s = (*this)._field_lookup.operator jule::Ref<_1ab009de8_ScopeChecker>();
			_iter_begin_4442754208:;
			if (!((!(jule::real(_69421_s->_field_owner))) && jule::real(_69421_s->_field_parent))) { goto _iter_end_4442754208; }
			{
				_69421_s=_69421_s->_field_parent;
			}
			_iter_next_4442754208:;
			goto _iter_begin_4442754208;
			_iter_end_4442754208:;
			if ((jule::real(_69421_s->_field_owner) && _69421_s->_field_owner->_field_anon) && ((_67231_v->_field_scope).alloc != (_69421_s->_field_owner->_field_scope).alloc)) {
				(*this)._method_push_err(_67240_error_token,jule::Str("anonymous functions cannot access to reference \"@\" definition of parent scope", 77),jule::Slice<jule::Any>({jule::Any(_67231_v->_field_ident)}));
			}
		}
		goto _match_end_4442748080;
		_case_end_4442751104:;
		_match_end_4442748080:;
	}
	(*this)._method_push_reference_to_var(_67231_v);
	if ((!(_67231_v->_field_cpp_linked)) && ((!(jule::real(_67231_v->_field_value))) || (!(jule::real(_67231_v->_field_value->_field_data))))) {
		if (_67231_v->_field_constant) {
			(*this)._field_s->_method_check_type_var(_67231_v,(*this)._field_s);
			if ((!(jule::real(_67231_v->_field_value->_field_data)))) {
				return jule::new_ref<_1ab00dbcc_Data>();
			}
		}
	}
	if ((!(jule::real(_67231_v->_field_kind))) || (!(jule::real(_67231_v->_field_kind->_field_kind)))) {
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	jule::Ref<_1ab00dbcc_Data> _72017_d = jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(_67231_v->_field_kind->_field_kind->_method_clone(),jule::Ref<_1ac6d02c0_TypeKind>(),_67231_v->_field_mutable,_67231_v->_field_reference,(!(_67231_v->_field_constant)),jule::Bool(),jule::Bool(),jule::Any(_67231_v),false,jule::Ref<_1ac90c3ed_Const>()));
	if (((!(_67231_v->_field_cpp_linked)) && _67231_v->_method_is_initialized()) && jule::real(_67231_v->_field_value->_field_data)) {
		_72017_d->_field_is_rune=_67231_v->_field_value->_field_data->_field_is_rune;
	}
	if (_67231_v->_field_constant && jule::real(_67231_v->_field_value->_field_data->_field_constant)) {
		_72017_d->_field_constant=jule::new_ref<_1ac90c3ed_Const>(_67231_v->_field_value->_field_data->_field_constant.get());
		_72017_d->_field_model=jule::Any(_72017_d->_field_constant);
	}
	if (jule::real(_72017_d->_field_kind->_method_fnc())) {
		jule::Ref<_1b557cd24_FnIns> _73921_f = _72017_d->_field_kind->_method_fnc();
		if (jule::real(_73921_f->_field_decl)) {
			_73921_f->_field_decl->_field_ident=_67231_v->_field_ident;
		}
	}
	return _72017_d;
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_eval_type_alias(jule::Ref<_1ac6d02c0_TypeAlias> _75038_ta,_1b61ec5ec_Token _75054_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_75038_ta->_field_public,_75038_ta->_field_token)))) {
		(*this)._method_push_err(_75054_error_token,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_75038_ta->_field_ident)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	_75038_ta->_field_used=true;
	jule::Trait<_1ac6d02c0_Kind> _75917_kind = _75038_ta->_field_kind->_field_kind->_field_kind;
	{
		auto _match_expr{ _75917_kind };
		if (!(_match_expr.type_is<jule::Ref<_1b5e07a00_StructIns>>())) { goto _case_end_4442795952; }
		_case_begin_4442795952:;
		{
			return (*this)._method___eval_struct(_75917_kind.operator jule::Ref<_1b5e07a00_StructIns>());
		}
		goto _match_end_4442795216;
		_case_end_4442795952:;
		if (!(_match_expr.type_is<jule::Ref<_1a909ac6b_Enum>>())) { goto _case_end_4442796064; }
		_case_begin_4442796064:;
		{
			return (*this)._method___eval_enum(_75917_kind.operator jule::Ref<_1a909ac6b_Enum>());
		}
		goto _match_end_4442795216;
		_case_end_4442796064:;
		_case_begin_4442795600:;
		{
			jule::Ref<_1ab00dbcc_Data> _76821_d = jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(_75038_ta->_field_kind->_field_kind->_method_clone(),jule::Ref<_1ac6d02c0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),true,jule::Ref<_1ac90c3ed_Const>()));
			if (_75038_ta->_field_cpp_linked) {
				_76821_d->_field_kind->_field_cpp_ident=_75038_ta->_field_ident;
			}
			_76821_d->_field_model=jule::Any(_76821_d->_field_kind);
			return _76821_d;
		}
		goto _match_end_4442795216;
		_case_end_4442795600:;
		_match_end_4442795216:;
	}
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_eval_def(jule::Any _78331_def,_1b61ec5ec_Token _78341_ident) {
	{
		auto _match_expr{ _78331_def };
		if (!(_match_expr.type_is<jule::Ref<_1b623eab2_Var>>())) { goto _case_end_4442812288; }
		_case_begin_4442812288:;
		{
			return (*this)._method_eval_var(_78331_def.operator jule::Ref<_1b623eab2_Var>(),_78341_ident);
		}
		goto _match_end_4442807856;
		_case_end_4442812288:;
		if (!(_match_expr.type_is<jule::Ref<_1a909ac6b_Enum>>())) { goto _case_end_4442811504; }
		_case_begin_4442811504:;
		{
			return (*this)._method_eval_enum(_78331_def.operator jule::Ref<_1a909ac6b_Enum>(),_78341_ident);
		}
		goto _match_end_4442807856;
		_case_end_4442811504:;
		if (!(_match_expr.type_is<jule::Ref<_1b5e07a00_Struct>>())) { goto _case_end_4442811952; }
		_case_begin_4442811952:;
		{
			return (*this)._method_eval_struct(_78331_def.operator jule::Ref<_1b5e07a00_Struct>()->_method_instance(),_78341_ident);
		}
		goto _match_end_4442807856;
		_case_end_4442811952:;
		if (!(_match_expr.type_is<jule::Ref<_1b557cd24_Fn>>())) { goto _case_end_4442812064; }
		_case_begin_4442812064:;
		{
			return (*this)._method_eval_fn(_78331_def.operator jule::Ref<_1b557cd24_Fn>(),_78341_ident);
		}
		goto _match_end_4442807856;
		_case_end_4442812064:;
		if (!(_match_expr.type_is<jule::Ref<_1b557cd24_FnIns>>())) { goto _case_end_4442811104; }
		_case_begin_4442811104:;
		{
			return (*this)._method_eval_fn_ins(_78331_def.operator jule::Ref<_1b557cd24_FnIns>());
		}
		goto _match_end_4442807856;
		_case_end_4442811104:;
		if (!(_match_expr.type_is<jule::Ref<_1ac6d02c0_TypeAlias>>())) { goto _case_end_4442811216; }
		_case_begin_4442811216:;
		{
			return (*this)._method_eval_type_alias(_78331_def.operator jule::Ref<_1ac6d02c0_TypeAlias>(),_78341_ident);
		}
		goto _match_end_4442807856;
		_case_end_4442811216:;
		_case_begin_4442808256:;
		{
			(*this)._method_push_err(_78341_ident,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_78341_ident._field_kind)}));
			return jule::new_ref<_1ab00dbcc_Data>();
		}
		goto _match_end_4442807856;
		_case_end_4442808256:;
		_match_end_4442807856:;
	}
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_eval_ident(jule::Ref<_1b61ca014_IdentExpr> _80929_ident) {
	jule::Any _81017_def = (*this)._method_get_def(_80929_ident->_field_ident,_80929_ident->_field_cpp_linked);
	return (*this)._method_eval_def(_81017_def,_80929_ident->_field_token);
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_eval_unary_minus(jule::Ref<_1ab00dbcc_Data> _81435_d) {
	jule::Ref<_1ac6d02c0_Prim> _81513_t = _81435_d->_field_kind->_method_prim();
	if ((!(jule::real(_81513_t))) || (!(_1ac92d7e8_is_num(_81513_t->_method_to_str())))) {
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	if (_81435_d->_method_is_const()) {
		{
			if (!((_81435_d->_field_constant->_method_is_f64()))) { goto _case_end_4442851296; }
			_case_begin_4442851296:;
			{
				_81435_d->_field_constant->_method_set_f64(static_cast<jule::F64>((-(_81435_d->_field_constant->_method_read_f64()))));
			}
			goto _match_end_4442851040;
			_case_end_4442851296:;
			if (!((_81435_d->_field_constant->_method_is_i64()))) { goto _case_end_4442851424; }
			_case_begin_4442851424:;
			{
				_81435_d->_field_constant->_method_set_f64(static_cast<jule::F64>((-(_81435_d->_field_constant->_method_as_f64()))));
			}
			goto _match_end_4442851040;
			_case_end_4442851424:;
			if (!((_81435_d->_field_constant->_method_is_u64()))) { goto _case_end_4442851552; }
			_case_begin_4442851552:;
			{
				_81435_d->_field_constant->_method_set_f64(static_cast<jule::F64>((-(_81435_d->_field_constant->_method_as_f64()))));
			}
			goto _match_end_4442851040;
			_case_end_4442851552:;
			_match_end_4442851040:;
		}
		_1ab00dbcc_normalize_type(_81435_d);
	}
	_81435_d->_field_lvalue=false;
	_81435_d->_field_model=jule::Any(jule::new_struct<_1ab33d083_UnaryExprModel>(new( std::nothrow ) _1ab33d083_UnaryExprModel(_81435_d->_field_model,jule::Str("-", 1))));
	return _81435_d;
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_eval_unary_plus(jule::Ref<_1ab00dbcc_Data> _83734_d) {
	jule::Ref<_1ac6d02c0_Prim> _83813_t = _83734_d->_field_kind->_method_prim();
	if ((!(jule::real(_83813_t))) || (!(_1ac92d7e8_is_num(_83813_t->_method_to_str())))) {
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	if (_83734_d->_method_is_const()) {
		{
			if (!((_83734_d->_field_constant->_method_is_f64()))) { goto _case_end_4442868912; }
			_case_begin_4442868912:;
			{
				_83734_d->_field_constant->_method_set_f64(static_cast<jule::F64>((+(_83734_d->_field_constant->_method_read_f64()))));
			}
			goto _match_end_4442868656;
			_case_end_4442868912:;
			if (!((_83734_d->_field_constant->_method_is_i64()))) { goto _case_end_4442869040; }
			_case_begin_4442869040:;
			{
				_83734_d->_field_constant->_method_set_f64(static_cast<jule::F64>((+(_83734_d->_field_constant->_method_as_f64()))));
			}
			goto _match_end_4442868656;
			_case_end_4442869040:;
			if (!((_83734_d->_field_constant->_method_is_u64()))) { goto _case_end_4442869168; }
			_case_begin_4442869168:;
			{
				_83734_d->_field_constant->_method_set_f64(static_cast<jule::F64>((+(_83734_d->_field_constant->_method_as_f64()))));
			}
			goto _match_end_4442868656;
			_case_end_4442869168:;
			_match_end_4442868656:;
		}
		_1ab00dbcc_normalize_type(_83734_d);
	}
	_83734_d->_field_lvalue=false;
	_83734_d->_field_model=jule::Any(jule::new_struct<_1ab33d083_UnaryExprModel>(new( std::nothrow ) _1ab33d083_UnaryExprModel(_83734_d->_field_model,jule::Str("+", 1))));
	return _83734_d;
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_eval_unary_caret(jule::Ref<_1ab00dbcc_Data> _86035_d) {
	jule::Ref<_1ac6d02c0_Prim> _86113_t = _86035_d->_field_kind->_method_prim();
	if ((!(jule::real(_86113_t))) || (!(_1ac92d7e8_is_int(_86113_t->_method_to_str())))) {
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	if (_86035_d->_method_is_const()) {
		{
			if (!((_86035_d->_field_constant->_method_is_i64()))) { goto _case_end_4442886224; }
			_case_begin_4442886224:;
			{
				_86035_d->_field_constant->_method_set_i64(static_cast<jule::I64>((~(_86035_d->_field_constant->_method_read_i64()))));
			}
			goto _match_end_4442885984;
			_case_end_4442886224:;
			if (!((_86035_d->_field_constant->_method_is_u64()))) { goto _case_end_4442886352; }
			_case_begin_4442886352:;
			{
				_86035_d->_field_constant->_method_set_u64(static_cast<jule::U64>((~(_86035_d->_field_constant->_method_read_u64()))));
			}
			goto _match_end_4442885984;
			_case_end_4442886352:;
			_match_end_4442885984:;
		}
	}
	_86035_d->_field_lvalue=false;
	_86035_d->_field_model=jule::Any(jule::new_struct<_1ab33d083_UnaryExprModel>(new( std::nothrow ) _1ab33d083_UnaryExprModel(_86035_d->_field_model,jule::Str("^", 1))));
	return _86035_d;
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_eval_unary_excl(jule::Ref<_1ab00dbcc_Data> _88434_d) {
	jule::Ref<_1ac6d02c0_Prim> _88513_t = _88434_d->_field_kind->_method_prim();
	if ((!(jule::real(_88513_t))) || (!(_88513_t->_method_is_bool()))) {
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	if (_88434_d->_method_is_const()) {
		{
			if (!((_88434_d->_field_constant->_method_is_bool()))) { goto _case_end_4442900176; }
			_case_begin_4442900176:;
			{
				_88434_d->_field_constant->_method_set_bool((!(_88434_d->_field_constant->_method_read_bool())));
			}
			goto _match_end_4442900032;
			_case_end_4442900176:;
			_match_end_4442900032:;
		}
	}
	_88434_d->_field_lvalue=false;
	_88434_d->_field_model=jule::Any(jule::new_struct<_1ab33d083_UnaryExprModel>(new( std::nothrow ) _1ab33d083_UnaryExprModel(_88434_d->_field_model,jule::Str("!", 1))));
	return _88434_d;
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_eval_unary_star(jule::Ref<_1ab00dbcc_Data> _90538_d,_1b61ec5ec_Token _90548_op) {
	if ((!((*this)._method_is_unsafe()))) {
		(*this)._method_push_err(_90548_op,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1ac6d02c0_Ptr> _91017_t = _90538_d->_field_kind->_method_ptr();
	if ((!(jule::real(_91017_t))) || _91017_t->_method_is_unsafe()) {
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	jule::drop(_90538_d->_field_constant);
	_90538_d->_field_lvalue=true;
	_90538_d->_field_kind=_91017_t->_field_elem;
	_90538_d->_field_model=jule::Any(jule::new_struct<_1ab33d083_UnaryExprModel>(new( std::nothrow ) _1ab33d083_UnaryExprModel(_90538_d->_field_model,jule::Str("*", 1))));
	return _90538_d;
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_eval_unary_amper(jule::Ref<_1ab00dbcc_Data> _92435_d) {
	{
		auto _match_expr{ _92435_d->_field_model };
		if (!(_match_expr.type_is<jule::Ref<_1ab33d083_StructLitExprModel>>())) { goto _case_end_4442923504; }
		_case_begin_4442923504:;
		{
			jule::Ref<_1ab33d083_StructLitExprModel> _92721_lit = _92435_d->_field_model.operator jule::Ref<_1ab33d083_StructLitExprModel>();
			_92435_d->_field_kind=jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1ac6d02c0_Ref>(new( std::nothrow ) _1ac6d02c0_Ref(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_92721_lit->_field_strct))))));
			_92435_d->_field_model=jule::Any(jule::new_struct<_1ab33d083_AllocStructLitExprModel>(new( std::nothrow ) _1ab33d083_AllocStructLitExprModel(_92721_lit)));
		}
		goto _match_end_4442918992;
		_case_end_4442923504:;
		_case_begin_4442919664:;
		{
			{
				if (!((jule::real(_92435_d->_field_kind->_method_ref())))) { goto _case_end_4442922528; }
				_case_begin_4442922528:;
				{
					_92435_d->_field_kind=jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1ac6d02c0_Ptr>(new( std::nothrow ) _1ac6d02c0_Ptr(_92435_d->_field_kind->_method_ref()->_field_elem->_method_clone()))));
					_92435_d->_field_model=jule::Any(jule::new_struct<_1ab33d083_GetRefPtrExprModel>(new( std::nothrow ) _1ab33d083_GetRefPtrExprModel(_92435_d->_field_model)));
				}
				goto _match_end_4442920864;
				_case_end_4442922528:;
				if (!((_1ac6d02c0_can_get_ptr(_92435_d)))) { goto _case_end_4442922064; }
				_case_begin_4442922064:;
				{
					_92435_d->_field_kind=jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1ac6d02c0_Ptr>(new( std::nothrow ) _1ac6d02c0_Ptr(_92435_d->_field_kind->_method_clone()))));
					_92435_d->_field_model=jule::Any(jule::new_struct<_1ab33d083_UnaryExprModel>(new( std::nothrow ) _1ab33d083_UnaryExprModel(_92435_d->_field_model,jule::Str("&", 1))));
				}
				goto _match_end_4442920864;
				_case_end_4442922064:;
				_case_begin_4442921056:;
				{
					jule::drop(_92435_d);
				}
				goto _match_end_4442920864;
				_case_end_4442921056:;
				_match_end_4442920864:;
			}
		}
		goto _match_end_4442918992;
		_case_end_4442919664:;
		_match_end_4442918992:;
	}
	if (jule::real(_92435_d)) {
		jule::drop(_92435_d->_field_constant);
		_92435_d->_field_lvalue=true;
		_92435_d->_field_mutable=true;
	}
	return _92435_d;
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_eval_unary_type_decl(jule::Ref<_1ab00dbcc_Data> _97143_d,jule::Ref<_1b61ca014_UnaryExpr> _97157_u) {
	_1ac6d02c0_TypeChecker _97217_tc = _1ac6d02c0_TypeChecker((*this)._field_s,(*this)._field_lookup,jule::Ref<_1ac6d02c0_Referencer>(),_97157_u->_field_op,jule::Slice<jule::Ref<_1b61ca014_GenericDecl>>(),jule::Slice<jule::Ref<_1ac6d02c0_TypeAlias>>(),jule::Bool());
	{
		auto _match_expr{ _97157_u->_field_op._field_kind };
		if (!((jule::Str("*", 1)) == _match_expr)) { goto _case_end_4442947136; }
		_case_begin_4442947136:;
		{
			_97143_d->_field_kind=jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_97217_tc._method_build_ptr_from_type(_97143_d->_field_kind)));
		}
		goto _match_end_4442940832;
		_case_end_4442947136:;
		if (!((jule::Str("&", 1)) == _match_expr)) { goto _case_end_4442947712; }
		_case_begin_4442947712:;
		{
			_97143_d->_field_kind=jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_97217_tc._method_build_ref_from_type(_97143_d->_field_kind)));
		}
		goto _match_end_4442940832;
		_case_end_4442947712:;
		_case_begin_4442943232:;
		{
			(*this)._method_push_err(_97157_u->_field_op,jule::Str("invalid expression for unary @ operator", 39),jule::Slice<jule::Any>({jule::Any(_97157_u->_field_op._field_kind)}));
			return jule::new_ref<_1ab00dbcc_Data>();
		}
		goto _match_end_4442940832;
		_case_end_4442943232:;
		_match_end_4442940832:;
	}
	_97143_d->_field_decl=true;
	return _97143_d;
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_eval_unary(jule::Ref<_1b61ca014_UnaryExpr> _99434_u) {
	jule::Ref<_1ac6d02c0_TypeKind> _99517_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_99517_prefix;
	});
	jule::Ref<_1ab00dbcc_Data> _99917_d = this->self->_method_eval_expr_kind(_99434_u->_field_expr);
	if ((!(jule::real(_99917_d)))) {
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	if (_99917_d->_field_decl) {
		return this->self->_method_eval_unary_type_decl(_99917_d,_99434_u);
	}
	jule::Ref<_1ac6d02c0_TypeKind> _100817_cast_kind = _99917_d->_field_cast_kind;
	{
		auto _match_expr{ _99434_u->_field_op._field_kind };
		if (!((jule::Str("-", 1)) == _match_expr)) { goto _case_end_4442965104; }
		_case_begin_4442965104:;
		{
			_99917_d=this->self->_method_eval_unary_minus(_99917_d);
		}
		goto _match_end_4442959296;
		_case_end_4442965104:;
		if (!((jule::Str("+", 1)) == _match_expr)) { goto _case_end_4442964800; }
		_case_begin_4442964800:;
		{
			_99917_d=this->self->_method_eval_unary_plus(_99917_d);
		}
		goto _match_end_4442959296;
		_case_end_4442964800:;
		if (!((jule::Str("^", 1)) == _match_expr)) { goto _case_end_4442964912; }
		_case_begin_4442964912:;
		{
			_99917_d=this->self->_method_eval_unary_caret(_99917_d);
		}
		goto _match_end_4442959296;
		_case_end_4442964912:;
		if (!((jule::Str("!", 1)) == _match_expr)) { goto _case_end_4442964160; }
		_case_begin_4442964160:;
		{
			_99917_d=this->self->_method_eval_unary_excl(_99917_d);
		}
		goto _match_end_4442959296;
		_case_end_4442964160:;
		if (!((jule::Str("*", 1)) == _match_expr)) { goto _case_end_4442964272; }
		_case_begin_4442964272:;
		{
			_99917_d=this->self->_method_eval_unary_star(_99917_d,_99434_u->_field_op);
		}
		goto _match_end_4442959296;
		_case_end_4442964272:;
		if (!((jule::Str("&", 1)) == _match_expr)) { goto _case_end_4442964384; }
		_case_begin_4442964384:;
		{
			_99917_d=this->self->_method_eval_unary_amper(_99917_d);
		}
		goto _match_end_4442959296;
		_case_end_4442964384:;
		_case_begin_4442963856:;
		{
			jule::drop(_99917_d);
		}
		goto _match_end_4442959296;
		_case_end_4442963856:;
		_match_end_4442959296:;
	}
	if ((!(jule::real(_99917_d)))) {
		this->self->_method_push_err(_99434_u->_field_op,jule::Str("invalid expression for unary @ operator", 39),jule::Slice<jule::Any>({jule::Any(_99434_u->_field_op._field_kind)}));
	} else if (_99917_d->_method_is_const()) {
		_99917_d->_field_model=jule::Any(_99917_d->_field_constant);
	} else if (jule::real(_100817_cast_kind)) {
		_99917_d->_field_cast_kind=_100817_cast_kind;
		_1ab00dbcc_apply_cast_kind(_99917_d);
	}
	return _99917_d;
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_eval_variadic(jule::Ref<_1b61ca014_VariadicExpr> _103137_v) {
	jule::Ref<_1ac6d02c0_TypeKind> _103217_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_103217_prefix;
	});
	jule::Ref<_1ab00dbcc_Data> _103617_d = this->self->_method_eval_expr_kind(_103137_v->_field_expr);
	if ((!(jule::real(_103617_d)))) {
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	if (jule::real(_103617_d->_field_kind->_method_ref())) {
		_103617_d->_field_kind=_103617_d->_field_kind->_method_ref()->_field_elem;
		_103617_d->_field_model=jule::Any(jule::new_struct<_1ab33d083_ExplicitDerefExprModel>(new( std::nothrow ) _1ab33d083_ExplicitDerefExprModel(_103617_d->_field_model)));
	}
	if ((!(_103617_d->_field_kind->_method_variadicable()))) {
		this->self->_method_push_err(_103137_v->_field_token,jule::Str("@ data-type is not variadicable", 31),jule::Slice<jule::Any>({jule::Any(_103617_d->_field_kind->_method_to_str())}));
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	_103617_d->_field_variadiced=true;
	_103617_d->_field_kind=_103617_d->_field_kind->_method_slc()->_field_elem;
	_103617_d->_field_kind->_field_variadic=true;
	return _103617_d;
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_eval_unsafe(jule::Ref<_1b61ca014_UnsafeExpr> _105935_u) {
	jule::Bool _106013_unsafety = this->self->_field_unsafety;
	this->self->_field_unsafety=true;
	jule::Ref<_1ab00dbcc_Data> _106317_d = this->self->_method_eval_expr_kind(_105935_u->_field_expr);
	this->self->_field_unsafety=_106013_unsafety;
	return _106317_d;
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_eval_arr(jule::Ref<_1b61ca014_SliceExpr> _107032_s) {
	jule::Ref<_1ac6d02c0_Arr> _107217_pt = this->self->_field_prefix->_method_arr();
	jule::Ref<_1ac6d02c0_Arr> _107417_arr = jule::new_struct<_1ac6d02c0_Arr>(new( std::nothrow ) _1ac6d02c0_Arr(false,0LL,_107217_pt->_field_elem));
	if (_107217_pt->_field_auto) {
		_107417_arr->_field_n=static_cast<jule::I64>(_107032_s->_field_elems.len());
	} else {
		_107417_arr->_field_n=static_cast<jule::I64>(_107032_s->_field_elems.len());
		if (_107417_arr->_field_n > _107217_pt->_field_n) {
			this->self->_method_push_err(_107032_s->_field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>({}));
		} else if (_107417_arr->_field_n < _107217_pt->_field_n) {
			_107417_arr->_field_n=_107217_pt->_field_n;
		}
	}
	jule::Ref<_1ab33d083_ArrayExprModel> _109117_model = jule::new_struct<_1ab33d083_ArrayExprModel>(new( std::nothrow ) _1ab33d083_ArrayExprModel(_107417_arr,jule::Slice<jule::Any>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_107032_s->_field_elems.len())))));
	jule::Ref<_1ac6d02c0_TypeKind> _109617_prefix = this->self->_field_prefix;
	this->self->_field_prefix=_107417_arr->_field_elem;
	{
		auto _range_expr = _107032_s->_field_elems;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ab00dbcc_i = 0;
			jule::Any _1ab00dbcc_elem = *_range_begin;
			_iter_begin_4443019264:;
			{
				jule::Ref<_1ab00dbcc_Data> _109921_d = this->self->_method_eval_expr_kind(_1ab00dbcc_elem);
				if ((!(jule::real(_109921_d)))) {
					goto _iter_next_4443019264;
				}
				this->self->_field_s->_method_check_assign_type(false,_107417_arr->_field_elem,_109921_d,_107032_s->_field_token,true);
				_109117_model->_field_elems[static_cast<jule::Int>(_1ab00dbcc_i)]=_109921_d->_field_model;
			}
			_iter_next_4443019264:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ab00dbcc_i; _1ab00dbcc_elem = *_range_begin; goto _iter_begin_4443019264; }
			_iter_end_4443019264:;
		}
	}
	this->self->_field_prefix=_109617_prefix;
	return jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_107417_arr)),jule::Ref<_1ac6d02c0_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_109117_model),jule::Bool(),jule::Ref<_1ac90c3ed_Const>()));
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_eval_exp_slc(jule::Ref<_1b61ca014_SliceExpr> _111636_s,jule::Ref<_1ac6d02c0_TypeKind> _111655_elem_type) {
	jule::Ref<_1ac6d02c0_Slc> _111717_slc = jule::new_struct<_1ac6d02c0_Slc>(new( std::nothrow ) _1ac6d02c0_Slc(_111655_elem_type));
	jule::Ref<_1ab33d083_SliceExprModel> _112117_model = jule::new_struct<_1ab33d083_SliceExprModel>(new( std::nothrow ) _1ab33d083_SliceExprModel(_111655_elem_type,jule::Slice<jule::Any>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_111636_s->_field_elems.len())))));
	jule::Ref<_1ac6d02c0_TypeKind> _112617_prefix = this->self->_field_prefix;
	this->self->_field_prefix=_111717_slc->_field_elem;
	{
		auto _range_expr = _111636_s->_field_elems;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ab00dbcc_i = 0;
			jule::Any _1ab00dbcc_elem = *_range_begin;
			_iter_begin_4443040544:;
			{
				jule::Ref<_1ab00dbcc_Data> _112921_d = this->self->_method_eval_expr_kind(_1ab00dbcc_elem);
				if ((!(jule::real(_112921_d)))) {
					goto _iter_next_4443040544;
				}
				this->self->_field_s->_method_check_assign_type(false,_111717_slc->_field_elem,_112921_d,_111636_s->_field_token,true);
				_112117_model->_field_elems[static_cast<jule::Int>(_1ab00dbcc_i)]=_112921_d->_field_model;
			}
			_iter_next_4443040544:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ab00dbcc_i; _1ab00dbcc_elem = *_range_begin; goto _iter_begin_4443040544; }
			_iter_end_4443040544:;
		}
	}
	this->self->_field_prefix=_112617_prefix;
	return jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_111717_slc)),jule::Ref<_1ac6d02c0_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_112117_model),jule::Bool(),jule::Ref<_1ac90c3ed_Const>()));
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_eval_slice_expr(jule::Ref<_1b61ca014_SliceExpr> _114639_s) {
	if (jule::real(this->self->_field_prefix)) {
		{
			if (!((jule::real(this->self->_field_prefix->_method_arr())))) { goto _case_end_4443055440; }
			_case_begin_4443055440:;
			{
				return this->self->_method_eval_arr(_114639_s);
			}
			goto _match_end_4443055200;
			_case_end_4443055440:;
			if (!((jule::real(this->self->_field_prefix->_method_slc())))) { goto _case_end_4443055568; }
			_case_begin_4443055568:;
			{
				jule::Ref<_1ac6d02c0_Slc> _115325_pt = this->self->_field_prefix->_method_slc();
				return this->self->_method_eval_exp_slc(_114639_s,_115325_pt->_field_elem);
			}
			goto _match_end_4443055200;
			_case_end_4443055568:;
			_match_end_4443055200:;
		}
	}
	jule::Ref<_1ac6d02c0_TypeKind> _115817_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	if (_114639_s->_field_elems.len() == 0LL) {
		this->self->_method_push_err(_114639_s->_field_token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	jule::Ref<_1ab00dbcc_Data> _116617_first_elem = this->self->_method_eval_expr_kind(_114639_s->_field_elems[0LL]);
	if ((!(jule::real(_116617_first_elem)))) {
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	jule::Ref<_1ab00dbcc_Data> _117117_d = this->self->_method_eval_exp_slc(_114639_s,_116617_first_elem->_field_kind);
	this->self->_field_prefix=_115817_prefix;
	return _117117_d;
}



inline void _1ab00dbcc_Eval::_method_check_integer_indexing_by_data(jule::Ref<_1ab00dbcc_Data> _117753_d,_1b61ec5ec_Token _117763_token) {
	jule::Str _117813_err_key = _1ab00dbcc_check_data_for_integer_indexing(_117753_d);
	if (_117813_err_key != jule::Str("", 0)) {
		(*this)._method_push_err(_117763_token,_117813_err_key,jule::Slice<jule::Any>({}));
	}
}



inline void _1ab00dbcc_Eval::_method_indexing_ptr(jule::Ref<_1ab00dbcc_Data> _118435_d,jule::Ref<_1ab00dbcc_Data> _118449_index,jule::Ref<_1b61ca014_IndexingExpr> _118463_i) {
	(*this)._method_check_integer_indexing_by_data(_118449_index,_118463_i->_field_token);
	jule::Ref<_1ac6d02c0_Ptr> _118717_ptr = _118435_d->_field_kind->_method_ptr();
	{
		if (!((_118717_ptr->_method_is_unsafe()))) { goto _case_end_4443082768; }
		_case_begin_4443082768:;
		{
			(*this)._method_push_err(_118463_i->_field_token,jule::Str("unsafe pointers not supports indexing", 37),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4443082512;
		_case_end_4443082768:;
		if (!(((!((*this)._method_is_unsafe()))))) { goto _case_end_4443082880; }
		_case_begin_4443082880:;
		{
			(*this)._method_push_err(_118463_i->_field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4443082512;
		_case_end_4443082880:;
		_match_end_4443082512:;
	}
	_118435_d->_field_kind=_118717_ptr->_field_elem->_method_clone();
}



inline void _1ab00dbcc_Eval::_method_indexing_arr(jule::Ref<_1ab00dbcc_Data> _120035_d,jule::Ref<_1ab00dbcc_Data> _120049_index,jule::Ref<_1b61ca014_IndexingExpr> _120063_i) {
	jule::Ref<_1ac6d02c0_Arr> _120117_arr = _120035_d->_field_kind->_method_arr();
	_120035_d->_field_kind=_120117_arr->_field_elem->_method_clone();
	(*this)._method_check_integer_indexing_by_data(_120049_index,_120063_i->_field_token);
	if (_120049_index->_method_is_const() && (_120049_index->_field_constant->_method_as_f64() >= static_cast<jule::F64>(_120117_arr->_field_n))) {
		(*this)._method_push_err(_120063_i->_field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>({}));
	}
}



inline void _1ab00dbcc_Eval::_method_indexing_slc(jule::Ref<_1ab00dbcc_Data> _120935_d,jule::Ref<_1ab00dbcc_Data> _120948_index,jule::Ref<_1b61ca014_IndexingExpr> _120962_i) {
	jule::Ref<_1ac6d02c0_Slc> _121017_slc = _120935_d->_field_kind->_method_slc();
	_120935_d->_field_kind=_121017_slc->_field_elem->_method_clone();
	(*this)._method_check_integer_indexing_by_data(_120948_index,_120962_i->_field_token);
}



inline void _1ab00dbcc_Eval::_method_indexing_map(jule::Ref<_1ab00dbcc_Data> _121535_d,jule::Ref<_1ab00dbcc_Data> _121549_index,jule::Ref<_1b61ca014_IndexingExpr> _121567_i) {
	if ((!(jule::real(_121549_index)))) {
		return;
	}
	jule::Ref<_1ac6d02c0_Map> _122017_m = _121535_d->_field_kind->_method_map();
	_1a8dc912c_AssignTypeChecker _122117_atc = _1a8dc912c_AssignTypeChecker((*this)._field_s,_122017_m->_field_key,_121549_index,_121567_i->_field_token,true);
	_122117_atc._method_check();
	_121535_d->_field_kind=_122017_m->_field_val->_method_clone();
}



inline void _1ab00dbcc_Eval::_method_indexing_str(jule::Ref<_1ab00dbcc_Data> _123335_d,jule::Ref<_1ab00dbcc_Data> _123349_index,jule::Ref<_1b61ca014_IndexingExpr> _123363_i) {
	
	_123335_d->_field_kind->_field_kind=_1ac6d02c0_build_prim_type(jule::Str("u8", 2));
	if ((!(jule::real(_123349_index)))) {
		return;
	}
	(*this)._method_check_integer_indexing_by_data(_123349_index,_123363_i->_field_token);
	if ((!(_123349_index->_method_is_const()))) {
		jule::drop(_123335_d->_field_constant);
		return;
	}
	if (_123335_d->_method_is_const()) {
		_1b61ec5ec_Token _124917_error_token = _123363_i->_field_token;
		jule::I64 _125017_j = _123349_index->_field_constant->_method_as_i64();
		jule::Str _125117_s = _123335_d->_field_constant->_method_read_str();
		if (static_cast<jule::Int>(_125017_j) >= _125117_s.len()) {
			(*this)._method_push_err(_124917_error_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>({}));
		} else {
			_123335_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_125117_s[static_cast<jule::Int>(_125017_j)]));
		}
	}
}



inline void _1ab00dbcc_Eval::_method_to_indexing(jule::Ref<_1ab00dbcc_Data> _126034_d,jule::Ref<_1ab00dbcc_Data> _126048_index,jule::Ref<_1b61ca014_IndexingExpr> _126066_i) {
	{
		if (!((jule::real(_126034_d->_field_kind->_method_ptr())))) { goto _case_end_4443142704; }
		_case_begin_4443142704:;
		{
			(*this)._method_indexing_ptr(_126034_d,_126048_index,_126066_i);
			return;
		}
		goto _match_end_4443142464;
		_case_end_4443142704:;
		if (!((jule::real(_126034_d->_field_kind->_method_arr())))) { goto _case_end_4443142832; }
		_case_begin_4443142832:;
		{
			(*this)._method_indexing_arr(_126034_d,_126048_index,_126066_i);
			return;
		}
		goto _match_end_4443142464;
		_case_end_4443142832:;
		if (!((jule::real(_126034_d->_field_kind->_method_slc())))) { goto _case_end_4443142960; }
		_case_begin_4443142960:;
		{
			(*this)._method_indexing_slc(_126034_d,_126048_index,_126066_i);
			return;
		}
		goto _match_end_4443142464;
		_case_end_4443142960:;
		if (!((jule::real(_126034_d->_field_kind->_method_map())))) { goto _case_end_4443143088; }
		_case_begin_4443143088:;
		{
			(*this)._method_indexing_map(_126034_d,_126048_index,_126066_i);
			return;
		}
		goto _match_end_4443142464;
		_case_end_4443143088:;
		if (!((jule::real(_126034_d->_field_kind->_method_prim())))) { goto _case_end_4443143216; }
		_case_begin_4443143216:;
		{
			jule::Ref<_1ac6d02c0_Prim> _127917_prim = _126034_d->_field_kind->_method_prim();
			{
				if (!((_127917_prim->_method_is_str()))) { goto _case_end_4443154896; }
				_case_begin_4443154896:;
				{
					(*this)._method_indexing_str(_126034_d,_126048_index,_126066_i);
					return;
				}
				goto _match_end_4443154736;
				_case_end_4443154896:;
				_match_end_4443154736:;
			}
		}
		goto _match_end_4443142464;
		_case_end_4443143216:;
		_match_end_4443142464:;
	}
	(*this)._method_push_err(_126066_i->_field_token,jule::Str("@ data type is not support indexing", 35),jule::Slice<jule::Any>({jule::Any(_126034_d->_field_kind->_method_to_str())}));
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_eval_ident_decl_from_indexing(jule::Ref<_1b61ca014_IndexingExpr> _129053_i) {
	{
		auto _match_expr{ _129053_i->_field_expr };
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_IdentExpr>>())) { goto _case_end_4443164208; }
		goto _match_end_4443161056;
		_case_end_4443164208:;
		_case_begin_4443161728:;
		{
			this->self->_method_push_err(_129053_i->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1ab00dbcc_Data>();
		}
		goto _match_end_4443161056;
		_case_end_4443161728:;
		_match_end_4443161056:;
	}
	jule::Ref<_1b61ca014_IdentTypeDecl> _129817_decl = jule::new_struct<_1b61ca014_IdentTypeDecl>(new( std::nothrow ) _1b61ca014_IdentTypeDecl(_1b61ec5ec_Token(),_129053_i->_field_expr.operator jule::Ref<_1b61ca014_IdentExpr>()->_field_ident,jule::Bool(),jule::Slice<jule::Ref<_1b61ca014_TypeDecl>>()));
	{
		auto _match_expr{ _129053_i->_field_index };
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_UnaryExpr>>())) { goto _case_end_4443169456; }
		_case_begin_4443169456:;
		{
			jule::Ref<_1ab00dbcc_Data> _130621_d = this->self->_method_eval_unary(_129053_i->_field_index.operator jule::Ref<_1b61ca014_UnaryExpr>());
			if ((!(_130621_d->_field_decl))) {
				this->self->_method_push_err(_129053_i->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return jule::new_ref<_1ab00dbcc_Data>();
			}
			_129817_decl->_field_generics=jule::append(_129817_decl->_field_generics,jule::Slice<jule::Ref<_1b61ca014_TypeDecl>>({jule::new_struct<_1b61ca014_TypeDecl>(new( std::nothrow ) _1b61ca014_TypeDecl(_1b61ec5ec_Token(),jule::Any(_130621_d->_field_kind)))}));
		}
		goto _match_end_4443162160;
		_case_end_4443169456:;
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_TypeDecl>>())) { goto _case_end_4443170304; }
		_case_begin_4443170304:;
		{
			_129817_decl->_field_generics=jule::append(_129817_decl->_field_generics,jule::Slice<jule::Ref<_1b61ca014_TypeDecl>>({_129053_i->_field_index.operator jule::Ref<_1b61ca014_TypeDecl>()}));
		}
		goto _match_end_4443162160;
		_case_end_4443170304:;
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_IdentExpr>>())) { goto _case_end_4443170416; }
		_case_begin_4443170416:;
		{
			_129817_decl->_field_generics=jule::append(_129817_decl->_field_generics,jule::Slice<jule::Ref<_1b61ca014_TypeDecl>>({jule::new_struct<_1b61ca014_TypeDecl>(new( std::nothrow ) _1b61ca014_TypeDecl(_1b61ec5ec_Token(),jule::Any(jule::new_struct<_1b61ca014_IdentTypeDecl>(new( std::nothrow ) _1b61ca014_IdentTypeDecl(_1b61ec5ec_Token(),_129053_i->_field_index.operator jule::Ref<_1b61ca014_IdentExpr>()->_field_ident,jule::Bool(),jule::Slice<jule::Ref<_1b61ca014_TypeDecl>>())))))}));
		}
		goto _match_end_4443162160;
		_case_end_4443170416:;
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_TupleExpr>>())) { goto _case_end_4443167376; }
		_case_begin_4443167376:;
		{
			{
				auto _range_expr = _129053_i->_field_index.operator jule::Ref<_1b61ca014_TupleExpr>()->_field_expr;
				if (_range_expr.begin() != _range_expr.end()) {
					auto _range_begin = _range_expr.begin();
					const auto _range_end = _range_expr.end();
					jule::Ref<_1b61ca014_Expr> _1ab00dbcc_expr = *_range_begin;
					_iter_begin_4443169696:;
					{
						{
							auto _match_expr{ _1ab00dbcc_expr->_field_kind };
							if (!(_match_expr.type_is<jule::Ref<_1b61ca014_TypeDecl>>())) { goto _case_end_4443186032; }
							_case_begin_4443186032:;
							{
								_129817_decl->_field_generics=jule::append(_129817_decl->_field_generics,jule::Slice<jule::Ref<_1b61ca014_TypeDecl>>({_1ab00dbcc_expr->_field_kind.operator jule::Ref<_1b61ca014_TypeDecl>()}));
							}
							goto _match_end_4443176736;
							_case_end_4443186032:;
							if (!(_match_expr.type_is<jule::Ref<_1b61ca014_IdentExpr>>())) { goto _case_end_4443186144; }
							_case_begin_4443186144:;
							{
								_129817_decl->_field_generics=jule::append(_129817_decl->_field_generics,jule::Slice<jule::Ref<_1b61ca014_TypeDecl>>({jule::new_struct<_1b61ca014_TypeDecl>(new( std::nothrow ) _1b61ca014_TypeDecl(_1b61ec5ec_Token(),jule::Any(jule::new_struct<_1b61ca014_IdentTypeDecl>(new( std::nothrow ) _1b61ca014_IdentTypeDecl(_1b61ec5ec_Token(),_1ab00dbcc_expr->_field_kind.operator jule::Ref<_1b61ca014_IdentExpr>()->_field_ident,jule::Bool(),jule::Slice<jule::Ref<_1b61ca014_TypeDecl>>())))))}));
							}
							goto _match_end_4443176736;
							_case_end_4443186144:;
							_match_end_4443176736:;
						}
					}
					_iter_next_4443169696:;
					++_range_begin;
					if (_range_begin != _range_end) { _1ab00dbcc_expr = *_range_begin; goto _iter_begin_4443169696; }
					_iter_end_4443169696:;
				}
			}
		}
		goto _match_end_4443162160;
		_case_end_4443167376:;
		_case_begin_4443167072:;
		{
			this->self->_method_push_err(_129053_i->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1ab00dbcc_Data>();
		}
		goto _match_end_4443162160;
		_case_end_4443167072:;
		_match_end_4443162160:;
	}
	return this->self->_method_eval_type(jule::new_struct<_1b61ca014_TypeDecl>(new( std::nothrow ) _1b61ca014_TypeDecl(_1b61ec5ec_Token(),jule::Any(_129817_decl))));
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_eval_indexing(jule::Ref<_1b61ca014_IndexingExpr> _134237_i) {
	jule::Ref<_1ac6d02c0_TypeKind> _134317_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_134317_prefix;
	});
	jule::Ref<_1ab00dbcc_Data> _134717_d = this->self->_method_eval_expr_kind(_134237_i->_field_expr);
	if ((!(jule::real(_134717_d)))) {
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	if (_134717_d->_field_decl) {
		return this->self->_method_eval_ident_decl_from_indexing(_134237_i);
	}
	_1ab00dbcc_Data _135717_old_d = _134717_d;
	jule::Ref<_1ab00dbcc_Data> _135917_index = this->self->_method_eval_expr_kind(_134237_i->_field_index);
	if ((!(jule::real(_135917_index)))) {
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	this->self->_method_to_indexing(_134717_d,_135917_index,_134237_i);
	if (_134717_d->_method_is_const()) {
		_134717_d->_field_model=jule::Any(_134717_d->_field_constant);
	} else {
		_134717_d->_field_model=jule::Any(jule::new_struct<_1ab33d083_IndexigExprModel>(new( std::nothrow ) _1ab33d083_IndexigExprModel(jule::new_ref<_1ab00dbcc_Data>(_135717_old_d),_135917_index)));
	}
	return _134717_d;
}



inline std::tuple<jule::Ref<_1ab00dbcc_Data>,jule::Ref<_1ab00dbcc_Data>> _1ab00dbcc_Eval::_method_eval_slicing_exprs(jule::Ref<_1b61ca014_SlicingExpr> _138142_s) {
	jule::Ref<_1ac6d02c0_TypeKind> _138217_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_138217_prefix;
	});
	jule::Ref<_1ab00dbcc_Data> _138617_l = jule::new_ref<_1ab00dbcc_Data>();
	jule::Ref<_1ab00dbcc_Data> _138717_r = jule::new_ref<_1ab00dbcc_Data>();
	if (_138142_s->_field_start != nullptr) {
		_138617_l=this->self->_method_eval_expr_kind(_138142_s->_field_start);
		if (jule::real(_138617_l)) {
			this->self->_method_check_integer_indexing_by_data(_138617_l,_138142_s->_field_token);
		} else {
			return std::make_tuple(jule::new_ref<_1ab00dbcc_Data>(),jule::new_ref<_1ab00dbcc_Data>());
		}
	} else {
		_138617_l=jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_1ac6d02c0_build_prim_type(jule::Str("i64", 3)))),jule::Ref<_1ac6d02c0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),_1ac90c3ed_Const::_static_method_new_i64(0LL)));
		_138617_l->_field_model=jule::Any(_138617_l->_field_constant);
	}
	if (_138142_s->_field_to != nullptr) {
		_138717_r=this->self->_method_eval_expr_kind(_138142_s->_field_to);
		if (jule::real(_138717_r)) {
			this->self->_method_check_integer_indexing_by_data(_138717_r,_138142_s->_field_token);
		} else {
			return std::make_tuple(jule::new_ref<_1ab00dbcc_Data>(),jule::new_ref<_1ab00dbcc_Data>());
		}
	}
	return std::make_tuple(_138617_l,_138717_r);
}



inline void _1ab00dbcc_Eval::_method_slicing_arr(jule::Ref<_1ab00dbcc_Data> _141630_d) {
	jule::Ref<_1ac6d02c0_TypeKind> _141717_elem_type = _141630_d->_field_kind->_method_arr()->_field_elem->_method_clone();
	_141630_d->_field_kind->_field_kind=jule::new_struct<_1ac6d02c0_Slc>(new( std::nothrow ) _1ac6d02c0_Slc(_141717_elem_type));
	_141630_d->_field_lvalue=false;
	_141630_d->_field_mutable=_141630_d->_field_mutable || (!(_141717_elem_type->_method_mutable()));
}



inline void _1ab00dbcc_Eval::_method_slicing_slc(jule::Ref<_1ab00dbcc_Data> _142730_d) {
	_142730_d->_field_lvalue=false;
}



inline void _1ab00dbcc_Eval::_method_slicing_str(jule::Ref<_1ab00dbcc_Data> _143130_d,jule::Ref<_1ab00dbcc_Data> _143140_l,jule::Ref<_1ab00dbcc_Data> _143150_r) {
	_143130_d->_field_lvalue=false;
	_143130_d->_field_mutable=true;
	if ((!(_143130_d->_method_is_const()))) {
		return;
	}
	if ((!(jule::real(_143140_l))) || (!(jule::real(_143150_r)))) {
		jule::drop(_143130_d->_field_constant);
		return;
	}
	if (_143140_l->_method_is_const() && _143150_r->_method_is_const()) {
		jule::I64 _144417_left = _143140_l->_field_constant->_method_as_i64();
		if (_144417_left < 0LL) {
			return;
		}
		jule::Str _144917_s = _143130_d->_field_constant->_method_read_str();
		jule::I64 _145021_right = 0LL;
		if ((!(jule::real(_143150_r)))) {
			_145021_right=static_cast<jule::I64>(_144917_s.len());
		} else {
			_145021_right=static_cast<jule::I64>(_143150_r->_field_constant->_method_as_i64());
		}
		if (_144417_left > _145021_right) {
			return;
		}
		_143130_d->_field_constant->_method_set_str(_144917_s.slice(static_cast<jule::Int>(_144417_left),static_cast<jule::Int>(_145021_right)));
	} else {
		jule::drop(_143130_d->_field_constant);
	}
}



inline void _1ab00dbcc_Eval::_method_check_slicing(jule::Ref<_1ab00dbcc_Data> _146636_d,jule::Ref<_1ab00dbcc_Data> _146646_l,jule::Ref<_1ab00dbcc_Data> _146656_r,jule::Ref<_1b61ca014_SlicingExpr> _146666_s) {
	{
		if (!((jule::real(_146636_d->_field_kind->_method_arr())))) { goto _case_end_4443264944; }
		_case_begin_4443264944:;
		{
			(*this)._method_slicing_arr(_146636_d);
			return;
		}
		goto _match_end_4443264688;
		_case_end_4443264944:;
		if (!((jule::real(_146636_d->_field_kind->_method_slc())))) { goto _case_end_4443265072; }
		_case_begin_4443265072:;
		{
			(*this)._method_slicing_slc(_146636_d);
			return;
		}
		goto _match_end_4443264688;
		_case_end_4443265072:;
		if (!((jule::real(_146636_d->_field_kind->_method_prim())))) { goto _case_end_4443265200; }
		_case_begin_4443265200:;
		{
			jule::Ref<_1ac6d02c0_Prim> _147717_prim = _146636_d->_field_kind->_method_prim();
			{
				if (!((_147717_prim->_method_is_str()))) { goto _case_end_4443272752; }
				_case_begin_4443272752:;
				{
					(*this)._method_slicing_str(_146636_d,_146646_l,_146656_r);
					return;
				}
				goto _match_end_4443272592;
				_case_end_4443272752:;
				_match_end_4443272592:;
			}
		}
		goto _match_end_4443264688;
		_case_end_4443265200:;
		_match_end_4443264688:;
	}
	(*this)._method_push_err(_146666_s->_field_token,jule::Str("@ data type is not support slicing", 34),jule::Slice<jule::Any>({jule::Any(_146636_d->_field_kind->_method_to_str())}));
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_eval_slicing(jule::Ref<_1b61ca014_SlicingExpr> _148836_s) {
	jule::Ref<_1ab00dbcc_Data> _148917_d = this->self->_method_eval_expr_kind(_148836_s->_field_expr);
	if ((!(jule::real(_148917_d)))) {
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	jule::Ref<_1ab00dbcc_Data> _149418_l;
	jule::Ref<_1ab00dbcc_Data> _149425_r;
	std::tie(_149418_l,_149425_r) = this->self->_method_eval_slicing_exprs(_148836_s);
	if ((!(jule::real(_149418_l)))) {
		return _148917_d;
	}
	this->self->_method_check_slicing(_148917_d,_149418_l,_149425_r,_148836_s);
	jule::drop(_148917_d->_field_cast_kind);
	jule::Ref<_1ab33d083_SlicingExprModel> _150217_model = jule::new_struct<_1ab33d083_SlicingExprModel>(new( std::nothrow ) _1ab33d083_SlicingExprModel(_148917_d->_field_model,_149418_l->_field_model,jule::Any()));
	if (jule::real(_149425_r)) {
		_150217_model->_field_right=_149425_r->_field_model;
	}
	_148917_d->_field_model=jule::Any(_150217_model);
	return _148917_d;
}



inline void _1ab00dbcc_Eval::_method_cast_ptr(jule::Ref<_1ac6d02c0_TypeKind> _151527_t,jule::Ref<_1ab00dbcc_Data> _151545_d,_1b61ec5ec_Token _151555_error_token) {
	if ((!((*this)._method_is_unsafe()))) {
		(*this)._method_push_err(_151555_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>({}));
		return;
	}
	jule::Ref<_1ac6d02c0_Prim> _152113_prim = _151545_d->_field_kind->_method_prim();
	if ((!(jule::real(_151545_d->_field_kind->_method_ptr()))) && ((!(jule::real(_152113_prim))) || (!(_1ac92d7e8_is_int(_152113_prim->_method_to_str()))))) {
		(*this)._method_push_err(_151555_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_151545_d->_field_kind->_method_to_str()),jule::Any(_151527_t->_method_to_str())}));
	}
	jule::drop(_151545_d->_field_constant);
}



inline void _1ab00dbcc_Eval::_method_cast_struct(jule::Ref<_1ac6d02c0_TypeKind> _152934_t,jule::Ref<_1ab00dbcc_Data> _152952_d,_1b61ec5ec_Token _152962_error_token) {
	jule::Ref<_1aaee9091_Trait> _153017_tr = _152952_d->_field_kind->_method_trt();
	if ((!(jule::real(_153017_tr)))) {
		(*this)._method_push_err(_152962_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_152952_d->_field_kind->_method_to_str()),jule::Any(_152934_t->_method_to_str())}));
		return;
	}
	jule::Ref<_1b5e07a00_StructIns> _153617_s = jule::new_ref<_1b5e07a00_StructIns>();
	if (jule::real(_152934_t->_method_ref())) {
		_153617_s=_152934_t->_method_ref()->_field_elem->_method_strct();
	} else {
		_153617_s=_152934_t->_method_strct();
	}
	(*this)._method_push_reference_to_struct(_153617_s);
	if ((!(_153617_s->_field_decl->_method_is_implements(_153017_tr)))) {
		(*this)._method_push_err(_152962_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_152952_d->_field_kind->_method_to_str()),jule::Any(_152934_t->_method_to_str())}));
	}
}



inline void _1ab00dbcc_Eval::_method_cast_ref(jule::Ref<_1ac6d02c0_TypeKind> _155031_t,jule::Ref<_1ab00dbcc_Data> _155049_d,_1b61ec5ec_Token _155059_error_token) {
	jule::Ref<_1ac6d02c0_Ref> _155117_ref = _155031_t->_method_ref();
	if (jule::real(_155117_ref->_field_elem->_method_strct())) {
		(*this)._method_cast_struct(_155031_t,_155049_d,_155059_error_token);
		return;
	}
	(*this)._method_push_err(_155059_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_155049_d->_field_kind->_method_to_str()),jule::Any(_155031_t->_method_to_str())}));
}



inline void _1ab00dbcc_Eval::_method_cast_slc(jule::Ref<_1ac6d02c0_TypeKind> _156031_t,jule::Ref<_1ab00dbcc_Data> _156049_d,_1b61ec5ec_Token _156059_error_token) {
	if (jule::real(_156049_d->_field_kind->_method_enm())) {
		if ((!(jule::real(_156049_d->_field_kind->_method_enm()->_field_kind->_field_kind->_method_prim()))) || (!(_156049_d->_field_kind->_method_enm()->_field_kind->_field_kind->_method_prim()->_method_is_str()))) {
			(*this)._method_push_err(_156059_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_156049_d->_field_kind->_method_to_str()),jule::Any(_156031_t->_method_to_str())}));
			return;
		}
	} else if ((!(jule::real(_156049_d->_field_kind->_method_prim()))) || (!(_156049_d->_field_kind->_method_prim()->_method_is_str()))) {
		(*this)._method_push_err(_156059_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_156049_d->_field_kind->_method_to_str()),jule::Any(_156031_t->_method_to_str())}));
		return;
	}
	_156031_t=_156031_t->_method_slc()->_field_elem;
	jule::Ref<_1ac6d02c0_Prim> _157213_prim = _156031_t->_method_prim();
	if ((!(jule::real(_157213_prim))) || ((!(_157213_prim->_method_is_u8())) && (!(_157213_prim->_method_is_i32())))) {
		(*this)._method_push_err(_156059_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_156049_d->_field_kind->_method_to_str()),jule::Any(_156031_t->_method_to_str())}));
	}
}



inline void _1ab00dbcc_Eval::_method_cast_str(jule::Ref<_1ab00dbcc_Data> _157831_d,_1b61ec5ec_Token _157841_error_token) {
	if (jule::real(_157831_d->_field_kind->_method_enm())) {
		jule::Ref<_1a909ac6b_Enum> _158021_e = _157831_d->_field_kind->_method_enm();
		if (jule::real(_158021_e->_field_kind->_field_kind->_method_prim()) && _158021_e->_field_kind->_field_kind->_method_prim()->_method_is_str()) {
			return;
		}
	}
	if (jule::real(_157831_d->_field_kind->_method_prim())) {
		jule::Ref<_1ac6d02c0_Prim> _158717_prim = _157831_d->_field_kind->_method_prim();
		if ((!(_158717_prim->_method_is_u8())) && (!(_158717_prim->_method_is_i32()))) {
			(*this)._method_push_err(_157841_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_157831_d->_field_kind->_method_to_str())}));
		}
		return;
	}
	if ((!(jule::real(_157831_d->_field_kind->_method_slc())))) {
		(*this)._method_push_err(_157841_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_157831_d->_field_kind->_method_to_str())}));
		return;
	}
	jule::Ref<_1ac6d02c0_TypeKind> _159917_t = _157831_d->_field_kind->_method_slc()->_field_elem;
	jule::Ref<_1ac6d02c0_Prim> _160013_prim = _159917_t->_method_prim();
	if ((!(jule::real(_160013_prim))) || ((!(_160013_prim->_method_is_u8())) && (!(_160013_prim->_method_is_i32())))) {
		(*this)._method_push_err(_157841_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_157831_d->_field_kind->_method_to_str())}));
	}
}



inline void _1ab00dbcc_Eval::_method_cast_int(jule::Ref<_1ac6d02c0_TypeKind> _160631_t,jule::Ref<_1ab00dbcc_Data> _160649_d,_1b61ec5ec_Token _160659_error_token) {
	if (_160649_d->_method_is_const()) {
		jule::Ref<_1ac6d02c0_Prim> _160817_prim = _160631_t->_method_prim();
		{
			if (!((_1ac92d7e8_is_sig_int(_160817_prim->_field_kind)))) { goto _case_end_4443385200; }
			_case_begin_4443385200:;
			{
				_160649_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_160649_d->_field_constant->_method_as_i64()));
			}
			goto _match_end_4443385024;
			_case_end_4443385200:;
			if (!((_1ac92d7e8_is_unsig_int(_160817_prim->_field_kind)))) { goto _case_end_4443385328; }
			_case_begin_4443385328:;
			{
				_160649_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_160649_d->_field_constant->_method_as_u64()));
			}
			goto _match_end_4443385024;
			_case_end_4443385328:;
			_match_end_4443385024:;
		}
	}
	if (jule::real(_160649_d->_field_kind->_method_enm())) {
		jule::Ref<_1a909ac6b_Enum> _161917_e = _160649_d->_field_kind->_method_enm();
		if (_1ac92d7e8_is_num(_161917_e->_field_kind->_field_kind->_method_to_str())) {
			return;
		}
	}
	if (jule::real(_160649_d->_field_kind->_method_ptr())) {
		jule::Ref<_1ac6d02c0_Prim> _162617_prim = _160631_t->_method_prim();
		if (_162617_prim->_method_is_uintptr()) {
		} else if ((!((*this)._method_is_unsafe()))) {
			(*this)._method_push_err(_160659_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>({}));
		} else if (((((!(_162617_prim->_method_is_i32())) && (!(_162617_prim->_method_is_i64()))) && (!(_162617_prim->_method_is_u16()))) && (!(_162617_prim->_method_is_u32()))) && (!(_162617_prim->_method_is_u64()))) {
			(*this)._method_push_err(_160659_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_160649_d->_field_kind->_method_to_str()),jule::Any(_160631_t->_method_to_str())}));
		}
		return;
	}
	jule::Ref<_1ac6d02c0_Prim> _163713_prim = _160649_d->_field_kind->_method_prim();
	if (jule::real(_163713_prim) && _1ac92d7e8_is_num(_163713_prim->_method_to_str())) {
		return;
	}
	(*this)._method_push_err(_160659_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_160649_d->_field_kind->_method_to_str()),jule::Any(_160631_t->_method_to_str())}));
}



inline void _1ab00dbcc_Eval::_method_cast_num(jule::Ref<_1ac6d02c0_TypeKind> _164531_t,jule::Ref<_1ab00dbcc_Data> _164549_d,_1b61ec5ec_Token _164559_error_token) {
	if (_164549_d->_method_is_const()) {
		jule::Ref<_1ac6d02c0_Prim> _164717_prim = _164531_t->_method_prim();
		{
			if (!((_1ac92d7e8_is_float(_164717_prim->_field_kind)))) { goto _case_end_4443420912; }
			_case_begin_4443420912:;
			{
				_164549_d->_field_constant->_method_set_f64(static_cast<jule::F64>(_164549_d->_field_constant->_method_as_f64()));
			}
			goto _match_end_4443420720;
			_case_end_4443420912:;
			if (!((_1ac92d7e8_is_sig_int(_164717_prim->_field_kind)))) { goto _case_end_4443421040; }
			_case_begin_4443421040:;
			{
				_164549_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_164549_d->_field_constant->_method_as_i64()));
			}
			goto _match_end_4443420720;
			_case_end_4443421040:;
			if (!((_1ac92d7e8_is_unsig_int(_164717_prim->_field_kind)))) { goto _case_end_4443421168; }
			_case_begin_4443421168:;
			{
				_164549_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_164549_d->_field_constant->_method_as_u64()));
			}
			goto _match_end_4443420720;
			_case_end_4443421168:;
			_match_end_4443420720:;
		}
	}
	if (jule::real(_164549_d->_field_kind->_method_enm())) {
		jule::Ref<_1a909ac6b_Enum> _166117_e = _164549_d->_field_kind->_method_enm();
		if (_1ac92d7e8_is_num(_166117_e->_field_kind->_field_kind->_method_to_str())) {
			return;
		}
	}
	jule::Ref<_1ac6d02c0_Prim> _166713_prim = _164549_d->_field_kind->_method_prim();
	if (jule::real(_166713_prim) && _1ac92d7e8_is_num(_166713_prim->_method_to_str())) {
		return;
	}
	(*this)._method_push_err(_164559_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_164549_d->_field_kind->_method_to_str()),jule::Any(_164531_t->_method_to_str())}));
}



inline void _1ab00dbcc_Eval::_method_cast_prim(jule::Ref<_1ac6d02c0_TypeKind> _167532_t,jule::Ref<_1ab00dbcc_Data> _167550_d,_1b61ec5ec_Token _167560_error_token) {
	jule::Ref<_1ac6d02c0_Prim> _167613_prim = _167532_t->_method_prim();
	{
		if (!((_167613_prim->_method_is_any()))) { goto _case_end_4443443952; }
		goto _match_end_4443442992;
		_case_end_4443443952:;
		if (!((_167613_prim->_method_is_str()))) { goto _case_end_4443443424; }
		_case_begin_4443443424:;
		{
			(*this)._method_cast_str(_167550_d,_167560_error_token);
		}
		goto _match_end_4443442992;
		_case_end_4443443424:;
		if (!((_1ac92d7e8_is_int(_167613_prim->_method_to_str())))) { goto _case_end_4443443536; }
		_case_begin_4443443536:;
		{
			(*this)._method_cast_int(_167532_t,_167550_d,_167560_error_token);
		}
		goto _match_end_4443442992;
		_case_end_4443443536:;
		if (!((_1ac92d7e8_is_num(_167613_prim->_method_to_str())))) { goto _case_end_4443443648; }
		_case_begin_4443443648:;
		{
			(*this)._method_cast_num(_167532_t,_167550_d,_167560_error_token);
		}
		goto _match_end_4443442992;
		_case_end_4443443648:;
		_case_begin_4443443120:;
		{
			(*this)._method_push_err(_167560_error_token,jule::Str("@ data-type not supports casting", 32),jule::Slice<jule::Any>({jule::Any(_167532_t->_method_to_str())}));
		}
		goto _match_end_4443442992;
		_case_end_4443443120:;
		_match_end_4443442992:;
	}
}



inline void _1ab00dbcc_Eval::_method_cast_constant(jule::Ref<_1ac6d02c0_TypeKind>& _169537_t,jule::Ref<_1ab00dbcc_Data>& _169556_d) {
	jule::Ref<_1ac6d02c0_Prim> _169613_prim = _169537_t->_method_prim();
	if ((!(jule::real(_169613_prim))) || (!(_169556_d->_method_is_const()))) {
		return;
	}
	{
		if (!((_1ac92d7e8_is_sig_int(_169613_prim->_field_kind)))) { goto _case_end_4443458208; }
		_case_begin_4443458208:;
		{
			_169556_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_169556_d->_field_constant->_method_as_i64()));
		}
		goto _match_end_4443457888;
		_case_end_4443458208:;
		if (!((_1ac92d7e8_is_unsig_int(_169613_prim->_field_kind)))) { goto _case_end_4443458320; }
		_case_begin_4443458320:;
		{
			_169556_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_169556_d->_field_constant->_method_as_u64()));
		}
		goto _match_end_4443457888;
		_case_end_4443458320:;
		if (!((_1ac92d7e8_is_float(_169613_prim->_field_kind)))) { goto _case_end_4443458432; }
		_case_begin_4443458432:;
		{
			_169556_d->_field_constant->_method_set_f64(static_cast<jule::F64>(_169556_d->_field_constant->_method_as_f64()));
		}
		goto _match_end_4443457888;
		_case_end_4443458432:;
		_match_end_4443457888:;
	}
	_169556_d->_field_model=jule::Any(_169556_d->_field_constant);
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_eval_cast_by_type_n_data(jule::Ref<_1ac6d02c0_TypeKind> _171547_t,jule::Ref<_1ab00dbcc_Data> _171565_d,_1b61ec5ec_Token _171575_error_token) {
	{
		if (!((jule::real(_171565_d->_field_kind->_method_prim()) && _171565_d->_field_kind->_method_prim()->_method_is_any()))) { goto _case_end_4443475232; }
		_case_begin_4443475232:;
		{
			if (jule::real(_171547_t->_method_enm())) {
				(*this)._method_push_err(_171575_error_token,jule::Str("enum cannot casted from any type", 32),jule::Slice<jule::Any>({}));
				(*this)._method_push_suggestion(jule::Str("try cast to type of enum fields instead of enum", 47),jule::Slice<jule::Any>({}));
			}
		}
		goto _match_end_4443471952;
		_case_end_4443475232:;
		if (!((jule::real(_171547_t->_method_ptr())))) { goto _case_end_4443472400; }
		_case_begin_4443472400:;
		{
			(*this)._method_cast_ptr(_171547_t,_171565_d,_171575_error_token);
		}
		goto _match_end_4443471952;
		_case_end_4443472400:;
		if (!((jule::real(_171547_t->_method_ref())))) { goto _case_end_4443472512; }
		_case_begin_4443472512:;
		{
			(*this)._method_cast_ref(_171547_t,_171565_d,_171575_error_token);
		}
		goto _match_end_4443471952;
		_case_end_4443472512:;
		if (!((jule::real(_171547_t->_method_slc())))) { goto _case_end_4443472624; }
		_case_begin_4443472624:;
		{
			(*this)._method_cast_slc(_171547_t,_171565_d,_171575_error_token);
		}
		goto _match_end_4443471952;
		_case_end_4443472624:;
		if (!((jule::real(_171547_t->_method_strct())))) { goto _case_end_4443475696; }
		_case_begin_4443475696:;
		{
			(*this)._method_cast_struct(_171547_t,_171565_d,_171575_error_token);
		}
		goto _match_end_4443471952;
		_case_end_4443475696:;
		if (!((jule::real(_171547_t->_method_prim())))) { goto _case_end_4443475808; }
		_case_begin_4443475808:;
		{
			(*this)._method_cast_prim(_171547_t,_171565_d,_171575_error_token);
		}
		goto _match_end_4443471952;
		_case_end_4443475808:;
		_case_begin_4443472096:;
		{
			(*this)._method_push_err(_171575_error_token,jule::Str("@ data-type not supports casting", 32),jule::Slice<jule::Any>({jule::Any(_171547_t->_method_to_str())}));
			jule::drop(_171565_d);
		}
		goto _match_end_4443471952;
		_case_end_4443472096:;
		_match_end_4443471952:;
	}
	if ((!(jule::real(_171565_d)))) {
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	_171565_d->_field_mutable=_171565_d->_field_mutable || ((!(_171565_d->_field_kind->_method_mutable())) && _171547_t->_method_mutable());
	_171565_d->_field_lvalue=_171547_t->_method_lvalue();
	_171565_d->_field_decl=false;
	(*this)._method_cast_constant(_171547_t,_171565_d);
	if ((!(jule::real(_171565_d->_field_kind->_method_enm()))) || (_171565_d->_field_kind->_method_enm()->_field_kind->_field_kind->_method_to_str() != _171547_t->_method_to_str())) {
		_171565_d->_field_cast_kind=_171547_t;
	} else {
		_171565_d->_field_kind=_171547_t;
	}
	return _171565_d;
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_eval_cast(jule::Ref<_1b61ca014_CastExpr> _176533_c) {
	jule::Ref<_1ac6d02c0_TypeSymbol> _176617_t = _1b5589c76_build_type(_176533_c->_field_kind);
	jule::Bool _176713_ok = this->self->_field_s->_method_check_type(_176617_t,this->self->_field_lookup);
	if ((!(_176713_ok))) {
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	jule::Ref<_1ac6d02c0_TypeKind> _177217_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_177217_prefix;
	});
	jule::Ref<_1ab00dbcc_Data> _177617_d = this->self->_method_eval_expr_kind(_176533_c->_field_expr);
	if ((!(jule::real(_177617_d)))) {
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	_177617_d=this->self->_method_eval_cast_by_type_n_data(_176617_t->_field_kind,_177617_d,_176533_c->_field_kind->_field_token);
	return _177617_d;
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_eval_ns_selection(jule::Ref<_1b61ca014_NsSelectionExpr> _178636_s) {
	jule::Str _178713_path = _1ac6d02c0_build_link_path_by_tokens(_178636_s->_field_ns);
	jule::Ref<_1ab194c20_ImportInfo> _178817_imp = (*this)._field_lookup.get()._method_select_package(jule::Fn<jule::Bool(jule::Ref<_1ab194c20_ImportInfo>)>([=](jule::Ref<_1ab194c20_ImportInfo> _178853_p) mutable -> jule::Bool {
		if ((_178636_s->_field_ns.len() == 1LL) && (_178853_p->_field_alias == _178713_path)) {
			return true;
		}
		return _178853_p->_field_link_path == _178713_path;
	}));
	if ((!(jule::real(_178817_imp))) || (!(_178817_imp->_method_is_lookupable(jule::Str("self", 4))))) {
		(*this)._method_push_err(_178636_s->_field_ident,jule::Str("namespace not exist: @", 22),jule::Slice<jule::Any>({jule::Any(_178713_path)}));
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	jule::Trait<_1aae290e2_Lookup> _180017_lookup = (*this)._field_lookup;
	(*this)._field_lookup=_178817_imp;
	
	jule::Any _180417_def = (*this)._method_get_def(_178636_s->_field_ident._field_kind,false);
	(*this)._field_lookup=_180017_lookup;
	jule::Ref<_1ab00dbcc_Data> _180717_d = (*this)._method_eval_def(_180417_def,_178636_s->_field_ident);
	return _180717_d;
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_eval_struct_lit_explicit(jule::Ref<_1b5e07a00_StructIns> _181248_s,jule::Slice<jule::Any> _181313_exprs,_1b61ec5ec_Token _181336_error_token) {
	jule::Bool _181413_ok = this->self->_field_s->_method_check_generic_quantity(static_cast<jule::I64>(_181248_s->_field_decl->_field_generics.len()),static_cast<jule::I64>(_181248_s->_field_generics.len()),_181336_error_token);
	if ((!(_181413_ok))) {
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	this->self->_method_push_reference_to_struct(_181248_s);
	_1a8dc912c_StructLitChecker _182217_slc = _1a8dc912c_StructLitChecker(this->self,_181336_error_token,_181248_s,jule::Slice<jule::Ref<_1ab33d083_StructArgExprModel>>());
	_182217_slc._method_check(_181313_exprs);
	return jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_181248_s)),jule::Ref<_1ac6d02c0_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1ab33d083_StructLitExprModel>(new( std::nothrow ) _1ab33d083_StructLitExprModel(_181248_s,_182217_slc._field_args))),jule::Bool(),jule::Ref<_1ac90c3ed_Const>()));
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_eval_struct_lit(jule::Ref<_1b61ca014_StructLit> _183939_lit) {
	jule::Ref<_1ac6d02c0_TypeSymbol> _184017_t = _1b5589c76_build_type(_183939_lit->_field_kind);
	jule::Bool _184113_ok = this->self->_field_s->_method_check_type(_184017_t,this->self->_field_lookup);
	if ((!(_184113_ok))) {
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	jule::Ref<_1b5e07a00_StructIns> _184617_s = _184017_t->_field_kind->_method_strct();
	if ((!(jule::real(_184617_s)))) {
		this->self->_method_push_err(_183939_lit->_field_kind->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	return this->self->_method_eval_struct_lit_explicit(_184617_s,_183939_lit->_field_exprs,_183939_lit->_field_kind->_field_token);
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_eval_type(jule::Ref<_1b61ca014_TypeDecl> _185532_t) {
	jule::Ref<_1ac6d02c0_TypeSymbol> _185617_tk = _1b5589c76_build_type(_185532_t);
	jule::Bool _185713_ok = (*this)._field_s->_method_check_type(_185617_tk,(*this)._field_lookup);
	if ((!(_185713_ok))) {
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	return jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(_185617_tk->_field_kind,jule::Ref<_1ac6d02c0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_185617_tk->_field_kind),true,jule::Ref<_1ac90c3ed_Const>()));
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_call_type_fn(jule::Ref<_1b61ca014_FnCallExpr> _186936_fc,jule::Ref<_1ab00dbcc_Data> _186957_d) {
	if (_186936_fc->_field_generics.len() > 0LL) {
		this->self->_method_push_err(_186936_fc->_field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_186957_d->_field_kind->_method_to_str())}));
	} else if (_186936_fc->_field_args.len() < 1LL) {
		this->self->_method_push_err(_186936_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("v", 1))}));
	} else if (_186936_fc->_field_args.len() > 1LL) {
		this->self->_method_push_err(_186936_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	if (_186936_fc->_field_args.len() > 0LL) {
		jule::Ref<_1ab00dbcc_Data> _187921_arg = this->self->_method_eval_expr_kind(_186936_fc->_field_args[0LL]->_field_kind);
		if (jule::real(_187921_arg)) {
			_186957_d=this->self->_method_eval_cast_by_type_n_data(_186957_d->_field_kind,_187921_arg,_186936_fc->_field_args[0LL]->_field_token);
		}
	}
	_186957_d->_field_decl=false;
	return _186957_d;
}



inline std::tuple<jule::Bool,jule::Bool> _1ab00dbcc_Eval::_method_check_fn_call_generics(jule::Ref<_1b557cd24_FnIns> _189045_f,jule::Ref<_1b61ca014_FnCallExpr> _189113_fc) {
	jule::Bool _189132_ok = jule::Bool();
	jule::Bool _189142_dynamic_annotation = jule::Bool();
	{
		if (!((((_189045_f->_field_decl->_field_generics.len() > 0LL) && (_189113_fc->_field_generics.len() == 0LL)) && (_189045_f->_field_params.len() > 0LL)))) { goto _case_end_4443604816; }
		_case_begin_4443604816:;
		{
			_189142_dynamic_annotation=true;
			_189045_f->_field_generics=jule::Slice<jule::Ref<_1ac6d02c0_TypeKind>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_189045_f->_field_decl->_field_generics.len())));
			_189132_ok = true;
			_189142_dynamic_annotation = true;
			return std::make_tuple(_189132_ok,_189142_dynamic_annotation);
		}
		goto _match_end_4443592544;
		_case_end_4443604816:;
		if (!(((!((*this)._field_s->_method_check_generic_quantity(static_cast<jule::I64>(_189045_f->_field_decl->_field_generics.len()),static_cast<jule::I64>(_189113_fc->_field_generics.len()),_189113_fc->_field_token)))))) { goto _case_end_4443597728; }
		_case_begin_4443597728:;
		{
			_189132_ok = false;
			_189142_dynamic_annotation = false;
			return std::make_tuple(_189132_ok,_189142_dynamic_annotation);
		}
		goto _match_end_4443592544;
		_case_end_4443597728:;
		_case_begin_4443592736:;
		{
			_189045_f->_field_generics=jule::Slice<jule::Ref<_1ac6d02c0_TypeKind>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_189045_f->_field_decl->_field_generics.len())));
			{
				auto _range_expr = _189113_fc->_field_generics;
				if (_range_expr.begin() != _range_expr.end()) {
					auto _range_begin = _range_expr.begin();
					const auto _range_end = _range_expr.end();
					jule::Int _1ab00dbcc_i = 0;
					jule::Ref<_1b61ca014_TypeDecl> _1ab00dbcc_g = *_range_begin;
					_iter_begin_4443596512:;
					{
						jule::Ref<_1ac6d02c0_TypeSymbol> _190625_k = _1b5589c76_build_type(_1ab00dbcc_g);
						_189132_ok=(*this)._field_s->_method_check_type(_190625_k,(*this)._field_lookup);
						if ((!(_189132_ok))) {
							_189132_ok = false;
							_189142_dynamic_annotation = false;
							return std::make_tuple(_189132_ok,_189142_dynamic_annotation);
						}
						_189045_f->_field_generics[static_cast<jule::Int>(_1ab00dbcc_i)]=_190625_k->_field_kind;
					}
					_iter_next_4443596512:;
					++_range_begin;
					if (_range_begin != _range_end) { ++_1ab00dbcc_i; _1ab00dbcc_g = *_range_begin; goto _iter_begin_4443596512; }
					_iter_end_4443596512:;
				}
			}
			_189132_ok = true;
			_189142_dynamic_annotation = false;
			return std::make_tuple(_189132_ok,_189142_dynamic_annotation);
		}
		goto _match_end_4443592544;
		_case_end_4443592736:;
		_match_end_4443592544:;
	}
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_call_builtin_fn(jule::Ref<_1b61ca014_FnCallExpr> _191839_fc,jule::Ref<_1ab00dbcc_Data> _191860_d) {
	jule::Ref<_1b557cd24_FnIns> _191917_f = _191860_d->_field_kind->_method_fnc();
	_191860_d=_191917_f->_field_caller(this->self,_191839_fc,_191860_d);
	if ((!(jule::real(_191860_d)))) {
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	_191860_d->_field_mutable=true;
	return _191860_d;
}



inline void _1ab00dbcc_Eval::_method_check_fn_of_concurrent_call(jule::Ref<_1b557cd24_FnIns>& _193047_f,_1b61ec5ec_Token _193058_error_token) {
	if ((*this)._method_is_unsafe()) {
		return;
	}
	{
		auto _range_expr = _193047_f->_field_params;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b557cd24_ParamIns> _1ab00dbcc_p = *_range_begin;
			_iter_begin_4443626960:;
			{
				if (_1ab00dbcc_p->_field_decl->_field_reference) {
					(*this)._method_push_err(_193058_error_token,jule::Str("concurrent calls does not support functions which is has reference parameter(s)", 79),jule::Slice<jule::Any>({}));
					return;
				}
			}
			_iter_next_4443626960:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab00dbcc_p = *_range_begin; goto _iter_begin_4443626960; }
			_iter_end_4443626960:;
		}
	}
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_call_fn(jule::Ref<_1b61ca014_FnCallExpr> _194331_fc,jule::Ref<_1ab00dbcc_Data> _194352_d) {
	jule::Ref<_1b557cd24_FnIns> _194417_f = _194352_d->_field_kind->_method_fnc();
	if (_194417_f->_method_is_builtin()) {
		return this->self->_method_call_builtin_fn(_194331_fc,_194352_d);
	}
	if (_194331_fc->_field_concurrent) {
		this->self->_method_check_fn_of_concurrent_call(_194417_f,_194331_fc->_field_token);
	}
	if ((((!(_194352_d->_field_mutable)) && _194417_f->_field_decl->_method_is_method()) && (!(_194417_f->_field_decl->_field_statically))) && _194417_f->_field_decl->_field_params[0LL]->_field_mutable) {
		this->self->_method_push_err(_194331_fc->_field_token,jule::Str("mutable operation cannot used with immutable define", 51),jule::Slice<jule::Any>({}));
	} else if ((!(this->self->_method_is_unsafe())) && _194417_f->_field_decl->_field_unsafety) {
		this->self->_method_push_err(_194331_fc->_field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>({}));
	}
	jule::Bool _195918_ok;
	jule::Bool _195922_dynamic_annotation;
	std::tie(_195918_ok,_195922_dynamic_annotation) = this->self->_method_check_fn_call_generics(_194417_f,_194331_fc);
	if ((!(_195918_ok))) {
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	jule::Ref<_1ab195050_Sema> _196417_old = this->self->_field_s;
	if (jule::real(_194417_f->_field_decl->_field_owner)) {
		this->self->_field_s=_194417_f->_field_decl->_field_owner->_field_sema;
	}
	__JULE_DEFER({
		if ((_196417_old).alloc != (this->self->_field_s).alloc) {
			_196417_old->_field_errors=jule::append(_196417_old->_field_errors,this->self->_field_s->_field_errors);
			this->self->_field_s->_field_errors=nullptr;
		}
		this->self->_field_s=_196417_old;
	});
	if ((!(_195922_dynamic_annotation))) {
		if ((!(_194417_f->_field_reloaded))) {
			_195918_ok=this->self->_field_s->_method_reload_fn_ins_types(_194417_f);
			if ((!(_195918_ok))) {
				return jule::new_ref<_1ab00dbcc_Data>();
			}
			_194417_f->_field_reloaded=true;
		}
	} else {
		this->self->_field_s->_method_build_fn_non_generic_type_kinds(_194417_f);
	}
	_1a8dc912c_FnCallArgChecker _198917_fcac = _1a8dc912c_FnCallArgChecker(this->self,_194331_fc->_field_args,_194331_fc->_field_token,_194417_f,_195922_dynamic_annotation,jule::Slice<jule::Any>());
	if (jule::real(_194417_f->_field_decl->_field_owner)) {
		std::tie(_196417_old,this->self->_field_s) = std::make_tuple(this->self->_field_s,_196417_old);
		_195918_ok=_198917_fcac._method_check();
		std::tie(_196417_old,this->self->_field_s) = std::make_tuple(this->self->_field_s,_196417_old);
	} else {
		_195918_ok=_198917_fcac._method_check();
	}
	if ((!(_195918_ok)) && _195922_dynamic_annotation) {
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	jule::Bool _200814_is_unique_ins;
	jule::Int _200829_pos;
	std::tie(_200814_is_unique_ins,_200829_pos) = _194417_f->_field_decl->_method_append_instance(_194417_f);
	if ((!(_200814_is_unique_ins))) {
		_194417_f=_194417_f->_field_decl->_field_instances[static_cast<jule::Int>(_200829_pos)];
	}
	jule::Any _201317_call_model = _194352_d->_field_model;
	if (_194417_f->_field_decl->_method_is_void()) {
		_194352_d=_1ab00dbcc_build_void_data();
	} else {
		if (_195922_dynamic_annotation) {
			_195918_ok=this->self->_field_s->_method_reload_fn_ins_types(_194417_f);
			if ((!(_195918_ok))) {
				return jule::new_ref<_1ab00dbcc_Data>();
			}
			_194417_f->_field_reloaded=true;
		}
		_194352_d->_field_kind=_194417_f->_field_result;
		_194352_d->_field_lvalue=_194417_f->_field_result->_method_lvalue();
	}
	_194352_d->_field_mutable=true;
	_194352_d->_field_model=jule::Any(jule::new_struct<_1ab33d083_FnCallExprModel>(new( std::nothrow ) _1ab33d083_FnCallExprModel(_194417_f,_194331_fc->_field_concurrent,_201317_call_model,_198917_fcac._field_arg_models)));
	if ((_194417_f->_field_generics.len() > 0LL) && _200814_is_unique_ins) {
		this->self->_field_s->_method_check_fn_ins(_194417_f);
	}
	return _194352_d;
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_eval_fn_call(jule::Ref<_1b61ca014_FnCallExpr> _204636_fc) {
	jule::Ref<_1ac6d02c0_TypeKind> _204717_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_204717_prefix;
	});
	jule::Ref<_1ab00dbcc_Data> _205117_d = this->self->_method_eval_expr_kind(_204636_fc->_field_expr->_field_kind);
	if ((!(jule::real(_205117_d)))) {
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	if (_205117_d->_field_decl) {
		return this->self->_method_call_type_fn(_204636_fc,_205117_d);
	}
	if ((!(jule::real(_205117_d->_field_kind->_method_fnc())))) {
		this->self->_method_push_err(_204636_fc->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	return this->self->_method_call_fn(_204636_fc,_205117_d);
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_eval_enum_static(jule::Ref<_1a909ac6b_Enum> _206839_enm,_1b61ec5ec_Token _206851_ident) {
	jule::Ref<_1ab00dbcc_Data> _206917_d = jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_206839_enm)),jule::Ref<_1ac6d02c0_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),false,jule::Ref<_1ac90c3ed_Const>()));
	jule::Ref<_1a909ac6b_EnumItem> _207617_item = _206839_enm->_method_find_item(_206851_ident._field_kind);
	if ((!(jule::real(_207617_item)))) {
		(*this)._method_push_err(_206851_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_206851_ident._field_kind)}));
	} else {
		_206917_d->_field_constant=jule::new_ref<_1ac90c3ed_Const>(_207617_item->_field_value->_field_data->_field_constant.get());
		_206917_d->_field_model=jule::Any(_206917_d->_field_constant);
	}
	return _206917_d;
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_eval_struct_static(jule::Ref<_1b5e07a00_StructIns> _208741_s,_1b61ec5ec_Token _208756_ident) {
	
	jule::Ref<_1b557cd24_Fn> _208917_method = _208741_s->_method_find_method(_208756_ident._field_kind,true);
	if ((!(jule::real(_208917_method)))) {
		(*this)._method_push_err(_208756_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_208756_ident._field_kind)}));
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	jule::Ref<_1ab00dbcc_Data> _209517_d = jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::Ref<_1ac6d02c0_TypeKind>(),jule::Ref<_1ac6d02c0_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),false,jule::Ref<_1ac90c3ed_Const>()));
	jule::Ref<_1b557cd24_FnIns> _210217_ins = _208917_method->_method_instance();
	_210217_ins->_field_owner=_208741_s;
	(*this)._method_push_reference_to_fn(_210217_ins);
	_209517_d->_field_model=jule::Any(jule::new_struct<_1ab33d083_StructStaticIdentExprModel>(new( std::nothrow ) _1ab33d083_StructStaticIdentExprModel(_208741_s,_209517_d->_field_model,_210217_ins)));
	_209517_d->_field_kind=jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_210217_ins));
	return _209517_d;
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_eval_trait_sub_ident(jule::Ref<_1ab00dbcc_Data> _211543_d,jule::Ref<_1aaee9091_Trait> _211557_trt,_1b61ec5ec_Token _211570_ident) {
	jule::Ref<_1b557cd24_Fn> _211617_f = _211557_trt->_method_find_method(_211570_ident._field_kind);
	if ((!(jule::real(_211617_f)))) {
		(*this)._method_push_err(_211570_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_211570_ident._field_kind)}));
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	jule::Any _212217_model = jule::Any(nullptr);
	if ((_211557_trt).alloc == (_1aae49684_BUILTIN_TRAIT_ERROR).alloc) {
		_212217_model=jule::Any(jule::new_struct<_1ab33d083_BuiltinErrorTraitSubIdentExprModel>(new( std::nothrow ) _1ab33d083_BuiltinErrorTraitSubIdentExprModel(_211543_d->_field_model,_211570_ident._field_kind)));
	} else {
		_212217_model=jule::Any(jule::new_struct<_1ab33d083_TraitSubIdentExprModel>(new( std::nothrow ) _1ab33d083_TraitSubIdentExprModel(_211543_d->_field_model,_211570_ident._field_kind)));
	}
	return jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_211617_f->_method_instance())),jule::Ref<_1ac6d02c0_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),_212217_model,false,jule::Ref<_1ac90c3ed_Const>()));
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_eval_struct_sub_ident(jule::Ref<_1ab00dbcc_Data> _214444_d,jule::Ref<_1b5e07a00_StructIns> _214458_s,jule::Ref<_1b61ca014_SubIdentExpr> _214473_si,jule::Bool _214492_ref) {
	jule::Ref<_1b5e07a00_FieldIns> _214517_f = _214458_s->_method_find_field(_214473_si->_field_ident._field_kind);
	if (jule::real(_214517_f)) {
		if ((!((*this)._field_s->_method_is_accessible_define(_214517_f->_field_decl->_field_public,_214517_f->_field_decl->_field_token)))) {
			(*this)._method_push_err(_214473_si->_field_ident,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_214517_f->_field_decl->_field_ident)}));
			(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>({}));
		}
		jule::Ref<_1ab33d083_StructSubIdentExprModel> _215221_model = jule::new_struct<_1ab33d083_StructSubIdentExprModel>(new( std::nothrow ) _1ab33d083_StructSubIdentExprModel(_214444_d->_field_model,_214444_d->_field_kind,jule::Ref<_1b557cd24_FnIns>(),_214517_f));
		_214444_d->_field_model=jule::Any(_215221_model);
		_214444_d->_field_kind=_214517_f->_field_kind->_method_clone();
		if (_214517_f->_field_decl->_field_mutable && (!(_214444_d->_field_mutable))) {
			{
				auto _match_expr{ (*this)._field_lookup };
				if (!(_match_expr.type_is<jule::Ref<_1ab009de8_ScopeChecker>>())) { goto _case_end_4443758784; }
				_case_begin_4443758784:;
				{
					jule::Ref<_1ab009de8_ScopeChecker> _216425_scope = (*this)._field_lookup.operator jule::Ref<_1ab009de8_ScopeChecker>()->_method_get_root();
					_214444_d->_field_mutable=jule::real(_216425_scope->_field_owner) && ((_216425_scope->_field_owner->_field_owner).alloc == (_214458_s).alloc);
					if (_214444_d->_field_mutable) {
						jule::Ref<_1b623eab2_Var> _216733_field = _215221_model->_field_expr.operator jule::Ref<_1b623eab2_Var>();
						jule::Ref<_1b623eab2_Var> _216833_v = jule::new_struct<_1b623eab2_Var>(new( std::nothrow ) _1b623eab2_Var(_216733_field->_field_scope,_216733_field->_field_token,_216733_field->_field_ident,_216733_field->_field_cpp_linked,_216733_field->_field_constant,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Str(),_216733_field->_field_kind,_216733_field->_field_value,jule::Ref<_1b5589c76_ReferenceStack>(),jule::Slice<jule::Ref<_1b61ca014_Directive>>(),jule::Slice<jule::Ref<_1b623eab2_Var>>()));
						_216833_v->_field_mutable=true;
						_215221_model->_field_expr=jule::Any(_216833_v);
					}
				}
				goto _match_end_4443756896;
				_case_end_4443758784:;
				_match_end_4443756896:;
			}
		}
		return _214444_d;
	}
	
	jule::Ref<_1b557cd24_Fn> _218717_m = _214458_s->_method_find_method(_214473_si->_field_ident._field_kind,false);
	if ((!(jule::real(_218717_m)))) {
		(*this)._method_push_err(_214473_si->_field_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_214473_si->_field_ident._field_kind)}));
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	if (_218717_m->_field_params[0LL]->_method_is_ref() && (!(_214492_ref))) {
		(*this)._method_push_err(_214473_si->_field_ident,jule::Str("reference method cannot use with non-reference instance", 55),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1b557cd24_FnIns> _219817_ins = _218717_m->_method_instance();
	_219817_ins->_field_owner=_214458_s;
	(*this)._method_push_reference_to_fn(_219817_ins);
	_214444_d->_field_model=jule::Any(jule::new_struct<_1ab33d083_StructSubIdentExprModel>(new( std::nothrow ) _1ab33d083_StructSubIdentExprModel(_214444_d->_field_model,_214444_d->_field_kind,_219817_ins,jule::Ref<_1b5e07a00_FieldIns>())));
	_214444_d->_field_kind=jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_219817_ins));
	return _214444_d;
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_eval_slice_sub_ident(jule::Ref<_1ab00dbcc_Data> _221043_d,_1b61ec5ec_Token _221053_ident) {
	{
		auto _match_expr{ _221053_ident._field_kind };
		if (!((jule::Str("len", 3)) == _match_expr)) { goto _case_end_4443791504; }
		_case_begin_4443791504:;
		{
			return jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_1ac6d02c0_build_prim_type(jule::Str("i64", 3)))),jule::Ref<_1ac6d02c0_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1ab33d083_CommonSubIdentExprModel>(new( std::nothrow ) _1ab33d083_CommonSubIdentExprModel(_221043_d->_field_kind,_221043_d->_field_model,jule::Str("len()", 5)))),jule::Bool(),jule::Ref<_1ac90c3ed_Const>()));
		}
		goto _match_end_4443787408;
		_case_end_4443791504:;
		if (!((jule::Str("cap", 3)) == _match_expr)) { goto _case_end_4443792080; }
		_case_begin_4443792080:;
		{
			return jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_1ac6d02c0_build_prim_type(jule::Str("i64", 3)))),jule::Ref<_1ac6d02c0_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1ab33d083_CommonSubIdentExprModel>(new( std::nothrow ) _1ab33d083_CommonSubIdentExprModel(_221043_d->_field_kind,_221043_d->_field_model,jule::Str("cap()", 5)))),jule::Bool(),jule::Ref<_1ac90c3ed_Const>()));
		}
		goto _match_end_4443787408;
		_case_end_4443792080:;
		_case_begin_4443788016:;
		{
			(*this)._method_push_err(_221053_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_221053_ident._field_kind)}));
			return jule::new_ref<_1ab00dbcc_Data>();
		}
		goto _match_end_4443787408;
		_case_end_4443788016:;
		_match_end_4443787408:;
	}
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_eval_array_sub_ident(jule::Ref<_1ab00dbcc_Data> _224043_d,_1b61ec5ec_Token _224053_ident) {
	{
		auto _match_expr{ _224053_ident._field_kind };
		if (!((jule::Str("len", 3)) == _match_expr)) { goto _case_end_4443804976; }
		_case_begin_4443804976:;
		{
			jule::Ref<_1ac90c3ed_Const> _224321_c = _1ac90c3ed_Const::_static_method_new_i64(static_cast<jule::I64>(_224043_d->_field_kind->_method_arr()->_field_n));
			return jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_1ac6d02c0_build_prim_type(jule::Str("i64", 3)))),jule::Ref<_1ac6d02c0_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_224321_c),jule::Bool(),_224321_c));
		}
		goto _match_end_4443800880;
		_case_end_4443804976:;
		_case_begin_4443801488:;
		{
			(*this)._method_push_err(_224053_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_224053_ident._field_kind)}));
			return jule::new_ref<_1ab00dbcc_Data>();
		}
		goto _match_end_4443800880;
		_case_end_4443801488:;
		_match_end_4443800880:;
	}
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_eval_map_sub_ident(jule::Ref<_1ab00dbcc_Data> _225741_d,_1b61ec5ec_Token _225751_ident) {
	{
		auto _match_expr{ _225751_ident._field_kind };
		if (!((jule::Str("len", 3)) == _match_expr)) { goto _case_end_4443816256; }
		_case_begin_4443816256:;
		{
			return jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_1ac6d02c0_build_prim_type(jule::Str("i64", 3)))),jule::Ref<_1ac6d02c0_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1ab33d083_CommonSubIdentExprModel>(new( std::nothrow ) _1ab33d083_CommonSubIdentExprModel(_225741_d->_field_kind,_225741_d->_field_model,jule::Str("len()", 5)))),jule::Bool(),jule::Ref<_1ac90c3ed_Const>()));
		}
		goto _match_end_4443811584;
		_case_end_4443816256:;
		if (!((jule::Str("clear", 5)) == _match_expr)) { goto _case_end_4443815472; }
		_case_begin_4443815472:;
		{
			return jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1b557cd24_FnIns>(new( std::nothrow ) _1b557cd24_FnIns(jule::Ref<_1b5e07a00_StructIns>(),jule::Ref<_1b557cd24_Fn>(),jule::Slice<jule::Ref<_1ac6d02c0_TypeKind>>(),jule::Slice<jule::Ref<_1b557cd24_ParamIns>>(),jule::Ref<_1ac6d02c0_TypeKind>(),jule::Ref<_1ab009de8_Scope>(),jule::Ref<_1b5589c76_ReferenceStack>(),jule::Ref<_1b5589c76_ReferenceStack>(),jule::Fn<jule::Ref<_1ab00dbcc_Data>(jule::Ref<_1ab00dbcc_Eval>&,jule::Ref<_1b61ca014_FnCallExpr>&,jule::Ref<_1ab00dbcc_Data>&)>(_1aae49684_builtin_caller_common_mut),jule::Bool(),jule::Bool())))),jule::Ref<_1ac6d02c0_TypeKind>(),_225741_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1ab33d083_CommonSubIdentExprModel>(new( std::nothrow ) _1ab33d083_CommonSubIdentExprModel(_225741_d->_field_kind,_225741_d->_field_model,jule::Str("clear", 5)))),jule::Bool(),jule::Ref<_1ac90c3ed_Const>()));
		}
		goto _match_end_4443811584;
		_case_end_4443815472:;
		if (!((jule::Str("keys", 4)) == _match_expr)) { goto _case_end_4443815920; }
		_case_begin_4443815920:;
		{
			jule::Ref<_1ac6d02c0_Map> _228621_m = _225741_d->_field_kind->_method_map();
			return jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1b557cd24_FnIns>(new( std::nothrow ) _1b557cd24_FnIns(jule::Ref<_1b5e07a00_StructIns>(),jule::Ref<_1b557cd24_Fn>(),jule::Slice<jule::Ref<_1ac6d02c0_TypeKind>>(),jule::Slice<jule::Ref<_1b557cd24_ParamIns>>(),jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1ac6d02c0_Slc>(new( std::nothrow ) _1ac6d02c0_Slc(_228621_m->_field_key)))),jule::Ref<_1ab009de8_Scope>(),jule::Ref<_1b5589c76_ReferenceStack>(),jule::Ref<_1b5589c76_ReferenceStack>(),jule::Fn<jule::Ref<_1ab00dbcc_Data>(jule::Ref<_1ab00dbcc_Eval>&,jule::Ref<_1b61ca014_FnCallExpr>&,jule::Ref<_1ab00dbcc_Data>&)>(_1aae49684_builtin_caller_common_mut),jule::Bool(),jule::Bool())))),jule::Ref<_1ac6d02c0_TypeKind>(),_225741_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1ab33d083_CommonSubIdentExprModel>(new( std::nothrow ) _1ab33d083_CommonSubIdentExprModel(_225741_d->_field_kind,_225741_d->_field_model,jule::Str("keys", 4)))),jule::Bool(),jule::Ref<_1ac90c3ed_Const>()));
		}
		goto _match_end_4443811584;
		_case_end_4443815920:;
		if (!((jule::Str("values", 6)) == _match_expr)) { goto _case_end_4443816032; }
		_case_begin_4443816032:;
		{
			jule::Ref<_1ac6d02c0_Map> _230721_m = _225741_d->_field_kind->_method_map();
			return jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1b557cd24_FnIns>(new( std::nothrow ) _1b557cd24_FnIns(jule::Ref<_1b5e07a00_StructIns>(),jule::Ref<_1b557cd24_Fn>(),jule::Slice<jule::Ref<_1ac6d02c0_TypeKind>>(),jule::Slice<jule::Ref<_1b557cd24_ParamIns>>(),jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1ac6d02c0_Slc>(new( std::nothrow ) _1ac6d02c0_Slc(_230721_m->_field_val)))),jule::Ref<_1ab009de8_Scope>(),jule::Ref<_1b5589c76_ReferenceStack>(),jule::Ref<_1b5589c76_ReferenceStack>(),jule::Fn<jule::Ref<_1ab00dbcc_Data>(jule::Ref<_1ab00dbcc_Eval>&,jule::Ref<_1b61ca014_FnCallExpr>&,jule::Ref<_1ab00dbcc_Data>&)>(_1aae49684_builtin_caller_common_mut),jule::Bool(),jule::Bool())))),jule::Ref<_1ac6d02c0_TypeKind>(),_225741_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1ab33d083_CommonSubIdentExprModel>(new( std::nothrow ) _1ab33d083_CommonSubIdentExprModel(_225741_d->_field_kind,_225741_d->_field_model,jule::Str("values", 6)))),jule::Bool(),jule::Ref<_1ac90c3ed_Const>()));
		}
		goto _match_end_4443811584;
		_case_end_4443816032:;
		if (!((jule::Str("has", 3)) == _match_expr)) { goto _case_end_4443815072; }
		_case_begin_4443815072:;
		{
			jule::Ref<_1ac6d02c0_Map> _232821_m = _225741_d->_field_kind->_method_map();
			return jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1b557cd24_FnIns>(new( std::nothrow ) _1b557cd24_FnIns(jule::Ref<_1b5e07a00_StructIns>(),jule::Ref<_1b557cd24_Fn>(),jule::Slice<jule::Ref<_1ac6d02c0_TypeKind>>(),jule::Slice<jule::Ref<_1b557cd24_ParamIns>>({jule::new_struct<_1b557cd24_ParamIns>(new( std::nothrow ) _1b557cd24_ParamIns(jule::new_struct<_1b557cd24_Param>(new( std::nothrow ) _1b557cd24_Param(_1b61ec5ec_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1ac6d02c0_TypeSymbol>(),jule::Str("key", 3))),_232821_m->_field_key))}),jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_1ac6d02c0_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1ab009de8_Scope>(),jule::Ref<_1b5589c76_ReferenceStack>(),jule::Ref<_1b5589c76_ReferenceStack>(),jule::Fn<jule::Ref<_1ab00dbcc_Data>(jule::Ref<_1ab00dbcc_Eval>&,jule::Ref<_1b61ca014_FnCallExpr>&,jule::Ref<_1ab00dbcc_Data>&)>(_1aae49684_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ref<_1ac6d02c0_TypeKind>(),_225741_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1ab33d083_CommonSubIdentExprModel>(new( std::nothrow ) _1ab33d083_CommonSubIdentExprModel(_225741_d->_field_kind,_225741_d->_field_model,jule::Str("has", 3)))),jule::Bool(),jule::Ref<_1ac90c3ed_Const>()));
		}
		goto _match_end_4443811584;
		_case_end_4443815072:;
		if (!((jule::Str("del", 3)) == _match_expr)) { goto _case_end_4443815184; }
		_case_begin_4443815184:;
		{
			jule::Ref<_1ac6d02c0_Map> _235321_m = _225741_d->_field_kind->_method_map();
			return jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1b557cd24_FnIns>(new( std::nothrow ) _1b557cd24_FnIns(jule::Ref<_1b5e07a00_StructIns>(),jule::Ref<_1b557cd24_Fn>(),jule::Slice<jule::Ref<_1ac6d02c0_TypeKind>>(),jule::Slice<jule::Ref<_1b557cd24_ParamIns>>({jule::new_struct<_1b557cd24_ParamIns>(new( std::nothrow ) _1b557cd24_ParamIns(jule::new_struct<_1b557cd24_Param>(new( std::nothrow ) _1b557cd24_Param(_1b61ec5ec_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1ac6d02c0_TypeSymbol>(),jule::Str("key", 3))),_235321_m->_field_key))}),jule::Ref<_1ac6d02c0_TypeKind>(),jule::Ref<_1ab009de8_Scope>(),jule::Ref<_1b5589c76_ReferenceStack>(),jule::Ref<_1b5589c76_ReferenceStack>(),jule::Fn<jule::Ref<_1ab00dbcc_Data>(jule::Ref<_1ab00dbcc_Eval>&,jule::Ref<_1b61ca014_FnCallExpr>&,jule::Ref<_1ab00dbcc_Data>&)>(_1aae49684_builtin_caller_common_mut),jule::Bool(),jule::Bool())))),jule::Ref<_1ac6d02c0_TypeKind>(),_225741_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1ab33d083_CommonSubIdentExprModel>(new( std::nothrow ) _1ab33d083_CommonSubIdentExprModel(_225741_d->_field_kind,_225741_d->_field_model,jule::Str("del", 3)))),jule::Bool(),jule::Ref<_1ac90c3ed_Const>()));
		}
		goto _match_end_4443811584;
		_case_end_4443815184:;
		_case_begin_4443812192:;
		{
			(*this)._method_push_err(_225751_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_225751_ident._field_kind)}));
			return jule::new_ref<_1ab00dbcc_Data>();
		}
		goto _match_end_4443811584;
		_case_end_4443812192:;
		_match_end_4443811584:;
	}
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_eval_str_sub_ident(jule::Ref<_1ab00dbcc_Data> _238241_d,_1b61ec5ec_Token _238251_ident) {
	{
		auto _match_expr{ _238251_ident._field_kind };
		if (!((jule::Str("len", 3)) == _match_expr)) { goto _case_end_4443852416; }
		_case_begin_4443852416:;
		{
			return jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_1ac6d02c0_build_prim_type(jule::Str("i64", 3)))),jule::Ref<_1ac6d02c0_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1ab33d083_CommonSubIdentExprModel>(new( std::nothrow ) _1ab33d083_CommonSubIdentExprModel(_238241_d->_field_kind,_238241_d->_field_model,jule::Str("len()", 5)))),jule::Bool(),jule::Ref<_1ac90c3ed_Const>()));
		}
		goto _match_end_4443848320;
		_case_end_4443852416:;
		if (!((jule::Str("has_prefix", 10)) == _match_expr)) { goto _case_end_4443852992; }
		_case_begin_4443852992:;
		{
			return jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1b557cd24_FnIns>(new( std::nothrow ) _1b557cd24_FnIns(jule::Ref<_1b5e07a00_StructIns>(),jule::Ref<_1b557cd24_Fn>(),jule::Slice<jule::Ref<_1ac6d02c0_TypeKind>>(),jule::Slice<jule::Ref<_1b557cd24_ParamIns>>({jule::new_struct<_1b557cd24_ParamIns>(new( std::nothrow ) _1b557cd24_ParamIns(jule::new_struct<_1b557cd24_Param>(new( std::nothrow ) _1b557cd24_Param(_1b61ec5ec_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1ac6d02c0_TypeSymbol>(),jule::Str("sub", 3))),_238241_d->_field_kind))}),jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_1ac6d02c0_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1ab009de8_Scope>(),jule::Ref<_1b5589c76_ReferenceStack>(),jule::Ref<_1b5589c76_ReferenceStack>(),jule::Fn<jule::Ref<_1ab00dbcc_Data>(jule::Ref<_1ab00dbcc_Eval>&,jule::Ref<_1b61ca014_FnCallExpr>&,jule::Ref<_1ab00dbcc_Data>&)>(_1aae49684_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ref<_1ac6d02c0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1ab33d083_CommonSubIdentExprModel>(new( std::nothrow ) _1ab33d083_CommonSubIdentExprModel(_238241_d->_field_kind,_238241_d->_field_model,jule::Str("has_prefix", 10)))),jule::Bool(),jule::Ref<_1ac90c3ed_Const>()));
		}
		goto _match_end_4443848320;
		_case_end_4443852992:;
		if (!((jule::Str("has_suffix", 10)) == _match_expr)) { goto _case_end_4443852656; }
		_case_begin_4443852656:;
		{
			return jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1b557cd24_FnIns>(new( std::nothrow ) _1b557cd24_FnIns(jule::Ref<_1b5e07a00_StructIns>(),jule::Ref<_1b557cd24_Fn>(),jule::Slice<jule::Ref<_1ac6d02c0_TypeKind>>(),jule::Slice<jule::Ref<_1b557cd24_ParamIns>>({jule::new_struct<_1b557cd24_ParamIns>(new( std::nothrow ) _1b557cd24_ParamIns(jule::new_struct<_1b557cd24_Param>(new( std::nothrow ) _1b557cd24_Param(_1b61ec5ec_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1ac6d02c0_TypeSymbol>(),jule::Str("sub", 3))),_238241_d->_field_kind))}),jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_1ac6d02c0_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1ab009de8_Scope>(),jule::Ref<_1b5589c76_ReferenceStack>(),jule::Ref<_1b5589c76_ReferenceStack>(),jule::Fn<jule::Ref<_1ab00dbcc_Data>(jule::Ref<_1ab00dbcc_Eval>&,jule::Ref<_1b61ca014_FnCallExpr>&,jule::Ref<_1ab00dbcc_Data>&)>(_1aae49684_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ref<_1ac6d02c0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1ab33d083_CommonSubIdentExprModel>(new( std::nothrow ) _1ab33d083_CommonSubIdentExprModel(_238241_d->_field_kind,_238241_d->_field_model,jule::Str("has_suffix", 10)))),jule::Bool(),jule::Ref<_1ac90c3ed_Const>()));
		}
		goto _match_end_4443848320;
		_case_end_4443852656:;
		if (!((jule::Str("find", 4)) == _match_expr)) { goto _case_end_4443852768; }
		_case_begin_4443852768:;
		{
			return jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1b557cd24_FnIns>(new( std::nothrow ) _1b557cd24_FnIns(jule::Ref<_1b5e07a00_StructIns>(),jule::Ref<_1b557cd24_Fn>(),jule::Slice<jule::Ref<_1ac6d02c0_TypeKind>>(),jule::Slice<jule::Ref<_1b557cd24_ParamIns>>({jule::new_struct<_1b557cd24_ParamIns>(new( std::nothrow ) _1b557cd24_ParamIns(jule::new_struct<_1b557cd24_Param>(new( std::nothrow ) _1b557cd24_Param(_1b61ec5ec_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1ac6d02c0_TypeSymbol>(),jule::Str("sub", 3))),_238241_d->_field_kind))}),jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_1ac6d02c0_build_prim_type(jule::Str("int", 3)))),jule::Ref<_1ab009de8_Scope>(),jule::Ref<_1b5589c76_ReferenceStack>(),jule::Ref<_1b5589c76_ReferenceStack>(),jule::Fn<jule::Ref<_1ab00dbcc_Data>(jule::Ref<_1ab00dbcc_Eval>&,jule::Ref<_1b61ca014_FnCallExpr>&,jule::Ref<_1ab00dbcc_Data>&)>(_1aae49684_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ref<_1ac6d02c0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1ab33d083_CommonSubIdentExprModel>(new( std::nothrow ) _1ab33d083_CommonSubIdentExprModel(_238241_d->_field_kind,_238241_d->_field_model,jule::Str("find", 4)))),jule::Bool(),jule::Ref<_1ac90c3ed_Const>()));
		}
		goto _match_end_4443848320;
		_case_end_4443852768:;
		if (!((jule::Str("rfind", 5)) == _match_expr)) { goto _case_end_4443851808; }
		_case_begin_4443851808:;
		{
			return jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1b557cd24_FnIns>(new( std::nothrow ) _1b557cd24_FnIns(jule::Ref<_1b5e07a00_StructIns>(),jule::Ref<_1b557cd24_Fn>(),jule::Slice<jule::Ref<_1ac6d02c0_TypeKind>>(),jule::Slice<jule::Ref<_1b557cd24_ParamIns>>({jule::new_struct<_1b557cd24_ParamIns>(new( std::nothrow ) _1b557cd24_ParamIns(jule::new_struct<_1b557cd24_Param>(new( std::nothrow ) _1b557cd24_Param(_1b61ec5ec_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1ac6d02c0_TypeSymbol>(),jule::Str("sub", 3))),_238241_d->_field_kind))}),jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_1ac6d02c0_build_prim_type(jule::Str("int", 3)))),jule::Ref<_1ab009de8_Scope>(),jule::Ref<_1b5589c76_ReferenceStack>(),jule::Ref<_1b5589c76_ReferenceStack>(),jule::Fn<jule::Ref<_1ab00dbcc_Data>(jule::Ref<_1ab00dbcc_Eval>&,jule::Ref<_1b61ca014_FnCallExpr>&,jule::Ref<_1ab00dbcc_Data>&)>(_1aae49684_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ref<_1ac6d02c0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1ab33d083_CommonSubIdentExprModel>(new( std::nothrow ) _1ab33d083_CommonSubIdentExprModel(_238241_d->_field_kind,_238241_d->_field_model,jule::Str("rfind", 5)))),jule::Bool(),jule::Ref<_1ac90c3ed_Const>()));
		}
		goto _match_end_4443848320;
		_case_end_4443851808:;
		if (!((jule::Str("trim", 4)) == _match_expr)) { goto _case_end_4443851920; }
		_case_begin_4443851920:;
		{
			return jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1b557cd24_FnIns>(new( std::nothrow ) _1b557cd24_FnIns(jule::Ref<_1b5e07a00_StructIns>(),jule::Ref<_1b557cd24_Fn>(),jule::Slice<jule::Ref<_1ac6d02c0_TypeKind>>(),jule::Slice<jule::Ref<_1b557cd24_ParamIns>>({jule::new_struct<_1b557cd24_ParamIns>(new( std::nothrow ) _1b557cd24_ParamIns(jule::new_struct<_1b557cd24_Param>(new( std::nothrow ) _1b557cd24_Param(_1b61ec5ec_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1ac6d02c0_TypeSymbol>(),jule::Str("bytes", 5))),_238241_d->_field_kind))}),_238241_d->_field_kind,jule::Ref<_1ab009de8_Scope>(),jule::Ref<_1b5589c76_ReferenceStack>(),jule::Ref<_1b5589c76_ReferenceStack>(),jule::Fn<jule::Ref<_1ab00dbcc_Data>(jule::Ref<_1ab00dbcc_Eval>&,jule::Ref<_1b61ca014_FnCallExpr>&,jule::Ref<_1ab00dbcc_Data>&)>(_1aae49684_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ref<_1ac6d02c0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1ab33d083_CommonSubIdentExprModel>(new( std::nothrow ) _1ab33d083_CommonSubIdentExprModel(_238241_d->_field_kind,_238241_d->_field_model,jule::Str("trim", 4)))),jule::Bool(),jule::Ref<_1ac90c3ed_Const>()));
		}
		goto _match_end_4443848320;
		_case_end_4443851920:;
		if (!((jule::Str("ltrim", 5)) == _match_expr)) { goto _case_end_4443852032; }
		_case_begin_4443852032:;
		{
			return jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1b557cd24_FnIns>(new( std::nothrow ) _1b557cd24_FnIns(jule::Ref<_1b5e07a00_StructIns>(),jule::Ref<_1b557cd24_Fn>(),jule::Slice<jule::Ref<_1ac6d02c0_TypeKind>>(),jule::Slice<jule::Ref<_1b557cd24_ParamIns>>({jule::new_struct<_1b557cd24_ParamIns>(new( std::nothrow ) _1b557cd24_ParamIns(jule::new_struct<_1b557cd24_Param>(new( std::nothrow ) _1b557cd24_Param(_1b61ec5ec_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1ac6d02c0_TypeSymbol>(),jule::Str("bytes", 5))),_238241_d->_field_kind))}),_238241_d->_field_kind,jule::Ref<_1ab009de8_Scope>(),jule::Ref<_1b5589c76_ReferenceStack>(),jule::Ref<_1b5589c76_ReferenceStack>(),jule::Fn<jule::Ref<_1ab00dbcc_Data>(jule::Ref<_1ab00dbcc_Eval>&,jule::Ref<_1b61ca014_FnCallExpr>&,jule::Ref<_1ab00dbcc_Data>&)>(_1aae49684_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ref<_1ac6d02c0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1ab33d083_CommonSubIdentExprModel>(new( std::nothrow ) _1ab33d083_CommonSubIdentExprModel(_238241_d->_field_kind,_238241_d->_field_model,jule::Str("ltrim", 5)))),jule::Bool(),jule::Ref<_1ac90c3ed_Const>()));
		}
		goto _match_end_4443848320;
		_case_end_4443852032:;
		if (!((jule::Str("rtrim", 5)) == _match_expr)) { goto _case_end_4443849232; }
		_case_begin_4443849232:;
		{
			return jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1b557cd24_FnIns>(new( std::nothrow ) _1b557cd24_FnIns(jule::Ref<_1b5e07a00_StructIns>(),jule::Ref<_1b557cd24_Fn>(),jule::Slice<jule::Ref<_1ac6d02c0_TypeKind>>(),jule::Slice<jule::Ref<_1b557cd24_ParamIns>>({jule::new_struct<_1b557cd24_ParamIns>(new( std::nothrow ) _1b557cd24_ParamIns(jule::new_struct<_1b557cd24_Param>(new( std::nothrow ) _1b557cd24_Param(_1b61ec5ec_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1ac6d02c0_TypeSymbol>(),jule::Str("bytes", 5))),_238241_d->_field_kind))}),_238241_d->_field_kind,jule::Ref<_1ab009de8_Scope>(),jule::Ref<_1b5589c76_ReferenceStack>(),jule::Ref<_1b5589c76_ReferenceStack>(),jule::Fn<jule::Ref<_1ab00dbcc_Data>(jule::Ref<_1ab00dbcc_Eval>&,jule::Ref<_1b61ca014_FnCallExpr>&,jule::Ref<_1ab00dbcc_Data>&)>(_1aae49684_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ref<_1ac6d02c0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1ab33d083_CommonSubIdentExprModel>(new( std::nothrow ) _1ab33d083_CommonSubIdentExprModel(_238241_d->_field_kind,_238241_d->_field_model,jule::Str("rtrim", 5)))),jule::Bool(),jule::Ref<_1ac90c3ed_Const>()));
		}
		goto _match_end_4443848320;
		_case_end_4443849232:;
		if (!((jule::Str("split", 5)) == _match_expr)) { goto _case_end_4443849344; }
		_case_begin_4443849344:;
		{
			return jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1b557cd24_FnIns>(new( std::nothrow ) _1b557cd24_FnIns(jule::Ref<_1b5e07a00_StructIns>(),jule::Ref<_1b557cd24_Fn>(),jule::Slice<jule::Ref<_1ac6d02c0_TypeKind>>(),jule::Slice<jule::Ref<_1b557cd24_ParamIns>>({jule::new_struct<_1b557cd24_ParamIns>(new( std::nothrow ) _1b557cd24_ParamIns(jule::new_struct<_1b557cd24_Param>(new( std::nothrow ) _1b557cd24_Param(_1b61ec5ec_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1ac6d02c0_TypeSymbol>(),jule::Str("sub", 3))),_238241_d->_field_kind)),jule::new_struct<_1b557cd24_ParamIns>(new( std::nothrow ) _1b557cd24_ParamIns(jule::new_struct<_1b557cd24_Param>(new( std::nothrow ) _1b557cd24_Param(_1b61ec5ec_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1ac6d02c0_TypeSymbol>(),jule::Str("n", 1))),jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_1ac6d02c0_build_prim_type(jule::Str("int", 3))))))}),jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1ac6d02c0_Slc>(new( std::nothrow ) _1ac6d02c0_Slc(_238241_d->_field_kind)))),jule::Ref<_1ab009de8_Scope>(),jule::Ref<_1b5589c76_ReferenceStack>(),jule::Ref<_1b5589c76_ReferenceStack>(),jule::Fn<jule::Ref<_1ab00dbcc_Data>(jule::Ref<_1ab00dbcc_Eval>&,jule::Ref<_1b61ca014_FnCallExpr>&,jule::Ref<_1ab00dbcc_Data>&)>(_1aae49684_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ref<_1ac6d02c0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1ab33d083_CommonSubIdentExprModel>(new( std::nothrow ) _1ab33d083_CommonSubIdentExprModel(_238241_d->_field_kind,_238241_d->_field_model,jule::Str("split", 5)))),jule::Bool(),jule::Ref<_1ac90c3ed_Const>()));
		}
		goto _match_end_4443848320;
		_case_end_4443849344:;
		if (!((jule::Str("replace", 7)) == _match_expr)) { goto _case_end_4443849456; }
		_case_begin_4443849456:;
		{
			return jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1b557cd24_FnIns>(new( std::nothrow ) _1b557cd24_FnIns(jule::Ref<_1b5e07a00_StructIns>(),jule::Ref<_1b557cd24_Fn>(),jule::Slice<jule::Ref<_1ac6d02c0_TypeKind>>(),jule::Slice<jule::Ref<_1b557cd24_ParamIns>>({jule::new_struct<_1b557cd24_ParamIns>(new( std::nothrow ) _1b557cd24_ParamIns(jule::new_struct<_1b557cd24_Param>(new( std::nothrow ) _1b557cd24_Param(_1b61ec5ec_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1ac6d02c0_TypeSymbol>(),jule::Str("sub", 3))),_238241_d->_field_kind)),jule::new_struct<_1b557cd24_ParamIns>(new( std::nothrow ) _1b557cd24_ParamIns(jule::new_struct<_1b557cd24_Param>(new( std::nothrow ) _1b557cd24_Param(_1b61ec5ec_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1ac6d02c0_TypeSymbol>(),jule::Str("new", 3))),_238241_d->_field_kind)),jule::new_struct<_1b557cd24_ParamIns>(new( std::nothrow ) _1b557cd24_ParamIns(jule::new_struct<_1b557cd24_Param>(new( std::nothrow ) _1b557cd24_Param(_1b61ec5ec_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1ac6d02c0_TypeSymbol>(),jule::Str("n", 1))),jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_1ac6d02c0_build_prim_type(jule::Str("int", 3))))))}),_238241_d->_field_kind,jule::Ref<_1ab009de8_Scope>(),jule::Ref<_1b5589c76_ReferenceStack>(),jule::Ref<_1b5589c76_ReferenceStack>(),jule::Fn<jule::Ref<_1ab00dbcc_Data>(jule::Ref<_1ab00dbcc_Eval>&,jule::Ref<_1b61ca014_FnCallExpr>&,jule::Ref<_1ab00dbcc_Data>&)>(_1aae49684_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ref<_1ac6d02c0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1ab33d083_CommonSubIdentExprModel>(new( std::nothrow ) _1ab33d083_CommonSubIdentExprModel(_238241_d->_field_kind,_238241_d->_field_model,jule::Str("replace", 7)))),jule::Bool(),jule::Ref<_1ac90c3ed_Const>()));
		}
		goto _match_end_4443848320;
		_case_end_4443849456:;
		_case_begin_4443848928:;
		{
			(*this)._method_push_err(_238251_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_238251_ident._field_kind)}));
			return jule::new_ref<_1ab00dbcc_Data>();
		}
		goto _match_end_4443848320;
		_case_end_4443848928:;
		_match_end_4443848320:;
	}
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_eval_int_type_static(_1b61ec5ec_Token _263039_ident) {
	
	{
		auto _match_expr{ _263039_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4443925408; }
		_case_begin_4443925408:;
		{
			jule::Ref<_1ac90c3ed_Const> _263521_c = _1ac90c3ed_Const::_static_method_new_i64(static_cast<jule::I64>(_1ac928bde_max(jule::Str("int", 3))));
			return jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_1ac6d02c0_build_prim_type(jule::Str("int", 3)))),jule::Ref<_1ac6d02c0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_263521_c),jule::Bool(),_263521_c));
		}
		goto _match_end_4443920768;
		_case_end_4443925408:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_4443925984; }
		_case_begin_4443925984:;
		{
			jule::Ref<_1ac90c3ed_Const> _264321_c = _1ac90c3ed_Const::_static_method_new_i64(static_cast<jule::I64>(_1ac928bde_min(jule::Str("int", 3))));
			return jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_1ac6d02c0_build_prim_type(jule::Str("int", 3)))),jule::Ref<_1ac6d02c0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_264321_c),jule::Bool(),_264321_c));
		}
		goto _match_end_4443920768;
		_case_end_4443925984:;
		_case_begin_4443921680:;
		{
			(*this)._method_push_err(_263039_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("int", 3)),jule::Any(_263039_ident._field_kind)}));
			return jule::new_ref<_1ab00dbcc_Data>();
		}
		goto _match_end_4443920768;
		_case_end_4443921680:;
		_match_end_4443920768:;
	}
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_eval_uint_type_static(_1b61ec5ec_Token _265640_ident) {
	
	{
		auto _match_expr{ _265640_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4443938544; }
		_case_begin_4443938544:;
		{
			jule::Ref<_1ac90c3ed_Const> _266121_c = _1ac90c3ed_Const::_static_method_new_u64(static_cast<jule::U64>(_1ac928bde_max(jule::Str("uint", 4))));
			return jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_1ac6d02c0_build_prim_type(jule::Str("uint", 4)))),jule::Ref<_1ac6d02c0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_266121_c),jule::Bool(),_266121_c));
		}
		goto _match_end_4443934608;
		_case_end_4443938544:;
		_case_begin_4443935520:;
		{
			(*this)._method_push_err(_265640_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("uint", 4)),jule::Any(_265640_ident._field_kind)}));
			return jule::new_ref<_1ab00dbcc_Data>();
		}
		goto _match_end_4443934608;
		_case_end_4443935520:;
		_match_end_4443934608:;
	}
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_eval_i8_type_static(_1b61ec5ec_Token _267438_ident) {
	
	
	
	{
		auto _match_expr{ _267438_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4443950832; }
		_case_begin_4443950832:;
		{
			jule::Ref<_1ac90c3ed_Const> _268121_c = _1ac90c3ed_Const::_static_method_new_i64(127LL);
			return jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_1ac6d02c0_build_prim_type(jule::Str("i8", 2)))),jule::Ref<_1ac6d02c0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_268121_c),jule::Bool(),_268121_c));
		}
		goto _match_end_4443945328;
		_case_end_4443950832:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_4443951408; }
		_case_begin_4443951408:;
		{
			jule::Ref<_1ac90c3ed_Const> _268921_c = _1ac90c3ed_Const::_static_method_new_i64(-128LL);
			return jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_1ac6d02c0_build_prim_type(jule::Str("i8", 2)))),jule::Ref<_1ac6d02c0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_268921_c),jule::Bool(),_268921_c));
		}
		goto _match_end_4443945328;
		_case_end_4443951408:;
		_case_begin_4443947104:;
		{
			(*this)._method_push_err(_267438_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("i8", 2)),jule::Any(_267438_ident._field_kind)}));
			return jule::new_ref<_1ab00dbcc_Data>();
		}
		goto _match_end_4443945328;
		_case_end_4443947104:;
		_match_end_4443945328:;
	}
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_eval_i16_type_static(_1b61ec5ec_Token _270239_ident) {
	
	
	
	{
		auto _match_expr{ _270239_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4443965888; }
		_case_begin_4443965888:;
		{
			jule::Ref<_1ac90c3ed_Const> _270921_c = _1ac90c3ed_Const::_static_method_new_i64(32767LL);
			return jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_1ac6d02c0_build_prim_type(jule::Str("i16", 3)))),jule::Ref<_1ac6d02c0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_270921_c),jule::Bool(),_270921_c));
		}
		goto _match_end_4443960384;
		_case_end_4443965888:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_4443966464; }
		_case_begin_4443966464:;
		{
			jule::Ref<_1ac90c3ed_Const> _271721_c = _1ac90c3ed_Const::_static_method_new_i64(-32768LL);
			return jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_1ac6d02c0_build_prim_type(jule::Str("i16", 3)))),jule::Ref<_1ac6d02c0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_271721_c),jule::Bool(),_271721_c));
		}
		goto _match_end_4443960384;
		_case_end_4443966464:;
		_case_begin_4443962160:;
		{
			(*this)._method_push_err(_270239_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("i16", 3)),jule::Any(_270239_ident._field_kind)}));
			return jule::new_ref<_1ab00dbcc_Data>();
		}
		goto _match_end_4443960384;
		_case_end_4443962160:;
		_match_end_4443960384:;
	}
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_eval_i32_type_static(_1b61ec5ec_Token _273039_ident) {
	
	
	
	{
		auto _match_expr{ _273039_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4443981584; }
		_case_begin_4443981584:;
		{
			jule::Ref<_1ac90c3ed_Const> _273721_c = _1ac90c3ed_Const::_static_method_new_i64(2147483647LL);
			return jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_1ac6d02c0_build_prim_type(jule::Str("i32", 3)))),jule::Ref<_1ac6d02c0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_273721_c),jule::Bool(),_273721_c));
		}
		goto _match_end_4443976080;
		_case_end_4443981584:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_4443982160; }
		_case_begin_4443982160:;
		{
			jule::Ref<_1ac90c3ed_Const> _274521_c = _1ac90c3ed_Const::_static_method_new_i64(-2147483648LL);
			return jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_1ac6d02c0_build_prim_type(jule::Str("i32", 3)))),jule::Ref<_1ac6d02c0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_274521_c),jule::Bool(),_274521_c));
		}
		goto _match_end_4443976080;
		_case_end_4443982160:;
		_case_begin_4443977856:;
		{
			(*this)._method_push_err(_273039_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("i32", 3)),jule::Any(_273039_ident._field_kind)}));
			return jule::new_ref<_1ab00dbcc_Data>();
		}
		goto _match_end_4443976080;
		_case_end_4443977856:;
		_match_end_4443976080:;
	}
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_eval_i64_type_static(_1b61ec5ec_Token _275839_ident) {
	
	
	
	{
		auto _match_expr{ _275839_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4443996512; }
		_case_begin_4443996512:;
		{
			jule::Ref<_1ac90c3ed_Const> _276521_c = _1ac90c3ed_Const::_static_method_new_i64(jule::MIN_I64);
			return jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_1ac6d02c0_build_prim_type(jule::Str("i64", 3)))),jule::Ref<_1ac6d02c0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_276521_c),jule::Bool(),_276521_c));
		}
		goto _match_end_4443991088;
		_case_end_4443996512:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_4443997088; }
		_case_begin_4443997088:;
		{
			jule::Ref<_1ac90c3ed_Const> _277321_c = _1ac90c3ed_Const::_static_method_new_i64(jule::MAX_I64);
			return jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_1ac6d02c0_build_prim_type(jule::Str("i64", 3)))),jule::Ref<_1ac6d02c0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_277321_c),jule::Bool(),_277321_c));
		}
		goto _match_end_4443991088;
		_case_end_4443997088:;
		_case_begin_4443992768:;
		{
			(*this)._method_push_err(_275839_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("i64", 3)),jule::Any(_275839_ident._field_kind)}));
			return jule::new_ref<_1ab00dbcc_Data>();
		}
		goto _match_end_4443991088;
		_case_end_4443992768:;
		_match_end_4443991088:;
	}
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_eval_u8_type_static(_1b61ec5ec_Token _278638_ident) {
	
	
	{
		auto _match_expr{ _278638_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4444010448; }
		_case_begin_4444010448:;
		{
			jule::Ref<_1ac90c3ed_Const> _279221_c = _1ac90c3ed_Const::_static_method_new_u64(255LLU);
			return jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_1ac6d02c0_build_prim_type(jule::Str("u8", 2)))),jule::Ref<_1ac6d02c0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_279221_c),jule::Bool(),_279221_c));
		}
		goto _match_end_4444004992;
		_case_end_4444010448:;
		_case_begin_4444006624:;
		{
			(*this)._method_push_err(_278638_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("u8", 2)),jule::Any(_278638_ident._field_kind)}));
			return jule::new_ref<_1ab00dbcc_Data>();
		}
		goto _match_end_4444004992;
		_case_end_4444006624:;
		_match_end_4444004992:;
	}
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_eval_u16_type_static(_1b61ec5ec_Token _280539_ident) {
	
	
	{
		auto _match_expr{ _280539_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4444021408; }
		_case_begin_4444021408:;
		{
			jule::Ref<_1ac90c3ed_Const> _281121_c = _1ac90c3ed_Const::_static_method_new_u64(65535LLU);
			return jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_1ac6d02c0_build_prim_type(jule::Str("u16", 3)))),jule::Ref<_1ac6d02c0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_281121_c),jule::Bool(),_281121_c));
		}
		goto _match_end_4444015952;
		_case_end_4444021408:;
		_case_begin_4444017584:;
		{
			(*this)._method_push_err(_280539_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("u16", 3)),jule::Any(_280539_ident._field_kind)}));
			return jule::new_ref<_1ab00dbcc_Data>();
		}
		goto _match_end_4444015952;
		_case_end_4444017584:;
		_match_end_4444015952:;
	}
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_eval_u32_type_static(_1b61ec5ec_Token _282439_ident) {
	
	
	{
		auto _match_expr{ _282439_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4444032368; }
		_case_begin_4444032368:;
		{
			jule::Ref<_1ac90c3ed_Const> _283021_c = _1ac90c3ed_Const::_static_method_new_u64(4294967295LLU);
			return jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_1ac6d02c0_build_prim_type(jule::Str("u32", 3)))),jule::Ref<_1ac6d02c0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_283021_c),jule::Bool(),_283021_c));
		}
		goto _match_end_4444026912;
		_case_end_4444032368:;
		_case_begin_4444028544:;
		{
			(*this)._method_push_err(_282439_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("u32", 3)),jule::Any(_282439_ident._field_kind)}));
			return jule::new_ref<_1ab00dbcc_Data>();
		}
		goto _match_end_4444026912;
		_case_end_4444028544:;
		_match_end_4444026912:;
	}
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_eval_u64_type_static(_1b61ec5ec_Token _284339_ident) {
	
	
	{
		auto _match_expr{ _284339_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4444043264; }
		_case_begin_4444043264:;
		{
			jule::Ref<_1ac90c3ed_Const> _284921_c = _1ac90c3ed_Const::_static_method_new_u64(jule::MAX_U64);
			return jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_1ac6d02c0_build_prim_type(jule::Str("u64", 3)))),jule::Ref<_1ac6d02c0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_284921_c),jule::Bool(),_284921_c));
		}
		goto _match_end_4444037872;
		_case_end_4444043264:;
		_case_begin_4444039552:;
		{
			(*this)._method_push_err(_284339_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("u64", 3)),jule::Any(_284339_ident._field_kind)}));
			return jule::new_ref<_1ab00dbcc_Data>();
		}
		goto _match_end_4444037872;
		_case_end_4444039552:;
		_match_end_4444037872:;
	}
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_eval_f32_type_tatic(_1b61ec5ec_Token _286238_ident) {
	
	
	
	{
		auto _match_expr{ _286238_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4444055312; }
		_case_begin_4444055312:;
		{
			jule::Ref<_1ac90c3ed_Const> _286921_c = _1ac90c3ed_Const::_static_method_new_f64(340282346638528860000000000000000000000.0);
			return jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_1ac6d02c0_build_prim_type(jule::Str("f32", 3)))),jule::Ref<_1ac6d02c0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_286921_c),jule::Bool(),_286921_c));
		}
		goto _match_end_4444049920;
		_case_end_4444055312:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_4444055888; }
		_case_begin_4444055888:;
		{
			jule::Ref<_1ac90c3ed_Const> _287721_c = _1ac90c3ed_Const::_static_method_new_f64(-340282346638528860000000000000000000000.0);
			return jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_1ac6d02c0_build_prim_type(jule::Str("f32", 3)))),jule::Ref<_1ac6d02c0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_287721_c),jule::Bool(),_287721_c));
		}
		goto _match_end_4444049920;
		_case_end_4444055888:;
		_case_begin_4444051568:;
		{
			(*this)._method_push_err(_286238_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("f32", 3)),jule::Any(_286238_ident._field_kind)}));
			return jule::new_ref<_1ab00dbcc_Data>();
		}
		goto _match_end_4444049920;
		_case_end_4444051568:;
		_match_end_4444049920:;
	}
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_eval_f64_type_static(_1b61ec5ec_Token _289039_ident) {
	
	
	
	{
		auto _match_expr{ _289039_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4444070080; }
		_case_begin_4444070080:;
		{
			jule::Ref<_1ac90c3ed_Const> _289721_c = _1ac90c3ed_Const::_static_method_new_f64(jule::MAX_F64);
			return jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_1ac6d02c0_build_prim_type(jule::Str("f64", 3)))),jule::Ref<_1ac6d02c0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_289721_c),jule::Bool(),_289721_c));
		}
		goto _match_end_4444064704;
		_case_end_4444070080:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_4444070656; }
		_case_begin_4444070656:;
		{
			jule::Ref<_1ac90c3ed_Const> _290521_c = _1ac90c3ed_Const::_static_method_new_f64(jule::MIN_F64);
			return jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_1ac6d02c0_build_prim_type(jule::Str("f64", 3)))),jule::Ref<_1ac6d02c0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_290521_c),jule::Bool(),_290521_c));
		}
		goto _match_end_4444064704;
		_case_end_4444070656:;
		_case_begin_4444066352:;
		{
			(*this)._method_push_err(_289039_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("f64", 3)),jule::Any(_289039_ident._field_kind)}));
			return jule::new_ref<_1ab00dbcc_Data>();
		}
		goto _match_end_4444064704;
		_case_end_4444066352:;
		_match_end_4444064704:;
	}
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_eval_prim_static(jule::Str _291835_kind,_1b61ec5ec_Token _291846_ident) {
	{
		auto _match_expr{ _291835_kind };
		if (!((jule::Str("int", 3)) == _match_expr)) { goto _case_end_4444082640; }
		_case_begin_4444082640:;
		{
			return (*this)._method_eval_int_type_static(_291846_ident);
		}
		goto _match_end_4444078544;
		_case_end_4444082640:;
		if (!((jule::Str("uint", 4)) == _match_expr)) { goto _case_end_4444083216; }
		_case_begin_4444083216:;
		{
			return (*this)._method_eval_uint_type_static(_291846_ident);
		}
		goto _match_end_4444078544;
		_case_end_4444083216:;
		if (!((jule::Str("i8", 2)) == _match_expr)) { goto _case_end_4444082432; }
		_case_begin_4444082432:;
		{
			return (*this)._method_eval_i8_type_static(_291846_ident);
		}
		goto _match_end_4444078544;
		_case_end_4444082432:;
		if (!((jule::Str("i16", 3)) == _match_expr)) { goto _case_end_4444082032; }
		_case_begin_4444082032:;
		{
			return (*this)._method_eval_i16_type_static(_291846_ident);
		}
		goto _match_end_4444078544;
		_case_end_4444082032:;
		if (!((jule::Str("i32", 3)) == _match_expr)) { goto _case_end_4444082144; }
		_case_begin_4444082144:;
		{
			return (*this)._method_eval_i32_type_static(_291846_ident);
		}
		goto _match_end_4444078544;
		_case_end_4444082144:;
		if (!((jule::Str("i64", 3)) == _match_expr)) { goto _case_end_4444082256; }
		_case_begin_4444082256:;
		{
			return (*this)._method_eval_i64_type_static(_291846_ident);
		}
		goto _match_end_4444078544;
		_case_end_4444082256:;
		if (!((jule::Str("u8", 2)) == _match_expr)) { goto _case_end_4444079328; }
		_case_begin_4444079328:;
		{
			return (*this)._method_eval_u8_type_static(_291846_ident);
		}
		goto _match_end_4444078544;
		_case_end_4444079328:;
		if (!((jule::Str("u16", 3)) == _match_expr)) { goto _case_end_4444079440; }
		_case_begin_4444079440:;
		{
			return (*this)._method_eval_u16_type_static(_291846_ident);
		}
		goto _match_end_4444078544;
		_case_end_4444079440:;
		if (!((jule::Str("u32", 3)) == _match_expr)) { goto _case_end_4444079552; }
		_case_begin_4444079552:;
		{
			return (*this)._method_eval_u32_type_static(_291846_ident);
		}
		goto _match_end_4444078544;
		_case_end_4444079552:;
		if (!((jule::Str("u64", 3)) == _match_expr)) { goto _case_end_4444083376; }
		_case_begin_4444083376:;
		{
			return (*this)._method_eval_u64_type_static(_291846_ident);
		}
		goto _match_end_4444078544;
		_case_end_4444083376:;
		if (!((jule::Str("f32", 3)) == _match_expr)) { goto _case_end_4444083488; }
		_case_begin_4444083488:;
		{
			return (*this)._method_eval_f32_type_tatic(_291846_ident);
		}
		goto _match_end_4444078544;
		_case_end_4444083488:;
		if (!((jule::Str("f64", 3)) == _match_expr)) { goto _case_end_4444083600; }
		_case_begin_4444083600:;
		{
			return (*this)._method_eval_f64_type_static(_291846_ident);
		}
		goto _match_end_4444078544;
		_case_end_4444083600:;
		_case_begin_4444078944:;
		{
			(*this)._method_push_err(_291846_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_291835_kind),jule::Any(_291846_ident._field_kind)}));
			return jule::new_ref<_1ab00dbcc_Data>();
		}
		goto _match_end_4444078544;
		_case_end_4444078944:;
		_match_end_4444078544:;
	}
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_eval_type_static(jule::Ref<_1ab00dbcc_Data> _293839_d,jule::Ref<_1b61ca014_SubIdentExpr> _293853_si) {
	{
		if (!((jule::real(_293839_d->_field_kind->_method_prim())))) { goto _case_end_4444103088; }
		_case_begin_4444103088:;
		{
			return (*this)._method_eval_prim_static(_293839_d->_field_kind->_method_prim()->_method_to_str(),_293853_si->_field_ident);
		}
		goto _match_end_4444098928;
		_case_end_4444103088:;
		if (!((jule::real(_293839_d->_field_kind->_method_enm())))) { goto _case_end_4444103664; }
		_case_begin_4444103664:;
		{
			return (*this)._method_eval_enum_static(_293839_d->_field_kind->_method_enm(),_293853_si->_field_ident);
		}
		goto _match_end_4444098928;
		_case_end_4444103664:;
		if (!((jule::real(_293839_d->_field_kind->_method_strct())))) { goto _case_end_4444102880; }
		_case_begin_4444102880:;
		{
			return (*this)._method_eval_struct_static(_293839_d->_field_kind->_method_strct(),_293853_si->_field_ident);
		}
		goto _match_end_4444098928;
		_case_end_4444102880:;
		_case_begin_4444099120:;
		{
			(*this)._method_push_err(_293853_si->_field_ident,jule::Str("type @ is not supports sub fields", 33),jule::Slice<jule::Any>({jule::Any(_293839_d->_field_kind->_method_to_str())}));
			return jule::new_ref<_1ab00dbcc_Data>();
		}
		goto _match_end_4444098928;
		_case_end_4444099120:;
		_match_end_4444098928:;
	}
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_eval_obj_sub_ident(jule::Ref<_1ab00dbcc_Data> _295541_d,jule::Ref<_1b61ca014_SubIdentExpr> _295555_si) {
	jule::Ref<_1ac6d02c0_TypeKind> _295617_kind = _295541_d->_field_kind;
	if (jule::real(_295541_d->_field_kind->_method_ptr())) {
		jule::Ref<_1ac6d02c0_Ptr> _295817_ptr = _295541_d->_field_kind->_method_ptr();
		if ((!(_295817_ptr->_method_is_unsafe()))) {
			if ((!(_295555_si->_field_is_self)) && (!((*this)._method_is_unsafe()))) {
				(*this)._method_push_err(_295555_si->_field_ident,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>({}));
			}
			_295617_kind=_295541_d->_field_kind->_method_ptr()->_field_elem;
		}
	} else if (jule::real(_295541_d->_field_kind->_method_ref())) {
		_295617_kind=_295541_d->_field_kind->_method_ref()->_field_elem;
	}
	{
		if (!((jule::real(_295541_d->_field_kind->_method_trt())))) { goto _case_end_4444123824; }
		_case_begin_4444123824:;
		{
			return (*this)._method_eval_trait_sub_ident(_295541_d,_295541_d->_field_kind->_method_trt(),_295555_si->_field_ident);
		}
		goto _match_end_4444122208;
		_case_end_4444123824:;
		if (!((jule::real(_295617_kind->_method_strct())))) { goto _case_end_4444123936; }
		_case_begin_4444123936:;
		{
			jule::Ref<_1b5e07a00_StructIns> _297417_s = _295617_kind->_method_strct();
			if (_1ab00dbcc_is_instanced_struct(_297417_s)) {
				jule::Bool _297625_used_reference_elem = jule::real(_295541_d->_field_kind->_method_ref());
				return (*this)._method_eval_struct_sub_ident(_295541_d,_295617_kind->_method_strct(),_295555_si,_297625_used_reference_elem);
			}
		}
		goto _match_end_4444122208;
		_case_end_4444123936:;
		if (!((jule::real(_295617_kind->_method_slc())))) { goto _case_end_4444124048; }
		_case_begin_4444124048:;
		{
			return (*this)._method_eval_slice_sub_ident(_295541_d,_295555_si->_field_ident);
		}
		goto _match_end_4444122208;
		_case_end_4444124048:;
		if (!((jule::real(_295617_kind->_method_arr())))) { goto _case_end_4444124160; }
		_case_begin_4444124160:;
		{
			return (*this)._method_eval_array_sub_ident(_295541_d,_295555_si->_field_ident);
		}
		goto _match_end_4444122208;
		_case_end_4444124160:;
		if (!((jule::real(_295617_kind->_method_map())))) { goto _case_end_4444124272; }
		_case_begin_4444124272:;
		{
			return (*this)._method_eval_map_sub_ident(_295541_d,_295555_si->_field_ident);
		}
		goto _match_end_4444122208;
		_case_end_4444124272:;
		if (!((jule::real(_295617_kind->_method_prim())))) { goto _case_end_4444124384; }
		_case_begin_4444124384:;
		{
			jule::Ref<_1ac6d02c0_Prim> _299017_p = _295617_kind->_method_prim();
			{
				auto _match_expr{ _299017_p->_field_kind };
				if (!((jule::Str("str", 3)) == _match_expr)) { goto _case_end_4444140176; }
				_case_begin_4444140176:;
				{
					return (*this)._method_eval_str_sub_ident(_295541_d,_295555_si->_field_ident);
				}
				goto _match_end_4444139504;
				_case_end_4444140176:;
				_match_end_4444139504:;
			}
		}
		goto _match_end_4444122208;
		_case_end_4444124384:;
		_match_end_4444122208:;
	}
	(*this)._method_push_err(_295555_si->_field_ident,jule::Str("object @ is not supports sub fields", 35),jule::Slice<jule::Any>({jule::Any(_295541_d->_field_kind->_method_to_str())}));
	return jule::new_ref<_1ab00dbcc_Data>();
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_eval_sub_ident(jule::Ref<_1b61ca014_SubIdentExpr> _300138_si) {
	jule::Ref<_1ac6d02c0_TypeKind> _300217_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_300217_prefix;
	});
	jule::Ref<_1ab00dbcc_Data> _300617_d = this->self->_method_eval_expr_kind(_300138_si->_field_expr);
	if ((!(jule::real(_300617_d)))) {
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	if (_300617_d->_field_decl) {
		return this->self->_method_eval_type_static(_300617_d,_300138_si);
	}
	return this->self->_method_eval_obj_sub_ident(_300617_d,_300138_si);
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_eval_tuple(jule::Ref<_1b61ca014_TupleExpr> _301834_tup) {
	jule::Ref<_1ac6d02c0_Tuple> _301917_tup_t = jule::new_struct<_1ac6d02c0_Tuple>(new( std::nothrow ) _1ac6d02c0_Tuple());
	_301917_tup_t->_field_types=jule::Slice<jule::Ref<_1ac6d02c0_TypeKind>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_301834_tup->_field_expr.len())));
	jule::Ref<_1ab33d083_TupleExprModel> _302217_model = jule::new_struct<_1ab33d083_TupleExprModel>(new( std::nothrow ) _1ab33d083_TupleExprModel(jule::Slice<jule::Ref<_1ab00dbcc_Data>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_301834_tup->_field_expr.len())))));
	jule::Bool _302617_ok = true;
	{
		auto _range_expr = _301834_tup->_field_expr;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ab00dbcc_i = 0;
			jule::Ref<_1b61ca014_Expr> _1ab00dbcc_expr = *_range_begin;
			_iter_begin_4444164160:;
			{
				jule::Ref<_1ab00dbcc_Data> _302821_d = this->self->_method_eval_expr_kind(_1ab00dbcc_expr->_field_kind);
				if ((!(jule::real(_302821_d)))) {
					_302617_ok=false;
					goto _iter_next_4444164160;
				}
				_301917_tup_t->_field_types[static_cast<jule::Int>(_1ab00dbcc_i)]=_302821_d->_field_kind;
				_302217_model->_field_datas[static_cast<jule::Int>(_1ab00dbcc_i)]=_302821_d;
			}
			_iter_next_4444164160:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ab00dbcc_i; _1ab00dbcc_expr = *_range_begin; goto _iter_begin_4444164160; }
			_iter_end_4444164160:;
		}
	}
	if ((!(_302617_ok))) {
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	return jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_301917_tup_t)),jule::Ref<_1ac6d02c0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_302217_model),jule::Bool(),jule::Ref<_1ac90c3ed_Const>()));
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_eval_map(jule::Ref<_1ac6d02c0_Map> _304732_m,jule::Ref<_1b61ca014_BraceLit> _304745_lit) {
	jule::Ref<_1ab33d083_MapExprModel> _304817_model = jule::new_struct<_1ab33d083_MapExprModel>(new( std::nothrow ) _1ab33d083_MapExprModel(_304732_m->_field_key,_304732_m->_field_val,jule::Slice<jule::Ref<_1ab33d083_KeyValPairExprModel>>()));
	{
		auto _range_expr = _304745_lit->_field_exprs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Any _1ab00dbcc_expr = *_range_begin;
			_iter_begin_4444181232:;
			{
				{
					auto _match_expr{ _1ab00dbcc_expr };
					if (!(_match_expr.type_is<jule::Ref<_1b61ca014_KeyValPair>>())) { goto _case_end_4444185488; }
					goto _match_end_4444182448;
					_case_end_4444185488:;
					_case_begin_4444182976:;
					{
						this->self->_method_push_err(_304745_lit->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
						return jule::new_ref<_1ab00dbcc_Data>();
					}
					goto _match_end_4444182448;
					_case_end_4444182976:;
					_match_end_4444182448:;
				}
				jule::Ref<_1b61ca014_KeyValPair> _306321_pair = _1ab00dbcc_expr.operator jule::Ref<_1b61ca014_KeyValPair>();
				jule::Ref<_1ab00dbcc_Data> _306521_key = this->self->_method_eval_expr_kind(_306321_pair->_field_key);
				if ((!(jule::real(_306521_key)))) {
					return jule::new_ref<_1ab00dbcc_Data>();
				}
				jule::Ref<_1ab00dbcc_Data> _307021_val = this->self->_method_eval_expr_kind(_306321_pair->_field_val);
				if ((!(jule::real(_307021_val)))) {
					return jule::new_ref<_1ab00dbcc_Data>();
				}
				this->self->_field_s->_method_check_assign_type(false,_304732_m->_field_key,_306521_key,_306321_pair->_field_colon,true);
				this->self->_field_s->_method_check_assign_type(false,_304732_m->_field_val,_307021_val,_306321_pair->_field_colon,true);
				_304817_model->_field_entries=jule::append(_304817_model->_field_entries,jule::Slice<jule::Ref<_1ab33d083_KeyValPairExprModel>>({jule::new_struct<_1ab33d083_KeyValPairExprModel>(new( std::nothrow ) _1ab33d083_KeyValPairExprModel(_306521_key->_field_model,_307021_val->_field_model))}));
			}
			_iter_next_4444181232:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab00dbcc_expr = *_range_begin; goto _iter_begin_4444181232; }
			_iter_end_4444181232:;
		}
	}
	return jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_304732_m)),jule::Ref<_1ac6d02c0_TypeKind>(),true,jule::Bool(),false,false,jule::Bool(),jule::Any(_304817_model),false,jule::Ref<_1ac90c3ed_Const>()));
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_eval_brace_lit(jule::Ref<_1b61ca014_BraceLit> _309438_lit) {
	{
		if (!(((!(jule::real(this->self->_field_prefix)))))) { goto _case_end_4444203808; }
		_case_begin_4444203808:;
		{
			this->self->_method_push_err(_309438_lit->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1ab00dbcc_Data>();
		}
		goto _match_end_4444201088;
		_case_end_4444203808:;
		if (!((jule::real(this->self->_field_prefix->_method_map())))) { goto _case_end_4444204992; }
		_case_begin_4444204992:;
		{
			return this->self->_method_eval_map(this->self->_field_prefix->_method_map(),_309438_lit);
		}
		goto _match_end_4444201088;
		_case_end_4444204992:;
		if (!((jule::real(this->self->_field_prefix->_method_strct())))) { goto _case_end_4444204656; }
		_case_begin_4444204656:;
		{
			return this->self->_method_eval_struct_lit_explicit(this->self->_field_prefix->_method_strct(),_309438_lit->_field_exprs,_309438_lit->_field_token);
		}
		goto _match_end_4444201088;
		_case_end_4444204656:;
		_case_begin_4444201264:;
		{
			this->self->_method_push_err(_309438_lit->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1ab00dbcc_Data>();
		}
		goto _match_end_4444201088;
		_case_end_4444201264:;
		_match_end_4444201088:;
	}
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_eval_anon_fn(jule::Ref<_1b61ca014_FnDecl> _311235_decl) {
	_1ac6d02c0_TypeChecker _311317_tc = _1ac6d02c0_TypeChecker((*this)._field_s,(*this)._field_lookup,jule::Ref<_1ac6d02c0_Referencer>(),_1b61ec5ec_Token(),jule::Slice<jule::Ref<_1b61ca014_GenericDecl>>(),jule::Slice<jule::Ref<_1ac6d02c0_TypeAlias>>(),jule::Bool());
	jule::Ref<_1b557cd24_FnIns> _311717_ins = _311317_tc._method_build_fn(_311235_decl);
	_311717_ins->_field_anon=true;
	{
		auto _match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_1ab009de8_ScopeChecker>>())) { goto _case_end_4444218816; }
		_case_begin_4444218816:;
		{
			jule::Ref<_1ab009de8_ScopeChecker> _312221_sc = (*this)._field_lookup.operator jule::Ref<_1ab009de8_ScopeChecker>();
			jule::Ref<_1ab009de8_ScopeChecker> _312321_scc = _312221_sc->_method_new_child_checker();
			_312321_scc->_field_labels=jule::new_ref<jule::Slice<jule::Ref<_1ab009de8_ScopeLabel>>>(nullptr);
			_312321_scc->_field_gotos=jule::new_ref<jule::Slice<jule::Ref<_1ab009de8_ScopeGoto>>>(nullptr);
			jule::drop(_312321_scc->_field_owner);
			_312321_scc->_field_child_index=0LL;
			_312321_scc->_field_it=0LL;
			_312321_scc->_field_cse=0LL;
			_312321_scc->_field_owner=_311717_ins;
			(*this)._field_s->_method_check_fn_ins_sc(_311717_ins,_312321_scc);
		}
		goto _match_end_4444217712;
		_case_end_4444218816:;
		_case_begin_4444218704:;
		{
			(*this)._field_s->_method_check_fn_ins(_311717_ins);
		}
		goto _match_end_4444217712;
		_case_end_4444218704:;
		_match_end_4444217712:;
	}
	return jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_311717_ins)),jule::Ref<_1ac6d02c0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1ab33d083_AnonFnExprModel>(new( std::nothrow ) _1ab33d083_AnonFnExprModel(_311717_ins,(*this)._method_is_global()))),jule::Bool(),jule::Ref<_1ac90c3ed_Const>()));
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_eval_binop(jule::Ref<_1b61ca014_BinopExpr> _314634_op) {
	jule::Ref<_1ac6d02c0_TypeKind> _314717_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_314717_prefix;
	});
	_1ab00dbcc_BinopSolver _315117_bs = _1ab00dbcc_BinopSolver(this->self,jule::Ref<_1ab00dbcc_Data>(),jule::Ref<_1ab00dbcc_Data>(),_1b61ec5ec_Token());
	return _315117_bs._method_solve(_314634_op);
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_eval_ternary(jule::Ref<_1b61ca014_TernaryExpr> _315736_ter) {
	jule::Ref<_1ab00dbcc_Data> _315817_d = this->self->_method_eval_expr_kind(_315736_ter->_field_condition);
	if ((!(jule::real(_315817_d)))) {
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	jule::Ref<_1ac6d02c0_Prim> _316313_prim = _315817_d->_field_kind->_method_prim();
	if ((!(jule::real(_316313_prim))) || (!(_316313_prim->_method_is_bool()))) {
		this->self->_method_push_err(_315736_ter->_field_token,jule::Str("if conditions must be have boolean expression", 45),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	jule::Ref<_1ab00dbcc_Data> _316917_td = this->self->_method_eval_expr_kind(_315736_ter->_field_true_expr);
	if ((!(jule::real(_316917_td)))) {
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	if (_316917_td->_field_kind->_method_void()) {
		this->self->_method_push_err(_315736_ter->_field_token,jule::Str("void type cannot used for ternary operator", 42),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	jule::Ref<_1ac6d02c0_TypeKind> _317917_prefix = this->self->_field_prefix;
	this->self->_field_prefix=_316917_td->_field_kind;
	jule::Ref<_1ab00dbcc_Data> _318217_fd = this->self->_method_eval_expr_kind(_315736_ter->_field_false_expr);
	this->self->_field_prefix=_317917_prefix;
	if ((!(jule::real(_318217_fd)))) {
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	_1a8dc912c_AssignTypeChecker _318917_ac = _1a8dc912c_AssignTypeChecker(this->self->_field_s,_316917_td->_field_kind,_318217_fd,_315736_ter->_field_token,jule::Bool());
	if ((!(_318917_ac._method_check()))) {
		this->self->_method_push_suggestion(jule::Str("use same or compatible values for ternary expressions", 53),jule::Slice<jule::Any>({}));
	}
	if (_315817_d->_method_is_const()) {
		if (_315817_d->_field_constant->_method_read_bool()) {
			return _316917_td;
		}
		return _318217_fd;
	}
	jule::Ref<_1ab00dbcc_Data> _320617_r = jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data());
	_320617_r->_field_kind=_316917_td->_field_kind;
	_320617_r->_field_lvalue=_320617_r->_field_kind->_method_lvalue();
	_320617_r->_field_mutable=_320617_r->_field_kind->_method_mutable();
	_320617_r->_field_model=jule::Any(jule::new_struct<_1ab33d083_TernaryExprModel>(new( std::nothrow ) _1ab33d083_TernaryExprModel(_315817_d->_field_model,_316917_td->_field_model,_318217_fd->_field_model)));
	return _320617_r;
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_eval_expr_kind(jule::Any _321838_kind) {
	jule::Ref<_1ab00dbcc_Data> _321917_d = jule::new_ref<_1ab00dbcc_Data>();
	{
		auto _match_expr{ _321838_kind };
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_LitExpr>>())) { goto _case_end_4444275520; }
		_case_begin_4444275520:;
		{
			_321917_d=this->self->_method_eval_lit(_321838_kind.operator jule::Ref<_1b61ca014_LitExpr>());
		}
		goto _match_end_4444273344;
		_case_end_4444275520:;
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_IdentExpr>>())) { goto _case_end_4444274864; }
		_case_begin_4444274864:;
		{
			_321917_d=this->self->_method_eval_ident(_321838_kind.operator jule::Ref<_1b61ca014_IdentExpr>());
		}
		goto _match_end_4444273344;
		_case_end_4444274864:;
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_UnaryExpr>>())) { goto _case_end_4444274976; }
		_case_begin_4444274976:;
		{
			_321917_d=this->self->_method_eval_unary(_321838_kind.operator jule::Ref<_1b61ca014_UnaryExpr>());
		}
		goto _match_end_4444273344;
		_case_end_4444274976:;
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_VariadicExpr>>())) { goto _case_end_4444275088; }
		_case_begin_4444275088:;
		{
			_321917_d=this->self->_method_eval_variadic(_321838_kind.operator jule::Ref<_1b61ca014_VariadicExpr>());
		}
		goto _match_end_4444273344;
		_case_end_4444275088:;
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_UnsafeExpr>>())) { goto _case_end_4444276000; }
		_case_begin_4444276000:;
		{
			_321917_d=this->self->_method_eval_unsafe(_321838_kind.operator jule::Ref<_1b61ca014_UnsafeExpr>());
		}
		goto _match_end_4444273344;
		_case_end_4444276000:;
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_SliceExpr>>())) { goto _case_end_4444276112; }
		_case_begin_4444276112:;
		{
			_321917_d=this->self->_method_eval_slice_expr(_321838_kind.operator jule::Ref<_1b61ca014_SliceExpr>());
		}
		goto _match_end_4444273344;
		_case_end_4444276112:;
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_IndexingExpr>>())) { goto _case_end_4444276224; }
		_case_begin_4444276224:;
		{
			_321917_d=this->self->_method_eval_indexing(_321838_kind.operator jule::Ref<_1b61ca014_IndexingExpr>());
		}
		goto _match_end_4444273344;
		_case_end_4444276224:;
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_SlicingExpr>>())) { goto _case_end_4444276336; }
		_case_begin_4444276336:;
		{
			_321917_d=this->self->_method_eval_slicing(_321838_kind.operator jule::Ref<_1b61ca014_SlicingExpr>());
		}
		goto _match_end_4444273344;
		_case_end_4444276336:;
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_CastExpr>>())) { goto _case_end_4444276448; }
		_case_begin_4444276448:;
		{
			_321917_d=this->self->_method_eval_cast(_321838_kind.operator jule::Ref<_1b61ca014_CastExpr>());
		}
		goto _match_end_4444273344;
		_case_end_4444276448:;
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_NsSelectionExpr>>())) { goto _case_end_4444276560; }
		_case_begin_4444276560:;
		{
			_321917_d=this->self->_method_eval_ns_selection(_321838_kind.operator jule::Ref<_1b61ca014_NsSelectionExpr>());
		}
		goto _match_end_4444273344;
		_case_end_4444276560:;
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_StructLit>>())) { goto _case_end_4444276672; }
		_case_begin_4444276672:;
		{
			_321917_d=this->self->_method_eval_struct_lit(_321838_kind.operator jule::Ref<_1b61ca014_StructLit>());
		}
		goto _match_end_4444273344;
		_case_end_4444276672:;
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_TypeDecl>>())) { goto _case_end_4444276784; }
		_case_begin_4444276784:;
		{
			_321917_d=this->self->_method_eval_type(_321838_kind.operator jule::Ref<_1b61ca014_TypeDecl>());
		}
		goto _match_end_4444273344;
		_case_end_4444276784:;
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_FnCallExpr>>())) { goto _case_end_4444276896; }
		_case_begin_4444276896:;
		{
			_321917_d=this->self->_method_eval_fn_call(_321838_kind.operator jule::Ref<_1b61ca014_FnCallExpr>());
		}
		goto _match_end_4444273344;
		_case_end_4444276896:;
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_SubIdentExpr>>())) { goto _case_end_4444277008; }
		_case_begin_4444277008:;
		{
			_321917_d=this->self->_method_eval_sub_ident(_321838_kind.operator jule::Ref<_1b61ca014_SubIdentExpr>());
		}
		goto _match_end_4444273344;
		_case_end_4444277008:;
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_TupleExpr>>())) { goto _case_end_4444277120; }
		_case_begin_4444277120:;
		{
			_321917_d=this->self->_method_eval_tuple(_321838_kind.operator jule::Ref<_1b61ca014_TupleExpr>());
		}
		goto _match_end_4444273344;
		_case_end_4444277120:;
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_BraceLit>>())) { goto _case_end_4444277232; }
		_case_begin_4444277232:;
		{
			_321917_d=this->self->_method_eval_brace_lit(_321838_kind.operator jule::Ref<_1b61ca014_BraceLit>());
		}
		goto _match_end_4444273344;
		_case_end_4444277232:;
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_FnDecl>>())) { goto _case_end_4444277360; }
		_case_begin_4444277360:;
		{
			_321917_d=this->self->_method_eval_anon_fn(_321838_kind.operator jule::Ref<_1b61ca014_FnDecl>());
		}
		goto _match_end_4444273344;
		_case_end_4444277360:;
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_BinopExpr>>())) { goto _case_end_4444277488; }
		_case_begin_4444277488:;
		{
			_321917_d=this->self->_method_eval_binop(_321838_kind.operator jule::Ref<_1b61ca014_BinopExpr>());
		}
		goto _match_end_4444273344;
		_case_end_4444277488:;
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_TernaryExpr>>())) { goto _case_end_4444277616; }
		_case_begin_4444277616:;
		{
			_321917_d=this->self->_method_eval_ternary(_321838_kind.operator jule::Ref<_1b61ca014_TernaryExpr>());
		}
		goto _match_end_4444273344;
		_case_end_4444277616:;
		_case_begin_4444274128:;
		{
			jule::drop(_321917_d);
		}
		goto _match_end_4444273344;
		_case_end_4444274128:;
		_match_end_4444273344:;
	}
	if ((!(jule::real(_321917_d)))) {
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	if ((!(jule::real(_321917_d->_field_kind)))) {
		return _321917_d;
	}
	if ((((!(jule::real(_321917_d->_field_cast_kind))) && _321917_d->_method_is_const()) && (!(_321917_d->_field_is_rune))) && jule::real(_321917_d->_field_kind->_method_prim())) {
		{
			if (!((_321917_d->_field_constant->_method_is_i64()))) { goto _case_end_4444312976; }
			_case_begin_4444312976:;
			{
				if (_1a8dc912c_int_assignable(jule::Str("int", 3),_321917_d)) {
					_321917_d->_field_kind->_field_kind=_1ac6d02c0_build_prim_type(jule::Str("int", 3));
					_321917_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_321917_d->_field_constant->_method_as_i64()));
				}
			}
			goto _match_end_4444312752;
			_case_end_4444312976:;
			if (!((_321917_d->_field_constant->_method_is_u64()))) { goto _case_end_4444313104; }
			_case_begin_4444313104:;
			{
				if (_1a8dc912c_int_assignable(jule::Str("uint", 4),_321917_d)) {
					_321917_d->_field_kind->_field_kind=_1ac6d02c0_build_prim_type(jule::Str("uint", 4));
					_321917_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_321917_d->_field_constant->_method_as_u64()));
				}
			}
			goto _match_end_4444312752;
			_case_end_4444313104:;
			_match_end_4444312752:;
		}
	}
	if ((!(_321917_d->_field_decl))) {
		if ((((((jule::real(this->self->_field_prefix) && (!(jule::real(_321917_d->_field_cast_kind)))) && (!(_321917_d->_field_variadiced))) && (!(_321917_d->_field_lvalue))) && (!(_321917_d->_method_is_const()))) && jule::real(_321917_d->_field_kind->_method_prim())) && _1ac92d7e8_is_num(_321917_d->_field_kind->_method_prim()->_field_kind)) {
			_321917_d->_field_cast_kind=_321917_d->_field_kind;
		}
		_1ab00dbcc_apply_cast_kind(_321917_d);
		if ((!(jule::real(_321917_d->_field_kind->_method_prim()))) || (!(_321917_d->_field_kind->_method_prim()->_method_is_any()))) {
			if ((jule::real(this->self->_field_prefix) && jule::real(this->self->_field_prefix->_method_prim())) && this->self->_field_prefix->_method_prim()->_method_is_any()) {
				_321917_d->_field_cast_kind=this->self->_field_prefix;
				_1ab00dbcc_apply_cast_kind_model(_321917_d);
				jule::drop(_321917_d->_field_cast_kind);
			}
		}
	}
	return _321917_d;
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_eval(jule::Ref<_1b61ca014_Expr> _329528_expr) {
	jule::Ref<_1ab00dbcc_Data> _329617_d = this->self->_method_eval_expr_kind(_329528_expr->_field_kind);
	if ((!(jule::real(_329617_d))) || (!(jule::real(_329617_d->_field_kind)))) {
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	{
		if (!((jule::real(_329617_d->_field_kind->_method_fnc())))) { goto _case_end_4444340736; }
		_case_begin_4444340736:;
		{
			jule::Ref<_1b557cd24_FnIns> _330321_f = _329617_d->_field_kind->_method_fnc();
			if (_330321_f->_method_is_builtin()) {
				goto _match_end_4444340496;
			}
			if (_330321_f->_field_generics.len() != _330321_f->_field_decl->_field_generics.len()) {
				this->self->_field_s->_method_push_err(_329528_expr->_field_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>({}));
			}
			if (_330321_f->_field_decl->_method_is_method()) {
				this->self->_field_s->_method_push_err(_329528_expr->_field_token,jule::Str("methods should be invoked", 25),jule::Slice<jule::Any>({}));
			}
		}
		goto _match_end_4444340496;
		_case_end_4444340736:;
		_match_end_4444340496:;
	}
	return _329617_d;
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_Eval::_method_eval_expr(jule::Ref<_1b61ca014_Expr> _332333_expr) {
	jule::Ref<_1ab00dbcc_Data> _332417_d = this->self->_method_eval(_332333_expr);
	{
		if (!(((!(jule::real(_332417_d)))))) { goto _case_end_4444355264; }
		_case_begin_4444355264:;
		{
			return jule::new_ref<_1ab00dbcc_Data>();
		}
		goto _match_end_4444353680;
		_case_end_4444355264:;
		if (!((_332417_d->_field_decl))) { goto _case_end_4444355616; }
		_case_begin_4444355616:;
		{
			this->self->_method_push_err(_332333_expr->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1ab00dbcc_Data>();
		}
		goto _match_end_4444353680;
		_case_end_4444355616:;
		_case_begin_4444353808:;
		{
			return _332417_d;
		}
		goto _match_end_4444353680;
		_case_end_4444353808:;
		_match_end_4444353680:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab00dbcc_Eval &_Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "owner:" << _Src._field_owner;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ac6d02c0_TypeKind::_method_to_str(void) {
	if ((*this)._method_is_nil()) {
		return jule::Str("nil", 3);
	}
	jule::Str _6317_kind = jule::Str("", 0);
	if ((*this)._field_variadic) {
		_6317_kind+=jule::Str("...", 3);
	}
	if ((*this)._method_cpp_linked()) {
		_6317_kind+=jule::Str("cpp.", 4) + (*this)._field_cpp_ident;
	} else {
		_6317_kind+=(*this)._field_kind.get()._method_to_str();
	}
	return _6317_kind;
}



inline jule::Bool _1ac6d02c0_TypeKind::_method_equals(jule::Ref<_1ac6d02c0_TypeKind> _7821_other) {
	if ((*this)._method_is_nil()) {
		return _7821_other->_method_is_nil();
	}
	if ((*this)._method_cpp_linked()) {
		if ((!(_7821_other->_method_cpp_linked()))) {
			return false;
		}
		return (*this)._field_cpp_ident == _7821_other->_field_cpp_ident;
	}
	return (*this)._field_kind.get()._method_equals(_7821_other);
}



inline jule::Ref<_1ac6d02c0_TypeKind> _1ac6d02c0_TypeKind::_method_clone(void) {
	if ((!(jule::real(this->self)))) {
		return jule::new_ref<_1ac6d02c0_TypeKind>();
	}
	jule::Ref<_1ac6d02c0_TypeKind> _10117_kind = jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(this->self->_field_cpp_ident,jule::Bool(),this->self->_field_kind));
	return _10117_kind;
}



inline jule::Bool _1ac6d02c0_TypeKind::_method_cpp_linked(void) {
	return (*this)._field_cpp_ident.len() != 0LL;
}



inline jule::Bool _1ac6d02c0_TypeKind::_method_is_nil(void) {
	return (*this)._field_kind == nullptr;
}



inline jule::Bool _1ac6d02c0_TypeKind::_method_void(void) {
	jule::Ref<_1ac6d02c0_Prim> _11613_prim = (*((&((*this)))))._method_prim();
	return jule::real(_11613_prim) && (_11613_prim->_method_to_str() == jule::Str("void", 4));
}



inline jule::Bool _1ac6d02c0_TypeKind::_method_lvalue(void) {
	{
		_1ac6d02c0_TypeKind* _12321__self = (&((*this)));
		return ((jule::real(_12321__self->_method_ref()) || jule::real(_12321__self->_method_ptr())) || jule::real(_12321__self->_method_slc())) || jule::real(_12321__self->_method_map());
	}
}



inline jule::Bool _1ac6d02c0_TypeKind::_method_mutable(void) {
	{
		_1ac6d02c0_TypeKind* _13521__self = (&((*this)));
		if (jule::real(_13521__self->_method_strct())) {
			return _13521__self->_method_strct()->_field_mutable;
		}
		if (jule::real(_13521__self->_method_trt())) {
			return _13521__self->_method_trt()->_field_mutable;
		}
		if (jule::real(_13521__self->_method_prim())) {
			jule::Ref<_1ac6d02c0_Prim> _14421_p = _13521__self->_method_prim();
			return _14421_p->_method_is_any();
		}
		if (jule::real(_13521__self->_method_arr())) {
			return _13521__self->_method_arr()->_field_elem->_method_mutable();
		}
		return (jule::real(_13521__self->_method_slc()) || jule::real(_13521__self->_method_ptr())) || jule::real(_13521__self->_method_ref());
	}
}



inline jule::Bool _1ac6d02c0_TypeKind::_method_nil_compatible(void) {
	{
		_1ac6d02c0_TypeKind* _15921__self = (&((*this)));
		jule::Ref<_1ac6d02c0_Prim> _16117_prim = _15921__self->_method_prim();
		if (jule::real(_16117_prim) && _16117_prim->_method_is_any()) {
			return true;
		}
		return ((((_15921__self->_method_is_nil() || jule::real(_15921__self->_method_fnc())) || jule::real(_15921__self->_method_ptr())) || jule::real(_15921__self->_method_trt())) || jule::real(_15921__self->_method_slc())) || jule::real(_15921__self->_method_map());
	}
}



inline jule::Bool _1ac6d02c0_TypeKind::_method_supports_cloning(void) {
	{
		_1ac6d02c0_TypeKind* _17821__self = (&((*this)));
		{
			if (!((jule::real(_17821__self->_method_prim())))) { goto _case_end_4444870176; }
			_case_begin_4444870176:;
			{
				return (!(_17821__self->_method_prim()->_method_is_any()));
			}
			goto _match_end_4444869584;
			_case_end_4444870176:;
			if (!((jule::real(_17821__self->_method_enm())))) { goto _case_end_4444870288; }
			_case_begin_4444870288:;
			{
				return true;
			}
			goto _match_end_4444869584;
			_case_end_4444870288:;
			if (!((jule::real(_17821__self->_method_fnc())))) { goto _case_end_4444871408; }
			_case_begin_4444871408:;
			{
				return true;
			}
			goto _match_end_4444869584;
			_case_end_4444871408:;
			if (!((jule::real(_17821__self->_method_ptr())))) { goto _case_end_4444871520; }
			_case_begin_4444871520:;
			{
				return true;
			}
			goto _match_end_4444869584;
			_case_end_4444871520:;
			if (!((jule::real(_17821__self->_method_slc())))) { goto _case_end_4444871632; }
			_case_begin_4444871632:;
			{
				return _17821__self->_method_slc()->_field_elem->_method_supports_cloning();
			}
			goto _match_end_4444869584;
			_case_end_4444871632:;
			if (!((jule::real(_17821__self->_method_map())))) { goto _case_end_4444871744; }
			_case_begin_4444871744:;
			{
				jule::Ref<_1ac6d02c0_Map> _19221_m = _17821__self->_method_map();
				return _19221_m->_field_key->_method_supports_cloning() && _19221_m->_field_val->_method_supports_cloning();
			}
			goto _match_end_4444869584;
			_case_end_4444871744:;
			if (!((jule::real(_17821__self->_method_arr())))) { goto _case_end_4444870768; }
			_case_begin_4444870768:;
			{
				return _17821__self->_method_arr()->_field_elem->_method_supports_cloning();
			}
			goto _match_end_4444869584;
			_case_end_4444870768:;
			if (!((jule::real(_17821__self->_method_ref())))) { goto _case_end_4444870880; }
			_case_begin_4444870880:;
			{
				return _17821__self->_method_ref()->_field_elem->_method_supports_cloning();
			}
			goto _match_end_4444869584;
			_case_end_4444870880:;
			if (!((jule::real(_17821__self->_method_strct())))) { goto _case_end_4444871008; }
			_case_begin_4444871008:;
			{
				jule::Ref<_1b5e07a00_StructIns> _20225_s = _17821__self->_method_strct();
				if ((!(_20225_s->_field_mutable))) {
					return true;
				}
				if (((!(jule::real(_20225_s->_field_decl))) || _20225_s->_field_decl->_field_cpp_linked) || (!(_20225_s->_field_decl->_method_is_derives(jule::Str("Clone", 5))))) {
					return false;
				}
				return true;
			}
			goto _match_end_4444869584;
			_case_end_4444871008:;
			_case_begin_4444869712:;
			{
				return false;
			}
			goto _match_end_4444869584;
			_case_end_4444869712:;
			_match_end_4444869584:;
		}
	}
}



inline jule::Bool _1ac6d02c0_TypeKind::_method_variadicable(void) {
	{
		_1ac6d02c0_TypeKind* _22021__self = (&((*this)));
		return jule::real(_22021__self->_method_slc());
	}
}



inline jule::Ref<_1ac6d02c0_Prim> _1ac6d02c0_TypeKind::_method_prim(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1ac6d02c0_Prim>>())) { goto _case_end_4444894640; }
		_case_begin_4444894640:;
		{
			return (*this)._field_kind.operator jule::Ref<_1ac6d02c0_Prim>();
		}
		goto _match_end_4444883952;
		_case_end_4444894640:;
		_case_begin_4444891712:;
		{
			return jule::new_ref<_1ac6d02c0_Prim>();
		}
		goto _match_end_4444883952;
		_case_end_4444891712:;
		_match_end_4444883952:;
	}
}



inline jule::Ref<_1ac6d02c0_Ref> _1ac6d02c0_TypeKind::_method_ref(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1ac6d02c0_Ref>>())) { goto _case_end_4444898128; }
		_case_begin_4444898128:;
		{
			return (*this)._field_kind.operator jule::Ref<_1ac6d02c0_Ref>();
		}
		goto _match_end_4444896304;
		_case_end_4444898128:;
		_case_begin_4444893360:;
		{
			return jule::new_ref<_1ac6d02c0_Ref>();
		}
		goto _match_end_4444896304;
		_case_end_4444893360:;
		_match_end_4444896304:;
	}
}



inline jule::Ref<_1ac6d02c0_Ptr> _1ac6d02c0_TypeKind::_method_ptr(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1ac6d02c0_Ptr>>())) { goto _case_end_4444901616; }
		_case_begin_4444901616:;
		{
			return (*this)._field_kind.operator jule::Ref<_1ac6d02c0_Ptr>();
		}
		goto _match_end_4444899792;
		_case_end_4444901616:;
		_case_begin_4444896672:;
		{
			return jule::new_ref<_1ac6d02c0_Ptr>();
		}
		goto _match_end_4444899792;
		_case_end_4444896672:;
		_match_end_4444899792:;
	}
}



inline jule::Ref<_1a909ac6b_Enum> _1ac6d02c0_TypeKind::_method_enm(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1a909ac6b_Enum>>())) { goto _case_end_4444905104; }
		_case_begin_4444905104:;
		{
			return (*this)._field_kind.operator jule::Ref<_1a909ac6b_Enum>();
		}
		goto _match_end_4444903280;
		_case_end_4444905104:;
		_case_begin_4444900160:;
		{
			return jule::new_ref<_1a909ac6b_Enum>();
		}
		goto _match_end_4444903280;
		_case_end_4444900160:;
		_match_end_4444903280:;
	}
}



inline jule::Ref<_1ac6d02c0_Arr> _1ac6d02c0_TypeKind::_method_arr(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1ac6d02c0_Arr>>())) { goto _case_end_4444908656; }
		_case_begin_4444908656:;
		{
			return (*this)._field_kind.operator jule::Ref<_1ac6d02c0_Arr>();
		}
		goto _match_end_4444906880;
		_case_end_4444908656:;
		_case_begin_4444903632:;
		{
			return jule::new_ref<_1ac6d02c0_Arr>();
		}
		goto _match_end_4444906880;
		_case_end_4444903632:;
		_match_end_4444906880:;
	}
}



inline jule::Ref<_1ac6d02c0_Slc> _1ac6d02c0_TypeKind::_method_slc(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1ac6d02c0_Slc>>())) { goto _case_end_4444912144; }
		_case_begin_4444912144:;
		{
			return (*this)._field_kind.operator jule::Ref<_1ac6d02c0_Slc>();
		}
		goto _match_end_4444910320;
		_case_end_4444912144:;
		_case_begin_4444907232:;
		{
			return jule::new_ref<_1ac6d02c0_Slc>();
		}
		goto _match_end_4444910320;
		_case_end_4444907232:;
		_match_end_4444910320:;
	}
}



inline jule::Ref<_1b557cd24_FnIns> _1ac6d02c0_TypeKind::_method_fnc(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1b557cd24_FnIns>>())) { goto _case_end_4444932272; }
		_case_begin_4444932272:;
		{
			return (*this)._field_kind.operator jule::Ref<_1b557cd24_FnIns>();
		}
		goto _match_end_4444912720;
		_case_end_4444932272:;
		_case_begin_4444910592:;
		{
			return jule::new_ref<_1b557cd24_FnIns>();
		}
		goto _match_end_4444912720;
		_case_end_4444910592:;
		_match_end_4444912720:;
	}
}



inline jule::Ref<_1b5e07a00_StructIns> _1ac6d02c0_TypeKind::_method_strct(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1b5e07a00_StructIns>>())) { goto _case_end_4444935760; }
		_case_begin_4444935760:;
		{
			return (*this)._field_kind.operator jule::Ref<_1b5e07a00_StructIns>();
		}
		goto _match_end_4444933936;
		_case_end_4444935760:;
		_case_begin_4444930960:;
		{
			return jule::new_ref<_1b5e07a00_StructIns>();
		}
		goto _match_end_4444933936;
		_case_end_4444930960:;
		_match_end_4444933936:;
	}
}



inline jule::Ref<_1aaee9091_Trait> _1ac6d02c0_TypeKind::_method_trt(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1aaee9091_Trait>>())) { goto _case_end_4444939312; }
		_case_begin_4444939312:;
		{
			return (*this)._field_kind.operator jule::Ref<_1aaee9091_Trait>();
		}
		goto _match_end_4444937536;
		_case_end_4444939312:;
		_case_begin_4444934288:;
		{
			return jule::new_ref<_1aaee9091_Trait>();
		}
		goto _match_end_4444937536;
		_case_end_4444934288:;
		_match_end_4444937536:;
	}
}



inline jule::Ref<_1ac6d02c0_Map> _1ac6d02c0_TypeKind::_method_map(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1ac6d02c0_Map>>())) { goto _case_end_4444942800; }
		_case_begin_4444942800:;
		{
			return (*this)._field_kind.operator jule::Ref<_1ac6d02c0_Map>();
		}
		goto _match_end_4444940976;
		_case_end_4444942800:;
		_case_begin_4444937888:;
		{
			return jule::new_ref<_1ac6d02c0_Map>();
		}
		goto _match_end_4444940976;
		_case_end_4444937888:;
		_match_end_4444940976:;
	}
}



inline jule::Ref<_1ac6d02c0_Tuple> _1ac6d02c0_TypeKind::_method_tup(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1ac6d02c0_Tuple>>())) { goto _case_end_4444946352; }
		_case_begin_4444946352:;
		{
			return (*this)._field_kind.operator jule::Ref<_1ac6d02c0_Tuple>();
		}
		goto _match_end_4444944528;
		_case_end_4444946352:;
		_case_begin_4444941344:;
		{
			return jule::new_ref<_1ac6d02c0_Tuple>();
		}
		goto _match_end_4444944528;
		_case_end_4444941344:;
		_match_end_4444944528:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1ac6d02c0_TypeKind &_Src) {
	_Stream << "TypeKind{";
	_Stream << "cpp_ident:" << _Src._field_cpp_ident << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ac6d02c0_TypeSymbol::_method_checked(void) {
	return jule::real((*this)._field_kind);
}



inline void _1ac6d02c0_TypeSymbol::_method_remove_kind(void) {
	jule::drop((*this)._field_kind);
}







std::ostream &operator<<(std::ostream &_Stream, const _1ac6d02c0_TypeSymbol &_Src) {
	_Stream << "TypeSymbol{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ac6d02c0_Prim::_method_to_str(void) {
	return (*this)._field_kind;
}



inline jule::Bool _1ac6d02c0_Prim::_method_equals(jule::Ref<_1ac6d02c0_TypeKind> _33921_other) {
	jule::Ref<_1ac6d02c0_Prim> _34013_prim = (_33921_other).alloc->_method_prim();
	if ((!(jule::real(_34013_prim)))) {
		return false;
	}
	return _1ac90e3bc_real_kind_of((*this)._field_kind) == _1ac90e3bc_real_kind_of(_34013_prim->_field_kind);
}



inline jule::Bool _1ac6d02c0_Prim::_method_is_i8(void) {
	return (*this)._field_kind == jule::Str("i8", 2);
}



inline jule::Bool _1ac6d02c0_Prim::_method_is_i16(void) {
	return (*this)._field_kind == jule::Str("i16", 3);
}



inline jule::Bool _1ac6d02c0_Prim::_method_is_i32(void) {
	return (*this)._field_kind == jule::Str("i32", 3);
}



inline jule::Bool _1ac6d02c0_Prim::_method_is_i64(void) {
	return (*this)._field_kind == jule::Str("i64", 3);
}



inline jule::Bool _1ac6d02c0_Prim::_method_is_u8(void) {
	return (*this)._field_kind == jule::Str("u8", 2);
}



inline jule::Bool _1ac6d02c0_Prim::_method_is_u16(void) {
	return (*this)._field_kind == jule::Str("u16", 3);
}



inline jule::Bool _1ac6d02c0_Prim::_method_is_u32(void) {
	return (*this)._field_kind == jule::Str("u32", 3);
}



inline jule::Bool _1ac6d02c0_Prim::_method_is_u64(void) {
	return (*this)._field_kind == jule::Str("u64", 3);
}



inline jule::Bool _1ac6d02c0_Prim::_method_is_f32(void) {
	return (*this)._field_kind == jule::Str("f32", 3);
}



inline jule::Bool _1ac6d02c0_Prim::_method_is_f64(void) {
	return (*this)._field_kind == jule::Str("f64", 3);
}



inline jule::Bool _1ac6d02c0_Prim::_method_is_int(void) {
	return (*this)._field_kind == jule::Str("int", 3);
}



inline jule::Bool _1ac6d02c0_Prim::_method_is_uint(void) {
	return (*this)._field_kind == jule::Str("uint", 4);
}



inline jule::Bool _1ac6d02c0_Prim::_method_is_uintptr(void) {
	return (*this)._field_kind == jule::Str("uintptr", 7);
}



inline jule::Bool _1ac6d02c0_Prim::_method_is_bool(void) {
	return (*this)._field_kind == jule::Str("bool", 4);
}



inline jule::Bool _1ac6d02c0_Prim::_method_is_str(void) {
	return (*this)._field_kind == jule::Str("str", 3);
}



inline jule::Bool _1ac6d02c0_Prim::_method_is_any(void) {
	return (*this)._field_kind == jule::Str("any", 3);
}







std::ostream &operator<<(std::ostream &_Stream, const _1ac6d02c0_Prim &_Src) {
	_Stream << "Prim{";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ac6d02c0_Ref::_method_to_str(void) {
	return jule::Str("&", 1) + (*this)._field_elem->_method_to_str();
}



inline jule::Bool _1ac6d02c0_Ref::_method_equals(jule::Ref<_1ac6d02c0_TypeKind> _40821_other) {
	jule::Ref<_1ac6d02c0_Ref> _40913_ref = (_40821_other).alloc->_method_ref();
	if ((!(jule::real(_40913_ref)))) {
		return false;
	}
	return (*this)._field_elem->_method_equals(_40913_ref->_field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, const _1ac6d02c0_Ref &_Src) {
	_Stream << "Ref{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ac6d02c0_Slc::_method_to_str(void) {
	return jule::Str("[]", 2) + (*this)._field_elem->_method_to_str();
}



inline jule::Bool _1ac6d02c0_Slc::_method_equals(jule::Ref<_1ac6d02c0_TypeKind> _42721_other) {
	jule::Ref<_1ac6d02c0_Slc> _42813_slc = (_42721_other).alloc->_method_slc();
	if ((!(jule::real(_42813_slc)))) {
		return false;
	}
	return (*this)._field_elem->_method_equals(_42813_slc->_field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, const _1ac6d02c0_Slc &_Src) {
	_Stream << "Slc{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ac6d02c0_Tuple::_method_to_str(void) {
	jule::Str _44417_s = jule::Str("(", 1);
	_44417_s+=(*this)._field_types[0LL]->_method_to_str();
	{
		auto _range_expr = (*this)._field_types.slice(1LL);
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ac6d02c0_TypeKind> _1ac6d02c0_t = *_range_begin;
			_iter_begin_4445004288:;
			{
				_44417_s+=jule::Str(",", 1);
				_44417_s+=_1ac6d02c0_t->_method_to_str();
			}
			_iter_next_4445004288:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac6d02c0_t = *_range_begin; goto _iter_begin_4445004288; }
			_iter_end_4445004288:;
		}
	}
	_44417_s+=jule::Str(")", 1);
	return _44417_s;
}



inline jule::Bool _1ac6d02c0_Tuple::_method_equals(jule::Ref<_1ac6d02c0_TypeKind> _45521_other) {
	jule::Ref<_1ac6d02c0_Tuple> _45613_tup = (_45521_other).alloc->_method_tup();
	if ((!(jule::real(_45613_tup)))) {
		return false;
	}
	if ((*this)._field_types.len() != _45613_tup->_field_types.len()) {
		return false;
	}
	jule::Int _46517_i = 0LL;
	_iter_begin_4445011216:;
	if (!(_46517_i < (*this)._field_types.len())) { goto _iter_end_4445011216; }
	{
		if ((!((*this)._field_types[static_cast<jule::Int>(_46517_i)]->_method_equals(_45613_tup->_field_types[static_cast<jule::Int>(_46517_i)])))) {
			return false;
		}
	}
	_iter_next_4445011216:;
	(_46517_i)++;
	goto _iter_begin_4445011216;
	_iter_end_4445011216:;
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ac6d02c0_Tuple &_Src) {
	_Stream << "Tuple{";
	_Stream << "types:" << _Src._field_types;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ac6d02c0_Map::_method_to_str(void) {
	jule::Str _48517_s = jule::Str("[", 1);
	_48517_s+=(*this)._field_key->_method_to_str();
	_48517_s+=jule::Str(":", 1);
	_48517_s+=(*this)._field_val->_method_to_str();
	_48517_s+=jule::Str("]", 1);
	return _48517_s;
}



inline jule::Bool _1ac6d02c0_Map::_method_equals(jule::Ref<_1ac6d02c0_TypeKind> _49421_other) {
	jule::Ref<_1ac6d02c0_Map> _49513_map = (_49421_other).alloc->_method_map();
	if ((!(jule::real(_49513_map)))) {
		return false;
	}
	return (*this)._field_key->_method_equals(_49513_map->_field_key) && (*this)._field_val->_method_equals(_49513_map->_field_val);
}







std::ostream &operator<<(std::ostream &_Stream, const _1ac6d02c0_Map &_Src) {
	_Stream << "Map{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ac6d02c0_Arr::_method_to_str(void) {
	jule::Str _51317_s = jule::Str("[", 1);
	_51317_s+=_1b59a1be8_itoa((*this)._field_n);
	_51317_s+=jule::Str("]", 1);
	_51317_s+=(*this)._field_elem->_method_to_str();
	return _51317_s;
}



inline jule::Bool _1ac6d02c0_Arr::_method_equals(jule::Ref<_1ac6d02c0_TypeKind> _52121_other) {
	jule::Ref<_1ac6d02c0_Arr> _52213_arr = (_52121_other).alloc->_method_arr();
	if ((!(jule::real(_52213_arr)))) {
		return false;
	}
	return ((*this)._field_n == _52213_arr->_field_n) && (*this)._field_elem->_method_equals(_52213_arr->_field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, const _1ac6d02c0_Arr &_Src) {
	_Stream << "Arr{";
	_Stream << "auto:" << _Src._field_auto << ", ";
	_Stream << "n:" << _Src._field_n << ", ";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ac6d02c0_Ptr::_method_to_str(void) {
	if ((*this)._method_is_unsafe()) {
		return jule::Str("*unsafe", 7);
	}
	return jule::Str("*", 1) + (*this)._field_elem->_method_to_str();
}



inline jule::Bool _1ac6d02c0_Ptr::_method_equals(jule::Ref<_1ac6d02c0_TypeKind> _54521_other) {
	jule::Ref<_1ac6d02c0_Ptr> _54613_ptr = (_54521_other).alloc->_method_ptr();
	if ((!(jule::real(_54613_ptr)))) {
		return false;
	}
	return (*this)._field_elem->_method_equals(_54613_ptr->_field_elem);
}



inline jule::Bool _1ac6d02c0_Ptr::_method_is_unsafe(void) {
	return (!(jule::real((*this)._field_elem)));
}







std::ostream &operator<<(std::ostream &_Stream, const _1ac6d02c0_Ptr &_Src) {
	_Stream << "Ptr{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ac6d02c0_Referencer &_Src) {
	_Stream << "Referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_1ab194c20_ImportInfo> _1b615c804_PlainImporter::_method_get_import(jule::Str _10033_path) {
	{
		auto _range_expr = (*this)._field_all_packages;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab194c20_ImportInfo> _1b615c804_p = *_range_begin;
			_iter_begin_4445670368:;
			{
				if (_1b615c804_p->_field_path == _10033_path) {
					return _1b615c804_p;
				}
			}
			_iter_next_4445670368:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b615c804_p = *_range_begin; goto _iter_begin_4445670368; }
			_iter_end_4445670368:;
		}
	}
	return jule::new_ref<_1ab194c20_ImportInfo>();
}



inline std::tuple<jule::Slice<jule::Ref<_1b61d1d62_Ast>>,jule::Slice<_1cdeeb191_Log>> _1b615c804_PlainImporter::_method_import_package(jule::Str _11037_path) {
	jule::Slice<jule::Ref<_1b61b1e74_DirEntry>> _11114_dirents;
	jule::Str _11123_err_msg;
	std::tie(_11114_dirents,_11123_err_msg) = _1b615c804_read_package_dirents(_11037_path);
	if (_11123_err_msg != jule::Str("", 0)) {
		jule::Slice<_1cdeeb191_Log> _11321_errors = jule::Slice<_1cdeeb191_Log>({_1b615c804_flat_compiler_err(_11123_err_msg)});
		return std::make_tuple(nullptr,_11321_errors);
	}
	jule::Slice<jule::Ref<_1b61d1d62_Ast>> _11717_asts = jule::Slice<jule::Ref<_1b61d1d62_Ast>>::alloc(0LL,static_cast<jule::Int>(static_cast<jule::I64>(_11114_dirents.len())));
	{
		auto _range_expr = _11114_dirents;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b61b1e74_DirEntry> _1b615c804_dirent = *_range_begin;
			_iter_begin_4445675648:;
			{
				jule::Str _11917__path = _1cdd187e9_join(jule::Slice<jule::Str>({_11037_path,_1b615c804_dirent->_field_name}));
				jule::Ref<_1b61ece27_File> _12021_file = _1b61ece27_new_file_set(_11917__path);
				_12021_file->_method_fill(_1b615c804_read_buff(_12021_file->_method_path()));
				jule::Slice<_1cdeeb191_Log> _12221_errors = _1b62ba104_lex(_12021_file);
				if (_12221_errors.len() > 0LL) {
					return std::make_tuple(nullptr,_12221_errors);
				}
				jule::Ref<_1a9b97966_FileInfo> _12721_finfo = _1a9b97966_parse_file(_12021_file);
				if (_12721_finfo->_field_errors.len() > 0LL) {
					return std::make_tuple(nullptr,_12721_finfo->_field_errors);
				}
				if ((!(_1b610d72d_is_pass_file_annotation(_1b615c804_dirent->_field_name)))) {
					goto _iter_next_4445675648;
				}
				if ((!(_1b615c804_is_pass_build_directives(_12721_finfo->_field_ast)))) {
					goto _iter_next_4445675648;
				}
				_11717_asts=jule::append(_11717_asts,jule::Slice<jule::Ref<_1b61d1d62_Ast>>({_12721_finfo->_field_ast}));
			}
			_iter_next_4445675648:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b615c804_dirent = *_range_begin; goto _iter_begin_4445675648; }
			_iter_end_4445675648:;
		}
	}
	return std::make_tuple(_11717_asts,nullptr);
}



inline void _1b615c804_PlainImporter::_method_imported(jule::Ref<_1ab194c20_ImportInfo> _14835_imp) {
	{
		auto _range_expr = (*this)._field_all_packages;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab194c20_ImportInfo> _1b615c804_p = *_range_begin;
			_iter_begin_4445702160:;
			{
				if ((_1b615c804_p->_field_cpp_linked == _14835_imp->_field_cpp_linked) && (_1b615c804_p->_field_link_path == _14835_imp->_field_link_path)) {
					return;
				}
			}
			_iter_next_4445702160:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b615c804_p = *_range_begin; goto _iter_begin_4445702160; }
			_iter_end_4445702160:;
		}
	}
	(*this)._field_all_packages=jule::append((*this)._field_all_packages,jule::Slice<jule::Ref<_1ab194c20_ImportInfo>>({_14835_imp}));
}







std::ostream &operator<<(std::ostream &_Stream, const _1b615c804_PlainImporter &_Src) {
	_Stream << "PlainImporter{";
	_Stream << "all_packages:" << _Src._field_all_packages;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b60cc7c9_OrderedDefines &_Src) {
	_Stream << "OrderedDefines{";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "globals:" << _Src._field_globals;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b60cc7c9_DefineOrderer::_static_method_is_common_ordered_0(jule::Slice<jule::Ref<_1b623eab2_Var>>& _1837_s,jule::Ref<_1b623eab2_Var> _1846_t) {
	jule::Int _1917_j = 0LL;
	{
		auto _range_expr = _1837_s;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b623eab2_Var> _1b60cc7c9_tt = *_range_begin;
			_iter_begin_4445833712:;
			{
				if ((_1b60cc7c9_tt).alloc == (_1846_t).alloc) {
					goto _iter_end_4445833712;
				}
				if ((_1b60cc7c9_tt).alloc == (_1846_t->_field_depends[static_cast<jule::Int>(_1917_j)]).alloc) {
					(_1917_j)++;
					if (_1917_j >= _1846_t->_field_depends.len()) {
						return true;
					}
				}
			}
			_iter_next_4445833712:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b60cc7c9_tt = *_range_begin; goto _iter_begin_4445833712; }
			_iter_end_4445833712:;
		}
	}
	return false;
}

inline jule::Bool _1b60cc7c9_DefineOrderer::_static_method_is_common_ordered_1(jule::Slice<jule::Ref<_1b5e07a00_Struct>>& _1837_s,jule::Ref<_1b5e07a00_Struct> _1846_t) {
	jule::Int _1917_j = 0LL;
	{
		auto _range_expr = _1837_s;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b5e07a00_Struct> _1b60cc7c9_tt = *_range_begin;
			_iter_begin_4445866256:;
			{
				if ((_1b60cc7c9_tt).alloc == (_1846_t).alloc) {
					goto _iter_end_4445866256;
				}
				if ((_1b60cc7c9_tt).alloc == (_1846_t->_field_depends[static_cast<jule::Int>(_1917_j)]).alloc) {
					(_1917_j)++;
					if (_1917_j >= _1846_t->_field_depends.len()) {
						return true;
					}
				}
			}
			_iter_next_4445866256:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b60cc7c9_tt = *_range_begin; goto _iter_begin_4445866256; }
			_iter_end_4445866256:;
		}
	}
	return false;
}



inline void _1b60cc7c9_DefineOrderer::_static_method_order_common_0(jule::Slice<jule::Ref<_1b623eab2_Var>>& _3640_s) {
	jule::Int _3717_i = 0LL;
	{
		auto _range_expr = _3640_s;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1b60cc7c9_j = 0;
			jule::Ref<_1b623eab2_Var> _1b60cc7c9_t = *_range_begin;
			_iter_begin_4445810560:;
			{
				if (_1b60cc7c9_t->_field_depends.len() == 0LL) {
					std::tie(_3640_s[static_cast<jule::Int>(_3717_i)],_3640_s[static_cast<jule::Int>(_1b60cc7c9_j)]) = std::make_tuple(_1b60cc7c9_t,_3640_s[static_cast<jule::Int>(_3717_i)]);
					(_3717_i)++;
				}
			}
			_iter_next_4445810560:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1b60cc7c9_j; _1b60cc7c9_t = *_range_begin; goto _iter_begin_4445810560; }
			_iter_end_4445810560:;
		}
	}
	jule::Int _4517_j = _3717_i;
	_iter_begin_4445809536:;
	if (!(_4517_j < _3640_s.len())) { goto _iter_end_4445809536; }
	{
		jule::Int _4721_k = _3717_i;
		_iter_begin_4445819792:;
		if (!(_4721_k < (_3640_s.len() - 1LL))) { goto _iter_end_4445819792; }
		{
			if ((!(_1b60cc7c9_DefineOrderer::_static_method_is_common_ordered_0(_3640_s,_3640_s[static_cast<jule::Int>(_4721_k)])))) {
				std::tie(_3640_s[static_cast<jule::Int>(_4721_k)],_3640_s[static_cast<jule::Int>(_4721_k + 1LL)]) = std::make_tuple(_3640_s[static_cast<jule::Int>(_4721_k + 1LL)],_3640_s[static_cast<jule::Int>(_4721_k)]);
			}
		}
		_iter_next_4445819792:;
		(_4721_k)++;
		goto _iter_begin_4445819792;
		_iter_end_4445819792:;
	}
	_iter_next_4445809536:;
	(_4517_j)++;
	goto _iter_begin_4445809536;
	_iter_end_4445809536:;
}

inline void _1b60cc7c9_DefineOrderer::_static_method_order_common_1(jule::Slice<jule::Ref<_1b5e07a00_Struct>>& _3640_s) {
	jule::Int _3717_i = 0LL;
	{
		auto _range_expr = _3640_s;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1b60cc7c9_j = 0;
			jule::Ref<_1b5e07a00_Struct> _1b60cc7c9_t = *_range_begin;
			_iter_begin_4445843168:;
			{
				if (_1b60cc7c9_t->_field_depends.len() == 0LL) {
					std::tie(_3640_s[static_cast<jule::Int>(_3717_i)],_3640_s[static_cast<jule::Int>(_1b60cc7c9_j)]) = std::make_tuple(_1b60cc7c9_t,_3640_s[static_cast<jule::Int>(_3717_i)]);
					(_3717_i)++;
				}
			}
			_iter_next_4445843168:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1b60cc7c9_j; _1b60cc7c9_t = *_range_begin; goto _iter_begin_4445843168; }
			_iter_end_4445843168:;
		}
	}
	jule::Int _4517_j = _3717_i;
	_iter_begin_4445842144:;
	if (!(_4517_j < _3640_s.len())) { goto _iter_end_4445842144; }
	{
		jule::Int _4721_k = _3717_i;
		_iter_begin_4445852400:;
		if (!(_4721_k < (_3640_s.len() - 1LL))) { goto _iter_end_4445852400; }
		{
			if ((!(_1b60cc7c9_DefineOrderer::_static_method_is_common_ordered_1(_3640_s,_3640_s[static_cast<jule::Int>(_4721_k)])))) {
				std::tie(_3640_s[static_cast<jule::Int>(_4721_k)],_3640_s[static_cast<jule::Int>(_4721_k + 1LL)]) = std::make_tuple(_3640_s[static_cast<jule::Int>(_4721_k + 1LL)],_3640_s[static_cast<jule::Int>(_4721_k)]);
			}
		}
		_iter_next_4445852400:;
		(_4721_k)++;
		goto _iter_begin_4445852400;
		_iter_end_4445852400:;
	}
	_iter_next_4445842144:;
	(_4517_j)++;
	goto _iter_begin_4445842144;
	_iter_end_4445842144:;
}



inline void _1b60cc7c9_DefineOrderer::_static_method_order_variables(jule::Slice<jule::Ref<_1b623eab2_Var>>& _5840_vars) {
	_1b60cc7c9_DefineOrderer::_static_method_order_common_0(_5840_vars);
}



inline void _1b60cc7c9_DefineOrderer::_static_method_order_structures(jule::Slice<jule::Ref<_1b5e07a00_Struct>>& _6441_structs) {
	_1b60cc7c9_DefineOrderer::_static_method_order_common_1(_6441_structs);
}







std::ostream &operator<<(std::ostream &_Stream, const _1b60cc7c9_DefineOrderer &_Src) {
	_Stream << "DefineOrderer{";
	_Stream << "}";
	return _Stream;
}



inline void _1b60bd9da_ScopeDeadCode::_method_optimize_child(jule::Ref<_1ab009de8_Scope>& _2239_s) {
	jule::Ref<_1b60bd9da_ScopeDeadCode> _2317_sdc = jule::new_struct<_1b60bd9da_ScopeDeadCode>(new( std::nothrow ) _1b60bd9da_ScopeDeadCode(this->self,_2239_s,(&(_2239_s->_field_stmts)),jule::Int()));
	{
		_2317_sdc->_method_optimize_stmts();
	}
}



inline void _1b60bd9da_ScopeDeadCode::_method_eliminate_followed(void) {
	(*((*this)._field_stmts))=(*((*this)._field_stmts)).slice(0LL,static_cast<jule::Int>((*this)._field_i + 1LL));
	jule::Ref<_1b60bd9da_ScopeDeadCode> _3317_parent = (*this)._field_parent;
	_iter_begin_4446163328:;
	if (!(jule::real(_3317_parent))) { goto _iter_end_4446163328; }
	{
		(*(_3317_parent->_field_stmts))=(*(_3317_parent->_field_stmts)).slice(0LL,static_cast<jule::Int>(_3317_parent->_field_i + 1LL));
		_3317_parent=_3317_parent->_field_parent;
	}
	_iter_next_4446163328:;
	goto _iter_begin_4446163328;
	_iter_end_4446163328:;
}



inline void _1b60bd9da_ScopeDeadCode::_method_optimize_stmt(jule::Any _4044_st) {
	{
		auto _match_expr{ _4044_st };
		if (!(_match_expr.type_is<jule::Ref<_1ab009de8_Scope>>())) { goto _case_end_4446170512; }
		_case_begin_4446170512:;
		{
			jule::Ref<_1ab009de8_Scope> _4321_scope = _4044_st.operator jule::Ref<_1ab009de8_Scope>();
			if (_4321_scope->_field_deferred) {
				_1b60bd9da_eliminate_dead_code_of_scope(_4321_scope);
			} else {
				this->self->_method_optimize_child(_4321_scope);
			}
		}
		goto _match_end_4446170176;
		_case_end_4446170512:;
		if (!(_match_expr.type_is<jule::Ref<_1ab00dbcc_Data>>())) { goto _case_end_4446170640; }
		_case_begin_4446170640:;
		{
			{
				auto _match_expr{ _4044_st.operator jule::Ref<_1ab00dbcc_Data>()->_field_model };
				if (!(_match_expr.type_is<jule::Ref<_1ab33d083_BuiltinPanicCallExprModel>>())) { goto _case_end_4446177328; }
				_case_begin_4446177328:;
				{
					this->self->_method_eliminate_followed();
				}
				goto _match_end_4446174656;
				_case_end_4446177328:;
				_match_end_4446174656:;
			}
		}
		goto _match_end_4446170176;
		_case_end_4446170640:;
		if (!(_match_expr.type_is<jule::Ref<_1ab009de8_RetSt>>())) { goto _case_end_4446170896; }
		_case_begin_4446170896:;
		{
			this->self->_method_eliminate_followed();
		}
		goto _match_end_4446170176;
		_case_end_4446170896:;
		_match_end_4446170176:;
	}
}



inline void _1b60bd9da_ScopeDeadCode::_method_optimize_stmts(void) {
	this->self->_field_i=0LL;
	_iter_begin_4446175664:;
	if (!(this->self->_field_i < this->self->_field_stmts->len())) { goto _iter_end_4446175664; }
	{
		this->self->_method_optimize_stmt((*(this->self->_field_stmts))[static_cast<jule::Int>(this->self->_field_i)]);
	}
	_iter_next_4446175664:;
	(this->self->_field_i)++;
	goto _iter_begin_4446175664;
	_iter_end_4446175664:;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b60bd9da_ScopeDeadCode &_Src) {
	_Stream << "ScopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ad0abb9b_AbsTime &_Src) {
	_Stream << "AbsTime{";
	_Stream << "day:" << _Src._field_day << ", ";
	_Stream << "week_day:" << _Src._field_week_day << ", ";
	_Stream << "year_day:" << _Src._field_year_day << ", ";
	_Stream << "month:" << _Src._field_month << ", ";
	_Stream << "year:" << _Src._field_year << ", ";
	_Stream << "second:" << _Src._field_second << ", ";
	_Stream << "minute:" << _Src._field_minute << ", ";
	_Stream << "hour:" << _Src._field_hour;
	_Stream << "}";
	return _Stream;
}



inline _1ad0abb9b_Time _1ad0abb9b_Time::_static_method_unix(jule::U64 _5924_sec) {
	return _1ad0abb9b_Time(_5924_sec);
}



inline _1ad0abb9b_Time _1ad0abb9b_Time::_static_method_now(void) {
	return _1ad0abb9b_Time::_static_method_unix(static_cast<jule::U64>(_1ad0abb9b_unix()));
}



inline jule::U64 _1ad0abb9b_Time::_method_unix(void) {
	return (*this)._field_sec;
}



inline jule::Uint _1ad0abb9b_Time::_method_day(void) {
	return static_cast<jule::Uint>((*this)._method_abs()._field_day);
}



inline jule::Uint _1ad0abb9b_Time::_method_month(void) {
	return static_cast<jule::Uint>((*this)._method_abs()._field_month);
}



inline jule::Uint _1ad0abb9b_Time::_method_year(void) {
	return static_cast<jule::Uint>((*this)._method_abs()._field_year);
}



inline jule::Uint _1ad0abb9b_Time::_method_second(void) {
	return static_cast<jule::Uint>((*this)._method_abs()._field_second);
}



inline jule::Uint _1ad0abb9b_Time::_method_minute(void) {
	return static_cast<jule::Uint>((*this)._method_abs()._field_minute);
}



inline jule::Uint _1ad0abb9b_Time::_method_hour(void) {
	return static_cast<jule::Uint>((*this)._method_abs()._field_hour);
}



inline _1ad0abb9b_AbsTime _1ad0abb9b_Time::_method_abs(void) {
	jule::U64 _9513_secs = (*this)._field_sec - 951868800LL;
	jule::U64 _9617_days = jule::div(_9513_secs,86400LL);
	jule::U64 _9717_rem_secs = jule::mod(_9513_secs,86400LL);
	if (_9717_rem_secs < 0LL) {
		_9717_rem_secs+=86400LL;
		(_9617_days)--;
	}
	jule::U64 _10317_qc_cycles = jule::div(_9617_days,146097LL);
	jule::U64 _10417_rem_days = jule::mod(_9617_days,146097LL);
	if (_10417_rem_days < 0LL) {
		_10417_rem_days+=146097LL;
		(_10317_qc_cycles)--;
	}
	jule::U64 _11017_c_cycles = jule::div(_10417_rem_days,36524LL);
	if (_11017_c_cycles == 4LL) {
		(_11017_c_cycles)--;
	}
	_10417_rem_days-=static_cast<jule::U64>(_11017_c_cycles * 36524LL);
	jule::U64 _11617_q_cycles = jule::div(_10417_rem_days,1461LL);
	if (_11617_q_cycles == 25LL) {
		(_11617_q_cycles)--;
	}
	_10417_rem_days-=static_cast<jule::U64>(_11617_q_cycles * 1461LL);
	jule::U64 _12217_rem_years = jule::div(_10417_rem_days,365LL);
	if (_12217_rem_years == 4LL) {
		(_12217_rem_years)--;
	}
	_10417_rem_days-=static_cast<jule::U64>(_12217_rem_years * 365LL);
	jule::Int _12813_leap = (((_12217_rem_years == 0LL) && ((_11617_q_cycles > 0LL) || (_11017_c_cycles == 0LL)))) ? (1LL) : (0LL);
	jule::U64 _12917_y_day = ((_10417_rem_days + 31LL) + 28LL) + _12813_leap;
	if (_12917_y_day >= (365LL + _12813_leap)) {
		_12917_y_day-=static_cast<jule::Int>(365LL + _12813_leap);
	}
	jule::Int _13417_months = 0LL;
	_iter_begin_4446246496:;
	if (!(_1ad0abb9b_MDAYS[static_cast<jule::Int>(_13417_months)] <= _10417_rem_days)) { goto _iter_end_4446246496; }
	{
		_10417_rem_days-=_1ad0abb9b_MDAYS[static_cast<jule::Int>(_13417_months)];
	}
	_iter_next_4446246496:;
	(_13417_months)++;
	goto _iter_begin_4446246496;
	_iter_end_4446246496:;
	_1ad0abb9b_AbsTime _13917_t = _1ad0abb9b_AbsTime();
	_13917_t._field_year=static_cast<jule::U64>((((_12217_rem_years + (4LL * _11617_q_cycles)) + (100LL * _11017_c_cycles)) + (400LL * _10317_qc_cycles)) + 100LL);
	_13917_t._field_month=static_cast<jule::Uint>(_13417_months + 2LL);
	if (_13917_t._field_month >= 12LL) {
		_13917_t._field_month-=12LL;
		(_13917_t._field_year)++;
	}
	(_13917_t._field_month)++;
	_13917_t._field_year+=1900LL;
	_13917_t._field_day=static_cast<jule::U64>(_10417_rem_days + 1LL);
	_13917_t._field_week_day=static_cast<jule::U64>(jule::mod(3LL + _9617_days,7LL));
	if (_13917_t._field_week_day < 0LL) {
		_13917_t._field_week_day+=7LL;
	}
	_13917_t._field_year_day=_12917_y_day;
	_13917_t._field_hour=static_cast<jule::U64>(jule::div(_9717_rem_secs,3600LL));
	_13917_t._field_minute=static_cast<jule::U64>(jule::mod(jule::div(_9717_rem_secs,60LL),60LL));
	_13917_t._field_second=static_cast<jule::U64>(jule::mod(_9717_rem_secs,60LL));
	return _13917_t;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ad0abb9b_Time &_Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a977abdc_IndexRangeSetter::_method_setup_vars(jule::Ref<_1b623eab2_Var> _4729_key_a,jule::Ref<_1b623eab2_Var> _4746_key_b) {
	jule::Str _4813_indent = _1acde57a4_indent();
	jule::Str _5017_obj = jule::Str("", 0);
	if (jule::real(_4729_key_a)) {
		_5017_obj+=_1acde57a4_gen_var_init_expr(_4729_key_a,jule::Str("0", 1));
		_5017_obj+=jule::Str("\n", 1);
		_5017_obj+=_4813_indent;
	}
	if (jule::real(_4746_key_b)) {
		_5017_obj+=_1acde57a4_gen_var_init_expr(_4746_key_b,jule::Str("*_range_begin", 13));
		_5017_obj+=jule::Str("\n", 1);
		_5017_obj+=_4813_indent;
	}
	return _5017_obj;
}



inline jule::Str _1a977abdc_IndexRangeSetter::_method_next_steps(jule::Ref<_1b623eab2_Var> _6629_key_a,jule::Ref<_1b623eab2_Var> _6646_key_b,jule::Str _6659_begin) {
	jule::Str _6713_indent = _1acde57a4_indent();
	jule::Str _6917_obj = jule::Str("++_range_begin;\n", 16);
	_6917_obj+=_6713_indent;
	_6917_obj+=jule::Str("if (_range_begin != _range_end) { ", 34);
	if (jule::real(_6629_key_a)) {
		_6917_obj+=(jule::Str("++", 2) + _1acde36d6_var_out_ident(_6629_key_a)) + jule::Str("; ", 2);
	}
	if (jule::real(_6646_key_b)) {
		_6917_obj+=_1acde36d6_var_out_ident(_6646_key_b) + jule::Str(" = *_range_begin; ", 18);
	}
	_6917_obj+=(jule::Str("goto ", 5) + _6659_begin) + jule::Str("; }\n", 4);
	return _6917_obj;
}







std::ostream &operator<<(std::ostream &_Stream, const _1a977abdc_IndexRangeSetter &_Src) {
	_Stream << "IndexRangeSetter{";
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a977abdc_MapRangeSetter::_method_setup_vars(jule::Ref<_1b623eab2_Var> _8829_key_a,jule::Ref<_1b623eab2_Var> _8846_key_b) {
	jule::Str _8913_indent = _1acde57a4_indent();
	jule::Str _9017_obj = jule::Str("", 0);
	if (jule::real(_8829_key_a)) {
		_9017_obj+=_1acde57a4_gen_var_init_expr(_8829_key_a,jule::Str("_range_begin->first", 19));
		_9017_obj+=jule::Str("\n", 1);
		_9017_obj+=_8913_indent;
	}
	if (jule::real(_8846_key_b)) {
		_9017_obj+=_1acde57a4_gen_var_init_expr(_8846_key_b,jule::Str("_range_begin->second", 20));
		_9017_obj+=jule::Str("\n", 1);
		_9017_obj+=_8913_indent;
	}
	return _9017_obj;
}



inline jule::Str _1a977abdc_MapRangeSetter::_method_next_steps(jule::Ref<_1b623eab2_Var> _10729_key_a,jule::Ref<_1b623eab2_Var> _10746_key_b,jule::Str _10759_begin) {
	jule::Str _10813_indent = _1acde57a4_indent();
	jule::Str _11017_obj = jule::Str("++_range_begin;\n", 16);
	_11017_obj+=_10813_indent;
	_11017_obj+=jule::Str("if (_range_begin != _range_end) { ", 34);
	if (jule::real(_10729_key_a)) {
		_11017_obj+=_1acde36d6_var_out_ident(_10729_key_a);
		_11017_obj+=jule::Str(" = _range_begin->first; ", 24);
	}
	if (jule::real(_10746_key_b)) {
		_11017_obj+=_1acde36d6_var_out_ident(_10746_key_b);
		_11017_obj+=jule::Str(" = _range_begin->second; ", 25);
	}
	_11017_obj+=(jule::Str("goto ", 5) + _10759_begin) + jule::Str("; }\n", 4);
	return _11017_obj;
}







std::ostream &operator<<(std::ostream &_Stream, const _1a977abdc_MapRangeSetter &_Src) {
	_Stream << "MapRangeSetter{";
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b61ca014_LitExpr::_method_is_nil(void) {
	return (*this)._field_value == jule::Str("nil", 3);
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61ca014_LitExpr &_Src) {
	_Stream << "LitExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "value:" << _Src._field_value;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61ca014_UnsafeExpr &_Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b61ca014_IdentExpr::_method_is_self(void) {
	return (*this)._field_ident == jule::Str("self", 4);
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61ca014_IdentExpr &_Src) {
	_Stream << "IdentExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61ca014_UnaryExpr &_Src) {
	_Stream << "UnaryExpr{";
	_Stream << "op:" << _Src._field_op << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61ca014_VariadicExpr &_Src) {
	_Stream << "VariadicExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61ca014_NsSelectionExpr &_Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "ns:" << _Src._field_ns << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61ca014_SubIdentExpr &_Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "is_self:" << _Src._field_is_self << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61ca014_BinopExpr &_Src) {
	_Stream << "BinopExpr{";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b61ca014_FieldExprPair::_method_is_targeted(void) {
	return (*this)._field_field._field_id != 0LLU;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61ca014_FieldExprPair &_Src) {
	_Stream << "FieldExprPair{";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b61ca014_BraceLit::_method_is_empty(void) {
	return (*this)._field_exprs.len() == 0LL;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61ca014_BraceLit &_Src) {
	_Stream << "BraceLit{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61ca014_KeyValPair &_Src) {
	_Stream << "KeyValPair{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val << ", ";
	_Stream << "colon:" << _Src._field_colon;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b61ca014_SliceExpr::_method_is_empty(void) {
	return (*this)._field_elems.len() == 0LL;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61ca014_SliceExpr &_Src) {
	_Stream << "SliceExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61ca014_IndexingExpr &_Src) {
	_Stream << "IndexingExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "index:" << _Src._field_index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61ca014_SlicingExpr &_Src) {
	_Stream << "SlicingExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "start:" << _Src._field_start << ", ";
	_Stream << "to:" << _Src._field_to;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61ca014_TernaryExpr &_Src) {
	_Stream << "TernaryExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "condition:" << _Src._field_condition << ", ";
	_Stream << "true_expr:" << _Src._field_true_expr << ", ";
	_Stream << "false_expr:" << _Src._field_false_expr;
	_Stream << "}";
	return _Stream;
}



inline void _1a8dc912c_DynamicTypeAnnotation::_method_push_generic(jule::Ref<_1ac6d02c0_TypeKind>& _54236_k,jule::Int _54250_i) {
	(*this)._field_f->_field_generics[static_cast<jule::Int>(_54250_i)]=_54236_k;
}



inline jule::Bool _1a8dc912c_DynamicTypeAnnotation::_method_annotate_prim(jule::Ref<_1ac6d02c0_TypeKind>& _54644_k) {
	jule::Bool _54660_ok = jule::Bool();
	jule::Str _54713_kind = (*((*this)._field_k))->_method_to_str();
	{
		auto _range_expr = (*this)._field_f->_field_decl->_field_generics;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1a8dc912c_i = 0;
			jule::Ref<_1b61ca014_GenericDecl> _1a8dc912c_g = *_range_begin;
			_iter_begin_4441820416:;
			{
				if (_54713_kind != _1a8dc912c_g->_field_ident) {
					goto _iter_next_4441820416;
				}
				jule::Ref<_1ac6d02c0_TypeKind> _55317_t = (*this)._field_f->_field_generics[static_cast<jule::Int>(_1a8dc912c_i)];
				{
					if (!(((!(jule::real(_55317_t)))))) { goto _case_end_4441826384; }
					_case_begin_4441826384:;
					{
						(*this)._method_push_generic(_54644_k,_1a8dc912c_i);
					}
					goto _match_end_4441826128;
					_case_end_4441826384:;
					if (!(((!(_55317_t->_method_equals(_54644_k)))))) { goto _case_end_4441826496; }
					_case_begin_4441826496:;
					{
						_54660_ok = false;
						return _54660_ok;
					}
					goto _match_end_4441826128;
					_case_end_4441826496:;
					_match_end_4441826128:;
				}
				(*((*this)._field_k))->_field_kind=_54644_k->_field_kind;
				_54660_ok = true;
				return _54660_ok;
			}
			_iter_next_4441820416:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1a8dc912c_i; _1a8dc912c_g = *_range_begin; goto _iter_begin_4441820416; }
			_iter_end_4441820416:;
		}
	}
	_54660_ok = false;
	return _54660_ok;
}



inline jule::Bool _1a8dc912c_DynamicTypeAnnotation::_method_annotate_slc(jule::Ref<_1ac6d02c0_TypeKind>& _57043_k) {
	jule::Bool _57059_ok = jule::Bool();
	jule::Ref<_1ac6d02c0_Slc> _57117_pslc = (*((*this)._field_k))->_method_slc();
	if ((!(jule::real(_57117_pslc)))) {
		_57059_ok = false;
		return _57059_ok;
	}
	jule::Ref<_1ac6d02c0_Slc> _57617_slc = _57043_k->_method_slc();
	_1ac6d02c0_TypeKind* _57717_kk = (_57117_pslc->_field_elem).alloc;
	(*this)._field_k=(&(_57717_kk));
	_57059_ok = (*this)._method_annotate_kind(_57617_slc->_field_elem);
	return _57059_ok;
}



inline jule::Bool _1a8dc912c_DynamicTypeAnnotation::_method_check_map_key(_1ac6d02c0_TypeKind** _58243_k,jule::Ref<_1ac6d02c0_TypeKind>& _58263_ck) {
	jule::Bool _58280_ok = jule::Bool();
	_1ac6d02c0_TypeKind** _58317_old = (*this)._field_k;
	(*this)._field_k=_58243_k;
	_58280_ok=(*this)._method_annotate_kind(_58263_ck);
	(*this)._field_k=_58317_old;
	_58280_ok = _58280_ok;
	return _58280_ok;
}



inline jule::Bool _1a8dc912c_DynamicTypeAnnotation::_method_annotate_map(jule::Ref<_1ac6d02c0_TypeKind>& _59043_k) {
	jule::Bool _59059_ok = jule::Bool();
	jule::Ref<_1ac6d02c0_Map> _59117_pmap = (*((*this)._field_k))->_method_map();
	if ((!(jule::real(_59117_pmap)))) {
		_59059_ok = false;
		return _59059_ok;
	}
	jule::Ref<_1ac6d02c0_Map> _59617_m = _59043_k->_method_map();
	_1ac6d02c0_TypeKind* _59817_key = (_59117_pmap->_field_key).alloc;
	_1ac6d02c0_TypeKind* _59917_val = (_59117_pmap->_field_val).alloc;
	_59059_ok = (*this)._method_check_map_key((&(_59817_key)),_59617_m->_field_key) && (*this)._method_check_map_key((&(_59917_val)),_59617_m->_field_val);
	return _59059_ok;
}



inline jule::Bool _1a8dc912c_DynamicTypeAnnotation::_method_annotate_fn(jule::Ref<_1ac6d02c0_TypeKind>& _60342_k) {
	jule::Bool _60358_ok = jule::Bool();
	jule::Ref<_1b557cd24_FnIns> _60417_pf = (*((*this)._field_k))->_method_fnc();
	if ((!(jule::real(_60417_pf)))) {
		_60358_ok = false;
		return _60358_ok;
	}
	jule::Ref<_1b557cd24_FnIns> _60817_f = _60342_k->_method_fnc();
	{
		if (!((_60417_pf->_field_params.len() != _60817_f->_field_params.len()))) { goto _case_end_4441867136; }
		_case_begin_4441867136:;
		{
			_60358_ok = false;
			return _60358_ok;
		}
		goto _match_end_4441866960;
		_case_end_4441867136:;
		if (!((_60417_pf->_field_decl->_method_is_void() != _60817_f->_field_decl->_method_is_void()))) { goto _case_end_4441867264; }
		_case_begin_4441867264:;
		{
			_60358_ok = false;
			return _60358_ok;
		}
		goto _match_end_4441866960;
		_case_end_4441867264:;
		_match_end_4441866960:;
	}
	_60358_ok=true;
	_1ac6d02c0_TypeKind** _61817_old = (*this)._field_k;
	{
		auto _range_expr = _60817_f->_field_params;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1a8dc912c_i = 0;
			jule::Ref<_1b557cd24_ParamIns> _1a8dc912c_fp = *_range_begin;
			_iter_begin_4441871760:;
			{
				_1ac6d02c0_TypeKind* _62021_pfp = (_60417_pf->_field_params[static_cast<jule::Int>(_1a8dc912c_i)]->_field_kind).alloc;
				(*this)._field_k=(&(_62021_pfp));
				_60358_ok=(*this)._method_annotate_kind(_1a8dc912c_fp->_field_kind) && _60358_ok;
			}
			_iter_next_4441871760:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1a8dc912c_i; _1a8dc912c_fp = *_range_begin; goto _iter_begin_4441871760; }
			_iter_end_4441871760:;
		}
	}
	if ((!(_60417_pf->_field_decl->_method_is_void()))) {
		_1ac6d02c0_TypeKind* _62621_result = (_60417_pf->_field_result).alloc;
		(*this)._field_k=(&(_62621_result));
		_60358_ok=(*this)._method_annotate_kind(_60817_f->_field_result) && _60358_ok;
	}
	(*this)._field_k=_61817_old;
	_60358_ok = _60358_ok;
	return _60358_ok;
}



inline jule::Bool _1a8dc912c_DynamicTypeAnnotation::_method_annotate_ptr(jule::Ref<_1ac6d02c0_TypeKind>& _63543_k) {
	jule::Bool _63559_ok = jule::Bool();
	jule::Ref<_1ac6d02c0_Ptr> _63617_pptr = (*((*this)._field_k))->_method_ptr();
	if ((!(jule::real(_63617_pptr)))) {
		_63559_ok = false;
		return _63559_ok;
	}
	jule::Ref<_1ac6d02c0_Ptr> _64117_ptr = _63543_k->_method_ptr();
	_1ac6d02c0_TypeKind* _64217_cpptr = (_63617_pptr->_field_elem).alloc;
	(*this)._field_k=(&(_64217_cpptr));
	_63559_ok = (*this)._method_annotate_kind(_64117_ptr->_field_elem);
	return _63559_ok;
}



inline jule::Bool _1a8dc912c_DynamicTypeAnnotation::_method_annotate_ref(jule::Ref<_1ac6d02c0_TypeKind>& _64743_k) {
	jule::Bool _64759_ok = jule::Bool();
	jule::Ref<_1ac6d02c0_Ref> _64817_rref = (*((*this)._field_k))->_method_ref();
	if ((!(jule::real(_64817_rref)))) {
		_64759_ok = false;
		return _64759_ok;
	}
	jule::Ref<_1ac6d02c0_Ref> _65317_ref = _64743_k->_method_ref();
	_1ac6d02c0_TypeKind* _65417_crref = (_64817_rref->_field_elem).alloc;
	(*this)._field_k=(&(_65417_crref));
	_64759_ok = (*this)._method_annotate_kind(_65317_ref->_field_elem);
	return _64759_ok;
}



inline jule::Bool _1a8dc912c_DynamicTypeAnnotation::_method_annotate_any(jule::Ref<_1ac6d02c0_TypeKind>& _65943_k) {
	jule::Bool _65959_ok = jule::Bool();
	jule::Str _66013_kind = (*((*this)._field_k))->_method_to_str();
	{
		auto _range_expr = (*this)._field_f->_field_decl->_field_generics;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1a8dc912c_i = 0;
			jule::Ref<_1b61ca014_GenericDecl> _1a8dc912c_g = *_range_begin;
			_iter_begin_4441906528:;
			{
				if (_66013_kind != _1a8dc912c_g->_field_ident) {
					goto _iter_next_4441906528;
				}
				jule::Ref<_1ac6d02c0_TypeKind> _66617_t = (*this)._field_f->_field_generics[static_cast<jule::Int>(_1a8dc912c_i)];
				{
					if (!(((!(jule::real(_66617_t)))))) { goto _case_end_4441912336; }
					_case_begin_4441912336:;
					{
						(*this)._method_push_generic(_65943_k,_1a8dc912c_i);
					}
					goto _match_end_4441912080;
					_case_end_4441912336:;
					if (!(((!(_66617_t->_method_equals(_65943_k)))))) { goto _case_end_4441912448; }
					_case_begin_4441912448:;
					{
						_65959_ok = false;
						return _65959_ok;
					}
					goto _match_end_4441912080;
					_case_end_4441912448:;
					_match_end_4441912080:;
				}
				(*((*this)._field_k))->_field_kind=_65943_k->_field_kind;
				_65959_ok = true;
				return _65959_ok;
			}
			_iter_next_4441906528:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1a8dc912c_i; _1a8dc912c_g = *_range_begin; goto _iter_begin_4441906528; }
			_iter_end_4441906528:;
		}
	}
	_65959_ok = false;
	return _65959_ok;
}



inline jule::Bool _1a8dc912c_DynamicTypeAnnotation::_method_annotate_kind(jule::Ref<_1ac6d02c0_TypeKind>& _68344_k) {
	jule::Bool _68360_ok = jule::Bool();
	if (((*this)._field_k == nullptr) || ((*((*this)._field_k)) == nullptr)) {
		return _68360_ok;
	}
	{
		if (!(((*this)._method_annotate_any(_68344_k)))) { goto _case_end_4441922208; }
		_case_begin_4441922208:;
		{
			_68360_ok = true;
			return _68360_ok;
		}
		goto _match_end_4441920608;
		_case_end_4441922208:;
		if (!((jule::real(_68344_k->_method_prim())))) { goto _case_end_4441922320; }
		_case_begin_4441922320:;
		{
			_68360_ok = (*this)._method_annotate_prim(_68344_k);
			return _68360_ok;
		}
		goto _match_end_4441920608;
		_case_end_4441922320:;
		if (!((jule::real(_68344_k->_method_slc())))) { goto _case_end_4441922432; }
		_case_begin_4441922432:;
		{
			_68360_ok = (*this)._method_annotate_slc(_68344_k);
			return _68360_ok;
		}
		goto _match_end_4441920608;
		_case_end_4441922432:;
		if (!((jule::real(_68344_k->_method_map())))) { goto _case_end_4441921616; }
		_case_begin_4441921616:;
		{
			_68360_ok = (*this)._method_annotate_map(_68344_k);
			return _68360_ok;
		}
		goto _match_end_4441920608;
		_case_end_4441921616:;
		if (!((jule::real(_68344_k->_method_fnc())))) { goto _case_end_4441921728; }
		_case_begin_4441921728:;
		{
			_68360_ok = (*this)._method_annotate_fn(_68344_k);
			return _68360_ok;
		}
		goto _match_end_4441920608;
		_case_end_4441921728:;
		if (!((jule::real(_68344_k->_method_ptr())))) { goto _case_end_4441921840; }
		_case_begin_4441921840:;
		{
			_68360_ok = (*this)._method_annotate_ptr(_68344_k);
			return _68360_ok;
		}
		goto _match_end_4441920608;
		_case_end_4441921840:;
		if (!((jule::real(_68344_k->_method_ref())))) { goto _case_end_4441922896; }
		_case_begin_4441922896:;
		{
			_68360_ok = (*this)._method_annotate_ref(_68344_k);
			return _68360_ok;
		}
		goto _match_end_4441920608;
		_case_end_4441922896:;
		_case_begin_4441921024:;
		{
			_68360_ok = false;
			return _68360_ok;
		}
		goto _match_end_4441920608;
		_case_end_4441921024:;
		_match_end_4441920608:;
	}
}



inline jule::Bool _1a8dc912c_DynamicTypeAnnotation::_method_annotate(void) {
	jule::Bool _70036_ok = jule::Bool();
	_1ac6d02c0_TypeKind* _70117_pk = ((*this)._field_p->_field_kind).alloc;
	(*this)._field_k=(&(_70117_pk));
	_70036_ok = (*this)._method_annotate_kind((*this)._field_a->_field_kind);
	return _70036_ok;
}







std::ostream &operator<<(std::ostream &_Stream, const _1a8dc912c_DynamicTypeAnnotation &_Src) {
	_Stream << "DynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "k:" << _Src._field_k;
	_Stream << "}";
	return _Stream;
}



inline void _1a8dc912c_StructLitChecker::_method_push_err(_1b61ec5ec_Token _93127_token,jule::Str _93141_fmt,jule::Slice<jule::Any> _93154_args) {
	(*this)._field_e->_method_push_err(_93127_token,_93141_fmt,_93154_args);
}



inline void _1a8dc912c_StructLitChecker::_method_push_suggestion(jule::Str _93634_fmt,jule::Slice<jule::Any> _93647_args) {
	(*this)._field_e->_method_push_suggestion(_93634_fmt,_93647_args);
}



inline void _1a8dc912c_StructLitChecker::_method_push_match(jule::Ref<_1b5e07a00_FieldIns>& _94034_f,jule::Ref<_1ab00dbcc_Data>& _94053_d,_1b61ec5ec_Token& _94068_error_token) {
	(*this)._field_args=jule::append((*this)._field_args,jule::Slice<jule::Ref<_1ab33d083_StructArgExprModel>>({jule::new_struct<_1ab33d083_StructArgExprModel>(new( std::nothrow ) _1ab33d083_StructArgExprModel(_94034_f,_94053_d->_field_model))}));
	
	
	(*this)._field_e->_field_s->_method_check_validity_for_init_expr(true,false,_94034_f->_field_kind,_94053_d,_94068_error_token);
	(*this)._field_e->_field_s->_method_check_assign_type(false,_94034_f->_field_kind,_94053_d,_94068_error_token,false);
}



inline void _1a8dc912c_StructLitChecker::_method_check_pair(jule::Ref<_1b61ca014_FieldExprPair>& _95234_pair,jule::Slice<jule::Any>& _95261_exprs) {
	jule::Ref<_1b5e07a00_FieldIns> _95417_f = (*this)._field_s->_method_find_field(_95234_pair->_field_field._field_kind);
	if ((!(jule::real(_95417_f)))) {
		(*this)._method_push_err(_95234_pair->_field_field,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_95234_pair->_field_field._field_kind)}));
		return;
	}
	if ((!((*this)._field_e->_field_s->_method_is_accessible_define(_95417_f->_field_decl->_field_public,_95417_f->_field_decl->_field_token)))) {
		(*this)._method_push_err(_95234_pair->_field_field,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_95234_pair->_field_field._field_kind)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>({}));
	}
	_julec_label_dup_lookup:;
	{
		auto _range_expr = _95261_exprs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Any _1a8dc912c_expr = *_range_begin;
			_iter_begin_4442115216:;
			{
				{
					auto _match_expr{ _1a8dc912c_expr };
					if (!(_match_expr.type_is<jule::Ref<_1b61ca014_FieldExprPair>>())) { goto _case_end_4442116944; }
					_case_begin_4442116944:;
					{
						jule::Ref<_1b61ca014_FieldExprPair> _97025_dpair = _1a8dc912c_expr.operator jule::Ref<_1b61ca014_FieldExprPair>();
						{
							if (!((_95234_pair == _97025_dpair))) { goto _case_end_4442120064; }
							_case_begin_4442120064:;
							{
								goto _iter_end_4442115216;
							}
							goto _match_end_4442119888;
							_case_end_4442120064:;
							if (!((_95234_pair->_field_field._field_kind == _97025_dpair->_field_field._field_kind))) { goto _case_end_4442120192; }
							_case_begin_4442120192:;
							{
								(*this)._method_push_err(_95234_pair->_field_field,jule::Str("@ already has expression", 24),jule::Slice<jule::Any>({jule::Any(_95234_pair->_field_field._field_kind)}));
								goto _iter_end_4442115216;
							}
							goto _match_end_4442119888;
							_case_end_4442120192:;
							_match_end_4442119888:;
						}
					}
					goto _match_end_4442115792;
					_case_end_4442116944:;
					_match_end_4442115792:;
				}
			}
			_iter_next_4442115216:;
			++_range_begin;
			if (_range_begin != _range_end) { _1a8dc912c_expr = *_range_begin; goto _iter_begin_4442115216; }
			_iter_end_4442115216:;
		}
	}
	jule::Ref<_1ac6d02c0_TypeKind> _98217_prefix = (*this)._field_e->_field_prefix;
	__JULE_DEFER({
		(*this)._field_e->_field_prefix=_98217_prefix;
	});
	(*this)._field_e->_field_prefix=_95417_f->_field_kind;
	jule::Ref<_1ab00dbcc_Data> _98617_d = (*this)._field_e->_method_eval_expr_kind(_95234_pair->_field_expr);
	if ((!(jule::real(_98617_d)))) {
		return;
	}
	(*this)._method_push_match(_95417_f,_98617_d,_95234_pair->_field_field);
}



inline jule::Bool _1a8dc912c_StructLitChecker::_method_ready_exprs(jule::Slice<jule::Any>& _99335_exprs) {
	jule::Bool _99417_ok = true;
	{
		auto _range_expr = _99335_exprs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1a8dc912c_i = 0;
			jule::Any _1a8dc912c_expr = *_range_begin;
			_iter_begin_4442134208:;
			{
				{
					auto _match_expr{ _1a8dc912c_expr };
					if (!(_match_expr.type_is<jule::Ref<_1b61ca014_KeyValPair>>())) { goto _case_end_4442136608; }
					_case_begin_4442136608:;
					{
						jule::Ref<_1b61ca014_KeyValPair> _99825_pair = _1a8dc912c_expr.operator jule::Ref<_1b61ca014_KeyValPair>();
						{
							auto _match_expr{ _99825_pair->_field_key };
							if (!(_match_expr.type_is<jule::Ref<_1b61ca014_IdentExpr>>())) { goto _case_end_4442140208; }
							goto _match_end_4442139200;
							_case_end_4442140208:;
							_case_begin_4442139904:;
							{
								(*this)._method_push_err(_99825_pair->_field_colon,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
								_99417_ok=false;
								goto _iter_next_4442134208;
							}
							goto _match_end_4442139200;
							_case_end_4442139904:;
							_match_end_4442139200:;
						}
						_99335_exprs[static_cast<jule::Int>(_1a8dc912c_i)]=jule::Any(jule::new_struct<_1b61ca014_FieldExprPair>(new( std::nothrow ) _1b61ca014_FieldExprPair(_99825_pair->_field_key.operator jule::Ref<_1b61ca014_IdentExpr>()->_field_token,_99825_pair->_field_val)));
					}
					goto _match_end_4442136048;
					_case_end_4442136608:;
					_match_end_4442136048:;
				}
			}
			_iter_next_4442134208:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1a8dc912c_i; _1a8dc912c_expr = *_range_begin; goto _iter_begin_4442134208; }
			_iter_end_4442134208:;
		}
	}
	return _99417_ok;
}



inline void _1a8dc912c_StructLitChecker::_method_check(jule::Slice<jule::Any>& _101929_exprs) {
	if (_101929_exprs.len() == 0LL) {
		return;
	}
	if ((!((*this)._method_ready_exprs(_101929_exprs)))) {
		return;
	}
	jule::Bool _102817_paired = false;
	{
		auto _range_expr = _101929_exprs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1a8dc912c_i = 0;
			jule::Any _1a8dc912c_expr = *_range_begin;
			_iter_begin_4442151984:;
			{
				{
					auto _match_expr{ _1a8dc912c_expr };
					if (!(_match_expr.type_is<jule::Ref<_1b61ca014_FieldExprPair>>())) { goto _case_end_4442154480; }
					_case_begin_4442154480:;
					{
						jule::Ref<_1b61ca014_FieldExprPair> _103225_pair = _1a8dc912c_expr.operator jule::Ref<_1b61ca014_FieldExprPair>();
						if ((_1a8dc912c_i > 0LL) && (!(_102817_paired))) {
							(*this)._method_push_err(_103225_pair->_field_field,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
						}
						_102817_paired=true;
						(*this)._method_check_pair(_103225_pair,_101929_exprs);
					}
					goto _match_end_4442153808;
					_case_end_4442154480:;
					if (!(_match_expr.type_is<jule::Ref<_1b61ca014_Expr>>())) { goto _case_end_4442154592; }
					_case_begin_4442154592:;
					{
						jule::Ref<_1b61ca014_Expr> _104025_e = _1a8dc912c_expr.operator jule::Ref<_1b61ca014_Expr>();
						if (_102817_paired) {
							(*this)._method_push_err(_104025_e->_field_token,jule::Str("argument must target to field", 29),jule::Slice<jule::Any>({}));
						}
						if (_1a8dc912c_i >= (*this)._field_s->_field_fields.len()) {
							(*this)._method_push_err(_104025_e->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
							goto _iter_next_4442151984;
						}
						jule::Ref<_1b5e07a00_FieldIns> _104925_field = (*this)._field_s->_field_fields[static_cast<jule::Int>(_1a8dc912c_i)];
						jule::Ref<_1ac6d02c0_TypeKind> _105125_prefix = (*this)._field_e->_field_prefix;
						__JULE_DEFER({
							(*this)._field_e->_field_prefix=_105125_prefix;
						});
						(*this)._field_e->_field_prefix=_104925_field->_field_kind;
						jule::Ref<_1ab00dbcc_Data> _105525_d = (*this)._field_e->_method_eval_expr_kind(_104025_e->_field_kind);
						if ((!(jule::real(_105525_d)))) {
							goto _iter_next_4442151984;
						}
						(*this)._method_push_match(_104925_field,_105525_d,_104025_e->_field_token);
					}
					goto _match_end_4442153808;
					_case_end_4442154592:;
					_match_end_4442153808:;
				}
			}
			_iter_next_4442151984:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1a8dc912c_i; _1a8dc912c_expr = *_range_begin; goto _iter_begin_4442151984; }
			_iter_end_4442151984:;
		}
	}
	if ((!(_102817_paired))) {
		jule::I64 _106617_n = (*this)._field_s->_field_fields.len();
		jule::I64 _106721_diff = _106617_n - _101929_exprs.len();
		{
			if (!((_106721_diff <= 0LL))) { goto _case_end_4442179024; }
			_case_begin_4442179024:;
			{
				return;
			}
			goto _match_end_4442178784;
			_case_end_4442179024:;
			_match_end_4442178784:;
		}
		jule::Str _107321_idents = jule::Str("", 0);
		_iter_begin_4442179728:;
		if (!(_106721_diff > 0LL)) { goto _iter_end_4442179728; }
		{
			_107321_idents+=jule::Str(", ", 2) + (*this)._field_s->_field_fields[static_cast<jule::Int>(_106617_n - _106721_diff)]->_field_decl->_field_ident;
		}
		_iter_next_4442179728:;
		(_106721_diff)--;
		goto _iter_begin_4442179728;
		_iter_end_4442179728:;
		_107321_idents=_107321_idents.slice(2LL);
		(*this)._method_push_err((*this)._field_error_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(_107321_idents)}));
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1a8dc912c_StructLitChecker &_Src) {
	_Stream << "StructLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61ca014_LabelSt &_Src) {
	_Stream << "LabelSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61ca014_FallSt &_Src) {
	_Stream << "FallSt{";
	_Stream << "token:" << _Src._field_token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61ca014_AssignSt &_Src) {
	_Stream << "AssignSt{";
	_Stream << "declarative:" << _Src._field_declarative << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61ca014_RetSt &_Src) {
	_Stream << "RetSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b61ca014_Iter::_method_is_inf(void) {
	return (*this)._field_kind == nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61ca014_Iter &_Src) {
	_Stream << "Iter{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b61ca014_WhileKind::_method_is_while_next(void) {
	return (*this)._field_next != nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61ca014_WhileKind &_Src) {
	_Stream << "WhileKind{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "next:" << _Src._field_next << ", ";
	_Stream << "next_token:" << _Src._field_next_token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61ca014_RangeKind &_Src) {
	_Stream << "RangeKind{";
	_Stream << "in_token:" << _Src._field_in_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "key_a:" << _Src._field_key_a << ", ";
	_Stream << "key_b:" << _Src._field_key_b;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61ca014_MatchCase &_Src) {
	_Stream << "MatchCase{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "type_match:" << _Src._field_type_match << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "cases:" << _Src._field_cases << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}



inline void _1a8dc912c_AssignTypeChecker::_method_push_err(jule::Str _44727_fmt,jule::Slice<jule::Any> _44740_args) {
	(*this)._field_s->_method_push_err((*this)._field_error_token,_44727_fmt,_44740_args);
}



inline jule::Bool _1a8dc912c_AssignTypeChecker::_method_check_validity(void) {
	jule::Bool _45217_valid = true;
	{
		if (!((jule::real((*this)._field_d->_field_kind->_method_fnc())))) { goto _case_end_4441751312; }
		_case_begin_4441751312:;
		{
			jule::Ref<_1b557cd24_FnIns> _45617_f = (*this)._field_d->_field_kind->_method_fnc();
			{
				if (!((_45617_f->_method_is_builtin()))) { goto _case_end_4441755488; }
				_case_begin_4441755488:;
				{
					(*this)._method_push_err(jule::Str("built-in define cannot use as anonymous function", 48),jule::Slice<jule::Any>({}));
					_45217_valid=false;
				}
				goto _match_end_4441755280;
				_case_end_4441755488:;
				if (!((_45617_f->_field_decl->_field_cpp_linked))) { goto _case_end_4441755616; }
				_case_begin_4441755616:;
				{
					(*this)._method_push_err(jule::Str("cpp-linked functions cannot use as anonymous function", 53),jule::Slice<jule::Any>({}));
					_45217_valid=false;
				}
				goto _match_end_4441755280;
				_case_end_4441755616:;
				if (!((_45617_f->_field_decl->_method_is_method()))) { goto _case_end_4441755744; }
				_case_begin_4441755744:;
				{
					(*this)._method_push_err(jule::Str("methods cannot use as anonymous function", 40),jule::Slice<jule::Any>({}));
					_45217_valid=false;
				}
				goto _match_end_4441755280;
				_case_end_4441755744:;
				if (!((_45617_f->_field_decl->_field_generics.len() > 0LL))) { goto _case_end_4441755872; }
				_case_begin_4441755872:;
				{
					(*this)._method_push_err(jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>({}));
					_45217_valid=false;
				}
				goto _match_end_4441755280;
				_case_end_4441755872:;
				_match_end_4441755280:;
			}
		}
		goto _match_end_4441751136;
		_case_end_4441751312:;
		if (!((jule::real((*this)._field_d->_field_kind->_method_tup())))) { goto _case_end_4441751440; }
		_case_begin_4441751440:;
		{
			(*this)._method_push_err(jule::Str("tuples cannot assign to single define in same time", 50),jule::Slice<jule::Any>({}));
			_45217_valid=false;
		}
		goto _match_end_4441751136;
		_case_end_4441751440:;
		_match_end_4441751136:;
	}
	return _45217_valid;
}



inline jule::Bool _1a8dc912c_AssignTypeChecker::_method_check_const(void) {
	if ((((!((*this)._field_d->_method_is_const())) || (!(jule::real((*this)._field_dest->_method_prim())))) || (!(jule::real((*this)._field_d->_field_kind->_method_prim())))) || (!(_1ac92d7e8_is_num((*this)._field_d->_field_kind->_method_prim()->_field_kind)))) {
		return false;
	}
	jule::Str _49213_kind = (*this)._field_dest->_method_prim()->_field_kind;
	{
		if (!((_1ac92d7e8_is_float(_49213_kind)))) { goto _case_end_4441791344; }
		_case_begin_4441791344:;
		{
			if ((!(_1a8dc912c_float_assignable(_49213_kind,(*this)._field_d)))) {
				(*this)._method_push_err(jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>({}));
				return false;
			}
		}
		goto _match_end_4441790736;
		_case_end_4441791344:;
		if (!((_1ac92d7e8_is_int(_49213_kind)))) { goto _case_end_4441791456; }
		_case_begin_4441791456:;
		{
			if ((!(_1a8dc912c_int_assignable(_49213_kind,(*this)._field_d)))) {
				(*this)._method_push_err(jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>({}));
				return false;
			}
		}
		goto _match_end_4441790736;
		_case_end_4441791456:;
		_case_begin_4441790992:;
		{
			return false;
		}
		goto _match_end_4441790736;
		_case_end_4441790992:;
		_match_end_4441790736:;
	}
	return true;
}



inline jule::Bool _1a8dc912c_AssignTypeChecker::_method_check(void) {
	{
		if (!(((!(jule::real((*this)._field_d)))))) { goto _case_end_4441800048; }
		_case_begin_4441800048:;
		{
			return false;
		}
		goto _match_end_4441798400;
		_case_end_4441800048:;
		if (!(((!((*this)._method_check_validity()))))) { goto _case_end_4441799648; }
		_case_begin_4441799648:;
		{
			return false;
		}
		goto _match_end_4441798400;
		_case_end_4441799648:;
		if (!(((*this)._method_check_const()))) { goto _case_end_4441799760; }
		_case_begin_4441799760:;
		{
			return true;
		}
		goto _match_end_4441798400;
		_case_end_4441799760:;
		_case_begin_4441798592:;
		{
			return (*this)._field_s->_method_check_type_compatibility((*this)._field_dest,(*this)._field_d->_field_kind,(*this)._field_error_token,(*this)._field_deref);
		}
		goto _match_end_4441798400;
		_case_end_4441798592:;
		_match_end_4441798400:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1a8dc912c_AssignTypeChecker &_Src) {
	_Stream << "AssignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "deref:" << _Src._field_deref;
	_Stream << "}";
	return _Stream;
}



inline void _1a8dc912c_FnCallArgChecker::_method_push_err_token(_1b61ec5ec_Token _71833_token,jule::Str _71847_fmt,jule::Slice<jule::Any> _71860_args) {
	(*this)._field_e->_field_s->_method_push_err(_71833_token,_71847_fmt,_71860_args);
}



inline void _1a8dc912c_FnCallArgChecker::_method_push_err(jule::Str _72227_fmt,jule::Slice<jule::Any> _72240_args) {
	(*this)._method_push_err_token((*this)._field_error_token,_72227_fmt,_72240_args);
}



inline jule::Slice<jule::Ref<_1b557cd24_ParamIns>> _1a8dc912c_FnCallArgChecker::_method_get_params(void) {
	if ((((*this)._field_f->_field_params.len() > 0LL) && jule::real((*this)._field_f->_field_params[0LL]->_field_decl)) && (*this)._field_f->_field_params[0LL]->_field_decl->_method_is_self()) {
		return (*this)._field_f->_field_params.slice(1LL);
	}
	return (*this)._field_f->_field_params;
}



inline jule::Bool _1a8dc912c_FnCallArgChecker::_method_check_counts(jule::Slice<jule::Ref<_1b557cd24_ParamIns>>& _73332_params) {
	jule::Bool _73355_ok = jule::Bool();
	jule::I64 _73417_n = _73332_params.len();
	if ((_73417_n > 0LL) && _73332_params[0LL]->_field_decl->_method_is_self()) {
		(_73417_n)--;
	}
	jule::I64 _73917_diff = _73417_n - (*this)._field_args.len();
	{
		if (!((_73917_diff == 0LL))) { goto _case_end_4441964912; }
		_case_begin_4441964912:;
		{
			_73355_ok = true;
			return _73355_ok;
		}
		goto _match_end_4441964528;
		_case_end_4441964912:;
		if (!(((_73417_n > 0LL) && _73332_params[static_cast<jule::Int>(_73417_n - 1LL)]->_field_decl->_field_variadic))) { goto _case_end_4441965040; }
		_case_begin_4441965040:;
		{
			_73355_ok = true;
			return _73355_ok;
		}
		goto _match_end_4441964528;
		_case_end_4441965040:;
		if (!(((_73917_diff < 0LL) || (_73917_diff > _73332_params.len())))) { goto _case_end_4441965168; }
		_case_begin_4441965168:;
		{
			(*this)._method_push_err(jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
			_73355_ok = false;
			return _73355_ok;
		}
		goto _match_end_4441964528;
		_case_end_4441965168:;
		_match_end_4441964528:;
	}
	jule::Str _75217_idents = jule::Str("", 0);
	_iter_begin_4441969424:;
	if (!(_73917_diff > 0LL)) { goto _iter_end_4441969424; }
	{
		_75217_idents+=jule::Str(", ", 2) + _73332_params[static_cast<jule::Int>(_73417_n - _73917_diff)]->_field_decl->_field_ident;
	}
	_iter_next_4441969424:;
	(_73917_diff)--;
	goto _iter_begin_4441969424;
	_iter_end_4441969424:;
	_75217_idents=_75217_idents.slice(2LL);
	(*this)._method_push_err(jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(_75217_idents)}));
	_73355_ok = false;
	return _73355_ok;
}



inline jule::Bool _1a8dc912c_FnCallArgChecker::_method_check_arg(jule::Ref<_1b557cd24_ParamIns>& _76233_p,jule::Ref<_1ab00dbcc_Data>& _76252_arg,_1b61ec5ec_Token& _76269_error_token) {
	jule::Bool _76291_ok = jule::Bool();
	if ((*this)._field_dynamic_annotation && _1b557cd24_parameter_uses_generics(_76233_p->_field_decl,(*this)._field_f->_field_decl->_field_generics)) {
		_1a8dc912c_DynamicTypeAnnotation _76421_dta = _1a8dc912c_DynamicTypeAnnotation((*this)._field_e,(*this)._field_f,_76233_p,_76252_arg,_76269_error_token,nullptr);
		_76291_ok=_76421_dta._method_annotate();
		if ((!(_76291_ok))) {
			(*this)._method_push_err_token(_76269_error_token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>({}));
			_76291_ok = false;
			return _76291_ok;
		}
	}
	(*this)._field_e->_field_s->_method_check_validity_for_init_expr(_76233_p->_field_decl->_field_mutable,_76233_p->_field_decl->_field_reference,_76233_p->_field_kind,_76252_arg,_76269_error_token);
	(*this)._field_e->_field_s->_method_check_assign_type(_76233_p->_field_decl->_field_reference,_76233_p->_field_kind,_76252_arg,_76269_error_token,false);
	_76291_ok = true;
	return _76291_ok;
}



inline jule::Bool _1a8dc912c_FnCallArgChecker::_method_push(jule::Ref<_1b557cd24_ParamIns>& _78428_p,jule::Ref<_1b61ca014_Expr> _78446_arg) {
	jule::Bool _78460_ok = jule::Bool();
	jule::Ref<_1ab00dbcc_Data> _78517_d = jule::new_ref<_1ab00dbcc_Data>();
	if ((!((*this)._field_dynamic_annotation)) && (!(_78428_p->_field_decl->_field_variadic))) {
		jule::Ref<_1ac6d02c0_TypeKind> _78721_old = (*this)._field_e->_field_prefix;
		(*this)._field_e->_field_prefix=_78428_p->_field_kind;
		_78517_d=(*this)._field_e->_method_eval_expr_kind(_78446_arg->_field_kind);
		(*this)._field_e->_field_prefix=_78721_old;
	} else {
		jule::Ref<_1ac6d02c0_TypeKind> _79221_old = (*this)._field_e->_field_prefix;
		jule::drop((*this)._field_e->_field_prefix);
		_78517_d=(*this)._field_e->_method_eval_expr_kind(_78446_arg->_field_kind);
		(*this)._field_e->_field_prefix=_79221_old;
	}
	if ((!(jule::real(_78517_d)))) {
		_78460_ok = false;
		return _78460_ok;
	}
	(*this)._field_arg_models=jule::append((*this)._field_arg_models,jule::Slice<jule::Any>({_78517_d->_field_model}));
	_78460_ok = (*this)._method_check_arg(_78428_p,_78517_d,_78446_arg->_field_token);
	return _78460_ok;
}



inline jule::Bool _1a8dc912c_FnCallArgChecker::_method_push_variadic(jule::Ref<_1b557cd24_ParamIns>& _80437_p,jule::Int _80455_i) {
	jule::Bool _80465_ok = jule::Bool();
	_80465_ok=true;
	jule::Bool _80617_variadiced = false;
	jule::Bool _80713_more = (_80455_i + 1LL) < (*this)._field_args.len();
	jule::Ref<_1ab33d083_SliceExprModel> _80817_model = jule::new_struct<_1ab33d083_SliceExprModel>(new( std::nothrow ) _1ab33d083_SliceExprModel(_80437_p->_field_kind,jule::Slice<jule::Any>()));
	jule::Ref<_1ac6d02c0_TypeKind> _81217_old = (*this)._field_e->_field_prefix;
	_iter_begin_4442019680:;
	if (!(_80455_i < (*this)._field_args.len())) { goto _iter_end_4442019680; }
	{
		jule::Ref<_1b61ca014_Expr> _81421_arg = (*this)._field_args[static_cast<jule::Int>(_80455_i)];
		{
			auto _match_expr{ _81421_arg->_field_kind };
			if (!(_match_expr.type_is<jule::Ref<_1b61ca014_VariadicExpr>>())) { goto _case_end_4442026128; }
			_case_begin_4442026128:;
			{
				(*this)._field_e->_field_prefix=jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1ac6d02c0_Slc>(new( std::nothrow ) _1ac6d02c0_Slc(_80437_p->_field_kind))));
			}
			goto _match_end_4442023552;
			_case_end_4442026128:;
			_case_begin_4442024384:;
			{
				(*this)._field_e->_field_prefix=_80437_p->_field_kind;
			}
			goto _match_end_4442023552;
			_case_end_4442024384:;
			_match_end_4442023552:;
		}
		jule::Ref<_1ab00dbcc_Data> _82421_d = (*this)._field_e->_method_eval_expr_kind(_81421_arg->_field_kind);
		if ((!(jule::real(_82421_d)))) {
			_80465_ok=false;
			goto _iter_next_4442019680;
		}
		if (_82421_d->_field_variadiced) {
			_80617_variadiced=true;
			_82421_d->_field_variadiced=false;
			_80437_p->_field_kind->_field_variadic=true;
			_82421_d->_field_kind->_field_variadic=true;
			__JULE_DEFER({
				_82421_d->_field_kind->_field_variadic=false;
				_80437_p->_field_kind->_field_variadic=false;
			});
			{
				auto _match_expr{ _82421_d->_field_model };
				if (!(_match_expr.type_is<jule::Ref<_1ab33d083_SliceExprModel>>())) { goto _case_end_4442034240; }
				_case_begin_4442034240:;
				{
					_80817_model=_82421_d->_field_model.operator jule::Ref<_1ab33d083_SliceExprModel>();
					_80817_model->_field_elem_kind=_80437_p->_field_kind;
				}
				goto _match_end_4442035328;
				_case_end_4442034240:;
				_case_begin_4442035520:;
				{
					jule::drop(_80817_model);
					(*this)._field_arg_models=jule::append((*this)._field_arg_models,jule::Slice<jule::Any>({_82421_d->_field_model}));
				}
				goto _match_end_4442035328;
				_case_end_4442035520:;
				_match_end_4442035328:;
			}
			_80465_ok=(*this)._method_check_arg(_80437_p,_82421_d,_81421_arg->_field_token) && _80465_ok;
			goto _iter_next_4442019680;
		}
		_80817_model->_field_elems=jule::append(_80817_model->_field_elems,jule::Slice<jule::Any>({_82421_d->_field_model}));
		_80465_ok=(*this)._method_check_arg(_80437_p,_82421_d,_81421_arg->_field_token) && _80465_ok;
	}
	_iter_next_4442019680:;
	(_80455_i)++;
	goto _iter_begin_4442019680;
	_iter_end_4442019680:;
	(*this)._field_e->_field_prefix=_81217_old;
	if (_80617_variadiced && _80713_more) {
		(*this)._method_push_err(jule::Str("variadic argument can't use with more argument", 46),jule::Slice<jule::Any>({}));
	}
	if (jule::real(_80817_model)) {
		(*this)._field_arg_models=jule::append((*this)._field_arg_models,jule::Slice<jule::Any>({jule::Any(_80817_model)}));
	}
	_80465_ok = _80465_ok;
	return _80465_ok;
}



inline jule::Bool _1a8dc912c_FnCallArgChecker::_method_check_args(jule::Slice<jule::Ref<_1b557cd24_ParamIns>>& _87034_params) {
	jule::Bool _87057_ok = jule::Bool();
	_87057_ok=true;
	jule::Int _87217_i = 0LL;
	_julec_label_iter:;
	_iter_begin_4442053344:;
	if (!(_87217_i < _87034_params.len())) { goto _iter_end_4442053344; }
	{
		jule::Ref<_1b557cd24_ParamIns> _87521_p = _87034_params[static_cast<jule::Int>(_87217_i)];
		{
			if (!((_87521_p->_field_decl->_method_is_self()))) { goto _case_end_4442057312; }
			goto _match_end_4442056352;
			_case_end_4442057312:;
			if (!((_87521_p->_field_decl->_field_variadic))) { goto _case_end_4442057632; }
			_case_begin_4442057632:;
			{
				_87057_ok=(*this)._method_push_variadic(_87521_p,_87217_i) && _87057_ok;
				goto _iter_end_4442053344;
			}
			goto _match_end_4442056352;
			_case_end_4442057632:;
			if (!(((*this)._field_args.len() <= _87217_i))) { goto _case_end_4442057744; }
			_case_begin_4442057744:;
			{
				_87057_ok=false;
				goto _iter_end_4442053344;
			}
			goto _match_end_4442056352;
			_case_end_4442057744:;
			_case_begin_4442056480:;
			{
				_87057_ok=(*this)._method_push(_87521_p,(*this)._field_args[static_cast<jule::Int>(_87217_i)]) && _87057_ok;
			}
			goto _match_end_4442056352;
			_case_end_4442056480:;
			_match_end_4442056352:;
		}
		(_87217_i)++;
	}
	_iter_next_4442053344:;
	goto _iter_begin_4442053344;
	_iter_end_4442053344:;
	_87057_ok = _87057_ok;
	return _87057_ok;
}



inline jule::Bool _1a8dc912c_FnCallArgChecker::_method_check_dynamic_type_annotation(void) {
	jule::Bool _89750_ok = jule::Bool();
	{
		auto _range_expr = (*this)._field_f->_field_generics;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ac6d02c0_TypeKind> _1a8dc912c_g = *_range_begin;
			_iter_begin_4442066544:;
			{
				if ((!(jule::real(_1a8dc912c_g)))) {
					(*this)._method_push_err(jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>({}));
					_89750_ok = false;
					return _89750_ok;
				}
			}
			_iter_next_4442066544:;
			++_range_begin;
			if (_range_begin != _range_end) { _1a8dc912c_g = *_range_begin; goto _iter_begin_4442066544; }
			_iter_end_4442066544:;
		}
	}
	_89750_ok = true;
	return _89750_ok;
}



inline jule::Bool _1a8dc912c_FnCallArgChecker::_method_check(void) {
	jule::Bool _90726_ok = jule::Bool();
	jule::Slice<jule::Ref<_1b557cd24_ParamIns>> _90817_params = (*this)._method_get_params();
	_90726_ok=(*this)._method_check_counts(_90817_params);
	if ((!(_90726_ok))) {
		_90726_ok = false;
		return _90726_ok;
	}
	_90726_ok=(*this)._method_check_args(_90817_params);
	if (_90726_ok && (*this)._field_dynamic_annotation) {
		_90726_ok=(*this)._method_check_dynamic_type_annotation();
	}
	_90726_ok = _90726_ok;
	return _90726_ok;
}







std::ostream &operator<<(std::ostream &_Stream, const _1a8dc912c_FnCallArgChecker &_Src) {
	_Stream << "FnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamic_annotation:" << _Src._field_dynamic_annotation << ", ";
	_Stream << "arg_models:" << _Src._field_arg_models;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61ca014_GenericDecl &_Src) {
	_Stream << "GenericDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline void _1a8dc912c_RetTypeChecker::_method_prepare_types(void) {
	(*this)._field_types=_1a8dc912c_get_fn_result_types((*this)._field_f);
}



inline void _1a8dc912c_RetTypeChecker::_method_prepare_exprs(jule::Ref<_1b61ca014_Expr>& _125337_e) {
	if ((!(jule::real(_125337_e)))) {
		return;
	}
	{
		auto _match_expr{ _125337_e->_field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_TupleExpr>>())) { goto _case_end_4442287232; }
		_case_begin_4442287232:;
		{
			(*this)._field_exprs=_125337_e->_field_kind.operator jule::Ref<_1b61ca014_TupleExpr>()->_field_expr;
		}
		goto _match_end_4442286048;
		_case_end_4442287232:;
		_case_begin_4442285440:;
		{
			(*this)._field_exprs=jule::append((*this)._field_exprs,jule::Slice<jule::Ref<_1b61ca014_Expr>>({_125337_e}));
		}
		goto _match_end_4442286048;
		_case_end_4442285440:;
		_match_end_4442286048:;
	}
}



inline void _1a8dc912c_RetTypeChecker::_method_ret_vars(void) {
	if ((*this)._field_f->_field_decl->_method_is_void()) {
		return;
	}
	(*this)._field_vars=jule::Slice<jule::Ref<_1b623eab2_Var>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>((*this)._field_f->_field_decl->_field_result->_field_idents.len())));
	jule::Ref<_1ab009de8_ScopeChecker> _127317_root_scope = (*this)._field_sc->_method_get_root();
	jule::Int _127517_j = 0LL;
	{
		auto _range_expr = (*this)._field_f->_field_decl->_field_result->_field_idents;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1a8dc912c_i = 0;
			_1b61ec5ec_Token _1a8dc912c_ident = *_range_begin;
			_iter_begin_4442298208:;
			{
				if ((!(_1b61ec5ec_is_ignore_ident(_1a8dc912c_ident._field_kind)))) {
					(*this)._field_vars[static_cast<jule::Int>(_1a8dc912c_i)]=_127317_root_scope->_field_table->_field_vars[static_cast<jule::Int>(_127517_j)];
					(_127517_j)++;
				} else {
					(*this)._field_vars[static_cast<jule::Int>(_1a8dc912c_i)]=jule::new_struct<_1b623eab2_Var>(new( std::nothrow ) _1b623eab2_Var(jule::Ref<_1ab009de8_Scope>(),_1b61ec5ec_Token(),jule::Str("_", 1),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Str(),jule::new_struct<_1ac6d02c0_TypeSymbol>(new( std::nothrow ) _1ac6d02c0_TypeSymbol(jule::Ref<_1b61ca014_TypeDecl>(),(*this)._field_types[static_cast<jule::Int>(_1a8dc912c_i)])),jule::Ref<_1ab00dbcc_Value>(),jule::Ref<_1b5589c76_ReferenceStack>(),jule::Slice<jule::Ref<_1b61ca014_Directive>>(),jule::Slice<jule::Ref<_1b623eab2_Var>>()));
				}
			}
			_iter_next_4442298208:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1a8dc912c_i; _1a8dc912c_ident = *_range_begin; goto _iter_begin_4442298208; }
			_iter_end_4442298208:;
		}
	}
	if (_127517_j == 0LL) {
		(*this)._field_vars=nullptr;
	}
}



inline void _1a8dc912c_RetTypeChecker::_method_check_exprs(void) {
	if ((*this)._field_exprs.len() == 0LL) {
		return;
	}
	jule::Slice<jule::Ref<_1ab00dbcc_Data>> _129917_datas = jule::Slice<jule::Ref<_1ab00dbcc_Data>>::alloc(0LL,static_cast<jule::Int>(static_cast<jule::I64>((*this)._field_exprs.len())));
	{
		auto _range_expr = (*this)._field_exprs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1a8dc912c_i = 0;
			jule::Ref<_1b61ca014_Expr> _1a8dc912c_expr = *_range_begin;
			_iter_begin_4442314096:;
			{
				if (_1a8dc912c_i >= (*this)._field_types.len()) {
					goto _iter_end_4442314096;
				}
				jule::Ref<_1ac6d02c0_TypeKind> _130621_t = (*this)._field_types[static_cast<jule::Int>(_1a8dc912c_i)];
				jule::Ref<_1ab00dbcc_Data> _130821_d = (*this)._field_sc->_field_s->_method_evalp(_1a8dc912c_expr,(*this)._field_sc,_130621_t);
				if ((!(jule::real(_130821_d)))) {
					goto _iter_next_4442314096;
				}
				_129917_datas=jule::append(_129917_datas,jule::Slice<jule::Ref<_1ab00dbcc_Data>>({_130821_d}));
				if ((!(_130821_d->_field_mutable)) && _130821_d->_field_kind->_method_mutable()) {
					(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("mutable typed return expressions should be mutable", 50),jule::Slice<jule::Any>({}));
					return;
				}
				_1a8dc912c_AssignTypeChecker _132021_ac = _1a8dc912c_AssignTypeChecker((*this)._field_sc->_field_s,_130621_t,_130821_d,(*this)._field_error_token,jule::Bool());
				_132021_ac._method_check();
			}
			_iter_next_4442314096:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1a8dc912c_i; _1a8dc912c_expr = *_range_begin; goto _iter_begin_4442314096; }
			_iter_end_4442314096:;
		}
	}
	if (_129917_datas.len() > 1LL) {
		(*this)._field_model=jule::Any(jule::new_struct<_1ab33d083_TupleExprModel>(new( std::nothrow ) _1ab33d083_TupleExprModel(_129917_datas)));
	} else if (_129917_datas.len() == 1LL) {
		(*this)._field_model=_129917_datas[0LL]->_field_model;
	}
}



inline jule::Bool _1a8dc912c_RetTypeChecker::_method_check(jule::Ref<_1b61ca014_Expr>& _133929_e) {
	(*this)._method_prepare_types();
	(*this)._method_prepare_exprs(_133929_e);
	(*this)._method_ret_vars();
	jule::I64 _134413_n = (*this)._field_exprs.len();
	if ((_134413_n == 0LL) && (!((*this)._field_f->_field_decl->_method_is_void()))) {
		if ((!((*this)._field_f->_field_decl->_method_any_var()))) {
			(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("return statements of non-void functions should have return expression", 69),jule::Slice<jule::Any>({}));
			return false;
		}
		return true;
	}
	if ((_134413_n > 0LL) && (*this)._field_f->_field_decl->_method_is_void()) {
		(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("void functions is cannot returns any value", 42),jule::Slice<jule::Any>({}));
		return false;
	}
	if (_134413_n > (*this)._field_types.len()) {
		(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("overflow return expressions", 27),jule::Slice<jule::Any>({}));
	} else if (_134413_n < (*this)._field_types.len()) {
		(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("missing return expressions for multi return", 43),jule::Slice<jule::Any>({}));
	}
	(*this)._method_check_exprs();
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, const _1a8dc912c_RetTypeChecker &_Src) {
	_Stream << "RetTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61ca014_GotoSt &_Src) {
	_Stream << "GotoSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61ca014_AssignLeft &_Src) {
	_Stream << "AssignLeft{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ab00dbcc_BinopSolver::_method_check_type_compatibility(void) {
	_1a8dc912c_TypeCompatibilityChecker _334817_tcc = _1a8dc912c_TypeCompatibilityChecker((*this)._field_e->_field_s,(*this)._field_l->_field_kind,(*this)._field_r->_field_kind,(*this)._field_op,jule::Bool(),true,jule::Bool());
	return _334817_tcc._method_check();
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_BinopSolver::_method_eval_nil(void) {
	if ((!((*this)._field_r->_field_kind->_method_nil_compatible()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(jule::Str("nil", 3)),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4444373168; }
		_case_begin_4444373168:;
		{
			return jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_1ac6d02c0_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1ac6d02c0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1ac90c3ed_Const>()));
		}
		goto _match_end_4444369600;
		_case_end_4444373168:;
		_case_begin_4444364848:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(jule::Str("nil", 3))}));
			return jule::new_ref<_1ab00dbcc_Data>();
		}
		goto _match_end_4444369600;
		_case_end_4444364848:;
		_match_end_4444369600:;
	}
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_BinopSolver::_method_eval_enum(void) {
	jule::Ref<_1a909ac6b_Enum> _338017_enm = (*this)._field_l->_field_kind->_method_enm();
	if ((!(jule::real((*this)._field_r->_field_kind->_method_enm()))) || ((_338017_enm).alloc != ((*this)._field_r->_field_kind->_method_enm()).alloc)) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_338017_enm->_field_ident),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4444388992; }
		_case_begin_4444388992:;
		{
			return jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_1ac6d02c0_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1ac6d02c0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1ac90c3ed_Const>()));
		}
		goto _match_end_4444382576;
		_case_end_4444388992:;
		if (!((jule::Str("&", 1)) == _match_expr || (jule::Str("|", 1)) == _match_expr)) { goto _case_end_4444389568; }
		_case_begin_4444389568:;
		{
			if ((!(jule::real(_338017_enm->_field_kind->_field_kind->_method_prim()))) || (!(_1ac92d7e8_is_int(_338017_enm->_field_kind->_field_kind->_method_prim()->_method_to_str())))) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(_338017_enm->_field_ident)}));
			}
			return (*this)._field_l;
		}
		goto _match_end_4444382576;
		_case_end_4444389568:;
		_case_begin_4444378016:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(_338017_enm->_field_ident)}));
			return jule::new_ref<_1ab00dbcc_Data>();
		}
		goto _match_end_4444382576;
		_case_end_4444378016:;
		_match_end_4444382576:;
	}
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_BinopSolver::_method_eval_ptr(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr || (jule::Str("<", 1)) == _match_expr || (jule::Str(">", 1)) == _match_expr || (jule::Str("<=", 2)) == _match_expr || (jule::Str(">=", 2)) == _match_expr)) { goto _case_end_4444408128; }
		_case_begin_4444408128:;
		{
			return jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_1ac6d02c0_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1ac6d02c0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1ac90c3ed_Const>()));
		}
		goto _match_end_4444403456;
		_case_end_4444408128:;
		_case_begin_4444397872:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_1ab00dbcc_Data>();
		}
		goto _match_end_4444403456;
		_case_end_4444397872:;
		_match_end_4444403456:;
	}
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_BinopSolver::_method_eval_arr(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4444421088; }
		_case_begin_4444421088:;
		{
			return jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_1ac6d02c0_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1ac6d02c0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1ac90c3ed_Const>()));
		}
		goto _match_end_4444416512;
		_case_end_4444421088:;
		_case_begin_4444415344:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_1ab00dbcc_Data>();
		}
		goto _match_end_4444416512;
		_case_end_4444415344:;
		_match_end_4444416512:;
	}
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_BinopSolver::_method_eval_slc(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4444432656; }
		_case_begin_4444432656:;
		{
			return jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_1ac6d02c0_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1ac6d02c0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1ac90c3ed_Const>()));
		}
		goto _match_end_4444428016;
		_case_end_4444432656:;
		_case_begin_4442925104:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_1ab00dbcc_Data>();
		}
		goto _match_end_4444428016;
		_case_end_4442925104:;
		_match_end_4444428016:;
	}
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_BinopSolver::_method_eval_fn(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4444445168; }
		_case_begin_4444445168:;
		{
			return jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_1ac6d02c0_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1ac6d02c0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1ac90c3ed_Const>()));
		}
		goto _match_end_4444440592;
		_case_end_4444445168:;
		_case_begin_4444439424:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_1ab00dbcc_Data>();
		}
		goto _match_end_4444440592;
		_case_end_4444439424:;
		_match_end_4444440592:;
	}
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_BinopSolver::_method_eval_struct(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4444457680; }
		_case_begin_4444457680:;
		{
			return jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_1ac6d02c0_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1ac6d02c0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1ac90c3ed_Const>()));
		}
		goto _match_end_4444453104;
		_case_end_4444457680:;
		_case_begin_4444451936:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_1ab00dbcc_Data>();
		}
		goto _match_end_4444453104;
		_case_end_4444451936:;
		_match_end_4444453104:;
	}
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_BinopSolver::_method_eval_trait(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4444470192; }
		_case_begin_4444470192:;
		{
			return jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_1ac6d02c0_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1ac6d02c0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1ac90c3ed_Const>()));
		}
		goto _match_end_4444465616;
		_case_end_4444470192:;
		_case_begin_4444464448:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_1ab00dbcc_Data>();
		}
		goto _match_end_4444465616;
		_case_end_4444464448:;
		_match_end_4444465616:;
	}
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_BinopSolver::_method_eval_any(void) {
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4444477552; }
		_case_begin_4444477552:;
		{
			return jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_1ac6d02c0_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1ac6d02c0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1ac90c3ed_Const>()));
		}
		goto _match_end_4444472192;
		_case_end_4444477552:;
		_case_begin_4444473008:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(jule::Str("any", 3))}));
			return jule::new_ref<_1ab00dbcc_Data>();
		}
		goto _match_end_4444472192;
		_case_end_4444473008:;
		_match_end_4444472192:;
	}
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_BinopSolver::_method_eval_bool(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr || (jule::Str("&&", 2)) == _match_expr || (jule::Str("||", 2)) == _match_expr)) { goto _case_end_4444490208; }
		_case_begin_4444490208:;
		{
			return (*this)._field_l;
		}
		goto _match_end_4444485504;
		_case_end_4444490208:;
		_case_begin_4444484432:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_1ab00dbcc_Data>();
		}
		goto _match_end_4444485504;
		_case_end_4444484432:;
		_match_end_4444485504:;
	}
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_BinopSolver::_method_eval_str(void) {
	jule::Str _357417_rk = (*this)._field_r->_field_kind->_method_to_str();
	if (_357417_rk != jule::Str("str", 3)) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any(_357417_rk)}));
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("+", 1)) == _match_expr)) { goto _case_end_4444502416; }
		_case_begin_4444502416:;
		{
			return (*this)._field_l;
		}
		goto _match_end_4444498368;
		_case_end_4444502416:;
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4444502976; }
		_case_begin_4444502976:;
		{
			return jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_1ac6d02c0_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1ac6d02c0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1ac90c3ed_Const>()));
		}
		goto _match_end_4444498368;
		_case_end_4444502976:;
		_case_begin_4444497616:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(jule::Str("any", 3))}));
			return jule::new_ref<_1ab00dbcc_Data>();
		}
		goto _match_end_4444498368;
		_case_end_4444497616:;
		_match_end_4444498368:;
	}
}



inline void _1ab00dbcc_BinopSolver::_method_set_type_to_greater(void) {
	if (((*this)._field_l->_method_is_const() && (*this)._field_r->_method_is_const()) || ((!((*this)._field_l->_method_is_const())) && (!((*this)._field_r->_method_is_const())))) {
		jule::Str _360017_lk = (*this)._field_l->_field_kind->_method_to_str();
		jule::Str _360117_rk = (*this)._field_r->_field_kind->_method_to_str();
		if (_1ac9d0e1c_is_greater(_360117_rk,_360017_lk)) {
			(*this)._field_l->_field_kind=(*this)._field_r->_field_kind;
		}
		return;
	}
	if ((*this)._field_l->_method_is_const()) {
		(*this)._field_l->_field_kind=(*this)._field_r->_field_kind;
		return;
	}
	(*this)._field_r->_field_kind=(*this)._field_l->_field_kind;
}



inline void _1ab00dbcc_BinopSolver::_method_check_mod_data(jule::Ref<_1ab00dbcc_Data> _361637_d) {
	if ((!(_361637_d->_method_is_const()))) {
		if ((!(jule::real(_361637_d->_field_kind->_method_prim()))) || (!(_1ac92d7e8_is_int(_361637_d->_field_kind->_method_prim()->_field_kind)))) {
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>({}));
		}
		return;
	}
	{
		if (!((_1a8dc912c_sig_assignable(jule::Str("i64", 3),_361637_d)))) { goto _case_end_4444527152; }
		_case_begin_4444527152:;
		{
			_361637_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_361637_d->_field_constant->_method_as_i64()));
		}
		goto _match_end_4444519392;
		_case_end_4444527152:;
		if (!((_1a8dc912c_unsig_assignable(jule::Str("u64", 3),_361637_d)))) { goto _case_end_4444527264; }
		_case_begin_4444527264:;
		{
			_361637_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_361637_d->_field_constant->_method_as_u64()));
		}
		goto _match_end_4444519392;
		_case_end_4444527264:;
		_case_begin_4444519520:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4444519392;
		_case_end_4444519520:;
		_match_end_4444519392:;
	}
}



inline void _1ab00dbcc_BinopSolver::_method_mod(void) {
	(*this)._method_check_mod_data((*this)._field_l);
	(*this)._method_check_mod_data((*this)._field_r);
}



inline jule::Bool _1ab00dbcc_BinopSolver::_method_numbers_are_compatibile(jule::Str& _364139_lk,jule::Str& _364149_rk) {
	if ((*this)._field_l->_method_is_const()) {
		return true;
	}
	if (_364139_lk == jule::Str("f32", 3)) {
		if ((*this)._field_r->_method_is_const()) {
			return true;
		}
		return _364149_rk == jule::Str("f32", 3);
	}
	if (_364139_lk == jule::Str("f64", 3)) {
		if ((*this)._field_r->_method_is_const()) {
			return true;
		}
		return _364149_rk == jule::Str("f64", 3);
	}
	if ((*this)._field_r->_method_is_const()) {
		if ((!((*this)._field_r->_field_constant->_method_is_f64()))) {
			return true;
		}
		{
			auto _match_expr{ (*this)._field_r->_field_model };
			if (!(_match_expr.type_is<jule::Ref<_1ac90c3ed_Const>>())) { goto _case_end_4444547584; }
			_case_begin_4444547584:;
			{
				return _1a8dc912c_int_assignable(jule::Str("int", 3),(*this)._field_r) || _1a8dc912c_int_assignable(jule::Str("uint", 4),(*this)._field_r);
			}
			goto _match_end_4444543712;
			_case_end_4444547584:;
			_case_begin_4444547248:;
			{
				return false;
			}
			goto _match_end_4444543712;
			_case_end_4444547248:;
			_match_end_4444543712:;
		}
	}
	return (!(_1ac92d7e8_is_float(_364149_rk)));
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_BinopSolver::_method_eval_float(void) {
	jule::Str _368013_lk = (*this)._field_l->_field_kind->_method_to_str();
	jule::Str _368113_rk = (*this)._field_r->_field_kind->_method_to_str();
	if ((!((*this)._method_numbers_are_compatibile(_368013_lk,_368113_rk)))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_368013_lk),jule::Any(_368113_rk)}));
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr || (jule::Str("<", 1)) == _match_expr || (jule::Str(">", 1)) == _match_expr || (jule::Str(">=", 2)) == _match_expr || (jule::Str("<=", 2)) == _match_expr)) { goto _case_end_4444555536; }
		_case_begin_4444555536:;
		{
			return jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_1ac6d02c0_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1ac6d02c0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1ac90c3ed_Const>()));
		}
		goto _match_end_4444559776;
		_case_end_4444555536:;
		_match_end_4444559776:;
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("+", 1)) == _match_expr || (jule::Str("-", 1)) == _match_expr || (jule::Str("*", 1)) == _match_expr || (jule::Str("/", 1)) == _match_expr)) { goto _case_end_4444566528; }
		_case_begin_4444566528:;
		{
			(*this)._method_set_type_to_greater();
			return (*this)._field_l;
		}
		goto _match_end_4444560144;
		_case_end_4444566528:;
		if (!((jule::Str("%", 1)) == _match_expr)) { goto _case_end_4444567104; }
		_case_begin_4444567104:;
		{
			if ((!(_1ac92d7e8_is_int(_368113_rk)))) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_368013_lk),jule::Any(_368113_rk)}));
				return jule::new_ref<_1ab00dbcc_Data>();
			}
			(*this)._method_mod();
			return (*this)._field_r;
		}
		goto _match_end_4444560144;
		_case_end_4444567104:;
		_case_begin_4444563312:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for floating-point type(s)", 52),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind)}));
			return jule::new_ref<_1ab00dbcc_Data>();
		}
		goto _match_end_4444560144;
		_case_end_4444563312:;
		_match_end_4444560144:;
	}
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_BinopSolver::_method_eval_unsig_int(void) {
	jule::Str _372613_lk = (*this)._field_l->_field_kind->_method_to_str();
	jule::Str _372713_rk = (*this)._field_r->_field_kind->_method_to_str();
	if ((!((*this)._method_numbers_are_compatibile(_372613_lk,_372713_rk)))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_372613_lk),jule::Any(_372713_rk)}));
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr || (jule::Str("<", 1)) == _match_expr || (jule::Str(">", 1)) == _match_expr || (jule::Str(">=", 2)) == _match_expr || (jule::Str("<=", 2)) == _match_expr)) { goto _case_end_4444577056; }
		_case_begin_4444577056:;
		{
			return jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_1ac6d02c0_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1ac6d02c0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1ac90c3ed_Const>()));
		}
		goto _match_end_4444581376;
		_case_end_4444577056:;
		_match_end_4444581376:;
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("+", 1)) == _match_expr || (jule::Str("-", 1)) == _match_expr || (jule::Str("*", 1)) == _match_expr || (jule::Str("/", 1)) == _match_expr || (jule::Str("&", 1)) == _match_expr || (jule::Str("|", 1)) == _match_expr || (jule::Str("^", 1)) == _match_expr)) { goto _case_end_4444588032; }
		_case_begin_4444588032:;
		{
			(*this)._method_set_type_to_greater();
			return (*this)._field_l;
		}
		goto _match_end_4444583904;
		_case_end_4444588032:;
		if (!((jule::Str("%", 1)) == _match_expr)) { goto _case_end_4444588608; }
		_case_begin_4444588608:;
		{
			(*this)._method_mod();
			(*this)._method_set_type_to_greater();
			return (*this)._field_l;
		}
		goto _match_end_4444583904;
		_case_end_4444588608:;
		if (!((jule::Str("<<", 2)) == _match_expr || (jule::Str(">>", 2)) == _match_expr)) { goto _case_end_4444587824; }
		_case_begin_4444587824:;
		{
			if ((!(_1ab00dbcc_is_ok_for_shifting((*this)._field_r)))) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>({}));
				return jule::new_ref<_1ab00dbcc_Data>();
			}
			if ((*this)._field_l->_method_is_const()) {
				(*this)._field_l->_field_kind=(*this)._field_r->_field_kind;
			}
			return (*this)._field_l;
		}
		goto _match_end_4444583904;
		_case_end_4444587824:;
		_case_begin_4444584816:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for unsigned integer type(s)", 54),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind)}));
			return jule::new_ref<_1ab00dbcc_Data>();
		}
		goto _match_end_4444583904;
		_case_end_4444584816:;
		_match_end_4444583904:;
	}
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_BinopSolver::_method_eval_sig_int(void) {
	jule::Str _378513_lk = (*this)._field_l->_field_kind->_method_to_str();
	jule::Str _378613_rk = (*this)._field_r->_field_kind->_method_to_str();
	if ((!((*this)._method_numbers_are_compatibile(_378513_lk,_378613_rk)))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_378513_lk),jule::Any(_378613_rk)}));
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr || (jule::Str("<", 1)) == _match_expr || (jule::Str(">", 1)) == _match_expr || (jule::Str(">=", 2)) == _match_expr || (jule::Str("<=", 2)) == _match_expr)) { goto _case_end_4444602384; }
		_case_begin_4444602384:;
		{
			return jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_1ac6d02c0_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1ac6d02c0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1ac90c3ed_Const>()));
		}
		goto _match_end_4444606528;
		_case_end_4444602384:;
		_match_end_4444606528:;
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("+", 1)) == _match_expr || (jule::Str("-", 1)) == _match_expr || (jule::Str("*", 1)) == _match_expr || (jule::Str("/", 1)) == _match_expr || (jule::Str("&", 1)) == _match_expr || (jule::Str("|", 1)) == _match_expr || (jule::Str("^", 1)) == _match_expr)) { goto _case_end_4444612224; }
		_case_begin_4444612224:;
		{
			(*this)._method_set_type_to_greater();
			return (*this)._field_l;
		}
		goto _match_end_4444608672;
		_case_end_4444612224:;
		if (!((jule::Str("%", 1)) == _match_expr)) { goto _case_end_4444612800; }
		_case_begin_4444612800:;
		{
			(*this)._method_mod();
			(*this)._method_set_type_to_greater();
			return (*this)._field_l;
		}
		goto _match_end_4444608672;
		_case_end_4444612800:;
		if (!((jule::Str("<<", 2)) == _match_expr || (jule::Str(">>", 2)) == _match_expr)) { goto _case_end_4444612016; }
		_case_begin_4444612016:;
		{
			if ((!(_1ab00dbcc_is_ok_for_shifting((*this)._field_r)))) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>({}));
				return jule::new_ref<_1ab00dbcc_Data>();
			}
			return (*this)._field_l;
		}
		goto _match_end_4444608672;
		_case_end_4444612016:;
		_case_begin_4444607104:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for integer type(s)", 45),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind)}));
			return jule::new_ref<_1ab00dbcc_Data>();
		}
		goto _match_end_4444608672;
		_case_end_4444607104:;
		_match_end_4444608672:;
	}
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_BinopSolver::_method_eval_prim(void) {
	jule::Ref<_1ac6d02c0_Prim> _384013_prim = (*this)._field_l->_field_kind->_method_prim();
	{
		if (!((_384013_prim->_method_is_any()))) { goto _case_end_4444622912; }
		_case_begin_4444622912:;
		{
			return (*this)._method_eval_any();
		}
		goto _match_end_4444622720;
		_case_end_4444622912:;
		if (!((_384013_prim->_method_is_bool()))) { goto _case_end_4444623040; }
		_case_begin_4444623040:;
		{
			return (*this)._method_eval_bool();
		}
		goto _match_end_4444622720;
		_case_end_4444623040:;
		if (!((_384013_prim->_method_is_str()))) { goto _case_end_4444623168; }
		_case_begin_4444623168:;
		{
			return (*this)._method_eval_str();
		}
		goto _match_end_4444622720;
		_case_end_4444623168:;
		_match_end_4444622720:;
	}
	jule::Ref<_1ac6d02c0_Prim> _384713_rprim = (*this)._field_r->_field_kind->_method_prim();
	if ((!(jule::real(_384713_rprim)))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_384013_prim->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	jule::Str _385313_lk = _384013_prim->_method_to_str();
	{
		if (!((_1ac92d7e8_is_float(_385313_lk)))) { goto _case_end_4444636784; }
		_case_begin_4444636784:;
		{
			return (*this)._method_eval_float();
		}
		goto _match_end_4444629168;
		_case_end_4444636784:;
		if (!((_1ac92d7e8_is_unsig_int(_385313_lk)))) { goto _case_end_4444635792; }
		_case_begin_4444635792:;
		{
			return (*this)._method_eval_unsig_int();
		}
		goto _match_end_4444629168;
		_case_end_4444635792:;
		if (!((_1ac92d7e8_is_sig_int(_385313_lk)))) { goto _case_end_4444636000; }
		_case_begin_4444636000:;
		{
			return (*this)._method_eval_sig_int();
		}
		goto _match_end_4444629168;
		_case_end_4444636000:;
		_case_begin_4444629296:;
		{
			return jule::new_ref<_1ab00dbcc_Data>();
		}
		goto _match_end_4444629168;
		_case_end_4444629296:;
		_match_end_4444629168:;
	}
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_BinopSolver::_method_eval(void) {
	{
		if (!(((*this)._field_l->_field_kind->_method_void()))) { goto _case_end_4444642704; }
		_case_begin_4444642704:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(jule::Str("void", 4))}));
			return jule::new_ref<_1ab00dbcc_Data>();
		}
		goto _match_end_4444640640;
		_case_end_4444642704:;
		if (!(((*this)._field_l->_field_kind->_method_is_nil()))) { goto _case_end_4444643280; }
		_case_begin_4444643280:;
		{
			return (*this)._method_eval_nil();
		}
		goto _match_end_4444640640;
		_case_end_4444643280:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_enm())))) { goto _case_end_4444642496; }
		_case_begin_4444642496:;
		{
			return (*this)._method_eval_enum();
		}
		goto _match_end_4444640640;
		_case_end_4444642496:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_ptr())))) { goto _case_end_4444642944; }
		_case_begin_4444642944:;
		{
			return (*this)._method_eval_ptr();
		}
		goto _match_end_4444640640;
		_case_end_4444642944:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_arr())))) { goto _case_end_4444643056; }
		_case_begin_4444643056:;
		{
			return (*this)._method_eval_arr();
		}
		goto _match_end_4444640640;
		_case_end_4444643056:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_slc())))) { goto _case_end_4444641888; }
		_case_begin_4444641888:;
		{
			return (*this)._method_eval_slc();
		}
		goto _match_end_4444640640;
		_case_end_4444641888:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_fnc())))) { goto _case_end_4444642000; }
		_case_begin_4444642000:;
		{
			return (*this)._method_eval_fn();
		}
		goto _match_end_4444640640;
		_case_end_4444642000:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_trt()) || jule::real((*this)._field_r->_field_kind->_method_trt())))) { goto _case_end_4444642112; }
		_case_begin_4444642112:;
		{
			if (jule::real((*this)._field_r->_field_kind->_method_trt())) {
				std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple((*this)._field_r,(*this)._field_l);
			}
			return (*this)._method_eval_trait();
		}
		goto _match_end_4444640640;
		_case_end_4444642112:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_strct())))) { goto _case_end_4444641136; }
		_case_begin_4444641136:;
		{
			return (*this)._method_eval_struct();
		}
		goto _match_end_4444640640;
		_case_end_4444641136:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_prim())))) { goto _case_end_4444641248; }
		_case_begin_4444641248:;
		{
			return (*this)._method_eval_prim();
		}
		goto _match_end_4444640640;
		_case_end_4444641248:;
		_case_begin_4444640832:;
		{
			return jule::new_ref<_1ab00dbcc_Data>();
		}
		goto _match_end_4444640640;
		_case_end_4444640832:;
		_match_end_4444640640:;
	}
}



inline void _1ab00dbcc_BinopSolver::_method_assign_shift(jule::Ref<_1ab00dbcc_Data> _390331_d,jule::F64 _390341_r) {
	{
		if (!((_390341_r <= 6LL))) { goto _case_end_4444670800; }
		_case_begin_4444670800:;
		{
			_390331_d->_field_kind->_method_prim()->_field_kind=jule::Str("i8", 2);
			_390331_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_390331_d->_field_constant->_method_as_i64()));
		}
		goto _match_end_4444670144;
		_case_end_4444670800:;
		if (!((_390341_r <= 7LL))) { goto _case_end_4444670912; }
		_case_begin_4444670912:;
		{
			_390331_d->_field_kind->_method_prim()->_field_kind=jule::Str("u8", 2);
			_390331_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_390331_d->_field_constant->_method_as_u64()));
		}
		goto _match_end_4444670144;
		_case_end_4444670912:;
		if (!((_390341_r <= 14LL))) { goto _case_end_4444674288; }
		_case_begin_4444674288:;
		{
			_390331_d->_field_kind->_method_prim()->_field_kind=jule::Str("i16", 3);
			_390331_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_390331_d->_field_constant->_method_as_i64()));
		}
		goto _match_end_4444670144;
		_case_end_4444674288:;
		if (!((_390341_r <= 15LL))) { goto _case_end_4444674400; }
		_case_begin_4444674400:;
		{
			_390331_d->_field_kind->_method_prim()->_field_kind=jule::Str("u16", 3);
			_390331_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_390331_d->_field_constant->_method_as_u64()));
		}
		goto _match_end_4444670144;
		_case_end_4444674400:;
		if (!((_390341_r <= 30LL))) { goto _case_end_4444674512; }
		_case_begin_4444674512:;
		{
			_390331_d->_field_kind->_method_prim()->_field_kind=jule::Str("i32", 3);
			_390331_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_390331_d->_field_constant->_method_as_i64()));
		}
		goto _match_end_4444670144;
		_case_end_4444674512:;
		if (!((_390341_r <= 31LL))) { goto _case_end_4444674624; }
		_case_begin_4444674624:;
		{
			_390331_d->_field_kind->_method_prim()->_field_kind=jule::Str("u32", 3);
			_390331_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_390331_d->_field_constant->_method_as_u64()));
		}
		goto _match_end_4444670144;
		_case_end_4444674624:;
		if (!((_390341_r <= 62LL))) { goto _case_end_4444674736; }
		_case_begin_4444674736:;
		{
			_390331_d->_field_kind->_method_prim()->_field_kind=jule::Str("i64", 3);
			_390331_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_390331_d->_field_constant->_method_as_i64()));
		}
		goto _match_end_4444670144;
		_case_end_4444674736:;
		if (!((_390341_r <= 63LL))) { goto _case_end_4444674848; }
		_case_begin_4444674848:;
		{
			_390331_d->_field_kind->_method_prim()->_field_kind=jule::Str("u64", 3);
			_390331_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_390331_d->_field_constant->_method_as_u64()));
		}
		goto _match_end_4444670144;
		_case_end_4444674848:;
		if (!((_390341_r <= 127LL))) { goto _case_end_4444674960; }
		_case_begin_4444674960:;
		{
			_390331_d->_field_kind->_method_prim()->_field_kind=jule::Str("f32", 3);
			_390331_d->_field_constant->_method_set_f64(static_cast<jule::F64>(_390331_d->_field_constant->_method_as_f64()));
		}
		goto _match_end_4444670144;
		_case_end_4444674960:;
		_case_begin_4444670336:;
		{
			_390331_d->_field_kind->_method_prim()->_field_kind=jule::Str("f64", 3);
			_390331_d->_field_constant->_method_set_f64(static_cast<jule::F64>(_390331_d->_field_constant->_method_as_f64()));
		}
		goto _match_end_4444670144;
		_case_end_4444670336:;
		_match_end_4444670144:;
	}
}



inline void _1ab00dbcc_BinopSolver::_method_solve_const(jule::Ref<_1ab00dbcc_Data> _394734_d) {
	{
		if (!(((!(jule::real(_394734_d)))))) { goto _case_end_4444703840; }
		_case_begin_4444703840:;
		{
			return;
		}
		goto _match_end_4444703616;
		_case_end_4444703840:;
		if (!(((!((*this)._field_l->_method_is_const()))) || ((!((*this)._field_r->_method_is_const()))))) { goto _case_end_4444703968; }
		_case_begin_4444703968:;
		{
			jule::drop(_394734_d->_field_constant);
			return;
		}
		goto _match_end_4444703616;
		_case_end_4444703968:;
		_match_end_4444703616:;
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr)) { goto _case_end_4444706992; }
		_case_begin_4444706992:;
		{
			_394734_d->_field_constant=_1ac90c3ed_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_eqs((*this)._field_r->_field_constant));
		}
		goto _match_end_4444707632;
		_case_end_4444706992:;
		if (!((jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4444707120; }
		_case_begin_4444707120:;
		{
			_394734_d->_field_constant=_1ac90c3ed_Const::_static_method_new_bool((!((*this)._field_l->_field_constant->_method_eqs((*this)._field_r->_field_constant))));
		}
		goto _match_end_4444707632;
		_case_end_4444707120:;
		if (!((jule::Str("::", 2)) == _match_expr)) { goto _case_end_4444708336; }
		_case_begin_4444708336:;
		{
			_394734_d->_field_constant=_1ac90c3ed_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_or((*this)._field_r->_field_constant));
		}
		goto _match_end_4444707632;
		_case_end_4444708336:;
		if (!((jule::Str("&&", 2)) == _match_expr)) { goto _case_end_4444708464; }
		_case_begin_4444708464:;
		{
			_394734_d->_field_constant=_1ac90c3ed_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_and((*this)._field_r->_field_constant));
		}
		goto _match_end_4444707632;
		_case_end_4444708464:;
		if (!((jule::Str(">", 1)) == _match_expr)) { goto _case_end_4444708592; }
		_case_begin_4444708592:;
		{
			_394734_d->_field_constant=_1ac90c3ed_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_gt((*this)._field_r->_field_constant));
		}
		goto _match_end_4444707632;
		_case_end_4444708592:;
		if (!((jule::Str("<", 1)) == _match_expr)) { goto _case_end_4444708720; }
		_case_begin_4444708720:;
		{
			_394734_d->_field_constant=_1ac90c3ed_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_lt((*this)._field_r->_field_constant));
		}
		goto _match_end_4444707632;
		_case_end_4444708720:;
		if (!((jule::Str(">=", 2)) == _match_expr)) { goto _case_end_4444708848; }
		_case_begin_4444708848:;
		{
			_394734_d->_field_constant=_1ac90c3ed_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_gt((*this)._field_r->_field_constant) || (*this)._field_l->_field_constant->_method_eqs((*this)._field_r->_field_constant));
		}
		goto _match_end_4444707632;
		_case_end_4444708848:;
		if (!((jule::Str("<=", 2)) == _match_expr)) { goto _case_end_4444708976; }
		_case_begin_4444708976:;
		{
			_394734_d->_field_constant=_1ac90c3ed_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_lt((*this)._field_r->_field_constant) || (*this)._field_l->_field_constant->_method_eqs((*this)._field_r->_field_constant));
		}
		goto _match_end_4444707632;
		_case_end_4444708976:;
		if (!((jule::Str("+", 1)) == _match_expr)) { goto _case_end_4444709104; }
		_case_begin_4444709104:;
		{
			(*this)._field_l->_field_constant->_method_add((*this)._field_r->_field_constant);
			_394734_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4444707632;
		_case_end_4444709104:;
		if (!((jule::Str("-", 1)) == _match_expr)) { goto _case_end_4444709232; }
		_case_begin_4444709232:;
		{
			(*this)._field_l->_field_constant->_method_sub((*this)._field_r->_field_constant);
			_394734_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4444707632;
		_case_end_4444709232:;
		if (!((jule::Str("*", 1)) == _match_expr)) { goto _case_end_4444709360; }
		_case_begin_4444709360:;
		{
			(*this)._field_l->_field_constant->_method_mul((*this)._field_r->_field_constant);
			_394734_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4444707632;
		_case_end_4444709360:;
		if (!((jule::Str("/", 1)) == _match_expr)) { goto _case_end_4444709488; }
		_case_begin_4444709488:;
		{
			jule::Bool _399617_ok = (*this)._field_l->_field_constant->_method_div((*this)._field_r->_field_constant);
			if ((!(_399617_ok)) && ((*this)._field_r->_field_constant->_method_as_f64() == 0LL)) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>({}));
			}
			_394734_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4444707632;
		_case_end_4444709488:;
		if (!((jule::Str("%", 1)) == _match_expr)) { goto _case_end_4444709616; }
		_case_begin_4444709616:;
		{
			jule::Bool _400317_ok = (*this)._field_l->_field_constant->_method_mod((*this)._field_r->_field_constant);
			if ((!(_400317_ok)) && ((*this)._field_r->_field_constant->_method_as_f64() == 0LL)) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>({}));
			}
			_394734_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4444707632;
		_case_end_4444709616:;
		if (!((jule::Str("|", 1)) == _match_expr)) { goto _case_end_4444709744; }
		_case_begin_4444709744:;
		{
			(*this)._field_l->_field_constant->_method_bitwise_or((*this)._field_r->_field_constant);
			_394734_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4444707632;
		_case_end_4444709744:;
		if (!((jule::Str("&", 1)) == _match_expr)) { goto _case_end_4444709872; }
		_case_begin_4444709872:;
		{
			(*this)._field_l->_field_constant->_method_bitwise_and((*this)._field_r->_field_constant);
			_394734_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4444707632;
		_case_end_4444709872:;
		if (!((jule::Str("^", 1)) == _match_expr)) { goto _case_end_4444710000; }
		_case_begin_4444710000:;
		{
			(*this)._field_l->_field_constant->_method_xor((*this)._field_r->_field_constant);
			_394734_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4444707632;
		_case_end_4444710000:;
		if (!((jule::Str("<<", 2)) == _match_expr)) { goto _case_end_4444710128; }
		_case_begin_4444710128:;
		{
			_394734_d->_field_constant=(*this)._field_l->_field_constant;
			(*this)._field_l->_field_constant->_method_lshift((*this)._field_r->_field_constant);
			(*this)._method_assign_shift(_394734_d,static_cast<jule::F64>((*this)._field_r->_field_constant->_method_as_f64()));
		}
		goto _match_end_4444707632;
		_case_end_4444710128:;
		if (!((jule::Str(">>", 2)) == _match_expr)) { goto _case_end_4444710256; }
		_case_begin_4444710256:;
		{
			_394734_d->_field_constant=(*this)._field_l->_field_constant;
			(*this)._field_l->_field_constant->_method_rshift((*this)._field_r->_field_constant);
			(*this)._method_assign_shift(_394734_d,static_cast<jule::F64>((*this)._field_r->_field_constant->_method_as_f64()));
		}
		goto _match_end_4444707632;
		_case_end_4444710256:;
		_match_end_4444707632:;
	}
	_394734_d->_field_model=jule::Any(_394734_d->_field_constant);
}



inline void _1ab00dbcc_BinopSolver::_method_post_const(jule::Ref<_1ab00dbcc_Data> _403529_d) {
	if ((!(jule::real(_403529_d)))) {
		return;
	}
	if ((!(_403529_d->_method_is_const()))) {
		return;
	}
	_1ab00dbcc_normalize_bitsize(_403529_d);
}



inline void _1ab00dbcc_BinopSolver::_method_prepare_data(jule::Ref<_1ab00dbcc_Data> _404631_d) {
	if (jule::real(_404631_d) && jule::real(_404631_d->_field_kind->_method_ref())) {
		_404631_d->_field_kind=_404631_d->_field_kind->_method_ref()->_field_elem;
	}
}



inline void _1ab00dbcc_BinopSolver::_method_prepare_eval(void) {
	(*this)._method_prepare_data((*this)._field_r);
	(*this)._method_prepare_data((*this)._field_l);
}



inline void _1ab00dbcc_BinopSolver::_method_check_data(jule::Ref<_1ab00dbcc_Data> _405733_d) {
	jule::Ref<_1b557cd24_FnIns> _405813_f = _405733_d->_field_kind->_method_fnc();
	if ((jule::real(_405813_f) && jule::real(_405813_f->_field_decl)) && _405813_f->_field_decl->_method_is_method()) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("invalid expression used for binary operation", 44),jule::Slice<jule::Any>({}));
	}
}



inline void _1ab00dbcc_BinopSolver::_method_check_datas(void) {
	(*this)._method_check_data((*this)._field_l);
	(*this)._method_check_data((*this)._field_r);
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_BinopSolver::_method_solve_explicit(jule::Ref<_1ab00dbcc_Data> _406937_l,jule::Ref<_1ab00dbcc_Data> _406951_r) {
	std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple(_406937_l,_406951_r);
	(*this)._method_prepare_eval();
	(*this)._method_check_datas();
	jule::Ref<_1ab00dbcc_Data> _407517_d = (*this)._method_eval();
	std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple(_406937_l,_406951_r);
	(*this)._method_solve_const(_407517_d);
	(*this)._method_post_const(_407517_d);
	if (jule::real(_407517_d)) {
		_407517_d->_field_lvalue=_407517_d->_field_kind->_method_lvalue();
		if ((!(_407517_d->_method_is_const()))) {
			_407517_d->_field_model=jule::Any(jule::new_struct<_1ab33d083_BinopExprModel>(new( std::nothrow ) _1ab33d083_BinopExprModel(_406937_l->_field_model,_406951_r->_field_model,(*this)._field_op._field_kind)));
		}
	}
	return _407517_d;
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_BinopSolver::_method_solve(jule::Ref<_1b61ca014_BinopExpr> _409528_op) {
	jule::Ref<_1ab00dbcc_Data> _409617_l = (*this)._field_e->_method_eval_expr_kind(_409528_op->_field_left);
	if ((!(jule::real(_409617_l))) || (!(jule::real(_409617_l->_field_kind)))) {
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	jule::Ref<_1ab00dbcc_Data> _410117_r = (*this)._field_e->_method_eval_expr_kind(_409528_op->_field_right);
	if ((!(jule::real(_410117_r))) || (!(jule::real(_410117_r->_field_kind)))) {
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	(*this)._field_op=_409528_op->_field_op;
	jule::Ref<_1ab00dbcc_Data> _410817_d = (*this)._method_solve_explicit(_409617_l,_410117_r);
	if ((jule::real(_410817_d) && _409617_l->_field_is_rune) && _410117_r->_field_is_rune) {
		_410817_d->_field_is_rune=true;
	}
	return _410817_d;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab00dbcc_BinopSolver &_Src) {
	_Stream << "BinopSolver{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ac6d02c0_TypeAlias &_Src) {
	_Stream << "TypeAlias{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "refers:" << _Src._field_refers;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b61ca014_Comment::_method_is_directive(void) {
	return (*this)._field_text.has_prefix(jule::Str("jule:", 5));
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61ca014_Comment &_Src) {
	_Stream << "Comment{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "text:" << _Src._field_text;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b61ca014_ParamDecl::_method_is_self(void) {
	return (*this)._field_ident.has_suffix(jule::Str("self", 4));
}



inline jule::Bool _1b61ca014_ParamDecl::_method_is_ref(void) {
	return ((*this)._field_ident != jule::Str("", 0)) && ((*this)._field_ident[0LL] == '&');
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61ca014_ParamDecl &_Src) {
	_Stream << "ParamDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b61ca014_FnDecl::_method_is_anon(void) {
	return (*this)._field_ident == jule::Str("<anonymous>", 11);
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61ca014_FnDecl &_Src) {
	_Stream << "FnDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "global:" << _Src._field_global << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "params:" << _Src._field_params;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61ca014_VarDecl &_Src) {
	_Stream << "VarDecl{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "constant:" << _Src._field_constant << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61ca014_BreakSt &_Src) {
	_Stream << "BreakSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}



inline void _1ac6d02c0_TypeChecker::_method_push_err(_1b61ec5ec_Token _68927_token,jule::Str _68941_fmt,jule::Slice<jule::Any> _68954_args) {
	(*this)._field_s->_method_push_err(_68927_token,_68941_fmt,_68954_args);
}



inline jule::Ref<_1ac6d02c0_Prim> _1ac6d02c0_TypeChecker::_method_build_prim(jule::Ref<_1b61ca014_IdentTypeDecl>& _69330_decl) {
	if ((!(_1ac6d02c0_is_prim(_69330_decl->_field_ident)))) {
		(*this)._method_push_err((*this)._field_error_token,jule::Str("invalid data-type", 17),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1ac6d02c0_Prim>();
	}
	if (_69330_decl->_field_generics.len() > 0LL) {
		(*this)._method_push_err(_69330_decl->_field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_69330_decl->_field_ident)}));
		return jule::new_ref<_1ac6d02c0_Prim>();
	}
	return _1ac6d02c0_build_prim_type(_69330_decl->_field_ident);
}



inline void _1ac6d02c0_TypeChecker::_method_push_cycle_error(jule::Any _70731_def1,jule::Any _70742_def2,jule::Str& _70758_message) {
	
	jule::Fn<jule::Str(jule::Any&)> _71013_get_ident = jule::Fn<jule::Str(jule::Any&)>([=](jule::Any& _71029_def) mutable -> jule::Str {
		{
			auto _match_expr{ _71029_def };
			if (!(_match_expr.type_is<jule::Ref<_1ac6d02c0_TypeAlias>>())) { goto _case_end_4445076336; }
			_case_begin_4445076336:;
			{
				return _71029_def.operator jule::Ref<_1ac6d02c0_TypeAlias>()->_field_ident;
			}
			goto _match_end_4445075408;
			_case_end_4445076336:;
			if (!(_match_expr.type_is<jule::Ref<_1b5e07a00_Struct>>())) { goto _case_end_4445076448; }
			_case_begin_4445076448:;
			{
				return _71029_def.operator jule::Ref<_1b5e07a00_Struct>()->_field_ident;
			}
			goto _match_end_4445075408;
			_case_end_4445076448:;
			if (!(_match_expr.type_is<jule::Ref<_1a909ac6b_Enum>>())) { goto _case_end_4445076560; }
			_case_begin_4445076560:;
			{
				return _71029_def.operator jule::Ref<_1a909ac6b_Enum>()->_field_ident;
			}
			goto _match_end_4445075408;
			_case_end_4445076560:;
			_case_begin_4445075888:;
			{
				return jule::Str("", 0);
			}
			goto _match_end_4445075408;
			_case_end_4445075888:;
			_match_end_4445075408:;
		}
	});
	jule::Str _71913_def1_ident = _71013_get_ident(_70731_def1);
	jule::Str _72013_def2_ident = _71013_get_ident(_70742_def2);
	jule::Str _72113_refers_to = _1cdeeb191_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(_71913_def1_ident),jule::Any(_72013_def2_ident)}));
	_70758_message=((_1b5589c76_str_repeat(jule::Str(" ", 1),4LL) + _72113_refers_to) + jule::Str("\n", 1)) + _70758_message;
}



inline jule::Bool _1ac6d02c0_TypeChecker::_method_are_equals_cross_cycle_data_0(jule::Any _72545_a,jule::Any _72553_b) {
	{
		auto _match_expr{ _72545_a };
		if (!(_match_expr.type_is<jule::Ref<_1ac6d02c0_TypeAlias>>())) { goto _case_end_4445103296; }
		_case_begin_4445103296:;
		{
			{
				auto _match_expr{ _72553_b };
				if (!(_match_expr.type_is<jule::Ref<_1ac6d02c0_TypeAlias>>())) { goto _case_end_4445105472; }
				_case_begin_4445105472:;
				{
					return (_72545_a.operator jule::Ref<_1ac6d02c0_TypeAlias>()).alloc == (_72553_b.operator jule::Ref<_1ac6d02c0_TypeAlias>()).alloc;
				}
				goto _match_end_4445103456;
				_case_end_4445105472:;
				_case_begin_4445105088:;
				{
					return false;
				}
				goto _match_end_4445103456;
				_case_end_4445105088:;
				_match_end_4445103456:;
			}
		}
		goto _match_end_4445102480;
		_case_end_4445103296:;
		_case_begin_4445102912:;
		{
			return false;
		}
		goto _match_end_4445102480;
		_case_end_4445102912:;
		_match_end_4445102480:;
	}
}

inline jule::Bool _1ac6d02c0_TypeChecker::_method_are_equals_cross_cycle_data_1(jule::Any _72545_a,jule::Any _72553_b) {
	{
		auto _match_expr{ _72545_a };
		if (!(_match_expr.type_is<jule::Ref<_1b5e07a00_Struct>>())) { goto _case_end_4445118432; }
		_case_begin_4445118432:;
		{
			{
				auto _match_expr{ _72553_b };
				if (!(_match_expr.type_is<jule::Ref<_1b5e07a00_Struct>>())) { goto _case_end_4445120608; }
				_case_begin_4445120608:;
				{
					return (_72545_a.operator jule::Ref<_1b5e07a00_Struct>()).alloc == (_72553_b.operator jule::Ref<_1b5e07a00_Struct>()).alloc;
				}
				goto _match_end_4445118592;
				_case_end_4445120608:;
				_case_begin_4445120224:;
				{
					return false;
				}
				goto _match_end_4445118592;
				_case_end_4445120224:;
				_match_end_4445118592:;
			}
		}
		goto _match_end_4445117616;
		_case_end_4445118432:;
		_case_begin_4445118048:;
		{
			return false;
		}
		goto _match_end_4445117616;
		_case_end_4445118048:;
		_match_end_4445117616:;
	}
}



inline jule::Bool _1ac6d02c0_TypeChecker::_method_check_cross_cycle(jule::Any _73832_decl,jule::Str& _73848_message) {
	{
		auto _match_expr{ _73832_decl };
		if (!(_match_expr.type_is<jule::Ref<_1ac6d02c0_TypeAlias>>())) { goto _case_end_4445088112; }
		_case_begin_4445088112:;
		{
			jule::Ref<_1ac6d02c0_TypeAlias> _74117_ta = _73832_decl.operator jule::Ref<_1ac6d02c0_TypeAlias>();
			{
				auto _range_expr = _74117_ta->_field_refers;
				if (_range_expr.begin() != _range_expr.end()) {
					auto _range_begin = _range_expr.begin();
					const auto _range_end = _range_expr.end();
					jule::Any _1ac6d02c0_d = *_range_begin;
					_iter_begin_4445091472:;
					{
						{
							auto _match_expr{ _1ac6d02c0_d };
							if (!(_match_expr.type_is<jule::Ref<_1ac6d02c0_TypeAlias>>())) { goto _case_end_4445093264; }
							_case_begin_4445093264:;
							{
								if ((*this)._method_are_equals_cross_cycle_data_0(_1ac6d02c0_d,(*this)._field_referencer->_field_owner)) {
									(*this)._method_push_cycle_error(jule::Any(_74117_ta),_1ac6d02c0_d,_73848_message);
									return false;
								}
							}
							goto _match_end_4445092736;
							_case_end_4445093264:;
							_match_end_4445092736:;
						}
						if ((!((*this)._method_check_cross_cycle(_1ac6d02c0_d,_73848_message)))) {
							(*this)._method_push_cycle_error(jule::Any(_74117_ta),_1ac6d02c0_d,_73848_message);
							return false;
						}
					}
					_iter_next_4445091472:;
					++_range_begin;
					if (_range_begin != _range_end) { _1ac6d02c0_d = *_range_begin; goto _iter_begin_4445091472; }
					_iter_end_4445091472:;
				}
			}
		}
		goto _match_end_4445087664;
		_case_end_4445088112:;
		if (!(_match_expr.type_is<jule::Ref<_1b5e07a00_Struct>>())) { goto _case_end_4445088256; }
		_case_begin_4445088256:;
		{
			jule::Ref<_1b5e07a00_Struct> _75817_s = _73832_decl.operator jule::Ref<_1b5e07a00_Struct>();
			{
				auto _range_expr = _75817_s->_field_depends;
				if (_range_expr.begin() != _range_expr.end()) {
					auto _range_begin = _range_expr.begin();
					const auto _range_end = _range_expr.end();
					jule::Ref<_1b5e07a00_Struct> _1ac6d02c0_d = *_range_begin;
					_iter_begin_4445092512:;
					{
						if ((*this)._method_are_equals_cross_cycle_data_1(jule::Any(_1ac6d02c0_d),(*this)._field_referencer->_field_owner)) {
							(*this)._method_push_cycle_error(jule::Any(_75817_s),jule::Any(_1ac6d02c0_d),_73848_message);
							return false;
						}
						if ((!((*this)._method_check_cross_cycle(jule::Any(_1ac6d02c0_d),_73848_message)))) {
							(*this)._method_push_cycle_error(jule::Any(_75817_s),jule::Any(_1ac6d02c0_d),_73848_message);
							return false;
						}
					}
					_iter_next_4445092512:;
					++_range_begin;
					if (_range_begin != _range_end) { _1ac6d02c0_d = *_range_begin; goto _iter_begin_4445092512; }
					_iter_end_4445092512:;
				}
			}
		}
		goto _match_end_4445087664;
		_case_end_4445088256:;
		_match_end_4445087664:;
	}
	return true;
}



inline jule::Bool _1ac6d02c0_TypeChecker::_method_check_illegal_cycles(jule::Ref<_1b61ca014_IdentTypeDecl>& _78040_ident,jule::Any _78067_decl) {
	jule::Bool _78080_ok = jule::Bool();
	if ((!(jule::real((*this)._field_referencer)))) {
		_78080_ok = true;
		return _78080_ok;
	}
	{
		auto _match_expr{ _78067_decl };
		if (!(_match_expr.type_is<jule::Ref<_1b5e07a00_Struct>>())) { goto _case_end_4445127648; }
		_case_begin_4445127648:;
		{
			if ((*this)._field_not_plain) {
				_78080_ok = true;
				return _78080_ok;
			}
		}
		goto _match_end_4445126592;
		_case_end_4445127648:;
		_match_end_4445126592:;
	}
	if ((*this)._field_referencer->_field_owner == _78067_decl) {
		(*this)._method_push_err(_78040_ident->_field_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>({jule::Any((*this)._field_referencer->_field_ident)}));
		_78080_ok = false;
		return _78080_ok;
	}
	jule::Str _79917_message = jule::Str("", 0);
	if ((!((*this)._method_check_cross_cycle(_78067_decl,_79917_message)))) {
		jule::Str _80221_err_msg = _79917_message;
		_79917_message=jule::Str("", 0);
		(*this)._method_push_cycle_error((*this)._field_referencer->_field_owner,_78067_decl,_79917_message);
		_80221_err_msg=_80221_err_msg + _79917_message;
		(*this)._method_push_err(_78040_ident->_field_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>({jule::Any(_80221_err_msg)}));
		_78080_ok = false;
		return _78080_ok;
	}
	{
		auto _match_expr{ (*this)._field_referencer->_field_owner };
		if (!(_match_expr.type_is<jule::Ref<_1ac6d02c0_TypeAlias>>())) { goto _case_end_4445133472; }
		_case_begin_4445133472:;
		{
			{
				(*((*this)._field_referencer->_field_refs))=jule::append((*((*this)._field_referencer->_field_refs)),jule::Slice<jule::Any>({_78067_decl}));
			}
		}
		goto _match_end_4445138800;
		_case_end_4445133472:;
		if (!(_match_expr.type_is<jule::Ref<_1b5e07a00_Struct>>())) { goto _case_end_4445139600; }
		_case_begin_4445139600:;
		{
			{
				auto _match_expr{ _78067_decl };
				if (!(_match_expr.type_is<jule::Ref<_1b5e07a00_Struct>>())) { goto _case_end_4445140608; }
				_case_begin_4445140608:;
				{
					jule::Ref<_1b5e07a00_Struct> _81725_s = (*this)._field_referencer->_field_owner.operator jule::Ref<_1b5e07a00_Struct>();
					_81725_s->_field_depends=jule::append(_81725_s->_field_depends,jule::Slice<jule::Ref<_1b5e07a00_Struct>>({_78067_decl.operator jule::Ref<_1b5e07a00_Struct>()}));
				}
				goto _match_end_4445139712;
				_case_end_4445140608:;
				_match_end_4445139712:;
			}
		}
		goto _match_end_4445138800;
		_case_end_4445139600:;
		_match_end_4445138800:;
	}
	_78080_ok = true;
	return _78080_ok;
}



inline jule::Trait<_1ac6d02c0_Kind> _1ac6d02c0_TypeChecker::_method_from_type_alias(jule::Ref<_1b61ca014_IdentTypeDecl>& _82535_decl,jule::Ref<_1ac6d02c0_TypeAlias>& _82562_ta) {
	if ((!((*this)._field_s->_method_is_accessible_define(_82562_ta->_field_public,_82562_ta->_field_token)))) {
		(*this)._method_push_err(_82535_decl->_field_token,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_82535_decl->_field_ident)}));
		return nullptr;
	}
	_82562_ta->_field_used=true;
	if (_82535_decl->_field_generics.len() > 0LL) {
		(*this)._method_push_err(_82535_decl->_field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_82535_decl->_field_ident)}));
		return nullptr;
	}
	jule::Bool _83817_ok = (*this)._method_check_illegal_cycles(_82535_decl,jule::Any(_82562_ta));
	if ((!(_83817_ok))) {
		return nullptr;
	}
	_83817_ok=(*this)._field_s->_method_check_type_alias_decl_kind(_82562_ta,(*this)._field_lookup);
	if ((!(_83817_ok))) {
		return nullptr;
	}
	jule::Ref<_1ac6d02c0_TypeKind> _84917_kind = _82562_ta->_field_kind->_field_kind->_method_clone();
	if (_82562_ta->_field_cpp_linked) {
		_84917_kind->_field_cpp_ident=_82562_ta->_field_ident;
	}
	return _84917_kind;
}



inline jule::Ref<_1a909ac6b_Enum> _1ac6d02c0_TypeChecker::_method_from_enum(jule::Ref<_1b61ca014_IdentTypeDecl>& _85829_decl,jule::Ref<_1a909ac6b_Enum>& _85856_e) {
	if ((!((*this)._field_s->_method_is_accessible_define(_85856_e->_field_public,_85856_e->_field_token)))) {
		(*this)._method_push_err(_85829_decl->_field_token,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_85829_decl->_field_ident)}));
		return jule::new_ref<_1a909ac6b_Enum>();
	}
	if (_85829_decl->_field_generics.len() > 0LL) {
		(*this)._method_push_err(_85829_decl->_field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_85829_decl->_field_ident)}));
		return jule::new_ref<_1a909ac6b_Enum>();
	}
	return _85856_e;
}



inline jule::Bool _1ac6d02c0_TypeChecker::_method_check_struct_ins(jule::Ref<_1b5e07a00_StructIns>& _87240_ins,_1b61ec5ec_Token& _87258_error_token) {
	jule::Bool _87280_ok = jule::Bool();
	if (_87240_ins->_field_checked) {
		_87280_ok = true;
		return _87280_ok;
	}
	_87240_ins->_field_checked=true;
	if (jule::real((*this)._field_referencer) && ((*this)._field_referencer->_field_owner == _87240_ins->_field_decl)) {
		_87280_ok = true;
		return _87280_ok;
	}
	jule::Ref<_1ab00cc20_SymbolTable> _88617_old_file = (*this)._field_s->_field_file;
	__JULE_DEFER({
		(*this)._field_s->_method_set_current_file(_88617_old_file);
	});
	jule::Ref<_1ab00cc20_SymbolTable> _88917_file = _1ab195050_find_file((*this)._field_s->_field_files,_87240_ins->_field_decl->_field_token._field_file);
	if (jule::real(_88917_file)) {
		(*this)._field_s->_method_set_current_file(_88917_file);
	}
	jule::Ref<_1ac6d02c0_Referencer> _89417_referencer = jule::new_struct<_1ac6d02c0_Referencer>(new( std::nothrow ) _1ac6d02c0_Referencer(_87240_ins->_field_decl->_field_ident,jule::Any(_87240_ins->_field_decl),nullptr));
	jule::Slice<jule::Ref<_1ac6d02c0_TypeAlias>> _89917_generics = jule::Slice<jule::Ref<_1ac6d02c0_TypeAlias>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_87240_ins->_field_generics.len())));
	{
		auto _range_expr = _87240_ins->_field_generics;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ac6d02c0_i = 0;
			jule::Ref<_1ac6d02c0_TypeKind> _1ac6d02c0_g = *_range_begin;
			_iter_begin_4445194976:;
			{
				_89917_generics[static_cast<jule::Int>(_1ac6d02c0_i)]=jule::new_struct<_1ac6d02c0_TypeAlias>(new( std::nothrow ) _1ac6d02c0_TypeAlias(jule::Ref<_1b61ca014_ScopeTree>(),jule::Bool(),jule::Bool(),jule::Bool(),_1b61ec5ec_Token(),_87240_ins->_field_decl->_field_generics[static_cast<jule::Int>(_1ac6d02c0_i)]->_field_ident,jule::new_struct<_1ac6d02c0_TypeSymbol>(new( std::nothrow ) _1ac6d02c0_TypeSymbol(jule::Ref<_1b61ca014_TypeDecl>(),_1ac6d02c0_g)),jule::Str(),jule::Slice<jule::Any>()));
			}
			_iter_next_4445194976:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ac6d02c0_i; _1ac6d02c0_g = *_range_begin; goto _iter_begin_4445194976; }
			_iter_end_4445194976:;
		}
	}
	jule::Ref<_1ab00cc20_SymbolTable> _90917_old_sema_file = _87240_ins->_field_decl->_field_sema->_field_file;
	__JULE_DEFER({
		_87240_ins->_field_decl->_field_sema->_method_set_current_file(_90917_old_sema_file);
	});
	_1ac6d02c0_TypeChecker _91217_tc = _1ac6d02c0_TypeChecker(_87240_ins->_field_decl->_field_sema,_87240_ins->_field_decl->_field_sema,_89417_referencer,_1b61ec5ec_Token(),jule::Slice<jule::Ref<_1b61ca014_GenericDecl>>(),_89917_generics,jule::Bool());
	{
		auto _range_expr = _87240_ins->_field_fields;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b5e07a00_FieldIns> _1ac6d02c0_field = *_range_begin;
			_iter_begin_4445206368:;
			{
				jule::Ref<_1ac6d02c0_TypeKind> _92121_kind = _91217_tc._method_check_decl(_1ac6d02c0_field->_field_decl->_field_kind->_field_decl);
				_87280_ok=jule::real(_92121_kind);
				if ((jule::real(_87240_ins->_field_decl->_field_sema) && ((*this)._field_s != _87240_ins->_field_decl->_field_sema)) && (_87240_ins->_field_decl->_field_sema->_field_errors.len() > 0LL)) {
					(*this)._field_s->_field_errors=jule::append((*this)._field_s->_field_errors,_87240_ins->_field_decl->_field_sema->_field_errors);
				}
				if ((!(_87280_ok))) {
					_87280_ok = false;
					return _87280_ok;
				}
				_1ac6d02c0_field->_field_kind=_92121_kind;
				if (_1ac6d02c0_field->_field_kind->_method_mutable()) {
					_87240_ins->_field_mutable=true;
					(*this)._field_s->_method_check_struct_ins_derive_clone(_87240_ins);
				}
			}
			_iter_next_4445206368:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac6d02c0_field = *_range_begin; goto _iter_begin_4445206368; }
			_iter_end_4445206368:;
		}
	}
	if (_87240_ins->_field_generics.len() > 0LL) {
		{
			auto _range_expr = _87240_ins->_field_methods;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_1b557cd24_Fn> _1ac6d02c0_m = *_range_begin;
				_iter_begin_4445219328:;
				{
					(*this)._field_s->_method_check_type_method(_87240_ins,_1ac6d02c0_m);
				}
				_iter_next_4445219328:;
				++_range_begin;
				if (_range_begin != _range_end) { _1ac6d02c0_m = *_range_begin; goto _iter_begin_4445219328; }
				_iter_end_4445219328:;
			}
		}
	}
	_87280_ok = true;
	return _87280_ok;
}



inline void _1ac6d02c0_TypeChecker::_method_append_used_struct_reference(jule::Ref<_1b5e07a00_Struct>& _94852_s) {
	if ((!(jule::real((*this)._field_referencer)))) {
		return;
	}
	{
		auto _match_expr{ (*this)._field_referencer->_field_owner };
		if (!(_match_expr.type_is<jule::Ref<_1b5e07a00_Struct>>())) { goto _case_end_4445224272; }
		_case_begin_4445224272:;
		{
			jule::Ref<_1b5e07a00_Struct> _95521_ref_s = (*this)._field_referencer->_field_owner.operator jule::Ref<_1b5e07a00_Struct>();
			if ((!(_95521_ref_s->_method_is_uses(_94852_s)))) {
				_95521_ref_s->_field_uses=jule::append(_95521_ref_s->_field_uses,jule::Slice<jule::Ref<_1b5e07a00_Struct>>({_94852_s}));
			}
		}
		goto _match_end_4445223616;
		_case_end_4445224272:;
		_match_end_4445223616:;
	}
}



inline jule::Ref<_1b5e07a00_StructIns> _1ac6d02c0_TypeChecker::_method_from_struct(jule::Ref<_1b61ca014_IdentTypeDecl>& _96235_decl,jule::Ref<_1b5e07a00_Struct>& _96262_s) {
	if ((!((*this)._field_s->_method_is_accessible_define(_96262_s->_field_public,_96262_s->_field_token)))) {
		(*this)._method_push_err(_96235_decl->_field_token,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_96235_decl->_field_ident)}));
		return jule::new_ref<_1b5e07a00_StructIns>();
	}
	if ((*this)._field_ignore_generics.len() > 0LL) {
		return jule::new_ref<_1b5e07a00_StructIns>();
	}
	jule::Bool _97317_ok = (*this)._field_not_plain || (*this)._method_check_illegal_cycles(_96235_decl,jule::Any(_96262_s));
	if ((!(_97317_ok))) {
		return jule::new_ref<_1b5e07a00_StructIns>();
	}
	(*this)._method_append_used_struct_reference(_96262_s);
	jule::Ref<_1b5e07a00_StructIns> _97917_ins = _96262_s->_method_instance();
	_97917_ins->_field_generics=jule::Slice<jule::Ref<_1ac6d02c0_TypeKind>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_96235_decl->_field_generics.len())));
	jule::Ref<_1ac6d02c0_Referencer> _98117_referencer = (*this)._field_referencer;
	jule::drop((*this)._field_referencer);
	{
		auto _range_expr = _96235_decl->_field_generics;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ac6d02c0_i = 0;
			jule::Ref<_1b61ca014_TypeDecl> _1ac6d02c0_g = *_range_begin;
			_iter_begin_4445246864:;
			{
				jule::Ref<_1ac6d02c0_TypeKind> _98421_kind = (*this)._method_build(_1ac6d02c0_g->_field_kind);
				if ((!(jule::real(_98421_kind)))) {
					_97317_ok=false;
					goto _iter_next_4445246864;
				}
				_97917_ins->_field_generics[static_cast<jule::Int>(_1ac6d02c0_i)]=_98421_kind;
			}
			_iter_next_4445246864:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ac6d02c0_i; _1ac6d02c0_g = *_range_begin; goto _iter_begin_4445246864; }
			_iter_end_4445246864:;
		}
	}
	(*this)._field_referencer=_98117_referencer;
	if ((!(_97317_ok))) {
		return jule::new_ref<_1b5e07a00_StructIns>();
	}
	_97317_ok=(*this)._field_s->_method_check_generic_quantity(static_cast<jule::I64>(_97917_ins->_field_decl->_field_generics.len()),static_cast<jule::I64>(_97917_ins->_field_generics.len()),_96235_decl->_field_token);
	if ((!(_97317_ok))) {
		return jule::new_ref<_1b5e07a00_StructIns>();
	}
	jule::Ref<_1b5e07a00_StructIns> _100317_exist_instance = _96262_s->_method_append_instance(_97917_ins);
	if (jule::real(_100317_exist_instance)) {
		return _100317_exist_instance;
	}
	_97317_ok=(*this)._method_check_struct_ins(_97917_ins,_96235_decl->_field_token);
	if ((!(_97317_ok))) {
		return jule::new_ref<_1b5e07a00_StructIns>();
	}
	return _97917_ins;
}



inline jule::Trait<_1ac6d02c0_Kind> _1ac6d02c0_TypeChecker::_method_get_def(jule::Ref<_1b61ca014_IdentTypeDecl>& _101831_decl) {
	{
		auto _range_expr = (*this)._field_ignore_generics;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b61ca014_GenericDecl> _1ac6d02c0_g = *_range_begin;
			_iter_begin_4445266816:;
			{
				if (_1ac6d02c0_g->_field_ident == _101831_decl->_field_ident) {
					return _1ac6d02c0_build_prim_type(_1ac6d02c0_g->_field_ident);
				}
			}
			_iter_next_4445266816:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac6d02c0_g = *_range_begin; goto _iter_begin_4445266816; }
			_iter_end_4445266816:;
		}
	}
	{
		auto _range_expr = (*this)._field_use_generics;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ac6d02c0_TypeAlias> _1ac6d02c0_g = *_range_begin;
			_iter_begin_4445269472:;
			{
				if (_1ac6d02c0_g->_field_ident == _101831_decl->_field_ident) {
					jule::Ref<_1b5e07a00_StructIns> _102725_st = _1ac6d02c0_g->_field_kind->_field_kind->_method_strct();
					if (jule::real(_102725_st)) {
						jule::Bool _102925_ok = (*this)._method_check_illegal_cycles(_101831_decl,jule::Any(_102725_st->_field_decl));
						if ((!(_102925_ok))) {
							return nullptr;
						}
					}
					return _1ac6d02c0_g->_field_kind->_field_kind->_field_kind;
				}
			}
			_iter_next_4445269472:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac6d02c0_g = *_range_begin; goto _iter_begin_4445269472; }
			_iter_end_4445269472:;
		}
	}
	if ((!(_101831_decl->_field_cpp_linked))) {
		jule::Ref<_1a909ac6b_Enum> _103921_e = (*this)._field_lookup.get()._method_find_enum(_101831_decl->_field_ident);
		if (jule::real(_103921_e)) {
			return (*this)._method_from_enum(_101831_decl,_103921_e);
		}
		jule::Ref<_1aaee9091_Trait> _104421_t = (*this)._field_lookup.get()._method_find_trait(_101831_decl->_field_ident);
		if ((!(jule::real(_104421_t)))) {
			_104421_t=_1aae49684_find_builtin_trait(_101831_decl->_field_ident);
		}
		if (jule::real(_104421_t)) {
			if ((!((*this)._field_s->_method_is_accessible_define(_104421_t->_field_public,_104421_t->_field_token)))) {
				(*this)._method_push_err(_101831_decl->_field_token,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_101831_decl->_field_ident)}));
				return nullptr;
			}
			if (_101831_decl->_field_generics.len() > 0LL) {
				(*this)._method_push_err(_101831_decl->_field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_101831_decl->_field_ident)}));
				return nullptr;
			}
			return _104421_t;
		}
	}
	jule::Ref<_1b5e07a00_Struct> _106217_s = (*this)._field_lookup.get()._method_find_struct(_101831_decl->_field_ident,_101831_decl->_field_cpp_linked);
	if (jule::real(_106217_s)) {
		return (*this)._method_from_struct(_101831_decl,_106217_s);
	}
	jule::Ref<_1ac6d02c0_TypeAlias> _106717_ta = (*this)._field_lookup.get()._method_find_type_alias(_101831_decl->_field_ident,_101831_decl->_field_cpp_linked);
	if ((!(jule::real(_106717_ta)))) {
		_106717_ta=_1aae49684_find_builtin_type_alias(_101831_decl->_field_ident);
	}
	if (jule::real(_106717_ta)) {
		return (*this)._method_from_type_alias(_101831_decl,_106717_ta);
	}
	(*this)._method_push_err(_101831_decl->_field_token,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_101831_decl->_field_ident)}));
	return nullptr;
}



inline jule::Trait<_1ac6d02c0_Kind> _1ac6d02c0_TypeChecker::_method_build_ident(jule::Ref<_1b61ca014_IdentTypeDecl> _107934_decl) {
	{
		if (!((_1ac6d02c0_is_prim(_107934_decl->_field_ident)))) { goto _case_end_4445305120; }
		_case_begin_4445305120:;
		{
			return (*this)._method_build_prim(_107934_decl);
		}
		goto _match_end_4445303488;
		_case_end_4445305120:;
		_case_begin_4445303664:;
		{
			return (*this)._method_get_def(_107934_decl);
		}
		goto _match_end_4445303488;
		_case_end_4445303664:;
		_match_end_4445303488:;
	}
}



inline jule::Ref<_1ac6d02c0_Ref> _1ac6d02c0_TypeChecker::_method_build_ref_from_type(jule::Ref<_1ac6d02c0_TypeKind>& _108643_elem) {
	{
		if (!(((!(jule::real(_108643_elem)))))) { goto _case_end_4445308208; }
		_case_begin_4445308208:;
		{
			return jule::new_ref<_1ac6d02c0_Ref>();
		}
		goto _match_end_4445307936;
		_case_end_4445308208:;
		if (!((jule::real(_108643_elem->_method_strct())))) { goto _case_end_4445308336; }
		_case_begin_4445308336:;
		{
			jule::Ref<_1b5e07a00_StructIns> _109317_s = _108643_elem->_method_strct();
			if (jule::real(_109317_s->_field_decl) && _109317_s->_field_decl->_field_cpp_linked) {
				(*this)._method_push_err((*this)._field_error_token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>({}));
				return jule::new_ref<_1ac6d02c0_Ref>();
			}
		}
		goto _match_end_4445307936;
		_case_end_4445308336:;
		if (!((jule::real(_108643_elem->_method_ref())))) { goto _case_end_4445308464; }
		_case_begin_4445308464:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("references cannot reference to another reference", 48),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1ac6d02c0_Ref>();
		}
		goto _match_end_4445307936;
		_case_end_4445308464:;
		if (!((jule::real(_108643_elem->_method_ptr())))) { goto _case_end_4445308592; }
		_case_begin_4445308592:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("references cannot reference to pointer", 38),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1ac6d02c0_Ref>();
		}
		goto _match_end_4445307936;
		_case_end_4445308592:;
		if (!((jule::real(_108643_elem->_method_enm())))) { goto _case_end_4445308720; }
		_case_begin_4445308720:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("references cannot reference to enum", 35),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1ac6d02c0_Ref>();
		}
		goto _match_end_4445307936;
		_case_end_4445308720:;
		if (!((jule::real(_108643_elem->_method_arr())))) { goto _case_end_4445308848; }
		_case_begin_4445308848:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("references cannot reference to array", 36),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1ac6d02c0_Ref>();
		}
		goto _match_end_4445307936;
		_case_end_4445308848:;
		_match_end_4445307936:;
	}
	return jule::new_struct<_1ac6d02c0_Ref>(new( std::nothrow ) _1ac6d02c0_Ref(_108643_elem));
}



inline jule::Ref<_1ac6d02c0_Ref> _1ac6d02c0_TypeChecker::_method_build_ref(jule::Ref<_1b61ca014_RefTypeDecl> _112132_decl) {
	jule::Bool _112213_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_112213_not_plain;
	});
	jule::Ref<_1ac6d02c0_TypeKind> _112617_elem = (*this)._method_check_decl(_112132_decl->_field_elem);
	return (*this)._method_build_ref_from_type(_112617_elem);
}



inline jule::Ref<_1ac6d02c0_Ptr> _1ac6d02c0_TypeChecker::_method_build_ptr_from_type(jule::Ref<_1ac6d02c0_TypeKind>& _113043_elem) {
	{
		if (!(((!(jule::real(_113043_elem)))))) { goto _case_end_4445332944; }
		_case_begin_4445332944:;
		{
			return jule::new_ref<_1ac6d02c0_Ptr>();
		}
		goto _match_end_4445332768;
		_case_end_4445332944:;
		if (!((jule::real(_113043_elem->_method_ref())))) { goto _case_end_4445333072; }
		_case_begin_4445333072:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("pointers cannot point to reference", 34),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1ac6d02c0_Ptr>();
		}
		goto _match_end_4445332768;
		_case_end_4445333072:;
		if (!((jule::real(_113043_elem->_method_enm())))) { goto _case_end_4445333200; }
		_case_begin_4445333200:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("pointers cannot point to enum", 29),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1ac6d02c0_Ptr>();
		}
		goto _match_end_4445332768;
		_case_end_4445333200:;
		if (!((jule::real(_113043_elem->_method_arr()) && _113043_elem->_method_arr()->_field_auto))) { goto _case_end_4445333328; }
		_case_begin_4445333328:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1ac6d02c0_Ptr>();
		}
		goto _match_end_4445332768;
		_case_end_4445333328:;
		_match_end_4445332768:;
	}
	return jule::new_struct<_1ac6d02c0_Ptr>(new( std::nothrow ) _1ac6d02c0_Ptr(_113043_elem));
}



inline jule::Ref<_1ac6d02c0_Ptr> _1ac6d02c0_TypeChecker::_method_build_ptr(jule::Ref<_1b61ca014_PtrTypeDecl> _115432_decl) {
	jule::Bool _115513_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_115513_not_plain;
	});
	jule::Ref<_1ac6d02c0_TypeKind> _115917_elem = jule::new_ref<_1ac6d02c0_TypeKind>();
	if ((!(_115432_decl->_method_is_unsafe()))) {
		_115917_elem=(*this)._method_check_decl(_115432_decl->_field_elem);
		return (*this)._method_build_ptr_from_type(_115917_elem);
	}
	return jule::new_struct<_1ac6d02c0_Ptr>(new( std::nothrow ) _1ac6d02c0_Ptr(_115917_elem));
}



inline jule::Ref<_1ac6d02c0_Slc> _1ac6d02c0_TypeChecker::_method_build_slc(jule::Ref<_1b61ca014_SlcTypeDecl> _117132_decl) {
	jule::Bool _117213_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_117213_not_plain;
	});
	jule::Ref<_1ac6d02c0_TypeKind> _117617_elem = (*this)._method_check_decl(_117132_decl->_field_elem);
	{
		if (!(((!(jule::real(_117617_elem)))))) { goto _case_end_4445357904; }
		_case_begin_4445357904:;
		{
			return jule::new_ref<_1ac6d02c0_Slc>();
		}
		goto _match_end_4445357696;
		_case_end_4445357904:;
		if (!((jule::real(_117617_elem->_method_arr()) && _117617_elem->_method_arr()->_field_auto))) { goto _case_end_4445358016; }
		_case_begin_4445358016:;
		{
			(*this)._method_push_err(_117132_decl->_field_elem->_field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1ac6d02c0_Slc>();
		}
		goto _match_end_4445357696;
		_case_end_4445358016:;
		_match_end_4445357696:;
	}
	return jule::new_struct<_1ac6d02c0_Slc>(new( std::nothrow ) _1ac6d02c0_Slc(_117617_elem));
}



inline jule::Ref<_1ac6d02c0_Arr> _1ac6d02c0_TypeChecker::_method_build_arr(jule::Ref<_1b61ca014_ArrTypeDecl> _119332_decl) {
	jule::Bool _119413_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_119413_not_plain;
	});
	jule::Int _119817_n = 0LL;
	if ((!(_119332_decl->_method_auto_sized()))) {
		jule::Ref<_1ab00dbcc_Data> _120121_size = (*this)._field_s->_method_eval(_119332_decl->_field_size,(*this)._field_lookup);
		if ((!(jule::real(_120121_size)))) {
			return jule::new_ref<_1ac6d02c0_Arr>();
		}
		if ((!(_120121_size->_method_is_const()))) {
			(*this)._method_push_err(_119332_decl->_field_size->_field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1ac6d02c0_Arr>();
		} else if ((!(jule::real(_120121_size->_field_kind->_method_prim()))) || (!(_1ac92d7e8_is_int(_120121_size->_field_kind->_method_prim()->_field_kind)))) {
			(*this)._method_push_err(_119332_decl->_field_size->_field_token,jule::Str("array size must be integer", 26),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1ac6d02c0_Arr>();
		}
		_119817_n=static_cast<jule::Int>(_120121_size->_field_constant->_method_as_i64());
		if (_119817_n < 0LL) {
			(*this)._method_push_err(_119332_decl->_field_elem->_field_token,jule::Str("array size must be positive integer", 35),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1ac6d02c0_Arr>();
		}
	}
	jule::Ref<_1ac6d02c0_TypeKind> _122117_elem = (*this)._method_check_decl(_119332_decl->_field_elem);
	{
		if (!(((!(jule::real(_122117_elem)))))) { goto _case_end_4445384576; }
		_case_begin_4445384576:;
		{
			return jule::new_ref<_1ac6d02c0_Arr>();
		}
		goto _match_end_4445368960;
		_case_end_4445384576:;
		if (!((jule::real(_122117_elem->_method_arr()) && _122117_elem->_method_arr()->_field_auto))) { goto _case_end_4445384688; }
		_case_begin_4445384688:;
		{
			(*this)._method_push_err(_119332_decl->_field_elem->_field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1ac6d02c0_Arr>();
		}
		goto _match_end_4445368960;
		_case_end_4445384688:;
		_match_end_4445368960:;
	}
	return jule::new_struct<_1ac6d02c0_Arr>(new( std::nothrow ) _1ac6d02c0_Arr(_119332_decl->_method_auto_sized(),_119817_n,_122117_elem));
}



inline jule::Ref<_1ac6d02c0_Map> _1ac6d02c0_TypeChecker::_method_build_map(jule::Ref<_1b61ca014_MapTypeDecl> _124032_decl) {
	jule::Bool _124113_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_124113_not_plain;
	});
	jule::Ref<_1ac6d02c0_TypeKind> _124517_key = (*this)._method_check_decl(_124032_decl->_field_key);
	if ((!(jule::real(_124517_key)))) {
		return jule::new_ref<_1ac6d02c0_Map>();
	}
	jule::Ref<_1ac6d02c0_TypeKind> _125017_val = (*this)._method_check_decl(_124032_decl->_field_val);
	if ((!(jule::real(_125017_val)))) {
		return jule::new_ref<_1ac6d02c0_Map>();
	}
	if (jule::real(_125017_val->_method_enm())) {
		(*this)._method_push_err(_124032_decl->_field_val->_field_token,jule::Str("maps do not support enums as map key type", 41),jule::Slice<jule::Any>({}));
	}
	return jule::new_struct<_1ac6d02c0_Map>(new( std::nothrow ) _1ac6d02c0_Map(_124517_key,_125017_val));
}



inline jule::Ref<_1ac6d02c0_Tuple> _1ac6d02c0_TypeChecker::_method_build_tuple(jule::Ref<_1b61ca014_TupleTypeDecl> _126434_decl) {
	jule::Slice<jule::Ref<_1ac6d02c0_TypeKind>> _126517_types = jule::Slice<jule::Ref<_1ac6d02c0_TypeKind>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_126434_decl->_field_types.len())));
	{
		auto _range_expr = _126434_decl->_field_types;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ac6d02c0_i = 0;
			jule::Ref<_1b61ca014_TypeDecl> _1ac6d02c0_t = *_range_begin;
			_iter_begin_4445407664:;
			{
				jule::Ref<_1ac6d02c0_TypeKind> _126721_kind = (*this)._method_check_decl(_1ac6d02c0_t);
				if ((!(jule::real(_126721_kind)))) {
					return jule::new_ref<_1ac6d02c0_Tuple>();
				}
				_126517_types[static_cast<jule::Int>(_1ac6d02c0_i)]=_126721_kind;
			}
			_iter_next_4445407664:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ac6d02c0_i; _1ac6d02c0_t = *_range_begin; goto _iter_begin_4445407664; }
			_iter_end_4445407664:;
		}
	}
	return jule::new_struct<_1ac6d02c0_Tuple>(new( std::nothrow ) _1ac6d02c0_Tuple(_126517_types));
}



inline jule::Bool _1ac6d02c0_TypeChecker::_method_check_fn_types(jule::Ref<_1b557cd24_FnIns>& _127738_f) {
	jule::Bool _127751_ok = jule::Bool();
	{
		auto _range_expr = _127738_f->_field_params;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b557cd24_ParamIns> _1ac6d02c0_p = *_range_begin;
			_iter_begin_4445416912:;
			{
				_1ac6d02c0_p->_field_kind=(*this)._method_build(_1ac6d02c0_p->_field_decl->_field_kind->_field_decl->_field_kind);
				_127751_ok=jule::real(_1ac6d02c0_p->_field_kind);
				if ((!(_127751_ok))) {
					_127751_ok = false;
					return _127751_ok;
				}
			}
			_iter_next_4445416912:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac6d02c0_p = *_range_begin; goto _iter_begin_4445416912; }
			_iter_end_4445416912:;
		}
	}
	if ((!(_127738_f->_field_decl->_method_is_void()))) {
		_127738_f->_field_result=(*this)._method_build(_127738_f->_field_decl->_field_result->_field_kind->_field_decl->_field_kind);
		_127751_ok = jule::real(_127738_f->_field_result);
		return _127751_ok;
	}
	_127751_ok = true;
	return _127751_ok;
}



inline jule::Ref<_1b557cd24_FnIns> _1ac6d02c0_TypeChecker::_method_build_fn(jule::Ref<_1b61ca014_FnDecl> _129431_decl) {
	if (_129431_decl->_field_generics.len() > 0LL) {
		(*this)._method_push_err(_129431_decl->_field_token,jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b557cd24_FnIns>();
	}
	jule::Ref<_1b557cd24_Fn> _130017_f = _1b5589c76_build_fn(_129431_decl);
	jule::Ref<_1b557cd24_FnIns> _130117_ins = _130017_f->_method_instance_force();
	_130117_ins->_field_anon=true;
	jule::Bool _130413_ok = (*this)._method_check_fn_types(_130117_ins);
	if ((!(_130413_ok))) {
		return jule::new_ref<_1b557cd24_FnIns>();
	}
	return _130117_ins;
}



inline jule::Trait<_1ac6d02c0_Kind> _1ac6d02c0_TypeChecker::_method_build_by_namespace(jule::Ref<_1b61ca014_NamespaceTypeDecl> _131241_decl) {
	jule::Str _131313_path = _1ac6d02c0_build_link_path_by_tokens(_131241_decl->_field_idents);
	jule::Ref<_1ab194c20_ImportInfo> _131417_imp = (*this)._field_lookup.get()._method_select_package(jule::Fn<jule::Bool(jule::Ref<_1ab194c20_ImportInfo>)>([=](jule::Ref<_1ab194c20_ImportInfo> _131453_imp) mutable -> jule::Bool {
		if ((_131241_decl->_field_idents.len() == 1LL) && (_131453_imp->_field_alias == _131313_path)) {
			return true;
		}
		return _131453_imp->_field_link_path == _131313_path;
	}));
	if ((!(jule::real(_131417_imp))) || (!(_131417_imp->_method_is_lookupable(jule::Str("self", 4))))) {
		(*this)._method_push_err(_131241_decl->_field_idents[0LL],jule::Str("namespace not exist: @", 22),jule::Slice<jule::Any>({jule::Any(_131313_path)}));
		return nullptr;
	}
	jule::Trait<_1aae290e2_Lookup> _132617_lookup = (*this)._field_lookup;
	(*this)._field_lookup=_131417_imp;
	jule::Trait<_1ac6d02c0_Kind> _132917_kind = (*this)._method_build_ident(_131241_decl->_field_kind);
	(*this)._field_lookup=_132617_lookup;
	return _132917_kind;
}



inline jule::Ref<_1ac6d02c0_TypeKind> _1ac6d02c0_TypeChecker::_method_build(jule::Any& _133629_decl_kind) {
	jule::Trait<_1ac6d02c0_Kind> _133717_kind = nullptr;
	{
		auto _match_expr{ _133629_decl_kind };
		if (!(_match_expr.type_is<jule::Ref<_1ac6d02c0_TypeKind>>())) { goto _case_end_4445457344; }
		_case_begin_4445457344:;
		{
			_133717_kind=_133629_decl_kind.operator jule::Ref<_1ac6d02c0_TypeKind>();
		}
		goto _match_end_4445453584;
		_case_end_4445457344:;
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_IdentTypeDecl>>())) { goto _case_end_4445457920; }
		_case_begin_4445457920:;
		{
			jule::Trait<_1ac6d02c0_Kind> _134421_t = (*this)._method_build_ident(_133629_decl_kind.operator jule::Ref<_1b61ca014_IdentTypeDecl>());
			if (_134421_t != nullptr) {
				_133717_kind=_134421_t;
			}
		}
		goto _match_end_4445453584;
		_case_end_4445457920:;
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_RefTypeDecl>>())) { goto _case_end_4445457584; }
		_case_begin_4445457584:;
		{
			jule::Ref<_1ac6d02c0_Ref> _135021_t = (*this)._method_build_ref(_133629_decl_kind.operator jule::Ref<_1b61ca014_RefTypeDecl>());
			if (jule::real(_135021_t)) {
				_133717_kind=_135021_t;
			}
		}
		goto _match_end_4445453584;
		_case_end_4445457584:;
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_PtrTypeDecl>>())) { goto _case_end_4445457696; }
		_case_begin_4445457696:;
		{
			jule::Ref<_1ac6d02c0_Ptr> _135621_t = (*this)._method_build_ptr(_133629_decl_kind.operator jule::Ref<_1b61ca014_PtrTypeDecl>());
			if (jule::real(_135621_t)) {
				_133717_kind=_135621_t;
			}
		}
		goto _match_end_4445453584;
		_case_end_4445457696:;
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_SlcTypeDecl>>())) { goto _case_end_4445456736; }
		_case_begin_4445456736:;
		{
			jule::Ref<_1ac6d02c0_Slc> _136221_t = (*this)._method_build_slc(_133629_decl_kind.operator jule::Ref<_1b61ca014_SlcTypeDecl>());
			if (jule::real(_136221_t)) {
				_133717_kind=_136221_t;
			}
		}
		goto _match_end_4445453584;
		_case_end_4445456736:;
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_ArrTypeDecl>>())) { goto _case_end_4445456848; }
		_case_begin_4445456848:;
		{
			jule::Ref<_1ac6d02c0_Arr> _136821_t = (*this)._method_build_arr(_133629_decl_kind.operator jule::Ref<_1b61ca014_ArrTypeDecl>());
			if (jule::real(_136821_t)) {
				_133717_kind=_136821_t;
			}
		}
		goto _match_end_4445453584;
		_case_end_4445456848:;
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_MapTypeDecl>>())) { goto _case_end_4445456960; }
		_case_begin_4445456960:;
		{
			jule::Ref<_1ac6d02c0_Map> _137421_t = (*this)._method_build_map(_133629_decl_kind.operator jule::Ref<_1b61ca014_MapTypeDecl>());
			if (jule::real(_137421_t)) {
				_133717_kind=_137421_t;
			}
		}
		goto _match_end_4445453584;
		_case_end_4445456960:;
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_TupleTypeDecl>>())) { goto _case_end_4445454704; }
		_case_begin_4445454704:;
		{
			jule::Ref<_1ac6d02c0_Tuple> _138021_t = (*this)._method_build_tuple(_133629_decl_kind.operator jule::Ref<_1b61ca014_TupleTypeDecl>());
			if (jule::real(_138021_t)) {
				_133717_kind=_138021_t;
			}
		}
		goto _match_end_4445453584;
		_case_end_4445454704:;
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_FnDecl>>())) { goto _case_end_4445454816; }
		_case_begin_4445454816:;
		{
			jule::Ref<_1b557cd24_FnIns> _138621_t = (*this)._method_build_fn(_133629_decl_kind.operator jule::Ref<_1b61ca014_FnDecl>());
			if (jule::real(_138621_t)) {
				_133717_kind=_138621_t;
			}
		}
		goto _match_end_4445453584;
		_case_end_4445454816:;
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_NamespaceTypeDecl>>())) { goto _case_end_4445454928; }
		_case_begin_4445454928:;
		{
			jule::Trait<_1ac6d02c0_Kind> _139221_t = (*this)._method_build_by_namespace(_133629_decl_kind.operator jule::Ref<_1b61ca014_NamespaceTypeDecl>());
			if (_139221_t != nullptr) {
				_133717_kind=_139221_t;
			}
		}
		goto _match_end_4445453584;
		_case_end_4445454928:;
		_case_begin_4445454288:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("invalid data-type", 17),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1ac6d02c0_TypeKind>();
		}
		goto _match_end_4445453584;
		_case_end_4445454288:;
		_match_end_4445453584:;
	}
	if (_133717_kind == nullptr) {
		return jule::new_ref<_1ac6d02c0_TypeKind>();
	}
	{
		auto _match_expr{ _133717_kind };
		if (!(_match_expr.type_is<jule::Ref<_1ac6d02c0_TypeKind>>())) { goto _case_end_4445488352; }
		_case_begin_4445488352:;
		{
			return _133717_kind.operator jule::Ref<_1ac6d02c0_TypeKind>();
		}
		goto _match_end_4445485296;
		_case_end_4445488352:;
		_case_begin_4445487056:;
		{
			return jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_133717_kind));
		}
		goto _match_end_4445485296;
		_case_end_4445487056:;
		_match_end_4445485296:;
	}
}



inline jule::Ref<_1ac6d02c0_TypeKind> _1ac6d02c0_TypeChecker::_method_check_decl(jule::Ref<_1b61ca014_TypeDecl>& _141734_decl) {
	_1b61ec5ec_Token _141917_error_token = (*this)._field_error_token;
	(*this)._field_error_token=_141734_decl->_field_token;
	jule::Ref<_1ac6d02c0_TypeKind> _142217_kind = (*this)._method_build(_141734_decl->_field_kind);
	(*this)._field_error_token=_141917_error_token;
	return _142217_kind;
}



inline void _1ac6d02c0_TypeChecker::_method_check(jule::Ref<_1ac6d02c0_TypeSymbol>& _142829_t) {
	if ((!(jule::real(_142829_t->_field_decl)))) {
		return;
	}
	jule::Ref<_1ac6d02c0_TypeKind> _143317_kind = (*this)._method_check_decl(_142829_t->_field_decl);
	if ((!(jule::real(_143317_kind)))) {
		_142829_t->_method_remove_kind();
		return;
	}
	_142829_t->_field_kind=_143317_kind;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ac6d02c0_TypeChecker &_Src) {
	_Stream << "TypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "ignore_generics:" << _Src._field_ignore_generics << ", ";
	_Stream << "use_generics:" << _Src._field_use_generics << ", ";
	_Stream << "not_plain:" << _Src._field_not_plain;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61ca014_ContSt &_Src) {
	_Stream << "ContSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::Ref<_1b60cd1d1_IR>,jule::Slice<_1cdeeb191_Log>> _1b60cd1d1_IR::_static_method_build(jule::Str _2525_path,jule::Int _2536_flags) {
	jule::Ref<_1b615c804_PlainImporter> _2617_importer = jule::new_struct<_1b615c804_PlainImporter>(new( std::nothrow ) _1b615c804_PlainImporter());
	jule::Slice<jule::Ref<_1b61d1d62_Ast>> _2718_files;
	jule::Slice<_1cdeeb191_Log> _2729_logs;
	std::tie(_2718_files,_2729_logs) = _2617_importer->_method_import_package(_2525_path);
	if (_2729_logs.len() > 0LL) {
		return std::make_tuple(jule::new_ref<_1b60cd1d1_IR>(),_2729_logs);
	}
	if (_2718_files.len() == 0LL) {
		return std::make_tuple(jule::new_ref<_1b60cd1d1_IR>(),nullptr);
	}
	jule::Ref<_1ab194c20_Package> _3618_pkg;
	std::tie(_3618_pkg,_2729_logs) = _1aae299b6_analyze_package(_2718_files,_2617_importer,_2536_flags);
	if (_2729_logs.len() > 0LL) {
		return std::make_tuple(jule::new_ref<_1b60cd1d1_IR>(),_2729_logs);
	}
	jule::Ref<_1b60cd1d1_IR> _4117_ir = jule::new_struct<_1b60cd1d1_IR>(new( std::nothrow ) _1b60cd1d1_IR(jule::Slice<jule::Str>(),_3618_pkg,_2617_importer->_field_all_packages,_1b60cc7c9_OrderedDefines()));
	_4117_ir->_field_passes=_1b60cd1d1_get_all_unique_passes(_4117_ir->_field_main,_4117_ir->_field_used);
	return std::make_tuple(_4117_ir,nullptr);
}



inline void _1b60cd1d1_IR::_method_append_structs(jule::Ref<_1ab194c20_Package>& _5234_p,jule::Slice<jule::Ref<_1b5e07a00_Struct>>& _5258_buffer) {
	{
		auto _range_expr = _5234_p->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab00cc20_SymbolTable> _1b60cd1d1_f = *_range_begin;
			_iter_begin_4445763632:;
			{
				{
					auto _range_expr = _1b60cd1d1_f->_field_structs;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Ref<_1b5e07a00_Struct> _1b60cd1d1_s = *_range_begin;
						_iter_begin_4445765584:;
						{
							if ((!(_1b60cd1d1_s->_field_cpp_linked))) {
								_5258_buffer=jule::append(_5258_buffer,jule::Slice<jule::Ref<_1b5e07a00_Struct>>({_1b60cd1d1_s}));
							}
						}
						_iter_next_4445765584:;
						++_range_begin;
						if (_range_begin != _range_end) { _1b60cd1d1_s = *_range_begin; goto _iter_begin_4445765584; }
						_iter_end_4445765584:;
					}
				}
			}
			_iter_next_4445763632:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b60cd1d1_f = *_range_begin; goto _iter_begin_4445763632; }
			_iter_end_4445763632:;
		}
	}
}



inline jule::Slice<jule::Ref<_1b5e07a00_Struct>> _1b60cd1d1_IR::_method_get_all_structures(void) {
	jule::Slice<jule::Ref<_1b5e07a00_Struct>> _6517_buffer = nullptr;
	(*this)._method_append_structs((*this)._field_main,_6517_buffer);
	{
		auto _range_expr = (*this)._field_used;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab194c20_ImportInfo> _1b60cd1d1_u = *_range_begin;
			_iter_begin_4445771152:;
			{
				if ((!(_1b60cd1d1_u->_field_cpp_linked))) {
					(*this)._method_append_structs(_1b60cd1d1_u->_field_package,_6517_buffer);
				}
			}
			_iter_next_4445771152:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b60cd1d1_u = *_range_begin; goto _iter_begin_4445771152; }
			_iter_end_4445771152:;
		}
	}
	return _6517_buffer;
}



inline void _1b60cd1d1_IR::_method_append_vars(jule::Ref<_1ab194c20_Package>& _7831_p,jule::Slice<jule::Ref<_1b623eab2_Var>>& _7855_buffer) {
	{
		auto _range_expr = _7831_p->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab00cc20_SymbolTable> _1b60cd1d1_f = *_range_begin;
			_iter_begin_4445778016:;
			{
				{
					auto _range_expr = _1b60cd1d1_f->_field_vars;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Ref<_1b623eab2_Var> _1b60cd1d1_v = *_range_begin;
						_iter_begin_4445779968:;
						{
							if ((!(_1b60cd1d1_v->_field_cpp_linked)) && (!(_1b60cd1d1_v->_field_constant))) {
								_7855_buffer=jule::append(_7855_buffer,jule::Slice<jule::Ref<_1b623eab2_Var>>({_1b60cd1d1_v}));
							}
						}
						_iter_next_4445779968:;
						++_range_begin;
						if (_range_begin != _range_end) { _1b60cd1d1_v = *_range_begin; goto _iter_begin_4445779968; }
						_iter_end_4445779968:;
					}
				}
			}
			_iter_next_4445778016:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b60cd1d1_f = *_range_begin; goto _iter_begin_4445778016; }
			_iter_end_4445778016:;
		}
	}
}



inline jule::Slice<jule::Ref<_1b623eab2_Var>> _1b60cd1d1_IR::_method_get_all_variables(void) {
	jule::Slice<jule::Ref<_1b623eab2_Var>> _9117_buffer = nullptr;
	(*this)._method_append_vars((*this)._field_main,_9117_buffer);
	{
		auto _range_expr = (*this)._field_used;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab194c20_ImportInfo> _1b60cd1d1_u = *_range_begin;
			_iter_begin_4445785984:;
			{
				if ((!(_1b60cd1d1_u->_field_cpp_linked))) {
					(*this)._method_append_vars(_1b60cd1d1_u->_field_package,_9117_buffer);
				}
			}
			_iter_next_4445785984:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b60cd1d1_u = *_range_begin; goto _iter_begin_4445785984; }
			_iter_end_4445785984:;
		}
	}
	return _9117_buffer;
}



inline void _1b60cd1d1_IR::_method_order(void) {
	(*this)._field_ordered._field_structs=(*this)._method_get_all_structures();
	(*this)._field_ordered._field_globals=(*this)._method_get_all_variables();
	_1b60cc7c9_DefineOrderer::_static_method_order_variables((*this)._field_ordered._field_globals);
	_1b60cc7c9_DefineOrderer::_static_method_order_structures((*this)._field_ordered._field_structs);
}







std::ostream &operator<<(std::ostream &_Stream, const _1b60cd1d1_IR &_Src) {
	_Stream << "IR{";
	_Stream << "passes:" << _Src._field_passes << ", ";
	_Stream << "main:" << _Src._field_main << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "ordered:" << _Src._field_ordered;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61ca014_If &_Src) {
	_Stream << "If{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61ca014_Else &_Src) {
	_Stream << "Else{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab009de8_ScopeLabel &_Src) {
	_Stream << "ScopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61ca014_Directive &_Src) {
	_Stream << "Directive{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "tag:" << _Src._field_tag << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61ca014_TypeAliasDecl &_Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61ca014_Case &_Src) {
	_Stream << "Case{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61ca014_UseDecl &_Src) {
	_Stream << "UseDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "link_path:" << _Src._field_link_path << ", ";
	_Stream << "alias:" << _Src._field_alias << ", ";
	_Stream << "full:" << _Src._field_full << ", ";
	_Stream << "selected:" << _Src._field_selected << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "std:" << _Src._field_std;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b61ca014_EnumItemDecl::_method_auto_expr(void) {
	return (!(jule::real((*this)._field_expr)));
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61ca014_EnumItemDecl &_Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b61ca014_EnumDecl::_method_default_typed(void) {
	return (!(jule::real((*this)._field_kind)));
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61ca014_EnumDecl &_Src) {
	_Stream << "EnumDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "items:" << _Src._field_items << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61ca014_FieldDecl &_Src) {
	_Stream << "FieldDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61ca014_StructDecl &_Src) {
	_Stream << "StructDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61ca014_TraitDecl &_Src) {
	_Stream << "TraitDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments << ", ";
	_Stream << "methods:" << _Src._field_methods;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b61ca014_Impl::_method_is_trait_impl(void) {
	return (*this)._field_base._field_id != 0LLU;
}



inline jule::Bool _1b61ca014_Impl::_method_is_struct_impl(void) {
	return (*this)._field_base._field_id == 0LLU;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61ca014_Impl &_Src) {
	_Stream << "Impl{";
	_Stream << "base:" << _Src._field_base << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "methods:" << _Src._field_methods;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b61ca014_Expr::_method_is_fn_call(void) {
	if ((*this)._field_kind == nullptr) {
		return false;
	}
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_FnCallExpr>>())) { goto _case_end_4414399312; }
		_case_begin_4414399312:;
		{
			return true;
		}
		goto _match_end_4414397344;
		_case_end_4414399312:;
		_case_begin_4414398832:;
		{
			return false;
		}
		goto _match_end_4414397344;
		_case_end_4414398832:;
		_match_end_4414397344:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61ca014_Expr &_Src) {
	_Stream << "Expr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61ca014_TypeDecl &_Src) {
	_Stream << "TypeDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1a9e07148_AssignInfo &_Src) {
	_Stream << "AssignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b61ca014_IdentTypeDecl::_method_is_prim(void) {
	return (*this)._field_token._field_id == 1LLU;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61ca014_IdentTypeDecl &_Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61ca014_FnCallExpr &_Src) {
	_Stream << "FnCallExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "concurrent:" << _Src._field_concurrent;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_1b5e07a00_FieldIns> _1b5e07a00_Field::_method_instance(void) {
	return jule::new_struct<_1b5e07a00_FieldIns>(new( std::nothrow ) _1b5e07a00_FieldIns(this->self,this->self->_field_kind->_field_kind));
}







std::ostream &operator<<(std::ostream &_Stream, const _1b5e07a00_Field &_Src) {
	_Stream << "Field{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_1b5e07a00_StructIns> _1b5e07a00_Struct::_method_instance(void) {
	if ((this->self->_field_generics.len() == 0LL) && (this->self->_field_instances.len() == 1LL)) {
		return this->self->_field_instances[0LL];
	}
	jule::Ref<_1b5e07a00_StructIns> _6617_ins = jule::new_struct<_1b5e07a00_StructIns>(new( std::nothrow ) _1b5e07a00_StructIns(jule::Bool(),this->self,jule::Slice<jule::Ref<_1ac6d02c0_TypeKind>>(),jule::Slice<jule::Ref<_1b5e07a00_FieldIns>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(this->self->_field_fields.len()))),jule::Slice<jule::Ref<_1b557cd24_Fn>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(this->self->_field_methods.len()))),jule::Bool(),_1b5589c76_ReferenceStack::_static_method_new()));
	{
		auto _range_expr = this->self->_field_fields;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1b5e07a00_i = 0;
			jule::Ref<_1b5e07a00_Field> _1b5e07a00_f = *_range_begin;
			_iter_begin_4438681856:;
			{
				_6617_ins->_field_fields[static_cast<jule::Int>(_1b5e07a00_i)]=_1b5e07a00_f->_method_instance();
				if (jule::real(_1b5e07a00_f->_field_kind->_field_kind) && _1b5e07a00_f->_field_kind->_field_kind->_method_mutable()) {
					_6617_ins->_field_mutable=true;
				}
			}
			_iter_next_4438681856:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1b5e07a00_i; _1b5e07a00_f = *_range_begin; goto _iter_begin_4438681856; }
			_iter_end_4438681856:;
		}
	}
	{
		auto _range_expr = this->self->_field_methods;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1b5e07a00_i = 0;
			jule::Ref<_1b557cd24_Fn> _1b5e07a00_f = *_range_begin;
			_iter_begin_4438683472:;
			{
				jule::Ref<_1b557cd24_Fn> _8121_fins = jule::new_struct<_1b557cd24_Fn>(new( std::nothrow ) _1b557cd24_Fn(_1b5e07a00_f->_field_sema,_1b5e07a00_f->_field_token,_1b5e07a00_f->_field_global,_1b5e07a00_f->_field_unsafety,_1b5e07a00_f->_field_public,_1b5e07a00_f->_field_cpp_linked,_1b5e07a00_f->_field_statically,_1b5e07a00_f->_field_ident,_1b5e07a00_f->_field_directives,_1b5e07a00_f->_field_doc,_1b5e07a00_f->_field_scope,_1b5e07a00_f->_field_generics,_1b5e07a00_f->_field_result,_1b5e07a00_f->_field_params,_1b5e07a00_f->_field_owner,nullptr));
				_6617_ins->_field_methods[static_cast<jule::Int>(_1b5e07a00_i)]=_8121_fins;
			}
			_iter_next_4438683472:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1b5e07a00_i; _1b5e07a00_f = *_range_begin; goto _iter_begin_4438683472; }
			_iter_end_4438683472:;
		}
	}
	return _6617_ins;
}



inline jule::Ref<_1b5e07a00_StructIns> _1b5e07a00_Struct::_method_append_instance(jule::Ref<_1b5e07a00_StructIns>& _10739_ins) {
	if (((*this)._field_generics.len() == 0LL) && ((*this)._field_instances.len() == 1LL)) {
		return (*this)._field_instances[0LL];
	}
	{
		auto _range_expr = (*this)._field_instances;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b5e07a00_StructIns> _1b5e07a00_ains = *_range_begin;
			_iter_begin_4438703936:;
			{
				{
					auto _range_expr = _1b5e07a00_ains->_field_generics;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Int _1b5e07a00_i = 0;
						jule::Ref<_1ac6d02c0_TypeKind> _1b5e07a00_ag = *_range_begin;
						_iter_begin_4438705856:;
						{
							if (_1b5e07a00_ag->_method_equals(_10739_ins->_field_generics[static_cast<jule::Int>(_1b5e07a00_i)])) {
								return _1b5e07a00_ains;
							}
						}
						_iter_next_4438705856:;
						++_range_begin;
						if (_range_begin != _range_end) { ++_1b5e07a00_i; _1b5e07a00_ag = *_range_begin; goto _iter_begin_4438705856; }
						_iter_end_4438705856:;
					}
				}
			}
			_iter_next_4438703936:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b5e07a00_ains = *_range_begin; goto _iter_begin_4438703936; }
			_iter_end_4438703936:;
		}
	}
	(*this)._field_instances=jule::append((*this)._field_instances,jule::Slice<jule::Ref<_1b5e07a00_StructIns>>({_10739_ins}));
	return jule::new_ref<_1b5e07a00_StructIns>();
}



inline jule::Ref<_1b557cd24_Fn> _1b5e07a00_Struct::_method_find_method(jule::Str _12834_ident,jule::Bool _12846_statically) {
	{
		auto _range_expr = (*this)._field_methods;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b557cd24_Fn> _1b5e07a00_f = *_range_begin;
			_iter_begin_4438715760:;
			{
				if ((_1b5e07a00_f->_field_statically == _12846_statically) && (_1b5e07a00_f->_field_ident == _12834_ident)) {
					return _1b5e07a00_f;
				}
			}
			_iter_next_4438715760:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b5e07a00_f = *_range_begin; goto _iter_begin_4438715760; }
			_iter_end_4438715760:;
		}
	}
	return jule::new_ref<_1b557cd24_Fn>();
}



inline jule::Ref<_1b5e07a00_Field> _1b5e07a00_Struct::_method_find_field(jule::Str _13933_ident) {
	{
		auto _range_expr = (*this)._field_fields;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b5e07a00_Field> _1b5e07a00_f = *_range_begin;
			_iter_begin_4438721360:;
			{
				if (_1b5e07a00_f->_field_ident == _13933_ident) {
					return _1b5e07a00_f;
				}
			}
			_iter_next_4438721360:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b5e07a00_f = *_range_begin; goto _iter_begin_4438721360; }
			_iter_end_4438721360:;
		}
	}
	return jule::new_ref<_1b5e07a00_Field>();
}



inline jule::Bool _1b5e07a00_Struct::_method_is_implements(jule::Ref<_1aaee9091_Trait> _14932_t) {
	{
		auto _range_expr = (*this)._field_implements;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1aaee9091_Trait> _1b5e07a00_it = *_range_begin;
			_iter_begin_4438725376:;
			{
				if ((_14932_t).alloc == (_1b5e07a00_it).alloc) {
					return true;
				}
			}
			_iter_next_4438725376:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b5e07a00_it = *_range_begin; goto _iter_begin_4438725376; }
			_iter_end_4438725376:;
		}
	}
	return false;
}



inline jule::Bool _1b5e07a00_Struct::_method_is_derives(jule::Str _15929_ident) {
	{
		auto _range_expr = (*this)._field_directives;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b61ca014_Directive> _1b5e07a00_d = *_range_begin;
			_iter_begin_4438729056:;
			{
				if (_1b5e07a00_d->_field_tag == jule::Str("derive", 6)) {
					if ((_1b5e07a00_d->_field_args.len() == 1LL) && (_1b5e07a00_d->_field_args[0LL] == _15929_ident)) {
						return true;
					}
				}
			}
			_iter_next_4438729056:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b5e07a00_d = *_range_begin; goto _iter_begin_4438729056; }
			_iter_end_4438729056:;
		}
	}
	return false;
}



inline jule::Bool _1b5e07a00_Struct::_method_is_uses(jule::Ref<_1b5e07a00_Struct> _17126_s) {
	{
		auto _range_expr = (*this)._field_uses;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b5e07a00_Struct> _1b5e07a00_u = *_range_begin;
			_iter_begin_4438736640:;
			{
				_iter_begin_4438737936:;
				if (!((_17126_s).alloc == (_1b5e07a00_u).alloc)) { goto _iter_end_4438737936; }
				{
					return true;
				}
				_iter_next_4438737936:;
				goto _iter_begin_4438737936;
				_iter_end_4438737936:;
			}
			_iter_next_4438736640:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b5e07a00_u = *_range_begin; goto _iter_begin_4438736640; }
			_iter_end_4438736640:;
		}
	}
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b5e07a00_Struct &_Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "depends:" << _Src._field_depends << ", ";
	_Stream << "uses:" << _Src._field_uses << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "implements:" << _Src._field_implements << ", ";
	_Stream << "instances:" << _Src._field_instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b61ca014_Node::_method_is_decl(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_EnumDecl>>() || _match_expr.type_is<jule::Ref<_1b61ca014_FnDecl>>() || _match_expr.type_is<jule::Ref<_1b61ca014_StructDecl>>() || _match_expr.type_is<jule::Ref<_1b61ca014_TraitDecl>>() || _match_expr.type_is<jule::Ref<_1b61ca014_TypeAliasDecl>>() || _match_expr.type_is<jule::Ref<_1b61ca014_FieldDecl>>() || _match_expr.type_is<jule::Ref<_1b61ca014_UseDecl>>() || _match_expr.type_is<jule::Ref<_1b61ca014_VarDecl>>() || _match_expr.type_is<jule::Ref<_1b61ca014_TypeDecl>>())) { goto _case_end_4414355792; }
		_case_begin_4414355792:;
		{
			return true;
		}
		goto _match_end_4414354752;
		_case_end_4414355792:;
		_case_begin_4414355488:;
		{
			return false;
		}
		goto _match_end_4414354752;
		_case_end_4414355488:;
		_match_end_4414354752:;
	}
}



inline jule::Bool _1b61ca014_Node::_method_is_comment(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_Comment>>() || _match_expr.type_is<jule::Ref<_1b61ca014_CommentGroup>>())) { goto _case_end_4414372880; }
		_case_begin_4414372880:;
		{
			return true;
		}
		goto _match_end_4414370688;
		_case_end_4414372880:;
		_case_begin_4414372576:;
		{
			return false;
		}
		goto _match_end_4414370688;
		_case_end_4414372576:;
		_match_end_4414370688:;
	}
}



inline jule::Bool _1b61ca014_Node::_method_is_impl(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_Impl>>())) { goto _case_end_4414376720; }
		_case_begin_4414376720:;
		{
			return true;
		}
		goto _match_end_4414375152;
		_case_end_4414376720:;
		_case_begin_4414376416:;
		{
			return false;
		}
		goto _match_end_4414375152;
		_case_end_4414376416:;
		_match_end_4414375152:;
	}
}



inline jule::Bool _1b61ca014_Node::_method_is_use_decl(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_UseDecl>>())) { goto _case_end_4414380240; }
		_case_begin_4414380240:;
		{
			return true;
		}
		goto _match_end_4414377456;
		_case_end_4414380240:;
		_case_begin_4414379936:;
		{
			return false;
		}
		goto _match_end_4414377456;
		_case_end_4414379936:;
		_match_end_4414377456:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1b61ca014_Node &_Src) {
	_Stream << "Node{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_1b557cd24_ParamIns> _1b557cd24_Param::_method_instance(void) {
	return jule::new_struct<_1b557cd24_ParamIns>(new( std::nothrow ) _1b557cd24_ParamIns(this->self,jule::Ref<_1ac6d02c0_TypeKind>()));
}



inline jule::Bool _1b557cd24_Param::_method_is_self(void) {
	return ((*this)._field_ident == jule::Str("&self", 5)) || ((*this)._field_ident == jule::Str("self", 4));
}



inline jule::Bool _1b557cd24_Param::_method_is_ref(void) {
	return ((*this)._field_ident != jule::Str("", 0)) && ((*this)._field_ident[0LL] == '&');
}







std::ostream &operator<<(std::ostream &_Stream, const _1b557cd24_Param &_Src) {
	_Stream << "Param{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b557cd24_Fn::_method_is_void(void) {
	return (!(jule::real((*this)._field_result)));
}



inline jule::Bool _1b557cd24_Fn::_method_is_method(void) {
	return jule::real((*this)._field_owner);
}



inline jule::Bool _1b557cd24_Fn::_method_is_entry_point(void) {
	return (*this)._field_ident == jule::Str("main", 4);
}



inline jule::Bool _1b557cd24_Fn::_method_is_init(void) {
	return (*this)._field_ident == jule::Str("init", 4);
}



inline jule::Bool _1b557cd24_Fn::_method_is_anon(void) {
	return _1b61ec5ec_is_anon_ident((*this)._field_ident);
}



inline jule::Bool _1b557cd24_Fn::_method_any_var(void) {
	return jule::real((*this)._field_result) && ((*this)._field_result->_field_idents.len() > 0LL);
}



inline jule::Bool _1b557cd24_Fn::_method_parameters_uses_generics(void) {
	if ((*this)._field_generics.len() == 0LL) {
		return false;
	}
	{
		auto _range_expr = (*this)._field_params;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b557cd24_Param> _1b557cd24_p = *_range_begin;
			_iter_begin_4438794640:;
			{
				if (_1b557cd24_parameter_uses_generics(_1b557cd24_p,(*this)._field_generics)) {
					return true;
				}
			}
			_iter_next_4438794640:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b557cd24_p = *_range_begin; goto _iter_begin_4438794640; }
			_iter_end_4438794640:;
		}
	}
	return false;
}



inline jule::Bool _1b557cd24_Fn::_method_result_uses_generics(void) {
	if ((*this)._method_is_void()) {
		return false;
	} else if ((!(jule::real((*this)._field_result->_field_kind))) || (!(jule::real((*this)._field_result->_field_kind->_field_kind)))) {
		return false;
	}
	return _1b557cd24_kind_uses_generics((*this)._field_result->_field_kind->_field_kind,(*this)._field_generics);
}



inline jule::Ref<_1b557cd24_FnIns> _1b557cd24_Fn::_method_instance_force(void) {
	jule::Ref<_1b557cd24_FnIns> _11017_ins = jule::new_struct<_1b557cd24_FnIns>(new( std::nothrow ) _1b557cd24_FnIns(jule::Ref<_1b5e07a00_StructIns>(),this->self,jule::Slice<jule::Ref<_1ac6d02c0_TypeKind>>(),jule::Slice<jule::Ref<_1b557cd24_ParamIns>>(),jule::Ref<_1ac6d02c0_TypeKind>(),jule::new_struct<_1ab009de8_Scope>(new( std::nothrow ) _1ab009de8_Scope()),_1b5589c76_ReferenceStack::_static_method_new(),jule::Ref<_1b5589c76_ReferenceStack>(),jule::Fn<jule::Ref<_1ab00dbcc_Data>(jule::Ref<_1ab00dbcc_Eval>&,jule::Ref<_1b61ca014_FnCallExpr>&,jule::Ref<_1ab00dbcc_Data>&)>(),jule::Bool(),jule::Bool()));
	if (this->self->_method_is_init()) {
		_11017_ins->_field_refers=_1b5589c76_ReferenceStack::_static_method_new();
	}
	_11017_ins->_field_params=jule::Slice<jule::Ref<_1b557cd24_ParamIns>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(this->self->_field_params.len())));
	{
		auto _range_expr = this->self->_field_params;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1b557cd24_i = 0;
			jule::Ref<_1b557cd24_Param> _1b557cd24_p = *_range_begin;
			_iter_begin_4438811344:;
			{
				_11017_ins->_field_params[static_cast<jule::Int>(_1b557cd24_i)]=_1b557cd24_p->_method_instance();
			}
			_iter_next_4438811344:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1b557cd24_i; _1b557cd24_p = *_range_begin; goto _iter_begin_4438811344; }
			_iter_end_4438811344:;
		}
	}
	if (jule::real(_11017_ins->_field_decl->_field_result)) {
		_11017_ins->_field_result=_11017_ins->_field_decl->_field_result->_field_kind->_field_kind;
	}
	return _11017_ins;
}



inline jule::Ref<_1b557cd24_FnIns> _1b557cd24_Fn::_method_instance(void) {
	if ((this->self->_field_generics.len() == 0LL) && (this->self->_field_instances.len() == 1LL)) {
		return this->self->_field_instances[0LL];
	}
	return this->self->_method_instance_force();
}



inline std::tuple<jule::Bool,jule::Int> _1b557cd24_Fn::_method_append_instance(jule::Ref<_1b557cd24_FnIns>& _14139_ins) {
	if ((*this)._field_generics.len() == 0LL) {
		if ((*this)._field_instances.len() == 1LL) {
			return std::make_tuple(false,0LL);
		}
		(*this)._field_instances=jule::append((*this)._field_instances,jule::Slice<jule::Ref<_1b557cd24_FnIns>>({_14139_ins}));
		return std::make_tuple(true,-1LL);
	}
	if ((*this)._field_instances.len() == 0LL) {
		(*this)._field_instances=jule::append((*this)._field_instances,jule::Slice<jule::Ref<_1b557cd24_FnIns>>({_14139_ins}));
		return std::make_tuple(true,-1LL);
	}
	{
		auto _range_expr = (*this)._field_instances;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1b557cd24_j = 0;
			jule::Ref<_1b557cd24_FnIns> _1b557cd24_ains = *_range_begin;
			_iter_begin_4438830048:;
			{
				{
					auto _range_expr = _1b557cd24_ains->_field_generics;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Int _1b557cd24_i = 0;
						jule::Ref<_1ac6d02c0_TypeKind> _1b557cd24_ag = *_range_begin;
						_iter_begin_4438834368:;
						{
							if (_1b557cd24_ag->_method_equals(_14139_ins->_field_generics[static_cast<jule::Int>(_1b557cd24_i)])) {
								return std::make_tuple(false,_1b557cd24_j);
							}
						}
						_iter_next_4438834368:;
						++_range_begin;
						if (_range_begin != _range_end) { ++_1b557cd24_i; _1b557cd24_ag = *_range_begin; goto _iter_begin_4438834368; }
						_iter_end_4438834368:;
					}
				}
			}
			_iter_next_4438830048:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1b557cd24_j; _1b557cd24_ains = *_range_begin; goto _iter_begin_4438830048; }
			_iter_end_4438830048:;
		}
	}
	(*this)._field_instances=jule::append((*this)._field_instances,jule::Slice<jule::Ref<_1b557cd24_FnIns>>({_14139_ins}));
	return std::make_tuple(true,-1LL);
}







std::ostream &operator<<(std::ostream &_Stream, const _1b557cd24_Fn &_Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "global:" << _Src._field_global << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "params:" << _Src._field_params << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "instances:" << _Src._field_instances;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b5589c76_Pass &_Src) {
	_Stream << "Pass{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "text:" << _Src._field_text;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1aaee9091_Trait::_method_to_str(void) {
	return (*this)._field_ident;
}



inline jule::Bool _1aaee9091_Trait::_method_equals(jule::Ref<_1ac6d02c0_TypeKind> _2521_other) {
	jule::Ref<_1aaee9091_Trait> _2613_trt = (_2521_other).alloc->_method_trt();
	if ((!(jule::real(_2613_trt)))) {
		return false;
	}
	return (&((*this))) == (_2613_trt).alloc;
}



inline jule::Bool _1aaee9091_Trait::_method_is_builtin(void) {
	return (*this)._field_token._field_id == 0LLU;
}



inline jule::Ref<_1b557cd24_Fn> _1aaee9091_Trait::_method_find_method(jule::Str _4034_ident) {
	{
		auto _range_expr = (*this)._field_methods;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b557cd24_Fn> _1aaee9091_f = *_range_begin;
			_iter_begin_4439245408:;
			{
				if (_1aaee9091_f->_field_ident == _4034_ident) {
					return _1aaee9091_f;
				}
			}
			_iter_next_4439245408:;
			++_range_begin;
			if (_range_begin != _range_end) { _1aaee9091_f = *_range_begin; goto _iter_begin_4439245408; }
			_iter_end_4439245408:;
		}
	}
	return jule::new_ref<_1b557cd24_Fn>();
}







std::ostream &operator<<(std::ostream &_Stream, const _1aaee9091_Trait &_Src) {
	_Stream << "Trait{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "implemented:" << _Src._field_implemented;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a909ac6b_EnumItem::_method_auto_expr(void) {
	return (!(jule::real((*this)._field_value)));
}







std::ostream &operator<<(std::ostream &_Stream, const _1a909ac6b_EnumItem &_Src) {
	_Stream << "EnumItem{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "value:" << _Src._field_value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a909ac6b_Enum::_method_to_str(void) {
	return (*this)._field_ident;
}



inline jule::Bool _1a909ac6b_Enum::_method_equals(jule::Ref<_1ac6d02c0_TypeKind> _3521_other) {
	jule::Ref<_1a909ac6b_Enum> _3613_enm = (_3521_other).alloc->_method_enm();
	if ((!(jule::real(_3613_enm)))) {
		return false;
	}
	return (&((*this))) == (_3613_enm).alloc;
}



inline jule::Ref<_1a909ac6b_EnumItem> _1a909ac6b_Enum::_method_find_item(jule::Str _4732_ident) {
	{
		auto _range_expr = (*this)._field_items;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1a909ac6b_EnumItem> _1a909ac6b_item = *_range_begin;
			_iter_begin_4439259744:;
			{
				if (_1a909ac6b_item->_field_ident == _4732_ident) {
					return _1a909ac6b_item;
				}
			}
			_iter_next_4439259744:;
			++_range_begin;
			if (_range_begin != _range_end) { _1a909ac6b_item = *_range_begin; goto _iter_begin_4439259744; }
			_iter_end_4439259744:;
		}
	}
	return jule::new_ref<_1a909ac6b_EnumItem>();
}







std::ostream &operator<<(std::ostream &_Stream, const _1a909ac6b_Enum &_Src) {
	_Stream << "Enum{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "items:" << _Src._field_items << ", ";
	_Stream << "doc:" << _Src._field_doc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_1ab194c20_ImportInfo> _1ab194c20_ImportInfo::_method_find_package(jule::Str ) {
	return jule::new_ref<_1ab194c20_ImportInfo>();
}



inline jule::Ref<_1ab194c20_ImportInfo> _1ab194c20_ImportInfo::_method_select_package(jule::Fn<jule::Bool(jule::Ref<_1ab194c20_ImportInfo>)> ) {
	return jule::new_ref<_1ab194c20_ImportInfo>();
}



inline jule::Ref<_1b623eab2_Var> _1ab194c20_ImportInfo::_method_find_var(jule::Str _14731_ident,jule::Bool _14743_cpp_linked) {
	if ((!((*this)._method_is_lookupable(_14731_ident)))) {
		return jule::new_ref<_1b623eab2_Var>();
	}
	return _1ab194c20_find_var_in_package((*this)._field_package->_field_files,_14731_ident,false);
}



inline jule::Ref<_1ac6d02c0_TypeAlias> _1ab194c20_ImportInfo::_method_find_type_alias(jule::Str _16038_ident,jule::Bool _16050_cpp_linked) {
	if ((!((*this)._method_is_lookupable(_16038_ident)))) {
		return jule::new_ref<_1ac6d02c0_TypeAlias>();
	}
	return _1ab194c20_find_type_alias_in_package((*this)._field_package->_field_files,_16038_ident,false);
}



inline jule::Ref<_1b5e07a00_Struct> _1ab194c20_ImportInfo::_method_find_struct(jule::Str _17334_ident,jule::Bool _17346_cpp_linked) {
	if ((!((*this)._method_is_lookupable(_17334_ident)))) {
		return jule::new_ref<_1b5e07a00_Struct>();
	}
	return _1ab194c20_find_struct_in_package((*this)._field_package->_field_files,_17334_ident,false);
}



inline jule::Ref<_1b557cd24_Fn> _1ab194c20_ImportInfo::_method_find_fn(jule::Str _18630_ident,jule::Bool _18642_cpp_linked) {
	if ((!((*this)._method_is_lookupable(_18630_ident)))) {
		return jule::new_ref<_1b557cd24_Fn>();
	}
	return _1ab194c20_find_fn_in_package((*this)._field_package->_field_files,_18630_ident,false);
}



inline jule::Ref<_1aaee9091_Trait> _1ab194c20_ImportInfo::_method_find_trait(jule::Str _19833_ident) {
	if ((!((*this)._method_is_lookupable(_19833_ident)))) {
		return jule::new_ref<_1aaee9091_Trait>();
	}
	return _1ab194c20_find_trait_in_package((*this)._field_package->_field_files,_19833_ident);
}



inline jule::Ref<_1a909ac6b_Enum> _1ab194c20_ImportInfo::_method_find_enum(jule::Str _21032_ident) {
	if ((!((*this)._method_is_lookupable(_21032_ident)))) {
		return jule::new_ref<_1a909ac6b_Enum>();
	}
	return _1ab194c20_find_enum_in_package((*this)._field_package->_field_files,_21032_ident);
}



inline jule::Bool _1ab194c20_ImportInfo::_method_is_lookupable(jule::Str _22028_ident) {
	if ((*this)._field_cpp_linked) {
		return false;
	}
	if ((!((*this)._field_import_all))) {
		if ((*this)._method_exist_ident(jule::Str("self", 4))) {
			return true;
		}
		if ((*this)._field_selected.len() > 0LL) {
			if ((!((*this)._method_exist_ident(_22028_ident)))) {
				return false;
			}
		}
	}
	return true;
}



inline jule::Bool _1ab194c20_ImportInfo::_method_exist_ident(jule::Str _24026_ident) {
	{
		auto _range_expr = (*this)._field_selected;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			_1b61ec5ec_Token _1ab194c20_sident = *_range_begin;
			_iter_begin_4440350112:;
			{
				if (_1ab194c20_sident._field_kind == _24026_ident) {
					return true;
				}
			}
			_iter_next_4440350112:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab194c20_sident = *_range_begin; goto _iter_begin_4440350112; }
			_iter_end_4440350112:;
		}
	}
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab194c20_ImportInfo &_Src) {
	_Stream << "ImportInfo{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "link_path:" << _Src._field_link_path << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "alias:" << _Src._field_alias << ", ";
	_Stream << "duplicate:" << _Src._field_duplicate << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "std:" << _Src._field_std << ", ";
	_Stream << "import_all:" << _Src._field_import_all << ", ";
	_Stream << "selected:" << _Src._field_selected << ", ";
	_Stream << "package:" << _Src._field_package;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ab0017b3_Impl::_method_is_trait_impl(void) {
	return (*this)._field_base._field_id != 0LLU;
}



inline jule::Bool _1ab0017b3_Impl::_method_is_struct_impl(void) {
	return (*this)._field_base._field_id == 0LLU;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ab0017b3_Impl &_Src) {
	_Stream << "Impl{";
	_Stream << "base:" << _Src._field_base << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "methods:" << _Src._field_methods;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b623eab2_Var::_method_is_initialized(void) {
	return jule::real((*this)._field_value);
}



inline jule::Bool _1b623eab2_Var::_method_is_type_inferred(void) {
	return (!(jule::real((*this)._field_kind))) || (!(jule::real((*this)._field_kind->_field_decl)));
}







std::ostream &operator<<(std::ostream &_Stream, const _1b623eab2_Var &_Src) {
	_Stream << "Var{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "constant:" << _Src._field_constant << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "value:" << _Src._field_value << ", ";
	_Stream << "references:" << _Src._field_references << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "depends:" << _Src._field_depends;
	_Stream << "}";
	return _Stream;
}



inline void _1a8dc912c_TypeCompatibilityChecker::_method_push_err(jule::Str _13927_fmt,jule::Slice<jule::Any> _13940_args) {
	(*this)._field_s->_method_push_err((*this)._field_error_token,_13927_fmt,_13940_args);
}



inline jule::Bool _1a8dc912c_TypeCompatibilityChecker::_method_check_trait(void) {
	jule::Bool _14332_ok = jule::Bool();
	if ((*this)._field_src->_method_is_nil()) {
		_14332_ok = true;
		return _14332_ok;
	}
	jule::Ref<_1aaee9091_Trait> _14813_trt = (*this)._field_dest->_method_trt();
	jule::Bool _14917_ref = false;
	{
		if (!((jule::real((*this)._field_src->_method_ref())))) { goto _case_end_4441588464; }
		_case_begin_4441588464:;
		{
			_14917_ref=true;
			(*this)._field_src=(*this)._field_src->_method_ref()->_field_elem;
			if (jule::real((*this)._field_src->_method_strct())) {
				_14332_ok = false;
				return _14332_ok;
			}
			goto _case_begin_4441587968;
		}
		goto _match_end_4441586784;
		_case_end_4441588464:;
		if (!((jule::real((*this)._field_src->_method_strct())))) { goto _case_end_4441587968; }
		_case_begin_4441587968:;
		{
			jule::Ref<_1b5e07a00_StructIns> _16017_s = (*this)._field_src->_method_strct();
			if ((!(_16017_s->_field_decl->_method_is_implements(_14813_trt)))) {
				_14332_ok = false;
				return _14332_ok;
			}
			if (_1a8dc912c_trait_has_reference_receiver(_14813_trt) && (!(_14917_ref))) {
				(*this)._method_push_err(jule::Str("trait has reference receiver parameter used method, cannot assign non-reference instance", 88),jule::Slice<jule::Any>({}));
				_14332_ok = false;
				return _14332_ok;
			}
			_14332_ok = true;
			return _14332_ok;
		}
		goto _match_end_4441586784;
		_case_end_4441587968:;
		if (!((jule::real((*this)._field_src->_method_trt())))) { goto _case_end_4441588080; }
		_case_begin_4441588080:;
		{
			_14332_ok = _14813_trt == (*this)._field_src->_method_trt();
			return _14332_ok;
		}
		goto _match_end_4441586784;
		_case_end_4441588080:;
		_case_begin_4441586912:;
		{
			_14332_ok = false;
			return _14332_ok;
		}
		goto _match_end_4441586784;
		_case_end_4441586912:;
		_match_end_4441586784:;
	}
}



inline jule::Bool _1a8dc912c_TypeCompatibilityChecker::_method_check_ref(void) {
	jule::Bool _18030_ok = jule::Bool();
	if ((*this)._field_dest->_method_to_str() == (*this)._field_src->_method_to_str()) {
		_18030_ok = true;
		return _18030_ok;
	} else if ((!((*this)._field_deref))) {
		_18030_ok = false;
		return _18030_ok;
	} else if ((!(jule::real((*this)._field_src->_method_ref())))) {
		(*this)._field_dest=(*this)._field_dest->_method_ref()->_field_elem;
		_18030_ok = (*this)._method_check();
		return _18030_ok;
	}
	(*this)._field_src=(*this)._field_src->_method_ref()->_field_elem;
	_18030_ok = (*this)._method_check();
	return _18030_ok;
}



inline jule::Bool _1a8dc912c_TypeCompatibilityChecker::_method_check_ptr(void) {
	jule::Bool _19430_ok = jule::Bool();
	if ((*this)._field_src->_method_is_nil()) {
		_19430_ok = true;
		return _19430_ok;
	}
	jule::Ref<_1ac6d02c0_Ptr> _19917_src = (*this)._field_src->_method_ptr();
	if ((!(jule::real(_19917_src)))) {
		_19430_ok = false;
		return _19430_ok;
	}
	jule::Ref<_1ac6d02c0_Ptr> _20417_dest = (*this)._field_dest->_method_ptr();
	if (_20417_dest->_method_is_unsafe()) {
		_19430_ok = true;
		return _19430_ok;
	}
	_1a8dc912c_TypeCompatibilityChecker _21017_sub = _1a8dc912c_TypeCompatibilityChecker((*this)._field_s,_20417_dest->_field_elem,_19917_src->_field_elem,(*this)._field_error_token,true,jule::Bool(),true);
	_19430_ok = _21017_sub._method_check();
	return _19430_ok;
}



inline jule::Bool _1a8dc912c_TypeCompatibilityChecker::_method_check_slc(void) {
	jule::Bool _22130_ok = jule::Bool();
	if ((*this)._field_src->_method_is_nil()) {
		_22130_ok = true;
		return _22130_ok;
	}
	jule::Ref<_1ac6d02c0_Slc> _22617_src = (*this)._field_src->_method_slc();
	if ((!(jule::real(_22617_src)))) {
		_22130_ok = false;
		return _22130_ok;
	}
	jule::Ref<_1ac6d02c0_Slc> _23017_dest = (*this)._field_dest->_method_slc();
	_1a8dc912c_TypeCompatibilityChecker _23217_sub = _1a8dc912c_TypeCompatibilityChecker((*this)._field_s,_23017_dest->_field_elem,_22617_src->_field_elem,(*this)._field_error_token,true,jule::Bool(),true);
	_22130_ok = _23217_sub._method_check();
	return _22130_ok;
}



inline jule::Bool _1a8dc912c_TypeCompatibilityChecker::_method_check_arr(void) {
	jule::Bool _24330_ok = jule::Bool();
	jule::Ref<_1ac6d02c0_Arr> _24417_src = (*this)._field_src->_method_arr();
	if ((!(jule::real(_24417_src)))) {
		_24330_ok = false;
		return _24330_ok;
	}
	jule::Ref<_1ac6d02c0_Arr> _24817_dest = (*this)._field_dest->_method_arr();
	if (_24817_dest->_field_n != _24417_src->_field_n) {
		_24330_ok = false;
		return _24330_ok;
	}
	_1a8dc912c_TypeCompatibilityChecker _25317_sub = _1a8dc912c_TypeCompatibilityChecker((*this)._field_s,_24817_dest->_field_elem,_24417_src->_field_elem,(*this)._field_error_token,true,jule::Bool(),true);
	_24330_ok = _25317_sub._method_check();
	return _24330_ok;
}



inline jule::Bool _1a8dc912c_TypeCompatibilityChecker::_method_check_map(void) {
	jule::Bool _26430_ok = jule::Bool();
	if ((*this)._field_src->_method_is_nil()) {
		_26430_ok = true;
		return _26430_ok;
	}
	jule::Ref<_1ac6d02c0_Map> _26917_src = (*this)._field_src->_method_map();
	if ((!(jule::real(_26917_src)))) {
		_26430_ok = false;
		return _26430_ok;
	}
	jule::Ref<_1ac6d02c0_Map> _27417_dest = (*this)._field_dest->_method_map();
	_1a8dc912c_TypeCompatibilityChecker _27617_sub = _1a8dc912c_TypeCompatibilityChecker((*this)._field_s,_27417_dest->_field_key,_26917_src->_field_key,(*this)._field_error_token,jule::Bool(),jule::Bool(),true);
	if ((!(_27617_sub._method_check()))) {
		_26430_ok = false;
		return _26430_ok;
	}
	_27617_sub._field_src=_26917_src->_field_val;
	_27617_sub._field_dest=_27417_dest->_field_val;
	_26430_ok = _27617_sub._method_check();
	return _26430_ok;
}



inline jule::Bool _1a8dc912c_TypeCompatibilityChecker::_method_check_struct(void) {
	jule::Bool _29233_ok = jule::Bool();
	jule::Ref<_1b5e07a00_StructIns> _29317_src = (*this)._field_src->_method_strct();
	if ((!(jule::real(_29317_src)))) {
		_29233_ok = false;
		return _29233_ok;
	}
	jule::Ref<_1b5e07a00_StructIns> _29717_dest = (*this)._field_dest->_method_strct();
	{
		if (!(((_29717_dest->_field_decl).alloc != (_29317_src->_field_decl).alloc))) { goto _case_end_4441659088; }
		_case_begin_4441659088:;
		{
			_29233_ok = false;
			return _29233_ok;
		}
		goto _match_end_4441658944;
		_case_end_4441659088:;
		if (!((_29717_dest->_field_generics.len() == 0LL))) { goto _case_end_4441659200; }
		_case_begin_4441659200:;
		{
			_29233_ok = true;
			return _29233_ok;
		}
		goto _match_end_4441658944;
		_case_end_4441659200:;
		_match_end_4441658944:;
	}
	{
		auto _range_expr = _29717_dest->_field_generics;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1a8dc912c_i = 0;
			jule::Ref<_1ac6d02c0_TypeKind> _1a8dc912c_dg = *_range_begin;
			_iter_begin_4441662464:;
			{
				jule::Ref<_1ac6d02c0_TypeKind> _30721_sg = _29317_src->_field_generics[static_cast<jule::Int>(_1a8dc912c_i)];
				_1a8dc912c_TypeCompatibilityChecker _30821_sub = _1a8dc912c_TypeCompatibilityChecker((*this)._field_s,_1a8dc912c_dg,_30721_sg,(*this)._field_error_token,jule::Bool(),jule::Bool(),jule::Bool());
				if ((!(_30821_sub._method_check()))) {
					_29233_ok = false;
					return _29233_ok;
				}
			}
			_iter_next_4441662464:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1a8dc912c_i; _1a8dc912c_dg = *_range_begin; goto _iter_begin_4441662464; }
			_iter_end_4441662464:;
		}
	}
	_29233_ok = true;
	return _29233_ok;
}



inline jule::Bool _1a8dc912c_TypeCompatibilityChecker::_method_check_fn(void) {
	jule::Bool _32129_ok = jule::Bool();
	if ((*this)._field_src->_method_is_nil()) {
		_32129_ok = true;
		return _32129_ok;
	}
	jule::Ref<_1b557cd24_FnIns> _32617_src = (*this)._field_src->_method_fnc();
	if ((!(jule::real(_32617_src)))) {
		_32129_ok = false;
		return _32129_ok;
	}
	jule::Ref<_1b557cd24_FnIns> _33117_dest = (*this)._field_dest->_method_fnc();
	if (jule::real(_32617_src->_field_result) != jule::real(_33117_dest->_field_result)) {
		_32129_ok = false;
		return _32129_ok;
	}
	if (_32617_src->_field_params.len() != _33117_dest->_field_params.len()) {
		_32129_ok = false;
		return _32129_ok;
	}
	{
		auto _range_expr = _32617_src->_field_params;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1a8dc912c_i = 0;
			_iter_begin_4441679840:;
			{
				jule::Ref<_1b557cd24_ParamIns> _34021_srcp = _32617_src->_field_params[static_cast<jule::Int>(_1a8dc912c_i)];
				jule::Ref<_1b557cd24_ParamIns> _34121_destp = _33117_dest->_field_params[static_cast<jule::Int>(_1a8dc912c_i)];
				if (jule::real(_34021_srcp) != jule::real(_34121_destp)) {
					_32129_ok = false;
					return _32129_ok;
				}
				if (_34021_srcp->_field_decl->_field_reference != _34121_destp->_field_decl->_field_reference) {
					_32129_ok = false;
					return _32129_ok;
				}
				_1a8dc912c_TypeCompatibilityChecker _35021_sub = _1a8dc912c_TypeCompatibilityChecker((*this)._field_s,_34121_destp->_field_kind,_34021_srcp->_field_kind,(*this)._field_error_token,jule::Bool(),jule::Bool(),jule::Bool());
				if ((!(_35021_sub._method_check()))) {
					_32129_ok = false;
					return _32129_ok;
				}
			}
			_iter_next_4441679840:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1a8dc912c_i; goto _iter_begin_4441679840; }
			_iter_end_4441679840:;
		}
	}
	if (jule::real(_32617_src->_field_result)) {
		_1a8dc912c_TypeCompatibilityChecker _36221_sub = _1a8dc912c_TypeCompatibilityChecker((*this)._field_s,_33117_dest->_field_result,_32617_src->_field_result,(*this)._field_error_token,jule::Bool(),jule::Bool(),jule::Bool());
		if ((!(_36221_sub._method_check()))) {
			_32129_ok = false;
			return _32129_ok;
		}
	}
	_32129_ok = true;
	return _32129_ok;
}



inline jule::Bool _1a8dc912c_TypeCompatibilityChecker::_method_check_enum(void) {
	jule::Bool _37631_ok = jule::Bool();
	jule::Ref<_1a909ac6b_Enum> _37713_r = (*this)._field_src->_method_enm();
	if ((!(jule::real(_37713_r)))) {
		_37631_ok = false;
		return _37631_ok;
	}
	_37631_ok = ((*this)._field_dest->_method_enm()).alloc == (_37713_r).alloc;
	return _37631_ok;
}



inline jule::Bool _1a8dc912c_TypeCompatibilityChecker::_method_check_prim(void) {
	jule::Bool _38431_ok = jule::Bool();
	jule::Ref<_1ac6d02c0_Prim> _38513_dest = (*this)._field_dest->_method_prim();
	jule::Ref<_1ac6d02c0_Prim> _38617_src = (*this)._field_src->_method_prim();
	if ((!(jule::real(_38617_src)))) {
		_38431_ok = _38513_dest->_method_is_any();
		return _38431_ok;
	}
	if (_38513_dest->_method_is_any()) {
		_38431_ok = (!((*this)._field_ignore_any)) || _38617_src->_method_is_any();
		return _38431_ok;
	}
	_38431_ok = _1ac9d0e1c_types_are_compatible(_38513_dest->_method_to_str(),_38617_src->_method_to_str());
	return _38431_ok;
}



inline jule::Bool _1a8dc912c_TypeCompatibilityChecker::_method_check_cpp_linked(void) {
	jule::Bool _39637_ok = jule::Bool();
	_39637_ok = (*this)._field_src->_method_cpp_linked() && ((*this)._field_dest->_field_cpp_ident == (*this)._field_src->_field_cpp_ident);
	return _39637_ok;
}



inline jule::Bool _1a8dc912c_TypeCompatibilityChecker::_method_check(void) {
	jule::Bool _40126_ok = jule::Bool();
	if ((!(jule::real((*this)._field_src)))) {
		_40126_ok = false;
		return _40126_ok;
	}
	if ((*this)._field_dest->_field_variadic != (*this)._field_src->_field_variadic) {
		_40126_ok = false;
		return _40126_ok;
	} else if ((*this)._field_dest->_field_variadic) {
		(*this)._field_ignore_any=true;
	}
	if (jule::real((*this)._field_dest->_method_ref())) {
		_40126_ok = (*this)._method_check_ref();
		return _40126_ok;
	}
	if ((!((*this)._field_sub_check)) && jule::real((*this)._field_src->_method_ref())) {
		(*this)._field_src=(*this)._field_src->_method_ref()->_field_elem;
	}
	{
		if (!(((*this)._field_dest->_method_cpp_linked()))) { goto _case_end_4441725776; }
		_case_begin_4441725776:;
		{
			_40126_ok = (*this)._method_check_cpp_linked();
			return _40126_ok;
		}
		goto _match_end_4441724368;
		_case_end_4441725776:;
		if (!((jule::real((*this)._field_dest->_method_prim())))) { goto _case_end_4441725344; }
		_case_begin_4441725344:;
		{
			_40126_ok = (*this)._method_check_prim();
			return _40126_ok;
		}
		goto _match_end_4441724368;
		_case_end_4441725344:;
		if (!((jule::real((*this)._field_dest->_method_trt())))) { goto _case_end_4441725456; }
		_case_begin_4441725456:;
		{
			_40126_ok = (*this)._method_check_trait();
			return _40126_ok;
		}
		goto _match_end_4441724368;
		_case_end_4441725456:;
		if (!((jule::real((*this)._field_dest->_method_ptr())))) { goto _case_end_4441725568; }
		_case_begin_4441725568:;
		{
			_40126_ok = (*this)._method_check_ptr();
			return _40126_ok;
		}
		goto _match_end_4441724368;
		_case_end_4441725568:;
		if (!((jule::real((*this)._field_dest->_method_slc())))) { goto _case_end_4441724672; }
		_case_begin_4441724672:;
		{
			_40126_ok = (*this)._method_check_slc();
			return _40126_ok;
		}
		goto _match_end_4441724368;
		_case_end_4441724672:;
		if (!((jule::real((*this)._field_dest->_method_arr())))) { goto _case_end_4441724784; }
		_case_begin_4441724784:;
		{
			_40126_ok = (*this)._method_check_arr();
			return _40126_ok;
		}
		goto _match_end_4441724368;
		_case_end_4441724784:;
		if (!((jule::real((*this)._field_dest->_method_map())))) { goto _case_end_4441724896; }
		_case_begin_4441724896:;
		{
			_40126_ok = (*this)._method_check_map();
			return _40126_ok;
		}
		goto _match_end_4441724368;
		_case_end_4441724896:;
		if (!((jule::real((*this)._field_dest->_method_enm())))) { goto _case_end_4441726032; }
		_case_begin_4441726032:;
		{
			_40126_ok = (*this)._method_check_enum();
			return _40126_ok;
		}
		goto _match_end_4441724368;
		_case_end_4441726032:;
		if (!((jule::real((*this)._field_dest->_method_strct())))) { goto _case_end_4441726144; }
		_case_begin_4441726144:;
		{
			_40126_ok = (*this)._method_check_struct();
			return _40126_ok;
		}
		goto _match_end_4441724368;
		_case_end_4441726144:;
		if (!((jule::real((*this)._field_dest->_method_fnc())))) { goto _case_end_4441726256; }
		_case_begin_4441726256:;
		{
			_40126_ok = (*this)._method_check_fn();
			return _40126_ok;
		}
		goto _match_end_4441724368;
		_case_end_4441726256:;
		if (!(((*this)._field_dest->_method_nil_compatible()))) { goto _case_end_4441726368; }
		_case_begin_4441726368:;
		{
			_40126_ok = (*this)._field_src->_method_is_nil();
			return _40126_ok;
		}
		goto _match_end_4441724368;
		_case_end_4441726368:;
		_case_begin_4441719280:;
		{
			_40126_ok = false;
			return _40126_ok;
		}
		goto _match_end_4441724368;
		_case_end_4441719280:;
		_match_end_4441724368:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1a8dc912c_TypeCompatibilityChecker &_Src) {
	_Stream << "TypeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "ignore_any:" << _Src._field_ignore_any << ", ";
	_Stream << "deref:" << _Src._field_deref << ", ";
	_Stream << "sub_check:" << _Src._field_sub_check;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b55d918d_is_surrogate(jule::I32 _6021_r) {
	return (55296LL <= _6021_r) && (_6021_r < 57344LL);
}



inline jule::I32 _1b55d918d_decode_rune(jule::I32 _6720_r1,jule::I32 _6730_r2) {
	if ((((55296LL <= _6720_r1) && (_6720_r1 < 56320LL)) && (56320LL <= _6730_r2)) && (_6730_r2 < 57344LL)) {
		return static_cast<jule::I32>((((_6720_r1 - 55296LL) << 10LL) | (_6730_r2 - 56320LL)) + 65536LL);
	}
	return 65533LL;
}



inline std::tuple<jule::I32,jule::I32> _1b55d918d_encode_rune(jule::I32 _7724_r) {
	jule::I32 _7735_r1 = jule::I32();
	jule::I32 _7745_r2 = jule::I32();
	if ((_7724_r < 65536LL) || (_7724_r > 1114111LL)) {
		_7735_r1 = 65533LL;
		_7745_r2 = 65533LL;
		return std::make_tuple(_7735_r1,_7745_r2);
	}
	_7724_r-=65536LL;
	_7735_r1 = static_cast<jule::I32>(55296LL + ((_7724_r >> 10LL) & 1023LL));
	_7745_r2 = static_cast<jule::I32>(56320LL + (_7724_r & 1023LL));
	return std::make_tuple(_7735_r1,_7745_r2);
}



inline jule::Slice<jule::U16> _1b55d918d_encode(jule::Slice<jule::I32> _8615_s) {
	jule::I64 _8713_n = _8615_s.len();
	{
		auto _range_expr = _8615_s;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::I32 _1b55d918d_v = *_range_begin;
			_iter_begin_4418403248:;
			{
				if (_1b55d918d_v >= 65536LL) {
					(_8713_n)++;
				}
			}
			_iter_next_4418403248:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b55d918d_v = *_range_begin; goto _iter_begin_4418403248; }
			_iter_end_4418403248:;
		}
	}
	jule::Slice<jule::U16> _9413_a = jule::Slice<jule::U16>::alloc(static_cast<jule::Int>(_8713_n));
	_8713_n=0LL;
	{
		auto _range_expr = _8615_s;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::I32 _1b55d918d_v = *_range_begin;
			_iter_begin_4418434416:;
			{
				{
					if (!(((0LL <= _1b55d918d_v) && (_1b55d918d_v < 55296LL)) || ((57344LL <= _1b55d918d_v) && (_1b55d918d_v < 65536LL)))) { goto _case_end_4417789008; }
					_case_begin_4417789008:;
					{
						_9413_a[static_cast<jule::Int>(_8713_n)]=static_cast<jule::U16>(_1b55d918d_v);
						(_8713_n)++;
					}
					goto _match_end_4419877376;
					_case_end_4417789008:;
					if (!(((65536LL <= _1b55d918d_v) && (_1b55d918d_v <= 1114111LL)))) { goto _case_end_4418125280; }
					_case_begin_4418125280:;
					{
						jule::I32 _10418_r1;
						jule::I32 _10422_r2;
						std::tie(_10418_r1,_10422_r2) = _1b55d918d_encode_rune(_1b55d918d_v);
						_9413_a[static_cast<jule::Int>(_8713_n)]=static_cast<jule::U16>(_10418_r1);
						_9413_a[static_cast<jule::Int>(_8713_n + 1LL)]=static_cast<jule::U16>(_10422_r2);
						_8713_n+=2LL;
					}
					goto _match_end_4419877376;
					_case_end_4418125280:;
					_case_begin_4417805856:;
					{
						_9413_a[static_cast<jule::Int>(_8713_n)]=static_cast<jule::U16>(65533LLU);
						(_8713_n)++;
					}
					goto _match_end_4419877376;
					_case_end_4417805856:;
					_match_end_4419877376:;
				}
			}
			_iter_next_4418434416:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b55d918d_v = *_range_begin; goto _iter_begin_4418434416; }
			_iter_end_4418434416:;
		}
	}
	return _9413_a.slice(0LL,static_cast<jule::Int>(_8713_n));
}



inline jule::Slice<jule::I32> _1b55d918d_decode(jule::Slice<jule::U16> _11815_s) {
	jule::Slice<jule::I32> _11913_a = jule::Slice<jule::I32>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_11815_s.len())));
	jule::Int _12013_n = 0LL;
	jule::Int _12113_i = 0LL;
	_iter_begin_4419165792:;
	if (!(_12113_i < _11815_s.len())) { goto _iter_end_4419165792; }
	{
		jule::U16 _12313_r = _11815_s[static_cast<jule::Int>(_12113_i)];
		{
			if (!((_12313_r < 55296LL) || (57344LL <= _12313_r))) { goto _case_end_4417905920; }
			_case_begin_4417905920:;
			{
				_11913_a[static_cast<jule::Int>(_12013_n)]=static_cast<jule::I32>(_12313_r);
			}
			goto _match_end_4419242000;
			_case_end_4417905920:;
			if (!((((((55296LL <= _12313_r) && (_12313_r < 56320LL)) && ((_12113_i + 1LL) < _11815_s.len())) && (56320LL <= _11815_s[static_cast<jule::Int>(_12113_i + 1LL)])) && (_11815_s[static_cast<jule::Int>(_12113_i + 1LL)] < 57344LL)))) { goto _case_end_4417951504; }
			_case_begin_4417951504:;
			{
				_11913_a[static_cast<jule::Int>(_12013_n)]=static_cast<jule::I32>(_1b55d918d_decode_rune(static_cast<jule::I32>(_12313_r),static_cast<jule::I32>(_11815_s[static_cast<jule::Int>(_12113_i + 1LL)])));
				(_12113_i)++;
			}
			goto _match_end_4419242000;
			_case_end_4417951504:;
			_case_begin_4419280016:;
			{
				_11913_a[static_cast<jule::Int>(_12013_n)]=65533LL;
			}
			goto _match_end_4419242000;
			_case_end_4419280016:;
			_match_end_4419242000:;
		}
		(_12013_n)++;
	}
	_iter_next_4419165792:;
	(_12113_i)++;
	goto _iter_begin_4419165792;
	_iter_end_4419165792:;
	return _11913_a.slice(0LL,static_cast<jule::Int>(_12013_n));
}



inline jule::Slice<jule::U16> _1b55d918d_append_rune(jule::Slice<jule::U16> _14524_a,jule::I32 _14534_r) {
	{
		if (!(((0LL <= _14534_r) && (_14534_r < 55296LL)) || ((57344LL <= _14534_r) && (_14534_r < 65536LL)))) { goto _case_end_4419330336; }
		_case_begin_4419330336:;
		{
			return jule::append(_14524_a,jule::Slice<jule::U16>({static_cast<jule::U16>(_14534_r)}));
		}
		goto _match_end_4419294320;
		_case_end_4419330336:;
		if (!(((65536LL <= _14534_r) && (_14534_r <= 1114111LL)))) { goto _case_end_4419409664; }
		_case_begin_4419409664:;
		{
			jule::I32 _15214_r1;
			jule::I32 _15218_r2;
			std::tie(_15214_r1,_15218_r2) = _1b55d918d_encode_rune(_14534_r);
			return jule::append(_14524_a,jule::Slice<jule::U16>({static_cast<jule::U16>(_15214_r1),static_cast<jule::U16>(_15218_r2)}));
		}
		goto _match_end_4419294320;
		_case_end_4419409664:;
		_match_end_4419294320:;
	}
	return jule::append(_14524_a,jule::Slice<jule::U16>({65533LLU}));
}



inline void* _1cdd8d41d_malloc(jule::Uint _2215_size) {
	return malloc(_2215_size);
}



inline void* _1cdd8d41d_calloc(jule::Uint _2915_size,jule::Uint _2927_n) {
	return calloc(_2915_size,_2927_n);
}



inline void* _1cdd8d41d_realloc(void* _3727_ptr,jule::Uint _3741_size) {
	return realloc(_3727_ptr,_3741_size);
}



inline void _1cdd8d41d_free(void* _4524_ptr) {
	free(_4524_ptr);
}























inline jule::Str _1cde2d667_type_id(jule::Any _11316_a) {
	if (_11316_a == nullptr) {
		return jule::Str("", 0);
	}
	return __jule_type_id_of_any(_11316_a);
}



inline jule::Slice<jule::U16> _1cde2d8dc_utf16_from_str(jule::Str _1523_s) {
	
	jule::Slice<jule::I32> _219_runes = static_cast<jule::Slice<jule::I32>>(_1523_s);
	jule::Slice<jule::U16> _2213_buff = jule::Slice<jule::U16>::alloc(0LL,static_cast<jule::Int>(static_cast<jule::I64>(_219_runes.len())));
	{
		auto _range_expr = _219_runes;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::I32 _1cde2d8dc_r = *_range_begin;
			_iter_begin_4417818400:;
			{
				if (_1cde2d8dc_r == 0LL) {
					goto _iter_end_4417818400;
				}
				_2213_buff=_1b55d918d_append_rune(_2213_buff,_1cde2d8dc_r);
			}
			_iter_next_4417818400:;
			++_range_begin;
			if (_range_begin != _range_end) { _1cde2d8dc_r = *_range_begin; goto _iter_begin_4417818400; }
			_iter_end_4417818400:;
		}
	}
	return _1b55d918d_append_rune(_2213_buff,0LL);
}



inline jule::Str _1cde2d8dc_utf16_to_str(jule::Slice<jule::U16> _3521_s) {
	if (_3521_s == nullptr) {
		return jule::Str("", 0);
	}
	jule::Slice<jule::U16> _3913_code_page = (*((&(_3521_s))));
	{
		auto _range_expr = _3521_s;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1cde2d8dc_i = 0;
			jule::U16 _1cde2d8dc_v = *_range_begin;
			_iter_begin_4418579744:;
			{
				if (_1cde2d8dc_v == 0LL) {
					_3913_code_page=_3913_code_page.slice(0LL,static_cast<jule::Int>(_1cde2d8dc_i));
					goto _iter_end_4418579744;
				}
			}
			_iter_next_4418579744:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1cde2d8dc_i; _1cde2d8dc_v = *_range_begin; goto _iter_begin_4418579744; }
			_iter_end_4418579744:;
		}
	}
	return static_cast<jule::Str>(_1b55d918d_decode(_3913_code_page));
}



inline jule::Str _1cde2d8dc_u16_ptr_to_str(jule::U16* _5130_s) {
	if (_5130_s == nullptr) {
		return jule::Str("", 0);
	}
	jule::Slice<jule::U16> _5613_code_page = nullptr;
	jule::Int _5713_i = 0LL;
	_iter_begin_4419632464:;
	{
		jule::U16 _5913_r = _5130_s[static_cast<jule::Int>(_5713_i)];
		if (_5913_r == 0LL) {
			return static_cast<jule::Str>(_1b55d918d_decode(_5613_code_page));
		}
		_5613_code_page=jule::append(_5613_code_page,jule::Slice<jule::U16>({_5913_r}));
	}
	_iter_next_4419632464:;
	(_5713_i)++;
	goto _iter_begin_4419632464;
	_iter_end_4419632464:;
	return jule::Str("", 0);
}



inline jule::Str _1cde2d8dc_byte_ptr_to_str(jule::U8* _7031_s) {
	if (_7031_s == nullptr) {
		return jule::Str("", 0);
	}
	return __jule_str_from_byte_ptr(_7031_s);
}



inline jule::Int _1cde2d9a8_puts(jule::Str _913_s) {
	return static_cast<signed>(static_cast<signed>(puts(((char*)((&(_913_s[0LL])))))));
}



inline jule::Int _1cdd76a22_get_last_errno(void) {
	return errno;
}



inline jule::Int _1cdd8e298_stat(jule::U8* _4620_path,struct stat* _4637_stat) {
	return static_cast<jule::Int>(__jule_stat(((char*)(_4620_path)),_4637_stat));
}



inline jule::Int _1cdd8e298_open(jule::U8* _5120_path,jule::Int _5133_flag,jule::Int _5144_mode) {
	return static_cast<jule::Int>(open(((char*)(_5120_path)),_5133_flag,_5144_mode));
}



inline jule::U8* _1cdd8e298_getcwd(jule::U8* _5722_buff,jule::Uint _5735_bufflen) {
	return ((jule::U8*)(getcwd(((char*)(_5722_buff)),_5735_bufflen)));
}



inline DIR* _1cdd8e298_opendir(jule::U8* _6223_path) {
	return opendir(((char*)(_6223_path)));
}



inline struct dirent* _1cdd8e298_readdir(DIR* _6527_dir) {
	return readdir(_6527_dir);
}



inline jule::Int _1cdd8e298_closedir(DIR* _6828_dir) {
	return static_cast<jule::Int>(closedir(_6828_dir));
}



inline jule::Int _1cdd8e298_chdir(jule::U8* _7121_path) {
	return static_cast<jule::Int>(chdir(((char*)(_7121_path))));
}



inline jule::Int _1cdd8e298_remove(jule::U8* _7422_path) {
	return static_cast<jule::Int>(remove(((char*)(_7422_path))));
}



inline jule::Int _1cdd8e298_mkdir(jule::U8* _7721_path,jule::Int _7734_mode) {
	return static_cast<jule::Int>(mkdir(((char*)(_7721_path)),_7734_mode));
}



inline jule::Int _1cdd8e298_rmdir(jule::U8* _8221_path) {
	return static_cast<jule::Int>(rmdir(((char*)(_8221_path))));
}



inline jule::Int _1cdd8e298_unlink(jule::U8* _8522_path) {
	return static_cast<jule::Int>(unlink(((char*)(_8522_path))));
}



inline jule::I64 _1cde0376e_seek(jule::Int _2613_handle,jule::I64 _2626_offset,jule::Int _2639_origin) {
	return static_cast<jule::I64>(lseek(_2613_handle,_2626_offset,_2639_origin));
}



inline jule::Int _1cde0376e_read(jule::Int _3120_handle,void* _3137_buff,jule::Uint _3152_n) {
	return static_cast<jule::Int>(read(_3120_handle,_3137_buff,_3152_n));
}



inline jule::Int _1cde0376e_close(jule::Int _3614_handle) {
	return static_cast<jule::Int>(close(_3614_handle));
}



inline jule::Int _1cde0376e_write(jule::Int _3921_handle,void* _3934_buff,jule::Uint _3949_n) {
	return static_cast<jule::Int>(write(_3921_handle,_3934_buff,_3949_n));
}



inline void _1cde0376e_exit(jule::Int _4413_code) {
	exit(_4413_code);
}



inline jule::Int _1cdd70a3d_get_last_os_error(void) {
	jule::Int _319_err = _1cdd76a22_get_last_errno();
	{
		auto _match_expr{ _319_err };
		if (!((13LL) == _match_expr)) { goto _case_end_4420483712; }
		_case_begin_4420483712:;
		{
			return 1LLU;
		}
		goto _match_end_4420482208;
		_case_end_4420483712:;
		if (!((5LL) == _match_expr)) { goto _case_end_4420483824; }
		_case_begin_4420483824:;
		{
			return 2LLU;
		}
		goto _match_end_4420482208;
		_case_end_4420483824:;
		if (!((40LL) == _match_expr)) { goto _case_end_4420483936; }
		_case_begin_4420483936:;
		{
			return 3LLU;
		}
		goto _match_end_4420482208;
		_case_end_4420483936:;
		if (!((36LL) == _match_expr)) { goto _case_end_4420482992; }
		_case_begin_4420482992:;
		{
			return 4LLU;
		}
		goto _match_end_4420482208;
		_case_end_4420482992:;
		if (!((2LL) == _match_expr)) { goto _case_end_4420483104; }
		_case_begin_4420483104:;
		{
			return 5LLU;
		}
		goto _match_end_4420482208;
		_case_end_4420483104:;
		if (!((20LL) == _match_expr)) { goto _case_end_4420483216; }
		_case_begin_4420483216:;
		{
			return 6LLU;
		}
		goto _match_end_4420482208;
		_case_end_4420483216:;
		if (!((12LL) == _match_expr)) { goto _case_end_4420484320; }
		_case_begin_4420484320:;
		{
			return 7LLU;
		}
		goto _match_end_4420482208;
		_case_end_4420484320:;
		_case_begin_4420482544:;
		{
			return 0LLU;
		}
		goto _match_end_4420482208;
		_case_end_4420482544:;
		_match_end_4420482208:;
	}
}



inline std::tuple<jule::Str,jule::Int> _1cdd79b13_working_dir(void) {
	jule::Str _3410_p;
	jule::Int _3413_err;
	std::tie(_3410_p,_3413_err) = _1cdd71742___getwd();
	return std::make_tuple(_3410_p,_3413_err);
}



inline jule::Int _1cdd79b13_set_working_dir(jule::Str _4324_path) {
	if (_4324_path == jule::Str("", 0)) {
		return 6LLU;
	}
	return _1cdd71742___chdir(_4324_path);
}



inline void _1cdd79b13_init(void) {
	{
		(*((&(_1cdd79b13_ARGS))))=jule::command_line_args;
		(*((&(_1cdd79b13_ENV))))=jule::environment_variables;
	}
}



inline std::tuple<jule::Str,jule::Int> _1cdd71742___getwd(void) {
	jule::U8* _1113_buff = _1cdd8e298_getcwd(nullptr,0LLU);
	if (_1113_buff == nullptr) {
		return std::make_tuple(jule::Str("", 0),_1cdd70a3d_get_last_os_error());
	}
	jule::Str _159_pwd = _1cde2d8dc_byte_ptr_to_str(_1113_buff);
	{
		_1cdd8d41d_free(_1113_buff);
	}
	return std::make_tuple(_159_pwd,0LLU);
}



inline jule::Int _1cdd71742___chdir(jule::Str _2212_path) {
	if (_1cdd8e298_chdir((&(_2212_path[0LL]))) == 0LL) {
		return 0LLU;
	}
	return _1cdd70a3d_get_last_os_error();
}



inline jule::Str _1cdd187e9_clean(jule::Str _10718_path) {
	jule::Str _1089_original_path = _10718_path;
	jule::Int _1099_vol_len = _1cdd112b4_volume_name_len(_10718_path);
	_10718_path=_10718_path.slice(static_cast<jule::Int>(_1099_vol_len));
	if (_10718_path == jule::Str("", 0)) {
		if (((_1099_vol_len > 1LL) && _1cdd112b4_is_path_sep(_1089_original_path[0LL])) && _1cdd112b4_is_path_sep(_1089_original_path[1LL])) {
			return _1cdd187e9_from_slash(_1089_original_path);
		}
		return _1089_original_path + jule::Str(".", 1);
	}
	jule::Bool _1189_rooted = _1cdd112b4_is_path_sep(_10718_path[0LL]);
	jule::I64 _1259_n = _10718_path.len();
	_1cdd187e9_LazyBuff _12613_out = _1cdd187e9_LazyBuff(_10718_path,jule::Slice<jule::U8>(),jule::Int(),_1089_original_path,_1099_vol_len);
	jule::Int _13114_r = 0LL;
	jule::Int _13121_dotdot = 0LL;
	std::tie(_13114_r,_13121_dotdot) = std::make_tuple(0LL,0LL);
	if (_1189_rooted) {
		_12613_out._method_append(47LLU);
		std::tie(_13114_r,_13121_dotdot) = std::make_tuple(1LL,1LL);
	}
	_iter_begin_4420550944:;
	if (!(_13114_r < _1259_n)) { goto _iter_end_4420550944; }
	{
		{
			if (!((_1cdd112b4_is_path_sep(_10718_path[static_cast<jule::Int>(_13114_r)])))) { goto _case_end_4420568496; }
			_case_begin_4420568496:;
			{
				(_13114_r)++;
			}
			goto _match_end_4420552048;
			_case_end_4420568496:;
			if (!(((_10718_path[static_cast<jule::Int>(_13114_r)] == '.') && (((_13114_r + 1LL) == _1259_n) || _1cdd112b4_is_path_sep(_10718_path[static_cast<jule::Int>(_13114_r + 1LL)]))))) { goto _case_end_4420565408; }
			_case_begin_4420565408:;
			{
				(_13114_r)++;
			}
			goto _match_end_4420552048;
			_case_end_4420565408:;
			if (!((((_10718_path[static_cast<jule::Int>(_13114_r)] == '.') && (_10718_path[static_cast<jule::Int>(_13114_r + 1LL)] == '.')) && (((_13114_r + 2LL) == _1259_n) || _1cdd112b4_is_path_sep(_10718_path[static_cast<jule::Int>(_13114_r + 2LL)]))))) { goto _case_end_4420552544; }
			_case_begin_4420552544:;
			{
				_13114_r+=2LL;
				{
					if (!((_12613_out._field_w > _13121_dotdot))) { goto _case_end_4420577104; }
					_case_begin_4420577104:;
					{
						(_12613_out._field_w)--;
						_iter_begin_4420580816:;
						if (!((_12613_out._field_w > _13121_dotdot) && (!(_1cdd112b4_is_path_sep(static_cast<jule::U8>(_12613_out._method_index(_12613_out._field_w))))))) { goto _iter_end_4420580816; }
						{
							(_12613_out._field_w)--;
						}
						_iter_next_4420580816:;
						goto _iter_begin_4420580816;
						_iter_end_4420580816:;
					}
					goto _match_end_4420577008;
					_case_end_4420577104:;
					if (!(((!(_1189_rooted))))) { goto _case_end_4420579552; }
					_case_begin_4420579552:;
					{
						if (_12613_out._field_w > 0LL) {
							_12613_out._method_append(47LLU);
						}
						_12613_out._method_append('.');
						_12613_out._method_append('.');
						_13121_dotdot=_12613_out._field_w;
					}
					goto _match_end_4420577008;
					_case_end_4420579552:;
					_match_end_4420577008:;
				}
			}
			goto _match_end_4420552048;
			_case_end_4420552544:;
			_case_begin_4420552240:;
			{
				if ((_1189_rooted && (_12613_out._field_w != 1LL)) || ((!(_1189_rooted)) && (_12613_out._field_w != 0LL))) {
					_12613_out._method_append(47LLU);
				}
				if (((false && (_12613_out._field_w == 0LL)) && (_12613_out._field_vol_len == 0LL)) && (_13114_r != 0LL)) {
					jule::Int _17425_i = _13114_r;
					_iter_begin_4420557488:;
					if (!((_17425_i < _1259_n) && (!(_1cdd112b4_is_path_sep(_10718_path[static_cast<jule::Int>(_17425_i)]))))) { goto _iter_end_4420557488; }
					{
						if (_10718_path[static_cast<jule::Int>(_17425_i)] == ':') {
							_12613_out._method_append('.');
							_12613_out._method_append(47LLU);
							goto _iter_end_4420557488;
						}
					}
					_iter_next_4420557488:;
					(_17425_i)++;
					goto _iter_begin_4420557488;
					_iter_end_4420557488:;
				}
				_iter_begin_4420563680:;
				if (!((_13114_r < _1259_n) && (!(_1cdd112b4_is_path_sep(_10718_path[static_cast<jule::Int>(_13114_r)]))))) { goto _iter_end_4420563680; }
				{
					_12613_out._method_append(_10718_path[static_cast<jule::Int>(_13114_r)]);
				}
				_iter_next_4420563680:;
				(_13114_r)++;
				goto _iter_begin_4420563680;
				_iter_end_4420563680:;
			}
			goto _match_end_4420552048;
			_case_end_4420552240:;
			_match_end_4420552048:;
		}
	}
	_iter_next_4420550944:;
	goto _iter_begin_4420550944;
	_iter_end_4420550944:;
	if (_12613_out._field_w == 0LL) {
		_12613_out._method_append('.');
	}
	return _1cdd187e9_from_slash(_12613_out._method_string());
}



inline jule::Str _1cdd187e9_to_slash(jule::Str _20017_path) {
	if (true) {
		return _20017_path;
	}
	return _20017_path.replace(static_cast<jule::Str>(47LL),jule::Str("/", 1),-1LL);
}



inline jule::Str _1cdd187e9_from_slash(jule::Str _21019_path) {
	if (true) {
		return _21019_path;
	}
	return _21019_path.replace(jule::Str("/", 1),static_cast<jule::Str>(47LL),-1LL);
}



inline jule::Str _1cdd187e9_join(jule::Slice<jule::Str> _22413_elem) {
	return _1cdd112b4___join(_22413_elem);
}



inline jule::Str _1cdd187e9_ext(jule::Str _22912_path) {
	jule::I64 _23013_i = _22912_path.len() - 1LL;
	_iter_begin_4420594880:;
	if (!((_23013_i >= 0LL) && (!(_1cdd112b4_is_path_sep(_22912_path[static_cast<jule::Int>(_23013_i)]))))) { goto _iter_end_4420594880; }
	{
		if (_22912_path[static_cast<jule::Int>(_23013_i)] == '.') {
			return _22912_path.slice(static_cast<jule::Int>(_23013_i));
		}
	}
	_iter_next_4420594880:;
	(_23013_i)--;
	goto _iter_begin_4420594880;
	_iter_end_4420594880:;
	return jule::Str("", 0);
}



inline std::tuple<jule::Str,jule::Bool> _1cdd187e9_abs(jule::Str _24412_path) {
	jule::Str _24510_abs_path;
	jule::Bool _24520_ok;
	std::tie(_24510_abs_path,_24520_ok) = _1cdd112b4___abs(_24412_path);
	return std::make_tuple(_24510_abs_path,_24520_ok);
}



inline jule::Str _1cdd187e9_base(jule::Str _25317_path) {
	if (_25317_path == jule::Str("", 0)) {
		return jule::Str(".", 1);
	}
	_iter_begin_4420611392:;
	if (!((_25317_path.len() > 0LL) && _1cdd112b4_is_path_sep(_25317_path[static_cast<jule::Int>(_25317_path.len() - 1LL)]))) { goto _iter_end_4420611392; }
	{
		_25317_path=_25317_path.slice(0LL,static_cast<jule::Int>(_25317_path.len() - 1LL));
	}
	_iter_next_4420611392:;
	goto _iter_begin_4420611392;
	_iter_end_4420611392:;
	_25317_path=_25317_path.slice(static_cast<jule::Int>(_1cdd187e9_volume_name(_25317_path).len()));
	jule::I64 _26413_i = _25317_path.len() - 1LL;
	_iter_begin_4420610176:;
	if (!((_26413_i >= 0LL) && (!(_1cdd112b4_is_path_sep(_25317_path[static_cast<jule::Int>(_26413_i)]))))) { goto _iter_end_4420610176; }
	{
		(_26413_i)--;
	}
	_iter_next_4420610176:;
	goto _iter_begin_4420610176;
	_iter_end_4420610176:;
	if (_26413_i >= 0LL) {
		_25317_path=_25317_path.slice(static_cast<jule::Int>(_26413_i + 1LL));
	}
	if (_25317_path == jule::Str("", 0)) {
		return static_cast<jule::Str>(47LL);
	}
	return _25317_path;
}



inline jule::Str _1cdd187e9_dir(jule::Str _28412_path) {
	jule::Str _2859_vol = _1cdd187e9_volume_name(_28412_path);
	jule::I64 _28613_i = _28412_path.len() - 1LL;
	_iter_begin_4420622912:;
	if (!((_28613_i >= _2859_vol.len()) && (!(_1cdd112b4_is_path_sep(_28412_path[static_cast<jule::Int>(_28613_i)]))))) { goto _iter_end_4420622912; }
	{
		(_28613_i)--;
	}
	_iter_next_4420622912:;
	goto _iter_begin_4420622912;
	_iter_end_4420622912:;
	jule::Str _2909_dir = _1cdd187e9_clean(_28412_path.slice(static_cast<jule::Int>(_2859_vol.len()),static_cast<jule::Int>(_28613_i + 1LL)));
	if ((_2909_dir == jule::Str(".", 1)) && (_2859_vol.len() > 2LL)) {
		return _2859_vol;
	}
	return _2859_vol + _2909_dir;
}



inline jule::Str _1cdd187e9_volume_name(jule::Str _30220_path) {
	return _1cdd187e9_from_slash(_30220_path.slice(0LL,static_cast<jule::Int>(_1cdd112b4_volume_name_len(_30220_path))));
}



inline jule::Bool _1cdd112b4_is_path_sep(jule::U8 _4720_c) {
	return 47LL == _4720_c;
}



inline jule::Bool _1cdd112b4_is_abs(jule::Str _5215_path) {
	return _5215_path.has_prefix(jule::Str("/", 1));
}



inline jule::Int _1cdd112b4_volume_name_len(jule::Str _5620_path) {
	return 0LL;
}



inline std::tuple<jule::Str,jule::Bool> _1cdd112b4___abs(jule::Str _5810_path) {
	jule::Bool _5828_ok = jule::Bool();
	if (_1cdd112b4_is_abs(_5810_path)) {
		_5828_ok = true;
		return std::make_tuple(_1cdd187e9_clean(_5810_path),_5828_ok);
	}
	jule::Str _6210_wd;
	jule::Int _6214_err;
	std::tie(_6210_wd,_6214_err) = _1cdd79b13_working_dir();
	if (_6214_err != 0LLU) {
		_5828_ok = false;
		return std::make_tuple(jule::Str("", 0),_5828_ok);
	}
	_5828_ok = true;
	return std::make_tuple(_1cdd112b4___join(jule::Slice<jule::Str>({_6210_wd,_5810_path})),_5828_ok);
}



inline jule::Str _1cdd112b4_str_join(jule::Slice<jule::Str> _6913_elems,jule::Str _6927_sep) {
	{
		auto _match_expr{ _6913_elems.len() };
		if (!((0LL) == _match_expr)) { goto _case_end_4420648192; }
		_case_begin_4420648192:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4420647424;
		_case_end_4420648192:;
		if (!((1LL) == _match_expr)) { goto _case_end_4420648304; }
		_case_begin_4420648304:;
		{
			return _6913_elems[0LL];
		}
		goto _match_end_4420647424;
		_case_end_4420648304:;
		_match_end_4420647424:;
	}
	jule::Str _7513_s = _6913_elems[0LL];
	{
		auto _range_expr = _6913_elems.slice(1LL);
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _1cdd112b4_elem = *_range_begin;
			_iter_begin_4420652208:;
			{
				_7513_s+=_6927_sep + _1cdd112b4_elem;
			}
			_iter_next_4420652208:;
			++_range_begin;
			if (_range_begin != _range_end) { _1cdd112b4_elem = *_range_begin; goto _iter_begin_4420652208; }
			_iter_end_4420652208:;
		}
	}
	return _7513_s;
}



inline jule::Str _1cdd112b4___join(jule::Slice<jule::Str> _8211_elem) {
	{
		auto _range_expr = _8211_elem;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1cdd112b4_i = 0;
			jule::Str _1cdd112b4_e = *_range_begin;
			_iter_begin_4420653616:;
			{
				if (_1cdd112b4_e != jule::Str("", 0)) {
					return _1cdd187e9_clean(_1cdd112b4_str_join(_8211_elem.slice(static_cast<jule::Int>(_1cdd112b4_i)),static_cast<jule::Str>(47LL)));
				}
			}
			_iter_next_4420653616:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1cdd112b4_i; _1cdd112b4_e = *_range_begin; goto _iter_begin_4420653616; }
			_iter_end_4420653616:;
		}
	}
	return jule::Str("", 0);
}



inline void _1cdd2665e_exit(jule::Int _1213_code) {
	_1cde0376e_exit(_1213_code);
}



inline jule::Str _1cdd2665e_executable(void) {
	return jule::executable();
}



inline jule::Bool _1cdee4c4a_is_std_header_path(jule::Str _2627_p) {
	return (_2627_p[0LL] == '<') && (_2627_p[static_cast<jule::Int>(_2627_p.len() - 1LL)] == '>');
}



inline jule::Bool _1cdee4c4a_is_valid_header_ext(jule::Str _3128_ext) {
	{
		auto _range_expr = _1cdee4c4a_CPP_HEADER_EXTS;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _1cdee4c4a_valid_ext = *_range_begin;
			_iter_begin_4420862848:;
			{
				if (_3128_ext == _1cdee4c4a_valid_ext) {
					return true;
				}
			}
			_iter_next_4420862848:;
			++_range_begin;
			if (_range_begin != _range_end) { _1cdee4c4a_valid_ext = *_range_begin; goto _iter_begin_4420862848; }
			_iter_end_4420862848:;
		}
	}
	return false;
}



inline jule::Bool _1cdee4c4a_is_valid_cpp_ext(jule::Str _4225_ext) {
	{
		auto _range_expr = _1cdee4c4a_CPP_EXTS;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _1cdee4c4a_e = *_range_begin;
			_iter_begin_4420865888:;
			{
				if (_4225_ext == _1cdee4c4a_e) {
					return true;
				}
			}
			_iter_next_4420865888:;
			++_range_begin;
			if (_range_begin != _range_end) { _1cdee4c4a_e = *_range_begin; goto _iter_begin_4420865888; }
			_iter_end_4420865888:;
		}
	}
	{
		auto _range_expr = _1cdee4c4a_OBJECTIVE_CPP_EXTS;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _1cdee4c4a_e = *_range_begin;
			_iter_begin_4420868976:;
			{
				if (_4225_ext == _1cdee4c4a_e) {
					return true;
				}
			}
			_iter_next_4420868976:;
			++_range_begin;
			if (_range_begin != _range_end) { _1cdee4c4a_e = *_range_begin; goto _iter_begin_4420868976; }
			_iter_end_4420868976:;
		}
	}
	return false;
}



inline jule::Str _1cdeeb191_logf(jule::Str _25813_fmt,jule::Slice<jule::Any> _25826_args) {
	return _1cdeeb191_apply_fmt(_25813_fmt,_25826_args);
}



inline jule::Str _1cdeeb191_arg_to_str(jule::Any _26215_arg) {
	{
		auto _match_expr{ _26215_arg };
		if (!(_match_expr.type_is<jule::Str>())) { goto _case_end_4420873664; }
		_case_begin_4420873664:;
		{
			return _26215_arg.operator jule::Str();
		}
		goto _match_end_4420871568;
		_case_end_4420873664:;
		if (!(_match_expr.type_is<jule::U8>())) { goto _case_end_4420873776; }
		_case_begin_4420873776:;
		{
			return static_cast<jule::Str>(_26215_arg.operator jule::U8());
		}
		goto _match_end_4420871568;
		_case_end_4420873776:;
		if (!(_match_expr.type_is<jule::I32>())) { goto _case_end_4420873888; }
		_case_begin_4420873888:;
		{
			return static_cast<jule::Str>(_26215_arg.operator jule::I32());
		}
		goto _match_end_4420871568;
		_case_end_4420873888:;
		_case_begin_4420871376:;
		{
			return jule::Str("<fmt?>", 6);
		}
		goto _match_end_4420871568;
		_case_end_4420871376:;
		_match_end_4420871568:;
	}
}



inline jule::Int _1cdeeb191_find_next_fmt(jule::Str _27118_fmt) {
	{
		auto _range_expr = _27118_fmt;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1cdeeb191_i = 0;
			jule::U8 _1cdeeb191_b = *_range_begin;
			_iter_begin_4420878128:;
			{
				if (_1cdeeb191_b == '@') {
					return _1cdeeb191_i;
				}
			}
			_iter_next_4420878128:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1cdeeb191_i; _1cdeeb191_b = *_range_begin; goto _iter_begin_4420878128; }
			_iter_end_4420878128:;
		}
	}
	return -1LL;
}



inline jule::Str _1cdeeb191_apply_fmt(jule::Str _28018_fmt,jule::Slice<jule::Any> _28028_args) {
	jule::Str _28113_s = jule::Str("", 0);
	{
		auto _range_expr = _28028_args;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Any _1cdeeb191_arg = *_range_begin;
			_iter_begin_4420883136:;
			{
				jule::Int _28413_i = _1cdeeb191_find_next_fmt(_28018_fmt);
				if (_28413_i == -1LL) {
					goto _iter_end_4420883136;
				}
				_28113_s+=_28018_fmt.slice(0LL,static_cast<jule::Int>(_28413_i));
				_28113_s+=_1cdeeb191_arg_to_str(_1cdeeb191_arg);
				_28018_fmt=_28018_fmt.slice(static_cast<jule::Int>(_28413_i + 1LL));
			}
			_iter_next_4420883136:;
			++_range_begin;
			if (_range_begin != _range_end) { _1cdeeb191_arg = *_range_begin; goto _iter_begin_4420883136; }
			_iter_end_4420883136:;
		}
	}
	_28113_s+=_28018_fmt;
	return _28113_s;
}



inline jule::Bool _1ce0019d2_is_top_directive(jule::Str _3625_directive) {
	return (_3625_directive == jule::Str("pass", 4)) || (_3625_directive == jule::Str("build", 5));
}



inline jule::Bool _1cde73206_is_windows(jule::Str _5119_os) {
	return _5119_os == jule::Str("windows", 7);
}



inline jule::Bool _1cde73206_is_darwin(jule::Str _5318_os) {
	return _5318_os == jule::Str("darwin", 6);
}



inline jule::Bool _1cde73206_is_linux(jule::Str _5517_os) {
	return _5517_os == jule::Str("linux", 5);
}



inline jule::Bool _1cde73206_is_i386(jule::Str _5716_arch) {
	return _5716_arch == jule::Str("i386", 4);
}



inline jule::Bool _1cde73206_is_amd64(jule::Str _5917_arch) {
	return _5917_arch == jule::Str("amd64", 5);
}



inline jule::Bool _1cde73206_is_arm64(jule::Str _6117_arch) {
	return _6117_arch == jule::Str("arm64", 5);
}



inline jule::Bool _1cde73206_is_unix(jule::Str _6316_os) {
	return _1cde73206_is_darwin(_6316_os) || _1cde73206_is_linux(_6316_os);
}



inline jule::Bool _1cde73206_is_32bit(jule::Str _6517_arch) {
	return _1cde73206_is_i386(_6517_arch);
}



inline jule::Bool _1cde73206_is_64bit(jule::Str _6717_arch) {
	return _1cde73206_is_amd64(_6717_arch) || _1cde73206_is_arm64(_6717_arch);
}



inline void _1ce0450b9_exit_err(jule::Str _1613_msg) {
	
	jule::outln(_1613_msg);
	_1cdd2665e_exit(1LL);
}



inline void _1ce0450b9_init(void) {
	jule::Str _2413_path = _1cdd2665e_executable();
	if (_2413_path == jule::Str("", 0)) {
		_1ce0450b9_exit_err(jule::Str("std::jule::build: executable file cannot found", 46));
	}
	jule::Str _2910_pwd;
	jule::Int _2915_err;
	std::tie(_2910_pwd,_2915_err) = _1cdd79b13_working_dir();
	if (_2915_err != 0LLU) {
		_1ce0450b9_exit_err(jule::Str("std::jule::build: working directory path cannot found", 53));
	}
	jule::Str _349_path_exec = _1cdd187e9_dir(_2413_path);
	_2413_path=_1cdd187e9_join(jule::Slice<jule::Str>({_349_path_exec,jule::Str("..", 2)}));
	{
		(*((&(_1ce0450b9_PATH_WD))))=_2910_pwd;
		(*((&(_1ce0450b9_PATH_EXEC))))=_349_path_exec;
		(*((&(_1ce0450b9_PATH_STDLIB))))=_1cdd187e9_join(jule::Slice<jule::Str>({_2413_path,jule::Str("std", 3)}));
		(*((&(_1ce0450b9_PATH_API))))=_1cdd187e9_join(jule::Slice<jule::Str>({_1ce0450b9_PATH_EXEC,jule::Str("..", 2)}));
		(*((&(_1ce0450b9_PATH_API))))=_1cdd187e9_join(jule::Slice<jule::Str>({_1ce0450b9_PATH_API,jule::Str("api", 3)}));
		(*((&(_1ce0450b9_PATH_API))))=_1cdd187e9_join(jule::Slice<jule::Str>({_1ce0450b9_PATH_API,jule::Str("jule.hpp", 8)}));
	}
}



inline jule::Bool _1ce0461b9_is_jule(jule::Str _2316_path) {
	return _1cdd187e9_ext(_2316_path) == jule::Str(".jule", 5);
}



inline jule::Int _1b5e977e8_leading_zeros(jule::Uint _4922_x) {
	return static_cast<jule::Int>(64LL - _1b5e977e8_len(_4922_x));
}



inline jule::Int _1b5e977e8_leading_zeros8(jule::U8 _5223_x) {
	return static_cast<jule::Int>(8LL - _1b5e977e8_len8(_5223_x));
}



inline jule::Int _1b5e977e8_leading_zeros16(jule::U16 _5524_x) {
	return static_cast<jule::Int>(16LL - _1b5e977e8_len16(_5524_x));
}



inline jule::Int _1b5e977e8_leading_zeros32(jule::U32 _5824_x) {
	return static_cast<jule::Int>(32LL - _1b5e977e8_len32(_5824_x));
}



inline jule::Int _1b5e977e8_leading_zeros64(jule::U64 _6124_x) {
	return static_cast<jule::Int>(64LL - _1b5e977e8_len64(_6124_x));
}



inline jule::Int _1b5e977e8_trailing_zeros(jule::Uint _8323_x) {
	if (false) {
		return static_cast<jule::Int>(_1b5e977e8_trailing_zeros32(static_cast<jule::U32>(_8323_x)));
	}
	return static_cast<jule::Int>(_1b5e977e8_trailing_zeros64(static_cast<jule::U64>(_8323_x)));
}



inline jule::Int _1b5e977e8_trailing_zeros8(jule::U8 _9124_x) {
	return static_cast<jule::Int>(jule::Str("\b\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\4\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\5\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\4\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\6\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\4\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\5\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\4\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\a\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\4\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\5\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\4\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\6\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\4\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\5\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\4\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00", 256)[static_cast<jule::Int>(_9124_x)]);
}



inline jule::Int _1b5e977e8_trailing_zeros16(jule::U16 _9625_x) {
	if (_9625_x == 0LL) {
		return 16LL;
	}
	return static_cast<jule::Int>(_1b5e977e8_DE_BRUIJN32_TAB[static_cast<jule::Int>((static_cast<jule::U32>(_9625_x & (-(_9625_x))) * 125613361LL) >> 27LL)]);
}



inline jule::Int _1b5e977e8_trailing_zeros32(jule::U32 _10525_x) {
	if (_10525_x == 0LL) {
		return 32LL;
	}
	return static_cast<jule::Int>(_1b5e977e8_DE_BRUIJN32_TAB[static_cast<jule::Int>(((_10525_x & (-(_10525_x))) * 125613361LL) >> 27LL)]);
}



inline jule::Int _1b5e977e8_trailing_zeros64(jule::U64 _11425_x) {
	if (_11425_x == 0LL) {
		return 64LL;
	}
	return static_cast<jule::Int>(_1b5e977e8_DE_BRUIJN64_TAB[static_cast<jule::Int>(((_11425_x & (-(_11425_x))) * 285870213051353865LL) >> 58LL)]);
}



inline jule::Int _1b5e977e8_ones_count(jule::Uint _14119_x) {
	if (false) {
		return static_cast<jule::Int>(_1b5e977e8_ones_count32(static_cast<jule::U32>(_14119_x)));
	}
	return static_cast<jule::Int>(_1b5e977e8_ones_count64(static_cast<jule::U64>(_14119_x)));
}



inline jule::Int _1b5e977e8_ones_count8(jule::U8 _14920_x) {
	return static_cast<jule::Int>(jule::Str("\x00\1\1\2\1\2\2\3\1\2\2\3\2\3\3\4\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\4\5\5\6\5\6\6\a\5\6\6\a\6\a\a\b", 256)[static_cast<jule::Int>(_14920_x)]);
}



inline jule::Int _1b5e977e8_ones_count16(jule::U16 _15421_x) {
	return static_cast<jule::Int>(jule::Str("\x00\1\1\2\1\2\2\3\1\2\2\3\2\3\3\4\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\4\5\5\6\5\6\6\a\5\6\6\a\6\a\a\b", 256)[static_cast<jule::Int>(_15421_x >> 8LL)] + jule::Str("\x00\1\1\2\1\2\2\3\1\2\2\3\2\3\3\4\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\4\5\5\6\5\6\6\a\5\6\6\a\6\a\a\b", 256)[static_cast<jule::Int>(_15421_x & 255LL)]);
}



inline jule::Int _1b5e977e8_ones_count32(jule::U32 _15921_x) {
	return static_cast<jule::Int>(((jule::Str("\x00\1\1\2\1\2\2\3\1\2\2\3\2\3\3\4\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\4\5\5\6\5\6\6\a\5\6\6\a\6\a\a\b", 256)[static_cast<jule::Int>(_15921_x >> 24LL)] + jule::Str("\x00\1\1\2\1\2\2\3\1\2\2\3\2\3\3\4\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\4\5\5\6\5\6\6\a\5\6\6\a\6\a\a\b", 256)[static_cast<jule::Int>((_15921_x >> 16LL) & 255LL)]) + jule::Str("\x00\1\1\2\1\2\2\3\1\2\2\3\2\3\3\4\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\4\5\5\6\5\6\6\a\5\6\6\a\6\a\a\b", 256)[static_cast<jule::Int>((_15921_x >> 8LL) & 255LL)]) + jule::Str("\x00\1\1\2\1\2\2\3\1\2\2\3\2\3\3\4\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\4\5\5\6\5\6\6\a\5\6\6\a\6\a\a\b", 256)[static_cast<jule::Int>(_15921_x & 255LL)]);
}



inline jule::Int _1b5e977e8_ones_count64(jule::U64 _16425_x) {
	
	_16425_x=static_cast<jule::U64>(((_16425_x >> 1LL) & 6148914691236517205LL) + (_16425_x & 6148914691236517205LL));
	_16425_x=static_cast<jule::U64>(((_16425_x >> 2LL) & 3689348814741910323LL) + (_16425_x & 3689348814741910323LL));
	_16425_x=static_cast<jule::U64>(((_16425_x >> 4LL) + _16425_x) & 1085102592571150095LL);
	_16425_x+=static_cast<jule::U64>(_16425_x >> 8LL);
	_16425_x+=static_cast<jule::U64>(_16425_x >> 16LL);
	_16425_x+=static_cast<jule::U64>(_16425_x >> 32LL);
	return static_cast<jule::Int>(static_cast<jule::Int>(_16425_x) & 127LLU);
}



inline jule::Uint _1b5e977e8_rotate_left(jule::Uint _20020_x,jule::Int _20029_k) {
	if (false) {
		return static_cast<jule::Uint>(_1b5e977e8_rotate_left32(static_cast<jule::U32>(_20020_x),_20029_k));
	}
	return static_cast<jule::Uint>(_1b5e977e8_rotate_left64(static_cast<jule::U64>(_20020_x),_20029_k));
}



inline jule::U8 _1b5e977e8_rotate_left8(jule::U8 _21121_x,jule::Int _21128_k) {
	
	jule::Uint _2139_s = static_cast<jule::Uint>(_21128_k) & 7LL;
	return static_cast<jule::U8>((_21121_x << _2139_s) | (_21121_x >> (8LL - _2139_s)));
}



inline jule::U16 _1b5e977e8_rotate_left16(jule::U16 _22122_x,jule::Int _22130_k) {
	
	jule::Uint _2239_s = static_cast<jule::Uint>(_22130_k) & 15LL;
	return static_cast<jule::U16>((_22122_x << _2239_s) | (_22122_x >> (16LL - _2239_s)));
}



inline jule::U32 _1b5e977e8_rotate_left32(jule::U32 _23122_x,jule::Int _23130_k) {
	
	jule::Uint _2339_s = static_cast<jule::Uint>(_23130_k) & 31LL;
	return static_cast<jule::U32>((_23122_x << _2339_s) | (_23122_x >> (32LL - _2339_s)));
}



inline jule::U64 _1b5e977e8_rotate_left64(jule::U64 _24122_x,jule::Int _24130_k) {
	
	jule::Uint _2439_s = static_cast<jule::Uint>(_24130_k) & 63LL;
	return static_cast<jule::U64>((_24122_x << _2439_s) | (_24122_x >> (64LL - _2439_s)));
}



inline jule::Uint _1b5e977e8_reverse(jule::Uint _25016_x) {
	if (false) {
		return static_cast<jule::Uint>(_1b5e977e8_reverse32(static_cast<jule::U32>(_25016_x)));
	}
	return static_cast<jule::Uint>(_1b5e977e8_reverse64(static_cast<jule::U64>(_25016_x)));
}



inline jule::U8 _1b5e977e8_reverse8(jule::U8 _25817_x) {
	return static_cast<jule::U8>(jule::Str("\x00\302\200@\303\200 \302\240`\303\240\020\302\220P\303\2200\302\260p\303\260\b\302\210H\303\210(\302\250h\303\250\030\302\230X\303\2308\302\270x\303\270\4\302\204D\303\204$\302\244d\303\244\024\302\224T\303\2244\302\264t\303\264\f\302\214L\303\214,\302\254l\303\254\034\302\234\\\303\234<\302\274|\303\274\2\302\202B\303\202\"\302\242b\303\242\022\302\222R\303\2222\302\262r\303\262\n\302\212J\303\212*\302\252j\303\252\032\302\232Z\303\232:\302\272z\303\272\6\302\206F\303\206&\302\246f\303\246\026\302\226V\303\2266\302\266v\303\266\016\302\216N\303\216.\302\256n\303\256\036\302\236^\303\236>\302\276~\303\276\1\302\201A\303\201!\302\241a\303\241\021\302\221Q\303\2211\302\261q\303\261\t\302\211I\303\211)\302\251i\303\251\031\302\231Y\303\2319\302\271y\303\271\5\302\205E\303\205%\302\245e\303\245\025\302\225U\303\2255\302\265u\303\265\r\302\215M\303\215-\302\255m\303\255\035\302\235]\303\235=\302\275}\303\275\3\302\203C\303\203#\302\243c\303\243\023\302\223S\303\2233\302\263s\303\263\v\302\213K\303\213+\302\253k\303\253\033\302\233[\303\233;\302\273{\303\273\a\302\207G\303\207'\302\247g\303\247\027\302\227W\303\2277\302\267w\303\267\017\302\217O\303\217/\302\257o\303\257\037\302\237_\303\237?\302\277\177\303\277", 384)[static_cast<jule::Int>(_25817_x)]);
}



inline jule::U16 _1b5e977e8_reverse16(jule::U16 _26318_x) {
	return static_cast<jule::U16>(static_cast<jule::U16>(jule::Str("\x00\302\200@\303\200 \302\240`\303\240\020\302\220P\303\2200\302\260p\303\260\b\302\210H\303\210(\302\250h\303\250\030\302\230X\303\2308\302\270x\303\270\4\302\204D\303\204$\302\244d\303\244\024\302\224T\303\2244\302\264t\303\264\f\302\214L\303\214,\302\254l\303\254\034\302\234\\\303\234<\302\274|\303\274\2\302\202B\303\202\"\302\242b\303\242\022\302\222R\303\2222\302\262r\303\262\n\302\212J\303\212*\302\252j\303\252\032\302\232Z\303\232:\302\272z\303\272\6\302\206F\303\206&\302\246f\303\246\026\302\226V\303\2266\302\266v\303\266\016\302\216N\303\216.\302\256n\303\256\036\302\236^\303\236>\302\276~\303\276\1\302\201A\303\201!\302\241a\303\241\021\302\221Q\303\2211\302\261q\303\261\t\302\211I\303\211)\302\251i\303\251\031\302\231Y\303\2319\302\271y\303\271\5\302\205E\303\205%\302\245e\303\245\025\302\225U\303\2255\302\265u\303\265\r\302\215M\303\215-\302\255m\303\255\035\302\235]\303\235=\302\275}\303\275\3\302\203C\303\203#\302\243c\303\243\023\302\223S\303\2233\302\263s\303\263\v\302\213K\303\213+\302\253k\303\253\033\302\233[\303\233;\302\273{\303\273\a\302\207G\303\207'\302\247g\303\247\027\302\227W\303\2277\302\267w\303\267\017\302\217O\303\217/\302\257o\303\257\037\302\237_\303\237?\302\277\177\303\277", 384)[static_cast<jule::Int>(_26318_x >> 8LL)]) | (static_cast<jule::U16>(jule::Str("\x00\302\200@\303\200 \302\240`\303\240\020\302\220P\303\2200\302\260p\303\260\b\302\210H\303\210(\302\250h\303\250\030\302\230X\303\2308\302\270x\303\270\4\302\204D\303\204$\302\244d\303\244\024\302\224T\303\2244\302\264t\303\264\f\302\214L\303\214,\302\254l\303\254\034\302\234\\\303\234<\302\274|\303\274\2\302\202B\303\202\"\302\242b\303\242\022\302\222R\303\2222\302\262r\303\262\n\302\212J\303\212*\302\252j\303\252\032\302\232Z\303\232:\302\272z\303\272\6\302\206F\303\206&\302\246f\303\246\026\302\226V\303\2266\302\266v\303\266\016\302\216N\303\216.\302\256n\303\256\036\302\236^\303\236>\302\276~\303\276\1\302\201A\303\201!\302\241a\303\241\021\302\221Q\303\2211\302\261q\303\261\t\302\211I\303\211)\302\251i\303\251\031\302\231Y\303\2319\302\271y\303\271\5\302\205E\303\205%\302\245e\303\245\025\302\225U\303\2255\302\265u\303\265\r\302\215M\303\215-\302\255m\303\255\035\302\235]\303\235=\302\275}\303\275\3\302\203C\303\203#\302\243c\303\243\023\302\223S\303\2233\302\263s\303\263\v\302\213K\303\213+\302\253k\303\253\033\302\233[\303\233;\302\273{\303\273\a\302\207G\303\207'\302\247g\303\247\027\302\227W\303\2277\302\267w\303\267\017\302\217O\303\217/\302\257o\303\257\037\302\237_\303\237?\302\277\177\303\277", 384)[static_cast<jule::Int>(_26318_x & 255LL)]) << 8LL));
}



inline jule::U32 _1b5e977e8_reverse32(jule::U32 _26822_x) {
	
	_26822_x=static_cast<jule::U32>(((_26822_x >> 1LL) & 1431655765LL) | ((_26822_x & 1431655765LL) << 1LL));
	_26822_x=static_cast<jule::U32>(((_26822_x >> 2LL) & 858993459LL) | ((_26822_x & 858993459LL) << 2LL));
	_26822_x=static_cast<jule::U32>(((_26822_x >> 4LL) & 252645135LL) | ((_26822_x & 252645135LL) << 4LL));
	return static_cast<jule::U32>(_1b5e977e8_reverse_bytes32(_26822_x));
}



inline jule::U64 _1b5e977e8_reverse64(jule::U64 _27722_x) {
	
	_27722_x=static_cast<jule::U64>(((_27722_x >> 1LL) & 6148914691236517205LL) | ((_27722_x & 6148914691236517205LL) << 1LL));
	_27722_x=static_cast<jule::U64>(((_27722_x >> 2LL) & 3689348814741910323LL) | ((_27722_x & 3689348814741910323LL) << 2LL));
	_27722_x=static_cast<jule::U64>(((_27722_x >> 4LL) & 1085102592571150095LL) | ((_27722_x & 1085102592571150095LL) << 4LL));
	return static_cast<jule::U64>(_1b5e977e8_reverse_bytes64(_27722_x));
}



inline jule::Uint _1b5e977e8_reverse_bytes(jule::Uint _29022_x) {
	if (false) {
		return static_cast<jule::Uint>(_1b5e977e8_reverse_bytes32(static_cast<jule::U32>(_29022_x)));
	}
	return static_cast<jule::Uint>(_1b5e977e8_reverse_bytes64(static_cast<jule::U64>(_29022_x)));
}



inline jule::U16 _1b5e977e8_reverse_bytes16(jule::U16 _30024_x) {
	return static_cast<jule::U16>((_30024_x >> 8LL) | (_30024_x << 8LL));
}



inline jule::U32 _1b5e977e8_reverse_bytes32(jule::U32 _30728_x) {
	
	_30728_x=static_cast<jule::U32>(((_30728_x >> 8LL) & 16711935LL) | ((_30728_x & 16711935LL) << 8LL));
	return static_cast<jule::U32>((_30728_x >> 16LL) | (_30728_x << 16LL));
}



inline jule::U64 _1b5e977e8_reverse_bytes64(jule::U64 _31628_x) {
	
	_31628_x=static_cast<jule::U64>(((_31628_x >> 8LL) & 71777214294589695LL) | ((_31628_x & 71777214294589695LL) << 8LL));
	_31628_x=static_cast<jule::U64>(((_31628_x >> 16LL) & 281470681808895LL) | ((_31628_x & 281470681808895LL) << 16LL));
	return static_cast<jule::U64>((_31628_x >> 32LL) | (_31628_x << 32LL));
}



inline jule::Int _1b5e977e8_len(jule::Uint _32712_x) {
	if (false) {
		return static_cast<jule::Int>(_1b5e977e8_len32(static_cast<jule::U32>(_32712_x)));
	}
	return static_cast<jule::Int>(_1b5e977e8_len64(static_cast<jule::U64>(_32712_x)));
}



inline jule::Int _1b5e977e8_len8(jule::U8 _33613_x) {
	return static_cast<jule::Int>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::Int>(_33613_x)]);
}



inline jule::Int _1b5e977e8_len16(jule::U16 _34218_x) {
	jule::Int _34228_n = jule::Int();
	if (_34218_x >= 256LL) {
		_34218_x>>=8LL;
		_34228_n=8LL;
	}
	_34228_n = static_cast<jule::Int>(_34228_n + static_cast<jule::Int>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::Int>(_34218_x)]));
	return _34228_n;
}



inline jule::Int _1b5e977e8_len32(jule::U32 _35218_x) {
	jule::Int _35228_n = jule::Int();
	if (_35218_x >= 65536LL) {
		_35218_x>>=16LL;
		_35228_n=16LL;
	}
	if (_35218_x >= 256LL) {
		_35218_x>>=8LL;
		_35228_n+=8LL;
	}
	_35228_n = static_cast<jule::Int>(_35228_n + static_cast<jule::Int>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::Int>(_35218_x)]));
	return _35228_n;
}



inline jule::Int _1b5e977e8_len64(jule::U64 _36618_x) {
	jule::Int _36628_n = jule::Int();
	if (_36618_x >= 4294967296LL) {
		_36618_x>>=32LL;
		_36628_n=32LL;
	}
	if (_36618_x >= 65536LL) {
		_36618_x>>=16LL;
		_36628_n+=16LL;
	}
	if (_36618_x >= 256LL) {
		_36618_x>>=8LL;
		_36628_n+=8LL;
	}
	_36628_n = static_cast<jule::Int>(_36628_n + static_cast<jule::Int>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::Int>(_36618_x)]));
	return _36628_n;
}



inline std::tuple<jule::Uint,jule::Uint> _1b5e977e8_add(jule::Uint _38912_x,jule::Uint _38921_y,jule::Uint _38930_carry) {
	jule::Uint _38945_sum = jule::Uint();
	jule::Uint _38956_carry_out = jule::Uint();
	if (false) {
		jule::U32 _39114_s32;
		jule::U32 _39119_c32;
		std::tie(_39114_s32,_39119_c32) = _1b5e977e8_add32(static_cast<jule::U32>(_38912_x),static_cast<jule::U32>(_38921_y),static_cast<jule::U32>(_38930_carry));
		_38945_sum = static_cast<jule::Uint>(_39114_s32);
		_38956_carry_out = static_cast<jule::Uint>(_39119_c32);
		return std::make_tuple(_38945_sum,_38956_carry_out);
	}
	jule::U64 _39410_s64;
	jule::U64 _39415_c64;
	std::tie(_39410_s64,_39415_c64) = _1b5e977e8_add64(static_cast<jule::U64>(_38912_x),static_cast<jule::U64>(_38921_y),static_cast<jule::U64>(_38930_carry));
	_38945_sum = static_cast<jule::Uint>(_39410_s64);
	_38956_carry_out = static_cast<jule::Uint>(_39415_c64);
	return std::make_tuple(_38945_sum,_38956_carry_out);
}



inline std::tuple<jule::U32,jule::U32> _1b5e977e8_add32(jule::U32 _40314_x,jule::U32 _40322_y,jule::U32 _40330_carry) {
	jule::U32 _40344_sum = jule::U32();
	jule::U32 _40354_carryout = jule::U32();
	jule::U64 _4049_sum64 = (static_cast<jule::U64>(_40314_x) + static_cast<jule::U64>(_40322_y)) + static_cast<jule::U64>(_40330_carry);
	_40344_sum=static_cast<jule::U32>(_4049_sum64);
	_40354_carryout=static_cast<jule::U32>(_4049_sum64 >> 32LL);
	return std::make_tuple(_40344_sum,_40354_carryout);
}



inline std::tuple<jule::U64,jule::U64> _1b5e977e8_add64(jule::U64 _41514_x,jule::U64 _41522_y,jule::U64 _41530_carry) {
	jule::U64 _41544_sum = jule::U64();
	jule::U64 _41554_carryout = jule::U64();
	_41544_sum=static_cast<jule::U64>((_41514_x + _41522_y) + _41530_carry);
	_41554_carryout=static_cast<jule::U64>(((_41514_x & _41522_y) | ((_41514_x | _41522_y) & (~(_41544_sum)))) >> 63LL);
	return std::make_tuple(_41544_sum,_41554_carryout);
}



inline std::tuple<jule::Uint,jule::Uint> _1b5e977e8_sub(jule::Uint _43112_x,jule::Uint _43121_y,jule::Uint _43130_borrow) {
	jule::Uint _43146_diff = jule::Uint();
	jule::Uint _43158_borrow_out = jule::Uint();
	if (false) {
		jule::U32 _43314_d32;
		jule::U32 _43319_b32;
		std::tie(_43314_d32,_43319_b32) = _1b5e977e8_sub32(static_cast<jule::U32>(_43112_x),static_cast<jule::U32>(_43121_y),static_cast<jule::U32>(_43130_borrow));
		_43146_diff = static_cast<jule::Uint>(_43314_d32);
		_43158_borrow_out = static_cast<jule::Uint>(_43319_b32);
		return std::make_tuple(_43146_diff,_43158_borrow_out);
	}
	jule::U64 _43610_d64;
	jule::U64 _43615_b64;
	std::tie(_43610_d64,_43615_b64) = _1b5e977e8_sub64(static_cast<jule::U64>(_43112_x),static_cast<jule::U64>(_43121_y),static_cast<jule::U64>(_43130_borrow));
	_43146_diff = static_cast<jule::Uint>(_43610_d64);
	_43158_borrow_out = static_cast<jule::Uint>(_43615_b64);
	return std::make_tuple(_43146_diff,_43158_borrow_out);
}



inline std::tuple<jule::U32,jule::U32> _1b5e977e8_sub32(jule::U32 _44514_x,jule::U32 _44522_y,jule::U32 _44530_borrow) {
	jule::U32 _44545_diff = jule::U32();
	jule::U32 _44556_borrowout = jule::U32();
	_44545_diff=static_cast<jule::U32>((_44514_x - _44522_y) - _44530_borrow);
	_44556_borrowout=static_cast<jule::U32>((((~(_44514_x)) & _44522_y) | ((~(_44514_x ^ _44522_y)) & _44545_diff)) >> 31LL);
	return std::make_tuple(_44545_diff,_44556_borrowout);
}



inline std::tuple<jule::U64,jule::U64> _1b5e977e8_sub64(jule::U64 _46014_x,jule::U64 _46022_y,jule::U64 _46030_borrow) {
	jule::U64 _46045_diff = jule::U64();
	jule::U64 _46056_borrowout = jule::U64();
	_46045_diff=static_cast<jule::U64>((_46014_x - _46022_y) - _46030_borrow);
	_46056_borrowout=static_cast<jule::U64>((((~(_46014_x)) & _46022_y) | ((~(_46014_x ^ _46022_y)) & _46045_diff)) >> 63LL);
	return std::make_tuple(_46045_diff,_46056_borrowout);
}



inline std::tuple<jule::Uint,jule::Uint> _1b5e977e8_mul(jule::Uint _47412_x,jule::Uint _47421_y) {
	jule::Uint _47432_hi = jule::Uint();
	jule::Uint _47442_lo = jule::Uint();
	if (false) {
		jule::U32 _47614_h;
		jule::U32 _47617_l;
		std::tie(_47614_h,_47617_l) = _1b5e977e8_mul32(static_cast<jule::U32>(_47412_x),static_cast<jule::U32>(_47421_y));
		_47432_hi = static_cast<jule::Uint>(_47614_h);
		_47442_lo = static_cast<jule::Uint>(_47617_l);
		return std::make_tuple(_47432_hi,_47442_lo);
	}
	jule::U64 _47910_h;
	jule::U64 _47913_l;
	std::tie(_47910_h,_47913_l) = _1b5e977e8_mul64(static_cast<jule::U64>(_47412_x),static_cast<jule::U64>(_47421_y));
	_47432_hi = static_cast<jule::Uint>(_47910_h);
	_47442_lo = static_cast<jule::Uint>(_47913_l);
	return std::make_tuple(_47432_hi,_47442_lo);
}



inline std::tuple<jule::U32,jule::U32> _1b5e977e8_mul32(jule::U32 _48814_x,jule::U32 _48822_y) {
	jule::U32 _48832_hi = jule::U32();
	jule::U32 _48841_lo = jule::U32();
	jule::U64 _4899_tmp = static_cast<jule::U64>(_48814_x) * static_cast<jule::U64>(_48822_y);
	std::tie(_48832_hi,_48841_lo) = std::make_tuple(static_cast<jule::U32>(_4899_tmp >> 32LL),static_cast<jule::U32>(_4899_tmp));
	return std::make_tuple(_48832_hi,_48841_lo);
}



inline std::tuple<jule::U64,jule::U64> _1b5e977e8_mul64(jule::U64 _49914_x,jule::U64 _49922_y) {
	jule::U64 _49932_hi = jule::U64();
	jule::U64 _49941_lo = jule::U64();
	
	jule::U64 _5019_x0 = _49914_x & 4294967295LL;
	jule::U64 _5029_x1 = _49914_x >> 32LL;
	jule::U64 _5039_y0 = _49922_y & 4294967295LL;
	jule::U64 _5049_y1 = _49922_y >> 32LL;
	jule::U64 _5059_w0 = _5019_x0 * _5039_y0;
	jule::U64 _5069_t = (_5029_x1 * _5039_y0) + (_5059_w0 >> 32LL);
	jule::U64 _50713_w1 = _5069_t & 4294967295LL;
	jule::U64 _5089_w2 = _5069_t >> 32LL;
	_50713_w1+=static_cast<jule::U64>(_5019_x0 * _5049_y1);
	_49932_hi=static_cast<jule::U64>(((_5029_x1 * _5049_y1) + _5089_w2) + (_50713_w1 >> 32LL));
	_49941_lo=static_cast<jule::U64>(_49914_x * _49922_y);
	return std::make_tuple(_49932_hi,_49941_lo);
}



inline std::tuple<jule::Uint,jule::Uint> _1b5e977e8_div(jule::Uint _52112_hi,jule::Uint _52122_lo,jule::Uint _52132_y) {
	jule::Uint _52143_quo = jule::Uint();
	jule::Uint _52154_rem = jule::Uint();
	if (false) {
		jule::U32 _52314_q;
		jule::U32 _52317_r;
		std::tie(_52314_q,_52317_r) = _1b5e977e8_div32(static_cast<jule::U32>(_52112_hi),static_cast<jule::U32>(_52122_lo),static_cast<jule::U32>(_52132_y));
		_52143_quo = static_cast<jule::Uint>(_52314_q);
		_52154_rem = static_cast<jule::Uint>(_52317_r);
		return std::make_tuple(_52143_quo,_52154_rem);
	}
	jule::U64 _52610_q;
	jule::U64 _52613_r;
	std::tie(_52610_q,_52613_r) = _1b5e977e8_div64(static_cast<jule::U64>(_52112_hi),static_cast<jule::U64>(_52122_lo),static_cast<jule::U64>(_52132_y));
	_52143_quo = static_cast<jule::Uint>(_52610_q);
	_52154_rem = static_cast<jule::Uint>(_52613_r);
	return std::make_tuple(_52143_quo,_52154_rem);
}



inline std::tuple<jule::U32,jule::U32> _1b5e977e8_div32(jule::U32 _53414_hi,jule::U32 _53423_lo,jule::U32 _53432_y) {
	jule::U32 _53442_quo = jule::U32();
	jule::U32 _53452_rem = jule::U32();
	if (_53432_y == 0LL) {
		jule::panic(_1b5e99d17_DIVIDE_ERROR);
	}
	if ((_53432_y != 0LL) && (_53432_y <= _53414_hi)) {
		jule::panic(_1b5e99d17_OVERFLOW_ERROR);
	}
	jule::U64 _5419_z = (static_cast<jule::U64>(_53414_hi) << 32LL) | static_cast<jule::U64>(_53423_lo);
	std::tie(_53442_quo,_53452_rem) = std::make_tuple(static_cast<jule::U32>(jule::div(_5419_z,static_cast<jule::U64>(_53432_y))),static_cast<jule::U32>(jule::mod(_5419_z,static_cast<jule::U64>(_53432_y))));
	return std::make_tuple(_53442_quo,_53452_rem);
}



inline std::tuple<jule::U64,jule::U64> _1b5e977e8_div64(jule::U64 _55014_hi,jule::U64 _55023_lo,jule::U64 _55036_y) {
	jule::U64 _55046_quo = jule::U64();
	jule::U64 _55056_rem = jule::U64();
	
	
	if (_55036_y == 0LL) {
		jule::panic(_1b5e99d17_DIVIDE_ERROR);
	}
	if (_55036_y <= _55014_hi) {
		jule::panic(_1b5e99d17_OVERFLOW_ERROR);
	}
	jule::Uint _5609_s = static_cast<jule::Uint>(_1b5e977e8_leading_zeros64(_55036_y));
	_55036_y<<=_5609_s;
	jule::U64 _5639_yn1 = _55036_y >> 32LL;
	jule::U64 _5649_yn0 = _55036_y & 4294967295LL;
	jule::U64 _5659_un32 = (_55014_hi << _5609_s) | (_55023_lo >> (64LL - _5609_s));
	jule::U64 _5669_un10 = _55023_lo << _5609_s;
	jule::U64 _5679_un1 = _5669_un10 >> 32LL;
	jule::U64 _5689_un0 = _5669_un10 & 4294967295LL;
	jule::U64 _56913_q1 = jule::div(_5659_un32,_5639_yn1);
	jule::U64 _57013_rhat = _5659_un32 - (_56913_q1 * _5639_yn1);
	_iter_begin_4421298624:;
	if (!((_56913_q1 >= 4294967296LL) || ((_56913_q1 * _5649_yn0) > ((4294967296LL * _57013_rhat) + _5679_un1)))) { goto _iter_end_4421298624; }
	{
		(_56913_q1)--;
		_57013_rhat+=_5639_yn1;
		if (_57013_rhat >= 4294967296LL) {
			goto _iter_end_4421298624;
		}
	}
	_iter_next_4421298624:;
	goto _iter_begin_4421298624;
	_iter_end_4421298624:;
	jule::U64 _5809_un21 = ((_5659_un32 * 4294967296LL) + _5679_un1) - (_56913_q1 * _55036_y);
	jule::U64 _58113_q0 = jule::div(_5809_un21,_5639_yn1);
	_57013_rhat=static_cast<jule::U64>(_5809_un21 - (_58113_q0 * _5639_yn1));
	_iter_begin_4421303440:;
	if (!((_58113_q0 >= 4294967296LL) || ((_58113_q0 * _5649_yn0) > ((4294967296LL * _57013_rhat) + _5689_un0)))) { goto _iter_end_4421303440; }
	{
		(_58113_q0)--;
		_57013_rhat+=_5639_yn1;
		if (_57013_rhat >= 4294967296LL) {
			goto _iter_end_4421303440;
		}
	}
	_iter_next_4421303440:;
	goto _iter_begin_4421303440;
	_iter_end_4421303440:;
	_55046_quo = static_cast<jule::U64>((_56913_q1 * 4294967296LL) + _58113_q0);
	_55056_rem = static_cast<jule::U64>((((_5809_un21 * 4294967296LL) + _5689_un0) - (_58113_q0 * _55036_y)) >> _5609_s);
	return std::make_tuple(_55046_quo,_55056_rem);
}



inline jule::Uint _1b5e977e8_rem(jule::Uint _59812_hi,jule::Uint _59822_lo,jule::Uint _59832_y) {
	if (false) {
		return static_cast<jule::Uint>(_1b5e977e8_rem32(static_cast<jule::U32>(_59812_hi),static_cast<jule::U32>(_59822_lo),static_cast<jule::U32>(_59832_y)));
	}
	return static_cast<jule::Uint>(_1b5e977e8_rem64(static_cast<jule::U64>(_59812_hi),static_cast<jule::U64>(_59822_lo),static_cast<jule::U64>(_59832_y)));
}



inline jule::U32 _1b5e977e8_rem32(jule::U32 _60814_hi,jule::U32 _60823_lo,jule::U32 _60832_y) {
	return static_cast<jule::U32>(jule::mod((static_cast<jule::U64>(_60814_hi) << 32LL) | static_cast<jule::U64>(_60823_lo),static_cast<jule::U64>(_60832_y)));
}



inline jule::U64 _1b5e977e8_rem64(jule::U64 _61514_hi,jule::U64 _61523_lo,jule::U64 _61532_y) {
	jule::U64 _62213_rem;
	std::tie(std::ignore,_62213_rem) = _1b5e977e8_div64(static_cast<jule::U64>(jule::mod(_61514_hi,_61532_y)),_61523_lo,_61532_y);
	return _62213_rem;
}



inline jule::F64 _1b59e957b_atanh(jule::F64 _7818_x) {
	
	{
		if (!((_7818_x < -1LL) || (_7818_x > 1LL) || (_1b5ab659e_is_nan(_7818_x)))) { goto _case_end_4421606240; }
		_case_begin_4421606240:;
		{
			return static_cast<jule::F64>(_1b5ab659e_nan());
		}
		goto _match_end_4421606080;
		_case_end_4421606240:;
		if (!((_7818_x == 1LL))) { goto _case_end_4421606352; }
		_case_begin_4421606352:;
		{
			return static_cast<jule::F64>(_1b5ab659e_inf(1LL));
		}
		goto _match_end_4421606080;
		_case_end_4421606352:;
		if (!((_7818_x == -1LL))) { goto _case_end_4421606464; }
		_case_begin_4421606464:;
		{
			return static_cast<jule::F64>(_1b5ab659e_inf(-1LL));
		}
		goto _match_end_4421606080;
		_case_end_4421606464:;
		_match_end_4421606080:;
	}
	jule::Bool _8913_sign = false;
	if (_7818_x < 0LL) {
		_7818_x=static_cast<jule::F64>((-(_7818_x)));
		_8913_sign=true;
	}
	jule::F64 _9413_temp = 0LL;
	{
		if (!((_7818_x < 0.000000003725290298461914))) { goto _case_end_4421616592; }
		_case_begin_4421616592:;
		{
			_9413_temp=_7818_x;
		}
		goto _match_end_4421613936;
		_case_end_4421616592:;
		if (!((_7818_x < 0.5))) { goto _case_end_4421614864; }
		_case_begin_4421614864:;
		{
			_9413_temp=static_cast<jule::F64>(_7818_x + _7818_x);
			_9413_temp=static_cast<jule::F64>(0.5 * _1b605ec01_log1p(static_cast<jule::F64>(_9413_temp + jule::div(_9413_temp * _7818_x,1LL - _7818_x))));
		}
		goto _match_end_4421613936;
		_case_end_4421614864:;
		_case_begin_4421614032:;
		{
			_9413_temp=static_cast<jule::F64>(0.5 * _1b605ec01_log1p(static_cast<jule::F64>(jule::div(_7818_x + _7818_x,1LL - _7818_x))));
		}
		goto _match_end_4421613936;
		_case_end_4421614032:;
		_match_end_4421613936:;
	}
	if (_8913_sign) {
		_9413_temp=static_cast<jule::F64>((-(_9413_temp)));
	}
	return _9413_temp;
}



inline jule::U32 _1b5a07116_f32_bits(jule::F32 _4117_f) {
	return (*(((jule::U32*)((&(_4117_f))))));
}



inline jule::F32 _1b5a07116_f32_from_bits(jule::U32 _4722_b) {
	return (*(((jule::F32*)((&(_4722_b))))));
}



inline jule::U64 _1b5a07116_f64_bits(jule::F64 _5217_f) {
	return (*(((jule::U64*)((&(_5217_f))))));
}



inline jule::F64 _1b5a07116_f64_from_bits(jule::U64 _5822_b) {
	return (*(((jule::F64*)((&(_5822_b))))));
}



inline jule::F64 _1b5a241aa_cos(jule::F64 _14816_x) {
	
	
	
	if (_1b5ab659e_is_nan(_14816_x) || _1b5ab659e_is_inf(_14816_x,0LL)) {
		return static_cast<jule::F64>(_1b5ab659e_nan());
	}
	jule::Bool _15813_sign = false;
	_14816_x=static_cast<jule::F64>(_1b5c0ce54_abs(_14816_x));
	jule::U64 _16113_j = 0LLU;
	jule::F64 _16213_y = 0LL;
	jule::F64 _16313_z = 0LL;
	if (_14816_x >= 536870912LL) {
		std::tie(_16113_j,_16313_z) = _1b5a99ebc_trig_reduce(_14816_x);
	} else {
		_16113_j=static_cast<jule::U64>(_14816_x * 1.2732395447351628);
		_16213_y=static_cast<jule::F64>(_16113_j);
		if ((_16113_j & 1LL) == 1LL) {
			(_16113_j)++;
			(_16213_y)++;
		}
		_16113_j&=7LL;
		_16313_z=static_cast<jule::F64>(((_14816_x - (_16213_y * 0.7853981256484985)) - (_16213_y * 0.00000003774894707930798)) - (_16213_y * 0.0000000000000026951514290790595));
	}
	if (_16113_j > 3LL) {
		_16113_j-=4LL;
		_15813_sign=(!(_15813_sign));
	}
	if (_16113_j > 1LL) {
		_15813_sign=(!(_15813_sign));
	}
	jule::F64 _1879_zz = _16313_z * _16313_z;
	if ((_16113_j == 1LL) || (_16113_j == 2LL)) {
		_16213_y=static_cast<jule::F64>(_16313_z + ((_16313_z * _1879_zz) * ((((((((((_1b5a241aa__SIN[0LL] * _1879_zz) + _1b5a241aa__SIN[1LL]) * _1879_zz) + _1b5a241aa__SIN[2LL]) * _1879_zz) + _1b5a241aa__SIN[3LL]) * _1879_zz) + _1b5a241aa__SIN[4LL]) * _1879_zz) + _1b5a241aa__SIN[5LL])));
	} else {
		_16213_y=static_cast<jule::F64>((1LL - (0.5 * _1879_zz)) + ((_1879_zz * _1879_zz) * ((((((((((_1b5a241aa__COS[0LL] * _1879_zz) + _1b5a241aa__COS[1LL]) * _1879_zz) + _1b5a241aa__COS[2LL]) * _1879_zz) + _1b5a241aa__COS[3LL]) * _1879_zz) + _1b5a241aa__COS[4LL]) * _1879_zz) + _1b5a241aa__COS[5LL])));
	}
	if (_15813_sign) {
		_16213_y=static_cast<jule::F64>((-(_16213_y)));
	}
	return _16213_y;
}



inline jule::F64 _1b5a241aa_sin(jule::F64 _20516_x) {
	
	
	
	{
		if (!((_20516_x == 0LL) || (_1b5ab659e_is_nan(_20516_x)))) { goto _case_end_4421668336; }
		_case_begin_4421668336:;
		{
			return _20516_x;
		}
		goto _match_end_4421668160;
		_case_end_4421668336:;
		if (!((_1b5ab659e_is_inf(_20516_x,0LL)))) { goto _case_end_4421668464; }
		_case_begin_4421668464:;
		{
			return static_cast<jule::F64>(_1b5ab659e_nan());
		}
		goto _match_end_4421668160;
		_case_end_4421668464:;
		_match_end_4421668160:;
	}
	jule::Bool _21813_sign = false;
	if (_20516_x < 0LL) {
		_20516_x=static_cast<jule::F64>((-(_20516_x)));
		_21813_sign=true;
	}
	jule::U64 _22413_j = 0LLU;
	jule::F64 _22513_y = 0LL;
	jule::F64 _22613_z = 0LL;
	if (_20516_x >= 536870912LL) {
		std::tie(_22413_j,_22613_z) = _1b5a99ebc_trig_reduce(_20516_x);
	} else {
		_22413_j=static_cast<jule::U64>(_20516_x * 1.2732395447351628);
		_22513_y=static_cast<jule::F64>(_22413_j);
		if ((_22413_j & 1LL) == 1LL) {
			(_22413_j)++;
			(_22513_y)++;
		}
		_22413_j&=7LL;
		_22613_z=static_cast<jule::F64>(((_20516_x - (_22513_y * 0.7853981256484985)) - (_22513_y * 0.00000003774894707930798)) - (_22513_y * 0.0000000000000026951514290790595));
	}
	if (_22413_j > 3LL) {
		_21813_sign=(!(_21813_sign));
		_22413_j-=4LL;
	}
	jule::F64 _2469_zz = _22613_z * _22613_z;
	if ((_22413_j == 1LL) || (_22413_j == 2LL)) {
		_22513_y=static_cast<jule::F64>((1LL - (0.5 * _2469_zz)) + ((_2469_zz * _2469_zz) * ((((((((((_1b5a241aa__COS[0LL] * _2469_zz) + _1b5a241aa__COS[1LL]) * _2469_zz) + _1b5a241aa__COS[2LL]) * _2469_zz) + _1b5a241aa__COS[3LL]) * _2469_zz) + _1b5a241aa__COS[4LL]) * _2469_zz) + _1b5a241aa__COS[5LL])));
	} else {
		_22513_y=static_cast<jule::F64>(_22613_z + ((_22613_z * _2469_zz) * ((((((((((_1b5a241aa__SIN[0LL] * _2469_zz) + _1b5a241aa__SIN[1LL]) * _2469_zz) + _1b5a241aa__SIN[2LL]) * _2469_zz) + _1b5a241aa__SIN[3LL]) * _2469_zz) + _1b5a241aa__SIN[4LL]) * _2469_zz) + _1b5a241aa__SIN[5LL])));
	}
	if (_21813_sign) {
		_22513_y=static_cast<jule::F64>((-(_22513_y)));
	}
	return _22513_y;
}



inline jule::F64 _1b5a246d8_tan(jule::F64 _11316_x) {
	
	
	
	{
		if (!((_11316_x == 0LL) || (_1b5ab659e_is_nan(_11316_x)))) { goto _case_end_4421705616; }
		_case_begin_4421705616:;
		{
			return _11316_x;
		}
		goto _match_end_4421705440;
		_case_end_4421705616:;
		if (!((_1b5ab659e_is_inf(_11316_x,0LL)))) { goto _case_end_4421705744; }
		_case_begin_4421705744:;
		{
			return static_cast<jule::F64>(_1b5ab659e_nan());
		}
		goto _match_end_4421705440;
		_case_end_4421705744:;
		_match_end_4421705440:;
	}
	jule::Bool _12613_sign = false;
	if (_11316_x < 0LL) {
		_11316_x=static_cast<jule::F64>((-(_11316_x)));
		_12613_sign=true;
	}
	jule::U64 _13113_j = 0LLU;
	jule::F64 _13213_y = 0LL;
	jule::F64 _13313_z = 0LL;
	if (_11316_x >= 536870912LL) {
		std::tie(_13113_j,_13313_z) = _1b5a99ebc_trig_reduce(_11316_x);
	} else {
		_13113_j=static_cast<jule::U64>(_11316_x * 1.2732395447351628);
		_13213_y=static_cast<jule::F64>(_13113_j);
		if ((_13113_j & 1LL) == 1LL) {
			(_13113_j)++;
			(_13213_y)++;
		}
		_13313_z=static_cast<jule::F64>(((_11316_x - (_13213_y * 0.7853981256484985)) - (_13213_y * 0.00000003774894707930798)) - (_13213_y * 0.0000000000000026951514290790595));
	}
	jule::F64 _1489_zz = _13313_z * _13313_z;
	if (_1489_zz > 0.00000000000001) {
		_13213_y=static_cast<jule::F64>(_13313_z + (_13313_z * jule::div(_1489_zz * ((((_1b5a246d8__TAN_P[0LL] * _1489_zz) + _1b5a246d8__TAN_P[1LL]) * _1489_zz) + _1b5a246d8__TAN_P[2LL]),((((((_1489_zz + _1b5a246d8__TAN_Q[1LL]) * _1489_zz) + _1b5a246d8__TAN_Q[2LL]) * _1489_zz) + _1b5a246d8__TAN_Q[3LL]) * _1489_zz) + _1b5a246d8__TAN_Q[4LL])));
	} else {
		_13213_y=_13313_z;
	}
	if ((_13113_j & 2LL) == 2LL) {
		_13213_y=static_cast<jule::F64>(jule::div(-1LL,_13213_y));
	}
	if (_12613_sign) {
		_13213_y=static_cast<jule::F64>((-(_13213_y)));
	}
	return _13213_y;
}



inline jule::F64 _1b5a00bae_mod(jule::F64 _5212_x,jule::F64 _5224_y) {
	if ((((_5224_y == 0LL) || _1b5ab659e_is_inf(_5212_x,0LL)) || _1b5ab659e_is_nan(_5212_x)) || _1b5ab659e_is_nan(_5224_y)) {
		return static_cast<jule::F64>(_1b5ab659e_nan());
	}
	_5224_y=static_cast<jule::F64>(_1b5c0ce54_abs(_5224_y));
	jule::F64 _5810_yfr;
	jule::Int _5815_yexp;
	std::tie(_5810_yfr,_5815_yexp) = _1b5a00d57_frexp(_5224_y);
	jule::F64 _5913_r = _5212_x;
	if (_5212_x < 0LL) {
		_5913_r=static_cast<jule::F64>((-(_5212_x)));
	}
	_iter_begin_4421740800:;
	if (!(_5913_r >= _5224_y)) { goto _iter_end_4421740800; }
	{
		jule::F64 _6514_rfr;
		jule::Int _6523_rexp;
		std::tie(_6514_rfr,_6523_rexp) = _1b5a00d57_frexp(_5913_r);
		if (_6514_rfr < _5810_yfr) {
			_6523_rexp=static_cast<jule::Int>(_6523_rexp - 1LL);
		}
		_5913_r=static_cast<jule::F64>(_5913_r - _1cde6cc4a_ldexp(_5224_y,static_cast<jule::Int>(_6523_rexp - _5815_yexp)));
	}
	_iter_next_4421740800:;
	goto _iter_begin_4421740800;
	_iter_end_4421740800:;
	if (_5212_x < 0LL) {
		_5913_r=static_cast<jule::F64>((-(_5913_r)));
	}
	return _5913_r;
}



inline std::tuple<jule::F64,jule::Int> _1b5a00d57_frexp(jule::F64 _4718_f) {
	jule::F64 _4728_frac = jule::F64();
	jule::Int _4739_exp = jule::Int();
	{
		if (!((_4718_f == 0LL))) { goto _case_end_4421747968; }
		_case_begin_4421747968:;
		{
			_4728_frac = _4718_f;
			_4739_exp = 0LL;
			return std::make_tuple(_4728_frac,_4739_exp);
		}
		goto _match_end_4421747728;
		_case_end_4421747968:;
		if (!((_1b5ab659e_is_inf(_4718_f,0LL)) || (_1b5ab659e_is_nan(_4718_f)))) { goto _case_end_4421748096; }
		_case_begin_4421748096:;
		{
			_4728_frac = _4718_f;
			_4739_exp = 0LL;
			return std::make_tuple(_4728_frac,_4739_exp);
		}
		goto _match_end_4421747728;
		_case_end_4421748096:;
		_match_end_4421747728:;
	}
	std::tie(_4718_f,_4739_exp) = _1b5ab659e_normalize(_4718_f);
	jule::U64 _5613_x = _1b5a07116_f64_bits(_4718_f);
	_4739_exp+=static_cast<jule::Int>((static_cast<jule::Int>((_5613_x >> 52LL) & 2047LL) - 1023LL) + 1LL);
	_5613_x=static_cast<jule::U64>(_5613_x & -9218868437227405313LL);
	_5613_x|=4602678819172646912LL;
	_4728_frac=static_cast<jule::F64>(_1b5a07116_f64_from_bits(_5613_x));
	return std::make_tuple(_4728_frac,_4739_exp);
}



inline jule::F32 _1b5a62e74_nextafter32(jule::F32 _4420_x,jule::F32 _4428_y) {
	jule::F32 _4438_r = jule::F32();
	{
		if (!((_1b5ab659e_is_nan(static_cast<jule::F64>(_4420_x))) || (_1b5ab659e_is_nan(static_cast<jule::F64>(_4428_y))))) { goto _case_end_4421759616; }
		_case_begin_4421759616:;
		{
			_4438_r=static_cast<jule::F32>(_1b5ab659e_nan());
		}
		goto _match_end_4421758608;
		_case_end_4421759616:;
		if (!((_4420_x == _4428_y))) { goto _case_end_4421761392; }
		_case_begin_4421761392:;
		{
			_4438_r=_4420_x;
		}
		goto _match_end_4421758608;
		_case_end_4421761392:;
		if (!((_4420_x == 0LL))) { goto _case_end_4421760144; }
		_case_begin_4421760144:;
		{
			_4438_r=static_cast<jule::F32>(_1b5a8b860_copysign(static_cast<jule::F64>(_1b5a07116_f32_from_bits(1LLU)),static_cast<jule::F64>(_4428_y)));
		}
		goto _match_end_4421758608;
		_case_end_4421760144:;
		if (!(((_4428_y > _4420_x) == (_4420_x > 0LL)))) { goto _case_end_4421759088; }
		_case_begin_4421759088:;
		{
			_4438_r=static_cast<jule::F32>(_1b5a07116_f32_from_bits(static_cast<jule::U32>(_1b5a07116_f32_bits(_4420_x) + 1LL)));
		}
		goto _match_end_4421758608;
		_case_end_4421759088:;
		_case_begin_4421758784:;
		{
			_4438_r=static_cast<jule::F32>(_1b5a07116_f32_from_bits(static_cast<jule::U32>(_1b5a07116_f32_bits(_4420_x) - 1LL)));
		}
		goto _match_end_4421758608;
		_case_end_4421758784:;
		_match_end_4421758608:;
	}
	return _4438_r;
}



inline jule::F64 _1b5a62e74_nextafter(jule::F64 _6618_x,jule::F64 _6626_y) {
	jule::F64 _6636_r = jule::F64();
	{
		if (!((_1b5ab659e_is_nan(_6618_x)) || (_1b5ab659e_is_nan(_6626_y)))) { goto _case_end_4421771040; }
		_case_begin_4421771040:;
		{
			_6636_r=static_cast<jule::F64>(_1b5ab659e_nan());
		}
		goto _match_end_4421769840;
		_case_end_4421771040:;
		if (!((_6618_x == _6626_y))) { goto _case_end_4421771344; }
		_case_begin_4421771344:;
		{
			_6636_r=_6618_x;
		}
		goto _match_end_4421769840;
		_case_end_4421771344:;
		if (!((_6618_x == 0LL))) { goto _case_end_4421770848; }
		_case_begin_4421770848:;
		{
			_6636_r=static_cast<jule::F64>(_1b5a8b860_copysign(static_cast<jule::F64>(_1b5a07116_f64_from_bits(1LLU)),_6626_y));
		}
		goto _match_end_4421769840;
		_case_end_4421770848:;
		if (!(((_6626_y > _6618_x) == (_6618_x > 0LL)))) { goto _case_end_4421772432; }
		_case_begin_4421772432:;
		{
			_6636_r=static_cast<jule::F64>(_1b5a07116_f64_from_bits(static_cast<jule::U64>(_1b5a07116_f64_bits(_6618_x) + 1LL)));
		}
		goto _match_end_4421769840;
		_case_end_4421772432:;
		_case_begin_4421770016:;
		{
			_6636_r=static_cast<jule::F64>(_1b5a07116_f64_from_bits(static_cast<jule::U64>(_1b5a07116_f64_bits(_6618_x) - 1LL)));
		}
		goto _match_end_4421769840;
		_case_end_4421770016:;
		_match_end_4421769840:;
	}
	return _6636_r;
}



inline jule::F64 _1b5a8b860_copysign(jule::F64 _3917_f,jule::F64 _3925_sign) {
	
	return static_cast<jule::F64>(_1b5a07116_f64_from_bits(static_cast<jule::U64>((_1b5a07116_f64_bits(_3917_f) & 9223372036854775807LLU) | (_1b5a07116_f64_bits(_3925_sign) & 9223372036854775808LLU))));
}



inline std::tuple<jule::U64,jule::F64> _1b5a99ebc_trig_reduce(jule::F64 _6020_x) {
	jule::U64 _6030_j = jule::U64();
	jule::F64 _6038_z = jule::F64();
	
	if (_6020_x < 0.7853981633974483) {
		_6030_j = 0LL;
		_6038_z = _6020_x;
		return std::make_tuple(_6030_j,_6038_z);
	}
	jule::U64 _6713_ix = _1b5a07116_f64_bits(_6020_x);
	jule::Int _689_exp = (static_cast<jule::Int>((_6713_ix >> 52LL) & 2047LL) - 1023LL) - 52LL;
	_6713_ix=static_cast<jule::U64>(_6713_ix & -9218868437227405313LL);
	_6713_ix|=4503599627370496LL;
	jule::Uint _7410_digit = jule::div(static_cast<jule::Uint>(_689_exp + 61LL),64LL);
	jule::Uint _7417_bitshift = jule::mod(static_cast<jule::Uint>(_689_exp + 61LL),64LL);
	std::tie(_7410_digit,_7417_bitshift) = std::make_tuple(jule::div(static_cast<jule::Uint>(_689_exp + 61LL),64LL),jule::mod(static_cast<jule::Uint>(_689_exp + 61LL),64LL));
	jule::U64 _759_z0 = (_1b5a99ebc_M_PI4[static_cast<jule::Int>(_7410_digit)] << _7417_bitshift) | (_1b5a99ebc_M_PI4[static_cast<jule::Int>(_7410_digit + 1LL)] >> (64LL - _7417_bitshift));
	jule::U64 _769_z1 = (_1b5a99ebc_M_PI4[static_cast<jule::Int>(_7410_digit + 1LL)] << _7417_bitshift) | (_1b5a99ebc_M_PI4[static_cast<jule::Int>(_7410_digit + 2LL)] >> (64LL - _7417_bitshift));
	jule::U64 _779_z2 = (_1b5a99ebc_M_PI4[static_cast<jule::Int>(_7410_digit + 2LL)] << _7417_bitshift) | (_1b5a99ebc_M_PI4[static_cast<jule::Int>(_7410_digit + 3LL)] >> (64LL - _7417_bitshift));
	jule::U64 _7910_z2hi;
	std::tie(_7910_z2hi,std::ignore) = _1b5e977e8_mul64(_779_z2,_6713_ix);
	jule::U64 _8010_z1hi;
	jule::U64 _8016_z1lo;
	std::tie(_8010_z1hi,_8016_z1lo) = _1b5e977e8_mul64(_769_z1,_6713_ix);
	jule::U64 _819_z0lo = _759_z0 * _6713_ix;
	jule::U64 _8210_lo;
	jule::U64 _8214_c;
	std::tie(_8210_lo,_8214_c) = _1b5e977e8_add64(_8016_z1lo,_7910_z2hi,0LLU);
	jule::U64 _8314_hi;
	std::tie(_8314_hi,std::ignore) = _1b5e977e8_add64(_819_z0lo,_8010_z1hi,_8214_c);
	_6030_j=static_cast<jule::U64>(_8314_hi >> 61LL);
	_8314_hi=static_cast<jule::U64>((_8314_hi << 3LL) | (_8210_lo >> 61LL));
	jule::Uint _889_lz = static_cast<jule::Uint>(_1b5e977e8_leading_zeros64(_8314_hi));
	jule::U64 _899_e = static_cast<jule::U64>(1023LL - (_889_lz + 1LL));
	_8314_hi=static_cast<jule::U64>((_8314_hi << (_889_lz + 1LL)) | (_8210_lo >> (64LL - (_889_lz + 1LL))));
	_8314_hi>>=12LL;
	_8314_hi|=static_cast<jule::U64>(_899_e << 52LL);
	_6038_z=static_cast<jule::F64>(_1b5a07116_f64_from_bits(_8314_hi));
	if ((_6030_j & 1LL) == 1LL) {
		(_6030_j)++;
		_6030_j&=7LL;
		(_6038_z)--;
	}
	_6030_j = _6030_j;
	_6038_z = static_cast<jule::F64>(_6038_z * 0.7853981633974483);
	return std::make_tuple(_6030_j,_6038_z);
}



inline jule::F64 _1b5abd452_atan2(jule::F64 _6014_y,jule::F64 _6022_x) {
	{
		if (!((_1b5ab659e_is_nan(_6014_y)) || (_1b5ab659e_is_nan(_6022_x)))) { goto _case_end_4421821584; }
		_case_begin_4421821584:;
		{
			return static_cast<jule::F64>(_1b5ab659e_nan());
		}
		goto _match_end_4421819248;
		_case_end_4421821584:;
		if (!((_6014_y == 0LL))) { goto _case_end_4421821712; }
		_case_begin_4421821712:;
		{
			if ((_6022_x >= 0LL) && (!(_1ce032bbc_signbit(_6022_x)))) {
				return static_cast<jule::F64>(_1b5a8b860_copysign(0LL,_6014_y));
			}
			return static_cast<jule::F64>(_1b5a8b860_copysign(3.141592653589793,_6014_y));
		}
		goto _match_end_4421819248;
		_case_end_4421821712:;
		if (!((_6022_x == 0LL))) { goto _case_end_4421821840; }
		_case_begin_4421821840:;
		{
			return static_cast<jule::F64>(_1b5a8b860_copysign(1.5707963267948966,_6014_y));
		}
		goto _match_end_4421819248;
		_case_end_4421821840:;
		if (!((_1b5ab659e_is_inf(_6022_x,0LL)))) { goto _case_end_4421821968; }
		_case_begin_4421821968:;
		{
			if (_1b5ab659e_is_inf(_6022_x,1LL)) {
				{
					if (!((_1b5ab659e_is_inf(_6014_y,0LL)))) { goto _case_end_4421831088; }
					_case_begin_4421831088:;
					{
						return static_cast<jule::F64>(_1b5a8b860_copysign(0.7853981633974483,_6014_y));
					}
					goto _match_end_4421829440;
					_case_end_4421831088:;
					_case_begin_4421829632:;
					{
						return static_cast<jule::F64>(_1b5a8b860_copysign(0LL,_6014_y));
					}
					goto _match_end_4421829440;
					_case_end_4421829632:;
					_match_end_4421829440:;
				}
			}
			{
				if (!((_1b5ab659e_is_inf(_6014_y,0LL)))) { goto _case_end_4421833904; }
				_case_begin_4421833904:;
				{
					return static_cast<jule::F64>(_1b5a8b860_copysign(2.356194490192345,_6014_y));
				}
				goto _match_end_4421828528;
				_case_end_4421833904:;
				_case_begin_4421831968:;
				{
					return static_cast<jule::F64>(_1b5a8b860_copysign(3.141592653589793,_6014_y));
				}
				goto _match_end_4421828528;
				_case_end_4421831968:;
				_match_end_4421828528:;
			}
		}
		goto _match_end_4421819248;
		_case_end_4421821968:;
		if (!((_1b5ab659e_is_inf(_6014_y,0LL)))) { goto _case_end_4421822096; }
		_case_begin_4421822096:;
		{
			return static_cast<jule::F64>(_1b5a8b860_copysign(1.5707963267948966,_6014_y));
		}
		goto _match_end_4421819248;
		_case_end_4421822096:;
		_match_end_4421819248:;
	}
	jule::F64 _929_q = _1b6e68b1a_atan(static_cast<jule::F64>(jule::div(_6014_y,_6022_x)));
	if (_6022_x < 0LL) {
		if (_929_q <= 0LL) {
			return static_cast<jule::F64>(_929_q + 3.141592653589793);
		}
		return static_cast<jule::F64>(_929_q - 3.141592653589793);
	}
	return _929_q;
}



inline jule::F64 _1b5abde69_floor(jule::F64 _4414_x) {
	if (((_4414_x == 0LL) || _1b5ab659e_is_nan(_4414_x)) || _1b5ab659e_is_inf(_4414_x,0LL)) {
		return _4414_x;
	}
	if (_4414_x < 0LL) {
		jule::F64 _4918_d;
		jule::F64 _4921_fract;
		std::tie(_4918_d,_4921_fract) = _1b5c13311_modf(static_cast<jule::F64>((-(_4414_x))));
		if (_4921_fract != 0LL) {
			_4918_d=static_cast<jule::F64>(_4918_d + 1LL);
		}
		return static_cast<jule::F64>((-(_4918_d)));
	}
	jule::F64 _5510_d;
	std::tie(_5510_d,std::ignore) = _1b5c13311_modf(_4414_x);
	return _5510_d;
}



inline jule::F64 _1b5abde69_ceil(jule::F64 _6513_x) {
	return static_cast<jule::F64>((-(_1b5abde69_floor(static_cast<jule::F64>((-(_6513_x)))))));
}



inline jule::F64 _1b5abde69_trunc(jule::F64 _7314_x) {
	if (((_7314_x == 0LL) || _1b5ab659e_is_nan(_7314_x)) || _1b5ab659e_is_inf(_7314_x,0LL)) {
		return _7314_x;
	}
	jule::F64 _7710_d;
	std::tie(_7710_d,std::ignore) = _1b5c13311_modf(_7314_x);
	return _7710_d;
}



inline jule::F64 _1b5abde69_round(jule::F64 _8714_x) {
	jule::U64 _9713_bits = _1b5a07116_f64_bits(_8714_x);
	jule::Uint _9813_e = static_cast<jule::Uint>(_9713_bits >> 52LL) & 2047LL;
	if (_9813_e < 1023LL) {
		_9713_bits&=9223372036854775808LLU;
		if (_9813_e == 1022LL) {
			_9713_bits|=4607182418800017408LL;
		}
	} else if (_9813_e < 1075LL) {
		
		_9813_e-=1023LL;
		_9713_bits+=static_cast<jule::Int>(2251799813685248LL >> _9813_e);
		_9713_bits&=static_cast<jule::Int>((~(4503599627370495LL >> _9813_e)));
	}
	return static_cast<jule::F64>(_1b5a07116_f64_from_bits(_9713_bits));
}



inline jule::F64 _1b5abde69_round_even(jule::F64 _12419_x) {
	jule::U64 _13613_bits = _1b5a07116_f64_bits(_12419_x);
	jule::Uint _13713_e = static_cast<jule::Uint>(_13613_bits >> 52LL) & 2047LL;
	if (_13713_e >= 1023LL) {
		
		_13713_e-=1023LL;
		_13613_bits+=static_cast<jule::U64>((2251799813685247LL + ((_13613_bits >> (52LL - _13713_e)) & 1LL)) >> _13713_e);
		_13613_bits&=static_cast<jule::Int>((~(4503599627370495LL >> _13713_e)));
	} else if ((_13713_e == 1022LL) && ((_13613_bits & 4503599627370495LL) != 0LL)) {
		_13613_bits=static_cast<jule::U64>((_13613_bits & 9223372036854775808LLU) | 4607182418800017408LL);
	} else {
		_13613_bits&=9223372036854775808LLU;
	}
	return static_cast<jule::F64>(_1b5a07116_f64_from_bits(_13613_bits));
}



inline jule::F64 _1b5ab659e_nan(void) {
	return static_cast<jule::F64>(_1b5a07116_f64_from_bits(9221120237041090561LLU));
}



inline jule::Bool _1b5ab659e_is_nan(jule::F64 _5215_f) {
	return _5215_f != _5215_f;
}



inline jule::F64 _1b5ab659e_inf(jule::Int _6112_sign) {
	if (_6112_sign >= 0LL) {
		return static_cast<jule::F64>(_1b5a07116_f64_from_bits(9218868437227405312LLU));
	}
	return static_cast<jule::F64>(_1b5a07116_f64_from_bits(18442240474082181120LLU));
}



inline jule::Bool _1b5ab659e_is_inf(jule::F64 _7215_f,jule::Int _7223_sign) {
	return ((_7223_sign >= 0LL) && (_7215_f > jule::MAX_F64)) || ((_7223_sign <= 0LL) && (_7215_f < jule::MIN_F64));
}



inline std::tuple<jule::F64,jule::Int> _1b5ab659e_normalize(jule::F64 _8214_x) {
	jule::F64 _8224_y = jule::F64();
	jule::Int _8232_exp = jule::Int();
	
	if (_1b5c0ce54_abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014) {
		_8224_y = static_cast<jule::F64>(_8214_x * 4503599627370496LL);
		_8232_exp = -52LL;
		return std::make_tuple(_8224_y,_8232_exp);
	}
	_8224_y = _8214_x;
	_8232_exp = 0LL;
	return std::make_tuple(_8224_y,_8232_exp);
}



inline std::tuple<jule::F64,jule::F64> _1b5b280a0_sincos(jule::F64 _4619_x) {
	jule::F64 _4629_sin = jule::F64();
	jule::F64 _4639_cos = jule::F64();
	
	
	
	{
		if (!((_4619_x == 0LL))) { goto _case_end_4421905552; }
		_case_begin_4421905552:;
		{
			_4629_sin = _4619_x;
			_4639_cos = 1LL;
			return std::make_tuple(_4629_sin,_4639_cos);
		}
		goto _match_end_4421905408;
		_case_end_4421905552:;
		if (!((_1b5ab659e_is_nan(_4619_x)) || (_1b5ab659e_is_inf(_4619_x,0LL)))) { goto _case_end_4421905664; }
		_case_begin_4421905664:;
		{
			_4629_sin = static_cast<jule::F64>(_1b5ab659e_nan());
			_4639_cos = static_cast<jule::F64>(_1b5ab659e_nan());
			return std::make_tuple(_4629_sin,_4639_cos);
		}
		goto _match_end_4421905408;
		_case_end_4421905664:;
		_match_end_4421905408:;
	}
	jule::Bool _5914_sin_sign = false;
	jule::Bool _5928_cos_sign = false;
	std::tie(_5914_sin_sign,_5928_cos_sign) = std::make_tuple(false,false);
	if (_4619_x < 0LL) {
		_4619_x=static_cast<jule::F64>((-(_4619_x)));
		_5914_sin_sign=true;
	}
	jule::U64 _6513_j = 0LLU;
	jule::F64 _6613_y = 0LL;
	jule::F64 _6713_z = 0LL;
	if (_4619_x >= 536870912LL) {
		std::tie(_6513_j,_6713_z) = _1b5a99ebc_trig_reduce(_4619_x);
	} else {
		_6513_j=static_cast<jule::U64>(_4619_x * 1.2732395447351628);
		_6613_y=static_cast<jule::F64>(_6513_j);
		if ((_6513_j & 1LL) == 1LL) {
			(_6513_j)++;
			(_6613_y)++;
		}
		_6513_j&=7LL;
		_6713_z=static_cast<jule::F64>(((_4619_x - (_6613_y * 0.7853981256484985)) - (_6613_y * 0.00000003774894707930798)) - (_6613_y * 0.0000000000000026951514290790595));
	}
	if (_6513_j > 3LL) {
		_6513_j-=4LL;
		std::tie(_5914_sin_sign,_5928_cos_sign) = std::make_tuple((!(_5914_sin_sign)),(!(_5928_cos_sign)));
	}
	if (_6513_j > 1LL) {
		_5928_cos_sign=(!(_5928_cos_sign));
	}
	jule::F64 _899_zz = _6713_z * _6713_z;
	_4639_cos=static_cast<jule::F64>((1LL - (0.5 * _899_zz)) + ((_899_zz * _899_zz) * ((((((((((_1b5a241aa__COS[0LL] * _899_zz) + _1b5a241aa__COS[1LL]) * _899_zz) + _1b5a241aa__COS[2LL]) * _899_zz) + _1b5a241aa__COS[3LL]) * _899_zz) + _1b5a241aa__COS[4LL]) * _899_zz) + _1b5a241aa__COS[5LL])));
	_4629_sin=static_cast<jule::F64>(_6713_z + ((_6713_z * _899_zz) * ((((((((((_1b5a241aa__SIN[0LL] * _899_zz) + _1b5a241aa__SIN[1LL]) * _899_zz) + _1b5a241aa__SIN[2LL]) * _899_zz) + _1b5a241aa__SIN[3LL]) * _899_zz) + _1b5a241aa__SIN[4LL]) * _899_zz) + _1b5a241aa__SIN[5LL])));
	if ((_6513_j == 1LL) || (_6513_j == 2LL)) {
		std::tie(_4629_sin,_4639_cos) = std::make_tuple(_4639_cos,_4629_sin);
	}
	if (_5928_cos_sign) {
		_4639_cos=static_cast<jule::F64>((-(_4639_cos)));
	}
	if (_5914_sin_sign) {
		_4629_sin=static_cast<jule::F64>((-(_4629_sin)));
	}
	return std::make_tuple(_4629_sin,_4639_cos);
}



inline jule::F64 _1b5b3791c_dim(jule::F64 _4412_x,jule::F64 _4420_y) {
	jule::F64 _509_v = _4412_x - _4420_y;
	if (_509_v <= 0LL) {
		return 0LL;
	}
	return _509_v;
}



inline jule::F64 _1b5b3791c_max(jule::F64 _6612_x,jule::F64 _6620_y) {
	{
		if (!((_1b5ab659e_is_inf(_6612_x,1LL)) || (_1b5ab659e_is_inf(_6620_y,1LL)))) { goto _case_end_4421949568; }
		_case_begin_4421949568:;
		{
			return static_cast<jule::F64>(_1b5ab659e_inf(1LL));
		}
		goto _match_end_4421949328;
		_case_end_4421949568:;
		if (!((_1b5ab659e_is_nan(_6612_x)) || (_1b5ab659e_is_nan(_6620_y)))) { goto _case_end_4421949696; }
		_case_begin_4421949696:;
		{
			return static_cast<jule::F64>(_1b5ab659e_nan());
		}
		goto _match_end_4421949328;
		_case_end_4421949696:;
		if (!(((_6612_x == 0LL) && (_6612_x == _6620_y)))) { goto _case_end_4421949824; }
		_case_begin_4421949824:;
		{
			if (_1ce032bbc_signbit(_6612_x)) {
				return _6620_y;
			}
			return _6612_x;
		}
		goto _match_end_4421949328;
		_case_end_4421949824:;
		_match_end_4421949328:;
	}
	if (_6612_x > _6620_y) {
		return _6612_x;
	}
	return _6620_y;
}



inline jule::F64 _1b5b3791c_min(jule::F64 _9212_x,jule::F64 _9220_y) {
	{
		if (!((_1b5ab659e_is_inf(_9212_x,-1LL)) || (_1b5ab659e_is_inf(_9220_y,-1LL)))) { goto _case_end_4421956800; }
		_case_begin_4421956800:;
		{
			return static_cast<jule::F64>(_1b5ab659e_inf(-1LL));
		}
		goto _match_end_4421956560;
		_case_end_4421956800:;
		if (!((_1b5ab659e_is_nan(_9212_x)) || (_1b5ab659e_is_nan(_9220_y)))) { goto _case_end_4421956928; }
		_case_begin_4421956928:;
		{
			return static_cast<jule::F64>(_1b5ab659e_nan());
		}
		goto _match_end_4421956560;
		_case_end_4421956928:;
		if (!(((_9212_x == 0LL) && (_9212_x == _9220_y)))) { goto _case_end_4421957056; }
		_case_begin_4421957056:;
		{
			if (_1ce032bbc_signbit(_9212_x)) {
				return _9212_x;
			}
			return _9220_y;
		}
		goto _match_end_4421956560;
		_case_end_4421957056:;
		_match_end_4421956560:;
	}
	if (_9212_x < _9220_y) {
		return _9212_x;
	}
	return _9220_y;
}



inline jule::F64 _1b5b07eb4_log(jule::F64 _11112_x) {
	
	
	
	
	
	
	
	
	
	{
		if (!((_1b5ab659e_is_nan(_11112_x)) || (_1b5ab659e_is_inf(_11112_x,1LL)))) { goto _case_end_4421972320; }
		_case_begin_4421972320:;
		{
			return _11112_x;
		}
		goto _match_end_4421972128;
		_case_end_4421972320:;
		if (!((_11112_x < 0LL))) { goto _case_end_4421972448; }
		_case_begin_4421972448:;
		{
			return static_cast<jule::F64>(_1b5ab659e_nan());
		}
		goto _match_end_4421972128;
		_case_end_4421972448:;
		if (!((_11112_x == 0LL))) { goto _case_end_4421972576; }
		_case_begin_4421972576:;
		{
			return static_cast<jule::F64>(_1b5ab659e_inf(-1LL));
		}
		goto _match_end_4421972128;
		_case_end_4421972576:;
		_match_end_4421972128:;
	}
	jule::F64 _13314_f1;
	jule::Int _13322_ki;
	std::tie(_13314_f1,_13322_ki) = _1b5a00d57_frexp(_11112_x);
	if (_13314_f1 < 0.7071067811865476) {
		_13314_f1*=2LL;
		(_13322_ki)--;
	}
	jule::F64 _1389_f = _13314_f1 - 1LL;
	jule::F64 _1399_k = static_cast<jule::F64>(_13322_ki);
	jule::F64 _1429_s = jule::div(_1389_f,2LL + _1389_f);
	jule::F64 _1439_s2 = _1429_s * _1429_s;
	jule::F64 _1449_s4 = _1439_s2 * _1439_s2;
	jule::F64 _1459_t1 = _1439_s2 * (0.6666666666666735 + (_1449_s4 * (0.2857142874366239 + (_1449_s4 * (0.1818357216161805 + (_1449_s4 * 0.14798198605116586))))));
	jule::F64 _1469_t2 = _1449_s4 * (0.3999999999940942 + (_1449_s4 * (0.22222198432149784 + (_1449_s4 * 0.15313837699209373))));
	jule::F64 _1479_R = _1459_t1 + _1469_t2;
	jule::F64 _1489_hfsq = (0.5 * _1389_f) * _1389_f;
	return static_cast<jule::F64>((_1399_k * 0.6931471803691238) - ((_1489_hfsq - ((_1429_s * (_1489_hfsq + _1479_R)) + (_1399_k * 0.00000000019082149292705877))) - _1389_f));
}



inline jule::F64 _1b5ba459e_expm1(jule::F64 _15618_x) {
	
	
	
	
	
	
	
	
	
	
	
	
	
	{
		if (!((_1b5ab659e_is_inf(_15618_x,1LL)) || (_1b5ab659e_is_nan(_15618_x)))) { goto _case_end_4422006064; }
		_case_begin_4422006064:;
		{
			return _15618_x;
		}
		goto _match_end_4422005888;
		_case_end_4422006064:;
		if (!((_1b5ab659e_is_inf(_15618_x,-1LL)))) { goto _case_end_4422006192; }
		_case_begin_4422006192:;
		{
			return -1LL;
		}
		goto _match_end_4422005888;
		_case_end_4422006192:;
		_match_end_4422005888:;
	}
	jule::F64 _18013_absx = _15618_x;
	jule::Bool _18113_sign = false;
	if (_15618_x < 0LL) {
		_18013_absx=static_cast<jule::F64>((-(_18013_absx)));
		_18113_sign=true;
	}
	if (_18013_absx >= 38.816242111356935) {
		if (_18113_sign) {
			return -1LL;
		}
		if (_18013_absx >= 709.782712893384) {
			return static_cast<jule::F64>(_1b5ab659e_inf(1LL));
		}
	}
	jule::F64 _19813_c = 0LL;
	jule::Int _19913_k = 0LL;
	if (_18013_absx > 0.34657359027997264) {
		jule::F64 _20117_hi = 0LL;
		jule::F64 _20217_lo = 0LL;
		if (_18013_absx < 1.0397207708399179) {
			if ((!(_18113_sign))) {
				_20117_hi=static_cast<jule::F64>(_15618_x - 0.6931471803691238);
				_20217_lo=0.00000000019082149292705877;
				_19913_k=1LL;
			} else {
				_20117_hi=static_cast<jule::F64>(_15618_x + 0.6931471803691238);
				_20217_lo=-0.00000000019082149292705877;
				_19913_k=-1LL;
			}
		} else {
			if ((!(_18113_sign))) {
				_19913_k=static_cast<jule::Int>((1.4426950408889634 * _15618_x) + 0.5);
			} else {
				_19913_k=static_cast<jule::Int>((1.4426950408889634 * _15618_x) - 0.5);
			}
			jule::F64 _21917_t = static_cast<jule::F64>(_19913_k);
			_20117_hi=static_cast<jule::F64>(_15618_x - (_21917_t * 0.6931471803691238));
			_20217_lo=static_cast<jule::F64>(_21917_t * 0.00000000019082149292705877);
		}
		_15618_x=static_cast<jule::F64>(_20117_hi - _20217_lo);
		_19813_c=static_cast<jule::F64>((_20117_hi - _15618_x) - _20217_lo);
	} else if (_18013_absx < 0.00000000000000005551115123125783) {
		return _15618_x;
	} else {
		_19913_k=0LL;
	}
	jule::F64 _2329_hfx = 0.5 * _15618_x;
	jule::F64 _2339_hxs = _15618_x * _2329_hfx;
	jule::F64 _2349_r1 = 1LL + (_2339_hxs * (-0.03333333333333313 + (_2339_hxs * (0.0015873015872548146 + (_2339_hxs * (-0.0000793650757867488 + (_2339_hxs * (0.000004008217827329362 + (_2339_hxs * -0.00000020109921818362437)))))))));
	jule::F64 _23513_t = 3LL - (_2349_r1 * _2329_hfx);
	jule::F64 _23613_e = _2339_hxs * jule::div(_2349_r1 - _23513_t,6LL - (_15618_x * _23513_t));
	if (_19913_k == 0LL) {
		return static_cast<jule::F64>(_15618_x - ((_15618_x * _23613_e) - _2339_hxs));
	}
	_23613_e=static_cast<jule::F64>((_15618_x * (_23613_e - _19813_c)) - _19813_c);
	_23613_e-=_2339_hxs;
	{
		if (!((_19913_k == -1LL))) { goto _case_end_4422040016; }
		_case_begin_4422040016:;
		{
			return static_cast<jule::F64>((0.5 * (_15618_x - _23613_e)) - 0.5);
		}
		goto _match_end_4422040480;
		_case_end_4422040016:;
		if (!((_19913_k == 1LL))) { goto _case_end_4422041456; }
		_case_begin_4422041456:;
		{
			if (_15618_x < -0.25) {
				return static_cast<jule::F64>(-2LL * (_23613_e - (_15618_x + 0.5)));
			}
			return static_cast<jule::F64>(1LL + (2LL * (_15618_x - _23613_e)));
		}
		goto _match_end_4422040480;
		_case_end_4422041456:;
		if (!((_19913_k <= -2LL) || (_19913_k > 56LL))) { goto _case_end_4422041616; }
		_case_begin_4422041616:;
		{
			jule::F64 _25117_y = 1LL - (_23613_e - _15618_x);
			_25117_y=static_cast<jule::F64>(_1b5a07116_f64_from_bits(static_cast<jule::U64>(_1b5a07116_f64_bits(_25117_y) + (static_cast<jule::U64>(_19913_k) << 52LL))));
			return static_cast<jule::F64>(_25117_y - 1LL);
		}
		goto _match_end_4422040480;
		_case_end_4422041616:;
		_match_end_4422040480:;
	}
	if (_19913_k < 20LL) {
		_23513_t=static_cast<jule::F64>(_1b5a07116_f64_from_bits(static_cast<jule::U64>(4607182418800017408LL - (9007199254740992LL >> static_cast<jule::Uint>(_19913_k)))));
		jule::F64 _25717_y = _23513_t - (_23613_e - _15618_x);
		_25717_y=static_cast<jule::F64>(_1b5a07116_f64_from_bits(static_cast<jule::U64>(_1b5a07116_f64_bits(_25717_y) + (static_cast<jule::U64>(_19913_k) << 52LL))));
		return _25717_y;
	}
	_23513_t=static_cast<jule::F64>(_1b5a07116_f64_from_bits(static_cast<jule::U64>(static_cast<jule::U64>(1023LL - _19913_k) << 52LL)));
	jule::F64 _26213_y = _15618_x - (_23613_e + _23513_t);
	(_26213_y)++;
	_26213_y=static_cast<jule::F64>(_1b5a07116_f64_from_bits(static_cast<jule::U64>(_1b5a07116_f64_bits(_26213_y) + (static_cast<jule::U64>(_19913_k) << 52LL))));
	return _26213_y;
}



inline jule::F64 _1b5c0ce54_abs(jule::F64 _4312_x) {
	return static_cast<jule::F64>(_1b5a07116_f64_from_bits(static_cast<jule::U64>(_1b5a07116_f64_bits(_4312_x) & 9223372036854775807LLU)));
}



inline jule::F64 _1b5b08a97_j1(jule::F64 _10515_x) {
	
	
	
	
	
	
	
	
	
	
	
	{
		if (!((_1b5ab659e_is_nan(_10515_x)))) { goto _case_end_4422073040; }
		_case_begin_4422073040:;
		{
			return _10515_x;
		}
		goto _match_end_4422072864;
		_case_end_4422073040:;
		if (!((_1b5ab659e_is_inf(_10515_x,0LL)) || (_10515_x == 0LL))) { goto _case_end_4422073168; }
		_case_begin_4422073168:;
		{
			return 0LL;
		}
		goto _match_end_4422072864;
		_case_end_4422073168:;
		_match_end_4422072864:;
	}
	jule::Bool _12613_sign = false;
	if (_10515_x < 0LL) {
		_10515_x=static_cast<jule::F64>((-(_10515_x)));
		_12613_sign=true;
	}
	if (_10515_x >= 2LL) {
		jule::F64 _13214_s;
		jule::F64 _13217_c;
		std::tie(_13214_s,_13217_c) = _1b5b280a0_sincos(_10515_x);
		jule::F64 _13317_ss = (-(_13214_s)) - _13217_c;
		jule::F64 _13417_cc = _13214_s - _13217_c;
		if (_10515_x < 89884656743115790000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) {
			jule::F64 _13817_z = _1b5a241aa_cos(static_cast<jule::F64>(_10515_x + _10515_x));
			if ((_13214_s * _13217_c) > 0LL) {
				_13417_cc=static_cast<jule::F64>(jule::div(_13817_z,_13317_ss));
			} else {
				_13317_ss=static_cast<jule::F64>(jule::div(_13817_z,_13417_cc));
			}
		}
		jule::F64 _14917_z = 0LL;
		if (_10515_x > 5188146770730811392LL) {
			_14917_z=static_cast<jule::F64>(jule::div(0.5641895835477563 * _13417_cc,_1b5dbbec0_sqrt(_10515_x)));
		} else {
			jule::F64 _15317_u = _1b5b08a97_pone(_10515_x);
			jule::F64 _15417_v = _1b5b08a97_qone(_10515_x);
			_14917_z=static_cast<jule::F64>(jule::div(0.5641895835477563 * ((_15317_u * _13417_cc) - (_15417_v * _13317_ss)),_1b5dbbec0_sqrt(_10515_x)));
		}
		if (_12613_sign) {
			return static_cast<jule::F64>((-(_14917_z)));
		}
		return _14917_z;
	}
	if (_10515_x < 0.000000007450580596923828) {
		return static_cast<jule::F64>(0.5 * _10515_x);
	}
	jule::F64 _16613_z = _10515_x * _10515_x;
	jule::F64 _16713_r = _16613_z * (-0.0625 + (_16613_z * (0.001407056669551897 + (_16613_z * (-0.00001599556310840356 + (_16613_z * 0.000000049672799960958445))))));
	jule::F64 _1689_s = 1LL + (_16613_z * (0.019153759953836346 + (_16613_z * (0.00018594678558863092 + (_16613_z * (0.0000011771846404262368 + (_16613_z * (0.0000000050463625707621704 + (_16613_z * 0.000000000012354227442613791)))))))));
	_16713_r*=_10515_x;
	_16613_z=static_cast<jule::F64>((0.5 * _10515_x) + jule::div(_16713_r,_1689_s));
	if (_12613_sign) {
		return static_cast<jule::F64>((-(_16613_z)));
	}
	return _16613_z;
}



inline jule::F64 _1b5b08a97_y1(jule::F64 _18411_x) {
	
	
	
	
	
	
	
	
	
	
	
	
	{
		if (!((_18411_x < 0LL) || (_1b5ab659e_is_nan(_18411_x)))) { goto _case_end_4422115744; }
		_case_begin_4422115744:;
		{
			return static_cast<jule::F64>(_1b5ab659e_nan());
		}
		goto _match_end_4422115552;
		_case_end_4422115744:;
		if (!((_1b5ab659e_is_inf(_18411_x,1LL)))) { goto _case_end_4422115872; }
		_case_begin_4422115872:;
		{
			return 0LL;
		}
		goto _match_end_4422115552;
		_case_end_4422115872:;
		if (!((_18411_x == 0LL))) { goto _case_end_4422116000; }
		_case_begin_4422116000:;
		{
			return static_cast<jule::F64>(_1b5ab659e_inf(-1LL));
		}
		goto _match_end_4422115552;
		_case_end_4422116000:;
		_match_end_4422115552:;
	}
	if (_18411_x >= 2LL) {
		jule::F64 _20814_s;
		jule::F64 _20817_c;
		std::tie(_20814_s,_20817_c) = _1b5b280a0_sincos(_18411_x);
		jule::F64 _20917_ss = (-(_20814_s)) - _20817_c;
		jule::F64 _21017_cc = _20814_s - _20817_c;
		if (_18411_x < 89884656743115790000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) {
			jule::F64 _21417_z = _1b5a241aa_cos(static_cast<jule::F64>(_18411_x + _18411_x));
			if ((_20814_s * _20817_c) > 0LL) {
				_21017_cc=static_cast<jule::F64>(jule::div(_21417_z,_20917_ss));
			} else {
				_20917_ss=static_cast<jule::F64>(jule::div(_21417_z,_21017_cc));
			}
		}
		jule::F64 _23217_z = 0LL;
		if (_18411_x > 5188146770730811392LL) {
			_23217_z=static_cast<jule::F64>(jule::div(0.5641895835477563 * _20917_ss,_1b5dbbec0_sqrt(_18411_x)));
		} else {
			jule::F64 _23617_u = _1b5b08a97_pone(_18411_x);
			jule::F64 _23717_v = _1b5b08a97_qone(_18411_x);
			_23217_z=static_cast<jule::F64>(jule::div(0.5641895835477563 * ((_23617_u * _20917_ss) + (_23717_v * _21017_cc)),_1b5dbbec0_sqrt(_18411_x)));
		}
		return _23217_z;
	}
	if (_18411_x <= 0.00000000000000005551115123125783) {
		return static_cast<jule::F64>(jule::div(-0.6366197723675814,_18411_x));
	}
	jule::F64 _2459_z = _18411_x * _18411_x;
	jule::F64 _2469_u = -0.19605709064623894 + (_2459_z * (0.05044387166398113 + (_2459_z * (-0.0019125689587576355 + (_2459_z * (0.00002352526005616105 + (_2459_z * -0.00000009190991580398789)))))));
	jule::F64 _2479_v = 1LL + (_2459_z * (0.01991673182366499 + (_2459_z * (0.00020255258102513517 + (_2459_z * (0.0000013560880109751623 + (_2459_z * (0.000000006227414523646215 + (_2459_z * 0.000000000016655924620799208)))))))));
	return static_cast<jule::F64>((_18411_x * jule::div(_2469_u,_2479_v)) + (0.6366197723675814 * ((_1b5b08a97_j1(_18411_x) * _1b5b07eb4_log(_18411_x)) - jule::div(1LL,_18411_x))));
}



inline jule::F64 _1b5b08a97_pone(jule::F64 _3289_x) {
	jule::Array<jule::F64,6>* _32913_p = nullptr;
	jule::Array<jule::F64,5>* _33013_q = nullptr;
	if (_3289_x >= 8LL) {
		_32913_p=(&(_1b5b08a97_P_1R8));
		_33013_q=(&(_1b5b08a97_P_1S8));
	} else if (_3289_x >= 4.5454) {
		_32913_p=(&(_1b5b08a97_P_1R5));
		_33013_q=(&(_1b5b08a97_P_1S5));
	} else if (_3289_x >= 2.8571) {
		_32913_p=(&(_1b5b08a97_P_1R3));
		_33013_q=(&(_1b5b08a97_P_1S3));
	} else if (_3289_x >= 2LL) {
		_32913_p=(&(_1b5b08a97_P_1R2));
		_33013_q=(&(_1b5b08a97_P_1S2));
	}
	{
		jule::F64 _34513_z = jule::div(1LL,_3289_x * _3289_x);
		jule::F64 _34613_r = (*(_32913_p))[0LL] + (_34513_z * ((*(_32913_p))[1LL] + (_34513_z * ((*(_32913_p))[2LL] + (_34513_z * ((*(_32913_p))[3LL] + (_34513_z * ((*(_32913_p))[4LL] + (_34513_z * (*(_32913_p))[5LL])))))))));
		jule::F64 _34713_s = 1LL + (_34513_z * ((*(_33013_q))[0LL] + (_34513_z * ((*(_33013_q))[1LL] + (_34513_z * ((*(_33013_q))[2LL] + (_34513_z * ((*(_33013_q))[3LL] + (_34513_z * (*(_33013_q))[4LL])))))))));
		return static_cast<jule::F64>(1LL + jule::div(_34613_r,_34713_s));
	}
}



inline jule::F64 _1b5b08a97_qone(jule::F64 _4339_x) {
	jule::Array<jule::F64,6>* _43413_p = nullptr;
	jule::Array<jule::F64,6>* _43513_q = nullptr;
	if (_4339_x >= 8LL) {
		_43413_p=(&(_1b5b08a97_Q_1R8));
		_43513_q=(&(_1b5b08a97_Q_1S8));
	} else if (_4339_x >= 4.5454) {
		_43413_p=(&(_1b5b08a97_Q_1R5));
		_43513_q=(&(_1b5b08a97_Q_1S5));
	} else if (_4339_x >= 2.8571) {
		_43413_p=(&(_1b5b08a97_Q_1R3));
		_43513_q=(&(_1b5b08a97_Q_1S3));
	} else if (_4339_x >= 2LL) {
		_43413_p=(&(_1b5b08a97_Q_1R2));
		_43513_q=(&(_1b5b08a97_Q_1S2));
	}
	{
		jule::F64 _45013_z = jule::div(1LL,_4339_x * _4339_x);
		jule::F64 _45113_r = (*(_43413_p))[0LL] + (_45013_z * ((*(_43413_p))[1LL] + (_45013_z * ((*(_43413_p))[2LL] + (_45013_z * ((*(_43413_p))[3LL] + (_45013_z * ((*(_43413_p))[4LL] + (_45013_z * (*(_43413_p))[5LL])))))))));
		jule::F64 _45213_s = 1LL + (_45013_z * ((*(_43513_q))[0LL] + (_45013_z * ((*(_43513_q))[1LL] + (_45013_z * ((*(_43513_q))[2LL] + (_45013_z * ((*(_43513_q))[3LL] + (_45013_z * ((*(_43513_q))[4LL] + (_45013_z * (*(_43513_q))[5LL])))))))))));
		return static_cast<jule::F64>(jule::div(0.375 + jule::div(_45113_r,_45213_s),_4339_x));
	}
}



inline jule::U64 _1b5b81c63_zero(jule::U64 _409_x) {
	if (_409_x == 0LL) {
		return 1LL;
	}
	return 0LL;
}



inline jule::U64 _1b5b81c63_nonzero(jule::U64 _4912_x) {
	if (_4912_x != 0LL) {
		return 1LL;
	}
	return 0LL;
}



inline std::tuple<jule::U64,jule::U64> _1b5b81c63_shl(jule::U64 _588_u1,jule::U64 _5817_u2,jule::Uint _5826_n) {
	jule::U64 _5837_r1 = jule::U64();
	jule::U64 _5846_r2 = jule::U64();
	_5837_r1=static_cast<jule::U64>(((_588_u1 << _5826_n) | (_5817_u2 >> (64LL - _5826_n))) | (_5817_u2 << (_5826_n - 64LL)));
	_5846_r2=static_cast<jule::U64>(_5817_u2 << _5826_n);
	return std::make_tuple(_5837_r1,_5846_r2);
}



inline std::tuple<jule::U64,jule::U64> _1b5b81c63_shr(jule::U64 _648_u1,jule::U64 _6417_u2,jule::Uint _6426_n) {
	jule::U64 _6437_r1 = jule::U64();
	jule::U64 _6446_r2 = jule::U64();
	jule::U64 _7113_shift = _648_u1;
	jule::Uint _7213_shift_n = _6426_n - 64LL;
	_iter_begin_4422205392:;
	if (!((_7113_shift > 0LL) && (_7213_shift_n > 0LL))) { goto _iter_end_4422205392; }
	{
		(_7213_shift_n)--;
		_7113_shift>>=1LL;
	}
	_iter_next_4422205392:;
	goto _iter_begin_4422205392;
	_iter_end_4422205392:;
	_6446_r2=static_cast<jule::U64>(((_6417_u2 >> _6426_n) | (_648_u1 << (64LL - _6426_n))) | _7113_shift);
	_6437_r1=static_cast<jule::U64>(_648_u1 >> _6426_n);
	return std::make_tuple(_6437_r1,_6446_r2);
}



inline std::tuple<jule::U64,jule::U64> _1b5b81c63_shrcompress(jule::U64 _8716_u1,jule::U64 _8725_u2,jule::Uint _8734_n) {
	jule::U64 _8745_r1 = jule::U64();
	jule::U64 _8754_r2 = jule::U64();
	{
		if (!((_8734_n == 0LL))) { goto _case_end_4422212864; }
		_case_begin_4422212864:;
		{
			_8745_r1 = _8716_u1;
			_8754_r2 = _8725_u2;
			return std::make_tuple(_8745_r1,_8754_r2);
		}
		goto _match_end_4422212576;
		_case_end_4422212864:;
		if (!((_8734_n == 64LL))) { goto _case_end_4422212992; }
		_case_begin_4422212992:;
		{
			_8745_r1 = 0LL;
			_8754_r2 = static_cast<jule::U64>(_8716_u1 | _1b5b81c63_nonzero(_8725_u2));
			return std::make_tuple(_8745_r1,_8754_r2);
		}
		goto _match_end_4422212576;
		_case_end_4422212992:;
		if (!((_8734_n >= 128LL))) { goto _case_end_4422213120; }
		_case_begin_4422213120:;
		{
			_8745_r1 = 0LL;
			_8754_r2 = static_cast<jule::U64>(_1b5b81c63_nonzero(static_cast<jule::U64>(_8716_u1 | _8725_u2)));
			return std::make_tuple(_8745_r1,_8754_r2);
		}
		goto _match_end_4422212576;
		_case_end_4422213120:;
		if (!((_8734_n < 64LL))) { goto _case_end_4422213248; }
		_case_begin_4422213248:;
		{
			std::tie(_8745_r1,_8754_r2) = _1b5b81c63_shr(_8716_u1,_8725_u2,_8734_n);
			_8754_r2|=static_cast<jule::U64>(_1b5b81c63_nonzero(static_cast<jule::U64>(_8725_u2 & ((1LL << _8734_n) - 1LL))));
		}
		goto _match_end_4422212576;
		_case_end_4422213248:;
		if (!((_8734_n < 128LL))) { goto _case_end_4422213376; }
		_case_begin_4422213376:;
		{
			std::tie(_8745_r1,_8754_r2) = _1b5b81c63_shr(_8716_u1,_8725_u2,_8734_n);
			_8754_r2|=static_cast<jule::U64>(_1b5b81c63_nonzero(static_cast<jule::U64>((_8716_u1 & ((1LL << (_8734_n - 64LL)) - 1LL)) | _8725_u2)));
		}
		goto _match_end_4422212576;
		_case_end_4422213376:;
		_match_end_4422212576:;
	}
	return std::make_tuple(_8745_r1,_8754_r2);
}



inline jule::I32 _1b5b81c63_lz(jule::U64 _1057_u1,jule::U64 _10516_u2) {
	jule::I32 _10527_l = jule::I32();
	_10527_l=static_cast<jule::I32>(_1b5e977e8_leading_zeros64(_1057_u1));
	if (_10527_l == 64LL) {
		_10527_l+=static_cast<jule::I32>(_1b5e977e8_leading_zeros64(_10516_u2));
	}
	_10527_l = _10527_l;
	return _10527_l;
}



inline std::tuple<jule::U32,jule::I32,jule::U64> _1b5b81c63_split(jule::U64 _11610_b) {
	jule::U32 _11620_sign = jule::U32();
	jule::I32 _11631_exp = jule::I32();
	jule::U64 _11641_mantissa = jule::U64();
	_11620_sign=static_cast<jule::U32>(_11610_b >> 63LL);
	_11631_exp=static_cast<jule::I32>(static_cast<jule::I32>(_11610_b >> 52LL) & 2047LL);
	_11641_mantissa=static_cast<jule::U64>(_11610_b & 4503599627370495LL);
	if (_11631_exp == 0LL) {
		jule::Uint _12313_shift = static_cast<jule::Uint>(_1b5e977e8_leading_zeros64(_11641_mantissa) - 11LL);
		_11641_mantissa<<=_12313_shift;
		_11631_exp=static_cast<jule::I32>(1LL - static_cast<jule::I32>(_12313_shift));
	} else {
		_11641_mantissa|=4503599627370496LL;
	}
	return std::make_tuple(_11620_sign,_11631_exp,_11641_mantissa);
}



inline jule::F64 _1b5b81c63_fma(jule::F64 _13512_x,jule::F64 _13520_y,jule::F64 _13528_z) {
	jule::U64 _13610_bx = _1b5a07116_f64_bits(_13512_x);
	jule::U64 _13614_by = _1b5a07116_f64_bits(_13520_y);
	jule::U64 _13618_bz = _1b5a07116_f64_bits(_13528_z);
	std::tie(_13610_bx,_13614_by,_13618_bz) = std::make_tuple(_1b5a07116_f64_bits(_13512_x),_1b5a07116_f64_bits(_13520_y),_1b5a07116_f64_bits(_13528_z));
	if (((((_13512_x == 0LL) || (_13520_y == 0LL)) || (_13528_z == 0LL)) || ((_13610_bx & 9218868437227405312LL) == 9218868437227405312LL)) || ((_13614_by & 9218868437227405312LL) == 9218868437227405312LL)) {
		return static_cast<jule::F64>((_13512_x * _13520_y) + _13528_z);
	}
	if ((_13618_bz & 9218868437227405312LL) == 9218868437227405312LL) {
		return _13528_z;
	}
	jule::U32 _15010_xs;
	jule::I32 _15014_xe;
	jule::U64 _15018_xm;
	std::tie(_15010_xs,_15014_xe,_15018_xm) = _1b5b81c63_split(_13610_bx);
	jule::U32 _15110_ys;
	jule::I32 _15114_ye;
	jule::U64 _15118_ym;
	std::tie(_15110_ys,_15114_ye,_15118_ym) = _1b5b81c63_split(_13614_by);
	jule::U32 _15214_zs;
	jule::I32 _15222_ze;
	jule::U64 _15226_zm;
	std::tie(_15214_zs,_15222_ze,_15226_zm) = _1b5b81c63_split(_13618_bz);
	jule::I32 _15613_pe = ((_15014_xe + _15114_ye) - 1023LL) + 1LL;
	jule::U64 _16114_pm1;
	jule::U64 _16123_pm2;
	std::tie(_16114_pm1,_16123_pm2) = _1b5e977e8_mul64(static_cast<jule::U64>(_15018_xm << 10LL),static_cast<jule::U64>(_15118_ym << 11LL));
	jule::U64 _16214_zm1 = _15226_zm << 10LL;
	jule::U64 _16223_zm2 = static_cast<jule::U64>(0LLU);
	std::tie(_16214_zm1,_16223_zm2) = std::make_tuple(_15226_zm << 10LL,static_cast<jule::U64>(0LLU));
	jule::U32 _16313_ps = _15010_xs ^ _15110_ys;
	jule::Uint _1669_is62zero = static_cast<jule::Uint>(((~(_16114_pm1)) >> 62LL) & 1LL);
	std::tie(_16114_pm1,_16123_pm2) = _1b5b81c63_shl(_16114_pm1,_16123_pm2,_1669_is62zero);
	_15613_pe-=static_cast<jule::I32>(_1669_is62zero);
	if ((_15613_pe < _15222_ze) || ((_15613_pe == _15222_ze) && (_16114_pm1 < _16214_zm1))) {
		std::tie(_16313_ps,_15613_pe,_16114_pm1,_16123_pm2,_15214_zs,_15222_ze,_16214_zm1,_16223_zm2) = std::make_tuple(_15214_zs,_15222_ze,_16214_zm1,_16223_zm2,_16313_ps,static_cast<jule::I32>(_15613_pe),_16114_pm1,_16123_pm2);
	}
	std::tie(_16214_zm1,_16223_zm2) = _1b5b81c63_shrcompress(_16214_zm1,_16223_zm2,static_cast<jule::Uint>(_15613_pe - _15222_ze));
	jule::U64 _17913_m = 0LLU;
	jule::U64 _18013_c = 0LLU;
	if (_16313_ps == _15214_zs) {
		std::tie(_16123_pm2,_18013_c) = _1b5e977e8_add64(_16123_pm2,_16223_zm2,0LLU);
		std::tie(_16114_pm1,std::ignore) = _1b5e977e8_add64(_16114_pm1,_16214_zm1,_18013_c);
		_15613_pe-=static_cast<jule::I32>((~(_16114_pm1)) >> 63LL);
		std::tie(_16114_pm1,_17913_m) = _1b5b81c63_shrcompress(_16114_pm1,_16123_pm2,static_cast<jule::Uint>(64LL + (_16114_pm1 >> 63LL)));
	} else {
		std::tie(_16123_pm2,_18013_c) = _1b5e977e8_sub64(_16123_pm2,_16223_zm2,0LLU);
		std::tie(_16114_pm1,std::ignore) = _1b5e977e8_sub64(_16114_pm1,_16214_zm1,_18013_c);
		jule::I32 _19113_nz = _1b5b81c63_lz(_16114_pm1,_16123_pm2);
		_15613_pe-=_19113_nz;
		std::tie(_17913_m,_16123_pm2) = _1b5b81c63_shl(_16114_pm1,_16123_pm2,static_cast<jule::Uint>(_19113_nz - 1LL));
		_17913_m|=static_cast<jule::U64>(_1b5b81c63_nonzero(_16123_pm2));
	}
	if ((_15613_pe > 2045LL) || ((_15613_pe == 2045LL) && (((_17913_m + 512LL) >> 63LL) == 1LL))) {
		return static_cast<jule::F64>(_1b5a07116_f64_from_bits(static_cast<jule::U64>((static_cast<jule::U64>(_16313_ps) << 63LL) | 9218868437227405312LL)));
	}
	if (_15613_pe < 0LL) {
		jule::Uint _20313_n = static_cast<jule::Uint>((-(_15613_pe)));
		_17913_m=static_cast<jule::U64>((_17913_m >> _20313_n) | _1b5b81c63_nonzero(static_cast<jule::U64>(_17913_m & ((1LL << _20313_n) - 1LL))));
		_15613_pe=0LL;
	}
	_17913_m=static_cast<jule::U64>(((_17913_m + 512LL) >> 10LL) & (~(_1b5b81c63_zero(static_cast<jule::U64>((_17913_m & 1023LL) ^ 512LL)))));
	_15613_pe&=static_cast<jule::I32>((-(static_cast<jule::I32>(_1b5b81c63_nonzero(_17913_m)))));
	return static_cast<jule::F64>(_1b5a07116_f64_from_bits(static_cast<jule::U64>(((static_cast<jule::U64>(_16313_ps) << 63LL) + (static_cast<jule::U64>(_15613_pe) << 52LL)) + _17913_m)));
}



inline std::tuple<jule::F64,jule::F64> _1b5c13311_modf(jule::F64 _4413_f) {
	jule::F64 _4423_integer = jule::F64();
	jule::F64 _4437_frac = jule::F64();
	
	jule::F64 _469_abs_f = _1b5c0ce54_abs(_4413_f);
	jule::F64 _4713_i = 0LL;
	if (_469_abs_f > 4503599627370496LL) {
		_4713_i=_4413_f;
	} else {
		_4713_i=static_cast<jule::F64>(_469_abs_f + 4503599627370496LL);
		_4713_i-=4503599627370496LL;
		_iter_begin_4422295984:;
		if (!(_4713_i > _469_abs_f)) { goto _iter_end_4422295984; }
		{
			(_4713_i)--;
		}
		_iter_next_4422295984:;
		goto _iter_begin_4422295984;
		_iter_end_4422295984:;
		if (_4413_f < 0LL) {
			_4713_i=static_cast<jule::F64>((-(_4713_i)));
		}
	}
	_4423_integer = _4713_i;
	_4437_frac = static_cast<jule::F64>(_4413_f - _4713_i);
	return std::make_tuple(_4423_integer,_4437_frac);
}



inline jule::F64 _1b5cccee1_log10(jule::F64 _4014_x) {
	return static_cast<jule::F64>(_1b5b07eb4_log(_4014_x) * 0.43429448190325176);
}



inline jule::F64 _1b5cccee1_log2(jule::F64 _4413_x) {
	jule::F64 _4510_frac;
	jule::Int _4516_exp;
	std::tie(_4510_frac,_4516_exp) = _1b5a00d57_frexp(_4413_x);
	if (_4510_frac == 0.5) {
		return static_cast<jule::F64>(_4516_exp - 1LL);
	}
	return static_cast<jule::F64>((_1b5b07eb4_log(_4510_frac) * 1.4426950408889634) + static_cast<jule::F64>(_4516_exp));
}



inline jule::F64 _1b5ce3710_hypot(jule::F64 _5018_p,jule::F64 _5030_q) {
	{
		if (!((_1b5ab659e_is_inf(_5018_p,0LL)) || (_1b5ab659e_is_inf(_5030_q,0LL)))) { goto _case_end_4422308640; }
		_case_begin_4422308640:;
		{
			return static_cast<jule::F64>(_1b5ab659e_inf(1LL));
		}
		goto _match_end_4422308416;
		_case_end_4422308640:;
		if (!((_1b5ab659e_is_nan(_5018_p)) || (_1b5ab659e_is_nan(_5030_q)))) { goto _case_end_4422308768; }
		_case_begin_4422308768:;
		{
			return static_cast<jule::F64>(_1b5ab659e_nan());
		}
		goto _match_end_4422308416;
		_case_end_4422308768:;
		_match_end_4422308416:;
	}
	std::tie(_5018_p,_5030_q) = std::make_tuple(static_cast<jule::F64>(_1b5c0ce54_abs(_5018_p)),static_cast<jule::F64>(_1b5c0ce54_abs(_5030_q)));
	if (_5018_p < _5030_q) {
		std::tie(_5018_p,_5030_q) = std::make_tuple(_5030_q,_5018_p);
	}
	if (_5018_p == 0LL) {
		return 0LL;
	}
	_5030_q=static_cast<jule::F64>(jule::div(_5030_q,_5018_p));
	return static_cast<jule::F64>(_5018_p * _1b5dbbec0_sqrt(static_cast<jule::F64>(1LL + (_5030_q * _5030_q))));
}



inline jule::F64 _1b5cdb043_j0(jule::F64 _10715_x) {
	
	
	
	
	
	
	
	
	
	
	
	{
		if (!((_1b5ab659e_is_nan(_10715_x)))) { goto _case_end_4422328896; }
		_case_begin_4422328896:;
		{
			return _10715_x;
		}
		goto _match_end_4422328704;
		_case_end_4422328896:;
		if (!((_1b5ab659e_is_inf(_10715_x,0LL)))) { goto _case_end_4422329024; }
		_case_begin_4422329024:;
		{
			return 0LL;
		}
		goto _match_end_4422328704;
		_case_end_4422329024:;
		if (!((_10715_x == 0LL))) { goto _case_end_4422329152; }
		_case_begin_4422329152:;
		{
			return 1LL;
		}
		goto _match_end_4422328704;
		_case_end_4422329152:;
		_match_end_4422328704:;
	}
	_10715_x=static_cast<jule::F64>(_1b5c0ce54_abs(_10715_x));
	if (_10715_x >= 2LL) {
		jule::F64 _13214_s;
		jule::F64 _13217_c;
		std::tie(_13214_s,_13217_c) = _1b5b280a0_sincos(_10715_x);
		jule::F64 _13317_ss = _13214_s - _13217_c;
		jule::F64 _13417_cc = _13214_s + _13217_c;
		if (_10715_x < 89884656743115790000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) {
			jule::F64 _13817_z = (-(_1b5a241aa_cos(static_cast<jule::F64>(_10715_x + _10715_x))));
			if ((_13214_s * _13217_c) < 0LL) {
				_13417_cc=static_cast<jule::F64>(jule::div(_13817_z,_13317_ss));
			} else {
				_13317_ss=static_cast<jule::F64>(jule::div(_13817_z,_13417_cc));
			}
		}
		jule::F64 _14917_z = 0LL;
		if (_10715_x > 5188146770730811392LL) {
			_14917_z=static_cast<jule::F64>(jule::div(0.5641895835477563 * _13417_cc,_1b5dbbec0_sqrt(_10715_x)));
		} else {
			jule::F64 _15317_u = _1b5cdb043_pzero(_10715_x);
			jule::F64 _15417_v = _1b5cdb043_qzero(_10715_x);
			_14917_z=static_cast<jule::F64>(jule::div(0.5641895835477563 * ((_15317_u * _13417_cc) - (_15417_v * _13317_ss)),_1b5dbbec0_sqrt(_10715_x)));
		}
		return _14917_z;
	}
	if (_10715_x < 0.0001220703125) {
		if (_10715_x < 0.000000007450580596923828) {
			return 1LL;
		}
		return static_cast<jule::F64>(1LL - ((0.25 * _10715_x) * _10715_x));
	}
	jule::F64 _1659_z = _10715_x * _10715_x;
	jule::F64 _1669_r = _1659_z * (0.015624999999999995 + (_1659_z * (-0.00018997929423885472 + (_1659_z * (0.0000018295404953270067 + (_1659_z * -0.000000004618326885321032))))));
	jule::F64 _1679_s = 1LL + (_1659_z * (0.015619102946489001 + (_1659_z * (0.00011692678466333745 + (_1659_z * (0.0000005135465502073181 + (_1659_z * 0.0000000011661400333379)))))));
	if (_10715_x < 1LL) {
		return static_cast<jule::F64>(1LL + (_1659_z * (-0.25 + jule::div(_1669_r,_1679_s))));
	}
	jule::F64 _1719_u = 0.5 * _10715_x;
	return static_cast<jule::F64>(((1LL + _1719_u) * (1LL - _1719_u)) + (_1659_z * jule::div(_1669_r,_1679_s)));
}



inline jule::F64 _1b5cdb043_y0(jule::F64 _18211_x) {
	
	
	
	
	
	
	
	
	
	
	
	
	
	{
		if (!((_18211_x < 0LL) || (_1b5ab659e_is_nan(_18211_x)))) { goto _case_end_4422373008; }
		_case_begin_4422373008:;
		{
			return static_cast<jule::F64>(_1b5ab659e_nan());
		}
		goto _match_end_4422372816;
		_case_end_4422373008:;
		if (!((_1b5ab659e_is_inf(_18211_x,1LL)))) { goto _case_end_4422373136; }
		_case_begin_4422373136:;
		{
			return 0LL;
		}
		goto _match_end_4422372816;
		_case_end_4422373136:;
		if (!((_18211_x == 0LL))) { goto _case_end_4422373264; }
		_case_begin_4422373264:;
		{
			return static_cast<jule::F64>(_1b5ab659e_inf(-1LL));
		}
		goto _match_end_4422372816;
		_case_end_4422373264:;
		_match_end_4422372816:;
	}
	if (_18211_x >= 2LL) {
		jule::F64 _21814_s;
		jule::F64 _21817_c;
		std::tie(_21814_s,_21817_c) = _1b5b280a0_sincos(_18211_x);
		jule::F64 _21917_ss = _21814_s - _21817_c;
		jule::F64 _22017_cc = _21814_s + _21817_c;
		if (_18211_x < 89884656743115790000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) {
			jule::F64 _22717_z = (-(_1b5a241aa_cos(static_cast<jule::F64>(_18211_x + _18211_x))));
			if ((_21814_s * _21817_c) < 0LL) {
				_22017_cc=static_cast<jule::F64>(jule::div(_22717_z,_21917_ss));
			} else {
				_21917_ss=static_cast<jule::F64>(jule::div(_22717_z,_22017_cc));
			}
		}
		jule::F64 _23417_z = 0LL;
		if (_18211_x > 5188146770730811392LL) {
			_23417_z=static_cast<jule::F64>(jule::div(0.5641895835477563 * _21917_ss,_1b5dbbec0_sqrt(_18211_x)));
		} else {
			jule::F64 _23817_u = _1b5cdb043_pzero(_18211_x);
			jule::F64 _23917_v = _1b5cdb043_qzero(_18211_x);
			_23417_z=static_cast<jule::F64>(jule::div(0.5641895835477563 * ((_23817_u * _21917_ss) + (_23917_v * _22017_cc)),_1b5dbbec0_sqrt(_18211_x)));
		}
		return _23417_z;
	}
	if (_18211_x <= 0.000000007450580596923828) {
		return static_cast<jule::F64>(-0.07380429510868723 + (0.6366197723675814 * _1b5b07eb4_log(_18211_x)));
	}
	jule::F64 _2479_z = _18211_x * _18211_x;
	jule::F64 _2489_u = -0.07380429510868723 + (_2479_z * (0.17666645250918112 + (_2479_z * (-0.01381856719455969 + (_2479_z * (0.00034745343209368365 + (_2479_z * (-0.0000038140705372436416 + (_2479_z * (0.000000019559013703502292 + (_2479_z * -0.00000000003982051941321034)))))))))));
	jule::F64 _2499_v = 1LL + (_2479_z * (0.01273048348341237 + (_2479_z * (0.00007600686273503533 + (_2479_z * (0.0000002591508518404578 + (_2479_z * 0.00000000044111031133267547)))))));
	return static_cast<jule::F64>(jule::div(_2489_u,_2499_v) + ((0.6366197723675814 * _1b5cdb043_j0(_18211_x)) * _1b5b07eb4_log(_18211_x)));
}



inline jule::F64 _1b5cdb043_pzero(jule::F64 _33010_x) {
	jule::Array<jule::F64,6>* _33113_p = nullptr;
	jule::Array<jule::F64,5>* _33213_q = nullptr;
	if (_33010_x >= 8LL) {
		_33113_p=(&(_1b5cdb043_P_0R8));
		_33213_q=(&(_1b5cdb043_P_0S8));
	} else if (_33010_x >= 4.5454) {
		_33113_p=(&(_1b5cdb043_P_0R5));
		_33213_q=(&(_1b5cdb043_P_0S5));
	} else if (_33010_x >= 2.8571) {
		_33113_p=(&(_1b5cdb043_P_0R3));
		_33213_q=(&(_1b5cdb043_P_0S3));
	} else if (_33010_x >= 2LL) {
		_33113_p=(&(_1b5cdb043_P_0R2));
		_33213_q=(&(_1b5cdb043_P_0S2));
	}
	{
		jule::F64 _34713_z = jule::div(1LL,_33010_x * _33010_x);
		jule::F64 _34813_r = (*(_33113_p))[0LL] + (_34713_z * ((*(_33113_p))[1LL] + (_34713_z * ((*(_33113_p))[2LL] + (_34713_z * ((*(_33113_p))[3LL] + (_34713_z * ((*(_33113_p))[4LL] + (_34713_z * (*(_33113_p))[5LL])))))))));
		jule::F64 _34913_s = 1LL + (_34713_z * ((*(_33213_q))[0LL] + (_34713_z * ((*(_33213_q))[1LL] + (_34713_z * ((*(_33213_q))[2LL] + (_34713_z * ((*(_33213_q))[3LL] + (_34713_z * (*(_33213_q))[4LL])))))))));
		return static_cast<jule::F64>(1LL + jule::div(_34813_r,_34913_s));
	}
}



inline jule::F64 _1b5cdb043_qzero(jule::F64 _43510_x) {
	jule::Array<jule::F64,6>* _43613_p = nullptr;
	jule::Array<jule::F64,6>* _43713_q = nullptr;
	if (_43510_x >= 8LL) {
		_43613_p=(&(_1b5cdb043_Q_0R8));
		_43713_q=(&(_1b5cdb043_Q_0S8));
	} else if (_43510_x >= 4.5454) {
		_43613_p=(&(_1b5cdb043_Q_0R5));
		_43713_q=(&(_1b5cdb043_Q_0S5));
	} else if (_43510_x >= 2.8571) {
		_43613_p=(&(_1b5cdb043_Q_0R3));
		_43713_q=(&(_1b5cdb043_Q_0S3));
	} else if (_43510_x >= 2LL) {
		_43613_p=(&(_1b5cdb043_Q_0R2));
		_43713_q=(&(_1b5cdb043_Q_0S2));
	}
	{
		jule::F64 _45213_z = jule::div(1LL,_43510_x * _43510_x);
		jule::F64 _45313_r = (*(_43613_p))[0LL] + (_45213_z * ((*(_43613_p))[1LL] + (_45213_z * ((*(_43613_p))[2LL] + (_45213_z * ((*(_43613_p))[3LL] + (_45213_z * ((*(_43613_p))[4LL] + (_45213_z * (*(_43613_p))[5LL])))))))));
		jule::F64 _45413_s = 1LL + (_45213_z * ((*(_43713_q))[0LL] + (_45213_z * ((*(_43713_q))[1LL] + (_45213_z * ((*(_43713_q))[2LL] + (_45213_z * ((*(_43713_q))[3LL] + (_45213_z * ((*(_43713_q))[4LL] + (_45213_z * (*(_43713_q))[5LL])))))))))));
		return static_cast<jule::F64>(jule::div(-0.125 + jule::div(_45313_r,_45413_s),_43510_x));
	}
}



inline jule::F64 _1cde6cc4a_ldexp(jule::F64 _4518_frac,jule::Int _4533_exp) {
	{
		if (!((_4518_frac == 0LL))) { goto _case_end_4422450960; }
		_case_begin_4422450960:;
		{
			return _4518_frac;
		}
		goto _match_end_4422432032;
		_case_end_4422450960:;
		if (!((_1b5ab659e_is_inf(_4518_frac,0LL)) || (_1b5ab659e_is_nan(_4518_frac)))) { goto _case_end_4422451088; }
		_case_begin_4422451088:;
		{
			return _4518_frac;
		}
		goto _match_end_4422432032;
		_case_end_4422451088:;
		_match_end_4422432032:;
	}
	jule::Int _5313_e = 0LL;
	std::tie(_4518_frac,_5313_e) = _1b5ab659e_normalize(_4518_frac);
	_4533_exp+=_5313_e;
	jule::U64 _5613_x = _1b5a07116_f64_bits(_4518_frac);
	_4533_exp+=static_cast<jule::Int>((static_cast<jule::Int>(_5613_x >> 52LL) & 2047LL) - 1023LL);
	if (_4533_exp < -1075LL) {
		return static_cast<jule::F64>(_1b5a8b860_copysign(0LL,_4518_frac));
	}
	if (_4533_exp > 1023LL) {
		if (_4518_frac < 0LL) {
			return static_cast<jule::F64>(_1b5ab659e_inf(-1LL));
		}
		return static_cast<jule::F64>(_1b5ab659e_inf(1LL));
	}
	jule::F64 _6713_m = 1LL;
	if (_4533_exp < -1022LL) {
		_4533_exp+=53LL;
		_6713_m=0.00000000000000011102230246251565;
	}
	_5613_x=static_cast<jule::U64>(_5613_x & -9218868437227405313LL);
	_5613_x|=static_cast<jule::U64>(static_cast<jule::U64>(_4533_exp + 1023LL) << 52LL);
	return static_cast<jule::F64>(_6713_m * _1b5a07116_f64_from_bits(_5613_x));
}



inline jule::Bool _1ce032bbc_signbit(jule::F64 _3916_x) {
	return (_1b5a07116_f64_bits(_3916_x) & 9223372036854775808LLU) != 0LL;
}



inline jule::F64 _1b54d2251_sinh(jule::F64 _5617_x) {
	
	
	
	
	
	
	
	jule::Bool _6613_sign = false;
	if (_5617_x < 0LL) {
		_5617_x=static_cast<jule::F64>((-(_5617_x)));
		_6613_sign=true;
	}
	jule::F64 _7213_temp = 0LL;
	{
		if (!((_5617_x > 21LL))) { goto _case_end_4422484160; }
		_case_begin_4422484160:;
		{
			_7213_temp=static_cast<jule::F64>(_1b5e05bda_exp(_5617_x) * 0.5);
		}
		goto _match_end_4422477840;
		_case_end_4422484160:;
		if (!((_5617_x > 0.5))) { goto _case_end_4422480128; }
		_case_begin_4422480128:;
		{
			jule::F64 _7713_ex = _1b5e05bda_exp(_5617_x);
			_7213_temp=static_cast<jule::F64>((_7713_ex - jule::div(1LL,_7713_ex)) * 0.5);
		}
		goto _match_end_4422477840;
		_case_end_4422480128:;
		_case_begin_4422477936:;
		{
			jule::F64 _8013_sq = _5617_x * _5617_x;
			_7213_temp=static_cast<jule::F64>(((((((-26.30563213397497 * _8013_sq) + -2894.211355989564) * _8013_sq) + -89912.72022039509) * _8013_sq) + -630767.3640497717) * _5617_x);
			_7213_temp=static_cast<jule::F64>(jule::div(_7213_temp,((((_8013_sq + -173.6789535582337) * _8013_sq) + 15215.17378790019) * _8013_sq) + -630767.3640497717));
		}
		goto _match_end_4422477840;
		_case_end_4422477936:;
		_match_end_4422477840:;
	}
	if (_6613_sign) {
		_7213_temp=static_cast<jule::F64>((-(_7213_temp)));
	}
	return _7213_temp;
}



inline jule::F64 _1b54d2251_cosh(jule::F64 _9717_x) {
	_9717_x=static_cast<jule::F64>(_1b5c0ce54_abs(_9717_x));
	if (_9717_x > 21LL) {
		return static_cast<jule::F64>(_1b5e05bda_exp(_9717_x) * 0.5);
	}
	jule::F64 _1029_ex = _1b5e05bda_exp(_9717_x);
	return static_cast<jule::F64>((_1029_ex + jule::div(1LL,_1029_ex)) * 0.5);
}



inline std::tuple<jule::F64,jule::Int> _1b54d7256_lgamma(jule::F64 _20519_x) {
	jule::F64 _20529_lgamma = jule::F64();
	jule::Int _20542_sign = jule::Int();
	
	
	
	
	
	
	
	_20542_sign=1LL;
	{
		if (!((_1b5ab659e_is_nan(_20519_x)))) { goto _case_end_4422501472; }
		_case_begin_4422501472:;
		{
			_20529_lgamma=_20519_x;
			return std::make_tuple(_20529_lgamma,_20542_sign);
		}
		goto _match_end_4422501296;
		_case_end_4422501472:;
		if (!((_1b5ab659e_is_inf(_20519_x,0LL)))) { goto _case_end_4422501680; }
		_case_begin_4422501680:;
		{
			_20529_lgamma=_20519_x;
			return std::make_tuple(_20529_lgamma,_20542_sign);
		}
		goto _match_end_4422501296;
		_case_end_4422501680:;
		if (!((_20519_x == 0LL))) { goto _case_end_4422501808; }
		_case_begin_4422501808:;
		{
			_20529_lgamma=static_cast<jule::F64>(_1b5ab659e_inf(1LL));
			return std::make_tuple(_20529_lgamma,_20542_sign);
		}
		goto _match_end_4422501296;
		_case_end_4422501808:;
		_match_end_4422501296:;
	}
	jule::Bool _22813_neg = false;
	if (_20519_x < 0LL) {
		_20519_x=static_cast<jule::F64>((-(_20519_x)));
		_22813_neg=true;
	}
	if (_20519_x < 0.000000000000000000000847033) {
		if (_22813_neg) {
			_20542_sign=-1LL;
		}
		_20529_lgamma=static_cast<jule::F64>((-(_1b5b07eb4_log(_20519_x))));
		return std::make_tuple(_20529_lgamma,_20542_sign);
	}
	jule::F64 _24113_nadj = 0LL;
	if (_22813_neg) {
		if (_20519_x >= 4503599627370496LL) {
			_20529_lgamma=static_cast<jule::F64>(_1b5ab659e_inf(1LL));
			return std::make_tuple(_20529_lgamma,_20542_sign);
		}
		jule::F64 _24713_t = _1b54d7256_sin_pi(_20519_x);
		if (_24713_t == 0LL) {
			_20529_lgamma=static_cast<jule::F64>(_1b5ab659e_inf(1LL));
			return std::make_tuple(_20529_lgamma,_20542_sign);
		}
		_24113_nadj=static_cast<jule::F64>(_1b5b07eb4_log(static_cast<jule::F64>(jule::div(3.141592653589793,_1b5c0ce54_abs(static_cast<jule::F64>(_24713_t * _20519_x))))));
		if (_24713_t < 0LL) {
			_20542_sign=-1LL;
		}
	}
	{
		if (!((_20519_x == 1LL) || (_20519_x == 2LL))) { goto _case_end_4422517520; }
		_case_begin_4422517520:;
		{
			_20529_lgamma=0LL;
			return std::make_tuple(_20529_lgamma,_20542_sign);
		}
		goto _match_end_4422518112;
		_case_end_4422517520:;
		if (!((_20519_x < 2LL))) { goto _case_end_4422519744; }
		_case_begin_4422519744:;
		{
			jule::F64 _26317_y = 0LL;
			jule::Int _26417_i = 0LL;
			if (_20519_x <= 0.9) {
				_20529_lgamma=static_cast<jule::F64>((-(_1b5b07eb4_log(_20519_x))));
				{
					if (!((_20519_x >= 0.7316321449683623))) { goto _case_end_4422526544; }
					_case_begin_4422526544:;
					{
						_26317_y=static_cast<jule::F64>(1LL - _20519_x);
						_26417_i=0LL;
					}
					goto _match_end_4422524736;
					_case_end_4422526544:;
					if (!((_20519_x >= 0.19163214496836223))) { goto _case_end_4422527520; }
					_case_begin_4422527520:;
					{
						_26317_y=static_cast<jule::F64>(_20519_x - 0.46163214496836225);
						_26417_i=1LL;
					}
					goto _match_end_4422524736;
					_case_end_4422527520:;
					_case_begin_4422525712:;
					{
						_26317_y=_20519_x;
						_26417_i=2LL;
					}
					goto _match_end_4422524736;
					_case_end_4422525712:;
					_match_end_4422524736:;
				}
			} else {
				_20529_lgamma=0LL;
				{
					if (!((_20519_x >= 1.7316321449683623))) { goto _case_end_4422532784; }
					_case_begin_4422532784:;
					{
						_26317_y=static_cast<jule::F64>(2LL - _20519_x);
						_26417_i=0LL;
					}
					goto _match_end_4422528384;
					_case_end_4422532784:;
					if (!((_20519_x >= 1.1916321449683622))) { goto _case_end_4422531824; }
					_case_begin_4422531824:;
					{
						_26317_y=static_cast<jule::F64>(_20519_x - 1.4616321449683622);
						_26417_i=1LL;
					}
					goto _match_end_4422528384;
					_case_end_4422531824:;
					_case_begin_4422530656:;
					{
						_26317_y=static_cast<jule::F64>(_20519_x - 1LL);
						_26417_i=2LL;
					}
					goto _match_end_4422528384;
					_case_end_4422530656:;
					_match_end_4422528384:;
				}
			}
			{
				auto _match_expr{ _26417_i };
				if (!((0LL) == _match_expr)) { goto _case_end_4422525824; }
				_case_begin_4422525824:;
				{
					jule::F64 _29417_z = _26317_y * _26317_y;
					jule::F64 _29517_p1 = _1b54d7256__LGAM_A[0LL] + (_29417_z * (_1b54d7256__LGAM_A[2LL] + (_29417_z * (_1b54d7256__LGAM_A[4LL] + (_29417_z * (_1b54d7256__LGAM_A[6LL] + (_29417_z * (_1b54d7256__LGAM_A[8LL] + (_29417_z * _1b54d7256__LGAM_A[10LL])))))))));
					jule::F64 _29617_p2 = _29417_z * (_1b54d7256__LGAM_A[1LL] + (_29417_z * ((+(_1b54d7256__LGAM_A[3LL])) + (_29417_z * (_1b54d7256__LGAM_A[5LL] + (_29417_z * (_1b54d7256__LGAM_A[7LL] + (_29417_z * (_1b54d7256__LGAM_A[9LL] + (_29417_z * _1b54d7256__LGAM_A[11LL]))))))))));
					jule::F64 _29717_p = (_26317_y * _29517_p1) + _29617_p2;
					_20529_lgamma+=static_cast<jule::F64>(_29717_p - (0.5 * _26317_y));
				}
				goto _match_end_4422534400;
				_case_end_4422525824:;
				if (!((1LL) == _match_expr)) { goto _case_end_4422531008; }
				_case_begin_4422531008:;
				{
					jule::F64 _30017_z = _26317_y * _26317_y;
					jule::F64 _30117_w = _30017_z * _26317_y;
					jule::F64 _30217_p1 = _1b54d7256__LGAM_T[0LL] + (_30117_w * (_1b54d7256__LGAM_T[3LL] + (_30117_w * (_1b54d7256__LGAM_T[6LL] + (_30117_w * (_1b54d7256__LGAM_T[9LL] + (_30117_w * _1b54d7256__LGAM_T[12LL])))))));
					jule::F64 _30317_p2 = _1b54d7256__LGAM_T[1LL] + (_30117_w * (_1b54d7256__LGAM_T[4LL] + (_30117_w * (_1b54d7256__LGAM_T[7LL] + (_30117_w * (_1b54d7256__LGAM_T[10LL] + (_30117_w * _1b54d7256__LGAM_T[13LL])))))));
					jule::F64 _30417_p3 = _1b54d7256__LGAM_T[2LL] + (_30117_w * (_1b54d7256__LGAM_T[5LL] + (_30117_w * (_1b54d7256__LGAM_T[8LL] + (_30117_w * (_1b54d7256__LGAM_T[11LL] + (_30117_w * _1b54d7256__LGAM_T[14LL])))))));
					jule::F64 _30517_p = (_30017_z * _30217_p1) - (-0.000000000000000003638676997039505 - (_30117_w * (_30317_p2 + (_26317_y * _30417_p3))));
					_20529_lgamma+=static_cast<jule::F64>(-0.12148629053584961 + _30517_p);
				}
				goto _match_end_4422534400;
				_case_end_4422531008:;
				if (!((2LL) == _match_expr)) { goto _case_end_4422523968; }
				_case_begin_4422523968:;
				{
					jule::F64 _30817_p1 = _26317_y * (_1b54d7256__LGAM_U[0LL] + (_26317_y * (_1b54d7256__LGAM_U[1LL] + (_26317_y * (_1b54d7256__LGAM_U[2LL] + (_26317_y * (_1b54d7256__LGAM_U[3LL] + (_26317_y * (_1b54d7256__LGAM_U[4LL] + (_26317_y * _1b54d7256__LGAM_U[5LL]))))))))));
					jule::F64 _30917_p2 = 1LL + (_26317_y * (_1b54d7256__LGAM_V[1LL] + (_26317_y * (_1b54d7256__LGAM_V[2LL] + (_26317_y * (_1b54d7256__LGAM_V[3LL] + (_26317_y * (_1b54d7256__LGAM_V[4LL] + (_26317_y * _1b54d7256__LGAM_V[5LL])))))))));
					_20529_lgamma+=static_cast<jule::F64>((-0.5 * _26317_y) + jule::div(_30817_p1,_30917_p2));
				}
				goto _match_end_4422534400;
				_case_end_4422523968:;
				_match_end_4422534400:;
			}
		}
		goto _match_end_4422518112;
		_case_end_4422519744:;
		if (!((_20519_x < 8LL))) { goto _case_end_4422519856; }
		_case_begin_4422519856:;
		{
			jule::Int _31313_i = static_cast<jule::Int>(_20519_x);
			jule::F64 _31413_y = _20519_x - static_cast<jule::F64>(_31313_i);
			jule::F64 _31513_p = _31413_y * (_1b54d7256__LGAM_S[0LL] + (_31413_y * (_1b54d7256__LGAM_S[1LL] + (_31413_y * (_1b54d7256__LGAM_S[2LL] + (_31413_y * (_1b54d7256__LGAM_S[3LL] + (_31413_y * (_1b54d7256__LGAM_S[4LL] + (_31413_y * (_1b54d7256__LGAM_S[5LL] + (_31413_y * _1b54d7256__LGAM_S[6LL]))))))))))));
			jule::F64 _31613_q = 1LL + (_31413_y * (_1b54d7256__LGAM_R[1LL] + (_31413_y * (_1b54d7256__LGAM_R[2LL] + (_31413_y * (_1b54d7256__LGAM_R[3LL] + (_31413_y * (_1b54d7256__LGAM_R[4LL] + (_31413_y * (_1b54d7256__LGAM_R[5LL] + (_31413_y * _1b54d7256__LGAM_R[6LL])))))))))));
			_20529_lgamma=static_cast<jule::F64>((0.5 * _31413_y) + jule::div(_31513_p,_31613_q));
			jule::F64 _31817_z = 1LL;
			{
				auto _match_expr{ _31313_i };
				if (!((7LL) == _match_expr)) { goto _case_end_4422610656; }
				_case_begin_4422610656:;
				{
					_31817_z*=static_cast<jule::F64>(_31413_y + 6LL);
					goto _case_begin_4422611040;
				}
				goto _match_end_4422597840;
				_case_end_4422610656:;
				if (!((6LL) == _match_expr)) { goto _case_end_4422611040; }
				_case_begin_4422611040:;
				{
					_31817_z*=static_cast<jule::F64>(_31413_y + 5LL);
					goto _case_begin_4422611152;
				}
				goto _match_end_4422597840;
				_case_end_4422611040:;
				if (!((5LL) == _match_expr)) { goto _case_end_4422611152; }
				_case_begin_4422611152:;
				{
					_31817_z*=static_cast<jule::F64>(_31413_y + 4LL);
					goto _case_begin_4422611264;
				}
				goto _match_end_4422597840;
				_case_end_4422611152:;
				if (!((4LL) == _match_expr)) { goto _case_end_4422611264; }
				_case_begin_4422611264:;
				{
					_31817_z*=static_cast<jule::F64>(_31413_y + 3LL);
					goto _case_begin_4422611376;
				}
				goto _match_end_4422597840;
				_case_end_4422611264:;
				if (!((3LL) == _match_expr)) { goto _case_end_4422611376; }
				_case_begin_4422611376:;
				{
					_31817_z*=static_cast<jule::F64>(_31413_y + 2LL);
					_20529_lgamma+=static_cast<jule::F64>(_1b5b07eb4_log(_31817_z));
				}
				goto _match_end_4422597840;
				_case_end_4422611376:;
				_match_end_4422597840:;
			}
		}
		goto _match_end_4422518112;
		_case_end_4422519856:;
		if (!((_20519_x < 288230376151711744LL))) { goto _case_end_4422519968; }
		_case_begin_4422519968:;
		{
			jule::F64 _33713_t = _1b5b07eb4_log(_20519_x);
			jule::F64 _33813_z = jule::div(1LL,_20519_x);
			jule::F64 _33913_y = _33813_z * _33813_z;
			jule::F64 _34013_w = _1b54d7256__LGAM_W[0LL] + (_33813_z * (_1b54d7256__LGAM_W[1LL] + (_33913_y * (_1b54d7256__LGAM_W[2LL] + (_33913_y * (_1b54d7256__LGAM_W[3LL] + (_33913_y * (_1b54d7256__LGAM_W[4LL] + (_33913_y * (_1b54d7256__LGAM_W[5LL] + (_33913_y * _1b54d7256__LGAM_W[6LL])))))))))));
			_20529_lgamma=static_cast<jule::F64>(((_20519_x - 0.5) * (_33713_t - 1LL)) + _34013_w);
		}
		goto _match_end_4422518112;
		_case_end_4422519968:;
		_case_begin_4422516528:;
		{
			_20529_lgamma=static_cast<jule::F64>(_20519_x * (_1b5b07eb4_log(_20519_x) - 1LL));
		}
		goto _match_end_4422518112;
		_case_end_4422516528:;
		_match_end_4422518112:;
	}
	if (_22813_neg) {
		_20529_lgamma=static_cast<jule::F64>(_24113_nadj - _20529_lgamma);
	}
	return std::make_tuple(_20529_lgamma,_20542_sign);
}



inline jule::F64 _1b54d7256_sin_pi(jule::F64 _35215_x) {
	
	
	if (_35215_x < 0.25) {
		return static_cast<jule::F64>((-(_1b5a241aa_sin(static_cast<jule::F64>(3.141592653589793 * _35215_x)))));
	}
	jule::F64 _36013_z = _1b5abde69_floor(_35215_x);
	jule::Int _36113_n = 0LL;
	if (_36013_z != _35215_x) {
		_35215_x=static_cast<jule::F64>(_1b5a00bae_mod(_35215_x,2LL));
		_36113_n=static_cast<jule::Int>(_35215_x * 4LL);
	} else {
		if (_35215_x >= 9007199254740992LL) {
			_35215_x=0LL;
			_36113_n=0LL;
		} else {
			if (_35215_x < 4503599627370496LL) {
				_36013_z=static_cast<jule::F64>(_35215_x + 4503599627370496LL);
			}
			_36113_n=static_cast<jule::Int>(1LL & _1b5a07116_f64_bits(_36013_z));
			_35215_x=static_cast<jule::F64>(_36113_n);
			_36113_n<<=2LL;
		}
	}
	{
		auto _match_expr{ _36113_n };
		if (!((0LL) == _match_expr)) { goto _case_end_4422638944; }
		_case_begin_4422638944:;
		{
			_35215_x=static_cast<jule::F64>(_1b5a241aa_sin(static_cast<jule::F64>(3.141592653589793 * _35215_x)));
		}
		goto _match_end_4422641856;
		_case_end_4422638944:;
		if (!((1LL) == _match_expr || (2LL) == _match_expr)) { goto _case_end_4422639536; }
		_case_begin_4422639536:;
		{
			_35215_x=static_cast<jule::F64>(_1b5a241aa_cos(static_cast<jule::F64>(3.141592653589793 * (0.5 - _35215_x))));
		}
		goto _match_end_4422641856;
		_case_end_4422639536:;
		if (!((3LL) == _match_expr || (4LL) == _match_expr)) { goto _case_end_4422644912; }
		_case_begin_4422644912:;
		{
			_35215_x=static_cast<jule::F64>(_1b5a241aa_sin(static_cast<jule::F64>(3.141592653589793 * (1LL - _35215_x))));
		}
		goto _match_end_4422641856;
		_case_end_4422644912:;
		if (!((5LL) == _match_expr || (6LL) == _match_expr)) { goto _case_end_4422645024; }
		_case_begin_4422645024:;
		{
			_35215_x=static_cast<jule::F64>((-(_1b5a241aa_cos(static_cast<jule::F64>(3.141592653589793 * (_35215_x - 1.5))))));
		}
		goto _match_end_4422641856;
		_case_end_4422645024:;
		_case_begin_4422631792:;
		{
			_35215_x=static_cast<jule::F64>(_1b5a241aa_sin(static_cast<jule::F64>(3.141592653589793 * (_35215_x - 2LL))));
		}
		goto _match_end_4422641856;
		_case_end_4422631792:;
		_match_end_4422641856:;
	}
	return static_cast<jule::F64>((-(_35215_x)));
}



inline jule::F64 _1b54d7b5d_acosh(jule::F64 _7314_x) {
	
	{
		if (!((_7314_x < 1LL) || (_1b5ab659e_is_nan(_7314_x)))) { goto _case_end_4422652544; }
		_case_begin_4422652544:;
		{
			return static_cast<jule::F64>(_1b5ab659e_nan());
		}
		goto _match_end_4422652352;
		_case_end_4422652544:;
		if (!((_7314_x == 1LL))) { goto _case_end_4422652672; }
		_case_begin_4422652672:;
		{
			return 0LL;
		}
		goto _match_end_4422652352;
		_case_end_4422652672:;
		if (!((_7314_x >= 268435456LL))) { goto _case_end_4422652800; }
		_case_begin_4422652800:;
		{
			return static_cast<jule::F64>(_1b5b07eb4_log(_7314_x) + 0.6931471805599453);
		}
		goto _match_end_4422652352;
		_case_end_4422652800:;
		if (!((_7314_x > 2LL))) { goto _case_end_4422652928; }
		_case_begin_4422652928:;
		{
			return static_cast<jule::F64>(_1b5b07eb4_log(static_cast<jule::F64>((2LL * _7314_x) - jule::div(1LL,_7314_x + _1b5dbbec0_sqrt(static_cast<jule::F64>((_7314_x * _7314_x) - 1LL))))));
		}
		goto _match_end_4422652352;
		_case_end_4422652928:;
		_match_end_4422652352:;
	}
	jule::F64 _869_t = _7314_x - 1LL;
	return static_cast<jule::F64>(_1b605ec01_log1p(static_cast<jule::F64>(_869_t + _1b5dbbec0_sqrt(static_cast<jule::F64>((2LL * _869_t) + (_869_t * _869_t))))));
}



inline jule::F64 _1b551b2ce_tanh(jule::F64 _10613_x) {
	
	jule::F64 _10813_z = _1b5c0ce54_abs(_10613_x);
	{
		if (!((_10813_z > 44.014845965556525))) { goto _case_end_4422675184; }
		_case_begin_4422675184:;
		{
			if (_10613_x < 0LL) {
				return -1LL;
			}
			return 1LL;
		}
		goto _match_end_4422664000;
		_case_end_4422675184:;
		if (!((_10813_z >= 0.625))) { goto _case_end_4422667120; }
		_case_begin_4422667120:;
		{
			jule::F64 _11613_s = _1b5e05bda_exp(static_cast<jule::F64>(2LL * _10813_z));
			_10813_z=static_cast<jule::F64>(1LL - jule::div(2LL,_11613_s + 1LL));
			if (_10613_x < 0LL) {
				_10813_z=static_cast<jule::F64>((-(_10813_z)));
			}
		}
		goto _match_end_4422664000;
		_case_end_4422667120:;
		_case_begin_4422664304:;
		{
			if (_10613_x == 0LL) {
				return _10613_x;
			}
			jule::F64 _12513_s = _10613_x * _10613_x;
			_10813_z=static_cast<jule::F64>(_10613_x + jule::div((_10613_x * _12513_s) * ((((_1b551b2ce_TANH_P[0LL] * _12513_s) + _1b551b2ce_TANH_P[1LL]) * _12513_s) + _1b551b2ce_TANH_P[2LL]),((((_12513_s + _1b551b2ce_TANH_Q[0LL]) * _12513_s) + _1b551b2ce_TANH_Q[1LL]) * _12513_s) + _1b551b2ce_TANH_Q[2LL]));
		}
		goto _match_end_4422664000;
		_case_end_4422664304:;
		_match_end_4422664000:;
	}
	return _10813_z;
}



inline jule::F64 _1b5589061_cbrt(jule::F64 _5617_x) {
	
	
	
	
	
	
	
	
	if (((_5617_x == 0LL) || _1b5ab659e_is_nan(_5617_x)) || _1b5ab659e_is_inf(_5617_x,0LL)) {
		return _5617_x;
	}
	jule::Bool _7113_sign = false;
	if (_5617_x < 0LL) {
		_5617_x=static_cast<jule::F64>((-(_5617_x)));
		_7113_sign=true;
	}
	jule::F64 _7813_t = _1b5a07116_f64_from_bits(static_cast<jule::U64>(jule::div(_1b5a07116_f64_bits(_5617_x),3LL) + 3071306043645493248LL));
	if (_5617_x < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014) {
		_7813_t=static_cast<jule::F64>(18014398509481984LL);
		_7813_t*=_5617_x;
		_7813_t=static_cast<jule::F64>(_1b5a07116_f64_from_bits(static_cast<jule::U64>(jule::div(_1b5a07116_f64_bits(_7813_t),3LL) + 2990241250352824320LL)));
	}
	jule::F64 _8713_r = jule::div(_7813_t * _7813_t,_5617_x);
	jule::F64 _8813_s = 0.5428571428571428 + (_8713_r * _7813_t);
	_7813_t*=static_cast<jule::F64>(0.35714285714285715 + jule::div(1.6071428571428572,(_8813_s + 1.4142857142857144) + jule::div(-0.7053061224489796,_8813_s)));
	_7813_t=static_cast<jule::F64>(_1b5a07116_f64_from_bits(static_cast<jule::U64>((_1b5a07116_f64_bits(_7813_t) & -1073741824LL) + 1073741824LL)));
	_8813_s=static_cast<jule::F64>(_7813_t * _7813_t);
	_8713_r=static_cast<jule::F64>(jule::div(_5617_x,_8813_s));
	jule::F64 _979_w = _7813_t + _7813_t;
	_8713_r=static_cast<jule::F64>(jule::div(_8713_r - _7813_t,_979_w + _8713_r));
	_7813_t=static_cast<jule::F64>(_7813_t + (_7813_t * _8713_r));
	if (_7113_sign) {
		_7813_t=static_cast<jule::F64>((-(_7813_t)));
	}
	return _7813_t;
}



inline jule::F64 _1b55867ab_pow(jule::F64 _6412_x,jule::F64 _6420_y) {
	{
		if (!((_6420_y == 0LL) || (_6412_x == 1LL))) { goto _case_end_4422708576; }
		_case_begin_4422708576:;
		{
			return 1LL;
		}
		goto _match_end_4422708256;
		_case_end_4422708576:;
		if (!((_6420_y == 1LL))) { goto _case_end_4422708704; }
		_case_begin_4422708704:;
		{
			return _6412_x;
		}
		goto _match_end_4422708256;
		_case_end_4422708704:;
		if (!((_1b5ab659e_is_nan(_6412_x)) || (_1b5ab659e_is_nan(_6420_y)))) { goto _case_end_4422708832; }
		_case_begin_4422708832:;
		{
			return static_cast<jule::F64>(_1b5ab659e_nan());
		}
		goto _match_end_4422708256;
		_case_end_4422708832:;
		if (!((_6412_x == 0LL))) { goto _case_end_4422708960; }
		_case_begin_4422708960:;
		{
			{
				if (!((_6420_y < 0LL))) { goto _case_end_4422711360; }
				_case_begin_4422711360:;
				{
					if (_1b55867ab_is_odd_int(_6420_y)) {
						return static_cast<jule::F64>(_1b5a8b860_copysign(static_cast<jule::F64>(_1b5ab659e_inf(1LL)),_6412_x));
					}
					return static_cast<jule::F64>(_1b5ab659e_inf(1LL));
				}
				goto _match_end_4422712816;
				_case_end_4422711360:;
				if (!((_6420_y > 0LL))) { goto _case_end_4422711488; }
				_case_begin_4422711488:;
				{
					if (_1b55867ab_is_odd_int(_6420_y)) {
						return _6412_x;
					}
					return 0LL;
				}
				goto _match_end_4422712816;
				_case_end_4422711488:;
				_match_end_4422712816:;
			}
		}
		goto _match_end_4422708256;
		_case_end_4422708960:;
		if (!((_1b5ab659e_is_inf(_6420_y,0LL)))) { goto _case_end_4422709088; }
		_case_begin_4422709088:;
		{
			{
				if (!((_6412_x == -1LL))) { goto _case_end_4422721152; }
				_case_begin_4422721152:;
				{
					return 1LL;
				}
				goto _match_end_4422713872;
				_case_end_4422721152:;
				if (!(((_1b5c0ce54_abs(_6412_x) < 1LL) == _1b5ab659e_is_inf(_6420_y,1LL)))) { goto _case_end_4422720896; }
				_case_begin_4422720896:;
				{
					return 0LL;
				}
				goto _match_end_4422713872;
				_case_end_4422720896:;
				_case_begin_4422718272:;
				{
					return static_cast<jule::F64>(_1b5ab659e_inf(1LL));
				}
				goto _match_end_4422713872;
				_case_end_4422718272:;
				_match_end_4422713872:;
			}
		}
		goto _match_end_4422708256;
		_case_end_4422709088:;
		if (!((_1b5ab659e_is_inf(_6412_x,0LL)))) { goto _case_end_4422709216; }
		_case_begin_4422709216:;
		{
			if (_1b5ab659e_is_inf(_6412_x,-1LL)) {
				return static_cast<jule::F64>(_1b55867ab_pow(static_cast<jule::F64>(jule::div(1LL,_6412_x)),static_cast<jule::F64>((-(_6420_y)))));
			}
			{
				if (!((_6420_y < 0LL))) { goto _case_end_4422725408; }
				_case_begin_4422725408:;
				{
					return 0LL;
				}
				goto _match_end_4422725264;
				_case_end_4422725408:;
				if (!((_6420_y > 0LL))) { goto _case_end_4422725520; }
				_case_begin_4422725520:;
				{
					return static_cast<jule::F64>(_1b5ab659e_inf(1LL));
				}
				goto _match_end_4422725264;
				_case_end_4422725520:;
				_match_end_4422725264:;
			}
		}
		goto _match_end_4422708256;
		_case_end_4422709216:;
		if (!((_6420_y == 0.5))) { goto _case_end_4422709344; }
		_case_begin_4422709344:;
		{
			return static_cast<jule::F64>(_1b5dbbec0_sqrt(_6412_x));
		}
		goto _match_end_4422708256;
		_case_end_4422709344:;
		if (!((_6420_y == -0.5))) { goto _case_end_4422709472; }
		_case_begin_4422709472:;
		{
			return static_cast<jule::F64>(jule::div(1LL,_1b5dbbec0_sqrt(_6412_x)));
		}
		goto _match_end_4422708256;
		_case_end_4422709472:;
		_match_end_4422708256:;
	}
	jule::F64 _10814_yi;
	jule::F64 _10822_yf;
	std::tie(_10814_yi,_10822_yf) = _1b5c13311_modf(static_cast<jule::F64>(_1b5c0ce54_abs(_6420_y)));
	if ((_10822_yf != 0LL) && (_6412_x < 0LL)) {
		return static_cast<jule::F64>(_1b5ab659e_nan());
	}
	if (_10814_yi >= 9223372036854775808LLU) {
		{
			if (!((_6412_x == -1LL))) { goto _case_end_4422735120; }
			_case_begin_4422735120:;
			{
				return 1LL;
			}
			goto _match_end_4422730608;
			_case_end_4422735120:;
			if (!(((_1b5c0ce54_abs(_6412_x) < 1LL) == (_6420_y > 0LL)))) { goto _case_end_4422734864; }
			_case_begin_4422734864:;
			{
				return 0LL;
			}
			goto _match_end_4422730608;
			_case_end_4422734864:;
			_case_begin_4422732864:;
			{
				return static_cast<jule::F64>(_1b5ab659e_inf(1LL));
			}
			goto _match_end_4422730608;
			_case_end_4422732864:;
			_match_end_4422730608:;
		}
	}
	jule::F64 _12613_a1 = 1LL;
	jule::Int _12713_ae = 0LL;
	if (_10822_yf != 0LL) {
		if (_10822_yf > 0.5) {
			(_10822_yf)--;
			(_10814_yi)++;
		}
		_12613_a1=static_cast<jule::F64>(_1b5e05bda_exp(static_cast<jule::F64>(_10822_yf * _1b5b07eb4_log(_6412_x))));
	}
	jule::F64 _14214_x1;
	jule::Int _14222_xe;
	std::tie(_14214_x1,_14222_xe) = _1b5a00d57_frexp(_6412_x);
	jule::I64 _14313_i = static_cast<jule::I64>(_10814_yi);
	_iter_begin_4422741760:;
	if (!(_14313_i != 0LL)) { goto _iter_end_4422741760; }
	{
		if ((_14222_xe < -4096LL) || (4096LL < _14222_xe)) {
			_12713_ae+=_14222_xe;
			goto _iter_end_4422741760;
		}
		if ((_14313_i & 1LL) == 1LL) {
			_12613_a1*=_14214_x1;
			_12713_ae+=_14222_xe;
		}
		_14214_x1*=_14214_x1;
		_14222_xe<<=1LL;
		if (_14214_x1 < 0.5) {
			_14214_x1+=_14214_x1;
			(_14222_xe)--;
		}
	}
	_iter_next_4422741760:;
	_14313_i>>=1LL;
	goto _iter_begin_4422741760;
	_iter_end_4422741760:;
	if (_6420_y < 0LL) {
		_12613_a1=static_cast<jule::F64>(jule::div(1LL,_12613_a1));
		_12713_ae=static_cast<jule::Int>((-(_12713_ae)));
	}
	return static_cast<jule::F64>(_1cde6cc4a_ldexp(_12613_a1,_12713_ae));
}



inline jule::Bool _1b55867ab_is_odd_int(jule::F64 _17615_x) {
	jule::F64 _17710_xi;
	jule::F64 _17714_xf;
	std::tie(_17710_xi,_17714_xf) = _1b5c13311_modf(_17615_x);
	return (_17714_xf == 0LL) && ((static_cast<jule::I64>(_17710_xi) & 1LL) == 1LL);
}



inline jule::F64 _1b5e05bda_exp(jule::F64 _12212_x) {
	
	
	
	
	
	
	{
		if (!((_1b5ab659e_is_nan(_12212_x)) || (_1b5ab659e_is_inf(_12212_x,1LL)))) { goto _case_end_4422760656; }
		_case_begin_4422760656:;
		{
			return _12212_x;
		}
		goto _match_end_4422759760;
		_case_end_4422760656:;
		if (!((_1b5ab659e_is_inf(_12212_x,-1LL)))) { goto _case_end_4422760768; }
		_case_begin_4422760768:;
		{
			return 0LL;
		}
		goto _match_end_4422759760;
		_case_end_4422760768:;
		if (!((_12212_x > 709.782712893384))) { goto _case_end_4422760880; }
		_case_begin_4422760880:;
		{
			return static_cast<jule::F64>(_1b5ab659e_inf(1LL));
		}
		goto _match_end_4422759760;
		_case_end_4422760880:;
		if (!((_12212_x < -745.1332191019411))) { goto _case_end_4422760992; }
		_case_begin_4422760992:;
		{
			return 0LL;
		}
		goto _match_end_4422759760;
		_case_end_4422760992:;
		if (!(((-0.000000003725290298461914 < _12212_x) && (_12212_x < 0.000000003725290298461914)))) { goto _case_end_4422761104; }
		_case_begin_4422761104:;
		{
			return static_cast<jule::F64>(1LL + _12212_x);
		}
		goto _match_end_4422759760;
		_case_end_4422761104:;
		_match_end_4422759760:;
	}
	jule::Int _14613_k = 0LL;
	{
		if (!((_12212_x < 0LL))) { goto _case_end_4422767504; }
		_case_begin_4422767504:;
		{
			_14613_k=static_cast<jule::Int>((1.4426950408889634 * _12212_x) - 0.5);
		}
		goto _match_end_4422764592;
		_case_end_4422767504:;
		if (!((_12212_x > 0LL))) { goto _case_end_4422767616; }
		_case_begin_4422767616:;
		{
			_14613_k=static_cast<jule::Int>((1.4426950408889634 * _12212_x) + 0.5);
		}
		goto _match_end_4422764592;
		_case_end_4422767616:;
		_match_end_4422764592:;
	}
	jule::F64 _1519_hi = _12212_x - (static_cast<jule::F64>(_14613_k) * 0.6931471803691238);
	jule::F64 _1529_lo = static_cast<jule::F64>(_14613_k) * 0.00000000019082149292705877;
	return static_cast<jule::F64>(_1b5e05bda_expmulti(_1519_hi,_1529_lo,_14613_k));
}



inline jule::F64 _1b5e05bda_exp2(jule::F64 _16013_x) {
	
	
	
	
	{
		if (!((_1b5ab659e_is_nan(_16013_x)) || (_1b5ab659e_is_inf(_16013_x,1LL)))) { goto _case_end_4422779312; }
		_case_begin_4422779312:;
		{
			return _16013_x;
		}
		goto _match_end_4422779104;
		_case_end_4422779312:;
		if (!((_1b5ab659e_is_inf(_16013_x,-1LL)))) { goto _case_end_4422779440; }
		_case_begin_4422779440:;
		{
			return 0LL;
		}
		goto _match_end_4422779104;
		_case_end_4422779440:;
		if (!((_16013_x > 1023.9999999999999))) { goto _case_end_4422779568; }
		_case_begin_4422779568:;
		{
			return static_cast<jule::F64>(_1b5ab659e_inf(1LL));
		}
		goto _match_end_4422779104;
		_case_end_4422779568:;
		if (!((_16013_x < -1074LL))) { goto _case_end_4422779696; }
		_case_begin_4422779696:;
		{
			return 0LL;
		}
		goto _match_end_4422779104;
		_case_end_4422779696:;
		_match_end_4422779104:;
	}
	jule::Int _18113_k = 0LL;
	{
		if (!((_16013_x > 0LL))) { goto _case_end_4422785120; }
		_case_begin_4422785120:;
		{
			_18113_k=static_cast<jule::Int>(_16013_x + 0.5);
		}
		goto _match_end_4422784368;
		_case_end_4422785120:;
		if (!((_16013_x < 0LL))) { goto _case_end_4422785232; }
		_case_begin_4422785232:;
		{
			_18113_k=static_cast<jule::Int>(_16013_x - 0.5);
		}
		goto _match_end_4422784368;
		_case_end_4422785232:;
		_match_end_4422784368:;
	}
	jule::F64 _1869_t = _16013_x - static_cast<jule::F64>(_18113_k);
	jule::F64 _1879_hi = _1869_t * 0.6931471803691238;
	jule::F64 _1889_lo = (-(_1869_t)) * 0.00000000019082149292705877;
	return static_cast<jule::F64>(_1b5e05bda_expmulti(_1879_hi,_1889_lo,_18113_k));
}



inline jule::F64 _1b5e05bda_expmulti(jule::F64 _19513_hi,jule::F64 _19522_lo,jule::Int _19531_k) {
	
	
	
	
	
	jule::F64 _2029_r = _19513_hi - _19522_lo;
	jule::F64 _2039_t = _2029_r * _2029_r;
	jule::F64 _2049_c = _2029_r - (_2039_t * (0.16666666666666666 + (_2039_t * (-0.0027777777777015593 + (_2039_t * (0.00006613756321437934 + (_2039_t * (-0.0000016533902205465252 + (_2039_t * 0.000000041381367970572385)))))))));
	jule::F64 _2059_y = 1LL - ((_19522_lo - jule::div(_2029_r * _2049_c,2LL - _2049_c)) - _19513_hi);
	return static_cast<jule::F64>(_1cde6cc4a_ldexp(_2059_y,_19531_k));
}



inline jule::F64 _1b605ec01_log1p(jule::F64 _12614_x) {
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	{
		if (!((_12614_x < -1LL) || (_1b5ab659e_is_nan(_12614_x)))) { goto _case_end_4422814272; }
		_case_begin_4422814272:;
		{
			return static_cast<jule::F64>(_1b5ab659e_nan());
		}
		goto _match_end_4422813312;
		_case_end_4422814272:;
		if (!((_12614_x == -1LL))) { goto _case_end_4422814384; }
		_case_begin_4422814384:;
		{
			return static_cast<jule::F64>(_1b5ab659e_inf(-1LL));
		}
		goto _match_end_4422813312;
		_case_end_4422814384:;
		if (!((_1b5ab659e_is_inf(_12614_x,1LL)))) { goto _case_end_4422822192; }
		_case_begin_4422822192:;
		{
			return static_cast<jule::F64>(_1b5ab659e_inf(1LL));
		}
		goto _match_end_4422813312;
		_case_end_4422822192:;
		_match_end_4422813312:;
	}
	jule::F64 _1529_absx = _1b5c0ce54_abs(_12614_x);
	jule::F64 _15413_f = 0LL;
	jule::U64 _15513_iu = 0LLU;
	jule::Int _15613_k = 1LL;
	if (_1529_absx < 0.41421356237309503) {
		if (_1529_absx < 0.000000001862645149230957) {
			if (_1529_absx < 0.00000000000000005551115123125783) {
				return _12614_x;
			}
			return static_cast<jule::F64>(_12614_x - ((_12614_x * _12614_x) * 0.5));
		}
		if (_12614_x > -0.2928932188134525) {
			_15613_k=0LL;
			_15413_f=_12614_x;
			_15513_iu=1LL;
		}
	}
	jule::F64 _17113_c = 0LL;
	if (_15613_k != 0LL) {
		jule::F64 _17317_u = 0LL;
		if (_1529_absx < 9007199254740992LL) {
			_17317_u=static_cast<jule::F64>(1LL + _12614_x);
			_15513_iu=static_cast<jule::U64>(_1b5a07116_f64_bits(_17317_u));
			_15613_k=static_cast<jule::Int>((_15513_iu >> 52LL) - 1023LL);
			if (_15613_k > 0LL) {
				_17113_c=static_cast<jule::F64>(1LL - (_17317_u - _12614_x));
			} else {
				_17113_c=static_cast<jule::F64>(_12614_x - (_17317_u - 1LL));
			}
			_17113_c = jule::div(_17113_c,_17317_u);
		} else {
			_17317_u=_12614_x;
			_15513_iu=static_cast<jule::U64>(_1b5a07116_f64_bits(_17317_u));
			_15613_k=static_cast<jule::Int>((_15513_iu >> 52LL) - 1023LL);
			_17113_c=0LL;
		}
		_15513_iu&=4503599627370495LL;
		if (_15513_iu < 1865452045155277LL) {
			_17317_u=static_cast<jule::F64>(_1b5a07116_f64_from_bits(static_cast<jule::U64>(_15513_iu | 4607182418800017408LL)));
		} else {
			(_15613_k)++;
			_17317_u=static_cast<jule::F64>(_1b5a07116_f64_from_bits(static_cast<jule::U64>(_15513_iu | 4602678819172646912LL)));
			_15513_iu=static_cast<jule::U64>((4503599627370496LL - _15513_iu) >> 2LL);
		}
		_15413_f=static_cast<jule::F64>(_17317_u - 1LL);
	}
	jule::F64 _2029_hfsq = (0.5 * _15413_f) * _15413_f;
	jule::F64 _20313_s = 0LL;
	jule::F64 _20413_R = 0LL;
	jule::F64 _20513_z = 0LL;
	if (_15513_iu == 0LL) {
		if (_15413_f == 0LL) {
			if (_15613_k == 0LL) {
				return 0LL;
			}
			_17113_c+=static_cast<jule::F64>(static_cast<jule::F64>(_15613_k) * 0.00000000019082149292705877);
			return static_cast<jule::F64>((static_cast<jule::F64>(_15613_k) * 0.6931471803691238) + _17113_c);
		}
		_20413_R=static_cast<jule::F64>(_2029_hfsq * (1LL - (0.6666666666666666 * _15413_f)));
		if (_15613_k == 0LL) {
			return static_cast<jule::F64>(_15413_f - _20413_R);
		}
		return static_cast<jule::F64>((static_cast<jule::F64>(_15613_k) * 0.6931471803691238) - ((_20413_R - ((static_cast<jule::F64>(_15613_k) * 0.00000000019082149292705877) + _17113_c)) - _15413_f));
	}
	_20313_s=static_cast<jule::F64>(jule::div(_15413_f,2LL + _15413_f));
	_20513_z=static_cast<jule::F64>(_20313_s * _20313_s);
	_20413_R=static_cast<jule::F64>(_20513_z * (0.6666666666666735 + (_20513_z * (0.3999999999940942 + (_20513_z * (0.2857142874366239 + (_20513_z * (0.22222198432149784 + (_20513_z * (0.1818357216161805 + (_20513_z * (0.15313837699209373 + (_20513_z * 0.14798198605116586)))))))))))));
	if (_15613_k == 0LL) {
		return static_cast<jule::F64>(_15413_f - (_2029_hfsq - (_20313_s * (_2029_hfsq + _20413_R))));
	}
	return static_cast<jule::F64>((static_cast<jule::F64>(_15613_k) * 0.6931471803691238) - ((_2029_hfsq - ((_20313_s * (_2029_hfsq + _20413_R)) + ((static_cast<jule::F64>(_15613_k) * 0.00000000019082149292705877) + _17113_c))) - _15413_f));
}



inline std::tuple<jule::F64,jule::F64> _1b5d5c8bc_stirling(jule::F64 _13113_x) {
	if (_13113_x > 200LL) {
		return std::make_tuple(static_cast<jule::F64>(_1b5ab659e_inf(1LL)),1LL);
	}
	
	
	jule::F64 _13713_w = jule::div(1LL,_13113_x);
	_13713_w=static_cast<jule::F64>(1LL + (_13713_w * ((((((((_1b5d5c8bc__GAM_S[0LL] * _13713_w) + _1b5d5c8bc__GAM_S[1LL]) * _13713_w) + _1b5d5c8bc__GAM_S[2LL]) * _13713_w) + _1b5d5c8bc__GAM_S[3LL]) * _13713_w) + _1b5d5c8bc__GAM_S[4LL])));
	jule::F64 _13913_y1 = _1b5e05bda_exp(_13113_x);
	jule::F64 _14013_y2 = 1LL;
	if (_13113_x > 143.01608) {
		jule::F64 _14213_v = _1b55867ab_pow(_13113_x,static_cast<jule::F64>((0.5 * _13113_x) - 0.25));
		std::tie(_13913_y1,_14013_y2) = std::make_tuple(_14213_v,static_cast<jule::F64>(jule::div(_14213_v,_13913_y1)));
	} else {
		_13913_y1=static_cast<jule::F64>(jule::div(_1b55867ab_pow(_13113_x,static_cast<jule::F64>(_13113_x - 0.5)),_13913_y1));
	}
	return std::make_tuple(_13913_y1,static_cast<jule::F64>((2.5066282746310007 * _13713_w) * _14013_y2));
}



inline jule::F64 _1b5d5c8bc_gamma(jule::F64 _15918_x) {
	
	{
		if (!((_1b5d5c8bc_is_neg_int(_15918_x)) || (_1b5ab659e_is_inf(_15918_x,-1LL)) || (_1b5ab659e_is_nan(_15918_x)))) { goto _case_end_4422891440; }
		_case_begin_4422891440:;
		{
			return static_cast<jule::F64>(_1b5ab659e_nan());
		}
		goto _match_end_4422891248;
		_case_end_4422891440:;
		if (!((_1b5ab659e_is_inf(_15918_x,1LL)))) { goto _case_end_4422891568; }
		_case_begin_4422891568:;
		{
			return static_cast<jule::F64>(_1b5ab659e_inf(1LL));
		}
		goto _match_end_4422891248;
		_case_end_4422891568:;
		if (!((_15918_x == 0LL))) { goto _case_end_4422891696; }
		_case_begin_4422891696:;
		{
			if (_1ce032bbc_signbit(_15918_x)) {
				return static_cast<jule::F64>(_1b5ab659e_inf(-1LL));
			}
			return static_cast<jule::F64>(_1b5ab659e_inf(1LL));
		}
		goto _match_end_4422891248;
		_case_end_4422891696:;
		_match_end_4422891248:;
	}
	jule::F64 _17313_q = _1b5c0ce54_abs(_15918_x);
	jule::F64 _17413_p = _1b5abde69_floor(_17313_q);
	if (_17313_q > 33LL) {
		if (_15918_x >= 0LL) {
			jule::F64 _17718_y1;
			jule::F64 _17722_y2;
			std::tie(_17718_y1,_17722_y2) = _1b5d5c8bc_stirling(_15918_x);
			return static_cast<jule::F64>(_17718_y1 * _17722_y2);
		}
		jule::Int _18317_signgam = 1LL;
		jule::I64 _18413_ip = static_cast<jule::I64>(_17413_p);
		if ((_18413_ip & 1LL) == 0LL) {
			_18317_signgam=-1LL;
		}
		jule::F64 _18817_z = _17313_q - _17413_p;
		if (_18817_z > 0.5) {
			_17413_p=static_cast<jule::F64>(_17413_p + 1LL);
			_18817_z=static_cast<jule::F64>(_17313_q - _17413_p);
		}
		_18817_z=static_cast<jule::F64>(_17313_q * _1b5a241aa_sin(static_cast<jule::F64>(3.141592653589793 * _18817_z)));
		if (_18817_z == 0LL) {
			return static_cast<jule::F64>(_1b5ab659e_inf(_18317_signgam));
		}
		jule::F64 _19714_sq1;
		jule::F64 _19719_sq2;
		std::tie(_19714_sq1,_19719_sq2) = _1b5d5c8bc_stirling(_17313_q);
		jule::F64 _19813_absz = _1b5c0ce54_abs(_18817_z);
		jule::F64 _19913_d = (_19813_absz * _19714_sq1) * _19719_sq2;
		if (_1b5ab659e_is_inf(_19913_d,0LL)) {
			_18817_z=static_cast<jule::F64>(jule::div(jule::div(jule::div(3.141592653589793,_19813_absz),_19714_sq1),_19719_sq2));
		} else {
			_18817_z=static_cast<jule::F64>(jule::div(3.141592653589793,_19913_d));
		}
		return static_cast<jule::F64>(static_cast<jule::F64>(_18317_signgam) * _18817_z);
	}
	jule::F64 _20913_z = 1LL;
	_iter_begin_4422935088:;
	if (!(_15918_x >= 3LL)) { goto _iter_end_4422935088; }
	{
		_15918_x=static_cast<jule::F64>(_15918_x - 1LL);
		_20913_z=static_cast<jule::F64>(_20913_z * _15918_x);
	}
	_iter_next_4422935088:;
	goto _iter_begin_4422935088;
	_iter_end_4422935088:;
	_iter_begin_4422916000:;
	if (!(_15918_x < 0LL)) { goto _iter_end_4422916000; }
	{
		if (_15918_x > -0.000000001) {
			goto _julec_label_small;
		}
		_20913_z=static_cast<jule::F64>(jule::div(_20913_z,_15918_x));
		_15918_x=static_cast<jule::F64>(_15918_x + 1LL);
	}
	_iter_next_4422916000:;
	goto _iter_begin_4422916000;
	_iter_end_4422916000:;
	_iter_begin_4422938864:;
	if (!(_15918_x < 2LL)) { goto _iter_end_4422938864; }
	{
		if (_15918_x < 0.000000001) {
			goto _julec_label_small;
		}
		_20913_z=static_cast<jule::F64>(jule::div(_20913_z,_15918_x));
		_15918_x=static_cast<jule::F64>(_15918_x + 1LL);
	}
	_iter_next_4422938864:;
	goto _iter_begin_4422938864;
	_iter_end_4422938864:;
	if (_15918_x == 2LL) {
		return _20913_z;
	}
	_15918_x=static_cast<jule::F64>(_15918_x - 2LL);
	_17413_p=static_cast<jule::F64>((((((((((((_15918_x * _1b5d5c8bc__GAM_P[0LL]) + _1b5d5c8bc__GAM_P[1LL]) * _15918_x) + _1b5d5c8bc__GAM_P[2LL]) * _15918_x) + _1b5d5c8bc__GAM_P[3LL]) * _15918_x) + _1b5d5c8bc__GAM_P[4LL]) * _15918_x) + _1b5d5c8bc__GAM_P[5LL]) * _15918_x) + _1b5d5c8bc__GAM_P[6LL]);
	_17313_q=static_cast<jule::F64>((((((((((((((_15918_x * _1b5d5c8bc__GAM_Q[0LL]) + _1b5d5c8bc__GAM_Q[1LL]) * _15918_x) + _1b5d5c8bc__GAM_Q[2LL]) * _15918_x) + _1b5d5c8bc__GAM_Q[3LL]) * _15918_x) + _1b5d5c8bc__GAM_Q[4LL]) * _15918_x) + _1b5d5c8bc__GAM_Q[5LL]) * _15918_x) + _1b5d5c8bc__GAM_Q[6LL]) * _15918_x) + _1b5d5c8bc__GAM_Q[7LL]);
	return static_cast<jule::F64>(jule::div(_20913_z * _17413_p,_17313_q));
	_julec_label_small:;
	if (_15918_x == 0LL) {
		return static_cast<jule::F64>(_1b5ab659e_inf(1LL));
	}
	return static_cast<jule::F64>(jule::div(_20913_z,(1LL + (0.5772156649015329 * _15918_x)) * _15918_x));
}



inline jule::Bool _1b5d5c8bc_is_neg_int(jule::F64 _24515_x) {
	if (_24515_x < 0LL) {
		jule::F64 _24717_xf;
		std::tie(std::ignore,_24717_xf) = _1b5c13311_modf(_24515_x);
		return _24717_xf == 0LL;
	}
	return false;
}



inline jule::F64 _1b5d748b2_erfinv(jule::F64 _10519_x) {
	if ((_1b5ab659e_is_nan(_10519_x) || (_10519_x <= -1LL)) || (_10519_x >= 1LL)) {
		if ((_10519_x == -1LL) || (_10519_x == 1LL)) {
			return static_cast<jule::F64>(_1b5ab659e_inf(static_cast<jule::Int>(_10519_x)));
		}
		return static_cast<jule::F64>(_1b5ab659e_nan());
	}
	jule::Bool _11413_sign = false;
	if (_10519_x < 0LL) {
		_10519_x=static_cast<jule::F64>((-(_10519_x)));
		_11413_sign=true;
	}
	jule::F64 _12013_ans = 0LL;
	if (_10519_x <= 0.85) {
		jule::F64 _12213_r = 0.180625 - ((0.25 * _10519_x) * _10519_x);
		jule::F64 _12313_z1 = (((((((((((((887.0940696254552 * _12213_r) + 11819.493347062295) * _12213_r) + 23782.041382114385) * _12213_r) + 16235.862515167575) * _12213_r) + 4854.886889384388) * _12213_r) + 697.062665343896) * _12213_r) + 47.07268811238398) * _12213_r) + 1.1975323115670913;
		jule::F64 _12413_z2 = (((((((((((((5226.495278852854 * _12213_r) + 28729.085735721943) * _12213_r) + 39307.89580009271) * _12213_r) + 21213.794301586597) * _12213_r) + 5394.196021424751) * _12213_r) + 687.1870074920579) * _12213_r) + 42.31333070160091) * _12213_r) + 1LL;
		_12013_ans=static_cast<jule::F64>(jule::div(_10519_x * _12313_z1,_12413_z2));
	} else {
		jule::F64 _12717_z1 = 0LL;
		jule::F64 _12817_z2 = 0LL;
		jule::F64 _12917_r = _1b5dbbec0_sqrt(static_cast<jule::F64>(0.6931471805599453 - _1b5b07eb4_log(static_cast<jule::F64>(1LL - _10519_x))));
		if (_12917_r <= 5LL) {
			_12917_r-=1.6;
			_12717_z1=static_cast<jule::F64>((((((((((((((0.0007745450142783414 * _12917_r) + 0.022723844989269184) * _12917_r) + 0.2417807251774506) * _12917_r) + 1.2704582524523684) * _12917_r) + 3.6478483247632045) * _12917_r) + 5.769497221460691) * _12917_r) + 4.630337846156546) * _12917_r) + 1.4234371107496835);
			_12817_z2=static_cast<jule::F64>((((((((((((((0.0000000014859850019840355 * _12917_r) + 0.0007744145906515771) * _12917_r) + 0.021494160384252878) * _12917_r) + 0.2094506521051275) * _12917_r) + 0.9754783200178743) * _12917_r) + 2.3707661626024534) * _12917_r) + 2.9036514445419948) * _12917_r) + 1.4142135623730951);
		} else {
			_12917_r-=5LL;
			_12717_z1=static_cast<jule::F64>((((((((((((((0.00000020103343992922881 * _12917_r) + 0.000027115555687434876) * _12917_r) + 0.0012426609473880784) * _12917_r) + 0.026532189526576124) * _12917_r) + 0.29656057182850487) * _12917_r) + 1.7848265399172913) * _12917_r) + 5.463784911164114) * _12917_r) + 6.657904643501103);
			_12817_z2=static_cast<jule::F64>((((((((((((((0.0000000000000028910246058729655 * _12917_r) + 0.0000002010321207683943) * _12917_r) + 0.000026110884050805935) * _12917_r) + 0.0011128009970788597) * _12917_r) + 0.02103693768272069) * _12917_r) + 0.19364809469506591) * _12917_r) + 0.8482908416595164) * _12917_r) + 1.4142135623730951);
		}
		_12013_ans=static_cast<jule::F64>(jule::div(_12717_z1,_12817_z2));
	}
	if (_11413_sign) {
		return static_cast<jule::F64>((-(_12013_ans)));
	}
	return _12013_ans;
}



inline jule::F64 _1b5d748b2_erfcinv(jule::F64 _15516_x) {
	return static_cast<jule::F64>(_1b5d748b2_erfinv(static_cast<jule::F64>(1LL - _15516_x)));
}



inline jule::F64 _1b5dbb871_erf(jule::F64 _21716_x) {
	
	
	{
		if (!((_1b5ab659e_is_nan(_21716_x)))) { goto _case_end_4423014176; }
		_case_begin_4423014176:;
		{
			return static_cast<jule::F64>(_1b5ab659e_nan());
		}
		goto _match_end_4423013904;
		_case_end_4423014176:;
		if (!((_1b5ab659e_is_inf(_21716_x,1LL)))) { goto _case_end_4423014288; }
		_case_begin_4423014288:;
		{
			return 1LL;
		}
		goto _match_end_4423013904;
		_case_end_4423014288:;
		if (!((_1b5ab659e_is_inf(_21716_x,-1LL)))) { goto _case_end_4423014400; }
		_case_begin_4423014400:;
		{
			return -1LL;
		}
		goto _match_end_4423013904;
		_case_end_4423014400:;
		_match_end_4423013904:;
	}
	jule::Bool _22913_sign = false;
	if (_21716_x < 0LL) {
		_21716_x=static_cast<jule::F64>((-(_21716_x)));
		_22913_sign=true;
	}
	if (_21716_x < 0.84375) {
		jule::F64 _23517_temp = 0LL;
		if (_21716_x < 0.000000003725290298461914) {
			if (_21716_x < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002848094538889218) {
				_23517_temp=static_cast<jule::F64>(0.125 * ((8LL * _21716_x) + (1.0270333367641007 * _21716_x)));
			} else {
				_23517_temp=static_cast<jule::F64>(_21716_x + (0.1283791670955126 * _21716_x));
			}
		} else {
			jule::F64 _24317_z = _21716_x * _21716_x;
			jule::F64 _24417_r = 0.12837916709551256 + (_24317_z * (-0.3250421072470015 + (_24317_z * (-0.02848174957559851 + (_24317_z * (-0.005770270296489442 + (_24317_z * -0.000023763016656650163)))))));
			jule::F64 _24517_s = 1LL + (_24317_z * (0.39791722395915535 + (_24317_z * (0.0650222499887673 + (_24317_z * (0.005081306281875766 + (_24317_z * (0.00013249473800432164 + (_24317_z * -0.000003960228278775368)))))))));
			jule::F64 _24617_y = jule::div(_24417_r,_24517_s);
			_23517_temp=static_cast<jule::F64>(_21716_x + (_21716_x * _24617_y));
		}
		if (_22913_sign) {
			return static_cast<jule::F64>((-(_23517_temp)));
		}
		return _23517_temp;
	}
	if (_21716_x < 1.25) {
		jule::F64 _25513_s = _21716_x - 1LL;
		jule::F64 _25613_P = -0.0023621185607526594 + (_25513_s * (0.41485611868374833 + (_25513_s * (-0.3722078760357013 + (_25513_s * (0.31834661990116175 + (_25513_s * (-0.11089469428239668 + (_25513_s * (0.035478304325618236 + (_25513_s * -0.002166375594868791)))))))))));
		jule::F64 _25713_Q = 1LL + (_25513_s * (0.10642088040084423 + (_25513_s * (0.540397917702171 + (_25513_s * (0.07182865441419627 + (_25513_s * (0.12617121980876164 + (_25513_s * (0.01363708391202905 + (_25513_s * 0.011984499846799107)))))))))));
		if (_22913_sign) {
			return static_cast<jule::F64>(-0.8450629115104675 - jule::div(_25613_P,_25713_Q));
		}
		return static_cast<jule::F64>(0.8450629115104675 + jule::div(_25613_P,_25713_Q));
	}
	if (_21716_x >= 6LL) {
		if (_22913_sign) {
			return -1LL;
		}
		return 1LL;
	}
	jule::F64 _2699_s = jule::div(1LL,_21716_x * _21716_x);
	jule::F64 _27013_R = 0LL;
	jule::F64 _27113_S = 0LL;
	if (_21716_x < 2.857142857142857) {
		_27013_R=static_cast<jule::F64>(-0.009864944034847148 + (_2699_s * (-0.6938585727071818 + (_2699_s * (-10.558626225323291 + (_2699_s * (-62.375332450326006 + (_2699_s * (-162.39666946257347 + (_2699_s * (-184.60509290671104 + (_2699_s * (-81.2874355063066 + (_2699_s * -9.814329344169145))))))))))))));
		_27113_S=static_cast<jule::F64>(1LL + (_2699_s * (19.651271667439257 + (_2699_s * (137.65775414351904 + (_2699_s * (434.56587747522923 + (_2699_s * (645.3872717332679 + (_2699_s * (429.00814002756783 + (_2699_s * (108.63500554177944 + (_2699_s * (6.570249770319282 + (_2699_s * -0.0604244152148581))))))))))))))));
	} else {
		_27013_R=static_cast<jule::F64>(-0.0098649429247001 + (_2699_s * (-0.799283237680523 + (_2699_s * (-17.757954917754752 + (_2699_s * (-160.63638485582192 + (_2699_s * (-637.5664433683896 + (_2699_s * (-1025.0951316110772 + (_2699_s * -483.5191916086514))))))))))));
		_27113_S=static_cast<jule::F64>(1LL + (_2699_s * (30.33806074348246 + (_2699_s * (325.7925129965739 + (_2699_s * (1536.729586084437 + (_2699_s * (3199.8582195085955 + (_2699_s * (2553.0504064331644 + (_2699_s * (474.52854120695537 + (_2699_s * -22.44095244658582))))))))))))));
	}
	jule::F64 _2799_z = _1b5a07116_f64_from_bits(static_cast<jule::U64>(_1b5a07116_f64_bits(_21716_x) & 18446744069414584320LLU));
	jule::F64 _2809_r = _1b5e05bda_exp(static_cast<jule::F64>(((-(_2799_z)) * _2799_z) - 0.5625)) * _1b5e05bda_exp(static_cast<jule::F64>(((_2799_z - _21716_x) * (_2799_z + _21716_x)) + jule::div(_27013_R,_27113_S)));
	if (_22913_sign) {
		return static_cast<jule::F64>(jule::div(_2809_r,_21716_x) - 1LL);
	}
	return static_cast<jule::F64>(1LL - jule::div(_2809_r,_21716_x));
}



inline jule::F64 _1b5dbb871_erfc(jule::F64 _29317_x) {
	
	{
		if (!((_1b5ab659e_is_nan(_29317_x)))) { goto _case_end_4423072208; }
		_case_begin_4423072208:;
		{
			return static_cast<jule::F64>(_1b5ab659e_nan());
		}
		goto _match_end_4423072048;
		_case_end_4423072208:;
		if (!((_1b5ab659e_is_inf(_29317_x,1LL)))) { goto _case_end_4423072320; }
		_case_begin_4423072320:;
		{
			return 0LL;
		}
		goto _match_end_4423072048;
		_case_end_4423072320:;
		if (!((_1b5ab659e_is_inf(_29317_x,-1LL)))) { goto _case_end_4423072432; }
		_case_begin_4423072432:;
		{
			return 2LL;
		}
		goto _match_end_4423072048;
		_case_end_4423072432:;
		_match_end_4423072048:;
	}
	jule::Bool _30413_sign = false;
	if (_29317_x < 0LL) {
		_29317_x=static_cast<jule::F64>((-(_29317_x)));
		_30413_sign=true;
	}
	if (_29317_x < 0.84375) {
		jule::F64 _31017_temp = 0LL;
		if (_29317_x < 0.000000000000000013877787807814457) {
			_31017_temp=_29317_x;
		} else {
			jule::F64 _31417_z = _29317_x * _29317_x;
			jule::F64 _31517_r = 0.12837916709551256 + (_31417_z * (-0.3250421072470015 + (_31417_z * (-0.02848174957559851 + (_31417_z * (-0.005770270296489442 + (_31417_z * -0.000023763016656650163)))))));
			jule::F64 _31617_s = 1LL + (_31417_z * (0.39791722395915535 + (_31417_z * (0.0650222499887673 + (_31417_z * (0.005081306281875766 + (_31417_z * (0.00013249473800432164 + (_31417_z * -0.000003960228278775368)))))))));
			jule::F64 _31717_y = jule::div(_31517_r,_31617_s);
			if (_29317_x < 0.25) {
				_31017_temp=static_cast<jule::F64>(_29317_x + (_29317_x * _31717_y));
			} else {
				_31017_temp=static_cast<jule::F64>(0.5 + ((_29317_x * _31717_y) + (_29317_x - 0.5)));
			}
		}
		if (_30413_sign) {
			return static_cast<jule::F64>(1LL + _31017_temp);
		}
		return static_cast<jule::F64>(1LL - _31017_temp);
	}
	if (_29317_x < 1.25) {
		jule::F64 _33013_s = _29317_x - 1LL;
		jule::F64 _33113_P = -0.0023621185607526594 + (_33013_s * (0.41485611868374833 + (_33013_s * (-0.3722078760357013 + (_33013_s * (0.31834661990116175 + (_33013_s * (-0.11089469428239668 + (_33013_s * (0.035478304325618236 + (_33013_s * -0.002166375594868791)))))))))));
		jule::F64 _33213_Q = 1LL + (_33013_s * (0.10642088040084423 + (_33013_s * (0.540397917702171 + (_33013_s * (0.07182865441419627 + (_33013_s * (0.12617121980876164 + (_33013_s * (0.01363708391202905 + (_33013_s * 0.011984499846799107)))))))))));
		if (_30413_sign) {
			return static_cast<jule::F64>(1.8450629115104675 + jule::div(_33113_P,_33213_Q));
		}
		return static_cast<jule::F64>(0.15493708848953247 - jule::div(_33113_P,_33213_Q));
	}
	if (_29317_x < 28LL) {
		jule::F64 _34013_s = jule::div(1LL,_29317_x * _29317_x);
		jule::F64 _34117_R = 0LL;
		jule::F64 _34217_S = 0LL;
		if (_29317_x < 2.857142857142857) {
			_34117_R=static_cast<jule::F64>(-0.009864944034847148 + (_34013_s * (-0.6938585727071818 + (_34013_s * (-10.558626225323291 + (_34013_s * (-62.375332450326006 + (_34013_s * (-162.39666946257347 + (_34013_s * (-184.60509290671104 + (_34013_s * (-81.2874355063066 + (_34013_s * -9.814329344169145))))))))))))));
			_34217_S=static_cast<jule::F64>(1LL + (_34013_s * (19.651271667439257 + (_34013_s * (137.65775414351904 + (_34013_s * (434.56587747522923 + (_34013_s * (645.3872717332679 + (_34013_s * (429.00814002756783 + (_34013_s * (108.63500554177944 + (_34013_s * (6.570249770319282 + (_34013_s * -0.0604244152148581))))))))))))))));
		} else {
			if (_30413_sign && (_29317_x > 6LL)) {
				return 2LL;
			}
			_34117_R=static_cast<jule::F64>(-0.0098649429247001 + (_34013_s * (-0.799283237680523 + (_34013_s * (-17.757954917754752 + (_34013_s * (-160.63638485582192 + (_34013_s * (-637.5664433683896 + (_34013_s * (-1025.0951316110772 + (_34013_s * -483.5191916086514))))))))))));
			_34217_S=static_cast<jule::F64>(1LL + (_34013_s * (30.33806074348246 + (_34013_s * (325.7925129965739 + (_34013_s * (1536.729586084437 + (_34013_s * (3199.8582195085955 + (_34013_s * (2553.0504064331644 + (_34013_s * (474.52854120695537 + (_34013_s * -22.44095244658582))))))))))))));
		}
		jule::F64 _35313_z = _1b5a07116_f64_from_bits(static_cast<jule::U64>(_1b5a07116_f64_bits(_29317_x) & 18446744069414584320LLU));
		jule::F64 _35413_r = _1b5e05bda_exp(static_cast<jule::F64>(((-(_35313_z)) * _35313_z) - 0.5625)) * _1b5e05bda_exp(static_cast<jule::F64>(((_35313_z - _29317_x) * (_35313_z + _29317_x)) + jule::div(_34117_R,_34217_S)));
		if (_30413_sign) {
			return static_cast<jule::F64>(2LL - jule::div(_35413_r,_29317_x));
		}
		return static_cast<jule::F64>(jule::div(_35413_r,_29317_x));
	}
	if (_30413_sign) {
		return 2LL;
	}
	return 0LL;
}



inline jule::F64 _1b6e3d43b_pow10(jule::Int _6114_n) {
	if ((0LL <= _6114_n) && (_6114_n <= 308LL)) {
		return static_cast<jule::F64>(_1b6e3d43b_POW10_POSTAB32[static_cast<jule::Int>(jule::div(static_cast<jule::Uint>(_6114_n),32LL))] * _1b6e3d43b_POW10_TAB[static_cast<jule::Int>(jule::mod(static_cast<jule::Uint>(_6114_n),32LL))]);
	}
	if ((-323LL <= _6114_n) && (_6114_n <= 0LL)) {
		return static_cast<jule::F64>(jule::div(_1b6e3d43b_POW10_NEGTAB32[static_cast<jule::Int>(jule::div(static_cast<jule::Uint>((-(_6114_n))),32LL))],_1b6e3d43b_POW10_TAB[static_cast<jule::Int>(jule::mod(static_cast<jule::Uint>((-(_6114_n))),32LL))]));
	}
	if (_6114_n > 0LL) {
		return static_cast<jule::F64>(_1b5ab659e_inf(1LL));
	}
	return 0LL;
}



inline jule::F64 _1b5dbbec0_sqrt(jule::F64 _12313_x) {
	{
		if (!((_12313_x == 0LL) || (_1b5ab659e_is_nan(_12313_x)) || (_1b5ab659e_is_inf(_12313_x,1LL)))) { goto _case_end_4423136880; }
		_case_begin_4423136880:;
		{
			return _12313_x;
		}
		goto _match_end_4423135952;
		_case_end_4423136880:;
		if (!((_12313_x < 0LL))) { goto _case_end_4423137008; }
		_case_begin_4423137008:;
		{
			return static_cast<jule::F64>(_1b5ab659e_nan());
		}
		goto _match_end_4423135952;
		_case_end_4423137008:;
		_match_end_4423135952:;
	}
	jule::U64 _13113_ix = _1b5a07116_f64_bits(_12313_x);
	jule::Int _13313_exp = static_cast<jule::Int>((_13113_ix >> 52LL) & 2047LL);
	if (_13313_exp == 0LL) {
		_iter_begin_4423136048:;
		if (!((_13113_ix & 4503599627370496LL) == 0LL)) { goto _iter_end_4423136048; }
		{
			_13113_ix<<=1LL;
			(_13313_exp)--;
		}
		_iter_next_4423136048:;
		goto _iter_begin_4423136048;
		_iter_end_4423136048:;
		(_13313_exp)++;
	}
	_13313_exp-=1023LL;
	_13113_ix=static_cast<jule::U64>(_13113_ix & -9218868437227405313LL);
	_13113_ix|=4503599627370496LL;
	if ((_13313_exp & 1LL) == 1LL) {
		_13113_ix<<=1LL;
	}
	_13313_exp>>=1LL;
	_13113_ix<<=1LL;
	jule::U64 _15013_q = 0LLU;
	jule::U64 _15113_s = 0LLU;
	jule::U64 _15213_r = static_cast<jule::U64>(9007199254740992LLU);
	_iter_begin_4423148816:;
	if (!(_15213_r != 0LL)) { goto _iter_end_4423148816; }
	{
		jule::U64 _15413_t = _15113_s + _15213_r;
		if (_15413_t <= _13113_ix) {
			_15113_s=static_cast<jule::U64>(_15413_t + _15213_r);
			_13113_ix-=_15413_t;
			_15013_q+=_15213_r;
		}
		_13113_ix<<=1LL;
		_15213_r>>=1LL;
	}
	_iter_next_4423148816:;
	goto _iter_begin_4423148816;
	_iter_end_4423148816:;
	if (_13113_ix != 0LL) {
		_15013_q+=static_cast<jule::U64>(_15013_q & 1LL);
	}
	_13113_ix=static_cast<jule::U64>((_15013_q >> 1LL) + (static_cast<jule::U64>((_13313_exp - 1LL) + 1023LL) << 52LL));
	return static_cast<jule::F64>(_1b5a07116_f64_from_bits(_13113_ix));
}



inline jule::F64 _1b6e74483_logb(jule::F64 _4413_x) {
	{
		if (!((_4413_x == 0LL))) { goto _case_end_4423158256; }
		_case_begin_4423158256:;
		{
			return static_cast<jule::F64>(_1b5ab659e_inf(-1LL));
		}
		goto _match_end_4423157968;
		_case_end_4423158256:;
		if (!((_1b5ab659e_is_inf(_4413_x,0LL)))) { goto _case_end_4423158368; }
		_case_begin_4423158368:;
		{
			return static_cast<jule::F64>(_1b5ab659e_inf(1LL));
		}
		goto _match_end_4423157968;
		_case_end_4423158368:;
		if (!((_1b5ab659e_is_nan(_4413_x)))) { goto _case_end_4423158480; }
		_case_begin_4423158480:;
		{
			return _4413_x;
		}
		goto _match_end_4423157968;
		_case_end_4423158480:;
		_match_end_4423157968:;
	}
	return static_cast<jule::F64>(_1b6e74483__ilogb(_4413_x));
}



inline jule::Int _1b6e74483_ilogb(jule::F64 _6314_x) {
	{
		if (!((_6314_x == 0LL))) { goto _case_end_4423163296; }
		_case_begin_4423163296:;
		{
			return -2147483648LL;
		}
		goto _match_end_4423159872;
		_case_end_4423163296:;
		if (!((_1b5ab659e_is_nan(_6314_x)))) { goto _case_end_4423163408; }
		_case_begin_4423163408:;
		{
			return 2147483647LL;
		}
		goto _match_end_4423159872;
		_case_end_4423163408:;
		if (!((_1b5ab659e_is_inf(_6314_x,0LL)))) { goto _case_end_4423163520; }
		_case_begin_4423163520:;
		{
			return 2147483647LL;
		}
		goto _match_end_4423159872;
		_case_end_4423163520:;
		_match_end_4423159872:;
	}
	return static_cast<jule::Int>(_1b6e74483__ilogb(_6314_x));
}



inline jule::Int _1b6e74483__ilogb(jule::F64 _7715_x) {
	jule::Int _7813_exp = 0LL;
	std::tie(_7715_x,_7813_exp) = _1b5ab659e_normalize(_7715_x);
	return static_cast<jule::Int>((static_cast<jule::Int>((_1b5a07116_f64_bits(_7715_x) >> 52LL) & 2047LL) - 1023LL) + _7813_exp);
}



inline jule::F64 _1b6e91e84_jn(jule::Int _8415_n,jule::F64 _8427_x) {
	
	
	{
		if (!((_1b5ab659e_is_nan(_8427_x)))) { goto _case_end_4423174704; }
		_case_begin_4423174704:;
		{
			return _8427_x;
		}
		goto _match_end_4423174448;
		_case_end_4423174704:;
		if (!((_1b5ab659e_is_inf(_8427_x,0LL)))) { goto _case_end_4423174816; }
		_case_begin_4423174816:;
		{
			return 0LL;
		}
		goto _match_end_4423174448;
		_case_end_4423174816:;
		_match_end_4423174448:;
	}
	if (_8415_n == 0LL) {
		return static_cast<jule::F64>(_1b5cdb043_j0(_8427_x));
	}
	if (_8427_x == 0LL) {
		return 0LL;
	}
	if (_8415_n < 0LL) {
		std::tie(_8415_n,_8427_x) = std::make_tuple(static_cast<jule::Int>((-(_8415_n))),static_cast<jule::F64>((-(_8427_x))));
	}
	if (_8415_n == 1LL) {
		return static_cast<jule::F64>(_1b5b08a97_j1(_8427_x));
	}
	jule::Bool _10913_sign = false;
	if (_8427_x < 0LL) {
		_8427_x=static_cast<jule::F64>((-(_8427_x)));
		if ((_8415_n & 1LL) == 1LL) {
			_10913_sign=true;
		}
	}
	jule::F64 _11613_b = 0LL;
	if (static_cast<jule::F64>(_8415_n) <= _8427_x) {
		if (_8427_x >= 5967269506265907200LL) {
			jule::F64 _13321_temp = 0LL;
			jule::F64 _13418_s;
			jule::F64 _13421_c;
			std::tie(_13418_s,_13421_c) = _1b5b280a0_sincos(_8427_x);
			{
				auto _match_expr{ _8415_n & 3LL };
				if (!((0LL) == _match_expr)) { goto _case_end_4423190976; }
				_case_begin_4423190976:;
				{
					_13321_temp=static_cast<jule::F64>(_13421_c + _13418_s);
				}
				goto _match_end_4423188736;
				_case_end_4423190976:;
				if (!((1LL) == _match_expr)) { goto _case_end_4423191120; }
				_case_begin_4423191120:;
				{
					_13321_temp=static_cast<jule::F64>((-(_13421_c)) + _13418_s);
				}
				goto _match_end_4423188736;
				_case_end_4423191120:;
				if (!((2LL) == _match_expr)) { goto _case_end_4423191232; }
				_case_begin_4423191232:;
				{
					_13321_temp=static_cast<jule::F64>((-(_13421_c)) - _13418_s);
				}
				goto _match_end_4423188736;
				_case_end_4423191232:;
				if (!((3LL) == _match_expr)) { goto _case_end_4423191344; }
				_case_begin_4423191344:;
				{
					_13321_temp=static_cast<jule::F64>(_13421_c - _13418_s);
				}
				goto _match_end_4423188736;
				_case_end_4423191344:;
				_match_end_4423188736:;
			}
			_11613_b=static_cast<jule::F64>(jule::div(0.5641895835477563 * _13321_temp,_1b5dbbec0_sqrt(_8427_x)));
		} else {
			_11613_b=static_cast<jule::F64>(_1b5b08a97_j1(_8427_x));
			jule::Int _14422_i = 1LL;
			jule::F64 _14429_a = _1b5cdb043_j0(_8427_x);
			std::tie(_14422_i,_14429_a) = std::make_tuple(1LL,_1b5cdb043_j0(_8427_x));
			_iter_begin_4423187008:;
			if (!(_14422_i < _8415_n)) { goto _iter_end_4423187008; }
			{
				std::tie(_14429_a,_11613_b) = std::make_tuple(_11613_b,static_cast<jule::F64>((_11613_b * jule::div(static_cast<jule::F64>(_14422_i + _14422_i),_8427_x)) - _14429_a));
			}
			_iter_next_4423187008:;
			(_14422_i)++;
			goto _iter_begin_4423187008;
			_iter_end_4423187008:;
		}
	} else {
		if (_8427_x < 0.000000001862645149230957) {
			if (_8415_n > 33LL) {
				_11613_b=0LL;
			} else {
				jule::F64 _15721_temp = _8427_x * 0.5;
				_11613_b=_15721_temp;
				jule::F64 _15925_a = 1LL;
				jule::Int _16025_i = 2LL;
				_iter_begin_4423207104:;
				if (!(_16025_i <= _8415_n)) { goto _iter_end_4423207104; }
				{
					_15925_a*=static_cast<jule::F64>(_16025_i);
					_11613_b*=_15721_temp;
				}
				_iter_next_4423207104:;
				(_16025_i)++;
				goto _iter_begin_4423207104;
				_iter_end_4423207104:;
				_11613_b = jule::div(_11613_b,_15925_a);
			}
		} else {
			jule::F64 _19717_w = jule::div(static_cast<jule::F64>(_8415_n + _8415_n),_8427_x);
			jule::F64 _19817_h = jule::div(2LL,_8427_x);
			jule::F64 _19921_q0 = _19717_w;
			jule::F64 _20021_z = _19717_w + _19817_h;
			jule::F64 _20121_q1 = (_19717_w * _20021_z) - 1LL;
			jule::Int _20221_k = 1LL;
			_iter_begin_4423214288:;
			if (!(_20121_q1 < 1000000000LL)) { goto _iter_end_4423214288; }
			{
				(_20221_k)++;
				_20021_z+=_19817_h;
				std::tie(_19921_q0,_20121_q1) = std::make_tuple(_20121_q1,static_cast<jule::F64>((_20021_z * _20121_q1) - _19921_q0));
			}
			_iter_next_4423214288:;
			goto _iter_begin_4423214288;
			_iter_end_4423214288:;
			jule::Int _20817_m = _8415_n + _8415_n;
			jule::F64 _20921_t = 0LL;
			jule::Int _21021_i = 2LL * (_8415_n + _20221_k);
			_iter_begin_4423219536:;
			if (!(_21021_i >= _20817_m)) { goto _iter_end_4423219536; }
			{
				_20921_t=static_cast<jule::F64>(jule::div(1LL,jule::div(static_cast<jule::F64>(_21021_i),_8427_x) - _20921_t));
			}
			_iter_next_4423219536:;
			_21021_i-=2LL;
			goto _iter_begin_4423219536;
			_iter_end_4423219536:;
			jule::F64 _21421_a = _20921_t;
			_11613_b=1LL;
			jule::F64 _22421_tmp = static_cast<jule::F64>(_8415_n);
			jule::F64 _22517_v = jule::div(2LL,_8427_x);
			_22421_tmp=static_cast<jule::F64>(_22421_tmp * _1b5b07eb4_log(static_cast<jule::F64>(_1b5c0ce54_abs(static_cast<jule::F64>(_22517_v * _22421_tmp)))));
			if (_22421_tmp < 709.782712893384) {
				_21021_i=static_cast<jule::Int>(_8415_n - 1LL);
				_iter_begin_4423228928:;
				if (!(_21021_i > 0LL)) { goto _iter_end_4423228928; }
				{
					jule::F64 _23025_di = static_cast<jule::F64>(_21021_i + _21021_i);
					std::tie(_21421_a,_11613_b) = std::make_tuple(_11613_b,static_cast<jule::F64>(jule::div(_11613_b * _23025_di,_8427_x) - _21421_a));
				}
				_iter_next_4423228928:;
				(_21021_i)--;
				goto _iter_begin_4423228928;
				_iter_end_4423228928:;
			} else {
				_21021_i=static_cast<jule::Int>(_8415_n - 1LL);
				_iter_begin_4423231808:;
				if (!(_21021_i > 0LL)) { goto _iter_end_4423231808; }
				{
					jule::F64 _23625_di = static_cast<jule::F64>(_21021_i + _21021_i);
					std::tie(_21421_a,_11613_b) = std::make_tuple(_11613_b,static_cast<jule::F64>(jule::div(_11613_b * _23625_di,_8427_x) - _21421_a));
					if (_11613_b > 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) {
						_21421_a = jule::div(_21421_a,_11613_b);
						_20921_t = jule::div(_20921_t,_11613_b);
						_11613_b=1LL;
					}
				}
				_iter_next_4423231808:;
				(_21021_i)--;
				goto _iter_begin_4423231808;
				_iter_end_4423231808:;
			}
			_11613_b=static_cast<jule::F64>(jule::div(_20921_t * _1b5cdb043_j0(_8427_x),_11613_b));
		}
	}
	if (_10913_sign) {
		return static_cast<jule::F64>((-(_11613_b)));
	}
	return _11613_b;
}



inline jule::F64 _1b6e91e84_yn(jule::Int _26315_n,jule::F64 _26323_x) {
	
	{
		if (!((_26323_x < 0LL) || (_1b5ab659e_is_nan(_26323_x)))) { goto _case_end_4423240160; }
		_case_begin_4423240160:;
		{
			return static_cast<jule::F64>(_1b5ab659e_nan());
		}
		goto _match_end_4423239984;
		_case_end_4423240160:;
		if (!((_1b5ab659e_is_inf(_26323_x,1LL)))) { goto _case_end_4423240288; }
		_case_begin_4423240288:;
		{
			return 0LL;
		}
		goto _match_end_4423239984;
		_case_end_4423240288:;
		_match_end_4423239984:;
	}
	if (_26315_n == 0LL) {
		return static_cast<jule::F64>(_1b5cdb043_y0(_26323_x));
	}
	if (_26323_x == 0LL) {
		if ((_26315_n < 0LL) && ((_26315_n & 1LL) == 1LL)) {
			return static_cast<jule::F64>(_1b5ab659e_inf(1LL));
		}
		return static_cast<jule::F64>(_1b5ab659e_inf(-1LL));
	}
	jule::Bool _28213_sign = false;
	if (_26315_n < 0LL) {
		_26315_n=static_cast<jule::Int>((-(_26315_n)));
		if ((_26315_n & 1LL) == 1LL) {
			_28213_sign=true;
		}
	}
	if (_26315_n == 1LL) {
		if (_28213_sign) {
			return static_cast<jule::F64>((-(_1b5b08a97_y1(_26323_x))));
		}
		return static_cast<jule::F64>(_1b5b08a97_y1(_26323_x));
	}
	jule::F64 _29513_b = 0LL;
	if (_26323_x >= 5967269506265907200LL) {
		jule::F64 _31017_temp = 0LL;
		jule::F64 _31114_s;
		jule::F64 _31117_c;
		std::tie(_31114_s,_31117_c) = _1b5b280a0_sincos(_26323_x);
		{
			auto _match_expr{ _26315_n & 3LL };
			if (!((0LL) == _match_expr)) { goto _case_end_4423257216; }
			_case_begin_4423257216:;
			{
				_31017_temp=static_cast<jule::F64>(_31114_s - _31117_c);
			}
			goto _match_end_4423254976;
			_case_end_4423257216:;
			if (!((1LL) == _match_expr)) { goto _case_end_4423257360; }
			_case_begin_4423257360:;
			{
				_31017_temp=static_cast<jule::F64>((-(_31114_s)) - _31117_c);
			}
			goto _match_end_4423254976;
			_case_end_4423257360:;
			if (!((2LL) == _match_expr)) { goto _case_end_4423257472; }
			_case_begin_4423257472:;
			{
				_31017_temp=static_cast<jule::F64>((-(_31114_s)) + _31117_c);
			}
			goto _match_end_4423254976;
			_case_end_4423257472:;
			if (!((3LL) == _match_expr)) { goto _case_end_4423257584; }
			_case_begin_4423257584:;
			{
				_31017_temp=static_cast<jule::F64>(_31114_s + _31117_c);
			}
			goto _match_end_4423254976;
			_case_end_4423257584:;
			_match_end_4423254976:;
		}
		_29513_b=static_cast<jule::F64>(jule::div(0.5641895835477563 * _31017_temp,_1b5dbbec0_sqrt(_26323_x)));
	} else {
		jule::F64 _32017_a = _1b5cdb043_y0(_26323_x);
		_29513_b=static_cast<jule::F64>(_1b5b08a97_y1(_26323_x));
		jule::Int _32317_i = 1LL;
		_iter_begin_4423262624:;
		if (!((_32317_i < _26315_n) && (!(_1b5ab659e_is_inf(_29513_b,-1LL))))) { goto _iter_end_4423262624; }
		{
			std::tie(_32017_a,_29513_b) = std::make_tuple(_29513_b,static_cast<jule::F64>((jule::div(static_cast<jule::F64>(_32317_i + _32317_i),_26323_x) * _29513_b) - _32017_a));
		}
		_iter_next_4423262624:;
		(_32317_i)++;
		goto _iter_begin_4423262624;
		_iter_end_4423262624:;
	}
	if (_28213_sign) {
		return static_cast<jule::F64>((-(_29513_b)));
	}
	return _29513_b;
}



inline jule::F64 _1b701e2ec_remainder(jule::F64 _6822_x,jule::F64 _6834_y) {
	
	
	{
		if (!((_1b5ab659e_is_nan(_6822_x)) || (_1b5ab659e_is_nan(_6834_y)) || (_1b5ab659e_is_inf(_6822_x,0LL)) || (_6834_y == 0LL))) { goto _case_end_4423271984; }
		_case_begin_4423271984:;
		{
			return static_cast<jule::F64>(_1b5ab659e_nan());
		}
		goto _match_end_4423271728;
		_case_end_4423271984:;
		if (!((_1b5ab659e_is_inf(_6834_y,0LL)))) { goto _case_end_4423272096; }
		_case_begin_4423272096:;
		{
			return _6822_x;
		}
		goto _match_end_4423271728;
		_case_end_4423272096:;
		_match_end_4423271728:;
	}
	jule::Bool _7913_sign = false;
	if (_6822_x < 0LL) {
		_6822_x=static_cast<jule::F64>((-(_6822_x)));
		_7913_sign=true;
	}
	if (_6834_y < 0LL) {
		_6834_y=static_cast<jule::F64>((-(_6834_y)));
	}
	if (_6822_x == _6834_y) {
		if (_7913_sign) {
			jule::F64 _8917_zero = 0LL;
			return static_cast<jule::F64>((-(_8917_zero)));
		}
		return 0LL;
	}
	if (_6834_y <= 89884656743115790000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) {
		_6822_x=static_cast<jule::F64>(_1b5a00bae_mod(_6822_x,static_cast<jule::F64>(_6834_y + _6834_y)));
	}
	if (_6834_y < 0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004450147717014403) {
		if ((_6822_x + _6822_x) > _6834_y) {
			_6822_x-=_6834_y;
			if ((_6822_x + _6822_x) >= _6834_y) {
				_6822_x-=_6834_y;
			}
		}
	} else {
		jule::F64 _10513_y_half = 0.5 * _6834_y;
		if (_6822_x > _10513_y_half) {
			_6822_x-=_6834_y;
			if (_6822_x >= _10513_y_half) {
				_6822_x-=_6834_y;
			}
		}
	}
	if (_7913_sign) {
		_6822_x=static_cast<jule::F64>((-(_6822_x)));
	}
	return _6822_x;
}



inline jule::F64 _1b6e68b1a_xatan(jule::F64 _8610_x) {
	
	
	
	
	
	
	
	
	
	
	jule::F64 _9813_z = _8610_x * _8610_x;
	_9813_z=static_cast<jule::F64>(jule::div(_9813_z * ((((((((-0.8750608600031904 * _9813_z) + -16.157537187333652) * _9813_z) + -75.00855792314705) * _9813_z) + -122.88666844901361) * _9813_z) + -64.85021904942025),((((((((_9813_z + 24.858464901423062) * _9813_z) + 165.02700983169885) * _9813_z) + 432.88106049129027) * _9813_z) + 485.3903996359137) * _9813_z) + 194.5506571482614));
	_9813_z=static_cast<jule::F64>((_8610_x * _9813_z) + _8610_x);
	return _9813_z;
}



inline jule::F64 _1b6e68b1a_satan(jule::F64 _10610_x) {
	
	
	if (_10610_x <= 0.66) {
		return static_cast<jule::F64>(_1b6e68b1a_xatan(_10610_x));
	}
	if (_10610_x > 2.414213562373095) {
		return static_cast<jule::F64>((1.5707963267948966 - _1b6e68b1a_xatan(static_cast<jule::F64>(jule::div(1LL,_10610_x)))) + 0.00000000000000006123233995736766);
	}
	return static_cast<jule::F64>((0.7853981633974483 + _1b6e68b1a_xatan(static_cast<jule::F64>(jule::div(_10610_x - 1LL,_10610_x + 1LL)))) + 0.00000000000000003061616997868383);
}



inline jule::F64 _1b6e68b1a_atan(jule::F64 _12413_x) {
	if (_12413_x == 0LL) {
		return _12413_x;
	}
	if (_12413_x > 0LL) {
		return static_cast<jule::F64>(_1b6e68b1a_satan(_12413_x));
	}
	return static_cast<jule::F64>((-(_1b6e68b1a_satan(static_cast<jule::F64>((-(_12413_x)))))));
}



inline jule::F64 _1b6ea387a_asin(jule::F64 _5017_x) {
	if (_5017_x == 0LL) {
		return _5017_x;
	}
	jule::Bool _5413_sign = false;
	if (_5017_x < 0LL) {
		_5017_x=static_cast<jule::F64>((-(_5017_x)));
		_5413_sign=true;
	}
	if (_5017_x > 1LL) {
		return static_cast<jule::F64>(_1b5ab659e_nan());
	}
	jule::F64 _6313_temp = _1b5dbbec0_sqrt(static_cast<jule::F64>(1LL - (_5017_x * _5017_x)));
	if (_5017_x > 0.7) {
		_6313_temp=static_cast<jule::F64>(1.5707963267948966 - _1b6e68b1a_satan(static_cast<jule::F64>(jule::div(_6313_temp,_5017_x))));
	} else {
		_6313_temp=static_cast<jule::F64>(_1b6e68b1a_satan(static_cast<jule::F64>(jule::div(_5017_x,_6313_temp))));
	}
	if (_5413_sign) {
		_6313_temp=static_cast<jule::F64>((-(_6313_temp)));
	}
	return _6313_temp;
}



inline jule::F64 _1b6ea387a_acos(jule::F64 _8013_x) {
	return static_cast<jule::F64>(1.5707963267948966 - _1b6ea387a_asin(_8013_x));
}



inline jule::F64 _1b70401b9_asinh(jule::F64 _7018_x) {
	
	
	
	if (_1b5ab659e_is_nan(_7018_x) || _1b5ab659e_is_inf(_7018_x,0LL)) {
		return _7018_x;
	}
	jule::Bool _7913_sign = false;
	if (_7018_x < 0LL) {
		_7018_x=static_cast<jule::F64>((-(_7018_x)));
		_7913_sign=true;
	}
	jule::F64 _8413_temp = 0LL;
	{
		if (!((_7018_x > 268435456LL))) { goto _case_end_4423336768; }
		_case_begin_4423336768:;
		{
			_8413_temp=static_cast<jule::F64>(_1b5b07eb4_log(_7018_x) + 0.6931471805599453);
		}
		goto _match_end_4423333472;
		_case_end_4423336768:;
		if (!((_7018_x > 2LL))) { goto _case_end_4423339440; }
		_case_begin_4423339440:;
		{
			_8413_temp=static_cast<jule::F64>(_1b5b07eb4_log(static_cast<jule::F64>((2LL * _7018_x) + jule::div(1LL,_1b5dbbec0_sqrt(static_cast<jule::F64>((_7018_x * _7018_x) + 1LL)) + _7018_x))));
		}
		goto _match_end_4423333472;
		_case_end_4423339440:;
		if (!((_7018_x < 0.000000003725290298461914))) { goto _case_end_4423336960; }
		_case_begin_4423336960:;
		{
			_8413_temp=_7018_x;
		}
		goto _match_end_4423333472;
		_case_end_4423336960:;
		_case_begin_4423335952:;
		{
			_8413_temp=static_cast<jule::F64>(_1b605ec01_log1p(static_cast<jule::F64>(_7018_x + jule::div(_7018_x * _7018_x,1LL + _1b5dbbec0_sqrt(static_cast<jule::F64>(1LL + (_7018_x * _7018_x)))))));
		}
		goto _match_end_4423333472;
		_case_end_4423335952:;
		_match_end_4423333472:;
	}
	if (_7913_sign) {
		_8413_temp=static_cast<jule::F64>((-(_8413_temp)));
	}
	return _8413_temp;
}



inline std::tuple<jule::Bool,jule::Int> _1cddaa10a_conv_bool(jule::Str _4118_s) {
	{
		auto _match_expr{ _4118_s };
		if (!((jule::Str("1", 1)) == _match_expr || (jule::Str("t", 1)) == _match_expr || (jule::Str("T", 1)) == _match_expr || (jule::Str("true", 4)) == _match_expr || (jule::Str("TRUE", 4)) == _match_expr || (jule::Str("True", 4)) == _match_expr)) { goto _case_end_4423844128; }
		_case_begin_4423844128:;
		{
			return std::make_tuple(true,0LLU);
		}
		goto _match_end_4423843760;
		_case_end_4423844128:;
		if (!((jule::Str("0", 1)) == _match_expr || (jule::Str("f", 1)) == _match_expr || (jule::Str("F", 1)) == _match_expr || (jule::Str("false", 5)) == _match_expr || (jule::Str("FALSE", 5)) == _match_expr || (jule::Str("False", 5)) == _match_expr)) { goto _case_end_4423844352; }
		_case_begin_4423844352:;
		{
			return std::make_tuple(false,0LLU);
		}
		goto _match_end_4423843760;
		_case_end_4423844352:;
		_match_end_4423843760:;
	}
	return std::make_tuple(false,2LLU);
}



inline jule::Str _1cddaa10a_fmt_bool(jule::Bool _5217_b) {
	if (_5217_b) {
		return jule::Str("true", 4);
	}
	return jule::Str("false", 5);
}



inline jule::Str _1cdd4411b_fmt_float(jule::F64 _7818_f,jule::U8 _7826_fmt,jule::Int _7837_prec,jule::Int _7848_bit_size) {
	return static_cast<jule::Str>(_1cdd4411b_generic_ftoa(nullptr,_7818_f,_7826_fmt,_7837_prec,_7848_bit_size));
}



inline jule::Slice<jule::U8> _1cdd4411b_generic_ftoa(jule::Slice<jule::U8> _8221_dst,jule::F64 _8234_val,jule::U8 _8244_fmt,jule::Int _8259_prec,jule::Int _8270_bit_size) {
	jule::U64 _8313_bits = 0LLU;
	_1cdd4411b_FloatInfo* _8413_flt = nullptr;
	{
		auto _match_expr{ _8270_bit_size };
		if (!((32LL) == _match_expr)) { goto _case_end_4423862352; }
		_case_begin_4423862352:;
		{
			_8313_bits=static_cast<jule::U64>(_1b5a07116_f32_bits(static_cast<jule::F32>(_8234_val)));
			_8413_flt=(&(_1cdd4411b_F32_INFO));
		}
		goto _match_end_4423860000;
		_case_end_4423862352:;
		if (!((64LL) == _match_expr)) { goto _case_end_4423861664; }
		_case_begin_4423861664:;
		{
			_8313_bits=static_cast<jule::U64>(_1b5a07116_f64_bits(_8234_val));
			_8413_flt=(&(_1cdd4411b_F64_INFO));
		}
		goto _match_end_4423860000;
		_case_end_4423861664:;
		_case_begin_4423860880:;
		{
			jule::panic(jule::Str("std::conv: illegal bit_size", 27));
		}
		goto _match_end_4423860000;
		_case_end_4423860880:;
		_match_end_4423860000:;
	}
	jule::Bool _969_neg = (_8313_bits >> (_8413_flt->_field_expbits + _8413_flt->_field_mantbits)) != 0LL;
	jule::Int _9713_exp = static_cast<jule::Int>(_8313_bits >> _8413_flt->_field_mantbits) & ((1LL << _8413_flt->_field_expbits) - 1LL);
	jule::U64 _9813_mant = _8313_bits & ((static_cast<jule::U64>(1LLU) << _8413_flt->_field_mantbits) - 1LL);
	{
		auto _match_expr{ _9713_exp };
		if (!(((1LL << _8413_flt->_field_expbits) - 1LL) == _match_expr)) { goto _case_end_4423872320; }
		_case_begin_4423872320:;
		{
			jule::Str _10317_s = jule::Str("", 0);
			{
				if (!((_9813_mant != 0LL))) { goto _case_end_4423878400; }
				_case_begin_4423878400:;
				{
					_10317_s=jule::Str("nan", 3);
				}
				goto _match_end_4423876336;
				_case_end_4423878400:;
				if (!((_969_neg))) { goto _case_end_4423877488; }
				_case_begin_4423877488:;
				{
					_10317_s=jule::Str("-inf", 4);
				}
				goto _match_end_4423876336;
				_case_end_4423877488:;
				_case_begin_4423876464:;
				{
					_10317_s=jule::Str("+inf", 4);
				}
				goto _match_end_4423876336;
				_case_end_4423876464:;
				_match_end_4423876336:;
			}
			return jule::append(_8221_dst,static_cast<jule::Slice<jule::U8>>(_10317_s));
		}
		goto _match_end_4423867504;
		_case_end_4423872320:;
		if (!((0LL) == _match_expr)) { goto _case_end_4423874080; }
		_case_begin_4423874080:;
		{
			(_9713_exp)++;
		}
		goto _match_end_4423867504;
		_case_end_4423874080:;
		_case_begin_4423871264:;
		{
			_9813_mant|=static_cast<jule::Uint>(static_cast<jule::U64>(1LLU) << _8413_flt->_field_mantbits);
		}
		goto _match_end_4423867504;
		_case_end_4423871264:;
		_match_end_4423867504:;
	}
	_9713_exp+=_8413_flt->_field_bias;
	if (_8244_fmt == 'b') {
		return _1cdd4411b_fmt_b(_8221_dst,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	if ((_8244_fmt == 'x') || (_8244_fmt == 'X')) {
		return _1cdd4411b_fmt_x(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	if (false) {
		return _1cdd4411b_big_ftoa(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	_1cdd4411b_DecimalSlice _13413_digs = _1cdd4411b_DecimalSlice();
	jule::Bool _13513_ok = false;
	jule::Bool _1379_shortest = _8259_prec < 0LL;
	if (_1379_shortest) {
		jule::Array<jule::U8,32> _14013_buf = jule::Array<jule::U8,32>({});
		_13413_digs._field_d=_14013_buf.slice(0LL);
		_1b56e9897_ryu_ftoa_shortest(_13413_digs,_9813_mant,static_cast<jule::Int>(static_cast<jule::Int>(_9713_exp - static_cast<jule::Int>(_8413_flt->_field_mantbits))),(*(_8413_flt)));
		_13513_ok=true;
		{
			auto _match_expr{ _8244_fmt };
			if (!(('e') == _match_expr || ('E') == _match_expr)) { goto _case_end_4423889632; }
			_case_begin_4423889632:;
			{
				_8259_prec=static_cast<jule::Int>(_1cdd4411b_max(static_cast<jule::Int>(_13413_digs._field_nd - 1LL),0LL));
			}
			goto _match_end_4423890128;
			_case_end_4423889632:;
			if (!(('f') == _match_expr)) { goto _case_end_4423892768; }
			_case_begin_4423892768:;
			{
				_8259_prec=static_cast<jule::Int>(_1cdd4411b_max(static_cast<jule::Int>(_13413_digs._field_nd - _13413_digs._field_dp),0LL));
			}
			goto _match_end_4423890128;
			_case_end_4423892768:;
			if (!(('g') == _match_expr || ('G') == _match_expr)) { goto _case_end_4423892880; }
			_case_begin_4423892880:;
			{
				_8259_prec=_13413_digs._field_nd;
			}
			goto _match_end_4423890128;
			_case_end_4423892880:;
			_match_end_4423890128:;
		}
	} else if (_8244_fmt != 'f') {
		jule::Int _15517_digits = _8259_prec;
		{
			auto _match_expr{ _8244_fmt };
			if (!(('e') == _match_expr || ('E') == _match_expr)) { goto _case_end_4423900256; }
			_case_begin_4423900256:;
			{
				(_15517_digits)++;
			}
			goto _match_end_4423897712;
			_case_end_4423900256:;
			if (!(('g') == _match_expr || ('G') == _match_expr)) { goto _case_end_4423899168; }
			_case_begin_4423899168:;
			{
				if (_8259_prec == 0LL) {
					_8259_prec=1LL;
				}
				_15517_digits=_8259_prec;
			}
			goto _match_end_4423897712;
			_case_end_4423899168:;
			_case_begin_4423897840:;
			{
				_15517_digits=1LL;
			}
			goto _match_end_4423897712;
			_case_end_4423897840:;
			_match_end_4423897712:;
		}
		jule::Array<jule::U8,24> _16813_buf = jule::Array<jule::U8,24>({});
		if ((_8270_bit_size == 32LL) && (_15517_digits <= 9LL)) {
			_13413_digs._field_d=_16813_buf.slice(0LL);
			_1b56e9897_ryu_ftoa_fixed32(_13413_digs,static_cast<jule::U32>(_9813_mant),static_cast<jule::Int>(static_cast<jule::Int>(_9713_exp - static_cast<jule::Int>(_8413_flt->_field_mantbits))),_15517_digits);
			_13513_ok=true;
		} else if (_15517_digits <= 18LL) {
			_13413_digs._field_d=_16813_buf.slice(0LL);
			_1b56e9897_ryu_ftoa_fixed64(_13413_digs,_9813_mant,static_cast<jule::Int>(static_cast<jule::Int>(_9713_exp - static_cast<jule::Int>(_8413_flt->_field_mantbits))),_15517_digits);
			_13513_ok=true;
		}
	}
	if ((!(_13513_ok))) {
		return _1cdd4411b_big_ftoa(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	return _1cdd4411b_fmt_digits(_8221_dst,_1379_shortest,_969_neg,_13413_digs,_8259_prec,_8244_fmt);
}



inline jule::Slice<jule::U8> _1cdd4411b_big_ftoa(jule::Slice<jule::U8> _18617_dst,jule::Int _18634_prec,jule::U8 _18645_fmt,jule::Bool _18656_neg,jule::U64 _18713_mant,jule::Int _18724_exp,_1cdd4411b_FloatInfo& _18735_flt) {
	_1b588cbe4_Decimal _18813_d = _1b588cbe4_Decimal();
	_18813_d._method_assign(_18713_mant);
	_18813_d._method_shift(static_cast<jule::Int>(_18724_exp - static_cast<jule::Int>(_18735_flt._field_mantbits)));
	_1cdd4411b_DecimalSlice _19113_digs = _1cdd4411b_DecimalSlice();
	jule::Bool _1929_shortest = _18634_prec < 0LL;
	if (_1929_shortest) {
		_1cdd4411b_round_shortest(_18813_d,_18713_mant,_18724_exp,_18735_flt);
		_19113_digs=_1cdd4411b_DecimalSlice(_18813_d._field_d.slice(0LL),_18813_d._field_nd,_18813_d._field_dp,jule::Bool());
		{
			auto _match_expr{ _18645_fmt };
			if (!(('e') == _match_expr || ('E') == _match_expr)) { goto _case_end_4423927552; }
			_case_begin_4423927552:;
			{
				_18634_prec=static_cast<jule::Int>(_19113_digs._field_nd - 1LL);
			}
			goto _match_end_4423924736;
			_case_end_4423927552:;
			if (!(('f') == _match_expr)) { goto _case_end_4423927664; }
			_case_begin_4423927664:;
			{
				_18634_prec=static_cast<jule::Int>(_1cdd4411b_max(static_cast<jule::Int>(_19113_digs._field_nd - _19113_digs._field_dp),0LL));
			}
			goto _match_end_4423924736;
			_case_end_4423927664:;
			if (!(('g') == _match_expr || ('G') == _match_expr)) { goto _case_end_4423927776; }
			_case_begin_4423927776:;
			{
				_18634_prec=_19113_digs._field_nd;
			}
			goto _match_end_4423924736;
			_case_end_4423927776:;
			_match_end_4423924736:;
		}
	} else {
		{
			auto _match_expr{ _18645_fmt };
			if (!(('e') == _match_expr || ('E') == _match_expr)) { goto _case_end_4423932608; }
			_case_begin_4423932608:;
			{
				_18813_d._method_round(static_cast<jule::Int>(_18634_prec + 1LL));
			}
			goto _match_end_4423928064;
			_case_end_4423932608:;
			if (!(('f') == _match_expr)) { goto _case_end_4423931648; }
			_case_begin_4423931648:;
			{
				_18813_d._method_round(static_cast<jule::Int>(_18813_d._field_dp + _18634_prec));
			}
			goto _match_end_4423928064;
			_case_end_4423931648:;
			if (!(('g') == _match_expr || ('G') == _match_expr)) { goto _case_end_4423930160; }
			_case_begin_4423930160:;
			{
				if (_18634_prec == 0LL) {
					_18634_prec=1LL;
				}
				_18813_d._method_round(_18634_prec);
			}
			goto _match_end_4423928064;
			_case_end_4423930160:;
			_match_end_4423928064:;
		}
		_19113_digs=_1cdd4411b_DecimalSlice(_18813_d._field_d.slice(0LL),_18813_d._field_nd,_18813_d._field_dp,jule::Bool());
	}
	return _1cdd4411b_fmt_digits(_18617_dst,_1929_shortest,_18656_neg,_19113_digs,_18634_prec,_18645_fmt);
}



inline jule::Slice<jule::U8> _1cdd4411b_fmt_digits(jule::Slice<jule::U8> _22319_dst,jule::Bool _22332_shortest,jule::Bool _22348_neg,_1cdd4411b_DecimalSlice _22413_digs,jule::Int _22437_prec,jule::U8 _22448_fmt) {
	{
		auto _match_expr{ _22448_fmt };
		if (!(('e') == _match_expr || ('E') == _match_expr)) { goto _case_end_4423961088; }
		_case_begin_4423961088:;
		{
			return _1cdd4411b_fmt_e(_22319_dst,_22348_neg,_22413_digs,_22437_prec,_22448_fmt);
		}
		goto _match_end_4423960608;
		_case_end_4423961088:;
		if (!(('f') == _match_expr)) { goto _case_end_4423961200; }
		_case_begin_4423961200:;
		{
			return _1cdd4411b_fmt_f(_22319_dst,_22348_neg,_22413_digs,_22437_prec);
		}
		goto _match_end_4423960608;
		_case_end_4423961200:;
		if (!(('g') == _match_expr || ('G') == _match_expr)) { goto _case_end_4423961312; }
		_case_begin_4423961312:;
		{
			jule::Int _23217_eprec = _22437_prec;
			if ((_23217_eprec > _22413_digs._field_nd) && (_22413_digs._field_nd >= _22413_digs._field_dp)) {
				_23217_eprec=_22413_digs._field_nd;
			}
			if (_22332_shortest) {
				_23217_eprec=6LL;
			}
			jule::Int _24213_exp = _22413_digs._field_dp - 1LL;
			if ((_24213_exp < -4LL) || (_24213_exp >= _23217_eprec)) {
				if (_22437_prec > _22413_digs._field_nd) {
					_22437_prec=_22413_digs._field_nd;
				}
				return _1cdd4411b_fmt_e(_22319_dst,_22348_neg,_22413_digs,static_cast<jule::Int>(_22437_prec - 1LL),static_cast<jule::U8>((_22448_fmt + 'e') - 'g'));
			}
			if (_22437_prec > _22413_digs._field_dp) {
				_22437_prec=_22413_digs._field_nd;
			}
			return _1cdd4411b_fmt_f(_22319_dst,_22348_neg,_22413_digs,static_cast<jule::Int>(_1cdd4411b_max(static_cast<jule::Int>(_22437_prec - _22413_digs._field_dp),0LL)));
		}
		goto _match_end_4423960608;
		_case_end_4423961312:;
		_match_end_4423960608:;
	}
	return jule::append(_22319_dst,jule::Slice<jule::U8>({'%',_22448_fmt}));
}



inline void _1cdd4411b_round_shortest(_1b588cbe4_Decimal& _26124_d,jule::U64 _26136_mant,jule::Int _26147_exp,_1cdd4411b_FloatInfo& _26158_flt) {
	if (_26136_mant == 0LL) {
		_26124_d._field_nd=0LL;
		return;
	}
	jule::Int _2829_minexp = _26158_flt._field_bias + 1LL;
	if ((_26147_exp > _2829_minexp) && ((332LL * (_26124_d._field_dp - _26124_d._field_nd)) >= (100LL * (_26147_exp - static_cast<jule::Int>(_26158_flt._field_mantbits))))) {
		return;
	}
	_1b588cbe4_Decimal _29113_upper = _1b588cbe4_Decimal();
	_29113_upper._method_assign(static_cast<jule::U64>((_26136_mant * 2LL) + 1LL));
	_29113_upper._method_shift(static_cast<jule::Int>((_26147_exp - static_cast<jule::Int>(_26158_flt._field_mantbits)) - 1LL));
	jule::U64 _30113_mantlo = 0LLU;
	jule::Int _30213_explo = 0LL;
	if ((_26136_mant > (1LL << _26158_flt._field_mantbits)) || (_26147_exp == _2829_minexp)) {
		_30113_mantlo=static_cast<jule::U64>(_26136_mant - 1LL);
		_30213_explo=_26147_exp;
	} else {
		_30113_mantlo=static_cast<jule::U64>((_26136_mant * 2LL) - 1LL);
		_30213_explo=static_cast<jule::Int>(_26147_exp - 1LL);
	}
	_1b588cbe4_Decimal _31013_lower = _1b588cbe4_Decimal();
	_31013_lower._method_assign(static_cast<jule::U64>((_30113_mantlo * 2LL) + 1LL));
	_31013_lower._method_shift(static_cast<jule::Int>((_30213_explo - static_cast<jule::Int>(_26158_flt._field_mantbits)) - 1LL));
	jule::Bool _3179_inclusive = jule::mod(_26136_mant,2LL) == 0LL;
	jule::U8 _33013_upperdelta = 0LLU;
	jule::Int _33413_ui = 0LL;
	_iter_begin_4424000848:;
	{
		jule::Int _33913_mi = (_33413_ui - _29113_upper._field_dp) + _26124_d._field_dp;
		if (_33913_mi >= _26124_d._field_nd) {
			goto _iter_end_4424000848;
		}
		jule::Int _34313_li = (_33413_ui - _29113_upper._field_dp) + _31013_lower._field_dp;
		jule::U8 _34417_l = static_cast<jule::U8>(48LLU);
		if ((_34313_li >= 0LL) && (_34313_li < _31013_lower._field_nd)) {
			_34417_l=_31013_lower._field_d[static_cast<jule::Int>(_34313_li)];
		}
		jule::U8 _34817_m = static_cast<jule::U8>(48LLU);
		if (_33913_mi >= 0LL) {
			_34817_m=_26124_d._field_d[static_cast<jule::Int>(_33913_mi)];
		}
		jule::U8 _35217_u = static_cast<jule::U8>(48LLU);
		if (_33413_ui < _29113_upper._field_nd) {
			_35217_u=_29113_upper._field_d[static_cast<jule::Int>(_33413_ui)];
		}
		jule::Bool _36013_okdown = (_34417_l != _34817_m) || (_3179_inclusive && ((_34313_li + 1LL) == _31013_lower._field_nd));
		{
			if (!(((_33013_upperdelta == 0LL) && ((_34817_m + 1LL) < _35217_u)))) { goto _case_end_4424018912; }
			_case_begin_4424018912:;
			{
				_33013_upperdelta=2LL;
			}
			goto _match_end_4424018368;
			_case_end_4424018912:;
			if (!(((_33013_upperdelta == 0LL) && (_34817_m != _35217_u)))) { goto _case_end_4424019024; }
			_case_begin_4424019024:;
			{
				_33013_upperdelta=1LL;
			}
			goto _match_end_4424018368;
			_case_end_4424019024:;
			if (!(((_33013_upperdelta == 1LL) && ((_34817_m != '9') || (_35217_u != '0'))))) { goto _case_end_4424019488; }
			_case_begin_4424019488:;
			{
				_33013_upperdelta=2LL;
			}
			goto _match_end_4424018368;
			_case_end_4424019488:;
			_match_end_4424018368:;
		}
		jule::Bool _38113_okup = (_33013_upperdelta > 0LL) && ((_3179_inclusive || (_33013_upperdelta > 1LL)) || ((_33413_ui + 1LL) < _29113_upper._field_nd));
		{
			if (!((_36013_okdown && _38113_okup))) { goto _case_end_4424025312; }
			_case_begin_4424025312:;
			{
				_26124_d._method_round(static_cast<jule::Int>(_33913_mi + 1LL));
				return;
			}
			goto _match_end_4424024816;
			_case_end_4424025312:;
			if (!((_36013_okdown))) { goto _case_end_4424025424; }
			_case_begin_4424025424:;
			{
				_26124_d._method_round_down(static_cast<jule::Int>(_33913_mi + 1LL));
				return;
			}
			goto _match_end_4424024816;
			_case_end_4424025424:;
			if (!((_38113_okup))) { goto _case_end_4424025536; }
			_case_begin_4424025536:;
			{
				_26124_d._method_round_up(static_cast<jule::Int>(_33913_mi + 1LL));
				return;
			}
			goto _match_end_4424024816;
			_case_end_4424025536:;
			_match_end_4424024816:;
		}
	}
	_iter_next_4424000848:;
	(_33413_ui)++;
	goto _iter_begin_4424000848;
	_iter_end_4424000848:;
}



inline jule::Slice<jule::U8> _1cdd4411b_fmt_e(jule::Slice<jule::U8> _40014_dst,jule::Bool _40027_neg,_1cdd4411b_DecimalSlice _40038_d,jule::Int _40055_prec,jule::U8 _40066_fmt) {
	if (_40027_neg) {
		_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({'-'}));
	}
	jule::U8 _40713_ch = '0';
	if (_40038_d._field_nd != 0LL) {
		_40713_ch=_40038_d._field_d[0LL];
	}
	_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({_40713_ch}));
	if (_40055_prec > 0LL) {
		_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({'.'}));
		jule::Int _41617_i = 1LL;
		jule::Int _41713_m = _1cdd4411b_min(_40038_d._field_nd,static_cast<jule::Int>(_40055_prec + 1LL));
		if (_41617_i < _41713_m) {
			_40014_dst=jule::append(_40014_dst,_40038_d._field_d.slice(static_cast<jule::Int>(_41617_i),static_cast<jule::Int>(_41713_m)));
			_41617_i=_41713_m;
		}
		_iter_begin_4424050032:;
		if (!(_41617_i <= _40055_prec)) { goto _iter_end_4424050032; }
		{
			_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({'0'}));
		}
		_iter_next_4424050032:;
		(_41617_i)++;
		goto _iter_begin_4424050032;
		_iter_end_4424050032:;
	}
	_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({_40066_fmt}));
	jule::Int _42913_exp = _40038_d._field_dp - 1LL;
	if (_40038_d._field_nd == 0LL) {
		_42913_exp=0LL;
	}
	if (_42913_exp < 0LL) {
		_40713_ch='-';
		_42913_exp=static_cast<jule::Int>((-(_42913_exp)));
	} else {
		_40713_ch='+';
	}
	_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({_40713_ch}));
	{
		if (!((_42913_exp < 10LL))) { goto _case_end_4424053664; }
		_case_begin_4424053664:;
		{
			_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({'0',static_cast<jule::U8>(static_cast<jule::U8>(_42913_exp) + '0')}));
		}
		goto _match_end_4424051728;
		_case_end_4424053664:;
		if (!((_42913_exp < 100LL))) { goto _case_end_4424053120; }
		_case_begin_4424053120:;
		{
			_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({static_cast<jule::U8>(static_cast<jule::U8>(jule::div(_42913_exp,10LL)) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(jule::mod(_42913_exp,10LL)) + '0')}));
		}
		goto _match_end_4424051728;
		_case_end_4424053120:;
		_case_begin_4424046736:;
		{
			_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({static_cast<jule::U8>(static_cast<jule::U8>(jule::div(_42913_exp,100LL)) + '0'),static_cast<jule::U8>(jule::mod(static_cast<jule::U8>(jule::div(_42913_exp,10LL)),10LL) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(jule::mod(_42913_exp,10LL)) + '0')}));
		}
		goto _match_end_4424051728;
		_case_end_4424046736:;
		_match_end_4424051728:;
	}
	return _40014_dst;
}



inline jule::Slice<jule::U8> _1cdd4411b_fmt_f(jule::Slice<jule::U8> _45514_dst,jule::Bool _45527_neg,_1cdd4411b_DecimalSlice _45538_d,jule::Int _45555_prec) {
	if (_45527_neg) {
		_45514_dst=jule::append(_45514_dst,jule::Slice<jule::U8>({'-'}));
	}
	if (_45538_d._field_dp > 0LL) {
		jule::Int _46317_m = _1cdd4411b_min(_45538_d._field_nd,_45538_d._field_dp);
		_45514_dst=jule::append(_45514_dst,_45538_d._field_d.slice(0LL,static_cast<jule::Int>(_46317_m)));
		_iter_begin_4424070688:;
		if (!(_46317_m < _45538_d._field_dp)) { goto _iter_end_4424070688; }
		{
			_45514_dst=jule::append(_45514_dst,jule::Slice<jule::U8>({'0'}));
		}
		_iter_next_4424070688:;
		(_46317_m)++;
		goto _iter_begin_4424070688;
		_iter_end_4424070688:;
	} else {
		_45514_dst=jule::append(_45514_dst,jule::Slice<jule::U8>({'0'}));
	}
	if (_45555_prec > 0LL) {
		_45514_dst=jule::append(_45514_dst,jule::Slice<jule::U8>({'.'}));
		jule::Int _47417_i = 0LL;
		_iter_begin_4424073488:;
		if (!(_47417_i < _45555_prec)) { goto _iter_end_4424073488; }
		{
			jule::U8 _47621_ch = static_cast<jule::U8>(48LLU);
			jule::Int _47717_j = _45538_d._field_dp + _47417_i;
			if ((0LL <= _47717_j) && (_47717_j < _45538_d._field_nd)) {
				_47621_ch=_45538_d._field_d[static_cast<jule::Int>(_47717_j)];
			}
			_45514_dst=jule::append(_45514_dst,jule::Slice<jule::U8>({_47621_ch}));
		}
		_iter_next_4424073488:;
		(_47417_i)++;
		goto _iter_begin_4424073488;
		_iter_end_4424073488:;
	}
	return _45514_dst;
}



inline jule::Slice<jule::U8> _1cdd4411b_fmt_b(jule::Slice<jule::U8> _48814_dst,jule::Bool _48827_neg,jule::U64 _48838_mant,jule::Int _48853_exp,_1cdd4411b_FloatInfo& _48864_flt) {
	if (_48827_neg) {
		_48814_dst=jule::append(_48814_dst,jule::Slice<jule::U8>({'-'}));
	}
	std::tie(_48814_dst,std::ignore) = _1b59a1be8_fmt_bits(_48814_dst,_48838_mant,10LL,false,true);
	_48814_dst=jule::append(_48814_dst,jule::Slice<jule::U8>({'p'}));
	_48853_exp-=static_cast<jule::Int>(_48864_flt._field_mantbits);
	if (_48853_exp >= 0LL) {
		_48814_dst=jule::append(_48814_dst,jule::Slice<jule::U8>({'+'}));
	}
	std::tie(_48814_dst,std::ignore) = _1b59a1be8_fmt_bits(_48814_dst,static_cast<jule::U64>(_48853_exp),10LL,_48853_exp < 0LL,true);
	return _48814_dst;
}



inline jule::Slice<jule::U8> _1cdd4411b_fmt_x(jule::Slice<jule::U8> _51014_dst,jule::Int _51027_prec,jule::U8 _51038_fmt,jule::Bool _51049_neg,jule::U64 _51113_mant,jule::Int _51128_exp,_1cdd4411b_FloatInfo& _51139_flt) {
	if (_51113_mant == 0LL) {
		_51128_exp=0LL;
	}
	_51113_mant<<=static_cast<jule::Uint>(60LL - _51139_flt._field_mantbits);
	_iter_begin_4424094432:;
	if (!((_51113_mant != 0LL) && ((_51113_mant & 1152921504606846976LL) == 0LL))) { goto _iter_end_4424094432; }
	{
		_51113_mant<<=1LL;
		(_51128_exp)--;
	}
	_iter_next_4424094432:;
	goto _iter_begin_4424094432;
	_iter_end_4424094432:;
	if ((_51027_prec >= 0LL) && (_51027_prec < 15LL)) {
		jule::Uint _52513_shift = static_cast<jule::Uint>(_51027_prec * 4LL);
		jule::U64 _52613_extra = (_51113_mant << _52513_shift) & 1152921504606846976LL;
		_51113_mant>>=static_cast<jule::Uint>(60LL - _52513_shift);
		if ((_52613_extra | (_51113_mant & 1LL)) > 576460752303423488LL) {
			(_51113_mant)++;
		}
		_51113_mant<<=static_cast<jule::Uint>(60LL - _52513_shift);
		if ((_51113_mant & 2305843009213693952LL) != 0LL) {
			_51113_mant>>=1LL;
			(_51128_exp)++;
		}
	}
	jule::Str _53913_hex = jule::Str("0123456789abcdef", 16);
	if (_51038_fmt == 'X') {
		_53913_hex=jule::Str("0123456789ABCDEF", 16);
	}
	if (_51049_neg) {
		_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({'-'}));
	}
	_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({'0',_51038_fmt,static_cast<jule::U8>('0' + static_cast<jule::U8>((_51113_mant >> 60LL) & 1LL))}));
	_51113_mant<<=4LL;
	if ((_51027_prec < 0LL) && (_51113_mant != 0LL)) {
		_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({'.'}));
		_iter_begin_4424107968:;
		if (!(_51113_mant != 0LL)) { goto _iter_end_4424107968; }
		{
			_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({_53913_hex[static_cast<jule::Int>((_51113_mant >> 60LL) & 15LL)]}));
			_51113_mant<<=4LL;
		}
		_iter_next_4424107968:;
		goto _iter_begin_4424107968;
		_iter_end_4424107968:;
	} else if (_51027_prec > 0LL) {
		_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({'.'}));
		jule::Int _56017_i = 0LL;
		_iter_begin_4424114608:;
		if (!(_56017_i < _51027_prec)) { goto _iter_end_4424114608; }
		{
			_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({_53913_hex[static_cast<jule::Int>((_51113_mant >> 60LL) & 15LL)]}));
			_51113_mant<<=4LL;
		}
		_iter_next_4424114608:;
		(_56017_i)++;
		goto _iter_begin_4424114608;
		_iter_end_4424114608:;
	}
	jule::U8 _56813_ch = static_cast<jule::U8>(80LLU);
	if (_51038_fmt == _1cdd97339_lower(_51038_fmt)) {
		_56813_ch='p';
	}
	_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({_56813_ch}));
	if (_51128_exp < 0LL) {
		_56813_ch='-';
		_51128_exp=static_cast<jule::Int>((-(_51128_exp)));
	} else {
		_56813_ch='+';
	}
	_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({_56813_ch}));
	{
		if (!((_51128_exp < 100LL))) { goto _case_end_4424123952; }
		_case_begin_4424123952:;
		{
			_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({static_cast<jule::U8>(static_cast<jule::U8>(jule::div(_51128_exp,10LL)) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(jule::mod(_51128_exp,10LL)) + '0')}));
		}
		goto _match_end_4424121712;
		_case_end_4424123952:;
		if (!((_51128_exp < 1000LL))) { goto _case_end_4424123488; }
		_case_begin_4424123488:;
		{
			_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({static_cast<jule::U8>(static_cast<jule::U8>(jule::div(_51128_exp,100LL)) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(jule::mod(jule::div(_51128_exp,10LL),10LL)) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(jule::mod(_51128_exp,10LL)) + '0')}));
		}
		goto _match_end_4424121712;
		_case_end_4424123488:;
		_case_begin_4424120896:;
		{
			_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({static_cast<jule::U8>(static_cast<jule::U8>(jule::div(_51128_exp,1000LL)) + '0'),static_cast<jule::U8>(jule::mod(static_cast<jule::U8>(jule::div(_51128_exp,100LL)),10LL) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(jule::mod(jule::div(_51128_exp,10LL),10LL)) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(jule::mod(_51128_exp,10LL)) + '0')}));
		}
		goto _match_end_4424121712;
		_case_end_4424120896:;
		_match_end_4424121712:;
	}
	return _51014_dst;
}



inline jule::Int _1cdd4411b_min(jule::Int _5938_a,jule::Int _59316_b) {
	if (_5938_a < _59316_b) {
		return _5938_a;
	}
	return _59316_b;
}



inline jule::Int _1cdd4411b_max(jule::Int _6008_a,jule::Int _60016_b) {
	if (_6008_a > _60016_b) {
		return _6008_a;
	}
	return _60016_b;
}



inline jule::U8 _1cdd97339_lower(jule::U8 _4910_c) {
	return static_cast<jule::U8>(_4910_c | 32LL);
}



inline std::tuple<jule::U64,jule::Int> _1cdd97339_parse_uint(jule::Str _5423_s,jule::Int _5435_base,jule::Int _5450_bit_size) {
	if (_5423_s == jule::Str("", 0)) {
		return std::make_tuple(0LL,2LLU);
	}
	{
		if (!(((2LL <= _5435_base) && (_5435_base <= 36LL)))) { goto _case_end_4424145840; }
		goto _match_end_4424141888;
		_case_end_4424145840:;
		if (!((_5435_base == 0LL))) { goto _case_end_4424144848; }
		_case_begin_4424144848:;
		{
			_5435_base=10LL;
			if (_5423_s[0LL] == '0') {
				{
					if (!(((_5423_s.len() >= 3LL) && (_1cdd97339_lower(_5423_s[1LL]) == 'b')))) { goto _case_end_4424149632; }
					_case_begin_4424149632:;
					{
						_5435_base=2LL;
						_5423_s=_5423_s.slice(2LL);
					}
					goto _match_end_4424148608;
					_case_end_4424149632:;
					if (!(((_5423_s.len() >= 3LL) && (_1cdd97339_lower(_5423_s[1LL]) == 'o')))) { goto _case_end_4424149808; }
					_case_begin_4424149808:;
					{
						_5435_base=8LL;
						_5423_s=_5423_s.slice(2LL);
					}
					goto _match_end_4424148608;
					_case_end_4424149808:;
					if (!(((_5423_s.len() >= 3LL) && (_1cdd97339_lower(_5423_s[1LL]) == 'x')))) { goto _case_end_4424150768; }
					_case_begin_4424150768:;
					{
						_5435_base=16LL;
						_5423_s=_5423_s.slice(2LL);
					}
					goto _match_end_4424148608;
					_case_end_4424150768:;
					_case_begin_4424148800:;
					{
						_5435_base=8LL;
						_5423_s=_5423_s.slice(1LL);
					}
					goto _match_end_4424148608;
					_case_end_4424148800:;
					_match_end_4424148608:;
				}
			}
		}
		goto _match_end_4424141888;
		_case_end_4424144848:;
		_case_begin_4424141984:;
		{
			return std::make_tuple(0LL,3LLU);
		}
		goto _match_end_4424141888;
		_case_end_4424141984:;
		_match_end_4424141888:;
	}
	if (_5450_bit_size == 0LL) {
		_5450_bit_size=64LL;
	} else if ((_5450_bit_size < 0LL) || (_5450_bit_size > 64LL)) {
		return std::make_tuple(0LL,4LLU);
	}
	jule::U64 _9313_cutoff = 0LLU;
	{
		auto _match_expr{ _5435_base };
		if (!((10LL) == _match_expr)) { goto _case_end_4424164464; }
		_case_begin_4424164464:;
		{
			_9313_cutoff=1844674407370955264LL;
		}
		goto _match_end_4424144416;
		_case_end_4424164464:;
		if (!((16LL) == _match_expr)) { goto _case_end_4424162864; }
		_case_begin_4424162864:;
		{
			_9313_cutoff=1152921504606846976LL;
		}
		goto _match_end_4424144416;
		_case_end_4424162864:;
		_case_begin_4424161920:;
		{
			_9313_cutoff=static_cast<jule::U64>(jule::div(jule::MAX_U64,static_cast<jule::U64>(_5435_base)) + 1LL);
		}
		goto _match_end_4424144416;
		_case_end_4424161920:;
		_match_end_4424144416:;
	}
	jule::U64 _10013_max_val = 0LLU;
	{
		auto _match_expr{ _5450_bit_size };
		if (!((32LL) == _match_expr)) { goto _case_end_4424158976; }
		_case_begin_4424158976:;
		{
			_10013_max_val=4294967295LLU;
		}
		goto _match_end_4424165056;
		_case_end_4424158976:;
		if (!((64LL) == _match_expr)) { goto _case_end_4424166832; }
		_case_begin_4424166832:;
		{
			_10013_max_val=jule::MAX_U64;
		}
		goto _match_end_4424165056;
		_case_end_4424166832:;
		_match_end_4424165056:;
	}
	jule::U64 _11213_n = 0LLU;
	{
		auto _range_expr = _5423_s;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::U8 _1cdd97339_c = *_range_begin;
			_iter_begin_4424169488:;
			{
				jule::U8 _11417_d = 0LLU;
				{
					if (!((('0' <= _1cdd97339_c) && (_1cdd97339_c <= '9')))) { goto _case_end_4424174560; }
					_case_begin_4424174560:;
					{
						_11417_d=static_cast<jule::U8>(_1cdd97339_c - '0');
					}
					goto _match_end_4424172384;
					_case_end_4424174560:;
					if (!((('a' <= _1cdd97339_lower(_1cdd97339_c)) && (_1cdd97339_lower(_1cdd97339_c) <= 'z')))) { goto _case_end_4424173568; }
					_case_begin_4424173568:;
					{
						_11417_d=static_cast<jule::U8>((_1cdd97339_lower(_1cdd97339_c) - 'a') + 10LL);
					}
					goto _match_end_4424172384;
					_case_end_4424173568:;
					_case_begin_4424172512:;
					{
						return std::make_tuple(0LL,2LLU);
					}
					goto _match_end_4424172384;
					_case_end_4424172512:;
					_match_end_4424172384:;
				}
				if (_11417_d >= static_cast<jule::U8>(_5435_base)) {
					return std::make_tuple(0LL,2LLU);
				}
				if (_11213_n >= _9313_cutoff) {
					return std::make_tuple(_10013_max_val,1LLU);
				}
				_11213_n*=static_cast<jule::U64>(_5435_base);
				jule::U64 _13413_n1 = _11213_n + static_cast<jule::U64>(_11417_d);
				if ((_13413_n1 < _11213_n) || (_13413_n1 > _10013_max_val)) {
					return std::make_tuple(_10013_max_val,1LLU);
				}
				_11213_n=_13413_n1;
			}
			_iter_next_4424169488:;
			++_range_begin;
			if (_range_begin != _range_end) { _1cdd97339_c = *_range_begin; goto _iter_begin_4424169488; }
			_iter_end_4424169488:;
		}
	}
	return std::make_tuple(_11213_n,0LLU);
}



inline std::tuple<jule::I64,jule::Int> _1cdd97339_parse_int(jule::Str _16522_s,jule::Int _16530_base,jule::Int _16545_bit_size) {
	jule::I64 _16562_i = jule::I64();
	jule::Int _16570_err = 0LLU;
	if (_16522_s == jule::Str("", 0)) {
		_16562_i = 0LL;
		_16570_err = 2LLU;
		return std::make_tuple(_16562_i,_16570_err);
	}
	jule::Bool _17113_neg = false;
	if (_16522_s[0LL] == '+') {
		_16522_s=_16522_s.slice(1LL);
	} else if (_16522_s[0LL] == '-') {
		_17113_neg=true;
		_16522_s=_16522_s.slice(1LL);
	}
	jule::Uint _18013_un = 0LLU;
	std::tie(_18013_un,_16570_err) = _1cdd97339_parse_uint(_16522_s,_16530_base,_16545_bit_size);
	if ((_16570_err != 0LLU) && (_16570_err != 1LLU)) {
		_16562_i = 0LL;
		_16570_err = _16570_err;
		return std::make_tuple(_16562_i,_16570_err);
	}
	if (_16545_bit_size == 0LL) {
		_16545_bit_size=64LL;
	}
	jule::U64 _1909_cutoff = static_cast<jule::U64>(1LL << static_cast<jule::Uint>(_16545_bit_size - 1LL));
	if ((!(_17113_neg)) && (_18013_un >= _1909_cutoff)) {
		_16562_i = static_cast<jule::I64>(_1909_cutoff - 1LL);
		_16570_err = 1LLU;
		return std::make_tuple(_16562_i,_16570_err);
	}
	if (_17113_neg && (_18013_un > _1909_cutoff)) {
		_16562_i = static_cast<jule::I64>((-(static_cast<jule::I64>(_1909_cutoff))));
		_16570_err = 1LLU;
		return std::make_tuple(_16562_i,_16570_err);
	}
	jule::I64 _19713_n = static_cast<jule::I64>(_18013_un);
	if (_17113_neg) {
		_19713_n=static_cast<jule::I64>((-(_19713_n)));
	}
	_16562_i = _19713_n;
	_16570_err = 0LLU;
	return std::make_tuple(_16562_i,_16570_err);
}



inline std::tuple<jule::F64,jule::Bool> _1cde06541_eisel_lemire64(jule::U64 _4123_man,jule::Int _4133_exp10,jule::Bool _4145_neg) {
	jule::F64 _4158_f = jule::F64();
	jule::Bool _4166_ok = jule::Bool();
	if (_4123_man == 0LL) {
		if (_4145_neg) {
			_4158_f=static_cast<jule::F64>(_1b5a07116_f64_from_bits(9223372036854775808LLU));
		}
		_4158_f = _4158_f;
		_4166_ok = true;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	if ((_4133_exp10 < -348LL) || (347LL < _4133_exp10)) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	jule::Int _579_clz = _1b5e977e8_leading_zeros64(_4123_man);
	_4123_man<<=static_cast<jule::Uint>(_579_clz);
	
	jule::U64 _6013_ret_exp2 = static_cast<jule::U64>((((217706LL * _4133_exp10) >> 16LL) + 64LL) + 1023LL) - static_cast<jule::U64>(_579_clz);
	jule::U64 _6314_x_hi;
	jule::U64 _6324_x_lo;
	std::tie(_6314_x_hi,_6324_x_lo) = _1b5e977e8_mul64(_4123_man,_1cde06541_DETAILED_POWS_OF_TEN[static_cast<jule::Int>(_4133_exp10 - -348LL)][1LL]);
	if (((_6314_x_hi & 511LL) == 511LL) && ((_6324_x_lo + _4123_man) < _4123_man)) {
		jule::U64 _6714_y_hi;
		jule::U64 _6720_y_lo;
		std::tie(_6714_y_hi,_6720_y_lo) = _1b5e977e8_mul64(_4123_man,_1cde06541_DETAILED_POWS_OF_TEN[static_cast<jule::Int>(_4133_exp10 - -348LL)][0LL]);
		jule::U64 _6818_merged_hi = _6314_x_hi;
		jule::U64 _6829_merged_lo = _6324_x_lo + _6714_y_hi;
		std::tie(_6818_merged_hi,_6829_merged_lo) = std::make_tuple(_6314_x_hi,_6324_x_lo + _6714_y_hi);
		if (_6829_merged_lo < _6324_x_lo) {
			(_6818_merged_hi)++;
		}
		if ((((_6818_merged_hi & 511LL) == 511LL) && ((_6829_merged_lo + 1LL) == 0LL)) && ((_6720_y_lo + _4123_man) < _4123_man)) {
			_4158_f = 0LL;
			_4166_ok = false;
			return std::make_tuple(_4158_f,_4166_ok);
		}
		std::tie(_6314_x_hi,_6324_x_lo) = std::make_tuple(_6818_merged_hi,_6829_merged_lo);
	}
	jule::U64 _799_msb = _6314_x_hi >> 63LL;
	jule::U64 _8013_ret_mantissa = _6314_x_hi >> (_799_msb + 9LL);
	_6013_ret_exp2-=static_cast<jule::U64>(1LL ^ _799_msb);
	if (((_6324_x_lo == 0LL) && ((_6314_x_hi & 511LL) == 0LL)) && ((_8013_ret_mantissa & 3LL) == 1LL)) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	_8013_ret_mantissa+=static_cast<jule::U64>(_8013_ret_mantissa & 1LL);
	_8013_ret_mantissa>>=1LL;
	if ((_8013_ret_mantissa >> 53LL) > 0LL) {
		_8013_ret_mantissa>>=1LL;
		_6013_ret_exp2+=1LL;
	}
	if ((_6013_ret_exp2 - 1LL) >= 2046LL) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	jule::U64 _10313_ret_bits = (_6013_ret_exp2 << 52LL) | (_8013_ret_mantissa & 4503599627370495LL);
	if (_4145_neg) {
		_10313_ret_bits|=9223372036854775808LLU;
	}
	_4158_f = static_cast<jule::F64>(_1b5a07116_f64_from_bits(_10313_ret_bits));
	_4166_ok = true;
	return std::make_tuple(_4158_f,_4166_ok);
}



inline std::tuple<jule::F32,jule::Bool> _1cde06541_eisel_lemire32(jule::U64 _11023_man,jule::Int _11033_exp10,jule::Bool _11045_neg) {
	jule::F32 _11058_f = jule::F32();
	jule::Bool _11066_ok = jule::Bool();
	if (_11023_man == 0LL) {
		if (_11045_neg) {
			_11058_f=static_cast<jule::F32>(_1b5a07116_f32_from_bits(2147483648LLU));
		}
		_11058_f = _11058_f;
		_11066_ok = true;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	if ((_11033_exp10 < -348LL) || (347LL < _11033_exp10)) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	jule::Int _1329_clz = _1b5e977e8_leading_zeros64(_11023_man);
	_11023_man<<=static_cast<jule::Uint>(_1329_clz);
	
	jule::U64 _13513_ret_exp2 = static_cast<jule::U64>((((217706LL * _11033_exp10) >> 16LL) + 64LL) + 127LL) - static_cast<jule::U64>(_1329_clz);
	jule::U64 _13814_x_hi;
	jule::U64 _13824_x_lo;
	std::tie(_13814_x_hi,_13824_x_lo) = _1b5e977e8_mul64(_11023_man,_1cde06541_DETAILED_POWS_OF_TEN[static_cast<jule::Int>(_11033_exp10 - -348LL)][1LL]);
	if (((_13814_x_hi & 274877906943LL) == 274877906943LL) && ((_13824_x_lo + _11023_man) < _11023_man)) {
		jule::U64 _14214_y_hi;
		jule::U64 _14220_y_lo;
		std::tie(_14214_y_hi,_14220_y_lo) = _1b5e977e8_mul64(_11023_man,_1cde06541_DETAILED_POWS_OF_TEN[static_cast<jule::Int>(_11033_exp10 - -348LL)][0LL]);
		jule::U64 _14318_merged_hi = _13814_x_hi;
		jule::U64 _14329_merged_lo = _13824_x_lo + _14214_y_hi;
		std::tie(_14318_merged_hi,_14329_merged_lo) = std::make_tuple(_13814_x_hi,_13824_x_lo + _14214_y_hi);
		if (_14329_merged_lo < _13824_x_lo) {
			(_14318_merged_hi)++;
		}
		if ((((_14318_merged_hi & 274877906943LL) == 274877906943LL) && ((_14329_merged_lo + 1LL) == 0LL)) && ((_14220_y_lo + _11023_man) < _11023_man)) {
			_11058_f = 0LL;
			_11066_ok = false;
			return std::make_tuple(_11058_f,_11066_ok);
		}
		std::tie(_13814_x_hi,_13824_x_lo) = std::make_tuple(_14318_merged_hi,_14329_merged_lo);
	}
	jule::U64 _1549_msb = _13814_x_hi >> 63LL;
	jule::U64 _15513_ret_mantissa = _13814_x_hi >> (_1549_msb + 38LL);
	_13513_ret_exp2-=static_cast<jule::U64>(1LL ^ _1549_msb);
	if (((_13824_x_lo == 0LL) && ((_13814_x_hi & 274877906943LL) == 0LL)) && ((_15513_ret_mantissa & 3LL) == 1LL)) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	_15513_ret_mantissa+=static_cast<jule::U64>(_15513_ret_mantissa & 1LL);
	_15513_ret_mantissa>>=1LL;
	if ((_15513_ret_mantissa >> 24LL) > 0LL) {
		_15513_ret_mantissa>>=1LL;
		_13513_ret_exp2+=1LL;
	}
	if ((_13513_ret_exp2 - 1LL) >= 254LL) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	jule::U64 _17813_ret_bits = (_13513_ret_exp2 << 23LL) | (_15513_ret_mantissa & 8388607LL);
	if (_11045_neg) {
		_17813_ret_bits|=2147483648LL;
	}
	_11058_f = static_cast<jule::F32>(_1b5a07116_f32_from_bits(static_cast<jule::U32>(_17813_ret_bits)));
	_11066_ok = true;
	return std::make_tuple(_11058_f,_11066_ok);
}



inline jule::Int _1cddd8c93_common_prefix_len_ignore_case(jule::Str _4534_s,jule::Str _4542_prefix) {
	jule::I64 _4613_n = _4542_prefix.len();
	if (_4613_n > _4534_s.len()) {
		_4613_n=static_cast<jule::I64>(_4534_s.len());
	}
	jule::Int _5013_i = 0LL;
	_iter_begin_4424292080:;
	if (!(_5013_i < _4613_n)) { goto _iter_end_4424292080; }
	{
		jule::U8 _5217_c = _4534_s[static_cast<jule::Int>(_5013_i)];
		if (('A' <= _5217_c) && (_5217_c <= 'Z')) {
			_5217_c+=32LL;
		}
		if (_5217_c != _4542_prefix[static_cast<jule::Int>(_5013_i)]) {
			return _5013_i;
		}
	}
	_iter_next_4424292080:;
	(_5013_i)++;
	goto _iter_begin_4424292080;
	_iter_end_4424292080:;
	return _4613_n;
}



inline std::tuple<jule::F64,jule::Int,jule::Bool> _1cddd8c93_special(jule::Str _6816_s) {
	jule::F64 _6826_f = jule::F64();
	jule::Int _6834_n = jule::Int();
	jule::Bool _6842_ok = jule::Bool();
	if (_6816_s == jule::Str("", 0)) {
		_6826_f = 0LL;
		_6834_n = 0LL;
		_6842_ok = false;
		return std::make_tuple(_6826_f,_6834_n,_6842_ok);
	}
	jule::Int _7213_sign = 1LL;
	jule::Int _7313_nsign = 0LL;
	{
		auto _match_expr{ _6816_s[0LL] };
		if (!(('+') == _match_expr || ('-') == _match_expr)) { goto _case_end_4424307904; }
		_case_begin_4424307904:;
		{
			if (_6816_s[0LL] == '-') {
				_7213_sign=-1LL;
			}
			_7313_nsign=1LL;
			_6816_s=_6816_s.slice(1LL);
			goto _case_begin_4424308016;
		}
		goto _match_end_4424306864;
		_case_end_4424307904:;
		if (!(('i') == _match_expr || ('I') == _match_expr)) { goto _case_end_4424308016; }
		_case_begin_4424308016:;
		{
			jule::Int _8317_case_n = _1cddd8c93_common_prefix_len_ignore_case(_6816_s,jule::Str("infinity", 8));
			if ((3LL < _8317_case_n) && (_8317_case_n < 8LL)) {
				_8317_case_n=3LL;
			}
			if ((_8317_case_n == 3LL) || (_8317_case_n == 8LL)) {
				_6826_f = static_cast<jule::F64>(_1b5ab659e_inf(_7213_sign));
				_6834_n = static_cast<jule::Int>(_7313_nsign + _6834_n);
				_6842_ok = true;
				return std::make_tuple(_6826_f,_6834_n,_6842_ok);
			}
		}
		goto _match_end_4424306864;
		_case_end_4424308016:;
		if (!(('n') == _match_expr || ('N') == _match_expr)) { goto _case_end_4424308144; }
		_case_begin_4424308144:;
		{
			if (_1cddd8c93_common_prefix_len_ignore_case(_6816_s,jule::Str("nan", 3)) == 3LL) {
				_6826_f = static_cast<jule::F64>(_1b5ab659e_nan());
				_6834_n = 3LL;
				_6842_ok = true;
				return std::make_tuple(_6826_f,_6834_n,_6842_ok);
			}
		}
		goto _match_end_4424306864;
		_case_end_4424308144:;
		_match_end_4424306864:;
	}
	_6826_f = 0LL;
	_6834_n = 0LL;
	_6842_ok = false;
	return std::make_tuple(_6826_f,_6834_n,_6842_ok);
}



inline std::tuple<jule::U64,jule::Int,jule::Bool,jule::Bool,jule::Bool,jule::Int,jule::Bool> _1cddd8c93_read_float(jule::Str _10315_s) {
	jule::U64 _10325_mantissa = jule::U64();
	jule::Int _10340_exp = jule::Int();
	jule::Bool _10350_neg = jule::Bool();
	jule::Bool _10425_trunc = jule::Bool();
	jule::Bool _10438_hex = jule::Bool();
	jule::Int _10449_i = jule::Int();
	jule::Bool _10457_ok = jule::Bool();
	if (_10449_i >= _10315_s.len()) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
	}
	{
		if (!((_10315_s[static_cast<jule::Int>(_10449_i)] == '+'))) { goto _case_end_4424326112; }
		_case_begin_4424326112:;
		{
			(_10449_i)++;
		}
		goto _match_end_4424325968;
		_case_end_4424326112:;
		if (!((_10315_s[static_cast<jule::Int>(_10449_i)] == '-'))) { goto _case_end_4424326336; }
		_case_begin_4424326336:;
		{
			_10350_neg=true;
			(_10449_i)++;
		}
		goto _match_end_4424325968;
		_case_end_4424326336:;
		_match_end_4424325968:;
	}
	jule::U64 _11813_base = 10LLU;
	jule::Int _11913_max_mant_digits = 19LL;
	jule::U8 _12013_exp_char = 'e';
	if ((((_10449_i + 2LL) < _10315_s.len()) && (_10315_s[static_cast<jule::Int>(_10449_i)] == '0')) && (_1cdd97339_lower(_10315_s[static_cast<jule::Int>(_10449_i + 1LL)]) == 'x')) {
		_11813_base=16LL;
		_11913_max_mant_digits=16LL;
		_10449_i+=2LL;
		_12013_exp_char='p';
		_10438_hex=true;
	}
	jule::Bool _12813_sawdot = false;
	jule::Bool _12913_sawdigits = false;
	jule::Int _13013_nd = 0LL;
	jule::Int _13113_nd_mant = 0LL;
	jule::Int _13213_dp = 0LL;
	_iter_begin_4424343584:;
	if (!(_10449_i < _10315_s.len())) { goto _iter_end_4424343584; }
	{
		jule::U8 _13413_c = _10315_s[static_cast<jule::Int>(_10449_i)];
		{
			if (!((_13413_c == '.'))) { goto _case_end_4424347744; }
			_case_begin_4424347744:;
			{
				if (_12813_sawdot) {
					goto _julec_label_loop_end;
				}
				_12813_sawdot=true;
				_13213_dp=_13013_nd;
				goto _iter_next_4424343584;
			}
			goto _match_end_4424347104;
			_case_end_4424347744:;
			if (!((('0' <= _13413_c) && (_13413_c <= '9')))) { goto _case_end_4424347872; }
			_case_begin_4424347872:;
			{
				_12913_sawdigits=true;
				if ((_13413_c == '0') && (_13013_nd == 0LL)) {
					(_13213_dp)--;
					goto _iter_next_4424343584;
				}
				(_13013_nd)++;
				if (_13113_nd_mant < _11913_max_mant_digits) {
					_10325_mantissa*=_11813_base;
					_10325_mantissa+=static_cast<jule::U64>(_13413_c - '0');
					(_13113_nd_mant)++;
				} else if (_13413_c != '0') {
					_10425_trunc=true;
				}
				goto _iter_next_4424343584;
			}
			goto _match_end_4424347104;
			_case_end_4424347872:;
			if (!((((_11813_base == 16LL) && ('a' <= _1cdd97339_lower(_13413_c))) && (_1cdd97339_lower(_13413_c) <= 'f')))) { goto _case_end_4424348000; }
			_case_begin_4424348000:;
			{
				_12913_sawdigits=true;
				(_13013_nd)++;
				if (_13113_nd_mant < _11913_max_mant_digits) {
					_10325_mantissa*=16LL;
					_10325_mantissa+=static_cast<jule::U64>((_1cdd97339_lower(_13413_c) - 'a') + 10LL);
					(_13113_nd_mant)++;
				} else {
					_10425_trunc=true;
				}
				goto _iter_next_4424343584;
			}
			goto _match_end_4424347104;
			_case_end_4424348000:;
			_match_end_4424347104:;
		}
		goto _iter_end_4424343584;
	}
	_iter_next_4424343584:;
	(_10449_i)++;
	goto _iter_begin_4424343584;
	_iter_end_4424343584:;
	_julec_label_loop_end:;
	if ((!(_12913_sawdigits))) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
	}
	if ((!(_12813_sawdot))) {
		_13213_dp=_13013_nd;
	}
	if (_11813_base == 16LL) {
		_13213_dp*=4LL;
		_13113_nd_mant*=4LL;
	}
	if ((_10449_i < _10315_s.len()) && (_1cdd97339_lower(_10315_s[static_cast<jule::Int>(_10449_i)]) == _12013_exp_char)) {
		(_10449_i)++;
		if (_10449_i >= _10315_s.len()) {
			return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
		}
		jule::Int _19517_esign = 1LL;
		if (_10315_s[static_cast<jule::Int>(_10449_i)] == '+') {
			(_10449_i)++;
		} else if (_10315_s[static_cast<jule::Int>(_10449_i)] == '-') {
			(_10449_i)++;
			_19517_esign=-1LL;
		}
		if (((_10449_i >= _10315_s.len()) || (_10315_s[static_cast<jule::Int>(_10449_i)] < '0')) || (_10315_s[static_cast<jule::Int>(_10449_i)] > '9')) {
			return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
		}
		jule::Int _20517_e = 0LL;
		_iter_begin_4424372048:;
		if (!((_10449_i < _10315_s.len()) && (('0' <= _10315_s[static_cast<jule::Int>(_10449_i)]) && (_10315_s[static_cast<jule::Int>(_10449_i)] <= '9')))) { goto _iter_end_4424372048; }
		{
			if (_20517_e < 10000LL) {
				_20517_e=static_cast<jule::Int>(((_20517_e * 10LL) + static_cast<jule::Int>(_10315_s[static_cast<jule::Int>(_10449_i)])) - '0');
			}
		}
		_iter_next_4424372048:;
		(_10449_i)++;
		goto _iter_begin_4424372048;
		_iter_end_4424372048:;
		_13213_dp+=static_cast<jule::Int>(_20517_e * _19517_esign);
	} else if (_11813_base == 16LL) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
	}
	if (_10325_mantissa != 0LL) {
		_10340_exp=static_cast<jule::Int>(_13213_dp - _13113_nd_mant);
	}
	_10457_ok=true;
	return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
}



inline std::tuple<jule::F64,jule::Bool> _1cddd8c93_atof64_exact(jule::U64 _43317_mantissa,jule::Int _43336_exp,jule::Bool _43346_neg) {
	jule::F64 _43359_f = jule::F64();
	jule::Bool _43367_ok = jule::Bool();
	if ((_43317_mantissa >> _1cdd4411b_F64_INFO._field_mantbits) != 0LL) {
		return std::make_tuple(_43359_f,_43367_ok);
	}
	_43359_f=static_cast<jule::F64>(_43317_mantissa);
	if (_43346_neg) {
		_43359_f=static_cast<jule::F64>((-(_43359_f)));
	}
	{
		if (!((_43336_exp == 0LL))) { goto _case_end_4424391872; }
		_case_begin_4424391872:;
		{
			_43359_f = _43359_f;
			_43367_ok = true;
			return std::make_tuple(_43359_f,_43367_ok);
		}
		goto _match_end_4424392560;
		_case_end_4424391872:;
		if (!(((_43336_exp > 0LL) && (_43336_exp <= 37LL)))) { goto _case_end_4424391984; }
		_case_begin_4424391984:;
		{
			if (_43336_exp > 22LL) {
				_43359_f*=_1cddd8c93_F64_POW10[static_cast<jule::Int>(_43336_exp - 22LL)];
				_43336_exp=22LL;
			}
			if ((_43359_f > 1000000000000000LL) || (_43359_f < -1000000000000000LL)) {
				return std::make_tuple(_43359_f,_43367_ok);
			}
			_43359_f = static_cast<jule::F64>(_43359_f * _1cddd8c93_F64_POW10[static_cast<jule::Int>(_43336_exp)]);
			_43367_ok = true;
			return std::make_tuple(_43359_f,_43367_ok);
		}
		goto _match_end_4424392560;
		_case_end_4424391984:;
		if (!(((_43336_exp < 0LL) && (_43336_exp >= -22LL)))) { goto _case_end_4424392112; }
		_case_begin_4424392112:;
		{
			_43359_f = static_cast<jule::F64>(jule::div(_43359_f,_1cddd8c93_F64_POW10[static_cast<jule::Int>((-(_43336_exp)))]));
			_43367_ok = true;
			return std::make_tuple(_43359_f,_43367_ok);
		}
		goto _match_end_4424392560;
		_case_end_4424392112:;
		_match_end_4424392560:;
	}
	return std::make_tuple(_43359_f,_43367_ok);
}



inline std::tuple<jule::F64,jule::Bool> _1cddd8c93_atof64exact(jule::U64 _47216_mantissa,jule::Int _47235_exp,jule::Bool _47245_neg) {
	jule::F64 _47258_f = jule::F64();
	jule::Bool _47266_ok = jule::Bool();
	if ((_47216_mantissa >> _1cdd4411b_F64_INFO._field_mantbits) != 0LL) {
		return std::make_tuple(_47258_f,_47266_ok);
	}
	_47258_f=static_cast<jule::F64>(_47216_mantissa);
	if (_47245_neg) {
		_47258_f=static_cast<jule::F64>((-(_47258_f)));
	}
	{
		if (!((_47235_exp == 0LL))) { goto _case_end_4424409744; }
		_case_begin_4424409744:;
		{
			_47258_f = _47258_f;
			_47266_ok = true;
			return std::make_tuple(_47258_f,_47266_ok);
		}
		goto _match_end_4424410432;
		_case_end_4424409744:;
		if (!(((_47235_exp > 0LL) && (_47235_exp <= 37LL)))) { goto _case_end_4424409856; }
		_case_begin_4424409856:;
		{
			if (_47235_exp > 22LL) {
				_47258_f*=_1cddd8c93_F64_POW10[static_cast<jule::Int>(_47235_exp - 22LL)];
				_47235_exp=22LL;
			}
			if ((_47258_f > 1000000000000000LL) || (_47258_f < -1000000000000000LL)) {
				return std::make_tuple(_47258_f,_47266_ok);
			}
			_47258_f = static_cast<jule::F64>(_47258_f * _1cddd8c93_F64_POW10[static_cast<jule::Int>(_47235_exp)]);
			_47266_ok = true;
			return std::make_tuple(_47258_f,_47266_ok);
		}
		goto _match_end_4424410432;
		_case_end_4424409856:;
		if (!(((_47235_exp < 0LL) && (_47235_exp >= -22LL)))) { goto _case_end_4424409968; }
		_case_begin_4424409968:;
		{
			_47258_f = static_cast<jule::F64>(jule::div(_47258_f,_1cddd8c93_F64_POW10[static_cast<jule::Int>((-(_47235_exp)))]));
			_47266_ok = true;
			return std::make_tuple(_47258_f,_47266_ok);
		}
		goto _match_end_4424410432;
		_case_end_4424409968:;
		_match_end_4424410432:;
	}
	return std::make_tuple(_47258_f,_47266_ok);
}



inline std::tuple<jule::F32,jule::Bool> _1cddd8c93_atof32exact(jule::U64 _50616_mantissa,jule::Int _50635_exp,jule::Bool _50649_neg) {
	jule::F32 _50662_f = jule::F32();
	jule::Bool _50670_ok = jule::Bool();
	if ((_50616_mantissa >> _1cdd4411b_F32_INFO._field_mantbits) != 0LL) {
		return std::make_tuple(_50662_f,_50670_ok);
	}
	_50662_f=static_cast<jule::F32>(_50616_mantissa);
	if (_50649_neg) {
		_50662_f=static_cast<jule::F32>((-(_50662_f)));
	}
	{
		if (!((_50635_exp == 0LL))) { goto _case_end_4424427488; }
		_case_begin_4424427488:;
		{
			_50662_f = _50662_f;
			_50670_ok = true;
			return std::make_tuple(_50662_f,_50670_ok);
		}
		goto _match_end_4424428176;
		_case_end_4424427488:;
		if (!(((_50635_exp > 0LL) && (_50635_exp <= 17LL)))) { goto _case_end_4424427600; }
		_case_begin_4424427600:;
		{
			if (_50635_exp > 10LL) {
				_50662_f*=_1cddd8c93_F32_POW10[static_cast<jule::Int>(_50635_exp - 10LL)];
				_50635_exp=10LL;
			}
			if ((_50662_f > 10000000LL) || (_50662_f < -10000000LL)) {
				return std::make_tuple(_50662_f,_50670_ok);
			}
			_50662_f = static_cast<jule::F32>(_50662_f * _1cddd8c93_F32_POW10[static_cast<jule::Int>(_50635_exp)]);
			_50670_ok = true;
			return std::make_tuple(_50662_f,_50670_ok);
		}
		goto _match_end_4424428176;
		_case_end_4424427600:;
		if (!(((_50635_exp < 0LL) && (_50635_exp >= -10LL)))) { goto _case_end_4424427728; }
		_case_begin_4424427728:;
		{
			_50662_f = static_cast<jule::F32>(jule::div(_50662_f,_1cddd8c93_F32_POW10[static_cast<jule::Int>((-(_50635_exp)))]));
			_50670_ok = true;
			return std::make_tuple(_50662_f,_50670_ok);
		}
		goto _match_end_4424428176;
		_case_end_4424427728:;
		_match_end_4424428176:;
	}
	return std::make_tuple(_50662_f,_50670_ok);
}



inline std::tuple<jule::F64,jule::Int> _1cddd8c93_atof_hex(jule::Str _54213_s,_1cdd4411b_FloatInfo& _54222_flt,jule::U64 _54242_mantissa,jule::Int _54261_exp,jule::Bool _54271_neg,jule::Bool _54282_trunc) {
	jule::Int _5439_max_exp = ((1LL << _54222_flt._field_expbits) + _54222_flt._field_bias) - 2LL;
	jule::Int _5449_min_exp = _54222_flt._field_bias + 1LL;
	_54261_exp+=static_cast<jule::Int>(_54222_flt._field_mantbits);
	_iter_begin_4424445488:;
	if (!((_54242_mantissa != 0LL) && ((_54242_mantissa >> (_54222_flt._field_mantbits + 2LL)) == 0LL))) { goto _iter_end_4424445488; }
	{
		_54242_mantissa<<=1LL;
		(_54261_exp)--;
	}
	_iter_next_4424445488:;
	goto _iter_begin_4424445488;
	_iter_end_4424445488:;
	if (_54282_trunc) {
		_54242_mantissa|=1LL;
	}
	_iter_begin_4424450544:;
	if (!((_54242_mantissa >> ((1LL + _54222_flt._field_mantbits) + 2LL)) != 0LL)) { goto _iter_end_4424450544; }
	{
		_54242_mantissa=static_cast<jule::U64>((_54242_mantissa >> 1LL) | (_54242_mantissa & 1LL));
		(_54261_exp)++;
	}
	_iter_next_4424450544:;
	goto _iter_begin_4424450544;
	_iter_end_4424450544:;
	_iter_begin_4424449952:;
	if (!((_54242_mantissa > 1LL) && (_54261_exp < (_5449_min_exp - 2LL)))) { goto _iter_end_4424449952; }
	{
		_54242_mantissa=static_cast<jule::U64>((_54242_mantissa >> 1LL) | (_54242_mantissa & 1LL));
		(_54261_exp)++;
	}
	_iter_next_4424449952:;
	goto _iter_begin_4424449952;
	_iter_end_4424449952:;
	jule::U64 _57413_round = _54242_mantissa & 3LL;
	_54242_mantissa>>=2LL;
	_57413_round|=static_cast<jule::U64>(_54242_mantissa & 1LL);
	_54261_exp+=2LL;
	if (_57413_round == 3LL) {
		(_54242_mantissa)++;
		if (_54242_mantissa == (1LL << (1LL + _54222_flt._field_mantbits))) {
			_54242_mantissa>>=1LL;
			(_54261_exp)++;
		}
	}
	if ((_54242_mantissa >> _54222_flt._field_mantbits) == 0LL) {
		_54261_exp=_54222_flt._field_bias;
	}
	jule::Int _58913_err = 0LLU;
	if (_54261_exp > _5439_max_exp) {
		_54242_mantissa=static_cast<jule::U64>(1LL << _54222_flt._field_mantbits);
		_54261_exp=static_cast<jule::Int>(_5439_max_exp + 1LL);
		_58913_err=1LLU;
	}
	jule::U64 _59613_bits = _54242_mantissa & ((1LL << _54222_flt._field_mantbits) - 1LL);
	_59613_bits|=static_cast<jule::U64>(static_cast<jule::U64>((_54261_exp - _54222_flt._field_bias) & ((1LL << _54222_flt._field_expbits) - 1LL)) << _54222_flt._field_mantbits);
	if (_54271_neg) {
		_59613_bits|=static_cast<jule::Int>((1LL << _54222_flt._field_mantbits) << _54222_flt._field_expbits);
	}
	if (_54222_flt == _1cdd4411b_F32_INFO) {
		return std::make_tuple(static_cast<jule::F64>(_1b5a07116_f32_from_bits(static_cast<jule::U32>(_59613_bits))),_58913_err);
	}
	return std::make_tuple(static_cast<jule::F64>(_1b5a07116_f64_from_bits(_59613_bits)),_58913_err);
}



inline std::tuple<jule::F32,jule::Int,jule::Int> _1cddd8c93_atof32(jule::Str _60711_s) {
	jule::F32 _60721_f = jule::F32();
	jule::Int _60729_n = jule::Int();
	jule::Int _60737_err = 0LLU;
	{
		jule::F64 _60914_val;
		jule::Int _60919__n;
		jule::Bool _60923_ok;
		std::tie(_60914_val,_60919__n,_60923_ok) = _1cddd8c93_special(_60711_s);
		if (_60923_ok) {
			_60721_f = static_cast<jule::F32>(_60914_val);
			_60729_n = _60919__n;
			_60737_err = 0LLU;
			return std::make_tuple(_60721_f,_60729_n,_60737_err);
		}
	}
	jule::U64 _61510_mantissa;
	jule::Int _61520_exp;
	jule::Bool _61525_neg;
	jule::Bool _61530_trunc;
	jule::Bool _61537_hex;
	jule::Int _61542__n;
	jule::Bool _61550_ok;
	std::tie(_61510_mantissa,_61520_exp,_61525_neg,_61530_trunc,_61537_hex,_61542__n,_61550_ok) = _1cddd8c93_read_float(_60711_s);
	_60729_n=_61542__n;
	if ((!(_61550_ok))) {
		_60721_f = 0LL;
		_60729_n = _60729_n;
		_60737_err = 2LLU;
		return std::make_tuple(_60721_f,_60729_n,_60737_err);
	}
	if (_61537_hex) {
		jule::F64 _62217_ff = 0LL;
		std::tie(_62217_ff,_60737_err) = _1cddd8c93_atof_hex(_60711_s.slice(0LL,static_cast<jule::Int>(_60729_n)),_1cdd4411b_F32_INFO,_61510_mantissa,_61520_exp,_61525_neg,_61530_trunc);
		_60721_f = static_cast<jule::F32>(_62217_ff);
		_60729_n = _60729_n;
		_60737_err = _60737_err;
		return std::make_tuple(_60721_f,_60729_n,_60737_err);
	}
	if (true) {
		if ((!(_61530_trunc))) {
			std::tie(_60721_f,_61550_ok) = _1cddd8c93_atof32exact(_61510_mantissa,_61520_exp,_61525_neg);
			if (_61550_ok) {
				_60721_f = _60721_f;
				_60729_n = _60729_n;
				_60737_err = 0LLU;
				return std::make_tuple(_60721_f,_60729_n,_60737_err);
			}
		}
		std::tie(_60721_f,_61550_ok) = _1cde06541_eisel_lemire32(_61510_mantissa,_61520_exp,_61525_neg);
		if (_61550_ok) {
			if ((!(_61530_trunc))) {
				_60721_f = _60721_f;
				_60729_n = _60729_n;
				_60737_err = 0LLU;
				return std::make_tuple(_60721_f,_60729_n,_60737_err);
			}
			jule::F32 _64421_f_up = 0LL;
			std::tie(_64421_f_up,_61550_ok) = _1cde06541_eisel_lemire32(static_cast<jule::U64>(_61510_mantissa + 1LL),_61520_exp,_61525_neg);
			if (_61550_ok && (_60721_f == _64421_f_up)) {
				_60721_f = _60721_f;
				_60729_n = _60729_n;
				_60737_err = 0LLU;
				return std::make_tuple(_60721_f,_60729_n,_60737_err);
			}
		}
	}
	_1b588cbe4_Decimal _65313_d = _1b588cbe4_Decimal();
	if ((!(_65313_d._method_set(_60711_s.slice(0LL,static_cast<jule::Int>(_60729_n)))))) {
		_60721_f = 0LL;
		_60729_n = _60729_n;
		_60737_err = 2LLU;
		return std::make_tuple(_60721_f,_60729_n,_60737_err);
	}
	jule::U64 _65710_b;
	jule::Bool _65713_ovf;
	std::tie(_65710_b,_65713_ovf) = _65313_d._method_float_bits(_1cdd4411b_F32_INFO);
	_60721_f=static_cast<jule::F32>(_1b5a07116_f32_from_bits(static_cast<jule::U32>(_65710_b)));
	if (_65713_ovf) {
		_60737_err=1LLU;
	}
	_60721_f = _60721_f;
	_60729_n = _60729_n;
	_60737_err = _60737_err;
	return std::make_tuple(_60721_f,_60729_n,_60737_err);
}



inline std::tuple<jule::F64,jule::Int,jule::Int> _1cddd8c93_atof64(jule::Str _66511_s) {
	jule::F64 _66521_f = jule::F64();
	jule::Int _66529_n = jule::Int();
	jule::Int _66537_err = 0LLU;
	{
		jule::F64 _66714_val;
		jule::Int _66719__n;
		jule::Bool _66723_ok;
		std::tie(_66714_val,_66719__n,_66723_ok) = _1cddd8c93_special(_66511_s);
		if (_66723_ok) {
			_66521_f = _66714_val;
			_66529_n = _66719__n;
			_66537_err = 0LLU;
			return std::make_tuple(_66521_f,_66529_n,_66537_err);
		}
	}
	jule::U64 _67310_mantissa;
	jule::Int _67320_exp;
	jule::Bool _67325_neg;
	jule::Bool _67330_trunc;
	jule::Bool _67337_hex;
	jule::Int _67342__n;
	jule::Bool _67350_ok;
	std::tie(_67310_mantissa,_67320_exp,_67325_neg,_67330_trunc,_67337_hex,_67342__n,_67350_ok) = _1cddd8c93_read_float(_66511_s);
	_66529_n=_67342__n;
	if ((!(_67350_ok))) {
		_66521_f = 0LL;
		_66529_n = _66529_n;
		_66537_err = 2LLU;
		return std::make_tuple(_66521_f,_66529_n,_66537_err);
	}
	if (_67337_hex) {
		std::tie(_66521_f,_66537_err) = _1cddd8c93_atof_hex(_66511_s.slice(0LL,static_cast<jule::Int>(_66529_n)),_1cdd4411b_F64_INFO,_67310_mantissa,_67320_exp,_67325_neg,_67330_trunc);
		_66521_f = _66521_f;
		_66529_n = _66529_n;
		_66537_err = _66537_err;
		return std::make_tuple(_66521_f,_66529_n,_66537_err);
	}
	if (true) {
		if ((!(_67330_trunc))) {
			std::tie(_66521_f,_67350_ok) = _1cddd8c93_atof64exact(_67310_mantissa,_67320_exp,_67325_neg);
			if (_67350_ok) {
				_66521_f = _66521_f;
				_66529_n = _66529_n;
				_66537_err = 0LLU;
				return std::make_tuple(_66521_f,_66529_n,_66537_err);
			}
		}
		std::tie(_66521_f,_67350_ok) = _1cde06541_eisel_lemire64(_67310_mantissa,_67320_exp,_67325_neg);
		if (_67350_ok) {
			if ((!(_67330_trunc))) {
				_66521_f = _66521_f;
				_66529_n = _66529_n;
				_66537_err = 0LLU;
				return std::make_tuple(_66521_f,_66529_n,_66537_err);
			}
			jule::F64 _70121_f_up = 0LL;
			std::tie(_70121_f_up,_67350_ok) = _1cde06541_eisel_lemire64(static_cast<jule::U64>(_67310_mantissa + 1LL),_67320_exp,_67325_neg);
			if (_67350_ok && (_66521_f == _70121_f_up)) {
				_66521_f = _66521_f;
				_66529_n = _66529_n;
				_66537_err = 0LLU;
				return std::make_tuple(_66521_f,_66529_n,_66537_err);
			}
		}
	}
	_1b588cbe4_Decimal _71013_d = _1b588cbe4_Decimal();
	if ((!(_71013_d._method_set(_66511_s.slice(0LL,static_cast<jule::Int>(_66529_n)))))) {
		_66521_f = 0LL;
		_66529_n = _66529_n;
		_66537_err = 2LLU;
		return std::make_tuple(_66521_f,_66529_n,_66537_err);
	}
	jule::U64 _71410_b;
	jule::Bool _71413_ovf;
	std::tie(_71410_b,_71413_ovf) = _71013_d._method_float_bits(_1cdd4411b_F64_INFO);
	_66521_f=static_cast<jule::F64>(_1b5a07116_f64_from_bits(_71410_b));
	if (_71413_ovf) {
		_66537_err=1LLU;
	}
	_66521_f = _66521_f;
	_66529_n = _66529_n;
	_66537_err = _66537_err;
	return std::make_tuple(_66521_f,_66529_n,_66537_err);
}



inline std::tuple<jule::F64,jule::Int,jule::Int> _1cddd8c93_parse_float_prefix(jule::Str _72223_s,jule::Int _72231_bit_size) {
	if (_72231_bit_size == 32LL) {
		jule::F32 _72414_f;
		jule::Int _72417_n;
		jule::Int _72420_err;
		std::tie(_72414_f,_72417_n,_72420_err) = _1cddd8c93_atof32(_72223_s);
		return std::make_tuple(static_cast<jule::F64>(_72414_f),_72417_n,_72420_err);
	}
	jule::F64 _72810_f;
	jule::Int _72813_n;
	jule::Int _72816_err;
	std::tie(_72810_f,_72813_n,_72816_err) = _1cddd8c93_atof64(_72223_s);
	return std::make_tuple(_72810_f,_72813_n,_72816_err);
}



inline std::tuple<jule::F64,jule::Int> _1cddd8c93_parse_float(jule::Str _75620_s,jule::Int _75628_bit_size) {
	jule::F64 _75710_f;
	jule::Int _75713_n;
	jule::Int _75716_err;
	std::tie(_75710_f,_75713_n,_75716_err) = _1cddd8c93_parse_float_prefix(_75620_s,_75628_bit_size);
	if ((_75713_n != _75620_s.len()) && ((_75716_err == 0LLU) || (_75716_err != 2LLU))) {
		return std::make_tuple(0LL,2LLU);
	}
	return std::make_tuple(_75710_f,_75716_err);
}



inline void _1b56e9897_ryu_ftoa_fixed32(_1cdd4411b_DecimalSlice& _4926_d,jule::U32 _4947_mant,jule::Int _4958_exp,jule::Int _4968_prec) {
	if (_4968_prec < 0LL) {
		jule::panic(jule::Str("ryu_ftoa_fixed32 called with negative prec", 42));
	}
	if (_4968_prec > 9LL) {
		jule::panic(jule::Str("ryu_ftoa_fixed32 called with prec > 9", 37));
	}
	if (_4947_mant == 0LL) {
		std::tie(_4926_d._field_nd,_4926_d._field_dp) = std::make_tuple(0LL,0LL);
		return;
	}
	jule::Int _6213_e2 = _4958_exp;
	jule::Int _639_b = _1b5e977e8_len32(_4947_mant);
	if (_639_b < 25LL) {
		_4947_mant<<=static_cast<jule::Uint>(25LL - _639_b);
		_6213_e2+=static_cast<jule::Int>(static_cast<jule::Int>(_639_b) - 25LL);
	}
	jule::Int _749_q = ((-(_1b56e9897_mul_by_log2_log10(static_cast<jule::Int>(_6213_e2 + 24LL)))) + _4968_prec) - 1LL;
	jule::Bool _7913_exact = (_749_q <= 27LL) && (_749_q >= 0LL);
	jule::U32 _8114_di;
	jule::Int _8118_dexp2;
	jule::Bool _8129_d0;
	std::tie(_8114_di,_8118_dexp2,_8129_d0) = _1b56e9897_mult64bit_pow10(_4947_mant,_6213_e2,_749_q);
	if (_8118_dexp2 >= 0LL) {
		jule::panic(jule::Str("not enough significant bits after mult64bit_pow10", 49));
	}
	if (((_749_q < 0LL) && (_749_q >= -10LL)) && _1b56e9897_divisible_by_pow5(static_cast<jule::U64>(_4947_mant),static_cast<jule::Int>((-(_749_q))))) {
		_7913_exact=true;
		_8129_d0=true;
	}
	jule::Uint _949_extra = static_cast<jule::Uint>((-(_8118_dexp2)));
	jule::U32 _959_extra_mask = static_cast<jule::U32>((1LL << _949_extra) - 1LL);
	jule::U32 _9713_dfrac = 0LLU;
	std::tie(_8114_di,_9713_dfrac) = std::make_tuple(static_cast<jule::U32>(_8114_di >> _949_extra),static_cast<jule::U32>(_8114_di & _959_extra_mask));
	jule::Bool _9913_round_up = false;
	if (_7913_exact) {
		_9913_round_up=((_9713_dfrac > (1LL << (_949_extra - 1LL))) || ((_9713_dfrac == (1LL << (_949_extra - 1LL))) && (!(_8129_d0)))) || (((_9713_dfrac == (1LL << (_949_extra - 1LL))) && _8129_d0) && ((_8114_di & 1LL) == 1LL));
	} else {
		_9913_round_up=(_9713_dfrac >> (_949_extra - 1LL)) == 1LL;
	}
	if (_9713_dfrac != 0LL) {
		_8129_d0=false;
	}
	_1b56e9897_format_decimal(_4926_d,static_cast<jule::U64>(_8114_di),(!(_8129_d0)),_9913_round_up,_4968_prec);
	_4926_d._field_dp-=_749_q;
}



inline void _1b56e9897_ryu_ftoa_fixed64(_1cdd4411b_DecimalSlice& _12326_d,jule::U64 _12347_mant,jule::Int _12358_exp,jule::Int _12368_prec) {
	if (_12368_prec > 18LL) {
		jule::panic(jule::Str("ryu_ftoa_fixed64 called with prec > 18", 38));
	}
	if (_12347_mant == 0LL) {
		std::tie(_12326_d._field_nd,_12326_d._field_dp) = std::make_tuple(0LL,0LL);
		return;
	}
	jule::Int _13313_e2 = _12358_exp;
	jule::Int _1349_b = _1b5e977e8_len64(_12347_mant);
	if (_1349_b < 55LL) {
		_12347_mant=static_cast<jule::U64>(_12347_mant << static_cast<jule::Uint>(55LL - _1349_b));
		_13313_e2+=static_cast<jule::Int>(static_cast<jule::Int>(_1349_b) - 55LL);
	}
	jule::Int _1489_q = ((-(_1b56e9897_mul_by_log2_log10(static_cast<jule::Int>(_13313_e2 + 54LL)))) + _12368_prec) - 1LL;
	jule::Bool _15313_exact = (_1489_q <= 55LL) && (_1489_q >= 0LL);
	jule::U64 _15514_di;
	jule::Int _15518_dexp2;
	jule::Bool _15529_d0;
	std::tie(_15514_di,_15518_dexp2,_15529_d0) = _1b56e9897_mult128bit_pow10(_12347_mant,_13313_e2,_1489_q);
	if (_15518_dexp2 >= 0LL) {
		jule::panic(jule::Str("not enough significant bits after mult128bit_pow10", 50));
	}
	if (((_1489_q < 0LL) && (_1489_q >= -22LL)) && _1b56e9897_divisible_by_pow5(_12347_mant,static_cast<jule::Int>((-(_1489_q))))) {
		_15313_exact=true;
		_15529_d0=true;
	}
	jule::Uint _1689_extra = static_cast<jule::Uint>((-(_15518_dexp2)));
	jule::U64 _1699_extra_mask = static_cast<jule::U64>((1LL << _1689_extra) - 1LL);
	jule::U64 _17113_dfrac = 0LLU;
	std::tie(_15514_di,_17113_dfrac) = std::make_tuple(static_cast<jule::U64>(_15514_di >> _1689_extra),static_cast<jule::U64>(_15514_di & _1699_extra_mask));
	jule::Bool _17313_round_up = false;
	if (_15313_exact) {
		_17313_round_up=((_17113_dfrac > (1LL << (_1689_extra - 1LL))) || ((_17113_dfrac == (1LL << (_1689_extra - 1LL))) && (!(_15529_d0)))) || (((_17113_dfrac == (1LL << (_1689_extra - 1LL))) && _15529_d0) && ((_15514_di & 1LL) == 1LL));
	} else {
		_17313_round_up=(_17113_dfrac >> (_1689_extra - 1LL)) == 1LL;
	}
	if (_17113_dfrac != 0LL) {
		_15529_d0=false;
	}
	_1b56e9897_format_decimal(_12326_d,_15514_di,(!(_15529_d0)),_17313_round_up,_12368_prec);
	_12326_d._field_dp-=_1489_q;
}



inline void _1b56e9897_format_decimal(_1cdd4411b_DecimalSlice& _20424_d,jule::U64 _20445_m,jule::Bool _20457_trunc,jule::Bool _20474_round_up,jule::Int _20490_prec) {
	jule::U64 _2059_max = _1b56e9897_U64_POW10[static_cast<jule::Int>(_20490_prec)];
	jule::Int _20613_trimmed = 0LL;
	_iter_begin_4424633872:;
	if (!(_20445_m >= _2059_max)) { goto _iter_end_4424633872; }
	{
		jule::U64 _20814_a = jule::div(_20445_m,10LL);
		jule::U64 _20817_b = jule::mod(_20445_m,10LL);
		std::tie(_20814_a,_20817_b) = std::make_tuple(jule::div(_20445_m,10LL),jule::mod(_20445_m,10LL));
		_20445_m=_20814_a;
		(_20613_trimmed)++;
		if (_20817_b > 5LL) {
			_20474_round_up=true;
		} else if (_20817_b < 5LL) {
			_20474_round_up=false;
		} else {
			_20474_round_up=_20457_trunc || ((_20445_m & 1LL) == 1LL);
		}
		if (_20817_b != 0LL) {
			_20457_trunc=true;
		}
	}
	_iter_next_4424633872:;
	goto _iter_begin_4424633872;
	_iter_end_4424633872:;
	if (_20474_round_up) {
		(_20445_m)++;
	}
	if (_20445_m >= _2059_max) {
		_20445_m = jule::div(_20445_m,10LL);
		(_20613_trimmed)++;
	}
	jule::Uint _23313_n = static_cast<jule::Uint>(_20490_prec);
	_20424_d._field_nd=static_cast<jule::Int>(_20490_prec);
	jule::U64 _23513_v = _20445_m;
	_iter_begin_4424644464:;
	if (!(_23513_v >= 100LL)) { goto _iter_end_4424644464; }
	{
		jule::U64 _23717_v1 = 0LLU;
		jule::U64 _23817_v2 = 0LLU;
		if ((_23513_v >> 32LL) == 0LL) {
			std::tie(_23717_v1,_23817_v2) = std::make_tuple(static_cast<jule::U64>(jule::div(static_cast<jule::U32>(_23513_v),100LL)),static_cast<jule::U64>(jule::mod(static_cast<jule::U32>(_23513_v),100LL)));
		} else {
			std::tie(_23717_v1,_23817_v2) = std::make_tuple(static_cast<jule::U64>(jule::div(_23513_v,100LL)),static_cast<jule::U64>(jule::mod(_23513_v,100LL)));
		}
		_23313_n-=2LL;
		_20424_d._field_d[static_cast<jule::Int>(_23313_n + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _23817_v2) + 1LL)]);
		_20424_d._field_d[static_cast<jule::Int>(_23313_n + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _23817_v2) + 0LL)]);
		_23513_v=_23717_v1;
	}
	_iter_next_4424644464:;
	goto _iter_begin_4424644464;
	_iter_end_4424644464:;
	if (_23513_v > 0LL) {
		(_23313_n)--;
		_20424_d._field_d[static_cast<jule::Int>(_23313_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _23513_v) + 1LL)]);
	}
	if (_23513_v >= 10LL) {
		(_23313_n)--;
		_20424_d._field_d[static_cast<jule::Int>(_23313_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(2LL * _23513_v)]);
	}
	_iter_begin_4424668592:;
	if (!(_20424_d._field_d[static_cast<jule::Int>(_20424_d._field_nd - 1LL)] == '0')) { goto _iter_end_4424668592; }
	{
		(_20424_d._field_nd)--;
		(_20613_trimmed)++;
	}
	_iter_next_4424668592:;
	goto _iter_begin_4424668592;
	_iter_end_4424668592:;
	_20424_d._field_dp=static_cast<jule::Int>(_20424_d._field_nd + _20613_trimmed);
}



inline void _1b56e9897_ryu_ftoa_shortest(_1cdd4411b_DecimalSlice& _26527_d,jule::U64 _26548_mant,jule::Int _26559_exp,_1cdd4411b_FloatInfo& _26570_flt) {
	if (_26548_mant == 0LL) {
		std::tie(_26527_d._field_nd,_26527_d._field_dp) = std::make_tuple(0LL,0LL);
		return;
	}
	if ((_26559_exp <= 0LL) && (_1b5e977e8_trailing_zeros64(_26548_mant) >= (-(_26559_exp)))) {
		_26548_mant>>=static_cast<jule::Uint>((-(_26559_exp)));
		_1b56e9897_ryu_digits(_26527_d,_26548_mant,_26548_mant,_26548_mant,true,false);
		return;
	}
	jule::U64 _27710_ml;
	jule::U64 _27714_mc;
	jule::U64 _27718_mu;
	jule::Int _27726_e2;
	std::tie(_27710_ml,_27714_mc,_27718_mu,_27726_e2) = _1b56e9897_compute_bounds(_26548_mant,_26559_exp,_26570_flt);
	if (_27726_e2 == 0LL) {
		_1b56e9897_ryu_digits(_26527_d,_27710_ml,_27714_mc,_27718_mu,true,false);
		return;
	}
	jule::Int _2839_q = _1b56e9897_mul_by_log2_log10(static_cast<jule::Int>((-(_27726_e2)))) + 1LL;
	jule::U64 _28713_dl = 0LLU;
	jule::U64 _28813_dc = 0LLU;
	jule::U64 _28913_du = 0LLU;
	jule::Bool _29013_dl0 = false;
	jule::Bool _29113_dc0 = false;
	jule::Bool _29213_du0 = false;
	if (_26570_flt == _1cdd4411b_F32_INFO) {
		jule::U32 _29417_dl32 = 0LLU;
		jule::U32 _29517_dc32 = 0LLU;
		jule::U32 _29617_du32 = 0LLU;
		std::tie(_29417_dl32,std::ignore,_29013_dl0) = _1b56e9897_mult64bit_pow10(static_cast<jule::U32>(_27710_ml),_27726_e2,_2839_q);
		std::tie(_29517_dc32,std::ignore,_29113_dc0) = _1b56e9897_mult64bit_pow10(static_cast<jule::U32>(_27714_mc),_27726_e2,_2839_q);
		std::tie(_29617_du32,_27726_e2,_29213_du0) = _1b56e9897_mult64bit_pow10(static_cast<jule::U32>(_27718_mu),_27726_e2,_2839_q);
		std::tie(_28713_dl,_28813_dc,_28913_du) = std::make_tuple(static_cast<jule::U64>(_29417_dl32),static_cast<jule::U64>(_29517_dc32),static_cast<jule::U64>(_29617_du32));
	} else {
		std::tie(_28713_dl,std::ignore,_29013_dl0) = _1b56e9897_mult128bit_pow10(_27710_ml,_27726_e2,_2839_q);
		std::tie(_28813_dc,std::ignore,_29113_dc0) = _1b56e9897_mult128bit_pow10(_27714_mc,_27726_e2,_2839_q);
		std::tie(_28913_du,_27726_e2,_29213_du0) = _1b56e9897_mult128bit_pow10(_27718_mu,_27726_e2,_2839_q);
	}
	if (_27726_e2 >= 0LL) {
		jule::panic(jule::Str("not enough significant bits after mult128bit_pow10", 50));
	}
	if (_2839_q > 55LL) {
		std::tie(_29013_dl0,_29113_dc0,_29213_du0) = std::make_tuple(false,false,false);
	}
	if ((_2839_q < 0LL) && (_2839_q >= -24LL)) {
		if (_1b56e9897_divisible_by_pow5(_27710_ml,static_cast<jule::Int>((-(_2839_q))))) {
			_29013_dl0=true;
		}
		if (_1b56e9897_divisible_by_pow5(_27714_mc,static_cast<jule::Int>((-(_2839_q))))) {
			_29113_dc0=true;
		}
		if (_1b56e9897_divisible_by_pow5(_27718_mu,static_cast<jule::Int>((-(_2839_q))))) {
			_29213_du0=true;
		}
	}
	jule::Uint _3299_extra = static_cast<jule::Uint>((-(_27726_e2)));
	jule::U64 _3309_extra_mask = static_cast<jule::U64>((1LL << _3299_extra) - 1LL);
	jule::U64 _33213_fracl = 0LLU;
	std::tie(_28713_dl,_33213_fracl) = std::make_tuple(static_cast<jule::U64>(_28713_dl >> _3299_extra),static_cast<jule::U64>(_28713_dl & _3309_extra_mask));
	jule::U64 _33413_fracc = 0LLU;
	std::tie(_28813_dc,_33413_fracc) = std::make_tuple(static_cast<jule::U64>(_28813_dc >> _3299_extra),static_cast<jule::U64>(_28813_dc & _3309_extra_mask));
	jule::U64 _33613_fracu = 0LLU;
	std::tie(_28913_du,_33613_fracu) = std::make_tuple(static_cast<jule::U64>(_28913_du >> _3299_extra),static_cast<jule::U64>(_28913_du & _3309_extra_mask));
	jule::Bool _34213_uok = (!(_29213_du0)) || (_33613_fracu > 0LL);
	if (_29213_du0 && (_33613_fracu == 0LL)) {
		_34213_uok=(_26548_mant & 1LL) == 0LL;
	}
	if ((!(_34213_uok))) {
		(_28913_du)--;
	}
	jule::Bool _35113_cup = false;
	if (_29113_dc0) {
		_35113_cup=(_33413_fracc > (1LL << (_3299_extra - 1LL))) || ((_33413_fracc == (1LL << (_3299_extra - 1LL))) && ((_28813_dc & 1LL) == 1LL));
	} else {
		_35113_cup=(_33413_fracc >> (_3299_extra - 1LL)) == 1LL;
	}
	jule::Bool _3679_lok = (_29013_dl0 && (_33213_fracl == 0LL)) && ((_26548_mant & 1LL) == 0LL);
	if ((!(_3679_lok))) {
		(_28713_dl)++;
	}
	jule::Bool _3729_c0 = _29113_dc0 && (_33413_fracc == 0LL);
	_1b56e9897_ryu_digits(_26527_d,_28713_dl,_28813_dc,_28913_du,_3729_c0,_35113_cup);
	_26527_d._field_dp-=_2839_q;
}



inline jule::Int _1b56e9897_mul_by_log2_log10(jule::Int _38322_x) {
	return static_cast<jule::Int>((_38322_x * 78913LL) >> 18LL);
}



inline jule::Int _1b56e9897_mul_by_log10_log2(jule::Int _39322_x) {
	return static_cast<jule::Int>((_39322_x * 108853LL) >> 15LL);
}



inline std::tuple<jule::U64,jule::U64,jule::U64,jule::Int> _1b56e9897_compute_bounds(jule::U64 _40119_mant,jule::Int _40130_exp,_1cdd4411b_FloatInfo& _40218_flt) {
	jule::U64 _40236_lower = jule::U64();
	jule::U64 _40248_central = jule::U64();
	jule::U64 _40262_upper = jule::U64();
	jule::Int _40274_e2 = jule::Int();
	if ((_40119_mant != (1LL << _40218_flt._field_mantbits)) || (_40130_exp == ((_40218_flt._field_bias + 1LL) - static_cast<jule::Int>(_40218_flt._field_mantbits)))) {
		std::tie(_40236_lower,_40248_central,_40262_upper) = std::make_tuple(static_cast<jule::U64>((2LL * _40119_mant) - 1LL),static_cast<jule::U64>(2LL * _40119_mant),static_cast<jule::U64>((2LL * _40119_mant) + 1LL));
		_40274_e2=static_cast<jule::Int>(_40130_exp - 1LL);
	} else {
		std::tie(_40236_lower,_40248_central,_40262_upper) = std::make_tuple(static_cast<jule::U64>((4LL * _40119_mant) - 1LL),static_cast<jule::U64>(4LL * _40119_mant),static_cast<jule::U64>((4LL * _40119_mant) + 2LL));
		_40274_e2=static_cast<jule::Int>(_40130_exp - 2LL);
	}
	return std::make_tuple(_40236_lower,_40248_central,_40262_upper,_40274_e2);
}



inline void _1b56e9897_ryu_digits(_1cdd4411b_DecimalSlice& _41520_d,jule::U64 _41537_lower,jule::U64 _41549_central,jule::U64 _41563_upper,jule::Bool _41579_c0,jule::Bool _41593_cup) {
	jule::U32 _41614_lhi;
	jule::U32 _41619_llo;
	std::tie(_41614_lhi,_41619_llo) = _1b56e9897_divmod1e9(_41537_lower);
	jule::U32 _41710_chi;
	jule::U32 _41715_clo;
	std::tie(_41710_chi,_41715_clo) = _1b56e9897_divmod1e9(_41549_central);
	jule::U32 _41810_uhi;
	jule::U32 _41815_ulo;
	std::tie(_41810_uhi,_41815_ulo) = _1b56e9897_divmod1e9(_41563_upper);
	if (_41810_uhi == 0LL) {
		_1b56e9897_ryu_digits32(_41520_d,_41619_llo,_41715_clo,_41815_ulo,_41579_c0,_41593_cup,8LL);
	} else if (_41614_lhi < _41810_uhi) {
		if (_41619_llo != 0LL) {
			(_41614_lhi)++;
		}
		_41579_c0=_41579_c0 && (_41715_clo == 0LL);
		_41593_cup=(_41715_clo > 500000000LL) || ((_41715_clo == 500000000LL) && _41593_cup);
		_1b56e9897_ryu_digits32(_41520_d,_41614_lhi,_41710_chi,_41810_uhi,_41579_c0,_41593_cup,8LL);
		_41520_d._field_dp+=9LL;
	} else {
		_41520_d._field_nd=0LL;
		jule::Uint _43417_n = static_cast<jule::Uint>(9LLU);
		jule::U32 _43517_v = _41710_chi;
		_iter_begin_4424767792:;
		if (!(_43517_v > 0LL)) { goto _iter_end_4424767792; }
		{
			jule::U32 _43718_v1 = jule::div(_43517_v,10LL);
			jule::U32 _43722_v2 = jule::mod(_43517_v,10LL);
			std::tie(_43718_v1,_43722_v2) = std::make_tuple(jule::div(_43517_v,10LL),jule::mod(_43517_v,10LL));
			_43517_v=_43718_v1;
			(_43417_n)--;
			_41520_d._field_d[static_cast<jule::Int>(_43417_n)]=static_cast<jule::U8>(_43722_v2 + '0');
		}
		_iter_next_4424767792:;
		goto _iter_begin_4424767792;
		_iter_end_4424767792:;
		_41520_d._field_d=_41520_d._field_d.slice(static_cast<jule::Int>(_43417_n));
		_41520_d._field_nd=static_cast<jule::Int>(9LL - _43417_n);
		_1b56e9897_ryu_digits32(_41520_d,_41619_llo,_41715_clo,_41815_ulo,_41579_c0,_41593_cup,static_cast<jule::Int>(_41520_d._field_nd + 8LL));
	}
	_iter_begin_4424770000:;
	if (!((_41520_d._field_nd > 0LL) && (_41520_d._field_d[static_cast<jule::Int>(_41520_d._field_nd - 1LL)] == '0'))) { goto _iter_end_4424770000; }
	{
		(_41520_d._field_nd)--;
	}
	_iter_next_4424770000:;
	goto _iter_begin_4424770000;
	_iter_end_4424770000:;
	_iter_begin_4424767504:;
	if (!((_41520_d._field_nd > 0LL) && (_41520_d._field_d[0LL] == '0'))) { goto _iter_end_4424767504; }
	{
		(_41520_d._field_nd)--;
		(_41520_d._field_dp)--;
		_41520_d._field_d=_41520_d._field_d.slice(1LL);
	}
	_iter_next_4424767504:;
	goto _iter_begin_4424767504;
	_iter_end_4424767504:;
}



inline void _1b56e9897_ryu_digits32(_1cdd4411b_DecimalSlice& _46022_d,jule::U32 _46043_lower,jule::U32 _46059_central,jule::U32 _46121_upper,jule::Bool _46137_c0,jule::Bool _46151_cup,jule::Int _46166_endindex) {
	if (_46121_upper == 0LL) {
		_46022_d._field_dp=static_cast<jule::Int>(_46166_endindex + 1LL);
		return;
	}
	jule::Int _46613_trimmed = 0LL;
	jule::Int _46913_c_next_digit = 0LL;
	_iter_begin_4424789248:;
	if (!(_46121_upper > 0LL)) { goto _iter_end_4424789248; }
	{
		jule::U32 _47613_l = jule::div(_46043_lower + 9LL,10LL);
		jule::U32 _47718_c = jule::div(_46059_central,10LL);
		jule::U32 _47725_cdigit = jule::mod(_46059_central,10LL);
		std::tie(_47718_c,_47725_cdigit) = std::make_tuple(jule::div(_46059_central,10LL),jule::mod(_46059_central,10LL));
		jule::U32 _47813_u = jule::div(_46121_upper,10LL);
		if (_47613_l > _47813_u) {
			goto _iter_end_4424789248;
		}
		if ((_47613_l == (_47718_c + 1LL)) && (_47718_c < _47813_u)) {
			(_47718_c)++;
			_47725_cdigit=0LL;
			_46151_cup=false;
		}
		(_46613_trimmed)++;
		_46137_c0=_46137_c0 && (_46913_c_next_digit == 0LL);
		_46913_c_next_digit=static_cast<jule::Int>(_47725_cdigit);
		std::tie(_46043_lower,_46059_central,_46121_upper) = std::make_tuple(_47613_l,_47718_c,_47813_u);
	}
	_iter_next_4424789248:;
	goto _iter_begin_4424789248;
	_iter_end_4424789248:;
	if (_46613_trimmed > 0LL) {
		_46151_cup=((_46913_c_next_digit > 5LL) || ((_46913_c_next_digit == 5LL) && (!(_46137_c0)))) || (((_46913_c_next_digit == 5LL) && _46137_c0) && ((_46059_central & 1LL) == 1LL));
	}
	if ((_46059_central < _46121_upper) && _46151_cup) {
		(_46059_central)++;
	}
	_46166_endindex-=_46613_trimmed;
	jule::U32 _51713_v = _46059_central;
	jule::Int _51813_n = _46166_endindex;
	_iter_begin_4424793232:;
	if (!(_51813_n > _46022_d._field_nd)) { goto _iter_end_4424793232; }
	{
		jule::U32 _52014_v1 = jule::div(_51713_v,100LL);
		jule::U32 _52018_v2 = jule::mod(_51713_v,100LL);
		std::tie(_52014_v1,_52018_v2) = std::make_tuple(jule::div(_51713_v,100LL),jule::mod(_51713_v,100LL));
		_46022_d._field_d[static_cast<jule::Int>(_51813_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _52018_v2) + 1LL)]);
		_46022_d._field_d[static_cast<jule::Int>(_51813_n - 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _52018_v2) + 0LL)]);
		_51813_n-=2LL;
		_51713_v=_52014_v1;
	}
	_iter_next_4424793232:;
	goto _iter_begin_4424793232;
	_iter_end_4424793232:;
	if (_51813_n == _46022_d._field_nd) {
		_46022_d._field_d[static_cast<jule::Int>(_51813_n)]=static_cast<jule::U8>(_51713_v + '0');
	}
	_46022_d._field_nd=static_cast<jule::Int>(_46166_endindex + 1LL);
	_46022_d._field_dp=static_cast<jule::Int>(_46022_d._field_nd + _46613_trimmed);
}



inline std::tuple<jule::U32,jule::Int,jule::Bool> _1b56e9897_mult64bit_pow10(jule::U32 _54220_m,jule::Int _54232_e2,jule::Int _54241_q) {
	jule::U32 _54251_resM = jule::U32();
	jule::Int _54262_resE = jule::Int();
	jule::Bool _54273_exact = jule::Bool();
	if (_54241_q == 0LL) {
		_54251_resM = static_cast<jule::U32>(_54220_m << 6LL);
		_54262_resE = static_cast<jule::Int>(_54232_e2 - 6LL);
		_54273_exact = true;
		return std::make_tuple(_54251_resM,_54262_resE,_54273_exact);
	}
	if ((_54241_q < -348LL) || (347LL < _54241_q)) {
		jule::panic(jule::Str("mult64bit_pow10: power of 10 is out of range", 44));
	}
	jule::U64 _55113_pow = _1cde06541_DETAILED_POWS_OF_TEN[static_cast<jule::Int>(_54241_q - -348LL)][1LL];
	if (_54241_q < 0LL) {
		_55113_pow+=1LL;
	}
	jule::U64 _55610_hi;
	jule::U64 _55614_lo;
	std::tie(_55610_hi,_55614_lo) = _1b5e977e8_mul64(static_cast<jule::U64>(_54220_m),_55113_pow);
	_54232_e2+=static_cast<jule::Int>((_1b56e9897_mul_by_log10_log2(_54241_q) - 63LL) + 57LL);
	_54251_resM = static_cast<jule::U32>((_55610_hi << 7LL) | (_55614_lo >> 57LL));
	_54262_resE = _54232_e2;
	_54273_exact = (_55614_lo << 7LL) == 0LL;
	return std::make_tuple(_54251_resM,_54262_resE,_54273_exact);
}



inline std::tuple<jule::U64,jule::Int,jule::Bool> _1b56e9897_mult128bit_pow10(jule::U64 _57021_m,jule::Int _57033_e2,jule::Int _57042_q) {
	jule::U64 _57052_resM = jule::U64();
	jule::Int _57063_resE = jule::Int();
	jule::Bool _57074_exact = jule::Bool();
	if (_57042_q == 0LL) {
		_57052_resM = static_cast<jule::U64>(_57021_m << 8LL);
		_57063_resE = static_cast<jule::Int>(_57033_e2 - 8LL);
		_57074_exact = true;
		return std::make_tuple(_57052_resM,_57063_resE,_57074_exact);
	}
	if ((_57042_q < -348LL) || (347LL < _57042_q)) {
		jule::panic(jule::Str("mult128bit_pow10: power of 10 is out of range", 45));
	}
	jule::Array<jule::U64,2> _57913_pow = _1cde06541_DETAILED_POWS_OF_TEN[static_cast<jule::Int>(_57042_q - -348LL)];
	if (_57042_q < 0LL) {
		_57913_pow[0LL]+=1LL;
	}
	_57033_e2+=static_cast<jule::Int>((_1b56e9897_mul_by_log10_log2(_57042_q) - 127LL) + 119LL);
	jule::U64 _58710_l1;
	jule::U64 _58714_l0;
	std::tie(_58710_l1,_58714_l0) = _1b5e977e8_mul64(_57021_m,_57913_pow[0LL]);
	jule::U64 _58814_h1;
	jule::U64 _58818_h0;
	std::tie(_58814_h1,_58818_h0) = _1b5e977e8_mul64(_57021_m,_57913_pow[1LL]);
	jule::U64 _58910_mid;
	jule::U64 _58915_carry;
	std::tie(_58910_mid,_58915_carry) = _1b5e977e8_add64(_58710_l1,_58818_h0,0LLU);
	_58814_h1+=_58915_carry;
	_57052_resM = static_cast<jule::U64>((_58814_h1 << 9LL) | (_58910_mid >> 55LL));
	_57063_resE = _57033_e2;
	_57074_exact = ((_58910_mid << 9LL) == 0LL) && (_58714_l0 == 0LL);
	return std::make_tuple(_57052_resM,_57063_resE,_57074_exact);
}



inline jule::Bool _1b56e9897_divisible_by_pow5(jule::U64 _59426_m,jule::Int _59434_k) {
	if (_59426_m == 0LL) {
		return true;
	}
	jule::Int _59813_i = 0LL;
	_iter_begin_4424862736:;
	if (!(_59813_i < _59434_k)) { goto _iter_end_4424862736; }
	{
		if (jule::mod(_59426_m,5LL) != 0LL) {
			return false;
		}
		_59426_m = jule::div(_59426_m,5LL);
	}
	_iter_next_4424862736:;
	(_59813_i)++;
	goto _iter_begin_4424862736;
	_iter_end_4424862736:;
	return true;
}



inline std::tuple<jule::U32,jule::U32> _1b56e9897_divmod1e9(jule::U64 _61014_x) {
	if (true) {
		return std::make_tuple(static_cast<jule::U32>(jule::div(_61014_x,1000000000LL)),static_cast<jule::U32>(jule::mod(_61014_x,1000000000LL)));
	}
	jule::U64 _61510_hi;
	std::tie(_61510_hi,std::ignore) = _1b5e977e8_mul64(static_cast<jule::U64>(_61014_x >> 1LL),9903520314283042200LLU);
	jule::U64 _6169_q = _61510_hi >> 28LL;
	return std::make_tuple(static_cast<jule::U32>(_6169_q),static_cast<jule::U32>(_61014_x - (_6169_q * 1000000000LL)));
}



inline jule::Int _1b588cbe4_digit_zero(jule::Slice<jule::U8> _26519_dst) {
	{
		auto _range_expr = _26519_dst;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1b588cbe4_i = 0;
			_iter_begin_4424874336:;
			{
				_26519_dst[static_cast<jule::Int>(_1b588cbe4_i)]='0';
			}
			_iter_next_4424874336:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1b588cbe4_i; goto _iter_begin_4424874336; }
			_iter_end_4424874336:;
		}
	}
	return static_cast<jule::I64>(_26519_dst.len());
}



inline void _1b588cbe4_trim(_1b588cbe4_Decimal& _27514_a) {
	_iter_begin_4424875536:;
	if (!((_27514_a._field_nd > 0LL) && (_27514_a._field_d[static_cast<jule::Int>(_27514_a._field_nd - 1LL)] == '0'))) { goto _iter_end_4424875536; }
	{
		(_27514_a._field_nd)--;
	}
	_iter_next_4424875536:;
	goto _iter_begin_4424875536;
	_iter_end_4424875536:;
	if (_27514_a._field_nd == 0LL) {
		_27514_a._field_dp=0LL;
	}
}



inline void _1b588cbe4_right_shift(_1b588cbe4_Decimal& _28521_a,jule::Uint _28533_k) {
	jule::Int _28613_r = 0LL;
	jule::Int _28713_w = 0LL;
	jule::Uint _29013_n = 0LLU;
	_iter_begin_4424884304:;
	if (!((_29013_n >> _28533_k) == 0LL)) { goto _iter_end_4424884304; }
	{
		if (_28613_r >= _28521_a._field_nd) {
			if (_29013_n == 0LL) {
				_28521_a._field_nd=0LL;
				return;
			}
			_iter_begin_4424890352:;
			if (!((_29013_n >> _28533_k) == 0LL)) { goto _iter_end_4424890352; }
			{
				_29013_n=static_cast<jule::Uint>(_29013_n * 10LL);
				(_28613_r)++;
			}
			_iter_next_4424890352:;
			goto _iter_begin_4424890352;
			_iter_end_4424890352:;
			goto _iter_end_4424884304;
		}
		jule::Uint _30413_c = static_cast<jule::Uint>(_28521_a._field_d[static_cast<jule::Int>(_28613_r)]);
		_29013_n=static_cast<jule::Uint>(((_29013_n * 10LL) + _30413_c) - '0');
	}
	_iter_next_4424884304:;
	(_28613_r)++;
	goto _iter_begin_4424884304;
	_iter_end_4424884304:;
	_28521_a._field_dp-=static_cast<jule::Int>(_28613_r - 1LL);
	jule::Uint _3099_mask = static_cast<jule::Uint>(static_cast<jule::Uint>(1LL << _28533_k) - 1LL);
	_iter_begin_4424897088:;
	if (!(_28613_r < _28521_a._field_nd)) { goto _iter_end_4424897088; }
	{
		jule::Uint _31313_c = static_cast<jule::Uint>(_28521_a._field_d[static_cast<jule::Int>(_28613_r)]);
		jule::Uint _31413_dig = _29013_n >> _28533_k;
		_29013_n&=_3099_mask;
		_28521_a._field_d[static_cast<jule::Int>(_28713_w)]=static_cast<jule::U8>(_31413_dig + '0');
		(_28713_w)++;
		_29013_n=static_cast<jule::Uint>(((_29013_n * 10LL) + _31313_c) - '0');
	}
	_iter_next_4424897088:;
	(_28613_r)++;
	goto _iter_begin_4424897088;
	_iter_end_4424897088:;
	_iter_begin_4424904016:;
	if (!(_29013_n > 0LL)) { goto _iter_end_4424904016; }
	{
		jule::Uint _32313_dig = _29013_n >> _28533_k;
		_29013_n&=_3099_mask;
		if (_28713_w < 800LL) {
			_28521_a._field_d[static_cast<jule::Int>(_28713_w)]=static_cast<jule::U8>(_32313_dig + '0');
			(_28713_w)++;
		} else if (_32313_dig > 0LL) {
			_28521_a._field_trunc=true;
		}
		_29013_n=static_cast<jule::Uint>(_29013_n * 10LL);
	}
	_iter_next_4424904016:;
	goto _iter_begin_4424904016;
	_iter_end_4424904016:;
	_28521_a._field_nd=_28713_w;
	_1b588cbe4_trim(_28521_a);
}



inline jule::Bool _1b588cbe4_prefix_is_less_than(jule::Slice<jule::U8> _33924_b,jule::Str _33935_s) {
	jule::Int _34013_i = 0LL;
	_iter_begin_4424912896:;
	if (!(_34013_i < _33935_s.len())) { goto _iter_end_4424912896; }
	{
		if (_34013_i >= _33924_b.len()) {
			return true;
		}
		if (_33924_b[static_cast<jule::Int>(_34013_i)] != _33935_s[static_cast<jule::Int>(_34013_i)]) {
			return _33924_b[static_cast<jule::Int>(_34013_i)] < _33935_s[static_cast<jule::Int>(_34013_i)];
		}
	}
	_iter_next_4424912896:;
	(_34013_i)++;
	goto _iter_begin_4424912896;
	_iter_end_4424912896:;
	return false;
}



inline void _1b588cbe4_left_shift(_1b588cbe4_Decimal& _35320_a,jule::Uint _35332_k) {
	jule::Int _35413_delta = _1b588cbe4_LEFTCHEATS[static_cast<jule::Int>(_35332_k)]._field_delta;
	if (_1b588cbe4_prefix_is_less_than(_35320_a._field_d.slice(0LL,static_cast<jule::Int>(_35320_a._field_nd)),_1b588cbe4_LEFTCHEATS[static_cast<jule::Int>(_35332_k)]._field_cutoff)) {
		(_35413_delta)--;
	}
	jule::Int _35913_r = _35320_a._field_nd;
	jule::Int _36013_w = _35320_a._field_nd + _35413_delta;
	jule::Uint _36313_n = 0LLU;
	(_35913_r)--;
	_iter_begin_4424930128:;
	if (!(_35913_r >= 0LL)) { goto _iter_end_4424930128; }
	{
		_36313_n+=static_cast<jule::Uint>((static_cast<jule::Uint>(_35320_a._field_d[static_cast<jule::Int>(_35913_r)]) - '0') << _35332_k);
		jule::Uint _36713_quo = jule::div(_36313_n,10LL);
		jule::Uint _36813_rem = _36313_n - (10LL * _36713_quo);
		(_36013_w)--;
		if (_36013_w < 800LL) {
			_35320_a._field_d[static_cast<jule::Int>(_36013_w)]=static_cast<jule::U8>(_36813_rem + '0');
		} else if (_36813_rem != 0LL) {
			_35320_a._field_trunc=true;
		}
		_36313_n=_36713_quo;
	}
	_iter_next_4424930128:;
	(_35913_r)--;
	goto _iter_begin_4424930128;
	_iter_end_4424930128:;
	_iter_begin_4424939856:;
	if (!(_36313_n > 0LL)) { goto _iter_end_4424939856; }
	{
		jule::Uint _38013_quo = jule::div(_36313_n,10LL);
		jule::Uint _38113_rem = _36313_n - (10LL * _38013_quo);
		(_36013_w)--;
		if (_36013_w < 800LL) {
			_35320_a._field_d[static_cast<jule::Int>(_36013_w)]=static_cast<jule::U8>(_38113_rem + '0');
		} else if (_38113_rem != 0LL) {
			_35320_a._field_trunc=true;
		}
		_36313_n=_38013_quo;
	}
	_iter_next_4424939856:;
	goto _iter_begin_4424939856;
	_iter_end_4424939856:;
	_35320_a._field_nd+=_35413_delta;
	if (_35320_a._field_nd >= 800LL) {
		_35320_a._field_nd=800LL;
	}
	_35320_a._field_dp+=_35413_delta;
	_1b588cbe4_trim(_35320_a);
}



inline jule::Bool _1b588cbe4_should_round_up(_1b588cbe4_Decimal& _40021_a,jule::Int _40033_nd) {
	if ((_40033_nd < 0LL) || (_40033_nd >= _40021_a._field_nd)) {
		return false;
	}
	if ((_40021_a._field_d[static_cast<jule::Int>(_40033_nd)] == '5') && ((_40033_nd + 1LL) == _40021_a._field_nd)) {
		if (_40021_a._field_trunc) {
			return true;
		}
		return (_40033_nd > 0LL) && (jule::mod(_40021_a._field_d[static_cast<jule::Int>(_40033_nd - 1LL)] - '0',2LL) != 0LL);
	}
	return _40021_a._field_d[static_cast<jule::Int>(_40033_nd)] >= '5';
}



inline jule::Str _1b59a1be8_fmt_uint(jule::U64 _6217_i,jule::Int _6225_base) {
	if ((true && (_6217_i < 100LL)) && (_6225_base == 10LL)) {
		return _1b59a1be8_small(static_cast<jule::Int>(_6217_i));
	}
	jule::Str _6613_s;
	std::tie(std::ignore,_6613_s) = _1b59a1be8_fmt_bits(nullptr,_6217_i,_6225_base,false,false);
	return _6613_s;
}



inline jule::Str _1b59a1be8_fmt_int(jule::I64 _7316_i,jule::Int _7324_base) {
	if (((true && (0LL <= _7316_i)) && (_7316_i < 100LL)) && (_7324_base == 10LL)) {
		return _1b59a1be8_small(static_cast<jule::Int>(_7316_i));
	}
	jule::Str _7713_s;
	std::tie(std::ignore,_7713_s) = _1b59a1be8_fmt_bits(nullptr,static_cast<jule::U64>(_7316_i),_7324_base,_7316_i < 0LL,false);
	return _7713_s;
}



inline jule::Str _1b59a1be8_itoa(jule::Int _8213_i) {
	return _1b59a1be8_fmt_int(static_cast<jule::I64>(_8213_i),10LL);
}



inline jule::Str _1b59a1be8_small(jule::Int _8510_i) {
	if (_8510_i < 10LL) {
		return jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).slice(static_cast<jule::Int>(_8510_i),static_cast<jule::Int>(_8510_i + 1LL));
	}
	return jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200).slice(static_cast<jule::Int>(_8510_i * 2LL),static_cast<jule::Int>((_8510_i * 2LL) + 2LL));
}



inline jule::Bool _1b59a1be8_is_power_of_two(jule::Int _9220_x) {
	return (_9220_x & (_9220_x - 1LL)) == 0LL;
}



inline std::tuple<jule::Slice<jule::U8>,jule::Str> _1b59a1be8_fmt_bits(jule::Slice<jule::U8> _9917_dst,jule::U64 _9934_u,jule::Int _9942_base,jule::Bool _9953_neg,jule::Bool _9964_append_) {
	jule::Slice<jule::U8> _9981_d = jule::Slice<jule::U8>();
	jule::Str _9992_s = jule::Str();
	if ((_9942_base < 2LL) || (_9942_base > jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).len())) {
		jule::panic(jule::Str("std::conv: illegal base", 23));
	}
	jule::Array<jule::U8,65> _10513_a = jule::Array<jule::U8,65>({});
	jule::Int _10613_i = 65LL;
	if (_9953_neg) {
		_9934_u=static_cast<jule::U64>((-(_9934_u)));
	}
	if (_9942_base == 10LL) {
		if (false) {
			_iter_begin_4424989376:;
			if (!(_9934_u >= 1000000000LL)) { goto _iter_end_4424989376; }
			{
				jule::U64 _12521_q = jule::div(_9934_u,1000000000LL);
				jule::Uint _12625_us = static_cast<jule::Uint>(_9934_u - (_12521_q * 1000000000LL));
				jule::Int _12725_j = 4LL;
				_iter_begin_4425007952:;
				if (!(_12725_j > 0LL)) { goto _iter_end_4425007952; }
				{
					jule::Uint _12925_is = jule::mod(_12625_us,100LL) * 2LL;
					_12625_us = jule::div(_12625_us,100LL);
					_10613_i-=2LL;
					_10513_a[static_cast<jule::Int>(_10613_i + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_12925_is + 1LL)]);
					_10513_a[static_cast<jule::Int>(_10613_i + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_12925_is + 0LL)]);
				}
				_iter_next_4425007952:;
				(_12725_j)--;
				goto _iter_begin_4425007952;
				_iter_end_4425007952:;
				(_10613_i)--;
				_10513_a[static_cast<jule::Int>(_10613_i)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((_12625_us * 2LL) + 1LL)]);
				_9934_u=_12521_q;
			}
			_iter_next_4424989376:;
			goto _iter_begin_4424989376;
			_iter_end_4424989376:;
		}
		jule::Uint _14717_us = static_cast<jule::Uint>(_9934_u);
		_iter_begin_4425010480:;
		if (!(_14717_us >= 100LL)) { goto _iter_end_4425010480; }
		{
			jule::Uint _14917_is = jule::mod(_14717_us,100LL) * 2LL;
			_14717_us = jule::div(_14717_us,100LL);
			_10613_i-=2LL;
			_10513_a[static_cast<jule::Int>(_10613_i + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_14917_is + 1LL)]);
			_10513_a[static_cast<jule::Int>(_10613_i + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_14917_is + 0LL)]);
		}
		_iter_next_4425010480:;
		goto _iter_begin_4425010480;
		_iter_end_4425010480:;
		jule::Uint _15713_is = _14717_us * 2LL;
		(_10613_i)--;
		_10513_a[static_cast<jule::Int>(_10613_i)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_15713_is + 1LL)]);
		if (_14717_us >= 10LL) {
			(_10613_i)--;
			_10513_a[static_cast<jule::Int>(_10613_i)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_15713_is)]);
		}
	} else if (_1b59a1be8_is_power_of_two(_9942_base)) {
		jule::Uint _17213_shift = static_cast<jule::Uint>(_1b5e977e8_trailing_zeros(static_cast<jule::Uint>(_9942_base))) & 7LL;
		jule::U64 _17313_b = static_cast<jule::U64>(_9942_base);
		jule::Uint _17413_m = static_cast<jule::Uint>(_9942_base) - 1LL;
		_iter_begin_4425035968:;
		if (!(_9934_u >= _17313_b)) { goto _iter_end_4425035968; }
		{
			(_10613_i)--;
			_10513_a[static_cast<jule::Int>(_10613_i)]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::Int>(static_cast<jule::Uint>(_9934_u) & _17413_m)]);
			_9934_u>>=_17213_shift;
		}
		_iter_next_4425035968:;
		goto _iter_begin_4425035968;
		_iter_end_4425035968:;
		(_10613_i)--;
		_10513_a[static_cast<jule::Int>(_10613_i)]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::Int>(static_cast<jule::Uint>(_9934_u))]);
	} else {
		jule::U64 _18513_b = static_cast<jule::U64>(_9942_base);
		_iter_begin_4425051664:;
		if (!(_9934_u >= _18513_b)) { goto _iter_end_4425051664; }
		{
			(_10613_i)--;
			jule::U64 _19117_q = jule::div(_9934_u,_18513_b);
			_10513_a[static_cast<jule::Int>(_10613_i)]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::Int>(static_cast<jule::Uint>(_9934_u - (_19117_q * _18513_b)))]);
			_9934_u=_19117_q;
		}
		_iter_next_4425051664:;
		goto _iter_begin_4425051664;
		_iter_end_4425051664:;
		(_10613_i)--;
		_10513_a[static_cast<jule::Int>(_10613_i)]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::Int>(static_cast<jule::Uint>(_9934_u))]);
	}
	if (_9953_neg) {
		(_10613_i)--;
		_10513_a[static_cast<jule::Int>(_10613_i)]='-';
	}
	if (_9964_append_) {
		_9981_d=jule::append(_9917_dst,_10513_a.slice(static_cast<jule::Int>(_10613_i)));
		return std::make_tuple(_9981_d,_9992_s);
	}
	_9992_s=static_cast<jule::Str>(_10513_a.slice(static_cast<jule::Int>(_10613_i)));
	return std::make_tuple(_9981_d,_9992_s);
}



inline void _1b615dbac_push_opt_level(jule::Int _3223_level) {
	{
		auto _match_expr{ _3223_level };
		if (!((0LLU) == _match_expr)) { goto _case_end_4425227904; }
		_case_begin_4425227904:;
		{
			_1b615dbac_OPTIMIZATIONS=nullptr;
		}
		goto _match_end_4425226384;
		_case_end_4425227904:;
		if (!((1LLU) == _match_expr)) { goto _case_end_4425228016; }
		_case_begin_4425228016:;
		{
			_1b615dbac_OPTIMIZATIONS=jule::append(_1b615dbac_OPTIMIZATIONS,jule::Slice<jule::Str>({jule::Str("--opt-copy", 10),jule::Str("--opt-deadcode", 14),jule::Str("--opt-append", 12),jule::Str("--opt-math", 10),jule::Str("--opt-access", 12)}));
		}
		goto _match_end_4425226384;
		_case_end_4425228016:;
		_case_begin_4425226864:;
		{
			return;
		}
		goto _match_end_4425226384;
		_case_end_4425226864:;
		_match_end_4425226384:;
	}
}



inline jule::Bool _1b615dbac_is_opt_enabled(jule::Str _5123_opt) {
	{
		auto _range_expr = _1b615dbac_OPTIMIZATIONS;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _1b615dbac_oopt = *_range_begin;
			_iter_begin_4425227456:;
			{
				if (_5123_opt == _1b615dbac_oopt) {
					return true;
				}
			}
			_iter_next_4425227456:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b615dbac_oopt = *_range_begin; goto _iter_begin_4425227456; }
			_iter_end_4425227456:;
		}
	}
	return false;
}



inline jule::Int _1b618d5c1_get_last_fs_error(void) {
	jule::Int _739_err = _1cdd76a22_get_last_errno();
	{
		auto _match_expr{ _739_err };
		if (!((13LL) == _match_expr)) { goto _case_end_4425272944; }
		_case_begin_4425272944:;
		{
			return 1LLU;
		}
		goto _match_end_4425271040;
		_case_end_4425272944:;
		if (!((5LL) == _match_expr)) { goto _case_end_4425272544; }
		_case_begin_4425272544:;
		{
			return 2LLU;
		}
		goto _match_end_4425271040;
		_case_end_4425272544:;
		if (!((40LL) == _match_expr)) { goto _case_end_4425272656; }
		_case_begin_4425272656:;
		{
			return 3LLU;
		}
		goto _match_end_4425271040;
		_case_end_4425272656:;
		if (!((36LL) == _match_expr)) { goto _case_end_4425272768; }
		_case_begin_4425272768:;
		{
			return 4LLU;
		}
		goto _match_end_4425271040;
		_case_end_4425272768:;
		if (!((2LL) == _match_expr)) { goto _case_end_4425271824; }
		_case_begin_4425271824:;
		{
			return 5LLU;
		}
		goto _match_end_4425271040;
		_case_end_4425271824:;
		if (!((20LL) == _match_expr)) { goto _case_end_4425271936; }
		_case_begin_4425271936:;
		{
			return 6LLU;
		}
		goto _match_end_4425271040;
		_case_end_4425271936:;
		if (!((75LL) == _match_expr)) { goto _case_end_4425272048; }
		_case_begin_4425272048:;
		{
			return 7LLU;
		}
		goto _match_end_4425271040;
		_case_end_4425272048:;
		if (!((9LL) == _match_expr)) { goto _case_end_4425273152; }
		_case_begin_4425273152:;
		{
			return 8LLU;
		}
		goto _match_end_4425271040;
		_case_end_4425273152:;
		if (!((24LL) == _match_expr)) { goto _case_end_4425273264; }
		_case_begin_4425273264:;
		{
			return 9LLU;
		}
		goto _match_end_4425271040;
		_case_end_4425273264:;
		if (!((23LL) == _match_expr)) { goto _case_end_4425273376; }
		_case_begin_4425273376:;
		{
			return 10LLU;
		}
		goto _match_end_4425271040;
		_case_end_4425273376:;
		if (!((12LL) == _match_expr)) { goto _case_end_4425274112; }
		_case_begin_4425274112:;
		{
			return 11LLU;
		}
		goto _match_end_4425271040;
		_case_end_4425274112:;
		if (!((17LL) == _match_expr)) { goto _case_end_4425274224; }
		_case_begin_4425274224:;
		{
			return 12LLU;
		}
		goto _match_end_4425271040;
		_case_end_4425274224:;
		if (!((4LL) == _match_expr)) { goto _case_end_4425274336; }
		_case_begin_4425274336:;
		{
			return 13LLU;
		}
		goto _match_end_4425271040;
		_case_end_4425274336:;
		if (!((22LL) == _match_expr)) { goto _case_end_4425274448; }
		_case_begin_4425274448:;
		{
			return 14LLU;
		}
		goto _match_end_4425271040;
		_case_end_4425274448:;
		if (!((21LL) == _match_expr)) { goto _case_end_4425274560; }
		_case_begin_4425274560:;
		{
			return 15LLU;
		}
		goto _match_end_4425271040;
		_case_end_4425274560:;
		if (!((63LL) == _match_expr)) { goto _case_end_4425274672; }
		_case_begin_4425274672:;
		{
			return 16LLU;
		}
		goto _match_end_4425271040;
		_case_end_4425274672:;
		if (!((28LL) == _match_expr)) { goto _case_end_4425274784; }
		_case_begin_4425274784:;
		{
			return 17LLU;
		}
		goto _match_end_4425271040;
		_case_end_4425274784:;
		if (!((6LL) == _match_expr)) { goto _case_end_4425274896; }
		_case_begin_4425274896:;
		{
			return 18LLU;
		}
		goto _match_end_4425271040;
		_case_end_4425274896:;
		if (!((30LL) == _match_expr)) { goto _case_end_4425275008; }
		_case_begin_4425275008:;
		{
			return 19LLU;
		}
		goto _match_end_4425271040;
		_case_end_4425275008:;
		if (!((11LL) == _match_expr)) { goto _case_end_4425275120; }
		_case_begin_4425275120:;
		{
			return 20LLU;
		}
		goto _match_end_4425271040;
		_case_end_4425275120:;
		if (!((26LL) == _match_expr || (16LL) == _match_expr)) { goto _case_end_4425275232; }
		_case_begin_4425275232:;
		{
			return 21LLU;
		}
		goto _match_end_4425271040;
		_case_end_4425275232:;
		if (!((27LL) == _match_expr)) { goto _case_end_4425275344; }
		_case_begin_4425275344:;
		{
			return 22LLU;
		}
		goto _match_end_4425271040;
		_case_end_4425275344:;
		if (!((32LL) == _match_expr)) { goto _case_end_4425275456; }
		_case_begin_4425275456:;
		{
			return 23LLU;
		}
		goto _match_end_4425271040;
		_case_end_4425275456:;
		if (!((34LL) == _match_expr)) { goto _case_end_4425275568; }
		_case_begin_4425275568:;
		{
			return 24LLU;
		}
		goto _match_end_4425271040;
		_case_end_4425275568:;
		if (!((29LL) == _match_expr)) { goto _case_end_4425275696; }
		_case_begin_4425275696:;
		{
			return 25LLU;
		}
		goto _match_end_4425271040;
		_case_end_4425275696:;
		if (!((105LL) == _match_expr)) { goto _case_end_4425275824; }
		_case_begin_4425275824:;
		{
			return 26LLU;
		}
		goto _match_end_4425271040;
		_case_end_4425275824:;
		if (!((74LL) == _match_expr)) { goto _case_end_4425275952; }
		_case_begin_4425275952:;
		{
			return 27LLU;
		}
		goto _match_end_4425271040;
		_case_end_4425275952:;
		if (!((39LL) == _match_expr)) { goto _case_end_4425276080; }
		_case_begin_4425276080:;
		{
			return 28LLU;
		}
		goto _match_end_4425271040;
		_case_end_4425276080:;
		_case_begin_4425271376:;
		{
			return 0LLU;
		}
		goto _match_end_4425271040;
		_case_end_4425271376:;
		_match_end_4425271040:;
	}
}



inline std::tuple<jule::Ref<_1b61b2a8a_File>,jule::Int> _1b618de0c_open(jule::Str _6113_path,jule::Int _6124_flag,jule::Int _6137_mode) {
	jule::Int _629_handle = _1cdd8e298_open((&(_6113_path[0LL])),static_cast<jule::Int>(_6124_flag),_6137_mode);
	if (_629_handle == -1LL) {
		return std::make_tuple(_1b61b2a8a_File::_static_method_new(0LLU),_1b618d5c1_get_last_fs_error());
	}
	return std::make_tuple(_1b61b2a8a_File::_static_method_new(static_cast<jule::Uintptr>(_629_handle)),0LLU);
}



inline jule::Int _1b618de0c_remove_file(jule::Str _7320_path) {
	if (_1cdd8e298_unlink((&(_7320_path[0LL]))) == 0LL) {
		return 0LLU;
	}
	return _1b618d5c1_get_last_fs_error();
}



inline std::tuple<jule::Ref<_1a8bb56ee_Status>,jule::Int> _1b618d48e_stat(jule::Str _1113_path) {
	jule::Ref<_1a8bb56ee_Status> _1126_s = jule::Ref<_1a8bb56ee_Status>();
	jule::Int _1138_err = 0LLU;
	struct stat _1213_handle = (struct stat){};
	jule::Int _139_code = _1cdd8e298_stat((&(_1113_path[0LL])),(&(_1213_handle)));
	if (_139_code != -1LL) {
		_1138_err=0LLU;
		_1126_s=jule::new_struct<_1a8bb56ee_Status>(new( std::nothrow ) _1a8bb56ee_Status(static_cast<jule::Uint>(_1213_handle.st_mode),static_cast<jule::Uint>(_1213_handle.st_size)));
	} else {
		_1138_err=_1b618d5c1_get_last_fs_error();
	}
	return std::make_tuple(_1126_s,_1138_err);
}



inline std::tuple<jule::Slice<jule::U8>,jule::Int> _1b61b2a8a_read_file(jule::Str _8518_path) {
	jule::Ref<_1a8bb56ee_Status> _8610_s;
	jule::Int _8617_err;
	std::tie(_8610_s,_8617_err) = _1b618d48e_stat(_8518_path);
	if (_8617_err != 0LLU) {
		return std::make_tuple(nullptr,_8617_err);
	}
	if ((!(_8610_s->_method_is_reg()))) {
		return std::make_tuple(nullptr,15LLU);
	}
	if (_8610_s->_field_size == 0LL) {
		return std::make_tuple(jule::Slice<jule::U8>::alloc(0LL),0LLU);
	}
	jule::Ref<_1b61b2a8a_File> _9914_f;
	std::tie(_9914_f,_8617_err) = _1b618de0c_open(_8518_path,0LL,0LL);
	if (_8617_err != 0LLU) {
		return std::make_tuple(nullptr,_8617_err);
	}
	__JULE_DEFER({
		_9914_f->_method_close();
	});
	jule::Slice<jule::U8> _10513_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::Int>(_8610_s->_field_size));
	jule::Int _10610_n;
	std::tie(_10610_n,_8617_err) = _9914_f->_method_read(_10513_buff);
	if (_8617_err != 0LLU) {
		return std::make_tuple(nullptr,_8617_err);
	}
	return std::make_tuple(_10513_buff.slice(0LL,static_cast<jule::Int>(_10610_n)),0LLU);
}



inline std::tuple<jule::Slice<jule::Ref<_1b61b1e74_DirEntry>>,jule::Int> _1b61bea42_read_dir(jule::Str _1517_path) {
	jule::Slice<jule::Ref<_1b61b1e74_DirEntry>> _1530_dirents = jule::Slice<jule::Ref<_1b61b1e74_DirEntry>>();
	jule::Int _1552_err = 0LLU;
	DIR* _1613_dir = _1cdd8e298_opendir((&(_1517_path[0LL])));
	if (_1613_dir == nullptr) {
		_1552_err=_1b618d5c1_get_last_fs_error();
		return std::make_tuple(_1530_dirents,_1552_err);
	}
	_iter_begin_4425338144:;
	{
		struct dirent* _2213_dirent = _1cdd8e298_readdir(_1613_dir);
		if (_2213_dirent == nullptr) {
			goto _iter_end_4425338144;
		}
		jule::Str _2613_name = _1cde2d8dc_byte_ptr_to_str(((jule::U8*)(_2213_dirent->d_name)));
		jule::Ref<_1a8bb56ee_Status> _2718_stat;
		jule::Int _2724_serr;
		std::tie(_2718_stat,_2724_serr) = _1b618d48e_stat(_1cdd187e9_join(jule::Slice<jule::Str>({_1517_path,_2613_name})));
		if (_2724_serr != 0LLU) {
			_1552_err=_2724_serr;
			_1530_dirents=nullptr;
			goto _iter_end_4425338144;
		}
		_1530_dirents=jule::append(_1530_dirents,jule::Slice<jule::Ref<_1b61b1e74_DirEntry>>({jule::new_struct<_1b61b1e74_DirEntry>(new( std::nothrow ) _1b61b1e74_DirEntry(_2613_name,_2718_stat))}));
	}
	_iter_next_4425338144:;
	goto _iter_begin_4425338144;
	_iter_end_4425338144:;
	_1cdd8e298_closedir(_1613_dir);
	return std::make_tuple(_1530_dirents,_1552_err);
}



inline jule::Int _1b61bea42_create_dir(jule::Str _4519_path) {
	if (_1cdd8e298_mkdir((&(_4519_path[0LL])),448LL) == 0LL) {
		return 0LLU;
	}
	return _1b618d5c1_get_last_fs_error();
}



inline jule::Int _1b61bea42_remove_dir(jule::Str _5819_path) {
	if (_1cdd8e298_rmdir((&(_5819_path[0LL]))) == 0LL) {
		return 0LLU;
	}
	return _1b618d5c1_get_last_fs_error();
}



inline jule::Bool _1b5ac328c_is_graphic(jule::I32 _5619_r) {
	if (static_cast<jule::U32>(_5619_r) <= 255LL) {
		return (_1b56c0461__PROPERTIES[static_cast<jule::Int>(static_cast<jule::U8>(_5619_r))] & 144LL) != 0LL;
	}
	return _1b5ac328c_is_in(_5619_r,_1b5ac328c_GRAPHIC_RANGES);
}



inline jule::Bool _1b5ac328c_is_in(jule::I32 _6614_r,jule::Slice<jule::Ref<_1a9930e4c_RangeTable>> _6623_ranges) {
	{
		auto _range_expr = _6623_ranges;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1a9930e4c_RangeTable> _1b5ac328c_inside = *_range_begin;
			_iter_begin_4383017392:;
			{
				if (_1a9930e4c_is(_1b5ac328c_inside,_6614_r)) {
					return true;
				}
			}
			_iter_next_4383017392:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b5ac328c_inside = *_range_begin; goto _iter_begin_4383017392; }
			_iter_end_4383017392:;
		}
	}
	return false;
}



inline jule::Bool _1b5ac328c_is_letter(jule::I32 _7618_r) {
	if (static_cast<jule::U32>(_7618_r) <= 255LL) {
		return (_1b56c0461__PROPERTIES[static_cast<jule::Int>(static_cast<jule::U8>(_7618_r))] & 96LL) != 0LL;
	}
	return _1a9930e4c_is_excluding_latin(_1b56c0461_LETTER,_7618_r);
}



inline jule::Bool _1b5ac328c_is_number(jule::I32 _8418_r) {
	if (static_cast<jule::U32>(_8418_r) <= 255LL) {
		return (_1b56c0461__PROPERTIES[static_cast<jule::Int>(static_cast<jule::U8>(_8418_r))] & 4LL) != 0LL;
	}
	return _1a9930e4c_is_excluding_latin(_1b56c0461_NUMBER,_8418_r);
}



inline jule::Bool _1b5ac328c_is_punct(jule::I32 _9217_r) {
	if (static_cast<jule::U32>(_9217_r) <= 255LL) {
		return (_1b56c0461__PROPERTIES[static_cast<jule::Int>(static_cast<jule::U8>(_9217_r))] & 2LL) != 0LL;
	}
	return _1a9930e4c_is(_1b56c0461_PUNCT,_9217_r);
}



inline jule::Bool _1b5ac328c_is_space(jule::I32 _10717_r) {
	if (static_cast<jule::U32>(_10717_r) <= 255LL) {
		{
			auto _match_expr{ _10717_r };
			if (!(('\t') == _match_expr || ('\n') == _match_expr || ('\v') == _match_expr || ('\f') == _match_expr || ('\r') == _match_expr || (' ') == _match_expr || (133LL) == _match_expr || (160LL) == _match_expr)) { goto _case_end_4384643600; }
			_case_begin_4384643600:;
			{
				return true;
			}
			goto _match_end_4384022864;
			_case_end_4384643600:;
			_match_end_4384022864:;
		}
		return false;
	}
	return _1a9930e4c_is_excluding_latin(_1b56c0461_WHITE_SPACE,_10717_r);
}



inline jule::Bool _1a992dd4b_is_digit(jule::I32 _3917_r) {
	if (_3917_r <= 255LL) {
		return ('0' <= _3917_r) && (_3917_r <= '9');
	}
	return _1a9930e4c_is_excluding_latin(_1b56c0461_DIGIT,_3917_r);
}



inline std::tuple<jule::I32,jule::Bool> _1a9930e4c___to(jule::Int _1259_case,jule::I32 _12520_r,jule::Slice<_1a9930e4c_CaseRange> _12529_case_range) {
	jule::I32 _12556_mapped_rune = jule::I32();
	jule::Bool _12575_found_mapping = jule::Bool();
	if ((_1259_case < 0LL) || (3LL <= _1259_case)) {
		_12556_mapped_rune = 65533LL;
		_12575_found_mapping = false;
		return std::make_tuple(_12556_mapped_rune,_12575_found_mapping);
	}
	jule::Int _13113_lo = 0LL;
	jule::I64 _13213_hi = _12529_case_range.len();
	_iter_begin_4384044528:;
	if (!(_13113_lo < _13213_hi)) { goto _iter_end_4384044528; }
	{
		jule::Int _13413_m = _13113_lo + jule::div(_13213_hi - _13113_lo,2LL);
		_1a9930e4c_CaseRange _13513_cr = _12529_case_range[static_cast<jule::Int>(_13413_m)];
		if ((static_cast<jule::I32>(_13513_cr._field_lo) <= _12520_r) && (_12520_r <= static_cast<jule::I32>(_13513_cr._field_hi))) {
			jule::I32 _13717_delta = _13513_cr._field_delta[static_cast<jule::Int>(_1259_case)];
			if (_13717_delta > 1114111LL) {
				_12556_mapped_rune = static_cast<jule::I32>(static_cast<jule::I32>(_13513_cr._field_lo) + (((_12520_r - static_cast<jule::I32>(_13513_cr._field_lo)) & -2LL) | static_cast<jule::I32>(_1259_case & 1LL)));
				_12575_found_mapping = true;
				return std::make_tuple(_12556_mapped_rune,_12575_found_mapping);
			}
			_12556_mapped_rune = static_cast<jule::I32>(_12520_r + _13717_delta);
			_12575_found_mapping = true;
			return std::make_tuple(_12556_mapped_rune,_12575_found_mapping);
		}
		if (_12520_r < static_cast<jule::I32>(_13513_cr._field_lo)) {
			_13213_hi=_13413_m;
		} else {
			_13113_lo=static_cast<jule::Int>(_13413_m + 1LL);
		}
	}
	_iter_next_4384044528:;
	goto _iter_begin_4384044528;
	_iter_end_4384044528:;
	_12556_mapped_rune = _12520_r;
	_12575_found_mapping = false;
	return std::make_tuple(_12556_mapped_rune,_12575_found_mapping);
}



inline jule::I32 _1a9930e4c_to(jule::Int _16311_case,jule::I32 _16326_r) {
	std::tie(_16326_r,std::ignore) = _1a9930e4c___to(_16311_case,_16326_r,_1b56c0461_CASE_RANGES);
	return _16326_r;
}



inline jule::I32 _1a9930e4c_to_upper(jule::I32 _16921_r) {
	if (_16921_r <= 127LL) {
		if (('a' <= _16921_r) && (_16921_r <= 'z')) {
			_16921_r-=32LL;
		}
		return _16921_r;
	}
	return static_cast<jule::I32>(_1a9930e4c_to(0LL,_16921_r));
}



inline jule::I32 _1a9930e4c_to_lower(jule::I32 _18021_r) {
	if (_18021_r <= 127LL) {
		if (('A' <= _18021_r) && (_18021_r <= 'Z')) {
			_18021_r+=32LL;
		}
		return _18021_r;
	}
	return static_cast<jule::I32>(_1a9930e4c_to(1LL,_18021_r));
}



inline jule::Bool _1a9930e4c_is16(jule::Slice<_1a9930e4c_Range16> _1919_ranges,jule::U16 _19128_r) {
	if ((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LL)) {
		{
			auto _range_expr = _1919_ranges;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Int _1a9930e4c_i = 0;
				_iter_begin_4384708944:;
				{
					_1a9930e4c_Range16* _19417_range = (&(_1919_ranges[static_cast<jule::Int>(_1a9930e4c_i)]));
					{
						if (_19128_r < _19417_range->_field_lo) {
							return false;
						}
						if (_19128_r <= _19417_range->_field_hi) {
							return (_19417_range->_field_stride == 1LL) || (jule::mod(_19128_r - _19417_range->_field_lo,_19417_range->_field_stride) == 0LL);
						}
					}
				}
				_iter_next_4384708944:;
				++_range_begin;
				if (_range_begin != _range_end) { ++_1a9930e4c_i; goto _iter_begin_4384708944; }
				_iter_end_4384708944:;
			}
		}
		return false;
	}
	jule::Int _20813_lo = 0LL;
	jule::I64 _20913_hi = _1919_ranges.len();
	_iter_begin_4384707984:;
	if (!(_20813_lo < _20913_hi)) { goto _iter_end_4384707984; }
	{
		jule::Int _21113_m = _20813_lo + jule::div(_20913_hi - _20813_lo,2LL);
		_1a9930e4c_Range16* _21213_range = (&(_1919_ranges[static_cast<jule::Int>(_21113_m)]));
		{
			if ((_21213_range->_field_lo <= _19128_r) && (_19128_r <= _21213_range->_field_hi)) {
				return (_21213_range->_field_stride == 1LL) || (jule::mod(_19128_r - _21213_range->_field_lo,_21213_range->_field_stride) == 0LL);
			}
			if (_19128_r < _21213_range->_field_lo) {
				_20913_hi=_21113_m;
			} else {
				_20813_lo=static_cast<jule::Int>(_21113_m + 1LL);
			}
		}
	}
	_iter_next_4384707984:;
	goto _iter_begin_4384707984;
	_iter_end_4384707984:;
	return false;
}



inline jule::Bool _1a9930e4c_is32(jule::Slice<_1a9930e4c_Range32> _2289_ranges,jule::U32 _22828_r) {
	if (_2289_ranges.len() <= 18LL) {
		{
			auto _range_expr = _2289_ranges;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Int _1a9930e4c_i = 0;
				_iter_begin_4384729488:;
				{
					_1a9930e4c_Range32* _23117_range = (&(_2289_ranges[static_cast<jule::Int>(_1a9930e4c_i)]));
					{
						if (_22828_r < _23117_range->_field_lo) {
							return false;
						}
						if (_22828_r <= _23117_range->_field_hi) {
							return (_23117_range->_field_stride == 1LL) || (jule::mod(_22828_r - _23117_range->_field_lo,_23117_range->_field_stride) == 0LL);
						}
					}
				}
				_iter_next_4384729488:;
				++_range_begin;
				if (_range_begin != _range_end) { ++_1a9930e4c_i; goto _iter_begin_4384729488; }
				_iter_end_4384729488:;
			}
		}
		return false;
	}
	jule::Int _24513_lo = 0LL;
	jule::I64 _24613_hi = _2289_ranges.len();
	_iter_begin_4384737104:;
	if (!(_24513_lo < _24613_hi)) { goto _iter_end_4384737104; }
	{
		jule::Int _24813_m = _24513_lo + jule::div(_24613_hi - _24513_lo,2LL);
		_1a9930e4c_Range32* _24913_range = (&(_2289_ranges[static_cast<jule::Int>(_24813_m)]));
		{
			if ((_24913_range->_field_lo <= _22828_r) && (_22828_r <= _24913_range->_field_hi)) {
				return (_24913_range->_field_stride == 1LL) || (jule::mod(_22828_r - _24913_range->_field_lo,_24913_range->_field_stride) == 0LL);
			}
			if (_22828_r < _24913_range->_field_lo) {
				_24613_hi=_24813_m;
			} else {
				_24513_lo=static_cast<jule::Int>(_24813_m + 1LL);
			}
		}
	}
	_iter_next_4384737104:;
	goto _iter_begin_4384737104;
	_iter_end_4384737104:;
	return false;
}



inline jule::Bool _1a9930e4c_is(jule::Ref<_1a9930e4c_RangeTable> _26511_range_tab,jule::I32 _26535_r) {
	jule::Slice<_1a9930e4c_Range16> &_26610_r16 = _26511_range_tab->_field_r16;
	if ((_26610_r16.len() > 0LL) && (static_cast<jule::U32>(_26535_r) <= static_cast<jule::U32>(_26610_r16[static_cast<jule::Int>(_26610_r16.len() - 1LL)]._field_hi))) {
		return _1a9930e4c_is16(_26610_r16,static_cast<jule::U16>(_26535_r));
	}
	jule::Slice<_1a9930e4c_Range32> &_27110_r32 = _26511_range_tab->_field_r32;
	if ((_27110_r32.len() > 0LL) && (_26535_r >= static_cast<jule::I32>(_27110_r32[0LL]._field_lo))) {
		return _1a9930e4c_is32(_27110_r32,static_cast<jule::U32>(_26535_r));
	}
	return false;
}



inline jule::Bool _1a9930e4c_is_excluding_latin(jule::Ref<_1a9930e4c_RangeTable> _27823_range_tab,jule::I32 _27847_r) {
	{
		jule::Slice<_1a9930e4c_Range16> &_28014_r16 = _27823_range_tab->_field_r16;
		jule::Int _28213_off = _27823_range_tab->_field_latin_offset;
		if ((_28014_r16.len() > _28213_off) && (static_cast<jule::U32>(_27847_r) <= static_cast<jule::U32>(_28014_r16[static_cast<jule::Int>(_28014_r16.len() - 1LL)]._field_hi))) {
			return _1a9930e4c_is16(_28014_r16.slice(static_cast<jule::Int>(_28213_off)),static_cast<jule::U16>(_27847_r));
		}
	}
	jule::Slice<_1a9930e4c_Range32> &_28710_r32 = _27823_range_tab->_field_r32;
	if ((_28710_r32.len() > 0LL) && (_27847_r >= static_cast<jule::I32>(_28710_r32[0LL]._field_lo))) {
		return _1a9930e4c_is32(_28710_r32,static_cast<jule::U32>(_27847_r));
	}
	return false;
}



inline jule::Bool _1a9930e4c_is_upper(jule::I32 _29517_r) {
	if (static_cast<jule::U32>(_29517_r) <= 255LL) {
		return (_1b56c0461__PROPERTIES[static_cast<jule::Int>(static_cast<jule::U8>(_29517_r))] & 96LL) == 32LL;
	}
	return _1a9930e4c_is_excluding_latin(_1b56c0461_UPPER,_29517_r);
}



inline jule::Bool _1a9930e4c_is_lower(jule::I32 _30417_r) {
	if (static_cast<jule::U32>(_30417_r) <= 255LL) {
		return (_1b56c0461__PROPERTIES[static_cast<jule::Int>(static_cast<jule::U8>(_30417_r))] & 96LL) == 64LL;
	}
	return _1a9930e4c_is_excluding_latin(_1b56c0461_LOWER,_30417_r);
}



inline jule::Bool _1a99595b3_full_rune(jule::Slice<jule::U8> _13718_p) {
	if (_13718_p.len() == 0LL) {
		return false;
	}
	jule::U8 _1419_x = _1a99595b3_FIRST[static_cast<jule::Int>(_13718_p[0LL])];
	if (_13718_p.len() >= static_cast<jule::Int>(_1419_x & 7LL)) {
		return true;
	}
	_1a99595b3_accept_range _1469_accept = _1a99595b3_ACCEPT_RANGES[static_cast<jule::Int>(_1419_x >> 4LL)];
	if ((_13718_p.len() > 1LL) && ((_13718_p[1LL] < _1469_accept._field_lo) || (_1469_accept._field_hi < _13718_p[1LL]))) {
		return true;
	} else if ((_13718_p.len() > 2LL) && ((_13718_p[2LL] < 128LL) || (191LL < _13718_p[2LL]))) {
		return true;
	}
	return false;
}



inline jule::Bool _1a99595b3_full_rune_str(jule::Str _15622_s) {
	if (_15622_s.len() == 0LL) {
		return false;
	}
	jule::U8 _1609_x = _1a99595b3_FIRST[static_cast<jule::Int>(_15622_s[0LL])];
	if (_15622_s.len() >= static_cast<jule::Int>(_1609_x & 7LL)) {
		return true;
	}
	_1a99595b3_accept_range _1659_accept = _1a99595b3_ACCEPT_RANGES[static_cast<jule::Int>(_1609_x >> 4LL)];
	if ((_15622_s.len() > 1LL) && ((_15622_s[1LL] < _1659_accept._field_lo) || (_1659_accept._field_hi < _15622_s[1LL]))) {
		return true;
	} else if ((_15622_s.len() > 2LL) && ((_15622_s[2LL] < 128LL) || (191LL < _15622_s[2LL]))) {
		return true;
	}
	return false;
}



inline std::tuple<jule::I32,jule::Int> _1a99595b3_decode_rune(jule::Slice<jule::U8> _18220_p) {
	jule::I32 _18233_r = jule::I32();
	jule::Int _18242_size = jule::Int();
	if (_18220_p.len() < 1LL) {
		_18233_r = 65533LL;
		_18242_size = 0LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _1869_p0 = _18220_p[0LL];
	jule::U8 _1879_x = _1a99595b3_FIRST[static_cast<jule::Int>(_1869_p0)];
	if (_1879_x >= 240LL) {
		jule::I32 _19213_mask = static_cast<jule::U8>((_1879_x << 31LL) >> 31LL);
		_18233_r = static_cast<jule::I32>((static_cast<jule::I32>(_18220_p[0LL]) & (~(_19213_mask))) | (65533LL & _19213_mask));
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::Int _1959_sz = static_cast<jule::Int>(_1879_x & 7LL);
	_1a99595b3_accept_range _1969_accept = _1a99595b3_ACCEPT_RANGES[static_cast<jule::Int>(_1879_x >> 4LL)];
	if (_18220_p.len() < _1959_sz) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _2009_b1 = _18220_p[1LL];
	if ((_2009_b1 < _1969_accept._field_lo) || (_1969_accept._field_hi < _2009_b1)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	if (_1959_sz <= 2LL) {
		_18233_r = static_cast<jule::I32>((static_cast<jule::I32>(_1869_p0 & 31LL) << 6LL) | static_cast<jule::I32>(_2009_b1 & 63LL));
		_18242_size = 2LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _2079_b2 = _18220_p[2LL];
	if ((_2079_b2 < 128LL) || (191LL < _2079_b2)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	if (_1959_sz <= 3LL) {
		_18233_r = static_cast<jule::I32>(((static_cast<jule::I32>(_1869_p0 & 15LL) << 12LL) | (static_cast<jule::I32>(_2009_b1 & 63LL) << 6LL)) | static_cast<jule::I32>(_2079_b2 & 63LL));
		_18242_size = 3LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _2149_b3 = _18220_p[3LL];
	if ((_2149_b3 < 128LL) || (191LL < _2149_b3)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	_18233_r = static_cast<jule::I32>((((static_cast<jule::I32>(_1869_p0 & 7LL) << 18LL) | (static_cast<jule::I32>(_2009_b1 & 63LL) << 12LL)) | (static_cast<jule::I32>(_2079_b2 & 63LL) << 6LL)) | static_cast<jule::I32>(_2149_b3 & 63LL));
	_18242_size = 4LL;
	return std::make_tuple(_18233_r,_18242_size);
}



inline std::tuple<jule::I32,jule::Int> _1a99595b3_decode_rune_str(jule::Str _22924_s) {
	jule::I32 _22934_r = jule::I32();
	jule::Int _22943_size = jule::Int();
	if (_22924_s.len() < 1LL) {
		_22934_r = 65533LL;
		_22943_size = 0LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	jule::U8 _2339_s0 = _22924_s[0LL];
	jule::U8 _2349_x = _1a99595b3_FIRST[static_cast<jule::Int>(_2339_s0)];
	if (_2349_x >= 240LL) {
		jule::I32 _23913_mask = static_cast<jule::U8>((_2349_x << 31LL) >> 31LL);
		_22934_r = static_cast<jule::I32>((static_cast<jule::I32>(_22924_s[0LL]) & (~(_23913_mask))) | (65533LL & _23913_mask));
		_22943_size = 1LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	jule::Int _2429_sz = static_cast<jule::Int>(_2349_x & 7LL);
	_1a99595b3_accept_range _2439_accept = _1a99595b3_ACCEPT_RANGES[static_cast<jule::Int>(_2349_x >> 4LL)];
	if (_22924_s.len() < _2429_sz) {
		_22934_r = 65533LL;
		_22943_size = 1LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	jule::U8 _2479_s1 = _22924_s[1LL];
	if ((_2479_s1 < _2439_accept._field_lo) || (_2439_accept._field_hi < _2479_s1)) {
		_22934_r = 65533LL;
		_22943_size = 1LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	if (_2429_sz <= 2LL) {
		_22934_r = static_cast<jule::I32>((static_cast<jule::I32>(_2339_s0 & 31LL) << 6LL) | static_cast<jule::I32>(_2479_s1 & 63LL));
		_22943_size = 2LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	jule::U8 _2549_s2 = _22924_s[2LL];
	if ((_2549_s2 < 128LL) || (191LL < _2549_s2)) {
		_22934_r = 65533LL;
		_22943_size = 1LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	if (_2429_sz <= 3LL) {
		_22934_r = static_cast<jule::I32>(((static_cast<jule::I32>(_2339_s0 & 15LL) << 12LL) | (static_cast<jule::I32>(_2479_s1 & 63LL) << 6LL)) | static_cast<jule::I32>(_2549_s2 & 63LL));
		_22943_size = 3LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	jule::U8 _2619_s3 = _22924_s[3LL];
	if ((_2619_s3 < 128LL) || (191LL < _2619_s3)) {
		_22934_r = 65533LL;
		_22943_size = 1LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	_22934_r = static_cast<jule::I32>((((static_cast<jule::I32>(_2339_s0 & 7LL) << 18LL) | (static_cast<jule::I32>(_2479_s1 & 63LL) << 12LL)) | (static_cast<jule::I32>(_2549_s2 & 63LL) << 6LL)) | static_cast<jule::I32>(_2619_s3 & 63LL));
	_22943_size = 4LL;
	return std::make_tuple(_22934_r,_22943_size);
}



inline std::tuple<jule::I32,jule::Int> _1a99595b3_decode_last_rune(jule::Slice<jule::U8> _27625_p) {
	jule::I32 _27638_r = jule::I32();
	jule::Int _27647_size = jule::Int();
	if (_27625_p.len() == 0LL) {
		_27638_r = 65533LL;
		_27647_size = 0LL;
		return std::make_tuple(_27638_r,_27647_size);
	}
	jule::I64 _2809_end = _27625_p.len();
	jule::I64 _28113_start = _2809_end - 1LL;
	_27638_r=static_cast<jule::I32>(_27625_p[static_cast<jule::Int>(_28113_start)]);
	if (_27638_r < 128LL) {
		_27638_r = _27638_r;
		_27647_size = 1LL;
		return std::make_tuple(_27638_r,_27647_size);
	}
	jule::I64 _28913_lim = _2809_end - 4LL;
	if (_28913_lim < 0LL) {
		_28913_lim=0LL;
	}
	(_28113_start)--;
	_iter_begin_4384966736:;
	if (!(_28113_start >= _28913_lim)) { goto _iter_end_4384966736; }
	{
		if (_1a99595b3_rune_start(_27625_p[static_cast<jule::Int>(_28113_start)])) {
			goto _iter_end_4384966736;
		}
	}
	_iter_next_4384966736:;
	(_28113_start)--;
	goto _iter_begin_4384966736;
	_iter_end_4384966736:;
	if (_28113_start < 0LL) {
		_28113_start=0LL;
	}
	std::tie(_27638_r,_27647_size) = _1a99595b3_decode_rune(_27625_p.slice(static_cast<jule::Int>(_28113_start),static_cast<jule::Int>(_2809_end)));
	if ((_28113_start + _27647_size) != _2809_end) {
		_27638_r = 65533LL;
		_27647_size = 1LL;
		return std::make_tuple(_27638_r,_27647_size);
	}
	_27638_r = _27638_r;
	_27647_size = _27647_size;
	return std::make_tuple(_27638_r,_27647_size);
}



inline std::tuple<jule::I32,jule::Int> _1a99595b3_decode_last_rune_str(jule::Str _31729_s) {
	jule::I32 _31739_r = jule::I32();
	jule::Int _31748_size = jule::Int();
	if (_31729_s.len() == 0LL) {
		_31739_r = 65533LL;
		_31748_size = 0LL;
		return std::make_tuple(_31739_r,_31748_size);
	}
	jule::I64 _3219_end = _31729_s.len();
	jule::I64 _32213_start = _3219_end - 1LL;
	_31739_r=static_cast<jule::I32>(_31729_s[static_cast<jule::Int>(_32213_start)]);
	if (_31739_r < 128LL) {
		_31739_r = _31739_r;
		_31748_size = 1LL;
		return std::make_tuple(_31739_r,_31748_size);
	}
	jule::I64 _33013_lim = _3219_end - 4LL;
	if (_33013_lim < 0LL) {
		_33013_lim=0LL;
	}
	(_32213_start)--;
	_iter_begin_4384986080:;
	if (!(_32213_start >= _33013_lim)) { goto _iter_end_4384986080; }
	{
		if (_1a99595b3_rune_start(_31729_s[static_cast<jule::Int>(_32213_start)])) {
			goto _iter_end_4384986080;
		}
	}
	_iter_next_4384986080:;
	(_32213_start)--;
	goto _iter_begin_4384986080;
	_iter_end_4384986080:;
	if (_32213_start < 0LL) {
		_32213_start=0LL;
	}
	std::tie(_31739_r,_31748_size) = _1a99595b3_decode_rune_str(_31729_s.slice(static_cast<jule::Int>(_32213_start),static_cast<jule::Int>(_3219_end)));
	if ((_32213_start + _31748_size) != _3219_end) {
		_31739_r = 65533LL;
		_31748_size = 1LL;
		return std::make_tuple(_31739_r,_31748_size);
	}
	_31739_r = _31739_r;
	_31748_size = _31748_size;
	return std::make_tuple(_31739_r,_31748_size);
}



inline jule::Int _1a99595b3_rune_len(jule::I32 _35217_r) {
	{
		if (!((_35217_r < 0LL))) { goto _case_end_4384995632; }
		_case_begin_4384995632:;
		{
			return -1LL;
		}
		goto _match_end_4384993968;
		_case_end_4384995632:;
		if (!((_35217_r <= 127LLU))) { goto _case_end_4384995904; }
		_case_begin_4384995904:;
		{
			return 1LL;
		}
		goto _match_end_4384993968;
		_case_end_4384995904:;
		if (!((_35217_r <= 2047LL))) { goto _case_end_4384996016; }
		_case_begin_4384996016:;
		{
			return 2LL;
		}
		goto _match_end_4384993968;
		_case_end_4384996016:;
		if (!(((55296LL <= _35217_r) && (_35217_r <= 57343LL)))) { goto _case_end_4384996128; }
		_case_begin_4384996128:;
		{
			return -1LL;
		}
		goto _match_end_4384993968;
		_case_end_4384996128:;
		if (!((_35217_r <= 65535LL))) { goto _case_end_4384995120; }
		_case_begin_4384995120:;
		{
			return 3LL;
		}
		goto _match_end_4384993968;
		_case_end_4384995120:;
		if (!((_35217_r <= 1114111LL))) { goto _case_end_4384995232; }
		_case_begin_4384995232:;
		{
			return 4LL;
		}
		goto _match_end_4384993968;
		_case_end_4384995232:;
		_case_begin_4384994064:;
		{
			return -1LL;
		}
		goto _match_end_4384993968;
		_case_end_4384994064:;
		_match_end_4384993968:;
	}
}



inline jule::Int _1a99595b3_encode_rune(jule::Slice<jule::U8> _36724_p,jule::I32 _36739_r) {
	jule::U32 _3699_i = static_cast<jule::U32>(_36739_r);
	{
		if (!((_3699_i <= 127LLU))) { goto _case_end_4385012960; }
		_case_begin_4385012960:;
		{
			_36724_p[0LL]=static_cast<jule::U8>(_36739_r);
			return 1LL;
		}
		goto _match_end_4385002832;
		_case_end_4385012960:;
		if (!((_3699_i <= 2047LL))) { goto _case_end_4385013072; }
		_case_begin_4385013072:;
		{
			_36724_p[0LL]=static_cast<jule::U8>(192LL | static_cast<jule::U8>(_36739_r >> 6LL));
			_36724_p[1LL]=static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_36739_r) & 63LL));
			return 2LL;
		}
		goto _match_end_4385002832;
		_case_end_4385013072:;
		if (!((_3699_i > 1114111LL) || ((55296LL <= _3699_i) && (_3699_i <= 57343LL)))) { goto _case_end_4385003264; }
		_case_begin_4385003264:;
		{
			_36739_r=65533LL;
			goto _case_begin_4385003376;
		}
		goto _match_end_4385002832;
		_case_end_4385003264:;
		if (!((_3699_i <= 65535LL))) { goto _case_end_4385003376; }
		_case_begin_4385003376:;
		{
			_36724_p[0LL]=static_cast<jule::U8>(224LL | static_cast<jule::U8>(_36739_r >> 12LL));
			_36724_p[1LL]=static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_36739_r >> 6LL) & 63LL));
			_36724_p[2LL]=static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_36739_r) & 63LL));
			return 3LL;
		}
		goto _match_end_4385002832;
		_case_end_4385003376:;
		_case_begin_4385002960:;
		{
			_36724_p[0LL]=static_cast<jule::U8>(240LL | static_cast<jule::U8>(_36739_r >> 18LL));
			_36724_p[1LL]=static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_36739_r >> 12LL) & 63LL));
			_36724_p[2LL]=static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_36739_r >> 6LL) & 63LL));
			_36724_p[3LL]=static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_36739_r) & 63LL));
			return 4LL;
		}
		goto _match_end_4385002832;
		_case_end_4385002960:;
		_match_end_4385002832:;
	}
}



inline jule::Slice<jule::U8> _1a99595b3_append_rune(jule::Slice<jule::U8> _39824_p,jule::I32 _39835_r) {
	if (static_cast<jule::U32>(_39835_r) <= 127LLU) {
		return jule::append(_39824_p,jule::Slice<jule::U8>({static_cast<jule::U8>(_39835_r)}));
	}
	return _1a99595b3_append_rune_non_ascii(_39824_p,_39835_r);
}



inline jule::Slice<jule::U8> _1a99595b3_append_rune_non_ascii(jule::Slice<jule::U8> _40530_p,jule::I32 _40545_r) {
	jule::U32 _4079_i = static_cast<jule::U32>(_40545_r);
	{
		if (!((_4079_i <= 2047LL))) { goto _case_end_4385036640; }
		_case_begin_4385036640:;
		{
			return jule::append(_40530_p,jule::Slice<jule::U8>({static_cast<jule::U8>(192LL | static_cast<jule::U8>(_40545_r >> 6LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r) & 63LL))}));
		}
		goto _match_end_4385033424;
		_case_end_4385036640:;
		if (!((_4079_i > 1114111LL) || ((55296LL <= _4079_i) && (_4079_i <= 57343LL)))) { goto _case_end_4385036752; }
		_case_begin_4385036752:;
		{
			_40545_r=65533LL;
			goto _case_begin_4385036864;
		}
		goto _match_end_4385033424;
		_case_end_4385036752:;
		if (!((_4079_i <= 65535LL))) { goto _case_end_4385036864; }
		_case_begin_4385036864:;
		{
			return jule::append(_40530_p,jule::Slice<jule::U8>({static_cast<jule::U8>(224LL | static_cast<jule::U8>(_40545_r >> 12LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r >> 6LL) & 63LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r) & 63LL))}));
		}
		goto _match_end_4385033424;
		_case_end_4385036864:;
		_case_begin_4385033552:;
		{
			return jule::append(_40530_p,jule::Slice<jule::U8>({static_cast<jule::U8>(240LL | static_cast<jule::U8>(_40545_r >> 18LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r >> 12LL) & 63LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r >> 6LL) & 63LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r) & 63LL))}));
		}
		goto _match_end_4385033424;
		_case_end_4385033552:;
		_match_end_4385033424:;
	}
}



inline jule::Int _1a99595b3_rune_count(jule::Slice<jule::U8> _42319_p) {
	jule::Int _42332_n = jule::Int();
	jule::Int _42413_i = 0LL;
	_iter_begin_4385035616:;
	if (!(_42413_i < _42319_p.len())) { goto _iter_end_4385035616; }
	{
		(_42332_n)++;
		jule::U8 _42717_c = _42319_p[static_cast<jule::Int>(_42413_i)];
		if (_42717_c < 128LL) {
			(_42413_i)++;
			goto _iter_next_4385035616;
		}
		jule::U8 _43313_x = _1a99595b3_FIRST[static_cast<jule::Int>(_42717_c)];
		if (_43313_x == 241LL) {
			(_42413_i)++;
			goto _iter_next_4385035616;
		}
		jule::Int _43817_size = static_cast<jule::Int>(_43313_x & 7LL);
		if ((_42413_i + _43817_size) > _42319_p.len()) {
			(_42413_i)++;
			goto _iter_next_4385035616;
		}
		_1a99595b3_accept_range _44313_accept = _1a99595b3_ACCEPT_RANGES[static_cast<jule::Int>(_43313_x >> 4LL)];
		_42717_c=_42319_p[static_cast<jule::Int>(_42413_i + 1LL)];
		if ((_42717_c < _44313_accept._field_lo) || (_44313_accept._field_hi < _42717_c)) {
			_43817_size=1LL;
		} else if (_43817_size == 2LL) {
		} else {
			_42717_c=_42319_p[static_cast<jule::Int>(_42413_i + 2LL)];
			if ((_42717_c < 128LL) || (191LL < _42717_c)) {
				_43817_size=1LL;
			} else if (_43817_size == 3LL) {
			} else {
				_42717_c=_42319_p[static_cast<jule::Int>(_42413_i + 3LL)];
				if ((_42717_c < 128LL) || (191LL < _42717_c)) {
					_43817_size=1LL;
				}
			}
		}
		_42413_i+=_43817_size;
	}
	_iter_next_4385035616:;
	goto _iter_begin_4385035616;
	_iter_end_4385035616:;
	_42332_n = _42332_n;
	return _42332_n;
}



inline jule::Int _1a99595b3_rune_count_str(jule::Str _46623_s) {
	jule::Int _46633_n = jule::Int();
	jule::Int _46713_i = 0LL;
	_iter_begin_4385072656:;
	if (!(_46713_i < _46623_s.len())) { goto _iter_end_4385072656; }
	{
		jule::U8 _46917_c = _46623_s[static_cast<jule::Int>(_46713_i)];
		if (_46917_c < 128LL) {
			(_46713_i)++;
			goto _iter_next_4385072656;
		}
		jule::U8 _47513_x = _1a99595b3_FIRST[static_cast<jule::Int>(_46917_c)];
		if (_47513_x == 241LL) {
			(_46713_i)++;
			goto _iter_next_4385072656;
		}
		jule::Int _48017_size = static_cast<jule::Int>(_47513_x & 7LL);
		if ((_46713_i + _48017_size) > _46623_s.len()) {
			(_46713_i)++;
			goto _iter_next_4385072656;
		}
		_1a99595b3_accept_range _48513_accept = _1a99595b3_ACCEPT_RANGES[static_cast<jule::Int>(_47513_x >> 4LL)];
		_46917_c=_46623_s[static_cast<jule::Int>(_46713_i + 1LL)];
		if ((_46917_c < _48513_accept._field_lo) || (_48513_accept._field_hi < _46917_c)) {
			_48017_size=1LL;
		} else if (_48017_size == 2LL) {
		} else {
			_46917_c=_46623_s[static_cast<jule::Int>(_46713_i + 2LL)];
			if ((_46917_c < 128LL) || (191LL < _46917_c)) {
				_48017_size=1LL;
			} else if (_48017_size == 3LL) {
			} else {
				_46917_c=_46623_s[static_cast<jule::Int>(_46713_i + 3LL)];
				if ((_46917_c < 128LL) || (191LL < _46917_c)) {
					_48017_size=1LL;
				}
			}
		}
		_46713_i+=_48017_size;
	}
	_iter_next_4385072656:;
	(_46633_n)++;
	goto _iter_begin_4385072656;
	_iter_end_4385072656:;
	_46633_n = _46633_n;
	return _46633_n;
}



inline jule::Bool _1a99595b3_rune_start(jule::U8 _51019_b) {
	return (_51019_b & 192LL) != 128LL;
}



inline jule::Bool _1a99595b3_valid(jule::Slice<jule::U8> _51314_p) {
	jule::Slice<jule::U8> _51613_cp = (*((&(_51314_p))));
	_iter_begin_4385097152:;
	if (!(_51613_cp.len() >= 8LL)) { goto _iter_end_4385097152; }
	{
		jule::U32 _52213_first32 = ((static_cast<jule::U32>(_51613_cp[0LL]) | (static_cast<jule::U32>(_51613_cp[1LL]) << 8LL)) | (static_cast<jule::U32>(_51613_cp[2LL]) << 16LL)) | (static_cast<jule::U32>(_51613_cp[3LL]) << 24LL);
		jule::U32 _52313_second32 = ((static_cast<jule::U32>(_51613_cp[4LL]) | (static_cast<jule::U32>(_51613_cp[5LL]) << 8LL)) | (static_cast<jule::U32>(_51613_cp[6LL]) << 16LL)) | (static_cast<jule::U32>(_51613_cp[7LL]) << 24LL);
		if (((_52213_first32 | _52313_second32) & 2155905152LL) != 0LL) {
			goto _iter_end_4385097152;
		}
		_51613_cp=_51613_cp.slice(8LL);
	}
	_iter_next_4385097152:;
	goto _iter_begin_4385097152;
	_iter_end_4385097152:;
	jule::Int _53013_i = 0LL;
	_iter_begin_4385095808:;
	if (!(_53013_i < _51613_cp.len())) { goto _iter_end_4385095808; }
	{
		jule::U8 _53213_pi = _51613_cp[static_cast<jule::Int>(_53013_i)];
		if (_53213_pi < 128LL) {
			(_53013_i)++;
			goto _iter_next_4385095808;
		}
		jule::U8 _53713_x = _1a99595b3_FIRST[static_cast<jule::Int>(_53213_pi)];
		if (_53713_x == 241LL) {
			return false;
		}
		jule::Int _54113_size = static_cast<jule::Int>(_53713_x & 7LL);
		if ((_53013_i + _54113_size) > _51613_cp.len()) {
			return false;
		}
		_1a99595b3_accept_range _54513_accept = _1a99595b3_ACCEPT_RANGES[static_cast<jule::Int>(_53713_x >> 4LL)];
		jule::U8 _54617_c = _51613_cp[static_cast<jule::Int>(_53013_i + 1LL)];
		if ((_54617_c < _54513_accept._field_lo) || (_54513_accept._field_hi < _54617_c)) {
			return false;
		} else if (_54113_size == 2LL) {
		} else {
			_54617_c=_51613_cp[static_cast<jule::Int>(_53013_i + 2LL)];
			if ((_54617_c < 128LL) || (191LL < _54617_c)) {
				return false;
			} else if (_54113_size == 3LL) {
			} else {
				_54617_c=_51613_cp[static_cast<jule::Int>(_53013_i + 3LL)];
				if ((_54617_c < 128LL) || (191LL < _54617_c)) {
					return false;
				}
			}
		}
		_53013_i+=_54113_size;
	}
	_iter_next_4385095808:;
	goto _iter_begin_4385095808;
	_iter_end_4385095808:;
	return true;
}



inline jule::Bool _1a99595b3_valid_str(jule::Str _56822_s) {
	_iter_begin_4385135328:;
	if (!(_56822_s.len() >= 8LL)) { goto _iter_end_4385135328; }
	{
		jule::U32 _57313_first32 = ((static_cast<jule::U32>(_56822_s[0LL]) | (static_cast<jule::U32>(_56822_s[1LL]) << 8LL)) | (static_cast<jule::U32>(_56822_s[2LL]) << 16LL)) | (static_cast<jule::U32>(_56822_s[3LL]) << 24LL);
		jule::U32 _57413_second32 = ((static_cast<jule::U32>(_56822_s[4LL]) | (static_cast<jule::U32>(_56822_s[5LL]) << 8LL)) | (static_cast<jule::U32>(_56822_s[6LL]) << 16LL)) | (static_cast<jule::U32>(_56822_s[7LL]) << 24LL);
		if (((_57313_first32 | _57413_second32) & 2155905152LL) != 0LL) {
			goto _iter_end_4385135328;
		}
		_56822_s=_56822_s.slice(8LL);
	}
	_iter_next_4385135328:;
	goto _iter_begin_4385135328;
	_iter_end_4385135328:;
	jule::Int _58113_i = 0LL;
	_iter_begin_4430255568:;
	if (!(_58113_i < _56822_s.len())) { goto _iter_end_4430255568; }
	{
		jule::U8 _58313_si = _56822_s[static_cast<jule::Int>(_58113_i)];
		if (_58313_si < 128LL) {
			(_58113_i)++;
			goto _iter_next_4430255568;
		}
		jule::U8 _58813_x = _1a99595b3_FIRST[static_cast<jule::Int>(_58313_si)];
		if (_58813_x == 241LL) {
			return false;
		}
		jule::Int _59213_size = static_cast<jule::Int>(_58813_x & 7LL);
		if ((_58113_i + _59213_size) > _56822_s.len()) {
			return false;
		}
		_1a99595b3_accept_range _59613_accept = _1a99595b3_ACCEPT_RANGES[static_cast<jule::Int>(_58813_x >> 4LL)];
		jule::U8 _59717_c = _56822_s[static_cast<jule::Int>(_58113_i + 1LL)];
		if ((_59717_c < _59613_accept._field_lo) || (_59613_accept._field_hi < _59717_c)) {
			return false;
		} else if (_59213_size == 2LL) {
		} else {
			_59717_c=_56822_s[static_cast<jule::Int>(_58113_i + 2LL)];
			if ((_59717_c < 128LL) || (191LL < _59717_c)) {
				return false;
			} else if (_59213_size == 3LL) {
			} else {
				_59717_c=_56822_s[static_cast<jule::Int>(_58113_i + 3LL)];
				if ((_59717_c < 128LL) || (191LL < _59717_c)) {
					return false;
				}
			}
		}
		_58113_i+=_59213_size;
	}
	_iter_next_4430255568:;
	goto _iter_begin_4430255568;
	_iter_end_4430255568:;
	return true;
}



inline jule::Bool _1a99595b3_valid_rune(jule::I32 _62019_r) {
	{
		if (!(((0LL <= _62019_r) && (_62019_r < 55296LL)))) { goto _case_end_4430280320; }
		_case_begin_4430280320:;
		{
			return true;
		}
		goto _match_end_4430279776;
		_case_end_4430280320:;
		if (!(((57343LL < _62019_r) && (_62019_r <= 1114111LL)))) { goto _case_end_4430280432; }
		_case_begin_4430280432:;
		{
			return true;
		}
		goto _match_end_4430279776;
		_case_end_4430280432:;
		_case_begin_4430279968:;
		{
			return false;
		}
		goto _match_end_4430279776;
		_case_end_4430279968:;
		_match_end_4430279776:;
	}
}



inline jule::Bool _1b61ec5ec_is_unary_op(jule::Str _31120_kind) {
	{
		auto _range_expr = _1b61ec5ec_UNARY_OPS;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _1b61ec5ec_op = *_range_begin;
			_iter_begin_4430488160:;
			{
				if (_31120_kind == _1b61ec5ec_op) {
					return true;
				}
			}
			_iter_next_4430488160:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b61ec5ec_op = *_range_begin; goto _iter_begin_4430488160; }
			_iter_end_4430488160:;
		}
	}
	return false;
}



inline jule::Bool _1b61ec5ec_is_bin_op(jule::Str _32218_kind) {
	{
		auto _range_expr = _1b61ec5ec_BIN_OPS;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _1b61ec5ec_op = *_range_begin;
			_iter_begin_4430489872:;
			{
				if (_32218_kind == _1b61ec5ec_op) {
					return true;
				}
			}
			_iter_next_4430489872:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b61ec5ec_op = *_range_begin; goto _iter_begin_4430489872; }
			_iter_end_4430489872:;
		}
	}
	return false;
}



inline jule::Bool _1b61ec5ec_is_weak_op(jule::Str _33319_kind) {
	{
		auto _range_expr = _1b61ec5ec_WEAK_OPS;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _1b61ec5ec_op = *_range_begin;
			_iter_begin_4430492608:;
			{
				if (_33319_kind == _1b61ec5ec_op) {
					return true;
				}
			}
			_iter_next_4430492608:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b61ec5ec_op = *_range_begin; goto _iter_begin_4430492608; }
			_iter_end_4430492608:;
		}
	}
	return false;
}



inline jule::Bool _1b61ec5ec_is_str(jule::Str _34415_k) {
	return (_34415_k != jule::Str("", 0)) && ((_34415_k[0LL] == '\"') || _1b61ec5ec_is_raw_str(_34415_k));
}



inline jule::Bool _1b61ec5ec_is_raw_str(jule::Str _34619_k) {
	return (_34619_k != jule::Str("", 0)) && (_34619_k[0LL] == '`');
}



inline jule::Bool _1b61ec5ec_is_rune(jule::Str _34916_k) {
	return (_34916_k != jule::Str("", 0)) && (_34916_k[0LL] == '\'');
}



inline jule::Bool _1b61ec5ec_is_nil(jule::Str _35115_k) {
	return _35115_k == jule::Str("nil", 3);
}



inline jule::Bool _1b61ec5ec_is_bool(jule::Str _35316_k) {
	return (_35316_k == jule::Str("true", 4)) || (_35316_k == jule::Str("false", 5));
}



inline jule::Bool _1b61ec5ec_contains_any(jule::Str _35517_s,jule::Str _35525_bytes) {
	{
		auto _range_expr = _35525_bytes;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::U8 _1b61ec5ec_b = *_range_begin;
			_iter_begin_4430503824:;
			{
				jule::Int _35713_i = _35517_s.find(static_cast<jule::Str>(_1b61ec5ec_b));
				if (_35713_i >= 0LL) {
					return true;
				}
			}
			_iter_next_4430503824:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b61ec5ec_b = *_range_begin; goto _iter_begin_4430503824; }
			_iter_end_4430503824:;
		}
	}
	return false;
}



inline jule::Bool _1b61ec5ec_is_float(jule::Str _36717_k) {
	if (_36717_k.has_prefix(jule::Str("0x", 2))) {
		return _1b61ec5ec_contains_any(_36717_k,jule::Str(".pP", 3));
	}
	return _1b61ec5ec_contains_any(_36717_k,jule::Str(".eE", 3));
}



inline jule::Bool _1b61ec5ec_is_num(jule::Str _37615_k) {
	if (_37615_k == jule::Str("", 0)) {
		return false;
	}
	jule::U8 _3819_b = _37615_k[0LL];
	return (_3819_b == '.') || (('0' <= _3819_b) && (_3819_b <= '9'));
}



inline jule::Bool _1b61ec5ec_is_lit(jule::Str _38615_k) {
	return (((_1b61ec5ec_is_num(_38615_k) || _1b61ec5ec_is_str(_38615_k)) || _1b61ec5ec_is_rune(_38615_k)) || _1b61ec5ec_is_nil(_38615_k)) || _1b61ec5ec_is_bool(_38615_k);
}



inline jule::Bool _1b61ec5ec_is_ignore_ident(jule::Str _39124_ident) {
	return _39124_ident == jule::Str("_", 1);
}



inline jule::Bool _1b61ec5ec_is_anon_ident(jule::Str _39322_ident) {
	return _39322_ident == jule::Str("<anonymous>", 11);
}



inline jule::Bool _1b61ec5ec_is_punct(jule::I32 _39617_r) {
	{
		auto _range_expr = _1b61ec5ec_PUNCTS;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::I32 _1b61ec5ec_cr = *_range_begin;
			_iter_begin_4430519232:;
			{
				if (_39617_r == _1b61ec5ec_cr) {
					return true;
				}
			}
			_iter_next_4430519232:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b61ec5ec_cr = *_range_begin; goto _iter_begin_4430519232; }
			_iter_end_4430519232:;
		}
	}
	return false;
}



inline jule::Bool _1b61ec5ec_is_space(jule::I32 _40717_r) {
	{
		auto _range_expr = _1b61ec5ec_SPACES;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::I32 _1b61ec5ec_cr = *_range_begin;
			_iter_begin_4430528352:;
			{
				if (_40717_r == _1b61ec5ec_cr) {
					return true;
				}
			}
			_iter_next_4430528352:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b61ec5ec_cr = *_range_begin; goto _iter_begin_4430528352; }
			_iter_end_4430528352:;
		}
	}
	return false;
}



inline jule::Bool _1b61ec5ec_is_letter(jule::I32 _41818_r) {
	return _1b5ac328c_is_letter(_41818_r);
}



inline jule::Bool _1b61ec5ec_is_ident_rune(jule::Str _42422_s) {
	if (_42422_s == jule::Str("", 0)) {
		return false;
	}
	if (_42422_s[0LL] != '_') {
		jule::I32 _43014_r;
		std::tie(_43014_r,std::ignore) = _1a99595b3_decode_rune_str(_42422_s);
		if ((!(_1b61ec5ec_is_letter(_43014_r)))) {
			return false;
		}
	}
	return true;
}



inline jule::Bool _1b61ec5ec_is_decimal(jule::U8 _44019_b) {
	return ('0' <= _44019_b) && (_44019_b <= '9');
}



inline jule::Bool _1b61ec5ec_is_binary(jule::U8 _44218_b) {
	return (_44218_b == '0') || (_44218_b == '1');
}



inline jule::Bool _1b61ec5ec_is_octal(jule::U8 _44417_b) {
	return ('0' <= _44417_b) && (_44417_b <= '7');
}



inline jule::Bool _1b61ec5ec_is_hex(jule::U8 _44715_b) {
	{
		if (!((('0' <= _44715_b) && (_44715_b <= '9')))) { goto _case_end_4430542016; }
		_case_begin_4430542016:;
		{
			return true;
		}
		goto _match_end_4430539376;
		_case_end_4430542016:;
		if (!((('a' <= _44715_b) && (_44715_b <= 'f')))) { goto _case_end_4430542128; }
		_case_begin_4430542128:;
		{
			return true;
		}
		goto _match_end_4430539376;
		_case_end_4430542128:;
		if (!((('A' <= _44715_b) && (_44715_b <= 'F')))) { goto _case_end_4430542240; }
		_case_begin_4430542240:;
		{
			return true;
		}
		goto _match_end_4430539376;
		_case_end_4430542240:;
		_case_begin_4430537136:;
		{
			return false;
		}
		goto _match_end_4430539376;
		_case_end_4430537136:;
		_match_end_4430539376:;
	}
}



inline jule::Bool _1b61ec5ec_is_assign(jule::Uint _45918_id) {
	return ((((((_45918_id == 2LLU) || (_45918_id == 31LLU)) || (_45918_id == 34LLU)) || (_45918_id == 20LLU)) || (_45918_id == 28LLU)) || (_45918_id == 3LLU)) || (_45918_id == 7LLU);
}



inline jule::Bool _1b61ec5ec_is_postfix_op(jule::Str _47222_kind) {
	{
		auto _range_expr = _1b61ec5ec_POSTFIX_OPS;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _1b61ec5ec_op = *_range_begin;
			_iter_begin_4430549360:;
			{
				if (_47222_kind == _1b61ec5ec_op) {
					return true;
				}
			}
			_iter_next_4430549360:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b61ec5ec_op = *_range_begin; goto _iter_begin_4430549360; }
			_iter_end_4430549360:;
		}
	}
	return false;
}



inline jule::Bool _1b61ec5ec_is_assign_op(jule::Str _48321_kind) {
	if (_1b61ec5ec_is_postfix_op(_48321_kind)) {
		return true;
	}
	{
		auto _range_expr = _1b61ec5ec_ASSING_OPS;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _1b61ec5ec_op = *_range_begin;
			_iter_begin_4430552992:;
			{
				if (_48321_kind == _1b61ec5ec_op) {
					return true;
				}
			}
			_iter_next_4430552992:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b61ec5ec_op = *_range_begin; goto _iter_begin_4430552992; }
			_iter_end_4430552992:;
		}
	}
	return false;
}



inline jule::Ref<_1b61ece27_File> _1b61ece27_new_file_set(jule::Str _6421_path) {
	return jule::new_struct<_1b61ece27_File>(new( std::nothrow ) _1b61ece27_File(jule::Slice<jule::U8>(),_6421_path,jule::Slice<_1b61ec5ec_Token>()));
}



inline _1cdeeb191_Log _1b62ba104_make_err(jule::Int _10313_row,jule::Int _10323_col,jule::Ref<_1b61ece27_File>& _10334_f,jule::Str _10344_fmt,jule::Slice<jule::Any> _10357_args) {
	return _1cdeeb191_Log(1LLU,_10313_row,_10323_col,_10334_f->_method_path(),_1cdeeb191_logf(_10344_fmt,_10357_args),jule::Str(),jule::Str());
}



inline jule::Bool _1b62ba104_bytes_has_prefix(jule::Slice<jule::U8>& _11322_bytes,jule::Str _11337_prefix) {
	if (_11322_bytes.len() < _11337_prefix.len()) {
		return false;
	}
	{
		auto _range_expr = _11337_prefix;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1b62ba104_i = 0;
			_iter_begin_4430565712:;
			{
				if (_11322_bytes[static_cast<jule::Int>(_1b62ba104_i)] != _11337_prefix[static_cast<jule::Int>(_1b62ba104_i)]) {
					return false;
				}
			}
			_iter_next_4430565712:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1b62ba104_i; goto _iter_begin_4430565712; }
			_iter_end_4430565712:;
		}
	}
	return true;
}



inline jule::Str _1b62ba104_float_fmt_e(jule::Slice<jule::U8>& _12517_txt,jule::Int _12534_i) {
	jule::Str _12544_lit = jule::Str();
	(_12534_i)++;
	if (_12534_i >= _12517_txt.len()) {
		return _12544_lit;
	}
	jule::U8 _13113_b = _12517_txt[static_cast<jule::Int>(_12534_i)];
	if ((_13113_b == '+') || (_13113_b == '-')) {
		(_12534_i)++;
		if (_12534_i >= _12517_txt.len()) {
			return _12544_lit;
		}
	}
	jule::Int _1399_first = _12534_i;
	_iter_begin_4430575904:;
	if (!(_12534_i < _12517_txt.len())) { goto _iter_end_4430575904; }
	{
		_13113_b=_12517_txt[static_cast<jule::Int>(_12534_i)];
		if ((!(_1b61ec5ec_is_decimal(_13113_b)))) {
			goto _iter_end_4430575904;
		}
	}
	_iter_next_4430575904:;
	(_12534_i)++;
	goto _iter_begin_4430575904;
	_iter_end_4430575904:;
	if (_12534_i == _1399_first) {
		_12544_lit = jule::Str("", 0);
		return _12544_lit;
	}
	_12544_lit = static_cast<jule::Str>(_12517_txt.slice(0LL,static_cast<jule::Int>(_12534_i)));
	return _12544_lit;
}



inline jule::Str _1b62ba104_float_fmt_p(jule::Slice<jule::U8>& _15317_txt,jule::Int _15330_i) {
	return _1b62ba104_float_fmt_e(_15317_txt,_15330_i);
}



inline jule::Str _1b62ba104_float_fmt_dotnp(jule::Slice<jule::U8>& _15521_txt,jule::Int _15538_i) {
	if (_15521_txt[static_cast<jule::Int>(_15538_i)] != '.') {
		return jule::Str("", 0);
	}
	(_15538_i)++;
	_julec_label_loop:;
	_iter_begin_4430587296:;
	if (!(_15538_i < _15521_txt.len())) { goto _iter_end_4430587296; }
	{
		jule::U8 _16313_b = _15521_txt[static_cast<jule::Int>(_15538_i)];
		{
			if (!((_1b61ec5ec_is_decimal(_16313_b)))) { goto _case_end_4430590752; }
			_case_begin_4430590752:;
			{
				goto _iter_next_4430587296;
			}
			goto _match_end_4430590272;
			_case_end_4430590752:;
			if (!((_1b62ba104_is_float_fmt_p(_16313_b,_15538_i)))) { goto _case_end_4430590864; }
			_case_begin_4430590864:;
			{
				return _1b62ba104_float_fmt_p(_15521_txt,_15538_i);
			}
			goto _match_end_4430590272;
			_case_end_4430590864:;
			_case_begin_4430590400:;
			{
				goto _iter_end_4430587296;
			}
			goto _match_end_4430590272;
			_case_end_4430590400:;
			_match_end_4430590272:;
		}
	}
	_iter_next_4430587296:;
	(_15538_i)++;
	goto _iter_begin_4430587296;
	_iter_end_4430587296:;
	return jule::Str("", 0);
}



inline jule::Str _1b62ba104_float_fmt_dotfp(jule::Slice<jule::U8>& _17321_txt,jule::Int _17338_i) {
	_17338_i+=2LL;
	return _1b62ba104_float_fmt_e(_17321_txt,_17338_i);
}



inline jule::Str _1b62ba104_float_fmt_dotp(jule::Slice<jule::U8>& _18020_txt,jule::Int _18037_i) {
	(_18037_i)++;
	return _1b62ba104_float_fmt_e(_18020_txt,_18037_i);
}



inline jule::Str _1b62ba104_float_num(jule::Slice<jule::U8>& _18715_txt,jule::Int _18732_i) {
	jule::Str _18742_lit = jule::Str();
	(_18732_i)++;
	_iter_begin_4430600768:;
	if (!(_18732_i < _18715_txt.len())) { goto _iter_end_4430600768; }
	{
		jule::U8 _19013_b = _18715_txt[static_cast<jule::Int>(_18732_i)];
		if ((_18732_i > 1LL) && ((_19013_b == 'e') || (_19013_b == 'E'))) {
			_18742_lit = _1b62ba104_float_fmt_e(_18715_txt,_18732_i);
			return _18742_lit;
		}
		if ((!(_1b61ec5ec_is_decimal(_19013_b)))) {
			goto _iter_end_4430600768;
		}
	}
	_iter_next_4430600768:;
	(_18732_i)++;
	goto _iter_begin_4430600768;
	_iter_end_4430600768:;
	if (_18732_i == 1LL) {
		return _18742_lit;
	}
	_18742_lit = static_cast<jule::Str>(_18715_txt.slice(0LL,static_cast<jule::Int>(_18732_i)));
	return _18742_lit;
}



inline jule::Str _1b62ba104_common_num(jule::Slice<jule::U8>& _20516_txt) {
	jule::Str _20531_lit = jule::Str();
	jule::Int _20613_i = 0LL;
	_julec_label_loop:;
	_iter_begin_4430609968:;
	if (!(_20613_i < _20516_txt.len())) { goto _iter_end_4430609968; }
	{
		jule::U8 _20913_b = _20516_txt[static_cast<jule::Int>(_20613_i)];
		{
			if (!((_20913_b == '.'))) { goto _case_end_4430613296; }
			_case_begin_4430613296:;
			{
				_20531_lit = _1b62ba104_float_num(_20516_txt,_20613_i);
				return _20531_lit;
			}
			goto _match_end_4430613104;
			_case_end_4430613296:;
			if (!((_1b62ba104_is_float_fmt_e(_20913_b,_20613_i)))) { goto _case_end_4430613424; }
			_case_begin_4430613424:;
			{
				_20531_lit = _1b62ba104_float_fmt_e(_20516_txt,_20613_i);
				return _20531_lit;
			}
			goto _match_end_4430613104;
			_case_end_4430613424:;
			if (!(((!(_1b61ec5ec_is_decimal(_20913_b)))))) { goto _case_end_4430613552; }
			_case_begin_4430613552:;
			{
				goto _iter_end_4430609968;
			}
			goto _match_end_4430613104;
			_case_end_4430613552:;
			_match_end_4430613104:;
		}
	}
	_iter_next_4430609968:;
	(_20613_i)++;
	goto _iter_begin_4430609968;
	_iter_end_4430609968:;
	if (_20613_i == 0LL) {
		return _20531_lit;
	}
	_20531_lit = static_cast<jule::Str>(_20516_txt.slice(0LL,static_cast<jule::Int>(_20613_i)));
	return _20531_lit;
}



inline jule::Str _1b62ba104_binary_num(jule::Slice<jule::U8>& _22316_txt) {
	jule::Str _22331_lit = jule::Str();
	if ((!(_1b62ba104_bytes_has_prefix(_22316_txt,jule::Str("0b", 2))))) {
		_22331_lit = jule::Str("", 0);
		return _22331_lit;
	}
	if (_22316_txt.len() < 2LL) {
		return _22331_lit;
	}
	
	jule::Int _23213_i = 2LL;
	_iter_begin_4430620560:;
	if (!(_23213_i < _22316_txt.len())) { goto _iter_end_4430620560; }
	{
		if ((!(_1b61ec5ec_is_binary(_22316_txt[static_cast<jule::Int>(_23213_i)])))) {
			goto _iter_end_4430620560;
		}
	}
	_iter_next_4430620560:;
	(_23213_i)++;
	goto _iter_begin_4430620560;
	_iter_end_4430620560:;
	if (_23213_i == 2LL) {
		return _22331_lit;
	}
	_22331_lit = static_cast<jule::Str>(_22316_txt.slice(0LL,static_cast<jule::Int>(_23213_i)));
	return _22331_lit;
}



inline jule::Bool _1b62ba104_is_float_fmt_e(jule::U8 _24519_b,jule::Int _24528_i) {
	return (_24528_i > 0LL) && ((_24519_b == 'e') || (_24519_b == 'E'));
}



inline jule::Bool _1b62ba104_is_float_fmt_p(jule::U8 _24619_b,jule::Int _24628_i) {
	return (_24628_i > 0LL) && ((_24619_b == 'p') || (_24619_b == 'P'));
}



inline jule::Bool _1b62ba104_is_float_fmt_dotnp(jule::Slice<jule::U8>& _24824_txt,jule::Int _24841_i) {
	if (_24824_txt[static_cast<jule::Int>(_24841_i)] != '.') {
		return false;
	}
	(_24841_i)++;
	_julec_label_loop:;
	_iter_begin_4430634864:;
	if (!(_24841_i < _24824_txt.len())) { goto _iter_end_4430634864; }
	{
		jule::U8 _25613_b = _24824_txt[static_cast<jule::Int>(_24841_i)];
		{
			if (!((_1b61ec5ec_is_decimal(_25613_b)))) { goto _case_end_4430640976; }
			_case_begin_4430640976:;
			{
				goto _iter_next_4430634864;
			}
			goto _match_end_4430640496;
			_case_end_4430640976:;
			if (!((_1b62ba104_is_float_fmt_p(_25613_b,_24841_i)))) { goto _case_end_4430641088; }
			_case_begin_4430641088:;
			{
				return true;
			}
			goto _match_end_4430640496;
			_case_end_4430641088:;
			_case_begin_4430640624:;
			{
				goto _iter_end_4430634864;
			}
			goto _match_end_4430640496;
			_case_end_4430640624:;
			_match_end_4430640496:;
		}
	}
	_iter_next_4430634864:;
	(_24841_i)++;
	goto _iter_begin_4430634864;
	_iter_end_4430634864:;
	return false;
}



inline jule::Bool _1b62ba104_is_float_fmt_dotp(jule::Slice<jule::U8>& _26723_txt,jule::Int _26736_i) {
	{
		if (!((_26723_txt.len() < 3LL))) { goto _case_end_4430646352; }
		_case_begin_4430646352:;
		{
			goto _case_begin_4430646464;
		}
		goto _match_end_4430645808;
		_case_end_4430646352:;
		if (!((_26723_txt[static_cast<jule::Int>(_26736_i)] != '.'))) { goto _case_end_4430646464; }
		_case_begin_4430646464:;
		{
			goto _case_begin_4430646576;
		}
		goto _match_end_4430645808;
		_case_end_4430646464:;
		if (!(((_26723_txt[static_cast<jule::Int>(_26736_i + 1LL)] != 'p') && (_26723_txt[static_cast<jule::Int>(_26736_i + 1LL)] != 'P')))) { goto _case_end_4430646576; }
		_case_begin_4430646576:;
		{
			return false;
		}
		goto _match_end_4430645808;
		_case_end_4430646576:;
		_case_begin_4430645984:;
		{
			return true;
		}
		goto _match_end_4430645808;
		_case_end_4430645984:;
		_match_end_4430645808:;
	}
}



inline jule::Bool _1b62ba104_is_float_fmt_dotfp(jule::Slice<jule::U8>& _27624_txt,jule::Int _27637_i) {
	{
		if (!((_27624_txt.len() < 4LL))) { goto _case_end_4430654928; }
		_case_begin_4430654928:;
		{
			goto _case_begin_4430655040;
		}
		goto _match_end_4430654368;
		_case_end_4430654928:;
		if (!((_27624_txt[static_cast<jule::Int>(_27637_i)] != '.'))) { goto _case_end_4430655040; }
		_case_begin_4430655040:;
		{
			goto _case_begin_4430655152;
		}
		goto _match_end_4430654368;
		_case_end_4430655040:;
		if (!(((_27624_txt[static_cast<jule::Int>(_27637_i + 1LL)] != 'f') && (_27624_txt[static_cast<jule::Int>(_27637_i + 1LL)] != 'F')))) { goto _case_end_4430655152; }
		_case_begin_4430655152:;
		{
			goto _case_begin_4430656240;
		}
		goto _match_end_4430654368;
		_case_end_4430655152:;
		if (!(((_27624_txt[static_cast<jule::Int>(_27637_i + 2LL)] != 'p') && (_27624_txt[static_cast<jule::Int>(_27637_i + 1LL)] != 'P')))) { goto _case_end_4430656240; }
		_case_begin_4430656240:;
		{
			return false;
		}
		goto _match_end_4430654368;
		_case_end_4430656240:;
		_case_begin_4430654544:;
		{
			return true;
		}
		goto _match_end_4430654368;
		_case_end_4430654544:;
		_match_end_4430654368:;
	}
}



inline jule::Str _1b62ba104_octal_num(jule::Slice<jule::U8>& _28615_txt) {
	jule::Str _28630_lit = jule::Str();
	if (_28615_txt[0LL] != '0') {
		_28630_lit = jule::Str("", 0);
		return _28630_lit;
	}
	if (_28615_txt.len() < 2LL) {
		return _28630_lit;
	}
	jule::Int _29413_octal_start = 1LL;
	if (_28615_txt[1LL] == 'o') {
		if (_28615_txt.len() < 3LL) {
			return _28630_lit;
		}
		(_29413_octal_start)++;
	}
	jule::Int _30313_i = _29413_octal_start;
	_iter_begin_4430672816:;
	if (!(_30313_i < _28615_txt.len())) { goto _iter_end_4430672816; }
	{
		jule::U8 _30513_b = _28615_txt[static_cast<jule::Int>(_30313_i)];
		if (_1b62ba104_is_float_fmt_e(_30513_b,_30313_i)) {
			_28630_lit = _1b62ba104_float_fmt_e(_28615_txt,_30313_i);
			return _28630_lit;
		}
		if ((!(_1b61ec5ec_is_octal(_30513_b)))) {
			goto _iter_end_4430672816;
		}
	}
	_iter_next_4430672816:;
	(_30313_i)++;
	goto _iter_begin_4430672816;
	_iter_end_4430672816:;
	if (_30313_i == _29413_octal_start) {
		return _28630_lit;
	}
	_28630_lit = static_cast<jule::Str>(_28615_txt.slice(0LL,static_cast<jule::Int>(_30313_i)));
	return _28630_lit;
}



inline jule::Str _1b62ba104_hex_num(jule::Slice<jule::U8>& _32013_txt) {
	jule::Str _32028_lit = jule::Str();
	if (_32013_txt.len() < 3LL) {
		return _32028_lit;
	}
	if ((_32013_txt[0LL] != '0') || ((_32013_txt[1LL] != 'x') && (_32013_txt[1LL] != 'X'))) {
		return _32028_lit;
	}
	
	jule::Int _32913_i = 2LL;
	_julec_label_loop:;
	_iter_begin_4430688480:;
	if (!(_32913_i < _32013_txt.len())) { goto _iter_end_4430688480; }
	{
		jule::U8 _33213_b = _32013_txt[static_cast<jule::Int>(_32913_i)];
		{
			if (!((_1b62ba104_is_float_fmt_dotp(_32013_txt,_32913_i)))) { goto _case_end_4430691760; }
			_case_begin_4430691760:;
			{
				_32028_lit = _1b62ba104_float_fmt_dotp(_32013_txt,_32913_i);
				return _32028_lit;
			}
			goto _match_end_4430691536;
			_case_end_4430691760:;
			if (!((_1b62ba104_is_float_fmt_dotfp(_32013_txt,_32913_i)))) { goto _case_end_4430691888; }
			_case_begin_4430691888:;
			{
				_32028_lit = _1b62ba104_float_fmt_dotfp(_32013_txt,_32913_i);
				return _32028_lit;
			}
			goto _match_end_4430691536;
			_case_end_4430691888:;
			if (!((_1b62ba104_is_float_fmt_p(_33213_b,_32913_i)))) { goto _case_end_4430692016; }
			_case_begin_4430692016:;
			{
				_32028_lit = _1b62ba104_float_fmt_p(_32013_txt,_32913_i);
				return _32028_lit;
			}
			goto _match_end_4430691536;
			_case_end_4430692016:;
			if (!((_1b62ba104_is_float_fmt_dotnp(_32013_txt,_32913_i)))) { goto _case_end_4430692144; }
			_case_begin_4430692144:;
			{
				_32028_lit = _1b62ba104_float_fmt_dotnp(_32013_txt,_32913_i);
				return _32028_lit;
			}
			goto _match_end_4430691536;
			_case_end_4430692144:;
			if (!(((!(_1b61ec5ec_is_hex(_33213_b)))))) { goto _case_end_4430692272; }
			_case_begin_4430692272:;
			{
				goto _iter_end_4430688480;
			}
			goto _match_end_4430691536;
			_case_end_4430692272:;
			_match_end_4430691536:;
		}
	}
	_iter_next_4430688480:;
	(_32913_i)++;
	goto _iter_begin_4430688480;
	_iter_end_4430688480:;
	if (_32913_i == 2LL) {
		return _32028_lit;
	}
	_32028_lit = static_cast<jule::Str>(_32013_txt.slice(0LL,static_cast<jule::Int>(_32913_i)));
	return _32028_lit;
}



inline jule::Str _1b62ba104_hex_escape(jule::Slice<jule::U8>& _35716_txt,jule::Int _35729_n) {
	jule::Str _35739_seq = jule::Str();
	if (_35716_txt.len() < _35729_n) {
		return _35739_seq;
	}
	
	jule::Int _36313_i = 2LL;
	_iter_begin_4430705008:;
	if (!(_36313_i < _35729_n)) { goto _iter_end_4430705008; }
	{
		if ((!(_1b61ec5ec_is_hex(_35716_txt[static_cast<jule::Int>(_36313_i)])))) {
			return _35739_seq;
		}
	}
	_iter_next_4430705008:;
	(_36313_i)++;
	goto _iter_begin_4430705008;
	_iter_end_4430705008:;
	_35739_seq=static_cast<jule::Str>(_35716_txt.slice(0LL,static_cast<jule::Int>(_35729_n)));
	return _35739_seq;
}



inline jule::Str _1b62ba104_big_unicode_point_escape(jule::Slice<jule::U8>& _37530_txt) {
	return _1b62ba104_hex_escape(_37530_txt,10LL);
}



inline jule::Str _1b62ba104_little_unicode_point_escape(jule::Slice<jule::U8>& _37733_txt) {
	return _1b62ba104_hex_escape(_37733_txt,6LL);
}



inline jule::Str _1b62ba104_hex_byte_escape(jule::Slice<jule::U8>& _37921_txt) {
	return _1b62ba104_hex_escape(_37921_txt,4LL);
}



inline jule::Str _1b62ba104_byte_escape(jule::Slice<jule::U8>& _38217_txt) {
	jule::Str _38232_seq = jule::Str();
	if (_38217_txt.len() < 4LL) {
		return _38232_seq;
	}
	if (((!(_1b61ec5ec_is_octal(_38217_txt[1LL]))) || (!(_1b61ec5ec_is_octal(_38217_txt[2LL])))) || (!(_1b61ec5ec_is_octal(_38217_txt[3LL])))) {
		return _38232_seq;
	}
	_38232_seq = static_cast<jule::Str>(_38217_txt.slice(0LL,4LL));
	return _38232_seq;
}



inline jule::Slice<_1cdeeb191_Log> _1b62ba104_lex(jule::Ref<_1b61ece27_File> _77816_f) {
	if ((!(jule::real(_77816_f)))) {
		return nullptr;
	}
	_1b62ba104_Lex _78313_lex = _1b62ba104_Lex(jule::Slice<_1b61ec5ec_Token>(),_77816_f,0LL,jule::Int(),-1LL,jule::Slice<_1cdeeb191_Log>());
	_78313_lex._method_new_line();
	_78313_lex._method_lex();
	if (_78313_lex._field_errors.len() > 0LL) {
		return _78313_lex._field_errors;
	}
	_77816_f->_field__tokens=_78313_lex._field_tokens;
	return nullptr;
}



inline jule::Ref<_1a9b97966_FileInfo> _1a9b97966_parse_file(jule::Ref<_1b61ece27_File> _2223_f) {
	if ((!(jule::real(_2223_f)))) {
		return jule::new_ref<_1a9b97966_FileInfo>();
	}
	jule::Ref<_1a9b97966_FileInfo> _2713_finf = jule::new_struct<_1a9b97966_FileInfo>(new( std::nothrow ) _1a9b97966_FileInfo());
	std::tie(_2713_finf->_field_ast,_2713_finf->_field_errors) = _1a9b97966_parse_fileset(_2223_f);
	if (_2713_finf->_field_errors.len() > 0LL) {
		jule::drop(_2713_finf->_field_ast);
	}
	return _2713_finf;
}



inline jule::Ref<_1a9b97966_PackageInfo> _1a9b97966_parse_package(jule::Slice<jule::Ref<_1b61ece27_File>> _3926_filesets) {
	if (_3926_filesets == nullptr) {
		return jule::new_ref<_1a9b97966_PackageInfo>();
	}
	jule::Ref<_1a9b97966_PackageInfo> _4413_pinf = jule::new_struct<_1a9b97966_PackageInfo>(new( std::nothrow ) _1a9b97966_PackageInfo());
	_4413_pinf->_field_files=jule::Slice<jule::Ref<_1a9b97966_FileInfo>>::alloc(0LL,static_cast<jule::Int>(static_cast<jule::I64>(_3926_filesets.len())));
	{
		auto _range_expr = _3926_filesets;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b61ece27_File> _1a9b97966_f = *_range_begin;
			_iter_begin_4432526352:;
			{
				if ((!(jule::real(_1a9b97966_f)))) {
					goto _iter_next_4432526352;
				}
				jule::Ref<_1a9b97966_FileInfo> _5117_finfo = _1a9b97966_parse_file(_1a9b97966_f);
				_4413_pinf->_field_files=jule::append(_4413_pinf->_field_files,jule::Slice<jule::Ref<_1a9b97966_FileInfo>>({_5117_finfo}));
			}
			_iter_next_4432526352:;
			++_range_begin;
			if (_range_begin != _range_end) { _1a9b97966_f = *_range_begin; goto _iter_begin_4432526352; }
			_iter_end_4432526352:;
		}
	}
	return _4413_pinf;
}



inline std::tuple<jule::Ref<_1b61d1d62_Ast>,jule::Slice<_1cdeeb191_Log>> _1a9b97966_parse_fileset(jule::Ref<_1b61ece27_File> _5822_f) {
	jule::Ref<_1a9e07434_Parser> _5913_p = jule::new_struct<_1a9e07434_Parser>(new( std::nothrow ) _1a9e07434_Parser());
	_5913_p->_method_parse(_5822_f);
	return std::make_tuple(_5913_p->_field_ast,_5913_p->_field_errors);
}



inline jule::Ref<_1b61ca014_ScopeTree> _1a9b97a76_new_scope(void) {
	return jule::new_struct<_1b61ca014_ScopeTree>(new( std::nothrow ) _1b61ca014_ScopeTree());
}



inline std::tuple<jule::Bool,jule::Bool> _1a9b97a76_is_st(_1b61ec5ec_Token _4410_current,_1b61ec5ec_Token _4426_prev) {
	jule::Bool _4441_ok = jule::Bool();
	jule::Bool _4451_terminated = jule::Bool();
	_4441_ok=(_4410_current._field_id == 5LLU) || (_4426_prev._field_row < _4410_current._field_row);
	_4451_terminated=_4410_current._field_id == 5LLU;
	return std::make_tuple(_4441_ok,_4451_terminated);
}



inline jule::Bool _1a9b97a76_prev_is_incomplete_binary_expr(jule::Slice<_1b61ec5ec_Token>& _5036_tokens,jule::Int& _5054_i) {
	if ((_5054_i > 1LL) && (_5036_tokens[static_cast<jule::Int>(_5054_i - 2LL)]._field_id == 23LLU)) {
		return false;
	}
	{
		_1b61ec5ec_Token* _5713_prev = (&(_5036_tokens[static_cast<jule::Int>(_5054_i - 1LL)]));
		return ((_5713_prev->_field_id == 7LLU) && _1b61ec5ec_is_bin_op(_5713_prev->_field_kind)) && (_5713_prev->_field_row < _5036_tokens[static_cast<jule::Int>(_5054_i)]._field_row);
	}
}



inline std::tuple<jule::Int,jule::Bool> _1a9b97a76_next_st_pos(jule::Slice<_1b61ec5ec_Token>& _6517_tokens,jule::Int _6534_start) {
	jule::Int _6613_brace_n = 0LL;
	jule::Int _6713_i = _6534_start;
	_iter_begin_4432555056:;
	if (!(_6713_i < _6517_tokens.len())) { goto _iter_end_4432555056; }
	{
		jule::Bool _6917_ok = false;
		jule::Bool _7017_terminated = false;
		_1b61ec5ec_Token _7113_tok = _6517_tokens[static_cast<jule::Int>(_6713_i)];
		{
			auto _match_expr{ _7113_tok._field_id };
			if (!((3LLU) == _match_expr)) { goto _case_end_4432561088; }
			_case_begin_4432561088:;
			{
				{
					auto _match_expr{ _7113_tok._field_kind };
					if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4432569360; }
					_case_begin_4432569360:;
					{
						if ((_6613_brace_n == 0LL) && (_6713_i > _6534_start)) {
							if ((!(_1a9b97a76_prev_is_incomplete_binary_expr(_6517_tokens,_6713_i)))) {
								std::tie(_6917_ok,_7017_terminated) = _1a9b97a76_is_st(_7113_tok,_6517_tokens[static_cast<jule::Int>(_6713_i - 1LL)]);
								if (_6917_ok) {
									goto _julec_label_return;
								}
							}
						}
						(_6613_brace_n)++;
					}
					goto _match_end_4432561600;
					_case_end_4432569360:;
					_case_begin_4432562720:;
					{
						(_6613_brace_n)--;
						if ((_6613_brace_n == 0LL) && ((_6713_i + 1LL) < _6517_tokens.len())) {
							std::tie(_6917_ok,_7017_terminated) = _1a9b97a76_is_st(_6517_tokens[static_cast<jule::Int>(_6713_i + 1LL)],_7113_tok);
							if (_6917_ok) {
								(_6713_i)++;
								goto _julec_label_return;
							}
						}
					}
					goto _match_end_4432561600;
					_case_end_4432562720:;
					_match_end_4432561600:;
				}
				goto _iter_next_4432555056;
			}
			goto _match_end_4432558944;
			_case_end_4432561088:;
			_match_end_4432558944:;
		}
		if (_6613_brace_n != 0LL) {
			goto _iter_next_4432555056;
		}
		if (_6713_i > _6534_start) {
			if (_1a9b97a76_prev_is_incomplete_binary_expr(_6517_tokens,_6713_i)) {
				goto _iter_next_4432555056;
			}
			std::tie(_6917_ok,_7017_terminated) = _1a9b97a76_is_st(_7113_tok,_6517_tokens[static_cast<jule::Int>(_6713_i - 1LL)]);
		} else {
			std::tie(_6917_ok,_7017_terminated) = _1a9b97a76_is_st(_7113_tok,_7113_tok);
		}
		if ((!(_6917_ok))) {
			goto _iter_next_4432555056;
		}
		_julec_label_return:;
		if (_7017_terminated) {
			(_6713_i)++;
		}
		return std::make_tuple(_6713_i,_7017_terminated);
	}
	_iter_next_4432555056:;
	(_6713_i)++;
	goto _iter_begin_4432555056;
	_iter_end_4432555056:;
	return std::make_tuple(_6713_i,false);
}



inline std::tuple<jule::Slice<_1b61ec5ec_Token>,jule::Bool> _1a9b97a76_skip_st(jule::Int& _12817_i,jule::Slice<_1b61ec5ec_Token> _12829_tokens) {
	jule::Int _1299_start = _12817_i;
	jule::Bool _13013_terminated = false;
	std::tie(_12817_i,_13013_terminated) = _1a9b97a76_next_st_pos(_12829_tokens,_1299_start);
	jule::Slice<_1b61ec5ec_Token> _13213_st_tokens = _12829_tokens.slice(static_cast<jule::Int>(_1299_start),static_cast<jule::Int>(_12817_i));
	if (_13013_terminated) {
		if (_13213_st_tokens.len() == 1LL) {
			std::tie(_13213_st_tokens,_13013_terminated) = _1a9b97a76_skip_st(_12817_i,_12829_tokens);
			return std::make_tuple(_13213_st_tokens,_13013_terminated);
		}
		_13213_st_tokens=_13213_st_tokens.slice(0LL,static_cast<jule::Int>(_13213_st_tokens.len() - 1LL));
	}
	return std::make_tuple(_13213_st_tokens,_13013_terminated);
}



inline jule::Slice<jule::Ref<_1a9b97a76_Stmt>> _1a9b97a76_split_stms(jule::Slice<_1b61ec5ec_Token>& _15020_tokens) {
	jule::Slice<jule::Ref<_1a9b97a76_Stmt>> _15113_stms = nullptr;
	jule::Int _15213_pos = 0LL;
	_iter_begin_4432598432:;
	if (!(_15213_pos < _15020_tokens.len())) { goto _iter_end_4432598432; }
	{
		jule::Slice<_1b61ec5ec_Token> _15418_tokens;
		jule::Bool _15426_terminated;
		std::tie(_15418_tokens,_15426_terminated) = _1a9b97a76_skip_st(_15213_pos,_15020_tokens);
		_15113_stms=jule::append(_15113_stms,jule::Slice<jule::Ref<_1a9b97a76_Stmt>>({jule::new_struct<_1a9b97a76_Stmt>(new( std::nothrow ) _1a9b97a76_Stmt(_15418_tokens,_15426_terminated))}));
	}
	_iter_next_4432598432:;
	goto _iter_begin_4432598432;
	_iter_end_4432598432:;
	return _15113_stms;
}



inline jule::Slice<_1b61ec5ec_Token> _1a9ba6854_is_fn_call(jule::Slice<_1b61ec5ec_Token>& _4020_tokens) {
	{
		auto _match_expr{ _4020_tokens[0LL]._field_id };
		if (!((3LLU) == _match_expr || (2LLU) == _match_expr || (1LLU) == _match_expr)) { goto _case_end_4432609328; }
		goto _match_end_4432597824;
		_case_end_4432609328:;
		_case_begin_4432602144:;
		{
			_1b61ec5ec_Token _4813_tok = _4020_tokens[static_cast<jule::Int>(_4020_tokens.len() - 1LL)];
			if ((_4813_tok._field_id != 3LLU) && (_4813_tok._field_kind != jule::Str(")", 1))) {
				return nullptr;
			}
		}
		goto _match_end_4432597824;
		_case_end_4432602144:;
		_match_end_4432597824:;
	}
	_1b61ec5ec_Token _5313_tok = _4020_tokens[static_cast<jule::Int>(_4020_tokens.len() - 1LL)];
	if ((_5313_tok._field_id != 3LLU) || (_5313_tok._field_kind != jule::Str(")", 1))) {
		return nullptr;
	}
	jule::Int _5713_brace_n = 0LL;
	jule::I64 _6013_i = _4020_tokens.len() - 1LL;
	_iter_begin_4432613376:;
	if (!(_6013_i >= 1LL)) { goto _iter_end_4432613376; }
	{
		_5313_tok=_4020_tokens[static_cast<jule::Int>(_6013_i)];
		if (_5313_tok._field_id == 3LLU) {
			{
				auto _match_expr{ _5313_tok._field_kind };
				if (!((jule::Str(")", 1)) == _match_expr)) { goto _case_end_4432618608; }
				_case_begin_4432618608:;
				{
					(_5713_brace_n)++;
				}
				goto _match_end_4432617904;
				_case_end_4432618608:;
				if (!((jule::Str("(", 1)) == _match_expr)) { goto _case_end_4432618720; }
				_case_begin_4432618720:;
				{
					(_5713_brace_n)--;
				}
				goto _match_end_4432617904;
				_case_end_4432618720:;
				_match_end_4432617904:;
			}
			if (_5713_brace_n == 0LL) {
				return _4020_tokens.slice(0LL,static_cast<jule::Int>(_6013_i));
			}
		}
	}
	_iter_next_4432613376:;
	(_6013_i)--;
	goto _iter_begin_4432613376;
	_iter_end_4432613376:;
	return nullptr;
}



inline jule::Ref<_1a9ba6854_CallData> _1a9ba6854_get_call_data(jule::Slice<_1b61ec5ec_Token>& _8223_tokens) {
	jule::Ref<_1a9ba6854_CallData> _8313_data = jule::new_struct<_1a9ba6854_CallData>(new( std::nothrow ) _1a9ba6854_CallData());
	std::tie(_8313_data->_field_expr_tokens,_8313_data->_field_args_tokens) = _1a9e07434_range_last(_8223_tokens);
	if (_8313_data->_field_expr_tokens.len() == 0LL) {
		return _8313_data;
	}
	_1b61ec5ec_Token _909_token = _8313_data->_field_expr_tokens[static_cast<jule::Int>(_8313_data->_field_expr_tokens.len() - 1LL)];
	if ((_909_token._field_id == 3LLU) && (_909_token._field_kind == jule::Str("]", 1))) {
		std::tie(_8313_data->_field_expr_tokens,_8313_data->_field_generics_tokens) = _1a9e07434_range_last(_8313_data->_field_expr_tokens);
	}
	return _8313_data;
}



inline jule::Slice<_1b61ec5ec_Token> _1a9ba6854_get_block_expr(jule::Slice<_1b61ec5ec_Token>& _9824_tokens) {
	jule::Int _9913_brace_n = 0LL;
	{
		auto _range_expr = _9824_tokens;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1a9ba6854_i = 0;
			_1b61ec5ec_Token _1a9ba6854_tok = *_range_begin;
			_iter_begin_4432632560:;
			{
				if (_1a9ba6854_tok._field_id == 3LLU) {
					{
						auto _match_expr{ _1a9ba6854_tok._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr)) { goto _case_end_4432636912; }
						_case_begin_4432636912:;
						{
							if (_9913_brace_n > 0LL) {
								(_9913_brace_n)++;
								goto _match_end_4432635328;
							}
							return _9824_tokens.slice(0LL,static_cast<jule::Int>(_1a9ba6854_i));
						}
						goto _match_end_4432635328;
						_case_end_4432636912:;
						if (!((jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4432637264; }
						_case_begin_4432637264:;
						{
							(_9913_brace_n)++;
						}
						goto _match_end_4432635328;
						_case_end_4432637264:;
						_case_begin_4432636112:;
						{
							(_9913_brace_n)--;
						}
						goto _match_end_4432635328;
						_case_end_4432636112:;
						_match_end_4432635328:;
					}
				}
			}
			_iter_next_4432632560:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1a9ba6854_i; _1a9ba6854_tok = *_range_begin; goto _iter_begin_4432632560; }
			_iter_end_4432632560:;
		}
	}
	return nullptr;
}



inline std::tuple<jule::Slice<_1b61ec5ec_Token>,jule::Slice<_1b61ec5ec_Token>> _1a9ba6854_split_colon(jule::Slice<_1b61ec5ec_Token>& _12421_tokens) {
	jule::Int _12513_range_n = 0LL;
	{
		auto _range_expr = _12421_tokens;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1a9ba6854_i = 0;
			_1b61ec5ec_Token _1a9ba6854_token = *_range_begin;
			_iter_begin_4432640656:;
			{
				{
					auto _match_expr{ _1a9ba6854_token._field_id };
					if (!((3LLU) == _match_expr)) { goto _case_end_4432643472; }
					_case_begin_4432643472:;
					{
						{
							auto _match_expr{ _1a9ba6854_token._field_kind };
							if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4432646080; }
							_case_begin_4432646080:;
							{
								(_12513_range_n)++;
								goto _iter_next_4432640656;
							}
							goto _match_end_4432644144;
							_case_end_4432646080:;
							_case_begin_4432645264:;
							{
								(_12513_range_n)--;
							}
							goto _match_end_4432644144;
							_case_end_4432645264:;
							_match_end_4432644144:;
						}
					}
					goto _match_end_4432642640;
					_case_end_4432643472:;
					if (!((11LLU) == _match_expr)) { goto _case_end_4432643584; }
					_case_begin_4432643584:;
					{
						if (_12513_range_n < 1LL) {
							jule::Slice<_1b61ec5ec_Token> _14225_l = _12421_tokens.slice(0LL,static_cast<jule::Int>(_1a9ba6854_i));
							jule::Slice<_1b61ec5ec_Token> _14325_r = _12421_tokens.slice(static_cast<jule::Int>(_1a9ba6854_i + 1LL));
							return std::make_tuple(_14225_l,_14325_r);
						}
					}
					goto _match_end_4432642640;
					_case_end_4432643584:;
					_match_end_4432642640:;
				}
			}
			_iter_next_4432640656:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1a9ba6854_i; _1a9ba6854_token = *_range_begin; goto _iter_begin_4432640656; }
			_iter_end_4432640656:;
		}
	}
	return std::make_tuple(nullptr,nullptr);
}



inline jule::Slice<_1b61ec5ec_Token> _1a9ba6854_eliminate_comments(jule::Slice<_1b61ec5ec_Token>& _18228_tokens) {
	jule::Slice<_1b61ec5ec_Token> _18313_cutted = nullptr;
	{
		auto _range_expr = _18228_tokens;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			_1b61ec5ec_Token _1a9ba6854_token = *_range_begin;
			_iter_begin_4432654832:;
			{
				if (_1a9ba6854_token._field_id != 18LLU) {
					_18313_cutted=jule::append(_18313_cutted,jule::Slice<_1b61ec5ec_Token>({_1a9ba6854_token}));
				}
			}
			_iter_next_4432654832:;
			++_range_begin;
			if (_range_begin != _range_end) { _1a9ba6854_token = *_range_begin; goto _iter_begin_4432654832; }
			_iter_end_4432654832:;
		}
	}
	return _18313_cutted;
}



inline jule::Int _1a9ba6854_find_lowest_prec_op(jule::Slice<_1b61ec5ec_Token>& _19425_tokens) {
	_1a9ba6854_Precedencer _19513_prec = _1a9ba6854_Precedencer();
	jule::Int _19613_brace_n = 0LL;
	{
		auto _range_expr = _19425_tokens;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1a9ba6854_i = 0;
			_1b61ec5ec_Token _1a9ba6854_token = *_range_begin;
			_iter_begin_4432662240:;
			{
				{
					if (!((_1a9ba6854_token._field_id == 3LLU))) { goto _case_end_4432664768; }
					_case_begin_4432664768:;
					{
						{
							auto _match_expr{ _1a9ba6854_token._field_kind };
							if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr)) { goto _case_end_4432668096; }
							_case_begin_4432668096:;
							{
								(_19613_brace_n)++;
							}
							goto _match_end_4432666128;
							_case_end_4432668096:;
							_case_begin_4432666384:;
							{
								(_19613_brace_n)--;
							}
							goto _match_end_4432666128;
							_case_end_4432666384:;
							_match_end_4432666128:;
						}
						goto _iter_next_4432662240;
					}
					goto _match_end_4432664496;
					_case_end_4432664768:;
					if (!((_1a9ba6854_i == 0LL))) { goto _case_end_4432664896; }
					_case_begin_4432664896:;
					{
						goto _iter_next_4432662240;
					}
					goto _match_end_4432664496;
					_case_end_4432664896:;
					if (!((_1a9ba6854_token._field_id != 7LLU))) { goto _case_end_4432665024; }
					_case_begin_4432665024:;
					{
						goto _iter_next_4432662240;
					}
					goto _match_end_4432664496;
					_case_end_4432665024:;
					if (!((_19613_brace_n > 0LL))) { goto _case_end_4432665152; }
					_case_begin_4432665152:;
					{
						goto _iter_next_4432662240;
					}
					goto _match_end_4432664496;
					_case_end_4432665152:;
					_match_end_4432664496:;
				}
				_1b61ec5ec_Token _22113_left = _19425_tokens[static_cast<jule::Int>(_1a9ba6854_i - 1LL)];
				if ((_22113_left._field_id == 7LLU) || (_22113_left._field_id == 11LLU)) {
					goto _iter_next_4432662240;
				}
				if (((_1a9ba6854_i > 1LL) && (_22113_left._field_id == 3LLU)) && (_22113_left._field_kind == jule::Str("]", 1))) {
					_1b61ec5ec_Token _22917_lleft = _19425_tokens[static_cast<jule::Int>(_1a9ba6854_i - 2LL)];
					if ((_22917_lleft._field_id == 3LLU) && (_22917_lleft._field_kind == jule::Str("[", 1))) {
						if ((_1a9ba6854_token._field_kind == jule::Str("&", 1)) || (_1a9ba6854_token._field_kind == jule::Str("*", 1))) {
							goto _iter_next_4432662240;
						}
					}
				}
				jule::Int _23813_p = _1a9ba6854_token._method_prec();
				if (_23813_p != -1LL) {
					_19513_prec._method_set(_23813_p,jule::Any(_1a9ba6854_i));
				}
			}
			_iter_next_4432662240:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1a9ba6854_i; _1a9ba6854_token = *_range_begin; goto _iter_begin_4432662240; }
			_iter_end_4432662240:;
		}
	}
	jule::Any _2449_data = _19513_prec._method_get_lower();
	if (_2449_data == nullptr) {
		return -1LL;
	}
	return _2449_data.operator jule::Int();
}



inline jule::Ref<_1b61ca014_IdentExpr> _1a9ba6854_build_ident_expr(_1b61ec5ec_Token& _25126_token) {
	return jule::new_struct<_1b61ca014_IdentExpr>(new( std::nothrow ) _1b61ca014_IdentExpr(_25126_token,_25126_token._field_kind,false));
}



inline std::tuple<jule::Slice<_1b61ec5ec_Token>,jule::Int> _1a9ba6854_get_range_expr_tokens(jule::Slice<_1b61ec5ec_Token>& _25931_tokens) {
	jule::Int _26013_range_n = 0LL;
	jule::I64 _26113_i = _25931_tokens.len() - 1LL;
	_iter_begin_4432691904:;
	if (!(_26113_i >= 0LL)) { goto _iter_end_4432691904; }
	{
		_1b61ec5ec_Token _26313_tok = _25931_tokens[static_cast<jule::Int>(_26113_i)];
		if (_26313_tok._field_id == 3LLU) {
			{
				auto _match_expr{ _26313_tok._field_kind };
				if (!((jule::Str("}", 1)) == _match_expr || (jule::Str("]", 1)) == _match_expr || (jule::Str(")", 1)) == _match_expr)) { goto _case_end_4432697952; }
				_case_begin_4432697952:;
				{
					(_26013_range_n)++;
				}
				goto _match_end_4432696368;
				_case_end_4432697952:;
				_case_begin_4432697152:;
				{
					(_26013_range_n)--;
				}
				goto _match_end_4432696368;
				_case_end_4432697152:;
				_match_end_4432696368:;
			}
		}
		if (_26013_range_n == 0LL) {
			return std::make_tuple(_25931_tokens.slice(0LL,static_cast<jule::Int>(_26113_i)),_26013_range_n);
		}
	}
	_iter_next_4432691904:;
	(_26113_i)--;
	goto _iter_begin_4432691904;
	_iter_end_4432691904:;
	return std::make_tuple(nullptr,_26013_range_n);
}



inline jule::Bool _1a9e07148_check_assign_tokens(jule::Slice<_1b61ec5ec_Token>& _1625_tokens) {
	if ((_1625_tokens.len() == 0LL) || (!(_1b61ec5ec_is_assign(_1625_tokens[0LL]._field_id)))) {
		return false;
	}
	jule::Int _2113_brace_n = 0LL;
	{
		auto _range_expr = _1625_tokens;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			_1b61ec5ec_Token _1a9e07148_t = *_range_begin;
			_iter_begin_4432705456:;
			{
				if (_1a9e07148_t._field_id == 3LLU) {
					{
						auto _match_expr{ _1a9e07148_t._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4432709248; }
						_case_begin_4432709248:;
						{
							(_2113_brace_n)++;
						}
						goto _match_end_4432707664;
						_case_end_4432709248:;
						_case_begin_4432708448:;
						{
							(_2113_brace_n)--;
						}
						goto _match_end_4432707664;
						_case_end_4432708448:;
						_match_end_4432707664:;
					}
				}
				if (_2113_brace_n < 0LL) {
					return false;
				} else if (_2113_brace_n > 0LL) {
					goto _iter_next_4432705456;
				} else if ((_1a9e07148_t._field_id == 7LLU) && _1b61ec5ec_is_assign_op(_1a9e07148_t._field_kind)) {
					return true;
				}
			}
			_iter_next_4432705456:;
			++_range_begin;
			if (_range_begin != _range_end) { _1a9e07148_t = *_range_begin; goto _iter_begin_4432705456; }
			_iter_end_4432705456:;
		}
	}
	return false;
}



inline _1cdeeb191_Log _1a9e07434_make_err(jule::Int _5113_row,jule::Int _5123_col,jule::Ref<_1b61ece27_File>& _5134_f,jule::Str _5144_fmt,jule::Slice<jule::Any> _5157_args) {
	return _1cdeeb191_Log(1LLU,_5113_row,_5123_col,_5134_f->_method_path(),_1cdeeb191_logf(_5144_fmt,_5157_args),jule::Str(),jule::Str());
}



inline jule::Slice<_1b61ec5ec_Token> _1a9e07434_range(jule::Int& _7015_i,jule::Str _7023_open,jule::Str _7040_close,jule::Slice<_1b61ec5ec_Token>& _7063_tokens) {
	if (_7015_i >= _7063_tokens.len()) {
		return nullptr;
	}
	_1b61ec5ec_Token _759_tok = _7063_tokens[static_cast<jule::Int>(_7015_i)];
	if ((_759_tok._field_id != 3LLU) || (_759_tok._field_kind != _7023_open)) {
		return nullptr;
	}
	(_7015_i)++;
	jule::Int _8113_range_n = 1LL;
	jule::Int _829_start = _7015_i;
	_iter_begin_4432726400:;
	if (!((_8113_range_n != 0LL) && (_7015_i < _7063_tokens.len()))) { goto _iter_end_4432726400; }
	{
		_1b61ec5ec_Token _8413_token = _7063_tokens[static_cast<jule::Int>(_7015_i)];
		if (_8413_token._field_id == 3LLU) {
			{
				auto _match_expr{ _8413_token._field_kind };
				if (!((_7023_open) == _match_expr)) { goto _case_end_4432731952; }
				_case_begin_4432731952:;
				{
					(_8113_range_n)++;
				}
				goto _match_end_4432731120;
				_case_end_4432731952:;
				if (!((_7040_close) == _match_expr)) { goto _case_end_4432732064; }
				_case_begin_4432732064:;
				{
					(_8113_range_n)--;
				}
				goto _match_end_4432731120;
				_case_end_4432732064:;
				_match_end_4432731120:;
			}
		}
	}
	_iter_next_4432726400:;
	(_7015_i)++;
	goto _iter_begin_4432726400;
	_iter_end_4432726400:;
	return _7063_tokens.slice(static_cast<jule::Int>(_829_start),static_cast<jule::Int>(_7015_i - 1LL));
}



inline std::tuple<jule::Slice<_1b61ec5ec_Token>,jule::Slice<_1b61ec5ec_Token>> _1a9e07434_range_last(jule::Slice<_1b61ec5ec_Token>& _10320_tokens) {
	jule::Slice<_1b61ec5ec_Token> _10339_cutted = jule::Slice<_1b61ec5ec_Token>();
	jule::Slice<_1b61ec5ec_Token> _10356_cut = jule::Slice<_1b61ec5ec_Token>();
	if (_10320_tokens.len() == 0LL) {
		_10339_cutted = _10320_tokens;
		_10356_cut = nullptr;
		return std::make_tuple(_10339_cutted,_10356_cut);
	} else if (_10320_tokens[static_cast<jule::Int>(_10320_tokens.len() - 1LL)]._field_id != 3LLU) {
		_10339_cutted = _10320_tokens;
		_10356_cut = nullptr;
		return std::make_tuple(_10339_cutted,_10356_cut);
	}
	jule::Int _11013_brace_n = 0LL;
	jule::I64 _11113_i = _10320_tokens.len() - 1LL;
	_iter_begin_4432734192:;
	if (!(_11113_i >= 0LL)) { goto _iter_end_4432734192; }
	{
		_1b61ec5ec_Token _11313_token = _10320_tokens[static_cast<jule::Int>(_11113_i)];
		if (_11313_token._field_id == 3LLU) {
			{
				auto _match_expr{ _11313_token._field_kind };
				if (!((jule::Str("}", 1)) == _match_expr || (jule::Str("]", 1)) == _match_expr || (jule::Str(")", 1)) == _match_expr)) { goto _case_end_4432748448; }
				_case_begin_4432748448:;
				{
					(_11013_brace_n)++;
					goto _iter_next_4432734192;
				}
				goto _match_end_4432746864;
				_case_end_4432748448:;
				_case_begin_4432747648:;
				{
					(_11013_brace_n)--;
				}
				goto _match_end_4432746864;
				_case_end_4432747648:;
				_match_end_4432746864:;
			}
		}
		if (_11013_brace_n == 0LL) {
			_10339_cutted = _10320_tokens.slice(0LL,static_cast<jule::Int>(_11113_i));
			_10356_cut = _10320_tokens.slice(static_cast<jule::Int>(_11113_i));
			return std::make_tuple(_10339_cutted,_10356_cut);
		}
	}
	_iter_next_4432734192:;
	(_11113_i)--;
	goto _iter_begin_4432734192;
	_iter_end_4432734192:;
	_10339_cutted = _10320_tokens;
	_10356_cut = nullptr;
	return std::make_tuple(_10339_cutted,_10356_cut);
}



inline std::tuple<jule::Slice<jule::Slice<_1b61ec5ec_Token>>,jule::Slice<_1cdeeb191_Log>> _1a9e07434_parts(jule::Slice<_1b61ec5ec_Token>& _14115_tokens,jule::Uint _14132_id,jule::Bool _14145_expr_must) {
	if (_14115_tokens.len() == 0LL) {
		return std::make_tuple(nullptr,nullptr);
	}
	jule::Slice<jule::Slice<_1b61ec5ec_Token>> _14613_parts = nullptr;
	jule::Slice<_1cdeeb191_Log> _14713_errors = nullptr;
	jule::Int _14913_range_n = 0LL;
	jule::Int _15013_last = 0LL;
	{
		auto _range_expr = _14115_tokens;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1a9e07434_i = 0;
			_1b61ec5ec_Token _1a9e07434_token = *_range_begin;
			_iter_begin_4432762192:;
			{
				if (_1a9e07434_token._field_id == 3LLU) {
					{
						auto _match_expr{ _1a9e07434_token._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4432766592; }
						_case_begin_4432766592:;
						{
							(_14913_range_n)++;
							goto _iter_next_4432762192;
						}
						goto _match_end_4432765008;
						_case_end_4432766592:;
						_case_begin_4432765792:;
						{
							(_14913_range_n)--;
						}
						goto _match_end_4432765008;
						_case_end_4432765792:;
						_match_end_4432765008:;
					}
				}
				if (_14913_range_n > 0LL) {
					goto _iter_next_4432762192;
				}
				if (_1a9e07434_token._field_id == _14132_id) {
					if (_14145_expr_must && ((_1a9e07434_i - _15013_last) <= 0LL)) {
						_1cdeeb191_Log _17021_err = _1a9e07434_make_err(_1a9e07434_token._field_row,_1a9e07434_token._field_column,_1a9e07434_token._field_file,jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
						_14713_errors=jule::append(_14713_errors,jule::Slice<_1cdeeb191_Log>({_17021_err}));
					}
					_14613_parts=jule::append(_14613_parts,jule::Slice<jule::Slice<_1b61ec5ec_Token>>({_14115_tokens.slice(static_cast<jule::Int>(_15013_last),static_cast<jule::Int>(_1a9e07434_i))}));
					_15013_last=static_cast<jule::Int>(_1a9e07434_i + 1LL);
				}
			}
			_iter_next_4432762192:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1a9e07434_i; _1a9e07434_token = *_range_begin; goto _iter_begin_4432762192; }
			_iter_end_4432762192:;
		}
	}
	if (_15013_last < _14115_tokens.len()) {
		_14613_parts=jule::append(_14613_parts,jule::Slice<jule::Slice<_1b61ec5ec_Token>>({_14115_tokens.slice(static_cast<jule::Int>(_15013_last))}));
	} else if ((!(_14145_expr_must))) {
		_14613_parts=jule::append(_14613_parts,jule::Slice<jule::Slice<_1b61ec5ec_Token>>({jule::Slice<_1b61ec5ec_Token>({})}));
	}
	return std::make_tuple(_14613_parts,_14713_errors);
}



inline jule::Str _1a9e07434_get_close_kind_of_brace(jule::Str _18728_left) {
	{
		auto _match_expr{ _18728_left };
		if (!((jule::Str(")", 1)) == _match_expr)) { goto _case_end_4432780320; }
		_case_begin_4432780320:;
		{
			return jule::Str("(", 1);
		}
		goto _match_end_4432776400;
		_case_end_4432780320:;
		if (!((jule::Str("}", 1)) == _match_expr)) { goto _case_end_4432780432; }
		_case_begin_4432780432:;
		{
			return jule::Str("{", 1);
		}
		goto _match_end_4432776400;
		_case_end_4432780432:;
		if (!((jule::Str("]", 1)) == _match_expr)) { goto _case_end_4432780544; }
		_case_begin_4432780544:;
		{
			return jule::Str("[", 1);
		}
		goto _match_end_4432776400;
		_case_end_4432780544:;
		_case_begin_4432776768:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4432776400;
		_case_end_4432776768:;
		_match_end_4432776400:;
	}
}



inline _1cdeeb191_Log _1a9e07434_compiler_err(_1b61ec5ec_Token& _19618_token,jule::Str& _19633_fmt,jule::Slice<jule::Any> _19646_args) {
	return _1cdeeb191_Log(1LLU,_19618_token._field_row,_19618_token._field_column,_19618_token._field_file->_method_path(),_1cdeeb191_logf(_19633_fmt,_19646_args),_19618_token._field_file->_method_get_row(_19618_token._field_row),jule::Str());
}



inline void _1a9e07434_push_suggestion(_1cdeeb191_Log* _20731_log,jule::Str _20742_fmt,jule::Slice<jule::Any> _20755_args) {
	_20731_log->_field_suggestion=_1cdeeb191_logf(_20742_fmt,_20755_args);
}



inline jule::Ref<_1b61ca014_Comment> _1a9e07434_build_comment(_1b61ec5ec_Token& _21123_token) {
	_21123_token._field_kind=_21123_token._field_kind.slice(2LL).trim(jule::Str(" \n\r\t\v", 5));
	return jule::new_struct<_1b61ca014_Comment>(new( std::nothrow ) _1b61ca014_Comment(_21123_token,_21123_token._field_kind));
}



inline jule::Str _1a9e07434_tokstoa(jule::Slice<_1b61ec5ec_Token>& _22013_tokens) {
	jule::Str _22113_s = jule::Str("", 0);
	{
		auto _range_expr = _22013_tokens;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			_1b61ec5ec_Token _1a9e07434_token = *_range_begin;
			_iter_begin_4432796480:;
			{
				_22113_s+=_1a9e07434_token._field_kind;
			}
			_iter_next_4432796480:;
			++_range_begin;
			if (_range_begin != _range_end) { _1a9e07434_token = *_range_begin; goto _iter_begin_4432796480; }
			_iter_end_4432796480:;
		}
	}
	return _22113_s;
}



inline jule::Ref<_1b61ca014_TypeDecl> _1b5d9c0c1_build_void_type(void) {
	return jule::new_struct<_1b61ca014_TypeDecl>(new( std::nothrow ) _1b61ca014_TypeDecl());
}



inline jule::Ref<_1b61ca014_TypeDecl> _1b5d9c0c1_build_prim_type(_1b61ec5ec_Token _2024_token) {
	return jule::new_struct<_1b61ca014_TypeDecl>(new( std::nothrow ) _1b61ca014_TypeDecl(_2024_token,jule::Any(jule::new_struct<_1b61ca014_IdentTypeDecl>(new( std::nothrow ) _1b61ca014_IdentTypeDecl(_2024_token,_2024_token._field_kind,false,nullptr)))));
}



inline std::tuple<jule::Slice<_1b61ec5ec_Token>,jule::Int> _1b5d9c0c1_split_map_range(jule::Slice<_1b61ec5ec_Token>& _3525_tokens,jule::Int& _3547_i) {
	jule::Slice<_1b61ec5ec_Token> _3557_range_tokens = jule::Slice<_1b61ec5ec_Token>();
	jule::Int _3580_colon = jule::Int();
	_3580_colon=-1LL;
	jule::Int _3713_range_n = 0LL;
	jule::Int _389_start = _3547_i;
	_iter_begin_4432805680:;
	if (!(_3547_i < _3525_tokens.len())) { goto _iter_end_4432805680; }
	{
		_1b61ec5ec_Token _4013_token = _3525_tokens[static_cast<jule::Int>(_3547_i)];
		if (_4013_token._field_id == 3LLU) {
			{
				auto _match_expr{ _4013_token._field_kind };
				if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4432810944; }
				_case_begin_4432810944:;
				{
					(_3713_range_n)++;
					goto _iter_next_4432805680;
				}
				goto _match_end_4432809360;
				_case_end_4432810944:;
				_case_begin_4432810144:;
				{
					(_3713_range_n)--;
				}
				goto _match_end_4432809360;
				_case_end_4432810144:;
				_match_end_4432809360:;
			}
		}
		if (_3713_range_n == 0LL) {
			if ((_389_start + 1LL) > _3547_i) {
				return std::make_tuple(_3557_range_tokens,_3580_colon);
			}
			_3557_range_tokens=_3525_tokens.slice(static_cast<jule::Int>(_389_start + 1LL),static_cast<jule::Int>(_3547_i));
			goto _iter_end_4432805680;
		} else if (_3713_range_n != 1LL) {
			goto _iter_next_4432805680;
		}
		if ((_3580_colon == -1LL) && (_4013_token._field_id == 11LLU)) {
			_3580_colon=static_cast<jule::Int>((_3547_i - _389_start) - 1LL);
		}
	}
	_iter_next_4432805680:;
	(_3547_i)++;
	goto _iter_begin_4432805680;
	_iter_end_4432805680:;
	return std::make_tuple(_3557_range_tokens,_3580_colon);
}



inline void _1ac90c3ed_lshift_unsig(_1ac90c3ed_Const& _53222_c,_1ac90c3ed_Const& _53233_x) {
	jule::U64 _5339_l = _53222_c._method_as_u64();
	jule::U64 _5349_r = _53233_x._method_as_u64();
	_53222_c._method_set_u64(static_cast<jule::U64>(_5339_l << _5349_r));
}



inline void _1ac90c3ed_rshift_unsig(_1ac90c3ed_Const& _53822_c,_1ac90c3ed_Const& _53833_x) {
	jule::U64 _5399_l = _53822_c._method_as_u64();
	jule::U64 _5409_r = _53833_x._method_as_u64();
	_53822_c._method_set_u64(static_cast<jule::U64>(_5399_l >> _5409_r));
}



inline jule::Bool _1ac90e3bc_check_bit(jule::Str _914_v,jule::Int _922_bit,jule::Fn<jule::Bool(jule::Str,jule::Int,jule::Int)> _932_checker) {
	{
		if (!((_914_v == jule::Str("", 0)))) { goto _case_end_4433988000; }
		_case_begin_4433988000:;
		{
			return false;
		}
		goto _match_end_4433985584;
		_case_end_4433988000:;
		if (!((_914_v.len() == 1LL))) { goto _case_end_4433986832; }
		_case_begin_4433986832:;
		{
			return true;
		}
		goto _match_end_4433985584;
		_case_end_4433986832:;
		if (!((_914_v.has_prefix(jule::Str("0x", 2))))) { goto _case_end_4433986944; }
		_case_begin_4433986944:;
		{
			return _932_checker(_914_v.slice(2LL),16LL,_922_bit);
		}
		goto _match_end_4433985584;
		_case_end_4433986944:;
		if (!((_914_v.has_prefix(jule::Str("0b", 2))))) { goto _case_end_4433987056; }
		_case_begin_4433987056:;
		{
			return _932_checker(_914_v.slice(2LL),2LL,_922_bit);
		}
		goto _match_end_4433985584;
		_case_end_4433987056:;
		if (!((_914_v.has_prefix(jule::Str("0o", 2))))) { goto _case_end_4433986080; }
		_case_begin_4433986080:;
		{
			return _932_checker(_914_v.slice(2LL),8LL,_922_bit);
		}
		goto _match_end_4433985584;
		_case_end_4433986080:;
		if (!((_914_v[0LL] == '0'))) { goto _case_end_4433986192; }
		_case_begin_4433986192:;
		{
			return _932_checker(_914_v.slice(1LL),8LL,_922_bit);
		}
		goto _match_end_4433985584;
		_case_end_4433986192:;
		_case_begin_4433985776:;
		{
			return _932_checker(_914_v,10LL,_922_bit);
		}
		goto _match_end_4433985584;
		_case_end_4433985776:;
		_match_end_4433985584:;
	}
}



inline jule::Str _1ac90e3bc_real_kind_of(jule::Str _2421_kind) {
	{
		auto _match_expr{ _2421_kind };
		if (!((jule::Str("int", 3)) == _match_expr)) { goto _case_end_4433999616; }
		_case_begin_4433999616:;
		{
			return jule::Str("i64", 3);
		}
		goto _match_end_4433985168;
		_case_end_4433999616:;
		if (!((jule::Str("uint", 4)) == _match_expr || (jule::Str("uintptr", 7)) == _match_expr)) { goto _case_end_4433999728; }
		_case_begin_4433999728:;
		{
			return jule::Str("u64", 3);
		}
		goto _match_end_4433985168;
		_case_end_4433999728:;
		_case_begin_4433998192:;
		{
			return _2421_kind;
		}
		goto _match_end_4433985168;
		_case_end_4433998192:;
		_match_end_4433985168:;
	}
}



inline jule::Int _1ac90e3bc_bitsize_of(jule::Str _4019_k) {
	{
		auto _match_expr{ _4019_k };
		if (!((jule::Str("i8", 2)) == _match_expr || (jule::Str("u8", 2)) == _match_expr)) { goto _case_end_4434003216; }
		_case_begin_4434003216:;
		{
			return 8LL;
		}
		goto _match_end_4434002016;
		_case_end_4434003216:;
		if (!((jule::Str("i16", 3)) == _match_expr || (jule::Str("u16", 3)) == _match_expr)) { goto _case_end_4434003328; }
		_case_begin_4434003328:;
		{
			return 16LL;
		}
		goto _match_end_4434002016;
		_case_end_4434003328:;
		if (!((jule::Str("i32", 3)) == _match_expr || (jule::Str("u32", 3)) == _match_expr || (jule::Str("f32", 3)) == _match_expr)) { goto _case_end_4434003504; }
		_case_begin_4434003504:;
		{
			return 32LL;
		}
		goto _match_end_4434002016;
		_case_end_4434003504:;
		if (!((jule::Str("i64", 3)) == _match_expr || (jule::Str("u64", 3)) == _match_expr || (jule::Str("f64", 3)) == _match_expr)) { goto _case_end_4434003616; }
		_case_begin_4434003616:;
		{
			return 64LL;
		}
		goto _match_end_4434002016;
		_case_end_4434003616:;
		if (!((jule::Str("uint", 4)) == _match_expr || (jule::Str("int", 3)) == _match_expr)) { goto _case_end_4434003728; }
		_case_begin_4434003728:;
		{
			return 64LL;
		}
		goto _match_end_4434002016;
		_case_end_4434003728:;
		_case_begin_4434001552:;
		{
			return -1LL;
		}
		goto _match_end_4434002016;
		_case_end_4434001552:;
		_match_end_4434002016:;
	}
}



inline jule::Str _1ac90e3bc_int_from_bits(jule::U64 _7222_bits) {
	{
		auto _match_expr{ _7222_bits };
		if (!((8LL) == _match_expr)) { goto _case_end_4434007872; }
		_case_begin_4434007872:;
		{
			return jule::Str("i8", 2);
		}
		goto _match_end_4434007040;
		_case_end_4434007872:;
		if (!((16LL) == _match_expr)) { goto _case_end_4434007984; }
		_case_begin_4434007984:;
		{
			return jule::Str("i16", 3);
		}
		goto _match_end_4434007040;
		_case_end_4434007984:;
		if (!((32LL) == _match_expr)) { goto _case_end_4434008096; }
		_case_begin_4434008096:;
		{
			return jule::Str("i32", 3);
		}
		goto _match_end_4434007040;
		_case_end_4434008096:;
		if (!((64LL) == _match_expr)) { goto _case_end_4434009104; }
		_case_begin_4434009104:;
		{
			return jule::Str("i64", 3);
		}
		goto _match_end_4434007040;
		_case_end_4434009104:;
		_case_begin_4434007360:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4434007040;
		_case_end_4434007360:;
		_match_end_4434007040:;
	}
}



inline jule::Str _1ac90e3bc_uint_from_bits(jule::U64 _8523_bits) {
	{
		auto _match_expr{ _8523_bits };
		if (!((8LL) == _match_expr)) { goto _case_end_4434012048; }
		_case_begin_4434012048:;
		{
			return jule::Str("u8", 2);
		}
		goto _match_end_4434010128;
		_case_end_4434012048:;
		if (!((16LL) == _match_expr)) { goto _case_end_4434012160; }
		_case_begin_4434012160:;
		{
			return jule::Str("u16", 3);
		}
		goto _match_end_4434010128;
		_case_end_4434012160:;
		if (!((32LL) == _match_expr)) { goto _case_end_4434013312; }
		_case_begin_4434013312:;
		{
			return jule::Str("u32", 3);
		}
		goto _match_end_4434010128;
		_case_end_4434013312:;
		if (!((64LL) == _match_expr)) { goto _case_end_4434013424; }
		_case_begin_4434013424:;
		{
			return jule::Str("u64", 3);
		}
		goto _match_end_4434010128;
		_case_end_4434013424:;
		_case_begin_4434010224:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4434010128;
		_case_end_4434010224:;
		_match_end_4434010128:;
	}
}



inline jule::Str _1ac90e3bc_float_from_bits(jule::U64 _9924_bits) {
	{
		auto _match_expr{ _9924_bits };
		if (!((32LL) == _match_expr)) { goto _case_end_4434016224; }
		_case_begin_4434016224:;
		{
			return jule::Str("f32", 3);
		}
		goto _match_end_4434014336;
		_case_end_4434016224:;
		if (!((64LL) == _match_expr)) { goto _case_end_4434016336; }
		_case_begin_4434016336:;
		{
			return jule::Str("f64", 3);
		}
		goto _match_end_4434014336;
		_case_end_4434016336:;
		_case_begin_4434014432:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4434014336;
		_case_end_4434014432:;
		_match_end_4434014336:;
	}
}



inline jule::Bool _1ac90e3bc_check_bit_int(jule::Str _10822_v,jule::Int _10830_bit) {
	return _1ac90e3bc_check_bit(_10822_v,_10830_bit,jule::Fn<jule::Bool(jule::Str,jule::Int,jule::Int)>([=](jule::Str _10930_v,jule::Int _10938_base,jule::Int _10949_bit) mutable -> jule::Bool {
		jule::Int _11017_err;
		std::tie(std::ignore,_11017_err) = _1cdd97339_parse_int(_10930_v,_10938_base,_10949_bit);
		return _11017_err == 0LLU;
	}));
}



inline jule::Bool _1ac90e3bc_check_bit_uint(jule::Str _11623_v,jule::Int _11631_bit) {
	return _1ac90e3bc_check_bit(_11623_v,_11631_bit,jule::Fn<jule::Bool(jule::Str,jule::Int,jule::Int)>([=](jule::Str _11730_v,jule::Int _11738_base,jule::Int _11749_bit) mutable -> jule::Bool {
		jule::Int _11817_err;
		std::tie(std::ignore,_11817_err) = _1cdd97339_parse_uint(_11730_v,_11738_base,_11749_bit);
		return _11817_err == 0LLU;
	}));
}



inline jule::Bool _1ac90e3bc_check_bit_float(jule::Str _12424_val,jule::Int _12434_bit) {
	jule::Int _12513_err;
	std::tie(std::ignore,_12513_err) = _1cddd8c93_parse_float(_12424_val,_12434_bit);
	return _12513_err == 0LLU;
}



inline jule::U64 _1ac90e3bc_bitsize_of_float(jule::F64 _13425_x) {
	{
		if (!(((-340282346638528860000000000000000000000.0 <= _13425_x) && (_13425_x <= 340282346638528860000000000000000000000.0)))) { goto _case_end_4434040720; }
		_case_begin_4434040720:;
		{
			return 32LL;
		}
		goto _match_end_4434038528;
		_case_end_4434040720:;
		_case_begin_4434038720:;
		{
			return 64LL;
		}
		goto _match_end_4434038528;
		_case_end_4434038720:;
		_match_end_4434038528:;
	}
}



inline jule::U64 _1ac90e3bc_bitsize_of_int(jule::I64 _14823_x) {
	{
		if (!(((-128LL <= _14823_x) && (_14823_x <= 127LL)))) { goto _case_end_4434043792; }
		_case_begin_4434043792:;
		{
			return 8LL;
		}
		goto _match_end_4434041424;
		_case_end_4434043792:;
		if (!(((-32768LL <= _14823_x) && (_14823_x <= 32767LL)))) { goto _case_end_4434043360; }
		_case_begin_4434043360:;
		{
			return 16LL;
		}
		goto _match_end_4434041424;
		_case_end_4434043360:;
		if (!(((-2147483648LL <= _14823_x) && (_14823_x <= 2147483647LL)))) { goto _case_end_4434043472; }
		_case_begin_4434043472:;
		{
			return 32LL;
		}
		goto _match_end_4434041424;
		_case_end_4434043472:;
		_case_begin_4434041568:;
		{
			return 64LL;
		}
		goto _match_end_4434041424;
		_case_end_4434041568:;
		_match_end_4434041424:;
	}
}



inline jule::U64 _1ac90e3bc_bitsize_of_uint(jule::U64 _16424_x) {
	{
		if (!((_16424_x <= 255LL))) { goto _case_end_4434049264; }
		_case_begin_4434049264:;
		{
			return 8LL;
		}
		goto _match_end_4434047280;
		_case_end_4434049264:;
		if (!((_16424_x <= 65535LL))) { goto _case_end_4434048832; }
		_case_begin_4434048832:;
		{
			return 16LL;
		}
		goto _match_end_4434047280;
		_case_end_4434048832:;
		if (!((_16424_x <= 4294967295LL))) { goto _case_end_4434048944; }
		_case_begin_4434048944:;
		{
			return 32LL;
		}
		goto _match_end_4434047280;
		_case_end_4434048944:;
		_case_begin_4434047376:;
		{
			return 64LL;
		}
		goto _match_end_4434047280;
		_case_end_4434047376:;
		_match_end_4434047280:;
	}
}



inline jule::F64 _1ac928bde_min(jule::Str _4316_k) {
	_4316_k=_1ac90e3bc_real_kind_of(_4316_k);
	{
		auto _match_expr{ _4316_k };
		if (!((jule::Str("i8", 2)) == _match_expr)) { goto _case_end_4434053904; }
		_case_begin_4434053904:;
		{
			return -128LL;
		}
		goto _match_end_4434048528;
		_case_end_4434053904:;
		if (!((jule::Str("i16", 3)) == _match_expr)) { goto _case_end_4434053424; }
		_case_begin_4434053424:;
		{
			return -32768LL;
		}
		goto _match_end_4434048528;
		_case_end_4434053424:;
		if (!((jule::Str("i32", 3)) == _match_expr)) { goto _case_end_4434053536; }
		_case_begin_4434053536:;
		{
			return -2147483648LL;
		}
		goto _match_end_4434048528;
		_case_end_4434053536:;
		if (!((jule::Str("i64", 3)) == _match_expr)) { goto _case_end_4434053024; }
		_case_begin_4434053024:;
		{
			return jule::MIN_I64;
		}
		goto _match_end_4434048528;
		_case_end_4434053024:;
		if (!((jule::Str("f32", 3)) == _match_expr)) { goto _case_end_4434053136; }
		_case_begin_4434053136:;
		{
			return -340282346638528860000000000000000000000.0;
		}
		goto _match_end_4434048528;
		_case_end_4434053136:;
		if (!((jule::Str("f64", 3)) == _match_expr)) { goto _case_end_4434053248; }
		_case_begin_4434053248:;
		{
			return jule::MIN_F64;
		}
		goto _match_end_4434048528;
		_case_end_4434053248:;
		_case_begin_4434051728:;
		{
			return 0LL;
		}
		goto _match_end_4434048528;
		_case_end_4434051728:;
		_match_end_4434048528:;
	}
}



inline jule::F64 _1ac928bde_max(jule::Str _5816_k) {
	_5816_k=_1ac90e3bc_real_kind_of(_5816_k);
	{
		auto _match_expr{ _5816_k };
		if (!((jule::Str("i8", 2)) == _match_expr)) { goto _case_end_4434059488; }
		_case_begin_4434059488:;
		{
			return 127LL;
		}
		goto _match_end_4434057792;
		_case_end_4434059488:;
		if (!((jule::Str("i16", 3)) == _match_expr)) { goto _case_end_4434059600; }
		_case_begin_4434059600:;
		{
			return 32767LL;
		}
		goto _match_end_4434057792;
		_case_end_4434059600:;
		if (!((jule::Str("i32", 3)) == _match_expr)) { goto _case_end_4434058688; }
		_case_begin_4434058688:;
		{
			return 2147483647LL;
		}
		goto _match_end_4434057792;
		_case_end_4434058688:;
		if (!((jule::Str("i64", 3)) == _match_expr)) { goto _case_end_4434058800; }
		_case_begin_4434058800:;
		{
			return jule::MAX_I64;
		}
		goto _match_end_4434057792;
		_case_end_4434058800:;
		if (!((jule::Str("u8", 2)) == _match_expr)) { goto _case_end_4434058912; }
		_case_begin_4434058912:;
		{
			return 255LL;
		}
		goto _match_end_4434057792;
		_case_end_4434058912:;
		if (!((jule::Str("u16", 3)) == _match_expr)) { goto _case_end_4434059024; }
		_case_begin_4434059024:;
		{
			return 65535LL;
		}
		goto _match_end_4434057792;
		_case_end_4434059024:;
		if (!((jule::Str("u32", 3)) == _match_expr)) { goto _case_end_4434059136; }
		_case_begin_4434059136:;
		{
			return 4294967295LL;
		}
		goto _match_end_4434057792;
		_case_end_4434059136:;
		if (!((jule::Str("u64", 3)) == _match_expr)) { goto _case_end_4434059248; }
		_case_begin_4434059248:;
		{
			return jule::MAX_U64;
		}
		goto _match_end_4434057792;
		_case_end_4434059248:;
		if (!((jule::Str("f32", 3)) == _match_expr)) { goto _case_end_4434059360; }
		_case_begin_4434059360:;
		{
			return 340282346638528860000000000000000000000.0;
		}
		goto _match_end_4434057792;
		_case_end_4434059360:;
		if (!((jule::Str("f64", 3)) == _match_expr)) { goto _case_end_4434060128; }
		_case_begin_4434060128:;
		{
			return jule::MAX_F64;
		}
		goto _match_end_4434057792;
		_case_end_4434060128:;
		_case_begin_4434058160:;
		{
			return 0LL;
		}
		goto _match_end_4434057792;
		_case_end_4434058160:;
		_match_end_4434057792:;
	}
}



inline jule::Bool _1ac9d0e1c_is_i8_compatible(jule::Str _629_k) {
	_629_k=_1ac90e3bc_real_kind_of(_629_k);
	return _629_k == jule::Str("i8", 2);
}



inline jule::Bool _1ac9d0e1c_is_i16_compatible(jule::Str _1230_k) {
	_1230_k=_1ac90e3bc_real_kind_of(_1230_k);
	return ((_1230_k == jule::Str("i8", 2)) || (_1230_k == jule::Str("i16", 3))) || (_1230_k == jule::Str("u8", 2));
}



inline jule::Bool _1ac9d0e1c_is_i32_compatible(jule::Str _2030_k) {
	_2030_k=_1ac90e3bc_real_kind_of(_2030_k);
	return ((((_2030_k == jule::Str("i8", 2)) || (_2030_k == jule::Str("i16", 3))) || (_2030_k == jule::Str("i32", 3))) || (_2030_k == jule::Str("u8", 2))) || (_2030_k == jule::Str("u16", 3));
}



inline jule::Bool _1ac9d0e1c_is_i64_compatible(jule::Str _3030_k) {
	_3030_k=_1ac90e3bc_real_kind_of(_3030_k);
	return ((((((_3030_k == jule::Str("i8", 2)) || (_3030_k == jule::Str("i16", 3))) || (_3030_k == jule::Str("i32", 3))) || (_3030_k == jule::Str("i64", 3))) || (_3030_k == jule::Str("u8", 2))) || (_3030_k == jule::Str("u16", 3))) || (_3030_k == jule::Str("u32", 3));
}



inline jule::Bool _1ac9d0e1c_is_u8_compatible(jule::Str _4229_k) {
	_4229_k=_1ac90e3bc_real_kind_of(_4229_k);
	return _4229_k == jule::Str("u8", 2);
}



inline jule::Bool _1ac9d0e1c_is_u16_compatible(jule::Str _4830_k) {
	_4830_k=_1ac90e3bc_real_kind_of(_4830_k);
	return (_4830_k == jule::Str("u8", 2)) || (_4830_k == jule::Str("u16", 3));
}



inline jule::Bool _1ac9d0e1c_is_u32_compatible(jule::Str _5430_k) {
	_5430_k=_1ac90e3bc_real_kind_of(_5430_k);
	return ((_5430_k == jule::Str("u8", 2)) || (_5430_k == jule::Str("u16", 3))) || (_5430_k == jule::Str("u32", 3));
}



inline jule::Bool _1ac9d0e1c_is_u64_compatible(jule::Str _6230_k) {
	_6230_k=_1ac90e3bc_real_kind_of(_6230_k);
	return (((_6230_k == jule::Str("u8", 2)) || (_6230_k == jule::Str("u16", 3))) || (_6230_k == jule::Str("u32", 3))) || (_6230_k == jule::Str("u64", 3));
}



inline jule::Bool _1ac9d0e1c_is_f32_compatible(jule::Str _7130_k) {
	_7130_k=_1ac90e3bc_real_kind_of(_7130_k);
	return _7130_k == jule::Str("f32", 3);
}



inline jule::Bool _1ac9d0e1c_is_f64_compatible(jule::Str _7730_k) {
	_7730_k=_1ac90e3bc_real_kind_of(_7730_k);
	return (_7730_k == jule::Str("f64", 3)) || (_7730_k == jule::Str("f32", 3));
}



inline jule::Bool _1ac9d0e1c_types_are_compatible(jule::Str _8633_k1,jule::Str _8642_k2) {
	_8633_k1=_1ac90e3bc_real_kind_of(_8633_k1);
	{
		auto _match_expr{ _8633_k1 };
		if (!((jule::Str("any", 3)) == _match_expr)) { goto _case_end_4434089392; }
		_case_begin_4434089392:;
		{
			return true;
		}
		goto _match_end_4434088448;
		_case_end_4434089392:;
		if (!((jule::Str("i8", 2)) == _match_expr)) { goto _case_end_4434090336; }
		_case_begin_4434090336:;
		{
			return _1ac9d0e1c_is_i8_compatible(_8642_k2);
		}
		goto _match_end_4434088448;
		_case_end_4434090336:;
		if (!((jule::Str("i16", 3)) == _match_expr)) { goto _case_end_4434090448; }
		_case_begin_4434090448:;
		{
			return _1ac9d0e1c_is_i16_compatible(_8642_k2);
		}
		goto _match_end_4434088448;
		_case_end_4434090448:;
		if (!((jule::Str("i32", 3)) == _match_expr)) { goto _case_end_4434090560; }
		_case_begin_4434090560:;
		{
			return _1ac9d0e1c_is_i32_compatible(_8642_k2);
		}
		goto _match_end_4434088448;
		_case_end_4434090560:;
		if (!((jule::Str("i64", 3)) == _match_expr)) { goto _case_end_4434090672; }
		_case_begin_4434090672:;
		{
			return _1ac9d0e1c_is_i64_compatible(_8642_k2);
		}
		goto _match_end_4434088448;
		_case_end_4434090672:;
		if (!((jule::Str("u8", 2)) == _match_expr)) { goto _case_end_4434089696; }
		_case_begin_4434089696:;
		{
			return _1ac9d0e1c_is_u8_compatible(_8642_k2);
		}
		goto _match_end_4434088448;
		_case_end_4434089696:;
		if (!((jule::Str("u16", 3)) == _match_expr)) { goto _case_end_4434089808; }
		_case_begin_4434089808:;
		{
			return _1ac9d0e1c_is_u16_compatible(_8642_k2);
		}
		goto _match_end_4434088448;
		_case_end_4434089808:;
		if (!((jule::Str("u32", 3)) == _match_expr)) { goto _case_end_4434089920; }
		_case_begin_4434089920:;
		{
			return _1ac9d0e1c_is_u32_compatible(_8642_k2);
		}
		goto _match_end_4434088448;
		_case_end_4434089920:;
		if (!((jule::Str("u64", 3)) == _match_expr)) { goto _case_end_4434090032; }
		_case_begin_4434090032:;
		{
			return _1ac9d0e1c_is_u64_compatible(_8642_k2);
		}
		goto _match_end_4434088448;
		_case_end_4434090032:;
		if (!((jule::Str("f32", 3)) == _match_expr)) { goto _case_end_4434090144; }
		_case_begin_4434090144:;
		{
			return _1ac9d0e1c_is_f32_compatible(_8642_k2);
		}
		goto _match_end_4434088448;
		_case_end_4434090144:;
		if (!((jule::Str("f64", 3)) == _match_expr)) { goto _case_end_4434090816; }
		_case_begin_4434090816:;
		{
			return _1ac9d0e1c_is_f64_compatible(_8642_k2);
		}
		goto _match_end_4434088448;
		_case_end_4434090816:;
		if (!((jule::Str("bool", 4)) == _match_expr)) { goto _case_end_4434090944; }
		_case_begin_4434090944:;
		{
			return _8642_k2 == jule::Str("bool", 4);
		}
		goto _match_end_4434088448;
		_case_end_4434090944:;
		if (!((jule::Str("str", 3)) == _match_expr)) { goto _case_end_4434091072; }
		_case_begin_4434091072:;
		{
			return _8642_k2 == jule::Str("str", 3);
		}
		goto _match_end_4434088448;
		_case_end_4434091072:;
		_case_begin_4434088768:;
		{
			return false;
		}
		goto _match_end_4434088448;
		_case_end_4434088768:;
		_match_end_4434088448:;
	}
}



inline jule::Bool _1ac9d0e1c_is_i16_greater(jule::Str _10727_k) {
	_10727_k=_1ac90e3bc_real_kind_of(_10727_k);
	return _10727_k == jule::Str("u8", 2);
}



inline jule::Bool _1ac9d0e1c_is_i32_greater(jule::Str _11327_k) {
	_11327_k=_1ac90e3bc_real_kind_of(_11327_k);
	return (_11327_k == jule::Str("i8", 2)) || (_11327_k == jule::Str("i16", 3));
}



inline jule::Bool _1ac9d0e1c_is_i64_greater(jule::Str _11927_k) {
	_11927_k=_1ac90e3bc_real_kind_of(_11927_k);
	return ((_11927_k == jule::Str("i8", 2)) || (_11927_k == jule::Str("i16", 3))) || (_11927_k == jule::Str("i32", 3));
}



inline jule::Bool _1ac9d0e1c_is_u8_greater(jule::Str _12726_k) {
	_12726_k=_1ac90e3bc_real_kind_of(_12726_k);
	return _12726_k == jule::Str("i8", 2);
}



inline jule::Bool _1ac9d0e1c_is_u16_greater(jule::Str _13327_k) {
	_13327_k=_1ac90e3bc_real_kind_of(_13327_k);
	return ((_13327_k == jule::Str("u8", 2)) || (_13327_k == jule::Str("i8", 2))) || (_13327_k == jule::Str("i16", 3));
}



inline jule::Bool _1ac9d0e1c_is_u32_greater(jule::Str _14127_k) {
	_14127_k=_1ac90e3bc_real_kind_of(_14127_k);
	return ((((_14127_k == jule::Str("u8", 2)) || (_14127_k == jule::Str("u16", 3))) || (_14127_k == jule::Str("i8", 2))) || (_14127_k == jule::Str("i16", 3))) || (_14127_k == jule::Str("i32", 3));
}



inline jule::Bool _1ac9d0e1c_is_u64_greater(jule::Str _15127_k) {
	_15127_k=_1ac90e3bc_real_kind_of(_15127_k);
	return ((((((_15127_k == jule::Str("u8", 2)) || (_15127_k == jule::Str("u16", 3))) || (_15127_k == jule::Str("u32", 3))) || (_15127_k == jule::Str("i8", 2))) || (_15127_k == jule::Str("i16", 3))) || (_15127_k == jule::Str("i32", 3))) || (_15127_k == jule::Str("i64", 3));
}



inline jule::Bool _1ac9d0e1c_is_f32_greater(jule::Str _16323_k) {
	return _16323_k != jule::Str("f64", 3);
}



inline jule::Bool _1ac9d0e1c_is_f64_greater(jule::Str _16523_k) {
	return true;
}



inline jule::Bool _1ac9d0e1c_is_greater(jule::Str _16823_k1,jule::Str _16832_k2) {
	_16823_k1=_1ac90e3bc_real_kind_of(_16823_k1);
	{
		auto _match_expr{ _16823_k1 };
		if (!((jule::Str("i16", 3)) == _match_expr)) { goto _case_end_4434120080; }
		_case_begin_4434120080:;
		{
			return _1ac9d0e1c_is_i16_greater(_16832_k2);
		}
		goto _match_end_4434114000;
		_case_end_4434120080:;
		if (!((jule::Str("i32", 3)) == _match_expr)) { goto _case_end_4434120192; }
		_case_begin_4434120192:;
		{
			return _1ac9d0e1c_is_i32_greater(_16832_k2);
		}
		goto _match_end_4434114000;
		_case_end_4434120192:;
		if (!((jule::Str("i64", 3)) == _match_expr)) { goto _case_end_4434121024; }
		_case_begin_4434121024:;
		{
			return _1ac9d0e1c_is_i64_greater(_16832_k2);
		}
		goto _match_end_4434114000;
		_case_end_4434121024:;
		if (!((jule::Str("u16", 3)) == _match_expr)) { goto _case_end_4434121136; }
		_case_begin_4434121136:;
		{
			return _1ac9d0e1c_is_u16_greater(_16832_k2);
		}
		goto _match_end_4434114000;
		_case_end_4434121136:;
		if (!((jule::Str("u8", 2)) == _match_expr)) { goto _case_end_4434121248; }
		_case_begin_4434121248:;
		{
			return _1ac9d0e1c_is_u8_greater(_16832_k2);
		}
		goto _match_end_4434114000;
		_case_end_4434121248:;
		if (!((jule::Str("u32", 3)) == _match_expr)) { goto _case_end_4434121376; }
		_case_begin_4434121376:;
		{
			return _1ac9d0e1c_is_u32_greater(_16832_k2);
		}
		goto _match_end_4434114000;
		_case_end_4434121376:;
		if (!((jule::Str("u64", 3)) == _match_expr)) { goto _case_end_4434120384; }
		_case_begin_4434120384:;
		{
			return _1ac9d0e1c_is_u64_greater(_16832_k2);
		}
		goto _match_end_4434114000;
		_case_end_4434120384:;
		if (!((jule::Str("f32", 3)) == _match_expr)) { goto _case_end_4434120512; }
		_case_begin_4434120512:;
		{
			return _1ac9d0e1c_is_f32_greater(_16832_k2);
		}
		goto _match_end_4434114000;
		_case_end_4434120512:;
		if (!((jule::Str("f64", 3)) == _match_expr)) { goto _case_end_4434120640; }
		_case_begin_4434120640:;
		{
			return _1ac9d0e1c_is_f64_greater(_16832_k2);
		}
		goto _match_end_4434114000;
		_case_end_4434120640:;
		if (!((jule::Str("any", 3)) == _match_expr)) { goto _case_end_4434120768; }
		_case_begin_4434120768:;
		{
			return true;
		}
		goto _match_end_4434114000;
		_case_end_4434120768:;
		_case_begin_4434119456:;
		{
			return false;
		}
		goto _match_end_4434114000;
		_case_end_4434119456:;
		_match_end_4434114000:;
	}
}



inline jule::Bool _1ac92d7e8_is_sig_int(jule::Str _2723_k) {
	_2723_k=_1ac90e3bc_real_kind_of(_2723_k);
	return (((_2723_k == jule::Str("i8", 2)) || (_2723_k == jule::Str("i16", 3))) || (_2723_k == jule::Str("i32", 3))) || (_2723_k == jule::Str("i64", 3));
}



inline jule::Bool _1ac92d7e8_is_unsig_int(jule::Str _3825_k) {
	_3825_k=_1ac90e3bc_real_kind_of(_3825_k);
	return (((_3825_k == jule::Str("u8", 2)) || (_3825_k == jule::Str("u16", 3))) || (_3825_k == jule::Str("u32", 3))) || (_3825_k == jule::Str("u64", 3));
}



inline jule::Bool _1ac92d7e8_is_int(jule::Str _4915_k) {
	return _1ac92d7e8_is_sig_int(_4915_k) || _1ac92d7e8_is_unsig_int(_4915_k);
}



inline jule::Bool _1ac92d7e8_is_float(jule::Str _5417_k) {
	return (_5417_k == jule::Str("f32", 3)) || (_5417_k == jule::Str("f64", 3));
}



inline jule::Bool _1ac92d7e8_is_num(jule::Str _5915_k) {
	return _1ac92d7e8_is_int(_5915_k) || _1ac92d7e8_is_float(_5915_k);
}



inline jule::Bool _1ac92d7e8_is_sig_num(jule::Str _6419_k) {
	return _1ac92d7e8_is_sig_int(_6419_k) || _1ac92d7e8_is_float(_6419_k);
}



inline std::tuple<jule::Str,jule::Bool> _1acb355b0_is_byte_lit(jule::Str _1524_kind) {
	if (_1524_kind.len() < 3LL) {
		return std::make_tuple(jule::Str("", 0),false);
	}
	_1524_kind=_1524_kind.slice(1LL,static_cast<jule::Int>(_1524_kind.len() - 1LL));
	jule::Bool _2113_is_byte = false;
	{
		if (!(((_1524_kind.len() == 1LL) && (_1524_kind[0LL] <= 255LL)))) { goto _case_end_4436464000; }
		_case_begin_4436464000:;
		{
			_2113_is_byte=true;
		}
		goto _match_end_4436463808;
		_case_end_4436464000:;
		if (!(((_1524_kind[0LL] == '\\') && (_1524_kind[1LL] == 'x')))) { goto _case_end_4436464128; }
		_case_begin_4436464128:;
		{
			_2113_is_byte=true;
		}
		goto _match_end_4436463808;
		_case_end_4436464128:;
		if (!((((_1524_kind[0LL] == '\\') && (_1524_kind[1LL] >= '0')) && (_1524_kind[1LL] <= '7')))) { goto _case_end_4436464256; }
		_case_begin_4436464256:;
		{
			_2113_is_byte=true;
		}
		goto _match_end_4436463808;
		_case_end_4436464256:;
		_match_end_4436463808:;
	}
	return std::make_tuple(_1524_kind,_2113_is_byte);
}



inline jule::I32 _1acb355b0_to_rune(jule::Slice<jule::U8> _4016_bytes) {
	if (_4016_bytes.len() == 0LL) {
		return 0LL;
	}
	jule::I32 _4513_r = 0LL;
	if ((_4016_bytes[0LL] == '\\') && (_4016_bytes.len() > 1LL)) {
		jule::Int _4717_i = 0LL;
		_4513_r=static_cast<jule::I32>(_1acb355b0_rune_from_esq_seq(_4016_bytes,_4717_i));
	} else {
		std::tie(_4513_r,std::ignore) = _1a99595b3_decode_rune(_4016_bytes);
	}
	return _4513_r;
}



inline jule::Str _1acb355b0_to_raw_str(jule::Slice<jule::U8> _5919_bytes) {
	return static_cast<jule::Str>(_5919_bytes);
}



inline jule::Str _1acb355b0_to_str(jule::Slice<jule::U8> _6415_bytes) {
	if (_6415_bytes.len() == 0LL) {
		return jule::Str("", 0);
	}
	jule::Str _6913_s = jule::Str("", 0);
	jule::Int _7013_i = 0LL;
	_iter_begin_4436483360:;
	if (!(_7013_i < _6415_bytes.len())) { goto _iter_end_4436483360; }
	{
		jule::U8 _7213_b = _6415_bytes[static_cast<jule::Int>(_7013_i)];
		if (_7213_b == '\\') {
			_6913_s+=_1acb355b0_str_esq_seq(_6415_bytes,_7013_i);
		} else {
			jule::I32 _7618_r;
			jule::Int _7621_size;
			std::tie(_7618_r,_7621_size) = _1a99595b3_decode_rune(_6415_bytes.slice(static_cast<jule::Int>(_7013_i)));
			_7013_i+=_7621_size;
			_6913_s+=static_cast<jule::Str>(_7618_r);
		}
	}
	_iter_next_4436483360:;
	goto _iter_begin_4436483360;
	_iter_end_4436483360:;
	return _6913_s;
}



inline std::tuple<jule::U8,jule::Bool> _1acb355b0_try_btoa_common_esq(jule::Slice<jule::U8> _8424_bytes) {
	jule::U8 _8441_seq = jule::U8();
	jule::Bool _8452_ok = jule::Bool();
	if ((_8424_bytes.len() < 2LL) || (_8424_bytes[0LL] != '\\')) {
		return std::make_tuple(_8441_seq,_8452_ok);
	}
	{
		auto _match_expr{ _8424_bytes[1LL] };
		if (!(('\\') == _match_expr)) { goto _case_end_4436498576; }
		_case_begin_4436498576:;
		{
			_8441_seq='\\';
		}
		goto _match_end_4436496176;
		_case_end_4436498576:;
		if (!(('\'') == _match_expr)) { goto _case_end_4436498688; }
		_case_begin_4436498688:;
		{
			_8441_seq='\'';
		}
		goto _match_end_4436496176;
		_case_end_4436498688:;
		if (!(('\"') == _match_expr)) { goto _case_end_4436498800; }
		_case_begin_4436498800:;
		{
			_8441_seq='\"';
		}
		goto _match_end_4436496176;
		_case_end_4436498800:;
		if (!(('a') == _match_expr)) { goto _case_end_4436498928; }
		_case_begin_4436498928:;
		{
			_8441_seq='\a';
		}
		goto _match_end_4436496176;
		_case_end_4436498928:;
		if (!(('b') == _match_expr)) { goto _case_end_4436499056; }
		_case_begin_4436499056:;
		{
			_8441_seq='\b';
		}
		goto _match_end_4436496176;
		_case_end_4436499056:;
		if (!(('f') == _match_expr)) { goto _case_end_4436499184; }
		_case_begin_4436499184:;
		{
			_8441_seq='\f';
		}
		goto _match_end_4436496176;
		_case_end_4436499184:;
		if (!(('n') == _match_expr)) { goto _case_end_4436499312; }
		_case_begin_4436499312:;
		{
			_8441_seq='\n';
		}
		goto _match_end_4436496176;
		_case_end_4436499312:;
		if (!(('r') == _match_expr)) { goto _case_end_4436499440; }
		_case_begin_4436499440:;
		{
			_8441_seq='\r';
		}
		goto _match_end_4436496176;
		_case_end_4436499440:;
		if (!(('t') == _match_expr)) { goto _case_end_4436499568; }
		_case_begin_4436499568:;
		{
			_8441_seq='\t';
		}
		goto _match_end_4436496176;
		_case_end_4436499568:;
		if (!(('v') == _match_expr)) { goto _case_end_4436499696; }
		_case_begin_4436499696:;
		{
			_8441_seq='\v';
		}
		goto _match_end_4436496176;
		_case_end_4436499696:;
		_match_end_4436496176:;
	}
	_8452_ok=_8441_seq != 0LL;
	return std::make_tuple(_8441_seq,_8452_ok);
}



inline jule::I32 _1acb355b0_rune_from_esq_seq(jule::Slice<jule::U8> _10622_bytes,jule::Int& _10642_i) {
	jule::U8 _10710_b;
	jule::Bool _10713_ok;
	std::tie(_10710_b,_10713_ok) = _1acb355b0_try_btoa_common_esq(_10622_bytes.slice(static_cast<jule::Int>(_10642_i)));
	(_10642_i)++;
	if (_10713_ok) {
		(_10642_i)++;
		return static_cast<jule::I32>(_10710_b);
	}
	{
		auto _match_expr{ _10622_bytes[static_cast<jule::Int>(_10642_i)] };
		if (!(('u') == _match_expr)) { goto _case_end_4436517248; }
		_case_begin_4436517248:;
		{
			
			jule::U64 _11714_rc;
			std::tie(_11714_rc,std::ignore) = _1cdd97339_parse_uint(static_cast<jule::Str>(_10622_bytes.slice(static_cast<jule::Int>(_10642_i + 1LL),static_cast<jule::Int>(_10642_i + 5LL))),16LL,64LL);
			_10642_i+=5LL;
			jule::I32 _11913_r = static_cast<jule::I32>(_11714_rc);
			return _11913_r;
		}
		goto _match_end_4436510688;
		_case_end_4436517248:;
		if (!(('U') == _match_expr)) { goto _case_end_4436517824; }
		_case_begin_4436517824:;
		{
			
			jule::U64 _12414_rc;
			std::tie(_12414_rc,std::ignore) = _1cdd97339_parse_uint(static_cast<jule::Str>(_10622_bytes.slice(static_cast<jule::Int>(_10642_i + 1LL),static_cast<jule::Int>(_10642_i + 9LL))),16LL,64LL);
			_10642_i+=9LL;
			jule::I32 _12613_r = static_cast<jule::I32>(_12414_rc);
			return _12613_r;
		}
		goto _match_end_4436510688;
		_case_end_4436517824:;
		if (!(('x') == _match_expr)) { goto _case_end_4436517936; }
		_case_begin_4436517936:;
		{
			
			jule::Slice<jule::U8> _13113_seq = _10622_bytes.slice(static_cast<jule::Int>(_10642_i + 1LL),static_cast<jule::Int>(_10642_i + 3LL));
			_10642_i+=3LL;
			jule::U64 _13314_b;
			std::tie(_13314_b,std::ignore) = _1cdd97339_parse_uint(static_cast<jule::Str>(_13113_seq),16LL,64LL);
			return static_cast<jule::I32>(_13314_b);
		}
		goto _match_end_4436510688;
		_case_end_4436517936:;
		_case_begin_4436509584:;
		{
			
			jule::Slice<jule::U8> _13813_seq = _10622_bytes.slice(static_cast<jule::Int>(_10642_i),static_cast<jule::Int>(_10642_i + 3LL));
			_10642_i+=3LL;
			jule::U64 _14014_b;
			std::tie(_14014_b,std::ignore) = _1cdd97339_parse_uint(static_cast<jule::Str>(_13813_seq.slice(1LL)),8LL,64LL);
			return static_cast<jule::I32>(_14014_b);
		}
		goto _match_end_4436510688;
		_case_end_4436509584:;
		_match_end_4436510688:;
	}
}



inline jule::Str _1acb355b0_str_esq_seq(jule::Slice<jule::U8> _14516_bytes,jule::Int& _14536_i) {
	jule::I32 _1469_r = _1acb355b0_rune_from_esq_seq(_14516_bytes,_14536_i);
	if (_1469_r <= 255LL) {
		return static_cast<jule::Str>(_1469_r);
	}
	return _1acb355b0_to_str(static_cast<jule::Slice<jule::U8>>(static_cast<jule::Str>(_1469_r)));
}



inline jule::Bool _1b557cd24_kind_uses_generics(jule::Ref<_1ac6d02c0_TypeKind> _37523_k,jule::Slice<jule::Ref<_1b61ca014_GenericDecl>>& _37538_generics) {
	jule::Str _3769_pk = _37523_k->_method_to_str();
	{
		auto _range_expr = _37538_generics;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b61ca014_GenericDecl> _1b557cd24_g = *_range_begin;
			_iter_begin_4434373568:;
			{
				if (_3769_pk.find(_1b557cd24_g->_field_ident) != -1LL) {
					return true;
				}
			}
			_iter_next_4434373568:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b557cd24_g = *_range_begin; goto _iter_begin_4434373568; }
			_iter_end_4434373568:;
		}
	}
	return false;
}



inline jule::Bool _1b557cd24_parameter_uses_generics(jule::Ref<_1b557cd24_Param>& _38529_p,jule::Slice<jule::Ref<_1b61ca014_GenericDecl>>& _38541_generics) {
	if (_38529_p->_method_is_self()) {
		return false;
	}
	return _1b557cd24_kind_uses_generics(_38529_p->_field_kind->_field_kind,_38541_generics);
}



inline jule::Str _1b5589c76_str_repeat(jule::Str _8715_sub,jule::Int _8729_n) {
	if (_8729_n == 0LL) {
		return jule::Str("", 0);
	}
	jule::Str _9213_s = jule::Str("", 0);
	_iter_begin_4434384448:;
	if (!(_8729_n > 0LL)) { goto _iter_end_4434384448; }
	{
		_9213_s+=_8715_sub;
	}
	_iter_next_4434384448:;
	(_8729_n)--;
	goto _iter_begin_4434384448;
	_iter_end_4434384448:;
	return _9213_s;
}



inline jule::Str _1b5589c76_build_doc(jule::Ref<_1b61ca014_CommentGroup> _9918_cg) {
	if ((!(jule::real(_9918_cg)))) {
		return jule::Str("", 0);
	}
	jule::Str _10413_doc = jule::Str("", 0);
	{
		auto _range_expr = _9918_cg->_field_comments;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b61ca014_Comment> _1b5589c76_c = *_range_begin;
			_iter_begin_4434387616:;
			{
				_10413_doc+=_1b5589c76_c->_field_text;
				_10413_doc+=jule::Str(" ", 1);
			}
			_iter_next_4434387616:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b5589c76_c = *_range_begin; goto _iter_begin_4434387616; }
			_iter_end_4434387616:;
		}
	}
	return _10413_doc;
}



inline jule::Ref<_1ac6d02c0_TypeSymbol> _1b5589c76_build_type(jule::Ref<_1b61ca014_TypeDecl> _11219_t) {
	if ((!(jule::real(_11219_t)))) {
		return jule::new_ref<_1ac6d02c0_TypeSymbol>();
	}
	return jule::new_struct<_1ac6d02c0_TypeSymbol>(new( std::nothrow ) _1ac6d02c0_TypeSymbol(_11219_t,jule::Ref<_1ac6d02c0_TypeKind>()));
}



inline jule::Ref<_1ab00dbcc_Value> _1b5589c76_build_expr(jule::Ref<_1b61ca014_Expr> _12119_expr) {
	if ((!(jule::real(_12119_expr)))) {
		return jule::new_ref<_1ab00dbcc_Value>();
	}
	return jule::new_struct<_1ab00dbcc_Value>(new( std::nothrow ) _1ab00dbcc_Value(_12119_expr,jule::Ref<_1ab00dbcc_Data>()));
}



inline jule::Ref<_1ac6d02c0_TypeAlias> _1b5589c76_build_type_alias(jule::Ref<_1b61ca014_TypeAliasDecl> _13125_decl) {
	return jule::new_struct<_1ac6d02c0_TypeAlias>(new( std::nothrow ) _1ac6d02c0_TypeAlias(_13125_decl->_field_scope,_13125_decl->_field_public,_13125_decl->_field_cpp_linked,jule::Bool(),_13125_decl->_field_token,_13125_decl->_field_ident,_1b5589c76_build_type(_13125_decl->_field_kind),_1b5589c76_build_doc(_13125_decl->_field_doc_comments),jule::Slice<jule::Any>()));
}



inline jule::Ref<_1b5e07a00_Field> _1b5589c76_build_field(jule::Ref<_1b61ca014_FieldDecl> _14320_decl) {
	return jule::new_struct<_1b5e07a00_Field>(new( std::nothrow ) _1b5e07a00_Field(jule::Ref<_1b5e07a00_Struct>(),_14320_decl->_field_token,_14320_decl->_field_public,_14320_decl->_field_mutable,_14320_decl->_field_ident,_1b5589c76_build_type(_14320_decl->_field_kind)));
}



inline jule::Slice<jule::Ref<_1b5e07a00_Field>> _1b5589c76_build_fields(jule::Slice<jule::Ref<_1b61ca014_FieldDecl>>& _15322_decls) {
	jule::Slice<jule::Ref<_1b5e07a00_Field>> _15413_fields = jule::Slice<jule::Ref<_1b5e07a00_Field>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_15322_decls.len())));
	{
		auto _range_expr = _15322_decls;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1b5589c76_i = 0;
			jule::Ref<_1b61ca014_FieldDecl> _1b5589c76_decl = *_range_begin;
			_iter_begin_4434404512:;
			{
				_15413_fields[static_cast<jule::Int>(_1b5589c76_i)]=_1b5589c76_build_field(_1b5589c76_decl);
			}
			_iter_next_4434404512:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1b5589c76_i; _1b5589c76_decl = *_range_begin; goto _iter_begin_4434404512; }
			_iter_end_4434404512:;
		}
	}
	return _15413_fields;
}



inline jule::Ref<_1b5e07a00_Struct> _1b5589c76_build_struct(jule::Ref<_1b61ca014_StructDecl> _16121_decl) {
	return jule::new_struct<_1b5e07a00_Struct>(new( std::nothrow ) _1b5e07a00_Struct(jule::Ref<_1ab195050_Sema>(),jule::Slice<jule::Ref<_1b5e07a00_Struct>>(),jule::Slice<jule::Ref<_1b5e07a00_Struct>>(),_16121_decl->_field_token,_16121_decl->_field_ident,_1b5589c76_build_fields(_16121_decl->_field_fields),jule::Slice<jule::Ref<_1b557cd24_Fn>>(),_16121_decl->_field_public,_16121_decl->_field_cpp_linked,_16121_decl->_field_directives,_1b5589c76_build_doc(_16121_decl->_field_doc_comments),_16121_decl->_field_generics,jule::Slice<jule::Ref<_1aaee9091_Trait>>(),jule::Slice<jule::Ref<_1b5e07a00_StructIns>>()));
}



inline jule::Ref<_1b557cd24_Param> _1b5589c76_build_param(jule::Ref<_1b61ca014_ParamDecl> _17420_decl) {
	return jule::new_struct<_1b557cd24_Param>(new( std::nothrow ) _1b557cd24_Param(_17420_decl->_field_token,_17420_decl->_field_mutable,_17420_decl->_field_variadic,_17420_decl->_field_reference,_1b5589c76_build_type(_17420_decl->_field_kind),_17420_decl->_field_ident));
}



inline jule::Slice<jule::Ref<_1b557cd24_Param>> _1b5589c76_build_params(jule::Slice<jule::Ref<_1b61ca014_ParamDecl>>& _18522_decls) {
	jule::Slice<jule::Ref<_1b557cd24_Param>> _18613_params = jule::Slice<jule::Ref<_1b557cd24_Param>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_18522_decls.len())));
	{
		auto _range_expr = _18522_decls;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1b5589c76_i = 0;
			jule::Ref<_1b61ca014_ParamDecl> _1b5589c76_decl = *_range_begin;
			_iter_begin_4434418624:;
			{
				_18613_params[static_cast<jule::Int>(_1b5589c76_i)]=_1b5589c76_build_param(_1b5589c76_decl);
			}
			_iter_next_4434418624:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1b5589c76_i; _1b5589c76_decl = *_range_begin; goto _iter_begin_4434418624; }
			_iter_end_4434418624:;
		}
	}
	return _18613_params;
}



inline jule::Ref<_1b557cd24_RetType> _1b5589c76_build_ret_type(jule::Ref<_1b61ca014_RetTypeDecl> _19323_decl) {
	if ((_19323_decl->_field_idents == nullptr) && (!(jule::real(_19323_decl->_field_kind)))) {
		return jule::new_ref<_1b557cd24_RetType>();
	}
	return jule::new_struct<_1b557cd24_RetType>(new( std::nothrow ) _1b557cd24_RetType(_1b5589c76_build_type(_19323_decl->_field_kind),_19323_decl->_field_idents));
}



inline jule::Ref<_1b557cd24_Fn> _1b5589c76_build_fn(jule::Ref<_1b61ca014_FnDecl> _20317_decl) {
	return jule::new_struct<_1b557cd24_Fn>(new( std::nothrow ) _1b557cd24_Fn(jule::Ref<_1ab195050_Sema>(),_20317_decl->_field_token,_20317_decl->_field_global,_20317_decl->_field_unsafety,_20317_decl->_field_public,_20317_decl->_field_cpp_linked,_20317_decl->_field_statically,_20317_decl->_field_ident,_20317_decl->_field_directives,_1b5589c76_build_doc(_20317_decl->_field_doc_comments),_20317_decl->_field_scope,_20317_decl->_field_generics,_1b5589c76_build_ret_type(_20317_decl->_field_result),_1b5589c76_build_params(_20317_decl->_field_params),jule::Ref<_1b5e07a00_Struct>(),jule::Slice<jule::Ref<_1b557cd24_FnIns>>()));
}



inline jule::Slice<jule::Ref<_1b557cd24_Fn>> _1b5589c76_build_methods(jule::Slice<jule::Ref<_1b61ca014_FnDecl>>& _22123_decls) {
	jule::Slice<jule::Ref<_1b557cd24_Fn>> _22213_methods = jule::Slice<jule::Ref<_1b557cd24_Fn>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_22123_decls.len())));
	{
		auto _range_expr = _22123_decls;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1b5589c76_i = 0;
			jule::Ref<_1b61ca014_FnDecl> _1b5589c76_decl = *_range_begin;
			_iter_begin_4437597088:;
			{
				_22213_methods[static_cast<jule::Int>(_1b5589c76_i)]=_1b5589c76_build_fn(_1b5589c76_decl);
			}
			_iter_next_4437597088:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1b5589c76_i; _1b5589c76_decl = *_range_begin; goto _iter_begin_4437597088; }
			_iter_end_4437597088:;
		}
	}
	return _22213_methods;
}



inline jule::Ref<_1aaee9091_Trait> _1b5589c76_build_trait(jule::Ref<_1b61ca014_TraitDecl> _22920_decl) {
	return jule::new_struct<_1aaee9091_Trait>(new( std::nothrow ) _1aaee9091_Trait(_22920_decl->_field_token,_22920_decl->_field_ident,_22920_decl->_field_public,jule::Bool(),_1b5589c76_build_doc(_22920_decl->_field_doc_comments),_1b5589c76_build_methods(_22920_decl->_field_methods),jule::Slice<jule::Ref<_1b5e07a00_Struct>>()));
}



inline jule::Ref<_1a909ac6b_EnumItem> _1b5589c76_build_enum_item(jule::Ref<_1b61ca014_EnumItemDecl> _23924_decl) {
	return jule::new_struct<_1a909ac6b_EnumItem>(new( std::nothrow ) _1a909ac6b_EnumItem(_23924_decl->_field_token,_23924_decl->_field_ident,_1b5589c76_build_expr(_23924_decl->_field_expr)));
}



inline jule::Slice<jule::Ref<_1a909ac6b_EnumItem>> _1b5589c76_build_enum_items(jule::Slice<jule::Ref<_1b61ca014_EnumItemDecl>>& _24726_decls) {
	jule::Slice<jule::Ref<_1a909ac6b_EnumItem>> _24813_items = jule::Slice<jule::Ref<_1a909ac6b_EnumItem>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_24726_decls.len())));
	{
		auto _range_expr = _24726_decls;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1b5589c76_i = 0;
			jule::Ref<_1b61ca014_EnumItemDecl> _1b5589c76_decl = *_range_begin;
			_iter_begin_4437609280:;
			{
				_24813_items[static_cast<jule::Int>(_1b5589c76_i)]=_1b5589c76_build_enum_item(_1b5589c76_decl);
			}
			_iter_next_4437609280:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1b5589c76_i; _1b5589c76_decl = *_range_begin; goto _iter_begin_4437609280; }
			_iter_end_4437609280:;
		}
	}
	return _24813_items;
}



inline jule::Ref<_1a909ac6b_Enum> _1b5589c76_build_enum(jule::Ref<_1b61ca014_EnumDecl> _25519_decl) {
	return jule::new_struct<_1a909ac6b_Enum>(new( std::nothrow ) _1a909ac6b_Enum(_25519_decl->_field_token,_25519_decl->_field_public,_25519_decl->_field_ident,_1b5589c76_build_type(_25519_decl->_field_kind),_1b5589c76_build_enum_items(_25519_decl->_field_items),_1b5589c76_build_doc(_25519_decl->_field_doc_comments)));
}



inline jule::Ref<_1b623eab2_Var> _1b5589c76_build_var(jule::Ref<_1b61ca014_VarDecl> _26618_decl) {
	return jule::new_struct<_1b623eab2_Var>(new( std::nothrow ) _1b623eab2_Var(jule::Ref<_1ab009de8_Scope>(),_26618_decl->_field_token,_26618_decl->_field_ident,_26618_decl->_field_cpp_linked,_26618_decl->_field_constant,_26618_decl->_field_mutable,_26618_decl->_field_public,jule::Bool(),_26618_decl->_field_statically,_26618_decl->_field_reference,_1b5589c76_build_doc(_26618_decl->_field_doc_comments),_1b5589c76_build_type(_26618_decl->_field_kind),_1b5589c76_build_expr(_26618_decl->_field_expr),_1b5589c76_ReferenceStack::_static_method_new(),_26618_decl->_field_directives,jule::Slice<jule::Ref<_1b623eab2_Var>>()));
}



inline jule::Ref<_1ab0017b3_Impl> _1b5589c76_build_impl(jule::Ref<_1b61ca014_Impl> _28419_decl) {
	return jule::new_struct<_1ab0017b3_Impl>(new( std::nothrow ) _1ab0017b3_Impl(_28419_decl->_field_base,_28419_decl->_field_dest,_1b5589c76_build_methods(_28419_decl->_field_methods)));
}



inline jule::Ref<_1ab009de8_ScopeChecker> _1ab009de8_new_scope_checker_base(jule::Ref<_1ab195050_Sema> _3831_s,jule::Ref<_1b557cd24_FnIns> _3845_owner) {
	return jule::new_struct<_1ab009de8_ScopeChecker>(new( std::nothrow ) _1ab009de8_ScopeChecker(_3831_s,_3845_owner,jule::Ref<_1ab009de8_ScopeChecker>(),jule::Int(),jule::new_struct<_1ab00cc20_SymbolTable>(new( std::nothrow ) _1ab00cc20_SymbolTable()),jule::Ref<_1ab009de8_Scope>(),jule::Ref<_1b61ca014_ScopeTree>(),jule::Uintptr(),jule::Uintptr(),jule::Ref<jule::Slice<jule::Ref<_1ab009de8_ScopeLabel>>>(),jule::Ref<jule::Slice<jule::Ref<_1ab009de8_ScopeGoto>>>(),jule::Int()));
}



inline jule::Ref<_1ab009de8_ScopeChecker> _1ab009de8_new_scope_checker(jule::Ref<_1ab195050_Sema> _4626_s,jule::Ref<_1b557cd24_FnIns> _4640_owner) {
	jule::Ref<_1ab009de8_ScopeChecker> _4713_base = _1ab009de8_new_scope_checker_base(_4626_s,_4640_owner);
	_4713_base->_field_labels=jule::new_ref<jule::Slice<jule::Ref<_1ab009de8_ScopeLabel>>>(nullptr);
	_4713_base->_field_gotos=jule::new_ref<jule::Slice<jule::Ref<_1ab009de8_ScopeGoto>>>(nullptr);
	return _4713_base;
}



inline jule::Ref<_1ab009de8_ScopeLabel> _1ab009de8_find_label_parent(jule::Str _5622_ident,jule::Ref<_1ab009de8_ScopeChecker> _5638_scope) {
	jule::Ref<_1ab009de8_ScopeLabel> _5713_label = _5638_scope->_method_find_label_scope(_5622_ident);
	_iter_begin_4437634544:;
	if (!((!(jule::real(_5713_label))))) { goto _iter_end_4437634544; }
	{
		if ((!(jule::real(_5638_scope->_field_parent))) || jule::real(_5638_scope->_field_owner)) {
			return jule::new_ref<_1ab009de8_ScopeLabel>();
		}
		_5638_scope=_5638_scope->_field_parent;
		_5713_label=_5638_scope->_method_find_label_scope(_5622_ident);
	}
	_iter_next_4437634544:;
	goto _iter_begin_4437634544;
	_iter_end_4437634544:;
	return _5713_label;
}



inline jule::Int _1ab009de8_count_match_type(jule::Ref<_1ab009de8_Match> _7021_m,jule::Ref<_1ac6d02c0_TypeKind> _7032_t) {
	jule::Int _7113_n = 0LL;
	jule::Str _729_kind = _7032_t->_method_to_str();
	_julec_label_loop:;
	{
		auto _range_expr = _7021_m->_field_cases;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab009de8_Case> _1ab009de8_c = *_range_begin;
			_iter_begin_4437644256:;
			{
				if ((!(jule::real(_1ab009de8_c)))) {
					goto _iter_next_4437644256;
				}
				{
					auto _range_expr = _1ab009de8_c->_field_exprs;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Any _1ab009de8_expr = *_range_begin;
						_iter_begin_4437646848:;
						{
							if (_1ab009de8_expr == nullptr) {
								goto _iter_end_4437644256;
							}
							if (_729_kind == _1ab009de8_expr.operator jule::Ref<_1ac6d02c0_TypeKind>()->_method_to_str()) {
								(_7113_n)++;
							}
						}
						_iter_next_4437646848:;
						++_range_begin;
						if (_range_begin != _range_end) { _1ab009de8_expr = *_range_begin; goto _iter_begin_4437646848; }
						_iter_end_4437646848:;
					}
				}
			}
			_iter_next_4437644256:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab009de8_c = *_range_begin; goto _iter_begin_4437644256; }
			_iter_end_4437644256:;
		}
	}
	return _7113_n;
}



inline jule::Slice<jule::Ref<_1ab00dbcc_Data>> _1ab009de8_get_datas_from_tuple_data(jule::Ref<_1ab00dbcc_Data> _9434_d) {
	if (jule::real(_9434_d->_field_kind->_method_tup())) {
		{
			auto _match_expr{ _9434_d->_field_model };
			if (!(_match_expr.type_is<jule::Ref<_1ab33d083_TupleExprModel>>())) { goto _case_end_4437654272; }
			_case_begin_4437654272:;
			{
				return _9434_d->_field_model.operator jule::Ref<_1ab33d083_TupleExprModel>()->_field_datas;
			}
			goto _match_end_4437652256;
			_case_end_4437654272:;
			_case_begin_4437652944:;
			{
				jule::Ref<_1ac6d02c0_Tuple> _10121_t = _9434_d->_field_kind->_method_tup();
				jule::Slice<jule::Ref<_1ab00dbcc_Data>> _10221_r = jule::Slice<jule::Ref<_1ab00dbcc_Data>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_10121_t->_field_types.len())));
				{
					auto _range_expr = _10121_t->_field_types;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Int _1ab009de8_i = 0;
						jule::Ref<_1ac6d02c0_TypeKind> _1ab009de8_kind = *_range_begin;
						_iter_begin_4437659168:;
						{
							_10221_r[static_cast<jule::Int>(_1ab009de8_i)]=jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(_1ab009de8_kind,jule::Ref<_1ac6d02c0_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1ac90c3ed_Const>()));
						}
						_iter_next_4437659168:;
						++_range_begin;
						if (_range_begin != _range_end) { ++_1ab009de8_i; _1ab009de8_kind = *_range_begin; goto _iter_begin_4437659168; }
						_iter_end_4437659168:;
					}
				}
				return _10221_r;
			}
			goto _match_end_4437652256;
			_case_end_4437652944:;
			_match_end_4437652256:;
		}
	} else {
		return jule::Slice<jule::Ref<_1ab00dbcc_Data>>({_9434_d});
	}
}



inline jule::Slice<jule::Any> _1ab009de8_get_expr_models(jule::Any _11624_m) {
	{
		auto _match_expr{ _11624_m };
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_TupleExpr>>())) { goto _case_end_4437651856; }
		_case_begin_4437651856:;
		{
			jule::Ref<_1b61ca014_TupleExpr> _11917_tup = _11624_m.operator jule::Ref<_1b61ca014_TupleExpr>();
			jule::Slice<jule::Any> _12017_models = jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::Int>(static_cast<jule::I64>(_11917_tup->_field_expr.len())));
			{
				auto _range_expr = _11917_tup->_field_expr;
				if (_range_expr.begin() != _range_expr.end()) {
					auto _range_begin = _range_expr.begin();
					const auto _range_end = _range_expr.end();
					jule::Ref<_1b61ca014_Expr> _1ab009de8_expr = *_range_begin;
					_iter_begin_4437670976:;
					{
						_12017_models=jule::append(_12017_models,jule::Slice<jule::Any>({_1ab009de8_expr->_field_kind}));
					}
					_iter_next_4437670976:;
					++_range_begin;
					if (_range_begin != _range_end) { _1ab009de8_expr = *_range_begin; goto _iter_begin_4437670976; }
					_iter_end_4437670976:;
				}
			}
			return _12017_models;
		}
		goto _match_end_4437664016;
		_case_end_4437651856:;
		_case_begin_4437666368:;
		{
			return jule::Slice<jule::Any>({_11624_m});
		}
		goto _match_end_4437664016;
		_case_end_4437666368:;
		_match_end_4437664016:;
	}
}



inline jule::Bool _1ab009de8_check_mut(jule::Ref<_1ab195050_Sema> _13118_s,jule::Ref<_1ab00dbcc_Data> _13128_left,jule::Ref<_1ab00dbcc_Data> _13145_right,_1b61ec5ec_Token _13159_error_token) {
	jule::Bool _13181_ok = jule::Bool();
	{
		if (!(((!(_13128_left->_field_mutable))))) { goto _case_end_4437678912; }
		_case_begin_4437678912:;
		{
			_13118_s->_method_push_err(_13159_error_token,jule::Str("cannot assign to immutable define", 33),jule::Slice<jule::Any>({}));
			_13181_ok = false;
			return _13181_ok;
		}
		goto _match_end_4437677248;
		_case_end_4437678912:;
		if (!(((jule::real(_13145_right) && (!(_13145_right->_field_mutable))) && _13145_right->_field_kind->_method_mutable()))) { goto _case_end_4437678432; }
		_case_begin_4437678432:;
		{
			_13118_s->_method_push_err(_13159_error_token,jule::Str("cannot assign mutable type used immutable define to mutable define", 66),jule::Slice<jule::Any>({}));
			_13181_ok = false;
			return _13181_ok;
		}
		goto _match_end_4437677248;
		_case_end_4437678432:;
		_case_begin_4437677376:;
		{
			_13181_ok = true;
			return _13181_ok;
		}
		goto _match_end_4437677248;
		_case_end_4437677376:;
		_match_end_4437677248:;
	}
}



inline jule::Bool _1ab009de8_check_assign(jule::Ref<_1ab195050_Sema> _14621_s,jule::Ref<_1ab00dbcc_Data> _14635_left,jule::Ref<_1ab00dbcc_Data> _14652_right,_1b61ec5ec_Token _14666_error_token) {
	jule::Bool _14688_ok = jule::Bool();
	jule::Ref<_1b557cd24_FnIns> _1479_f = _14635_left->_field_kind->_method_fnc();
	if ((jule::real(_1479_f) && jule::real(_1479_f->_field_decl)) && _1479_f->_field_decl->_field_global) {
		_14621_s->_method_push_err(_14666_error_token,jule::Str("type is not support assignment", 30),jule::Slice<jule::Any>({}));
		_14688_ok = false;
		return _14688_ok;
	}
	{
		if (!((_14635_left->_method_is_const()))) { goto _case_end_4437695920; }
		_case_begin_4437695920:;
		{
			_14621_s->_method_push_err(_14666_error_token,jule::Str("constants is can't assign", 25),jule::Slice<jule::Any>({}));
			_14621_s->_method_push_suggestion(jule::Str("remove constant qualifer if you need to assign", 46),jule::Slice<jule::Any>({}));
			_14688_ok = false;
			return _14688_ok;
		}
		goto _match_end_4437693536;
		_case_end_4437695920:;
		if (!(((!(_14635_left->_field_lvalue))))) { goto _case_end_4437695424; }
		_case_begin_4437695424:;
		{
			_14621_s->_method_push_err(_14666_error_token,jule::Str("assignment required lvalue", 26),jule::Slice<jule::Any>({}));
			_14688_ok = false;
			return _14688_ok;
		}
		goto _match_end_4437693536;
		_case_end_4437695424:;
		if (!(((!(_1ab009de8_check_mut(_14621_s,_14635_left,_14652_right,_14666_error_token)))))) { goto _case_end_4437695536; }
		_case_begin_4437695536:;
		{
			_14688_ok = false;
			return _14688_ok;
		}
		goto _match_end_4437693536;
		_case_end_4437695536:;
		_case_begin_4437694432:;
		{
			_14688_ok = true;
			return _14688_ok;
		}
		goto _match_end_4437693536;
		_case_end_4437694432:;
		_match_end_4437693536:;
	}
}



inline jule::Bool _1ab009de8_is_valid_ast_st_for_next_st(jule::Any _17136_n) {
	{
		auto _match_expr{ _17136_n };
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_AssignSt>>())) { goto _case_end_4437705984; }
		_case_begin_4437705984:;
		{
			return (!(_17136_n.operator jule::Ref<_1b61ca014_AssignSt>()->_field_declarative));
		}
		goto _match_end_4437688608;
		_case_end_4437705984:;
		if (!(_match_expr.type_is<jule::Ref<_1b61ca014_FnCallExpr>>() || _match_expr.type_is<jule::Ref<_1b61ca014_Expr>>())) { goto _case_end_4437706096; }
		_case_begin_4437706096:;
		{
			return true;
		}
		goto _match_end_4437688608;
		_case_end_4437706096:;
		_case_begin_4437704224:;
		{
			return false;
		}
		goto _match_end_4437688608;
		_case_end_4437704224:;
		_match_end_4437688608:;
	}
}



inline jule::Bool _1ab009de8_is_valid_st_for_next_st(jule::Any _18528_st) {
	{
		auto _match_expr{ _18528_st };
		if (!(_match_expr.type_is<jule::Ref<_1ab33d083_FnCallExprModel>>() || _match_expr.type_is<jule::Ref<_1ab009de8_Postfix>>() || _match_expr.type_is<jule::Ref<_1ab009de8_Assign>>() || _match_expr.type_is<jule::Ref<_1ab009de8_MultiAssign>>())) { goto _case_end_4437709184; }
		_case_begin_4437709184:;
		{
			return true;
		}
		goto _match_end_4437708112;
		_case_end_4437709184:;
		if (!(_match_expr.type_is<jule::Ref<_1ab00dbcc_Data>>())) { goto _case_end_4437709296; }
		_case_begin_4437709296:;
		{
			{
				auto _match_expr{ _18528_st.operator jule::Ref<_1ab00dbcc_Data>()->_field_model };
				if (!(_match_expr.type_is<jule::Ref<_1ab33d083_FnCallExprModel>>())) { goto _case_end_4437717168; }
				_case_begin_4437717168:;
				{
					return true;
				}
				goto _match_end_4437710256;
				_case_end_4437717168:;
				_case_begin_4437716864:;
				{
					return false;
				}
				goto _match_end_4437710256;
				_case_end_4437716864:;
				_match_end_4437710256:;
			}
		}
		goto _match_end_4437708112;
		_case_end_4437709296:;
		_case_begin_4437708656:;
		{
			return false;
		}
		goto _match_end_4437708112;
		_case_end_4437708656:;
		_match_end_4437708112:;
	}
}



inline jule::Bool _1ab009de8_st_is_def(jule::Any _20414_st) {
	{
		auto _match_expr{ _20414_st };
		if (!(_match_expr.type_is<jule::Ref<_1b623eab2_Var>>())) { goto _case_end_4437715392; }
		_case_begin_4437715392:;
		{
			return true;
		}
		goto _match_end_4437718736;
		_case_end_4437715392:;
		_case_begin_4437717920:;
		{
			return false;
		}
		goto _match_end_4437718736;
		_case_end_4437717920:;
		_match_end_4437718736:;
	}
}



inline jule::Ref<_1b623eab2_Var> _1ab194c20_find_var_in_package(jule::Slice<jule::Ref<_1ab00cc20_SymbolTable>>& _2729_files,jule::Str _2752_ident,jule::Bool _2764_cpp_linked) {
	{
		auto _range_expr = _2729_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab00cc20_SymbolTable> _1ab194c20_f = *_range_begin;
			_iter_begin_4437722336:;
			{
				jule::Ref<_1b623eab2_Var> _2917_v = _1ab194c20_f->_method_find_var(_2752_ident,_2764_cpp_linked);
				if (jule::real(_2917_v)) {
					return _2917_v;
				}
			}
			_iter_next_4437722336:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab194c20_f = *_range_begin; goto _iter_begin_4437722336; }
			_iter_end_4437722336:;
		}
	}
	return jule::new_ref<_1b623eab2_Var>();
}



inline jule::Ref<_1ac6d02c0_TypeAlias> _1ab194c20_find_type_alias_in_package(jule::Slice<jule::Ref<_1ab00cc20_SymbolTable>>& _3936_files,jule::Str _3959_ident,jule::Bool _3971_cpp_linked) {
	{
		auto _range_expr = _3936_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab00cc20_SymbolTable> _1ab194c20_f = *_range_begin;
			_iter_begin_4437729248:;
			{
				jule::Ref<_1ac6d02c0_TypeAlias> _4117_ta = _1ab194c20_f->_method_find_type_alias(_3959_ident,_3971_cpp_linked);
				if (jule::real(_4117_ta)) {
					return _4117_ta;
				}
			}
			_iter_next_4437729248:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab194c20_f = *_range_begin; goto _iter_begin_4437729248; }
			_iter_end_4437729248:;
		}
	}
	return jule::new_ref<_1ac6d02c0_TypeAlias>();
}



inline jule::Ref<_1b5e07a00_Struct> _1ab194c20_find_struct_in_package(jule::Slice<jule::Ref<_1ab00cc20_SymbolTable>>& _5132_files,jule::Str _5155_ident,jule::Bool _5167_cpp_linked) {
	{
		auto _range_expr = _5132_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab00cc20_SymbolTable> _1ab194c20_f = *_range_begin;
			_iter_begin_4437736128:;
			{
				jule::Ref<_1b5e07a00_Struct> _5317_s = _1ab194c20_f->_method_find_struct(_5155_ident,_5167_cpp_linked);
				if (jule::real(_5317_s)) {
					return _5317_s;
				}
			}
			_iter_next_4437736128:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab194c20_f = *_range_begin; goto _iter_begin_4437736128; }
			_iter_end_4437736128:;
		}
	}
	return jule::new_ref<_1b5e07a00_Struct>();
}



inline jule::Ref<_1b557cd24_Fn> _1ab194c20_find_fn_in_package(jule::Slice<jule::Ref<_1ab00cc20_SymbolTable>>& _6328_files,jule::Str _6351_ident,jule::Bool _6363_cpp_linked) {
	{
		auto _range_expr = _6328_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab00cc20_SymbolTable> _1ab194c20_file = *_range_begin;
			_iter_begin_4437743008:;
			{
				jule::Ref<_1b557cd24_Fn> _6517_f = _1ab194c20_file->_method_find_fn(_6351_ident,_6363_cpp_linked);
				if (jule::real(_6517_f)) {
					return _6517_f;
				}
			}
			_iter_next_4437743008:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab194c20_file = *_range_begin; goto _iter_begin_4437743008; }
			_iter_end_4437743008:;
		}
	}
	return jule::new_ref<_1b557cd24_Fn>();
}



inline jule::Ref<_1aaee9091_Trait> _1ab194c20_find_trait_in_package(jule::Slice<jule::Ref<_1ab00cc20_SymbolTable>>& _7531_files,jule::Str _7554_ident) {
	{
		auto _range_expr = _7531_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab00cc20_SymbolTable> _1ab194c20_f = *_range_begin;
			_iter_begin_4437748128:;
			{
				jule::Ref<_1aaee9091_Trait> _7717_t = _1ab194c20_f->_method_find_trait(_7554_ident);
				if (jule::real(_7717_t)) {
					return _7717_t;
				}
			}
			_iter_next_4437748128:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab194c20_f = *_range_begin; goto _iter_begin_4437748128; }
			_iter_end_4437748128:;
		}
	}
	return jule::new_ref<_1aaee9091_Trait>();
}



inline jule::Ref<_1a909ac6b_Enum> _1ab194c20_find_enum_in_package(jule::Slice<jule::Ref<_1ab00cc20_SymbolTable>>& _8730_files,jule::Str _8753_ident) {
	{
		auto _range_expr = _8730_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab00cc20_SymbolTable> _1ab194c20_f = *_range_begin;
			_iter_begin_4437755552:;
			{
				jule::Ref<_1a909ac6b_Enum> _8917_e = _1ab194c20_f->_method_find_enum(_8753_ident);
				if (jule::real(_8917_e)) {
					return _8917_e;
				}
			}
			_iter_next_4437755552:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab194c20_f = *_range_begin; goto _iter_begin_4437755552; }
			_iter_end_4437755552:;
		}
	}
	return jule::new_ref<_1a909ac6b_Enum>();
}



inline jule::Bool _1ab195050_is_valid_model_for_ref(jule::Any _1627_m) {
	{
		auto _match_expr{ _1627_m };
		if (!(_match_expr.type_is<jule::Ref<_1b623eab2_Var>>())) { goto _case_end_4437756208; }
		_case_begin_4437756208:;
		{
			return true;
		}
		goto _match_end_4437761152;
		_case_end_4437756208:;
		if (!(_match_expr.type_is<jule::Ref<_1ab33d083_StructSubIdentExprModel>>())) { goto _case_end_4437756320; }
		_case_begin_4437756320:;
		{
			jule::Ref<_1ab33d083_StructSubIdentExprModel> _2213_model = _1627_m.operator jule::Ref<_1ab33d083_StructSubIdentExprModel>();
			return _1ab195050_is_valid_model_for_ref(_2213_model->_field_expr);
		}
		goto _match_end_4437761152;
		_case_end_4437756320:;
		if (!(_match_expr.type_is<jule::Ref<_1ab33d083_TraitSubIdentExprModel>>())) { goto _case_end_4437756432; }
		_case_begin_4437756432:;
		{
			jule::Ref<_1ab33d083_TraitSubIdentExprModel> _2613_model = _1627_m.operator jule::Ref<_1ab33d083_TraitSubIdentExprModel>();
			return _1ab195050_is_valid_model_for_ref(_2613_model->_field_expr);
		}
		goto _match_end_4437761152;
		_case_end_4437756432:;
		_case_begin_4437760640:;
		{
			return false;
		}
		goto _match_end_4437761152;
		_case_end_4437760640:;
		_match_end_4437761152:;
	}
}



inline _1cdeeb191_Log _1ab195050_compiler_err(_1b61ec5ec_Token& _3418_token,jule::Bool _3432_line,jule::Str _3444_fmt,jule::Slice<jule::Any> _3457_args) {
	_1cdeeb191_Log _3513_log = _1cdeeb191_Log(1LLU,_3418_token._field_row,_3418_token._field_column,_3418_token._field_file->_method_path(),_1cdeeb191_logf(_3444_fmt,_3457_args),jule::Str(),jule::Str());
	if (_3432_line) {
		_3513_log._field_line=_3418_token._field_file->_method_get_row(_3418_token._field_row);
	}
	return _3513_log;
}



inline jule::Bool _1ab195050_imp_is_lookupable(jule::Ref<_1ab194c20_ImportInfo>& _4823_i,jule::Str _4839_ident) {
	if (_4823_i->_field_cpp_linked) {
		return false;
	}
	if ((!(_4823_i->_field_import_all))) {
		if (_4823_i->_field_selected.len() > 0LL) {
			return _4823_i->_method_exist_ident(_4839_ident);
		}
	}
	return _4823_i->_field_import_all;
}



inline jule::Slice<jule::Ref<_1b623eab2_Var>> _1ab195050_build_ret_vars(jule::Ref<_1b557cd24_FnIns>& _6124_f) {
	if (_6124_f->_field_decl->_method_is_void() || (!(jule::real(_6124_f->_field_result)))) {
		return nullptr;
	}
	jule::Slice<jule::Ref<_1b623eab2_Var>> _6613_vars = nullptr;
	jule::Slice<jule::Ref<_1ac6d02c0_TypeKind>> _6713_types = _1a8dc912c_get_fn_result_types(_6124_f);
	{
		auto _range_expr = _6124_f->_field_decl->_field_result->_field_idents;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ab195050_i = 0;
			_1b61ec5ec_Token _1ab195050_ident = *_range_begin;
			_iter_begin_4437790544:;
			{
				if (_1b61ec5ec_is_ignore_ident(_1ab195050_ident._field_kind)) {
					goto _iter_next_4437790544;
				}
				jule::Ref<_1b623eab2_Var> _7317_v = jule::new_struct<_1b623eab2_Var>(new( std::nothrow ) _1b623eab2_Var(_6124_f->_field_scope,_1ab195050_ident,_1ab195050_ident._field_kind,jule::Bool(),jule::Bool(),true,jule::Bool(),true,jule::Bool(),jule::Bool(),jule::Str(),jule::new_struct<_1ac6d02c0_TypeSymbol>(new( std::nothrow ) _1ac6d02c0_TypeSymbol(jule::Ref<_1b61ca014_TypeDecl>(),_6713_types[static_cast<jule::Int>(_1ab195050_i)])),jule::new_struct<_1ab00dbcc_Value>(new( std::nothrow ) _1ab00dbcc_Value(jule::Ref<_1b61ca014_Expr>(),jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data()))),jule::Ref<_1b5589c76_ReferenceStack>(),jule::Slice<jule::Ref<_1b61ca014_Directive>>(),jule::Slice<jule::Ref<_1b623eab2_Var>>()));
				_6613_vars=jule::append(_6613_vars,jule::Slice<jule::Ref<_1b623eab2_Var>>({_7317_v}));
			}
			_iter_next_4437790544:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ab195050_i; _1ab195050_ident = *_range_begin; goto _iter_begin_4437790544; }
			_iter_end_4437790544:;
		}
	}
	return _6613_vars;
}



inline jule::Slice<jule::Ref<_1b623eab2_Var>> _1ab195050_build_param_vars(jule::Ref<_1b557cd24_FnIns>& _9026_f) {
	if (_9026_f->_field_params.len() == 0LL) {
		return nullptr;
	}
	jule::Slice<jule::Ref<_1b623eab2_Var>> _9513_vars = jule::Slice<jule::Ref<_1b623eab2_Var>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_9026_f->_field_params.len())));
	{
		auto _range_expr = _9026_f->_field_params;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ab195050_i = 0;
			jule::Ref<_1b557cd24_ParamIns> _1ab195050_p = *_range_begin;
			_iter_begin_4437804640:;
			{
				jule::Ref<_1b623eab2_Var> _9717_v = jule::new_struct<_1b623eab2_Var>(new( std::nothrow ) _1b623eab2_Var(_9026_f->_field_scope,_1ab195050_p->_field_decl->_field_token,_1ab195050_p->_field_decl->_field_ident,jule::Bool(),jule::Bool(),_1ab195050_p->_field_decl->_field_mutable,jule::Bool(),true,jule::Bool(),jule::Bool(),jule::Str(),jule::new_struct<_1ac6d02c0_TypeSymbol>(new( std::nothrow ) _1ac6d02c0_TypeSymbol()),jule::new_struct<_1ab00dbcc_Value>(new( std::nothrow ) _1ab00dbcc_Value(jule::Ref<_1b61ca014_Expr>(),jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data()))),jule::Ref<_1b5589c76_ReferenceStack>(),jule::Slice<jule::Ref<_1b61ca014_Directive>>(),jule::Slice<jule::Ref<_1b623eab2_Var>>()));
				{
					if (!((_1ab195050_p->_field_decl->_method_is_self()))) { goto _case_end_4437812544; }
					_case_begin_4437812544:;
					{
						_9717_v->_field_kind->_field_kind=jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_9026_f->_field_owner));
						_9717_v->_field_reference=true;
						if (_1ab195050_p->_field_decl->_method_is_ref()) {
							_9717_v->_field_ident=_9717_v->_field_ident.slice(1LL);
							_9717_v->_field_kind->_field_kind->_field_kind=jule::new_struct<_1ac6d02c0_Ref>(new( std::nothrow ) _1ac6d02c0_Ref(_9717_v->_field_kind->_field_kind->_method_clone()));
						}
					}
					goto _match_end_4437811584;
					_case_end_4437812544:;
					if (!((_1ab195050_p->_field_decl->_field_variadic))) { goto _case_end_4437815424; }
					_case_begin_4437815424:;
					{
						_9717_v->_field_kind->_field_kind=jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1ac6d02c0_Slc>(new( std::nothrow ) _1ac6d02c0_Slc(_1ab195050_p->_field_kind->_method_clone()))));
					}
					goto _match_end_4437811584;
					_case_end_4437815424:;
					_case_begin_4437811712:;
					{
						_9717_v->_field_kind->_field_kind=_1ab195050_p->_field_kind->_method_clone();
					}
					goto _match_end_4437811584;
					_case_end_4437811712:;
					_match_end_4437811584:;
				}
				_9513_vars[static_cast<jule::Int>(_1ab195050_i)]=_9717_v;
			}
			_iter_next_4437804640:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ab195050_i; _1ab195050_p = *_range_begin; goto _iter_begin_4437804640; }
			_iter_end_4437804640:;
		}
	}
	return _9513_vars;
}



inline jule::Slice<jule::Ref<_1ac6d02c0_TypeAlias>> _1ab195050_build_generic_type_aliases(jule::Ref<_1b557cd24_FnIns>& _13836_f) {
	jule::I64 _13913_size = _13836_f->_field_generics.len();
	if (jule::real(_13836_f->_field_decl->_field_owner)) {
		_13913_size+=static_cast<jule::I64>(_13836_f->_field_decl->_field_owner->_field_generics.len());
	}
	if (_13913_size == 0LL) {
		return nullptr;
	}
	jule::Slice<jule::Ref<_1ac6d02c0_TypeAlias>> _14813_aliases = jule::Slice<jule::Ref<_1ac6d02c0_TypeAlias>>::alloc(static_cast<jule::Int>(_13913_size));
	{
		auto _range_expr = _13836_f->_field_generics;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ab195050_i = 0;
			jule::Ref<_1ac6d02c0_TypeKind> _1ab195050_g = *_range_begin;
			_iter_begin_4437832608:;
			{
				jule::Ref<_1b61ca014_GenericDecl> _15117_decl = _13836_f->_field_decl->_field_generics[static_cast<jule::Int>(_1ab195050_i)];
				_14813_aliases[static_cast<jule::Int>(_1ab195050_i)]=jule::new_struct<_1ac6d02c0_TypeAlias>(new( std::nothrow ) _1ac6d02c0_TypeAlias(_13836_f->_field_decl->_field_scope,jule::Bool(),jule::Bool(),true,_15117_decl->_field_token,_15117_decl->_field_ident,jule::new_struct<_1ac6d02c0_TypeSymbol>(new( std::nothrow ) _1ac6d02c0_TypeSymbol(jule::Ref<_1b61ca014_TypeDecl>(),_1ab195050_g)),jule::Str(),jule::Slice<jule::Any>()));
			}
			_iter_next_4437832608:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ab195050_i; _1ab195050_g = *_range_begin; goto _iter_begin_4437832608; }
			_iter_end_4437832608:;
		}
	}
	if (jule::real(_13836_f->_field_decl->_field_owner)) {
		jule::Ref<_1b5e07a00_StructIns> _16217_owner = _13836_f->_field_owner;
		{
			auto _range_expr = _16217_owner->_field_generics;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Int _1ab195050_i = 0;
				jule::Ref<_1ac6d02c0_TypeKind> _1ab195050_g = *_range_begin;
				_iter_begin_4437842256:;
				{
					jule::Ref<_1b61ca014_GenericDecl> _16421_decl = _16217_owner->_field_decl->_field_generics[static_cast<jule::Int>(_1ab195050_i)];
					_14813_aliases[static_cast<jule::Int>(_13836_f->_field_generics.len() + _1ab195050_i)]=jule::new_struct<_1ac6d02c0_TypeAlias>(new( std::nothrow ) _1ac6d02c0_TypeAlias(_13836_f->_field_decl->_field_scope,jule::Bool(),jule::Bool(),true,_16421_decl->_field_token,_16421_decl->_field_ident,jule::new_struct<_1ac6d02c0_TypeSymbol>(new( std::nothrow ) _1ac6d02c0_TypeSymbol(jule::Ref<_1b61ca014_TypeDecl>(),_1ab195050_g)),jule::Str(),jule::Slice<jule::Any>()));
				}
				_iter_next_4437842256:;
				++_range_begin;
				if (_range_begin != _range_end) { ++_1ab195050_i; _1ab195050_g = *_range_begin; goto _iter_begin_4437842256; }
				_iter_end_4437842256:;
			}
		}
	}
	return _14813_aliases;
}



inline jule::Ref<_1ab00cc20_SymbolTable> _1ab195050_find_file(jule::Slice<jule::Ref<_1ab00cc20_SymbolTable>>& _17819_files,jule::Ref<_1b61ece27_File>& _17843_handler) {
	{
		auto _range_expr = _17819_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab00cc20_SymbolTable> _1ab195050_fl = *_range_begin;
			_iter_begin_4437851184:;
			{
				if ((_1ab195050_fl->_field_file).alloc == (_17843_handler).alloc) {
					return _1ab195050_fl;
				}
			}
			_iter_next_4437851184:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab195050_fl = *_range_begin; goto _iter_begin_4437851184; }
			_iter_end_4437851184:;
		}
	}
	return jule::new_ref<_1ab00cc20_SymbolTable>();
}



inline std::tuple<jule::Bool,jule::Bool> _1ab195050_conditional_has_ret(jule::Ref<_1ab009de8_Conditional> _18728_c) {
	jule::Bool _18747_ok = jule::Bool();
	jule::Bool _18757_breaking = jule::Bool();
	jule::Bool _18813_breaked = false;
	{
		auto _range_expr = _18728_c->_field_elifs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab009de8_If> _1ab195050_elif = *_range_begin;
			_iter_begin_4437857168:;
			{
				if ((!(jule::real(_1ab195050_elif)))) {
					_18747_ok = false;
					_18757_breaking = false;
					return std::make_tuple(_18747_ok,_18757_breaking);
				}
				std::tie(_18747_ok,std::ignore,_18757_breaking) = _1ab195050___has_ret(_1ab195050_elif->_field_scope);
				_18813_breaked=_18813_breaked || _18757_breaking;
				if ((!(_18747_ok))) {
					_18747_ok = false;
					_18757_breaking = _18813_breaked;
					return std::make_tuple(_18747_ok,_18757_breaking);
				}
			}
			_iter_next_4437857168:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab195050_elif = *_range_begin; goto _iter_begin_4437857168; }
			_iter_end_4437857168:;
		}
	}
	if ((!(jule::real(_18728_c->_field_default)))) {
		_18747_ok = false;
		_18757_breaking = _18813_breaked;
		return std::make_tuple(_18747_ok,_18757_breaking);
	}
	std::tie(_18747_ok,std::ignore,_18757_breaking) = _1ab195050___has_ret(_18728_c->_field_default->_field_scope);
	_18813_breaked=_18813_breaked || _18757_breaking;
	_18747_ok = _18747_ok;
	_18757_breaking = _18813_breaked;
	return std::make_tuple(_18747_ok,_18757_breaking);
}



inline jule::Bool _1ab195050_match_has_ret(jule::Ref<_1ab009de8_Match> _20922_m) {
	if ((!(jule::real(_20922_m->_field_default)))) {
		return false;
	}
	jule::Bool _21413_ok = true;
	jule::Bool _21513_falled = false;
	jule::Bool _21613_breaked = false;
	{
		auto _range_expr = _20922_m->_field_cases;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab009de8_Case> _1ab195050_c = *_range_begin;
			_iter_begin_4437871200:;
			{
				if ((!(jule::real(_1ab195050_c)))) {
					return false;
				}
				std::tie(_21413_ok,_21513_falled,_21613_breaked) = _1ab195050___has_ret(_1ab195050_c->_field_scope);
				if (((!(_21413_ok)) && (!(_21513_falled))) || _21613_breaked) {
					return false;
				}
				{
					if (!(((!(_21413_ok))))) { goto _case_end_4437875584; }
					_case_begin_4437875584:;
					{
						if ((!(_21513_falled))) {
							return false;
						}
						goto _case_begin_4437875696;
					}
					goto _match_end_4437875200;
					_case_end_4437875584:;
					if (!((_21513_falled))) { goto _case_end_4437875696; }
					_case_begin_4437875696:;
					{
						if ((!(jule::real(_1ab195050_c->_field_next)))) {
							return false;
						}
						goto _iter_next_4437871200;
					}
					goto _match_end_4437875200;
					_case_end_4437875696:;
					_match_end_4437875200:;
				}
				_21513_falled=false;
			}
			_iter_next_4437871200:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab195050_c = *_range_begin; goto _iter_begin_4437871200; }
			_iter_end_4437871200:;
		}
	}
	return _1ab195050_has_ret(_20922_m->_field_default->_field_scope);
}



inline std::tuple<jule::Bool,jule::Bool,jule::Bool> _1ab195050___has_ret(jule::Ref<_1ab009de8_Scope> _24518_s) {
	jule::Bool _24531_ok = jule::Bool();
	jule::Bool _24541_falled = jule::Bool();
	jule::Bool _24555_breaked = jule::Bool();
	if ((!(jule::real(_24518_s)))) {
		_24531_ok = false;
		_24541_falled = false;
		_24555_breaked = false;
		return std::make_tuple(_24531_ok,_24541_falled,_24555_breaked);
	}
	{
		auto _range_expr = _24518_s->_field_stmts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Any _1ab195050_st = *_range_begin;
			_iter_begin_4437883744:;
			{
				{
					auto _match_expr{ _1ab195050_st };
					if (!(_match_expr.type_is<jule::Ref<_1ab009de8_FallSt>>())) { goto _case_end_4437887680; }
					_case_begin_4437887680:;
					{
						_24541_falled=true;
					}
					goto _match_end_4437886560;
					_case_end_4437887680:;
					if (!(_match_expr.type_is<jule::Ref<_1ab009de8_BreakSt>>())) { goto _case_end_4437888000; }
					_case_begin_4437888000:;
					{
						_24531_ok = false;
						_24541_falled = false;
						_24555_breaked = true;
						return std::make_tuple(_24531_ok,_24541_falled,_24555_breaked);
					}
					goto _match_end_4437886560;
					_case_end_4437888000:;
					if (!(_match_expr.type_is<jule::Ref<_1ab009de8_ContSt>>())) { goto _case_end_4437888112; }
					_case_begin_4437888112:;
					{
						_24531_ok = false;
						_24541_falled = false;
						_24555_breaked = true;
						return std::make_tuple(_24531_ok,_24541_falled,_24555_breaked);
					}
					goto _match_end_4437886560;
					_case_end_4437888112:;
					if (!(_match_expr.type_is<jule::Ref<_1ab009de8_InfIter>>())) { goto _case_end_4437888240; }
					_case_begin_4437888240:;
					{
						_24531_ok=_1ab195050_has_ret(_1ab195050_st.operator jule::Ref<_1ab009de8_InfIter>()->_field_scope);
						if (_24531_ok) {
							_24531_ok = true;
							_24541_falled = false;
							_24555_breaked = false;
							return std::make_tuple(_24531_ok,_24541_falled,_24555_breaked);
						}
					}
					goto _match_end_4437886560;
					_case_end_4437888240:;
					if (!(_match_expr.type_is<jule::Ref<_1ab009de8_RetSt>>())) { goto _case_end_4437888368; }
					_case_begin_4437888368:;
					{
						_24531_ok = true;
						_24541_falled = _24541_falled;
						_24555_breaked = _24555_breaked;
						return std::make_tuple(_24531_ok,_24541_falled,_24555_breaked);
					}
					goto _match_end_4437886560;
					_case_end_4437888368:;
					if (!(_match_expr.type_is<jule::Ref<_1ab009de8_Scope>>())) { goto _case_end_4437888496; }
					_case_begin_4437888496:;
					{
						_24531_ok=_1ab195050_has_ret(_1ab195050_st.operator jule::Ref<_1ab009de8_Scope>());
						if (_24531_ok) {
							_24531_ok = true;
							_24541_falled = false;
							_24555_breaked = false;
							return std::make_tuple(_24531_ok,_24541_falled,_24555_breaked);
						}
					}
					goto _match_end_4437886560;
					_case_end_4437888496:;
					if (!(_match_expr.type_is<jule::Ref<_1ab00dbcc_Data>>())) { goto _case_end_4437888624; }
					_case_begin_4437888624:;
					{
						{
							auto _match_expr{ _1ab195050_st.operator jule::Ref<_1ab00dbcc_Data>()->_field_model };
							if (!(_match_expr.type_is<jule::Ref<_1ab33d083_BuiltinPanicCallExprModel>>())) { goto _case_end_4437907344; }
							_case_begin_4437907344:;
							{
								_24531_ok = true;
								_24541_falled = _24541_falled;
								_24555_breaked = _24555_breaked;
								return std::make_tuple(_24531_ok,_24541_falled,_24555_breaked);
							}
							goto _match_end_4437906704;
							_case_end_4437907344:;
							_match_end_4437906704:;
						}
					}
					goto _match_end_4437886560;
					_case_end_4437888624:;
					if (!(_match_expr.type_is<jule::Ref<_1ab009de8_Recover>>())) { goto _case_end_4437888752; }
					_case_begin_4437888752:;
					{
						jule::Bool _28318_ok;
						jule::Bool _28322__falled;
						jule::Bool _28331__breaked;
						std::tie(_28318_ok,_28322__falled,_28331__breaked) = _1ab195050___has_ret(_1ab195050_st.operator jule::Ref<_1ab009de8_Recover>()->_field_scope);
						if (_28318_ok) {
							_24531_ok = true;
							_24541_falled = _28322__falled;
							_24555_breaked = _28331__breaked;
							return std::make_tuple(_24531_ok,_24541_falled,_24555_breaked);
						}
					}
					goto _match_end_4437886560;
					_case_end_4437888752:;
					if (!(_match_expr.type_is<jule::Ref<_1ab009de8_Conditional>>())) { goto _case_end_4437888880; }
					_case_begin_4437888880:;
					{
						std::tie(_24531_ok,_24555_breaked) = _1ab195050_conditional_has_ret(_1ab195050_st.operator jule::Ref<_1ab009de8_Conditional>());
						if (_24531_ok) {
							_24531_ok = true;
							_24541_falled = false;
							_24555_breaked = false;
							return std::make_tuple(_24531_ok,_24541_falled,_24555_breaked);
						}
						if (_24555_breaked) {
							_24531_ok = false;
							_24541_falled = false;
							_24555_breaked = _24555_breaked;
							return std::make_tuple(_24531_ok,_24541_falled,_24555_breaked);
						}
					}
					goto _match_end_4437886560;
					_case_end_4437888880:;
					if (!(_match_expr.type_is<jule::Ref<_1ab009de8_Match>>())) { goto _case_end_4437889008; }
					_case_begin_4437889008:;
					{
						_24531_ok=_1ab195050_match_has_ret(_1ab195050_st.operator jule::Ref<_1ab009de8_Match>());
						if (_24531_ok) {
							_24531_ok = true;
							_24541_falled = false;
							_24555_breaked = false;
							return std::make_tuple(_24531_ok,_24541_falled,_24555_breaked);
						}
					}
					goto _match_end_4437886560;
					_case_end_4437889008:;
					_match_end_4437886560:;
				}
			}
			_iter_next_4437883744:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab195050_st = *_range_begin; goto _iter_begin_4437883744; }
			_iter_end_4437883744:;
		}
	}
	_24531_ok = false;
	_24541_falled = _24541_falled;
	_24555_breaked = _24555_breaked;
	return std::make_tuple(_24531_ok,_24541_falled,_24555_breaked);
}



inline jule::Bool _1ab195050_has_ret(jule::Ref<_1ab009de8_Scope> _30916_s) {
	jule::Bool _31010_ok;
	std::tie(_31010_ok,std::ignore,std::ignore) = _1ab195050___has_ret(_30916_s);
	return _31010_ok;
}



inline void _1ab195050_push_suggestion(_1cdeeb191_Log* _31431_log,jule::Str _31442_fmt,jule::Slice<jule::Any> _31455_args) {
	_31431_log->_field_suggestion=_1cdeeb191_logf(_31442_fmt,_31455_args);
}



inline jule::Slice<jule::Ref<_1ac6d02c0_TypeKind>> _1a8dc912c_get_fn_result_types(jule::Ref<_1b557cd24_FnIns>& _2529_f) {
	{
		if (!((_2529_f->_field_decl->_method_is_void() || (!(jule::real(_2529_f->_field_result)))))) { goto _case_end_4437932928; }
		_case_begin_4437932928:;
		{
			return nullptr;
		}
		goto _match_end_4437931360;
		_case_end_4437932928:;
		if (!(((!(jule::real(_2529_f->_field_result->_method_tup())))))) { goto _case_end_4437933952; }
		_case_begin_4437933952:;
		{
			return jule::Slice<jule::Ref<_1ac6d02c0_TypeKind>>({_2529_f->_field_result});
		}
		goto _match_end_4437931360;
		_case_end_4437933952:;
		_case_begin_4437931472:;
		{
			return _2529_f->_field_result->_method_tup()->_field_types;
		}
		goto _match_end_4437931360;
		_case_end_4437931472:;
		_match_end_4437931360:;
	}
}



inline jule::Bool _1a8dc912c_trait_has_reference_receiver(jule::Ref<_1aaee9091_Trait>& _3834_t) {
	{
		auto _range_expr = _3834_t->_field_methods;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b557cd24_Fn> _1a8dc912c_f = *_range_begin;
			_iter_begin_4437936192:;
			{
				if (_1a8dc912c_f->_field_statically) {
					goto _iter_next_4437936192;
				}
				jule::Ref<_1b557cd24_Param> _4513_p = _1a8dc912c_f->_field_params[0LL];
				if (_4513_p->_method_is_ref() && _4513_p->_method_is_self()) {
					return true;
				}
			}
			_iter_next_4437936192:;
			++_range_begin;
			if (_range_begin != _range_end) { _1a8dc912c_f = *_range_begin; goto _iter_begin_4437936192; }
			_iter_end_4437936192:;
		}
	}
	return false;
}



inline jule::Bool _1a8dc912c_float_assignable(jule::Str _5321_kind,jule::Ref<_1ab00dbcc_Data>& _5333_d) {
	jule::Str _549_value = _1cdd4411b_fmt_float(static_cast<jule::F64>(_5333_d->_field_constant->_method_read_f64()),'e',-1LL,64LL);
	return _1ac90e3bc_check_bit_float(_549_value,static_cast<jule::Int>(_1ac90e3bc_bitsize_of(_5321_kind)));
}



inline jule::Bool _1a8dc912c_sig_assignable(jule::Str _5819_kind,jule::Ref<_1ab00dbcc_Data>& _5831_d) {
	jule::F64 _599_min = _1ac928bde_min(_5819_kind);
	jule::F64 _609_max = _1ac928bde_max(_5819_kind);
	{
		if (!((_5831_d->_field_constant->_method_is_f64()))) { goto _case_end_4437952288; }
		_case_begin_4437952288:;
		{
			jule::F64 _6413_x = static_cast<jule::F64>(_5831_d->_field_constant->_method_read_f64());
			jule::F64 _6514_i;
			jule::F64 _6517_frac;
			std::tie(_6514_i,_6517_frac) = _1b5c13311_modf(_6413_x);
			if (_6517_frac != 0LL) {
				return false;
			}
			return (_6514_i >= _599_min) && (_6514_i <= _609_max);
		}
		goto _match_end_4437951952;
		_case_end_4437952288:;
		if (!((_5831_d->_field_constant->_method_is_u64()))) { goto _case_end_4437952400; }
		_case_begin_4437952400:;
		{
			jule::F64 _7213_x = static_cast<jule::F64>(_5831_d->_field_constant->_method_read_u64());
			if (_7213_x <= _609_max) {
				return true;
			}
		}
		goto _match_end_4437951952;
		_case_end_4437952400:;
		if (!((_5831_d->_field_constant->_method_is_i64()))) { goto _case_end_4437952512; }
		_case_begin_4437952512:;
		{
			jule::F64 _7813_x = static_cast<jule::F64>(_5831_d->_field_constant->_method_read_i64());
			return (_599_min <= _7813_x) && (_7813_x <= _609_max);
		}
		goto _match_end_4437951952;
		_case_end_4437952512:;
		_match_end_4437951952:;
	}
	return false;
}



inline jule::Bool _1a8dc912c_unsig_assignable(jule::Str _8521_kind,jule::Ref<_1ab00dbcc_Data>& _8533_d) {
	jule::F64 _869_max = _1ac928bde_max(_8521_kind);
	{
		if (!((_8533_d->_field_constant->_method_is_f64()))) { goto _case_end_4437967568; }
		_case_begin_4437967568:;
		{
			jule::F64 _9013_x = _8533_d->_field_constant->_method_read_f64();
			if (_9013_x < 0LL) {
				return false;
			}
			jule::F64 _9514_i;
			jule::F64 _9517_frac;
			std::tie(_9514_i,_9517_frac) = _1b5c13311_modf(_9013_x);
			if (_9517_frac != 0LL) {
				return false;
			}
			return _9514_i <= _869_max;
		}
		goto _match_end_4437967312;
		_case_end_4437967568:;
		if (!((_8533_d->_field_constant->_method_is_u64()))) { goto _case_end_4437967680; }
		_case_begin_4437967680:;
		{
			jule::F64 _10213_x = static_cast<jule::F64>(_8533_d->_field_constant->_method_read_u64());
			if (_10213_x <= _869_max) {
				return true;
			}
		}
		goto _match_end_4437967312;
		_case_end_4437967680:;
		if (!((_8533_d->_field_constant->_method_is_i64()))) { goto _case_end_4437967792; }
		_case_begin_4437967792:;
		{
			jule::F64 _10813_x = static_cast<jule::F64>(_8533_d->_field_constant->_method_read_i64());
			return (0LL <= _10813_x) && (_10813_x <= _869_max);
		}
		goto _match_end_4437967312;
		_case_end_4437967792:;
		_match_end_4437967312:;
	}
	return false;
}



inline jule::Bool _1a8dc912c_int_assignable(jule::Str _11519_kind,jule::Ref<_1ab00dbcc_Data>& _11531_d) {
	{
		if (!((_1ac92d7e8_is_sig_int(_11519_kind)))) { goto _case_end_4437982848; }
		_case_begin_4437982848:;
		{
			return _1a8dc912c_sig_assignable(_11519_kind,_11531_d);
		}
		goto _match_end_4437981792;
		_case_end_4437982848:;
		if (!((_1ac92d7e8_is_unsig_int(_11519_kind)))) { goto _case_end_4437982960; }
		_case_begin_4437982960:;
		{
			return _1a8dc912c_unsig_assignable(_11519_kind,_11531_d);
		}
		goto _match_end_4437981792;
		_case_end_4437982960:;
		_case_begin_4437981968:;
		{
			return false;
		}
		goto _match_end_4437981792;
		_case_end_4437981968:;
		_match_end_4437981792:;
	}
}



inline jule::Any _1ab00dbcc_find_builtins_import(jule::Str _4625_ident,jule::Ref<_1ab194c20_ImportInfo> _4637_imp) {
	return _1aae49684_find_package_builtin_def(_4637_imp->_field_link_path,_4625_ident);
}



inline jule::Any _1ab00dbcc_find_builtins_sema(jule::Str _5023_ident,jule::Ref<_1ab195050_Sema> _5039_s) {
	{
		auto _range_expr = _5039_s->_field_file->_field_imports;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab194c20_ImportInfo> _1ab00dbcc_imp = *_range_begin;
			_iter_begin_4437989648:;
			{
				if (_1ab00dbcc_imp->_field_import_all || _1ab00dbcc_imp->_method_exist_ident(_5023_ident)) {
					jule::Any _5321_def = _1ab00dbcc_find_builtins_import(_5023_ident,_1ab00dbcc_imp);
					if (_5321_def != nullptr) {
						return _5321_def;
					}
				}
			}
			_iter_next_4437989648:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ab00dbcc_imp = *_range_begin; goto _iter_begin_4437989648; }
			_iter_end_4437989648:;
		}
	}
	return jule::Any(nullptr);
}



inline jule::Bool _1ab00dbcc_is_ok_for_shifting(jule::Ref<_1ab00dbcc_Data> _6227_d) {
	jule::Ref<_1ac6d02c0_Prim> _639_prim = _6227_d->_field_kind->_method_prim();
	if ((!(jule::real(_639_prim))) || (!(_1ac92d7e8_is_int(_639_prim->_method_to_str())))) {
		return false;
	}
	if ((!(_6227_d->_method_is_const()))) {
		return true;
	}
	{
		if (!((_6227_d->_field_constant->_method_is_i64()))) { goto _case_end_4438001520; }
		_case_begin_4438001520:;
		{
			return _6227_d->_field_constant->_method_read_i64() >= 0LL;
		}
		goto _match_end_4438001296;
		_case_end_4438001520:;
		if (!((_6227_d->_field_constant->_method_is_u64()))) { goto _case_end_4438001632; }
		_case_begin_4438001632:;
		{
			return true;
		}
		goto _match_end_4438001296;
		_case_end_4438001632:;
		_case_begin_4438000384:;
		{
			return false;
		}
		goto _match_end_4438001296;
		_case_end_4438000384:;
		_match_end_4438001296:;
	}
}



inline jule::Bool _1ab00dbcc_is_instanced_struct(jule::Ref<_1b5e07a00_StructIns> _7924_s) {
	return _7924_s->_field_decl->_field_generics.len() == _7924_s->_field_generics.len();
}



inline void _1ab00dbcc_normalize_bitsize(jule::Ref<_1ab00dbcc_Data> _8326_d) {
	if ((!(_8326_d->_method_is_const()))) {
		return;
	}
	jule::Str _8813_kind = jule::Str("", 0);
	{
		if (!((_8326_d->_field_constant->_method_is_i64()))) { goto _case_end_4438010960; }
		_case_begin_4438010960:;
		{
			jule::I64 _9113_x = _8326_d->_field_constant->_method_read_i64();
			_8813_kind=_1ac90e3bc_int_from_bits(static_cast<jule::U64>(_1ac90e3bc_bitsize_of_int(_9113_x)));
		}
		goto _match_end_4438009664;
		_case_end_4438010960:;
		if (!((_8326_d->_field_constant->_method_is_u64()))) { goto _case_end_4438011072; }
		_case_begin_4438011072:;
		{
			jule::U64 _9513_x = _8326_d->_field_constant->_method_read_u64();
			_8813_kind=_1ac90e3bc_uint_from_bits(static_cast<jule::U64>(_1ac90e3bc_bitsize_of_uint(_9513_x)));
		}
		goto _match_end_4438009664;
		_case_end_4438011072:;
		_case_begin_4438009920:;
		{
			return;
		}
		goto _match_end_4438009664;
		_case_end_4438009920:;
		_match_end_4438009664:;
	}
	if (jule::real(_8326_d->_field_kind->_method_enm())) {
		return;
	}
	_8326_d->_field_kind->_field_kind=_1ac6d02c0_build_prim_type(_8813_kind);
}



inline void _1ab00dbcc_normalize_type(jule::Ref<_1ab00dbcc_Data> _11023_d) {
	{
		if (!((_1a8dc912c_int_assignable(jule::Str("int", 3),_11023_d)))) { goto _case_end_4438021072; }
		_case_begin_4438021072:;
		{
			_11023_d->_field_kind->_field_kind=_1ac6d02c0_build_prim_type(jule::Str("int", 3));
			_11023_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_11023_d->_field_constant->_method_as_f64()));
		}
		goto _match_end_4438020832;
		_case_end_4438021072:;
		if (!((_1a8dc912c_int_assignable(jule::Str("uint", 4),_11023_d)))) { goto _case_end_4438021200; }
		_case_begin_4438021200:;
		{
			_11023_d->_field_kind->_field_kind=_1ac6d02c0_build_prim_type(jule::Str("uint", 4));
			_11023_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_11023_d->_field_constant->_method_as_f64()));
		}
		goto _match_end_4438020832;
		_case_end_4438021200:;
		_match_end_4438020832:;
	}
}



inline void _1ab00dbcc_apply_cast_kind_model(jule::Ref<_1ab00dbcc_Data> _12230_d) {
	_12230_d->_field_model=jule::Any(jule::new_struct<_1ab33d083_CastingExprModel>(new( std::nothrow ) _1ab33d083_CastingExprModel(_12230_d->_field_model,_12230_d->_field_cast_kind,_12230_d->_field_kind)));
}



inline void _1ab00dbcc_apply_cast_kind(jule::Ref<_1ab00dbcc_Data> _13024_d) {
	if ((!(jule::real(_13024_d->_field_cast_kind)))) {
		return;
	}
	_1ab00dbcc_apply_cast_kind_model(_13024_d);
	_13024_d->_field_kind=_13024_d->_field_cast_kind;
	jule::drop(_13024_d->_field_cast_kind);
}



inline jule::Ref<_1ab00dbcc_Data> _1ab00dbcc_build_void_data(void) {
	return jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_1ac6d02c0_build_prim_type(jule::Str("void", 4)))),jule::Ref<_1ac6d02c0_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),false,jule::Ref<_1ac90c3ed_Const>()));
}



inline jule::Str _1ab00dbcc_kind_by_bitsize(jule::Any _15120_expr) {
	{
		auto _match_expr{ _15120_expr };
		if (!(_match_expr.type_is<jule::F64>())) { goto _case_end_4438039216; }
		_case_begin_4438039216:;
		{
			jule::F64 _15413_x = _15120_expr.operator jule::F64();
			return _1ac90e3bc_float_from_bits(static_cast<jule::U64>(_1ac90e3bc_bitsize_of_float(_15413_x)));
		}
		goto _match_end_4438035168;
		_case_end_4438039216:;
		if (!(_match_expr.type_is<jule::I64>())) { goto _case_end_4438039328; }
		_case_begin_4438039328:;
		{
			jule::I64 _15813_x = _15120_expr.operator jule::I64();
			return _1ac90e3bc_int_from_bits(static_cast<jule::U64>(_1ac90e3bc_bitsize_of_int(_15813_x)));
		}
		goto _match_end_4438035168;
		_case_end_4438039328:;
		if (!(_match_expr.type_is<jule::U64>())) { goto _case_end_4438039440; }
		_case_begin_4438039440:;
		{
			jule::U64 _16213_x = _15120_expr.operator jule::U64();
			return _1ac90e3bc_uint_from_bits(static_cast<jule::U64>(_1ac90e3bc_bitsize_of_uint(_16213_x)));
		}
		goto _match_end_4438035168;
		_case_end_4438039440:;
		_case_begin_4438036656:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4438035168;
		_case_end_4438036656:;
		_match_end_4438035168:;
	}
}



inline jule::Str _1ab00dbcc_check_data_for_integer_indexing(jule::Ref<_1ab00dbcc_Data> _17040_d) {
	jule::Str _17052_err_fmt = jule::Str("", 0);
	if ((!(jule::real(_17040_d)))) {
		_17052_err_fmt = jule::Str("", 0);
		return _17052_err_fmt;
	}
	jule::Ref<_1ac6d02c0_TypeKind> _17513_kind = _17040_d->_field_kind;
	if (jule::real(_17513_kind->_method_ref())) {
		_17513_kind=_17513_kind->_method_ref()->_field_elem;
	}
	{
		if (!(((!(jule::real(_17513_kind->_method_prim())))))) { goto _case_end_4438055728; }
		_case_begin_4438055728:;
		{
			_17052_err_fmt = jule::Str("invalid expression", 18);
			return _17052_err_fmt;
		}
		goto _match_end_4438050400;
		_case_end_4438055728:;
		if (!(((!(_1ac92d7e8_is_int(_17513_kind->_method_prim()->_method_to_str())))))) { goto _case_end_4438055840; }
		_case_begin_4438055840:;
		{
			_17052_err_fmt = jule::Str("invalid expression", 18);
			return _17052_err_fmt;
		}
		goto _match_end_4438050400;
		_case_end_4438055840:;
		if (!((_17040_d->_method_is_const()))) { goto _case_end_4438053472; }
		_case_begin_4438053472:;
		{
			if (_17040_d->_field_constant->_method_as_f64() < 0LL) {
				_17052_err_fmt = jule::Str("overflow the limit of data-type", 31);
				return _17052_err_fmt;
			}
		}
		goto _match_end_4438050400;
		_case_end_4438053472:;
		_case_begin_4438050496:;
		{
			_17040_d->_field_cast_kind=jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_1ac6d02c0_build_prim_type(jule::Str("int", 3))));
			_1ab00dbcc_apply_cast_kind(_17040_d);
		}
		goto _match_end_4438050400;
		_case_end_4438050496:;
		_match_end_4438050400:;
	}
	_17052_err_fmt = jule::Str("", 0);
	return _17052_err_fmt;
}



inline jule::Bool _1ac6d02c0_can_get_ptr(jule::Ref<_1ab00dbcc_Data>& _55921_d) {
	if ((!(_55921_d->_field_lvalue)) || _55921_d->_method_is_const()) {
		return false;
	}
	{
		if (!((jule::real(_55921_d->_field_kind->_method_fnc()) || jule::real(_55921_d->_field_kind->_method_enm())))) { goto _case_end_4438063424; }
		_case_begin_4438063424:;
		{
			return false;
		}
		goto _match_end_4438062352;
		_case_end_4438063424:;
		_case_begin_4438062448:;
		{
			return true;
		}
		goto _match_end_4438062352;
		_case_end_4438062448:;
		_match_end_4438062352:;
	}
}



inline jule::Bool _1ac6d02c0_is_valid_for_ref_type(jule::Ref<_1ac6d02c0_TypeKind>& _57431_t) {
	jule::Ref<_1b5e07a00_StructIns> _57513_s = _57431_t->_method_strct();
	if ((jule::real(_57513_s) && jule::real(_57513_s->_field_decl)) && _57513_s->_field_decl->_field_cpp_linked) {
		return false;
	}
	return (!(((jule::real(_57431_t->_method_enm()) || jule::real(_57431_t->_method_ptr())) || jule::real(_57431_t->_method_ref())) || jule::real(_57431_t->_method_arr())));
}



inline jule::Bool _1ac6d02c0_is_valid_for_ref(jule::Ref<_1ac6d02c0_TypeKind>& _58326_t) {
	return (!(jule::real(_58326_t->_method_fnc())));
}



inline jule::Str _1ac6d02c0_build_link_path_by_tokens(jule::Slice<_1b61ec5ec_Token>& _58731_tokens) {
	jule::Str _58813_s = _58731_tokens[0LL]._field_kind;
	{
		auto _range_expr = _58731_tokens.slice(1LL);
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			_1b61ec5ec_Token _1ac6d02c0_token = *_range_begin;
			_iter_begin_4438078912:;
			{
				_58813_s+=jule::Str("::", 2);
				_58813_s+=_1ac6d02c0_token._field_kind;
			}
			_iter_next_4438078912:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ac6d02c0_token = *_range_begin; goto _iter_begin_4438078912; }
			_iter_end_4438078912:;
		}
	}
	return _58813_s;
}



inline jule::Ref<_1ac6d02c0_Prim> _1ac6d02c0_build_prim_type(jule::Str _59620_kind) {
	return jule::new_struct<_1ac6d02c0_Prim>(new( std::nothrow ) _1ac6d02c0_Prim(_59620_kind));
}



inline jule::Ref<_1b5e07a00_Struct> _1ac6d02c0_get_struct_from_kind(jule::Ref<_1ac6d02c0_TypeKind> _60229_k) {
	{
		if (!(((!(jule::real(_60229_k)))))) { goto _case_end_4438085488; }
		_case_begin_4438085488:;
		{
			return jule::new_ref<_1b5e07a00_Struct>();
		}
		goto _match_end_4438082864;
		_case_end_4438085488:;
		if (!((jule::real(_60229_k->_method_strct())))) { goto _case_end_4438084496; }
		_case_begin_4438084496:;
		{
			return _60229_k->_method_strct()->_field_decl;
		}
		goto _match_end_4438082864;
		_case_end_4438084496:;
		if (!((jule::real(_60229_k->_method_ref())))) { goto _case_end_4438084704; }
		_case_begin_4438084704:;
		{
			return _1ac6d02c0_get_struct_from_kind(_60229_k->_method_ref()->_field_elem);
		}
		goto _match_end_4438082864;
		_case_end_4438084704:;
		if (!((jule::real(_60229_k->_method_slc())))) { goto _case_end_4438085152; }
		_case_begin_4438085152:;
		{
			return _1ac6d02c0_get_struct_from_kind(_60229_k->_method_slc()->_field_elem);
		}
		goto _match_end_4438082864;
		_case_end_4438085152:;
		if (!((jule::real(_60229_k->_method_arr())))) { goto _case_end_4438085264; }
		_case_begin_4438085264:;
		{
			return _1ac6d02c0_get_struct_from_kind(_60229_k->_method_arr()->_field_elem);
		}
		goto _match_end_4438082864;
		_case_end_4438085264:;
		if (!((jule::real(_60229_k->_method_ptr())))) { goto _case_end_4438084096; }
		_case_begin_4438084096:;
		{
			return jule::new_ref<_1b5e07a00_Struct>();
		}
		goto _match_end_4438082864;
		_case_end_4438084096:;
		_case_begin_4438083136:;
		{
			return jule::new_ref<_1b5e07a00_Struct>();
		}
		goto _match_end_4438082864;
		_case_end_4438083136:;
		_match_end_4438082864:;
	}
}



inline jule::Bool _1ac6d02c0_is_prim(jule::Str _63112_kind) {
	return (((((((((((((((_63112_kind == jule::Str("i8", 2)) || (_63112_kind == jule::Str("i16", 3))) || (_63112_kind == jule::Str("i32", 3))) || (_63112_kind == jule::Str("i64", 3))) || (_63112_kind == jule::Str("u8", 2))) || (_63112_kind == jule::Str("u16", 3))) || (_63112_kind == jule::Str("u32", 3))) || (_63112_kind == jule::Str("u64", 3))) || (_63112_kind == jule::Str("f32", 3))) || (_63112_kind == jule::Str("f64", 3))) || (_63112_kind == jule::Str("int", 3))) || (_63112_kind == jule::Str("uint", 4))) || (_63112_kind == jule::Str("uintptr", 7))) || (_63112_kind == jule::Str("bool", 4))) || (_63112_kind == jule::Str("str", 3))) || (_63112_kind == jule::Str("any", 3));
}



inline std::tuple<jule::Ref<_1ab00cc20_SymbolTable>,jule::Slice<_1cdeeb191_Log>> _1aae299b6_build_symbols(jule::Ref<_1b61d1d62_Ast>& _1523_ast,jule::Trait<_1ab194c20_Importer>& _1539_importer,jule::Ref<_1b5589c76_SymbolBuilder> _1563_owner) {
	jule::Ref<_1b5589c76_SymbolBuilder> _1613_sb = jule::new_struct<_1b5589c76_SymbolBuilder>(new( std::nothrow ) _1b5589c76_SymbolBuilder(_1563_owner,_1539_importer,jule::Slice<_1cdeeb191_Log>(),_1523_ast,jule::Ref<_1ab00cc20_SymbolTable>()));
	_1613_sb->_method_build();
	if (_1613_sb->_field_errors.len() == 0LL) {
		return std::make_tuple(_1613_sb->_field_table,nullptr);
	}
	return std::make_tuple(jule::new_ref<_1ab00cc20_SymbolTable>(),_1613_sb->_field_errors);
}



inline std::tuple<jule::Ref<_1ab194c20_Package>,jule::Slice<_1cdeeb191_Log>> _1aae299b6___analyze_package(jule::Slice<jule::Ref<_1b61d1d62_Ast>>& _2927_files,jule::Trait<_1ab194c20_Importer>& _2947_importer,jule::Int& _2968_flags) {
	jule::Slice<jule::Ref<_1ab00cc20_SymbolTable>> _3113_tables = jule::Slice<jule::Ref<_1ab00cc20_SymbolTable>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_2927_files.len())));
	{
		auto _range_expr = _2927_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1aae299b6_i = 0;
			jule::Ref<_1b61d1d62_Ast> _1aae299b6_f = *_range_begin;
			_iter_begin_4438112464:;
			{
				jule::Ref<_1ab00cc20_SymbolTable> _3318_table;
				jule::Slice<_1cdeeb191_Log> _3329_errors;
				std::tie(_3318_table,_3329_errors) = _1aae299b6_build_symbols(_1aae299b6_f,_2947_importer,jule::new_ref<_1b5589c76_SymbolBuilder>());
				if (_3329_errors.len() > 0LL) {
					return std::make_tuple(jule::new_ref<_1ab194c20_Package>(),_3329_errors);
				}
				_3113_tables[static_cast<jule::Int>(_1aae299b6_i)]=_3318_table;
			}
			_iter_next_4438112464:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1aae299b6_i; _1aae299b6_f = *_range_begin; goto _iter_begin_4438112464; }
			_iter_end_4438112464:;
		}
	}
	jule::Ref<_1ab195050_Sema> _4013_sema = jule::new_struct<_1ab195050_Sema>(new( std::nothrow ) _1ab195050_Sema(jule::Slice<_1cdeeb191_Log>(),jule::Slice<jule::Ref<_1ab00cc20_SymbolTable>>(),jule::Ref<_1ab00cc20_SymbolTable>(),_2968_flags));
	_4013_sema->_method_check(_3113_tables);
	if (_4013_sema->_field_errors.len() > 0LL) {
		return std::make_tuple(jule::new_ref<_1ab194c20_Package>(),_4013_sema->_field_errors);
	}
	jule::Ref<_1ab194c20_Package> _4813_pkg = jule::new_struct<_1ab194c20_Package>(new( std::nothrow ) _1ab194c20_Package(_4013_sema->_field_files));
	return std::make_tuple(_4813_pkg,nullptr);
}



inline std::tuple<jule::Ref<_1ab194c20_Package>,jule::Slice<_1cdeeb191_Log>> _1aae299b6_analyze_package(jule::Slice<jule::Ref<_1b61d1d62_Ast>> _7228_files,jule::Trait<_1ab194c20_Importer> _7247_importer,jule::Int _7267_flags) {
	if (_7228_files.len() == 0LL) {
		return std::make_tuple(jule::new_ref<_1ab194c20_Package>(),nullptr);
	}
	jule::Ref<_1ab194c20_Package> _7714_package;
	jule::Slice<_1cdeeb191_Log> _7727_logs;
	std::tie(_7714_package,_7727_logs) = _1aae299b6___analyze_package(_7228_files,_7247_importer,_7267_flags);
	return std::make_tuple(_7714_package,_7727_logs);
}



inline std::tuple<jule::Ref<_1ab00cc20_SymbolTable>,jule::Slice<_1cdeeb191_Log>> _1aae299b6_analyze_file(jule::Ref<_1b61d1d62_Ast> _9825_f,jule::Trait<_1ab194c20_Importer> _9838_importer,jule::Int _9858_flags) {
	jule::Slice<jule::Ref<_1b61d1d62_Ast>> _9913_files = jule::Slice<jule::Ref<_1b61d1d62_Ast>>({_9825_f});
	jule::Ref<_1ab194c20_Package> _10014_pkg;
	jule::Slice<_1cdeeb191_Log> _10023_errors;
	std::tie(_10014_pkg,_10023_errors) = _1aae299b6_analyze_package(_9913_files,_9838_importer,_9858_flags);
	if (_10023_errors.len() > 0LL) {
		return std::make_tuple(jule::new_ref<_1ab00cc20_SymbolTable>(),_10023_errors);
	}
	jule::Ref<_1ab00cc20_SymbolTable> _10713_table = _10014_pkg->_field_files[0LL];
	return std::make_tuple(_10713_table,nullptr);
}



inline void _1aae49684_init(void) {
	_1aae49684_BUILTIN_FN_OUT->_field_caller=jule::Fn<jule::Ref<_1ab00dbcc_Data>(jule::Ref<_1ab00dbcc_Eval>&,jule::Ref<_1b61ca014_FnCallExpr>&,jule::Ref<_1ab00dbcc_Data>&)>(_1aae49684_builtin_caller_out);
	_1aae49684_BUILTIN_FN_OUTLN->_field_caller=jule::Fn<jule::Ref<_1ab00dbcc_Data>(jule::Ref<_1ab00dbcc_Eval>&,jule::Ref<_1b61ca014_FnCallExpr>&,jule::Ref<_1ab00dbcc_Data>&)>(_1aae49684_builtin_caller_outln);
	_1aae49684_BUILTIN_FN_NEW->_field_caller=jule::Fn<jule::Ref<_1ab00dbcc_Data>(jule::Ref<_1ab00dbcc_Eval>&,jule::Ref<_1b61ca014_FnCallExpr>&,jule::Ref<_1ab00dbcc_Data>&)>(_1aae49684_builtin_caller_new);
	_1aae49684_BUILTIN_FN_REAL->_field_caller=jule::Fn<jule::Ref<_1ab00dbcc_Data>(jule::Ref<_1ab00dbcc_Eval>&,jule::Ref<_1b61ca014_FnCallExpr>&,jule::Ref<_1ab00dbcc_Data>&)>(_1aae49684_builtin_caller_real);
	_1aae49684_BUILTIN_FN_DROP->_field_caller=jule::Fn<jule::Ref<_1ab00dbcc_Data>(jule::Ref<_1ab00dbcc_Eval>&,jule::Ref<_1b61ca014_FnCallExpr>&,jule::Ref<_1ab00dbcc_Data>&)>(_1aae49684_builtin_caller_drop);
	_1aae49684_BUILTIN_FN_PANIC->_field_caller=jule::Fn<jule::Ref<_1ab00dbcc_Data>(jule::Ref<_1ab00dbcc_Eval>&,jule::Ref<_1b61ca014_FnCallExpr>&,jule::Ref<_1ab00dbcc_Data>&)>(_1aae49684_builtin_caller_panic);
	_1aae49684_BUILTIN_FN_MAKE->_field_caller=jule::Fn<jule::Ref<_1ab00dbcc_Data>(jule::Ref<_1ab00dbcc_Eval>&,jule::Ref<_1b61ca014_FnCallExpr>&,jule::Ref<_1ab00dbcc_Data>&)>(_1aae49684_builtin_caller_make);
	_1aae49684_BUILTIN_FN_APPEND->_field_caller=jule::Fn<jule::Ref<_1ab00dbcc_Data>(jule::Ref<_1ab00dbcc_Eval>&,jule::Ref<_1b61ca014_FnCallExpr>&,jule::Ref<_1ab00dbcc_Data>&)>(_1aae49684_builtin_caller_append);
	_1aae49684_BUILTIN_FN_COPY->_field_caller=jule::Fn<jule::Ref<_1ab00dbcc_Data>(jule::Ref<_1ab00dbcc_Eval>&,jule::Ref<_1b61ca014_FnCallExpr>&,jule::Ref<_1ab00dbcc_Data>&)>(_1aae49684_builtin_caller_copy);
	_1aae49684_BUILTIN_FN_RECOVER->_field_caller=jule::Fn<jule::Ref<_1ab00dbcc_Data>(jule::Ref<_1ab00dbcc_Eval>&,jule::Ref<_1b61ca014_FnCallExpr>&,jule::Ref<_1ab00dbcc_Data>&)>(_1aae49684_builtin_caller_recover);
	_1aae49684_BUILTIN_FN_CLONE->_field_caller=jule::Fn<jule::Ref<_1ab00dbcc_Data>(jule::Ref<_1ab00dbcc_Eval>&,jule::Ref<_1b61ca014_FnCallExpr>&,jule::Ref<_1ab00dbcc_Data>&)>(_1aae49684_builtin_caller_clone);
	_1aae49684_BUILTIN_FN_STD_MEM_SIZE_OF->_field_caller=jule::Fn<jule::Ref<_1ab00dbcc_Data>(jule::Ref<_1ab00dbcc_Eval>&,jule::Ref<_1b61ca014_FnCallExpr>&,jule::Ref<_1ab00dbcc_Data>&)>(_1aae49684_builtin_caller_std_mem_size_of);
	_1aae49684_BUILTIN_FN_STD_MEM_ALIGN_OF->_field_caller=jule::Fn<jule::Ref<_1ab00dbcc_Data>(jule::Ref<_1ab00dbcc_Eval>&,jule::Ref<_1b61ca014_FnCallExpr>&,jule::Ref<_1ab00dbcc_Data>&)>(_1aae49684_builtin_caller_std_mem_align_of);
	_1aae49684_BUILTIN_FN_STD_JULE_INTEGRATED_TO_STR->_field_caller=jule::Fn<jule::Ref<_1ab00dbcc_Data>(jule::Ref<_1ab00dbcc_Eval>&,jule::Ref<_1b61ca014_FnCallExpr>&,jule::Ref<_1ab00dbcc_Data>&)>(_1aae49684_builtin_caller_std_jule_integrated_to_str);
	jule::Ref<_1b557cd24_Fn> _11213_error_method = _1aae49684_BUILTIN_TRAIT_ERROR->_method_find_method(jule::Str("error", 5));
	jule::Ref<_1b557cd24_FnIns> _11313_error_method_ins = _11213_error_method->_method_instance();
	_11313_error_method_ins->_field_result=jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_1ac6d02c0_build_prim_type(jule::Str("str", 3))));
	_11313_error_method_ins->_field_caller=jule::Fn<jule::Ref<_1ab00dbcc_Data>(jule::Ref<_1ab00dbcc_Eval>&,jule::Ref<_1b61ca014_FnCallExpr>&,jule::Ref<_1ab00dbcc_Data>&)>(_1aae49684_builtin_caller_common);
	_11213_error_method->_method_append_instance(_11313_error_method_ins);
	jule::Ref<_1b557cd24_Fn> _11813_dispose_method = _1aae49684_BUILTIN_TRAIT_DISPOSE->_method_find_method(jule::Str("dispose", 7));
	jule::Ref<_1b557cd24_FnIns> _11913_dispose_method_ins = _11813_dispose_method->_method_instance();
	_11913_dispose_method_ins->_field_caller=jule::Fn<jule::Ref<_1ab00dbcc_Data>(jule::Ref<_1ab00dbcc_Eval>&,jule::Ref<_1b61ca014_FnCallExpr>&,jule::Ref<_1ab00dbcc_Data>&)>(_1aae49684_builtin_caller_common);
	_11813_dispose_method->_method_append_instance(_11913_dispose_method_ins);
}



inline jule::Ref<_1b557cd24_FnIns> _1aae49684_find_builtin_fn(jule::Str _12420_ident) {
	{
		auto _match_expr{ _12420_ident };
		if (!((jule::Str("out", 3)) == _match_expr)) { goto _case_end_4438169152; }
		_case_begin_4438169152:;
		{
			return _1aae49684_BUILTIN_FN_OUT;
		}
		goto _match_end_4438166576;
		_case_end_4438169152:;
		if (!((jule::Str("outln", 5)) == _match_expr)) { goto _case_end_4438169728; }
		_case_begin_4438169728:;
		{
			return _1aae49684_BUILTIN_FN_OUTLN;
		}
		goto _match_end_4438166576;
		_case_end_4438169728:;
		if (!((jule::Str("new", 3)) == _match_expr)) { goto _case_end_4438168736; }
		_case_begin_4438168736:;
		{
			return _1aae49684_BUILTIN_FN_NEW;
		}
		goto _match_end_4438166576;
		_case_end_4438168736:;
		if (!((jule::Str("real", 4)) == _match_expr)) { goto _case_end_4438168944; }
		_case_begin_4438168944:;
		{
			return _1aae49684_BUILTIN_FN_REAL;
		}
		goto _match_end_4438166576;
		_case_end_4438168944:;
		if (!((jule::Str("drop", 4)) == _match_expr)) { goto _case_end_4438169392; }
		_case_begin_4438169392:;
		{
			return _1aae49684_BUILTIN_FN_DROP;
		}
		goto _match_end_4438166576;
		_case_end_4438169392:;
		if (!((jule::Str("panic", 5)) == _match_expr)) { goto _case_end_4438169504; }
		_case_begin_4438169504:;
		{
			return _1aae49684_BUILTIN_FN_PANIC;
		}
		goto _match_end_4438166576;
		_case_end_4438169504:;
		if (!((jule::Str("make", 4)) == _match_expr)) { goto _case_end_4438168336; }
		_case_begin_4438168336:;
		{
			return _1aae49684_BUILTIN_FN_MAKE;
		}
		goto _match_end_4438166576;
		_case_end_4438168336:;
		if (!((jule::Str("append", 6)) == _match_expr)) { goto _case_end_4438168448; }
		_case_begin_4438168448:;
		{
			return _1aae49684_BUILTIN_FN_APPEND;
		}
		goto _match_end_4438166576;
		_case_end_4438168448:;
		if (!((jule::Str("copy", 4)) == _match_expr)) { goto _case_end_4438168560; }
		_case_begin_4438168560:;
		{
			return _1aae49684_BUILTIN_FN_COPY;
		}
		goto _match_end_4438166576;
		_case_end_4438168560:;
		if (!((jule::Str("recover", 7)) == _match_expr)) { goto _case_end_4438167728; }
		_case_begin_4438167728:;
		{
			return _1aae49684_BUILTIN_FN_RECOVER;
		}
		goto _match_end_4438166576;
		_case_end_4438167728:;
		if (!((jule::Str("clone", 5)) == _match_expr)) { goto _case_end_4438167840; }
		_case_begin_4438167840:;
		{
			return _1aae49684_BUILTIN_FN_CLONE;
		}
		goto _match_end_4438166576;
		_case_end_4438167840:;
		_case_begin_4438167344:;
		{
			return jule::new_ref<_1b557cd24_FnIns>();
		}
		goto _match_end_4438166576;
		_case_end_4438167344:;
		_match_end_4438166576:;
	}
}



inline jule::Ref<_1ac6d02c0_TypeAlias> _1aae49684_find_builtin_type_alias(jule::Str _14128_ident) {
	{
		auto _match_expr{ _14128_ident };
		if (!((jule::Str("byte", 4)) == _match_expr)) { goto _case_end_4438177984; }
		_case_begin_4438177984:;
		{
			return _1aae49684_BUILTIN_TYPE_ALIAS_BYTE;
		}
		goto _match_end_4438174416;
		_case_end_4438177984:;
		if (!((jule::Str("rune", 4)) == _match_expr)) { goto _case_end_4438176992; }
		_case_begin_4438176992:;
		{
			return _1aae49684_BUILTIN_TYPE_ALIAS_RUNE;
		}
		goto _match_end_4438174416;
		_case_end_4438176992:;
		_case_begin_4438175264:;
		{
			return jule::new_ref<_1ac6d02c0_TypeAlias>();
		}
		goto _match_end_4438174416;
		_case_end_4438175264:;
		_match_end_4438174416:;
	}
}



inline jule::Ref<_1aaee9091_Trait> _1aae49684_find_builtin_trait(jule::Str _14923_ident) {
	{
		auto _match_expr{ _14923_ident };
		if (!((jule::Str("Error", 5)) == _match_expr)) { goto _case_end_4438181040; }
		_case_begin_4438181040:;
		{
			return _1aae49684_BUILTIN_TRAIT_ERROR;
		}
		goto _match_end_4438177648;
		_case_end_4438181040:;
		if (!((jule::Str("Dispose", 7)) == _match_expr)) { goto _case_end_4438180048; }
		_case_begin_4438180048:;
		{
			return _1aae49684_BUILTIN_TRAIT_DISPOSE;
		}
		goto _match_end_4438177648;
		_case_end_4438180048:;
		_case_begin_4438176400:;
		{
			return jule::new_ref<_1aaee9091_Trait>();
		}
		goto _match_end_4438177648;
		_case_end_4438176400:;
		_match_end_4438177648:;
	}
}



inline jule::Any _1aae49684_find_builtin_def(jule::Str _15721_ident) {
	jule::Ref<_1b557cd24_FnIns> _15813_f = _1aae49684_find_builtin_fn(_15721_ident);
	if (jule::real(_15813_f)) {
		return jule::Any(_15813_f);
	}
	jule::Ref<_1ac6d02c0_TypeAlias> _16313_ta = _1aae49684_find_builtin_type_alias(_15721_ident);
	if (jule::real(_16313_ta)) {
		return jule::Any(_16313_ta);
	}
	jule::Ref<_1aaee9091_Trait> _16813_t = _1aae49684_find_builtin_trait(_15721_ident);
	if (jule::real(_16813_t)) {
		return jule::Any(_16813_t);
	}
	return jule::Any(nullptr);
}



inline jule::Any _1aae49684_find_builtin_def_std_mem(jule::Str _17629_ident) {
	{
		auto _match_expr{ _17629_ident };
		if (!((jule::Str("size_of", 7)) == _match_expr)) { goto _case_end_4438189968; }
		_case_begin_4438189968:;
		{
			return jule::Any(_1aae49684_BUILTIN_FN_STD_MEM_SIZE_OF);
		}
		goto _match_end_4438187456;
		_case_end_4438189968:;
		if (!((jule::Str("align_of", 8)) == _match_expr)) { goto _case_end_4438190528; }
		_case_begin_4438190528:;
		{
			return jule::Any(_1aae49684_BUILTIN_FN_STD_MEM_ALIGN_OF);
		}
		goto _match_end_4438187456;
		_case_end_4438190528:;
		_case_begin_4438188640:;
		{
			return jule::Any(nullptr);
		}
		goto _match_end_4438187456;
		_case_end_4438188640:;
		_match_end_4438187456:;
	}
}



inline jule::Any _1aae49684_find_builtin_def_std_jule_integrated(jule::Str _18441_ident) {
	{
		auto _match_expr{ _18441_ident };
		if (!((jule::Str("to_str", 6)) == _match_expr)) { goto _case_end_4438193392; }
		_case_begin_4438193392:;
		{
			return jule::Any(_1aae49684_BUILTIN_FN_STD_JULE_INTEGRATED_TO_STR);
		}
		goto _match_end_4438192352;
		_case_end_4438193392:;
		_case_begin_4438191504:;
		{
			return jule::Any(nullptr);
		}
		goto _match_end_4438192352;
		_case_end_4438191504:;
		_match_end_4438192352:;
	}
}



inline jule::Any _1aae49684_find_package_builtin_def(jule::Str _19129_link_path,jule::Str _19145_ident) {
	{
		auto _match_expr{ _19129_link_path };
		if (!((jule::Str("std::mem", 8)) == _match_expr)) { goto _case_end_4438196736; }
		_case_begin_4438196736:;
		{
			return _1aae49684_find_builtin_def_std_mem(_19145_ident);
		}
		goto _match_end_4438194208;
		_case_end_4438196736:;
		if (!((jule::Str("std::jule::integrated", 21)) == _match_expr)) { goto _case_end_4438197296; }
		_case_begin_4438197296:;
		{
			return _1aae49684_find_builtin_def_std_jule_integrated(_19145_ident);
		}
		goto _match_end_4438194208;
		_case_end_4438197296:;
		_case_begin_4438195312:;
		{
			return jule::Any(nullptr);
		}
		goto _match_end_4438194208;
		_case_end_4438195312:;
		_match_end_4438194208:;
	}
}



inline jule::Ref<_1ab00dbcc_Data> _1aae49684_builtin_caller_common_plain(jule::Ref<_1ab00dbcc_Eval>& _19937_e,jule::Ref<_1b61ca014_FnCallExpr>& _19952_fc,jule::Ref<_1ab00dbcc_Data>& _19974_d) {
	jule::Ref<_1b557cd24_FnIns> _20013_f = _19974_d->_field_kind->_method_fnc();
	_1a8dc912c_FnCallArgChecker _20213_fcac = _1a8dc912c_FnCallArgChecker(_19937_e,_19952_fc->_field_args,_19952_fc->_field_token,_20013_f,false,jule::Slice<jule::Any>());
	_20213_fcac._method_check();
	jule::Ref<_1ab33d083_FnCallExprModel> _21113_model = jule::new_struct<_1ab33d083_FnCallExprModel>(new( std::nothrow ) _1ab33d083_FnCallExprModel(_20013_f,_19952_fc->_field_concurrent,_19974_d->_field_model,_20213_fcac._field_arg_models));
	if ((!(jule::real(_20013_f->_field_result)))) {
		_19974_d=_1ab00dbcc_build_void_data();
	} else {
		_19974_d=jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(_20013_f->_field_result,jule::Ref<_1ac6d02c0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1ac90c3ed_Const>()));
	}
	_19974_d->_field_model=jule::Any(_21113_model);
	return _19974_d;
}



inline jule::Ref<_1ab00dbcc_Data> _1aae49684_builtin_caller_common(jule::Ref<_1ab00dbcc_Eval>& _23031_e,jule::Ref<_1b61ca014_FnCallExpr>& _23046_fc,jule::Ref<_1ab00dbcc_Data>& _23068_d) {
	if (_23046_fc->_field_generics.len() > 0LL) {
		_23031_e->_method_push_err(_23046_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	return _1aae49684_builtin_caller_common_plain(_23031_e,_23046_fc,_23068_d);
}



inline jule::Ref<_1ab00dbcc_Data> _1aae49684_builtin_caller_common_mut(jule::Ref<_1ab00dbcc_Eval>& _23835_e,jule::Ref<_1b61ca014_FnCallExpr>& _23850_fc,jule::Ref<_1ab00dbcc_Data>& _23872_d) {
	if ((!(_23872_d->_field_mutable))) {
		_23835_e->_method_push_err(_23850_fc->_field_token,jule::Str("mutable operation cannot used with immutable define", 51),jule::Slice<jule::Any>({}));
	}
	return _1aae49684_builtin_caller_common(_23835_e,_23850_fc,_23872_d);
}



inline jule::Ref<_1ab00dbcc_Data> _1aae49684_builtin_caller_out(jule::Ref<_1ab00dbcc_Eval>& _24528_e,jule::Ref<_1b61ca014_FnCallExpr>& _24543_fc,jule::Ref<_1ab00dbcc_Data>& ) {
	if (_24543_fc->_field_generics.len() > 0LL) {
		_24528_e->_method_push_err(_24543_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_24543_fc->_field_args.len() < 1LL) {
		_24528_e->_method_push_err(_24543_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("v", 1))}));
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	if (_24543_fc->_field_args.len() > 1LL) {
		_24528_e->_method_push_err(_24543_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1ab00dbcc_Data> _25713_expr = _24528_e->_method_eval_expr(_24543_fc->_field_args[0LL]);
	if ((!(jule::real(_25713_expr)))) {
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	if ((_25713_expr->_method_is_void() || jule::real(_25713_expr->_field_kind->_method_fnc())) || jule::real(_25713_expr->_field_kind->_method_tup())) {
		_24528_e->_method_push_err(_24543_fc->_field_args[0LL]->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	jule::Ref<_1ab00dbcc_Data> _26713_d = _1ab00dbcc_build_void_data();
	_26713_d->_field_model=jule::Any(jule::new_struct<_1ab33d083_BuiltinOutCallExprModel>(new( std::nothrow ) _1ab33d083_BuiltinOutCallExprModel(_25713_expr->_field_model)));
	return _26713_d;
}



inline jule::Ref<_1ab00dbcc_Data> _1aae49684_builtin_caller_outln(jule::Ref<_1ab00dbcc_Eval>& _27230_e,jule::Ref<_1b61ca014_FnCallExpr>& _27245_fc,jule::Ref<_1ab00dbcc_Data>& _27267_d) {
	_27267_d=_1aae49684_builtin_caller_out(_27230_e,_27245_fc,_27267_d);
	if ((!(jule::real(_27267_d)))) {
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	_27267_d->_field_model=jule::Any(jule::new_struct<_1ab33d083_BuiltinOutlnCallExprModel>(new( std::nothrow ) _1ab33d083_BuiltinOutlnCallExprModel(_27267_d->_field_model.operator jule::Ref<_1ab33d083_BuiltinOutCallExprModel>()->_field_expr)));
	return _27267_d;
}



inline jule::Ref<_1ab00dbcc_Data> _1aae49684_builtin_caller_new(jule::Ref<_1ab00dbcc_Eval>& _28428_e,jule::Ref<_1b61ca014_FnCallExpr>& _28443_fc,jule::Ref<_1ab00dbcc_Data>& _28465_d) {
	if (_28443_fc->_field_generics.len() > 0LL) {
		_28428_e->_method_push_err(_28443_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_28443_fc->_field_args.len() < 1LL) {
		_28428_e->_method_push_err(_28443_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type", 4))}));
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	if (_28443_fc->_field_args.len() > 2LL) {
		_28428_e->_method_push_err(_28443_fc->_field_args[2LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1ab00dbcc_Data> _29613_t = _28428_e->_method_eval_expr_kind(_28443_fc->_field_args[0LL]->_field_kind);
	if ((!(jule::real(_29613_t)))) {
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	if ((!(_29613_t->_field_decl))) {
		_28428_e->_method_push_err(_28443_fc->_field_args[0LL]->_field_token,jule::Str("invalid data-type", 17),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	if ((!(_1ac6d02c0_is_valid_for_ref_type(_29613_t->_field_kind)))) {
		jule::Ref<_1b5e07a00_StructIns> _30717_s = _29613_t->_field_kind->_method_strct();
		if ((jule::real(_30717_s) && jule::real(_30717_s->_field_decl)) && _30717_s->_field_decl->_field_cpp_linked) {
			_28428_e->_method_push_err(_28443_fc->_field_args[0LL]->_field_token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>({}));
		} else {
			_28428_e->_method_push_err(_28443_fc->_field_args[0LL]->_field_token,jule::Str("invalid data-type", 17),jule::Slice<jule::Any>({}));
		}
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	_28465_d->_field_kind=jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1ac6d02c0_Ref>(new( std::nothrow ) _1ac6d02c0_Ref(_29613_t->_field_kind->_method_clone()))));
	if (_28443_fc->_field_args.len() == 2LL) {
		jule::Ref<_1ab00dbcc_Data> _31917_init = _28428_e->_field_s->_method_evalp(_28443_fc->_field_args[1LL],_28428_e->_field_lookup,_29613_t->_field_kind);
		if (jule::real(_31917_init)) {
			_29613_t->_field_mutable=true;
			_1ab009de8_check_mut(_28428_e->_field_s,_29613_t,_31917_init,_28443_fc->_field_args[1LL]->_field_token);
			_28428_e->_field_s->_method_check_assign_type(false,_29613_t->_field_kind,_31917_init,_28443_fc->_field_args[1LL]->_field_token,false);
			if (jule::real(_31917_init->_field_kind->_method_ref())) {
				_31917_init->_field_model=jule::Any(jule::new_struct<_1ab33d083_ExplicitDerefExprModel>(new( std::nothrow ) _1ab33d083_ExplicitDerefExprModel(_31917_init->_field_model)));
			}
			_28465_d->_field_model=jule::Any(jule::new_struct<_1ab33d083_BuiltinNewCallExprModel>(new( std::nothrow ) _1ab33d083_BuiltinNewCallExprModel(_29613_t->_field_kind,_31917_init->_field_model)));
		}
	} else {
		_28465_d->_field_model=jule::Any(jule::new_struct<_1ab33d083_BuiltinNewCallExprModel>(new( std::nothrow ) _1ab33d083_BuiltinNewCallExprModel(_29613_t->_field_kind,jule::Any())));
	}
	return _28465_d;
}



inline jule::Ref<_1ab00dbcc_Data> _1aae49684_builtin_caller_real(jule::Ref<_1ab00dbcc_Eval>& _34329_e,jule::Ref<_1b61ca014_FnCallExpr>& _34344_fc,jule::Ref<_1ab00dbcc_Data>& _34366_d) {
	if (_34344_fc->_field_generics.len() > 0LL) {
		_34329_e->_method_push_err(_34344_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_34344_fc->_field_args.len() < 1LL) {
		_34329_e->_method_push_err(_34344_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("ref", 3))}));
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	if (_34344_fc->_field_args.len() > 1LL) {
		_34329_e->_method_push_err(_34344_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1ab00dbcc_Data> _35513_ref = _34329_e->_method_eval_expr(_34344_fc->_field_args[0LL]);
	if ((!(jule::real(_35513_ref)))) {
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	if ((!(jule::real(_35513_ref->_field_kind->_method_ref())))) {
		_34329_e->_method_push_err(_34344_fc->_field_args[0LL]->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		_34329_e->_method_push_suggestion(jule::Str("expression must be reference type", 33),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	_34366_d->_field_kind=_1aae49684_BUILTIN_FN_REAL->_field_result;
	_34366_d->_field_model=jule::Any(jule::new_struct<_1ab33d083_BuiltinRealCallExprModel>(new( std::nothrow ) _1ab33d083_BuiltinRealCallExprModel(_35513_ref->_field_model)));
	return _34366_d;
}



inline jule::Ref<_1ab00dbcc_Data> _1aae49684_builtin_caller_drop(jule::Ref<_1ab00dbcc_Eval>& _37129_e,jule::Ref<_1b61ca014_FnCallExpr>& _37144_fc,jule::Ref<_1ab00dbcc_Data>& ) {
	if (_37144_fc->_field_generics.len() > 0LL) {
		_37129_e->_method_push_err(_37144_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_37144_fc->_field_args.len() < 1LL) {
		_37129_e->_method_push_err(_37144_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("ref", 3))}));
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	if (_37144_fc->_field_args.len() > 1LL) {
		_37129_e->_method_push_err(_37144_fc->_field_args[2LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1ab00dbcc_Data> _38313_ref = _37129_e->_method_eval_expr(_37144_fc->_field_args[0LL]);
	if ((!(jule::real(_38313_ref)))) {
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	if ((!(jule::real(_38313_ref->_field_kind->_method_ref())))) {
		_37129_e->_method_push_err(_37144_fc->_field_args[0LL]->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		_37129_e->_method_push_suggestion(jule::Str("expression must be reference type", 33),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	_1ab009de8_check_mut(_37129_e->_field_s,_38313_ref,jule::new_ref<_1ab00dbcc_Data>(),_37144_fc->_field_args[0LL]->_field_token);
	jule::Ref<_1ab00dbcc_Data> _39613_d = _1ab00dbcc_build_void_data();
	_39613_d->_field_model=jule::Any(jule::new_struct<_1ab33d083_BuiltinDropCallExprModel>(new( std::nothrow ) _1ab33d083_BuiltinDropCallExprModel(_38313_ref->_field_model)));
	return _39613_d;
}



inline jule::Ref<_1ab00dbcc_Data> _1aae49684_builtin_caller_panic(jule::Ref<_1ab00dbcc_Eval>& _40130_e,jule::Ref<_1b61ca014_FnCallExpr>& _40145_fc,jule::Ref<_1ab00dbcc_Data>& ) {
	if (_40145_fc->_field_generics.len() > 0LL) {
		_40130_e->_method_push_err(_40145_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_40145_fc->_field_args.len() < 1LL) {
		_40130_e->_method_push_err(_40145_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("error", 5))}));
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	if (_40145_fc->_field_args.len() > 1LL) {
		_40130_e->_method_push_err(_40145_fc->_field_args[2LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1ab00dbcc_Data> _41313_expr = _40130_e->_method_eval_expr(_40145_fc->_field_args[0LL]);
	if ((!(jule::real(_41313_expr)))) {
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	if (jule::real(_41313_expr->_field_kind->_method_strct())) {
		jule::Ref<_1b5e07a00_StructIns> _41913_s = _41313_expr->_field_kind->_method_strct();
		if (_41913_s->_field_decl->_method_is_implements(_1aae49684_BUILTIN_TRAIT_ERROR)) {
			_41313_expr->_field_cast_kind=jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_1aae49684_BUILTIN_TRAIT_ERROR));
			_1ab00dbcc_apply_cast_kind(_41313_expr);
		}
	}
	jule::Ref<_1ab00dbcc_Data> _42813_d = _1ab00dbcc_build_void_data();
	_42813_d->_field_model=jule::Any(jule::new_struct<_1ab33d083_BuiltinPanicCallExprModel>(new( std::nothrow ) _1ab33d083_BuiltinPanicCallExprModel(_41313_expr->_field_model)));
	return _42813_d;
}



inline jule::Ref<_1ab00dbcc_Data> _1aae49684_builtin_caller_make(jule::Ref<_1ab00dbcc_Eval>& _43329_e,jule::Ref<_1b61ca014_FnCallExpr>& _43344_fc,jule::Ref<_1ab00dbcc_Data>& _43366_d) {
	if (_43344_fc->_field_generics.len() > 0LL) {
		_43329_e->_method_push_err(_43344_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_43344_fc->_field_args.len() < 2LL) {
		if (_43344_fc->_field_args.len() == 1LL) {
			_43329_e->_method_push_err(_43344_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("size", 4))}));
			return jule::new_ref<_1ab00dbcc_Data>();
		}
		_43329_e->_method_push_err(_43344_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type, size", 10))}));
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	if (_43344_fc->_field_args.len() > 3LL) {
		_43329_e->_method_push_err(_43344_fc->_field_args[3LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1ab00dbcc_Data> _44913_t = _43329_e->_method_eval_expr_kind(_43344_fc->_field_args[0LL]->_field_kind);
	if ((!(jule::real(_44913_t)))) {
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	if ((!(_44913_t->_field_decl)) || (!(jule::real(_44913_t->_field_kind->_method_slc())))) {
		_43329_e->_method_push_err(_43344_fc->_field_args[0LL]->_field_token,jule::Str("invalid data-type", 17),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	_43366_d->_field_kind=_44913_t->_field_kind;
	jule::Ref<_1ab00dbcc_Data> _46113_len = _43329_e->_field_s->_method_evalp(_43344_fc->_field_args[1LL],_43329_e->_field_lookup,_44913_t->_field_kind);
	if ((!(jule::real(_46113_len)))) {
		return _43366_d;
	}
	_43329_e->_method_check_integer_indexing_by_data(_46113_len,_43344_fc->_field_args[1LL]->_field_token);
	if (_43344_fc->_field_args.len() == 3LL) {
		jule::Ref<_1ab00dbcc_Data> _46917_cap = _43329_e->_field_s->_method_evalp(_43344_fc->_field_args[2LL],_43329_e->_field_lookup,_44913_t->_field_kind);
		if ((!(jule::real(_46917_cap)))) {
			return _43366_d;
		}
		_43329_e->_method_check_integer_indexing_by_data(_46917_cap,_43344_fc->_field_args[2LL]->_field_token);
		_43366_d->_field_model=jule::Any(jule::new_struct<_1ab33d083_BuiltinMakeCallExprModel>(new( std::nothrow ) _1ab33d083_BuiltinMakeCallExprModel(_44913_t->_field_kind,_46113_len->_field_model,_46917_cap->_field_model)));
	} else {
		_43366_d->_field_model=jule::Any(jule::new_struct<_1ab33d083_BuiltinMakeCallExprModel>(new( std::nothrow ) _1ab33d083_BuiltinMakeCallExprModel(_44913_t->_field_kind,_46113_len->_field_model,jule::Any())));
	}
	return _43366_d;
}



inline jule::Ref<_1ab00dbcc_Data> _1aae49684_builtin_caller_append(jule::Ref<_1ab00dbcc_Eval>& _49031_e,jule::Ref<_1b61ca014_FnCallExpr>& _49046_fc,jule::Ref<_1ab00dbcc_Data>& _49068_d) {
	if (_49046_fc->_field_generics.len() > 0LL) {
		_49031_e->_method_push_err(_49046_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_49046_fc->_field_args.len() < 2LL) {
		if (_49046_fc->_field_args.len() == 1LL) {
			_49031_e->_method_push_err(_49046_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src", 3))}));
			return jule::new_ref<_1ab00dbcc_Data>();
		}
		_49031_e->_method_push_err(_49046_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src, values", 11))}));
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	jule::Ref<_1ab00dbcc_Data> _50313_t = _49031_e->_method_eval_expr(_49046_fc->_field_args[0LL]);
	if ((!(jule::real(_50313_t)))) {
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	jule::Bool _50813_ref = false;
	if (jule::real(_50313_t->_field_kind->_method_ref())) {
		_50313_t->_field_kind=_50313_t->_field_kind->_method_ref()->_field_elem;
		_50813_ref=true;
	}
	if ((!(jule::real(_50313_t->_field_kind->_method_slc())))) {
		_49031_e->_method_push_err(_49046_fc->_field_args[0LL]->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	jule::Ref<_1b557cd24_FnIns> _51913_f = jule::new_struct<_1b557cd24_FnIns>(new( std::nothrow ) _1b557cd24_FnIns(jule::Ref<_1b5e07a00_StructIns>(),jule::Ref<_1b557cd24_Fn>(),jule::Slice<jule::Ref<_1ac6d02c0_TypeKind>>(),jule::Slice<jule::Ref<_1b557cd24_ParamIns>>({jule::new_struct<_1b557cd24_ParamIns>(new( std::nothrow ) _1b557cd24_ParamIns(jule::new_struct<_1b557cd24_Param>(new( std::nothrow ) _1b557cd24_Param(_1b61ec5ec_Token(),true,jule::Bool(),jule::Bool(),jule::Ref<_1ac6d02c0_TypeSymbol>(),jule::Str())),_50313_t->_field_kind->_method_clone())),jule::new_struct<_1b557cd24_ParamIns>(new( std::nothrow ) _1b557cd24_ParamIns(jule::new_struct<_1b557cd24_Param>(new( std::nothrow ) _1b557cd24_Param(_1b61ec5ec_Token(),true,true,jule::Bool(),jule::Ref<_1ac6d02c0_TypeSymbol>(),jule::Str())),_50313_t->_field_kind->_method_slc()->_field_elem->_method_clone()))}),_50313_t->_field_kind->_method_clone(),jule::Ref<_1ab009de8_Scope>(),jule::Ref<_1b5589c76_ReferenceStack>(),jule::Ref<_1b5589c76_ReferenceStack>(),jule::Fn<jule::Ref<_1ab00dbcc_Data>(jule::Ref<_1ab00dbcc_Eval>&,jule::Ref<_1b61ca014_FnCallExpr>&,jule::Ref<_1ab00dbcc_Data>&)>(_1aae49684_builtin_caller_common_plain),jule::Bool(),jule::Bool()));
	_49068_d->_field_kind=jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_51913_f));
	_49068_d->_field_model=jule::Any(jule::new_struct<_1ab33d083_CommonIdentExprModel>(new( std::nothrow ) _1ab33d083_CommonIdentExprModel(jule::Str("append", 6))));
	_49068_d=_1aae49684_builtin_caller_common_plain(_49031_e,_49046_fc,_49068_d);
	if (jule::real(_49068_d)) {
		jule::Ref<_1ab33d083_FnCallExprModel> _54317_model = _49068_d->_field_model.operator jule::Ref<_1ab33d083_FnCallExprModel>();
		if (_50813_ref) {
			_54317_model->_field_args[0LL]=jule::Any(jule::new_struct<_1ab33d083_ExplicitDerefExprModel>(new( std::nothrow ) _1ab33d083_ExplicitDerefExprModel(_50313_t->_field_model)));
		}
		_49068_d->_field_model=jule::Any(jule::new_struct<_1ab33d083_BuiltinAppendCallExprModel>(new( std::nothrow ) _1ab33d083_BuiltinAppendCallExprModel(_54317_model->_field_args[0LL],_54317_model->_field_args[1LL])));
	}
	return _49068_d;
}



inline jule::Ref<_1ab00dbcc_Data> _1aae49684_builtin_caller_copy(jule::Ref<_1ab00dbcc_Eval>& _55729_e,jule::Ref<_1b61ca014_FnCallExpr>& _55744_fc,jule::Ref<_1ab00dbcc_Data>& _55766_d) {
	if (_55744_fc->_field_generics.len() > 0LL) {
		_55729_e->_method_push_err(_55744_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_55744_fc->_field_args.len() < 2LL) {
		if (_55744_fc->_field_args.len() == 1LL) {
			_55729_e->_method_push_err(_55744_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src", 3))}));
			return jule::new_ref<_1ab00dbcc_Data>();
		}
		_55729_e->_method_push_err(_55744_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src, values", 11))}));
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	if (_55744_fc->_field_args.len() > 2LL) {
		_55729_e->_method_push_err(_55744_fc->_field_args[2LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1ab00dbcc_Data> _57313_t = _55729_e->_method_eval_expr(_55744_fc->_field_args[0LL]);
	if ((!(jule::real(_57313_t)))) {
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	jule::Bool _57813_ref = false;
	if (jule::real(_57313_t->_field_kind->_method_ref())) {
		_57313_t->_field_kind=_57313_t->_field_kind->_method_ref()->_field_elem;
		_57813_ref=false;
	}
	if ((!(jule::real(_57313_t->_field_kind->_method_slc())))) {
		_55729_e->_method_push_err(_55744_fc->_field_args[0LL]->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	if ((!(_57313_t->_field_mutable))) {
		_55729_e->_method_push_err(_55744_fc->_field_args[0LL]->_field_token,jule::Str("mutable operation cannot used with immutable define", 51),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1b557cd24_FnIns> _59313_f = jule::new_struct<_1b557cd24_FnIns>(new( std::nothrow ) _1b557cd24_FnIns(jule::Ref<_1b5e07a00_StructIns>(),jule::Ref<_1b557cd24_Fn>(),jule::Slice<jule::Ref<_1ac6d02c0_TypeKind>>(),jule::Slice<jule::Ref<_1b557cd24_ParamIns>>({jule::new_struct<_1b557cd24_ParamIns>(new( std::nothrow ) _1b557cd24_ParamIns(jule::new_struct<_1b557cd24_Param>(new( std::nothrow ) _1b557cd24_Param()),_57313_t->_field_kind->_method_clone())),jule::new_struct<_1b557cd24_ParamIns>(new( std::nothrow ) _1b557cd24_ParamIns(jule::new_struct<_1b557cd24_Param>(new( std::nothrow ) _1b557cd24_Param(_1b61ec5ec_Token(),true,jule::Bool(),jule::Bool(),jule::Ref<_1ac6d02c0_TypeSymbol>(),jule::Str())),_57313_t->_field_kind->_method_clone()))}),_1aae49684_BUILTIN_FN_COPY->_field_result,jule::Ref<_1ab009de8_Scope>(),jule::Ref<_1b5589c76_ReferenceStack>(),jule::Ref<_1b5589c76_ReferenceStack>(),jule::Fn<jule::Ref<_1ab00dbcc_Data>(jule::Ref<_1ab00dbcc_Eval>&,jule::Ref<_1b61ca014_FnCallExpr>&,jule::Ref<_1ab00dbcc_Data>&)>(_1aae49684_builtin_caller_common_plain),jule::Bool(),jule::Bool()));
	_55766_d->_field_kind=jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_59313_f));
	_55766_d->_field_model=jule::Any(jule::new_struct<_1ab33d083_CommonIdentExprModel>(new( std::nothrow ) _1ab33d083_CommonIdentExprModel(jule::Str("copy", 4))));
	_55766_d=_1aae49684_builtin_caller_common_plain(_55729_e,_55744_fc,_55766_d);
	if (jule::real(_55766_d) && _57813_ref) {
		_55766_d->_field_model.operator jule::Ref<_1ab33d083_FnCallExprModel>()->_field_args[0LL]=jule::Any(jule::new_struct<_1ab33d083_ExplicitDerefExprModel>(new( std::nothrow ) _1ab33d083_ExplicitDerefExprModel(_57313_t->_field_model)));
	}
	return _55766_d;
}



inline jule::Ref<_1ab00dbcc_Data> _1aae49684_builtin_caller_recover(jule::Ref<_1ab00dbcc_Eval>& _62232_e,jule::Ref<_1b61ca014_FnCallExpr>& _62247_fc,jule::Ref<_1ab00dbcc_Data>& ) {
	if (_62247_fc->_field_generics.len() > 0LL) {
		_62232_e->_method_push_err(_62247_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	
	if (_62247_fc->_field_args.len() < 1LL) {
		_62232_e->_method_push_err(_62247_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("handler", 7))}));
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	if (_62247_fc->_field_args.len() > 1LL) {
		_62232_e->_method_push_err(_62247_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1ab00dbcc_Data> _63613_t = _62232_e->_method_eval_expr(_62247_fc->_field_args[0LL]);
	if ((!(jule::real(_63613_t)))) {
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	if ((!(jule::real(_63613_t->_field_kind->_method_fnc())))) {
		_62232_e->_method_push_err(_62247_fc->_field_args[0LL]->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	jule::Str _6469_tkind = _63613_t->_field_kind->_method_fnc()->_method_to_str();
	if (_6469_tkind != jule::Str("fn(Error)", 9)) {
		_62232_e->_method_push_err(_62247_fc->_field_args[0LL]->_field_token,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_6469_tkind),jule::Any(jule::Str("fn(Error)", 9))}));
	}
	jule::Ref<_1ab00dbcc_Data> _65113_d = _1ab00dbcc_build_void_data();
	_65113_d->_field_kind=_63613_t->_field_kind->_method_clone();
	_65113_d->_field_model=jule::Any(jule::new_struct<_1ab009de8_Recover>(new( std::nothrow ) _1ab009de8_Recover(jule::Ref<_1b557cd24_FnIns>(),_63613_t->_field_model,jule::Ref<_1ab009de8_Scope>(),jule::Ref<_1b557cd24_FnIns>())));
	return _65113_d;
}



inline jule::Ref<_1ab00dbcc_Data> _1aae49684_builtin_caller_clone(jule::Ref<_1ab00dbcc_Eval>& _65930_e,jule::Ref<_1b61ca014_FnCallExpr>& _65945_fc,jule::Ref<_1ab00dbcc_Data>& ) {
	if (_65945_fc->_field_generics.len() > 0LL) {
		_65930_e->_method_push_err(_65945_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_65945_fc->_field_args.len() < 1LL) {
		_65930_e->_method_push_err(_65945_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("expr", 4))}));
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	if (_65945_fc->_field_args.len() > 1LL) {
		_65930_e->_method_push_err(_65945_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1ab00dbcc_Data> _67213_d = _65930_e->_method_eval_expr_kind(_65945_fc->_field_args[0LL]->_field_kind);
	if ((!(jule::real(_67213_d)))) {
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	jule::Fn<void(jule::Ref<_1ac6d02c0_TypeKind>)> _6779_check_kind = jule::Fn<void(jule::Ref<_1ac6d02c0_TypeKind>)>([=](jule::Ref<_1ac6d02c0_TypeKind> _67729_k) mutable -> void {
		{
			if (!((jule::real(_67729_k->_method_slc())))) { goto _case_end_4438554944; }
			_case_begin_4438554944:;
			{
				if ((!(_67729_k->_method_slc()->_field_elem->_method_supports_cloning()))) {
					_65930_e->_method_push_err(_65945_fc->_field_args[0LL]->_field_token,jule::Str("internal types of \"@\" is not supports cloning", 45),jule::Slice<jule::Any>({jule::Any(_67729_k->_method_to_str())}));
				}
			}
			goto _match_end_4438550080;
			_case_end_4438554944:;
			if (!((jule::real(_67729_k->_method_map())))) { goto _case_end_4438551104; }
			_case_begin_4438551104:;
			{
				jule::Ref<_1ac6d02c0_Map> _68517_m = _67729_k->_method_map();
				if ((!(_68517_m->_field_key->_method_supports_cloning())) || (!(_68517_m->_field_val->_method_supports_cloning()))) {
					_65930_e->_method_push_err(_65945_fc->_field_args[0LL]->_field_token,jule::Str("internal types of \"@\" is not supports cloning", 45),jule::Slice<jule::Any>({jule::Any(_67729_k->_method_to_str())}));
				}
			}
			goto _match_end_4438550080;
			_case_end_4438551104:;
			if (!((jule::real(_67729_k->_method_arr())))) { goto _case_end_4438550576; }
			_case_begin_4438550576:;
			{
				if ((!(_67729_k->_method_arr()->_field_elem->_method_supports_cloning()))) {
					_65930_e->_method_push_err(_65945_fc->_field_args[0LL]->_field_token,jule::Str("internal types of \"@\" is not supports cloning", 45),jule::Slice<jule::Any>({jule::Any(_67729_k->_method_to_str())}));
				}
			}
			goto _match_end_4438550080;
			_case_end_4438550576:;
			if (!((jule::real(_67729_k->_method_ref())))) { goto _case_end_4438550688; }
			_case_begin_4438550688:;
			{
				if ((!(_67729_k->_method_ref()->_field_elem->_method_supports_cloning()))) {
					_65930_e->_method_push_err(_65945_fc->_field_args[0LL]->_field_token,jule::Str("internal types of \"@\" is not supports cloning", 45),jule::Slice<jule::Any>({jule::Any(_67729_k->_method_to_str())}));
				}
			}
			goto _match_end_4438550080;
			_case_end_4438550688:;
			if (!((jule::real(_67729_k->_method_strct())))) { goto _case_end_4438550800; }
			_case_begin_4438550800:;
			{
				jule::Ref<_1b5e07a00_StructIns> _70117_s = _67213_d->_field_kind->_method_strct();
				if ((!(_70117_s->_field_mutable))) {
					_65930_e->_method_push_err(_65945_fc->_field_args[0LL]->_field_token,jule::Str("struct \"@\" is not breaks immutability, do not needs cloning", 59),jule::Slice<jule::Any>({jule::Any(_67213_d->_field_kind->_method_to_str())}));
				}
				if (((!(jule::real(_70117_s->_field_decl))) || _70117_s->_field_decl->_field_cpp_linked) || (!(_70117_s->_field_decl->_method_is_derives(jule::Str("Clone", 5))))) {
					_65930_e->_method_push_err(_65945_fc->_field_args[0LL]->_field_token,jule::Str("type \"@\" is not derives: @", 26),jule::Slice<jule::Any>({jule::Any(_67213_d->_field_kind->_method_to_str()),jule::Any(jule::Str("Clone", 5))}));
				}
			}
			goto _match_end_4438550080;
			_case_end_4438550800:;
			_case_begin_4438550272:;
			{
				_65930_e->_method_push_err(_65945_fc->_field_args[0LL]->_field_token,jule::Str("type \"@\" is not derives: @", 26),jule::Slice<jule::Any>({jule::Any(_67213_d->_field_kind->_method_to_str()),jule::Any(jule::Str("Clone", 5))}));
			}
			goto _match_end_4438550080;
			_case_end_4438550272:;
			_match_end_4438550080:;
		}
	});
	{
		if (!(((!(_67213_d->_field_lvalue))))) { goto _case_end_4438538928; }
		_case_begin_4438538928:;
		{
			_65930_e->_method_push_err(_65945_fc->_field_args[0LL]->_field_token,jule::Str("non-lvalue expressions cannot be clone", 38),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4438579616;
		_case_end_4438538928:;
		if (!(((!(_67213_d->_field_kind->_method_supports_cloning()))))) { goto _case_end_4438592560; }
		_case_begin_4438592560:;
		{
			_6779_check_kind(_67213_d->_field_kind);
		}
		goto _match_end_4438579616;
		_case_end_4438592560:;
		_match_end_4438579616:;
	}
	_67213_d->_field_mutable=true;
	_67213_d->_field_model=jule::Any(jule::new_struct<_1ab33d083_BuiltinCloneCallExprModel>(new( std::nothrow ) _1ab33d083_BuiltinCloneCallExprModel(_67213_d->_field_model)));
	return _67213_d;
}



inline jule::Ref<_1ab00dbcc_Data> _1aae49684_builtin_caller_std_mem_size_of(jule::Ref<_1ab00dbcc_Eval>& _72740_e,jule::Ref<_1b61ca014_FnCallExpr>& _72755_fc,jule::Ref<_1ab00dbcc_Data>& ) {
	if (_72755_fc->_field_generics.len() > 0LL) {
		_72740_e->_method_push_err(_72755_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1ab00dbcc_Data> _73113_result = jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_1ac6d02c0_build_prim_type(jule::Str("uint", 4)))),jule::Ref<_1ac6d02c0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1ac90c3ed_Const>()));
	if (_72755_fc->_field_args.len() < 1LL) {
		_72740_e->_method_push_err(_72755_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type|expr", 9))}));
		return _73113_result;
	}
	if (_72755_fc->_field_args.len() > 1LL) {
		_72740_e->_method_push_err(_72755_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1ab00dbcc_Data> _74313_d = _72740_e->_method_eval_expr_kind(_72755_fc->_field_args[0LL]->_field_kind);
	if ((!(jule::real(_74313_d)))) {
		return _73113_result;
	}
	_73113_result->_field_model=jule::Any(jule::new_struct<_1ab33d083_SizeofExprModel>(new( std::nothrow ) _1ab33d083_SizeofExprModel(_74313_d->_field_model)));
	return _73113_result;
}



inline jule::Ref<_1ab00dbcc_Data> _1aae49684_builtin_caller_std_mem_align_of(jule::Ref<_1ab00dbcc_Eval>& _75241_e,jule::Ref<_1b61ca014_FnCallExpr>& _75256_fc,jule::Ref<_1ab00dbcc_Data>& ) {
	if (_75256_fc->_field_generics.len() > 0LL) {
		_75241_e->_method_push_err(_75256_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1ab00dbcc_Data> _75613_result = jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_1ac6d02c0_build_prim_type(jule::Str("uint", 4)))),jule::Ref<_1ac6d02c0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1ac90c3ed_Const>()));
	if (_75256_fc->_field_args.len() < 1LL) {
		_75241_e->_method_push_err(_75256_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type|expr", 9))}));
		return _75613_result;
	}
	if (_75256_fc->_field_args.len() > 1LL) {
		_75241_e->_method_push_err(_75256_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1ab00dbcc_Data> _76813_d = _75241_e->_method_eval_expr_kind(_75256_fc->_field_args[0LL]->_field_kind);
	if ((!(jule::real(_76813_d)))) {
		return _75613_result;
	}
	_75613_result->_field_model=jule::Any(jule::new_struct<_1ab33d083_AlignofExprModel>(new( std::nothrow ) _1ab33d083_AlignofExprModel(_76813_d->_field_model)));
	return _75613_result;
}



inline jule::Ref<_1ab00dbcc_Data> _1aae49684_builtin_caller_std_jule_integrated_to_str(jule::Ref<_1ab00dbcc_Eval>& _77751_e,jule::Ref<_1b61ca014_FnCallExpr>& _77766_fc,jule::Ref<_1ab00dbcc_Data>& ) {
	if (_77766_fc->_field_generics.len() > 0LL) {
		_77751_e->_method_push_err(_77766_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_77766_fc->_field_args.len() < 1LL) {
		_77751_e->_method_push_err(_77766_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("expr", 4))}));
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	if (_77766_fc->_field_args.len() > 1LL) {
		_77751_e->_method_push_err(_77766_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1ab00dbcc_Data> _79013_d = _77751_e->_method_eval_expr_kind(_77766_fc->_field_args[0LL]->_field_kind);
	if ((!(jule::real(_79013_d)))) {
		return jule::new_ref<_1ab00dbcc_Data>();
	}
	return jule::new_struct<_1ab00dbcc_Data>(new( std::nothrow ) _1ab00dbcc_Data(jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_1ac6d02c0_build_prim_type(jule::Str("str", 3)))),jule::Ref<_1ac6d02c0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1ab33d083_IntegratedToStrExprModel>(new( std::nothrow ) _1ab33d083_IntegratedToStrExprModel(_79013_d->_field_model))),jule::Bool(),jule::Ref<_1ac90c3ed_Const>()));
}



inline std::tuple<jule::Bool,jule::Bool> _1b610d72d_check_os(jule::Str _1013_arg) {
	jule::Bool _1025_ok = jule::Bool();
	jule::Bool _1035_exist = jule::Bool();
	_1025_ok=false;
	_1035_exist=true;
	{
		auto _match_expr{ _1013_arg };
		if (!((jule::Str("windows", 7)) == _match_expr)) { goto _case_end_4445531264; }
		_case_begin_4445531264:;
		{
			_1025_ok=_1cde73206_is_windows(_1b614c8b0_OS);
		}
		goto _match_end_4445529328;
		_case_end_4445531264:;
		if (!((jule::Str("darwin", 6)) == _match_expr)) { goto _case_end_4445530400; }
		_case_begin_4445530400:;
		{
			_1025_ok=_1cde73206_is_darwin(_1b614c8b0_OS);
		}
		goto _match_end_4445529328;
		_case_end_4445530400:;
		if (!((jule::Str("linux", 5)) == _match_expr)) { goto _case_end_4445530512; }
		_case_begin_4445530512:;
		{
			_1025_ok=_1cde73206_is_linux(_1b614c8b0_OS);
		}
		goto _match_end_4445529328;
		_case_end_4445530512:;
		if (!((jule::Str("unix", 4)) == _match_expr)) { goto _case_end_4445530624; }
		_case_begin_4445530624:;
		{
			_1025_ok=_1cde73206_is_unix(_1b614c8b0_OS);
		}
		goto _match_end_4445529328;
		_case_end_4445530624:;
		_case_begin_4445528720:;
		{
			_1025_ok=true;
			_1035_exist=false;
		}
		goto _match_end_4445529328;
		_case_end_4445528720:;
		_match_end_4445529328:;
	}
	return std::make_tuple(_1025_ok,_1035_exist);
}



inline std::tuple<jule::Bool,jule::Bool> _1b610d72d_check_arch(jule::Str _2715_arg) {
	jule::Bool _2727_ok = jule::Bool();
	jule::Bool _2737_exist = jule::Bool();
	_2727_ok=false;
	_2737_exist=true;
	{
		auto _match_expr{ _2715_arg };
		if (!((jule::Str("i386", 4)) == _match_expr)) { goto _case_end_4445538496; }
		_case_begin_4445538496:;
		{
			_2727_ok=_1cde73206_is_i386(_1b614c8b0_ARCH);
		}
		goto _match_end_4445536560;
		_case_end_4445538496:;
		if (!((jule::Str("amd64", 5)) == _match_expr)) { goto _case_end_4445537632; }
		_case_begin_4445537632:;
		{
			_2727_ok=_1cde73206_is_amd64(_1b614c8b0_ARCH);
		}
		goto _match_end_4445536560;
		_case_end_4445537632:;
		if (!((jule::Str("arm64", 5)) == _match_expr)) { goto _case_end_4445537744; }
		_case_begin_4445537744:;
		{
			_2727_ok=_1cde73206_is_arm64(_1b614c8b0_ARCH);
		}
		goto _match_end_4445536560;
		_case_end_4445537744:;
		if (!((jule::Str("64bit", 5)) == _match_expr)) { goto _case_end_4445537856; }
		_case_begin_4445537856:;
		{
			_2727_ok=_1cde73206_is_64bit(_1b614c8b0_ARCH);
		}
		goto _match_end_4445536560;
		_case_end_4445537856:;
		if (!((jule::Str("32bit", 5)) == _match_expr)) { goto _case_end_4445537056; }
		_case_begin_4445537056:;
		{
			_2727_ok=_1cde73206_is_32bit(_1b614c8b0_ARCH);
		}
		goto _match_end_4445536560;
		_case_end_4445537056:;
		_case_begin_4445535952:;
		{
			_2727_ok=true;
			_2737_exist=false;
		}
		goto _match_end_4445536560;
		_case_end_4445535952:;
		_match_end_4445536560:;
	}
	return std::make_tuple(_2727_ok,_2737_exist);
}



inline jule::Bool _1b610d72d_is_pass_file_annotation(jule::Str _4632_p) {
	_4632_p=_1cdd187e9_base(_4632_p);
	jule::I64 _489_n = _4632_p.len();
	_4632_p=_4632_p.slice(0LL,static_cast<jule::Int>(_489_n - _1cdd187e9_ext(_4632_p).len()));
	jule::Str _5413_a1 = jule::Str("", 0);
	jule::Str _5713_a2 = jule::Str("", 0);
	jule::Int _6013_i = _4632_p.rfind(jule::Str("_", 1));
	if (_6013_i == -1LL) {
		jule::Bool _6318_ok;
		jule::Bool _6326_exist;
		std::tie(_6318_ok,_6326_exist) = _1b610d72d_check_os(_4632_p);
		if (_6326_exist) {
			return _6318_ok;
		}
		std::tie(_6318_ok,_6326_exist) = _1b610d72d_check_arch(_4632_p);
		return (!(_6326_exist)) || _6318_ok;
	}
	if ((_6013_i + 1LL) >= _489_n) {
		return true;
	}
	_5413_a1=_4632_p.slice(static_cast<jule::Int>(_6013_i + 1LL));
	_4632_p=_4632_p.slice(0LL,static_cast<jule::Int>(_6013_i));
	_6013_i=static_cast<jule::Int>(_4632_p.rfind(jule::Str("_", 1)));
	if (_6013_i != -1LL) {
		_5713_a2=_4632_p.slice(static_cast<jule::Int>(_6013_i + 1LL));
	}
	if (_5713_a2 == jule::Str("", 0)) {
		jule::Bool _8418_ok;
		jule::Bool _8426_exist;
		std::tie(_8418_ok,_8426_exist) = _1b610d72d_check_os(_5413_a1);
		if (_8426_exist) {
			return _8418_ok;
		}
		std::tie(_8418_ok,_8426_exist) = _1b610d72d_check_arch(_5413_a1);
		return (!(_8426_exist)) || _8418_ok;
	}
	jule::Bool _9214_ok;
	jule::Bool _9222_exist;
	std::tie(_9214_ok,_9222_exist) = _1b610d72d_check_arch(_5413_a1);
	if (_9222_exist) {
		if ((!(_9214_ok))) {
			return false;
		}
		jule::Bool _9714_ok;
		jule::Bool _9718_exist;
		std::tie(_9714_ok,_9718_exist) = _1b610d72d_check_os(_5713_a2);
		return (!(_9718_exist)) || _9714_ok;
	}
	std::tie(_9214_ok,_9222_exist) = _1b610d72d_check_os(_5413_a1);
	return (!(_9222_exist)) || _9214_ok;
}



inline jule::Bool _1b6121257_eval_directive_ident(jule::Str _625_ident) {
	if (_625_ident == jule::Str("", 0)) {
		return false;
	}
	{
		auto _range_expr = _1b6121345_FLAGS;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _1b6121257_flag = *_range_begin;
			_iter_begin_4445570192:;
			{
				if (_1b6121257_flag == _625_ident) {
					return true;
				}
			}
			_iter_next_4445570192:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b6121257_flag = *_range_begin; goto _iter_begin_4445570192; }
			_iter_end_4445570192:;
		}
	}
	return false;
}



inline jule::Bool _1b6121257_eval_directive_part(jule::Str _2228_part) {
	jule::Bool _239_logical_not = _2228_part[0LL] == '!';
	if (_239_logical_not) {
		_2228_part=_2228_part.slice(1LL);
	}
	jule::Bool _2813_result = _1b6121257_eval_directive_ident(_2228_part);
	if (_239_logical_not) {
		_2813_result=(!(_2813_result));
	}
	return _2813_result;
}



inline jule::Slice<jule::Str> _1b6121257_split_operans(jule::Str _3718_op,jule::Str _3727_expr) {
	jule::Slice<jule::Str> _3813_parts = jule::Slice<jule::Str>::alloc(0LL,10LL);
	jule::Int _4013_range_n = 0LL;
	jule::Int _4113_i = 0LL;
	jule::Int _4213_last = 0LL;
	_iter_begin_4445582064:;
	if (!(_4113_i < (_3727_expr.len() - 1LL))) { goto _iter_end_4445582064; }
	{
		jule::U8 _4413_b = _3727_expr[static_cast<jule::Int>(_4113_i)];
		if (_4413_b == '(') {
			(_4013_range_n)++;
			goto _iter_next_4445582064;
		} else if (_4413_b == ')') {
			(_4013_range_n)--;
		}
		if (_4013_range_n > 0LL) {
			goto _iter_next_4445582064;
		}
		{
			auto _match_expr{ _3718_op };
			if (!((jule::Str("||", 2)) == _match_expr)) { goto _case_end_4445588320; }
			_case_begin_4445588320:;
			{
				if ((_4413_b == '|') && (_3727_expr[static_cast<jule::Int>(_4113_i + 1LL)] == '|')) {
					_3813_parts=jule::append(_3813_parts,jule::Slice<jule::Str>({_3727_expr.slice(static_cast<jule::Int>(_4213_last),static_cast<jule::Int>(_4113_i))}));
					_4213_last=static_cast<jule::Int>(_4113_i + 2LL);
				}
			}
			goto _match_end_4445587712;
			_case_end_4445588320:;
			if (!((jule::Str("&&", 2)) == _match_expr)) { goto _case_end_4445585936; }
			_case_begin_4445585936:;
			{
				if ((_4413_b == '&') && (_3727_expr[static_cast<jule::Int>(_4113_i + 1LL)] == '&')) {
					_3813_parts=jule::append(_3813_parts,jule::Slice<jule::Str>({_3727_expr.slice(static_cast<jule::Int>(_4213_last),static_cast<jule::Int>(_4113_i))}));
					_4213_last=static_cast<jule::Int>(_4113_i + 2LL);
				}
			}
			goto _match_end_4445587712;
			_case_end_4445585936:;
			_match_end_4445587712:;
		}
	}
	_iter_next_4445582064:;
	(_4113_i)++;
	goto _iter_begin_4445582064;
	_iter_end_4445582064:;
	if (_4213_last < _3727_expr.len()) {
		_3813_parts=jule::append(_3813_parts,jule::Slice<jule::Str>({_3727_expr.slice(static_cast<jule::Int>(_4213_last))}));
	} else {
		_3813_parts=jule::append(_3813_parts,jule::Slice<jule::Str>({jule::Str("", 0)}));
	}
	return _3813_parts;
}



inline jule::Bool _1b6121257_eval_directive_expr(jule::Str _8724_expr) {
	if (_8724_expr == jule::Str("", 0)) {
		return false;
	}
	jule::Bool _9213_result = false;
	jule::Slice<jule::Str> _949_logical_or_parts = _1b6121257_split_operans(jule::Str("||", 2),_8724_expr);
	{
		auto _range_expr = _949_logical_or_parts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _1b6121257_part = *_range_begin;
			_iter_begin_4445606128:;
			{
				if (_1b6121257_part == jule::Str("", 0)) {
					return false;
				}
				jule::Bool _10017_and = true;
				jule::Slice<jule::Str> _10113_logical_and_parts = _1b6121257_split_operans(jule::Str("&&", 2),_1b6121257_part);
				{
					auto _range_expr = _10113_logical_and_parts;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Str _1b6121257_and_part = *_range_begin;
						_iter_begin_4445610688:;
						{
							if (_1b6121257_and_part.find(jule::Str("(", 1)) != -1LL) {
								if (_1b6121257_and_part[static_cast<jule::Int>(_1b6121257_and_part.len() - 1LL)] != ')') {
									return false;
								}
								jule::Str _10721__expr = _1b6121257_and_part.slice(1LL,static_cast<jule::Int>(_1b6121257_and_part.len() - 1LL));
								_10017_and=_10017_and && _1b6121257_eval_directive_expr(_10721__expr);
							} else {
								_10017_and=_10017_and && _1b6121257_eval_directive_part(_1b6121257_and_part);
							}
						}
						_iter_next_4445610688:;
						++_range_begin;
						if (_range_begin != _range_end) { _1b6121257_and_part = *_range_begin; goto _iter_begin_4445610688; }
						_iter_end_4445610688:;
					}
				}
				_9213_result=_9213_result || _10017_and;
			}
			_iter_next_4445606128:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b6121257_part = *_range_begin; goto _iter_begin_4445606128; }
			_iter_end_4445606128:;
		}
	}
	return _9213_result;
}



inline void _1b6121345_set_os_flags(void) {
	{
		auto _match_expr{ _1b614c8b0_OS };
		if (!((jule::Str("windows", 7)) == _match_expr)) { goto _case_end_4445619536; }
		_case_begin_4445619536:;
		{
			_1b6121345_FLAGS=jule::append(_1b6121345_FLAGS,jule::Slice<jule::Str>({jule::Str("windows", 7)}));
		}
		goto _match_end_4445605824;
		_case_end_4445619536:;
		if (!((jule::Str("linux", 5)) == _match_expr)) { goto _case_end_4445621152; }
		_case_begin_4445621152:;
		{
			_1b6121345_FLAGS=jule::append(_1b6121345_FLAGS,jule::Slice<jule::Str>({jule::Str("linux", 5)}));
		}
		goto _match_end_4445605824;
		_case_end_4445621152:;
		if (!((jule::Str("darwin", 6)) == _match_expr)) { goto _case_end_4445606752; }
		_case_begin_4445606752:;
		{
			_1b6121345_FLAGS=jule::append(_1b6121345_FLAGS,jule::Slice<jule::Str>({jule::Str("darwin", 6)}));
		}
		goto _match_end_4445605824;
		_case_end_4445606752:;
		_match_end_4445605824:;
	}
	if (_1cde73206_is_unix(_1b614c8b0_OS)) {
		_1b6121345_FLAGS=jule::append(_1b6121345_FLAGS,jule::Slice<jule::Str>({jule::Str("unix", 4)}));
	}
}



inline void _1b6121345_set_arch_flags(void) {
	{
		auto _match_expr{ _1b614c8b0_ARCH };
		if (!((jule::Str("i386", 4)) == _match_expr)) { goto _case_end_4445611744; }
		_case_begin_4445611744:;
		{
			_1b6121345_FLAGS=jule::append(_1b6121345_FLAGS,jule::Slice<jule::Str>({jule::Str("i386", 4)}));
		}
		goto _match_end_4445625712;
		_case_end_4445611744:;
		if (!((jule::Str("amd64", 5)) == _match_expr)) { goto _case_end_4445611936; }
		_case_begin_4445611936:;
		{
			_1b6121345_FLAGS=jule::append(_1b6121345_FLAGS,jule::Slice<jule::Str>({jule::Str("amd64", 5)}));
		}
		goto _match_end_4445625712;
		_case_end_4445611936:;
		if (!((jule::Str("arm64", 5)) == _match_expr)) { goto _case_end_4445622400; }
		_case_begin_4445622400:;
		{
			_1b6121345_FLAGS=jule::append(_1b6121345_FLAGS,jule::Slice<jule::Str>({jule::Str("arm64", 5)}));
		}
		goto _match_end_4445625712;
		_case_end_4445622400:;
		_match_end_4445625712:;
	}
	if (_1cde73206_is_64bit(_1b614c8b0_ARCH)) {
		_1b6121345_FLAGS=jule::append(_1b6121345_FLAGS,jule::Slice<jule::Str>({jule::Str("64bit", 5)}));
	}
	if (_1cde73206_is_32bit(_1b614c8b0_ARCH)) {
		_1b6121345_FLAGS=jule::append(_1b6121345_FLAGS,jule::Slice<jule::Str>({jule::Str("32bit", 5)}));
	}
}



inline void _1b6121345_init_flags(void) {
	_1b6121345_set_os_flags();
	_1b6121345_set_arch_flags();
}



inline void _1b615c804_exit_err(jule::Str _2213_msg) {
	
	jule::outln(_2213_msg);
	_1cdd2665e_exit(1LL);
}



inline jule::Slice<jule::U8> _1b615c804_read_buff(jule::Str _3014_path) {
	jule::Slice<jule::U8> _3114_buffer;
	jule::Int _3122_err;
	std::tie(_3114_buffer,_3122_err) = _1b61b2a8a_read_file(_3014_path);
	if (_3122_err != 0LLU) {
		_1b615c804_exit_err(jule::Str("error: file cannot read", 23));
	}
	return _3114_buffer;
}



inline _1cdeeb191_Log _1b615c804_flat_compiler_err(jule::Str _4022_text) {
	return _1cdeeb191_Log(1LLU,jule::Int(),jule::Int(),jule::Str(),_4022_text,jule::Str(),jule::Str());
}



inline std::tuple<jule::Slice<jule::Ref<_1b61b1e74_DirEntry>>,jule::Str> _1b615c804_read_package_dirents(jule::Str _4825_path) {
	jule::Str _4851_err_msg = jule::Str();
	jule::Slice<jule::Ref<_1b61b1e74_DirEntry>> _4914_dirents;
	jule::Int _4923_err;
	std::tie(_4914_dirents,_4923_err) = _1b61bea42_read_dir(_4825_path);
	if (_4923_err != 0LLU) {
		_4851_err_msg = jule::Str("connot read package directory: ", 31) + _4825_path;
		return std::make_tuple(nullptr,_4851_err_msg);
	}
	jule::Slice<jule::Ref<_1b61b1e74_DirEntry>> _5413_passed_dirents = nullptr;
	{
		auto _range_expr = _4914_dirents;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b61b1e74_DirEntry> _1b615c804_dirent = *_range_begin;
			_iter_begin_4445646368:;
			{
				jule::Str _5613_name = _1b615c804_dirent->_field_name;
				if (_1b615c804_dirent->_field_stat->_method_is_dir() || (!(_5613_name.has_suffix(jule::Str(".jule", 5))))) {
					goto _iter_next_4445646368;
				}
				_5413_passed_dirents=jule::append(_5413_passed_dirents,jule::Slice<jule::Ref<_1b61b1e74_DirEntry>>({_1b615c804_dirent}));
			}
			_iter_next_4445646368:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b615c804_dirent = *_range_begin; goto _iter_begin_4445646368; }
			_iter_end_4445646368:;
		}
	}
	_4851_err_msg = jule::Str("", 0);
	return std::make_tuple(_5413_passed_dirents,_4851_err_msg);
}



inline jule::Str _1b615c804_concat_all_parts(jule::Slice<jule::Str> _7021_parts) {
	jule::Str _7113_s = jule::Str("", 0);
	{
		auto _range_expr = _7021_parts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _1b615c804_part = *_range_begin;
			_iter_begin_4445656720:;
			{
				_7113_s+=_1b615c804_part;
			}
			_iter_next_4445656720:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b615c804_part = *_range_begin; goto _iter_begin_4445656720; }
			_iter_end_4445656720:;
		}
	}
	return _7113_s;
}



inline jule::Bool _1b615c804_is_pass_build_directives(jule::Ref<_1b61d1d62_Ast>& _7934_file) {
	{
		auto _range_expr = _7934_file->_field_top_directives;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b61ca014_Directive> _1b615c804_td = *_range_begin;
			_iter_begin_4445658128:;
			{
				if (_1b615c804_td->_field_tag != jule::Str("build", 5)) {
					goto _iter_next_4445658128;
				}
				jule::Str _8513_expr = _1b615c804_concat_all_parts(_1b615c804_td->_field_args);
				jule::Bool _8613_result = _1b6121257_eval_directive_expr(_8513_expr);
				if ((!(_8613_result))) {
					return false;
				}
			}
			_iter_next_4445658128:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b615c804_td = *_range_begin; goto _iter_begin_4445658128; }
			_iter_end_4445658128:;
		}
	}
	return true;
}



inline void _1b60cd1d1_push_passes(jule::Ref<_1ab194c20_Package>& _11321_p,jule::Slice<jule::Str>& _11345_passes) {
	{
		auto _range_expr = _11321_p->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab00cc20_SymbolTable> _1b60cd1d1_f = *_range_begin;
			_iter_begin_4445727712:;
			{
				_julec_label_push:;
				{
					auto _range_expr = _1b60cd1d1_f->_field_passes;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						_1b5589c76_Pass _1b60cd1d1_pass = *_range_begin;
						_iter_begin_4445730000:;
						{
							if (_1b60cd1d1_pass._field_text == jule::Str("", 0)) {
								goto _iter_next_4445730000;
							}
							{
								auto _range_expr = _11345_passes;
								if (_range_expr.begin() != _range_expr.end()) {
									auto _range_begin = _range_expr.begin();
									const auto _range_end = _range_expr.end();
									jule::Str _1b60cd1d1_cpass = *_range_begin;
									_iter_begin_4445732752:;
									{
										if (_1b60cd1d1_cpass == _1b60cd1d1_pass._field_text) {
											goto _iter_next_4445730000;
										}
									}
									_iter_next_4445732752:;
									++_range_begin;
									if (_range_begin != _range_end) { _1b60cd1d1_cpass = *_range_begin; goto _iter_begin_4445732752; }
									_iter_end_4445732752:;
								}
							}
							_11345_passes=jule::append(_11345_passes,jule::Slice<jule::Str>({_1b60cd1d1_pass._field_text}));
						}
						_iter_next_4445730000:;
						++_range_begin;
						if (_range_begin != _range_end) { _1b60cd1d1_pass = *_range_begin; goto _iter_begin_4445730000; }
						_iter_end_4445730000:;
					}
				}
			}
			_iter_next_4445727712:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b60cd1d1_f = *_range_begin; goto _iter_begin_4445727712; }
			_iter_end_4445727712:;
		}
	}
}



inline jule::Slice<jule::Str> _1b60cd1d1_get_all_unique_passes(jule::Ref<_1ab194c20_Package>& _13031_pkg,jule::Slice<jule::Ref<_1ab194c20_ImportInfo>> _13056_uses) {
	jule::Slice<jule::Str> _13113_passes = nullptr;
	_1b60cd1d1_push_passes(_13031_pkg,_13113_passes);
	{
		auto _range_expr = _13056_uses;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab194c20_ImportInfo> _1b60cd1d1_u = *_range_begin;
			_iter_begin_4445739776:;
			{
				if ((!(_1b60cd1d1_u->_field_cpp_linked))) {
					_1b60cd1d1_push_passes(_1b60cd1d1_u->_field_package,_13113_passes);
				}
			}
			_iter_next_4445739776:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b60cd1d1_u = *_range_begin; goto _iter_begin_4445739776; }
			_iter_end_4445739776:;
		}
	}
	return _13113_passes;
}



inline jule::Bool _1b550a80c_is_exist_0(jule::Slice<jule::Any> _3016_arr,jule::Ref<_1b557cd24_FnIns> _3028_t) {
	{
		auto _range_expr = _3016_arr;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Any _1b550a80c_ref = *_range_begin;
			_iter_begin_4445914160:;
			{
				{
					auto _match_expr{ _1b550a80c_ref };
					if (!(_match_expr.type_is<jule::Ref<_1b557cd24_FnIns>>())) { goto _case_end_4445916016; }
					_case_begin_4445916016:;
					{
						if ((_1b550a80c_ref.operator jule::Ref<_1b557cd24_FnIns>()).alloc == (_3028_t).alloc) {
							return true;
						}
					}
					goto _match_end_4445915584;
					_case_end_4445916016:;
					_match_end_4445915584:;
				}
			}
			_iter_next_4445914160:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b550a80c_ref = *_range_begin; goto _iter_begin_4445914160; }
			_iter_end_4445914160:;
		}
	}
	return false;
}

inline jule::Bool _1b550a80c_is_exist_1(jule::Slice<jule::Any> _3016_arr,jule::Ref<_1b623eab2_Var> _3028_t) {
	{
		auto _range_expr = _3016_arr;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Any _1b550a80c_ref = *_range_begin;
			_iter_begin_4445922352:;
			{
				{
					auto _match_expr{ _1b550a80c_ref };
					if (!(_match_expr.type_is<jule::Ref<_1b623eab2_Var>>())) { goto _case_end_4445924208; }
					_case_begin_4445924208:;
					{
						if ((_1b550a80c_ref.operator jule::Ref<_1b623eab2_Var>()).alloc == (_3028_t).alloc) {
							return true;
						}
					}
					goto _match_end_4445923776;
					_case_end_4445924208:;
					_match_end_4445923776:;
				}
			}
			_iter_next_4445922352:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b550a80c_ref = *_range_begin; goto _iter_begin_4445922352; }
			_iter_end_4445922352:;
		}
	}
	return false;
}

inline jule::Bool _1b550a80c_is_exist_2(jule::Slice<jule::Any> _3016_arr,jule::Ref<_1b5e07a00_StructIns> _3028_t) {
	{
		auto _range_expr = _3016_arr;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Any _1b550a80c_ref = *_range_begin;
			_iter_begin_4445930608:;
			{
				{
					auto _match_expr{ _1b550a80c_ref };
					if (!(_match_expr.type_is<jule::Ref<_1b5e07a00_StructIns>>())) { goto _case_end_4445932464; }
					_case_begin_4445932464:;
					{
						if ((_1b550a80c_ref.operator jule::Ref<_1b5e07a00_StructIns>()).alloc == (_3028_t).alloc) {
							return true;
						}
					}
					goto _match_end_4445932032;
					_case_end_4445932464:;
					_match_end_4445932032:;
				}
			}
			_iter_next_4445930608:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b550a80c_ref = *_range_begin; goto _iter_begin_4445930608; }
			_iter_end_4445930608:;
		}
	}
	return false;
}

inline jule::Bool _1b550a80c_is_exist_3(jule::Slice<jule::Any> _3016_arr,jule::Ref<_1aaee9091_Trait> _3028_t) {
	{
		auto _range_expr = _3016_arr;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Any _1b550a80c_ref = *_range_begin;
			_iter_begin_4445938800:;
			{
				{
					auto _match_expr{ _1b550a80c_ref };
					if (!(_match_expr.type_is<jule::Ref<_1aaee9091_Trait>>())) { goto _case_end_4445940656; }
					_case_begin_4445940656:;
					{
						if ((_1b550a80c_ref.operator jule::Ref<_1aaee9091_Trait>()).alloc == (_3028_t).alloc) {
							return true;
						}
					}
					goto _match_end_4445940224;
					_case_end_4445940656:;
					_match_end_4445940224:;
				}
			}
			_iter_next_4445938800:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b550a80c_ref = *_range_begin; goto _iter_begin_4445938800; }
			_iter_end_4445938800:;
		}
	}
	return false;
}



inline jule::Bool _1b550a80c_is_exist_ref(jule::Slice<jule::Any> _4321_refs,jule::Any _4334_ref) {
	{
		auto _match_expr{ _4334_ref };
		if (!(_match_expr.type_is<jule::Ref<_1b557cd24_FnIns>>())) { goto _case_end_4445906032; }
		_case_begin_4445906032:;
		{
			return _1b550a80c_is_exist_0(_4321_refs,_4334_ref.operator jule::Ref<_1b557cd24_FnIns>());
		}
		goto _match_end_4445905248;
		_case_end_4445906032:;
		if (!(_match_expr.type_is<jule::Ref<_1b623eab2_Var>>())) { goto _case_end_4445906144; }
		_case_begin_4445906144:;
		{
			return _1b550a80c_is_exist_1(_4321_refs,_4334_ref.operator jule::Ref<_1b623eab2_Var>());
		}
		goto _match_end_4445905248;
		_case_end_4445906144:;
		if (!(_match_expr.type_is<jule::Ref<_1b5e07a00_StructIns>>())) { goto _case_end_4445906256; }
		_case_begin_4445906256:;
		{
			return _1b550a80c_is_exist_2(_4321_refs,_4334_ref.operator jule::Ref<_1b5e07a00_StructIns>());
		}
		goto _match_end_4445905248;
		_case_end_4445906256:;
		if (!(_match_expr.type_is<jule::Ref<_1aaee9091_Trait>>())) { goto _case_end_4445907328; }
		_case_begin_4445907328:;
		{
			return _1b550a80c_is_exist_3(_4321_refs,_4334_ref.operator jule::Ref<_1aaee9091_Trait>());
		}
		goto _match_end_4445905248;
		_case_end_4445907328:;
		_case_begin_4445905504:;
		{
			return false;
		}
		goto _match_end_4445905248;
		_case_end_4445905504:;
		_match_end_4445905248:;
	}
}



inline jule::Bool _1b550a80c_is_dead(jule::Any _5416_ref) {
	jule::Bool _5428_dead = jule::Bool();
	if (_1b550a80c_is_exist_ref(_1b550a80c_deads,_5416_ref)) {
		_5428_dead = true;
		return _5428_dead;
	}
	{
		auto _match_expr{ _5416_ref };
		if (!(_match_expr.type_is<jule::Ref<_1b557cd24_FnIns>>())) { goto _case_end_4445946080; }
		_case_begin_4445946080:;
		{
			if (_5416_ref.operator jule::Ref<_1b557cd24_FnIns>()->_field_decl->_method_is_init()) {
				goto _match_end_4445931696;
			}
			goto _case_begin_4445918848;
		}
		goto _match_end_4445931696;
		_case_end_4445946080:;
		_case_begin_4445918848:;
		{
			if (_1b550a80c_is_exist_ref(jule::Slice<jule::Any>({_1b550a80c_current,_1b550a80c_main_current}),_5416_ref)) {
				_5428_dead = true;
				return _5428_dead;
			}
			if (_1b550a80c_is_exist_ref(_1b550a80c_checking,_5416_ref)) {
				_5428_dead = true;
				return _5428_dead;
			}
		}
		goto _match_end_4445931696;
		_case_end_4445918848:;
		_match_end_4445931696:;
	}
	jule::Any _7513_old = _1b550a80c_current;
	_1b550a80c_current=_5416_ref;
	jule::I64 _779_len = _1b550a80c_checking.len();
	_1b550a80c_checking=jule::append(_1b550a80c_checking,jule::Slice<jule::Any>({_5416_ref}));
	__JULE_DEFER({
		_1b550a80c_current=_7513_old;
		_1b550a80c_drop_ref(_1b550a80c_checking,_779_len);
	});
	{
		auto _match_expr{ _5416_ref };
		if (!(_match_expr.type_is<jule::Ref<_1b557cd24_FnIns>>())) { goto _case_end_4445952448; }
		_case_begin_4445952448:;
		{
			_5428_dead = _1b550a80c_is_fn_dead(_5416_ref.operator jule::Ref<_1b557cd24_FnIns>());
			return _5428_dead;
		}
		goto _match_end_4445950320;
		_case_end_4445952448:;
		if (!(_match_expr.type_is<jule::Ref<_1b623eab2_Var>>())) { goto _case_end_4445952560; }
		_case_begin_4445952560:;
		{
			_5428_dead = _1b550a80c_is_var_dead(_5416_ref.operator jule::Ref<_1b623eab2_Var>());
			return _5428_dead;
		}
		goto _match_end_4445950320;
		_case_end_4445952560:;
		if (!(_match_expr.type_is<jule::Ref<_1b5e07a00_StructIns>>())) { goto _case_end_4445952672; }
		_case_begin_4445952672:;
		{
			_5428_dead = _1b550a80c_is_struct_dead(_5416_ref.operator jule::Ref<_1b5e07a00_StructIns>());
			return _5428_dead;
		}
		goto _match_end_4445950320;
		_case_end_4445952672:;
		if (!(_match_expr.type_is<jule::Ref<_1aaee9091_Trait>>())) { goto _case_end_4445950432; }
		_case_begin_4445950432:;
		{
			_5428_dead = _1b550a80c_is_trait_dead(_5416_ref.operator jule::Ref<_1aaee9091_Trait>());
			return _5428_dead;
		}
		goto _match_end_4445950320;
		_case_end_4445950432:;
		_case_begin_4445947968:;
		{
			_5428_dead = false;
			return _5428_dead;
		}
		goto _match_end_4445950320;
		_case_end_4445947968:;
		_match_end_4445950320:;
	}
}



inline void _1b550a80c_drop_ref(jule::Slice<jule::Any>& _10618_refs,jule::Int _10631_pos) {
	_10618_refs=_10618_refs.slice(0LL,static_cast<jule::Int>(_10631_pos));
}



inline jule::Bool _1b550a80c_is_all_references_are_dead_0(jule::Ref<_1b5589c76_ReferenceStack> _11438_references) {
	jule::Int _11513_i = 0LL;
	_iter_begin_4445989376:;
	if (!(_11513_i < _11438_references->_method_len())) { goto _iter_end_4445989376; }
	{
		jule::Any _11717_ref = _11438_references->_method_at(_11513_i);
		{
			auto _match_expr{ _1b550a80c_current };
			if (!(_match_expr.type_is<jule::Ref<_1b557cd24_FnIns>>())) { goto _case_end_4445991888; }
			_case_begin_4445991888:;
			{
				{
					auto _match_expr{ _11717_ref };
					if (!(_match_expr.type_is<jule::Ref<_1b557cd24_FnIns>>())) { goto _case_end_4445994336; }
					_case_begin_4445994336:;
					{
						if ((_1b550a80c_current.operator jule::Ref<_1b557cd24_FnIns>()).alloc == (_11717_ref.operator jule::Ref<_1b557cd24_FnIns>()).alloc) {
							goto _iter_next_4445989376;
						}
					}
					goto _match_end_4445992000;
					_case_end_4445994336:;
					_match_end_4445992000:;
				}
			}
			goto _match_end_4445991136;
			_case_end_4445991888:;
			_match_end_4445991136:;
		}
		{
			auto _match_expr{ _1b550a80c_main_current };
			if (!(_match_expr.type_is<jule::Ref<_1b557cd24_FnIns>>())) { goto _case_end_4445997360; }
			_case_begin_4445997360:;
			{
				{
					auto _match_expr{ _11717_ref };
					if (!(_match_expr.type_is<jule::Ref<_1b557cd24_FnIns>>())) { goto _case_end_4445995488; }
					_case_begin_4445995488:;
					{
						if ((_1b550a80c_main_current.operator jule::Ref<_1b557cd24_FnIns>()).alloc == (_11717_ref.operator jule::Ref<_1b557cd24_FnIns>()).alloc) {
							goto _iter_next_4445989376;
						}
					}
					goto _match_end_4445997472;
					_case_end_4445995488:;
					_match_end_4445997472:;
				}
			}
			goto _match_end_4445996032;
			_case_end_4445997360:;
			_match_end_4445996032:;
		}
		if ((!(_1b550a80c_is_dead(_11717_ref)))) {
			return false;
		}
	}
	_iter_next_4445989376:;
	(_11513_i)++;
	goto _iter_begin_4445989376;
	_iter_end_4445989376:;
	return true;
}

inline jule::Bool _1b550a80c_is_all_references_are_dead_1(jule::Ref<_1b5589c76_ReferenceStack> _11438_references) {
	jule::Int _11513_i = 0LL;
	_iter_begin_4446008544:;
	if (!(_11513_i < _11438_references->_method_len())) { goto _iter_end_4446008544; }
	{
		jule::Any _11717_ref = _11438_references->_method_at(_11513_i);
		{
			auto _match_expr{ _1b550a80c_current };
			if (!(_match_expr.type_is<jule::Ref<_1b623eab2_Var>>())) { goto _case_end_4446011696; }
			_case_begin_4446011696:;
			{
				{
					auto _match_expr{ _11717_ref };
					if (!(_match_expr.type_is<jule::Ref<_1b623eab2_Var>>())) { goto _case_end_4446013328; }
					_case_begin_4446013328:;
					{
						if ((_1b550a80c_current.operator jule::Ref<_1b623eab2_Var>()).alloc == (_11717_ref.operator jule::Ref<_1b623eab2_Var>()).alloc) {
							goto _iter_next_4446008544;
						}
					}
					goto _match_end_4446011888;
					_case_end_4446013328:;
					_match_end_4446011888:;
				}
			}
			goto _match_end_4446011120;
			_case_end_4446011696:;
			_match_end_4446011120:;
		}
		{
			auto _match_expr{ _1b550a80c_main_current };
			if (!(_match_expr.type_is<jule::Ref<_1b623eab2_Var>>())) { goto _case_end_4446016496; }
			_case_begin_4446016496:;
			{
				{
					auto _match_expr{ _11717_ref };
					if (!(_match_expr.type_is<jule::Ref<_1b623eab2_Var>>())) { goto _case_end_4446012784; }
					_case_begin_4446012784:;
					{
						if ((_1b550a80c_main_current.operator jule::Ref<_1b623eab2_Var>()).alloc == (_11717_ref.operator jule::Ref<_1b623eab2_Var>()).alloc) {
							goto _iter_next_4446008544;
						}
					}
					goto _match_end_4446016608;
					_case_end_4446012784:;
					_match_end_4446016608:;
				}
			}
			goto _match_end_4446015168;
			_case_end_4446016496:;
			_match_end_4446015168:;
		}
		if ((!(_1b550a80c_is_dead(_11717_ref)))) {
			return false;
		}
	}
	_iter_next_4446008544:;
	(_11513_i)++;
	goto _iter_begin_4446008544;
	_iter_end_4446008544:;
	return true;
}

inline jule::Bool _1b550a80c_is_all_references_are_dead_2(jule::Ref<_1b5589c76_ReferenceStack> _11438_references) {
	jule::Int _11513_i = 0LL;
	_iter_begin_4446044080:;
	if (!(_11513_i < _11438_references->_method_len())) { goto _iter_end_4446044080; }
	{
		jule::Any _11717_ref = _11438_references->_method_at(_11513_i);
		{
			auto _match_expr{ _1b550a80c_current };
			if (!(_match_expr.type_is<jule::Ref<_1b5e07a00_StructIns>>())) { goto _case_end_4446047200; }
			_case_begin_4446047200:;
			{
				{
					auto _match_expr{ _11717_ref };
					if (!(_match_expr.type_is<jule::Ref<_1b5e07a00_StructIns>>())) { goto _case_end_4446049008; }
					_case_begin_4446049008:;
					{
						if ((_1b550a80c_current.operator jule::Ref<_1b5e07a00_StructIns>()).alloc == (_11717_ref.operator jule::Ref<_1b5e07a00_StructIns>()).alloc) {
							goto _iter_next_4446044080;
						}
					}
					goto _match_end_4446047376;
					_case_end_4446049008:;
					_match_end_4446047376:;
				}
			}
			goto _match_end_4446046656;
			_case_end_4446047200:;
			_match_end_4446046656:;
		}
		{
			auto _match_expr{ _1b550a80c_main_current };
			if (!(_match_expr.type_is<jule::Ref<_1b5e07a00_StructIns>>())) { goto _case_end_4446052032; }
			_case_begin_4446052032:;
			{
				{
					auto _match_expr{ _11717_ref };
					if (!(_match_expr.type_is<jule::Ref<_1b5e07a00_StructIns>>())) { goto _case_end_4446050160; }
					_case_begin_4446050160:;
					{
						if ((_1b550a80c_main_current.operator jule::Ref<_1b5e07a00_StructIns>()).alloc == (_11717_ref.operator jule::Ref<_1b5e07a00_StructIns>()).alloc) {
							goto _iter_next_4446044080;
						}
					}
					goto _match_end_4446052144;
					_case_end_4446050160:;
					_match_end_4446052144:;
				}
			}
			goto _match_end_4446050704;
			_case_end_4446052032:;
			_match_end_4446050704:;
		}
		if ((!(_1b550a80c_is_dead(_11717_ref)))) {
			return false;
		}
	}
	_iter_next_4446044080:;
	(_11513_i)++;
	goto _iter_begin_4446044080;
	_iter_end_4446044080:;
	return true;
}



inline jule::Bool _1b550a80c_is_fn_dead(jule::Ref<_1b557cd24_FnIns> _14319_f) {
	if (_14319_f->_field_decl->_field_cpp_linked) {
		return false;
	}
	if (_14319_f->_field_decl->_method_is_entry_point() || _14319_f->_field_decl->_method_is_init()) {
		return (!(_14319_f->_field_decl->_field_statically));
	}
	if (jule::real(_14319_f->_field_owner)) {
		if (_1b550a80c_is_exist_ref(_1b550a80c_checking,jule::Any(_14319_f->_field_owner))) {
			return true;
		}
		return _1b550a80c_is_dead(jule::Any(_14319_f->_field_owner));
	}
	return _1b550a80c_is_all_references_are_dead_0(_14319_f->_field_references);
}



inline jule::Bool _1b550a80c_is_var_dead(jule::Ref<_1b623eab2_Var> _16920_v) {
	if (_16920_v->_field_constant) {
		return true;
	}
	if (_16920_v->_field_cpp_linked) {
		return false;
	}
	return _1b550a80c_is_all_references_are_dead_1(_16920_v->_field_references);
}



inline jule::Bool _1b550a80c_kind_is_dead(jule::Ref<_1ac6d02c0_TypeKind> _18121_k) {
	{
		if (!((jule::real(_18121_k->_method_ref())))) { goto _case_end_4446018656; }
		_case_begin_4446018656:;
		{
			return _1b550a80c_kind_is_dead(_18121_k->_method_ref()->_field_elem);
		}
		goto _match_end_4446004400;
		_case_end_4446018656:;
		if (!((jule::real(_18121_k->_method_ptr())))) { goto _case_end_4446018768; }
		_case_begin_4446018768:;
		{
			return _1b550a80c_kind_is_dead(_18121_k->_method_ptr()->_field_elem);
		}
		goto _match_end_4446004400;
		_case_end_4446018768:;
		if (!((jule::real(_18121_k->_method_slc())))) { goto _case_end_4446022000; }
		_case_begin_4446022000:;
		{
			return _1b550a80c_kind_is_dead(_18121_k->_method_slc()->_field_elem);
		}
		goto _match_end_4446004400;
		_case_end_4446022000:;
		if (!((jule::real(_18121_k->_method_arr())))) { goto _case_end_4446022112; }
		_case_begin_4446022112:;
		{
			return _1b550a80c_kind_is_dead(_18121_k->_method_arr()->_field_elem);
		}
		goto _match_end_4446004400;
		_case_end_4446022112:;
		if (!((jule::real(_18121_k->_method_trt())))) { goto _case_end_4446022224; }
		_case_begin_4446022224:;
		{
			jule::Ref<_1aaee9091_Trait> _19617_t = _18121_k->_method_trt();
			if (_1b550a80c_is_dead(jule::Any(_19617_t))) {
				return true;
			}
		}
		goto _match_end_4446004400;
		_case_end_4446022224:;
		if (!((jule::real(_18121_k->_method_strct())))) { goto _case_end_4446022336; }
		_case_begin_4446022336:;
		{
			jule::Ref<_1b5e07a00_StructIns> _20217_s = _18121_k->_method_strct();
			if (_1b550a80c_is_dead(jule::Any(_20217_s))) {
				return true;
			}
		}
		goto _match_end_4446004400;
		_case_end_4446022336:;
		_match_end_4446004400:;
	}
	return false;
}



inline jule::Bool _1b550a80c_is_any_generic_is_dead(jule::Slice<jule::Ref<_1ac6d02c0_TypeKind>>& _21032_generics) {
	{
		auto _range_expr = _21032_generics;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ac6d02c0_TypeKind> _1b550a80c_g = *_range_begin;
			_iter_begin_4446035616:;
			{
				if (_1b550a80c_kind_is_dead(_1b550a80c_g)) {
					return true;
				}
			}
			_iter_next_4446035616:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b550a80c_g = *_range_begin; goto _iter_begin_4446035616; }
			_iter_end_4446035616:;
		}
	}
	return false;
}



inline jule::Bool _1b550a80c_is_struct_dead(jule::Ref<_1b5e07a00_StructIns> _21923_s) {
	return false;
	if (_21923_s->_field_decl->_field_cpp_linked) {
		return false;
	}
	return _1b550a80c_is_all_references_are_dead_2(_21923_s->_field_references);
}



inline jule::Bool _1b550a80c_is_trait_dead(jule::Ref<_1aaee9091_Trait> _23622_t) {
	return false;
	{
		auto _range_expr = _23622_t->_field_implemented;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b5e07a00_Struct> _1b550a80c_imp = *_range_begin;
			_iter_begin_4446048432:;
			{
				jule::Int _24117_i = 0LL;
				_iter_begin_4446058992:;
				if (!(_24117_i < _1b550a80c_imp->_field_instances.len())) { goto _iter_end_4446058992; }
				{
					jule::Ref<_1b5e07a00_StructIns> _24321_ins = _1b550a80c_imp->_field_instances[static_cast<jule::Int>(_24117_i)];
					if ((!(_1b550a80c_is_struct_dead(_24321_ins)))) {
						return false;
					}
				}
				_iter_next_4446058992:;
				(_24117_i)++;
				goto _iter_begin_4446058992;
				_iter_end_4446058992:;
			}
			_iter_next_4446048432:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b550a80c_imp = *_range_begin; goto _iter_begin_4446048432; }
			_iter_end_4446048432:;
		}
	}
	return true;
}



inline void _1b550a80c_eliminate_dead_functions(jule::Slice<jule::Ref<_1b557cd24_Fn>>& _25434_funcs) {
	jule::Int _25513_i = 0LL;
	_iter_begin_4446048656:;
	if (!(_25513_i < _25434_funcs.len())) { goto _iter_end_4446048656; }
	{
		jule::Ref<_1b557cd24_Fn> _25717_f = _25434_funcs[static_cast<jule::Int>(_25513_i)];
		jule::Int _25817_j = 0LL;
		_iter_begin_4446067920:;
		if (!(_25817_j < _25717_f->_field_instances.len())) { goto _iter_end_4446067920; }
		{
			jule::Ref<_1b557cd24_FnIns> _26021_ins = _25717_f->_field_instances[static_cast<jule::Int>(_25817_j)];
			_1b550a80c_main_current=jule::Any(_26021_ins);
			if (_1b550a80c_is_fn_dead(_26021_ins)) {
				_1b550a80c_deads=jule::append(_1b550a80c_deads,jule::Slice<jule::Any>({jule::Any(_26021_ins)}));
				_25717_f->_field_instances=jule::append(_25717_f->_field_instances.slice(0LL,static_cast<jule::Int>(_25817_j)),_25717_f->_field_instances.slice(static_cast<jule::Int>(_25817_j + 1LL)));
				goto _iter_next_4446067920;
			}
			_1b60bd9da_eliminate_dead_code_of_scope(_26021_ins->_field_scope);
			(_25817_j)++;
		}
		_iter_next_4446067920:;
		goto _iter_begin_4446067920;
		_iter_end_4446067920:;
		if (_25717_f->_field_instances.len() == 0LL) {
			_25434_funcs=jule::append(_25434_funcs.slice(0LL,static_cast<jule::Int>(_25513_i)),_25434_funcs.slice(static_cast<jule::Int>(_25513_i + 1LL)));
			goto _iter_next_4446048656;
		}
		(_25513_i)++;
	}
	_iter_next_4446048656:;
	goto _iter_begin_4446048656;
	_iter_end_4446048656:;
}



inline void _1b550a80c_eliminate_dead_globals(jule::Ref<_1ab194c20_Package>& _28032_pkg) {
	{
		auto _range_expr = _28032_pkg->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab00cc20_SymbolTable> _1b550a80c_f = *_range_begin;
			_iter_begin_4446080640:;
			{
				jule::Int _28217_i = 0LL;
				_iter_begin_4446084384:;
				if (!(_28217_i < _1b550a80c_f->_field_vars.len())) { goto _iter_end_4446084384; }
				{
					jule::Ref<_1b623eab2_Var> _28421_v = _1b550a80c_f->_field_vars[static_cast<jule::Int>(_28217_i)];
					_1b550a80c_main_current=jule::Any(_28421_v);
					if (_1b550a80c_is_var_dead(_28421_v)) {
						_1b550a80c_deads=jule::append(_1b550a80c_deads,jule::Slice<jule::Any>({jule::Any(_28421_v)}));
						_1b550a80c_f->_field_vars=jule::append(_1b550a80c_f->_field_vars.slice(0LL,static_cast<jule::Int>(_28217_i)),_1b550a80c_f->_field_vars.slice(static_cast<jule::Int>(_28217_i + 1LL)));
					} else {
						(_28217_i)++;
					}
				}
				_iter_next_4446084384:;
				goto _iter_begin_4446084384;
				_iter_end_4446084384:;
			}
			_iter_next_4446080640:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b550a80c_f = *_range_begin; goto _iter_begin_4446080640; }
			_iter_end_4446080640:;
		}
	}
}



inline void _1b550a80c_eliminate_dead_functions_package(jule::Ref<_1ab194c20_Package>& _29642_pkg) {
	{
		auto _range_expr = _29642_pkg->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab00cc20_SymbolTable> _1b550a80c_f = *_range_begin;
			_iter_begin_4446083280:;
			{
				_1b550a80c_eliminate_dead_functions(_1b550a80c_f->_field_funcs);
			}
			_iter_next_4446083280:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b550a80c_f = *_range_begin; goto _iter_begin_4446083280; }
			_iter_end_4446083280:;
		}
	}
}



inline void _1b550a80c_eliminate_dead_structs(jule::Ref<_1ab194c20_Package>& _30232_pkg) {
	{
		auto _range_expr = _30232_pkg->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab00cc20_SymbolTable> _1b550a80c_f = *_range_begin;
			_iter_begin_4446085408:;
			{
				jule::Int _30417_i = 0LL;
				_iter_begin_4446097680:;
				if (!(_30417_i < _1b550a80c_f->_field_structs.len())) { goto _iter_end_4446097680; }
				{
					jule::Ref<_1b5e07a00_Struct> _30621_s = _1b550a80c_f->_field_structs[static_cast<jule::Int>(_30417_i)];
					jule::Int _30721_j = 0LL;
					_iter_begin_4446101632:;
					if (!(_30721_j < _30621_s->_field_instances.len())) { goto _iter_end_4446101632; }
					{
						jule::Ref<_1b5e07a00_StructIns> _30925_ins = _30621_s->_field_instances[static_cast<jule::Int>(_30721_j)];
						_1b550a80c_main_current=jule::Any(_30925_ins);
						if (_1b550a80c_is_struct_dead(_30925_ins)) {
							_1b550a80c_deads=jule::append(_1b550a80c_deads,jule::Slice<jule::Any>({jule::Any(_30925_ins)}));
							_30621_s->_field_instances=jule::append(_30621_s->_field_instances.slice(0LL,static_cast<jule::Int>(_30721_j)),_30621_s->_field_instances.slice(static_cast<jule::Int>(_30721_j + 1LL)));
							goto _iter_next_4446101632;
						}
						(_30721_j)++;
					}
					_iter_next_4446101632:;
					goto _iter_begin_4446101632;
					_iter_end_4446101632:;
					if (_30621_s->_field_instances.len() == 0LL) {
						_1b550a80c_f->_field_structs=jule::append(_1b550a80c_f->_field_structs.slice(0LL,static_cast<jule::Int>(_30417_i)),_1b550a80c_f->_field_structs.slice(static_cast<jule::Int>(_30417_i + 1LL)));
						goto _iter_next_4446097680;
					}
					(_30417_i)++;
				}
				_iter_next_4446097680:;
				goto _iter_begin_4446097680;
				_iter_end_4446097680:;
			}
			_iter_next_4446085408:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b550a80c_f = *_range_begin; goto _iter_begin_4446085408; }
			_iter_end_4446085408:;
		}
	}
}



inline void _1b550a80c_eliminate_dead_traits(jule::Ref<_1ab194c20_Package>& _32831_pkg) {
	{
		auto _range_expr = _32831_pkg->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab00cc20_SymbolTable> _1b550a80c_f = *_range_begin;
			_iter_begin_4446107760:;
			{
				jule::Int _33017_i = 0LL;
				_iter_begin_4446118272:;
				if (!(_33017_i < _1b550a80c_f->_field_traits.len())) { goto _iter_end_4446118272; }
				{
					jule::Ref<_1aaee9091_Trait> _33221_t = _1b550a80c_f->_field_traits[static_cast<jule::Int>(_33017_i)];
					_1b550a80c_main_current=jule::Any(_33221_t);
					if (_1b550a80c_is_trait_dead(_33221_t)) {
						_1b550a80c_deads=jule::append(_1b550a80c_deads,jule::Slice<jule::Any>({jule::Any(_33221_t)}));
						_1b550a80c_f->_field_traits=jule::append(_1b550a80c_f->_field_traits.slice(0LL,static_cast<jule::Int>(_33017_i)),_1b550a80c_f->_field_traits.slice(static_cast<jule::Int>(_33017_i + 1LL)));
					} else {
						(_33017_i)++;
					}
				}
				_iter_next_4446118272:;
				goto _iter_begin_4446118272;
				_iter_end_4446118272:;
			}
			_iter_next_4446107760:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b550a80c_f = *_range_begin; goto _iter_begin_4446107760; }
			_iter_end_4446107760:;
		}
	}
}



inline void _1b550a80c_catch_alive_init(jule::Ref<_1ab194c20_Package>& _34426_pkg) {
	
	
	jule::Ref<_1b557cd24_Fn> _34713_f = _34426_pkg->_method_find_fn(jule::Str("init", 4),false);
	if ((!(jule::real(_34713_f)))) {
		return;
	}
	jule::I64 _3529_n = _1b550a80c_deads.len();
	__JULE_DEFER({
		_1b550a80c_deads=_1b550a80c_deads.slice(0LL,static_cast<jule::Int>(_3529_n));
		_1b550a80c_checking=nullptr;
		_1b550a80c_current=jule::Any(nullptr);
	});
	jule::Ref<_1b557cd24_FnIns> _36013_ins = _34713_f->_field_instances[0LL];
	jule::Int _36113_i = 0LL;
	_iter_begin_4446135312:;
	if (!(_36113_i < _36013_ins->_field_refers->_method_len())) { goto _iter_end_4446135312; }
	{
		if ((!(_1b550a80c_is_dead(_36013_ins->_field_refers->_method_at(_36113_i))))) {
			_34713_f->_field_statically=true;
			return;
		}
	}
	_iter_next_4446135312:;
	(_36113_i)++;
	goto _iter_begin_4446135312;
	_iter_end_4446135312:;
}



inline void _1b550a80c_eliminate_package(jule::Ref<_1ab194c20_Package>& _37027_pkg) {
	_1b550a80c_deads=jule::Slice<jule::Any>::alloc(0LL,2000LL);
	_1b550a80c_catch_alive_init(_37027_pkg);
	_1b550a80c_eliminate_dead_globals(_37027_pkg);
	_1b550a80c_eliminate_dead_functions_package(_37027_pkg);
}



inline void _1b550a80c_eliminate(jule::Ref<_1b60cd1d1_IR>& _38123_ir) {
	jule::I64 _38213_i = _38123_ir->_field_used.len() - 1LL;
	_iter_begin_4446144928:;
	if (!(_38213_i >= 0LL)) { goto _iter_end_4446144928; }
	{
		jule::Ref<_1ab194c20_ImportInfo> _38417_u = _38123_ir->_field_used[static_cast<jule::Int>(_38213_i)];
		if ((!(_38417_u->_field_cpp_linked))) {
			_1b550a80c_eliminate_package(_38417_u->_field_package);
		}
	}
	_iter_next_4446144928:;
	(_38213_i)--;
	goto _iter_begin_4446144928;
	_iter_end_4446144928:;
	_1b550a80c_eliminate_package(_38123_ir->_field_main);
	_1b550a80c_deads=nullptr;
	_1b550a80c_checking=nullptr;
	_1b550a80c_current=jule::Any(nullptr);
}



inline void _1b60bd9da_eliminate_dead_code_of_scope(jule::Ref<_1ab009de8_Scope> _7337_s) {
	jule::Ref<_1b60bd9da_ScopeDeadCode> _7413_sdc = jule::new_struct<_1b60bd9da_ScopeDeadCode>(new( std::nothrow ) _1b60bd9da_ScopeDeadCode(jule::Ref<_1b60bd9da_ScopeDeadCode>(),_7337_s,(&(_7337_s->_field_stmts)),jule::Int()));
	{
		_7413_sdc->_method_optimize_stmts();
	}
}



inline jule::U64 _1ad0abb9b_unix(void) {
	return static_cast<jule::U64>(time(nullptr));
}



inline jule::Str _1a977abdc_gen_if(jule::Ref<_1ab009de8_If> _12915_i) {
	jule::Str _13013_obj = jule::Str("if (", 4);
	_13013_obj+=_1aad99bde_gen_expr(_12915_i->_field_expr);
	_13013_obj+=jule::Str(") ", 2);
	_13013_obj+=_1a977abdc_gen_scope(_12915_i->_field_scope);
	return _13013_obj;
}



inline jule::Str _1a977abdc_gen_conditional(jule::Ref<_1ab009de8_Conditional> _13724_c) {
	jule::Str _13813_obj = _1a977abdc_gen_if(_13724_c->_field_elifs[0LL]);
	{
		auto _range_expr = _13724_c->_field_elifs.slice(1LL);
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab009de8_If> _1a977abdc_elif = *_range_begin;
			_iter_begin_4446586928:;
			{
				_13813_obj+=jule::Str(" else ", 6);
				_13813_obj+=_1a977abdc_gen_if(_1a977abdc_elif);
			}
			_iter_next_4446586928:;
			++_range_begin;
			if (_range_begin != _range_end) { _1a977abdc_elif = *_range_begin; goto _iter_begin_4446586928; }
			_iter_end_4446586928:;
		}
	}
	if (jule::real(_13724_c->_field_default)) {
		_13813_obj+=jule::Str(" else ", 6);
		_13813_obj+=_1a977abdc_gen_scope(_13724_c->_field_default->_field_scope);
	}
	return _13813_obj;
}



inline jule::Str _1a977abdc_gen_inf_iter(jule::Ref<_1ab009de8_InfIter> _15321_it) {
	jule::Str _1549_begin = _1acde36d6_iter_begin_label_ident(((jule::Uintptr)((_15321_it).alloc)));
	jule::Str _1559_end = _1acde36d6_iter_end_label_ident(((jule::Uintptr)((_15321_it).alloc)));
	jule::Str _1569_next = _1acde36d6_iter_next_label_ident(((jule::Uintptr)((_15321_it).alloc)));
	jule::Str _1579_indent = _1acde57a4_indent();
	jule::Str _15913_obj = _1549_begin + jule::Str(":;\n", 3);
	_15913_obj+=_1579_indent;
	_15913_obj+=_1a977abdc_gen_scope(_15321_it->_field_scope);
	_15913_obj+=jule::Str("\n", 1);
	_15913_obj+=_1579_indent;
	_15913_obj+=_1569_next + jule::Str(":;\n", 3);
	_15913_obj+=_1579_indent;
	_15913_obj+=(jule::Str("goto ", 5) + _1549_begin) + jule::Str(";\n", 2);
	_15913_obj+=_1579_indent;
	_15913_obj+=_1559_end + jule::Str(":;", 2);
	return _15913_obj;
}



inline jule::Str _1a977abdc_gen_while_iter(jule::Ref<_1ab009de8_WhileIter> _17323_it) {
	jule::Str _1749_begin = _1acde36d6_iter_begin_label_ident(((jule::Uintptr)((_17323_it).alloc)));
	jule::Str _1759_end = _1acde36d6_iter_end_label_ident(((jule::Uintptr)((_17323_it).alloc)));
	jule::Str _1769_next = _1acde36d6_iter_next_label_ident(((jule::Uintptr)((_17323_it).alloc)));
	jule::Str _1779_indent = _1acde57a4_indent();
	jule::Str _17913_obj = _1749_begin + jule::Str(":;\n", 3);
	_17913_obj+=_1779_indent;
	if (_17323_it->_field_expr != nullptr) {
		_17913_obj+=jule::Str("if (!(", 6);
		_17913_obj+=_1aad99bde_gen_expr(_17323_it->_field_expr);
		_17913_obj+=jule::Str(")) { goto ", 10);
		_17913_obj+=_1759_end;
		_17913_obj+=jule::Str("; }\n", 4);
		_17913_obj+=_1779_indent;
	}
	_17913_obj+=_1a977abdc_gen_scope(_17323_it->_field_scope);
	_17913_obj+=jule::Str("\n", 1);
	_17913_obj+=_1779_indent;
	_17913_obj+=_1769_next + jule::Str(":;\n", 3);
	_17913_obj+=_1779_indent;
	if (_17323_it->_field_next != nullptr) {
		_17913_obj+=_1a977abdc_gen_st(_17323_it->_field_next);
		_17913_obj+=jule::Str("\n", 1);
		_17913_obj+=_1779_indent;
	}
	_17913_obj+=(jule::Str("goto ", 5) + _1749_begin) + jule::Str(";\n", 2);
	_17913_obj+=_1779_indent;
	_17913_obj+=_1759_end + jule::Str(":;", 2);
	return _17913_obj;
}



inline jule::Trait<_1a977abdc_RangeSetter> _1a977abdc_get_range_setter(jule::Ref<_1ab009de8_RangeIter> _20625_it) {
	{
		if (!((jule::real(_20625_it->_field_expr->_field_kind->_method_slc())))) { goto _case_end_4446621680; }
		_case_begin_4446621680:;
		{
			return jule::new_struct<_1a977abdc_IndexRangeSetter>(new( std::nothrow ) _1a977abdc_IndexRangeSetter());
		}
		goto _match_end_4446614512;
		_case_end_4446621680:;
		if (!((jule::real(_20625_it->_field_expr->_field_kind->_method_arr())))) { goto _case_end_4446621856; }
		_case_begin_4446621856:;
		{
			return jule::new_struct<_1a977abdc_IndexRangeSetter>(new( std::nothrow ) _1a977abdc_IndexRangeSetter());
		}
		goto _match_end_4446614512;
		_case_end_4446621856:;
		if (!((jule::real(_20625_it->_field_expr->_field_kind->_method_map())))) { goto _case_end_4446621472; }
		_case_begin_4446621472:;
		{
			return jule::new_struct<_1a977abdc_MapRangeSetter>(new( std::nothrow ) _1a977abdc_MapRangeSetter());
		}
		goto _match_end_4446614512;
		_case_end_4446621472:;
		_case_begin_4446618176:;
		{
			return jule::new_struct<_1a977abdc_IndexRangeSetter>(new( std::nothrow ) _1a977abdc_IndexRangeSetter());
		}
		goto _match_end_4446614512;
		_case_end_4446618176:;
		_match_end_4446614512:;
	}
}



inline jule::Str _1a977abdc_gen_range_iter(jule::Ref<_1ab009de8_RangeIter> _21523_it) {
	_1acde57a4_add_indent();
	jule::Str _2189_begin = _1acde36d6_iter_begin_label_ident(((jule::Uintptr)((_21523_it).alloc)));
	jule::Str _2199_end = _1acde36d6_iter_end_label_ident(((jule::Uintptr)((_21523_it).alloc)));
	jule::Str _2209_next = _1acde36d6_iter_next_label_ident(((jule::Uintptr)((_21523_it).alloc)));
	jule::Str _22113__indent = _1acde57a4_indent();
	jule::Trait<_1a977abdc_RangeSetter> _2229_setter = _1a977abdc_get_range_setter(_21523_it);
	jule::Str _22413_obj = jule::Str("{\n", 2);
	_22413_obj+=_22113__indent;
	if (_21523_it->_field_expr->_field_lvalue && _1b615dbac_is_opt_enabled(jule::Str("--opt-copy", 10))) {
		_22413_obj+=jule::Str("auto &_range_expr = ", 20);
	} else {
		_22413_obj+=jule::Str("auto _range_expr = ", 19);
	}
	_22413_obj+=_1aad99bde_gen_expr(_21523_it->_field_expr->_field_model) + jule::Str(";\n", 2);
	_22413_obj+=_22113__indent;
	_22413_obj+=jule::Str("if (_range_expr.begin() != _range_expr.end()) {\n", 48);
	_1acde57a4_add_indent();
	_22113__indent=_1acde57a4_indent();
	_22413_obj+=_22113__indent;
	_22413_obj+=jule::Str("auto _range_begin = _range_expr.begin();\n", 41);
	_22413_obj+=_22113__indent;
	_22413_obj+=jule::Str("const auto _range_end = _range_expr.end();\n", 43);
	_22413_obj+=_22113__indent;
	_22413_obj+=_2229_setter.get()._method_setup_vars(_21523_it->_field_key_a,_21523_it->_field_key_b);
	_22413_obj+=_2189_begin + jule::Str(":;\n", 3);
	_22413_obj+=_22113__indent;
	_22413_obj+=_1a977abdc_gen_scope(_21523_it->_field_scope);
	_22413_obj+=jule::Str("\n", 1);
	_22413_obj+=_22113__indent;
	_22413_obj+=_2209_next + jule::Str(":;\n", 3);
	_22413_obj+=_22113__indent;
	_22413_obj+=_2229_setter.get()._method_next_steps(_21523_it->_field_key_a,_21523_it->_field_key_b,_2189_begin);
	_22413_obj+=_22113__indent;
	_22413_obj+=_2199_end + jule::Str(":;\n", 3);
	_1acde57a4_done_indent();
	_22113__indent=_1acde57a4_indent();
	_22413_obj+=_22113__indent;
	_22413_obj+=jule::Str("}\n", 2);
	_1acde57a4_done_indent();
	_22113__indent=_1acde57a4_indent();
	_22413_obj+=_22113__indent;
	_22413_obj+=jule::Str("}", 1);
	return _22413_obj;
}



inline jule::Str _1a977abdc_gen_cont(jule::Ref<_1ab009de8_ContSt> _27013_c) {
	return (jule::Str("goto ", 5) + _1acde36d6_iter_next_label_ident(_27013_c->_field_it)) + jule::Str(";", 1);
}



inline jule::Str _1a977abdc_gen_label(jule::Ref<_1ab009de8_Label> _27414_l) {
	return _1acde36d6_label_ident(_27414_l->_field_ident) + jule::Str(":;", 2);
}



inline jule::Str _1a977abdc_gen_goto(jule::Ref<_1ab009de8_GotoSt> _27813_gt) {
	return (jule::Str("goto ", 5) + _1acde36d6_label_ident(_27813_gt->_field_ident)) + jule::Str(";", 1);
}



inline jule::Str _1a977abdc_gen_postfix(jule::Ref<_1ab009de8_Postfix> _28220_p) {
	return (((jule::Str("(", 1) + _1aad99bde_gen_expr(_28220_p->_field_expr)) + jule::Str(")", 1)) + _28220_p->_field_op) + jule::Str(";", 1);
}



inline jule::Str _1a977abdc_gen_div_by_zero_assign(jule::Ref<_1ab009de8_Assign> _28631_a) {
	jule::Str _28713_obj = _1aad99bde_gen_expr(_28631_a->_field_l);
	_28713_obj+=jule::Str(" = ", 3);
	_28713_obj+=_1aad99bde_gen_div_by_zero_binop_expr_model(_28631_a->_field_op.slice(0LL,1LL),_28631_a->_field_l,_28631_a->_field_r);
	_28713_obj+=jule::Str(";", 1);
	return _28713_obj;
}



inline jule::Str _1a977abdc_gen_assign(jule::Ref<_1ab009de8_Assign> _29419_a) {
	{
		auto _match_expr{ _29419_a->_field_op };
		if (!((jule::Str("/=", 2)) == _match_expr || (jule::Str("%=", 2)) == _match_expr)) { goto _case_end_4446665408; }
		_case_begin_4446665408:;
		{
			return _1a977abdc_gen_div_by_zero_assign(_29419_a);
		}
		goto _match_end_4446664176;
		_case_end_4446665408:;
		_match_end_4446664176:;
	}
	jule::Str _30113_obj = _1aad99bde_gen_expr(_29419_a->_field_l);
	_30113_obj+=_29419_a->_field_op;
	if (_1b615dbac_is_opt_enabled(jule::Str("--opt-append", 12))) {
		{
			auto _match_expr{ _29419_a->_field_r };
			if (!(_match_expr.type_is<jule::Ref<_1ab33d083_BuiltinAppendCallExprModel>>())) { goto _case_end_4446670400; }
			_case_begin_4446670400:;
			{
				jule::Ref<_1ab33d083_BuiltinAppendCallExprModel> _30621_model = _29419_a->_field_r.operator jule::Ref<_1ab33d083_BuiltinAppendCallExprModel>();
				jule::Str _30718_expr;
				jule::Bool _30724_optimized;
				std::tie(_30718_expr,_30724_optimized) = _1aad99bde_gen_builtin_append_call_expr_model_assign(_29419_a->_field_l,_30621_model);
				if (_30724_optimized) {
					return _30718_expr;
				}
				_30113_obj+=_30718_expr;
			}
			goto _match_end_4446668560;
			_case_end_4446670400:;
			_case_begin_4446669616:;
			{
				_30113_obj+=_1aad99bde_gen_expr(_29419_a->_field_r);
			}
			goto _match_end_4446668560;
			_case_end_4446669616:;
			_match_end_4446668560:;
		}
	} else {
		_30113_obj+=_1aad99bde_gen_expr(_29419_a->_field_r);
	}
	_30113_obj+=jule::Str(";", 1);
	return _30113_obj;
}



inline jule::Str _1a977abdc_gen_multi_assign(jule::Ref<_1ab009de8_MultiAssign> _32325_a) {
	jule::Str _32413_obj = jule::Str("std::tie(", 9);
	{
		auto _range_expr = _32325_a->_field_l;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Any _1a977abdc_l = *_range_begin;
			_iter_begin_4446678528:;
			{
				if (_1a977abdc_l == nullptr) {
					_32413_obj+=jule::Str("std::ignore,", 12);
				} else {
					_32413_obj+=_1aad99bde_gen_expr(_1a977abdc_l) + jule::Str(",", 1);
				}
			}
			_iter_next_4446678528:;
			++_range_begin;
			if (_range_begin != _range_end) { _1a977abdc_l = *_range_begin; goto _iter_begin_4446678528; }
			_iter_end_4446678528:;
		}
	}
	_32413_obj=_32413_obj.slice(0LL,static_cast<jule::Int>(_32413_obj.len() - 1LL));
	_32413_obj+=jule::Str(") = ", 4);
	_32413_obj+=_1aad99bde_gen_expr(_32325_a->_field_r);
	_32413_obj+=jule::Str(";", 1);
	return _32413_obj;
}



inline jule::Str _1a977abdc_gen_case(jule::Ref<_1ab009de8_Match> _34117_m,jule::Ref<_1ab009de8_Case> _34132_c) {
	
	jule::Str _3449_end = _1acde36d6_case_end_label_ident(((jule::Uintptr)((_34132_c).alloc)));
	jule::Str _34513_obj = jule::Str("", 0);
	if (_34132_c->_field_exprs.len() > 0LL) {
		_34513_obj+=jule::Str("if (!(", 6);
		{
			auto _range_expr = _34132_c->_field_exprs;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Int _1a977abdc_i = 0;
				jule::Any _1a977abdc_expr = *_range_begin;
				_iter_begin_4446690976:;
				{
					{
						if (!(((!(_34117_m->_field_type_match))))) { goto _case_end_4446694160; }
						_case_begin_4446694160:;
						{
							_34513_obj+=jule::Str("(", 1);
							_34513_obj+=_1aad99bde_gen_expr(_1a977abdc_expr);
							_34513_obj+=jule::Str(")", 1);
							if (_34117_m->_field_expr->_method_is_const()) {
								if ((!(_34117_m->_field_expr->_field_constant->_method_is_bool())) || (!(_34117_m->_field_expr->_field_constant->_method_read_bool()))) {
									_34513_obj+=jule::Str(" == ", 4);
									_34513_obj+=_1aad99bde_gen_expr_model(_34117_m->_field_expr->_field_model);
								}
							} else {
								_34513_obj+=jule::Str(" == ", 4);
								_34513_obj+=jule::Str("_match_expr", 11);
							}
						}
						goto _match_end_4446693152;
						_case_end_4446694160:;
						_case_begin_4446693328:;
						{
							_34513_obj+=jule::Str("_match_expr", 11);
							_34513_obj+=(jule::Str(".type_is<", 9) + _1aad99bde_gen_expr(_1a977abdc_expr)) + jule::Str(">()", 3);
						}
						goto _match_end_4446693152;
						_case_end_4446693328:;
						_match_end_4446693152:;
					}
					if ((_1a977abdc_i + 1LL) < _34132_c->_field_exprs.len()) {
						_34513_obj+=jule::Str(" || ", 4);
					}
				}
				_iter_next_4446690976:;
				++_range_begin;
				if (_range_begin != _range_end) { ++_1a977abdc_i; _1a977abdc_expr = *_range_begin; goto _iter_begin_4446690976; }
				_iter_end_4446690976:;
			}
		}
		_34513_obj+=jule::Str(")) { goto ", 10);
		_34513_obj+=_3449_end + jule::Str("; }\n", 4);
	}
	if (_34132_c->_field_scope->_field_stmts.len() > 0LL) {
		_34513_obj+=_1acde57a4_indent();
		_34513_obj+=_1acde36d6_case_begin_label_ident(((jule::Uintptr)((_34132_c).alloc))) + jule::Str(":;\n", 3);
		_34513_obj+=_1acde57a4_indent();
		_34513_obj+=_1a977abdc_gen_scope(_34132_c->_field_scope);
		_34513_obj+=jule::Str("\n", 1);
	}
	_34513_obj+=_1acde57a4_indent();
	_34513_obj+=jule::Str("goto ", 5);
	_34513_obj+=_1acde36d6_match_end_label_ident(((jule::Uintptr)((_34117_m).alloc))) + jule::Str(";", 1);
	_34513_obj+=jule::Str("\n", 1);
	_34513_obj+=_1acde57a4_indent();
	_34513_obj+=_3449_end + jule::Str(":;", 2);
	return _34513_obj;
}



inline jule::Str _1a977abdc_gen_match(jule::Ref<_1ab009de8_Match> _39618_m) {
	jule::Str _39713_obj = jule::Str("{\n", 2);
	_1acde57a4_add_indent();
	_39713_obj+=_1acde57a4_indent();
	if ((!(_39618_m->_field_expr->_method_is_const()))) {
		if (_39618_m->_field_expr->_field_lvalue && _1b615dbac_is_opt_enabled(jule::Str("--opt-copy", 10))) {
			_39713_obj+=jule::Str("auto &_match_expr{ ", 19);
		} else {
			_39713_obj+=jule::Str("auto _match_expr{ ", 18);
		}
		_39713_obj+=_1aad99bde_gen_expr(_39618_m->_field_expr->_field_model);
		_39713_obj+=jule::Str(" };\n", 4);
		_39713_obj+=_1acde57a4_indent();
	}
	if (_39618_m->_field_cases.len() > 0LL) {
		_39713_obj+=_1a977abdc_gen_case(_39618_m,_39618_m->_field_cases[0LL]);
		{
			auto _range_expr = _39618_m->_field_cases.slice(1LL);
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_1ab009de8_Case> _1a977abdc_c = *_range_begin;
				_iter_begin_4446720480:;
				{
					_39713_obj+=jule::Str("\n", 1);
					_39713_obj+=_1acde57a4_indent();
					_39713_obj+=_1a977abdc_gen_case(_39618_m,_1a977abdc_c);
				}
				_iter_next_4446720480:;
				++_range_begin;
				if (_range_begin != _range_end) { _1a977abdc_c = *_range_begin; goto _iter_begin_4446720480; }
				_iter_end_4446720480:;
			}
		}
	}
	if (jule::real(_39618_m->_field_default)) {
		_39713_obj+=jule::Str("\n", 1);
		_39713_obj+=_1a977abdc_gen_case(_39618_m,_39618_m->_field_default);
	}
	_39713_obj+=jule::Str("\n", 1);
	_39713_obj+=_1acde57a4_indent();
	_39713_obj+=_1acde36d6_match_end_label_ident(((jule::Uintptr)((_39618_m).alloc))) + jule::Str(":;", 2);
	_39713_obj+=jule::Str("\n", 1);
	_1acde57a4_done_indent();
	_39713_obj+=_1acde57a4_indent();
	_39713_obj+=jule::Str("}", 1);
	return _39713_obj;
}



inline jule::Str _1a977abdc_gen_fall_st(jule::Ref<_1ab009de8_FallSt> _44216_f) {
	return (jule::Str("goto ", 5) + _1acde36d6_case_begin_label_ident(_44216_f->_field_dest_case)) + jule::Str(";", 1);
}



inline jule::Str _1a977abdc_gen_break_st(jule::Ref<_1ab009de8_BreakSt> _44617_b) {
	jule::Str _44713_obj = jule::Str("goto ", 5);
	if (_44617_b->_field_it != 0LL) {
		_44713_obj+=_1acde36d6_iter_end_label_ident(_44617_b->_field_it);
	} else {
		_44713_obj+=_1acde36d6_match_end_label_ident(_44617_b->_field_mtch);
	}
	_44713_obj+=jule::Str(";", 1);
	return _44713_obj;
}



inline jule::Str _1a977abdc_gen_ret_vars(jule::Ref<_1ab009de8_RetSt> _45821_r) {
	jule::Str _45913_obj = jule::Str("", 0);
	{
		auto _range_expr = _45821_r->_field_vars;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b623eab2_Var> _1a977abdc_v = *_range_begin;
			_iter_begin_4446735552:;
			{
				if (_1b61ec5ec_is_ignore_ident(_1a977abdc_v->_field_ident)) {
					_45913_obj+=_1aad99bde_get_init_expr(_1a977abdc_v->_field_kind->_field_kind);
				} else {
					_45913_obj+=_1acde36d6_var_out_ident(_1a977abdc_v);
				}
				_45913_obj+=jule::Str(",", 1);
			}
			_iter_next_4446735552:;
			++_range_begin;
			if (_range_begin != _range_end) { _1a977abdc_v = *_range_begin; goto _iter_begin_4446735552; }
			_iter_end_4446735552:;
		}
	}
	_45913_obj=_45913_obj.slice(0LL,static_cast<jule::Int>(_45913_obj.len() - 1LL));
	if (_45821_r->_field_vars.len() > 1LL) {
		_45913_obj=(jule::Str("return std::make_tuple(", 23) + _45913_obj) + jule::Str(")", 1);
	} else {
		_45913_obj=jule::Str("return ", 7) + _45913_obj;
	}
	_45913_obj+=jule::Str(";", 1);
	return _45913_obj;
}



inline jule::Str _1a977abdc_gen_ret_expr_tuple(jule::Ref<_1ab009de8_RetSt> _48227_r) {
	{
		auto _match_expr{ _48227_r->_field_expr };
		if (!(_match_expr.type_is<jule::Ref<_1ab33d083_FnCallExprModel>>())) { goto _case_end_4446744288; }
		_case_begin_4446744288:;
		{
			return (jule::Str("return ", 7) + _1aad99bde_gen_expr_model(_48227_r->_field_expr)) + jule::Str(";", 1);
		}
		goto _match_end_4446741584;
		_case_end_4446744288:;
		_match_end_4446741584:;
	}
	jule::Slice<jule::Ref<_1ab00dbcc_Data>> _48813_datas = _48227_r->_field_expr.operator jule::Ref<_1ab33d083_TupleExprModel>()->_field_datas;
	jule::Str _48913_obj = jule::Str("", 0);
	{
		auto _range_expr = _48227_r->_field_vars;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1a977abdc_i = 0;
			jule::Ref<_1b623eab2_Var> _1a977abdc_v = *_range_begin;
			_iter_begin_4446749248:;
			{
				if ((!(_1b61ec5ec_is_ignore_ident(_1a977abdc_v->_field_ident)))) {
					jule::Str _49317_ident = _1acde36d6_var_out_ident(_1a977abdc_v);
					_48913_obj+=((_49317_ident + jule::Str(" = ", 3)) + _1aad99bde_gen_expr(_48813_datas[static_cast<jule::Int>(_1a977abdc_i)]->_field_model)) + jule::Str(";\n", 2);
					_48913_obj+=_1acde57a4_indent();
				}
			}
			_iter_next_4446749248:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1a977abdc_i; _1a977abdc_v = *_range_begin; goto _iter_begin_4446749248; }
			_iter_end_4446749248:;
		}
	}
	_48913_obj+=jule::Str("return std::make_tuple(", 23);
	{
		auto _range_expr = _48813_datas;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1a977abdc_i = 0;
			jule::Ref<_1ab00dbcc_Data> _1a977abdc_d = *_range_begin;
			_iter_begin_4446751600:;
			{
				jule::Ref<_1b623eab2_Var> _50117_v = _48227_r->_field_vars[static_cast<jule::Int>(_1a977abdc_i)];
				if (_1b61ec5ec_is_ignore_ident(_50117_v->_field_ident)) {
					_48913_obj+=_1aad99bde_gen_expr(_1a977abdc_d->_field_model);
				} else {
					_48913_obj+=_1acde36d6_var_out_ident(_50117_v);
				}
				_48913_obj+=jule::Str(",", 1);
			}
			_iter_next_4446751600:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1a977abdc_i; _1a977abdc_d = *_range_begin; goto _iter_begin_4446751600; }
			_iter_end_4446751600:;
		}
	}
	_48913_obj=_48913_obj.slice(0LL,static_cast<jule::Int>(_48913_obj.len() - 1LL));
	_48913_obj+=jule::Str(");", 2);
	return _48913_obj;
}



inline jule::Str _1a977abdc_gen_ret_expr(jule::Ref<_1ab009de8_RetSt> _51621_r) {
	if (_51621_r->_field_vars.len() == 0LL) {
		return (jule::Str("return ", 7) + _1aad99bde_gen_expr(_51621_r->_field_expr)) + jule::Str(";", 1);
	}
	if (_51621_r->_field_vars.len() > 1LL) {
		return _1a977abdc_gen_ret_expr_tuple(_51621_r);
	}
	if ((!(_1b61ec5ec_is_ignore_ident(_51621_r->_field_vars[0LL]->_field_ident)))) {
		jule::Str _52613_ident = _1acde36d6_var_out_ident(_51621_r->_field_vars[0LL]);
		jule::Str _52717_obj = ((_52613_ident + jule::Str(" = ", 3)) + _1aad99bde_gen_expr(_51621_r->_field_expr)) + jule::Str(";\n", 2);
		_52717_obj+=_1acde57a4_indent();
		_52717_obj+=(jule::Str("return ", 7) + _52613_ident) + jule::Str(";", 1);
		return _52717_obj;
	}
	return (jule::Str("return ", 7) + _1aad99bde_gen_expr(_51621_r->_field_expr)) + jule::Str(";", 1);
}



inline jule::Str _1a977abdc_gen_ret_st(jule::Ref<_1ab009de8_RetSt> _53619_r) {
	if ((_53619_r->_field_expr == nullptr) && (_53619_r->_field_vars.len() == 0LL)) {
		return jule::Str("return;", 7);
	}
	if (_53619_r->_field_expr == nullptr) {
		return _1a977abdc_gen_ret_vars(_53619_r);
	}
	return _1a977abdc_gen_ret_expr(_53619_r);
}



inline jule::Str _1a977abdc_gen_ret_st_with_defaults(jule::Ref<_1ac6d02c0_TypeKind> _54833_result) {
	jule::Str _54913_obj = jule::Str("return ", 7);
	if (jule::real(_54833_result->_method_tup())) {
		_54913_obj+=jule::Str("std::make_tuple(", 16);
		{
			auto _range_expr = _54833_result->_method_tup()->_field_types;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_1ac6d02c0_TypeKind> _1a977abdc_t = *_range_begin;
				_iter_begin_4446784096:;
				{
					_54913_obj+=_1aad99bde_get_init_expr(_1a977abdc_t);
					_54913_obj+=jule::Str(",", 1);
				}
				_iter_next_4446784096:;
				++_range_begin;
				if (_range_begin != _range_end) { _1a977abdc_t = *_range_begin; goto _iter_begin_4446784096; }
				_iter_end_4446784096:;
			}
		}
		_54913_obj=_54913_obj.slice(0LL,static_cast<jule::Int>(_54913_obj.len() - 1LL));
		_54913_obj+=jule::Str(")", 1);
	} else {
		_54913_obj+=_1aad99bde_get_init_expr(_54833_result);
	}
	_54913_obj+=jule::Str(";", 1);
	return _54913_obj;
}



inline jule::Str _1a977abdc_gen_recover(jule::Ref<_1ab009de8_Recover> _56520_r) {
	jule::Str _56613_obj = jule::Str("try ", 4);
	_56613_obj+=_1a977abdc_gen_scope(_56520_r->_field_scope);
	_56613_obj+=jule::Str(" catch(jule::Exception e) ", 26);
	if (_56520_r->_field_handler->_method_is_anon()) {
		_1acde57a4_add_indent();
		_56613_obj+=jule::Str("{\n", 2);
		_56613_obj+=_1acde57a4_indent();
		_56613_obj+=_1aad99bde_gen_expr(_56520_r->_field_handler_expr);
		_56613_obj+=jule::Str("(jule::exception_to_error(e));", 30);
		if ((!(_56520_r->_field_scope_owner->_field_decl->_method_is_void()))) {
			_56613_obj+=jule::Str("\n", 1);
			_56613_obj+=_1acde57a4_indent();
			_1acde57a4_done_indent();
			_56613_obj+=_1a977abdc_gen_ret_st_with_defaults(_56520_r->_field_scope_owner->_field_result);
		} else {
			_1acde57a4_done_indent();
		}
		_56613_obj+=jule::Str("\n", 1);
		_56613_obj+=_1acde57a4_indent();
		_56613_obj+=jule::Str("}", 1);
	} else {
		_56613_obj+=jule::Str("{\n", 2);
		_1acde57a4_add_indent();
		_56613_obj+=_1acde57a4_indent();
		_56613_obj+=_1aad99bde_gen_expr(_56520_r->_field_handler_expr);
		_56613_obj+=jule::Str("(jule::exception_to_error(e));\n", 31);
		_56613_obj+=_1acde57a4_indent();
		if (_56520_r->_field_scope_owner->_field_decl->_method_is_void()) {
			_1acde57a4_done_indent();
			_56613_obj+=jule::Str(" }", 2);
		} else {
			_56613_obj+=_1a977abdc_gen_ret_st_with_defaults(_56520_r->_field_scope_owner->_field_result);
			_56613_obj+=jule::Str("\n", 1);
			_1acde57a4_done_indent();
			_56613_obj+=_1acde57a4_indent();
			_56613_obj+=jule::Str("}", 1);
		}
	}
	return _56613_obj;
}



inline jule::Str _1a977abdc_gen_data_expr(jule::Ref<_1ab00dbcc_Data> _61422_d) {
	return _1aad99bde_gen_expr(_61422_d->_field_model) + jule::Str(";", 1);
}



inline jule::Str _1a977abdc_gen_scope_var(jule::Ref<_1b623eab2_Var> _61822_v) {
	if (_61822_v->_field_constant) {
		return jule::Str("", 0);
	}
	return _1acde57a4_gen_var(_61822_v);
}



inline jule::Str _1a977abdc_gen_st(jule::Any _62615_st) {
	{
		auto _match_expr{ _62615_st };
		if (!(_match_expr.type_is<jule::Ref<_1ab009de8_Scope>>())) { goto _case_end_4446811504; }
		_case_begin_4446811504:;
		{
			return _1a977abdc_gen_scope(_62615_st.operator jule::Ref<_1ab009de8_Scope>());
		}
		goto _match_end_4446808976;
		_case_end_4446811504:;
		if (!(_match_expr.type_is<jule::Ref<_1b623eab2_Var>>())) { goto _case_end_4446810512; }
		_case_begin_4446810512:;
		{
			return _1a977abdc_gen_scope_var(_62615_st.operator jule::Ref<_1b623eab2_Var>());
		}
		goto _match_end_4446808976;
		_case_end_4446810512:;
		if (!(_match_expr.type_is<jule::Ref<_1ab00dbcc_Data>>())) { goto _case_end_4446810624; }
		_case_begin_4446810624:;
		{
			return _1a977abdc_gen_data_expr(_62615_st.operator jule::Ref<_1ab00dbcc_Data>());
		}
		goto _match_end_4446808976;
		_case_end_4446810624:;
		if (!(_match_expr.type_is<jule::Ref<_1ab009de8_Conditional>>())) { goto _case_end_4446810736; }
		_case_begin_4446810736:;
		{
			return _1a977abdc_gen_conditional(_62615_st.operator jule::Ref<_1ab009de8_Conditional>());
		}
		goto _match_end_4446808976;
		_case_end_4446810736:;
		if (!(_match_expr.type_is<jule::Ref<_1ab009de8_InfIter>>())) { goto _case_end_4446811776; }
		_case_begin_4446811776:;
		{
			return _1a977abdc_gen_inf_iter(_62615_st.operator jule::Ref<_1ab009de8_InfIter>());
		}
		goto _match_end_4446808976;
		_case_end_4446811776:;
		if (!(_match_expr.type_is<jule::Ref<_1ab009de8_WhileIter>>())) { goto _case_end_4446811888; }
		_case_begin_4446811888:;
		{
			return _1a977abdc_gen_while_iter(_62615_st.operator jule::Ref<_1ab009de8_WhileIter>());
		}
		goto _match_end_4446808976;
		_case_end_4446811888:;
		if (!(_match_expr.type_is<jule::Ref<_1ab009de8_RangeIter>>())) { goto _case_end_4446812000; }
		_case_begin_4446812000:;
		{
			return _1a977abdc_gen_range_iter(_62615_st.operator jule::Ref<_1ab009de8_RangeIter>());
		}
		goto _match_end_4446808976;
		_case_end_4446812000:;
		if (!(_match_expr.type_is<jule::Ref<_1ab009de8_ContSt>>())) { goto _case_end_4446812112; }
		_case_begin_4446812112:;
		{
			return _1a977abdc_gen_cont(_62615_st.operator jule::Ref<_1ab009de8_ContSt>());
		}
		goto _match_end_4446808976;
		_case_end_4446812112:;
		if (!(_match_expr.type_is<jule::Ref<_1ab009de8_Label>>())) { goto _case_end_4446812272; }
		_case_begin_4446812272:;
		{
			return _1a977abdc_gen_label(_62615_st.operator jule::Ref<_1ab009de8_Label>());
		}
		goto _match_end_4446808976;
		_case_end_4446812272:;
		if (!(_match_expr.type_is<jule::Ref<_1ab009de8_GotoSt>>())) { goto _case_end_4446812384; }
		_case_begin_4446812384:;
		{
			return _1a977abdc_gen_goto(_62615_st.operator jule::Ref<_1ab009de8_GotoSt>());
		}
		goto _match_end_4446808976;
		_case_end_4446812384:;
		if (!(_match_expr.type_is<jule::Ref<_1ab009de8_Postfix>>())) { goto _case_end_4446812496; }
		_case_begin_4446812496:;
		{
			return _1a977abdc_gen_postfix(_62615_st.operator jule::Ref<_1ab009de8_Postfix>());
		}
		goto _match_end_4446808976;
		_case_end_4446812496:;
		if (!(_match_expr.type_is<jule::Ref<_1ab009de8_Assign>>())) { goto _case_end_4446812608; }
		_case_begin_4446812608:;
		{
			return _1a977abdc_gen_assign(_62615_st.operator jule::Ref<_1ab009de8_Assign>());
		}
		goto _match_end_4446808976;
		_case_end_4446812608:;
		if (!(_match_expr.type_is<jule::Ref<_1ab009de8_MultiAssign>>())) { goto _case_end_4446812720; }
		_case_begin_4446812720:;
		{
			return _1a977abdc_gen_multi_assign(_62615_st.operator jule::Ref<_1ab009de8_MultiAssign>());
		}
		goto _match_end_4446808976;
		_case_end_4446812720:;
		if (!(_match_expr.type_is<jule::Ref<_1ab009de8_Match>>())) { goto _case_end_4446812832; }
		_case_begin_4446812832:;
		{
			return _1a977abdc_gen_match(_62615_st.operator jule::Ref<_1ab009de8_Match>());
		}
		goto _match_end_4446808976;
		_case_end_4446812832:;
		if (!(_match_expr.type_is<jule::Ref<_1ab009de8_FallSt>>())) { goto _case_end_4446812944; }
		_case_begin_4446812944:;
		{
			return _1a977abdc_gen_fall_st(_62615_st.operator jule::Ref<_1ab009de8_FallSt>());
		}
		goto _match_end_4446808976;
		_case_end_4446812944:;
		if (!(_match_expr.type_is<jule::Ref<_1ab009de8_BreakSt>>())) { goto _case_end_4446813056; }
		_case_begin_4446813056:;
		{
			return _1a977abdc_gen_break_st(_62615_st.operator jule::Ref<_1ab009de8_BreakSt>());
		}
		goto _match_end_4446808976;
		_case_end_4446813056:;
		if (!(_match_expr.type_is<jule::Ref<_1ab009de8_RetSt>>())) { goto _case_end_4446813168; }
		_case_begin_4446813168:;
		{
			return _1a977abdc_gen_ret_st(_62615_st.operator jule::Ref<_1ab009de8_RetSt>());
		}
		goto _match_end_4446808976;
		_case_end_4446813168:;
		if (!(_match_expr.type_is<jule::Ref<_1ab009de8_Recover>>())) { goto _case_end_4446813280; }
		_case_begin_4446813280:;
		{
			return _1a977abdc_gen_recover(_62615_st.operator jule::Ref<_1ab009de8_Recover>());
		}
		goto _match_end_4446808976;
		_case_end_4446813280:;
		_case_begin_4446810080:;
		{
			return jule::Str("<unimplemented_stmt>", 20);
		}
		goto _match_end_4446808976;
		_case_end_4446810080:;
		_match_end_4446808976:;
	}
}



inline jule::Str _1a977abdc_gen_scope(jule::Ref<_1ab009de8_Scope> _65118_s) {
	jule::Str _65213_obj = jule::Str("{\n", 2);
	_1acde57a4_add_indent();
	{
		auto _range_expr = _65118_s->_field_stmts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Any _1a977abdc_st = *_range_begin;
			_iter_begin_4446842064:;
			{
				_65213_obj+=_1acde57a4_indent();
				_65213_obj+=_1a977abdc_gen_st(_1a977abdc_st);
				_65213_obj+=jule::Str("\n", 1);
			}
			_iter_next_4446842064:;
			++_range_begin;
			if (_range_begin != _range_end) { _1a977abdc_st = *_range_begin; goto _iter_begin_4446842064; }
			_iter_end_4446842064:;
		}
	}
	_1acde57a4_done_indent();
	_65213_obj+=_1acde57a4_indent();
	_65213_obj+=jule::Str("}", 1);
	if (_65118_s->_field_deferred) {
		_65213_obj=(jule::Str("__JULE_DEFER(", 13) + _65213_obj) + jule::Str(");", 2);
	}
	return _65213_obj;
}



inline jule::Str _1a977abdc_gen_fn_scope(jule::Ref<_1b557cd24_FnIns> _67321_f) {
	if (jule::real(_67321_f->_field_owner)) {
		return _1a977abdc_gen_method_scope(_67321_f);
	}
	return _1a977abdc_gen_scope(_67321_f->_field_scope);
}



inline jule::Str _1a977abdc_gen_method_scope(jule::Ref<_1b557cd24_FnIns> _68225_f) {
	return _1a977abdc_gen_scope(_68225_f->_field_scope);
}



inline jule::Str _1aad99bde_concat_all_parts(jule::Slice<jule::Str> _8021_parts) {
	jule::Str _8113_s = jule::Str("", 0);
	{
		auto _range_expr = _8021_parts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _1aad99bde_part = *_range_begin;
			_iter_begin_4446852416:;
			{
				_8113_s+=_1aad99bde_part;
			}
			_iter_next_4446852416:;
			++_range_begin;
			if (_range_begin != _range_end) { _1aad99bde_part = *_range_begin; goto _iter_begin_4446852416; }
			_iter_end_4446852416:;
		}
	}
	return _8113_s;
}



inline jule::Str _1aad99bde_get_accessor(jule::Ref<_1ac6d02c0_TypeKind> _8821_t) {
	if (jule::real(_8821_t->_method_ref()) || jule::real(_8821_t->_method_ptr())) {
		return jule::Str("->", 2);
	}
	return jule::Str(".", 1);
}



inline jule::Str _1aad99bde_decompose_common_esq(jule::U8 _9525_b) {
	{
		auto _match_expr{ _9525_b };
		if (!(('\\') == _match_expr)) { goto _case_end_4446858304; }
		_case_begin_4446858304:;
		{
			return jule::Str("\\\\", 2);
		}
		goto _match_end_4441931024;
		_case_end_4446858304:;
		if (!(('\'') == _match_expr)) { goto _case_end_4446858416; }
		_case_begin_4446858416:;
		{
			return jule::Str("'", 1);
		}
		goto _match_end_4441931024;
		_case_end_4446858416:;
		if (!(('\"') == _match_expr)) { goto _case_end_4446859376; }
		_case_begin_4446859376:;
		{
			return jule::Str("\\\"", 2);
		}
		goto _match_end_4441931024;
		_case_end_4446859376:;
		if (!(('\a') == _match_expr)) { goto _case_end_4446859488; }
		_case_begin_4446859488:;
		{
			return jule::Str("\\a", 2);
		}
		goto _match_end_4441931024;
		_case_end_4446859488:;
		if (!(('\b') == _match_expr)) { goto _case_end_4446859600; }
		_case_begin_4446859600:;
		{
			return jule::Str("\\b", 2);
		}
		goto _match_end_4441931024;
		_case_end_4446859600:;
		if (!(('\f') == _match_expr)) { goto _case_end_4446859712; }
		_case_begin_4446859712:;
		{
			return jule::Str("\\f", 2);
		}
		goto _match_end_4441931024;
		_case_end_4446859712:;
		if (!(('\n') == _match_expr)) { goto _case_end_4446858688; }
		_case_begin_4446858688:;
		{
			return jule::Str("\\n", 2);
		}
		goto _match_end_4441931024;
		_case_end_4446858688:;
		if (!(('\r') == _match_expr)) { goto _case_end_4446858800; }
		_case_begin_4446858800:;
		{
			return jule::Str("\\r", 2);
		}
		goto _match_end_4441931024;
		_case_end_4446858800:;
		if (!(('\t') == _match_expr)) { goto _case_end_4446858912; }
		_case_begin_4446858912:;
		{
			return jule::Str("\\t", 2);
		}
		goto _match_end_4441931024;
		_case_end_4446858912:;
		if (!(('\v') == _match_expr)) { goto _case_end_4446859040; }
		_case_begin_4446859040:;
		{
			return jule::Str("\\v", 2);
		}
		goto _match_end_4441931024;
		_case_end_4446859040:;
		_case_begin_4441931120:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4441931024;
		_case_end_4441931120:;
		_match_end_4441931024:;
	}
}



inline jule::Str _1aad99bde_sbtoa(jule::U8 _11110_b) {
	if (_11110_b == 0LL) {
		return jule::Str("\\x00", 4);
	}
	if (_11110_b <= 127LL) {
		jule::Str _11713_seq = _1aad99bde_decompose_common_esq(_11110_b);
		if (_11713_seq != jule::Str("", 0)) {
			return _11713_seq;
		}
		if ((32LL <= _11110_b) && (_11110_b <= 126LL)) {
			return static_cast<jule::Str>(_11110_b);
		}
	}
	jule::Str _1279_seq = _1b59a1be8_fmt_uint(static_cast<jule::U64>(_11110_b),8LL);
	if (_1279_seq.len() == 2LL) {
		return jule::Str("\\0", 2) + _1279_seq;
	}
	return jule::Str("\\", 1) + _1279_seq;
}



inline jule::Str _1aad99bde_get_str_model(jule::Ref<_1ac90c3ed_Const> _13418_c) {
	jule::Str _1359_content = _13418_c->_method_read_str();
	jule::Slice<jule::U8> _1369_bytes = static_cast<jule::Slice<jule::U8>>(_1359_content);
	jule::Str _1379_len = _1b59a1be8_fmt_int(static_cast<jule::I64>(_1369_bytes.len()),10LL);
	jule::Str _13913_lit = jule::Str("", 0);
	{
		auto _range_expr = _1369_bytes;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::U8 _1aad99bde_b = *_range_begin;
			_iter_begin_4446879328:;
			{
				_13913_lit+=_1aad99bde_sbtoa(_1aad99bde_b);
			}
			_iter_next_4446879328:;
			++_range_begin;
			if (_range_begin != _range_end) { _1aad99bde_b = *_range_begin; goto _iter_begin_4446879328; }
			_iter_end_4446879328:;
		}
	}
	return ((((_1acde36d6_as_jt(jule::Str("str", 3)) + jule::Str("(\"", 2)) + _13913_lit) + jule::Str("\", ", 3)) + _1379_len) + jule::Str(")", 1);
}



inline jule::Str _1aad99bde_get_bool_model(jule::Ref<_1ac90c3ed_Const> _14719_c) {
	if (_14719_c->_method_read_bool()) {
		return jule::Str("true", 4);
	}
	return jule::Str("false", 5);
}



inline jule::Str _1aad99bde_get_nil_model(void) {
	return jule::Str("nullptr", 7);
}



inline jule::Str _1aad99bde_gen_float_special_cases(jule::F64 _15628_x) {
	{
		if (!((_1b5ab659e_is_nan(_15628_x)))) { goto _case_end_4446885936; }
		_case_begin_4446885936:;
		{
			return jule::Str("NAN", 3);
		}
		goto _match_end_4446885376;
		_case_end_4446885936:;
		if (!((_1b5ab659e_is_inf(_15628_x,1LL)))) { goto _case_end_4446886048; }
		_case_begin_4446886048:;
		{
			return jule::Str("INFINITY", 8);
		}
		goto _match_end_4446885376;
		_case_end_4446886048:;
		if (!((_1b5ab659e_is_inf(_15628_x,-1LL)))) { goto _case_end_4446886160; }
		_case_begin_4446886160:;
		{
			return jule::Str("-INFINITY", 9);
		}
		goto _match_end_4446885376;
		_case_end_4446886160:;
		_case_begin_4446885568:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4446885376;
		_case_end_4446885568:;
		_match_end_4446885376:;
	}
}



inline jule::Str _1aad99bde_ftoa(jule::F64 _1659_f,jule::Int _16517_bitsize) {
	if (_16517_bitsize != 32LL) {
		if (_1659_f == static_cast<jule::F64>(static_cast<jule::I64>(_1659_f))) {
			return _1aad99bde_i64toa(static_cast<jule::I64>(_1659_f));
		}
		if (_1659_f == static_cast<jule::F64>(static_cast<jule::U64>(_1659_f))) {
			return _1aad99bde_u64toa(static_cast<jule::U64>(_1659_f));
		}
	}
	jule::Str _17513_m = _1cdd4411b_fmt_float(_1659_f,'f',-1LL,_16517_bitsize);
	if (_17513_m.find(jule::Str(".", 1)) == -1LL) {
		_17513_m+=jule::Str(".0", 2);
	}
	return _17513_m;
}



inline jule::Str _1aad99bde_get_f32_model(jule::Ref<_1ac90c3ed_Const> _18218_c) {
	jule::F64 _1839_x = _18218_c->_method_as_f64();
	jule::Str _1869_f = _1aad99bde_gen_float_special_cases(_1839_x);
	if (_1869_f != jule::Str("", 0)) {
		return _1869_f;
	}
	{
		if (!((_1839_x == 340282346638528860000000000000000000000.0))) { goto _case_end_4446902432; }
		_case_begin_4446902432:;
		{
			return jule::Str("jule::MAX_F32", 13);
		}
		goto _match_end_4446901872;
		_case_end_4446902432:;
		if (!((_1839_x == -340282346638528860000000000000000000000.0))) { goto _case_end_4446902544; }
		_case_begin_4446902544:;
		{
			return jule::Str("jule::MIN_F32", 13);
		}
		goto _match_end_4446901872;
		_case_end_4446902544:;
		_match_end_4446901872:;
	}
	return _1aad99bde_ftoa(_1839_x,32LL) + jule::Str("f", 1);
}



inline jule::Str _1aad99bde_get_f64_model(jule::Ref<_1ac90c3ed_Const> _19918_c) {
	jule::F64 _2009_x = _19918_c->_method_as_f64();
	jule::Str _2039_f = _1aad99bde_gen_float_special_cases(_2009_x);
	if (_2039_f != jule::Str("", 0)) {
		return _2039_f;
	}
	{
		if (!((_2009_x == jule::MAX_F64))) { goto _case_end_4446908960; }
		_case_begin_4446908960:;
		{
			return jule::Str("jule::MAX_F64", 13);
		}
		goto _match_end_4446908432;
		_case_end_4446908960:;
		if (!((_2009_x == jule::MIN_F64))) { goto _case_end_4446909072; }
		_case_begin_4446909072:;
		{
			return jule::Str("jule::MIN_F64", 13);
		}
		goto _match_end_4446908432;
		_case_end_4446909072:;
		_match_end_4446908432:;
	}
	return _1aad99bde_ftoa(_2009_x,64LL);
}



inline jule::Str _1aad99bde_get_float_model(jule::Ref<_1ab00dbcc_Data> _21624_d) {
	{
		if (!((_21624_d->_field_kind->_method_prim()->_method_is_f32()))) { goto _case_end_4446913984; }
		_case_begin_4446913984:;
		{
			return _1aad99bde_get_f32_model(_21624_d->_field_constant);
		}
		goto _match_end_4446911744;
		_case_end_4446913984:;
		_case_begin_4446912624:;
		{
			return _1aad99bde_get_f64_model(_21624_d->_field_constant);
		}
		goto _match_end_4446911744;
		_case_end_4446912624:;
		_match_end_4446911744:;
	}
}



inline jule::Str _1aad99bde_i64toa(jule::I64 _22311_x) {
	{
		if (!((_22311_x == jule::MAX_I64))) { goto _case_end_4446915504; }
		_case_begin_4446915504:;
		{
			return jule::Str("jule::MAX_I64", 13);
		}
		goto _match_end_4446912864;
		_case_end_4446915504:;
		if (!((_22311_x == jule::MIN_I64))) { goto _case_end_4446915632; }
		_case_begin_4446915632:;
		{
			return jule::Str("jule::MIN_I64", 13);
		}
		goto _match_end_4446912864;
		_case_end_4446915632:;
		_match_end_4446912864:;
	}
	jule::Str _2299_fmt = _1b59a1be8_fmt_int(_22311_x,10LL);
	if (_1cde73206_is_64bit(jule::Str("amd64", 5))) {
		return _2299_fmt + jule::Str("LL", 2);
	}
	return _2299_fmt + jule::Str("L", 1);
}



inline jule::Str _1aad99bde_get_i64_model(jule::Ref<_1ac90c3ed_Const> _23618_c) {
	return _1aad99bde_i64toa(static_cast<jule::I64>(_23618_c->_method_read_i64()));
}



inline jule::Str _1aad99bde_u64toa(jule::U64 _24011_x) {
	{
		if (!((_24011_x == jule::MAX_U64))) { goto _case_end_4446924016; }
		_case_begin_4446924016:;
		{
			return jule::Str("jule::MAX_U64", 13);
		}
		goto _match_end_4446923856;
		_case_end_4446924016:;
		_match_end_4446923856:;
	}
	jule::Str _2469_fmt = _1b59a1be8_fmt_uint(_24011_x,10LL);
	if (_1cde73206_is_64bit(jule::Str("amd64", 5))) {
		return _2469_fmt + jule::Str("LLU", 3);
	}
	return _2469_fmt + jule::Str("LU", 2);
}



inline jule::Str _1aad99bde_get_u64_model(jule::Ref<_1ac90c3ed_Const> _25318_c) {
	return _1aad99bde_u64toa(static_cast<jule::U64>(_25318_c->_method_read_u64()));
}



inline jule::Str _1aad99bde_gen_const_expr(jule::Ref<_1ab00dbcc_Data> _25723_d) {
	{
		if (!((_25723_d->_field_constant->_method_is_str()))) { goto _case_end_4446930704; }
		_case_begin_4446930704:;
		{
			return _1aad99bde_get_str_model(_25723_d->_field_constant);
		}
		goto _match_end_4446930160;
		_case_end_4446930704:;
		if (!((_25723_d->_field_constant->_method_is_bool()))) { goto _case_end_4446930816; }
		_case_begin_4446930816:;
		{
			return _1aad99bde_get_bool_model(_25723_d->_field_constant);
		}
		goto _match_end_4446930160;
		_case_end_4446930816:;
		if (!((_25723_d->_field_constant->_method_is_f64()))) { goto _case_end_4446932032; }
		_case_begin_4446932032:;
		{
			return _1aad99bde_get_float_model(_25723_d);
		}
		goto _match_end_4446930160;
		_case_end_4446932032:;
		if (!((_25723_d->_field_constant->_method_is_i64()))) { goto _case_end_4446932144; }
		_case_begin_4446932144:;
		{
			return _1aad99bde_get_i64_model(_25723_d->_field_constant);
		}
		goto _match_end_4446930160;
		_case_end_4446932144:;
		if (!((_25723_d->_field_constant->_method_is_u64()))) { goto _case_end_4446932256; }
		_case_begin_4446932256:;
		{
			return _1aad99bde_get_u64_model(_25723_d->_field_constant);
		}
		goto _match_end_4446930160;
		_case_end_4446932256:;
		if (!((_25723_d->_field_constant->_method_is_nil()))) { goto _case_end_4446932368; }
		_case_begin_4446932368:;
		{
			return _1aad99bde_get_nil_model();
		}
		goto _match_end_4446930160;
		_case_end_4446932368:;
		_case_begin_4446930288:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4446930160;
		_case_end_4446930288:;
		_match_end_4446930160:;
	}
}



inline jule::Str _1aad99bde_gen_const_expr_model(jule::Ref<_1ac90c3ed_Const> _26925_m) {
	{
		if (!((_26925_m->_method_is_str()))) { goto _case_end_4446941824; }
		_case_begin_4446941824:;
		{
			return _1aad99bde_get_str_model(_26925_m);
		}
		goto _match_end_4446941056;
		_case_end_4446941824:;
		if (!((_26925_m->_method_is_bool()))) { goto _case_end_4446941936; }
		_case_begin_4446941936:;
		{
			return _1aad99bde_get_bool_model(_26925_m);
		}
		goto _match_end_4446941056;
		_case_end_4446941936:;
		if (!((_26925_m->_method_is_f64()))) { goto _case_end_4446943152; }
		_case_begin_4446943152:;
		{
			return _1aad99bde_get_f64_model(_26925_m);
		}
		goto _match_end_4446941056;
		_case_end_4446943152:;
		if (!((_26925_m->_method_is_i64()))) { goto _case_end_4446943264; }
		_case_begin_4446943264:;
		{
			return _1aad99bde_get_i64_model(_26925_m);
		}
		goto _match_end_4446941056;
		_case_end_4446943264:;
		if (!((_26925_m->_method_is_u64()))) { goto _case_end_4446943376; }
		_case_begin_4446943376:;
		{
			return _1aad99bde_get_u64_model(_26925_m);
		}
		goto _match_end_4446941056;
		_case_end_4446943376:;
		if (!((_26925_m->_method_is_nil()))) { goto _case_end_4446943488; }
		_case_begin_4446943488:;
		{
			return _1aad99bde_get_nil_model();
		}
		goto _match_end_4446941056;
		_case_end_4446943488:;
		_case_begin_4446932864:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4446941056;
		_case_end_4446932864:;
		_match_end_4446941056:;
	}
}



inline jule::Str _1aad99bde_gen_div_by_zero_binop_expr_model(jule::Str _28137_op,jule::Any _28150_l,jule::Any _28168_r) {
	jule::Str _28213_op_func = jule::Str("", 0);
	{
		auto _match_expr{ _28137_op };
		if (!((jule::Str("/", 1)) == _match_expr)) { goto _case_end_4446952000; }
		_case_begin_4446952000:;
		{
			_28213_op_func=jule::Str("div", 3);
		}
		goto _match_end_4446951600;
		_case_end_4446952000:;
		if (!((jule::Str("%", 1)) == _match_expr)) { goto _case_end_4446952112; }
		_case_begin_4446952112:;
		{
			_28213_op_func=jule::Str("mod", 3);
		}
		goto _match_end_4446951600;
		_case_end_4446952112:;
		_match_end_4446951600:;
	}
	if (_1b615dbac_is_opt_enabled(jule::Str("--opt-math", 10))) {
		{
			auto _match_expr{ _28168_r };
			if (!(_match_expr.type_is<jule::Ref<_1ac90c3ed_Const>>())) { goto _case_end_4446954864; }
			_case_begin_4446954864:;
			{
				_28213_op_func=jule::Str("unsafe_", 7) + _28213_op_func;
			}
			goto _match_end_4446953248;
			_case_end_4446954864:;
			_match_end_4446953248:;
		}
	}
	jule::Str _29513_obj = jule::Str("jule::", 6);
	_29513_obj+=_28213_op_func;
	_29513_obj+=jule::Str("(", 1);
	_29513_obj+=_1aad99bde_gen_expr(_28150_l);
	_29513_obj+=jule::Str(",", 1);
	_29513_obj+=_1aad99bde_gen_expr(_28168_r);
	_29513_obj+=jule::Str(")", 1);
	return _29513_obj;
}



inline jule::Str _1aad99bde_gen_binop_expr_model(jule::Ref<_1ab33d083_BinopExprModel> _30529_m) {
	{
		auto _match_expr{ _30529_m->_field_op };
		if (!((jule::Str("/", 1)) == _match_expr || (jule::Str("%", 1)) == _match_expr)) { goto _case_end_4446959696; }
		_case_begin_4446959696:;
		{
			return _1aad99bde_gen_div_by_zero_binop_expr_model(_30529_m->_field_op,_30529_m->_field_left,_30529_m->_field_right);
		}
		goto _match_end_4446958624;
		_case_end_4446959696:;
		_match_end_4446958624:;
	}
	jule::Str _31213_obj = jule::Str("(", 1);
	_31213_obj+=_1aad99bde_gen_expr_model(_30529_m->_field_left);
	_31213_obj+=jule::Str(" ", 1);
	_31213_obj+=_30529_m->_field_op;
	_31213_obj+=jule::Str(" ", 1);
	_31213_obj+=_1aad99bde_gen_expr_model(_30529_m->_field_right);
	_31213_obj+=jule::Str(")", 1);
	return _31213_obj;
}



inline jule::Str _1aad99bde_gen_var_expr_model(jule::Ref<_1b623eab2_Var> _32227_m) {
	if (_32227_m->_field_cpp_linked) {
		jule::Ref<_1b61ca014_Directive> _32413_d = _1ace28a7e_find_directive(_32227_m->_field_directives,jule::Str("namespace", 9));
		if (jule::real(_32413_d)) {
			return (_1aad99bde_concat_all_parts(_32413_d->_field_args) + jule::Str("::", 2)) + _1acde36d6_var_out_ident(_32227_m);
		}
	}
	return _1acde36d6_var_out_ident(_32227_m);
}



inline jule::Str _1aad99bde_gen_struct_expr_model(jule::Ref<_1b5e07a00_Struct> _33226_m) {
	return _1ace28a7e_gen_struct_kind(_33226_m);
}



inline jule::Str _1aad99bde_gen_struct_ins_expr_model(jule::Ref<_1b5e07a00_StructIns> _33634_m) {
	return _1ace28a7e_gen_struct_kind_ins(_33634_m);
}



inline jule::Str _1aad99bde_gen_unary_expr_model(jule::Ref<_1ab33d083_UnaryExprModel> _34029_m) {
	{
		auto _match_expr{ _34029_m->_field_op };
		if (!((jule::Str("^", 1)) == _match_expr)) { goto _case_end_4446975360; }
		_case_begin_4446975360:;
		{
			return (jule::Str("(~(", 3) + _1aad99bde_gen_expr(_34029_m->_field_expr)) + jule::Str("))", 2);
		}
		goto _match_end_4446969488;
		_case_end_4446975360:;
		_case_begin_4446973648:;
		{
			return (((jule::Str("(", 1) + _34029_m->_field_op) + jule::Str("(", 1)) + _1aad99bde_gen_expr(_34029_m->_field_expr)) + jule::Str("))", 2);
		}
		goto _match_end_4446969488;
		_case_end_4446973648:;
		_match_end_4446969488:;
	}
}



inline jule::Str _1aad99bde_gen_get_ref_ptr_expr_model(jule::Ref<_1ab33d083_GetRefPtrExprModel> _34735_m) {
	return (jule::Str("(", 1) + _1aad99bde_gen_expr(_34735_m->_field_expr)) + jule::Str(").alloc", 7);
}



inline jule::Str _1aad99bde_gen_cpp_struct_lit_expr_model(jule::Ref<_1ab33d083_StructLitExprModel> _35138_m) {
	jule::Str _35213_obj = jule::Str("(", 1) + _1ace28a7e_gen_struct_kind_ins(_35138_m->_field_strct);
	_35213_obj+=jule::Str("){", 2);
	if (_35138_m->_field_args.len() > 0LL) {
		_julec_label_iter:;
		{
			auto _range_expr = _35138_m->_field_strct->_field_fields;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_1b5e07a00_FieldIns> _1aad99bde_f = *_range_begin;
				_iter_begin_4446983632:;
				{
					if (_35138_m->_field_strct->_field_decl->_field_cpp_linked) {
						{
							auto _range_expr = _35138_m->_field_args;
							if (_range_expr.begin() != _range_expr.end()) {
								auto _range_begin = _range_expr.begin();
								const auto _range_end = _range_expr.end();
								jule::Ref<_1ab33d083_StructArgExprModel> _1aad99bde_arg = *_range_begin;
								_iter_begin_4446986496:;
								{
									if (_1aad99bde_arg->_field_field == _1aad99bde_f) {
										_35213_obj+=jule::Str(".", 1);
										_35213_obj+=_1acde36d6_field_out_ident(_1aad99bde_f->_field_decl);
										_35213_obj+=jule::Str("=", 1);
										_35213_obj+=_1aad99bde_gen_expr(_1aad99bde_arg->_field_expr) + jule::Str(",", 1);
										goto _iter_next_4446983632;
									}
								}
								_iter_next_4446986496:;
								++_range_begin;
								if (_range_begin != _range_end) { _1aad99bde_arg = *_range_begin; goto _iter_begin_4446986496; }
								_iter_end_4446986496:;
							}
						}
						goto _iter_next_4446983632;
					}
					_35213_obj+=_1acde36d6_field_out_ident(_1aad99bde_f->_field_decl) + jule::Str(": ", 2);
					{
						auto _range_expr = _35138_m->_field_args;
						if (_range_expr.begin() != _range_expr.end()) {
							auto _range_begin = _range_expr.begin();
							const auto _range_end = _range_expr.end();
							jule::Ref<_1ab33d083_StructArgExprModel> _1aad99bde_arg = *_range_begin;
							_iter_begin_4446987344:;
							{
								if (_1aad99bde_arg->_field_field == _1aad99bde_f) {
									_35213_obj+=_1aad99bde_gen_expr(_1aad99bde_arg->_field_expr) + jule::Str(",", 1);
									goto _iter_next_4446983632;
								}
							}
							_iter_next_4446987344:;
							++_range_begin;
							if (_range_begin != _range_end) { _1aad99bde_arg = *_range_begin; goto _iter_begin_4446987344; }
							_iter_end_4446987344:;
						}
					}
					_35213_obj+=_1aad99bde_get_init_expr(_1aad99bde_f->_field_kind) + jule::Str(",", 1);
				}
				_iter_next_4446983632:;
				++_range_begin;
				if (_range_begin != _range_end) { _1aad99bde_f = *_range_begin; goto _iter_begin_4446983632; }
				_iter_end_4446983632:;
			}
		}
		_35213_obj=_35213_obj.slice(0LL,static_cast<jule::Int>(_35213_obj.len() - 1LL));
	}
	_35213_obj+=jule::Str("}", 1);
	return _35213_obj;
}



inline jule::Str _1aad99bde_gen_struct_lit_expr_model(jule::Ref<_1ab33d083_StructLitExprModel> _38534_m) {
	if (_38534_m->_field_strct->_field_decl->_field_cpp_linked) {
		return _1aad99bde_gen_cpp_struct_lit_expr_model(_38534_m);
	}
	jule::Str _39013_obj = _1acde36d6_struct_ins_out_ident(_38534_m->_field_strct);
	_39013_obj+=jule::Str("(", 1);
	if (_38534_m->_field_args.len() > 0LL) {
		_julec_label_iter:;
		{
			auto _range_expr = _38534_m->_field_strct->_field_fields;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_1b5e07a00_FieldIns> _1aad99bde_f = *_range_begin;
				_iter_begin_4447004016:;
				{
					{
						auto _range_expr = _38534_m->_field_args;
						if (_range_expr.begin() != _range_expr.end()) {
							auto _range_begin = _range_expr.begin();
							const auto _range_end = _range_expr.end();
							jule::Ref<_1ab33d083_StructArgExprModel> _1aad99bde_arg = *_range_begin;
							_iter_begin_4447005904:;
							{
								if (_1aad99bde_arg->_field_field == _1aad99bde_f) {
									_39013_obj+=_1aad99bde_gen_expr(_1aad99bde_arg->_field_expr) + jule::Str(",", 1);
									goto _iter_next_4447004016;
								}
							}
							_iter_next_4447005904:;
							++_range_begin;
							if (_range_begin != _range_end) { _1aad99bde_arg = *_range_begin; goto _iter_begin_4447005904; }
							_iter_end_4447005904:;
						}
					}
					_39013_obj+=_1aad99bde_get_init_expr(_1aad99bde_f->_field_kind) + jule::Str(",", 1);
				}
				_iter_next_4447004016:;
				++_range_begin;
				if (_range_begin != _range_end) { _1aad99bde_f = *_range_begin; goto _iter_begin_4447004016; }
				_iter_end_4447004016:;
			}
		}
		_39013_obj=_39013_obj.slice(0LL,static_cast<jule::Int>(_39013_obj.len() - 1LL));
	}
	_39013_obj+=jule::Str(")", 1);
	return _39013_obj;
}



inline jule::Str _1aad99bde_gen_alloc_struct_lit_expr_model(jule::Ref<_1ab33d083_AllocStructLitExprModel> _40940_m) {
	jule::Str _41013_obj = jule::Str("jule::new_struct<", 17);
	_41013_obj+=_1acde36d6_struct_ins_out_ident(_40940_m->_field_lit->_field_strct);
	_41013_obj+=jule::Str(">(new( std::nothrow ) ", 22);
	_41013_obj+=_1aad99bde_gen_struct_lit_expr_model(_40940_m->_field_lit);
	_41013_obj+=jule::Str(")", 1);
	return _41013_obj;
}



inline jule::Str _1aad99bde_gen_casting_expr_model(jule::Ref<_1ab33d083_CastingExprModel> _41831_m) {
	jule::Str _41913_obj = jule::Str("", 0);
	{
		if (!((jule::real(_41831_m->_field_kind->_method_prim()) && _41831_m->_field_kind->_method_prim()->_method_is_any()))) { goto _case_end_4447037968; }
		_case_begin_4447037968:;
		{
			_41913_obj+=_1ace28a7e_gen_type_kind(_41831_m->_field_kind);
			_41913_obj+=jule::Str("(", 1);
			_41913_obj+=_1aad99bde_gen_expr_model(_41831_m->_field_expr);
			_41913_obj+=jule::Str(")", 1);
		}
		goto _match_end_4447034112;
		_case_end_4447037968:;
		if (!((jule::real(_41831_m->_field_expr_kind->_method_ptr())) || (jule::real(_41831_m->_field_kind->_method_ptr())))) { goto _case_end_4447038080; }
		_case_begin_4447038080:;
		{
			_41913_obj+=jule::Str("((", 2);
			_41913_obj+=_1ace28a7e_gen_type_kind(_41831_m->_field_kind);
			_41913_obj+=jule::Str(")(", 2);
			_41913_obj+=_1aad99bde_gen_expr(_41831_m->_field_expr);
			_41913_obj+=jule::Str("))", 2);
		}
		goto _match_end_4447034112;
		_case_end_4447038080:;
		if (!((jule::real(_41831_m->_field_expr_kind->_method_trt())) || (jule::real(_41831_m->_field_expr_kind->_method_prim()) && _41831_m->_field_expr_kind->_method_prim()->_method_is_any()))) { goto _case_end_4447037600; }
		_case_begin_4447037600:;
		{
			_41913_obj+=_1aad99bde_gen_expr_model(_41831_m->_field_expr);
			_41913_obj+=_1aad99bde_get_accessor(_41831_m->_field_expr_kind);
			_41913_obj+=jule::Str("operator ", 9);
			_41913_obj+=_1ace28a7e_gen_type_kind(_41831_m->_field_kind);
			_41913_obj+=jule::Str("()", 2);
		}
		goto _match_end_4447034112;
		_case_end_4447037600:;
		_case_begin_4447034240:;
		{
			_41913_obj+=jule::Str("static_cast<", 12);
			_41913_obj+=_1ace28a7e_gen_type_kind(_41831_m->_field_kind);
			_41913_obj+=jule::Str(">(", 2);
			_41913_obj+=_1aad99bde_gen_expr(_41831_m->_field_expr);
			_41913_obj+=jule::Str(")", 1);
		}
		goto _match_end_4447034112;
		_case_end_4447034240:;
		_match_end_4447034112:;
	}
	return _41913_obj;
}



inline jule::Str _1aad99bde_gen_arg_expr_models(jule::Slice<jule::Any> _45328_models) {
	if (_45328_models.len() == 0LL) {
		return jule::Str("", 0);
	}
	jule::Str _45813_obj = jule::Str("", 0);
	{
		auto _range_expr = _45328_models;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Any _1aad99bde_m = *_range_begin;
			_iter_begin_4447050592:;
			{
				_45813_obj+=_1aad99bde_gen_expr(_1aad99bde_m) + jule::Str(",", 1);
			}
			_iter_next_4447050592:;
			++_range_begin;
			if (_range_begin != _range_end) { _1aad99bde_m = *_range_begin; goto _iter_begin_4447050592; }
			_iter_end_4447050592:;
		}
	}
	_45813_obj=_45813_obj.slice(0LL,static_cast<jule::Int>(_45813_obj.len() - 1LL));
	return _45813_obj;
}



inline jule::Str _1aad99bde_gen_expr_model_for_call(jule::Any _46632_expr) {
	{
		auto _match_expr{ _46632_expr };
		if (!(_match_expr.type_is<jule::Ref<_1b557cd24_FnIns>>())) { goto _case_end_4447057792; }
		_case_begin_4447057792:;
		{
			return _1aad99bde_gen_fn_ins_expr_model(_46632_expr.operator jule::Ref<_1b557cd24_FnIns>());
		}
		goto _match_end_4447054672;
		_case_end_4447057792:;
		_case_begin_4447056304:;
		{
			return _1aad99bde_gen_expr_model(_46632_expr);
		}
		goto _match_end_4447054672;
		_case_end_4447056304:;
		_match_end_4447054672:;
	}
}



inline jule::Str _1aad99bde_gen_fn_call_expr_model(jule::Ref<_1ab33d083_FnCallExprModel> _47331_m) {
	jule::Str _47413_obj = _1aad99bde_gen_expr_model_for_call(_47331_m->_field_expr);
	if ((!(_47331_m->_field_func->_method_is_builtin()))) {
		if (_47331_m->_field_func->_field_decl->_field_cpp_linked && (_47331_m->_field_func->_field_generics.len() > 0LL)) {
			if ((!(_1ace28a7e_has_directive(_47331_m->_field_func->_field_decl->_field_directives,jule::Str("cdef", 4))))) {
				_47413_obj+=jule::Str("<", 1);
				{
					auto _range_expr = _47331_m->_field_func->_field_generics;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Ref<_1ac6d02c0_TypeKind> _1aad99bde_g = *_range_begin;
						_iter_begin_4447064528:;
						{
							_47413_obj+=_1ace28a7e_gen_type_kind(_1aad99bde_g) + jule::Str(",", 1);
						}
						_iter_next_4447064528:;
						++_range_begin;
						if (_range_begin != _range_end) { _1aad99bde_g = *_range_begin; goto _iter_begin_4447064528; }
						_iter_end_4447064528:;
					}
				}
				_47413_obj=_47413_obj.slice(0LL,static_cast<jule::Int>(_47413_obj.len() - 1LL));
				_47413_obj+=jule::Str(">", 1);
			}
		}
	}
	_47413_obj+=jule::Str("(", 1);
	_47413_obj+=_1aad99bde_gen_arg_expr_models(_47331_m->_field_args);
	_47413_obj+=jule::Str(")", 1);
	if (_47331_m->_field_is_co) {
		_47413_obj=(jule::Str("__JULE_CO(", 10) + _47413_obj) + jule::Str(")", 1);
	}
	return _47413_obj;
}



inline jule::Str _1aad99bde_gen_slice_expr_model(jule::Ref<_1ab33d083_SliceExprModel> _49829_m) {
	jule::Str _49913_obj = _1ace28a7e_as_slice_kind(_49829_m->_field_elem_kind);
	_49913_obj+=jule::Str("({", 2);
	_49913_obj+=_1aad99bde_gen_arg_expr_models(_49829_m->_field_elems);
	_49913_obj+=jule::Str("})", 2);
	return _49913_obj;
}



inline jule::Str _1aad99bde_gen_indexing_expr_model(jule::Ref<_1ab33d083_IndexigExprModel> _50632_m) {
	jule::Str _50713_obj = _1aad99bde_gen_expr_model(_50632_m->_field_expr->_field_model);
	if ((_50632_m->_field_index->_method_is_const() && jule::real(_50632_m->_field_expr->_field_kind->_method_arr())) && _1b615dbac_is_opt_enabled(jule::Str("--opt-access", 12))) {
		_50713_obj+=jule::Str(".__at(", 6);
		_50713_obj+=_1aad99bde_gen_expr(_50632_m->_field_index->_field_model);
		_50713_obj+=jule::Str(")", 1);
	} else {
		_50713_obj+=jule::Str("[", 1);
		_50713_obj+=_1aad99bde_gen_expr(_50632_m->_field_index->_field_model);
		_50713_obj+=jule::Str("]", 1);
	}
	return _50713_obj;
}



inline jule::Str _1aad99bde_gen_anon_fn_expr_model(jule::Ref<_1ab33d083_AnonFnExprModel> _52031_m) {
	jule::Str _52113_obj = _1ace28a7e_gen_fn_kind(_52031_m->_field_func);
	_52113_obj+=jule::Str("([=]", 4);
	_52113_obj+=_1acde57a4_gen_params_ins(_52031_m->_field_func->_field_params);
	_52113_obj+=jule::Str(" mutable -> ", 12);
	_52113_obj+=_1acde57a4_gen_fn_ins_result(_52031_m->_field_func);
	_52113_obj+=jule::Str(" ", 1);
	_52113_obj+=_1a977abdc_gen_fn_scope(_52031_m->_field_func);
	_52113_obj+=jule::Str(")", 1);
	return _52113_obj;
}



inline jule::Str _1aad99bde_gen_map_expr_model(jule::Ref<_1ab33d083_MapExprModel> _53227_m) {
	jule::Str _53313_obj = _1acde36d6_as_jt(jule::Str("map", 3));
	_53313_obj+=jule::Str("<", 1);
	_53313_obj+=_1ace28a7e_gen_type_kind(_53227_m->_field_key_kind);
	_53313_obj+=jule::Str(",", 1);
	_53313_obj+=_1ace28a7e_gen_type_kind(_53227_m->_field_val_kind);
	_53313_obj+=jule::Str(">({", 3);
	if (_53227_m->_field_entries.len() > 0LL) {
		{
			auto _range_expr = _53227_m->_field_entries;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_1ab33d083_KeyValPairExprModel> _1aad99bde_pair = *_range_begin;
				_iter_begin_4447093664:;
				{
					jule::Str _54121_pair_obj = jule::Str("{", 1);
					_54121_pair_obj+=_1aad99bde_gen_expr(_1aad99bde_pair->_field_key);
					_54121_pair_obj+=jule::Str(",", 1);
					_54121_pair_obj+=_1aad99bde_gen_expr(_1aad99bde_pair->_field_val);
					_54121_pair_obj+=jule::Str("}", 1);
					_53313_obj+=_54121_pair_obj;
					_53313_obj+=jule::Str(",", 1);
				}
				_iter_next_4447093664:;
				++_range_begin;
				if (_range_begin != _range_end) { _1aad99bde_pair = *_range_begin; goto _iter_begin_4447093664; }
				_iter_end_4447093664:;
			}
		}
		_53313_obj=_53313_obj.slice(0LL,static_cast<jule::Int>(_53313_obj.len() - 1LL));
	}
	_53313_obj+=jule::Str("})", 2);
	return _53313_obj;
}



inline jule::Str _1aad99bde_gen_slicing_expr_model(jule::Ref<_1ab33d083_SlicingExprModel> _55531_m) {
	jule::Str _55613_obj = _1aad99bde_gen_expr_model(_55531_m->_field_expr);
	_55613_obj+=jule::Str(".slice(", 7);
	_55613_obj+=_1aad99bde_gen_expr(_55531_m->_field_left);
	if (_55531_m->_field_right != nullptr) {
		_55613_obj+=jule::Str(",", 1);
		_55613_obj+=_1aad99bde_gen_expr(_55531_m->_field_right);
	}
	_55613_obj+=jule::Str(")", 1);
	return _55613_obj;
}



inline jule::Str _1aad99bde_gen_trait_sub_ident_expr_model(jule::Ref<_1ab33d083_TraitSubIdentExprModel> _56739_m) {
	jule::Str _56813_obj = _1aad99bde_gen_expr_model(_56739_m->_field_expr);
	_56813_obj+=jule::Str(".get()._method_", 15);
	_56813_obj+=_56739_m->_field_ident;
	return _56813_obj;
}



inline jule::Str _1aad99bde_gen_struct_sub_ident_expr_model(jule::Ref<_1ab33d083_StructSubIdentExprModel> _57440_m) {
	jule::Str _57513_obj = _1aad99bde_gen_expr_model(_57440_m->_field_expr);
	_57513_obj+=_1aad99bde_get_accessor(_57440_m->_field_expr_kind);
	if (jule::real(_57440_m->_field_field)) {
		_57513_obj+=_1acde36d6_field_out_ident(_57440_m->_field_field->_field_decl);
	} else {
		_57513_obj+=_1acde36d6_fn_ins_out_ident(_57440_m->_field_method);
	}
	return _57513_obj;
}



inline jule::Str _1aad99bde_gen_common_ident_expr_model(jule::Ref<_1ab33d083_CommonIdentExprModel> _58532_m) {
	return _58532_m->_field_ident;
}



inline jule::Str _1aad99bde_gen_common_sub_ident_expr_model(jule::Ref<_1ab33d083_CommonSubIdentExprModel> _58940_m) {
	jule::Str _59013_obj = _1aad99bde_gen_expr_model(_58940_m->_field_expr);
	_59013_obj+=_1aad99bde_get_accessor(_58940_m->_field_expr_kind);
	_59013_obj+=_58940_m->_field_ident;
	return _59013_obj;
}



inline jule::Str _1aad99bde_gen_array_expr_model(jule::Ref<_1ab33d083_ArrayExprModel> _59629_m) {
	jule::Str _59713_obj = _1ace28a7e_gen_array_kind(_59629_m->_field_kind);
	_59713_obj+=jule::Str("({", 2);
	_59713_obj+=_1aad99bde_gen_arg_expr_models(_59629_m->_field_elems);
	_59713_obj+=jule::Str("})", 2);
	return _59713_obj;
}



inline jule::Str _1aad99bde_gen_fn_ins_expr_model_common(jule::Ref<_1b557cd24_FnIns> _60637_m) {
	return ((_1ace28a7e_gen_fn_kind(_60637_m) + jule::Str("(", 1)) + _1aad99bde_gen_fn_ins_expr_model(_60637_m)) + jule::Str(")", 1);
}



inline jule::Str _1aad99bde_gen_fn_ins_expr_model(jule::Ref<_1b557cd24_FnIns> _61130_m) {
	if (jule::real(_61130_m->_field_decl) && _61130_m->_field_decl->_field_cpp_linked) {
		jule::Ref<_1b61ca014_Directive> _61313_d = _1ace28a7e_find_directive(_61130_m->_field_decl->_field_directives,jule::Str("namespace", 9));
		if (jule::real(_61313_d)) {
			return (_1aad99bde_concat_all_parts(_61313_d->_field_args) + jule::Str("::", 2)) + _1acde36d6_fn_ins_out_ident(_61130_m);
		}
	}
	return _1acde36d6_fn_ins_out_ident(_61130_m);
}



inline jule::Str _1aad99bde_gen_tuple_expr_model(jule::Ref<_1ab33d083_TupleExprModel> _62129_m) {
	jule::Str _62213_obj = jule::Str("std::make_tuple(", 16);
	{
		auto _range_expr = _62129_m->_field_datas;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab00dbcc_Data> _1aad99bde_d = *_range_begin;
			_iter_begin_4447129424:;
			{
				_62213_obj+=_1aad99bde_gen_expr(_1aad99bde_d->_field_model) + jule::Str(",", 1);
			}
			_iter_next_4447129424:;
			++_range_begin;
			if (_range_begin != _range_end) { _1aad99bde_d = *_range_begin; goto _iter_begin_4447129424; }
			_iter_end_4447129424:;
		}
	}
	_62213_obj=_62213_obj.slice(0LL,static_cast<jule::Int>(_62213_obj.len() - 1LL));
	_62213_obj+=jule::Str(")", 1);
	return _62213_obj;
}



inline jule::Str _1aad99bde_gen_builtin_new_call_expr_model(jule::Ref<_1ab33d083_BuiltinNewCallExprModel> _63140_m) {
	jule::Str _63213_obj = jule::Str("jule::new_ref<", 14);
	_63213_obj+=_1ace28a7e_gen_type_kind(_63140_m->_field_kind);
	_63213_obj+=jule::Str(">(", 2);
	if (_63140_m->_field_init != nullptr) {
		_63213_obj+=_1aad99bde_gen_expr(_63140_m->_field_init);
	}
	_63213_obj+=jule::Str(")", 1);
	return _63213_obj;
}



inline jule::Str _1aad99bde_gen_builtin_out_call_expr_model(jule::Ref<_1ab33d083_BuiltinOutCallExprModel> _64240_m) {
	jule::Str _64313_obj = jule::Str("jule::out(", 10);
	_64313_obj+=_1aad99bde_gen_expr(_64240_m->_field_expr);
	_64313_obj+=jule::Str(")", 1);
	return _64313_obj;
}



inline jule::Str _1aad99bde_gen_builtin_outln_call_expr_model(jule::Ref<_1ab33d083_BuiltinOutlnCallExprModel> _64942_m) {
	jule::Str _65013_obj = jule::Str("jule::outln(", 12);
	_65013_obj+=_1aad99bde_gen_expr(_64942_m->_field_expr);
	_65013_obj+=jule::Str(")", 1);
	return _65013_obj;
}



inline jule::Str _1aad99bde_gen_builtin_real_call_expr_model(jule::Ref<_1ab33d083_BuiltinRealCallExprModel> _65641_m) {
	jule::Str _65713_obj = jule::Str("jule::real(", 11);
	_65713_obj+=_1aad99bde_gen_expr(_65641_m->_field_expr);
	_65713_obj+=jule::Str(")", 1);
	return _65713_obj;
}



inline jule::Str _1aad99bde_gen_builtin_drop_call_expr_model(jule::Ref<_1ab33d083_BuiltinDropCallExprModel> _66341_m) {
	jule::Str _66413_obj = jule::Str("jule::drop(", 11);
	_66413_obj+=_1aad99bde_gen_expr(_66341_m->_field_expr);
	_66413_obj+=jule::Str(")", 1);
	return _66413_obj;
}



inline jule::Str _1aad99bde_gen_builtin_panic_call_expr_model(jule::Ref<_1ab33d083_BuiltinPanicCallExprModel> _67042_m) {
	jule::Str _67113_obj = jule::Str("jule::panic(", 12);
	_67113_obj+=_1aad99bde_gen_expr(_67042_m->_field_expr);
	_67113_obj+=jule::Str(")", 1);
	return _67113_obj;
}



inline jule::Str _1aad99bde_gen_builtin_make_call_expr_model(jule::Ref<_1ab33d083_BuiltinMakeCallExprModel> _67741_m) {
	jule::Str _67813_obj = jule::Str("", 0);
	if (_67741_m->_field_len != nullptr) {
		_67813_obj+=_1aad99bde_gen_expr(_67741_m->_field_len);
	} else {
		_67813_obj+=jule::Str("0", 1);
	}
	if (_67741_m->_field_cap != nullptr) {
		_67813_obj+=jule::Str(",", 1) + _1aad99bde_gen_expr(_67741_m->_field_cap);
	}
	if (jule::real(_67741_m->_field_kind->_method_slc()->_field_elem->_method_enm())) {
		_67813_obj+=jule::Str(",", 1);
		_67813_obj+=_1aad99bde_get_init_expr(_67741_m->_field_kind->_method_slc()->_field_elem);
		if (_67741_m->_field_cap != nullptr) {
			_67813_obj=(_1ace28a7e_gen_type_kind(_67741_m->_field_kind) + jule::Str("::alloc(", 8)) + _67813_obj;
		} else {
			_67813_obj=(_1ace28a7e_gen_type_kind(_67741_m->_field_kind) + jule::Str("::alloc_def(", 12)) + _67813_obj;
		}
	} else {
		_67813_obj=(_1ace28a7e_gen_type_kind(_67741_m->_field_kind) + jule::Str("::alloc(", 8)) + _67813_obj;
	}
	_67813_obj+=jule::Str(")", 1);
	return _67813_obj;
}



inline jule::Str _1aad99bde_gen_builtin_append_call_expr_model_assign_opt(jule::Bool _7055_same_dest,jule::Str& _7066_dest_expr,jule::Ref<_1ac6d02c0_TypeKind>& _70710_dest_kind,jule::Ref<_1ab33d083_SliceExprModel>& _70810_s,jule::Ref<_1ab33d083_BuiltinAppendCallExprModel>& _70910_m) {
	jule::Str _71013_obj = jule::Str("", 0);
	if ((!(_7055_same_dest))) {
		_71013_obj+=(((((_7066_dest_expr + jule::Str(" = jule::alloc_for_append(", 26)) + _1aad99bde_gen_expr_model(_70910_m->_field_dest)) + jule::Str(",", 1)) + _1b59a1be8_itoa(static_cast<jule::I64>(_70810_s->_field_elems.len()))) + jule::Str(")", 1)) + jule::Str(";", 1);
	}
	{
		auto _range_expr = _70810_s->_field_elems;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Any _1aad99bde_e = *_range_begin;
			_iter_begin_4447168784:;
			{
				_71013_obj+=_7066_dest_expr;
				_71013_obj+=_1aad99bde_get_accessor(_70710_dest_kind);
				_71013_obj+=jule::Str("push(", 5);
				_71013_obj+=_1aad99bde_gen_expr_model(_1aad99bde_e);
				_71013_obj+=jule::Str(");", 2);
			}
			_iter_next_4447168784:;
			++_range_begin;
			if (_range_begin != _range_end) { _1aad99bde_e = *_range_begin; goto _iter_begin_4447168784; }
			_iter_end_4447168784:;
		}
	}
	return _71013_obj;
}



inline std::tuple<jule::Str,jule::Bool> _1aad99bde_gen_builtin_append_call_expr_model_assign(jule::Any _72450_dest,jule::Ref<_1ab33d083_BuiltinAppendCallExprModel> _72471_m) {
	jule::Bool _724110_optimized = jule::Bool();
	{
		auto _match_expr{ _72471_m->_field_elements };
		if (!(_match_expr.type_is<jule::Ref<_1ab33d083_SliceExprModel>>())) { goto _case_end_4447177408; }
		_case_begin_4447177408:;
		{
			{
				auto _match_expr{ _72450_dest };
				if (!(_match_expr.type_is<jule::Ref<_1b623eab2_Var>>())) { goto _case_end_4447179136; }
				_case_begin_4447179136:;
				{
					jule::Ref<_1ab33d083_SliceExprModel> _72921_s = _72471_m->_field_elements.operator jule::Ref<_1ab33d083_SliceExprModel>();
					jule::Str _73017_dest_expr = _1aad99bde_gen_expr_model(_72450_dest);
					jule::Ref<_1b623eab2_Var> _73121_dest_var = _72450_dest.operator jule::Ref<_1b623eab2_Var>();
					jule::Bool _73217_same_dest = _1ace28a7e_any_equals_0(_73121_dest_var,_72471_m->_field_dest);
					_724110_optimized = true;
					return std::make_tuple(_1aad99bde_gen_builtin_append_call_expr_model_assign_opt(_73217_same_dest,_73017_dest_expr,_73121_dest_var->_field_kind->_field_kind,_72921_s,_72471_m),_724110_optimized);
				}
				goto _match_end_4447177552;
				_case_end_4447179136:;
				if (!(_match_expr.type_is<jule::Ref<_1ab33d083_StructSubIdentExprModel>>())) { goto _case_end_4447179328; }
				_case_begin_4447179328:;
				{
					jule::Ref<_1ab33d083_SliceExprModel> _73721_s = _72471_m->_field_elements.operator jule::Ref<_1ab33d083_SliceExprModel>();
					jule::Str _73817_dest_expr = _1aad99bde_gen_expr_model(_72450_dest);
					jule::Ref<_1b5e07a00_FieldIns> _73921_dest_field = _72450_dest.operator jule::Ref<_1ab33d083_StructSubIdentExprModel>()->_field_field;
					jule::Bool _74017_same_dest = _1ace28a7e_any_equals_1(_73921_dest_field,_72471_m->_field_dest);
					_724110_optimized = true;
					return std::make_tuple(_1aad99bde_gen_builtin_append_call_expr_model_assign_opt(_74017_same_dest,_73817_dest_expr,_73921_dest_field->_field_kind,_73721_s,_72471_m),_724110_optimized);
				}
				goto _match_end_4447177552;
				_case_end_4447179328:;
				_match_end_4447177552:;
			}
		}
		goto _match_end_4447176800;
		_case_end_4447177408:;
		_match_end_4447176800:;
	}
	_724110_optimized = false;
	return std::make_tuple(_1aad99bde_gen_builtin_append_call_expr_model(_72471_m),_724110_optimized);
}



inline jule::Str _1aad99bde_gen_builtin_append_call_expr_model(jule::Ref<_1ab33d083_BuiltinAppendCallExprModel> _74943_m) {
	return (((jule::Str("jule::append(", 13) + _1aad99bde_gen_expr_model(_74943_m->_field_dest)) + jule::Str(",", 1)) + _1aad99bde_gen_expr_model(_74943_m->_field_elements)) + jule::Str(")", 1);
}



inline jule::Str _1aad99bde_gen_builtin_clone_call_expr_model(jule::Ref<_1ab33d083_BuiltinCloneCallExprModel> _75342_m) {
	jule::Str _75413_obj = jule::Str("jule::clone(", 12);
	_75413_obj+=_1aad99bde_gen_expr_model(_75342_m->_field_expr);
	_75413_obj+=jule::Str(")", 1);
	return _75413_obj;
}



inline jule::Str _1aad99bde_gen_sizeof_expr_model(jule::Ref<_1ab33d083_SizeofExprModel> _76030_m) {
	jule::Str _76113_obj = jule::Str("sizeof(", 7);
	_76113_obj+=_1aad99bde_gen_expr(_76030_m->_field_expr);
	_76113_obj+=jule::Str(")", 1);
	return _76113_obj;
}



inline jule::Str _1aad99bde_gen_alignof_expr_model(jule::Ref<_1ab33d083_AlignofExprModel> _76731_m) {
	jule::Str _76813_obj = jule::Str("alignof(", 8);
	_76813_obj+=_1aad99bde_gen_expr(_76731_m->_field_expr);
	_76813_obj+=jule::Str(")", 1);
	return _76813_obj;
}



inline jule::Str _1aad99bde_gen_rune_expr_model(jule::Ref<_1ab33d083_RuneExprModel> _77424_m) {
	if (_77424_m->_field_code <= 127LL) {
		jule::Str _77617_b = _1aad99bde_sbtoa(static_cast<jule::U8>(_77424_m->_field_code));
		if (_77617_b == jule::Str("'", 1)) {
			_77617_b=jule::Str("\\'", 2);
		}
		return (jule::Str("'", 1) + _77617_b) + jule::Str("'", 1);
	}
	return _1aad99bde_i64toa(static_cast<jule::I64>(_77424_m->_field_code));
}



inline jule::Str _1aad99bde_gen_builtin_error_trait_sub_ident_expr_model(jule::Ref<_1ab33d083_BuiltinErrorTraitSubIdentExprModel> _78553_m) {
	jule::Str _78613_obj = _1aad99bde_gen_expr_model(_78553_m->_field_expr);
	_78613_obj+=jule::Str(".get().", 7);
	_78613_obj+=jule::Str("_method_", 8) + _78553_m->_field_ident;
	return _78613_obj;
}



inline jule::Str _1aad99bde_gen_explicit_deref_expr_model(jule::Ref<_1ab33d083_ExplicitDerefExprModel> _79238_m) {
	jule::Str _79313_obj = _1aad99bde_gen_expr_model(_79238_m->_field_expr);
	_79313_obj+=jule::Str(".get()", 6);
	return _79313_obj;
}



inline jule::Str _1aad99bde_gen_struct_static_ident_expr_model(jule::Ref<_1ab33d083_StructStaticIdentExprModel> _79843_m) {
	jule::Str _79913_obj = _1acde36d6_struct_ins_out_ident(_79843_m->_field_structure);
	_79913_obj+=jule::Str("::", 2);
	_79913_obj+=_1acde36d6_fn_ins_out_ident(_79843_m->_field_method);
	return _79913_obj;
}



inline jule::Str _1aad99bde_gen_integrated_to_str_expr_model(jule::Ref<_1ab33d083_IntegratedToStrExprModel> _80541_m) {
	return (jule::Str("jule::to_str(", 13) + _1aad99bde_gen_expr_model(_80541_m->_field_expr)) + jule::Str(")", 1);
}



inline jule::Str _1aad99bde_gen_ternary_expr_model(jule::Ref<_1ab33d083_TernaryExprModel> _80931_m) {
	return (((((jule::Str("(", 1) + _1aad99bde_gen_expr_model(_80931_m->_field_condition)) + jule::Str(") ? (", 5)) + _1aad99bde_gen_expr_model(_80931_m->_field_true_expr)) + jule::Str(") : (", 5)) + _1aad99bde_gen_expr_model(_80931_m->_field_false_expr)) + jule::Str(")", 1);
}



inline jule::Str _1aad99bde_gen_expr_model(jule::Any _81923_m) {
	{
		auto _match_expr{ _81923_m };
		if (!(_match_expr.type_is<jule::Ref<_1ac6d02c0_TypeKind>>())) { goto _case_end_4447239104; }
		_case_begin_4447239104:;
		{
			return _1ace28a7e_gen_type_kind(_81923_m.operator jule::Ref<_1ac6d02c0_TypeKind>());
		}
		goto _match_end_4447233184;
		_case_end_4447239104:;
		if (!(_match_expr.type_is<jule::Ref<_1ac90c3ed_Const>>())) { goto _case_end_4447238704; }
		_case_begin_4447238704:;
		{
			return _1aad99bde_gen_const_expr_model(_81923_m.operator jule::Ref<_1ac90c3ed_Const>());
		}
		goto _match_end_4447233184;
		_case_end_4447238704:;
		if (!(_match_expr.type_is<jule::Ref<_1b623eab2_Var>>())) { goto _case_end_4447238816; }
		_case_begin_4447238816:;
		{
			return _1aad99bde_gen_var_expr_model(_81923_m.operator jule::Ref<_1b623eab2_Var>());
		}
		goto _match_end_4447233184;
		_case_end_4447238816:;
		if (!(_match_expr.type_is<jule::Ref<_1aaee9091_Trait>>())) { goto _case_end_4447238928; }
		_case_begin_4447238928:;
		{
			return _1acde36d6_trait_out_ident(_81923_m.operator jule::Ref<_1aaee9091_Trait>());
		}
		goto _match_end_4447233184;
		_case_end_4447238928:;
		if (!(_match_expr.type_is<jule::Ref<_1b5e07a00_Struct>>())) { goto _case_end_4447238208; }
		_case_begin_4447238208:;
		{
			return _1aad99bde_gen_struct_expr_model(_81923_m.operator jule::Ref<_1b5e07a00_Struct>());
		}
		goto _match_end_4447233184;
		_case_end_4447238208:;
		if (!(_match_expr.type_is<jule::Ref<_1b5e07a00_StructIns>>())) { goto _case_end_4447238320; }
		_case_begin_4447238320:;
		{
			return _1aad99bde_gen_struct_ins_expr_model(_81923_m.operator jule::Ref<_1b5e07a00_StructIns>());
		}
		goto _match_end_4447233184;
		_case_end_4447238320:;
		if (!(_match_expr.type_is<jule::Ref<_1b557cd24_FnIns>>())) { goto _case_end_4447238432; }
		_case_begin_4447238432:;
		{
			return _1aad99bde_gen_fn_ins_expr_model_common(_81923_m.operator jule::Ref<_1b557cd24_FnIns>());
		}
		goto _match_end_4447233184;
		_case_end_4447238432:;
		if (!(_match_expr.type_is<jule::Ref<_1ab33d083_BinopExprModel>>())) { goto _case_end_4447239568; }
		_case_begin_4447239568:;
		{
			return _1aad99bde_gen_binop_expr_model(_81923_m.operator jule::Ref<_1ab33d083_BinopExprModel>());
		}
		goto _match_end_4447233184;
		_case_end_4447239568:;
		if (!(_match_expr.type_is<jule::Ref<_1ab33d083_UnaryExprModel>>())) { goto _case_end_4447239680; }
		_case_begin_4447239680:;
		{
			return _1aad99bde_gen_unary_expr_model(_81923_m.operator jule::Ref<_1ab33d083_UnaryExprModel>());
		}
		goto _match_end_4447233184;
		_case_end_4447239680:;
		if (!(_match_expr.type_is<jule::Ref<_1ab33d083_GetRefPtrExprModel>>())) { goto _case_end_4447239792; }
		_case_begin_4447239792:;
		{
			return _1aad99bde_gen_get_ref_ptr_expr_model(_81923_m.operator jule::Ref<_1ab33d083_GetRefPtrExprModel>());
		}
		goto _match_end_4447233184;
		_case_end_4447239792:;
		if (!(_match_expr.type_is<jule::Ref<_1ab33d083_StructLitExprModel>>())) { goto _case_end_4447240672; }
		_case_begin_4447240672:;
		{
			return _1aad99bde_gen_struct_lit_expr_model(_81923_m.operator jule::Ref<_1ab33d083_StructLitExprModel>());
		}
		goto _match_end_4447233184;
		_case_end_4447240672:;
		if (!(_match_expr.type_is<jule::Ref<_1ab33d083_AllocStructLitExprModel>>())) { goto _case_end_4447240784; }
		_case_begin_4447240784:;
		{
			return _1aad99bde_gen_alloc_struct_lit_expr_model(_81923_m.operator jule::Ref<_1ab33d083_AllocStructLitExprModel>());
		}
		goto _match_end_4447233184;
		_case_end_4447240784:;
		if (!(_match_expr.type_is<jule::Ref<_1ab33d083_CastingExprModel>>())) { goto _case_end_4447240896; }
		_case_begin_4447240896:;
		{
			return _1aad99bde_gen_casting_expr_model(_81923_m.operator jule::Ref<_1ab33d083_CastingExprModel>());
		}
		goto _match_end_4447233184;
		_case_end_4447240896:;
		if (!(_match_expr.type_is<jule::Ref<_1ab33d083_FnCallExprModel>>())) { goto _case_end_4447241008; }
		_case_begin_4447241008:;
		{
			return _1aad99bde_gen_fn_call_expr_model(_81923_m.operator jule::Ref<_1ab33d083_FnCallExprModel>());
		}
		goto _match_end_4447233184;
		_case_end_4447241008:;
		if (!(_match_expr.type_is<jule::Ref<_1ab33d083_SliceExprModel>>())) { goto _case_end_4447241120; }
		_case_begin_4447241120:;
		{
			return _1aad99bde_gen_slice_expr_model(_81923_m.operator jule::Ref<_1ab33d083_SliceExprModel>());
		}
		goto _match_end_4447233184;
		_case_end_4447241120:;
		if (!(_match_expr.type_is<jule::Ref<_1ab33d083_ArrayExprModel>>())) { goto _case_end_4447241232; }
		_case_begin_4447241232:;
		{
			return _1aad99bde_gen_array_expr_model(_81923_m.operator jule::Ref<_1ab33d083_ArrayExprModel>());
		}
		goto _match_end_4447233184;
		_case_end_4447241232:;
		if (!(_match_expr.type_is<jule::Ref<_1ab33d083_IndexigExprModel>>())) { goto _case_end_4447241344; }
		_case_begin_4447241344:;
		{
			return _1aad99bde_gen_indexing_expr_model(_81923_m.operator jule::Ref<_1ab33d083_IndexigExprModel>());
		}
		goto _match_end_4447233184;
		_case_end_4447241344:;
		if (!(_match_expr.type_is<jule::Ref<_1ab33d083_AnonFnExprModel>>())) { goto _case_end_4447241456; }
		_case_begin_4447241456:;
		{
			return _1aad99bde_gen_anon_fn_expr_model(_81923_m.operator jule::Ref<_1ab33d083_AnonFnExprModel>());
		}
		goto _match_end_4447233184;
		_case_end_4447241456:;
		if (!(_match_expr.type_is<jule::Ref<_1ab33d083_MapExprModel>>())) { goto _case_end_4447241568; }
		_case_begin_4447241568:;
		{
			return _1aad99bde_gen_map_expr_model(_81923_m.operator jule::Ref<_1ab33d083_MapExprModel>());
		}
		goto _match_end_4447233184;
		_case_end_4447241568:;
		if (!(_match_expr.type_is<jule::Ref<_1ab33d083_SlicingExprModel>>())) { goto _case_end_4447241680; }
		_case_begin_4447241680:;
		{
			return _1aad99bde_gen_slicing_expr_model(_81923_m.operator jule::Ref<_1ab33d083_SlicingExprModel>());
		}
		goto _match_end_4447233184;
		_case_end_4447241680:;
		if (!(_match_expr.type_is<jule::Ref<_1ab33d083_TraitSubIdentExprModel>>())) { goto _case_end_4447241792; }
		_case_begin_4447241792:;
		{
			return _1aad99bde_gen_trait_sub_ident_expr_model(_81923_m.operator jule::Ref<_1ab33d083_TraitSubIdentExprModel>());
		}
		goto _match_end_4447233184;
		_case_end_4447241792:;
		if (!(_match_expr.type_is<jule::Ref<_1ab33d083_StructSubIdentExprModel>>())) { goto _case_end_4447241904; }
		_case_begin_4447241904:;
		{
			return _1aad99bde_gen_struct_sub_ident_expr_model(_81923_m.operator jule::Ref<_1ab33d083_StructSubIdentExprModel>());
		}
		goto _match_end_4447233184;
		_case_end_4447241904:;
		if (!(_match_expr.type_is<jule::Ref<_1ab33d083_CommonIdentExprModel>>())) { goto _case_end_4447242016; }
		_case_begin_4447242016:;
		{
			return _1aad99bde_gen_common_ident_expr_model(_81923_m.operator jule::Ref<_1ab33d083_CommonIdentExprModel>());
		}
		goto _match_end_4447233184;
		_case_end_4447242016:;
		if (!(_match_expr.type_is<jule::Ref<_1ab33d083_CommonSubIdentExprModel>>())) { goto _case_end_4447242128; }
		_case_begin_4447242128:;
		{
			return _1aad99bde_gen_common_sub_ident_expr_model(_81923_m.operator jule::Ref<_1ab33d083_CommonSubIdentExprModel>());
		}
		goto _match_end_4447233184;
		_case_end_4447242128:;
		if (!(_match_expr.type_is<jule::Ref<_1ab33d083_TupleExprModel>>())) { goto _case_end_4447242240; }
		_case_begin_4447242240:;
		{
			return _1aad99bde_gen_tuple_expr_model(_81923_m.operator jule::Ref<_1ab33d083_TupleExprModel>());
		}
		goto _match_end_4447233184;
		_case_end_4447242240:;
		if (!(_match_expr.type_is<jule::Ref<_1ab33d083_BuiltinOutCallExprModel>>())) { goto _case_end_4447242352; }
		_case_begin_4447242352:;
		{
			return _1aad99bde_gen_builtin_out_call_expr_model(_81923_m.operator jule::Ref<_1ab33d083_BuiltinOutCallExprModel>());
		}
		goto _match_end_4447233184;
		_case_end_4447242352:;
		if (!(_match_expr.type_is<jule::Ref<_1ab33d083_BuiltinOutlnCallExprModel>>())) { goto _case_end_4447242464; }
		_case_begin_4447242464:;
		{
			return _1aad99bde_gen_builtin_outln_call_expr_model(_81923_m.operator jule::Ref<_1ab33d083_BuiltinOutlnCallExprModel>());
		}
		goto _match_end_4447233184;
		_case_end_4447242464:;
		if (!(_match_expr.type_is<jule::Ref<_1ab33d083_BuiltinNewCallExprModel>>())) { goto _case_end_4447242576; }
		_case_begin_4447242576:;
		{
			return _1aad99bde_gen_builtin_new_call_expr_model(_81923_m.operator jule::Ref<_1ab33d083_BuiltinNewCallExprModel>());
		}
		goto _match_end_4447233184;
		_case_end_4447242576:;
		if (!(_match_expr.type_is<jule::Ref<_1ab33d083_BuiltinRealCallExprModel>>())) { goto _case_end_4447242688; }
		_case_begin_4447242688:;
		{
			return _1aad99bde_gen_builtin_real_call_expr_model(_81923_m.operator jule::Ref<_1ab33d083_BuiltinRealCallExprModel>());
		}
		goto _match_end_4447233184;
		_case_end_4447242688:;
		if (!(_match_expr.type_is<jule::Ref<_1ab33d083_BuiltinDropCallExprModel>>())) { goto _case_end_4447242800; }
		_case_begin_4447242800:;
		{
			return _1aad99bde_gen_builtin_drop_call_expr_model(_81923_m.operator jule::Ref<_1ab33d083_BuiltinDropCallExprModel>());
		}
		goto _match_end_4447233184;
		_case_end_4447242800:;
		if (!(_match_expr.type_is<jule::Ref<_1ab33d083_BuiltinPanicCallExprModel>>())) { goto _case_end_4447242912; }
		_case_begin_4447242912:;
		{
			return _1aad99bde_gen_builtin_panic_call_expr_model(_81923_m.operator jule::Ref<_1ab33d083_BuiltinPanicCallExprModel>());
		}
		goto _match_end_4447233184;
		_case_end_4447242912:;
		if (!(_match_expr.type_is<jule::Ref<_1ab33d083_BuiltinMakeCallExprModel>>())) { goto _case_end_4447243040; }
		_case_begin_4447243040:;
		{
			return _1aad99bde_gen_builtin_make_call_expr_model(_81923_m.operator jule::Ref<_1ab33d083_BuiltinMakeCallExprModel>());
		}
		goto _match_end_4447233184;
		_case_end_4447243040:;
		if (!(_match_expr.type_is<jule::Ref<_1ab33d083_BuiltinAppendCallExprModel>>())) { goto _case_end_4447243168; }
		_case_begin_4447243168:;
		{
			return _1aad99bde_gen_builtin_append_call_expr_model(_81923_m.operator jule::Ref<_1ab33d083_BuiltinAppendCallExprModel>());
		}
		goto _match_end_4447233184;
		_case_end_4447243168:;
		if (!(_match_expr.type_is<jule::Ref<_1ab33d083_BuiltinCloneCallExprModel>>())) { goto _case_end_4447243296; }
		_case_begin_4447243296:;
		{
			return _1aad99bde_gen_builtin_clone_call_expr_model(_81923_m.operator jule::Ref<_1ab33d083_BuiltinCloneCallExprModel>());
		}
		goto _match_end_4447233184;
		_case_end_4447243296:;
		if (!(_match_expr.type_is<jule::Ref<_1ab33d083_SizeofExprModel>>())) { goto _case_end_4447243424; }
		_case_begin_4447243424:;
		{
			return _1aad99bde_gen_sizeof_expr_model(_81923_m.operator jule::Ref<_1ab33d083_SizeofExprModel>());
		}
		goto _match_end_4447233184;
		_case_end_4447243424:;
		if (!(_match_expr.type_is<jule::Ref<_1ab33d083_AlignofExprModel>>())) { goto _case_end_4447243552; }
		_case_begin_4447243552:;
		{
			return _1aad99bde_gen_alignof_expr_model(_81923_m.operator jule::Ref<_1ab33d083_AlignofExprModel>());
		}
		goto _match_end_4447233184;
		_case_end_4447243552:;
		if (!(_match_expr.type_is<jule::Ref<_1ab33d083_RuneExprModel>>())) { goto _case_end_4447243680; }
		_case_begin_4447243680:;
		{
			return _1aad99bde_gen_rune_expr_model(_81923_m.operator jule::Ref<_1ab33d083_RuneExprModel>());
		}
		goto _match_end_4447233184;
		_case_end_4447243680:;
		if (!(_match_expr.type_is<jule::Ref<_1ab33d083_BuiltinErrorTraitSubIdentExprModel>>())) { goto _case_end_4447243808; }
		_case_begin_4447243808:;
		{
			return _1aad99bde_gen_builtin_error_trait_sub_ident_expr_model(_81923_m.operator jule::Ref<_1ab33d083_BuiltinErrorTraitSubIdentExprModel>());
		}
		goto _match_end_4447233184;
		_case_end_4447243808:;
		if (!(_match_expr.type_is<jule::Ref<_1ab33d083_ExplicitDerefExprModel>>())) { goto _case_end_4447243936; }
		_case_begin_4447243936:;
		{
			return _1aad99bde_gen_explicit_deref_expr_model(_81923_m.operator jule::Ref<_1ab33d083_ExplicitDerefExprModel>());
		}
		goto _match_end_4447233184;
		_case_end_4447243936:;
		if (!(_match_expr.type_is<jule::Ref<_1ab33d083_StructStaticIdentExprModel>>())) { goto _case_end_4447244064; }
		_case_begin_4447244064:;
		{
			return _1aad99bde_gen_struct_static_ident_expr_model(_81923_m.operator jule::Ref<_1ab33d083_StructStaticIdentExprModel>());
		}
		goto _match_end_4447233184;
		_case_end_4447244064:;
		if (!(_match_expr.type_is<jule::Ref<_1ab33d083_IntegratedToStrExprModel>>())) { goto _case_end_4447244192; }
		_case_begin_4447244192:;
		{
			return _1aad99bde_gen_integrated_to_str_expr_model(_81923_m.operator jule::Ref<_1ab33d083_IntegratedToStrExprModel>());
		}
		goto _match_end_4447233184;
		_case_end_4447244192:;
		if (!(_match_expr.type_is<jule::Ref<_1ab33d083_TernaryExprModel>>())) { goto _case_end_4447244320; }
		_case_begin_4447244320:;
		{
			return _1aad99bde_gen_ternary_expr_model(_81923_m.operator jule::Ref<_1ab33d083_TernaryExprModel>());
		}
		goto _match_end_4447233184;
		_case_end_4447244320:;
		_case_begin_4447234992:;
		{
			return jule::Str("<unimplemented_expression_model>", 32);
		}
		goto _match_end_4447233184;
		_case_end_4447234992:;
		_match_end_4447233184:;
	}
}



inline jule::Str _1aad99bde_gen_expr(jule::Any _95217_e) {
	jule::Str _95313_obj = _1aad99bde_gen_expr_model(_95217_e);
	if (_95313_obj[0LL] != '(') {
		return _95313_obj;
	}
	{
		auto _match_expr{ _95217_e };
		if (!(_match_expr.type_is<jule::Ref<_1ab33d083_BinopExprModel>>())) { goto _case_end_4447307648; }
		_case_begin_4447307648:;
		{
			_95313_obj=_95313_obj.slice(1LL,static_cast<jule::Int>(_95313_obj.len() - 1LL));
		}
		goto _match_end_4447308288;
		_case_end_4447307648:;
		_match_end_4447308288:;
	}
	return _95313_obj;
}



inline jule::Str _1aad99bde_gen_val(jule::Ref<_1ab00dbcc_Value> _96516_v) {
	if (_96516_v->_field_data->_method_is_const()) {
		return _1aad99bde_gen_const_expr(_96516_v->_field_data);
	}
	return _1aad99bde_gen_expr(_96516_v->_field_data->_field_model);
}



inline jule::Str _1aad99bde_get_init_expr(jule::Ref<_1ac6d02c0_TypeKind> _97222_t) {
	if (jule::real(_97222_t->_method_ptr())) {
		return jule::Str("nullptr", 7);
	}
	jule::Ref<_1a909ac6b_Enum> _97713_enm = _97222_t->_method_enm();
	if ((!(jule::real(_97713_enm)))) {
		return _1ace28a7e_gen_type_kind(_97222_t) + jule::Str("()", 2);
	}
	return _1aad99bde_gen_val(_97713_enm->_field_items[0LL]->_field_value);
}



inline jule::Str _1acca738b_get_derive_fn_decl_clone(jule::Ref<_1b5e07a00_Struct>& _730_s) {
	jule::Str _813_obj = _1ace28a7e_gen_struct_kind(_730_s);
	_813_obj+=jule::Str(" clone(void) const ", 19);
	return _813_obj;
}



inline jule::Str _1acca738b_get_derive_fn_def_clone(jule::Ref<_1b5e07a00_Struct>& _1329_s) {
	jule::Str _1413_obj = _1ace28a7e_gen_struct_kind(_1329_s);
	_1413_obj+=(jule::Str(" ", 1) + _1413_obj) + jule::Str("::clone(void) const ", 20);
	return _1413_obj;
}



inline jule::Str _1acde36d6_as_ident(jule::Str _2513_ident) {
	return jule::Str("_", 1) + _2513_ident;
}



inline jule::Str _1acde36d6_as_jt(jule::Str _2814_id) {
	if ((97LL <= _2814_id[0LL]) && (_2814_id[0LL] <= 122LL)) {
		_2814_id[0LL]-=32LL;
	}
	return jule::Str("jule::", 6) + _2814_id;
}



inline jule::Str _1acde36d6_get_addr_as_ident(jule::Uintptr _3622_addr) {
	return jule::Str("_", 1) + _1b59a1be8_fmt_uint(static_cast<jule::U64>(_3622_addr),15LL);
}



inline jule::Str _1acde36d6_as_out_ident(jule::Str _4517_ident,jule::Uintptr _4529_addr) {
	if (_4529_addr != 0LL) {
		return (_1acde36d6_get_addr_as_ident(_4529_addr) + jule::Str("_", 1)) + _4517_ident;
	}
	return _1acde36d6_as_ident(_4517_ident);
}



inline jule::Str _1acde36d6_as_local_ident(jule::Int _5819_row,jule::Int _5829_col,jule::Str _5843_ident) {
	_5843_ident=((_1b59a1be8_itoa(_5819_row) + _1b59a1be8_itoa(_5829_col)) + jule::Str("_", 1)) + _5843_ident;
	return _1acde36d6_as_ident(_5843_ident);
}



inline jule::Str _1acde36d6_fn_out_ident(jule::Ref<_1b557cd24_Fn>& _6418_f) {
	{
		if (!((_6418_f->_field_cpp_linked))) { goto _case_end_4447342368; }
		_case_begin_4447342368:;
		{
			return _6418_f->_field_ident;
		}
		goto _match_end_4447340144;
		_case_end_4447342368:;
		if (!((_6418_f->_field_ident == jule::Str("main", 4)))) { goto _case_end_4447344352; }
		_case_begin_4447344352:;
		{
			return jule::Str("entry_point", 11);
		}
		goto _match_end_4447340144;
		_case_end_4447344352:;
		if (!((_6418_f->_method_is_method()))) { goto _case_end_4447344464; }
		_case_begin_4447344464:;
		{
			if (_6418_f->_field_statically) {
				return jule::Str("_static_method_", 15) + _6418_f->_field_ident;
			}
			return jule::Str("_method_", 8) + _6418_f->_field_ident;
		}
		goto _match_end_4447340144;
		_case_end_4447344464:;
		_case_begin_4447340336:;
		{
			return _1acde36d6_as_out_ident(_6418_f->_field_ident,static_cast<jule::Uintptr>(_6418_f->_field_token._field_file->_method_addr()));
		}
		goto _match_end_4447340144;
		_case_end_4447340336:;
		_match_end_4447340144:;
	}
}



inline jule::Str _1acde36d6_fn_ins_out_ident(jule::Ref<_1b557cd24_FnIns>& _8426_f) {
	if (_8426_f->_method_is_builtin()) {
		return jule::Str("jule::", 6) + _8426_f->_field_decl->_field_ident;
	}
	if (_8426_f->_field_decl->_field_cpp_linked || (_8426_f->_field_generics.len() == 0LL)) {
		return _1acde36d6_fn_out_ident(_8426_f->_field_decl);
	}
	{
		auto _range_expr = _8426_f->_field_decl->_field_instances;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1acde36d6_i = 0;
			jule::Ref<_1b557cd24_FnIns> _1acde36d6_ins = *_range_begin;
			_iter_begin_4447352848:;
			{
				jule::Ref<_1ac6d02c0_TypeKind> _9413_kind = jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_1acde36d6_ins));
				if (_8426_f->_method_equals(_9413_kind)) {
					return (_1acde36d6_fn_out_ident(_8426_f->_field_decl) + jule::Str("_", 1)) + _1b59a1be8_itoa(_1acde36d6_i);
				}
			}
			_iter_next_4447352848:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1acde36d6_i; _1acde36d6_ins = *_range_begin; goto _iter_begin_4447352848; }
			_iter_end_4447352848:;
		}
	}
	return jule::Str("__?__", 5);
}



inline jule::Str _1acde36d6_trait_out_ident(jule::Ref<_1aaee9091_Trait> _10420_t) {
	if (_10420_t->_method_is_builtin()) {
		return jule::Str("jule::", 6) + _10420_t->_field_ident;
	}
	return _1acde36d6_as_out_ident(_10420_t->_field_ident,static_cast<jule::Uintptr>(_10420_t->_field_token._field_file->_method_addr()));
}



inline jule::Str _1acde36d6_param_out_ident(jule::Ref<_1b557cd24_Param>& _11221_p) {
	if (_1b61ec5ec_is_anon_ident(_11221_p->_field_ident) || _1b61ec5ec_is_ignore_ident(_11221_p->_field_ident)) {
		return jule::Str("", 0);
	}
	return _1acde36d6_as_local_ident(_11221_p->_field_token._field_row,_11221_p->_field_token._field_column,_11221_p->_field_ident);
}



inline jule::Str _1acde36d6_struct_out_ident(jule::Ref<_1b5e07a00_Struct>& _12022_s) {
	if (_12022_s->_field_cpp_linked) {
		if (_1ace28a7e_has_directive(_12022_s->_field_directives,jule::Str("typedef", 7))) {
			return _12022_s->_field_ident;
		}
		return jule::Str("struct ", 7) + _12022_s->_field_ident;
	}
	return _1acde36d6_as_out_ident(_12022_s->_field_ident,static_cast<jule::Uintptr>(_12022_s->_field_token._field_file->_method_addr()));
}



inline jule::Str _1acde36d6_struct_ins_out_ident(jule::Ref<_1b5e07a00_StructIns>& _13130_s) {
	if (_13130_s->_field_decl->_field_cpp_linked || (_13130_s->_field_generics.len() == 0LL)) {
		return _1acde36d6_struct_out_ident(_13130_s->_field_decl);
	}
	{
		auto _range_expr = _13130_s->_field_decl->_field_instances;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1acde36d6_i = 0;
			jule::Ref<_1b5e07a00_StructIns> _1acde36d6_ins = *_range_begin;
			_iter_begin_4447374352:;
			{
				jule::Ref<_1ac6d02c0_TypeKind> _13713_kind = jule::new_struct<_1ac6d02c0_TypeKind>(new( std::nothrow ) _1ac6d02c0_TypeKind(jule::Str(),jule::Bool(),_1acde36d6_ins));
				if (_13130_s->_method_equals(_13713_kind)) {
					return (_1acde36d6_struct_out_ident(_13130_s->_field_decl) + jule::Str("_", 1)) + _1b59a1be8_itoa(_1acde36d6_i);
				}
			}
			_iter_next_4447374352:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1acde36d6_i; _1acde36d6_ins = *_range_begin; goto _iter_begin_4447374352; }
			_iter_end_4447374352:;
		}
	}
	return jule::Str("__?__", 5);
}



inline jule::Str _1acde36d6_field_out_ident(jule::Ref<_1b5e07a00_Field>& _14721_f) {
	if (_14721_f->_field_owner->_field_cpp_linked) {
		return _14721_f->_field_ident;
	}
	return jule::Str("_field_", 7) + _14721_f->_field_ident;
}



inline jule::Str _1acde36d6_var_out_ident(jule::Ref<_1b623eab2_Var> _15522_v) {
	{
		if (!((_15522_v->_field_cpp_linked))) { goto _case_end_4447384672; }
		_case_begin_4447384672:;
		{
			return _15522_v->_field_ident;
		}
		goto _match_end_4447381424;
		_case_end_4447384672:;
		if (!((_15522_v->_field_ident == jule::Str("self", 4)))) { goto _case_end_4447386464; }
		_case_begin_4447386464:;
		{
			if (jule::real(_15522_v->_field_kind->_field_kind->_method_ref())) {
				return jule::Str("this->self", 10);
			}
			return jule::Str("(*this)", 7);
		}
		goto _match_end_4447381424;
		_case_end_4447386464:;
		if (!((jule::real(_15522_v->_field_scope)))) { goto _case_end_4447386576; }
		_case_begin_4447386576:;
		{
			return _1acde36d6_as_local_ident(_15522_v->_field_token._field_row,_15522_v->_field_token._field_column,_15522_v->_field_ident);
		}
		goto _match_end_4447381424;
		_case_end_4447386576:;
		_case_begin_4447383264:;
		{
			return _1acde36d6_as_out_ident(_15522_v->_field_ident,static_cast<jule::Uintptr>(_15522_v->_field_token._field_file->_method_addr()));
		}
		goto _match_end_4447381424;
		_case_end_4447383264:;
		_match_end_4447381424:;
	}
}



inline jule::Str _1acde36d6_iter_begin_label_ident(jule::Uintptr _17527_it) {
	return jule::Str("_iter_begin_", 12) + _1b59a1be8_itoa(static_cast<jule::Int>(_17527_it));
}



inline jule::Str _1acde36d6_iter_end_label_ident(jule::Uintptr _18025_it) {
	return jule::Str("_iter_end_", 10) + _1b59a1be8_itoa(static_cast<jule::Int>(_18025_it));
}



inline jule::Str _1acde36d6_iter_next_label_ident(jule::Uintptr _18526_it) {
	return jule::Str("_iter_next_", 11) + _1b59a1be8_itoa(static_cast<jule::Int>(_18526_it));
}



inline jule::Str _1acde36d6_label_ident(jule::Str _19016_ident) {
	return jule::Str("_julec_label_", 13) + _19016_ident;
}



inline jule::Str _1acde36d6_match_end_label_ident(jule::Uintptr _19526_m) {
	return jule::Str("_match_end_", 11) + _1b59a1be8_itoa(static_cast<jule::Int>(_19526_m));
}



inline jule::Str _1acde36d6_case_begin_label_ident(jule::Uintptr _20027_c) {
	return jule::Str("_case_begin_", 12) + _1b59a1be8_itoa(static_cast<jule::Int>(_20027_c));
}



inline jule::Str _1acde36d6_case_end_label_ident(jule::Uintptr _20525_c) {
	return jule::Str("_case_end_", 10) + _1b59a1be8_itoa(static_cast<jule::Int>(_20525_c));
}



inline jule::Bool _1ace28a7e_any_equals_0(jule::Ref<_1b623eab2_Var>& _2619_first,jule::Any& _2631_other) {
	{
		auto _match_expr{ _2631_other };
		if (!(_match_expr.type_is<jule::Ref<_1b623eab2_Var>>())) { goto _case_end_4447190672; }
		_case_begin_4447190672:;
		{
			return (_2619_first).alloc == (_2631_other.operator jule::Ref<_1b623eab2_Var>()).alloc;
		}
		goto _match_end_4447189808;
		_case_end_4447190672:;
		_case_begin_4447190288:;
		{
			return false;
		}
		goto _match_end_4447189808;
		_case_end_4447190288:;
		_match_end_4447189808:;
	}
}

inline jule::Bool _1ace28a7e_any_equals_1(jule::Ref<_1b5e07a00_FieldIns>& _2619_first,jule::Any& _2631_other) {
	{
		auto _match_expr{ _2631_other };
		if (!(_match_expr.type_is<jule::Ref<_1b5e07a00_FieldIns>>())) { goto _case_end_4447203968; }
		_case_begin_4447203968:;
		{
			return (_2619_first).alloc == (_2631_other.operator jule::Ref<_1b5e07a00_FieldIns>()).alloc;
		}
		goto _match_end_4447203104;
		_case_end_4447203968:;
		_case_begin_4447203584:;
		{
			return false;
		}
		goto _match_end_4447203104;
		_case_end_4447203584:;
		_match_end_4447203104:;
	}
}



inline jule::Ref<_1b61ca014_Directive> _1ace28a7e_find_directive(jule::Slice<jule::Ref<_1b61ca014_Directive>>& _3424_directives,jule::Str _3466_tag) {
	{
		auto _range_expr = _3424_directives;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b61ca014_Directive> _1ace28a7e_dr = *_range_begin;
			_iter_begin_4447404160:;
			{
				if (_1ace28a7e_dr->_field_tag == _3466_tag) {
					return _1ace28a7e_dr;
				}
			}
			_iter_next_4447404160:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ace28a7e_dr = *_range_begin; goto _iter_begin_4447404160; }
			_iter_end_4447404160:;
		}
	}
	return jule::new_ref<_1b61ca014_Directive>();
}



inline jule::Bool _1ace28a7e_has_directive(jule::Slice<jule::Ref<_1b61ca014_Directive>>& _4419_directives,jule::Str _4461_tag) {
	return jule::real(_1ace28a7e_find_directive((*((&(_4419_directives)))),_4461_tag));
}



inline jule::Str _1ace28a7e_gen_prim_kind(jule::Ref<_1ac6d02c0_Prim> _4918_p) {
	return _1acde36d6_as_jt(_4918_p->_method_to_str());
}



inline jule::Str _1ace28a7e_gen_tuple_kind(jule::Ref<_1ac6d02c0_Tuple> _5423_t) {
	jule::Str _5513_obj = jule::Str("std::tuple<", 11);
	{
		auto _range_expr = _5423_t->_field_types;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ac6d02c0_TypeKind> _1ace28a7e_tk = *_range_begin;
			_iter_begin_4447411936:;
			{
				_5513_obj+=_1ace28a7e_gen_type_kind(_1ace28a7e_tk) + jule::Str(",", 1);
			}
			_iter_next_4447411936:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ace28a7e_tk = *_range_begin; goto _iter_begin_4447411936; }
			_iter_end_4447411936:;
		}
	}
	_5513_obj=_5513_obj.slice(0LL,static_cast<jule::Int>(_5513_obj.len() - 1LL));
	return _5513_obj + jule::Str(">", 1);
}



inline jule::Str _1ace28a7e_as_ref_kind(jule::Str _6416_elem) {
	jule::Str _659_ref = _1acde36d6_as_jt(jule::Str("ref", 3));
	return ((_659_ref + jule::Str("<", 1)) + _6416_elem) + jule::Str(">", 1);
}



inline jule::Str _1ace28a7e_gen_ref_kind(jule::Ref<_1ac6d02c0_Ref> _7021_r) {
	jule::Str _719_elem = _1ace28a7e_gen_type_kind(_7021_r->_field_elem);
	return _1ace28a7e_as_ref_kind(_719_elem);
}



inline jule::Str _1ace28a7e_gen_ptr_kind(jule::Ref<_1ac6d02c0_Ptr> _7621_p) {
	
	if (_7621_p->_method_is_unsafe()) {
		return jule::Str("void*", 5);
	}
	jule::Str _829_elem = _1ace28a7e_gen_type_kind(_7621_p->_field_elem);
	return _829_elem + jule::Str("*", 1);
}



inline jule::Str _1ace28a7e_gen_enum_kind(jule::Ref<_1a909ac6b_Enum> _8722_e) {
	return _1ace28a7e_gen_type_kind(_8722_e->_field_kind->_field_kind);
}



inline jule::Str _1ace28a7e_as_slice_kind(jule::Ref<_1ac6d02c0_TypeKind> _9122_elem) {
	jule::Str _929_elem_s = _1ace28a7e_gen_type_kind(_9122_elem);
	jule::Str _939_slc = _1acde36d6_as_jt(jule::Str("slice", 5));
	return ((_939_slc + jule::Str("<", 1)) + _929_elem_s) + jule::Str(">", 1);
}



inline jule::Str _1ace28a7e_gen_slice_kind(jule::Ref<_1ac6d02c0_Slc> _9823_s) {
	return _1ace28a7e_as_slice_kind(_9823_s->_field_elem);
}



inline jule::Str _1ace28a7e_gen_map_kind(jule::Ref<_1ac6d02c0_Map> _10321_m) {
	jule::Str _1049_key = _1ace28a7e_gen_type_kind(_10321_m->_field_key);
	jule::Str _1059_val = _1ace28a7e_gen_type_kind(_10321_m->_field_val);
	jule::Str _1069__map = _1acde36d6_as_jt(jule::Str("map", 3));
	return ((((_1069__map + jule::Str("<", 1)) + _1049_key) + jule::Str(",", 1)) + _1059_val) + jule::Str(">", 1);
}



inline jule::Str _1ace28a7e_gen_trait_kind_from_ident(jule::Str _11030_ident) {
	jule::Str _1119_trt = _1acde36d6_as_jt(jule::Str("trait", 5));
	return ((_1119_trt + jule::Str("<", 1)) + _11030_ident) + jule::Str(">", 1);
}



inline jule::Str _1ace28a7e_gen_trait_kind(jule::Ref<_1aaee9091_Trait> _11619_t) {
	jule::Str _1179_ident = _1acde36d6_trait_out_ident(_11619_t);
	return _1ace28a7e_gen_trait_kind_from_ident(_1179_ident);
}



inline jule::Str _1ace28a7e_gen_struct_kind(jule::Ref<_1b5e07a00_Struct> _12220_s) {
	jule::Str _12313_rep = jule::Str("", 0);
	if (_12220_s->_field_cpp_linked && (!(_1ace28a7e_has_directive(_12220_s->_field_directives,jule::Str("typedef", 7))))) {
		_12313_rep+=jule::Str("struct ", 7);
	}
	_12313_rep+=_1acde36d6_struct_out_ident(_12220_s);
	return _12313_rep;
}



inline jule::Str _1ace28a7e_gen_struct_kind_ins(jule::Ref<_1b5e07a00_StructIns> _13328_s) {
	if (_13328_s->_field_decl->_field_cpp_linked) {
		jule::Str _13517_ident = _1acde36d6_struct_ins_out_ident(_13328_s);
		if (_13328_s->_field_generics.len() > 0LL) {
			_13517_ident+=jule::Str("<", 1);
			{
				auto _range_expr = _13328_s->_field_generics;
				if (_range_expr.begin() != _range_expr.end()) {
					auto _range_begin = _range_expr.begin();
					const auto _range_end = _range_expr.end();
					jule::Ref<_1ac6d02c0_TypeKind> _1ace28a7e_g = *_range_begin;
					_iter_begin_4447449136:;
					{
						_13517_ident+=_1ace28a7e_gen_type_kind(_1ace28a7e_g) + jule::Str(",", 1);
					}
					_iter_next_4447449136:;
					++_range_begin;
					if (_range_begin != _range_end) { _1ace28a7e_g = *_range_begin; goto _iter_begin_4447449136; }
					_iter_end_4447449136:;
				}
			}
			_13517_ident=_13517_ident.slice(0LL,static_cast<jule::Int>(_13517_ident.len() - 1LL));
			_13517_ident+=jule::Str(">", 1);
		}
		jule::Ref<_1b61ca014_Directive> _14413_d = _1ace28a7e_find_directive(_13328_s->_field_decl->_field_directives,jule::Str("namespace", 9));
		if (jule::real(_14413_d)) {
			_13517_ident=(_1aad99bde_concat_all_parts(_14413_d->_field_args) + jule::Str("::", 2)) + _13517_ident;
		}
		return _13517_ident;
	}
	return _1acde36d6_struct_ins_out_ident(_13328_s);
}



inline jule::Str _1ace28a7e_gen_array_kind(jule::Ref<_1ac6d02c0_Arr> _15423_a) {
	jule::Str _1559_arr = _1acde36d6_as_jt(jule::Str("array", 5));
	jule::Str _1569_elem = _1ace28a7e_gen_type_kind(_15423_a->_field_elem);
	jule::Str _1579_size = _1b59a1be8_itoa(_15423_a->_field_n);
	return ((((_1559_arr + jule::Str("<", 1)) + _1569_elem) + jule::Str(",", 1)) + _1579_size) + jule::Str(">", 1);
}



inline jule::Str _1ace28a7e_gen_fn_anon_decl(jule::Ref<_1b557cd24_FnIns> _16125_f) {
	jule::Str _16213_decl = _1acde57a4_gen_fn_ins_result(_16125_f);
	_16213_decl+=jule::Str("(", 1);
	if (_16125_f->_field_params.len() > 0LL) {
		{
			auto _range_expr = _16125_f->_field_params;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_1b557cd24_ParamIns> _1ace28a7e_param = *_range_begin;
				_iter_begin_4447464880:;
				{
					if (_1ace28a7e_param->_field_decl->_method_is_self()) {
						goto _iter_next_4447464880;
					}
					_16213_decl+=_1acde57a4_gen_param_ins_prototype(_1ace28a7e_param);
					_16213_decl+=jule::Str(",", 1);
				}
				_iter_next_4447464880:;
				++_range_begin;
				if (_range_begin != _range_end) { _1ace28a7e_param = *_range_begin; goto _iter_begin_4447464880; }
				_iter_end_4447464880:;
			}
		}
		_16213_decl=_16213_decl.slice(0LL,static_cast<jule::Int>(_16213_decl.len() - 1LL));
	} else {
		_16213_decl+=jule::Str("void", 4);
	}
	_16213_decl+=jule::Str(")", 1);
	return _16213_decl;
}



inline jule::Str _1ace28a7e_gen_fn_kind(jule::Ref<_1b557cd24_FnIns> _18420_f) {
	jule::Str _1859_fnc = _1acde36d6_as_jt(jule::Str("fn", 2));
	jule::Str _1869_decl = _1ace28a7e_gen_fn_anon_decl(_18420_f);
	return ((_1859_fnc + jule::Str("<", 1)) + _1869_decl) + jule::Str(">", 1);
}



inline jule::Str _1ace28a7e_gen_type_kind(jule::Ref<_1ac6d02c0_TypeKind> _19122_k) {
	{
		if (!((_19122_k->_method_cpp_linked()))) { goto _case_end_4447478144; }
		_case_begin_4447478144:;
		{
			return _19122_k->_field_cpp_ident;
		}
		goto _match_end_4447475424;
		_case_end_4447478144:;
		if (!((jule::real(_19122_k->_method_prim())))) { goto _case_end_4447477712; }
		_case_begin_4447477712:;
		{
			return _1ace28a7e_gen_prim_kind(_19122_k->_method_prim());
		}
		goto _match_end_4447475424;
		_case_end_4447477712:;
		if (!((jule::real(_19122_k->_method_tup())))) { goto _case_end_4447477904; }
		_case_begin_4447477904:;
		{
			return _1ace28a7e_gen_tuple_kind(_19122_k->_method_tup());
		}
		goto _match_end_4447475424;
		_case_end_4447477904:;
		if (!((jule::real(_19122_k->_method_ref())))) { goto _case_end_4447478352; }
		_case_begin_4447478352:;
		{
			return _1ace28a7e_gen_ref_kind(_19122_k->_method_ref());
		}
		goto _match_end_4447475424;
		_case_end_4447478352:;
		if (!((jule::real(_19122_k->_method_ptr())))) { goto _case_end_4447478464; }
		_case_begin_4447478464:;
		{
			return _1ace28a7e_gen_ptr_kind(_19122_k->_method_ptr());
		}
		goto _match_end_4447475424;
		_case_end_4447478464:;
		if (!((jule::real(_19122_k->_method_enm())))) { goto _case_end_4447478576; }
		_case_begin_4447478576:;
		{
			return _1ace28a7e_gen_enum_kind(_19122_k->_method_enm());
		}
		goto _match_end_4447475424;
		_case_end_4447478576:;
		if (!((jule::real(_19122_k->_method_slc())))) { goto _case_end_4447476752; }
		_case_begin_4447476752:;
		{
			return _1ace28a7e_gen_slice_kind(_19122_k->_method_slc());
		}
		goto _match_end_4447475424;
		_case_end_4447476752:;
		if (!((jule::real(_19122_k->_method_map())))) { goto _case_end_4447476864; }
		_case_begin_4447476864:;
		{
			return _1ace28a7e_gen_map_kind(_19122_k->_method_map());
		}
		goto _match_end_4447475424;
		_case_end_4447476864:;
		if (!((jule::real(_19122_k->_method_trt())))) { goto _case_end_4447476976; }
		_case_begin_4447476976:;
		{
			return _1ace28a7e_gen_trait_kind(_19122_k->_method_trt());
		}
		goto _match_end_4447475424;
		_case_end_4447476976:;
		if (!((jule::real(_19122_k->_method_strct())))) { goto _case_end_4447478768; }
		_case_begin_4447478768:;
		{
			return _1ace28a7e_gen_struct_kind_ins(_19122_k->_method_strct());
		}
		goto _match_end_4447475424;
		_case_end_4447478768:;
		if (!((jule::real(_19122_k->_method_arr())))) { goto _case_end_4447478880; }
		_case_begin_4447478880:;
		{
			return _1ace28a7e_gen_array_kind(_19122_k->_method_arr());
		}
		goto _match_end_4447475424;
		_case_end_4447478880:;
		if (!((jule::real(_19122_k->_method_fnc())))) { goto _case_end_4447478992; }
		_case_begin_4447478992:;
		{
			return _1ace28a7e_gen_fn_kind(_19122_k->_method_fnc());
		}
		goto _match_end_4447475424;
		_case_end_4447478992:;
		_case_begin_4447475008:;
		{
			return jule::Str("[<unimplemented_type_kind>]", 27);
		}
		goto _match_end_4447475424;
		_case_end_4447475008:;
		_match_end_4447475424:;
	}
}



inline void _1acde57a4_add_indent(void) {
	(_1acde57a4_INDENT)++;
}



inline void _1acde57a4_done_indent(void) {
	(_1acde57a4_INDENT)--;
}



inline jule::Str _1acde57a4_indent(void) {
	
	if (_1acde57a4_INDENT == 0LL) {
		return jule::Str("", 0);
	}
	jule::Str _6213_s = jule::Str("", 0);
	jule::Int _6313_i = 0LL;
	_iter_begin_4447500512:;
	if (!(_6313_i < _1acde57a4_INDENT)) { goto _iter_end_4447500512; }
	{
		_6213_s+=jule::Str("\t", 1);
	}
	_iter_next_4447500512:;
	(_6313_i)++;
	goto _iter_begin_4447500512;
	_iter_end_4447500512:;
	return _6213_s;
}



inline jule::Bool _1acde57a4_is_cpp_header_file(jule::Str _7023_path) {
	jule::Int _719_offset = _7023_path.rfind(jule::Str(".", 1));
	if (_719_offset == -1LL) {
		return false;
	}
	return _1cdee4c4a_is_valid_header_ext(_7023_path.slice(static_cast<jule::Int>(_719_offset)));
}



inline jule::Str _1acde57a4_gen_links(jule::Ref<_1b60cd1d1_IR>& _7919_ir) {
	jule::Str _8013_obj = jule::Str("", 0);
	{
		auto _range_expr = _7919_ir->_field_used;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab194c20_ImportInfo> _1acde57a4_pkg = *_range_begin;
			_iter_begin_4447508272:;
			{
				{
					if (!(((!(_1acde57a4_pkg->_field_cpp_linked))))) { goto _case_end_4447510192; }
					_case_begin_4447510192:;
					{
						goto _iter_next_4447508272;
					}
					goto _match_end_4447509952;
					_case_end_4447510192:;
					if (!((_1cdee4c4a_is_std_header_path(_1acde57a4_pkg->_field_path)))) { goto _case_end_4447510320; }
					_case_begin_4447510320:;
					{
						_8013_obj+=(jule::Str("#include ", 9) + _1acde57a4_pkg->_field_path) + jule::Str("\n", 1);
					}
					goto _match_end_4447509952;
					_case_end_4447510320:;
					_match_end_4447509952:;
				}
			}
			_iter_next_4447508272:;
			++_range_begin;
			if (_range_begin != _range_end) { _1acde57a4_pkg = *_range_begin; goto _iter_begin_4447508272; }
			_iter_end_4447508272:;
		}
	}
	{
		auto _range_expr = _7919_ir->_field_used;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab194c20_ImportInfo> _1acde57a4_pkg = *_range_begin;
			_iter_begin_4447513232:;
			{
				{
					if (!(((!(_1acde57a4_pkg->_field_cpp_linked))))) { goto _case_end_4447515216; }
					_case_begin_4447515216:;
					{
						goto _iter_next_4447513232;
					}
					goto _match_end_4447514976;
					_case_end_4447515216:;
					if (!((_1acde57a4_is_cpp_header_file(_1acde57a4_pkg->_field_path)))) { goto _case_end_4447515344; }
					_case_begin_4447515344:;
					{
						_8013_obj+=(jule::Str("#include \"", 10) + _1acde57a4_pkg->_field_path) + jule::Str("\"\n", 2);
					}
					goto _match_end_4447514976;
					_case_end_4447515344:;
					_match_end_4447514976:;
				}
			}
			_iter_next_4447513232:;
			++_range_begin;
			if (_range_begin != _range_end) { _1acde57a4_pkg = *_range_begin; goto _iter_begin_4447513232; }
			_iter_end_4447513232:;
		}
	}
	return _8013_obj;
}



inline jule::Str _1acde57a4_gen_fn_result(jule::Ref<_1b557cd24_Fn>& _10423_f) {
	if (_10423_f->_method_is_void()) {
		return jule::Str("void", 4);
	}
	return _1ace28a7e_gen_type_kind(_10423_f->_field_result->_field_kind->_field_kind);
}



inline jule::Str _1acde57a4_gen_fn_ins_result(jule::Ref<_1b557cd24_FnIns>& _11227_f) {
	if (_11227_f->_field_decl->_method_is_void()) {
		return jule::Str("void", 4);
	}
	return _1ace28a7e_gen_type_kind(_11227_f->_field_result);
}



inline jule::Str _1acde57a4_gen_param_prototype(jule::Ref<_1b557cd24_Param>& _12029_p) {
	jule::Str _12113_obj = jule::Str("", 0);
	if (_12029_p->_field_variadic) {
		_12113_obj+=_1acde36d6_as_jt(jule::Str("slice", 5));
		_12113_obj+=jule::Str("<", 1);
		_12113_obj+=_1ace28a7e_gen_type_kind(_12029_p->_field_kind->_field_kind);
		_12113_obj+=jule::Str(">", 1);
	} else {
		_12113_obj+=_1ace28a7e_gen_type_kind(_12029_p->_field_kind->_field_kind);
	}
	return _12113_obj;
}



inline jule::Str _1acde57a4_gen_param_ins(jule::Ref<_1b557cd24_ParamIns>& _13423_p) {
	jule::Str _13513_obj = _1acde57a4_gen_param_ins_prototype(_13423_p);
	_13513_obj+=jule::Str(" ", 1);
	_13513_obj+=_1acde36d6_param_out_ident(_13423_p->_field_decl);
	return _13513_obj;
}



inline jule::Str _1acde57a4_gen_param_ins_prototype(jule::Ref<_1b557cd24_ParamIns>& _14233_p) {
	jule::Str _14313_obj = jule::Str("", 0);
	if (_14233_p->_field_decl->_field_variadic) {
		_14313_obj+=_1acde36d6_as_jt(jule::Str("slice", 5));
		_14313_obj+=jule::Str("<", 1);
		_14313_obj+=_1ace28a7e_gen_type_kind(_14233_p->_field_kind);
		_14313_obj+=jule::Str(">", 1);
	} else {
		_14313_obj+=_1ace28a7e_gen_type_kind(_14233_p->_field_kind);
	}
	if (_14233_p->_field_decl->_field_reference) {
		_14313_obj+=jule::Str("&", 1);
	}
	return _14313_obj;
}



inline jule::Str _1acde57a4_gen_param(jule::Ref<_1b557cd24_Param>& _16119_p) {
	jule::Str _16213_obj = _1acde57a4_gen_param_prototype(_16119_p);
	if (((_16119_p->_field_ident != jule::Str("", 0)) && (!(_1b61ec5ec_is_ignore_ident(_16119_p->_field_ident)))) && (!(_1b61ec5ec_is_anon_ident(_16119_p->_field_ident)))) {
		_16213_obj+=jule::Str(" ", 1) + _1acde36d6_param_out_ident(_16119_p);
	}
	return _16213_obj;
}



inline jule::Str _1acde57a4_gen_params(jule::Slice<jule::Ref<_1b557cd24_Param>>& _17020_params) {
	{
		if (!((_17020_params.len() == 0LL))) { goto _case_end_4447545008; }
		_case_begin_4447545008:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_4447544768;
		_case_end_4447545008:;
		if (!(((_17020_params.len() == 1LL) && _17020_params[0LL]->_method_is_self()))) { goto _case_end_4447545136; }
		_case_begin_4447545136:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_4447544768;
		_case_end_4447545136:;
		_match_end_4447544768:;
	}
	jule::Str _17913_obj = jule::Str("(", 1);
	{
		auto _range_expr = _17020_params;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b557cd24_Param> _1acde57a4_p = *_range_begin;
			_iter_begin_4447549104:;
			{
				if ((!(_1acde57a4_p->_method_is_self()))) {
					_17913_obj+=_1acde57a4_gen_param(_1acde57a4_p) + jule::Str(",", 1);
				}
			}
			_iter_next_4447549104:;
			++_range_begin;
			if (_range_begin != _range_end) { _1acde57a4_p = *_range_begin; goto _iter_begin_4447549104; }
			_iter_end_4447549104:;
		}
	}
	_17913_obj=_17913_obj.slice(0LL,static_cast<jule::Int>(_17913_obj.len() - 1LL));
	return _17913_obj + jule::Str(")", 1);
}



inline jule::Str _1acde57a4_gen_params_ins(jule::Slice<jule::Ref<_1b557cd24_ParamIns>>& _19124_params) {
	{
		if (!((_19124_params.len() == 0LL))) { goto _case_end_4447554864; }
		_case_begin_4447554864:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_4447554704;
		_case_end_4447554864:;
		if (!(((_19124_params.len() == 1LL) && _19124_params[0LL]->_field_decl->_method_is_self()))) { goto _case_end_4447554992; }
		_case_begin_4447554992:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_4447554704;
		_case_end_4447554992:;
		_match_end_4447554704:;
	}
	jule::Str _20013_obj = jule::Str("(", 1);
	{
		auto _range_expr = _19124_params;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b557cd24_ParamIns> _1acde57a4_p = *_range_begin;
			_iter_begin_4447559184:;
			{
				if ((!(_1acde57a4_p->_field_decl->_method_is_self()))) {
					_20013_obj+=_1acde57a4_gen_param_ins(_1acde57a4_p) + jule::Str(",", 1);
				}
			}
			_iter_next_4447559184:;
			++_range_begin;
			if (_range_begin != _range_end) { _1acde57a4_p = *_range_begin; goto _iter_begin_4447559184; }
			_iter_end_4447559184:;
		}
	}
	_20013_obj=_20013_obj.slice(0LL,static_cast<jule::Int>(_20013_obj.len() - 1LL));
	return _20013_obj + jule::Str(")", 1);
}



inline jule::Str _1acde57a4_gen_params_prototypes(jule::Slice<jule::Ref<_1b557cd24_ParamIns>>& _21331_params) {
	{
		if (!((_21331_params.len() == 0LL))) { goto _case_end_4447565168; }
		_case_begin_4447565168:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_4447565008;
		_case_end_4447565168:;
		if (!(((_21331_params.len() == 1LL) && _21331_params[0LL]->_field_decl->_method_is_self()))) { goto _case_end_4447565296; }
		_case_begin_4447565296:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_4447565008;
		_case_end_4447565296:;
		_match_end_4447565008:;
	}
	jule::Str _22213_obj = jule::Str("(", 1);
	{
		auto _range_expr = _21331_params;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b557cd24_ParamIns> _1acde57a4_p = *_range_begin;
			_iter_begin_4447569840:;
			{
				if ((!(_1acde57a4_p->_field_decl->_method_is_self()))) {
					_22213_obj+=_1acde57a4_gen_param_ins_prototype(_1acde57a4_p) + jule::Str(",", 1);
				}
			}
			_iter_next_4447569840:;
			++_range_begin;
			if (_range_begin != _range_end) { _1acde57a4_p = *_range_begin; goto _iter_begin_4447569840; }
			_iter_end_4447569840:;
		}
	}
	_22213_obj=_22213_obj.slice(0LL,static_cast<jule::Int>(_22213_obj.len() - 1LL));
	return _22213_obj + jule::Str(")", 1);
}



inline jule::Str _1acde57a4_gen_trait(jule::Ref<_1aaee9091_Trait>& _23519_t) {
	
	jule::Str _2379_outid = _1acde36d6_trait_out_ident(_23519_t);
	jule::Str _23913_obj = jule::Str("struct ", 7);
	_23913_obj+=_2379_outid;
	_23913_obj+=jule::Str(" {\n", 3);
	_23913_obj+=jule::Str("\t", 1);
	_23913_obj+=jule::Str("virtual ~", 9);
	_23913_obj+=_2379_outid;
	_23913_obj+=jule::Str("(void) {}\n\n", 11);
	{
		auto _range_expr = _23519_t->_field_methods;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b557cd24_Fn> _1acde57a4_f = *_range_begin;
			_iter_begin_4447580496:;
			{
				_23913_obj+=jule::Str("\t", 1);
				_23913_obj+=jule::Str("virtual ", 8);
				_23913_obj+=_1acde57a4_gen_fn_result(_1acde57a4_f);
				_23913_obj+=jule::Str(" _method_", 9);
				_23913_obj+=_1acde57a4_f->_field_ident;
				_23913_obj+=_1acde57a4_gen_params(_1acde57a4_f->_field_params);
				_23913_obj+=jule::Str(" {", 2);
				if ((!(_1acde57a4_f->_method_is_void()))) {
					_23913_obj+=jule::Str(" return {}; ", 12);
				}
				_23913_obj+=jule::Str("}\n", 2);
			}
			_iter_next_4447580496:;
			++_range_begin;
			if (_range_begin != _range_end) { _1acde57a4_f = *_range_begin; goto _iter_begin_4447580496; }
			_iter_end_4447580496:;
		}
	}
	_23913_obj+=jule::Str("};", 2);
	return _23913_obj;
}



inline jule::Str _1acde57a4_gen_traits_tbl(jule::Ref<_1ab00cc20_SymbolTable>& _26424_tbl) {
	jule::Str _26513_obj = jule::Str("", 0);
	{
		auto _range_expr = _26424_tbl->_field_traits;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1aaee9091_Trait> _1acde57a4_t = *_range_begin;
			_iter_begin_4447587504:;
			{
				_26513_obj+=_1acde57a4_gen_trait(_1acde57a4_t) + jule::Str("\n\n", 2);
			}
			_iter_next_4447587504:;
			++_range_begin;
			if (_range_begin != _range_end) { _1acde57a4_t = *_range_begin; goto _iter_begin_4447587504; }
			_iter_end_4447587504:;
		}
	}
	return _26513_obj;
}



inline jule::Str _1acde57a4_gen_traits_pkg(jule::Ref<_1ab194c20_Package>& _27324_pkg) {
	jule::Str _27413_obj = jule::Str("", 0);
	{
		auto _range_expr = _27324_pkg->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab00cc20_SymbolTable> _1acde57a4_tbl = *_range_begin;
			_iter_begin_4447591456:;
			{
				_27413_obj+=_1acde57a4_gen_traits_tbl(_1acde57a4_tbl);
			}
			_iter_next_4447591456:;
			++_range_begin;
			if (_range_begin != _range_end) { _1acde57a4_tbl = *_range_begin; goto _iter_begin_4447591456; }
			_iter_end_4447591456:;
		}
	}
	return _27413_obj;
}



inline jule::Str _1acde57a4_gen_traits(jule::Ref<_1b60cd1d1_IR>& _28220_ir) {
	jule::Str _28313_obj = jule::Str("", 0);
	{
		auto _range_expr = _28220_ir->_field_used;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab194c20_ImportInfo> _1acde57a4_u = *_range_begin;
			_iter_begin_4447595200:;
			{
				if ((!(_1acde57a4_u->_field_cpp_linked))) {
					_28313_obj+=_1acde57a4_gen_traits_pkg(_1acde57a4_u->_field_package);
				}
			}
			_iter_next_4447595200:;
			++_range_begin;
			if (_range_begin != _range_end) { _1acde57a4_u = *_range_begin; goto _iter_begin_4447595200; }
			_iter_end_4447595200:;
		}
	}
	_28313_obj+=_1acde57a4_gen_traits_pkg(_28220_ir->_field_main);
	return _28313_obj;
}



inline jule::Str _1acde57a4_gen_trait_prototype(jule::Ref<_1aaee9091_Trait>& _29425_t) {
	return (jule::Str("struct ", 7) + _1acde36d6_trait_out_ident(_29425_t)) + jule::Str(";", 1);
}



inline jule::Str _1acde57a4_gen_trait_prototypes(jule::Ref<_1ab194c20_Package>& _29930_p) {
	jule::Str _30013_obj = jule::Str("", 0);
	{
		auto _range_expr = _29930_p->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab00cc20_SymbolTable> _1acde57a4_f = *_range_begin;
			_iter_begin_4447602096:;
			{
				{
					auto _range_expr = _1acde57a4_f->_field_traits;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Ref<_1aaee9091_Trait> _1acde57a4_t = *_range_begin;
						_iter_begin_4447603888:;
						{
							if (_1acde57a4_t->_field_token._field_id != 0LLU) {
								_30013_obj+=_1acde57a4_gen_trait_prototype(_1acde57a4_t) + jule::Str("\n", 1);
							}
						}
						_iter_next_4447603888:;
						++_range_begin;
						if (_range_begin != _range_end) { _1acde57a4_t = *_range_begin; goto _iter_begin_4447603888; }
						_iter_end_4447603888:;
					}
				}
			}
			_iter_next_4447602096:;
			++_range_begin;
			if (_range_begin != _range_end) { _1acde57a4_f = *_range_begin; goto _iter_begin_4447602096; }
			_iter_end_4447602096:;
		}
	}
	return _30013_obj;
}



inline jule::Str _1acde57a4_gen_struct_plain_prototype(jule::Ref<_1b5e07a00_Struct>& _31236_s) {
	jule::Str _31313_obj = jule::Str("", 0);
	{
		auto _range_expr = _31236_s->_field_instances;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b5e07a00_StructIns> _1acde57a4_ins = *_range_begin;
			_iter_begin_4447608384:;
			{
				_31313_obj+=jule::Str("\nstruct ", 8);
				_31313_obj+=_1acde36d6_struct_ins_out_ident(_1acde57a4_ins);
				_31313_obj+=jule::Str(";", 1);
				_31313_obj+=jule::Str("\n", 1);
			}
			_iter_next_4447608384:;
			++_range_begin;
			if (_range_begin != _range_end) { _1acde57a4_ins = *_range_begin; goto _iter_begin_4447608384; }
			_iter_end_4447608384:;
		}
	}
	return _31313_obj;
}



inline jule::Str _1acde57a4_gen_struct_plain_prototypes(jule::Slice<jule::Ref<_1b5e07a00_Struct>>& _32437_structs) {
	jule::Str _32513_obj = jule::Str("", 0);
	{
		auto _range_expr = _32437_structs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b5e07a00_Struct> _1acde57a4_s = *_range_begin;
			_iter_begin_4447612624:;
			{
				if ((!(_1acde57a4_s->_field_cpp_linked)) && (_1acde57a4_s->_field_token._field_id != 0LLU)) {
					_32513_obj+=_1acde57a4_gen_struct_plain_prototype(_1acde57a4_s) + jule::Str("\n", 1);
				}
			}
			_iter_next_4447612624:;
			++_range_begin;
			if (_range_begin != _range_end) { _1acde57a4_s = *_range_begin; goto _iter_begin_4447612624; }
			_iter_end_4447612624:;
		}
	}
	return _32513_obj;
}



inline jule::Str _1acde57a4_gen_struct_traits(jule::Ref<_1b5e07a00_Struct>& _33523_s) {
	if (_33523_s->_field_implements.len() == 0LL) {
		return jule::Str("", 0);
	}
	jule::Str _34013_obj = jule::Str(": ", 2);
	{
		auto _range_expr = _33523_s->_field_implements;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1aaee9091_Trait> _1acde57a4_i = *_range_begin;
			_iter_begin_4447619248:;
			{
				_34013_obj+=jule::Str("public ", 7);
				_34013_obj+=_1acde36d6_trait_out_ident(_1acde57a4_i);
				_34013_obj+=jule::Str(",", 1);
			}
			_iter_next_4447619248:;
			++_range_begin;
			if (_range_begin != _range_end) { _1acde57a4_i = *_range_begin; goto _iter_begin_4447619248; }
			_iter_end_4447619248:;
		}
	}
	_34013_obj=_34013_obj.slice(0LL,static_cast<jule::Int>(_34013_obj.len() - 1LL));
	return _34013_obj;
}



inline jule::Str _1acde57a4_gen_field_decl(jule::Ref<_1b5e07a00_FieldIns>& _35124_f) {
	jule::Str _35213_obj = _1ace28a7e_gen_type_kind(_35124_f->_field_kind) + jule::Str(" ", 1);
	_35213_obj+=_1acde36d6_field_out_ident(_35124_f->_field_decl);
	_35213_obj+=(jule::Str("{", 1) + _1aad99bde_get_init_expr(_35124_f->_field_kind)) + jule::Str("}", 1);
	_35213_obj+=jule::Str(";", 1);
	return _35213_obj;
}



inline jule::Str _1acde57a4_gen_struct_self_field_type_kind(jule::Ref<_1b5e07a00_StructIns>& _36041_s) {
	return _1ace28a7e_as_ref_kind(_1ace28a7e_gen_struct_kind_ins(_36041_s));
}



inline jule::Str _1acde57a4_gen_struct_self_field(jule::Ref<_1b5e07a00_StructIns>& _36531_s) {
	jule::Str _36613_obj = _1acde57a4_gen_struct_self_field_type_kind(_36531_s);
	_36613_obj+=jule::Str(" self{};", 8);
	return _36613_obj;
}



inline jule::Str _1acde57a4_gen_struct_self_field_init_st(jule::Ref<_1b5e07a00_StructIns>& _37139_s) {
	jule::Str _37213_obj = jule::Str("this->self = ", 13);
	_37213_obj+=_1acde57a4_gen_struct_self_field_type_kind(_37139_s);
	_37213_obj+=jule::Str("::make(this, nullptr);", 22);
	return _37213_obj;
}



inline jule::Str _1acde57a4_gen_struct_constructor(jule::Ref<_1b5e07a00_StructIns>& _37832_s) {
	jule::Str _37913_obj = _1acde36d6_struct_ins_out_ident(_37832_s);
	_37913_obj+=jule::Str("(", 1);
	if (_37832_s->_field_fields.len() > 0LL) {
		{
			auto _range_expr = _37832_s->_field_fields;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_1b5e07a00_FieldIns> _1acde57a4_f = *_range_begin;
				_iter_begin_4447636352:;
				{
					_37913_obj+=_1ace28a7e_gen_type_kind(_1acde57a4_f->_field_kind);
					_37913_obj+=(jule::Str(" __param_", 9) + _1acde57a4_f->_field_decl->_field_ident) + jule::Str(", ", 2);
				}
				_iter_next_4447636352:;
				++_range_begin;
				if (_range_begin != _range_end) { _1acde57a4_f = *_range_begin; goto _iter_begin_4447636352; }
				_iter_end_4447636352:;
			}
		}
		_37913_obj=_37913_obj.slice(0LL,static_cast<jule::Int>(_37913_obj.len() - 2LL));
	} else {
		_37913_obj+=jule::Str("void", 4);
	}
	_37913_obj+=jule::Str(") {\n", 4);
	_1acde57a4_add_indent();
	_37913_obj+=_1acde57a4_indent();
	_37913_obj+=_1acde57a4_gen_struct_self_field_init_st(_37832_s);
	_37913_obj+=jule::Str("\n", 1);
	if (_37832_s->_field_fields.len() > 0LL) {
		{
			auto _range_expr = _37832_s->_field_fields;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_1b5e07a00_FieldIns> _1acde57a4_f = *_range_begin;
				_iter_begin_4447642912:;
				{
					_37913_obj+=jule::Str("\n", 1);
					_37913_obj+=_1acde57a4_indent();
					_37913_obj+=jule::Str("this->", 6);
					_37913_obj+=_1acde36d6_field_out_ident(_1acde57a4_f->_field_decl);
					_37913_obj+=jule::Str(" = ", 3);
					_37913_obj+=jule::Str("__param_", 8) + _1acde57a4_f->_field_decl->_field_ident;
					_37913_obj+=jule::Str(";", 1);
				}
				_iter_next_4447642912:;
				++_range_begin;
				if (_range_begin != _range_end) { _1acde57a4_f = *_range_begin; goto _iter_begin_4447642912; }
				_iter_end_4447642912:;
			}
		}
	}
	_1acde57a4_done_indent();
	_37913_obj+=(jule::Str("\n", 1) + _1acde57a4_indent()) + jule::Str("}", 1);
	return _37913_obj;
}



inline jule::Str _1acde57a4_gen_struct_destructor(jule::Ref<_1b5e07a00_StructIns>& _41531_s) {
	jule::Str _41613_obj = jule::Str("~", 1);
	_41613_obj+=_1acde36d6_struct_ins_out_ident(_41531_s);
	_41613_obj+=jule::Str("(void) { ", 9);
	if (_41531_s->_field_decl->_method_is_implements(_1aae49684_BUILTIN_TRAIT_DISPOSE)) {
		jule::Ref<_1b557cd24_Fn> _42213_dispose_method = _41531_s->_method_find_method(jule::Str("dispose", 7),false);
		_41613_obj+=jule::Str("this->", 6);
		_41613_obj+=_1acde36d6_fn_out_ident(_42213_dispose_method);
		_41613_obj+=jule::Str("(); ", 4);
	}
	_41613_obj+=jule::Str("this->self.ref = nullptr; }", 27);
	return _41613_obj;
}



inline jule::Str _1acde57a4_gen_struct_operators(jule::Ref<_1b5e07a00_StructIns>& _43230_s) {
	jule::Str _4339_out_ident = _1acde36d6_struct_ins_out_ident(_43230_s);
	jule::Str _43413_obj = jule::Str("", 0);
	_43413_obj+=_1acde57a4_indent();
	_43413_obj+=jule::Str("inline bool operator==(const ", 29);
	_43413_obj+=_4339_out_ident;
	_43413_obj+=jule::Str(" &_Src) const {", 15);
	if (_43230_s->_field_fields.len() > 0LL) {
		_1acde57a4_add_indent();
		_43413_obj+=jule::Str("\n", 1);
		_43413_obj+=_1acde57a4_indent();
		_43413_obj+=jule::Str("return ", 7);
		_1acde57a4_add_indent();
		jule::Int _44617_n = 0LL;
		{
			auto _range_expr = _43230_s->_field_fields;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_1b5e07a00_FieldIns> _1acde57a4_f = *_range_begin;
				_iter_begin_4447663328:;
				{
					jule::Ref<_1b5e07a00_StructIns> _44917_strct = _1acde57a4_f->_field_kind->_method_strct();
					if ((jule::real(_44917_strct) && jule::real(_44917_strct->_field_decl)) && _44917_strct->_field_decl->_field_cpp_linked) {
						goto _iter_next_4447663328;
					}
					(_44617_n)++;
					_43413_obj+=jule::Str("\n", 1);
					_43413_obj+=_1acde57a4_indent();
					_43413_obj+=jule::Str("this->", 6);
					jule::Str _45817_f_ident = _1acde36d6_field_out_ident(_1acde57a4_f->_field_decl);
					_43413_obj+=_45817_f_ident;
					_43413_obj+=jule::Str(" == _Src.", 9);
					_43413_obj+=_45817_f_ident;
					_43413_obj+=jule::Str(" &&", 3);
				}
				_iter_next_4447663328:;
				++_range_begin;
				if (_range_begin != _range_end) { _1acde57a4_f = *_range_begin; goto _iter_begin_4447663328; }
				_iter_end_4447663328:;
			}
		}
		_1acde57a4_done_indent();
		if (_44617_n > 0LL) {
			_43413_obj=_43413_obj.slice(0LL,static_cast<jule::Int>(_43413_obj.len() - 3LL));
		} else {
			_43413_obj+=jule::Str("true", 4);
		}
		_43413_obj+=jule::Str(";\n", 2);
		_1acde57a4_done_indent();
		_43413_obj+=_1acde57a4_indent();
		_43413_obj+=jule::Str("}", 1);
	} else {
		_43413_obj+=jule::Str(" return true; }", 15);
	}
	_43413_obj+=jule::Str("\n\n", 2);
	_43413_obj+=_1acde57a4_indent();
	_43413_obj+=jule::Str("inline bool operator!=(const ", 29);
	_43413_obj+=_4339_out_ident;
	_43413_obj+=jule::Str(" &_Src) const { return !this->operator==(_Src); }", 49);
	return _43413_obj;
}



inline jule::Str _1acde57a4_gen_struct_derive_defs_prototypes(jule::Ref<_1b5e07a00_StructIns>& _48539_s) {
	jule::Str _48613_obj = jule::Str("", 0);
	if (_48539_s->_field_decl->_method_is_derives(jule::Str("Clone", 5))) {
		_48613_obj+=_1acde57a4_indent();
		_48613_obj+=_1acca738b_get_derive_fn_decl_clone(_48539_s->_field_decl);
		_48613_obj+=jule::Str(";\n\n", 3);
	}
	return _48613_obj;
}



inline jule::Str _1acde57a4_gen_struct_ins_prototype(jule::Ref<_1b5e07a00_StructIns>& _49734_s) {
	jule::Str _49813_obj = jule::Str("struct ", 7);
	jule::Str _4999_out_ident = _1acde36d6_struct_ins_out_ident(_49734_s);
	_49813_obj+=_4999_out_ident;
	_49813_obj+=_1acde57a4_gen_struct_traits(_49734_s->_field_decl);
	_49813_obj+=jule::Str(" {\n", 3);
	_1acde57a4_add_indent();
	_49813_obj+=_1acde57a4_indent();
	_49813_obj+=_1acde57a4_gen_struct_self_field(_49734_s);
	_49813_obj+=jule::Str("\n\n", 2);
	if (_49734_s->_field_fields.len() > 0LL) {
		{
			auto _range_expr = _49734_s->_field_fields;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_1b5e07a00_FieldIns> _1acde57a4_f = *_range_begin;
				_iter_begin_4447689680:;
				{
					_49813_obj+=_1acde57a4_indent();
					_49813_obj+=_1acde57a4_gen_field_decl(_1acde57a4_f);
					_49813_obj+=jule::Str("\n", 1);
				}
				_iter_next_4447689680:;
				++_range_begin;
				if (_range_begin != _range_end) { _1acde57a4_f = *_range_begin; goto _iter_begin_4447689680; }
				_iter_end_4447689680:;
			}
		}
		_49813_obj+=jule::Str("\n\n", 2);
		_49813_obj+=_1acde57a4_indent();
		_49813_obj+=_1acde57a4_gen_struct_constructor(_49734_s);
		_49813_obj+=jule::Str("\n\n", 2);
	}
	_49813_obj+=_1acde57a4_indent();
	_49813_obj+=_1acde57a4_gen_struct_destructor(_49734_s);
	_49813_obj+=jule::Str("\n\n", 2);
	_49813_obj+=_1acde57a4_indent();
	_49813_obj+=_4999_out_ident;
	_49813_obj+=jule::Str("(void) { ", 9);
	_49813_obj+=_1acde57a4_gen_struct_self_field_init_st(_49734_s);
	_49813_obj+=jule::Str(" }\n\n", 4);
	{
		auto _range_expr = _49734_s->_field_methods;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b557cd24_Fn> _1acde57a4_f = *_range_begin;
			_iter_begin_4447695568:;
			{
				_49813_obj+=_1acde57a4_gen_fn_prototype(_1acde57a4_f,true);
				_49813_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_4447695568:;
			++_range_begin;
			if (_range_begin != _range_end) { _1acde57a4_f = *_range_begin; goto _iter_begin_4447695568; }
			_iter_end_4447695568:;
		}
	}
	_49813_obj+=_1acde57a4_gen_struct_derive_defs_prototypes(_49734_s);
	_49813_obj+=_1acde57a4_gen_struct_operators(_49734_s);
	_49813_obj+=jule::Str("\n", 1);
	_1acde57a4_done_indent();
	_49813_obj+=_1acde57a4_indent() + jule::Str("};", 2);
	return _49813_obj;
}



inline jule::Str _1acde57a4_gen_struct_prototype(jule::Ref<_1b5e07a00_Struct>& _54730_s) {
	jule::Str _54813_obj = jule::Str("", 0);
	{
		auto _range_expr = _54730_s->_field_instances;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b5e07a00_StructIns> _1acde57a4_ins = *_range_begin;
			_iter_begin_4447701840:;
			{
				_54813_obj+=_1acde57a4_gen_struct_ins_prototype(_1acde57a4_ins) + jule::Str("\n\n", 2);
			}
			_iter_next_4447701840:;
			++_range_begin;
			if (_range_begin != _range_end) { _1acde57a4_ins = *_range_begin; goto _iter_begin_4447701840; }
			_iter_end_4447701840:;
		}
	}
	return _54813_obj;
}



inline jule::Str _1acde57a4_gen_struct_prototypes(jule::Slice<jule::Ref<_1b5e07a00_Struct>>& _55631_structs) {
	jule::Str _55713_obj = jule::Str("", 0);
	{
		auto _range_expr = _55631_structs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b5e07a00_Struct> _1acde57a4_s = *_range_begin;
			_iter_begin_4447705632:;
			{
				if ((!(_1acde57a4_s->_field_cpp_linked)) && (_1acde57a4_s->_field_token._field_id != 0LLU)) {
					_55713_obj+=_1acde57a4_gen_struct_prototype(_1acde57a4_s) + jule::Str("\n", 1);
				}
			}
			_iter_next_4447705632:;
			++_range_begin;
			if (_range_begin != _range_end) { _1acde57a4_s = *_range_begin; goto _iter_begin_4447705632; }
			_iter_end_4447705632:;
		}
	}
	return _55713_obj;
}



inline jule::Str _1acde57a4_gen_fn_decl_head(jule::Ref<_1b557cd24_FnIns>& _56626_f,jule::Bool _56637_method) {
	jule::Str _56713_obj = jule::Str("", 0);
	if (_56637_method && _56626_f->_field_decl->_field_statically) {
		_56713_obj+=jule::Str("static ", 7);
	}
	if ((!(_56626_f->_field_decl->_method_is_entry_point()))) {
		_56713_obj+=jule::Str("inline ", 7);
	}
	_56713_obj+=_1acde57a4_gen_fn_ins_result(_56626_f) + jule::Str(" ", 1);
	if ((!(_56637_method)) && jule::real(_56626_f->_field_decl->_field_owner)) {
		_56713_obj+=_1acde36d6_struct_ins_out_ident(_56626_f->_field_owner) + jule::Str("::", 2);
	}
	_56713_obj+=_1acde36d6_fn_ins_out_ident(_56626_f);
	return _56713_obj;
}



inline jule::Str _1acde57a4_gen_fn_prototype(jule::Ref<_1b557cd24_Fn>& _58726_f,jule::Bool _58734_method) {
	jule::Str _58813_obj = jule::Str("", 0);
	{
		auto _range_expr = _58726_f->_field_instances;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b557cd24_FnIns> _1acde57a4_c = *_range_begin;
			_iter_begin_4447719888:;
			{
				_58813_obj+=_1acde57a4_indent();
				_58813_obj+=_1acde57a4_gen_fn_decl_head(_1acde57a4_c,_58734_method);
				_58813_obj+=_1acde57a4_gen_params_prototypes(_1acde57a4_c->_field_params);
				_58813_obj+=jule::Str(";\n", 2);
			}
			_iter_next_4447719888:;
			++_range_begin;
			if (_range_begin != _range_end) { _1acde57a4_c = *_range_begin; goto _iter_begin_4447719888; }
			_iter_end_4447719888:;
		}
	}
	return _58813_obj;
}



inline jule::Str _1acde57a4_gen_fn_prototypes(jule::Ref<_1ab194c20_Package>& _59927_pkg) {
	jule::Str _60013_obj = jule::Str("", 0);
	{
		auto _range_expr = _59927_pkg->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab00cc20_SymbolTable> _1acde57a4_file = *_range_begin;
			_iter_begin_4447724976:;
			{
				{
					auto _range_expr = _1acde57a4_file->_field_funcs;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Ref<_1b557cd24_Fn> _1acde57a4_f = *_range_begin;
						_iter_begin_4447726864:;
						{
							if ((!(_1acde57a4_f->_field_cpp_linked)) && (_1acde57a4_f->_field_token._field_id != 0LLU)) {
								_60013_obj+=_1acde57a4_gen_fn_prototype(_1acde57a4_f,false);
							}
						}
						_iter_next_4447726864:;
						++_range_begin;
						if (_range_begin != _range_end) { _1acde57a4_f = *_range_begin; goto _iter_begin_4447726864; }
						_iter_end_4447726864:;
					}
				}
			}
			_iter_next_4447724976:;
			++_range_begin;
			if (_range_begin != _range_end) { _1acde57a4_file = *_range_begin; goto _iter_begin_4447724976; }
			_iter_end_4447724976:;
		}
	}
	return _60013_obj;
}



inline jule::Str _1acde57a4_gen_prototypes(jule::Ref<_1b60cd1d1_IR>& _61224_ir) {
	jule::Str _61313_obj = jule::Str("", 0);
	{
		auto _range_expr = _61224_ir->_field_used;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab194c20_ImportInfo> _1acde57a4_u = *_range_begin;
			_iter_begin_4447728144:;
			{
				if ((!(_1acde57a4_u->_field_cpp_linked))) {
					_61313_obj+=_1acde57a4_gen_trait_prototypes(_1acde57a4_u->_field_package);
				}
			}
			_iter_next_4447728144:;
			++_range_begin;
			if (_range_begin != _range_end) { _1acde57a4_u = *_range_begin; goto _iter_begin_4447728144; }
			_iter_end_4447728144:;
		}
	}
	_61313_obj+=_1acde57a4_gen_trait_prototypes(_61224_ir->_field_main);
	_61313_obj+=_1acde57a4_gen_struct_plain_prototypes(_61224_ir->_field_ordered._field_structs);
	_61313_obj+=_1acde57a4_gen_traits(_61224_ir) + jule::Str("\n", 1);
	_61313_obj+=_1acde57a4_gen_struct_prototypes(_61224_ir->_field_ordered._field_structs);
	{
		auto _range_expr = _61224_ir->_field_used;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab194c20_ImportInfo> _1acde57a4_u = *_range_begin;
			_iter_begin_4447737424:;
			{
				if ((!(_1acde57a4_u->_field_cpp_linked))) {
					_61313_obj+=_1acde57a4_gen_fn_prototypes(_1acde57a4_u->_field_package);
				}
			}
			_iter_next_4447737424:;
			++_range_begin;
			if (_range_begin != _range_end) { _1acde57a4_u = *_range_begin; goto _iter_begin_4447737424; }
			_iter_end_4447737424:;
		}
	}
	_61313_obj+=_1acde57a4_gen_fn_prototypes(_61224_ir->_field_main);
	return _61313_obj;
}



inline jule::Str _1acde57a4_gen_var_init_expr(jule::Ref<_1b623eab2_Var>& _64027_v,jule::Str _64036_init) {
	jule::Str _64113_obj = jule::Str("", 0);
	if (_64027_v->_field_statically) {
		_64113_obj+=jule::Str("static ", 7);
	}
	_64113_obj+=_1ace28a7e_gen_type_kind(_64027_v->_field_kind->_field_kind) + jule::Str(" ", 1);
	if (_64027_v->_field_reference) {
		_64113_obj+=jule::Str("&", 1);
	}
	_64113_obj+=_1acde36d6_var_out_ident(_64027_v);
	if (_64036_init != jule::Str("", 0)) {
		_64113_obj+=jule::Str(" = ", 3) + _64036_init;
	}
	_64113_obj+=jule::Str(";", 1);
	return _64113_obj;
}



inline jule::Str _1acde57a4_gen_var(jule::Ref<_1b623eab2_Var> _65916_v) {
	if (_1b61ec5ec_is_ignore_ident(_65916_v->_field_ident)) {
		return jule::Str("", 0);
	}
	if (jule::real(_65916_v->_field_value) && jule::real(_65916_v->_field_value->_field_expr)) {
		if (_65916_v->_field_value->_field_data->_field_model != nullptr) {
			return _1acde57a4_gen_var_init_expr(_65916_v,_1aad99bde_gen_val(_65916_v->_field_value));
		}
		return _1acde57a4_gen_var_init_expr(_65916_v,jule::Str("", 0));
	}
	return _1acde57a4_gen_var_init_expr(_65916_v,_1aad99bde_get_init_expr(_65916_v->_field_kind->_field_kind));
}



inline jule::Str _1acde57a4_gen_globals(jule::Slice<jule::Ref<_1b623eab2_Var>>& _67421_globals) {
	jule::Str _67513_obj = jule::Str("", 0);
	{
		auto _range_expr = _67421_globals;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b623eab2_Var> _1acde57a4_v = *_range_begin;
			_iter_begin_4447756320:;
			{
				if (_1acde57a4_v->_field_token._field_id != 0LLU) {
					_67513_obj+=_1acde57a4_gen_var(_1acde57a4_v) + jule::Str("\n", 1);
				}
			}
			_iter_next_4447756320:;
			++_range_begin;
			if (_range_begin != _range_end) { _1acde57a4_v = *_range_begin; goto _iter_begin_4447756320; }
			_iter_end_4447756320:;
		}
	}
	return _67513_obj;
}



inline jule::Str _1acde57a4_gen_fn(jule::Ref<_1b557cd24_Fn>& _68716_f) {
	jule::Str _68813_obj = jule::Str("", 0);
	{
		auto _range_expr = _68716_f->_field_instances;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b557cd24_FnIns> _1acde57a4_ins = *_range_begin;
			_iter_begin_4447761456:;
			{
				_68813_obj+=_1acde57a4_gen_fn_decl_head(_1acde57a4_ins,false);
				_68813_obj+=_1acde57a4_gen_params_ins(_1acde57a4_ins->_field_params) + jule::Str(" ", 1);
				_68813_obj+=_1a977abdc_gen_fn_scope(_1acde57a4_ins);
				_68813_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_4447761456:;
			++_range_begin;
			if (_range_begin != _range_end) { _1acde57a4_ins = *_range_begin; goto _iter_begin_4447761456; }
			_iter_end_4447761456:;
		}
	}
	return _68813_obj;
}



inline jule::Str _1acde57a4_gen_pkg_fns(jule::Ref<_1ab194c20_Package>& _69921_p) {
	jule::Str _70013_obj = jule::Str("", 0);
	{
		auto _range_expr = _69921_p->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab00cc20_SymbolTable> _1acde57a4_f = *_range_begin;
			_iter_begin_4447766592:;
			{
				{
					auto _range_expr = _1acde57a4_f->_field_funcs;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Ref<_1b557cd24_Fn> _1acde57a4_f = *_range_begin;
						_iter_begin_4447768432:;
						{
							if ((!(_1acde57a4_f->_field_cpp_linked)) && (_1acde57a4_f->_field_token._field_id != 0LLU)) {
								_70013_obj+=_1acde57a4_gen_fn(_1acde57a4_f) + jule::Str("\n\n", 2);
							}
						}
						_iter_next_4447768432:;
						++_range_begin;
						if (_range_begin != _range_end) { _1acde57a4_f = *_range_begin; goto _iter_begin_4447768432; }
						_iter_end_4447768432:;
					}
				}
			}
			_iter_next_4447766592:;
			++_range_begin;
			if (_range_begin != _range_end) { _1acde57a4_f = *_range_begin; goto _iter_begin_4447766592; }
			_iter_end_4447766592:;
		}
	}
	return _70013_obj;
}



inline jule::Str _1acde57a4_gen_struct_method_defs(jule::Ref<_1b5e07a00_StructIns>& _71232_s) {
	jule::Str _71313_obj = jule::Str("", 0);
	{
		auto _range_expr = _71232_s->_field_methods;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b557cd24_Fn> _1acde57a4_f = *_range_begin;
			_iter_begin_4447773376:;
			{
				_71313_obj+=_1acde57a4_indent();
				_71313_obj+=_1acde57a4_gen_fn(_1acde57a4_f);
				_71313_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_4447773376:;
			++_range_begin;
			if (_range_begin != _range_end) { _1acde57a4_f = *_range_begin; goto _iter_begin_4447773376; }
			_iter_end_4447773376:;
		}
	}
	return _71313_obj;
}



inline jule::Str _1acde57a4_gen_struct_ostream(jule::Ref<_1b5e07a00_StructIns>& _72328_s) {
	jule::Str _72413_obj = jule::Str("", 0);
	_72413_obj+=_1acde57a4_indent();
	_72413_obj+=jule::Str("std::ostream &operator<<(std::ostream &_Stream, const ", 54);
	_72413_obj+=_1acde36d6_struct_ins_out_ident(_72328_s);
	_72413_obj+=jule::Str(" &_Src) {\n", 10);
	_1acde57a4_add_indent();
	_72413_obj+=_1acde57a4_indent();
	_72413_obj+=jule::Str("_Stream << \"", 12);
	_72413_obj+=_72328_s->_field_decl->_field_ident;
	_72413_obj+=jule::Str("{\";\n", 4);
	{
		auto _range_expr = _72328_s->_field_fields;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1acde57a4_i = 0;
			jule::Ref<_1b5e07a00_FieldIns> _1acde57a4_f = *_range_begin;
			_iter_begin_4447780896:;
			{
				_72413_obj+=_1acde57a4_indent();
				_72413_obj+=jule::Str("_Stream << \"", 12);
				_72413_obj+=_1acde57a4_f->_field_decl->_field_ident;
				_72413_obj+=jule::Str(":", 1);
				jule::Ref<_1b5e07a00_StructIns> _74213_strct = _1acde57a4_f->_field_kind->_method_strct();
				if ((jule::real(_74213_strct) && jule::real(_74213_strct->_field_decl)) && _74213_strct->_field_decl->_field_cpp_linked) {
					_72413_obj+=(jule::Str(" cpp.", 5) + _1acde36d6_field_out_ident(_1acde57a4_f->_field_decl)) + jule::Str("\"", 1);
				} else {
					_72413_obj+=jule::Str("\" << _Src.", 10);
					_72413_obj+=_1acde36d6_field_out_ident(_1acde57a4_f->_field_decl);
				}
				if ((_1acde57a4_i + 1LL) < _72328_s->_field_fields.len()) {
					_72413_obj+=jule::Str(" << \", \"", 8);
				}
				_72413_obj+=jule::Str(";\n", 2);
			}
			_iter_next_4447780896:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1acde57a4_i; _1acde57a4_f = *_range_begin; goto _iter_begin_4447780896; }
			_iter_end_4447780896:;
		}
	}
	_72413_obj+=_1acde57a4_indent();
	_72413_obj+=jule::Str("_Stream << \"}\";\n", 16);
	_72413_obj+=_1acde57a4_indent();
	_72413_obj+=jule::Str("return _Stream;\n", 16);
	_1acde57a4_done_indent();
	_72413_obj+=_1acde57a4_indent();
	_72413_obj+=jule::Str("}", 1);
	return _72413_obj;
}



inline jule::Str _1acde57a4_gen_struct_derive_defs(jule::Ref<_1b5e07a00_StructIns>& _76532_s) {
	jule::Str _76613_obj = jule::Str("", 0);
	if (_76532_s->_field_decl->_method_is_derives(jule::Str("Clone", 5))) {
		_76613_obj+=_1acde57a4_indent();
		_76613_obj+=_1acca738b_get_derive_fn_def_clone(_76532_s->_field_decl);
		_76613_obj+=jule::Str("{\n", 2);
		_1acde57a4_add_indent();
		_76613_obj+=_1acde57a4_indent();
		_76613_obj+=_1ace28a7e_gen_struct_kind_ins(_76532_s);
		_76613_obj+=jule::Str(" clone;\n", 8);
		{
			auto _range_expr = _76532_s->_field_fields;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_1b5e07a00_FieldIns> _1acde57a4_f = *_range_begin;
				_iter_begin_4447798512:;
				{
					jule::Str _77717_ident = _1acde36d6_field_out_ident(_1acde57a4_f->_field_decl);
					_76613_obj+=_1acde57a4_indent();
					_76613_obj+=jule::Str("clone.", 6);
					_76613_obj+=_77717_ident;
					_76613_obj+=jule::Str(" = jule::clone(this->", 21);
					_76613_obj+=_77717_ident;
					_76613_obj+=jule::Str(");\n", 3);
				}
				_iter_next_4447798512:;
				++_range_begin;
				if (_range_begin != _range_end) { _1acde57a4_f = *_range_begin; goto _iter_begin_4447798512; }
				_iter_end_4447798512:;
			}
		}
		_76613_obj+=_1acde57a4_indent();
		_76613_obj+=jule::Str("return clone;\n", 14);
		_1acde57a4_done_indent();
		_76613_obj+=_1acde57a4_indent();
		_76613_obj+=jule::Str("}", 1);
	}
	return _76613_obj;
}



inline jule::Str _1acde57a4_gen_struct_ins(jule::Ref<_1b5e07a00_StructIns>& _79724_s) {
	jule::Str _79813_obj = _1acde57a4_gen_struct_method_defs(_79724_s);
	_79813_obj+=jule::Str("\n\n", 2);
	_79813_obj+=_1acde57a4_gen_struct_derive_defs(_79724_s);
	_79813_obj+=jule::Str("\n\n", 2);
	_79813_obj+=_1acde57a4_gen_struct_ostream(_79724_s);
	return _79813_obj;
}



inline jule::Str _1acde57a4_gen_struct(jule::Ref<_1b5e07a00_Struct>& _80720_s) {
	jule::Str _80813_obj = jule::Str("", 0);
	{
		auto _range_expr = _80720_s->_field_instances;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b5e07a00_StructIns> _1acde57a4_ins = *_range_begin;
			_iter_begin_4447809872:;
			{
				_80813_obj+=_1acde57a4_gen_struct_ins(_1acde57a4_ins) + jule::Str("\n\n", 2);
			}
			_iter_next_4447809872:;
			++_range_begin;
			if (_range_begin != _range_end) { _1acde57a4_ins = *_range_begin; goto _iter_begin_4447809872; }
			_iter_end_4447809872:;
		}
	}
	return _80813_obj;
}



inline jule::Str _1acde57a4_gen_structs(jule::Slice<jule::Ref<_1b5e07a00_Struct>>& _81621_structs) {
	jule::Str _81713_obj = jule::Str("", 0);
	{
		auto _range_expr = _81621_structs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b5e07a00_Struct> _1acde57a4_s = *_range_begin;
			_iter_begin_4447813760:;
			{
				if ((!(_1acde57a4_s->_field_cpp_linked)) && (_1acde57a4_s->_field_token._field_id != 0LLU)) {
					_81713_obj+=_1acde57a4_gen_struct(_1acde57a4_s);
					_81713_obj+=jule::Str("\n\n", 2);
				}
			}
			_iter_next_4447813760:;
			++_range_begin;
			if (_range_begin != _range_end) { _1acde57a4_s = *_range_begin; goto _iter_begin_4447813760; }
			_iter_end_4447813760:;
		}
	}
	return _81713_obj;
}



inline jule::Str _1acde57a4_gen_fns(jule::Ref<_1b60cd1d1_IR>& _82817_ir) {
	jule::Str _82913_obj = jule::Str("", 0);
	{
		auto _range_expr = _82817_ir->_field_used;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab194c20_ImportInfo> _1acde57a4_u = *_range_begin;
			_iter_begin_4447819152:;
			{
				if ((!(_1acde57a4_u->_field_cpp_linked))) {
					_82913_obj+=_1acde57a4_gen_pkg_fns(_1acde57a4_u->_field_package);
				}
			}
			_iter_next_4447819152:;
			++_range_begin;
			if (_range_begin != _range_end) { _1acde57a4_u = *_range_begin; goto _iter_begin_4447819152; }
			_iter_end_4447819152:;
		}
	}
	_82913_obj+=_1acde57a4_gen_pkg_fns(_82817_ir->_field_main);
	return _82913_obj;
}



inline void _1acde57a4_push_init(jule::Ref<_1ab194c20_Package>& _84119_pkg,jule::Str& _84139_obj) {
	
	
	jule::Ref<_1b557cd24_Fn> _8459_f = _84119_pkg->_method_find_fn(jule::Str("init", 4),false);
	if ((!(jule::real(_8459_f)))) {
		return;
	}
	_84139_obj+=(jule::Str("\n\t", 2) + _1acde36d6_fn_out_ident(_8459_f)) + jule::Str("();", 3);
}



inline jule::Str _1acde57a4_gen_init_caller(jule::Ref<_1b60cd1d1_IR>& _85425_ir) {
	jule::Str _85513_obj = jule::Str("void ", 5);
	_85513_obj+=jule::Str("__jule_call_initializers", 24);
	_85513_obj+=jule::Str("(void) {", 8);
	{
		auto _range_expr = _85425_ir->_field_used;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab194c20_ImportInfo> _1acde57a4_u = *_range_begin;
			_iter_begin_4447831808:;
			{
				if ((!(_1acde57a4_u->_field_cpp_linked))) {
					_1acde57a4_push_init(_1acde57a4_u->_field_package,_85513_obj);
				}
			}
			_iter_next_4447831808:;
			++_range_begin;
			if (_range_begin != _range_end) { _1acde57a4_u = *_range_begin; goto _iter_begin_4447831808; }
			_iter_end_4447831808:;
		}
	}
	_1acde57a4_push_init(_85425_ir->_field_main,_85513_obj);
	_85513_obj+=jule::Str("\n}", 2);
	return _85513_obj;
}



inline void _1acde57a4_append_standard(jule::Str& _87029_obj_code,jule::Str _87044_compiler,jule::Str _87059_compiler_cmd) {
	_1ad0abb9b_AbsTime _8719_time = _1ad0abb9b_Time::_static_method_now()._method_abs();
	jule::Str _87313_time_str = jule::Str("", 0);
	_87313_time_str+=_1b59a1be8_fmt_uint(_8719_time._field_day,10LL);
	_87313_time_str+=jule::Str("/", 1);
	_87313_time_str+=_1b59a1be8_fmt_uint(_8719_time._field_month,10LL);
	_87313_time_str+=jule::Str("/", 1);
	_87313_time_str+=_1b59a1be8_fmt_uint(_8719_time._field_year,10LL);
	_87313_time_str+=jule::Str(" ", 1);
	_87313_time_str+=_1b59a1be8_fmt_uint(_8719_time._field_hour,10LL);
	_87313_time_str+=jule::Str(".", 1);
	_87313_time_str+=_1b59a1be8_fmt_uint(_8719_time._field_minute,10LL);
	_87313_time_str+=jule::Str(" (DD/MM/YYYY) (HH.MM) UTC", 25);
	jule::Str _88513_s = jule::Str("", 0);
	_88513_s+=jule::Str("// Auto generated by JuleC.\n", 28);
	_88513_s+=jule::Str("// JuleC version: ", 18);
	_88513_s+=jule::Str("beta 0.0.5 @master", 18);
	_88513_s+=jule::Str("\n", 1);
	_88513_s+=jule::Str("// Date: ", 9);
	_88513_s+=_87313_time_str;
	_88513_s+=jule::Str("\n//\n// Recommended Compile Command;\n// ", 39);
	_88513_s+=_87044_compiler;
	_88513_s+=jule::Str(" ", 1);
	_88513_s+=_87059_compiler_cmd;
	_88513_s+=jule::Str("\n\n#include \"", 12);
	_88513_s+=_1ce0450b9_PATH_API;
	_88513_s+=jule::Str("\"\n\n", 3);
	_88513_s+=_87029_obj_code;
	_88513_s+=jule::Str("\nint main(int argc, char *argv[], char *envp[]) {\n    std::set_terminate(&jule::terminate_handler);\n    jule::set_sig_handler(jule::signal_handler);\n    jule::setup_command_line_args(argc, argv);\n    jule::setup_environment_variables(envp);\n\n    __jule_call_initializers();\n    entry_point();\n\n    return EXIT_SUCCESS;\n}", 320);
	_87029_obj_code=_88513_s;
}



inline jule::Str _1acde57a4_gen(jule::Ref<_1b60cd1d1_IR>& _91917_ir) {
	jule::Str _92013_obj = jule::Str("", 0);
	_92013_obj+=_1acde57a4_gen_links(_91917_ir) + jule::Str("\n", 1);
	_92013_obj+=_1acde57a4_gen_prototypes(_91917_ir) + jule::Str("\n\n", 2);
	_92013_obj+=_1acde57a4_gen_globals(_91917_ir->_field_ordered._field_globals) + jule::Str("\n", 1);
	_92013_obj+=_1acde57a4_gen_structs(_91917_ir->_field_ordered._field_structs);
	_92013_obj+=_1acde57a4_gen_fns(_91917_ir) + jule::Str("\n", 1);
	_92013_obj+=_1acde57a4_gen_init_caller(_91917_ir) + jule::Str("\n", 1);
	return _92013_obj;
}



inline jule::Str _1cdd02591_str_repeat(jule::Str _3015_sub,jule::Int _3029_n) {
	if (_3029_n == 0LL) {
		return jule::Str("", 0);
	}
	jule::Str _3513_s = jule::Str("", 0);
	_iter_begin_4447952352:;
	if (!(_3029_n > 0LL)) { goto _iter_end_4447952352; }
	{
		_3513_s+=_3015_sub;
	}
	_iter_next_4447952352:;
	(_3029_n)--;
	goto _iter_begin_4447952352;
	_iter_end_4447952352:;
	return _3513_s;
}



inline void _1cdd02591_print_error_message(jule::Str _4224_msg) {
	jule::outln(_4224_msg);
}



inline void _1cdd02591_help(void) {
	if (_1cdd79b13_ARGS.len() > 2LL) {
		_1cdd02591_print_error_message(jule::Str("invalid command: ", 17) + _1cdd79b13_ARGS[2LL]);
		return;
	}
	jule::I64 _5113_max = _1cdd02591_HELP_MAP[0LL][0LL].len();
	{
		auto _range_expr = _1cdd02591_HELP_MAP;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Array<jule::Str,2> _1cdd02591_k = *_range_begin;
			_iter_begin_4447960560:;
			{
				jule::I64 _5313_n = _1cdd02591_k[0LL].len();
				if (_5313_n > _5113_max) {
					_5113_max=_5313_n;
				}
			}
			_iter_next_4447960560:;
			++_range_begin;
			if (_range_begin != _range_end) { _1cdd02591_k = *_range_begin; goto _iter_begin_4447960560; }
			_iter_end_4447960560:;
		}
	}
	jule::Str _5913_s = jule::Str("", 0);
	
	{
		auto _range_expr = _1cdd02591_HELP_MAP;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1cdd02591_i = 0;
			jule::Array<jule::Str,2> _1cdd02591_part = *_range_begin;
			_iter_begin_4447966448:;
			{
				_5913_s+=_1cdd02591_part[0LL];
				_5913_s+=_1cdd02591_str_repeat(jule::Str(" ", 1),static_cast<jule::I64>((_5113_max - _1cdd02591_part[0LL].len()) + 5LL));
				_5913_s+=_1cdd02591_part[1LL];
				if ((_1cdd02591_i + 1LL) < 4LL) {
					_5913_s+=jule::Str("\n", 1);
				}
			}
			_iter_next_4447966448:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1cdd02591_i; _1cdd02591_part = *_range_begin; goto _iter_begin_4447966448; }
			_iter_end_4447966448:;
		}
	}
	jule::outln(_5913_s);
}



inline void _1cdd02591_version(void) {
	if (_1cdd79b13_ARGS.len() > 2LL) {
		_1cdd02591_print_error_message(jule::Str("invalid command: ", 17) + _1cdd79b13_ARGS[2LL]);
		return;
	}
	jule::out(jule::Str("julec version ", 14));
	jule::outln(jule::Str("beta 0.0.5 @master", 18));
}



inline void _1cdd02591_tool_distos(void) {
	jule::out(jule::Str("supported operating systems:\n ", 30));
	{
		auto _range_expr = _1cde73206_DISTOS;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _1cdd02591_os = *_range_begin;
			_iter_begin_4447968096:;
			{
				jule::out(_1cdd02591_os);
				jule::out(jule::Str(" ", 1));
			}
			_iter_next_4447968096:;
			++_range_begin;
			if (_range_begin != _range_end) { _1cdd02591_os = *_range_begin; goto _iter_begin_4447968096; }
			_iter_end_4447968096:;
		}
	}
	jule::outln(jule::Str("", 0));
}



inline void _1cdd02591_tool_distarch(void) {
	jule::out(jule::Str("supported architects:\n ", 23));
	{
		auto _range_expr = _1cde73206_DISTARCH;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _1cdd02591_arch = *_range_begin;
			_iter_begin_4447979888:;
			{
				jule::out(_1cdd02591_arch);
				jule::out(jule::Str(" ", 1));
			}
			_iter_next_4447979888:;
			++_range_begin;
			if (_range_begin != _range_end) { _1cdd02591_arch = *_range_begin; goto _iter_begin_4447979888; }
			_iter_end_4447979888:;
		}
	}
	jule::outln(jule::Str("", 0));
}



inline void _1cdd02591_tool(void) {
	if (_1cdd79b13_ARGS.len() == 2LL) {
		jule::outln(jule::Str("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;
	} else if (_1cdd79b13_ARGS.len() > 3LL) {
		_1cdd02591_print_error_message(jule::Str("invalid command: ", 17) + _1cdd79b13_ARGS[3LL]);
		return;
	}
	jule::Str _1149_cmd = _1cdd79b13_ARGS[2LL];
	{
		auto _match_expr{ _1149_cmd };
		if (!((jule::Str("distos", 6)) == _match_expr)) { goto _case_end_4447991184; }
		_case_begin_4447991184:;
		{
			_1cdd02591_tool_distos();
		}
		goto _match_end_4447989632;
		_case_end_4447991184:;
		if (!((jule::Str("distarch", 8)) == _match_expr)) { goto _case_end_4447992144; }
		_case_begin_4447992144:;
		{
			_1cdd02591_tool_distarch();
		}
		goto _match_end_4447989632;
		_case_end_4447992144:;
		_case_begin_4447990176:;
		{
			_1cdd02591_print_error_message(jule::Str("Undefined command: ", 19) + _1149_cmd);
		}
		goto _match_end_4447989632;
		_case_end_4447990176:;
		_match_end_4447989632:;
	}
}



inline void _1cdd02591_julenv(void) {
	jule::outln(jule::Str("julec version: beta 0.0.5 @master", 33));
	jule::outln(jule::Str("architecture: amd64", 19));
	jule::outln(jule::Str("operating system: linux", 23));
}



inline jule::Bool _1cdd02591_process_command(void) {
	{
		auto _match_expr{ _1cdd79b13_ARGS[1LL] };
		if (!((jule::Str("help", 4)) == _match_expr)) { goto _case_end_4447996512; }
		_case_begin_4447996512:;
		{
			_1cdd02591_help();
		}
		goto _match_end_4447990704;
		_case_end_4447996512:;
		if (!((jule::Str("version", 7)) == _match_expr)) { goto _case_end_4447996624; }
		_case_begin_4447996624:;
		{
			_1cdd02591_version();
		}
		goto _match_end_4447990704;
		_case_end_4447996624:;
		if (!((jule::Str("tool", 4)) == _match_expr)) { goto _case_end_4447996736; }
		_case_begin_4447996736:;
		{
			_1cdd02591_tool();
		}
		goto _match_end_4447990704;
		_case_end_4447996736:;
		if (!((jule::Str("julenv", 6)) == _match_expr)) { goto _case_end_4447997824; }
		_case_begin_4447997824:;
		{
			_1cdd02591_julenv();
		}
		goto _match_end_4447990704;
		_case_end_4447997824:;
		_case_begin_4447996128:;
		{
			return false;
		}
		goto _match_end_4447990704;
		_case_end_4447996128:;
		_match_end_4447990704:;
	}
	return true;
}



inline void _1cdd02591_exit_err(jule::Str _14313_msg) {
	jule::outln(_14313_msg);
	_1cdd2665e_exit(1LL);
}



void entry_point(void) {
	if (_1cdd79b13_ARGS.len() < 2LL) {
		return;
	}
	if (_1cdd02591_process_command()) {
		return;
	}
	_1cde6b6e9_compile_command();
}



inline void _1cde501b1___init_common(void) {
	_1cde6b6e9_COMPILER=jule::Str("clang", 5);
	_1cde6b6e9_COMPILER_PATH=jule::Str("clang++", 7);
}



inline void _1cde6d971_init(void) {
	_1cde501b1___init_common();
}



inline jule::Int _1cde6b6e9_system(jule::Str _8211_cmd) {
	return static_cast<jule::Int>(static_cast<jule::Int>(system(((char*)((&(_8211_cmd[0LL])))))));
}



inline std::tuple<jule::Str,jule::Str> _1cde6b6e9_get_option(jule::Slice<jule::Str>& _8616_args,jule::Int& _8634_i) {
	jule::Str _8644_arg = jule::Str();
	jule::Str _8654_content = jule::Str();
	_iter_begin_4448013584:;
	if (!(_8634_i < _8616_args.len())) { goto _iter_end_4448013584; }
	{
		_8644_arg=_8616_args[static_cast<jule::Int>(_8634_i)];
		jule::Int _8917_j = 0LL;
		jule::Slice<jule::I32> _9017_runes = static_cast<jule::Slice<jule::I32>>(_8644_arg);
		jule::I32 _9117_r = _9017_runes[static_cast<jule::Int>(_8917_j)];
		if (_9117_r != '-') {
			_8654_content+=_8644_arg;
			_8644_arg=jule::Str("", 0);
			goto _iter_next_4448013584;
		}
		(_8917_j)++;
		if (_8917_j >= _9017_runes.len()) {
			_1cdd02591_exit_err(jule::Str("undefined syntax: ", 18) + _8644_arg);
		}
		_9117_r=_9017_runes[static_cast<jule::Int>(_8917_j)];
		if (_9117_r == '-') {
			(_8917_j)++;
			if (_8917_j >= _9017_runes.len()) {
				_1cdd02591_exit_err(jule::Str("undefined syntax: ", 18) + _8644_arg);
			}
			_9117_r=_9017_runes[static_cast<jule::Int>(_8917_j)];
		}
		if ((!(_1b61ec5ec_is_ident_rune(static_cast<jule::Str>(_9117_r))))) {
			_1cdd02591_exit_err(jule::Str("undefined syntax: ", 18) + _8644_arg);
		}
		(_8917_j)++;
		_iter_begin_4448028272:;
		if (!(_8917_j < _9017_runes.len())) { goto _iter_end_4448028272; }
		{
			_9117_r=_9017_runes[static_cast<jule::Int>(_8917_j)];
			if (((((!(_1b61ec5ec_is_space(_9117_r))) && (!(_1b61ec5ec_is_letter(_9117_r)))) && (!(_1b61ec5ec_is_decimal(static_cast<jule::U8>(_9117_r))))) && (_9117_r != '_')) && (_9117_r != '-')) {
				_1cdd02591_exit_err(jule::Str("undefined syntax: ", 18) + static_cast<jule::Str>(_9017_runes.slice(static_cast<jule::Int>(_8917_j))));
			}
		}
		_iter_next_4448028272:;
		(_8917_j)++;
		goto _iter_begin_4448028272;
		_iter_end_4448028272:;
		goto _iter_end_4448013584;
	}
	_iter_next_4448013584:;
	(_8634_i)++;
	goto _iter_begin_4448013584;
	_iter_end_4448013584:;
	return std::make_tuple(_8644_arg,_8654_content);
}



inline jule::Str _1cde6b6e9_get_option_value(jule::Slice<jule::Str>& _13022_args,jule::Int& _13040_i) {
	(_13040_i)++;
	if (_13040_i < _13022_args.len()) {
		jule::Str _13313_arg = _13022_args[static_cast<jule::Int>(_13040_i)];
		return _13313_arg;
	}
	return jule::Str("", 0);
}



inline void _1cde6b6e9_parse_out_option(jule::Slice<jule::Str>& _13922_args,jule::Int& _13940_i) {
	jule::Str _1409_value = _1cde6b6e9_get_option_value(_13922_args,_13940_i);
	if (_1409_value == jule::Str("", 0)) {
		_1cdd02591_exit_err(jule::Str("missing option value: -o --out", 30));
	}
	_1cde6b6e9_OUT=_1409_value;
}



inline void _1cde6b6e9_parse_opt_option(jule::Slice<jule::Str>& _14722_args,jule::Int& _14740_i) {
	jule::Str _1489_value = _1cde6b6e9_get_option_value(_14722_args,_14740_i);
	if (_1489_value == jule::Str("", 0)) {
		_1cdd02591_exit_err(jule::Str("missing option value: --opt", 27));
	}
	{
		auto _match_expr{ _1489_value };
		if (!((jule::Str("L0", 2)) == _match_expr)) { goto _case_end_4448051808; }
		_case_begin_4448051808:;
		{
			_1b615dbac_push_opt_level(0LLU);
		}
		goto _match_end_4448050096;
		_case_end_4448051808:;
		if (!((jule::Str("L1", 2)) == _match_expr)) { goto _case_end_4448052816; }
		_case_begin_4448052816:;
		{
			_1b615dbac_push_opt_level(1LLU);
		}
		goto _match_end_4448050096;
		_case_end_4448052816:;
		_case_begin_4448049376:;
		{
			_1cdd02591_exit_err(jule::Str("invalid optimization level: ", 28) + _1489_value);
		}
		goto _match_end_4448050096;
		_case_end_4448049376:;
		_match_end_4448050096:;
	}
}



inline void _1cde6b6e9_check_target_arch(jule::Str _16022_arch) {
	{
		auto _range_expr = _1cde73206_DISTARCH;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _1cde6b6e9_distarch = *_range_begin;
			_iter_begin_4448055136:;
			{
				if (_16022_arch == _1cde6b6e9_distarch) {
					return;
				}
			}
			_iter_next_4448055136:;
			++_range_begin;
			if (_range_begin != _range_end) { _1cde6b6e9_distarch = *_range_begin; goto _iter_begin_4448055136; }
			_iter_end_4448055136:;
		}
	}
	_1cdd02591_exit_err(jule::Str("unsupported/undefined architecture: ", 36) + _16022_arch);
}



inline void _1cde6b6e9_check_target_os(jule::Str _17020_os) {
	{
		auto _range_expr = _1cde73206_DISTOS;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _1cde6b6e9_distos = *_range_begin;
			_iter_begin_4448058432:;
			{
				if (_17020_os == _1cde6b6e9_distos) {
					return;
				}
			}
			_iter_next_4448058432:;
			++_range_begin;
			if (_range_begin != _range_end) { _1cde6b6e9_distos = *_range_begin; goto _iter_begin_4448058432; }
			_iter_end_4448058432:;
		}
	}
	_1cdd02591_exit_err(jule::Str("unsupported/undefined operating system: ", 40) + _17020_os);
}



inline void _1cde6b6e9_parse_target_option(jule::Slice<jule::Str>& _18025_args,jule::Int& _18043_i) {
	jule::Str _1819_value = _1cde6b6e9_get_option_value(_18025_args,_18043_i);
	if (_1819_value == jule::Str("", 0)) {
		_1cdd02591_exit_err(jule::Str("missing option value: --target", 30));
	}
	jule::Slice<jule::Str> _1869_parts = _1819_value.split(jule::Str("-", 1),-1LL);
	if (_1869_parts.len() != 2LL) {
		_1cdd02591_exit_err(jule::Str("undefined platform target format: ", 34) + _1819_value);
	}
	jule::Str _19110_os = _1869_parts[0LL];
	jule::Str _19114_arch = _1869_parts[1LL];
	std::tie(_19110_os,_19114_arch) = std::make_tuple(_1869_parts[0LL],_1869_parts[1LL]);
	if (_19110_os != jule::Str("native", 6)) {
		_1cde6b6e9_check_target_os(_19110_os);
		_1b614c8b0_OS=_19110_os;
	}
	if (_19114_arch != jule::Str("native", 6)) {
		_1cde6b6e9_check_target_arch(_19114_arch);
		_1b614c8b0_ARCH=_19114_arch;
	}
}



inline void _1cde6b6e9_parse_compiler_option(jule::Slice<jule::Str>& _20427_args,jule::Int& _20445_i) {
	jule::Str _2059_value = _1cde6b6e9_get_option_value(_20427_args,_20445_i);
	{
		auto _match_expr{ _2059_value };
		if (!((jule::Str("", 0)) == _match_expr)) { goto _case_end_4448095168; }
		_case_begin_4448095168:;
		{
			_1cdd02591_exit_err(jule::Str("missing option value: --compiler", 32));
		}
		goto _match_end_4448093856;
		_case_end_4448095168:;
		if (!((jule::Str("clang", 5)) == _match_expr)) { goto _case_end_4448096560; }
		_case_begin_4448096560:;
		{
			_1cde6b6e9_COMPILER=jule::Str("clang", 5);
			_1cde6b6e9_COMPILER_PATH=jule::Str("clang++", 7);
		}
		goto _match_end_4448093856;
		_case_end_4448096560:;
		if (!((jule::Str("gcc", 3)) == _match_expr)) { goto _case_end_4448096672; }
		_case_begin_4448096672:;
		{
			_1cde6b6e9_COMPILER=jule::Str("gcc", 3);
			_1cde6b6e9_COMPILER_PATH=jule::Str("g++", 3);
		}
		goto _match_end_4448093856;
		_case_end_4448096672:;
		_case_begin_4448094384:;
		{
			_1cdd02591_exit_err(jule::Str("invalid option value for --compiler: ", 37) + _2059_value);
		}
		goto _match_end_4448093856;
		_case_end_4448094384:;
		_match_end_4448093856:;
	}
}



inline jule::Str _1cde6b6e9_parse_options(jule::Slice<jule::Str>& _22319_args) {
	jule::Str _22413_cmd = jule::Str("", 0);
	jule::Int _22813_i = 1LL;
	_iter_begin_4448100400:;
	if (!(_22813_i < _22319_args.len())) { goto _iter_end_4448100400; }
	{
		jule::Str _23014_arg;
		jule::Str _23019_content;
		std::tie(_23014_arg,_23019_content) = _1cde6b6e9_get_option(_22319_args,_22813_i);
		_22413_cmd+=_23019_content;
		{
			auto _match_expr{ _23014_arg };
			if (!((jule::Str("", 0)) == _match_expr)) { goto _case_end_4448107008; }
			goto _match_end_4448102368;
			_case_end_4448107008:;
			if (!((jule::Str("-o", 2)) == _match_expr || (jule::Str("--out", 5)) == _match_expr)) { goto _case_end_4448105584; }
			_case_begin_4448105584:;
			{
				_1cde6b6e9_parse_out_option(_22319_args,_22813_i);
			}
			goto _match_end_4448102368;
			_case_end_4448105584:;
			if (!((jule::Str("-t", 2)) == _match_expr || (jule::Str("--transpile", 11)) == _match_expr)) { goto _case_end_4448105840; }
			_case_begin_4448105840:;
			{
				_1cde6b6e9_MODE=1LLU;
			}
			goto _match_end_4448102368;
			_case_end_4448105840:;
			if (!((jule::Str("-c", 2)) == _match_expr || (jule::Str("--compile", 9)) == _match_expr)) { goto _case_end_4448105072; }
			_case_begin_4448105072:;
			{
				_1cde6b6e9_MODE=0LLU;
			}
			goto _match_end_4448102368;
			_case_end_4448105072:;
			if (!((jule::Str("--compiler", 10)) == _match_expr)) { goto _case_end_4448105184; }
			_case_begin_4448105184:;
			{
				_1cde6b6e9_parse_compiler_option(_22319_args,_22813_i);
			}
			goto _match_end_4448102368;
			_case_end_4448105184:;
			if (!((jule::Str("--opt", 5)) == _match_expr)) { goto _case_end_4448105296; }
			_case_begin_4448105296:;
			{
				_1cde6b6e9_parse_opt_option(_22319_args,_22813_i);
			}
			goto _match_end_4448102368;
			_case_end_4448105296:;
			if (!((jule::Str("--target", 8)) == _match_expr)) { goto _case_end_4448107120; }
			_case_begin_4448107120:;
			{
				_1cde6b6e9_parse_target_option(_22319_args,_22813_i);
			}
			goto _match_end_4448102368;
			_case_end_4448107120:;
			if (!((jule::Str("--shadowing", 11)) == _match_expr)) { goto _case_end_4448107232; }
			_case_begin_4448107232:;
			{
				_1cde6b6e9_SEMA_FLAGS|=1LL;
			}
			goto _match_end_4448102368;
			_case_end_4448107232:;
			if (!((jule::Str("--opt-copy", 10)) == _match_expr)) { goto _case_end_4448107344; }
			_case_begin_4448107344:;
			{
				_1b615dbac_OPTIMIZATIONS=jule::append(_1b615dbac_OPTIMIZATIONS,jule::Slice<jule::Str>({jule::Str("--opt-copy", 10)}));
			}
			goto _match_end_4448102368;
			_case_end_4448107344:;
			if (!((jule::Str("--opt-deadcode", 14)) == _match_expr)) { goto _case_end_4448107456; }
			_case_begin_4448107456:;
			{
				_1b615dbac_OPTIMIZATIONS=jule::append(_1b615dbac_OPTIMIZATIONS,jule::Slice<jule::Str>({jule::Str("--opt-deadcode", 14)}));
			}
			goto _match_end_4448102368;
			_case_end_4448107456:;
			if (!((jule::Str("--opt-append", 12)) == _match_expr)) { goto _case_end_4448107568; }
			_case_begin_4448107568:;
			{
				_1b615dbac_OPTIMIZATIONS=jule::append(_1b615dbac_OPTIMIZATIONS,jule::Slice<jule::Str>({jule::Str("--opt-append", 12)}));
			}
			goto _match_end_4448102368;
			_case_end_4448107568:;
			if (!((jule::Str("--opt-math", 10)) == _match_expr)) { goto _case_end_4448107680; }
			_case_begin_4448107680:;
			{
				_1b615dbac_OPTIMIZATIONS=jule::append(_1b615dbac_OPTIMIZATIONS,jule::Slice<jule::Str>({jule::Str("--opt-math", 10)}));
			}
			goto _match_end_4448102368;
			_case_end_4448107680:;
			if (!((jule::Str("--opt-access", 12)) == _match_expr)) { goto _case_end_4448107792; }
			_case_begin_4448107792:;
			{
				_1b615dbac_OPTIMIZATIONS=jule::append(_1b615dbac_OPTIMIZATIONS,jule::Slice<jule::Str>({jule::Str("--opt-access", 12)}));
			}
			goto _match_end_4448102368;
			_case_end_4448107792:;
			_case_begin_4448104480:;
			{
				_1cdd02591_exit_err(jule::Str("undefined option: ", 18) + _23014_arg);
			}
			goto _match_end_4448102368;
			_case_end_4448104480:;
			_match_end_4448102368:;
		}
	}
	_iter_next_4448100400:;
	(_22813_i)++;
	goto _iter_begin_4448100400;
	_iter_end_4448100400:;
	_22413_cmd=_22413_cmd.trim(jule::Str(" \t\r\n\v", 5));
	return _22413_cmd;
}



inline void _1cde6b6e9_write_output(jule::Str _27017_path,jule::Str _27028_content) {
	jule::Str _2719_dir = _1cdd187e9_dir(_27017_path);
	jule::Int _27317_err;
	std::tie(std::ignore,_27317_err) = _1b618d48e_stat(_2719_dir);
	if (_27317_err != 0LLU) {
		_27317_err=_1b61bea42_create_dir(_2719_dir);
		if (_27317_err != 0LLU) {
			_1cdd02591_exit_err(jule::Str("a problem occurs when code generation", 37));
		}
	}
	jule::Ref<_1b61b2a8a_File> _28114_f;
	std::tie(_28114_f,_27317_err) = _1b618de0c_open(_27017_path,578LL,438LL);
	if (_27317_err != 0LLU) {
		_1cdd02591_exit_err(jule::Str("a problem occurs when code generation", 37));
	}
	std::tie(std::ignore,_27317_err) = _28114_f->_method_write(static_cast<jule::Slice<jule::U8>>(_27028_content));
	if (_27317_err != 0LLU) {
		_1cdd02591_exit_err(jule::Str("a problem occurs when code generation", 37));
	}
	_28114_f->_method_close();
}



inline void _1cde6b6e9_clear_objects(void) {
	if (_1b618de0c_remove_file(_1cde6b6e9_get_compile_path()) != 0LLU) {
		jule::outln(jule::Str("a problem occurs when object cleaning", 37));
		return;
	}
	_1b61bea42_remove_dir(_1cde6b6e9_OUT_DIR);
}



inline void _1cde6b6e9_compile_ir(jule::Str _30715_compiler,jule::Str _30730_compiler_cmd) {
	jule::Int _3089_status = _1cde6b6e9_system((_30715_compiler + jule::Str(" ", 1)) + _30730_compiler_cmd);
	if (_3089_status != 0LL) {
		jule::out(jule::Str("external compiler failed with status code: ", 43));
		jule::outln(_3089_status);
		_1cdd02591_exit_err(jule::Str("", 0));
	}
	_1cde6b6e9_clear_objects();
}



inline void _1cde6b6e9_do_spell(jule::Str _31913_obj,jule::Str _31923_compiler,jule::Str _31938_compiler_cmd) {
	jule::Str _3209_path = _1cde6b6e9_get_compile_path();
	_1cde6b6e9_write_output(_3209_path,_31913_obj);
	{
		auto _match_expr{ _1cde6b6e9_MODE };
		if (!((0LLU) == _match_expr)) { goto _case_end_4448144016; }
		_case_begin_4448144016:;
		{
			_1cde6b6e9_compile_ir(_31923_compiler,_31938_compiler_cmd);
		}
		goto _match_end_4448142704;
		_case_end_4448144016:;
		_match_end_4448142704:;
	}
}



inline void _1cde6b6e9_check_mode(void) {
	if ((_1cde6b6e9_MODE != 1LLU) && (_1cde6b6e9_MODE != 0LLU)) {
		jule::outln(_1cdeeb191_logf(jule::Str("\"@\" is invalid value for the \"@\" key", 36),jule::Slice<jule::Any>({jule::Any(_1cde6b6e9_MODE),jule::Any(jule::Str("mode", 4))})));
		_1cdd02591_exit_err(jule::Str("", 0));
	}
}



inline void _1cde6b6e9_check_compiler(void) {
	if ((_1cde6b6e9_COMPILER != jule::Str("gcc", 3)) && (_1cde6b6e9_COMPILER != jule::Str("clang", 5))) {
		jule::outln(_1cdeeb191_logf(jule::Str("\"@\" is invalid value for the \"@\" key", 36),jule::Slice<jule::Any>({jule::Any(_1cde6b6e9_COMPILER),jule::Any(jule::Str("compiler", 8))})));
		_1cdd02591_exit_err(jule::Str("", 0));
	}
}



inline void _1cde6b6e9_set(void) {
	_1cde6b6e9_check_mode();
	_1cde6b6e9_check_compiler();
	_1b6121345_init_flags();
}



inline jule::Bool _1cde6b6e9_is_cpp_source_file(jule::Str _35023_path) {
	jule::Int _3519_offset = _35023_path.rfind(jule::Str(".", 1));
	if (_3519_offset == -1LL) {
		return false;
	}
	return _1cdee4c4a_is_valid_cpp_ext(_35023_path.slice(static_cast<jule::Int>(_3519_offset)));
}



inline std::tuple<jule::Str,jule::Str> _1cde6b6e9_gen_compile_cmd(jule::Str _35920_source_path,jule::Ref<_1b60cd1d1_IR>& _35939_ir) {
	jule::Str _3609_compiler = _1cde6b6e9_COMPILER_PATH;
	
	
	
	jule::Str _3659_SET_STD = jule::Str("--std=", 6) + _1cde6b6e9_CPP_STD;
	jule::Str _36713_cmd = jule::Str("-O0 ", 4);
	{
		auto _match_expr{ _1cde6b6e9_COMPILER };
		if (!((jule::Str("gcc", 3)) == _match_expr)) { goto _case_end_4448166432; }
		_case_begin_4448166432:;
		{
			_36713_cmd+=jule::Str("-w ", 3);
		}
		goto _match_end_4448164720;
		_case_end_4448166432:;
		if (!((jule::Str("clang", 5)) == _match_expr)) { goto _case_end_4448166544; }
		_case_begin_4448166544:;
		{
			_36713_cmd+=jule::Str("-Wno-everything ", 16);
		}
		goto _match_end_4448164720;
		_case_end_4448166544:;
		_match_end_4448164720:;
	}
	_36713_cmd+=_3659_SET_STD + jule::Str(" ", 1);
	{
		auto _range_expr = _35939_ir->_field_passes;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _1cde6b6e9_pass = *_range_begin;
			_iter_begin_4448168960:;
			{
				_36713_cmd+=_1cde6b6e9_pass + jule::Str(" ", 1);
			}
			_iter_next_4448168960:;
			++_range_begin;
			if (_range_begin != _range_end) { _1cde6b6e9_pass = *_range_begin; goto _iter_begin_4448168960; }
			_iter_end_4448168960:;
		}
	}
	{
		auto _range_expr = _35939_ir->_field_used;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1ab194c20_ImportInfo> _1cde6b6e9_u = *_range_begin;
			_iter_begin_4448169968:;
			{
				if (_1cde6b6e9_u->_field_cpp_linked && _1cde6b6e9_is_cpp_source_file(_1cde6b6e9_u->_field_path)) {
					_36713_cmd+=_1cde6b6e9_u->_field_path + jule::Str(" ", 1);
				}
			}
			_iter_next_4448169968:;
			++_range_begin;
			if (_range_begin != _range_end) { _1cde6b6e9_u = *_range_begin; goto _iter_begin_4448169968; }
			_iter_end_4448169968:;
		}
	}
	if (_1cde6b6e9_OUT != jule::Str("", 0)) {
		_36713_cmd+=(jule::Str("-o ", 3) + _1cde6b6e9_OUT) + jule::Str(" ", 1);
	}
	_36713_cmd+=_35920_source_path;
	return std::make_tuple(_3609_compiler,_36713_cmd);
}



inline jule::Str _1cde6b6e9_get_compile_path(void) {
	return _1cdd187e9_join(jule::Slice<jule::Str>({_1cde6b6e9_OUT_DIR,_1cde6b6e9_OUT_NAME}));
}



inline void _1cde6b6e9_apply_target_independent_optimizations(jule::Ref<_1b60cd1d1_IR>& _40848_ir) {
	if (_1b615dbac_is_opt_enabled(jule::Str("--opt-deadcode", 14))) {
		_1b550a80c_eliminate(_40848_ir);
	}
}



inline void _1cde6b6e9_compile_command(void) {
	jule::Str _4169_path = _1cde6b6e9_parse_options(_1cdd79b13_ARGS);
	if (_4169_path == jule::Str("", 0)) {
		_1cdd02591_exit_err(_1cdeeb191_logf(jule::Str("missing compile path", 20),jule::Slice<jule::Any>({})));
	}
	jule::Ref<_1a8bb56ee_Status> _42210_inf;
	jule::Int _42215_err;
	std::tie(_42210_inf,_42215_err) = _1b618d48e_stat(_1ce0450b9_PATH_STDLIB);
	if ((_42215_err != 0LLU) || (!(_42210_inf->_method_is_dir()))) {
		_1cdd02591_exit_err(_1cdeeb191_logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>({})));
	}
	_1cde6b6e9_set();
	jule::Ref<_1b60cd1d1_IR> _42914_ir;
	jule::Slice<_1cdeeb191_Log> _42918_logs;
	std::tie(_42914_ir,_42918_logs) = _1b60cd1d1_IR::_static_method_build(_4169_path,_1cde6b6e9_SEMA_FLAGS);
	if ((!(jule::real(_42914_ir))) && (_42918_logs == nullptr)) {
		_1cdd02591_exit_err(_1cdeeb191_logf(jule::Str("there is no Jule source code in this package: @", 47),jule::Slice<jule::Any>({jule::Any(_4169_path)})));
	}
	if (_42918_logs != nullptr) {
		_1cde4dc3c_Logger::_static_method_print_logs(_42918_logs);
		_1cdd02591_exit_err(jule::Str("", 0));
	}
	
	jule::Ref<_1b557cd24_Fn> _44113_f = _42914_ir->_field_main->_method_find_fn(jule::Str("main", 4),false);
	if ((!(jule::real(_44113_f)))) {
		_1cdd02591_exit_err(_1cdeeb191_logf(jule::Str("entry point (main) function is not defined", 42),jule::Slice<jule::Any>({})));
	}
	_44113_f->_field_statically=true;
	_44113_f=_42914_ir->_field_main->_method_find_fn(jule::Str("init", 4),false);
	if (jule::real(_44113_f)) {
		_44113_f->_field_statically=true;
	}
	_42914_ir->_method_order();
	_1cde6b6e9_apply_target_independent_optimizations(_42914_ir);
	jule::Str _45710_compiler;
	jule::Str _45720_compiler_cmd;
	std::tie(_45710_compiler,_45720_compiler_cmd) = _1cde6b6e9_gen_compile_cmd(_1cde6b6e9_get_compile_path(),_42914_ir);
	jule::Str _45913_obj = _1acde57a4_gen(_42914_ir);
	_1acde57a4_append_standard(_45913_obj,_45710_compiler,_45720_compiler_cmd);
	_1cde6b6e9_do_spell(_45913_obj,_45710_compiler,_45720_compiler_cmd);
}




void __jule_call_initializers(void) {
	_1cdd79b13_init();
	_1ce0450b9_init();
	_1aae49684_init();
	_1cde6d971_init();
}

int main(int argc, char *argv[], char *envp[]) {
    std::set_terminate(&jule::terminate_handler);
    jule::set_sig_handler(jule::signal_handler);
    jule::setup_command_line_args(argc, argv);
    jule::setup_environment_variables(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}