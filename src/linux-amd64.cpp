// Auto generated by JuleC.
// JuleC version: beta 0.0.4 master
// Date: 20/8/2023 16.46 (DD/MM/YYYY) (HH.MM)
//
// Recommended Compile Command;
// clang++ -O0 -Wno-everything --std=c++17 dist/ir.cpp

#include "api/jule.hpp"                                   

#include <dirent.h>
#include <fcntl.h>
#include <unistd.h>
#include <cstdio>
#include <sys/stat.h>
#include "std/sys/syscall_unix.hpp"                                   
#include "src/julec/julec.hpp"                                   
#include "std/vector/alloc.hpp"                                   
#include "std/jule/parser/parser.hpp"                                   
#include "src/julec/obj/cxx/cxx.hpp"                                   

struct _150f26340_Importer;
struct _15177b070_Kind;
struct _1517fbd60_Lookup;
struct _1517eb5a0_RangeSetter;

struct _157e24e40_AnsiEscape;


struct _157e24e40_Logger;


struct _147e135c0_LazyBuff;


struct _150715130_bits_error;


struct _147e3cfb0_FloatInfo;


struct _147e3cfb0_DecimalSlice;


struct _150025080_LeftCheat;


struct _150025080_Decimal;


struct _157e34dc0_Log;


struct _15053ceb0_DirEntry;


struct _150562500_File;


struct _1505f1a60_Status;


struct _15081f100_accept_range;


struct _150640f50_Token;


struct _150567d60_KindPair;


struct _1506406d0_CommentGroup;


struct _1506406d0_NamespaceTypeDecl;


struct _1506406d0_RefTypeDecl;


struct _1506406d0_SlcTypeDecl;


struct _1506406d0_TupleTypeDecl;


struct _1506406d0_PtrTypeDecl;


struct _1506406d0_ArrTypeDecl;


struct _1506406d0_MapTypeDecl;


struct _1506406d0_RetTypeDecl;


struct _1506406d0_TupleExpr;


struct _1506406d0_LitExpr;


struct _1506406d0_UnsafeExpr;


struct _1506406d0_IdentExpr;


struct _1506406d0_UnaryExpr;


struct _1506406d0_VariadicExpr;


struct _1506406d0_CastExpr;


struct _1506406d0_NsSelectionExpr;


struct _1506406d0_SubIdentExpr;


struct _1506406d0_BinopExpr;


struct _1506406d0_FieldExprPair;


struct _1506406d0_StructLit;


struct _1506406d0_BraceLit;


struct _1506406d0_KeyValPair;


struct _1506406d0_SliceExpr;


struct _1506406d0_IndexingExpr;


struct _1506406d0_SlicingExpr;


struct _1506406d0_LabelSt;


struct _1506406d0_FallSt;


struct _1506406d0_AssignSt;


struct _1506406d0_ScopeTree;


struct _1506406d0_RetSt;


struct _1506406d0_Iter;


struct _1506406d0_WhileKind;


struct _1506406d0_RangeKind;


struct _1506406d0_Conditional;


struct _1506406d0_MatchCase;


struct _1507e43e0_FileInfo;


struct _1507e43e0_PackageInfo;


struct _1507e2370_Stmt;


struct _1507e2370_ScopeParser;


struct _1507ea360_CallData;


struct _1507ea360_Precedencer;


struct _1507ea360_ExprBuilder;


struct _150831fa0_Parser;


struct _150aed7c0_TypeBuilder;


struct _15199b440_Const;


struct _150a13110_FieldIns;


struct _150a13110_StructIns;


struct _15081bcd0_RetType;


struct _15081bcd0_ParamIns;


struct _15081bcd0_FnIns;


struct _150e75a70_SymbolBuilder;


struct _150d29660_If;


struct _150d29660_Else;


struct _150d29660_Conditional;


struct _150d29660_InfIter;


struct _150d29660_WhileIter;


struct _150d29660_RangeIter;


struct _150d29660_ContSt;


struct _150d29660_BreakSt;


struct _150d29660_Label;


struct _150d29660_GotoSt;


struct _150d29660_Postfix;


struct _150d29660_Assign;


struct _150d29660_MultiAssign;


struct _150d29660_Match;


struct _150d29660_Case;


struct _150d29660_FallSt;


struct _150d29660_RetSt;


struct _150d29660_Recover;


struct _150d29660_ScopeGoto;


struct _150d29660_ScopeChecker;


struct _150f25dd0_BinopExprModel;


struct _150f25dd0_UnaryExprModel;


struct _150f25dd0_GetRefPtrExprModel;


struct _150f25dd0_StructArgExprModel;


struct _150f25dd0_StructLitExprModel;


struct _150f25dd0_AllocStructLitExprModel;


struct _150f25dd0_CastingExprModel;


struct _150f25dd0_FnCallExprModel;


struct _150f25dd0_SliceExprModel;


struct _150f25dd0_IndexigExprModel;


struct _150f25dd0_AnonFnExprModel;


struct _150f25dd0_KeyValPairExprModel;


struct _150f25dd0_MapExprModel;


struct _150f25dd0_SlicingExprModel;


struct _150f25dd0_TraitSubIdentExprModel;


struct _150f25dd0_StructSubIdentExprModel;


struct _150f25dd0_StructStaticIdentExprModel;


struct _150f25dd0_ArrayExprModel;


struct _150f25dd0_CommonIdentExprModel;


struct _150f25dd0_CommonSubIdentExprModel;


struct _150f25dd0_TupleExprModel;


struct _150f25dd0_BuiltinOutCallExprModel;


struct _150f25dd0_BuiltinOutlnCallExprModel;


struct _150f25dd0_BuiltinCloneCallExprModel;


struct _150f25dd0_BuiltinNewCallExprModel;


struct _150f25dd0_BuiltinRealCallExprModel;


struct _150f25dd0_BuiltinDropCallExprModel;


struct _150f25dd0_BuiltinPanicCallExprModel;


struct _150f25dd0_BuiltinMakeCallExprModel;


struct _150f25dd0_BuiltinAppendCallExprModel;


struct _150f25dd0_BuiltinErrorTraitSubIdentExprModel;


struct _150f25dd0_SizeofExprModel;


struct _150f25dd0_AlignofExprModel;


struct _150f25dd0_RuneExprModel;


struct _150f25dd0_ExplicitDerefExprModel;


struct _150f26340_Package;


struct _1510c9150_Sema;


struct _1510d19a0_DynamicTypeAnnotation;


struct _1510d19a0_StructLitChecker;


struct _1510d19a0_RangeChecker;


struct _151290fd0_Data;


struct _151290fd0_Value;


struct _151290fd0_Eval;


struct _15177b070_TypeKind;


struct _15177b070_TypeSymbol;


struct _15177b070_Prim;


struct _15177b070_Ref;


struct _15177b070_Slc;


struct _15177b070_Tuple;


struct _15177b070_Map;


struct _15177b070_Arr;


struct _15177b070_Ptr;


struct _15177b070_Referencer;


struct _1503de590_PlainImporter;


struct _1501d9900_IR;


struct _157eacdb0_ScopeDeadCode;


struct _1517eb5a0_IndexRangeSetter;


struct _1517eb5a0_MapRangeSetter;


struct _1514109b0_OrderedDecls;


struct _15177b070_TypeChecker;


struct _15177b070_TypeAlias;


struct _151290fd0_BinopSolver;


struct _1510d19a0_RetTypeChecker;


struct _1510d19a0_FnCallArgChecker;


struct _1510d19a0_AssignTypeChecker;


struct _1510d19a0_TypeCompatibilityChecker;


struct _1511317d0_Var;


struct _150f26340_ImportInfo;


struct _150d29660_ScopeLabel;


struct _150f235a0_Impl;


struct _150f1c930_Enum;


struct _150f1c930_EnumItem;


struct _150f166e0_Trait;


struct _150e75a70_Pass;


struct _15081bcd0_Fn;


struct _15081bcd0_Param;


struct _150a13110_Field;


struct _1507eb940_AssignInfo;


struct _1506406d0_Impl;


struct _1506406d0_TraitDecl;


struct _1506406d0_StructDecl;


struct _1506406d0_FieldDecl;


struct _1506406d0_EnumDecl;


struct _1506406d0_EnumItemDecl;


struct _1506406d0_UseDecl;


struct _1506406d0_Case;


struct _1506406d0_TypeAliasDecl;


struct _1506406d0_Else;


struct _1506406d0_If;


struct _1506406d0_ContSt;


struct _1506406d0_BreakSt;


struct _1506406d0_VarDecl;


struct _1506406d0_FnDecl;


struct _1506406d0_ParamDecl;


struct _1506406d0_AssignLeft;


struct _1506406d0_GotoSt;


struct _1506406d0_GenericDecl;


struct _1506406d0_FnCallExpr;


struct _1506406d0_Expr;


struct _1506406d0_IdentTypeDecl;


struct _1506406d0_TypeDecl;


struct _1506406d0_Directive;


struct _1506406d0_Comment;


struct _1506406d0_Node;


struct _1509ba170_Vector_0;

struct _1509ba170_Vector_1;

struct _1509ba170_Vector_2;

struct _1509ba170_Vector_3;

struct _1509ba170_Vector_4;

struct _1509ba170_Vector_5;

struct _1509ba170_Vector_6;

struct _1509ba170_Vector_7;

struct _1509ba170_Vector_8;

struct _1509ba170_Vector_9;

struct _1509ba170_Vector_10;

struct _1509ba170_Vector_11;

struct _1509ba170_Vector_12;

struct _1509ba170_Vector_13;

struct _1509ba170_Vector_14;

struct _1509ba170_Vector_15;


struct _1506fba60_File;


struct _150567d60_Lex;


struct _15053e120_Ast;


struct _150a13110_Struct;


struct _150e75a70_ReferenceStack;


struct _150d29660_Scope;


struct _15128c4d0_SymbolTable;

struct _150f26340_Importer {
	virtual ~_150f26340_Importer(void) {}

	virtual jule::Ref<_150f26340_ImportInfo> _method_get_import(jule::Str _1633_path) { return {}; }
	virtual std::tuple<jule::Slice<jule::Ref<_15053e120_Ast>>,jule::Slice<_157e34dc0_Log>> _method_import_package(jule::Str _2037_path) { return {}; }
	virtual void _method_imported(jule::Ref<_150f26340_ImportInfo>) {}
};

struct _15177b070_Kind {
	virtual ~_15177b070_Kind(void) {}

	virtual jule::Str _method_to_str(void) { return {}; }
	virtual jule::Bool _method_equals(jule::Ref<_15177b070_TypeKind> _4621_other) { return {}; }
};

struct _1517fbd60_Lookup {
	virtual ~_1517fbd60_Lookup(void) {}

	virtual jule::Ref<_150f26340_ImportInfo> _method_find_package(jule::Str _935_ident) { return {}; }
	virtual jule::Ref<_150f26340_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ref<_150f26340_ImportInfo>)> _1337_selector) { return {}; }
	virtual jule::Ref<_1511317d0_Var> _method_find_var(jule::Str _1731_ident,jule::Bool _1743_cpp_linked) { return {}; }
	virtual jule::Ref<_15177b070_TypeAlias> _method_find_type_alias(jule::Str _2138_ident,jule::Bool _2150_cpp_linked) { return {}; }
	virtual jule::Ref<_150a13110_Struct> _method_find_struct(jule::Str _2534_ident,jule::Bool _2546_cpp_linked) { return {}; }
	virtual jule::Ref<_15081bcd0_Fn> _method_find_fn(jule::Str _2930_ident,jule::Bool _2942_cpp_linked) { return {}; }
	virtual jule::Ref<_150f166e0_Trait> _method_find_trait(jule::Str _3333_ident) { return {}; }
	virtual jule::Ref<_150f1c930_Enum> _method_find_enum(jule::Str _3732_ident) { return {}; }
};

struct _1517eb5a0_RangeSetter {
	virtual ~_1517eb5a0_RangeSetter(void) {}

	virtual jule::Str _method_setup_vars(jule::Ref<_1511317d0_Var> _3929_key_a,jule::Ref<_1511317d0_Var> _3946_key_b) { return {}; }
	virtual jule::Str _method_next_steps(jule::Ref<_1511317d0_Var> _4029_key_a,jule::Ref<_1511317d0_Var> _4046_key_b,jule::Str _4059_begin) { return {}; }
};


struct _157e24e40_AnsiEscape {
	jule::Ref<_157e24e40_AnsiEscape> self{};

	~_157e24e40_AnsiEscape(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_157e24e40_AnsiEscape(void) { this->self = jule::Ref<_157e24e40_AnsiEscape>::make(this, nullptr); }

	static inline void _static_method_reset(void);


	static inline void _static_method_print(jule::Str,jule::Str);


	inline bool operator==(const _157e24e40_AnsiEscape &_Src) const { return true; }

	inline bool operator!=(const _157e24e40_AnsiEscape &_Src) const { return !this->operator==(_Src); }
};


struct _157e24e40_Logger {
	jule::Ref<_157e24e40_Logger> self{};

	~_157e24e40_Logger(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_157e24e40_Logger(void) { this->self = jule::Ref<_157e24e40_Logger>::make(this, nullptr); }

	static inline void _static_method_log_flat(_157e34dc0_Log&);


	static inline void _static_method_log_error(_157e34dc0_Log&);


	static inline void _static_method_log(_157e34dc0_Log&);


	inline bool operator==(const _157e24e40_Logger &_Src) const { return true; }

	inline bool operator!=(const _157e24e40_Logger &_Src) const { return !this->operator==(_Src); }
};


struct _147e135c0_LazyBuff {
	jule::Ref<_147e135c0_LazyBuff> self{};

	jule::Str _field_path{jule::Str()};
	jule::Slice<jule::U8> _field_buff{jule::Slice<jule::U8>()};
	jule::Int _field_w{jule::Int()};
	jule::Str _field_vol_and_path{jule::Str()};
	jule::Int _field_vol_len{jule::Int()};


	_147e135c0_LazyBuff(jule::Str __param_path, jule::Slice<jule::U8> __param_buff, jule::Int __param_w, jule::Str __param_vol_and_path, jule::Int __param_vol_len) {
		this->self = jule::Ref<_147e135c0_LazyBuff>::make(this, nullptr);

		this->_field_path = __param_path;
		this->_field_buff = __param_buff;
		this->_field_w = __param_w;
		this->_field_vol_and_path = __param_vol_and_path;
		this->_field_vol_len = __param_vol_len;
	}

	~_147e135c0_LazyBuff(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_147e135c0_LazyBuff(void) { this->self = jule::Ref<_147e135c0_LazyBuff>::make(this, nullptr); }

	inline jule::U8 _method_index(jule::Int);


	inline void _method_append(jule::U8);


	inline jule::Str _method_string(void);


	inline bool operator==(const _147e135c0_LazyBuff &_Src) const {
		return 
			this->_field_path == _Src._field_path &&
			this->_field_buff == _Src._field_buff &&
			this->_field_w == _Src._field_w &&
			this->_field_vol_and_path == _Src._field_vol_and_path &&
			this->_field_vol_len == _Src._field_vol_len;
	}

	inline bool operator!=(const _147e135c0_LazyBuff &_Src) const { return !this->operator==(_Src); }
};


struct _150715130_bits_error: public jule::Error {
	jule::Ref<_150715130_bits_error> self{};

	jule::Str _field_message{jule::Str()};


	_150715130_bits_error(jule::Str __param_message) {
		this->self = jule::Ref<_150715130_bits_error>::make(this, nullptr);

		this->_field_message = __param_message;
	}

	~_150715130_bits_error(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150715130_bits_error(void) { this->self = jule::Ref<_150715130_bits_error>::make(this, nullptr); }

	inline jule::Str _method_error(void);


	inline bool operator==(const _150715130_bits_error &_Src) const {
		return 
			this->_field_message == _Src._field_message;
	}

	inline bool operator!=(const _150715130_bits_error &_Src) const { return !this->operator==(_Src); }
};


struct _147e3cfb0_FloatInfo {
	jule::Ref<_147e3cfb0_FloatInfo> self{};

	jule::Uint _field_mantbits{jule::Uint()};
	jule::Uint _field_expbits{jule::Uint()};
	jule::Int _field_bias{jule::Int()};


	_147e3cfb0_FloatInfo(jule::Uint __param_mantbits, jule::Uint __param_expbits, jule::Int __param_bias) {
		this->self = jule::Ref<_147e3cfb0_FloatInfo>::make(this, nullptr);

		this->_field_mantbits = __param_mantbits;
		this->_field_expbits = __param_expbits;
		this->_field_bias = __param_bias;
	}

	~_147e3cfb0_FloatInfo(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_147e3cfb0_FloatInfo(void) { this->self = jule::Ref<_147e3cfb0_FloatInfo>::make(this, nullptr); }

	inline bool operator==(const _147e3cfb0_FloatInfo &_Src) const {
		return 
			this->_field_mantbits == _Src._field_mantbits &&
			this->_field_expbits == _Src._field_expbits &&
			this->_field_bias == _Src._field_bias;
	}

	inline bool operator!=(const _147e3cfb0_FloatInfo &_Src) const { return !this->operator==(_Src); }
};


struct _147e3cfb0_DecimalSlice {
	jule::Ref<_147e3cfb0_DecimalSlice> self{};

	jule::Slice<jule::U8> _field_d{jule::Slice<jule::U8>()};
	jule::Int _field_nd{jule::Int()};
	jule::Int _field_dp{jule::Int()};
	jule::Bool _field_neg{jule::Bool()};


	_147e3cfb0_DecimalSlice(jule::Slice<jule::U8> __param_d, jule::Int __param_nd, jule::Int __param_dp, jule::Bool __param_neg) {
		this->self = jule::Ref<_147e3cfb0_DecimalSlice>::make(this, nullptr);

		this->_field_d = __param_d;
		this->_field_nd = __param_nd;
		this->_field_dp = __param_dp;
		this->_field_neg = __param_neg;
	}

	~_147e3cfb0_DecimalSlice(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_147e3cfb0_DecimalSlice(void) { this->self = jule::Ref<_147e3cfb0_DecimalSlice>::make(this, nullptr); }

	inline bool operator==(const _147e3cfb0_DecimalSlice &_Src) const {
		return 
			this->_field_d == _Src._field_d &&
			this->_field_nd == _Src._field_nd &&
			this->_field_dp == _Src._field_dp &&
			this->_field_neg == _Src._field_neg;
	}

	inline bool operator!=(const _147e3cfb0_DecimalSlice &_Src) const { return !this->operator==(_Src); }
};


struct _150025080_LeftCheat {
	jule::Ref<_150025080_LeftCheat> self{};

	jule::Int _field_delta{jule::Int()};
	jule::Str _field_cutoff{jule::Str()};


	_150025080_LeftCheat(jule::Int __param_delta, jule::Str __param_cutoff) {
		this->self = jule::Ref<_150025080_LeftCheat>::make(this, nullptr);

		this->_field_delta = __param_delta;
		this->_field_cutoff = __param_cutoff;
	}

	~_150025080_LeftCheat(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150025080_LeftCheat(void) { this->self = jule::Ref<_150025080_LeftCheat>::make(this, nullptr); }

	inline bool operator==(const _150025080_LeftCheat &_Src) const {
		return 
			this->_field_delta == _Src._field_delta &&
			this->_field_cutoff == _Src._field_cutoff;
	}

	inline bool operator!=(const _150025080_LeftCheat &_Src) const { return !this->operator==(_Src); }
};


struct _150025080_Decimal {
	jule::Ref<_150025080_Decimal> self{};

	jule::Array<jule::U8,800> _field_d{jule::Array<jule::U8,800>()};
	jule::Int _field_nd{jule::Int()};
	jule::Int _field_dp{jule::Int()};
	jule::Bool _field_neg{jule::Bool()};
	jule::Bool _field_trunc{jule::Bool()};


	_150025080_Decimal(jule::Array<jule::U8,800> __param_d, jule::Int __param_nd, jule::Int __param_dp, jule::Bool __param_neg, jule::Bool __param_trunc) {
		this->self = jule::Ref<_150025080_Decimal>::make(this, nullptr);

		this->_field_d = __param_d;
		this->_field_nd = __param_nd;
		this->_field_dp = __param_dp;
		this->_field_neg = __param_neg;
		this->_field_trunc = __param_trunc;
	}

	~_150025080_Decimal(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150025080_Decimal(void) { this->self = jule::Ref<_150025080_Decimal>::make(this, nullptr); }

	inline jule::Bool _method_set(jule::Str);


	inline std::tuple<jule::U64,jule::Bool> _method_float_bits(_147e3cfb0_FloatInfo&);


	inline void _method_assign(jule::U64);


	inline void _method_shift(jule::Int);


	inline void _method_round_down(jule::Int);


	inline void _method_round_up(jule::Int);


	inline void _method_round(jule::Int);


	inline jule::U64 _method_rounded_integer(void);


	inline bool operator==(const _150025080_Decimal &_Src) const {
		return 
			this->_field_d == _Src._field_d &&
			this->_field_nd == _Src._field_nd &&
			this->_field_dp == _Src._field_dp &&
			this->_field_neg == _Src._field_neg &&
			this->_field_trunc == _Src._field_trunc;
	}

	inline bool operator!=(const _150025080_Decimal &_Src) const { return !this->operator==(_Src); }
};


struct _157e34dc0_Log {
	jule::Ref<_157e34dc0_Log> self{};

	jule::Int _field_kind{0LLU};
	jule::Int _field_row{jule::Int()};
	jule::Int _field_column{jule::Int()};
	jule::Str _field_path{jule::Str()};
	jule::Str _field_text{jule::Str()};
	jule::Str _field_line{jule::Str()};
	jule::Str _field_suggest{jule::Str()};


	_157e34dc0_Log(jule::Int __param_kind, jule::Int __param_row, jule::Int __param_column, jule::Str __param_path, jule::Str __param_text, jule::Str __param_line, jule::Str __param_suggest) {
		this->self = jule::Ref<_157e34dc0_Log>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_row = __param_row;
		this->_field_column = __param_column;
		this->_field_path = __param_path;
		this->_field_text = __param_text;
		this->_field_line = __param_line;
		this->_field_suggest = __param_suggest;
	}

	~_157e34dc0_Log(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_157e34dc0_Log(void) { this->self = jule::Ref<_157e34dc0_Log>::make(this, nullptr); }

	inline bool operator==(const _157e34dc0_Log &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_row == _Src._field_row &&
			this->_field_column == _Src._field_column &&
			this->_field_path == _Src._field_path &&
			this->_field_text == _Src._field_text &&
			this->_field_line == _Src._field_line &&
			this->_field_suggest == _Src._field_suggest;
	}

	inline bool operator!=(const _157e34dc0_Log &_Src) const { return !this->operator==(_Src); }
};


struct _15053ceb0_DirEntry {
	jule::Ref<_15053ceb0_DirEntry> self{};

	jule::Str _field_name{jule::Str()};
	jule::Ref<_1505f1a60_Status> _field_stat{jule::Ref<_1505f1a60_Status>()};


	_15053ceb0_DirEntry(jule::Str __param_name, jule::Ref<_1505f1a60_Status> __param_stat) {
		this->self = jule::Ref<_15053ceb0_DirEntry>::make(this, nullptr);

		this->_field_name = __param_name;
		this->_field_stat = __param_stat;
	}

	~_15053ceb0_DirEntry(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_15053ceb0_DirEntry(void) { this->self = jule::Ref<_15053ceb0_DirEntry>::make(this, nullptr); }

	inline bool operator==(const _15053ceb0_DirEntry &_Src) const {
		return 
			this->_field_name == _Src._field_name &&
			this->_field_stat == _Src._field_stat;
	}

	inline bool operator!=(const _15053ceb0_DirEntry &_Src) const { return !this->operator==(_Src); }
};


struct _150562500_File {
	jule::Ref<_150562500_File> self{};

	jule::Int _field_handle{jule::Int()};


	_150562500_File(jule::Int __param_handle) {
		this->self = jule::Ref<_150562500_File>::make(this, nullptr);

		this->_field_handle = __param_handle;
	}

	~_150562500_File(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150562500_File(void) { this->self = jule::Ref<_150562500_File>::make(this, nullptr); }

	inline std::tuple<jule::I64,jule::Int> _method_seek(jule::I64,jule::Int);


	inline std::tuple<jule::Int,jule::Int> _method_read(jule::Slice<jule::U8>);


	inline std::tuple<jule::Int,jule::Int> _method_write(jule::Slice<jule::U8>);


	inline jule::Int _method_close(void);


	inline bool operator==(const _150562500_File &_Src) const {
		return 
			this->_field_handle == _Src._field_handle;
	}

	inline bool operator!=(const _150562500_File &_Src) const { return !this->operator==(_Src); }
};


struct _1505f1a60_Status {
	jule::Ref<_1505f1a60_Status> self{};

	jule::Uint _field_mode{jule::Uint()};
	jule::Uint _field_size{jule::Uint()};


	_1505f1a60_Status(jule::Uint __param_mode, jule::Uint __param_size) {
		this->self = jule::Ref<_1505f1a60_Status>::make(this, nullptr);

		this->_field_mode = __param_mode;
		this->_field_size = __param_size;
	}

	~_1505f1a60_Status(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1505f1a60_Status(void) { this->self = jule::Ref<_1505f1a60_Status>::make(this, nullptr); }

	inline jule::Bool _method_is_dir(void);


	inline jule::Bool _method_is_reg(void);


	inline bool operator==(const _1505f1a60_Status &_Src) const {
		return 
			this->_field_mode == _Src._field_mode &&
			this->_field_size == _Src._field_size;
	}

	inline bool operator!=(const _1505f1a60_Status &_Src) const { return !this->operator==(_Src); }
};


struct _15081f100_accept_range {
	jule::Ref<_15081f100_accept_range> self{};

	jule::U8 _field_lo{jule::U8()};
	jule::U8 _field_hi{jule::U8()};


	_15081f100_accept_range(jule::U8 __param_lo, jule::U8 __param_hi) {
		this->self = jule::Ref<_15081f100_accept_range>::make(this, nullptr);

		this->_field_lo = __param_lo;
		this->_field_hi = __param_hi;
	}

	~_15081f100_accept_range(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_15081f100_accept_range(void) { this->self = jule::Ref<_15081f100_accept_range>::make(this, nullptr); }

	inline bool operator==(const _15081f100_accept_range &_Src) const {
		return 
			this->_field_lo == _Src._field_lo &&
			this->_field_hi == _Src._field_hi;
	}

	inline bool operator!=(const _15081f100_accept_range &_Src) const { return !this->operator==(_Src); }
};


struct _150640f50_Token {
	jule::Ref<_150640f50_Token> self{};

	jule::Ref<_1506fba60_File> _field_file{jule::Ref<_1506fba60_File>()};
	jule::Int _field_row{jule::Int()};
	jule::Int _field_column{jule::Int()};
	jule::Str _field_kind{jule::Str()};
	jule::Uint _field_id{0LLU};


	_150640f50_Token(jule::Ref<_1506fba60_File> __param_file, jule::Int __param_row, jule::Int __param_column, jule::Str __param_kind, jule::Uint __param_id) {
		this->self = jule::Ref<_150640f50_Token>::make(this, nullptr);

		this->_field_file = __param_file;
		this->_field_row = __param_row;
		this->_field_column = __param_column;
		this->_field_kind = __param_kind;
		this->_field_id = __param_id;
	}

	~_150640f50_Token(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150640f50_Token(void) { this->self = jule::Ref<_150640f50_Token>::make(this, nullptr); }

	inline jule::Int _method_prec(void);


	inline bool operator==(const _150640f50_Token &_Src) const {
		return 
			this->_field_file == _Src._field_file &&
			this->_field_row == _Src._field_row &&
			this->_field_column == _Src._field_column &&
			this->_field_kind == _Src._field_kind &&
			this->_field_id == _Src._field_id;
	}

	inline bool operator!=(const _150640f50_Token &_Src) const { return !this->operator==(_Src); }
};


struct _150567d60_KindPair {
	jule::Ref<_150567d60_KindPair> self{};

	jule::Str _field_kind{jule::Str("::", 2)};
	jule::Uint _field_id{0LLU};


	_150567d60_KindPair(jule::Str __param_kind, jule::Uint __param_id) {
		this->self = jule::Ref<_150567d60_KindPair>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_id = __param_id;
	}

	~_150567d60_KindPair(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150567d60_KindPair(void) { this->self = jule::Ref<_150567d60_KindPair>::make(this, nullptr); }

	inline bool operator==(const _150567d60_KindPair &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_id == _Src._field_id;
	}

	inline bool operator!=(const _150567d60_KindPair &_Src) const { return !this->operator==(_Src); }
};


struct _1506406d0_CommentGroup {
	jule::Ref<_1506406d0_CommentGroup> self{};

	jule::Slice<jule::Ref<_1506406d0_Comment>> _field_comments{jule::Slice<jule::Ref<_1506406d0_Comment>>()};


	_1506406d0_CommentGroup(jule::Slice<jule::Ref<_1506406d0_Comment>> __param_comments) {
		this->self = jule::Ref<_1506406d0_CommentGroup>::make(this, nullptr);

		this->_field_comments = __param_comments;
	}

	~_1506406d0_CommentGroup(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1506406d0_CommentGroup(void) { this->self = jule::Ref<_1506406d0_CommentGroup>::make(this, nullptr); }

	inline bool operator==(const _1506406d0_CommentGroup &_Src) const {
		return 
			this->_field_comments == _Src._field_comments;
	}

	inline bool operator!=(const _1506406d0_CommentGroup &_Src) const { return !this->operator==(_Src); }
};


struct _1506406d0_NamespaceTypeDecl {
	jule::Ref<_1506406d0_NamespaceTypeDecl> self{};

	jule::Slice<_150640f50_Token> _field_idents{jule::Slice<_150640f50_Token>()};
	jule::Ref<_1506406d0_IdentTypeDecl> _field_kind{jule::Ref<_1506406d0_IdentTypeDecl>()};


	_1506406d0_NamespaceTypeDecl(jule::Slice<_150640f50_Token> __param_idents, jule::Ref<_1506406d0_IdentTypeDecl> __param_kind) {
		this->self = jule::Ref<_1506406d0_NamespaceTypeDecl>::make(this, nullptr);

		this->_field_idents = __param_idents;
		this->_field_kind = __param_kind;
	}

	~_1506406d0_NamespaceTypeDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1506406d0_NamespaceTypeDecl(void) { this->self = jule::Ref<_1506406d0_NamespaceTypeDecl>::make(this, nullptr); }

	inline bool operator==(const _1506406d0_NamespaceTypeDecl &_Src) const {
		return 
			this->_field_idents == _Src._field_idents &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1506406d0_NamespaceTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1506406d0_RefTypeDecl {
	jule::Ref<_1506406d0_RefTypeDecl> self{};

	jule::Ref<_1506406d0_TypeDecl> _field_elem{jule::Ref<_1506406d0_TypeDecl>()};


	_1506406d0_RefTypeDecl(jule::Ref<_1506406d0_TypeDecl> __param_elem) {
		this->self = jule::Ref<_1506406d0_RefTypeDecl>::make(this, nullptr);

		this->_field_elem = __param_elem;
	}

	~_1506406d0_RefTypeDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1506406d0_RefTypeDecl(void) { this->self = jule::Ref<_1506406d0_RefTypeDecl>::make(this, nullptr); }

	inline bool operator==(const _1506406d0_RefTypeDecl &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _1506406d0_RefTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1506406d0_SlcTypeDecl {
	jule::Ref<_1506406d0_SlcTypeDecl> self{};

	jule::Ref<_1506406d0_TypeDecl> _field_elem{jule::Ref<_1506406d0_TypeDecl>()};


	_1506406d0_SlcTypeDecl(jule::Ref<_1506406d0_TypeDecl> __param_elem) {
		this->self = jule::Ref<_1506406d0_SlcTypeDecl>::make(this, nullptr);

		this->_field_elem = __param_elem;
	}

	~_1506406d0_SlcTypeDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1506406d0_SlcTypeDecl(void) { this->self = jule::Ref<_1506406d0_SlcTypeDecl>::make(this, nullptr); }

	inline bool operator==(const _1506406d0_SlcTypeDecl &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _1506406d0_SlcTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1506406d0_TupleTypeDecl {
	jule::Ref<_1506406d0_TupleTypeDecl> self{};

	jule::Slice<jule::Ref<_1506406d0_TypeDecl>> _field_types{jule::Slice<jule::Ref<_1506406d0_TypeDecl>>()};


	_1506406d0_TupleTypeDecl(jule::Slice<jule::Ref<_1506406d0_TypeDecl>> __param_types) {
		this->self = jule::Ref<_1506406d0_TupleTypeDecl>::make(this, nullptr);

		this->_field_types = __param_types;
	}

	~_1506406d0_TupleTypeDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1506406d0_TupleTypeDecl(void) { this->self = jule::Ref<_1506406d0_TupleTypeDecl>::make(this, nullptr); }

	inline bool operator==(const _1506406d0_TupleTypeDecl &_Src) const {
		return 
			this->_field_types == _Src._field_types;
	}

	inline bool operator!=(const _1506406d0_TupleTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1506406d0_PtrTypeDecl {
	jule::Ref<_1506406d0_PtrTypeDecl> self{};

	jule::Ref<_1506406d0_TypeDecl> _field_elem{jule::Ref<_1506406d0_TypeDecl>()};


	_1506406d0_PtrTypeDecl(jule::Ref<_1506406d0_TypeDecl> __param_elem) {
		this->self = jule::Ref<_1506406d0_PtrTypeDecl>::make(this, nullptr);

		this->_field_elem = __param_elem;
	}

	~_1506406d0_PtrTypeDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1506406d0_PtrTypeDecl(void) { this->self = jule::Ref<_1506406d0_PtrTypeDecl>::make(this, nullptr); }

	inline jule::Bool _method_is_unsafe(void);


	inline bool operator==(const _1506406d0_PtrTypeDecl &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _1506406d0_PtrTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1506406d0_ArrTypeDecl {
	jule::Ref<_1506406d0_ArrTypeDecl> self{};

	jule::Ref<_1506406d0_TypeDecl> _field_elem{jule::Ref<_1506406d0_TypeDecl>()};
	jule::Ref<_1506406d0_Expr> _field_size{jule::Ref<_1506406d0_Expr>()};


	_1506406d0_ArrTypeDecl(jule::Ref<_1506406d0_TypeDecl> __param_elem, jule::Ref<_1506406d0_Expr> __param_size) {
		this->self = jule::Ref<_1506406d0_ArrTypeDecl>::make(this, nullptr);

		this->_field_elem = __param_elem;
		this->_field_size = __param_size;
	}

	~_1506406d0_ArrTypeDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1506406d0_ArrTypeDecl(void) { this->self = jule::Ref<_1506406d0_ArrTypeDecl>::make(this, nullptr); }

	inline jule::Bool _method_auto_sized(void);


	inline bool operator==(const _1506406d0_ArrTypeDecl &_Src) const {
		return 
			this->_field_elem == _Src._field_elem &&
			this->_field_size == _Src._field_size;
	}

	inline bool operator!=(const _1506406d0_ArrTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1506406d0_MapTypeDecl {
	jule::Ref<_1506406d0_MapTypeDecl> self{};

	jule::Ref<_1506406d0_TypeDecl> _field_key{jule::Ref<_1506406d0_TypeDecl>()};
	jule::Ref<_1506406d0_TypeDecl> _field_val{jule::Ref<_1506406d0_TypeDecl>()};


	_1506406d0_MapTypeDecl(jule::Ref<_1506406d0_TypeDecl> __param_key, jule::Ref<_1506406d0_TypeDecl> __param_val) {
		this->self = jule::Ref<_1506406d0_MapTypeDecl>::make(this, nullptr);

		this->_field_key = __param_key;
		this->_field_val = __param_val;
	}

	~_1506406d0_MapTypeDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1506406d0_MapTypeDecl(void) { this->self = jule::Ref<_1506406d0_MapTypeDecl>::make(this, nullptr); }

	inline bool operator==(const _1506406d0_MapTypeDecl &_Src) const {
		return 
			this->_field_key == _Src._field_key &&
			this->_field_val == _Src._field_val;
	}

	inline bool operator!=(const _1506406d0_MapTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1506406d0_RetTypeDecl {
	jule::Ref<_1506406d0_RetTypeDecl> self{};

	jule::Ref<_1506406d0_TypeDecl> _field_kind{jule::Ref<_1506406d0_TypeDecl>()};
	jule::Slice<_150640f50_Token> _field_idents{jule::Slice<_150640f50_Token>()};


	_1506406d0_RetTypeDecl(jule::Ref<_1506406d0_TypeDecl> __param_kind, jule::Slice<_150640f50_Token> __param_idents) {
		this->self = jule::Ref<_1506406d0_RetTypeDecl>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_idents = __param_idents;
	}

	~_1506406d0_RetTypeDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1506406d0_RetTypeDecl(void) { this->self = jule::Ref<_1506406d0_RetTypeDecl>::make(this, nullptr); }

	inline bool operator==(const _1506406d0_RetTypeDecl &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_idents == _Src._field_idents;
	}

	inline bool operator!=(const _1506406d0_RetTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1506406d0_TupleExpr {
	jule::Ref<_1506406d0_TupleExpr> self{};

	jule::Slice<jule::Ref<_1506406d0_Expr>> _field_expr{jule::Slice<jule::Ref<_1506406d0_Expr>>()};


	_1506406d0_TupleExpr(jule::Slice<jule::Ref<_1506406d0_Expr>> __param_expr) {
		this->self = jule::Ref<_1506406d0_TupleExpr>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_1506406d0_TupleExpr(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1506406d0_TupleExpr(void) { this->self = jule::Ref<_1506406d0_TupleExpr>::make(this, nullptr); }

	inline bool operator==(const _1506406d0_TupleExpr &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1506406d0_TupleExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1506406d0_LitExpr {
	jule::Ref<_1506406d0_LitExpr> self{};

	_150640f50_Token _field_token{_150640f50_Token()};
	jule::Str _field_value{jule::Str()};


	_1506406d0_LitExpr(_150640f50_Token __param_token, jule::Str __param_value) {
		this->self = jule::Ref<_1506406d0_LitExpr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_value = __param_value;
	}

	~_1506406d0_LitExpr(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1506406d0_LitExpr(void) { this->self = jule::Ref<_1506406d0_LitExpr>::make(this, nullptr); }

	inline jule::Bool _method_is_nil(void);


	inline bool operator==(const _1506406d0_LitExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_value == _Src._field_value;
	}

	inline bool operator!=(const _1506406d0_LitExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1506406d0_UnsafeExpr {
	jule::Ref<_1506406d0_UnsafeExpr> self{};

	_150640f50_Token _field_token{_150640f50_Token()};
	jule::Any _field_expr{jule::Any()};


	_1506406d0_UnsafeExpr(_150640f50_Token __param_token, jule::Any __param_expr) {
		this->self = jule::Ref<_1506406d0_UnsafeExpr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_expr = __param_expr;
	}

	~_1506406d0_UnsafeExpr(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1506406d0_UnsafeExpr(void) { this->self = jule::Ref<_1506406d0_UnsafeExpr>::make(this, nullptr); }

	inline bool operator==(const _1506406d0_UnsafeExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1506406d0_UnsafeExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1506406d0_IdentExpr {
	jule::Ref<_1506406d0_IdentExpr> self{};

	_150640f50_Token _field_token{_150640f50_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_cpp_linked{jule::Bool()};


	_1506406d0_IdentExpr(_150640f50_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked) {
		this->self = jule::Ref<_1506406d0_IdentExpr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_cpp_linked = __param_cpp_linked;
	}

	~_1506406d0_IdentExpr(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1506406d0_IdentExpr(void) { this->self = jule::Ref<_1506406d0_IdentExpr>::make(this, nullptr); }

	inline jule::Bool _method_is_self(void);


	inline bool operator==(const _1506406d0_IdentExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_cpp_linked == _Src._field_cpp_linked;
	}

	inline bool operator!=(const _1506406d0_IdentExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1506406d0_UnaryExpr {
	jule::Ref<_1506406d0_UnaryExpr> self{};

	_150640f50_Token _field_op{_150640f50_Token()};
	jule::Any _field_expr{jule::Any()};


	_1506406d0_UnaryExpr(_150640f50_Token __param_op, jule::Any __param_expr) {
		this->self = jule::Ref<_1506406d0_UnaryExpr>::make(this, nullptr);

		this->_field_op = __param_op;
		this->_field_expr = __param_expr;
	}

	~_1506406d0_UnaryExpr(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1506406d0_UnaryExpr(void) { this->self = jule::Ref<_1506406d0_UnaryExpr>::make(this, nullptr); }

	inline bool operator==(const _1506406d0_UnaryExpr &_Src) const {
		return 
			this->_field_op == _Src._field_op &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1506406d0_UnaryExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1506406d0_VariadicExpr {
	jule::Ref<_1506406d0_VariadicExpr> self{};

	_150640f50_Token _field_token{_150640f50_Token()};
	jule::Any _field_expr{jule::Any()};


	_1506406d0_VariadicExpr(_150640f50_Token __param_token, jule::Any __param_expr) {
		this->self = jule::Ref<_1506406d0_VariadicExpr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_expr = __param_expr;
	}

	~_1506406d0_VariadicExpr(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1506406d0_VariadicExpr(void) { this->self = jule::Ref<_1506406d0_VariadicExpr>::make(this, nullptr); }

	inline bool operator==(const _1506406d0_VariadicExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1506406d0_VariadicExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1506406d0_CastExpr {
	jule::Ref<_1506406d0_CastExpr> self{};

	jule::Ref<_1506406d0_TypeDecl> _field_kind{jule::Ref<_1506406d0_TypeDecl>()};
	jule::Any _field_expr{jule::Any()};


	_1506406d0_CastExpr(jule::Ref<_1506406d0_TypeDecl> __param_kind, jule::Any __param_expr) {
		this->self = jule::Ref<_1506406d0_CastExpr>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_expr = __param_expr;
	}

	~_1506406d0_CastExpr(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1506406d0_CastExpr(void) { this->self = jule::Ref<_1506406d0_CastExpr>::make(this, nullptr); }

	inline bool operator==(const _1506406d0_CastExpr &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1506406d0_CastExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1506406d0_NsSelectionExpr {
	jule::Ref<_1506406d0_NsSelectionExpr> self{};

	jule::Slice<_150640f50_Token> _field_ns{jule::Slice<_150640f50_Token>()};
	_150640f50_Token _field_ident{_150640f50_Token()};


	_1506406d0_NsSelectionExpr(jule::Slice<_150640f50_Token> __param_ns, _150640f50_Token __param_ident) {
		this->self = jule::Ref<_1506406d0_NsSelectionExpr>::make(this, nullptr);

		this->_field_ns = __param_ns;
		this->_field_ident = __param_ident;
	}

	~_1506406d0_NsSelectionExpr(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1506406d0_NsSelectionExpr(void) { this->self = jule::Ref<_1506406d0_NsSelectionExpr>::make(this, nullptr); }

	inline bool operator==(const _1506406d0_NsSelectionExpr &_Src) const {
		return 
			this->_field_ns == _Src._field_ns &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1506406d0_NsSelectionExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1506406d0_SubIdentExpr {
	jule::Ref<_1506406d0_SubIdentExpr> self{};

	jule::Bool _field_is_self{jule::Bool()};
	jule::Any _field_expr{jule::Any()};
	_150640f50_Token _field_ident{_150640f50_Token()};


	_1506406d0_SubIdentExpr(jule::Bool __param_is_self, jule::Any __param_expr, _150640f50_Token __param_ident) {
		this->self = jule::Ref<_1506406d0_SubIdentExpr>::make(this, nullptr);

		this->_field_is_self = __param_is_self;
		this->_field_expr = __param_expr;
		this->_field_ident = __param_ident;
	}

	~_1506406d0_SubIdentExpr(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1506406d0_SubIdentExpr(void) { this->self = jule::Ref<_1506406d0_SubIdentExpr>::make(this, nullptr); }

	inline bool operator==(const _1506406d0_SubIdentExpr &_Src) const {
		return 
			this->_field_is_self == _Src._field_is_self &&
			this->_field_expr == _Src._field_expr &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1506406d0_SubIdentExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1506406d0_BinopExpr {
	jule::Ref<_1506406d0_BinopExpr> self{};

	jule::Any _field_left{jule::Any()};
	jule::Any _field_right{jule::Any()};
	_150640f50_Token _field_op{_150640f50_Token()};


	_1506406d0_BinopExpr(jule::Any __param_left, jule::Any __param_right, _150640f50_Token __param_op) {
		this->self = jule::Ref<_1506406d0_BinopExpr>::make(this, nullptr);

		this->_field_left = __param_left;
		this->_field_right = __param_right;
		this->_field_op = __param_op;
	}

	~_1506406d0_BinopExpr(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1506406d0_BinopExpr(void) { this->self = jule::Ref<_1506406d0_BinopExpr>::make(this, nullptr); }

	inline bool operator==(const _1506406d0_BinopExpr &_Src) const {
		return 
			this->_field_left == _Src._field_left &&
			this->_field_right == _Src._field_right &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _1506406d0_BinopExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1506406d0_FieldExprPair {
	jule::Ref<_1506406d0_FieldExprPair> self{};

	_150640f50_Token _field_field{_150640f50_Token()};
	jule::Any _field_expr{jule::Any()};


	_1506406d0_FieldExprPair(_150640f50_Token __param_field, jule::Any __param_expr) {
		this->self = jule::Ref<_1506406d0_FieldExprPair>::make(this, nullptr);

		this->_field_field = __param_field;
		this->_field_expr = __param_expr;
	}

	~_1506406d0_FieldExprPair(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1506406d0_FieldExprPair(void) { this->self = jule::Ref<_1506406d0_FieldExprPair>::make(this, nullptr); }

	inline jule::Bool _method_is_targeted(void);


	inline bool operator==(const _1506406d0_FieldExprPair &_Src) const {
		return 
			this->_field_field == _Src._field_field &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1506406d0_FieldExprPair &_Src) const { return !this->operator==(_Src); }
};


struct _1506406d0_StructLit {
	jule::Ref<_1506406d0_StructLit> self{};

	jule::Ref<_1506406d0_TypeDecl> _field_kind{jule::Ref<_1506406d0_TypeDecl>()};
	jule::Slice<jule::Any> _field_exprs{jule::Slice<jule::Any>()};


	_1506406d0_StructLit(jule::Ref<_1506406d0_TypeDecl> __param_kind, jule::Slice<jule::Any> __param_exprs) {
		this->self = jule::Ref<_1506406d0_StructLit>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_exprs = __param_exprs;
	}

	~_1506406d0_StructLit(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1506406d0_StructLit(void) { this->self = jule::Ref<_1506406d0_StructLit>::make(this, nullptr); }

	inline bool operator==(const _1506406d0_StructLit &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_exprs == _Src._field_exprs;
	}

	inline bool operator!=(const _1506406d0_StructLit &_Src) const { return !this->operator==(_Src); }
};


struct _1506406d0_BraceLit {
	jule::Ref<_1506406d0_BraceLit> self{};

	_150640f50_Token _field_token{_150640f50_Token()};
	jule::Slice<jule::Any> _field_exprs{jule::Slice<jule::Any>()};


	_1506406d0_BraceLit(_150640f50_Token __param_token, jule::Slice<jule::Any> __param_exprs) {
		this->self = jule::Ref<_1506406d0_BraceLit>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_exprs = __param_exprs;
	}

	~_1506406d0_BraceLit(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1506406d0_BraceLit(void) { this->self = jule::Ref<_1506406d0_BraceLit>::make(this, nullptr); }

	inline jule::Bool _method_is_empty(void);


	inline bool operator==(const _1506406d0_BraceLit &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_exprs == _Src._field_exprs;
	}

	inline bool operator!=(const _1506406d0_BraceLit &_Src) const { return !this->operator==(_Src); }
};


struct _1506406d0_KeyValPair {
	jule::Ref<_1506406d0_KeyValPair> self{};

	jule::Any _field_key{jule::Any()};
	jule::Any _field_val{jule::Any()};
	_150640f50_Token _field_colon{_150640f50_Token()};


	_1506406d0_KeyValPair(jule::Any __param_key, jule::Any __param_val, _150640f50_Token __param_colon) {
		this->self = jule::Ref<_1506406d0_KeyValPair>::make(this, nullptr);

		this->_field_key = __param_key;
		this->_field_val = __param_val;
		this->_field_colon = __param_colon;
	}

	~_1506406d0_KeyValPair(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1506406d0_KeyValPair(void) { this->self = jule::Ref<_1506406d0_KeyValPair>::make(this, nullptr); }

	inline bool operator==(const _1506406d0_KeyValPair &_Src) const {
		return 
			this->_field_key == _Src._field_key &&
			this->_field_val == _Src._field_val &&
			this->_field_colon == _Src._field_colon;
	}

	inline bool operator!=(const _1506406d0_KeyValPair &_Src) const { return !this->operator==(_Src); }
};


struct _1506406d0_SliceExpr {
	jule::Ref<_1506406d0_SliceExpr> self{};

	_150640f50_Token _field_token{_150640f50_Token()};
	jule::Slice<jule::Any> _field_elems{jule::Slice<jule::Any>()};


	_1506406d0_SliceExpr(_150640f50_Token __param_token, jule::Slice<jule::Any> __param_elems) {
		this->self = jule::Ref<_1506406d0_SliceExpr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_elems = __param_elems;
	}

	~_1506406d0_SliceExpr(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1506406d0_SliceExpr(void) { this->self = jule::Ref<_1506406d0_SliceExpr>::make(this, nullptr); }

	inline jule::Bool _method_is_empty(void);


	inline bool operator==(const _1506406d0_SliceExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_elems == _Src._field_elems;
	}

	inline bool operator!=(const _1506406d0_SliceExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1506406d0_IndexingExpr {
	jule::Ref<_1506406d0_IndexingExpr> self{};

	_150640f50_Token _field_token{_150640f50_Token()};
	jule::Any _field_expr{jule::Any()};
	jule::Any _field_index{jule::Any()};


	_1506406d0_IndexingExpr(_150640f50_Token __param_token, jule::Any __param_expr, jule::Any __param_index) {
		this->self = jule::Ref<_1506406d0_IndexingExpr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_expr = __param_expr;
		this->_field_index = __param_index;
	}

	~_1506406d0_IndexingExpr(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1506406d0_IndexingExpr(void) { this->self = jule::Ref<_1506406d0_IndexingExpr>::make(this, nullptr); }

	inline bool operator==(const _1506406d0_IndexingExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_index == _Src._field_index;
	}

	inline bool operator!=(const _1506406d0_IndexingExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1506406d0_SlicingExpr {
	jule::Ref<_1506406d0_SlicingExpr> self{};

	_150640f50_Token _field_token{_150640f50_Token()};
	jule::Any _field_expr{jule::Any()};
	jule::Any _field_start{jule::Any()};
	jule::Any _field_to{jule::Any()};


	_1506406d0_SlicingExpr(_150640f50_Token __param_token, jule::Any __param_expr, jule::Any __param_start, jule::Any __param_to) {
		this->self = jule::Ref<_1506406d0_SlicingExpr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_expr = __param_expr;
		this->_field_start = __param_start;
		this->_field_to = __param_to;
	}

	~_1506406d0_SlicingExpr(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1506406d0_SlicingExpr(void) { this->self = jule::Ref<_1506406d0_SlicingExpr>::make(this, nullptr); }

	inline bool operator==(const _1506406d0_SlicingExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_start == _Src._field_start &&
			this->_field_to == _Src._field_to;
	}

	inline bool operator!=(const _1506406d0_SlicingExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1506406d0_LabelSt {
	jule::Ref<_1506406d0_LabelSt> self{};

	_150640f50_Token _field_token{_150640f50_Token()};
	jule::Str _field_ident{jule::Str()};


	_1506406d0_LabelSt(_150640f50_Token __param_token, jule::Str __param_ident) {
		this->self = jule::Ref<_1506406d0_LabelSt>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
	}

	~_1506406d0_LabelSt(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1506406d0_LabelSt(void) { this->self = jule::Ref<_1506406d0_LabelSt>::make(this, nullptr); }

	inline bool operator==(const _1506406d0_LabelSt &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1506406d0_LabelSt &_Src) const { return !this->operator==(_Src); }
};


struct _1506406d0_FallSt {
	jule::Ref<_1506406d0_FallSt> self{};

	_150640f50_Token _field_token{_150640f50_Token()};


	_1506406d0_FallSt(_150640f50_Token __param_token) {
		this->self = jule::Ref<_1506406d0_FallSt>::make(this, nullptr);

		this->_field_token = __param_token;
	}

	~_1506406d0_FallSt(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1506406d0_FallSt(void) { this->self = jule::Ref<_1506406d0_FallSt>::make(this, nullptr); }

	inline bool operator==(const _1506406d0_FallSt &_Src) const {
		return 
			this->_field_token == _Src._field_token;
	}

	inline bool operator!=(const _1506406d0_FallSt &_Src) const { return !this->operator==(_Src); }
};


struct _1506406d0_AssignSt {
	jule::Ref<_1506406d0_AssignSt> self{};

	jule::Bool _field_declarative{jule::Bool()};
	_150640f50_Token _field_setter{_150640f50_Token()};
	jule::Slice<jule::Ref<_1506406d0_AssignLeft>> _field_left{jule::Slice<jule::Ref<_1506406d0_AssignLeft>>()};
	jule::Ref<_1506406d0_Expr> _field_right{jule::Ref<_1506406d0_Expr>()};


	_1506406d0_AssignSt(jule::Bool __param_declarative, _150640f50_Token __param_setter, jule::Slice<jule::Ref<_1506406d0_AssignLeft>> __param_left, jule::Ref<_1506406d0_Expr> __param_right) {
		this->self = jule::Ref<_1506406d0_AssignSt>::make(this, nullptr);

		this->_field_declarative = __param_declarative;
		this->_field_setter = __param_setter;
		this->_field_left = __param_left;
		this->_field_right = __param_right;
	}

	~_1506406d0_AssignSt(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1506406d0_AssignSt(void) { this->self = jule::Ref<_1506406d0_AssignSt>::make(this, nullptr); }

	inline bool operator==(const _1506406d0_AssignSt &_Src) const {
		return 
			this->_field_declarative == _Src._field_declarative &&
			this->_field_setter == _Src._field_setter &&
			this->_field_left == _Src._field_left &&
			this->_field_right == _Src._field_right;
	}

	inline bool operator!=(const _1506406d0_AssignSt &_Src) const { return !this->operator==(_Src); }
};


struct _1506406d0_ScopeTree {
	jule::Ref<_1506406d0_ScopeTree> self{};

	jule::Ref<_1506406d0_ScopeTree> _field_parent{jule::Ref<_1506406d0_ScopeTree>()};
	jule::Bool _field_unsafety{jule::Bool()};
	jule::Bool _field_deferred{jule::Bool()};
	jule::Slice<jule::Any> _field_stmts{jule::Slice<jule::Any>()};


	_1506406d0_ScopeTree(jule::Ref<_1506406d0_ScopeTree> __param_parent, jule::Bool __param_unsafety, jule::Bool __param_deferred, jule::Slice<jule::Any> __param_stmts) {
		this->self = jule::Ref<_1506406d0_ScopeTree>::make(this, nullptr);

		this->_field_parent = __param_parent;
		this->_field_unsafety = __param_unsafety;
		this->_field_deferred = __param_deferred;
		this->_field_stmts = __param_stmts;
	}

	~_1506406d0_ScopeTree(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1506406d0_ScopeTree(void) { this->self = jule::Ref<_1506406d0_ScopeTree>::make(this, nullptr); }

	inline bool operator==(const _1506406d0_ScopeTree &_Src) const {
		return 
			this->_field_parent == _Src._field_parent &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_deferred == _Src._field_deferred &&
			this->_field_stmts == _Src._field_stmts;
	}

	inline bool operator!=(const _1506406d0_ScopeTree &_Src) const { return !this->operator==(_Src); }
};


struct _1506406d0_RetSt {
	jule::Ref<_1506406d0_RetSt> self{};

	_150640f50_Token _field_token{_150640f50_Token()};
	jule::Ref<_1506406d0_Expr> _field_expr{jule::Ref<_1506406d0_Expr>()};


	_1506406d0_RetSt(_150640f50_Token __param_token, jule::Ref<_1506406d0_Expr> __param_expr) {
		this->self = jule::Ref<_1506406d0_RetSt>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_expr = __param_expr;
	}

	~_1506406d0_RetSt(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1506406d0_RetSt(void) { this->self = jule::Ref<_1506406d0_RetSt>::make(this, nullptr); }

	inline bool operator==(const _1506406d0_RetSt &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1506406d0_RetSt &_Src) const { return !this->operator==(_Src); }
};


struct _1506406d0_Iter {
	jule::Ref<_1506406d0_Iter> self{};

	_150640f50_Token _field_token{_150640f50_Token()};
	jule::Any _field_kind{jule::Any()};
	jule::Ref<_1506406d0_ScopeTree> _field_scope{jule::Ref<_1506406d0_ScopeTree>()};


	_1506406d0_Iter(_150640f50_Token __param_token, jule::Any __param_kind, jule::Ref<_1506406d0_ScopeTree> __param_scope) {
		this->self = jule::Ref<_1506406d0_Iter>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_kind = __param_kind;
		this->_field_scope = __param_scope;
	}

	~_1506406d0_Iter(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1506406d0_Iter(void) { this->self = jule::Ref<_1506406d0_Iter>::make(this, nullptr); }

	inline jule::Bool _method_is_inf(void);


	inline bool operator==(const _1506406d0_Iter &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_kind == _Src._field_kind &&
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _1506406d0_Iter &_Src) const { return !this->operator==(_Src); }
};


struct _1506406d0_WhileKind {
	jule::Ref<_1506406d0_WhileKind> self{};

	jule::Ref<_1506406d0_Expr> _field_expr{jule::Ref<_1506406d0_Expr>()};
	jule::Any _field_next{jule::Any()};
	_150640f50_Token _field_next_token{_150640f50_Token()};


	_1506406d0_WhileKind(jule::Ref<_1506406d0_Expr> __param_expr, jule::Any __param_next, _150640f50_Token __param_next_token) {
		this->self = jule::Ref<_1506406d0_WhileKind>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_next = __param_next;
		this->_field_next_token = __param_next_token;
	}

	~_1506406d0_WhileKind(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1506406d0_WhileKind(void) { this->self = jule::Ref<_1506406d0_WhileKind>::make(this, nullptr); }

	inline jule::Bool _method_is_while_next(void);


	inline bool operator==(const _1506406d0_WhileKind &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_next == _Src._field_next &&
			this->_field_next_token == _Src._field_next_token;
	}

	inline bool operator!=(const _1506406d0_WhileKind &_Src) const { return !this->operator==(_Src); }
};


struct _1506406d0_RangeKind {
	jule::Ref<_1506406d0_RangeKind> self{};

	_150640f50_Token _field_in_token{_150640f50_Token()};
	jule::Ref<_1506406d0_Expr> _field_expr{jule::Ref<_1506406d0_Expr>()};
	jule::Ref<_1506406d0_VarDecl> _field_key_a{jule::Ref<_1506406d0_VarDecl>()};
	jule::Ref<_1506406d0_VarDecl> _field_key_b{jule::Ref<_1506406d0_VarDecl>()};


	_1506406d0_RangeKind(_150640f50_Token __param_in_token, jule::Ref<_1506406d0_Expr> __param_expr, jule::Ref<_1506406d0_VarDecl> __param_key_a, jule::Ref<_1506406d0_VarDecl> __param_key_b) {
		this->self = jule::Ref<_1506406d0_RangeKind>::make(this, nullptr);

		this->_field_in_token = __param_in_token;
		this->_field_expr = __param_expr;
		this->_field_key_a = __param_key_a;
		this->_field_key_b = __param_key_b;
	}

	~_1506406d0_RangeKind(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1506406d0_RangeKind(void) { this->self = jule::Ref<_1506406d0_RangeKind>::make(this, nullptr); }

	inline bool operator==(const _1506406d0_RangeKind &_Src) const {
		return 
			this->_field_in_token == _Src._field_in_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_key_a == _Src._field_key_a &&
			this->_field_key_b == _Src._field_key_b;
	}

	inline bool operator!=(const _1506406d0_RangeKind &_Src) const { return !this->operator==(_Src); }
};


struct _1506406d0_Conditional {
	jule::Ref<_1506406d0_Conditional> self{};

	jule::Ref<_1506406d0_If> _field_head{jule::Ref<_1506406d0_If>()};
	jule::Slice<jule::Ref<_1506406d0_If>> _field_tail{jule::Slice<jule::Ref<_1506406d0_If>>()};
	jule::Ref<_1506406d0_Else> _field_default{jule::Ref<_1506406d0_Else>()};


	_1506406d0_Conditional(jule::Ref<_1506406d0_If> __param_head, jule::Slice<jule::Ref<_1506406d0_If>> __param_tail, jule::Ref<_1506406d0_Else> __param_default) {
		this->self = jule::Ref<_1506406d0_Conditional>::make(this, nullptr);

		this->_field_head = __param_head;
		this->_field_tail = __param_tail;
		this->_field_default = __param_default;
	}

	~_1506406d0_Conditional(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1506406d0_Conditional(void) { this->self = jule::Ref<_1506406d0_Conditional>::make(this, nullptr); }

	inline bool operator==(const _1506406d0_Conditional &_Src) const {
		return 
			this->_field_head == _Src._field_head &&
			this->_field_tail == _Src._field_tail &&
			this->_field_default == _Src._field_default;
	}

	inline bool operator!=(const _1506406d0_Conditional &_Src) const { return !this->operator==(_Src); }
};


struct _1506406d0_MatchCase {
	jule::Ref<_1506406d0_MatchCase> self{};

	_150640f50_Token _field_token{_150640f50_Token()};
	jule::Bool _field_type_match{jule::Bool()};
	jule::Ref<_1506406d0_Expr> _field_expr{jule::Ref<_1506406d0_Expr>()};
	jule::Slice<jule::Ref<_1506406d0_Case>> _field_cases{jule::Slice<jule::Ref<_1506406d0_Case>>()};
	jule::Ref<_1506406d0_Else> _field_default{jule::Ref<_1506406d0_Else>()};


	_1506406d0_MatchCase(_150640f50_Token __param_token, jule::Bool __param_type_match, jule::Ref<_1506406d0_Expr> __param_expr, jule::Slice<jule::Ref<_1506406d0_Case>> __param_cases, jule::Ref<_1506406d0_Else> __param_default) {
		this->self = jule::Ref<_1506406d0_MatchCase>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_type_match = __param_type_match;
		this->_field_expr = __param_expr;
		this->_field_cases = __param_cases;
		this->_field_default = __param_default;
	}

	~_1506406d0_MatchCase(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1506406d0_MatchCase(void) { this->self = jule::Ref<_1506406d0_MatchCase>::make(this, nullptr); }

	inline bool operator==(const _1506406d0_MatchCase &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_type_match == _Src._field_type_match &&
			this->_field_expr == _Src._field_expr &&
			this->_field_cases == _Src._field_cases &&
			this->_field_default == _Src._field_default;
	}

	inline bool operator!=(const _1506406d0_MatchCase &_Src) const { return !this->operator==(_Src); }
};


struct _1507e43e0_FileInfo {
	jule::Ref<_1507e43e0_FileInfo> self{};

	jule::Ref<_15053e120_Ast> _field_ast{jule::Ref<_15053e120_Ast>()};
	jule::Slice<_157e34dc0_Log> _field_errors{jule::Slice<_157e34dc0_Log>()};


	_1507e43e0_FileInfo(jule::Ref<_15053e120_Ast> __param_ast, jule::Slice<_157e34dc0_Log> __param_errors) {
		this->self = jule::Ref<_1507e43e0_FileInfo>::make(this, nullptr);

		this->_field_ast = __param_ast;
		this->_field_errors = __param_errors;
	}

	~_1507e43e0_FileInfo(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1507e43e0_FileInfo(void) { this->self = jule::Ref<_1507e43e0_FileInfo>::make(this, nullptr); }

	inline bool operator==(const _1507e43e0_FileInfo &_Src) const {
		return 
			this->_field_ast == _Src._field_ast &&
			this->_field_errors == _Src._field_errors;
	}

	inline bool operator!=(const _1507e43e0_FileInfo &_Src) const { return !this->operator==(_Src); }
};


struct _1507e43e0_PackageInfo {
	jule::Ref<_1507e43e0_PackageInfo> self{};

	jule::Slice<jule::Ref<_1507e43e0_FileInfo>> _field_files{jule::Slice<jule::Ref<_1507e43e0_FileInfo>>()};


	_1507e43e0_PackageInfo(jule::Slice<jule::Ref<_1507e43e0_FileInfo>> __param_files) {
		this->self = jule::Ref<_1507e43e0_PackageInfo>::make(this, nullptr);

		this->_field_files = __param_files;
	}

	~_1507e43e0_PackageInfo(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1507e43e0_PackageInfo(void) { this->self = jule::Ref<_1507e43e0_PackageInfo>::make(this, nullptr); }

	inline bool operator==(const _1507e43e0_PackageInfo &_Src) const {
		return 
			this->_field_files == _Src._field_files;
	}

	inline bool operator!=(const _1507e43e0_PackageInfo &_Src) const { return !this->operator==(_Src); }
};


struct _1507e2370_Stmt {
	jule::Ref<_1507e2370_Stmt> self{};

	jule::Slice<_150640f50_Token> _field_tokens{jule::Slice<_150640f50_Token>()};
	jule::Bool _field_terminated{jule::Bool()};


	_1507e2370_Stmt(jule::Slice<_150640f50_Token> __param_tokens, jule::Bool __param_terminated) {
		this->self = jule::Ref<_1507e2370_Stmt>::make(this, nullptr);

		this->_field_tokens = __param_tokens;
		this->_field_terminated = __param_terminated;
	}

	~_1507e2370_Stmt(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1507e2370_Stmt(void) { this->self = jule::Ref<_1507e2370_Stmt>::make(this, nullptr); }

	inline bool operator==(const _1507e2370_Stmt &_Src) const {
		return 
			this->_field_tokens == _Src._field_tokens &&
			this->_field_terminated == _Src._field_terminated;
	}

	inline bool operator!=(const _1507e2370_Stmt &_Src) const { return !this->operator==(_Src); }
};


struct _1507e2370_ScopeParser {
	jule::Ref<_1507e2370_ScopeParser> self{};

	jule::Ref<_150831fa0_Parser> _field_p{jule::Ref<_150831fa0_Parser>()};
	jule::Ref<_1506406d0_ScopeTree> _field_s{jule::Ref<_1506406d0_ScopeTree>()};
	jule::Slice<jule::Ref<_1507e2370_Stmt>> _field_stms{jule::Slice<jule::Ref<_1507e2370_Stmt>>()};
	jule::Int _field_pos{jule::Int()};


	_1507e2370_ScopeParser(jule::Ref<_150831fa0_Parser> __param_p, jule::Ref<_1506406d0_ScopeTree> __param_s, jule::Slice<jule::Ref<_1507e2370_Stmt>> __param_stms, jule::Int __param_pos) {
		this->self = jule::Ref<_1507e2370_ScopeParser>::make(this, nullptr);

		this->_field_p = __param_p;
		this->_field_s = __param_s;
		this->_field_stms = __param_stms;
		this->_field_pos = __param_pos;
	}

	~_1507e2370_ScopeParser(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1507e2370_ScopeParser(void) { this->self = jule::Ref<_1507e2370_ScopeParser>::make(this, nullptr); }

	inline void _method_stop(void);


	inline jule::Bool _method_stopped(void);


	inline jule::Bool _method_finished(void);


	inline jule::Bool _method_is_last_st(void);


	inline void _method_push_err(_150640f50_Token,jule::Str);


	inline void _method_push_suggest(jule::Str,jule::Slice<jule::Any>);


	inline void _method_insert_as_next(jule::Slice<_150640f50_Token>);


	inline jule::Ref<_1507e2370_Stmt> _method_next(void);


	inline jule::Ref<_1506406d0_ScopeTree> _method_build_scope(jule::Slice<_150640f50_Token>);


	inline jule::Any _method_build_var_st(jule::Slice<_150640f50_Token>);


	inline jule::Any _method_build_ret_st(jule::Slice<_150640f50_Token>);


	inline jule::Any _method_build_while_next_iter(jule::Ref<_1507e2370_Stmt>);


	inline jule::Ref<_1506406d0_WhileKind> _method_build_while_iter_kind(jule::Slice<_150640f50_Token>);


	inline jule::Slice<jule::Slice<_150640f50_Token>> _method_get_range_kind_keys_tokens(jule::Slice<_150640f50_Token>);


	inline jule::Ref<_1506406d0_VarDecl> _method_build_range_kind_key(jule::Slice<_150640f50_Token>);


	inline jule::Slice<jule::Ref<_1506406d0_VarDecl>> _method_build_range_kind_keys(jule::Slice<jule::Slice<_150640f50_Token>>);


	inline void _method_setup_range_kind_keys_plain(jule::Ref<_1506406d0_RangeKind>,jule::Slice<_150640f50_Token>);


	inline void _method_setup_range_kind_keys_explicit(jule::Ref<_1506406d0_RangeKind>,jule::Slice<_150640f50_Token>);


	inline void _method_setup_range_kind_keys(jule::Ref<_1506406d0_RangeKind>,jule::Slice<_150640f50_Token>);


	inline jule::Ref<_1506406d0_RangeKind> _method_build_range_iter_kind(jule::Slice<_150640f50_Token>,jule::Slice<_150640f50_Token>,_150640f50_Token);


	inline jule::Any _method_build_common_iter_kind(jule::Slice<_150640f50_Token>,_150640f50_Token);


	inline jule::Any _method_build_common_iter(jule::Slice<_150640f50_Token>);


	inline jule::Any _method_buid_iter_st(jule::Ref<_1507e2370_Stmt>);


	inline jule::Any _method_build_break_st(jule::Slice<_150640f50_Token>);


	inline jule::Any _method_build_cont_st(jule::Slice<_150640f50_Token>);


	inline jule::Ref<_1506406d0_If> _method_build_if(jule::Slice<_150640f50_Token>&);


	inline jule::Ref<_1506406d0_Else> _method_build_else(jule::Slice<_150640f50_Token>);


	inline jule::Any _method_build_if_else_chain(jule::Slice<_150640f50_Token>);


	inline jule::Any _method_build_comment_st(_150640f50_Token);


	inline jule::Any _method_build_call_st(jule::Slice<_150640f50_Token>);


	inline jule::Any _method_build_co_call_st(jule::Slice<_150640f50_Token>);


	inline jule::Any _method_build_goto_st(jule::Slice<_150640f50_Token>);


	inline jule::Any _method_build_fall_st(jule::Slice<_150640f50_Token>);


	inline jule::Any _method_build_type_alias_st(jule::Slice<_150640f50_Token>);


	inline void _method_push_case_expr(jule::Slice<_150640f50_Token>,_150640f50_Token,jule::Bool,jule::Slice<jule::Ref<_1506406d0_Expr>>&);


	inline jule::Slice<jule::Ref<_1506406d0_Expr>> _method_build_case_exprs(jule::Slice<_150640f50_Token>&,jule::Bool);


	inline jule::Ref<_1506406d0_ScopeTree> _method_build_case_scope(jule::Slice<_150640f50_Token>&);


	inline std::tuple<jule::Ref<_1506406d0_Case>,jule::Bool> _method_build_case(jule::Slice<_150640f50_Token>&,jule::Bool);


	inline std::tuple<jule::Slice<jule::Ref<_1506406d0_Case>>,jule::Ref<_1506406d0_Else>> _method_build_cases(jule::Slice<_150640f50_Token>,jule::Bool);


	inline jule::Ref<_1506406d0_MatchCase> _method_build_match_case(jule::Slice<_150640f50_Token>);


	inline jule::Ref<_1506406d0_ScopeTree> _method_build_scope_st(jule::Slice<_150640f50_Token>);


	inline jule::Ref<_1506406d0_LabelSt> _method_build_label_st(jule::Slice<_150640f50_Token>);


	inline std::tuple<jule::Any,jule::Bool> _method_build_id_st(jule::Slice<_150640f50_Token>);


	inline jule::Ref<_1507eb940_AssignInfo> _method_build_assign_info(jule::Slice<_150640f50_Token>);


	inline jule::Ref<_1506406d0_AssignLeft> _method_build_assign_l(jule::Slice<_150640f50_Token>);


	inline jule::Slice<jule::Ref<_1506406d0_AssignLeft>> _method_build_assign_ls(jule::Slice<jule::Slice<_150640f50_Token>>);


	inline std::tuple<jule::Ref<_1506406d0_AssignSt>,jule::Bool> _method_build_plain_assign(jule::Slice<_150640f50_Token>);


	inline std::tuple<jule::Ref<_1506406d0_AssignSt>,jule::Bool> _method_build_decl_assign(jule::Slice<_150640f50_Token>);


	inline std::tuple<jule::Ref<_1506406d0_AssignSt>,jule::Bool> _method_build_assign_st(jule::Slice<_150640f50_Token>);


	inline jule::Any _method_build_st(jule::Ref<_1507e2370_Stmt>);


	inline void _method_build(jule::Slice<_150640f50_Token>,jule::Ref<_1506406d0_ScopeTree>);


	inline bool operator==(const _1507e2370_ScopeParser &_Src) const {
		return 
			this->_field_p == _Src._field_p &&
			this->_field_s == _Src._field_s &&
			this->_field_stms == _Src._field_stms &&
			this->_field_pos == _Src._field_pos;
	}

	inline bool operator!=(const _1507e2370_ScopeParser &_Src) const { return !this->operator==(_Src); }
};


struct _1507ea360_CallData {
	jule::Ref<_1507ea360_CallData> self{};

	jule::Slice<_150640f50_Token> _field_expr_tokens{jule::Slice<_150640f50_Token>()};
	jule::Slice<_150640f50_Token> _field_args_tokens{jule::Slice<_150640f50_Token>()};
	jule::Slice<_150640f50_Token> _field_generics_tokens{jule::Slice<_150640f50_Token>()};


	_1507ea360_CallData(jule::Slice<_150640f50_Token> __param_expr_tokens, jule::Slice<_150640f50_Token> __param_args_tokens, jule::Slice<_150640f50_Token> __param_generics_tokens) {
		this->self = jule::Ref<_1507ea360_CallData>::make(this, nullptr);

		this->_field_expr_tokens = __param_expr_tokens;
		this->_field_args_tokens = __param_args_tokens;
		this->_field_generics_tokens = __param_generics_tokens;
	}

	~_1507ea360_CallData(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1507ea360_CallData(void) { this->self = jule::Ref<_1507ea360_CallData>::make(this, nullptr); }

	inline bool operator==(const _1507ea360_CallData &_Src) const {
		return 
			this->_field_expr_tokens == _Src._field_expr_tokens &&
			this->_field_args_tokens == _Src._field_args_tokens &&
			this->_field_generics_tokens == _Src._field_generics_tokens;
	}

	inline bool operator!=(const _1507ea360_CallData &_Src) const { return !this->operator==(_Src); }
};


struct _1507ea360_Precedencer {
	jule::Ref<_1507ea360_Precedencer> self{};

	jule::Slice<jule::Slice<jule::Any>> _field_pairs{jule::Slice<jule::Slice<jule::Any>>()};


	_1507ea360_Precedencer(jule::Slice<jule::Slice<jule::Any>> __param_pairs) {
		this->self = jule::Ref<_1507ea360_Precedencer>::make(this, nullptr);

		this->_field_pairs = __param_pairs;
	}

	~_1507ea360_Precedencer(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1507ea360_Precedencer(void) { this->self = jule::Ref<_1507ea360_Precedencer>::make(this, nullptr); }

	inline void _method_set(jule::Int,jule::Any);


	inline jule::Any _method_get_lower(void);


	inline bool operator==(const _1507ea360_Precedencer &_Src) const {
		return 
			this->_field_pairs == _Src._field_pairs;
	}

	inline bool operator!=(const _1507ea360_Precedencer &_Src) const { return !this->operator==(_Src); }
};


struct _1507ea360_ExprBuilder {
	jule::Ref<_1507ea360_ExprBuilder> self{};

	jule::Ref<_150831fa0_Parser> _field_p{jule::Ref<_150831fa0_Parser>()};


	_1507ea360_ExprBuilder(jule::Ref<_150831fa0_Parser> __param_p) {
		this->self = jule::Ref<_1507ea360_ExprBuilder>::make(this, nullptr);

		this->_field_p = __param_p;
	}

	~_1507ea360_ExprBuilder(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1507ea360_ExprBuilder(void) { this->self = jule::Ref<_1507ea360_ExprBuilder>::make(this, nullptr); }

	inline void _method_push_err(_150640f50_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_suggest(jule::Str,jule::Slice<jule::Any>);


	inline jule::Ref<_1506406d0_TupleExpr> _method_build_tuple(jule::Slice<jule::Slice<_150640f50_Token>>);


	inline jule::Ref<_1506406d0_LitExpr> _method_build_lit(_150640f50_Token);


	inline jule::Ref<_1506406d0_TypeDecl> _method_build_primitive_type(_150640f50_Token);


	inline jule::Any _method_build_single(_150640f50_Token);


	inline jule::Ref<_1506406d0_IdentExpr> _method_build_cpp_linked_ident(jule::Slice<_150640f50_Token>);


	inline jule::Ref<_1506406d0_UnaryExpr> _method_build_unary(jule::Slice<_150640f50_Token>);


	inline jule::Ref<_1506406d0_SubIdentExpr> _method_build_obj_sub_ident(jule::Slice<_150640f50_Token>);


	inline jule::Ref<_1506406d0_NsSelectionExpr> _method_build_ns_sub_ident(jule::Slice<_150640f50_Token>);


	inline jule::Ref<_1506406d0_TypeDecl> _method_build_type(jule::Slice<_150640f50_Token>);


	inline jule::Any _method_build_sub_ident(jule::Slice<_150640f50_Token>);


	inline jule::Ref<_1506406d0_VariadicExpr> _method_build_variadic(jule::Slice<_150640f50_Token>);


	inline jule::Any _method_build_op_right(jule::Slice<_150640f50_Token>);


	inline jule::Any _method_build_between_parentheses(jule::Slice<_150640f50_Token>);


	inline jule::Ref<_1506406d0_CastExpr> _method_try_build_cast(jule::Slice<_150640f50_Token>);


	inline void _method_push_arg(jule::Slice<jule::Ref<_1506406d0_Expr>>&,jule::Slice<_150640f50_Token>,_150640f50_Token);


	inline jule::Slice<jule::Ref<_1506406d0_Expr>> _method_build_args(jule::Slice<_150640f50_Token>);


	inline jule::Slice<jule::Ref<_1506406d0_TypeDecl>> _method_build_call_generics(jule::Slice<_150640f50_Token>);


	inline jule::Ref<_1506406d0_FnCallExpr> _method_build_fn_call(_150640f50_Token,jule::Ref<_1507ea360_CallData>);


	inline jule::Any _method_build_parentheses_range(jule::Slice<_150640f50_Token>);


	inline jule::Ref<_1506406d0_UnsafeExpr> _method_build_unsafe_expr(jule::Slice<_150640f50_Token>);


	inline jule::Ref<_1506406d0_FnDecl> _method_build_anon_fn(jule::Slice<_150640f50_Token>);


	inline jule::Any _method_build_unsafe(jule::Slice<_150640f50_Token>);


	inline void _method_push_range_lit_part(jule::Slice<_150640f50_Token>,_150640f50_Token,jule::Slice<jule::Slice<_150640f50_Token>>&);


	inline jule::Slice<jule::Slice<_150640f50_Token>> _method_get_brace_range_lit_expr_parts(jule::Slice<_150640f50_Token>);


	inline jule::Ref<_1506406d0_FieldExprPair> _method_build_field_expr_pair(jule::Slice<_150640f50_Token>);


	inline jule::Any _method_build_struct_lit_expr(jule::Slice<_150640f50_Token>);


	inline jule::Slice<jule::Any> _method_build_struct_lit_exprs(jule::Slice<_150640f50_Token>);


	inline jule::Ref<_1506406d0_StructLit> _method_build_typed_struct_literal(jule::Slice<_150640f50_Token>);


	inline jule::Any _method_build_brace_lit_part(jule::Slice<_150640f50_Token>);


	inline jule::Ref<_1506406d0_BraceLit> _method_build_brace_lit(jule::Slice<_150640f50_Token>);


	inline jule::Any _method_build_brace_range(jule::Slice<_150640f50_Token>);


	inline jule::Slice<jule::Slice<_150640f50_Token>> _method_get_enumerable_parts(jule::Slice<_150640f50_Token>);


	inline jule::Ref<_1506406d0_SliceExpr> _method_build_slice(jule::Slice<_150640f50_Token>);


	inline jule::Ref<_1506406d0_IndexingExpr> _method_build_indexing(jule::Slice<_150640f50_Token>,jule::Slice<_150640f50_Token>,_150640f50_Token);


	inline jule::Ref<_1506406d0_SlicingExpr> _method_build_slicing(jule::Slice<_150640f50_Token>,jule::Slice<_150640f50_Token>,jule::Int,_150640f50_Token);


	inline jule::Any _method_build_bracket_range(jule::Slice<_150640f50_Token>);


	inline jule::Any _method_build_data(jule::Slice<_150640f50_Token>);


	inline jule::Ref<_1506406d0_BinopExpr> _method_build_binop(jule::Slice<_150640f50_Token>,jule::Int);


	inline jule::Any _method_build(jule::Slice<_150640f50_Token>);


	inline jule::Any _method_build_kind(jule::Slice<_150640f50_Token>);


	inline jule::Ref<_1506406d0_Expr> _method_build_from_tokens(jule::Slice<_150640f50_Token>);


	inline bool operator==(const _1507ea360_ExprBuilder &_Src) const {
		return 
			this->_field_p == _Src._field_p;
	}

	inline bool operator!=(const _1507ea360_ExprBuilder &_Src) const { return !this->operator==(_Src); }
};


struct _150831fa0_Parser {
	jule::Ref<_150831fa0_Parser> self{};

	jule::Ref<_15053e120_Ast> _field_ast{jule::Ref<_15053e120_Ast>()};
	jule::Slice<jule::Ref<_1506406d0_Directive>> _field_directives{jule::Slice<jule::Ref<_1506406d0_Directive>>()};
	jule::Ref<_1506406d0_CommentGroup> _field_comment_group{jule::Ref<_1506406d0_CommentGroup>()};
	jule::Slice<_157e34dc0_Log> _field_errors{jule::Slice<_157e34dc0_Log>()};


	_150831fa0_Parser(jule::Ref<_15053e120_Ast> __param_ast, jule::Slice<jule::Ref<_1506406d0_Directive>> __param_directives, jule::Ref<_1506406d0_CommentGroup> __param_comment_group, jule::Slice<_157e34dc0_Log> __param_errors) {
		this->self = jule::Ref<_150831fa0_Parser>::make(this, nullptr);

		this->_field_ast = __param_ast;
		this->_field_directives = __param_directives;
		this->_field_comment_group = __param_comment_group;
		this->_field_errors = __param_errors;
	}

	~_150831fa0_Parser(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150831fa0_Parser(void) { this->self = jule::Ref<_150831fa0_Parser>::make(this, nullptr); }

	inline void _method_stop(void);


	inline jule::Bool _method_stopped(void);


	inline void _method_push_err(_150640f50_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_suggest(jule::Str,jule::Slice<jule::Any>);


	inline jule::Ref<_1506406d0_Expr> _method_build_expr(jule::Slice<_150640f50_Token>);


	inline jule::Ref<_1506406d0_Directive> _method_get_directive(jule::Ref<_1506406d0_Comment>);


	inline void _method_push_directive(jule::Ref<_1506406d0_Comment>);


	inline void _method_process_comment(jule::Ref<_1506406d0_Comment>);


	inline jule::Ref<_1506406d0_ScopeTree> _method_build_scope(jule::Slice<_150640f50_Token>);


	inline std::tuple<jule::Ref<_1506406d0_TypeDecl>,jule::Bool> _method___build_type(jule::Slice<_150640f50_Token>,jule::Int*,jule::Bool);


	inline std::tuple<jule::Ref<_1506406d0_TypeDecl>,jule::Bool> _method_build_type(jule::Slice<_150640f50_Token>,jule::Int*,jule::Bool);


	inline jule::Ref<_1506406d0_TypeAliasDecl> _method_build_type_alias_decl(jule::Slice<_150640f50_Token>);


	inline void _method_build_var_type_and_expr(jule::Ref<_1506406d0_VarDecl>,jule::Slice<_150640f50_Token>);


	inline void _method_build_var_common(jule::Ref<_1506406d0_VarDecl>,jule::Slice<_150640f50_Token>);


	inline void _method_build_var_begin(jule::Ref<_1506406d0_VarDecl>,jule::Ref<jule::Int>,jule::Slice<_150640f50_Token>);


	inline jule::Ref<_1506406d0_VarDecl> _method_build_var(jule::Slice<_150640f50_Token>);


	inline jule::Ref<_1506406d0_GenericDecl> _method_build_generic(jule::Slice<_150640f50_Token>);


	inline jule::Slice<jule::Ref<_1506406d0_GenericDecl>> _method_build_generics(jule::Slice<_150640f50_Token>,_150640f50_Token);


	inline jule::Ref<_1506406d0_ParamDecl> _method_build_self_param(jule::Slice<_150640f50_Token>);


	inline void _method_param_type_begin(jule::Ref<_1506406d0_ParamDecl>,jule::Int&,jule::Slice<_150640f50_Token>);


	inline void _method_build_param_type(jule::Ref<_1506406d0_ParamDecl>,jule::Slice<_150640f50_Token>,jule::Bool);


	inline void _method_param_body_id(jule::Ref<_1506406d0_ParamDecl>,_150640f50_Token);


	inline void _method_build_param_body(jule::Ref<_1506406d0_ParamDecl>,jule::Ref<jule::Int>,jule::Slice<_150640f50_Token>,jule::Bool);


	inline jule::Ref<_1506406d0_ParamDecl> _method_build_param(jule::Slice<_150640f50_Token>,jule::Bool);


	inline void _method_check_params(jule::Slice<jule::Ref<_1506406d0_ParamDecl>>);


	inline jule::Slice<jule::Ref<_1506406d0_ParamDecl>> _method_build_params(jule::Slice<_150640f50_Token>,jule::Bool,jule::Bool);


	inline std::tuple<jule::Ref<_1506406d0_RetTypeDecl>,jule::Bool> _method_build_multi_ret_type(jule::Slice<_150640f50_Token>,jule::Int&);


	inline std::tuple<jule::Ref<_1506406d0_RetTypeDecl>,jule::Bool> _method_build_ret_type(jule::Slice<_150640f50_Token>,jule::Int&);


	inline jule::Ref<_1506406d0_FnDecl> _method_build_fn_prototype(jule::Slice<_150640f50_Token>,jule::Int&,jule::Bool);


	inline jule::Ref<_1506406d0_FnDecl> _method_build_fn(jule::Slice<_150640f50_Token>,jule::Bool,jule::Bool);


	inline jule::Slice<_150640f50_Token> _method_get_use_decl_selectors(jule::Slice<_150640f50_Token>);


	inline void _method_build_cpp_use_decl(jule::Ref<_1506406d0_UseDecl>,jule::Slice<_150640f50_Token>);


	inline void _method_build_std_use_decl(jule::Ref<_1506406d0_UseDecl>,jule::Slice<_150640f50_Token>);


	inline void _method_build_ident_use_decl(jule::Ref<_1506406d0_UseDecl>,jule::Slice<_150640f50_Token>);


	inline void _method_parse_use_decl(jule::Ref<_1506406d0_UseDecl>,jule::Slice<_150640f50_Token>);


	inline jule::Ref<_1506406d0_UseDecl> _method_build_use_decl(jule::Slice<_150640f50_Token>,jule::Bool);


	inline jule::Ref<_1506406d0_Expr> _method_build_enum_item_expr(jule::Ref<jule::Int>,jule::Slice<_150640f50_Token>);


	inline jule::Slice<jule::Ref<_1506406d0_EnumItemDecl>> _method_build_enum_items(jule::Slice<_150640f50_Token>);


	inline jule::Ref<_1506406d0_EnumDecl> _method_build_enum_decl(jule::Slice<_150640f50_Token>);


	inline jule::Ref<_1506406d0_FieldDecl> _method_build_field(jule::Slice<_150640f50_Token>);


	inline jule::Slice<jule::Ref<_1506406d0_FieldDecl>> _method_build_struct_decl_fields(jule::Slice<_150640f50_Token>);


	inline jule::Ref<_1506406d0_StructDecl> _method_build_struct_decl(jule::Slice<_150640f50_Token>);


	inline void _method_check_method_receiver(jule::Ref<_1506406d0_FnDecl>);


	inline jule::Slice<jule::Ref<_1506406d0_FnDecl>> _method_build_trait_methods(jule::Slice<_150640f50_Token>);


	inline jule::Ref<_1506406d0_TraitDecl> _method_build_trait_decl(jule::Slice<_150640f50_Token>);


	inline jule::Ref<_1506406d0_FnDecl> _method_build_cpp_link_fn(jule::Slice<_150640f50_Token>);


	inline jule::Ref<_1506406d0_VarDecl> _method_build_cpp_link_var(jule::Slice<_150640f50_Token>);


	inline jule::Ref<_1506406d0_StructDecl> _method_build_cpp_link_struct(jule::Slice<_150640f50_Token>);


	inline jule::Ref<_1506406d0_TypeAliasDecl> _method_build_cpp_link_type_alias(jule::Slice<_150640f50_Token>);


	inline jule::Ref<_1506406d0_UseDecl> _method_build_cpp_link_use(jule::Slice<_150640f50_Token>);


	inline jule::Any _method_build_cpp_link(jule::Slice<_150640f50_Token>);


	inline jule::Ref<_1506406d0_FnDecl> _method_get_method(jule::Slice<_150640f50_Token>);


	inline void _method_parse_impl_trait(jule::Ref<_1506406d0_Impl>,jule::Slice<_150640f50_Token>);


	inline void _method_parse_impl_struct(jule::Ref<_1506406d0_Impl>,jule::Slice<_150640f50_Token>);


	inline void _method_parse_impl_body(jule::Ref<_1506406d0_Impl>,jule::Slice<_150640f50_Token>);


	inline jule::Ref<_1506406d0_Impl> _method_build_impl(jule::Slice<_150640f50_Token>);


	inline jule::Any _method_build_node_data(jule::Slice<_150640f50_Token>);


	inline void _method_check_comment_group(_1506406d0_Node);


	inline void _method_check_directive(_1506406d0_Node);


	inline void _method_apply_meta(_1506406d0_Node,jule::Bool);


	inline void _method_check_use_decl(_1506406d0_Node);


	inline std::tuple<jule::Bool,jule::Any> _method_build_general_scope_node_data(jule::Slice<_150640f50_Token>);


	inline _1506406d0_Node _method_parse_node(jule::Slice<_150640f50_Token>);


	inline void _method_append_node(jule::Slice<_150640f50_Token>);


	inline void _method_remove_range(jule::Int,jule::Str,jule::Slice<_150640f50_Token>&,jule::Slice<jule::Int>&);


	inline void _method_push_wrong_order_close_err(_150640f50_Token,jule::Slice<_150640f50_Token>&,jule::Slice<jule::Int>&);


	inline void _method_push_range_close(_150640f50_Token,jule::Str,jule::Slice<_150640f50_Token>&,jule::Slice<jule::Int>&);


	inline void _method_check_ranges(jule::Slice<_150640f50_Token>);


	inline void _method_parse(jule::Ref<_1506fba60_File>);


	inline bool operator==(const _150831fa0_Parser &_Src) const {
		return 
			this->_field_ast == _Src._field_ast &&
			this->_field_directives == _Src._field_directives &&
			this->_field_comment_group == _Src._field_comment_group &&
			this->_field_errors == _Src._field_errors;
	}

	inline bool operator!=(const _150831fa0_Parser &_Src) const { return !this->operator==(_Src); }
};


struct _150aed7c0_TypeBuilder {
	jule::Ref<_150aed7c0_TypeBuilder> self{};

	jule::Ref<_150831fa0_Parser> _field_p{jule::Ref<_150831fa0_Parser>()};
	jule::Slice<_150640f50_Token> _field_tokens{jule::Slice<_150640f50_Token>()};
	jule::Int* _field_i{nullptr};
	jule::Bool _field_err{jule::Bool()};


	_150aed7c0_TypeBuilder(jule::Ref<_150831fa0_Parser> __param_p, jule::Slice<_150640f50_Token> __param_tokens, jule::Int* __param_i, jule::Bool __param_err) {
		this->self = jule::Ref<_150aed7c0_TypeBuilder>::make(this, nullptr);

		this->_field_p = __param_p;
		this->_field_tokens = __param_tokens;
		this->_field_i = __param_i;
		this->_field_err = __param_err;
	}

	~_150aed7c0_TypeBuilder(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150aed7c0_TypeBuilder(void) { this->self = jule::Ref<_150aed7c0_TypeBuilder>::make(this, nullptr); }

	inline void _method_push_err(_150640f50_Token,jule::Str);


	inline void _method_push_suggest(jule::Str,jule::Slice<jule::Any>);


	inline jule::Ref<_1506406d0_TypeDecl> _method_build_prim(void);


	inline jule::Ref<_1506406d0_TypeDecl> _method_build_namespace(void);


	inline jule::Slice<jule::Ref<_1506406d0_TypeDecl>> _method_build_generics(void);


	inline jule::Slice<jule::Slice<_150640f50_Token>> _method_ident_generics(void);


	inline jule::Ref<_1506406d0_TypeDecl> _method_build_ident(void);


	inline jule::Ref<_1506406d0_TypeDecl> _method_build_cpp_link(void);


	inline jule::Ref<_1506406d0_TypeDecl> _method_build_fn(void);


	inline jule::Ref<_1506406d0_TypeDecl> _method_build_ptr(void);


	inline jule::Ref<_1506406d0_TypeDecl> _method_build_ref(void);


	inline jule::Ref<_1506406d0_TypeDecl> _method_build_op(void);


	inline jule::Ref<_1506406d0_TypeDecl> _method_build_slc(void);


	inline jule::Ref<_1506406d0_TypeDecl> _method_build_arr(void);


	inline jule::Ref<_1506406d0_TypeDecl> _method_build_map(jule::Int,jule::Slice<_150640f50_Token>);


	inline jule::Ref<_1506406d0_TypeDecl> _method_build_enumerable(void);


	inline jule::Ref<_1506406d0_TypeDecl> _method_step(void);


	inline std::tuple<jule::Ref<_1506406d0_TypeDecl>,jule::Bool> _method_build(void);


	inline bool operator==(const _150aed7c0_TypeBuilder &_Src) const {
		return 
			this->_field_p == _Src._field_p &&
			this->_field_tokens == _Src._field_tokens &&
			this->_field_i == _Src._field_i &&
			this->_field_err == _Src._field_err;
	}

	inline bool operator!=(const _150aed7c0_TypeBuilder &_Src) const { return !this->operator==(_Src); }
};


struct _15199b440_Const {
	jule::Ref<_15199b440_Const> self{};

	jule::Any _field_data{jule::Any()};


	_15199b440_Const(jule::Any __param_data) {
		this->self = jule::Ref<_15199b440_Const>::make(this, nullptr);

		this->_field_data = __param_data;
	}

	~_15199b440_Const(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_15199b440_Const(void) { this->self = jule::Ref<_15199b440_Const>::make(this, nullptr); }

	static inline jule::Ref<_15199b440_Const> _static_method_new_i64(jule::I64);


	static inline jule::Ref<_15199b440_Const> _static_method_new_u64(jule::U64);


	static inline jule::Ref<_15199b440_Const> _static_method_new_bool(jule::Bool);


	static inline jule::Ref<_15199b440_Const> _static_method_new_str(jule::Str);


	static inline jule::Ref<_15199b440_Const> _static_method_new_f64(jule::F64);


	static inline jule::Ref<_15199b440_Const> _static_method_new_nil(void);


	inline jule::I64 _method_read_i64(void);


	inline jule::U64 _method_read_u64(void);


	inline jule::Bool _method_read_bool(void);


	inline jule::Str _method_read_str(void);


	inline jule::F64 _method_read_f64(void);


	inline jule::I64 _method_as_i64(void);


	inline jule::U64 _method_as_u64(void);


	inline jule::F64 _method_as_f64(void);


	inline void _method_set_i64(jule::I64);


	inline void _method_set_u64(jule::U64);


	inline void _method_set_bool(jule::Bool);


	inline void _method_set_str(jule::Str);


	inline void _method_set_f64(jule::F64);


	inline void _method_set_nil(void);


	inline void _method_set_by_type(jule::F64,_15199b440_Const);


	inline jule::Bool _method_is_i64(void);


	inline jule::Bool _method_is_u64(void);


	inline jule::Bool _method_is_bool(void);


	inline jule::Bool _method_is_str(void);


	inline jule::Bool _method_is_f64(void);


	inline jule::Bool _method_is_nil(void);


	inline jule::Bool _method_are_same_types(_15199b440_Const);


	inline jule::Bool _method_and(_15199b440_Const);


	inline jule::Bool _method_or(_15199b440_Const);


	inline jule::Bool _method_eqs(_15199b440_Const);


	inline jule::Bool _method_lt(_15199b440_Const);


	inline jule::Bool _method_gt(_15199b440_Const);


	inline jule::Bool _method_add(_15199b440_Const);


	inline jule::Bool _method_sub(_15199b440_Const);


	inline jule::Bool _method_mul(_15199b440_Const);


	inline jule::Bool _method_div(_15199b440_Const);


	inline jule::Bool _method_mod(_15199b440_Const);


	inline jule::Bool _method_bitwise_and(_15199b440_Const);


	inline jule::Bool _method_bitwise_or(_15199b440_Const);


	inline jule::Bool _method_xor(_15199b440_Const);


	inline jule::Bool _method_lshift(_15199b440_Const);


	inline jule::Bool _method_rshift(_15199b440_Const);


	inline bool operator==(const _15199b440_Const &_Src) const {
		return 
			this->_field_data == _Src._field_data;
	}

	inline bool operator!=(const _15199b440_Const &_Src) const { return !this->operator==(_Src); }
};


struct _150a13110_FieldIns {
	jule::Ref<_150a13110_FieldIns> self{};

	jule::Ref<_150a13110_Field> _field_decl{jule::Ref<_150a13110_Field>()};
	jule::Ref<_15177b070_TypeKind> _field_kind{jule::Ref<_15177b070_TypeKind>()};


	_150a13110_FieldIns(jule::Ref<_150a13110_Field> __param_decl, jule::Ref<_15177b070_TypeKind> __param_kind) {
		this->self = jule::Ref<_150a13110_FieldIns>::make(this, nullptr);

		this->_field_decl = __param_decl;
		this->_field_kind = __param_kind;
	}

	~_150a13110_FieldIns(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150a13110_FieldIns(void) { this->self = jule::Ref<_150a13110_FieldIns>::make(this, nullptr); }

	inline bool operator==(const _150a13110_FieldIns &_Src) const {
		return 
			this->_field_decl == _Src._field_decl &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _150a13110_FieldIns &_Src) const { return !this->operator==(_Src); }
};


struct _150a13110_StructIns: public _15177b070_Kind {
	jule::Ref<_150a13110_StructIns> self{};

	jule::Bool _field_checked{jule::Bool()};
	jule::Ref<_150a13110_Struct> _field_decl{jule::Ref<_150a13110_Struct>()};
	jule::Slice<jule::Ref<_15177b070_TypeKind>> _field_generics{jule::Slice<jule::Ref<_15177b070_TypeKind>>()};
	jule::Slice<jule::Ref<_150a13110_FieldIns>> _field_fields{jule::Slice<jule::Ref<_150a13110_FieldIns>>()};
	jule::Slice<jule::Ref<_15081bcd0_Fn>> _field_methods{jule::Slice<jule::Ref<_15081bcd0_Fn>>()};
	jule::Bool _field_has_mut{jule::Bool()};
	jule::Ref<_150e75a70_ReferenceStack> _field_references{jule::Ref<_150e75a70_ReferenceStack>()};


	_150a13110_StructIns(jule::Bool __param_checked, jule::Ref<_150a13110_Struct> __param_decl, jule::Slice<jule::Ref<_15177b070_TypeKind>> __param_generics, jule::Slice<jule::Ref<_150a13110_FieldIns>> __param_fields, jule::Slice<jule::Ref<_15081bcd0_Fn>> __param_methods, jule::Bool __param_has_mut, jule::Ref<_150e75a70_ReferenceStack> __param_references) {
		this->self = jule::Ref<_150a13110_StructIns>::make(this, nullptr);

		this->_field_checked = __param_checked;
		this->_field_decl = __param_decl;
		this->_field_generics = __param_generics;
		this->_field_fields = __param_fields;
		this->_field_methods = __param_methods;
		this->_field_has_mut = __param_has_mut;
		this->_field_references = __param_references;
	}

	~_150a13110_StructIns(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150a13110_StructIns(void) { this->self = jule::Ref<_150a13110_StructIns>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_15177b070_TypeKind>);


	inline jule::Ref<_15081bcd0_Fn> _method_find_method(jule::Str,jule::Bool);


	inline jule::Ref<_150a13110_FieldIns> _method_find_field(jule::Str);


	inline bool operator==(const _150a13110_StructIns &_Src) const {
		return 
			this->_field_checked == _Src._field_checked &&
			this->_field_decl == _Src._field_decl &&
			this->_field_generics == _Src._field_generics &&
			this->_field_fields == _Src._field_fields &&
			this->_field_methods == _Src._field_methods &&
			this->_field_has_mut == _Src._field_has_mut &&
			this->_field_references == _Src._field_references;
	}

	inline bool operator!=(const _150a13110_StructIns &_Src) const { return !this->operator==(_Src); }
};


struct _15081bcd0_RetType {
	jule::Ref<_15081bcd0_RetType> self{};

	jule::Ref<_15177b070_TypeSymbol> _field_kind{jule::Ref<_15177b070_TypeSymbol>()};
	jule::Slice<_150640f50_Token> _field_idents{jule::Slice<_150640f50_Token>()};


	_15081bcd0_RetType(jule::Ref<_15177b070_TypeSymbol> __param_kind, jule::Slice<_150640f50_Token> __param_idents) {
		this->self = jule::Ref<_15081bcd0_RetType>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_idents = __param_idents;
	}

	~_15081bcd0_RetType(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_15081bcd0_RetType(void) { this->self = jule::Ref<_15081bcd0_RetType>::make(this, nullptr); }

	inline bool operator==(const _15081bcd0_RetType &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_idents == _Src._field_idents;
	}

	inline bool operator!=(const _15081bcd0_RetType &_Src) const { return !this->operator==(_Src); }
};


struct _15081bcd0_ParamIns {
	jule::Ref<_15081bcd0_ParamIns> self{};

	jule::Ref<_15081bcd0_Param> _field_decl{jule::Ref<_15081bcd0_Param>()};
	jule::Ref<_15177b070_TypeKind> _field_kind{jule::Ref<_15177b070_TypeKind>()};


	_15081bcd0_ParamIns(jule::Ref<_15081bcd0_Param> __param_decl, jule::Ref<_15177b070_TypeKind> __param_kind) {
		this->self = jule::Ref<_15081bcd0_ParamIns>::make(this, nullptr);

		this->_field_decl = __param_decl;
		this->_field_kind = __param_kind;
	}

	~_15081bcd0_ParamIns(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_15081bcd0_ParamIns(void) { this->self = jule::Ref<_15081bcd0_ParamIns>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline bool operator==(const _15081bcd0_ParamIns &_Src) const {
		return 
			this->_field_decl == _Src._field_decl &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _15081bcd0_ParamIns &_Src) const { return !this->operator==(_Src); }
};


struct _15081bcd0_FnIns: public _15177b070_Kind {
	jule::Ref<_15081bcd0_FnIns> self{};

	jule::Ref<_150a13110_StructIns> _field_owner{jule::Ref<_150a13110_StructIns>()};
	jule::Ref<_15081bcd0_Fn> _field_decl{jule::Ref<_15081bcd0_Fn>()};
	jule::Slice<jule::Ref<_15177b070_TypeKind>> _field_generics{jule::Slice<jule::Ref<_15177b070_TypeKind>>()};
	jule::Slice<jule::Ref<_15081bcd0_ParamIns>> _field_params{jule::Slice<jule::Ref<_15081bcd0_ParamIns>>()};
	jule::Ref<_15177b070_TypeKind> _field_result{jule::Ref<_15177b070_TypeKind>()};
	jule::Ref<_150d29660_Scope> _field_scope{jule::Ref<_150d29660_Scope>()};
	jule::Ref<_150e75a70_ReferenceStack> _field_references{jule::Ref<_150e75a70_ReferenceStack>()};
	jule::Ref<_150e75a70_ReferenceStack> _field_refers{jule::Ref<_150e75a70_ReferenceStack>()};
	jule::Fn<jule::Ref<_151290fd0_Data>(jule::Ref<_151290fd0_Eval>,jule::Ref<_1506406d0_FnCallExpr>,jule::Ref<_151290fd0_Data>)> _field_caller{jule::Fn<jule::Ref<_151290fd0_Data>(jule::Ref<_151290fd0_Eval>,jule::Ref<_1506406d0_FnCallExpr>,jule::Ref<_151290fd0_Data>)>()};
	jule::Bool _field_reloaded{jule::Bool()};
	jule::Bool _field_anon{jule::Bool()};


	_15081bcd0_FnIns(jule::Ref<_150a13110_StructIns> __param_owner, jule::Ref<_15081bcd0_Fn> __param_decl, jule::Slice<jule::Ref<_15177b070_TypeKind>> __param_generics, jule::Slice<jule::Ref<_15081bcd0_ParamIns>> __param_params, jule::Ref<_15177b070_TypeKind> __param_result, jule::Ref<_150d29660_Scope> __param_scope, jule::Ref<_150e75a70_ReferenceStack> __param_references, jule::Ref<_150e75a70_ReferenceStack> __param_refers, jule::Fn<jule::Ref<_151290fd0_Data>(jule::Ref<_151290fd0_Eval>,jule::Ref<_1506406d0_FnCallExpr>,jule::Ref<_151290fd0_Data>)> __param_caller, jule::Bool __param_reloaded, jule::Bool __param_anon) {
		this->self = jule::Ref<_15081bcd0_FnIns>::make(this, nullptr);

		this->_field_owner = __param_owner;
		this->_field_decl = __param_decl;
		this->_field_generics = __param_generics;
		this->_field_params = __param_params;
		this->_field_result = __param_result;
		this->_field_scope = __param_scope;
		this->_field_references = __param_references;
		this->_field_refers = __param_refers;
		this->_field_caller = __param_caller;
		this->_field_reloaded = __param_reloaded;
		this->_field_anon = __param_anon;
	}

	~_15081bcd0_FnIns(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_15081bcd0_FnIns(void) { this->self = jule::Ref<_15081bcd0_FnIns>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_15177b070_TypeKind>);


	inline jule::Bool _method_is_builtin(void);


	inline jule::Bool _method_is_anon(void);


	inline jule::Str _method_get_kind_str(jule::Bool);


	inline bool operator==(const _15081bcd0_FnIns &_Src) const {
		return 
			this->_field_owner == _Src._field_owner &&
			this->_field_decl == _Src._field_decl &&
			this->_field_generics == _Src._field_generics &&
			this->_field_params == _Src._field_params &&
			this->_field_result == _Src._field_result &&
			this->_field_scope == _Src._field_scope &&
			this->_field_references == _Src._field_references &&
			this->_field_refers == _Src._field_refers &&
			this->_field_caller == _Src._field_caller &&
			this->_field_reloaded == _Src._field_reloaded &&
			this->_field_anon == _Src._field_anon;
	}

	inline bool operator!=(const _15081bcd0_FnIns &_Src) const { return !this->operator==(_Src); }
};


struct _150e75a70_SymbolBuilder {
	jule::Ref<_150e75a70_SymbolBuilder> self{};

	jule::Ref<_150e75a70_SymbolBuilder> _field_owner{jule::Ref<_150e75a70_SymbolBuilder>()};
	jule::Trait<_150f26340_Importer> _field_importer{jule::Trait<_150f26340_Importer>()};
	jule::Slice<_157e34dc0_Log> _field_errors{jule::Slice<_157e34dc0_Log>()};
	jule::Ref<_15053e120_Ast> _field_ast{jule::Ref<_15053e120_Ast>()};
	jule::Ref<_15128c4d0_SymbolTable> _field_table{jule::Ref<_15128c4d0_SymbolTable>()};


	_150e75a70_SymbolBuilder(jule::Ref<_150e75a70_SymbolBuilder> __param_owner, jule::Trait<_150f26340_Importer> __param_importer, jule::Slice<_157e34dc0_Log> __param_errors, jule::Ref<_15053e120_Ast> __param_ast, jule::Ref<_15128c4d0_SymbolTable> __param_table) {
		this->self = jule::Ref<_150e75a70_SymbolBuilder>::make(this, nullptr);

		this->_field_owner = __param_owner;
		this->_field_importer = __param_importer;
		this->_field_errors = __param_errors;
		this->_field_ast = __param_ast;
		this->_field_table = __param_table;
	}

	~_150e75a70_SymbolBuilder(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150e75a70_SymbolBuilder(void) { this->self = jule::Ref<_150e75a70_SymbolBuilder>::make(this, nullptr); }

	inline jule::Ref<_150e75a70_SymbolBuilder> _method_get_root(void);


	inline void _method_push_err(_150640f50_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_err_text(_150640f50_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_suggest(jule::Str,jule::Slice<jule::Any>);


	inline jule::Bool _method_check_cpp_use_decl_path(jule::Ref<_1506406d0_UseDecl>);


	inline jule::Ref<_150f26340_ImportInfo> _method_build_cpp_header_import(jule::Ref<_1506406d0_UseDecl>);


	inline jule::Ref<_150f26340_ImportInfo> _method_build_std_import(jule::Ref<_1506406d0_UseDecl>);


	inline jule::Ref<_150f26340_ImportInfo> _method_build_ident_import(jule::Ref<_1506406d0_UseDecl>);


	inline jule::Ref<_150f26340_ImportInfo> _method_build_import(jule::Ref<_1506406d0_UseDecl>);


	inline jule::Bool _method_check_duplicate_use_decl(jule::Ref<_150f26340_ImportInfo>);


	inline void _method_impl_import_selections(jule::Ref<_150f26340_ImportInfo>,jule::Ref<_1506406d0_UseDecl>);


	inline jule::Str _method_get_as_link_path(jule::Str);


	inline void _method_push_cycle_error(jule::Ref<_150e75a70_SymbolBuilder>,jule::Str,jule::Str&);


	inline void _method_push_cross_cycle_error(jule::Ref<_150e75a70_SymbolBuilder>,jule::Ref<_150f26340_ImportInfo>,_150640f50_Token);


	inline jule::Bool _method_check_import_cycles(jule::Ref<_150f26340_ImportInfo>,jule::Ref<_1506406d0_UseDecl>);


	inline jule::Bool _method_import_package(jule::Ref<_150f26340_ImportInfo>,jule::Ref<_1506406d0_UseDecl>);


	inline jule::Ref<_150f26340_ImportInfo> _method_import_use_decl(jule::Ref<_1506406d0_UseDecl>);


	inline void _method_import_use_decls(void);


	inline void _method_append_decl(_1506406d0_Node);


	inline void _method_append_decls(void);


	inline void _method_append_impls(void);


	inline void _method_push_directive_pass(jule::Ref<_1506406d0_Directive>);


	inline void _method_append_top_directives(void);


	inline void _method_build(void);


	inline bool operator==(const _150e75a70_SymbolBuilder &_Src) const {
		return 
			this->_field_owner == _Src._field_owner &&
			this->_field_importer == _Src._field_importer &&
			this->_field_errors == _Src._field_errors &&
			this->_field_ast == _Src._field_ast &&
			this->_field_table == _Src._field_table;
	}

	inline bool operator!=(const _150e75a70_SymbolBuilder &_Src) const { return !this->operator==(_Src); }
};


struct _150d29660_If {
	jule::Ref<_150d29660_If> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Ref<_150d29660_Scope> _field_scope{jule::Ref<_150d29660_Scope>()};


	_150d29660_If(jule::Any __param_expr, jule::Ref<_150d29660_Scope> __param_scope) {
		this->self = jule::Ref<_150d29660_If>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_scope = __param_scope;
	}

	~_150d29660_If(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150d29660_If(void) { this->self = jule::Ref<_150d29660_If>::make(this, nullptr); }

	inline bool operator==(const _150d29660_If &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _150d29660_If &_Src) const { return !this->operator==(_Src); }
};


struct _150d29660_Else {
	jule::Ref<_150d29660_Else> self{};

	jule::Ref<_150d29660_Scope> _field_scope{jule::Ref<_150d29660_Scope>()};


	_150d29660_Else(jule::Ref<_150d29660_Scope> __param_scope) {
		this->self = jule::Ref<_150d29660_Else>::make(this, nullptr);

		this->_field_scope = __param_scope;
	}

	~_150d29660_Else(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150d29660_Else(void) { this->self = jule::Ref<_150d29660_Else>::make(this, nullptr); }

	inline bool operator==(const _150d29660_Else &_Src) const {
		return 
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _150d29660_Else &_Src) const { return !this->operator==(_Src); }
};


struct _150d29660_Conditional {
	jule::Ref<_150d29660_Conditional> self{};

	jule::Slice<jule::Ref<_150d29660_If>> _field_elifs{jule::Slice<jule::Ref<_150d29660_If>>()};
	jule::Ref<_150d29660_Else> _field_default{jule::Ref<_150d29660_Else>()};


	_150d29660_Conditional(jule::Slice<jule::Ref<_150d29660_If>> __param_elifs, jule::Ref<_150d29660_Else> __param_default) {
		this->self = jule::Ref<_150d29660_Conditional>::make(this, nullptr);

		this->_field_elifs = __param_elifs;
		this->_field_default = __param_default;
	}

	~_150d29660_Conditional(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150d29660_Conditional(void) { this->self = jule::Ref<_150d29660_Conditional>::make(this, nullptr); }

	inline bool operator==(const _150d29660_Conditional &_Src) const {
		return 
			this->_field_elifs == _Src._field_elifs &&
			this->_field_default == _Src._field_default;
	}

	inline bool operator!=(const _150d29660_Conditional &_Src) const { return !this->operator==(_Src); }
};


struct _150d29660_InfIter {
	jule::Ref<_150d29660_InfIter> self{};

	jule::Ref<_150d29660_Scope> _field_scope{jule::Ref<_150d29660_Scope>()};


	_150d29660_InfIter(jule::Ref<_150d29660_Scope> __param_scope) {
		this->self = jule::Ref<_150d29660_InfIter>::make(this, nullptr);

		this->_field_scope = __param_scope;
	}

	~_150d29660_InfIter(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150d29660_InfIter(void) { this->self = jule::Ref<_150d29660_InfIter>::make(this, nullptr); }

	inline bool operator==(const _150d29660_InfIter &_Src) const {
		return 
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _150d29660_InfIter &_Src) const { return !this->operator==(_Src); }
};


struct _150d29660_WhileIter {
	jule::Ref<_150d29660_WhileIter> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Any _field_next{jule::Any()};
	jule::Ref<_150d29660_Scope> _field_scope{jule::Ref<_150d29660_Scope>()};


	_150d29660_WhileIter(jule::Any __param_expr, jule::Any __param_next, jule::Ref<_150d29660_Scope> __param_scope) {
		this->self = jule::Ref<_150d29660_WhileIter>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_next = __param_next;
		this->_field_scope = __param_scope;
	}

	~_150d29660_WhileIter(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150d29660_WhileIter(void) { this->self = jule::Ref<_150d29660_WhileIter>::make(this, nullptr); }

	inline jule::Bool _method_is_while_next(void);


	inline bool operator==(const _150d29660_WhileIter &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_next == _Src._field_next &&
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _150d29660_WhileIter &_Src) const { return !this->operator==(_Src); }
};


struct _150d29660_RangeIter {
	jule::Ref<_150d29660_RangeIter> self{};

	jule::Ref<_151290fd0_Data> _field_expr{jule::Ref<_151290fd0_Data>()};
	jule::Ref<_150d29660_Scope> _field_scope{jule::Ref<_150d29660_Scope>()};
	jule::Ref<_1511317d0_Var> _field_key_a{jule::Ref<_1511317d0_Var>()};
	jule::Ref<_1511317d0_Var> _field_key_b{jule::Ref<_1511317d0_Var>()};


	_150d29660_RangeIter(jule::Ref<_151290fd0_Data> __param_expr, jule::Ref<_150d29660_Scope> __param_scope, jule::Ref<_1511317d0_Var> __param_key_a, jule::Ref<_1511317d0_Var> __param_key_b) {
		this->self = jule::Ref<_150d29660_RangeIter>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_scope = __param_scope;
		this->_field_key_a = __param_key_a;
		this->_field_key_b = __param_key_b;
	}

	~_150d29660_RangeIter(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150d29660_RangeIter(void) { this->self = jule::Ref<_150d29660_RangeIter>::make(this, nullptr); }

	inline bool operator==(const _150d29660_RangeIter &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_scope == _Src._field_scope &&
			this->_field_key_a == _Src._field_key_a &&
			this->_field_key_b == _Src._field_key_b;
	}

	inline bool operator!=(const _150d29660_RangeIter &_Src) const { return !this->operator==(_Src); }
};


struct _150d29660_ContSt {
	jule::Ref<_150d29660_ContSt> self{};

	jule::Uintptr _field_it{jule::Uintptr()};


	_150d29660_ContSt(jule::Uintptr __param_it) {
		this->self = jule::Ref<_150d29660_ContSt>::make(this, nullptr);

		this->_field_it = __param_it;
	}

	~_150d29660_ContSt(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150d29660_ContSt(void) { this->self = jule::Ref<_150d29660_ContSt>::make(this, nullptr); }

	inline bool operator==(const _150d29660_ContSt &_Src) const {
		return 
			this->_field_it == _Src._field_it;
	}

	inline bool operator!=(const _150d29660_ContSt &_Src) const { return !this->operator==(_Src); }
};


struct _150d29660_BreakSt {
	jule::Ref<_150d29660_BreakSt> self{};

	jule::Uintptr _field_it{jule::Uintptr()};
	jule::Uintptr _field_mtch{jule::Uintptr()};


	_150d29660_BreakSt(jule::Uintptr __param_it, jule::Uintptr __param_mtch) {
		this->self = jule::Ref<_150d29660_BreakSt>::make(this, nullptr);

		this->_field_it = __param_it;
		this->_field_mtch = __param_mtch;
	}

	~_150d29660_BreakSt(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150d29660_BreakSt(void) { this->self = jule::Ref<_150d29660_BreakSt>::make(this, nullptr); }

	inline bool operator==(const _150d29660_BreakSt &_Src) const {
		return 
			this->_field_it == _Src._field_it &&
			this->_field_mtch == _Src._field_mtch;
	}

	inline bool operator!=(const _150d29660_BreakSt &_Src) const { return !this->operator==(_Src); }
};


struct _150d29660_Label {
	jule::Ref<_150d29660_Label> self{};

	jule::Str _field_ident{jule::Str()};


	_150d29660_Label(jule::Str __param_ident) {
		this->self = jule::Ref<_150d29660_Label>::make(this, nullptr);

		this->_field_ident = __param_ident;
	}

	~_150d29660_Label(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150d29660_Label(void) { this->self = jule::Ref<_150d29660_Label>::make(this, nullptr); }

	inline bool operator==(const _150d29660_Label &_Src) const {
		return 
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _150d29660_Label &_Src) const { return !this->operator==(_Src); }
};


struct _150d29660_GotoSt {
	jule::Ref<_150d29660_GotoSt> self{};

	jule::Str _field_ident{jule::Str()};


	_150d29660_GotoSt(jule::Str __param_ident) {
		this->self = jule::Ref<_150d29660_GotoSt>::make(this, nullptr);

		this->_field_ident = __param_ident;
	}

	~_150d29660_GotoSt(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150d29660_GotoSt(void) { this->self = jule::Ref<_150d29660_GotoSt>::make(this, nullptr); }

	inline bool operator==(const _150d29660_GotoSt &_Src) const {
		return 
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _150d29660_GotoSt &_Src) const { return !this->operator==(_Src); }
};


struct _150d29660_Postfix {
	jule::Ref<_150d29660_Postfix> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Str _field_op{jule::Str()};


	_150d29660_Postfix(jule::Any __param_expr, jule::Str __param_op) {
		this->self = jule::Ref<_150d29660_Postfix>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_op = __param_op;
	}

	~_150d29660_Postfix(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150d29660_Postfix(void) { this->self = jule::Ref<_150d29660_Postfix>::make(this, nullptr); }

	inline bool operator==(const _150d29660_Postfix &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _150d29660_Postfix &_Src) const { return !this->operator==(_Src); }
};


struct _150d29660_Assign {
	jule::Ref<_150d29660_Assign> self{};

	jule::Any _field_l{jule::Any()};
	jule::Any _field_r{jule::Any()};
	jule::Str _field_op{jule::Str()};


	_150d29660_Assign(jule::Any __param_l, jule::Any __param_r, jule::Str __param_op) {
		this->self = jule::Ref<_150d29660_Assign>::make(this, nullptr);

		this->_field_l = __param_l;
		this->_field_r = __param_r;
		this->_field_op = __param_op;
	}

	~_150d29660_Assign(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150d29660_Assign(void) { this->self = jule::Ref<_150d29660_Assign>::make(this, nullptr); }

	inline bool operator==(const _150d29660_Assign &_Src) const {
		return 
			this->_field_l == _Src._field_l &&
			this->_field_r == _Src._field_r &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _150d29660_Assign &_Src) const { return !this->operator==(_Src); }
};


struct _150d29660_MultiAssign {
	jule::Ref<_150d29660_MultiAssign> self{};

	jule::Slice<jule::Any> _field_l{jule::Slice<jule::Any>()};
	jule::Any _field_r{jule::Any()};


	_150d29660_MultiAssign(jule::Slice<jule::Any> __param_l, jule::Any __param_r) {
		this->self = jule::Ref<_150d29660_MultiAssign>::make(this, nullptr);

		this->_field_l = __param_l;
		this->_field_r = __param_r;
	}

	~_150d29660_MultiAssign(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150d29660_MultiAssign(void) { this->self = jule::Ref<_150d29660_MultiAssign>::make(this, nullptr); }

	inline bool operator==(const _150d29660_MultiAssign &_Src) const {
		return 
			this->_field_l == _Src._field_l &&
			this->_field_r == _Src._field_r;
	}

	inline bool operator!=(const _150d29660_MultiAssign &_Src) const { return !this->operator==(_Src); }
};


struct _150d29660_Match {
	jule::Ref<_150d29660_Match> self{};

	jule::Ref<_151290fd0_Data> _field_expr{jule::Ref<_151290fd0_Data>()};
	jule::Bool _field_type_match{jule::Bool()};
	jule::Slice<jule::Ref<_150d29660_Case>> _field_cases{jule::Slice<jule::Ref<_150d29660_Case>>()};
	jule::Ref<_150d29660_Case> _field_default{jule::Ref<_150d29660_Case>()};


	_150d29660_Match(jule::Ref<_151290fd0_Data> __param_expr, jule::Bool __param_type_match, jule::Slice<jule::Ref<_150d29660_Case>> __param_cases, jule::Ref<_150d29660_Case> __param_default) {
		this->self = jule::Ref<_150d29660_Match>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_type_match = __param_type_match;
		this->_field_cases = __param_cases;
		this->_field_default = __param_default;
	}

	~_150d29660_Match(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150d29660_Match(void) { this->self = jule::Ref<_150d29660_Match>::make(this, nullptr); }

	inline bool operator==(const _150d29660_Match &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_type_match == _Src._field_type_match &&
			this->_field_cases == _Src._field_cases &&
			this->_field_default == _Src._field_default;
	}

	inline bool operator!=(const _150d29660_Match &_Src) const { return !this->operator==(_Src); }
};


struct _150d29660_Case {
	jule::Ref<_150d29660_Case> self{};

	jule::Ref<_150d29660_Match> _field_owner{jule::Ref<_150d29660_Match>()};
	jule::Ref<_150d29660_Scope> _field_scope{jule::Ref<_150d29660_Scope>()};
	jule::Slice<jule::Any> _field_exprs{jule::Slice<jule::Any>()};
	jule::Ref<_150d29660_Case> _field_next{jule::Ref<_150d29660_Case>()};


	_150d29660_Case(jule::Ref<_150d29660_Match> __param_owner, jule::Ref<_150d29660_Scope> __param_scope, jule::Slice<jule::Any> __param_exprs, jule::Ref<_150d29660_Case> __param_next) {
		this->self = jule::Ref<_150d29660_Case>::make(this, nullptr);

		this->_field_owner = __param_owner;
		this->_field_scope = __param_scope;
		this->_field_exprs = __param_exprs;
		this->_field_next = __param_next;
	}

	~_150d29660_Case(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150d29660_Case(void) { this->self = jule::Ref<_150d29660_Case>::make(this, nullptr); }

	inline jule::Bool _method_is_default(void);


	inline bool operator==(const _150d29660_Case &_Src) const {
		return 
			this->_field_owner == _Src._field_owner &&
			this->_field_scope == _Src._field_scope &&
			this->_field_exprs == _Src._field_exprs &&
			this->_field_next == _Src._field_next;
	}

	inline bool operator!=(const _150d29660_Case &_Src) const { return !this->operator==(_Src); }
};


struct _150d29660_FallSt {
	jule::Ref<_150d29660_FallSt> self{};

	jule::Uintptr _field_dest_case{jule::Uintptr()};


	_150d29660_FallSt(jule::Uintptr __param_dest_case) {
		this->self = jule::Ref<_150d29660_FallSt>::make(this, nullptr);

		this->_field_dest_case = __param_dest_case;
	}

	~_150d29660_FallSt(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150d29660_FallSt(void) { this->self = jule::Ref<_150d29660_FallSt>::make(this, nullptr); }

	inline bool operator==(const _150d29660_FallSt &_Src) const {
		return 
			this->_field_dest_case == _Src._field_dest_case;
	}

	inline bool operator!=(const _150d29660_FallSt &_Src) const { return !this->operator==(_Src); }
};


struct _150d29660_RetSt {
	jule::Ref<_150d29660_RetSt> self{};

	jule::Slice<jule::Ref<_1511317d0_Var>> _field_vars{jule::Slice<jule::Ref<_1511317d0_Var>>()};
	jule::Any _field_expr{jule::Any()};


	_150d29660_RetSt(jule::Slice<jule::Ref<_1511317d0_Var>> __param_vars, jule::Any __param_expr) {
		this->self = jule::Ref<_150d29660_RetSt>::make(this, nullptr);

		this->_field_vars = __param_vars;
		this->_field_expr = __param_expr;
	}

	~_150d29660_RetSt(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150d29660_RetSt(void) { this->self = jule::Ref<_150d29660_RetSt>::make(this, nullptr); }

	inline bool operator==(const _150d29660_RetSt &_Src) const {
		return 
			this->_field_vars == _Src._field_vars &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _150d29660_RetSt &_Src) const { return !this->operator==(_Src); }
};


struct _150d29660_Recover {
	jule::Ref<_150d29660_Recover> self{};

	jule::Ref<_15081bcd0_FnIns> _field_handler{jule::Ref<_15081bcd0_FnIns>()};
	jule::Any _field_handler_expr{jule::Any()};
	jule::Ref<_150d29660_Scope> _field_scope{jule::Ref<_150d29660_Scope>()};
	jule::Ref<_15081bcd0_FnIns> _field_scope_owner{jule::Ref<_15081bcd0_FnIns>()};


	_150d29660_Recover(jule::Ref<_15081bcd0_FnIns> __param_handler, jule::Any __param_handler_expr, jule::Ref<_150d29660_Scope> __param_scope, jule::Ref<_15081bcd0_FnIns> __param_scope_owner) {
		this->self = jule::Ref<_150d29660_Recover>::make(this, nullptr);

		this->_field_handler = __param_handler;
		this->_field_handler_expr = __param_handler_expr;
		this->_field_scope = __param_scope;
		this->_field_scope_owner = __param_scope_owner;
	}

	~_150d29660_Recover(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150d29660_Recover(void) { this->self = jule::Ref<_150d29660_Recover>::make(this, nullptr); }

	inline bool operator==(const _150d29660_Recover &_Src) const {
		return 
			this->_field_handler == _Src._field_handler &&
			this->_field_handler_expr == _Src._field_handler_expr &&
			this->_field_scope == _Src._field_scope &&
			this->_field_scope_owner == _Src._field_scope_owner;
	}

	inline bool operator!=(const _150d29660_Recover &_Src) const { return !this->operator==(_Src); }
};


struct _150d29660_ScopeGoto {
	jule::Ref<_150d29660_ScopeGoto> self{};

	jule::Ref<_1506406d0_GotoSt> _field_gt{jule::Ref<_1506406d0_GotoSt>()};
	jule::Ref<_150d29660_ScopeChecker> _field_scope{jule::Ref<_150d29660_ScopeChecker>()};
	jule::Int _field_pos{jule::Int()};


	_150d29660_ScopeGoto(jule::Ref<_1506406d0_GotoSt> __param_gt, jule::Ref<_150d29660_ScopeChecker> __param_scope, jule::Int __param_pos) {
		this->self = jule::Ref<_150d29660_ScopeGoto>::make(this, nullptr);

		this->_field_gt = __param_gt;
		this->_field_scope = __param_scope;
		this->_field_pos = __param_pos;
	}

	~_150d29660_ScopeGoto(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150d29660_ScopeGoto(void) { this->self = jule::Ref<_150d29660_ScopeGoto>::make(this, nullptr); }

	inline bool operator==(const _150d29660_ScopeGoto &_Src) const {
		return 
			this->_field_gt == _Src._field_gt &&
			this->_field_scope == _Src._field_scope &&
			this->_field_pos == _Src._field_pos;
	}

	inline bool operator!=(const _150d29660_ScopeGoto &_Src) const { return !this->operator==(_Src); }
};


struct _150d29660_ScopeChecker: public _1517fbd60_Lookup {
	jule::Ref<_150d29660_ScopeChecker> self{};

	jule::Ref<_1510c9150_Sema> _field_s{jule::Ref<_1510c9150_Sema>()};
	jule::Ref<_15081bcd0_FnIns> _field_owner{jule::Ref<_15081bcd0_FnIns>()};
	jule::Ref<_150d29660_ScopeChecker> _field_parent{jule::Ref<_150d29660_ScopeChecker>()};
	jule::Int _field_child_index{jule::Int()};
	jule::Ref<_15128c4d0_SymbolTable> _field_table{jule::Ref<_15128c4d0_SymbolTable>()};
	jule::Ref<_150d29660_Scope> _field_scope{jule::Ref<_150d29660_Scope>()};
	jule::Ref<_1506406d0_ScopeTree> _field_tree{jule::Ref<_1506406d0_ScopeTree>()};
	jule::Uintptr _field_it{jule::Uintptr()};
	jule::Uintptr _field_cse{jule::Uintptr()};
	jule::Ref<jule::Slice<jule::Ref<_150d29660_ScopeLabel>>> _field_labels{jule::Ref<jule::Slice<jule::Ref<_150d29660_ScopeLabel>>>()};
	jule::Ref<jule::Slice<jule::Ref<_150d29660_ScopeGoto>>> _field_gotos{jule::Ref<jule::Slice<jule::Ref<_150d29660_ScopeGoto>>>()};
	jule::Int _field_i{jule::Int()};


	_150d29660_ScopeChecker(jule::Ref<_1510c9150_Sema> __param_s, jule::Ref<_15081bcd0_FnIns> __param_owner, jule::Ref<_150d29660_ScopeChecker> __param_parent, jule::Int __param_child_index, jule::Ref<_15128c4d0_SymbolTable> __param_table, jule::Ref<_150d29660_Scope> __param_scope, jule::Ref<_1506406d0_ScopeTree> __param_tree, jule::Uintptr __param_it, jule::Uintptr __param_cse, jule::Ref<jule::Slice<jule::Ref<_150d29660_ScopeLabel>>> __param_labels, jule::Ref<jule::Slice<jule::Ref<_150d29660_ScopeGoto>>> __param_gotos, jule::Int __param_i) {
		this->self = jule::Ref<_150d29660_ScopeChecker>::make(this, nullptr);

		this->_field_s = __param_s;
		this->_field_owner = __param_owner;
		this->_field_parent = __param_parent;
		this->_field_child_index = __param_child_index;
		this->_field_table = __param_table;
		this->_field_scope = __param_scope;
		this->_field_tree = __param_tree;
		this->_field_it = __param_it;
		this->_field_cse = __param_cse;
		this->_field_labels = __param_labels;
		this->_field_gotos = __param_gotos;
		this->_field_i = __param_i;
	}

	~_150d29660_ScopeChecker(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150d29660_ScopeChecker(void) { this->self = jule::Ref<_150d29660_ScopeChecker>::make(this, nullptr); }

	inline jule::Ref<_150f26340_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ref<_150f26340_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ref<_150f26340_ImportInfo>)>);


	inline jule::Ref<_1511317d0_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ref<_15177b070_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ref<_150a13110_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ref<_15081bcd0_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ref<_150f166e0_Trait> _method_find_trait(jule::Str);


	inline jule::Ref<_150f1c930_Enum> _method_find_enum(jule::Str);


	inline jule::Bool _method_is_unsafe(void);


	inline jule::Bool _method_is_root(void);


	inline jule::Ref<_150d29660_ScopeChecker> _method_get_root(void);


	inline jule::Ref<_150d29660_Label> _method_find_label(jule::Str);


	inline jule::Ref<_150d29660_ScopeLabel> _method_find_label_scope(jule::Str);


	inline jule::Ref<_150d29660_ScopeLabel> _method_find_label_all(jule::Str);


	inline jule::Bool _method_is_duplicated_ident(jule::Uintptr,jule::Str);


	inline void _method_check_var_decl(jule::Ref<_1506406d0_VarDecl>);


	inline void _method_check_type_alias_decl(jule::Ref<_1506406d0_TypeAliasDecl>);


	inline jule::Ref<_150d29660_Scope> _method_get_child(void);


	inline void _method_check_child_ssc(jule::Ref<_1506406d0_ScopeTree>,jule::Ref<_150d29660_Scope>,jule::Ref<_150d29660_ScopeChecker>);


	inline jule::Ref<_150d29660_Scope> _method_check_child_sc(jule::Ref<_1506406d0_ScopeTree>,jule::Ref<_150d29660_ScopeChecker>);


	inline jule::Ref<_150d29660_Scope> _method_check_child(jule::Ref<_1506406d0_ScopeTree>);


	inline void _method_check_anon_scope(jule::Ref<_1506406d0_ScopeTree>);


	inline jule::Bool _method_try_call_recover(jule::Ref<_151290fd0_Data>);


	inline void _method_check_expr(jule::Ref<_1506406d0_Expr>);


	inline jule::Ref<_150d29660_If> _method_check_if(jule::Ref<_1506406d0_If>);


	inline jule::Ref<_150d29660_Else> _method_check_else(jule::Ref<_1506406d0_Else>);


	inline void _method_check_conditional(jule::Ref<_1506406d0_Conditional>);


	inline jule::Ref<_150d29660_Scope> _method_check_iter_scope_sc(jule::Uintptr,jule::Ref<_1506406d0_ScopeTree>,jule::Ref<_150d29660_ScopeChecker>);


	inline jule::Ref<_150d29660_Scope> _method_check_iter_scope(jule::Uintptr,jule::Ref<_1506406d0_ScopeTree>);


	inline void _method_check_inf_iter(jule::Ref<_1506406d0_Iter>);


	inline void _method_check_while_iter(jule::Ref<_1506406d0_Iter>);


	inline void _method_check_range_iter(jule::Ref<_1506406d0_Iter>);


	inline void _method_check_iter(jule::Ref<_1506406d0_Iter>);


	inline jule::Bool _method_check_valid_cont_label(jule::Uintptr);


	inline jule::Bool _method_check_valid_break_label(jule::Uintptr);


	inline jule::Ref<_150d29660_ContSt> _method_check_cont_valid_scope(jule::Ref<_1506406d0_ContSt>);


	inline void _method_check_cont(jule::Ref<_1506406d0_ContSt>);


	inline void _method_check_label(jule::Ref<_1506406d0_LabelSt>);


	inline void _method_push_goto(jule::Ref<_1506406d0_GotoSt>);


	inline void _method_check_postfix(jule::Ref<_1506406d0_AssignSt>);


	inline jule::Bool _method_is_new_assign_ident(jule::Str);


	inline void _method_check_single_assign(jule::Ref<_1506406d0_AssignSt>);


	inline void _method___process_end_part_of_multi_assign(jule::Ref<_150d29660_MultiAssign>,jule::Ref<_1506406d0_AssignSt>,jule::Ref<_1506406d0_AssignLeft>,jule::Ref<_151290fd0_Data>,jule::Ref<_151290fd0_Data>);


	inline void _method_check_ret_multi_assign(jule::Ref<_1506406d0_AssignSt>);


	inline void _method_check_multi_assign(jule::Ref<_1506406d0_AssignSt>);


	inline void _method_check_assign_st(jule::Ref<_1506406d0_AssignSt>);


	inline jule::Ref<_150d29660_Scope> _method_check_case_scope(jule::Ref<_150d29660_Case>,jule::Ref<_1506406d0_ScopeTree>);


	inline jule::Ref<_150d29660_Case> _method_check_case(jule::Ref<_150d29660_Match>,jule::Int,jule::Ref<_1506406d0_Case>,jule::Ref<_151290fd0_Data>);


	inline void _method_check_cases(jule::Ref<_1506406d0_MatchCase>,jule::Ref<_150d29660_Match>,jule::Ref<_151290fd0_Data>);


	inline jule::Ref<_150d29660_Case> _method_check_default(jule::Ref<_150d29660_Match>,jule::Ref<_1506406d0_Else>);


	inline void _method_check_type_match(jule::Ref<_1506406d0_MatchCase>);


	inline void _method_check_common_match(jule::Ref<_1506406d0_MatchCase>);


	inline void _method_check_match(jule::Ref<_1506406d0_MatchCase>);


	inline void _method_check_fall(jule::Ref<_1506406d0_FallSt>);


	inline jule::Ref<_150d29660_BreakSt> _method_check_break_with_label(jule::Ref<_1506406d0_BreakSt>);


	inline jule::Ref<_150d29660_BreakSt> _method_check_plain_break(jule::Ref<_1506406d0_BreakSt>);


	inline void _method_check_break(jule::Ref<_1506406d0_BreakSt>);


	inline void _method_check_ret(jule::Ref<_1506406d0_RetSt>);


	inline void _method_check_node(jule::Any);


	inline void _method_check_tree(void);


	inline void _method_check_same_scope_goto(jule::Ref<_150d29660_ScopeGoto>,jule::Ref<_150d29660_ScopeLabel>);


	inline jule::Bool _method_check_label_parents(jule::Ref<_150d29660_ScopeGoto>,jule::Ref<_150d29660_ScopeLabel>);


	inline void _method_check_goto_scope(jule::Ref<_150d29660_ScopeGoto>,jule::Ref<_150d29660_ScopeLabel>);


	inline void _method_check_diff_scope_goto(jule::Ref<_150d29660_ScopeGoto>,jule::Ref<_150d29660_ScopeLabel>);


	inline void _method_check_goto(jule::Ref<_150d29660_ScopeGoto>,jule::Ref<_150d29660_ScopeLabel>);


	inline void _method_check_gotos(void);


	inline void _method_check_labels(void);


	inline void _method_check_vars(void);


	inline void _method_check_aliases(void);


	inline void _method_check(jule::Ref<_1506406d0_ScopeTree>,jule::Ref<_150d29660_Scope>);


	inline jule::Ref<_150d29660_ScopeChecker> _method_new_child_checker(void);


	inline bool operator==(const _150d29660_ScopeChecker &_Src) const {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_owner == _Src._field_owner &&
			this->_field_parent == _Src._field_parent &&
			this->_field_child_index == _Src._field_child_index &&
			this->_field_table == _Src._field_table &&
			this->_field_scope == _Src._field_scope &&
			this->_field_tree == _Src._field_tree &&
			this->_field_it == _Src._field_it &&
			this->_field_cse == _Src._field_cse &&
			this->_field_labels == _Src._field_labels &&
			this->_field_gotos == _Src._field_gotos &&
			this->_field_i == _Src._field_i;
	}

	inline bool operator!=(const _150d29660_ScopeChecker &_Src) const { return !this->operator==(_Src); }
};


struct _150f25dd0_BinopExprModel {
	jule::Ref<_150f25dd0_BinopExprModel> self{};

	jule::Any _field_left{jule::Any()};
	jule::Any _field_right{jule::Any()};
	jule::Str _field_op{jule::Str()};


	_150f25dd0_BinopExprModel(jule::Any __param_left, jule::Any __param_right, jule::Str __param_op) {
		this->self = jule::Ref<_150f25dd0_BinopExprModel>::make(this, nullptr);

		this->_field_left = __param_left;
		this->_field_right = __param_right;
		this->_field_op = __param_op;
	}

	~_150f25dd0_BinopExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150f25dd0_BinopExprModel(void) { this->self = jule::Ref<_150f25dd0_BinopExprModel>::make(this, nullptr); }

	inline bool operator==(const _150f25dd0_BinopExprModel &_Src) const {
		return 
			this->_field_left == _Src._field_left &&
			this->_field_right == _Src._field_right &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _150f25dd0_BinopExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _150f25dd0_UnaryExprModel {
	jule::Ref<_150f25dd0_UnaryExprModel> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Str _field_op{jule::Str()};


	_150f25dd0_UnaryExprModel(jule::Any __param_expr, jule::Str __param_op) {
		this->self = jule::Ref<_150f25dd0_UnaryExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_op = __param_op;
	}

	~_150f25dd0_UnaryExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150f25dd0_UnaryExprModel(void) { this->self = jule::Ref<_150f25dd0_UnaryExprModel>::make(this, nullptr); }

	inline bool operator==(const _150f25dd0_UnaryExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _150f25dd0_UnaryExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _150f25dd0_GetRefPtrExprModel {
	jule::Ref<_150f25dd0_GetRefPtrExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_150f25dd0_GetRefPtrExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_150f25dd0_GetRefPtrExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_150f25dd0_GetRefPtrExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150f25dd0_GetRefPtrExprModel(void) { this->self = jule::Ref<_150f25dd0_GetRefPtrExprModel>::make(this, nullptr); }

	inline bool operator==(const _150f25dd0_GetRefPtrExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _150f25dd0_GetRefPtrExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _150f25dd0_StructArgExprModel {
	jule::Ref<_150f25dd0_StructArgExprModel> self{};

	jule::Ref<_150a13110_FieldIns> _field_field{jule::Ref<_150a13110_FieldIns>()};
	jule::Any _field_expr{jule::Any()};


	_150f25dd0_StructArgExprModel(jule::Ref<_150a13110_FieldIns> __param_field, jule::Any __param_expr) {
		this->self = jule::Ref<_150f25dd0_StructArgExprModel>::make(this, nullptr);

		this->_field_field = __param_field;
		this->_field_expr = __param_expr;
	}

	~_150f25dd0_StructArgExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150f25dd0_StructArgExprModel(void) { this->self = jule::Ref<_150f25dd0_StructArgExprModel>::make(this, nullptr); }

	inline bool operator==(const _150f25dd0_StructArgExprModel &_Src) const {
		return 
			this->_field_field == _Src._field_field &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _150f25dd0_StructArgExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _150f25dd0_StructLitExprModel {
	jule::Ref<_150f25dd0_StructLitExprModel> self{};

	jule::Ref<_150a13110_StructIns> _field_strct{jule::Ref<_150a13110_StructIns>()};
	jule::Slice<jule::Ref<_150f25dd0_StructArgExprModel>> _field_args{jule::Slice<jule::Ref<_150f25dd0_StructArgExprModel>>()};


	_150f25dd0_StructLitExprModel(jule::Ref<_150a13110_StructIns> __param_strct, jule::Slice<jule::Ref<_150f25dd0_StructArgExprModel>> __param_args) {
		this->self = jule::Ref<_150f25dd0_StructLitExprModel>::make(this, nullptr);

		this->_field_strct = __param_strct;
		this->_field_args = __param_args;
	}

	~_150f25dd0_StructLitExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150f25dd0_StructLitExprModel(void) { this->self = jule::Ref<_150f25dd0_StructLitExprModel>::make(this, nullptr); }

	inline bool operator==(const _150f25dd0_StructLitExprModel &_Src) const {
		return 
			this->_field_strct == _Src._field_strct &&
			this->_field_args == _Src._field_args;
	}

	inline bool operator!=(const _150f25dd0_StructLitExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _150f25dd0_AllocStructLitExprModel {
	jule::Ref<_150f25dd0_AllocStructLitExprModel> self{};

	jule::Ref<_150f25dd0_StructLitExprModel> _field_lit{jule::Ref<_150f25dd0_StructLitExprModel>()};


	_150f25dd0_AllocStructLitExprModel(jule::Ref<_150f25dd0_StructLitExprModel> __param_lit) {
		this->self = jule::Ref<_150f25dd0_AllocStructLitExprModel>::make(this, nullptr);

		this->_field_lit = __param_lit;
	}

	~_150f25dd0_AllocStructLitExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150f25dd0_AllocStructLitExprModel(void) { this->self = jule::Ref<_150f25dd0_AllocStructLitExprModel>::make(this, nullptr); }

	inline bool operator==(const _150f25dd0_AllocStructLitExprModel &_Src) const {
		return 
			this->_field_lit == _Src._field_lit;
	}

	inline bool operator!=(const _150f25dd0_AllocStructLitExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _150f25dd0_CastingExprModel {
	jule::Ref<_150f25dd0_CastingExprModel> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Ref<_15177b070_TypeKind> _field_kind{jule::Ref<_15177b070_TypeKind>()};
	jule::Ref<_15177b070_TypeKind> _field_expr_kind{jule::Ref<_15177b070_TypeKind>()};


	_150f25dd0_CastingExprModel(jule::Any __param_expr, jule::Ref<_15177b070_TypeKind> __param_kind, jule::Ref<_15177b070_TypeKind> __param_expr_kind) {
		this->self = jule::Ref<_150f25dd0_CastingExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_kind = __param_kind;
		this->_field_expr_kind = __param_expr_kind;
	}

	~_150f25dd0_CastingExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150f25dd0_CastingExprModel(void) { this->self = jule::Ref<_150f25dd0_CastingExprModel>::make(this, nullptr); }

	inline bool operator==(const _150f25dd0_CastingExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_kind == _Src._field_kind &&
			this->_field_expr_kind == _Src._field_expr_kind;
	}

	inline bool operator!=(const _150f25dd0_CastingExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _150f25dd0_FnCallExprModel {
	jule::Ref<_150f25dd0_FnCallExprModel> self{};

	jule::Ref<_15081bcd0_FnIns> _field_func{jule::Ref<_15081bcd0_FnIns>()};
	jule::Bool _field_is_co{jule::Bool()};
	jule::Any _field_expr{jule::Any()};
	jule::Slice<jule::Any> _field_args{jule::Slice<jule::Any>()};


	_150f25dd0_FnCallExprModel(jule::Ref<_15081bcd0_FnIns> __param_func, jule::Bool __param_is_co, jule::Any __param_expr, jule::Slice<jule::Any> __param_args) {
		this->self = jule::Ref<_150f25dd0_FnCallExprModel>::make(this, nullptr);

		this->_field_func = __param_func;
		this->_field_is_co = __param_is_co;
		this->_field_expr = __param_expr;
		this->_field_args = __param_args;
	}

	~_150f25dd0_FnCallExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150f25dd0_FnCallExprModel(void) { this->self = jule::Ref<_150f25dd0_FnCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _150f25dd0_FnCallExprModel &_Src) const {
		return 
			this->_field_func == _Src._field_func &&
			this->_field_is_co == _Src._field_is_co &&
			this->_field_expr == _Src._field_expr &&
			this->_field_args == _Src._field_args;
	}

	inline bool operator!=(const _150f25dd0_FnCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _150f25dd0_SliceExprModel {
	jule::Ref<_150f25dd0_SliceExprModel> self{};

	jule::Ref<_15177b070_TypeKind> _field_elem_kind{jule::Ref<_15177b070_TypeKind>()};
	jule::Slice<jule::Any> _field_elems{jule::Slice<jule::Any>()};


	_150f25dd0_SliceExprModel(jule::Ref<_15177b070_TypeKind> __param_elem_kind, jule::Slice<jule::Any> __param_elems) {
		this->self = jule::Ref<_150f25dd0_SliceExprModel>::make(this, nullptr);

		this->_field_elem_kind = __param_elem_kind;
		this->_field_elems = __param_elems;
	}

	~_150f25dd0_SliceExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150f25dd0_SliceExprModel(void) { this->self = jule::Ref<_150f25dd0_SliceExprModel>::make(this, nullptr); }

	inline bool operator==(const _150f25dd0_SliceExprModel &_Src) const {
		return 
			this->_field_elem_kind == _Src._field_elem_kind &&
			this->_field_elems == _Src._field_elems;
	}

	inline bool operator!=(const _150f25dd0_SliceExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _150f25dd0_IndexigExprModel {
	jule::Ref<_150f25dd0_IndexigExprModel> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Any _field_index{jule::Any()};


	_150f25dd0_IndexigExprModel(jule::Any __param_expr, jule::Any __param_index) {
		this->self = jule::Ref<_150f25dd0_IndexigExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_index = __param_index;
	}

	~_150f25dd0_IndexigExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150f25dd0_IndexigExprModel(void) { this->self = jule::Ref<_150f25dd0_IndexigExprModel>::make(this, nullptr); }

	inline bool operator==(const _150f25dd0_IndexigExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_index == _Src._field_index;
	}

	inline bool operator!=(const _150f25dd0_IndexigExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _150f25dd0_AnonFnExprModel {
	jule::Ref<_150f25dd0_AnonFnExprModel> self{};

	jule::Ref<_15081bcd0_FnIns> _field_func{jule::Ref<_15081bcd0_FnIns>()};
	jule::Bool _field_global{jule::Bool()};


	_150f25dd0_AnonFnExprModel(jule::Ref<_15081bcd0_FnIns> __param_func, jule::Bool __param_global) {
		this->self = jule::Ref<_150f25dd0_AnonFnExprModel>::make(this, nullptr);

		this->_field_func = __param_func;
		this->_field_global = __param_global;
	}

	~_150f25dd0_AnonFnExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150f25dd0_AnonFnExprModel(void) { this->self = jule::Ref<_150f25dd0_AnonFnExprModel>::make(this, nullptr); }

	inline bool operator==(const _150f25dd0_AnonFnExprModel &_Src) const {
		return 
			this->_field_func == _Src._field_func &&
			this->_field_global == _Src._field_global;
	}

	inline bool operator!=(const _150f25dd0_AnonFnExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _150f25dd0_KeyValPairExprModel {
	jule::Ref<_150f25dd0_KeyValPairExprModel> self{};

	jule::Any _field_key{jule::Any()};
	jule::Any _field_val{jule::Any()};


	_150f25dd0_KeyValPairExprModel(jule::Any __param_key, jule::Any __param_val) {
		this->self = jule::Ref<_150f25dd0_KeyValPairExprModel>::make(this, nullptr);

		this->_field_key = __param_key;
		this->_field_val = __param_val;
	}

	~_150f25dd0_KeyValPairExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150f25dd0_KeyValPairExprModel(void) { this->self = jule::Ref<_150f25dd0_KeyValPairExprModel>::make(this, nullptr); }

	inline bool operator==(const _150f25dd0_KeyValPairExprModel &_Src) const {
		return 
			this->_field_key == _Src._field_key &&
			this->_field_val == _Src._field_val;
	}

	inline bool operator!=(const _150f25dd0_KeyValPairExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _150f25dd0_MapExprModel {
	jule::Ref<_150f25dd0_MapExprModel> self{};

	jule::Ref<_15177b070_TypeKind> _field_key_kind{jule::Ref<_15177b070_TypeKind>()};
	jule::Ref<_15177b070_TypeKind> _field_val_kind{jule::Ref<_15177b070_TypeKind>()};
	jule::Slice<jule::Ref<_150f25dd0_KeyValPairExprModel>> _field_entries{jule::Slice<jule::Ref<_150f25dd0_KeyValPairExprModel>>()};


	_150f25dd0_MapExprModel(jule::Ref<_15177b070_TypeKind> __param_key_kind, jule::Ref<_15177b070_TypeKind> __param_val_kind, jule::Slice<jule::Ref<_150f25dd0_KeyValPairExprModel>> __param_entries) {
		this->self = jule::Ref<_150f25dd0_MapExprModel>::make(this, nullptr);

		this->_field_key_kind = __param_key_kind;
		this->_field_val_kind = __param_val_kind;
		this->_field_entries = __param_entries;
	}

	~_150f25dd0_MapExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150f25dd0_MapExprModel(void) { this->self = jule::Ref<_150f25dd0_MapExprModel>::make(this, nullptr); }

	inline bool operator==(const _150f25dd0_MapExprModel &_Src) const {
		return 
			this->_field_key_kind == _Src._field_key_kind &&
			this->_field_val_kind == _Src._field_val_kind &&
			this->_field_entries == _Src._field_entries;
	}

	inline bool operator!=(const _150f25dd0_MapExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _150f25dd0_SlicingExprModel {
	jule::Ref<_150f25dd0_SlicingExprModel> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Any _field_left{jule::Any()};
	jule::Any _field_right{jule::Any()};


	_150f25dd0_SlicingExprModel(jule::Any __param_expr, jule::Any __param_left, jule::Any __param_right) {
		this->self = jule::Ref<_150f25dd0_SlicingExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_left = __param_left;
		this->_field_right = __param_right;
	}

	~_150f25dd0_SlicingExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150f25dd0_SlicingExprModel(void) { this->self = jule::Ref<_150f25dd0_SlicingExprModel>::make(this, nullptr); }

	inline bool operator==(const _150f25dd0_SlicingExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_left == _Src._field_left &&
			this->_field_right == _Src._field_right;
	}

	inline bool operator!=(const _150f25dd0_SlicingExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _150f25dd0_TraitSubIdentExprModel {
	jule::Ref<_150f25dd0_TraitSubIdentExprModel> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Str _field_ident{jule::Str()};


	_150f25dd0_TraitSubIdentExprModel(jule::Any __param_expr, jule::Str __param_ident) {
		this->self = jule::Ref<_150f25dd0_TraitSubIdentExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_ident = __param_ident;
	}

	~_150f25dd0_TraitSubIdentExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150f25dd0_TraitSubIdentExprModel(void) { this->self = jule::Ref<_150f25dd0_TraitSubIdentExprModel>::make(this, nullptr); }

	inline bool operator==(const _150f25dd0_TraitSubIdentExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _150f25dd0_TraitSubIdentExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _150f25dd0_StructSubIdentExprModel {
	jule::Ref<_150f25dd0_StructSubIdentExprModel> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Ref<_15177b070_TypeKind> _field_expr_kind{jule::Ref<_15177b070_TypeKind>()};
	jule::Ref<_15081bcd0_FnIns> _field_method{jule::Ref<_15081bcd0_FnIns>()};
	jule::Ref<_150a13110_FieldIns> _field_field{jule::Ref<_150a13110_FieldIns>()};


	_150f25dd0_StructSubIdentExprModel(jule::Any __param_expr, jule::Ref<_15177b070_TypeKind> __param_expr_kind, jule::Ref<_15081bcd0_FnIns> __param_method, jule::Ref<_150a13110_FieldIns> __param_field) {
		this->self = jule::Ref<_150f25dd0_StructSubIdentExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_expr_kind = __param_expr_kind;
		this->_field_method = __param_method;
		this->_field_field = __param_field;
	}

	~_150f25dd0_StructSubIdentExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150f25dd0_StructSubIdentExprModel(void) { this->self = jule::Ref<_150f25dd0_StructSubIdentExprModel>::make(this, nullptr); }

	inline bool operator==(const _150f25dd0_StructSubIdentExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_expr_kind == _Src._field_expr_kind &&
			this->_field_method == _Src._field_method &&
			this->_field_field == _Src._field_field;
	}

	inline bool operator!=(const _150f25dd0_StructSubIdentExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _150f25dd0_StructStaticIdentExprModel {
	jule::Ref<_150f25dd0_StructStaticIdentExprModel> self{};

	jule::Ref<_150a13110_StructIns> _field_structure{jule::Ref<_150a13110_StructIns>()};
	jule::Any _field_expr{jule::Any()};
	jule::Ref<_15081bcd0_FnIns> _field_method{jule::Ref<_15081bcd0_FnIns>()};


	_150f25dd0_StructStaticIdentExprModel(jule::Ref<_150a13110_StructIns> __param_structure, jule::Any __param_expr, jule::Ref<_15081bcd0_FnIns> __param_method) {
		this->self = jule::Ref<_150f25dd0_StructStaticIdentExprModel>::make(this, nullptr);

		this->_field_structure = __param_structure;
		this->_field_expr = __param_expr;
		this->_field_method = __param_method;
	}

	~_150f25dd0_StructStaticIdentExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150f25dd0_StructStaticIdentExprModel(void) { this->self = jule::Ref<_150f25dd0_StructStaticIdentExprModel>::make(this, nullptr); }

	inline bool operator==(const _150f25dd0_StructStaticIdentExprModel &_Src) const {
		return 
			this->_field_structure == _Src._field_structure &&
			this->_field_expr == _Src._field_expr &&
			this->_field_method == _Src._field_method;
	}

	inline bool operator!=(const _150f25dd0_StructStaticIdentExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _150f25dd0_ArrayExprModel {
	jule::Ref<_150f25dd0_ArrayExprModel> self{};

	jule::Ref<_15177b070_Arr> _field_kind{jule::Ref<_15177b070_Arr>()};
	jule::Slice<jule::Any> _field_elems{jule::Slice<jule::Any>()};


	_150f25dd0_ArrayExprModel(jule::Ref<_15177b070_Arr> __param_kind, jule::Slice<jule::Any> __param_elems) {
		this->self = jule::Ref<_150f25dd0_ArrayExprModel>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_elems = __param_elems;
	}

	~_150f25dd0_ArrayExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150f25dd0_ArrayExprModel(void) { this->self = jule::Ref<_150f25dd0_ArrayExprModel>::make(this, nullptr); }

	inline bool operator==(const _150f25dd0_ArrayExprModel &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_elems == _Src._field_elems;
	}

	inline bool operator!=(const _150f25dd0_ArrayExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _150f25dd0_CommonIdentExprModel {
	jule::Ref<_150f25dd0_CommonIdentExprModel> self{};

	jule::Str _field_ident{jule::Str()};


	_150f25dd0_CommonIdentExprModel(jule::Str __param_ident) {
		this->self = jule::Ref<_150f25dd0_CommonIdentExprModel>::make(this, nullptr);

		this->_field_ident = __param_ident;
	}

	~_150f25dd0_CommonIdentExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150f25dd0_CommonIdentExprModel(void) { this->self = jule::Ref<_150f25dd0_CommonIdentExprModel>::make(this, nullptr); }

	inline bool operator==(const _150f25dd0_CommonIdentExprModel &_Src) const {
		return 
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _150f25dd0_CommonIdentExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _150f25dd0_CommonSubIdentExprModel {
	jule::Ref<_150f25dd0_CommonSubIdentExprModel> self{};

	jule::Ref<_15177b070_TypeKind> _field_expr_kind{jule::Ref<_15177b070_TypeKind>()};
	jule::Any _field_expr{jule::Any()};
	jule::Str _field_ident{jule::Str()};


	_150f25dd0_CommonSubIdentExprModel(jule::Ref<_15177b070_TypeKind> __param_expr_kind, jule::Any __param_expr, jule::Str __param_ident) {
		this->self = jule::Ref<_150f25dd0_CommonSubIdentExprModel>::make(this, nullptr);

		this->_field_expr_kind = __param_expr_kind;
		this->_field_expr = __param_expr;
		this->_field_ident = __param_ident;
	}

	~_150f25dd0_CommonSubIdentExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150f25dd0_CommonSubIdentExprModel(void) { this->self = jule::Ref<_150f25dd0_CommonSubIdentExprModel>::make(this, nullptr); }

	inline bool operator==(const _150f25dd0_CommonSubIdentExprModel &_Src) const {
		return 
			this->_field_expr_kind == _Src._field_expr_kind &&
			this->_field_expr == _Src._field_expr &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _150f25dd0_CommonSubIdentExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _150f25dd0_TupleExprModel {
	jule::Ref<_150f25dd0_TupleExprModel> self{};

	jule::Slice<jule::Ref<_151290fd0_Data>> _field_datas{jule::Slice<jule::Ref<_151290fd0_Data>>()};


	_150f25dd0_TupleExprModel(jule::Slice<jule::Ref<_151290fd0_Data>> __param_datas) {
		this->self = jule::Ref<_150f25dd0_TupleExprModel>::make(this, nullptr);

		this->_field_datas = __param_datas;
	}

	~_150f25dd0_TupleExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150f25dd0_TupleExprModel(void) { this->self = jule::Ref<_150f25dd0_TupleExprModel>::make(this, nullptr); }

	inline bool operator==(const _150f25dd0_TupleExprModel &_Src) const {
		return 
			this->_field_datas == _Src._field_datas;
	}

	inline bool operator!=(const _150f25dd0_TupleExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _150f25dd0_BuiltinOutCallExprModel {
	jule::Ref<_150f25dd0_BuiltinOutCallExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_150f25dd0_BuiltinOutCallExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_150f25dd0_BuiltinOutCallExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_150f25dd0_BuiltinOutCallExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150f25dd0_BuiltinOutCallExprModel(void) { this->self = jule::Ref<_150f25dd0_BuiltinOutCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _150f25dd0_BuiltinOutCallExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _150f25dd0_BuiltinOutCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _150f25dd0_BuiltinOutlnCallExprModel {
	jule::Ref<_150f25dd0_BuiltinOutlnCallExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_150f25dd0_BuiltinOutlnCallExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_150f25dd0_BuiltinOutlnCallExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_150f25dd0_BuiltinOutlnCallExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150f25dd0_BuiltinOutlnCallExprModel(void) { this->self = jule::Ref<_150f25dd0_BuiltinOutlnCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _150f25dd0_BuiltinOutlnCallExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _150f25dd0_BuiltinOutlnCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _150f25dd0_BuiltinCloneCallExprModel {
	jule::Ref<_150f25dd0_BuiltinCloneCallExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_150f25dd0_BuiltinCloneCallExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_150f25dd0_BuiltinCloneCallExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_150f25dd0_BuiltinCloneCallExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150f25dd0_BuiltinCloneCallExprModel(void) { this->self = jule::Ref<_150f25dd0_BuiltinCloneCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _150f25dd0_BuiltinCloneCallExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _150f25dd0_BuiltinCloneCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _150f25dd0_BuiltinNewCallExprModel {
	jule::Ref<_150f25dd0_BuiltinNewCallExprModel> self{};

	jule::Ref<_15177b070_TypeKind> _field_kind{jule::Ref<_15177b070_TypeKind>()};
	jule::Any _field_init{jule::Any()};


	_150f25dd0_BuiltinNewCallExprModel(jule::Ref<_15177b070_TypeKind> __param_kind, jule::Any __param_init) {
		this->self = jule::Ref<_150f25dd0_BuiltinNewCallExprModel>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_init = __param_init;
	}

	~_150f25dd0_BuiltinNewCallExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150f25dd0_BuiltinNewCallExprModel(void) { this->self = jule::Ref<_150f25dd0_BuiltinNewCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _150f25dd0_BuiltinNewCallExprModel &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_init == _Src._field_init;
	}

	inline bool operator!=(const _150f25dd0_BuiltinNewCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _150f25dd0_BuiltinRealCallExprModel {
	jule::Ref<_150f25dd0_BuiltinRealCallExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_150f25dd0_BuiltinRealCallExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_150f25dd0_BuiltinRealCallExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_150f25dd0_BuiltinRealCallExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150f25dd0_BuiltinRealCallExprModel(void) { this->self = jule::Ref<_150f25dd0_BuiltinRealCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _150f25dd0_BuiltinRealCallExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _150f25dd0_BuiltinRealCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _150f25dd0_BuiltinDropCallExprModel {
	jule::Ref<_150f25dd0_BuiltinDropCallExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_150f25dd0_BuiltinDropCallExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_150f25dd0_BuiltinDropCallExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_150f25dd0_BuiltinDropCallExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150f25dd0_BuiltinDropCallExprModel(void) { this->self = jule::Ref<_150f25dd0_BuiltinDropCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _150f25dd0_BuiltinDropCallExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _150f25dd0_BuiltinDropCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _150f25dd0_BuiltinPanicCallExprModel {
	jule::Ref<_150f25dd0_BuiltinPanicCallExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_150f25dd0_BuiltinPanicCallExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_150f25dd0_BuiltinPanicCallExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_150f25dd0_BuiltinPanicCallExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150f25dd0_BuiltinPanicCallExprModel(void) { this->self = jule::Ref<_150f25dd0_BuiltinPanicCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _150f25dd0_BuiltinPanicCallExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _150f25dd0_BuiltinPanicCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _150f25dd0_BuiltinMakeCallExprModel {
	jule::Ref<_150f25dd0_BuiltinMakeCallExprModel> self{};

	jule::Ref<_15177b070_TypeKind> _field_kind{jule::Ref<_15177b070_TypeKind>()};
	jule::Any _field_len{jule::Any()};
	jule::Any _field_cap{jule::Any()};


	_150f25dd0_BuiltinMakeCallExprModel(jule::Ref<_15177b070_TypeKind> __param_kind, jule::Any __param_len, jule::Any __param_cap) {
		this->self = jule::Ref<_150f25dd0_BuiltinMakeCallExprModel>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_len = __param_len;
		this->_field_cap = __param_cap;
	}

	~_150f25dd0_BuiltinMakeCallExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150f25dd0_BuiltinMakeCallExprModel(void) { this->self = jule::Ref<_150f25dd0_BuiltinMakeCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _150f25dd0_BuiltinMakeCallExprModel &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_len == _Src._field_len &&
			this->_field_cap == _Src._field_cap;
	}

	inline bool operator!=(const _150f25dd0_BuiltinMakeCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _150f25dd0_BuiltinAppendCallExprModel {
	jule::Ref<_150f25dd0_BuiltinAppendCallExprModel> self{};

	jule::Any _field_dest{jule::Any()};
	jule::Any _field_elements{jule::Any()};


	_150f25dd0_BuiltinAppendCallExprModel(jule::Any __param_dest, jule::Any __param_elements) {
		this->self = jule::Ref<_150f25dd0_BuiltinAppendCallExprModel>::make(this, nullptr);

		this->_field_dest = __param_dest;
		this->_field_elements = __param_elements;
	}

	~_150f25dd0_BuiltinAppendCallExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150f25dd0_BuiltinAppendCallExprModel(void) { this->self = jule::Ref<_150f25dd0_BuiltinAppendCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _150f25dd0_BuiltinAppendCallExprModel &_Src) const {
		return 
			this->_field_dest == _Src._field_dest &&
			this->_field_elements == _Src._field_elements;
	}

	inline bool operator!=(const _150f25dd0_BuiltinAppendCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _150f25dd0_BuiltinErrorTraitSubIdentExprModel {
	jule::Ref<_150f25dd0_BuiltinErrorTraitSubIdentExprModel> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Str _field_ident{jule::Str()};


	_150f25dd0_BuiltinErrorTraitSubIdentExprModel(jule::Any __param_expr, jule::Str __param_ident) {
		this->self = jule::Ref<_150f25dd0_BuiltinErrorTraitSubIdentExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_ident = __param_ident;
	}

	~_150f25dd0_BuiltinErrorTraitSubIdentExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150f25dd0_BuiltinErrorTraitSubIdentExprModel(void) { this->self = jule::Ref<_150f25dd0_BuiltinErrorTraitSubIdentExprModel>::make(this, nullptr); }

	inline bool operator==(const _150f25dd0_BuiltinErrorTraitSubIdentExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _150f25dd0_BuiltinErrorTraitSubIdentExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _150f25dd0_SizeofExprModel {
	jule::Ref<_150f25dd0_SizeofExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_150f25dd0_SizeofExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_150f25dd0_SizeofExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_150f25dd0_SizeofExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150f25dd0_SizeofExprModel(void) { this->self = jule::Ref<_150f25dd0_SizeofExprModel>::make(this, nullptr); }

	inline bool operator==(const _150f25dd0_SizeofExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _150f25dd0_SizeofExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _150f25dd0_AlignofExprModel {
	jule::Ref<_150f25dd0_AlignofExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_150f25dd0_AlignofExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_150f25dd0_AlignofExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_150f25dd0_AlignofExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150f25dd0_AlignofExprModel(void) { this->self = jule::Ref<_150f25dd0_AlignofExprModel>::make(this, nullptr); }

	inline bool operator==(const _150f25dd0_AlignofExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _150f25dd0_AlignofExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _150f25dd0_RuneExprModel {
	jule::Ref<_150f25dd0_RuneExprModel> self{};

	jule::I32 _field_code{jule::I32()};


	_150f25dd0_RuneExprModel(jule::I32 __param_code) {
		this->self = jule::Ref<_150f25dd0_RuneExprModel>::make(this, nullptr);

		this->_field_code = __param_code;
	}

	~_150f25dd0_RuneExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150f25dd0_RuneExprModel(void) { this->self = jule::Ref<_150f25dd0_RuneExprModel>::make(this, nullptr); }

	inline bool operator==(const _150f25dd0_RuneExprModel &_Src) const {
		return 
			this->_field_code == _Src._field_code;
	}

	inline bool operator!=(const _150f25dd0_RuneExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _150f25dd0_ExplicitDerefExprModel {
	jule::Ref<_150f25dd0_ExplicitDerefExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_150f25dd0_ExplicitDerefExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_150f25dd0_ExplicitDerefExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_150f25dd0_ExplicitDerefExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150f25dd0_ExplicitDerefExprModel(void) { this->self = jule::Ref<_150f25dd0_ExplicitDerefExprModel>::make(this, nullptr); }

	inline bool operator==(const _150f25dd0_ExplicitDerefExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _150f25dd0_ExplicitDerefExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _150f26340_Package: public _1517fbd60_Lookup {
	jule::Ref<_150f26340_Package> self{};

	jule::Slice<jule::Ref<_15128c4d0_SymbolTable>> _field_files{jule::Slice<jule::Ref<_15128c4d0_SymbolTable>>()};


	_150f26340_Package(jule::Slice<jule::Ref<_15128c4d0_SymbolTable>> __param_files) {
		this->self = jule::Ref<_150f26340_Package>::make(this, nullptr);

		this->_field_files = __param_files;
	}

	~_150f26340_Package(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150f26340_Package(void) { this->self = jule::Ref<_150f26340_Package>::make(this, nullptr); }

	inline jule::Ref<_150f26340_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ref<_150f26340_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ref<_150f26340_ImportInfo>)>);


	inline jule::Ref<_1511317d0_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ref<_15177b070_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ref<_150a13110_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ref<_15081bcd0_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ref<_150f166e0_Trait> _method_find_trait(jule::Str);


	inline jule::Ref<_150f1c930_Enum> _method_find_enum(jule::Str);


	inline bool operator==(const _150f26340_Package &_Src) const {
		return 
			this->_field_files == _Src._field_files;
	}

	inline bool operator!=(const _150f26340_Package &_Src) const { return !this->operator==(_Src); }
};


struct _1510c9150_Sema: public _1517fbd60_Lookup {
	jule::Ref<_1510c9150_Sema> self{};

	jule::Slice<_157e34dc0_Log> _field_errors{jule::Slice<_157e34dc0_Log>()};
	jule::Slice<jule::Ref<_15128c4d0_SymbolTable>> _field_files{jule::Slice<jule::Ref<_15128c4d0_SymbolTable>>()};
	jule::Ref<_15128c4d0_SymbolTable> _field_file{jule::Ref<_15128c4d0_SymbolTable>()};


	_1510c9150_Sema(jule::Slice<_157e34dc0_Log> __param_errors, jule::Slice<jule::Ref<_15128c4d0_SymbolTable>> __param_files, jule::Ref<_15128c4d0_SymbolTable> __param_file) {
		this->self = jule::Ref<_1510c9150_Sema>::make(this, nullptr);

		this->_field_errors = __param_errors;
		this->_field_files = __param_files;
		this->_field_file = __param_file;
	}

	~_1510c9150_Sema(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1510c9150_Sema(void) { this->self = jule::Ref<_1510c9150_Sema>::make(this, nullptr); }

	inline jule::Ref<_150f26340_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ref<_150f26340_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ref<_150f26340_ImportInfo>)>);


	inline jule::Ref<_1511317d0_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ref<_15177b070_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ref<_150a13110_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ref<_15081bcd0_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ref<_150f166e0_Trait> _method_find_trait(jule::Str);


	inline jule::Ref<_150f1c930_Enum> _method_find_enum(jule::Str);


	inline void _method_set_current_file(jule::Ref<_15128c4d0_SymbolTable>);


	inline void _method_push_err(_150640f50_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_suggest(jule::Str,jule::Slice<jule::Any>);


	inline jule::Bool _method_is_accessible_define(jule::Bool,_150640f50_Token);


	inline jule::Bool _method_is_duplicated_ident(jule::Uintptr,jule::Str,jule::Bool);


	inline jule::Bool _method_check_generic_quantity(jule::Int,jule::Int,_150640f50_Token);


	inline jule::Bool _method_is_duplicated_import_selection(jule::Uintptr,jule::Str);


	inline jule::Any _method_get_import_def(jule::Str,jule::Ref<_150f26340_ImportInfo>&);


	inline void _method_check_import_selections(jule::Ref<_150f26340_ImportInfo>);


	inline jule::Bool _method_check_import(jule::Ref<_150f26340_ImportInfo>);


	inline void _method_check_imports(void);


	inline void _method_impl_file_impls(void);


	inline void _method_impl_impls(void);


	inline void _method_check_enums(void);


	inline jule::Bool _method_check_type_with_refers(jule::Ref<_15177b070_TypeSymbol>,jule::Trait<_1517fbd60_Lookup>,jule::Ref<_15177b070_Referencer>);


	inline jule::Bool _method_check_type(jule::Ref<_15177b070_TypeSymbol>,jule::Trait<_1517fbd60_Lookup>);


	inline jule::Ref<_15177b070_TypeKind> _method_build_type_with_generics(jule::Ref<_1506406d0_TypeDecl>,jule::Slice<jule::Ref<_15177b070_TypeAlias>>);


	inline jule::Ref<_15177b070_TypeKind> _method_build_type(jule::Ref<_1506406d0_TypeDecl>);


	inline jule::Ref<_151290fd0_Data> _method_evalpd(jule::Ref<_1506406d0_Expr>,jule::Trait<_1517fbd60_Lookup>,jule::Ref<_15177b070_TypeKind>,jule::Ref<_1511317d0_Var>);


	inline jule::Ref<_151290fd0_Data> _method_evalp(jule::Ref<_1506406d0_Expr>,jule::Trait<_1517fbd60_Lookup>,jule::Ref<_15177b070_TypeKind>);


	inline jule::Ref<_151290fd0_Data> _method_eval(jule::Ref<_1506406d0_Expr>,jule::Trait<_1517fbd60_Lookup>);


	inline void _method_check_assign_type(jule::Ref<_15177b070_TypeKind>,jule::Ref<_151290fd0_Data>,_150640f50_Token,jule::Bool);


	inline jule::Bool _method_check_type_compatibility(jule::Ref<_15177b070_TypeKind>,jule::Ref<_15177b070_TypeKind>,_150640f50_Token,jule::Bool);


	inline jule::Ref<_15177b070_TypeKind> _method_build_non_generic_type_kind(jule::Ref<_1506406d0_TypeDecl>,jule::Slice<jule::Ref<_1506406d0_GenericDecl>>);


	inline void _method_build_fn_non_generic_type_kinds(jule::Ref<_15081bcd0_FnIns>);


	inline jule::Ref<_15081bcd0_FnIns> _method_get_trait_check_fn_kind(jule::Ref<_15081bcd0_Fn>);


	inline jule::Bool _method_reload_fn_ins_types(jule::Ref<_15081bcd0_FnIns>);


	inline void _method_check_validity_for_init_expr(jule::Bool,jule::Bool,jule::Ref<_15177b070_TypeKind>,jule::Ref<_151290fd0_Data>,_150640f50_Token);


	inline jule::Bool _method_check_type_alias_decl_kind(jule::Ref<_15177b070_TypeAlias>,jule::Trait<_1517fbd60_Lookup>);


	inline void _method_check_type_alias_decl(jule::Ref<_15177b070_TypeAlias>,jule::Trait<_1517fbd60_Lookup>);


	inline void _method_check_type_alias_decl_dup(jule::Ref<_15177b070_TypeAlias>);


	inline jule::Bool _method_check_type_alias_decls(void);


	inline void _method_check_enum_items_dup(jule::Ref<_150f1c930_Enum>);


	inline void _method_check_enum_items_str(jule::Ref<_150f1c930_Enum>);


	inline void _method_check_enum_items_int(jule::Ref<_150f1c930_Enum>);


	inline void _method_check_enum_decl(jule::Ref<_150f1c930_Enum>);


	inline jule::Bool _method_check_enum_decls(void);


	inline jule::Bool _method_check_decl_generics(jule::Slice<jule::Ref<_1506406d0_GenericDecl>>);


	inline jule::Bool _method_check_fn_decl_params_dup(jule::Ref<_15081bcd0_Fn>);


	inline jule::Bool _method_check_fn_decl_result_dup(jule::Ref<_15081bcd0_Fn>);


	inline jule::Bool _method_check_fn_decl_types(jule::Ref<_15081bcd0_Fn>);


	inline jule::Bool _method_check_fn_decl_prototype(jule::Ref<_15081bcd0_Fn>);


	inline void _method_check_trait_decl_method(jule::Ref<_15081bcd0_Fn>);


	inline void _method_check_trait_decl_methods(jule::Ref<_150f166e0_Trait>);


	inline void _method_check_trait_decl(jule::Ref<_150f166e0_Trait>);


	inline jule::Bool _method_check_trait_decls(void);


	inline jule::Bool _method_check_trait_impl_methods(jule::Ref<_150f166e0_Trait>,jule::Ref<_150f235a0_Impl>);


	inline jule::Bool _method_impl_to_struct(jule::Ref<_150a13110_Struct>,jule::Ref<_150f235a0_Impl>);


	inline void _method_impl_trait(jule::Ref<_150f235a0_Impl>);


	inline void _method_impl_struct(jule::Ref<_150f235a0_Impl>);


	inline void _method_impl_impl(jule::Ref<_150f235a0_Impl>);


	inline void _method_check_var_decl(jule::Ref<_1511317d0_Var>,jule::Trait<_1517fbd60_Lookup>);


	inline void _method_check_global_var_decl(jule::Ref<_1511317d0_Var>);


	inline jule::Bool _method_check_global_decls(void);


	inline jule::Bool _method_check_struct_trait_impl(jule::Ref<_150a13110_Struct>,jule::Ref<_150f166e0_Trait>);


	inline jule::Bool _method_check_struct_impls(jule::Ref<_150a13110_Struct>);


	inline jule::Bool _method_check_struct_fields(jule::Ref<_150a13110_Struct>);


	inline void _method_check_struct_decl(jule::Ref<_150a13110_Struct>);


	inline jule::Bool _method_check_struct_decls(void);


	inline void _method_check_fn_decl(jule::Ref<_15081bcd0_Fn>);


	inline jule::Bool _method_check_fn_decls(void);


	inline jule::Bool _method_check_directive_pass(_150e75a70_Pass);


	inline jule::Bool _method_check_passes(void);


	inline void _method_push_cycle_error(jule::Ref<_150a13110_Struct>,jule::Ref<_150a13110_Struct>,jule::Str&);


	inline jule::Bool _method_check_cross_cycle(jule::Ref<_150a13110_Struct>,jule::Ref<_150a13110_Struct>,jule::Str&);


	inline jule::Bool _method_check_struct_derive_illegal_cycles(jule::Str,jule::Ref<_150a13110_Struct>,jule::Ref<_15177b070_TypeKind>);


	inline jule::Bool _method_check_struct_ins_derive_clone(jule::Ref<_150a13110_StructIns>);


	inline jule::Bool _method_check_struct_derive_clone(jule::Ref<_150a13110_Struct>);


	inline jule::Bool _method_check_file_derives(void);


	inline void _method_check_package_derives(void);


	inline void _method_check_package_decls(void);


	inline void _method_check_data_for_type_inference(jule::Ref<_151290fd0_Data>,_150640f50_Token);


	inline void _method_check_var(jule::Ref<_1511317d0_Var>);


	inline void _method_check_type_var(jule::Ref<_1511317d0_Var>,jule::Trait<_1517fbd60_Lookup>);


	inline void _method_check_global_types(void);


	inline void _method_check_type_method(jule::Ref<_150a13110_StructIns>,jule::Ref<_15081bcd0_Fn>);


	inline void _method_check_type_struct(jule::Ref<_150a13110_Struct>);


	inline void _method_check_struct_types(void);


	inline void _method_check_rets(jule::Ref<_15081bcd0_FnIns>);


	inline void _method_check_fn_ins_sc(jule::Ref<_15081bcd0_FnIns>,jule::Ref<_150d29660_ScopeChecker>);


	inline void _method_check_fn_ins(jule::Ref<_15081bcd0_FnIns>);


	inline void _method_check_type_fn(jule::Ref<_15081bcd0_Fn>);


	inline void _method_precheck_type_fn(jule::Ref<_15081bcd0_Fn>);


	inline jule::Bool _method_precheck_fn_types(void);


	inline jule::Bool _method_check_fn_types(void);


	inline void _method_check_package_types(void);


	inline void _method_set_file_sema_fields(void);


	inline void _method_set_sema_fields(void);


	inline void _method_check(jule::Slice<jule::Ref<_15128c4d0_SymbolTable>>);


	inline bool operator==(const _1510c9150_Sema &_Src) const {
		return 
			this->_field_errors == _Src._field_errors &&
			this->_field_files == _Src._field_files &&
			this->_field_file == _Src._field_file;
	}

	inline bool operator!=(const _1510c9150_Sema &_Src) const { return !this->operator==(_Src); }
};


struct _1510d19a0_DynamicTypeAnnotation {
	jule::Ref<_1510d19a0_DynamicTypeAnnotation> self{};

	jule::Ref<_151290fd0_Eval> _field_e{jule::Ref<_151290fd0_Eval>()};
	jule::Ref<_15081bcd0_FnIns> _field_f{jule::Ref<_15081bcd0_FnIns>()};
	jule::Ref<_15081bcd0_ParamIns> _field_p{jule::Ref<_15081bcd0_ParamIns>()};
	jule::Ref<_151290fd0_Data> _field_a{jule::Ref<_151290fd0_Data>()};
	_150640f50_Token _field_error_token{_150640f50_Token()};
	_15177b070_TypeKind** _field_k{nullptr};


	_1510d19a0_DynamicTypeAnnotation(jule::Ref<_151290fd0_Eval> __param_e, jule::Ref<_15081bcd0_FnIns> __param_f, jule::Ref<_15081bcd0_ParamIns> __param_p, jule::Ref<_151290fd0_Data> __param_a, _150640f50_Token __param_error_token, _15177b070_TypeKind** __param_k) {
		this->self = jule::Ref<_1510d19a0_DynamicTypeAnnotation>::make(this, nullptr);

		this->_field_e = __param_e;
		this->_field_f = __param_f;
		this->_field_p = __param_p;
		this->_field_a = __param_a;
		this->_field_error_token = __param_error_token;
		this->_field_k = __param_k;
	}

	~_1510d19a0_DynamicTypeAnnotation(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1510d19a0_DynamicTypeAnnotation(void) { this->self = jule::Ref<_1510d19a0_DynamicTypeAnnotation>::make(this, nullptr); }

	inline void _method_push_generic(jule::Ref<_15177b070_TypeKind>,jule::Int);


	inline jule::Bool _method_annotate_prim(jule::Ref<_15177b070_TypeKind>);


	inline jule::Bool _method_annotate_slc(jule::Ref<_15177b070_TypeKind>);


	inline jule::Bool _method_check_map_key(_15177b070_TypeKind**,jule::Ref<_15177b070_TypeKind>);


	inline jule::Bool _method_annotate_map(jule::Ref<_15177b070_TypeKind>);


	inline jule::Bool _method_annotate_fn(jule::Ref<_15177b070_TypeKind>);


	inline jule::Bool _method_annotate_ptr(jule::Ref<_15177b070_TypeKind>);


	inline jule::Bool _method_annotate_any(jule::Ref<_15177b070_TypeKind>);


	inline jule::Bool _method_annotate_kind(jule::Ref<_15177b070_TypeKind>);


	inline jule::Bool _method_annotate(void);


	inline bool operator==(const _1510d19a0_DynamicTypeAnnotation &_Src) const {
		return 
			this->_field_e == _Src._field_e &&
			this->_field_f == _Src._field_f &&
			this->_field_p == _Src._field_p &&
			this->_field_a == _Src._field_a &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_k == _Src._field_k;
	}

	inline bool operator!=(const _1510d19a0_DynamicTypeAnnotation &_Src) const { return !this->operator==(_Src); }
};


struct _1510d19a0_StructLitChecker {
	jule::Ref<_1510d19a0_StructLitChecker> self{};

	jule::Ref<_151290fd0_Eval> _field_e{jule::Ref<_151290fd0_Eval>()};
	_150640f50_Token _field_error_token{_150640f50_Token()};
	jule::Ref<_150a13110_StructIns> _field_s{jule::Ref<_150a13110_StructIns>()};
	jule::Slice<jule::Ref<_150f25dd0_StructArgExprModel>> _field_args{jule::Slice<jule::Ref<_150f25dd0_StructArgExprModel>>()};


	_1510d19a0_StructLitChecker(jule::Ref<_151290fd0_Eval> __param_e, _150640f50_Token __param_error_token, jule::Ref<_150a13110_StructIns> __param_s, jule::Slice<jule::Ref<_150f25dd0_StructArgExprModel>> __param_args) {
		this->self = jule::Ref<_1510d19a0_StructLitChecker>::make(this, nullptr);

		this->_field_e = __param_e;
		this->_field_error_token = __param_error_token;
		this->_field_s = __param_s;
		this->_field_args = __param_args;
	}

	~_1510d19a0_StructLitChecker(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1510d19a0_StructLitChecker(void) { this->self = jule::Ref<_1510d19a0_StructLitChecker>::make(this, nullptr); }

	inline void _method_push_err(_150640f50_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_suggest(jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_match(jule::Ref<_150a13110_FieldIns>,jule::Ref<_151290fd0_Data>,_150640f50_Token);


	inline void _method_check_pair(jule::Ref<_1506406d0_FieldExprPair>,jule::Slice<jule::Any>);


	inline jule::Bool _method_ready_exprs(jule::Slice<jule::Any>);


	inline void _method_check(jule::Slice<jule::Any>);


	inline bool operator==(const _1510d19a0_StructLitChecker &_Src) const {
		return 
			this->_field_e == _Src._field_e &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_s == _Src._field_s &&
			this->_field_args == _Src._field_args;
	}

	inline bool operator!=(const _1510d19a0_StructLitChecker &_Src) const { return !this->operator==(_Src); }
};


struct _1510d19a0_RangeChecker {
	jule::Ref<_1510d19a0_RangeChecker> self{};

	jule::Ref<_150d29660_ScopeChecker> _field_sc{jule::Ref<_150d29660_ScopeChecker>()};
	jule::Ref<_1506406d0_RangeKind> _field_rang{jule::Ref<_1506406d0_RangeKind>()};
	jule::Ref<_150d29660_RangeIter> _field_kind{jule::Ref<_150d29660_RangeIter>()};
	jule::Ref<_151290fd0_Data> _field_d{jule::Ref<_151290fd0_Data>()};


	_1510d19a0_RangeChecker(jule::Ref<_150d29660_ScopeChecker> __param_sc, jule::Ref<_1506406d0_RangeKind> __param_rang, jule::Ref<_150d29660_RangeIter> __param_kind, jule::Ref<_151290fd0_Data> __param_d) {
		this->self = jule::Ref<_1510d19a0_RangeChecker>::make(this, nullptr);

		this->_field_sc = __param_sc;
		this->_field_rang = __param_rang;
		this->_field_kind = __param_kind;
		this->_field_d = __param_d;
	}

	~_1510d19a0_RangeChecker(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1510d19a0_RangeChecker(void) { this->self = jule::Ref<_1510d19a0_RangeChecker>::make(this, nullptr); }

	inline jule::Ref<_1511317d0_Var> _method_build_var(jule::Ref<_1506406d0_VarDecl>);


	inline void _method_set_size_key(void);


	inline void _method_check_slice(void);


	inline void _method_check_array(void);


	inline void _method_check_map_key_a(void);


	inline void _method_check_map_key_b(void);


	inline void _method_check_map(void);


	inline void _method_check_str(void);


	inline jule::Bool _method_check(void);


	inline bool operator==(const _1510d19a0_RangeChecker &_Src) const {
		return 
			this->_field_sc == _Src._field_sc &&
			this->_field_rang == _Src._field_rang &&
			this->_field_kind == _Src._field_kind &&
			this->_field_d == _Src._field_d;
	}

	inline bool operator!=(const _1510d19a0_RangeChecker &_Src) const { return !this->operator==(_Src); }
};


struct _151290fd0_Data {
	jule::Ref<_151290fd0_Data> self{};

	jule::Ref<_15177b070_TypeKind> _field_kind{jule::Ref<_15177b070_TypeKind>()};
	jule::Ref<_15177b070_TypeKind> _field_cast_kind{jule::Ref<_15177b070_TypeKind>()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Bool _field_reference{jule::Bool()};
	jule::Bool _field_lvalue{jule::Bool()};
	jule::Bool _field_variadiced{jule::Bool()};
	jule::Bool _field_is_rune{jule::Bool()};
	jule::Any _field_model{jule::Any()};
	jule::Bool _field_decl{jule::Bool()};
	jule::Ref<_15199b440_Const> _field_constant{jule::Ref<_15199b440_Const>()};


	_151290fd0_Data(jule::Ref<_15177b070_TypeKind> __param_kind, jule::Ref<_15177b070_TypeKind> __param_cast_kind, jule::Bool __param_mutable, jule::Bool __param_reference, jule::Bool __param_lvalue, jule::Bool __param_variadiced, jule::Bool __param_is_rune, jule::Any __param_model, jule::Bool __param_decl, jule::Ref<_15199b440_Const> __param_constant) {
		this->self = jule::Ref<_151290fd0_Data>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_cast_kind = __param_cast_kind;
		this->_field_mutable = __param_mutable;
		this->_field_reference = __param_reference;
		this->_field_lvalue = __param_lvalue;
		this->_field_variadiced = __param_variadiced;
		this->_field_is_rune = __param_is_rune;
		this->_field_model = __param_model;
		this->_field_decl = __param_decl;
		this->_field_constant = __param_constant;
	}

	~_151290fd0_Data(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_151290fd0_Data(void) { this->self = jule::Ref<_151290fd0_Data>::make(this, nullptr); }

	inline jule::Bool _method_is_nil(void);


	inline jule::Bool _method_is_void(void);


	inline jule::Bool _method_is_const(void);


	inline bool operator==(const _151290fd0_Data &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_cast_kind == _Src._field_cast_kind &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_reference == _Src._field_reference &&
			this->_field_lvalue == _Src._field_lvalue &&
			this->_field_variadiced == _Src._field_variadiced &&
			this->_field_is_rune == _Src._field_is_rune &&
			this->_field_model == _Src._field_model &&
			this->_field_decl == _Src._field_decl &&
			this->_field_constant == _Src._field_constant;
	}

	inline bool operator!=(const _151290fd0_Data &_Src) const { return !this->operator==(_Src); }
};


struct _151290fd0_Value {
	jule::Ref<_151290fd0_Value> self{};

	jule::Ref<_1506406d0_Expr> _field_expr{jule::Ref<_1506406d0_Expr>()};
	jule::Ref<_151290fd0_Data> _field_data{jule::Ref<_151290fd0_Data>()};


	_151290fd0_Value(jule::Ref<_1506406d0_Expr> __param_expr, jule::Ref<_151290fd0_Data> __param_data) {
		this->self = jule::Ref<_151290fd0_Value>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_data = __param_data;
	}

	~_151290fd0_Value(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_151290fd0_Value(void) { this->self = jule::Ref<_151290fd0_Value>::make(this, nullptr); }

	inline bool operator==(const _151290fd0_Value &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_data == _Src._field_data;
	}

	inline bool operator!=(const _151290fd0_Value &_Src) const { return !this->operator==(_Src); }
};


struct _151290fd0_Eval {
	jule::Ref<_151290fd0_Eval> self{};

	jule::Ref<_1510c9150_Sema> _field_s{jule::Ref<_1510c9150_Sema>()};
	jule::Trait<_1517fbd60_Lookup> _field_lookup{jule::Trait<_1517fbd60_Lookup>()};
	jule::Ref<_15177b070_TypeKind> _field_prefix{jule::Ref<_15177b070_TypeKind>()};
	jule::Bool _field_unsafety{jule::Bool()};
	jule::Ref<_1511317d0_Var> _field_owner{jule::Ref<_1511317d0_Var>()};


	_151290fd0_Eval(jule::Ref<_1510c9150_Sema> __param_s, jule::Trait<_1517fbd60_Lookup> __param_lookup, jule::Ref<_15177b070_TypeKind> __param_prefix, jule::Bool __param_unsafety, jule::Ref<_1511317d0_Var> __param_owner) {
		this->self = jule::Ref<_151290fd0_Eval>::make(this, nullptr);

		this->_field_s = __param_s;
		this->_field_lookup = __param_lookup;
		this->_field_prefix = __param_prefix;
		this->_field_unsafety = __param_unsafety;
		this->_field_owner = __param_owner;
	}

	~_151290fd0_Eval(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_151290fd0_Eval(void) { this->self = jule::Ref<_151290fd0_Eval>::make(this, nullptr); }

	inline void _method_push_err(_150640f50_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_suggest(jule::Str,jule::Slice<jule::Any>);


	inline jule::Bool _method_is_unsafe(void);


	inline jule::Bool _method_is_global(void);


	inline jule::Ref<_151290fd0_Data> _method_lit_nil(void);


	inline jule::Ref<_151290fd0_Data> _method_lit_str(jule::Ref<_1506406d0_LitExpr>);


	inline jule::Ref<_151290fd0_Data> _method_lit_bool(jule::Ref<_1506406d0_LitExpr>);


	inline jule::Ref<_151290fd0_Data> _method_lit_rune(jule::Ref<_1506406d0_LitExpr>);


	inline jule::Ref<_151290fd0_Data> _method_lit_float(jule::Ref<_1506406d0_LitExpr>);


	inline jule::Ref<_151290fd0_Data> _method_lit_int(jule::Ref<_1506406d0_LitExpr>);


	inline jule::Ref<_151290fd0_Data> _method_lit_num(jule::Ref<_1506406d0_LitExpr>);


	inline jule::Ref<_151290fd0_Data> _method_eval_lit(jule::Ref<_1506406d0_LitExpr>);


	inline jule::Any _method_find_builtins(jule::Str);


	inline jule::Any _method_get_def(jule::Str,jule::Bool);


	inline void _method_push_reference(jule::Ref<_150e75a70_ReferenceStack>);


	inline void _method_push_reference_to_fn(jule::Ref<_15081bcd0_FnIns>);


	inline void _method_push_reference_to_var(jule::Ref<_1511317d0_Var>);


	inline void _method_push_reference_to_struct(jule::Ref<_150a13110_StructIns>);


	inline jule::Ref<_151290fd0_Data> _method_eval_enum(jule::Ref<_150f1c930_Enum>,_150640f50_Token);


	inline jule::Ref<_151290fd0_Data> _method_eval_struct(jule::Ref<_150a13110_StructIns>,_150640f50_Token);


	inline jule::Ref<_151290fd0_Data> _method_eval_fn_ins(jule::Ref<_15081bcd0_FnIns>);


	inline jule::Ref<_151290fd0_Data> _method_eval_fn(jule::Ref<_15081bcd0_Fn>,_150640f50_Token);


	inline void _method_push_illegal_cycle_error(jule::Ref<_1511317d0_Var>,jule::Ref<_1511317d0_Var>,jule::Str&);


	inline jule::Bool _method_check_cross_cycle(jule::Ref<_1511317d0_Var>,jule::Str&);


	inline jule::Bool _method_check_illegal_cycles(jule::Ref<_1511317d0_Var>,_150640f50_Token);


	inline jule::Ref<_151290fd0_Data> _method_eval_var(jule::Ref<_1511317d0_Var>,_150640f50_Token);


	inline jule::Ref<_151290fd0_Data> _method_eval_type_alias(jule::Ref<_15177b070_TypeAlias>,_150640f50_Token);


	inline jule::Ref<_151290fd0_Data> _method_eval_def(jule::Any,_150640f50_Token);


	inline jule::Ref<_151290fd0_Data> _method_eval_ident(jule::Ref<_1506406d0_IdentExpr>);


	inline jule::Ref<_151290fd0_Data> _method_eval_unary_minus(jule::Ref<_151290fd0_Data>);


	inline jule::Ref<_151290fd0_Data> _method_eval_unary_plus(jule::Ref<_151290fd0_Data>);


	inline jule::Ref<_151290fd0_Data> _method_eval_unary_caret(jule::Ref<_151290fd0_Data>);


	inline jule::Ref<_151290fd0_Data> _method_eval_unary_excl(jule::Ref<_151290fd0_Data>);


	inline jule::Ref<_151290fd0_Data> _method_eval_unary_star(jule::Ref<_151290fd0_Data>,_150640f50_Token);


	inline jule::Ref<_151290fd0_Data> _method_eval_unary_amper(jule::Ref<_151290fd0_Data>);


	inline jule::Ref<_151290fd0_Data> _method_eval_unary_type_decl(jule::Ref<_151290fd0_Data>,jule::Ref<_1506406d0_UnaryExpr>);


	inline jule::Ref<_151290fd0_Data> _method_eval_unary(jule::Ref<_1506406d0_UnaryExpr>);


	inline jule::Ref<_151290fd0_Data> _method_eval_variadic(jule::Ref<_1506406d0_VariadicExpr>);


	inline jule::Ref<_151290fd0_Data> _method_eval_unsafe(jule::Ref<_1506406d0_UnsafeExpr>);


	inline jule::Ref<_151290fd0_Data> _method_eval_arr(jule::Ref<_1506406d0_SliceExpr>);


	inline jule::Ref<_151290fd0_Data> _method_eval_exp_slc(jule::Ref<_1506406d0_SliceExpr>,jule::Ref<_15177b070_TypeKind>);


	inline jule::Ref<_151290fd0_Data> _method_eval_slice_expr(jule::Ref<_1506406d0_SliceExpr>);


	inline void _method_check_integer_indexing_by_data(jule::Ref<_151290fd0_Data>,_150640f50_Token);


	inline void _method_indexing_ptr(jule::Ref<_151290fd0_Data>,jule::Ref<_151290fd0_Data>,jule::Ref<_1506406d0_IndexingExpr>);


	inline void _method_indexing_arr(jule::Ref<_151290fd0_Data>,jule::Ref<_151290fd0_Data>,jule::Ref<_1506406d0_IndexingExpr>);


	inline void _method_indexing_slc(jule::Ref<_151290fd0_Data>,jule::Ref<_151290fd0_Data>,jule::Ref<_1506406d0_IndexingExpr>);


	inline void _method_indexing_map(jule::Ref<_151290fd0_Data>,jule::Ref<_151290fd0_Data>,jule::Ref<_1506406d0_IndexingExpr>);


	inline void _method_indexing_str(jule::Ref<_151290fd0_Data>,jule::Ref<_151290fd0_Data>,jule::Ref<_1506406d0_IndexingExpr>);


	inline void _method_to_indexing(jule::Ref<_151290fd0_Data>,jule::Ref<_151290fd0_Data>,jule::Ref<_1506406d0_IndexingExpr>);


	inline jule::Ref<_151290fd0_Data> _method_eval_ident_decl_from_indexing(jule::Ref<_1506406d0_IndexingExpr>);


	inline jule::Ref<_151290fd0_Data> _method_eval_indexing(jule::Ref<_1506406d0_IndexingExpr>);


	inline std::tuple<jule::Ref<_151290fd0_Data>,jule::Ref<_151290fd0_Data>> _method_eval_slicing_exprs(jule::Ref<_1506406d0_SlicingExpr>);


	inline void _method_slicing_arr(jule::Ref<_151290fd0_Data>);


	inline void _method_slicing_slc(jule::Ref<_151290fd0_Data>);


	inline void _method_slicing_str(jule::Ref<_151290fd0_Data>,jule::Ref<_151290fd0_Data>,jule::Ref<_151290fd0_Data>);


	inline void _method_check_slicing(jule::Ref<_151290fd0_Data>,jule::Ref<_151290fd0_Data>,jule::Ref<_151290fd0_Data>,jule::Ref<_1506406d0_SlicingExpr>);


	inline jule::Ref<_151290fd0_Data> _method_eval_slicing(jule::Ref<_1506406d0_SlicingExpr>);


	inline void _method_cast_ptr(jule::Ref<_15177b070_TypeKind>,jule::Ref<_151290fd0_Data>,_150640f50_Token);


	inline void _method_cast_struct(jule::Ref<_15177b070_TypeKind>,jule::Ref<_151290fd0_Data>,_150640f50_Token);


	inline void _method_cast_ref(jule::Ref<_15177b070_TypeKind>,jule::Ref<_151290fd0_Data>,_150640f50_Token);


	inline void _method_cast_slc(jule::Ref<_15177b070_TypeKind>,jule::Ref<_151290fd0_Data>,_150640f50_Token);


	inline void _method_cast_str(jule::Ref<_151290fd0_Data>,_150640f50_Token);


	inline void _method_cast_int(jule::Ref<_15177b070_TypeKind>,jule::Ref<_151290fd0_Data>,_150640f50_Token);


	inline void _method_cast_num(jule::Ref<_15177b070_TypeKind>,jule::Ref<_151290fd0_Data>,_150640f50_Token);


	inline void _method_cast_prim(jule::Ref<_15177b070_TypeKind>,jule::Ref<_151290fd0_Data>,_150640f50_Token);


	inline jule::Ref<_151290fd0_Data> _method_eval_cast_by_type_n_data(jule::Ref<_15177b070_TypeKind>,jule::Ref<_151290fd0_Data>,_150640f50_Token);


	inline jule::Ref<_151290fd0_Data> _method_eval_cast(jule::Ref<_1506406d0_CastExpr>);


	inline jule::Ref<_151290fd0_Data> _method_eval_ns_selection(jule::Ref<_1506406d0_NsSelectionExpr>);


	inline jule::Ref<_151290fd0_Data> _method_eval_struct_lit_explicit(jule::Ref<_150a13110_StructIns>,jule::Slice<jule::Any>,_150640f50_Token);


	inline jule::Ref<_151290fd0_Data> _method_eval_struct_lit(jule::Ref<_1506406d0_StructLit>);


	inline jule::Ref<_151290fd0_Data> _method_eval_type(jule::Ref<_1506406d0_TypeDecl>);


	inline jule::Ref<_151290fd0_Data> _method_call_type_fn(jule::Ref<_1506406d0_FnCallExpr>,jule::Ref<_151290fd0_Data>);


	inline std::tuple<jule::Bool,jule::Bool> _method_check_fn_call_generics(jule::Ref<_15081bcd0_FnIns>,jule::Ref<_1506406d0_FnCallExpr>);


	inline jule::Ref<_151290fd0_Data> _method_call_builtin_fn(jule::Ref<_1506406d0_FnCallExpr>,jule::Ref<_151290fd0_Data>);


	inline void _method_check_fn_of_concurrent_call(jule::Ref<_15081bcd0_FnIns>&,_150640f50_Token);


	inline jule::Ref<_151290fd0_Data> _method_call_fn(jule::Ref<_1506406d0_FnCallExpr>,jule::Ref<_151290fd0_Data>);


	inline jule::Ref<_151290fd0_Data> _method_eval_fn_call(jule::Ref<_1506406d0_FnCallExpr>);


	inline jule::Ref<_151290fd0_Data> _method_eval_enum_static(jule::Ref<_150f1c930_Enum>,_150640f50_Token);


	inline jule::Ref<_151290fd0_Data> _method_eval_struct_static(jule::Ref<_150a13110_StructIns>,_150640f50_Token);


	inline jule::Ref<_151290fd0_Data> _method_eval_trait_sub_ident(jule::Ref<_151290fd0_Data>,jule::Ref<_150f166e0_Trait>,_150640f50_Token);


	inline jule::Ref<_151290fd0_Data> _method_eval_struct_sub_ident(jule::Ref<_151290fd0_Data>,jule::Ref<_150a13110_StructIns>,jule::Ref<_1506406d0_SubIdentExpr>,jule::Bool);


	inline jule::Ref<_151290fd0_Data> _method_eval_slice_sub_ident(jule::Ref<_151290fd0_Data>,_150640f50_Token);


	inline jule::Ref<_151290fd0_Data> _method_eval_array_sub_ident(jule::Ref<_151290fd0_Data>,_150640f50_Token);


	inline jule::Ref<_151290fd0_Data> _method_eval_map_sub_ident(jule::Ref<_151290fd0_Data>,_150640f50_Token);


	inline jule::Ref<_151290fd0_Data> _method_eval_str_sub_ident(jule::Ref<_151290fd0_Data>,_150640f50_Token);


	inline jule::Ref<_151290fd0_Data> _method_eval_int_type_static(_150640f50_Token);


	inline jule::Ref<_151290fd0_Data> _method_eval_uint_type_static(_150640f50_Token);


	inline jule::Ref<_151290fd0_Data> _method_eval_i8_type_static(_150640f50_Token);


	inline jule::Ref<_151290fd0_Data> _method_eval_i16_type_static(_150640f50_Token);


	inline jule::Ref<_151290fd0_Data> _method_eval_i32_type_static(_150640f50_Token);


	inline jule::Ref<_151290fd0_Data> _method_eval_i64_type_static(_150640f50_Token);


	inline jule::Ref<_151290fd0_Data> _method_eval_u8_type_static(_150640f50_Token);


	inline jule::Ref<_151290fd0_Data> _method_eval_u16_type_static(_150640f50_Token);


	inline jule::Ref<_151290fd0_Data> _method_eval_u32_type_static(_150640f50_Token);


	inline jule::Ref<_151290fd0_Data> _method_eval_u64_type_static(_150640f50_Token);


	inline jule::Ref<_151290fd0_Data> _method_eval_f32_type_tatic(_150640f50_Token);


	inline jule::Ref<_151290fd0_Data> _method_eval_f64_type_static(_150640f50_Token);


	inline jule::Ref<_151290fd0_Data> _method_eval_prim_static(jule::Str,_150640f50_Token);


	inline jule::Ref<_151290fd0_Data> _method_eval_type_static(jule::Ref<_151290fd0_Data>,jule::Ref<_1506406d0_SubIdentExpr>);


	inline jule::Ref<_151290fd0_Data> _method_eval_obj_sub_ident(jule::Ref<_151290fd0_Data>,jule::Ref<_1506406d0_SubIdentExpr>);


	inline jule::Ref<_151290fd0_Data> _method_eval_sub_ident(jule::Ref<_1506406d0_SubIdentExpr>);


	inline jule::Ref<_151290fd0_Data> _method_eval_tuple(jule::Ref<_1506406d0_TupleExpr>);


	inline jule::Ref<_151290fd0_Data> _method_eval_map(jule::Ref<_15177b070_Map>,jule::Ref<_1506406d0_BraceLit>);


	inline jule::Ref<_151290fd0_Data> _method_eval_brace_lit(jule::Ref<_1506406d0_BraceLit>);


	inline jule::Ref<_151290fd0_Data> _method_eval_anon_fn(jule::Ref<_1506406d0_FnDecl>);


	inline jule::Ref<_151290fd0_Data> _method_eval_binop(jule::Ref<_1506406d0_BinopExpr>);


	inline jule::Ref<_151290fd0_Data> _method_eval_expr_kind(jule::Any);


	inline jule::Ref<_151290fd0_Data> _method_eval(jule::Ref<_1506406d0_Expr>);


	inline jule::Ref<_151290fd0_Data> _method_eval_expr(jule::Ref<_1506406d0_Expr>);


	inline bool operator==(const _151290fd0_Eval &_Src) const {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_lookup == _Src._field_lookup &&
			this->_field_prefix == _Src._field_prefix &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_owner == _Src._field_owner;
	}

	inline bool operator!=(const _151290fd0_Eval &_Src) const { return !this->operator==(_Src); }
};


struct _15177b070_TypeKind: public _15177b070_Kind {
	jule::Ref<_15177b070_TypeKind> self{};

	jule::Str _field_cpp_ident{jule::Str()};
	jule::Bool _field_variadic{jule::Bool()};
	jule::Trait<_15177b070_Kind> _field_kind{jule::Trait<_15177b070_Kind>()};


	_15177b070_TypeKind(jule::Str __param_cpp_ident, jule::Bool __param_variadic, jule::Trait<_15177b070_Kind> __param_kind) {
		this->self = jule::Ref<_15177b070_TypeKind>::make(this, nullptr);

		this->_field_cpp_ident = __param_cpp_ident;
		this->_field_variadic = __param_variadic;
		this->_field_kind = __param_kind;
	}

	~_15177b070_TypeKind(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_15177b070_TypeKind(void) { this->self = jule::Ref<_15177b070_TypeKind>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_15177b070_TypeKind>);


	inline jule::Ref<_15177b070_TypeKind> _method_clone(void);


	inline jule::Bool _method_is_cpp_linked(void);


	inline jule::Bool _method_is_nil(void);


	inline jule::Bool _method_is_void(void);


	inline jule::Ref<_15177b070_Prim> _method_prim(void);


	inline jule::Ref<_15177b070_Ref> _method_ref(void);


	inline jule::Ref<_15177b070_Ptr> _method_ptr(void);


	inline jule::Ref<_150f1c930_Enum> _method_enm(void);


	inline jule::Ref<_15177b070_Arr> _method_arr(void);


	inline jule::Ref<_15177b070_Slc> _method_slc(void);


	inline jule::Ref<_15081bcd0_FnIns> _method_fnc(void);


	inline jule::Ref<_150a13110_StructIns> _method_strct(void);


	inline jule::Ref<_150f166e0_Trait> _method_trt(void);


	inline jule::Ref<_15177b070_Map> _method_map(void);


	inline jule::Ref<_15177b070_Tuple> _method_tup(void);


	inline bool operator==(const _15177b070_TypeKind &_Src) const {
		return 
			this->_field_cpp_ident == _Src._field_cpp_ident &&
			this->_field_variadic == _Src._field_variadic &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _15177b070_TypeKind &_Src) const { return !this->operator==(_Src); }
};


struct _15177b070_TypeSymbol {
	jule::Ref<_15177b070_TypeSymbol> self{};

	jule::Ref<_1506406d0_TypeDecl> _field_decl{jule::Ref<_1506406d0_TypeDecl>()};
	jule::Ref<_15177b070_TypeKind> _field_kind{jule::Ref<_15177b070_TypeKind>()};


	_15177b070_TypeSymbol(jule::Ref<_1506406d0_TypeDecl> __param_decl, jule::Ref<_15177b070_TypeKind> __param_kind) {
		this->self = jule::Ref<_15177b070_TypeSymbol>::make(this, nullptr);

		this->_field_decl = __param_decl;
		this->_field_kind = __param_kind;
	}

	~_15177b070_TypeSymbol(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_15177b070_TypeSymbol(void) { this->self = jule::Ref<_15177b070_TypeSymbol>::make(this, nullptr); }

	inline jule::Bool _method_checked(void);


	inline void _method_remove_kind(void);


	inline bool operator==(const _15177b070_TypeSymbol &_Src) const {
		return 
			this->_field_decl == _Src._field_decl &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _15177b070_TypeSymbol &_Src) const { return !this->operator==(_Src); }
};


struct _15177b070_Prim: public _15177b070_Kind {
	jule::Ref<_15177b070_Prim> self{};

	jule::Str _field_kind{jule::Str()};


	_15177b070_Prim(jule::Str __param_kind) {
		this->self = jule::Ref<_15177b070_Prim>::make(this, nullptr);

		this->_field_kind = __param_kind;
	}

	~_15177b070_Prim(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_15177b070_Prim(void) { this->self = jule::Ref<_15177b070_Prim>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_15177b070_TypeKind>);


	inline jule::Bool _method_is_i8(void);


	inline jule::Bool _method_is_i16(void);


	inline jule::Bool _method_is_i32(void);


	inline jule::Bool _method_is_i64(void);


	inline jule::Bool _method_is_u8(void);


	inline jule::Bool _method_is_u16(void);


	inline jule::Bool _method_is_u32(void);


	inline jule::Bool _method_is_u64(void);


	inline jule::Bool _method_is_f32(void);


	inline jule::Bool _method_is_f64(void);


	inline jule::Bool _method_is_int(void);


	inline jule::Bool _method_is_uint(void);


	inline jule::Bool _method_is_uintptr(void);


	inline jule::Bool _method_is_bool(void);


	inline jule::Bool _method_is_str(void);


	inline jule::Bool _method_is_any(void);


	inline bool operator==(const _15177b070_Prim &_Src) const {
		return 
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _15177b070_Prim &_Src) const { return !this->operator==(_Src); }
};


struct _15177b070_Ref: public _15177b070_Kind {
	jule::Ref<_15177b070_Ref> self{};

	jule::Ref<_15177b070_TypeKind> _field_elem{jule::Ref<_15177b070_TypeKind>()};


	_15177b070_Ref(jule::Ref<_15177b070_TypeKind> __param_elem) {
		this->self = jule::Ref<_15177b070_Ref>::make(this, nullptr);

		this->_field_elem = __param_elem;
	}

	~_15177b070_Ref(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_15177b070_Ref(void) { this->self = jule::Ref<_15177b070_Ref>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_15177b070_TypeKind>);


	inline bool operator==(const _15177b070_Ref &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _15177b070_Ref &_Src) const { return !this->operator==(_Src); }
};


struct _15177b070_Slc: public _15177b070_Kind {
	jule::Ref<_15177b070_Slc> self{};

	jule::Ref<_15177b070_TypeKind> _field_elem{jule::Ref<_15177b070_TypeKind>()};


	_15177b070_Slc(jule::Ref<_15177b070_TypeKind> __param_elem) {
		this->self = jule::Ref<_15177b070_Slc>::make(this, nullptr);

		this->_field_elem = __param_elem;
	}

	~_15177b070_Slc(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_15177b070_Slc(void) { this->self = jule::Ref<_15177b070_Slc>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_15177b070_TypeKind>);


	inline bool operator==(const _15177b070_Slc &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _15177b070_Slc &_Src) const { return !this->operator==(_Src); }
};


struct _15177b070_Tuple: public _15177b070_Kind {
	jule::Ref<_15177b070_Tuple> self{};

	jule::Slice<jule::Ref<_15177b070_TypeKind>> _field_types{jule::Slice<jule::Ref<_15177b070_TypeKind>>()};


	_15177b070_Tuple(jule::Slice<jule::Ref<_15177b070_TypeKind>> __param_types) {
		this->self = jule::Ref<_15177b070_Tuple>::make(this, nullptr);

		this->_field_types = __param_types;
	}

	~_15177b070_Tuple(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_15177b070_Tuple(void) { this->self = jule::Ref<_15177b070_Tuple>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_15177b070_TypeKind>);


	inline bool operator==(const _15177b070_Tuple &_Src) const {
		return 
			this->_field_types == _Src._field_types;
	}

	inline bool operator!=(const _15177b070_Tuple &_Src) const { return !this->operator==(_Src); }
};


struct _15177b070_Map: public _15177b070_Kind {
	jule::Ref<_15177b070_Map> self{};

	jule::Ref<_15177b070_TypeKind> _field_key{jule::Ref<_15177b070_TypeKind>()};
	jule::Ref<_15177b070_TypeKind> _field_val{jule::Ref<_15177b070_TypeKind>()};


	_15177b070_Map(jule::Ref<_15177b070_TypeKind> __param_key, jule::Ref<_15177b070_TypeKind> __param_val) {
		this->self = jule::Ref<_15177b070_Map>::make(this, nullptr);

		this->_field_key = __param_key;
		this->_field_val = __param_val;
	}

	~_15177b070_Map(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_15177b070_Map(void) { this->self = jule::Ref<_15177b070_Map>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_15177b070_TypeKind>);


	inline bool operator==(const _15177b070_Map &_Src) const {
		return 
			this->_field_key == _Src._field_key &&
			this->_field_val == _Src._field_val;
	}

	inline bool operator!=(const _15177b070_Map &_Src) const { return !this->operator==(_Src); }
};


struct _15177b070_Arr: public _15177b070_Kind {
	jule::Ref<_15177b070_Arr> self{};

	jule::Bool _field_auto{jule::Bool()};
	jule::Int _field_n{jule::Int()};
	jule::Ref<_15177b070_TypeKind> _field_elem{jule::Ref<_15177b070_TypeKind>()};


	_15177b070_Arr(jule::Bool __param_auto, jule::Int __param_n, jule::Ref<_15177b070_TypeKind> __param_elem) {
		this->self = jule::Ref<_15177b070_Arr>::make(this, nullptr);

		this->_field_auto = __param_auto;
		this->_field_n = __param_n;
		this->_field_elem = __param_elem;
	}

	~_15177b070_Arr(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_15177b070_Arr(void) { this->self = jule::Ref<_15177b070_Arr>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_15177b070_TypeKind>);


	inline bool operator==(const _15177b070_Arr &_Src) const {
		return 
			this->_field_auto == _Src._field_auto &&
			this->_field_n == _Src._field_n &&
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _15177b070_Arr &_Src) const { return !this->operator==(_Src); }
};


struct _15177b070_Ptr: public _15177b070_Kind {
	jule::Ref<_15177b070_Ptr> self{};

	jule::Ref<_15177b070_TypeKind> _field_elem{jule::Ref<_15177b070_TypeKind>()};


	_15177b070_Ptr(jule::Ref<_15177b070_TypeKind> __param_elem) {
		this->self = jule::Ref<_15177b070_Ptr>::make(this, nullptr);

		this->_field_elem = __param_elem;
	}

	~_15177b070_Ptr(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_15177b070_Ptr(void) { this->self = jule::Ref<_15177b070_Ptr>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_15177b070_TypeKind>);


	inline jule::Bool _method_is_unsafe(void);


	inline bool operator==(const _15177b070_Ptr &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _15177b070_Ptr &_Src) const { return !this->operator==(_Src); }
};


struct _15177b070_Referencer {
	jule::Ref<_15177b070_Referencer> self{};

	jule::Str _field_ident{jule::Str()};
	jule::Any _field_owner{jule::Any()};
	jule::Slice<jule::Any>* _field_refs{nullptr};


	_15177b070_Referencer(jule::Str __param_ident, jule::Any __param_owner, jule::Slice<jule::Any>* __param_refs) {
		this->self = jule::Ref<_15177b070_Referencer>::make(this, nullptr);

		this->_field_ident = __param_ident;
		this->_field_owner = __param_owner;
		this->_field_refs = __param_refs;
	}

	~_15177b070_Referencer(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_15177b070_Referencer(void) { this->self = jule::Ref<_15177b070_Referencer>::make(this, nullptr); }

	inline bool operator==(const _15177b070_Referencer &_Src) const {
		return 
			this->_field_ident == _Src._field_ident &&
			this->_field_owner == _Src._field_owner &&
			this->_field_refs == _Src._field_refs;
	}

	inline bool operator!=(const _15177b070_Referencer &_Src) const { return !this->operator==(_Src); }
};


struct _1503de590_PlainImporter: public _150f26340_Importer {
	jule::Ref<_1503de590_PlainImporter> self{};

	jule::Slice<jule::Ref<_150f26340_ImportInfo>> _field_all_packages{jule::Slice<jule::Ref<_150f26340_ImportInfo>>()};


	_1503de590_PlainImporter(jule::Slice<jule::Ref<_150f26340_ImportInfo>> __param_all_packages) {
		this->self = jule::Ref<_1503de590_PlainImporter>::make(this, nullptr);

		this->_field_all_packages = __param_all_packages;
	}

	~_1503de590_PlainImporter(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1503de590_PlainImporter(void) { this->self = jule::Ref<_1503de590_PlainImporter>::make(this, nullptr); }

	inline jule::Ref<_150f26340_ImportInfo> _method_get_import(jule::Str);


	inline std::tuple<jule::Slice<jule::Ref<_15053e120_Ast>>,jule::Slice<_157e34dc0_Log>> _method_import_package(jule::Str);


	inline void _method_imported(jule::Ref<_150f26340_ImportInfo>);


	inline bool operator==(const _1503de590_PlainImporter &_Src) const {
		return 
			this->_field_all_packages == _Src._field_all_packages;
	}

	inline bool operator!=(const _1503de590_PlainImporter &_Src) const { return !this->operator==(_Src); }
};


struct _1501d9900_IR {
	jule::Ref<_1501d9900_IR> self{};

	jule::Slice<jule::Str> _field_passes{jule::Slice<jule::Str>()};
	jule::Ref<_150f26340_Package> _field_main{jule::Ref<_150f26340_Package>()};
	jule::Slice<jule::Ref<_150f26340_ImportInfo>> _field_used{jule::Slice<jule::Ref<_150f26340_ImportInfo>>()};


	_1501d9900_IR(jule::Slice<jule::Str> __param_passes, jule::Ref<_150f26340_Package> __param_main, jule::Slice<jule::Ref<_150f26340_ImportInfo>> __param_used) {
		this->self = jule::Ref<_1501d9900_IR>::make(this, nullptr);

		this->_field_passes = __param_passes;
		this->_field_main = __param_main;
		this->_field_used = __param_used;
	}

	~_1501d9900_IR(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1501d9900_IR(void) { this->self = jule::Ref<_1501d9900_IR>::make(this, nullptr); }

	static inline std::tuple<jule::Ref<_1501d9900_IR>,jule::Slice<_157e34dc0_Log>> _static_method_build(jule::Str);


	inline void _method_append_structs(jule::Ref<_150f26340_Package>,jule::Slice<jule::Ref<_150a13110_Struct>>&);


	inline jule::Slice<jule::Ref<_150a13110_Struct>> _method_get_all_structures(void);


	inline void _method_append_vars(jule::Ref<_150f26340_Package>,jule::Slice<jule::Ref<_1511317d0_Var>>&);


	inline jule::Slice<jule::Ref<_1511317d0_Var>> _method_get_all_variables(void);


	inline bool operator==(const _1501d9900_IR &_Src) const {
		return 
			this->_field_passes == _Src._field_passes &&
			this->_field_main == _Src._field_main &&
			this->_field_used == _Src._field_used;
	}

	inline bool operator!=(const _1501d9900_IR &_Src) const { return !this->operator==(_Src); }
};


struct _157eacdb0_ScopeDeadCode {
	jule::Ref<_157eacdb0_ScopeDeadCode> self{};

	jule::Ref<_157eacdb0_ScopeDeadCode> _field_parent{jule::Ref<_157eacdb0_ScopeDeadCode>()};
	jule::Ref<_150d29660_Scope> _field_s{jule::Ref<_150d29660_Scope>()};
	_1509ba170_Vector_8* _field_stmts{nullptr};
	jule::Int _field_i{jule::Int()};


	_157eacdb0_ScopeDeadCode(jule::Ref<_157eacdb0_ScopeDeadCode> __param_parent, jule::Ref<_150d29660_Scope> __param_s, _1509ba170_Vector_8* __param_stmts, jule::Int __param_i) {
		this->self = jule::Ref<_157eacdb0_ScopeDeadCode>::make(this, nullptr);

		this->_field_parent = __param_parent;
		this->_field_s = __param_s;
		this->_field_stmts = __param_stmts;
		this->_field_i = __param_i;
	}

	~_157eacdb0_ScopeDeadCode(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_157eacdb0_ScopeDeadCode(void) { this->self = jule::Ref<_157eacdb0_ScopeDeadCode>::make(this, nullptr); }

	inline void _method_optimize_child(jule::Ref<_150d29660_Scope>);


	inline void _method_eliminate_followed(void);


	inline void _method_optimize_stmt(jule::Any);


	inline void _method_optimize_stmts(void);


	inline bool operator==(const _157eacdb0_ScopeDeadCode &_Src) const {
		return 
			this->_field_parent == _Src._field_parent &&
			this->_field_s == _Src._field_s &&
			this->_field_stmts == _Src._field_stmts &&
			this->_field_i == _Src._field_i;
	}

	inline bool operator!=(const _157eacdb0_ScopeDeadCode &_Src) const { return !this->operator==(_Src); }
};


struct _1517eb5a0_IndexRangeSetter: public _1517eb5a0_RangeSetter {
	jule::Ref<_1517eb5a0_IndexRangeSetter> self{};

	~_1517eb5a0_IndexRangeSetter(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1517eb5a0_IndexRangeSetter(void) { this->self = jule::Ref<_1517eb5a0_IndexRangeSetter>::make(this, nullptr); }

	inline jule::Str _method_setup_vars(jule::Ref<_1511317d0_Var>,jule::Ref<_1511317d0_Var>);


	inline jule::Str _method_next_steps(jule::Ref<_1511317d0_Var>,jule::Ref<_1511317d0_Var>,jule::Str);


	inline bool operator==(const _1517eb5a0_IndexRangeSetter &_Src) const { return true; }

	inline bool operator!=(const _1517eb5a0_IndexRangeSetter &_Src) const { return !this->operator==(_Src); }
};


struct _1517eb5a0_MapRangeSetter: public _1517eb5a0_RangeSetter {
	jule::Ref<_1517eb5a0_MapRangeSetter> self{};

	~_1517eb5a0_MapRangeSetter(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1517eb5a0_MapRangeSetter(void) { this->self = jule::Ref<_1517eb5a0_MapRangeSetter>::make(this, nullptr); }

	inline jule::Str _method_setup_vars(jule::Ref<_1511317d0_Var>,jule::Ref<_1511317d0_Var>);


	inline jule::Str _method_next_steps(jule::Ref<_1511317d0_Var>,jule::Ref<_1511317d0_Var>,jule::Str);


	inline bool operator==(const _1517eb5a0_MapRangeSetter &_Src) const { return true; }

	inline bool operator!=(const _1517eb5a0_MapRangeSetter &_Src) const { return !this->operator==(_Src); }
};


struct _1514109b0_OrderedDecls {
	jule::Ref<_1514109b0_OrderedDecls> self{};

	jule::Slice<jule::Ref<_150a13110_Struct>> _field_structs{jule::Slice<jule::Ref<_150a13110_Struct>>()};
	jule::Slice<jule::Ref<_1511317d0_Var>> _field_globals{jule::Slice<jule::Ref<_1511317d0_Var>>()};


	_1514109b0_OrderedDecls(jule::Slice<jule::Ref<_150a13110_Struct>> __param_structs, jule::Slice<jule::Ref<_1511317d0_Var>> __param_globals) {
		this->self = jule::Ref<_1514109b0_OrderedDecls>::make(this, nullptr);

		this->_field_structs = __param_structs;
		this->_field_globals = __param_globals;
	}

	~_1514109b0_OrderedDecls(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1514109b0_OrderedDecls(void) { this->self = jule::Ref<_1514109b0_OrderedDecls>::make(this, nullptr); }

	inline bool operator==(const _1514109b0_OrderedDecls &_Src) const {
		return 
			this->_field_structs == _Src._field_structs &&
			this->_field_globals == _Src._field_globals;
	}

	inline bool operator!=(const _1514109b0_OrderedDecls &_Src) const { return !this->operator==(_Src); }
};


struct _15177b070_TypeChecker {
	jule::Ref<_15177b070_TypeChecker> self{};

	jule::Ref<_1510c9150_Sema> _field_s{jule::Ref<_1510c9150_Sema>()};
	jule::Trait<_1517fbd60_Lookup> _field_lookup{jule::Trait<_1517fbd60_Lookup>()};
	jule::Ref<_15177b070_Referencer> _field_referencer{jule::Ref<_15177b070_Referencer>()};
	_150640f50_Token _field_error_token{_150640f50_Token()};
	jule::Slice<jule::Ref<_1506406d0_GenericDecl>> _field_ignore_generics{jule::Slice<jule::Ref<_1506406d0_GenericDecl>>()};
	jule::Slice<jule::Ref<_15177b070_TypeAlias>> _field_use_generics{jule::Slice<jule::Ref<_15177b070_TypeAlias>>()};
	jule::Bool _field_not_plain{jule::Bool()};


	_15177b070_TypeChecker(jule::Ref<_1510c9150_Sema> __param_s, jule::Trait<_1517fbd60_Lookup> __param_lookup, jule::Ref<_15177b070_Referencer> __param_referencer, _150640f50_Token __param_error_token, jule::Slice<jule::Ref<_1506406d0_GenericDecl>> __param_ignore_generics, jule::Slice<jule::Ref<_15177b070_TypeAlias>> __param_use_generics, jule::Bool __param_not_plain) {
		this->self = jule::Ref<_15177b070_TypeChecker>::make(this, nullptr);

		this->_field_s = __param_s;
		this->_field_lookup = __param_lookup;
		this->_field_referencer = __param_referencer;
		this->_field_error_token = __param_error_token;
		this->_field_ignore_generics = __param_ignore_generics;
		this->_field_use_generics = __param_use_generics;
		this->_field_not_plain = __param_not_plain;
	}

	~_15177b070_TypeChecker(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_15177b070_TypeChecker(void) { this->self = jule::Ref<_15177b070_TypeChecker>::make(this, nullptr); }

	inline void _method_push_err(_150640f50_Token,jule::Str,jule::Slice<jule::Any>);


	inline jule::Ref<_15177b070_Prim> _method_build_prim(jule::Ref<_1506406d0_IdentTypeDecl>);


	inline void _method_push_cycle_error(jule::Any,jule::Any,jule::Str&);


	inline jule::Bool _method_are_equals_cross_cycle_data_0(jule::Any,jule::Any);
	inline jule::Bool _method_are_equals_cross_cycle_data_1(jule::Any,jule::Any);


	inline jule::Bool _method_check_cross_cycle(jule::Any,jule::Str&);


	inline jule::Bool _method_check_illegal_cycles(jule::Ref<_1506406d0_IdentTypeDecl>,jule::Any);


	inline jule::Trait<_15177b070_Kind> _method_from_type_alias(jule::Ref<_1506406d0_IdentTypeDecl>,jule::Ref<_15177b070_TypeAlias>);


	inline jule::Ref<_150f1c930_Enum> _method_from_enum(jule::Ref<_1506406d0_IdentTypeDecl>,jule::Ref<_150f1c930_Enum>);


	inline jule::Bool _method_check_struct_ins(jule::Ref<_150a13110_StructIns>,_150640f50_Token);


	inline void _method_append_used_struct_reference(jule::Ref<_150a13110_Struct>);


	inline jule::Ref<_150a13110_StructIns> _method_from_struct(jule::Ref<_1506406d0_IdentTypeDecl>,jule::Ref<_150a13110_Struct>);


	inline jule::Trait<_15177b070_Kind> _method_get_def(jule::Ref<_1506406d0_IdentTypeDecl>);


	inline jule::Trait<_15177b070_Kind> _method_build_ident(jule::Ref<_1506406d0_IdentTypeDecl>);


	inline jule::Ref<_15177b070_Ref> _method_build_ref_from_type(jule::Ref<_15177b070_TypeKind>);


	inline jule::Ref<_15177b070_Ref> _method_build_ref(jule::Ref<_1506406d0_RefTypeDecl>);


	inline jule::Ref<_15177b070_Ptr> _method_build_ptr_from_type(jule::Ref<_15177b070_TypeKind>);


	inline jule::Ref<_15177b070_Ptr> _method_build_ptr(jule::Ref<_1506406d0_PtrTypeDecl>);


	inline jule::Ref<_15177b070_Slc> _method_build_slc(jule::Ref<_1506406d0_SlcTypeDecl>);


	inline jule::Ref<_15177b070_Arr> _method_build_arr(jule::Ref<_1506406d0_ArrTypeDecl>);


	inline jule::Ref<_15177b070_Map> _method_build_map(jule::Ref<_1506406d0_MapTypeDecl>);


	inline jule::Ref<_15177b070_Tuple> _method_build_tuple(jule::Ref<_1506406d0_TupleTypeDecl>);


	inline jule::Bool _method_check_fn_types(jule::Ref<_15081bcd0_FnIns>);


	inline jule::Ref<_15081bcd0_FnIns> _method_build_fn(jule::Ref<_1506406d0_FnDecl>);


	inline jule::Trait<_15177b070_Kind> _method_build_by_std_namespace(jule::Ref<_1506406d0_NamespaceTypeDecl>);


	inline jule::Trait<_15177b070_Kind> _method_build_by_namespace(jule::Ref<_1506406d0_NamespaceTypeDecl>);


	inline jule::Ref<_15177b070_TypeKind> _method_build(jule::Any);


	inline jule::Ref<_15177b070_TypeKind> _method_check_decl(jule::Ref<_1506406d0_TypeDecl>);


	inline void _method_check(jule::Ref<_15177b070_TypeSymbol>);


	inline bool operator==(const _15177b070_TypeChecker &_Src) const {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_lookup == _Src._field_lookup &&
			this->_field_referencer == _Src._field_referencer &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_ignore_generics == _Src._field_ignore_generics &&
			this->_field_use_generics == _Src._field_use_generics &&
			this->_field_not_plain == _Src._field_not_plain;
	}

	inline bool operator!=(const _15177b070_TypeChecker &_Src) const { return !this->operator==(_Src); }
};


struct _15177b070_TypeAlias {
	jule::Ref<_15177b070_TypeAlias> self{};

	jule::Ref<_1506406d0_ScopeTree> _field_scope{jule::Ref<_1506406d0_ScopeTree>()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_used{jule::Bool()};
	_150640f50_Token _field_token{_150640f50_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_15177b070_TypeSymbol> _field_kind{jule::Ref<_15177b070_TypeSymbol>()};
	jule::Str _field_doc{jule::Str()};
	jule::Slice<jule::Any> _field_refers{jule::Slice<jule::Any>()};


	_15177b070_TypeAlias(jule::Ref<_1506406d0_ScopeTree> __param_scope, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Bool __param_used, _150640f50_Token __param_token, jule::Str __param_ident, jule::Ref<_15177b070_TypeSymbol> __param_kind, jule::Str __param_doc, jule::Slice<jule::Any> __param_refers) {
		this->self = jule::Ref<_15177b070_TypeAlias>::make(this, nullptr);

		this->_field_scope = __param_scope;
		this->_field_public = __param_public;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_used = __param_used;
		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_kind = __param_kind;
		this->_field_doc = __param_doc;
		this->_field_refers = __param_refers;
	}

	~_15177b070_TypeAlias(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_15177b070_TypeAlias(void) { this->self = jule::Ref<_15177b070_TypeAlias>::make(this, nullptr); }

	inline bool operator==(const _15177b070_TypeAlias &_Src) const {
		return 
			this->_field_scope == _Src._field_scope &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_used == _Src._field_used &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind &&
			this->_field_doc == _Src._field_doc &&
			this->_field_refers == _Src._field_refers;
	}

	inline bool operator!=(const _15177b070_TypeAlias &_Src) const { return !this->operator==(_Src); }
};


struct _151290fd0_BinopSolver {
	jule::Ref<_151290fd0_BinopSolver> self{};

	jule::Ref<_151290fd0_Eval> _field_e{jule::Ref<_151290fd0_Eval>()};
	jule::Ref<_151290fd0_Data> _field_l{jule::Ref<_151290fd0_Data>()};
	jule::Ref<_151290fd0_Data> _field_r{jule::Ref<_151290fd0_Data>()};
	_150640f50_Token _field_op{_150640f50_Token()};


	_151290fd0_BinopSolver(jule::Ref<_151290fd0_Eval> __param_e, jule::Ref<_151290fd0_Data> __param_l, jule::Ref<_151290fd0_Data> __param_r, _150640f50_Token __param_op) {
		this->self = jule::Ref<_151290fd0_BinopSolver>::make(this, nullptr);

		this->_field_e = __param_e;
		this->_field_l = __param_l;
		this->_field_r = __param_r;
		this->_field_op = __param_op;
	}

	~_151290fd0_BinopSolver(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_151290fd0_BinopSolver(void) { this->self = jule::Ref<_151290fd0_BinopSolver>::make(this, nullptr); }

	inline jule::Bool _method_check_type_compatibility(void);


	inline jule::Ref<_151290fd0_Data> _method_eval_nil(void);


	inline jule::Ref<_151290fd0_Data> _method_eval_enum(void);


	inline jule::Ref<_151290fd0_Data> _method_eval_ptr(void);


	inline jule::Ref<_151290fd0_Data> _method_eval_arr(void);


	inline jule::Ref<_151290fd0_Data> _method_eval_slc(void);


	inline jule::Ref<_151290fd0_Data> _method_eval_fn(void);


	inline jule::Ref<_151290fd0_Data> _method_eval_struct(void);


	inline jule::Ref<_151290fd0_Data> _method_eval_trait(void);


	inline jule::Ref<_151290fd0_Data> _method_eval_any(void);


	inline jule::Ref<_151290fd0_Data> _method_eval_bool(void);


	inline jule::Ref<_151290fd0_Data> _method_eval_str(void);


	inline void _method_set_type_to_greater(void);


	inline void _method_check_mod_data(jule::Ref<_151290fd0_Data>);


	inline void _method_mod(void);


	inline jule::Ref<_151290fd0_Data> _method_eval_float(void);


	inline jule::Ref<_151290fd0_Data> _method_eval_unsig_int(void);


	inline jule::Ref<_151290fd0_Data> _method_eval_sig_int(void);


	inline jule::Ref<_151290fd0_Data> _method_eval_prim(void);


	inline jule::Ref<_151290fd0_Data> _method_eval(void);


	inline void _method_assign_shift(jule::Ref<_151290fd0_Data>,jule::F64);


	inline void _method_solve_const(jule::Ref<_151290fd0_Data>);


	inline void _method_post_const(jule::Ref<_151290fd0_Data>);


	inline void _method_prepare_data(jule::Ref<_151290fd0_Data>);


	inline void _method_prepare_eval(void);


	inline void _method_check_data(jule::Ref<_151290fd0_Data>);


	inline void _method_check_datas(void);


	inline jule::Ref<_151290fd0_Data> _method_solve_explicit(jule::Ref<_151290fd0_Data>,jule::Ref<_151290fd0_Data>);


	inline jule::Ref<_151290fd0_Data> _method_solve(jule::Ref<_1506406d0_BinopExpr>);


	inline bool operator==(const _151290fd0_BinopSolver &_Src) const {
		return 
			this->_field_e == _Src._field_e &&
			this->_field_l == _Src._field_l &&
			this->_field_r == _Src._field_r &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _151290fd0_BinopSolver &_Src) const { return !this->operator==(_Src); }
};


struct _1510d19a0_RetTypeChecker {
	jule::Ref<_1510d19a0_RetTypeChecker> self{};

	jule::Ref<_150d29660_ScopeChecker> _field_sc{jule::Ref<_150d29660_ScopeChecker>()};
	jule::Ref<_15081bcd0_FnIns> _field_f{jule::Ref<_15081bcd0_FnIns>()};
	jule::Slice<jule::Ref<_15177b070_TypeKind>> _field_types{jule::Slice<jule::Ref<_15177b070_TypeKind>>()};
	jule::Slice<jule::Ref<_1506406d0_Expr>> _field_exprs{jule::Slice<jule::Ref<_1506406d0_Expr>>()};
	jule::Slice<jule::Ref<_1511317d0_Var>> _field_vars{jule::Slice<jule::Ref<_1511317d0_Var>>()};
	_150640f50_Token _field_error_token{_150640f50_Token()};
	jule::Any _field_model{jule::Any()};


	_1510d19a0_RetTypeChecker(jule::Ref<_150d29660_ScopeChecker> __param_sc, jule::Ref<_15081bcd0_FnIns> __param_f, jule::Slice<jule::Ref<_15177b070_TypeKind>> __param_types, jule::Slice<jule::Ref<_1506406d0_Expr>> __param_exprs, jule::Slice<jule::Ref<_1511317d0_Var>> __param_vars, _150640f50_Token __param_error_token, jule::Any __param_model) {
		this->self = jule::Ref<_1510d19a0_RetTypeChecker>::make(this, nullptr);

		this->_field_sc = __param_sc;
		this->_field_f = __param_f;
		this->_field_types = __param_types;
		this->_field_exprs = __param_exprs;
		this->_field_vars = __param_vars;
		this->_field_error_token = __param_error_token;
		this->_field_model = __param_model;
	}

	~_1510d19a0_RetTypeChecker(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1510d19a0_RetTypeChecker(void) { this->self = jule::Ref<_1510d19a0_RetTypeChecker>::make(this, nullptr); }

	inline void _method_prepare_types(void);


	inline void _method_prepare_exprs(jule::Ref<_1506406d0_Expr>);


	inline void _method_ret_vars(void);


	inline void _method_check_exprs(void);


	inline jule::Bool _method_check(jule::Ref<_1506406d0_Expr>);


	inline bool operator==(const _1510d19a0_RetTypeChecker &_Src) const {
		return 
			this->_field_sc == _Src._field_sc &&
			this->_field_f == _Src._field_f &&
			this->_field_types == _Src._field_types &&
			this->_field_exprs == _Src._field_exprs &&
			this->_field_vars == _Src._field_vars &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_model == _Src._field_model;
	}

	inline bool operator!=(const _1510d19a0_RetTypeChecker &_Src) const { return !this->operator==(_Src); }
};


struct _1510d19a0_FnCallArgChecker {
	jule::Ref<_1510d19a0_FnCallArgChecker> self{};

	jule::Ref<_151290fd0_Eval> _field_e{jule::Ref<_151290fd0_Eval>()};
	jule::Slice<jule::Ref<_1506406d0_Expr>> _field_args{jule::Slice<jule::Ref<_1506406d0_Expr>>()};
	_150640f50_Token _field_error_token{_150640f50_Token()};
	jule::Ref<_15081bcd0_FnIns> _field_f{jule::Ref<_15081bcd0_FnIns>()};
	jule::Bool _field_dynamic_annotation{jule::Bool()};
	jule::Slice<jule::Any> _field_arg_models{jule::Slice<jule::Any>()};


	_1510d19a0_FnCallArgChecker(jule::Ref<_151290fd0_Eval> __param_e, jule::Slice<jule::Ref<_1506406d0_Expr>> __param_args, _150640f50_Token __param_error_token, jule::Ref<_15081bcd0_FnIns> __param_f, jule::Bool __param_dynamic_annotation, jule::Slice<jule::Any> __param_arg_models) {
		this->self = jule::Ref<_1510d19a0_FnCallArgChecker>::make(this, nullptr);

		this->_field_e = __param_e;
		this->_field_args = __param_args;
		this->_field_error_token = __param_error_token;
		this->_field_f = __param_f;
		this->_field_dynamic_annotation = __param_dynamic_annotation;
		this->_field_arg_models = __param_arg_models;
	}

	~_1510d19a0_FnCallArgChecker(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1510d19a0_FnCallArgChecker(void) { this->self = jule::Ref<_1510d19a0_FnCallArgChecker>::make(this, nullptr); }

	inline void _method_push_err_token(_150640f50_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_err(jule::Str,jule::Slice<jule::Any>);


	inline jule::Slice<jule::Ref<_15081bcd0_ParamIns>> _method_get_params(void);


	inline jule::Bool _method_check_counts(jule::Slice<jule::Ref<_15081bcd0_ParamIns>>);


	inline jule::Bool _method_check_arg(jule::Ref<_15081bcd0_ParamIns>,jule::Ref<_151290fd0_Data>,_150640f50_Token);


	inline jule::Bool _method_push(jule::Ref<_15081bcd0_ParamIns>,jule::Ref<_1506406d0_Expr>);


	inline jule::Bool _method_push_variadic(jule::Ref<_15081bcd0_ParamIns>,jule::Int);


	inline jule::Bool _method_check_args(jule::Slice<jule::Ref<_15081bcd0_ParamIns>>);


	inline jule::Bool _method_check_dynamic_type_annotation(void);


	inline jule::Bool _method_check(void);


	inline bool operator==(const _1510d19a0_FnCallArgChecker &_Src) const {
		return 
			this->_field_e == _Src._field_e &&
			this->_field_args == _Src._field_args &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_f == _Src._field_f &&
			this->_field_dynamic_annotation == _Src._field_dynamic_annotation &&
			this->_field_arg_models == _Src._field_arg_models;
	}

	inline bool operator!=(const _1510d19a0_FnCallArgChecker &_Src) const { return !this->operator==(_Src); }
};


struct _1510d19a0_AssignTypeChecker {
	jule::Ref<_1510d19a0_AssignTypeChecker> self{};

	jule::Ref<_1510c9150_Sema> _field_s{jule::Ref<_1510c9150_Sema>()};
	jule::Ref<_15177b070_TypeKind> _field_dest{jule::Ref<_15177b070_TypeKind>()};
	jule::Ref<_151290fd0_Data> _field_d{jule::Ref<_151290fd0_Data>()};
	_150640f50_Token _field_error_token{_150640f50_Token()};
	jule::Bool _field_deref{jule::Bool()};


	_1510d19a0_AssignTypeChecker(jule::Ref<_1510c9150_Sema> __param_s, jule::Ref<_15177b070_TypeKind> __param_dest, jule::Ref<_151290fd0_Data> __param_d, _150640f50_Token __param_error_token, jule::Bool __param_deref) {
		this->self = jule::Ref<_1510d19a0_AssignTypeChecker>::make(this, nullptr);

		this->_field_s = __param_s;
		this->_field_dest = __param_dest;
		this->_field_d = __param_d;
		this->_field_error_token = __param_error_token;
		this->_field_deref = __param_deref;
	}

	~_1510d19a0_AssignTypeChecker(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1510d19a0_AssignTypeChecker(void) { this->self = jule::Ref<_1510d19a0_AssignTypeChecker>::make(this, nullptr); }

	inline void _method_push_err(jule::Str,jule::Slice<jule::Any>);


	inline jule::Bool _method_check_validity(void);


	inline jule::Bool _method_check_const(void);


	inline jule::Bool _method_check(void);


	inline bool operator==(const _1510d19a0_AssignTypeChecker &_Src) const {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_dest == _Src._field_dest &&
			this->_field_d == _Src._field_d &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_deref == _Src._field_deref;
	}

	inline bool operator!=(const _1510d19a0_AssignTypeChecker &_Src) const { return !this->operator==(_Src); }
};


struct _1510d19a0_TypeCompatibilityChecker {
	jule::Ref<_1510d19a0_TypeCompatibilityChecker> self{};

	jule::Ref<_1510c9150_Sema> _field_s{jule::Ref<_1510c9150_Sema>()};
	jule::Ref<_15177b070_TypeKind> _field_dest{jule::Ref<_15177b070_TypeKind>()};
	jule::Ref<_15177b070_TypeKind> _field_src{jule::Ref<_15177b070_TypeKind>()};
	_150640f50_Token _field_error_token{_150640f50_Token()};
	jule::Bool _field_ignore_any{jule::Bool()};
	jule::Bool _field_deref{jule::Bool()};
	jule::Bool _field_sub_check{jule::Bool()};


	_1510d19a0_TypeCompatibilityChecker(jule::Ref<_1510c9150_Sema> __param_s, jule::Ref<_15177b070_TypeKind> __param_dest, jule::Ref<_15177b070_TypeKind> __param_src, _150640f50_Token __param_error_token, jule::Bool __param_ignore_any, jule::Bool __param_deref, jule::Bool __param_sub_check) {
		this->self = jule::Ref<_1510d19a0_TypeCompatibilityChecker>::make(this, nullptr);

		this->_field_s = __param_s;
		this->_field_dest = __param_dest;
		this->_field_src = __param_src;
		this->_field_error_token = __param_error_token;
		this->_field_ignore_any = __param_ignore_any;
		this->_field_deref = __param_deref;
		this->_field_sub_check = __param_sub_check;
	}

	~_1510d19a0_TypeCompatibilityChecker(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1510d19a0_TypeCompatibilityChecker(void) { this->self = jule::Ref<_1510d19a0_TypeCompatibilityChecker>::make(this, nullptr); }

	inline void _method_push_err(jule::Str,jule::Slice<jule::Any>);


	inline jule::Bool _method_check_trait(void);


	inline jule::Bool _method_check_ref(void);


	inline jule::Bool _method_check_ptr(void);


	inline jule::Bool _method_check_slc(void);


	inline jule::Bool _method_check_arr(void);


	inline jule::Bool _method_check_map(void);


	inline jule::Bool _method_check_struct(void);


	inline jule::Bool _method_check_fn(void);


	inline jule::Bool _method_check_enum(void);


	inline jule::Bool _method_check_prim(void);


	inline jule::Bool _method_check_cpp_linked(void);


	inline jule::Bool _method_check(void);


	inline bool operator==(const _1510d19a0_TypeCompatibilityChecker &_Src) const {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_dest == _Src._field_dest &&
			this->_field_src == _Src._field_src &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_ignore_any == _Src._field_ignore_any &&
			this->_field_deref == _Src._field_deref &&
			this->_field_sub_check == _Src._field_sub_check;
	}

	inline bool operator!=(const _1510d19a0_TypeCompatibilityChecker &_Src) const { return !this->operator==(_Src); }
};


struct _1511317d0_Var {
	jule::Ref<_1511317d0_Var> self{};

	jule::Ref<_150d29660_Scope> _field_scope{jule::Ref<_150d29660_Scope>()};
	_150640f50_Token _field_token{_150640f50_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_constant{jule::Bool()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_used{jule::Bool()};
	jule::Bool _field_statically{jule::Bool()};
	jule::Bool _field_reference{jule::Bool()};
	jule::Str _field_doc{jule::Str()};
	jule::Ref<_15177b070_TypeSymbol> _field_kind{jule::Ref<_15177b070_TypeSymbol>()};
	jule::Ref<_151290fd0_Value> _field_value{jule::Ref<_151290fd0_Value>()};
	jule::Ref<_150e75a70_ReferenceStack> _field_references{jule::Ref<_150e75a70_ReferenceStack>()};
	jule::Slice<jule::Ref<_1506406d0_Directive>> _field_directives{jule::Slice<jule::Ref<_1506406d0_Directive>>()};
	jule::Slice<jule::Ref<_1511317d0_Var>> _field_depends{jule::Slice<jule::Ref<_1511317d0_Var>>()};


	_1511317d0_Var(jule::Ref<_150d29660_Scope> __param_scope, _150640f50_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked, jule::Bool __param_constant, jule::Bool __param_mutable, jule::Bool __param_public, jule::Bool __param_used, jule::Bool __param_statically, jule::Bool __param_reference, jule::Str __param_doc, jule::Ref<_15177b070_TypeSymbol> __param_kind, jule::Ref<_151290fd0_Value> __param_value, jule::Ref<_150e75a70_ReferenceStack> __param_references, jule::Slice<jule::Ref<_1506406d0_Directive>> __param_directives, jule::Slice<jule::Ref<_1511317d0_Var>> __param_depends) {
		this->self = jule::Ref<_1511317d0_Var>::make(this, nullptr);

		this->_field_scope = __param_scope;
		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_constant = __param_constant;
		this->_field_mutable = __param_mutable;
		this->_field_public = __param_public;
		this->_field_used = __param_used;
		this->_field_statically = __param_statically;
		this->_field_reference = __param_reference;
		this->_field_doc = __param_doc;
		this->_field_kind = __param_kind;
		this->_field_value = __param_value;
		this->_field_references = __param_references;
		this->_field_directives = __param_directives;
		this->_field_depends = __param_depends;
	}

	~_1511317d0_Var(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1511317d0_Var(void) { this->self = jule::Ref<_1511317d0_Var>::make(this, nullptr); }

	inline jule::Bool _method_is_initialized(void);


	inline jule::Bool _method_is_type_inferred(void);


	inline bool operator==(const _1511317d0_Var &_Src) const {
		return 
			this->_field_scope == _Src._field_scope &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_constant == _Src._field_constant &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_public == _Src._field_public &&
			this->_field_used == _Src._field_used &&
			this->_field_statically == _Src._field_statically &&
			this->_field_reference == _Src._field_reference &&
			this->_field_doc == _Src._field_doc &&
			this->_field_kind == _Src._field_kind &&
			this->_field_value == _Src._field_value &&
			this->_field_references == _Src._field_references &&
			this->_field_directives == _Src._field_directives &&
			this->_field_depends == _Src._field_depends;
	}

	inline bool operator!=(const _1511317d0_Var &_Src) const { return !this->operator==(_Src); }
};


struct _150f26340_ImportInfo: public _1517fbd60_Lookup {
	jule::Ref<_150f26340_ImportInfo> self{};

	_150640f50_Token _field_token{_150640f50_Token()};
	jule::Str _field_path{jule::Str()};
	jule::Str _field_link_path{jule::Str()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_duplicate{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_std{jule::Bool()};
	jule::Bool _field_import_all{jule::Bool()};
	jule::Slice<_150640f50_Token> _field_selected{jule::Slice<_150640f50_Token>()};
	jule::Ref<_150f26340_Package> _field_package{jule::Ref<_150f26340_Package>()};


	_150f26340_ImportInfo(_150640f50_Token __param_token, jule::Str __param_path, jule::Str __param_link_path, jule::Str __param_ident, jule::Bool __param_duplicate, jule::Bool __param_cpp_linked, jule::Bool __param_std, jule::Bool __param_import_all, jule::Slice<_150640f50_Token> __param_selected, jule::Ref<_150f26340_Package> __param_package) {
		this->self = jule::Ref<_150f26340_ImportInfo>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_path = __param_path;
		this->_field_link_path = __param_link_path;
		this->_field_ident = __param_ident;
		this->_field_duplicate = __param_duplicate;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_std = __param_std;
		this->_field_import_all = __param_import_all;
		this->_field_selected = __param_selected;
		this->_field_package = __param_package;
	}

	~_150f26340_ImportInfo(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150f26340_ImportInfo(void) { this->self = jule::Ref<_150f26340_ImportInfo>::make(this, nullptr); }

	inline jule::Ref<_150f26340_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ref<_150f26340_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ref<_150f26340_ImportInfo>)>);


	inline jule::Ref<_1511317d0_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ref<_15177b070_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ref<_150a13110_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ref<_15081bcd0_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ref<_150f166e0_Trait> _method_find_trait(jule::Str);


	inline jule::Ref<_150f1c930_Enum> _method_find_enum(jule::Str);


	inline jule::Bool _method_is_lookupable(jule::Str);


	inline jule::Bool _method_exist_ident(jule::Str);


	inline bool operator==(const _150f26340_ImportInfo &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_path == _Src._field_path &&
			this->_field_link_path == _Src._field_link_path &&
			this->_field_ident == _Src._field_ident &&
			this->_field_duplicate == _Src._field_duplicate &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_std == _Src._field_std &&
			this->_field_import_all == _Src._field_import_all &&
			this->_field_selected == _Src._field_selected &&
			this->_field_package == _Src._field_package;
	}

	inline bool operator!=(const _150f26340_ImportInfo &_Src) const { return !this->operator==(_Src); }
};


struct _150d29660_ScopeLabel {
	jule::Ref<_150d29660_ScopeLabel> self{};

	_150640f50_Token _field_token{_150640f50_Token()};
	jule::Ref<_150d29660_Label> _field_label{jule::Ref<_150d29660_Label>()};
	jule::Int _field_pos{jule::Int()};
	jule::Ref<_150d29660_ScopeChecker> _field_scope{jule::Ref<_150d29660_ScopeChecker>()};
	jule::Bool _field_used{jule::Bool()};


	_150d29660_ScopeLabel(_150640f50_Token __param_token, jule::Ref<_150d29660_Label> __param_label, jule::Int __param_pos, jule::Ref<_150d29660_ScopeChecker> __param_scope, jule::Bool __param_used) {
		this->self = jule::Ref<_150d29660_ScopeLabel>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_label = __param_label;
		this->_field_pos = __param_pos;
		this->_field_scope = __param_scope;
		this->_field_used = __param_used;
	}

	~_150d29660_ScopeLabel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150d29660_ScopeLabel(void) { this->self = jule::Ref<_150d29660_ScopeLabel>::make(this, nullptr); }

	inline bool operator==(const _150d29660_ScopeLabel &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_label == _Src._field_label &&
			this->_field_pos == _Src._field_pos &&
			this->_field_scope == _Src._field_scope &&
			this->_field_used == _Src._field_used;
	}

	inline bool operator!=(const _150d29660_ScopeLabel &_Src) const { return !this->operator==(_Src); }
};


struct _150f235a0_Impl {
	jule::Ref<_150f235a0_Impl> self{};

	_150640f50_Token _field_base{_150640f50_Token()};
	_150640f50_Token _field_dest{_150640f50_Token()};
	jule::Slice<jule::Ref<_15081bcd0_Fn>> _field_methods{jule::Slice<jule::Ref<_15081bcd0_Fn>>()};


	_150f235a0_Impl(_150640f50_Token __param_base, _150640f50_Token __param_dest, jule::Slice<jule::Ref<_15081bcd0_Fn>> __param_methods) {
		this->self = jule::Ref<_150f235a0_Impl>::make(this, nullptr);

		this->_field_base = __param_base;
		this->_field_dest = __param_dest;
		this->_field_methods = __param_methods;
	}

	~_150f235a0_Impl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150f235a0_Impl(void) { this->self = jule::Ref<_150f235a0_Impl>::make(this, nullptr); }

	inline jule::Bool _method_is_trait_impl(void);


	inline jule::Bool _method_is_struct_impl(void);


	inline bool operator==(const _150f235a0_Impl &_Src) const {
		return 
			this->_field_base == _Src._field_base &&
			this->_field_dest == _Src._field_dest &&
			this->_field_methods == _Src._field_methods;
	}

	inline bool operator!=(const _150f235a0_Impl &_Src) const { return !this->operator==(_Src); }
};


struct _150f1c930_Enum: public _15177b070_Kind {
	jule::Ref<_150f1c930_Enum> self{};

	_150640f50_Token _field_token{_150640f50_Token()};
	jule::Bool _field_public{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_15177b070_TypeSymbol> _field_kind{jule::Ref<_15177b070_TypeSymbol>()};
	jule::Slice<jule::Ref<_150f1c930_EnumItem>> _field_items{jule::Slice<jule::Ref<_150f1c930_EnumItem>>()};
	jule::Str _field_doc{jule::Str()};


	_150f1c930_Enum(_150640f50_Token __param_token, jule::Bool __param_public, jule::Str __param_ident, jule::Ref<_15177b070_TypeSymbol> __param_kind, jule::Slice<jule::Ref<_150f1c930_EnumItem>> __param_items, jule::Str __param_doc) {
		this->self = jule::Ref<_150f1c930_Enum>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_public = __param_public;
		this->_field_ident = __param_ident;
		this->_field_kind = __param_kind;
		this->_field_items = __param_items;
		this->_field_doc = __param_doc;
	}

	~_150f1c930_Enum(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150f1c930_Enum(void) { this->self = jule::Ref<_150f1c930_Enum>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_15177b070_TypeKind>);


	inline jule::Ref<_150f1c930_EnumItem> _method_find_item(jule::Str);


	inline bool operator==(const _150f1c930_Enum &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_public == _Src._field_public &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind &&
			this->_field_items == _Src._field_items &&
			this->_field_doc == _Src._field_doc;
	}

	inline bool operator!=(const _150f1c930_Enum &_Src) const { return !this->operator==(_Src); }
};


struct _150f1c930_EnumItem {
	jule::Ref<_150f1c930_EnumItem> self{};

	_150640f50_Token _field_token{_150640f50_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_151290fd0_Value> _field_value{jule::Ref<_151290fd0_Value>()};


	_150f1c930_EnumItem(_150640f50_Token __param_token, jule::Str __param_ident, jule::Ref<_151290fd0_Value> __param_value) {
		this->self = jule::Ref<_150f1c930_EnumItem>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_value = __param_value;
	}

	~_150f1c930_EnumItem(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150f1c930_EnumItem(void) { this->self = jule::Ref<_150f1c930_EnumItem>::make(this, nullptr); }

	inline jule::Bool _method_auto_expr(void);


	inline bool operator==(const _150f1c930_EnumItem &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_value == _Src._field_value;
	}

	inline bool operator!=(const _150f1c930_EnumItem &_Src) const { return !this->operator==(_Src); }
};


struct _150f166e0_Trait: public _15177b070_Kind {
	jule::Ref<_150f166e0_Trait> self{};

	_150640f50_Token _field_token{_150640f50_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_public{jule::Bool()};
	jule::Str _field_doc{jule::Str()};
	jule::Slice<jule::Ref<_15081bcd0_Fn>> _field_methods{jule::Slice<jule::Ref<_15081bcd0_Fn>>()};
	jule::Slice<jule::Ref<_150a13110_Struct>> _field_implemented{jule::Slice<jule::Ref<_150a13110_Struct>>()};


	_150f166e0_Trait(_150640f50_Token __param_token, jule::Str __param_ident, jule::Bool __param_public, jule::Str __param_doc, jule::Slice<jule::Ref<_15081bcd0_Fn>> __param_methods, jule::Slice<jule::Ref<_150a13110_Struct>> __param_implemented) {
		this->self = jule::Ref<_150f166e0_Trait>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_public = __param_public;
		this->_field_doc = __param_doc;
		this->_field_methods = __param_methods;
		this->_field_implemented = __param_implemented;
	}

	~_150f166e0_Trait(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150f166e0_Trait(void) { this->self = jule::Ref<_150f166e0_Trait>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_15177b070_TypeKind>);


	inline jule::Bool _method_is_builtin(void);


	inline jule::Ref<_15081bcd0_Fn> _method_find_method(jule::Str);


	inline bool operator==(const _150f166e0_Trait &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_public == _Src._field_public &&
			this->_field_doc == _Src._field_doc &&
			this->_field_methods == _Src._field_methods &&
			this->_field_implemented == _Src._field_implemented;
	}

	inline bool operator!=(const _150f166e0_Trait &_Src) const { return !this->operator==(_Src); }
};


struct _150e75a70_Pass {
	jule::Ref<_150e75a70_Pass> self{};

	_150640f50_Token _field_token{_150640f50_Token()};
	jule::Str _field_text{jule::Str()};


	_150e75a70_Pass(_150640f50_Token __param_token, jule::Str __param_text) {
		this->self = jule::Ref<_150e75a70_Pass>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_text = __param_text;
	}

	~_150e75a70_Pass(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150e75a70_Pass(void) { this->self = jule::Ref<_150e75a70_Pass>::make(this, nullptr); }

	inline bool operator==(const _150e75a70_Pass &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_text == _Src._field_text;
	}

	inline bool operator!=(const _150e75a70_Pass &_Src) const { return !this->operator==(_Src); }
};


struct _15081bcd0_Fn {
	jule::Ref<_15081bcd0_Fn> self{};

	jule::Ref<_1510c9150_Sema> _field_sema{jule::Ref<_1510c9150_Sema>()};
	_150640f50_Token _field_token{_150640f50_Token()};
	jule::Bool _field_global{jule::Bool()};
	jule::Bool _field_unsafety{jule::Bool()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_statically{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Slice<jule::Ref<_1506406d0_Directive>> _field_directives{jule::Slice<jule::Ref<_1506406d0_Directive>>()};
	jule::Str _field_doc{jule::Str()};
	jule::Ref<_1506406d0_ScopeTree> _field_scope{jule::Ref<_1506406d0_ScopeTree>()};
	jule::Slice<jule::Ref<_1506406d0_GenericDecl>> _field_generics{jule::Slice<jule::Ref<_1506406d0_GenericDecl>>()};
	jule::Ref<_15081bcd0_RetType> _field_result{jule::Ref<_15081bcd0_RetType>()};
	jule::Slice<jule::Ref<_15081bcd0_Param>> _field_params{jule::Slice<jule::Ref<_15081bcd0_Param>>()};
	jule::Ref<_150a13110_Struct> _field_owner{jule::Ref<_150a13110_Struct>()};
	jule::Slice<jule::Ref<_15081bcd0_FnIns>> _field_instances{jule::Slice<jule::Ref<_15081bcd0_FnIns>>()};


	_15081bcd0_Fn(jule::Ref<_1510c9150_Sema> __param_sema, _150640f50_Token __param_token, jule::Bool __param_global, jule::Bool __param_unsafety, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Bool __param_statically, jule::Str __param_ident, jule::Slice<jule::Ref<_1506406d0_Directive>> __param_directives, jule::Str __param_doc, jule::Ref<_1506406d0_ScopeTree> __param_scope, jule::Slice<jule::Ref<_1506406d0_GenericDecl>> __param_generics, jule::Ref<_15081bcd0_RetType> __param_result, jule::Slice<jule::Ref<_15081bcd0_Param>> __param_params, jule::Ref<_150a13110_Struct> __param_owner, jule::Slice<jule::Ref<_15081bcd0_FnIns>> __param_instances) {
		this->self = jule::Ref<_15081bcd0_Fn>::make(this, nullptr);

		this->_field_sema = __param_sema;
		this->_field_token = __param_token;
		this->_field_global = __param_global;
		this->_field_unsafety = __param_unsafety;
		this->_field_public = __param_public;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_statically = __param_statically;
		this->_field_ident = __param_ident;
		this->_field_directives = __param_directives;
		this->_field_doc = __param_doc;
		this->_field_scope = __param_scope;
		this->_field_generics = __param_generics;
		this->_field_result = __param_result;
		this->_field_params = __param_params;
		this->_field_owner = __param_owner;
		this->_field_instances = __param_instances;
	}

	~_15081bcd0_Fn(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_15081bcd0_Fn(void) { this->self = jule::Ref<_15081bcd0_Fn>::make(this, nullptr); }

	inline jule::Bool _method_is_void(void);


	inline jule::Bool _method_is_method(void);


	inline jule::Bool _method_is_entry_point(void);


	inline jule::Bool _method_is_init(void);


	inline jule::Bool _method_is_anon(void);


	inline jule::Bool _method_any_var(void);


	inline jule::Bool _method_parameters_uses_generics(void);


	inline jule::Bool _method_result_uses_generics(void);


	inline jule::Ref<_15081bcd0_FnIns> _method_instance_force(void);


	inline jule::Ref<_15081bcd0_FnIns> _method_instance(void);


	inline std::tuple<jule::Bool,jule::Int> _method_append_instance(jule::Ref<_15081bcd0_FnIns>);


	inline bool operator==(const _15081bcd0_Fn &_Src) const {
		return 
			this->_field_sema == _Src._field_sema &&
			this->_field_token == _Src._field_token &&
			this->_field_global == _Src._field_global &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_statically == _Src._field_statically &&
			this->_field_ident == _Src._field_ident &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc == _Src._field_doc &&
			this->_field_scope == _Src._field_scope &&
			this->_field_generics == _Src._field_generics &&
			this->_field_result == _Src._field_result &&
			this->_field_params == _Src._field_params &&
			this->_field_owner == _Src._field_owner &&
			this->_field_instances == _Src._field_instances;
	}

	inline bool operator!=(const _15081bcd0_Fn &_Src) const { return !this->operator==(_Src); }
};


struct _15081bcd0_Param {
	jule::Ref<_15081bcd0_Param> self{};

	_150640f50_Token _field_token{_150640f50_Token()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Bool _field_variadic{jule::Bool()};
	jule::Bool _field_reference{jule::Bool()};
	jule::Ref<_15177b070_TypeSymbol> _field_kind{jule::Ref<_15177b070_TypeSymbol>()};
	jule::Str _field_ident{jule::Str()};


	_15081bcd0_Param(_150640f50_Token __param_token, jule::Bool __param_mutable, jule::Bool __param_variadic, jule::Bool __param_reference, jule::Ref<_15177b070_TypeSymbol> __param_kind, jule::Str __param_ident) {
		this->self = jule::Ref<_15081bcd0_Param>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_mutable = __param_mutable;
		this->_field_variadic = __param_variadic;
		this->_field_reference = __param_reference;
		this->_field_kind = __param_kind;
		this->_field_ident = __param_ident;
	}

	~_15081bcd0_Param(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_15081bcd0_Param(void) { this->self = jule::Ref<_15081bcd0_Param>::make(this, nullptr); }

	inline jule::Ref<_15081bcd0_ParamIns> _method_instance(void);


	inline jule::Bool _method_is_self(void);


	inline jule::Bool _method_is_ref(void);


	inline bool operator==(const _15081bcd0_Param &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_variadic == _Src._field_variadic &&
			this->_field_reference == _Src._field_reference &&
			this->_field_kind == _Src._field_kind &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _15081bcd0_Param &_Src) const { return !this->operator==(_Src); }
};


struct _150a13110_Field {
	jule::Ref<_150a13110_Field> self{};

	jule::Ref<_150a13110_Struct> _field_owner{jule::Ref<_150a13110_Struct>()};
	_150640f50_Token _field_token{_150640f50_Token()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_15177b070_TypeSymbol> _field_kind{jule::Ref<_15177b070_TypeSymbol>()};


	_150a13110_Field(jule::Ref<_150a13110_Struct> __param_owner, _150640f50_Token __param_token, jule::Bool __param_public, jule::Bool __param_mutable, jule::Str __param_ident, jule::Ref<_15177b070_TypeSymbol> __param_kind) {
		this->self = jule::Ref<_150a13110_Field>::make(this, nullptr);

		this->_field_owner = __param_owner;
		this->_field_token = __param_token;
		this->_field_public = __param_public;
		this->_field_mutable = __param_mutable;
		this->_field_ident = __param_ident;
		this->_field_kind = __param_kind;
	}

	~_150a13110_Field(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150a13110_Field(void) { this->self = jule::Ref<_150a13110_Field>::make(this, nullptr); }

	inline jule::Ref<_150a13110_FieldIns> _method_instance(void);


	inline bool operator==(const _150a13110_Field &_Src) const {
		return 
			this->_field_owner == _Src._field_owner &&
			this->_field_token == _Src._field_token &&
			this->_field_public == _Src._field_public &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _150a13110_Field &_Src) const { return !this->operator==(_Src); }
};


struct _1507eb940_AssignInfo {
	jule::Ref<_1507eb940_AssignInfo> self{};

	jule::Slice<_150640f50_Token> _field_l{jule::Slice<_150640f50_Token>()};
	jule::Slice<_150640f50_Token> _field_r{jule::Slice<_150640f50_Token>()};
	_150640f50_Token _field_setter{_150640f50_Token()};
	jule::Bool _field_ok{jule::Bool()};


	_1507eb940_AssignInfo(jule::Slice<_150640f50_Token> __param_l, jule::Slice<_150640f50_Token> __param_r, _150640f50_Token __param_setter, jule::Bool __param_ok) {
		this->self = jule::Ref<_1507eb940_AssignInfo>::make(this, nullptr);

		this->_field_l = __param_l;
		this->_field_r = __param_r;
		this->_field_setter = __param_setter;
		this->_field_ok = __param_ok;
	}

	~_1507eb940_AssignInfo(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1507eb940_AssignInfo(void) { this->self = jule::Ref<_1507eb940_AssignInfo>::make(this, nullptr); }

	inline bool operator==(const _1507eb940_AssignInfo &_Src) const {
		return 
			this->_field_l == _Src._field_l &&
			this->_field_r == _Src._field_r &&
			this->_field_setter == _Src._field_setter &&
			this->_field_ok == _Src._field_ok;
	}

	inline bool operator!=(const _1507eb940_AssignInfo &_Src) const { return !this->operator==(_Src); }
};


struct _1506406d0_Impl {
	jule::Ref<_1506406d0_Impl> self{};

	_150640f50_Token _field_base{_150640f50_Token()};
	_150640f50_Token _field_dest{_150640f50_Token()};
	jule::Slice<jule::Ref<_1506406d0_FnDecl>> _field_methods{jule::Slice<jule::Ref<_1506406d0_FnDecl>>()};


	_1506406d0_Impl(_150640f50_Token __param_base, _150640f50_Token __param_dest, jule::Slice<jule::Ref<_1506406d0_FnDecl>> __param_methods) {
		this->self = jule::Ref<_1506406d0_Impl>::make(this, nullptr);

		this->_field_base = __param_base;
		this->_field_dest = __param_dest;
		this->_field_methods = __param_methods;
	}

	~_1506406d0_Impl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1506406d0_Impl(void) { this->self = jule::Ref<_1506406d0_Impl>::make(this, nullptr); }

	inline jule::Bool _method_is_trait_impl(void);


	inline jule::Bool _method_is_struct_impl(void);


	inline bool operator==(const _1506406d0_Impl &_Src) const {
		return 
			this->_field_base == _Src._field_base &&
			this->_field_dest == _Src._field_dest &&
			this->_field_methods == _Src._field_methods;
	}

	inline bool operator!=(const _1506406d0_Impl &_Src) const { return !this->operator==(_Src); }
};


struct _1506406d0_TraitDecl {
	jule::Ref<_1506406d0_TraitDecl> self{};

	_150640f50_Token _field_token{_150640f50_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_public{jule::Bool()};
	jule::Ref<_1506406d0_CommentGroup> _field_doc_comments{jule::Ref<_1506406d0_CommentGroup>()};
	jule::Slice<jule::Ref<_1506406d0_FnDecl>> _field_methods{jule::Slice<jule::Ref<_1506406d0_FnDecl>>()};


	_1506406d0_TraitDecl(_150640f50_Token __param_token, jule::Str __param_ident, jule::Bool __param_public, jule::Ref<_1506406d0_CommentGroup> __param_doc_comments, jule::Slice<jule::Ref<_1506406d0_FnDecl>> __param_methods) {
		this->self = jule::Ref<_1506406d0_TraitDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_public = __param_public;
		this->_field_doc_comments = __param_doc_comments;
		this->_field_methods = __param_methods;
	}

	~_1506406d0_TraitDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1506406d0_TraitDecl(void) { this->self = jule::Ref<_1506406d0_TraitDecl>::make(this, nullptr); }

	inline bool operator==(const _1506406d0_TraitDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_public == _Src._field_public &&
			this->_field_doc_comments == _Src._field_doc_comments &&
			this->_field_methods == _Src._field_methods;
	}

	inline bool operator!=(const _1506406d0_TraitDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1506406d0_StructDecl {
	jule::Ref<_1506406d0_StructDecl> self{};

	_150640f50_Token _field_token{_150640f50_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Slice<jule::Ref<_1506406d0_FieldDecl>> _field_fields{jule::Slice<jule::Ref<_1506406d0_FieldDecl>>()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Slice<jule::Ref<_1506406d0_Directive>> _field_directives{jule::Slice<jule::Ref<_1506406d0_Directive>>()};
	jule::Ref<_1506406d0_CommentGroup> _field_doc_comments{jule::Ref<_1506406d0_CommentGroup>()};
	jule::Slice<jule::Ref<_1506406d0_GenericDecl>> _field_generics{jule::Slice<jule::Ref<_1506406d0_GenericDecl>>()};


	_1506406d0_StructDecl(_150640f50_Token __param_token, jule::Str __param_ident, jule::Slice<jule::Ref<_1506406d0_FieldDecl>> __param_fields, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Slice<jule::Ref<_1506406d0_Directive>> __param_directives, jule::Ref<_1506406d0_CommentGroup> __param_doc_comments, jule::Slice<jule::Ref<_1506406d0_GenericDecl>> __param_generics) {
		this->self = jule::Ref<_1506406d0_StructDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_fields = __param_fields;
		this->_field_public = __param_public;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_directives = __param_directives;
		this->_field_doc_comments = __param_doc_comments;
		this->_field_generics = __param_generics;
	}

	~_1506406d0_StructDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1506406d0_StructDecl(void) { this->self = jule::Ref<_1506406d0_StructDecl>::make(this, nullptr); }

	inline bool operator==(const _1506406d0_StructDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_fields == _Src._field_fields &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc_comments == _Src._field_doc_comments &&
			this->_field_generics == _Src._field_generics;
	}

	inline bool operator!=(const _1506406d0_StructDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1506406d0_FieldDecl {
	jule::Ref<_1506406d0_FieldDecl> self{};

	_150640f50_Token _field_token{_150640f50_Token()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_1506406d0_TypeDecl> _field_kind{jule::Ref<_1506406d0_TypeDecl>()};


	_1506406d0_FieldDecl(_150640f50_Token __param_token, jule::Bool __param_public, jule::Bool __param_mutable, jule::Str __param_ident, jule::Ref<_1506406d0_TypeDecl> __param_kind) {
		this->self = jule::Ref<_1506406d0_FieldDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_public = __param_public;
		this->_field_mutable = __param_mutable;
		this->_field_ident = __param_ident;
		this->_field_kind = __param_kind;
	}

	~_1506406d0_FieldDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1506406d0_FieldDecl(void) { this->self = jule::Ref<_1506406d0_FieldDecl>::make(this, nullptr); }

	inline bool operator==(const _1506406d0_FieldDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_public == _Src._field_public &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1506406d0_FieldDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1506406d0_EnumDecl {
	jule::Ref<_1506406d0_EnumDecl> self{};

	_150640f50_Token _field_token{_150640f50_Token()};
	jule::Bool _field_public{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_1506406d0_TypeDecl> _field_kind{jule::Ref<_1506406d0_TypeDecl>()};
	jule::Slice<jule::Ref<_1506406d0_EnumItemDecl>> _field_items{jule::Slice<jule::Ref<_1506406d0_EnumItemDecl>>()};
	jule::Ref<_1506406d0_CommentGroup> _field_doc_comments{jule::Ref<_1506406d0_CommentGroup>()};


	_1506406d0_EnumDecl(_150640f50_Token __param_token, jule::Bool __param_public, jule::Str __param_ident, jule::Ref<_1506406d0_TypeDecl> __param_kind, jule::Slice<jule::Ref<_1506406d0_EnumItemDecl>> __param_items, jule::Ref<_1506406d0_CommentGroup> __param_doc_comments) {
		this->self = jule::Ref<_1506406d0_EnumDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_public = __param_public;
		this->_field_ident = __param_ident;
		this->_field_kind = __param_kind;
		this->_field_items = __param_items;
		this->_field_doc_comments = __param_doc_comments;
	}

	~_1506406d0_EnumDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1506406d0_EnumDecl(void) { this->self = jule::Ref<_1506406d0_EnumDecl>::make(this, nullptr); }

	inline jule::Bool _method_default_typed(void);


	inline bool operator==(const _1506406d0_EnumDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_public == _Src._field_public &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind &&
			this->_field_items == _Src._field_items &&
			this->_field_doc_comments == _Src._field_doc_comments;
	}

	inline bool operator!=(const _1506406d0_EnumDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1506406d0_EnumItemDecl {
	jule::Ref<_1506406d0_EnumItemDecl> self{};

	_150640f50_Token _field_token{_150640f50_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_1506406d0_Expr> _field_expr{jule::Ref<_1506406d0_Expr>()};


	_1506406d0_EnumItemDecl(_150640f50_Token __param_token, jule::Str __param_ident, jule::Ref<_1506406d0_Expr> __param_expr) {
		this->self = jule::Ref<_1506406d0_EnumItemDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_expr = __param_expr;
	}

	~_1506406d0_EnumItemDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1506406d0_EnumItemDecl(void) { this->self = jule::Ref<_1506406d0_EnumItemDecl>::make(this, nullptr); }

	inline jule::Bool _method_auto_expr(void);


	inline bool operator==(const _1506406d0_EnumItemDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1506406d0_EnumItemDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1506406d0_UseDecl {
	jule::Ref<_1506406d0_UseDecl> self{};

	_150640f50_Token _field_token{_150640f50_Token()};
	jule::Str _field_link_path{jule::Str()};
	jule::Bool _field_full{jule::Bool()};
	jule::Slice<_150640f50_Token> _field_selected{jule::Slice<_150640f50_Token>()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_std{jule::Bool()};


	_1506406d0_UseDecl(_150640f50_Token __param_token, jule::Str __param_link_path, jule::Bool __param_full, jule::Slice<_150640f50_Token> __param_selected, jule::Bool __param_cpp_linked, jule::Bool __param_std) {
		this->self = jule::Ref<_1506406d0_UseDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_link_path = __param_link_path;
		this->_field_full = __param_full;
		this->_field_selected = __param_selected;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_std = __param_std;
	}

	~_1506406d0_UseDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1506406d0_UseDecl(void) { this->self = jule::Ref<_1506406d0_UseDecl>::make(this, nullptr); }

	inline bool operator==(const _1506406d0_UseDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_link_path == _Src._field_link_path &&
			this->_field_full == _Src._field_full &&
			this->_field_selected == _Src._field_selected &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_std == _Src._field_std;
	}

	inline bool operator!=(const _1506406d0_UseDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1506406d0_Case {
	jule::Ref<_1506406d0_Case> self{};

	_150640f50_Token _field_token{_150640f50_Token()};
	jule::Ref<_1506406d0_ScopeTree> _field_scope{jule::Ref<_1506406d0_ScopeTree>()};
	jule::Slice<jule::Ref<_1506406d0_Expr>> _field_exprs{jule::Slice<jule::Ref<_1506406d0_Expr>>()};


	_1506406d0_Case(_150640f50_Token __param_token, jule::Ref<_1506406d0_ScopeTree> __param_scope, jule::Slice<jule::Ref<_1506406d0_Expr>> __param_exprs) {
		this->self = jule::Ref<_1506406d0_Case>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_scope = __param_scope;
		this->_field_exprs = __param_exprs;
	}

	~_1506406d0_Case(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1506406d0_Case(void) { this->self = jule::Ref<_1506406d0_Case>::make(this, nullptr); }

	inline bool operator==(const _1506406d0_Case &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_scope == _Src._field_scope &&
			this->_field_exprs == _Src._field_exprs;
	}

	inline bool operator!=(const _1506406d0_Case &_Src) const { return !this->operator==(_Src); }
};


struct _1506406d0_TypeAliasDecl {
	jule::Ref<_1506406d0_TypeAliasDecl> self{};

	jule::Ref<_1506406d0_ScopeTree> _field_scope{jule::Ref<_1506406d0_ScopeTree>()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	_150640f50_Token _field_token{_150640f50_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_1506406d0_TypeDecl> _field_kind{jule::Ref<_1506406d0_TypeDecl>()};
	jule::Ref<_1506406d0_CommentGroup> _field_doc_comments{jule::Ref<_1506406d0_CommentGroup>()};


	_1506406d0_TypeAliasDecl(jule::Ref<_1506406d0_ScopeTree> __param_scope, jule::Bool __param_public, jule::Bool __param_cpp_linked, _150640f50_Token __param_token, jule::Str __param_ident, jule::Ref<_1506406d0_TypeDecl> __param_kind, jule::Ref<_1506406d0_CommentGroup> __param_doc_comments) {
		this->self = jule::Ref<_1506406d0_TypeAliasDecl>::make(this, nullptr);

		this->_field_scope = __param_scope;
		this->_field_public = __param_public;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_kind = __param_kind;
		this->_field_doc_comments = __param_doc_comments;
	}

	~_1506406d0_TypeAliasDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1506406d0_TypeAliasDecl(void) { this->self = jule::Ref<_1506406d0_TypeAliasDecl>::make(this, nullptr); }

	inline bool operator==(const _1506406d0_TypeAliasDecl &_Src) const {
		return 
			this->_field_scope == _Src._field_scope &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind &&
			this->_field_doc_comments == _Src._field_doc_comments;
	}

	inline bool operator!=(const _1506406d0_TypeAliasDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1506406d0_Else {
	jule::Ref<_1506406d0_Else> self{};

	_150640f50_Token _field_token{_150640f50_Token()};
	jule::Ref<_1506406d0_ScopeTree> _field_scope{jule::Ref<_1506406d0_ScopeTree>()};


	_1506406d0_Else(_150640f50_Token __param_token, jule::Ref<_1506406d0_ScopeTree> __param_scope) {
		this->self = jule::Ref<_1506406d0_Else>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_scope = __param_scope;
	}

	~_1506406d0_Else(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1506406d0_Else(void) { this->self = jule::Ref<_1506406d0_Else>::make(this, nullptr); }

	inline bool operator==(const _1506406d0_Else &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _1506406d0_Else &_Src) const { return !this->operator==(_Src); }
};


struct _1506406d0_If {
	jule::Ref<_1506406d0_If> self{};

	_150640f50_Token _field_token{_150640f50_Token()};
	jule::Ref<_1506406d0_Expr> _field_expr{jule::Ref<_1506406d0_Expr>()};
	jule::Ref<_1506406d0_ScopeTree> _field_scope{jule::Ref<_1506406d0_ScopeTree>()};


	_1506406d0_If(_150640f50_Token __param_token, jule::Ref<_1506406d0_Expr> __param_expr, jule::Ref<_1506406d0_ScopeTree> __param_scope) {
		this->self = jule::Ref<_1506406d0_If>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_expr = __param_expr;
		this->_field_scope = __param_scope;
	}

	~_1506406d0_If(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1506406d0_If(void) { this->self = jule::Ref<_1506406d0_If>::make(this, nullptr); }

	inline bool operator==(const _1506406d0_If &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _1506406d0_If &_Src) const { return !this->operator==(_Src); }
};


struct _1506406d0_ContSt {
	jule::Ref<_1506406d0_ContSt> self{};

	_150640f50_Token _field_token{_150640f50_Token()};
	_150640f50_Token _field_label{_150640f50_Token()};


	_1506406d0_ContSt(_150640f50_Token __param_token, _150640f50_Token __param_label) {
		this->self = jule::Ref<_1506406d0_ContSt>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_label = __param_label;
	}

	~_1506406d0_ContSt(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1506406d0_ContSt(void) { this->self = jule::Ref<_1506406d0_ContSt>::make(this, nullptr); }

	inline bool operator==(const _1506406d0_ContSt &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_label == _Src._field_label;
	}

	inline bool operator!=(const _1506406d0_ContSt &_Src) const { return !this->operator==(_Src); }
};


struct _1506406d0_BreakSt {
	jule::Ref<_1506406d0_BreakSt> self{};

	_150640f50_Token _field_token{_150640f50_Token()};
	_150640f50_Token _field_label{_150640f50_Token()};


	_1506406d0_BreakSt(_150640f50_Token __param_token, _150640f50_Token __param_label) {
		this->self = jule::Ref<_1506406d0_BreakSt>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_label = __param_label;
	}

	~_1506406d0_BreakSt(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1506406d0_BreakSt(void) { this->self = jule::Ref<_1506406d0_BreakSt>::make(this, nullptr); }

	inline bool operator==(const _1506406d0_BreakSt &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_label == _Src._field_label;
	}

	inline bool operator!=(const _1506406d0_BreakSt &_Src) const { return !this->operator==(_Src); }
};


struct _1506406d0_VarDecl {
	jule::Ref<_1506406d0_VarDecl> self{};

	jule::Ref<_1506406d0_ScopeTree> _field_scope{jule::Ref<_1506406d0_ScopeTree>()};
	_150640f50_Token _field_token{_150640f50_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Bool _field_constant{jule::Bool()};
	jule::Bool _field_statically{jule::Bool()};
	jule::Bool _field_reference{jule::Bool()};
	jule::Slice<jule::Ref<_1506406d0_Directive>> _field_directives{jule::Slice<jule::Ref<_1506406d0_Directive>>()};
	jule::Ref<_1506406d0_CommentGroup> _field_doc_comments{jule::Ref<_1506406d0_CommentGroup>()};
	jule::Ref<_1506406d0_TypeDecl> _field_kind{jule::Ref<_1506406d0_TypeDecl>()};
	jule::Ref<_1506406d0_Expr> _field_expr{jule::Ref<_1506406d0_Expr>()};


	_1506406d0_VarDecl(jule::Ref<_1506406d0_ScopeTree> __param_scope, _150640f50_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked, jule::Bool __param_public, jule::Bool __param_mutable, jule::Bool __param_constant, jule::Bool __param_statically, jule::Bool __param_reference, jule::Slice<jule::Ref<_1506406d0_Directive>> __param_directives, jule::Ref<_1506406d0_CommentGroup> __param_doc_comments, jule::Ref<_1506406d0_TypeDecl> __param_kind, jule::Ref<_1506406d0_Expr> __param_expr) {
		this->self = jule::Ref<_1506406d0_VarDecl>::make(this, nullptr);

		this->_field_scope = __param_scope;
		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_public = __param_public;
		this->_field_mutable = __param_mutable;
		this->_field_constant = __param_constant;
		this->_field_statically = __param_statically;
		this->_field_reference = __param_reference;
		this->_field_directives = __param_directives;
		this->_field_doc_comments = __param_doc_comments;
		this->_field_kind = __param_kind;
		this->_field_expr = __param_expr;
	}

	~_1506406d0_VarDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1506406d0_VarDecl(void) { this->self = jule::Ref<_1506406d0_VarDecl>::make(this, nullptr); }

	inline bool operator==(const _1506406d0_VarDecl &_Src) const {
		return 
			this->_field_scope == _Src._field_scope &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_public == _Src._field_public &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_constant == _Src._field_constant &&
			this->_field_statically == _Src._field_statically &&
			this->_field_reference == _Src._field_reference &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc_comments == _Src._field_doc_comments &&
			this->_field_kind == _Src._field_kind &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1506406d0_VarDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1506406d0_FnDecl {
	jule::Ref<_1506406d0_FnDecl> self{};

	_150640f50_Token _field_token{_150640f50_Token()};
	jule::Bool _field_global{jule::Bool()};
	jule::Bool _field_unsafety{jule::Bool()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_statically{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Slice<jule::Ref<_1506406d0_Directive>> _field_directives{jule::Slice<jule::Ref<_1506406d0_Directive>>()};
	jule::Ref<_1506406d0_CommentGroup> _field_doc_comments{jule::Ref<_1506406d0_CommentGroup>()};
	jule::Ref<_1506406d0_ScopeTree> _field_scope{jule::Ref<_1506406d0_ScopeTree>()};
	jule::Slice<jule::Ref<_1506406d0_GenericDecl>> _field_generics{jule::Slice<jule::Ref<_1506406d0_GenericDecl>>()};
	jule::Ref<_1506406d0_RetTypeDecl> _field_result{jule::Ref<_1506406d0_RetTypeDecl>()};
	jule::Slice<jule::Ref<_1506406d0_ParamDecl>> _field_params{jule::Slice<jule::Ref<_1506406d0_ParamDecl>>()};


	_1506406d0_FnDecl(_150640f50_Token __param_token, jule::Bool __param_global, jule::Bool __param_unsafety, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Bool __param_statically, jule::Str __param_ident, jule::Slice<jule::Ref<_1506406d0_Directive>> __param_directives, jule::Ref<_1506406d0_CommentGroup> __param_doc_comments, jule::Ref<_1506406d0_ScopeTree> __param_scope, jule::Slice<jule::Ref<_1506406d0_GenericDecl>> __param_generics, jule::Ref<_1506406d0_RetTypeDecl> __param_result, jule::Slice<jule::Ref<_1506406d0_ParamDecl>> __param_params) {
		this->self = jule::Ref<_1506406d0_FnDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_global = __param_global;
		this->_field_unsafety = __param_unsafety;
		this->_field_public = __param_public;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_statically = __param_statically;
		this->_field_ident = __param_ident;
		this->_field_directives = __param_directives;
		this->_field_doc_comments = __param_doc_comments;
		this->_field_scope = __param_scope;
		this->_field_generics = __param_generics;
		this->_field_result = __param_result;
		this->_field_params = __param_params;
	}

	~_1506406d0_FnDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1506406d0_FnDecl(void) { this->self = jule::Ref<_1506406d0_FnDecl>::make(this, nullptr); }

	inline jule::Bool _method_is_anon(void);


	inline bool operator==(const _1506406d0_FnDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_global == _Src._field_global &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_statically == _Src._field_statically &&
			this->_field_ident == _Src._field_ident &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc_comments == _Src._field_doc_comments &&
			this->_field_scope == _Src._field_scope &&
			this->_field_generics == _Src._field_generics &&
			this->_field_result == _Src._field_result &&
			this->_field_params == _Src._field_params;
	}

	inline bool operator!=(const _1506406d0_FnDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1506406d0_ParamDecl {
	jule::Ref<_1506406d0_ParamDecl> self{};

	_150640f50_Token _field_token{_150640f50_Token()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Bool _field_variadic{jule::Bool()};
	jule::Bool _field_reference{jule::Bool()};
	jule::Ref<_1506406d0_TypeDecl> _field_kind{jule::Ref<_1506406d0_TypeDecl>()};
	jule::Str _field_ident{jule::Str()};


	_1506406d0_ParamDecl(_150640f50_Token __param_token, jule::Bool __param_mutable, jule::Bool __param_variadic, jule::Bool __param_reference, jule::Ref<_1506406d0_TypeDecl> __param_kind, jule::Str __param_ident) {
		this->self = jule::Ref<_1506406d0_ParamDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_mutable = __param_mutable;
		this->_field_variadic = __param_variadic;
		this->_field_reference = __param_reference;
		this->_field_kind = __param_kind;
		this->_field_ident = __param_ident;
	}

	~_1506406d0_ParamDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1506406d0_ParamDecl(void) { this->self = jule::Ref<_1506406d0_ParamDecl>::make(this, nullptr); }

	inline jule::Bool _method_is_self(void);


	inline jule::Bool _method_is_ref(void);


	inline bool operator==(const _1506406d0_ParamDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_variadic == _Src._field_variadic &&
			this->_field_reference == _Src._field_reference &&
			this->_field_kind == _Src._field_kind &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1506406d0_ParamDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1506406d0_AssignLeft {
	jule::Ref<_1506406d0_AssignLeft> self{};

	_150640f50_Token _field_token{_150640f50_Token()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Bool _field_reference{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_1506406d0_Expr> _field_expr{jule::Ref<_1506406d0_Expr>()};


	_1506406d0_AssignLeft(_150640f50_Token __param_token, jule::Bool __param_mutable, jule::Bool __param_reference, jule::Str __param_ident, jule::Ref<_1506406d0_Expr> __param_expr) {
		this->self = jule::Ref<_1506406d0_AssignLeft>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_mutable = __param_mutable;
		this->_field_reference = __param_reference;
		this->_field_ident = __param_ident;
		this->_field_expr = __param_expr;
	}

	~_1506406d0_AssignLeft(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1506406d0_AssignLeft(void) { this->self = jule::Ref<_1506406d0_AssignLeft>::make(this, nullptr); }

	inline bool operator==(const _1506406d0_AssignLeft &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_reference == _Src._field_reference &&
			this->_field_ident == _Src._field_ident &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1506406d0_AssignLeft &_Src) const { return !this->operator==(_Src); }
};


struct _1506406d0_GotoSt {
	jule::Ref<_1506406d0_GotoSt> self{};

	_150640f50_Token _field_token{_150640f50_Token()};
	_150640f50_Token _field_label{_150640f50_Token()};


	_1506406d0_GotoSt(_150640f50_Token __param_token, _150640f50_Token __param_label) {
		this->self = jule::Ref<_1506406d0_GotoSt>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_label = __param_label;
	}

	~_1506406d0_GotoSt(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1506406d0_GotoSt(void) { this->self = jule::Ref<_1506406d0_GotoSt>::make(this, nullptr); }

	inline bool operator==(const _1506406d0_GotoSt &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_label == _Src._field_label;
	}

	inline bool operator!=(const _1506406d0_GotoSt &_Src) const { return !this->operator==(_Src); }
};


struct _1506406d0_GenericDecl {
	jule::Ref<_1506406d0_GenericDecl> self{};

	_150640f50_Token _field_token{_150640f50_Token()};
	jule::Str _field_ident{jule::Str()};


	_1506406d0_GenericDecl(_150640f50_Token __param_token, jule::Str __param_ident) {
		this->self = jule::Ref<_1506406d0_GenericDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
	}

	~_1506406d0_GenericDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1506406d0_GenericDecl(void) { this->self = jule::Ref<_1506406d0_GenericDecl>::make(this, nullptr); }

	inline bool operator==(const _1506406d0_GenericDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1506406d0_GenericDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1506406d0_FnCallExpr {
	jule::Ref<_1506406d0_FnCallExpr> self{};

	_150640f50_Token _field_token{_150640f50_Token()};
	jule::Ref<_1506406d0_Expr> _field_expr{jule::Ref<_1506406d0_Expr>()};
	jule::Slice<jule::Ref<_1506406d0_TypeDecl>> _field_generics{jule::Slice<jule::Ref<_1506406d0_TypeDecl>>()};
	jule::Slice<jule::Ref<_1506406d0_Expr>> _field_args{jule::Slice<jule::Ref<_1506406d0_Expr>>()};
	jule::Bool _field_concurrent{jule::Bool()};


	_1506406d0_FnCallExpr(_150640f50_Token __param_token, jule::Ref<_1506406d0_Expr> __param_expr, jule::Slice<jule::Ref<_1506406d0_TypeDecl>> __param_generics, jule::Slice<jule::Ref<_1506406d0_Expr>> __param_args, jule::Bool __param_concurrent) {
		this->self = jule::Ref<_1506406d0_FnCallExpr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_expr = __param_expr;
		this->_field_generics = __param_generics;
		this->_field_args = __param_args;
		this->_field_concurrent = __param_concurrent;
	}

	~_1506406d0_FnCallExpr(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1506406d0_FnCallExpr(void) { this->self = jule::Ref<_1506406d0_FnCallExpr>::make(this, nullptr); }

	inline bool operator==(const _1506406d0_FnCallExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_generics == _Src._field_generics &&
			this->_field_args == _Src._field_args &&
			this->_field_concurrent == _Src._field_concurrent;
	}

	inline bool operator!=(const _1506406d0_FnCallExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1506406d0_Expr {
	jule::Ref<_1506406d0_Expr> self{};

	_150640f50_Token _field_token{_150640f50_Token()};
	jule::Any _field_kind{jule::Any()};


	_1506406d0_Expr(_150640f50_Token __param_token, jule::Any __param_kind) {
		this->self = jule::Ref<_1506406d0_Expr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_kind = __param_kind;
	}

	~_1506406d0_Expr(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1506406d0_Expr(void) { this->self = jule::Ref<_1506406d0_Expr>::make(this, nullptr); }

	inline jule::Bool _method_is_fn_call(void);


	inline bool operator==(const _1506406d0_Expr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1506406d0_Expr &_Src) const { return !this->operator==(_Src); }
};


struct _1506406d0_IdentTypeDecl {
	jule::Ref<_1506406d0_IdentTypeDecl> self{};

	_150640f50_Token _field_token{_150640f50_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Slice<jule::Ref<_1506406d0_TypeDecl>> _field_generics{jule::Slice<jule::Ref<_1506406d0_TypeDecl>>()};


	_1506406d0_IdentTypeDecl(_150640f50_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked, jule::Slice<jule::Ref<_1506406d0_TypeDecl>> __param_generics) {
		this->self = jule::Ref<_1506406d0_IdentTypeDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_generics = __param_generics;
	}

	~_1506406d0_IdentTypeDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1506406d0_IdentTypeDecl(void) { this->self = jule::Ref<_1506406d0_IdentTypeDecl>::make(this, nullptr); }

	inline jule::Bool _method_is_prim(void);


	inline bool operator==(const _1506406d0_IdentTypeDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_generics == _Src._field_generics;
	}

	inline bool operator!=(const _1506406d0_IdentTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1506406d0_TypeDecl {
	jule::Ref<_1506406d0_TypeDecl> self{};

	_150640f50_Token _field_token{_150640f50_Token()};
	jule::Any _field_kind{jule::Any()};


	_1506406d0_TypeDecl(_150640f50_Token __param_token, jule::Any __param_kind) {
		this->self = jule::Ref<_1506406d0_TypeDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_kind = __param_kind;
	}

	~_1506406d0_TypeDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1506406d0_TypeDecl(void) { this->self = jule::Ref<_1506406d0_TypeDecl>::make(this, nullptr); }

	inline bool operator==(const _1506406d0_TypeDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1506406d0_TypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1506406d0_Directive {
	jule::Ref<_1506406d0_Directive> self{};

	_150640f50_Token _field_token{_150640f50_Token()};
	jule::Str _field_tag{jule::Str()};
	jule::Slice<jule::Str> _field_args{jule::Slice<jule::Str>()};


	_1506406d0_Directive(_150640f50_Token __param_token, jule::Str __param_tag, jule::Slice<jule::Str> __param_args) {
		this->self = jule::Ref<_1506406d0_Directive>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_tag = __param_tag;
		this->_field_args = __param_args;
	}

	~_1506406d0_Directive(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1506406d0_Directive(void) { this->self = jule::Ref<_1506406d0_Directive>::make(this, nullptr); }

	inline bool operator==(const _1506406d0_Directive &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_tag == _Src._field_tag &&
			this->_field_args == _Src._field_args;
	}

	inline bool operator!=(const _1506406d0_Directive &_Src) const { return !this->operator==(_Src); }
};


struct _1506406d0_Comment {
	jule::Ref<_1506406d0_Comment> self{};

	_150640f50_Token _field_token{_150640f50_Token()};
	jule::Str _field_text{jule::Str()};


	_1506406d0_Comment(_150640f50_Token __param_token, jule::Str __param_text) {
		this->self = jule::Ref<_1506406d0_Comment>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_text = __param_text;
	}

	~_1506406d0_Comment(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1506406d0_Comment(void) { this->self = jule::Ref<_1506406d0_Comment>::make(this, nullptr); }

	inline jule::Bool _method_is_directive(void);


	inline bool operator==(const _1506406d0_Comment &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_text == _Src._field_text;
	}

	inline bool operator!=(const _1506406d0_Comment &_Src) const { return !this->operator==(_Src); }
};


struct _1506406d0_Node {
	jule::Ref<_1506406d0_Node> self{};

	_150640f50_Token _field_token{_150640f50_Token()};
	jule::Any _field_data{jule::Any()};


	_1506406d0_Node(_150640f50_Token __param_token, jule::Any __param_data) {
		this->self = jule::Ref<_1506406d0_Node>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_data = __param_data;
	}

	~_1506406d0_Node(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1506406d0_Node(void) { this->self = jule::Ref<_1506406d0_Node>::make(this, nullptr); }

	inline jule::Bool _method_is_decl(void);


	inline jule::Bool _method_is_comment(void);


	inline jule::Bool _method_is_impl(void);


	inline jule::Bool _method_is_use_decl(void);


	inline bool operator==(const _1506406d0_Node &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_data == _Src._field_data;
	}

	inline bool operator!=(const _1506406d0_Node &_Src) const { return !this->operator==(_Src); }
};


struct _1509ba170_Vector_0 {
	jule::Ref<_1509ba170_Vector_0> self{};

	StdJuleVectorBuffer<_150640f50_Token> _field__buffer{StdJuleVectorBuffer<_150640f50_Token>()};


	_1509ba170_Vector_0(StdJuleVectorBuffer<_150640f50_Token> __param__buffer) {
		this->self = jule::Ref<_1509ba170_Vector_0>::make(this, nullptr);

		this->_field__buffer = __param__buffer;
	}

	~_1509ba170_Vector_0(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1509ba170_Vector_0(void) { this->self = jule::Ref<_1509ba170_Vector_0>::make(this, nullptr); }

	static inline _1509ba170_Vector_0 _static_method_new(jule::Int);


	inline jule::Int _method_calc_grow(jule::Int);


	inline void _method_resize_alloc(jule::Int);


	inline void _method_review_allocation(jule::Int);


	inline jule::Int _method_len(void);


	inline jule::Int _method_cap(void);


	inline void _method_dealloc(void);


	inline void _method_set_len(jule::Int);


	inline _150640f50_Token _method_at(jule::Int);


	inline void _method_set(jule::Int,_150640f50_Token);


	inline void _method_push(_150640f50_Token);


	inline void _method_push_front(_150640f50_Token);


	inline void _method_append(jule::Slice<_150640f50_Token>);


	inline void _method_merge(_1509ba170_Vector_0);


	inline void _method_merge_front(_1509ba170_Vector_0);


	inline void _method_remove_range(jule::Int,jule::Int);


	inline void _method_insert(jule::Int,_150640f50_Token);


	inline _1509ba170_Vector_0 _method_slice(jule::Int,jule::Int);


	inline bool operator==(const _1509ba170_Vector_0 &_Src) const {
		return true;
	}

	inline bool operator!=(const _1509ba170_Vector_0 &_Src) const { return !this->operator==(_Src); }
};

struct _1509ba170_Vector_1 {
	jule::Ref<_1509ba170_Vector_1> self{};

	StdJuleVectorBuffer<jule::Ref<_1506406d0_Directive>> _field__buffer{StdJuleVectorBuffer<jule::Ref<_1506406d0_Directive>>()};


	_1509ba170_Vector_1(StdJuleVectorBuffer<jule::Ref<_1506406d0_Directive>> __param__buffer) {
		this->self = jule::Ref<_1509ba170_Vector_1>::make(this, nullptr);

		this->_field__buffer = __param__buffer;
	}

	~_1509ba170_Vector_1(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1509ba170_Vector_1(void) { this->self = jule::Ref<_1509ba170_Vector_1>::make(this, nullptr); }

	static inline _1509ba170_Vector_1 _static_method_new(jule::Int);


	inline jule::Int _method_calc_grow(jule::Int);


	inline void _method_resize_alloc(jule::Int);


	inline void _method_review_allocation(jule::Int);


	inline jule::Int _method_len(void);


	inline jule::Int _method_cap(void);


	inline void _method_dealloc(void);


	inline void _method_set_len(jule::Int);


	inline jule::Ref<_1506406d0_Directive> _method_at(jule::Int);


	inline void _method_set(jule::Int,jule::Ref<_1506406d0_Directive>);


	inline void _method_push(jule::Ref<_1506406d0_Directive>);


	inline void _method_push_front(jule::Ref<_1506406d0_Directive>);


	inline void _method_append(jule::Slice<jule::Ref<_1506406d0_Directive>>);


	inline void _method_merge(_1509ba170_Vector_1);


	inline void _method_merge_front(_1509ba170_Vector_1);


	inline void _method_remove_range(jule::Int,jule::Int);


	inline void _method_insert(jule::Int,jule::Ref<_1506406d0_Directive>);


	inline _1509ba170_Vector_1 _method_slice(jule::Int,jule::Int);


	inline bool operator==(const _1509ba170_Vector_1 &_Src) const {
		return true;
	}

	inline bool operator!=(const _1509ba170_Vector_1 &_Src) const { return !this->operator==(_Src); }
};

struct _1509ba170_Vector_2 {
	jule::Ref<_1509ba170_Vector_2> self{};

	StdJuleVectorBuffer<jule::Ref<_1506406d0_UseDecl>> _field__buffer{StdJuleVectorBuffer<jule::Ref<_1506406d0_UseDecl>>()};


	_1509ba170_Vector_2(StdJuleVectorBuffer<jule::Ref<_1506406d0_UseDecl>> __param__buffer) {
		this->self = jule::Ref<_1509ba170_Vector_2>::make(this, nullptr);

		this->_field__buffer = __param__buffer;
	}

	~_1509ba170_Vector_2(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1509ba170_Vector_2(void) { this->self = jule::Ref<_1509ba170_Vector_2>::make(this, nullptr); }

	static inline _1509ba170_Vector_2 _static_method_new(jule::Int);


	inline jule::Int _method_calc_grow(jule::Int);


	inline void _method_resize_alloc(jule::Int);


	inline void _method_review_allocation(jule::Int);


	inline jule::Int _method_len(void);


	inline jule::Int _method_cap(void);


	inline void _method_dealloc(void);


	inline void _method_set_len(jule::Int);


	inline jule::Ref<_1506406d0_UseDecl> _method_at(jule::Int);


	inline void _method_set(jule::Int,jule::Ref<_1506406d0_UseDecl>);


	inline void _method_push(jule::Ref<_1506406d0_UseDecl>);


	inline void _method_push_front(jule::Ref<_1506406d0_UseDecl>);


	inline void _method_append(jule::Slice<jule::Ref<_1506406d0_UseDecl>>);


	inline void _method_merge(_1509ba170_Vector_2);


	inline void _method_merge_front(_1509ba170_Vector_2);


	inline void _method_remove_range(jule::Int,jule::Int);


	inline void _method_insert(jule::Int,jule::Ref<_1506406d0_UseDecl>);


	inline _1509ba170_Vector_2 _method_slice(jule::Int,jule::Int);


	inline bool operator==(const _1509ba170_Vector_2 &_Src) const {
		return true;
	}

	inline bool operator!=(const _1509ba170_Vector_2 &_Src) const { return !this->operator==(_Src); }
};

struct _1509ba170_Vector_3 {
	jule::Ref<_1509ba170_Vector_3> self{};

	StdJuleVectorBuffer<jule::Ref<_1506406d0_Impl>> _field__buffer{StdJuleVectorBuffer<jule::Ref<_1506406d0_Impl>>()};


	_1509ba170_Vector_3(StdJuleVectorBuffer<jule::Ref<_1506406d0_Impl>> __param__buffer) {
		this->self = jule::Ref<_1509ba170_Vector_3>::make(this, nullptr);

		this->_field__buffer = __param__buffer;
	}

	~_1509ba170_Vector_3(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1509ba170_Vector_3(void) { this->self = jule::Ref<_1509ba170_Vector_3>::make(this, nullptr); }

	static inline _1509ba170_Vector_3 _static_method_new(jule::Int);


	inline jule::Int _method_calc_grow(jule::Int);


	inline void _method_resize_alloc(jule::Int);


	inline void _method_review_allocation(jule::Int);


	inline jule::Int _method_len(void);


	inline jule::Int _method_cap(void);


	inline void _method_dealloc(void);


	inline void _method_set_len(jule::Int);


	inline jule::Ref<_1506406d0_Impl> _method_at(jule::Int);


	inline void _method_set(jule::Int,jule::Ref<_1506406d0_Impl>);


	inline void _method_push(jule::Ref<_1506406d0_Impl>);


	inline void _method_push_front(jule::Ref<_1506406d0_Impl>);


	inline void _method_append(jule::Slice<jule::Ref<_1506406d0_Impl>>);


	inline void _method_merge(_1509ba170_Vector_3);


	inline void _method_merge_front(_1509ba170_Vector_3);


	inline void _method_remove_range(jule::Int,jule::Int);


	inline void _method_insert(jule::Int,jule::Ref<_1506406d0_Impl>);


	inline _1509ba170_Vector_3 _method_slice(jule::Int,jule::Int);


	inline bool operator==(const _1509ba170_Vector_3 &_Src) const {
		return true;
	}

	inline bool operator!=(const _1509ba170_Vector_3 &_Src) const { return !this->operator==(_Src); }
};

struct _1509ba170_Vector_4 {
	jule::Ref<_1509ba170_Vector_4> self{};

	StdJuleVectorBuffer<jule::Ref<_1506406d0_Comment>> _field__buffer{StdJuleVectorBuffer<jule::Ref<_1506406d0_Comment>>()};


	_1509ba170_Vector_4(StdJuleVectorBuffer<jule::Ref<_1506406d0_Comment>> __param__buffer) {
		this->self = jule::Ref<_1509ba170_Vector_4>::make(this, nullptr);

		this->_field__buffer = __param__buffer;
	}

	~_1509ba170_Vector_4(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1509ba170_Vector_4(void) { this->self = jule::Ref<_1509ba170_Vector_4>::make(this, nullptr); }

	static inline _1509ba170_Vector_4 _static_method_new(jule::Int);


	inline jule::Int _method_calc_grow(jule::Int);


	inline void _method_resize_alloc(jule::Int);


	inline void _method_review_allocation(jule::Int);


	inline jule::Int _method_len(void);


	inline jule::Int _method_cap(void);


	inline void _method_dealloc(void);


	inline void _method_set_len(jule::Int);


	inline jule::Ref<_1506406d0_Comment> _method_at(jule::Int);


	inline void _method_set(jule::Int,jule::Ref<_1506406d0_Comment>);


	inline void _method_push(jule::Ref<_1506406d0_Comment>);


	inline void _method_push_front(jule::Ref<_1506406d0_Comment>);


	inline void _method_append(jule::Slice<jule::Ref<_1506406d0_Comment>>);


	inline void _method_merge(_1509ba170_Vector_4);


	inline void _method_merge_front(_1509ba170_Vector_4);


	inline void _method_remove_range(jule::Int,jule::Int);


	inline void _method_insert(jule::Int,jule::Ref<_1506406d0_Comment>);


	inline _1509ba170_Vector_4 _method_slice(jule::Int,jule::Int);


	inline bool operator==(const _1509ba170_Vector_4 &_Src) const {
		return true;
	}

	inline bool operator!=(const _1509ba170_Vector_4 &_Src) const { return !this->operator==(_Src); }
};

struct _1509ba170_Vector_5 {
	jule::Ref<_1509ba170_Vector_5> self{};

	StdJuleVectorBuffer<_1506406d0_Node> _field__buffer{StdJuleVectorBuffer<_1506406d0_Node>()};


	_1509ba170_Vector_5(StdJuleVectorBuffer<_1506406d0_Node> __param__buffer) {
		this->self = jule::Ref<_1509ba170_Vector_5>::make(this, nullptr);

		this->_field__buffer = __param__buffer;
	}

	~_1509ba170_Vector_5(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1509ba170_Vector_5(void) { this->self = jule::Ref<_1509ba170_Vector_5>::make(this, nullptr); }

	static inline _1509ba170_Vector_5 _static_method_new(jule::Int);


	inline jule::Int _method_calc_grow(jule::Int);


	inline void _method_resize_alloc(jule::Int);


	inline void _method_review_allocation(jule::Int);


	inline jule::Int _method_len(void);


	inline jule::Int _method_cap(void);


	inline void _method_dealloc(void);


	inline void _method_set_len(jule::Int);


	inline _1506406d0_Node _method_at(jule::Int);


	inline void _method_set(jule::Int,_1506406d0_Node);


	inline void _method_push(_1506406d0_Node);


	inline void _method_push_front(_1506406d0_Node);


	inline void _method_append(jule::Slice<_1506406d0_Node>);


	inline void _method_merge(_1509ba170_Vector_5);


	inline void _method_merge_front(_1509ba170_Vector_5);


	inline void _method_remove_range(jule::Int,jule::Int);


	inline void _method_insert(jule::Int,_1506406d0_Node);


	inline _1509ba170_Vector_5 _method_slice(jule::Int,jule::Int);


	inline bool operator==(const _1509ba170_Vector_5 &_Src) const {
		return true;
	}

	inline bool operator!=(const _1509ba170_Vector_5 &_Src) const { return !this->operator==(_Src); }
};

struct _1509ba170_Vector_6 {
	jule::Ref<_1509ba170_Vector_6> self{};

	StdJuleVectorBuffer<_150e75a70_Pass> _field__buffer{StdJuleVectorBuffer<_150e75a70_Pass>()};


	_1509ba170_Vector_6(StdJuleVectorBuffer<_150e75a70_Pass> __param__buffer) {
		this->self = jule::Ref<_1509ba170_Vector_6>::make(this, nullptr);

		this->_field__buffer = __param__buffer;
	}

	~_1509ba170_Vector_6(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1509ba170_Vector_6(void) { this->self = jule::Ref<_1509ba170_Vector_6>::make(this, nullptr); }

	static inline _1509ba170_Vector_6 _static_method_new(jule::Int);


	inline jule::Int _method_calc_grow(jule::Int);


	inline void _method_resize_alloc(jule::Int);


	inline void _method_review_allocation(jule::Int);


	inline jule::Int _method_len(void);


	inline jule::Int _method_cap(void);


	inline void _method_dealloc(void);


	inline void _method_set_len(jule::Int);


	inline _150e75a70_Pass _method_at(jule::Int);


	inline void _method_set(jule::Int,_150e75a70_Pass);


	inline void _method_push(_150e75a70_Pass);


	inline void _method_push_front(_150e75a70_Pass);


	inline void _method_append(jule::Slice<_150e75a70_Pass>);


	inline void _method_merge(_1509ba170_Vector_6);


	inline void _method_merge_front(_1509ba170_Vector_6);


	inline void _method_remove_range(jule::Int,jule::Int);


	inline void _method_insert(jule::Int,_150e75a70_Pass);


	inline _1509ba170_Vector_6 _method_slice(jule::Int,jule::Int);


	inline bool operator==(const _1509ba170_Vector_6 &_Src) const {
		return true;
	}

	inline bool operator!=(const _1509ba170_Vector_6 &_Src) const { return !this->operator==(_Src); }
};

struct _1509ba170_Vector_7 {
	jule::Ref<_1509ba170_Vector_7> self{};

	StdJuleVectorBuffer<jule::Ref<_150f26340_ImportInfo>> _field__buffer{StdJuleVectorBuffer<jule::Ref<_150f26340_ImportInfo>>()};


	_1509ba170_Vector_7(StdJuleVectorBuffer<jule::Ref<_150f26340_ImportInfo>> __param__buffer) {
		this->self = jule::Ref<_1509ba170_Vector_7>::make(this, nullptr);

		this->_field__buffer = __param__buffer;
	}

	~_1509ba170_Vector_7(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1509ba170_Vector_7(void) { this->self = jule::Ref<_1509ba170_Vector_7>::make(this, nullptr); }

	static inline _1509ba170_Vector_7 _static_method_new(jule::Int);


	inline jule::Int _method_calc_grow(jule::Int);


	inline void _method_resize_alloc(jule::Int);


	inline void _method_review_allocation(jule::Int);


	inline jule::Int _method_len(void);


	inline jule::Int _method_cap(void);


	inline void _method_dealloc(void);


	inline void _method_set_len(jule::Int);


	inline jule::Ref<_150f26340_ImportInfo> _method_at(jule::Int);


	inline void _method_set(jule::Int,jule::Ref<_150f26340_ImportInfo>);


	inline void _method_push(jule::Ref<_150f26340_ImportInfo>);


	inline void _method_push_front(jule::Ref<_150f26340_ImportInfo>);


	inline void _method_append(jule::Slice<jule::Ref<_150f26340_ImportInfo>>);


	inline void _method_merge(_1509ba170_Vector_7);


	inline void _method_merge_front(_1509ba170_Vector_7);


	inline void _method_remove_range(jule::Int,jule::Int);


	inline void _method_insert(jule::Int,jule::Ref<_150f26340_ImportInfo>);


	inline _1509ba170_Vector_7 _method_slice(jule::Int,jule::Int);


	inline bool operator==(const _1509ba170_Vector_7 &_Src) const {
		return true;
	}

	inline bool operator!=(const _1509ba170_Vector_7 &_Src) const { return !this->operator==(_Src); }
};

struct _1509ba170_Vector_8 {
	jule::Ref<_1509ba170_Vector_8> self{};

	StdJuleVectorBuffer<jule::Any> _field__buffer{StdJuleVectorBuffer<jule::Any>()};


	_1509ba170_Vector_8(StdJuleVectorBuffer<jule::Any> __param__buffer) {
		this->self = jule::Ref<_1509ba170_Vector_8>::make(this, nullptr);

		this->_field__buffer = __param__buffer;
	}

	~_1509ba170_Vector_8(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1509ba170_Vector_8(void) { this->self = jule::Ref<_1509ba170_Vector_8>::make(this, nullptr); }

	static inline _1509ba170_Vector_8 _static_method_new(jule::Int);


	inline jule::Int _method_calc_grow(jule::Int);


	inline void _method_resize_alloc(jule::Int);


	inline void _method_review_allocation(jule::Int);


	inline jule::Int _method_len(void);


	inline jule::Int _method_cap(void);


	inline void _method_dealloc(void);


	inline void _method_set_len(jule::Int);


	inline jule::Any _method_at(jule::Int);


	inline void _method_set(jule::Int,jule::Any);


	inline void _method_push(jule::Any);


	inline void _method_push_front(jule::Any);


	inline void _method_append(jule::Slice<jule::Any>);


	inline void _method_merge(_1509ba170_Vector_8);


	inline void _method_merge_front(_1509ba170_Vector_8);


	inline void _method_remove_range(jule::Int,jule::Int);


	inline void _method_insert(jule::Int,jule::Any);


	inline _1509ba170_Vector_8 _method_slice(jule::Int,jule::Int);


	inline bool operator==(const _1509ba170_Vector_8 &_Src) const {
		return true;
	}

	inline bool operator!=(const _1509ba170_Vector_8 &_Src) const { return !this->operator==(_Src); }
};

struct _1509ba170_Vector_9 {
	jule::Ref<_1509ba170_Vector_9> self{};

	StdJuleVectorBuffer<jule::Ref<_1511317d0_Var>> _field__buffer{StdJuleVectorBuffer<jule::Ref<_1511317d0_Var>>()};


	_1509ba170_Vector_9(StdJuleVectorBuffer<jule::Ref<_1511317d0_Var>> __param__buffer) {
		this->self = jule::Ref<_1509ba170_Vector_9>::make(this, nullptr);

		this->_field__buffer = __param__buffer;
	}

	~_1509ba170_Vector_9(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1509ba170_Vector_9(void) { this->self = jule::Ref<_1509ba170_Vector_9>::make(this, nullptr); }

	static inline _1509ba170_Vector_9 _static_method_new(jule::Int);


	inline jule::Int _method_calc_grow(jule::Int);


	inline void _method_resize_alloc(jule::Int);


	inline void _method_review_allocation(jule::Int);


	inline jule::Int _method_len(void);


	inline jule::Int _method_cap(void);


	inline void _method_dealloc(void);


	inline void _method_set_len(jule::Int);


	inline jule::Ref<_1511317d0_Var> _method_at(jule::Int);


	inline void _method_set(jule::Int,jule::Ref<_1511317d0_Var>);


	inline void _method_push(jule::Ref<_1511317d0_Var>);


	inline void _method_push_front(jule::Ref<_1511317d0_Var>);


	inline void _method_append(jule::Slice<jule::Ref<_1511317d0_Var>>);


	inline void _method_merge(_1509ba170_Vector_9);


	inline void _method_merge_front(_1509ba170_Vector_9);


	inline void _method_remove_range(jule::Int,jule::Int);


	inline void _method_insert(jule::Int,jule::Ref<_1511317d0_Var>);


	inline _1509ba170_Vector_9 _method_slice(jule::Int,jule::Int);


	inline bool operator==(const _1509ba170_Vector_9 &_Src) const {
		return true;
	}

	inline bool operator!=(const _1509ba170_Vector_9 &_Src) const { return !this->operator==(_Src); }
};

struct _1509ba170_Vector_10 {
	jule::Ref<_1509ba170_Vector_10> self{};

	StdJuleVectorBuffer<jule::Ref<_15177b070_TypeAlias>> _field__buffer{StdJuleVectorBuffer<jule::Ref<_15177b070_TypeAlias>>()};


	_1509ba170_Vector_10(StdJuleVectorBuffer<jule::Ref<_15177b070_TypeAlias>> __param__buffer) {
		this->self = jule::Ref<_1509ba170_Vector_10>::make(this, nullptr);

		this->_field__buffer = __param__buffer;
	}

	~_1509ba170_Vector_10(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1509ba170_Vector_10(void) { this->self = jule::Ref<_1509ba170_Vector_10>::make(this, nullptr); }

	static inline _1509ba170_Vector_10 _static_method_new(jule::Int);


	inline jule::Int _method_calc_grow(jule::Int);


	inline void _method_resize_alloc(jule::Int);


	inline void _method_review_allocation(jule::Int);


	inline jule::Int _method_len(void);


	inline jule::Int _method_cap(void);


	inline void _method_dealloc(void);


	inline void _method_set_len(jule::Int);


	inline jule::Ref<_15177b070_TypeAlias> _method_at(jule::Int);


	inline void _method_set(jule::Int,jule::Ref<_15177b070_TypeAlias>);


	inline void _method_push(jule::Ref<_15177b070_TypeAlias>);


	inline void _method_push_front(jule::Ref<_15177b070_TypeAlias>);


	inline void _method_append(jule::Slice<jule::Ref<_15177b070_TypeAlias>>);


	inline void _method_merge(_1509ba170_Vector_10);


	inline void _method_merge_front(_1509ba170_Vector_10);


	inline void _method_remove_range(jule::Int,jule::Int);


	inline void _method_insert(jule::Int,jule::Ref<_15177b070_TypeAlias>);


	inline _1509ba170_Vector_10 _method_slice(jule::Int,jule::Int);


	inline bool operator==(const _1509ba170_Vector_10 &_Src) const {
		return true;
	}

	inline bool operator!=(const _1509ba170_Vector_10 &_Src) const { return !this->operator==(_Src); }
};

struct _1509ba170_Vector_11 {
	jule::Ref<_1509ba170_Vector_11> self{};

	StdJuleVectorBuffer<jule::Ref<_15081bcd0_Fn>> _field__buffer{StdJuleVectorBuffer<jule::Ref<_15081bcd0_Fn>>()};


	_1509ba170_Vector_11(StdJuleVectorBuffer<jule::Ref<_15081bcd0_Fn>> __param__buffer) {
		this->self = jule::Ref<_1509ba170_Vector_11>::make(this, nullptr);

		this->_field__buffer = __param__buffer;
	}

	~_1509ba170_Vector_11(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1509ba170_Vector_11(void) { this->self = jule::Ref<_1509ba170_Vector_11>::make(this, nullptr); }

	static inline _1509ba170_Vector_11 _static_method_new(jule::Int);


	inline jule::Int _method_calc_grow(jule::Int);


	inline void _method_resize_alloc(jule::Int);


	inline void _method_review_allocation(jule::Int);


	inline jule::Int _method_len(void);


	inline jule::Int _method_cap(void);


	inline void _method_dealloc(void);


	inline void _method_set_len(jule::Int);


	inline jule::Ref<_15081bcd0_Fn> _method_at(jule::Int);


	inline void _method_set(jule::Int,jule::Ref<_15081bcd0_Fn>);


	inline void _method_push(jule::Ref<_15081bcd0_Fn>);


	inline void _method_push_front(jule::Ref<_15081bcd0_Fn>);


	inline void _method_append(jule::Slice<jule::Ref<_15081bcd0_Fn>>);


	inline void _method_merge(_1509ba170_Vector_11);


	inline void _method_merge_front(_1509ba170_Vector_11);


	inline void _method_remove_range(jule::Int,jule::Int);


	inline void _method_insert(jule::Int,jule::Ref<_15081bcd0_Fn>);


	inline _1509ba170_Vector_11 _method_slice(jule::Int,jule::Int);


	inline bool operator==(const _1509ba170_Vector_11 &_Src) const {
		return true;
	}

	inline bool operator!=(const _1509ba170_Vector_11 &_Src) const { return !this->operator==(_Src); }
};

struct _1509ba170_Vector_12 {
	jule::Ref<_1509ba170_Vector_12> self{};

	StdJuleVectorBuffer<jule::Ref<_150a13110_Struct>> _field__buffer{StdJuleVectorBuffer<jule::Ref<_150a13110_Struct>>()};


	_1509ba170_Vector_12(StdJuleVectorBuffer<jule::Ref<_150a13110_Struct>> __param__buffer) {
		this->self = jule::Ref<_1509ba170_Vector_12>::make(this, nullptr);

		this->_field__buffer = __param__buffer;
	}

	~_1509ba170_Vector_12(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1509ba170_Vector_12(void) { this->self = jule::Ref<_1509ba170_Vector_12>::make(this, nullptr); }

	static inline _1509ba170_Vector_12 _static_method_new(jule::Int);


	inline jule::Int _method_calc_grow(jule::Int);


	inline void _method_resize_alloc(jule::Int);


	inline void _method_review_allocation(jule::Int);


	inline jule::Int _method_len(void);


	inline jule::Int _method_cap(void);


	inline void _method_dealloc(void);


	inline void _method_set_len(jule::Int);


	inline jule::Ref<_150a13110_Struct> _method_at(jule::Int);


	inline void _method_set(jule::Int,jule::Ref<_150a13110_Struct>);


	inline void _method_push(jule::Ref<_150a13110_Struct>);


	inline void _method_push_front(jule::Ref<_150a13110_Struct>);


	inline void _method_append(jule::Slice<jule::Ref<_150a13110_Struct>>);


	inline void _method_merge(_1509ba170_Vector_12);


	inline void _method_merge_front(_1509ba170_Vector_12);


	inline void _method_remove_range(jule::Int,jule::Int);


	inline void _method_insert(jule::Int,jule::Ref<_150a13110_Struct>);


	inline _1509ba170_Vector_12 _method_slice(jule::Int,jule::Int);


	inline bool operator==(const _1509ba170_Vector_12 &_Src) const {
		return true;
	}

	inline bool operator!=(const _1509ba170_Vector_12 &_Src) const { return !this->operator==(_Src); }
};

struct _1509ba170_Vector_13 {
	jule::Ref<_1509ba170_Vector_13> self{};

	StdJuleVectorBuffer<jule::Ref<_150f166e0_Trait>> _field__buffer{StdJuleVectorBuffer<jule::Ref<_150f166e0_Trait>>()};


	_1509ba170_Vector_13(StdJuleVectorBuffer<jule::Ref<_150f166e0_Trait>> __param__buffer) {
		this->self = jule::Ref<_1509ba170_Vector_13>::make(this, nullptr);

		this->_field__buffer = __param__buffer;
	}

	~_1509ba170_Vector_13(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1509ba170_Vector_13(void) { this->self = jule::Ref<_1509ba170_Vector_13>::make(this, nullptr); }

	static inline _1509ba170_Vector_13 _static_method_new(jule::Int);


	inline jule::Int _method_calc_grow(jule::Int);


	inline void _method_resize_alloc(jule::Int);


	inline void _method_review_allocation(jule::Int);


	inline jule::Int _method_len(void);


	inline jule::Int _method_cap(void);


	inline void _method_dealloc(void);


	inline void _method_set_len(jule::Int);


	inline jule::Ref<_150f166e0_Trait> _method_at(jule::Int);


	inline void _method_set(jule::Int,jule::Ref<_150f166e0_Trait>);


	inline void _method_push(jule::Ref<_150f166e0_Trait>);


	inline void _method_push_front(jule::Ref<_150f166e0_Trait>);


	inline void _method_append(jule::Slice<jule::Ref<_150f166e0_Trait>>);


	inline void _method_merge(_1509ba170_Vector_13);


	inline void _method_merge_front(_1509ba170_Vector_13);


	inline void _method_remove_range(jule::Int,jule::Int);


	inline void _method_insert(jule::Int,jule::Ref<_150f166e0_Trait>);


	inline _1509ba170_Vector_13 _method_slice(jule::Int,jule::Int);


	inline bool operator==(const _1509ba170_Vector_13 &_Src) const {
		return true;
	}

	inline bool operator!=(const _1509ba170_Vector_13 &_Src) const { return !this->operator==(_Src); }
};

struct _1509ba170_Vector_14 {
	jule::Ref<_1509ba170_Vector_14> self{};

	StdJuleVectorBuffer<jule::Ref<_150f1c930_Enum>> _field__buffer{StdJuleVectorBuffer<jule::Ref<_150f1c930_Enum>>()};


	_1509ba170_Vector_14(StdJuleVectorBuffer<jule::Ref<_150f1c930_Enum>> __param__buffer) {
		this->self = jule::Ref<_1509ba170_Vector_14>::make(this, nullptr);

		this->_field__buffer = __param__buffer;
	}

	~_1509ba170_Vector_14(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1509ba170_Vector_14(void) { this->self = jule::Ref<_1509ba170_Vector_14>::make(this, nullptr); }

	static inline _1509ba170_Vector_14 _static_method_new(jule::Int);


	inline jule::Int _method_calc_grow(jule::Int);


	inline void _method_resize_alloc(jule::Int);


	inline void _method_review_allocation(jule::Int);


	inline jule::Int _method_len(void);


	inline jule::Int _method_cap(void);


	inline void _method_dealloc(void);


	inline void _method_set_len(jule::Int);


	inline jule::Ref<_150f1c930_Enum> _method_at(jule::Int);


	inline void _method_set(jule::Int,jule::Ref<_150f1c930_Enum>);


	inline void _method_push(jule::Ref<_150f1c930_Enum>);


	inline void _method_push_front(jule::Ref<_150f1c930_Enum>);


	inline void _method_append(jule::Slice<jule::Ref<_150f1c930_Enum>>);


	inline void _method_merge(_1509ba170_Vector_14);


	inline void _method_merge_front(_1509ba170_Vector_14);


	inline void _method_remove_range(jule::Int,jule::Int);


	inline void _method_insert(jule::Int,jule::Ref<_150f1c930_Enum>);


	inline _1509ba170_Vector_14 _method_slice(jule::Int,jule::Int);


	inline bool operator==(const _1509ba170_Vector_14 &_Src) const {
		return true;
	}

	inline bool operator!=(const _1509ba170_Vector_14 &_Src) const { return !this->operator==(_Src); }
};

struct _1509ba170_Vector_15 {
	jule::Ref<_1509ba170_Vector_15> self{};

	StdJuleVectorBuffer<jule::Ref<_150f235a0_Impl>> _field__buffer{StdJuleVectorBuffer<jule::Ref<_150f235a0_Impl>>()};


	_1509ba170_Vector_15(StdJuleVectorBuffer<jule::Ref<_150f235a0_Impl>> __param__buffer) {
		this->self = jule::Ref<_1509ba170_Vector_15>::make(this, nullptr);

		this->_field__buffer = __param__buffer;
	}

	~_1509ba170_Vector_15(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1509ba170_Vector_15(void) { this->self = jule::Ref<_1509ba170_Vector_15>::make(this, nullptr); }

	static inline _1509ba170_Vector_15 _static_method_new(jule::Int);


	inline jule::Int _method_calc_grow(jule::Int);


	inline void _method_resize_alloc(jule::Int);


	inline void _method_review_allocation(jule::Int);


	inline jule::Int _method_len(void);


	inline jule::Int _method_cap(void);


	inline void _method_dealloc(void);


	inline void _method_set_len(jule::Int);


	inline jule::Ref<_150f235a0_Impl> _method_at(jule::Int);


	inline void _method_set(jule::Int,jule::Ref<_150f235a0_Impl>);


	inline void _method_push(jule::Ref<_150f235a0_Impl>);


	inline void _method_push_front(jule::Ref<_150f235a0_Impl>);


	inline void _method_append(jule::Slice<jule::Ref<_150f235a0_Impl>>);


	inline void _method_merge(_1509ba170_Vector_15);


	inline void _method_merge_front(_1509ba170_Vector_15);


	inline void _method_remove_range(jule::Int,jule::Int);


	inline void _method_insert(jule::Int,jule::Ref<_150f235a0_Impl>);


	inline _1509ba170_Vector_15 _method_slice(jule::Int,jule::Int);


	inline bool operator==(const _1509ba170_Vector_15 &_Src) const {
		return true;
	}

	inline bool operator!=(const _1509ba170_Vector_15 &_Src) const { return !this->operator==(_Src); }
};


struct _1506fba60_File {
	jule::Ref<_1506fba60_File> self{};

	jule::Slice<jule::U8> _field_data{jule::Slice<jule::U8>()};
	jule::Str _field__path{jule::Str()};
	_1509ba170_Vector_0 _field__tokens{_1509ba170_Vector_0()};


	_1506fba60_File(jule::Slice<jule::U8> __param_data, jule::Str __param__path, _1509ba170_Vector_0 __param__tokens) {
		this->self = jule::Ref<_1506fba60_File>::make(this, nullptr);

		this->_field_data = __param_data;
		this->_field__path = __param__path;
		this->_field__tokens = __param__tokens;
	}

	~_1506fba60_File(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1506fba60_File(void) { this->self = jule::Ref<_1506fba60_File>::make(this, nullptr); }

	inline jule::Bool _method_is_ok(void);


	inline void _method_fill(jule::Slice<jule::U8>);


	inline jule::Str _method_path(void);


	inline jule::Str _method_dir(void);


	inline jule::Str _method_name(void);


	inline jule::Uintptr _method_addr(void);


	inline _1509ba170_Vector_0 _method_tokens(void);


	inline jule::Str _method_get_row(jule::Int);


	inline bool operator==(const _1506fba60_File &_Src) const {
		return 
			this->_field_data == _Src._field_data &&
			this->_field__path == _Src._field__path &&
			this->_field__tokens == _Src._field__tokens;
	}

	inline bool operator!=(const _1506fba60_File &_Src) const { return !this->operator==(_Src); }
};


struct _150567d60_Lex {
	jule::Ref<_150567d60_Lex> self{};

	_1509ba170_Vector_0 _field_tokens{_1509ba170_Vector_0()};
	jule::Ref<_1506fba60_File> _field_file{jule::Ref<_1506fba60_File>()};
	jule::Int _field_pos{jule::Int()};
	jule::Int _field_column{jule::Int()};
	jule::Int _field_row{jule::Int()};
	jule::Slice<_157e34dc0_Log> _field_errors{jule::Slice<_157e34dc0_Log>()};


	_150567d60_Lex(_1509ba170_Vector_0 __param_tokens, jule::Ref<_1506fba60_File> __param_file, jule::Int __param_pos, jule::Int __param_column, jule::Int __param_row, jule::Slice<_157e34dc0_Log> __param_errors) {
		this->self = jule::Ref<_150567d60_Lex>::make(this, nullptr);

		this->_field_tokens = __param_tokens;
		this->_field_file = __param_file;
		this->_field_pos = __param_pos;
		this->_field_column = __param_column;
		this->_field_row = __param_row;
		this->_field_errors = __param_errors;
	}

	~_150567d60_Lex(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150567d60_Lex(void) { this->self = jule::Ref<_150567d60_Lex>::make(this, nullptr); }

	inline void _method_push_err(jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_err_tok(_150640f50_Token,jule::Str);


	inline void _method_lex(void);


	inline jule::Str _method_id(jule::Slice<jule::U8>);


	inline jule::Slice<jule::U8> _method_resume(void);


	inline void _method_lex_line_comment(_150640f50_Token&);


	inline void _method_lex_range_comment(void);


	inline jule::Str _method_num(jule::Slice<jule::U8>);


	inline jule::Str _method_escape_seq(jule::Slice<jule::U8>);


	inline jule::Str _method_get_rune(jule::Slice<jule::U8>,jule::Bool);


	inline jule::Str _method_lex_rune(jule::Slice<jule::U8>);


	inline jule::Str _method_lex_str(void);


	inline jule::Bool _method_is_first_token_of_line(void);


	inline void _method_new_line(void);


	inline jule::Bool _method_is_op(jule::Slice<jule::U8>,jule::Str,jule::Uint,_150640f50_Token&);


	inline jule::Bool _method_lex_basic_ops(jule::Slice<jule::U8>,_150640f50_Token&);


	inline jule::Bool _method_lex_id(jule::Slice<jule::U8>,_150640f50_Token&);


	inline jule::Bool _method_lex_num(jule::Slice<jule::U8>,_150640f50_Token&);


	inline _150640f50_Token _method_token(void);


	inline bool operator==(const _150567d60_Lex &_Src) const {
		return 
			this->_field_tokens == _Src._field_tokens &&
			this->_field_file == _Src._field_file &&
			this->_field_pos == _Src._field_pos &&
			this->_field_column == _Src._field_column &&
			this->_field_row == _Src._field_row &&
			this->_field_errors == _Src._field_errors;
	}

	inline bool operator!=(const _150567d60_Lex &_Src) const { return !this->operator==(_Src); }
};


struct _15053e120_Ast {
	jule::Ref<_15053e120_Ast> self{};

	jule::Ref<_1506fba60_File> _field_file{jule::Ref<_1506fba60_File>()};
	_1509ba170_Vector_1 _field_top_directives{_1509ba170_Vector_1()};
	_1509ba170_Vector_2 _field_use_decls{_1509ba170_Vector_2()};
	_1509ba170_Vector_3 _field_impls{_1509ba170_Vector_3()};
	_1509ba170_Vector_4 _field_comments{_1509ba170_Vector_4()};
	_1509ba170_Vector_5 _field_decls{_1509ba170_Vector_5()};


	_15053e120_Ast(jule::Ref<_1506fba60_File> __param_file, _1509ba170_Vector_1 __param_top_directives, _1509ba170_Vector_2 __param_use_decls, _1509ba170_Vector_3 __param_impls, _1509ba170_Vector_4 __param_comments, _1509ba170_Vector_5 __param_decls) {
		this->self = jule::Ref<_15053e120_Ast>::make(this, nullptr);

		this->_field_file = __param_file;
		this->_field_top_directives = __param_top_directives;
		this->_field_use_decls = __param_use_decls;
		this->_field_impls = __param_impls;
		this->_field_comments = __param_comments;
		this->_field_decls = __param_decls;
	}

	~_15053e120_Ast(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_15053e120_Ast(void) { this->self = jule::Ref<_15053e120_Ast>::make(this, nullptr); }

	inline bool operator==(const _15053e120_Ast &_Src) const {
		return 
			this->_field_file == _Src._field_file &&
			this->_field_top_directives == _Src._field_top_directives &&
			this->_field_use_decls == _Src._field_use_decls &&
			this->_field_impls == _Src._field_impls &&
			this->_field_comments == _Src._field_comments &&
			this->_field_decls == _Src._field_decls;
	}

	inline bool operator!=(const _15053e120_Ast &_Src) const { return !this->operator==(_Src); }
};


struct _150a13110_Struct {
	jule::Ref<_150a13110_Struct> self{};

	jule::Ref<_1510c9150_Sema> _field_sema{jule::Ref<_1510c9150_Sema>()};
	jule::Slice<jule::Ref<_150a13110_Struct>> _field_depends{jule::Slice<jule::Ref<_150a13110_Struct>>()};
	jule::Slice<jule::Ref<_150a13110_Struct>> _field_uses{jule::Slice<jule::Ref<_150a13110_Struct>>()};
	_150640f50_Token _field_token{_150640f50_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Slice<jule::Ref<_150a13110_Field>> _field_fields{jule::Slice<jule::Ref<_150a13110_Field>>()};
	_1509ba170_Vector_11 _field_methods{_1509ba170_Vector_11()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Slice<jule::Ref<_1506406d0_Directive>> _field_directives{jule::Slice<jule::Ref<_1506406d0_Directive>>()};
	jule::Str _field_doc{jule::Str()};
	jule::Slice<jule::Ref<_1506406d0_GenericDecl>> _field_generics{jule::Slice<jule::Ref<_1506406d0_GenericDecl>>()};
	jule::Slice<jule::Ref<_150f166e0_Trait>> _field_implements{jule::Slice<jule::Ref<_150f166e0_Trait>>()};
	jule::Slice<jule::Ref<_150a13110_StructIns>> _field_instances{jule::Slice<jule::Ref<_150a13110_StructIns>>()};


	_150a13110_Struct(jule::Ref<_1510c9150_Sema> __param_sema, jule::Slice<jule::Ref<_150a13110_Struct>> __param_depends, jule::Slice<jule::Ref<_150a13110_Struct>> __param_uses, _150640f50_Token __param_token, jule::Str __param_ident, jule::Slice<jule::Ref<_150a13110_Field>> __param_fields, _1509ba170_Vector_11 __param_methods, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Slice<jule::Ref<_1506406d0_Directive>> __param_directives, jule::Str __param_doc, jule::Slice<jule::Ref<_1506406d0_GenericDecl>> __param_generics, jule::Slice<jule::Ref<_150f166e0_Trait>> __param_implements, jule::Slice<jule::Ref<_150a13110_StructIns>> __param_instances) {
		this->self = jule::Ref<_150a13110_Struct>::make(this, nullptr);

		this->_field_sema = __param_sema;
		this->_field_depends = __param_depends;
		this->_field_uses = __param_uses;
		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_fields = __param_fields;
		this->_field_methods = __param_methods;
		this->_field_public = __param_public;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_directives = __param_directives;
		this->_field_doc = __param_doc;
		this->_field_generics = __param_generics;
		this->_field_implements = __param_implements;
		this->_field_instances = __param_instances;
	}

	~_150a13110_Struct(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150a13110_Struct(void) { this->self = jule::Ref<_150a13110_Struct>::make(this, nullptr); }

	inline jule::Ref<_150a13110_StructIns> _method_instance(void);


	inline jule::Ref<_150a13110_StructIns> _method_append_instance(jule::Ref<_150a13110_StructIns>);


	inline jule::Ref<_15081bcd0_Fn> _method_find_method(jule::Str,jule::Bool);


	inline jule::Ref<_150a13110_Field> _method_find_field(jule::Str);


	inline jule::Bool _method_is_implements(jule::Ref<_150f166e0_Trait>);


	inline jule::Bool _method_is_derives(jule::Str);


	inline jule::Bool _method_is_uses(jule::Ref<_150a13110_Struct>);


	inline bool operator==(const _150a13110_Struct &_Src) const {
		return 
			this->_field_sema == _Src._field_sema &&
			this->_field_depends == _Src._field_depends &&
			this->_field_uses == _Src._field_uses &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_fields == _Src._field_fields &&
			this->_field_methods == _Src._field_methods &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc == _Src._field_doc &&
			this->_field_generics == _Src._field_generics &&
			this->_field_implements == _Src._field_implements &&
			this->_field_instances == _Src._field_instances;
	}

	inline bool operator!=(const _150a13110_Struct &_Src) const { return !this->operator==(_Src); }
};


struct _150e75a70_ReferenceStack {
	jule::Ref<_150e75a70_ReferenceStack> self{};

	_1509ba170_Vector_8 _field_buffer{_1509ba170_Vector_8()};


	_150e75a70_ReferenceStack(_1509ba170_Vector_8 __param_buffer) {
		this->self = jule::Ref<_150e75a70_ReferenceStack>::make(this, nullptr);

		this->_field_buffer = __param_buffer;
	}

	~_150e75a70_ReferenceStack(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150e75a70_ReferenceStack(void) { this->self = jule::Ref<_150e75a70_ReferenceStack>::make(this, nullptr); }

	inline jule::Int _method_len(void);


	inline jule::Any _method_at(jule::Int);


	inline void _method_push(jule::Any);


	inline void _method_push_front(jule::Any);


	inline void _method_remove(jule::Int);


	inline jule::Bool _method_exist_0(jule::Ref<_1511317d0_Var>);
	inline jule::Bool _method_exist_1(jule::Ref<_15081bcd0_FnIns>);
	inline jule::Bool _method_exist_2(jule::Ref<_150a13110_StructIns>);


	inline bool operator==(const _150e75a70_ReferenceStack &_Src) const {
		return 
			this->_field_buffer == _Src._field_buffer;
	}

	inline bool operator!=(const _150e75a70_ReferenceStack &_Src) const { return !this->operator==(_Src); }
};


struct _150d29660_Scope {
	jule::Ref<_150d29660_Scope> self{};

	jule::Ref<_150d29660_Scope> _field_parent{jule::Ref<_150d29660_Scope>()};
	jule::Bool _field_unsafety{jule::Bool()};
	jule::Bool _field_deferred{jule::Bool()};
	_1509ba170_Vector_8 _field_stmts{_1509ba170_Vector_8()};


	_150d29660_Scope(jule::Ref<_150d29660_Scope> __param_parent, jule::Bool __param_unsafety, jule::Bool __param_deferred, _1509ba170_Vector_8 __param_stmts) {
		this->self = jule::Ref<_150d29660_Scope>::make(this, nullptr);

		this->_field_parent = __param_parent;
		this->_field_unsafety = __param_unsafety;
		this->_field_deferred = __param_deferred;
		this->_field_stmts = __param_stmts;
	}

	~_150d29660_Scope(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_150d29660_Scope(void) { this->self = jule::Ref<_150d29660_Scope>::make(this, nullptr); }

	inline bool operator==(const _150d29660_Scope &_Src) const {
		return 
			this->_field_parent == _Src._field_parent &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_deferred == _Src._field_deferred &&
			this->_field_stmts == _Src._field_stmts;
	}

	inline bool operator!=(const _150d29660_Scope &_Src) const { return !this->operator==(_Src); }
};


struct _15128c4d0_SymbolTable: public _1517fbd60_Lookup {
	jule::Ref<_15128c4d0_SymbolTable> self{};

	jule::Ref<_1506fba60_File> _field_file{jule::Ref<_1506fba60_File>()};
	_1509ba170_Vector_6 _field_passes{_1509ba170_Vector_6()};
	_1509ba170_Vector_7 _field_imports{_1509ba170_Vector_7()};
	_1509ba170_Vector_9 _field_vars{_1509ba170_Vector_9()};
	_1509ba170_Vector_10 _field_type_aliases{_1509ba170_Vector_10()};
	_1509ba170_Vector_12 _field_structs{_1509ba170_Vector_12()};
	_1509ba170_Vector_11 _field_funcs{_1509ba170_Vector_11()};
	_1509ba170_Vector_13 _field_traits{_1509ba170_Vector_13()};
	_1509ba170_Vector_14 _field_enums{_1509ba170_Vector_14()};
	_1509ba170_Vector_15 _field_impls{_1509ba170_Vector_15()};


	_15128c4d0_SymbolTable(jule::Ref<_1506fba60_File> __param_file, _1509ba170_Vector_6 __param_passes, _1509ba170_Vector_7 __param_imports, _1509ba170_Vector_9 __param_vars, _1509ba170_Vector_10 __param_type_aliases, _1509ba170_Vector_12 __param_structs, _1509ba170_Vector_11 __param_funcs, _1509ba170_Vector_13 __param_traits, _1509ba170_Vector_14 __param_enums, _1509ba170_Vector_15 __param_impls) {
		this->self = jule::Ref<_15128c4d0_SymbolTable>::make(this, nullptr);

		this->_field_file = __param_file;
		this->_field_passes = __param_passes;
		this->_field_imports = __param_imports;
		this->_field_vars = __param_vars;
		this->_field_type_aliases = __param_type_aliases;
		this->_field_structs = __param_structs;
		this->_field_funcs = __param_funcs;
		this->_field_traits = __param_traits;
		this->_field_enums = __param_enums;
		this->_field_impls = __param_impls;
	}

	~_15128c4d0_SymbolTable(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_15128c4d0_SymbolTable(void) { this->self = jule::Ref<_15128c4d0_SymbolTable>::make(this, nullptr); }

	inline jule::Ref<_150f26340_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ref<_150f26340_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ref<_150f26340_ImportInfo>)>);


	inline jule::Ref<_1511317d0_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ref<_15177b070_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ref<_150a13110_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ref<_15081bcd0_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ref<_150f166e0_Trait> _method_find_trait(jule::Str);


	inline jule::Ref<_150f1c930_Enum> _method_find_enum(jule::Str);


	inline jule::Ref<_1511317d0_Var> _method___find_var(jule::Str,jule::Bool,jule::Bool);


	inline jule::Ref<_15177b070_TypeAlias> _method___find_type_alias(jule::Str,jule::Bool,jule::Bool);


	inline jule::Any _method_def_by_ident(jule::Str,jule::Bool);


	inline jule::Bool _method_is_duplicated_ident(jule::Uintptr,jule::Str,jule::Bool);


	inline bool operator==(const _15128c4d0_SymbolTable &_Src) const {
		return 
			this->_field_file == _Src._field_file &&
			this->_field_passes == _Src._field_passes &&
			this->_field_imports == _Src._field_imports &&
			this->_field_vars == _Src._field_vars &&
			this->_field_type_aliases == _Src._field_type_aliases &&
			this->_field_structs == _Src._field_structs &&
			this->_field_funcs == _Src._field_funcs &&
			this->_field_traits == _Src._field_traits &&
			this->_field_enums == _Src._field_enums &&
			this->_field_impls == _Src._field_impls;
	}

	inline bool operator!=(const _15128c4d0_SymbolTable &_Src) const { return !this->operator==(_Src); }
};


inline jule::Int _147e61090_get_last_errno(void);
inline jule::Str _147e787d0_byte_ptr_to_str(jule::U8*);
inline jule::Int _147e787d0_stat(jule::U8*,struct stat*);
inline jule::Int _147e787d0_open(jule::U8*,jule::Int,jule::Int);
inline jule::U8* _147e787d0_getcwd(jule::U8*,jule::Uint);
inline DIR* _147e787d0_opendir(jule::U8*);
inline struct dirent* _147e787d0_readdir(DIR*);
inline jule::Int _147e787d0_closedir(DIR*);
inline jule::Int _147e787d0_chdir(jule::U8*);
inline jule::Int _147e787d0_remove(jule::U8*);
inline jule::Int _147e787d0_mkdir(jule::U8*,jule::Int);
inline jule::Int _147e787d0_rmdir(jule::U8*);
inline jule::Int _147e787d0_unlink(jule::U8*);
inline jule::I64 _147ed9190_seek(jule::Int,jule::I64,jule::Int);
inline jule::Int _147ed9190_read(jule::Int,void*,jule::Uint);
inline jule::Int _147ed9190_close(jule::Int);
inline jule::Int _147ed9190_write(jule::Int,void*,jule::Uint);
inline void _147ed9190_exit(jule::Int);
inline void* _147e7e270_malloc(jule::Uint);
inline void* _147e7e270_calloc(jule::Uint,jule::Uint);
inline void* _147e7e270_realloc(void*,jule::Uint);
inline void _147e7e270_free(void*);
inline jule::Int _147e60f80_get_last_os_error(void);
inline std::tuple<jule::Str,jule::Int> _147e65dd0_working_dir(void);
inline jule::Int _147e65dd0_set_working_dir(jule::Str);
inline void _147e65dd0_init(void);
inline std::tuple<jule::Str,jule::Int> _147e66800___getwd(void);
inline jule::Int _147e66800___chdir(jule::Str);
inline jule::Str _147e135c0_clean(jule::Str);
inline jule::Str _147e135c0_to_slash(jule::Str);
inline jule::Str _147e135c0_from_slash(jule::Str);
inline jule::Str _147e135c0_join(jule::Slice<jule::Str>);
inline jule::Str _147e135c0_ext(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _147e135c0_abs(jule::Str);
inline jule::Str _147e135c0_base(jule::Str);
inline jule::Str _147e135c0_dir(jule::Str);
inline jule::Str _147e135c0_volume_name(jule::Str);
inline jule::Bool _147e090b0_is_path_sep(jule::U8);
inline jule::Bool _147e090b0_is_abs(jule::Str);
inline jule::Int _147e090b0_volume_name_len(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _147e090b0___abs(jule::Str);
inline jule::Str _147e090b0_str_join(jule::Slice<jule::Str>,jule::Str);
inline jule::Str _147e090b0___join(jule::Slice<jule::Str>);
inline jule::Int _150714f70_leading_zeros(jule::Uint);
inline jule::Int _150714f70_leading_zeros8(jule::U8);
inline jule::Int _150714f70_leading_zeros16(jule::U16);
inline jule::Int _150714f70_leading_zeros32(jule::U32);
inline jule::Int _150714f70_leading_zeros64(jule::U64);
inline jule::Int _150714f70_trailing_zeros(jule::Uint);
inline jule::Int _150714f70_trailing_zeros8(jule::U8);
inline jule::Int _150714f70_trailing_zeros16(jule::U16);
inline jule::Int _150714f70_trailing_zeros32(jule::U32);
inline jule::Int _150714f70_trailing_zeros64(jule::U64);
inline jule::Int _150714f70_ones_count(jule::Uint);
inline jule::Int _150714f70_ones_count8(jule::U8);
inline jule::Int _150714f70_ones_count16(jule::U16);
inline jule::Int _150714f70_ones_count32(jule::U32);
inline jule::Int _150714f70_ones_count64(jule::U64);
inline jule::Uint _150714f70_rotate_left(jule::Uint,jule::Int);
inline jule::U8 _150714f70_rotate_left8(jule::U8,jule::Int);
inline jule::U16 _150714f70_rotate_left16(jule::U16,jule::Int);
inline jule::U32 _150714f70_rotate_left32(jule::U32,jule::Int);
inline jule::U64 _150714f70_rotate_left64(jule::U64,jule::Int);
inline jule::Uint _150714f70_reverse(jule::Uint);
inline jule::U8 _150714f70_reverse8(jule::U8);
inline jule::U16 _150714f70_reverse16(jule::U16);
inline jule::U32 _150714f70_reverse32(jule::U32);
inline jule::U64 _150714f70_reverse64(jule::U64);
inline jule::Uint _150714f70_reverse_bytes(jule::Uint);
inline jule::U16 _150714f70_reverse_bytes16(jule::U16);
inline jule::U32 _150714f70_reverse_bytes32(jule::U32);
inline jule::U64 _150714f70_reverse_bytes64(jule::U64);
inline jule::Int _150714f70_len(jule::Uint);
inline jule::Int _150714f70_len8(jule::U8);
inline jule::Int _150714f70_len16(jule::U16);
inline jule::Int _150714f70_len32(jule::U32);
inline jule::Int _150714f70_len64(jule::U64);
inline std::tuple<jule::Uint,jule::Uint> _150714f70_add(jule::Uint,jule::Uint,jule::Uint);
inline std::tuple<jule::U32,jule::U32> _150714f70_add32(jule::U32,jule::U32,jule::U32);
inline std::tuple<jule::U64,jule::U64> _150714f70_add64(jule::U64,jule::U64,jule::U64);
inline std::tuple<jule::Uint,jule::Uint> _150714f70_sub(jule::Uint,jule::Uint,jule::Uint);
inline std::tuple<jule::U32,jule::U32> _150714f70_sub32(jule::U32,jule::U32,jule::U32);
inline std::tuple<jule::U64,jule::U64> _150714f70_sub64(jule::U64,jule::U64,jule::U64);
inline std::tuple<jule::Uint,jule::Uint> _150714f70_mul(jule::Uint,jule::Uint);
inline std::tuple<jule::U32,jule::U32> _150714f70_mul32(jule::U32,jule::U32);
inline std::tuple<jule::U64,jule::U64> _150714f70_mul64(jule::U64,jule::U64);
inline std::tuple<jule::Uint,jule::Uint> _150714f70_div(jule::Uint,jule::Uint,jule::Uint);
inline std::tuple<jule::U32,jule::U32> _150714f70_div32(jule::U32,jule::U32,jule::U32);
inline std::tuple<jule::U64,jule::U64> _150714f70_div64(jule::U64,jule::U64,jule::U64);
inline jule::Uint _150714f70_rem(jule::Uint,jule::Uint,jule::Uint);
inline jule::U32 _150714f70_rem32(jule::U32,jule::U32,jule::U32);
inline jule::U64 _150714f70_rem64(jule::U64,jule::U64,jule::U64);
inline jule::F64 _1501bd730_atanh(jule::F64);
inline jule::U32 _1501bd670_f32_bits(jule::F32);
inline jule::F32 _1501bd670_f32_from_bits(jule::U32);
inline jule::U64 _1501bd670_f64_bits(jule::F64);
inline jule::F64 _1501bd670_f64_from_bits(jule::U64);
inline jule::F64 _1501de350_cos(jule::F64);
inline jule::F64 _1501de350_sin(jule::F64);
inline jule::F64 _1501de7e0_tan(jule::F64);
inline jule::F64 _1501de520_mod(jule::F64,jule::F64);
inline std::tuple<jule::F64,jule::Int> _150213500_frexp(jule::F64);
inline jule::F32 _150221f00_nextafter32(jule::F32,jule::F32);
inline jule::F64 _150221f00_nextafter(jule::F64,jule::F64);
inline jule::F64 _1501dffc0_copysign(jule::F64,jule::F64);
inline std::tuple<jule::U64,jule::F64> _1501e0f70_trig_reduce(jule::F64);
inline jule::F64 _15023cf50_atan2(jule::F64,jule::F64);
inline jule::F64 _150257f10_floor(jule::F64);
inline jule::F64 _150257f10_ceil(jule::F64);
inline jule::F64 _150257f10_trunc(jule::F64);
inline jule::F64 _150257f10_round(jule::F64);
inline jule::F64 _150257f10_round_even(jule::F64);
inline jule::F64 _15022f040_nan(void);
inline jule::Bool _15022f040_is_nan(jule::F64);
inline jule::F64 _15022f040_inf(jule::Int);
inline jule::Bool _15022f040_is_inf(jule::F64,jule::Int);
inline std::tuple<jule::F64,jule::Int> _15022f040_normalize(jule::F64);
inline std::tuple<jule::F64,jule::F64> _150286070_sincos(jule::F64);
inline jule::F64 _15029f7d0_dim(jule::F64,jule::F64);
inline jule::F64 _15029f7d0_max(jule::F64,jule::F64);
inline jule::F64 _15029f7d0_min(jule::F64,jule::F64);
inline jule::F64 _1502aeb50_log(jule::F64);
inline jule::F64 _1502596e0_expm1(jule::F64);
inline jule::F64 _1502fb3e0_abs(jule::F64);
inline jule::F64 _1502cfe00_j1(jule::F64);
inline jule::F64 _1502cfe00_y1(jule::F64);
inline jule::F64 _1502cfe00_pone(jule::F64);
inline jule::F64 _1502cfe00_qone(jule::F64);
inline jule::U64 _1503a2d30_zero(jule::U64);
inline jule::U64 _1503a2d30_nonzero(jule::U64);
inline std::tuple<jule::U64,jule::U64> _1503a2d30_shl(jule::U64,jule::U64,jule::Uint);
inline std::tuple<jule::U64,jule::U64> _1503a2d30_shr(jule::U64,jule::U64,jule::Uint);
inline std::tuple<jule::U64,jule::U64> _1503a2d30_shrcompress(jule::U64,jule::U64,jule::Uint);
inline jule::I32 _1503a2d30_lz(jule::U64,jule::U64);
inline std::tuple<jule::U32,jule::I32,jule::U64> _1503a2d30_split(jule::U64);
inline jule::F64 _1503a2d30_fma(jule::F64,jule::F64,jule::F64);
inline std::tuple<jule::F64,jule::F64> _1502e0ae0_modf(jule::F64);
inline jule::F64 _1503d32f0_log10(jule::F64);
inline jule::F64 _1503d32f0_log2(jule::F64);
inline jule::F64 _1503484d0_hypot(jule::F64,jule::F64);
inline jule::F64 _150347f70_j0(jule::F64);
inline jule::F64 _150347f70_y0(jule::F64);
inline jule::F64 _150347f70_pzero(jule::F64);
inline jule::F64 _150347f70_qzero(jule::F64);
inline jule::F64 _1503e2220_ldexp(jule::F64,jule::Int);
inline jule::Bool _150454890_signbit(jule::F64);
inline jule::F64 _1503f4a20_sinh(jule::F64);
inline jule::F64 _1503f4a20_cosh(jule::F64);
inline std::tuple<jule::F64,jule::Int> _15046e170_lgamma(jule::F64);
inline jule::F64 _15046e170_sin_pi(jule::F64);
inline jule::F64 _15047d3b0_acosh(jule::F64);
inline jule::F64 _1503e4950_tanh(jule::F64);
inline jule::F64 _1504d7af0_cbrt(jule::F64);
inline jule::F64 _150480f30_pow(jule::F64,jule::F64);
inline jule::Bool _150480f30_is_odd_int(jule::F64);
inline jule::F64 _150538d70_exp(jule::F64);
inline jule::F64 _150538d70_exp2(jule::F64);
inline jule::F64 _150538d70_expmulti(jule::F64,jule::F64,jule::Int);
inline jule::F64 _15055fc00_log1p(jule::F64);
inline std::tuple<jule::F64,jule::F64> _1504d9340_stirling(jule::F64);
inline jule::F64 _1504d9340_gamma(jule::F64);
inline jule::Bool _1504d9340_is_neg_int(jule::F64);
inline jule::F64 _1505b0ac0_erfinv(jule::F64);
inline jule::F64 _1505b0ac0_erfcinv(jule::F64);
inline jule::F64 _15059eaf0_erf(jule::F64);
inline jule::F64 _15059eaf0_erfc(jule::F64);
inline jule::F64 _150560610_pow10(jule::Int);
inline jule::F64 _15059e5b0_sqrt(jule::F64);
inline jule::F64 _15061dcb0_logb(jule::F64);
inline jule::Int _15061dcb0_ilogb(jule::F64);
inline jule::Int _15061dcb0__ilogb(jule::F64);
inline jule::F64 _1506360a0_jn(jule::Int,jule::F64);
inline jule::F64 _1506360a0_yn(jule::Int,jule::F64);
inline jule::F64 _1506a0eb0_remainder(jule::F64,jule::F64);
inline jule::F64 _1506528e0_xatan(jule::F64);
inline jule::F64 _1506528e0_satan(jule::F64);
inline jule::F64 _1506528e0_atan(jule::F64);
inline jule::F64 _1506c2020_asin(jule::F64);
inline jule::F64 _1506c2020_acos(jule::F64);
inline jule::F64 _1506d6f30_asinh(jule::F64);
inline std::tuple<jule::Bool,jule::Int> _157efba10_conv_bool(jule::Str);
inline jule::Str _157efba10_fmt_bool(jule::Bool);
inline jule::Str _147e3cfb0_fmt_float(jule::F64,jule::U8,jule::Int,jule::Int);
inline jule::Slice<jule::U8> _147e3cfb0_generic_ftoa(jule::Slice<jule::U8>,jule::F64,jule::U8,jule::Int,jule::Int);
inline jule::Slice<jule::U8> _147e3cfb0_big_ftoa(jule::Slice<jule::U8>,jule::Int,jule::U8,jule::Bool,jule::U64,jule::Int,_147e3cfb0_FloatInfo&);
inline jule::Slice<jule::U8> _147e3cfb0_fmt_digits(jule::Slice<jule::U8>,jule::Bool,jule::Bool,_147e3cfb0_DecimalSlice,jule::Int,jule::U8);
inline void _147e3cfb0_round_shortest(_150025080_Decimal&,jule::U64,jule::Int,_147e3cfb0_FloatInfo&);
inline jule::Slice<jule::U8> _147e3cfb0_fmt_e(jule::Slice<jule::U8>,jule::Bool,_147e3cfb0_DecimalSlice,jule::Int,jule::U8);
inline jule::Slice<jule::U8> _147e3cfb0_fmt_f(jule::Slice<jule::U8>,jule::Bool,_147e3cfb0_DecimalSlice,jule::Int);
inline jule::Slice<jule::U8> _147e3cfb0_fmt_b(jule::Slice<jule::U8>,jule::Bool,jule::U64,jule::Int,_147e3cfb0_FloatInfo&);
inline jule::Slice<jule::U8> _147e3cfb0_fmt_x(jule::Slice<jule::U8>,jule::Int,jule::U8,jule::Bool,jule::U64,jule::Int,_147e3cfb0_FloatInfo&);
inline jule::Int _147e3cfb0_min(jule::Int,jule::Int);
inline jule::Int _147e3cfb0_max(jule::Int,jule::Int);
inline jule::U8 _147e40080_lower(jule::U8);
inline std::tuple<jule::U64,jule::Int> _147e40080_parse_uint(jule::Str,jule::Int,jule::Int);
inline std::tuple<jule::I64,jule::Int> _147e40080_parse_int(jule::Str,jule::Int,jule::Int);
inline std::tuple<jule::F64,jule::Bool> _147e81490_eisel_lemire64(jule::U64,jule::Int,jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _147e81490_eisel_lemire32(jule::U64,jule::Int,jule::Bool);
inline jule::Int _147fb9200_common_prefix_len_ignore_case(jule::Str,jule::Str);
inline std::tuple<jule::F64,jule::Int,jule::Bool> _147fb9200_special(jule::Str);
inline std::tuple<jule::U64,jule::Int,jule::Bool,jule::Bool,jule::Bool,jule::Int,jule::Bool> _147fb9200_read_float(jule::Str);
inline std::tuple<jule::F64,jule::Bool> _147fb9200_atof64_exact(jule::U64,jule::Int,jule::Bool);
inline std::tuple<jule::F64,jule::Bool> _147fb9200_atof64exact(jule::U64,jule::Int,jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _147fb9200_atof32exact(jule::U64,jule::Int,jule::Bool);
inline std::tuple<jule::F64,jule::Int> _147fb9200_atof_hex(jule::Str,_147e3cfb0_FloatInfo&,jule::U64,jule::Int,jule::Bool,jule::Bool);
inline std::tuple<jule::F32,jule::Int,jule::Int> _147fb9200_atof32(jule::Str);
inline std::tuple<jule::F64,jule::Int,jule::Int> _147fb9200_atof64(jule::Str);
inline std::tuple<jule::F64,jule::Int,jule::Int> _147fb9200_parse_float_prefix(jule::Str,jule::Int);
inline std::tuple<jule::F64,jule::Int> _147fb9200_parse_float(jule::Str,jule::Int);
inline void _147ebfca0_ryu_ftoa_fixed32(_147e3cfb0_DecimalSlice&,jule::U32,jule::Int,jule::Int);
inline void _147ebfca0_ryu_ftoa_fixed64(_147e3cfb0_DecimalSlice&,jule::U64,jule::Int,jule::Int);
inline void _147ebfca0_format_decimal(_147e3cfb0_DecimalSlice&,jule::U64,jule::Bool,jule::Bool,jule::Int);
inline void _147ebfca0_ryu_ftoa_shortest(_147e3cfb0_DecimalSlice&,jule::U64,jule::Int,_147e3cfb0_FloatInfo&);
inline jule::Int _147ebfca0_mul_by_log2_log10(jule::Int);
inline jule::Int _147ebfca0_mul_by_log10_log2(jule::Int);
inline std::tuple<jule::U64,jule::U64,jule::U64,jule::Int> _147ebfca0_compute_bounds(jule::U64,jule::Int,_147e3cfb0_FloatInfo&);
inline void _147ebfca0_ryu_digits(_147e3cfb0_DecimalSlice&,jule::U64,jule::U64,jule::U64,jule::Bool,jule::Bool);
inline void _147ebfca0_ryu_digits32(_147e3cfb0_DecimalSlice&,jule::U32,jule::U32,jule::U32,jule::Bool,jule::Bool,jule::Int);
inline std::tuple<jule::U32,jule::Int,jule::Bool> _147ebfca0_mult64bit_pow10(jule::U32,jule::Int,jule::Int);
inline std::tuple<jule::U64,jule::Int,jule::Bool> _147ebfca0_mult128bit_pow10(jule::U64,jule::Int,jule::Int);
inline jule::Bool _147ebfca0_divisible_by_pow5(jule::U64,jule::Int);
inline std::tuple<jule::U32,jule::U32> _147ebfca0_divmod1e9(jule::U64);
inline jule::Int _150025080_digit_zero(jule::Slice<jule::U8>);
inline void _150025080_trim(_150025080_Decimal&);
inline void _150025080_right_shift(_150025080_Decimal&,jule::Uint);
inline jule::Bool _150025080_prefix_is_less_than(jule::Slice<jule::U8>,jule::Str);
inline void _150025080_left_shift(_150025080_Decimal&,jule::Uint);
inline jule::Bool _150025080_should_round_up(_150025080_Decimal&,jule::Int);
inline jule::Str _1500241f0_fmt_uint(jule::U64,jule::Int);
inline jule::Str _1500241f0_fmt_int(jule::I64,jule::Int);
inline jule::Str _1500241f0_itoa(jule::Int);
inline jule::Str _1500241f0_small(jule::Int);
inline jule::Bool _1500241f0_is_power_of_two(jule::Int);
inline std::tuple<jule::Slice<jule::U8>,jule::Str> _1500241f0_fmt_bits(jule::Slice<jule::U8>,jule::U64,jule::Int,jule::Bool,jule::Bool);
inline void _147ecb750_exit(jule::Int);
inline jule::Str _147ecb750_executable(void);
inline jule::Bool _157e348f0_is_std_header_path(jule::Str);
inline jule::Bool _157e348f0_is_valid_header_ext(jule::Str);
inline jule::Bool _157e348f0_is_valid_cpp_ext(jule::Str);
inline std::tuple<jule::Bool,jule::Bool> _157e34740_check_os(jule::Str);
inline std::tuple<jule::Bool,jule::Bool> _157e34740_check_arch(jule::Str);
inline jule::Bool _157e34740_is_pass_file_annotation(jule::Str);
inline jule::Str _157e34dc0_logf(jule::Str,jule::Slice<jule::Any>);
inline jule::Str _157e34dc0_arg_to_str(jule::Any);
inline jule::Int _157e34dc0_find_next_fmt(jule::Str);
inline jule::Str _157e34dc0_apply_fmt(jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _157eaaf20_is_top_directive(jule::Str);
inline jule::Bool _157eacb90_is_windows(jule::Str);
inline jule::Bool _157eacb90_is_darwin(jule::Str);
inline jule::Bool _157eacb90_is_linux(jule::Str);
inline jule::Bool _157eacb90_is_i386(jule::Str);
inline jule::Bool _157eacb90_is_amd64(jule::Str);
inline jule::Bool _157eacb90_is_arm64(jule::Str);
inline jule::Bool _157eacb90_is_unix(jule::Str);
inline jule::Bool _157eacb90_is_32bit(jule::Str);
inline jule::Bool _157eacb90_is_64bit(jule::Str);
inline void _157eb0090_exit_err(jule::Str);
inline void _157eb0090_init(void);
inline jule::Bool _157ef3750_is_jule(jule::Str);
inline jule::Int _1504d9830_get_last_fs_error(void);
inline std::tuple<jule::Ref<_150562500_File>,jule::Int> _1504da380_open(jule::Str,jule::Int,jule::Int);
inline jule::Int _1504da380_remove_file(jule::Str);
inline std::tuple<jule::Ref<_1505f1a60_Status>,jule::Int> _15053fb30_stat(jule::Str);
inline std::tuple<jule::Slice<jule::U8>,jule::Int> _150562500_read_file(jule::Str);
inline std::tuple<jule::Slice<jule::Ref<_15053ceb0_DirEntry>>,jule::Int> _150643f90_read_dir(jule::Str);
inline jule::Int _150643f90_create_dir(jule::Str);
inline jule::Int _150643f90_remove_dir(jule::Str);
inline jule::Bool _15081f100_full_rune(jule::Slice<jule::U8>);
inline jule::Bool _15081f100_full_rune_str(jule::Str);
inline std::tuple<jule::I32,jule::Int> _15081f100_decode_rune(jule::Slice<jule::U8>);
inline std::tuple<jule::I32,jule::Int> _15081f100_decode_rune_str(jule::Str);
inline std::tuple<jule::I32,jule::Int> _15081f100_decode_last_rune(jule::Slice<jule::U8>);
inline std::tuple<jule::I32,jule::Int> _15081f100_decode_last_rune_str(jule::Str);
inline jule::Int _15081f100_rune_len(jule::I32);
inline jule::Int _15081f100_encode_rune(jule::Slice<jule::U8>,jule::I32);
inline jule::Slice<jule::U8> _15081f100_append_rune(jule::Slice<jule::U8>,jule::I32);
inline jule::Slice<jule::U8> _15081f100_append_rune_non_ascii(jule::Slice<jule::U8>,jule::I32);
inline jule::Int _15081f100_rune_count(jule::Slice<jule::U8>);
inline jule::Int _15081f100_rune_count_str(jule::Str);
inline jule::Bool _15081f100_rune_start(jule::U8);
inline jule::Bool _15081f100_valid(jule::Slice<jule::U8>);
inline jule::Bool _15081f100_valid_str(jule::Str);
inline jule::Bool _15081f100_valid_rune(jule::I32);
inline jule::Bool _150640f50_is_unary_op(jule::Str);
inline jule::Bool _150640f50_is_bin_op(jule::Str);
inline jule::Bool _150640f50_is_weak_op(jule::Str);
inline jule::Bool _150640f50_is_str(jule::Str);
inline jule::Bool _150640f50_is_raw_str(jule::Str);
inline jule::Bool _150640f50_is_rune(jule::Str);
inline jule::Bool _150640f50_is_nil(jule::Str);
inline jule::Bool _150640f50_is_bool(jule::Str);
inline jule::Bool _150640f50_contains_any(jule::Str,jule::Str);
inline jule::Bool _150640f50_is_float(jule::Str);
inline jule::Bool _150640f50_is_num(jule::Str);
inline jule::Bool _150640f50_is_lit(jule::Str);
inline jule::Bool _150640f50_is_ignore_ident(jule::Str);
inline jule::Bool _150640f50_is_anon_ident(jule::Str);
inline jule::Bool _150640f50_is_punct(jule::I32);
inline jule::Bool _150640f50_is_space(jule::I32);
inline jule::Bool _150640f50_is_letter(jule::I32);
inline jule::Bool _150640f50_is_ident_rune(jule::Str);
inline jule::Bool _150640f50_is_decimal(jule::U8);
inline jule::Bool _150640f50_is_binary(jule::U8);
inline jule::Bool _150640f50_is_octal(jule::U8);
inline jule::Bool _150640f50_is_hex(jule::U8);
inline jule::Bool _150640f50_is_assign(jule::Uint);
inline jule::Bool _150640f50_is_postfix_op(jule::Str);
inline jule::Bool _150640f50_is_assign_op(jule::Str);
inline jule::Ref<_1506fba60_File> _1506fba60_new_file_set(jule::Str);
inline _157e34dc0_Log _150567d60_make_err(jule::Int,jule::Int,jule::Ref<_1506fba60_File>,jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _150567d60_bytes_has_prefix(jule::Slice<jule::U8>,jule::Str);
inline jule::Str _150567d60_float_fmt_e(jule::Slice<jule::U8>,jule::Int);
inline jule::Str _150567d60_float_fmt_p(jule::Slice<jule::U8>,jule::Int);
inline jule::Str _150567d60_float_fmt_dotnp(jule::Slice<jule::U8>,jule::Int);
inline jule::Str _150567d60_float_fmt_dotfp(jule::Slice<jule::U8>,jule::Int);
inline jule::Str _150567d60_float_fmt_dotp(jule::Slice<jule::U8>,jule::Int);
inline jule::Str _150567d60_float_num(jule::Slice<jule::U8>,jule::Int);
inline jule::Str _150567d60_common_num(jule::Slice<jule::U8>);
inline jule::Str _150567d60_binary_num(jule::Slice<jule::U8>);
inline jule::Bool _150567d60_is_float_fmt_e(jule::U8,jule::Int);
inline jule::Bool _150567d60_is_float_fmt_p(jule::U8,jule::Int);
inline jule::Bool _150567d60_is_float_fmt_dotnp(jule::Slice<jule::U8>,jule::Int);
inline jule::Bool _150567d60_is_float_fmt_dotp(jule::Slice<jule::U8>,jule::Int);
inline jule::Bool _150567d60_is_float_fmt_dotfp(jule::Slice<jule::U8>,jule::Int);
inline jule::Str _150567d60_octal_num(jule::Slice<jule::U8>);
inline jule::Str _150567d60_hex_num(jule::Slice<jule::U8>);
inline jule::Str _150567d60_hex_escape(jule::Slice<jule::U8>,jule::Int);
inline jule::Str _150567d60_big_unicode_point_escape(jule::Slice<jule::U8>);
inline jule::Str _150567d60_little_unicode_point_escape(jule::Slice<jule::U8>);
inline jule::Str _150567d60_hex_byte_escape(jule::Slice<jule::U8>);
inline jule::Str _150567d60_byte_escape(jule::Slice<jule::U8>);
inline jule::Slice<_157e34dc0_Log> _150567d60_lex(jule::Ref<_1506fba60_File>);
inline jule::Ref<_1507e43e0_FileInfo> _1507e43e0_parse_file(jule::Ref<_1506fba60_File>);
inline jule::Ref<_1507e43e0_PackageInfo> _1507e43e0_parse_package(jule::Slice<jule::Ref<_1506fba60_File>>);
inline std::tuple<jule::Ref<_15053e120_Ast>,jule::Slice<_157e34dc0_Log>> _1507e43e0_parse_fileset(jule::Ref<_1506fba60_File>);
inline jule::Ref<_1506406d0_ScopeTree> _1507e2370_new_scope(void);
inline std::tuple<jule::Bool,jule::Bool> _1507e2370_is_st(_150640f50_Token,_150640f50_Token);
inline std::tuple<jule::Int,jule::Bool> _1507e2370_next_st_pos(jule::Slice<_150640f50_Token>,jule::Int);
inline std::tuple<jule::Slice<_150640f50_Token>,jule::Bool> _1507e2370_skip_st(jule::Int&,jule::Slice<_150640f50_Token>);
inline jule::Slice<jule::Ref<_1507e2370_Stmt>> _1507e2370_split_stms(jule::Slice<_150640f50_Token>);
inline jule::Slice<_150640f50_Token> _1507ea360_is_fn_call(jule::Slice<_150640f50_Token>);
inline jule::Ref<_1507ea360_CallData> _1507ea360_get_call_data(jule::Slice<_150640f50_Token>);
inline jule::Slice<_150640f50_Token> _1507ea360_get_block_expr(jule::Slice<_150640f50_Token>);
inline std::tuple<jule::Slice<_150640f50_Token>,jule::Slice<_150640f50_Token>> _1507ea360_split_colon(jule::Slice<_150640f50_Token>);
inline jule::Slice<_150640f50_Token> _1507ea360_eliminate_comments(jule::Slice<_150640f50_Token>);
inline jule::Int _1507ea360_find_lowest_prec_op(jule::Slice<_150640f50_Token>);
inline jule::Ref<_1506406d0_IdentExpr> _1507ea360_build_ident_expr(_150640f50_Token);
inline std::tuple<jule::Slice<_150640f50_Token>,jule::Int> _1507ea360_get_range_expr_tokens(jule::Slice<_150640f50_Token>);
inline jule::Bool _1507eb940_check_assign_tokens(jule::Slice<_150640f50_Token>);
inline _157e34dc0_Log _150831fa0_make_err(jule::Int,jule::Int,jule::Ref<_1506fba60_File>,jule::Str,jule::Slice<jule::Any>);
inline jule::Slice<_150640f50_Token> _150831fa0_range(jule::Int&,jule::Str,jule::Str,jule::Slice<_150640f50_Token>);
inline std::tuple<jule::Slice<_150640f50_Token>,jule::Slice<_150640f50_Token>> _150831fa0_range_last(jule::Slice<_150640f50_Token>);
inline std::tuple<jule::Slice<jule::Slice<_150640f50_Token>>,jule::Slice<_157e34dc0_Log>> _150831fa0_parts(jule::Slice<_150640f50_Token>,jule::Uint,jule::Bool);
inline jule::Str _150831fa0_get_close_kind_of_brace(jule::Str);
inline _157e34dc0_Log _150831fa0_compiler_err(_150640f50_Token,jule::Str,jule::Slice<jule::Any>);
inline void _150831fa0_push_suggest(_157e34dc0_Log*,jule::Str,jule::Slice<jule::Any>);
inline jule::Ref<_1506406d0_Comment> _150831fa0_build_comment(_150640f50_Token);
inline jule::Str _150831fa0_tokstoa(jule::Slice<_150640f50_Token>);
inline jule::Ref<_1506406d0_TypeDecl> _150aed7c0_build_void_type(void);
inline jule::Ref<_1506406d0_TypeDecl> _150aed7c0_build_prim_type(_150640f50_Token);
inline std::tuple<jule::Slice<_150640f50_Token>,jule::Int> _150aed7c0_split_map_range(jule::Slice<_150640f50_Token>,jule::Int&);
inline void _15199b440_lshift_unsig(_15199b440_Const&,_15199b440_Const&);
inline void _15199b440_rshift_unsig(_15199b440_Const&,_15199b440_Const&);
inline jule::Bool _15199d360_check_bit(jule::Str,jule::Int,jule::Fn<jule::Bool(jule::Str,jule::Int,jule::Int)>);
inline jule::Str _15199d360_real_kind_of(jule::Str);
inline jule::Int _15199d360_bitsize_of(jule::Str);
inline jule::Str _15199d360_int_from_bits(jule::U64);
inline jule::Str _15199d360_uint_from_bits(jule::U64);
inline jule::Str _15199d360_float_from_bits(jule::U64);
inline jule::Bool _15199d360_check_bit_int(jule::Str,jule::Int);
inline jule::Bool _15199d360_check_bit_uint(jule::Str,jule::Int);
inline jule::Bool _15199d360_check_bit_float(jule::Str,jule::Int);
inline jule::U64 _15199d360_bitsize_of_float(jule::F64);
inline jule::U64 _15199d360_bitsize_of_int(jule::I64);
inline jule::U64 _15199d360_bitsize_of_uint(jule::U64);
inline jule::F64 _15199dfc0_min_of(jule::Str);
inline jule::F64 _15199dfc0_max_of(jule::Str);
inline jule::Bool _151a210d0_is_i8_compatible(jule::Str);
inline jule::Bool _151a210d0_is_i16_compatible(jule::Str);
inline jule::Bool _151a210d0_is_i32_compatible(jule::Str);
inline jule::Bool _151a210d0_is_i64_compatible(jule::Str);
inline jule::Bool _151a210d0_is_u8_compatible(jule::Str);
inline jule::Bool _151a210d0_is_u16_compatible(jule::Str);
inline jule::Bool _151a210d0_is_u32_compatible(jule::Str);
inline jule::Bool _151a210d0_is_u64_compatible(jule::Str);
inline jule::Bool _151a210d0_is_f32_compatible(jule::Str);
inline jule::Bool _151a210d0_is_f64_compatible(jule::Str);
inline jule::Bool _151a210d0_types_are_compatible(jule::Str,jule::Str);
inline jule::Bool _151a210d0_is_i16_greater(jule::Str);
inline jule::Bool _151a210d0_is_i32_greater(jule::Str);
inline jule::Bool _151a210d0_is_i64_greater(jule::Str);
inline jule::Bool _151a210d0_is_u8_greater(jule::Str);
inline jule::Bool _151a210d0_is_u16_greater(jule::Str);
inline jule::Bool _151a210d0_is_u32_greater(jule::Str);
inline jule::Bool _151a210d0_is_u64_greater(jule::Str);
inline jule::Bool _151a210d0_is_f32_greater(jule::Str);
inline jule::Bool _151a210d0_is_f64_greater(jule::Str);
inline jule::Bool _151a210d0_is_greater(jule::Str,jule::Str);
inline jule::Bool _1519b1410_is_sig_int(jule::Str);
inline jule::Bool _1519b1410_is_unsig_int(jule::Str);
inline jule::Bool _1519b1410_is_int(jule::Str);
inline jule::Bool _1519b1410_is_float(jule::Str);
inline jule::Bool _1519b1410_is_num(jule::Str);
inline jule::Bool _1519b1410_is_sig_num(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _151ae6af0_is_byte_lit(jule::Str);
inline jule::I32 _151ae6af0_to_rune(jule::Slice<jule::U8>);
inline jule::Str _151ae6af0_to_raw_str(jule::Slice<jule::U8>);
inline jule::Str _151ae6af0_to_str(jule::Slice<jule::U8>);
inline std::tuple<jule::U8,jule::Bool> _151ae6af0_try_btoa_common_esq(jule::Slice<jule::U8>);
inline jule::I32 _151ae6af0_rune_from_esq_seq(jule::Slice<jule::U8>,jule::Int&);
inline jule::Str _151ae6af0_str_esq_seq(jule::Slice<jule::U8>,jule::Int&);
inline jule::Ref<_150e75a70_ReferenceStack> _150e75a70_new_reference_stack(void);
inline jule::Str _150e75a70_str_repeat(jule::Str,jule::Int);
inline jule::Str _150e75a70_build_doc(jule::Ref<_1506406d0_CommentGroup>);
inline jule::Ref<_15177b070_TypeSymbol> _150e75a70_build_type(jule::Ref<_1506406d0_TypeDecl>);
inline jule::Ref<_151290fd0_Value> _150e75a70_build_expr(jule::Ref<_1506406d0_Expr>);
inline jule::Ref<_15177b070_TypeAlias> _150e75a70_build_type_alias(jule::Ref<_1506406d0_TypeAliasDecl>);
inline jule::Ref<_150a13110_Field> _150e75a70_build_field(jule::Ref<_1506406d0_FieldDecl>);
inline jule::Slice<jule::Ref<_150a13110_Field>> _150e75a70_build_fields(jule::Slice<jule::Ref<_1506406d0_FieldDecl>>);
inline jule::Ref<_150a13110_Struct> _150e75a70_build_struct(jule::Ref<_1506406d0_StructDecl>);
inline jule::Ref<_15081bcd0_Param> _150e75a70_build_param(jule::Ref<_1506406d0_ParamDecl>);
inline jule::Slice<jule::Ref<_15081bcd0_Param>> _150e75a70_build_params(jule::Slice<jule::Ref<_1506406d0_ParamDecl>>);
inline jule::Ref<_15081bcd0_RetType> _150e75a70_build_ret_type(jule::Ref<_1506406d0_RetTypeDecl>);
inline jule::Ref<_15081bcd0_Fn> _150e75a70_build_fn(jule::Ref<_1506406d0_FnDecl>);
inline jule::Slice<jule::Ref<_15081bcd0_Fn>> _150e75a70_build_methods(jule::Slice<jule::Ref<_1506406d0_FnDecl>>);
inline jule::Ref<_150f166e0_Trait> _150e75a70_build_trait(jule::Ref<_1506406d0_TraitDecl>);
inline jule::Ref<_150f1c930_EnumItem> _150e75a70_build_enum_item(jule::Ref<_1506406d0_EnumItemDecl>);
inline jule::Slice<jule::Ref<_150f1c930_EnumItem>> _150e75a70_build_enum_items(jule::Slice<jule::Ref<_1506406d0_EnumItemDecl>>);
inline jule::Ref<_150f1c930_Enum> _150e75a70_build_enum(jule::Ref<_1506406d0_EnumDecl>);
inline jule::Ref<_1511317d0_Var> _150e75a70_build_var(jule::Ref<_1506406d0_VarDecl>);
inline jule::Ref<_150f235a0_Impl> _150e75a70_build_impl(jule::Ref<_1506406d0_Impl>);
inline jule::Ref<_150d29660_ScopeChecker> _150d29660_new_scope_checker_base(jule::Ref<_1510c9150_Sema>,jule::Ref<_15081bcd0_FnIns>);
inline jule::Ref<_150d29660_ScopeChecker> _150d29660_new_scope_checker(jule::Ref<_1510c9150_Sema>,jule::Ref<_15081bcd0_FnIns>);
inline jule::Ref<_150d29660_ScopeLabel> _150d29660_find_label_parent(jule::Str,jule::Ref<_150d29660_ScopeChecker>);
inline jule::Int _150d29660_count_match_type(jule::Ref<_150d29660_Match>,jule::Ref<_15177b070_TypeKind>);
inline jule::Slice<jule::Ref<_151290fd0_Data>> _150d29660_get_datas_from_tuple_data(jule::Ref<_151290fd0_Data>);
inline jule::Slice<jule::Any> _150d29660_get_expr_models(jule::Any);
inline jule::Bool _150d29660_check_mut(jule::Ref<_1510c9150_Sema>,jule::Ref<_151290fd0_Data>,jule::Ref<_151290fd0_Data>,_150640f50_Token);
inline jule::Bool _150d29660_check_assign(jule::Ref<_1510c9150_Sema>,jule::Ref<_151290fd0_Data>,jule::Ref<_151290fd0_Data>,_150640f50_Token);
inline jule::Bool _150d29660_is_valid_ast_st_for_next_st(jule::Any);
inline jule::Bool _150d29660_is_valid_st_for_next_st(jule::Any);
inline jule::Bool _150d29660_st_is_def(jule::Any);
inline jule::Ref<_1511317d0_Var> _150f26340_find_var_in_package(jule::Slice<jule::Ref<_15128c4d0_SymbolTable>>,jule::Str,jule::Bool);
inline jule::Ref<_15177b070_TypeAlias> _150f26340_find_type_alias_in_package(jule::Slice<jule::Ref<_15128c4d0_SymbolTable>>,jule::Str,jule::Bool);
inline jule::Ref<_150a13110_Struct> _150f26340_find_struct_in_package(jule::Slice<jule::Ref<_15128c4d0_SymbolTable>>,jule::Str,jule::Bool);
inline jule::Ref<_15081bcd0_Fn> _150f26340_find_fn_in_package(jule::Slice<jule::Ref<_15128c4d0_SymbolTable>>,jule::Str,jule::Bool);
inline jule::Ref<_150f166e0_Trait> _150f26340_find_trait_in_package(jule::Slice<jule::Ref<_15128c4d0_SymbolTable>>,jule::Str);
inline jule::Ref<_150f1c930_Enum> _150f26340_find_enum_in_package(jule::Slice<jule::Ref<_15128c4d0_SymbolTable>>,jule::Str);
inline _157e34dc0_Log _1510c9150_compiler_err(_150640f50_Token,jule::Bool,jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _1510c9150_imp_is_lookupable(jule::Ref<_150f26340_ImportInfo>,jule::Str);
inline jule::Slice<jule::Ref<_1511317d0_Var>> _1510c9150_build_ret_vars(jule::Ref<_15081bcd0_FnIns>);
inline jule::Slice<jule::Ref<_1511317d0_Var>> _1510c9150_build_param_vars(jule::Ref<_15081bcd0_FnIns>);
inline jule::Slice<jule::Ref<_15177b070_TypeAlias>> _1510c9150_build_generic_type_aliases(jule::Ref<_15081bcd0_FnIns>);
inline jule::Ref<_15128c4d0_SymbolTable> _1510c9150_find_file(jule::Slice<jule::Ref<_15128c4d0_SymbolTable>>,jule::Ref<_1506fba60_File>);
inline std::tuple<jule::Bool,jule::Bool> _1510c9150_conditional_has_ret(jule::Ref<_150d29660_Conditional>);
inline jule::Bool _1510c9150_match_has_ret(jule::Ref<_150d29660_Match>);
inline std::tuple<jule::Bool,jule::Bool,jule::Bool> _1510c9150___has_ret(jule::Ref<_150d29660_Scope>);
inline jule::Bool _1510c9150_has_ret(jule::Ref<_150d29660_Scope>);
inline void _1510c9150_push_suggest(_157e34dc0_Log*,jule::Str,jule::Slice<jule::Any>);
inline jule::Slice<jule::Ref<_15177b070_TypeKind>> _1510d19a0_get_fn_result_types(jule::Ref<_15081bcd0_FnIns>);
inline jule::Bool _1510d19a0_trait_has_reference_receiver(jule::Ref<_150f166e0_Trait>);
inline jule::Bool _1510d19a0_float_assignable(jule::Str,jule::Ref<_151290fd0_Data>);
inline jule::Bool _1510d19a0_sig_assignable(jule::Str,jule::Ref<_151290fd0_Data>);
inline jule::Bool _1510d19a0_unsig_assignable(jule::Str,jule::Ref<_151290fd0_Data>);
inline jule::Bool _1510d19a0_int_assignable(jule::Str,jule::Ref<_151290fd0_Data>);
inline jule::Any _151290fd0_find_builtins_import(jule::Str,jule::Ref<_150f26340_ImportInfo>);
inline jule::Any _151290fd0_find_builtins_sema(jule::Str,jule::Ref<_1510c9150_Sema>);
inline jule::Bool _151290fd0_is_ok_for_shifting(jule::Ref<_151290fd0_Data>);
inline jule::Bool _151290fd0_is_instanced_struct(jule::Ref<_150a13110_StructIns>);
inline void _151290fd0_normalize_bitsize(jule::Ref<_151290fd0_Data>);
inline void _151290fd0_normalize_type(jule::Ref<_151290fd0_Data>);
inline void _151290fd0_apply_cast_kind_model(jule::Ref<_151290fd0_Data>);
inline void _151290fd0_apply_cast_kind(jule::Ref<_151290fd0_Data>);
inline jule::Ref<_151290fd0_Data> _151290fd0_build_void_data(void);
inline jule::Str _151290fd0_kind_by_bitsize(jule::Any);
inline jule::Str _151290fd0_check_data_for_integer_indexing(jule::Ref<_151290fd0_Data>);
inline jule::Bool _15177b070_can_get_ptr(jule::Ref<_151290fd0_Data>);
inline jule::Bool _15177b070_is_lvalue(jule::Ref<_15177b070_TypeKind>);
inline jule::Bool _15177b070_is_mut(jule::Ref<_15177b070_TypeKind>);
inline jule::Bool _15177b070_supports_cloning(jule::Ref<_15177b070_TypeKind>);
inline jule::Bool _15177b070_is_nil_compatible(jule::Ref<_15177b070_TypeKind>);
inline jule::Bool _15177b070_is_valid_for_ref(jule::Ref<_15177b070_TypeKind>);
inline jule::Bool _15177b070_is_variadicable(jule::Ref<_15177b070_TypeKind>);
inline jule::Str _15177b070_build_link_path_by_tokens(jule::Slice<_150640f50_Token>);
inline jule::Ref<_15177b070_Prim> _15177b070_build_prim_type(jule::Str);
inline jule::Ref<_150a13110_Struct> _15177b070_get_struct_from_kind(jule::Ref<_15177b070_TypeKind>);
inline jule::Bool _15177b070_is_prim(jule::Str);
inline std::tuple<jule::Ref<_15128c4d0_SymbolTable>,jule::Slice<_157e34dc0_Log>> _1517f9a70_build_symbols(jule::Ref<_15053e120_Ast>,jule::Trait<_150f26340_Importer>,jule::Ref<_150e75a70_SymbolBuilder>);
inline std::tuple<jule::Ref<_150f26340_Package>,jule::Slice<_157e34dc0_Log>> _1517f9a70___analyze_package(jule::Slice<jule::Ref<_15053e120_Ast>>,jule::Trait<_150f26340_Importer>);
inline std::tuple<jule::Ref<_150f26340_Package>,jule::Slice<_157e34dc0_Log>> _1517f9a70_analyze_package(jule::Slice<jule::Ref<_15053e120_Ast>>,jule::Trait<_150f26340_Importer>);
inline std::tuple<jule::Ref<_15128c4d0_SymbolTable>,jule::Slice<_157e34dc0_Log>> _1517f9a70_analyze_file(jule::Ref<_15053e120_Ast>,jule::Trait<_150f26340_Importer>);
inline void _1518a9420_init(void);
inline jule::Ref<_15081bcd0_FnIns> _1518a9420_find_builtin_fn(jule::Str);
inline jule::Ref<_15177b070_TypeAlias> _1518a9420_find_builtin_type_alias(jule::Str);
inline jule::Ref<_150f166e0_Trait> _1518a9420_find_builtin_trait(jule::Str);
inline jule::Any _1518a9420_find_builtin_def(jule::Str);
inline jule::Any _1518a9420_find_builtin_def_std_mem(jule::Str);
inline jule::Any _1518a9420_find_package_builtin_def(jule::Str,jule::Str);
inline jule::Ref<_151290fd0_Data> _1518a9420_builtin_caller_common_plain(jule::Ref<_151290fd0_Eval>,jule::Ref<_1506406d0_FnCallExpr>,jule::Ref<_151290fd0_Data>);
inline jule::Ref<_151290fd0_Data> _1518a9420_builtin_caller_common(jule::Ref<_151290fd0_Eval>,jule::Ref<_1506406d0_FnCallExpr>,jule::Ref<_151290fd0_Data>);
inline jule::Ref<_151290fd0_Data> _1518a9420_builtin_caller_common_mut(jule::Ref<_151290fd0_Eval>,jule::Ref<_1506406d0_FnCallExpr>,jule::Ref<_151290fd0_Data>);
inline jule::Ref<_151290fd0_Data> _1518a9420_builtin_caller_out(jule::Ref<_151290fd0_Eval>,jule::Ref<_1506406d0_FnCallExpr>,jule::Ref<_151290fd0_Data>);
inline jule::Ref<_151290fd0_Data> _1518a9420_builtin_caller_outln(jule::Ref<_151290fd0_Eval>,jule::Ref<_1506406d0_FnCallExpr>,jule::Ref<_151290fd0_Data>);
inline jule::Ref<_151290fd0_Data> _1518a9420_builtin_caller_new(jule::Ref<_151290fd0_Eval>,jule::Ref<_1506406d0_FnCallExpr>,jule::Ref<_151290fd0_Data>);
inline jule::Ref<_151290fd0_Data> _1518a9420_builtin_caller_real(jule::Ref<_151290fd0_Eval>,jule::Ref<_1506406d0_FnCallExpr>,jule::Ref<_151290fd0_Data>);
inline jule::Ref<_151290fd0_Data> _1518a9420_builtin_caller_drop(jule::Ref<_151290fd0_Eval>,jule::Ref<_1506406d0_FnCallExpr>,jule::Ref<_151290fd0_Data>);
inline jule::Ref<_151290fd0_Data> _1518a9420_builtin_caller_panic(jule::Ref<_151290fd0_Eval>,jule::Ref<_1506406d0_FnCallExpr>,jule::Ref<_151290fd0_Data>);
inline jule::Ref<_151290fd0_Data> _1518a9420_builtin_caller_make(jule::Ref<_151290fd0_Eval>,jule::Ref<_1506406d0_FnCallExpr>,jule::Ref<_151290fd0_Data>);
inline jule::Ref<_151290fd0_Data> _1518a9420_builtin_caller_append(jule::Ref<_151290fd0_Eval>,jule::Ref<_1506406d0_FnCallExpr>,jule::Ref<_151290fd0_Data>);
inline jule::Ref<_151290fd0_Data> _1518a9420_builtin_caller_copy(jule::Ref<_151290fd0_Eval>,jule::Ref<_1506406d0_FnCallExpr>,jule::Ref<_151290fd0_Data>);
inline jule::Ref<_151290fd0_Data> _1518a9420_builtin_caller_recover(jule::Ref<_151290fd0_Eval>,jule::Ref<_1506406d0_FnCallExpr>,jule::Ref<_151290fd0_Data>);
inline jule::Ref<_151290fd0_Data> _1518a9420_builtin_caller_clone(jule::Ref<_151290fd0_Eval>,jule::Ref<_1506406d0_FnCallExpr>,jule::Ref<_151290fd0_Data>);
inline jule::Ref<_151290fd0_Data> _1518a9420_builtin_caller_std_mem_size_of(jule::Ref<_151290fd0_Eval>,jule::Ref<_1506406d0_FnCallExpr>,jule::Ref<_151290fd0_Data>);
inline jule::Ref<_151290fd0_Data> _1518a9420_builtin_caller_std_mem_align_of(jule::Ref<_151290fd0_Eval>,jule::Ref<_1506406d0_FnCallExpr>,jule::Ref<_151290fd0_Data>);
inline jule::Bool _1502a15d0_eval_directive_ident(jule::Str);
inline jule::Bool _1502a15d0_eval_directive_part(jule::Str);
inline jule::Slice<jule::Str> _1502a15d0_split_operans(jule::Str,jule::Str);
inline jule::Bool _1502a15d0_eval_directive_expr(jule::Str);
inline void _15020d0b0_set_os_flags(void);
inline void _15020d0b0_set_arch_flags(void);
inline void _15020d0b0_init(void);
inline void _1503de590_exit_err(jule::Str);
inline jule::Slice<jule::U8> _1503de590_read_buff(jule::Str);
inline _157e34dc0_Log _1503de590_flat_compiler_err(jule::Str);
inline std::tuple<jule::Slice<jule::Ref<_15053ceb0_DirEntry>>,jule::Str> _1503de590_read_package_dirents(jule::Str);
inline jule::Str _1503de590_concat_all_parts(jule::Slice<jule::Str>);
inline jule::Bool _1503de590_is_pass_build_directives(jule::Ref<_15053e120_Ast>&);
inline void _1501d9900_push_passes(jule::Ref<_150f26340_Package>,jule::Slice<jule::Str>&);
inline jule::Slice<jule::Str> _1501d9900_get_all_unique_passes(jule::Ref<_150f26340_Package>,jule::Slice<jule::Ref<_150f26340_ImportInfo>>);
inline jule::Bool _157ee5140_is_exist_0(jule::Slice<jule::Any>,jule::Ref<_15081bcd0_FnIns>);
inline jule::Bool _157ee5140_is_exist_1(jule::Slice<jule::Any>,jule::Ref<_1511317d0_Var>);
inline jule::Bool _157ee5140_is_exist_2(jule::Slice<jule::Any>,jule::Ref<_150a13110_StructIns>);
inline jule::Bool _157ee5140_is_exist_3(jule::Slice<jule::Any>,jule::Ref<_150f166e0_Trait>);
inline jule::Bool _157ee5140_is_exist_ref(jule::Slice<jule::Any>,jule::Any);
inline jule::Bool _157ee5140_is_dead(jule::Any);
inline void _157ee5140_remove_from_slice_0(jule::Slice<jule::Ref<_15081bcd0_FnIns>>&,jule::Int);
inline void _157ee5140_remove_from_slice_1(jule::Slice<jule::Ref<_150a13110_StructIns>>&,jule::Int);
inline void _157ee5140_drop_ref(jule::Slice<jule::Any>&,jule::Int);
inline jule::Bool _157ee5140_is_all_references_are_dead_0(jule::Ref<_150e75a70_ReferenceStack>);
inline jule::Bool _157ee5140_is_all_references_are_dead_1(jule::Ref<_150e75a70_ReferenceStack>);
inline jule::Bool _157ee5140_is_all_references_are_dead_2(jule::Ref<_150e75a70_ReferenceStack>);
inline jule::Bool _157ee5140_is_fn_dead(jule::Ref<_15081bcd0_FnIns>);
inline jule::Bool _157ee5140_is_var_dead(jule::Ref<_1511317d0_Var>);
inline jule::Bool _157ee5140_kind_is_dead(jule::Ref<_15177b070_TypeKind>);
inline jule::Bool _157ee5140_is_any_generic_is_dead(jule::Slice<jule::Ref<_15177b070_TypeKind>>&);
inline jule::Bool _157ee5140_is_struct_dead(jule::Ref<_150a13110_StructIns>);
inline jule::Bool _157ee5140_is_trait_dead(jule::Ref<_150f166e0_Trait>);
inline void _157ee5140_eliminate_dead_functions(_1509ba170_Vector_11&);
inline void _157ee5140_eliminate_dead_globals(jule::Ref<_150f26340_Package>&);
inline void _157ee5140_eliminate_dead_functions_package(jule::Ref<_150f26340_Package>&);
inline void _157ee5140_eliminate_dead_structs(jule::Ref<_150f26340_Package>&);
inline void _157ee5140_eliminate_dead_traits(jule::Ref<_150f26340_Package>&);
inline void _157ee5140_catch_alive_init(jule::Ref<_150f26340_Package>&);
inline void _157ee5140_eliminate_dead_code_package(jule::Ref<_150f26340_Package>&);
inline void _157ee5140_eliminate_dead_code(jule::Ref<_1501d9900_IR>);
inline void _157eacdb0_eliminate_dead_code_of_scope(jule::Ref<_150d29660_Scope>);
inline void _1501e6230_push_opt_level(jule::Int);
inline jule::Bool _1501e6230_is_opt_enabled(jule::Str);
inline jule::Str _1517eb5a0_gen_if(jule::Ref<_150d29660_If>);
inline jule::Str _1517eb5a0_gen_conditional(jule::Ref<_150d29660_Conditional>);
inline jule::Str _1517eb5a0_gen_inf_iter(jule::Ref<_150d29660_InfIter>);
inline jule::Str _1517eb5a0_gen_while_iter(jule::Ref<_150d29660_WhileIter>);
inline jule::Trait<_1517eb5a0_RangeSetter> _1517eb5a0_get_range_setter(jule::Ref<_150d29660_RangeIter>);
inline jule::Str _1517eb5a0_gen_range_iter(jule::Ref<_150d29660_RangeIter>);
inline jule::Str _1517eb5a0_gen_cont(jule::Ref<_150d29660_ContSt>);
inline jule::Str _1517eb5a0_gen_label(jule::Ref<_150d29660_Label>);
inline jule::Str _1517eb5a0_gen_goto(jule::Ref<_150d29660_GotoSt>);
inline jule::Str _1517eb5a0_gen_postfix(jule::Ref<_150d29660_Postfix>);
inline jule::Str _1517eb5a0_gen_assign(jule::Ref<_150d29660_Assign>);
inline jule::Str _1517eb5a0_gen_multi_assign(jule::Ref<_150d29660_MultiAssign>);
inline jule::Str _1517eb5a0_gen_case(jule::Ref<_150d29660_Match>,jule::Ref<_150d29660_Case>);
inline jule::Str _1517eb5a0_gen_match(jule::Ref<_150d29660_Match>);
inline jule::Str _1517eb5a0_gen_fall_st(jule::Ref<_150d29660_FallSt>);
inline jule::Str _1517eb5a0_gen_break_st(jule::Ref<_150d29660_BreakSt>);
inline jule::Str _1517eb5a0_gen_ret_vars(jule::Ref<_150d29660_RetSt>);
inline jule::Str _1517eb5a0_gen_ret_expr_tuple(jule::Ref<_150d29660_RetSt>);
inline jule::Str _1517eb5a0_gen_ret_expr(jule::Ref<_150d29660_RetSt>);
inline jule::Str _1517eb5a0_gen_ret_st(jule::Ref<_150d29660_RetSt>);
inline jule::Str _1517eb5a0_gen_ret_st_with_defaults(jule::Ref<_15177b070_TypeKind>);
inline jule::Str _1517eb5a0_gen_recover(jule::Ref<_150d29660_Recover>);
inline jule::Str _1517eb5a0_gen_data_expr(jule::Ref<_151290fd0_Data>);
inline jule::Str _1517eb5a0_gen_st(jule::Any);
inline jule::Str _1517eb5a0_gen_scope(jule::Ref<_150d29660_Scope>);
inline jule::Str _1517eb5a0_gen_fn_scope(jule::Ref<_15081bcd0_FnIns>);
inline jule::Str _1517eb5a0_gen_method_scope(jule::Ref<_15081bcd0_FnIns>);
inline jule::Str _1517eb830_concat_all_parts(jule::Slice<jule::Str>);
inline jule::Str _1517eb830_get_accessor(jule::Ref<_15177b070_TypeKind>);
inline jule::Str _1517eb830_decompose_common_esq(jule::U8);
inline jule::Str _1517eb830_sbtoa(jule::U8);
inline jule::Str _1517eb830_get_str_model(jule::Ref<_15199b440_Const>);
inline jule::Str _1517eb830_get_bool_model(jule::Ref<_15199b440_Const>);
inline jule::Str _1517eb830_get_nil_model(void);
inline jule::Str _1517eb830_gen_float_special_cases(jule::F64);
inline jule::Str _1517eb830_ftoa(jule::F64,jule::Int);
inline jule::Str _1517eb830_get_f32_model(jule::Ref<_15199b440_Const>);
inline jule::Str _1517eb830_get_f64_model(jule::Ref<_15199b440_Const>);
inline jule::Str _1517eb830_get_float_model(jule::Ref<_151290fd0_Data>);
inline jule::Str _1517eb830_i64toa(jule::I64);
inline jule::Str _1517eb830_get_i64_model(jule::Ref<_15199b440_Const>);
inline jule::Str _1517eb830_u64toa(jule::U64);
inline jule::Str _1517eb830_get_u64_model(jule::Ref<_15199b440_Const>);
inline jule::Str _1517eb830_gen_const_expr(jule::Ref<_151290fd0_Data>);
inline jule::Str _1517eb830_gen_const_expr_model(jule::Ref<_15199b440_Const>);
inline jule::Str _1517eb830_gen_binop_expr_model(jule::Ref<_150f25dd0_BinopExprModel>);
inline jule::Str _1517eb830_gen_var_expr_model(jule::Ref<_1511317d0_Var>);
inline jule::Str _1517eb830_gen_struct_expr_model(jule::Ref<_150a13110_Struct>);
inline jule::Str _1517eb830_gen_struct_ins_expr_model(jule::Ref<_150a13110_StructIns>);
inline jule::Str _1517eb830_gen_unary_expr_model(jule::Ref<_150f25dd0_UnaryExprModel>);
inline jule::Str _1517eb830_gen_get_ref_ptr_expr_model(jule::Ref<_150f25dd0_GetRefPtrExprModel>);
inline jule::Str _1517eb830_gen_cpp_struct_lit_expr_model(jule::Ref<_150f25dd0_StructLitExprModel>);
inline jule::Str _1517eb830_gen_struct_lit_expr_model(jule::Ref<_150f25dd0_StructLitExprModel>);
inline jule::Str _1517eb830_gen_alloc_struct_lit_expr_model(jule::Ref<_150f25dd0_AllocStructLitExprModel>);
inline jule::Str _1517eb830_gen_casting_expr_model(jule::Ref<_150f25dd0_CastingExprModel>);
inline jule::Str _1517eb830_gen_arg_expr_models(jule::Slice<jule::Any>);
inline jule::Str _1517eb830_gen_fn_call_expr_model(jule::Ref<_150f25dd0_FnCallExprModel>);
inline jule::Str _1517eb830_gen_slice_expr_model(jule::Ref<_150f25dd0_SliceExprModel>);
inline jule::Str _1517eb830_gen_indexing_expr_model(jule::Ref<_150f25dd0_IndexigExprModel>);
inline jule::Str _1517eb830_gen_anon_fn_expr_model(jule::Ref<_150f25dd0_AnonFnExprModel>);
inline jule::Str _1517eb830_gen_map_expr_model(jule::Ref<_150f25dd0_MapExprModel>);
inline jule::Str _1517eb830_gen_slicing_expr_model(jule::Ref<_150f25dd0_SlicingExprModel>);
inline jule::Str _1517eb830_gen_trait_sub_ident_expr_model(jule::Ref<_150f25dd0_TraitSubIdentExprModel>);
inline jule::Str _1517eb830_gen_struct_sub_ident_expr_model(jule::Ref<_150f25dd0_StructSubIdentExprModel>);
inline jule::Str _1517eb830_gen_common_ident_expr_model(jule::Ref<_150f25dd0_CommonIdentExprModel>);
inline jule::Str _1517eb830_gen_common_sub_ident_expr_model(jule::Ref<_150f25dd0_CommonSubIdentExprModel>);
inline jule::Str _1517eb830_gen_array_expr_model(jule::Ref<_150f25dd0_ArrayExprModel>);
inline jule::Str _1517eb830_gen_fn_ins_expr_model(jule::Ref<_15081bcd0_FnIns>);
inline jule::Str _1517eb830_gen_tuple_expr_model(jule::Ref<_150f25dd0_TupleExprModel>);
inline jule::Str _1517eb830_gen_builtin_new_call_expr_model(jule::Ref<_150f25dd0_BuiltinNewCallExprModel>);
inline jule::Str _1517eb830_gen_builtin_out_call_expr_model(jule::Ref<_150f25dd0_BuiltinOutCallExprModel>);
inline jule::Str _1517eb830_gen_builtin_outln_call_expr_model(jule::Ref<_150f25dd0_BuiltinOutlnCallExprModel>);
inline jule::Str _1517eb830_gen_builtin_real_call_expr_model(jule::Ref<_150f25dd0_BuiltinRealCallExprModel>);
inline jule::Str _1517eb830_gen_builtin_drop_call_expr_model(jule::Ref<_150f25dd0_BuiltinDropCallExprModel>);
inline jule::Str _1517eb830_gen_builtin_panic_call_expr_model(jule::Ref<_150f25dd0_BuiltinPanicCallExprModel>);
inline jule::Str _1517eb830_gen_builtin_make_call_expr_model(jule::Ref<_150f25dd0_BuiltinMakeCallExprModel>);
inline jule::Str _1517eb830_gen_builtin_append_call_expr_model_assign_opt(jule::Bool,jule::Str&,jule::Ref<_15177b070_TypeKind>&,jule::Ref<_150f25dd0_SliceExprModel>&,jule::Ref<_150f25dd0_BuiltinAppendCallExprModel>&);
inline std::tuple<jule::Str,jule::Bool> _1517eb830_gen_builtin_append_call_expr_model_assign(jule::Any,jule::Ref<_150f25dd0_BuiltinAppendCallExprModel>);
inline jule::Str _1517eb830_gen_builtin_append_call_expr_model(jule::Ref<_150f25dd0_BuiltinAppendCallExprModel>);
inline jule::Str _1517eb830_gen_builtin_clone_call_expr_model(jule::Ref<_150f25dd0_BuiltinCloneCallExprModel>);
inline jule::Str _1517eb830_gen_sizeof_expr_model(jule::Ref<_150f25dd0_SizeofExprModel>);
inline jule::Str _1517eb830_gen_alignof_expr_model(jule::Ref<_150f25dd0_AlignofExprModel>);
inline jule::Str _1517eb830_gen_rune_expr_model(jule::Ref<_150f25dd0_RuneExprModel>);
inline jule::Str _1517eb830_gen_builtin_error_trait_sub_ident_expr_model(jule::Ref<_150f25dd0_BuiltinErrorTraitSubIdentExprModel>);
inline jule::Str _1517eb830_gen_explicit_deref_expr_model(jule::Ref<_150f25dd0_ExplicitDerefExprModel>);
inline jule::Str _1517eb830_gen_struct_static_ident_expr_model(jule::Ref<_150f25dd0_StructStaticIdentExprModel>);
inline jule::Str _1517eb830_gen_expr_model(jule::Any);
inline jule::Str _1517eb830_gen_expr(jule::Any);
inline jule::Str _1517eb830_gen_val(jule::Ref<_151290fd0_Value>);
inline jule::Str _1517eb830_get_init_expr(jule::Ref<_15177b070_TypeKind>);
inline jule::Str _151c170a0_get_derive_fn_decl_clone(jule::Ref<_150a13110_Struct>);
inline jule::Str _151c170a0_get_derive_fn_def_clone(jule::Ref<_150a13110_Struct>);
inline jule::Str _151c17930_as_ident(jule::Str);
inline jule::Str _151c17930_as_jt(jule::Str);
inline jule::Str _151c17930_get_ptr_as_ident(jule::Uintptr);
inline jule::Str _151c17930_as_out_ident(jule::Str,jule::Uintptr);
inline jule::Str _151c17930_as_local_ident(jule::Int,jule::Int,jule::Str);
inline jule::Str _151c17930_fn_out_ident(jule::Ref<_15081bcd0_Fn>);
inline jule::Str _151c17930_fn_ins_out_ident(jule::Ref<_15081bcd0_FnIns>);
inline jule::Str _151c17930_trait_out_ident(jule::Ref<_150f166e0_Trait>);
inline jule::Str _151c17930_param_out_ident(jule::Ref<_15081bcd0_Param>);
inline jule::Str _151c17930_struct_out_ident(jule::Ref<_150a13110_Struct>);
inline jule::Str _151c17930_struct_ins_out_ident(jule::Ref<_150a13110_StructIns>);
inline jule::Str _151c17930_field_out_ident(jule::Ref<_150a13110_Field>);
inline jule::Str _151c17930_var_out_ident(jule::Ref<_1511317d0_Var>);
inline jule::Str _151c17930_iter_begin_label_ident(jule::Uintptr);
inline jule::Str _151c17930_iter_end_label_ident(jule::Uintptr);
inline jule::Str _151c17930_iter_next_label_ident(jule::Uintptr);
inline jule::Str _151c17930_label_ident(jule::Str);
inline jule::Str _151c17930_match_end_label_ident(jule::Uintptr);
inline jule::Str _151c17930_case_begin_label_ident(jule::Uintptr);
inline jule::Str _151c17930_case_end_label_ident(jule::Uintptr);
inline jule::Bool _151c417b0_any_equals_0(jule::Ref<_1511317d0_Var>&,jule::Any&);
inline jule::Bool _151c417b0_any_equals_1(jule::Ref<_150a13110_FieldIns>&,jule::Any&);
inline jule::Ref<_1506406d0_Directive> _151c417b0_find_directive(jule::Slice<jule::Ref<_1506406d0_Directive>>,jule::Str);
inline jule::Bool _151c417b0_has_directive(jule::Slice<jule::Ref<_1506406d0_Directive>>,jule::Str);
inline jule::Str _151c417b0_gen_prim_kind(jule::Ref<_15177b070_Prim>);
inline jule::Str _151c417b0_gen_tuple_kind(jule::Ref<_15177b070_Tuple>);
inline jule::Str _151c417b0_as_ref_kind(jule::Str);
inline jule::Str _151c417b0_gen_ref_kind(jule::Ref<_15177b070_Ref>);
inline jule::Str _151c417b0_gen_ptr_kind(jule::Ref<_15177b070_Ptr>);
inline jule::Str _151c417b0_gen_enum_kind(jule::Ref<_150f1c930_Enum>);
inline jule::Str _151c417b0_as_slice_kind(jule::Ref<_15177b070_TypeKind>);
inline jule::Str _151c417b0_gen_slice_kind(jule::Ref<_15177b070_Slc>);
inline jule::Str _151c417b0_gen_map_kind(jule::Ref<_15177b070_Map>);
inline jule::Str _151c417b0_gen_trait_kind_from_ident(jule::Str);
inline jule::Str _151c417b0_gen_trait_kind(jule::Ref<_150f166e0_Trait>);
inline jule::Str _151c417b0_gen_struct_kind(jule::Ref<_150a13110_Struct>);
inline jule::Str _151c417b0_gen_struct_kind_ins(jule::Ref<_150a13110_StructIns>);
inline jule::Str _151c417b0_gen_array_kind(jule::Ref<_15177b070_Arr>);
inline jule::Str _151c417b0_gen_fn_anon_decl(jule::Ref<_15081bcd0_FnIns>);
inline jule::Str _151c417b0_gen_fn_kind(jule::Ref<_15081bcd0_FnIns>);
inline jule::Str _151c417b0_gen_type_kind(jule::Ref<_15177b070_TypeKind>);
inline void _1514109b0_add_indent(void);
inline void _1514109b0_done_indent(void);
inline jule::Str _1514109b0_indent(void);
inline jule::Bool _1514109b0_is_cpp_header_file(jule::Str);
inline jule::Str _1514109b0_gen_links(jule::Ref<_1501d9900_IR>);
inline jule::Str _1514109b0_gen_fn_result(jule::Ref<_15081bcd0_Fn>);
inline jule::Str _1514109b0_gen_fn_ins_result(jule::Ref<_15081bcd0_FnIns>);
inline jule::Str _1514109b0_gen_param_prototype(jule::Ref<_15081bcd0_Param>);
inline jule::Str _1514109b0_gen_param_ins(jule::Ref<_15081bcd0_ParamIns>);
inline jule::Str _1514109b0_gen_param_ins_prototype(jule::Ref<_15081bcd0_ParamIns>);
inline jule::Str _1514109b0_gen_param(jule::Ref<_15081bcd0_Param>);
inline jule::Str _1514109b0_gen_params(jule::Slice<jule::Ref<_15081bcd0_Param>>);
inline jule::Str _1514109b0_gen_params_ins(jule::Slice<jule::Ref<_15081bcd0_ParamIns>>);
inline jule::Str _1514109b0_gen_params_prototypes(jule::Slice<jule::Ref<_15081bcd0_ParamIns>>);
inline jule::Str _1514109b0_gen_trait(jule::Ref<_150f166e0_Trait>);
inline jule::Str _1514109b0_gen_traits_tbl(jule::Ref<_15128c4d0_SymbolTable>);
inline jule::Str _1514109b0_gen_traits_pkg(jule::Ref<_150f26340_Package>);
inline jule::Str _1514109b0_gen_traits(jule::Ref<_1501d9900_IR>);
inline jule::Str _1514109b0_gen_trait_prototype(jule::Ref<_150f166e0_Trait>);
inline jule::Str _1514109b0_gen_trait_prototypes(jule::Ref<_150f26340_Package>);
inline jule::Str _1514109b0_gen_struct_plain_prototype(jule::Ref<_150a13110_Struct>);
inline jule::Str _1514109b0_gen_struct_plain_prototypes(jule::Slice<jule::Ref<_150a13110_Struct>>);
inline jule::Str _1514109b0_gen_struct_traits(jule::Ref<_150a13110_Struct>);
inline jule::Str _1514109b0_gen_field_decl(jule::Ref<_150a13110_FieldIns>);
inline jule::Str _1514109b0_gen_struct_self_field_type_kind(jule::Ref<_150a13110_StructIns>);
inline jule::Str _1514109b0_gen_struct_self_field(jule::Ref<_150a13110_StructIns>);
inline jule::Str _1514109b0_gen_struct_self_field_init_st(jule::Ref<_150a13110_StructIns>);
inline jule::Str _1514109b0_gen_struct_constructor(jule::Ref<_150a13110_StructIns>);
inline jule::Str _1514109b0_gen_struct_destructor(jule::Ref<_150a13110_StructIns>);
inline jule::Str _1514109b0_gen_struct_operators(jule::Ref<_150a13110_StructIns>);
inline jule::Str _1514109b0_gen_struct_derive_defs_prototypes(jule::Ref<_150a13110_StructIns>);
inline jule::Str _1514109b0_gen_struct_ins_prototype(jule::Ref<_150a13110_StructIns>);
inline jule::Str _1514109b0_gen_struct_prototype(jule::Ref<_150a13110_Struct>);
inline jule::Str _1514109b0_gen_struct_prototypes(jule::Slice<jule::Ref<_150a13110_Struct>>);
inline jule::Str _1514109b0_gen_fn_decl_head(jule::Ref<_15081bcd0_FnIns>,jule::Bool);
inline jule::Str _1514109b0_gen_fn_prototype(jule::Ref<_15081bcd0_Fn>,jule::Bool);
inline jule::Str _1514109b0_gen_fn_prototypes(jule::Ref<_150f26340_Package>);
inline jule::Str _1514109b0_gen_prototypes(jule::Ref<_1501d9900_IR>,jule::Slice<jule::Ref<_150a13110_Struct>>);
inline jule::Str _1514109b0_gen_var_init_expr(jule::Ref<_1511317d0_Var>,jule::Str);
inline jule::Str _1514109b0_gen_var(jule::Ref<_1511317d0_Var>);
inline jule::Str _1514109b0_gen_globals(jule::Slice<jule::Ref<_1511317d0_Var>>);
inline jule::Str _1514109b0_gen_fn(jule::Ref<_15081bcd0_Fn>);
inline jule::Str _1514109b0_gen_pkg_fns(jule::Ref<_150f26340_Package>);
inline jule::Str _1514109b0_gen_struct_method_defs(jule::Ref<_150a13110_StructIns>);
inline jule::Str _1514109b0_gen_struct_ostream(jule::Ref<_150a13110_StructIns>);
inline jule::Str _1514109b0_gen_struct_derive_defs(jule::Ref<_150a13110_StructIns>);
inline jule::Str _1514109b0_gen_struct_ins(jule::Ref<_150a13110_StructIns>);
inline jule::Str _1514109b0_gen_struct(jule::Ref<_150a13110_Struct>);
inline jule::Str _1514109b0_gen_structs(jule::Slice<jule::Ref<_150a13110_Struct>>);
inline jule::Str _1514109b0_gen_fns(jule::Ref<_1501d9900_IR>);
inline void _1514109b0_push_init(jule::Ref<_150f26340_Package>,jule::Str&);
inline jule::Str _1514109b0_gen_init_caller(jule::Ref<_1501d9900_IR>);
inline void _1514109b0_append_standard(jule::Str&,jule::Str,jule::Str);
inline jule::Str _1514109b0_gen(jule::Ref<_1501d9900_IR>);
inline jule::Bool _151d3a7b0_is_struct_ordered(jule::Slice<jule::Ref<_150a13110_Struct>>,jule::Ref<_150a13110_Struct>);
inline void _151d3a7b0_order_structures(jule::Slice<jule::Ref<_150a13110_Struct>>);
inline jule::Bool _151d3a7b0_is_var_ordered(jule::Slice<jule::Ref<_1511317d0_Var>>,jule::Ref<_1511317d0_Var>);
inline void _151d3a7b0_order_variables(jule::Slice<jule::Ref<_1511317d0_Var>>);
inline jule::Str _157e094f0_str_repeat(jule::Str,jule::Int);
inline void _157e094f0_print_error_message(jule::Str);
inline void _157e094f0_help(void);
inline void _157e094f0_version(void);
inline void _157e094f0_tool_distos(void);
inline void _157e094f0_tool_distarch(void);
inline void _157e094f0_tool(void);
inline void _157e094f0_julenv(void);
inline jule::Bool _157e094f0_process_command(void);
inline void _157e094f0_init(void);
inline void _157e094f0_exit_err(jule::Str);
void entry_point(void);
inline jule::Int _157e24260_system(jule::Str);
inline std::tuple<jule::Str,jule::Str> _157e24260_get_option(jule::Slice<jule::Str>,jule::Int&);
inline jule::Str _157e24260_get_option_value(jule::Slice<jule::Str>,jule::Int&);
inline void _157e24260_parse_out_option(jule::Slice<jule::Str>,jule::Int&);
inline void _157e24260_parse_opt_option(jule::Slice<jule::Str>,jule::Int&);
inline void _157e24260_check_target_arch(jule::Str);
inline void _157e24260_check_target_os(jule::Str);
inline void _157e24260_parse_target_option(jule::Slice<jule::Str>,jule::Int&);
inline void _157e24260_parse_compiler_option(jule::Slice<jule::Str>,jule::Int&);
inline jule::Str _157e24260_parse_options(jule::Slice<jule::Str>);
inline void _157e24260_write_output(jule::Str,jule::Str);
inline void _157e24260_clear_objects(void);
inline void _157e24260_compile_ir(jule::Str,jule::Str);
inline void _157e24260_do_spell(jule::Str,jule::Str,jule::Str);
inline void _157e24260_check_mode(void);
inline void _157e24260_check_compiler(void);
inline void _157e24260_set(void);
inline void _157e24260_print_logs(jule::Slice<_157e34dc0_Log>&);
inline jule::Bool _157e24260_is_cpp_source_file(jule::Str);
inline std::tuple<jule::Str,jule::Str> _157e24260_gen_compile_cmd(jule::Str,jule::Ref<_1501d9900_IR>);
inline jule::Str _157e24260_get_compile_path(void);
inline void _157e24260_apply_target_independent_optimizations(jule::Ref<_1501d9900_IR>);
inline void _157e24260_compile_command(void);


static jule::Array<jule::Array<jule::Str,2>,4> _157e094f0_HELP_MAP = jule::Array<jule::Array<jule::Str,2>,4>({jule::Array<jule::Str,2>({jule::Str("help", 4),jule::Str("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str("version", 7),jule::Str("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str("tool", 4),jule::Str("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str("julenv", 6),jule::Str("Show information about native jule environment", 46)})});
static jule::Str _157e24260_COMPILER = jule::Str("", 0);
static jule::Str _157e24260_COMPILER_PATH = jule::Str("", 0);
static jule::Str _157e24260_OUT_DIR = jule::Str("dist", 4);
static jule::Int _157e24260_MODE = 0LLU;
static jule::Str _157e24260_OUT_NAME = jule::Str("ir.cpp", 6);
static jule::Str _157e24260_OUT = jule::Str("", 0);
static jule::Str _157e24260_CPP_STD = jule::Str("c++17", 5);
static jule::Uintptr _147e787d0_STDIN = 0LLU;
static jule::Uintptr _147e787d0_STDOUT = 1LLU;
static jule::Uintptr _147e787d0_STDERR = 2LLU;
static jule::Slice<jule::Str> _147e65dd0_ARGS = nullptr;
static jule::Slice<jule::Str> _147e65dd0_ENV = nullptr;
static jule::Array<jule::U8,32> _150714f70_DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
static jule::Array<jule::U8,64> _150714f70_DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
static jule::Trait<jule::Error> _150715130_OVERFLOW_ERROR = jule::new_struct<_150715130_bits_error>(new( std::nothrow ) _150715130_bits_error(jule::Str("integer overflow", 16)));
static jule::Trait<jule::Error> _150715130_DIVIDE_ERROR = jule::new_struct<_150715130_bits_error>(new( std::nothrow ) _150715130_bits_error(jule::Str("integer divide by zero", 22)));
static jule::Array<jule::F64,6> _1501de350__SIN = jule::Array<jule::F64,6>({0.00000000015896230157654656,-0.000000025050747762857807,0.0000027557313621385722,-0.0001984126982958954,0.008333333333322118,-0.1666666666666663});
static jule::Array<jule::F64,6> _1501de350__COS = jule::Array<jule::F64,6>({-0.000000000011358536521387682,0.000000002087570084197473,-0.0000002755731417929674,0.000024801587288851704,-0.0013888888888873056,0.041666666666666595});
static jule::Array<jule::F64,3> _1501de7e0__TAN_P = jule::Array<jule::F64,3>({-13093.693918138379,1153516.6483858742,-17956525.197648488});
static jule::Array<jule::F64,5> _1501de7e0__TAN_Q = jule::Array<jule::F64,5>({1LL,13681.296347069296,-1320892.3444021097,25008380.18233579,-53869575.592945464});
static jule::Array<jule::U64,20> _1501e0f70_M_PI4 = jule::Array<jule::U64,20>({1LLU,5040379952546458195LLU,17892431488136887169LLU,13169980181085364355LLU,18204331823439776451LLU,7946843935494350272LLU,905889640498799673LLU,18175356263134875261LLU,15061281708168349961LLU,15220161563773041794LLU,8296664548579374057LLU,4109744767560208502LLU,4607516669194743839LLU,16023283104648321598LLU,15739233654134936430LLU,11424645774684705882LLU,16883842788696515318LLU,8795094592981902804LLU,15561835991111744016LLU,12395701187267450711LLU});
static jule::Array<jule::F64,6> _1502cfe00_P_1R8 = jule::Array<jule::F64,6>({0LL,0.11718749999998865,13.239480659307358,412.05185430737856,3874.7453891396053,7914.479540318917});
static jule::Array<jule::F64,5> _1502cfe00_P_1S8 = jule::Array<jule::F64,5>({114.20737037567841,3650.9308342085346,36956.206026903346,97602.79359349508,30804.27206278888});
static jule::Array<jule::F64,6> _1502cfe00_P_1R5 = jule::Array<jule::F64,6>({0.000000000013199051955624352,0.1171874931906141,6.802751278684329,108.30818299018911,517.6361395331998,528.7152013633375});
static jule::Array<jule::F64,5> _1502cfe00_P_1S5 = jule::Array<jule::F64,5>({59.28059872211313,991.4014187336144,5353.26695291488,7844.690317495512,1504.0468881036106});
static jule::Array<jule::F64,6> _1502cfe00_P_1R3 = jule::Array<jule::F64,6>({0.000000003025039161373736,0.11718686556725359,3.9329775003331564,35.11940355916369,91.05501107507813,48.55906851973649});
static jule::Array<jule::F64,5> _1502cfe00_P_1S3 = jule::Array<jule::F64,5>({34.79130950012515,336.76245874782575,1046.8713997577513,890.8113463982564,103.78793243963928});
static jule::Array<jule::F64,6> _1502cfe00_P_1R2 = jule::Array<jule::F64,6>({0.00000010771083010687374,0.11717621946268335,2.368514966676088,12.242610914826123,17.693971127168773,5.073523125888185});
static jule::Array<jule::F64,5> _1502cfe00_P_1S2 = jule::Array<jule::F64,5>({21.43648593638214,125.29022716840275,232.2764690571628,117.6793732871471,8.364638933716183});
static jule::Array<jule::F64,6> _1502cfe00_Q_1R8 = jule::Array<jule::F64,6>({0LL,-0.10253906249999271,-16.271753454459,-759.6017225139501,-11849.806670242959,-48438.512428575035});
static jule::Array<jule::F64,6> _1502cfe00_Q_1S8 = jule::Array<jule::F64,6>({161.3953697007229,7825.385999233485,133875.33628724958,719657.7236832409,666601.2326177764,-294490.26430383464});
static jule::Array<jule::F64,6> _1502cfe00_Q_1R5 = jule::Array<jule::F64,6>({-0.00000000002089799311417641,-0.10253905024137543,-8.05644828123936,-183.66960747488838,-1373.1937606550816,-2612.4444045321566});
static jule::Array<jule::F64,6> _1502cfe00_Q_1S5 = jule::Array<jule::F64,6>({81.27655013843358,1991.7987346048596,17468.48519249089,49851.42709103523,27948.075163891812,-4719.183547951285});
static jule::Array<jule::F64,6> _1502cfe00_Q_1R3 = jule::Array<jule::F64,6>({-0.000000005078312264617666,-0.10253782982083709,-4.610115811394734,-57.847221656278364,-228.2445407376317,-219.21012847890933});
static jule::Array<jule::F64,6> _1502cfe00_Q_1S3 = jule::Array<jule::F64,6>({47.66515503237295,673.8651126766997,3380.1528667952634,5547.729097207228,1903.119193388108,-135.20119144430734});
static jule::Array<jule::F64,6> _1502cfe00_Q_1R2 = jule::Array<jule::F64,6>({-0.00000017838172751095887,-0.10251704260798555,-2.7522056827818746,-19.663616264370372,-42.32531333728305,-21.371921170370406});
static jule::Array<jule::F64,6> _1502cfe00_Q_1S2 = jule::Array<jule::F64,6>({29.533362906052385,252.98154998219053,757.5028348686454,739.3932053204672,155.94900333666612,-4.959498988226282});
static jule::Array<jule::F64,6> _150347f70_P_0R8 = jule::Array<jule::F64,6>({0LL,-0.07031249999999004,-8.081670412753498,-257.06310567970485,-2485.216410094288,-5253.043804907295});
static jule::Array<jule::F64,5> _150347f70_P_0S8 = jule::Array<jule::F64,5>({116.53436461966818,3833.7447536412183,40597.857264847255,116752.97256437592,47627.728414673096});
static jule::Array<jule::F64,6> _150347f70_P_0R5 = jule::Array<jule::F64,6>({-0.00000000001141254646918945,-0.07031249408735993,-4.159610644705878,-67.67476522651673,-331.23129964917297,-346.4333883656049});
static jule::Array<jule::F64,5> _150347f70_P_0S5 = jule::Array<jule::F64,5>({60.753938269230034,1051.2523059570458,5978.970943338558,9625.445143577745,2406.058159229391});
static jule::Array<jule::F64,6> _150347f70_P_0R3 = jule::Array<jule::F64,6>({-0.000000002547046017719519,-0.07031196163814817,-2.409032215495296,-21.96597747348831,-58.07917047017376,-31.44794705948885});
static jule::Array<jule::F64,5> _150347f70_P_0S3 = jule::Array<jule::F64,5>({35.85603380552097,361.51398305030386,1193.6078379211153,1127.9967985690741,173.58093081333575});
static jule::Array<jule::F64,6> _150347f70_P_0R2 = jule::Array<jule::F64,6>({-0.00000008875343330325264,-0.07030309954836247,-1.4507384678095299,-7.635696138235278,-11.193166886035675,-3.2336457935133534});
static jule::Array<jule::F64,5> _150347f70_P_0S2 = jule::Array<jule::F64,5>({22.22029975320888,136.2067942182152,270.4702786580835,153.87539420832033,14.65761769482562});
static jule::Array<jule::F64,6> _150347f70_Q_0R8 = jule::Array<jule::F64,6>({0LL,0.0732421874999935,11.76820646822527,557.6733802564019,8859.197207564686,37014.62677768878});
static jule::Array<jule::F64,6> _150347f70_Q_0S8 = jule::Array<jule::F64,6>({163.77602689568982,8098.344946564498,142538.29141912048,803309.2571195144,840501.5798190605,-343899.2935378666});
static jule::Array<jule::F64,6> _150347f70_Q_0R5 = jule::Array<jule::F64,6>({0.000000000018408596359451553,0.07324217666126848,5.8356350896205695,135.11157728644983,1027.243765961641,1989.9778586460538});
static jule::Array<jule::F64,6> _150347f70_Q_0S5 = jule::Array<jule::F64,6>({82.77661022365378,2077.81416421393,18847.28877857181,56751.11228949473,35976.75384251145,-5354.342756019448});
static jule::Array<jule::F64,6> _150347f70_Q_0R3 = jule::Array<jule::F64,6>({0.000000004377410140897386,0.07324111800429114,3.344231375161707,42.621844074541265,170.8080913405656,166.73394869665117});
static jule::Array<jule::F64,6> _150347f70_Q_0S3 = jule::Array<jule::F64,6>({48.75887297245872,709.689221056606,3704.1482262011136,6460.425167525689,2516.3336892036896,-149.2474518361564});
static jule::Array<jule::F64,6> _150347f70_Q_0R2 = jule::Array<jule::F64,6>({0.00000015044444488698327,0.07322342659630793,1.99819174093816,14.495602934788574,31.666231750478154,16.252707571092927});
static jule::Array<jule::F64,6> _150347f70_Q_0S2 = jule::Array<jule::F64,6>({30.36558483552192,269.34811860804984,844.7837575953201,882.9358451124886,212.66638851179883,-5.3109549388266695});
static jule::Array<jule::F64,12> _15046e170__LGAM_A = jule::Array<jule::F64,12>({0.07721566490153287,0.3224670334241136,0.06735230105312927,0.020580808432516733,0.007385550860814029,0.0028905138367341563,0.0011927076318336207,0.0005100697921535113,0.00022086279071390839,0.00010801156724758394,0.000025214456545125733,0.000044864094961891516});
static jule::Array<jule::F64,7> _15046e170__LGAM_R = jule::Array<jule::F64,7>({1LL,1.3920053346762105,0.7219355475671381,0.17193386563280308,0.01864591917156529,0.0007779424963818936,0.000007326684307446256});
static jule::Array<jule::F64,7> _15046e170__LGAM_S = jule::Array<jule::F64,7>({-0.07721566490153287,0.21498241596060885,0.325778796408931,0.14635047265246445,0.02664227030336386,0.0018402845140733772,0.00003194753265841009});
static jule::Array<jule::F64,15> _15046e170__LGAM_T = jule::Array<jule::F64,15>({0.48383612272381005,-0.1475877229945939,0.06462494023913339,-0.032788541075985965,0.01797067508118204,-0.010314224129834144,0.006100538702462913,-0.0036845201678113826,0.0022596478090061247,-0.0014034646998923284,0.000881081882437654,-0.0005385953053567405,0.00031563207090362595,-0.00031275416837512086,0.0003355291926355191});
static jule::Array<jule::F64,6> _15046e170__LGAM_U = jule::Array<jule::F64,6>({-0.07721566490153287,0.6328270640250934,1.4549225013723477,0.9777175279633727,0.22896372806469245,0.013381091853678766});
static jule::Array<jule::F64,6> _15046e170__LGAM_V = jule::Array<jule::F64,6>({1LL,2.4559779371304113,2.128489763798934,0.7692851504566728,0.10422264559336913,0.003217092422824239});
static jule::Array<jule::F64,7> _15046e170__LGAM_W = jule::Array<jule::F64,7>({0.4189385332046727,0.08333333333333297,-0.0027777777772877554,0.0007936505586430196,-0.00059518755745034,0.0008363399189962821,-0.0016309293409657527});
static jule::Array<jule::F64,3> _1503e4950_TANH_P = jule::Array<jule::F64,3>({-0.9643991794250523,-99.28772310019185,-1614.6876844170845});
static jule::Array<jule::F64,3> _1503e4950_TANH_Q = jule::Array<jule::F64,3>({112.81167849163293,2235.4883906010045,4844.063053251255});
static jule::Array<jule::F64,7> _1504d9340__GAM_P = jule::Array<jule::F64,7>({0.00016011952247675185,0.0011913514700658638,0.010421379756176158,0.04763678004571372,0.20744822764843598,0.4942148268014971,1LL});
static jule::Array<jule::F64,8> _1504d9340__GAM_Q = jule::Array<jule::F64,8>({-0.000023158187332412014,0.0005396055804933034,-0.004456419138517973,0.011813978522206043,0.035823639860549865,-0.23459179571824335,0.0714304917030273,1LL});
static jule::Array<jule::F64,5> _1504d9340__GAM_S = jule::Array<jule::F64,5>({0.0007873113957930937,-0.00022954996161337813,-0.0026813261780578124,0.0034722222160545866,0.08333333333334822});
static jule::Array<jule::F64,32> _150560610_POW10_TAB = jule::Array<jule::F64,32>({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0,100000000000000000000000.0,1000000000000000000000000.0,10000000000000000000000000.0,100000000000000000000000000.0,1000000000000000000000000000.0,10000000000000000000000000000.0,100000000000000000000000000000.0,1000000000000000000000000000000.0,10000000000000000000000000000000.0});
static jule::Array<jule::F64,10> _150560610_POW10_POSTAB32 = jule::Array<jule::F64,10>({1LL,100000000000000000000000000000000.0,10000000000000000000000000000000000000000000000000000000000000000.0,1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0,100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0,10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0,1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0,100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0,10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0,1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0});
static jule::Array<jule::F64,11> _150560610_POW10_NEGTAB32 = jule::Array<jule::F64,11>({1LL,0.00000000000000000000000000000001,0.0000000000000000000000000000000000000000000000000000000000000001,0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001,0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001,0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001,0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001,0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001,0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001,0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001,0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001});
static _147e3cfb0_FloatInfo _147e3cfb0_F32_INFO = _147e3cfb0_FloatInfo(23LLU,8LLU,-127LL);
static _147e3cfb0_FloatInfo _147e3cfb0_F64_INFO = _147e3cfb0_FloatInfo(52LLU,11LLU,-1023LL);
static jule::Array<jule::Array<jule::U64,2>,696> _147e81490_DETAILED_POWS_OF_TEN = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
static jule::Slice<jule::Int> _147fb9200_POWTAB = jule::Slice<jule::Int>({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
static jule::Slice<jule::F64> _147fb9200_F64_POW10 = jule::Slice<jule::F64>({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
static jule::Slice<jule::F32> _147fb9200_F32_POW10 = jule::Slice<jule::F32>({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL});
static jule::Array<jule::U64,20> _147ebfca0_U64_POW10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
static jule::Slice<_150025080_LeftCheat> _150025080_LEFTCHEATS = jule::Slice<_150025080_LeftCheat>({_150025080_LeftCheat(0LL,jule::Str("", 0)),_150025080_LeftCheat(1LL,jule::Str("5", 1)),_150025080_LeftCheat(1LL,jule::Str("25", 2)),_150025080_LeftCheat(1LL,jule::Str("125", 3)),_150025080_LeftCheat(2LL,jule::Str("625", 3)),_150025080_LeftCheat(2LL,jule::Str("3125", 4)),_150025080_LeftCheat(2LL,jule::Str("15625", 5)),_150025080_LeftCheat(3LL,jule::Str("78125", 5)),_150025080_LeftCheat(3LL,jule::Str("390625", 6)),_150025080_LeftCheat(3LL,jule::Str("1953125", 7)),_150025080_LeftCheat(4LL,jule::Str("9765625", 7)),_150025080_LeftCheat(4LL,jule::Str("48828125", 8)),_150025080_LeftCheat(4LL,jule::Str("244140625", 9)),_150025080_LeftCheat(4LL,jule::Str("1220703125", 10)),_150025080_LeftCheat(5LL,jule::Str("6103515625", 10)),_150025080_LeftCheat(5LL,jule::Str("30517578125", 11)),_150025080_LeftCheat(5LL,jule::Str("152587890625", 12)),_150025080_LeftCheat(6LL,jule::Str("762939453125", 12)),_150025080_LeftCheat(6LL,jule::Str("3814697265625", 13)),_150025080_LeftCheat(6LL,jule::Str("19073486328125", 14)),_150025080_LeftCheat(7LL,jule::Str("95367431640625", 14)),_150025080_LeftCheat(7LL,jule::Str("476837158203125", 15)),_150025080_LeftCheat(7LL,jule::Str("2384185791015625", 16)),_150025080_LeftCheat(7LL,jule::Str("11920928955078125", 17)),_150025080_LeftCheat(8LL,jule::Str("59604644775390625", 17)),_150025080_LeftCheat(8LL,jule::Str("298023223876953125", 18)),_150025080_LeftCheat(8LL,jule::Str("1490116119384765625", 19)),_150025080_LeftCheat(9LL,jule::Str("7450580596923828125", 19)),_150025080_LeftCheat(9LL,jule::Str("37252902984619140625", 20)),_150025080_LeftCheat(9LL,jule::Str("186264514923095703125", 21)),_150025080_LeftCheat(10LL,jule::Str("931322574615478515625", 21)),_150025080_LeftCheat(10LL,jule::Str("4656612873077392578125", 22)),_150025080_LeftCheat(10LL,jule::Str("23283064365386962890625", 23)),_150025080_LeftCheat(10LL,jule::Str("116415321826934814453125", 24)),_150025080_LeftCheat(11LL,jule::Str("582076609134674072265625", 24)),_150025080_LeftCheat(11LL,jule::Str("2910383045673370361328125", 25)),_150025080_LeftCheat(11LL,jule::Str("14551915228366851806640625", 26)),_150025080_LeftCheat(12LL,jule::Str("72759576141834259033203125", 26)),_150025080_LeftCheat(12LL,jule::Str("363797880709171295166015625", 27)),_150025080_LeftCheat(12LL,jule::Str("1818989403545856475830078125", 28)),_150025080_LeftCheat(13LL,jule::Str("9094947017729282379150390625", 28)),_150025080_LeftCheat(13LL,jule::Str("45474735088646411895751953125", 29)),_150025080_LeftCheat(13LL,jule::Str("227373675443232059478759765625", 30)),_150025080_LeftCheat(13LL,jule::Str("1136868377216160297393798828125", 31)),_150025080_LeftCheat(14LL,jule::Str("5684341886080801486968994140625", 31)),_150025080_LeftCheat(14LL,jule::Str("28421709430404007434844970703125", 32)),_150025080_LeftCheat(14LL,jule::Str("142108547152020037174224853515625", 33)),_150025080_LeftCheat(15LL,jule::Str("710542735760100185871124267578125", 33)),_150025080_LeftCheat(15LL,jule::Str("3552713678800500929355621337890625", 34)),_150025080_LeftCheat(15LL,jule::Str("17763568394002504646778106689453125", 35)),_150025080_LeftCheat(16LL,jule::Str("88817841970012523233890533447265625", 35)),_150025080_LeftCheat(16LL,jule::Str("444089209850062616169452667236328125", 36)),_150025080_LeftCheat(16LL,jule::Str("2220446049250313080847263336181640625", 37)),_150025080_LeftCheat(16LL,jule::Str("11102230246251565404236316680908203125", 38)),_150025080_LeftCheat(17LL,jule::Str("55511151231257827021181583404541015625", 38)),_150025080_LeftCheat(17LL,jule::Str("277555756156289135105907917022705078125", 39)),_150025080_LeftCheat(17LL,jule::Str("1387778780781445675529539585113525390625", 40)),_150025080_LeftCheat(18LL,jule::Str("6938893903907228377647697925567626953125", 40)),_150025080_LeftCheat(18LL,jule::Str("34694469519536141888238489627838134765625", 41)),_150025080_LeftCheat(18LL,jule::Str("173472347597680709441192448139190673828125", 42)),_150025080_LeftCheat(19LL,jule::Str("867361737988403547205962240695953369140625", 42))});
static jule::Array<jule::Str,4> _157e348f0_CPP_HEADER_EXTS = jule::Array<jule::Str,4>({jule::Str(".h", 2),jule::Str(".hpp", 4),jule::Str(".hxx", 4),jule::Str(".hh", 3)});
static jule::Array<jule::Str,3> _157e348f0_CPP_EXTS = jule::Array<jule::Str,3>({jule::Str(".cpp", 4),jule::Str(".cc", 3),jule::Str(".cxx", 4)});
static jule::Array<jule::Str,1> _157e348f0_OBJECTIVE_CPP_EXTS = jule::Array<jule::Str,1>({jule::Str(".mm", 3)});
static jule::Array<jule::Str,6> _157eaaf20_DIRECTIVES = jule::Array<jule::Str,6>({jule::Str("cdef", 4),jule::Str("typedef", 7),jule::Str("derive", 6),jule::Str("pass", 4),jule::Str("build", 5),jule::Str("namespace", 9)});
static jule::Array<jule::Str,3> _157eacb90_DISTOS = jule::Array<jule::Str,3>({jule::Str("windows", 7),jule::Str("linux", 5),jule::Str("darwin", 6)});
static jule::Array<jule::Str,3> _157eacb90_DISTARCH = jule::Array<jule::Str,3>({jule::Str("arm64", 5),jule::Str("amd64", 5),jule::Str("i386", 4)});
static jule::Str _157eb0090_OS = jule::Str("linux", 5);
static jule::Str _157eb0090_ARCH = jule::Str("amd64", 5);
static jule::Str _157eb0090_PATH_STDLIB = jule::Str("", 0);
static jule::Str _157eb0090_PATH_EXEC = jule::Str("", 0);
static jule::Str _157eb0090_PATH_WD = jule::Str("", 0);
static jule::Str _157eb0090_PATH_API = jule::Str("", 0);
static jule::Array<jule::U8,256> _15081f100_FIRST = jule::Array<jule::U8,256>({240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,19LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,35LLU,3LLU,3LLU,52LLU,4LLU,4LLU,4LLU,68LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU});
static jule::Array<_15081f100_accept_range,16> _15081f100_ACCEPT_RANGES = jule::Array<_15081f100_accept_range,16>({_15081f100_accept_range(128LLU,191LLU),_15081f100_accept_range(160LLU,191LLU),_15081f100_accept_range(128LLU,159LLU),_15081f100_accept_range(144LLU,191LLU),_15081f100_accept_range(128LLU,143LLU)});
static jule::Array<jule::I32,33> _150640f50_PUNCTS = jule::Array<jule::I32,33>({'!','#','$',',','.','\'','\"',':',';','<','>','=','?','-','+','*','(',')','[',']','{','}','%','&','/','\\','@','^','_','`','|','~',166LL});
static jule::Array<jule::I32,5> _150640f50_SPACES = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
static jule::Array<jule::Str,6> _150640f50_UNARY_OPS = jule::Array<jule::Str,6>({jule::Str("-", 1),jule::Str("+", 1),jule::Str("^", 1),jule::Str("!", 1),jule::Str("*", 1),jule::Str("&", 1)});
static jule::Array<jule::Str,13> _150640f50_BIN_OPS = jule::Array<jule::Str,13>({jule::Str("+", 1),jule::Str("-", 1),jule::Str("*", 1),jule::Str("/", 1),jule::Str("%", 1),jule::Str("&", 1),jule::Str("|", 1),jule::Str("^", 1),jule::Str("<", 1),jule::Str(">", 1),jule::Str("!", 1),jule::Str("&&", 2),jule::Str("||", 2)});
static jule::Array<jule::Str,2> _150640f50_WEAK_OPS = jule::Array<jule::Str,2>({jule::Str("...", 3),jule::Str(":", 1)});
static jule::Array<jule::Str,2> _150640f50_POSTFIX_OPS = jule::Array<jule::Str,2>({jule::Str("++", 2),jule::Str("--", 2)});
static jule::Array<jule::Str,11> _150640f50_ASSING_OPS = jule::Array<jule::Str,11>({jule::Str("=", 1),jule::Str("+=", 2),jule::Str("-=", 2),jule::Str("/=", 2),jule::Str("*=", 2),jule::Str("%=", 2),jule::Str(">>=", 3),jule::Str("<<=", 3),jule::Str("|=", 2),jule::Str("&=", 2),jule::Str("^=", 2)});
static jule::Array<_150567d60_KindPair,46> _150567d60_KEYWORDS = jule::Array<_150567d60_KindPair,46>({_150567d60_KindPair(jule::Str("i8", 2),1LLU),_150567d60_KindPair(jule::Str("i16", 3),1LLU),_150567d60_KindPair(jule::Str("i32", 3),1LLU),_150567d60_KindPair(jule::Str("i64", 3),1LLU),_150567d60_KindPair(jule::Str("u8", 2),1LLU),_150567d60_KindPair(jule::Str("u16", 3),1LLU),_150567d60_KindPair(jule::Str("u32", 3),1LLU),_150567d60_KindPair(jule::Str("u64", 3),1LLU),_150567d60_KindPair(jule::Str("f32", 3),1LLU),_150567d60_KindPair(jule::Str("f64", 3),1LLU),_150567d60_KindPair(jule::Str("uint", 4),1LLU),_150567d60_KindPair(jule::Str("int", 3),1LLU),_150567d60_KindPair(jule::Str("uintptr", 7),1LLU),_150567d60_KindPair(jule::Str("bool", 4),1LLU),_150567d60_KindPair(jule::Str("str", 3),1LLU),_150567d60_KindPair(jule::Str("any", 3),1LLU),_150567d60_KindPair(jule::Str("true", 4),6LLU),_150567d60_KindPair(jule::Str("false", 5),6LLU),_150567d60_KindPair(jule::Str("nil", 3),6LLU),_150567d60_KindPair(jule::Str("const", 5),9LLU),_150567d60_KindPair(jule::Str("ret", 3),4LLU),_150567d60_KindPair(jule::Str("type", 4),10LLU),_150567d60_KindPair(jule::Str("for", 3),12LLU),_150567d60_KindPair(jule::Str("break", 5),13LLU),_150567d60_KindPair(jule::Str("continue", 8),14LLU),_150567d60_KindPair(jule::Str("in", 2),15LLU),_150567d60_KindPair(jule::Str("if", 2),16LLU),_150567d60_KindPair(jule::Str("else", 4),17LLU),_150567d60_KindPair(jule::Str("use", 3),19LLU),_150567d60_KindPair(jule::Str("pub", 3),21LLU),_150567d60_KindPair(jule::Str("goto", 4),22LLU),_150567d60_KindPair(jule::Str("enum", 4),24LLU),_150567d60_KindPair(jule::Str("struct", 6),25LLU),_150567d60_KindPair(jule::Str("co", 2),26LLU),_150567d60_KindPair(jule::Str("match", 5),27LLU),_150567d60_KindPair(jule::Str("self", 4),28LLU),_150567d60_KindPair(jule::Str("trait", 5),29LLU),_150567d60_KindPair(jule::Str("impl", 4),30LLU),_150567d60_KindPair(jule::Str("cpp", 3),31LLU),_150567d60_KindPair(jule::Str("fall", 4),32LLU),_150567d60_KindPair(jule::Str("fn", 2),33LLU),_150567d60_KindPair(jule::Str("let", 3),34LLU),_150567d60_KindPair(jule::Str("unsafe", 6),35LLU),_150567d60_KindPair(jule::Str("mut", 3),36LLU),_150567d60_KindPair(jule::Str("defer", 5),37LLU),_150567d60_KindPair(jule::Str("static", 6),38LLU)});
static jule::Array<_150567d60_KindPair,38> _150567d60_BASIC_OPS = jule::Array<_150567d60_KindPair,38>({_150567d60_KindPair(jule::Str("::", 2),23LLU),_150567d60_KindPair(jule::Str(":", 1),11LLU),_150567d60_KindPair(jule::Str(";", 1),5LLU),_150567d60_KindPair(jule::Str(",", 1),8LLU),_150567d60_KindPair(jule::Str("...", 3),7LLU),_150567d60_KindPair(jule::Str(".", 1),20LLU),_150567d60_KindPair(jule::Str("+=", 2),7LLU),_150567d60_KindPair(jule::Str("-=", 2),7LLU),_150567d60_KindPair(jule::Str("*=", 2),7LLU),_150567d60_KindPair(jule::Str("/=", 2),7LLU),_150567d60_KindPair(jule::Str("%=", 2),7LLU),_150567d60_KindPair(jule::Str("<<=", 3),7LLU),_150567d60_KindPair(jule::Str(">>=", 3),7LLU),_150567d60_KindPair(jule::Str("^=", 2),7LLU),_150567d60_KindPair(jule::Str("&=", 2),7LLU),_150567d60_KindPair(jule::Str("|=", 2),7LLU),_150567d60_KindPair(jule::Str("==", 2),7LLU),_150567d60_KindPair(jule::Str("!=", 2),7LLU),_150567d60_KindPair(jule::Str(">=", 2),7LLU),_150567d60_KindPair(jule::Str("<=", 2),7LLU),_150567d60_KindPair(jule::Str("&&", 2),7LLU),_150567d60_KindPair(jule::Str("||", 2),7LLU),_150567d60_KindPair(jule::Str("<<", 2),7LLU),_150567d60_KindPair(jule::Str(">>", 2),7LLU),_150567d60_KindPair(jule::Str("++", 2),7LLU),_150567d60_KindPair(jule::Str("--", 2),7LLU),_150567d60_KindPair(jule::Str("+", 1),7LLU),_150567d60_KindPair(jule::Str("-", 1),7LLU),_150567d60_KindPair(jule::Str("*", 1),7LLU),_150567d60_KindPair(jule::Str("/", 1),7LLU),_150567d60_KindPair(jule::Str("%", 1),7LLU),_150567d60_KindPair(jule::Str("&", 1),7LLU),_150567d60_KindPair(jule::Str("|", 1),7LLU),_150567d60_KindPair(jule::Str("^", 1),7LLU),_150567d60_KindPair(jule::Str("!", 1),7LLU),_150567d60_KindPair(jule::Str("<", 1),7LLU),_150567d60_KindPair(jule::Str(">", 1),7LLU),_150567d60_KindPair(jule::Str("=", 1),7LLU)});
static jule::Ref<_15081bcd0_FnIns> _1518a9420_BUILTIN_FN_OUT = jule::new_struct<_15081bcd0_FnIns>(new( std::nothrow ) _15081bcd0_FnIns());
static jule::Ref<_15081bcd0_FnIns> _1518a9420_BUILTIN_FN_OUTLN = jule::new_struct<_15081bcd0_FnIns>(new( std::nothrow ) _15081bcd0_FnIns());
static jule::Ref<_15081bcd0_FnIns> _1518a9420_BUILTIN_FN_NEW = jule::new_struct<_15081bcd0_FnIns>(new( std::nothrow ) _15081bcd0_FnIns());
static jule::Ref<_15081bcd0_FnIns> _1518a9420_BUILTIN_FN_DROP = jule::new_struct<_15081bcd0_FnIns>(new( std::nothrow ) _15081bcd0_FnIns());
static jule::Ref<_15081bcd0_FnIns> _1518a9420_BUILTIN_FN_PANIC = jule::new_struct<_15081bcd0_FnIns>(new( std::nothrow ) _15081bcd0_FnIns());
static jule::Ref<_15081bcd0_FnIns> _1518a9420_BUILTIN_FN_MAKE = jule::new_struct<_15081bcd0_FnIns>(new( std::nothrow ) _15081bcd0_FnIns());
static jule::Ref<_15081bcd0_FnIns> _1518a9420_BUILTIN_FN_APPEND = jule::new_struct<_15081bcd0_FnIns>(new( std::nothrow ) _15081bcd0_FnIns());
static jule::Ref<_15081bcd0_FnIns> _1518a9420_BUILTIN_FN_RECOVER = jule::new_struct<_15081bcd0_FnIns>(new( std::nothrow ) _15081bcd0_FnIns());
static jule::Ref<_15081bcd0_FnIns> _1518a9420_BUILTIN_FN_CLONE = jule::new_struct<_15081bcd0_FnIns>(new( std::nothrow ) _15081bcd0_FnIns());
static jule::Ref<_15081bcd0_FnIns> _1518a9420_BUILTIN_FN_STD_MEM_SIZE_OF = jule::new_struct<_15081bcd0_FnIns>(new( std::nothrow ) _15081bcd0_FnIns());
static jule::Ref<_15081bcd0_FnIns> _1518a9420_BUILTIN_FN_STD_MEM_ALIGN_OF = jule::new_struct<_15081bcd0_FnIns>(new( std::nothrow ) _15081bcd0_FnIns());
static jule::Ref<_15081bcd0_FnIns> _1518a9420_BUILTIN_FN_REAL = jule::new_struct<_15081bcd0_FnIns>(new( std::nothrow ) _15081bcd0_FnIns(jule::Ref<_150a13110_StructIns>(),jule::Ref<_15081bcd0_Fn>(),jule::Slice<jule::Ref<_15177b070_TypeKind>>(),jule::Slice<jule::Ref<_15081bcd0_ParamIns>>(),jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_15177b070_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_150d29660_Scope>(),jule::Ref<_150e75a70_ReferenceStack>(),jule::Ref<_150e75a70_ReferenceStack>(),jule::Fn<jule::Ref<_151290fd0_Data>(jule::Ref<_151290fd0_Eval>,jule::Ref<_1506406d0_FnCallExpr>,jule::Ref<_151290fd0_Data>)>(),jule::Bool(),jule::Bool()));
static jule::Ref<_15081bcd0_FnIns> _1518a9420_BUILTIN_FN_COPY = jule::new_struct<_15081bcd0_FnIns>(new( std::nothrow ) _15081bcd0_FnIns(jule::Ref<_150a13110_StructIns>(),jule::Ref<_15081bcd0_Fn>(),jule::Slice<jule::Ref<_15177b070_TypeKind>>(),jule::Slice<jule::Ref<_15081bcd0_ParamIns>>(),jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_15177b070_build_prim_type(jule::Str("int", 3)))),jule::Ref<_150d29660_Scope>(),jule::Ref<_150e75a70_ReferenceStack>(),jule::Ref<_150e75a70_ReferenceStack>(),jule::Fn<jule::Ref<_151290fd0_Data>(jule::Ref<_151290fd0_Eval>,jule::Ref<_1506406d0_FnCallExpr>,jule::Ref<_151290fd0_Data>)>(),jule::Bool(),jule::Bool()));
static jule::Ref<_15177b070_TypeAlias> _1518a9420_BUILTIN_TYPE_ALIAS_BYTE = jule::new_struct<_15177b070_TypeAlias>(new( std::nothrow ) _15177b070_TypeAlias(jule::Ref<_1506406d0_ScopeTree>(),true,jule::Bool(),jule::Bool(),_150640f50_Token(),jule::Str(),jule::new_struct<_15177b070_TypeSymbol>(new( std::nothrow ) _15177b070_TypeSymbol(jule::Ref<_1506406d0_TypeDecl>(),jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_15177b070_build_prim_type(jule::Str("u8", 2)))))),jule::Str(),jule::Slice<jule::Any>()));
static jule::Ref<_15177b070_TypeAlias> _1518a9420_BUILTIN_TYPE_ALIAS_RUNE = jule::new_struct<_15177b070_TypeAlias>(new( std::nothrow ) _15177b070_TypeAlias(jule::Ref<_1506406d0_ScopeTree>(),true,jule::Bool(),jule::Bool(),_150640f50_Token(),jule::Str(),jule::new_struct<_15177b070_TypeSymbol>(new( std::nothrow ) _15177b070_TypeSymbol(jule::Ref<_1506406d0_TypeDecl>(),jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_15177b070_build_prim_type(jule::Str("i32", 3)))))),jule::Str(),jule::Slice<jule::Any>()));
static jule::Ref<_150f166e0_Trait> _1518a9420_BUILTIN_TRAIT_ERROR = jule::new_struct<_150f166e0_Trait>(new( std::nothrow ) _150f166e0_Trait(_150640f50_Token(),jule::Str("Error", 5),true,jule::Str(),jule::Slice<jule::Ref<_15081bcd0_Fn>>({jule::new_struct<_15081bcd0_Fn>(new( std::nothrow ) _15081bcd0_Fn(jule::Ref<_1510c9150_Sema>(),_150640f50_Token(),jule::Bool(),jule::Bool(),true,jule::Bool(),jule::Bool(),jule::Str("error", 5),jule::Slice<jule::Ref<_1506406d0_Directive>>(),jule::Str(),jule::Ref<_1506406d0_ScopeTree>(),jule::Slice<jule::Ref<_1506406d0_GenericDecl>>(),jule::new_struct<_15081bcd0_RetType>(new( std::nothrow ) _15081bcd0_RetType(jule::new_struct<_15177b070_TypeSymbol>(new( std::nothrow ) _15177b070_TypeSymbol(jule::new_struct<_1506406d0_TypeDecl>(new( std::nothrow ) _1506406d0_TypeDecl(_150640f50_Token(),jule::Any(jule::new_struct<_1506406d0_IdentTypeDecl>(new( std::nothrow ) _1506406d0_IdentTypeDecl(_150640f50_Token(),jule::Str("str", 3),jule::Bool(),jule::Slice<jule::Ref<_1506406d0_TypeDecl>>()))))),jule::Ref<_15177b070_TypeKind>())),jule::Slice<_150640f50_Token>())),jule::Slice<jule::Ref<_15081bcd0_Param>>({jule::new_struct<_15081bcd0_Param>(new( std::nothrow ) _15081bcd0_Param(_150640f50_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_15177b070_TypeSymbol>(),jule::Str("self", 4)))}),jule::Ref<_150a13110_Struct>(),jule::Slice<jule::Ref<_15081bcd0_FnIns>>()))}),jule::Slice<jule::Ref<_150a13110_Struct>>()));
static jule::Slice<jule::Str> _15020d0b0_FLAGS = nullptr;
static jule::Slice<jule::Any> _157ee5140_deads = nullptr;
static jule::Slice<jule::Any> _157ee5140_checking = nullptr;
static jule::Any _157ee5140_current = jule::Any(nullptr);
static jule::Any _157ee5140_main_current = jule::Any(nullptr);
static jule::Slice<jule::Str> _1501e6230_OPTIMIZATIONS = nullptr;
static jule::U64 _1514109b0_INDENT = 0LLU;

inline void _157e24e40_AnsiEscape::_static_method_reset(void) {
	jule::out(jule::Str("\033[0m", 4));
}



inline void _157e24e40_AnsiEscape::_static_method_print(jule::Str _2021_escape,jule::Str _2034_text) {
	jule::out(_2021_escape);
	jule::out(_2034_text);
	_157e24e40_AnsiEscape::_static_method_reset();
}







std::ostream &operator<<(std::ostream &_Stream, const _157e24e40_AnsiEscape &_Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void _157e24e40_Logger::_static_method_log_flat(_157e34dc0_Log& _3125_l) {
	jule::outln(_3125_l._field_text);
}



inline void _157e24e40_Logger::_static_method_log_error(_157e34dc0_Log& _3426_l) {
	_157e24e40_AnsiEscape::_static_method_print(jule::Str("\033[31m\033[1m", 9),_3426_l._field_path);
	jule::out(jule::Str(":", 1));
	jule::out(_1500241f0_itoa(_3426_l._field_row));
	jule::out(jule::Str(":", 1));
	jule::out(_1500241f0_itoa(_3426_l._field_column));
	jule::out(jule::Str(" ", 1));
	jule::out(_3426_l._field_text);
	if (_3426_l._field_line.len() != 0LL) {
		jule::Str _4321_line = _3426_l._field_line.ltrim(jule::Str("\r\n\v\b ", 5));
		jule::I64 _4421_offset = (_3426_l._field_line.len() - _4321_line.len()) + 1LL;
		jule::I64 _4521_old_len = _4321_line.len();
		_4321_line=_4321_line.ltrim(jule::Str("\t", 1));
		if (_4521_old_len != _4321_line.len()) {
			_4421_offset+=static_cast<jule::I64>((_4521_old_len - _4321_line.len()) * 8LL);
		}
		jule::out(jule::Str("\n    ", 5));
		jule::out(_4321_line);
		jule::out(jule::Str("\n    ", 5));
		jule::out(_157e094f0_str_repeat(jule::Str(" ", 1),static_cast<jule::Int>(_3426_l._field_column - _4421_offset)));
		jule::out(jule::Str("^", 1));
		if (_3426_l._field_suggest.len() != 0LL) {
			_157e24e40_AnsiEscape::_static_method_print(jule::Str("\033[95m", 5),jule::Str("\n    suggest", 12));
			jule::out(jule::Str(": ", 2));
			jule::out(_3426_l._field_suggest);
		}
	}
	jule::outln(jule::Str("", 0));
}



inline void _157e24e40_Logger::_static_method_log(_157e34dc0_Log& _6520_l) {
	{
		auto _match_expr{ _6520_l._field_kind };
		if (!((0LLU) == _match_expr)) { goto _case_end_5692058480; }
		_case_begin_5692058480:;
		{
			_157e24e40_Logger::_static_method_log_flat(_6520_l);
		}
		goto _match_end_5692057120;
		_case_end_5692058480:;
		if (!((1LLU) == _match_expr)) { goto _case_end_5692058608; }
		_case_begin_5692058608:;
		{
			_157e24e40_Logger::_static_method_log_error(_6520_l);
		}
		goto _match_end_5692057120;
		_case_end_5692058608:;
		_match_end_5692057120:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _157e24e40_Logger &_Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _147e135c0_LazyBuff::_method_index(jule::Int _5324_i) {
	if ((*this)._field_buff != nullptr) {
		return (*this)._field_buff[static_cast<jule::Int>(_5324_i)];
	}
	return (*this)._field_path[static_cast<jule::Int>(_5324_i)];
}



inline void _147e135c0_LazyBuff::_method_append(jule::U8 _6025_c) {
	if ((*this)._field_buff == nullptr) {
		if (((*this)._field_w < (*this)._field_path.len()) && ((*this)._field_path[static_cast<jule::Int>((*this)._field_w)] == _6025_c)) {
			((*this)._field_w)++;
			return;
		}
		(*this)._field_buff=jule::Slice<jule::U8>::alloc(static_cast<jule::Int>(static_cast<jule::I64>((*this)._field_path.len())));
		copy((*this)._field_buff,static_cast<jule::Slice<jule::U8>>((*this)._field_path.slice(0LL,static_cast<jule::Int>((*this)._field_w))));
	}
	(*this)._field_buff[static_cast<jule::Int>((*this)._field_w)]=_6025_c;
	((*this)._field_w)++;
}



inline jule::Str _147e135c0_LazyBuff::_method_string(void) {
	if ((*this)._field_buff == nullptr) {
		return (*this)._field_vol_and_path.slice(0LL,static_cast<jule::Int>((*this)._field_vol_len + (*this)._field_w));
	}
	return (*this)._field_vol_and_path.slice(0LL,static_cast<jule::Int>((*this)._field_vol_len)) + static_cast<jule::Str>((*this)._field_buff.slice(0LL,static_cast<jule::Int>((*this)._field_w)));
}







std::ostream &operator<<(std::ostream &_Stream, const _147e135c0_LazyBuff &_Src) {
	_Stream << "LazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "vol_and_path:" << _Src._field_vol_and_path << ", ";
	_Stream << "vol_len:" << _Src._field_vol_len;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _150715130_bits_error::_method_error(void) {
	return jule::Str("runtime error: ", 15) + (*this)._field_message;
}







std::ostream &operator<<(std::ostream &_Stream, const _150715130_bits_error &_Src) {
	_Stream << "bits_error{";
	_Stream << "message:" << _Src._field_message;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _147e3cfb0_FloatInfo &_Src) {
	_Stream << "FloatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _147e3cfb0_DecimalSlice &_Src) {
	_Stream << "DecimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _150025080_LeftCheat &_Src) {
	_Stream << "LeftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _150025080_Decimal::_method_set(jule::Str _22922_s) {
	jule::Bool _22932_ok = jule::Bool();
	jule::Int _23017_i = 0LL;
	(*this)._field_neg=false;
	(*this)._field_trunc=false;
	if (_23017_i >= _22922_s.len()) {
		return _22932_ok;
	}
	{
		if (!((_22922_s[static_cast<jule::Int>(_23017_i)] == '+'))) { goto _case_end_5672248624; }
		_case_begin_5672248624:;
		{
			(_23017_i)++;
		}
		goto _match_end_5672249152;
		_case_end_5672248624:;
		if (!((_22922_s[static_cast<jule::Int>(_23017_i)] == '-'))) { goto _case_end_5672248752; }
		_case_begin_5672248752:;
		{
			(*this)._field_neg=true;
			(_23017_i)++;
		}
		goto _match_end_5672249152;
		_case_end_5672248752:;
		_match_end_5672249152:;
	}
	jule::Bool _24717_sawdot = false;
	jule::Bool _24817_sawdigits = false;
	_iter_begin_5672252848:;
	if (!(_23017_i < _22922_s.len())) { goto _iter_end_5672252848; }
	{
		{
			if (!((_22922_s[static_cast<jule::Int>(_23017_i)] == '.'))) { goto _case_end_5672255488; }
			_case_begin_5672255488:;
			{
				if (_24717_sawdot) {
					return _22932_ok;
				}
				_24717_sawdot=true;
				(*this)._field_dp=(*this)._field_nd;
				goto _iter_next_5672252848;
			}
			goto _match_end_5672255296;
			_case_end_5672255488:;
			if (!((('0' <= _22922_s[static_cast<jule::Int>(_23017_i)]) && (_22922_s[static_cast<jule::Int>(_23017_i)] <= '9')))) { goto _case_end_5672255616; }
			_case_begin_5672255616:;
			{
				_24817_sawdigits=true;
				if ((_22922_s[static_cast<jule::Int>(_23017_i)] == '0') && ((*this)._field_nd == 0LL)) {
					((*this)._field_dp)--;
					goto _iter_next_5672252848;
				}
				if ((*this)._field_nd < 800LL) {
					(*this)._field_d[static_cast<jule::Int>((*this)._field_nd)]=_22922_s[static_cast<jule::Int>(_23017_i)];
					((*this)._field_nd)++;
				} else if (_22922_s[static_cast<jule::Int>(_23017_i)] != '0') {
					(*this)._field_trunc=true;
				}
				goto _iter_next_5672252848;
			}
			goto _match_end_5672255296;
			_case_end_5672255616:;
			_match_end_5672255296:;
		}
		goto _iter_end_5672252848;
	}
	_iter_next_5672252848:;
	(_23017_i)++;
	goto _iter_begin_5672252848;
	_iter_end_5672252848:;
	if ((!(_24817_sawdigits))) {
		return _22932_ok;
	}
	if ((!(_24717_sawdot))) {
		(*this)._field_dp=(*this)._field_nd;
	}
	if ((_23017_i < _22922_s.len()) && (_147e40080_lower(_22922_s[static_cast<jule::Int>(_23017_i)]) == 'e')) {
		(_23017_i)++;
		if (_23017_i >= _22922_s.len()) {
			return _22932_ok;
		}
		jule::Int _29121_esign = 1LL;
		if (_22922_s[static_cast<jule::Int>(_23017_i)] == '+') {
			(_23017_i)++;
		} else if (_22922_s[static_cast<jule::Int>(_23017_i)] == '-') {
			(_23017_i)++;
			_29121_esign=-1LL;
		}
		if (((_23017_i >= _22922_s.len()) || (_22922_s[static_cast<jule::Int>(_23017_i)] < '0')) || (_22922_s[static_cast<jule::Int>(_23017_i)] > '9')) {
			return _22932_ok;
		}
		jule::Int _30121_e = 0LL;
		_iter_begin_5672277056:;
		if (!((_23017_i < _22922_s.len()) && (('0' <= _22922_s[static_cast<jule::Int>(_23017_i)]) && (_22922_s[static_cast<jule::Int>(_23017_i)] <= '9')))) { goto _iter_end_5672277056; }
		{
			if (_30121_e < 10000LL) {
				_30121_e=static_cast<jule::Int>(((_30121_e * 10LL) + static_cast<jule::Int>(_22922_s[static_cast<jule::Int>(_23017_i)])) - '0');
			}
		}
		_iter_next_5672277056:;
		(_23017_i)++;
		goto _iter_begin_5672277056;
		_iter_end_5672277056:;
		(*this)._field_dp+=static_cast<jule::Int>(_30121_e * _29121_esign);
	}
	if (_23017_i != _22922_s.len()) {
		return _22932_ok;
	}
	_22932_ok=true;
	return _22932_ok;
}



inline std::tuple<jule::U64,jule::Bool> _150025080_Decimal::_method_float_bits(_147e3cfb0_FloatInfo& _31830_flt) {
	jule::Bool _31856_overflow = jule::Bool();
	jule::U64 _31848_b = jule::U64();
	jule::Int _31917_exp = 0LL;
	jule::U64 _32017_mant = 0LLU;
	if ((*this)._field_nd == 0LL) {
		_32017_mant=0LL;
		_31917_exp=_31830_flt._field_bias;
		goto _julec_label_out;
	}
	if ((*this)._field_dp > 310LL) {
		goto _julec_label_overflow;
	}
	if ((*this)._field_dp < -330LL) {
		_32017_mant=0LL;
		_31917_exp=_31830_flt._field_bias;
		goto _julec_label_out;
	}
	_31917_exp=0LL;
	_iter_begin_5672297264:;
	if (!((*this)._field_dp > 0LL)) { goto _iter_end_5672297264; }
	{
		jule::Int _34521_n = 0LL;
		if ((*this)._field_dp >= _147fb9200_POWTAB.len()) {
			_34521_n=27LL;
		} else {
			_34521_n=_147fb9200_POWTAB[static_cast<jule::Int>((*this)._field_dp)];
		}
		(*this)._method_shift(static_cast<jule::Int>((-(_34521_n))));
		_31917_exp+=_34521_n;
	}
	_iter_next_5672297264:;
	goto _iter_begin_5672297264;
	_iter_end_5672297264:;
	_iter_begin_5672303520:;
	if (!(((*this)._field_dp < 0LL) || (((*this)._field_dp == 0LL) && ((*this)._field_d[0LL] < '5')))) { goto _iter_end_5672303520; }
	{
		jule::Int _35521_n = 0LL;
		if ((-((*this)._field_dp)) >= _147fb9200_POWTAB.len()) {
			_35521_n=27LL;
		} else {
			_35521_n=_147fb9200_POWTAB[static_cast<jule::Int>((-((*this)._field_dp)))];
		}
		(*this)._method_shift(_35521_n);
		_31917_exp-=_35521_n;
	}
	_iter_next_5672303520:;
	goto _iter_begin_5672303520;
	_iter_end_5672303520:;
	(_31917_exp)--;
	if (_31917_exp < (_31830_flt._field_bias + 1LL)) {
		jule::Int _37217_n = (_31830_flt._field_bias + 1LL) - _31917_exp;
		(*this)._method_shift(static_cast<jule::Int>((-(_37217_n))));
		_31917_exp+=_37217_n;
	}
	if ((_31917_exp - _31830_flt._field_bias) >= ((1LL << _31830_flt._field_expbits) - 1LL)) {
		goto _julec_label_overflow;
	}
	(*this)._method_shift(static_cast<jule::Int>(1LL + _31830_flt._field_mantbits));
	_32017_mant=static_cast<jule::U64>((*this)._method_rounded_integer());
	if (_32017_mant == (2LL << _31830_flt._field_mantbits)) {
		_32017_mant>>=1LL;
		(_31917_exp)++;
		if ((_31917_exp - _31830_flt._field_bias) >= ((1LL << _31830_flt._field_expbits) - 1LL)) {
			goto _julec_label_overflow;
		}
	}
	if ((_32017_mant & (1LL << _31830_flt._field_mantbits)) == 0LL) {
		_31917_exp=_31830_flt._field_bias;
	}
	goto _julec_label_out;
	_julec_label_overflow:;
	_32017_mant=0LL;
	_31917_exp=static_cast<jule::Int>(((1LL << _31830_flt._field_expbits) - 1LL) + _31830_flt._field_bias);
	_31856_overflow=true;
	_julec_label_out:;
	jule::U64 _40817_bits = _32017_mant & ((static_cast<jule::U64>(1LLU) << _31830_flt._field_mantbits) - 1LL);
	_40817_bits|=static_cast<jule::U64>(static_cast<jule::U64>((_31917_exp - _31830_flt._field_bias) & ((1LL << _31830_flt._field_expbits) - 1LL)) << _31830_flt._field_mantbits);
	if ((*this)._field_neg) {
		_40817_bits|=static_cast<jule::Int>((1LL << _31830_flt._field_mantbits) << _31830_flt._field_expbits);
	}
	_31848_b = _40817_bits;
	_31856_overflow = _31856_overflow;
	return std::make_tuple(_31848_b,_31856_overflow);
}



inline void _150025080_Decimal::_method_assign(jule::U64 _15229_v) {
	jule::Array<jule::U8,24> _15317_buf = jule::Array<jule::U8,24>({});
	jule::Int _15617_n = 0LL;
	_iter_begin_5672337472:;
	if (!(_15229_v > 0LL)) { goto _iter_end_5672337472; }
	{
		jule::U64 _15817_v1 = jule::div(_15229_v,10LL);
		_15229_v-=static_cast<jule::U64>(10LL * _15817_v1);
		_15317_buf[static_cast<jule::Int>(_15617_n)]=static_cast<jule::U8>(_15229_v + '0');
		(_15617_n)++;
		_15229_v=_15817_v1;
	}
	_iter_next_5672337472:;
	goto _iter_begin_5672337472;
	_iter_end_5672337472:;
	(*this)._field_nd=0LL;
	(_15617_n)--;
	_iter_begin_5672341216:;
	if (!(_15617_n >= 0LL)) { goto _iter_end_5672341216; }
	{
		(*this)._field_d[static_cast<jule::Int>((*this)._field_nd)]=_15317_buf[static_cast<jule::Int>(_15617_n)];
		((*this)._field_nd)++;
	}
	_iter_next_5672341216:;
	(_15617_n)--;
	goto _iter_begin_5672341216;
	_iter_end_5672341216:;
	(*this)._field_dp=(*this)._field_nd;
	_150025080_trim((*this));
}



inline void _150025080_Decimal::_method_shift(jule::Int _17728_k) {
	{
		if (!(((*this)._field_nd == 0LL))) { goto _case_end_5672347888; }
		goto _match_end_5672347680;
		_case_end_5672347888:;
		if (!((_17728_k > 0LL))) { goto _case_end_5672348016; }
		_case_begin_5672348016:;
		{
			_iter_begin_5672349072:;
			if (!(_17728_k > 60LL)) { goto _iter_end_5672349072; }
			{
				_150025080_left_shift((*this),60LLU);
				_17728_k-=60LL;
			}
			_iter_next_5672349072:;
			goto _iter_begin_5672349072;
			_iter_end_5672349072:;
			_150025080_left_shift((*this),static_cast<jule::Uint>(_17728_k));
		}
		goto _match_end_5672347680;
		_case_end_5672348016:;
		if (!((_17728_k < 0LL))) { goto _case_end_5672348144; }
		_case_begin_5672348144:;
		{
			_iter_begin_5672348928:;
			if (!(_17728_k < -60LL)) { goto _iter_end_5672348928; }
			{
				_150025080_right_shift((*this),60LLU);
				_17728_k+=60LL;
			}
			_iter_next_5672348928:;
			goto _iter_begin_5672348928;
			_iter_end_5672348928:;
			_150025080_right_shift((*this),static_cast<jule::Uint>((-(_17728_k))));
		}
		goto _match_end_5672347680;
		_case_end_5672348144:;
		_match_end_5672347680:;
	}
}



inline void _150025080_Decimal::_method_round_down(jule::Int _19729_nd) {
	if ((_19729_nd < 0LL) || (_19729_nd >= (*this)._field_nd)) {
		return;
	}
	(*this)._field_nd=_19729_nd;
	_150025080_trim((*this));
}



inline void _150025080_Decimal::_method_round_up(jule::Int _20627_nd) {
	if ((_20627_nd < 0LL) || (_20627_nd >= (*this)._field_nd)) {
		return;
	}
	jule::Int _21217_i = _20627_nd - 1LL;
	_iter_begin_5672360560:;
	if (!(_21217_i >= 0LL)) { goto _iter_end_5672360560; }
	{
		jule::U8 _21417_c = (*this)._field_d[static_cast<jule::Int>(_21217_i)];
		if (_21417_c < '9') {
			((*this)._field_d[static_cast<jule::Int>(_21217_i)])++;
			(*this)._field_nd=static_cast<jule::Int>(_21217_i + 1LL);
			return;
		}
	}
	_iter_next_5672360560:;
	(_21217_i)--;
	goto _iter_begin_5672360560;
	_iter_end_5672360560:;
	(*this)._field_d[0LL]='1';
	(*this)._field_nd=1LL;
	((*this)._field_dp)++;
}



inline void _150025080_Decimal::_method_round(jule::Int _23324_nd) {
	if ((_23324_nd < 0LL) || (_23324_nd >= (*this)._field_nd)) {
		return;
	}
	if (_150025080_should_round_up((*this),_23324_nd)) {
		(*this)._method_round_up(_23324_nd);
	} else {
		(*this)._method_round_down(_23324_nd);
	}
}



inline jule::U64 _150025080_Decimal::_method_rounded_integer(void) {
	if ((*this)._field_dp > 20LL) {
		return jule::MAX_U64;
	}
	jule::Int _25017_i = 0LL;
	jule::U64 _25117_n = 0LLU;
	_iter_begin_5672376736:;
	if (!((_25017_i < (*this)._field_dp) && (_25017_i < (*this)._field_nd))) { goto _iter_end_5672376736; }
	{
		_25117_n=static_cast<jule::U64>((_25117_n * 10LL) + static_cast<jule::U64>((*this)._field_d[static_cast<jule::Int>(_25017_i)] - '0'));
	}
	_iter_next_5672376736:;
	(_25017_i)++;
	goto _iter_begin_5672376736;
	_iter_end_5672376736:;
	_iter_begin_5672377488:;
	if (!(_25017_i < (*this)._field_dp)) { goto _iter_end_5672377488; }
	{
		_25117_n*=10LL;
	}
	_iter_next_5672377488:;
	(_25017_i)++;
	goto _iter_begin_5672377488;
	_iter_end_5672377488:;
	if (_150025080_should_round_up((*this),(*this)._field_dp)) {
		(_25117_n)++;
	}
	return _25117_n;
}







std::ostream &operator<<(std::ostream &_Stream, const _150025080_Decimal &_Src) {
	_Stream << "Decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _157e34dc0_Log &_Src) {
	_Stream << "Log{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "text:" << _Src._field_text << ", ";
	_Stream << "line:" << _Src._field_line << ", ";
	_Stream << "suggest:" << _Src._field_suggest;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _15053ceb0_DirEntry &_Src) {
	_Stream << "DirEntry{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "stat:" << _Src._field_stat;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::I64,jule::Int> _150562500_File::_method_seek(jule::I64 _5527_offset,jule::Int _5540_origin) {
	jule::I64 _5613_pos = _147ed9190_seek((*this)._field_handle,_5527_offset,static_cast<jule::Int>(_5540_origin));
	return std::make_tuple(_5613_pos,0LLU);
}



inline std::tuple<jule::Int,jule::Int> _150562500_File::_method_read(jule::Slice<jule::U8> _7031_buff) {
	jule::Int _7047_n = jule::Int();
	if (_7031_buff.len() == 0LL) {
		_7047_n = 0LL;
		return std::make_tuple(_7047_n,0LLU);
	}
	_7047_n=static_cast<jule::Int>(static_cast<jule::Int>(_147ed9190_read((*this)._field_handle,(&(_7031_buff[0LL])),static_cast<jule::Uint>(_7031_buff.len()))));
	if (_7047_n == -1LL) {
		_7047_n=0LL;
		_7047_n = _7047_n;
		return std::make_tuple(_7047_n,_1504d9830_get_last_fs_error());
	}
	_7047_n = _7047_n;
	return std::make_tuple(_7047_n,0LLU);
}



inline std::tuple<jule::Int,jule::Int> _150562500_File::_method_write(jule::Slice<jule::U8> _8928_buff) {
	jule::Int _8944_n = jule::Int();
	if (_8928_buff.len() == 0LL) {
		_8944_n = 0LL;
		return std::make_tuple(_8944_n,0LLU);
	}
	_8944_n=static_cast<jule::Int>(static_cast<jule::Int>(_147ed9190_write((*this)._field_handle,(&(_8928_buff[0LL])),static_cast<jule::Uint>(_8928_buff.len()))));
	if (_8944_n == -1LL) {
		_8944_n=0LL;
		_8944_n = _8944_n;
		return std::make_tuple(_8944_n,_1504d9830_get_last_fs_error());
	}
	_8944_n = _8944_n;
	return std::make_tuple(_8944_n,0LLU);
}



inline jule::Int _150562500_File::_method_close(void) {
	if (_147ed9190_close((*this)._field_handle) == -1LL) {
		return _1504d9830_get_last_fs_error();
	}
	return 0LLU;
}







std::ostream &operator<<(std::ostream &_Stream, const _150562500_File &_Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1505f1a60_Status::_method_is_dir(void) {
	return ((*this)._field_mode & 16384LL) == 16384LL;
}



inline jule::Bool _1505f1a60_Status::_method_is_reg(void) {
	return ((*this)._field_mode & 32768LL) == 32768LL;
}







std::ostream &operator<<(std::ostream &_Stream, const _1505f1a60_Status &_Src) {
	_Stream << "Status{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _15081f100_accept_range &_Src) {
	_Stream << "accept_range{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}



inline jule::Int _150640f50_Token::_method_prec(void) {
	if ((*this)._field_id != 7LLU) {
		return -1LL;
	}
	{
		auto _match_expr{ (*this)._field_kind };
		if (!((jule::Str("*", 1)) == _match_expr || (jule::Str("%", 1)) == _match_expr || (jule::Str("/", 1)) == _match_expr || (jule::Str(">>", 2)) == _match_expr || (jule::Str("<<", 2)) == _match_expr || (jule::Str("&", 1)) == _match_expr)) { goto _case_end_5673759456; }
		_case_begin_5673759456:;
		{
			return 5LL;
		}
		goto _match_end_5673756512;
		_case_end_5673759456:;
		if (!((jule::Str("+", 1)) == _match_expr || (jule::Str("-", 1)) == _match_expr || (jule::Str("|", 1)) == _match_expr || (jule::Str("^", 1)) == _match_expr)) { goto _case_end_5673759568; }
		_case_begin_5673759568:;
		{
			return 4LL;
		}
		goto _match_end_5673756512;
		_case_end_5673759568:;
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr || (jule::Str("=", 1)) == _match_expr || (jule::Str("<", 1)) == _match_expr || (jule::Str("<=", 2)) == _match_expr || (jule::Str(">", 1)) == _match_expr || (jule::Str(">=", 2)) == _match_expr)) { goto _case_end_5673758976; }
		_case_begin_5673758976:;
		{
			return 3LL;
		}
		goto _match_end_5673756512;
		_case_end_5673758976:;
		if (!((jule::Str("&&", 2)) == _match_expr)) { goto _case_end_5673759088; }
		_case_begin_5673759088:;
		{
			return 2LL;
		}
		goto _match_end_5673756512;
		_case_end_5673759088:;
		if (!((jule::Str("||", 2)) == _match_expr)) { goto _case_end_5673759200; }
		_case_begin_5673759200:;
		{
			return 1LL;
		}
		goto _match_end_5673756512;
		_case_end_5673759200:;
		_case_begin_5673756944:;
		{
			return -1LL;
		}
		goto _match_end_5673756512;
		_case_end_5673756944:;
		_match_end_5673756512:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _150640f50_Token &_Src) {
	_Stream << "Token{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _150567d60_KindPair &_Src) {
	_Stream << "KindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1506406d0_CommentGroup &_Src) {
	_Stream << "CommentGroup{";
	_Stream << "comments:" << _Src._field_comments;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1506406d0_NamespaceTypeDecl &_Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "idents:" << _Src._field_idents << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1506406d0_RefTypeDecl &_Src) {
	_Stream << "RefTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1506406d0_SlcTypeDecl &_Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1506406d0_TupleTypeDecl &_Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "types:" << _Src._field_types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1506406d0_PtrTypeDecl::_method_is_unsafe(void) {
	return (!(jule::real((*this)._field_elem)));
}







std::ostream &operator<<(std::ostream &_Stream, const _1506406d0_PtrTypeDecl &_Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1506406d0_ArrTypeDecl::_method_auto_sized(void) {
	return (!(jule::real((*this)._field_size)));
}







std::ostream &operator<<(std::ostream &_Stream, const _1506406d0_ArrTypeDecl &_Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1506406d0_MapTypeDecl &_Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1506406d0_RetTypeDecl &_Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "idents:" << _Src._field_idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1506406d0_TupleExpr &_Src) {
	_Stream << "TupleExpr{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1506406d0_LitExpr::_method_is_nil(void) {
	return (*this)._field_value == jule::Str("nil", 3);
}







std::ostream &operator<<(std::ostream &_Stream, const _1506406d0_LitExpr &_Src) {
	_Stream << "LitExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "value:" << _Src._field_value;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1506406d0_UnsafeExpr &_Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1506406d0_IdentExpr::_method_is_self(void) {
	return (*this)._field_ident == jule::Str("self", 4);
}







std::ostream &operator<<(std::ostream &_Stream, const _1506406d0_IdentExpr &_Src) {
	_Stream << "IdentExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1506406d0_UnaryExpr &_Src) {
	_Stream << "UnaryExpr{";
	_Stream << "op:" << _Src._field_op << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1506406d0_VariadicExpr &_Src) {
	_Stream << "VariadicExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1506406d0_CastExpr &_Src) {
	_Stream << "CastExpr{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1506406d0_NsSelectionExpr &_Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "ns:" << _Src._field_ns << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1506406d0_SubIdentExpr &_Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "is_self:" << _Src._field_is_self << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1506406d0_BinopExpr &_Src) {
	_Stream << "BinopExpr{";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1506406d0_FieldExprPair::_method_is_targeted(void) {
	return (*this)._field_field._field_id != 0LLU;
}







std::ostream &operator<<(std::ostream &_Stream, const _1506406d0_FieldExprPair &_Src) {
	_Stream << "FieldExprPair{";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1506406d0_StructLit &_Src) {
	_Stream << "StructLit{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1506406d0_BraceLit::_method_is_empty(void) {
	return (*this)._field_exprs.len() == 0LL;
}







std::ostream &operator<<(std::ostream &_Stream, const _1506406d0_BraceLit &_Src) {
	_Stream << "BraceLit{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1506406d0_KeyValPair &_Src) {
	_Stream << "KeyValPair{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val << ", ";
	_Stream << "colon:" << _Src._field_colon;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1506406d0_SliceExpr::_method_is_empty(void) {
	return (*this)._field_elems.len() == 0LL;
}







std::ostream &operator<<(std::ostream &_Stream, const _1506406d0_SliceExpr &_Src) {
	_Stream << "SliceExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1506406d0_IndexingExpr &_Src) {
	_Stream << "IndexingExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "index:" << _Src._field_index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1506406d0_SlicingExpr &_Src) {
	_Stream << "SlicingExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "start:" << _Src._field_start << ", ";
	_Stream << "to:" << _Src._field_to;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1506406d0_LabelSt &_Src) {
	_Stream << "LabelSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1506406d0_FallSt &_Src) {
	_Stream << "FallSt{";
	_Stream << "token:" << _Src._field_token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1506406d0_AssignSt &_Src) {
	_Stream << "AssignSt{";
	_Stream << "declarative:" << _Src._field_declarative << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1506406d0_ScopeTree &_Src) {
	_Stream << "ScopeTree{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "deferred:" << _Src._field_deferred << ", ";
	_Stream << "stmts:" << _Src._field_stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1506406d0_RetSt &_Src) {
	_Stream << "RetSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1506406d0_Iter::_method_is_inf(void) {
	return (*this)._field_kind == nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _1506406d0_Iter &_Src) {
	_Stream << "Iter{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1506406d0_WhileKind::_method_is_while_next(void) {
	return (*this)._field_next != nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _1506406d0_WhileKind &_Src) {
	_Stream << "WhileKind{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "next:" << _Src._field_next << ", ";
	_Stream << "next_token:" << _Src._field_next_token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1506406d0_RangeKind &_Src) {
	_Stream << "RangeKind{";
	_Stream << "in_token:" << _Src._field_in_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "key_a:" << _Src._field_key_a << ", ";
	_Stream << "key_b:" << _Src._field_key_b;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1506406d0_Conditional &_Src) {
	_Stream << "Conditional{";
	_Stream << "head:" << _Src._field_head << ", ";
	_Stream << "tail:" << _Src._field_tail << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1506406d0_MatchCase &_Src) {
	_Stream << "MatchCase{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "type_match:" << _Src._field_type_match << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "cases:" << _Src._field_cases << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1507e43e0_FileInfo &_Src) {
	_Stream << "FileInfo{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1507e43e0_PackageInfo &_Src) {
	_Stream << "PackageInfo{";
	_Stream << "files:" << _Src._field_files;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1507e2370_Stmt &_Src) {
	_Stream << "Stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _1507e2370_ScopeParser::_method_stop(void) {
	(*this)._field_pos=-1LL;
}



inline jule::Bool _1507e2370_ScopeParser::_method_stopped(void) {
	return (*this)._field_pos == -1LL;
}



inline jule::Bool _1507e2370_ScopeParser::_method_finished(void) {
	return (*this)._field_pos >= (*this)._field_stms.len();
}



inline jule::Bool _1507e2370_ScopeParser::_method_is_last_st(void) {
	return ((*this)._field_pos + 1LL) >= (*this)._field_stms.len();
}



inline void _1507e2370_ScopeParser::_method_push_err(_150640f50_Token _15927_token,jule::Str _15941_fmt) {
	(*this)._field_p->_method_push_err(_15927_token,_15941_fmt,jule::Slice<jule::Any>({}));
}



inline void _1507e2370_ScopeParser::_method_push_suggest(jule::Str _16231_fmt,jule::Slice<jule::Any> _16244_args) {
	(*this)._field_p->_method_push_suggest(_16231_fmt,_16244_args);
}



inline void _1507e2370_ScopeParser::_method_insert_as_next(jule::Slice<_150640f50_Token> _16637_tokens) {
	(*this)._field_stms=jule::append((*this)._field_stms.slice(0LL,static_cast<jule::Int>((*this)._field_pos + 1LL)),(*this)._field_stms.slice(static_cast<jule::Int>((*this)._field_pos)));
	(*this)._field_stms[static_cast<jule::Int>((*this)._field_pos + 1LL)]=jule::new_struct<_1507e2370_Stmt>(new( std::nothrow ) _1507e2370_Stmt(_16637_tokens,jule::Bool()));
}



inline jule::Ref<_1507e2370_Stmt> _1507e2370_ScopeParser::_method_next(void) {
	((*this)._field_pos)++;
	return (*this)._field_stms[static_cast<jule::Int>((*this)._field_pos)];
}



inline jule::Ref<_1506406d0_ScopeTree> _1507e2370_ScopeParser::_method_build_scope(jule::Slice<_150640f50_Token> _17634_tokens) {
	jule::Ref<_1506406d0_ScopeTree> _17717_s = _1507e2370_new_scope();
	_17717_s->_field_parent=(*this)._field_s;
	_1507e2370_ScopeParser _17917_ssp = _1507e2370_ScopeParser((*this)._field_p,jule::Ref<_1506406d0_ScopeTree>(),jule::Slice<jule::Ref<_1507e2370_Stmt>>(),jule::Int());
	_17917_ssp._method_build(_17634_tokens,_17717_s);
	return _17717_s;
}



inline jule::Any _1507e2370_ScopeParser::_method_build_var_st(jule::Slice<_150640f50_Token> _18635_tokens) {
	jule::Ref<_1506406d0_VarDecl> _18717_v = (*this)._field_p->_method_build_var(_18635_tokens);
	_18717_v->_field_scope=(*this)._field_s;
	return jule::Any(_18717_v);
}



inline jule::Any _1507e2370_ScopeParser::_method_build_ret_st(jule::Slice<_150640f50_Token> _19235_tokens) {
	jule::Ref<_1506406d0_RetSt> _19317_st = jule::new_struct<_1506406d0_RetSt>(new( std::nothrow ) _1506406d0_RetSt(_19235_tokens[0LL],jule::Ref<_1506406d0_Expr>()));
	if (_19235_tokens.len() > 1LL) {
		_19235_tokens=_19235_tokens.slice(1LL);
		_19317_st->_field_expr=(*this)._field_p->_method_build_expr(_19235_tokens);
	}
	return jule::Any(_19317_st);
}



inline jule::Any _1507e2370_ScopeParser::_method_build_while_next_iter(jule::Ref<_1507e2370_Stmt> _20344_s) {
	jule::Ref<_1506406d0_Iter> _20417_it = jule::new_struct<_1506406d0_Iter>(new( std::nothrow ) _1506406d0_Iter(_20344_s->_field_tokens[0LL],jule::Any(),jule::Ref<_1506406d0_ScopeTree>()));
	jule::Slice<_150640f50_Token> _20717_tokens = _20344_s->_field_tokens.slice(1LL);
	jule::Ref<_1506406d0_WhileKind> _20817_kind = jule::new_struct<_1506406d0_WhileKind>(new( std::nothrow ) _1506406d0_WhileKind());
	if (_20717_tokens.len() > 0LL) {
		_20817_kind->_field_expr=(*this)._field_p->_method_build_expr(_20717_tokens);
	}
	if ((*this)._method_is_last_st()) {
		(*this)._method_push_err(_20417_it->_field_token,jule::Str("invalid syntax", 14));
		return jule::Any(nullptr);
	}
	_20717_tokens=(*this)._method_next()->_field_tokens;
	jule::Slice<_150640f50_Token> _22017_st_tokens = _1507ea360_get_block_expr(_20717_tokens);
	if (_22017_st_tokens.len() > 0LL) {
		jule::Ref<_1507e2370_Stmt> _22221_s = jule::new_struct<_1507e2370_Stmt>(new( std::nothrow ) _1507e2370_Stmt(_22017_st_tokens,_20344_s->_field_terminated));
		_20817_kind->_field_next_token=_22017_st_tokens[0LL];
		_20817_kind->_field_next=(*this)._method_build_st(_22221_s);
	}
	jule::I64 _23017_i = _22017_st_tokens.len();
	jule::Slice<_150640f50_Token> _23117_block_tokens = _150831fa0_range(_23017_i,jule::Str("{", 1),jule::Str("}", 1),_20717_tokens);
	if (_23117_block_tokens == nullptr) {
		(*this)._method_stop();
		(*this)._method_push_err(_20417_it->_field_token,jule::Str("body is not exist", 17));
		(*this)._method_push_suggest(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::Any(nullptr);
	}
	if (_23017_i < _20717_tokens.len()) {
		(*this)._method_push_err(_20717_tokens[static_cast<jule::Int>(_23017_i)],jule::Str("invalid syntax", 14));
	}
	_20417_it->_field_scope=(*this)._method_build_scope(_23117_block_tokens);
	_20417_it->_field_kind=jule::Any(_20817_kind);
	return jule::Any(_20417_it);
}



inline jule::Ref<_1506406d0_WhileKind> _1507e2370_ScopeParser::_method_build_while_iter_kind(jule::Slice<_150640f50_Token> _24844_tokens) {
	return jule::new_struct<_1506406d0_WhileKind>(new( std::nothrow ) _1506406d0_WhileKind((*this)._field_p->_method_build_expr(_24844_tokens),jule::Any(),_150640f50_Token()));
}



inline jule::Slice<jule::Slice<_150640f50_Token>> _1507e2370_ScopeParser::_method_get_range_kind_keys_tokens(jule::Slice<_150640f50_Token> _25449_toks) {
	jule::Slice<jule::Slice<_150640f50_Token>> _25518_vars;
	jule::Slice<_157e34dc0_Log> _25524_errs;
	std::tie(_25518_vars,_25524_errs) = _150831fa0_parts(_25449_toks,8LLU,true);
	(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_25524_errs);
	return _25518_vars;
}



inline jule::Ref<_1506406d0_VarDecl> _1507e2370_ScopeParser::_method_build_range_kind_key(jule::Slice<_150640f50_Token> _26043_tokens) {
	if (_26043_tokens.len() == 0LL) {
		return jule::new_ref<_1506406d0_VarDecl>();
	}
	jule::Ref<_1506406d0_VarDecl> _26417_key = jule::new_struct<_1506406d0_VarDecl>(new( std::nothrow ) _1506406d0_VarDecl(jule::Ref<_1506406d0_ScopeTree>(),_26043_tokens[0LL],jule::Str(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Slice<jule::Ref<_1506406d0_Directive>>(),jule::Ref<_1506406d0_CommentGroup>(),jule::Ref<_1506406d0_TypeDecl>(),jule::Ref<_1506406d0_Expr>()));
	if (_26417_key->_field_token._field_id == 36LLU) {
		_26417_key->_field_mutable=true;
		if (_26043_tokens.len() == 1LL) {
			(*this)._method_push_err(_26417_key->_field_token,jule::Str("invalid syntax", 14));
		}
		_26417_key->_field_token=_26043_tokens[1LL];
	} else if (_26043_tokens.len() > 1LL) {
		(*this)._method_push_err(_26043_tokens[1LL],jule::Str("invalid syntax", 14));
	}
	if (_26417_key->_field_token._field_id != 2LLU) {
		(*this)._method_push_err(_26417_key->_field_token,jule::Str("invalid syntax", 14));
		(*this)._method_push_suggest(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1506406d0_VarDecl>();
	}
	_26417_key->_field_ident=_26417_key->_field_token._field_kind;
	return _26417_key;
}



inline jule::Slice<jule::Ref<_1506406d0_VarDecl>> _1507e2370_ScopeParser::_method_build_range_kind_keys(jule::Slice<jule::Slice<_150640f50_Token>> _28544_parts) {
	jule::Slice<jule::Ref<_1506406d0_VarDecl>> _28617_keys = nullptr;
	{
		auto __julec_range_expr = _28544_parts;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Slice<_150640f50_Token> _1507e2370_tokens = *__julec_range_begin;
			_iter_begin_5675637552:;
			{
				_28617_keys=jule::append(_28617_keys,jule::Slice<jule::Ref<_1506406d0_VarDecl>>({(*this)._method_build_range_kind_key(_1507e2370_tokens)}));
			}
			_iter_next_5675637552:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1507e2370_tokens = *__julec_range_begin; goto _iter_begin_5675637552; }
			_iter_end_5675637552:;
		}
	}
	return _28617_keys;
}



inline void _1507e2370_ScopeParser::_method_setup_range_kind_keys_plain(jule::Ref<_1506406d0_RangeKind> _29350_rng,jule::Slice<_150640f50_Token> _29371_tokens) {
	jule::Slice<jule::Slice<_150640f50_Token>> _29417_key_tokens = (*this)._method_get_range_kind_keys_tokens(_29371_tokens);
	if (_29417_key_tokens.len() == 0LL) {
		return;
	}
	if (_29417_key_tokens.len() > 2LL) {
		(*this)._method_push_err(_29350_rng->_field_in_token,jule::Str("range variables can be maximum two", 34));
	}
	jule::Slice<jule::Ref<_1506406d0_VarDecl>> _30117_keys = (*this)._method_build_range_kind_keys(_29417_key_tokens);
	_29350_rng->_field_key_a=_30117_keys[0LL];
	if (_30117_keys.len() > 1LL) {
		_29350_rng->_field_key_b=_30117_keys[1LL];
	}
}



inline void _1507e2370_ScopeParser::_method_setup_range_kind_keys_explicit(jule::Ref<_1506406d0_RangeKind> _30853_rng,jule::Slice<_150640f50_Token> _30874_tokens) {
	jule::Int _30917_i = 0LL;
	jule::Slice<_150640f50_Token> _31017_rang = _150831fa0_range(_30917_i,jule::Str("(", 1),jule::Str(")", 1),_30874_tokens);
	if (_30917_i < _30874_tokens.len()) {
		(*this)._method_push_err(_30853_rng->_field_in_token,jule::Str("invalid syntax", 14));
	}
	(*this)._method_setup_range_kind_keys_plain(_30853_rng,_31017_rang);
}



inline void _1507e2370_ScopeParser::_method_setup_range_kind_keys(jule::Ref<_1506406d0_RangeKind> _31744_rng,jule::Slice<_150640f50_Token> _31765_tokens) {
	if (_31765_tokens[0LL]._field_id == 3LLU) {
		if (_31765_tokens[0LL]._field_kind != jule::Str("(", 1)) {
			(*this)._method_push_err(_31765_tokens[0LL],jule::Str("invalid syntax", 14));
			return;
		}
		(*this)._method_setup_range_kind_keys_explicit(_31744_rng,_31765_tokens);
		return;
	}
	(*this)._method_setup_range_kind_keys_plain(_31744_rng,_31765_tokens);
}



inline jule::Ref<_1506406d0_RangeKind> _1507e2370_ScopeParser::_method_build_range_iter_kind(jule::Slice<_150640f50_Token> _32944_var_tokens,jule::Slice<_150640f50_Token> _32969_expr_tokens,_150640f50_Token _32991_in_token) {
	jule::Ref<_1506406d0_RangeKind> _33017_rng = jule::new_struct<_1506406d0_RangeKind>(new( std::nothrow ) _1506406d0_RangeKind(_32991_in_token,jule::Ref<_1506406d0_Expr>(),jule::Ref<_1506406d0_VarDecl>(),jule::Ref<_1506406d0_VarDecl>()));
	if (_32969_expr_tokens.len() == 0LL) {
		(*this)._method_push_err(_33017_rng->_field_in_token,jule::Str("expression missing", 18));
		return _33017_rng;
	}
	_33017_rng->_field_expr=(*this)._field_p->_method_build_expr(_32969_expr_tokens);
	if (_32944_var_tokens.len() > 0LL) {
		(*this)._method_setup_range_kind_keys(_33017_rng,_32944_var_tokens);
	}
	return _33017_rng;
}



inline jule::Any _1507e2370_ScopeParser::_method_build_common_iter_kind(jule::Slice<_150640f50_Token> _34445_tokens,_150640f50_Token _34462_err_tok) {
	jule::Int _34517_brace_n = 0LL;
	{
		auto __julec_range_expr = _34445_tokens;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _1507e2370_i = 0;
			_150640f50_Token _1507e2370_tok = *__julec_range_begin;
			_iter_begin_5675683168:;
			{
				if (_1507e2370_tok._field_id == 3LLU) {
					{
						auto _match_expr{ _1507e2370_tok._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_5675687488; }
						_case_begin_5675687488:;
						{
							(_34517_brace_n)++;
							goto _iter_next_5675683168;
						}
						goto _match_end_5675685968;
						_case_end_5675687488:;
						_case_begin_5675686656:;
						{
							(_34517_brace_n)--;
						}
						goto _match_end_5675685968;
						_case_end_5675686656:;
						_match_end_5675685968:;
					}
				}
				if (_34517_brace_n != 0LL) {
					goto _iter_next_5675683168;
				}
				{
					auto _match_expr{ _1507e2370_tok._field_id };
					if (!((15LLU) == _match_expr)) { goto _case_end_5675688928; }
					_case_begin_5675688928:;
					{
						jule::Slice<_150640f50_Token> _36425_decl_tokens = _34445_tokens.slice(0LL,static_cast<jule::Int>(_1507e2370_i));
						jule::Slice<_150640f50_Token> _36525_expr_tokens = _34445_tokens.slice(static_cast<jule::Int>(_1507e2370_i + 1LL));
						return jule::Any((*this)._method_build_range_iter_kind(_36425_decl_tokens,_36525_expr_tokens,_1507e2370_tok));
					}
					goto _match_end_5675688640;
					_case_end_5675688928:;
					_match_end_5675688640:;
				}
			}
			_iter_next_5675683168:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_1507e2370_i; _1507e2370_tok = *__julec_range_begin; goto _iter_begin_5675683168; }
			_iter_end_5675683168:;
		}
	}
	return jule::Any((*this)._method_build_while_iter_kind(_34445_tokens));
}



inline jule::Any _1507e2370_ScopeParser::_method_build_common_iter(jule::Slice<_150640f50_Token> _37240_tokens) {
	jule::Ref<_1506406d0_Iter> _37317_it = jule::new_struct<_1506406d0_Iter>(new( std::nothrow ) _1506406d0_Iter(_37240_tokens[0LL],jule::Any(),jule::Ref<_1506406d0_ScopeTree>()));
	_37240_tokens=_37240_tokens.slice(1LL);
	if (_37240_tokens.len() == 0LL) {
		(*this)._method_stop();
		(*this)._method_push_err(_37317_it->_field_token,jule::Str("body is not exist", 17));
		(*this)._method_push_suggest(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::Any(nullptr);
	}
	jule::Slice<_150640f50_Token> _38317_expr_tokens = _1507ea360_get_block_expr(_37240_tokens);
	if (_38317_expr_tokens.len() > 0LL) {
		_37317_it->_field_kind=(*this)._method_build_common_iter_kind(_38317_expr_tokens,_37317_it->_field_token);
	}
	jule::I64 _38717_i = _38317_expr_tokens.len();
	jule::Slice<_150640f50_Token> _38817_scope_tokens = _150831fa0_range(_38717_i,jule::Str("{", 1),jule::Str("}", 1),_37240_tokens);
	if (_38817_scope_tokens == nullptr) {
		(*this)._method_stop();
		(*this)._method_push_err(_37317_it->_field_token,jule::Str("body is not exist", 17));
		(*this)._method_push_suggest(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::Any(nullptr);
	}
	if (_38717_i < _37240_tokens.len()) {
		(*this)._method_push_err(_37240_tokens[static_cast<jule::Int>(_38717_i)],jule::Str("invalid syntax", 14));
	}
	_37317_it->_field_scope=(*this)._method_build_scope(_38817_scope_tokens);
	return jule::Any(_37317_it);
}



inline jule::Any _1507e2370_ScopeParser::_method_buid_iter_st(jule::Ref<_1507e2370_Stmt> _40235_st) {
	if (_40235_st->_field_terminated) {
		return (*this)._method_build_while_next_iter(_40235_st);
	}
	return (*this)._method_build_common_iter(_40235_st->_field_tokens);
}



inline jule::Any _1507e2370_ScopeParser::_method_build_break_st(jule::Slice<_150640f50_Token> _40937_tokens) {
	jule::Ref<_1506406d0_BreakSt> _41017_brk = jule::new_struct<_1506406d0_BreakSt>(new( std::nothrow ) _1506406d0_BreakSt(_40937_tokens[0LL],_150640f50_Token()));
	if (_40937_tokens.len() > 1LL) {
		if (_40937_tokens[1LL]._field_id != 2LLU) {
			(*this)._method_push_err(_40937_tokens[1LL],jule::Str("invalid syntax", 14));
			(*this)._method_push_suggest(jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>({}));
		} else {
			_41017_brk->_field_label=_40937_tokens[1LL];
			if (_40937_tokens.len() > 2LL) {
				(*this)._method_push_err(_40937_tokens[1LL],jule::Str("invalid syntax", 14));
			}
		}
	}
	return jule::Any(_41017_brk);
}



inline jule::Any _1507e2370_ScopeParser::_method_build_cont_st(jule::Slice<_150640f50_Token> _42736_tokens) {
	jule::Ref<_1506406d0_ContSt> _42817_cont = jule::new_struct<_1506406d0_ContSt>(new( std::nothrow ) _1506406d0_ContSt(_42736_tokens[0LL],_150640f50_Token()));
	if (_42736_tokens.len() > 1LL) {
		if (_42736_tokens[1LL]._field_id != 2LLU) {
			(*this)._method_push_err(_42736_tokens[1LL],jule::Str("invalid syntax", 14));
			(*this)._method_push_suggest(jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>({}));
		} else {
			_42817_cont->_field_label=_42736_tokens[1LL];
			if (_42736_tokens.len() > 2LL) {
				(*this)._method_push_err(_42736_tokens[1LL],jule::Str("invalid syntax", 14));
			}
		}
	}
	return jule::Any(_42817_cont);
}



inline jule::Ref<_1506406d0_If> _1507e2370_ScopeParser::_method_build_if(jule::Slice<_150640f50_Token>& _44532_tokens) {
	jule::Ref<_1506406d0_If> _44617_model = jule::new_struct<_1506406d0_If>(new( std::nothrow ) _1506406d0_If(_44532_tokens[0LL],jule::Ref<_1506406d0_Expr>(),jule::Ref<_1506406d0_ScopeTree>()));
	_44532_tokens=_44532_tokens.slice(1LL);
	jule::Slice<_150640f50_Token> _45017_expr_tokens = _1507ea360_get_block_expr(_44532_tokens);
	jule::Int _45117_i = 0LL;
	if (_45017_expr_tokens.len() == 0LL) {
		(*this)._method_push_err(_44617_model->_field_token,jule::Str("expression missing", 18));
	} else {
		_45117_i=static_cast<jule::I64>(_45017_expr_tokens.len());
	}
	jule::Slice<_150640f50_Token> _45717_scope_tokens = _150831fa0_range(_45117_i,jule::Str("{", 1),jule::Str("}", 1),_44532_tokens);
	if (_45717_scope_tokens == nullptr) {
		(*this)._method_stop();
		(*this)._method_push_err(_44617_model->_field_token,jule::Str("body is not exist", 17));
		(*this)._method_push_suggest(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1506406d0_If>();
	}
	if (_45117_i < _44532_tokens.len()) {
		if (_44532_tokens[static_cast<jule::Int>(_45117_i)]._field_id == 17LLU) {
			_44532_tokens=_44532_tokens.slice(static_cast<jule::Int>(_45117_i));
		} else {
			(*this)._method_push_err(_44532_tokens[static_cast<jule::Int>(_45117_i)],jule::Str("invalid syntax", 14));
			_44532_tokens=nullptr;
		}
	}
	_44617_model->_field_expr=(*this)._field_p->_method_build_expr(_45017_expr_tokens);
	_44617_model->_field_scope=(*this)._method_build_scope(_45717_scope_tokens);
	return _44617_model;
}



inline jule::Ref<_1506406d0_Else> _1507e2370_ScopeParser::_method_build_else(jule::Slice<_150640f50_Token> _47733_tokens) {
	jule::Ref<_1506406d0_Else> _47817_els = jule::new_struct<_1506406d0_Else>(new( std::nothrow ) _1506406d0_Else(_47733_tokens[0LL],jule::Ref<_1506406d0_ScopeTree>()));
	_47733_tokens=_47733_tokens.slice(1LL);
	jule::Int _48217_i = 0LL;
	jule::Slice<_150640f50_Token> _48317_scope_tokens = _150831fa0_range(_48217_i,jule::Str("{", 1),jule::Str("}", 1),_47733_tokens);
	if (_48317_scope_tokens == nullptr) {
		if (_48217_i < _47733_tokens.len()) {
			(*this)._method_push_err(_47817_els->_field_token,jule::Str("else's cannot have any expression", 33));
		} else {
			(*this)._method_stop();
			(*this)._method_push_err(_47817_els->_field_token,jule::Str("body is not exist", 17));
			(*this)._method_push_suggest(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		}
		return jule::new_ref<_1506406d0_Else>();
	}
	if (_48217_i < _47733_tokens.len()) {
		(*this)._method_push_err(_47733_tokens[static_cast<jule::Int>(_48217_i)],jule::Str("invalid syntax", 14));
	}
	_47817_els->_field_scope=(*this)._method_build_scope(_48317_scope_tokens);
	return _47817_els;
}



inline jule::Any _1507e2370_ScopeParser::_method_build_if_else_chain(jule::Slice<_150640f50_Token> _50142_tokens) {
	jule::Ref<_1506406d0_Conditional> _50217_chain = jule::new_struct<_1506406d0_Conditional>(new( std::nothrow ) _1506406d0_Conditional((*this)._method_build_if(_50142_tokens),jule::Slice<jule::Ref<_1506406d0_If>>(),jule::Ref<_1506406d0_Else>()));
	if ((!(jule::real(_50217_chain->_field_head)))) {
		return jule::Any(nullptr);
	}
	_iter_begin_5675785296:;
	if (!(_50142_tokens != nullptr)) { goto _iter_end_5675785296; }
	{
		if (_50142_tokens[0LL]._field_id != 17LLU) {
			goto _iter_end_5675785296;
		}
		if ((_50142_tokens.len() > 1LL) && (_50142_tokens[1LL]._field_id == 16LLU)) {
			_50142_tokens=_50142_tokens.slice(1LL);
			jule::Ref<_1506406d0_If> _51425_elif = (*this)._method_build_if(_50142_tokens);
			_50217_chain->_field_tail=jule::append(_50217_chain->_field_tail,jule::Slice<jule::Ref<_1506406d0_If>>({_51425_elif}));
			goto _iter_next_5675785296;
		}
		_50217_chain->_field_default=(*this)._method_build_else(_50142_tokens);
		goto _iter_end_5675785296;
	}
	_iter_next_5675785296:;
	goto _iter_begin_5675785296;
	_iter_end_5675785296:;
	return jule::Any(_50217_chain);
}



inline jule::Any _1507e2370_ScopeParser::_method_build_comment_st(_150640f50_Token _52435_token) {
	return jule::Any(_150831fa0_build_comment(_52435_token));
}



inline jule::Any _1507e2370_ScopeParser::_method_build_call_st(jule::Slice<_150640f50_Token> _52836_tokens) {
	_150640f50_Token _52913_token = _52836_tokens[0LL];
	if (_1507ea360_is_fn_call(_52836_tokens) == nullptr) {
		(*this)._method_push_err(_52913_token,jule::Str("statement must have function call expression", 44));
	}
	jule::Ref<_1506406d0_Expr> _53317_expr = (*this)._field_p->_method_build_expr(_52836_tokens);
	if (jule::real(_53317_expr) && (!(_53317_expr->_method_is_fn_call()))) {
		(*this)._method_push_err(_52913_token,jule::Str("invalid syntax", 14));
	}
	return jule::Any(_53317_expr);
}



inline jule::Any _1507e2370_ScopeParser::_method_build_co_call_st(jule::Slice<_150640f50_Token> _54039_tokens) {
	_54039_tokens=_54039_tokens.slice(1LL);
	jule::Any _54217_cc = (*this)._method_build_call_st(_54039_tokens);
	_54217_cc.operator jule::Ref<_1506406d0_Expr>()->_field_kind.operator jule::Ref<_1506406d0_FnCallExpr>()->_field_concurrent=true;
	return _54217_cc;
}



inline jule::Any _1507e2370_ScopeParser::_method_build_goto_st(jule::Slice<_150640f50_Token> _54736_tokens) {
	jule::Ref<_1506406d0_GotoSt> _54817_gt = jule::new_struct<_1506406d0_GotoSt>(new( std::nothrow ) _1506406d0_GotoSt(_54736_tokens[0LL],_150640f50_Token()));
	if (_54736_tokens.len() == 1LL) {
		(*this)._method_push_err(_54817_gt->_field_token,jule::Str("missing label identifier for goto statement", 43));
		return jule::Any(nullptr);
	} else if (_54736_tokens.len() > 2LL) {
		(*this)._method_push_err(_54736_tokens[2LL],jule::Str("invalid syntax", 14));
	}
	_150640f50_Token _55717_ident_token = _54736_tokens[1LL];
	if (_55717_ident_token._field_id != 2LLU) {
		(*this)._method_push_err(_55717_ident_token,jule::Str("invalid syntax", 14));
		(*this)._method_push_suggest(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
		return jule::Any(_54817_gt);
	}
	_54817_gt->_field_label=_55717_ident_token;
	return jule::Any(_54817_gt);
}



inline jule::Any _1507e2370_ScopeParser::_method_build_fall_st(jule::Slice<_150640f50_Token> _56736_tokens) {
	jule::Ref<_1506406d0_FallSt> _56817_fll = jule::new_struct<_1506406d0_FallSt>(new( std::nothrow ) _1506406d0_FallSt(_56736_tokens[0LL]));
	if (_56736_tokens.len() > 1LL) {
		(*this)._method_push_err(_56736_tokens[1LL],jule::Str("invalid syntax", 14));
	}
	return jule::Any(_56817_fll);
}



inline jule::Any _1507e2370_ScopeParser::_method_build_type_alias_st(jule::Slice<_150640f50_Token> _57742_tokens) {
	jule::Ref<_1506406d0_TypeAliasDecl> _57817_tad = (*this)._field_p->_method_build_type_alias_decl(_57742_tokens);
	_57817_tad->_field_scope=(*this)._field_s;
	return jule::Any(_57817_tad);
}



inline void _1507e2370_ScopeParser::_method_push_case_expr(jule::Slice<_150640f50_Token> _58337_tokens,_150640f50_Token _58358_token,jule::Bool _5849_type_match,jule::Slice<jule::Ref<_1506406d0_Expr>>& _58432_exprs) {
	if (_58337_tokens.len() == 0LL) {
		return;
	}
	if (_5849_type_match) {
		jule::Int _59021_i = 0LL;
		jule::Ref<_1506406d0_TypeDecl> _59122_t;
		jule::Bool _59125_ok;
		std::tie(_59122_t,_59125_ok) = (*this)._field_p->_method_build_type(_58337_tokens,(&(_59021_i)),true);
		if (_59125_ok) {
			_58432_exprs=jule::append(_58432_exprs,jule::Slice<jule::Ref<_1506406d0_Expr>>({jule::new_struct<_1506406d0_Expr>(new( std::nothrow ) _1506406d0_Expr(_58358_token,jule::Any(_59122_t)))}));
		}
		if (_59021_i < _58337_tokens.len()) {
			(*this)._method_push_err(_58337_tokens[static_cast<jule::Int>(_59021_i)],jule::Str("invalid syntax", 14));
		}
		return;
	}
	_58432_exprs=jule::append(_58432_exprs,jule::Slice<jule::Ref<_1506406d0_Expr>>({(*this)._field_p->_method_build_expr(_58337_tokens)}));
}



inline jule::Slice<jule::Ref<_1506406d0_Expr>> _1507e2370_ScopeParser::_method_build_case_exprs(jule::Slice<_150640f50_Token>& _60640_tokens,jule::Bool _60657_type_match) {
	jule::Slice<jule::Ref<_1506406d0_Expr>> _60717_exprs = nullptr;
	jule::Int _60917_brace_n = 0LL;
	jule::Int _61017_j = 0LL;
	{
		auto __julec_range_expr = _60640_tokens;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _1507e2370_i = 0;
			_150640f50_Token _1507e2370_tok = *__julec_range_begin;
			_iter_begin_5675861152:;
			{
				if (_1507e2370_tok._field_id == 3LLU) {
					{
						auto _match_expr{ _1507e2370_tok._field_kind };
						if (!((jule::Str("(", 1)) == _match_expr || (jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr)) { goto _case_end_5675865520; }
						_case_begin_5675865520:;
						{
							(_60917_brace_n)++;
						}
						goto _match_end_5675864000;
						_case_end_5675865520:;
						_case_begin_5675864688:;
						{
							(_60917_brace_n)--;
						}
						goto _match_end_5675864000;
						_case_end_5675864688:;
						_match_end_5675864000:;
					}
					goto _iter_next_5675861152;
				} else if (_60917_brace_n != 0LL) {
					goto _iter_next_5675861152;
				}
				{
					if (!(((_1507e2370_tok._field_id == 7LLU) && (_1507e2370_tok._field_kind == jule::Str("|", 1))))) { goto _case_end_5675866784; }
					_case_begin_5675866784:;
					{
						(*this)._method_push_case_expr(_60640_tokens.slice(static_cast<jule::Int>(_61017_j),static_cast<jule::Int>(_1507e2370_i)),_1507e2370_tok,_60657_type_match,_60717_exprs);
						_61017_j=static_cast<jule::Int>(_1507e2370_i + 1LL);
					}
					goto _match_end_5675864928;
					_case_end_5675866784:;
					if (!((_1507e2370_tok._field_id == 11LLU))) { goto _case_end_5675866896; }
					_case_begin_5675866896:;
					{
						(*this)._method_push_case_expr(_60640_tokens.slice(static_cast<jule::Int>(_61017_j),static_cast<jule::Int>(_1507e2370_i)),_1507e2370_tok,_60657_type_match,_60717_exprs);
						_60640_tokens=_60640_tokens.slice(static_cast<jule::Int>(_1507e2370_i + 1LL));
						return _60717_exprs;
					}
					goto _match_end_5675864928;
					_case_end_5675866896:;
					_match_end_5675864928:;
				}
			}
			_iter_next_5675861152:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_1507e2370_i; _1507e2370_tok = *__julec_range_begin; goto _iter_begin_5675861152; }
			_iter_end_5675861152:;
		}
	}
	(*this)._method_push_err(_60640_tokens[0LL],jule::Str("invalid syntax", 14));
	_60640_tokens=nullptr;
	return nullptr;
}



inline jule::Ref<_1506406d0_ScopeTree> _1507e2370_ScopeParser::_method_build_case_scope(jule::Slice<_150640f50_Token>& _64240_tokens) {
	jule::Int _64317_n = 0LL;
	_iter_begin_5675879984:;
	{
		jule::Int _64521_i = 0LL;
		jule::Slice<_150640f50_Token> _64622_next;
		std::tie(_64622_next,std::ignore) = _1507e2370_skip_st(_64521_i,_64240_tokens.slice(static_cast<jule::Int>(_64317_n)));
		if (_64622_next.len() == 0LL) {
			goto _iter_end_5675879984;
		}
		_150640f50_Token _65017_tok = _64622_next[0LL];
		if ((_65017_tok._field_id != 7LLU) || (_65017_tok._field_kind != jule::Str("|", 1))) {
			_64317_n+=static_cast<jule::I64>(_64622_next.len());
			goto _iter_next_5675879984;
		}
		jule::Ref<_1506406d0_ScopeTree> _65521_scope = (*this)._method_build_scope(_64240_tokens.slice(0LL,static_cast<jule::Int>(_64317_n)));
		_64240_tokens=_64240_tokens.slice(static_cast<jule::Int>(_64317_n));
		return _65521_scope;
	}
	_iter_next_5675879984:;
	goto _iter_begin_5675879984;
	_iter_end_5675879984:;
	jule::Ref<_1506406d0_ScopeTree> _65917_scope = (*this)._method_build_scope(_64240_tokens);
	_64240_tokens=nullptr;
	return _65917_scope;
}



inline std::tuple<jule::Ref<_1506406d0_Case>,jule::Bool> _1507e2370_ScopeParser::_method_build_case(jule::Slice<_150640f50_Token>& _66434_tokens,jule::Bool _66451_type_match) {
	jule::Ref<_1506406d0_Case> _66517_c = jule::new_struct<_1506406d0_Case>(new( std::nothrow ) _1506406d0_Case(_66434_tokens[0LL],jule::Ref<_1506406d0_ScopeTree>(),jule::Slice<jule::Ref<_1506406d0_Expr>>()));
	_66434_tokens=_66434_tokens.slice(1LL);
	_66517_c->_field_exprs=(*this)._method_build_case_exprs(_66434_tokens,_66451_type_match);
	_66517_c->_field_scope=(*this)._method_build_case_scope(_66434_tokens);
	jule::Bool _67113_is_default = _66517_c->_field_exprs.len() == 0LL;
	return std::make_tuple(_66517_c,_67113_is_default);
}



inline std::tuple<jule::Slice<jule::Ref<_1506406d0_Case>>,jule::Ref<_1506406d0_Else>> _1507e2370_ScopeParser::_method_build_cases(jule::Slice<_150640f50_Token> _67534_tokens,jule::Bool _67551_type_match) {
	jule::Slice<jule::Ref<_1506406d0_Case>> _67617_cases = nullptr;
	jule::Ref<_1506406d0_Else> _67717_def = jule::new_ref<_1506406d0_Else>();
	_iter_begin_5675910080:;
	if (!(_67534_tokens.len() > 0LL)) { goto _iter_end_5675910080; }
	{
		_150640f50_Token _67921_tok = _67534_tokens[0LL];
		if (_67921_tok._field_id == 18LLU) {
			_67534_tokens=_67534_tokens.slice(1LL);
			goto _iter_next_5675910080;
		}
		if ((_67921_tok._field_id != 7LLU) || (_67921_tok._field_kind != jule::Str("|", 1))) {
			(*this)._method_push_err(_67921_tok,jule::Str("invalid syntax", 14));
			goto _iter_end_5675910080;
		}
		jule::Ref<_1506406d0_Case> _69022_c;
		jule::Bool _69025_is_default;
		std::tie(_69022_c,_69025_is_default) = (*this)._method_build_case(_67534_tokens,_67551_type_match);
		if (_69025_is_default) {
			_69022_c->_field_token=_67921_tok;
			if ((!(jule::real(_67717_def)))) {
				_67717_def=jule::new_struct<_1506406d0_Else>(new( std::nothrow ) _1506406d0_Else(_69022_c->_field_token,_69022_c->_field_scope));
			} else {
				(*this)._method_push_err(_67921_tok,jule::Str("invalid syntax", 14));
			}
		} else {
			_67617_cases=jule::append(_67617_cases,jule::Slice<jule::Ref<_1506406d0_Case>>({_69022_c}));
		}
	}
	_iter_next_5675910080:;
	goto _iter_begin_5675910080;
	_iter_end_5675910080:;
	return std::make_tuple(_67617_cases,_67717_def);
}



inline jule::Ref<_1506406d0_MatchCase> _1507e2370_ScopeParser::_method_build_match_case(jule::Slice<_150640f50_Token> _70839_tokens) {
	jule::Ref<_1506406d0_MatchCase> _70917_m = jule::new_struct<_1506406d0_MatchCase>(new( std::nothrow ) _1506406d0_MatchCase(_70839_tokens[0LL],jule::Bool(),jule::Ref<_1506406d0_Expr>(),jule::Slice<jule::Ref<_1506406d0_Case>>(),jule::Ref<_1506406d0_Else>()));
	_70839_tokens=_70839_tokens.slice(1LL);
	if ((_70839_tokens.len() > 0LL) && (_70839_tokens[0LL]._field_id == 10LLU)) {
		_70917_m->_field_type_match=true;
		_70839_tokens=_70839_tokens.slice(1LL);
	}
	jule::Slice<_150640f50_Token> _71917_expr_tokens = _1507ea360_get_block_expr(_70839_tokens);
	if (_71917_expr_tokens.len() > 0LL) {
		_70917_m->_field_expr=(*this)._field_p->_method_build_expr(_71917_expr_tokens);
	} else if (_70917_m->_field_type_match) {
		(*this)._method_push_err(_70917_m->_field_token,jule::Str("expression missing", 18));
	}
	jule::I64 _72617_i = _71917_expr_tokens.len();
	jule::Slice<_150640f50_Token> _72717_block_toks = _150831fa0_range(_72617_i,jule::Str("{", 1),jule::Str("}", 1),_70839_tokens);
	if (_72717_block_toks == nullptr) {
		(*this)._method_stop();
		(*this)._method_push_err(_70917_m->_field_token,jule::Str("body is not exist", 17));
		(*this)._method_push_suggest(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1506406d0_MatchCase>();
	}
	std::tie(_70917_m->_field_cases,_70917_m->_field_default) = (*this)._method_build_cases(_72717_block_toks,_70917_m->_field_type_match);
	return _70917_m;
}



inline jule::Ref<_1506406d0_ScopeTree> _1507e2370_ScopeParser::_method_build_scope_st(jule::Slice<_150640f50_Token> _73937_tokens) {
	jule::Bool _74017_is_unsafe = false;
	jule::Bool _74117_is_deferred = false;
	_150640f50_Token _74217_token = _73937_tokens[0LL];
	if (_74217_token._field_id == 35LLU) {
		_74017_is_unsafe=true;
		_73937_tokens=_73937_tokens.slice(1LL);
		if (_73937_tokens.len() == 0LL) {
			(*this)._method_push_err(_74217_token,jule::Str("invalid syntax", 14));
			return jule::new_ref<_1506406d0_ScopeTree>();
		}
		_74217_token=_73937_tokens[0LL];
		if (_74217_token._field_id == 37LLU) {
			_74117_is_deferred=true;
			_73937_tokens=_73937_tokens.slice(1LL);
			if (_73937_tokens.len() == 0LL) {
				(*this)._method_push_err(_74217_token,jule::Str("invalid syntax", 14));
				return jule::new_ref<_1506406d0_ScopeTree>();
			}
		}
	} else if (_74217_token._field_id == 37LLU) {
		_74117_is_deferred=true;
		_73937_tokens=_73937_tokens.slice(1LL);
		if (_73937_tokens.len() == 0LL) {
			(*this)._method_push_err(_74217_token,jule::Str("invalid syntax", 14));
			return jule::new_ref<_1506406d0_ScopeTree>();
		}
	}
	jule::Int _76817_i = 0LL;
	jule::Slice<_150640f50_Token> _76917_scope_tokens = _150831fa0_range(_76817_i,jule::Str("{", 1),jule::Str("}", 1),_73937_tokens);
	if (_76917_scope_tokens == nullptr) {
		(*this)._method_push_err(_74217_token,jule::Str("invalid syntax", 14));
		return jule::new_ref<_1506406d0_ScopeTree>();
	} else if (_76817_i < _73937_tokens.len()) {
		(*this)._method_push_err(_73937_tokens[static_cast<jule::Int>(_76817_i)],jule::Str("invalid syntax", 14));
	}
	jule::Ref<_1506406d0_ScopeTree> _77617_scope = (*this)._method_build_scope(_76917_scope_tokens);
	_77617_scope->_field_unsafety=_74017_is_unsafe;
	_77617_scope->_field_deferred=_74117_is_deferred;
	return _77617_scope;
}



inline jule::Ref<_1506406d0_LabelSt> _1507e2370_ScopeParser::_method_build_label_st(jule::Slice<_150640f50_Token> _78237_tokens) {
	jule::Ref<_1506406d0_LabelSt> _78317_lbl = jule::new_struct<_1506406d0_LabelSt>(new( std::nothrow ) _1506406d0_LabelSt(_78237_tokens[0LL],_78237_tokens[0LL]._field_kind));
	if (_78237_tokens.len() > 2LL) {
		_78237_tokens=_78237_tokens.slice(2LL);
		(*this)._method_insert_as_next(_78237_tokens);
	}
	return _78317_lbl;
}



inline std::tuple<jule::Any,jule::Bool> _1507e2370_ScopeParser::_method_build_id_st(jule::Slice<_150640f50_Token> _79734_tokens) {
	jule::Bool _79763_ok = jule::Bool();
	if (_79734_tokens.len() == 1LL) {
		return std::make_tuple(jule::Any(),_79763_ok);
	}
	_150640f50_Token _80217_token = _79734_tokens[1LL];
	{
		auto _match_expr{ _80217_token._field_id };
		if (!((11LLU) == _match_expr)) { goto _case_end_5675997680; }
		_case_begin_5675997680:;
		{
			_79763_ok = true;
			return std::make_tuple(jule::Any((*this)._method_build_label_st(_79734_tokens)),_79763_ok);
		}
		goto _match_end_5675997072;
		_case_end_5675997680:;
		_match_end_5675997072:;
	}
	return std::make_tuple(jule::Any(),_79763_ok);
}



inline jule::Ref<_1507eb940_AssignInfo> _1507e2370_ScopeParser::_method_build_assign_info(jule::Slice<_150640f50_Token> _81140_tokens) {
	jule::Ref<_1507eb940_AssignInfo> _81217_info = jule::new_struct<_1507eb940_AssignInfo>(new( std::nothrow ) _1507eb940_AssignInfo(jule::Slice<_150640f50_Token>(),jule::Slice<_150640f50_Token>(),_150640f50_Token(),true));
	jule::Int _81517_brace_n = 0LL;
	{
		auto __julec_range_expr = _81140_tokens;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _1507e2370_i = 0;
			_150640f50_Token _1507e2370_token = *__julec_range_begin;
			_iter_begin_5676007408:;
			{
				if (_1507e2370_token._field_id == 3LLU) {
					{
						auto _match_expr{ _1507e2370_token._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_5676011856; }
						_case_begin_5676011856:;
						{
							(_81517_brace_n)++;
						}
						goto _match_end_5676010336;
						_case_end_5676011856:;
						_case_begin_5676011024:;
						{
							(_81517_brace_n)--;
						}
						goto _match_end_5676010336;
						_case_end_5676011024:;
						_match_end_5676010336:;
					}
				}
				{
					if (!((_81517_brace_n > 0LL))) { goto _case_end_5676011264; }
					_case_begin_5676011264:;
					{
						goto _iter_next_5676007408;
					}
					goto _match_end_5676011504;
					_case_end_5676011264:;
					if (!((_1507e2370_token._field_id != 7LLU))) { goto _case_end_5676012912; }
					_case_begin_5676012912:;
					{
						goto _iter_next_5676007408;
					}
					goto _match_end_5676011504;
					_case_end_5676012912:;
					if (!(((!(_150640f50_is_assign_op(_1507e2370_token._field_kind)))))) { goto _case_end_5676013024; }
					_case_begin_5676013024:;
					{
						goto _iter_next_5676007408;
					}
					goto _match_end_5676011504;
					_case_end_5676013024:;
					_match_end_5676011504:;
				}
				_81217_info->_field_l=_81140_tokens.slice(0LL,static_cast<jule::Int>(_1507e2370_i));
				if (_81217_info->_field_l.len() == 0LL) {
					_81217_info->_field_ok=false;
				}
				_81217_info->_field_setter=_1507e2370_token;
				if ((_1507e2370_i + 1LL) >= _81140_tokens.len()) {
					_81217_info->_field_r=nullptr;
					_81217_info->_field_ok=_150640f50_is_postfix_op(_81217_info->_field_setter._field_kind);
					goto _iter_end_5676007408;
				}
				_81217_info->_field_r=_81140_tokens.slice(static_cast<jule::Int>(_1507e2370_i + 1LL));
				if (_150640f50_is_postfix_op(_81217_info->_field_setter._field_kind)) {
					if (_81217_info->_field_r.len() > 0LL) {
						(*this)._method_push_err(_81217_info->_field_r[0LL],jule::Str("invalid syntax", 14));
						_81217_info->_field_r=nullptr;
					}
				}
				goto _iter_end_5676007408;
			}
			_iter_next_5676007408:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_1507e2370_i; _1507e2370_token = *__julec_range_begin; goto _iter_begin_5676007408; }
			_iter_end_5676007408:;
		}
	}
	return _81217_info;
}



inline jule::Ref<_1506406d0_AssignLeft> _1507e2370_ScopeParser::_method_build_assign_l(jule::Slice<_150640f50_Token> _85837_tokens) {
	jule::Ref<_1506406d0_AssignLeft> _85917_l = jule::new_struct<_1506406d0_AssignLeft>(new( std::nothrow ) _1506406d0_AssignLeft(_85837_tokens[0LL],jule::Bool(),jule::Bool(),jule::Str(),jule::Ref<_1506406d0_Expr>()));
	if (_85837_tokens[0LL]._field_id == 2LLU) {
		_85917_l->_field_ident=_85917_l->_field_token._field_kind;
	}
	_85917_l->_field_expr=(*this)._field_p->_method_build_expr(_85837_tokens);
	return _85917_l;
}



inline jule::Slice<jule::Ref<_1506406d0_AssignLeft>> _1507e2370_ScopeParser::_method_build_assign_ls(jule::Slice<jule::Slice<_150640f50_Token>> _87138_parts) {
	jule::Slice<jule::Ref<_1506406d0_AssignLeft>> _87217_lefts = nullptr;
	{
		auto __julec_range_expr = _87138_parts;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Slice<_150640f50_Token> _1507e2370_part = *__julec_range_begin;
			_iter_begin_5676038256:;
			{
				jule::Ref<_1506406d0_AssignLeft> _87421_l = (*this)._method_build_assign_l(_1507e2370_part);
				_87217_lefts=jule::append(_87217_lefts,jule::Slice<jule::Ref<_1506406d0_AssignLeft>>({_87421_l}));
			}
			_iter_next_5676038256:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1507e2370_part = *__julec_range_begin; goto _iter_begin_5676038256; }
			_iter_end_5676038256:;
		}
	}
	return _87217_lefts;
}



inline std::tuple<jule::Ref<_1506406d0_AssignSt>,jule::Bool> _1507e2370_ScopeParser::_method_build_plain_assign(jule::Slice<_150640f50_Token> _88141_tokens) {
	jule::Ref<_1507eb940_AssignInfo> _88217_info = (*this)._method_build_assign_info(_88141_tokens);
	if ((!(_88217_info->_field_ok))) {
		return std::make_tuple(jule::new_ref<_1506406d0_AssignSt>(),false);
	}
	jule::Ref<_1506406d0_AssignSt> _88717_assign = jule::new_struct<_1506406d0_AssignSt>(new( std::nothrow ) _1506406d0_AssignSt(jule::Bool(),_88217_info->_field_setter,jule::Slice<jule::Ref<_1506406d0_AssignLeft>>(),jule::Ref<_1506406d0_Expr>()));
	jule::Slice<jule::Slice<_150640f50_Token>> _89118_parts;
	jule::Slice<_157e34dc0_Log> _89125_errs;
	std::tie(_89118_parts,_89125_errs) = _150831fa0_parts(_88217_info->_field_l,8LLU,true);
	if (_89125_errs.len() > 0LL) {
		(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_89125_errs);
		return std::make_tuple(jule::new_ref<_1506406d0_AssignSt>(),false);
	}
	_88717_assign->_field_left=(*this)._method_build_assign_ls(_89118_parts);
	if (_88217_info->_field_r != nullptr) {
		_88717_assign->_field_right=(*this)._field_p->_method_build_expr(_88217_info->_field_r);
	}
	return std::make_tuple(_88717_assign,true);
}



inline std::tuple<jule::Ref<_1506406d0_AssignSt>,jule::Bool> _1507e2370_ScopeParser::_method_build_decl_assign(jule::Slice<_150640f50_Token> _90540_tokens) {
	if (_90540_tokens.len() < 1LL) {
		return std::make_tuple(jule::new_ref<_1506406d0_AssignSt>(),false);
	}
	_90540_tokens=_90540_tokens.slice(1LL);
	_150640f50_Token _91113_token = _90540_tokens[0LL];
	if ((_91113_token._field_id != 3LLU) || (_91113_token._field_kind != jule::Str("(", 1))) {
		return std::make_tuple(jule::new_ref<_1506406d0_AssignSt>(),false);
	}
	jule::Ref<_1506406d0_AssignSt> _91617_assign = jule::new_struct<_1506406d0_AssignSt>(new( std::nothrow ) _1506406d0_AssignSt(true,_150640f50_Token(),jule::Slice<jule::Ref<_1506406d0_AssignLeft>>(),jule::Ref<_1506406d0_Expr>()));
	jule::Int _92017_i = 0LL;
	jule::Slice<_150640f50_Token> _92117_rang = _150831fa0_range(_92017_i,jule::Str("(", 1),jule::Str(")", 1),_90540_tokens);
	if (_92117_rang == nullptr) {
		(*this)._method_push_err(_91113_token,jule::Str("invalid syntax", 14));
		return std::make_tuple(jule::new_ref<_1506406d0_AssignSt>(),false);
	} else if ((_92017_i + 1LL) < _90540_tokens.len()) {
		_91617_assign->_field_setter=_90540_tokens[static_cast<jule::Int>(_92017_i)];
		(_92017_i)++;
		_91617_assign->_field_right=(*this)._field_p->_method_build_expr(_90540_tokens.slice(static_cast<jule::Int>(_92017_i)));
	}
	jule::Slice<jule::Slice<_150640f50_Token>> _93218_parts;
	jule::Slice<_157e34dc0_Log> _93225_errs;
	std::tie(_93218_parts,_93225_errs) = _150831fa0_parts(_92117_rang,8LLU,true);
	if (_93225_errs.len() > 0LL) {
		(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_93225_errs);
		return std::make_tuple(jule::new_ref<_1506406d0_AssignSt>(),false);
	}
	{
		auto __julec_range_expr = _93218_parts;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Slice<_150640f50_Token> _1507e2370_part = *__julec_range_begin;
			_iter_begin_5676079776:;
			{
				jule::Bool _93921_is_mut = false;
				jule::Bool _94021_is_ref = false;
				_150640f50_Token _94217_token = _1507e2370_part[0LL];
				if (_94217_token._field_id == 36LLU) {
					_93921_is_mut=true;
					_1507e2370_part=_1507e2370_part.slice(1LL);
					if (_1507e2370_part.len() == 0LL) {
						(*this)._method_push_err(_94217_token,jule::Str("invalid syntax", 14));
						goto _iter_next_5676079776;
					}
				}
				if ((_1507e2370_part[0LL]._field_id == 7LLU) && (_1507e2370_part[0LL]._field_kind == jule::Str("&", 1))) {
					_94021_is_ref=true;
					_1507e2370_part=_1507e2370_part.slice(1LL);
					if (_1507e2370_part.len() == 0LL) {
						(*this)._method_push_err(_94217_token,jule::Str("invalid syntax", 14));
						goto _iter_next_5676079776;
					}
				}
				if (((_1507e2370_part[0LL]._field_id != 2LLU) && (_1507e2370_part[0LL]._field_id != 3LLU)) && (_1507e2370_part[0LL]._field_kind != jule::Str("(", 1))) {
					(*this)._method_push_err(_94217_token,jule::Str("invalid syntax", 14));
					goto _iter_next_5676079776;
				}
				jule::Ref<_1506406d0_AssignLeft> _96821_l = (*this)._method_build_assign_l(_1507e2370_part);
				_96821_l->_field_mutable=_93921_is_mut;
				_96821_l->_field_reference=_94021_is_ref;
				_91617_assign->_field_left=jule::append(_91617_assign->_field_left,jule::Slice<jule::Ref<_1506406d0_AssignLeft>>({_96821_l}));
			}
			_iter_next_5676079776:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1507e2370_part = *__julec_range_begin; goto _iter_begin_5676079776; }
			_iter_end_5676079776:;
		}
	}
	return std::make_tuple(_91617_assign,true);
}



inline std::tuple<jule::Ref<_1506406d0_AssignSt>,jule::Bool> _1507e2370_ScopeParser::_method_build_assign_st(jule::Slice<_150640f50_Token> _97738_tokens) {
	jule::Bool _97772_ok = jule::Bool();
	jule::Ref<_1506406d0_AssignSt> _97757_st = jule::Ref<_1506406d0_AssignSt>();
	if ((!(_1507eb940_check_assign_tokens(_97738_tokens)))) {
		_97757_st = jule::new_ref<_1506406d0_AssignSt>();
		_97772_ok = false;
		return std::make_tuple(_97757_st,_97772_ok);
	}
	{
		auto _match_expr{ _97738_tokens[0LL]._field_id };
		if (!((34LLU) == _match_expr)) { goto _case_end_5676110992; }
		_case_begin_5676110992:;
		{
			std::tie(_97757_st,_97772_ok) = (*this)._method_build_decl_assign(_97738_tokens);
		}
		goto _match_end_5676108096;
		_case_end_5676110992:;
		_case_begin_5676107600:;
		{
			std::tie(_97757_st,_97772_ok) = (*this)._method_build_plain_assign(_97738_tokens);
		}
		goto _match_end_5676108096;
		_case_end_5676107600:;
		_match_end_5676108096:;
	}
	return std::make_tuple(_97757_st,_97772_ok);
}



inline jule::Any _1507e2370_ScopeParser::_method_build_st(jule::Ref<_1507e2370_Stmt> _99031_st) {
	_150640f50_Token _99117_token = _99031_st->_field_tokens[0LL];
	if (_99117_token._field_id == 2LLU) {
		jule::Any _99322_s;
		jule::Bool _99325_ok;
		std::tie(_99322_s,_99325_ok) = (*this)._method_build_id_st(_99031_st->_field_tokens);
		if (_99325_ok) {
			return _99322_s;
		}
	}
	jule::Ref<_1506406d0_AssignSt> _99918_s;
	jule::Bool _99921_ok;
	std::tie(_99918_s,_99921_ok) = (*this)._method_build_assign_st(_99031_st->_field_tokens);
	if (_99921_ok) {
		return jule::Any(_99918_s);
	}
	{
		auto _match_expr{ _99117_token._field_id };
		if (!((38LLU) == _match_expr || (9LLU) == _match_expr || (34LLU) == _match_expr || (36LLU) == _match_expr)) { goto _case_end_5676124336; }
		_case_begin_5676124336:;
		{
			return (*this)._method_build_var_st(_99031_st->_field_tokens);
		}
		goto _match_end_5676122432;
		_case_end_5676124336:;
		if (!((4LLU) == _match_expr)) { goto _case_end_5676125504; }
		_case_begin_5676125504:;
		{
			return (*this)._method_build_ret_st(_99031_st->_field_tokens);
		}
		goto _match_end_5676122432;
		_case_end_5676125504:;
		if (!((12LLU) == _match_expr)) { goto _case_end_5676125744; }
		_case_begin_5676125744:;
		{
			return (*this)._method_buid_iter_st(_99031_st);
		}
		goto _match_end_5676122432;
		_case_end_5676125744:;
		if (!((13LLU) == _match_expr)) { goto _case_end_5676121216; }
		_case_begin_5676121216:;
		{
			return (*this)._method_build_break_st(_99031_st->_field_tokens);
		}
		goto _match_end_5676122432;
		_case_end_5676121216:;
		if (!((14LLU) == _match_expr)) { goto _case_end_5676121328; }
		_case_begin_5676121328:;
		{
			return (*this)._method_build_cont_st(_99031_st->_field_tokens);
		}
		goto _match_end_5676122432;
		_case_end_5676121328:;
		if (!((16LLU) == _match_expr)) { goto _case_end_5676121440; }
		_case_begin_5676121440:;
		{
			return (*this)._method_build_if_else_chain(_99031_st->_field_tokens);
		}
		goto _match_end_5676122432;
		_case_end_5676121440:;
		if (!((18LLU) == _match_expr)) { goto _case_end_5676123136; }
		_case_begin_5676123136:;
		{
			return (*this)._method_build_comment_st(_99117_token);
		}
		goto _match_end_5676122432;
		_case_end_5676123136:;
		if (!((26LLU) == _match_expr)) { goto _case_end_5676123248; }
		_case_begin_5676123248:;
		{
			return (*this)._method_build_co_call_st(_99031_st->_field_tokens);
		}
		goto _match_end_5676122432;
		_case_end_5676123248:;
		if (!((22LLU) == _match_expr)) { goto _case_end_5676123360; }
		_case_begin_5676123360:;
		{
			return (*this)._method_build_goto_st(_99031_st->_field_tokens);
		}
		goto _match_end_5676122432;
		_case_end_5676123360:;
		if (!((32LLU) == _match_expr)) { goto _case_end_5676123472; }
		_case_begin_5676123472:;
		{
			return (*this)._method_build_fall_st(_99031_st->_field_tokens);
		}
		goto _match_end_5676122432;
		_case_end_5676123472:;
		if (!((10LLU) == _match_expr)) { goto _case_end_5676125968; }
		_case_begin_5676125968:;
		{
			return (*this)._method_build_type_alias_st(_99031_st->_field_tokens);
		}
		goto _match_end_5676122432;
		_case_end_5676125968:;
		if (!((27LLU) == _match_expr)) { goto _case_end_5676126080; }
		_case_begin_5676126080:;
		{
			return jule::Any((*this)._method_build_match_case(_99031_st->_field_tokens));
		}
		goto _match_end_5676122432;
		_case_end_5676126080:;
		if (!((35LLU) == _match_expr || (37LLU) == _match_expr)) { goto _case_end_5676126192; }
		_case_begin_5676126192:;
		{
			return jule::Any((*this)._method_build_scope_st(_99031_st->_field_tokens));
		}
		goto _match_end_5676122432;
		_case_end_5676126192:;
		if (!((3LLU) == _match_expr)) { goto _case_end_5676126304; }
		_case_begin_5676126304:;
		{
			if (_99117_token._field_kind == jule::Str("{", 1)) {
				return jule::Any((*this)._method_build_scope_st(_99031_st->_field_tokens));
			}
		}
		goto _match_end_5676122432;
		_case_end_5676126304:;
		_case_begin_5676121904:;
		{
			if (_1507ea360_is_fn_call(_99031_st->_field_tokens) != nullptr) {
				return (*this)._method_build_call_st(_99031_st->_field_tokens);
			}
		}
		goto _match_end_5676122432;
		_case_end_5676121904:;
		_match_end_5676122432:;
	}
	(*this)._method_push_err(_99117_token,jule::Str("invalid syntax", 14));
	return jule::Any(nullptr);
}



inline void _1507e2370_ScopeParser::_method_build(jule::Slice<_150640f50_Token> _106628_tokens,jule::Ref<_1506406d0_ScopeTree> _106649_s) {
	if ((!(jule::real(_106649_s)))) {
		return;
	}
	(*this)._field_stms=_1507e2370_split_stms(_106628_tokens);
	(*this)._field_pos=-1LL;
	(*this)._field_s=_106649_s;
	_iter_begin_5676147984:;
	if (!((!((*this)._method_is_last_st())) && (!((*this)._method_finished())))) { goto _iter_end_5676147984; }
	{
		jule::Ref<_1507e2370_Stmt> _107521_st = (*this)._method_next();
		jule::Any _107621_data = (*this)._method_build_st(_107521_st);
		if (_107621_data != nullptr) {
			(*this)._field_s->_field_stmts=jule::append((*this)._field_s->_field_stmts,jule::Slice<jule::Any>({_107621_data}));
		}
		if ((*this)._method_stopped()) {
			goto _iter_end_5676147984;
		}
	}
	_iter_next_5676147984:;
	goto _iter_begin_5676147984;
	_iter_end_5676147984:;
}







std::ostream &operator<<(std::ostream &_Stream, const _1507e2370_ScopeParser &_Src) {
	_Stream << "ScopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stms:" << _Src._field_stms << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1507ea360_CallData &_Src) {
	_Stream << "CallData{";
	_Stream << "expr_tokens:" << _Src._field_expr_tokens << ", ";
	_Stream << "args_tokens:" << _Src._field_args_tokens << ", ";
	_Stream << "generics_tokens:" << _Src._field_generics_tokens;
	_Stream << "}";
	return _Stream;
}



inline void _1507ea360_Precedencer::_method_set(jule::Int _15522_level,jule::Any _15534_expr) {
	{
		auto __julec_range_expr = (*this)._field_pairs;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _1507ea360_i = 0;
			jule::Slice<jule::Any> _1507ea360_pair = *__julec_range_begin;
			_iter_begin_5676157696:;
			{
				jule::Int _15717_pair_level = _1507ea360_pair[0LL].operator jule::Int();
				if (_15522_level > _15717_pair_level) {
					jule::Slice<jule::Slice<jule::Any>> _15925_first = (*this)._field_pairs.slice(0LL,static_cast<jule::Int>(_1507ea360_i));
					jule::Slice<jule::Slice<jule::Any>> _16025_buffer = jule::Slice<jule::Slice<jule::Any>>({jule::Slice<jule::Any>({jule::Any(_15522_level),_15534_expr})});
					jule::Slice<jule::Slice<jule::Any>> _16125_appended = jule::append(_16025_buffer,(*this)._field_pairs.slice(static_cast<jule::Int>(_1507ea360_i)));
					(*this)._field_pairs=jule::append(_15925_first,_16125_appended);
					return;
				}
			}
			_iter_next_5676157696:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_1507ea360_i; _1507ea360_pair = *__julec_range_begin; goto _iter_begin_5676157696; }
			_iter_end_5676157696:;
		}
	}
	(*this)._field_pairs=jule::append((*this)._field_pairs,jule::Slice<jule::Slice<jule::Any>>({jule::Slice<jule::Any>({jule::Any(_15522_level),_15534_expr})}));
}



inline jule::Any _1507ea360_Precedencer::_method_get_lower(void) {
	jule::I64 _17017_i = (*this)._field_pairs.len() - 1LL;
	_iter_begin_5676166656:;
	if (!(_17017_i >= 0LL)) { goto _iter_end_5676166656; }
	{
		jule::Any _17221_data = (*this)._field_pairs[static_cast<jule::Int>(_17017_i)][1LL];
		if (_17221_data != nullptr) {
			return _17221_data;
		}
	}
	_iter_next_5676166656:;
	(_17017_i)--;
	goto _iter_begin_5676166656;
	_iter_end_5676166656:;
	return jule::Any(nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, const _1507ea360_Precedencer &_Src) {
	_Stream << "Precedencer{";
	_Stream << "pairs:" << _Src._field_pairs;
	_Stream << "}";
	return _Stream;
}



inline void _1507ea360_ExprBuilder::_method_push_err(_150640f50_Token _28727_token,jule::Str _28741_fmt,jule::Slice<jule::Any> _28754_args) {
	(*this)._field_p->_method_push_err(_28727_token,_28741_fmt,_28754_args);
}



inline void _1507ea360_ExprBuilder::_method_push_suggest(jule::Str _29231_fmt,jule::Slice<jule::Any> _29244_args) {
	(*this)._field_p->_method_push_suggest(_29231_fmt,_29244_args);
}



inline jule::Ref<_1506406d0_TupleExpr> _1507ea360_ExprBuilder::_method_build_tuple(jule::Slice<jule::Slice<_150640f50_Token>> _29634_parts) {
	jule::Ref<_1506406d0_TupleExpr> _29717_tuple = jule::new_struct<_1506406d0_TupleExpr>(new( std::nothrow ) _1506406d0_TupleExpr(jule::Slice<jule::Ref<_1506406d0_Expr>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_29634_parts.len())))));
	{
		auto __julec_range_expr = _29634_parts;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _1507ea360_i = 0;
			jule::Slice<_150640f50_Token> _1507ea360_part = *__julec_range_begin;
			_iter_begin_5676209104:;
			{
				_29717_tuple->_field_expr[static_cast<jule::Int>(_1507ea360_i)]=(*this)._method_build_from_tokens(_1507ea360_part);
			}
			_iter_next_5676209104:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_1507ea360_i; _1507ea360_part = *__julec_range_begin; goto _iter_begin_5676209104; }
			_iter_end_5676209104:;
		}
	}
	return _29717_tuple;
}



inline jule::Ref<_1506406d0_LitExpr> _1507ea360_ExprBuilder::_method_build_lit(_150640f50_Token _30628_token) {
	return jule::new_struct<_1506406d0_LitExpr>(new( std::nothrow ) _1506406d0_LitExpr(_30628_token,_30628_token._field_kind));
}



inline jule::Ref<_1506406d0_TypeDecl> _1507ea360_ExprBuilder::_method_build_primitive_type(_150640f50_Token _31339_token) {
	return _150aed7c0_build_prim_type(_31339_token);
}



inline jule::Any _1507ea360_ExprBuilder::_method_build_single(_150640f50_Token _31735_token) {
	{
		auto _match_expr{ _31735_token._field_id };
		if (!((6LLU) == _match_expr)) { goto _case_end_5676224208; }
		_case_begin_5676224208:;
		{
			return jule::Any((*this)._method_build_lit(_31735_token));
		}
		goto _match_end_5676220464;
		_case_end_5676224208:;
		if (!((2LLU) == _match_expr || (28LLU) == _match_expr)) { goto _case_end_5676221424; }
		_case_begin_5676221424:;
		{
			return jule::Any(_1507ea360_build_ident_expr(_31735_token));
		}
		goto _match_end_5676220464;
		_case_end_5676221424:;
		if (!((1LLU) == _match_expr)) { goto _case_end_5676221536; }
		_case_begin_5676221536:;
		{
			return jule::Any((*this)._method_build_primitive_type(_31735_token));
		}
		goto _match_end_5676220464;
		_case_end_5676221536:;
		_case_begin_5676221120:;
		{
			(*this)._method_push_err(_31735_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::Any(nullptr);
		}
		goto _match_end_5676220464;
		_case_end_5676221120:;
		_match_end_5676220464:;
	}
}



inline jule::Ref<_1506406d0_IdentExpr> _1507ea360_ExprBuilder::_method_build_cpp_linked_ident(jule::Slice<_150640f50_Token> _33545_tokens) {
	if (_33545_tokens[0LL]._field_id != 31LLU) {
		return jule::new_ref<_1506406d0_IdentExpr>();
	} else if (_33545_tokens[1LL]._field_id != 20LLU) {
		(*this)._method_push_err(_33545_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggest(jule::Str("use dot (.) to access cpp-linked defines", 40),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1506406d0_IdentExpr>();
	}
	_150640f50_Token _34317_token = _33545_tokens[2LL];
	if (_34317_token._field_id != 2LLU) {
		(*this)._method_push_err(_33545_tokens[2LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggest(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1506406d0_IdentExpr>();
	}
	jule::Ref<_1506406d0_IdentExpr> _34917_expr = _1507ea360_build_ident_expr(_34317_token);
	_34917_expr->_field_cpp_linked=true;
	return _34917_expr;
}



inline jule::Ref<_1506406d0_UnaryExpr> _1507ea360_ExprBuilder::_method_build_unary(jule::Slice<_150640f50_Token> _35434_tokens) {
	_150640f50_Token _35517_op = _35434_tokens[0LL];
	if (_35434_tokens.len() == 1LL) {
		(*this)._method_push_err(_35517_op,jule::Str("missing expression for unary operator", 37),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1506406d0_UnaryExpr>();
	} else if ((!(_150640f50_is_unary_op(_35517_op._field_kind)))) {
		(*this)._method_push_err(_35517_op,jule::Str("invalid_operator_for_unary: @", 29),jule::Slice<jule::Any>({jule::Any(_35517_op._field_kind)}));
		return jule::new_ref<_1506406d0_UnaryExpr>();
	}
	_35434_tokens=_35434_tokens.slice(1LL);
	return jule::new_struct<_1506406d0_UnaryExpr>(new( std::nothrow ) _1506406d0_UnaryExpr(_35517_op,(*this)._method_build(_35434_tokens)));
}



inline jule::Ref<_1506406d0_SubIdentExpr> _1507ea360_ExprBuilder::_method_build_obj_sub_ident(jule::Slice<_150640f50_Token> _37542_tokens) {
	jule::I64 _37617_i = _37542_tokens.len() - 1LL;
	_150640f50_Token _37717_ident_token = _37542_tokens[static_cast<jule::Int>(_37617_i)];
	(_37617_i)--;
	_37542_tokens=_37542_tokens.slice(0LL,static_cast<jule::Int>(_37617_i));
	if (_37542_tokens.len() == 0LL) {
		(*this)._method_push_err(_37717_ident_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1506406d0_SubIdentExpr>();
	}
	return jule::new_struct<_1506406d0_SubIdentExpr>(new( std::nothrow ) _1506406d0_SubIdentExpr(jule::Bool(),(*this)._method_build(_37542_tokens),_37717_ident_token));
}



inline jule::Ref<_1506406d0_NsSelectionExpr> _1507ea360_ExprBuilder::_method_build_ns_sub_ident(jule::Slice<_150640f50_Token> _39041_tokens) {
	jule::Ref<_1506406d0_NsSelectionExpr> _39117_ns = jule::new_struct<_1506406d0_NsSelectionExpr>(new( std::nothrow ) _1506406d0_NsSelectionExpr());
	{
		auto __julec_range_expr = _39041_tokens;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _1507ea360_i = 0;
			_150640f50_Token _1507ea360_token = *__julec_range_begin;
			_iter_begin_5676264784:;
			{
				if (jule::mod(_1507ea360_i,2LL) == 0LL) {
					if (_1507ea360_token._field_id != 2LLU) {
						(*this)._method_push_err(_1507ea360_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
						(*this)._method_push_suggest(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
					}
					_39117_ns->_field_ns=jule::append(_39117_ns->_field_ns,jule::Slice<_150640f50_Token>({_1507ea360_token}));
				} else if (_1507ea360_token._field_id != 23LLU) {
					(*this)._method_push_err(_1507ea360_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
					(*this)._method_push_suggest(jule::Str("expected double colon \"::\"", 26),jule::Slice<jule::Any>({}));
				}
			}
			_iter_next_5676264784:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_1507ea360_i; _1507ea360_token = *__julec_range_begin; goto _iter_begin_5676264784; }
			_iter_end_5676264784:;
		}
	}
	_39117_ns->_field_ident=_39117_ns->_field_ns[static_cast<jule::Int>(_39117_ns->_field_ns.len() - 1LL)];
	_39117_ns->_field_ns=_39117_ns->_field_ns.slice(0LL,static_cast<jule::Int>(_39117_ns->_field_ns.len() - 1LL));
	return _39117_ns;
}



inline jule::Ref<_1506406d0_TypeDecl> _1507ea360_ExprBuilder::_method_build_type(jule::Slice<_150640f50_Token> _40933_tokens) {
	jule::Int _41017_i = 0LL;
	jule::Ref<_1506406d0_TypeDecl> _41118_t;
	jule::Bool _41121_ok;
	std::tie(_41118_t,_41121_ok) = (*this)._field_p->_method_build_type(_40933_tokens,(&(_41017_i)),false);
	if ((!(_41121_ok))) {
		(*this)._method_push_err(_40933_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1506406d0_TypeDecl>();
	}
	if (_41017_i < _40933_tokens.len()) {
		(*this)._method_push_err(_40933_tokens[static_cast<jule::Int>(_41017_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	return _41118_t;
}



inline jule::Any _1507ea360_ExprBuilder::_method_build_sub_ident(jule::Slice<_150640f50_Token> _42338_tokens) {
	jule::I64 _42413_i = _42338_tokens.len() - 2LL;
	_150640f50_Token _42513_token = _42338_tokens[static_cast<jule::Int>(_42413_i)];
	{
		auto _match_expr{ _42513_token._field_id };
		if (!((20LLU) == _match_expr)) { goto _case_end_5676293904; }
		_case_begin_5676293904:;
		{
			return jule::Any((*this)._method_build_obj_sub_ident(_42338_tokens));
		}
		goto _match_end_5676292800;
		_case_end_5676293904:;
		if (!((23LLU) == _match_expr)) { goto _case_end_5676294016; }
		_case_begin_5676294016:;
		{
			return jule::Any((*this)._method_build_ns_sub_ident(_42338_tokens));
		}
		goto _match_end_5676292800;
		_case_end_5676294016:;
		if (!((3LLU) == _match_expr)) { goto _case_end_5676294128; }
		_case_begin_5676294128:;
		{
			if (_42513_token._field_kind == jule::Str("]", 1)) {
				return jule::Any((*this)._method_build_type(_42338_tokens));
			}
		}
		goto _match_end_5676292800;
		_case_end_5676294128:;
		_match_end_5676292800:;
	}
	(*this)._method_push_err(_42513_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	return jule::Any(nullptr);
}



inline jule::Ref<_1506406d0_VariadicExpr> _1507ea360_ExprBuilder::_method_build_variadic(jule::Slice<_150640f50_Token> _44437_tokens) {
	_150640f50_Token _44517_token = _44437_tokens[static_cast<jule::Int>(_44437_tokens.len() - 1LL)];
	_44437_tokens=_44437_tokens.slice(0LL,static_cast<jule::Int>(_44437_tokens.len() - 1LL));
	return jule::new_struct<_1506406d0_VariadicExpr>(new( std::nothrow ) _1506406d0_VariadicExpr(_44517_token,(*this)._method_build(_44437_tokens)));
}



inline jule::Any _1507ea360_ExprBuilder::_method_build_op_right(jule::Slice<_150640f50_Token> _45337_tokens) {
	_150640f50_Token _45417_token = _45337_tokens[static_cast<jule::Int>(_45337_tokens.len() - 1LL)];
	{
		auto _match_expr{ _45417_token._field_kind };
		if (!((jule::Str("...", 3)) == _match_expr)) { goto _case_end_5676314528; }
		_case_begin_5676314528:;
		{
			return jule::Any((*this)._method_build_variadic(_45337_tokens));
		}
		goto _match_end_5676309312;
		_case_end_5676314528:;
		_case_begin_5676311408:;
		{
			(*this)._method_push_err(_45417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::Any(nullptr);
		}
		goto _match_end_5676309312;
		_case_end_5676311408:;
		_match_end_5676309312:;
	}
}



inline jule::Any _1507ea360_ExprBuilder::_method_build_between_parentheses(jule::Slice<_150640f50_Token> _46548_tokens) {
	_150640f50_Token _46613_token = _46548_tokens[0LL];
	_46548_tokens=_46548_tokens.slice(1LL,static_cast<jule::Int>(_46548_tokens.len() - 1LL));
	if (_46548_tokens.len() == 0LL) {
		(*this)._method_push_err(_46613_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggest(jule::Str("empty parentheses are not valid expression, must include an expression in range", 79),jule::Slice<jule::Any>({}));
		return jule::Any(nullptr);
	}
	return (*this)._method_build(_46548_tokens);
}



inline jule::Ref<_1506406d0_CastExpr> _1507ea360_ExprBuilder::_method_try_build_cast(jule::Slice<_150640f50_Token> _47637_tokens) {
	jule::Int _47717_range_n = 0LL;
	{
		auto __julec_range_expr = _47637_tokens;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _1507ea360_i = 0;
			_150640f50_Token _1507ea360_token = *__julec_range_begin;
			_iter_begin_5676327312:;
			{
				if (_1507ea360_token._field_id == 3LLU) {
					{
						auto _match_expr{ _1507ea360_token._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_5676331632; }
						_case_begin_5676331632:;
						{
							(_47717_range_n)++;
							goto _iter_next_5676327312;
						}
						goto _match_end_5676330112;
						_case_end_5676331632:;
						_case_begin_5676330800:;
						{
							(_47717_range_n)--;
						}
						goto _match_end_5676330112;
						_case_end_5676330800:;
						_match_end_5676330112:;
					}
				}
				if (_47717_range_n > 0LL) {
					goto _iter_next_5676327312;
				} else if ((_1507ea360_i + 1LL) == _47637_tokens.len()) {
					return jule::new_ref<_1506406d0_CastExpr>();
				}
				jule::Slice<_150640f50_Token> _49821_type_tokens = _47637_tokens.slice(0LL,static_cast<jule::Int>(_1507ea360_i + 1LL));
				jule::Slice<_150640f50_Token> _49921_expr_tokens = _47637_tokens.slice(static_cast<jule::Int>(_1507ea360_i + 1LL));
				if (_49921_expr_tokens.len() == 0LL) {
					return jule::new_ref<_1506406d0_CastExpr>();
				}
				_150640f50_Token _50617_token = _49921_expr_tokens[0LL];
				if ((_50617_token._field_id != 3LLU) || (_50617_token._field_kind != jule::Str("(", 1))) {
					return jule::new_ref<_1506406d0_CastExpr>();
				}
				jule::Ref<_1506406d0_CastExpr> _51121_cast = jule::new_struct<_1506406d0_CastExpr>(new( std::nothrow ) _1506406d0_CastExpr());
				if (_49921_expr_tokens.len() == 2LL) {
					(*this)._method_push_err(_49921_expr_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
					(*this)._method_push_suggest(jule::Str("give an expression for casting", 30),jule::Slice<jule::Any>({}));
				}
				if (_49821_type_tokens.len() == 2LL) {
					(*this)._method_push_err(_49821_type_tokens[0LL],jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
					(*this)._method_push_suggest(jule::Str("type declaration expected for casting", 37),jule::Slice<jule::Any>({}));
				} else {
					_49821_type_tokens=_49821_type_tokens.slice(1LL,static_cast<jule::Int>(_49821_type_tokens.len() - 1LL));
					jule::Int _52525_type_index = 0LL;
					jule::Ref<_1506406d0_TypeDecl> _52626_t;
					jule::Bool _52629_ok;
					std::tie(_52626_t,_52629_ok) = (*this)._field_p->_method_build_type(_49821_type_tokens,(&(_52525_type_index)),true);
					if (_52629_ok && (_52525_type_index < _49821_type_tokens.len())) {
						(*this)._method_push_err(_49821_type_tokens[static_cast<jule::Int>(_52525_type_index)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
					} else if ((!(_52629_ok))) {
						return _51121_cast;
					}
					_51121_cast->_field_kind=_52626_t;
					if (_49921_expr_tokens.len() > 2LL) {
						jule::Int _53629_i = 0LL;
						_150831fa0_range(_53629_i,jule::Str("(", 1),jule::Str(")", 1),_49921_expr_tokens);
						if (_53629_i < _49921_expr_tokens.len()) {
							return jule::new_ref<_1506406d0_CastExpr>();
						}
						_51121_cast->_field_expr=(*this)._method_build(_49921_expr_tokens.slice(0LL,static_cast<jule::Int>(_53629_i)));
					}
				}
				return _51121_cast;
			}
			_iter_next_5676327312:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_1507ea360_i; _1507ea360_token = *__julec_range_begin; goto _iter_begin_5676327312; }
			_iter_end_5676327312:;
		}
	}
	return jule::new_ref<_1506406d0_CastExpr>();
}



inline void _1507ea360_ExprBuilder::_method_push_arg(jule::Slice<jule::Ref<_1506406d0_Expr>>& _55032_args,jule::Slice<_150640f50_Token> _55051_tokens,_150640f50_Token _55068_err_token) {
	if (_55051_tokens.len() == 0LL) {
		(*this)._method_push_err(_55068_err_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggest(jule::Str("an expression expected", 22),jule::Slice<jule::Any>({}));
		return;
	}
	_55032_args=jule::append(_55032_args,jule::Slice<jule::Ref<_1506406d0_Expr>>({(*this)._method_build_from_tokens(_55051_tokens)}));
}



inline jule::Slice<jule::Ref<_1506406d0_Expr>> _1507ea360_ExprBuilder::_method_build_args(jule::Slice<_150640f50_Token> _55933_tokens) {
	if (_55933_tokens.len() < 2LL) {
		return nullptr;
	}
	jule::Slice<jule::Ref<_1506406d0_Expr>> _56517_args = nullptr;
	jule::Int _56617_last = 0LL;
	jule::Int _56717_range_n = 0LL;
	_55933_tokens=_55933_tokens.slice(1LL,static_cast<jule::Int>(_55933_tokens.len() - 1LL));
	{
		auto __julec_range_expr = _55933_tokens;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _1507ea360_i = 0;
			_150640f50_Token _1507ea360_token = *__julec_range_begin;
			_iter_begin_5676378624:;
			{
				if (_1507ea360_token._field_id == 3LLU) {
					{
						auto _match_expr{ _1507ea360_token._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_5676384304; }
						_case_begin_5676384304:;
						{
							(_56717_range_n)++;
						}
						goto _match_end_5676382784;
						_case_end_5676384304:;
						_case_begin_5676383472:;
						{
							(_56717_range_n)--;
						}
						goto _match_end_5676382784;
						_case_end_5676383472:;
						_match_end_5676382784:;
					}
				}
				if ((_56717_range_n > 0LL) || (_1507ea360_token._field_id != 8LLU)) {
					goto _iter_next_5676378624;
				}
				(*this)._method_push_arg(_56517_args,_55933_tokens.slice(static_cast<jule::Int>(_56617_last),static_cast<jule::Int>(_1507ea360_i)),_1507ea360_token);
				_56617_last=static_cast<jule::Int>(_1507ea360_i + 1LL);
			}
			_iter_next_5676378624:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_1507ea360_i; _1507ea360_token = *__julec_range_begin; goto _iter_begin_5676378624; }
			_iter_end_5676378624:;
		}
	}
	if (_56617_last < _55933_tokens.len()) {
		if (_56617_last == 0LL) {
			if (_55933_tokens.len() > 0LL) {
				(*this)._method_push_arg(_56517_args,_55933_tokens.slice(static_cast<jule::Int>(_56617_last)),_55933_tokens[static_cast<jule::Int>(_56617_last)]);
			}
		} else {
			(*this)._method_push_arg(_56517_args,_55933_tokens.slice(static_cast<jule::Int>(_56617_last)),_55933_tokens[static_cast<jule::Int>(_56617_last - 1LL)]);
		}
	}
	return _56517_args;
}



inline jule::Slice<jule::Ref<_1506406d0_TypeDecl>> _1507ea360_ExprBuilder::_method_build_call_generics(jule::Slice<_150640f50_Token> _60242_tokens) {
	if (_60242_tokens.len() == 0LL) {
		return nullptr;
	}
	_60242_tokens=_60242_tokens.slice(1LL,static_cast<jule::Int>(_60242_tokens.len() - 1LL));
	jule::Slice<jule::Slice<_150640f50_Token>> _60818_parts;
	jule::Slice<_157e34dc0_Log> _60825_errs;
	std::tie(_60818_parts,_60825_errs) = _150831fa0_parts(_60242_tokens,8LLU,true);
	jule::Slice<jule::Ref<_1506406d0_TypeDecl>> _60917_generics = jule::Slice<jule::Ref<_1506406d0_TypeDecl>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_60818_parts.len())));
	(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_60825_errs);
	{
		auto __julec_range_expr = _60818_parts;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _1507ea360_i = 0;
			jule::Slice<_150640f50_Token> _1507ea360_part = *__julec_range_begin;
			_iter_begin_5676405552:;
			{
				if (_1507ea360_part.len() == 0LL) {
					goto _iter_next_5676405552;
				}
				jule::Int _61521_j = 0LL;
				jule::Ref<_1506406d0_TypeDecl> _61622_generic;
				std::tie(_61622_generic,std::ignore) = (*this)._field_p->_method_build_type(_1507ea360_part,(&(_61521_j)),true);
				if (_61521_j < _1507ea360_part.len()) {
					(*this)._method_push_err(_1507ea360_part[static_cast<jule::Int>(_61521_j)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				}
				_60917_generics[static_cast<jule::Int>(_1507ea360_i)]=_61622_generic;
			}
			_iter_next_5676405552:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_1507ea360_i; _1507ea360_part = *__julec_range_begin; goto _iter_begin_5676405552; }
			_iter_end_5676405552:;
		}
	}
	return _60917_generics;
}



inline jule::Ref<_1506406d0_FnCallExpr> _1507ea360_ExprBuilder::_method_build_fn_call(_150640f50_Token _62636_token,jule::Ref<_1507ea360_CallData> _62654_data) {
	return jule::new_struct<_1506406d0_FnCallExpr>(new( std::nothrow ) _1506406d0_FnCallExpr(_62636_token,(*this)._method_build_from_tokens(_62654_data->_field_expr_tokens),(*this)._method_build_call_generics(_62654_data->_field_generics_tokens),(*this)._method_build_args(_62654_data->_field_args_tokens),jule::Bool()));
}



inline jule::Any _1507ea360_ExprBuilder::_method_build_parentheses_range(jule::Slice<_150640f50_Token> _63546_tokens) {
	_150640f50_Token _63617_token = _63546_tokens[0LL];
	{
		auto _match_expr{ _63617_token._field_id };
		if (!((3LLU) == _match_expr)) { goto _case_end_5676426864; }
		_case_begin_5676426864:;
		{
			{
				auto _match_expr{ _63617_token._field_kind };
				if (!((jule::Str("(", 1)) == _match_expr)) { goto _case_end_5676428528; }
				_case_begin_5676428528:;
				{
					jule::Ref<_1506406d0_CastExpr> _64125_expr = (*this)._method_try_build_cast(_63546_tokens);
					if (jule::real(_64125_expr)) {
						return jule::Any(_64125_expr);
					}
				}
				goto _match_end_5676427408;
				_case_end_5676428528:;
				_match_end_5676427408:;
			}
		}
		goto _match_end_5676425600;
		_case_end_5676426864:;
		_match_end_5676425600:;
	}
	jule::Ref<_1507ea360_CallData> _64817_data = _1507ea360_get_call_data(_63546_tokens);
	if (_64817_data->_field_expr_tokens.len() == 0LL) {
		return (*this)._method_build_between_parentheses(_64817_data->_field_args_tokens);
	}
	return jule::Any((*this)._method_build_fn_call(_63617_token,_64817_data));
}



inline jule::Ref<_1506406d0_UnsafeExpr> _1507ea360_ExprBuilder::_method_build_unsafe_expr(jule::Slice<_150640f50_Token> _65940_tokens) {
	_150640f50_Token _66017_token = _65940_tokens[0LL];
	_65940_tokens=_65940_tokens.slice(1LL);
	jule::Int _66217_i = 0LL;
	jule::Slice<_150640f50_Token> _66317_range_tokens = _150831fa0_range(_66217_i,jule::Str("{", 1),jule::Str("}", 1),_65940_tokens);
	if (_66317_range_tokens.len() == 0LL) {
		(*this)._method_push_err(_65940_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1506406d0_UnsafeExpr>();
	}
	return jule::new_struct<_1506406d0_UnsafeExpr>(new( std::nothrow ) _1506406d0_UnsafeExpr(_66017_token,(*this)._method_build_from_tokens(_66317_range_tokens)->_field_kind));
}



inline jule::Ref<_1506406d0_FnDecl> _1507ea360_ExprBuilder::_method_build_anon_fn(jule::Slice<_150640f50_Token> _67436_tokens) {
	jule::Ref<_1506406d0_FnDecl> _67517_f = (*this)._field_p->_method_build_fn(_67436_tokens,false,false);
	if ((!(_67517_f->_method_is_anon()))) {
		(*this)._method_push_err(_67517_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggest(jule::Str("anonymous function expected, remove identifier of function", 58),jule::Slice<jule::Any>({}));
	}
	return _67517_f;
}



inline jule::Any _1507ea360_ExprBuilder::_method_build_unsafe(jule::Slice<_150640f50_Token> _68335_tokens) {
	{
		auto _match_expr{ _68335_tokens[1LL]._field_id };
		if (!((33LLU) == _match_expr)) { goto _case_end_5676458528; }
		_case_begin_5676458528:;
		{
			return jule::Any((*this)._method_build_anon_fn(_68335_tokens));
		}
		goto _match_end_5676456064;
		_case_end_5676458528:;
		_case_begin_5676457008:;
		{
			return jule::Any((*this)._method_build_unsafe_expr(_68335_tokens));
		}
		goto _match_end_5676456064;
		_case_end_5676457008:;
		_match_end_5676456064:;
	}
}



inline void _1507ea360_ExprBuilder::_method_push_range_lit_part(jule::Slice<_150640f50_Token> _69442_part,_150640f50_Token _6959_error_token,jule::Slice<jule::Slice<_150640f50_Token>>& _69534_parts) {
	if (_69442_part.len() == 0LL) {
		(*this)._method_push_err(_6959_error_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggest(jule::Str("an expression expected", 22),jule::Slice<jule::Any>({}));
		return;
	}
	_69534_parts=jule::append(_69534_parts,jule::Slice<jule::Slice<_150640f50_Token>>({_69442_part}));
}



inline jule::Slice<jule::Slice<_150640f50_Token>> _1507ea360_ExprBuilder::_method_get_brace_range_lit_expr_parts(jule::Slice<_150640f50_Token> _70553_tokens) {
	if (_70553_tokens.len() < 2LL) {
		return nullptr;
	}
	jule::Slice<jule::Slice<_150640f50_Token>> _71117_parts = nullptr;
	jule::Int _71317_last = 0LL;
	jule::Int _71417_range_n = 0LL;
	_70553_tokens=_70553_tokens.slice(1LL,static_cast<jule::Int>(_70553_tokens.len() - 1LL));
	{
		auto __julec_range_expr = _70553_tokens;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _1507ea360_i = 0;
			_150640f50_Token _1507ea360_token = *__julec_range_begin;
			_iter_begin_5676474480:;
			{
				if (_1507ea360_token._field_id == 3LLU) {
					{
						auto _match_expr{ _1507ea360_token._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_5676480160; }
						_case_begin_5676480160:;
						{
							(_71417_range_n)++;
						}
						goto _match_end_5676478640;
						_case_end_5676480160:;
						_case_begin_5676479328:;
						{
							(_71417_range_n)--;
						}
						goto _match_end_5676478640;
						_case_end_5676479328:;
						_match_end_5676478640:;
					}
				}
				if ((_71417_range_n > 0LL) || (_1507ea360_token._field_id != 8LLU)) {
					goto _iter_next_5676474480;
				}
				(*this)._method_push_range_lit_part(_70553_tokens.slice(static_cast<jule::Int>(_71317_last),static_cast<jule::Int>(_1507ea360_i)),_1507ea360_token,_71117_parts);
				_71317_last=static_cast<jule::Int>(_1507ea360_i + 1LL);
			}
			_iter_next_5676474480:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_1507ea360_i; _1507ea360_token = *__julec_range_begin; goto _iter_begin_5676474480; }
			_iter_end_5676474480:;
		}
	}
	if (_71317_last < _70553_tokens.len()) {
		if (_71317_last == 0LL) {
			if (_70553_tokens.len() > 0LL) {
				(*this)._method_push_range_lit_part(_70553_tokens.slice(static_cast<jule::Int>(_71317_last)),_70553_tokens[static_cast<jule::Int>(_71317_last)],_71117_parts);
			}
		} else {
			(*this)._method_push_range_lit_part(_70553_tokens.slice(static_cast<jule::Int>(_71317_last)),_70553_tokens[static_cast<jule::Int>(_71317_last - 1LL)],_71117_parts);
		}
	}
	return _71117_parts;
}



inline jule::Ref<_1506406d0_FieldExprPair> _1507ea360_ExprBuilder::_method_build_field_expr_pair(jule::Slice<_150640f50_Token> _74844_tokens) {
	jule::Ref<_1506406d0_FieldExprPair> _74917_pair = jule::new_struct<_1506406d0_FieldExprPair>(new( std::nothrow ) _1506406d0_FieldExprPair(_74844_tokens[0LL],jule::Any()));
	_74844_tokens=_74844_tokens.slice(2LL);
	_74917_pair->_field_expr=(*this)._method_build_from_tokens(_74844_tokens)->_field_kind;
	return _74917_pair;
}



inline jule::Any _1507ea360_ExprBuilder::_method_build_struct_lit_expr(jule::Slice<_150640f50_Token> _75744_tokens) {
	_150640f50_Token _75813_token = _75744_tokens[0LL];
	if (_75813_token._field_id == 2LLU) {
		if (_75744_tokens.len() > 1LL) {
			_150640f50_Token _76121_token = _75744_tokens[1LL];
			if (_76121_token._field_id == 11LLU) {
				return jule::Any((*this)._method_build_field_expr_pair(_75744_tokens));
			}
		}
	}
	return jule::Any((*this)._method_build_from_tokens(_75744_tokens));
}



inline jule::Slice<jule::Any> _1507ea360_ExprBuilder::_method_build_struct_lit_exprs(jule::Slice<_150640f50_Token> _77045_tokens) {
	jule::Slice<jule::Slice<_150640f50_Token>> _77117_parts = (*this)._method_get_brace_range_lit_expr_parts(_77045_tokens);
	if (_77117_parts.len() == 0LL) {
		return nullptr;
	}
	jule::Slice<jule::Any> _77617_pairs = jule::Slice<jule::Any>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_77117_parts.len())));
	{
		auto __julec_range_expr = _77117_parts;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _1507ea360_i = 0;
			jule::Slice<_150640f50_Token> _1507ea360_part = *__julec_range_begin;
			_iter_begin_5676512720:;
			{
				_77617_pairs[static_cast<jule::Int>(_1507ea360_i)]=(*this)._method_build_struct_lit_expr(_1507ea360_part);
			}
			_iter_next_5676512720:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_1507ea360_i; _1507ea360_part = *__julec_range_begin; goto _iter_begin_5676512720; }
			_iter_end_5676512720:;
		}
	}
	return _77617_pairs;
}



inline jule::Ref<_1506406d0_StructLit> _1507ea360_ExprBuilder::_method_build_typed_struct_literal(jule::Slice<_150640f50_Token> _78349_tokens) {
	jule::Int _78417_i = 0LL;
	jule::Ref<_1506406d0_TypeDecl> _78518_t;
	jule::Bool _78521_ok;
	std::tie(_78518_t,_78521_ok) = (*this)._field_p->_method_build_type(_78349_tokens,(&(_78417_i)),true);
	if ((!(_78521_ok))) {
		return jule::new_ref<_1506406d0_StructLit>();
	} else if (_78417_i >= _78349_tokens.len()) {
		(*this)._method_push_err(_78349_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1506406d0_StructLit>();
	}
	_78349_tokens=_78349_tokens.slice(static_cast<jule::Int>(_78417_i));
	_150640f50_Token _79413_token = _78349_tokens[0LL];
	if ((_79413_token._field_id != 3LLU) || (_79413_token._field_kind != jule::Str("{", 1))) {
		(*this)._method_push_err(_79413_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1506406d0_StructLit>();
	}
	return jule::new_struct<_1506406d0_StructLit>(new( std::nothrow ) _1506406d0_StructLit(_78518_t,(*this)._method_build_struct_lit_exprs(_78349_tokens)));
}



inline jule::Any _1507ea360_ExprBuilder::_method_build_brace_lit_part(jule::Slice<_150640f50_Token> _80643_tokens) {
	jule::Slice<_150640f50_Token> _80718_l;
	jule::Slice<_150640f50_Token> _80725_r;
	std::tie(_80718_l,_80725_r) = _1507ea360_split_colon(_80643_tokens);
	if (_80718_l != nullptr) {
		return jule::Any(jule::new_struct<_1506406d0_KeyValPair>(new( std::nothrow ) _1506406d0_KeyValPair((*this)._method_build_from_tokens(_80718_l)->_field_kind,(*this)._method_build_from_tokens(_80725_r)->_field_kind,_80643_tokens[static_cast<jule::Int>(_80718_l.len())])));
	}
	return jule::Any((*this)._method_build_from_tokens(_80643_tokens));
}



inline jule::Ref<_1506406d0_BraceLit> _1507ea360_ExprBuilder::_method_build_brace_lit(jule::Slice<_150640f50_Token> _81938_tokens) {
	jule::Ref<_1506406d0_BraceLit> _82017_lit = jule::new_struct<_1506406d0_BraceLit>(new( std::nothrow ) _1506406d0_BraceLit(_81938_tokens[0LL],jule::Slice<jule::Any>()));
	jule::Slice<jule::Slice<_150640f50_Token>> _82417_parts = (*this)._method_get_brace_range_lit_expr_parts(_81938_tokens);
	if (_82417_parts == nullptr) {
		return _82017_lit;
	}
	_82017_lit->_field_exprs=jule::Slice<jule::Any>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_82417_parts.len())));
	{
		auto __julec_range_expr = _82417_parts;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _1507ea360_i = 0;
			jule::Slice<_150640f50_Token> _1507ea360_part = *__julec_range_begin;
			_iter_begin_5676546144:;
			{
				_82017_lit->_field_exprs[static_cast<jule::Int>(_1507ea360_i)]=(*this)._method_build_brace_lit_part(_1507ea360_part);
			}
			_iter_next_5676546144:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_1507ea360_i; _1507ea360_part = *__julec_range_begin; goto _iter_begin_5676546144; }
			_iter_end_5676546144:;
		}
	}
	return _82017_lit;
}



inline jule::Any _1507ea360_ExprBuilder::_method_build_brace_range(jule::Slice<_150640f50_Token> _83740_tokens) {
	jule::Slice<_150640f50_Token> _83814_expr_tokens;
	jule::Int _83827_range_n;
	std::tie(_83814_expr_tokens,_83827_range_n) = _1507ea360_get_range_expr_tokens(_83740_tokens);
	{
		if (!((_83814_expr_tokens.len() == 0LL))) { goto _case_end_5676554720; }
		_case_begin_5676554720:;
		{
			return jule::Any((*this)._method_build_brace_lit(_83740_tokens));
		}
		goto _match_end_5676554432;
		_case_end_5676554720:;
		if (!((_83827_range_n > 0LL))) { goto _case_end_5676554832; }
		_case_begin_5676554832:;
		{
			(*this)._method_push_err(_83740_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::Any(nullptr);
		}
		goto _match_end_5676554432;
		_case_end_5676554832:;
		_match_end_5676554432:;
	}
	{
		auto _match_expr{ _83814_expr_tokens[0LL]._field_id };
		if (!((35LLU) == _match_expr)) { goto _case_end_5676562256; }
		_case_begin_5676562256:;
		{
			return (*this)._method_build_unsafe(_83740_tokens);
		}
		goto _match_end_5676558896;
		_case_end_5676562256:;
		if (!((33LLU) == _match_expr)) { goto _case_end_5676561728; }
		_case_begin_5676561728:;
		{
			return jule::Any((*this)._method_build_anon_fn(_83740_tokens));
		}
		goto _match_end_5676558896;
		_case_end_5676561728:;
		if (!((2LLU) == _match_expr || (31LLU) == _match_expr)) { goto _case_end_5676561840; }
		_case_begin_5676561840:;
		{
			return jule::Any((*this)._method_build_typed_struct_literal(_83740_tokens));
		}
		goto _match_end_5676558896;
		_case_end_5676561840:;
		_case_begin_5676555488:;
		{
			(*this)._method_push_err(_83814_expr_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::Any(nullptr);
		}
		goto _match_end_5676558896;
		_case_end_5676555488:;
		_match_end_5676558896:;
	}
}



inline jule::Slice<jule::Slice<_150640f50_Token>> _1507ea360_ExprBuilder::_method_get_enumerable_parts(jule::Slice<_150640f50_Token> _86743_tokens) {
	_86743_tokens=_86743_tokens.slice(1LL,static_cast<jule::Int>(_86743_tokens.len() - 1LL));
	jule::Slice<jule::Slice<_150640f50_Token>> _86918_parts;
	jule::Slice<_157e34dc0_Log> _86925_errors;
	std::tie(_86918_parts,_86925_errors) = _150831fa0_parts(_86743_tokens,8LLU,true);
	(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_86925_errors);
	return _86918_parts;
}



inline jule::Ref<_1506406d0_SliceExpr> _1507ea360_ExprBuilder::_method_build_slice(jule::Slice<_150640f50_Token> _87434_tokens) {
	jule::Ref<_1506406d0_SliceExpr> _87517_slc = jule::new_struct<_1506406d0_SliceExpr>(new( std::nothrow ) _1506406d0_SliceExpr(_87434_tokens[0LL],jule::Slice<jule::Any>()));
	jule::Slice<jule::Slice<_150640f50_Token>> _87917_parts = (*this)._method_get_enumerable_parts(_87434_tokens);
	if (_87917_parts.len() == 0LL) {
		return _87517_slc;
	}
	_87517_slc->_field_elems=jule::Slice<jule::Any>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_87917_parts.len())));
	{
		auto __julec_range_expr = _87917_parts;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _1507ea360_i = 0;
			jule::Slice<_150640f50_Token> _1507ea360_p = *__julec_range_begin;
			_iter_begin_5676578896:;
			{
				_87517_slc->_field_elems[static_cast<jule::Int>(_1507ea360_i)]=(*this)._method_build_from_tokens(_1507ea360_p)->_field_kind;
			}
			_iter_next_5676578896:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_1507ea360_i; _1507ea360_p = *__julec_range_begin; goto _iter_begin_5676578896; }
			_iter_end_5676578896:;
		}
	}
	return _87517_slc;
}



inline jule::Ref<_1506406d0_IndexingExpr> _1507ea360_ExprBuilder::_method_build_indexing(jule::Slice<_150640f50_Token> _89237_expr_tokens,jule::Slice<_150640f50_Token> _89313_tokens,_150640f50_Token _89334_error_token) {
	_89313_tokens=_89313_tokens.slice(1LL,static_cast<jule::Int>(_89313_tokens.len() - 1LL));
	return jule::new_struct<_1506406d0_IndexingExpr>(new( std::nothrow ) _1506406d0_IndexingExpr(_89334_error_token,(*this)._method_build_from_tokens(_89237_expr_tokens)->_field_kind,(*this)._method_build_from_tokens(_89313_tokens)->_field_kind));
}



inline jule::Ref<_1506406d0_SlicingExpr> _1507ea360_ExprBuilder::_method_build_slicing(jule::Slice<_150640f50_Token> _90236_expr_tokens,jule::Slice<_150640f50_Token> _90262_slicing_tokens,jule::Int _9039_colon,_150640f50_Token _90321_error_token) {
	jule::Ref<_1506406d0_SlicingExpr> _90417_slc = jule::new_struct<_1506406d0_SlicingExpr>(new( std::nothrow ) _1506406d0_SlicingExpr(_90321_error_token,(*this)._method_build_from_tokens(_90236_expr_tokens)->_field_kind,jule::Any(),jule::Any()));
	jule::Slice<_150640f50_Token> _90917_start_expr_tokens = _90262_slicing_tokens.slice(0LL,static_cast<jule::Int>(_9039_colon));
	if (_90917_start_expr_tokens.len() > 0LL) {
		_90417_slc->_field_start=(*this)._method_build_from_tokens(_90917_start_expr_tokens)->_field_kind;
	}
	jule::Slice<_150640f50_Token> _91417_to_expr_tokens = _90262_slicing_tokens.slice(static_cast<jule::Int>(_9039_colon + 1LL));
	if (_91417_to_expr_tokens.len() > 0LL) {
		_90417_slc->_field_to=(*this)._method_build_from_tokens(_91417_to_expr_tokens)->_field_kind;
	}
	return _90417_slc;
}



inline jule::Any _1507ea360_ExprBuilder::_method_build_bracket_range(jule::Slice<_150640f50_Token> _92242_tokens) {
	_150640f50_Token _92317_error_token = _92242_tokens[0LL];
	jule::Slice<_150640f50_Token> _92418_expr_tokens;
	jule::Int _92431_range_n;
	std::tie(_92418_expr_tokens,_92431_range_n) = _1507ea360_get_range_expr_tokens(_92242_tokens);
	{
		if (!((_92418_expr_tokens.len() == 0LL))) { goto _case_end_5676610912; }
		_case_begin_5676610912:;
		{
			return jule::Any((*this)._method_build_slice(_92242_tokens));
		}
		goto _match_end_5676610768;
		_case_end_5676610912:;
		if (!(((_92418_expr_tokens.len() == 0LL) || (_92431_range_n > 0LL)))) { goto _case_end_5676611040; }
		_case_begin_5676611040:;
		{
			(*this)._method_push_err(_92317_error_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::Any(nullptr);
		}
		goto _match_end_5676610768;
		_case_end_5676611040:;
		_match_end_5676610768:;
	}
	_92242_tokens=_92242_tokens.slice(static_cast<jule::Int>(_92418_expr_tokens.len()));
	jule::Int _94317_i = 0LL;
	jule::Slice<_150640f50_Token> _94418_slicing_tokens;
	jule::Int _94434_colon;
	std::tie(_94418_slicing_tokens,_94434_colon) = _150aed7c0_split_map_range(_92242_tokens,_94317_i);
	if (_94434_colon != -1LL) {
		return jule::Any((*this)._method_build_slicing(_92418_expr_tokens,_94418_slicing_tokens,_94434_colon,_92317_error_token));
	}
	return jule::Any((*this)._method_build_indexing(_92418_expr_tokens,_92242_tokens,_92317_error_token));
}



inline jule::Any _1507ea360_ExprBuilder::_method_build_data(jule::Slice<_150640f50_Token> _95133_tokens) {
	{
		auto _match_expr{ _95133_tokens.len() };
		if (!((0LL) == _match_expr)) { goto _case_end_5676624224; }
		_case_begin_5676624224:;
		{
			return jule::Any(nullptr);
		}
		goto _match_end_5676623472;
		_case_end_5676624224:;
		if (!((1LL) == _match_expr)) { goto _case_end_5676624336; }
		_case_begin_5676624336:;
		{
			return (*this)._method_build_single(_95133_tokens[0LL]);
		}
		goto _match_end_5676623472;
		_case_end_5676624336:;
		if (!((3LL) == _match_expr)) { goto _case_end_5676624448; }
		_case_begin_5676624448:;
		{
			if (_95133_tokens[0LL]._field_id == 31LLU) {
				return jule::Any((*this)._method_build_cpp_linked_ident(_95133_tokens));
			}
		}
		goto _match_end_5676623472;
		_case_end_5676624448:;
		_match_end_5676623472:;
	}
	_150640f50_Token _96517_token = _95133_tokens[0LL];
	{
		auto _match_expr{ _96517_token._field_id };
		if (!((7LLU) == _match_expr)) { goto _case_end_5676625472; }
		_case_begin_5676625472:;
		{
			if ((_95133_tokens.len() > 1LL) && (_96517_token._field_kind == jule::Str("*", 1))) {
				_96517_token=_95133_tokens[1LL];
				if ((_96517_token._field_id == 1LLU) || (_96517_token._field_id == 35LLU)) {
					return jule::Any((*this)._method_build_type(_95133_tokens));
				}
			}
			return jule::Any((*this)._method_build_unary(_95133_tokens));
		}
		goto _match_end_5676624944;
		_case_end_5676625472:;
		if (!((3LLU) == _match_expr)) { goto _case_end_5676630032; }
		_case_begin_5676630032:;
		{
			if ((_96517_token._field_kind != jule::Str("[", 1)) || (_95133_tokens.len() < 3LL)) {
				goto _match_end_5676624944;
			}
			_150640f50_Token _98317_next = _95133_tokens[1LL];
			if ((_98317_next._field_id != 3LLU) || (_98317_next._field_kind != jule::Str("]", 1))) {
				goto _match_end_5676624944;
			}
			return jule::Any((*this)._method_build_type(_95133_tokens));
		}
		goto _match_end_5676624944;
		_case_end_5676630032:;
		_match_end_5676624944:;
	}
	_96517_token=_95133_tokens[static_cast<jule::Int>(_95133_tokens.len() - 1LL)];
	{
		auto _match_expr{ _96517_token._field_id };
		if (!((2LLU) == _match_expr)) { goto _case_end_5676641712; }
		_case_begin_5676641712:;
		{
			return (*this)._method_build_sub_ident(_95133_tokens);
		}
		goto _match_end_5676630944;
		_case_end_5676641712:;
		if (!((1LLU) == _match_expr)) { goto _case_end_5676641840; }
		_case_begin_5676641840:;
		{
			return jule::Any((*this)._method_build_type(_95133_tokens));
		}
		goto _match_end_5676630944;
		_case_end_5676641840:;
		if (!((7LLU) == _match_expr)) { goto _case_end_5676641952; }
		_case_begin_5676641952:;
		{
			return (*this)._method_build_op_right(_95133_tokens);
		}
		goto _match_end_5676630944;
		_case_end_5676641952:;
		if (!((3LLU) == _match_expr)) { goto _case_end_5676642064; }
		_case_begin_5676642064:;
		{
			{
				auto _match_expr{ _96517_token._field_kind };
				if (!((jule::Str(")", 1)) == _match_expr)) { goto _case_end_5676646432; }
				_case_begin_5676646432:;
				{
					return (*this)._method_build_parentheses_range(_95133_tokens);
				}
				goto _match_end_5676642816;
				_case_end_5676646432:;
				if (!((jule::Str("}", 1)) == _match_expr)) { goto _case_end_5676646544; }
				_case_begin_5676646544:;
				{
					return (*this)._method_build_brace_range(_95133_tokens);
				}
				goto _match_end_5676642816;
				_case_end_5676646544:;
				if (!((jule::Str("]", 1)) == _match_expr)) { goto _case_end_5676646656; }
				_case_begin_5676646656:;
				{
					return (*this)._method_build_bracket_range(_95133_tokens);
				}
				goto _match_end_5676642816;
				_case_end_5676646656:;
				_match_end_5676642816:;
			}
		}
		goto _match_end_5676630944;
		_case_end_5676642064:;
		_match_end_5676630944:;
	}
	(*this)._method_push_err(_95133_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	return jule::Any(nullptr);
}



inline jule::Ref<_1506406d0_BinopExpr> _1507ea360_ExprBuilder::_method_build_binop(jule::Slice<_150640f50_Token> _102034_tokens,jule::Int _102051_i) {
	jule::Slice<_150640f50_Token> _102117_left_tokens = _102034_tokens.slice(0LL,static_cast<jule::Int>(_102051_i));
	jule::Slice<_150640f50_Token> _102217_right_tokens = _102034_tokens.slice(static_cast<jule::Int>(_102051_i + 1LL));
	if (_102117_left_tokens.len() == 0LL) {
		(*this)._method_push_err(_102034_tokens[static_cast<jule::Int>(_102051_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggest(jule::Str("left operand expected for binary operator", 41),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1506406d0_BinopExpr>();
	}
	if (_102217_right_tokens.len() == 0LL) {
		(*this)._method_push_err(_102034_tokens[static_cast<jule::Int>(_102051_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggest(jule::Str("right operand expected for binary operator", 42),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1506406d0_BinopExpr>();
	}
	return jule::new_struct<_1506406d0_BinopExpr>(new( std::nothrow ) _1506406d0_BinopExpr((*this)._method_build(_102117_left_tokens),(*this)._method_build(_102217_right_tokens),_102034_tokens[static_cast<jule::Int>(_102051_i)]));
}



inline jule::Any _1507ea360_ExprBuilder::_method_build(jule::Slice<_150640f50_Token> _104328_tokens) {
	jule::Int _104413_i = _1507ea360_find_lowest_prec_op(_104328_tokens);
	if (_104413_i == -1LL) {
		return (*this)._method_build_data(_104328_tokens);
	}
	return jule::Any((*this)._method_build_binop(_104328_tokens,_104413_i));
}



inline jule::Any _1507ea360_ExprBuilder::_method_build_kind(jule::Slice<_150640f50_Token> _105133_tokens) {
	jule::Slice<jule::Slice<_150640f50_Token>> _105218_parts;
	jule::Slice<_157e34dc0_Log> _105225_errors;
	std::tie(_105218_parts,_105225_errors) = _150831fa0_parts(_105133_tokens,8LLU,true);
	if (_105225_errors != nullptr) {
		(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_105225_errors);
		return jule::Any(nullptr);
	} else if (_105218_parts.len() > 1LL) {
		return jule::Any((*this)._method_build_tuple(_105218_parts));
	}
	return (*this)._method_build(_105133_tokens);
}



inline jule::Ref<_1506406d0_Expr> _1507ea360_ExprBuilder::_method_build_from_tokens(jule::Slice<_150640f50_Token> _106240_tokens) {
	_106240_tokens=_1507ea360_eliminate_comments(_106240_tokens);
	if (_106240_tokens.len() == 0LL) {
		return jule::new_ref<_1506406d0_Expr>();
	}
	return jule::new_struct<_1506406d0_Expr>(new( std::nothrow ) _1506406d0_Expr(_106240_tokens[0LL],(*this)._method_build_kind(_106240_tokens)));
}







std::ostream &operator<<(std::ostream &_Stream, const _1507ea360_ExprBuilder &_Src) {
	_Stream << "ExprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}



inline void _150831fa0_Parser::_method_stop(void) {
	jule::drop((*this)._field_ast);
}



inline jule::Bool _150831fa0_Parser::_method_stopped(void) {
	return (!(jule::real((*this)._field_ast)));
}



inline void _150831fa0_Parser::_method_push_err(_150640f50_Token _24527_token,jule::Str _24541_fmt,jule::Slice<jule::Any> _24554_args) {
	(*this)._field_errors=jule::append((*this)._field_errors,jule::Slice<_157e34dc0_Log>({_150831fa0_compiler_err(_24527_token,_24541_fmt,_24554_args)}));
}



inline void _150831fa0_Parser::_method_push_suggest(jule::Str _25031_fmt,jule::Slice<jule::Any> _25044_args) {
	{
		_150831fa0_push_suggest((&((*this)._field_errors[static_cast<jule::Int>((*this)._field_errors.len() - 1LL)])),_25031_fmt,_25044_args);
	}
}



inline jule::Ref<_1506406d0_Expr> _150831fa0_Parser::_method_build_expr(jule::Slice<_150640f50_Token> _25434_tokens) {
	jule::Ref<_1507ea360_ExprBuilder> _25517_ep = jule::new_struct<_1507ea360_ExprBuilder>(new( std::nothrow ) _1507ea360_ExprBuilder(this->self));
	jule::Ref<_1506406d0_Expr> _25617_expr = _25517_ep->_method_build_from_tokens(_25434_tokens);
	return _25617_expr;
}



inline jule::Ref<_1506406d0_Directive> _150831fa0_Parser::_method_get_directive(jule::Ref<_1506406d0_Comment> _26028_c) {
	if (_26028_c->_field_text.len() <= jule::Str("jule:", 5).len()) {
		return jule::new_ref<_1506406d0_Directive>();
	}
	jule::Ref<_1506406d0_Directive> _26517_d = jule::new_struct<_1506406d0_Directive>(new( std::nothrow ) _1506406d0_Directive(_26028_c->_field_token,jule::Str(),jule::Slice<jule::Str>()));
	jule::Str _26913_pragma = _26028_c->_field_token._field_kind.slice(static_cast<jule::Int>(jule::Str("jule:", 5).len()));
	jule::Slice<jule::Str> _27017_parts = _26913_pragma.split(jule::Str(" ", 1),-1LL);
	_26517_d->_field_tag=_27017_parts[0LL];
	_26517_d->_field_args=_27017_parts.slice(1LL);
	jule::Bool _27617_ok = false;
	{
		auto __julec_range_expr = _157eaaf20_DIRECTIVES;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _150831fa0_kind = *__julec_range_begin;
			_iter_begin_5676714448:;
			{
				if (_26517_d->_field_tag == _150831fa0_kind) {
					_27617_ok=true;
					goto _iter_end_5676714448;
				}
			}
			_iter_next_5676714448:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _150831fa0_kind = *__julec_range_begin; goto _iter_begin_5676714448; }
			_iter_end_5676714448:;
		}
	}
	if ((!(_27617_ok))) {
		return jule::new_ref<_1506406d0_Directive>();
	}
	return _26517_d;
}



inline void _150831fa0_Parser::_method_push_directive(jule::Ref<_1506406d0_Comment> _29033_c) {
	jule::Ref<_1506406d0_Directive> _29117_d = (*this)._method_get_directive(_29033_c);
	if ((!(jule::real(_29117_d)))) {
		return;
	}
	{
		auto __julec_range_expr = (*this)._field_directives;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_1506406d0_Directive> _150831fa0_pd = *__julec_range_begin;
			_iter_begin_5676721392:;
			{
				if (_29117_d->_field_tag == _150831fa0_pd->_field_tag) {
					return;
				}
			}
			_iter_next_5676721392:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _150831fa0_pd = *__julec_range_begin; goto _iter_begin_5676721392; }
			_iter_end_5676721392:;
		}
	}
	(*this)._field_directives=jule::append((*this)._field_directives,jule::Slice<jule::Ref<_1506406d0_Directive>>({_29117_d}));
}



inline void _150831fa0_Parser::_method_process_comment(jule::Ref<_1506406d0_Comment> _30638_c) {
	if (_30638_c->_method_is_directive()) {
		(*this)._method_push_directive(_30638_c);
		return;
	}
	if ((!(jule::real((*this)._field_comment_group)))) {
		(*this)._field_comment_group=jule::new_struct<_1506406d0_CommentGroup>(new( std::nothrow ) _1506406d0_CommentGroup());
	}
	(*this)._field_comment_group->_field_comments=jule::append((*this)._field_comment_group->_field_comments,jule::Slice<jule::Ref<_1506406d0_Comment>>({_30638_c}));
}



inline jule::Ref<_1506406d0_ScopeTree> _150831fa0_Parser::_method_build_scope(jule::Slice<_150640f50_Token> _31735_tokens) {
	jule::Ref<_1506406d0_ScopeTree> _31817_s = _1507e2370_new_scope();
	_1507e2370_ScopeParser _31917_sp = _1507e2370_ScopeParser(this->self,jule::Ref<_1506406d0_ScopeTree>(),jule::Slice<jule::Ref<_1507e2370_Stmt>>(),jule::Int());
	_31917_sp._method_build(_31735_tokens,_31817_s);
	return _31817_s;
}



inline std::tuple<jule::Ref<_1506406d0_TypeDecl>,jule::Bool> _150831fa0_Parser::_method___build_type(jule::Slice<_150640f50_Token> _32643_tokens,jule::Int* _32713_i,jule::Bool _32722_err) {
	_150aed7c0_TypeBuilder _32817_tb = _150aed7c0_TypeBuilder(this->self,_32643_tokens,_32713_i,_32722_err);
	jule::Ref<_1506406d0_TypeDecl> _33418_decl;
	jule::Bool _33424_ok;
	std::tie(_33418_decl,_33424_ok) = _32817_tb._method_build();
	return std::make_tuple(_33418_decl,_33424_ok);
}



inline std::tuple<jule::Ref<_1506406d0_TypeDecl>,jule::Bool> _150831fa0_Parser::_method_build_type(jule::Slice<_150640f50_Token> _33941_tokens,jule::Int* _34013_i,jule::Bool _34022_err) {
	_150640f50_Token _34113_token = _33941_tokens[static_cast<jule::Int>((*(_34013_i)))];
	jule::Ref<_1506406d0_TypeDecl> _34218_t;
	jule::Bool _34221_ok;
	std::tie(_34218_t,_34221_ok) = this->self->_method___build_type(_33941_tokens,_34013_i,_34022_err);
	if (_34022_err && (!(_34221_ok))) {
		this->self->_method_push_err(_34113_token,jule::Str("invalid data-type", 17),jule::Slice<jule::Any>({}));
	}
	return std::make_tuple(_34218_t,_34221_ok);
}



inline jule::Ref<_1506406d0_TypeAliasDecl> _150831fa0_Parser::_method_build_type_alias_decl(jule::Slice<_150640f50_Token> _34945_tokens) {
	jule::Int _35017_i = 1LL;
	if (_35017_i >= _34945_tokens.len()) {
		this->self->_method_push_err(_34945_tokens[static_cast<jule::Int>(_35017_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1506406d0_TypeAliasDecl>();
	}
	jule::Ref<_1506406d0_TypeAliasDecl> _35517_tad = jule::new_struct<_1506406d0_TypeAliasDecl>(new( std::nothrow ) _1506406d0_TypeAliasDecl(jule::Ref<_1506406d0_ScopeTree>(),jule::Bool(),jule::Bool(),_34945_tokens[1LL],_34945_tokens[1LL]._field_kind,jule::Ref<_1506406d0_TypeDecl>(),jule::Ref<_1506406d0_CommentGroup>()));
	_150640f50_Token _35917_token = _34945_tokens[static_cast<jule::Int>(_35017_i)];
	if (_35917_token._field_id != 2LLU) {
		this->self->_method_push_err(_35917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggest(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
	}
	(_35017_i)++;
	if (_35017_i >= _34945_tokens.len()) {
		this->self->_method_push_err(_34945_tokens[static_cast<jule::Int>(_35017_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return _35517_tad;
	}
	_35917_token=_34945_tokens[static_cast<jule::Int>(_35017_i)];
	if (_35917_token._field_id != 11LLU) {
		this->self->_method_push_err(_34945_tokens[static_cast<jule::Int>(_35017_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggest(jule::Str("expected colon \":\"", 18),jule::Slice<jule::Any>({}));
		return _35517_tad;
	}
	(_35017_i)++;
	if (_35017_i >= _34945_tokens.len()) {
		this->self->_method_push_err(_34945_tokens[static_cast<jule::Int>(_35017_i - 1LL)],jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
		return _35517_tad;
	}
	jule::Ref<_1506406d0_TypeDecl> _38018_t;
	jule::Bool _38021_ok;
	std::tie(_38018_t,_38021_ok) = this->self->_method_build_type(_34945_tokens,(&(_35017_i)),true);
	_35517_tad->_field_kind=_38018_t;
	if (_38021_ok && (_35017_i < _34945_tokens.len())) {
		this->self->_method_push_err(_34945_tokens[static_cast<jule::Int>(_35017_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	return _35517_tad;
}



inline void _150831fa0_Parser::_method_build_var_type_and_expr(jule::Ref<_1506406d0_VarDecl> _38847_v,jule::Slice<_150640f50_Token> _38864_tokens) {
	jule::Int _38917_i = 0LL;
	_150640f50_Token _39017_tok = _38864_tokens[static_cast<jule::Int>(_38917_i)];
	if (_39017_tok._field_id == 11LLU) {
		(_38917_i)++;
		if ((_38917_i >= _38864_tokens.len()) || ((_38864_tokens[static_cast<jule::Int>(_38917_i)]._field_id == 7LLU) && (_38864_tokens[static_cast<jule::Int>(_38917_i)]._field_kind == jule::Str("=", 1)))) {
			this->self->_method_push_err(_39017_tok,jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
			return;
		}
		jule::Ref<_1506406d0_TypeDecl> _39822_t;
		jule::Bool _39825_ok;
		std::tie(_39822_t,_39825_ok) = this->self->_method_build_type(_38864_tokens,(&(_38917_i)),true);
		if (_39825_ok) {
			_38847_v->_field_kind=_39822_t;
			if (_38917_i >= _38864_tokens.len()) {
				return;
			}
			_39017_tok=_38864_tokens[static_cast<jule::Int>(_38917_i)];
		}
	}
	if (_39017_tok._field_id == 7LLU) {
		if (_39017_tok._field_kind != jule::Str("=", 1)) {
			this->self->_method_push_err(_39017_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return;
		}
		jule::Slice<_150640f50_Token> _41321_expr_tokens = _38864_tokens.slice(static_cast<jule::Int>(_38917_i + 1LL));
		if (_41321_expr_tokens.len() == 0LL) {
			this->self->_method_push_err(_39017_tok,jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
			return;
		}
		_38847_v->_field_expr=this->self->_method_build_expr(_41321_expr_tokens);
	} else {
		this->self->_method_push_err(_39017_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
}



inline void _150831fa0_Parser::_method_build_var_common(jule::Ref<_1506406d0_VarDecl> _42440_v,jule::Slice<_150640f50_Token> _42457_tokens) {
	_42440_v->_field_token=_42457_tokens[0LL];
	if (_42440_v->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_42440_v->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggest(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
		return;
	}
	_42440_v->_field_ident=_42440_v->_field_token._field_kind;
	jule::drop(_42440_v->_field_kind);
	if (_42457_tokens.len() > 1LL) {
		_42457_tokens=_42457_tokens.slice(1LL);
		this->self->_method_build_var_type_and_expr(_42440_v,_42457_tokens);
	}
}



inline void _150831fa0_Parser::_method_build_var_begin(jule::Ref<_1506406d0_VarDecl> _43938_v,jule::Ref<jule::Int> _43955_i,jule::Slice<_150640f50_Token> _43964_tokens) {
	_150640f50_Token _44013_tok = _43964_tokens[static_cast<jule::Int>(_43955_i)];
	{
		auto _match_expr{ _44013_tok._field_id };
		if (!((38LLU) == _match_expr)) { goto _case_end_5676837248; }
		_case_begin_5676837248:;
		{
			_43938_v->_field_statically=true;
			goto _case_begin_5676837360;
		}
		goto _match_end_5676833392;
		_case_end_5676837248:;
		if (!((34LLU) == _match_expr)) { goto _case_end_5676837360; }
		_case_begin_5676837360:;
		{
			(_43955_i)++;
			if (_43955_i >= _43964_tokens.len()) {
				(*this)._method_push_err(_44013_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			if (_43964_tokens[static_cast<jule::Int>(_43955_i)]._field_id == 36LLU) {
				_43938_v->_field_mutable=true;
				(_43955_i)++;
			}
		}
		goto _match_end_5676833392;
		_case_end_5676837360:;
		if (!((9LLU) == _match_expr)) { goto _case_end_5676835216; }
		_case_begin_5676835216:;
		{
			(_43955_i)++;
			_43938_v->_field_constant=true;
		}
		goto _match_end_5676833392;
		_case_end_5676835216:;
		_case_begin_5676834912:;
		{
			(*this)._method_push_err(_44013_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_5676833392;
		_case_end_5676834912:;
		_match_end_5676833392:;
	}
	if (_43955_i >= _43964_tokens.len()) {
		(*this)._method_push_err(_44013_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
}



inline jule::Ref<_1506406d0_VarDecl> _150831fa0_Parser::_method_build_var(jule::Slice<_150640f50_Token> _47333_tokens) {
	jule::Ref<jule::Int> _47417_i = jule::new_ref<jule::Int>(0LL);
	jule::Ref<_1506406d0_VarDecl> _47517_v = jule::new_struct<_1506406d0_VarDecl>(new( std::nothrow ) _1506406d0_VarDecl(jule::Ref<_1506406d0_ScopeTree>(),_47333_tokens[static_cast<jule::Int>(_47417_i)],jule::Str(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Slice<jule::Ref<_1506406d0_Directive>>(),jule::Ref<_1506406d0_CommentGroup>(),jule::Ref<_1506406d0_TypeDecl>(),jule::Ref<_1506406d0_Expr>()));
	this->self->_method_build_var_begin(_47517_v,_47417_i,_47333_tokens);
	if (_47417_i >= _47333_tokens.len()) {
		return jule::new_ref<_1506406d0_VarDecl>();
	}
	_47333_tokens=_47333_tokens.slice(static_cast<jule::Int>(_47417_i));
	if ((_47333_tokens[0LL]._field_id == 7LLU) && (_47333_tokens[0LL]._field_kind == jule::Str("&", 1))) {
		_47517_v->_field_reference=true;
		if (_47333_tokens.len() == 1LL) {
			return jule::new_ref<_1506406d0_VarDecl>();
		}
		_47333_tokens=_47333_tokens.slice(1LL);
	}
	this->self->_method_build_var_common(_47517_v,_47333_tokens);
	return _47517_v;
}



inline jule::Ref<_1506406d0_GenericDecl> _150831fa0_Parser::_method_build_generic(jule::Slice<_150640f50_Token> _49536_tokens) {
	if (_49536_tokens.len() > 1LL) {
		(*this)._method_push_err(_49536_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1506406d0_GenericDecl> _49917_g = jule::new_struct<_1506406d0_GenericDecl>(new( std::nothrow ) _1506406d0_GenericDecl(_49536_tokens[0LL],jule::Str()));
	if (_49917_g->_field_token._field_id != 2LLU) {
		(*this)._method_push_err(_49917_g->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggest(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
	}
	_49917_g->_field_ident=_49917_g->_field_token._field_kind;
	return _49917_g;
}



inline jule::Slice<jule::Ref<_1506406d0_GenericDecl>> _150831fa0_Parser::_method_build_generics(jule::Slice<_150640f50_Token> _51037_tokens,_150640f50_Token _51054_error_token) {
	if (_51037_tokens.len() == 0LL) {
		(*this)._method_push_err(_51054_error_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	jule::Slice<jule::Slice<_150640f50_Token>> _51618_parts;
	jule::Slice<_157e34dc0_Log> _51625_errors;
	std::tie(_51618_parts,_51625_errors) = _150831fa0_parts(_51037_tokens,8LLU,true);
	(*this)._field_errors=jule::append((*this)._field_errors,_51625_errors);
	jule::Slice<jule::Ref<_1506406d0_GenericDecl>> _51917_generics = jule::Slice<jule::Ref<_1506406d0_GenericDecl>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_51618_parts.len())));
	{
		auto __julec_range_expr = _51618_parts;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _150831fa0_i = 0;
			jule::Slice<_150640f50_Token> _150831fa0_part = *__julec_range_begin;
			_iter_begin_5676875824:;
			{
				if (_51618_parts.len() > 0LL) {
					_51917_generics[static_cast<jule::Int>(_150831fa0_i)]=(*this)._method_build_generic(_150831fa0_part);
				}
			}
			_iter_next_5676875824:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_150831fa0_i; _150831fa0_part = *__julec_range_begin; goto _iter_begin_5676875824; }
			_iter_end_5676875824:;
		}
	}
	return _51917_generics;
}



inline jule::Ref<_1506406d0_ParamDecl> _150831fa0_Parser::_method_build_self_param(jule::Slice<_150640f50_Token> _52939_tokens) {
	if (_52939_tokens.len() == 0LL) {
		return jule::new_ref<_1506406d0_ParamDecl>();
	}
	jule::Ref<_1506406d0_ParamDecl> _53417_param = jule::new_struct<_1506406d0_ParamDecl>(new( std::nothrow ) _1506406d0_ParamDecl());
	jule::Int _53717_i = 0LL;
	if (_52939_tokens[static_cast<jule::Int>(_53717_i)]._field_id == 36LLU) {
		_53417_param->_field_mutable=true;
		(_53717_i)++;
		if (_53717_i >= _52939_tokens.len()) {
			(*this)._method_push_err(_52939_tokens[static_cast<jule::Int>(_53717_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1506406d0_ParamDecl>();
		}
	}
	if (_52939_tokens[static_cast<jule::Int>(_53717_i)]._field_kind == jule::Str("&", 1)) {
		_53417_param->_field_ident=jule::Str("&", 1);
		(_53717_i)++;
		if (_53717_i >= _52939_tokens.len()) {
			(*this)._method_push_err(_52939_tokens[static_cast<jule::Int>(_53717_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1506406d0_ParamDecl>();
		}
	}
	if (_52939_tokens[static_cast<jule::Int>(_53717_i)]._field_id == 28LLU) {
		_53417_param->_field_ident+=jule::Str("self", 4);
		_53417_param->_field_token=_52939_tokens[static_cast<jule::Int>(_53717_i)];
		(_53717_i)++;
		if (_53717_i < _52939_tokens.len()) {
			(*this)._method_push_err(_52939_tokens[static_cast<jule::Int>(_53717_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		}
	}
	return _53417_param;
}



inline void _150831fa0_Parser::_method_param_type_begin(jule::Ref<_1506406d0_ParamDecl> _56839_param,jule::Int& _56863_i,jule::Slice<_150640f50_Token> _56871_tokens) {
	_iter_begin_5676906672:;
	if (!(_56863_i < _56871_tokens.len())) { goto _iter_end_5676906672; }
	{
		_150640f50_Token _57017_token = _56871_tokens[static_cast<jule::Int>(_56863_i)];
		if (_57017_token._field_id != 7LLU) {
			return;
		} else if (_57017_token._field_kind != jule::Str("...", 3)) {
			return;
		}
		if (_56839_param->_field_variadic) {
			(*this)._method_push_err(_57017_token,jule::Str("define is already variadic", 26),jule::Slice<jule::Any>({}));
			goto _iter_next_5676906672;
		}
		_56839_param->_field_variadic=true;
	}
	_iter_next_5676906672:;
	(_56863_i)++;
	goto _iter_begin_5676906672;
	_iter_end_5676906672:;
}



inline void _150831fa0_Parser::_method_build_param_type(jule::Ref<_1506406d0_ParamDecl> _58540_param,jule::Slice<_150640f50_Token> _58563_tokens,jule::Bool _58580_must_pure) {
	jule::Int _58617_i = 0LL;
	if ((!(_58580_must_pure))) {
		this->self->_method_param_type_begin(_58540_param,_58617_i,_58563_tokens);
		if (_58617_i >= _58563_tokens.len()) {
			return;
		}
	}
	std::tie(_58540_param->_field_kind,std::ignore) = this->self->_method_build_type(_58563_tokens,(&(_58617_i)),true);
	if (_58617_i < _58563_tokens.len()) {
		this->self->_method_push_err(_58563_tokens[static_cast<jule::Int>(_58617_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
}



inline void _150831fa0_Parser::_method_param_body_id(jule::Ref<_1506406d0_ParamDecl> _59932_param,_150640f50_Token _59951_token) {
	if (_150640f50_is_ignore_ident(_59951_token._field_kind)) {
		_59932_param->_field_ident=jule::Str("<anonymous>", 11);
		return;
	}
	_59932_param->_field_ident=_59951_token._field_kind;
}



inline void _150831fa0_Parser::_method_build_param_body(jule::Ref<_1506406d0_ParamDecl> _60740_param,jule::Ref<jule::Int> _60763_i,jule::Slice<_150640f50_Token> _60776_tokens,jule::Bool _60793_must_pure) {
	this->self->_method_param_body_id(_60740_param,_60776_tokens[static_cast<jule::Int>(_60763_i)]);
	_150640f50_Token _60917_tok = _60776_tokens[static_cast<jule::Int>(_60763_i)];
	if ((_60763_i + 1LL) >= _60776_tokens.len()) {
		return;
	} else if (((_60776_tokens.len() - _60763_i) - 1LL) < 2LL) {
		this->self->_method_push_err(_60917_tok,jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
		return;
	}
	_60917_tok=_60776_tokens[static_cast<jule::Int>(_60763_i + 1LL)];
	if (_60917_tok._field_id != 11LLU) {
		this->self->_method_build_param_type(_60740_param,_60776_tokens,_60793_must_pure);
		return;
	}
	_60776_tokens=_60776_tokens.slice(static_cast<jule::Int>(_60763_i + 2LL));
	this->self->_method_build_param_type(_60740_param,_60776_tokens,_60793_must_pure);
}



inline jule::Ref<_1506406d0_ParamDecl> _150831fa0_Parser::_method_build_param(jule::Slice<_150640f50_Token> _62835_tokens,jule::Bool _62852_must_pure) {
	jule::Ref<_1506406d0_ParamDecl> _62917_param = jule::new_struct<_1506406d0_ParamDecl>(new( std::nothrow ) _1506406d0_ParamDecl(_62835_tokens[0LL],jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1506406d0_TypeDecl>(),jule::Str()));
	if (_62917_param->_field_token._field_id == 36LLU) {
		_62917_param->_field_mutable=true;
		if (_62835_tokens.len() == 1LL) {
			this->self->_method_push_err(_62835_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1506406d0_ParamDecl>();
		}
		_62835_tokens=_62835_tokens.slice(1LL);
		_62917_param->_field_token=_62835_tokens[0LL];
	}
	if (_62835_tokens.len() >= 3LL) {
		if ((_62917_param->_field_token._field_id == 7LLU) && (_62917_param->_field_token._field_kind == jule::Str("&", 1))) {
			if (_62835_tokens.len() == 1LL) {
				this->self->_method_push_err(_62835_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return jule::new_ref<_1506406d0_ParamDecl>();
			}
			if ((_62835_tokens[1LL]._field_id == 2LLU) && (_62835_tokens[2LL]._field_id == 11LLU)) {
				_62917_param->_field_reference=true;
				_62835_tokens=_62835_tokens.slice(1LL);
				_62917_param->_field_token=_62835_tokens[0LL];
			}
		}
	}
	if (_62917_param->_field_token._field_id != 2LLU) {
		_62917_param->_field_ident=jule::Str("<anonymous>", 11);
		this->self->_method_build_param_type(_62917_param,_62835_tokens,_62852_must_pure);
	} else {
		jule::Ref<jule::Int> _66521_i = jule::new_ref<jule::Int>(0LL);
		this->self->_method_build_param_body(_62917_param,_66521_i,_62835_tokens,_62852_must_pure);
	}
	return _62917_param;
}



inline void _150831fa0_Parser::_method_check_params(jule::Slice<jule::Ref<_1506406d0_ParamDecl>> _67235_params) {
	{
		auto __julec_range_expr = _67235_params;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_1506406d0_ParamDecl> _150831fa0_param = *__julec_range_begin;
			_iter_begin_5676972144:;
			{
				if (_150831fa0_param->_method_is_self() || jule::real(_150831fa0_param->_field_kind)) {
					goto _iter_next_5676972144;
				}
				if (_150831fa0_param->_field_token._field_id == 0LLU) {
					(*this)._method_push_err(_150831fa0_param->_field_token,jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
				} else {
					_150831fa0_param->_field_kind=jule::new_struct<_1506406d0_TypeDecl>(new( std::nothrow ) _1506406d0_TypeDecl(_150831fa0_param->_field_token,jule::Any(jule::new_struct<_1506406d0_IdentTypeDecl>(new( std::nothrow ) _1506406d0_IdentTypeDecl(_150831fa0_param->_field_token,_150831fa0_param->_field_token._field_kind,jule::Bool(),jule::Slice<jule::Ref<_1506406d0_TypeDecl>>())))));
					_150831fa0_param->_field_ident=jule::Str("<anonymous>", 11);
					_150831fa0_param->_field_token=_150640f50_Token();
				}
			}
			_iter_next_5676972144:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _150831fa0_param = *__julec_range_begin; goto _iter_begin_5676972144; }
			_iter_end_5676972144:;
		}
	}
}



inline jule::Slice<jule::Ref<_1506406d0_ParamDecl>> _150831fa0_Parser::_method_build_params(jule::Slice<_150640f50_Token> _69336_tokens,jule::Bool _69353_method,jule::Bool _69367_must_pure) {
	jule::Slice<jule::Slice<_150640f50_Token>> _69418_parts;
	jule::Slice<_157e34dc0_Log> _69425_errs;
	std::tie(_69418_parts,_69425_errs) = _150831fa0_parts(_69336_tokens,8LLU,true);
	this->self->_field_errors=jule::append(this->self->_field_errors,_69425_errs);
	if (_69418_parts.len() == 0LL) {
		return nullptr;
	}
	jule::Slice<jule::Ref<_1506406d0_ParamDecl>> _70017_params = nullptr;
	if (_69353_method && (_69418_parts.len() > 0LL)) {
		jule::Ref<_1506406d0_ParamDecl> _70221_param = this->self->_method_build_self_param(_69418_parts[0LL]);
		if (jule::real(_70221_param) && _70221_param->_method_is_self()) {
			_70017_params=jule::append(_70017_params,jule::Slice<jule::Ref<_1506406d0_ParamDecl>>({_70221_param}));
			_69418_parts=_69418_parts.slice(1LL);
		}
	}
	{
		auto __julec_range_expr = _69418_parts;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Slice<_150640f50_Token> _150831fa0_part = *__julec_range_begin;
			_iter_begin_5677009360:;
			{
				jule::Ref<_1506406d0_ParamDecl> _71021_param = this->self->_method_build_param(_150831fa0_part,_69367_must_pure);
				if (jule::real(_71021_param)) {
					_70017_params=jule::append(_70017_params,jule::Slice<jule::Ref<_1506406d0_ParamDecl>>({_71021_param}));
				}
			}
			_iter_next_5677009360:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _150831fa0_part = *__julec_range_begin; goto _iter_begin_5677009360; }
			_iter_end_5677009360:;
		}
	}
	this->self->_method_check_params(_70017_params);
	return _70017_params;
}



inline std::tuple<jule::Ref<_1506406d0_RetTypeDecl>,jule::Bool> _150831fa0_Parser::_method_build_multi_ret_type(jule::Slice<_150640f50_Token> _72044_tokens,jule::Int& _72066_i) {
	jule::Bool _72093_ok = jule::Bool();
	jule::Ref<_1506406d0_RetTypeDecl> _72076_t = jule::Ref<_1506406d0_RetTypeDecl>();
	_72076_t=jule::new_struct<_1506406d0_RetTypeDecl>(new( std::nothrow ) _1506406d0_RetTypeDecl());
	(_72066_i)++;
	if (_72066_i >= _72044_tokens.len()) {
		(_72066_i)--;
		std::tie(_72076_t->_field_kind,_72093_ok) = this->self->_method_build_type(_72044_tokens,(&(_72066_i)),false);
		return std::make_tuple(_72076_t,_72093_ok);
	}
	(_72066_i)--;
	jule::Slice<_150640f50_Token> _73017_range_tokens = _150831fa0_range(_72066_i,jule::Str("(", 1),jule::Str(")", 1),_72044_tokens);
	jule::Slice<jule::Ref<_1506406d0_ParamDecl>> _73117_params = this->self->_method_build_params(_73017_range_tokens,false,true);
	jule::Slice<jule::Ref<_1506406d0_TypeDecl>> _73317_types = jule::Slice<jule::Ref<_1506406d0_TypeDecl>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_73117_params.len())));
	{
		auto __julec_range_expr = _73117_params;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _150831fa0_i = 0;
			jule::Ref<_1506406d0_ParamDecl> _150831fa0_param = *__julec_range_begin;
			_iter_begin_5677030384:;
			{
				_73317_types[static_cast<jule::Int>(_150831fa0_i)]=_150831fa0_param->_field_kind;
				if (_150831fa0_param->_field_ident != jule::Str("<anonymous>", 11)) {
					_150831fa0_param->_field_token._field_kind=_150831fa0_param->_field_ident;
				} else {
					_150831fa0_param->_field_token._field_kind=jule::Str("_", 1);
				}
				_72076_t->_field_idents=jule::append(_72076_t->_field_idents,jule::Slice<_150640f50_Token>({_150831fa0_param->_field_token}));
			}
			_iter_next_5677030384:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_150831fa0_i; _150831fa0_param = *__julec_range_begin; goto _iter_begin_5677030384; }
			_iter_end_5677030384:;
		}
	}
	if (_73317_types.len() > 1LL) {
		_72076_t->_field_kind=jule::new_struct<_1506406d0_TypeDecl>(new( std::nothrow ) _1506406d0_TypeDecl(_72044_tokens[0LL],jule::Any(jule::new_struct<_1506406d0_TupleTypeDecl>(new( std::nothrow ) _1506406d0_TupleTypeDecl(_73317_types)))));
	} else {
		_72076_t->_field_kind=_73317_types[0LL];
	}
	_72093_ok=true;
	return std::make_tuple(_72076_t,_72093_ok);
}



inline std::tuple<jule::Ref<_1506406d0_RetTypeDecl>,jule::Bool> _150831fa0_Parser::_method_build_ret_type(jule::Slice<_150640f50_Token> _76038_tokens,jule::Int& _76060_i) {
	jule::Bool _76087_ok = jule::Bool();
	jule::Ref<_1506406d0_RetTypeDecl> _76070_t = jule::Ref<_1506406d0_RetTypeDecl>();
	_76070_t=jule::new_struct<_1506406d0_RetTypeDecl>(new( std::nothrow ) _1506406d0_RetTypeDecl());
	if (_76060_i >= _76038_tokens.len()) {
		return std::make_tuple(_76070_t,_76087_ok);
	}
	_150640f50_Token _76617_token = _76038_tokens[static_cast<jule::Int>(_76060_i)];
	{
		auto _match_expr{ _76617_token._field_id };
		if (!((3LLU) == _match_expr)) { goto _case_end_5677048864; }
		_case_begin_5677048864:;
		{
			if (_76617_token._field_kind == jule::Str("{", 1)) {
				return std::make_tuple(_76070_t,_76087_ok);
			}
		}
		goto _match_end_5677047520;
		_case_end_5677048864:;
		if (!((7LLU) == _match_expr)) { goto _case_end_5677048976; }
		_case_begin_5677048976:;
		{
			if (_76617_token._field_kind == jule::Str("=", 1)) {
				return std::make_tuple(_76070_t,_76087_ok);
			}
		}
		goto _match_end_5677047520;
		_case_end_5677048976:;
		if (!((11LLU) == _match_expr)) { goto _case_end_5677049088; }
		_case_begin_5677049088:;
		{
			if ((_76060_i + 1LL) >= _76038_tokens.len()) {
				this->self->_method_push_err(_76617_token,jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
				return std::make_tuple(_76070_t,_76087_ok);
			}
			(_76060_i)++;
			_76617_token=_76038_tokens[static_cast<jule::Int>(_76060_i)];
			if (_76617_token._field_id == 3LLU) {
				{
					auto _match_expr{ _76617_token._field_kind };
					if (!((jule::Str("(", 1)) == _match_expr)) { goto _case_end_5677057456; }
					_case_begin_5677057456:;
					{
						jule::Ref<_1506406d0_RetTypeDecl> _78930_decl;
						jule::Bool _78936_ok;
						std::tie(_78930_decl,_78936_ok) = this->self->_method_build_multi_ret_type(_76038_tokens,_76060_i);
						_76070_t = _78930_decl;
						_76087_ok = _78936_ok;
						return std::make_tuple(_76070_t,_76087_ok);
					}
					goto _match_end_5677055424;
					_case_end_5677057456:;
					if (!((jule::Str("{", 1)) == _match_expr)) { goto _case_end_5677057568; }
					_case_begin_5677057568:;
					{
						this->self->_method_push_err(_76617_token,jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
						return std::make_tuple(_76070_t,_76087_ok);
					}
					goto _match_end_5677055424;
					_case_end_5677057568:;
					_match_end_5677055424:;
				}
			}
			std::tie(_76070_t->_field_kind,_76087_ok) = this->self->_method_build_type(_76038_tokens,(&(_76060_i)),true);
			return std::make_tuple(_76070_t,_76087_ok);
		}
		goto _match_end_5677047520;
		_case_end_5677049088:;
		_match_end_5677047520:;
	}
	(_76060_i)++;
	this->self->_method_push_err(_76617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	return std::make_tuple(_76070_t,_76087_ok);
}



inline jule::Ref<_1506406d0_FnDecl> _150831fa0_Parser::_method_build_fn_prototype(jule::Slice<_150640f50_Token> _80842_tokens,jule::Int& _80864_i,jule::Bool _80872_method) {
	jule::Ref<_1506406d0_FnDecl> _80917_f = jule::new_struct<_1506406d0_FnDecl>(new( std::nothrow ) _1506406d0_FnDecl(_80842_tokens[static_cast<jule::Int>(_80864_i)],jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Str(),jule::Slice<jule::Ref<_1506406d0_Directive>>(),jule::Ref<_1506406d0_CommentGroup>(),jule::Ref<_1506406d0_ScopeTree>(),jule::Slice<jule::Ref<_1506406d0_GenericDecl>>(),jule::Ref<_1506406d0_RetTypeDecl>(),jule::Slice<jule::Ref<_1506406d0_ParamDecl>>()));
	if (_80917_f->_field_token._field_id == 38LLU) {
		_80917_f->_field_statically=true;
		(_80864_i)++;
		if (_80864_i >= _80842_tokens.len()) {
			this->self->_method_push_err(_80917_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1506406d0_FnDecl>();
		}
		_80917_f->_field_token=_80842_tokens[static_cast<jule::Int>(_80864_i)];
	}
	if (_80917_f->_field_token._field_id == 35LLU) {
		_80917_f->_field_unsafety=true;
		(_80864_i)++;
		if (_80864_i >= _80842_tokens.len()) {
			this->self->_method_push_err(_80917_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1506406d0_FnDecl>();
		}
		_80917_f->_field_token=_80842_tokens[static_cast<jule::Int>(_80864_i)];
	}
	(_80864_i)++;
	if (_80864_i >= _80842_tokens.len()) {
		this->self->_method_push_err(_80917_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1506406d0_FnDecl>();
	}
	_150640f50_Token _84213_tok = _80842_tokens[static_cast<jule::Int>(_80864_i)];
	if (_84213_tok._field_id == 2LLU) {
		(_80864_i)++;
		if (_80864_i >= _80842_tokens.len()) {
			this->self->_method_push_err(_80917_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1506406d0_FnDecl>();
		}
		_80917_f->_field_ident=_84213_tok._field_kind;
	} else {
		_80917_f->_field_ident=jule::Str("<anonymous>", 11);
	}
	_150640f50_Token _85413_error_token = _80842_tokens[static_cast<jule::Int>(_80864_i)];
	jule::Slice<_150640f50_Token> _85517_generics_tokens = _150831fa0_range(_80864_i,jule::Str("[", 1),jule::Str("]", 1),_80842_tokens);
	if (_85517_generics_tokens != nullptr) {
		_80917_f->_field_generics=this->self->_method_build_generics(_85517_generics_tokens,_85413_error_token);
	}
	if (_80842_tokens[static_cast<jule::Int>(_80864_i)]._field_kind != jule::Str("(", 1)) {
		this->self->_method_push_err(_80842_tokens[static_cast<jule::Int>(_80864_i)],jule::Str("missing function parentheses", 28),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1506406d0_FnDecl>();
	}
	jule::Slice<_150640f50_Token> _86517_params_toks = _150831fa0_range(_80864_i,jule::Str("(", 1),jule::Str(")", 1),_80842_tokens);
	if (_86517_params_toks.len() > 0LL) {
		_80917_f->_field_params=this->self->_method_build_params(_86517_params_toks,_80872_method,false);
	}
	std::tie(_80917_f->_field_result,std::ignore) = this->self->_method_build_ret_type(_80842_tokens,_80864_i);
	return _80917_f;
}



inline jule::Ref<_1506406d0_FnDecl> _150831fa0_Parser::_method_build_fn(jule::Slice<_150640f50_Token> _87632_tokens,jule::Bool _87649_method,jule::Bool _87663_prototype) {
	jule::Int _87717_i = 0LL;
	jule::Ref<_1506406d0_FnDecl> _87817_f = this->self->_method_build_fn_prototype(_87632_tokens,_87717_i,_87649_method);
	if (_87663_prototype) {
		if (_87717_i < _87632_tokens.len()) {
			this->self->_method_push_err(_87632_tokens[static_cast<jule::Int>(_87717_i + 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		}
		return _87817_f;
	} else if ((!(jule::real(_87817_f)))) {
		return _87817_f;
	}
	if (_87717_i >= _87632_tokens.len()) {
		this->self->_method_stop();
		this->self->_method_push_err(_87817_f->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggest(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1506406d0_FnDecl>();
	}
	jule::Slice<_150640f50_Token> _89417_block_tokens = _150831fa0_range(_87717_i,jule::Str("{", 1),jule::Str("}", 1),_87632_tokens);
	if (_89417_block_tokens != nullptr) {
		_87817_f->_field_scope=this->self->_method_build_scope(_89417_block_tokens);
		_87817_f->_field_scope->_field_unsafety=_87817_f->_field_unsafety;
		if (_87717_i < _87632_tokens.len()) {
			this->self->_method_push_err(_87632_tokens[static_cast<jule::Int>(_87717_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		}
	} else {
		this->self->_method_stop();
		this->self->_method_push_err(_87817_f->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggest(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1506406d0_FnDecl>();
	}
	return _87817_f;
}



inline jule::Slice<_150640f50_Token> _150831fa0_Parser::_method_get_use_decl_selectors(jule::Slice<_150640f50_Token> _91045_tokens) {
	jule::Int _91117_i = 0LL;
	_91045_tokens=_150831fa0_range(_91117_i,jule::Str("{", 1),jule::Str("}", 1),_91045_tokens);
	jule::Slice<jule::Slice<_150640f50_Token>> _91318_parts;
	jule::Slice<_157e34dc0_Log> _91325_errs;
	std::tie(_91318_parts,_91325_errs) = _150831fa0_parts(_91045_tokens,8LLU,true);
	if (_91325_errs.len() > 0LL) {
		(*this)._field_errors=jule::append((*this)._field_errors,_91325_errs);
		return nullptr;
	}
	jule::Slice<_150640f50_Token> _91917_selectors = jule::Slice<_150640f50_Token>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_91318_parts.len())));
	{
		auto __julec_range_expr = _91318_parts;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _150831fa0_i = 0;
			jule::Slice<_150640f50_Token> _150831fa0_part = *__julec_range_begin;
			_iter_begin_5677130064:;
			{
				if (_150831fa0_part.len() > 1LL) {
					(*this)._method_push_err(_150831fa0_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				}
				_150640f50_Token _92421_tok = _150831fa0_part[0LL];
				if ((_92421_tok._field_id != 2LLU) && (_92421_tok._field_id != 28LLU)) {
					(*this)._method_push_err(_92421_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
					(*this)._method_push_suggest(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
					goto _iter_next_5677130064;
				}
				_91917_selectors[static_cast<jule::Int>(_150831fa0_i)]=_92421_tok;
			}
			_iter_next_5677130064:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_150831fa0_i; _150831fa0_part = *__julec_range_begin; goto _iter_begin_5677130064; }
			_iter_end_5677130064:;
		}
	}
	return _91917_selectors;
}



inline void _150831fa0_Parser::_method_build_cpp_use_decl(jule::Ref<_1506406d0_UseDecl> _93541_decl,jule::Slice<_150640f50_Token> _93557_tokens) {
	if (_93557_tokens.len() > 1LL) {
		(*this)._method_push_err(_93557_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	_150640f50_Token _93913_token = _93557_tokens[0LL];
	if ((_93913_token._field_id != 6LLU) || ((_93913_token._field_kind[0LL] != '`') && (_93913_token._field_kind[0LL] != '\"'))) {
		(*this)._method_push_err(_93913_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		return;
	}
	_93541_decl->_field_cpp_linked=true;
	_93541_decl->_field_link_path=_93913_token._field_kind.slice(1LL,static_cast<jule::Int>(_93913_token._field_kind.len() - 1LL));
	if ((!(_157e348f0_is_std_header_path(_93541_decl->_field_link_path)))) {
		_93541_decl->_field_link_path=_147e135c0_join(jule::Slice<jule::Str>({_93913_token._field_file->_method_dir(),_93541_decl->_field_link_path}));
	}
}



inline void _150831fa0_Parser::_method_build_std_use_decl(jule::Ref<_1506406d0_UseDecl> _95141_decl,jule::Slice<_150640f50_Token> _95161_tokens) {
	_95141_decl->_field_std=true;
	_150640f50_Token _95417_token = _95161_tokens[0LL];
	if (_95161_tokens.len() < 3LL) {
		(*this)._method_push_err(_95417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return;
	}
	_95161_tokens=_95161_tokens.slice(2LL);
	_95417_token=_95161_tokens[static_cast<jule::Int>(_95161_tokens.len() - 1LL)];
	{
		auto _match_expr{ _95417_token._field_id };
		if (!((23LLU) == _match_expr)) { goto _case_end_5677167696; }
		_case_begin_5677167696:;
		{
			(*this)._method_push_err(_95417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_5677164256;
		_case_end_5677167696:;
		if (!((3LLU) == _match_expr)) { goto _case_end_5677167808; }
		_case_begin_5677167808:;
		{
			if (_95417_token._field_kind != jule::Str("}", 1)) {
				(*this)._method_push_err(_95417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			jule::Slice<_150640f50_Token> _97221_selectors = nullptr;
			std::tie(_95161_tokens,_97221_selectors) = _150831fa0_range_last(_95161_tokens);
			_95141_decl->_field_selected=(*this)._method_get_use_decl_selectors(_97221_selectors);
			if (_95161_tokens.len() == 0LL) {
				(*this)._method_push_err(_95417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_95417_token=_95161_tokens[static_cast<jule::Int>(_95161_tokens.len() - 1LL)];
			if (_95417_token._field_id != 23LLU) {
				(*this)._method_push_err(_95417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_95161_tokens=_95161_tokens.slice(0LL,static_cast<jule::Int>(_95161_tokens.len() - 1LL));
			if (_95161_tokens.len() == 0LL) {
				(*this)._method_push_err(_95417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
		}
		goto _match_end_5677164256;
		_case_end_5677167808:;
		if (!((7LLU) == _match_expr)) { goto _case_end_5677167920; }
		_case_begin_5677167920:;
		{
			if (_95417_token._field_kind != jule::Str("*", 1)) {
				(*this)._method_push_err(_95417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_95161_tokens=_95161_tokens.slice(0LL,static_cast<jule::Int>(_95161_tokens.len() - 1LL));
			if (_95161_tokens.len() == 0LL) {
				(*this)._method_push_err(_95417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_95417_token=_95161_tokens[static_cast<jule::Int>(_95161_tokens.len() - 1LL)];
			if (_95417_token._field_id != 23LLU) {
				(*this)._method_push_err(_95417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_95161_tokens=_95161_tokens.slice(0LL,static_cast<jule::Int>(_95161_tokens.len() - 1LL));
			if (_95161_tokens.len() == 0LL) {
				(*this)._method_push_err(_95417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_95141_decl->_field_full=true;
		}
		goto _match_end_5677164256;
		_case_end_5677167920:;
		_match_end_5677164256:;
	}
	_95141_decl->_field_link_path=jule::Str("std::", 5) + _150831fa0_tokstoa(_95161_tokens);
}



inline void _150831fa0_Parser::_method_build_ident_use_decl(jule::Ref<_1506406d0_UseDecl> _101543_decl,jule::Slice<_150640f50_Token> _101563_tokens) {
	_101543_decl->_field_std=false;
	_150640f50_Token _101817_token = _101563_tokens[static_cast<jule::Int>(_101563_tokens.len() - 1LL)];
	{
		auto _match_expr{ _101817_token._field_id };
		if (!((23LLU) == _match_expr)) { goto _case_end_5677202544; }
		_case_begin_5677202544:;
		{
			(*this)._method_push_err(_101817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_5677201920;
		_case_end_5677202544:;
		if (!((3LLU) == _match_expr)) { goto _case_end_5677202656; }
		_case_begin_5677202656:;
		{
			if (_101817_token._field_kind != jule::Str("}", 1)) {
				(*this)._method_push_err(_101817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			jule::Slice<_150640f50_Token> _103021_selectors = nullptr;
			std::tie(_101563_tokens,_103021_selectors) = _150831fa0_range_last(_101563_tokens);
			_101543_decl->_field_selected=(*this)._method_get_use_decl_selectors(_103021_selectors);
			if (_101563_tokens.len() == 0LL) {
				(*this)._method_push_err(_101817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_101817_token=_101563_tokens[static_cast<jule::Int>(_101563_tokens.len() - 1LL)];
			if (_101817_token._field_id != 23LLU) {
				(*this)._method_push_err(_101817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_101563_tokens=_101563_tokens.slice(0LL,static_cast<jule::Int>(_101563_tokens.len() - 1LL));
			if (_101563_tokens.len() == 0LL) {
				(*this)._method_push_err(_101817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
		}
		goto _match_end_5677201920;
		_case_end_5677202656:;
		if (!((7LLU) == _match_expr)) { goto _case_end_5677202768; }
		_case_begin_5677202768:;
		{
			if (_101817_token._field_kind != jule::Str("*", 1)) {
				(*this)._method_push_err(_101817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_101563_tokens=_101563_tokens.slice(0LL,static_cast<jule::Int>(_101563_tokens.len() - 1LL));
			if (_101563_tokens.len() == 0LL) {
				(*this)._method_push_err(_101817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_101817_token=_101563_tokens[static_cast<jule::Int>(_101563_tokens.len() - 1LL)];
			if (_101817_token._field_id != 23LLU) {
				(*this)._method_push_err(_101817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_101563_tokens=_101563_tokens.slice(0LL,static_cast<jule::Int>(_101563_tokens.len() - 1LL));
			if (_101563_tokens.len() == 0LL) {
				(*this)._method_push_err(_101817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_101543_decl->_field_full=true;
		}
		goto _match_end_5677201920;
		_case_end_5677202768:;
		_match_end_5677201920:;
	}
	_101543_decl->_field_link_path=_150831fa0_tokstoa(_101563_tokens);
}



inline void _150831fa0_Parser::_method_parse_use_decl(jule::Ref<_1506406d0_UseDecl> _108037_decl,jule::Slice<_150640f50_Token> _108057_tokens) {
	if (_108037_decl->_field_cpp_linked) {
		(*this)._method_build_cpp_use_decl(_108037_decl,_108057_tokens);
		return;
	}
	_150640f50_Token _108613_token = _108057_tokens[0LL];
	if (_108613_token._field_id != 2LLU) {
		(*this)._method_push_err(_108613_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggest(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
		return;
	}
	
	{
		if (!((_108613_token._field_kind == jule::Str("std", 3)))) { goto _case_end_5677242224; }
		_case_begin_5677242224:;
		{
			(*this)._method_build_std_use_decl(_108037_decl,_108057_tokens);
		}
		goto _match_end_5677241328;
		_case_end_5677242224:;
		_case_begin_5677241424:;
		{
			(*this)._method_build_ident_use_decl(_108037_decl,_108057_tokens);
		}
		goto _match_end_5677241328;
		_case_end_5677241424:;
		_match_end_5677241328:;
	}
}



inline jule::Ref<_1506406d0_UseDecl> _150831fa0_Parser::_method_build_use_decl(jule::Slice<_150640f50_Token> _110437_tokens,jule::Bool _110454_cpp_linked) {
	jule::Ref<_1506406d0_UseDecl> _110517_decl = jule::new_struct<_1506406d0_UseDecl>(new( std::nothrow ) _1506406d0_UseDecl(_110437_tokens[0LL],jule::Str(),jule::Bool(),jule::Slice<_150640f50_Token>(),_110454_cpp_linked,jule::Bool()));
	if (_110437_tokens.len() < 2LL) {
		(*this)._method_push_err(_110517_decl->_field_token,jule::Str("missing path of use statement", 29),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1506406d0_UseDecl>();
	}
	_110437_tokens=_110437_tokens.slice(1LL);
	(*this)._method_parse_use_decl(_110517_decl,_110437_tokens);
	return _110517_decl;
}



inline jule::Ref<_1506406d0_Expr> _150831fa0_Parser::_method_build_enum_item_expr(jule::Ref<jule::Int> _111844_i,jule::Slice<_150640f50_Token> _111857_tokens) {
	jule::Int _111917_brace_n = 0LL;
	jule::Int _112013_expr_start = _111844_i;
	_iter_begin_5677258992:;
	if (!(_111844_i < _111857_tokens.len())) { goto _iter_end_5677258992; }
	{
		_150640f50_Token _112217_t = _111857_tokens[static_cast<jule::Int>(_111844_i)];
		if (_112217_t._field_id == 3LLU) {
			{
				auto _match_expr{ _112217_t._field_kind };
				if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_5677263920; }
				_case_begin_5677263920:;
				{
					(_111917_brace_n)++;
					goto _iter_next_5677258992;
				}
				goto _match_end_5677262400;
				_case_end_5677263920:;
				_case_begin_5677263088:;
				{
					(_111917_brace_n)--;
				}
				goto _match_end_5677262400;
				_case_end_5677263088:;
				_match_end_5677262400:;
			}
		}
		if (_111917_brace_n > 0LL) {
			goto _iter_next_5677258992;
		}
		if ((_112217_t._field_id == 8LLU) || ((_111844_i + 1LL) >= _111857_tokens.len())) {
			jule::Slice<_150640f50_Token> _114125_expr_tokens = nullptr;
			if (_112217_t._field_id == 8LLU) {
				_114125_expr_tokens=_111857_tokens.slice(static_cast<jule::Int>(_112013_expr_start),static_cast<jule::Int>(_111844_i));
			} else {
				_114125_expr_tokens=_111857_tokens.slice(static_cast<jule::Int>(_112013_expr_start));
			}
			return this->self->_method_build_expr(_114125_expr_tokens);
		}
	}
	_iter_next_5677258992:;
	(_111844_i)++;
	goto _iter_begin_5677258992;
	_iter_end_5677258992:;
	return jule::new_ref<_1506406d0_Expr>();
}



inline jule::Slice<jule::Ref<_1506406d0_EnumItemDecl>> _150831fa0_Parser::_method_build_enum_items(jule::Slice<_150640f50_Token> _115340_tokens) {
	jule::Slice<jule::Ref<_1506406d0_EnumItemDecl>> _115417_items = jule::Slice<jule::Ref<_1506406d0_EnumItemDecl>>::alloc(0LL);
	jule::Ref<jule::Int> _115517_i = jule::new_ref<jule::Int>(0LL);
	_iter_begin_5677277216:;
	if (!(_115517_i < _115340_tokens.len())) { goto _iter_end_5677277216; }
	{
		_150640f50_Token _115721_t = _115340_tokens[static_cast<jule::Int>(_115517_i)];
		if (_115721_t._field_id == 18LLU) {
			goto _iter_next_5677277216;
		}
		jule::Ref<_1506406d0_EnumItemDecl> _116221_item = jule::new_struct<_1506406d0_EnumItemDecl>(new( std::nothrow ) _1506406d0_EnumItemDecl());
		_116221_item->_field_token=_115721_t;
		if (_116221_item->_field_token._field_id != 2LLU) {
			this->self->_method_push_err(_116221_item->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			this->self->_method_push_suggest(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
		}
		_116221_item->_field_ident=_116221_item->_field_token._field_kind;
		if (((_115517_i + 1LL) >= _115340_tokens.len()) || (_115340_tokens[static_cast<jule::Int>(_115517_i + 1LL)]._field_id == 8LLU)) {
			if ((_115517_i + 1LL) < _115340_tokens.len()) {
				(_115517_i)++;
			}
			_115417_items=jule::append(_115417_items,jule::Slice<jule::Ref<_1506406d0_EnumItemDecl>>({_116221_item}));
			goto _iter_next_5677277216;
		}
		(_115517_i)++;
		_115721_t=_115340_tokens[static_cast<jule::Int>(_115517_i)];
		(_115517_i)++;
		if ((_115721_t._field_id != 7LLU) || (_115721_t._field_kind != jule::Str("=", 1))) {
			this->self->_method_push_err(_115721_t,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			this->self->_method_push_suggest(jule::Str("expected equals \"=\" for assignment", 34),jule::Slice<jule::Any>({}));
			goto _iter_next_5677277216;
		}
		if ((_115517_i >= _115340_tokens.len()) || (_115340_tokens[static_cast<jule::Int>(_115517_i)]._field_id == 8LLU)) {
			this->self->_method_push_err(_115721_t,jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
			goto _iter_next_5677277216;
		}
		_116221_item->_field_expr=this->self->_method_build_enum_item_expr(_115517_i,_115340_tokens);
		_115417_items=jule::append(_115417_items,jule::Slice<jule::Ref<_1506406d0_EnumItemDecl>>({_116221_item}));
	}
	_iter_next_5677277216:;
	(_115517_i)++;
	goto _iter_begin_5677277216;
	_iter_end_5677277216:;
	return _115417_items;
}



inline jule::Ref<_1506406d0_EnumDecl> _150831fa0_Parser::_method_build_enum_decl(jule::Slice<_150640f50_Token> _119439_tokens) {
	if ((_119439_tokens.len() < 2LL) || (_119439_tokens.len() < 3LL)) {
		this->self->_method_push_err(_119439_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1506406d0_EnumDecl>();
	}
	jule::Ref<_1506406d0_EnumDecl> _119917_e = jule::new_struct<_1506406d0_EnumDecl>(new( std::nothrow ) _1506406d0_EnumDecl(_119439_tokens[1LL],jule::Bool(),jule::Str(),jule::Ref<_1506406d0_TypeDecl>(),jule::Slice<jule::Ref<_1506406d0_EnumItemDecl>>(),jule::Ref<_1506406d0_CommentGroup>()));
	if (_119917_e->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_119917_e->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggest(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
	}
	_119917_e->_field_ident=_119917_e->_field_token._field_kind;
	jule::Int _120717_i = 2LL;
	if (_119439_tokens[static_cast<jule::Int>(_120717_i)]._field_id == 11LLU) {
		(_120717_i)++;
		if (_120717_i >= _119439_tokens.len()) {
			this->self->_method_push_err(_119439_tokens[static_cast<jule::Int>(_120717_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return _119917_e;
		}
		std::tie(_119917_e->_field_kind,std::ignore) = this->self->_method_build_type(_119439_tokens,(&(_120717_i)),true);
		if (_120717_i >= _119439_tokens.len()) {
			this->self->_method_stop();
			this->self->_method_push_err(_119917_e->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>({}));
			this->self->_method_push_suggest(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
			return _119917_e;
		}
	} else {
		jule::drop(_119917_e->_field_kind);
	}
	jule::Slice<_150640f50_Token> _122417_item_tokens = _150831fa0_range(_120717_i,jule::Str("{", 1),jule::Str("}", 1),_119439_tokens);
	if (_122417_item_tokens == nullptr) {
		this->self->_method_stop();
		this->self->_method_push_err(_119917_e->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggest(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return _119917_e;
	} else if (_120717_i < _119439_tokens.len()) {
		this->self->_method_push_err(_119439_tokens[static_cast<jule::Int>(_120717_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	_119917_e->_field_items=this->self->_method_build_enum_items(_122417_item_tokens);
	return _119917_e;
}



inline jule::Ref<_1506406d0_FieldDecl> _150831fa0_Parser::_method_build_field(jule::Slice<_150640f50_Token> _123735_tokens) {
	jule::Ref<_1506406d0_FieldDecl> _123817_f = jule::new_struct<_1506406d0_FieldDecl>(new( std::nothrow ) _1506406d0_FieldDecl());
	_123817_f->_field_public=_123735_tokens[0LL]._field_id == 21LLU;
	if (_123817_f->_field_public) {
		if (_123735_tokens.len() == 1LL) {
			this->self->_method_push_err(_123735_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1506406d0_FieldDecl>();
		}
		_123735_tokens=_123735_tokens.slice(1LL);
	}
	_123817_f->_field_mutable=_123735_tokens[0LL]._field_id == 36LLU;
	if (_123817_f->_field_mutable) {
		if (_123735_tokens.len() == 1LL) {
			this->self->_method_push_err(_123735_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1506406d0_FieldDecl>();
		}
		_123735_tokens=_123735_tokens.slice(1LL);
	}
	_123817_f->_field_token=_123735_tokens[0LL];
	if (_123817_f->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_123817_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggest(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1506406d0_FieldDecl>();
	}
	_123817_f->_field_ident=_123817_f->_field_token._field_kind;
	if (_123735_tokens.len() == 1LL) {
		this->self->_method_push_err(_123735_tokens[0LL],jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1506406d0_FieldDecl>();
	} else if (_123735_tokens[1LL]._field_id != 11LLU) {
		this->self->_method_push_err(_123735_tokens[1LL],jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1506406d0_FieldDecl>();
	}
	_123735_tokens=_123735_tokens.slice(2LL);
	jule::Int _127517_i = 0LL;
	std::tie(_123817_f->_field_kind,std::ignore) = this->self->_method_build_type(_123735_tokens,(&(_127517_i)),true);
	if (_127517_i < _123735_tokens.len()) {
		this->self->_method_push_err(_123735_tokens[static_cast<jule::Int>(_127517_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1506406d0_FieldDecl>();
	}
	return _123817_f;
}



inline jule::Slice<jule::Ref<_1506406d0_FieldDecl>> _150831fa0_Parser::_method_build_struct_decl_fields(jule::Slice<_150640f50_Token> _128548_tokens) {
	jule::Slice<jule::Ref<_1506406d0_FieldDecl>> _128617_fields = nullptr;
	jule::Slice<jule::Ref<_1507e2370_Stmt>> _128717_stms = _1507e2370_split_stms(_128548_tokens);
	{
		auto __julec_range_expr = _128717_stms;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_1507e2370_Stmt> _150831fa0_st = *__julec_range_begin;
			_iter_begin_5677365408:;
			{
				jule::Slice<_150640f50_Token> _128921_tokens = _150831fa0_st->_field_tokens;
				if (_128921_tokens[0LL]._field_id == 18LLU) {
					goto _iter_next_5677365408;
				}
				jule::Ref<_1506406d0_FieldDecl> _129321_f = this->self->_method_build_field(_128921_tokens);
				_128617_fields=jule::append(_128617_fields,jule::Slice<jule::Ref<_1506406d0_FieldDecl>>({_129321_f}));
			}
			_iter_next_5677365408:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _150831fa0_st = *__julec_range_begin; goto _iter_begin_5677365408; }
			_iter_end_5677365408:;
		}
	}
	return _128617_fields;
}



inline jule::Ref<_1506406d0_StructDecl> _150831fa0_Parser::_method_build_struct_decl(jule::Slice<_150640f50_Token> _129941_tokens) {
	if (_129941_tokens.len() < 3LL) {
		this->self->_method_push_err(_129941_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1506406d0_StructDecl>();
	}
	jule::Int _130517_i = 1LL;
	jule::Ref<_1506406d0_StructDecl> _130617_s = jule::new_struct<_1506406d0_StructDecl>(new( std::nothrow ) _1506406d0_StructDecl(_129941_tokens[static_cast<jule::Int>(_130517_i)],jule::Str(),jule::Slice<jule::Ref<_1506406d0_FieldDecl>>(),jule::Bool(),jule::Bool(),jule::Slice<jule::Ref<_1506406d0_Directive>>(),jule::Ref<_1506406d0_CommentGroup>(),jule::Slice<jule::Ref<_1506406d0_GenericDecl>>()));
	if (_130617_s->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_130617_s->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggest(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
	}
	(_130517_i)++;
	if (_130517_i >= _129941_tokens.len()) {
		this->self->_method_push_err(_129941_tokens[static_cast<jule::Int>(_130517_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return _130617_s;
	}
	_130617_s->_field_ident=_130617_s->_field_token._field_kind;
	_150640f50_Token _132013_error_token = _129941_tokens[static_cast<jule::Int>(_130517_i)];
	jule::Slice<_150640f50_Token> _132117_generics_tokens = _150831fa0_range(_130517_i,jule::Str("[", 1),jule::Str("]", 1),_129941_tokens);
	if (_132117_generics_tokens != nullptr) {
		_130617_s->_field_generics=this->self->_method_build_generics(_132117_generics_tokens,_132013_error_token);
	}
	if (_130517_i >= _129941_tokens.len()) {
		this->self->_method_push_err(_129941_tokens[static_cast<jule::Int>(_130517_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return _130617_s;
	}
	jule::Slice<_150640f50_Token> _133017_body_tokens = _150831fa0_range(_130517_i,jule::Str("{", 1),jule::Str("}", 1),_129941_tokens);
	if (_133017_body_tokens == nullptr) {
		this->self->_method_stop();
		this->self->_method_push_err(_130617_s->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggest(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return _130617_s;
	}
	if (_130517_i < _129941_tokens.len()) {
		this->self->_method_push_err(_129941_tokens[static_cast<jule::Int>(_130517_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	_130617_s->_field_fields=this->self->_method_build_struct_decl_fields(_133017_body_tokens);
	return _130617_s;
}



inline void _150831fa0_Parser::_method_check_method_receiver(jule::Ref<_1506406d0_FnDecl> _134440_f) {
	if (_134440_f->_field_statically) {
		if ((_134440_f->_field_params.len() > 0LL) && _134440_f->_field_params[0LL]->_method_is_self()) {
			(*this)._method_push_err(_134440_f->_field_token,jule::Str("static functions cannot have receiver parameter", 47),jule::Slice<jule::Any>({}));
		}
		return;
	}
	if (_134440_f->_field_params.len() == 0LL) {
		(*this)._method_push_err(_134440_f->_field_token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>({}));
		return;
	}
	jule::Ref<_1506406d0_ParamDecl> _135713_param = _134440_f->_field_params[0LL];
	if ((!(_135713_param->_method_is_self()))) {
		(*this)._method_push_err(_134440_f->_field_token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>({}));
		return;
	}
}



inline jule::Slice<jule::Ref<_1506406d0_FnDecl>> _150831fa0_Parser::_method_build_trait_methods(jule::Slice<_150640f50_Token> _136443_tokens) {
	jule::Slice<jule::Ref<_1506406d0_FnDecl>> _136517_methods = nullptr;
	jule::Slice<jule::Ref<_1507e2370_Stmt>> _136617_stms = _1507e2370_split_stms(_136443_tokens);
	{
		auto __julec_range_expr = _136617_stms;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_1507e2370_Stmt> _150831fa0_st = *__julec_range_begin;
			_iter_begin_5677420032:;
			{
				jule::Slice<_150640f50_Token> _136821_tokens = _1507ea360_eliminate_comments(_150831fa0_st->_field_tokens);
				if (_136821_tokens.len() == 0LL) {
					goto _iter_next_5677420032;
				}
				jule::Bool _137321_is_pub = false;
				if (_136821_tokens[0LL]._field_id == 21LLU) {
					_137321_is_pub=true;
					if (_136821_tokens.len() == 1LL) {
						this->self->_method_push_err(_136821_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
						goto _iter_next_5677420032;
					}
					_136821_tokens=_136821_tokens.slice(1LL);
				}
				jule::Ref<_1506406d0_FnDecl> _138321_f = this->self->_method_build_fn(_136821_tokens,true,true);
				if (jule::real(_138321_f)) {
					if (_138321_f->_method_is_anon()) {
						this->self->_method_push_err(_138321_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
					}
					this->self->_method_check_method_receiver(_138321_f);
					if (_138321_f->_field_generics.len() > 0LL) {
						this->self->_method_push_err(_138321_f->_field_token,jule::Str("trait methods cannot have generics", 34),jule::Slice<jule::Any>({}));
					}
					_138321_f->_field_public=_137321_is_pub;
					_136517_methods=jule::append(_136517_methods,jule::Slice<jule::Ref<_1506406d0_FnDecl>>({_138321_f}));
				}
			}
			_iter_next_5677420032:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _150831fa0_st = *__julec_range_begin; goto _iter_begin_5677420032; }
			_iter_end_5677420032:;
		}
	}
	return _136517_methods;
}



inline jule::Ref<_1506406d0_TraitDecl> _150831fa0_Parser::_method_build_trait_decl(jule::Slice<_150640f50_Token> _139940_tokens) {
	if (_139940_tokens.len() < 3LL) {
		this->self->_method_push_err(_139940_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1506406d0_TraitDecl>();
	}
	jule::Ref<_1506406d0_TraitDecl> _140417_t = jule::new_struct<_1506406d0_TraitDecl>(new( std::nothrow ) _1506406d0_TraitDecl(_139940_tokens[1LL],jule::Str(),jule::Bool(),jule::Ref<_1506406d0_CommentGroup>(),jule::Slice<jule::Ref<_1506406d0_FnDecl>>()));
	if (_140417_t->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_140417_t->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggest(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
	}
	_140417_t->_field_ident=_140417_t->_field_token._field_kind;
	jule::Int _141217_i = 2LL;
	jule::Slice<_150640f50_Token> _141317_body_tokens = _150831fa0_range(_141217_i,jule::Str("{", 1),jule::Str("}", 1),_139940_tokens);
	if (_141317_body_tokens == nullptr) {
		this->self->_method_stop();
		this->self->_method_push_err(_140417_t->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggest(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1506406d0_TraitDecl>();
	}
	if (_141217_i < _139940_tokens.len()) {
		this->self->_method_push_err(_139940_tokens[static_cast<jule::Int>(_141217_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	_140417_t->_field_methods=this->self->_method_build_trait_methods(_141317_body_tokens);
	return _140417_t;
}



inline jule::Ref<_1506406d0_FnDecl> _150831fa0_Parser::_method_build_cpp_link_fn(jule::Slice<_150640f50_Token> _142741_tokens) {
	_142741_tokens=_142741_tokens.slice(1LL);
	jule::Ref<_1506406d0_FnDecl> _142917_f = this->self->_method_build_fn(_142741_tokens,false,true);
	if (jule::real(_142917_f)) {
		if (_142917_f->_method_is_anon()) {
			this->self->_method_push_err(_142917_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		}
		_142917_f->_field_cpp_linked=true;
	}
	return _142917_f;
}



inline jule::Ref<_1506406d0_VarDecl> _150831fa0_Parser::_method_build_cpp_link_var(jule::Slice<_150640f50_Token> _143942_tokens) {
	_143942_tokens=_143942_tokens.slice(1LL);
	jule::Ref<_1506406d0_VarDecl> _144117_v = this->self->_method_build_var(_143942_tokens);
	if (jule::real(_144117_v)) {
		_144117_v->_field_cpp_linked=true;
		if (jule::real(_144117_v->_field_expr)) {
			this->self->_method_push_err(_144117_v->_field_token,jule::Str("cpp linked variables cannot have expression", 43),jule::Slice<jule::Any>({}));
		}
	}
	return _144117_v;
}



inline jule::Ref<_1506406d0_StructDecl> _150831fa0_Parser::_method_build_cpp_link_struct(jule::Slice<_150640f50_Token> _145145_tokens) {
	_145145_tokens=_145145_tokens.slice(1LL);
	jule::Ref<_1506406d0_StructDecl> _145317_s = this->self->_method_build_struct_decl(_145145_tokens);
	if (jule::real(_145317_s)) {
		_145317_s->_field_cpp_linked=true;
	}
	return _145317_s;
}



inline jule::Ref<_1506406d0_TypeAliasDecl> _150831fa0_Parser::_method_build_cpp_link_type_alias(jule::Slice<_150640f50_Token> _146049_tokens) {
	_146049_tokens=_146049_tokens.slice(1LL);
	jule::Ref<_1506406d0_TypeAliasDecl> _146217_t = this->self->_method_build_type_alias_decl(_146049_tokens);
	if (jule::real(_146217_t)) {
		_146217_t->_field_cpp_linked=true;
	}
	return _146217_t;
}



inline jule::Ref<_1506406d0_UseDecl> _150831fa0_Parser::_method_build_cpp_link_use(jule::Slice<_150640f50_Token> _146942_tokens) {
	if (_146942_tokens.len() == 1LL) {
		this->self->_method_push_err(_146942_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1506406d0_UseDecl>();
	}
	_146942_tokens=_146942_tokens.slice(1LL);
	
	return this->self->_method_build_use_decl(_146942_tokens,true);
}



inline jule::Any _150831fa0_Parser::_method_build_cpp_link(jule::Slice<_150640f50_Token> _148038_tokens) {
	_150640f50_Token _148117_token = _148038_tokens[0LL];
	if (_148038_tokens.len() == 1LL) {
		this->self->_method_push_err(_148117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::Any(nullptr);
	}
	_148117_token=_148038_tokens[1LL];
	{
		auto _match_expr{ _148117_token._field_id };
		if (!((19LLU) == _match_expr)) { goto _case_end_5677498368; }
		_case_begin_5677498368:;
		{
			return jule::Any(this->self->_method_build_cpp_link_use(_148038_tokens));
		}
		goto _match_end_5677497232;
		_case_end_5677498368:;
		if (!((33LLU) == _match_expr || (35LLU) == _match_expr)) { goto _case_end_5677498480; }
		_case_begin_5677498480:;
		{
			return jule::Any(this->self->_method_build_cpp_link_fn(_148038_tokens));
		}
		goto _match_end_5677497232;
		_case_end_5677498480:;
		if (!((9LLU) == _match_expr || (34LLU) == _match_expr)) { goto _case_end_5677498592; }
		_case_begin_5677498592:;
		{
			return jule::Any(this->self->_method_build_cpp_link_var(_148038_tokens));
		}
		goto _match_end_5677497232;
		_case_end_5677498592:;
		if (!((25LLU) == _match_expr)) { goto _case_end_5677500240; }
		_case_begin_5677500240:;
		{
			return jule::Any(this->self->_method_build_cpp_link_struct(_148038_tokens));
		}
		goto _match_end_5677497232;
		_case_end_5677500240:;
		if (!((10LLU) == _match_expr)) { goto _case_end_5677500352; }
		_case_begin_5677500352:;
		{
			return jule::Any(this->self->_method_build_cpp_link_type_alias(_148038_tokens));
		}
		goto _match_end_5677497232;
		_case_end_5677500352:;
		_case_begin_5677497424:;
		{
			this->self->_method_push_err(_148117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		}
		goto _match_end_5677497232;
		_case_end_5677497424:;
		_match_end_5677497232:;
	}
	return jule::Any(nullptr);
}



inline jule::Ref<_1506406d0_FnDecl> _150831fa0_Parser::_method_get_method(jule::Slice<_150640f50_Token> _151134_tokens) {
	jule::Int _151217_i = 0LL;
	_150640f50_Token _151317_token = _151134_tokens[static_cast<jule::Int>(_151217_i)];
	if (_151317_token._field_id == 38LLU) {
		if ((_151217_i + 1LL) >= _151134_tokens.len()) {
			this->self->_method_push_err(_151317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1506406d0_FnDecl>();
		}
		(_151217_i)++;
		_151317_token=_151134_tokens[static_cast<jule::Int>(_151217_i)];
	}
	if (_151317_token._field_id == 35LLU) {
		if ((_151217_i + 1LL) >= _151134_tokens.len()) {
			this->self->_method_push_err(_151317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1506406d0_FnDecl>();
		}
		(_151217_i)++;
		_151317_token=_151134_tokens[static_cast<jule::Int>(_151217_i)];
	}
	if (_151317_token._field_id != 33LLU) {
		this->self->_method_push_err(_151317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1506406d0_FnDecl>();
	}
	jule::Ref<_1506406d0_FnDecl> _153717_f = this->self->_method_build_fn(_151134_tokens,true,false);
	if (jule::real(_153717_f) && _153717_f->_method_is_anon()) {
		this->self->_method_push_err(_153717_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	return _153717_f;
}



inline void _150831fa0_Parser::_method_parse_impl_trait(jule::Ref<_1506406d0_Impl> _154440_ipl,jule::Slice<_150640f50_Token> _154456_tokens) {
	jule::Slice<jule::Ref<_1507e2370_Stmt>> _154517_stms = _1507e2370_split_stms(_154456_tokens);
	{
		auto __julec_range_expr = _154517_stms;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_1507e2370_Stmt> _150831fa0_st = *__julec_range_begin;
			_iter_begin_5677529776:;
			{
				jule::Slice<_150640f50_Token> _154721_tokens = _150831fa0_st->_field_tokens;
				_150640f50_Token _154821_token = _154721_tokens[0LL];
				jule::Bool _154921_is_pub = false;
				{
					auto _match_expr{ _154821_token._field_id };
					if (!((18LLU) == _match_expr)) { goto _case_end_5677534992; }
					_case_begin_5677534992:;
					{
						goto _iter_next_5677529776;
					}
					goto _match_end_5677533232;
					_case_end_5677534992:;
					if (!((21LLU) == _match_expr)) { goto _case_end_5677535104; }
					_case_begin_5677535104:;
					{
						_154921_is_pub=true;
						if (_154721_tokens.len() == 1LL) {
							this->self->_method_push_err(_154721_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
							goto _iter_next_5677529776;
						}
						_154721_tokens=_154721_tokens.slice(1LL);
						if (_154721_tokens.len() > 0LL) {
							_154821_token=_154721_tokens[0LL];
						}
					}
					goto _match_end_5677533232;
					_case_end_5677535104:;
					_match_end_5677533232:;
				}
				{
					auto _match_expr{ _154821_token._field_id };
					if (!((38LLU) == _match_expr || (33LLU) == _match_expr || (35LLU) == _match_expr)) { goto _case_end_5677542512; }
					_case_begin_5677542512:;
					{
						jule::Ref<_1506406d0_FnDecl> _157125_f = this->self->_method_get_method(_154721_tokens);
						if (jule::real(_157125_f)) {
							_157125_f->_field_public=_154921_is_pub;
							this->self->_method_check_method_receiver(_157125_f);
							_154440_ipl->_field_methods=jule::append(_154440_ipl->_field_methods,jule::Slice<jule::Ref<_1506406d0_FnDecl>>({_157125_f}));
						}
					}
					goto _match_end_5677538176;
					_case_end_5677542512:;
					_case_begin_5677535488:;
					{
						this->self->_method_push_err(_154821_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
						goto _iter_next_5677529776;
					}
					goto _match_end_5677538176;
					_case_end_5677535488:;
					_match_end_5677538176:;
				}
			}
			_iter_next_5677529776:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _150831fa0_st = *__julec_range_begin; goto _iter_begin_5677529776; }
			_iter_end_5677529776:;
		}
	}
}



inline void _150831fa0_Parser::_method_parse_impl_struct(jule::Ref<_1506406d0_Impl> _158541_ipl,jule::Slice<_150640f50_Token> _158557_tokens) {
	jule::Slice<jule::Ref<_1507e2370_Stmt>> _158617_stms = _1507e2370_split_stms(_158557_tokens);
	{
		auto __julec_range_expr = _158617_stms;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_1507e2370_Stmt> _150831fa0_st = *__julec_range_begin;
			_iter_begin_5677552000:;
			{
				jule::Slice<_150640f50_Token> _158821_tokens = _150831fa0_st->_field_tokens;
				_150640f50_Token _158921_token = _158821_tokens[0LL];
				jule::Bool _159021_is_pub = false;
				{
					auto _match_expr{ _158921_token._field_id };
					if (!((18LLU) == _match_expr)) { goto _case_end_5677557216; }
					_case_begin_5677557216:;
					{
						goto _iter_next_5677552000;
					}
					goto _match_end_5677555456;
					_case_end_5677557216:;
					if (!((21LLU) == _match_expr)) { goto _case_end_5677557328; }
					_case_begin_5677557328:;
					{
						_159021_is_pub=true;
						if (_158821_tokens.len() == 1LL) {
							this->self->_method_push_err(_158821_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
							goto _iter_next_5677552000;
						}
						_158821_tokens=_158821_tokens.slice(1LL);
						if (_158821_tokens.len() > 0LL) {
							_158921_token=_158821_tokens[0LL];
						}
					}
					goto _match_end_5677555456;
					_case_end_5677557328:;
					_match_end_5677555456:;
				}
				{
					auto _match_expr{ _158921_token._field_id };
					if (!((38LLU) == _match_expr || (33LLU) == _match_expr || (35LLU) == _match_expr)) { goto _case_end_5677564736; }
					_case_begin_5677564736:;
					{
						jule::Ref<_1506406d0_FnDecl> _161225_f = this->self->_method_get_method(_158821_tokens);
						if (jule::real(_161225_f)) {
							_161225_f->_field_public=_159021_is_pub;
							this->self->_method_check_method_receiver(_161225_f);
							_158541_ipl->_field_methods=jule::append(_158541_ipl->_field_methods,jule::Slice<jule::Ref<_1506406d0_FnDecl>>({_161225_f}));
						}
					}
					goto _match_end_5677560400;
					_case_end_5677564736:;
					_case_begin_5677557712:;
					{
						this->self->_method_push_err(_158921_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
						goto _iter_next_5677552000;
					}
					goto _match_end_5677560400;
					_case_end_5677557712:;
					_match_end_5677560400:;
				}
			}
			_iter_next_5677552000:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _150831fa0_st = *__julec_range_begin; goto _iter_begin_5677552000; }
			_iter_end_5677552000:;
		}
	}
}



inline void _150831fa0_Parser::_method_parse_impl_body(jule::Ref<_1506406d0_Impl> _162639_ipl,jule::Slice<_150640f50_Token> _162655_tokens) {
	if (_162639_ipl->_method_is_trait_impl()) {
		this->self->_method_parse_impl_trait(_162639_ipl,_162655_tokens);
		return;
	}
	this->self->_method_parse_impl_struct(_162639_ipl,_162655_tokens);
}



inline jule::Ref<_1506406d0_Impl> _150831fa0_Parser::_method_build_impl(jule::Slice<_150640f50_Token> _163434_tokens) {
	_150640f50_Token _163517_token = _163434_tokens[0LL];
	if (_163434_tokens.len() < 2LL) {
		this->self->_method_push_err(_163517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1506406d0_Impl>();
	}
	_163517_token=_163434_tokens[1LL];
	if (_163517_token._field_id != 2LLU) {
		this->self->_method_push_err(_163517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggest(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1506406d0_Impl>();
	}
	if (_163434_tokens.len() < 3LL) {
		this->self->_method_push_err(_163517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1506406d0_Impl>();
	}
	jule::Ref<_1506406d0_Impl> _165017_ipl = jule::new_struct<_1506406d0_Impl>(new( std::nothrow ) _1506406d0_Impl(_163517_token,_150640f50_Token(),jule::Slice<jule::Ref<_1506406d0_FnDecl>>()));
	_163517_token=_163434_tokens[2LL];
	if (_163517_token._field_id != 12LLU) {
		if ((_163517_token._field_id == 3LLU) && (_163517_token._field_kind == jule::Str("{", 1))) {
			std::tie(_165017_ipl->_field_base,_165017_ipl->_field_dest) = std::make_tuple(_165017_ipl->_field_dest,_165017_ipl->_field_base);
			_163434_tokens=_163434_tokens.slice(2LL);
			goto _julec_label_body;
		}
		this->self->_method_push_err(_163517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1506406d0_Impl>();
	}
	if (_163434_tokens.len() < 4LL) {
		this->self->_method_push_err(_163517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1506406d0_Impl>();
	}
	_163517_token=_163434_tokens[3LL];
	if (_163517_token._field_id != 2LLU) {
		this->self->_method_push_err(_163517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggest(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1506406d0_Impl>();
	}
	_165017_ipl->_field_dest=_163517_token;
	_163434_tokens=_163434_tokens.slice(4LL);
	_julec_label_body:;
	jule::Int _168017_i = 0LL;
	jule::Slice<_150640f50_Token> _168117_body_tokens = _150831fa0_range(_168017_i,jule::Str("{", 1),jule::Str("}", 1),_163434_tokens);
	if (_168117_body_tokens == nullptr) {
		this->self->_method_stop();
		this->self->_method_push_err(_165017_ipl->_field_base,jule::Str("body is not exist", 17),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggest(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1506406d0_Impl>();
	}
	if (_168017_i < _163434_tokens.len()) {
		this->self->_method_push_err(_163434_tokens[static_cast<jule::Int>(_168017_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	this->self->_method_parse_impl_body(_165017_ipl,_168117_body_tokens);
	return _165017_ipl;
}



inline jule::Any _150831fa0_Parser::_method_build_node_data(jule::Slice<_150640f50_Token> _169539_tokens) {
	_150640f50_Token _169617_token = _169539_tokens[0LL];
	{
		auto _match_expr{ _169617_token._field_id };
		if (!((19LLU) == _match_expr)) { goto _case_end_5677620080; }
		_case_begin_5677620080:;
		{
			
			return jule::Any(this->self->_method_build_use_decl(_169539_tokens,false));
		}
		goto _match_end_5677616480;
		_case_end_5677620080:;
		if (!((33LLU) == _match_expr || (35LLU) == _match_expr)) { goto _case_end_5677620192; }
		_case_begin_5677620192:;
		{
			jule::Ref<_1506406d0_FnDecl> _170421_f = this->self->_method_build_fn(_169539_tokens,false,false);
			if (jule::real(_170421_f)) {
				_170421_f->_field_global=true;
				if (_170421_f->_method_is_anon()) {
					this->self->_method_push_err(_170421_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				}
			}
			return jule::Any(_170421_f);
		}
		goto _match_end_5677616480;
		_case_end_5677620192:;
		if (!((34LLU) == _match_expr || (9LLU) == _match_expr || (36LLU) == _match_expr || (38LLU) == _match_expr)) { goto _case_end_5677618048; }
		_case_begin_5677618048:;
		{
			return jule::Any(this->self->_method_build_var(_169539_tokens));
		}
		goto _match_end_5677616480;
		_case_end_5677618048:;
		if (!((10LLU) == _match_expr)) { goto _case_end_5677618160; }
		_case_begin_5677618160:;
		{
			return jule::Any(this->self->_method_build_type_alias_decl(_169539_tokens));
		}
		goto _match_end_5677616480;
		_case_end_5677618160:;
		if (!((24LLU) == _match_expr)) { goto _case_end_5677618272; }
		_case_begin_5677618272:;
		{
			return jule::Any(this->self->_method_build_enum_decl(_169539_tokens));
		}
		goto _match_end_5677616480;
		_case_end_5677618272:;
		if (!((25LLU) == _match_expr)) { goto _case_end_5677620912; }
		_case_begin_5677620912:;
		{
			return jule::Any(this->self->_method_build_struct_decl(_169539_tokens));
		}
		goto _match_end_5677616480;
		_case_end_5677620912:;
		if (!((29LLU) == _match_expr)) { goto _case_end_5677621024; }
		_case_begin_5677621024:;
		{
			return jule::Any(this->self->_method_build_trait_decl(_169539_tokens));
		}
		goto _match_end_5677616480;
		_case_end_5677621024:;
		if (!((30LLU) == _match_expr)) { goto _case_end_5677621136; }
		_case_begin_5677621136:;
		{
			return jule::Any(this->self->_method_build_impl(_169539_tokens));
		}
		goto _match_end_5677616480;
		_case_end_5677621136:;
		if (!((31LLU) == _match_expr)) { goto _case_end_5677621248; }
		_case_begin_5677621248:;
		{
			return this->self->_method_build_cpp_link(_169539_tokens);
		}
		goto _match_end_5677616480;
		_case_end_5677621248:;
		if (!((18LLU) == _match_expr)) { goto _case_end_5677621360; }
		_case_begin_5677621360:;
		{
			jule::Ref<_1506406d0_Comment> _174121_c = _150831fa0_build_comment(_169617_token);
			this->self->_method_process_comment(_174121_c);
			return jule::Any(_174121_c);
		}
		goto _match_end_5677616480;
		_case_end_5677621360:;
		_case_begin_5677617744:;
		{
			this->self->_method_push_err(_169617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::Any(nullptr);
		}
		goto _match_end_5677616480;
		_case_end_5677617744:;
		_match_end_5677616480:;
	}
}



inline void _150831fa0_Parser::_method_check_comment_group(_1506406d0_Node _175138_node) {
	if ((!(jule::real((*this)._field_comment_group)))) {
		return;
	}
	{
		auto _match_expr{ _175138_node._field_data };
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_Comment>>() || _match_expr.type_is<jule::Ref<_1506406d0_Directive>>())) { goto _case_end_5677641968; }
		goto _match_end_5677640816;
		_case_end_5677641968:;
		_case_begin_5677641152:;
		{
			jule::drop((*this)._field_comment_group);
		}
		goto _match_end_5677640816;
		_case_end_5677641152:;
		_match_end_5677640816:;
	}
}



inline void _150831fa0_Parser::_method_check_directive(_1506406d0_Node _176534_node) {
	if ((*this)._field_directives == nullptr) {
		return;
	}
	{
		auto _match_expr{ _176534_node._field_data };
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_Directive>>() || _match_expr.type_is<jule::Ref<_1506406d0_Comment>>())) { goto _case_end_5677647840; }
		goto _match_end_5677646224;
		_case_end_5677647840:;
		_case_begin_5677645728:;
		{
			(*this)._field_directives=nullptr;
		}
		goto _match_end_5677646224;
		_case_end_5677645728:;
		_match_end_5677646224:;
	}
}



inline void _150831fa0_Parser::_method_apply_meta(_1506406d0_Node _178033_node,jule::Bool _178049_is_pub) {
	{
		auto _match_expr{ _178033_node._field_data };
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_VarDecl>>())) { goto _case_end_5677652288; }
		_case_begin_5677652288:;
		{
			jule::Ref<_1506406d0_VarDecl> _178321_v = _178033_node._field_data.operator jule::Ref<_1506406d0_VarDecl>();
			if ((!(jule::real(_178321_v)))) {
				return;
			}
			_178321_v->_field_public=_178049_is_pub;
			_178049_is_pub=false;
			_178321_v->_field_doc_comments=(*this)._field_comment_group;
			jule::drop((*this)._field_comment_group);
			_178321_v->_field_directives=(*this)._field_directives;
			(*this)._field_directives=nullptr;
		}
		goto _match_end_5677651552;
		_case_end_5677652288:;
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_FnDecl>>())) { goto _case_end_5677652400; }
		_case_begin_5677652400:;
		{
			jule::Ref<_1506406d0_FnDecl> _179721_f = _178033_node._field_data.operator jule::Ref<_1506406d0_FnDecl>();
			if ((!(jule::real(_179721_f)))) {
				return;
			}
			_179721_f->_field_public=_178049_is_pub;
			_178049_is_pub=false;
			_179721_f->_field_directives=(*this)._field_directives;
			(*this)._field_directives=nullptr;
			_179721_f->_field_doc_comments=(*this)._field_comment_group;
			jule::drop((*this)._field_comment_group);
		}
		goto _match_end_5677651552;
		_case_end_5677652400:;
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_TypeAliasDecl>>())) { goto _case_end_5677652512; }
		_case_begin_5677652512:;
		{
			jule::Ref<_1506406d0_TypeAliasDecl> _181021_tad = _178033_node._field_data.operator jule::Ref<_1506406d0_TypeAliasDecl>();
			if ((!(jule::real(_181021_tad)))) {
				return;
			}
			_181021_tad->_field_public=_178049_is_pub;
			_178049_is_pub=false;
			_181021_tad->_field_doc_comments=(*this)._field_comment_group;
			jule::drop((*this)._field_comment_group);
		}
		goto _match_end_5677651552;
		_case_end_5677652512:;
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_EnumDecl>>())) { goto _case_end_5677652624; }
		_case_begin_5677652624:;
		{
			jule::Ref<_1506406d0_EnumDecl> _182021_ed = _178033_node._field_data.operator jule::Ref<_1506406d0_EnumDecl>();
			if ((!(jule::real(_182021_ed)))) {
				return;
			}
			_182021_ed->_field_doc_comments=(*this)._field_comment_group;
			jule::drop((*this)._field_comment_group);
			_182021_ed->_field_public=_178049_is_pub;
			_178049_is_pub=false;
		}
		goto _match_end_5677651552;
		_case_end_5677652624:;
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_StructDecl>>())) { goto _case_end_5677652752; }
		_case_begin_5677652752:;
		{
			jule::Ref<_1506406d0_StructDecl> _183021_sd = _178033_node._field_data.operator jule::Ref<_1506406d0_StructDecl>();
			if ((!(jule::real(_183021_sd)))) {
				return;
			}
			_183021_sd->_field_directives=(*this)._field_directives;
			(*this)._field_directives=nullptr;
			_183021_sd->_field_doc_comments=(*this)._field_comment_group;
			jule::drop((*this)._field_comment_group);
			_183021_sd->_field_public=_178049_is_pub;
			_178049_is_pub=false;
		}
		goto _match_end_5677651552;
		_case_end_5677652752:;
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_TraitDecl>>())) { goto _case_end_5677652880; }
		_case_begin_5677652880:;
		{
			jule::Ref<_1506406d0_TraitDecl> _184221_td = _178033_node._field_data.operator jule::Ref<_1506406d0_TraitDecl>();
			if ((!(jule::real(_184221_td)))) {
				return;
			}
			_184221_td->_field_doc_comments=(*this)._field_comment_group;
			jule::drop((*this)._field_comment_group);
			_184221_td->_field_public=_178049_is_pub;
			_178049_is_pub=false;
		}
		goto _match_end_5677651552;
		_case_end_5677652880:;
		_match_end_5677651552:;
	}
	if (_178049_is_pub) {
		(*this)._method_push_err(_178033_node._field_token,jule::Str("define is not supports pub modifier", 35),jule::Slice<jule::Any>({}));
	}
}



inline void _150831fa0_Parser::_method_check_use_decl(_1506406d0_Node _185633_node) {
	{
		auto _match_expr{ _185633_node._field_data };
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_UseDecl>>())) { goto _case_end_5677688736; }
		goto _match_end_5677687136;
		_case_end_5677688736:;
		_case_begin_5677687824:;
		{
			return;
		}
		goto _match_end_5677687136;
		_case_end_5677687824:;
		_match_end_5677687136:;
	}
	if ((*this)._field_ast->_field_decls._method_len() > 0LL) {
		(*this)._method_push_err(_185633_node._field_token,jule::Str("use declarations must declared before other declarations", 56),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggest(jule::Str("move this use declaration to top of source file", 47),jule::Slice<jule::Any>({}));
	}
}



inline std::tuple<jule::Bool,jule::Any> _150831fa0_Parser::_method_build_general_scope_node_data(jule::Slice<_150640f50_Token> _187153_st) {
	jule::Any _187182_data = jule::Any();
	jule::Bool _187168_is_pub = jule::Bool();
	if (_187153_st[0LL]._field_id == 21LLU) {
		_187168_is_pub=true;
		_187153_st=_187153_st.slice(1LL);
		if (_187153_st.len() == 0LL) {
			this->self->_method_push_err(_187153_st[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return std::make_tuple(_187168_is_pub,_187182_data);
		}
	}
	_187182_data=this->self->_method_build_node_data(_187153_st);
	_187168_is_pub = _187168_is_pub;
	_187182_data = _187182_data;
	return std::make_tuple(_187168_is_pub,_187182_data);
}



inline _1506406d0_Node _150831fa0_Parser::_method_parse_node(jule::Slice<_150640f50_Token> _188634_st) {
	_1506406d0_Node _188717_node = _1506406d0_Node(_188634_st[0LL],jule::Any());
	jule::Bool _189114_is_pub;
	jule::Any _189126_data;
	std::tie(_189114_is_pub,_189126_data) = this->self->_method_build_general_scope_node_data(_188634_st);
	if (_189126_data == nullptr) {
		return _188717_node;
	}
	_188717_node._field_data=_189126_data;
	this->self->_method_apply_meta(_188717_node,_189114_is_pub);
	this->self->_method_check_comment_group(_188717_node);
	this->self->_method_check_directive(_188717_node);
	this->self->_method_check_use_decl(_188717_node);
	return _188717_node;
}



inline void _150831fa0_Parser::_method_append_node(jule::Slice<_150640f50_Token> _190535_st) {
	if (_190535_st.len() == 0LL) {
		return;
	}
	_1506406d0_Node _191017_node = this->self->_method_parse_node(_190535_st);
	if ((_191017_node._field_data == nullptr) || this->self->_method_stopped()) {
		return;
	}
	{
		if (!((_191017_node._method_is_use_decl()))) { goto _case_end_5677720560; }
		_case_begin_5677720560:;
		{
			this->self->_field_ast->_field_use_decls._method_push(_191017_node._field_data.operator jule::Ref<_1506406d0_UseDecl>());
		}
		goto _match_end_5677719136;
		_case_end_5677720560:;
		if (!((_191017_node._method_is_decl()))) { goto _case_end_5677722224; }
		_case_begin_5677722224:;
		{
			this->self->_field_ast->_field_decls._method_push(_191017_node);
		}
		goto _match_end_5677719136;
		_case_end_5677722224:;
		if (!((_191017_node._method_is_comment()))) { goto _case_end_5677720080; }
		_case_begin_5677720080:;
		{
			jule::Ref<_1506406d0_Comment> _192521_c = _191017_node._field_data.operator jule::Ref<_1506406d0_Comment>();
			this->self->_field_ast->_field_comments._method_push(_192521_c);
		}
		goto _match_end_5677719136;
		_case_end_5677720080:;
		if (!((_191017_node._method_is_impl()))) { goto _case_end_5677720192; }
		_case_begin_5677720192:;
		{
			this->self->_field_ast->_field_impls._method_push(_191017_node._field_data.operator jule::Ref<_1506406d0_Impl>());
		}
		goto _match_end_5677719136;
		_case_end_5677720192:;
		_case_begin_5677719776:;
		{
			this->self->_method_push_err(_191017_node._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		}
		goto _match_end_5677719136;
		_case_end_5677719776:;
		_match_end_5677719136:;
	}
}



inline void _150831fa0_Parser::_method_remove_range(jule::Int _193631_i,jule::Str _193639_kind,jule::Slice<_150640f50_Token>& _193651_tokens,jule::Slice<jule::Int>& _193673_ranges) {
	jule::Str _193713_close = _150831fa0_get_close_kind_of_brace(_193639_kind);
	_iter_begin_5677734320:;
	if (!(_193631_i >= 0LL)) { goto _iter_end_5677734320; }
	{
		_150640f50_Token _193917_tok = _193651_tokens[static_cast<jule::Int>(_193673_ranges[static_cast<jule::Int>(_193631_i)])];
		if (_193917_tok._field_kind != _193713_close) {
			goto _iter_next_5677734320;
		}
		_193673_ranges=jule::append(_193673_ranges.slice(0LL,static_cast<jule::Int>(_193631_i)),_193673_ranges.slice(static_cast<jule::Int>(_193631_i + 1LL)));
		goto _iter_end_5677734320;
	}
	_iter_next_5677734320:;
	(_193631_i)--;
	goto _iter_begin_5677734320;
	_iter_end_5677734320:;
}



inline void _150831fa0_Parser::_method_push_wrong_order_close_err(_150640f50_Token _194945_t,jule::Slice<_150640f50_Token>& _194956_tokens,jule::Slice<jule::Int>& _194974_ranges) {
	{
		auto _match_expr{ _194956_tokens[static_cast<jule::Int>(_194974_ranges[static_cast<jule::Int>(_194974_ranges.len() - 1LL)])]._field_kind };
		if (!((jule::Str("(", 1)) == _match_expr)) { goto _case_end_5677752064; }
		_case_begin_5677752064:;
		{
			(*this)._method_push_err(_194945_t,jule::Str("was expected parentheses close", 30),jule::Slice<jule::Any>({}));
		}
		goto _match_end_5677749920;
		_case_end_5677752064:;
		if (!((jule::Str("{", 1)) == _match_expr)) { goto _case_end_5677752176; }
		_case_begin_5677752176:;
		{
			(*this)._method_push_err(_194945_t,jule::Str("was expected brace close", 24),jule::Slice<jule::Any>({}));
		}
		goto _match_end_5677749920;
		_case_end_5677752176:;
		if (!((jule::Str("[", 1)) == _match_expr)) { goto _case_end_5677752288; }
		_case_begin_5677752288:;
		{
			(*this)._method_push_err(_194945_t,jule::Str("was expected bracket close", 26),jule::Slice<jule::Any>({}));
		}
		goto _match_end_5677749920;
		_case_end_5677752288:;
		_match_end_5677749920:;
	}
}



inline void _150831fa0_Parser::_method_push_range_close(_150640f50_Token _195735_t,jule::Str _195745_left,jule::Slice<_150640f50_Token>& _195757_tokens,jule::Slice<jule::Int>& _195779_ranges) {
	jule::I64 _195813_n = _195779_ranges.len();
	if (_195813_n == 0LL) {
		{
			auto _match_expr{ _195735_t._field_kind };
			if (!((jule::Str("]", 1)) == _match_expr)) { goto _case_end_5677764672; }
			_case_begin_5677764672:;
			{
				(*this)._method_push_err(_195735_t,jule::Str("extra closed brackets", 21),jule::Slice<jule::Any>({}));
			}
			goto _match_end_5677763984;
			_case_end_5677764672:;
			if (!((jule::Str("}", 1)) == _match_expr)) { goto _case_end_5677764800; }
			_case_begin_5677764800:;
			{
				(*this)._method_push_err(_195735_t,jule::Str("extra closed braces", 19),jule::Slice<jule::Any>({}));
			}
			goto _match_end_5677763984;
			_case_end_5677764800:;
			if (!((jule::Str(")", 1)) == _match_expr)) { goto _case_end_5677764928; }
			_case_begin_5677764928:;
			{
				(*this)._method_push_err(_195735_t,jule::Str("extra closed parentheses", 24),jule::Slice<jule::Any>({}));
			}
			goto _match_end_5677763984;
			_case_end_5677764928:;
			_match_end_5677763984:;
		}
		return;
	} else if (_195757_tokens[static_cast<jule::Int>(_195779_ranges[static_cast<jule::Int>(_195813_n - 1LL)])]._field_kind != _195745_left) {
		(*this)._method_push_wrong_order_close_err(_195735_t,_195757_tokens,_195779_ranges);
	}
	(*this)._method_remove_range(static_cast<jule::I64>(_195813_n - 1LL),_195735_t._field_kind,_195757_tokens,_195779_ranges);
}



inline void _150831fa0_Parser::_method_check_ranges(jule::Slice<_150640f50_Token> _197231_tokens) {
	jule::Slice<jule::Int> _197317_ranges = nullptr;
	{
		auto __julec_range_expr = _197231_tokens;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _150831fa0_i = 0;
			_150640f50_Token _150831fa0_token = *__julec_range_begin;
			_iter_begin_5677776896:;
			{
				if (_150831fa0_token._field_id != 3LLU) {
					goto _iter_next_5677776896;
				}
				{
					auto _match_expr{ _150831fa0_token._field_kind };
					if (!((jule::Str("(", 1)) == _match_expr || (jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr)) { goto _case_end_5677780832; }
					_case_begin_5677780832:;
					{
						_197317_ranges=jule::append(_197317_ranges,jule::Slice<jule::Int>({_150831fa0_i}));
					}
					goto _match_end_5677780560;
					_case_end_5677780832:;
					if (!((jule::Str(")", 1)) == _match_expr)) { goto _case_end_5677780944; }
					_case_begin_5677780944:;
					{
						(*this)._method_push_range_close(_150831fa0_token,jule::Str("(", 1),_197231_tokens,_197317_ranges);
					}
					goto _match_end_5677780560;
					_case_end_5677780944:;
					if (!((jule::Str("}", 1)) == _match_expr)) { goto _case_end_5677781056; }
					_case_begin_5677781056:;
					{
						(*this)._method_push_range_close(_150831fa0_token,jule::Str("{", 1),_197231_tokens,_197317_ranges);
					}
					goto _match_end_5677780560;
					_case_end_5677781056:;
					if (!((jule::Str("]", 1)) == _match_expr)) { goto _case_end_5677781168; }
					_case_begin_5677781168:;
					{
						(*this)._method_push_range_close(_150831fa0_token,jule::Str("[", 1),_197231_tokens,_197317_ranges);
					}
					goto _match_end_5677780560;
					_case_end_5677781168:;
					_match_end_5677780560:;
				}
			}
			_iter_next_5677776896:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_150831fa0_i; _150831fa0_token = *__julec_range_begin; goto _iter_begin_5677776896; }
			_iter_end_5677776896:;
		}
	}
	{
		auto __julec_range_expr = _197317_ranges;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _150831fa0_i = *__julec_range_begin;
			_iter_begin_5677785200:;
			{
				_150640f50_Token _199817_token = _197231_tokens[static_cast<jule::Int>(_150831fa0_i)];
				{
					auto _match_expr{ _199817_token._field_kind };
					if (!((jule::Str("(", 1)) == _match_expr)) { goto _case_end_5677789920; }
					_case_begin_5677789920:;
					{
						(*this)._method_push_err(_199817_token,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>({}));
					}
					goto _match_end_5677788720;
					_case_end_5677789920:;
					if (!((jule::Str("{", 1)) == _match_expr)) { goto _case_end_5677790032; }
					_case_begin_5677790032:;
					{
						(*this)._method_push_err(_199817_token,jule::Str("brace waiting to close", 22),jule::Slice<jule::Any>({}));
					}
					goto _match_end_5677788720;
					_case_end_5677790032:;
					if (!((jule::Str("[", 1)) == _match_expr)) { goto _case_end_5677790144; }
					_case_begin_5677790144:;
					{
						(*this)._method_push_err(_199817_token,jule::Str("bracket are waiting to close", 28),jule::Slice<jule::Any>({}));
					}
					goto _match_end_5677788720;
					_case_end_5677790144:;
					_match_end_5677788720:;
				}
			}
			_iter_next_5677785200:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _150831fa0_i = *__julec_range_begin; goto _iter_begin_5677785200; }
			_iter_end_5677785200:;
		}
	}
}



inline void _150831fa0_Parser::_method_parse(jule::Ref<_1506fba60_File> _200729_f) {
	this->self->_field_ast=jule::new_struct<_15053e120_Ast>(new( std::nothrow ) _15053e120_Ast(_200729_f,_1509ba170_Vector_1(),_1509ba170_Vector_2(),_1509ba170_Vector_3(),_1509ba170_Vector_4(),_1509ba170_Vector_5()));
	jule::Slice<_150640f50_Token> _201217_tokens = __jule_parser_vector_as_slice<_1509ba170_Vector_0,_150640f50_Token>(_200729_f->_method_tokens());
	this->self->_method_check_ranges(_201217_tokens);
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	jule::Slice<jule::Ref<_1507e2370_Stmt>> _201917_stms = _1507e2370_split_stms(_201217_tokens);
	jule::Int _202217_i = 0LL;
	_iter_begin_5677795888:;
	if (!(_202217_i < _201917_stms.len())) { goto _iter_end_5677795888; }
	{
		jule::Ref<_1507e2370_Stmt> _202421_st = _201917_stms[static_cast<jule::Int>(_202217_i)];
		if (_202421_st->_field_tokens.len() == 0LL) {
			return;
		}
		jule::Any _202925_data;
		std::tie(std::ignore,_202925_data) = this->self->_method_build_general_scope_node_data(_202421_st->_field_tokens);
		if (_202925_data == nullptr) {
			goto _iter_end_5677795888;
		}
		if (this->self->_method_stopped()) {
			return;
		}
		_1506406d0_Node _203821_node = _1506406d0_Node(_150640f50_Token(),_202925_data);
		if (_203821_node._method_is_comment()) {
			jule::Ref<_1506406d0_Directive> _204025_d = this->self->_method_get_directive(_203821_node._field_data.operator jule::Ref<_1506406d0_Comment>());
			if (jule::real(_204025_d) && _157eaaf20_is_top_directive(_204025_d->_field_tag)) {
				this->self->_field_ast->_field_top_directives._method_push(_204025_d);
			}
		} else {
			goto _iter_end_5677795888;
		}
	}
	_iter_next_5677795888:;
	(_202217_i)++;
	goto _iter_begin_5677795888;
	_iter_end_5677795888:;
	this->self->_field_errors=nullptr;
	_iter_begin_5677803488:;
	if (!(_202217_i < _201917_stms.len())) { goto _iter_end_5677803488; }
	{
		jule::Ref<_1507e2370_Stmt> _205321_st = _201917_stms[static_cast<jule::Int>(_202217_i)];
		this->self->_method_append_node(_205321_st->_field_tokens);
		if (this->self->_method_stopped()) {
			goto _iter_end_5677803488;
		}
	}
	_iter_next_5677803488:;
	(_202217_i)++;
	goto _iter_begin_5677803488;
	_iter_end_5677803488:;
}







std::ostream &operator<<(std::ostream &_Stream, const _150831fa0_Parser &_Src) {
	_Stream << "Parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "comment_group:" << _Src._field_comment_group << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}



inline void _150aed7c0_TypeBuilder::_method_push_err(_150640f50_Token _7827_token,jule::Str _7841_fmt) {
	if ((*this)._field_err) {
		(*this)._field_p->_method_push_err(_7827_token,_7841_fmt,jule::Slice<jule::Any>({}));
	}
}



inline void _150aed7c0_TypeBuilder::_method_push_suggest(jule::Str _8531_fmt,jule::Slice<jule::Any> _8544_args) {
	if ((*this)._field_err) {
		(*this)._field_p->_method_push_suggest(_8531_fmt,_8544_args);
	}
}



inline jule::Ref<_1506406d0_TypeDecl> _150aed7c0_TypeBuilder::_method_build_prim(void) {
	jule::Ref<_1506406d0_TypeDecl> _9217_t = _150aed7c0_build_prim_type((*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))]);
	((*((*this)._field_i)))++;
	return _9217_t;
}



inline jule::Ref<_1506406d0_TypeDecl> _150aed7c0_TypeBuilder::_method_build_namespace(void) {
	jule::Ref<_1506406d0_TypeDecl> _9817_t = jule::new_struct<_1506406d0_TypeDecl>(new( std::nothrow ) _1506406d0_TypeDecl((*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))],jule::Any()));
	jule::Ref<_1506406d0_NamespaceTypeDecl> _10217_nst = jule::new_struct<_1506406d0_NamespaceTypeDecl>(new( std::nothrow ) _1506406d0_NamespaceTypeDecl());
	jule::Int _10317_n = 0LL;
	_iter_begin_5677840688:;
	if (!((*((*this)._field_i)) < (*this)._field_tokens.len())) { goto _iter_end_5677840688; }
	{
		_150640f50_Token _10521_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
		if (jule::mod(_10317_n,2LL) == 0LL) {
			if (_10521_token._field_id != 2LLU) {
				(*this)._method_push_err(_10521_token,jule::Str("invalid syntax", 14));
				(*this)._method_push_suggest(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
			}
			_10217_nst->_field_idents=jule::append(_10217_nst->_field_idents,jule::Slice<_150640f50_Token>({_10521_token}));
		} else if (_10521_token._field_id != 23LLU) {
			goto _iter_end_5677840688;
		}
		(_10317_n)++;
	}
	_iter_next_5677840688:;
	((*((*this)._field_i)))++;
	goto _iter_begin_5677840688;
	_iter_end_5677840688:;
	_10217_nst->_field_idents=_10217_nst->_field_idents.slice(0LL,static_cast<jule::Int>(_10217_nst->_field_idents.len() - 1LL));
	((*((*this)._field_i)))--;
	_10217_nst->_field_kind=(*this)._method_build_ident()->_field_kind.operator jule::Ref<_1506406d0_IdentTypeDecl>();
	_9817_t->_field_kind=jule::Any(_10217_nst);
	return _9817_t;
}



inline jule::Slice<jule::Ref<_1506406d0_TypeDecl>> _150aed7c0_TypeBuilder::_method_build_generics(void) {
	if ((*((*this)._field_i)) >= (*this)._field_tokens.len()) {
		return nullptr;
	}
	_150640f50_Token _13113_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	if ((_13113_token._field_id != 3LLU) || (_13113_token._field_kind != jule::Str("[", 1))) {
		return nullptr;
	}
	jule::Slice<jule::Slice<_150640f50_Token>> _13617_parts = (*this)._method_ident_generics();
	if (_13617_parts.len() == 0LL) {
		(*this)._method_push_err(_13113_token,jule::Str("invalid syntax", 14));
		return nullptr;
	}
	jule::Slice<jule::Ref<_1506406d0_TypeDecl>> _14217_types = jule::Slice<jule::Ref<_1506406d0_TypeDecl>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_13617_parts.len())));
	{
		auto __julec_range_expr = _13617_parts;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _150aed7c0_i = 0;
			jule::Slice<_150640f50_Token> _150aed7c0_part = *__julec_range_begin;
			_iter_begin_5677868944:;
			{
				jule::Int _14421_j = 0LL;
				jule::Ref<_1506406d0_TypeDecl> _14522_t;
				std::tie(_14522_t,std::ignore) = (*this)._field_p->_method_build_type(_150aed7c0_part,(&(_14421_j)),true);
				if (_14421_j < _150aed7c0_part.len()) {
					(*this)._method_push_err(_150aed7c0_part[static_cast<jule::Int>(_14421_j)],jule::Str("invalid syntax", 14));
				}
				_14217_types[static_cast<jule::Int>(_150aed7c0_i)]=_14522_t;
			}
			_iter_next_5677868944:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_150aed7c0_i; _150aed7c0_part = *__julec_range_begin; goto _iter_begin_5677868944; }
			_iter_end_5677868944:;
		}
	}
	return _14217_types;
}



inline jule::Slice<jule::Slice<_150640f50_Token>> _150aed7c0_TypeBuilder::_method_ident_generics(void) {
	jule::Int _15513_first = (*((*this)._field_i));
	jule::Int _15617_range_n = 0LL;
	_iter_begin_5677878928:;
	if (!((*((*this)._field_i)) < (*this)._field_tokens.len())) { goto _iter_end_5677878928; }
	{
		_150640f50_Token _15817_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
		if (_15817_token._field_id == 3LLU) {
			{
				auto _match_expr{ _15817_token._field_kind };
				if (!((jule::Str("[", 1)) == _match_expr)) { goto _case_end_5677883104; }
				_case_begin_5677883104:;
				{
					(_15617_range_n)++;
				}
				goto _match_end_5677882368;
				_case_end_5677883104:;
				if (!((jule::Str("]", 1)) == _match_expr)) { goto _case_end_5677883216; }
				_case_begin_5677883216:;
				{
					(_15617_range_n)--;
				}
				goto _match_end_5677882368;
				_case_end_5677883216:;
				_match_end_5677882368:;
			}
		}
		if (_15617_range_n == 0LL) {
			((*((*this)._field_i)))++;
			goto _iter_end_5677878928;
		}
	}
	_iter_next_5677878928:;
	((*((*this)._field_i)))++;
	goto _iter_begin_5677878928;
	_iter_end_5677878928:;
	jule::Slice<_150640f50_Token> _17017_tokens = (*this)._field_tokens.slice(static_cast<jule::Int>(_15513_first + 1LL),static_cast<jule::Int>((*((*this)._field_i)) - 1LL));
	jule::Slice<jule::Slice<_150640f50_Token>> _17118_parts;
	jule::Slice<_157e34dc0_Log> _17125_errors;
	std::tie(_17118_parts,_17125_errors) = _150831fa0_parts(_17017_tokens,8LLU,true);
	if ((*this)._field_err) {
		(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_17125_errors);
	}
	return _17118_parts;
}



inline jule::Ref<_1506406d0_TypeDecl> _150aed7c0_TypeBuilder::_method_build_ident(void) {
	if ((((*((*this)._field_i)) + 1LL) < (*this)._field_tokens.len()) && ((*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)) + 1LL)]._field_id == 23LLU)) {
		return (*this)._method_build_namespace();
	}
	_150640f50_Token _18217_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	jule::Ref<_1506406d0_IdentTypeDecl> _18317_it = jule::new_struct<_1506406d0_IdentTypeDecl>(new( std::nothrow ) _1506406d0_IdentTypeDecl(_18217_token,_18217_token._field_kind,false,jule::Slice<jule::Ref<_1506406d0_TypeDecl>>()));
	((*((*this)._field_i)))++;
	_18317_it->_field_generics=(*this)._method_build_generics();
	return jule::new_struct<_1506406d0_TypeDecl>(new( std::nothrow ) _1506406d0_TypeDecl(_18217_token,jule::Any(_18317_it)));
}



inline jule::Ref<_1506406d0_TypeDecl> _150aed7c0_TypeBuilder::_method_build_cpp_link(void) {
	if ((((*((*this)._field_i)) + 1LL) >= (*this)._field_tokens.len()) || ((*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)) + 1LL)]._field_id != 20LLU)) {
		(*this)._method_push_err((*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))],jule::Str("invalid syntax", 14));
		return jule::new_ref<_1506406d0_TypeDecl>();
	}
	(*((*this)._field_i))+=2LL;
	jule::Ref<_1506406d0_TypeDecl> _20217_t = (*this)._method_build_ident();
	_20217_t->_field_kind.operator jule::Ref<_1506406d0_IdentTypeDecl>()->_field_cpp_linked=true;
	return _20217_t;
}



inline jule::Ref<_1506406d0_TypeDecl> _150aed7c0_TypeBuilder::_method_build_fn(void) {
	_150640f50_Token _20817_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	jule::Ref<_1506406d0_FnDecl> _20917_f = (*this)._field_p->_method_build_fn_prototype((*this)._field_tokens,(*((*this)._field_i)),false);
	if ((!(jule::real(_20917_f)))) {
		return jule::new_ref<_1506406d0_TypeDecl>();
	}
	if ((!(_20917_f->_method_is_anon()))) {
		(*this)._method_push_err(_20917_f->_field_token,jule::Str("invalid syntax", 14));
	}
	return jule::new_struct<_1506406d0_TypeDecl>(new( std::nothrow ) _1506406d0_TypeDecl(_20817_token,jule::Any(_20917_f)));
}



inline jule::Ref<_1506406d0_TypeDecl> _150aed7c0_TypeBuilder::_method_build_ptr(void) {
	_150640f50_Token _22317_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	if (((*((*this)._field_i)) + 1LL) >= (*this)._field_tokens.len()) {
		(*this)._method_push_err(_22317_token,jule::Str("invalid syntax", 14));
		return jule::new_ref<_1506406d0_TypeDecl>();
	}
	((*((*this)._field_i)))++;
	if ((*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))]._field_id == 35LLU) {
		((*((*this)._field_i)))++;
		return jule::new_struct<_1506406d0_TypeDecl>(new( std::nothrow ) _1506406d0_TypeDecl(_22317_token,jule::Any(jule::new_struct<_1506406d0_PtrTypeDecl>(new( std::nothrow ) _1506406d0_PtrTypeDecl(jule::new_ref<_1506406d0_TypeDecl>())))));
	}
	jule::Ref<_1506406d0_TypeDecl> _24017_elem = (*this)._method_step();
	if ((!(jule::real(_24017_elem)))) {
		return jule::new_ref<_1506406d0_TypeDecl>();
	}
	return jule::new_struct<_1506406d0_TypeDecl>(new( std::nothrow ) _1506406d0_TypeDecl(_22317_token,jule::Any(jule::new_struct<_1506406d0_PtrTypeDecl>(new( std::nothrow ) _1506406d0_PtrTypeDecl(_24017_elem)))));
}



inline jule::Ref<_1506406d0_TypeDecl> _150aed7c0_TypeBuilder::_method_build_ref(void) {
	_150640f50_Token _25417_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	if (((*((*this)._field_i)) + 1LL) >= (*this)._field_tokens.len()) {
		(*this)._method_push_err(_25417_token,jule::Str("invalid syntax", 14));
		return jule::new_ref<_1506406d0_TypeDecl>();
	}
	((*((*this)._field_i)))++;
	jule::Ref<_1506406d0_TypeDecl> _26117_elem = (*this)._method_step();
	if ((!(jule::real(_26117_elem)))) {
		return jule::new_ref<_1506406d0_TypeDecl>();
	}
	return jule::new_struct<_1506406d0_TypeDecl>(new( std::nothrow ) _1506406d0_TypeDecl(_25417_token,jule::Any(jule::new_struct<_1506406d0_RefTypeDecl>(new( std::nothrow ) _1506406d0_RefTypeDecl(_26117_elem)))));
}



inline jule::Ref<_1506406d0_TypeDecl> _150aed7c0_TypeBuilder::_method_build_op(void) {
	_150640f50_Token _27517_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	{
		auto _match_expr{ _27517_token._field_kind };
		if (!((jule::Str("*", 1)) == _match_expr)) { goto _case_end_5677952992; }
		_case_begin_5677952992:;
		{
			return (*this)._method_build_ptr();
		}
		goto _match_end_5677947744;
		_case_end_5677952992:;
		if (!((jule::Str("&", 1)) == _match_expr)) { goto _case_end_5677951824; }
		_case_begin_5677951824:;
		{
			return (*this)._method_build_ref();
		}
		goto _match_end_5677947744;
		_case_end_5677951824:;
		if (!((jule::Str("&&", 2)) == _match_expr)) { goto _case_end_5677952656; }
		_case_begin_5677952656:;
		{
			(*this)._method_push_err(_27517_token,jule::Str("references cannot reference to another reference", 48));
			return (*this)._method_build_ref();
		}
		goto _match_end_5677947744;
		_case_end_5677952656:;
		_case_begin_5677949760:;
		{
			(*this)._method_push_err(_27517_token,jule::Str("invalid syntax", 14));
			return jule::new_ref<_1506406d0_TypeDecl>();
		}
		goto _match_end_5677947744;
		_case_end_5677949760:;
		_match_end_5677947744:;
	}
}



inline jule::Ref<_1506406d0_TypeDecl> _150aed7c0_TypeBuilder::_method_build_slc(void) {
	_150640f50_Token _29417_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	((*((*this)._field_i)))++;
	jule::Ref<_1506406d0_TypeDecl> _29617_elem = (*this)._method_step();
	if ((!(jule::real(_29617_elem)))) {
		return jule::new_ref<_1506406d0_TypeDecl>();
	}
	return jule::new_struct<_1506406d0_TypeDecl>(new( std::nothrow ) _1506406d0_TypeDecl(_29417_token,jule::Any(jule::new_struct<_1506406d0_SlcTypeDecl>(new( std::nothrow ) _1506406d0_SlcTypeDecl(_29617_elem)))));
}



inline jule::Ref<_1506406d0_TypeDecl> _150aed7c0_TypeBuilder::_method_build_arr(void) {
	if ((*((*this)._field_i)) >= (*this)._field_tokens.len()) {
		(*this)._method_push_err((*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)) - 1LL)],jule::Str("data-type missing", 17));
		return jule::new_ref<_1506406d0_TypeDecl>();
	}
	jule::Int _31713_expr_delta = (*((*this)._field_i));
	jule::Ref<_1506406d0_TypeDecl> _31917_elem = (*this)._method_step();
	if ((!(jule::real(_31917_elem)))) {
		return jule::new_ref<_1506406d0_TypeDecl>();
	}
	jule::Ref<_1506406d0_ArrTypeDecl> _32417_arrt = jule::new_struct<_1506406d0_ArrTypeDecl>(new( std::nothrow ) _1506406d0_ArrTypeDecl(_31917_elem,jule::Ref<_1506406d0_Expr>()));
	jule::Slice<_150640f50_Token> _32821_expr_tokens;
	std::tie(std::ignore,_32821_expr_tokens) = _150831fa0_range_last((*this)._field_tokens.slice(0LL,static_cast<jule::Int>(_31713_expr_delta)));
	_32821_expr_tokens=_32821_expr_tokens.slice(1LL,static_cast<jule::Int>(_32821_expr_tokens.len() - 1LL));
	_150640f50_Token _33017_token = _32821_expr_tokens[0LL];
	if (((_32821_expr_tokens.len() == 1LL) && (_33017_token._field_id == 7LLU)) && (_33017_token._field_kind == jule::Str("...", 3))) {
	} else {
		_32417_arrt->_field_size=(*this)._field_p->_method_build_expr(_32821_expr_tokens);
	}
	return jule::new_struct<_1506406d0_TypeDecl>(new( std::nothrow ) _1506406d0_TypeDecl(_33017_token,jule::Any(_32417_arrt)));
}



inline jule::Ref<_1506406d0_TypeDecl> _150aed7c0_TypeBuilder::_method_build_map(jule::Int _34328_colon,jule::Slice<_150640f50_Token> _34344_tokens) {
	_150640f50_Token _34417_colon_token = (*this)._field_tokens[static_cast<jule::Int>(_34328_colon)];
	if ((_34328_colon == 0LL) || ((_34328_colon + 1LL) >= _34344_tokens.len())) {
		(*this)._method_push_err(_34417_colon_token,jule::Str("data-type missing", 17));
		return jule::new_ref<_1506406d0_TypeDecl>();
	}
	jule::Slice<_150640f50_Token> _34917_key_tokens = _34344_tokens.slice(0LL,static_cast<jule::Int>(_34328_colon));
	jule::Slice<_150640f50_Token> _35017_val_tokens = _34344_tokens.slice(static_cast<jule::Int>(_34328_colon + 1LL));
	jule::Ref<_1506406d0_MapTypeDecl> _35117_mapt = jule::new_struct<_1506406d0_MapTypeDecl>(new( std::nothrow ) _1506406d0_MapTypeDecl());
	jule::Int _35317_j = 0LL;
	jule::Ref<_1506406d0_TypeDecl> _35418_keyt;
	jule::Bool _35428_ok;
	std::tie(_35418_keyt,_35428_ok) = (*this)._field_p->_method_build_type(_34917_key_tokens,(&(_35317_j)),(*this)._field_err);
	if ((!(_35428_ok))) {
		return jule::new_ref<_1506406d0_TypeDecl>();
	} else if (_35317_j < _34917_key_tokens.len()) {
		(*this)._method_push_err(_34917_key_tokens[static_cast<jule::Int>(_35317_j)],jule::Str("invalid syntax", 14));
	}
	_35117_mapt->_field_key=_35418_keyt;
	_35317_j=0LL;
	jule::Ref<_1506406d0_TypeDecl> _36318_valt;
	std::tie(_36318_valt,_35428_ok) = (*this)._field_p->_method_build_type(_35017_val_tokens,(&(_35317_j)),(*this)._field_err);
	if ((!(_35428_ok))) {
		return jule::new_ref<_1506406d0_TypeDecl>();
	} else if (_35317_j < _35017_val_tokens.len()) {
		(*this)._method_push_err(_35017_val_tokens[static_cast<jule::Int>(_35317_j)],jule::Str("invalid syntax", 14));
	}
	_35117_mapt->_field_val=_36318_valt;
	return jule::new_struct<_1506406d0_TypeDecl>(new( std::nothrow ) _1506406d0_TypeDecl(_34417_colon_token,jule::Any(_35117_mapt)));
}



inline jule::Ref<_1506406d0_TypeDecl> _150aed7c0_TypeBuilder::_method_build_enumerable(void) {
	_150640f50_Token _37817_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	if (((((*((*this)._field_i)) + 2LL) >= (*this)._field_tokens.len()) || (_37817_token._field_id != 3LLU)) || (_37817_token._field_kind != jule::Str("[", 1))) {
		(*this)._method_push_err(_37817_token,jule::Str("invalid syntax", 14));
		return jule::new_ref<_1506406d0_TypeDecl>();
	}
	((*((*this)._field_i)))++;
	_37817_token=(*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	if ((_37817_token._field_id == 3LLU) && (_37817_token._field_kind == jule::Str("]", 1))) {
		return (*this)._method_build_slc();
	}
	((*((*this)._field_i)))--;
	jule::Slice<_150640f50_Token> _39218_map_tokens;
	jule::Int _39230_colon;
	std::tie(_39218_map_tokens,_39230_colon) = _150aed7c0_split_map_range((*this)._field_tokens,(*((*this)._field_i)));
	((*((*this)._field_i)))++;
	if (_39230_colon == -1LL) {
		return (*this)._method_build_arr();
	}
	return (*this)._method_build_map(_39230_colon,_39218_map_tokens);
}



inline jule::Ref<_1506406d0_TypeDecl> _150aed7c0_TypeBuilder::_method_step(void) {
	_150640f50_Token _40113_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	{
		auto _match_expr{ _40113_token._field_id };
		if (!((1LLU) == _match_expr)) { goto _case_end_5678027152; }
		_case_begin_5678027152:;
		{
			return (*this)._method_build_prim();
		}
		goto _match_end_5678020016;
		_case_end_5678027152:;
		if (!((2LLU) == _match_expr)) { goto _case_end_5678027264; }
		_case_begin_5678027264:;
		{
			return (*this)._method_build_ident();
		}
		goto _match_end_5678020016;
		_case_end_5678027264:;
		if (!((31LLU) == _match_expr)) { goto _case_end_5678024112; }
		_case_begin_5678024112:;
		{
			return (*this)._method_build_cpp_link();
		}
		goto _match_end_5678020016;
		_case_end_5678024112:;
		if (!((33LLU) == _match_expr)) { goto _case_end_5678024224; }
		_case_begin_5678024224:;
		{
			return (*this)._method_build_fn();
		}
		goto _match_end_5678020016;
		_case_end_5678024224:;
		if (!((7LLU) == _match_expr)) { goto _case_end_5678024336; }
		_case_begin_5678024336:;
		{
			return (*this)._method_build_op();
		}
		goto _match_end_5678020016;
		_case_end_5678024336:;
		if (!((3LLU) == _match_expr)) { goto _case_end_5678026544; }
		_case_begin_5678026544:;
		{
			return (*this)._method_build_enumerable();
		}
		goto _match_end_5678020016;
		_case_end_5678026544:;
		_case_begin_5678023808:;
		{
			((*((*this)._field_i)))++;
			(*this)._method_push_err(_40113_token,jule::Str("invalid syntax", 14));
			return jule::new_ref<_1506406d0_TypeDecl>();
		}
		goto _match_end_5678020016;
		_case_end_5678023808:;
		_match_end_5678020016:;
	}
}



inline std::tuple<jule::Ref<_1506406d0_TypeDecl>,jule::Bool> _150aed7c0_TypeBuilder::_method_build(void) {
	jule::Bool _43044_ok = jule::Bool();
	jule::Ref<_1506406d0_TypeDecl> _43117_root = (*this)._method_step();
	if ((!(jule::real(_43117_root)))) {
		_43044_ok = false;
		return std::make_tuple(_150aed7c0_build_void_type(),_43044_ok);
	}
	_43044_ok = true;
	return std::make_tuple(_43117_root,_43044_ok);
}







std::ostream &operator<<(std::ostream &_Stream, const _150aed7c0_TypeBuilder &_Src) {
	_Stream << "TypeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_15199b440_Const> _15199b440_Const::_static_method_new_i64(jule::I64 _1327_x) {
	return jule::new_struct<_15199b440_Const>(new( std::nothrow ) _15199b440_Const(jule::Any(_1327_x)));
}



inline jule::Ref<_15199b440_Const> _15199b440_Const::_static_method_new_u64(jule::U64 _1527_x) {
	return jule::new_struct<_15199b440_Const>(new( std::nothrow ) _15199b440_Const(jule::Any(_1527_x)));
}



inline jule::Ref<_15199b440_Const> _15199b440_Const::_static_method_new_bool(jule::Bool _1728_x) {
	return jule::new_struct<_15199b440_Const>(new( std::nothrow ) _15199b440_Const(jule::Any(_1728_x)));
}



inline jule::Ref<_15199b440_Const> _15199b440_Const::_static_method_new_str(jule::Str _1927_x) {
	return jule::new_struct<_15199b440_Const>(new( std::nothrow ) _15199b440_Const(jule::Any(_1927_x)));
}



inline jule::Ref<_15199b440_Const> _15199b440_Const::_static_method_new_f64(jule::F64 _2127_x) {
	return jule::new_struct<_15199b440_Const>(new( std::nothrow ) _15199b440_Const(jule::Any(_2127_x)));
}



inline jule::Ref<_15199b440_Const> _15199b440_Const::_static_method_new_nil(void) {
	return jule::new_struct<_15199b440_Const>(new( std::nothrow ) _15199b440_Const(jule::Any(nullptr)));
}



inline jule::I64 _15199b440_Const::_method_read_i64(void) {
	if ((!((*this)._method_is_i64()))) {
		return 0LL;
	}
	return (*this)._field_data.operator jule::I64();
}



inline jule::U64 _15199b440_Const::_method_read_u64(void) {
	if ((!((*this)._method_is_u64()))) {
		return 0LL;
	}
	return (*this)._field_data.operator jule::U64();
}



inline jule::Bool _15199b440_Const::_method_read_bool(void) {
	if ((!((*this)._method_is_bool()))) {
		return false;
	}
	return (*this)._field_data.operator jule::Bool();
}



inline jule::Str _15199b440_Const::_method_read_str(void) {
	if ((!((*this)._method_is_str()))) {
		return jule::Str("", 0);
	}
	return (*this)._field_data.operator jule::Str();
}



inline jule::F64 _15199b440_Const::_method_read_f64(void) {
	if ((!((*this)._method_is_f64()))) {
		return 0LL;
	}
	return (*this)._field_data.operator jule::F64();
}



inline jule::I64 _15199b440_Const::_method_as_i64(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::I64>())) { goto _case_end_5678126320; }
		_case_begin_5678126320:;
		{
			return (*this)._field_data.operator jule::I64();
		}
		goto _match_end_5678123872;
		_case_end_5678126320:;
		if (!(_match_expr.type_is<jule::U64>())) { goto _case_end_5678125888; }
		_case_begin_5678125888:;
		{
			return static_cast<jule::I64>((*this)._field_data.operator jule::U64());
		}
		goto _match_end_5678123872;
		_case_end_5678125888:;
		if (!(_match_expr.type_is<jule::F64>())) { goto _case_end_5678126000; }
		_case_begin_5678126000:;
		{
			return static_cast<jule::I64>((*this)._field_data.operator jule::F64());
		}
		goto _match_end_5678123872;
		_case_end_5678126000:;
		_case_begin_5678124480:;
		{
			return 0LL;
		}
		goto _match_end_5678123872;
		_case_end_5678124480:;
		_match_end_5678123872:;
	}
}



inline jule::U64 _15199b440_Const::_method_as_u64(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::U64>())) { goto _case_end_5678132528; }
		_case_begin_5678132528:;
		{
			return (*this)._field_data.operator jule::U64();
		}
		goto _match_end_5678129936;
		_case_end_5678132528:;
		if (!(_match_expr.type_is<jule::I64>())) { goto _case_end_5678132096; }
		_case_begin_5678132096:;
		{
			return static_cast<jule::U64>((*this)._field_data.operator jule::I64());
		}
		goto _match_end_5678129936;
		_case_end_5678132096:;
		if (!(_match_expr.type_is<jule::F64>())) { goto _case_end_5678132208; }
		_case_begin_5678132208:;
		{
			return static_cast<jule::U64>((*this)._field_data.operator jule::F64());
		}
		goto _match_end_5678129936;
		_case_end_5678132208:;
		_case_begin_5678126640:;
		{
			return 0LL;
		}
		goto _match_end_5678129936;
		_case_end_5678126640:;
		_match_end_5678129936:;
	}
}



inline jule::F64 _15199b440_Const::_method_as_f64(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::F64>())) { goto _case_end_5678139552; }
		_case_begin_5678139552:;
		{
			return (*this)._field_data.operator jule::F64();
		}
		goto _match_end_5678137136;
		_case_end_5678139552:;
		if (!(_match_expr.type_is<jule::I64>())) { goto _case_end_5678139120; }
		_case_begin_5678139120:;
		{
			return static_cast<jule::F64>((*this)._field_data.operator jule::I64());
		}
		goto _match_end_5678137136;
		_case_end_5678139120:;
		if (!(_match_expr.type_is<jule::U64>())) { goto _case_end_5678139232; }
		_case_begin_5678139232:;
		{
			return static_cast<jule::F64>((*this)._field_data.operator jule::U64());
		}
		goto _match_end_5678137136;
		_case_end_5678139232:;
		_case_begin_5678137712:;
		{
			return 0LL;
		}
		goto _match_end_5678137136;
		_case_end_5678137712:;
		_match_end_5678137136:;
	}
}



inline void _15199b440_Const::_method_set_i64(jule::I64 _14030_x) {
	(*this)._field_data=jule::Any(_14030_x);
}



inline void _15199b440_Const::_method_set_u64(jule::U64 _14230_x) {
	(*this)._field_data=jule::Any(_14230_x);
}



inline void _15199b440_Const::_method_set_bool(jule::Bool _14431_x) {
	(*this)._field_data=jule::Any(_14431_x);
}



inline void _15199b440_Const::_method_set_str(jule::Str _14630_x) {
	(*this)._field_data=jule::Any(_14630_x);
}



inline void _15199b440_Const::_method_set_f64(jule::F64 _14830_x) {
	(*this)._field_data=jule::Any(_14830_x);
}



inline void _15199b440_Const::_method_set_nil(void) {
	(*this)._field_data=jule::Any(nullptr);
}



inline void _15199b440_Const::_method_set_by_type(jule::F64 _15230_v,_15199b440_Const _15238_x) {
	{
		if (!((_15238_x._method_is_f64()))) { goto _case_end_5678162592; }
		_case_begin_5678162592:;
		{
			(*this)._method_set_f64(_15230_v);
		}
		goto _match_end_5678162352;
		_case_end_5678162592:;
		if (!(((*this)._method_is_f64()))) { goto _case_end_5678162720; }
		_case_begin_5678162720:;
		{
			(*this)._method_set_f64(_15230_v);
		}
		goto _match_end_5678162352;
		_case_end_5678162720:;
		if (!(((*this)._method_is_i64()))) { goto _case_end_5678162848; }
		_case_begin_5678162848:;
		{
			(*this)._method_set_i64(static_cast<jule::I64>(_15230_v));
		}
		goto _match_end_5678162352;
		_case_end_5678162848:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_5678162976; }
		_case_begin_5678162976:;
		{
			(*this)._method_set_u64(static_cast<jule::U64>(_15230_v));
		}
		goto _match_end_5678162352;
		_case_end_5678162976:;
		_match_end_5678162352:;
	}
}



inline jule::Bool _15199b440_Const::_method_is_i64(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::I64>())) { goto _case_end_5678171072; }
		_case_begin_5678171072:;
		{
			return true;
		}
		goto _match_end_5678161904;
		_case_end_5678171072:;
		_case_begin_5678170768:;
		{
			return false;
		}
		goto _match_end_5678161904;
		_case_end_5678170768:;
		_match_end_5678161904:;
	}
}



inline jule::Bool _15199b440_Const::_method_is_u64(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::U64>())) { goto _case_end_5678173616; }
		_case_begin_5678173616:;
		{
			return true;
		}
		goto _match_end_5678172544;
		_case_end_5678173616:;
		_case_begin_5678173248:;
		{
			return false;
		}
		goto _match_end_5678172544;
		_case_end_5678173248:;
		_match_end_5678172544:;
	}
}



inline jule::Bool _15199b440_Const::_method_is_bool(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Bool>())) { goto _case_end_5678176128; }
		_case_begin_5678176128:;
		{
			return true;
		}
		goto _match_end_5678175056;
		_case_end_5678176128:;
		_case_begin_5678175760:;
		{
			return false;
		}
		goto _match_end_5678175056;
		_case_end_5678175760:;
		_match_end_5678175056:;
	}
}



inline jule::Bool _15199b440_Const::_method_is_str(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Str>())) { goto _case_end_5678178640; }
		_case_begin_5678178640:;
		{
			return true;
		}
		goto _match_end_5678177568;
		_case_end_5678178640:;
		_case_begin_5678178272:;
		{
			return false;
		}
		goto _match_end_5678177568;
		_case_end_5678178272:;
		_match_end_5678177568:;
	}
}



inline jule::Bool _15199b440_Const::_method_is_f64(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::F64>())) { goto _case_end_5678181152; }
		_case_begin_5678181152:;
		{
			return true;
		}
		goto _match_end_5678180080;
		_case_end_5678181152:;
		_case_begin_5678180784:;
		{
			return false;
		}
		goto _match_end_5678180080;
		_case_end_5678180784:;
		_match_end_5678180080:;
	}
}



inline jule::Bool _15199b440_Const::_method_is_nil(void) {
	return (*this)._field_data == nullptr;
}



inline jule::Bool _15199b440_Const::_method_are_same_types(_15199b440_Const _20933_x) {
	{
		if (!(((*this)._method_is_i64() == _20933_x._method_is_i64()))) { goto _case_end_5678187424; }
		_case_begin_5678187424:;
		{
			return true;
		}
		goto _match_end_5678186864;
		_case_end_5678187424:;
		if (!(((*this)._method_is_u64() == _20933_x._method_is_u64()))) { goto _case_end_5678187536; }
		_case_begin_5678187536:;
		{
			return true;
		}
		goto _match_end_5678186864;
		_case_end_5678187536:;
		if (!(((*this)._method_is_f64() == _20933_x._method_is_f64()))) { goto _case_end_5678188656; }
		_case_begin_5678188656:;
		{
			return true;
		}
		goto _match_end_5678186864;
		_case_end_5678188656:;
		if (!(((*this)._method_is_bool() == _20933_x._method_is_bool()))) { goto _case_end_5678188768; }
		_case_begin_5678188768:;
		{
			return true;
		}
		goto _match_end_5678186864;
		_case_end_5678188768:;
		if (!(((*this)._method_is_str() == _20933_x._method_is_str()))) { goto _case_end_5678188880; }
		_case_begin_5678188880:;
		{
			return true;
		}
		goto _match_end_5678186864;
		_case_end_5678188880:;
		if (!(((*this)._method_is_nil() == _20933_x._method_is_nil()))) { goto _case_end_5678188992; }
		_case_begin_5678188992:;
		{
			return true;
		}
		goto _match_end_5678186864;
		_case_end_5678188992:;
		_case_begin_5678187008:;
		{
			return false;
		}
		goto _match_end_5678186864;
		_case_end_5678187008:;
		_match_end_5678186864:;
	}
}



inline jule::Bool _15199b440_Const::_method_and(_15199b440_Const _22722_x) {
	{
		if (!(((*this)._method_is_bool() && _22722_x._method_is_bool()))) { goto _case_end_5678199136; }
		_case_begin_5678199136:;
		{
			return (*this)._method_read_bool() && _22722_x._method_read_bool();
		}
		goto _match_end_5678198656;
		_case_end_5678199136:;
		_case_begin_5678198800:;
		{
			return false;
		}
		goto _match_end_5678198656;
		_case_end_5678198800:;
		_match_end_5678198656:;
	}
}



inline jule::Bool _15199b440_Const::_method_or(_15199b440_Const _23921_x) {
	{
		if (!(((*this)._method_is_bool() && _23921_x._method_is_bool()))) { goto _case_end_5678204768; }
		_case_begin_5678204768:;
		{
			return (*this)._method_read_bool() || _23921_x._method_read_bool();
		}
		goto _match_end_5678204288;
		_case_end_5678204768:;
		_case_begin_5678204432:;
		{
			return false;
		}
		goto _match_end_5678204288;
		_case_end_5678204432:;
		_match_end_5678204288:;
	}
}



inline jule::Bool _15199b440_Const::_method_eqs(_15199b440_Const _25122_x) {
	{
		if (!(((*this)._method_is_nil()))) { goto _case_end_5678210512; }
		_case_begin_5678210512:;
		{
			return _25122_x._method_is_nil();
		}
		goto _match_end_5678209952;
		_case_end_5678210512:;
		if (!(((*this)._method_is_bool()))) { goto _case_end_5678210624; }
		_case_begin_5678210624:;
		{
			return _25122_x._method_is_bool() && ((*this)._method_read_bool() == _25122_x._method_read_bool());
		}
		goto _match_end_5678209952;
		_case_end_5678210624:;
		if (!(((*this)._method_is_str()))) { goto _case_end_5678211744; }
		_case_begin_5678211744:;
		{
			return _25122_x._method_is_str() && ((*this)._method_read_str() == _25122_x._method_read_str());
		}
		goto _match_end_5678209952;
		_case_end_5678211744:;
		if (!(((*this)._method_is_i64()))) { goto _case_end_5678211856; }
		_case_begin_5678211856:;
		{
			return (*this)._method_read_i64() == _25122_x._method_as_i64();
		}
		goto _match_end_5678209952;
		_case_end_5678211856:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_5678211968; }
		_case_begin_5678211968:;
		{
			return (*this)._method_read_u64() == _25122_x._method_as_u64();
		}
		goto _match_end_5678209952;
		_case_end_5678211968:;
		if (!(((*this)._method_is_f64()))) { goto _case_end_5678212080; }
		_case_begin_5678212080:;
		{
			return (*this)._method_read_f64() == _25122_x._method_as_f64();
		}
		goto _match_end_5678209952;
		_case_end_5678212080:;
		_case_begin_5678210096:;
		{
			return false;
		}
		goto _match_end_5678209952;
		_case_end_5678210096:;
		_match_end_5678209952:;
	}
}



inline jule::Bool _15199b440_Const::_method_lt(_15199b440_Const _28321_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_5678225072; }
		_case_begin_5678225072:;
		{
			return (*this)._method_read_i64() < _28321_x._method_as_i64();
		}
		goto _match_end_5678224560;
		_case_end_5678225072:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_5678225184; }
		_case_begin_5678225184:;
		{
			return (*this)._method_read_u64() < _28321_x._method_as_u64();
		}
		goto _match_end_5678224560;
		_case_end_5678225184:;
		if (!(((*this)._method_is_f64()))) { goto _case_end_5678225312; }
		_case_begin_5678225312:;
		{
			return (*this)._method_read_f64() < _28321_x._method_as_f64();
		}
		goto _match_end_5678224560;
		_case_end_5678225312:;
		_case_begin_5678224704:;
		{
			return false;
		}
		goto _match_end_5678224560;
		_case_end_5678224704:;
		_match_end_5678224560:;
	}
}



inline jule::Bool _15199b440_Const::_method_gt(_15199b440_Const _30621_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_5678233792; }
		_case_begin_5678233792:;
		{
			return (*this)._method_read_i64() > _30621_x._method_as_i64();
		}
		goto _match_end_5678233280;
		_case_end_5678233792:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_5678233904; }
		_case_begin_5678233904:;
		{
			return (*this)._method_read_u64() > _30621_x._method_as_u64();
		}
		goto _match_end_5678233280;
		_case_end_5678233904:;
		if (!(((*this)._method_is_f64()))) { goto _case_end_5678234032; }
		_case_begin_5678234032:;
		{
			return (*this)._method_read_f64() > _30621_x._method_as_f64();
		}
		goto _match_end_5678233280;
		_case_end_5678234032:;
		_case_begin_5678233424:;
		{
			return false;
		}
		goto _match_end_5678233280;
		_case_end_5678233424:;
		_match_end_5678233280:;
	}
}



inline jule::Bool _15199b440_Const::_method_add(_15199b440_Const _32826_x) {
	{
		if (!(((*this)._method_is_str()))) { goto _case_end_5678242272; }
		_case_begin_5678242272:;
		{
			if ((!(_32826_x._method_is_str()))) {
				return false;
			}
			(*this)._method_set_str((*this)._method_read_str() + _32826_x._method_read_str());
		}
		goto _match_end_5678241776;
		_case_end_5678242272:;
		if (!(((*this)._method_is_f64()) || ((*this)._method_is_i64()) || ((*this)._method_is_u64()))) { goto _case_end_5678242384; }
		_case_begin_5678242384:;
		{
			(*this)._method_set_by_type(static_cast<jule::F64>((*this)._method_as_f64() + _32826_x._method_as_f64()),_32826_x);
		}
		goto _match_end_5678241776;
		_case_end_5678242384:;
		_case_begin_5678241920:;
		{
			return false;
		}
		goto _match_end_5678241776;
		_case_end_5678241920:;
		_match_end_5678241776:;
	}
	return true;
}



inline jule::Bool _15199b440_Const::_method_sub(_15199b440_Const _34926_x) {
	{
		if (!(((*this)._method_is_f64()) || ((*this)._method_is_i64()) || ((*this)._method_is_u64()))) { goto _case_end_5678252800; }
		_case_begin_5678252800:;
		{
			(*this)._method_set_by_type(static_cast<jule::F64>((*this)._method_as_f64() - _34926_x._method_as_f64()),_34926_x);
		}
		goto _match_end_5678252320;
		_case_end_5678252800:;
		_case_begin_5678252464:;
		{
			return false;
		}
		goto _match_end_5678252320;
		_case_end_5678252464:;
		_match_end_5678252320:;
	}
	return true;
}



inline jule::Bool _15199b440_Const::_method_mul(_15199b440_Const _36426_x) {
	{
		if (!(((*this)._method_is_f64()) || ((*this)._method_is_i64()) || ((*this)._method_is_u64()))) { goto _case_end_5678260096; }
		_case_begin_5678260096:;
		{
			(*this)._method_set_by_type(static_cast<jule::F64>((*this)._method_as_f64() * _36426_x._method_as_f64()),_36426_x);
		}
		goto _match_end_5678259616;
		_case_end_5678260096:;
		_case_begin_5678259760:;
		{
			return false;
		}
		goto _match_end_5678259616;
		_case_end_5678259760:;
		_match_end_5678259616:;
	}
	return true;
}



inline jule::Bool _15199b440_Const::_method_div(_15199b440_Const _38326_x) {
	{
		if (!(((*this)._method_is_f64()))) { goto _case_end_5678267008; }
		_case_begin_5678267008:;
		{
			jule::F64 _38617_l = _38326_x._method_as_f64();
			if (_38617_l == 0LL) {
				return false;
			}
			(*this)._method_set_f64(static_cast<jule::F64>(jule::div((*this)._method_read_f64(),_38617_l)));
		}
		goto _match_end_5678266496;
		_case_end_5678267008:;
		if (!(((*this)._method_is_i64()))) { goto _case_end_5678267120; }
		_case_begin_5678267120:;
		{
			jule::F64 _39317_l = _38326_x._method_as_f64();
			if (_39317_l == 0LL) {
				return false;
			}
			(*this)._method_set_f64(static_cast<jule::F64>(jule::div((*this)._method_as_f64(),_39317_l)));
		}
		goto _match_end_5678266496;
		_case_end_5678267120:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_5678267248; }
		_case_begin_5678267248:;
		{
			jule::F64 _40017_l = _38326_x._method_as_f64();
			if (_40017_l == 0LL) {
				return false;
			}
			(*this)._method_set_f64(static_cast<jule::F64>(jule::div((*this)._method_as_f64(),_40017_l)));
		}
		goto _match_end_5678266496;
		_case_end_5678267248:;
		_case_begin_5678266640:;
		{
			return false;
		}
		goto _match_end_5678266496;
		_case_end_5678266640:;
		_match_end_5678266496:;
	}
	return true;
}



inline jule::Bool _15199b440_Const::_method_mod(_15199b440_Const _41526_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_5678282864; }
		_case_begin_5678282864:;
		{
			jule::I64 _41817_l = _41526_x._method_as_i64();
			if (_41817_l == 0LL) {
				return false;
			}
			(*this)._method_set_i64(static_cast<jule::I64>(jule::mod((*this)._method_read_i64(),_41817_l)));
		}
		goto _match_end_5678282368;
		_case_end_5678282864:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_5678282976; }
		_case_begin_5678282976:;
		{
			jule::U64 _42517_l = _41526_x._method_as_u64();
			if (_42517_l == 0LL) {
				return false;
			}
			(*this)._method_set_u64(static_cast<jule::U64>(jule::mod((*this)._method_read_u64(),_42517_l)));
		}
		goto _match_end_5678282368;
		_case_end_5678282976:;
		_case_begin_5678282512:;
		{
			return false;
		}
		goto _match_end_5678282368;
		_case_end_5678282512:;
		_match_end_5678282368:;
	}
	return true;
}



inline jule::Bool _15199b440_Const::_method_bitwise_and(_15199b440_Const _43934_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_5678294720; }
		_case_begin_5678294720:;
		{
			(*this)._method_set_i64(static_cast<jule::I64>((*this)._method_read_i64() & _43934_x._method_as_i64()));
		}
		goto _match_end_5678294224;
		_case_end_5678294720:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_5678294832; }
		_case_begin_5678294832:;
		{
			(*this)._method_set_u64(static_cast<jule::U64>((*this)._method_read_u64() & _43934_x._method_as_u64()));
		}
		goto _match_end_5678294224;
		_case_end_5678294832:;
		_case_begin_5678294368:;
		{
			return false;
		}
		goto _match_end_5678294224;
		_case_end_5678294368:;
		_match_end_5678294224:;
	}
	return true;
}



inline jule::Bool _15199b440_Const::_method_bitwise_or(_15199b440_Const _45533_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_5678303248; }
		_case_begin_5678303248:;
		{
			(*this)._method_set_i64(static_cast<jule::I64>((*this)._method_read_i64() | _45533_x._method_as_i64()));
		}
		goto _match_end_5678302752;
		_case_end_5678303248:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_5678303360; }
		_case_begin_5678303360:;
		{
			(*this)._method_set_u64(static_cast<jule::U64>((*this)._method_read_u64() | _45533_x._method_as_u64()));
		}
		goto _match_end_5678302752;
		_case_end_5678303360:;
		_case_begin_5678302896:;
		{
			return false;
		}
		goto _match_end_5678302752;
		_case_end_5678302896:;
		_match_end_5678302752:;
	}
	return true;
}



inline jule::Bool _15199b440_Const::_method_xor(_15199b440_Const _47126_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_5678311968; }
		_case_begin_5678311968:;
		{
			(*this)._method_set_i64(static_cast<jule::I64>((*this)._method_read_i64() ^ _47126_x._method_as_i64()));
		}
		goto _match_end_5678311472;
		_case_end_5678311968:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_5678312080; }
		_case_begin_5678312080:;
		{
			(*this)._method_set_u64(static_cast<jule::U64>((*this)._method_read_u64() ^ _47126_x._method_as_u64()));
		}
		goto _match_end_5678311472;
		_case_end_5678312080:;
		_case_begin_5678311616:;
		{
			return false;
		}
		goto _match_end_5678311472;
		_case_end_5678311616:;
		_match_end_5678311472:;
	}
	return true;
}



inline jule::Bool _15199b440_Const::_method_lshift(_15199b440_Const _48729_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_5678320496; }
		_case_begin_5678320496:;
		{
			jule::I64 _49017_l = (*this)._method_as_i64();
			if (_49017_l < 0LL) {
				jule::U64 _49221_r = _48729_x._method_as_u64();
				(*this)._method_set_i64(static_cast<jule::I64>(_49017_l << _49221_r));
			} else {
				_15199b440_lshift_unsig((*this),_48729_x);
			}
		}
		goto _match_end_5678320000;
		_case_end_5678320496:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_5678320608; }
		_case_begin_5678320608:;
		{
			_15199b440_lshift_unsig((*this),_48729_x);
		}
		goto _match_end_5678320000;
		_case_end_5678320608:;
		_case_begin_5678320144:;
		{
			return false;
		}
		goto _match_end_5678320000;
		_case_end_5678320144:;
		_match_end_5678320000:;
	}
	return true;
}



inline jule::Bool _15199b440_Const::_method_rshift(_15199b440_Const _51029_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_5678330992; }
		_case_begin_5678330992:;
		{
			jule::I64 _51317_l = (*this)._method_as_i64();
			if (_51317_l < 0LL) {
				jule::U64 _51521_r = _51029_x._method_as_u64();
				(*this)._method_set_i64(static_cast<jule::I64>(_51317_l >> _51521_r));
			} else {
				_15199b440_rshift_unsig((*this),_51029_x);
			}
		}
		goto _match_end_5678330496;
		_case_end_5678330992:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_5678331104; }
		_case_begin_5678331104:;
		{
			_15199b440_rshift_unsig((*this),_51029_x);
		}
		goto _match_end_5678330496;
		_case_end_5678331104:;
		_case_begin_5678330640:;
		{
			return false;
		}
		goto _match_end_5678330496;
		_case_end_5678330640:;
		_match_end_5678330496:;
	}
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, const _15199b440_Const &_Src) {
	_Stream << "Const{";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _150a13110_FieldIns &_Src) {
	_Stream << "FieldIns{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _150a13110_StructIns::_method_to_str(void) {
	jule::Str _20717_kind = jule::Str("", 0);
	_20717_kind+=(*this)._field_decl->_field_ident;
	if ((*this)._field_generics.len() > 0LL) {
		_20717_kind+=jule::Str("[", 1);
		{
			auto __julec_range_expr = (*this)._field_generics;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_15177b070_TypeKind> _150a13110_g = *__julec_range_begin;
				_iter_begin_5682230336:;
				{
					_20717_kind+=_150a13110_g->_method_to_str();
					_20717_kind+=jule::Str(",", 1);
				}
				_iter_next_5682230336:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _150a13110_g = *__julec_range_begin; goto _iter_begin_5682230336; }
				_iter_end_5682230336:;
			}
		}
		_20717_kind=_20717_kind.slice(0LL,static_cast<jule::Int>(_20717_kind.len() - 1LL));
		_20717_kind+=jule::Str("]", 1);
	}
	return _20717_kind;
}



inline jule::Bool _150a13110_StructIns::_method_equals(jule::Ref<_15177b070_TypeKind> _22221_other) {
	jule::Ref<_150a13110_StructIns> _22313_s = (_22221_other).alloc->_method_strct();
	if ((!(jule::real(_22313_s)))) {
		return false;
	}
	if (((*this)._field_decl).alloc != (_22313_s->_field_decl).alloc) {
		return false;
	}
	if ((*this)._field_generics.len() != _22313_s->_field_generics.len()) {
		return false;
	}
	jule::Int _23617_i = 0LL;
	_iter_begin_5682258832:;
	if (!(_23617_i < (*this)._field_generics.len())) { goto _iter_end_5682258832; }
	{
		if ((!((*this)._field_generics[static_cast<jule::Int>(_23617_i)]->_method_equals(_22313_s->_field_generics[static_cast<jule::Int>(_23617_i)])))) {
			return false;
		}
	}
	_iter_next_5682258832:;
	(_23617_i)++;
	goto _iter_begin_5682258832;
	_iter_end_5682258832:;
	return true;
}



inline jule::Ref<_15081bcd0_Fn> _150a13110_StructIns::_method_find_method(jule::Str _25034_ident,jule::Bool _25046_statically) {
	{
		auto __julec_range_expr = (*this)._field_methods;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_15081bcd0_Fn> _150a13110_f = *__julec_range_begin;
			_iter_begin_5682266928:;
			{
				if ((_150a13110_f->_field_statically == _25046_statically) && (_150a13110_f->_field_ident == _25034_ident)) {
					return _150a13110_f;
				}
			}
			_iter_next_5682266928:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _150a13110_f = *__julec_range_begin; goto _iter_begin_5682266928; }
			_iter_end_5682266928:;
		}
	}
	return jule::new_ref<_15081bcd0_Fn>();
}



inline jule::Ref<_150a13110_FieldIns> _150a13110_StructIns::_method_find_field(jule::Str _26133_ident) {
	{
		auto __julec_range_expr = (*this)._field_fields;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_150a13110_FieldIns> _150a13110_f = *__julec_range_begin;
			_iter_begin_5682272432:;
			{
				if (_150a13110_f->_field_decl->_field_ident == _26133_ident) {
					return _150a13110_f;
				}
			}
			_iter_next_5682272432:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _150a13110_f = *__julec_range_begin; goto _iter_begin_5682272432; }
			_iter_end_5682272432:;
		}
	}
	return jule::new_ref<_150a13110_FieldIns>();
}







std::ostream &operator<<(std::ostream &_Stream, const _150a13110_StructIns &_Src) {
	_Stream << "StructIns{";
	_Stream << "checked:" << _Src._field_checked << ", ";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "has_mut:" << _Src._field_has_mut << ", ";
	_Stream << "references:" << _Src._field_references;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _15081bcd0_RetType &_Src) {
	_Stream << "RetType{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "idents:" << _Src._field_idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _15081bcd0_ParamIns::_method_to_str(void) {
	jule::Str _19517_s = jule::Str("", 0);
	if ((*this)._field_decl->_field_mutable) {
		_19517_s+=jule::Str("mut ", 4);
	}
	if ((*this)._field_decl->_field_reference) {
		_19517_s+=jule::Str("&_:", 3);
	}
	if ((*this)._field_decl->_method_is_self()) {
		if ((*this)._field_decl->_method_is_ref()) {
			_19517_s+=jule::Str("&", 1);
		}
		_19517_s+=jule::Str("self", 4);
		return _19517_s;
	}
	if ((*this)._field_decl->_field_variadic) {
		_19517_s+=jule::Str("...", 3);
	}
	if (jule::real((*this)._field_kind)) {
		_19517_s+=(*this)._field_kind->_method_to_str();
	}
	return _19517_s;
}







std::ostream &operator<<(std::ostream &_Stream, const _15081bcd0_ParamIns &_Src) {
	_Stream << "ParamIns{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _15081bcd0_FnIns::_method_to_str(void) {
	
	return (*this)._method_get_kind_str(false);
}



inline jule::Bool _15081bcd0_FnIns::_method_equals(jule::Ref<_15177b070_TypeKind> _25021_other) {
	jule::Ref<_15081bcd0_FnIns> _25113_f = (_25021_other).alloc->_method_fnc();
	if ((!(jule::real(_25113_f)))) {
		return false;
	}
	if ((*this)._field_decl->_field_statically != _25113_f->_field_decl->_field_statically) {
		return false;
	}
	if ((*this)._field_decl->_field_unsafety != _25113_f->_field_decl->_field_unsafety) {
		return false;
	}
	if ((*this)._field_generics.len() != _25113_f->_field_generics.len()) {
		return false;
	}
	if ((*this)._field_decl->_method_is_void() != _25113_f->_field_decl->_method_is_void()) {
		return false;
	}
	jule::Int _27217_i = 0LL;
	_iter_begin_5682373024:;
	if (!(_27217_i < (*this)._field_generics.len())) { goto _iter_end_5682373024; }
	{
		if ((!((*this)._field_generics[static_cast<jule::Int>(_27217_i)]->_method_equals(_25113_f->_field_generics[static_cast<jule::Int>(_27217_i)])))) {
			return false;
		}
	}
	_iter_next_5682373024:;
	(_27217_i)++;
	goto _iter_begin_5682373024;
	_iter_end_5682373024:;
	jule::Fn<jule::Bool(jule::Ref<_15081bcd0_ParamIns>,jule::Ref<_15081bcd0_ParamIns>)> _27913_check_params = jule::Fn<jule::Bool(jule::Ref<_15081bcd0_ParamIns>,jule::Ref<_15081bcd0_ParamIns>)>([=](jule::Ref<_15081bcd0_ParamIns> _27931_p1,jule::Ref<_15081bcd0_ParamIns> _27946_p2) mutable -> jule::Bool {
		if (_27931_p1->_field_decl->_field_mutable != _27946_p2->_field_decl->_field_mutable) {
			return false;
		}
		if (_27931_p1->_field_decl->_method_is_self()) {
			if ((!(_27946_p2->_field_decl->_method_is_self()))) {
				return false;
			}
			if (_27931_p1->_field_decl->_method_is_ref() != _27946_p2->_field_decl->_method_is_ref()) {
				return false;
			}
			return true;
		}
		if (_27931_p1->_field_decl->_field_reference != _27946_p2->_field_decl->_field_reference) {
			return false;
		}
		if (_27931_p1->_field_decl->_field_variadic != _27946_p2->_field_decl->_field_variadic) {
			return false;
		}
		return _27931_p1->_field_kind->_method_equals(_27946_p2->_field_kind);
	});
	_27217_i=0LL;
	_iter_begin_5682365184:;
	if (!(_27217_i < (*this)._field_params.len())) { goto _iter_end_5682365184; }
	{
		if ((!(_27913_check_params((*this)._field_params[static_cast<jule::Int>(_27217_i)],_25113_f->_field_params[static_cast<jule::Int>(_27217_i)])))) {
			return false;
		}
	}
	_iter_next_5682365184:;
	(_27217_i)++;
	goto _iter_begin_5682365184;
	_iter_end_5682365184:;
	if ((!((*this)._field_decl->_method_is_void()))) {
		if ((!((*this)._field_result->_method_equals(_25113_f->_field_result)))) {
			return false;
		}
	}
	return true;
}



inline jule::Bool _15081bcd0_FnIns::_method_is_builtin(void) {
	return (*this)._field_caller != nullptr;
}



inline jule::Bool _15081bcd0_FnIns::_method_is_anon(void) {
	return (*this)._field_anon || (jule::real((*this)._field_decl) && (*this)._field_decl->_method_is_anon());
}



inline jule::Str _15081bcd0_FnIns::_method_get_kind_str(jule::Bool _33431_ident) {
	jule::Str _33517_s = jule::Str("", 0);
	if ((*this)._field_decl->_field_statically) {
		_33517_s+=jule::Str("static ", 7);
	}
	if ((*this)._field_decl->_field_unsafety) {
		_33517_s+=jule::Str("unsafe ", 7);
	}
	_33517_s+=jule::Str("fn", 2);
	if (_33431_ident && jule::real((*this)._field_decl)) {
		_33517_s+=jule::Str(" ", 1) + (*this)._field_decl->_field_ident;
	}
	if ((*this)._field_generics.len() > 0LL) {
		_33517_s+=jule::Str("[", 1);
		{
			auto __julec_range_expr = (*this)._field_generics;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Int _15081bcd0_i = 0;
				jule::Ref<_15177b070_TypeKind> _15081bcd0_t = *__julec_range_begin;
				_iter_begin_5682413184:;
				{
					_33517_s+=_15081bcd0_t->_method_to_str();
					if ((_15081bcd0_i + 1LL) < (*this)._field_generics.len()) {
						_33517_s+=jule::Str(",", 1);
					}
				}
				_iter_next_5682413184:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { ++_15081bcd0_i; _15081bcd0_t = *__julec_range_begin; goto _iter_begin_5682413184; }
				_iter_end_5682413184:;
			}
		}
		_33517_s+=jule::Str("]", 1);
	} else if ((*this)._field_decl->_field_generics.len() > 0LL) {
		_33517_s+=jule::Str("[", 1);
		{
			auto __julec_range_expr = (*this)._field_decl->_field_generics;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Int _15081bcd0_i = 0;
				jule::Ref<_1506406d0_GenericDecl> _15081bcd0_g = *__julec_range_begin;
				_iter_begin_5682413056:;
				{
					_33517_s+=_15081bcd0_g->_field_ident;
					if ((_15081bcd0_i + 1LL) < (*this)._field_decl->_field_generics.len()) {
						_33517_s+=jule::Str(",", 1);
					}
				}
				_iter_next_5682413056:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { ++_15081bcd0_i; _15081bcd0_g = *__julec_range_begin; goto _iter_begin_5682413056; }
				_iter_end_5682413056:;
			}
		}
		_33517_s+=jule::Str("]", 1);
	}
	_33517_s+=jule::Str("(", 1);
	jule::I64 _37213_n = (*this)._field_params.len();
	if (_37213_n > 0LL) {
		{
			auto __julec_range_expr = (*this)._field_params;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_15081bcd0_ParamIns> _15081bcd0_p = *__julec_range_begin;
				_iter_begin_5682426064:;
				{
					_33517_s+=_15081bcd0_p->_method_to_str();
					_33517_s+=jule::Str(",", 1);
				}
				_iter_next_5682426064:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _15081bcd0_p = *__julec_range_begin; goto _iter_begin_5682426064; }
				_iter_end_5682426064:;
			}
		}
		_33517_s=_33517_s.slice(0LL,static_cast<jule::Int>(_33517_s.len() - 1LL));
	}
	_33517_s+=jule::Str(")", 1);
	if ((!((*this)._field_decl->_method_is_void()))) {
		_33517_s+=jule::Str(":", 1);
		_33517_s+=(*this)._field_result->_method_to_str();
	}
	return _33517_s;
}







std::ostream &operator<<(std::ostream &_Stream, const _15081bcd0_FnIns &_Src) {
	_Stream << "FnIns{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "params:" << _Src._field_params << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "references:" << _Src._field_references << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "caller:" << _Src._field_caller << ", ";
	_Stream << "reloaded:" << _Src._field_reloaded << ", ";
	_Stream << "anon:" << _Src._field_anon;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_150e75a70_SymbolBuilder> _150e75a70_SymbolBuilder::_method_get_root(void) {
	jule::Ref<_150e75a70_SymbolBuilder> _31517_root = this->self;
	_iter_begin_5682449024:;
	if (!(jule::real(_31517_root->_field_owner))) { goto _iter_end_5682449024; }
	{
		_31517_root=_31517_root->_field_owner;
	}
	_iter_next_5682449024:;
	goto _iter_begin_5682449024;
	_iter_end_5682449024:;
	return _31517_root;
}



inline void _150e75a70_SymbolBuilder::_method_push_err(_150640f50_Token _32227_token,jule::Str _32241_fmt,jule::Slice<jule::Any> _32254_args) {
	(*this)._field_errors=jule::append((*this)._field_errors,jule::Slice<_157e34dc0_Log>({_1510c9150_compiler_err(_32227_token,true,_32241_fmt,_32254_args)}));
}



inline void _150e75a70_SymbolBuilder::_method_push_err_text(_150640f50_Token _32632_token,jule::Str _32646_fmt,jule::Slice<jule::Any> _32659_args) {
	(*this)._field_errors=jule::append((*this)._field_errors,jule::Slice<_157e34dc0_Log>({_1510c9150_compiler_err(_32632_token,false,_32646_fmt,_32659_args)}));
}



inline void _150e75a70_SymbolBuilder::_method_push_suggest(jule::Str _33131_fmt,jule::Slice<jule::Any> _33144_args) {
	{
		_1510c9150_push_suggest((&((*this)._field_errors[static_cast<jule::Int>((*this)._field_errors.len() - 1LL)])),_33131_fmt,_33144_args);
	}
}



inline jule::Bool _150e75a70_SymbolBuilder::_method_check_cpp_use_decl_path(jule::Ref<_1506406d0_UseDecl> _33542_decl) {
	jule::Bool _33560_ok = jule::Bool();
	if (_157e348f0_is_std_header_path(_33542_decl->_field_link_path)) {
		_33560_ok = true;
		return _33560_ok;
	}
	jule::Str _34013_ext = _147e135c0_ext(_33542_decl->_field_link_path);
	if ((!(_157e348f0_is_valid_header_ext(_34013_ext))) && (!(_157e348f0_is_valid_cpp_ext(_34013_ext)))) {
		(*this)._method_push_err(_33542_decl->_field_token,jule::Str("invalid C++ extension: @", 24),jule::Slice<jule::Any>({jule::Any(_34013_ext)}));
		_33560_ok = false;
		return _33560_ok;
	}
	jule::Ref<_1505f1a60_Status> _34614_info;
	jule::Int _34620_err;
	std::tie(_34614_info,_34620_err) = _15053fb30_stat(_33542_decl->_field_link_path);
	if ((_34620_err != 0LLU) || _34614_info->_method_is_dir()) {
		(*this)._method_push_err(_33542_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_33542_decl->_field_link_path)}));
		_33560_ok = false;
		return _33560_ok;
	}
	_33560_ok = true;
	return _33560_ok;
}



inline jule::Ref<_150f26340_ImportInfo> _150e75a70_SymbolBuilder::_method_build_cpp_header_import(jule::Ref<_1506406d0_UseDecl> _35646_decl) {
	jule::Str _35717_path = _35646_decl->_field_link_path;
	if ((!(_157e348f0_is_std_header_path(_35646_decl->_field_link_path)))) {
		jule::Bool _36021_ok = (*this)._method_check_cpp_use_decl_path(_35646_decl);
		if ((!(_36021_ok))) {
			return jule::new_ref<_150f26340_ImportInfo>();
		}
		std::tie(_35717_path,_36021_ok) = _147e135c0_abs(_35646_decl->_field_link_path);
		if ((!(_36021_ok))) {
			(*this)._method_push_err(_35646_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_35646_decl->_field_link_path)}));
		}
	}
	return jule::new_struct<_150f26340_ImportInfo>(new( std::nothrow ) _150f26340_ImportInfo(_35646_decl->_field_token,_35717_path,_35646_decl->_field_link_path,jule::Str("", 0),jule::Bool(),true,false,jule::Bool(),jule::Slice<_150640f50_Token>(),jule::new_ref<_150f26340_Package>()));
}



inline jule::Ref<_150f26340_ImportInfo> _150e75a70_SymbolBuilder::_method_build_std_import(jule::Ref<_1506406d0_UseDecl> _38339_decl) {
	jule::Str _38417_path = _38339_decl->_field_link_path.slice(static_cast<jule::Int>(jule::Str("std::", 5).len()));
	_38417_path=_38417_path.replace(jule::Str("::", 2),static_cast<jule::Str>(47LL),-1LL);
	_38417_path=_147e135c0_join(jule::Slice<jule::Str>({_157eb0090_PATH_STDLIB,_38417_path}));
	jule::Bool _38720_ok;
	std::tie(_38417_path,_38720_ok) = _147e135c0_abs(_38417_path);
	if ((!(_38720_ok))) {
		(*this)._method_push_err(_38339_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_38339_decl->_field_link_path)}));
		return jule::new_ref<_150f26340_ImportInfo>();
	}
	jule::Ref<_1505f1a60_Status> _39314_info;
	jule::Int _39320_err;
	std::tie(_39314_info,_39320_err) = _15053fb30_stat(_38417_path);
	if ((_39320_err != 0LLU) || (!(_39314_info->_method_is_dir()))) {
		(*this)._method_push_err(_38339_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_38339_decl->_field_link_path)}));
		return jule::new_ref<_150f26340_ImportInfo>();
	}
	jule::Str _40113_ident = _38339_decl->_field_link_path.slice(static_cast<jule::Int>(_38339_decl->_field_link_path.rfind(jule::Str("::", 2)) + 1LL));
	return jule::new_struct<_150f26340_ImportInfo>(new( std::nothrow ) _150f26340_ImportInfo(_38339_decl->_field_token,_38417_path,_38339_decl->_field_link_path,_40113_ident,jule::Bool(),false,true,_38339_decl->_field_full,jule::Slice<_150640f50_Token>(),jule::new_struct<_150f26340_Package>(new( std::nothrow ) _150f26340_Package(nullptr))));
}



inline jule::Ref<_150f26340_ImportInfo> _150e75a70_SymbolBuilder::_method_build_ident_import(jule::Ref<_1506406d0_UseDecl> _41742_decl) {
	jule::Str _41817_path = _41742_decl->_field_link_path;
	_41817_path=_41817_path.replace(jule::Str("::", 2),static_cast<jule::Str>(47LL),-1LL);
	_41817_path=_147e135c0_join(jule::Slice<jule::Str>({this->self->_method_get_root()->_field_ast->_field_file->_method_dir(),_41817_path}));
	jule::Bool _42220_ok;
	std::tie(_41817_path,_42220_ok) = _147e135c0_abs(_41817_path);
	if ((!(_42220_ok))) {
		this->self->_method_push_err(_41742_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_41742_decl->_field_link_path)}));
		return jule::new_ref<_150f26340_ImportInfo>();
	}
	jule::Ref<_1505f1a60_Status> _42814_info;
	jule::Int _42820_err;
	std::tie(_42814_info,_42820_err) = _15053fb30_stat(_41817_path);
	if ((_42820_err != 0LLU) || (!(_42814_info->_method_is_dir()))) {
		this->self->_method_push_err(_41742_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_41742_decl->_field_link_path)}));
		return jule::new_ref<_150f26340_ImportInfo>();
	}
	jule::Str _43613_ident = _41742_decl->_field_link_path.slice(static_cast<jule::Int>(_41742_decl->_field_link_path.rfind(jule::Str("::", 2)) + 1LL));
	return jule::new_struct<_150f26340_ImportInfo>(new( std::nothrow ) _150f26340_ImportInfo(_41742_decl->_field_token,_41817_path,_41742_decl->_field_link_path,_43613_ident,jule::Bool(),false,false,_41742_decl->_field_full,jule::Slice<_150640f50_Token>(),jule::new_struct<_150f26340_Package>(new( std::nothrow ) _150f26340_Package(nullptr))));
}



inline jule::Ref<_150f26340_ImportInfo> _150e75a70_SymbolBuilder::_method_build_import(jule::Ref<_1506406d0_UseDecl> _45236_decl) {
	{
		if (!((_45236_decl->_field_cpp_linked))) { goto _case_end_5682544000; }
		_case_begin_5682544000:;
		{
			return this->self->_method_build_cpp_header_import(_45236_decl);
		}
		goto _match_end_5682542112;
		_case_end_5682544000:;
		if (!((_45236_decl->_field_std))) { goto _case_end_5682543664; }
		_case_begin_5682543664:;
		{
			return this->self->_method_build_std_import(_45236_decl);
		}
		goto _match_end_5682542112;
		_case_end_5682543664:;
		_case_begin_5682542256:;
		{
			return this->self->_method_build_ident_import(_45236_decl);
		}
		goto _match_end_5682542112;
		_case_end_5682542256:;
		_match_end_5682542112:;
	}
}



inline jule::Bool _150e75a70_SymbolBuilder::_method_check_duplicate_use_decl(jule::Ref<_150f26340_ImportInfo> _46043_pkg) {
	jule::Bool _46063_ok = jule::Bool();
	jule::Ref<_150f26340_ImportInfo> _46213_lpkg = (*this)._field_table->_method_select_package(jule::Fn<jule::Bool(jule::Ref<_150f26340_ImportInfo>)>([=](jule::Ref<_150f26340_ImportInfo> _46249_spkg) mutable -> jule::Bool {
		return _46043_pkg->_field_path == _46249_spkg->_field_path;
	}));
	if ((!(jule::real(_46213_lpkg)))) {
		_46063_ok = true;
		return _46063_ok;
	}
	(*this)._method_push_err(_46043_pkg->_field_token,jule::Str("duplicate use declaration: @", 28),jule::Slice<jule::Any>({jule::Any(_46043_pkg->_field_link_path)}));
	(*this)._method_push_suggest(jule::Str("remove this use declaration, already used, it is safe", 53),jule::Slice<jule::Any>({}));
	_46063_ok = false;
	return _46063_ok;
}



inline void _150e75a70_SymbolBuilder::_method_impl_import_selections(jule::Ref<_150f26340_ImportInfo> _47445_imp,jule::Ref<_1506406d0_UseDecl> _47467_decl) {
	{
		auto __julec_range_expr = _47467_decl->_field_selected;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			_150640f50_Token _150e75a70_ident = *__julec_range_begin;
			_iter_begin_5682564720:;
			{
				if (_47445_imp->_method_exist_ident(_150e75a70_ident._field_kind)) {
					(*this)._method_push_err(_150e75a70_ident,jule::Str("duplicated identifier selection: @", 34),jule::Slice<jule::Any>({jule::Any(_150e75a70_ident._field_kind)}));
					(*this)._method_push_suggest(jule::Str("remove this use selection, already selected, it is safe", 55),jule::Slice<jule::Any>({}));
					goto _iter_next_5682564720;
				}
				_47445_imp->_field_selected=jule::append(_47445_imp->_field_selected,jule::Slice<_150640f50_Token>({_150e75a70_ident}));
			}
			_iter_next_5682564720:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _150e75a70_ident = *__julec_range_begin; goto _iter_begin_5682564720; }
			_iter_end_5682564720:;
		}
	}
}



inline jule::Str _150e75a70_SymbolBuilder::_method_get_as_link_path(jule::Str _48640_path) {
	if (_48640_path.has_prefix(_157eb0090_PATH_STDLIB)) {
		_48640_path=_48640_path.slice(static_cast<jule::Int>(_157eb0090_PATH_STDLIB.len()));
		return jule::Str("std", 3) + _48640_path.replace(static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL);
	}
	jule::Str _49214_root;
	std::tie(_49214_root,std::ignore) = _147e135c0_abs(this->self->_method_get_root()->_field_ast->_field_file->_method_dir());
	_48640_path=_48640_path.slice(static_cast<jule::Int>(_49214_root.len()));
	if (_48640_path[0LL] == 47LL) {
		_48640_path=_48640_path.slice(1LL);
	}
	return _48640_path.replace(static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL);
}



inline void _150e75a70_SymbolBuilder::_method_push_cycle_error(jule::Ref<_150e75a70_SymbolBuilder> _50036_sb,jule::Str _50056_path,jule::Str& _50072_message) {
	
	jule::Str _50313_refers_to = _157e34dc0_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(this->self->_method_get_as_link_path(_50036_sb->_field_table->_field_file->_method_dir())),jule::Any(this->self->_method_get_as_link_path(_50056_path))}));
	_50072_message=((_150e75a70_str_repeat(jule::Str(" ", 1),4LL) + _50313_refers_to) + jule::Str("\n", 1)) + _50072_message;
}



inline void _150e75a70_SymbolBuilder::_method_push_cross_cycle_error(jule::Ref<_150e75a70_SymbolBuilder> _51042_target,jule::Ref<_150f26340_ImportInfo> _51066_imp,_150640f50_Token _51084_error_token) {
	jule::Str _51117_message = jule::Str("", 0);
	this->self->_method_push_cycle_error(this->self,_51066_imp->_field_path,_51117_message);
	jule::Ref<_150e75a70_SymbolBuilder> _51517_owner = this->self->_field_owner;
	jule::Ref<_150e75a70_SymbolBuilder> _51617_old = this->self;
	_iter_begin_5682602080:;
	if (!(jule::real(_51517_owner->_field_owner))) { goto _iter_end_5682602080; }
	{
		this->self->_method_push_cycle_error(_51617_old->_field_owner,_51617_old->_field_table->_field_file->_method_dir(),_51117_message);
		if ((_51517_owner->_field_owner).alloc == (_51042_target).alloc) {
			this->self->_method_push_cycle_error(_51042_target,_51517_owner->_field_table->_field_file->_method_dir(),_51117_message);
			goto _iter_end_5682602080;
		}
		_51617_old=_51517_owner;
		_51517_owner=_51517_owner->_field_owner;
	}
	_iter_next_5682602080:;
	goto _iter_begin_5682602080;
	_iter_end_5682602080:;
	this->self->_method_push_err(_51084_error_token,jule::Str("illegal cross cycle in use declarations;\n@", 42),jule::Slice<jule::Any>({jule::Any(_51117_message)}));
}



inline jule::Bool _150e75a70_SymbolBuilder::_method_check_import_cycles(jule::Ref<_150f26340_ImportInfo> _53339_imp,jule::Ref<_1506406d0_UseDecl> _53357_decl) {
	if (_53339_imp->_field_path == this->self->_field_table->_field_file->_method_dir()) {
		this->self->_method_push_err(_53357_decl->_field_token,jule::Str("illegal cycle in use declaration, package @ refers to itself", 60),jule::Slice<jule::Any>({jule::Any(this->self->_method_get_as_link_path(_53339_imp->_field_path))}));
		return false;
	}
	if ((!(jule::real(this->self->_field_owner)))) {
		return true;
	}
	if (this->self->_field_owner->_field_table->_field_file->_method_dir() == _53339_imp->_field_path) {
		this->self->_method_push_cross_cycle_error(this->self->_field_owner,_53339_imp,_53357_decl->_field_token);
		return false;
	}
	jule::Ref<_150e75a70_SymbolBuilder> _54817_owner = this->self->_field_owner;
	_julec_label_iter:;
	if (_54817_owner->_field_table->_field_file->_method_dir() == _53339_imp->_field_path) {
		this->self->_method_push_cross_cycle_error(_54817_owner,_53339_imp,_53357_decl->_field_token);
		return false;
	}
	if (jule::real(_54817_owner->_field_owner)) {
		_54817_owner=_54817_owner->_field_owner;
		goto _julec_label_iter;
	}
	return true;
}



inline jule::Bool _150e75a70_SymbolBuilder::_method_import_package(jule::Ref<_150f26340_ImportInfo> _56338_imp,jule::Ref<_1506406d0_UseDecl> _56360_decl) {
	jule::Bool _56378_ok = jule::Bool();
	if (_56338_imp->_field_cpp_linked) {
		_56378_ok = true;
		return _56378_ok;
	}
	jule::Ref<_150f26340_ImportInfo> _56817_port = this->self->_field_importer.get()._method_get_import(_56338_imp->_field_path);
	if (jule::real(_56817_port)) {
		_56338_imp->_field_package=_56817_port->_field_package;
		_56338_imp->_field_duplicate=true;
	} else {
		if ((!(this->self->_method_check_import_cycles(_56338_imp,_56360_decl)))) {
			_56378_ok = false;
			return _56378_ok;
		}
		jule::Slice<jule::Ref<_15053e120_Ast>> _57722_asts;
		jule::Slice<_157e34dc0_Log> _57728_errors;
		std::tie(_57722_asts,_57728_errors) = this->self->_field_importer.get()._method_import_package(_56338_imp->_field_path);
		if (_57728_errors.len() > 0LL) {
			this->self->_field_errors=jule::append(this->self->_field_errors,_57728_errors);
			_56378_ok = false;
			return _56378_ok;
		}
		{
			auto __julec_range_expr = _57722_asts;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_15053e120_Ast> _150e75a70_ast = *__julec_range_begin;
				_iter_begin_5682648416:;
				{
					jule::Ref<_15128c4d0_SymbolTable> _58426_table;
					jule::Slice<_157e34dc0_Log> _58433_errors;
					std::tie(_58426_table,_58433_errors) = _1517f9a70_build_symbols(_150e75a70_ast,this->self->_field_importer,this->self);
					if (_58433_errors.len() > 0LL) {
						this->self->_field_errors=jule::append(this->self->_field_errors,_58433_errors);
						this->self->_method_push_err_text(_56338_imp->_field_token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>({jule::Any(_56338_imp->_field_link_path)}));
						_56378_ok = false;
						return _56378_ok;
					}
					_56338_imp->_field_package->_field_files=jule::append(_56338_imp->_field_package->_field_files,jule::Slice<jule::Ref<_15128c4d0_SymbolTable>>({_58426_table}));
				}
				_iter_next_5682648416:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _150e75a70_ast = *__julec_range_begin; goto _iter_begin_5682648416; }
				_iter_end_5682648416:;
			}
		}
	}
	this->self->_method_impl_import_selections(_56338_imp,_56360_decl);
	_56378_ok = true;
	return _56378_ok;
}



inline jule::Ref<_150f26340_ImportInfo> _150e75a70_SymbolBuilder::_method_import_use_decl(jule::Ref<_1506406d0_UseDecl> _60239_decl) {
	jule::Ref<_150f26340_ImportInfo> _60317_imp = this->self->_method_build_import(_60239_decl);
	if ((!(jule::real(_60317_imp)))) {
		return jule::new_ref<_150f26340_ImportInfo>();
	}
	jule::Bool _60917_ok = this->self->_method_check_duplicate_use_decl(_60317_imp);
	if ((!(_60917_ok))) {
		return jule::new_ref<_150f26340_ImportInfo>();
	}
	_60917_ok=this->self->_method_import_package(_60317_imp,_60239_decl);
	this->self->_field_table->_field_imports._method_push(_60317_imp);
	if (_60917_ok) {
		this->self->_field_importer.get()._method_imported(_60317_imp);
		return _60317_imp;
	}
	return jule::new_ref<_150f26340_ImportInfo>();
}



inline void _150e75a70_SymbolBuilder::_method_import_use_decls(void) {
	jule::Int _62417_i = 0LL;
	_iter_begin_5682671760:;
	if (!(_62417_i < this->self->_field_ast->_field_use_decls._method_len())) { goto _iter_end_5682671760; }
	{
		jule::Ref<_1506406d0_UseDecl> _62621_decl = this->self->_field_ast->_field_use_decls._method_at(_62417_i);
		this->self->_method_import_use_decl(_62621_decl);
		if (this->self->_field_errors.len() > 0LL) {
			goto _iter_end_5682671760;
		}
	}
	_iter_next_5682671760:;
	(_62417_i)++;
	goto _iter_begin_5682671760;
	_iter_end_5682671760:;
}



inline void _150e75a70_SymbolBuilder::_method_append_decl(_1506406d0_Node _63634_decl) {
	{
		auto _match_expr{ _63634_decl._field_data };
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_TypeAliasDecl>>())) { goto _case_end_5682682512; }
		_case_begin_5682682512:;
		{
			jule::Ref<_15177b070_TypeAlias> _63921_ta = _150e75a70_build_type_alias(_63634_decl._field_data.operator jule::Ref<_1506406d0_TypeAliasDecl>());
			(*this)._field_table->_field_type_aliases._method_push(_63921_ta);
		}
		goto _match_end_5682679376;
		_case_end_5682682512:;
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_StructDecl>>())) { goto _case_end_5682680368; }
		_case_begin_5682680368:;
		{
			jule::Ref<_150a13110_Struct> _64321_srct = _150e75a70_build_struct(_63634_decl._field_data.operator jule::Ref<_1506406d0_StructDecl>());
			(*this)._field_table->_field_structs._method_push(_64321_srct);
		}
		goto _match_end_5682679376;
		_case_end_5682680368:;
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_FnDecl>>())) { goto _case_end_5682680480; }
		_case_begin_5682680480:;
		{
			jule::Ref<_15081bcd0_Fn> _64721_f = _150e75a70_build_fn(_63634_decl._field_data.operator jule::Ref<_1506406d0_FnDecl>());
			(*this)._field_table->_field_funcs._method_push(_64721_f);
		}
		goto _match_end_5682679376;
		_case_end_5682680480:;
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_TraitDecl>>())) { goto _case_end_5682680592; }
		_case_begin_5682680592:;
		{
			jule::Ref<_150f166e0_Trait> _65121_t = _150e75a70_build_trait(_63634_decl._field_data.operator jule::Ref<_1506406d0_TraitDecl>());
			(*this)._field_table->_field_traits._method_push(_65121_t);
		}
		goto _match_end_5682679376;
		_case_end_5682680592:;
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_VarDecl>>())) { goto _case_end_5682682688; }
		_case_begin_5682682688:;
		{
			jule::Ref<_1511317d0_Var> _65521_v = _150e75a70_build_var(_63634_decl._field_data.operator jule::Ref<_1506406d0_VarDecl>());
			(*this)._field_table->_field_vars._method_push(_65521_v);
		}
		goto _match_end_5682679376;
		_case_end_5682682688:;
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_EnumDecl>>())) { goto _case_end_5682682800; }
		_case_begin_5682682800:;
		{
			jule::Ref<_150f1c930_Enum> _65921_e = _150e75a70_build_enum(_63634_decl._field_data.operator jule::Ref<_1506406d0_EnumDecl>());
			(*this)._field_table->_field_enums._method_push(_65921_e);
		}
		goto _match_end_5682679376;
		_case_end_5682682800:;
		_case_begin_5682680064:;
		{
			(*this)._method_push_err(_63634_decl._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		}
		goto _match_end_5682679376;
		_case_end_5682680064:;
		_match_end_5682679376:;
	}
}



inline void _150e75a70_SymbolBuilder::_method_append_decls(void) {
	jule::Int _66817_i = 0LL;
	_iter_begin_5682705488:;
	if (!(_66817_i < (*this)._field_ast->_field_decls._method_len())) { goto _iter_end_5682705488; }
	{
		_1506406d0_Node _67021_decl = (*this)._field_ast->_field_decls._method_at(_66817_i);
		(*this)._method_append_decl(_67021_decl);
	}
	_iter_next_5682705488:;
	(_66817_i)++;
	goto _iter_begin_5682705488;
	_iter_end_5682705488:;
}



inline void _150e75a70_SymbolBuilder::_method_append_impls(void) {
	(*this)._field_table->_field_impls=_1509ba170_Vector_15::_static_method_new(static_cast<jule::Int>((*this)._field_ast->_field_impls._method_len()));
	jule::Int _67717_i = 0LL;
	_iter_begin_5682713984:;
	if (!(_67717_i < (*this)._field_ast->_field_impls._method_len())) { goto _iter_end_5682713984; }
	{
		jule::Ref<_1506406d0_Impl> _67921_decl = (*this)._field_ast->_field_impls._method_at(_67717_i);
		(*this)._field_table->_field_impls._method_push(_150e75a70_build_impl(_67921_decl));
	}
	_iter_next_5682713984:;
	(_67717_i)++;
	goto _iter_begin_5682713984;
	_iter_end_5682713984:;
}



inline void _150e75a70_SymbolBuilder::_method_push_directive_pass(jule::Ref<_1506406d0_Directive> _68442_d) {
	_150e75a70_Pass _68517_pass = _150e75a70_Pass(_68442_d->_field_token,jule::Str());
	{
		auto __julec_range_expr = _68442_d->_field_args;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _150e75a70_arg = *__julec_range_begin;
			_iter_begin_5682723232:;
			{
				if (_150e75a70_arg != jule::Str("", 0)) {
					_68517_pass._field_text+=_150e75a70_arg + jule::Str(" ", 1);
				}
			}
			_iter_next_5682723232:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _150e75a70_arg = *__julec_range_begin; goto _iter_begin_5682723232; }
			_iter_end_5682723232:;
		}
	}
	_68517_pass._field_text=_68517_pass._field_text.trim(jule::Str(" \n\r\t\v", 5));
	(*this)._field_table->_field_passes._method_push(_68517_pass);
}



inline void _150e75a70_SymbolBuilder::_method_append_top_directives(void) {
	jule::Int _69817_i = 0LL;
	_iter_begin_5682729920:;
	if (!(_69817_i < (*this)._field_ast->_field_top_directives._method_len())) { goto _iter_end_5682729920; }
	{
		jule::Ref<_1506406d0_Directive> _70021_d = (*this)._field_ast->_field_top_directives._method_at(_69817_i);
		{
			auto _match_expr{ _70021_d->_field_tag };
			if (!((jule::Str("pass", 4)) == _match_expr)) { goto _case_end_5682733712; }
			_case_begin_5682733712:;
			{
				(*this)._method_push_directive_pass(_70021_d);
			}
			goto _match_end_5682731744;
			_case_end_5682733712:;
			_match_end_5682731744:;
		}
	}
	_iter_next_5682729920:;
	(_69817_i)++;
	goto _iter_begin_5682729920;
	_iter_end_5682729920:;
}



inline void _150e75a70_SymbolBuilder::_method_build(void) {
	this->self->_field_table=jule::new_struct<_15128c4d0_SymbolTable>(new( std::nothrow ) _15128c4d0_SymbolTable(this->self->_field_ast->_field_file,_1509ba170_Vector_6(),_1509ba170_Vector_7(),_1509ba170_Vector_9(),_1509ba170_Vector_10(),_1509ba170_Vector_12(),_1509ba170_Vector_11(),_1509ba170_Vector_13(),_1509ba170_Vector_14(),_1509ba170_Vector_15()));
	this->self->_method_append_top_directives();
	this->self->_method_import_use_decls();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_append_decls();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_append_impls();
}







std::ostream &operator<<(std::ostream &_Stream, const _150e75a70_SymbolBuilder &_Src) {
	_Stream << "SymbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _150d29660_If &_Src) {
	_Stream << "If{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _150d29660_Else &_Src) {
	_Stream << "Else{";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _150d29660_Conditional &_Src) {
	_Stream << "Conditional{";
	_Stream << "elifs:" << _Src._field_elifs << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _150d29660_InfIter &_Src) {
	_Stream << "InfIter{";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _150d29660_WhileIter::_method_is_while_next(void) {
	return (*this)._field_next != nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _150d29660_WhileIter &_Src) {
	_Stream << "WhileIter{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "next:" << _Src._field_next << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _150d29660_RangeIter &_Src) {
	_Stream << "RangeIter{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "key_a:" << _Src._field_key_a << ", ";
	_Stream << "key_b:" << _Src._field_key_b;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _150d29660_ContSt &_Src) {
	_Stream << "ContSt{";
	_Stream << "it:" << _Src._field_it;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _150d29660_BreakSt &_Src) {
	_Stream << "BreakSt{";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "mtch:" << _Src._field_mtch;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _150d29660_Label &_Src) {
	_Stream << "Label{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _150d29660_GotoSt &_Src) {
	_Stream << "GotoSt{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _150d29660_Postfix &_Src) {
	_Stream << "Postfix{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _150d29660_Assign &_Src) {
	_Stream << "Assign{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _150d29660_MultiAssign &_Src) {
	_Stream << "MultiAssign{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _150d29660_Match &_Src) {
	_Stream << "Match{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "type_match:" << _Src._field_type_match << ", ";
	_Stream << "cases:" << _Src._field_cases << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _150d29660_Case::_method_is_default(void) {
	return (*this)._field_exprs == nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _150d29660_Case &_Src) {
	_Stream << "Case{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "next:" << _Src._field_next;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _150d29660_FallSt &_Src) {
	_Stream << "FallSt{";
	_Stream << "dest_case:" << _Src._field_dest_case;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _150d29660_RetSt &_Src) {
	_Stream << "RetSt{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _150d29660_Recover &_Src) {
	_Stream << "Recover{";
	_Stream << "handler:" << _Src._field_handler << ", ";
	_Stream << "handler_expr:" << _Src._field_handler_expr << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "scope_owner:" << _Src._field_scope_owner;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _150d29660_ScopeGoto &_Src) {
	_Stream << "ScopeGoto{";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_150f26340_ImportInfo> _150d29660_ScopeChecker::_method_find_package(jule::Str _37835_ident) {
	return (*this)._field_s->_method_find_package(_37835_ident);
}



inline jule::Ref<_150f26340_ImportInfo> _150d29660_ScopeChecker::_method_select_package(jule::Fn<jule::Bool(jule::Ref<_150f26340_ImportInfo>)> _38837_selector) {
	return (*this)._field_s->_method_select_package(_38837_selector);
}



inline jule::Ref<_1511317d0_Var> _150d29660_ScopeChecker::_method_find_var(jule::Str _39931_ident,jule::Bool _39943_cpp_linked) {
	
	jule::Ref<_1511317d0_Var> _40217_v = (*this)._field_table->_method___find_var(_39931_ident,_39943_cpp_linked,true);
	if (jule::real(_40217_v)) {
		return _40217_v;
	}
	jule::Ref<_150d29660_ScopeChecker> _40717_parent = (*this)._field_parent;
	_iter_begin_5682799440:;
	if (!(jule::real(_40717_parent))) { goto _iter_end_5682799440; }
	{
		jule::Ref<_1511317d0_Var> _40921_v = _40717_parent->_field_table->_method___find_var(_39931_ident,_39943_cpp_linked,true);
		if (jule::real(_40921_v)) {
			return _40921_v;
		}
		_40717_parent=_40717_parent->_field_parent;
	}
	_iter_next_5682799440:;
	goto _iter_begin_5682799440;
	_iter_end_5682799440:;
	return (*this)._field_s->_method_find_var(_39931_ident,_39943_cpp_linked);
}



inline jule::Ref<_15177b070_TypeAlias> _150d29660_ScopeChecker::_method_find_type_alias(jule::Str _42638_ident,jule::Bool _42650_cpp_linked) {
	
	jule::Ref<_15177b070_TypeAlias> _42917_ta = (*this)._field_table->_method___find_type_alias(_42638_ident,_42650_cpp_linked,true);
	if (jule::real(_42917_ta)) {
		return _42917_ta;
	}
	jule::Ref<_150d29660_ScopeChecker> _43417_parent = (*this)._field_parent;
	_iter_begin_5682814224:;
	if (!(jule::real(_43417_parent))) { goto _iter_end_5682814224; }
	{
		jule::Ref<_15177b070_TypeAlias> _43621_ta = _43417_parent->_field_table->_method___find_type_alias(_42638_ident,_42650_cpp_linked,true);
		if (jule::real(_43621_ta)) {
			return _43621_ta;
		}
		_43417_parent=_43417_parent->_field_parent;
	}
	_iter_next_5682814224:;
	goto _iter_begin_5682814224;
	_iter_end_5682814224:;
	return (*this)._field_s->_method_find_type_alias(_42638_ident,_42650_cpp_linked);
}



inline jule::Ref<_150a13110_Struct> _150d29660_ScopeChecker::_method_find_struct(jule::Str _45134_ident,jule::Bool _45146_cpp_linked) {
	return (*this)._field_s->_method_find_struct(_45134_ident,_45146_cpp_linked);
}



inline jule::Ref<_15081bcd0_Fn> _150d29660_ScopeChecker::_method_find_fn(jule::Str _46030_ident,jule::Bool _46042_cpp_linked) {
	return (*this)._field_s->_method_find_fn(_46030_ident,_46042_cpp_linked);
}



inline jule::Ref<_150f166e0_Trait> _150d29660_ScopeChecker::_method_find_trait(jule::Str _46933_ident) {
	return (*this)._field_s->_method_find_trait(_46933_ident);
}



inline jule::Ref<_150f1c930_Enum> _150d29660_ScopeChecker::_method_find_enum(jule::Str _47832_ident) {
	return (*this)._field_s->_method_find_enum(_47832_ident);
}



inline jule::Bool _150d29660_ScopeChecker::_method_is_unsafe(void) {
	jule::Ref<_150d29660_ScopeChecker> _48617_scope = this->self;
	_julec_label_iter:;
	if (_48617_scope->_field_scope->_field_unsafety) {
		return true;
	}
	if (jule::real(_48617_scope->_field_parent)) {
		_48617_scope=_48617_scope->_field_parent;
		goto _julec_label_iter;
	}
	return false;
}



inline jule::Bool _150d29660_ScopeChecker::_method_is_root(void) {
	return (!(jule::real((*this)._field_parent))) || jule::real((*this)._field_owner);
}



inline jule::Ref<_150d29660_ScopeChecker> _150d29660_ScopeChecker::_method_get_root(void) {
	jule::Ref<_150d29660_ScopeChecker> _50817_root = this->self;
	_iter_begin_5682856592:;
	if (!(jule::real(_50817_root->_field_parent) && (!(jule::real(_50817_root->_field_owner))))) { goto _iter_end_5682856592; }
	{
		_50817_root=_50817_root->_field_parent;
	}
	_iter_next_5682856592:;
	goto _iter_begin_5682856592;
	_iter_end_5682856592:;
	return _50817_root;
}



inline jule::Ref<_150d29660_Label> _150d29660_ScopeChecker::_method_find_label(jule::Str _51829_ident) {
	jule::Int _51917_i = 0LL;
	_iter_begin_5682861616:;
	if (!(_51917_i < (*this)._field_scope->_field_stmts._method_len())) { goto _iter_end_5682861616; }
	{
		jule::Any _52121_st = (*this)._field_scope->_field_stmts._method_at(_51917_i);
		{
			auto _match_expr{ _52121_st };
			if (!(_match_expr.type_is<jule::Ref<_150d29660_Label>>())) { goto _case_end_5682865200; }
			_case_begin_5682865200:;
			{
				jule::Ref<_150d29660_Label> _52425_label = _52121_st.operator jule::Ref<_150d29660_Label>();
				if (_52425_label->_field_ident == _51829_ident) {
					return _52425_label;
				}
			}
			goto _match_end_5682863472;
			_case_end_5682865200:;
			_match_end_5682863472:;
		}
	}
	_iter_next_5682861616:;
	(_51917_i)++;
	goto _iter_begin_5682861616;
	_iter_end_5682861616:;
	return jule::new_ref<_150d29660_Label>();
}



inline jule::Ref<_150d29660_ScopeLabel> _150d29660_ScopeChecker::_method_find_label_scope(jule::Str _53636_ident) {
	jule::Ref<_150d29660_ScopeLabel> _53717_label = this->self->_method_find_label_all(_53636_ident);
	if (jule::real(_53717_label) && ((_53717_label->_field_scope).alloc == (this->self).alloc)) {
		return _53717_label;
	}
	return jule::new_ref<_150d29660_ScopeLabel>();
}



inline jule::Ref<_150d29660_ScopeLabel> _150d29660_ScopeChecker::_method_find_label_all(jule::Str _54833_ident) {
	{
		auto __julec_range_expr = (*this)._field_labels.get();
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_150d29660_ScopeLabel> _150d29660_lbl = *__julec_range_begin;
			_iter_begin_5682876096:;
			{
				if (_150d29660_lbl->_field_label->_field_ident == _54833_ident) {
					return _150d29660_lbl;
				}
			}
			_iter_next_5682876096:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _150d29660_lbl = *__julec_range_begin; goto _iter_begin_5682876096; }
			_iter_end_5682876096:;
		}
	}
	return jule::new_ref<_150d29660_ScopeLabel>();
}



inline jule::Bool _150d29660_ScopeChecker::_method_is_duplicated_ident(jule::Uintptr _56038_itself,jule::Str _56055_ident) {
	jule::Ref<_1511317d0_Var> _56113_v = (*this)._method_find_var(_56055_ident,false);
	if ((jule::real(_56113_v) && (((jule::Uintptr)((_56113_v).alloc)) != _56038_itself)) && ((_56113_v->_field_scope).alloc == ((*this)._field_scope).alloc)) {
		return true;
	}
	jule::Ref<_15177b070_TypeAlias> _56613_ta = (*this)._method_find_type_alias(_56055_ident,false);
	if ((jule::real(_56613_ta) && (((jule::Uintptr)((_56613_ta).alloc)) != _56038_itself)) && ((_56613_ta->_field_scope).alloc == ((*this)._field_tree).alloc)) {
		return true;
	}
	return false;
}



inline void _150d29660_ScopeChecker::_method_check_var_decl(jule::Ref<_1506406d0_VarDecl> _57438_decl) {
	jule::Ref<_1511317d0_Var> _57517_v = _150e75a70_build_var(_57438_decl);
	_57517_v->_field_scope=this->self->_field_scope;
	__JULE_DEFER({
		this->self->_field_table->_field_vars._method_push(_57517_v);
		this->self->_field_scope->_field_stmts._method_push(jule::Any(_57517_v));
	});
	if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_57517_v).alloc)),_57517_v->_field_ident)) {
		this->self->_field_s->_method_push_err(_57517_v->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_57517_v->_field_ident)}));
		this->self->_field_s->_method_push_suggest(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	this->self->_field_s->_method_check_var_decl(_57517_v,this->self);
	if ((!(_57517_v->_method_is_type_inferred())) && ((!(jule::real(_57517_v->_field_kind))) || (!(jule::real(_57517_v->_field_kind->_field_kind))))) {
		return;
	}
	this->self->_field_s->_method_check_type_var(_57517_v,this->self);
}



inline void _150d29660_ScopeChecker::_method_check_type_alias_decl(jule::Ref<_1506406d0_TypeAliasDecl> _59645_decl) {
	jule::Ref<_15177b070_TypeAlias> _59717_ta = _150e75a70_build_type_alias(_59645_decl);
	if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_59717_ta).alloc)),_59717_ta->_field_ident)) {
		this->self->_field_s->_method_push_err(_59717_ta->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_59717_ta->_field_ident)}));
		this->self->_field_s->_method_push_suggest(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	this->self->_field_s->_method_check_type_alias_decl(_59717_ta,this->self);
	this->self->_field_table->_field_type_aliases._method_push(_59717_ta);
}



inline jule::Ref<_150d29660_Scope> _150d29660_ScopeChecker::_method_get_child(void) {
	return jule::new_struct<_150d29660_Scope>(new( std::nothrow ) _150d29660_Scope((*this)._field_scope,jule::Bool(),jule::Bool(),_1509ba170_Vector_8()));
}



inline void _150d29660_ScopeChecker::_method_check_child_ssc(jule::Ref<_1506406d0_ScopeTree> _61339_tree,jule::Ref<_150d29660_Scope> _61361_s,jule::Ref<_150d29660_ScopeChecker> _61376_ssc) {
	_61376_ssc->_field_parent=this->self;
	_61376_ssc->_method_check(_61339_tree,_61361_s);
}



inline jule::Ref<_150d29660_Scope> _150d29660_ScopeChecker::_method_check_child_sc(jule::Ref<_1506406d0_ScopeTree> _61838_tree,jule::Ref<_150d29660_ScopeChecker> _61860_ssc) {
	jule::Ref<_150d29660_Scope> _61917_s = this->self->_method_get_child();
	this->self->_method_check_child_ssc(_61838_tree,_61917_s,_61860_ssc);
	return _61917_s;
}



inline jule::Ref<_150d29660_Scope> _150d29660_ScopeChecker::_method_check_child(jule::Ref<_1506406d0_ScopeTree> _62435_tree) {
	jule::Ref<_150d29660_ScopeChecker> _62517_ssc = this->self->_method_new_child_checker();
	return this->self->_method_check_child_sc(_62435_tree,_62517_ssc);
}



inline void _150d29660_ScopeChecker::_method_check_anon_scope(jule::Ref<_1506406d0_ScopeTree> _62940_tree) {
	jule::Ref<_150d29660_Scope> _63017_s = this->self->_method_check_child(_62940_tree);
	this->self->_field_scope->_field_stmts._method_push(jule::Any(_63017_s));
}



inline jule::Bool _150d29660_ScopeChecker::_method_try_call_recover(jule::Ref<_151290fd0_Data> _63440_d) {
	{
		auto _match_expr{ _63440_d->_field_model };
		if (!(_match_expr.type_is<jule::Ref<_150d29660_Recover>>())) { goto _case_end_5682952000; }
		goto _match_end_5682951040;
		_case_end_5682952000:;
		_case_begin_5682951696:;
		{
			return false;
		}
		goto _match_end_5682951040;
		_case_end_5682951696:;
		_match_end_5682951040:;
	}
	jule::Ref<_150d29660_Recover> _64017_rec = _63440_d->_field_model.operator jule::Ref<_150d29660_Recover>();
	_64017_rec->_field_handler=_63440_d->_field_kind->_method_fnc();
	_64017_rec->_field_scope=jule::new_struct<_150d29660_Scope>(new( std::nothrow ) _150d29660_Scope());
	_64017_rec->_field_scope_owner=this->self->_method_get_root()->_field_owner;
	this->self->_field_scope->_field_stmts._method_push(jule::Any(_64017_rec));
	this->self->_field_tree->_field_stmts=this->self->_field_tree->_field_stmts.slice(static_cast<jule::Int>(this->self->_field_i + 1LL));
	this->self->_field_scope=_64017_rec->_field_scope;
	this->self->_method_check_tree();
	return true;
}



inline void _150d29660_ScopeChecker::_method_check_expr(jule::Ref<_1506406d0_Expr> _65334_expr) {
	jule::Ref<_151290fd0_Data> _65417_d = this->self->_field_s->_method_eval(_65334_expr,this->self);
	if ((!(jule::real(_65417_d)))) {
		return;
	}
	if (_65334_expr->_method_is_fn_call()) {
		jule::Bool _66017_ok = this->self->_method_try_call_recover(_65417_d);
		if (_66017_ok) {
			return;
		}
	}
	this->self->_field_scope->_field_stmts._method_push(jule::Any(_65417_d));
}



inline jule::Ref<_150d29660_If> _150d29660_ScopeChecker::_method_check_if(jule::Ref<_1506406d0_If> _66932_i) {
	jule::Ref<_150d29660_Scope> _67017_s = this->self->_method_check_child(_66932_i->_field_scope);
	jule::Ref<_151290fd0_Data> _67217_d = this->self->_field_s->_method_eval(_66932_i->_field_expr,this->self);
	if ((!(jule::real(_67217_d)))) {
		return jule::new_ref<_150d29660_If>();
	}
	jule::Ref<_15177b070_Prim> _67713_prim = _67217_d->_field_kind->_method_prim();
	if ((!(jule::real(_67713_prim)))) {
		this->self->_field_s->_method_push_err(_66932_i->_field_expr->_field_token,jule::Str("if conditions must be have boolean expression", 45),jule::Slice<jule::Any>({}));
		return jule::new_ref<_150d29660_If>();
	}
	if ((!(_67713_prim->_method_is_bool()))) {
		this->self->_field_s->_method_push_err(_66932_i->_field_expr->_field_token,jule::Str("if conditions must be have boolean expression", 45),jule::Slice<jule::Any>({}));
		return jule::new_ref<_150d29660_If>();
	}
	return jule::new_struct<_150d29660_If>(new( std::nothrow ) _150d29660_If(_67217_d->_field_model,_67017_s));
}



inline jule::Ref<_150d29660_Else> _150d29660_ScopeChecker::_method_check_else(jule::Ref<_1506406d0_Else> _69434_e) {
	jule::Ref<_150d29660_Scope> _69517_s = this->self->_method_check_child(_69434_e->_field_scope);
	return jule::new_struct<_150d29660_Else>(new( std::nothrow ) _150d29660_Else(_69517_s));
}



inline void _150d29660_ScopeChecker::_method_check_conditional(jule::Ref<_1506406d0_Conditional> _70141_conditional) {
	jule::Ref<_150d29660_Conditional> _70217_c = jule::new_struct<_150d29660_Conditional>(new( std::nothrow ) _150d29660_Conditional());
	this->self->_field_scope->_field_stmts._method_push(jule::Any(_70217_c));
	_70217_c->_field_elifs=jule::Slice<jule::Ref<_150d29660_If>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_70141_conditional->_field_tail.len() + 1LL)));
	_70217_c->_field_elifs[0LL]=this->self->_method_check_if(_70141_conditional->_field_head);
	{
		auto __julec_range_expr = _70141_conditional->_field_tail;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _150d29660_i = 0;
			jule::Ref<_1506406d0_If> _150d29660_elif = *__julec_range_begin;
			_iter_begin_5683002304:;
			{
				_70217_c->_field_elifs[static_cast<jule::Int>(_150d29660_i + 1LL)]=this->self->_method_check_if(_150d29660_elif);
			}
			_iter_next_5683002304:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_150d29660_i; _150d29660_elif = *__julec_range_begin; goto _iter_begin_5683002304; }
			_iter_end_5683002304:;
		}
	}
	if (jule::real(_70141_conditional->_field_default)) {
		_70217_c->_field_default=this->self->_method_check_else(_70141_conditional->_field_default);
	}
}



inline jule::Ref<_150d29660_Scope> _150d29660_ScopeChecker::_method_check_iter_scope_sc(jule::Uintptr _71739_it,jule::Ref<_1506406d0_ScopeTree> _71756_tree,jule::Ref<_150d29660_ScopeChecker> _71778_ssc) {
	_71778_ssc->_field_it=_71739_it;
	return this->self->_method_check_child_sc(_71756_tree,_71778_ssc);
}



inline jule::Ref<_150d29660_Scope> _150d29660_ScopeChecker::_method_check_iter_scope(jule::Uintptr _72236_it,jule::Ref<_1506406d0_ScopeTree> _72253_tree) {
	jule::Ref<_150d29660_ScopeChecker> _72317_ssc = this->self->_method_new_child_checker();
	return this->self->_method_check_iter_scope_sc(_72236_it,_72253_tree,_72317_ssc);
}



inline void _150d29660_ScopeChecker::_method_check_inf_iter(jule::Ref<_1506406d0_Iter> _72738_it) {
	jule::Ref<_150d29660_InfIter> _72817_kind = jule::new_struct<_150d29660_InfIter>(new( std::nothrow ) _150d29660_InfIter());
	this->self->_field_scope->_field_stmts._method_push(jule::Any(_72817_kind));
	_72817_kind->_field_scope=this->self->_method_check_iter_scope(((jule::Uintptr)((_72817_kind).alloc)),_72738_it->_field_scope);
}



inline void _150d29660_ScopeChecker::_method_check_while_iter(jule::Ref<_1506406d0_Iter> _73540_it) {
	jule::Ref<_1506406d0_WhileKind> _73617_wh = _73540_it->_field_kind.operator jule::Ref<_1506406d0_WhileKind>();
	if ((!(jule::real(_73617_wh->_field_expr))) && (_73617_wh->_field_next == nullptr)) {
		this->self->_method_check_inf_iter(_73540_it);
		return;
	}
	jule::Ref<_150d29660_WhileIter> _74217_kind = jule::new_struct<_150d29660_WhileIter>(new( std::nothrow ) _150d29660_WhileIter());
	this->self->_field_scope->_field_stmts._method_push(jule::Any(_74217_kind));
	_74217_kind->_field_scope=this->self->_method_check_iter_scope(((jule::Uintptr)((_74217_kind).alloc)),_73540_it->_field_scope);
	if (jule::real(_73617_wh->_field_expr)) {
		jule::Ref<_151290fd0_Data> _74921_d = this->self->_field_s->_method_eval(_73617_wh->_field_expr,this->self);
		if ((!(jule::real(_74921_d)))) {
			return;
		}
		jule::Ref<_15177b070_Prim> _75417_prim = _74921_d->_field_kind->_method_prim();
		if ((!(jule::real(_75417_prim)))) {
			this->self->_field_s->_method_push_err(_73540_it->_field_token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>({}));
			return;
		}
		if ((!(_75417_prim->_method_is_bool()))) {
			this->self->_field_s->_method_push_err(_73540_it->_field_token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>({}));
			return;
		}
		_74217_kind->_field_expr=_74921_d->_field_model;
	}
	if (_73617_wh->_method_is_while_next()) {
		if ((!(_150d29660_is_valid_ast_st_for_next_st(_73617_wh->_field_next)))) {
			this->self->_field_s->_method_push_err(_73617_wh->_field_next_token,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>({}));
			return;
		}
		jule::Int _77417_n = this->self->_field_scope->_field_stmts._method_len();
		this->self->_method_check_node(_73617_wh->_field_next);
		if (_77417_n < this->self->_field_scope->_field_stmts._method_len()) {
			jule::Any _77725_st = this->self->_field_scope->_field_stmts._method_at(_77417_n);
			this->self->_field_scope->_field_stmts._method_set_len(_77417_n);
			if ((!(_150d29660_is_valid_st_for_next_st(_77725_st)))) {
				this->self->_field_s->_method_push_err(_73617_wh->_field_next_token,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>({}));
			}
			_74217_kind->_field_next=_77725_st;
		}
	}
}



inline void _150d29660_ScopeChecker::_method_check_range_iter(jule::Ref<_1506406d0_Iter> _78840_it) {
	jule::Ref<_1506406d0_RangeKind> _78917_rang = _78840_it->_field_kind.operator jule::Ref<_1506406d0_RangeKind>();
	jule::Ref<_151290fd0_Data> _79117_d = this->self->_field_s->_method_eval(_78917_rang->_field_expr,this->self);
	if ((!(jule::real(_79117_d)))) {
		return;
	}
	jule::Ref<_150d29660_RangeIter> _79617_kind = jule::new_struct<_150d29660_RangeIter>(new( std::nothrow ) _150d29660_RangeIter(_79117_d,jule::Ref<_150d29660_Scope>(),jule::Ref<_1511317d0_Var>(),jule::Ref<_1511317d0_Var>()));
	_1510d19a0_RangeChecker _80017_rc = _1510d19a0_RangeChecker(this->self,_78917_rang,_79617_kind,_79117_d);
	jule::Bool _80613_ok = _80017_rc._method_check();
	if ((!(_80613_ok))) {
		return;
	}
	this->self->_field_scope->_field_stmts._method_push(jule::Any(_79617_kind));
	jule::Ref<_150d29660_ScopeChecker> _81317_ssc = this->self->_method_new_child_checker();
	if (jule::real(_79617_kind->_field_key_a)) {
		_81317_ssc->_field_table->_field_vars._method_push(_79617_kind->_field_key_a);
	}
	if (jule::real(_79617_kind->_field_key_b)) {
		_81317_ssc->_field_table->_field_vars._method_push(_79617_kind->_field_key_b);
	}
	_79617_kind->_field_scope=this->self->_method_check_iter_scope_sc(((jule::Uintptr)((_79617_kind).alloc)),_78840_it->_field_scope,_81317_ssc);
}



inline void _150d29660_ScopeChecker::_method_check_iter(jule::Ref<_1506406d0_Iter> _82634_it) {
	if (_82634_it->_method_is_inf()) {
		this->self->_method_check_inf_iter(_82634_it);
		return;
	}
	{
		auto _match_expr{ _82634_it->_field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_WhileKind>>())) { goto _case_end_5683092448; }
		_case_begin_5683092448:;
		{
			this->self->_method_check_while_iter(_82634_it);
		}
		goto _match_end_5683091328;
		_case_end_5683092448:;
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_RangeKind>>())) { goto _case_end_5683093168; }
		_case_begin_5683093168:;
		{
			this->self->_method_check_range_iter(_82634_it);
		}
		goto _match_end_5683091328;
		_case_end_5683093168:;
		_case_begin_5683089872:;
		{
			jule::outln(jule::Str("error <unimplemented iteration kind>", 36));
		}
		goto _match_end_5683091328;
		_case_end_5683089872:;
		_match_end_5683091328:;
	}
}



inline jule::Bool _150d29660_ScopeChecker::_method_check_valid_cont_label(jule::Uintptr _83942_it) {
	jule::Ref<_150d29660_ScopeChecker> _84017_scope = this->self;
	_julec_label_iter:;
	if (_84017_scope->_field_it == _83942_it) {
		return true;
	}
	if (jule::real(_84017_scope->_field_parent)) {
		_84017_scope=_84017_scope->_field_parent;
		goto _julec_label_iter;
	}
	return false;
}



inline jule::Bool _150d29660_ScopeChecker::_method_check_valid_break_label(jule::Uintptr _85543_ptr) {
	jule::Ref<_150d29660_ScopeChecker> _85617_scope = this->self;
	_julec_label_iter:;
	if (_85617_scope->_field_it == _85543_ptr) {
		return true;
	}
	if (_85617_scope->_field_cse != 0LL) {
		jule::Uintptr _86417_mtch = ((jule::Uintptr)((((_150d29660_Case*)(_85617_scope->_field_cse))->_field_owner).alloc));
		if (_86417_mtch == _85543_ptr) {
			return true;
		}
	}
	if (jule::real(_85617_scope->_field_parent)) {
		_85617_scope=_85617_scope->_field_parent;
		goto _julec_label_iter;
	}
	return false;
}



inline jule::Ref<_150d29660_ContSt> _150d29660_ScopeChecker::_method_check_cont_valid_scope(jule::Ref<_1506406d0_ContSt> _87841_c) {
	if (_87841_c->_field_label._field_id != 0LLU) {
		return jule::new_struct<_150d29660_ContSt>(new( std::nothrow ) _150d29660_ContSt());
	}
	_150d29660_ScopeChecker _88317_scope = (*this);
	_julec_label_iter:;
	{
		if (!((((_88317_scope._field_it == 0LL) && jule::real(_88317_scope._field_parent)) && (!(jule::real(_88317_scope._field_owner)))))) { goto _case_end_5683120496; }
		_case_begin_5683120496:;
		{
			_88317_scope=_88317_scope._field_parent;
			goto _julec_label_iter;
		}
		goto _match_end_5683120208;
		_case_end_5683120496:;
		if (!((_88317_scope._field_it != 0LL))) { goto _case_end_5683120608; }
		_case_begin_5683120608:;
		{
			return jule::new_struct<_150d29660_ContSt>(new( std::nothrow ) _150d29660_ContSt(_88317_scope._field_it));
		}
		goto _match_end_5683120208;
		_case_end_5683120608:;
		_match_end_5683120208:;
	}
	(*this)._field_s->_method_push_err(_87841_c->_field_token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>({}));
	return jule::new_ref<_150d29660_ContSt>();
}



inline void _150d29660_ScopeChecker::_method_check_cont(jule::Ref<_1506406d0_ContSt> _89830_c) {
	jule::Ref<_150d29660_ContSt> _89917_cont = this->self->_method_check_cont_valid_scope(_89830_c);
	if ((!(jule::real(_89917_cont)))) {
		return;
	}
	if (_89830_c->_field_label._field_id != 0LLU) {
		jule::Ref<_150d29660_ScopeLabel> _90521_label = _150d29660_find_label_parent(_89830_c->_field_label._field_kind,this->self->_field_parent);
		if ((!(jule::real(_90521_label)))) {
			this->self->_field_s->_method_push_err(_89830_c->_field_label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>({jule::Any(_89830_c->_field_label._field_kind)}));
			return;
		}
		_90521_label->_field_used=true;
		if ((_90521_label->_field_pos + 1LL) >= _90521_label->_field_scope->_field_scope->_field_stmts._method_len()) {
			this->self->_field_s->_method_push_err(_89830_c->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
			return;
		}
		jule::Int _91817_i = _90521_label->_field_pos + 1LL;
		if (_91817_i >= _90521_label->_field_scope->_field_scope->_field_stmts._method_len()) {
			this->self->_field_s->_method_push_err(_89830_c->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
		} else {
			jule::Any _92225_st = _90521_label->_field_scope->_field_scope->_field_stmts._method_at(_91817_i);
			{
				auto _match_expr{ _92225_st };
				if (!(_match_expr.type_is<jule::Ref<_150d29660_InfIter>>())) { goto _case_end_5683151984; }
				_case_begin_5683151984:;
				{
					_89917_cont->_field_it=((jule::Uintptr)((_92225_st.operator jule::Ref<_150d29660_InfIter>()).alloc));
				}
				goto _match_end_5683148800;
				_case_end_5683151984:;
				if (!(_match_expr.type_is<jule::Ref<_150d29660_RangeIter>>())) { goto _case_end_5683149712; }
				_case_begin_5683149712:;
				{
					_89917_cont->_field_it=((jule::Uintptr)((_92225_st.operator jule::Ref<_150d29660_RangeIter>()).alloc));
				}
				goto _match_end_5683148800;
				_case_end_5683149712:;
				if (!(_match_expr.type_is<jule::Ref<_150d29660_WhileIter>>())) { goto _case_end_5683149824; }
				_case_begin_5683149824:;
				{
					_89917_cont->_field_it=((jule::Uintptr)((_92225_st.operator jule::Ref<_150d29660_WhileIter>()).alloc));
				}
				goto _match_end_5683148800;
				_case_end_5683149824:;
				_case_begin_5683149296:;
				{
					this->self->_field_s->_method_push_err(_89830_c->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
				}
				goto _match_end_5683148800;
				_case_end_5683149296:;
				_match_end_5683148800:;
			}
		}
	}
	if (_89917_cont->_field_it != 0LL) {
		if ((!(this->self->_method_check_valid_cont_label(_89917_cont->_field_it)))) {
			this->self->_field_s->_method_push_err(_89830_c->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
		}
	}
	this->self->_field_scope->_field_stmts._method_push(jule::Any(_89917_cont));
}



inline void _150d29660_ScopeChecker::_method_check_label(jule::Ref<_1506406d0_LabelSt> _94135_l) {
	if (jule::real(this->self->_method_find_label(_94135_l->_field_ident))) {
		this->self->_field_s->_method_push_err(_94135_l->_field_token,jule::Str("label is already exist in this identifier: @", 44),jule::Slice<jule::Any>({jule::Any(_94135_l->_field_ident)}));
		return;
	}
	jule::Ref<_150d29660_Label> _94717_label = jule::new_struct<_150d29660_Label>(new( std::nothrow ) _150d29660_Label(_94135_l->_field_ident));
	this->self->_field_scope->_field_stmts._method_push(jule::Any(_94717_label));
	this->self->_field_labels=jule::append(this->self->_field_labels.get(),jule::Slice<jule::Ref<_150d29660_ScopeLabel>>({jule::new_struct<_150d29660_ScopeLabel>(new( std::nothrow ) _150d29660_ScopeLabel(_94135_l->_field_token,_94717_label,static_cast<jule::Int>(this->self->_field_scope->_field_stmts._method_len() - 1LL),this->self,jule::Bool()))}));
}



inline void _150d29660_ScopeChecker::_method_push_goto(jule::Ref<_1506406d0_GotoSt> _96033_gt) {
	this->self->_field_scope->_field_stmts._method_push(jule::Any(jule::new_struct<_150d29660_GotoSt>(new( std::nothrow ) _150d29660_GotoSt(_96033_gt->_field_label._field_kind))));
	this->self->_field_gotos=jule::append(this->self->_field_gotos.get(),jule::Slice<jule::Ref<_150d29660_ScopeGoto>>({jule::new_struct<_150d29660_ScopeGoto>(new( std::nothrow ) _150d29660_ScopeGoto(_96033_gt,this->self,static_cast<jule::Int>(this->self->_field_scope->_field_stmts._method_len() - 1LL)))}));
}



inline void _150d29660_ScopeChecker::_method_check_postfix(jule::Ref<_1506406d0_AssignSt> _97237_a) {
	if (_97237_a->_field_left.len() > 1LL) {
		this->self->_field_s->_method_push_err(_97237_a->_field_setter,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return;
	}
	jule::Ref<_151290fd0_Data> _97817_d = this->self->_field_s->_method_eval(_97237_a->_field_left[0LL]->_field_expr,this->self);
	if ((!(jule::real(_97817_d)))) {
		return;
	}
	_150d29660_check_assign(this->self->_field_s,_97817_d,jule::new_ref<_151290fd0_Data>(),_97237_a->_field_setter);
	if (jule::real(_97817_d->_field_kind->_method_ptr())) {
		jule::Ref<_15177b070_Ptr> _98621_ptr = _97817_d->_field_kind->_method_ptr();
		if ((!(_98621_ptr->_method_is_unsafe())) && (!(this->self->_method_is_unsafe()))) {
			this->self->_field_s->_method_push_err(_97237_a->_field_left[0LL]->_field_expr->_field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>({}));
			return;
		}
	}
	jule::Ref<_15177b070_TypeKind> _99317_check_t = _97817_d->_field_kind;
	if (jule::real(_97817_d->_field_kind->_method_ref())) {
		_99317_check_t=_97817_d->_field_kind->_method_ref()->_field_elem;
	}
	if ((!(jule::real(_99317_check_t->_method_prim()))) || (!(_1519b1410_is_num(_99317_check_t->_method_prim()->_field_kind)))) {
		this->self->_field_s->_method_push_err(_97237_a->_field_setter,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any(_97237_a->_field_setter._field_kind),jule::Any(_97817_d->_field_kind->_method_to_str())}));
		return;
	}
	this->self->_field_scope->_field_stmts._method_push(jule::Any(jule::new_struct<_150d29660_Postfix>(new( std::nothrow ) _150d29660_Postfix(_97817_d->_field_model,_97237_a->_field_setter._field_kind))));
}



inline jule::Bool _150d29660_ScopeChecker::_method_is_new_assign_ident(jule::Str _100938_ident) {
	if (_150640f50_is_ignore_ident(_100938_ident) || (_100938_ident == jule::Str("", 0))) {
		return false;
	}
	return (*this)._field_table->_method_def_by_ident(_100938_ident,false) == nullptr;
}



inline void _150d29660_ScopeChecker::_method_check_single_assign(jule::Ref<_1506406d0_AssignSt> _101743_a) {
	jule::Ref<_151290fd0_Data> _101817_l = jule::new_ref<_151290fd0_Data>();
	jule::Ref<_151290fd0_Data> _101917_r = jule::new_ref<_151290fd0_Data>();
	if ((!(_150640f50_is_ignore_ident(_101743_a->_field_left[0LL]->_field_ident)))) {
		_101817_l=this->self->_field_s->_method_eval(_101743_a->_field_left[0LL]->_field_expr,this->self);
		if ((!(jule::real(_101817_l)))) {
			return;
		}
	}
	if (jule::real(_101817_l)) {
		_101917_r=this->self->_field_s->_method_evalp(_101743_a->_field_right,this->self,_101817_l->_field_kind);
	} else {
		_101917_r=this->self->_field_s->_method_eval(_101743_a->_field_right,this->self);
	}
	if ((!(jule::real(_101917_r)))) {
		return;
	}
	if ((!(jule::real(_101817_l)))) {
		if (_101917_r->_field_kind->_method_is_void()) {
			this->self->_field_s->_method_push_err(_101743_a->_field_right->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		}
		this->self->_field_scope->_field_stmts._method_push(jule::Any(_101917_r));
		return;
	}
	if ((!(_150d29660_check_assign(this->self->_field_s,_101817_l,_101917_r,_101743_a->_field_setter)))) {
		return;
	}
	if (jule::real(_101917_r->_field_kind->_method_tup())) {
		this->self->_field_s->_method_push_err(_101743_a->_field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>({}));
		return;
	}
	this->self->_field_scope->_field_stmts._method_push(jule::Any(jule::new_struct<_150d29660_Assign>(new( std::nothrow ) _150d29660_Assign(_101817_l->_field_model,_101917_r->_field_model,_101743_a->_field_setter._field_kind))));
	if ((_101743_a->_field_setter._field_kind != jule::Str("=", 1)) && (!(_101917_r->_method_is_const()))) {
		_101743_a->_field_setter._field_kind=_101743_a->_field_setter._field_kind.slice(0LL,static_cast<jule::Int>(_101743_a->_field_setter._field_kind.len() - 1LL));
		_151290fd0_BinopSolver _106421_solver = _151290fd0_BinopSolver(jule::new_struct<_151290fd0_Eval>(new( std::nothrow ) _151290fd0_Eval(this->self->_field_s,this->self,jule::Ref<_15177b070_TypeKind>(),this->self->_method_is_unsafe(),jule::Ref<_1511317d0_Var>())),jule::Ref<_151290fd0_Data>(),jule::Ref<_151290fd0_Data>(),_101743_a->_field_setter);
		_101917_r=_106421_solver._method_solve_explicit(_101817_l,_101917_r);
		if ((!(jule::real(_101917_r)))) {
			return;
		}
		_101743_a->_field_setter._field_kind+=jule::Str("=", 1);
	}
	_1510d19a0_AssignTypeChecker _108017_checker = _1510d19a0_AssignTypeChecker(this->self->_field_s,_101817_l->_field_kind,_101917_r,_101743_a->_field_setter,true);
	_108017_checker._method_check();
}



inline void _150d29660_ScopeChecker::_method___process_end_part_of_multi_assign(jule::Ref<_150d29660_MultiAssign> _109057_st,jule::Ref<_1506406d0_AssignSt> _109113_a,jule::Ref<_1506406d0_AssignLeft> _109127_lexpr,jule::Ref<_151290fd0_Data> _109151_l,jule::Ref<_151290fd0_Data> _109165_r) {
	if (_150640f50_is_ignore_ident(_109127_lexpr->_field_ident)) {
		if (_109165_r->_field_kind->_method_is_void()) {
			(*this)._field_s->_method_push_err(_109113_a->_field_right->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		}
		_109057_st->_field_l=jule::append(_109057_st->_field_l,jule::Slice<jule::Any>({jule::Any(nullptr)}));
		return;
	}
	if (_109113_a->_field_declarative && (*this)._method_is_new_assign_ident(_109127_lexpr->_field_ident)) {
		jule::Ref<_1511317d0_Var> _110321_v = jule::new_struct<_1511317d0_Var>(new( std::nothrow ) _1511317d0_Var((*this)._field_scope,_109127_lexpr->_field_token,_109127_lexpr->_field_ident,jule::Bool(),jule::Bool(),_109127_lexpr->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),_109127_lexpr->_field_reference,jule::Str(),jule::Ref<_15177b070_TypeSymbol>(),jule::new_struct<_151290fd0_Value>(new( std::nothrow ) _151290fd0_Value(_109113_a->_field_right,_109165_r)),jule::Ref<_150e75a70_ReferenceStack>(),jule::Slice<jule::Ref<_1506406d0_Directive>>(),jule::Slice<jule::Ref<_1511317d0_Var>>()));
		(*this)._field_s->_method_check_var(_110321_v);
		_109057_st->_field_l=jule::append(_109057_st->_field_l,jule::Slice<jule::Any>({jule::Any(_110321_v)}));
		(*this)._field_table->_field_vars._method_push(_110321_v);
		(*this)._field_scope->_field_stmts._method_push(jule::Any(_110321_v));
		return;
	}
	if (_109127_lexpr->_field_mutable || _109127_lexpr->_field_reference) {
		(*this)._field_s->_method_push_err(_109127_lexpr->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_109127_lexpr->_field_ident)}));
		(*this)._field_s->_method_push_suggest(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	if ((!(_150d29660_check_assign((*this)._field_s,_109151_l,_109165_r,_109113_a->_field_setter)))) {
		return;
	}
	
	(*this)._field_s->_method_check_validity_for_init_expr(_109151_l->_field_mutable,false,_109151_l->_field_kind,_109165_r,_109113_a->_field_setter);
	_1510d19a0_AssignTypeChecker _113817_checker = _1510d19a0_AssignTypeChecker((*this)._field_s,_109151_l->_field_kind,_109165_r,_109113_a->_field_setter,true);
	_113817_checker._method_check();
	_109057_st->_field_l=jule::append(_109057_st->_field_l,jule::Slice<jule::Any>({_109151_l->_field_model}));
}



inline void _150d29660_ScopeChecker::_method_check_ret_multi_assign(jule::Ref<_1506406d0_AssignSt> _115046_a) {
	jule::Ref<_151290fd0_Data> _115117_rd = this->self->_field_s->_method_eval(_115046_a->_field_right,this->self);
	if ((!(jule::real(_115117_rd)))) {
		return;
	}
	jule::Slice<jule::Ref<_151290fd0_Data>> _115617_r = _150d29660_get_datas_from_tuple_data(_115117_rd);
	{
		if (!((_115046_a->_field_left.len() > _115617_r.len()))) { goto _case_end_5683333184; }
		_case_begin_5683333184:;
		{
			this->self->_field_s->_method_push_err(_115046_a->_field_setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_5683332896;
		_case_end_5683333184:;
		if (!((_115046_a->_field_left.len() < _115617_r.len()))) { goto _case_end_5683333296; }
		_case_begin_5683333296:;
		{
			this->self->_field_s->_method_push_err(_115046_a->_field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_5683332896;
		_case_end_5683333296:;
		_match_end_5683332896:;
	}
	jule::Ref<_150d29660_MultiAssign> _116817_st = jule::new_struct<_150d29660_MultiAssign>(new( std::nothrow ) _150d29660_MultiAssign(jule::Slice<jule::Any>(),_115117_rd->_field_model));
	if ((!(jule::real(_115117_rd->_field_kind->_method_tup())))) {
		_116817_st->_field_r=jule::Any(jule::new_struct<_150f25dd0_TupleExprModel>(new( std::nothrow ) _150f25dd0_TupleExprModel(_115617_r)));
	}
	{
		auto __julec_range_expr = _115046_a->_field_left;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _150d29660_i = 0;
			_iter_begin_5683343584:;
			{
				jule::Ref<_1506406d0_AssignLeft> _117721_lexpr = _115046_a->_field_left[static_cast<jule::Int>(_150d29660_i)];
				jule::Ref<_151290fd0_Data> _117821_l = jule::new_ref<_151290fd0_Data>();
				jule::Ref<_151290fd0_Data> _117921_r = _115617_r[static_cast<jule::Int>(_150d29660_i)];
				if ((!(_150640f50_is_ignore_ident(_117721_lexpr->_field_ident))) && ((!(_115046_a->_field_declarative)) || (!(this->self->_method_is_new_assign_ident(_117721_lexpr->_field_ident))))) {
					_117821_l=this->self->_field_s->_method_eval(_117721_lexpr->_field_expr,this->self);
					if ((!(jule::real(_117821_l)))) {
						goto _iter_next_5683343584;
					}
				}
				this->self->_method___process_end_part_of_multi_assign(_116817_st,_115046_a,_117721_lexpr,_117821_l,_117921_r);
			}
			_iter_next_5683343584:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_150d29660_i; goto _iter_begin_5683343584; }
			_iter_end_5683343584:;
		}
	}
	this->self->_field_scope->_field_stmts._method_push(jule::Any(_116817_st));
}



inline void _150d29660_ScopeChecker::_method_check_multi_assign(jule::Ref<_1506406d0_AssignSt> _119442_a) {
	{
		auto _match_expr{ _119442_a->_field_right->_field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_FnCallExpr>>())) { goto _case_end_5683360272; }
		_case_begin_5683360272:;
		{
			this->self->_method_check_ret_multi_assign(_119442_a);
			return;
		}
		goto _match_end_5683359408;
		_case_end_5683360272:;
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_UnsafeExpr>>())) { goto _case_end_5683360400; }
		_case_begin_5683360400:;
		{
			{
				auto _match_expr{ _119442_a->_field_right->_field_kind.operator jule::Ref<_1506406d0_UnsafeExpr>()->_field_expr };
				if (!(_match_expr.type_is<jule::Ref<_1506406d0_FnCallExpr>>())) { goto _case_end_5683364608; }
				_case_begin_5683364608:;
				{
					this->self->_method_check_ret_multi_assign(_119442_a);
					return;
				}
				goto _match_end_5683361936;
				_case_end_5683364608:;
				_match_end_5683361936:;
			}
		}
		goto _match_end_5683359408;
		_case_end_5683360400:;
		_match_end_5683359408:;
	}
	jule::Slice<jule::Any> _120817_right = _150d29660_get_expr_models(_119442_a->_field_right->_field_kind);
	{
		if (!((_119442_a->_field_left.len() > _120817_right.len()))) { goto _case_end_5683367568; }
		_case_begin_5683367568:;
		{
			this->self->_field_s->_method_push_err(_119442_a->_field_setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_5683365744;
		_case_end_5683367568:;
		if (!((_119442_a->_field_left.len() < _120817_right.len()))) { goto _case_end_5683367680; }
		_case_begin_5683367680:;
		{
			this->self->_field_s->_method_push_err(_119442_a->_field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_5683365744;
		_case_end_5683367680:;
		_match_end_5683365744:;
	}
	jule::Ref<_150f25dd0_TupleExprModel> _122017_right_tuple = jule::new_struct<_150f25dd0_TupleExprModel>(new( std::nothrow ) _150f25dd0_TupleExprModel());
	jule::Ref<_150d29660_MultiAssign> _122217_st = jule::new_struct<_150d29660_MultiAssign>(new( std::nothrow ) _150d29660_MultiAssign(jule::Slice<jule::Any>(),jule::Any(_122017_right_tuple)));
	{
		auto __julec_range_expr = _119442_a->_field_left;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _150d29660_i = 0;
			_iter_begin_5683376752:;
			{
				jule::Ref<_1506406d0_AssignLeft> _122721_lexpr = _119442_a->_field_left[static_cast<jule::Int>(_150d29660_i)];
				jule::Ref<_151290fd0_Data> _122821_l = jule::new_ref<_151290fd0_Data>();
				jule::Ref<_151290fd0_Data> _122921_r = jule::new_ref<_151290fd0_Data>();
				if ((!(_150640f50_is_ignore_ident(_122721_lexpr->_field_ident))) && ((!(_119442_a->_field_declarative)) || (!(this->self->_method_is_new_assign_ident(_122721_lexpr->_field_ident))))) {
					_122821_l=this->self->_field_s->_method_eval(_122721_lexpr->_field_expr,this->self);
					if ((!(jule::real(_122821_l)))) {
						goto _iter_next_5683376752;
					}
				}
				if (jule::real(_122821_l)) {
					jule::Ref<_1506406d0_Expr> _123925_expr = jule::new_struct<_1506406d0_Expr>(new( std::nothrow ) _1506406d0_Expr(_119442_a->_field_right->_field_token,_120817_right[static_cast<jule::Int>(_150d29660_i)]));
					_122921_r=this->self->_field_s->_method_evalp(_123925_expr,this->self,_122821_l->_field_kind);
				} else {
					jule::Ref<_1506406d0_Expr> _124225_expr = jule::new_struct<_1506406d0_Expr>(new( std::nothrow ) _1506406d0_Expr(_119442_a->_field_right->_field_token,_120817_right[static_cast<jule::Int>(_150d29660_i)]));
					_122921_r=this->self->_field_s->_method_eval(_124225_expr,this->self);
				}
				if ((!(jule::real(_122921_r)))) {
					goto _iter_next_5683376752;
				}
				_122017_right_tuple->_field_datas=jule::append(_122017_right_tuple->_field_datas,jule::Slice<jule::Ref<_151290fd0_Data>>({_122921_r}));
				this->self->_method___process_end_part_of_multi_assign(_122217_st,_119442_a,_122721_lexpr,_122821_l,_122921_r);
			}
			_iter_next_5683376752:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_150d29660_i; goto _iter_begin_5683376752; }
			_iter_end_5683376752:;
		}
	}
	this->self->_field_scope->_field_stmts._method_push(jule::Any(_122217_st));
}



inline void _150d29660_ScopeChecker::_method_check_assign_st(jule::Ref<_1506406d0_AssignSt> _125739_a) {
	if (_150640f50_is_postfix_op(_125739_a->_field_setter._field_kind)) {
		this->self->_method_check_postfix(_125739_a);
		return;
	}
	if ((_125739_a->_field_left.len() == 1LL) && (!(_125739_a->_field_declarative))) {
		this->self->_method_check_single_assign(_125739_a);
		return;
	}
	this->self->_method_check_multi_assign(_125739_a);
}



inline jule::Ref<_150d29660_Scope> _150d29660_ScopeChecker::_method_check_case_scope(jule::Ref<_150d29660_Case> _127136_c,jule::Ref<_1506406d0_ScopeTree> _127150_tree) {
	jule::Ref<_150d29660_ScopeChecker> _127217_ssc = this->self->_method_new_child_checker();
	_127217_ssc->_field_cse=((jule::Uintptr)((_127136_c).alloc));
	return this->self->_method_check_child_sc(_127150_tree,_127217_ssc);
}



inline jule::Ref<_150d29660_Case> _150d29660_ScopeChecker::_method_check_case(jule::Ref<_150d29660_Match> _127734_m,jule::Int _127745_i,jule::Ref<_1506406d0_Case> _127757_c,jule::Ref<_151290fd0_Data> _127787_expr) {
	jule::Ref<_150d29660_Case> _127817__case = _127734_m->_field_cases[static_cast<jule::Int>(_127745_i)];
	_127817__case->_field_exprs=jule::Slice<jule::Any>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_127757_c->_field_exprs.len())));
	{
		auto __julec_range_expr = _127757_c->_field_exprs;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _150d29660_i = 0;
			jule::Ref<_1506406d0_Expr> _150d29660_e = *__julec_range_begin;
			_iter_begin_5683423584:;
			{
				if (_127734_m->_field_type_match) {
					jule::Ref<_151290fd0_Eval> _128325_eval = jule::new_struct<_151290fd0_Eval>(new( std::nothrow ) _151290fd0_Eval(this->self->_field_s,this->self,jule::Ref<_15177b070_TypeKind>(),jule::Bool(),jule::Ref<_1511317d0_Var>()));
					jule::Ref<_151290fd0_Data> _128825_d = _128325_eval->_method_eval(_150d29660_e);
					if (jule::real(_128825_d)) {
						_127817__case->_field_exprs[static_cast<jule::Int>(_150d29660_i)]=jule::Any(_128825_d->_field_kind);
						if (_150d29660_count_match_type(_127734_m,_128825_d->_field_kind) > 1LL) {
							this->self->_field_s->_method_push_err(_150d29660_e->_field_token,jule::Str("type is already checked: @", 26),jule::Slice<jule::Any>({jule::Any(_128825_d->_field_kind->_method_to_str())}));
						}
					}
					jule::Ref<_150f166e0_Trait> _129621_trt = _127787_expr->_field_kind->_method_trt();
					if (jule::real(_129621_trt)) {
						this->self->_field_s->_method_check_type_compatibility(_127787_expr->_field_kind,_128825_d->_field_kind,_150d29660_e->_field_token,false);
					}
					goto _iter_next_5683423584;
				}
				jule::Ref<_151290fd0_Data> _130421_d = this->self->_field_s->_method_eval(_150d29660_e,this->self);
				if ((!(jule::real(_130421_d)))) {
					goto _iter_next_5683423584;
				}
				_127817__case->_field_exprs[static_cast<jule::Int>(_150d29660_i)]=_130421_d->_field_model;
				_1510d19a0_AssignTypeChecker _131121_checker = _1510d19a0_AssignTypeChecker(this->self->_field_s,_127787_expr->_field_kind,_130421_d,_150d29660_e->_field_token,true);
				_131121_checker._method_check();
			}
			_iter_next_5683423584:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_150d29660_i; _150d29660_e = *__julec_range_begin; goto _iter_begin_5683423584; }
			_iter_end_5683423584:;
		}
	}
	_127817__case->_field_scope=this->self->_method_check_case_scope(_127817__case,_127757_c->_field_scope);
	return _127817__case;
}



inline void _150d29660_ScopeChecker::_method_check_cases(jule::Ref<_1506406d0_MatchCase> _132535_m,jule::Ref<_150d29660_Match> _132570_rm,jule::Ref<_151290fd0_Data> _132586_expr) {
	_132570_rm->_field_cases=jule::Slice<jule::Ref<_150d29660_Case>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_132535_m->_field_cases.len())));
	{
		auto __julec_range_expr = _132535_m->_field_cases;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _150d29660_i = 0;
			_iter_begin_5683456576:;
			{
				jule::Ref<_150d29660_Case> _132821__case = jule::new_struct<_150d29660_Case>(new( std::nothrow ) _150d29660_Case(_132570_rm,jule::Ref<_150d29660_Scope>(),jule::Slice<jule::Any>(),jule::Ref<_150d29660_Case>()));
				if (_150d29660_i > 0LL) {
					_132570_rm->_field_cases[static_cast<jule::Int>(_150d29660_i - 1LL)]->_field_next=_132821__case;
				}
				_132570_rm->_field_cases[static_cast<jule::Int>(_150d29660_i)]=_132821__case;
			}
			_iter_next_5683456576:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_150d29660_i; goto _iter_begin_5683456576; }
			_iter_end_5683456576:;
		}
	}
	if (jule::real(_132570_rm->_field_default) && (_132535_m->_field_cases.len() > 0LL)) {
		_132570_rm->_field_cases[static_cast<jule::Int>(_132570_rm->_field_cases.len() - 1LL)]->_field_next=_132570_rm->_field_default;
	}
	{
		auto __julec_range_expr = _132535_m->_field_cases;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _150d29660_i = 0;
			jule::Ref<_1506406d0_Case> _150d29660_c = *__julec_range_begin;
			_iter_begin_5683465488:;
			{
				this->self->_method_check_case(_132570_rm,_150d29660_i,_150d29660_c,_132586_expr);
			}
			_iter_next_5683465488:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_150d29660_i; _150d29660_c = *__julec_range_begin; goto _iter_begin_5683465488; }
			_iter_end_5683465488:;
		}
	}
}



inline jule::Ref<_150d29660_Case> _150d29660_ScopeChecker::_method_check_default(jule::Ref<_150d29660_Match> _134837_m,jule::Ref<_1506406d0_Else> _134852_d) {
	jule::Ref<_150d29660_Case> _134917_def = jule::new_struct<_150d29660_Case>(new( std::nothrow ) _150d29660_Case(_134837_m,jule::Ref<_150d29660_Scope>(),jule::Slice<jule::Any>(),jule::Ref<_150d29660_Case>()));
	_134917_def->_field_scope=this->self->_method_check_case_scope(_134917_def,_134852_d->_field_scope);
	return _134917_def;
}



inline void _150d29660_ScopeChecker::_method_check_type_match(jule::Ref<_1506406d0_MatchCase> _135640_m) {
	jule::Ref<_151290fd0_Data> _135717_d = this->self->_field_s->_method_eval(_135640_m->_field_expr,this->self);
	if ((!(jule::real(_135717_d)))) {
		return;
	}
	if ((!((jule::real(_135717_d->_field_kind->_method_prim()) && _135717_d->_field_kind->_method_prim()->_method_is_any()) || jule::real(_135717_d->_field_kind->_method_trt())))) {
		this->self->_field_s->_method_push_err(_135640_m->_field_expr->_field_token,jule::Str("type-case must be have <any> or trait typed expression", 54),jule::Slice<jule::Any>({}));
		return;
	}
	jule::Ref<_150d29660_Match> _136717_tm = jule::new_struct<_150d29660_Match>(new( std::nothrow ) _150d29660_Match(_135717_d,true,jule::Slice<jule::Ref<_150d29660_Case>>(),jule::Ref<_150d29660_Case>()));
	this->self->_field_scope->_field_stmts._method_push(jule::Any(_136717_tm));
	if (jule::real(_135640_m->_field_default)) {
		_136717_tm->_field_default=this->self->_method_check_default(_136717_tm,_135640_m->_field_default);
	}
	this->self->_method_check_cases(_135640_m,_136717_tm,_135717_d);
}



inline void _150d29660_ScopeChecker::_method_check_common_match(jule::Ref<_1506406d0_MatchCase> _138042_m) {
	jule::Ref<_151290fd0_Data> _138117_d = jule::new_ref<_151290fd0_Data>();
	if ((!(jule::real(_138042_m->_field_expr)))) {
		_138117_d=jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_15177b070_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_15177b070_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),_15199b440_Const::_static_method_new_bool(true)));
		_138117_d->_field_model=jule::Any(_138117_d->_field_constant);
	} else {
		_138117_d=this->self->_field_s->_method_eval(_138042_m->_field_expr,this->self);
		if ((!(jule::real(_138117_d)))) {
			return;
		}
	}
	jule::Ref<_150d29660_Match> _139517_mc = jule::new_struct<_150d29660_Match>(new( std::nothrow ) _150d29660_Match(_138117_d,jule::Bool(),jule::Slice<jule::Ref<_150d29660_Case>>(),jule::Ref<_150d29660_Case>()));
	this->self->_field_scope->_field_stmts._method_push(jule::Any(_139517_mc));
	if (jule::real(_138042_m->_field_default)) {
		_139517_mc->_field_default=this->self->_method_check_default(_139517_mc,_138042_m->_field_default);
	}
	this->self->_method_check_cases(_138042_m,_139517_mc,_138117_d);
}



inline void _150d29660_ScopeChecker::_method_check_match(jule::Ref<_1506406d0_MatchCase> _140735_m) {
	if (_140735_m->_field_type_match) {
		this->self->_method_check_type_match(_140735_m);
		return;
	}
	this->self->_method_check_common_match(_140735_m);
}



inline void _150d29660_ScopeChecker::_method_check_fall(jule::Ref<_1506406d0_FallSt> _141529_f) {
	if (((*this)._field_cse == 0LL) || (((*this)._field_scope->_field_stmts._method_len() + 1LL) < (*this)._field_scope->_field_stmts._method_len())) {
		(*this)._field_s->_method_push_err(_141529_f->_field_token,jule::Str("fallthrough keyword can only useable at end of the case scopes", 62),jule::Slice<jule::Any>({}));
		return;
	}
	_150d29660_Case* _142117__case = ((_150d29660_Case*)((*this)._field_cse));
	if ((!(jule::real(_142117__case->_field_next)))) {
		(*this)._field_s->_method_push_err(_141529_f->_field_token,jule::Str("fallthrough cannot useable at final case", 40),jule::Slice<jule::Any>({}));
		(*this)._field_s->_method_push_suggest(jule::Str("remove \"fall\" keyword", 21),jule::Slice<jule::Any>({}));
		return;
	}
	(*this)._field_scope->_field_stmts._method_push(jule::Any(jule::new_struct<_150d29660_FallSt>(new( std::nothrow ) _150d29660_FallSt(static_cast<jule::Uintptr>(((jule::Uintptr)((_142117__case->_field_next).alloc)))))));
}



inline jule::Ref<_150d29660_BreakSt> _150d29660_ScopeChecker::_method_check_break_with_label(jule::Ref<_1506406d0_BreakSt> _143342_b) {
	jule::Ref<_150d29660_BreakSt> _143417_brk = this->self->_method_check_plain_break(_143342_b);
	if ((!(jule::real(_143417_brk)))) {
		return jule::new_ref<_150d29660_BreakSt>();
	}
	_143417_brk->_field_it=0LL;
	_143417_brk->_field_mtch=0LL;
	jule::Ref<_150d29660_ScopeLabel> _144417_label = _150d29660_find_label_parent(_143342_b->_field_label._field_kind,this->self->_field_parent);
	if ((!(jule::real(_144417_label)))) {
		this->self->_field_s->_method_push_err(_143342_b->_field_label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>({jule::Any(_143342_b->_field_label._field_kind)}));
		return jule::new_ref<_150d29660_BreakSt>();
	}
	_144417_label->_field_used=true;
	if ((_144417_label->_field_pos + 1LL) >= _144417_label->_field_scope->_field_scope->_field_stmts._method_len()) {
		this->self->_field_s->_method_push_err(_143342_b->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
		return jule::new_ref<_150d29660_BreakSt>();
	}
	jule::Int _145713_i = _144417_label->_field_pos + 1LL;
	if (_145713_i >= _144417_label->_field_scope->_field_scope->_field_stmts._method_len()) {
		this->self->_field_s->_method_push_err(_143342_b->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
	} else {
		jule::Any _146121_st = _144417_label->_field_scope->_field_scope->_field_stmts._method_at(_145713_i);
		{
			auto _match_expr{ _146121_st };
			if (!(_match_expr.type_is<jule::Ref<_150d29660_InfIter>>())) { goto _case_end_5683551408; }
			_case_begin_5683551408:;
			{
				_143417_brk->_field_it=((jule::Uintptr)((_146121_st.operator jule::Ref<_150d29660_InfIter>()).alloc));
			}
			goto _match_end_5683548224;
			_case_end_5683551408:;
			if (!(_match_expr.type_is<jule::Ref<_150d29660_RangeIter>>())) { goto _case_end_5683549136; }
			_case_begin_5683549136:;
			{
				_143417_brk->_field_it=((jule::Uintptr)((_146121_st.operator jule::Ref<_150d29660_RangeIter>()).alloc));
			}
			goto _match_end_5683548224;
			_case_end_5683549136:;
			if (!(_match_expr.type_is<jule::Ref<_150d29660_WhileIter>>())) { goto _case_end_5683549248; }
			_case_begin_5683549248:;
			{
				_143417_brk->_field_it=((jule::Uintptr)((_146121_st.operator jule::Ref<_150d29660_WhileIter>()).alloc));
			}
			goto _match_end_5683548224;
			_case_end_5683549248:;
			if (!(_match_expr.type_is<jule::Ref<_150d29660_Match>>())) { goto _case_end_5683549360; }
			_case_begin_5683549360:;
			{
				_143417_brk->_field_mtch=((jule::Uintptr)((_146121_st.operator jule::Ref<_150d29660_Match>()).alloc));
			}
			goto _match_end_5683548224;
			_case_end_5683549360:;
			_case_begin_5683548720:;
			{
				this->self->_field_s->_method_push_err(_143342_b->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
			}
			goto _match_end_5683548224;
			_case_end_5683548720:;
			_match_end_5683548224:;
		}
	}
	if (_143417_brk->_field_it != 0LL) {
		if ((!(this->self->_method_check_valid_break_label(_143417_brk->_field_it)))) {
			this->self->_field_s->_method_push_err(_143342_b->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
		}
	}
	if (_143417_brk->_field_mtch != 0LL) {
		if ((!(this->self->_method_check_valid_break_label(_143417_brk->_field_mtch)))) {
			this->self->_field_s->_method_push_err(_143342_b->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
		}
	}
	return _143417_brk;
}



inline jule::Ref<_150d29660_BreakSt> _150d29660_ScopeChecker::_method_check_plain_break(jule::Ref<_1506406d0_BreakSt> _148637_b) {
	jule::Ref<_150d29660_ScopeChecker> _148717_scope = this->self;
	_julec_label_iter:;
	{
		if (!(((((_148717_scope->_field_it == 0LL) && (_148717_scope->_field_cse == 0LL)) && jule::real(_148717_scope->_field_parent)) && (!(jule::real(_148717_scope->_field_owner)))))) { goto _case_end_5683568544; }
		_case_begin_5683568544:;
		{
			_148717_scope=_148717_scope->_field_parent;
			goto _julec_label_iter;
		}
		goto _match_end_5683568352;
		_case_end_5683568544:;
		if (!((_148717_scope->_field_it != 0LL))) { goto _case_end_5683568672; }
		_case_begin_5683568672:;
		{
			return jule::new_struct<_150d29660_BreakSt>(new( std::nothrow ) _150d29660_BreakSt(_148717_scope->_field_it,jule::Uintptr()));
		}
		goto _match_end_5683568352;
		_case_end_5683568672:;
		if (!((_148717_scope->_field_cse != 0LL))) { goto _case_end_5683568800; }
		_case_begin_5683568800:;
		{
			return jule::new_struct<_150d29660_BreakSt>(new( std::nothrow ) _150d29660_BreakSt(jule::Uintptr(),static_cast<jule::Uintptr>(((jule::Uintptr)((((_150d29660_Case*)(_148717_scope->_field_cse))->_field_owner).alloc)))));
		}
		goto _match_end_5683568352;
		_case_end_5683568800:;
		_match_end_5683568352:;
	}
	this->self->_field_s->_method_push_err(_148637_b->_field_token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>({}));
	return jule::new_ref<_150d29660_BreakSt>();
}



inline void _150d29660_ScopeChecker::_method_check_break(jule::Ref<_1506406d0_BreakSt> _150531_b) {
	if (_150531_b->_field_label._field_id != 0LLU) {
		jule::Ref<_150d29660_BreakSt> _150721_brk = this->self->_method_check_break_with_label(_150531_b);
		this->self->_field_scope->_field_stmts._method_push(jule::Any(_150721_brk));
		return;
	}
	jule::Ref<_150d29660_BreakSt> _151217_brk = this->self->_method_check_plain_break(_150531_b);
	this->self->_field_scope->_field_stmts._method_push(jule::Any(_151217_brk));
}



inline void _150d29660_ScopeChecker::_method_check_ret(jule::Ref<_1506406d0_RetSt> _151633_r) {
	jule::Ref<_150d29660_RetSt> _151717_rt = jule::new_struct<_150d29660_RetSt>(new( std::nothrow ) _150d29660_RetSt());
	this->self->_field_scope->_field_stmts._method_push(jule::Any(_151717_rt));
	jule::Ref<_1510d19a0_RetTypeChecker> _152017_rtc = jule::new_struct<_1510d19a0_RetTypeChecker>(new( std::nothrow ) _1510d19a0_RetTypeChecker(this->self,this->self->_method_get_root()->_field_owner,jule::Slice<jule::Ref<_15177b070_TypeKind>>(),jule::Slice<jule::Ref<_1506406d0_Expr>>(),jule::Slice<jule::Ref<_1511317d0_Var>>(),_151633_r->_field_token,jule::Any()));
	jule::Bool _152513_ok = _152017_rtc->_method_check(_151633_r->_field_expr);
	if ((!(_152513_ok))) {
		return;
	}
	if ((!(jule::real(_151633_r->_field_expr))) && (_152017_rtc->_field_vars.len() == 0LL)) {
		return;
	}
	_151717_rt->_field_vars=_152017_rtc->_field_vars;
	if (jule::real(_151633_r->_field_expr)) {
		_151717_rt->_field_expr=_152017_rtc->_field_model;
	}
}



inline void _150d29660_ScopeChecker::_method_check_node(jule::Any _154134_node) {
	{
		auto _match_expr{ _154134_node };
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_Comment>>())) { goto _case_end_5683610720; }
		_case_begin_5683610720:;
		{
			goto _match_end_5683609504;
		}
		goto _match_end_5683609504;
		_case_end_5683610720:;
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_ScopeTree>>())) { goto _case_end_5683610432; }
		_case_begin_5683610432:;
		{
			this->self->_method_check_anon_scope(_154134_node.operator jule::Ref<_1506406d0_ScopeTree>());
		}
		goto _match_end_5683609504;
		_case_end_5683610432:;
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_VarDecl>>())) { goto _case_end_5683610912; }
		_case_begin_5683610912:;
		{
			this->self->_method_check_var_decl(_154134_node.operator jule::Ref<_1506406d0_VarDecl>());
		}
		goto _match_end_5683609504;
		_case_end_5683610912:;
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_TypeAliasDecl>>())) { goto _case_end_5683611424; }
		_case_begin_5683611424:;
		{
			this->self->_method_check_type_alias_decl(_154134_node.operator jule::Ref<_1506406d0_TypeAliasDecl>());
		}
		goto _match_end_5683609504;
		_case_end_5683611424:;
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_Expr>>())) { goto _case_end_5683611968; }
		_case_begin_5683611968:;
		{
			this->self->_method_check_expr(_154134_node.operator jule::Ref<_1506406d0_Expr>());
		}
		goto _match_end_5683609504;
		_case_end_5683611968:;
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_Conditional>>())) { goto _case_end_5683612080; }
		_case_begin_5683612080:;
		{
			this->self->_method_check_conditional(_154134_node.operator jule::Ref<_1506406d0_Conditional>());
		}
		goto _match_end_5683609504;
		_case_end_5683612080:;
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_Iter>>())) { goto _case_end_5683612192; }
		_case_begin_5683612192:;
		{
			this->self->_method_check_iter(_154134_node.operator jule::Ref<_1506406d0_Iter>());
		}
		goto _match_end_5683609504;
		_case_end_5683612192:;
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_ContSt>>())) { goto _case_end_5683612304; }
		_case_begin_5683612304:;
		{
			this->self->_method_check_cont(_154134_node.operator jule::Ref<_1506406d0_ContSt>());
		}
		goto _match_end_5683609504;
		_case_end_5683612304:;
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_LabelSt>>())) { goto _case_end_5683612416; }
		_case_begin_5683612416:;
		{
			this->self->_method_check_label(_154134_node.operator jule::Ref<_1506406d0_LabelSt>());
		}
		goto _match_end_5683609504;
		_case_end_5683612416:;
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_GotoSt>>())) { goto _case_end_5683612528; }
		_case_begin_5683612528:;
		{
			this->self->_method_push_goto(_154134_node.operator jule::Ref<_1506406d0_GotoSt>());
		}
		goto _match_end_5683609504;
		_case_end_5683612528:;
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_AssignSt>>())) { goto _case_end_5683612640; }
		_case_begin_5683612640:;
		{
			this->self->_method_check_assign_st(_154134_node.operator jule::Ref<_1506406d0_AssignSt>());
		}
		goto _match_end_5683609504;
		_case_end_5683612640:;
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_MatchCase>>())) { goto _case_end_5683612752; }
		_case_begin_5683612752:;
		{
			this->self->_method_check_match(_154134_node.operator jule::Ref<_1506406d0_MatchCase>());
		}
		goto _match_end_5683609504;
		_case_end_5683612752:;
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_FallSt>>())) { goto _case_end_5683612864; }
		_case_begin_5683612864:;
		{
			this->self->_method_check_fall(_154134_node.operator jule::Ref<_1506406d0_FallSt>());
		}
		goto _match_end_5683609504;
		_case_end_5683612864:;
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_BreakSt>>())) { goto _case_end_5683612976; }
		_case_begin_5683612976:;
		{
			this->self->_method_check_break(_154134_node.operator jule::Ref<_1506406d0_BreakSt>());
		}
		goto _match_end_5683609504;
		_case_end_5683612976:;
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_RetSt>>())) { goto _case_end_5683613088; }
		_case_begin_5683613088:;
		{
			this->self->_method_check_ret(_154134_node.operator jule::Ref<_1506406d0_RetSt>());
		}
		goto _match_end_5683609504;
		_case_end_5683613088:;
		_case_begin_5683609680:;
		{
			jule::outln(jule::Str("error <unimplemented scope node>", 32));
		}
		goto _match_end_5683609504;
		_case_end_5683609680:;
		_match_end_5683609504:;
	}
}



inline void _150d29660_ScopeChecker::_method_check_tree(void) {
	this->self->_field_i=0LL;
	_iter_begin_5683636352:;
	if (!(this->self->_field_i < this->self->_field_tree->_field_stmts.len())) { goto _iter_end_5683636352; }
	{
		this->self->_method_check_node(this->self->_field_tree->_field_stmts[static_cast<jule::Int>(this->self->_field_i)]);
	}
	_iter_next_5683636352:;
	(this->self->_field_i)++;
	goto _iter_begin_5683636352;
	_iter_end_5683636352:;
}



inline void _150d29660_ScopeChecker::_method_check_same_scope_goto(jule::Ref<_150d29660_ScopeGoto> _156940_gt,jule::Ref<_150d29660_ScopeLabel> _156960_label) {
	if (_156960_label->_field_pos < _156940_gt->_field_pos) {
		return;
	}
	jule::Int _157417_i = _156960_label->_field_pos;
	_iter_begin_5683647968:;
	if (!(_157417_i > _156940_gt->_field_pos)) { goto _iter_end_5683647968; }
	{
		jule::Any _157617_s = _156960_label->_field_scope->_field_scope->_field_stmts._method_at(_157417_i);
		if (_150d29660_st_is_def(_157617_s)) {
			(*this)._field_s->_method_push_err(_156940_gt->_field_gt->_field_token,jule::Str("goto @ jumps over declaration(s)", 32),jule::Slice<jule::Any>({jule::Any(_156940_gt->_field_gt->_field_label._field_kind)}));
			goto _iter_end_5683647968;
		}
	}
	_iter_next_5683647968:;
	(_157417_i)--;
	goto _iter_begin_5683647968;
	_iter_end_5683647968:;
}



inline jule::Bool _150d29660_ScopeChecker::_method_check_label_parents(jule::Ref<_150d29660_ScopeGoto> _158438_gt,jule::Ref<_150d29660_ScopeLabel> _158458_label) {
	jule::Ref<_150d29660_ScopeChecker> _158517_scope = _158458_label->_field_scope;
	_julec_label_parent_scopes:;
	if (jule::real(_158517_scope->_field_parent) && ((_158517_scope->_field_parent).alloc != (_158438_gt->_field_scope).alloc)) {
		_158517_scope=_158517_scope->_field_parent;
		jule::Int _159021_i = 0LL;
		_iter_begin_5683663184:;
		if (!(_159021_i < _158517_scope->_field_scope->_field_stmts._method_len())) { goto _iter_end_5683663184; }
		{
			{
				if (!((_159021_i >= _158458_label->_field_pos))) { goto _case_end_5683664496; }
				_case_begin_5683664496:;
				{
					return true;
				}
				goto _match_end_5683664304;
				_case_end_5683664496:;
				if (!((_150d29660_st_is_def(_158517_scope->_field_scope->_field_stmts._method_at(_159021_i))))) { goto _case_end_5683664624; }
				_case_begin_5683664624:;
				{
					(*this)._field_s->_method_push_err(_158438_gt->_field_gt->_field_token,jule::Str("goto @ jumps over declaration(s)", 32),jule::Slice<jule::Any>({jule::Any(_158438_gt->_field_gt->_field_label._field_kind)}));
					return false;
				}
				goto _match_end_5683664304;
				_case_end_5683664624:;
				_match_end_5683664304:;
			}
		}
		_iter_next_5683663184:;
		(_159021_i)++;
		goto _iter_begin_5683663184;
		_iter_end_5683663184:;
		goto _julec_label_parent_scopes;
	}
	return true;
}



inline void _150d29660_ScopeChecker::_method_check_goto_scope(jule::Ref<_150d29660_ScopeGoto> _160839_gt,jule::Ref<_150d29660_ScopeLabel> _160855_label) {
	jule::Int _160917_i = _160839_gt->_field_pos;
	_iter_begin_5683677136:;
	if (!(_160917_i < _160839_gt->_field_scope->_field_scope->_field_stmts._method_len())) { goto _iter_end_5683677136; }
	{
		{
			if (!((_160917_i >= _160855_label->_field_pos))) { goto _case_end_5683678944; }
			_case_begin_5683678944:;
			{
				return;
			}
			goto _match_end_5683678752;
			_case_end_5683678944:;
			if (!((_150d29660_st_is_def(_160839_gt->_field_scope->_field_scope->_field_stmts._method_at(_160917_i))))) { goto _case_end_5683679072; }
			_case_begin_5683679072:;
			{
				(*this)._field_s->_method_push_err(_160839_gt->_field_gt->_field_token,jule::Str("goto @ jumps over declaration(s)", 32),jule::Slice<jule::Any>({jule::Any(_160839_gt->_field_gt->_field_label._field_kind)}));
				return;
			}
			goto _match_end_5683678752;
			_case_end_5683679072:;
			_match_end_5683678752:;
		}
	}
	_iter_next_5683677136:;
	(_160917_i)++;
	goto _iter_begin_5683677136;
	_iter_end_5683677136:;
}



inline void _150d29660_ScopeChecker::_method_check_diff_scope_goto(jule::Ref<_150d29660_ScopeGoto> _162244_gt,jule::Ref<_150d29660_ScopeLabel> _162264_label) {
	{
		if (!(((_162264_label->_field_scope->_field_child_index > 0LL) && (_162244_gt->_field_scope->_field_child_index == 0LL)))) { goto _case_end_5683689024; }
		_case_begin_5683689024:;
		{
			if ((!((*this)._method_check_label_parents(_162244_gt,_162264_label)))) {
				return;
			}
		}
		goto _match_end_5683688816;
		_case_end_5683689024:;
		if (!((_162264_label->_field_scope->_field_child_index < _162244_gt->_field_scope->_field_child_index))) { goto _case_end_5683689152; }
		_case_begin_5683689152:;
		{
			return;
		}
		goto _match_end_5683688816;
		_case_end_5683689152:;
		_match_end_5683688816:;
	}
	jule::Ref<_150d29660_ScopeChecker> _163317_scope = _162264_label->_field_scope;
	jule::Int _163417_i = _162264_label->_field_pos - 1LL;
	_iter_begin_5683694848:;
	if (!(_163417_i >= 0LL)) { goto _iter_end_5683694848; }
	{
		jule::Any _163617_s = _163317_scope->_field_scope->_field_stmts._method_at(_163417_i);
		{
			auto _match_expr{ _163617_s };
			if (!(_match_expr.type_is<jule::Ref<_150d29660_Scope>>())) { goto _case_end_5683698784; }
			_case_begin_5683698784:;
			{
				if (_163417_i <= _162244_gt->_field_pos) {
					return;
				}
			}
			goto _match_end_5683697008;
			_case_end_5683698784:;
			_match_end_5683697008:;
		}
		if (_150d29660_st_is_def(_163617_s)) {
			(*this)._field_s->_method_push_err(_162244_gt->_field_gt->_field_token,jule::Str("goto @ jumps over declaration(s)", 32),jule::Slice<jule::Any>({jule::Any(_162244_gt->_field_gt->_field_label._field_kind)}));
			goto _iter_end_5683694848;
		}
	}
	_iter_next_5683694848:;
	(_163417_i)--;
	goto _iter_begin_5683694848;
	_iter_end_5683694848:;
	if (jule::real(_163317_scope->_field_parent) && ((_163317_scope->_field_parent).alloc != (_162244_gt->_field_scope).alloc)) {
		(*this)._method_check_label_parents(_162244_gt,_162264_label);
	} else {
		(*this)._method_check_goto_scope(_162244_gt,_162264_label);
	}
}



inline void _150d29660_ScopeChecker::_method_check_goto(jule::Ref<_150d29660_ScopeGoto> _165833_gt,jule::Ref<_150d29660_ScopeLabel> _165853_label) {
	{
		if (!(((_165833_gt->_field_scope).alloc == (_165853_label->_field_scope).alloc))) { goto _case_end_5683710448; }
		_case_begin_5683710448:;
		{
			(*this)._method_check_same_scope_goto(_165833_gt,_165853_label);
		}
		goto _match_end_5683710240;
		_case_end_5683710448:;
		if (!((_165853_label->_field_scope->_field_child_index > 0LL))) { goto _case_end_5683710576; }
		_case_begin_5683710576:;
		{
			(*this)._method_check_diff_scope_goto(_165833_gt,_165853_label);
		}
		goto _match_end_5683710240;
		_case_end_5683710576:;
		_match_end_5683710240:;
	}
}



inline void _150d29660_ScopeChecker::_method_check_gotos(void) {
	{
		auto __julec_range_expr = (*this)._field_gotos.get();
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_150d29660_ScopeGoto> _150d29660_gt = *__julec_range_begin;
			_iter_begin_5683716032:;
			{
				jule::Ref<_150d29660_ScopeLabel> _167021_label = (*this)._method_find_label_all(_150d29660_gt->_field_gt->_field_label._field_kind);
				if ((!(jule::real(_167021_label)))) {
					(*this)._field_s->_method_push_err(_150d29660_gt->_field_gt->_field_token,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>({jule::Any(_150d29660_gt->_field_gt->_field_label._field_kind)}));
					goto _iter_next_5683716032;
				}
				_167021_label->_field_used=true;
				(*this)._method_check_goto(_150d29660_gt,_167021_label);
			}
			_iter_next_5683716032:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _150d29660_gt = *__julec_range_begin; goto _iter_begin_5683716032; }
			_iter_end_5683716032:;
		}
	}
}



inline void _150d29660_ScopeChecker::_method_check_labels(void) {
	{
		auto __julec_range_expr = (*this)._field_labels.get();
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_150d29660_ScopeLabel> _150d29660_l = *__julec_range_begin;
			_iter_begin_5683726688:;
			{
				if ((!(_150d29660_l->_field_used))) {
					(*this)._field_s->_method_push_err(_150d29660_l->_field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>({jule::Any(_150d29660_l->_field_label->_field_ident)}));
				}
			}
			_iter_next_5683726688:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _150d29660_l = *__julec_range_begin; goto _iter_begin_5683726688; }
			_iter_end_5683726688:;
		}
	}
}



inline void _150d29660_ScopeChecker::_method_check_vars(void) {
	jule::Int _169017_i = 0LL;
	_iter_begin_5683732112:;
	if (!(_169017_i < (*this)._field_table->_field_vars._method_len())) { goto _iter_end_5683732112; }
	{
		jule::Ref<_1511317d0_Var> _169217_v = (*this)._field_table->_field_vars._method_at(_169017_i);
		if ((((!(_169217_v->_field_used)) && (!(_150640f50_is_ignore_ident(_169217_v->_field_ident)))) && (!(_150640f50_is_anon_ident(_169217_v->_field_ident)))) && (_169217_v->_field_ident != jule::Str("self", 4))) {
			(*this)._field_s->_method_push_err(_169217_v->_field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>({jule::Any(_169217_v->_field_ident)}));
		}
	}
	_iter_next_5683732112:;
	(_169017_i)++;
	goto _iter_begin_5683732112;
	_iter_end_5683732112:;
}



inline void _150d29660_ScopeChecker::_method_check_aliases(void) {
	jule::Int _170017_i = 0LL;
	_iter_begin_5683742400:;
	if (!(_170017_i < (*this)._field_table->_field_type_aliases._method_len())) { goto _iter_end_5683742400; }
	{
		jule::Ref<_15177b070_TypeAlias> _170217_a = (*this)._field_table->_field_type_aliases._method_at(_170017_i);
		if (((!(_170217_a->_field_used)) && (!(_150640f50_is_ignore_ident(_170217_a->_field_ident)))) && (!(_150640f50_is_anon_ident(_170217_a->_field_ident)))) {
			(*this)._field_s->_method_push_err(_170217_a->_field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>({jule::Any(_170217_a->_field_ident)}));
		}
	}
	_iter_next_5683742400:;
	(_170017_i)++;
	goto _iter_begin_5683742400;
	_iter_end_5683742400:;
}



inline void _150d29660_ScopeChecker::_method_check(jule::Ref<_1506406d0_ScopeTree> _171029_tree,jule::Ref<_150d29660_Scope> _171051_s) {
	_171051_s->_field_deferred=_171029_tree->_field_deferred;
	_171051_s->_field_unsafety=_171029_tree->_field_unsafety;
	jule::I64 _171413_errors = this->self->_field_s->_field_errors.len();
	this->self->_field_tree=_171029_tree;
	this->self->_field_scope=_171051_s;
	this->self->_method_check_tree();
	if (_171413_errors == this->self->_field_s->_field_errors.len()) {
		this->self->_method_check_vars();
		this->self->_method_check_aliases();
	}
	if (this->self->_method_is_root()) {
		this->self->_method_check_gotos();
		this->self->_method_check_labels();
	}
}



inline jule::Ref<_150d29660_ScopeChecker> _150d29660_ScopeChecker::_method_new_child_checker(void) {
	jule::Ref<_150d29660_ScopeChecker> _173417_base = _150d29660_new_scope_checker_base(this->self->_field_s,jule::new_ref<_15081bcd0_FnIns>());
	_173417_base->_field_parent=this->self;
	_173417_base->_field_labels=this->self->_field_labels;
	_173417_base->_field_gotos=this->self->_field_gotos;
	_173417_base->_field_child_index=static_cast<jule::Int>(this->self->_field_child_index + 1LL);
	return _173417_base;
}







std::ostream &operator<<(std::ostream &_Stream, const _150d29660_ScopeChecker &_Src) {
	_Stream << "ScopeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "child_index:" << _Src._field_child_index << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _150f25dd0_BinopExprModel &_Src) {
	_Stream << "BinopExprModel{";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _150f25dd0_UnaryExprModel &_Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _150f25dd0_GetRefPtrExprModel &_Src) {
	_Stream << "GetRefPtrExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _150f25dd0_StructArgExprModel &_Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _150f25dd0_StructLitExprModel &_Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "strct:" << _Src._field_strct << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _150f25dd0_AllocStructLitExprModel &_Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "lit:" << _Src._field_lit;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _150f25dd0_CastingExprModel &_Src) {
	_Stream << "CastingExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr_kind:" << _Src._field_expr_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _150f25dd0_FnCallExprModel &_Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "is_co:" << _Src._field_is_co << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _150f25dd0_SliceExprModel &_Src) {
	_Stream << "SliceExprModel{";
	_Stream << "elem_kind:" << _Src._field_elem_kind << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _150f25dd0_IndexigExprModel &_Src) {
	_Stream << "IndexigExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "index:" << _Src._field_index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _150f25dd0_AnonFnExprModel &_Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "global:" << _Src._field_global;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _150f25dd0_KeyValPairExprModel &_Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _150f25dd0_MapExprModel &_Src) {
	_Stream << "MapExprModel{";
	_Stream << "key_kind:" << _Src._field_key_kind << ", ";
	_Stream << "val_kind:" << _Src._field_val_kind << ", ";
	_Stream << "entries:" << _Src._field_entries;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _150f25dd0_SlicingExprModel &_Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _150f25dd0_TraitSubIdentExprModel &_Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _150f25dd0_StructSubIdentExprModel &_Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "expr_kind:" << _Src._field_expr_kind << ", ";
	_Stream << "method:" << _Src._field_method << ", ";
	_Stream << "field:" << _Src._field_field;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _150f25dd0_StructStaticIdentExprModel &_Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "structure:" << _Src._field_structure << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "method:" << _Src._field_method;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _150f25dd0_ArrayExprModel &_Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _150f25dd0_CommonIdentExprModel &_Src) {
	_Stream << "CommonIdentExprModel{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _150f25dd0_CommonSubIdentExprModel &_Src) {
	_Stream << "CommonSubIdentExprModel{";
	_Stream << "expr_kind:" << _Src._field_expr_kind << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _150f25dd0_TupleExprModel &_Src) {
	_Stream << "TupleExprModel{";
	_Stream << "datas:" << _Src._field_datas;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _150f25dd0_BuiltinOutCallExprModel &_Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _150f25dd0_BuiltinOutlnCallExprModel &_Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _150f25dd0_BuiltinCloneCallExprModel &_Src) {
	_Stream << "BuiltinCloneCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _150f25dd0_BuiltinNewCallExprModel &_Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "init:" << _Src._field_init;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _150f25dd0_BuiltinRealCallExprModel &_Src) {
	_Stream << "BuiltinRealCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _150f25dd0_BuiltinDropCallExprModel &_Src) {
	_Stream << "BuiltinDropCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _150f25dd0_BuiltinPanicCallExprModel &_Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _150f25dd0_BuiltinMakeCallExprModel &_Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "len:" << _Src._field_len << ", ";
	_Stream << "cap:" << _Src._field_cap;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _150f25dd0_BuiltinAppendCallExprModel &_Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "elements:" << _Src._field_elements;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _150f25dd0_BuiltinErrorTraitSubIdentExprModel &_Src) {
	_Stream << "BuiltinErrorTraitSubIdentExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _150f25dd0_SizeofExprModel &_Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _150f25dd0_AlignofExprModel &_Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _150f25dd0_RuneExprModel &_Src) {
	_Stream << "RuneExprModel{";
	_Stream << "code:" << _Src._field_code;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _150f25dd0_ExplicitDerefExprModel &_Src) {
	_Stream << "ExplicitDerefExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_150f26340_ImportInfo> _150f26340_Package::_method_find_package(jule::Str ) {
	return jule::new_ref<_150f26340_ImportInfo>();
}



inline jule::Ref<_150f26340_ImportInfo> _150f26340_Package::_method_select_package(jule::Fn<jule::Bool(jule::Ref<_150f26340_ImportInfo>)> ) {
	return jule::new_ref<_150f26340_ImportInfo>();
}



inline jule::Ref<_1511317d0_Var> _150f26340_Package::_method_find_var(jule::Str _26331_ident,jule::Bool _26343_cpp_linked) {
	return _150f26340_find_var_in_package((*this)._field_files,_26331_ident,_26343_cpp_linked);
}



inline jule::Ref<_15177b070_TypeAlias> _150f26340_Package::_method_find_type_alias(jule::Str _26938_ident,jule::Bool _26950_cpp_linked) {
	return _150f26340_find_type_alias_in_package((*this)._field_files,_26938_ident,_26950_cpp_linked);
}



inline jule::Ref<_150a13110_Struct> _150f26340_Package::_method_find_struct(jule::Str _27534_ident,jule::Bool _27546_cpp_linked) {
	return _150f26340_find_struct_in_package((*this)._field_files,_27534_ident,_27546_cpp_linked);
}



inline jule::Ref<_15081bcd0_Fn> _150f26340_Package::_method_find_fn(jule::Str _28130_ident,jule::Bool _28142_cpp_linked) {
	return _150f26340_find_fn_in_package((*this)._field_files,_28130_ident,_28142_cpp_linked);
}



inline jule::Ref<_150f166e0_Trait> _150f26340_Package::_method_find_trait(jule::Str _28733_ident) {
	return _150f26340_find_trait_in_package((*this)._field_files,_28733_ident);
}



inline jule::Ref<_150f1c930_Enum> _150f26340_Package::_method_find_enum(jule::Str _29332_ident) {
	return _150f26340_find_enum_in_package((*this)._field_files,_29332_ident);
}







std::ostream &operator<<(std::ostream &_Stream, const _150f26340_Package &_Src) {
	_Stream << "Package{";
	_Stream << "files:" << _Src._field_files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_150f26340_ImportInfo> _1510c9150_Sema::_method_find_package(jule::Str _30735_ident) {
	return (*this)._field_file->_method_find_package(_30735_ident);
}



inline jule::Ref<_150f26340_ImportInfo> _1510c9150_Sema::_method_select_package(jule::Fn<jule::Bool(jule::Ref<_150f26340_ImportInfo>)> _31737_selector) {
	return (*this)._field_file->_method_select_package(_31737_selector);
}



inline jule::Ref<_1511317d0_Var> _1510c9150_Sema::_method_find_var(jule::Str _32731_ident,jule::Bool _32743_cpp_linked) {
	jule::Ref<_1511317d0_Var> _32917_v = _150f26340_find_var_in_package((*this)._field_files,_32731_ident,_32743_cpp_linked);
	if (jule::real(_32917_v)) {
		return _32917_v;
	}
	jule::Int _33517_i = 0LL;
	_iter_begin_5683861728:;
	if (!(_33517_i < (*this)._field_file->_field_imports._method_len())) { goto _iter_end_5683861728; }
	{
		jule::Ref<_150f26340_ImportInfo> _33721_imp = (*this)._field_file->_field_imports._method_at(_33517_i);
		if ((!(_1510c9150_imp_is_lookupable(_33721_imp,_32731_ident)))) {
			goto _iter_next_5683861728;
		}
		jule::Ref<_1511317d0_Var> _34121_v = _33721_imp->_method_find_var(_32731_ident,_32743_cpp_linked);
		if (jule::real(_34121_v) && (*this)._method_is_accessible_define(_34121_v->_field_public,_34121_v->_field_token)) {
			return _34121_v;
		}
	}
	_iter_next_5683861728:;
	(_33517_i)++;
	goto _iter_begin_5683861728;
	_iter_end_5683861728:;
	return jule::new_ref<_1511317d0_Var>();
}



inline jule::Ref<_15177b070_TypeAlias> _1510c9150_Sema::_method_find_type_alias(jule::Str _35638_ident,jule::Bool _35650_cpp_linked) {
	jule::Ref<_15177b070_TypeAlias> _35817_ta = _150f26340_find_type_alias_in_package((*this)._field_files,_35638_ident,_35650_cpp_linked);
	if (jule::real(_35817_ta)) {
		return _35817_ta;
	}
	jule::Int _36417_i = 0LL;
	_iter_begin_5683877072:;
	if (!(_36417_i < (*this)._field_file->_field_imports._method_len())) { goto _iter_end_5683877072; }
	{
		jule::Ref<_150f26340_ImportInfo> _36621_imp = (*this)._field_file->_field_imports._method_at(_36417_i);
		if ((!(_1510c9150_imp_is_lookupable(_36621_imp,_35638_ident)))) {
			goto _iter_next_5683877072;
		}
		jule::Ref<_15177b070_TypeAlias> _37021_ta = _36621_imp->_method_find_type_alias(_35638_ident,_35650_cpp_linked);
		if (jule::real(_37021_ta) && (*this)._method_is_accessible_define(_37021_ta->_field_public,_37021_ta->_field_token)) {
			return _37021_ta;
		}
	}
	_iter_next_5683877072:;
	(_36417_i)++;
	goto _iter_begin_5683877072;
	_iter_end_5683877072:;
	return jule::new_ref<_15177b070_TypeAlias>();
}



inline jule::Ref<_150a13110_Struct> _1510c9150_Sema::_method_find_struct(jule::Str _38534_ident,jule::Bool _38546_cpp_linked) {
	jule::Ref<_150a13110_Struct> _38717_strct = _150f26340_find_struct_in_package((*this)._field_files,_38534_ident,_38546_cpp_linked);
	if (jule::real(_38717_strct)) {
		return _38717_strct;
	}
	jule::Int _39317_i = 0LL;
	_iter_begin_5683890336:;
	if (!(_39317_i < (*this)._field_file->_field_imports._method_len())) { goto _iter_end_5683890336; }
	{
		jule::Ref<_150f26340_ImportInfo> _39521_imp = (*this)._field_file->_field_imports._method_at(_39317_i);
		if ((!(_1510c9150_imp_is_lookupable(_39521_imp,_38534_ident)))) {
			goto _iter_next_5683890336;
		}
		jule::Ref<_150a13110_Struct> _39921_strct = _39521_imp->_method_find_struct(_38534_ident,_38546_cpp_linked);
		if (jule::real(_39921_strct) && (*this)._method_is_accessible_define(_39921_strct->_field_public,_39921_strct->_field_token)) {
			return _39921_strct;
		}
	}
	_iter_next_5683890336:;
	(_39317_i)++;
	goto _iter_begin_5683890336;
	_iter_end_5683890336:;
	return jule::new_ref<_150a13110_Struct>();
}



inline jule::Ref<_15081bcd0_Fn> _1510c9150_Sema::_method_find_fn(jule::Str _41430_ident,jule::Bool _41442_cpp_linked) {
	jule::Ref<_15081bcd0_Fn> _41617_f = _150f26340_find_fn_in_package((*this)._field_files,_41430_ident,_41442_cpp_linked);
	if (jule::real(_41617_f)) {
		return _41617_f;
	}
	jule::Int _42217_i = 0LL;
	_iter_begin_5683904000:;
	if (!(_42217_i < (*this)._field_file->_field_imports._method_len())) { goto _iter_end_5683904000; }
	{
		jule::Ref<_150f26340_ImportInfo> _42421_imp = (*this)._field_file->_field_imports._method_at(_42217_i);
		if ((!(_1510c9150_imp_is_lookupable(_42421_imp,_41430_ident)))) {
			goto _iter_next_5683904000;
		}
		jule::Ref<_15081bcd0_Fn> _42821_f = _42421_imp->_method_find_fn(_41430_ident,_41442_cpp_linked);
		if (jule::real(_42821_f) && (*this)._method_is_accessible_define(_42821_f->_field_public,_42821_f->_field_token)) {
			return _42821_f;
		}
	}
	_iter_next_5683904000:;
	(_42217_i)++;
	goto _iter_begin_5683904000;
	_iter_end_5683904000:;
	return jule::new_ref<_15081bcd0_Fn>();
}



inline jule::Ref<_150f166e0_Trait> _1510c9150_Sema::_method_find_trait(jule::Str _44333_ident) {
	jule::Ref<_150f166e0_Trait> _44517_t = _150f26340_find_trait_in_package((*this)._field_files,_44333_ident);
	if (jule::real(_44517_t)) {
		return _44517_t;
	}
	jule::Int _45117_i = 0LL;
	_iter_begin_5683915648:;
	if (!(_45117_i < (*this)._field_file->_field_imports._method_len())) { goto _iter_end_5683915648; }
	{
		jule::Ref<_150f26340_ImportInfo> _45321_imp = (*this)._field_file->_field_imports._method_at(_45117_i);
		if ((!(_1510c9150_imp_is_lookupable(_45321_imp,_44333_ident)))) {
			goto _iter_next_5683915648;
		}
		jule::Ref<_150f166e0_Trait> _45721_t = _45321_imp->_method_find_trait(_44333_ident);
		if (jule::real(_45721_t) && (*this)._method_is_accessible_define(_45721_t->_field_public,_45721_t->_field_token)) {
			return _45721_t;
		}
	}
	_iter_next_5683915648:;
	(_45117_i)++;
	goto _iter_begin_5683915648;
	_iter_end_5683915648:;
	return jule::new_ref<_150f166e0_Trait>();
}



inline jule::Ref<_150f1c930_Enum> _1510c9150_Sema::_method_find_enum(jule::Str _47232_ident) {
	jule::Ref<_150f1c930_Enum> _47417_e = _150f26340_find_enum_in_package((*this)._field_files,_47232_ident);
	if (jule::real(_47417_e)) {
		return _47417_e;
	}
	jule::Int _48017_i = 0LL;
	_iter_begin_5683928368:;
	if (!(_48017_i < (*this)._field_file->_field_imports._method_len())) { goto _iter_end_5683928368; }
	{
		jule::Ref<_150f26340_ImportInfo> _48221_imp = (*this)._field_file->_field_imports._method_at(_48017_i);
		if ((!(_1510c9150_imp_is_lookupable(_48221_imp,_47232_ident)))) {
			goto _iter_next_5683928368;
		}
		jule::Ref<_150f1c930_Enum> _48621_e = _48221_imp->_method_find_enum(_47232_ident);
		if (jule::real(_48621_e) && (*this)._method_is_accessible_define(_48621_e->_field_public,_48621_e->_field_token)) {
			return _48621_e;
		}
	}
	_iter_next_5683928368:;
	(_48017_i)++;
	goto _iter_begin_5683928368;
	_iter_end_5683928368:;
	return jule::new_ref<_150f1c930_Enum>();
}



inline void _1510c9150_Sema::_method_set_current_file(jule::Ref<_15128c4d0_SymbolTable> _49739_f) {
	(*this)._field_file=_49739_f;
}



inline void _1510c9150_Sema::_method_push_err(_150640f50_Token _49927_token,jule::Str _49941_fmt,jule::Slice<jule::Any> _49954_args) {
	(*this)._field_errors=jule::append((*this)._field_errors,jule::Slice<_157e34dc0_Log>({_1510c9150_compiler_err(_49927_token,true,_49941_fmt,_49954_args)}));
}



inline void _1510c9150_Sema::_method_push_suggest(jule::Str _50431_fmt,jule::Slice<jule::Any> _50444_args) {
	{
		_1510c9150_push_suggest((&((*this)._field_errors[static_cast<jule::Int>((*this)._field_errors.len() - 1LL)])),_50431_fmt,_50444_args);
	}
}



inline jule::Bool _1510c9150_Sema::_method_is_accessible_define(jule::Bool _50935_public,_150640f50_Token _50949_token) {
	return (_50935_public || (!(jule::real(_50949_token._field_file)))) || ((*this)._field_file->_field_file->_method_dir() == _50949_token._field_file->_method_dir());
}



inline jule::Bool _1510c9150_Sema::_method_is_duplicated_ident(jule::Uintptr _51634_itself,jule::Str _51651_ident,jule::Bool _51663_cpp_linked) {
	{
		auto __julec_range_expr = (*this)._field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_15128c4d0_SymbolTable> _1510c9150_f = *__julec_range_begin;
			_iter_begin_5683959504:;
			{
				if (_1510c9150_f->_method_is_duplicated_ident(_51634_itself,_51651_ident,_51663_cpp_linked)) {
					return true;
				}
				jule::Int _52221_i = 0LL;
				_iter_begin_5683964720:;
				if (!(_52221_i < _1510c9150_f->_field_imports._method_len())) { goto _iter_end_5683964720; }
				{
					jule::Ref<_150f26340_ImportInfo> _52421_imp = (&(_1510c9150_f->_field_imports))->_method_at(_52221_i);
					{
						auto __julec_range_expr = _52421_imp->_field_selected;
						if (__julec_range_expr.begin() != __julec_range_expr.end()) {
							auto __julec_range_begin = __julec_range_expr.begin();
							const auto __julec_range_end = __julec_range_expr.end();
							_150640f50_Token _1510c9150_selected = *__julec_range_begin;
							_iter_begin_5683967936:;
							{
								if (_1510c9150_selected._field_kind == _51651_ident) {
									return true;
								}
							}
							_iter_next_5683967936:;
							++__julec_range_begin;
							if (__julec_range_begin != __julec_range_end) { _1510c9150_selected = *__julec_range_begin; goto _iter_begin_5683967936; }
							_iter_end_5683967936:;
						}
					}
				}
				_iter_next_5683964720:;
				(_52221_i)++;
				goto _iter_begin_5683964720;
				_iter_end_5683964720:;
			}
			_iter_next_5683959504:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1510c9150_f = *__julec_range_begin; goto _iter_begin_5683959504; }
			_iter_end_5683959504:;
		}
	}
	return false;
}



inline jule::Bool _1510c9150_Sema::_method_check_generic_quantity(jule::Int _53541_required,jule::Int _53556_given,_150640f50_Token _53568_error_token) {
	jule::Bool _53590_ok = jule::Bool();
	{
		if (!(((_53541_required == 0LL) && (_53556_given > 0LL)))) { goto _case_end_5683975952; }
		_case_begin_5683975952:;
		{
			(*this)._method_push_err(_53568_error_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
			_53590_ok = false;
			return _53590_ok;
		}
		goto _match_end_5683974832;
		_case_end_5683975952:;
		if (!(((_53541_required > 0LL) && (_53556_given == 0LL)))) { goto _case_end_5683976064; }
		_case_begin_5683976064:;
		{
			(*this)._method_push_err(_53568_error_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>({}));
			_53590_ok = false;
			return _53590_ok;
		}
		goto _match_end_5683974832;
		_case_end_5683976064:;
		if (!((_53541_required < _53556_given))) { goto _case_end_5683976176; }
		_case_begin_5683976176:;
		{
			(*this)._method_push_err(_53568_error_token,jule::Str("overflow generics", 17),jule::Slice<jule::Any>({}));
			_53590_ok = false;
			return _53590_ok;
		}
		goto _match_end_5683974832;
		_case_end_5683976176:;
		if (!((_53541_required > _53556_given))) { goto _case_end_5683975248; }
		_case_begin_5683975248:;
		{
			(*this)._method_push_err(_53568_error_token,jule::Str("missing generics", 16),jule::Slice<jule::Any>({}));
			_53590_ok = false;
			return _53590_ok;
		}
		goto _match_end_5683974832;
		_case_end_5683975248:;
		_case_begin_5683974944:;
		{
			_53590_ok = true;
			return _53590_ok;
		}
		goto _match_end_5683974832;
		_case_end_5683974944:;
		_match_end_5683974832:;
	}
}



inline jule::Bool _1510c9150_Sema::_method_is_duplicated_import_selection(jule::Uintptr _55845_itself,jule::Str _55862_ident) {
	jule::Int _55917_i = 0LL;
	_iter_begin_5683987248:;
	if (!(_55917_i < (*this)._field_file->_field_imports._method_len())) { goto _iter_end_5683987248; }
	{
		jule::Ref<_150f26340_ImportInfo> _56117_imp = ((*this)._field_file).alloc->_field_imports._method_at(_55917_i);
		if (((jule::Uintptr)((_56117_imp).alloc)) == _55845_itself) {
			goto _iter_end_5683987248;
		}
		if (_56117_imp->_method_exist_ident(_55862_ident)) {
			return true;
		}
	}
	_iter_next_5683987248:;
	(_55917_i)++;
	goto _iter_begin_5683987248;
	_iter_end_5683987248:;
	return false;
}



inline jule::Any _1510c9150_Sema::_method_get_import_def(jule::Str _57529_ident,jule::Ref<_150f26340_ImportInfo>& _57546_imp) {
	if (_1518a9420_find_package_builtin_def(_57546_imp->_field_link_path,_57529_ident) != nullptr) {
		return jule::Any(true);
	}
	{
		auto __julec_range_expr = _57546_imp->_field_package->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_15128c4d0_SymbolTable> _1510c9150_f = *__julec_range_begin;
			_iter_begin_5683999488:;
			{
				
				jule::Any _58221_def = _1510c9150_f->_method_def_by_ident(_57529_ident,false);
				if (_58221_def != nullptr) {
					return _58221_def;
				}
			}
			_iter_next_5683999488:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1510c9150_f = *__julec_range_begin; goto _iter_begin_5683999488; }
			_iter_end_5683999488:;
		}
	}
	return jule::Any(nullptr);
}



inline void _1510c9150_Sema::_method_check_import_selections(jule::Ref<_150f26340_ImportInfo> _59146_imp) {
	(*this)._method_set_current_file((*this)._field_files[0LL]);
	__JULE_DEFER({
		jule::drop((*this)._field_file);
	});
	{
		auto __julec_range_expr = _59146_imp->_field_selected;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			_150640f50_Token _1510c9150_ident = *__julec_range_begin;
			_iter_begin_5684006960:;
			{
				if (_1510c9150_ident._field_kind == jule::Str("self", 4)) {
					goto _iter_next_5684006960;
				}
				if ((*this)._method_is_duplicated_import_selection(((jule::Uintptr)((_59146_imp).alloc)),_1510c9150_ident._field_kind)) {
					(*this)._method_push_err(_1510c9150_ident,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1510c9150_ident._field_kind)}));
					(*this)._method_push_suggest(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
					goto _iter_next_5684006960;
				}
				jule::Any _60721_def = (*this)._method_get_import_def(_1510c9150_ident._field_kind,_59146_imp);
				{
					auto _match_expr{ _60721_def };
					if (!(_match_expr.type_is<jule::Bool>())) { goto _case_end_5684016944; }
					_case_begin_5684016944:;
					{
						goto _iter_next_5684006960;
					}
					goto _match_end_5684015584;
					_case_end_5684016944:;
					if (!(_match_expr.type_is<jule::Ref<_1511317d0_Var>>())) { goto _case_end_5684017056; }
					_case_begin_5684017056:;
					{
						jule::Ref<_1511317d0_Var> _61425_v = _60721_def.operator jule::Ref<_1511317d0_Var>();
						if ((*this)._method_is_accessible_define(_61425_v->_field_public,_61425_v->_field_token)) {
							goto _iter_next_5684006960;
						}
					}
					goto _match_end_5684015584;
					_case_end_5684017056:;
					if (!(_match_expr.type_is<jule::Ref<_15177b070_TypeAlias>>())) { goto _case_end_5684019184; }
					_case_begin_5684019184:;
					{
						jule::Ref<_15177b070_TypeAlias> _62025_ta = _60721_def.operator jule::Ref<_15177b070_TypeAlias>();
						if ((*this)._method_is_accessible_define(_62025_ta->_field_public,_62025_ta->_field_token)) {
							goto _iter_next_5684006960;
						}
					}
					goto _match_end_5684015584;
					_case_end_5684019184:;
					if (!(_match_expr.type_is<jule::Ref<_150a13110_Struct>>())) { goto _case_end_5684019296; }
					_case_begin_5684019296:;
					{
						jule::Ref<_150a13110_Struct> _62625_strct = _60721_def.operator jule::Ref<_150a13110_Struct>();
						if ((*this)._method_is_accessible_define(_62625_strct->_field_public,_62625_strct->_field_token)) {
							goto _iter_next_5684006960;
						}
					}
					goto _match_end_5684015584;
					_case_end_5684019296:;
					if (!(_match_expr.type_is<jule::Ref<_150f166e0_Trait>>())) { goto _case_end_5684019408; }
					_case_begin_5684019408:;
					{
						jule::Ref<_150f166e0_Trait> _63225_t = _60721_def.operator jule::Ref<_150f166e0_Trait>();
						if ((*this)._method_is_accessible_define(_63225_t->_field_public,_63225_t->_field_token)) {
							goto _iter_next_5684006960;
						}
					}
					goto _match_end_5684015584;
					_case_end_5684019408:;
					if (!(_match_expr.type_is<jule::Ref<_150f1c930_Enum>>())) { goto _case_end_5684019520; }
					_case_begin_5684019520:;
					{
						jule::Ref<_150f1c930_Enum> _63825_e = _60721_def.operator jule::Ref<_150f1c930_Enum>();
						if ((*this)._method_is_accessible_define(_63825_e->_field_public,_63825_e->_field_token)) {
							goto _iter_next_5684006960;
						}
					}
					goto _match_end_5684015584;
					_case_end_5684019520:;
					if (!(_match_expr.type_is<jule::Ref<_15081bcd0_Fn>>())) { goto _case_end_5684019632; }
					_case_begin_5684019632:;
					{
						jule::Ref<_15081bcd0_Fn> _64425_f = _60721_def.operator jule::Ref<_15081bcd0_Fn>();
						if ((*this)._method_is_accessible_define(_64425_f->_field_public,_64425_f->_field_token)) {
							goto _iter_next_5684006960;
						}
					}
					goto _match_end_5684015584;
					_case_end_5684019632:;
					_case_begin_5684016416:;
					{
						(*this)._method_push_err(_1510c9150_ident,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_1510c9150_ident._field_kind)}));
						goto _iter_next_5684006960;
					}
					goto _match_end_5684015584;
					_case_end_5684016416:;
					_match_end_5684015584:;
				}
				(*this)._method_push_err(_1510c9150_ident,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_1510c9150_ident._field_kind)}));
				(*this)._method_push_suggest(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>({}));
			}
			_iter_next_5684006960:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1510c9150_ident = *__julec_range_begin; goto _iter_begin_5684006960; }
			_iter_end_5684006960:;
		}
	}
}



inline jule::Bool _1510c9150_Sema::_method_check_import(jule::Ref<_150f26340_ImportInfo> _65935_imp) {
	if ((_65935_imp->_field_duplicate || _65935_imp->_field_cpp_linked) || (_65935_imp->_field_package->_field_files.len() == 0LL)) {
		return true;
	}
	jule::Ref<_1510c9150_Sema> _66417_sema = jule::new_struct<_1510c9150_Sema>(new( std::nothrow ) _1510c9150_Sema());
	_66417_sema->_method_check(_65935_imp->_field_package->_field_files);
	if (_66417_sema->_field_errors.len() > 0LL) {
		(*this)._field_errors=jule::append((*this)._field_errors,_66417_sema->_field_errors);
		return false;
	}
	(*this)._method_check_import_selections(_65935_imp);
	return true;
}



inline void _1510c9150_Sema::_method_check_imports(void) {
	{
		auto __julec_range_expr = (*this)._field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_15128c4d0_SymbolTable> _1510c9150_file = *__julec_range_begin;
			_iter_begin_5684054000:;
			{
				jule::Int _67721_i = 0LL;
				_iter_begin_5684055792:;
				if (!(_67721_i < _1510c9150_file->_field_imports._method_len())) { goto _iter_end_5684055792; }
				{
					jule::Ref<_150f26340_ImportInfo> _67925_imp = _1510c9150_file->_field_imports._method_at(_67721_i);
					jule::Bool _68021_ok = (*this)._method_check_import(_67925_imp);
					if ((!(_68021_ok))) {
						(*this)._method_push_err(_67925_imp->_field_token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>({jule::Any(_67925_imp->_field_link_path)}));
						return;
					}
				}
				_iter_next_5684055792:;
				(_67721_i)++;
				goto _iter_begin_5684055792;
				_iter_end_5684055792:;
			}
			_iter_next_5684054000:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1510c9150_file = *__julec_range_begin; goto _iter_begin_5684054000; }
			_iter_end_5684054000:;
		}
	}
}



inline void _1510c9150_Sema::_method_impl_file_impls(void) {
	jule::Int _69217_i = 0LL;
	_iter_begin_5684063920:;
	if (!(_69217_i < this->self->_field_file->_field_impls._method_len())) { goto _iter_end_5684063920; }
	{
		jule::Ref<_150f235a0_Impl> _69421_imp = this->self->_field_file->_field_impls._method_at(_69217_i);
		this->self->_method_impl_impl(_69421_imp);
	}
	_iter_next_5684063920:;
	(_69217_i)++;
	goto _iter_begin_5684063920;
	_iter_end_5684063920:;
}



inline void _1510c9150_Sema::_method_impl_impls(void) {
	{
		auto __julec_range_expr = this->self->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_15128c4d0_SymbolTable> _1510c9150_file = *__julec_range_begin;
			_iter_begin_5684071488:;
			{
				this->self->_method_set_current_file(_1510c9150_file);
				this->self->_method_impl_file_impls();
			}
			_iter_next_5684071488:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1510c9150_file = *__julec_range_begin; goto _iter_begin_5684071488; }
			_iter_end_5684071488:;
		}
	}
}



inline void _1510c9150_Sema::_method_check_enums(void) {
	{
		auto __julec_range_expr = this->self->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_15128c4d0_SymbolTable> _1510c9150_file = *__julec_range_begin;
			_iter_begin_5684075856:;
			{
				this->self->_method_set_current_file(_1510c9150_file);
				this->self->_method_check_enum_decls();
			}
			_iter_next_5684075856:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1510c9150_file = *__julec_range_begin; goto _iter_begin_5684075856; }
			_iter_end_5684075856:;
		}
	}
}



inline jule::Bool _1510c9150_Sema::_method_check_type_with_refers(jule::Ref<_15177b070_TypeSymbol> _71546_t,jule::Trait<_1517fbd60_Lookup> _71562_l,jule::Ref<_15177b070_Referencer> _71573_referencer) {
	jule::Bool _715100_ok = jule::Bool();
	if (_71546_t->_method_checked()) {
		_715100_ok = true;
		return _715100_ok;
	}
	_15177b070_TypeChecker _71917_tc = _15177b070_TypeChecker(this->self,_71562_l,_71573_referencer,_150640f50_Token(),jule::Slice<jule::Ref<_1506406d0_GenericDecl>>(),jule::Slice<jule::Ref<_15177b070_TypeAlias>>(),jule::Bool());
	_71917_tc._method_check(_71546_t);
	_715100_ok = _71546_t->_method_checked();
	return _715100_ok;
}



inline jule::Bool _1510c9150_Sema::_method_check_type(jule::Ref<_15177b070_TypeSymbol> _73034_t,jule::Trait<_1517fbd60_Lookup> _73050_l) {
	jule::Bool _73063_ok = jule::Bool();
	_73063_ok = this->self->_method_check_type_with_refers(_73034_t,_73050_l,jule::new_ref<_15177b070_Referencer>());
	return _73063_ok;
}



inline jule::Ref<_15177b070_TypeKind> _1510c9150_Sema::_method_build_type_with_generics(jule::Ref<_1506406d0_TypeDecl> _73648_t,jule::Slice<jule::Ref<_15177b070_TypeAlias>> _73662_generics) {
	jule::Ref<_15177b070_TypeChecker> _73717_tc = jule::new_struct<_15177b070_TypeChecker>(new( std::nothrow ) _15177b070_TypeChecker(this->self,this->self,jule::Ref<_15177b070_Referencer>(),_150640f50_Token(),jule::Slice<jule::Ref<_1506406d0_GenericDecl>>(),_73662_generics,jule::Bool()));
	return _73717_tc->_method_check_decl(_73648_t);
}



inline jule::Ref<_15177b070_TypeKind> _1510c9150_Sema::_method_build_type(jule::Ref<_1506406d0_TypeDecl> _74634_t) {
	return this->self->_method_build_type_with_generics(_74634_t,nullptr);
}



inline jule::Ref<_151290fd0_Data> _1510c9150_Sema::_method_evalpd(jule::Ref<_1506406d0_Expr> _75230_expr,jule::Trait<_1517fbd60_Lookup> _75247_l,jule::Ref<_15177b070_TypeKind> _75262_p,jule::Ref<_1511317d0_Var> _75276_owner) {
	jule::Ref<_151290fd0_Eval> _75317_e = jule::new_struct<_151290fd0_Eval>(new( std::nothrow ) _151290fd0_Eval(this->self,_75247_l,jule::Ref<_15177b070_TypeKind>(),jule::Bool(),_75276_owner));
	{
		auto _match_expr{ _75247_l };
		if (!(_match_expr.type_is<jule::Ref<_150d29660_ScopeChecker>>())) { goto _case_end_5684129200; }
		_case_begin_5684129200:;
		{
			_75317_e->_field_unsafety=_75247_l.operator jule::Ref<_150d29660_ScopeChecker>()->_method_is_unsafe();
		}
		goto _match_end_5684123424;
		_case_end_5684129200:;
		_match_end_5684123424:;
	}
	_75317_e->_field_prefix=_75262_p;
	return _75317_e->_method_eval_expr(_75230_expr);
}



inline jule::Ref<_151290fd0_Data> _1510c9150_Sema::_method_evalp(jule::Ref<_1506406d0_Expr> _77029_expr,jule::Trait<_1517fbd60_Lookup> _77046_l,jule::Ref<_15177b070_TypeKind> _77061_p) {
	return this->self->_method_evalpd(_77029_expr,_77046_l,_77061_p,jule::new_ref<_1511317d0_Var>());
}



inline jule::Ref<_151290fd0_Data> _1510c9150_Sema::_method_eval(jule::Ref<_1506406d0_Expr> _77528_expr,jule::Trait<_1517fbd60_Lookup> _77545_l) {
	return this->self->_method_evalp(_77528_expr,_77545_l,jule::new_ref<_15177b070_TypeKind>());
}



inline void _1510c9150_Sema::_method_check_assign_type(jule::Ref<_15177b070_TypeKind> _77941_dest,jule::Ref<_151290fd0_Data> _77962_d,_150640f50_Token _77972_error_token,jule::Bool _77992_deref) {
	jule::Ref<_1510d19a0_AssignTypeChecker> _78017_atc = jule::new_struct<_1510d19a0_AssignTypeChecker>(new( std::nothrow ) _1510d19a0_AssignTypeChecker(this->self,_77941_dest,_77962_d,_77972_error_token,_77992_deref));
	jule::Bool _78713_ok = _78017_atc->_method_check();
	if ((!(_78713_ok))) {
		return;
	}
	if ((!(_77962_d->_method_is_const())) || (!(jule::real(_77941_dest->_method_prim())))) {
		return;
	}
	jule::Str _79617_kind = _77941_dest->_method_prim()->_field_kind;
	{
		if (!((_1519b1410_is_sig_int(_79617_kind)))) { goto _case_end_5684149856; }
		_case_begin_5684149856:;
		{
			_77962_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_77962_d->_field_constant->_method_as_i64()));
		}
		goto _match_end_5684149664;
		_case_end_5684149856:;
		if (!((_1519b1410_is_unsig_int(_79617_kind)))) { goto _case_end_5684149984; }
		_case_begin_5684149984:;
		{
			_77962_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_77962_d->_field_constant->_method_as_u64()));
		}
		goto _match_end_5684149664;
		_case_end_5684149984:;
		if (!((_1519b1410_is_float(_79617_kind)))) { goto _case_end_5684150112; }
		_case_begin_5684150112:;
		{
			_77962_d->_field_constant->_method_set_f64(static_cast<jule::F64>(_77962_d->_field_constant->_method_as_f64()));
		}
		goto _match_end_5684149664;
		_case_end_5684150112:;
		_match_end_5684149664:;
	}
}



inline jule::Bool _1510c9150_Sema::_method_check_type_compatibility(jule::Ref<_15177b070_TypeKind> _81048_dest,jule::Ref<_15177b070_TypeKind> _81113_src,_150640f50_Token _81129_error_token,jule::Bool _81149_deref) {
	if (jule::real(_81113_src->_method_tup())) {
		this->self->_method_push_err(_81129_error_token,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_81048_dest->_method_to_str()),jule::Any(_81113_src->_method_to_str())}));
		return false;
	}
	jule::Ref<_1510d19a0_TypeCompatibilityChecker> _81817_tcc = jule::new_struct<_1510d19a0_TypeCompatibilityChecker>(new( std::nothrow ) _1510d19a0_TypeCompatibilityChecker(this->self,_81048_dest,_81113_src,_81129_error_token,jule::Bool(),_81149_deref,jule::Bool()));
	jule::Bool _82513_ok = _81817_tcc->_method_check();
	if ((!(_82513_ok))) {
		this->self->_method_push_err(_81129_error_token,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_81048_dest->_method_to_str()),jule::Any(_81113_src->_method_to_str())}));
	}
	return _82513_ok;
}



inline jule::Ref<_15177b070_TypeKind> _1510c9150_Sema::_method_build_non_generic_type_kind(jule::Ref<_1506406d0_TypeDecl> _83851_ast,jule::Slice<jule::Ref<_1506406d0_GenericDecl>> _83867_generics) {
	jule::Ref<_15177b070_TypeChecker> _83917_tc = jule::new_struct<_15177b070_TypeChecker>(new( std::nothrow ) _15177b070_TypeChecker(this->self,this->self,jule::Ref<_15177b070_Referencer>(),_150640f50_Token(),_83867_generics,jule::Slice<jule::Ref<_15177b070_TypeAlias>>(),jule::Bool()));
	return _83917_tc->_method_check_decl(_83851_ast);
}



inline void _1510c9150_Sema::_method_build_fn_non_generic_type_kinds(jule::Ref<_15081bcd0_FnIns> _84755_f) {
	jule::Slice<jule::Ref<_1506406d0_GenericDecl>> _84817_generics = nullptr;
	if (_84755_f->_field_decl->_method_is_method()) {
		_84817_generics=jule::append(_84755_f->_field_decl->_field_generics,_84755_f->_field_decl->_field_owner->_field_generics);
	} else {
		_84817_generics=_84755_f->_field_decl->_field_generics;
	}
	{
		auto __julec_range_expr = _84755_f->_field_params;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_15081bcd0_ParamIns> _1510c9150_p = *__julec_range_begin;
			_iter_begin_5684188512:;
			{
				if ((!(_1510c9150_p->_field_decl->_method_is_self()))) {
					_1510c9150_p->_field_kind=this->self->_method_build_non_generic_type_kind(_1510c9150_p->_field_decl->_field_kind->_field_decl,_84817_generics);
				}
			}
			_iter_next_5684188512:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1510c9150_p = *__julec_range_begin; goto _iter_begin_5684188512; }
			_iter_end_5684188512:;
		}
	}
	if ((!(_84755_f->_field_decl->_method_is_void()))) {
		_84755_f->_field_result=this->self->_method_build_non_generic_type_kind(_84755_f->_field_decl->_field_result->_field_kind->_field_decl,_84817_generics);
	}
}



inline jule::Ref<_15081bcd0_FnIns> _1510c9150_Sema::_method_get_trait_check_fn_kind(jule::Ref<_15081bcd0_Fn> _86547_f) {
	jule::Ref<_15081bcd0_FnIns> _86617_ins = _86547_f->_method_instance_force();
	this->self->_method_build_fn_non_generic_type_kinds(_86617_ins);
	return _86617_ins;
}



inline jule::Bool _1510c9150_Sema::_method_reload_fn_ins_types(jule::Ref<_15081bcd0_FnIns> _87143_f) {
	jule::Bool _87156_ok = jule::Bool();
	if (_87143_f->_method_is_builtin() || _87143_f->_method_is_anon()) {
		_87156_ok = true;
		return _87156_ok;
	}
	jule::Ref<_1510c9150_Sema> _87617_sema = _87143_f->_field_decl->_field_sema;
	jule::Ref<_15128c4d0_SymbolTable> _87817_old = _87143_f->_field_decl->_field_sema->_field_file;
	__JULE_DEFER({
		_87143_f->_field_decl->_field_sema->_method_set_current_file(_87817_old);
	});
	jule::Ref<_15128c4d0_SymbolTable> _88017_file = _1510c9150_find_file(_87143_f->_field_decl->_field_sema->_field_files,_87143_f->_field_decl->_field_token._field_file);
	if (jule::real(_88017_file)) {
		_87143_f->_field_decl->_field_sema->_method_set_current_file(_88017_file);
	}
	jule::I64 _88517_size = _87143_f->_field_generics.len();
	if (jule::real(_87143_f->_field_decl) && jule::real(_87143_f->_field_decl->_field_owner)) {
		_88517_size+=static_cast<jule::I64>(_87143_f->_field_decl->_field_owner->_field_generics.len());
	}
	jule::Slice<jule::Ref<_15177b070_TypeAlias>> _89017_generics = jule::Slice<jule::Ref<_15177b070_TypeAlias>>::alloc(0LL,static_cast<jule::Int>(_88517_size));
	{
		auto __julec_range_expr = _87143_f->_field_generics;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _1510c9150_i = 0;
			jule::Ref<_15177b070_TypeKind> _1510c9150_g = *__julec_range_begin;
			_iter_begin_5684222272:;
			{
				_89017_generics=jule::append(_89017_generics,jule::Slice<jule::Ref<_15177b070_TypeAlias>>({jule::new_struct<_15177b070_TypeAlias>(new( std::nothrow ) _15177b070_TypeAlias(jule::Ref<_1506406d0_ScopeTree>(),jule::Bool(),jule::Bool(),jule::Bool(),_150640f50_Token(),_87143_f->_field_decl->_field_generics[static_cast<jule::Int>(_1510c9150_i)]->_field_ident,jule::new_struct<_15177b070_TypeSymbol>(new( std::nothrow ) _15177b070_TypeSymbol(jule::Ref<_1506406d0_TypeDecl>(),_1510c9150_g)),jule::Str(),jule::Slice<jule::Any>()))}));
			}
			_iter_next_5684222272:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_1510c9150_i; _1510c9150_g = *__julec_range_begin; goto _iter_begin_5684222272; }
			_iter_end_5684222272:;
		}
	}
	if (jule::real(_87143_f->_field_decl) && jule::real(_87143_f->_field_decl->_field_owner)) {
		jule::Ref<_150a13110_StructIns> _90221_owner = _87143_f->_field_owner;
		{
			auto __julec_range_expr = _90221_owner->_field_generics;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Int _1510c9150_i = 0;
				jule::Ref<_15177b070_TypeKind> _1510c9150_g = *__julec_range_begin;
				_iter_begin_5684226064:;
				{
					_89017_generics=jule::append(_89017_generics,jule::Slice<jule::Ref<_15177b070_TypeAlias>>({jule::new_struct<_15177b070_TypeAlias>(new( std::nothrow ) _15177b070_TypeAlias(jule::Ref<_1506406d0_ScopeTree>(),jule::Bool(),jule::Bool(),jule::Bool(),_150640f50_Token(),_90221_owner->_field_decl->_field_generics[static_cast<jule::Int>(_1510c9150_i)]->_field_ident,jule::new_struct<_15177b070_TypeSymbol>(new( std::nothrow ) _15177b070_TypeSymbol(jule::Ref<_1506406d0_TypeDecl>(),_1510c9150_g)),jule::Str(),jule::Slice<jule::Any>()))}));
				}
				_iter_next_5684226064:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { ++_1510c9150_i; _1510c9150_g = *__julec_range_begin; goto _iter_begin_5684226064; }
				_iter_end_5684226064:;
			}
		}
	}
	_87156_ok=true;
	{
		auto __julec_range_expr = _87143_f->_field_params;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_15081bcd0_ParamIns> _1510c9150_p = *__julec_range_begin;
			_iter_begin_5684231856:;
			{
				if ((!(_1510c9150_p->_field_decl->_method_is_self()))) {
					_1510c9150_p->_field_kind=_87617_sema->_method_build_type_with_generics(_1510c9150_p->_field_decl->_field_kind->_field_decl,_89017_generics);
					_87156_ok=jule::real(_1510c9150_p->_field_kind) && _87156_ok;
				}
			}
			_iter_next_5684231856:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1510c9150_p = *__julec_range_begin; goto _iter_begin_5684231856; }
			_iter_end_5684231856:;
		}
	}
	if ((!(_87143_f->_field_decl->_method_is_void()))) {
		_87143_f->_field_result=_87617_sema->_method_build_type_with_generics(_87143_f->_field_decl->_field_result->_field_kind->_field_decl,_89017_generics);
		_87156_ok=jule::real(_87143_f->_field_result) && _87156_ok;
	}
	if ((_87617_sema).alloc != (this->self).alloc) {
		this->self->_field_errors=jule::append(this->self->_field_errors,_87617_sema->_field_errors);
	}
	_87156_ok = _87156_ok;
	return _87156_ok;
}



inline void _1510c9150_Sema::_method_check_validity_for_init_expr(jule::Bool _93348_left_mut,jule::Bool _93364_left_ref,jule::Ref<_15177b070_TypeKind> _9349_left_kind,jule::Ref<_151290fd0_Data> _93435_d,_150640f50_Token _93445_error_token) {
	if ((_93348_left_mut && (!(_93435_d->_field_mutable))) && _15177b070_is_mut(_93435_d->_field_kind)) {
		this->self->_method_push_err(_93445_error_token,jule::Str("cannot assign mutable type used immutable define to mutable define", 66),jule::Slice<jule::Any>({}));
	}
	if (_93364_left_ref) {
		{
			auto _match_expr{ _93435_d->_field_model };
			if (!(_match_expr.type_is<jule::Ref<_1511317d0_Var>>() || _match_expr.type_is<jule::Ref<_150f25dd0_TraitSubIdentExprModel>>() || _match_expr.type_is<jule::Ref<_150f25dd0_CommonIdentExprModel>>() || _match_expr.type_is<jule::Ref<_150f25dd0_StructSubIdentExprModel>>() || _match_expr.type_is<jule::Ref<_150f25dd0_CommonSubIdentExprModel>>())) { goto _case_end_5684251984; }
			goto _match_end_5684248176;
			_case_end_5684251984:;
			if (!(_match_expr.type_is<jule::Ref<_150f25dd0_UnaryExprModel>>())) { goto _case_end_5684252096; }
			_case_begin_5684252096:;
			{
				jule::Ref<_150f25dd0_UnaryExprModel> _94821_unary = _93435_d->_field_model.operator jule::Ref<_150f25dd0_UnaryExprModel>();
				if (_94821_unary->_field_op == jule::Str("*", 1)) {
					goto _match_end_5684248176;
				}
				goto _case_begin_5684251680;
			}
			goto _match_end_5684248176;
			_case_end_5684252096:;
			_case_begin_5684251680:;
			{
				this->self->_method_push_err(_93445_error_token,jule::Str("references requires variable for assignment", 43),jule::Slice<jule::Any>({}));
			}
			goto _match_end_5684248176;
			_case_end_5684251680:;
			_match_end_5684248176:;
		}
		if (_93348_left_mut && (!(_93435_d->_field_mutable))) {
			this->self->_method_push_err(_93445_error_token,jule::Str("mutable reference cannot point to immutable data", 48),jule::Slice<jule::Any>({}));
		}
	}
	jule::Ref<_1510d19a0_AssignTypeChecker> _96417_atc = jule::new_struct<_1510d19a0_AssignTypeChecker>(new( std::nothrow ) _1510d19a0_AssignTypeChecker(this->self,jule::Ref<_15177b070_TypeKind>(),_93435_d,_93445_error_token,jule::Bool()));
	_96417_atc->_method_check_validity();
}



inline jule::Bool _1510c9150_Sema::_method_check_type_alias_decl_kind(jule::Ref<_15177b070_TypeAlias> _97250_ta,jule::Trait<_1517fbd60_Lookup> _97266_l) {
	jule::Bool _97279_ok = jule::Bool();
	jule::Ref<_15128c4d0_SymbolTable> _97317_old = this->self->_field_file;
	__JULE_DEFER({
		this->self->_method_set_current_file(_97317_old);
	});
	jule::Ref<_15128c4d0_SymbolTable> _97517_file = _1510c9150_find_file(this->self->_field_files,_97250_ta->_field_token._field_file);
	if (jule::real(_97517_file)) {
		this->self->_method_set_current_file(_97517_file);
	}
	_97279_ok=this->self->_method_check_type_with_refers(_97250_ta->_field_kind,_97266_l,jule::new_struct<_15177b070_Referencer>(new( std::nothrow ) _15177b070_Referencer(_97250_ta->_field_ident,jule::Any(_97250_ta),(&(_97250_ta->_field_refers)))));
	if ((_97279_ok && jule::real(_97250_ta->_field_kind->_field_kind->_method_arr())) && _97250_ta->_field_kind->_field_kind->_method_arr()->_field_auto) {
		this->self->_method_push_err(_97250_ta->_field_kind->_field_decl->_field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>({}));
		_97279_ok=false;
	}
	return _97279_ok;
}



inline void _1510c9150_Sema::_method_check_type_alias_decl(jule::Ref<_15177b070_TypeAlias> _99245_ta,jule::Trait<_1517fbd60_Lookup> _99261_l) {
	if (_150640f50_is_ignore_ident(_99245_ta->_field_ident)) {
		this->self->_method_push_err(_99245_ta->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
	}
	this->self->_method_check_type_alias_decl_kind(_99245_ta,_99261_l);
}



inline void _1510c9150_Sema::_method_check_type_alias_decl_dup(jule::Ref<_15177b070_TypeAlias> _100049_ta) {
	if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_100049_ta).alloc)),_100049_ta->_field_ident,_100049_ta->_field_cpp_linked)) {
		this->self->_method_push_err(_100049_ta->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_100049_ta->_field_ident)}));
		this->self->_method_push_suggest(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	this->self->_method_check_type_alias_decl_kind(_100049_ta,this->self);
}



inline jule::Bool _1510c9150_Sema::_method_check_type_alias_decls(void) {
	jule::Bool _100944_ok = jule::Bool();
	jule::Int _101017_i = 0LL;
	_iter_begin_5684294496:;
	if (!(_101017_i < this->self->_field_file->_field_type_aliases._method_len())) { goto _iter_end_5684294496; }
	{
		jule::Ref<_15177b070_TypeAlias> _101221_ta = this->self->_field_file->_field_type_aliases._method_at(_101017_i);
		this->self->_method_check_type_alias_decl_dup(_101221_ta);
		if (this->self->_field_errors.len() > 0LL) {
			_100944_ok = false;
			return _100944_ok;
		}
	}
	_iter_next_5684294496:;
	(_101017_i)++;
	goto _iter_begin_5684294496;
	_iter_end_5684294496:;
	_100944_ok = true;
	return _100944_ok;
}



inline void _1510c9150_Sema::_method_check_enum_items_dup(jule::Ref<_150f1c930_Enum> _102339_e) {
	{
		auto __julec_range_expr = _102339_e->_field_items;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_150f1c930_EnumItem> _1510c9150_item = *__julec_range_begin;
			_iter_begin_5684302880:;
			{
				if (_150640f50_is_ignore_ident(_1510c9150_item->_field_ident)) {
					(*this)._method_push_err(_1510c9150_item->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
				} else {
					{
						auto __julec_range_expr = _102339_e->_field_items;
						if (__julec_range_expr.begin() != __julec_range_expr.end()) {
							auto __julec_range_begin = __julec_range_expr.begin();
							const auto __julec_range_end = __julec_range_expr.end();
							jule::Ref<_150f1c930_EnumItem> _1510c9150_citem = *__julec_range_begin;
							_iter_begin_5684307792:;
							{
								if (_1510c9150_item == _1510c9150_citem) {
									goto _iter_end_5684307792;
								} else if (_1510c9150_item->_field_ident == _1510c9150_citem->_field_ident) {
									(*this)._method_push_err(_1510c9150_item->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1510c9150_item->_field_ident)}));
									(*this)._method_push_suggest(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
									goto _iter_end_5684307792;
								}
							}
							_iter_next_5684307792:;
							++__julec_range_begin;
							if (__julec_range_begin != __julec_range_end) { _1510c9150_citem = *__julec_range_begin; goto _iter_begin_5684307792; }
							_iter_end_5684307792:;
						}
					}
				}
			}
			_iter_next_5684302880:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1510c9150_item = *__julec_range_begin; goto _iter_begin_5684302880; }
			_iter_end_5684302880:;
		}
	}
}



inline void _1510c9150_Sema::_method_check_enum_items_str(jule::Ref<_150f1c930_Enum> _104144_e) {
	{
		auto __julec_range_expr = _104144_e->_field_items;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_150f1c930_EnumItem> _1510c9150_item = *__julec_range_begin;
			_iter_begin_5684314800:;
			{
				if (_1510c9150_item->_method_auto_expr()) {
					_1510c9150_item->_field_value=jule::new_struct<_151290fd0_Value>(new( std::nothrow ) _151290fd0_Value(jule::Ref<_1506406d0_Expr>(),jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::Ref<_15177b070_TypeKind>(),jule::Ref<_15177b070_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),_15199b440_Const::_static_method_new_str(_1510c9150_item->_field_ident)))));
					_1510c9150_item->_field_value->_field_data->_field_model=jule::Any(_1510c9150_item->_field_value->_field_data->_field_constant);
				} else {
					jule::Ref<_151290fd0_Data> _105125_d = this->self->_method_eval(_1510c9150_item->_field_value->_field_expr,this->self);
					if ((!(jule::real(_105125_d)))) {
						goto _iter_next_5684314800;
					}
					if ((!(_105125_d->_method_is_const()))) {
						this->self->_method_push_err(_1510c9150_item->_field_value->_field_expr->_field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>({}));
					}
					this->self->_method_check_assign_type(_104144_e->_field_kind->_field_kind,_105125_d,_1510c9150_item->_field_token,false);
					_1510c9150_item->_field_value->_field_data=_105125_d;
				}
			}
			_iter_next_5684314800:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1510c9150_item = *__julec_range_begin; goto _iter_begin_5684314800; }
			_iter_end_5684314800:;
		}
	}
}



inline void _1510c9150_Sema::_method_check_enum_items_int(jule::Ref<_150f1c930_Enum> _106644_e) {
	jule::U64 _106717_max = static_cast<jule::U64>(_15199dfc0_max_of(_106644_e->_field_kind->_field_kind->_method_prim()->_method_to_str()));
	{
		auto __julec_range_expr = _106644_e->_field_items;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _1510c9150_i = 0;
			jule::Ref<_150f1c930_EnumItem> _1510c9150_item = *__julec_range_begin;
			_iter_begin_5684350512:;
			{
				if (_106717_max == 0LL) {
					this->self->_method_push_err(_1510c9150_item->_field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>({}));
				} else {
					(_106717_max)--;
				}
				if (_1510c9150_item->_method_auto_expr()) {
					_1510c9150_item->_field_value=jule::new_struct<_151290fd0_Value>(new( std::nothrow ) _151290fd0_Value(jule::Ref<_1506406d0_Expr>(),jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::Ref<_15177b070_TypeKind>(),jule::Ref<_15177b070_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),_15199b440_Const::_static_method_new_u64(static_cast<jule::U64>(_106717_max - (_106717_max - static_cast<jule::U64>(_1510c9150_i))))))));
					_1510c9150_item->_field_value->_field_data->_field_model=jule::Any(_1510c9150_item->_field_value->_field_data->_field_constant);
				} else {
					jule::Ref<_151290fd0_Data> _108325_d = this->self->_method_eval(_1510c9150_item->_field_value->_field_expr,this->self);
					if ((!(jule::real(_108325_d)))) {
						goto _iter_next_5684350512;
					}
					if ((!(_108325_d->_method_is_const()))) {
						this->self->_method_push_err(_1510c9150_item->_field_value->_field_expr->_field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>({}));
					}
					this->self->_method_check_assign_type(_106644_e->_field_kind->_field_kind,_108325_d,_1510c9150_item->_field_token,false);
					_1510c9150_item->_field_value->_field_data=_108325_d;
				}
			}
			_iter_next_5684350512:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_1510c9150_i; _1510c9150_item = *__julec_range_begin; goto _iter_begin_5684350512; }
			_iter_end_5684350512:;
		}
	}
}



inline void _1510c9150_Sema::_method_check_enum_decl(jule::Ref<_150f1c930_Enum> _109839_e) {
	if (_150640f50_is_ignore_ident(_109839_e->_field_ident)) {
		this->self->_method_push_err(_109839_e->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
	} else if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_109839_e).alloc)),_109839_e->_field_ident,false)) {
		this->self->_method_push_err(_109839_e->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_109839_e->_field_ident)}));
		this->self->_method_push_suggest(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	if (_109839_e->_field_items.len() == 0LL) {
		this->self->_method_push_err(_109839_e->_field_token,jule::Str("there is no member for enum: @", 30),jule::Slice<jule::Any>({jule::Any(_109839_e->_field_ident)}));
	}
	this->self->_method_check_enum_items_dup(_109839_e);
	if (jule::real(_109839_e->_field_kind)) {
		if ((!(this->self->_method_check_type(_109839_e->_field_kind,this->self)))) {
			return;
		}
	} else {
		_109839_e->_field_kind=jule::new_struct<_15177b070_TypeSymbol>(new( std::nothrow ) _15177b070_TypeSymbol(jule::Ref<_1506406d0_TypeDecl>(),jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_15177b070_build_prim_type(jule::Str("int", 3))))));
	}
	jule::Ref<_15177b070_Prim> _112517_t = _109839_e->_field_kind->_field_kind->_method_prim();
	if ((!(jule::real(_112517_t)))) {
		this->self->_method_push_err(_109839_e->_field_token,jule::Str("invalid data-type source", 24),jule::Slice<jule::Any>({}));
		return;
	}
	{
		if (!((_112517_t->_method_is_str()))) { goto _case_end_5684391264; }
		_case_begin_5684391264:;
		{
			this->self->_method_check_enum_items_str(_109839_e);
		}
		goto _match_end_5684386592;
		_case_end_5684391264:;
		if (!((_1519b1410_is_int(_112517_t->_method_to_str())))) { goto _case_end_5684389168; }
		_case_begin_5684389168:;
		{
			this->self->_method_check_enum_items_int(_109839_e);
		}
		goto _match_end_5684386592;
		_case_end_5684389168:;
		_case_begin_5684386720:;
		{
			this->self->_method_push_err(_109839_e->_field_token,jule::Str("invalid data-type source", 24),jule::Slice<jule::Any>({}));
		}
		goto _match_end_5684386592;
		_case_end_5684386720:;
		_match_end_5684386592:;
	}
}



inline jule::Bool _1510c9150_Sema::_method_check_enum_decls(void) {
	jule::Bool _114538_ok = jule::Bool();
	jule::Int _114617_i = 0LL;
	_iter_begin_5684397168:;
	if (!(_114617_i < this->self->_field_file->_field_enums._method_len())) { goto _iter_end_5684397168; }
	{
		jule::Ref<_150f1c930_Enum> _114821_e = this->self->_field_file->_field_enums._method_at(_114617_i);
		this->self->_method_check_enum_decl(_114821_e);
		if (this->self->_field_errors.len() > 0LL) {
			_114538_ok = false;
			return _114538_ok;
		}
	}
	_iter_next_5684397168:;
	(_114617_i)++;
	goto _iter_begin_5684397168;
	_iter_end_5684397168:;
	_114538_ok = true;
	return _114538_ok;
}



inline jule::Bool _1510c9150_Sema::_method_check_decl_generics(jule::Slice<jule::Ref<_1506406d0_GenericDecl>> _115938_generics) {
	jule::Bool _115966_ok = jule::Bool();
	_115966_ok=true;
	{
		auto __julec_range_expr = _115938_generics;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _1510c9150_i = 0;
			jule::Ref<_1506406d0_GenericDecl> _1510c9150_g = *__julec_range_begin;
			_iter_begin_5684406288:;
			{
				if (_150640f50_is_ignore_ident(_1510c9150_g->_field_ident)) {
					(*this)._method_push_err(_1510c9150_g->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
					_115966_ok=false;
					goto _iter_next_5684406288;
				}
				_julec_label_duplication_lookup:;
				{
					auto __julec_range_expr = _115938_generics;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Int _1510c9150_j = 0;
						jule::Ref<_1506406d0_GenericDecl> _1510c9150_ct = *__julec_range_begin;
						_iter_begin_5684409168:;
						{
							{
								if (!((_1510c9150_j >= _1510c9150_i))) { goto _case_end_5684414400; }
								_case_begin_5684414400:;
								{
									goto _iter_end_5684409168;
								}
								goto _match_end_5684414208;
								_case_end_5684414400:;
								if (!((_1510c9150_g->_field_ident == _1510c9150_ct->_field_ident))) { goto _case_end_5684414528; }
								_case_begin_5684414528:;
								{
									(*this)._method_push_err(_1510c9150_g->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1510c9150_g->_field_ident)}));
									(*this)._method_push_suggest(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
									_115966_ok=false;
									goto _iter_end_5684409168;
								}
								goto _match_end_5684414208;
								_case_end_5684414528:;
								_match_end_5684414208:;
							}
						}
						_iter_next_5684409168:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { ++_1510c9150_j; _1510c9150_ct = *__julec_range_begin; goto _iter_begin_5684409168; }
						_iter_end_5684409168:;
					}
				}
			}
			_iter_next_5684406288:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_1510c9150_i; _1510c9150_g = *__julec_range_begin; goto _iter_begin_5684406288; }
			_iter_end_5684406288:;
		}
	}
	return _115966_ok;
}



inline jule::Bool _1510c9150_Sema::_method_check_fn_decl_params_dup(jule::Ref<_15081bcd0_Fn> _118743_f) {
	jule::Bool _118753_ok = jule::Bool();
	_118753_ok=true;
	_julec_label_check:;
	{
		auto __julec_range_expr = _118743_f->_field_params;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _1510c9150_i = 0;
			jule::Ref<_15081bcd0_Param> _1510c9150_p = *__julec_range_begin;
			_iter_begin_5684423904:;
			{
				{
					auto __julec_range_expr = _118743_f->_field_generics;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Ref<_1506406d0_GenericDecl> _1510c9150_g = *__julec_range_begin;
						_iter_begin_5684426464:;
						{
							if (_1510c9150_p->_field_ident == _1510c9150_g->_field_ident) {
								_118753_ok=false;
								(*this)._method_push_err(_1510c9150_p->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1510c9150_p->_field_ident)}));
								(*this)._method_push_suggest(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
								goto _iter_next_5684423904;
							}
						}
						_iter_next_5684426464:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { _1510c9150_g = *__julec_range_begin; goto _iter_begin_5684426464; }
						_iter_end_5684426464:;
					}
				}
				_julec_label_params_lookup:;
				{
					auto __julec_range_expr = _118743_f->_field_params;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Int _1510c9150_j = 0;
						jule::Ref<_15081bcd0_Param> _1510c9150_jp = *__julec_range_begin;
						_iter_begin_5684427232:;
						{
							{
								if (!((_1510c9150_j >= _1510c9150_i))) { goto _case_end_5684434768; }
								_case_begin_5684434768:;
								{
									goto _iter_end_5684427232;
								}
								goto _match_end_5684434560;
								_case_end_5684434768:;
								if (!((_150640f50_is_anon_ident(_1510c9150_p->_field_ident) || _150640f50_is_anon_ident(_1510c9150_jp->_field_ident)))) { goto _case_end_5684434896; }
								_case_begin_5684434896:;
								{
									goto _iter_end_5684427232;
								}
								goto _match_end_5684434560;
								_case_end_5684434896:;
								if (!((_1510c9150_p->_field_ident == _1510c9150_jp->_field_ident))) { goto _case_end_5684435024; }
								_case_begin_5684435024:;
								{
									_118753_ok=false;
									(*this)._method_push_err(_1510c9150_p->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1510c9150_p->_field_ident)}));
									(*this)._method_push_suggest(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
									goto _iter_next_5684423904;
								}
								goto _match_end_5684434560;
								_case_end_5684435024:;
								_match_end_5684434560:;
							}
						}
						_iter_next_5684427232:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { ++_1510c9150_j; _1510c9150_jp = *__julec_range_begin; goto _iter_begin_5684427232; }
						_iter_end_5684427232:;
					}
				}
			}
			_iter_next_5684423904:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_1510c9150_i; _1510c9150_p = *__julec_range_begin; goto _iter_begin_5684423904; }
			_iter_end_5684423904:;
		}
	}
	return _118753_ok;
}



inline jule::Bool _1510c9150_Sema::_method_check_fn_decl_result_dup(jule::Ref<_15081bcd0_Fn> _122343_f) {
	jule::Bool _122353_ok = jule::Bool();
	_122353_ok=true;
	if (_122343_f->_method_is_void()) {
		return _122353_ok;
	}
	{
		auto __julec_range_expr = _122343_f->_field_result->_field_idents;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _1510c9150_i = 0;
			_150640f50_Token _1510c9150_v = *__julec_range_begin;
			_iter_begin_5684446688:;
			{
				if (_150640f50_is_ignore_ident(_1510c9150_v._field_kind)) {
					goto _iter_next_5684446688;
				}
				{
					auto __julec_range_expr = _122343_f->_field_generics;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Ref<_1506406d0_GenericDecl> _1510c9150_g = *__julec_range_begin;
						_iter_begin_5684450192:;
						{
							if (_1510c9150_v._field_kind == _1510c9150_g->_field_ident) {
								goto _julec_label_exist;
							}
						}
						_iter_next_5684450192:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { _1510c9150_g = *__julec_range_begin; goto _iter_begin_5684450192; }
						_iter_end_5684450192:;
					}
				}
				{
					auto __julec_range_expr = _122343_f->_field_params;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Ref<_15081bcd0_Param> _1510c9150_p = *__julec_range_begin;
						_iter_begin_5684453680:;
						{
							if (_1510c9150_v._field_kind == _1510c9150_p->_field_ident) {
								goto _julec_label_exist;
							}
						}
						_iter_next_5684453680:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { _1510c9150_p = *__julec_range_begin; goto _iter_begin_5684453680; }
						_iter_end_5684453680:;
					}
				}
				_julec_label_itself_lookup:;
				{
					auto __julec_range_expr = _122343_f->_field_result->_field_idents;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Int _1510c9150_j = 0;
						_150640f50_Token _1510c9150_jv = *__julec_range_begin;
						_iter_begin_5684458080:;
						{
							{
								if (!((_1510c9150_j >= _1510c9150_i))) { goto _case_end_5684460592; }
								_case_begin_5684460592:;
								{
									goto _iter_end_5684458080;
								}
								goto _match_end_5684460400;
								_case_end_5684460592:;
								if (!((_1510c9150_jv._field_kind == _1510c9150_v._field_kind))) { goto _case_end_5684460720; }
								_case_begin_5684460720:;
								{
									goto _julec_label_exist;
								}
								goto _match_end_5684460400;
								_case_end_5684460720:;
								_match_end_5684460400:;
							}
						}
						_iter_next_5684458080:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { ++_1510c9150_j; _1510c9150_jv = *__julec_range_begin; goto _iter_begin_5684458080; }
						_iter_end_5684458080:;
					}
				}
				goto _iter_next_5684446688;
				_julec_label_exist:;
				(*this)._method_push_err(_1510c9150_v,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1510c9150_v._field_kind)}));
				(*this)._method_push_suggest(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
				_122353_ok=false;
			}
			_iter_next_5684446688:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_1510c9150_i; _1510c9150_v = *__julec_range_begin; goto _iter_begin_5684446688; }
			_iter_end_5684446688:;
		}
	}
	return _122353_ok;
}



inline jule::Bool _1510c9150_Sema::_method_check_fn_decl_types(jule::Ref<_15081bcd0_Fn> _127243_f) {
	jule::Bool _127253_ok = jule::Bool();
	_127253_ok=true;
	jule::Slice<jule::Ref<_1506406d0_GenericDecl>> _127517_generics = _127243_f->_field_generics;
	if (jule::real(_127243_f->_field_owner)) {
		_127517_generics=jule::append(_127517_generics,_127243_f->_field_owner->_field_generics);
	}
	{
		auto __julec_range_expr = _127243_f->_field_params;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_15081bcd0_Param> _1510c9150_p = *__julec_range_begin;
			_iter_begin_5684472640:;
			{
				if ((!(_1510c9150_p->_method_is_self()))) {
					jule::Ref<_15177b070_TypeKind> _128225_kind = this->self->_method_build_non_generic_type_kind(_1510c9150_p->_field_kind->_field_decl,_127517_generics);
					_127253_ok=jule::real(_128225_kind) && _127253_ok;
					_1510c9150_p->_field_kind->_field_kind=_128225_kind;
				}
			}
			_iter_next_5684472640:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1510c9150_p = *__julec_range_begin; goto _iter_begin_5684472640; }
			_iter_end_5684472640:;
		}
	}
	if ((!(_127243_f->_method_is_void()))) {
		jule::Ref<_15177b070_TypeKind> _128921_kind = this->self->_method_build_non_generic_type_kind(_127243_f->_field_result->_field_kind->_field_decl,_127517_generics);
		_127253_ok=jule::real(_128921_kind) && _127253_ok;
		_127243_f->_field_result->_field_kind->_field_kind=_128921_kind;
	}
	_127253_ok = _127253_ok;
	return _127253_ok;
}



inline jule::Bool _1510c9150_Sema::_method_check_fn_decl_prototype(jule::Ref<_15081bcd0_Fn> _129947_f) {
	jule::Bool _129957_ok = jule::Bool();
	{
		if (!(((!(this->self->_method_check_decl_generics(_129947_f->_field_generics)))))) { goto _case_end_5684487216; }
		_case_begin_5684487216:;
		{
			_129957_ok = false;
			return _129957_ok;
		}
		goto _match_end_5684486064;
		_case_end_5684487216:;
		if (!(((!(this->self->_method_check_fn_decl_params_dup(_129947_f)))))) { goto _case_end_5684487328; }
		_case_begin_5684487328:;
		{
			_129957_ok = false;
			return _129957_ok;
		}
		goto _match_end_5684486064;
		_case_end_5684487328:;
		if (!(((!(this->self->_method_check_fn_decl_result_dup(_129947_f)))))) { goto _case_end_5684487440; }
		_case_begin_5684487440:;
		{
			_129957_ok = false;
			return _129957_ok;
		}
		goto _match_end_5684486064;
		_case_end_5684487440:;
		if (!(((!(this->self->_method_check_fn_decl_types(_129947_f)))))) { goto _case_end_5684486512; }
		_case_begin_5684486512:;
		{
			_129957_ok = false;
			return _129957_ok;
		}
		goto _match_end_5684486064;
		_case_end_5684486512:;
		_case_begin_5684486208:;
		{
			_129957_ok = true;
			return _129957_ok;
		}
		goto _match_end_5684486064;
		_case_end_5684486208:;
		_match_end_5684486064:;
	}
}



inline void _1510c9150_Sema::_method_check_trait_decl_method(jule::Ref<_15081bcd0_Fn> _131847_f) {
	if (_150640f50_is_ignore_ident(_131847_f->_field_ident)) {
		this->self->_method_push_err(_131847_f->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
	}
	this->self->_method_check_fn_decl_prototype(_131847_f);
	_131847_f->_field_sema=this->self;
}



inline void _1510c9150_Sema::_method_check_trait_decl_methods(jule::Ref<_150f166e0_Trait> _132748_t) {
	{
		auto __julec_range_expr = _132748_t->_field_methods;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _1510c9150_i = 0;
			jule::Ref<_15081bcd0_Fn> _1510c9150_f = *__julec_range_begin;
			_iter_begin_5684500608:;
			{
				this->self->_method_check_trait_decl_method(_1510c9150_f);
				if (this->self->_field_errors.len() > 0LL) {
					return;
				}
				_julec_label_duplicate_lookup:;
				{
					auto __julec_range_expr = _132748_t->_field_methods;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Int _1510c9150_j = 0;
						jule::Ref<_15081bcd0_Fn> _1510c9150_jf = *__julec_range_begin;
						_iter_begin_5684505664:;
						{
							{
								if (!((_1510c9150_j >= _1510c9150_i))) { goto _case_end_5684508128; }
								_case_begin_5684508128:;
								{
									goto _iter_end_5684505664;
								}
								goto _match_end_5684507936;
								_case_end_5684508128:;
								if (!((_1510c9150_f->_field_ident == _1510c9150_jf->_field_ident))) { goto _case_end_5684508256; }
								_case_begin_5684508256:;
								{
									this->self->_method_push_err(_1510c9150_f->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1510c9150_f->_field_ident)}));
									this->self->_method_push_suggest(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
									goto _iter_end_5684505664;
								}
								goto _match_end_5684507936;
								_case_end_5684508256:;
								_match_end_5684507936:;
							}
						}
						_iter_next_5684505664:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { ++_1510c9150_j; _1510c9150_jf = *__julec_range_begin; goto _iter_begin_5684505664; }
						_iter_end_5684505664:;
					}
				}
			}
			_iter_next_5684500608:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_1510c9150_i; _1510c9150_f = *__julec_range_begin; goto _iter_begin_5684500608; }
			_iter_end_5684500608:;
		}
	}
}



inline void _1510c9150_Sema::_method_check_trait_decl(jule::Ref<_150f166e0_Trait> _135840_t) {
	if (_150640f50_is_ignore_ident(_135840_t->_field_ident)) {
		this->self->_method_push_err(_135840_t->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
	} else if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_135840_t).alloc)),_135840_t->_field_ident,false)) {
		this->self->_method_push_err(_135840_t->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_135840_t->_field_ident)}));
		this->self->_method_push_suggest(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	this->self->_method_check_trait_decl_methods(_135840_t);
}



inline jule::Bool _1510c9150_Sema::_method_check_trait_decls(void) {
	jule::Bool _137039_ok = jule::Bool();
	jule::Int _137117_i = 0LL;
	_iter_begin_5684526608:;
	if (!(_137117_i < this->self->_field_file->_field_traits._method_len())) { goto _iter_end_5684526608; }
	{
		jule::Ref<_150f166e0_Trait> _137321_t = this->self->_field_file->_field_traits._method_at(_137117_i);
		this->self->_method_check_trait_decl(_137321_t);
		if (this->self->_field_errors.len() > 0LL) {
			_137039_ok = false;
			return _137039_ok;
		}
	}
	_iter_next_5684526608:;
	(_137117_i)++;
	goto _iter_begin_5684526608;
	_iter_end_5684526608:;
	_137039_ok = true;
	return _137039_ok;
}



inline jule::Bool _1510c9150_Sema::_method_check_trait_impl_methods(jule::Ref<_150f166e0_Trait> _138447_base,jule::Ref<_150f235a0_Impl> _138461_ipl) {
	jule::Bool _138475_ok = jule::Bool();
	_138475_ok=true;
	{
		auto __julec_range_expr = _138461_ipl->_field_methods;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_15081bcd0_Fn> _1510c9150_f = *__julec_range_begin;
			_iter_begin_5684536976:;
			{
				if ((!(jule::real(_138447_base->_method_find_method(_1510c9150_f->_field_ident))))) {
					(*this)._method_push_err(_1510c9150_f->_field_token,jule::Str("trait @ have not any define in this identifier: @", 49),jule::Slice<jule::Any>({jule::Any(_138447_base->_field_ident),jule::Any(_1510c9150_f->_field_ident)}));
					_138475_ok=false;
				}
			}
			_iter_next_5684536976:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1510c9150_f = *__julec_range_begin; goto _iter_begin_5684536976; }
			_iter_end_5684536976:;
		}
	}
	return _138475_ok;
}



inline jule::Bool _1510c9150_Sema::_method_impl_to_struct(jule::Ref<_150a13110_Struct> _139538_dest,jule::Ref<_150f235a0_Impl> _139557_ipl) {
	jule::Bool _139571_ok = jule::Bool();
	_139571_ok=true;
	{
		auto __julec_range_expr = _139557_ipl->_field_methods;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_15081bcd0_Fn> _1510c9150_f = *__julec_range_begin;
			_iter_begin_5684546864:;
			{
				if (jule::real(_139538_dest->_method_find_method(_1510c9150_f->_field_ident,_1510c9150_f->_field_statically)) || jule::real(_139538_dest->_method_find_field(_1510c9150_f->_field_ident))) {
					this->self->_method_push_err(_1510c9150_f->_field_token,jule::Str("struct @ already have a define in this identifier: @", 52),jule::Slice<jule::Any>({jule::Any(_139538_dest->_field_ident),jule::Any(_1510c9150_f->_field_ident)}));
					_139571_ok=false;
					goto _iter_next_5684546864;
				}
				if ((_139538_dest->_field_generics.len() > 0LL) && (_1510c9150_f->_field_generics.len() > 0LL)) {
					{
						auto __julec_range_expr = _1510c9150_f->_field_generics;
						if (__julec_range_expr.begin() != __julec_range_expr.end()) {
							auto __julec_range_begin = __julec_range_expr.begin();
							const auto __julec_range_end = __julec_range_expr.end();
							jule::Ref<_1506406d0_GenericDecl> _1510c9150_fg = *__julec_range_begin;
							_iter_begin_5684554944:;
							{
								{
									auto __julec_range_expr = _139538_dest->_field_generics;
									if (__julec_range_expr.begin() != __julec_range_expr.end()) {
										auto __julec_range_begin = __julec_range_expr.begin();
										const auto __julec_range_end = __julec_range_expr.end();
										jule::Ref<_1506406d0_GenericDecl> _1510c9150_dg = *__julec_range_begin;
										_iter_begin_5684556864:;
										{
											if (_1510c9150_fg->_field_ident == _1510c9150_dg->_field_ident) {
												this->self->_method_push_err(_1510c9150_fg->_field_token,jule::Str("methods cannot have same generic identifier with owner same time", 64),jule::Slice<jule::Any>({}));
												_139571_ok=false;
											}
										}
										_iter_next_5684556864:;
										++__julec_range_begin;
										if (__julec_range_begin != __julec_range_end) { _1510c9150_dg = *__julec_range_begin; goto _iter_begin_5684556864; }
										_iter_end_5684556864:;
									}
								}
							}
							_iter_next_5684554944:;
							++__julec_range_begin;
							if (__julec_range_begin != __julec_range_end) { _1510c9150_fg = *__julec_range_begin; goto _iter_begin_5684554944; }
							_iter_end_5684554944:;
						}
					}
				}
				_1510c9150_f->_field_sema=this->self;
				_1510c9150_f->_field_owner=_139538_dest;
				_139538_dest->_field_methods._method_push(_1510c9150_f);
			}
			_iter_next_5684546864:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1510c9150_f = *__julec_range_begin; goto _iter_begin_5684546864; }
			_iter_end_5684546864:;
		}
	}
	return _139571_ok;
}



inline void _1510c9150_Sema::_method_impl_trait(jule::Ref<_150f235a0_Impl> _142334_decl) {
	jule::Ref<_150f166e0_Trait> _142417_base = this->self->_method_find_trait(_142334_decl->_field_base._field_kind);
	if ((!(jule::real(_142417_base)))) {
		_142417_base=_1518a9420_find_builtin_trait(_142334_decl->_field_base._field_kind);
	}
	if ((!(jule::real(_142417_base)))) {
		this->self->_method_push_err(_142334_decl->_field_base,jule::Str("any valid base definition is not exist in this identifier: @", 60),jule::Slice<jule::Any>({jule::Any(_142334_decl->_field_base._field_kind)}));
		return;
	}
	
	jule::Ref<_150a13110_Struct> _143717_dest = this->self->_method_find_struct(_142334_decl->_field_dest._field_kind,false);
	if ((!(jule::real(_143717_dest)))) {
		this->self->_method_push_err(_142334_decl->_field_dest,jule::Str("any valid destination definition is not exist in this identifier: @", 67),jule::Slice<jule::Any>({jule::Any(_142334_decl->_field_dest._field_kind)}));
		return;
	}
	if (_143717_dest->_field_token._field_file->_method_dir() != this->self->_field_file->_field_file->_method_dir()) {
		this->self->_method_push_err(_142334_decl->_field_dest,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>({}));
		return;
	}
	_142417_base->_field_implemented=jule::append(_142417_base->_field_implemented,jule::Slice<jule::Ref<_150a13110_Struct>>({_143717_dest}));
	_143717_dest->_field_implements=jule::append(_143717_dest->_field_implements,jule::Slice<jule::Ref<_150f166e0_Trait>>({_142417_base}));
	{
		if (!(((!(this->self->_method_check_trait_impl_methods(_142417_base,_142334_decl)))))) { goto _case_end_5684583856; }
		_case_begin_5684583856:;
		{
			return;
		}
		goto _match_end_5684583760;
		_case_end_5684583856:;
		if (!(((!(this->self->_method_impl_to_struct(_143717_dest,_142334_decl)))))) { goto _case_end_5684584864; }
		_case_begin_5684584864:;
		{
			return;
		}
		goto _match_end_5684583760;
		_case_end_5684584864:;
		_match_end_5684583760:;
	}
}



inline void _1510c9150_Sema::_method_impl_struct(jule::Ref<_150f235a0_Impl> _146035_decl) {
	
	jule::Ref<_150a13110_Struct> _146517_dest = this->self->_method_find_struct(_146035_decl->_field_dest._field_kind,false);
	if ((!(jule::real(_146517_dest)))) {
		this->self->_method_push_err(_146035_decl->_field_dest,jule::Str("any valid destination definition is not exist in this identifier: @", 67),jule::Slice<jule::Any>({jule::Any(_146035_decl->_field_dest._field_kind)}));
		return;
	}
	if (_146517_dest->_field_token._field_file->_method_dir() != this->self->_field_file->_field_file->_method_dir()) {
		this->self->_method_push_err(_146035_decl->_field_dest,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>({}));
		return;
	}
	{
		if (!(((!(this->self->_method_impl_to_struct(_146517_dest,_146035_decl)))))) { goto _case_end_5684597840; }
		_case_begin_5684597840:;
		{
			return;
		}
		goto _match_end_5684596560;
		_case_end_5684597840:;
		_match_end_5684596560:;
	}
}



inline void _1510c9150_Sema::_method_impl_impl(jule::Ref<_150f235a0_Impl> _148333_decl) {
	{
		if (!((_148333_decl->_method_is_trait_impl()))) { goto _case_end_5684600912; }
		_case_begin_5684600912:;
		{
			this->self->_method_impl_trait(_148333_decl);
		}
		goto _match_end_5684600720;
		_case_end_5684600912:;
		if (!((_148333_decl->_method_is_struct_impl()))) { goto _case_end_5684601040; }
		_case_begin_5684601040:;
		{
			this->self->_method_impl_struct(_148333_decl);
		}
		goto _match_end_5684600720;
		_case_end_5684601040:;
		_match_end_5684600720:;
	}
}



inline void _1510c9150_Sema::_method_check_var_decl(jule::Ref<_1511317d0_Var> _149538_decl,jule::Trait<_1517fbd60_Lookup> _149550_l) {
	if (_150640f50_is_ignore_ident(_149538_decl->_field_ident)) {
		this->self->_method_push_err(_149538_decl->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
	}
	if (_149538_decl->_method_is_type_inferred()) {
		if (_149538_decl->_field_statically) {
			this->self->_method_push_err(_149538_decl->_field_token,jule::Str("static variables must be have type annotation", 45),jule::Slice<jule::Any>({}));
		}
		if ((!(_149538_decl->_method_is_initialized()))) {
			this->self->_method_push_err(_149538_decl->_field_token,jule::Str("type inference declarations should have a initializer", 53),jule::Slice<jule::Any>({}));
		}
	} else {
		this->self->_method_check_type(_149538_decl->_field_kind,_149550_l);
	}
	if (_149538_decl->_field_constant && _149538_decl->_field_reference) {
		this->self->_method_push_err(_149538_decl->_field_token,jule::Str("references cannot be constant", 29),jule::Slice<jule::Any>({}));
	}
	if ((!(_149538_decl->_method_is_initialized()))) {
		if (_149538_decl->_field_constant) {
			this->self->_method_push_err(_149538_decl->_field_token,jule::Str("constant variable must have initialize expression", 49),jule::Slice<jule::Any>({}));
		}
		if (_149538_decl->_field_statically) {
			this->self->_method_push_err(_149538_decl->_field_token,jule::Str("static variables must be have initialize expression", 51),jule::Slice<jule::Any>({}));
		}
		if (_149538_decl->_field_reference) {
			this->self->_method_push_err(_149538_decl->_field_token,jule::Str("reference variables must be have lvalue initialize expression", 61),jule::Slice<jule::Any>({}));
		}
	}
}



inline void _1510c9150_Sema::_method_check_global_var_decl(jule::Ref<_1511317d0_Var> _153245_decl) {
	if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_153245_decl).alloc)),_153245_decl->_field_ident,_153245_decl->_field_cpp_linked)) {
		this->self->_method_push_err(_153245_decl->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_153245_decl->_field_ident)}));
		this->self->_method_push_suggest(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	if (_153245_decl->_field_cpp_linked && _153245_decl->_field_constant) {
		this->self->_method_push_err(_153245_decl->_field_token,jule::Str("cpp linked variables cannot constant", 36),jule::Slice<jule::Any>({}));
	}
	if (((!(_153245_decl->_field_cpp_linked)) && (!(_153245_decl->_field_constant))) && (!(_153245_decl->_field_statically))) {
		this->self->_method_push_err(_153245_decl->_field_token,jule::Str("global variables must be static", 31),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggest(jule::Str("use \"static\" keyword to define", 30),jule::Slice<jule::Any>({}));
	}
	this->self->_method_check_var_decl(_153245_decl,this->self);
}



inline jule::Bool _1510c9150_Sema::_method_check_global_decls(void) {
	jule::Bool _154940_ok = jule::Bool();
	jule::Int _155017_i = 0LL;
	_iter_begin_5684642336:;
	if (!(_155017_i < this->self->_field_file->_field_vars._method_len())) { goto _iter_end_5684642336; }
	{
		jule::Ref<_1511317d0_Var> _155221_decl = this->self->_field_file->_field_vars._method_at(_155017_i);
		this->self->_method_check_global_var_decl(_155221_decl);
		if (this->self->_field_errors.len() > 0LL) {
			_154940_ok = false;
			return _154940_ok;
		}
	}
	_iter_next_5684642336:;
	(_155017_i)++;
	goto _iter_begin_5684642336;
	_iter_end_5684642336:;
	_154940_ok = true;
	return _154940_ok;
}



inline jule::Bool _1510c9150_Sema::_method_check_struct_trait_impl(jule::Ref<_150a13110_Struct> _156347_strct,jule::Ref<_150f166e0_Trait> _156367_trt) {
	jule::Bool _156382_ok = jule::Bool();
	{
		auto __julec_range_expr = _156367_trt->_field_methods;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_15081bcd0_Fn> _1510c9150_tf = *__julec_range_begin;
			_iter_begin_5684652896:;
			{
				jule::Bool _156521_exist = false;
				jule::Ref<_15081bcd0_Fn> _156621_sf = _156347_strct->_method_find_method(_1510c9150_tf->_field_ident,_1510c9150_tf->_field_statically);
				jule::Ref<_15081bcd0_FnIns> _156717_tf_k = this->self->_method_get_trait_check_fn_kind(_1510c9150_tf);
				if (jule::real(_156621_sf)) {
					jule::Ref<_15081bcd0_FnIns> _156921_sf_k = this->self->_method_get_trait_check_fn_kind(_156621_sf);
					_156521_exist=((_156717_tf_k->_field_decl->_field_public == _156921_sf_k->_field_decl->_field_public) && (_156717_tf_k->_field_decl->_field_ident == _156921_sf_k->_field_decl->_field_ident)) && _156717_tf_k->_method_equals(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_156921_sf_k)));
				}
				if ((!(_156521_exist))) {
					
					jule::Str _157825_s = _156717_tf_k->_method_get_kind_str(true);
					if (_1510c9150_tf->_field_public) {
						_157825_s=jule::Str("pub ", 4) + _157825_s;
					}
					this->self->_method_push_err(_156347_strct->_field_token,jule::Str("trait @ derived but not implemented trait's \"@\" define", 54),jule::Slice<jule::Any>({jule::Any(_156367_trt->_field_ident),jule::Any(_157825_s)}));
					_156382_ok=false;
				}
			}
			_iter_next_5684652896:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1510c9150_tf = *__julec_range_begin; goto _iter_begin_5684652896; }
			_iter_end_5684652896:;
		}
	}
	return _156382_ok;
}



inline jule::Bool _1510c9150_Sema::_method_check_struct_impls(jule::Ref<_150a13110_Struct> _158942_strct) {
	jule::Bool _158960_ok = jule::Bool();
	_158960_ok=true;
	{
		auto __julec_range_expr = _158942_strct->_field_implements;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_150f166e0_Trait> _1510c9150_trt = *__julec_range_begin;
			_iter_begin_5684672400:;
			{
				_158960_ok=this->self->_method_check_struct_trait_impl(_158942_strct,_1510c9150_trt) && _158960_ok;
			}
			_iter_next_5684672400:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1510c9150_trt = *__julec_range_begin; goto _iter_begin_5684672400; }
			_iter_end_5684672400:;
		}
	}
	_158960_ok = _158960_ok;
	return _158960_ok;
}



inline jule::Bool _1510c9150_Sema::_method_check_struct_fields(jule::Ref<_150a13110_Struct> _159743_st) {
	jule::Bool _159758_ok = jule::Bool();
	_159758_ok=true;
	jule::Ref<_15177b070_TypeChecker> _160017_tc = jule::new_struct<_15177b070_TypeChecker>(new( std::nothrow ) _15177b070_TypeChecker(this->self,this->self,jule::new_struct<_15177b070_Referencer>(new( std::nothrow ) _15177b070_Referencer(_159743_st->_field_ident,jule::Any(_159743_st),nullptr)),_150640f50_Token(),_159743_st->_field_generics,jule::Slice<jule::Ref<_15177b070_TypeAlias>>(),jule::Bool()));
	jule::I64 _161013_n = _159743_st->_field_instances.len();
	{
		auto __julec_range_expr = _159743_st->_field_fields;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_150a13110_Field> _1510c9150_f = *__julec_range_begin;
			_iter_begin_5684682752:;
			{
				_1510c9150_f->_field_owner=_159743_st;
				_1510c9150_f->_field_kind->_field_kind=_160017_tc->_method_check_decl(_1510c9150_f->_field_kind->_field_decl);
				_159758_ok=jule::real(_1510c9150_f->_field_kind->_field_kind) && _159758_ok;
				{
					auto __julec_range_expr = _159743_st->_field_fields;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Ref<_150a13110_Field> _1510c9150_cf = *__julec_range_begin;
						_iter_begin_5684687584:;
						{
							if (_1510c9150_f == _1510c9150_cf) {
								goto _iter_end_5684687584;
							} else if (_1510c9150_f->_field_ident == _1510c9150_cf->_field_ident) {
								this->self->_method_push_err(_1510c9150_f->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1510c9150_f->_field_ident)}));
								this->self->_method_push_suggest(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
								_159758_ok=false;
							}
						}
						_iter_next_5684687584:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { _1510c9150_cf = *__julec_range_begin; goto _iter_begin_5684687584; }
						_iter_end_5684687584:;
					}
				}
			}
			_iter_next_5684682752:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1510c9150_f = *__julec_range_begin; goto _iter_begin_5684682752; }
			_iter_end_5684682752:;
		}
	}
	if (_159758_ok && (_161013_n != _159743_st->_field_instances.len())) {
		jule::drop(_160017_tc->_field_referencer);
		_159743_st->_field_instances=_159743_st->_field_instances.slice(0LL,static_cast<jule::Int>(_161013_n));
		{
			auto __julec_range_expr = _159743_st->_field_fields;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_150a13110_Field> _1510c9150_f = *__julec_range_begin;
				_iter_begin_5684694912:;
				{
					_1510c9150_f->_field_kind->_field_kind=_160017_tc->_method_check_decl(_1510c9150_f->_field_kind->_field_decl);
				}
				_iter_next_5684694912:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _1510c9150_f = *__julec_range_begin; goto _iter_begin_5684694912; }
				_iter_end_5684694912:;
			}
		}
	}
	_159758_ok = _159758_ok;
	return _159758_ok;
}



inline void _1510c9150_Sema::_method_check_struct_decl(jule::Ref<_150a13110_Struct> _163941_strct) {
	if (_150640f50_is_ignore_ident(_163941_strct->_field_ident)) {
		this->self->_method_push_err(_163941_strct->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
	} else if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_163941_strct).alloc)),_163941_strct->_field_ident,_163941_strct->_field_cpp_linked)) {
		this->self->_method_push_err(_163941_strct->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_163941_strct->_field_ident)}));
		this->self->_method_push_suggest(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	_163941_strct->_field_sema=this->self;
	{
		if (!(((!(this->self->_method_check_decl_generics(_163941_strct->_field_generics)))))) { goto _case_end_5684708480; }
		_case_begin_5684708480:;
		{
			return;
		}
		goto _match_end_5684708192;
		_case_end_5684708480:;
		if (!(((!(this->self->_method_check_struct_fields(_163941_strct)))))) { goto _case_end_5684708592; }
		_case_begin_5684708592:;
		{
			return;
		}
		goto _match_end_5684708192;
		_case_end_5684708592:;
		if (!(((!(this->self->_method_check_struct_impls(_163941_strct)))))) { goto _case_end_5684708784; }
		_case_begin_5684708784:;
		{
			return;
		}
		goto _match_end_5684708192;
		_case_end_5684708784:;
		_match_end_5684708192:;
	}
}



inline jule::Bool _1510c9150_Sema::_method_check_struct_decls(void) {
	jule::Bool _165640_ok = jule::Bool();
	jule::Int _165717_i = 0LL;
	_iter_begin_5684715104:;
	if (!(_165717_i < this->self->_field_file->_field_structs._method_len())) { goto _iter_end_5684715104; }
	{
		jule::Ref<_150a13110_Struct> _165921_strct = this->self->_field_file->_field_structs._method_at(_165717_i);
		this->self->_method_check_struct_decl(_165921_strct);
		if (this->self->_field_errors.len() > 0LL) {
			_165640_ok = false;
			return _165640_ok;
		}
	}
	_iter_next_5684715104:;
	(_165717_i)++;
	goto _iter_begin_5684715104;
	_iter_end_5684715104:;
	_165640_ok = true;
	return _165640_ok;
}



inline void _1510c9150_Sema::_method_check_fn_decl(jule::Ref<_15081bcd0_Fn> _167137_f) {
	if (_150640f50_is_ignore_ident(_167137_f->_field_ident)) {
		this->self->_method_push_err(_167137_f->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
	} else if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_167137_f).alloc)),_167137_f->_field_ident,_167137_f->_field_cpp_linked)) {
		this->self->_method_push_err(_167137_f->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_167137_f->_field_ident)}));
		this->self->_method_push_suggest(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	_167137_f->_field_sema=this->self;
	this->self->_method_check_fn_decl_prototype(_167137_f);
}



inline jule::Bool _1510c9150_Sema::_method_check_fn_decls(void) {
	jule::Bool _168436_ok = jule::Bool();
	jule::Int _168517_i = 0LL;
	_iter_begin_5684734432:;
	if (!(_168517_i < this->self->_field_file->_field_funcs._method_len())) { goto _iter_end_5684734432; }
	{
		jule::Ref<_15081bcd0_Fn> _168721_f = this->self->_field_file->_field_funcs._method_at(_168517_i);
		this->self->_method_check_fn_decl(_168721_f);
		if (this->self->_field_errors.len() > 0LL) {
			_168436_ok = false;
			return _168436_ok;
		}
	}
	_iter_next_5684734432:;
	(_168517_i)++;
	goto _iter_begin_5684734432;
	_iter_end_5684734432:;
	_168436_ok = true;
	return _168436_ok;
}



inline jule::Bool _1510c9150_Sema::_method_check_directive_pass(_150e75a70_Pass _169839_pass) {
	jule::Bool _169853_ok = jule::Bool();
	if (_169839_pass._field_text == jule::Str("", 0)) {
		_169853_ok = true;
		return _169853_ok;
	}
	if (_169839_pass._field_text[0LL] != '-') {
		(*this)._method_push_err(_169839_pass._field_token,jule::Str("the pass directive must be start with dash", 42),jule::Slice<jule::Any>({}));
		_169853_ok = false;
		return _169853_ok;
	}
	_169853_ok = true;
	return _169853_ok;
}



inline jule::Bool _1510c9150_Sema::_method_check_passes(void) {
	jule::Bool _171133_ok = jule::Bool();
	_171133_ok=true;
	jule::Int _171317_i = 0LL;
	_iter_begin_5684750160:;
	if (!(_171317_i < (*this)._field_file->_field_passes._method_len())) { goto _iter_end_5684750160; }
	{
		_150e75a70_Pass _171517_pass = (*this)._field_file->_field_passes._method_at(_171317_i);
		_171133_ok=(*this)._method_check_directive_pass(_171517_pass) && _171133_ok;
	}
	_iter_next_5684750160:;
	(_171317_i)++;
	goto _iter_begin_5684750160;
	_iter_end_5684750160:;
	return _171133_ok;
}



inline void _1510c9150_Sema::_method_push_cycle_error(jule::Ref<_150a13110_Struct> _172131_st1,jule::Ref<_150a13110_Struct> _172145_st2,jule::Str& _172164_message) {
	
	jule::Str _172413_refers_to = _157e34dc0_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(_172131_st1->_field_ident),jule::Any(_172145_st2->_field_ident)}));
	_172164_message=((_150e75a70_str_repeat(jule::Str(" ", 1),4LL) + _172413_refers_to) + jule::Str("\n", 1)) + _172164_message;
}



inline jule::Bool _1510c9150_Sema::_method_check_cross_cycle(jule::Ref<_150a13110_Struct> _172832_st1,jule::Ref<_150a13110_Struct> _172846_st2,jule::Str& _172865_message) {
	{
		auto __julec_range_expr = _172846_st2->_field_uses;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_150a13110_Struct> _1510c9150_u = *__julec_range_begin;
			_iter_begin_5684767472:;
			{
				if ((_1510c9150_u).alloc == (_172832_st1).alloc) {
					(*this)._method_push_cycle_error(_172846_st2,_1510c9150_u,_172865_message);
					return false;
				}
				if ((!((*this)._method_check_cross_cycle(_172832_st1,_1510c9150_u,_172865_message)))) {
					(*this)._method_push_cycle_error(_172846_st2,_1510c9150_u,_172865_message);
					return false;
				}
			}
			_iter_next_5684767472:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1510c9150_u = *__julec_range_begin; goto _iter_begin_5684767472; }
			_iter_end_5684767472:;
		}
	}
	return true;
}



inline jule::Bool _1510c9150_Sema::_method_check_struct_derive_illegal_cycles(jule::Str _174453_derive,jule::Ref<_150a13110_Struct> _174466_st1,jule::Ref<_15177b070_TypeKind> _174484_k) {
	jule::Bool _1744100_ok = jule::Bool();
	jule::Ref<_150a13110_Struct> _174517_st2 = _15177b070_get_struct_from_kind(_174484_k);
	if ((!(jule::real(_174517_st2)))) {
		_1744100_ok = true;
		return _1744100_ok;
	}
	if ((_174466_st1).alloc == (_174517_st2).alloc) {
		(*this)._method_push_err(_174466_st1->_field_token,jule::Str("illegal cycle for \"@\" derive, struct \"@\" refers to itself", 57),jule::Slice<jule::Any>({jule::Any(_174453_derive),jule::Any(_174466_st1->_field_ident)}));
		_1744100_ok = false;
		return _1744100_ok;
	}
	jule::Str _175717_message = jule::Str("", 0);
	if ((!((*this)._method_check_cross_cycle(_174466_st1,_174517_st2,_175717_message)))) {
		jule::Str _176021_err_msg = _175717_message;
		_175717_message=jule::Str("", 0);
		(*this)._method_push_cycle_error(_174466_st1,_174517_st2,_175717_message);
		_176021_err_msg=_176021_err_msg + _175717_message;
		(*this)._method_push_err(_174466_st1->_field_token,jule::Str("illegal cross cycle for \"@\" derive;\n@", 37),jule::Slice<jule::Any>({jule::Any(_174453_derive),jule::Any(_176021_err_msg)}));
		_1744100_ok = false;
		return _1744100_ok;
	}
	_1744100_ok = true;
	return _1744100_ok;
}



inline jule::Bool _1510c9150_Sema::_method_check_struct_ins_derive_clone(jule::Ref<_150a13110_StructIns> _177152_st) {
	jule::Bool _177170_ok = jule::Bool();
	if ((!(_177152_st->_field_decl->_method_is_derives(jule::Str("Clone", 5))))) {
		_177170_ok = true;
		return _177170_ok;
	}
	{
		auto __julec_range_expr = _177152_st->_field_fields;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_150a13110_FieldIns> _1510c9150_f = *__julec_range_begin;
			_iter_begin_5684792528:;
			{
				if ((!(jule::real(_1510c9150_f->_field_kind))) || (!(_15177b070_is_mut(_1510c9150_f->_field_kind)))) {
					goto _iter_next_5684792528;
				}
				if ((!(_15177b070_supports_cloning(_1510c9150_f->_field_kind)))) {
					(*this)._method_push_err(_177152_st->_field_decl->_field_token,jule::Str("type \"@\" is not compatible to derive \"@\"", 40),jule::Slice<jule::Any>({jule::Any(_1510c9150_f->_field_kind->_method_to_str()),jule::Any(jule::Str("Clone", 5))}));
					_177170_ok = false;
					return _177170_ok;
				}
				if ((!((*this)._method_check_struct_derive_illegal_cycles(jule::Str("Clone", 5),_177152_st->_field_decl,_1510c9150_f->_field_kind)))) {
					_177170_ok = false;
					return _177170_ok;
				}
			}
			_iter_next_5684792528:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1510c9150_f = *__julec_range_begin; goto _iter_begin_5684792528; }
			_iter_end_5684792528:;
		}
	}
	_177170_ok = true;
	return _177170_ok;
}



inline jule::Bool _1510c9150_Sema::_method_check_struct_derive_clone(jule::Ref<_150a13110_Struct> _179448_st) {
	jule::Bool _179463_ok = jule::Bool();
	_179463_ok = (*this)._method_check_struct_ins_derive_clone(_179448_st->_method_instance());
	return _179463_ok;
}



inline jule::Bool _1510c9150_Sema::_method_check_file_derives(void) {
	jule::Bool _179839_ok = jule::Bool();
	jule::Int _180017_i = 0LL;
	_iter_begin_5684811552:;
	if (!(_180017_i < (*this)._field_file->_field_structs._method_len())) { goto _iter_end_5684811552; }
	{
		jule::Ref<_150a13110_Struct> _180221_st = (*this)._field_file->_field_structs._method_at(_180017_i);
		jule::Bool _180317_ok = (*this)._method_check_struct_derive_clone(_180221_st);
		if ((!(_180317_ok))) {
			_179839_ok = false;
			return _179839_ok;
		}
	}
	_iter_next_5684811552:;
	(_180017_i)++;
	goto _iter_begin_5684811552;
	_iter_end_5684811552:;
	_179839_ok = true;
	return _179839_ok;
}



inline void _1510c9150_Sema::_method_check_package_derives(void) {
	{
		auto __julec_range_expr = (*this)._field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_15128c4d0_SymbolTable> _1510c9150_f = *__julec_range_begin;
			_iter_begin_5684818688:;
			{
				(*this)._method_set_current_file(_1510c9150_f);
				jule::Bool _181517_ok = (*this)._method_check_file_derives();
				if ((!(_181517_ok))) {
					return;
				}
			}
			_iter_next_5684818688:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1510c9150_f = *__julec_range_begin; goto _iter_begin_5684818688; }
			_iter_end_5684818688:;
		}
	}
}



inline void _1510c9150_Sema::_method_check_package_decls(void) {
	{
		auto __julec_range_expr = this->self->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_15128c4d0_SymbolTable> _1510c9150_f = *__julec_range_begin;
			_iter_begin_5684824000:;
			{
				this->self->_method_set_current_file(_1510c9150_f);
				if ((!(this->self->_method_check_passes()))) {
					return;
				}
			}
			_iter_next_5684824000:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1510c9150_f = *__julec_range_begin; goto _iter_begin_5684824000; }
			_iter_end_5684824000:;
		}
	}
	{
		auto __julec_range_expr = this->self->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_15128c4d0_SymbolTable> _1510c9150_f = *__julec_range_begin;
			_iter_begin_5684824864:;
			{
				this->self->_method_set_current_file(_1510c9150_f);
				if ((!(this->self->_method_check_type_alias_decls()))) {
					return;
				}
			}
			_iter_next_5684824864:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1510c9150_f = *__julec_range_begin; goto _iter_begin_5684824864; }
			_iter_end_5684824864:;
		}
	}
	{
		auto __julec_range_expr = this->self->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_15128c4d0_SymbolTable> _1510c9150_f = *__julec_range_begin;
			_iter_begin_5684827984:;
			{
				this->self->_method_set_current_file(_1510c9150_f);
				if ((!(this->self->_method_check_trait_decls()))) {
					return;
				}
			}
			_iter_next_5684827984:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1510c9150_f = *__julec_range_begin; goto _iter_begin_5684827984; }
			_iter_end_5684827984:;
		}
	}
	{
		auto __julec_range_expr = this->self->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_15128c4d0_SymbolTable> _1510c9150_f = *__julec_range_begin;
			_iter_begin_5684831088:;
			{
				this->self->_method_set_current_file(_1510c9150_f);
				if ((!(this->self->_method_check_global_decls()))) {
					return;
				}
			}
			_iter_next_5684831088:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1510c9150_f = *__julec_range_begin; goto _iter_begin_5684831088; }
			_iter_end_5684831088:;
		}
	}
	{
		auto __julec_range_expr = this->self->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_15128c4d0_SymbolTable> _1510c9150_f = *__julec_range_begin;
			_iter_begin_5684834256:;
			{
				this->self->_method_set_current_file(_1510c9150_f);
				if ((!(this->self->_method_check_fn_decls()))) {
					return;
				}
			}
			_iter_next_5684834256:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1510c9150_f = *__julec_range_begin; goto _iter_begin_5684834256; }
			_iter_end_5684834256:;
		}
	}
	{
		auto __julec_range_expr = this->self->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_15128c4d0_SymbolTable> _1510c9150_f = *__julec_range_begin;
			_iter_begin_5684837232:;
			{
				this->self->_method_set_current_file(_1510c9150_f);
				if ((!(this->self->_method_check_struct_decls()))) {
					return;
				}
			}
			_iter_next_5684837232:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1510c9150_f = *__julec_range_begin; goto _iter_begin_5684837232; }
			_iter_end_5684837232:;
		}
	}
	this->self->_method_check_package_derives();
}



inline void _1510c9150_Sema::_method_check_data_for_type_inference(jule::Ref<_151290fd0_Data> _187048_d,_150640f50_Token _187058_err_token) {
	{
		if (!((_187048_d->_method_is_nil()))) { goto _case_end_5684846464; }
		_case_begin_5684846464:;
		{
			(*this)._method_push_err(_187058_err_token,jule::Str("nil is cannot use with type inferred definitions", 48),jule::Slice<jule::Any>({}));
		}
		goto _match_end_5684846240;
		_case_end_5684846464:;
		if (!((_187048_d->_method_is_void()))) { goto _case_end_5684846592; }
		_case_begin_5684846592:;
		{
			(*this)._method_push_err(_187058_err_token,jule::Str("void data is cannot use for type inferred definitions", 53),jule::Slice<jule::Any>({}));
		}
		goto _match_end_5684846240;
		_case_end_5684846592:;
		if (!((_187048_d->_field_kind->_field_variadic))) { goto _case_end_5684846720; }
		_case_begin_5684846720:;
		{
			(*this)._method_push_err(_187058_err_token,jule::Str("invalid expression for type inference", 37),jule::Slice<jule::Any>({}));
		}
		goto _match_end_5684846240;
		_case_end_5684846720:;
		_match_end_5684846240:;
	}
}



inline void _1510c9150_Sema::_method_check_var(jule::Ref<_1511317d0_Var> _188333_v) {
	if (_188333_v->_field_cpp_linked) {
		return;
	}
	if (_188333_v->_method_is_type_inferred()) {
		_188333_v->_field_kind=jule::new_struct<_15177b070_TypeSymbol>(new( std::nothrow ) _15177b070_TypeSymbol(jule::Ref<_1506406d0_TypeDecl>(),_188333_v->_field_value->_field_data->_field_kind));
		this->self->_method_check_data_for_type_inference(_188333_v->_field_value->_field_data,_188333_v->_field_value->_field_expr->_field_token);
	} else {
		jule::Ref<_15177b070_Arr> _189521_arr = _188333_v->_field_kind->_field_kind->_method_arr();
		if (jule::real(_189521_arr)) {
			if (_189521_arr->_field_auto) {
				jule::Ref<_15177b070_Arr> _189825_data_arr = _188333_v->_field_value->_field_data->_field_kind->_method_arr();
				if (jule::real(_189825_data_arr)) {
					_189521_arr->_field_n=_189825_data_arr->_field_n;
				}
			}
		}
		this->self->_method_check_assign_type(_188333_v->_field_kind->_field_kind,_188333_v->_field_value->_field_data,_188333_v->_field_value->_field_expr->_field_token,false);
	}
	this->self->_method_check_validity_for_init_expr(_188333_v->_field_mutable,_188333_v->_field_reference,_188333_v->_field_kind->_field_kind,_188333_v->_field_value->_field_data,_188333_v->_field_value->_field_expr->_field_token);
	if ((!(_188333_v->_field_constant))) {
		jule::drop(_188333_v->_field_value->_field_data->_field_constant);
	}
	if (jule::real(_188333_v->_field_kind->_field_kind->_method_tup())) {
		jule::drop(_188333_v->_field_kind->_field_kind);
	}
}



inline void _1510c9150_Sema::_method_check_type_var(jule::Ref<_1511317d0_Var> _192638_decl,jule::Trait<_1517fbd60_Lookup> _192650_l) {
	if (_192638_decl->_field_cpp_linked || (!(_192638_decl->_method_is_initialized()))) {
		return;
	}
	if (jule::real(_192638_decl->_field_kind)) {
		_192638_decl->_field_value->_field_data=this->self->_method_evalpd(_192638_decl->_field_value->_field_expr,_192650_l,_192638_decl->_field_kind->_field_kind,_192638_decl);
	} else {
		_192638_decl->_field_value->_field_data=this->self->_method_evalpd(_192638_decl->_field_value->_field_expr,_192650_l,jule::new_ref<_15177b070_TypeKind>(),_192638_decl);
	}
	if ((!(jule::real(_192638_decl->_field_value->_field_data)))) {
		return;
	}
	this->self->_method_check_var(_192638_decl);
}



inline void _1510c9150_Sema::_method_check_global_types(void) {
	jule::Int _194717_i = 0LL;
	_iter_begin_5684886560:;
	if (!(_194717_i < this->self->_field_file->_field_vars._method_len())) { goto _iter_end_5684886560; }
	{
		jule::Ref<_1511317d0_Var> _194921_decl = this->self->_field_file->_field_vars._method_at(_194717_i);
		this->self->_method_check_type_var(_194921_decl,this->self);
	}
	_iter_next_5684886560:;
	(_194717_i)++;
	goto _iter_begin_5684886560;
	_iter_end_5684886560:;
	_194717_i=0LL;
	_iter_begin_5684890832:;
	if (!(_194717_i < this->self->_field_file->_field_vars._method_len())) { goto _iter_end_5684890832; }
	{
		jule::Ref<_1511317d0_Var> _195621_decl = this->self->_field_file->_field_vars._method_at(_194717_i);
		if (_195621_decl->_method_is_initialized() && (_195621_decl->_field_depends.len() > 0LL)) {
			this->self->_method_check_type_var(_195621_decl,this->self);
		}
	}
	_iter_next_5684890832:;
	(_194717_i)++;
	goto _iter_begin_5684890832;
	_iter_end_5684890832:;
}



inline void _1510c9150_Sema::_method_check_type_method(jule::Ref<_150a13110_StructIns> _196341_strct,jule::Ref<_15081bcd0_Fn> _196364_f) {
	if (_196364_f->_field_cpp_linked) {
		return;
	}
	if (_196364_f->_field_generics.len() > 0LL) {
		return;
	}
	if (_196364_f->_field_instances.len() == 0LL) {
		jule::Ref<_15081bcd0_FnIns> _197421_ins = _196364_f->_method_instance();
		_197421_ins->_field_owner=_196341_strct;
		_196364_f->_method_append_instance(_197421_ins);
		this->self->_method_reload_fn_ins_types(_197421_ins);
		_197421_ins->_field_reloaded=true;
	}
	{
		auto __julec_range_expr = _196364_f->_field_instances;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_15081bcd0_FnIns> _1510c9150_ins = *__julec_range_begin;
			_iter_begin_5684902416:;
			{
				if (_1510c9150_ins->_field_scope->_field_stmts._method_len() > 0LL) {
					goto _iter_next_5684902416;
				}
				this->self->_method_check_fn_ins(_1510c9150_ins);
			}
			_iter_next_5684902416:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1510c9150_ins = *__julec_range_begin; goto _iter_begin_5684902416; }
			_iter_end_5684902416:;
		}
	}
}



inline void _1510c9150_Sema::_method_check_type_struct(jule::Ref<_150a13110_Struct> _199041_strct) {
	if (_199041_strct->_field_cpp_linked) {
		return;
	}
	if ((_199041_strct->_field_generics.len() == 0LL) && (_199041_strct->_field_instances.len() == 0LL)) {
		jule::Ref<_150a13110_StructIns> _199621_ins = _199041_strct->_method_instance();
		_199621_ins->_field_checked=true;
		_199041_strct->_method_append_instance(_199621_ins);
	}
	{
		auto __julec_range_expr = _199041_strct->_field_instances;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_150a13110_StructIns> _1510c9150_ins = *__julec_range_begin;
			_iter_begin_5684920096:;
			{
				{
					auto __julec_range_expr = _1510c9150_ins->_field_methods;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Ref<_15081bcd0_Fn> _1510c9150_f = *__julec_range_begin;
						_iter_begin_5684922208:;
						{
							this->self->_method_check_type_method(_1510c9150_ins,_1510c9150_f);
						}
						_iter_next_5684922208:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { _1510c9150_f = *__julec_range_begin; goto _iter_begin_5684922208; }
						_iter_end_5684922208:;
					}
				}
			}
			_iter_next_5684920096:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1510c9150_ins = *__julec_range_begin; goto _iter_begin_5684920096; }
			_iter_end_5684920096:;
		}
	}
}



inline void _1510c9150_Sema::_method_check_struct_types(void) {
	jule::Int _200917_i = 0LL;
	_iter_begin_5684925008:;
	if (!(_200917_i < this->self->_field_file->_field_structs._method_len())) { goto _iter_end_5684925008; }
	{
		jule::Ref<_150a13110_Struct> _201121_strct = this->self->_field_file->_field_structs._method_at(_200917_i);
		this->self->_method_check_type_struct(_201121_strct);
	}
	_iter_next_5684925008:;
	(_200917_i)++;
	goto _iter_begin_5684925008;
	_iter_end_5684925008:;
}



inline void _1510c9150_Sema::_method_check_rets(jule::Ref<_15081bcd0_FnIns> _201633_f) {
	if (_201633_f->_field_decl->_method_is_void()) {
		return;
	}
	jule::Bool _202113_ok = _1510c9150_has_ret(_201633_f->_field_scope);
	if ((!(_202113_ok))) {
		(*this)._method_push_err(_201633_f->_field_decl->_field_token,jule::Str("missing return at end of function", 33),jule::Slice<jule::Any>({}));
	}
}



inline void _1510c9150_Sema::_method_check_fn_ins_sc(jule::Ref<_15081bcd0_FnIns> _202738_f,jule::Ref<_150d29660_ScopeChecker> _202753_sc) {
	if (_202738_f->_field_decl->_field_cpp_linked) {
		return;
	}
	jule::Slice<jule::Ref<_1511317d0_Var>> _203217_vars = _1510c9150_build_ret_vars(_202738_f);
	_202753_sc->_field_table->_field_vars._method_append(_203217_vars);
	_202753_sc->_field_table->_field_vars._method_append(_1510c9150_build_param_vars(_202738_f));
	_202753_sc->_field_table->_field_type_aliases._method_append(_1510c9150_build_generic_type_aliases(_202738_f));
	_202753_sc->_method_check(_202738_f->_field_decl->_field_scope,_202738_f->_field_scope);
	if (_203217_vars.len() > 0LL) {
		{
			auto __julec_range_expr = _203217_vars;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_1511317d0_Var> _1510c9150_v = *__julec_range_begin;
				_iter_begin_5684948832:;
				{
					_202738_f->_field_scope->_field_stmts._method_push_front(jule::Any(_1510c9150_v));
				}
				_iter_next_5684948832:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _1510c9150_v = *__julec_range_begin; goto _iter_begin_5684948832; }
				_iter_end_5684948832:;
			}
		}
	}
	(*this)._method_check_rets(_202738_f);
}



inline void _1510c9150_Sema::_method_check_fn_ins(jule::Ref<_15081bcd0_FnIns> _205035_f) {
	if (_205035_f->_field_decl->_field_cpp_linked) {
		return;
	}
	jule::Ref<_15128c4d0_SymbolTable> _205517_old = _205035_f->_field_decl->_field_sema->_field_file;
	__JULE_DEFER({
		_205035_f->_field_decl->_field_sema->_method_set_current_file(_205517_old);
	});
	jule::Ref<_15128c4d0_SymbolTable> _205717_file = _1510c9150_find_file(_205035_f->_field_decl->_field_sema->_field_files,_205035_f->_field_decl->_field_token._field_file);
	if (jule::real(_205717_file)) {
		_205035_f->_field_decl->_field_sema->_method_set_current_file(_205717_file);
	}
	jule::Ref<_150d29660_ScopeChecker> _206217_sc = _150d29660_new_scope_checker(_205035_f->_field_decl->_field_sema,_205035_f);
	(*this)._method_check_fn_ins_sc(_205035_f,_206217_sc);
	if ((_205035_f->_field_decl->_field_sema).alloc != (&((*this)))) {
		(*this)._field_errors=jule::append((*this)._field_errors,_205035_f->_field_decl->_field_sema->_field_errors);
	}
}



inline void _1510c9150_Sema::_method_check_type_fn(jule::Ref<_15081bcd0_Fn> _207037_f) {
	if (_207037_f->_field_cpp_linked) {
		return;
	}
	if (_207037_f->_field_generics.len() > 0LL) {
		return;
	}
	{
		auto __julec_range_expr = _207037_f->_field_instances;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_15081bcd0_FnIns> _1510c9150_ins = *__julec_range_begin;
			_iter_begin_5684970304:;
			{
				this->self->_method_check_fn_ins(_1510c9150_ins);
			}
			_iter_next_5684970304:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1510c9150_ins = *__julec_range_begin; goto _iter_begin_5684970304; }
			_iter_end_5684970304:;
		}
	}
}



inline void _1510c9150_Sema::_method_precheck_type_fn(jule::Ref<_15081bcd0_Fn> _208540_f) {
	if (_208540_f->_field_cpp_linked) {
		return;
	}
	if (_208540_f->_field_generics.len() > 0LL) {
		return;
	}
	if (_208540_f->_field_instances.len() == 0LL) {
		jule::Ref<_15081bcd0_FnIns> _209621_ins = _208540_f->_method_instance();
		_208540_f->_field_instances=jule::append(_208540_f->_field_instances,jule::Slice<jule::Ref<_15081bcd0_FnIns>>({_209621_ins}));
		this->self->_method_reload_fn_ins_types(_209621_ins);
		_209621_ins->_field_reloaded=true;
	}
}



inline jule::Bool _1510c9150_Sema::_method_precheck_fn_types(void) {
	jule::Bool _210439_ok = jule::Bool();
	jule::Int _210517_i = 0LL;
	_iter_begin_5684984608:;
	if (!(_210517_i < this->self->_field_file->_field_funcs._method_len())) { goto _iter_end_5684984608; }
	{
		jule::Ref<_15081bcd0_Fn> _210721_decl = this->self->_field_file->_field_funcs._method_at(_210517_i);
		this->self->_method_precheck_type_fn(_210721_decl);
	}
	_iter_next_5684984608:;
	(_210517_i)++;
	goto _iter_begin_5684984608;
	_iter_end_5684984608:;
	_210439_ok = true;
	return _210439_ok;
}



inline jule::Bool _1510c9150_Sema::_method_check_fn_types(void) {
	jule::Bool _211536_ok = jule::Bool();
	jule::Int _211617_i = 0LL;
	_iter_begin_5684992176:;
	if (!(_211617_i < this->self->_field_file->_field_funcs._method_len())) { goto _iter_end_5684992176; }
	{
		jule::Ref<_15081bcd0_Fn> _211821_decl = this->self->_field_file->_field_funcs._method_at(_211617_i);
		this->self->_method_check_type_fn(_211821_decl);
	}
	_iter_next_5684992176:;
	(_211617_i)++;
	goto _iter_begin_5684992176;
	_iter_end_5684992176:;
	_211536_ok = true;
	return _211536_ok;
}



inline void _1510c9150_Sema::_method_check_package_types(void) {
	{
		auto __julec_range_expr = this->self->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_15128c4d0_SymbolTable> _1510c9150_f = *__julec_range_begin;
			_iter_begin_5684998320:;
			{
				this->self->_method_set_current_file(_1510c9150_f);
				this->self->_method_check_global_types();
			}
			_iter_next_5684998320:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1510c9150_f = *__julec_range_begin; goto _iter_begin_5684998320; }
			_iter_end_5684998320:;
		}
	}
	{
		auto __julec_range_expr = this->self->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_15128c4d0_SymbolTable> _1510c9150_f = *__julec_range_begin;
			_iter_begin_5684999392:;
			{
				this->self->_method_set_current_file(_1510c9150_f);
				this->self->_method_precheck_fn_types();
			}
			_iter_next_5684999392:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1510c9150_f = *__julec_range_begin; goto _iter_begin_5684999392; }
			_iter_end_5684999392:;
		}
	}
	{
		auto __julec_range_expr = this->self->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_15128c4d0_SymbolTable> _1510c9150_f = *__julec_range_begin;
			_iter_begin_5685002320:;
			{
				this->self->_method_set_current_file(_1510c9150_f);
				this->self->_method_check_fn_types();
			}
			_iter_next_5685002320:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1510c9150_f = *__julec_range_begin; goto _iter_begin_5685002320; }
			_iter_end_5685002320:;
		}
	}
	{
		auto __julec_range_expr = this->self->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_15128c4d0_SymbolTable> _1510c9150_f = *__julec_range_begin;
			_iter_begin_5685005008:;
			{
				this->self->_method_set_current_file(_1510c9150_f);
				this->self->_method_check_struct_types();
			}
			_iter_next_5685005008:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1510c9150_f = *__julec_range_begin; goto _iter_begin_5685005008; }
			_iter_end_5685005008:;
		}
	}
}



inline void _1510c9150_Sema::_method_set_file_sema_fields(void) {
	jule::Int _215017_i = 0LL;
	_iter_begin_5685010688:;
	if (!(_215017_i < this->self->_field_file->_field_funcs._method_len())) { goto _iter_end_5685010688; }
	{
		jule::Ref<_15081bcd0_Fn> _215221_f = this->self->_field_file->_field_funcs._method_at(_215017_i);
		_215221_f->_field_sema=this->self;
	}
	_iter_next_5685010688:;
	(_215017_i)++;
	goto _iter_begin_5685010688;
	_iter_end_5685010688:;
	_215017_i=0LL;
	_iter_begin_5685011936:;
	if (!(_215017_i < this->self->_field_file->_field_structs._method_len())) { goto _iter_end_5685011936; }
	{
		jule::Ref<_150a13110_Struct> _215821_st = this->self->_field_file->_field_structs._method_at(_215017_i);
		_215821_st->_field_sema=this->self;
	}
	_iter_next_5685011936:;
	(_215017_i)++;
	goto _iter_begin_5685011936;
	_iter_end_5685011936:;
}



inline void _1510c9150_Sema::_method_set_sema_fields(void) {
	{
		auto __julec_range_expr = this->self->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_15128c4d0_SymbolTable> _1510c9150_file = *__julec_range_begin;
			_iter_begin_5685020384:;
			{
				this->self->_method_set_current_file(_1510c9150_file);
				this->self->_method_set_file_sema_fields();
			}
			_iter_next_5685020384:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1510c9150_file = *__julec_range_begin; goto _iter_begin_5685020384; }
			_iter_end_5685020384:;
		}
	}
}



inline void _1510c9150_Sema::_method_check(jule::Slice<jule::Ref<_15128c4d0_SymbolTable>> _217029_files) {
	this->self->_field_files=_217029_files;
	this->self->_method_check_imports();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_check_enums();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_set_sema_fields();
	this->self->_method_impl_impls();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_check_package_decls();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_check_package_types();
}







std::ostream &operator<<(std::ostream &_Stream, const _1510c9150_Sema &_Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file;
	_Stream << "}";
	return _Stream;
}



inline void _1510d19a0_DynamicTypeAnnotation::_method_push_generic(jule::Ref<_15177b070_TypeKind> _54635_k,jule::Int _54649_i) {
	(*this)._field_f->_field_generics[static_cast<jule::Int>(_54649_i)]=_54635_k;
}



inline jule::Bool _1510d19a0_DynamicTypeAnnotation::_method_annotate_prim(jule::Ref<_15177b070_TypeKind> _55043_k) {
	jule::Bool _55059_ok = jule::Bool();
	jule::Str _55113_kind = (*((*this)._field_k))->_method_to_str();
	{
		auto __julec_range_expr = (*this)._field_f->_field_decl->_field_generics;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _1510d19a0_i = 0;
			jule::Ref<_1506406d0_GenericDecl> _1510d19a0_g = *__julec_range_begin;
			_iter_begin_5685255168:;
			{
				if (_55113_kind != _1510d19a0_g->_field_ident) {
					goto _iter_next_5685255168;
				}
				jule::Ref<_15177b070_TypeKind> _55717_t = (*this)._field_f->_field_generics[static_cast<jule::Int>(_1510d19a0_i)];
				{
					if (!(((!(jule::real(_55717_t)))))) { goto _case_end_5685260368; }
					_case_begin_5685260368:;
					{
						(*this)._method_push_generic(_55043_k,_1510d19a0_i);
					}
					goto _match_end_5685260224;
					_case_end_5685260368:;
					if (!((_55717_t->_method_to_str() != _55043_k->_method_to_str()))) { goto _case_end_5685260480; }
					_case_begin_5685260480:;
					{
						_55059_ok = false;
						return _55059_ok;
					}
					goto _match_end_5685260224;
					_case_end_5685260480:;
					_match_end_5685260224:;
				}
				(*((*this)._field_k))->_field_kind=_55043_k->_field_kind;
				_55059_ok = true;
				return _55059_ok;
			}
			_iter_next_5685255168:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_1510d19a0_i; _1510d19a0_g = *__julec_range_begin; goto _iter_begin_5685255168; }
			_iter_end_5685255168:;
		}
	}
	_55059_ok = false;
	return _55059_ok;
}



inline jule::Bool _1510d19a0_DynamicTypeAnnotation::_method_annotate_slc(jule::Ref<_15177b070_TypeKind> _57442_k) {
	jule::Bool _57458_ok = jule::Bool();
	jule::Ref<_15177b070_Slc> _57517_pslc = (*((*this)._field_k))->_method_slc();
	if ((!(jule::real(_57517_pslc)))) {
		_57458_ok = false;
		return _57458_ok;
	}
	jule::Ref<_15177b070_Slc> _58017_slc = _57442_k->_method_slc();
	_15177b070_TypeKind* _58117_kk = (_57517_pslc->_field_elem).alloc;
	(*this)._field_k=(&(_58117_kk));
	_57458_ok = (*this)._method_annotate_kind(_58017_slc->_field_elem);
	return _57458_ok;
}



inline jule::Bool _1510d19a0_DynamicTypeAnnotation::_method_check_map_key(_15177b070_TypeKind** _58643_k,jule::Ref<_15177b070_TypeKind> _58662_ck) {
	jule::Bool _58679_ok = jule::Bool();
	_15177b070_TypeKind** _58717_old = (*this)._field_k;
	(*this)._field_k=_58643_k;
	_58679_ok=(*this)._method_annotate_kind(_58662_ck);
	(*this)._field_k=_58717_old;
	_58679_ok = _58679_ok;
	return _58679_ok;
}



inline jule::Bool _1510d19a0_DynamicTypeAnnotation::_method_annotate_map(jule::Ref<_15177b070_TypeKind> _59442_k) {
	jule::Bool _59458_ok = jule::Bool();
	jule::Ref<_15177b070_Map> _59517_pmap = (*((*this)._field_k))->_method_map();
	if ((!(jule::real(_59517_pmap)))) {
		_59458_ok = false;
		return _59458_ok;
	}
	jule::Ref<_15177b070_Map> _60017_m = _59442_k->_method_map();
	_15177b070_TypeKind* _60217_key = (_59517_pmap->_field_key).alloc;
	_15177b070_TypeKind* _60317_val = (_59517_pmap->_field_val).alloc;
	_59458_ok = (*this)._method_check_map_key((&(_60217_key)),_60017_m->_field_key) && (*this)._method_check_map_key((&(_60317_val)),_60017_m->_field_val);
	return _59458_ok;
}



inline jule::Bool _1510d19a0_DynamicTypeAnnotation::_method_annotate_fn(jule::Ref<_15177b070_TypeKind> _60741_k) {
	jule::Bool _60757_ok = jule::Bool();
	jule::Ref<_15081bcd0_FnIns> _60817_pf = (*((*this)._field_k))->_method_fnc();
	if ((!(jule::real(_60817_pf)))) {
		_60757_ok = false;
		return _60757_ok;
	}
	jule::Ref<_15081bcd0_FnIns> _61217_f = _60741_k->_method_fnc();
	{
		if (!((_60817_pf->_field_params.len() != _61217_f->_field_params.len()))) { goto _case_end_5685300832; }
		_case_begin_5685300832:;
		{
			_60757_ok = false;
			return _60757_ok;
		}
		goto _match_end_5685300544;
		_case_end_5685300832:;
		if (!((_60817_pf->_field_decl->_method_is_void() != _61217_f->_field_decl->_method_is_void()))) { goto _case_end_5685300944; }
		_case_begin_5685300944:;
		{
			_60757_ok = false;
			return _60757_ok;
		}
		goto _match_end_5685300544;
		_case_end_5685300944:;
		_match_end_5685300544:;
	}
	_60757_ok=true;
	_15177b070_TypeKind** _62217_old = (*this)._field_k;
	{
		auto __julec_range_expr = _61217_f->_field_params;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _1510d19a0_i = 0;
			jule::Ref<_15081bcd0_ParamIns> _1510d19a0_fp = *__julec_range_begin;
			_iter_begin_5685306144:;
			{
				_15177b070_TypeKind* _62421_pfp = (_60817_pf->_field_params[static_cast<jule::Int>(_1510d19a0_i)]->_field_kind).alloc;
				(*this)._field_k=(&(_62421_pfp));
				_60757_ok=(*this)._method_annotate_kind(_1510d19a0_fp->_field_kind) && _60757_ok;
			}
			_iter_next_5685306144:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_1510d19a0_i; _1510d19a0_fp = *__julec_range_begin; goto _iter_begin_5685306144; }
			_iter_end_5685306144:;
		}
	}
	if ((!(_60817_pf->_field_decl->_method_is_void()))) {
		_15177b070_TypeKind* _63021_result = (_60817_pf->_field_result).alloc;
		(*this)._field_k=(&(_63021_result));
		_60757_ok=(*this)._method_annotate_kind(_61217_f->_field_result) && _60757_ok;
	}
	(*this)._field_k=_62217_old;
	_60757_ok = _60757_ok;
	return _60757_ok;
}



inline jule::Bool _1510d19a0_DynamicTypeAnnotation::_method_annotate_ptr(jule::Ref<_15177b070_TypeKind> _63942_k) {
	jule::Bool _63958_ok = jule::Bool();
	jule::Ref<_15177b070_Ptr> _64017_pptr = (*((*this)._field_k))->_method_ptr();
	if ((!(jule::real(_64017_pptr)))) {
		_63958_ok = false;
		return _63958_ok;
	}
	jule::Ref<_15177b070_Ptr> _64517_ptr = _63942_k->_method_ptr();
	_15177b070_TypeKind* _64617_cpptr = (_64017_pptr->_field_elem).alloc;
	(*this)._field_k=(&(_64617_cpptr));
	_63958_ok = (*this)._method_annotate_kind(_64517_ptr->_field_elem);
	return _63958_ok;
}



inline jule::Bool _1510d19a0_DynamicTypeAnnotation::_method_annotate_any(jule::Ref<_15177b070_TypeKind> _65142_k) {
	jule::Bool _65158_ok = jule::Bool();
	jule::Str _65213_kind = (*((*this)._field_k))->_method_to_str();
	{
		auto __julec_range_expr = (*this)._field_f->_field_decl->_field_generics;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _1510d19a0_i = 0;
			jule::Ref<_1506406d0_GenericDecl> _1510d19a0_g = *__julec_range_begin;
			_iter_begin_5685330160:;
			{
				if (_65213_kind != _1510d19a0_g->_field_ident) {
					goto _iter_next_5685330160;
				}
				jule::Ref<_15177b070_TypeKind> _65817_t = (*this)._field_f->_field_generics[static_cast<jule::Int>(_1510d19a0_i)];
				{
					if (!(((!(jule::real(_65817_t)))))) { goto _case_end_5685335360; }
					_case_begin_5685335360:;
					{
						(*this)._method_push_generic(_65142_k,_1510d19a0_i);
					}
					goto _match_end_5685335216;
					_case_end_5685335360:;
					if (!((_65817_t->_method_to_str() != _65142_k->_method_to_str()))) { goto _case_end_5685335472; }
					_case_begin_5685335472:;
					{
						_65158_ok = false;
						return _65158_ok;
					}
					goto _match_end_5685335216;
					_case_end_5685335472:;
					_match_end_5685335216:;
				}
				(*((*this)._field_k))->_field_kind=_65142_k->_field_kind;
				_65158_ok = true;
				return _65158_ok;
			}
			_iter_next_5685330160:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_1510d19a0_i; _1510d19a0_g = *__julec_range_begin; goto _iter_begin_5685330160; }
			_iter_end_5685330160:;
		}
	}
	_65158_ok = false;
	return _65158_ok;
}



inline jule::Bool _1510d19a0_DynamicTypeAnnotation::_method_annotate_kind(jule::Ref<_15177b070_TypeKind> _67543_k) {
	jule::Bool _67559_ok = jule::Bool();
	if (((*this)._field_k == nullptr) || ((*((*this)._field_k)) == nullptr)) {
		return _67559_ok;
	}
	{
		if (!(((*this)._method_annotate_any(_67543_k)))) { goto _case_end_5685346144; }
		_case_begin_5685346144:;
		{
			_67559_ok = true;
			return _67559_ok;
		}
		goto _match_end_5685343760;
		_case_end_5685346144:;
		if (!((jule::real(_67543_k->_method_prim())))) { goto _case_end_5685346256; }
		_case_begin_5685346256:;
		{
			_67559_ok = (*this)._method_annotate_prim(_67543_k);
			return _67559_ok;
		}
		goto _match_end_5685343760;
		_case_end_5685346256:;
		if (!((jule::real(_67543_k->_method_slc())))) { goto _case_end_5685346368; }
		_case_begin_5685346368:;
		{
			_67559_ok = (*this)._method_annotate_slc(_67543_k);
			return _67559_ok;
		}
		goto _match_end_5685343760;
		_case_end_5685346368:;
		if (!((jule::real(_67543_k->_method_map())))) { goto _case_end_5685346480; }
		_case_begin_5685346480:;
		{
			_67559_ok = (*this)._method_annotate_map(_67543_k);
			return _67559_ok;
		}
		goto _match_end_5685343760;
		_case_end_5685346480:;
		if (!((jule::real(_67543_k->_method_fnc())))) { goto _case_end_5685345072; }
		_case_begin_5685345072:;
		{
			_67559_ok = (*this)._method_annotate_fn(_67543_k);
			return _67559_ok;
		}
		goto _match_end_5685343760;
		_case_end_5685345072:;
		if (!((jule::real(_67543_k->_method_ptr())))) { goto _case_end_5685345184; }
		_case_begin_5685345184:;
		{
			_67559_ok = (*this)._method_annotate_ptr(_67543_k);
			return _67559_ok;
		}
		goto _match_end_5685343760;
		_case_end_5685345184:;
		_case_begin_5685344400:;
		{
			_67559_ok = false;
			return _67559_ok;
		}
		goto _match_end_5685343760;
		_case_end_5685344400:;
		_match_end_5685343760:;
	}
}



inline jule::Bool _1510d19a0_DynamicTypeAnnotation::_method_annotate(void) {
	jule::Bool _69136_ok = jule::Bool();
	_15177b070_TypeKind* _69217_pk = ((*this)._field_p->_field_kind).alloc;
	(*this)._field_k=(&(_69217_pk));
	_69136_ok = (*this)._method_annotate_kind((*this)._field_a->_field_kind);
	return _69136_ok;
}







std::ostream &operator<<(std::ostream &_Stream, const _1510d19a0_DynamicTypeAnnotation &_Src) {
	_Stream << "DynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "k:" << _Src._field_k;
	_Stream << "}";
	return _Stream;
}



inline void _1510d19a0_StructLitChecker::_method_push_err(_150640f50_Token _92227_token,jule::Str _92241_fmt,jule::Slice<jule::Any> _92254_args) {
	(*this)._field_e->_method_push_err(_92227_token,_92241_fmt,_92254_args);
}



inline void _1510d19a0_StructLitChecker::_method_push_suggest(jule::Str _92731_fmt,jule::Slice<jule::Any> _92744_args) {
	(*this)._field_e->_method_push_suggest(_92731_fmt,_92744_args);
}



inline void _1510d19a0_StructLitChecker::_method_push_match(jule::Ref<_150a13110_FieldIns> _93133_f,jule::Ref<_151290fd0_Data> _93151_d,_150640f50_Token _93161_error_token) {
	(*this)._field_args=jule::append((*this)._field_args,jule::Slice<jule::Ref<_150f25dd0_StructArgExprModel>>({jule::new_struct<_150f25dd0_StructArgExprModel>(new( std::nothrow ) _150f25dd0_StructArgExprModel(_93133_f,_93151_d->_field_model))}));
	
	(*this)._field_e->_field_s->_method_check_validity_for_init_expr(_93133_f->_field_decl->_field_mutable,false,_93133_f->_field_kind,_93151_d,_93161_error_token);
	(*this)._field_e->_field_s->_method_check_assign_type(_93133_f->_field_kind,_93151_d,_93161_error_token,false);
}



inline void _1510d19a0_StructLitChecker::_method_check_pair(jule::Ref<_1506406d0_FieldExprPair> _94233_pair,jule::Slice<jule::Any> _94259_exprs) {
	jule::Ref<_150a13110_FieldIns> _94417_f = (*this)._field_s->_method_find_field(_94233_pair->_field_field._field_kind);
	if ((!(jule::real(_94417_f)))) {
		(*this)._method_push_err(_94233_pair->_field_field,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_94233_pair->_field_field._field_kind)}));
		return;
	}
	if ((!((*this)._field_e->_field_s->_method_is_accessible_define(_94417_f->_field_decl->_field_public,_94417_f->_field_decl->_field_token)))) {
		(*this)._method_push_err(_94233_pair->_field_field,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_94233_pair->_field_field._field_kind)}));
		(*this)._method_push_suggest(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>({}));
	}
	_julec_label_dup_lookup:;
	{
		auto __julec_range_expr = _94259_exprs;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Any _1510d19a0_expr = *__julec_range_begin;
			_iter_begin_5685544176:;
			{
				{
					auto _match_expr{ _1510d19a0_expr };
					if (!(_match_expr.type_is<jule::Ref<_1506406d0_FieldExprPair>>())) { goto _case_end_5685546064; }
					_case_begin_5685546064:;
					{
						jule::Ref<_1506406d0_FieldExprPair> _96025_dpair = _1510d19a0_expr.operator jule::Ref<_1506406d0_FieldExprPair>();
						{
							if (!((_94233_pair == _96025_dpair))) { goto _case_end_5685549152; }
							_case_begin_5685549152:;
							{
								goto _iter_end_5685544176;
							}
							goto _match_end_5685548912;
							_case_end_5685549152:;
							if (!((_94233_pair->_field_field._field_kind == _96025_dpair->_field_field._field_kind))) { goto _case_end_5685549264; }
							_case_begin_5685549264:;
							{
								(*this)._method_push_err(_94233_pair->_field_field,jule::Str("@ already has expression", 24),jule::Slice<jule::Any>({jule::Any(_94233_pair->_field_field._field_kind)}));
								goto _iter_end_5685544176;
							}
							goto _match_end_5685548912;
							_case_end_5685549264:;
							_match_end_5685548912:;
						}
					}
					goto _match_end_5685544976;
					_case_end_5685546064:;
					_match_end_5685544976:;
				}
			}
			_iter_next_5685544176:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1510d19a0_expr = *__julec_range_begin; goto _iter_begin_5685544176; }
			_iter_end_5685544176:;
		}
	}
	jule::Ref<_15177b070_TypeKind> _97217_prefix = (*this)._field_e->_field_prefix;
	__JULE_DEFER({
		(*this)._field_e->_field_prefix=_97217_prefix;
	});
	(*this)._field_e->_field_prefix=_94417_f->_field_kind;
	jule::Ref<_151290fd0_Data> _97617_d = (*this)._field_e->_method_eval_expr_kind(_94233_pair->_field_expr);
	if ((!(jule::real(_97617_d)))) {
		return;
	}
	(*this)._method_push_match(_94417_f,_97617_d,_94233_pair->_field_field);
}



inline jule::Bool _1510d19a0_StructLitChecker::_method_ready_exprs(jule::Slice<jule::Any> _98334_exprs) {
	jule::Bool _98417_ok = true;
	{
		auto __julec_range_expr = _98334_exprs;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _1510d19a0_i = 0;
			jule::Any _1510d19a0_expr = *__julec_range_begin;
			_iter_begin_5685563264:;
			{
				{
					auto _match_expr{ _1510d19a0_expr };
					if (!(_match_expr.type_is<jule::Ref<_1506406d0_KeyValPair>>())) { goto _case_end_5685565584; }
					_case_begin_5685565584:;
					{
						jule::Ref<_1506406d0_KeyValPair> _98825_pair = _1510d19a0_expr.operator jule::Ref<_1506406d0_KeyValPair>();
						{
							auto _match_expr{ _98825_pair->_field_key };
							if (!(_match_expr.type_is<jule::Ref<_1506406d0_IdentExpr>>())) { goto _case_end_5685569568; }
							goto _match_end_5685565792;
							_case_end_5685569568:;
							_case_begin_5685568768:;
							{
								(*this)._method_push_err(_98825_pair->_field_colon,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
								_98417_ok=false;
								goto _iter_next_5685563264;
							}
							goto _match_end_5685565792;
							_case_end_5685568768:;
							_match_end_5685565792:;
						}
						_98334_exprs[static_cast<jule::Int>(_1510d19a0_i)]=jule::Any(jule::new_struct<_1506406d0_FieldExprPair>(new( std::nothrow ) _1506406d0_FieldExprPair(_98825_pair->_field_key.operator jule::Ref<_1506406d0_IdentExpr>()->_field_token,_98825_pair->_field_val)));
					}
					goto _match_end_5685565152;
					_case_end_5685565584:;
					_match_end_5685565152:;
				}
			}
			_iter_next_5685563264:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_1510d19a0_i; _1510d19a0_expr = *__julec_range_begin; goto _iter_begin_5685563264; }
			_iter_end_5685563264:;
		}
	}
	return _98417_ok;
}



inline void _1510d19a0_StructLitChecker::_method_check(jule::Slice<jule::Any> _100928_exprs) {
	if (_100928_exprs.len() == 0LL) {
		return;
	}
	if ((!((*this)._method_ready_exprs(_100928_exprs)))) {
		return;
	}
	jule::Bool _101817_paired = false;
	{
		auto __julec_range_expr = _100928_exprs;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _1510d19a0_i = 0;
			jule::Any _1510d19a0_expr = *__julec_range_begin;
			_iter_begin_5685580032:;
			{
				{
					auto _match_expr{ _1510d19a0_expr };
					if (!(_match_expr.type_is<jule::Ref<_1506406d0_FieldExprPair>>())) { goto _case_end_5685582448; }
					_case_begin_5685582448:;
					{
						jule::Ref<_1506406d0_FieldExprPair> _102225_pair = _1510d19a0_expr.operator jule::Ref<_1506406d0_FieldExprPair>();
						if ((_1510d19a0_i > 0LL) && (!(_101817_paired))) {
							(*this)._method_push_err(_102225_pair->_field_field,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
						}
						_101817_paired=true;
						(*this)._method_check_pair(_102225_pair,_100928_exprs);
					}
					goto _match_end_5685581984;
					_case_end_5685582448:;
					if (!(_match_expr.type_is<jule::Ref<_1506406d0_Expr>>())) { goto _case_end_5685582640; }
					_case_begin_5685582640:;
					{
						jule::Ref<_1506406d0_Expr> _103025_e = _1510d19a0_expr.operator jule::Ref<_1506406d0_Expr>();
						if (_101817_paired) {
							(*this)._method_push_err(_103025_e->_field_token,jule::Str("argument must target to field", 29),jule::Slice<jule::Any>({}));
						}
						if (_1510d19a0_i >= (*this)._field_s->_field_fields.len()) {
							(*this)._method_push_err(_103025_e->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
							goto _iter_next_5685580032;
						}
						jule::Ref<_150a13110_FieldIns> _103925_field = (*this)._field_s->_field_fields[static_cast<jule::Int>(_1510d19a0_i)];
						jule::Ref<_15177b070_TypeKind> _104125_prefix = (*this)._field_e->_field_prefix;
						__JULE_DEFER({
							(*this)._field_e->_field_prefix=_104125_prefix;
						});
						(*this)._field_e->_field_prefix=_103925_field->_field_kind;
						jule::Ref<_151290fd0_Data> _104525_d = (*this)._field_e->_method_eval_expr_kind(_103025_e->_field_kind);
						if ((!(jule::real(_104525_d)))) {
							goto _iter_next_5685580032;
						}
						(*this)._method_push_match(_103925_field,_104525_d,_103025_e->_field_token);
					}
					goto _match_end_5685581984;
					_case_end_5685582640:;
					_match_end_5685581984:;
				}
			}
			_iter_next_5685580032:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_1510d19a0_i; _1510d19a0_expr = *__julec_range_begin; goto _iter_begin_5685580032; }
			_iter_end_5685580032:;
		}
	}
	if ((!(_101817_paired))) {
		jule::I64 _105617_n = (*this)._field_s->_field_fields.len();
		jule::I64 _105721_diff = _105617_n - _100928_exprs.len();
		{
			if (!((_105721_diff <= 0LL))) { goto _case_end_5685606208; }
			_case_begin_5685606208:;
			{
				return;
			}
			goto _match_end_5685606080;
			_case_end_5685606208:;
			_match_end_5685606080:;
		}
		jule::Str _106321_idents = jule::Str("", 0);
		_iter_begin_5685605376:;
		if (!(_105721_diff > 0LL)) { goto _iter_end_5685605376; }
		{
			_106321_idents+=jule::Str(", ", 2) + (*this)._field_s->_field_fields[static_cast<jule::Int>(_105617_n - _105721_diff)]->_field_decl->_field_ident;
		}
		_iter_next_5685605376:;
		(_105721_diff)--;
		goto _iter_begin_5685605376;
		_iter_end_5685605376:;
		_106321_idents=_106321_idents.slice(2LL);
		(*this)._method_push_err((*this)._field_error_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(_106321_idents)}));
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1510d19a0_StructLitChecker &_Src) {
	_Stream << "StructLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_1511317d0_Var> _1510d19a0_RangeChecker::_method_build_var(jule::Ref<_1506406d0_VarDecl> _108228_decl) {
	jule::Ref<_1511317d0_Var> _108317_v = _150e75a70_build_var(_108228_decl);
	return _108317_v;
}



inline void _1510d19a0_RangeChecker::_method_set_size_key(void) {
	if ((!(jule::real((*this)._field_rang->_field_key_a))) || _150640f50_is_ignore_ident((*this)._field_rang->_field_key_a->_field_ident)) {
		return;
	}
	(*this)._field_kind->_field_key_a=(*this)._method_build_var((*this)._field_rang->_field_key_a);
	(*this)._field_kind->_field_key_a->_field_kind=jule::new_struct<_15177b070_TypeSymbol>(new( std::nothrow ) _15177b070_TypeSymbol(jule::Ref<_1506406d0_TypeDecl>(),jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_15177b070_build_prim_type(jule::Str("int", 3))))));
}



inline void _1510d19a0_RangeChecker::_method_check_slice(void) {
	(*this)._method_set_size_key();
	if ((!(jule::real((*this)._field_rang->_field_key_b))) || _150640f50_is_ignore_ident((*this)._field_rang->_field_key_b->_field_ident)) {
		return;
	}
	jule::Ref<_15177b070_Slc> _110617_slc = (*this)._field_d->_field_kind->_method_slc();
	(*this)._field_kind->_field_key_b=(*this)._method_build_var((*this)._field_rang->_field_key_b);
	(*this)._field_kind->_field_key_b->_field_kind=jule::new_struct<_15177b070_TypeSymbol>(new( std::nothrow ) _15177b070_TypeSymbol(jule::Ref<_1506406d0_TypeDecl>(),_110617_slc->_field_elem));
	(*this)._field_sc->_field_s->_method_check_validity_for_init_expr((*this)._field_kind->_field_key_b->_field_mutable,(*this)._field_kind->_field_key_b->_field_reference,(*this)._field_kind->_field_key_b->_field_kind->_field_kind,(*this)._field_d,(*this)._field_rang->_field_in_token);
}



inline void _1510d19a0_RangeChecker::_method_check_array(void) {
	(*this)._method_set_size_key();
	if ((!(jule::real((*this)._field_rang->_field_key_b))) || _150640f50_is_ignore_ident((*this)._field_rang->_field_key_b->_field_ident)) {
		return;
	}
	jule::Ref<_15177b070_Arr> _112317_arr = (*this)._field_d->_field_kind->_method_arr();
	(*this)._field_kind->_field_key_b=(*this)._method_build_var((*this)._field_rang->_field_key_b);
	(*this)._field_kind->_field_key_b->_field_kind=jule::new_struct<_15177b070_TypeSymbol>(new( std::nothrow ) _15177b070_TypeSymbol(jule::Ref<_1506406d0_TypeDecl>(),_112317_arr->_field_elem));
	(*this)._field_sc->_field_s->_method_check_validity_for_init_expr((*this)._field_kind->_field_key_b->_field_mutable,(*this)._field_kind->_field_key_b->_field_reference,(*this)._field_kind->_field_key_b->_field_kind->_field_kind,(*this)._field_d,(*this)._field_rang->_field_in_token);
}



inline void _1510d19a0_RangeChecker::_method_check_map_key_a(void) {
	if ((!(jule::real((*this)._field_rang->_field_key_a))) || _150640f50_is_ignore_ident((*this)._field_rang->_field_key_a->_field_ident)) {
		return;
	}
	jule::Ref<_15177b070_Map> _113917_m = (*this)._field_d->_field_kind->_method_map();
	(*this)._field_kind->_field_key_a=(*this)._method_build_var((*this)._field_rang->_field_key_a);
	(*this)._field_kind->_field_key_a->_field_kind=jule::new_struct<_15177b070_TypeSymbol>(new( std::nothrow ) _15177b070_TypeSymbol(jule::Ref<_1506406d0_TypeDecl>(),_113917_m->_field_key));
	jule::Ref<_151290fd0_Data> _114317_d = jule::new_ref<_151290fd0_Data>((*this)._field_d.get());
	_114317_d->_field_kind=_113917_m->_field_key;
	(*this)._field_sc->_field_s->_method_check_validity_for_init_expr((*this)._field_kind->_field_key_a->_field_mutable,(*this)._field_kind->_field_key_a->_field_reference,(*this)._field_kind->_field_key_a->_field_kind->_field_kind,_114317_d,(*this)._field_rang->_field_in_token);
}



inline void _1510d19a0_RangeChecker::_method_check_map_key_b(void) {
	if ((!(jule::real((*this)._field_rang->_field_key_b))) || _150640f50_is_ignore_ident((*this)._field_rang->_field_key_b->_field_ident)) {
		return;
	}
	jule::Ref<_15177b070_Map> _115817_m = (*this)._field_d->_field_kind->_method_map();
	(*this)._field_kind->_field_key_b=(*this)._method_build_var((*this)._field_rang->_field_key_b);
	(*this)._field_kind->_field_key_b->_field_kind=jule::new_struct<_15177b070_TypeSymbol>(new( std::nothrow ) _15177b070_TypeSymbol(jule::Ref<_1506406d0_TypeDecl>(),_115817_m->_field_val));
	jule::Ref<_151290fd0_Data> _116217_d = jule::new_ref<_151290fd0_Data>((*this)._field_d.get());
	_116217_d->_field_kind=_115817_m->_field_val;
	(*this)._field_sc->_field_s->_method_check_validity_for_init_expr((*this)._field_kind->_field_key_b->_field_mutable,(*this)._field_kind->_field_key_b->_field_reference,(*this)._field_kind->_field_key_b->_field_kind->_field_kind,_116217_d,(*this)._field_rang->_field_in_token);
}



inline void _1510d19a0_RangeChecker::_method_check_map(void) {
	(*this)._method_check_map_key_a();
	(*this)._method_check_map_key_b();
}



inline void _1510d19a0_RangeChecker::_method_check_str(void) {
	(*this)._method_set_size_key();
	if ((!(jule::real((*this)._field_rang->_field_key_b))) || _150640f50_is_ignore_ident((*this)._field_rang->_field_key_b->_field_ident)) {
		return;
	}
	(*this)._field_kind->_field_key_b=(*this)._method_build_var((*this)._field_rang->_field_key_b);
	(*this)._field_kind->_field_key_b->_field_kind=jule::new_struct<_15177b070_TypeSymbol>(new( std::nothrow ) _15177b070_TypeSymbol(jule::Ref<_1506406d0_TypeDecl>(),jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_15177b070_build_prim_type(jule::Str("u8", 2))))));
}



inline jule::Bool _1510d19a0_RangeChecker::_method_check(void) {
	if (jule::real((*this)._field_d->_field_kind->_method_ref())) {
		(*this)._field_d->_field_model=jule::Any(jule::new_struct<_150f25dd0_ExplicitDerefExprModel>(new( std::nothrow ) _150f25dd0_ExplicitDerefExprModel((*this)._field_d->_field_model)));
		(*this)._field_d->_field_kind=(*this)._field_d->_field_kind->_method_ref()->_field_elem;
	}
	{
		if (!((jule::real((*this)._field_d->_field_kind->_method_slc())))) { goto _case_end_5685693440; }
		_case_begin_5685693440:;
		{
			(*this)._method_check_slice();
			return true;
		}
		goto _match_end_5685692832;
		_case_end_5685693440:;
		if (!((jule::real((*this)._field_d->_field_kind->_method_arr())))) { goto _case_end_5685693552; }
		_case_begin_5685693552:;
		{
			(*this)._method_check_array();
			return true;
		}
		goto _match_end_5685692832;
		_case_end_5685693552:;
		if (!((jule::real((*this)._field_d->_field_kind->_method_map())))) { goto _case_end_5685693664; }
		_case_begin_5685693664:;
		{
			(*this)._method_check_map();
			return true;
		}
		goto _match_end_5685692832;
		_case_end_5685693664:;
		_match_end_5685692832:;
	}
	jule::Ref<_15177b070_Prim> _121313_prim = (*this)._field_d->_field_kind->_method_prim();
	if (jule::real(_121313_prim) && _121313_prim->_method_is_str()) {
		(*this)._method_check_str();
		return true;
	}
	(*this)._field_sc->_field_s->_method_push_err((*this)._field_rang->_field_in_token,jule::Str("range iterations must be have enumerable expression", 51),jule::Slice<jule::Any>({}));
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _1510d19a0_RangeChecker &_Src) {
	_Stream << "RangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _151290fd0_Data::_method_is_nil(void) {
	return (*this)._field_kind->_method_is_nil();
}



inline jule::Bool _151290fd0_Data::_method_is_void(void) {
	return (*this)._field_kind->_method_is_void();
}



inline jule::Bool _151290fd0_Data::_method_is_const(void) {
	return jule::real((*this)._field_constant);
}







std::ostream &operator<<(std::ostream &_Stream, const _151290fd0_Data &_Src) {
	_Stream << "Data{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "cast_kind:" << _Src._field_cast_kind << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "lvalue:" << _Src._field_lvalue << ", ";
	_Stream << "variadiced:" << _Src._field_variadiced << ", ";
	_Stream << "is_rune:" << _Src._field_is_rune << ", ";
	_Stream << "model:" << _Src._field_model << ", ";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "constant:" << _Src._field_constant;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _151290fd0_Value &_Src) {
	_Stream << "Value{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline void _151290fd0_Eval::_method_push_err(_150640f50_Token _28627_token,jule::Str _28641_fmt,jule::Slice<jule::Any> _28654_args) {
	(*this)._field_s->_method_push_err(_28627_token,_28641_fmt,_28654_args);
}



inline void _151290fd0_Eval::_method_push_suggest(jule::Str _29131_fmt,jule::Slice<jule::Any> _29144_args) {
	(*this)._field_s->_method_push_suggest(_29131_fmt,_29144_args);
}



inline jule::Bool _151290fd0_Eval::_method_is_unsafe(void) {
	return (*this)._field_unsafety;
}



inline jule::Bool _151290fd0_Eval::_method_is_global(void) {
	{
		auto _match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_1510c9150_Sema>>())) { goto _case_end_5685928480; }
		_case_begin_5685928480:;
		{
			return true;
		}
		goto _match_end_5685927536;
		_case_end_5685928480:;
		_case_begin_5685928144:;
		{
			return false;
		}
		goto _match_end_5685927536;
		_case_end_5685928144:;
		_match_end_5685927536:;
	}
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_lit_nil(void) {
	jule::Ref<_15199b440_Const> _31017_constant = _15199b440_Const::_static_method_new_nil();
	return jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),nullptr)),jule::Ref<_15177b070_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(_31017_constant),false,_31017_constant));
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_lit_str(jule::Ref<_1506406d0_LitExpr> _32122_lt) {
	jule::Str _32217_s = _32122_lt->_field_value.slice(1LL,static_cast<jule::Int>(_32122_lt->_field_value.len() - 1LL));
	if (_150640f50_is_raw_str(_32122_lt->_field_value)) {
		_32217_s=_151ae6af0_to_raw_str(static_cast<jule::Slice<jule::U8>>(_32217_s));
	} else {
		_32217_s=_151ae6af0_to_str(static_cast<jule::Slice<jule::U8>>(_32217_s));
	}
	jule::Ref<_15199b440_Const> _32817_constant = _15199b440_Const::_static_method_new_str(_32217_s);
	return jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_15177b070_build_prim_type(jule::Str("str", 3)))),jule::Ref<_15177b070_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(_32817_constant),false,_32817_constant));
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_lit_bool(jule::Ref<_1506406d0_LitExpr> _34223_lit) {
	jule::Ref<_15199b440_Const> _34317_constant = _15199b440_Const::_static_method_new_bool(_34223_lit->_field_value == jule::Str("true", 4));
	return jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_15177b070_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_15177b070_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(_34317_constant),false,_34317_constant));
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_lit_rune(jule::Ref<_1506406d0_LitExpr> _35623_l) {
	
	
	jule::Str _36013_lt = _35623_l->_field_value.slice(1LL,static_cast<jule::Int>(_35623_l->_field_value.len() - 1LL));
	jule::I32 _36113_r = _151ae6af0_to_rune(static_cast<jule::Slice<jule::U8>>(_36013_lt));
	jule::Ref<_151290fd0_Data> _36217_data = jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::Ref<_15177b070_TypeKind>(),jule::Ref<_15177b070_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),false,_15199b440_Const::_static_method_new_i64(static_cast<jule::I64>(_36113_r))));
	jule::Bool _36917_is_byte;
	std::tie(std::ignore,_36917_is_byte) = _151ae6af0_is_byte_lit(_35623_l->_field_value);
	if (_36917_is_byte) {
		_36217_data->_field_kind=jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_15177b070_build_prim_type(jule::Str("u8", 2))));
	} else {
		_36217_data->_field_kind=jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_15177b070_build_prim_type(jule::Str("i32", 3))));
	}
	_36217_data->_field_model=jule::Any(jule::new_struct<_150f25dd0_RuneExprModel>(new( std::nothrow ) _150f25dd0_RuneExprModel(_36113_r)));
	_36217_data->_field_is_rune=true;
	return _36217_data;
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_lit_float(jule::Ref<_1506406d0_LitExpr> _38524_l) {
	
	jule::F64 _38814_f;
	std::tie(_38814_f,std::ignore) = _147fb9200_parse_float(_38524_l->_field_value,64LL);
	jule::Ref<_15199b440_Const> _38917_constant = _15199b440_Const::_static_method_new_f64(_38814_f);
	return jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_15177b070_build_prim_type(jule::Str("f64", 3)))),jule::Ref<_15177b070_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(_38917_constant),false,_38917_constant));
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_lit_int(jule::Ref<_1506406d0_LitExpr> _40326_l) {
	
	jule::Str _40617_lit = _40326_l->_field_value;
	jule::Int _40717_base = 0LL;
	{
		if (!((_40617_lit.has_prefix(jule::Str("0x", 2))))) { goto _case_end_5685980688; }
		_case_begin_5685980688:;
		{
			_40617_lit=_40617_lit.slice(2LL);
			_40717_base=16LL;
		}
		goto _match_end_5685978992;
		_case_end_5685980688:;
		if (!((_40617_lit.has_prefix(jule::Str("0b", 2))))) { goto _case_end_5685980352; }
		_case_begin_5685980352:;
		{
			_40617_lit=_40617_lit.slice(2LL);
			_40717_base=2LL;
		}
		goto _match_end_5685978992;
		_case_end_5685980352:;
		if (!((_40617_lit.has_prefix(jule::Str("0o", 2))))) { goto _case_end_5685980464; }
		_case_begin_5685980464:;
		{
			_40617_lit=_40617_lit.slice(2LL);
			_40717_base=8LL;
		}
		goto _match_end_5685978992;
		_case_end_5685980464:;
		if (!(((_40617_lit[0LL] == '0') && (_40617_lit.len() > 1LL)))) { goto _case_end_5685979584; }
		_case_begin_5685979584:;
		{
			_40617_lit=_40617_lit.slice(1LL);
			_40717_base=8LL;
		}
		goto _match_end_5685978992;
		_case_end_5685979584:;
		_case_begin_5685979280:;
		{
			_40717_base=10LL;
		}
		goto _match_end_5685978992;
		_case_end_5685979280:;
		_match_end_5685978992:;
	}
	jule::Ref<_151290fd0_Data> _43017_d = jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::Ref<_15177b070_TypeKind>(),jule::Ref<_15177b070_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),false,jule::Ref<_15199b440_Const>()));
	jule::Any _43617_value = jule::Any(nullptr);
	jule::I64 _43714_sig;
	jule::Int _43719_err;
	std::tie(_43714_sig,_43719_err) = _147e40080_parse_int(_40617_lit,_40717_base,64LL);
	if (_43719_err == 0LLU) {
		_43617_value=jule::Any(_43714_sig);
		_43017_d->_field_constant=_15199b440_Const::_static_method_new_i64(_43714_sig);
	} else {
		jule::U64 _44218_unsig;
		jule::Int _44225_err;
		std::tie(_44218_unsig,_44225_err) = _147e40080_parse_uint(_40617_lit,_40717_base,64LL);
		if (_44225_err != 0LLU) {
			(*this)._method_push_err(_40326_l->_field_token,jule::Str("arithmetic value overflow", 25),jule::Slice<jule::Any>({}));
			(*this)._method_push_suggest(jule::Str("floating-point literals may solve your problem", 46),jule::Slice<jule::Any>({}));
		}
		_43017_d->_field_constant=_15199b440_Const::_static_method_new_u64(_44218_unsig);
		_43617_value=jule::Any(_44218_unsig);
	}
	_43017_d->_field_kind=jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_15177b070_build_prim_type(_151290fd0_kind_by_bitsize(_43617_value))));
	_151290fd0_normalize_bitsize(_43017_d);
	_43017_d->_field_model=jule::Any(_43017_d->_field_constant);
	return _43017_d;
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_lit_num(jule::Ref<_1506406d0_LitExpr> _46126_l) {
	{
		if (!((_150640f50_is_float(_46126_l->_field_value)))) { goto _case_end_5686008992; }
		_case_begin_5686008992:;
		{
			return (*this)._method_lit_float(_46126_l);
		}
		goto _match_end_5686007104;
		_case_end_5686008992:;
		_case_begin_5686007248:;
		{
			return (*this)._method_lit_int(_46126_l);
		}
		goto _match_end_5686007104;
		_case_end_5686007248:;
		_match_end_5686007104:;
	}
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_eval_lit(jule::Ref<_1506406d0_LitExpr> _46827_lit) {
	{
		if (!((_46827_lit->_method_is_nil()))) { goto _case_end_5686015264; }
		_case_begin_5686015264:;
		{
			return (*this)._method_lit_nil();
		}
		goto _match_end_5686012720;
		_case_end_5686015264:;
		if (!((_150640f50_is_str(_46827_lit->_field_value)))) { goto _case_end_5686014272; }
		_case_begin_5686014272:;
		{
			return (*this)._method_lit_str(_46827_lit);
		}
		goto _match_end_5686012720;
		_case_end_5686014272:;
		if (!((_150640f50_is_bool(_46827_lit->_field_value)))) { goto _case_end_5686014480; }
		_case_begin_5686014480:;
		{
			return (*this)._method_lit_bool(_46827_lit);
		}
		goto _match_end_5686012720;
		_case_end_5686014480:;
		if (!((_150640f50_is_rune(_46827_lit->_field_value)))) { goto _case_end_5686014928; }
		_case_begin_5686014928:;
		{
			return (*this)._method_lit_rune(_46827_lit);
		}
		goto _match_end_5686012720;
		_case_end_5686014928:;
		if (!((_150640f50_is_num(_46827_lit->_field_value)))) { goto _case_end_5686015040; }
		_case_begin_5686015040:;
		{
			return (*this)._method_lit_num(_46827_lit);
		}
		goto _match_end_5686012720;
		_case_end_5686015040:;
		_case_begin_5686012864:;
		{
			return jule::new_ref<_151290fd0_Data>();
		}
		goto _match_end_5686012720;
		_case_end_5686012864:;
		_match_end_5686012720:;
	}
}



inline jule::Any _151290fd0_Eval::_method_find_builtins(jule::Str _47932_ident) {
	{
		auto _match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_150f26340_ImportInfo>>())) { goto _case_end_5686023760; }
		_case_begin_5686023760:;
		{
			jule::Any _48221_def = _151290fd0_find_builtins_import(_47932_ident,(*this)._field_lookup.operator jule::Ref<_150f26340_ImportInfo>());
			if (_48221_def != nullptr) {
				return _48221_def;
			}
		}
		goto _match_end_5686023136;
		_case_end_5686023760:;
		if (!(_match_expr.type_is<jule::Ref<_1510c9150_Sema>>())) { goto _case_end_5686023888; }
		_case_begin_5686023888:;
		{
			jule::Any _48821_def = _151290fd0_find_builtins_sema(_47932_ident,(*this)._field_lookup.operator jule::Ref<_1510c9150_Sema>());
			if (_48821_def != nullptr) {
				return _48821_def;
			}
		}
		goto _match_end_5686023136;
		_case_end_5686023888:;
		if (!(_match_expr.type_is<jule::Ref<_150d29660_ScopeChecker>>())) { goto _case_end_5686024048; }
		_case_begin_5686024048:;
		{
			jule::Any _49421_def = _151290fd0_find_builtins_sema(_47932_ident,(*this)._field_lookup.operator jule::Ref<_150d29660_ScopeChecker>()->_field_s);
			if (_49421_def != nullptr) {
				return _49421_def;
			}
		}
		goto _match_end_5686023136;
		_case_end_5686024048:;
		_match_end_5686023136:;
	}
	return _1518a9420_find_builtin_def(_47932_ident);
}



inline jule::Any _151290fd0_Eval::_method_get_def(jule::Str _50326_ident,jule::Bool _50338_cpp_linked) {
	if ((!(_50338_cpp_linked))) {
		jule::Ref<_150f1c930_Enum> _50521_enm = (*this)._field_lookup.get()._method_find_enum(_50326_ident);
		if (jule::real(_50521_enm)) {
			return jule::Any(_50521_enm);
		}
	}
	jule::Ref<_1511317d0_Var> _51117_v = (*this)._field_lookup.get()._method_find_var(_50326_ident,_50338_cpp_linked);
	if (jule::real(_51117_v)) {
		return jule::Any(_51117_v);
	}
	jule::Ref<_15081bcd0_Fn> _51617_f = (*this)._field_lookup.get()._method_find_fn(_50326_ident,_50338_cpp_linked);
	if (jule::real(_51617_f)) {
		return jule::Any(_51617_f);
	}
	jule::Ref<_150a13110_Struct> _52117_s = (*this)._field_lookup.get()._method_find_struct(_50326_ident,_50338_cpp_linked);
	if (jule::real(_52117_s)) {
		return jule::Any(_52117_s);
	}
	jule::Ref<_15177b070_TypeAlias> _52617_ta = (*this)._field_lookup.get()._method_find_type_alias(_50326_ident,_50338_cpp_linked);
	if (jule::real(_52617_ta)) {
		return jule::Any(_52617_ta);
	}
	return (*this)._method_find_builtins(_50326_ident);
}



inline void _151290fd0_Eval::_method_push_reference(jule::Ref<_150e75a70_ReferenceStack> _53437_references) {
	{
		auto _match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_150d29660_ScopeChecker>>())) { goto _case_end_5686071328; }
		_case_begin_5686071328:;
		{
			jule::Ref<_150d29660_ScopeChecker> _53721_sc = (*this)._field_lookup.operator jule::Ref<_150d29660_ScopeChecker>()->_method_get_root();
			if ((!(_53437_references->_method_exist_1(_53721_sc->_field_owner)))) {
				_53437_references->_method_push(jule::Any(_53721_sc->_field_owner));
			}
		}
		goto _match_end_5686058160;
		_case_end_5686071328:;
		_case_begin_5686058752:;
		{
			if (jule::real((*this)._field_owner) && (!(_53437_references->_method_exist_0((*this)._field_owner)))) {
				_53437_references->_method_push(jule::Any((*this)._field_owner));
			}
		}
		goto _match_end_5686058160;
		_case_end_5686058752:;
		_match_end_5686058160:;
	}
}



inline void _151290fd0_Eval::_method_push_reference_to_fn(jule::Ref<_15081bcd0_FnIns> _54943_f) {
	{
		auto _match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_150d29660_ScopeChecker>>())) { goto _case_end_5686081616; }
		_case_begin_5686081616:;
		{
			jule::Ref<_150d29660_ScopeChecker> _55221_sc = (*this)._field_lookup.operator jule::Ref<_150d29660_ScopeChecker>()->_method_get_root();
			if (_55221_sc->_field_owner->_field_decl->_method_is_init() && (!(_55221_sc->_field_owner->_field_references->_method_exist_1(_54943_f)))) {
				_55221_sc->_field_owner->_field_refers->_method_push(jule::Any(_54943_f));
			}
		}
		goto _match_end_5686034176;
		_case_end_5686081616:;
		_match_end_5686034176:;
	}
	(*this)._method_push_reference(_54943_f->_field_references);
}



inline void _151290fd0_Eval::_method_push_reference_to_var(jule::Ref<_1511317d0_Var> _56044_v) {
	if ((!(jule::real(_56044_v->_field_references)))) {
		return;
	}
	{
		auto _match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_150d29660_ScopeChecker>>())) { goto _case_end_5686100128; }
		_case_begin_5686100128:;
		{
			jule::Ref<_150d29660_ScopeChecker> _56721_sc = (*this)._field_lookup.operator jule::Ref<_150d29660_ScopeChecker>()->_method_get_root();
			if (_56721_sc->_field_owner->_field_decl->_method_is_init() && (!(_56721_sc->_field_owner->_field_references->_method_exist_0(_56044_v)))) {
				_56721_sc->_field_owner->_field_refers->_method_push(jule::Any(_56044_v));
			}
		}
		goto _match_end_5686099616;
		_case_end_5686100128:;
		_match_end_5686099616:;
	}
	(*this)._method_push_reference(_56044_v->_field_references);
}



inline void _151290fd0_Eval::_method_push_reference_to_struct(jule::Ref<_150a13110_StructIns> _57647_s) {
	{
		auto _match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_150d29660_ScopeChecker>>())) { goto _case_end_5686111600; }
		_case_begin_5686111600:;
		{
			jule::Ref<_150d29660_ScopeChecker> _57921_sc = (*this)._field_lookup.operator jule::Ref<_150d29660_ScopeChecker>()->_method_get_root();
			if (_57921_sc->_field_owner->_field_decl->_method_is_init() && (!(_57921_sc->_field_owner->_field_references->_method_exist_2(_57647_s)))) {
				_57921_sc->_field_owner->_field_refers->_method_push(jule::Any(_57647_s));
			}
		}
		goto _match_end_5686110976;
		_case_end_5686111600:;
		_match_end_5686110976:;
	}
	(*this)._method_push_reference(_57647_s->_field_references);
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_eval_enum(jule::Ref<_150f1c930_Enum> _58728_enm,_150640f50_Token _58740_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_58728_enm->_field_public,_58728_enm->_field_token)))) {
		(*this)._method_push_err(_58740_error_token,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_58728_enm->_field_ident)}));
		(*this)._method_push_suggest(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>({}));
		return jule::new_ref<_151290fd0_Data>();
	}
	return jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_58728_enm)),jule::Ref<_15177b070_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),true,jule::new_ref<_15199b440_Const>()));
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_eval_struct(jule::Ref<_150a13110_StructIns> _60534_s,_150640f50_Token _60549_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_60534_s->_field_decl->_field_public,_60534_s->_field_decl->_field_token)))) {
		(*this)._method_push_err(_60549_error_token,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_60534_s->_field_decl->_field_ident)}));
		(*this)._method_push_suggest(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>({}));
		return jule::new_ref<_151290fd0_Data>();
	}
	return jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_60534_s)),jule::Ref<_15177b070_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(_60534_s),true,jule::new_ref<_15199b440_Const>()));
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_eval_fn_ins(jule::Ref<_15081bcd0_FnIns> _62430_f) {
	return jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_62430_f)),jule::Ref<_15177b070_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(_62430_f),false,jule::new_ref<_15199b440_Const>()));
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_eval_fn(jule::Ref<_15081bcd0_Fn> _63730_f,_150640f50_Token _63738_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_63730_f->_field_public,_63730_f->_field_token)))) {
		(*this)._method_push_err(_63738_error_token,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_63730_f->_field_ident)}));
		(*this)._method_push_suggest(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>({}));
		return jule::new_ref<_151290fd0_Data>();
	}
	jule::Ref<_15081bcd0_FnIns> _64517_ins = _63730_f->_method_instance();
	(*this)._method_push_reference_to_fn(_64517_ins);
	return (*this)._method_eval_fn_ins(_64517_ins);
}



inline void _151290fd0_Eval::_method_push_illegal_cycle_error(jule::Ref<_1511317d0_Var> _65043_v1,jule::Ref<_1511317d0_Var> _65053_v2,jule::Str& _65068_message) {
	
	jule::Str _65313_refers_to = _157e34dc0_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(_65043_v1->_field_ident),jule::Any(_65053_v2->_field_ident)}));
	_65068_message=((_150e75a70_str_repeat(jule::Str(" ", 1),4LL) + _65313_refers_to) + jule::Str("\n", 1)) + _65068_message;
}



inline jule::Bool _151290fd0_Eval::_method_check_cross_cycle(jule::Ref<_1511317d0_Var> _65736_v,jule::Str& _65750_message) {
	{
		auto __julec_range_expr = _65736_v->_field_depends;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_1511317d0_Var> _151290fd0_d = *__julec_range_begin;
			_iter_begin_5686174736:;
			{
				if ((_151290fd0_d).alloc == ((*this)._field_owner).alloc) {
					(*this)._method_push_illegal_cycle_error(_65736_v,_151290fd0_d,_65750_message);
					return false;
				}
				if ((!((*this)._method_check_cross_cycle(_151290fd0_d,_65750_message)))) {
					(*this)._method_push_illegal_cycle_error(_65736_v,_151290fd0_d,_65750_message);
					return false;
				}
			}
			_iter_next_5686174736:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _151290fd0_d = *__julec_range_begin; goto _iter_begin_5686174736; }
			_iter_end_5686174736:;
		}
	}
	return true;
}



inline jule::Bool _151290fd0_Eval::_method_check_illegal_cycles(jule::Ref<_1511317d0_Var> _67643_v,_150640f50_Token _67652_decl_token) {
	jule::Bool _67673_ok = jule::Bool();
	if ((!(jule::real((*this)._field_owner)))) {
		_67673_ok = true;
		return _67673_ok;
	}
	if (((*this)._field_owner).alloc == (_67643_v).alloc) {
		(*this)._method_push_err((*this)._field_owner->_field_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>({jule::Any((*this)._field_owner->_field_ident)}));
		_67673_ok = false;
		return _67673_ok;
	}
	jule::Str _68817_message = jule::Str("", 0);
	if ((!((*this)._method_check_cross_cycle(_67643_v,_68817_message)))) {
		jule::Str _69121_err_msg = _68817_message;
		_68817_message=jule::Str("", 0);
		(*this)._method_push_illegal_cycle_error((*this)._field_owner,_67643_v,_68817_message);
		_69121_err_msg=_69121_err_msg + _68817_message;
		(*this)._method_push_err(_67652_decl_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>({jule::Any(_69121_err_msg)}));
		_67673_ok = false;
		return _67673_ok;
	}
	(*this)._field_owner->_field_depends=jule::append((*this)._field_owner->_field_depends,jule::Slice<jule::Ref<_1511317d0_Var>>({_67643_v}));
	_67673_ok = true;
	return _67673_ok;
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_eval_var(jule::Ref<_1511317d0_Var> _70331_v,_150640f50_Token _70340_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_70331_v->_field_public,_70331_v->_field_token)))) {
		(*this)._method_push_err(_70340_error_token,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_70331_v->_field_ident)}));
		(*this)._method_push_suggest(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>({}));
		return jule::new_ref<_151290fd0_Data>();
	}
	_70331_v->_field_used=true;
	{
		auto _match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_1510c9150_Sema>>())) { goto _case_end_5686205728; }
		_case_begin_5686205728:;
		{
			jule::Bool _71517_ok = (*this)._method_check_illegal_cycles(_70331_v,_70340_error_token);
			if ((!(_71517_ok))) {
				return jule::new_ref<_151290fd0_Data>();
			}
		}
		goto _match_end_5686200624;
		_case_end_5686205728:;
		if (!(_match_expr.type_is<jule::Ref<_150d29660_ScopeChecker>>())) { goto _case_end_5686205920; }
		_case_begin_5686205920:;
		{
			if ((!(_70331_v->_field_reference)) || (*this)._method_is_unsafe()) {
				goto _match_end_5686200624;
			}
			jule::Ref<_150d29660_ScopeChecker> _72521_s = (*this)._field_lookup.operator jule::Ref<_150d29660_ScopeChecker>();
			_iter_begin_5686208944:;
			if (!((!(jule::real(_72521_s->_field_owner))) && jule::real(_72521_s->_field_parent))) { goto _iter_end_5686208944; }
			{
				_72521_s=_72521_s->_field_parent;
			}
			_iter_next_5686208944:;
			goto _iter_begin_5686208944;
			_iter_end_5686208944:;
			if ((jule::real(_72521_s->_field_owner) && _72521_s->_field_owner->_field_anon) && ((_70331_v->_field_scope).alloc != (_72521_s->_field_owner->_field_scope).alloc)) {
				(*this)._method_push_err(_70340_error_token,jule::Str("anonymous functions cannot access to reference \"@\" definition of parent scope", 77),jule::Slice<jule::Any>({jule::Any(_70331_v->_field_ident)}));
			}
		}
		goto _match_end_5686200624;
		_case_end_5686205920:;
		_match_end_5686200624:;
	}
	(*this)._method_push_reference_to_var(_70331_v);
	if ((!(_70331_v->_field_cpp_linked)) && ((!(jule::real(_70331_v->_field_value))) || (!(jule::real(_70331_v->_field_value->_field_data))))) {
		if (_70331_v->_field_constant) {
			(*this)._field_s->_method_check_type_var(_70331_v,(*this)._field_s);
			if ((!(jule::real(_70331_v->_field_value->_field_data)))) {
				return jule::new_ref<_151290fd0_Data>();
			}
		}
	}
	if ((!(jule::real(_70331_v->_field_kind))) || (!(jule::real(_70331_v->_field_kind->_field_kind)))) {
		return jule::new_ref<_151290fd0_Data>();
	}
	jule::Ref<_151290fd0_Data> _75117_d = jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(_70331_v->_field_kind->_field_kind->_method_clone(),jule::Ref<_15177b070_TypeKind>(),_70331_v->_field_mutable,_70331_v->_field_reference,(!(_70331_v->_field_constant)),jule::Bool(),jule::Bool(),jule::Any(_70331_v),false,jule::Ref<_15199b440_Const>()));
	if (((!(_70331_v->_field_cpp_linked)) && _70331_v->_method_is_initialized()) && jule::real(_70331_v->_field_value->_field_data)) {
		_75117_d->_field_is_rune=_70331_v->_field_value->_field_data->_field_is_rune;
	}
	if (_70331_v->_field_constant) {
		_75117_d->_field_constant=jule::new_ref<_15199b440_Const>(_70331_v->_field_value->_field_data->_field_constant.get());
		_75117_d->_field_model=jule::Any(_75117_d->_field_constant);
	}
	if (jule::real(_75117_d->_field_kind->_method_fnc())) {
		jule::Ref<_15081bcd0_FnIns> _77021_f = _75117_d->_field_kind->_method_fnc();
		if (jule::real(_77021_f->_field_decl)) {
			_77021_f->_field_decl->_field_ident=_70331_v->_field_ident;
		}
	}
	return _75117_d;
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_eval_type_alias(jule::Ref<_15177b070_TypeAlias> _78138_ta,_150640f50_Token _78154_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_78138_ta->_field_public,_78138_ta->_field_token)))) {
		(*this)._method_push_err(_78154_error_token,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_78138_ta->_field_ident)}));
		(*this)._method_push_suggest(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>({}));
		return jule::new_ref<_151290fd0_Data>();
	}
	_78138_ta->_field_used=true;
	jule::Trait<_15177b070_Kind> _79017_kind = _78138_ta->_field_kind->_field_kind->_field_kind;
	{
		auto _match_expr{ _79017_kind };
		if (!(_match_expr.type_is<jule::Ref<_150a13110_StructIns>>())) { goto _case_end_5686249536; }
		_case_begin_5686249536:;
		{
			return (*this)._method_eval_struct(_79017_kind.operator jule::Ref<_150a13110_StructIns>(),_78154_error_token);
		}
		goto _match_end_5686247152;
		_case_end_5686249536:;
		if (!(_match_expr.type_is<jule::Ref<_150f1c930_Enum>>())) { goto _case_end_5686249648; }
		_case_begin_5686249648:;
		{
			return (*this)._method_eval_enum(_79017_kind.operator jule::Ref<_150f1c930_Enum>(),_78154_error_token);
		}
		goto _match_end_5686247152;
		_case_end_5686249648:;
		_case_begin_5686249232:;
		{
			jule::Ref<_151290fd0_Data> _79921_d = jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(_78138_ta->_field_kind->_field_kind->_method_clone(),jule::Ref<_15177b070_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),true,jule::Ref<_15199b440_Const>()));
			if (_78138_ta->_field_cpp_linked) {
				_79921_d->_field_kind->_field_cpp_ident=_78138_ta->_field_ident;
			}
			_79921_d->_field_model=jule::Any(_79921_d->_field_kind);
			return _79921_d;
		}
		goto _match_end_5686247152;
		_case_end_5686249232:;
		_match_end_5686247152:;
	}
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_eval_def(jule::Any _81431_def,_150640f50_Token _81441_ident) {
	{
		auto _match_expr{ _81431_def };
		if (!(_match_expr.type_is<jule::Ref<_1511317d0_Var>>())) { goto _case_end_5686265696; }
		_case_begin_5686265696:;
		{
			return (*this)._method_eval_var(_81431_def.operator jule::Ref<_1511317d0_Var>(),_81441_ident);
		}
		goto _match_end_5686261328;
		_case_end_5686265696:;
		if (!(_match_expr.type_is<jule::Ref<_150f1c930_Enum>>())) { goto _case_end_5686265360; }
		_case_begin_5686265360:;
		{
			return (*this)._method_eval_enum(_81431_def.operator jule::Ref<_150f1c930_Enum>(),_81441_ident);
		}
		goto _match_end_5686261328;
		_case_end_5686265360:;
		if (!(_match_expr.type_is<jule::Ref<_150a13110_Struct>>())) { goto _case_end_5686265472; }
		_case_begin_5686265472:;
		{
			return (*this)._method_eval_struct(_81431_def.operator jule::Ref<_150a13110_Struct>()->_method_instance(),_81441_ident);
		}
		goto _match_end_5686261328;
		_case_end_5686265472:;
		if (!(_match_expr.type_is<jule::Ref<_15081bcd0_Fn>>())) { goto _case_end_5686262096; }
		_case_begin_5686262096:;
		{
			return (*this)._method_eval_fn(_81431_def.operator jule::Ref<_15081bcd0_Fn>(),_81441_ident);
		}
		goto _match_end_5686261328;
		_case_end_5686262096:;
		if (!(_match_expr.type_is<jule::Ref<_15081bcd0_FnIns>>())) { goto _case_end_5686262208; }
		_case_begin_5686262208:;
		{
			return (*this)._method_eval_fn_ins(_81431_def.operator jule::Ref<_15081bcd0_FnIns>());
		}
		goto _match_end_5686261328;
		_case_end_5686262208:;
		if (!(_match_expr.type_is<jule::Ref<_15177b070_TypeAlias>>())) { goto _case_end_5686262320; }
		_case_begin_5686262320:;
		{
			return (*this)._method_eval_type_alias(_81431_def.operator jule::Ref<_15177b070_TypeAlias>(),_81441_ident);
		}
		goto _match_end_5686261328;
		_case_end_5686262320:;
		_case_begin_5686261712:;
		{
			(*this)._method_push_err(_81441_ident,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_81441_ident._field_kind)}));
			return jule::new_ref<_151290fd0_Data>();
		}
		goto _match_end_5686261328;
		_case_end_5686261712:;
		_match_end_5686261328:;
	}
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_eval_ident(jule::Ref<_1506406d0_IdentExpr> _84029_ident) {
	jule::Any _84117_def = (*this)._method_get_def(_84029_ident->_field_ident,_84029_ident->_field_cpp_linked);
	return (*this)._method_eval_def(_84117_def,_84029_ident->_field_token);
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_eval_unary_minus(jule::Ref<_151290fd0_Data> _84535_d) {
	jule::Ref<_15177b070_Prim> _84613_t = _84535_d->_field_kind->_method_prim();
	if ((!(jule::real(_84613_t))) || (!(_1519b1410_is_num(_84613_t->_method_to_str())))) {
		return jule::new_ref<_151290fd0_Data>();
	}
	if (_84535_d->_method_is_const()) {
		{
			if (!((_84535_d->_field_constant->_method_is_f64()))) { goto _case_end_5686287168; }
			_case_begin_5686287168:;
			{
				_84535_d->_field_constant->_method_set_f64(static_cast<jule::F64>((-(_84535_d->_field_constant->_method_read_f64()))));
			}
			goto _match_end_5686286960;
			_case_end_5686287168:;
			if (!((_84535_d->_field_constant->_method_is_i64()))) { goto _case_end_5686287296; }
			_case_begin_5686287296:;
			{
				_84535_d->_field_constant->_method_set_f64(static_cast<jule::F64>((-(_84535_d->_field_constant->_method_as_f64()))));
			}
			goto _match_end_5686286960;
			_case_end_5686287296:;
			if (!((_84535_d->_field_constant->_method_is_u64()))) { goto _case_end_5686287424; }
			_case_begin_5686287424:;
			{
				_84535_d->_field_constant->_method_set_f64(static_cast<jule::F64>((-(_84535_d->_field_constant->_method_as_f64()))));
			}
			goto _match_end_5686286960;
			_case_end_5686287424:;
			_match_end_5686286960:;
		}
		_151290fd0_normalize_type(_84535_d);
	}
	_84535_d->_field_lvalue=false;
	_84535_d->_field_model=jule::Any(jule::new_struct<_150f25dd0_UnaryExprModel>(new( std::nothrow ) _150f25dd0_UnaryExprModel(_84535_d->_field_model,jule::Str("-", 1))));
	return _84535_d;
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_eval_unary_plus(jule::Ref<_151290fd0_Data> _86834_d) {
	jule::Ref<_15177b070_Prim> _86913_t = _86834_d->_field_kind->_method_prim();
	if ((!(jule::real(_86913_t))) || (!(_1519b1410_is_num(_86913_t->_method_to_str())))) {
		return jule::new_ref<_151290fd0_Data>();
	}
	if (_86834_d->_method_is_const()) {
		{
			if (!((_86834_d->_field_constant->_method_is_f64()))) { goto _case_end_5686304560; }
			_case_begin_5686304560:;
			{
				_86834_d->_field_constant->_method_set_f64(static_cast<jule::F64>((+(_86834_d->_field_constant->_method_read_f64()))));
			}
			goto _match_end_5686304352;
			_case_end_5686304560:;
			if (!((_86834_d->_field_constant->_method_is_i64()))) { goto _case_end_5686304688; }
			_case_begin_5686304688:;
			{
				_86834_d->_field_constant->_method_set_f64(static_cast<jule::F64>((+(_86834_d->_field_constant->_method_as_f64()))));
			}
			goto _match_end_5686304352;
			_case_end_5686304688:;
			if (!((_86834_d->_field_constant->_method_is_u64()))) { goto _case_end_5686304816; }
			_case_begin_5686304816:;
			{
				_86834_d->_field_constant->_method_set_f64(static_cast<jule::F64>((+(_86834_d->_field_constant->_method_as_f64()))));
			}
			goto _match_end_5686304352;
			_case_end_5686304816:;
			_match_end_5686304352:;
		}
		_151290fd0_normalize_type(_86834_d);
	}
	_86834_d->_field_lvalue=false;
	_86834_d->_field_model=jule::Any(jule::new_struct<_150f25dd0_UnaryExprModel>(new( std::nothrow ) _150f25dd0_UnaryExprModel(_86834_d->_field_model,jule::Str("+", 1))));
	return _86834_d;
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_eval_unary_caret(jule::Ref<_151290fd0_Data> _89135_d) {
	jule::Ref<_15177b070_Prim> _89213_t = _89135_d->_field_kind->_method_prim();
	if ((!(jule::real(_89213_t))) || (!(_1519b1410_is_int(_89213_t->_method_to_str())))) {
		return jule::new_ref<_151290fd0_Data>();
	}
	if (_89135_d->_method_is_const()) {
		{
			if (!((_89135_d->_field_constant->_method_is_i64()))) { goto _case_end_5686321904; }
			_case_begin_5686321904:;
			{
				_89135_d->_field_constant->_method_set_i64(static_cast<jule::I64>((~(_89135_d->_field_constant->_method_read_i64()))));
			}
			goto _match_end_5686321712;
			_case_end_5686321904:;
			if (!((_89135_d->_field_constant->_method_is_u64()))) { goto _case_end_5686322032; }
			_case_begin_5686322032:;
			{
				_89135_d->_field_constant->_method_set_u64(static_cast<jule::U64>((~(_89135_d->_field_constant->_method_read_u64()))));
			}
			goto _match_end_5686321712;
			_case_end_5686322032:;
			_match_end_5686321712:;
		}
	}
	_89135_d->_field_lvalue=false;
	_89135_d->_field_model=jule::Any(jule::new_struct<_150f25dd0_UnaryExprModel>(new( std::nothrow ) _150f25dd0_UnaryExprModel(_89135_d->_field_model,jule::Str("^", 1))));
	return _89135_d;
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_eval_unary_excl(jule::Ref<_151290fd0_Data> _91534_d) {
	jule::Ref<_15177b070_Prim> _91613_t = _91534_d->_field_kind->_method_prim();
	if ((!(jule::real(_91613_t))) || (!(_91613_t->_method_is_bool()))) {
		return jule::new_ref<_151290fd0_Data>();
	}
	if (_91534_d->_method_is_const()) {
		{
			if (!((_91534_d->_field_constant->_method_is_bool()))) { goto _case_end_5686335568; }
			_case_begin_5686335568:;
			{
				_91534_d->_field_constant->_method_set_bool((!(_91534_d->_field_constant->_method_read_bool())));
			}
			goto _match_end_5686335392;
			_case_end_5686335568:;
			_match_end_5686335392:;
		}
	}
	_91534_d->_field_lvalue=false;
	_91534_d->_field_model=jule::Any(jule::new_struct<_150f25dd0_UnaryExprModel>(new( std::nothrow ) _150f25dd0_UnaryExprModel(_91534_d->_field_model,jule::Str("!", 1))));
	return _91534_d;
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_eval_unary_star(jule::Ref<_151290fd0_Data> _93638_d,_150640f50_Token _93648_op) {
	if ((!((*this)._method_is_unsafe()))) {
		(*this)._method_push_err(_93648_op,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_15177b070_Ptr> _94117_t = _93638_d->_field_kind->_method_ptr();
	if ((!(jule::real(_94117_t))) || _94117_t->_method_is_unsafe()) {
		return jule::new_ref<_151290fd0_Data>();
	}
	jule::drop(_93638_d->_field_constant);
	_93638_d->_field_lvalue=true;
	_93638_d->_field_kind=_94117_t->_field_elem;
	_93638_d->_field_model=jule::Any(jule::new_struct<_150f25dd0_UnaryExprModel>(new( std::nothrow ) _150f25dd0_UnaryExprModel(_93638_d->_field_model,jule::Str("*", 1))));
	return _93638_d;
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_eval_unary_amper(jule::Ref<_151290fd0_Data> _95535_d) {
	{
		auto _match_expr{ _95535_d->_field_model };
		if (!(_match_expr.type_is<jule::Ref<_150f25dd0_StructLitExprModel>>())) { goto _case_end_5686358528; }
		_case_begin_5686358528:;
		{
			jule::Ref<_150f25dd0_StructLitExprModel> _95821_lit = _95535_d->_field_model.operator jule::Ref<_150f25dd0_StructLitExprModel>();
			_95535_d->_field_kind=jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_15177b070_Ref>(new( std::nothrow ) _15177b070_Ref(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_95821_lit->_field_strct))))));
			_95535_d->_field_model=jule::Any(jule::new_struct<_150f25dd0_AllocStructLitExprModel>(new( std::nothrow ) _150f25dd0_AllocStructLitExprModel(_95821_lit)));
		}
		goto _match_end_5686354160;
		_case_end_5686358528:;
		_case_begin_5686354816:;
		{
			{
				if (!((jule::real(_95535_d->_field_kind->_method_ref())))) { goto _case_end_5686357552; }
				_case_begin_5686357552:;
				{
					_95535_d->_field_kind=jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_15177b070_Ptr>(new( std::nothrow ) _15177b070_Ptr(_95535_d->_field_kind->_method_ref()->_field_elem->_method_clone()))));
					_95535_d->_field_model=jule::Any(jule::new_struct<_150f25dd0_GetRefPtrExprModel>(new( std::nothrow ) _150f25dd0_GetRefPtrExprModel(_95535_d->_field_model)));
				}
				goto _match_end_5686355984;
				_case_end_5686357552:;
				if (!((_15177b070_can_get_ptr(_95535_d)))) { goto _case_end_5686357136; }
				_case_begin_5686357136:;
				{
					_95535_d->_field_kind=jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_15177b070_Ptr>(new( std::nothrow ) _15177b070_Ptr(_95535_d->_field_kind->_method_clone()))));
					_95535_d->_field_model=jule::Any(jule::new_struct<_150f25dd0_UnaryExprModel>(new( std::nothrow ) _150f25dd0_UnaryExprModel(_95535_d->_field_model,jule::Str("&", 1))));
				}
				goto _match_end_5686355984;
				_case_end_5686357136:;
				_case_begin_5686356128:;
				{
					jule::drop(_95535_d);
				}
				goto _match_end_5686355984;
				_case_end_5686356128:;
				_match_end_5686355984:;
			}
		}
		goto _match_end_5686354160;
		_case_end_5686354816:;
		_match_end_5686354160:;
	}
	if (jule::real(_95535_d)) {
		jule::drop(_95535_d->_field_constant);
		_95535_d->_field_lvalue=true;
		_95535_d->_field_mutable=true;
	}
	return _95535_d;
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_eval_unary_type_decl(jule::Ref<_151290fd0_Data> _100243_d,jule::Ref<_1506406d0_UnaryExpr> _100253_u) {
	_15177b070_TypeChecker _100317_tc = _15177b070_TypeChecker((*this)._field_s,(*this)._field_lookup,jule::Ref<_15177b070_Referencer>(),_100253_u->_field_op,jule::Slice<jule::Ref<_1506406d0_GenericDecl>>(),jule::Slice<jule::Ref<_15177b070_TypeAlias>>(),jule::Bool());
	{
		auto _match_expr{ _100253_u->_field_op._field_kind };
		if (!((jule::Str("*", 1)) == _match_expr)) { goto _case_end_5686381360; }
		_case_begin_5686381360:;
		{
			_100243_d->_field_kind=jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_100317_tc._method_build_ptr_from_type(_100243_d->_field_kind)));
		}
		goto _match_end_5686375056;
		_case_end_5686381360:;
		if (!((jule::Str("&", 1)) == _match_expr)) { goto _case_end_5686381920; }
		_case_begin_5686381920:;
		{
			_100243_d->_field_kind=jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_100317_tc._method_build_ref_from_type(_100243_d->_field_kind)));
		}
		goto _match_end_5686375056;
		_case_end_5686381920:;
		_case_begin_5686377488:;
		{
			(*this)._method_push_err(_100253_u->_field_op,jule::Str("invalid expression for unary @ operator", 39),jule::Slice<jule::Any>({jule::Any(_100253_u->_field_op._field_kind)}));
			return jule::new_ref<_151290fd0_Data>();
		}
		goto _match_end_5686375056;
		_case_end_5686377488:;
		_match_end_5686375056:;
	}
	_100243_d->_field_decl=true;
	return _100243_d;
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_eval_unary(jule::Ref<_1506406d0_UnaryExpr> _102534_u) {
	jule::Ref<_15177b070_TypeKind> _102617_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_102617_prefix;
	});
	jule::Ref<_151290fd0_Data> _103017_d = this->self->_method_eval_expr_kind(_102534_u->_field_expr);
	if ((!(jule::real(_103017_d)))) {
		return jule::new_ref<_151290fd0_Data>();
	}
	if (_103017_d->_field_decl) {
		return this->self->_method_eval_unary_type_decl(_103017_d,_102534_u);
	}
	jule::Ref<_15177b070_TypeKind> _103917_cast_kind = _103017_d->_field_cast_kind;
	{
		auto _match_expr{ _102534_u->_field_op._field_kind };
		if (!((jule::Str("-", 1)) == _match_expr)) { goto _case_end_5686399024; }
		_case_begin_5686399024:;
		{
			_103017_d=this->self->_method_eval_unary_minus(_103017_d);
		}
		goto _match_end_5686396640;
		_case_end_5686399024:;
		if (!((jule::Str("+", 1)) == _match_expr)) { goto _case_end_5686398656; }
		_case_begin_5686398656:;
		{
			_103017_d=this->self->_method_eval_unary_plus(_103017_d);
		}
		goto _match_end_5686396640;
		_case_end_5686398656:;
		if (!((jule::Str("^", 1)) == _match_expr)) { goto _case_end_5686398768; }
		_case_begin_5686398768:;
		{
			_103017_d=this->self->_method_eval_unary_caret(_103017_d);
		}
		goto _match_end_5686396640;
		_case_end_5686398768:;
		if (!((jule::Str("!", 1)) == _match_expr)) { goto _case_end_5686398064; }
		_case_begin_5686398064:;
		{
			_103017_d=this->self->_method_eval_unary_excl(_103017_d);
		}
		goto _match_end_5686396640;
		_case_end_5686398064:;
		if (!((jule::Str("*", 1)) == _match_expr)) { goto _case_end_5686398176; }
		_case_begin_5686398176:;
		{
			_103017_d=this->self->_method_eval_unary_star(_103017_d,_102534_u->_field_op);
		}
		goto _match_end_5686396640;
		_case_end_5686398176:;
		if (!((jule::Str("&", 1)) == _match_expr)) { goto _case_end_5686398288; }
		_case_begin_5686398288:;
		{
			_103017_d=this->self->_method_eval_unary_amper(_103017_d);
		}
		goto _match_end_5686396640;
		_case_end_5686398288:;
		_case_begin_5686393744:;
		{
			jule::drop(_103017_d);
		}
		goto _match_end_5686396640;
		_case_end_5686393744:;
		_match_end_5686396640:;
	}
	if ((!(jule::real(_103017_d)))) {
		this->self->_method_push_err(_102534_u->_field_op,jule::Str("invalid expression for unary @ operator", 39),jule::Slice<jule::Any>({jule::Any(_102534_u->_field_op._field_kind)}));
	} else if (_103017_d->_method_is_const()) {
		_103017_d->_field_model=jule::Any(_103017_d->_field_constant);
	} else if (jule::real(_103917_cast_kind)) {
		_103017_d->_field_cast_kind=_103917_cast_kind;
		_151290fd0_apply_cast_kind(_103017_d);
	}
	return _103017_d;
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_eval_variadic(jule::Ref<_1506406d0_VariadicExpr> _106237_v) {
	jule::Ref<_15177b070_TypeKind> _106317_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_106317_prefix;
	});
	jule::Ref<_151290fd0_Data> _106717_d = this->self->_method_eval_expr_kind(_106237_v->_field_expr);
	if ((!(jule::real(_106717_d)))) {
		return jule::new_ref<_151290fd0_Data>();
	}
	if (jule::real(_106717_d->_field_kind->_method_ref())) {
		_106717_d->_field_kind=_106717_d->_field_kind->_method_ref()->_field_elem;
		_106717_d->_field_model=jule::Any(jule::new_struct<_150f25dd0_ExplicitDerefExprModel>(new( std::nothrow ) _150f25dd0_ExplicitDerefExprModel(_106717_d->_field_model)));
	}
	if ((!(_15177b070_is_variadicable(_106717_d->_field_kind)))) {
		this->self->_method_push_err(_106237_v->_field_token,jule::Str("@ data-type is not variadicable", 31),jule::Slice<jule::Any>({jule::Any(_106717_d->_field_kind->_method_to_str())}));
		return jule::new_ref<_151290fd0_Data>();
	}
	_106717_d->_field_variadiced=true;
	_106717_d->_field_kind=_106717_d->_field_kind->_method_slc()->_field_elem;
	_106717_d->_field_kind->_field_variadic=true;
	return _106717_d;
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_eval_unsafe(jule::Ref<_1506406d0_UnsafeExpr> _109035_u) {
	jule::Bool _109113_unsafety = this->self->_field_unsafety;
	this->self->_field_unsafety=true;
	jule::Ref<_151290fd0_Data> _109417_d = this->self->_method_eval_expr_kind(_109035_u->_field_expr);
	this->self->_field_unsafety=_109113_unsafety;
	return _109417_d;
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_eval_arr(jule::Ref<_1506406d0_SliceExpr> _110132_s) {
	jule::Ref<_15177b070_Arr> _110317_pt = this->self->_field_prefix->_method_arr();
	jule::Ref<_15177b070_Arr> _110517_arr = jule::new_struct<_15177b070_Arr>(new( std::nothrow ) _15177b070_Arr(false,0LL,_110317_pt->_field_elem));
	if (_110317_pt->_field_auto) {
		_110517_arr->_field_n=static_cast<jule::I64>(_110132_s->_field_elems.len());
	} else {
		_110517_arr->_field_n=static_cast<jule::I64>(_110132_s->_field_elems.len());
		if (_110517_arr->_field_n > _110317_pt->_field_n) {
			this->self->_method_push_err(_110132_s->_field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>({}));
		} else if (_110517_arr->_field_n < _110317_pt->_field_n) {
			_110517_arr->_field_n=_110317_pt->_field_n;
		}
	}
	jule::Ref<_150f25dd0_ArrayExprModel> _112217_model = jule::new_struct<_150f25dd0_ArrayExprModel>(new( std::nothrow ) _150f25dd0_ArrayExprModel(_110517_arr,jule::Slice<jule::Any>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_110132_s->_field_elems.len())))));
	jule::Ref<_15177b070_TypeKind> _112717_prefix = this->self->_field_prefix;
	this->self->_field_prefix=_110517_arr->_field_elem;
	{
		auto __julec_range_expr = _110132_s->_field_elems;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _151290fd0_i = 0;
			jule::Any _151290fd0_elem = *__julec_range_begin;
			_iter_begin_5686468096:;
			{
				jule::Ref<_151290fd0_Data> _113021_d = this->self->_method_eval_expr_kind(_151290fd0_elem);
				if ((!(jule::real(_113021_d)))) {
					goto _iter_next_5686468096;
				}
				this->self->_field_s->_method_check_assign_type(_110517_arr->_field_elem,_113021_d,_110132_s->_field_token,true);
				_112217_model->_field_elems[static_cast<jule::Int>(_151290fd0_i)]=_113021_d->_field_model;
			}
			_iter_next_5686468096:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_151290fd0_i; _151290fd0_elem = *__julec_range_begin; goto _iter_begin_5686468096; }
			_iter_end_5686468096:;
		}
	}
	this->self->_field_prefix=_112717_prefix;
	return jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_110517_arr)),jule::Ref<_15177b070_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_112217_model),jule::Bool(),jule::Ref<_15199b440_Const>()));
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_eval_exp_slc(jule::Ref<_1506406d0_SliceExpr> _114736_s,jule::Ref<_15177b070_TypeKind> _114751_elem_type) {
	jule::Ref<_15177b070_Slc> _114817_slc = jule::new_struct<_15177b070_Slc>(new( std::nothrow ) _15177b070_Slc(_114751_elem_type));
	jule::Ref<_150f25dd0_SliceExprModel> _115217_model = jule::new_struct<_150f25dd0_SliceExprModel>(new( std::nothrow ) _150f25dd0_SliceExprModel(_114751_elem_type,jule::Slice<jule::Any>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_114736_s->_field_elems.len())))));
	jule::Ref<_15177b070_TypeKind> _115717_prefix = this->self->_field_prefix;
	this->self->_field_prefix=_114817_slc->_field_elem;
	{
		auto __julec_range_expr = _114736_s->_field_elems;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _151290fd0_i = 0;
			jule::Any _151290fd0_elem = *__julec_range_begin;
			_iter_begin_5686486672:;
			{
				jule::Ref<_151290fd0_Data> _116021_d = this->self->_method_eval_expr_kind(_151290fd0_elem);
				if ((!(jule::real(_116021_d)))) {
					goto _iter_next_5686486672;
				}
				this->self->_field_s->_method_check_assign_type(_114817_slc->_field_elem,_116021_d,_114736_s->_field_token,true);
				_115217_model->_field_elems[static_cast<jule::Int>(_151290fd0_i)]=_116021_d->_field_model;
			}
			_iter_next_5686486672:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_151290fd0_i; _151290fd0_elem = *__julec_range_begin; goto _iter_begin_5686486672; }
			_iter_end_5686486672:;
		}
	}
	this->self->_field_prefix=_115717_prefix;
	return jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_114817_slc)),jule::Ref<_15177b070_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_115217_model),jule::Bool(),jule::Ref<_15199b440_Const>()));
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_eval_slice_expr(jule::Ref<_1506406d0_SliceExpr> _117739_s) {
	if (jule::real(this->self->_field_prefix)) {
		{
			if (!((jule::real(this->self->_field_prefix->_method_arr())))) { goto _case_end_5686500896; }
			_case_begin_5686500896:;
			{
				return this->self->_method_eval_arr(_117739_s);
			}
			goto _match_end_5686500704;
			_case_end_5686500896:;
			if (!((jule::real(this->self->_field_prefix->_method_slc())))) { goto _case_end_5686501024; }
			_case_begin_5686501024:;
			{
				jule::Ref<_15177b070_Slc> _118425_pt = this->self->_field_prefix->_method_slc();
				return this->self->_method_eval_exp_slc(_117739_s,_118425_pt->_field_elem);
			}
			goto _match_end_5686500704;
			_case_end_5686501024:;
			_match_end_5686500704:;
		}
	}
	jule::Ref<_15177b070_TypeKind> _118917_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	if (_117739_s->_field_elems.len() == 0LL) {
		this->self->_method_push_err(_117739_s->_field_token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>({}));
		return jule::new_ref<_151290fd0_Data>();
	}
	jule::Ref<_151290fd0_Data> _119717_first_elem = this->self->_method_eval_expr_kind(_117739_s->_field_elems[0LL]);
	if ((!(jule::real(_119717_first_elem)))) {
		return jule::new_ref<_151290fd0_Data>();
	}
	jule::Ref<_151290fd0_Data> _120217_d = this->self->_method_eval_exp_slc(_117739_s,_119717_first_elem->_field_kind);
	this->self->_field_prefix=_118917_prefix;
	return _120217_d;
}



inline void _151290fd0_Eval::_method_check_integer_indexing_by_data(jule::Ref<_151290fd0_Data> _120853_d,_150640f50_Token _120863_token) {
	jule::Str _120913_err_key = _151290fd0_check_data_for_integer_indexing(_120853_d);
	if (_120913_err_key != jule::Str("", 0)) {
		(*this)._method_push_err(_120863_token,_120913_err_key,jule::Slice<jule::Any>({}));
	}
}



inline void _151290fd0_Eval::_method_indexing_ptr(jule::Ref<_151290fd0_Data> _121535_d,jule::Ref<_151290fd0_Data> _121549_index,jule::Ref<_1506406d0_IndexingExpr> _121563_i) {
	(*this)._method_check_integer_indexing_by_data(_121549_index,_121563_i->_field_token);
	jule::Ref<_15177b070_Ptr> _121817_ptr = _121535_d->_field_kind->_method_ptr();
	{
		if (!((_121817_ptr->_method_is_unsafe()))) { goto _case_end_5686526560; }
		_case_begin_5686526560:;
		{
			(*this)._method_push_err(_121563_i->_field_token,jule::Str("unsafe pointers not supports indexing", 37),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_5686526384;
		_case_end_5686526560:;
		if (!(((!((*this)._method_is_unsafe()))))) { goto _case_end_5686526688; }
		_case_begin_5686526688:;
		{
			(*this)._method_push_err(_121563_i->_field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>({}));
		}
		goto _match_end_5686526384;
		_case_end_5686526688:;
		_match_end_5686526384:;
	}
	_121535_d->_field_kind=_121817_ptr->_field_elem->_method_clone();
}



inline void _151290fd0_Eval::_method_indexing_arr(jule::Ref<_151290fd0_Data> _123135_d,jule::Ref<_151290fd0_Data> _123149_index,jule::Ref<_1506406d0_IndexingExpr> _123163_i) {
	jule::Ref<_15177b070_Arr> _123217_arr = _123135_d->_field_kind->_method_arr();
	_123135_d->_field_kind=_123217_arr->_field_elem->_method_clone();
	(*this)._method_check_integer_indexing_by_data(_123149_index,_123163_i->_field_token);
	if (_123149_index->_method_is_const() && (_123149_index->_field_constant->_method_as_f64() >= _123217_arr->_field_n)) {
		(*this)._method_push_err(_123163_i->_field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>({}));
	}
}



inline void _151290fd0_Eval::_method_indexing_slc(jule::Ref<_151290fd0_Data> _124035_d,jule::Ref<_151290fd0_Data> _124048_index,jule::Ref<_1506406d0_IndexingExpr> _124062_i) {
	jule::Ref<_15177b070_Slc> _124117_slc = _124035_d->_field_kind->_method_slc();
	_124035_d->_field_kind=_124117_slc->_field_elem->_method_clone();
	(*this)._method_check_integer_indexing_by_data(_124048_index,_124062_i->_field_token);
}



inline void _151290fd0_Eval::_method_indexing_map(jule::Ref<_151290fd0_Data> _124635_d,jule::Ref<_151290fd0_Data> _124649_index,jule::Ref<_1506406d0_IndexingExpr> _124667_i) {
	if ((!(jule::real(_124649_index)))) {
		return;
	}
	jule::Ref<_15177b070_Map> _125117_m = _124635_d->_field_kind->_method_map();
	_1510d19a0_AssignTypeChecker _125217_atc = _1510d19a0_AssignTypeChecker((*this)._field_s,_125117_m->_field_key,_124649_index,_124667_i->_field_token,true);
	_125217_atc._method_check();
	_124635_d->_field_kind=_125117_m->_field_val->_method_clone();
}



inline void _151290fd0_Eval::_method_indexing_str(jule::Ref<_151290fd0_Data> _126435_d,jule::Ref<_151290fd0_Data> _126449_index,jule::Ref<_1506406d0_IndexingExpr> _126463_i) {
	
	_126435_d->_field_kind->_field_kind=_15177b070_build_prim_type(jule::Str("u8", 2));
	if ((!(jule::real(_126449_index)))) {
		return;
	}
	(*this)._method_check_integer_indexing_by_data(_126449_index,_126463_i->_field_token);
	if ((!(_126449_index->_method_is_const()))) {
		jule::drop(_126435_d->_field_constant);
		return;
	}
	if (_126435_d->_method_is_const()) {
		_150640f50_Token _128017_error_token = _126463_i->_field_token;
		jule::I64 _128117_i = _126449_index->_field_constant->_method_as_i64();
		jule::Str _128217_s = _126435_d->_field_constant->_method_read_str();
		if (static_cast<jule::Int>(_128117_i) >= _128217_s.len()) {
			(*this)._method_push_err(_128017_error_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>({}));
		} else {
			_126435_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_128217_s[static_cast<jule::Int>(_128117_i)]));
		}
	}
}



inline void _151290fd0_Eval::_method_to_indexing(jule::Ref<_151290fd0_Data> _129134_d,jule::Ref<_151290fd0_Data> _129148_index,jule::Ref<_1506406d0_IndexingExpr> _129166_i) {
	{
		if (!((jule::real(_129134_d->_field_kind->_method_ptr())))) { goto _case_end_5686584800; }
		_case_begin_5686584800:;
		{
			(*this)._method_indexing_ptr(_129134_d,_129148_index,_129166_i);
			return;
		}
		goto _match_end_5686584592;
		_case_end_5686584800:;
		if (!((jule::real(_129134_d->_field_kind->_method_arr())))) { goto _case_end_5686584928; }
		_case_begin_5686584928:;
		{
			(*this)._method_indexing_arr(_129134_d,_129148_index,_129166_i);
			return;
		}
		goto _match_end_5686584592;
		_case_end_5686584928:;
		if (!((jule::real(_129134_d->_field_kind->_method_slc())))) { goto _case_end_5686585056; }
		_case_begin_5686585056:;
		{
			(*this)._method_indexing_slc(_129134_d,_129148_index,_129166_i);
			return;
		}
		goto _match_end_5686584592;
		_case_end_5686585056:;
		if (!((jule::real(_129134_d->_field_kind->_method_map())))) { goto _case_end_5686585184; }
		_case_begin_5686585184:;
		{
			(*this)._method_indexing_map(_129134_d,_129148_index,_129166_i);
			return;
		}
		goto _match_end_5686584592;
		_case_end_5686585184:;
		if (!((jule::real(_129134_d->_field_kind->_method_prim())))) { goto _case_end_5686585312; }
		_case_begin_5686585312:;
		{
			jule::Ref<_15177b070_Prim> _131017_prim = _129134_d->_field_kind->_method_prim();
			{
				if (!((_131017_prim->_method_is_str()))) { goto _case_end_5686596560; }
				_case_begin_5686596560:;
				{
					(*this)._method_indexing_str(_129134_d,_129148_index,_129166_i);
					return;
				}
				goto _match_end_5686596368;
				_case_end_5686596560:;
				_match_end_5686596368:;
			}
		}
		goto _match_end_5686584592;
		_case_end_5686585312:;
		_match_end_5686584592:;
	}
	(*this)._method_push_err(_129166_i->_field_token,jule::Str("@ data type is not support indexing", 35),jule::Slice<jule::Any>({jule::Any(_129134_d->_field_kind->_method_to_str())}));
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_eval_ident_decl_from_indexing(jule::Ref<_1506406d0_IndexingExpr> _132153_i) {
	{
		auto _match_expr{ _132153_i->_field_expr };
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_IdentExpr>>())) { goto _case_end_5686604384; }
		goto _match_end_5686602944;
		_case_end_5686604384:;
		_case_begin_5686603600:;
		{
			this->self->_method_push_err(_132153_i->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_151290fd0_Data>();
		}
		goto _match_end_5686602944;
		_case_end_5686603600:;
		_match_end_5686602944:;
	}
	jule::Ref<_1506406d0_IdentTypeDecl> _132917_decl = jule::new_struct<_1506406d0_IdentTypeDecl>(new( std::nothrow ) _1506406d0_IdentTypeDecl(_150640f50_Token(),_132153_i->_field_expr.operator jule::Ref<_1506406d0_IdentExpr>()->_field_ident,jule::Bool(),jule::Slice<jule::Ref<_1506406d0_TypeDecl>>()));
	{
		auto _match_expr{ _132153_i->_field_index };
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_UnaryExpr>>())) { goto _case_end_5686611280; }
		_case_begin_5686611280:;
		{
			jule::Ref<_151290fd0_Data> _133721_d = this->self->_method_eval_unary(_132153_i->_field_index.operator jule::Ref<_1506406d0_UnaryExpr>());
			if ((!(_133721_d->_field_decl))) {
				this->self->_method_push_err(_132153_i->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return jule::new_ref<_151290fd0_Data>();
			}
			_132917_decl->_field_generics=jule::append(_132917_decl->_field_generics,jule::Slice<jule::Ref<_1506406d0_TypeDecl>>({jule::new_struct<_1506406d0_TypeDecl>(new( std::nothrow ) _1506406d0_TypeDecl(_150640f50_Token(),jule::Any(_133721_d->_field_kind)))}));
		}
		goto _match_end_5686608272;
		_case_end_5686611280:;
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_TypeDecl>>())) { goto _case_end_5686612128; }
		_case_begin_5686612128:;
		{
			_132917_decl->_field_generics=jule::append(_132917_decl->_field_generics,jule::Slice<jule::Ref<_1506406d0_TypeDecl>>({_132153_i->_field_index.operator jule::Ref<_1506406d0_TypeDecl>()}));
		}
		goto _match_end_5686608272;
		_case_end_5686612128:;
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_IdentExpr>>())) { goto _case_end_5686612240; }
		_case_begin_5686612240:;
		{
			_132917_decl->_field_generics=jule::append(_132917_decl->_field_generics,jule::Slice<jule::Ref<_1506406d0_TypeDecl>>({jule::new_struct<_1506406d0_TypeDecl>(new( std::nothrow ) _1506406d0_TypeDecl(_150640f50_Token(),jule::Any(jule::new_struct<_1506406d0_IdentTypeDecl>(new( std::nothrow ) _1506406d0_IdentTypeDecl(_150640f50_Token(),_132153_i->_field_index.operator jule::Ref<_1506406d0_IdentExpr>()->_field_ident,jule::Bool(),jule::Slice<jule::Ref<_1506406d0_TypeDecl>>())))))}));
		}
		goto _match_end_5686608272;
		_case_end_5686612240:;
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_TupleExpr>>())) { goto _case_end_5686609184; }
		_case_begin_5686609184:;
		{
			{
				auto __julec_range_expr = _132153_i->_field_index.operator jule::Ref<_1506406d0_TupleExpr>()->_field_expr;
				if (__julec_range_expr.begin() != __julec_range_expr.end()) {
					auto __julec_range_begin = __julec_range_expr.begin();
					const auto __julec_range_end = __julec_range_expr.end();
					jule::Ref<_1506406d0_Expr> _151290fd0_expr = *__julec_range_begin;
					_iter_begin_5686626512:;
					{
						{
							auto _match_expr{ _151290fd0_expr->_field_kind };
							if (!(_match_expr.type_is<jule::Ref<_1506406d0_TypeDecl>>())) { goto _case_end_5686627488; }
							_case_begin_5686627488:;
							{
								_132917_decl->_field_generics=jule::append(_132917_decl->_field_generics,jule::Slice<jule::Ref<_1506406d0_TypeDecl>>({_151290fd0_expr->_field_kind.operator jule::Ref<_1506406d0_TypeDecl>()}));
							}
							goto _match_end_5686618336;
							_case_end_5686627488:;
							if (!(_match_expr.type_is<jule::Ref<_1506406d0_IdentExpr>>())) { goto _case_end_5686627600; }
							_case_begin_5686627600:;
							{
								_132917_decl->_field_generics=jule::append(_132917_decl->_field_generics,jule::Slice<jule::Ref<_1506406d0_TypeDecl>>({jule::new_struct<_1506406d0_TypeDecl>(new( std::nothrow ) _1506406d0_TypeDecl(_150640f50_Token(),jule::Any(jule::new_struct<_1506406d0_IdentTypeDecl>(new( std::nothrow ) _1506406d0_IdentTypeDecl(_150640f50_Token(),_151290fd0_expr->_field_kind.operator jule::Ref<_1506406d0_IdentExpr>()->_field_ident,jule::Bool(),jule::Slice<jule::Ref<_1506406d0_TypeDecl>>())))))}));
							}
							goto _match_end_5686618336;
							_case_end_5686627600:;
							_match_end_5686618336:;
						}
					}
					_iter_next_5686626512:;
					++__julec_range_begin;
					if (__julec_range_begin != __julec_range_end) { _151290fd0_expr = *__julec_range_begin; goto _iter_begin_5686626512; }
					_iter_end_5686626512:;
				}
			}
		}
		goto _match_end_5686608272;
		_case_end_5686609184:;
		_case_begin_5686608880:;
		{
			this->self->_method_push_err(_132153_i->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_151290fd0_Data>();
		}
		goto _match_end_5686608272;
		_case_end_5686608880:;
		_match_end_5686608272:;
	}
	return this->self->_method_eval_type(jule::new_struct<_1506406d0_TypeDecl>(new( std::nothrow ) _1506406d0_TypeDecl(_150640f50_Token(),jule::Any(_132917_decl))));
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_eval_indexing(jule::Ref<_1506406d0_IndexingExpr> _137337_i) {
	jule::Ref<_15177b070_TypeKind> _137417_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_137417_prefix;
	});
	jule::Ref<_151290fd0_Data> _137817_d = this->self->_method_eval_expr_kind(_137337_i->_field_expr);
	if ((!(jule::real(_137817_d)))) {
		return jule::new_ref<_151290fd0_Data>();
	}
	if (_137817_d->_field_decl) {
		return this->self->_method_eval_ident_decl_from_indexing(_137337_i);
	}
	jule::Any _138817_expr_model = _137817_d->_field_model;
	jule::Ref<_151290fd0_Data> _138917_index = this->self->_method_eval_expr_kind(_137337_i->_field_index);
	this->self->_method_to_indexing(_137817_d,_138917_index,_137337_i);
	if (jule::real(_138917_index)) {
		if (_137817_d->_method_is_const()) {
			_137817_d->_field_model=jule::Any(_137817_d->_field_constant);
		} else {
			_137817_d->_field_model=jule::Any(jule::new_struct<_150f25dd0_IndexigExprModel>(new( std::nothrow ) _150f25dd0_IndexigExprModel(_138817_expr_model,_138917_index->_field_model)));
		}
	}
	return _137817_d;
}



inline std::tuple<jule::Ref<_151290fd0_Data>,jule::Ref<_151290fd0_Data>> _151290fd0_Eval::_method_eval_slicing_exprs(jule::Ref<_1506406d0_SlicingExpr> _141042_s) {
	jule::Ref<_15177b070_TypeKind> _141117_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_141117_prefix;
	});
	jule::Ref<_151290fd0_Data> _141517_l = jule::new_ref<_151290fd0_Data>();
	jule::Ref<_151290fd0_Data> _141617_r = jule::new_ref<_151290fd0_Data>();
	if (_141042_s->_field_start != nullptr) {
		_141517_l=this->self->_method_eval_expr_kind(_141042_s->_field_start);
		if (jule::real(_141517_l)) {
			this->self->_method_check_integer_indexing_by_data(_141517_l,_141042_s->_field_token);
		} else {
			return std::make_tuple(jule::new_ref<_151290fd0_Data>(),jule::new_ref<_151290fd0_Data>());
		}
	} else {
		_141517_l=jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_15177b070_build_prim_type(jule::Str("i64", 3)))),jule::Ref<_15177b070_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),_15199b440_Const::_static_method_new_i64(0LL)));
		_141517_l->_field_model=jule::Any(_141517_l->_field_constant);
	}
	if (_141042_s->_field_to != nullptr) {
		_141617_r=this->self->_method_eval_expr_kind(_141042_s->_field_to);
		if (jule::real(_141617_r)) {
			this->self->_method_check_integer_indexing_by_data(_141617_r,_141042_s->_field_token);
		} else {
			return std::make_tuple(jule::new_ref<_151290fd0_Data>(),jule::new_ref<_151290fd0_Data>());
		}
	}
	return std::make_tuple(_141517_l,_141617_r);
}



inline void _151290fd0_Eval::_method_slicing_arr(jule::Ref<_151290fd0_Data> _144530_d) {
	jule::Ref<_15177b070_TypeKind> _144617_elem_type = _144530_d->_field_kind->_method_arr()->_field_elem->_method_clone();
	_144530_d->_field_kind->_field_kind=jule::new_struct<_15177b070_Slc>(new( std::nothrow ) _15177b070_Slc(_144617_elem_type));
	_144530_d->_field_lvalue=false;
	_144530_d->_field_mutable=_144530_d->_field_mutable || (!(_15177b070_is_mut(_144617_elem_type)));
}



inline void _151290fd0_Eval::_method_slicing_slc(jule::Ref<_151290fd0_Data> _145630_d) {
	_145630_d->_field_lvalue=false;
}



inline void _151290fd0_Eval::_method_slicing_str(jule::Ref<_151290fd0_Data> _146030_d,jule::Ref<_151290fd0_Data> _146040_l,jule::Ref<_151290fd0_Data> _146050_r) {
	_146030_d->_field_lvalue=false;
	_146030_d->_field_mutable=true;
	if ((!(_146030_d->_method_is_const()))) {
		return;
	}
	if ((!(jule::real(_146040_l))) || (!(jule::real(_146050_r)))) {
		jule::drop(_146030_d->_field_constant);
		return;
	}
	if (_146040_l->_method_is_const() && _146050_r->_method_is_const()) {
		jule::I64 _147317_left = _146040_l->_field_constant->_method_as_i64();
		if (_147317_left < 0LL) {
			return;
		}
		jule::Str _147817_s = _146030_d->_field_constant->_method_read_str();
		jule::I64 _147921_right = 0LL;
		if ((!(jule::real(_146050_r)))) {
			_147921_right=static_cast<jule::I64>(_147817_s.len());
		} else {
			_147921_right=static_cast<jule::I64>(_146050_r->_field_constant->_method_as_i64());
		}
		if (_147317_left > _147921_right) {
			return;
		}
		_146030_d->_field_constant->_method_set_str(_147817_s.slice(static_cast<jule::Int>(_147317_left),static_cast<jule::Int>(_147921_right)));
	} else {
		jule::drop(_146030_d->_field_constant);
	}
}



inline void _151290fd0_Eval::_method_check_slicing(jule::Ref<_151290fd0_Data> _149536_d,jule::Ref<_151290fd0_Data> _149546_l,jule::Ref<_151290fd0_Data> _149556_r,jule::Ref<_1506406d0_SlicingExpr> _149566_s) {
	{
		if (!((jule::real(_149536_d->_field_kind->_method_arr())))) { goto _case_end_5686705056; }
		_case_begin_5686705056:;
		{
			(*this)._method_slicing_arr(_149536_d);
			return;
		}
		goto _match_end_5686704832;
		_case_end_5686705056:;
		if (!((jule::real(_149536_d->_field_kind->_method_slc())))) { goto _case_end_5686705184; }
		_case_begin_5686705184:;
		{
			(*this)._method_slicing_slc(_149536_d);
			return;
		}
		goto _match_end_5686704832;
		_case_end_5686705184:;
		if (!((jule::real(_149536_d->_field_kind->_method_prim())))) { goto _case_end_5686705312; }
		_case_begin_5686705312:;
		{
			jule::Ref<_15177b070_Prim> _150617_prim = _149536_d->_field_kind->_method_prim();
			{
				if (!((_150617_prim->_method_is_str()))) { goto _case_end_5686712752; }
				_case_begin_5686712752:;
				{
					(*this)._method_slicing_str(_149536_d,_149546_l,_149556_r);
					return;
				}
				goto _match_end_5686712560;
				_case_end_5686712752:;
				_match_end_5686712560:;
			}
		}
		goto _match_end_5686704832;
		_case_end_5686705312:;
		_match_end_5686704832:;
	}
	(*this)._method_push_err(_149566_s->_field_token,jule::Str("@ data type is not support slicing", 34),jule::Slice<jule::Any>({jule::Any(_149536_d->_field_kind->_method_to_str())}));
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_eval_slicing(jule::Ref<_1506406d0_SlicingExpr> _151736_s) {
	jule::Ref<_151290fd0_Data> _151817_d = this->self->_method_eval_expr_kind(_151736_s->_field_expr);
	if ((!(jule::real(_151817_d)))) {
		return jule::new_ref<_151290fd0_Data>();
	}
	jule::Ref<_151290fd0_Data> _152318_l;
	jule::Ref<_151290fd0_Data> _152325_r;
	std::tie(_152318_l,_152325_r) = this->self->_method_eval_slicing_exprs(_151736_s);
	if ((!(jule::real(_152318_l)))) {
		return _151817_d;
	}
	this->self->_method_check_slicing(_151817_d,_152318_l,_152325_r,_151736_s);
	jule::drop(_151817_d->_field_cast_kind);
	jule::Ref<_150f25dd0_SlicingExprModel> _153117_model = jule::new_struct<_150f25dd0_SlicingExprModel>(new( std::nothrow ) _150f25dd0_SlicingExprModel(_151817_d->_field_model,_152318_l->_field_model,jule::Any()));
	if (jule::real(_152325_r)) {
		_153117_model->_field_right=_152325_r->_field_model;
	}
	_151817_d->_field_model=jule::Any(_153117_model);
	return _151817_d;
}



inline void _151290fd0_Eval::_method_cast_ptr(jule::Ref<_15177b070_TypeKind> _154427_t,jule::Ref<_151290fd0_Data> _154445_d,_150640f50_Token _154455_error_token) {
	if ((!((*this)._method_is_unsafe()))) {
		(*this)._method_push_err(_154455_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>({}));
		return;
	}
	jule::Ref<_15177b070_Prim> _155013_prim = _154445_d->_field_kind->_method_prim();
	if ((!(jule::real(_154445_d->_field_kind->_method_ptr()))) && ((!(jule::real(_155013_prim))) || (!(_1519b1410_is_int(_155013_prim->_method_to_str()))))) {
		(*this)._method_push_err(_154455_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_154445_d->_field_kind->_method_to_str()),jule::Any(_154427_t->_method_to_str())}));
	}
	jule::drop(_154445_d->_field_constant);
}



inline void _151290fd0_Eval::_method_cast_struct(jule::Ref<_15177b070_TypeKind> _155834_t,jule::Ref<_151290fd0_Data> _155852_d,_150640f50_Token _155862_error_token) {
	jule::Ref<_150f166e0_Trait> _155917_tr = _155852_d->_field_kind->_method_trt();
	if ((!(jule::real(_155917_tr)))) {
		(*this)._method_push_err(_155862_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_155852_d->_field_kind->_method_to_str()),jule::Any(_155834_t->_method_to_str())}));
		return;
	}
	jule::Ref<_150a13110_StructIns> _156517_s = jule::new_ref<_150a13110_StructIns>();
	if (jule::real(_155834_t->_method_ref())) {
		_156517_s=_155834_t->_method_ref()->_field_elem->_method_strct();
	} else {
		_156517_s=_155834_t->_method_strct();
	}
	(*this)._method_push_reference_to_struct(_156517_s);
	if ((!(_156517_s->_field_decl->_method_is_implements(_155917_tr)))) {
		(*this)._method_push_err(_155862_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_155852_d->_field_kind->_method_to_str()),jule::Any(_155834_t->_method_to_str())}));
	}
}



inline void _151290fd0_Eval::_method_cast_ref(jule::Ref<_15177b070_TypeKind> _157931_t,jule::Ref<_151290fd0_Data> _157949_d,_150640f50_Token _157959_error_token) {
	jule::Ref<_15177b070_Ref> _158017_ref = _157931_t->_method_ref();
	if (jule::real(_158017_ref->_field_elem->_method_strct())) {
		(*this)._method_cast_struct(_157931_t,_157949_d,_157959_error_token);
		return;
	}
	(*this)._method_push_err(_157959_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_157949_d->_field_kind->_method_to_str()),jule::Any(_157931_t->_method_to_str())}));
}



inline void _151290fd0_Eval::_method_cast_slc(jule::Ref<_15177b070_TypeKind> _158931_t,jule::Ref<_151290fd0_Data> _158949_d,_150640f50_Token _158959_error_token) {
	if (jule::real(_158949_d->_field_kind->_method_enm())) {
		if ((!(jule::real(_158949_d->_field_kind->_method_enm()->_field_kind->_field_kind->_method_prim()))) || (!(_158949_d->_field_kind->_method_enm()->_field_kind->_field_kind->_method_prim()->_method_is_str()))) {
			(*this)._method_push_err(_158959_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_158949_d->_field_kind->_method_to_str()),jule::Any(_158931_t->_method_to_str())}));
			return;
		}
	} else if ((!(jule::real(_158949_d->_field_kind->_method_prim()))) || (!(_158949_d->_field_kind->_method_prim()->_method_is_str()))) {
		(*this)._method_push_err(_158959_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_158949_d->_field_kind->_method_to_str()),jule::Any(_158931_t->_method_to_str())}));
		return;
	}
	_158931_t=_158931_t->_method_slc()->_field_elem;
	jule::Ref<_15177b070_Prim> _160113_prim = _158931_t->_method_prim();
	if ((!(jule::real(_160113_prim))) || ((!(_160113_prim->_method_is_u8())) && (!(_160113_prim->_method_is_i32())))) {
		(*this)._method_push_err(_158959_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_158949_d->_field_kind->_method_to_str()),jule::Any(_158931_t->_method_to_str())}));
	}
}



inline void _151290fd0_Eval::_method_cast_str(jule::Ref<_151290fd0_Data> _160731_d,_150640f50_Token _160741_error_token) {
	if (jule::real(_160731_d->_field_kind->_method_enm())) {
		jule::Ref<_150f1c930_Enum> _160921_e = _160731_d->_field_kind->_method_enm();
		if (jule::real(_160921_e->_field_kind->_field_kind->_method_prim()) && _160921_e->_field_kind->_field_kind->_method_prim()->_method_is_str()) {
			return;
		}
	}
	if (jule::real(_160731_d->_field_kind->_method_prim())) {
		jule::Ref<_15177b070_Prim> _161617_prim = _160731_d->_field_kind->_method_prim();
		if ((!(_161617_prim->_method_is_u8())) && (!(_161617_prim->_method_is_i32()))) {
			(*this)._method_push_err(_160741_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_160731_d->_field_kind->_method_to_str())}));
		}
		return;
	}
	if ((!(jule::real(_160731_d->_field_kind->_method_slc())))) {
		(*this)._method_push_err(_160741_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_160731_d->_field_kind->_method_to_str())}));
		return;
	}
	jule::Ref<_15177b070_TypeKind> _162817_t = _160731_d->_field_kind->_method_slc()->_field_elem;
	jule::Ref<_15177b070_Prim> _162913_prim = _162817_t->_method_prim();
	if ((!(jule::real(_162913_prim))) || ((!(_162913_prim->_method_is_u8())) && (!(_162913_prim->_method_is_i32())))) {
		(*this)._method_push_err(_160741_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_160731_d->_field_kind->_method_to_str())}));
	}
}



inline void _151290fd0_Eval::_method_cast_int(jule::Ref<_15177b070_TypeKind> _163531_t,jule::Ref<_151290fd0_Data> _163549_d,_150640f50_Token _163559_error_token) {
	if (_163549_d->_method_is_const()) {
		jule::Ref<_15177b070_Prim> _163717_prim = _163531_t->_method_prim();
		{
			if (!((_1519b1410_is_sig_int(_163717_prim->_field_kind)))) { goto _case_end_5687577824; }
			_case_begin_5687577824:;
			{
				_163549_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_163549_d->_field_constant->_method_as_i64()));
			}
			goto _match_end_5687577584;
			_case_end_5687577824:;
			if (!((_1519b1410_is_unsig_int(_163717_prim->_field_kind)))) { goto _case_end_5687577936; }
			_case_begin_5687577936:;
			{
				_163549_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_163549_d->_field_constant->_method_as_u64()));
			}
			goto _match_end_5687577584;
			_case_end_5687577936:;
			_match_end_5687577584:;
		}
	}
	if (jule::real(_163549_d->_field_kind->_method_enm())) {
		jule::Ref<_150f1c930_Enum> _164817_e = _163549_d->_field_kind->_method_enm();
		if (_1519b1410_is_num(_164817_e->_field_kind->_field_kind->_method_to_str())) {
			return;
		}
	}
	if (jule::real(_163549_d->_field_kind->_method_ptr())) {
		jule::Ref<_15177b070_Prim> _165517_prim = _163531_t->_method_prim();
		if (_165517_prim->_method_is_uintptr()) {
		} else if ((!((*this)._method_is_unsafe()))) {
			(*this)._method_push_err(_163559_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>({}));
		} else if (((((!(_165517_prim->_method_is_i32())) && (!(_165517_prim->_method_is_i64()))) && (!(_165517_prim->_method_is_u16()))) && (!(_165517_prim->_method_is_u32()))) && (!(_165517_prim->_method_is_u64()))) {
			(*this)._method_push_err(_163559_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_163549_d->_field_kind->_method_to_str()),jule::Any(_163531_t->_method_to_str())}));
		}
		return;
	}
	jule::Ref<_15177b070_Prim> _166613_prim = _163549_d->_field_kind->_method_prim();
	if (jule::real(_166613_prim) && _1519b1410_is_num(_166613_prim->_method_to_str())) {
		return;
	}
	(*this)._method_push_err(_163559_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_163549_d->_field_kind->_method_to_str()),jule::Any(_163531_t->_method_to_str())}));
}



inline void _151290fd0_Eval::_method_cast_num(jule::Ref<_15177b070_TypeKind> _167431_t,jule::Ref<_151290fd0_Data> _167449_d,_150640f50_Token _167459_error_token) {
	if (_167449_d->_method_is_const()) {
		jule::Ref<_15177b070_Prim> _167617_prim = _167431_t->_method_prim();
		{
			if (!((_1519b1410_is_float(_167617_prim->_field_kind)))) { goto _case_end_5687614192; }
			_case_begin_5687614192:;
			{
				_167449_d->_field_constant->_method_set_f64(static_cast<jule::F64>(_167449_d->_field_constant->_method_as_f64()));
			}
			goto _match_end_5687613936;
			_case_end_5687614192:;
			if (!((_1519b1410_is_sig_int(_167617_prim->_field_kind)))) { goto _case_end_5687614304; }
			_case_begin_5687614304:;
			{
				_167449_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_167449_d->_field_constant->_method_as_i64()));
			}
			goto _match_end_5687613936;
			_case_end_5687614304:;
			if (!((_1519b1410_is_unsig_int(_167617_prim->_field_kind)))) { goto _case_end_5687614416; }
			_case_begin_5687614416:;
			{
				_167449_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_167449_d->_field_constant->_method_as_u64()));
			}
			goto _match_end_5687613936;
			_case_end_5687614416:;
			_match_end_5687613936:;
		}
	}
	if (jule::real(_167449_d->_field_kind->_method_enm())) {
		jule::Ref<_150f1c930_Enum> _169017_e = _167449_d->_field_kind->_method_enm();
		if (_1519b1410_is_num(_169017_e->_field_kind->_field_kind->_method_to_str())) {
			return;
		}
	}
	jule::Ref<_15177b070_Prim> _169613_prim = _167449_d->_field_kind->_method_prim();
	if (jule::real(_169613_prim) && _1519b1410_is_num(_169613_prim->_method_to_str())) {
		return;
	}
	(*this)._method_push_err(_167459_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_167449_d->_field_kind->_method_to_str()),jule::Any(_167431_t->_method_to_str())}));
}



inline void _151290fd0_Eval::_method_cast_prim(jule::Ref<_15177b070_TypeKind> _170432_t,jule::Ref<_151290fd0_Data> _170450_d,_150640f50_Token _170460_error_token) {
	jule::Ref<_15177b070_Prim> _170513_prim = _170432_t->_method_prim();
	{
		if (!((_170513_prim->_method_is_any()))) { goto _case_end_5687637136; }
		goto _match_end_5687636128;
		_case_end_5687637136:;
		if (!((_170513_prim->_method_is_str()))) { goto _case_end_5687636624; }
		_case_begin_5687636624:;
		{
			(*this)._method_cast_str(_170450_d,_170460_error_token);
		}
		goto _match_end_5687636128;
		_case_end_5687636624:;
		if (!((_1519b1410_is_int(_170513_prim->_method_to_str())))) { goto _case_end_5687636736; }
		_case_begin_5687636736:;
		{
			(*this)._method_cast_int(_170432_t,_170450_d,_170460_error_token);
		}
		goto _match_end_5687636128;
		_case_end_5687636736:;
		if (!((_1519b1410_is_num(_170513_prim->_method_to_str())))) { goto _case_end_5687636848; }
		_case_begin_5687636848:;
		{
			(*this)._method_cast_num(_170432_t,_170450_d,_170460_error_token);
		}
		goto _match_end_5687636128;
		_case_end_5687636848:;
		_case_begin_5687636320:;
		{
			(*this)._method_push_err(_170460_error_token,jule::Str("@ data-type not supports casting", 32),jule::Slice<jule::Any>({jule::Any(_170432_t->_method_to_str())}));
		}
		goto _match_end_5687636128;
		_case_end_5687636320:;
		_match_end_5687636128:;
	}
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_eval_cast_by_type_n_data(jule::Ref<_15177b070_TypeKind> _172447_t,jule::Ref<_151290fd0_Data> _172465_d,_150640f50_Token _172475_error_token) {
	{
		if (!((jule::real(_172465_d->_field_kind->_method_prim()) && _172465_d->_field_kind->_method_prim()->_method_is_any()))) { goto _case_end_5687652912; }
		_case_begin_5687652912:;
		{
			if (jule::real(_172447_t->_method_enm())) {
				(*this)._method_push_err(_172475_error_token,jule::Str("enum cannot casted from any type", 32),jule::Slice<jule::Any>({}));
				(*this)._method_push_suggest(jule::Str("try cast to type of enum fields instead of enum", 47),jule::Slice<jule::Any>({}));
			}
		}
		goto _match_end_5687649712;
		_case_end_5687652912:;
		if (!((jule::real(_172447_t->_method_ptr())))) { goto _case_end_5687650128; }
		_case_begin_5687650128:;
		{
			(*this)._method_cast_ptr(_172447_t,_172465_d,_172475_error_token);
		}
		goto _match_end_5687649712;
		_case_end_5687650128:;
		if (!((jule::real(_172447_t->_method_ref())))) { goto _case_end_5687650240; }
		_case_begin_5687650240:;
		{
			(*this)._method_cast_ref(_172447_t,_172465_d,_172475_error_token);
		}
		goto _match_end_5687649712;
		_case_end_5687650240:;
		if (!((jule::real(_172447_t->_method_slc())))) { goto _case_end_5687650352; }
		_case_begin_5687650352:;
		{
			(*this)._method_cast_slc(_172447_t,_172465_d,_172475_error_token);
		}
		goto _match_end_5687649712;
		_case_end_5687650352:;
		if (!((jule::real(_172447_t->_method_strct())))) { goto _case_end_5687653376; }
		_case_begin_5687653376:;
		{
			(*this)._method_cast_struct(_172447_t,_172465_d,_172475_error_token);
		}
		goto _match_end_5687649712;
		_case_end_5687653376:;
		if (!((jule::real(_172447_t->_method_prim())))) { goto _case_end_5687653488; }
		_case_begin_5687653488:;
		{
			(*this)._method_cast_prim(_172447_t,_172465_d,_172475_error_token);
		}
		goto _match_end_5687649712;
		_case_end_5687653488:;
		_case_begin_5687649824:;
		{
			(*this)._method_push_err(_172475_error_token,jule::Str("@ data-type not supports casting", 32),jule::Slice<jule::Any>({jule::Any(_172447_t->_method_to_str())}));
			jule::drop(_172465_d);
		}
		goto _match_end_5687649712;
		_case_end_5687649824:;
		_match_end_5687649712:;
	}
	if ((!(jule::real(_172465_d)))) {
		return jule::new_ref<_151290fd0_Data>();
	}
	_172465_d->_field_mutable=_172465_d->_field_mutable || ((!(_15177b070_is_mut(_172465_d->_field_kind))) && _15177b070_is_mut(_172447_t));
	_172465_d->_field_lvalue=_15177b070_is_lvalue(_172447_t);
	_172465_d->_field_decl=false;
	if (jule::real(_172447_t->_method_prim()) && _172465_d->_method_is_const()) {
		_172465_d->_field_model=jule::Any(_172465_d->_field_constant);
	}
	if ((!(jule::real(_172465_d->_field_kind->_method_enm()))) || (_172465_d->_field_kind->_method_enm()->_field_kind->_field_kind->_method_to_str() != _172447_t->_method_to_str())) {
		_172465_d->_field_cast_kind=_172447_t;
	} else {
		_172465_d->_field_kind=_172447_t;
	}
	return _172465_d;
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_eval_cast(jule::Ref<_1506406d0_CastExpr> _177633_c) {
	jule::Ref<_15177b070_TypeSymbol> _177717_t = _150e75a70_build_type(_177633_c->_field_kind);
	jule::Bool _177813_ok = this->self->_field_s->_method_check_type(_177717_t,this->self->_field_lookup);
	if ((!(_177813_ok))) {
		return jule::new_ref<_151290fd0_Data>();
	}
	jule::Ref<_15177b070_TypeKind> _178317_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_178317_prefix;
	});
	jule::Ref<_151290fd0_Data> _178717_d = this->self->_method_eval_expr_kind(_177633_c->_field_expr);
	if ((!(jule::real(_178717_d)))) {
		return jule::new_ref<_151290fd0_Data>();
	}
	_178717_d=this->self->_method_eval_cast_by_type_n_data(_177717_t->_field_kind,_178717_d,_177633_c->_field_kind->_field_token);
	return _178717_d;
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_eval_ns_selection(jule::Ref<_1506406d0_NsSelectionExpr> _179736_s) {
	jule::Str _179813_path = _15177b070_build_link_path_by_tokens(_179736_s->_field_ns);
	jule::Ref<_150f26340_ImportInfo> _179917_imp = (*this)._field_lookup.get()._method_select_package(jule::Fn<jule::Bool(jule::Ref<_150f26340_ImportInfo>)>([=](jule::Ref<_150f26340_ImportInfo> _179953_p) mutable -> jule::Bool {
		return _179953_p->_field_link_path == _179813_path;
	}));
	if ((!(jule::real(_179917_imp))) || (!(_179917_imp->_method_is_lookupable(jule::Str("self", 4))))) {
		(*this)._method_push_err(_179736_s->_field_ident,jule::Str("namespace not exist: @", 22),jule::Slice<jule::Any>({jule::Any(_179813_path)}));
		return jule::new_ref<_151290fd0_Data>();
	}
	jule::Trait<_1517fbd60_Lookup> _180817_lookup = (*this)._field_lookup;
	(*this)._field_lookup=_179917_imp;
	
	jule::Any _181217_def = (*this)._method_get_def(_179736_s->_field_ident._field_kind,false);
	(*this)._field_lookup=_180817_lookup;
	jule::Ref<_151290fd0_Data> _181517_d = (*this)._method_eval_def(_181217_def,_179736_s->_field_ident);
	return _181517_d;
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_eval_struct_lit_explicit(jule::Ref<_150a13110_StructIns> _182048_s,jule::Slice<jule::Any> _182067_exprs,_150640f50_Token _182086_error_token) {
	jule::Bool _182113_ok = this->self->_field_s->_method_check_generic_quantity(static_cast<jule::I64>(_182048_s->_field_decl->_field_generics.len()),static_cast<jule::I64>(_182048_s->_field_generics.len()),_182086_error_token);
	if ((!(_182113_ok))) {
		return jule::new_ref<_151290fd0_Data>();
	}
	this->self->_method_push_reference_to_struct(_182048_s);
	_1510d19a0_StructLitChecker _182917_slc = _1510d19a0_StructLitChecker(this->self,_182086_error_token,_182048_s,jule::Slice<jule::Ref<_150f25dd0_StructArgExprModel>>());
	_182917_slc._method_check(_182067_exprs);
	return jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_182048_s)),jule::Ref<_15177b070_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_150f25dd0_StructLitExprModel>(new( std::nothrow ) _150f25dd0_StructLitExprModel(_182048_s,_182917_slc._field_args))),jule::Bool(),jule::Ref<_15199b440_Const>()));
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_eval_struct_lit(jule::Ref<_1506406d0_StructLit> _184639_lit) {
	jule::Ref<_15177b070_TypeSymbol> _184717_t = _150e75a70_build_type(_184639_lit->_field_kind);
	jule::Bool _184813_ok = this->self->_field_s->_method_check_type(_184717_t,this->self->_field_lookup);
	if ((!(_184813_ok))) {
		return jule::new_ref<_151290fd0_Data>();
	}
	jule::Ref<_150a13110_StructIns> _185317_s = _184717_t->_field_kind->_method_strct();
	if ((!(jule::real(_185317_s)))) {
		this->self->_method_push_err(_184639_lit->_field_kind->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_151290fd0_Data>();
	}
	return this->self->_method_eval_struct_lit_explicit(_185317_s,_184639_lit->_field_exprs,_184639_lit->_field_kind->_field_token);
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_eval_type(jule::Ref<_1506406d0_TypeDecl> _186232_t) {
	jule::Ref<_15177b070_TypeSymbol> _186317_tk = _150e75a70_build_type(_186232_t);
	jule::Bool _186413_ok = (*this)._field_s->_method_check_type(_186317_tk,(*this)._field_lookup);
	if ((!(_186413_ok))) {
		return jule::new_ref<_151290fd0_Data>();
	}
	return jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(_186317_tk->_field_kind,jule::Ref<_15177b070_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_186317_tk->_field_kind),true,jule::Ref<_15199b440_Const>()));
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_call_type_fn(jule::Ref<_1506406d0_FnCallExpr> _187636_fc,jule::Ref<_151290fd0_Data> _187657_d) {
	if (_187636_fc->_field_generics.len() > 0LL) {
		this->self->_method_push_err(_187636_fc->_field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_187657_d->_field_kind->_method_to_str())}));
	} else if (_187636_fc->_field_args.len() < 1LL) {
		this->self->_method_push_err(_187636_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("v", 1))}));
	} else if (_187636_fc->_field_args.len() > 1LL) {
		this->self->_method_push_err(_187636_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	if (_187636_fc->_field_args.len() > 0LL) {
		jule::Ref<_151290fd0_Data> _188621_arg = this->self->_method_eval_expr_kind(_187636_fc->_field_args[0LL]->_field_kind);
		if (jule::real(_188621_arg)) {
			_187657_d=this->self->_method_eval_cast_by_type_n_data(_187657_d->_field_kind,_188621_arg,_187636_fc->_field_args[0LL]->_field_token);
		}
	}
	_187657_d->_field_decl=false;
	return _187657_d;
}



inline std::tuple<jule::Bool,jule::Bool> _151290fd0_Eval::_method_check_fn_call_generics(jule::Ref<_15081bcd0_FnIns> _189745_f,jule::Ref<_1506406d0_FnCallExpr> _189813_fc) {
	jule::Bool _189842_dynamic_annotation = jule::Bool();
	jule::Bool _189832_ok = jule::Bool();
	{
		if (!((((_189745_f->_field_decl->_field_generics.len() > 0LL) && (_189813_fc->_field_generics.len() == 0LL)) && (_189745_f->_field_params.len() > 0LL)))) { goto _case_end_5687771248; }
		_case_begin_5687771248:;
		{
			_189842_dynamic_annotation=true;
			_189745_f->_field_generics=jule::Slice<jule::Ref<_15177b070_TypeKind>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_189745_f->_field_decl->_field_generics.len())));
			_189832_ok = true;
			_189842_dynamic_annotation = true;
			return std::make_tuple(_189832_ok,_189842_dynamic_annotation);
		}
		goto _match_end_5687765632;
		_case_end_5687771248:;
		if (!(((!((*this)._field_s->_method_check_generic_quantity(static_cast<jule::I64>(_189745_f->_field_decl->_field_generics.len()),static_cast<jule::I64>(_189813_fc->_field_generics.len()),_189813_fc->_field_token)))))) { goto _case_end_5687770816; }
		_case_begin_5687770816:;
		{
			_189832_ok = false;
			_189842_dynamic_annotation = false;
			return std::make_tuple(_189832_ok,_189842_dynamic_annotation);
		}
		goto _match_end_5687765632;
		_case_end_5687770816:;
		_case_begin_5687765792:;
		{
			_189745_f->_field_generics=jule::Slice<jule::Ref<_15177b070_TypeKind>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_189745_f->_field_decl->_field_generics.len())));
			{
				auto __julec_range_expr = _189813_fc->_field_generics;
				if (__julec_range_expr.begin() != __julec_range_expr.end()) {
					auto __julec_range_begin = __julec_range_expr.begin();
					const auto __julec_range_end = __julec_range_expr.end();
					jule::Int _151290fd0_i = 0;
					jule::Ref<_1506406d0_TypeDecl> _151290fd0_g = *__julec_range_begin;
					_iter_begin_5687767232:;
					{
						jule::Ref<_15177b070_TypeSymbol> _191325_k = _150e75a70_build_type(_151290fd0_g);
						jule::Bool _191421_ok = (*this)._field_s->_method_check_type(_191325_k,(*this)._field_lookup);
						if ((!(_191421_ok))) {
							_189832_ok = false;
							_189842_dynamic_annotation = false;
							return std::make_tuple(_189832_ok,_189842_dynamic_annotation);
						}
						_189745_f->_field_generics[static_cast<jule::Int>(_151290fd0_i)]=_191325_k->_field_kind;
					}
					_iter_next_5687767232:;
					++__julec_range_begin;
					if (__julec_range_begin != __julec_range_end) { ++_151290fd0_i; _151290fd0_g = *__julec_range_begin; goto _iter_begin_5687767232; }
					_iter_end_5687767232:;
				}
			}
			_189832_ok = true;
			_189842_dynamic_annotation = false;
			return std::make_tuple(_189832_ok,_189842_dynamic_annotation);
		}
		goto _match_end_5687765632;
		_case_end_5687765792:;
		_match_end_5687765632:;
	}
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_call_builtin_fn(jule::Ref<_1506406d0_FnCallExpr> _192539_fc,jule::Ref<_151290fd0_Data> _192560_d) {
	jule::Ref<_15081bcd0_FnIns> _192617_f = _192560_d->_field_kind->_method_fnc();
	_192560_d=_192617_f->_field_caller(this->self,_192539_fc,_192560_d);
	if ((!(jule::real(_192560_d)))) {
		return jule::new_ref<_151290fd0_Data>();
	}
	_192560_d->_field_mutable=true;
	return _192560_d;
}



inline void _151290fd0_Eval::_method_check_fn_of_concurrent_call(jule::Ref<_15081bcd0_FnIns>& _193747_f,_150640f50_Token _193758_error_token) {
	if ((*this)._method_is_unsafe()) {
		return;
	}
	{
		auto __julec_range_expr = _193747_f->_field_params;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_15081bcd0_ParamIns> _151290fd0_p = *__julec_range_begin;
			_iter_begin_5687800288:;
			{
				if (_151290fd0_p->_field_decl->_field_reference) {
					(*this)._method_push_err(_193758_error_token,jule::Str("concurrent calls does not support functions which is has reference parameter(s)", 79),jule::Slice<jule::Any>({}));
					return;
				}
			}
			_iter_next_5687800288:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _151290fd0_p = *__julec_range_begin; goto _iter_begin_5687800288; }
			_iter_end_5687800288:;
		}
	}
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_call_fn(jule::Ref<_1506406d0_FnCallExpr> _195031_fc,jule::Ref<_151290fd0_Data> _195052_d) {
	jule::Ref<_15081bcd0_FnIns> _195117_f = _195052_d->_field_kind->_method_fnc();
	if (_195117_f->_method_is_builtin()) {
		return this->self->_method_call_builtin_fn(_195031_fc,_195052_d);
	}
	if (_195031_fc->_field_concurrent) {
		this->self->_method_check_fn_of_concurrent_call(_195117_f,_195031_fc->_field_token);
	}
	if ((((!(_195052_d->_field_mutable)) && _195117_f->_field_decl->_method_is_method()) && (!(_195117_f->_field_decl->_field_statically))) && _195117_f->_field_decl->_field_params[0LL]->_field_mutable) {
		this->self->_method_push_err(_195031_fc->_field_token,jule::Str("mutable operation cannot used with immutable define", 51),jule::Slice<jule::Any>({}));
	} else if ((!(this->self->_method_is_unsafe())) && _195117_f->_field_decl->_field_unsafety) {
		this->self->_method_push_err(_195031_fc->_field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>({}));
	}
	jule::Bool _196618_ok;
	jule::Bool _196622_dynamic_annotation;
	std::tie(_196618_ok,_196622_dynamic_annotation) = this->self->_method_check_fn_call_generics(_195117_f,_195031_fc);
	if ((!(_196618_ok))) {
		return jule::new_ref<_151290fd0_Data>();
	}
	jule::Ref<_1510c9150_Sema> _197117_old = this->self->_field_s;
	if (jule::real(_195117_f->_field_decl->_field_owner)) {
		this->self->_field_s=_195117_f->_field_decl->_field_owner->_field_sema;
	}
	__JULE_DEFER({
		if ((_197117_old).alloc != (this->self->_field_s).alloc) {
			_197117_old->_field_errors=jule::append(_197117_old->_field_errors,this->self->_field_s->_field_errors);
		}
		this->self->_field_s=_197117_old;
	});
	if ((!(_196622_dynamic_annotation))) {
		if ((!(_195117_f->_field_reloaded))) {
			jule::Bool _198521_ok = this->self->_field_s->_method_reload_fn_ins_types(_195117_f);
			if ((!(_198521_ok))) {
				return jule::new_ref<_151290fd0_Data>();
			}
			_195117_f->_field_reloaded=true;
		}
	} else {
		this->self->_field_s->_method_build_fn_non_generic_type_kinds(_195117_f);
	}
	_1510d19a0_FnCallArgChecker _199517_fcac = _1510d19a0_FnCallArgChecker(this->self,_195031_fc->_field_args,_195031_fc->_field_token,_195117_f,_196622_dynamic_annotation,jule::Slice<jule::Any>());
	if (jule::real(_195117_f->_field_decl->_field_owner)) {
		std::tie(_197117_old,this->self->_field_s) = std::make_tuple(this->self->_field_s,_197117_old);
		_196618_ok=_199517_fcac._method_check();
		std::tie(_197117_old,this->self->_field_s) = std::make_tuple(this->self->_field_s,_197117_old);
	} else {
		_196618_ok=_199517_fcac._method_check();
	}
	if ((!(_196618_ok)) && _196622_dynamic_annotation) {
		return jule::new_ref<_151290fd0_Data>();
	}
	jule::Bool _201414_is_unique_ins;
	jule::Int _201429_pos;
	std::tie(_201414_is_unique_ins,_201429_pos) = _195117_f->_field_decl->_method_append_instance(_195117_f);
	if ((!(_201414_is_unique_ins))) {
		_195117_f=_195117_f->_field_decl->_field_instances[static_cast<jule::Int>(_201429_pos)];
	}
	jule::Any _201917_call_model = _195052_d->_field_model;
	if (_195117_f->_field_decl->_method_is_void()) {
		_195052_d=_151290fd0_build_void_data();
	} else {
		if (_196622_dynamic_annotation) {
			_196618_ok=this->self->_field_s->_method_reload_fn_ins_types(_195117_f);
			if ((!(_196618_ok))) {
				return jule::new_ref<_151290fd0_Data>();
			}
			_195117_f->_field_reloaded=true;
		}
		_195052_d->_field_kind=_195117_f->_field_result;
		_195052_d->_field_lvalue=_15177b070_is_lvalue(_195117_f->_field_result);
	}
	_195052_d->_field_mutable=true;
	_195052_d->_field_model=jule::Any(jule::new_struct<_150f25dd0_FnCallExprModel>(new( std::nothrow ) _150f25dd0_FnCallExprModel(_195117_f,_195031_fc->_field_concurrent,_201917_call_model,_199517_fcac._field_arg_models)));
	if ((_195117_f->_field_generics.len() > 0LL) && _201414_is_unique_ins) {
		this->self->_field_s->_method_check_fn_ins(_195117_f);
	}
	return _195052_d;
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_eval_fn_call(jule::Ref<_1506406d0_FnCallExpr> _205236_fc) {
	jule::Ref<_15177b070_TypeKind> _205317_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_205317_prefix;
	});
	jule::Ref<_151290fd0_Data> _205717_d = this->self->_method_eval_expr_kind(_205236_fc->_field_expr->_field_kind);
	if ((!(jule::real(_205717_d)))) {
		return jule::new_ref<_151290fd0_Data>();
	}
	if (_205717_d->_field_decl) {
		return this->self->_method_call_type_fn(_205236_fc,_205717_d);
	}
	if ((!(jule::real(_205717_d->_field_kind->_method_fnc())))) {
		this->self->_method_push_err(_205236_fc->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_151290fd0_Data>();
	}
	return this->self->_method_call_fn(_205236_fc,_205717_d);
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_eval_enum_static(jule::Ref<_150f1c930_Enum> _207439_enm,_150640f50_Token _207451_ident) {
	jule::Ref<_151290fd0_Data> _207517_d = jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_207439_enm)),jule::Ref<_15177b070_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),false,jule::Ref<_15199b440_Const>()));
	jule::Ref<_150f1c930_EnumItem> _208217_item = _207439_enm->_method_find_item(_207451_ident._field_kind);
	if ((!(jule::real(_208217_item)))) {
		(*this)._method_push_err(_207451_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_207451_ident._field_kind)}));
	} else {
		_207517_d->_field_constant=jule::new_ref<_15199b440_Const>(_208217_item->_field_value->_field_data->_field_constant.get());
		_207517_d->_field_model=jule::Any(_207517_d->_field_constant);
	}
	return _207517_d;
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_eval_struct_static(jule::Ref<_150a13110_StructIns> _209341_s,_150640f50_Token _209356_ident) {
	
	jule::Ref<_15081bcd0_Fn> _209517_method = _209341_s->_method_find_method(_209356_ident._field_kind,true);
	if ((!(jule::real(_209517_method)))) {
		(*this)._method_push_err(_209356_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_209356_ident._field_kind)}));
		return jule::new_ref<_151290fd0_Data>();
	}
	jule::Ref<_151290fd0_Data> _210117_d = jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::Ref<_15177b070_TypeKind>(),jule::Ref<_15177b070_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),false,jule::Ref<_15199b440_Const>()));
	jule::Ref<_15081bcd0_FnIns> _210817_ins = _209517_method->_method_instance();
	_210817_ins->_field_owner=_209341_s;
	(*this)._method_push_reference_to_fn(_210817_ins);
	_210117_d->_field_model=jule::Any(jule::new_struct<_150f25dd0_StructStaticIdentExprModel>(new( std::nothrow ) _150f25dd0_StructStaticIdentExprModel(_209341_s,_210117_d->_field_model,_210817_ins)));
	_210117_d->_field_kind=jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_210817_ins));
	return _210117_d;
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_eval_trait_sub_ident(jule::Ref<_151290fd0_Data> _212139_d,jule::Ref<_150f166e0_Trait> _212153_trt,_150640f50_Token _212166_ident) {
	jule::Ref<_15081bcd0_Fn> _212217_f = _212153_trt->_method_find_method(_212166_ident._field_kind);
	if ((!(jule::real(_212217_f)))) {
		(*this)._method_push_err(_212166_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_212166_ident._field_kind)}));
		return jule::new_ref<_151290fd0_Data>();
	}
	jule::Any _212817_model = jule::Any(nullptr);
	if ((_212153_trt).alloc == (_1518a9420_BUILTIN_TRAIT_ERROR).alloc) {
		_212817_model=jule::Any(jule::new_struct<_150f25dd0_BuiltinErrorTraitSubIdentExprModel>(new( std::nothrow ) _150f25dd0_BuiltinErrorTraitSubIdentExprModel(_212139_d->_field_model,_212166_ident._field_kind)));
	} else {
		_212817_model=jule::Any(jule::new_struct<_150f25dd0_TraitSubIdentExprModel>(new( std::nothrow ) _150f25dd0_TraitSubIdentExprModel(_212139_d->_field_model,_212166_ident._field_kind)));
	}
	return jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_212217_f->_method_instance())),jule::Ref<_15177b070_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),_212817_model,false,jule::Ref<_15199b440_Const>()));
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_eval_struct_sub_ident(jule::Ref<_151290fd0_Data> _215044_d,jule::Ref<_150a13110_StructIns> _215058_s,jule::Ref<_1506406d0_SubIdentExpr> _215073_si,jule::Bool _215092_ref) {
	jule::Ref<_150a13110_FieldIns> _215117_f = _215058_s->_method_find_field(_215073_si->_field_ident._field_kind);
	if (jule::real(_215117_f)) {
		if ((!((*this)._field_s->_method_is_accessible_define(_215117_f->_field_decl->_field_public,_215117_f->_field_decl->_field_token)))) {
			(*this)._method_push_err(_215073_si->_field_ident,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_215117_f->_field_decl->_field_ident)}));
			(*this)._method_push_suggest(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>({}));
		}
		jule::Ref<_150f25dd0_StructSubIdentExprModel> _215821_model = jule::new_struct<_150f25dd0_StructSubIdentExprModel>(new( std::nothrow ) _150f25dd0_StructSubIdentExprModel(_215044_d->_field_model,_215044_d->_field_kind,jule::Ref<_15081bcd0_FnIns>(),_215117_f));
		_215044_d->_field_model=jule::Any(_215821_model);
		_215044_d->_field_kind=_215117_f->_field_kind->_method_clone();
		if (_215117_f->_field_decl->_field_mutable && (!(_215044_d->_field_mutable))) {
			{
				auto _match_expr{ (*this)._field_lookup };
				if (!(_match_expr.type_is<jule::Ref<_150d29660_ScopeChecker>>())) { goto _case_end_5687929456; }
				_case_begin_5687929456:;
				{
					jule::Ref<_150d29660_ScopeChecker> _217025_scope = (*this)._field_lookup.operator jule::Ref<_150d29660_ScopeChecker>();
					_215044_d->_field_mutable=jule::real(_217025_scope->_field_owner) && ((_217025_scope->_field_owner->_field_owner).alloc == (_215058_s).alloc);
					if (_215044_d->_field_mutable) {
						jule::Ref<_1511317d0_Var> _217333_field = _215821_model->_field_expr.operator jule::Ref<_1511317d0_Var>();
						jule::Ref<_1511317d0_Var> _217433_v = jule::new_struct<_1511317d0_Var>(new( std::nothrow ) _1511317d0_Var(_217333_field->_field_scope,_217333_field->_field_token,_217333_field->_field_ident,_217333_field->_field_cpp_linked,_217333_field->_field_constant,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Str(),_217333_field->_field_kind,_217333_field->_field_value,jule::Ref<_150e75a70_ReferenceStack>(),jule::Slice<jule::Ref<_1506406d0_Directive>>(),jule::Slice<jule::Ref<_1511317d0_Var>>()));
						_217433_v->_field_mutable=true;
						_215821_model->_field_expr=jule::Any(_217433_v);
					}
				}
				goto _match_end_5687927440;
				_case_end_5687929456:;
				_match_end_5687927440:;
			}
		}
		return _215044_d;
	}
	
	jule::Ref<_15081bcd0_Fn> _219317_m = _215058_s->_method_find_method(_215073_si->_field_ident._field_kind,false);
	if ((!(jule::real(_219317_m)))) {
		(*this)._method_push_err(_215073_si->_field_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_215073_si->_field_ident._field_kind)}));
		return jule::new_ref<_151290fd0_Data>();
	}
	if (_219317_m->_field_params[0LL]->_method_is_ref() && (!(_215092_ref))) {
		(*this)._method_push_err(_215073_si->_field_ident,jule::Str("reference method cannot use with non-reference instance", 55),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_15081bcd0_FnIns> _220417_ins = _219317_m->_method_instance();
	_220417_ins->_field_owner=_215058_s;
	(*this)._method_push_reference_to_fn(_220417_ins);
	_215044_d->_field_model=jule::Any(jule::new_struct<_150f25dd0_StructSubIdentExprModel>(new( std::nothrow ) _150f25dd0_StructSubIdentExprModel(_215044_d->_field_model,_215044_d->_field_kind,_220417_ins,jule::Ref<_150a13110_FieldIns>())));
	_215044_d->_field_kind=jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_220417_ins));
	return _215044_d;
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_eval_slice_sub_ident(jule::Ref<_151290fd0_Data> _221643_d,_150640f50_Token _221653_ident) {
	{
		auto _match_expr{ _221653_ident._field_kind };
		if (!((jule::Str("len", 3)) == _match_expr)) { goto _case_end_5687960864; }
		_case_begin_5687960864:;
		{
			return jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_15177b070_build_prim_type(jule::Str("i64", 3)))),jule::Ref<_15177b070_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_150f25dd0_CommonSubIdentExprModel>(new( std::nothrow ) _150f25dd0_CommonSubIdentExprModel(_221643_d->_field_kind,_221643_d->_field_model,jule::Str("len()", 5)))),jule::Bool(),jule::Ref<_15199b440_Const>()));
		}
		goto _match_end_5687956816;
		_case_end_5687960864:;
		if (!((jule::Str("cap", 3)) == _match_expr)) { goto _case_end_5687961424; }
		_case_begin_5687961424:;
		{
			return jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_15177b070_build_prim_type(jule::Str("i64", 3)))),jule::Ref<_15177b070_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_150f25dd0_CommonSubIdentExprModel>(new( std::nothrow ) _150f25dd0_CommonSubIdentExprModel(_221643_d->_field_kind,_221643_d->_field_model,jule::Str("cap()", 5)))),jule::Bool(),jule::Ref<_15199b440_Const>()));
		}
		goto _match_end_5687956816;
		_case_end_5687961424:;
		_case_begin_5687957408:;
		{
			(*this)._method_push_err(_221653_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_221653_ident._field_kind)}));
			return jule::new_ref<_151290fd0_Data>();
		}
		goto _match_end_5687956816;
		_case_end_5687957408:;
		_match_end_5687956816:;
	}
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_eval_array_sub_ident(jule::Ref<_151290fd0_Data> _224643_d,_150640f50_Token _224653_ident) {
	{
		auto _match_expr{ _224653_ident._field_kind };
		if (!((jule::Str("len", 3)) == _match_expr)) { goto _case_end_5687973696; }
		_case_begin_5687973696:;
		{
			jule::Ref<_15199b440_Const> _224921_c = _15199b440_Const::_static_method_new_i64(static_cast<jule::I64>(_224643_d->_field_kind->_method_arr()->_field_n));
			return jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_15177b070_build_prim_type(jule::Str("i64", 3)))),jule::Ref<_15177b070_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_224921_c),jule::Bool(),_224921_c));
		}
		goto _match_end_5687969648;
		_case_end_5687973696:;
		_case_begin_5687970240:;
		{
			(*this)._method_push_err(_224653_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_224653_ident._field_kind)}));
			return jule::new_ref<_151290fd0_Data>();
		}
		goto _match_end_5687969648;
		_case_end_5687970240:;
		_match_end_5687969648:;
	}
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_eval_map_sub_ident(jule::Ref<_151290fd0_Data> _226341_d,_150640f50_Token _226351_ident) {
	{
		auto _match_expr{ _226351_ident._field_kind };
		if (!((jule::Str("len", 3)) == _match_expr)) { goto _case_end_5687985296; }
		_case_begin_5687985296:;
		{
			return jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_15177b070_build_prim_type(jule::Str("i64", 3)))),jule::Ref<_15177b070_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_150f25dd0_CommonSubIdentExprModel>(new( std::nothrow ) _150f25dd0_CommonSubIdentExprModel(_226341_d->_field_kind,_226341_d->_field_model,jule::Str("len()", 5)))),jule::Bool(),jule::Ref<_15199b440_Const>()));
		}
		goto _match_end_5687980688;
		_case_end_5687985296:;
		if (!((jule::Str("clear", 5)) == _match_expr)) { goto _case_end_5687984960; }
		_case_begin_5687984960:;
		{
			return jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_15081bcd0_FnIns>(new( std::nothrow ) _15081bcd0_FnIns(jule::Ref<_150a13110_StructIns>(),jule::Ref<_15081bcd0_Fn>(),jule::Slice<jule::Ref<_15177b070_TypeKind>>(),jule::Slice<jule::Ref<_15081bcd0_ParamIns>>(),jule::Ref<_15177b070_TypeKind>(),jule::Ref<_150d29660_Scope>(),jule::Ref<_150e75a70_ReferenceStack>(),jule::Ref<_150e75a70_ReferenceStack>(),_1518a9420_builtin_caller_common_mut,jule::Bool(),jule::Bool())))),jule::Ref<_15177b070_TypeKind>(),_226341_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_150f25dd0_CommonSubIdentExprModel>(new( std::nothrow ) _150f25dd0_CommonSubIdentExprModel(_226341_d->_field_kind,_226341_d->_field_model,jule::Str("clear", 5)))),jule::Bool(),jule::Ref<_15199b440_Const>()));
		}
		goto _match_end_5687980688;
		_case_end_5687984960:;
		if (!((jule::Str("keys", 4)) == _match_expr)) { goto _case_end_5687985072; }
		_case_begin_5687985072:;
		{
			jule::Ref<_15177b070_Map> _229221_m = _226341_d->_field_kind->_method_map();
			return jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_15081bcd0_FnIns>(new( std::nothrow ) _15081bcd0_FnIns(jule::Ref<_150a13110_StructIns>(),jule::Ref<_15081bcd0_Fn>(),jule::Slice<jule::Ref<_15177b070_TypeKind>>(),jule::Slice<jule::Ref<_15081bcd0_ParamIns>>(),jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_15177b070_Slc>(new( std::nothrow ) _15177b070_Slc(_229221_m->_field_key)))),jule::Ref<_150d29660_Scope>(),jule::Ref<_150e75a70_ReferenceStack>(),jule::Ref<_150e75a70_ReferenceStack>(),_1518a9420_builtin_caller_common_mut,jule::Bool(),jule::Bool())))),jule::Ref<_15177b070_TypeKind>(),_226341_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_150f25dd0_CommonSubIdentExprModel>(new( std::nothrow ) _150f25dd0_CommonSubIdentExprModel(_226341_d->_field_kind,_226341_d->_field_model,jule::Str("keys", 4)))),jule::Bool(),jule::Ref<_15199b440_Const>()));
		}
		goto _match_end_5687980688;
		_case_end_5687985072:;
		if (!((jule::Str("values", 6)) == _match_expr)) { goto _case_end_5687981584; }
		_case_begin_5687981584:;
		{
			jule::Ref<_15177b070_Map> _231321_m = _226341_d->_field_kind->_method_map();
			return jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_15081bcd0_FnIns>(new( std::nothrow ) _15081bcd0_FnIns(jule::Ref<_150a13110_StructIns>(),jule::Ref<_15081bcd0_Fn>(),jule::Slice<jule::Ref<_15177b070_TypeKind>>(),jule::Slice<jule::Ref<_15081bcd0_ParamIns>>(),jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_15177b070_Slc>(new( std::nothrow ) _15177b070_Slc(_231321_m->_field_val)))),jule::Ref<_150d29660_Scope>(),jule::Ref<_150e75a70_ReferenceStack>(),jule::Ref<_150e75a70_ReferenceStack>(),_1518a9420_builtin_caller_common_mut,jule::Bool(),jule::Bool())))),jule::Ref<_15177b070_TypeKind>(),_226341_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_150f25dd0_CommonSubIdentExprModel>(new( std::nothrow ) _150f25dd0_CommonSubIdentExprModel(_226341_d->_field_kind,_226341_d->_field_model,jule::Str("values", 6)))),jule::Bool(),jule::Ref<_15199b440_Const>()));
		}
		goto _match_end_5687980688;
		_case_end_5687981584:;
		if (!((jule::Str("has", 3)) == _match_expr)) { goto _case_end_5687981696; }
		_case_begin_5687981696:;
		{
			jule::Ref<_15177b070_Map> _233421_m = _226341_d->_field_kind->_method_map();
			return jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_15081bcd0_FnIns>(new( std::nothrow ) _15081bcd0_FnIns(jule::Ref<_150a13110_StructIns>(),jule::Ref<_15081bcd0_Fn>(),jule::Slice<jule::Ref<_15177b070_TypeKind>>(),jule::Slice<jule::Ref<_15081bcd0_ParamIns>>({jule::new_struct<_15081bcd0_ParamIns>(new( std::nothrow ) _15081bcd0_ParamIns(jule::new_struct<_15081bcd0_Param>(new( std::nothrow ) _15081bcd0_Param(_150640f50_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_15177b070_TypeSymbol>(),jule::Str("key", 3))),_233421_m->_field_key))}),jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_15177b070_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_150d29660_Scope>(),jule::Ref<_150e75a70_ReferenceStack>(),jule::Ref<_150e75a70_ReferenceStack>(),_1518a9420_builtin_caller_common,jule::Bool(),jule::Bool())))),jule::Ref<_15177b070_TypeKind>(),_226341_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_150f25dd0_CommonSubIdentExprModel>(new( std::nothrow ) _150f25dd0_CommonSubIdentExprModel(_226341_d->_field_kind,_226341_d->_field_model,jule::Str("has", 3)))),jule::Bool(),jule::Ref<_15199b440_Const>()));
		}
		goto _match_end_5687980688;
		_case_end_5687981696:;
		if (!((jule::Str("del", 3)) == _match_expr)) { goto _case_end_5687981808; }
		_case_begin_5687981808:;
		{
			jule::Ref<_15177b070_Map> _235921_m = _226341_d->_field_kind->_method_map();
			return jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_15081bcd0_FnIns>(new( std::nothrow ) _15081bcd0_FnIns(jule::Ref<_150a13110_StructIns>(),jule::Ref<_15081bcd0_Fn>(),jule::Slice<jule::Ref<_15177b070_TypeKind>>(),jule::Slice<jule::Ref<_15081bcd0_ParamIns>>({jule::new_struct<_15081bcd0_ParamIns>(new( std::nothrow ) _15081bcd0_ParamIns(jule::new_struct<_15081bcd0_Param>(new( std::nothrow ) _15081bcd0_Param(_150640f50_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_15177b070_TypeSymbol>(),jule::Str("key", 3))),_235921_m->_field_key))}),jule::Ref<_15177b070_TypeKind>(),jule::Ref<_150d29660_Scope>(),jule::Ref<_150e75a70_ReferenceStack>(),jule::Ref<_150e75a70_ReferenceStack>(),_1518a9420_builtin_caller_common_mut,jule::Bool(),jule::Bool())))),jule::Ref<_15177b070_TypeKind>(),_226341_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_150f25dd0_CommonSubIdentExprModel>(new( std::nothrow ) _150f25dd0_CommonSubIdentExprModel(_226341_d->_field_kind,_226341_d->_field_model,jule::Str("del", 3)))),jule::Bool(),jule::Ref<_15199b440_Const>()));
		}
		goto _match_end_5687980688;
		_case_end_5687981808:;
		_case_begin_5687981280:;
		{
			(*this)._method_push_err(_226351_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_226351_ident._field_kind)}));
			return jule::new_ref<_151290fd0_Data>();
		}
		goto _match_end_5687980688;
		_case_end_5687981280:;
		_match_end_5687980688:;
	}
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_eval_str_sub_ident(jule::Ref<_151290fd0_Data> _238841_d,_150640f50_Token _238851_ident) {
	{
		auto _match_expr{ _238851_ident._field_kind };
		if (!((jule::Str("len", 3)) == _match_expr)) { goto _case_end_5688022272; }
		_case_begin_5688022272:;
		{
			return jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_15177b070_build_prim_type(jule::Str("i64", 3)))),jule::Ref<_15177b070_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_150f25dd0_CommonSubIdentExprModel>(new( std::nothrow ) _150f25dd0_CommonSubIdentExprModel(_238841_d->_field_kind,_238841_d->_field_model,jule::Str("len()", 5)))),jule::Bool(),jule::Ref<_15199b440_Const>()));
		}
		goto _match_end_5688017824;
		_case_end_5688022272:;
		if (!((jule::Str("has_prefix", 10)) == _match_expr)) { goto _case_end_5688021872; }
		_case_begin_5688021872:;
		{
			return jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_15081bcd0_FnIns>(new( std::nothrow ) _15081bcd0_FnIns(jule::Ref<_150a13110_StructIns>(),jule::Ref<_15081bcd0_Fn>(),jule::Slice<jule::Ref<_15177b070_TypeKind>>(),jule::Slice<jule::Ref<_15081bcd0_ParamIns>>({jule::new_struct<_15081bcd0_ParamIns>(new( std::nothrow ) _15081bcd0_ParamIns(jule::new_struct<_15081bcd0_Param>(new( std::nothrow ) _15081bcd0_Param(_150640f50_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_15177b070_TypeSymbol>(),jule::Str("sub", 3))),_238841_d->_field_kind))}),jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_15177b070_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_150d29660_Scope>(),jule::Ref<_150e75a70_ReferenceStack>(),jule::Ref<_150e75a70_ReferenceStack>(),_1518a9420_builtin_caller_common,jule::Bool(),jule::Bool())))),jule::Ref<_15177b070_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_150f25dd0_CommonSubIdentExprModel>(new( std::nothrow ) _150f25dd0_CommonSubIdentExprModel(_238841_d->_field_kind,_238841_d->_field_model,jule::Str("has_prefix", 10)))),jule::Bool(),jule::Ref<_15199b440_Const>()));
		}
		goto _match_end_5688017824;
		_case_end_5688021872:;
		if (!((jule::Str("has_suffix", 10)) == _match_expr)) { goto _case_end_5688022432; }
		_case_begin_5688022432:;
		{
			return jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_15081bcd0_FnIns>(new( std::nothrow ) _15081bcd0_FnIns(jule::Ref<_150a13110_StructIns>(),jule::Ref<_15081bcd0_Fn>(),jule::Slice<jule::Ref<_15177b070_TypeKind>>(),jule::Slice<jule::Ref<_15081bcd0_ParamIns>>({jule::new_struct<_15081bcd0_ParamIns>(new( std::nothrow ) _15081bcd0_ParamIns(jule::new_struct<_15081bcd0_Param>(new( std::nothrow ) _15081bcd0_Param(_150640f50_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_15177b070_TypeSymbol>(),jule::Str("sub", 3))),_238841_d->_field_kind))}),jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_15177b070_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_150d29660_Scope>(),jule::Ref<_150e75a70_ReferenceStack>(),jule::Ref<_150e75a70_ReferenceStack>(),_1518a9420_builtin_caller_common,jule::Bool(),jule::Bool())))),jule::Ref<_15177b070_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_150f25dd0_CommonSubIdentExprModel>(new( std::nothrow ) _150f25dd0_CommonSubIdentExprModel(_238841_d->_field_kind,_238841_d->_field_model,jule::Str("has_suffix", 10)))),jule::Bool(),jule::Ref<_15199b440_Const>()));
		}
		goto _match_end_5688017824;
		_case_end_5688022432:;
		if (!((jule::Str("find", 4)) == _match_expr)) { goto _case_end_5688018720; }
		_case_begin_5688018720:;
		{
			return jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_15081bcd0_FnIns>(new( std::nothrow ) _15081bcd0_FnIns(jule::Ref<_150a13110_StructIns>(),jule::Ref<_15081bcd0_Fn>(),jule::Slice<jule::Ref<_15177b070_TypeKind>>(),jule::Slice<jule::Ref<_15081bcd0_ParamIns>>({jule::new_struct<_15081bcd0_ParamIns>(new( std::nothrow ) _15081bcd0_ParamIns(jule::new_struct<_15081bcd0_Param>(new( std::nothrow ) _15081bcd0_Param(_150640f50_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_15177b070_TypeSymbol>(),jule::Str("sub", 3))),_238841_d->_field_kind))}),jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_15177b070_build_prim_type(jule::Str("int", 3)))),jule::Ref<_150d29660_Scope>(),jule::Ref<_150e75a70_ReferenceStack>(),jule::Ref<_150e75a70_ReferenceStack>(),_1518a9420_builtin_caller_common,jule::Bool(),jule::Bool())))),jule::Ref<_15177b070_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_150f25dd0_CommonSubIdentExprModel>(new( std::nothrow ) _150f25dd0_CommonSubIdentExprModel(_238841_d->_field_kind,_238841_d->_field_model,jule::Str("find", 4)))),jule::Bool(),jule::Ref<_15199b440_Const>()));
		}
		goto _match_end_5688017824;
		_case_end_5688018720:;
		if (!((jule::Str("rfind", 5)) == _match_expr)) { goto _case_end_5688018832; }
		_case_begin_5688018832:;
		{
			return jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_15081bcd0_FnIns>(new( std::nothrow ) _15081bcd0_FnIns(jule::Ref<_150a13110_StructIns>(),jule::Ref<_15081bcd0_Fn>(),jule::Slice<jule::Ref<_15177b070_TypeKind>>(),jule::Slice<jule::Ref<_15081bcd0_ParamIns>>({jule::new_struct<_15081bcd0_ParamIns>(new( std::nothrow ) _15081bcd0_ParamIns(jule::new_struct<_15081bcd0_Param>(new( std::nothrow ) _15081bcd0_Param(_150640f50_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_15177b070_TypeSymbol>(),jule::Str("sub", 3))),_238841_d->_field_kind))}),jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_15177b070_build_prim_type(jule::Str("int", 3)))),jule::Ref<_150d29660_Scope>(),jule::Ref<_150e75a70_ReferenceStack>(),jule::Ref<_150e75a70_ReferenceStack>(),_1518a9420_builtin_caller_common,jule::Bool(),jule::Bool())))),jule::Ref<_15177b070_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_150f25dd0_CommonSubIdentExprModel>(new( std::nothrow ) _150f25dd0_CommonSubIdentExprModel(_238841_d->_field_kind,_238841_d->_field_model,jule::Str("rfind", 5)))),jule::Bool(),jule::Ref<_15199b440_Const>()));
		}
		goto _match_end_5688017824;
		_case_end_5688018832:;
		if (!((jule::Str("trim", 4)) == _match_expr)) { goto _case_end_5688018944; }
		_case_begin_5688018944:;
		{
			return jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_15081bcd0_FnIns>(new( std::nothrow ) _15081bcd0_FnIns(jule::Ref<_150a13110_StructIns>(),jule::Ref<_15081bcd0_Fn>(),jule::Slice<jule::Ref<_15177b070_TypeKind>>(),jule::Slice<jule::Ref<_15081bcd0_ParamIns>>({jule::new_struct<_15081bcd0_ParamIns>(new( std::nothrow ) _15081bcd0_ParamIns(jule::new_struct<_15081bcd0_Param>(new( std::nothrow ) _15081bcd0_Param(_150640f50_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_15177b070_TypeSymbol>(),jule::Str("bytes", 5))),_238841_d->_field_kind))}),_238841_d->_field_kind,jule::Ref<_150d29660_Scope>(),jule::Ref<_150e75a70_ReferenceStack>(),jule::Ref<_150e75a70_ReferenceStack>(),_1518a9420_builtin_caller_common,jule::Bool(),jule::Bool())))),jule::Ref<_15177b070_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_150f25dd0_CommonSubIdentExprModel>(new( std::nothrow ) _150f25dd0_CommonSubIdentExprModel(_238841_d->_field_kind,_238841_d->_field_model,jule::Str("trim", 4)))),jule::Bool(),jule::Ref<_15199b440_Const>()));
		}
		goto _match_end_5688017824;
		_case_end_5688018944:;
		if (!((jule::Str("ltrim", 5)) == _match_expr)) { goto _case_end_5688021264; }
		_case_begin_5688021264:;
		{
			return jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_15081bcd0_FnIns>(new( std::nothrow ) _15081bcd0_FnIns(jule::Ref<_150a13110_StructIns>(),jule::Ref<_15081bcd0_Fn>(),jule::Slice<jule::Ref<_15177b070_TypeKind>>(),jule::Slice<jule::Ref<_15081bcd0_ParamIns>>({jule::new_struct<_15081bcd0_ParamIns>(new( std::nothrow ) _15081bcd0_ParamIns(jule::new_struct<_15081bcd0_Param>(new( std::nothrow ) _15081bcd0_Param(_150640f50_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_15177b070_TypeSymbol>(),jule::Str("bytes", 5))),_238841_d->_field_kind))}),_238841_d->_field_kind,jule::Ref<_150d29660_Scope>(),jule::Ref<_150e75a70_ReferenceStack>(),jule::Ref<_150e75a70_ReferenceStack>(),_1518a9420_builtin_caller_common,jule::Bool(),jule::Bool())))),jule::Ref<_15177b070_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_150f25dd0_CommonSubIdentExprModel>(new( std::nothrow ) _150f25dd0_CommonSubIdentExprModel(_238841_d->_field_kind,_238841_d->_field_model,jule::Str("ltrim", 5)))),jule::Bool(),jule::Ref<_15199b440_Const>()));
		}
		goto _match_end_5688017824;
		_case_end_5688021264:;
		if (!((jule::Str("rtrim", 5)) == _match_expr)) { goto _case_end_5688021376; }
		_case_begin_5688021376:;
		{
			return jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_15081bcd0_FnIns>(new( std::nothrow ) _15081bcd0_FnIns(jule::Ref<_150a13110_StructIns>(),jule::Ref<_15081bcd0_Fn>(),jule::Slice<jule::Ref<_15177b070_TypeKind>>(),jule::Slice<jule::Ref<_15081bcd0_ParamIns>>({jule::new_struct<_15081bcd0_ParamIns>(new( std::nothrow ) _15081bcd0_ParamIns(jule::new_struct<_15081bcd0_Param>(new( std::nothrow ) _15081bcd0_Param(_150640f50_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_15177b070_TypeSymbol>(),jule::Str("bytes", 5))),_238841_d->_field_kind))}),_238841_d->_field_kind,jule::Ref<_150d29660_Scope>(),jule::Ref<_150e75a70_ReferenceStack>(),jule::Ref<_150e75a70_ReferenceStack>(),_1518a9420_builtin_caller_common,jule::Bool(),jule::Bool())))),jule::Ref<_15177b070_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_150f25dd0_CommonSubIdentExprModel>(new( std::nothrow ) _150f25dd0_CommonSubIdentExprModel(_238841_d->_field_kind,_238841_d->_field_model,jule::Str("rtrim", 5)))),jule::Bool(),jule::Ref<_15199b440_Const>()));
		}
		goto _match_end_5688017824;
		_case_end_5688021376:;
		if (!((jule::Str("split", 5)) == _match_expr)) { goto _case_end_5688021488; }
		_case_begin_5688021488:;
		{
			return jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_15081bcd0_FnIns>(new( std::nothrow ) _15081bcd0_FnIns(jule::Ref<_150a13110_StructIns>(),jule::Ref<_15081bcd0_Fn>(),jule::Slice<jule::Ref<_15177b070_TypeKind>>(),jule::Slice<jule::Ref<_15081bcd0_ParamIns>>({jule::new_struct<_15081bcd0_ParamIns>(new( std::nothrow ) _15081bcd0_ParamIns(jule::new_struct<_15081bcd0_Param>(new( std::nothrow ) _15081bcd0_Param(_150640f50_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_15177b070_TypeSymbol>(),jule::Str("sub", 3))),_238841_d->_field_kind)),jule::new_struct<_15081bcd0_ParamIns>(new( std::nothrow ) _15081bcd0_ParamIns(jule::new_struct<_15081bcd0_Param>(new( std::nothrow ) _15081bcd0_Param(_150640f50_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_15177b070_TypeSymbol>(),jule::Str("n", 1))),jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_15177b070_build_prim_type(jule::Str("int", 3))))))}),jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_15177b070_Slc>(new( std::nothrow ) _15177b070_Slc(_238841_d->_field_kind)))),jule::Ref<_150d29660_Scope>(),jule::Ref<_150e75a70_ReferenceStack>(),jule::Ref<_150e75a70_ReferenceStack>(),_1518a9420_builtin_caller_common,jule::Bool(),jule::Bool())))),jule::Ref<_15177b070_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_150f25dd0_CommonSubIdentExprModel>(new( std::nothrow ) _150f25dd0_CommonSubIdentExprModel(_238841_d->_field_kind,_238841_d->_field_model,jule::Str("split", 5)))),jule::Bool(),jule::Ref<_15199b440_Const>()));
		}
		goto _match_end_5688017824;
		_case_end_5688021488:;
		if (!((jule::Str("replace", 7)) == _match_expr)) { goto _case_end_5688021600; }
		_case_begin_5688021600:;
		{
			return jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_15081bcd0_FnIns>(new( std::nothrow ) _15081bcd0_FnIns(jule::Ref<_150a13110_StructIns>(),jule::Ref<_15081bcd0_Fn>(),jule::Slice<jule::Ref<_15177b070_TypeKind>>(),jule::Slice<jule::Ref<_15081bcd0_ParamIns>>({jule::new_struct<_15081bcd0_ParamIns>(new( std::nothrow ) _15081bcd0_ParamIns(jule::new_struct<_15081bcd0_Param>(new( std::nothrow ) _15081bcd0_Param(_150640f50_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_15177b070_TypeSymbol>(),jule::Str("sub", 3))),_238841_d->_field_kind)),jule::new_struct<_15081bcd0_ParamIns>(new( std::nothrow ) _15081bcd0_ParamIns(jule::new_struct<_15081bcd0_Param>(new( std::nothrow ) _15081bcd0_Param(_150640f50_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_15177b070_TypeSymbol>(),jule::Str("new", 3))),_238841_d->_field_kind)),jule::new_struct<_15081bcd0_ParamIns>(new( std::nothrow ) _15081bcd0_ParamIns(jule::new_struct<_15081bcd0_Param>(new( std::nothrow ) _15081bcd0_Param(_150640f50_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_15177b070_TypeSymbol>(),jule::Str("n", 1))),jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_15177b070_build_prim_type(jule::Str("int", 3))))))}),_238841_d->_field_kind,jule::Ref<_150d29660_Scope>(),jule::Ref<_150e75a70_ReferenceStack>(),jule::Ref<_150e75a70_ReferenceStack>(),_1518a9420_builtin_caller_common,jule::Bool(),jule::Bool())))),jule::Ref<_15177b070_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_150f25dd0_CommonSubIdentExprModel>(new( std::nothrow ) _150f25dd0_CommonSubIdentExprModel(_238841_d->_field_kind,_238841_d->_field_model,jule::Str("replace", 7)))),jule::Bool(),jule::Ref<_15199b440_Const>()));
		}
		goto _match_end_5688017824;
		_case_end_5688021600:;
		_case_begin_5688018416:;
		{
			(*this)._method_push_err(_238851_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_238851_ident._field_kind)}));
			return jule::new_ref<_151290fd0_Data>();
		}
		goto _match_end_5688017824;
		_case_end_5688018416:;
		_match_end_5688017824:;
	}
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_eval_int_type_static(_150640f50_Token _263639_ident) {
	
	{
		auto _match_expr{ _263639_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_5688077952; }
		_case_begin_5688077952:;
		{
			jule::Ref<_15199b440_Const> _264121_c = _15199b440_Const::_static_method_new_i64(static_cast<jule::I64>(_15199dfc0_max_of(jule::Str("int", 3))));
			return jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_15177b070_build_prim_type(jule::Str("int", 3)))),jule::Ref<_15177b070_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_264121_c),jule::Bool(),_264121_c));
		}
		goto _match_end_5688072960;
		_case_end_5688077952:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_5688078528; }
		_case_begin_5688078528:;
		{
			jule::Ref<_15199b440_Const> _264921_c = _15199b440_Const::_static_method_new_i64(static_cast<jule::I64>(_15199dfc0_min_of(jule::Str("int", 3))));
			return jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_15177b070_build_prim_type(jule::Str("int", 3)))),jule::Ref<_15177b070_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_264921_c),jule::Bool(),_264921_c));
		}
		goto _match_end_5688072960;
		_case_end_5688078528:;
		_case_begin_5688074208:;
		{
			(*this)._method_push_err(_263639_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("int", 3)),jule::Any(_263639_ident._field_kind)}));
			return jule::new_ref<_151290fd0_Data>();
		}
		goto _match_end_5688072960;
		_case_end_5688074208:;
		_match_end_5688072960:;
	}
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_eval_uint_type_static(_150640f50_Token _266240_ident) {
	
	{
		auto _match_expr{ _266240_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_5688092016; }
		_case_begin_5688092016:;
		{
			jule::Ref<_15199b440_Const> _266721_c = _15199b440_Const::_static_method_new_u64(static_cast<jule::U64>(_15199dfc0_max_of(jule::Str("uint", 4))));
			return jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_15177b070_build_prim_type(jule::Str("uint", 4)))),jule::Ref<_15177b070_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_266721_c),jule::Bool(),_266721_c));
		}
		goto _match_end_5688087024;
		_case_end_5688092016:;
		_case_begin_5688088272:;
		{
			(*this)._method_push_err(_266240_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("uint", 4)),jule::Any(_266240_ident._field_kind)}));
			return jule::new_ref<_151290fd0_Data>();
		}
		goto _match_end_5688087024;
		_case_end_5688088272:;
		_match_end_5688087024:;
	}
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_eval_i8_type_static(_150640f50_Token _268038_ident) {
	
	
	
	{
		auto _match_expr{ _268038_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_5688104944; }
		_case_begin_5688104944:;
		{
			jule::Ref<_15199b440_Const> _268721_c = _15199b440_Const::_static_method_new_i64(127LL);
			return jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_15177b070_build_prim_type(jule::Str("i8", 2)))),jule::Ref<_15177b070_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_268721_c),jule::Bool(),_268721_c));
		}
		goto _match_end_5688099392;
		_case_end_5688104944:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_5688104608; }
		_case_begin_5688104608:;
		{
			jule::Ref<_15199b440_Const> _269521_c = _15199b440_Const::_static_method_new_i64(-128LL);
			return jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_15177b070_build_prim_type(jule::Str("i8", 2)))),jule::Ref<_15177b070_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_269521_c),jule::Bool(),_269521_c));
		}
		goto _match_end_5688099392;
		_case_end_5688104608:;
		_case_begin_5688100704:;
		{
			(*this)._method_push_err(_268038_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("i8", 2)),jule::Any(_268038_ident._field_kind)}));
			return jule::new_ref<_151290fd0_Data>();
		}
		goto _match_end_5688099392;
		_case_end_5688100704:;
		_match_end_5688099392:;
	}
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_eval_i16_type_static(_150640f50_Token _270839_ident) {
	
	
	
	{
		auto _match_expr{ _270839_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_5688119744; }
		_case_begin_5688119744:;
		{
			jule::Ref<_15199b440_Const> _271521_c = _15199b440_Const::_static_method_new_i64(32767LL);
			return jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_15177b070_build_prim_type(jule::Str("i16", 3)))),jule::Ref<_15177b070_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_271521_c),jule::Bool(),_271521_c));
		}
		goto _match_end_5688114160;
		_case_end_5688119744:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_5688120320; }
		_case_begin_5688120320:;
		{
			jule::Ref<_15199b440_Const> _272321_c = _15199b440_Const::_static_method_new_i64(-32768LL);
			return jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_15177b070_build_prim_type(jule::Str("i16", 3)))),jule::Ref<_15177b070_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_272321_c),jule::Bool(),_272321_c));
		}
		goto _match_end_5688114160;
		_case_end_5688120320:;
		_case_begin_5688115472:;
		{
			(*this)._method_push_err(_270839_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("i16", 3)),jule::Any(_270839_ident._field_kind)}));
			return jule::new_ref<_151290fd0_Data>();
		}
		goto _match_end_5688114160;
		_case_end_5688115472:;
		_match_end_5688114160:;
	}
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_eval_i32_type_static(_150640f50_Token _273639_ident) {
	
	
	
	{
		auto _match_expr{ _273639_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_5688135088; }
		_case_begin_5688135088:;
		{
			jule::Ref<_15199b440_Const> _274321_c = _15199b440_Const::_static_method_new_i64(2147483647LL);
			return jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_15177b070_build_prim_type(jule::Str("i32", 3)))),jule::Ref<_15177b070_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_274321_c),jule::Bool(),_274321_c));
		}
		goto _match_end_5688129536;
		_case_end_5688135088:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_5688134752; }
		_case_begin_5688134752:;
		{
			jule::Ref<_15199b440_Const> _275121_c = _15199b440_Const::_static_method_new_i64(-2147483648LL);
			return jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_15177b070_build_prim_type(jule::Str("i32", 3)))),jule::Ref<_15177b070_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_275121_c),jule::Bool(),_275121_c));
		}
		goto _match_end_5688129536;
		_case_end_5688134752:;
		_case_begin_5688130848:;
		{
			(*this)._method_push_err(_273639_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("i32", 3)),jule::Any(_273639_ident._field_kind)}));
			return jule::new_ref<_151290fd0_Data>();
		}
		goto _match_end_5688129536;
		_case_end_5688130848:;
		_match_end_5688129536:;
	}
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_eval_i64_type_static(_150640f50_Token _276439_ident) {
	
	
	
	{
		auto _match_expr{ _276439_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_5688150144; }
		_case_begin_5688150144:;
		{
			jule::Ref<_15199b440_Const> _277121_c = _15199b440_Const::_static_method_new_i64(jule::MIN_I64);
			return jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_15177b070_build_prim_type(jule::Str("i64", 3)))),jule::Ref<_15177b070_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_277121_c),jule::Bool(),_277121_c));
		}
		goto _match_end_5688144512;
		_case_end_5688150144:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_5688149808; }
		_case_begin_5688149808:;
		{
			jule::Ref<_15199b440_Const> _277921_c = _15199b440_Const::_static_method_new_i64(jule::MAX_I64);
			return jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_15177b070_build_prim_type(jule::Str("i64", 3)))),jule::Ref<_15177b070_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_277921_c),jule::Bool(),_277921_c));
		}
		goto _match_end_5688144512;
		_case_end_5688149808:;
		_case_begin_5688145904:;
		{
			(*this)._method_push_err(_276439_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("i64", 3)),jule::Any(_276439_ident._field_kind)}));
			return jule::new_ref<_151290fd0_Data>();
		}
		goto _match_end_5688144512;
		_case_end_5688145904:;
		_match_end_5688144512:;
	}
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_eval_u8_type_static(_150640f50_Token _279238_ident) {
	
	
	{
		auto _match_expr{ _279238_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_5688163584; }
		_case_begin_5688163584:;
		{
			jule::Ref<_15199b440_Const> _279821_c = _15199b440_Const::_static_method_new_u64(255LLU);
			return jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_15177b070_build_prim_type(jule::Str("u8", 2)))),jule::Ref<_15177b070_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_279821_c),jule::Bool(),_279821_c));
		}
		goto _match_end_5688159232;
		_case_end_5688163584:;
		_case_begin_5688159840:;
		{
			(*this)._method_push_err(_279238_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("u8", 2)),jule::Any(_279238_ident._field_kind)}));
			return jule::new_ref<_151290fd0_Data>();
		}
		goto _match_end_5688159232;
		_case_end_5688159840:;
		_match_end_5688159232:;
	}
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_eval_u16_type_static(_150640f50_Token _281139_ident) {
	
	
	{
		auto _match_expr{ _281139_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_5688174480; }
		_case_begin_5688174480:;
		{
			jule::Ref<_15199b440_Const> _281721_c = _15199b440_Const::_static_method_new_u64(65535LLU);
			return jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_15177b070_build_prim_type(jule::Str("u16", 3)))),jule::Ref<_15177b070_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_281721_c),jule::Bool(),_281721_c));
		}
		goto _match_end_5688170128;
		_case_end_5688174480:;
		_case_begin_5688170736:;
		{
			(*this)._method_push_err(_281139_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("u16", 3)),jule::Any(_281139_ident._field_kind)}));
			return jule::new_ref<_151290fd0_Data>();
		}
		goto _match_end_5688170128;
		_case_end_5688170736:;
		_match_end_5688170128:;
	}
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_eval_u32_type_static(_150640f50_Token _283039_ident) {
	
	
	{
		auto _match_expr{ _283039_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_5688185216; }
		_case_begin_5688185216:;
		{
			jule::Ref<_15199b440_Const> _283621_c = _15199b440_Const::_static_method_new_u64(4294967295LLU);
			return jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_15177b070_build_prim_type(jule::Str("u32", 3)))),jule::Ref<_15177b070_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_283621_c),jule::Bool(),_283621_c));
		}
		goto _match_end_5688180864;
		_case_end_5688185216:;
		_case_begin_5688181472:;
		{
			(*this)._method_push_err(_283039_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("u32", 3)),jule::Any(_283039_ident._field_kind)}));
			return jule::new_ref<_151290fd0_Data>();
		}
		goto _match_end_5688180864;
		_case_end_5688181472:;
		_match_end_5688180864:;
	}
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_eval_u64_type_static(_150640f50_Token _284939_ident) {
	
	
	{
		auto _match_expr{ _284939_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_5688196032; }
		_case_begin_5688196032:;
		{
			jule::Ref<_15199b440_Const> _285521_c = _15199b440_Const::_static_method_new_u64(jule::MAX_U64);
			return jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_15177b070_build_prim_type(jule::Str("u64", 3)))),jule::Ref<_15177b070_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_285521_c),jule::Bool(),_285521_c));
		}
		goto _match_end_5688191680;
		_case_end_5688196032:;
		_case_begin_5688192288:;
		{
			(*this)._method_push_err(_284939_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("u64", 3)),jule::Any(_284939_ident._field_kind)}));
			return jule::new_ref<_151290fd0_Data>();
		}
		goto _match_end_5688191680;
		_case_end_5688192288:;
		_match_end_5688191680:;
	}
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_eval_f32_type_tatic(_150640f50_Token _286838_ident) {
	
	
	
	{
		auto _match_expr{ _286838_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_5688207712; }
		_case_begin_5688207712:;
		{
			jule::Ref<_15199b440_Const> _287521_c = _15199b440_Const::_static_method_new_f64(340282346638528860000000000000000000000.0);
			return jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_15177b070_build_prim_type(jule::Str("f32", 3)))),jule::Ref<_15177b070_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_287521_c),jule::Bool(),_287521_c));
		}
		goto _match_end_5688202832;
		_case_end_5688207712:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_5688208288; }
		_case_begin_5688208288:;
		{
			jule::Ref<_15199b440_Const> _288321_c = _15199b440_Const::_static_method_new_f64(-340282346638528860000000000000000000000.0);
			return jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_15177b070_build_prim_type(jule::Str("f32", 3)))),jule::Ref<_15177b070_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_288321_c),jule::Bool(),_288321_c));
		}
		goto _match_end_5688202832;
		_case_end_5688208288:;
		_case_begin_5688204064:;
		{
			(*this)._method_push_err(_286838_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("f32", 3)),jule::Any(_286838_ident._field_kind)}));
			return jule::new_ref<_151290fd0_Data>();
		}
		goto _match_end_5688202832;
		_case_end_5688204064:;
		_match_end_5688202832:;
	}
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_eval_f64_type_static(_150640f50_Token _289639_ident) {
	
	
	
	{
		auto _match_expr{ _289639_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_5688222592; }
		_case_begin_5688222592:;
		{
			jule::Ref<_15199b440_Const> _290321_c = _15199b440_Const::_static_method_new_f64(jule::MAX_F64);
			return jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_15177b070_build_prim_type(jule::Str("f64", 3)))),jule::Ref<_15177b070_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_290321_c),jule::Bool(),_290321_c));
		}
		goto _match_end_5688217632;
		_case_end_5688222592:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_5688223168; }
		_case_begin_5688223168:;
		{
			jule::Ref<_15199b440_Const> _291121_c = _15199b440_Const::_static_method_new_f64(jule::MIN_F64);
			return jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_15177b070_build_prim_type(jule::Str("f64", 3)))),jule::Ref<_15177b070_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_291121_c),jule::Bool(),_291121_c));
		}
		goto _match_end_5688217632;
		_case_end_5688223168:;
		_case_begin_5688218944:;
		{
			(*this)._method_push_err(_289639_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("f64", 3)),jule::Any(_289639_ident._field_kind)}));
			return jule::new_ref<_151290fd0_Data>();
		}
		goto _match_end_5688217632;
		_case_end_5688218944:;
		_match_end_5688217632:;
	}
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_eval_prim_static(jule::Str _292435_kind,_150640f50_Token _292446_ident) {
	{
		auto _match_expr{ _292435_kind };
		if (!((jule::Str("int", 3)) == _match_expr)) { goto _case_end_5688234960; }
		_case_begin_5688234960:;
		{
			return (*this)._method_eval_int_type_static(_292446_ident);
		}
		goto _match_end_5688230912;
		_case_end_5688234960:;
		if (!((jule::Str("uint", 4)) == _match_expr)) { goto _case_end_5688235520; }
		_case_begin_5688235520:;
		{
			return (*this)._method_eval_uint_type_static(_292446_ident);
		}
		goto _match_end_5688230912;
		_case_end_5688235520:;
		if (!((jule::Str("i8", 2)) == _match_expr)) { goto _case_end_5688231680; }
		_case_begin_5688231680:;
		{
			return (*this)._method_eval_i8_type_static(_292446_ident);
		}
		goto _match_end_5688230912;
		_case_end_5688231680:;
		if (!((jule::Str("i16", 3)) == _match_expr)) { goto _case_end_5688231792; }
		_case_begin_5688231792:;
		{
			return (*this)._method_eval_i16_type_static(_292446_ident);
		}
		goto _match_end_5688230912;
		_case_end_5688231792:;
		if (!((jule::Str("i32", 3)) == _match_expr)) { goto _case_end_5688231904; }
		_case_begin_5688231904:;
		{
			return (*this)._method_eval_i32_type_static(_292446_ident);
		}
		goto _match_end_5688230912;
		_case_end_5688231904:;
		if (!((jule::Str("i64", 3)) == _match_expr)) { goto _case_end_5688234352; }
		_case_begin_5688234352:;
		{
			return (*this)._method_eval_i64_type_static(_292446_ident);
		}
		goto _match_end_5688230912;
		_case_end_5688234352:;
		if (!((jule::Str("u8", 2)) == _match_expr)) { goto _case_end_5688234464; }
		_case_begin_5688234464:;
		{
			return (*this)._method_eval_u8_type_static(_292446_ident);
		}
		goto _match_end_5688230912;
		_case_end_5688234464:;
		if (!((jule::Str("u16", 3)) == _match_expr)) { goto _case_end_5688234576; }
		_case_begin_5688234576:;
		{
			return (*this)._method_eval_u16_type_static(_292446_ident);
		}
		goto _match_end_5688230912;
		_case_end_5688234576:;
		if (!((jule::Str("u32", 3)) == _match_expr)) { goto _case_end_5688234688; }
		_case_begin_5688234688:;
		{
			return (*this)._method_eval_u32_type_static(_292446_ident);
		}
		goto _match_end_5688230912;
		_case_end_5688234688:;
		if (!((jule::Str("u64", 3)) == _match_expr)) { goto _case_end_5688234800; }
		_case_begin_5688234800:;
		{
			return (*this)._method_eval_u64_type_static(_292446_ident);
		}
		goto _match_end_5688230912;
		_case_end_5688234800:;
		if (!((jule::Str("f32", 3)) == _match_expr)) { goto _case_end_5688235680; }
		_case_begin_5688235680:;
		{
			return (*this)._method_eval_f32_type_tatic(_292446_ident);
		}
		goto _match_end_5688230912;
		_case_end_5688235680:;
		if (!((jule::Str("f64", 3)) == _match_expr)) { goto _case_end_5688235792; }
		_case_begin_5688235792:;
		{
			return (*this)._method_eval_f64_type_static(_292446_ident);
		}
		goto _match_end_5688230912;
		_case_end_5688235792:;
		_case_begin_5688231296:;
		{
			(*this)._method_push_err(_292446_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_292435_kind),jule::Any(_292446_ident._field_kind)}));
			return jule::new_ref<_151290fd0_Data>();
		}
		goto _match_end_5688230912;
		_case_end_5688231296:;
		_match_end_5688230912:;
	}
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_eval_type_static(jule::Ref<_151290fd0_Data> _294439_d,jule::Ref<_1506406d0_SubIdentExpr> _294453_si) {
	{
		if (!((jule::real(_294439_d->_field_kind->_method_prim())))) { goto _case_end_5688254608; }
		_case_begin_5688254608:;
		{
			return (*this)._method_eval_prim_static(_294439_d->_field_kind->_method_prim()->_method_to_str(),_294453_si->_field_ident);
		}
		goto _match_end_5688250480;
		_case_end_5688254608:;
		if (!((jule::real(_294439_d->_field_kind->_method_enm())))) { goto _case_end_5688255168; }
		_case_begin_5688255168:;
		{
			return (*this)._method_eval_enum_static(_294439_d->_field_kind->_method_enm(),_294453_si->_field_ident);
		}
		goto _match_end_5688250480;
		_case_end_5688255168:;
		if (!((jule::real(_294439_d->_field_kind->_method_strct())))) { goto _case_end_5688254832; }
		_case_begin_5688254832:;
		{
			return (*this)._method_eval_struct_static(_294439_d->_field_kind->_method_strct(),_294453_si->_field_ident);
		}
		goto _match_end_5688250480;
		_case_end_5688254832:;
		_case_begin_5688250640:;
		{
			(*this)._method_push_err(_294453_si->_field_ident,jule::Str("type @ is not supports sub fields", 33),jule::Slice<jule::Any>({jule::Any(_294439_d->_field_kind->_method_to_str())}));
			return jule::new_ref<_151290fd0_Data>();
		}
		goto _match_end_5688250480;
		_case_end_5688250640:;
		_match_end_5688250480:;
	}
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_eval_obj_sub_ident(jule::Ref<_151290fd0_Data> _296141_d,jule::Ref<_1506406d0_SubIdentExpr> _296155_si) {
	jule::Ref<_15177b070_TypeKind> _296217_kind = _296141_d->_field_kind;
	if (jule::real(_296141_d->_field_kind->_method_ptr())) {
		jule::Ref<_15177b070_Ptr> _296417_ptr = _296141_d->_field_kind->_method_ptr();
		if ((!(_296417_ptr->_method_is_unsafe()))) {
			if ((!(_296155_si->_field_is_self)) && (!((*this)._method_is_unsafe()))) {
				(*this)._method_push_err(_296155_si->_field_ident,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>({}));
			}
			_296217_kind=_296141_d->_field_kind->_method_ptr()->_field_elem;
		}
	} else if (jule::real(_296141_d->_field_kind->_method_ref())) {
		_296217_kind=_296141_d->_field_kind->_method_ref()->_field_elem;
	}
	{
		if (!((jule::real(_296141_d->_field_kind->_method_trt())))) { goto _case_end_5688275936; }
		_case_begin_5688275936:;
		{
			return (*this)._method_eval_trait_sub_ident(_296141_d,_296141_d->_field_kind->_method_trt(),_296155_si->_field_ident);
		}
		goto _match_end_5688274544;
		_case_end_5688275936:;
		if (!((jule::real(_296217_kind->_method_strct())))) { goto _case_end_5688276048; }
		_case_begin_5688276048:;
		{
			jule::Ref<_150a13110_StructIns> _298017_s = _296217_kind->_method_strct();
			if (_151290fd0_is_instanced_struct(_298017_s)) {
				jule::Bool _298225_used_reference_elem = jule::real(_296141_d->_field_kind->_method_ref());
				return (*this)._method_eval_struct_sub_ident(_296141_d,_296217_kind->_method_strct(),_296155_si,_298225_used_reference_elem);
			}
		}
		goto _match_end_5688274544;
		_case_end_5688276048:;
		if (!((jule::real(_296217_kind->_method_slc())))) { goto _case_end_5688276160; }
		_case_begin_5688276160:;
		{
			return (*this)._method_eval_slice_sub_ident(_296141_d,_296155_si->_field_ident);
		}
		goto _match_end_5688274544;
		_case_end_5688276160:;
		if (!((jule::real(_296217_kind->_method_arr())))) { goto _case_end_5688276272; }
		_case_begin_5688276272:;
		{
			return (*this)._method_eval_array_sub_ident(_296141_d,_296155_si->_field_ident);
		}
		goto _match_end_5688274544;
		_case_end_5688276272:;
		if (!((jule::real(_296217_kind->_method_map())))) { goto _case_end_5688276384; }
		_case_begin_5688276384:;
		{
			return (*this)._method_eval_map_sub_ident(_296141_d,_296155_si->_field_ident);
		}
		goto _match_end_5688274544;
		_case_end_5688276384:;
		if (!((jule::real(_296217_kind->_method_prim())))) { goto _case_end_5688276512; }
		_case_begin_5688276512:;
		{
			jule::Ref<_15177b070_Prim> _299617_p = _296217_kind->_method_prim();
			{
				auto _match_expr{ _299617_p->_field_kind };
				if (!((jule::Str("str", 3)) == _match_expr)) { goto _case_end_5688292304; }
				_case_begin_5688292304:;
				{
					return (*this)._method_eval_str_sub_ident(_296141_d,_296155_si->_field_ident);
				}
				goto _match_end_5688291600;
				_case_end_5688292304:;
				_match_end_5688291600:;
			}
		}
		goto _match_end_5688274544;
		_case_end_5688276512:;
		_match_end_5688274544:;
	}
	(*this)._method_push_err(_296155_si->_field_ident,jule::Str("object @ is not supports sub fields", 35),jule::Slice<jule::Any>({jule::Any(_296141_d->_field_kind->_method_to_str())}));
	return jule::new_ref<_151290fd0_Data>();
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_eval_sub_ident(jule::Ref<_1506406d0_SubIdentExpr> _300738_si) {
	jule::Ref<_15177b070_TypeKind> _300817_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_300817_prefix;
	});
	jule::Ref<_151290fd0_Data> _301217_d = this->self->_method_eval_expr_kind(_300738_si->_field_expr);
	if ((!(jule::real(_301217_d)))) {
		return jule::new_ref<_151290fd0_Data>();
	}
	if (_301217_d->_field_decl) {
		return this->self->_method_eval_type_static(_301217_d,_300738_si);
	}
	return this->self->_method_eval_obj_sub_ident(_301217_d,_300738_si);
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_eval_tuple(jule::Ref<_1506406d0_TupleExpr> _302434_tup) {
	jule::Ref<_15177b070_Tuple> _302517_tup_t = jule::new_struct<_15177b070_Tuple>(new( std::nothrow ) _15177b070_Tuple());
	_302517_tup_t->_field_types=jule::Slice<jule::Ref<_15177b070_TypeKind>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_302434_tup->_field_expr.len())));
	jule::Ref<_150f25dd0_TupleExprModel> _302817_model = jule::new_struct<_150f25dd0_TupleExprModel>(new( std::nothrow ) _150f25dd0_TupleExprModel(jule::Slice<jule::Ref<_151290fd0_Data>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_302434_tup->_field_expr.len())))));
	jule::Bool _303217_ok = true;
	{
		auto __julec_range_expr = _302434_tup->_field_expr;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _151290fd0_i = 0;
			jule::Ref<_1506406d0_Expr> _151290fd0_expr = *__julec_range_begin;
			_iter_begin_5688307440:;
			{
				jule::Ref<_151290fd0_Data> _303421_d = this->self->_method_eval_expr_kind(_151290fd0_expr->_field_kind);
				if ((!(jule::real(_303421_d)))) {
					_303217_ok=false;
					goto _iter_next_5688307440;
				}
				_302517_tup_t->_field_types[static_cast<jule::Int>(_151290fd0_i)]=_303421_d->_field_kind;
				_302817_model->_field_datas[static_cast<jule::Int>(_151290fd0_i)]=_303421_d;
			}
			_iter_next_5688307440:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_151290fd0_i; _151290fd0_expr = *__julec_range_begin; goto _iter_begin_5688307440; }
			_iter_end_5688307440:;
		}
	}
	if ((!(_303217_ok))) {
		return jule::new_ref<_151290fd0_Data>();
	}
	return jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_302517_tup_t)),jule::Ref<_15177b070_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_302817_model),jule::Bool(),jule::Ref<_15199b440_Const>()));
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_eval_map(jule::Ref<_15177b070_Map> _305332_m,jule::Ref<_1506406d0_BraceLit> _305345_lit) {
	jule::Ref<_150f25dd0_MapExprModel> _305417_model = jule::new_struct<_150f25dd0_MapExprModel>(new( std::nothrow ) _150f25dd0_MapExprModel(_305332_m->_field_key,_305332_m->_field_val,jule::Slice<jule::Ref<_150f25dd0_KeyValPairExprModel>>()));
	{
		auto __julec_range_expr = _305345_lit->_field_exprs;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Any _151290fd0_expr = *__julec_range_begin;
			_iter_begin_5688331120:;
			{
				{
					auto _match_expr{ _151290fd0_expr };
					if (!(_match_expr.type_is<jule::Ref<_1506406d0_KeyValPair>>())) { goto _case_end_5688335264; }
					goto _match_end_5688332304;
					_case_end_5688335264:;
					_case_begin_5688332768:;
					{
						this->self->_method_push_err(_305345_lit->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
						return jule::new_ref<_151290fd0_Data>();
					}
					goto _match_end_5688332304;
					_case_end_5688332768:;
					_match_end_5688332304:;
				}
				jule::Ref<_1506406d0_KeyValPair> _306921_pair = _151290fd0_expr.operator jule::Ref<_1506406d0_KeyValPair>();
				jule::Ref<_151290fd0_Data> _307121_key = this->self->_method_eval_expr_kind(_306921_pair->_field_key);
				if ((!(jule::real(_307121_key)))) {
					return jule::new_ref<_151290fd0_Data>();
				}
				jule::Ref<_151290fd0_Data> _307621_val = this->self->_method_eval_expr_kind(_306921_pair->_field_val);
				if ((!(jule::real(_307621_val)))) {
					return jule::new_ref<_151290fd0_Data>();
				}
				this->self->_field_s->_method_check_assign_type(_305332_m->_field_key,_307121_key,_306921_pair->_field_colon,true);
				this->self->_field_s->_method_check_assign_type(_305332_m->_field_val,_307621_val,_306921_pair->_field_colon,true);
				_305417_model->_field_entries=jule::append(_305417_model->_field_entries,jule::Slice<jule::Ref<_150f25dd0_KeyValPairExprModel>>({jule::new_struct<_150f25dd0_KeyValPairExprModel>(new( std::nothrow ) _150f25dd0_KeyValPairExprModel(_307121_key->_field_model,_307621_val->_field_model))}));
			}
			_iter_next_5688331120:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _151290fd0_expr = *__julec_range_begin; goto _iter_begin_5688331120; }
			_iter_end_5688331120:;
		}
	}
	return jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_305332_m)),jule::Ref<_15177b070_TypeKind>(),true,jule::Bool(),false,false,jule::Bool(),jule::Any(_305417_model),false,jule::Ref<_15199b440_Const>()));
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_eval_brace_lit(jule::Ref<_1506406d0_BraceLit> _310038_lit) {
	{
		if (!(((!(jule::real(this->self->_field_prefix)))))) { goto _case_end_5688353264; }
		_case_begin_5688353264:;
		{
			this->self->_method_push_err(_310038_lit->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_151290fd0_Data>();
		}
		goto _match_end_5688350576;
		_case_end_5688353264:;
		if (!((jule::real(this->self->_field_prefix->_method_map())))) { goto _case_end_5688354096; }
		_case_begin_5688354096:;
		{
			return this->self->_method_eval_map(this->self->_field_prefix->_method_map(),_310038_lit);
		}
		goto _match_end_5688350576;
		_case_end_5688354096:;
		if (!((jule::real(this->self->_field_prefix->_method_strct())))) { goto _case_end_5688354208; }
		_case_begin_5688354208:;
		{
			return this->self->_method_eval_struct_lit_explicit(this->self->_field_prefix->_method_strct(),_310038_lit->_field_exprs,_310038_lit->_field_token);
		}
		goto _match_end_5688350576;
		_case_end_5688354208:;
		_case_begin_5688350720:;
		{
			this->self->_method_push_err(_310038_lit->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_151290fd0_Data>();
		}
		goto _match_end_5688350576;
		_case_end_5688350720:;
		_match_end_5688350576:;
	}
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_eval_anon_fn(jule::Ref<_1506406d0_FnDecl> _311835_decl) {
	_15177b070_TypeChecker _311917_tc = _15177b070_TypeChecker((*this)._field_s,(*this)._field_lookup,jule::Ref<_15177b070_Referencer>(),_150640f50_Token(),jule::Slice<jule::Ref<_1506406d0_GenericDecl>>(),jule::Slice<jule::Ref<_15177b070_TypeAlias>>(),jule::Bool());
	jule::Ref<_15081bcd0_FnIns> _312317_ins = _311917_tc._method_build_fn(_311835_decl);
	_312317_ins->_field_anon=true;
	{
		auto _match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_150d29660_ScopeChecker>>())) { goto _case_end_5688371072; }
		_case_begin_5688371072:;
		{
			jule::Ref<_150d29660_ScopeChecker> _312821_sc = (*this)._field_lookup.operator jule::Ref<_150d29660_ScopeChecker>();
			jule::Ref<_150d29660_ScopeChecker> _312921_scc = _312821_sc->_method_new_child_checker();
			_312921_scc->_field_labels=jule::new_ref<jule::Slice<jule::Ref<_150d29660_ScopeLabel>>>(nullptr);
			_312921_scc->_field_gotos=jule::new_ref<jule::Slice<jule::Ref<_150d29660_ScopeGoto>>>(nullptr);
			jule::drop(_312921_scc->_field_owner);
			_312921_scc->_field_child_index=0LL;
			_312921_scc->_field_it=0LL;
			_312921_scc->_field_cse=0LL;
			_312921_scc->_field_owner=_312317_ins;
			(*this)._field_s->_method_check_fn_ins_sc(_312317_ins,_312921_scc);
		}
		goto _match_end_5688367808;
		_case_end_5688371072:;
		_case_begin_5688368960:;
		{
			(*this)._field_s->_method_check_fn_ins(_312317_ins);
		}
		goto _match_end_5688367808;
		_case_end_5688368960:;
		_match_end_5688367808:;
	}
	return jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_312317_ins)),jule::Ref<_15177b070_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_150f25dd0_AnonFnExprModel>(new( std::nothrow ) _150f25dd0_AnonFnExprModel(_312317_ins,(*this)._method_is_global()))),jule::Bool(),jule::Ref<_15199b440_Const>()));
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_eval_binop(jule::Ref<_1506406d0_BinopExpr> _315234_op) {
	jule::Ref<_15177b070_TypeKind> _315317_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_315317_prefix;
	});
	_151290fd0_BinopSolver _315717_bs = _151290fd0_BinopSolver(this->self,jule::Ref<_151290fd0_Data>(),jule::Ref<_151290fd0_Data>(),_150640f50_Token());
	return _315717_bs._method_solve(_315234_op);
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_eval_expr_kind(jule::Any _316338_kind) {
	jule::Ref<_151290fd0_Data> _316417_d = jule::new_ref<_151290fd0_Data>();
	{
		auto _match_expr{ _316338_kind };
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_LitExpr>>())) { goto _case_end_5688393328; }
		_case_begin_5688393328:;
		{
			_316417_d=this->self->_method_eval_lit(_316338_kind.operator jule::Ref<_1506406d0_LitExpr>());
		}
		goto _match_end_5688391664;
		_case_end_5688393328:;
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_IdentExpr>>())) { goto _case_end_5688393536; }
		_case_begin_5688393536:;
		{
			_316417_d=this->self->_method_eval_ident(_316338_kind.operator jule::Ref<_1506406d0_IdentExpr>());
		}
		goto _match_end_5688391664;
		_case_end_5688393536:;
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_UnaryExpr>>())) { goto _case_end_5688393648; }
		_case_begin_5688393648:;
		{
			_316417_d=this->self->_method_eval_unary(_316338_kind.operator jule::Ref<_1506406d0_UnaryExpr>());
		}
		goto _match_end_5688391664;
		_case_end_5688393648:;
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_VariadicExpr>>())) { goto _case_end_5688393872; }
		_case_begin_5688393872:;
		{
			_316417_d=this->self->_method_eval_variadic(_316338_kind.operator jule::Ref<_1506406d0_VariadicExpr>());
		}
		goto _match_end_5688391664;
		_case_end_5688393872:;
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_UnsafeExpr>>())) { goto _case_end_5688393984; }
		_case_begin_5688393984:;
		{
			_316417_d=this->self->_method_eval_unsafe(_316338_kind.operator jule::Ref<_1506406d0_UnsafeExpr>());
		}
		goto _match_end_5688391664;
		_case_end_5688393984:;
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_SliceExpr>>())) { goto _case_end_5688394448; }
		_case_begin_5688394448:;
		{
			_316417_d=this->self->_method_eval_slice_expr(_316338_kind.operator jule::Ref<_1506406d0_SliceExpr>());
		}
		goto _match_end_5688391664;
		_case_end_5688394448:;
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_IndexingExpr>>())) { goto _case_end_5688394560; }
		_case_begin_5688394560:;
		{
			_316417_d=this->self->_method_eval_indexing(_316338_kind.operator jule::Ref<_1506406d0_IndexingExpr>());
		}
		goto _match_end_5688391664;
		_case_end_5688394560:;
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_SlicingExpr>>())) { goto _case_end_5688394672; }
		_case_begin_5688394672:;
		{
			_316417_d=this->self->_method_eval_slicing(_316338_kind.operator jule::Ref<_1506406d0_SlicingExpr>());
		}
		goto _match_end_5688391664;
		_case_end_5688394672:;
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_CastExpr>>())) { goto _case_end_5688394784; }
		_case_begin_5688394784:;
		{
			_316417_d=this->self->_method_eval_cast(_316338_kind.operator jule::Ref<_1506406d0_CastExpr>());
		}
		goto _match_end_5688391664;
		_case_end_5688394784:;
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_NsSelectionExpr>>())) { goto _case_end_5688394896; }
		_case_begin_5688394896:;
		{
			_316417_d=this->self->_method_eval_ns_selection(_316338_kind.operator jule::Ref<_1506406d0_NsSelectionExpr>());
		}
		goto _match_end_5688391664;
		_case_end_5688394896:;
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_StructLit>>())) { goto _case_end_5688395008; }
		_case_begin_5688395008:;
		{
			_316417_d=this->self->_method_eval_struct_lit(_316338_kind.operator jule::Ref<_1506406d0_StructLit>());
		}
		goto _match_end_5688391664;
		_case_end_5688395008:;
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_TypeDecl>>())) { goto _case_end_5688395120; }
		_case_begin_5688395120:;
		{
			_316417_d=this->self->_method_eval_type(_316338_kind.operator jule::Ref<_1506406d0_TypeDecl>());
		}
		goto _match_end_5688391664;
		_case_end_5688395120:;
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_FnCallExpr>>())) { goto _case_end_5688395248; }
		_case_begin_5688395248:;
		{
			_316417_d=this->self->_method_eval_fn_call(_316338_kind.operator jule::Ref<_1506406d0_FnCallExpr>());
		}
		goto _match_end_5688391664;
		_case_end_5688395248:;
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_SubIdentExpr>>())) { goto _case_end_5688395376; }
		_case_begin_5688395376:;
		{
			_316417_d=this->self->_method_eval_sub_ident(_316338_kind.operator jule::Ref<_1506406d0_SubIdentExpr>());
		}
		goto _match_end_5688391664;
		_case_end_5688395376:;
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_TupleExpr>>())) { goto _case_end_5688395504; }
		_case_begin_5688395504:;
		{
			_316417_d=this->self->_method_eval_tuple(_316338_kind.operator jule::Ref<_1506406d0_TupleExpr>());
		}
		goto _match_end_5688391664;
		_case_end_5688395504:;
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_BraceLit>>())) { goto _case_end_5688395632; }
		_case_begin_5688395632:;
		{
			_316417_d=this->self->_method_eval_brace_lit(_316338_kind.operator jule::Ref<_1506406d0_BraceLit>());
		}
		goto _match_end_5688391664;
		_case_end_5688395632:;
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_FnDecl>>())) { goto _case_end_5688395760; }
		_case_begin_5688395760:;
		{
			_316417_d=this->self->_method_eval_anon_fn(_316338_kind.operator jule::Ref<_1506406d0_FnDecl>());
		}
		goto _match_end_5688391664;
		_case_end_5688395760:;
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_BinopExpr>>())) { goto _case_end_5688395888; }
		_case_begin_5688395888:;
		{
			_316417_d=this->self->_method_eval_binop(_316338_kind.operator jule::Ref<_1506406d0_BinopExpr>());
		}
		goto _match_end_5688391664;
		_case_end_5688395888:;
		_case_begin_5688392576:;
		{
			jule::drop(_316417_d);
		}
		goto _match_end_5688391664;
		_case_end_5688392576:;
		_match_end_5688391664:;
	}
	if ((!(jule::real(_316417_d)))) {
		return jule::new_ref<_151290fd0_Data>();
	}
	if ((!(jule::real(_316417_d->_field_kind)))) {
		return _316417_d;
	}
	if ((((!(jule::real(_316417_d->_field_cast_kind))) && _316417_d->_method_is_const()) && (!(_316417_d->_field_is_rune))) && jule::real(_316417_d->_field_kind->_method_prim())) {
		{
			if (!((_316417_d->_field_constant->_method_is_i64()))) { goto _case_end_5688428864; }
			_case_begin_5688428864:;
			{
				if (_1510d19a0_int_assignable(jule::Str("int", 3),_316417_d)) {
					_316417_d->_field_kind->_field_kind=_15177b070_build_prim_type(jule::Str("int", 3));
				}
			}
			goto _match_end_5688428672;
			_case_end_5688428864:;
			if (!((_316417_d->_field_constant->_method_is_u64()))) { goto _case_end_5688428992; }
			_case_begin_5688428992:;
			{
				if (_1510d19a0_int_assignable(jule::Str("uint", 4),_316417_d)) {
					_316417_d->_field_kind->_field_kind=_15177b070_build_prim_type(jule::Str("uint", 4));
				}
			}
			goto _match_end_5688428672;
			_case_end_5688428992:;
			_match_end_5688428672:;
		}
	}
	if ((!(_316417_d->_field_decl))) {
		if ((((((jule::real(this->self->_field_prefix) && (!(jule::real(_316417_d->_field_cast_kind)))) && (!(_316417_d->_field_variadiced))) && (!(_316417_d->_field_lvalue))) && (!(_316417_d->_method_is_const()))) && jule::real(_316417_d->_field_kind->_method_prim())) && _1519b1410_is_num(_316417_d->_field_kind->_method_prim()->_field_kind)) {
			_316417_d->_field_cast_kind=_316417_d->_field_kind;
		}
		_151290fd0_apply_cast_kind(_316417_d);
		if ((!(jule::real(_316417_d->_field_kind->_method_prim()))) || (!(_316417_d->_field_kind->_method_prim()->_method_is_any()))) {
			if ((jule::real(this->self->_field_prefix) && jule::real(this->self->_field_prefix->_method_prim())) && this->self->_field_prefix->_method_prim()->_method_is_any()) {
				_316417_d->_field_cast_kind=this->self->_field_prefix;
				_151290fd0_apply_cast_kind_model(_316417_d);
				jule::drop(_316417_d->_field_cast_kind);
			}
		}
	}
	return _316417_d;
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_eval(jule::Ref<_1506406d0_Expr> _323728_expr) {
	jule::Ref<_151290fd0_Data> _323817_d = this->self->_method_eval_expr_kind(_323728_expr->_field_kind);
	if ((!(jule::real(_323817_d))) || (!(jule::real(_323817_d->_field_kind)))) {
		return jule::new_ref<_151290fd0_Data>();
	}
	{
		if (!((jule::real(_323817_d->_field_kind->_method_fnc())))) { goto _case_end_5688453392; }
		_case_begin_5688453392:;
		{
			jule::Ref<_15081bcd0_FnIns> _324521_f = _323817_d->_field_kind->_method_fnc();
			if (_324521_f->_method_is_builtin()) {
				goto _match_end_5688453296;
			}
			if (_324521_f->_field_generics.len() != _324521_f->_field_decl->_field_generics.len()) {
				this->self->_field_s->_method_push_err(_323728_expr->_field_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>({}));
			}
			if (_324521_f->_field_decl->_method_is_method()) {
				this->self->_field_s->_method_push_err(_323728_expr->_field_token,jule::Str("methods should be invoked", 25),jule::Slice<jule::Any>({}));
			}
		}
		goto _match_end_5688453296;
		_case_end_5688453392:;
		_match_end_5688453296:;
	}
	return _323817_d;
}



inline jule::Ref<_151290fd0_Data> _151290fd0_Eval::_method_eval_expr(jule::Ref<_1506406d0_Expr> _326533_expr) {
	jule::Ref<_151290fd0_Data> _326617_d = this->self->_method_eval(_326533_expr);
	{
		if (!(((!(jule::real(_326617_d)))))) { goto _case_end_5688468304; }
		_case_begin_5688468304:;
		{
			return jule::new_ref<_151290fd0_Data>();
		}
		goto _match_end_5688466736;
		_case_end_5688468304:;
		if (!((_326617_d->_field_decl))) { goto _case_end_5688468416; }
		_case_begin_5688468416:;
		{
			this->self->_method_push_err(_326533_expr->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
			return jule::new_ref<_151290fd0_Data>();
		}
		goto _match_end_5688466736;
		_case_end_5688468416:;
		_case_begin_5688466976:;
		{
			return _326617_d;
		}
		goto _match_end_5688466736;
		_case_end_5688466976:;
		_match_end_5688466736:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _151290fd0_Eval &_Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "owner:" << _Src._field_owner;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _15177b070_TypeKind::_method_to_str(void) {
	if ((*this)._method_is_nil()) {
		return jule::Str("nil", 3);
	}
	jule::Str _6317_kind = jule::Str("", 0);
	if ((*this)._field_variadic) {
		_6317_kind+=jule::Str("...", 3);
	}
	if ((*this)._method_is_cpp_linked()) {
		_6317_kind+=jule::Str("cpp.", 4) + (*this)._field_cpp_ident;
	} else {
		_6317_kind+=(*this)._field_kind.get()._method_to_str();
	}
	return _6317_kind;
}



inline jule::Bool _15177b070_TypeKind::_method_equals(jule::Ref<_15177b070_TypeKind> _7821_other) {
	if ((*this)._method_is_nil()) {
		return _7821_other->_method_is_nil();
	}
	if ((*this)._method_is_cpp_linked()) {
		if ((!(_7821_other->_method_is_cpp_linked()))) {
			return false;
		}
		return (*this)._field_cpp_ident == _7821_other->_field_cpp_ident;
	}
	return (*this)._field_kind.get()._method_equals(_7821_other);
}



inline jule::Ref<_15177b070_TypeKind> _15177b070_TypeKind::_method_clone(void) {
	if ((!(jule::real(this->self)))) {
		return jule::new_ref<_15177b070_TypeKind>();
	}
	jule::Ref<_15177b070_TypeKind> _10117_kind = jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(this->self->_field_cpp_ident,jule::Bool(),this->self->_field_kind));
	return _10117_kind;
}



inline jule::Bool _15177b070_TypeKind::_method_is_cpp_linked(void) {
	return (*this)._field_cpp_ident.len() != 0LL;
}



inline jule::Bool _15177b070_TypeKind::_method_is_nil(void) {
	return (*this)._field_kind == nullptr;
}



inline jule::Bool _15177b070_TypeKind::_method_is_void(void) {
	jule::Ref<_15177b070_Prim> _11613_prim = (*((&((*this)))))._method_prim();
	return jule::real(_11613_prim) && (_11613_prim->_method_to_str() == jule::Str("void", 4));
}



inline jule::Ref<_15177b070_Prim> _15177b070_TypeKind::_method_prim(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_15177b070_Prim>>())) { goto _case_end_5688960864; }
		_case_begin_5688960864:;
		{
			return (*this)._field_kind.operator jule::Ref<_15177b070_Prim>();
		}
		goto _match_end_5688958464;
		_case_end_5688960864:;
		_case_begin_5688958736:;
		{
			return jule::new_ref<_15177b070_Prim>();
		}
		goto _match_end_5688958464;
		_case_end_5688958736:;
		_match_end_5688958464:;
	}
}



inline jule::Ref<_15177b070_Ref> _15177b070_TypeKind::_method_ref(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_15177b070_Ref>>())) { goto _case_end_5688964368; }
		_case_begin_5688964368:;
		{
			return (*this)._field_kind.operator jule::Ref<_15177b070_Ref>();
		}
		goto _match_end_5688962608;
		_case_end_5688964368:;
		_case_begin_5688959488:;
		{
			return jule::new_ref<_15177b070_Ref>();
		}
		goto _match_end_5688962608;
		_case_end_5688959488:;
		_match_end_5688962608:;
	}
}



inline jule::Ref<_15177b070_Ptr> _15177b070_TypeKind::_method_ptr(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_15177b070_Ptr>>())) { goto _case_end_5688967968; }
		_case_begin_5688967968:;
		{
			return (*this)._field_kind.operator jule::Ref<_15177b070_Ptr>();
		}
		goto _match_end_5688966224;
		_case_end_5688967968:;
		_case_begin_5688963056:;
		{
			return jule::new_ref<_15177b070_Ptr>();
		}
		goto _match_end_5688966224;
		_case_end_5688963056:;
		_match_end_5688966224:;
	}
}



inline jule::Ref<_150f1c930_Enum> _15177b070_TypeKind::_method_enm(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_150f1c930_Enum>>())) { goto _case_end_5688971472; }
		_case_begin_5688971472:;
		{
			return (*this)._field_kind.operator jule::Ref<_150f1c930_Enum>();
		}
		goto _match_end_5688969712;
		_case_end_5688971472:;
		_case_begin_5688968208:;
		{
			return jule::new_ref<_150f1c930_Enum>();
		}
		goto _match_end_5688969712;
		_case_end_5688968208:;
		_match_end_5688969712:;
	}
}



inline jule::Ref<_15177b070_Arr> _15177b070_TypeKind::_method_arr(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_15177b070_Arr>>())) { goto _case_end_5688974864; }
		_case_begin_5688974864:;
		{
			return (*this)._field_kind.operator jule::Ref<_15177b070_Arr>();
		}
		goto _match_end_5688972064;
		_case_end_5688974864:;
		_case_begin_5688970752:;
		{
			return jule::new_ref<_15177b070_Arr>();
		}
		goto _match_end_5688972064;
		_case_end_5688970752:;
		_match_end_5688972064:;
	}
}



inline jule::Ref<_15177b070_Slc> _15177b070_TypeKind::_method_slc(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_15177b070_Slc>>())) { goto _case_end_5688978368; }
		_case_begin_5688978368:;
		{
			return (*this)._field_kind.operator jule::Ref<_15177b070_Slc>();
		}
		goto _match_end_5688976608;
		_case_end_5688978368:;
		_case_begin_5688973472:;
		{
			return jule::new_ref<_15177b070_Slc>();
		}
		goto _match_end_5688976608;
		_case_end_5688973472:;
		_match_end_5688976608:;
	}
}



inline jule::Ref<_15081bcd0_FnIns> _15177b070_TypeKind::_method_fnc(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_15081bcd0_FnIns>>())) { goto _case_end_5688981760; }
		_case_begin_5688981760:;
		{
			return (*this)._field_kind.operator jule::Ref<_15081bcd0_FnIns>();
		}
		goto _match_end_5688978960;
		_case_end_5688981760:;
		_case_begin_5688977648:;
		{
			return jule::new_ref<_15081bcd0_FnIns>();
		}
		goto _match_end_5688978960;
		_case_end_5688977648:;
		_match_end_5688978960:;
	}
}



inline jule::Ref<_150a13110_StructIns> _15177b070_TypeKind::_method_strct(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_150a13110_StructIns>>())) { goto _case_end_5688985152; }
		_case_begin_5688985152:;
		{
			return (*this)._field_kind.operator jule::Ref<_150a13110_StructIns>();
		}
		goto _match_end_5688982352;
		_case_end_5688985152:;
		_case_begin_5688981040:;
		{
			return jule::new_ref<_150a13110_StructIns>();
		}
		goto _match_end_5688982352;
		_case_end_5688981040:;
		_match_end_5688982352:;
	}
}



inline jule::Ref<_150f166e0_Trait> _15177b070_TypeKind::_method_trt(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_150f166e0_Trait>>())) { goto _case_end_5688988544; }
		_case_begin_5688988544:;
		{
			return (*this)._field_kind.operator jule::Ref<_150f166e0_Trait>();
		}
		goto _match_end_5688985744;
		_case_end_5688988544:;
		_case_begin_5688984432:;
		{
			return jule::new_ref<_150f166e0_Trait>();
		}
		goto _match_end_5688985744;
		_case_end_5688984432:;
		_match_end_5688985744:;
	}
}



inline jule::Ref<_15177b070_Map> _15177b070_TypeKind::_method_map(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_15177b070_Map>>())) { goto _case_end_5688991936; }
		_case_begin_5688991936:;
		{
			return (*this)._field_kind.operator jule::Ref<_15177b070_Map>();
		}
		goto _match_end_5688989136;
		_case_end_5688991936:;
		_case_begin_5688987824:;
		{
			return jule::new_ref<_15177b070_Map>();
		}
		goto _match_end_5688989136;
		_case_end_5688987824:;
		_match_end_5688989136:;
	}
}



inline jule::Ref<_15177b070_Tuple> _15177b070_TypeKind::_method_tup(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_15177b070_Tuple>>())) { goto _case_end_5688995360; }
		_case_begin_5688995360:;
		{
			return (*this)._field_kind.operator jule::Ref<_15177b070_Tuple>();
		}
		goto _match_end_5688993152;
		_case_end_5688995360:;
		_case_begin_5688991216:;
		{
			return jule::new_ref<_15177b070_Tuple>();
		}
		goto _match_end_5688993152;
		_case_end_5688991216:;
		_match_end_5688993152:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _15177b070_TypeKind &_Src) {
	_Stream << "TypeKind{";
	_Stream << "cpp_ident:" << _Src._field_cpp_ident << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _15177b070_TypeSymbol::_method_checked(void) {
	return jule::real((*this)._field_kind);
}



inline void _15177b070_TypeSymbol::_method_remove_kind(void) {
	jule::drop((*this)._field_kind);
}







std::ostream &operator<<(std::ostream &_Stream, const _15177b070_TypeSymbol &_Src) {
	_Stream << "TypeSymbol{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _15177b070_Prim::_method_to_str(void) {
	return (*this)._field_kind;
}



inline jule::Bool _15177b070_Prim::_method_equals(jule::Ref<_15177b070_TypeKind> _23421_other) {
	jule::Ref<_15177b070_Prim> _23513_prim = (_23421_other).alloc->_method_prim();
	if ((!(jule::real(_23513_prim)))) {
		return false;
	}
	return (*this)._field_kind == _23513_prim->_field_kind;
}



inline jule::Bool _15177b070_Prim::_method_is_i8(void) {
	return (*this)._field_kind == jule::Str("i8", 2);
}



inline jule::Bool _15177b070_Prim::_method_is_i16(void) {
	return (*this)._field_kind == jule::Str("i16", 3);
}



inline jule::Bool _15177b070_Prim::_method_is_i32(void) {
	return (*this)._field_kind == jule::Str("i32", 3);
}



inline jule::Bool _15177b070_Prim::_method_is_i64(void) {
	return (*this)._field_kind == jule::Str("i64", 3);
}



inline jule::Bool _15177b070_Prim::_method_is_u8(void) {
	return (*this)._field_kind == jule::Str("u8", 2);
}



inline jule::Bool _15177b070_Prim::_method_is_u16(void) {
	return (*this)._field_kind == jule::Str("u16", 3);
}



inline jule::Bool _15177b070_Prim::_method_is_u32(void) {
	return (*this)._field_kind == jule::Str("u32", 3);
}



inline jule::Bool _15177b070_Prim::_method_is_u64(void) {
	return (*this)._field_kind == jule::Str("u64", 3);
}



inline jule::Bool _15177b070_Prim::_method_is_f32(void) {
	return (*this)._field_kind == jule::Str("f32", 3);
}



inline jule::Bool _15177b070_Prim::_method_is_f64(void) {
	return (*this)._field_kind == jule::Str("f64", 3);
}



inline jule::Bool _15177b070_Prim::_method_is_int(void) {
	return (*this)._field_kind == jule::Str("int", 3);
}



inline jule::Bool _15177b070_Prim::_method_is_uint(void) {
	return (*this)._field_kind == jule::Str("uint", 4);
}



inline jule::Bool _15177b070_Prim::_method_is_uintptr(void) {
	return (*this)._field_kind == jule::Str("uintptr", 7);
}



inline jule::Bool _15177b070_Prim::_method_is_bool(void) {
	return (*this)._field_kind == jule::Str("bool", 4);
}



inline jule::Bool _15177b070_Prim::_method_is_str(void) {
	return (*this)._field_kind == jule::Str("str", 3);
}



inline jule::Bool _15177b070_Prim::_method_is_any(void) {
	return (*this)._field_kind == jule::Str("any", 3);
}







std::ostream &operator<<(std::ostream &_Stream, const _15177b070_Prim &_Src) {
	_Stream << "Prim{";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _15177b070_Ref::_method_to_str(void) {
	return jule::Str("&", 1) + (*this)._field_elem->_method_to_str();
}



inline jule::Bool _15177b070_Ref::_method_equals(jule::Ref<_15177b070_TypeKind> _30321_other) {
	jule::Ref<_15177b070_Ref> _30413_ref = (_30321_other).alloc->_method_ref();
	if ((!(jule::real(_30413_ref)))) {
		return false;
	}
	return (*this)._field_elem->_method_equals(_30413_ref->_field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, const _15177b070_Ref &_Src) {
	_Stream << "Ref{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _15177b070_Slc::_method_to_str(void) {
	return jule::Str("[]", 2) + (*this)._field_elem->_method_to_str();
}



inline jule::Bool _15177b070_Slc::_method_equals(jule::Ref<_15177b070_TypeKind> _32221_other) {
	jule::Ref<_15177b070_Slc> _32313_slc = (_32221_other).alloc->_method_slc();
	if ((!(jule::real(_32313_slc)))) {
		return false;
	}
	return (*this)._field_elem->_method_equals(_32313_slc->_field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, const _15177b070_Slc &_Src) {
	_Stream << "Slc{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _15177b070_Tuple::_method_to_str(void) {
	jule::Str _33917_s = jule::Str("(", 1);
	_33917_s+=(*this)._field_types[0LL]->_method_to_str();
	{
		auto __julec_range_expr = (*this)._field_types.slice(1LL);
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_15177b070_TypeKind> _15177b070_t = *__julec_range_begin;
			_iter_begin_5689051088:;
			{
				_33917_s+=jule::Str(",", 1);
				_33917_s+=_15177b070_t->_method_to_str();
			}
			_iter_next_5689051088:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _15177b070_t = *__julec_range_begin; goto _iter_begin_5689051088; }
			_iter_end_5689051088:;
		}
	}
	_33917_s+=jule::Str(")", 1);
	return _33917_s;
}



inline jule::Bool _15177b070_Tuple::_method_equals(jule::Ref<_15177b070_TypeKind> _35021_other) {
	jule::Ref<_15177b070_Tuple> _35113_tup = (_35021_other).alloc->_method_tup();
	if ((!(jule::real(_35113_tup)))) {
		return false;
	}
	if ((*this)._field_types.len() != _35113_tup->_field_types.len()) {
		return false;
	}
	jule::Int _36017_i = 0LL;
	_iter_begin_5689057488:;
	if (!(_36017_i < (*this)._field_types.len())) { goto _iter_end_5689057488; }
	{
		if ((!((*this)._field_types[static_cast<jule::Int>(_36017_i)]->_method_equals(_35113_tup->_field_types[static_cast<jule::Int>(_36017_i)])))) {
			return false;
		}
	}
	_iter_next_5689057488:;
	(_36017_i)++;
	goto _iter_begin_5689057488;
	_iter_end_5689057488:;
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, const _15177b070_Tuple &_Src) {
	_Stream << "Tuple{";
	_Stream << "types:" << _Src._field_types;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _15177b070_Map::_method_to_str(void) {
	jule::Str _38017_s = jule::Str("[", 1);
	_38017_s+=(*this)._field_key->_method_to_str();
	_38017_s+=jule::Str(":", 1);
	_38017_s+=(*this)._field_val->_method_to_str();
	_38017_s+=jule::Str("]", 1);
	return _38017_s;
}



inline jule::Bool _15177b070_Map::_method_equals(jule::Ref<_15177b070_TypeKind> _38921_other) {
	jule::Ref<_15177b070_Map> _39013_map = (_38921_other).alloc->_method_map();
	if ((!(jule::real(_39013_map)))) {
		return false;
	}
	return (*this)._field_key->_method_equals(_39013_map->_field_key) && (*this)._field_val->_method_equals(_39013_map->_field_val);
}







std::ostream &operator<<(std::ostream &_Stream, const _15177b070_Map &_Src) {
	_Stream << "Map{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _15177b070_Arr::_method_to_str(void) {
	jule::Str _40817_s = jule::Str("[", 1);
	_40817_s+=_1500241f0_itoa((*this)._field_n);
	_40817_s+=jule::Str("]", 1);
	_40817_s+=(*this)._field_elem->_method_to_str();
	return _40817_s;
}



inline jule::Bool _15177b070_Arr::_method_equals(jule::Ref<_15177b070_TypeKind> _41621_other) {
	jule::Ref<_15177b070_Arr> _41713_arr = (_41621_other).alloc->_method_arr();
	if ((!(jule::real(_41713_arr)))) {
		return false;
	}
	return ((*this)._field_n == _41713_arr->_field_n) && (*this)._field_elem->_method_equals(_41713_arr->_field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, const _15177b070_Arr &_Src) {
	_Stream << "Arr{";
	_Stream << "auto:" << _Src._field_auto << ", ";
	_Stream << "n:" << _Src._field_n << ", ";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _15177b070_Ptr::_method_to_str(void) {
	if ((*this)._method_is_unsafe()) {
		return jule::Str("*unsafe", 7);
	}
	return jule::Str("*", 1) + (*this)._field_elem->_method_to_str();
}



inline jule::Bool _15177b070_Ptr::_method_equals(jule::Ref<_15177b070_TypeKind> _44021_other) {
	jule::Ref<_15177b070_Ptr> _44113_ptr = (_44021_other).alloc->_method_ptr();
	if ((!(jule::real(_44113_ptr)))) {
		return false;
	}
	return (*this)._field_elem->_method_equals(_44113_ptr->_field_elem);
}



inline jule::Bool _15177b070_Ptr::_method_is_unsafe(void) {
	return (!(jule::real((*this)._field_elem)));
}







std::ostream &operator<<(std::ostream &_Stream, const _15177b070_Ptr &_Src) {
	_Stream << "Ptr{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _15177b070_Referencer &_Src) {
	_Stream << "Referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_150f26340_ImportInfo> _1503de590_PlainImporter::_method_get_import(jule::Str _10333_path) {
	{
		auto __julec_range_expr = (*this)._field_all_packages;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_150f26340_ImportInfo> _1503de590_p = *__julec_range_begin;
			_iter_begin_5689683632:;
			{
				if (_1503de590_p->_field_path == _10333_path) {
					return _1503de590_p;
				}
			}
			_iter_next_5689683632:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1503de590_p = *__julec_range_begin; goto _iter_begin_5689683632; }
			_iter_end_5689683632:;
		}
	}
	return jule::new_ref<_150f26340_ImportInfo>();
}



inline std::tuple<jule::Slice<jule::Ref<_15053e120_Ast>>,jule::Slice<_157e34dc0_Log>> _1503de590_PlainImporter::_method_import_package(jule::Str _11337_path) {
	jule::Slice<jule::Ref<_15053ceb0_DirEntry>> _11414_dirents;
	jule::Str _11423_err_msg;
	std::tie(_11414_dirents,_11423_err_msg) = _1503de590_read_package_dirents(_11337_path);
	if (_11423_err_msg != jule::Str("", 0)) {
		jule::Slice<_157e34dc0_Log> _11621_errors = jule::Slice<_157e34dc0_Log>({_1503de590_flat_compiler_err(_11423_err_msg)});
		return std::make_tuple(nullptr,_11621_errors);
	}
	jule::Slice<jule::Ref<_15053e120_Ast>> _12017_asts = jule::Slice<jule::Ref<_15053e120_Ast>>::alloc(0LL,static_cast<jule::Int>(static_cast<jule::I64>(_11414_dirents.len())));
	{
		auto __julec_range_expr = _11414_dirents;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_15053ceb0_DirEntry> _1503de590_dirent = *__julec_range_begin;
			_iter_begin_5689688832:;
			{
				jule::Str _12217_path = _147e135c0_join(jule::Slice<jule::Str>({_11337_path,_1503de590_dirent->_field_name}));
				jule::Ref<_1506fba60_File> _12321_file = _1506fba60_new_file_set(_12217_path);
				_12321_file->_method_fill(_1503de590_read_buff(_12321_file->_method_path()));
				jule::Slice<_157e34dc0_Log> _12521_errors = _150567d60_lex(_12321_file);
				if (_12521_errors.len() > 0LL) {
					return std::make_tuple(nullptr,_12521_errors);
				}
				jule::Ref<_1507e43e0_FileInfo> _13021_finfo = _1507e43e0_parse_file(_12321_file);
				if (_13021_finfo->_field_errors.len() > 0LL) {
					return std::make_tuple(nullptr,_13021_finfo->_field_errors);
				}
				if ((!(_157e34740_is_pass_file_annotation(_1503de590_dirent->_field_name)))) {
					goto _iter_next_5689688832;
				}
				if ((!(_1503de590_is_pass_build_directives(_13021_finfo->_field_ast)))) {
					goto _iter_next_5689688832;
				}
				_12017_asts=jule::append(_12017_asts,jule::Slice<jule::Ref<_15053e120_Ast>>({_13021_finfo->_field_ast}));
			}
			_iter_next_5689688832:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1503de590_dirent = *__julec_range_begin; goto _iter_begin_5689688832; }
			_iter_end_5689688832:;
		}
	}
	return std::make_tuple(_12017_asts,nullptr);
}



inline void _1503de590_PlainImporter::_method_imported(jule::Ref<_150f26340_ImportInfo> _15135_imp) {
	{
		auto __julec_range_expr = (*this)._field_all_packages;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_150f26340_ImportInfo> _1503de590_p = *__julec_range_begin;
			_iter_begin_5689714704:;
			{
				if ((_1503de590_p->_field_cpp_linked == _15135_imp->_field_cpp_linked) && (_1503de590_p->_field_link_path == _15135_imp->_field_link_path)) {
					return;
				}
			}
			_iter_next_5689714704:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1503de590_p = *__julec_range_begin; goto _iter_begin_5689714704; }
			_iter_end_5689714704:;
		}
	}
	(*this)._field_all_packages=jule::append((*this)._field_all_packages,jule::Slice<jule::Ref<_150f26340_ImportInfo>>({_15135_imp}));
}







std::ostream &operator<<(std::ostream &_Stream, const _1503de590_PlainImporter &_Src) {
	_Stream << "PlainImporter{";
	_Stream << "all_packages:" << _Src._field_all_packages;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::Ref<_1501d9900_IR>,jule::Slice<_157e34dc0_Log>> _1501d9900_IR::_static_method_build(jule::Str _3025_path) {
	jule::Ref<_1503de590_PlainImporter> _3117_importer = jule::new_struct<_1503de590_PlainImporter>(new( std::nothrow ) _1503de590_PlainImporter());
	jule::Slice<jule::Ref<_15053e120_Ast>> _3218_files;
	jule::Slice<_157e34dc0_Log> _3229_logs;
	std::tie(_3218_files,_3229_logs) = _3117_importer->_method_import_package(_3025_path);
	if (_3229_logs.len() > 0LL) {
		return std::make_tuple(jule::new_ref<_1501d9900_IR>(),_3229_logs);
	}
	if (_3218_files.len() == 0LL) {
		return std::make_tuple(jule::new_ref<_1501d9900_IR>(),nullptr);
	}
	jule::Ref<_150f26340_Package> _4118_pkg;
	std::tie(_4118_pkg,_3229_logs) = _1517f9a70_analyze_package(_3218_files,_3117_importer);
	if (_3229_logs.len() > 0LL) {
		return std::make_tuple(jule::new_ref<_1501d9900_IR>(),_3229_logs);
	}
	jule::Ref<_1501d9900_IR> _4617_ir = jule::new_struct<_1501d9900_IR>(new( std::nothrow ) _1501d9900_IR(jule::Slice<jule::Str>(),_4118_pkg,_3117_importer->_field_all_packages));
	_4617_ir->_field_passes=_1501d9900_get_all_unique_passes(_4617_ir->_field_main,_4617_ir->_field_used);
	return std::make_tuple(_4617_ir,nullptr);
}



inline void _1501d9900_IR::_method_append_structs(jule::Ref<_150f26340_Package> _5733_p,jule::Slice<jule::Ref<_150a13110_Struct>>& _5751_buffer) {
	{
		auto __julec_range_expr = _5733_p->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_15128c4d0_SymbolTable> _1501d9900_f = *__julec_range_begin;
			_iter_begin_5689766304:;
			{
				jule::Int _5921_i = 0LL;
				_iter_begin_5689768128:;
				if (!(_5921_i < _1501d9900_f->_field_structs._method_len())) { goto _iter_end_5689768128; }
				{
					jule::Ref<_150a13110_Struct> _6125_s = _1501d9900_f->_field_structs._method_at(_5921_i);
					if ((!(_6125_s->_field_cpp_linked))) {
						_5751_buffer=jule::append(_5751_buffer,jule::Slice<jule::Ref<_150a13110_Struct>>({_6125_s}));
					}
				}
				_iter_next_5689768128:;
				(_5921_i)++;
				goto _iter_begin_5689768128;
				_iter_end_5689768128:;
			}
			_iter_next_5689766304:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1501d9900_f = *__julec_range_begin; goto _iter_begin_5689766304; }
			_iter_end_5689766304:;
		}
	}
}



inline jule::Slice<jule::Ref<_150a13110_Struct>> _1501d9900_IR::_method_get_all_structures(void) {
	jule::Slice<jule::Ref<_150a13110_Struct>> _7217_buffer = nullptr;
	(*this)._method_append_structs((*this)._field_main,_7217_buffer);
	{
		auto __julec_range_expr = (*this)._field_used;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_150f26340_ImportInfo> _1501d9900_u = *__julec_range_begin;
			_iter_begin_5689776784:;
			{
				if ((!(_1501d9900_u->_field_cpp_linked))) {
					(*this)._method_append_structs(_1501d9900_u->_field_package,_7217_buffer);
				}
			}
			_iter_next_5689776784:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1501d9900_u = *__julec_range_begin; goto _iter_begin_5689776784; }
			_iter_end_5689776784:;
		}
	}
	return _7217_buffer;
}



inline void _1501d9900_IR::_method_append_vars(jule::Ref<_150f26340_Package> _8530_p,jule::Slice<jule::Ref<_1511317d0_Var>>& _8548_buffer) {
	{
		auto __julec_range_expr = _8530_p->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_15128c4d0_SymbolTable> _1501d9900_f = *__julec_range_begin;
			_iter_begin_5689783456:;
			{
				jule::Int _8721_i = 0LL;
				_iter_begin_5689785280:;
				if (!(_8721_i < _1501d9900_f->_field_vars._method_len())) { goto _iter_end_5689785280; }
				{
					jule::Ref<_1511317d0_Var> _8925_v = _1501d9900_f->_field_vars._method_at(_8721_i);
					if ((!(_8925_v->_field_cpp_linked))) {
						_8548_buffer=jule::append(_8548_buffer,jule::Slice<jule::Ref<_1511317d0_Var>>({_8925_v}));
					}
				}
				_iter_next_5689785280:;
				(_8721_i)++;
				goto _iter_begin_5689785280;
				_iter_end_5689785280:;
			}
			_iter_next_5689783456:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1501d9900_f = *__julec_range_begin; goto _iter_begin_5689783456; }
			_iter_end_5689783456:;
		}
	}
}



inline jule::Slice<jule::Ref<_1511317d0_Var>> _1501d9900_IR::_method_get_all_variables(void) {
	jule::Slice<jule::Ref<_1511317d0_Var>> _10017_buffer = nullptr;
	(*this)._method_append_vars((*this)._field_main,_10017_buffer);
	{
		auto __julec_range_expr = (*this)._field_used;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_150f26340_ImportInfo> _1501d9900_u = *__julec_range_begin;
			_iter_begin_5689793568:;
			{
				if ((!(_1501d9900_u->_field_cpp_linked))) {
					(*this)._method_append_vars(_1501d9900_u->_field_package,_10017_buffer);
				}
			}
			_iter_next_5689793568:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1501d9900_u = *__julec_range_begin; goto _iter_begin_5689793568; }
			_iter_end_5689793568:;
		}
	}
	return _10017_buffer;
}







std::ostream &operator<<(std::ostream &_Stream, const _1501d9900_IR &_Src) {
	_Stream << "IR{";
	_Stream << "passes:" << _Src._field_passes << ", ";
	_Stream << "main:" << _Src._field_main << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}



inline void _157eacdb0_ScopeDeadCode::_method_optimize_child(jule::Ref<_150d29660_Scope> _2338_s) {
	jule::Ref<_157eacdb0_ScopeDeadCode> _2417_sdc = jule::new_struct<_157eacdb0_ScopeDeadCode>(new( std::nothrow ) _157eacdb0_ScopeDeadCode(this->self,_2338_s,(&(_2338_s->_field_stmts)),jule::Int()));
	{
		_2417_sdc->_method_optimize_stmts();
	}
}



inline void _157eacdb0_ScopeDeadCode::_method_eliminate_followed(void) {
	(*this)._field_stmts->_method_remove_range(static_cast<jule::Int>((*this)._field_i + 1LL),static_cast<jule::Int>(((*this)._field_stmts->_method_len() - (*this)._field_i) - 1LL));
	jule::Ref<_157eacdb0_ScopeDeadCode> _3417_parent = (*this)._field_parent;
	_iter_begin_5690069376:;
	if (!(jule::real(_3417_parent))) { goto _iter_end_5690069376; }
	{
		_3417_parent->_field_stmts->_method_remove_range(static_cast<jule::Int>(_3417_parent->_field_i + 1LL),static_cast<jule::Int>((_3417_parent->_field_stmts->_method_len() - _3417_parent->_field_i) - 1LL));
		_3417_parent=_3417_parent->_field_parent;
	}
	_iter_next_5690069376:;
	goto _iter_begin_5690069376;
	_iter_end_5690069376:;
}



inline void _157eacdb0_ScopeDeadCode::_method_optimize_stmt(jule::Any _4144_st) {
	{
		auto _match_expr{ _4144_st };
		if (!(_match_expr.type_is<jule::Ref<_150d29660_Scope>>())) { goto _case_end_5690079344; }
		_case_begin_5690079344:;
		{
			jule::Ref<_150d29660_Scope> _4421_scope = _4144_st.operator jule::Ref<_150d29660_Scope>();
			if (_4421_scope->_field_deferred) {
				_157eacdb0_eliminate_dead_code_of_scope(_4421_scope);
			} else {
				this->self->_method_optimize_child(_4421_scope);
			}
		}
		goto _match_end_5690079024;
		_case_end_5690079344:;
		if (!(_match_expr.type_is<jule::Ref<_151290fd0_Data>>())) { goto _case_end_5690079456; }
		_case_begin_5690079456:;
		{
			{
				auto _match_expr{ _4144_st.operator jule::Ref<_151290fd0_Data>()->_field_model };
				if (!(_match_expr.type_is<jule::Ref<_150f25dd0_BuiltinPanicCallExprModel>>())) { goto _case_end_5690086048; }
				_case_begin_5690086048:;
				{
					this->self->_method_eliminate_followed();
				}
				goto _match_end_5690083504;
				_case_end_5690086048:;
				_match_end_5690083504:;
			}
		}
		goto _match_end_5690079024;
		_case_end_5690079456:;
		if (!(_match_expr.type_is<jule::Ref<_150d29660_RetSt>>())) { goto _case_end_5690079744; }
		_case_begin_5690079744:;
		{
			this->self->_method_eliminate_followed();
		}
		goto _match_end_5690079024;
		_case_end_5690079744:;
		_match_end_5690079024:;
	}
}



inline void _157eacdb0_ScopeDeadCode::_method_optimize_stmts(void) {
	this->self->_field_i=0LL;
	_iter_begin_5690089408:;
	if (!(this->self->_field_i < this->self->_field_stmts->_method_len())) { goto _iter_end_5690089408; }
	{
		this->self->_method_optimize_stmt(this->self->_field_stmts->_method_at(this->self->_field_i));
	}
	_iter_next_5690089408:;
	(this->self->_field_i)++;
	goto _iter_begin_5690089408;
	_iter_end_5690089408:;
}







std::ostream &operator<<(std::ostream &_Stream, const _157eacdb0_ScopeDeadCode &_Src) {
	_Stream << "ScopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1517eb5a0_IndexRangeSetter::_method_setup_vars(jule::Ref<_1511317d0_Var> _4629_key_a,jule::Ref<_1511317d0_Var> _4646_key_b) {
	jule::Str _4713_indent = _1514109b0_indent();
	jule::Str _4917_obj = jule::Str("", 0);
	if (jule::real(_4629_key_a)) {
		_4917_obj+=_1514109b0_gen_var_init_expr(_4629_key_a,jule::Str("0", 1));
		_4917_obj+=jule::Str("\n", 1);
		_4917_obj+=_4713_indent;
	}
	if (jule::real(_4646_key_b)) {
		_4917_obj+=_1514109b0_gen_var_init_expr(_4646_key_b,jule::Str("*__julec_range_begin", 20));
		_4917_obj+=jule::Str("\n", 1);
		_4917_obj+=_4713_indent;
	}
	return _4917_obj;
}



inline jule::Str _1517eb5a0_IndexRangeSetter::_method_next_steps(jule::Ref<_1511317d0_Var> _6529_key_a,jule::Ref<_1511317d0_Var> _6546_key_b,jule::Str _6559_begin) {
	jule::Str _6613_indent = _1514109b0_indent();
	jule::Str _6817_obj = jule::Str("++__julec_range_begin;\n", 23);
	_6817_obj+=_6613_indent;
	_6817_obj+=jule::Str("if (__julec_range_begin != __julec_range_end) { ", 48);
	if (jule::real(_6529_key_a)) {
		_6817_obj+=(jule::Str("++", 2) + _151c17930_var_out_ident(_6529_key_a)) + jule::Str("; ", 2);
	}
	if (jule::real(_6546_key_b)) {
		_6817_obj+=_151c17930_var_out_ident(_6546_key_b) + jule::Str(" = *__julec_range_begin; ", 25);
	}
	_6817_obj+=(jule::Str("goto ", 5) + _6559_begin) + jule::Str("; }\n", 4);
	return _6817_obj;
}







std::ostream &operator<<(std::ostream &_Stream, const _1517eb5a0_IndexRangeSetter &_Src) {
	_Stream << "IndexRangeSetter{";
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1517eb5a0_MapRangeSetter::_method_setup_vars(jule::Ref<_1511317d0_Var> _8729_key_a,jule::Ref<_1511317d0_Var> _8746_key_b) {
	jule::Str _8813_indent = _1514109b0_indent();
	jule::Str _8917_obj = jule::Str("", 0);
	if (jule::real(_8729_key_a)) {
		_8917_obj+=_1514109b0_gen_var_init_expr(_8729_key_a,jule::Str("__julec_range_begin->first", 26));
		_8917_obj+=jule::Str("\n", 1);
		_8917_obj+=_8813_indent;
	}
	if (jule::real(_8746_key_b)) {
		_8917_obj+=_1514109b0_gen_var_init_expr(_8746_key_b,jule::Str("__julec_range_begin->second", 27));
		_8917_obj+=jule::Str("\n", 1);
		_8917_obj+=_8813_indent;
	}
	return _8917_obj;
}



inline jule::Str _1517eb5a0_MapRangeSetter::_method_next_steps(jule::Ref<_1511317d0_Var> _10629_key_a,jule::Ref<_1511317d0_Var> _10646_key_b,jule::Str _10659_begin) {
	jule::Str _10713_indent = _1514109b0_indent();
	jule::Str _10917_obj = jule::Str("++__julec_range_begin;\n", 23);
	_10917_obj+=_10713_indent;
	_10917_obj+=jule::Str("if (__julec_range_begin != __julec_range_end) { ", 48);
	if (jule::real(_10629_key_a)) {
		_10917_obj+=_151c17930_var_out_ident(_10629_key_a);
		_10917_obj+=jule::Str(" = __julec_range_begin->first; ", 31);
	}
	if (jule::real(_10646_key_b)) {
		_10917_obj+=_151c17930_var_out_ident(_10646_key_b);
		_10917_obj+=jule::Str(" = __julec_range_begin->second; ", 32);
	}
	_10917_obj+=(jule::Str("goto ", 5) + _10659_begin) + jule::Str("; }\n", 4);
	return _10917_obj;
}







std::ostream &operator<<(std::ostream &_Stream, const _1517eb5a0_MapRangeSetter &_Src) {
	_Stream << "MapRangeSetter{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1514109b0_OrderedDecls &_Src) {
	_Stream << "OrderedDecls{";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "globals:" << _Src._field_globals;
	_Stream << "}";
	return _Stream;
}



inline void _15177b070_TypeChecker::_method_push_err(_150640f50_Token _65427_token,jule::Str _65441_fmt,jule::Slice<jule::Any> _65454_args) {
	(*this)._field_s->_method_push_err(_65427_token,_65441_fmt,_65454_args);
}



inline jule::Ref<_15177b070_Prim> _15177b070_TypeChecker::_method_build_prim(jule::Ref<_1506406d0_IdentTypeDecl> _65829_decl) {
	if ((!(_15177b070_is_prim(_65829_decl->_field_ident)))) {
		(*this)._method_push_err((*this)._field_error_token,jule::Str("invalid data-type", 17),jule::Slice<jule::Any>({}));
		return jule::new_ref<_15177b070_Prim>();
	}
	if (_65829_decl->_field_generics.len() > 0LL) {
		(*this)._method_push_err(_65829_decl->_field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_65829_decl->_field_ident)}));
		return jule::new_ref<_15177b070_Prim>();
	}
	return _15177b070_build_prim_type(_65829_decl->_field_ident);
}



inline void _15177b070_TypeChecker::_method_push_cycle_error(jule::Any _67231_def1,jule::Any _67242_def2,jule::Str& _67258_message) {
	
	jule::Fn<jule::Str(jule::Any&)> _67513_get_ident = jule::Fn<jule::Str(jule::Any&)>([=](jule::Any& _67529_def) mutable -> jule::Str {
		{
			auto _match_expr{ _67529_def };
			if (!(_match_expr.type_is<jule::Ref<_15177b070_TypeAlias>>())) { goto _case_end_5689121952; }
			_case_begin_5689121952:;
			{
				return _67529_def.operator jule::Ref<_15177b070_TypeAlias>()->_field_ident;
			}
			goto _match_end_5689121024;
			_case_end_5689121952:;
			if (!(_match_expr.type_is<jule::Ref<_150a13110_Struct>>())) { goto _case_end_5689122064; }
			_case_begin_5689122064:;
			{
				return _67529_def.operator jule::Ref<_150a13110_Struct>()->_field_ident;
			}
			goto _match_end_5689121024;
			_case_end_5689122064:;
			if (!(_match_expr.type_is<jule::Ref<_150f1c930_Enum>>())) { goto _case_end_5689122176; }
			_case_begin_5689122176:;
			{
				return _67529_def.operator jule::Ref<_150f1c930_Enum>()->_field_ident;
			}
			goto _match_end_5689121024;
			_case_end_5689122176:;
			_case_begin_5689121504:;
			{
				return jule::Str("", 0);
			}
			goto _match_end_5689121024;
			_case_end_5689121504:;
			_match_end_5689121024:;
		}
	});
	jule::Str _68413_def1_ident = _67513_get_ident(_67231_def1);
	jule::Str _68513_def2_ident = _67513_get_ident(_67242_def2);
	jule::Str _68613_refers_to = _157e34dc0_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(_68413_def1_ident),jule::Any(_68513_def2_ident)}));
	_67258_message=((_150e75a70_str_repeat(jule::Str(" ", 1),4LL) + _68613_refers_to) + jule::Str("\n", 1)) + _67258_message;
}



inline jule::Bool _15177b070_TypeChecker::_method_are_equals_cross_cycle_data_0(jule::Any _69045_a,jule::Any _69053_b) {
	{
		auto _match_expr{ _69045_a };
		if (!(_match_expr.type_is<jule::Ref<_15177b070_TypeAlias>>())) { goto _case_end_5689148576; }
		_case_begin_5689148576:;
		{
			{
				auto _match_expr{ _69053_b };
				if (!(_match_expr.type_is<jule::Ref<_15177b070_TypeAlias>>())) { goto _case_end_5689150704; }
				_case_begin_5689150704:;
				{
					return (_69045_a.operator jule::Ref<_15177b070_TypeAlias>()).alloc == (_69053_b.operator jule::Ref<_15177b070_TypeAlias>()).alloc;
				}
				goto _match_end_5689148736;
				_case_end_5689150704:;
				_case_begin_5689150288:;
				{
					return false;
				}
				goto _match_end_5689148736;
				_case_end_5689150288:;
				_match_end_5689148736:;
			}
		}
		goto _match_end_5689147776;
		_case_end_5689148576:;
		_case_begin_5689148192:;
		{
			return false;
		}
		goto _match_end_5689147776;
		_case_end_5689148192:;
		_match_end_5689147776:;
	}
}

inline jule::Bool _15177b070_TypeChecker::_method_are_equals_cross_cycle_data_1(jule::Any _69045_a,jule::Any _69053_b) {
	{
		auto _match_expr{ _69045_a };
		if (!(_match_expr.type_is<jule::Ref<_150a13110_Struct>>())) { goto _case_end_5689163440; }
		_case_begin_5689163440:;
		{
			{
				auto _match_expr{ _69053_b };
				if (!(_match_expr.type_is<jule::Ref<_150a13110_Struct>>())) { goto _case_end_5689165568; }
				_case_begin_5689165568:;
				{
					return (_69045_a.operator jule::Ref<_150a13110_Struct>()).alloc == (_69053_b.operator jule::Ref<_150a13110_Struct>()).alloc;
				}
				goto _match_end_5689163600;
				_case_end_5689165568:;
				_case_begin_5689165152:;
				{
					return false;
				}
				goto _match_end_5689163600;
				_case_end_5689165152:;
				_match_end_5689163600:;
			}
		}
		goto _match_end_5689162640;
		_case_end_5689163440:;
		_case_begin_5689163056:;
		{
			return false;
		}
		goto _match_end_5689162640;
		_case_end_5689163056:;
		_match_end_5689162640:;
	}
}



inline jule::Bool _15177b070_TypeChecker::_method_check_cross_cycle(jule::Any _70332_decl,jule::Str& _70348_message) {
	{
		auto _match_expr{ _70332_decl };
		if (!(_match_expr.type_is<jule::Ref<_15177b070_TypeAlias>>())) { goto _case_end_5689133728; }
		_case_begin_5689133728:;
		{
			jule::Ref<_15177b070_TypeAlias> _70617_ta = _70332_decl.operator jule::Ref<_15177b070_TypeAlias>();
			{
				auto __julec_range_expr = _70617_ta->_field_refers;
				if (__julec_range_expr.begin() != __julec_range_expr.end()) {
					auto __julec_range_begin = __julec_range_expr.begin();
					const auto __julec_range_end = __julec_range_expr.end();
					jule::Any _15177b070_d = *__julec_range_begin;
					_iter_begin_5689136960:;
					{
						{
							auto _match_expr{ _15177b070_d };
							if (!(_match_expr.type_is<jule::Ref<_15177b070_TypeAlias>>())) { goto _case_end_5689138720; }
							_case_begin_5689138720:;
							{
								if ((*this)._method_are_equals_cross_cycle_data_0(_15177b070_d,(*this)._field_referencer->_field_owner)) {
									(*this)._method_push_cycle_error(jule::Any(_70617_ta),_15177b070_d,_70348_message);
									return false;
								}
							}
							goto _match_end_5689138256;
							_case_end_5689138720:;
							_match_end_5689138256:;
						}
						if ((!((*this)._method_check_cross_cycle(_15177b070_d,_70348_message)))) {
							(*this)._method_push_cycle_error(jule::Any(_70617_ta),_15177b070_d,_70348_message);
							return false;
						}
					}
					_iter_next_5689136960:;
					++__julec_range_begin;
					if (__julec_range_begin != __julec_range_end) { _15177b070_d = *__julec_range_begin; goto _iter_begin_5689136960; }
					_iter_end_5689136960:;
				}
			}
		}
		goto _match_end_5689133344;
		_case_end_5689133728:;
		if (!(_match_expr.type_is<jule::Ref<_150a13110_Struct>>())) { goto _case_end_5689133920; }
		_case_begin_5689133920:;
		{
			jule::Ref<_150a13110_Struct> _72317_s = _70332_decl.operator jule::Ref<_150a13110_Struct>();
			{
				auto __julec_range_expr = _72317_s->_field_depends;
				if (__julec_range_expr.begin() != __julec_range_expr.end()) {
					auto __julec_range_begin = __julec_range_expr.begin();
					const auto __julec_range_end = __julec_range_expr.end();
					jule::Ref<_150a13110_Struct> _15177b070_d = *__julec_range_begin;
					_iter_begin_5689138176:;
					{
						if ((*this)._method_are_equals_cross_cycle_data_1(jule::Any(_15177b070_d),(*this)._field_referencer->_field_owner)) {
							(*this)._method_push_cycle_error(jule::Any(_72317_s),jule::Any(_15177b070_d),_70348_message);
							return false;
						}
						if ((!((*this)._method_check_cross_cycle(jule::Any(_15177b070_d),_70348_message)))) {
							(*this)._method_push_cycle_error(jule::Any(_72317_s),jule::Any(_15177b070_d),_70348_message);
							return false;
						}
					}
					_iter_next_5689138176:;
					++__julec_range_begin;
					if (__julec_range_begin != __julec_range_end) { _15177b070_d = *__julec_range_begin; goto _iter_begin_5689138176; }
					_iter_end_5689138176:;
				}
			}
		}
		goto _match_end_5689133344;
		_case_end_5689133920:;
		_match_end_5689133344:;
	}
	return true;
}



inline jule::Bool _15177b070_TypeChecker::_method_check_illegal_cycles(jule::Ref<_1506406d0_IdentTypeDecl> _74539_ident,jule::Any _74566_decl) {
	jule::Bool _74579_ok = jule::Bool();
	if ((!(jule::real((*this)._field_referencer)))) {
		_74579_ok = true;
		return _74579_ok;
	}
	{
		auto _match_expr{ _74566_decl };
		if (!(_match_expr.type_is<jule::Ref<_150a13110_Struct>>())) { goto _case_end_5689172576; }
		_case_begin_5689172576:;
		{
			if ((*this)._field_not_plain) {
				_74579_ok = true;
				return _74579_ok;
			}
		}
		goto _match_end_5689171568;
		_case_end_5689172576:;
		_match_end_5689171568:;
	}
	if ((*this)._field_referencer->_field_owner == _74566_decl) {
		(*this)._method_push_err(_74539_ident->_field_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>({jule::Any((*this)._field_referencer->_field_ident)}));
		_74579_ok = false;
		return _74579_ok;
	}
	jule::Str _76417_message = jule::Str("", 0);
	if ((!((*this)._method_check_cross_cycle(_74566_decl,_76417_message)))) {
		jule::Str _76721_err_msg = _76417_message;
		_76417_message=jule::Str("", 0);
		(*this)._method_push_cycle_error((*this)._field_referencer->_field_owner,_74566_decl,_76417_message);
		_76721_err_msg=_76721_err_msg + _76417_message;
		(*this)._method_push_err(_74539_ident->_field_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>({jule::Any(_76721_err_msg)}));
		_74579_ok = false;
		return _74579_ok;
	}
	{
		auto _match_expr{ (*this)._field_referencer->_field_owner };
		if (!(_match_expr.type_is<jule::Ref<_15177b070_TypeAlias>>())) { goto _case_end_5689184304; }
		_case_begin_5689184304:;
		{
			{
				(*((*this)._field_referencer->_field_refs))=jule::append((*((*this)._field_referencer->_field_refs)),jule::Slice<jule::Any>({_74566_decl}));
			}
		}
		goto _match_end_5689182464;
		_case_end_5689184304:;
		if (!(_match_expr.type_is<jule::Ref<_150a13110_Struct>>())) { goto _case_end_5689184416; }
		_case_begin_5689184416:;
		{
			{
				auto _match_expr{ _74566_decl };
				if (!(_match_expr.type_is<jule::Ref<_150a13110_Struct>>())) { goto _case_end_5689190704; }
				_case_begin_5689190704:;
				{
					jule::Ref<_150a13110_Struct> _78225_s = (*this)._field_referencer->_field_owner.operator jule::Ref<_150a13110_Struct>();
					_78225_s->_field_depends=jule::append(_78225_s->_field_depends,jule::Slice<jule::Ref<_150a13110_Struct>>({_74566_decl.operator jule::Ref<_150a13110_Struct>()}));
				}
				goto _match_end_5689186720;
				_case_end_5689190704:;
				_match_end_5689186720:;
			}
		}
		goto _match_end_5689182464;
		_case_end_5689184416:;
		_match_end_5689182464:;
	}
	_74579_ok = true;
	return _74579_ok;
}



inline jule::Trait<_15177b070_Kind> _15177b070_TypeChecker::_method_from_type_alias(jule::Ref<_1506406d0_IdentTypeDecl> _79034_decl,jule::Ref<_15177b070_TypeAlias> _79060_ta) {
	if ((!((*this)._field_s->_method_is_accessible_define(_79060_ta->_field_public,_79060_ta->_field_token)))) {
		(*this)._method_push_err(_79034_decl->_field_token,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_79034_decl->_field_ident)}));
		return nullptr;
	}
	_79060_ta->_field_used=true;
	if (_79034_decl->_field_generics.len() > 0LL) {
		(*this)._method_push_err(_79034_decl->_field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_79034_decl->_field_ident)}));
		return nullptr;
	}
	jule::Bool _80317_ok = (*this)._method_check_illegal_cycles(_79034_decl,jule::Any(_79060_ta));
	if ((!(_80317_ok))) {
		return nullptr;
	}
	_80317_ok=(*this)._field_s->_method_check_type_alias_decl_kind(_79060_ta,(*this)._field_lookup);
	if ((!(_80317_ok))) {
		return nullptr;
	}
	jule::Ref<_15177b070_TypeKind> _81417_kind = _79060_ta->_field_kind->_field_kind->_method_clone();
	if (_79060_ta->_field_cpp_linked) {
		_81417_kind->_field_cpp_ident=_79060_ta->_field_ident;
	}
	return _81417_kind;
}



inline jule::Ref<_150f1c930_Enum> _15177b070_TypeChecker::_method_from_enum(jule::Ref<_1506406d0_IdentTypeDecl> _82328_decl,jule::Ref<_150f1c930_Enum> _82354_e) {
	if ((!((*this)._field_s->_method_is_accessible_define(_82354_e->_field_public,_82354_e->_field_token)))) {
		(*this)._method_push_err(_82328_decl->_field_token,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_82328_decl->_field_ident)}));
		return jule::new_ref<_150f1c930_Enum>();
	}
	if (_82328_decl->_field_generics.len() > 0LL) {
		(*this)._method_push_err(_82328_decl->_field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_82328_decl->_field_ident)}));
		return jule::new_ref<_150f1c930_Enum>();
	}
	return _82354_e;
}



inline jule::Bool _15177b070_TypeChecker::_method_check_struct_ins(jule::Ref<_150a13110_StructIns> _83739_ins,_150640f50_Token _83756_error_token) {
	jule::Bool _83778_ok = jule::Bool();
	if (_83739_ins->_field_checked) {
		_83778_ok = true;
		return _83778_ok;
	}
	_83739_ins->_field_checked=true;
	if (jule::real((*this)._field_referencer) && ((*this)._field_referencer->_field_owner == _83739_ins->_field_decl)) {
		_83778_ok = true;
		return _83778_ok;
	}
	jule::Ref<_15128c4d0_SymbolTable> _85117_old_file = (*this)._field_s->_field_file;
	__JULE_DEFER({
		(*this)._field_s->_method_set_current_file(_85117_old_file);
	});
	jule::Ref<_15128c4d0_SymbolTable> _85417_f = _1510c9150_find_file((*this)._field_s->_field_files,_83739_ins->_field_decl->_field_token._field_file);
	if (jule::real(_85417_f)) {
		(*this)._field_s->_method_set_current_file(_85417_f);
	}
	jule::Ref<_15177b070_Referencer> _85917_referencer = jule::new_struct<_15177b070_Referencer>(new( std::nothrow ) _15177b070_Referencer(_83739_ins->_field_decl->_field_ident,jule::Any(_83739_ins->_field_decl),nullptr));
	jule::Slice<jule::Ref<_15177b070_TypeAlias>> _86417_generics = jule::Slice<jule::Ref<_15177b070_TypeAlias>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_83739_ins->_field_generics.len())));
	{
		auto __julec_range_expr = _83739_ins->_field_generics;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _15177b070_i = 0;
			jule::Ref<_15177b070_TypeKind> _15177b070_g = *__julec_range_begin;
			_iter_begin_5689239808:;
			{
				_86417_generics[static_cast<jule::Int>(_15177b070_i)]=jule::new_struct<_15177b070_TypeAlias>(new( std::nothrow ) _15177b070_TypeAlias(jule::Ref<_1506406d0_ScopeTree>(),jule::Bool(),jule::Bool(),jule::Bool(),_150640f50_Token(),_83739_ins->_field_decl->_field_generics[static_cast<jule::Int>(_15177b070_i)]->_field_ident,jule::new_struct<_15177b070_TypeSymbol>(new( std::nothrow ) _15177b070_TypeSymbol(jule::Ref<_1506406d0_TypeDecl>(),_15177b070_g)),jule::Str(),jule::Slice<jule::Any>()));
			}
			_iter_next_5689239808:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_15177b070_i; _15177b070_g = *__julec_range_begin; goto _iter_begin_5689239808; }
			_iter_end_5689239808:;
		}
	}
	jule::Ref<_15128c4d0_SymbolTable> _87417_old_sema_file = _83739_ins->_field_decl->_field_sema->_field_file;
	__JULE_DEFER({
		_83739_ins->_field_decl->_field_sema->_method_set_current_file(_87417_old_sema_file);
	});
	_15177b070_TypeChecker _87717_tc = _15177b070_TypeChecker(_83739_ins->_field_decl->_field_sema,_83739_ins->_field_decl->_field_sema,_85917_referencer,_150640f50_Token(),jule::Slice<jule::Ref<_1506406d0_GenericDecl>>(),_86417_generics,jule::Bool());
	{
		auto __julec_range_expr = _83739_ins->_field_fields;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_150a13110_FieldIns> _15177b070_f = *__julec_range_begin;
			_iter_begin_5689249760:;
			{
				jule::Ref<_15177b070_TypeKind> _88621_kind = _87717_tc._method_check_decl(_15177b070_f->_field_decl->_field_kind->_field_decl);
				_83778_ok=jule::real(_88621_kind);
				if ((jule::real(_83739_ins->_field_decl->_field_sema) && ((*this)._field_s != _83739_ins->_field_decl->_field_sema)) && (_83739_ins->_field_decl->_field_sema->_field_errors.len() > 0LL)) {
					(*this)._field_s->_field_errors=jule::append((*this)._field_s->_field_errors,_83739_ins->_field_decl->_field_sema->_field_errors);
				}
				if ((!(_83778_ok))) {
					_83778_ok = false;
					return _83778_ok;
				}
				_15177b070_f->_field_kind=_88621_kind;
				if (_15177b070_is_mut(_15177b070_f->_field_kind)) {
					_83739_ins->_field_has_mut=true;
					(*this)._field_s->_method_check_struct_ins_derive_clone(_83739_ins);
				}
			}
			_iter_next_5689249760:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _15177b070_f = *__julec_range_begin; goto _iter_begin_5689249760; }
			_iter_end_5689249760:;
		}
	}
	if (_83739_ins->_field_generics.len() > 0LL) {
		{
			auto __julec_range_expr = _83739_ins->_field_methods;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_15081bcd0_Fn> _15177b070_m = *__julec_range_begin;
				_iter_begin_5689262784:;
				{
					if (_15177b070_m->_field_generics.len() > 0LL) {
						goto _iter_next_5689262784;
					}
					(*this)._field_s->_method_check_type_method(_83739_ins,_15177b070_m);
				}
				_iter_next_5689262784:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _15177b070_m = *__julec_range_begin; goto _iter_begin_5689262784; }
				_iter_end_5689262784:;
			}
		}
	}
	_83778_ok = true;
	return _83778_ok;
}



inline void _15177b070_TypeChecker::_method_append_used_struct_reference(jule::Ref<_150a13110_Struct> _91851_s) {
	if ((!(jule::real((*this)._field_referencer)))) {
		return;
	}
	{
		auto _match_expr{ (*this)._field_referencer->_field_owner };
		if (!(_match_expr.type_is<jule::Ref<_150a13110_Struct>>())) { goto _case_end_5689272400; }
		_case_begin_5689272400:;
		{
			jule::Ref<_150a13110_Struct> _92521_ref_s = (*this)._field_referencer->_field_owner.operator jule::Ref<_150a13110_Struct>();
			if ((!(_92521_ref_s->_method_is_uses(_91851_s)))) {
				_92521_ref_s->_field_uses=jule::append(_92521_ref_s->_field_uses,jule::Slice<jule::Ref<_150a13110_Struct>>({_91851_s}));
			}
		}
		goto _match_end_5689271808;
		_case_end_5689272400:;
		_match_end_5689271808:;
	}
}



inline jule::Ref<_150a13110_StructIns> _15177b070_TypeChecker::_method_from_struct(jule::Ref<_1506406d0_IdentTypeDecl> _93234_decl,jule::Ref<_150a13110_Struct> _93260_s) {
	if ((!((*this)._field_s->_method_is_accessible_define(_93260_s->_field_public,_93260_s->_field_token)))) {
		(*this)._method_push_err(_93234_decl->_field_token,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_93234_decl->_field_ident)}));
		return jule::new_ref<_150a13110_StructIns>();
	}
	if ((*this)._field_ignore_generics.len() > 0LL) {
		return jule::new_ref<_150a13110_StructIns>();
	}
	jule::Bool _94317_ok = (*this)._field_not_plain || (*this)._method_check_illegal_cycles(_93234_decl,jule::Any(_93260_s));
	if ((!(_94317_ok))) {
		return jule::new_ref<_150a13110_StructIns>();
	}
	(*this)._method_append_used_struct_reference(_93260_s);
	jule::Ref<_150a13110_StructIns> _94917_ins = _93260_s->_method_instance();
	_94917_ins->_field_generics=jule::Slice<jule::Ref<_15177b070_TypeKind>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_93234_decl->_field_generics.len())));
	jule::Ref<_15177b070_Referencer> _95117_referencer = (*this)._field_referencer;
	jule::drop((*this)._field_referencer);
	{
		auto __julec_range_expr = _93234_decl->_field_generics;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _15177b070_i = 0;
			jule::Ref<_1506406d0_TypeDecl> _15177b070_g = *__julec_range_begin;
			_iter_begin_5689294784:;
			{
				jule::Ref<_15177b070_TypeKind> _95421_kind = (*this)._method_build(_15177b070_g->_field_kind);
				if ((!(jule::real(_95421_kind)))) {
					_94317_ok=false;
					goto _iter_next_5689294784;
				}
				_94917_ins->_field_generics[static_cast<jule::Int>(_15177b070_i)]=_95421_kind;
			}
			_iter_next_5689294784:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_15177b070_i; _15177b070_g = *__julec_range_begin; goto _iter_begin_5689294784; }
			_iter_end_5689294784:;
		}
	}
	(*this)._field_referencer=_95117_referencer;
	if ((!(_94317_ok))) {
		return jule::new_ref<_150a13110_StructIns>();
	}
	_94317_ok=(*this)._field_s->_method_check_generic_quantity(static_cast<jule::I64>(_94917_ins->_field_decl->_field_generics.len()),static_cast<jule::I64>(_94917_ins->_field_generics.len()),_93234_decl->_field_token);
	if ((!(_94317_ok))) {
		return jule::new_ref<_150a13110_StructIns>();
	}
	jule::Ref<_150a13110_StructIns> _97317_exist_instance = _93260_s->_method_append_instance(_94917_ins);
	if (jule::real(_97317_exist_instance)) {
		return _97317_exist_instance;
	}
	_94317_ok=(*this)._method_check_struct_ins(_94917_ins,_93234_decl->_field_token);
	if ((!(_94317_ok))) {
		return jule::new_ref<_150a13110_StructIns>();
	}
	return _94917_ins;
}



inline jule::Trait<_15177b070_Kind> _15177b070_TypeChecker::_method_get_def(jule::Ref<_1506406d0_IdentTypeDecl> _98830_decl) {
	{
		auto __julec_range_expr = (*this)._field_ignore_generics;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_1506406d0_GenericDecl> _15177b070_g = *__julec_range_begin;
			_iter_begin_5689313856:;
			{
				if (_15177b070_g->_field_ident == _98830_decl->_field_ident) {
					return _15177b070_build_prim_type(_15177b070_g->_field_ident);
				}
			}
			_iter_next_5689313856:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _15177b070_g = *__julec_range_begin; goto _iter_begin_5689313856; }
			_iter_end_5689313856:;
		}
	}
	{
		auto __julec_range_expr = (*this)._field_use_generics;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_15177b070_TypeAlias> _15177b070_g = *__julec_range_begin;
			_iter_begin_5689316448:;
			{
				if (_15177b070_g->_field_ident == _98830_decl->_field_ident) {
					jule::Ref<_150a13110_StructIns> _99725_st = _15177b070_g->_field_kind->_field_kind->_method_strct();
					if (jule::real(_99725_st)) {
						jule::Bool _99925_ok = (*this)._method_check_illegal_cycles(_98830_decl,jule::Any(_99725_st->_field_decl));
						if ((!(_99925_ok))) {
							return nullptr;
						}
					}
					return _15177b070_g->_field_kind->_field_kind->_field_kind;
				}
			}
			_iter_next_5689316448:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _15177b070_g = *__julec_range_begin; goto _iter_begin_5689316448; }
			_iter_end_5689316448:;
		}
	}
	if ((!(_98830_decl->_field_cpp_linked))) {
		jule::Ref<_150f1c930_Enum> _100921_e = (*this)._field_lookup.get()._method_find_enum(_98830_decl->_field_ident);
		if (jule::real(_100921_e)) {
			return (*this)._method_from_enum(_98830_decl,_100921_e);
		}
		jule::Ref<_150f166e0_Trait> _101421_t = (*this)._field_lookup.get()._method_find_trait(_98830_decl->_field_ident);
		if ((!(jule::real(_101421_t)))) {
			_101421_t=_1518a9420_find_builtin_trait(_98830_decl->_field_ident);
		}
		if (jule::real(_101421_t)) {
			if ((!((*this)._field_s->_method_is_accessible_define(_101421_t->_field_public,_101421_t->_field_token)))) {
				(*this)._method_push_err(_98830_decl->_field_token,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_98830_decl->_field_ident)}));
				return nullptr;
			}
			if (_98830_decl->_field_generics.len() > 0LL) {
				(*this)._method_push_err(_98830_decl->_field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_98830_decl->_field_ident)}));
				return nullptr;
			}
			return _101421_t;
		}
	}
	jule::Ref<_150a13110_Struct> _103217_s = (*this)._field_lookup.get()._method_find_struct(_98830_decl->_field_ident,_98830_decl->_field_cpp_linked);
	if (jule::real(_103217_s)) {
		return (*this)._method_from_struct(_98830_decl,_103217_s);
	}
	jule::Ref<_15177b070_TypeAlias> _103717_ta = (*this)._field_lookup.get()._method_find_type_alias(_98830_decl->_field_ident,_98830_decl->_field_cpp_linked);
	if ((!(jule::real(_103717_ta)))) {
		_103717_ta=_1518a9420_find_builtin_type_alias(_98830_decl->_field_ident);
	}
	if (jule::real(_103717_ta)) {
		return (*this)._method_from_type_alias(_98830_decl,_103717_ta);
	}
	(*this)._method_push_err(_98830_decl->_field_token,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_98830_decl->_field_ident)}));
	return nullptr;
}



inline jule::Trait<_15177b070_Kind> _15177b070_TypeChecker::_method_build_ident(jule::Ref<_1506406d0_IdentTypeDecl> _104934_decl) {
	{
		if (!((_15177b070_is_prim(_104934_decl->_field_ident)))) { goto _case_end_5689351760; }
		_case_begin_5689351760:;
		{
			return (*this)._method_build_prim(_104934_decl);
		}
		goto _match_end_5689349872;
		_case_end_5689351760:;
		_case_begin_5689350016:;
		{
			return (*this)._method_get_def(_104934_decl);
		}
		goto _match_end_5689349872;
		_case_end_5689350016:;
		_match_end_5689349872:;
	}
}



inline jule::Ref<_15177b070_Ref> _15177b070_TypeChecker::_method_build_ref_from_type(jule::Ref<_15177b070_TypeKind> _105642_elem) {
	{
		if (!(((!(jule::real(_105642_elem)))))) { goto _case_end_5689354448; }
		_case_begin_5689354448:;
		{
			return jule::new_ref<_15177b070_Ref>();
		}
		goto _match_end_5689354176;
		_case_end_5689354448:;
		if (!((jule::real(_105642_elem->_method_strct())))) { goto _case_end_5689354560; }
		_case_begin_5689354560:;
		{
			jule::Ref<_150a13110_StructIns> _106317_s = _105642_elem->_method_strct();
			if (jule::real(_106317_s->_field_decl) && _106317_s->_field_decl->_field_cpp_linked) {
				(*this)._method_push_err((*this)._field_error_token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>({}));
				return jule::new_ref<_15177b070_Ref>();
			}
		}
		goto _match_end_5689354176;
		_case_end_5689354560:;
		if (!((jule::real(_105642_elem->_method_ref())))) { goto _case_end_5689354688; }
		_case_begin_5689354688:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("references cannot reference to another reference", 48),jule::Slice<jule::Any>({}));
			return jule::new_ref<_15177b070_Ref>();
		}
		goto _match_end_5689354176;
		_case_end_5689354688:;
		if (!((jule::real(_105642_elem->_method_ptr())))) { goto _case_end_5689354816; }
		_case_begin_5689354816:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("references cannot reference to pointer", 38),jule::Slice<jule::Any>({}));
			return jule::new_ref<_15177b070_Ref>();
		}
		goto _match_end_5689354176;
		_case_end_5689354816:;
		if (!((jule::real(_105642_elem->_method_enm())))) { goto _case_end_5689354944; }
		_case_begin_5689354944:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("references cannot reference to enum", 35),jule::Slice<jule::Any>({}));
			return jule::new_ref<_15177b070_Ref>();
		}
		goto _match_end_5689354176;
		_case_end_5689354944:;
		if (!((jule::real(_105642_elem->_method_arr())))) { goto _case_end_5689355072; }
		_case_begin_5689355072:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("references cannot reference to array", 36),jule::Slice<jule::Any>({}));
			return jule::new_ref<_15177b070_Ref>();
		}
		goto _match_end_5689354176;
		_case_end_5689355072:;
		_match_end_5689354176:;
	}
	return jule::new_struct<_15177b070_Ref>(new( std::nothrow ) _15177b070_Ref(_105642_elem));
}



inline jule::Ref<_15177b070_Ref> _15177b070_TypeChecker::_method_build_ref(jule::Ref<_1506406d0_RefTypeDecl> _109132_decl) {
	jule::Bool _109213_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_109213_not_plain;
	});
	jule::Ref<_15177b070_TypeKind> _109617_elem = (*this)._method_check_decl(_109132_decl->_field_elem);
	return (*this)._method_build_ref_from_type(_109617_elem);
}



inline jule::Ref<_15177b070_Ptr> _15177b070_TypeChecker::_method_build_ptr_from_type(jule::Ref<_15177b070_TypeKind> _110042_elem) {
	{
		if (!(((!(jule::real(_110042_elem)))))) { goto _case_end_5689379280; }
		_case_begin_5689379280:;
		{
			return jule::new_ref<_15177b070_Ptr>();
		}
		goto _match_end_5689379056;
		_case_end_5689379280:;
		if (!((jule::real(_110042_elem->_method_ref())))) { goto _case_end_5689379408; }
		_case_begin_5689379408:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("pointers cannot point to reference", 34),jule::Slice<jule::Any>({}));
			return jule::new_ref<_15177b070_Ptr>();
		}
		goto _match_end_5689379056;
		_case_end_5689379408:;
		if (!((jule::real(_110042_elem->_method_enm())))) { goto _case_end_5689379536; }
		_case_begin_5689379536:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("pointers cannot point to enum", 29),jule::Slice<jule::Any>({}));
			return jule::new_ref<_15177b070_Ptr>();
		}
		goto _match_end_5689379056;
		_case_end_5689379536:;
		if (!((jule::real(_110042_elem->_method_arr()) && _110042_elem->_method_arr()->_field_auto))) { goto _case_end_5689379664; }
		_case_begin_5689379664:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>({}));
			return jule::new_ref<_15177b070_Ptr>();
		}
		goto _match_end_5689379056;
		_case_end_5689379664:;
		_match_end_5689379056:;
	}
	return jule::new_struct<_15177b070_Ptr>(new( std::nothrow ) _15177b070_Ptr(_110042_elem));
}



inline jule::Ref<_15177b070_Ptr> _15177b070_TypeChecker::_method_build_ptr(jule::Ref<_1506406d0_PtrTypeDecl> _112432_decl) {
	jule::Bool _112513_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_112513_not_plain;
	});
	jule::Ref<_15177b070_TypeKind> _112917_elem = jule::new_ref<_15177b070_TypeKind>();
	if ((!(_112432_decl->_method_is_unsafe()))) {
		_112917_elem=(*this)._method_check_decl(_112432_decl->_field_elem);
		return (*this)._method_build_ptr_from_type(_112917_elem);
	}
	return jule::new_struct<_15177b070_Ptr>(new( std::nothrow ) _15177b070_Ptr(_112917_elem));
}



inline jule::Ref<_15177b070_Slc> _15177b070_TypeChecker::_method_build_slc(jule::Ref<_1506406d0_SlcTypeDecl> _114132_decl) {
	jule::Bool _114213_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_114213_not_plain;
	});
	jule::Ref<_15177b070_TypeKind> _114617_elem = (*this)._method_check_decl(_114132_decl->_field_elem);
	{
		if (!(((!(jule::real(_114617_elem)))))) { goto _case_end_5689404240; }
		_case_begin_5689404240:;
		{
			return jule::new_ref<_15177b070_Slc>();
		}
		goto _match_end_5689404032;
		_case_end_5689404240:;
		if (!((jule::real(_114617_elem->_method_arr()) && _114617_elem->_method_arr()->_field_auto))) { goto _case_end_5689404352; }
		_case_begin_5689404352:;
		{
			(*this)._method_push_err(_114132_decl->_field_elem->_field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>({}));
			return jule::new_ref<_15177b070_Slc>();
		}
		goto _match_end_5689404032;
		_case_end_5689404352:;
		_match_end_5689404032:;
	}
	return jule::new_struct<_15177b070_Slc>(new( std::nothrow ) _15177b070_Slc(_114617_elem));
}



inline jule::Ref<_15177b070_Arr> _15177b070_TypeChecker::_method_build_arr(jule::Ref<_1506406d0_ArrTypeDecl> _116332_decl) {
	jule::Bool _116413_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_116413_not_plain;
	});
	jule::Int _116817_n = 0LL;
	if ((!(_116332_decl->_method_auto_sized()))) {
		jule::Ref<_151290fd0_Data> _117121_size = (*this)._field_s->_method_eval(_116332_decl->_field_size,(*this)._field_lookup);
		if ((!(jule::real(_117121_size)))) {
			return jule::new_ref<_15177b070_Arr>();
		}
		if ((!(_117121_size->_method_is_const()))) {
			(*this)._method_push_err(_116332_decl->_field_elem->_field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>({}));
			return jule::new_ref<_15177b070_Arr>();
		} else if ((!(_1519b1410_is_int(_117121_size->_field_kind->_method_prim()->_field_kind)))) {
			(*this)._method_push_err(_116332_decl->_field_elem->_field_token,jule::Str("array size must be integer", 26),jule::Slice<jule::Any>({}));
			return jule::new_ref<_15177b070_Arr>();
		}
		_116817_n=static_cast<jule::Int>(_117121_size->_field_constant->_method_as_i64());
		if (_116817_n < 0LL) {
			(*this)._method_push_err(_116332_decl->_field_elem->_field_token,jule::Str("array size must be positive integer", 35),jule::Slice<jule::Any>({}));
			return jule::new_ref<_15177b070_Arr>();
		}
	}
	jule::Ref<_15177b070_TypeKind> _119117_elem = (*this)._method_check_decl(_116332_decl->_field_elem);
	{
		if (!(((!(jule::real(_119117_elem)))))) { goto _case_end_5689430016; }
		_case_begin_5689430016:;
		{
			return jule::new_ref<_15177b070_Arr>();
		}
		goto _match_end_5689428928;
		_case_end_5689430016:;
		if (!((jule::real(_119117_elem->_method_arr()) && _119117_elem->_method_arr()->_field_auto))) { goto _case_end_5689430128; }
		_case_begin_5689430128:;
		{
			(*this)._method_push_err(_116332_decl->_field_elem->_field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>({}));
			return jule::new_ref<_15177b070_Arr>();
		}
		goto _match_end_5689428928;
		_case_end_5689430128:;
		_match_end_5689428928:;
	}
	return jule::new_struct<_15177b070_Arr>(new( std::nothrow ) _15177b070_Arr(_116332_decl->_method_auto_sized(),_116817_n,_119117_elem));
}



inline jule::Ref<_15177b070_Map> _15177b070_TypeChecker::_method_build_map(jule::Ref<_1506406d0_MapTypeDecl> _121032_decl) {
	jule::Bool _121113_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_121113_not_plain;
	});
	jule::Ref<_15177b070_TypeKind> _121517_key = (*this)._method_check_decl(_121032_decl->_field_key);
	if ((!(jule::real(_121517_key)))) {
		return jule::new_ref<_15177b070_Map>();
	}
	jule::Ref<_15177b070_TypeKind> _122017_val = (*this)._method_check_decl(_121032_decl->_field_val);
	if ((!(jule::real(_122017_val)))) {
		return jule::new_ref<_15177b070_Map>();
	}
	if (jule::real(_122017_val->_method_enm())) {
		(*this)._method_push_err(_121032_decl->_field_val->_field_token,jule::Str("maps do not support enums as map key type", 41),jule::Slice<jule::Any>({}));
	}
	return jule::new_struct<_15177b070_Map>(new( std::nothrow ) _15177b070_Map(_121517_key,_122017_val));
}



inline jule::Ref<_15177b070_Tuple> _15177b070_TypeChecker::_method_build_tuple(jule::Ref<_1506406d0_TupleTypeDecl> _123434_decl) {
	jule::Slice<jule::Ref<_15177b070_TypeKind>> _123517_types = jule::Slice<jule::Ref<_15177b070_TypeKind>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_123434_decl->_field_types.len())));
	{
		auto __julec_range_expr = _123434_decl->_field_types;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _15177b070_i = 0;
			jule::Ref<_1506406d0_TypeDecl> _15177b070_t = *__julec_range_begin;
			_iter_begin_5689453088:;
			{
				jule::Ref<_15177b070_TypeKind> _123721_kind = (*this)._method_check_decl(_15177b070_t);
				if ((!(jule::real(_123721_kind)))) {
					return jule::new_ref<_15177b070_Tuple>();
				}
				_123517_types[static_cast<jule::Int>(_15177b070_i)]=_123721_kind;
			}
			_iter_next_5689453088:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_15177b070_i; _15177b070_t = *__julec_range_begin; goto _iter_begin_5689453088; }
			_iter_end_5689453088:;
		}
	}
	return jule::new_struct<_15177b070_Tuple>(new( std::nothrow ) _15177b070_Tuple(_123517_types));
}



inline jule::Bool _15177b070_TypeChecker::_method_check_fn_types(jule::Ref<_15081bcd0_FnIns> _124737_f) {
	jule::Bool _124750_ok = jule::Bool();
	{
		auto __julec_range_expr = _124737_f->_field_params;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_15081bcd0_ParamIns> _15177b070_p = *__julec_range_begin;
			_iter_begin_5689461440:;
			{
				_15177b070_p->_field_kind=(*this)._method_build(_15177b070_p->_field_decl->_field_kind->_field_decl->_field_kind);
				_124750_ok=jule::real(_15177b070_p->_field_kind);
				if ((!(_124750_ok))) {
					_124750_ok = false;
					return _124750_ok;
				}
			}
			_iter_next_5689461440:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _15177b070_p = *__julec_range_begin; goto _iter_begin_5689461440; }
			_iter_end_5689461440:;
		}
	}
	if ((!(_124737_f->_field_decl->_method_is_void()))) {
		_124737_f->_field_result=(*this)._method_build(_124737_f->_field_decl->_field_result->_field_kind->_field_decl->_field_kind);
		_124750_ok = jule::real(_124737_f->_field_result);
		return _124750_ok;
	}
	_124750_ok = true;
	return _124750_ok;
}



inline jule::Ref<_15081bcd0_FnIns> _15177b070_TypeChecker::_method_build_fn(jule::Ref<_1506406d0_FnDecl> _126431_decl) {
	if (_126431_decl->_field_generics.len() > 0LL) {
		(*this)._method_push_err(_126431_decl->_field_token,jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>({}));
		return jule::new_ref<_15081bcd0_FnIns>();
	}
	jule::Ref<_15081bcd0_Fn> _127017_f = _150e75a70_build_fn(_126431_decl);
	jule::Ref<_15081bcd0_FnIns> _127117_ins = _127017_f->_method_instance_force();
	_127117_ins->_field_anon=true;
	jule::Bool _127413_ok = (*this)._method_check_fn_types(_127117_ins);
	if ((!(_127413_ok))) {
		return jule::new_ref<_15081bcd0_FnIns>();
	}
	return _127117_ins;
}



inline jule::Trait<_15177b070_Kind> _15177b070_TypeChecker::_method_build_by_std_namespace(jule::Ref<_1506406d0_NamespaceTypeDecl> _128245_decl) {
	jule::Str _128313_path = _15177b070_build_link_path_by_tokens(_128245_decl->_field_idents);
	jule::Ref<_150f26340_ImportInfo> _128417_imp = (*this)._field_lookup.get()._method_select_package(jule::Fn<jule::Bool(jule::Ref<_150f26340_ImportInfo>)>([=](jule::Ref<_150f26340_ImportInfo> _128453_imp) mutable -> jule::Bool {
		return _128453_imp->_field_std && (_128453_imp->_field_link_path == _128313_path);
	}));
	if ((!(jule::real(_128417_imp))) || (!(_128417_imp->_method_is_lookupable(jule::Str("self", 4))))) {
		(*this)._method_push_err(_128245_decl->_field_idents[0LL],jule::Str("namespace not exist: @", 22),jule::Slice<jule::Any>({jule::Any(_128313_path)}));
		return nullptr;
	}
	jule::Trait<_1517fbd60_Lookup> _129317_lookup = (*this)._field_lookup;
	(*this)._field_lookup=_128417_imp;
	jule::Trait<_15177b070_Kind> _129617_kind = (*this)._method_build_ident(_128245_decl->_field_kind);
	(*this)._field_lookup=_129317_lookup;
	return _129617_kind;
}



inline jule::Trait<_15177b070_Kind> _15177b070_TypeChecker::_method_build_by_namespace(jule::Ref<_1506406d0_NamespaceTypeDecl> _130341_decl) {
	_150640f50_Token _130413_token = _130341_decl->_field_idents[0LL];
	if (_130413_token._field_kind == jule::Str("std", 3)) {
		return (*this)._method_build_by_std_namespace(_130341_decl);
	}
	(*this)._method_push_err(_130413_token,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_130413_token._field_kind)}));
	return nullptr;
}



inline jule::Ref<_15177b070_TypeKind> _15177b070_TypeChecker::_method_build(jule::Any _131328_decl_kind) {
	jule::Trait<_15177b070_Kind> _131417_kind = nullptr;
	{
		auto _match_expr{ _131328_decl_kind };
		if (!(_match_expr.type_is<jule::Ref<_15177b070_TypeKind>>())) { goto _case_end_5689506800; }
		_case_begin_5689506800:;
		{
			_131417_kind=_131328_decl_kind.operator jule::Ref<_15177b070_TypeKind>();
		}
		goto _match_end_5689502928;
		_case_end_5689506800:;
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_IdentTypeDecl>>())) { goto _case_end_5689506400; }
		_case_begin_5689506400:;
		{
			jule::Trait<_15177b070_Kind> _132121_t = (*this)._method_build_ident(_131328_decl_kind.operator jule::Ref<_1506406d0_IdentTypeDecl>());
			if (_132121_t != nullptr) {
				_131417_kind=_132121_t;
			}
		}
		goto _match_end_5689502928;
		_case_end_5689506400:;
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_RefTypeDecl>>())) { goto _case_end_5689506960; }
		_case_begin_5689506960:;
		{
			jule::Ref<_15177b070_Ref> _132721_t = (*this)._method_build_ref(_131328_decl_kind.operator jule::Ref<_1506406d0_RefTypeDecl>());
			if (jule::real(_132721_t)) {
				_131417_kind=_132721_t;
			}
		}
		goto _match_end_5689502928;
		_case_end_5689506960:;
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_PtrTypeDecl>>())) { goto _case_end_5689503760; }
		_case_begin_5689503760:;
		{
			jule::Ref<_15177b070_Ptr> _133321_t = (*this)._method_build_ptr(_131328_decl_kind.operator jule::Ref<_1506406d0_PtrTypeDecl>());
			if (jule::real(_133321_t)) {
				_131417_kind=_133321_t;
			}
		}
		goto _match_end_5689502928;
		_case_end_5689503760:;
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_SlcTypeDecl>>())) { goto _case_end_5689503872; }
		_case_begin_5689503872:;
		{
			jule::Ref<_15177b070_Slc> _133921_t = (*this)._method_build_slc(_131328_decl_kind.operator jule::Ref<_1506406d0_SlcTypeDecl>());
			if (jule::real(_133921_t)) {
				_131417_kind=_133921_t;
			}
		}
		goto _match_end_5689502928;
		_case_end_5689503872:;
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_ArrTypeDecl>>())) { goto _case_end_5689503984; }
		_case_begin_5689503984:;
		{
			jule::Ref<_15177b070_Arr> _134521_t = (*this)._method_build_arr(_131328_decl_kind.operator jule::Ref<_1506406d0_ArrTypeDecl>());
			if (jule::real(_134521_t)) {
				_131417_kind=_134521_t;
			}
		}
		goto _match_end_5689502928;
		_case_end_5689503984:;
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_MapTypeDecl>>())) { goto _case_end_5689505792; }
		_case_begin_5689505792:;
		{
			jule::Ref<_15177b070_Map> _135121_t = (*this)._method_build_map(_131328_decl_kind.operator jule::Ref<_1506406d0_MapTypeDecl>());
			if (jule::real(_135121_t)) {
				_131417_kind=_135121_t;
			}
		}
		goto _match_end_5689502928;
		_case_end_5689505792:;
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_TupleTypeDecl>>())) { goto _case_end_5689505904; }
		_case_begin_5689505904:;
		{
			jule::Ref<_15177b070_Tuple> _135721_t = (*this)._method_build_tuple(_131328_decl_kind.operator jule::Ref<_1506406d0_TupleTypeDecl>());
			if (jule::real(_135721_t)) {
				_131417_kind=_135721_t;
			}
		}
		goto _match_end_5689502928;
		_case_end_5689505904:;
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_FnDecl>>())) { goto _case_end_5689506016; }
		_case_begin_5689506016:;
		{
			jule::Ref<_15081bcd0_FnIns> _136321_t = (*this)._method_build_fn(_131328_decl_kind.operator jule::Ref<_1506406d0_FnDecl>());
			if (jule::real(_136321_t)) {
				_131417_kind=_136321_t;
			}
		}
		goto _match_end_5689502928;
		_case_end_5689506016:;
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_NamespaceTypeDecl>>())) { goto _case_end_5689506128; }
		_case_begin_5689506128:;
		{
			jule::Trait<_15177b070_Kind> _136921_t = (*this)._method_build_by_namespace(_131328_decl_kind.operator jule::Ref<_1506406d0_NamespaceTypeDecl>());
			if (_136921_t != nullptr) {
				_131417_kind=_136921_t;
			}
		}
		goto _match_end_5689502928;
		_case_end_5689506128:;
		_case_begin_5689503344:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("invalid data-type", 17),jule::Slice<jule::Any>({}));
			return jule::new_ref<_15177b070_TypeKind>();
		}
		goto _match_end_5689502928;
		_case_end_5689503344:;
		_match_end_5689502928:;
	}
	if (_131417_kind == nullptr) {
		return jule::new_ref<_15177b070_TypeKind>();
	}
	{
		auto _match_expr{ _131417_kind };
		if (!(_match_expr.type_is<jule::Ref<_15177b070_TypeKind>>())) { goto _case_end_5689536528; }
		_case_begin_5689536528:;
		{
			return _131417_kind.operator jule::Ref<_15177b070_TypeKind>();
		}
		goto _match_end_5689535072;
		_case_end_5689536528:;
		_case_begin_5689535840:;
		{
			return jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_131417_kind));
		}
		goto _match_end_5689535072;
		_case_end_5689535840:;
		_match_end_5689535072:;
	}
}



inline jule::Ref<_15177b070_TypeKind> _15177b070_TypeChecker::_method_check_decl(jule::Ref<_1506406d0_TypeDecl> _139433_decl) {
	_150640f50_Token _139617_error_token = (*this)._field_error_token;
	(*this)._field_error_token=_139433_decl->_field_token;
	jule::Ref<_15177b070_TypeKind> _139917_kind = (*this)._method_build(_139433_decl->_field_kind);
	(*this)._field_error_token=_139617_error_token;
	return _139917_kind;
}



inline void _15177b070_TypeChecker::_method_check(jule::Ref<_15177b070_TypeSymbol> _140528_t) {
	if ((!(jule::real(_140528_t->_field_decl)))) {
		return;
	}
	jule::Ref<_15177b070_TypeKind> _141017_kind = (*this)._method_check_decl(_140528_t->_field_decl);
	if ((!(jule::real(_141017_kind)))) {
		_140528_t->_method_remove_kind();
		return;
	}
	_140528_t->_field_kind=_141017_kind;
}







std::ostream &operator<<(std::ostream &_Stream, const _15177b070_TypeChecker &_Src) {
	_Stream << "TypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "ignore_generics:" << _Src._field_ignore_generics << ", ";
	_Stream << "use_generics:" << _Src._field_use_generics << ", ";
	_Stream << "not_plain:" << _Src._field_not_plain;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _15177b070_TypeAlias &_Src) {
	_Stream << "TypeAlias{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "refers:" << _Src._field_refers;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _151290fd0_BinopSolver::_method_check_type_compatibility(void) {
	_1510d19a0_TypeCompatibilityChecker _329017_tcc = _1510d19a0_TypeCompatibilityChecker((*this)._field_e->_field_s,(*this)._field_l->_field_kind,(*this)._field_r->_field_kind,(*this)._field_op,jule::Bool(),true,jule::Bool());
	return _329017_tcc._method_check();
}



inline jule::Ref<_151290fd0_Data> _151290fd0_BinopSolver::_method_eval_nil(void) {
	if ((!(_15177b070_is_nil_compatible((*this)._field_r->_field_kind)))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(jule::Str("nil", 3)),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_151290fd0_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_5688487424; }
		_case_begin_5688487424:;
		{
			return jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_15177b070_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_15177b070_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_15199b440_Const>()));
		}
		goto _match_end_5688482944;
		_case_end_5688487424:;
		_case_begin_5688478160:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(jule::Str("nil", 3))}));
			return jule::new_ref<_151290fd0_Data>();
		}
		goto _match_end_5688482944;
		_case_end_5688478160:;
		_match_end_5688482944:;
	}
}



inline jule::Ref<_151290fd0_Data> _151290fd0_BinopSolver::_method_eval_enum(void) {
	jule::Ref<_150f1c930_Enum> _332217_enm = (*this)._field_l->_field_kind->_method_enm();
	if ((!(jule::real((*this)._field_r->_field_kind->_method_enm()))) || ((_332217_enm).alloc != ((*this)._field_r->_field_kind->_method_enm()).alloc)) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_332217_enm->_field_ident),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_151290fd0_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_5688502224; }
		_case_begin_5688502224:;
		{
			return jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_15177b070_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_15177b070_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_15199b440_Const>()));
		}
		goto _match_end_5688495872;
		_case_end_5688502224:;
		if (!((jule::Str("&", 1)) == _match_expr || (jule::Str("|", 1)) == _match_expr)) { goto _case_end_5688502784; }
		_case_begin_5688502784:;
		{
			if ((!(jule::real(_332217_enm->_field_kind->_field_kind->_method_prim()))) || (!(_1519b1410_is_int(_332217_enm->_field_kind->_field_kind->_method_prim()->_method_to_str())))) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(_332217_enm->_field_ident)}));
			}
			return (*this)._field_l;
		}
		goto _match_end_5688495872;
		_case_end_5688502784:;
		_case_begin_5688497584:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(_332217_enm->_field_ident)}));
			return jule::new_ref<_151290fd0_Data>();
		}
		goto _match_end_5688495872;
		_case_end_5688497584:;
		_match_end_5688495872:;
	}
}



inline jule::Ref<_151290fd0_Data> _151290fd0_BinopSolver::_method_eval_ptr(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_151290fd0_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr || (jule::Str("<", 1)) == _match_expr || (jule::Str(">", 1)) == _match_expr || (jule::Str("<=", 2)) == _match_expr || (jule::Str(">=", 2)) == _match_expr)) { goto _case_end_5688521520; }
		_case_begin_5688521520:;
		{
			return jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_15177b070_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_15177b070_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_15199b440_Const>()));
		}
		goto _match_end_5688516864;
		_case_end_5688521520:;
		_case_begin_5688510992:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_151290fd0_Data>();
		}
		goto _match_end_5688516864;
		_case_end_5688510992:;
		_match_end_5688516864:;
	}
}



inline jule::Ref<_151290fd0_Data> _151290fd0_BinopSolver::_method_eval_arr(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_151290fd0_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_5688550992; }
		_case_begin_5688550992:;
		{
			return jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_15177b070_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_15177b070_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_15199b440_Const>()));
		}
		goto _match_end_5688546368;
		_case_end_5688550992:;
		_case_begin_5688545296:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_151290fd0_Data>();
		}
		goto _match_end_5688546368;
		_case_end_5688545296:;
		_match_end_5688546368:;
	}
}



inline jule::Ref<_151290fd0_Data> _151290fd0_BinopSolver::_method_eval_slc(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_151290fd0_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_5688563472; }
		_case_begin_5688563472:;
		{
			return jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_15177b070_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_15177b070_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_15199b440_Const>()));
		}
		goto _match_end_5688558880;
		_case_end_5688563472:;
		_case_begin_5688557728:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_151290fd0_Data>();
		}
		goto _match_end_5688558880;
		_case_end_5688557728:;
		_match_end_5688558880:;
	}
}



inline jule::Ref<_151290fd0_Data> _151290fd0_BinopSolver::_method_eval_fn(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_151290fd0_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_5688576016; }
		_case_begin_5688576016:;
		{
			return jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_15177b070_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_15177b070_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_15199b440_Const>()));
		}
		goto _match_end_5688571360;
		_case_end_5688576016:;
		_case_begin_5688570384:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_151290fd0_Data>();
		}
		goto _match_end_5688571360;
		_case_end_5688570384:;
		_match_end_5688571360:;
	}
}



inline jule::Ref<_151290fd0_Data> _151290fd0_BinopSolver::_method_eval_struct(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_151290fd0_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_5688589040; }
		_case_begin_5688589040:;
		{
			return jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_15177b070_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_15177b070_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_15199b440_Const>()));
		}
		goto _match_end_5688584512;
		_case_end_5688589040:;
		_case_begin_5688583360:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_151290fd0_Data>();
		}
		goto _match_end_5688584512;
		_case_end_5688583360:;
		_match_end_5688584512:;
	}
}



inline jule::Ref<_151290fd0_Data> _151290fd0_BinopSolver::_method_eval_trait(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_151290fd0_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_5688601520; }
		_case_begin_5688601520:;
		{
			return jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_15177b070_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_15177b070_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_15199b440_Const>()));
		}
		goto _match_end_5688596928;
		_case_end_5688601520:;
		_case_begin_5688595840:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_151290fd0_Data>();
		}
		goto _match_end_5688596928;
		_case_end_5688595840:;
		_match_end_5688596928:;
	}
}



inline jule::Ref<_151290fd0_Data> _151290fd0_BinopSolver::_method_eval_any(void) {
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_5688605488; }
		_case_begin_5688605488:;
		{
			return jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_15177b070_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_15177b070_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_15199b440_Const>()));
		}
		goto _match_end_5688597328;
		_case_end_5688605488:;
		_case_begin_5688604304:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(jule::Str("any", 3))}));
			return jule::new_ref<_151290fd0_Data>();
		}
		goto _match_end_5688597328;
		_case_end_5688604304:;
		_match_end_5688597328:;
	}
}



inline jule::Ref<_151290fd0_Data> _151290fd0_BinopSolver::_method_eval_bool(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_151290fd0_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr || (jule::Str("&&", 2)) == _match_expr || (jule::Str("||", 2)) == _match_expr)) { goto _case_end_5688621312; }
		_case_begin_5688621312:;
		{
			return (*this)._field_l;
		}
		goto _match_end_5688616720;
		_case_end_5688621312:;
		_case_begin_5688615632:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_151290fd0_Data>();
		}
		goto _match_end_5688616720;
		_case_end_5688615632:;
		_match_end_5688616720:;
	}
}



inline jule::Ref<_151290fd0_Data> _151290fd0_BinopSolver::_method_eval_str(void) {
	jule::Str _351617_rk = (*this)._field_r->_field_kind->_method_to_str();
	if (_351617_rk != jule::Str("str", 3)) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any(_351617_rk)}));
		return jule::new_ref<_151290fd0_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("+", 1)) == _match_expr)) { goto _case_end_5688632544; }
		_case_begin_5688632544:;
		{
			return (*this)._field_l;
		}
		goto _match_end_5688625568;
		_case_end_5688632544:;
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_5688633968; }
		_case_begin_5688633968:;
		{
			return jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_15177b070_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_15177b070_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_15199b440_Const>()));
		}
		goto _match_end_5688625568;
		_case_end_5688633968:;
		_case_begin_5688629376:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(jule::Str("any", 3))}));
			return jule::new_ref<_151290fd0_Data>();
		}
		goto _match_end_5688625568;
		_case_end_5688629376:;
		_match_end_5688625568:;
	}
}



inline void _151290fd0_BinopSolver::_method_set_type_to_greater(void) {
	if (((*this)._field_l->_method_is_const() && (*this)._field_r->_method_is_const()) || ((!((*this)._field_l->_method_is_const())) && (!((*this)._field_r->_method_is_const())))) {
		jule::Str _354217_lk = (*this)._field_l->_field_kind->_method_to_str();
		jule::Str _354317_rk = (*this)._field_r->_field_kind->_method_to_str();
		if (_151a210d0_is_greater(_354317_rk,_354217_lk)) {
			(*this)._field_l->_field_kind=(*this)._field_r->_field_kind;
		}
		return;
	}
	if ((*this)._field_l->_method_is_const()) {
		(*this)._field_l->_field_kind=(*this)._field_r->_field_kind;
		return;
	}
	(*this)._field_r->_field_kind=(*this)._field_l->_field_kind;
}



inline void _151290fd0_BinopSolver::_method_check_mod_data(jule::Ref<_151290fd0_Data> _355837_d) {
	if ((!(_355837_d->_method_is_const()))) {
		if ((!(jule::real(_355837_d->_field_kind->_method_prim()))) || (!(_1519b1410_is_int(_355837_d->_field_kind->_method_prim()->_field_kind)))) {
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>({}));
		}
		return;
	}
	{
		if (!((_1510d19a0_sig_assignable(jule::Str("i64", 3),_355837_d)))) { goto _case_end_5688657872; }
		_case_begin_5688657872:;
		{
			_355837_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_355837_d->_field_constant->_method_as_i64()));
		}
		goto _match_end_5688650160;
		_case_end_5688657872:;
		if (!((_1510d19a0_unsig_assignable(jule::Str("u64", 3),_355837_d)))) { goto _case_end_5688657984; }
		_case_begin_5688657984:;
		{
			_355837_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_355837_d->_field_constant->_method_as_u64()));
		}
		goto _match_end_5688650160;
		_case_end_5688657984:;
		_case_begin_5688650352:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>({}));
		}
		goto _match_end_5688650160;
		_case_end_5688650352:;
		_match_end_5688650160:;
	}
}



inline void _151290fd0_BinopSolver::_method_mod(void) {
	(*this)._method_check_mod_data((*this)._field_l);
	(*this)._method_check_mod_data((*this)._field_r);
}



inline jule::Ref<_151290fd0_Data> _151290fd0_BinopSolver::_method_eval_float(void) {
	jule::Str _358413_lk = (*this)._field_l->_field_kind->_method_to_str();
	jule::Str _358513_rk = (*this)._field_r->_field_kind->_method_to_str();
	if ((!(_1519b1410_is_num(_358413_lk))) || (!(_1519b1410_is_num(_358513_rk)))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_358413_lk),jule::Any(_358513_rk)}));
		return jule::new_ref<_151290fd0_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr || (jule::Str("<", 1)) == _match_expr || (jule::Str(">", 1)) == _match_expr || (jule::Str(">=", 2)) == _match_expr || (jule::Str("<=", 2)) == _match_expr)) { goto _case_end_5688670640; }
		_case_begin_5688670640:;
		{
			return jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_15177b070_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_15177b070_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_15199b440_Const>()));
		}
		goto _match_end_5688673984;
		_case_end_5688670640:;
		_match_end_5688673984:;
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("+", 1)) == _match_expr || (jule::Str("-", 1)) == _match_expr || (jule::Str("*", 1)) == _match_expr || (jule::Str("/", 1)) == _match_expr)) { goto _case_end_5688681440; }
		_case_begin_5688681440:;
		{
			(*this)._method_set_type_to_greater();
			return (*this)._field_l;
		}
		goto _match_end_5688677328;
		_case_end_5688681440:;
		if (!((jule::Str("%", 1)) == _match_expr)) { goto _case_end_5688682016; }
		_case_begin_5688682016:;
		{
			if ((!(_1519b1410_is_int(_358513_rk)))) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_358413_lk),jule::Any(_358513_rk)}));
				return jule::new_ref<_151290fd0_Data>();
			}
			(*this)._method_mod();
			return (*this)._field_r;
		}
		goto _match_end_5688677328;
		_case_end_5688682016:;
		_case_begin_5688674928:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for floating-point type(s)", 52),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind)}));
			return jule::new_ref<_151290fd0_Data>();
		}
		goto _match_end_5688677328;
		_case_end_5688674928:;
		_match_end_5688677328:;
	}
}



inline jule::Ref<_151290fd0_Data> _151290fd0_BinopSolver::_method_eval_unsig_int(void) {
	jule::Str _363013_lk = (*this)._field_l->_field_kind->_method_to_str();
	jule::Str _363113_rk = (*this)._field_r->_field_kind->_method_to_str();
	if ((!(_1519b1410_is_num(_363013_lk))) || (!(_1519b1410_is_num(_363113_rk)))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_363013_lk),jule::Any(_363113_rk)}));
		return jule::new_ref<_151290fd0_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr || (jule::Str("<", 1)) == _match_expr || (jule::Str(">", 1)) == _match_expr || (jule::Str(">=", 2)) == _match_expr || (jule::Str("<=", 2)) == _match_expr)) { goto _case_end_5688692112; }
		_case_begin_5688692112:;
		{
			return jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_15177b070_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_15177b070_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_15199b440_Const>()));
		}
		goto _match_end_5688695456;
		_case_end_5688692112:;
		_match_end_5688695456:;
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("+", 1)) == _match_expr || (jule::Str("-", 1)) == _match_expr || (jule::Str("*", 1)) == _match_expr || (jule::Str("/", 1)) == _match_expr || (jule::Str("&", 1)) == _match_expr || (jule::Str("|", 1)) == _match_expr || (jule::Str("^", 1)) == _match_expr)) { goto _case_end_5688702912; }
		_case_begin_5688702912:;
		{
			(*this)._method_set_type_to_greater();
			return (*this)._field_l;
		}
		goto _match_end_5688698800;
		_case_end_5688702912:;
		if (!((jule::Str("%", 1)) == _match_expr)) { goto _case_end_5688703488; }
		_case_begin_5688703488:;
		{
			(*this)._method_mod();
			(*this)._method_set_type_to_greater();
			return (*this)._field_l;
		}
		goto _match_end_5688698800;
		_case_end_5688703488:;
		if (!((jule::Str("<<", 2)) == _match_expr || (jule::Str(">>", 2)) == _match_expr)) { goto _case_end_5688703152; }
		_case_begin_5688703152:;
		{
			if ((!(_151290fd0_is_ok_for_shifting((*this)._field_r)))) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>({}));
				return jule::new_ref<_151290fd0_Data>();
			}
			if ((*this)._field_l->_method_is_const()) {
				(*this)._field_l->_field_kind=(*this)._field_r->_field_kind;
			}
			return (*this)._field_l;
		}
		goto _match_end_5688698800;
		_case_end_5688703152:;
		_case_begin_5688696400:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for unsigned integer type(s)", 54),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind)}));
			return jule::new_ref<_151290fd0_Data>();
		}
		goto _match_end_5688698800;
		_case_end_5688696400:;
		_match_end_5688698800:;
	}
}



inline jule::Ref<_151290fd0_Data> _151290fd0_BinopSolver::_method_eval_sig_int(void) {
	jule::Str _368913_lk = (*this)._field_l->_field_kind->_method_to_str();
	jule::Str _369013_rk = (*this)._field_r->_field_kind->_method_to_str();
	if ((!(_1519b1410_is_num(_368913_lk))) || (!(_1519b1410_is_num(_369013_rk)))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_368913_lk),jule::Any(_369013_rk)}));
		return jule::new_ref<_151290fd0_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr || (jule::Str("<", 1)) == _match_expr || (jule::Str(">", 1)) == _match_expr || (jule::Str(">=", 2)) == _match_expr || (jule::Str("<=", 2)) == _match_expr)) { goto _case_end_5688717232; }
		_case_begin_5688717232:;
		{
			return jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_15177b070_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_15177b070_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_15199b440_Const>()));
		}
		goto _match_end_5688720576;
		_case_end_5688717232:;
		_match_end_5688720576:;
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("+", 1)) == _match_expr || (jule::Str("-", 1)) == _match_expr || (jule::Str("*", 1)) == _match_expr || (jule::Str("/", 1)) == _match_expr || (jule::Str("&", 1)) == _match_expr || (jule::Str("|", 1)) == _match_expr || (jule::Str("^", 1)) == _match_expr)) { goto _case_end_5688728032; }
		_case_begin_5688728032:;
		{
			(*this)._method_set_type_to_greater();
			return (*this)._field_l;
		}
		goto _match_end_5688723920;
		_case_end_5688728032:;
		if (!((jule::Str("%", 1)) == _match_expr)) { goto _case_end_5688728592; }
		_case_begin_5688728592:;
		{
			(*this)._method_mod();
			(*this)._method_set_type_to_greater();
			return (*this)._field_l;
		}
		goto _match_end_5688723920;
		_case_end_5688728592:;
		if (!((jule::Str("<<", 2)) == _match_expr || (jule::Str(">>", 2)) == _match_expr)) { goto _case_end_5688728256; }
		_case_begin_5688728256:;
		{
			if ((!(_151290fd0_is_ok_for_shifting((*this)._field_r)))) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>({}));
				return jule::new_ref<_151290fd0_Data>();
			}
			return (*this)._field_l;
		}
		goto _match_end_5688723920;
		_case_end_5688728256:;
		_case_begin_5688721520:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for integer type(s)", 45),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind)}));
			return jule::new_ref<_151290fd0_Data>();
		}
		goto _match_end_5688723920;
		_case_end_5688721520:;
		_match_end_5688723920:;
	}
}



inline jule::Ref<_151290fd0_Data> _151290fd0_BinopSolver::_method_eval_prim(void) {
	jule::Ref<_15177b070_Prim> _374413_prim = (*this)._field_l->_field_kind->_method_prim();
	{
		if (!((_374413_prim->_method_is_any()))) { goto _case_end_5688738608; }
		_case_begin_5688738608:;
		{
			return (*this)._method_eval_any();
		}
		goto _match_end_5688738352;
		_case_end_5688738608:;
		if (!((_374413_prim->_method_is_bool()))) { goto _case_end_5688738720; }
		_case_begin_5688738720:;
		{
			return (*this)._method_eval_bool();
		}
		goto _match_end_5688738352;
		_case_end_5688738720:;
		if (!((_374413_prim->_method_is_str()))) { goto _case_end_5688738832; }
		_case_begin_5688738832:;
		{
			return (*this)._method_eval_str();
		}
		goto _match_end_5688738352;
		_case_end_5688738832:;
		_match_end_5688738352:;
	}
	jule::Ref<_15177b070_Prim> _375113_rprim = (*this)._field_r->_field_kind->_method_prim();
	if ((!(jule::real(_375113_rprim)))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_374413_prim->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_151290fd0_Data>();
	}
	jule::Str _375713_lk = _374413_prim->_method_to_str();
	{
		if (!((_1519b1410_is_float(_375713_lk)))) { goto _case_end_5688752400; }
		_case_begin_5688752400:;
		{
			return (*this)._method_eval_float();
		}
		goto _match_end_5688745120;
		_case_end_5688752400:;
		if (!((_1519b1410_is_unsig_int(_375713_lk)))) { goto _case_end_5688751408; }
		_case_begin_5688751408:;
		{
			return (*this)._method_eval_unsig_int();
		}
		goto _match_end_5688745120;
		_case_end_5688751408:;
		if (!((_1519b1410_is_sig_int(_375713_lk)))) { goto _case_end_5688751616; }
		_case_begin_5688751616:;
		{
			return (*this)._method_eval_sig_int();
		}
		goto _match_end_5688745120;
		_case_end_5688751616:;
		_case_begin_5688745248:;
		{
			return jule::new_ref<_151290fd0_Data>();
		}
		goto _match_end_5688745120;
		_case_end_5688745248:;
		_match_end_5688745120:;
	}
}



inline jule::Ref<_151290fd0_Data> _151290fd0_BinopSolver::_method_eval(void) {
	{
		if (!(((*this)._field_l->_field_kind->_method_is_void()))) { goto _case_end_5688757920; }
		_case_begin_5688757920:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(jule::Str("void", 4))}));
			return jule::new_ref<_151290fd0_Data>();
		}
		goto _match_end_5688755936;
		_case_end_5688757920:;
		if (!(((*this)._field_l->_field_kind->_method_is_nil()))) { goto _case_end_5688758496; }
		_case_begin_5688758496:;
		{
			return (*this)._method_eval_nil();
		}
		goto _match_end_5688755936;
		_case_end_5688758496:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_enm())))) { goto _case_end_5688757712; }
		_case_begin_5688757712:;
		{
			return (*this)._method_eval_enum();
		}
		goto _match_end_5688755936;
		_case_end_5688757712:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_ptr())))) { goto _case_end_5688758160; }
		_case_begin_5688758160:;
		{
			return (*this)._method_eval_ptr();
		}
		goto _match_end_5688755936;
		_case_end_5688758160:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_arr())))) { goto _case_end_5688758272; }
		_case_begin_5688758272:;
		{
			return (*this)._method_eval_arr();
		}
		goto _match_end_5688755936;
		_case_end_5688758272:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_slc())))) { goto _case_end_5688757104; }
		_case_begin_5688757104:;
		{
			return (*this)._method_eval_slc();
		}
		goto _match_end_5688755936;
		_case_end_5688757104:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_fnc())))) { goto _case_end_5688757216; }
		_case_begin_5688757216:;
		{
			return (*this)._method_eval_fn();
		}
		goto _match_end_5688755936;
		_case_end_5688757216:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_trt()) || jule::real((*this)._field_r->_field_kind->_method_trt())))) { goto _case_end_5688757328; }
		_case_begin_5688757328:;
		{
			if (jule::real((*this)._field_r->_field_kind->_method_trt())) {
				std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple((*this)._field_r,(*this)._field_l);
			}
			return (*this)._method_eval_trait();
		}
		goto _match_end_5688755936;
		_case_end_5688757328:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_strct())))) { goto _case_end_5688756400; }
		_case_begin_5688756400:;
		{
			return (*this)._method_eval_struct();
		}
		goto _match_end_5688755936;
		_case_end_5688756400:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_prim())))) { goto _case_end_5688756512; }
		_case_begin_5688756512:;
		{
			return (*this)._method_eval_prim();
		}
		goto _match_end_5688755936;
		_case_end_5688756512:;
		_case_begin_5688756096:;
		{
			return jule::new_ref<_151290fd0_Data>();
		}
		goto _match_end_5688755936;
		_case_end_5688756096:;
		_match_end_5688755936:;
	}
}



inline void _151290fd0_BinopSolver::_method_assign_shift(jule::Ref<_151290fd0_Data> _380731_d,jule::F64 _380741_r) {
	{
		if (!((_380741_r <= 6LL))) { goto _case_end_5688785792; }
		_case_begin_5688785792:;
		{
			_380731_d->_field_kind->_method_prim()->_field_kind=jule::Str("i8", 2);
			_380731_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_380731_d->_field_constant->_method_as_i64()));
		}
		goto _match_end_5688784784;
		_case_end_5688785792:;
		if (!((_380741_r <= 7LL))) { goto _case_end_5688785408; }
		_case_begin_5688785408:;
		{
			_380731_d->_field_kind->_method_prim()->_field_kind=jule::Str("u8", 2);
			_380731_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_380731_d->_field_constant->_method_as_u64()));
		}
		goto _match_end_5688784784;
		_case_end_5688785408:;
		if (!((_380741_r <= 14LL))) { goto _case_end_5688785520; }
		_case_begin_5688785520:;
		{
			_380731_d->_field_kind->_method_prim()->_field_kind=jule::Str("i16", 3);
			_380731_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_380731_d->_field_constant->_method_as_i64()));
		}
		goto _match_end_5688784784;
		_case_end_5688785520:;
		if (!((_380741_r <= 15LL))) { goto _case_end_5688788848; }
		_case_begin_5688788848:;
		{
			_380731_d->_field_kind->_method_prim()->_field_kind=jule::Str("u16", 3);
			_380731_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_380731_d->_field_constant->_method_as_u64()));
		}
		goto _match_end_5688784784;
		_case_end_5688788848:;
		if (!((_380741_r <= 30LL))) { goto _case_end_5688788960; }
		_case_begin_5688788960:;
		{
			_380731_d->_field_kind->_method_prim()->_field_kind=jule::Str("i32", 3);
			_380731_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_380731_d->_field_constant->_method_as_i64()));
		}
		goto _match_end_5688784784;
		_case_end_5688788960:;
		if (!((_380741_r <= 31LL))) { goto _case_end_5688789072; }
		_case_begin_5688789072:;
		{
			_380731_d->_field_kind->_method_prim()->_field_kind=jule::Str("u32", 3);
			_380731_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_380731_d->_field_constant->_method_as_u64()));
		}
		goto _match_end_5688784784;
		_case_end_5688789072:;
		if (!((_380741_r <= 62LL))) { goto _case_end_5688789184; }
		_case_begin_5688789184:;
		{
			_380731_d->_field_kind->_method_prim()->_field_kind=jule::Str("i64", 3);
			_380731_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_380731_d->_field_constant->_method_as_i64()));
		}
		goto _match_end_5688784784;
		_case_end_5688789184:;
		if (!((_380741_r <= 63LL))) { goto _case_end_5688789296; }
		_case_begin_5688789296:;
		{
			_380731_d->_field_kind->_method_prim()->_field_kind=jule::Str("u64", 3);
			_380731_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_380731_d->_field_constant->_method_as_u64()));
		}
		goto _match_end_5688784784;
		_case_end_5688789296:;
		if (!((_380741_r <= 127LL))) { goto _case_end_5688789408; }
		_case_begin_5688789408:;
		{
			_380731_d->_field_kind->_method_prim()->_field_kind=jule::Str("f32", 3);
			_380731_d->_field_constant->_method_set_f64(static_cast<jule::F64>(_380731_d->_field_constant->_method_as_f64()));
		}
		goto _match_end_5688784784;
		_case_end_5688789408:;
		_case_begin_5688784944:;
		{
			_380731_d->_field_kind->_method_prim()->_field_kind=jule::Str("f64", 3);
			_380731_d->_field_constant->_method_set_f64(static_cast<jule::F64>(_380731_d->_field_constant->_method_as_f64()));
		}
		goto _match_end_5688784784;
		_case_end_5688784944:;
		_match_end_5688784784:;
	}
}



inline void _151290fd0_BinopSolver::_method_solve_const(jule::Ref<_151290fd0_Data> _385134_d) {
	{
		if (!(((!(jule::real(_385134_d)))))) { goto _case_end_5688819824; }
		_case_begin_5688819824:;
		{
			return;
		}
		goto _match_end_5688819632;
		_case_end_5688819824:;
		if (!(((!((*this)._field_l->_method_is_const()))) || ((!((*this)._field_r->_method_is_const()))))) { goto _case_end_5688819952; }
		_case_begin_5688819952:;
		{
			jule::drop(_385134_d->_field_constant);
			return;
		}
		goto _match_end_5688819632;
		_case_end_5688819952:;
		_match_end_5688819632:;
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr)) { goto _case_end_5688824272; }
		_case_begin_5688824272:;
		{
			_385134_d->_field_constant=_15199b440_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_eqs((*this)._field_r->_field_constant));
		}
		goto _match_end_5688823584;
		_case_end_5688824272:;
		if (!((jule::Str("!=", 2)) == _match_expr)) { goto _case_end_5688824384; }
		_case_begin_5688824384:;
		{
			_385134_d->_field_constant=_15199b440_Const::_static_method_new_bool((!((*this)._field_l->_field_constant->_method_eqs((*this)._field_r->_field_constant))));
		}
		goto _match_end_5688823584;
		_case_end_5688824384:;
		if (!((jule::Str("::", 2)) == _match_expr)) { goto _case_end_5688824496; }
		_case_begin_5688824496:;
		{
			_385134_d->_field_constant=_15199b440_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_or((*this)._field_r->_field_constant));
		}
		goto _match_end_5688823584;
		_case_end_5688824496:;
		if (!((jule::Str("&&", 2)) == _match_expr)) { goto _case_end_5688824608; }
		_case_begin_5688824608:;
		{
			_385134_d->_field_constant=_15199b440_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_and((*this)._field_r->_field_constant));
		}
		goto _match_end_5688823584;
		_case_end_5688824608:;
		if (!((jule::Str(">", 1)) == _match_expr)) { goto _case_end_5688824720; }
		_case_begin_5688824720:;
		{
			_385134_d->_field_constant=_15199b440_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_gt((*this)._field_r->_field_constant));
		}
		goto _match_end_5688823584;
		_case_end_5688824720:;
		if (!((jule::Str("<", 1)) == _match_expr)) { goto _case_end_5688824832; }
		_case_begin_5688824832:;
		{
			_385134_d->_field_constant=_15199b440_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_lt((*this)._field_r->_field_constant));
		}
		goto _match_end_5688823584;
		_case_end_5688824832:;
		if (!((jule::Str(">=", 2)) == _match_expr)) { goto _case_end_5688824944; }
		_case_begin_5688824944:;
		{
			_385134_d->_field_constant=_15199b440_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_gt((*this)._field_r->_field_constant) || (*this)._field_l->_field_constant->_method_eqs((*this)._field_r->_field_constant));
		}
		goto _match_end_5688823584;
		_case_end_5688824944:;
		if (!((jule::Str("<=", 2)) == _match_expr)) { goto _case_end_5688825056; }
		_case_begin_5688825056:;
		{
			_385134_d->_field_constant=_15199b440_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_lt((*this)._field_r->_field_constant) || (*this)._field_l->_field_constant->_method_eqs((*this)._field_r->_field_constant));
		}
		goto _match_end_5688823584;
		_case_end_5688825056:;
		if (!((jule::Str("+", 1)) == _match_expr)) { goto _case_end_5688825168; }
		_case_begin_5688825168:;
		{
			(*this)._field_l->_field_constant->_method_add((*this)._field_r->_field_constant);
			_385134_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_5688823584;
		_case_end_5688825168:;
		if (!((jule::Str("-", 1)) == _match_expr)) { goto _case_end_5688825280; }
		_case_begin_5688825280:;
		{
			(*this)._field_l->_field_constant->_method_sub((*this)._field_r->_field_constant);
			_385134_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_5688823584;
		_case_end_5688825280:;
		if (!((jule::Str("*", 1)) == _match_expr)) { goto _case_end_5688825392; }
		_case_begin_5688825392:;
		{
			(*this)._field_l->_field_constant->_method_mul((*this)._field_r->_field_constant);
			_385134_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_5688823584;
		_case_end_5688825392:;
		if (!((jule::Str("/", 1)) == _match_expr)) { goto _case_end_5688825504; }
		_case_begin_5688825504:;
		{
			jule::Bool _390117_ok = (*this)._field_l->_field_constant->_method_div((*this)._field_r->_field_constant);
			if ((!(_390117_ok)) && ((*this)._field_r->_field_constant->_method_as_f64() == 0LL)) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>({}));
			}
			_385134_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_5688823584;
		_case_end_5688825504:;
		if (!((jule::Str("%", 1)) == _match_expr)) { goto _case_end_5688825616; }
		_case_begin_5688825616:;
		{
			jule::Bool _390817_ok = (*this)._field_l->_field_constant->_method_mod((*this)._field_r->_field_constant);
			if ((!(_390817_ok)) && ((*this)._field_r->_field_constant->_method_as_f64() == 0LL)) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>({}));
			}
			_385134_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_5688823584;
		_case_end_5688825616:;
		if (!((jule::Str("|", 1)) == _match_expr)) { goto _case_end_5688825728; }
		_case_begin_5688825728:;
		{
			(*this)._field_l->_field_constant->_method_bitwise_or((*this)._field_r->_field_constant);
			_385134_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_5688823584;
		_case_end_5688825728:;
		if (!((jule::Str("&", 1)) == _match_expr)) { goto _case_end_5688825856; }
		_case_begin_5688825856:;
		{
			(*this)._field_l->_field_constant->_method_bitwise_and((*this)._field_r->_field_constant);
			_385134_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_5688823584;
		_case_end_5688825856:;
		if (!((jule::Str("^", 1)) == _match_expr)) { goto _case_end_5688825984; }
		_case_begin_5688825984:;
		{
			(*this)._field_l->_field_constant->_method_xor((*this)._field_r->_field_constant);
			_385134_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_5688823584;
		_case_end_5688825984:;
		if (!((jule::Str("<<", 2)) == _match_expr)) { goto _case_end_5688826112; }
		_case_begin_5688826112:;
		{
			_385134_d->_field_constant=(*this)._field_l->_field_constant;
			(*this)._field_l->_field_constant->_method_lshift((*this)._field_r->_field_constant);
			(*this)._method_assign_shift(_385134_d,static_cast<jule::F64>((*this)._field_r->_field_constant->_method_as_f64()));
		}
		goto _match_end_5688823584;
		_case_end_5688826112:;
		if (!((jule::Str(">>", 2)) == _match_expr)) { goto _case_end_5688826240; }
		_case_begin_5688826240:;
		{
			_385134_d->_field_constant=(*this)._field_l->_field_constant;
			(*this)._field_l->_field_constant->_method_rshift((*this)._field_r->_field_constant);
			(*this)._method_assign_shift(_385134_d,static_cast<jule::F64>((*this)._field_r->_field_constant->_method_as_f64()));
		}
		goto _match_end_5688823584;
		_case_end_5688826240:;
		_match_end_5688823584:;
	}
	_385134_d->_field_model=jule::Any(_385134_d->_field_constant);
}



inline void _151290fd0_BinopSolver::_method_post_const(jule::Ref<_151290fd0_Data> _394029_d) {
	if ((!(jule::real(_394029_d)))) {
		return;
	}
	if ((!(_394029_d->_method_is_const()))) {
		return;
	}
	_151290fd0_normalize_bitsize(_394029_d);
}



inline void _151290fd0_BinopSolver::_method_prepare_data(jule::Ref<_151290fd0_Data> _395131_d) {
	if (jule::real(_395131_d) && jule::real(_395131_d->_field_kind->_method_ref())) {
		_395131_d->_field_kind=_395131_d->_field_kind->_method_ref()->_field_elem;
	}
}



inline void _151290fd0_BinopSolver::_method_prepare_eval(void) {
	(*this)._method_prepare_data((*this)._field_r);
	(*this)._method_prepare_data((*this)._field_l);
}



inline void _151290fd0_BinopSolver::_method_check_data(jule::Ref<_151290fd0_Data> _396233_d) {
	jule::Ref<_15081bcd0_FnIns> _396313_f = _396233_d->_field_kind->_method_fnc();
	if ((jule::real(_396313_f) && jule::real(_396313_f->_field_decl)) && _396313_f->_field_decl->_method_is_method()) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("invalid expression used for binary operation", 44),jule::Slice<jule::Any>({}));
	}
}



inline void _151290fd0_BinopSolver::_method_check_datas(void) {
	(*this)._method_check_data((*this)._field_l);
	(*this)._method_check_data((*this)._field_r);
}



inline jule::Ref<_151290fd0_Data> _151290fd0_BinopSolver::_method_solve_explicit(jule::Ref<_151290fd0_Data> _397437_l,jule::Ref<_151290fd0_Data> _397451_r) {
	std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple(_397437_l,_397451_r);
	(*this)._method_prepare_eval();
	(*this)._method_check_datas();
	jule::Ref<_151290fd0_Data> _398017_d = (*this)._method_eval();
	std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple(_397437_l,_397451_r);
	(*this)._method_solve_const(_398017_d);
	(*this)._method_post_const(_398017_d);
	if (jule::real(_398017_d)) {
		_398017_d->_field_lvalue=_15177b070_is_lvalue(_398017_d->_field_kind);
		if ((!(_398017_d->_method_is_const()))) {
			_398017_d->_field_model=jule::Any(jule::new_struct<_150f25dd0_BinopExprModel>(new( std::nothrow ) _150f25dd0_BinopExprModel(_397437_l->_field_model,_397451_r->_field_model,(*this)._field_op._field_kind)));
		}
	}
	return _398017_d;
}



inline jule::Ref<_151290fd0_Data> _151290fd0_BinopSolver::_method_solve(jule::Ref<_1506406d0_BinopExpr> _400028_op) {
	jule::Ref<_151290fd0_Data> _400117_l = (*this)._field_e->_method_eval_expr_kind(_400028_op->_field_left);
	if ((!(jule::real(_400117_l))) || (!(jule::real(_400117_l->_field_kind)))) {
		return jule::new_ref<_151290fd0_Data>();
	}
	jule::Ref<_151290fd0_Data> _400617_r = (*this)._field_e->_method_eval_expr_kind(_400028_op->_field_right);
	if ((!(jule::real(_400617_r))) || (!(jule::real(_400617_r->_field_kind)))) {
		return jule::new_ref<_151290fd0_Data>();
	}
	(*this)._field_op=_400028_op->_field_op;
	jule::Ref<_151290fd0_Data> _401317_d = (*this)._method_solve_explicit(_400117_l,_400617_r);
	if ((jule::real(_401317_d) && _400117_l->_field_is_rune) && _400617_r->_field_is_rune) {
		_401317_d->_field_is_rune=true;
	}
	return _401317_d;
}







std::ostream &operator<<(std::ostream &_Stream, const _151290fd0_BinopSolver &_Src) {
	_Stream << "BinopSolver{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}



inline void _1510d19a0_RetTypeChecker::_method_prepare_types(void) {
	(*this)._field_types=_1510d19a0_get_fn_result_types((*this)._field_f);
}



inline void _1510d19a0_RetTypeChecker::_method_prepare_exprs(jule::Ref<_1506406d0_Expr> _124036_e) {
	if ((!(jule::real(_124036_e)))) {
		return;
	}
	{
		auto _match_expr{ _124036_e->_field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_TupleExpr>>())) { goto _case_end_5685712976; }
		_case_begin_5685712976:;
		{
			(*this)._field_exprs=_124036_e->_field_kind.operator jule::Ref<_1506406d0_TupleExpr>()->_field_expr;
		}
		goto _match_end_5685711840;
		_case_end_5685712976:;
		_case_begin_5685712032:;
		{
			(*this)._field_exprs=jule::append((*this)._field_exprs,jule::Slice<jule::Ref<_1506406d0_Expr>>({_124036_e}));
		}
		goto _match_end_5685711840;
		_case_end_5685712032:;
		_match_end_5685711840:;
	}
}



inline void _1510d19a0_RetTypeChecker::_method_ret_vars(void) {
	if ((*this)._field_f->_field_decl->_method_is_void()) {
		return;
	}
	(*this)._field_vars=jule::Slice<jule::Ref<_1511317d0_Var>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>((*this)._field_f->_field_decl->_field_result->_field_idents.len())));
	jule::Ref<_150d29660_ScopeChecker> _126017_root_scope = (*this)._field_sc->_method_get_root();
	jule::Int _126217_j = 0LL;
	{
		auto __julec_range_expr = (*this)._field_f->_field_decl->_field_result->_field_idents;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _1510d19a0_i = 0;
			_150640f50_Token _1510d19a0_ident = *__julec_range_begin;
			_iter_begin_5685723936:;
			{
				if ((!(_150640f50_is_ignore_ident(_1510d19a0_ident._field_kind)))) {
					(*this)._field_vars[static_cast<jule::Int>(_1510d19a0_i)]=_126017_root_scope->_field_table->_field_vars._method_at(_126217_j);
					(_126217_j)++;
				} else {
					(*this)._field_vars[static_cast<jule::Int>(_1510d19a0_i)]=jule::new_struct<_1511317d0_Var>(new( std::nothrow ) _1511317d0_Var(jule::Ref<_150d29660_Scope>(),_150640f50_Token(),jule::Str("_", 1),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Str(),jule::new_struct<_15177b070_TypeSymbol>(new( std::nothrow ) _15177b070_TypeSymbol(jule::Ref<_1506406d0_TypeDecl>(),(*this)._field_types[static_cast<jule::Int>(_1510d19a0_i)])),jule::Ref<_151290fd0_Value>(),jule::Ref<_150e75a70_ReferenceStack>(),jule::Slice<jule::Ref<_1506406d0_Directive>>(),jule::Slice<jule::Ref<_1511317d0_Var>>()));
				}
			}
			_iter_next_5685723936:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_1510d19a0_i; _1510d19a0_ident = *__julec_range_begin; goto _iter_begin_5685723936; }
			_iter_end_5685723936:;
		}
	}
	if (_126217_j == 0LL) {
		(*this)._field_vars=nullptr;
	}
}



inline void _1510d19a0_RetTypeChecker::_method_check_exprs(void) {
	if ((*this)._field_exprs.len() == 0LL) {
		return;
	}
	jule::Slice<jule::Ref<_151290fd0_Data>> _128617_datas = jule::Slice<jule::Ref<_151290fd0_Data>>::alloc(0LL,static_cast<jule::Int>(static_cast<jule::I64>((*this)._field_exprs.len())));
	{
		auto __julec_range_expr = (*this)._field_exprs;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _1510d19a0_i = 0;
			jule::Ref<_1506406d0_Expr> _1510d19a0_expr = *__julec_range_begin;
			_iter_begin_5685737392:;
			{
				if (_1510d19a0_i >= (*this)._field_types.len()) {
					goto _iter_end_5685737392;
				}
				jule::Ref<_15177b070_TypeKind> _129321_t = (*this)._field_types[static_cast<jule::Int>(_1510d19a0_i)];
				jule::Ref<_151290fd0_Data> _129521_d = (*this)._field_sc->_field_s->_method_evalp(_1510d19a0_expr,(*this)._field_sc,_129321_t);
				if ((!(jule::real(_129521_d)))) {
					goto _iter_next_5685737392;
				}
				_128617_datas=jule::append(_128617_datas,jule::Slice<jule::Ref<_151290fd0_Data>>({_129521_d}));
				if ((!(_129521_d->_field_mutable)) && _15177b070_is_mut(_129521_d->_field_kind)) {
					(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("mutable typed return expressions should be mutable", 50),jule::Slice<jule::Any>({}));
					return;
				}
				_1510d19a0_AssignTypeChecker _130721_ac = _1510d19a0_AssignTypeChecker((*this)._field_sc->_field_s,_129321_t,_129521_d,(*this)._field_error_token,jule::Bool());
				_130721_ac._method_check();
			}
			_iter_next_5685737392:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_1510d19a0_i; _1510d19a0_expr = *__julec_range_begin; goto _iter_begin_5685737392; }
			_iter_end_5685737392:;
		}
	}
	if (_128617_datas.len() > 1LL) {
		(*this)._field_model=jule::Any(jule::new_struct<_150f25dd0_TupleExprModel>(new( std::nothrow ) _150f25dd0_TupleExprModel(_128617_datas)));
	} else if (_128617_datas.len() == 1LL) {
		(*this)._field_model=_128617_datas[0LL]->_field_model;
	}
}



inline jule::Bool _1510d19a0_RetTypeChecker::_method_check(jule::Ref<_1506406d0_Expr> _132628_e) {
	(*this)._method_prepare_types();
	(*this)._method_prepare_exprs(_132628_e);
	(*this)._method_ret_vars();
	jule::I64 _133113_n = (*this)._field_exprs.len();
	if ((_133113_n == 0LL) && (!((*this)._field_f->_field_decl->_method_is_void()))) {
		if ((!((*this)._field_f->_field_decl->_method_any_var()))) {
			(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("return statements of non-void functions should have return expression", 69),jule::Slice<jule::Any>({}));
			return false;
		}
		return true;
	}
	if ((_133113_n > 0LL) && (*this)._field_f->_field_decl->_method_is_void()) {
		(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("void functions is cannot returns any value", 42),jule::Slice<jule::Any>({}));
		return false;
	}
	if (_133113_n > (*this)._field_types.len()) {
		(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("overflow return expressions", 27),jule::Slice<jule::Any>({}));
	} else if (_133113_n < (*this)._field_types.len()) {
		(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("missing return expressions for multi return", 43),jule::Slice<jule::Any>({}));
	}
	(*this)._method_check_exprs();
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, const _1510d19a0_RetTypeChecker &_Src) {
	_Stream << "RetTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline void _1510d19a0_FnCallArgChecker::_method_push_err_token(_150640f50_Token _70933_token,jule::Str _70947_fmt,jule::Slice<jule::Any> _70960_args) {
	(*this)._field_e->_field_s->_method_push_err(_70933_token,_70947_fmt,_70960_args);
}



inline void _1510d19a0_FnCallArgChecker::_method_push_err(jule::Str _71327_fmt,jule::Slice<jule::Any> _71340_args) {
	(*this)._method_push_err_token((*this)._field_error_token,_71327_fmt,_71340_args);
}



inline jule::Slice<jule::Ref<_15081bcd0_ParamIns>> _1510d19a0_FnCallArgChecker::_method_get_params(void) {
	if ((((*this)._field_f->_field_params.len() > 0LL) && jule::real((*this)._field_f->_field_params[0LL]->_field_decl)) && (*this)._field_f->_field_params[0LL]->_field_decl->_method_is_self()) {
		return (*this)._field_f->_field_params.slice(1LL);
	}
	return (*this)._field_f->_field_params;
}



inline jule::Bool _1510d19a0_FnCallArgChecker::_method_check_counts(jule::Slice<jule::Ref<_15081bcd0_ParamIns>> _72431_params) {
	jule::Bool _72454_ok = jule::Bool();
	jule::I64 _72517_n = _72431_params.len();
	if ((_72517_n > 0LL) && _72431_params[0LL]->_field_decl->_method_is_self()) {
		(_72517_n)--;
	}
	jule::I64 _73017_diff = _72517_n - (*this)._field_args.len();
	{
		if (!((_73017_diff == 0LL))) { goto _case_end_5685400528; }
		_case_begin_5685400528:;
		{
			_72454_ok = true;
			return _72454_ok;
		}
		goto _match_end_5685400256;
		_case_end_5685400528:;
		if (!(((_72517_n > 0LL) && _72431_params[static_cast<jule::Int>(_72517_n - 1LL)]->_field_decl->_field_variadic))) { goto _case_end_5685400640; }
		_case_begin_5685400640:;
		{
			_72454_ok = true;
			return _72454_ok;
		}
		goto _match_end_5685400256;
		_case_end_5685400640:;
		if (!(((_73017_diff < 0LL) || (_73017_diff > _72431_params.len())))) { goto _case_end_5685400752; }
		_case_begin_5685400752:;
		{
			(*this)._method_push_err(jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
			_72454_ok = false;
			return _72454_ok;
		}
		goto _match_end_5685400256;
		_case_end_5685400752:;
		_match_end_5685400256:;
	}
	jule::Str _74317_idents = jule::Str("", 0);
	_iter_begin_5685404848:;
	if (!(_73017_diff > 0LL)) { goto _iter_end_5685404848; }
	{
		_74317_idents+=jule::Str(", ", 2) + _72431_params[static_cast<jule::Int>(_72517_n - _73017_diff)]->_field_decl->_field_ident;
	}
	_iter_next_5685404848:;
	(_73017_diff)--;
	goto _iter_begin_5685404848;
	_iter_end_5685404848:;
	_74317_idents=_74317_idents.slice(2LL);
	(*this)._method_push_err(jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(_74317_idents)}));
	_72454_ok = false;
	return _72454_ok;
}



inline jule::Bool _1510d19a0_FnCallArgChecker::_method_check_arg(jule::Ref<_15081bcd0_ParamIns> _75332_p,jule::Ref<_151290fd0_Data> _75350_arg,_150640f50_Token _75366_error_token) {
	jule::Bool _75388_ok = jule::Bool();
	if ((*this)._field_dynamic_annotation) {
		_1510d19a0_DynamicTypeAnnotation _75521_dta = _1510d19a0_DynamicTypeAnnotation((*this)._field_e,(*this)._field_f,_75332_p,_75350_arg,_75366_error_token,nullptr);
		_75388_ok=_75521_dta._method_annotate();
		if ((!(_75388_ok))) {
			(*this)._method_push_err_token(_75366_error_token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>({}));
			_75388_ok = false;
			return _75388_ok;
		}
	}
	(*this)._field_e->_field_s->_method_check_validity_for_init_expr(_75332_p->_field_decl->_field_mutable,_75332_p->_field_decl->_field_reference,_75332_p->_field_kind,_75350_arg,_75366_error_token);
	(*this)._field_e->_field_s->_method_check_assign_type(_75332_p->_field_kind,_75350_arg,_75366_error_token,false);
	_75388_ok = true;
	return _75388_ok;
}



inline jule::Bool _1510d19a0_FnCallArgChecker::_method_push(jule::Ref<_15081bcd0_ParamIns> _77527_p,jule::Ref<_1506406d0_Expr> _77545_arg) {
	jule::Bool _77559_ok = jule::Bool();
	jule::Ref<_151290fd0_Data> _77617_d = jule::new_ref<_151290fd0_Data>();
	if ((!((*this)._field_dynamic_annotation)) && (!(_77527_p->_field_decl->_field_variadic))) {
		jule::Ref<_15177b070_TypeKind> _77821_old = (*this)._field_e->_field_prefix;
		(*this)._field_e->_field_prefix=_77527_p->_field_kind;
		_77617_d=(*this)._field_e->_method_eval_expr_kind(_77545_arg->_field_kind);
		(*this)._field_e->_field_prefix=_77821_old;
	} else {
		jule::Ref<_15177b070_TypeKind> _78321_old = (*this)._field_e->_field_prefix;
		jule::drop((*this)._field_e->_field_prefix);
		_77617_d=(*this)._field_e->_method_eval_expr_kind(_77545_arg->_field_kind);
		(*this)._field_e->_field_prefix=_78321_old;
	}
	if ((!(jule::real(_77617_d)))) {
		_77559_ok = false;
		return _77559_ok;
	}
	(*this)._field_arg_models=jule::append((*this)._field_arg_models,jule::Slice<jule::Any>({_77617_d->_field_model}));
	_77559_ok = (*this)._method_check_arg(_77527_p,_77617_d,_77545_arg->_field_token);
	return _77559_ok;
}



inline jule::Bool _1510d19a0_FnCallArgChecker::_method_push_variadic(jule::Ref<_15081bcd0_ParamIns> _79536_p,jule::Int _79554_i) {
	jule::Bool _79564_ok = jule::Bool();
	_79564_ok=true;
	jule::Bool _79717_variadiced = false;
	jule::Bool _79813_more = (_79554_i + 1LL) < (*this)._field_args.len();
	jule::Ref<_150f25dd0_SliceExprModel> _79917_model = jule::new_struct<_150f25dd0_SliceExprModel>(new( std::nothrow ) _150f25dd0_SliceExprModel(_79536_p->_field_kind,jule::Slice<jule::Any>()));
	jule::Ref<_15177b070_TypeKind> _80317_old = (*this)._field_e->_field_prefix;
	_iter_begin_5685451824:;
	if (!(_79554_i < (*this)._field_args.len())) { goto _iter_end_5685451824; }
	{
		jule::Ref<_1506406d0_Expr> _80521_arg = (*this)._field_args[static_cast<jule::Int>(_79554_i)];
		{
			auto _match_expr{ _80521_arg->_field_kind };
			if (!(_match_expr.type_is<jule::Ref<_1506406d0_VariadicExpr>>())) { goto _case_end_5685456848; }
			_case_begin_5685456848:;
			{
				(*this)._field_e->_field_prefix=jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_15177b070_Slc>(new( std::nothrow ) _15177b070_Slc(_79536_p->_field_kind))));
			}
			goto _match_end_5685454992;
			_case_end_5685456848:;
			_case_begin_5685456064:;
			{
				(*this)._field_e->_field_prefix=_79536_p->_field_kind;
			}
			goto _match_end_5685454992;
			_case_end_5685456064:;
			_match_end_5685454992:;
		}
		jule::Ref<_151290fd0_Data> _81521_d = (*this)._field_e->_method_eval_expr_kind(_80521_arg->_field_kind);
		if ((!(jule::real(_81521_d)))) {
			_79564_ok=false;
			goto _iter_next_5685451824;
		}
		if (_81521_d->_field_variadiced) {
			_79717_variadiced=true;
			_81521_d->_field_variadiced=false;
			_79536_p->_field_kind->_field_variadic=true;
			_81521_d->_field_kind->_field_variadic=true;
			__JULE_DEFER({
				_81521_d->_field_kind->_field_variadic=false;
				_79536_p->_field_kind->_field_variadic=false;
			});
			{
				auto _match_expr{ _81521_d->_field_model };
				if (!(_match_expr.type_is<jule::Ref<_150f25dd0_SliceExprModel>>())) { goto _case_end_5685467136; }
				_case_begin_5685467136:;
				{
					_79917_model=_81521_d->_field_model.operator jule::Ref<_150f25dd0_SliceExprModel>();
					_79917_model->_field_elem_kind=_79536_p->_field_kind;
				}
				goto _match_end_5685462944;
				_case_end_5685467136:;
				_case_begin_5685467024:;
				{
					jule::drop(_79917_model);
					(*this)._field_arg_models=jule::append((*this)._field_arg_models,jule::Slice<jule::Any>({_81521_d->_field_model}));
				}
				goto _match_end_5685462944;
				_case_end_5685467024:;
				_match_end_5685462944:;
			}
			_79564_ok=(*this)._method_check_arg(_79536_p,_81521_d,_80521_arg->_field_token) && _79564_ok;
			goto _iter_next_5685451824;
		}
		_79917_model->_field_elems=jule::append(_79917_model->_field_elems,jule::Slice<jule::Any>({_81521_d->_field_model}));
		_79564_ok=(*this)._method_check_arg(_79536_p,_81521_d,_80521_arg->_field_token) && _79564_ok;
	}
	_iter_next_5685451824:;
	(_79554_i)++;
	goto _iter_begin_5685451824;
	_iter_end_5685451824:;
	(*this)._field_e->_field_prefix=_80317_old;
	if (_79717_variadiced && _79813_more) {
		(*this)._method_push_err(jule::Str("variadic argument can't use with more argument", 46),jule::Slice<jule::Any>({}));
	}
	if (jule::real(_79917_model)) {
		(*this)._field_arg_models=jule::append((*this)._field_arg_models,jule::Slice<jule::Any>({jule::Any(_79917_model)}));
	}
	_79564_ok = _79564_ok;
	return _79564_ok;
}



inline jule::Bool _1510d19a0_FnCallArgChecker::_method_check_args(jule::Slice<jule::Ref<_15081bcd0_ParamIns>> _86133_params) {
	jule::Bool _86156_ok = jule::Bool();
	_86156_ok=true;
	jule::Int _86317_i = 0LL;
	_julec_label_iter:;
	_iter_begin_5685484480:;
	if (!(_86317_i < _86133_params.len())) { goto _iter_end_5685484480; }
	{
		jule::Ref<_15081bcd0_ParamIns> _86621_p = _86133_params[static_cast<jule::Int>(_86317_i)];
		{
			if (!((_86621_p->_field_decl->_method_is_self()))) { goto _case_end_5685488304; }
			goto _match_end_5685487296;
			_case_end_5685488304:;
			if (!((_86621_p->_field_decl->_field_variadic))) { goto _case_end_5685488608; }
			_case_begin_5685488608:;
			{
				_86156_ok=(*this)._method_push_variadic(_86621_p,_86317_i) && _86156_ok;
				goto _iter_end_5685484480;
			}
			goto _match_end_5685487296;
			_case_end_5685488608:;
			if (!(((*this)._field_args.len() <= _86317_i))) { goto _case_end_5685488720; }
			_case_begin_5685488720:;
			{
				_86156_ok=false;
				goto _iter_end_5685484480;
			}
			goto _match_end_5685487296;
			_case_end_5685488720:;
			_case_begin_5685487488:;
			{
				_86156_ok=(*this)._method_push(_86621_p,(*this)._field_args[static_cast<jule::Int>(_86317_i)]) && _86156_ok;
			}
			goto _match_end_5685487296;
			_case_end_5685487488:;
			_match_end_5685487296:;
		}
		(_86317_i)++;
	}
	_iter_next_5685484480:;
	goto _iter_begin_5685484480;
	_iter_end_5685484480:;
	_86156_ok = _86156_ok;
	return _86156_ok;
}



inline jule::Bool _1510d19a0_FnCallArgChecker::_method_check_dynamic_type_annotation(void) {
	jule::Bool _88850_ok = jule::Bool();
	{
		auto __julec_range_expr = (*this)._field_f->_field_generics;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_15177b070_TypeKind> _1510d19a0_g = *__julec_range_begin;
			_iter_begin_5685496800:;
			{
				if ((!(jule::real(_1510d19a0_g)))) {
					(*this)._method_push_err(jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>({}));
					_88850_ok = false;
					return _88850_ok;
				}
			}
			_iter_next_5685496800:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1510d19a0_g = *__julec_range_begin; goto _iter_begin_5685496800; }
			_iter_end_5685496800:;
		}
	}
	_88850_ok = true;
	return _88850_ok;
}



inline jule::Bool _1510d19a0_FnCallArgChecker::_method_check(void) {
	jule::Bool _89826_ok = jule::Bool();
	jule::Slice<jule::Ref<_15081bcd0_ParamIns>> _89917_params = (*this)._method_get_params();
	_89826_ok=(*this)._method_check_counts(_89917_params);
	if ((!(_89826_ok))) {
		_89826_ok = false;
		return _89826_ok;
	}
	_89826_ok=(*this)._method_check_args(_89917_params);
	if (_89826_ok && (*this)._field_dynamic_annotation) {
		_89826_ok=(*this)._method_check_dynamic_type_annotation();
	}
	_89826_ok = _89826_ok;
	return _89826_ok;
}







std::ostream &operator<<(std::ostream &_Stream, const _1510d19a0_FnCallArgChecker &_Src) {
	_Stream << "FnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamic_annotation:" << _Src._field_dynamic_annotation << ", ";
	_Stream << "arg_models:" << _Src._field_arg_models;
	_Stream << "}";
	return _Stream;
}



inline void _1510d19a0_AssignTypeChecker::_method_push_err(jule::Str _45527_fmt,jule::Slice<jule::Any> _45540_args) {
	(*this)._field_s->_method_push_err((*this)._field_error_token,_45527_fmt,_45540_args);
}



inline jule::Bool _1510d19a0_AssignTypeChecker::_method_check_validity(void) {
	jule::Bool _46017_valid = true;
	{
		if (!((jule::real((*this)._field_d->_field_kind->_method_fnc())))) { goto _case_end_5685206032; }
		_case_begin_5685206032:;
		{
			jule::Ref<_15081bcd0_FnIns> _46417_f = (*this)._field_d->_field_kind->_method_fnc();
			{
				if (!((_46417_f->_method_is_builtin()))) { goto _case_end_5685210144; }
				_case_begin_5685210144:;
				{
					(*this)._method_push_err(jule::Str("built-in define cannot use as anonymous function", 48),jule::Slice<jule::Any>({}));
					_46017_valid=false;
				}
				goto _match_end_5685209888;
				_case_end_5685210144:;
				if (!((_46417_f->_field_decl->_method_is_method()))) { goto _case_end_5685210256; }
				_case_begin_5685210256:;
				{
					(*this)._method_push_err(jule::Str("methods cannot use as anonymous function", 40),jule::Slice<jule::Any>({}));
					_46017_valid=false;
				}
				goto _match_end_5685209888;
				_case_end_5685210256:;
				if (!((_46417_f->_field_decl->_field_generics.len() > 0LL))) { goto _case_end_5685210368; }
				_case_begin_5685210368:;
				{
					(*this)._method_push_err(jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>({}));
					_46017_valid=false;
				}
				goto _match_end_5685209888;
				_case_end_5685210368:;
				_match_end_5685209888:;
			}
		}
		goto _match_end_5685205792;
		_case_end_5685206032:;
		if (!((jule::real((*this)._field_d->_field_kind->_method_tup())))) { goto _case_end_5685206144; }
		_case_begin_5685206144:;
		{
			(*this)._method_push_err(jule::Str("tuples cannot assign to single define in same time", 50),jule::Slice<jule::Any>({}));
			_46017_valid=false;
		}
		goto _match_end_5685205792;
		_case_end_5685206144:;
		_match_end_5685205792:;
	}
	return _46017_valid;
}



inline jule::Bool _1510d19a0_AssignTypeChecker::_method_check_const(void) {
	if ((((!((*this)._field_d->_method_is_const())) || (!(jule::real((*this)._field_dest->_method_prim())))) || (!(jule::real((*this)._field_d->_field_kind->_method_prim())))) || (!(_1519b1410_is_num((*this)._field_d->_field_kind->_method_prim()->_field_kind)))) {
		return false;
	}
	jule::Str _49613_kind = (*this)._field_dest->_method_prim()->_field_kind;
	{
		if (!((_1519b1410_is_float(_49613_kind)))) { goto _case_end_5685227248; }
		_case_begin_5685227248:;
		{
			if ((!(_1510d19a0_float_assignable(_49613_kind,(*this)._field_d)))) {
				(*this)._method_push_err(jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>({}));
				return false;
			}
		}
		goto _match_end_5685226768;
		_case_end_5685227248:;
		if (!((_1519b1410_is_int(_49613_kind)))) { goto _case_end_5685227360; }
		_case_begin_5685227360:;
		{
			if ((!(_1510d19a0_int_assignable(_49613_kind,(*this)._field_d)))) {
				(*this)._method_push_err(jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>({}));
				return false;
			}
		}
		goto _match_end_5685226768;
		_case_end_5685227360:;
		_case_begin_5685226896:;
		{
			return false;
		}
		goto _match_end_5685226768;
		_case_end_5685226896:;
		_match_end_5685226768:;
	}
	return true;
}



inline jule::Bool _1510d19a0_AssignTypeChecker::_method_check(void) {
	{
		if (!(((!(jule::real((*this)._field_d)))))) { goto _case_end_5685235968; }
		_case_begin_5685235968:;
		{
			return false;
		}
		goto _match_end_5685229232;
		_case_end_5685235968:;
		if (!(((!((*this)._method_check_validity()))))) { goto _case_end_5685235568; }
		_case_begin_5685235568:;
		{
			return false;
		}
		goto _match_end_5685229232;
		_case_end_5685235568:;
		if (!(((*this)._method_check_const()))) { goto _case_end_5685235680; }
		_case_begin_5685235680:;
		{
			return true;
		}
		goto _match_end_5685229232;
		_case_end_5685235680:;
		_case_begin_5685229392:;
		{
			return (*this)._field_s->_method_check_type_compatibility((*this)._field_dest,(*this)._field_d->_field_kind,(*this)._field_error_token,(*this)._field_deref);
		}
		goto _match_end_5685229232;
		_case_end_5685229392:;
		_match_end_5685229232:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1510d19a0_AssignTypeChecker &_Src) {
	_Stream << "AssignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "deref:" << _Src._field_deref;
	_Stream << "}";
	return _Stream;
}



inline void _1510d19a0_TypeCompatibilityChecker::_method_push_err(jule::Str _15127_fmt,jule::Slice<jule::Any> _15140_args) {
	(*this)._field_s->_method_push_err((*this)._field_error_token,_15127_fmt,_15140_args);
}



inline jule::Bool _1510d19a0_TypeCompatibilityChecker::_method_check_trait(void) {
	jule::Bool _15532_ok = jule::Bool();
	if ((*this)._field_src->_method_is_nil()) {
		_15532_ok = true;
		return _15532_ok;
	}
	jule::Ref<_150f166e0_Trait> _16013_trt = (*this)._field_dest->_method_trt();
	jule::Bool _16117_ref = false;
	{
		if (!((jule::real((*this)._field_src->_method_ref())))) { goto _case_end_5685049472; }
		_case_begin_5685049472:;
		{
			_16117_ref=true;
			(*this)._field_src=(*this)._field_src->_method_ref()->_field_elem;
			if (jule::real((*this)._field_src->_method_strct())) {
				_15532_ok = false;
				return _15532_ok;
			}
			goto _case_begin_5685048976;
		}
		goto _match_end_5685047776;
		_case_end_5685049472:;
		if (!((jule::real((*this)._field_src->_method_strct())))) { goto _case_end_5685048976; }
		_case_begin_5685048976:;
		{
			jule::Ref<_150a13110_StructIns> _17217_s = (*this)._field_src->_method_strct();
			if ((!(_17217_s->_field_decl->_method_is_implements(_16013_trt)))) {
				_15532_ok = false;
				return _15532_ok;
			}
			if (_1510d19a0_trait_has_reference_receiver(_16013_trt) && (!(_16117_ref))) {
				(*this)._method_push_err(jule::Str("trait has reference receiver parameter used method, cannot assign non-reference instance", 88),jule::Slice<jule::Any>({}));
				_15532_ok = false;
				return _15532_ok;
			}
			_15532_ok = true;
			return _15532_ok;
		}
		goto _match_end_5685047776;
		_case_end_5685048976:;
		if (!((jule::real((*this)._field_src->_method_trt())))) { goto _case_end_5685049088; }
		_case_begin_5685049088:;
		{
			_15532_ok = _16013_trt == (*this)._field_src->_method_trt();
			return _15532_ok;
		}
		goto _match_end_5685047776;
		_case_end_5685049088:;
		_case_begin_5685048064:;
		{
			_15532_ok = false;
			return _15532_ok;
		}
		goto _match_end_5685047776;
		_case_end_5685048064:;
		_match_end_5685047776:;
	}
}



inline jule::Bool _1510d19a0_TypeCompatibilityChecker::_method_check_ref(void) {
	jule::Bool _19230_ok = jule::Bool();
	if ((*this)._field_dest->_method_to_str() == (*this)._field_src->_method_to_str()) {
		_19230_ok = true;
		return _19230_ok;
	} else if ((!((*this)._field_deref))) {
		_19230_ok = false;
		return _19230_ok;
	} else if ((!(jule::real((*this)._field_src->_method_ref())))) {
		(*this)._field_dest=(*this)._field_dest->_method_ref()->_field_elem;
		_19230_ok = (*this)._method_check();
		return _19230_ok;
	}
	(*this)._field_src=(*this)._field_src->_method_ref()->_field_elem;
	_19230_ok = (*this)._method_check();
	return _19230_ok;
}



inline jule::Bool _1510d19a0_TypeCompatibilityChecker::_method_check_ptr(void) {
	jule::Bool _20630_ok = jule::Bool();
	if ((*this)._field_src->_method_is_nil()) {
		_20630_ok = true;
		return _20630_ok;
	}
	jule::Ref<_15177b070_Ptr> _21117_src = (*this)._field_src->_method_ptr();
	if ((!(jule::real(_21117_src)))) {
		_20630_ok = false;
		return _20630_ok;
	}
	jule::Ref<_15177b070_Ptr> _21617_dest = (*this)._field_dest->_method_ptr();
	if (_21617_dest->_method_is_unsafe()) {
		_20630_ok = true;
		return _20630_ok;
	}
	_1510d19a0_TypeCompatibilityChecker _22217_sub = _1510d19a0_TypeCompatibilityChecker((*this)._field_s,_21617_dest->_field_elem,_21117_src->_field_elem,(*this)._field_error_token,true,jule::Bool(),true);
	_20630_ok = _22217_sub._method_check();
	return _20630_ok;
}



inline jule::Bool _1510d19a0_TypeCompatibilityChecker::_method_check_slc(void) {
	jule::Bool _23330_ok = jule::Bool();
	if ((*this)._field_src->_method_is_nil()) {
		_23330_ok = true;
		return _23330_ok;
	}
	jule::Ref<_15177b070_Slc> _23817_src = (*this)._field_src->_method_slc();
	if ((!(jule::real(_23817_src)))) {
		_23330_ok = false;
		return _23330_ok;
	}
	jule::Ref<_15177b070_Slc> _24217_dest = (*this)._field_dest->_method_slc();
	_1510d19a0_TypeCompatibilityChecker _24417_sub = _1510d19a0_TypeCompatibilityChecker((*this)._field_s,_24217_dest->_field_elem,_23817_src->_field_elem,(*this)._field_error_token,true,jule::Bool(),true);
	_23330_ok = _24417_sub._method_check();
	return _23330_ok;
}



inline jule::Bool _1510d19a0_TypeCompatibilityChecker::_method_check_arr(void) {
	jule::Bool _25530_ok = jule::Bool();
	jule::Ref<_15177b070_Arr> _25617_src = (*this)._field_src->_method_arr();
	if ((!(jule::real(_25617_src)))) {
		_25530_ok = false;
		return _25530_ok;
	}
	jule::Ref<_15177b070_Arr> _26017_dest = (*this)._field_dest->_method_arr();
	if (_26017_dest->_field_n != _25617_src->_field_n) {
		_25530_ok = false;
		return _25530_ok;
	}
	_1510d19a0_TypeCompatibilityChecker _26517_sub = _1510d19a0_TypeCompatibilityChecker((*this)._field_s,_26017_dest->_field_elem,_25617_src->_field_elem,(*this)._field_error_token,true,jule::Bool(),true);
	_25530_ok = _26517_sub._method_check();
	return _25530_ok;
}



inline jule::Bool _1510d19a0_TypeCompatibilityChecker::_method_check_map(void) {
	jule::Bool _27630_ok = jule::Bool();
	if ((*this)._field_src->_method_is_nil()) {
		_27630_ok = true;
		return _27630_ok;
	}
	jule::Ref<_15177b070_Map> _28117_src = (*this)._field_src->_method_map();
	if ((!(jule::real(_28117_src)))) {
		_27630_ok = false;
		return _27630_ok;
	}
	jule::Ref<_15177b070_Map> _28617_dest = (*this)._field_dest->_method_map();
	_1510d19a0_TypeCompatibilityChecker _28817_sub = _1510d19a0_TypeCompatibilityChecker((*this)._field_s,_28617_dest->_field_key,_28117_src->_field_key,(*this)._field_error_token,jule::Bool(),jule::Bool(),true);
	if ((!(_28817_sub._method_check()))) {
		_27630_ok = false;
		return _27630_ok;
	}
	_28817_sub._field_src=_28117_src->_field_val;
	_28817_sub._field_dest=_28617_dest->_field_val;
	_27630_ok = _28817_sub._method_check();
	return _27630_ok;
}



inline jule::Bool _1510d19a0_TypeCompatibilityChecker::_method_check_struct(void) {
	jule::Bool _30433_ok = jule::Bool();
	jule::Ref<_150a13110_StructIns> _30517_src = (*this)._field_src->_method_strct();
	if ((!(jule::real(_30517_src)))) {
		_30433_ok = false;
		return _30433_ok;
	}
	jule::Ref<_150a13110_StructIns> _30917_dest = (*this)._field_dest->_method_strct();
	{
		if (!(((_30917_dest->_field_decl).alloc != (_30517_src->_field_decl).alloc))) { goto _case_end_5685119344; }
		_case_begin_5685119344:;
		{
			_30433_ok = false;
			return _30433_ok;
		}
		goto _match_end_5685119120;
		_case_end_5685119344:;
		if (!((_30917_dest->_field_generics.len() == 0LL))) { goto _case_end_5685119456; }
		_case_begin_5685119456:;
		{
			_30433_ok = true;
			return _30433_ok;
		}
		goto _match_end_5685119120;
		_case_end_5685119456:;
		_match_end_5685119120:;
	}
	{
		auto __julec_range_expr = _30917_dest->_field_generics;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _1510d19a0_i = 0;
			jule::Ref<_15177b070_TypeKind> _1510d19a0_dg = *__julec_range_begin;
			_iter_begin_5685122560:;
			{
				jule::Ref<_15177b070_TypeKind> _31921_sg = _30517_src->_field_generics[static_cast<jule::Int>(_1510d19a0_i)];
				_1510d19a0_TypeCompatibilityChecker _32021_sub = _1510d19a0_TypeCompatibilityChecker((*this)._field_s,_1510d19a0_dg,_31921_sg,(*this)._field_error_token,jule::Bool(),jule::Bool(),jule::Bool());
				if ((!(_32021_sub._method_check()))) {
					_30433_ok = false;
					return _30433_ok;
				}
			}
			_iter_next_5685122560:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_1510d19a0_i; _1510d19a0_dg = *__julec_range_begin; goto _iter_begin_5685122560; }
			_iter_end_5685122560:;
		}
	}
	_30433_ok = true;
	return _30433_ok;
}



inline jule::Bool _1510d19a0_TypeCompatibilityChecker::_method_check_fn(void) {
	jule::Bool _33329_ok = jule::Bool();
	if ((*this)._field_src->_method_is_nil()) {
		_33329_ok = true;
		return _33329_ok;
	}
	jule::Ref<_15081bcd0_FnIns> _33817_src = (*this)._field_src->_method_fnc();
	if ((!(jule::real(_33817_src)))) {
		_33329_ok = false;
		return _33329_ok;
	}
	jule::Ref<_15081bcd0_FnIns> _34317_dest = (*this)._field_dest->_method_fnc();
	if (jule::real(_33817_src->_field_result) != jule::real(_34317_dest->_field_result)) {
		_33329_ok = false;
		return _33329_ok;
	}
	if (_33817_src->_field_params.len() != _34317_dest->_field_params.len()) {
		_33329_ok = false;
		return _33329_ok;
	}
	{
		auto __julec_range_expr = _33817_src->_field_params;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _1510d19a0_i = 0;
			_iter_begin_5685138784:;
			{
				jule::Ref<_15081bcd0_ParamIns> _35221_srcp = _33817_src->_field_params[static_cast<jule::Int>(_1510d19a0_i)];
				jule::Ref<_15081bcd0_ParamIns> _35321_destp = _34317_dest->_field_params[static_cast<jule::Int>(_1510d19a0_i)];
				if (jule::real(_35221_srcp) != jule::real(_35321_destp)) {
					_33329_ok = false;
					return _33329_ok;
				}
				_1510d19a0_TypeCompatibilityChecker _35821_sub = _1510d19a0_TypeCompatibilityChecker((*this)._field_s,_35321_destp->_field_kind,_35221_srcp->_field_kind,(*this)._field_error_token,jule::Bool(),jule::Bool(),jule::Bool());
				if ((!(_35821_sub._method_check()))) {
					_33329_ok = false;
					return _33329_ok;
				}
			}
			_iter_next_5685138784:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_1510d19a0_i; goto _iter_begin_5685138784; }
			_iter_end_5685138784:;
		}
	}
	if (jule::real(_33817_src->_field_result)) {
		_1510d19a0_TypeCompatibilityChecker _37021_sub = _1510d19a0_TypeCompatibilityChecker((*this)._field_s,_34317_dest->_field_result,_33817_src->_field_result,(*this)._field_error_token,jule::Bool(),jule::Bool(),jule::Bool());
		if ((!(_37021_sub._method_check()))) {
			_33329_ok = false;
			return _33329_ok;
		}
	}
	_33329_ok = true;
	return _33329_ok;
}



inline jule::Bool _1510d19a0_TypeCompatibilityChecker::_method_check_enum(void) {
	jule::Bool _38431_ok = jule::Bool();
	jule::Ref<_150f1c930_Enum> _38513_r = (*this)._field_src->_method_enm();
	if ((!(jule::real(_38513_r)))) {
		_38431_ok = false;
		return _38431_ok;
	}
	_38431_ok = ((*this)._field_dest->_method_enm()).alloc == (_38513_r).alloc;
	return _38431_ok;
}



inline jule::Bool _1510d19a0_TypeCompatibilityChecker::_method_check_prim(void) {
	jule::Bool _39231_ok = jule::Bool();
	jule::Ref<_15177b070_Prim> _39313_dest = (*this)._field_dest->_method_prim();
	jule::Ref<_15177b070_Prim> _39417_src = (*this)._field_src->_method_prim();
	if ((!(jule::real(_39417_src)))) {
		_39231_ok = _39313_dest->_method_is_any();
		return _39231_ok;
	}
	if (_39313_dest->_method_is_any()) {
		_39231_ok = (!((*this)._field_ignore_any)) || _39417_src->_method_is_any();
		return _39231_ok;
	}
	_39231_ok = _151a210d0_types_are_compatible(_39313_dest->_method_to_str(),_39417_src->_method_to_str());
	return _39231_ok;
}



inline jule::Bool _1510d19a0_TypeCompatibilityChecker::_method_check_cpp_linked(void) {
	jule::Bool _40437_ok = jule::Bool();
	_40437_ok = (*this)._field_src->_method_is_cpp_linked() && ((*this)._field_dest->_field_cpp_ident == (*this)._field_src->_field_cpp_ident);
	return _40437_ok;
}



inline jule::Bool _1510d19a0_TypeCompatibilityChecker::_method_check(void) {
	jule::Bool _40926_ok = jule::Bool();
	if ((!(jule::real((*this)._field_src)))) {
		_40926_ok = false;
		return _40926_ok;
	}
	if ((*this)._field_dest->_field_variadic != (*this)._field_src->_field_variadic) {
		_40926_ok = false;
		return _40926_ok;
	} else if ((*this)._field_dest->_field_variadic) {
		(*this)._field_ignore_any=true;
	}
	if (jule::real((*this)._field_dest->_method_ref())) {
		_40926_ok = (*this)._method_check_ref();
		return _40926_ok;
	}
	if ((!((*this)._field_sub_check)) && jule::real((*this)._field_src->_method_ref())) {
		(*this)._field_src=(*this)._field_src->_method_ref()->_field_elem;
	}
	{
		if (!((jule::real((*this)._field_dest->_method_prim())))) { goto _case_end_5685182304; }
		_case_begin_5685182304:;
		{
			_40926_ok = (*this)._method_check_prim();
			return _40926_ok;
		}
		goto _match_end_5685178544;
		_case_end_5685182304:;
		if (!(((*this)._field_dest->_method_is_cpp_linked()))) { goto _case_end_5685181872; }
		_case_begin_5685181872:;
		{
			_40926_ok = (*this)._method_check_cpp_linked();
			return _40926_ok;
		}
		goto _match_end_5685178544;
		_case_end_5685181872:;
		if (!((jule::real((*this)._field_dest->_method_trt())))) { goto _case_end_5685181984; }
		_case_begin_5685181984:;
		{
			_40926_ok = (*this)._method_check_trait();
			return _40926_ok;
		}
		goto _match_end_5685178544;
		_case_end_5685181984:;
		if (!((jule::real((*this)._field_dest->_method_ptr())))) { goto _case_end_5685182096; }
		_case_begin_5685182096:;
		{
			_40926_ok = (*this)._method_check_ptr();
			return _40926_ok;
		}
		goto _match_end_5685178544;
		_case_end_5685182096:;
		if (!((jule::real((*this)._field_dest->_method_slc())))) { goto _case_end_5685181216; }
		_case_begin_5685181216:;
		{
			_40926_ok = (*this)._method_check_slc();
			return _40926_ok;
		}
		goto _match_end_5685178544;
		_case_end_5685181216:;
		if (!((jule::real((*this)._field_dest->_method_arr())))) { goto _case_end_5685181328; }
		_case_begin_5685181328:;
		{
			_40926_ok = (*this)._method_check_arr();
			return _40926_ok;
		}
		goto _match_end_5685178544;
		_case_end_5685181328:;
		if (!((jule::real((*this)._field_dest->_method_map())))) { goto _case_end_5685181440; }
		_case_begin_5685181440:;
		{
			_40926_ok = (*this)._method_check_map();
			return _40926_ok;
		}
		goto _match_end_5685178544;
		_case_end_5685181440:;
		if (!((jule::real((*this)._field_dest->_method_enm())))) { goto _case_end_5685182560; }
		_case_begin_5685182560:;
		{
			_40926_ok = (*this)._method_check_enum();
			return _40926_ok;
		}
		goto _match_end_5685178544;
		_case_end_5685182560:;
		if (!((jule::real((*this)._field_dest->_method_strct())))) { goto _case_end_5685182672; }
		_case_begin_5685182672:;
		{
			_40926_ok = (*this)._method_check_struct();
			return _40926_ok;
		}
		goto _match_end_5685178544;
		_case_end_5685182672:;
		if (!((jule::real((*this)._field_dest->_method_fnc())))) { goto _case_end_5685182784; }
		_case_begin_5685182784:;
		{
			_40926_ok = (*this)._method_check_fn();
			return _40926_ok;
		}
		goto _match_end_5685178544;
		_case_end_5685182784:;
		if (!((_15177b070_is_nil_compatible((*this)._field_dest)))) { goto _case_end_5685182896; }
		_case_begin_5685182896:;
		{
			_40926_ok = (*this)._field_src->_method_is_nil();
			return _40926_ok;
		}
		goto _match_end_5685178544;
		_case_end_5685182896:;
		_case_begin_5685178640:;
		{
			_40926_ok = false;
			return _40926_ok;
		}
		goto _match_end_5685178544;
		_case_end_5685178640:;
		_match_end_5685178544:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1510d19a0_TypeCompatibilityChecker &_Src) {
	_Stream << "TypeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "ignore_any:" << _Src._field_ignore_any << ", ";
	_Stream << "deref:" << _Src._field_deref << ", ";
	_Stream << "sub_check:" << _Src._field_sub_check;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1511317d0_Var::_method_is_initialized(void) {
	return jule::real((*this)._field_value);
}



inline jule::Bool _1511317d0_Var::_method_is_type_inferred(void) {
	return (!(jule::real((*this)._field_kind))) || (!(jule::real((*this)._field_kind->_field_decl)));
}







std::ostream &operator<<(std::ostream &_Stream, const _1511317d0_Var &_Src) {
	_Stream << "Var{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "constant:" << _Src._field_constant << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "value:" << _Src._field_value << ", ";
	_Stream << "references:" << _Src._field_references << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "depends:" << _Src._field_depends;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_150f26340_ImportInfo> _150f26340_ImportInfo::_method_find_package(jule::Str ) {
	return jule::new_ref<_150f26340_ImportInfo>();
}



inline jule::Ref<_150f26340_ImportInfo> _150f26340_ImportInfo::_method_select_package(jule::Fn<jule::Bool(jule::Ref<_150f26340_ImportInfo>)> ) {
	return jule::new_ref<_150f26340_ImportInfo>();
}



inline jule::Ref<_1511317d0_Var> _150f26340_ImportInfo::_method_find_var(jule::Str _14431_ident,jule::Bool _14443_cpp_linked) {
	if ((!((*this)._method_is_lookupable(_14431_ident)))) {
		return jule::new_ref<_1511317d0_Var>();
	}
	return _150f26340_find_var_in_package((*this)._field_package->_field_files,_14431_ident,false);
}



inline jule::Ref<_15177b070_TypeAlias> _150f26340_ImportInfo::_method_find_type_alias(jule::Str _15738_ident,jule::Bool _15750_cpp_linked) {
	if ((!((*this)._method_is_lookupable(_15738_ident)))) {
		return jule::new_ref<_15177b070_TypeAlias>();
	}
	return _150f26340_find_type_alias_in_package((*this)._field_package->_field_files,_15738_ident,false);
}



inline jule::Ref<_150a13110_Struct> _150f26340_ImportInfo::_method_find_struct(jule::Str _17034_ident,jule::Bool _17046_cpp_linked) {
	if ((!((*this)._method_is_lookupable(_17034_ident)))) {
		return jule::new_ref<_150a13110_Struct>();
	}
	return _150f26340_find_struct_in_package((*this)._field_package->_field_files,_17034_ident,false);
}



inline jule::Ref<_15081bcd0_Fn> _150f26340_ImportInfo::_method_find_fn(jule::Str _18330_ident,jule::Bool _18342_cpp_linked) {
	if ((!((*this)._method_is_lookupable(_18330_ident)))) {
		return jule::new_ref<_15081bcd0_Fn>();
	}
	return _150f26340_find_fn_in_package((*this)._field_package->_field_files,_18330_ident,false);
}



inline jule::Ref<_150f166e0_Trait> _150f26340_ImportInfo::_method_find_trait(jule::Str _19533_ident) {
	if ((!((*this)._method_is_lookupable(_19533_ident)))) {
		return jule::new_ref<_150f166e0_Trait>();
	}
	return _150f26340_find_trait_in_package((*this)._field_package->_field_files,_19533_ident);
}



inline jule::Ref<_150f1c930_Enum> _150f26340_ImportInfo::_method_find_enum(jule::Str _20732_ident) {
	if ((!((*this)._method_is_lookupable(_20732_ident)))) {
		return jule::new_ref<_150f1c930_Enum>();
	}
	return _150f26340_find_enum_in_package((*this)._field_package->_field_files,_20732_ident);
}



inline jule::Bool _150f26340_ImportInfo::_method_is_lookupable(jule::Str _21728_ident) {
	if ((*this)._field_cpp_linked) {
		return false;
	}
	if ((!((*this)._field_import_all))) {
		if ((*this)._method_exist_ident(jule::Str("self", 4))) {
			return true;
		}
		if ((*this)._field_selected.len() > 0LL) {
			if ((!((*this)._method_exist_ident(_21728_ident)))) {
				return false;
			}
		}
	}
	return true;
}



inline jule::Bool _150f26340_ImportInfo::_method_exist_ident(jule::Str _23726_ident) {
	{
		auto __julec_range_expr = (*this)._field_selected;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			_150640f50_Token _150f26340_sident = *__julec_range_begin;
			_iter_begin_5683821104:;
			{
				if (_150f26340_sident._field_kind == _23726_ident) {
					return true;
				}
			}
			_iter_next_5683821104:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _150f26340_sident = *__julec_range_begin; goto _iter_begin_5683821104; }
			_iter_end_5683821104:;
		}
	}
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _150f26340_ImportInfo &_Src) {
	_Stream << "ImportInfo{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "link_path:" << _Src._field_link_path << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "duplicate:" << _Src._field_duplicate << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "std:" << _Src._field_std << ", ";
	_Stream << "import_all:" << _Src._field_import_all << ", ";
	_Stream << "selected:" << _Src._field_selected << ", ";
	_Stream << "package:" << _Src._field_package;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _150d29660_ScopeLabel &_Src) {
	_Stream << "ScopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _150f235a0_Impl::_method_is_trait_impl(void) {
	return (*this)._field_base._field_id != 0LLU;
}



inline jule::Bool _150f235a0_Impl::_method_is_struct_impl(void) {
	return (*this)._field_base._field_id == 0LLU;
}







std::ostream &operator<<(std::ostream &_Stream, const _150f235a0_Impl &_Src) {
	_Stream << "Impl{";
	_Stream << "base:" << _Src._field_base << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "methods:" << _Src._field_methods;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _150f1c930_Enum::_method_to_str(void) {
	return (*this)._field_ident;
}



inline jule::Bool _150f1c930_Enum::_method_equals(jule::Ref<_15177b070_TypeKind> _3521_other) {
	jule::Ref<_150f1c930_Enum> _3613_enm = (_3521_other).alloc->_method_enm();
	if ((!(jule::real(_3613_enm)))) {
		return false;
	}
	return (&((*this))) == (_3613_enm).alloc;
}



inline jule::Ref<_150f1c930_EnumItem> _150f1c930_Enum::_method_find_item(jule::Str _4732_ident) {
	{
		auto __julec_range_expr = (*this)._field_items;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_150f1c930_EnumItem> _150f1c930_item = *__julec_range_begin;
			_iter_begin_5682768304:;
			{
				if (_150f1c930_item->_field_ident == _4732_ident) {
					return _150f1c930_item;
				}
			}
			_iter_next_5682768304:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _150f1c930_item = *__julec_range_begin; goto _iter_begin_5682768304; }
			_iter_end_5682768304:;
		}
	}
	return jule::new_ref<_150f1c930_EnumItem>();
}







std::ostream &operator<<(std::ostream &_Stream, const _150f1c930_Enum &_Src) {
	_Stream << "Enum{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "items:" << _Src._field_items << ", ";
	_Stream << "doc:" << _Src._field_doc;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _150f1c930_EnumItem::_method_auto_expr(void) {
	return (!(jule::real((*this)._field_value)));
}







std::ostream &operator<<(std::ostream &_Stream, const _150f1c930_EnumItem &_Src) {
	_Stream << "EnumItem{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "value:" << _Src._field_value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _150f166e0_Trait::_method_to_str(void) {
	return (*this)._field_ident;
}



inline jule::Bool _150f166e0_Trait::_method_equals(jule::Ref<_15177b070_TypeKind> _2421_other) {
	jule::Ref<_150f166e0_Trait> _2513_trt = (_2421_other).alloc->_method_trt();
	if ((!(jule::real(_2513_trt)))) {
		return false;
	}
	return (&((*this))) == (_2513_trt).alloc;
}



inline jule::Bool _150f166e0_Trait::_method_is_builtin(void) {
	return (*this)._field_token._field_id == 0LLU;
}



inline jule::Ref<_15081bcd0_Fn> _150f166e0_Trait::_method_find_method(jule::Str _3934_ident) {
	{
		auto __julec_range_expr = (*this)._field_methods;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_15081bcd0_Fn> _150f166e0_f = *__julec_range_begin;
			_iter_begin_5682754256:;
			{
				if (_150f166e0_f->_field_ident == _3934_ident) {
					return _150f166e0_f;
				}
			}
			_iter_next_5682754256:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _150f166e0_f = *__julec_range_begin; goto _iter_begin_5682754256; }
			_iter_end_5682754256:;
		}
	}
	return jule::new_ref<_15081bcd0_Fn>();
}







std::ostream &operator<<(std::ostream &_Stream, const _150f166e0_Trait &_Src) {
	_Stream << "Trait{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "implemented:" << _Src._field_implemented;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _150e75a70_Pass &_Src) {
	_Stream << "Pass{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "text:" << _Src._field_text;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _15081bcd0_Fn::_method_is_void(void) {
	return (!(jule::real((*this)._field_result)));
}



inline jule::Bool _15081bcd0_Fn::_method_is_method(void) {
	return jule::real((*this)._field_owner);
}



inline jule::Bool _15081bcd0_Fn::_method_is_entry_point(void) {
	return (*this)._field_ident == jule::Str("main", 4);
}



inline jule::Bool _15081bcd0_Fn::_method_is_init(void) {
	return (*this)._field_ident == jule::Str("init", 4);
}



inline jule::Bool _15081bcd0_Fn::_method_is_anon(void) {
	return _150640f50_is_anon_ident((*this)._field_ident);
}



inline jule::Bool _15081bcd0_Fn::_method_any_var(void) {
	return jule::real((*this)._field_result) && ((*this)._field_result->_field_idents.len() > 0LL);
}



inline jule::Bool _15081bcd0_Fn::_method_parameters_uses_generics(void) {
	if ((*this)._field_generics.len() == 0LL) {
		return false;
	}
	{
		auto __julec_range_expr = (*this)._field_params;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_15081bcd0_Param> _15081bcd0_p = *__julec_range_begin;
			_iter_begin_5682295760:;
			{
				if (_15081bcd0_p->_method_is_self()) {
					goto _iter_next_5682295760;
				}
				jule::Str _9317_pk = _15081bcd0_p->_field_kind->_field_kind->_method_to_str();
				{
					auto __julec_range_expr = (*this)._field_generics;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Ref<_1506406d0_GenericDecl> _15081bcd0_g = *__julec_range_begin;
						_iter_begin_5682300816:;
						{
							if (_9317_pk.find(_15081bcd0_g->_field_ident) != -1LL) {
								return true;
							}
						}
						_iter_next_5682300816:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { _15081bcd0_g = *__julec_range_begin; goto _iter_begin_5682300816; }
						_iter_end_5682300816:;
					}
				}
			}
			_iter_next_5682295760:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _15081bcd0_p = *__julec_range_begin; goto _iter_begin_5682295760; }
			_iter_end_5682295760:;
		}
	}
	return false;
}



inline jule::Bool _15081bcd0_Fn::_method_result_uses_generics(void) {
	if ((*this)._method_is_void()) {
		return false;
	} else if ((!(jule::real((*this)._field_result->_field_kind))) || (!(jule::real((*this)._field_result->_field_kind->_field_kind)))) {
		return false;
	}
	jule::Str _11213_rk = (*this)._field_result->_field_kind->_field_kind->_method_to_str();
	{
		auto __julec_range_expr = (*this)._field_generics;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_1506406d0_GenericDecl> _15081bcd0_g = *__julec_range_begin;
			_iter_begin_5682311424:;
			{
				if (_11213_rk.find(_15081bcd0_g->_field_ident) != -1LL) {
					return true;
				}
			}
			_iter_next_5682311424:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _15081bcd0_g = *__julec_range_begin; goto _iter_begin_5682311424; }
			_iter_end_5682311424:;
		}
	}
	return false;
}



inline jule::Ref<_15081bcd0_FnIns> _15081bcd0_Fn::_method_instance_force(void) {
	jule::Ref<_15081bcd0_FnIns> _12417_ins = jule::new_struct<_15081bcd0_FnIns>(new( std::nothrow ) _15081bcd0_FnIns(jule::Ref<_150a13110_StructIns>(),this->self,jule::Slice<jule::Ref<_15177b070_TypeKind>>(),jule::Slice<jule::Ref<_15081bcd0_ParamIns>>(),jule::Ref<_15177b070_TypeKind>(),jule::new_struct<_150d29660_Scope>(new( std::nothrow ) _150d29660_Scope()),_150e75a70_new_reference_stack(),jule::Ref<_150e75a70_ReferenceStack>(),jule::Fn<jule::Ref<_151290fd0_Data>(jule::Ref<_151290fd0_Eval>,jule::Ref<_1506406d0_FnCallExpr>,jule::Ref<_151290fd0_Data>)>(),jule::Bool(),jule::Bool()));
	if (this->self->_method_is_init()) {
		_12417_ins->_field_refers=_150e75a70_new_reference_stack();
	}
	_12417_ins->_field_params=jule::Slice<jule::Ref<_15081bcd0_ParamIns>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(this->self->_field_params.len())));
	{
		auto __julec_range_expr = this->self->_field_params;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _15081bcd0_i = 0;
			jule::Ref<_15081bcd0_Param> _15081bcd0_p = *__julec_range_begin;
			_iter_begin_5682319200:;
			{
				_12417_ins->_field_params[static_cast<jule::Int>(_15081bcd0_i)]=_15081bcd0_p->_method_instance();
			}
			_iter_next_5682319200:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_15081bcd0_i; _15081bcd0_p = *__julec_range_begin; goto _iter_begin_5682319200; }
			_iter_end_5682319200:;
		}
	}
	if (jule::real(_12417_ins->_field_decl->_field_result)) {
		_12417_ins->_field_result=_12417_ins->_field_decl->_field_result->_field_kind->_field_kind;
	}
	return _12417_ins;
}



inline jule::Ref<_15081bcd0_FnIns> _15081bcd0_Fn::_method_instance(void) {
	if ((this->self->_field_generics.len() == 0LL) && (this->self->_field_instances.len() == 1LL)) {
		return this->self->_field_instances[0LL];
	}
	return this->self->_method_instance_force();
}



inline std::tuple<jule::Bool,jule::Int> _15081bcd0_Fn::_method_append_instance(jule::Ref<_15081bcd0_FnIns> _15538_ins) {
	if ((*this)._field_generics.len() == 0LL) {
		if ((*this)._field_instances.len() == 1LL) {
			return std::make_tuple(false,0LL);
		}
		(*this)._field_instances=jule::append((*this)._field_instances,jule::Slice<jule::Ref<_15081bcd0_FnIns>>({_15538_ins}));
		return std::make_tuple(true,-1LL);
	}
	if ((*this)._field_instances.len() == 0LL) {
		(*this)._field_instances=jule::append((*this)._field_instances,jule::Slice<jule::Ref<_15081bcd0_FnIns>>({_15538_ins}));
		return std::make_tuple(true,-1LL);
	}
	{
		auto __julec_range_expr = (*this)._field_instances;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _15081bcd0_j = 0;
			jule::Ref<_15081bcd0_FnIns> _15081bcd0_ains = *__julec_range_begin;
			_iter_begin_5682339696:;
			{
				{
					auto __julec_range_expr = _15081bcd0_ains->_field_generics;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Int _15081bcd0_i = 0;
						jule::Ref<_15177b070_TypeKind> _15081bcd0_ag = *__julec_range_begin;
						_iter_begin_5682343984:;
						{
							if (_15081bcd0_ag->_method_equals(_15538_ins->_field_generics[static_cast<jule::Int>(_15081bcd0_i)])) {
								return std::make_tuple(false,_15081bcd0_j);
							}
						}
						_iter_next_5682343984:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { ++_15081bcd0_i; _15081bcd0_ag = *__julec_range_begin; goto _iter_begin_5682343984; }
						_iter_end_5682343984:;
					}
				}
			}
			_iter_next_5682339696:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_15081bcd0_j; _15081bcd0_ains = *__julec_range_begin; goto _iter_begin_5682339696; }
			_iter_end_5682339696:;
		}
	}
	(*this)._field_instances=jule::append((*this)._field_instances,jule::Slice<jule::Ref<_15081bcd0_FnIns>>({_15538_ins}));
	return std::make_tuple(true,-1LL);
}







std::ostream &operator<<(std::ostream &_Stream, const _15081bcd0_Fn &_Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "global:" << _Src._field_global << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "params:" << _Src._field_params << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "instances:" << _Src._field_instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_15081bcd0_ParamIns> _15081bcd0_Param::_method_instance(void) {
	return jule::new_struct<_15081bcd0_ParamIns>(new( std::nothrow ) _15081bcd0_ParamIns(this->self,jule::Ref<_15177b070_TypeKind>()));
}



inline jule::Bool _15081bcd0_Param::_method_is_self(void) {
	return ((*this)._field_ident == jule::Str("&self", 5)) || ((*this)._field_ident == jule::Str("self", 4));
}



inline jule::Bool _15081bcd0_Param::_method_is_ref(void) {
	return ((*this)._field_ident != jule::Str("", 0)) && ((*this)._field_ident[0LL] == '&');
}







std::ostream &operator<<(std::ostream &_Stream, const _15081bcd0_Param &_Src) {
	_Stream << "Param{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_150a13110_FieldIns> _150a13110_Field::_method_instance(void) {
	return jule::new_struct<_150a13110_FieldIns>(new( std::nothrow ) _150a13110_FieldIns(this->self,this->self->_field_kind->_field_kind));
}







std::ostream &operator<<(std::ostream &_Stream, const _150a13110_Field &_Src) {
	_Stream << "Field{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1507eb940_AssignInfo &_Src) {
	_Stream << "AssignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1506406d0_Impl::_method_is_trait_impl(void) {
	return (*this)._field_base._field_id != 0LLU;
}



inline jule::Bool _1506406d0_Impl::_method_is_struct_impl(void) {
	return (*this)._field_base._field_id == 0LLU;
}







std::ostream &operator<<(std::ostream &_Stream, const _1506406d0_Impl &_Src) {
	_Stream << "Impl{";
	_Stream << "base:" << _Src._field_base << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "methods:" << _Src._field_methods;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1506406d0_TraitDecl &_Src) {
	_Stream << "TraitDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments << ", ";
	_Stream << "methods:" << _Src._field_methods;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1506406d0_StructDecl &_Src) {
	_Stream << "StructDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1506406d0_FieldDecl &_Src) {
	_Stream << "FieldDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1506406d0_EnumDecl::_method_default_typed(void) {
	return (!(jule::real((*this)._field_kind)));
}







std::ostream &operator<<(std::ostream &_Stream, const _1506406d0_EnumDecl &_Src) {
	_Stream << "EnumDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "items:" << _Src._field_items << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1506406d0_EnumItemDecl::_method_auto_expr(void) {
	return (!(jule::real((*this)._field_expr)));
}







std::ostream &operator<<(std::ostream &_Stream, const _1506406d0_EnumItemDecl &_Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1506406d0_UseDecl &_Src) {
	_Stream << "UseDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "link_path:" << _Src._field_link_path << ", ";
	_Stream << "full:" << _Src._field_full << ", ";
	_Stream << "selected:" << _Src._field_selected << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "std:" << _Src._field_std;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1506406d0_Case &_Src) {
	_Stream << "Case{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1506406d0_TypeAliasDecl &_Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1506406d0_Else &_Src) {
	_Stream << "Else{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1506406d0_If &_Src) {
	_Stream << "If{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1506406d0_ContSt &_Src) {
	_Stream << "ContSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1506406d0_BreakSt &_Src) {
	_Stream << "BreakSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1506406d0_VarDecl &_Src) {
	_Stream << "VarDecl{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "constant:" << _Src._field_constant << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1506406d0_FnDecl::_method_is_anon(void) {
	return (*this)._field_ident == jule::Str("<anonymous>", 11);
}







std::ostream &operator<<(std::ostream &_Stream, const _1506406d0_FnDecl &_Src) {
	_Stream << "FnDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "global:" << _Src._field_global << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "params:" << _Src._field_params;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1506406d0_ParamDecl::_method_is_self(void) {
	return (*this)._field_ident.has_suffix(jule::Str("self", 4));
}



inline jule::Bool _1506406d0_ParamDecl::_method_is_ref(void) {
	return ((*this)._field_ident != jule::Str("", 0)) && ((*this)._field_ident[0LL] == '&');
}







std::ostream &operator<<(std::ostream &_Stream, const _1506406d0_ParamDecl &_Src) {
	_Stream << "ParamDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1506406d0_AssignLeft &_Src) {
	_Stream << "AssignLeft{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1506406d0_GotoSt &_Src) {
	_Stream << "GotoSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1506406d0_GenericDecl &_Src) {
	_Stream << "GenericDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1506406d0_FnCallExpr &_Src) {
	_Stream << "FnCallExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "concurrent:" << _Src._field_concurrent;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1506406d0_Expr::_method_is_fn_call(void) {
	if ((*this)._field_kind == nullptr) {
		return false;
	}
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_FnCallExpr>>())) { goto _case_end_5675060944; }
		_case_begin_5675060944:;
		{
			return true;
		}
		goto _match_end_5675059104;
		_case_end_5675060944:;
		_case_begin_5675060464:;
		{
			return false;
		}
		goto _match_end_5675059104;
		_case_end_5675060464:;
		_match_end_5675059104:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1506406d0_Expr &_Src) {
	_Stream << "Expr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1506406d0_IdentTypeDecl::_method_is_prim(void) {
	return (*this)._field_token._field_id == 1LLU;
}







std::ostream &operator<<(std::ostream &_Stream, const _1506406d0_IdentTypeDecl &_Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1506406d0_TypeDecl &_Src) {
	_Stream << "TypeDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1506406d0_Directive &_Src) {
	_Stream << "Directive{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "tag:" << _Src._field_tag << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1506406d0_Comment::_method_is_directive(void) {
	return (*this)._field_text.has_prefix(jule::Str("jule:", 5));
}







std::ostream &operator<<(std::ostream &_Stream, const _1506406d0_Comment &_Src) {
	_Stream << "Comment{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "text:" << _Src._field_text;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1506406d0_Node::_method_is_decl(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_EnumDecl>>() || _match_expr.type_is<jule::Ref<_1506406d0_FnDecl>>() || _match_expr.type_is<jule::Ref<_1506406d0_StructDecl>>() || _match_expr.type_is<jule::Ref<_1506406d0_TraitDecl>>() || _match_expr.type_is<jule::Ref<_1506406d0_TypeAliasDecl>>() || _match_expr.type_is<jule::Ref<_1506406d0_FieldDecl>>() || _match_expr.type_is<jule::Ref<_1506406d0_UseDecl>>() || _match_expr.type_is<jule::Ref<_1506406d0_VarDecl>>() || _match_expr.type_is<jule::Ref<_1506406d0_TypeDecl>>())) { goto _case_end_5675017968; }
		_case_begin_5675017968:;
		{
			return true;
		}
		goto _match_end_5675017008;
		_case_end_5675017968:;
		_case_begin_5675017616:;
		{
			return false;
		}
		goto _match_end_5675017008;
		_case_end_5675017616:;
		_match_end_5675017008:;
	}
}



inline jule::Bool _1506406d0_Node::_method_is_comment(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_Comment>>() || _match_expr.type_is<jule::Ref<_1506406d0_CommentGroup>>())) { goto _case_end_5675034960; }
		_case_begin_5675034960:;
		{
			return true;
		}
		goto _match_end_5675032928;
		_case_end_5675034960:;
		_case_begin_5675034608:;
		{
			return false;
		}
		goto _match_end_5675032928;
		_case_end_5675034608:;
		_match_end_5675032928:;
	}
}



inline jule::Bool _1506406d0_Node::_method_is_impl(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_Impl>>())) { goto _case_end_5675038704; }
		_case_begin_5675038704:;
		{
			return true;
		}
		goto _match_end_5675037248;
		_case_end_5675038704:;
		_case_begin_5675038352:;
		{
			return false;
		}
		goto _match_end_5675037248;
		_case_end_5675038352:;
		_match_end_5675037248:;
	}
}



inline jule::Bool _1506406d0_Node::_method_is_use_decl(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_UseDecl>>())) { goto _case_end_5675042128; }
		_case_begin_5675042128:;
		{
			return true;
		}
		goto _match_end_5675040608;
		_case_end_5675042128:;
		_case_begin_5675041776:;
		{
			return false;
		}
		goto _match_end_5675040608;
		_case_end_5675041776:;
		_match_end_5675040608:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1506406d0_Node &_Src) {
	_Stream << "Node{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline _1509ba170_Vector_0 _1509ba170_Vector_0::_static_method_new(jule::Int _4319_cap) {
	_1509ba170_Vector_0 _4417_vec = _1509ba170_Vector_0();
	if (_4319_cap != 0LL) {
		_4417_vec._method_resize_alloc(_4319_cap);
	}
	return _4417_vec;
}



inline jule::Int _1509ba170_Vector_0::_method_calc_grow(jule::Int _5324_delta) {
	jule::Int _5413_t = (*this)._field__buffer.len + _5324_delta;
	return static_cast<jule::Int>(_5413_t * 2LL);
}



inline void _1509ba170_Vector_0::_method_resize_alloc(jule::Int _5831_n) {
	void* _5917_new_heap = __jule_std_vector_alloc<_150640f50_Token>(_5831_n);
	if (_5917_new_heap == nullptr) {
		jule::panic(jule::Str("Vector[T].resize_alloc: heap reallocation failed", 48));
	}
	if ((*this)._field__buffer.heap == nullptr) {
		(*this)._field__buffer.heap=_5917_new_heap;
		(*this)._field__buffer.cap=_5831_n;
		return;
	}
	{
		if ((*this)._field__buffer.len > 0LL) {
			__jule_std_vector_copy_range<_150640f50_Token>(_5917_new_heap,(*this)._field__buffer.heap,(*this)._field__buffer.len);
		}
		__jule_std_vector_dealloc<_150640f50_Token>((*this)._field__buffer.heap);
		(*this)._field__buffer.heap=_5917_new_heap;
	}
	(*this)._field__buffer.cap=_5831_n;
}



inline void _1509ba170_Vector_0::_method_review_allocation(jule::Int _8336_delta) {
	if (((*this)._field__buffer.len + _8336_delta) > (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>((*this)._method_calc_grow(_8336_delta)));
	}
}



inline jule::Int _1509ba170_Vector_0::_method_len(void) {
	return (*this)._field__buffer.len;
}



inline jule::Int _1509ba170_Vector_0::_method_cap(void) {
	return (*this)._field__buffer.cap;
}



inline void _1509ba170_Vector_0::_method_dealloc(void) {
	(*this)._field__buffer.drop();
}



inline void _1509ba170_Vector_0::_method_set_len(jule::Int _10330_n) {
	if (_10330_n < 0LL) {
		(*this)._field__buffer.len=0LL;
		return;
	}
	if (_10330_n >= (*this)._field__buffer.len) {
		return;
	}
	(*this)._field__buffer.len=_10330_n;
}



inline _150640f50_Token _1509ba170_Vector_0::_method_at(jule::Int _11525_i) {
	if ((_11525_i < 0LL) || (_11525_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].at: out of range", 26));
	}
	return __jule_std_vector_deref<_150640f50_Token>((*this)._field__buffer.heap,_11525_i);
}



inline void _1509ba170_Vector_0::_method_set(jule::Int _12326_i,_150640f50_Token _12338_item) {
	if ((_12326_i < 0LL) || (_12326_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].set: out of range", 27));
	}
	{
		__jule_std_vector_heap_assign<_150640f50_Token>((*this)._field__buffer.heap,_12326_i,_12338_item);
	}
}



inline void _1509ba170_Vector_0::_method_push(_150640f50_Token _13131_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>(((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	{
		__jule_std_vector_heap_assign<_150640f50_Token>((*this)._field__buffer.heap,(*this)._field__buffer.len,_13131_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _1509ba170_Vector_0::_method_push_front(_150640f50_Token _14637_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>(((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	jule::Int _15217_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5673309488:;
	if (!(_15217_i >= 0LL)) { goto _iter_end_5673309488; }
	{
		{
			__jule_std_vector_heap_move<_150640f50_Token>((*this)._field__buffer.heap,_15217_i,static_cast<jule::Int>(_15217_i + 1LL));
		}
	}
	_iter_next_5673309488:;
	(_15217_i)--;
	goto _iter_begin_5673309488;
	_iter_end_5673309488:;
	{
		__jule_std_vector_heap_assign<_150640f50_Token>((*this)._field__buffer.heap,0LL,_14637_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _1509ba170_Vector_0::_method_append(jule::Slice<_150640f50_Token> _16333_items) {
	if (_16333_items.len() == 0LL) {
		return;
	}
	(*this)._method_review_allocation(static_cast<jule::I64>(_16333_items.len()));
	{
		__jule_std_vector_copy_range<_150640f50_Token>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(_150640f50_Token) * (*this)._field__buffer.len))),__jule_get_pointer_of_slice<_150640f50_Token>(_16333_items),static_cast<jule::I64>(_16333_items.len()));
	}
	(*this)._field__buffer.len+=static_cast<jule::I64>(_16333_items.len());
}



inline void _1509ba170_Vector_0::_method_merge(_1509ba170_Vector_0 _18032_vec) {
	if (_18032_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_18032_vec._field__buffer.len);
	{
		__jule_std_vector_copy_range<_150640f50_Token>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(_150640f50_Token) * (*this)._field__buffer.len))),_18032_vec._field__buffer.heap,_18032_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_18032_vec._field__buffer.len;
}



inline void _1509ba170_Vector_0::_method_merge_front(_1509ba170_Vector_0 _19738_vec) {
	if (_19738_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_19738_vec._field__buffer.len);
	jule::Int _20517_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5673344512:;
	if (!(_20517_i >= 0LL)) { goto _iter_end_5673344512; }
	{
		{
			__jule_std_vector_heap_move<_150640f50_Token>((*this)._field__buffer.heap,_20517_i,static_cast<jule::Int>(_20517_i + _19738_vec._field__buffer.len));
		}
	}
	_iter_next_5673344512:;
	(_20517_i)--;
	goto _iter_begin_5673344512;
	_iter_end_5673344512:;
	{
		__jule_std_vector_copy_range<_150640f50_Token>((*this)._field__buffer.heap,_19738_vec._field__buffer.heap,_19738_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_19738_vec._field__buffer.len;
}



inline void _1509ba170_Vector_0::_method_remove_range(jule::Int _22335_start,jule::Int _22347_n) {
	if (_22347_n < 1LL) {
		return;
	}
	if (_22335_start < -1LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at negative index", 57));
	}
	if (_22335_start >= (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at out of range", 55));
	}
	if ((((*this)._field__buffer.len - _22335_start) - _22347_n) < 0LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing continues at out of range", 58));
	}
	jule::Int _23917_i = _22335_start + _22347_n;
	_iter_begin_5673361552:;
	if (!(_23917_i < (*this)._field__buffer.len)) { goto _iter_end_5673361552; }
	{
		{
			__jule_std_vector_heap_move<_150640f50_Token>((*this)._field__buffer.heap,_23917_i,static_cast<jule::Int>(_23917_i - _22347_n));
		}
	}
	_iter_next_5673361552:;
	(_23917_i)++;
	goto _iter_begin_5673361552;
	_iter_end_5673361552:;
	(*this)._field__buffer.len-=_22347_n;
}



inline void _1509ba170_Vector_0::_method_insert(jule::Int _24829_i,_150640f50_Token _24841_item) {
	if (_24829_i < 0LL) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at negative index", 52));
	}
	if (_24829_i > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at out of range", 50));
	}
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>(((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	jule::Int _26117_j = (*this)._field__buffer.len - 1LL;
	_iter_begin_5673371936:;
	if (!(_26117_j >= _24829_i)) { goto _iter_end_5673371936; }
	{
		{
			__jule_std_vector_heap_move<_150640f50_Token>((*this)._field__buffer.heap,_26117_j,static_cast<jule::Int>(_26117_j + 1LL));
		}
	}
	_iter_next_5673371936:;
	(_26117_j)--;
	goto _iter_begin_5673371936;
	_iter_end_5673371936:;
	{
		__jule_std_vector_heap_assign<_150640f50_Token>((*this)._field__buffer.heap,_24829_i,_24841_item);
	}
	((*this)._field__buffer.len)++;
}



inline _1509ba170_Vector_0 _1509ba170_Vector_0::_method_slice(jule::Int _27228_start,jule::Int _27240_end) {
	if (_27228_start < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at negative index", 49));
	}
	if (_27228_start > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at out of range", 47));
	}
	if (_27240_end > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at out of range", 45));
	}
	if (_27240_end < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at negative index", 47));
	}
	if (_27228_start > _27240_end) {
		jule::panic(jule::Str("Vector[T].slice: start point < end point", 40));
	}
	if (_27228_start == _27240_end) {
		return _1509ba170_Vector_0::_static_method_new(0LL);
	}
	_1509ba170_Vector_0 _29317_vec = _1509ba170_Vector_0::_static_method_new(static_cast<jule::Int>(_27240_end - _27228_start));
	{
		__jule_std_vector_copy_range<_150640f50_Token>(_29317_vec._field__buffer.heap,((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(_150640f50_Token) * _27228_start))),_29317_vec._field__buffer.cap);
	}
	_29317_vec._field__buffer.len=_29317_vec._field__buffer.cap;
	return _29317_vec;
}







std::ostream &operator<<(std::ostream &_Stream, const _1509ba170_Vector_0 &_Src) {
	_Stream << "Vector{";
	_Stream << "_buffer: cpp._field__buffer";
	_Stream << "}";
	return _Stream;
}

inline _1509ba170_Vector_1 _1509ba170_Vector_1::_static_method_new(jule::Int _4319_cap) {
	_1509ba170_Vector_1 _4417_vec = _1509ba170_Vector_1();
	if (_4319_cap != 0LL) {
		_4417_vec._method_resize_alloc(_4319_cap);
	}
	return _4417_vec;
}



inline jule::Int _1509ba170_Vector_1::_method_calc_grow(jule::Int _5324_delta) {
	jule::Int _5413_t = (*this)._field__buffer.len + _5324_delta;
	return static_cast<jule::Int>(_5413_t * 2LL);
}



inline void _1509ba170_Vector_1::_method_resize_alloc(jule::Int _5831_n) {
	void* _5917_new_heap = __jule_std_vector_alloc<jule::Ref<_1506406d0_Directive>>(_5831_n);
	if (_5917_new_heap == nullptr) {
		jule::panic(jule::Str("Vector[T].resize_alloc: heap reallocation failed", 48));
	}
	if ((*this)._field__buffer.heap == nullptr) {
		(*this)._field__buffer.heap=_5917_new_heap;
		(*this)._field__buffer.cap=_5831_n;
		return;
	}
	{
		if ((*this)._field__buffer.len > 0LL) {
			__jule_std_vector_copy_range<jule::Ref<_1506406d0_Directive>>(_5917_new_heap,(*this)._field__buffer.heap,(*this)._field__buffer.len);
		}
		__jule_std_vector_dealloc<jule::Ref<_1506406d0_Directive>>((*this)._field__buffer.heap);
		(*this)._field__buffer.heap=_5917_new_heap;
	}
	(*this)._field__buffer.cap=_5831_n;
}



inline void _1509ba170_Vector_1::_method_review_allocation(jule::Int _8336_delta) {
	if (((*this)._field__buffer.len + _8336_delta) > (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>((*this)._method_calc_grow(_8336_delta)));
	}
}



inline jule::Int _1509ba170_Vector_1::_method_len(void) {
	return (*this)._field__buffer.len;
}



inline jule::Int _1509ba170_Vector_1::_method_cap(void) {
	return (*this)._field__buffer.cap;
}



inline void _1509ba170_Vector_1::_method_dealloc(void) {
	(*this)._field__buffer.drop();
}



inline void _1509ba170_Vector_1::_method_set_len(jule::Int _10330_n) {
	if (_10330_n < 0LL) {
		(*this)._field__buffer.len=0LL;
		return;
	}
	if (_10330_n >= (*this)._field__buffer.len) {
		return;
	}
	(*this)._field__buffer.len=_10330_n;
}



inline jule::Ref<_1506406d0_Directive> _1509ba170_Vector_1::_method_at(jule::Int _11525_i) {
	if ((_11525_i < 0LL) || (_11525_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].at: out of range", 26));
	}
	return __jule_std_vector_deref<jule::Ref<_1506406d0_Directive>>((*this)._field__buffer.heap,_11525_i);
}



inline void _1509ba170_Vector_1::_method_set(jule::Int _12326_i,jule::Ref<_1506406d0_Directive> _12338_item) {
	if ((_12326_i < 0LL) || (_12326_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].set: out of range", 27));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_1506406d0_Directive>>((*this)._field__buffer.heap,_12326_i,_12338_item);
	}
}



inline void _1509ba170_Vector_1::_method_push(jule::Ref<_1506406d0_Directive> _13131_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>(((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_1506406d0_Directive>>((*this)._field__buffer.heap,(*this)._field__buffer.len,_13131_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _1509ba170_Vector_1::_method_push_front(jule::Ref<_1506406d0_Directive> _14637_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>(((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	jule::Int _15217_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5674106960:;
	if (!(_15217_i >= 0LL)) { goto _iter_end_5674106960; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_1506406d0_Directive>>((*this)._field__buffer.heap,_15217_i,static_cast<jule::Int>(_15217_i + 1LL));
		}
	}
	_iter_next_5674106960:;
	(_15217_i)--;
	goto _iter_begin_5674106960;
	_iter_end_5674106960:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_1506406d0_Directive>>((*this)._field__buffer.heap,0LL,_14637_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _1509ba170_Vector_1::_method_append(jule::Slice<jule::Ref<_1506406d0_Directive>> _16333_items) {
	if (_16333_items.len() == 0LL) {
		return;
	}
	(*this)._method_review_allocation(static_cast<jule::I64>(_16333_items.len()));
	{
		__jule_std_vector_copy_range<jule::Ref<_1506406d0_Directive>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_1506406d0_Directive>) * (*this)._field__buffer.len))),__jule_get_pointer_of_slice<jule::Ref<_1506406d0_Directive>>(_16333_items),static_cast<jule::I64>(_16333_items.len()));
	}
	(*this)._field__buffer.len+=static_cast<jule::I64>(_16333_items.len());
}



inline void _1509ba170_Vector_1::_method_merge(_1509ba170_Vector_1 _18032_vec) {
	if (_18032_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_18032_vec._field__buffer.len);
	{
		__jule_std_vector_copy_range<jule::Ref<_1506406d0_Directive>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_1506406d0_Directive>) * (*this)._field__buffer.len))),_18032_vec._field__buffer.heap,_18032_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_18032_vec._field__buffer.len;
}



inline void _1509ba170_Vector_1::_method_merge_front(_1509ba170_Vector_1 _19738_vec) {
	if (_19738_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_19738_vec._field__buffer.len);
	jule::Int _20517_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5674142080:;
	if (!(_20517_i >= 0LL)) { goto _iter_end_5674142080; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_1506406d0_Directive>>((*this)._field__buffer.heap,_20517_i,static_cast<jule::Int>(_20517_i + _19738_vec._field__buffer.len));
		}
	}
	_iter_next_5674142080:;
	(_20517_i)--;
	goto _iter_begin_5674142080;
	_iter_end_5674142080:;
	{
		__jule_std_vector_copy_range<jule::Ref<_1506406d0_Directive>>((*this)._field__buffer.heap,_19738_vec._field__buffer.heap,_19738_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_19738_vec._field__buffer.len;
}



inline void _1509ba170_Vector_1::_method_remove_range(jule::Int _22335_start,jule::Int _22347_n) {
	if (_22347_n < 1LL) {
		return;
	}
	if (_22335_start < -1LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at negative index", 57));
	}
	if (_22335_start >= (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at out of range", 55));
	}
	if ((((*this)._field__buffer.len - _22335_start) - _22347_n) < 0LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing continues at out of range", 58));
	}
	jule::Int _23917_i = _22335_start + _22347_n;
	_iter_begin_5674159120:;
	if (!(_23917_i < (*this)._field__buffer.len)) { goto _iter_end_5674159120; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_1506406d0_Directive>>((*this)._field__buffer.heap,_23917_i,static_cast<jule::Int>(_23917_i - _22347_n));
		}
	}
	_iter_next_5674159120:;
	(_23917_i)++;
	goto _iter_begin_5674159120;
	_iter_end_5674159120:;
	(*this)._field__buffer.len-=_22347_n;
}



inline void _1509ba170_Vector_1::_method_insert(jule::Int _24829_i,jule::Ref<_1506406d0_Directive> _24841_item) {
	if (_24829_i < 0LL) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at negative index", 52));
	}
	if (_24829_i > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at out of range", 50));
	}
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>(((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	jule::Int _26117_j = (*this)._field__buffer.len - 1LL;
	_iter_begin_5674169504:;
	if (!(_26117_j >= _24829_i)) { goto _iter_end_5674169504; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_1506406d0_Directive>>((*this)._field__buffer.heap,_26117_j,static_cast<jule::Int>(_26117_j + 1LL));
		}
	}
	_iter_next_5674169504:;
	(_26117_j)--;
	goto _iter_begin_5674169504;
	_iter_end_5674169504:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_1506406d0_Directive>>((*this)._field__buffer.heap,_24829_i,_24841_item);
	}
	((*this)._field__buffer.len)++;
}



inline _1509ba170_Vector_1 _1509ba170_Vector_1::_method_slice(jule::Int _27228_start,jule::Int _27240_end) {
	if (_27228_start < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at negative index", 49));
	}
	if (_27228_start > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at out of range", 47));
	}
	if (_27240_end > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at out of range", 45));
	}
	if (_27240_end < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at negative index", 47));
	}
	if (_27228_start > _27240_end) {
		jule::panic(jule::Str("Vector[T].slice: start point < end point", 40));
	}
	if (_27228_start == _27240_end) {
		return _1509ba170_Vector_1::_static_method_new(0LL);
	}
	_1509ba170_Vector_1 _29317_vec = _1509ba170_Vector_1::_static_method_new(static_cast<jule::Int>(_27240_end - _27228_start));
	{
		__jule_std_vector_copy_range<jule::Ref<_1506406d0_Directive>>(_29317_vec._field__buffer.heap,((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_1506406d0_Directive>) * _27228_start))),_29317_vec._field__buffer.cap);
	}
	_29317_vec._field__buffer.len=_29317_vec._field__buffer.cap;
	return _29317_vec;
}







std::ostream &operator<<(std::ostream &_Stream, const _1509ba170_Vector_1 &_Src) {
	_Stream << "Vector{";
	_Stream << "_buffer: cpp._field__buffer";
	_Stream << "}";
	return _Stream;
}

inline _1509ba170_Vector_2 _1509ba170_Vector_2::_static_method_new(jule::Int _4319_cap) {
	_1509ba170_Vector_2 _4417_vec = _1509ba170_Vector_2();
	if (_4319_cap != 0LL) {
		_4417_vec._method_resize_alloc(_4319_cap);
	}
	return _4417_vec;
}



inline jule::Int _1509ba170_Vector_2::_method_calc_grow(jule::Int _5324_delta) {
	jule::Int _5413_t = (*this)._field__buffer.len + _5324_delta;
	return static_cast<jule::Int>(_5413_t * 2LL);
}



inline void _1509ba170_Vector_2::_method_resize_alloc(jule::Int _5831_n) {
	void* _5917_new_heap = __jule_std_vector_alloc<jule::Ref<_1506406d0_UseDecl>>(_5831_n);
	if (_5917_new_heap == nullptr) {
		jule::panic(jule::Str("Vector[T].resize_alloc: heap reallocation failed", 48));
	}
	if ((*this)._field__buffer.heap == nullptr) {
		(*this)._field__buffer.heap=_5917_new_heap;
		(*this)._field__buffer.cap=_5831_n;
		return;
	}
	{
		if ((*this)._field__buffer.len > 0LL) {
			__jule_std_vector_copy_range<jule::Ref<_1506406d0_UseDecl>>(_5917_new_heap,(*this)._field__buffer.heap,(*this)._field__buffer.len);
		}
		__jule_std_vector_dealloc<jule::Ref<_1506406d0_UseDecl>>((*this)._field__buffer.heap);
		(*this)._field__buffer.heap=_5917_new_heap;
	}
	(*this)._field__buffer.cap=_5831_n;
}



inline void _1509ba170_Vector_2::_method_review_allocation(jule::Int _8336_delta) {
	if (((*this)._field__buffer.len + _8336_delta) > (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>((*this)._method_calc_grow(_8336_delta)));
	}
}



inline jule::Int _1509ba170_Vector_2::_method_len(void) {
	return (*this)._field__buffer.len;
}



inline jule::Int _1509ba170_Vector_2::_method_cap(void) {
	return (*this)._field__buffer.cap;
}



inline void _1509ba170_Vector_2::_method_dealloc(void) {
	(*this)._field__buffer.drop();
}



inline void _1509ba170_Vector_2::_method_set_len(jule::Int _10330_n) {
	if (_10330_n < 0LL) {
		(*this)._field__buffer.len=0LL;
		return;
	}
	if (_10330_n >= (*this)._field__buffer.len) {
		return;
	}
	(*this)._field__buffer.len=_10330_n;
}



inline jule::Ref<_1506406d0_UseDecl> _1509ba170_Vector_2::_method_at(jule::Int _11525_i) {
	if ((_11525_i < 0LL) || (_11525_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].at: out of range", 26));
	}
	return __jule_std_vector_deref<jule::Ref<_1506406d0_UseDecl>>((*this)._field__buffer.heap,_11525_i);
}



inline void _1509ba170_Vector_2::_method_set(jule::Int _12326_i,jule::Ref<_1506406d0_UseDecl> _12338_item) {
	if ((_12326_i < 0LL) || (_12326_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].set: out of range", 27));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_1506406d0_UseDecl>>((*this)._field__buffer.heap,_12326_i,_12338_item);
	}
}



inline void _1509ba170_Vector_2::_method_push(jule::Ref<_1506406d0_UseDecl> _13131_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>(((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_1506406d0_UseDecl>>((*this)._field__buffer.heap,(*this)._field__buffer.len,_13131_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _1509ba170_Vector_2::_method_push_front(jule::Ref<_1506406d0_UseDecl> _14637_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>(((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	jule::Int _15217_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5674286512:;
	if (!(_15217_i >= 0LL)) { goto _iter_end_5674286512; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_1506406d0_UseDecl>>((*this)._field__buffer.heap,_15217_i,static_cast<jule::Int>(_15217_i + 1LL));
		}
	}
	_iter_next_5674286512:;
	(_15217_i)--;
	goto _iter_begin_5674286512;
	_iter_end_5674286512:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_1506406d0_UseDecl>>((*this)._field__buffer.heap,0LL,_14637_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _1509ba170_Vector_2::_method_append(jule::Slice<jule::Ref<_1506406d0_UseDecl>> _16333_items) {
	if (_16333_items.len() == 0LL) {
		return;
	}
	(*this)._method_review_allocation(static_cast<jule::I64>(_16333_items.len()));
	{
		__jule_std_vector_copy_range<jule::Ref<_1506406d0_UseDecl>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_1506406d0_UseDecl>) * (*this)._field__buffer.len))),__jule_get_pointer_of_slice<jule::Ref<_1506406d0_UseDecl>>(_16333_items),static_cast<jule::I64>(_16333_items.len()));
	}
	(*this)._field__buffer.len+=static_cast<jule::I64>(_16333_items.len());
}



inline void _1509ba170_Vector_2::_method_merge(_1509ba170_Vector_2 _18032_vec) {
	if (_18032_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_18032_vec._field__buffer.len);
	{
		__jule_std_vector_copy_range<jule::Ref<_1506406d0_UseDecl>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_1506406d0_UseDecl>) * (*this)._field__buffer.len))),_18032_vec._field__buffer.heap,_18032_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_18032_vec._field__buffer.len;
}



inline void _1509ba170_Vector_2::_method_merge_front(_1509ba170_Vector_2 _19738_vec) {
	if (_19738_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_19738_vec._field__buffer.len);
	jule::Int _20517_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5674321760:;
	if (!(_20517_i >= 0LL)) { goto _iter_end_5674321760; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_1506406d0_UseDecl>>((*this)._field__buffer.heap,_20517_i,static_cast<jule::Int>(_20517_i + _19738_vec._field__buffer.len));
		}
	}
	_iter_next_5674321760:;
	(_20517_i)--;
	goto _iter_begin_5674321760;
	_iter_end_5674321760:;
	{
		__jule_std_vector_copy_range<jule::Ref<_1506406d0_UseDecl>>((*this)._field__buffer.heap,_19738_vec._field__buffer.heap,_19738_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_19738_vec._field__buffer.len;
}



inline void _1509ba170_Vector_2::_method_remove_range(jule::Int _22335_start,jule::Int _22347_n) {
	if (_22347_n < 1LL) {
		return;
	}
	if (_22335_start < -1LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at negative index", 57));
	}
	if (_22335_start >= (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at out of range", 55));
	}
	if ((((*this)._field__buffer.len - _22335_start) - _22347_n) < 0LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing continues at out of range", 58));
	}
	jule::Int _23917_i = _22335_start + _22347_n;
	_iter_begin_5674338800:;
	if (!(_23917_i < (*this)._field__buffer.len)) { goto _iter_end_5674338800; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_1506406d0_UseDecl>>((*this)._field__buffer.heap,_23917_i,static_cast<jule::Int>(_23917_i - _22347_n));
		}
	}
	_iter_next_5674338800:;
	(_23917_i)++;
	goto _iter_begin_5674338800;
	_iter_end_5674338800:;
	(*this)._field__buffer.len-=_22347_n;
}



inline void _1509ba170_Vector_2::_method_insert(jule::Int _24829_i,jule::Ref<_1506406d0_UseDecl> _24841_item) {
	if (_24829_i < 0LL) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at negative index", 52));
	}
	if (_24829_i > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at out of range", 50));
	}
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>(((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	jule::Int _26117_j = (*this)._field__buffer.len - 1LL;
	_iter_begin_5674349184:;
	if (!(_26117_j >= _24829_i)) { goto _iter_end_5674349184; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_1506406d0_UseDecl>>((*this)._field__buffer.heap,_26117_j,static_cast<jule::Int>(_26117_j + 1LL));
		}
	}
	_iter_next_5674349184:;
	(_26117_j)--;
	goto _iter_begin_5674349184;
	_iter_end_5674349184:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_1506406d0_UseDecl>>((*this)._field__buffer.heap,_24829_i,_24841_item);
	}
	((*this)._field__buffer.len)++;
}



inline _1509ba170_Vector_2 _1509ba170_Vector_2::_method_slice(jule::Int _27228_start,jule::Int _27240_end) {
	if (_27228_start < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at negative index", 49));
	}
	if (_27228_start > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at out of range", 47));
	}
	if (_27240_end > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at out of range", 45));
	}
	if (_27240_end < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at negative index", 47));
	}
	if (_27228_start > _27240_end) {
		jule::panic(jule::Str("Vector[T].slice: start point < end point", 40));
	}
	if (_27228_start == _27240_end) {
		return _1509ba170_Vector_2::_static_method_new(0LL);
	}
	_1509ba170_Vector_2 _29317_vec = _1509ba170_Vector_2::_static_method_new(static_cast<jule::Int>(_27240_end - _27228_start));
	{
		__jule_std_vector_copy_range<jule::Ref<_1506406d0_UseDecl>>(_29317_vec._field__buffer.heap,((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_1506406d0_UseDecl>) * _27228_start))),_29317_vec._field__buffer.cap);
	}
	_29317_vec._field__buffer.len=_29317_vec._field__buffer.cap;
	return _29317_vec;
}







std::ostream &operator<<(std::ostream &_Stream, const _1509ba170_Vector_2 &_Src) {
	_Stream << "Vector{";
	_Stream << "_buffer: cpp._field__buffer";
	_Stream << "}";
	return _Stream;
}

inline _1509ba170_Vector_3 _1509ba170_Vector_3::_static_method_new(jule::Int _4319_cap) {
	_1509ba170_Vector_3 _4417_vec = _1509ba170_Vector_3();
	if (_4319_cap != 0LL) {
		_4417_vec._method_resize_alloc(_4319_cap);
	}
	return _4417_vec;
}



inline jule::Int _1509ba170_Vector_3::_method_calc_grow(jule::Int _5324_delta) {
	jule::Int _5413_t = (*this)._field__buffer.len + _5324_delta;
	return static_cast<jule::Int>(_5413_t * 2LL);
}



inline void _1509ba170_Vector_3::_method_resize_alloc(jule::Int _5831_n) {
	void* _5917_new_heap = __jule_std_vector_alloc<jule::Ref<_1506406d0_Impl>>(_5831_n);
	if (_5917_new_heap == nullptr) {
		jule::panic(jule::Str("Vector[T].resize_alloc: heap reallocation failed", 48));
	}
	if ((*this)._field__buffer.heap == nullptr) {
		(*this)._field__buffer.heap=_5917_new_heap;
		(*this)._field__buffer.cap=_5831_n;
		return;
	}
	{
		if ((*this)._field__buffer.len > 0LL) {
			__jule_std_vector_copy_range<jule::Ref<_1506406d0_Impl>>(_5917_new_heap,(*this)._field__buffer.heap,(*this)._field__buffer.len);
		}
		__jule_std_vector_dealloc<jule::Ref<_1506406d0_Impl>>((*this)._field__buffer.heap);
		(*this)._field__buffer.heap=_5917_new_heap;
	}
	(*this)._field__buffer.cap=_5831_n;
}



inline void _1509ba170_Vector_3::_method_review_allocation(jule::Int _8336_delta) {
	if (((*this)._field__buffer.len + _8336_delta) > (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>((*this)._method_calc_grow(_8336_delta)));
	}
}



inline jule::Int _1509ba170_Vector_3::_method_len(void) {
	return (*this)._field__buffer.len;
}



inline jule::Int _1509ba170_Vector_3::_method_cap(void) {
	return (*this)._field__buffer.cap;
}



inline void _1509ba170_Vector_3::_method_dealloc(void) {
	(*this)._field__buffer.drop();
}



inline void _1509ba170_Vector_3::_method_set_len(jule::Int _10330_n) {
	if (_10330_n < 0LL) {
		(*this)._field__buffer.len=0LL;
		return;
	}
	if (_10330_n >= (*this)._field__buffer.len) {
		return;
	}
	(*this)._field__buffer.len=_10330_n;
}



inline jule::Ref<_1506406d0_Impl> _1509ba170_Vector_3::_method_at(jule::Int _11525_i) {
	if ((_11525_i < 0LL) || (_11525_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].at: out of range", 26));
	}
	return __jule_std_vector_deref<jule::Ref<_1506406d0_Impl>>((*this)._field__buffer.heap,_11525_i);
}



inline void _1509ba170_Vector_3::_method_set(jule::Int _12326_i,jule::Ref<_1506406d0_Impl> _12338_item) {
	if ((_12326_i < 0LL) || (_12326_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].set: out of range", 27));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_1506406d0_Impl>>((*this)._field__buffer.heap,_12326_i,_12338_item);
	}
}



inline void _1509ba170_Vector_3::_method_push(jule::Ref<_1506406d0_Impl> _13131_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>(((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_1506406d0_Impl>>((*this)._field__buffer.heap,(*this)._field__buffer.len,_13131_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _1509ba170_Vector_3::_method_push_front(jule::Ref<_1506406d0_Impl> _14637_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>(((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	jule::Int _15217_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5674482176:;
	if (!(_15217_i >= 0LL)) { goto _iter_end_5674482176; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_1506406d0_Impl>>((*this)._field__buffer.heap,_15217_i,static_cast<jule::Int>(_15217_i + 1LL));
		}
	}
	_iter_next_5674482176:;
	(_15217_i)--;
	goto _iter_begin_5674482176;
	_iter_end_5674482176:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_1506406d0_Impl>>((*this)._field__buffer.heap,0LL,_14637_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _1509ba170_Vector_3::_method_append(jule::Slice<jule::Ref<_1506406d0_Impl>> _16333_items) {
	if (_16333_items.len() == 0LL) {
		return;
	}
	(*this)._method_review_allocation(static_cast<jule::I64>(_16333_items.len()));
	{
		__jule_std_vector_copy_range<jule::Ref<_1506406d0_Impl>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_1506406d0_Impl>) * (*this)._field__buffer.len))),__jule_get_pointer_of_slice<jule::Ref<_1506406d0_Impl>>(_16333_items),static_cast<jule::I64>(_16333_items.len()));
	}
	(*this)._field__buffer.len+=static_cast<jule::I64>(_16333_items.len());
}



inline void _1509ba170_Vector_3::_method_merge(_1509ba170_Vector_3 _18032_vec) {
	if (_18032_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_18032_vec._field__buffer.len);
	{
		__jule_std_vector_copy_range<jule::Ref<_1506406d0_Impl>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_1506406d0_Impl>) * (*this)._field__buffer.len))),_18032_vec._field__buffer.heap,_18032_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_18032_vec._field__buffer.len;
}



inline void _1509ba170_Vector_3::_method_merge_front(_1509ba170_Vector_3 _19738_vec) {
	if (_19738_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_19738_vec._field__buffer.len);
	jule::Int _20517_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5674517296:;
	if (!(_20517_i >= 0LL)) { goto _iter_end_5674517296; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_1506406d0_Impl>>((*this)._field__buffer.heap,_20517_i,static_cast<jule::Int>(_20517_i + _19738_vec._field__buffer.len));
		}
	}
	_iter_next_5674517296:;
	(_20517_i)--;
	goto _iter_begin_5674517296;
	_iter_end_5674517296:;
	{
		__jule_std_vector_copy_range<jule::Ref<_1506406d0_Impl>>((*this)._field__buffer.heap,_19738_vec._field__buffer.heap,_19738_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_19738_vec._field__buffer.len;
}



inline void _1509ba170_Vector_3::_method_remove_range(jule::Int _22335_start,jule::Int _22347_n) {
	if (_22347_n < 1LL) {
		return;
	}
	if (_22335_start < -1LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at negative index", 57));
	}
	if (_22335_start >= (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at out of range", 55));
	}
	if ((((*this)._field__buffer.len - _22335_start) - _22347_n) < 0LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing continues at out of range", 58));
	}
	jule::Int _23917_i = _22335_start + _22347_n;
	_iter_begin_5674534336:;
	if (!(_23917_i < (*this)._field__buffer.len)) { goto _iter_end_5674534336; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_1506406d0_Impl>>((*this)._field__buffer.heap,_23917_i,static_cast<jule::Int>(_23917_i - _22347_n));
		}
	}
	_iter_next_5674534336:;
	(_23917_i)++;
	goto _iter_begin_5674534336;
	_iter_end_5674534336:;
	(*this)._field__buffer.len-=_22347_n;
}



inline void _1509ba170_Vector_3::_method_insert(jule::Int _24829_i,jule::Ref<_1506406d0_Impl> _24841_item) {
	if (_24829_i < 0LL) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at negative index", 52));
	}
	if (_24829_i > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at out of range", 50));
	}
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>(((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	jule::Int _26117_j = (*this)._field__buffer.len - 1LL;
	_iter_begin_5674544720:;
	if (!(_26117_j >= _24829_i)) { goto _iter_end_5674544720; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_1506406d0_Impl>>((*this)._field__buffer.heap,_26117_j,static_cast<jule::Int>(_26117_j + 1LL));
		}
	}
	_iter_next_5674544720:;
	(_26117_j)--;
	goto _iter_begin_5674544720;
	_iter_end_5674544720:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_1506406d0_Impl>>((*this)._field__buffer.heap,_24829_i,_24841_item);
	}
	((*this)._field__buffer.len)++;
}



inline _1509ba170_Vector_3 _1509ba170_Vector_3::_method_slice(jule::Int _27228_start,jule::Int _27240_end) {
	if (_27228_start < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at negative index", 49));
	}
	if (_27228_start > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at out of range", 47));
	}
	if (_27240_end > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at out of range", 45));
	}
	if (_27240_end < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at negative index", 47));
	}
	if (_27228_start > _27240_end) {
		jule::panic(jule::Str("Vector[T].slice: start point < end point", 40));
	}
	if (_27228_start == _27240_end) {
		return _1509ba170_Vector_3::_static_method_new(0LL);
	}
	_1509ba170_Vector_3 _29317_vec = _1509ba170_Vector_3::_static_method_new(static_cast<jule::Int>(_27240_end - _27228_start));
	{
		__jule_std_vector_copy_range<jule::Ref<_1506406d0_Impl>>(_29317_vec._field__buffer.heap,((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_1506406d0_Impl>) * _27228_start))),_29317_vec._field__buffer.cap);
	}
	_29317_vec._field__buffer.len=_29317_vec._field__buffer.cap;
	return _29317_vec;
}







std::ostream &operator<<(std::ostream &_Stream, const _1509ba170_Vector_3 &_Src) {
	_Stream << "Vector{";
	_Stream << "_buffer: cpp._field__buffer";
	_Stream << "}";
	return _Stream;
}

inline _1509ba170_Vector_4 _1509ba170_Vector_4::_static_method_new(jule::Int _4319_cap) {
	_1509ba170_Vector_4 _4417_vec = _1509ba170_Vector_4();
	if (_4319_cap != 0LL) {
		_4417_vec._method_resize_alloc(_4319_cap);
	}
	return _4417_vec;
}



inline jule::Int _1509ba170_Vector_4::_method_calc_grow(jule::Int _5324_delta) {
	jule::Int _5413_t = (*this)._field__buffer.len + _5324_delta;
	return static_cast<jule::Int>(_5413_t * 2LL);
}



inline void _1509ba170_Vector_4::_method_resize_alloc(jule::Int _5831_n) {
	void* _5917_new_heap = __jule_std_vector_alloc<jule::Ref<_1506406d0_Comment>>(_5831_n);
	if (_5917_new_heap == nullptr) {
		jule::panic(jule::Str("Vector[T].resize_alloc: heap reallocation failed", 48));
	}
	if ((*this)._field__buffer.heap == nullptr) {
		(*this)._field__buffer.heap=_5917_new_heap;
		(*this)._field__buffer.cap=_5831_n;
		return;
	}
	{
		if ((*this)._field__buffer.len > 0LL) {
			__jule_std_vector_copy_range<jule::Ref<_1506406d0_Comment>>(_5917_new_heap,(*this)._field__buffer.heap,(*this)._field__buffer.len);
		}
		__jule_std_vector_dealloc<jule::Ref<_1506406d0_Comment>>((*this)._field__buffer.heap);
		(*this)._field__buffer.heap=_5917_new_heap;
	}
	(*this)._field__buffer.cap=_5831_n;
}



inline void _1509ba170_Vector_4::_method_review_allocation(jule::Int _8336_delta) {
	if (((*this)._field__buffer.len + _8336_delta) > (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>((*this)._method_calc_grow(_8336_delta)));
	}
}



inline jule::Int _1509ba170_Vector_4::_method_len(void) {
	return (*this)._field__buffer.len;
}



inline jule::Int _1509ba170_Vector_4::_method_cap(void) {
	return (*this)._field__buffer.cap;
}



inline void _1509ba170_Vector_4::_method_dealloc(void) {
	(*this)._field__buffer.drop();
}



inline void _1509ba170_Vector_4::_method_set_len(jule::Int _10330_n) {
	if (_10330_n < 0LL) {
		(*this)._field__buffer.len=0LL;
		return;
	}
	if (_10330_n >= (*this)._field__buffer.len) {
		return;
	}
	(*this)._field__buffer.len=_10330_n;
}



inline jule::Ref<_1506406d0_Comment> _1509ba170_Vector_4::_method_at(jule::Int _11525_i) {
	if ((_11525_i < 0LL) || (_11525_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].at: out of range", 26));
	}
	return __jule_std_vector_deref<jule::Ref<_1506406d0_Comment>>((*this)._field__buffer.heap,_11525_i);
}



inline void _1509ba170_Vector_4::_method_set(jule::Int _12326_i,jule::Ref<_1506406d0_Comment> _12338_item) {
	if ((_12326_i < 0LL) || (_12326_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].set: out of range", 27));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_1506406d0_Comment>>((*this)._field__buffer.heap,_12326_i,_12338_item);
	}
}



inline void _1509ba170_Vector_4::_method_push(jule::Ref<_1506406d0_Comment> _13131_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>(((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_1506406d0_Comment>>((*this)._field__buffer.heap,(*this)._field__buffer.len,_13131_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _1509ba170_Vector_4::_method_push_front(jule::Ref<_1506406d0_Comment> _14637_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>(((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	jule::Int _15217_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5674659120:;
	if (!(_15217_i >= 0LL)) { goto _iter_end_5674659120; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_1506406d0_Comment>>((*this)._field__buffer.heap,_15217_i,static_cast<jule::Int>(_15217_i + 1LL));
		}
	}
	_iter_next_5674659120:;
	(_15217_i)--;
	goto _iter_begin_5674659120;
	_iter_end_5674659120:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_1506406d0_Comment>>((*this)._field__buffer.heap,0LL,_14637_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _1509ba170_Vector_4::_method_append(jule::Slice<jule::Ref<_1506406d0_Comment>> _16333_items) {
	if (_16333_items.len() == 0LL) {
		return;
	}
	(*this)._method_review_allocation(static_cast<jule::I64>(_16333_items.len()));
	{
		__jule_std_vector_copy_range<jule::Ref<_1506406d0_Comment>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_1506406d0_Comment>) * (*this)._field__buffer.len))),__jule_get_pointer_of_slice<jule::Ref<_1506406d0_Comment>>(_16333_items),static_cast<jule::I64>(_16333_items.len()));
	}
	(*this)._field__buffer.len+=static_cast<jule::I64>(_16333_items.len());
}



inline void _1509ba170_Vector_4::_method_merge(_1509ba170_Vector_4 _18032_vec) {
	if (_18032_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_18032_vec._field__buffer.len);
	{
		__jule_std_vector_copy_range<jule::Ref<_1506406d0_Comment>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_1506406d0_Comment>) * (*this)._field__buffer.len))),_18032_vec._field__buffer.heap,_18032_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_18032_vec._field__buffer.len;
}



inline void _1509ba170_Vector_4::_method_merge_front(_1509ba170_Vector_4 _19738_vec) {
	if (_19738_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_19738_vec._field__buffer.len);
	jule::Int _20517_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5674694240:;
	if (!(_20517_i >= 0LL)) { goto _iter_end_5674694240; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_1506406d0_Comment>>((*this)._field__buffer.heap,_20517_i,static_cast<jule::Int>(_20517_i + _19738_vec._field__buffer.len));
		}
	}
	_iter_next_5674694240:;
	(_20517_i)--;
	goto _iter_begin_5674694240;
	_iter_end_5674694240:;
	{
		__jule_std_vector_copy_range<jule::Ref<_1506406d0_Comment>>((*this)._field__buffer.heap,_19738_vec._field__buffer.heap,_19738_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_19738_vec._field__buffer.len;
}



inline void _1509ba170_Vector_4::_method_remove_range(jule::Int _22335_start,jule::Int _22347_n) {
	if (_22347_n < 1LL) {
		return;
	}
	if (_22335_start < -1LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at negative index", 57));
	}
	if (_22335_start >= (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at out of range", 55));
	}
	if ((((*this)._field__buffer.len - _22335_start) - _22347_n) < 0LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing continues at out of range", 58));
	}
	jule::Int _23917_i = _22335_start + _22347_n;
	_iter_begin_5674711280:;
	if (!(_23917_i < (*this)._field__buffer.len)) { goto _iter_end_5674711280; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_1506406d0_Comment>>((*this)._field__buffer.heap,_23917_i,static_cast<jule::Int>(_23917_i - _22347_n));
		}
	}
	_iter_next_5674711280:;
	(_23917_i)++;
	goto _iter_begin_5674711280;
	_iter_end_5674711280:;
	(*this)._field__buffer.len-=_22347_n;
}



inline void _1509ba170_Vector_4::_method_insert(jule::Int _24829_i,jule::Ref<_1506406d0_Comment> _24841_item) {
	if (_24829_i < 0LL) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at negative index", 52));
	}
	if (_24829_i > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at out of range", 50));
	}
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>(((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	jule::Int _26117_j = (*this)._field__buffer.len - 1LL;
	_iter_begin_5674721664:;
	if (!(_26117_j >= _24829_i)) { goto _iter_end_5674721664; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_1506406d0_Comment>>((*this)._field__buffer.heap,_26117_j,static_cast<jule::Int>(_26117_j + 1LL));
		}
	}
	_iter_next_5674721664:;
	(_26117_j)--;
	goto _iter_begin_5674721664;
	_iter_end_5674721664:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_1506406d0_Comment>>((*this)._field__buffer.heap,_24829_i,_24841_item);
	}
	((*this)._field__buffer.len)++;
}



inline _1509ba170_Vector_4 _1509ba170_Vector_4::_method_slice(jule::Int _27228_start,jule::Int _27240_end) {
	if (_27228_start < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at negative index", 49));
	}
	if (_27228_start > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at out of range", 47));
	}
	if (_27240_end > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at out of range", 45));
	}
	if (_27240_end < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at negative index", 47));
	}
	if (_27228_start > _27240_end) {
		jule::panic(jule::Str("Vector[T].slice: start point < end point", 40));
	}
	if (_27228_start == _27240_end) {
		return _1509ba170_Vector_4::_static_method_new(0LL);
	}
	_1509ba170_Vector_4 _29317_vec = _1509ba170_Vector_4::_static_method_new(static_cast<jule::Int>(_27240_end - _27228_start));
	{
		__jule_std_vector_copy_range<jule::Ref<_1506406d0_Comment>>(_29317_vec._field__buffer.heap,((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_1506406d0_Comment>) * _27228_start))),_29317_vec._field__buffer.cap);
	}
	_29317_vec._field__buffer.len=_29317_vec._field__buffer.cap;
	return _29317_vec;
}







std::ostream &operator<<(std::ostream &_Stream, const _1509ba170_Vector_4 &_Src) {
	_Stream << "Vector{";
	_Stream << "_buffer: cpp._field__buffer";
	_Stream << "}";
	return _Stream;
}

inline _1509ba170_Vector_5 _1509ba170_Vector_5::_static_method_new(jule::Int _4319_cap) {
	_1509ba170_Vector_5 _4417_vec = _1509ba170_Vector_5();
	if (_4319_cap != 0LL) {
		_4417_vec._method_resize_alloc(_4319_cap);
	}
	return _4417_vec;
}



inline jule::Int _1509ba170_Vector_5::_method_calc_grow(jule::Int _5324_delta) {
	jule::Int _5413_t = (*this)._field__buffer.len + _5324_delta;
	return static_cast<jule::Int>(_5413_t * 2LL);
}



inline void _1509ba170_Vector_5::_method_resize_alloc(jule::Int _5831_n) {
	void* _5917_new_heap = __jule_std_vector_alloc<_1506406d0_Node>(_5831_n);
	if (_5917_new_heap == nullptr) {
		jule::panic(jule::Str("Vector[T].resize_alloc: heap reallocation failed", 48));
	}
	if ((*this)._field__buffer.heap == nullptr) {
		(*this)._field__buffer.heap=_5917_new_heap;
		(*this)._field__buffer.cap=_5831_n;
		return;
	}
	{
		if ((*this)._field__buffer.len > 0LL) {
			__jule_std_vector_copy_range<_1506406d0_Node>(_5917_new_heap,(*this)._field__buffer.heap,(*this)._field__buffer.len);
		}
		__jule_std_vector_dealloc<_1506406d0_Node>((*this)._field__buffer.heap);
		(*this)._field__buffer.heap=_5917_new_heap;
	}
	(*this)._field__buffer.cap=_5831_n;
}



inline void _1509ba170_Vector_5::_method_review_allocation(jule::Int _8336_delta) {
	if (((*this)._field__buffer.len + _8336_delta) > (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>((*this)._method_calc_grow(_8336_delta)));
	}
}



inline jule::Int _1509ba170_Vector_5::_method_len(void) {
	return (*this)._field__buffer.len;
}



inline jule::Int _1509ba170_Vector_5::_method_cap(void) {
	return (*this)._field__buffer.cap;
}



inline void _1509ba170_Vector_5::_method_dealloc(void) {
	(*this)._field__buffer.drop();
}



inline void _1509ba170_Vector_5::_method_set_len(jule::Int _10330_n) {
	if (_10330_n < 0LL) {
		(*this)._field__buffer.len=0LL;
		return;
	}
	if (_10330_n >= (*this)._field__buffer.len) {
		return;
	}
	(*this)._field__buffer.len=_10330_n;
}



inline _1506406d0_Node _1509ba170_Vector_5::_method_at(jule::Int _11525_i) {
	if ((_11525_i < 0LL) || (_11525_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].at: out of range", 26));
	}
	return __jule_std_vector_deref<_1506406d0_Node>((*this)._field__buffer.heap,_11525_i);
}



inline void _1509ba170_Vector_5::_method_set(jule::Int _12326_i,_1506406d0_Node _12338_item) {
	if ((_12326_i < 0LL) || (_12326_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].set: out of range", 27));
	}
	{
		__jule_std_vector_heap_assign<_1506406d0_Node>((*this)._field__buffer.heap,_12326_i,_12338_item);
	}
}



inline void _1509ba170_Vector_5::_method_push(_1506406d0_Node _13131_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>(((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	{
		__jule_std_vector_heap_assign<_1506406d0_Node>((*this)._field__buffer.heap,(*this)._field__buffer.len,_13131_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _1509ba170_Vector_5::_method_push_front(_1506406d0_Node _14637_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>(((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	jule::Int _15217_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5674838320:;
	if (!(_15217_i >= 0LL)) { goto _iter_end_5674838320; }
	{
		{
			__jule_std_vector_heap_move<_1506406d0_Node>((*this)._field__buffer.heap,_15217_i,static_cast<jule::Int>(_15217_i + 1LL));
		}
	}
	_iter_next_5674838320:;
	(_15217_i)--;
	goto _iter_begin_5674838320;
	_iter_end_5674838320:;
	{
		__jule_std_vector_heap_assign<_1506406d0_Node>((*this)._field__buffer.heap,0LL,_14637_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _1509ba170_Vector_5::_method_append(jule::Slice<_1506406d0_Node> _16333_items) {
	if (_16333_items.len() == 0LL) {
		return;
	}
	(*this)._method_review_allocation(static_cast<jule::I64>(_16333_items.len()));
	{
		__jule_std_vector_copy_range<_1506406d0_Node>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(_1506406d0_Node) * (*this)._field__buffer.len))),__jule_get_pointer_of_slice<_1506406d0_Node>(_16333_items),static_cast<jule::I64>(_16333_items.len()));
	}
	(*this)._field__buffer.len+=static_cast<jule::I64>(_16333_items.len());
}



inline void _1509ba170_Vector_5::_method_merge(_1509ba170_Vector_5 _18032_vec) {
	if (_18032_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_18032_vec._field__buffer.len);
	{
		__jule_std_vector_copy_range<_1506406d0_Node>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(_1506406d0_Node) * (*this)._field__buffer.len))),_18032_vec._field__buffer.heap,_18032_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_18032_vec._field__buffer.len;
}



inline void _1509ba170_Vector_5::_method_merge_front(_1509ba170_Vector_5 _19738_vec) {
	if (_19738_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_19738_vec._field__buffer.len);
	jule::Int _20517_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5674873216:;
	if (!(_20517_i >= 0LL)) { goto _iter_end_5674873216; }
	{
		{
			__jule_std_vector_heap_move<_1506406d0_Node>((*this)._field__buffer.heap,_20517_i,static_cast<jule::Int>(_20517_i + _19738_vec._field__buffer.len));
		}
	}
	_iter_next_5674873216:;
	(_20517_i)--;
	goto _iter_begin_5674873216;
	_iter_end_5674873216:;
	{
		__jule_std_vector_copy_range<_1506406d0_Node>((*this)._field__buffer.heap,_19738_vec._field__buffer.heap,_19738_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_19738_vec._field__buffer.len;
}



inline void _1509ba170_Vector_5::_method_remove_range(jule::Int _22335_start,jule::Int _22347_n) {
	if (_22347_n < 1LL) {
		return;
	}
	if (_22335_start < -1LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at negative index", 57));
	}
	if (_22335_start >= (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at out of range", 55));
	}
	if ((((*this)._field__buffer.len - _22335_start) - _22347_n) < 0LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing continues at out of range", 58));
	}
	jule::Int _23917_i = _22335_start + _22347_n;
	_iter_begin_5674890256:;
	if (!(_23917_i < (*this)._field__buffer.len)) { goto _iter_end_5674890256; }
	{
		{
			__jule_std_vector_heap_move<_1506406d0_Node>((*this)._field__buffer.heap,_23917_i,static_cast<jule::Int>(_23917_i - _22347_n));
		}
	}
	_iter_next_5674890256:;
	(_23917_i)++;
	goto _iter_begin_5674890256;
	_iter_end_5674890256:;
	(*this)._field__buffer.len-=_22347_n;
}



inline void _1509ba170_Vector_5::_method_insert(jule::Int _24829_i,_1506406d0_Node _24841_item) {
	if (_24829_i < 0LL) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at negative index", 52));
	}
	if (_24829_i > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at out of range", 50));
	}
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>(((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	jule::Int _26117_j = (*this)._field__buffer.len - 1LL;
	_iter_begin_5674917152:;
	if (!(_26117_j >= _24829_i)) { goto _iter_end_5674917152; }
	{
		{
			__jule_std_vector_heap_move<_1506406d0_Node>((*this)._field__buffer.heap,_26117_j,static_cast<jule::Int>(_26117_j + 1LL));
		}
	}
	_iter_next_5674917152:;
	(_26117_j)--;
	goto _iter_begin_5674917152;
	_iter_end_5674917152:;
	{
		__jule_std_vector_heap_assign<_1506406d0_Node>((*this)._field__buffer.heap,_24829_i,_24841_item);
	}
	((*this)._field__buffer.len)++;
}



inline _1509ba170_Vector_5 _1509ba170_Vector_5::_method_slice(jule::Int _27228_start,jule::Int _27240_end) {
	if (_27228_start < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at negative index", 49));
	}
	if (_27228_start > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at out of range", 47));
	}
	if (_27240_end > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at out of range", 45));
	}
	if (_27240_end < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at negative index", 47));
	}
	if (_27228_start > _27240_end) {
		jule::panic(jule::Str("Vector[T].slice: start point < end point", 40));
	}
	if (_27228_start == _27240_end) {
		return _1509ba170_Vector_5::_static_method_new(0LL);
	}
	_1509ba170_Vector_5 _29317_vec = _1509ba170_Vector_5::_static_method_new(static_cast<jule::Int>(_27240_end - _27228_start));
	{
		__jule_std_vector_copy_range<_1506406d0_Node>(_29317_vec._field__buffer.heap,((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(_1506406d0_Node) * _27228_start))),_29317_vec._field__buffer.cap);
	}
	_29317_vec._field__buffer.len=_29317_vec._field__buffer.cap;
	return _29317_vec;
}







std::ostream &operator<<(std::ostream &_Stream, const _1509ba170_Vector_5 &_Src) {
	_Stream << "Vector{";
	_Stream << "_buffer: cpp._field__buffer";
	_Stream << "}";
	return _Stream;
}

inline _1509ba170_Vector_6 _1509ba170_Vector_6::_static_method_new(jule::Int _4319_cap) {
	_1509ba170_Vector_6 _4417_vec = _1509ba170_Vector_6();
	if (_4319_cap != 0LL) {
		_4417_vec._method_resize_alloc(_4319_cap);
	}
	return _4417_vec;
}



inline jule::Int _1509ba170_Vector_6::_method_calc_grow(jule::Int _5324_delta) {
	jule::Int _5413_t = (*this)._field__buffer.len + _5324_delta;
	return static_cast<jule::Int>(_5413_t * 2LL);
}



inline void _1509ba170_Vector_6::_method_resize_alloc(jule::Int _5831_n) {
	void* _5917_new_heap = __jule_std_vector_alloc<_150e75a70_Pass>(_5831_n);
	if (_5917_new_heap == nullptr) {
		jule::panic(jule::Str("Vector[T].resize_alloc: heap reallocation failed", 48));
	}
	if ((*this)._field__buffer.heap == nullptr) {
		(*this)._field__buffer.heap=_5917_new_heap;
		(*this)._field__buffer.cap=_5831_n;
		return;
	}
	{
		if ((*this)._field__buffer.len > 0LL) {
			__jule_std_vector_copy_range<_150e75a70_Pass>(_5917_new_heap,(*this)._field__buffer.heap,(*this)._field__buffer.len);
		}
		__jule_std_vector_dealloc<_150e75a70_Pass>((*this)._field__buffer.heap);
		(*this)._field__buffer.heap=_5917_new_heap;
	}
	(*this)._field__buffer.cap=_5831_n;
}



inline void _1509ba170_Vector_6::_method_review_allocation(jule::Int _8336_delta) {
	if (((*this)._field__buffer.len + _8336_delta) > (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>((*this)._method_calc_grow(_8336_delta)));
	}
}



inline jule::Int _1509ba170_Vector_6::_method_len(void) {
	return (*this)._field__buffer.len;
}



inline jule::Int _1509ba170_Vector_6::_method_cap(void) {
	return (*this)._field__buffer.cap;
}



inline void _1509ba170_Vector_6::_method_dealloc(void) {
	(*this)._field__buffer.drop();
}



inline void _1509ba170_Vector_6::_method_set_len(jule::Int _10330_n) {
	if (_10330_n < 0LL) {
		(*this)._field__buffer.len=0LL;
		return;
	}
	if (_10330_n >= (*this)._field__buffer.len) {
		return;
	}
	(*this)._field__buffer.len=_10330_n;
}



inline _150e75a70_Pass _1509ba170_Vector_6::_method_at(jule::Int _11525_i) {
	if ((_11525_i < 0LL) || (_11525_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].at: out of range", 26));
	}
	return __jule_std_vector_deref<_150e75a70_Pass>((*this)._field__buffer.heap,_11525_i);
}



inline void _1509ba170_Vector_6::_method_set(jule::Int _12326_i,_150e75a70_Pass _12338_item) {
	if ((_12326_i < 0LL) || (_12326_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].set: out of range", 27));
	}
	{
		__jule_std_vector_heap_assign<_150e75a70_Pass>((*this)._field__buffer.heap,_12326_i,_12338_item);
	}
}



inline void _1509ba170_Vector_6::_method_push(_150e75a70_Pass _13131_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>(((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	{
		__jule_std_vector_heap_assign<_150e75a70_Pass>((*this)._field__buffer.heap,(*this)._field__buffer.len,_13131_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _1509ba170_Vector_6::_method_push_front(_150e75a70_Pass _14637_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>(((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	jule::Int _15217_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5678846784:;
	if (!(_15217_i >= 0LL)) { goto _iter_end_5678846784; }
	{
		{
			__jule_std_vector_heap_move<_150e75a70_Pass>((*this)._field__buffer.heap,_15217_i,static_cast<jule::Int>(_15217_i + 1LL));
		}
	}
	_iter_next_5678846784:;
	(_15217_i)--;
	goto _iter_begin_5678846784;
	_iter_end_5678846784:;
	{
		__jule_std_vector_heap_assign<_150e75a70_Pass>((*this)._field__buffer.heap,0LL,_14637_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _1509ba170_Vector_6::_method_append(jule::Slice<_150e75a70_Pass> _16333_items) {
	if (_16333_items.len() == 0LL) {
		return;
	}
	(*this)._method_review_allocation(static_cast<jule::I64>(_16333_items.len()));
	{
		__jule_std_vector_copy_range<_150e75a70_Pass>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(_150e75a70_Pass) * (*this)._field__buffer.len))),__jule_get_pointer_of_slice<_150e75a70_Pass>(_16333_items),static_cast<jule::I64>(_16333_items.len()));
	}
	(*this)._field__buffer.len+=static_cast<jule::I64>(_16333_items.len());
}



inline void _1509ba170_Vector_6::_method_merge(_1509ba170_Vector_6 _18032_vec) {
	if (_18032_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_18032_vec._field__buffer.len);
	{
		__jule_std_vector_copy_range<_150e75a70_Pass>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(_150e75a70_Pass) * (*this)._field__buffer.len))),_18032_vec._field__buffer.heap,_18032_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_18032_vec._field__buffer.len;
}



inline void _1509ba170_Vector_6::_method_merge_front(_1509ba170_Vector_6 _19738_vec) {
	if (_19738_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_19738_vec._field__buffer.len);
	jule::Int _20517_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5678881936:;
	if (!(_20517_i >= 0LL)) { goto _iter_end_5678881936; }
	{
		{
			__jule_std_vector_heap_move<_150e75a70_Pass>((*this)._field__buffer.heap,_20517_i,static_cast<jule::Int>(_20517_i + _19738_vec._field__buffer.len));
		}
	}
	_iter_next_5678881936:;
	(_20517_i)--;
	goto _iter_begin_5678881936;
	_iter_end_5678881936:;
	{
		__jule_std_vector_copy_range<_150e75a70_Pass>((*this)._field__buffer.heap,_19738_vec._field__buffer.heap,_19738_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_19738_vec._field__buffer.len;
}



inline void _1509ba170_Vector_6::_method_remove_range(jule::Int _22335_start,jule::Int _22347_n) {
	if (_22347_n < 1LL) {
		return;
	}
	if (_22335_start < -1LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at negative index", 57));
	}
	if (_22335_start >= (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at out of range", 55));
	}
	if ((((*this)._field__buffer.len - _22335_start) - _22347_n) < 0LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing continues at out of range", 58));
	}
	jule::Int _23917_i = _22335_start + _22347_n;
	_iter_begin_5678898976:;
	if (!(_23917_i < (*this)._field__buffer.len)) { goto _iter_end_5678898976; }
	{
		{
			__jule_std_vector_heap_move<_150e75a70_Pass>((*this)._field__buffer.heap,_23917_i,static_cast<jule::Int>(_23917_i - _22347_n));
		}
	}
	_iter_next_5678898976:;
	(_23917_i)++;
	goto _iter_begin_5678898976;
	_iter_end_5678898976:;
	(*this)._field__buffer.len-=_22347_n;
}



inline void _1509ba170_Vector_6::_method_insert(jule::Int _24829_i,_150e75a70_Pass _24841_item) {
	if (_24829_i < 0LL) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at negative index", 52));
	}
	if (_24829_i > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at out of range", 50));
	}
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>(((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	jule::Int _26117_j = (*this)._field__buffer.len - 1LL;
	_iter_begin_5678909360:;
	if (!(_26117_j >= _24829_i)) { goto _iter_end_5678909360; }
	{
		{
			__jule_std_vector_heap_move<_150e75a70_Pass>((*this)._field__buffer.heap,_26117_j,static_cast<jule::Int>(_26117_j + 1LL));
		}
	}
	_iter_next_5678909360:;
	(_26117_j)--;
	goto _iter_begin_5678909360;
	_iter_end_5678909360:;
	{
		__jule_std_vector_heap_assign<_150e75a70_Pass>((*this)._field__buffer.heap,_24829_i,_24841_item);
	}
	((*this)._field__buffer.len)++;
}



inline _1509ba170_Vector_6 _1509ba170_Vector_6::_method_slice(jule::Int _27228_start,jule::Int _27240_end) {
	if (_27228_start < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at negative index", 49));
	}
	if (_27228_start > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at out of range", 47));
	}
	if (_27240_end > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at out of range", 45));
	}
	if (_27240_end < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at negative index", 47));
	}
	if (_27228_start > _27240_end) {
		jule::panic(jule::Str("Vector[T].slice: start point < end point", 40));
	}
	if (_27228_start == _27240_end) {
		return _1509ba170_Vector_6::_static_method_new(0LL);
	}
	_1509ba170_Vector_6 _29317_vec = _1509ba170_Vector_6::_static_method_new(static_cast<jule::Int>(_27240_end - _27228_start));
	{
		__jule_std_vector_copy_range<_150e75a70_Pass>(_29317_vec._field__buffer.heap,((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(_150e75a70_Pass) * _27228_start))),_29317_vec._field__buffer.cap);
	}
	_29317_vec._field__buffer.len=_29317_vec._field__buffer.cap;
	return _29317_vec;
}







std::ostream &operator<<(std::ostream &_Stream, const _1509ba170_Vector_6 &_Src) {
	_Stream << "Vector{";
	_Stream << "_buffer: cpp._field__buffer";
	_Stream << "}";
	return _Stream;
}

inline _1509ba170_Vector_7 _1509ba170_Vector_7::_static_method_new(jule::Int _4319_cap) {
	_1509ba170_Vector_7 _4417_vec = _1509ba170_Vector_7();
	if (_4319_cap != 0LL) {
		_4417_vec._method_resize_alloc(_4319_cap);
	}
	return _4417_vec;
}



inline jule::Int _1509ba170_Vector_7::_method_calc_grow(jule::Int _5324_delta) {
	jule::Int _5413_t = (*this)._field__buffer.len + _5324_delta;
	return static_cast<jule::Int>(_5413_t * 2LL);
}



inline void _1509ba170_Vector_7::_method_resize_alloc(jule::Int _5831_n) {
	void* _5917_new_heap = __jule_std_vector_alloc<jule::Ref<_150f26340_ImportInfo>>(_5831_n);
	if (_5917_new_heap == nullptr) {
		jule::panic(jule::Str("Vector[T].resize_alloc: heap reallocation failed", 48));
	}
	if ((*this)._field__buffer.heap == nullptr) {
		(*this)._field__buffer.heap=_5917_new_heap;
		(*this)._field__buffer.cap=_5831_n;
		return;
	}
	{
		if ((*this)._field__buffer.len > 0LL) {
			__jule_std_vector_copy_range<jule::Ref<_150f26340_ImportInfo>>(_5917_new_heap,(*this)._field__buffer.heap,(*this)._field__buffer.len);
		}
		__jule_std_vector_dealloc<jule::Ref<_150f26340_ImportInfo>>((*this)._field__buffer.heap);
		(*this)._field__buffer.heap=_5917_new_heap;
	}
	(*this)._field__buffer.cap=_5831_n;
}



inline void _1509ba170_Vector_7::_method_review_allocation(jule::Int _8336_delta) {
	if (((*this)._field__buffer.len + _8336_delta) > (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>((*this)._method_calc_grow(_8336_delta)));
	}
}



inline jule::Int _1509ba170_Vector_7::_method_len(void) {
	return (*this)._field__buffer.len;
}



inline jule::Int _1509ba170_Vector_7::_method_cap(void) {
	return (*this)._field__buffer.cap;
}



inline void _1509ba170_Vector_7::_method_dealloc(void) {
	(*this)._field__buffer.drop();
}



inline void _1509ba170_Vector_7::_method_set_len(jule::Int _10330_n) {
	if (_10330_n < 0LL) {
		(*this)._field__buffer.len=0LL;
		return;
	}
	if (_10330_n >= (*this)._field__buffer.len) {
		return;
	}
	(*this)._field__buffer.len=_10330_n;
}



inline jule::Ref<_150f26340_ImportInfo> _1509ba170_Vector_7::_method_at(jule::Int _11525_i) {
	if ((_11525_i < 0LL) || (_11525_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].at: out of range", 26));
	}
	return __jule_std_vector_deref<jule::Ref<_150f26340_ImportInfo>>((*this)._field__buffer.heap,_11525_i);
}



inline void _1509ba170_Vector_7::_method_set(jule::Int _12326_i,jule::Ref<_150f26340_ImportInfo> _12338_item) {
	if ((_12326_i < 0LL) || (_12326_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].set: out of range", 27));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_150f26340_ImportInfo>>((*this)._field__buffer.heap,_12326_i,_12338_item);
	}
}



inline void _1509ba170_Vector_7::_method_push(jule::Ref<_150f26340_ImportInfo> _13131_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>(((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_150f26340_ImportInfo>>((*this)._field__buffer.heap,(*this)._field__buffer.len,_13131_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _1509ba170_Vector_7::_method_push_front(jule::Ref<_150f26340_ImportInfo> _14637_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>(((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	jule::Int _15217_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5679035632:;
	if (!(_15217_i >= 0LL)) { goto _iter_end_5679035632; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_150f26340_ImportInfo>>((*this)._field__buffer.heap,_15217_i,static_cast<jule::Int>(_15217_i + 1LL));
		}
	}
	_iter_next_5679035632:;
	(_15217_i)--;
	goto _iter_begin_5679035632;
	_iter_end_5679035632:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_150f26340_ImportInfo>>((*this)._field__buffer.heap,0LL,_14637_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _1509ba170_Vector_7::_method_append(jule::Slice<jule::Ref<_150f26340_ImportInfo>> _16333_items) {
	if (_16333_items.len() == 0LL) {
		return;
	}
	(*this)._method_review_allocation(static_cast<jule::I64>(_16333_items.len()));
	{
		__jule_std_vector_copy_range<jule::Ref<_150f26340_ImportInfo>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_150f26340_ImportInfo>) * (*this)._field__buffer.len))),__jule_get_pointer_of_slice<jule::Ref<_150f26340_ImportInfo>>(_16333_items),static_cast<jule::I64>(_16333_items.len()));
	}
	(*this)._field__buffer.len+=static_cast<jule::I64>(_16333_items.len());
}



inline void _1509ba170_Vector_7::_method_merge(_1509ba170_Vector_7 _18032_vec) {
	if (_18032_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_18032_vec._field__buffer.len);
	{
		__jule_std_vector_copy_range<jule::Ref<_150f26340_ImportInfo>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_150f26340_ImportInfo>) * (*this)._field__buffer.len))),_18032_vec._field__buffer.heap,_18032_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_18032_vec._field__buffer.len;
}



inline void _1509ba170_Vector_7::_method_merge_front(_1509ba170_Vector_7 _19738_vec) {
	if (_19738_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_19738_vec._field__buffer.len);
	jule::Int _20517_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5679070752:;
	if (!(_20517_i >= 0LL)) { goto _iter_end_5679070752; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_150f26340_ImportInfo>>((*this)._field__buffer.heap,_20517_i,static_cast<jule::Int>(_20517_i + _19738_vec._field__buffer.len));
		}
	}
	_iter_next_5679070752:;
	(_20517_i)--;
	goto _iter_begin_5679070752;
	_iter_end_5679070752:;
	{
		__jule_std_vector_copy_range<jule::Ref<_150f26340_ImportInfo>>((*this)._field__buffer.heap,_19738_vec._field__buffer.heap,_19738_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_19738_vec._field__buffer.len;
}



inline void _1509ba170_Vector_7::_method_remove_range(jule::Int _22335_start,jule::Int _22347_n) {
	if (_22347_n < 1LL) {
		return;
	}
	if (_22335_start < -1LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at negative index", 57));
	}
	if (_22335_start >= (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at out of range", 55));
	}
	if ((((*this)._field__buffer.len - _22335_start) - _22347_n) < 0LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing continues at out of range", 58));
	}
	jule::Int _23917_i = _22335_start + _22347_n;
	_iter_begin_5679104304:;
	if (!(_23917_i < (*this)._field__buffer.len)) { goto _iter_end_5679104304; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_150f26340_ImportInfo>>((*this)._field__buffer.heap,_23917_i,static_cast<jule::Int>(_23917_i - _22347_n));
		}
	}
	_iter_next_5679104304:;
	(_23917_i)++;
	goto _iter_begin_5679104304;
	_iter_end_5679104304:;
	(*this)._field__buffer.len-=_22347_n;
}



inline void _1509ba170_Vector_7::_method_insert(jule::Int _24829_i,jule::Ref<_150f26340_ImportInfo> _24841_item) {
	if (_24829_i < 0LL) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at negative index", 52));
	}
	if (_24829_i > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at out of range", 50));
	}
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>(((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	jule::Int _26117_j = (*this)._field__buffer.len - 1LL;
	_iter_begin_5679114688:;
	if (!(_26117_j >= _24829_i)) { goto _iter_end_5679114688; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_150f26340_ImportInfo>>((*this)._field__buffer.heap,_26117_j,static_cast<jule::Int>(_26117_j + 1LL));
		}
	}
	_iter_next_5679114688:;
	(_26117_j)--;
	goto _iter_begin_5679114688;
	_iter_end_5679114688:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_150f26340_ImportInfo>>((*this)._field__buffer.heap,_24829_i,_24841_item);
	}
	((*this)._field__buffer.len)++;
}



inline _1509ba170_Vector_7 _1509ba170_Vector_7::_method_slice(jule::Int _27228_start,jule::Int _27240_end) {
	if (_27228_start < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at negative index", 49));
	}
	if (_27228_start > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at out of range", 47));
	}
	if (_27240_end > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at out of range", 45));
	}
	if (_27240_end < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at negative index", 47));
	}
	if (_27228_start > _27240_end) {
		jule::panic(jule::Str("Vector[T].slice: start point < end point", 40));
	}
	if (_27228_start == _27240_end) {
		return _1509ba170_Vector_7::_static_method_new(0LL);
	}
	_1509ba170_Vector_7 _29317_vec = _1509ba170_Vector_7::_static_method_new(static_cast<jule::Int>(_27240_end - _27228_start));
	{
		__jule_std_vector_copy_range<jule::Ref<_150f26340_ImportInfo>>(_29317_vec._field__buffer.heap,((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_150f26340_ImportInfo>) * _27228_start))),_29317_vec._field__buffer.cap);
	}
	_29317_vec._field__buffer.len=_29317_vec._field__buffer.cap;
	return _29317_vec;
}







std::ostream &operator<<(std::ostream &_Stream, const _1509ba170_Vector_7 &_Src) {
	_Stream << "Vector{";
	_Stream << "_buffer: cpp._field__buffer";
	_Stream << "}";
	return _Stream;
}

inline _1509ba170_Vector_8 _1509ba170_Vector_8::_static_method_new(jule::Int _4319_cap) {
	_1509ba170_Vector_8 _4417_vec = _1509ba170_Vector_8();
	if (_4319_cap != 0LL) {
		_4417_vec._method_resize_alloc(_4319_cap);
	}
	return _4417_vec;
}



inline jule::Int _1509ba170_Vector_8::_method_calc_grow(jule::Int _5324_delta) {
	jule::Int _5413_t = (*this)._field__buffer.len + _5324_delta;
	return static_cast<jule::Int>(_5413_t * 2LL);
}



inline void _1509ba170_Vector_8::_method_resize_alloc(jule::Int _5831_n) {
	void* _5917_new_heap = __jule_std_vector_alloc<jule::Any>(_5831_n);
	if (_5917_new_heap == nullptr) {
		jule::panic(jule::Str("Vector[T].resize_alloc: heap reallocation failed", 48));
	}
	if ((*this)._field__buffer.heap == nullptr) {
		(*this)._field__buffer.heap=_5917_new_heap;
		(*this)._field__buffer.cap=_5831_n;
		return;
	}
	{
		if ((*this)._field__buffer.len > 0LL) {
			__jule_std_vector_copy_range<jule::Any>(_5917_new_heap,(*this)._field__buffer.heap,(*this)._field__buffer.len);
		}
		__jule_std_vector_dealloc<jule::Any>((*this)._field__buffer.heap);
		(*this)._field__buffer.heap=_5917_new_heap;
	}
	(*this)._field__buffer.cap=_5831_n;
}



inline void _1509ba170_Vector_8::_method_review_allocation(jule::Int _8336_delta) {
	if (((*this)._field__buffer.len + _8336_delta) > (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>((*this)._method_calc_grow(_8336_delta)));
	}
}



inline jule::Int _1509ba170_Vector_8::_method_len(void) {
	return (*this)._field__buffer.len;
}



inline jule::Int _1509ba170_Vector_8::_method_cap(void) {
	return (*this)._field__buffer.cap;
}



inline void _1509ba170_Vector_8::_method_dealloc(void) {
	(*this)._field__buffer.drop();
}



inline void _1509ba170_Vector_8::_method_set_len(jule::Int _10330_n) {
	if (_10330_n < 0LL) {
		(*this)._field__buffer.len=0LL;
		return;
	}
	if (_10330_n >= (*this)._field__buffer.len) {
		return;
	}
	(*this)._field__buffer.len=_10330_n;
}



inline jule::Any _1509ba170_Vector_8::_method_at(jule::Int _11525_i) {
	if ((_11525_i < 0LL) || (_11525_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].at: out of range", 26));
	}
	return __jule_std_vector_deref<jule::Any>((*this)._field__buffer.heap,_11525_i);
}



inline void _1509ba170_Vector_8::_method_set(jule::Int _12326_i,jule::Any _12338_item) {
	if ((_12326_i < 0LL) || (_12326_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].set: out of range", 27));
	}
	{
		__jule_std_vector_heap_assign<jule::Any>((*this)._field__buffer.heap,_12326_i,_12338_item);
	}
}



inline void _1509ba170_Vector_8::_method_push(jule::Any _13131_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>(((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	{
		__jule_std_vector_heap_assign<jule::Any>((*this)._field__buffer.heap,(*this)._field__buffer.len,_13131_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _1509ba170_Vector_8::_method_push_front(jule::Any _14637_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>(((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	jule::Int _15217_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5679241056:;
	if (!(_15217_i >= 0LL)) { goto _iter_end_5679241056; }
	{
		{
			__jule_std_vector_heap_move<jule::Any>((*this)._field__buffer.heap,_15217_i,static_cast<jule::Int>(_15217_i + 1LL));
		}
	}
	_iter_next_5679241056:;
	(_15217_i)--;
	goto _iter_begin_5679241056;
	_iter_end_5679241056:;
	{
		__jule_std_vector_heap_assign<jule::Any>((*this)._field__buffer.heap,0LL,_14637_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _1509ba170_Vector_8::_method_append(jule::Slice<jule::Any> _16333_items) {
	if (_16333_items.len() == 0LL) {
		return;
	}
	(*this)._method_review_allocation(static_cast<jule::I64>(_16333_items.len()));
	{
		__jule_std_vector_copy_range<jule::Any>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Any) * (*this)._field__buffer.len))),__jule_get_pointer_of_slice<jule::Any>(_16333_items),static_cast<jule::I64>(_16333_items.len()));
	}
	(*this)._field__buffer.len+=static_cast<jule::I64>(_16333_items.len());
}



inline void _1509ba170_Vector_8::_method_merge(_1509ba170_Vector_8 _18032_vec) {
	if (_18032_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_18032_vec._field__buffer.len);
	{
		__jule_std_vector_copy_range<jule::Any>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Any) * (*this)._field__buffer.len))),_18032_vec._field__buffer.heap,_18032_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_18032_vec._field__buffer.len;
}



inline void _1509ba170_Vector_8::_method_merge_front(_1509ba170_Vector_8 _19738_vec) {
	if (_19738_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_19738_vec._field__buffer.len);
	jule::Int _20517_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5679276176:;
	if (!(_20517_i >= 0LL)) { goto _iter_end_5679276176; }
	{
		{
			__jule_std_vector_heap_move<jule::Any>((*this)._field__buffer.heap,_20517_i,static_cast<jule::Int>(_20517_i + _19738_vec._field__buffer.len));
		}
	}
	_iter_next_5679276176:;
	(_20517_i)--;
	goto _iter_begin_5679276176;
	_iter_end_5679276176:;
	{
		__jule_std_vector_copy_range<jule::Any>((*this)._field__buffer.heap,_19738_vec._field__buffer.heap,_19738_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_19738_vec._field__buffer.len;
}



inline void _1509ba170_Vector_8::_method_remove_range(jule::Int _22335_start,jule::Int _22347_n) {
	if (_22347_n < 1LL) {
		return;
	}
	if (_22335_start < -1LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at negative index", 57));
	}
	if (_22335_start >= (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at out of range", 55));
	}
	if ((((*this)._field__buffer.len - _22335_start) - _22347_n) < 0LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing continues at out of range", 58));
	}
	jule::Int _23917_i = _22335_start + _22347_n;
	_iter_begin_5679293216:;
	if (!(_23917_i < (*this)._field__buffer.len)) { goto _iter_end_5679293216; }
	{
		{
			__jule_std_vector_heap_move<jule::Any>((*this)._field__buffer.heap,_23917_i,static_cast<jule::Int>(_23917_i - _22347_n));
		}
	}
	_iter_next_5679293216:;
	(_23917_i)++;
	goto _iter_begin_5679293216;
	_iter_end_5679293216:;
	(*this)._field__buffer.len-=_22347_n;
}



inline void _1509ba170_Vector_8::_method_insert(jule::Int _24829_i,jule::Any _24841_item) {
	if (_24829_i < 0LL) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at negative index", 52));
	}
	if (_24829_i > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at out of range", 50));
	}
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>(((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	jule::Int _26117_j = (*this)._field__buffer.len - 1LL;
	_iter_begin_5679303600:;
	if (!(_26117_j >= _24829_i)) { goto _iter_end_5679303600; }
	{
		{
			__jule_std_vector_heap_move<jule::Any>((*this)._field__buffer.heap,_26117_j,static_cast<jule::Int>(_26117_j + 1LL));
		}
	}
	_iter_next_5679303600:;
	(_26117_j)--;
	goto _iter_begin_5679303600;
	_iter_end_5679303600:;
	{
		__jule_std_vector_heap_assign<jule::Any>((*this)._field__buffer.heap,_24829_i,_24841_item);
	}
	((*this)._field__buffer.len)++;
}



inline _1509ba170_Vector_8 _1509ba170_Vector_8::_method_slice(jule::Int _27228_start,jule::Int _27240_end) {
	if (_27228_start < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at negative index", 49));
	}
	if (_27228_start > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at out of range", 47));
	}
	if (_27240_end > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at out of range", 45));
	}
	if (_27240_end < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at negative index", 47));
	}
	if (_27228_start > _27240_end) {
		jule::panic(jule::Str("Vector[T].slice: start point < end point", 40));
	}
	if (_27228_start == _27240_end) {
		return _1509ba170_Vector_8::_static_method_new(0LL);
	}
	_1509ba170_Vector_8 _29317_vec = _1509ba170_Vector_8::_static_method_new(static_cast<jule::Int>(_27240_end - _27228_start));
	{
		__jule_std_vector_copy_range<jule::Any>(_29317_vec._field__buffer.heap,((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Any) * _27228_start))),_29317_vec._field__buffer.cap);
	}
	_29317_vec._field__buffer.len=_29317_vec._field__buffer.cap;
	return _29317_vec;
}







std::ostream &operator<<(std::ostream &_Stream, const _1509ba170_Vector_8 &_Src) {
	_Stream << "Vector{";
	_Stream << "_buffer: cpp._field__buffer";
	_Stream << "}";
	return _Stream;
}

inline _1509ba170_Vector_9 _1509ba170_Vector_9::_static_method_new(jule::Int _4319_cap) {
	_1509ba170_Vector_9 _4417_vec = _1509ba170_Vector_9();
	if (_4319_cap != 0LL) {
		_4417_vec._method_resize_alloc(_4319_cap);
	}
	return _4417_vec;
}



inline jule::Int _1509ba170_Vector_9::_method_calc_grow(jule::Int _5324_delta) {
	jule::Int _5413_t = (*this)._field__buffer.len + _5324_delta;
	return static_cast<jule::Int>(_5413_t * 2LL);
}



inline void _1509ba170_Vector_9::_method_resize_alloc(jule::Int _5831_n) {
	void* _5917_new_heap = __jule_std_vector_alloc<jule::Ref<_1511317d0_Var>>(_5831_n);
	if (_5917_new_heap == nullptr) {
		jule::panic(jule::Str("Vector[T].resize_alloc: heap reallocation failed", 48));
	}
	if ((*this)._field__buffer.heap == nullptr) {
		(*this)._field__buffer.heap=_5917_new_heap;
		(*this)._field__buffer.cap=_5831_n;
		return;
	}
	{
		if ((*this)._field__buffer.len > 0LL) {
			__jule_std_vector_copy_range<jule::Ref<_1511317d0_Var>>(_5917_new_heap,(*this)._field__buffer.heap,(*this)._field__buffer.len);
		}
		__jule_std_vector_dealloc<jule::Ref<_1511317d0_Var>>((*this)._field__buffer.heap);
		(*this)._field__buffer.heap=_5917_new_heap;
	}
	(*this)._field__buffer.cap=_5831_n;
}



inline void _1509ba170_Vector_9::_method_review_allocation(jule::Int _8336_delta) {
	if (((*this)._field__buffer.len + _8336_delta) > (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>((*this)._method_calc_grow(_8336_delta)));
	}
}



inline jule::Int _1509ba170_Vector_9::_method_len(void) {
	return (*this)._field__buffer.len;
}



inline jule::Int _1509ba170_Vector_9::_method_cap(void) {
	return (*this)._field__buffer.cap;
}



inline void _1509ba170_Vector_9::_method_dealloc(void) {
	(*this)._field__buffer.drop();
}



inline void _1509ba170_Vector_9::_method_set_len(jule::Int _10330_n) {
	if (_10330_n < 0LL) {
		(*this)._field__buffer.len=0LL;
		return;
	}
	if (_10330_n >= (*this)._field__buffer.len) {
		return;
	}
	(*this)._field__buffer.len=_10330_n;
}



inline jule::Ref<_1511317d0_Var> _1509ba170_Vector_9::_method_at(jule::Int _11525_i) {
	if ((_11525_i < 0LL) || (_11525_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].at: out of range", 26));
	}
	return __jule_std_vector_deref<jule::Ref<_1511317d0_Var>>((*this)._field__buffer.heap,_11525_i);
}



inline void _1509ba170_Vector_9::_method_set(jule::Int _12326_i,jule::Ref<_1511317d0_Var> _12338_item) {
	if ((_12326_i < 0LL) || (_12326_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].set: out of range", 27));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_1511317d0_Var>>((*this)._field__buffer.heap,_12326_i,_12338_item);
	}
}



inline void _1509ba170_Vector_9::_method_push(jule::Ref<_1511317d0_Var> _13131_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>(((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_1511317d0_Var>>((*this)._field__buffer.heap,(*this)._field__buffer.len,_13131_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _1509ba170_Vector_9::_method_push_front(jule::Ref<_1511317d0_Var> _14637_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>(((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	jule::Int _15217_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5679433280:;
	if (!(_15217_i >= 0LL)) { goto _iter_end_5679433280; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_1511317d0_Var>>((*this)._field__buffer.heap,_15217_i,static_cast<jule::Int>(_15217_i + 1LL));
		}
	}
	_iter_next_5679433280:;
	(_15217_i)--;
	goto _iter_begin_5679433280;
	_iter_end_5679433280:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_1511317d0_Var>>((*this)._field__buffer.heap,0LL,_14637_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _1509ba170_Vector_9::_method_append(jule::Slice<jule::Ref<_1511317d0_Var>> _16333_items) {
	if (_16333_items.len() == 0LL) {
		return;
	}
	(*this)._method_review_allocation(static_cast<jule::I64>(_16333_items.len()));
	{
		__jule_std_vector_copy_range<jule::Ref<_1511317d0_Var>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_1511317d0_Var>) * (*this)._field__buffer.len))),__jule_get_pointer_of_slice<jule::Ref<_1511317d0_Var>>(_16333_items),static_cast<jule::I64>(_16333_items.len()));
	}
	(*this)._field__buffer.len+=static_cast<jule::I64>(_16333_items.len());
}



inline void _1509ba170_Vector_9::_method_merge(_1509ba170_Vector_9 _18032_vec) {
	if (_18032_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_18032_vec._field__buffer.len);
	{
		__jule_std_vector_copy_range<jule::Ref<_1511317d0_Var>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_1511317d0_Var>) * (*this)._field__buffer.len))),_18032_vec._field__buffer.heap,_18032_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_18032_vec._field__buffer.len;
}



inline void _1509ba170_Vector_9::_method_merge_front(_1509ba170_Vector_9 _19738_vec) {
	if (_19738_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_19738_vec._field__buffer.len);
	jule::Int _20517_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5679468400:;
	if (!(_20517_i >= 0LL)) { goto _iter_end_5679468400; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_1511317d0_Var>>((*this)._field__buffer.heap,_20517_i,static_cast<jule::Int>(_20517_i + _19738_vec._field__buffer.len));
		}
	}
	_iter_next_5679468400:;
	(_20517_i)--;
	goto _iter_begin_5679468400;
	_iter_end_5679468400:;
	{
		__jule_std_vector_copy_range<jule::Ref<_1511317d0_Var>>((*this)._field__buffer.heap,_19738_vec._field__buffer.heap,_19738_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_19738_vec._field__buffer.len;
}



inline void _1509ba170_Vector_9::_method_remove_range(jule::Int _22335_start,jule::Int _22347_n) {
	if (_22347_n < 1LL) {
		return;
	}
	if (_22335_start < -1LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at negative index", 57));
	}
	if (_22335_start >= (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at out of range", 55));
	}
	if ((((*this)._field__buffer.len - _22335_start) - _22347_n) < 0LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing continues at out of range", 58));
	}
	jule::Int _23917_i = _22335_start + _22347_n;
	_iter_begin_5679485440:;
	if (!(_23917_i < (*this)._field__buffer.len)) { goto _iter_end_5679485440; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_1511317d0_Var>>((*this)._field__buffer.heap,_23917_i,static_cast<jule::Int>(_23917_i - _22347_n));
		}
	}
	_iter_next_5679485440:;
	(_23917_i)++;
	goto _iter_begin_5679485440;
	_iter_end_5679485440:;
	(*this)._field__buffer.len-=_22347_n;
}



inline void _1509ba170_Vector_9::_method_insert(jule::Int _24829_i,jule::Ref<_1511317d0_Var> _24841_item) {
	if (_24829_i < 0LL) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at negative index", 52));
	}
	if (_24829_i > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at out of range", 50));
	}
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>(((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	jule::Int _26117_j = (*this)._field__buffer.len - 1LL;
	_iter_begin_5679495824:;
	if (!(_26117_j >= _24829_i)) { goto _iter_end_5679495824; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_1511317d0_Var>>((*this)._field__buffer.heap,_26117_j,static_cast<jule::Int>(_26117_j + 1LL));
		}
	}
	_iter_next_5679495824:;
	(_26117_j)--;
	goto _iter_begin_5679495824;
	_iter_end_5679495824:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_1511317d0_Var>>((*this)._field__buffer.heap,_24829_i,_24841_item);
	}
	((*this)._field__buffer.len)++;
}



inline _1509ba170_Vector_9 _1509ba170_Vector_9::_method_slice(jule::Int _27228_start,jule::Int _27240_end) {
	if (_27228_start < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at negative index", 49));
	}
	if (_27228_start > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at out of range", 47));
	}
	if (_27240_end > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at out of range", 45));
	}
	if (_27240_end < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at negative index", 47));
	}
	if (_27228_start > _27240_end) {
		jule::panic(jule::Str("Vector[T].slice: start point < end point", 40));
	}
	if (_27228_start == _27240_end) {
		return _1509ba170_Vector_9::_static_method_new(0LL);
	}
	_1509ba170_Vector_9 _29317_vec = _1509ba170_Vector_9::_static_method_new(static_cast<jule::Int>(_27240_end - _27228_start));
	{
		__jule_std_vector_copy_range<jule::Ref<_1511317d0_Var>>(_29317_vec._field__buffer.heap,((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_1511317d0_Var>) * _27228_start))),_29317_vec._field__buffer.cap);
	}
	_29317_vec._field__buffer.len=_29317_vec._field__buffer.cap;
	return _29317_vec;
}







std::ostream &operator<<(std::ostream &_Stream, const _1509ba170_Vector_9 &_Src) {
	_Stream << "Vector{";
	_Stream << "_buffer: cpp._field__buffer";
	_Stream << "}";
	return _Stream;
}

inline _1509ba170_Vector_10 _1509ba170_Vector_10::_static_method_new(jule::Int _4319_cap) {
	_1509ba170_Vector_10 _4417_vec = _1509ba170_Vector_10();
	if (_4319_cap != 0LL) {
		_4417_vec._method_resize_alloc(_4319_cap);
	}
	return _4417_vec;
}



inline jule::Int _1509ba170_Vector_10::_method_calc_grow(jule::Int _5324_delta) {
	jule::Int _5413_t = (*this)._field__buffer.len + _5324_delta;
	return static_cast<jule::Int>(_5413_t * 2LL);
}



inline void _1509ba170_Vector_10::_method_resize_alloc(jule::Int _5831_n) {
	void* _5917_new_heap = __jule_std_vector_alloc<jule::Ref<_15177b070_TypeAlias>>(_5831_n);
	if (_5917_new_heap == nullptr) {
		jule::panic(jule::Str("Vector[T].resize_alloc: heap reallocation failed", 48));
	}
	if ((*this)._field__buffer.heap == nullptr) {
		(*this)._field__buffer.heap=_5917_new_heap;
		(*this)._field__buffer.cap=_5831_n;
		return;
	}
	{
		if ((*this)._field__buffer.len > 0LL) {
			__jule_std_vector_copy_range<jule::Ref<_15177b070_TypeAlias>>(_5917_new_heap,(*this)._field__buffer.heap,(*this)._field__buffer.len);
		}
		__jule_std_vector_dealloc<jule::Ref<_15177b070_TypeAlias>>((*this)._field__buffer.heap);
		(*this)._field__buffer.heap=_5917_new_heap;
	}
	(*this)._field__buffer.cap=_5831_n;
}



inline void _1509ba170_Vector_10::_method_review_allocation(jule::Int _8336_delta) {
	if (((*this)._field__buffer.len + _8336_delta) > (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>((*this)._method_calc_grow(_8336_delta)));
	}
}



inline jule::Int _1509ba170_Vector_10::_method_len(void) {
	return (*this)._field__buffer.len;
}



inline jule::Int _1509ba170_Vector_10::_method_cap(void) {
	return (*this)._field__buffer.cap;
}



inline void _1509ba170_Vector_10::_method_dealloc(void) {
	(*this)._field__buffer.drop();
}



inline void _1509ba170_Vector_10::_method_set_len(jule::Int _10330_n) {
	if (_10330_n < 0LL) {
		(*this)._field__buffer.len=0LL;
		return;
	}
	if (_10330_n >= (*this)._field__buffer.len) {
		return;
	}
	(*this)._field__buffer.len=_10330_n;
}



inline jule::Ref<_15177b070_TypeAlias> _1509ba170_Vector_10::_method_at(jule::Int _11525_i) {
	if ((_11525_i < 0LL) || (_11525_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].at: out of range", 26));
	}
	return __jule_std_vector_deref<jule::Ref<_15177b070_TypeAlias>>((*this)._field__buffer.heap,_11525_i);
}



inline void _1509ba170_Vector_10::_method_set(jule::Int _12326_i,jule::Ref<_15177b070_TypeAlias> _12338_item) {
	if ((_12326_i < 0LL) || (_12326_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].set: out of range", 27));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_15177b070_TypeAlias>>((*this)._field__buffer.heap,_12326_i,_12338_item);
	}
}



inline void _1509ba170_Vector_10::_method_push(jule::Ref<_15177b070_TypeAlias> _13131_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>(((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_15177b070_TypeAlias>>((*this)._field__buffer.heap,(*this)._field__buffer.len,_13131_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _1509ba170_Vector_10::_method_push_front(jule::Ref<_15177b070_TypeAlias> _14637_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>(((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	jule::Int _15217_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5679613344:;
	if (!(_15217_i >= 0LL)) { goto _iter_end_5679613344; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_15177b070_TypeAlias>>((*this)._field__buffer.heap,_15217_i,static_cast<jule::Int>(_15217_i + 1LL));
		}
	}
	_iter_next_5679613344:;
	(_15217_i)--;
	goto _iter_begin_5679613344;
	_iter_end_5679613344:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_15177b070_TypeAlias>>((*this)._field__buffer.heap,0LL,_14637_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _1509ba170_Vector_10::_method_append(jule::Slice<jule::Ref<_15177b070_TypeAlias>> _16333_items) {
	if (_16333_items.len() == 0LL) {
		return;
	}
	(*this)._method_review_allocation(static_cast<jule::I64>(_16333_items.len()));
	{
		__jule_std_vector_copy_range<jule::Ref<_15177b070_TypeAlias>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_15177b070_TypeAlias>) * (*this)._field__buffer.len))),__jule_get_pointer_of_slice<jule::Ref<_15177b070_TypeAlias>>(_16333_items),static_cast<jule::I64>(_16333_items.len()));
	}
	(*this)._field__buffer.len+=static_cast<jule::I64>(_16333_items.len());
}



inline void _1509ba170_Vector_10::_method_merge(_1509ba170_Vector_10 _18032_vec) {
	if (_18032_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_18032_vec._field__buffer.len);
	{
		__jule_std_vector_copy_range<jule::Ref<_15177b070_TypeAlias>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_15177b070_TypeAlias>) * (*this)._field__buffer.len))),_18032_vec._field__buffer.heap,_18032_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_18032_vec._field__buffer.len;
}



inline void _1509ba170_Vector_10::_method_merge_front(_1509ba170_Vector_10 _19738_vec) {
	if (_19738_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_19738_vec._field__buffer.len);
	jule::Int _20517_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5679648464:;
	if (!(_20517_i >= 0LL)) { goto _iter_end_5679648464; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_15177b070_TypeAlias>>((*this)._field__buffer.heap,_20517_i,static_cast<jule::Int>(_20517_i + _19738_vec._field__buffer.len));
		}
	}
	_iter_next_5679648464:;
	(_20517_i)--;
	goto _iter_begin_5679648464;
	_iter_end_5679648464:;
	{
		__jule_std_vector_copy_range<jule::Ref<_15177b070_TypeAlias>>((*this)._field__buffer.heap,_19738_vec._field__buffer.heap,_19738_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_19738_vec._field__buffer.len;
}



inline void _1509ba170_Vector_10::_method_remove_range(jule::Int _22335_start,jule::Int _22347_n) {
	if (_22347_n < 1LL) {
		return;
	}
	if (_22335_start < -1LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at negative index", 57));
	}
	if (_22335_start >= (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at out of range", 55));
	}
	if ((((*this)._field__buffer.len - _22335_start) - _22347_n) < 0LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing continues at out of range", 58));
	}
	jule::Int _23917_i = _22335_start + _22347_n;
	_iter_begin_5679665504:;
	if (!(_23917_i < (*this)._field__buffer.len)) { goto _iter_end_5679665504; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_15177b070_TypeAlias>>((*this)._field__buffer.heap,_23917_i,static_cast<jule::Int>(_23917_i - _22347_n));
		}
	}
	_iter_next_5679665504:;
	(_23917_i)++;
	goto _iter_begin_5679665504;
	_iter_end_5679665504:;
	(*this)._field__buffer.len-=_22347_n;
}



inline void _1509ba170_Vector_10::_method_insert(jule::Int _24829_i,jule::Ref<_15177b070_TypeAlias> _24841_item) {
	if (_24829_i < 0LL) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at negative index", 52));
	}
	if (_24829_i > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at out of range", 50));
	}
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>(((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	jule::Int _26117_j = (*this)._field__buffer.len - 1LL;
	_iter_begin_5679675888:;
	if (!(_26117_j >= _24829_i)) { goto _iter_end_5679675888; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_15177b070_TypeAlias>>((*this)._field__buffer.heap,_26117_j,static_cast<jule::Int>(_26117_j + 1LL));
		}
	}
	_iter_next_5679675888:;
	(_26117_j)--;
	goto _iter_begin_5679675888;
	_iter_end_5679675888:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_15177b070_TypeAlias>>((*this)._field__buffer.heap,_24829_i,_24841_item);
	}
	((*this)._field__buffer.len)++;
}



inline _1509ba170_Vector_10 _1509ba170_Vector_10::_method_slice(jule::Int _27228_start,jule::Int _27240_end) {
	if (_27228_start < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at negative index", 49));
	}
	if (_27228_start > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at out of range", 47));
	}
	if (_27240_end > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at out of range", 45));
	}
	if (_27240_end < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at negative index", 47));
	}
	if (_27228_start > _27240_end) {
		jule::panic(jule::Str("Vector[T].slice: start point < end point", 40));
	}
	if (_27228_start == _27240_end) {
		return _1509ba170_Vector_10::_static_method_new(0LL);
	}
	_1509ba170_Vector_10 _29317_vec = _1509ba170_Vector_10::_static_method_new(static_cast<jule::Int>(_27240_end - _27228_start));
	{
		__jule_std_vector_copy_range<jule::Ref<_15177b070_TypeAlias>>(_29317_vec._field__buffer.heap,((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_15177b070_TypeAlias>) * _27228_start))),_29317_vec._field__buffer.cap);
	}
	_29317_vec._field__buffer.len=_29317_vec._field__buffer.cap;
	return _29317_vec;
}







std::ostream &operator<<(std::ostream &_Stream, const _1509ba170_Vector_10 &_Src) {
	_Stream << "Vector{";
	_Stream << "_buffer: cpp._field__buffer";
	_Stream << "}";
	return _Stream;
}

inline _1509ba170_Vector_11 _1509ba170_Vector_11::_static_method_new(jule::Int _4319_cap) {
	_1509ba170_Vector_11 _4417_vec = _1509ba170_Vector_11();
	if (_4319_cap != 0LL) {
		_4417_vec._method_resize_alloc(_4319_cap);
	}
	return _4417_vec;
}



inline jule::Int _1509ba170_Vector_11::_method_calc_grow(jule::Int _5324_delta) {
	jule::Int _5413_t = (*this)._field__buffer.len + _5324_delta;
	return static_cast<jule::Int>(_5413_t * 2LL);
}



inline void _1509ba170_Vector_11::_method_resize_alloc(jule::Int _5831_n) {
	void* _5917_new_heap = __jule_std_vector_alloc<jule::Ref<_15081bcd0_Fn>>(_5831_n);
	if (_5917_new_heap == nullptr) {
		jule::panic(jule::Str("Vector[T].resize_alloc: heap reallocation failed", 48));
	}
	if ((*this)._field__buffer.heap == nullptr) {
		(*this)._field__buffer.heap=_5917_new_heap;
		(*this)._field__buffer.cap=_5831_n;
		return;
	}
	{
		if ((*this)._field__buffer.len > 0LL) {
			__jule_std_vector_copy_range<jule::Ref<_15081bcd0_Fn>>(_5917_new_heap,(*this)._field__buffer.heap,(*this)._field__buffer.len);
		}
		__jule_std_vector_dealloc<jule::Ref<_15081bcd0_Fn>>((*this)._field__buffer.heap);
		(*this)._field__buffer.heap=_5917_new_heap;
	}
	(*this)._field__buffer.cap=_5831_n;
}



inline void _1509ba170_Vector_11::_method_review_allocation(jule::Int _8336_delta) {
	if (((*this)._field__buffer.len + _8336_delta) > (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>((*this)._method_calc_grow(_8336_delta)));
	}
}



inline jule::Int _1509ba170_Vector_11::_method_len(void) {
	return (*this)._field__buffer.len;
}



inline jule::Int _1509ba170_Vector_11::_method_cap(void) {
	return (*this)._field__buffer.cap;
}



inline void _1509ba170_Vector_11::_method_dealloc(void) {
	(*this)._field__buffer.drop();
}



inline void _1509ba170_Vector_11::_method_set_len(jule::Int _10330_n) {
	if (_10330_n < 0LL) {
		(*this)._field__buffer.len=0LL;
		return;
	}
	if (_10330_n >= (*this)._field__buffer.len) {
		return;
	}
	(*this)._field__buffer.len=_10330_n;
}



inline jule::Ref<_15081bcd0_Fn> _1509ba170_Vector_11::_method_at(jule::Int _11525_i) {
	if ((_11525_i < 0LL) || (_11525_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].at: out of range", 26));
	}
	return __jule_std_vector_deref<jule::Ref<_15081bcd0_Fn>>((*this)._field__buffer.heap,_11525_i);
}



inline void _1509ba170_Vector_11::_method_set(jule::Int _12326_i,jule::Ref<_15081bcd0_Fn> _12338_item) {
	if ((_12326_i < 0LL) || (_12326_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].set: out of range", 27));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_15081bcd0_Fn>>((*this)._field__buffer.heap,_12326_i,_12338_item);
	}
}



inline void _1509ba170_Vector_11::_method_push(jule::Ref<_15081bcd0_Fn> _13131_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>(((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_15081bcd0_Fn>>((*this)._field__buffer.heap,(*this)._field__buffer.len,_13131_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _1509ba170_Vector_11::_method_push_front(jule::Ref<_15081bcd0_Fn> _14637_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>(((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	jule::Int _15217_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5679842416:;
	if (!(_15217_i >= 0LL)) { goto _iter_end_5679842416; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_15081bcd0_Fn>>((*this)._field__buffer.heap,_15217_i,static_cast<jule::Int>(_15217_i + 1LL));
		}
	}
	_iter_next_5679842416:;
	(_15217_i)--;
	goto _iter_begin_5679842416;
	_iter_end_5679842416:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_15081bcd0_Fn>>((*this)._field__buffer.heap,0LL,_14637_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _1509ba170_Vector_11::_method_append(jule::Slice<jule::Ref<_15081bcd0_Fn>> _16333_items) {
	if (_16333_items.len() == 0LL) {
		return;
	}
	(*this)._method_review_allocation(static_cast<jule::I64>(_16333_items.len()));
	{
		__jule_std_vector_copy_range<jule::Ref<_15081bcd0_Fn>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_15081bcd0_Fn>) * (*this)._field__buffer.len))),__jule_get_pointer_of_slice<jule::Ref<_15081bcd0_Fn>>(_16333_items),static_cast<jule::I64>(_16333_items.len()));
	}
	(*this)._field__buffer.len+=static_cast<jule::I64>(_16333_items.len());
}



inline void _1509ba170_Vector_11::_method_merge(_1509ba170_Vector_11 _18032_vec) {
	if (_18032_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_18032_vec._field__buffer.len);
	{
		__jule_std_vector_copy_range<jule::Ref<_15081bcd0_Fn>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_15081bcd0_Fn>) * (*this)._field__buffer.len))),_18032_vec._field__buffer.heap,_18032_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_18032_vec._field__buffer.len;
}



inline void _1509ba170_Vector_11::_method_merge_front(_1509ba170_Vector_11 _19738_vec) {
	if (_19738_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_19738_vec._field__buffer.len);
	jule::Int _20517_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5679877536:;
	if (!(_20517_i >= 0LL)) { goto _iter_end_5679877536; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_15081bcd0_Fn>>((*this)._field__buffer.heap,_20517_i,static_cast<jule::Int>(_20517_i + _19738_vec._field__buffer.len));
		}
	}
	_iter_next_5679877536:;
	(_20517_i)--;
	goto _iter_begin_5679877536;
	_iter_end_5679877536:;
	{
		__jule_std_vector_copy_range<jule::Ref<_15081bcd0_Fn>>((*this)._field__buffer.heap,_19738_vec._field__buffer.heap,_19738_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_19738_vec._field__buffer.len;
}



inline void _1509ba170_Vector_11::_method_remove_range(jule::Int _22335_start,jule::Int _22347_n) {
	if (_22347_n < 1LL) {
		return;
	}
	if (_22335_start < -1LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at negative index", 57));
	}
	if (_22335_start >= (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at out of range", 55));
	}
	if ((((*this)._field__buffer.len - _22335_start) - _22347_n) < 0LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing continues at out of range", 58));
	}
	jule::Int _23917_i = _22335_start + _22347_n;
	_iter_begin_5679894576:;
	if (!(_23917_i < (*this)._field__buffer.len)) { goto _iter_end_5679894576; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_15081bcd0_Fn>>((*this)._field__buffer.heap,_23917_i,static_cast<jule::Int>(_23917_i - _22347_n));
		}
	}
	_iter_next_5679894576:;
	(_23917_i)++;
	goto _iter_begin_5679894576;
	_iter_end_5679894576:;
	(*this)._field__buffer.len-=_22347_n;
}



inline void _1509ba170_Vector_11::_method_insert(jule::Int _24829_i,jule::Ref<_15081bcd0_Fn> _24841_item) {
	if (_24829_i < 0LL) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at negative index", 52));
	}
	if (_24829_i > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at out of range", 50));
	}
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>(((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	jule::Int _26117_j = (*this)._field__buffer.len - 1LL;
	_iter_begin_5679904960:;
	if (!(_26117_j >= _24829_i)) { goto _iter_end_5679904960; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_15081bcd0_Fn>>((*this)._field__buffer.heap,_26117_j,static_cast<jule::Int>(_26117_j + 1LL));
		}
	}
	_iter_next_5679904960:;
	(_26117_j)--;
	goto _iter_begin_5679904960;
	_iter_end_5679904960:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_15081bcd0_Fn>>((*this)._field__buffer.heap,_24829_i,_24841_item);
	}
	((*this)._field__buffer.len)++;
}



inline _1509ba170_Vector_11 _1509ba170_Vector_11::_method_slice(jule::Int _27228_start,jule::Int _27240_end) {
	if (_27228_start < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at negative index", 49));
	}
	if (_27228_start > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at out of range", 47));
	}
	if (_27240_end > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at out of range", 45));
	}
	if (_27240_end < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at negative index", 47));
	}
	if (_27228_start > _27240_end) {
		jule::panic(jule::Str("Vector[T].slice: start point < end point", 40));
	}
	if (_27228_start == _27240_end) {
		return _1509ba170_Vector_11::_static_method_new(0LL);
	}
	_1509ba170_Vector_11 _29317_vec = _1509ba170_Vector_11::_static_method_new(static_cast<jule::Int>(_27240_end - _27228_start));
	{
		__jule_std_vector_copy_range<jule::Ref<_15081bcd0_Fn>>(_29317_vec._field__buffer.heap,((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_15081bcd0_Fn>) * _27228_start))),_29317_vec._field__buffer.cap);
	}
	_29317_vec._field__buffer.len=_29317_vec._field__buffer.cap;
	return _29317_vec;
}







std::ostream &operator<<(std::ostream &_Stream, const _1509ba170_Vector_11 &_Src) {
	_Stream << "Vector{";
	_Stream << "_buffer: cpp._field__buffer";
	_Stream << "}";
	return _Stream;
}

inline _1509ba170_Vector_12 _1509ba170_Vector_12::_static_method_new(jule::Int _4319_cap) {
	_1509ba170_Vector_12 _4417_vec = _1509ba170_Vector_12();
	if (_4319_cap != 0LL) {
		_4417_vec._method_resize_alloc(_4319_cap);
	}
	return _4417_vec;
}



inline jule::Int _1509ba170_Vector_12::_method_calc_grow(jule::Int _5324_delta) {
	jule::Int _5413_t = (*this)._field__buffer.len + _5324_delta;
	return static_cast<jule::Int>(_5413_t * 2LL);
}



inline void _1509ba170_Vector_12::_method_resize_alloc(jule::Int _5831_n) {
	void* _5917_new_heap = __jule_std_vector_alloc<jule::Ref<_150a13110_Struct>>(_5831_n);
	if (_5917_new_heap == nullptr) {
		jule::panic(jule::Str("Vector[T].resize_alloc: heap reallocation failed", 48));
	}
	if ((*this)._field__buffer.heap == nullptr) {
		(*this)._field__buffer.heap=_5917_new_heap;
		(*this)._field__buffer.cap=_5831_n;
		return;
	}
	{
		if ((*this)._field__buffer.len > 0LL) {
			__jule_std_vector_copy_range<jule::Ref<_150a13110_Struct>>(_5917_new_heap,(*this)._field__buffer.heap,(*this)._field__buffer.len);
		}
		__jule_std_vector_dealloc<jule::Ref<_150a13110_Struct>>((*this)._field__buffer.heap);
		(*this)._field__buffer.heap=_5917_new_heap;
	}
	(*this)._field__buffer.cap=_5831_n;
}



inline void _1509ba170_Vector_12::_method_review_allocation(jule::Int _8336_delta) {
	if (((*this)._field__buffer.len + _8336_delta) > (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>((*this)._method_calc_grow(_8336_delta)));
	}
}



inline jule::Int _1509ba170_Vector_12::_method_len(void) {
	return (*this)._field__buffer.len;
}



inline jule::Int _1509ba170_Vector_12::_method_cap(void) {
	return (*this)._field__buffer.cap;
}



inline void _1509ba170_Vector_12::_method_dealloc(void) {
	(*this)._field__buffer.drop();
}



inline void _1509ba170_Vector_12::_method_set_len(jule::Int _10330_n) {
	if (_10330_n < 0LL) {
		(*this)._field__buffer.len=0LL;
		return;
	}
	if (_10330_n >= (*this)._field__buffer.len) {
		return;
	}
	(*this)._field__buffer.len=_10330_n;
}



inline jule::Ref<_150a13110_Struct> _1509ba170_Vector_12::_method_at(jule::Int _11525_i) {
	if ((_11525_i < 0LL) || (_11525_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].at: out of range", 26));
	}
	return __jule_std_vector_deref<jule::Ref<_150a13110_Struct>>((*this)._field__buffer.heap,_11525_i);
}



inline void _1509ba170_Vector_12::_method_set(jule::Int _12326_i,jule::Ref<_150a13110_Struct> _12338_item) {
	if ((_12326_i < 0LL) || (_12326_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].set: out of range", 27));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_150a13110_Struct>>((*this)._field__buffer.heap,_12326_i,_12338_item);
	}
}



inline void _1509ba170_Vector_12::_method_push(jule::Ref<_150a13110_Struct> _13131_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>(((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_150a13110_Struct>>((*this)._field__buffer.heap,(*this)._field__buffer.len,_13131_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _1509ba170_Vector_12::_method_push_front(jule::Ref<_150a13110_Struct> _14637_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>(((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	jule::Int _15217_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5680017680:;
	if (!(_15217_i >= 0LL)) { goto _iter_end_5680017680; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_150a13110_Struct>>((*this)._field__buffer.heap,_15217_i,static_cast<jule::Int>(_15217_i + 1LL));
		}
	}
	_iter_next_5680017680:;
	(_15217_i)--;
	goto _iter_begin_5680017680;
	_iter_end_5680017680:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_150a13110_Struct>>((*this)._field__buffer.heap,0LL,_14637_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _1509ba170_Vector_12::_method_append(jule::Slice<jule::Ref<_150a13110_Struct>> _16333_items) {
	if (_16333_items.len() == 0LL) {
		return;
	}
	(*this)._method_review_allocation(static_cast<jule::I64>(_16333_items.len()));
	{
		__jule_std_vector_copy_range<jule::Ref<_150a13110_Struct>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_150a13110_Struct>) * (*this)._field__buffer.len))),__jule_get_pointer_of_slice<jule::Ref<_150a13110_Struct>>(_16333_items),static_cast<jule::I64>(_16333_items.len()));
	}
	(*this)._field__buffer.len+=static_cast<jule::I64>(_16333_items.len());
}



inline void _1509ba170_Vector_12::_method_merge(_1509ba170_Vector_12 _18032_vec) {
	if (_18032_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_18032_vec._field__buffer.len);
	{
		__jule_std_vector_copy_range<jule::Ref<_150a13110_Struct>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_150a13110_Struct>) * (*this)._field__buffer.len))),_18032_vec._field__buffer.heap,_18032_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_18032_vec._field__buffer.len;
}



inline void _1509ba170_Vector_12::_method_merge_front(_1509ba170_Vector_12 _19738_vec) {
	if (_19738_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_19738_vec._field__buffer.len);
	jule::Int _20517_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5680052800:;
	if (!(_20517_i >= 0LL)) { goto _iter_end_5680052800; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_150a13110_Struct>>((*this)._field__buffer.heap,_20517_i,static_cast<jule::Int>(_20517_i + _19738_vec._field__buffer.len));
		}
	}
	_iter_next_5680052800:;
	(_20517_i)--;
	goto _iter_begin_5680052800;
	_iter_end_5680052800:;
	{
		__jule_std_vector_copy_range<jule::Ref<_150a13110_Struct>>((*this)._field__buffer.heap,_19738_vec._field__buffer.heap,_19738_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_19738_vec._field__buffer.len;
}



inline void _1509ba170_Vector_12::_method_remove_range(jule::Int _22335_start,jule::Int _22347_n) {
	if (_22347_n < 1LL) {
		return;
	}
	if (_22335_start < -1LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at negative index", 57));
	}
	if (_22335_start >= (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at out of range", 55));
	}
	if ((((*this)._field__buffer.len - _22335_start) - _22347_n) < 0LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing continues at out of range", 58));
	}
	jule::Int _23917_i = _22335_start + _22347_n;
	_iter_begin_5680069840:;
	if (!(_23917_i < (*this)._field__buffer.len)) { goto _iter_end_5680069840; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_150a13110_Struct>>((*this)._field__buffer.heap,_23917_i,static_cast<jule::Int>(_23917_i - _22347_n));
		}
	}
	_iter_next_5680069840:;
	(_23917_i)++;
	goto _iter_begin_5680069840;
	_iter_end_5680069840:;
	(*this)._field__buffer.len-=_22347_n;
}



inline void _1509ba170_Vector_12::_method_insert(jule::Int _24829_i,jule::Ref<_150a13110_Struct> _24841_item) {
	if (_24829_i < 0LL) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at negative index", 52));
	}
	if (_24829_i > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at out of range", 50));
	}
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>(((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	jule::Int _26117_j = (*this)._field__buffer.len - 1LL;
	_iter_begin_5680080224:;
	if (!(_26117_j >= _24829_i)) { goto _iter_end_5680080224; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_150a13110_Struct>>((*this)._field__buffer.heap,_26117_j,static_cast<jule::Int>(_26117_j + 1LL));
		}
	}
	_iter_next_5680080224:;
	(_26117_j)--;
	goto _iter_begin_5680080224;
	_iter_end_5680080224:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_150a13110_Struct>>((*this)._field__buffer.heap,_24829_i,_24841_item);
	}
	((*this)._field__buffer.len)++;
}



inline _1509ba170_Vector_12 _1509ba170_Vector_12::_method_slice(jule::Int _27228_start,jule::Int _27240_end) {
	if (_27228_start < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at negative index", 49));
	}
	if (_27228_start > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at out of range", 47));
	}
	if (_27240_end > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at out of range", 45));
	}
	if (_27240_end < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at negative index", 47));
	}
	if (_27228_start > _27240_end) {
		jule::panic(jule::Str("Vector[T].slice: start point < end point", 40));
	}
	if (_27228_start == _27240_end) {
		return _1509ba170_Vector_12::_static_method_new(0LL);
	}
	_1509ba170_Vector_12 _29317_vec = _1509ba170_Vector_12::_static_method_new(static_cast<jule::Int>(_27240_end - _27228_start));
	{
		__jule_std_vector_copy_range<jule::Ref<_150a13110_Struct>>(_29317_vec._field__buffer.heap,((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_150a13110_Struct>) * _27228_start))),_29317_vec._field__buffer.cap);
	}
	_29317_vec._field__buffer.len=_29317_vec._field__buffer.cap;
	return _29317_vec;
}







std::ostream &operator<<(std::ostream &_Stream, const _1509ba170_Vector_12 &_Src) {
	_Stream << "Vector{";
	_Stream << "_buffer: cpp._field__buffer";
	_Stream << "}";
	return _Stream;
}

inline _1509ba170_Vector_13 _1509ba170_Vector_13::_static_method_new(jule::Int _4319_cap) {
	_1509ba170_Vector_13 _4417_vec = _1509ba170_Vector_13();
	if (_4319_cap != 0LL) {
		_4417_vec._method_resize_alloc(_4319_cap);
	}
	return _4417_vec;
}



inline jule::Int _1509ba170_Vector_13::_method_calc_grow(jule::Int _5324_delta) {
	jule::Int _5413_t = (*this)._field__buffer.len + _5324_delta;
	return static_cast<jule::Int>(_5413_t * 2LL);
}



inline void _1509ba170_Vector_13::_method_resize_alloc(jule::Int _5831_n) {
	void* _5917_new_heap = __jule_std_vector_alloc<jule::Ref<_150f166e0_Trait>>(_5831_n);
	if (_5917_new_heap == nullptr) {
		jule::panic(jule::Str("Vector[T].resize_alloc: heap reallocation failed", 48));
	}
	if ((*this)._field__buffer.heap == nullptr) {
		(*this)._field__buffer.heap=_5917_new_heap;
		(*this)._field__buffer.cap=_5831_n;
		return;
	}
	{
		if ((*this)._field__buffer.len > 0LL) {
			__jule_std_vector_copy_range<jule::Ref<_150f166e0_Trait>>(_5917_new_heap,(*this)._field__buffer.heap,(*this)._field__buffer.len);
		}
		__jule_std_vector_dealloc<jule::Ref<_150f166e0_Trait>>((*this)._field__buffer.heap);
		(*this)._field__buffer.heap=_5917_new_heap;
	}
	(*this)._field__buffer.cap=_5831_n;
}



inline void _1509ba170_Vector_13::_method_review_allocation(jule::Int _8336_delta) {
	if (((*this)._field__buffer.len + _8336_delta) > (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>((*this)._method_calc_grow(_8336_delta)));
	}
}



inline jule::Int _1509ba170_Vector_13::_method_len(void) {
	return (*this)._field__buffer.len;
}



inline jule::Int _1509ba170_Vector_13::_method_cap(void) {
	return (*this)._field__buffer.cap;
}



inline void _1509ba170_Vector_13::_method_dealloc(void) {
	(*this)._field__buffer.drop();
}



inline void _1509ba170_Vector_13::_method_set_len(jule::Int _10330_n) {
	if (_10330_n < 0LL) {
		(*this)._field__buffer.len=0LL;
		return;
	}
	if (_10330_n >= (*this)._field__buffer.len) {
		return;
	}
	(*this)._field__buffer.len=_10330_n;
}



inline jule::Ref<_150f166e0_Trait> _1509ba170_Vector_13::_method_at(jule::Int _11525_i) {
	if ((_11525_i < 0LL) || (_11525_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].at: out of range", 26));
	}
	return __jule_std_vector_deref<jule::Ref<_150f166e0_Trait>>((*this)._field__buffer.heap,_11525_i);
}



inline void _1509ba170_Vector_13::_method_set(jule::Int _12326_i,jule::Ref<_150f166e0_Trait> _12338_item) {
	if ((_12326_i < 0LL) || (_12326_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].set: out of range", 27));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_150f166e0_Trait>>((*this)._field__buffer.heap,_12326_i,_12338_item);
	}
}



inline void _1509ba170_Vector_13::_method_push(jule::Ref<_150f166e0_Trait> _13131_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>(((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_150f166e0_Trait>>((*this)._field__buffer.heap,(*this)._field__buffer.len,_13131_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _1509ba170_Vector_13::_method_push_front(jule::Ref<_150f166e0_Trait> _14637_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>(((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	jule::Int _15217_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5680211120:;
	if (!(_15217_i >= 0LL)) { goto _iter_end_5680211120; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_150f166e0_Trait>>((*this)._field__buffer.heap,_15217_i,static_cast<jule::Int>(_15217_i + 1LL));
		}
	}
	_iter_next_5680211120:;
	(_15217_i)--;
	goto _iter_begin_5680211120;
	_iter_end_5680211120:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_150f166e0_Trait>>((*this)._field__buffer.heap,0LL,_14637_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _1509ba170_Vector_13::_method_append(jule::Slice<jule::Ref<_150f166e0_Trait>> _16333_items) {
	if (_16333_items.len() == 0LL) {
		return;
	}
	(*this)._method_review_allocation(static_cast<jule::I64>(_16333_items.len()));
	{
		__jule_std_vector_copy_range<jule::Ref<_150f166e0_Trait>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_150f166e0_Trait>) * (*this)._field__buffer.len))),__jule_get_pointer_of_slice<jule::Ref<_150f166e0_Trait>>(_16333_items),static_cast<jule::I64>(_16333_items.len()));
	}
	(*this)._field__buffer.len+=static_cast<jule::I64>(_16333_items.len());
}



inline void _1509ba170_Vector_13::_method_merge(_1509ba170_Vector_13 _18032_vec) {
	if (_18032_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_18032_vec._field__buffer.len);
	{
		__jule_std_vector_copy_range<jule::Ref<_150f166e0_Trait>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_150f166e0_Trait>) * (*this)._field__buffer.len))),_18032_vec._field__buffer.heap,_18032_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_18032_vec._field__buffer.len;
}



inline void _1509ba170_Vector_13::_method_merge_front(_1509ba170_Vector_13 _19738_vec) {
	if (_19738_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_19738_vec._field__buffer.len);
	jule::Int _20517_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5680246240:;
	if (!(_20517_i >= 0LL)) { goto _iter_end_5680246240; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_150f166e0_Trait>>((*this)._field__buffer.heap,_20517_i,static_cast<jule::Int>(_20517_i + _19738_vec._field__buffer.len));
		}
	}
	_iter_next_5680246240:;
	(_20517_i)--;
	goto _iter_begin_5680246240;
	_iter_end_5680246240:;
	{
		__jule_std_vector_copy_range<jule::Ref<_150f166e0_Trait>>((*this)._field__buffer.heap,_19738_vec._field__buffer.heap,_19738_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_19738_vec._field__buffer.len;
}



inline void _1509ba170_Vector_13::_method_remove_range(jule::Int _22335_start,jule::Int _22347_n) {
	if (_22347_n < 1LL) {
		return;
	}
	if (_22335_start < -1LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at negative index", 57));
	}
	if (_22335_start >= (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at out of range", 55));
	}
	if ((((*this)._field__buffer.len - _22335_start) - _22347_n) < 0LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing continues at out of range", 58));
	}
	jule::Int _23917_i = _22335_start + _22347_n;
	_iter_begin_5680263280:;
	if (!(_23917_i < (*this)._field__buffer.len)) { goto _iter_end_5680263280; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_150f166e0_Trait>>((*this)._field__buffer.heap,_23917_i,static_cast<jule::Int>(_23917_i - _22347_n));
		}
	}
	_iter_next_5680263280:;
	(_23917_i)++;
	goto _iter_begin_5680263280;
	_iter_end_5680263280:;
	(*this)._field__buffer.len-=_22347_n;
}



inline void _1509ba170_Vector_13::_method_insert(jule::Int _24829_i,jule::Ref<_150f166e0_Trait> _24841_item) {
	if (_24829_i < 0LL) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at negative index", 52));
	}
	if (_24829_i > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at out of range", 50));
	}
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>(((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	jule::Int _26117_j = (*this)._field__buffer.len - 1LL;
	_iter_begin_5680273664:;
	if (!(_26117_j >= _24829_i)) { goto _iter_end_5680273664; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_150f166e0_Trait>>((*this)._field__buffer.heap,_26117_j,static_cast<jule::Int>(_26117_j + 1LL));
		}
	}
	_iter_next_5680273664:;
	(_26117_j)--;
	goto _iter_begin_5680273664;
	_iter_end_5680273664:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_150f166e0_Trait>>((*this)._field__buffer.heap,_24829_i,_24841_item);
	}
	((*this)._field__buffer.len)++;
}



inline _1509ba170_Vector_13 _1509ba170_Vector_13::_method_slice(jule::Int _27228_start,jule::Int _27240_end) {
	if (_27228_start < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at negative index", 49));
	}
	if (_27228_start > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at out of range", 47));
	}
	if (_27240_end > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at out of range", 45));
	}
	if (_27240_end < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at negative index", 47));
	}
	if (_27228_start > _27240_end) {
		jule::panic(jule::Str("Vector[T].slice: start point < end point", 40));
	}
	if (_27228_start == _27240_end) {
		return _1509ba170_Vector_13::_static_method_new(0LL);
	}
	_1509ba170_Vector_13 _29317_vec = _1509ba170_Vector_13::_static_method_new(static_cast<jule::Int>(_27240_end - _27228_start));
	{
		__jule_std_vector_copy_range<jule::Ref<_150f166e0_Trait>>(_29317_vec._field__buffer.heap,((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_150f166e0_Trait>) * _27228_start))),_29317_vec._field__buffer.cap);
	}
	_29317_vec._field__buffer.len=_29317_vec._field__buffer.cap;
	return _29317_vec;
}







std::ostream &operator<<(std::ostream &_Stream, const _1509ba170_Vector_13 &_Src) {
	_Stream << "Vector{";
	_Stream << "_buffer: cpp._field__buffer";
	_Stream << "}";
	return _Stream;
}

inline _1509ba170_Vector_14 _1509ba170_Vector_14::_static_method_new(jule::Int _4319_cap) {
	_1509ba170_Vector_14 _4417_vec = _1509ba170_Vector_14();
	if (_4319_cap != 0LL) {
		_4417_vec._method_resize_alloc(_4319_cap);
	}
	return _4417_vec;
}



inline jule::Int _1509ba170_Vector_14::_method_calc_grow(jule::Int _5324_delta) {
	jule::Int _5413_t = (*this)._field__buffer.len + _5324_delta;
	return static_cast<jule::Int>(_5413_t * 2LL);
}



inline void _1509ba170_Vector_14::_method_resize_alloc(jule::Int _5831_n) {
	void* _5917_new_heap = __jule_std_vector_alloc<jule::Ref<_150f1c930_Enum>>(_5831_n);
	if (_5917_new_heap == nullptr) {
		jule::panic(jule::Str("Vector[T].resize_alloc: heap reallocation failed", 48));
	}
	if ((*this)._field__buffer.heap == nullptr) {
		(*this)._field__buffer.heap=_5917_new_heap;
		(*this)._field__buffer.cap=_5831_n;
		return;
	}
	{
		if ((*this)._field__buffer.len > 0LL) {
			__jule_std_vector_copy_range<jule::Ref<_150f1c930_Enum>>(_5917_new_heap,(*this)._field__buffer.heap,(*this)._field__buffer.len);
		}
		__jule_std_vector_dealloc<jule::Ref<_150f1c930_Enum>>((*this)._field__buffer.heap);
		(*this)._field__buffer.heap=_5917_new_heap;
	}
	(*this)._field__buffer.cap=_5831_n;
}



inline void _1509ba170_Vector_14::_method_review_allocation(jule::Int _8336_delta) {
	if (((*this)._field__buffer.len + _8336_delta) > (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>((*this)._method_calc_grow(_8336_delta)));
	}
}



inline jule::Int _1509ba170_Vector_14::_method_len(void) {
	return (*this)._field__buffer.len;
}



inline jule::Int _1509ba170_Vector_14::_method_cap(void) {
	return (*this)._field__buffer.cap;
}



inline void _1509ba170_Vector_14::_method_dealloc(void) {
	(*this)._field__buffer.drop();
}



inline void _1509ba170_Vector_14::_method_set_len(jule::Int _10330_n) {
	if (_10330_n < 0LL) {
		(*this)._field__buffer.len=0LL;
		return;
	}
	if (_10330_n >= (*this)._field__buffer.len) {
		return;
	}
	(*this)._field__buffer.len=_10330_n;
}



inline jule::Ref<_150f1c930_Enum> _1509ba170_Vector_14::_method_at(jule::Int _11525_i) {
	if ((_11525_i < 0LL) || (_11525_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].at: out of range", 26));
	}
	return __jule_std_vector_deref<jule::Ref<_150f1c930_Enum>>((*this)._field__buffer.heap,_11525_i);
}



inline void _1509ba170_Vector_14::_method_set(jule::Int _12326_i,jule::Ref<_150f1c930_Enum> _12338_item) {
	if ((_12326_i < 0LL) || (_12326_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].set: out of range", 27));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_150f1c930_Enum>>((*this)._field__buffer.heap,_12326_i,_12338_item);
	}
}



inline void _1509ba170_Vector_14::_method_push(jule::Ref<_150f1c930_Enum> _13131_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>(((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_150f1c930_Enum>>((*this)._field__buffer.heap,(*this)._field__buffer.len,_13131_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _1509ba170_Vector_14::_method_push_front(jule::Ref<_150f1c930_Enum> _14637_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>(((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	jule::Int _15217_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5680395552:;
	if (!(_15217_i >= 0LL)) { goto _iter_end_5680395552; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_150f1c930_Enum>>((*this)._field__buffer.heap,_15217_i,static_cast<jule::Int>(_15217_i + 1LL));
		}
	}
	_iter_next_5680395552:;
	(_15217_i)--;
	goto _iter_begin_5680395552;
	_iter_end_5680395552:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_150f1c930_Enum>>((*this)._field__buffer.heap,0LL,_14637_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _1509ba170_Vector_14::_method_append(jule::Slice<jule::Ref<_150f1c930_Enum>> _16333_items) {
	if (_16333_items.len() == 0LL) {
		return;
	}
	(*this)._method_review_allocation(static_cast<jule::I64>(_16333_items.len()));
	{
		__jule_std_vector_copy_range<jule::Ref<_150f1c930_Enum>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_150f1c930_Enum>) * (*this)._field__buffer.len))),__jule_get_pointer_of_slice<jule::Ref<_150f1c930_Enum>>(_16333_items),static_cast<jule::I64>(_16333_items.len()));
	}
	(*this)._field__buffer.len+=static_cast<jule::I64>(_16333_items.len());
}



inline void _1509ba170_Vector_14::_method_merge(_1509ba170_Vector_14 _18032_vec) {
	if (_18032_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_18032_vec._field__buffer.len);
	{
		__jule_std_vector_copy_range<jule::Ref<_150f1c930_Enum>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_150f1c930_Enum>) * (*this)._field__buffer.len))),_18032_vec._field__buffer.heap,_18032_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_18032_vec._field__buffer.len;
}



inline void _1509ba170_Vector_14::_method_merge_front(_1509ba170_Vector_14 _19738_vec) {
	if (_19738_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_19738_vec._field__buffer.len);
	jule::Int _20517_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5680431184:;
	if (!(_20517_i >= 0LL)) { goto _iter_end_5680431184; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_150f1c930_Enum>>((*this)._field__buffer.heap,_20517_i,static_cast<jule::Int>(_20517_i + _19738_vec._field__buffer.len));
		}
	}
	_iter_next_5680431184:;
	(_20517_i)--;
	goto _iter_begin_5680431184;
	_iter_end_5680431184:;
	{
		__jule_std_vector_copy_range<jule::Ref<_150f1c930_Enum>>((*this)._field__buffer.heap,_19738_vec._field__buffer.heap,_19738_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_19738_vec._field__buffer.len;
}



inline void _1509ba170_Vector_14::_method_remove_range(jule::Int _22335_start,jule::Int _22347_n) {
	if (_22347_n < 1LL) {
		return;
	}
	if (_22335_start < -1LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at negative index", 57));
	}
	if (_22335_start >= (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at out of range", 55));
	}
	if ((((*this)._field__buffer.len - _22335_start) - _22347_n) < 0LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing continues at out of range", 58));
	}
	jule::Int _23917_i = _22335_start + _22347_n;
	_iter_begin_5680448224:;
	if (!(_23917_i < (*this)._field__buffer.len)) { goto _iter_end_5680448224; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_150f1c930_Enum>>((*this)._field__buffer.heap,_23917_i,static_cast<jule::Int>(_23917_i - _22347_n));
		}
	}
	_iter_next_5680448224:;
	(_23917_i)++;
	goto _iter_begin_5680448224;
	_iter_end_5680448224:;
	(*this)._field__buffer.len-=_22347_n;
}



inline void _1509ba170_Vector_14::_method_insert(jule::Int _24829_i,jule::Ref<_150f1c930_Enum> _24841_item) {
	if (_24829_i < 0LL) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at negative index", 52));
	}
	if (_24829_i > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at out of range", 50));
	}
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>(((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	jule::Int _26117_j = (*this)._field__buffer.len - 1LL;
	_iter_begin_5680458608:;
	if (!(_26117_j >= _24829_i)) { goto _iter_end_5680458608; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_150f1c930_Enum>>((*this)._field__buffer.heap,_26117_j,static_cast<jule::Int>(_26117_j + 1LL));
		}
	}
	_iter_next_5680458608:;
	(_26117_j)--;
	goto _iter_begin_5680458608;
	_iter_end_5680458608:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_150f1c930_Enum>>((*this)._field__buffer.heap,_24829_i,_24841_item);
	}
	((*this)._field__buffer.len)++;
}



inline _1509ba170_Vector_14 _1509ba170_Vector_14::_method_slice(jule::Int _27228_start,jule::Int _27240_end) {
	if (_27228_start < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at negative index", 49));
	}
	if (_27228_start > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at out of range", 47));
	}
	if (_27240_end > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at out of range", 45));
	}
	if (_27240_end < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at negative index", 47));
	}
	if (_27228_start > _27240_end) {
		jule::panic(jule::Str("Vector[T].slice: start point < end point", 40));
	}
	if (_27228_start == _27240_end) {
		return _1509ba170_Vector_14::_static_method_new(0LL);
	}
	_1509ba170_Vector_14 _29317_vec = _1509ba170_Vector_14::_static_method_new(static_cast<jule::Int>(_27240_end - _27228_start));
	{
		__jule_std_vector_copy_range<jule::Ref<_150f1c930_Enum>>(_29317_vec._field__buffer.heap,((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_150f1c930_Enum>) * _27228_start))),_29317_vec._field__buffer.cap);
	}
	_29317_vec._field__buffer.len=_29317_vec._field__buffer.cap;
	return _29317_vec;
}







std::ostream &operator<<(std::ostream &_Stream, const _1509ba170_Vector_14 &_Src) {
	_Stream << "Vector{";
	_Stream << "_buffer: cpp._field__buffer";
	_Stream << "}";
	return _Stream;
}

inline _1509ba170_Vector_15 _1509ba170_Vector_15::_static_method_new(jule::Int _4319_cap) {
	_1509ba170_Vector_15 _4417_vec = _1509ba170_Vector_15();
	if (_4319_cap != 0LL) {
		_4417_vec._method_resize_alloc(_4319_cap);
	}
	return _4417_vec;
}



inline jule::Int _1509ba170_Vector_15::_method_calc_grow(jule::Int _5324_delta) {
	jule::Int _5413_t = (*this)._field__buffer.len + _5324_delta;
	return static_cast<jule::Int>(_5413_t * 2LL);
}



inline void _1509ba170_Vector_15::_method_resize_alloc(jule::Int _5831_n) {
	void* _5917_new_heap = __jule_std_vector_alloc<jule::Ref<_150f235a0_Impl>>(_5831_n);
	if (_5917_new_heap == nullptr) {
		jule::panic(jule::Str("Vector[T].resize_alloc: heap reallocation failed", 48));
	}
	if ((*this)._field__buffer.heap == nullptr) {
		(*this)._field__buffer.heap=_5917_new_heap;
		(*this)._field__buffer.cap=_5831_n;
		return;
	}
	{
		if ((*this)._field__buffer.len > 0LL) {
			__jule_std_vector_copy_range<jule::Ref<_150f235a0_Impl>>(_5917_new_heap,(*this)._field__buffer.heap,(*this)._field__buffer.len);
		}
		__jule_std_vector_dealloc<jule::Ref<_150f235a0_Impl>>((*this)._field__buffer.heap);
		(*this)._field__buffer.heap=_5917_new_heap;
	}
	(*this)._field__buffer.cap=_5831_n;
}



inline void _1509ba170_Vector_15::_method_review_allocation(jule::Int _8336_delta) {
	if (((*this)._field__buffer.len + _8336_delta) > (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>((*this)._method_calc_grow(_8336_delta)));
	}
}



inline jule::Int _1509ba170_Vector_15::_method_len(void) {
	return (*this)._field__buffer.len;
}



inline jule::Int _1509ba170_Vector_15::_method_cap(void) {
	return (*this)._field__buffer.cap;
}



inline void _1509ba170_Vector_15::_method_dealloc(void) {
	(*this)._field__buffer.drop();
}



inline void _1509ba170_Vector_15::_method_set_len(jule::Int _10330_n) {
	if (_10330_n < 0LL) {
		(*this)._field__buffer.len=0LL;
		return;
	}
	if (_10330_n >= (*this)._field__buffer.len) {
		return;
	}
	(*this)._field__buffer.len=_10330_n;
}



inline jule::Ref<_150f235a0_Impl> _1509ba170_Vector_15::_method_at(jule::Int _11525_i) {
	if ((_11525_i < 0LL) || (_11525_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].at: out of range", 26));
	}
	return __jule_std_vector_deref<jule::Ref<_150f235a0_Impl>>((*this)._field__buffer.heap,_11525_i);
}



inline void _1509ba170_Vector_15::_method_set(jule::Int _12326_i,jule::Ref<_150f235a0_Impl> _12338_item) {
	if ((_12326_i < 0LL) || (_12326_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].set: out of range", 27));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_150f235a0_Impl>>((*this)._field__buffer.heap,_12326_i,_12338_item);
	}
}



inline void _1509ba170_Vector_15::_method_push(jule::Ref<_150f235a0_Impl> _13131_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>(((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_150f235a0_Impl>>((*this)._field__buffer.heap,(*this)._field__buffer.len,_13131_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _1509ba170_Vector_15::_method_push_front(jule::Ref<_150f235a0_Impl> _14637_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>(((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	jule::Int _15217_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5680575120:;
	if (!(_15217_i >= 0LL)) { goto _iter_end_5680575120; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_150f235a0_Impl>>((*this)._field__buffer.heap,_15217_i,static_cast<jule::Int>(_15217_i + 1LL));
		}
	}
	_iter_next_5680575120:;
	(_15217_i)--;
	goto _iter_begin_5680575120;
	_iter_end_5680575120:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_150f235a0_Impl>>((*this)._field__buffer.heap,0LL,_14637_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _1509ba170_Vector_15::_method_append(jule::Slice<jule::Ref<_150f235a0_Impl>> _16333_items) {
	if (_16333_items.len() == 0LL) {
		return;
	}
	(*this)._method_review_allocation(static_cast<jule::I64>(_16333_items.len()));
	{
		__jule_std_vector_copy_range<jule::Ref<_150f235a0_Impl>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_150f235a0_Impl>) * (*this)._field__buffer.len))),__jule_get_pointer_of_slice<jule::Ref<_150f235a0_Impl>>(_16333_items),static_cast<jule::I64>(_16333_items.len()));
	}
	(*this)._field__buffer.len+=static_cast<jule::I64>(_16333_items.len());
}



inline void _1509ba170_Vector_15::_method_merge(_1509ba170_Vector_15 _18032_vec) {
	if (_18032_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_18032_vec._field__buffer.len);
	{
		__jule_std_vector_copy_range<jule::Ref<_150f235a0_Impl>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_150f235a0_Impl>) * (*this)._field__buffer.len))),_18032_vec._field__buffer.heap,_18032_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_18032_vec._field__buffer.len;
}



inline void _1509ba170_Vector_15::_method_merge_front(_1509ba170_Vector_15 _19738_vec) {
	if (_19738_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_19738_vec._field__buffer.len);
	jule::Int _20517_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5680610240:;
	if (!(_20517_i >= 0LL)) { goto _iter_end_5680610240; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_150f235a0_Impl>>((*this)._field__buffer.heap,_20517_i,static_cast<jule::Int>(_20517_i + _19738_vec._field__buffer.len));
		}
	}
	_iter_next_5680610240:;
	(_20517_i)--;
	goto _iter_begin_5680610240;
	_iter_end_5680610240:;
	{
		__jule_std_vector_copy_range<jule::Ref<_150f235a0_Impl>>((*this)._field__buffer.heap,_19738_vec._field__buffer.heap,_19738_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_19738_vec._field__buffer.len;
}



inline void _1509ba170_Vector_15::_method_remove_range(jule::Int _22335_start,jule::Int _22347_n) {
	if (_22347_n < 1LL) {
		return;
	}
	if (_22335_start < -1LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at negative index", 57));
	}
	if (_22335_start >= (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at out of range", 55));
	}
	if ((((*this)._field__buffer.len - _22335_start) - _22347_n) < 0LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing continues at out of range", 58));
	}
	jule::Int _23917_i = _22335_start + _22347_n;
	_iter_begin_5680627280:;
	if (!(_23917_i < (*this)._field__buffer.len)) { goto _iter_end_5680627280; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_150f235a0_Impl>>((*this)._field__buffer.heap,_23917_i,static_cast<jule::Int>(_23917_i - _22347_n));
		}
	}
	_iter_next_5680627280:;
	(_23917_i)++;
	goto _iter_begin_5680627280;
	_iter_end_5680627280:;
	(*this)._field__buffer.len-=_22347_n;
}



inline void _1509ba170_Vector_15::_method_insert(jule::Int _24829_i,jule::Ref<_150f235a0_Impl> _24841_item) {
	if (_24829_i < 0LL) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at negative index", 52));
	}
	if (_24829_i > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at out of range", 50));
	}
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>(((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	jule::Int _26117_j = (*this)._field__buffer.len - 1LL;
	_iter_begin_5680637664:;
	if (!(_26117_j >= _24829_i)) { goto _iter_end_5680637664; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_150f235a0_Impl>>((*this)._field__buffer.heap,_26117_j,static_cast<jule::Int>(_26117_j + 1LL));
		}
	}
	_iter_next_5680637664:;
	(_26117_j)--;
	goto _iter_begin_5680637664;
	_iter_end_5680637664:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_150f235a0_Impl>>((*this)._field__buffer.heap,_24829_i,_24841_item);
	}
	((*this)._field__buffer.len)++;
}



inline _1509ba170_Vector_15 _1509ba170_Vector_15::_method_slice(jule::Int _27228_start,jule::Int _27240_end) {
	if (_27228_start < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at negative index", 49));
	}
	if (_27228_start > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at out of range", 47));
	}
	if (_27240_end > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at out of range", 45));
	}
	if (_27240_end < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at negative index", 47));
	}
	if (_27228_start > _27240_end) {
		jule::panic(jule::Str("Vector[T].slice: start point < end point", 40));
	}
	if (_27228_start == _27240_end) {
		return _1509ba170_Vector_15::_static_method_new(0LL);
	}
	_1509ba170_Vector_15 _29317_vec = _1509ba170_Vector_15::_static_method_new(static_cast<jule::Int>(_27240_end - _27228_start));
	{
		__jule_std_vector_copy_range<jule::Ref<_150f235a0_Impl>>(_29317_vec._field__buffer.heap,((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_150f235a0_Impl>) * _27228_start))),_29317_vec._field__buffer.cap);
	}
	_29317_vec._field__buffer.len=_29317_vec._field__buffer.cap;
	return _29317_vec;
}







std::ostream &operator<<(std::ostream &_Stream, const _1509ba170_Vector_15 &_Src) {
	_Stream << "Vector{";
	_Stream << "_buffer: cpp._field__buffer";
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1506fba60_File::_method_is_ok(void) {
	jule::Int _2017_err;
	std::tie(std::ignore,_2017_err) = _15053fb30_stat((*this)._field__path);
	return _2017_err == 0LLU;
}



inline void _1506fba60_File::_method_fill(jule::Slice<jule::U8> _2531_data) {
	(*this)._field_data=_2531_data;
}



inline jule::Str _1506fba60_File::_method_path(void) {
	return (*this)._field__path;
}



inline jule::Str _1506fba60_File::_method_dir(void) {
	return _147e135c0_dir((*this)._field__path);
}



inline jule::Str _1506fba60_File::_method_name(void) {
	return _147e135c0_base((*this)._field__path);
}



inline jule::Uintptr _1506fba60_File::_method_addr(void) {
	return ((jule::Uintptr)((&((*this)))));
}



inline _1509ba170_Vector_0 _1506fba60_File::_method_tokens(void) {
	return (*this)._field__tokens;
}



inline jule::Str _1506fba60_File::_method_get_row(jule::Int _4526_row) {
	jule::Int _4617_n = 0LL;
	jule::Int _4717_line_start = 0LL;
	jule::Int _4817_i = 0LL;
	_iter_begin_5673780928:;
	if (!(_4817_i < (*this)._field_data.len())) { goto _iter_end_5673780928; }
	{
		if ((*this)._field_data[static_cast<jule::Int>(_4817_i)] != '\n') {
			goto _iter_next_5673780928;
		}
		(_4617_n)++;
		if (_4617_n == _4526_row) {
			return static_cast<jule::Str>((*this)._field_data.slice(static_cast<jule::Int>(_4717_line_start),static_cast<jule::Int>(_4817_i)));
		}
		_4717_line_start=static_cast<jule::Int>(_4817_i + 1LL);
	}
	_iter_next_5673780928:;
	(_4817_i)++;
	goto _iter_begin_5673780928;
	_iter_end_5673780928:;
	return jule::Str("", 0);
}







std::ostream &operator<<(std::ostream &_Stream, const _1506fba60_File &_Src) {
	_Stream << "File{";
	_Stream << "data:" << _Src._field_data << ", ";
	_Stream << "_path:" << _Src._field__path << ", ";
	_Stream << "_tokens:" << _Src._field__tokens;
	_Stream << "}";
	return _Stream;
}



inline void _150567d60_Lex::_method_push_err(jule::Str _40327_fmt,jule::Slice<jule::Any> _40340_args) {
	(*this)._field_errors=jule::append((*this)._field_errors,jule::Slice<_157e34dc0_Log>({_150567d60_make_err((*this)._field_row,(*this)._field_column,(*this)._field_file,_40327_fmt,_40340_args)}));
}



inline void _150567d60_Lex::_method_push_err_tok(_150640f50_Token _40831_token,jule::Str _40845_fmt) {
	(*this)._field_errors=jule::append((*this)._field_errors,jule::Slice<_157e34dc0_Log>({_150567d60_make_err(_40831_token._field_row,_40831_token._field_column,(*this)._field_file,_40845_fmt,jule::Slice<jule::Any>({}))}));
}



inline void _150567d60_Lex::_method_lex(void) {
	(*this)._field_errors=nullptr;
	(*this)._method_new_line();
	_iter_begin_5673799504:;
	if (!((*this)._field_pos < (*this)._field_file->_field_data.len())) { goto _iter_end_5673799504; }
	{
		_150640f50_Token _41821_token = (*this)._method_token();
		if (_41821_token._field_id != 0LLU) {
			(*this)._field_tokens._method_push(_41821_token);
		}
	}
	_iter_next_5673799504:;
	goto _iter_begin_5673799504;
	_iter_end_5673799504:;
}



inline jule::Str _150567d60_Lex::_method_id(jule::Slice<jule::U8> _42721_ln) {
	if (_42721_ln.len() == 0LL) {
		return jule::Str("", 0);
	}
	if ((_42721_ln[0LL] != '_') && (!(_150640f50_is_letter(static_cast<jule::I32>(_42721_ln[0LL]))))) {
		return jule::Str("", 0);
	}
	{
		auto __julec_range_expr = _42721_ln;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _150567d60_i = 0;
			jule::U8 _150567d60_r = *__julec_range_begin;
			_iter_begin_5673815024:;
			{
				if (((_150567d60_r != '_') && (!(_150640f50_is_decimal(static_cast<jule::U8>(_150567d60_r))))) && (!(_150640f50_is_letter(_150567d60_r)))) {
					return static_cast<jule::Str>(_42721_ln.slice(0LL,static_cast<jule::Int>(_150567d60_i)));
				}
				((*this)._field_pos)++;
			}
			_iter_next_5673815024:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_150567d60_i; _150567d60_r = *__julec_range_begin; goto _iter_begin_5673815024; }
			_iter_end_5673815024:;
		}
	}
	return static_cast<jule::Str>(_42721_ln);
}



inline jule::Slice<jule::U8> _150567d60_Lex::_method_resume(void) {
	jule::Int _44817_i = (*this)._field_pos;
	_iter_begin_5673821760:;
	if (!(_44817_i < (*this)._field_file->_field_data.len())) { goto _iter_end_5673821760; }
	{
		jule::I32 _45017_r = static_cast<jule::I32>((*this)._field_file->_field_data[static_cast<jule::Int>(_44817_i)]);
		if (_150640f50_is_space(_45017_r)) {
			((*this)._field_pos)++;
			{
				auto _match_expr{ _45017_r };
				if (!(('\n') == _match_expr)) { goto _case_end_5673828240; }
				_case_begin_5673828240:;
				{
					(*this)._method_new_line();
				}
				goto _match_end_5673826672;
				_case_end_5673828240:;
				if (!(('\t') == _match_expr)) { goto _case_end_5673828528; }
				_case_begin_5673828528:;
				{
					(*this)._field_column+=8LL;
				}
				goto _match_end_5673826672;
				_case_end_5673828528:;
				_case_begin_5673826992:;
				{
					((*this)._field_column)++;
				}
				goto _match_end_5673826672;
				_case_end_5673826992:;
				_match_end_5673826672:;
			}
			goto _iter_next_5673821760;
		}
		jule::Int _46121_j = _44817_i;
		_iter_begin_5673829792:;
		if (!(_46121_j < (*this)._field_file->_field_data.len())) { goto _iter_end_5673829792; }
		{
			if ((*this)._field_file->_field_data[static_cast<jule::Int>(_46121_j)] == '\n') {
				goto _iter_end_5673829792;
			}
		}
		_iter_next_5673829792:;
		(_46121_j)++;
		goto _iter_begin_5673829792;
		_iter_end_5673829792:;
		return (*this)._field_file->_field_data.slice(static_cast<jule::Int>(_44817_i),static_cast<jule::Int>(_46121_j));
	}
	_iter_next_5673821760:;
	(_44817_i)++;
	goto _iter_begin_5673821760;
	_iter_end_5673821760:;
	return nullptr;
}



inline void _150567d60_Lex::_method_lex_line_comment(_150640f50_Token& _47340_token) {
	jule::Int _47413_start = (*this)._field_pos;
	(*this)._field_pos+=2LL;
	_iter_begin_5673840464:;
	if (!((*this)._field_pos < (*this)._field_file->_field_data.len())) { goto _iter_end_5673840464; }
	{
		jule::U8 _47817_r = (*this)._field_file->_field_data[static_cast<jule::Int>((*this)._field_pos)];
		if ((_47817_r == '\n') || (_47817_r == '\r')) {
			if ((*this)._method_is_first_token_of_line()) {
				_47340_token._field_id=18LLU;
				_47340_token._field_kind=static_cast<jule::Str>((*this)._field_file->_field_data.slice(static_cast<jule::Int>(_47413_start),static_cast<jule::Int>((*this)._field_pos)));
			}
			return;
		}
	}
	_iter_next_5673840464:;
	((*this)._field_pos)++;
	goto _iter_begin_5673840464;
	_iter_end_5673840464:;
	if ((*this)._method_is_first_token_of_line()) {
		_47340_token._field_id=18LLU;
		_47340_token._field_kind=static_cast<jule::Str>((*this)._field_file->_field_data.slice(static_cast<jule::Int>(_47413_start)));
	}
}



inline void _150567d60_Lex::_method_lex_range_comment(void) {
	(*this)._field_pos+=2LL;
	_iter_begin_5673870112:;
	if (!((*this)._field_pos < (*this)._field_file->_field_data.len())) { goto _iter_end_5673870112; }
	{
		jule::U8 _49717_r = (*this)._field_file->_field_data[static_cast<jule::Int>((*this)._field_pos)];
		if (_49717_r == '\r') {
			goto _iter_next_5673870112;
		}
		if (_49717_r == '\n') {
			(*this)._method_new_line();
			goto _iter_next_5673870112;
		}
		(*this)._field_column+=1LL;
		if (((((*this)._field_pos + 1LL) < (*this)._field_file->_field_data.len()) && (_49717_r == '*')) && ((*this)._field_file->_field_data[static_cast<jule::Int>((*this)._field_pos + 1LL)] == '/')) {
			(*this)._field_column+=2LL;
			(*this)._field_pos+=2LL;
			return;
		}
	}
	_iter_next_5673870112:;
	((*this)._field_pos)++;
	goto _iter_begin_5673870112;
	_iter_end_5673870112:;
	(*this)._method_push_err(jule::Str("missing block comment close", 27),jule::Slice<jule::Any>({}));
}



inline jule::Str _150567d60_Lex::_method_num(jule::Slice<jule::U8> _51822_txt) {
	jule::Str _51837_lit = jule::Str();
	_51837_lit=_150567d60_hex_num(_51822_txt);
	if (_51837_lit != jule::Str("", 0)) {
		goto _julec_label_end;
	}
	_51837_lit=_150567d60_octal_num(_51822_txt);
	if (_51837_lit != jule::Str("", 0)) {
		goto _julec_label_end;
	}
	_51837_lit=_150567d60_binary_num(_51822_txt);
	if (_51837_lit != jule::Str("", 0)) {
		goto _julec_label_end;
	}
	_51837_lit=_150567d60_common_num(_51822_txt);
	_julec_label_end:;
	(*this)._field_pos+=static_cast<jule::I64>(_51837_lit.len());
	return _51837_lit;
}



inline jule::Str _150567d60_Lex::_method_escape_seq(jule::Slice<jule::U8> _53729_txt) {
	jule::Str _53817_seq = jule::Str("", 0);
	if (_53729_txt.len() < 2LL) {
		goto _julec_label_end;
	}
	{
		auto _match_expr{ _53729_txt[1LL] };
		if (!(('\\') == _match_expr || ('\'') == _match_expr || ('\"') == _match_expr || ('a') == _match_expr || ('b') == _match_expr || ('f') == _match_expr || ('n') == _match_expr || ('r') == _match_expr || ('t') == _match_expr || ('v') == _match_expr)) { goto _case_end_5673902976; }
		_case_begin_5673902976:;
		{
			(*this)._field_pos+=2LL;
			return static_cast<jule::Str>(_53729_txt.slice(0LL,2LL));
		}
		goto _match_end_5673900016;
		_case_end_5673902976:;
		if (!(('U') == _match_expr)) { goto _case_end_5673903088; }
		_case_begin_5673903088:;
		{
			_53817_seq=_150567d60_big_unicode_point_escape(_53729_txt);
		}
		goto _match_end_5673900016;
		_case_end_5673903088:;
		if (!(('u') == _match_expr)) { goto _case_end_5673903200; }
		_case_begin_5673903200:;
		{
			_53817_seq=_150567d60_little_unicode_point_escape(_53729_txt);
		}
		goto _match_end_5673900016;
		_case_end_5673903200:;
		if (!(('x') == _match_expr)) { goto _case_end_5673901744; }
		_case_begin_5673901744:;
		{
			_53817_seq=_150567d60_hex_byte_escape(_53729_txt);
		}
		goto _match_end_5673900016;
		_case_end_5673901744:;
		_case_begin_5673900896:;
		{
			_53817_seq=_150567d60_byte_escape(_53729_txt);
		}
		goto _match_end_5673900016;
		_case_end_5673900896:;
		_match_end_5673900016:;
	}
	_julec_label_end:;
	if (_53817_seq == jule::Str("", 0)) {
		((*this)._field_pos)++;
		(*this)._method_push_err(jule::Str("invalid escape sequence", 23),jule::Slice<jule::Any>({}));
		return jule::Str("", 0);
	}
	(*this)._field_pos+=static_cast<jule::I64>(_53817_seq.len());
	return _53817_seq;
}



inline jule::Str _150567d60_Lex::_method_get_rune(jule::Slice<jule::U8> _57127_txt,jule::Bool _57140_raw) {
	if ((!(_57140_raw)) && (_57127_txt[0LL] == '\\')) {
		return (*this)._method_escape_seq(_57127_txt);
	}
	jule::I32 _57614_r;
	jule::Int _57617_n;
	std::tie(_57614_r,_57617_n) = _15081f100_decode_rune(_57127_txt);
	(*this)._field_pos+=_57617_n;
	return static_cast<jule::Str>(_57614_r);
}



inline jule::Str _150567d60_Lex::_method_lex_rune(jule::Slice<jule::U8> _58127_txt) {
	jule::Str _58217_run = jule::Str("'", 1);
	((*this)._field_column)++;
	jule::Int _58417_n = 0LL;
	jule::Int _58517_i = 1LL;
	_iter_begin_5673923040:;
	if (!(_58517_i < _58127_txt.len())) { goto _iter_end_5673923040; }
	{
		if (_58127_txt[static_cast<jule::Int>(_58517_i)] == '\r') {
			goto _iter_next_5673923040;
		}
		if (_58127_txt[static_cast<jule::Int>(_58517_i)] == '\n') {
			(*this)._method_push_err(jule::Str("rune is not finished", 20),jule::Slice<jule::Any>({}));
			((*this)._field_pos)++;
			(*this)._method_new_line();
			return jule::Str("", 0);
		}
		jule::Str _59717_r = (*this)._method_get_rune(_58127_txt.slice(static_cast<jule::Int>(_58517_i)),false);
		_58217_run+=_59717_r;
		jule::I64 _59917_length = _59717_r.len();
		(*this)._field_column+=_59917_length;
		if (_59717_r == jule::Str("'", 1)) {
			((*this)._field_pos)++;
			goto _iter_end_5673923040;
		}
		if (_59917_length > 1LL) {
			_58517_i+=static_cast<jule::I64>(_59917_length - 1LL);
		}
		(_58417_n)++;
	}
	_iter_next_5673923040:;
	(_58517_i)++;
	goto _iter_begin_5673923040;
	_iter_end_5673923040:;
	if (_58417_n == 0LL) {
		(*this)._method_push_err(jule::Str("rune is cannot empty", 20),jule::Slice<jule::Any>({}));
	} else if (_58417_n > 1LL) {
		(*this)._method_push_err(jule::Str("rune is should be single", 24),jule::Slice<jule::Any>({}));
	}
	return _58217_run;
}



inline jule::Str _150567d60_Lex::_method_lex_str(void) {
	jule::Str _62117_s = jule::Str("", 0);
	jule::U8 _62213_mark = (*this)._field_file->_field_data[static_cast<jule::Int>((*this)._field_pos)];
	((*this)._field_pos)++;
	jule::Bool _62413_raw = _62213_mark == '`';
	_62117_s+=static_cast<jule::Str>(_62213_mark);
	((*this)._field_column)++;
	_iter_begin_5673945744:;
	if (!((*this)._field_pos < (*this)._field_file->_field_data.len())) { goto _iter_end_5673945744; }
	{
		jule::U8 _62917_ch = (*this)._field_file->_field_data[static_cast<jule::Int>((*this)._field_pos)];
		if (_62917_ch == '\r') {
			goto _iter_next_5673945744;
		}
		if (_62917_ch == '\n') {
			(*this)._method_new_line();
			if ((!(_62413_raw))) {
				(*this)._method_push_err(jule::Str("string is not finished", 22),jule::Slice<jule::Any>({}));
				((*this)._field_pos)++;
				return jule::Str("", 0);
			}
		}
		jule::Str _64117_r = (*this)._method_get_rune((*this)._field_file->_field_data.slice(static_cast<jule::Int>((*this)._field_pos)),_62413_raw);
		_62117_s+=_64117_r;
		(*this)._field_column+=static_cast<jule::I64>(_64117_r.len());
		if (_62917_ch == _62213_mark) {
			goto _iter_end_5673945744;
		}
	}
	_iter_next_5673945744:;
	goto _iter_begin_5673945744;
	_iter_end_5673945744:;
	return _62117_s;
}



inline jule::Bool _150567d60_Lex::_method_is_first_token_of_line(void) {
	return (*this)._field_column == 1LL;
}



inline void _150567d60_Lex::_method_new_line(void) {
	((*this)._field_row)++;
	(*this)._field_column=1LL;
}



inline jule::Bool _150567d60_Lex::_method_is_op(jule::Slice<jule::U8> _66124_txt,jule::Str _66137_kind,jule::Uint _66148_id,_150640f50_Token& _66166_t) {
	if ((!(_150567d60_bytes_has_prefix(_66124_txt,_66137_kind)))) {
		return false;
	}
	_66166_t._field_kind=_66137_kind;
	_66166_t._field_id=_66148_id;
	(*this)._field_pos+=static_cast<jule::I64>(_66137_kind.len());
	return true;
}



inline jule::Bool _150567d60_Lex::_method_lex_basic_ops(jule::Slice<jule::U8> _67232_txt,_150640f50_Token& _67250_tok) {
	{
		auto __julec_range_expr = _150567d60_BASIC_OPS;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			_150567d60_KindPair _150567d60_pair = *__julec_range_begin;
			_iter_begin_5673975584:;
			{
				if ((*this)._method_is_op(_67232_txt,_150567d60_pair._field_kind,_150567d60_pair._field_id,_67250_tok)) {
					return true;
				}
			}
			_iter_next_5673975584:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _150567d60_pair = *__julec_range_begin; goto _iter_begin_5673975584; }
			_iter_end_5673975584:;
		}
	}
	return false;
}



inline jule::Bool _150567d60_Lex::_method_lex_id(jule::Slice<jule::U8> _68225_txt,_150640f50_Token& _68243_t) {
	jule::Str _68313_lex = (*this)._method_id(_68225_txt);
	if (_68313_lex == jule::Str("", 0)) {
		return false;
	}
	_68243_t._field_kind=_68313_lex;
	_68243_t._field_id=2LLU;
	return true;
}



inline jule::Bool _150567d60_Lex::_method_lex_num(jule::Slice<jule::U8> _69326_txt,_150640f50_Token& _69344_t) {
	jule::Str _69413_lex = (*this)._method_num(_69326_txt);
	if (_69413_lex == jule::Str("", 0)) {
		return false;
	}
	_69344_t._field_kind=_69413_lex;
	_69344_t._field_id=6LLU;
	return true;
}



inline _150640f50_Token _150567d60_Lex::_method_token(void) {
	_150640f50_Token _70617_t = _150640f50_Token((*this)._field_file,jule::Int(),jule::Int(),jule::Str(),0LLU);
	jule::Slice<jule::U8> _70813_txt = (*this)._method_resume();
	if (_70813_txt == nullptr) {
		return _70617_t;
	}
	_70617_t._field_column=(*this)._field_column;
	_70617_t._field_row=(*this)._field_row;
	{
		if (!(((*this)._method_lex_num(_70813_txt,_70617_t)))) { goto _case_end_5674002080; }
		goto _match_end_5673996304;
		_case_end_5674002080:;
		if (!((_70813_txt[0LL] == '\''))) { goto _case_end_5673997648; }
		_case_begin_5673997648:;
		{
			_70617_t._field_kind=(*this)._method_lex_rune(_70813_txt);
			_70617_t._field_id=6LLU;
			return _70617_t;
		}
		goto _match_end_5673996304;
		_case_end_5673997648:;
		if (!(((_70813_txt[0LL] == '\"') || (_70813_txt[0LL] == '`')))) { goto _case_end_5673997760; }
		_case_begin_5673997760:;
		{
			_70617_t._field_kind=(*this)._method_lex_str();
			_70617_t._field_id=6LLU;
			return _70617_t;
		}
		goto _match_end_5673996304;
		_case_end_5673997760:;
		if (!((_150567d60_bytes_has_prefix(_70813_txt,jule::Str("//", 2))))) { goto _case_end_5673997872; }
		_case_begin_5673997872:;
		{
			(*this)._method_lex_line_comment(_70617_t);
			return _70617_t;
		}
		goto _match_end_5673996304;
		_case_end_5673997872:;
		if (!((_150567d60_bytes_has_prefix(_70813_txt,jule::Str("/*", 2))))) { goto _case_end_5674002384; }
		_case_begin_5674002384:;
		{
			(*this)._method_lex_range_comment();
			return _70617_t;
		}
		goto _match_end_5673996304;
		_case_end_5674002384:;
		if (!(((*this)._method_is_op(_70813_txt,jule::Str("(", 1),3LLU,_70617_t)) || ((*this)._method_is_op(_70813_txt,jule::Str(")", 1),3LLU,_70617_t)) || ((*this)._method_is_op(_70813_txt,jule::Str("{", 1),3LLU,_70617_t)) || ((*this)._method_is_op(_70813_txt,jule::Str("}", 1),3LLU,_70617_t)) || ((*this)._method_is_op(_70813_txt,jule::Str("[", 1),3LLU,_70617_t)) || ((*this)._method_is_op(_70813_txt,jule::Str("]", 1),3LLU,_70617_t)) || ((*this)._method_lex_basic_ops(_70813_txt,_70617_t)))) { goto _case_end_5674002496; }
		goto _match_end_5673996304;
		_case_end_5674002496:;
		if (!(((*this)._method_lex_id(_70813_txt,_70617_t)))) { goto _case_end_5674002608; }
		_case_begin_5674002608:;
		{
			{
				auto __julec_range_expr = _150567d60_KEYWORDS;
				if (__julec_range_expr.begin() != __julec_range_expr.end()) {
					auto __julec_range_begin = __julec_range_expr.begin();
					const auto __julec_range_end = __julec_range_expr.end();
					_150567d60_KindPair _150567d60_pair = *__julec_range_begin;
					_iter_begin_5674017136:;
					{
						if (_150567d60_pair._field_kind == _70617_t._field_kind) {
							_70617_t._field_id=_150567d60_pair._field_id;
							goto _iter_end_5674017136;
						}
					}
					_iter_next_5674017136:;
					++__julec_range_begin;
					if (__julec_range_begin != __julec_range_end) { _150567d60_pair = *__julec_range_begin; goto _iter_begin_5674017136; }
					_iter_end_5674017136:;
				}
			}
		}
		goto _match_end_5673996304;
		_case_end_5674002608:;
		_case_begin_5673997168:;
		{
			jule::I32 _75818_r;
			jule::Int _75821_sz;
			std::tie(_75818_r,_75821_sz) = _15081f100_decode_rune(_70813_txt);
			(*this)._method_push_err(jule::Str("undefined code content: @", 25),jule::Slice<jule::Any>({jule::Any(_75818_r)}));
			((*this)._field_column)++;
			(*this)._field_pos+=_75821_sz;
			return _70617_t;
		}
		goto _match_end_5673996304;
		_case_end_5673997168:;
		_match_end_5673996304:;
	}
	(*this)._field_column+=static_cast<jule::I64>(_70617_t._field_kind.len());
	return _70617_t;
}







std::ostream &operator<<(std::ostream &_Stream, const _150567d60_Lex &_Src) {
	_Stream << "Lex{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _15053e120_Ast &_Src) {
	_Stream << "Ast{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "top_directives:" << _Src._field_top_directives << ", ";
	_Stream << "use_decls:" << _Src._field_use_decls << ", ";
	_Stream << "impls:" << _Src._field_impls << ", ";
	_Stream << "comments:" << _Src._field_comments << ", ";
	_Stream << "decls:" << _Src._field_decls;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_150a13110_StructIns> _150a13110_Struct::_method_instance(void) {
	if ((this->self->_field_generics.len() == 0LL) && (this->self->_field_instances.len() == 1LL)) {
		return this->self->_field_instances[0LL];
	}
	jule::Ref<_150a13110_StructIns> _6717_ins = jule::new_struct<_150a13110_StructIns>(new( std::nothrow ) _150a13110_StructIns(jule::Bool(),this->self,jule::Slice<jule::Ref<_15177b070_TypeKind>>(),jule::Slice<jule::Ref<_150a13110_FieldIns>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(this->self->_field_fields.len()))),jule::Slice<jule::Ref<_15081bcd0_Fn>>::alloc(static_cast<jule::Int>(static_cast<jule::Int>(this->self->_field_methods._method_len()))),jule::Bool(),_150e75a70_new_reference_stack()));
	{
		auto __julec_range_expr = this->self->_field_fields;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _150a13110_i = 0;
			jule::Ref<_150a13110_Field> _150a13110_f = *__julec_range_begin;
			_iter_begin_5682169696:;
			{
				_6717_ins->_field_fields[static_cast<jule::Int>(_150a13110_i)]=_150a13110_f->_method_instance();
				if (jule::real(_150a13110_f->_field_kind->_field_kind) && _15177b070_is_mut(_150a13110_f->_field_kind->_field_kind)) {
					_6717_ins->_field_has_mut=true;
				}
			}
			_iter_next_5682169696:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_150a13110_i; _150a13110_f = *__julec_range_begin; goto _iter_begin_5682169696; }
			_iter_end_5682169696:;
		}
	}
	jule::Int _8117_i = 0LL;
	_iter_begin_5682164080:;
	if (!(_8117_i < this->self->_field_methods._method_len())) { goto _iter_end_5682164080; }
	{
		jule::Ref<_15081bcd0_Fn> _8321_f = this->self->_field_methods._method_at(_8117_i);
		jule::Ref<_15081bcd0_Fn> _8421_fins = jule::new_struct<_15081bcd0_Fn>(new( std::nothrow ) _15081bcd0_Fn(_8321_f->_field_sema,_8321_f->_field_token,_8321_f->_field_global,_8321_f->_field_unsafety,_8321_f->_field_public,_8321_f->_field_cpp_linked,_8321_f->_field_statically,_8321_f->_field_ident,_8321_f->_field_directives,_8321_f->_field_doc,_8321_f->_field_scope,_8321_f->_field_generics,_8321_f->_field_result,_8321_f->_field_params,_8321_f->_field_owner,nullptr));
		_6717_ins->_field_methods[static_cast<jule::Int>(_8117_i)]=_8421_fins;
	}
	_iter_next_5682164080:;
	(_8117_i)++;
	goto _iter_begin_5682164080;
	_iter_end_5682164080:;
	return _6717_ins;
}



inline jule::Ref<_150a13110_StructIns> _150a13110_Struct::_method_append_instance(jule::Ref<_150a13110_StructIns> _11038_ins) {
	if (((*this)._field_generics.len() == 0LL) && ((*this)._field_instances.len() == 1LL)) {
		return (*this)._field_instances[0LL];
	}
	{
		auto __julec_range_expr = (*this)._field_instances;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_150a13110_StructIns> _150a13110_ains = *__julec_range_begin;
			_iter_begin_5682191136:;
			{
				{
					auto __julec_range_expr = _150a13110_ains->_field_generics;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Int _150a13110_i = 0;
						jule::Ref<_15177b070_TypeKind> _150a13110_ag = *__julec_range_begin;
						_iter_begin_5682193088:;
						{
							if (_150a13110_ag->_method_equals(_11038_ins->_field_generics[static_cast<jule::Int>(_150a13110_i)])) {
								return _150a13110_ains;
							}
						}
						_iter_next_5682193088:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { ++_150a13110_i; _150a13110_ag = *__julec_range_begin; goto _iter_begin_5682193088; }
						_iter_end_5682193088:;
					}
				}
			}
			_iter_next_5682191136:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _150a13110_ains = *__julec_range_begin; goto _iter_begin_5682191136; }
			_iter_end_5682191136:;
		}
	}
	(*this)._field_instances=jule::append((*this)._field_instances,jule::Slice<jule::Ref<_150a13110_StructIns>>({_11038_ins}));
	return jule::new_ref<_150a13110_StructIns>();
}



inline jule::Ref<_15081bcd0_Fn> _150a13110_Struct::_method_find_method(jule::Str _13134_ident,jule::Bool _13146_statically) {
	jule::Int _13217_i = 0LL;
	_iter_begin_5682202064:;
	if (!(_13217_i < (*this)._field_methods._method_len())) { goto _iter_end_5682202064; }
	{
		jule::Ref<_15081bcd0_Fn> _13421_f = (*this)._field_methods._method_at(_13217_i);
		if ((_13421_f->_field_statically == _13146_statically) && (_13421_f->_field_ident == _13134_ident)) {
			return _13421_f;
		}
	}
	_iter_next_5682202064:;
	(_13217_i)++;
	goto _iter_begin_5682202064;
	_iter_end_5682202064:;
	return jule::new_ref<_15081bcd0_Fn>();
}



inline jule::Ref<_150a13110_Field> _150a13110_Struct::_method_find_field(jule::Str _14433_ident) {
	{
		auto __julec_range_expr = (*this)._field_fields;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_150a13110_Field> _150a13110_f = *__julec_range_begin;
			_iter_begin_5682209984:;
			{
				if (_150a13110_f->_field_ident == _14433_ident) {
					return _150a13110_f;
				}
			}
			_iter_next_5682209984:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _150a13110_f = *__julec_range_begin; goto _iter_begin_5682209984; }
			_iter_end_5682209984:;
		}
	}
	return jule::new_ref<_150a13110_Field>();
}



inline jule::Bool _150a13110_Struct::_method_is_implements(jule::Ref<_150f166e0_Trait> _15432_t) {
	{
		auto __julec_range_expr = (*this)._field_implements;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_150f166e0_Trait> _150a13110_it = *__julec_range_begin;
			_iter_begin_5682213808:;
			{
				if ((_15432_t).alloc == (_150a13110_it).alloc) {
					return true;
				}
			}
			_iter_next_5682213808:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _150a13110_it = *__julec_range_begin; goto _iter_begin_5682213808; }
			_iter_end_5682213808:;
		}
	}
	return false;
}



inline jule::Bool _150a13110_Struct::_method_is_derives(jule::Str _16429_ident) {
	{
		auto __julec_range_expr = (*this)._field_directives;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_1506406d0_Directive> _150a13110_d = *__julec_range_begin;
			_iter_begin_5682217616:;
			{
				if (_150a13110_d->_field_tag == jule::Str("derive", 6)) {
					if ((_150a13110_d->_field_args.len() == 1LL) && (_150a13110_d->_field_args[0LL] == _16429_ident)) {
						return true;
					}
				}
			}
			_iter_next_5682217616:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _150a13110_d = *__julec_range_begin; goto _iter_begin_5682217616; }
			_iter_end_5682217616:;
		}
	}
	return false;
}



inline jule::Bool _150a13110_Struct::_method_is_uses(jule::Ref<_150a13110_Struct> _17626_s) {
	{
		auto __julec_range_expr = (*this)._field_uses;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_150a13110_Struct> _150a13110_u = *__julec_range_begin;
			_iter_begin_5682224176:;
			{
				_iter_begin_5682225456:;
				if (!((_17626_s).alloc == (_150a13110_u).alloc)) { goto _iter_end_5682225456; }
				{
					return true;
				}
				_iter_next_5682225456:;
				goto _iter_begin_5682225456;
				_iter_end_5682225456:;
			}
			_iter_next_5682224176:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _150a13110_u = *__julec_range_begin; goto _iter_begin_5682224176; }
			_iter_end_5682224176:;
		}
	}
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _150a13110_Struct &_Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "depends:" << _Src._field_depends << ", ";
	_Stream << "uses:" << _Src._field_uses << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "implements:" << _Src._field_implements << ", ";
	_Stream << "instances:" << _Src._field_instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Int _150e75a70_ReferenceStack::_method_len(void) {
	return static_cast<jule::Int>((*this)._field_buffer._method_len());
}



inline jule::Any _150e75a70_ReferenceStack::_method_at(jule::Int _5225_i) {
	return (*this)._field_buffer._method_at(_5225_i);
}



inline void _150e75a70_ReferenceStack::_method_push(jule::Any _5731_ref) {
	(*this)._field_buffer._method_push(_5731_ref);
}



inline void _150e75a70_ReferenceStack::_method_push_front(jule::Any _6237_ref) {
	(*this)._field_buffer._method_push_front(_6237_ref);
}



inline void _150e75a70_ReferenceStack::_method_remove(jule::Int _6729_i) {
	(*this)._field_buffer._method_remove_range(_6729_i,1LL);
}



inline jule::Bool _150e75a70_ReferenceStack::_method_exist_0(jule::Ref<_1511317d0_Var> _7227_t) {
	jule::Int _7317_i = 0LL;
	_iter_begin_5686067120:;
	if (!(_7317_i < (*this)._method_len())) { goto _iter_end_5686067120; }
	{
		jule::Any _7517_ref = (&((*this)._field_buffer))->_method_at(_7317_i);
		{
			auto _match_expr{ _7517_ref };
			if (!(_match_expr.type_is<jule::Ref<_1511317d0_Var>>())) { goto _case_end_5686070688; }
			_case_begin_5686070688:;
			{
				if ((_7517_ref.operator jule::Ref<_1511317d0_Var>()).alloc == (_7227_t).alloc) {
					return true;
				}
			}
			goto _match_end_5686068912;
			_case_end_5686070688:;
			_match_end_5686068912:;
		}
	}
	_iter_next_5686067120:;
	(_7317_i)++;
	goto _iter_begin_5686067120;
	_iter_end_5686067120:;
	return false;
}

inline jule::Bool _150e75a70_ReferenceStack::_method_exist_1(jule::Ref<_15081bcd0_FnIns> _7227_t) {
	jule::Int _7317_i = 0LL;
	_iter_begin_5686080912:;
	if (!(_7317_i < (*this)._method_len())) { goto _iter_end_5686080912; }
	{
		jule::Any _7517_ref = (&((*this)._field_buffer))->_method_at(_7317_i);
		{
			auto _match_expr{ _7517_ref };
			if (!(_match_expr.type_is<jule::Ref<_15081bcd0_FnIns>>())) { goto _case_end_5686084480; }
			_case_begin_5686084480:;
			{
				if ((_7517_ref.operator jule::Ref<_15081bcd0_FnIns>()).alloc == (_7227_t).alloc) {
					return true;
				}
			}
			goto _match_end_5686082704;
			_case_end_5686084480:;
			_match_end_5686082704:;
		}
	}
	_iter_next_5686080912:;
	(_7317_i)++;
	goto _iter_begin_5686080912;
	_iter_end_5686080912:;
	return false;
}

inline jule::Bool _150e75a70_ReferenceStack::_method_exist_2(jule::Ref<_150a13110_StructIns> _7227_t) {
	jule::Int _7317_i = 0LL;
	_iter_begin_5686123168:;
	if (!(_7317_i < (*this)._method_len())) { goto _iter_end_5686123168; }
	{
		jule::Any _7517_ref = (&((*this)._field_buffer))->_method_at(_7317_i);
		{
			auto _match_expr{ _7517_ref };
			if (!(_match_expr.type_is<jule::Ref<_150a13110_StructIns>>())) { goto _case_end_5686126736; }
			_case_begin_5686126736:;
			{
				if ((_7517_ref.operator jule::Ref<_150a13110_StructIns>()).alloc == (_7227_t).alloc) {
					return true;
				}
			}
			goto _match_end_5686124960;
			_case_end_5686126736:;
			_match_end_5686124960:;
		}
	}
	_iter_next_5686123168:;
	(_7317_i)++;
	goto _iter_begin_5686123168;
	_iter_end_5686123168:;
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _150e75a70_ReferenceStack &_Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _150d29660_Scope &_Src) {
	_Stream << "Scope{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "deferred:" << _Src._field_deferred << ", ";
	_Stream << "stmts:" << _Src._field_stmts;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_150f26340_ImportInfo> _15128c4d0_SymbolTable::_method_find_package(jule::Str _2635_ident) {
	jule::Int _2717_i = 0LL;
	_iter_begin_5685777328:;
	if (!(_2717_i < (*this)._field_imports._method_len())) { goto _iter_end_5685777328; }
	{
		jule::Ref<_150f26340_ImportInfo> _2921_pkg = (*this)._field_imports._method_at(_2717_i);
		if (_2921_pkg->_field_ident == _2635_ident) {
			return _2921_pkg;
		}
	}
	_iter_next_5685777328:;
	(_2717_i)++;
	goto _iter_begin_5685777328;
	_iter_end_5685777328:;
	return jule::new_ref<_150f26340_ImportInfo>();
}



inline jule::Ref<_150f26340_ImportInfo> _15128c4d0_SymbolTable::_method_select_package(jule::Fn<jule::Bool(jule::Ref<_150f26340_ImportInfo>)> _4037_selector) {
	if (_4037_selector == nullptr) {
		return jule::new_ref<_150f26340_ImportInfo>();
	}
	jule::Int _4517_i = 0LL;
	_iter_begin_5685785152:;
	if (!(_4517_i < (*this)._field_imports._method_len())) { goto _iter_end_5685785152; }
	{
		jule::Ref<_150f26340_ImportInfo> _4721_pkg = (*this)._field_imports._method_at(_4517_i);
		if (_4037_selector(_4721_pkg)) {
			return _4721_pkg;
		}
	}
	_iter_next_5685785152:;
	(_4517_i)++;
	goto _iter_begin_5685785152;
	_iter_end_5685785152:;
	return jule::new_ref<_150f26340_ImportInfo>();
}



inline jule::Ref<_1511317d0_Var> _15128c4d0_SymbolTable::_method_find_var(jule::Str _5731_ident,jule::Bool _5743_cpp_linked) {
	return (*this)._method___find_var(_5731_ident,_5743_cpp_linked,false);
}



inline jule::Ref<_15177b070_TypeAlias> _15128c4d0_SymbolTable::_method_find_type_alias(jule::Str _6338_ident,jule::Bool _6350_cpp_linked) {
	return (*this)._method___find_type_alias(_6338_ident,_6350_cpp_linked,false);
}



inline jule::Ref<_150a13110_Struct> _15128c4d0_SymbolTable::_method_find_struct(jule::Str _6934_ident,jule::Bool _6946_cpp_linked) {
	jule::Int _7017_i = 0LL;
	_iter_begin_5685796832:;
	if (!(_7017_i < (*this)._field_structs._method_len())) { goto _iter_end_5685796832; }
	{
		jule::Ref<_150a13110_Struct> _7221_s = (*this)._field_structs._method_at(_7017_i);
		if ((_7221_s->_field_ident == _6934_ident) && (_7221_s->_field_cpp_linked == _6946_cpp_linked)) {
			return _7221_s;
		}
	}
	_iter_next_5685796832:;
	(_7017_i)++;
	goto _iter_begin_5685796832;
	_iter_end_5685796832:;
	return jule::new_ref<_150a13110_Struct>();
}



inline jule::Ref<_15081bcd0_Fn> _15128c4d0_SymbolTable::_method_find_fn(jule::Str _8230_ident,jule::Bool _8242_cpp_linked) {
	jule::Int _8317_i = 0LL;
	_iter_begin_5685802608:;
	if (!(_8317_i < (*this)._field_funcs._method_len())) { goto _iter_end_5685802608; }
	{
		jule::Ref<_15081bcd0_Fn> _8521_f = (*this)._field_funcs._method_at(_8317_i);
		if ((_8521_f->_field_ident == _8230_ident) && (_8521_f->_field_cpp_linked == _8242_cpp_linked)) {
			return _8521_f;
		}
	}
	_iter_next_5685802608:;
	(_8317_i)++;
	goto _iter_begin_5685802608;
	_iter_end_5685802608:;
	return jule::new_ref<_15081bcd0_Fn>();
}



inline jule::Ref<_150f166e0_Trait> _15128c4d0_SymbolTable::_method_find_trait(jule::Str _9533_ident) {
	jule::Int _9617_i = 0LL;
	_iter_begin_5685809376:;
	if (!(_9617_i < (*this)._field_traits._method_len())) { goto _iter_end_5685809376; }
	{
		jule::Ref<_150f166e0_Trait> _9821_t = (*this)._field_traits._method_at(_9617_i);
		if (_9821_t->_field_ident == _9533_ident) {
			return _9821_t;
		}
	}
	_iter_next_5685809376:;
	(_9617_i)++;
	goto _iter_begin_5685809376;
	_iter_end_5685809376:;
	return jule::new_ref<_150f166e0_Trait>();
}



inline jule::Ref<_150f1c930_Enum> _15128c4d0_SymbolTable::_method_find_enum(jule::Str _10832_ident) {
	jule::Int _10917_i = 0LL;
	_iter_begin_5685815952:;
	if (!(_10917_i < (*this)._field_enums._method_len())) { goto _iter_end_5685815952; }
	{
		jule::Ref<_150f1c930_Enum> _11121_e = (*this)._field_enums._method_at(_10917_i);
		if (_11121_e->_field_ident == _10832_ident) {
			return _11121_e;
		}
	}
	_iter_next_5685815952:;
	(_10917_i)++;
	goto _iter_begin_5685815952;
	_iter_end_5685815952:;
	return jule::new_ref<_150f1c930_Enum>();
}



inline jule::Ref<_1511317d0_Var> _15128c4d0_SymbolTable::_method___find_var(jule::Str _12129_ident,jule::Bool _12141_cpp_linked,jule::Bool _12159_reverse) {
	if (_12159_reverse) {
		jule::Int _12321_i = (*this)._field_vars._method_len() - 1LL;
		_iter_begin_5685826384:;
		if (!(_12321_i >= 0LL)) { goto _iter_end_5685826384; }
		{
			jule::Ref<_1511317d0_Var> _12525_v = (*this)._field_vars._method_at(_12321_i);
			if ((_12525_v->_field_ident == _12129_ident) && (_12525_v->_field_cpp_linked == _12141_cpp_linked)) {
				return _12525_v;
			}
		}
		_iter_next_5685826384:;
		(_12321_i)--;
		goto _iter_begin_5685826384;
		_iter_end_5685826384:;
	} else {
		jule::Int _13121_i = 0LL;
		_iter_begin_5685830768:;
		if (!(_13121_i < (*this)._field_vars._method_len())) { goto _iter_end_5685830768; }
		{
			jule::Ref<_1511317d0_Var> _13325_v = (*this)._field_vars._method_at(_13121_i);
			if ((_13325_v->_field_ident == _12129_ident) && (_13325_v->_field_cpp_linked == _12141_cpp_linked)) {
				return _13325_v;
			}
		}
		_iter_next_5685830768:;
		(_13121_i)++;
		goto _iter_begin_5685830768;
		_iter_end_5685830768:;
	}
	return jule::new_ref<_1511317d0_Var>();
}



inline jule::Ref<_15177b070_TypeAlias> _15128c4d0_SymbolTable::_method___find_type_alias(jule::Str _14236_ident,jule::Bool _14248_cpp_linked,jule::Bool _14266_reverse) {
	if (_14266_reverse) {
		jule::Int _14421_i = (*this)._field_type_aliases._method_len() - 1LL;
		_iter_begin_5685839712:;
		if (!(_14421_i >= 0LL)) { goto _iter_end_5685839712; }
		{
			jule::Ref<_15177b070_TypeAlias> _14625_ta = (*this)._field_type_aliases._method_at(_14421_i);
			if ((_14625_ta->_field_ident == _14236_ident) && (_14625_ta->_field_cpp_linked == _14248_cpp_linked)) {
				return _14625_ta;
			}
		}
		_iter_next_5685839712:;
		(_14421_i)--;
		goto _iter_begin_5685839712;
		_iter_end_5685839712:;
	} else {
		jule::Int _15221_i = 0LL;
		_iter_begin_5685844160:;
		if (!(_15221_i < (*this)._field_type_aliases._method_len())) { goto _iter_end_5685844160; }
		{
			jule::Ref<_15177b070_TypeAlias> _15425_ta = (*this)._field_type_aliases._method_at(_15221_i);
			if ((_15425_ta->_field_ident == _14236_ident) && (_15425_ta->_field_cpp_linked == _14248_cpp_linked)) {
				return _15425_ta;
			}
		}
		_iter_next_5685844160:;
		(_15221_i)++;
		goto _iter_begin_5685844160;
		_iter_end_5685844160:;
	}
	return jule::new_ref<_15177b070_TypeAlias>();
}



inline jule::Any _15128c4d0_SymbolTable::_method_def_by_ident(jule::Str _16531_ident,jule::Bool _16543_cpp_linked) {
	jule::Int _16617_i = 0LL;
	_iter_begin_5685850528:;
	if (!(_16617_i < (*this)._field_vars._method_len())) { goto _iter_end_5685850528; }
	{
		jule::Ref<_1511317d0_Var> _16821_v = (*this)._field_vars._method_at(_16617_i);
		if ((_16821_v->_field_ident == _16531_ident) && (_16821_v->_field_cpp_linked == _16543_cpp_linked)) {
			return jule::Any(_16821_v);
		}
	}
	_iter_next_5685850528:;
	(_16617_i)++;
	goto _iter_begin_5685850528;
	_iter_end_5685850528:;
	_16617_i=0LL;
	_iter_begin_5685853888:;
	if (!(_16617_i < (*this)._field_type_aliases._method_len())) { goto _iter_end_5685853888; }
	{
		jule::Ref<_15177b070_TypeAlias> _17621_ta = (*this)._field_type_aliases._method_at(_16617_i);
		if ((_17621_ta->_field_ident == _16531_ident) && (_17621_ta->_field_cpp_linked == _16543_cpp_linked)) {
			return jule::Any(_17621_ta);
		}
	}
	_iter_next_5685853888:;
	(_16617_i)++;
	goto _iter_begin_5685853888;
	_iter_end_5685853888:;
	_16617_i=0LL;
	_iter_begin_5685857984:;
	if (!(_16617_i < (*this)._field_structs._method_len())) { goto _iter_end_5685857984; }
	{
		jule::Ref<_150a13110_Struct> _18421_s = (*this)._field_structs._method_at(_16617_i);
		if ((_18421_s->_field_ident == _16531_ident) && (_18421_s->_field_cpp_linked == _16543_cpp_linked)) {
			return jule::Any(_18421_s);
		}
	}
	_iter_next_5685857984:;
	(_16617_i)++;
	goto _iter_begin_5685857984;
	_iter_end_5685857984:;
	_16617_i=0LL;
	_iter_begin_5685864640:;
	if (!(_16617_i < (*this)._field_funcs._method_len())) { goto _iter_end_5685864640; }
	{
		jule::Ref<_15081bcd0_Fn> _19221_f = (*this)._field_funcs._method_at(_16617_i);
		if ((_19221_f->_field_ident == _16531_ident) && (_19221_f->_field_cpp_linked == _16543_cpp_linked)) {
			return jule::Any(_19221_f);
		}
	}
	_iter_next_5685864640:;
	(_16617_i)++;
	goto _iter_begin_5685864640;
	_iter_end_5685864640:;
	if (_16543_cpp_linked) {
		return jule::Any(nullptr);
	}
	_16617_i=0LL;
	_iter_begin_5685869168:;
	if (!(_16617_i < (*this)._field_traits._method_len())) { goto _iter_end_5685869168; }
	{
		jule::Ref<_150f166e0_Trait> _20421_t = (*this)._field_traits._method_at(_16617_i);
		if (_20421_t->_field_ident == _16531_ident) {
			return jule::Any(_20421_t);
		}
	}
	_iter_next_5685869168:;
	(_16617_i)++;
	goto _iter_begin_5685869168;
	_iter_end_5685869168:;
	_16617_i=0LL;
	_iter_begin_5685869648:;
	if (!(_16617_i < (*this)._field_enums._method_len())) { goto _iter_end_5685869648; }
	{
		jule::Ref<_150f1c930_Enum> _21221_e = (*this)._field_enums._method_at(_16617_i);
		if (_21221_e->_field_ident == _16531_ident) {
			return jule::Any(_21221_e);
		}
	}
	_iter_next_5685869648:;
	(_16617_i)++;
	goto _iter_begin_5685869648;
	_iter_end_5685869648:;
	return jule::Any(nullptr);
}



inline jule::Bool _15128c4d0_SymbolTable::_method_is_duplicated_ident(jule::Uintptr _22434_itself,jule::Str _22451_ident,jule::Bool _22463_cpp_linked) {
	jule::Int _22517_i = 0LL;
	_iter_begin_5685880528:;
	if (!(_22517_i < (*this)._field_vars._method_len())) { goto _iter_end_5685880528; }
	{
		jule::Ref<_1511317d0_Var> _22717_v = (&((*this)._field_vars))->_method_at(_22517_i);
		if (((((jule::Uintptr)((_22717_v).alloc)) != _22434_itself) && (_22717_v->_field_ident == _22451_ident)) && (_22717_v->_field_cpp_linked == _22463_cpp_linked)) {
			return true;
		}
	}
	_iter_next_5685880528:;
	(_22517_i)++;
	goto _iter_begin_5685880528;
	_iter_end_5685880528:;
	_22517_i=0LL;
	_iter_begin_5685884896:;
	if (!(_22517_i < (*this)._field_type_aliases._method_len())) { goto _iter_end_5685884896; }
	{
		jule::Ref<_15177b070_TypeAlias> _23517_ta = (&((*this)._field_type_aliases))->_method_at(_22517_i);
		if (((((jule::Uintptr)((_23517_ta).alloc)) != _22434_itself) && (_23517_ta->_field_ident == _22451_ident)) && (_23517_ta->_field_cpp_linked == _22463_cpp_linked)) {
			return true;
		}
	}
	_iter_next_5685884896:;
	(_22517_i)++;
	goto _iter_begin_5685884896;
	_iter_end_5685884896:;
	_22517_i=0LL;
	_iter_begin_5685890240:;
	if (!(_22517_i < (*this)._field_structs._method_len())) { goto _iter_end_5685890240; }
	{
		jule::Ref<_150a13110_Struct> _24317_s = (&((*this)._field_structs))->_method_at(_22517_i);
		if (((((jule::Uintptr)((_24317_s).alloc)) != _22434_itself) && (_24317_s->_field_ident == _22451_ident)) && (_24317_s->_field_cpp_linked == _22463_cpp_linked)) {
			return true;
		}
	}
	_iter_next_5685890240:;
	(_22517_i)++;
	goto _iter_begin_5685890240;
	_iter_end_5685890240:;
	_22517_i=0LL;
	_iter_begin_5685895520:;
	if (!(_22517_i < (*this)._field_funcs._method_len())) { goto _iter_end_5685895520; }
	{
		jule::Ref<_15081bcd0_Fn> _25117_f = (&((*this)._field_funcs))->_method_at(_22517_i);
		if (((((jule::Uintptr)((_25117_f).alloc)) != _22434_itself) && (_25117_f->_field_ident == _22451_ident)) && (_25117_f->_field_cpp_linked == _22463_cpp_linked)) {
			return true;
		}
	}
	_iter_next_5685895520:;
	(_22517_i)++;
	goto _iter_begin_5685895520;
	_iter_end_5685895520:;
	if (_22463_cpp_linked) {
		return false;
	}
	_22517_i=0LL;
	_iter_begin_5685900864:;
	if (!(_22517_i < (*this)._field_traits._method_len())) { goto _iter_end_5685900864; }
	{
		jule::Ref<_150f166e0_Trait> _26317_t = (&((*this)._field_traits))->_method_at(_22517_i);
		if ((((jule::Uintptr)((_26317_t).alloc)) != _22434_itself) && (_26317_t->_field_ident == _22451_ident)) {
			return true;
		}
	}
	_iter_next_5685900864:;
	(_22517_i)++;
	goto _iter_begin_5685900864;
	_iter_end_5685900864:;
	_22517_i=0LL;
	_iter_begin_5685903136:;
	if (!(_22517_i < (*this)._field_enums._method_len())) { goto _iter_end_5685903136; }
	{
		jule::Ref<_150f1c930_Enum> _27117_e = (&((*this)._field_enums))->_method_at(_22517_i);
		if ((((jule::Uintptr)((_27117_e).alloc)) != _22434_itself) && (_27117_e->_field_ident == _22451_ident)) {
			return true;
		}
	}
	_iter_next_5685903136:;
	(_22517_i)++;
	goto _iter_begin_5685903136;
	_iter_end_5685903136:;
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _15128c4d0_SymbolTable &_Src) {
	_Stream << "SymbolTable{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "passes:" << _Src._field_passes << ", ";
	_Stream << "imports:" << _Src._field_imports << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "type_aliases:" << _Src._field_type_aliases << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "funcs:" << _Src._field_funcs << ", ";
	_Stream << "traits:" << _Src._field_traits << ", ";
	_Stream << "enums:" << _Src._field_enums << ", ";
	_Stream << "impls:" << _Src._field_impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Int _147e61090_get_last_errno(void) {
	return errno;
}



inline jule::Str _147e787d0_byte_ptr_to_str(jule::U8* _4831_s) {
	if (_4831_s == nullptr) {
		return jule::Str("", 0);
	}
	return __jule_str_from_byte_ptr(_4831_s);
}



inline jule::Int _147e787d0_stat(jule::U8* _5620_path,struct stat* _5637_stat) {
	return static_cast<jule::Int>(__jule_stat(((char*)(_5620_path)),_5637_stat));
}



inline jule::Int _147e787d0_open(jule::U8* _6120_path,jule::Int _6133_flag,jule::Int _6144_mode) {
	return static_cast<jule::Int>(open(((char*)(_6120_path)),_6133_flag,_6144_mode));
}



inline jule::U8* _147e787d0_getcwd(jule::U8* _6722_buff,jule::Uint _6735_bufflen) {
	return ((jule::U8*)(getcwd(((char*)(_6722_buff)),_6735_bufflen)));
}



inline DIR* _147e787d0_opendir(jule::U8* _7223_path) {
	return opendir(((char*)(_7223_path)));
}



inline struct dirent* _147e787d0_readdir(DIR* _7527_dir) {
	return readdir(_7527_dir);
}



inline jule::Int _147e787d0_closedir(DIR* _7828_dir) {
	return static_cast<jule::Int>(closedir(_7828_dir));
}



inline jule::Int _147e787d0_chdir(jule::U8* _8121_path) {
	return static_cast<jule::Int>(chdir(((char*)(_8121_path))));
}



inline jule::Int _147e787d0_remove(jule::U8* _8422_path) {
	return static_cast<jule::Int>(remove(((char*)(_8422_path))));
}



inline jule::Int _147e787d0_mkdir(jule::U8* _8721_path,jule::Int _8734_mode) {
	return static_cast<jule::Int>(mkdir(((char*)(_8721_path)),_8734_mode));
}



inline jule::Int _147e787d0_rmdir(jule::U8* _9221_path) {
	return static_cast<jule::Int>(rmdir(((char*)(_9221_path))));
}



inline jule::Int _147e787d0_unlink(jule::U8* _9522_path) {
	return static_cast<jule::Int>(unlink(((char*)(_9522_path))));
}



inline jule::I64 _147ed9190_seek(jule::Int _2613_handle,jule::I64 _2626_offset,jule::Int _2639_origin) {
	return static_cast<jule::I64>(lseek(_2613_handle,_2626_offset,_2639_origin));
}



inline jule::Int _147ed9190_read(jule::Int _3120_handle,void* _3137_buff,jule::Uint _3152_n) {
	return static_cast<jule::Int>(read(_3120_handle,_3137_buff,_3152_n));
}



inline jule::Int _147ed9190_close(jule::Int _3614_handle) {
	return static_cast<jule::Int>(close(_3614_handle));
}



inline jule::Int _147ed9190_write(jule::Int _3921_handle,void* _3934_buff,jule::Uint _3949_n) {
	return static_cast<jule::Int>(write(_3921_handle,_3934_buff,_3949_n));
}



inline void _147ed9190_exit(jule::Int _4413_code) {
	exit(_4413_code);
}



inline void* _147e7e270_malloc(jule::Uint _1515_size) {
	return malloc(_1515_size);
}



inline void* _147e7e270_calloc(jule::Uint _1915_size,jule::Uint _1927_n) {
	return calloc(_1915_size,_1927_n);
}



inline void* _147e7e270_realloc(void* _2427_ptr,jule::Uint _2441_size) {
	return realloc(_2427_ptr,_2441_size);
}



inline void _147e7e270_free(void* _2924_ptr) {
	free(_2924_ptr);
}



inline jule::Int _147e60f80_get_last_os_error(void) {
	jule::Int _319_err = _147e61090_get_last_errno();
	{
		auto _match_expr{ _319_err };
		if (!((13LL) == _match_expr)) { goto _case_end_5668163520; }
		_case_begin_5668163520:;
		{
			return 1LLU;
		}
		goto _match_end_5668162128;
		_case_end_5668163520:;
		if (!((5LL) == _match_expr)) { goto _case_end_5668163632; }
		_case_begin_5668163632:;
		{
			return 2LLU;
		}
		goto _match_end_5668162128;
		_case_end_5668163632:;
		if (!((40LL) == _match_expr)) { goto _case_end_5668163744; }
		_case_begin_5668163744:;
		{
			return 3LLU;
		}
		goto _match_end_5668162128;
		_case_end_5668163744:;
		if (!((36LL) == _match_expr)) { goto _case_end_5668162960; }
		_case_begin_5668162960:;
		{
			return 4LLU;
		}
		goto _match_end_5668162128;
		_case_end_5668162960:;
		if (!((2LL) == _match_expr)) { goto _case_end_5668163072; }
		_case_begin_5668163072:;
		{
			return 5LLU;
		}
		goto _match_end_5668162128;
		_case_end_5668163072:;
		if (!((20LL) == _match_expr)) { goto _case_end_5668163184; }
		_case_begin_5668163184:;
		{
			return 6LLU;
		}
		goto _match_end_5668162128;
		_case_end_5668163184:;
		if (!((12LL) == _match_expr)) { goto _case_end_5668164128; }
		_case_begin_5668164128:;
		{
			return 7LLU;
		}
		goto _match_end_5668162128;
		_case_end_5668164128:;
		_case_begin_5668162656:;
		{
			return 0LLU;
		}
		goto _match_end_5668162128;
		_case_end_5668162656:;
		_match_end_5668162128:;
	}
}



inline std::tuple<jule::Str,jule::Int> _147e65dd0_working_dir(void) {
	jule::Str _3410_p;
	jule::Int _3413_err;
	std::tie(_3410_p,_3413_err) = _147e66800___getwd();
	return std::make_tuple(_3410_p,_3413_err);
}



inline jule::Int _147e65dd0_set_working_dir(jule::Str _4324_path) {
	if (_4324_path == jule::Str("", 0)) {
		return 6LLU;
	}
	return _147e66800___chdir(_4324_path);
}



inline void _147e65dd0_init(void) {
	{
		(*((&(_147e65dd0_ARGS))))=jule::command_line_args;
		(*((&(_147e65dd0_ENV))))=jule::environment_variables;
	}
}



inline std::tuple<jule::Str,jule::Int> _147e66800___getwd(void) {
	jule::U8* _1513_buff = _147e787d0_getcwd(nullptr,0LLU);
	if (_1513_buff == nullptr) {
		return std::make_tuple(jule::Str("", 0),_147e60f80_get_last_os_error());
	}
	jule::Str _199_pwd = _147e787d0_byte_ptr_to_str(_1513_buff);
	{
		_147e7e270_free(_1513_buff);
	}
	return std::make_tuple(_199_pwd,0LLU);
}



inline jule::Int _147e66800___chdir(jule::Str _2612_path) {
	if (_147e787d0_chdir((&(_2612_path[0LL]))) == 0LL) {
		return 0LLU;
	}
	return _147e60f80_get_last_os_error();
}



inline jule::Str _147e135c0_clean(jule::Str _10718_path) {
	jule::Str _1089_original_path = _10718_path;
	jule::Int _1099_vol_len = _147e090b0_volume_name_len(_10718_path);
	_10718_path=_10718_path.slice(static_cast<jule::Int>(_1099_vol_len));
	if (_10718_path == jule::Str("", 0)) {
		if (((_1099_vol_len > 1LL) && _147e090b0_is_path_sep(_1089_original_path[0LL])) && _147e090b0_is_path_sep(_1089_original_path[1LL])) {
			return _147e135c0_from_slash(_1089_original_path);
		}
		return _1089_original_path + jule::Str(".", 1);
	}
	jule::Bool _1189_rooted = _147e090b0_is_path_sep(_10718_path[0LL]);
	jule::I64 _1259_n = _10718_path.len();
	_147e135c0_LazyBuff _12613_out = _147e135c0_LazyBuff(_10718_path,jule::Slice<jule::U8>(),jule::Int(),_1089_original_path,_1099_vol_len);
	jule::Int _13114_r = 0LL;
	jule::Int _13121_dotdot = 0LL;
	std::tie(_13114_r,_13121_dotdot) = std::make_tuple(0LL,0LL);
	if (_1189_rooted) {
		_12613_out._method_append(47LLU);
		std::tie(_13114_r,_13121_dotdot) = std::make_tuple(1LL,1LL);
	}
	_iter_begin_5668225488:;
	if (!(_13114_r < _1259_n)) { goto _iter_end_5668225488; }
	{
		{
			if (!((_147e090b0_is_path_sep(_10718_path[static_cast<jule::Int>(_13114_r)])))) { goto _case_end_5668240592; }
			_case_begin_5668240592:;
			{
				(_13114_r)++;
			}
			goto _match_end_5668226656;
			_case_end_5668240592:;
			if (!(((_10718_path[static_cast<jule::Int>(_13114_r)] == '.') && (((_13114_r + 1LL) == _1259_n) || _147e090b0_is_path_sep(_10718_path[static_cast<jule::Int>(_13114_r + 1LL)]))))) { goto _case_end_5668240704; }
			_case_begin_5668240704:;
			{
				(_13114_r)++;
			}
			goto _match_end_5668226656;
			_case_end_5668240704:;
			if (!((((_10718_path[static_cast<jule::Int>(_13114_r)] == '.') && (_10718_path[static_cast<jule::Int>(_13114_r + 1LL)] == '.')) && (((_13114_r + 2LL) == _1259_n) || _147e090b0_is_path_sep(_10718_path[static_cast<jule::Int>(_13114_r + 2LL)]))))) { goto _case_end_5668240816; }
			_case_begin_5668240816:;
			{
				_13114_r+=2LL;
				{
					if (!((_12613_out._field_w > _13121_dotdot))) { goto _case_end_5668244848; }
					_case_begin_5668244848:;
					{
						(_12613_out._field_w)--;
						_iter_begin_5668250224:;
						if (!((_12613_out._field_w > _13121_dotdot) && (!(_147e090b0_is_path_sep(static_cast<jule::U8>(_12613_out._method_index(_12613_out._field_w))))))) { goto _iter_end_5668250224; }
						{
							(_12613_out._field_w)--;
						}
						_iter_next_5668250224:;
						goto _iter_begin_5668250224;
						_iter_end_5668250224:;
					}
					goto _match_end_5668245680;
					_case_end_5668244848:;
					if (!(((!(_1189_rooted))))) { goto _case_end_5668248288; }
					_case_begin_5668248288:;
					{
						if (_12613_out._field_w > 0LL) {
							_12613_out._method_append(47LLU);
						}
						_12613_out._method_append('.');
						_12613_out._method_append('.');
						_13121_dotdot=_12613_out._field_w;
					}
					goto _match_end_5668245680;
					_case_end_5668248288:;
					_match_end_5668245680:;
				}
			}
			goto _match_end_5668226656;
			_case_end_5668240816:;
			_case_begin_5668226752:;
			{
				if ((_1189_rooted && (_12613_out._field_w != 1LL)) || ((!(_1189_rooted)) && (_12613_out._field_w != 0LL))) {
					_12613_out._method_append(47LLU);
				}
				if (((false && (_12613_out._field_w == 0LL)) && (_12613_out._field_vol_len == 0LL)) && (_13114_r != 0LL)) {
					jule::Int _17425_i = _13114_r;
					_iter_begin_5668230992:;
					if (!((_17425_i < _1259_n) && (!(_147e090b0_is_path_sep(_10718_path[static_cast<jule::Int>(_17425_i)]))))) { goto _iter_end_5668230992; }
					{
						if (_10718_path[static_cast<jule::Int>(_17425_i)] == ':') {
							_12613_out._method_append('.');
							_12613_out._method_append(47LLU);
							goto _iter_end_5668230992;
						}
					}
					_iter_next_5668230992:;
					(_17425_i)++;
					goto _iter_begin_5668230992;
					_iter_end_5668230992:;
				}
				_iter_begin_5668231312:;
				if (!((_13114_r < _1259_n) && (!(_147e090b0_is_path_sep(_10718_path[static_cast<jule::Int>(_13114_r)]))))) { goto _iter_end_5668231312; }
				{
					_12613_out._method_append(_10718_path[static_cast<jule::Int>(_13114_r)]);
				}
				_iter_next_5668231312:;
				(_13114_r)++;
				goto _iter_begin_5668231312;
				_iter_end_5668231312:;
			}
			goto _match_end_5668226656;
			_case_end_5668226752:;
			_match_end_5668226656:;
		}
	}
	_iter_next_5668225488:;
	goto _iter_begin_5668225488;
	_iter_end_5668225488:;
	if (_12613_out._field_w == 0LL) {
		_12613_out._method_append('.');
	}
	return _147e135c0_from_slash(_12613_out._method_string());
}



inline jule::Str _147e135c0_to_slash(jule::Str _20017_path) {
	if (true) {
		return _20017_path;
	}
	return _20017_path.replace(static_cast<jule::Str>(47LL),jule::Str("/", 1),-1LL);
}



inline jule::Str _147e135c0_from_slash(jule::Str _21019_path) {
	if (true) {
		return _21019_path;
	}
	return _21019_path.replace(jule::Str("/", 1),static_cast<jule::Str>(47LL),-1LL);
}



inline jule::Str _147e135c0_join(jule::Slice<jule::Str> _22413_elem) {
	return _147e090b0___join(_22413_elem);
}



inline jule::Str _147e135c0_ext(jule::Str _22912_path) {
	jule::I64 _23013_i = _22912_path.len() - 1LL;
	_iter_begin_5668264336:;
	if (!((_23013_i >= 0LL) && (!(_147e090b0_is_path_sep(_22912_path[static_cast<jule::Int>(_23013_i)]))))) { goto _iter_end_5668264336; }
	{
		if (_22912_path[static_cast<jule::Int>(_23013_i)] == '.') {
			return _22912_path.slice(static_cast<jule::Int>(_23013_i));
		}
	}
	_iter_next_5668264336:;
	(_23013_i)--;
	goto _iter_begin_5668264336;
	_iter_end_5668264336:;
	return jule::Str("", 0);
}



inline std::tuple<jule::Str,jule::Bool> _147e135c0_abs(jule::Str _24412_path) {
	jule::Str _24510_abs_path;
	jule::Bool _24520_ok;
	std::tie(_24510_abs_path,_24520_ok) = _147e090b0___abs(_24412_path);
	return std::make_tuple(_24510_abs_path,_24520_ok);
}



inline jule::Str _147e135c0_base(jule::Str _25317_path) {
	if (_25317_path == jule::Str("", 0)) {
		return jule::Str(".", 1);
	}
	_iter_begin_5668278384:;
	if (!((_25317_path.len() > 0LL) && _147e090b0_is_path_sep(_25317_path[static_cast<jule::Int>(_25317_path.len() - 1LL)]))) { goto _iter_end_5668278384; }
	{
		_25317_path=_25317_path.slice(0LL,static_cast<jule::Int>(_25317_path.len() - 1LL));
	}
	_iter_next_5668278384:;
	goto _iter_begin_5668278384;
	_iter_end_5668278384:;
	_25317_path=_25317_path.slice(static_cast<jule::Int>(_147e135c0_volume_name(_25317_path).len()));
	jule::I64 _26413_i = _25317_path.len() - 1LL;
	_iter_begin_5668278464:;
	if (!((_26413_i >= 0LL) && (!(_147e090b0_is_path_sep(_25317_path[static_cast<jule::Int>(_26413_i)]))))) { goto _iter_end_5668278464; }
	{
		(_26413_i)--;
	}
	_iter_next_5668278464:;
	goto _iter_begin_5668278464;
	_iter_end_5668278464:;
	if (_26413_i >= 0LL) {
		_25317_path=_25317_path.slice(static_cast<jule::Int>(_26413_i + 1LL));
	}
	if (_25317_path == jule::Str("", 0)) {
		return static_cast<jule::Str>(47LL);
	}
	return _25317_path;
}



inline jule::Str _147e135c0_dir(jule::Str _28412_path) {
	jule::Str _2859_vol = _147e135c0_volume_name(_28412_path);
	jule::I64 _28613_i = _28412_path.len() - 1LL;
	_iter_begin_5668290208:;
	if (!((_28613_i >= _2859_vol.len()) && (!(_147e090b0_is_path_sep(_28412_path[static_cast<jule::Int>(_28613_i)]))))) { goto _iter_end_5668290208; }
	{
		(_28613_i)--;
	}
	_iter_next_5668290208:;
	goto _iter_begin_5668290208;
	_iter_end_5668290208:;
	jule::Str _2909_dir = _147e135c0_clean(_28412_path.slice(static_cast<jule::Int>(_2859_vol.len()),static_cast<jule::Int>(_28613_i + 1LL)));
	if ((_2909_dir == jule::Str(".", 1)) && (_2859_vol.len() > 2LL)) {
		return _2859_vol;
	}
	return _2859_vol + _2909_dir;
}



inline jule::Str _147e135c0_volume_name(jule::Str _30220_path) {
	return _147e135c0_from_slash(_30220_path.slice(0LL,static_cast<jule::Int>(_147e090b0_volume_name_len(_30220_path))));
}



inline jule::Bool _147e090b0_is_path_sep(jule::U8 _4720_c) {
	return 47LL == _4720_c;
}



inline jule::Bool _147e090b0_is_abs(jule::Str _5215_path) {
	return _5215_path.has_prefix(jule::Str("/", 1));
}



inline jule::Int _147e090b0_volume_name_len(jule::Str _5620_path) {
	return 0LL;
}



inline std::tuple<jule::Str,jule::Bool> _147e090b0___abs(jule::Str _5810_path) {
	jule::Bool _5828_ok = jule::Bool();
	if (_147e090b0_is_abs(_5810_path)) {
		_5828_ok = true;
		return std::make_tuple(_147e135c0_clean(_5810_path),_5828_ok);
	}
	jule::Str _6210_wd;
	jule::Int _6214_err;
	std::tie(_6210_wd,_6214_err) = _147e65dd0_working_dir();
	if (_6214_err != 0LLU) {
		_5828_ok = false;
		return std::make_tuple(jule::Str("", 0),_5828_ok);
	}
	_5828_ok = true;
	return std::make_tuple(_147e090b0___join(jule::Slice<jule::Str>({_6210_wd,_5810_path})),_5828_ok);
}



inline jule::Str _147e090b0_str_join(jule::Slice<jule::Str> _6913_elems,jule::Str _6927_sep) {
	{
		auto _match_expr{ _6913_elems.len() };
		if (!((0LL) == _match_expr)) { goto _case_end_5668313248; }
		_case_begin_5668313248:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_5668312480;
		_case_end_5668313248:;
		if (!((1LL) == _match_expr)) { goto _case_end_5668313360; }
		_case_begin_5668313360:;
		{
			return _6913_elems[0LL];
		}
		goto _match_end_5668312480;
		_case_end_5668313360:;
		_match_end_5668312480:;
	}
	jule::Str _7513_s = _6913_elems[0LL];
	{
		auto __julec_range_expr = _6913_elems.slice(1LL);
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _147e090b0_elem = *__julec_range_begin;
			_iter_begin_5668315504:;
			{
				_7513_s+=_6927_sep + _147e090b0_elem;
			}
			_iter_next_5668315504:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _147e090b0_elem = *__julec_range_begin; goto _iter_begin_5668315504; }
			_iter_end_5668315504:;
		}
	}
	return _7513_s;
}



inline jule::Str _147e090b0___join(jule::Slice<jule::Str> _8211_elem) {
	{
		auto __julec_range_expr = _8211_elem;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _147e090b0_i = 0;
			jule::Str _147e090b0_e = *__julec_range_begin;
			_iter_begin_5668318320:;
			{
				if (_147e090b0_e != jule::Str("", 0)) {
					return _147e135c0_clean(_147e090b0_str_join(_8211_elem.slice(static_cast<jule::Int>(_147e090b0_i)),static_cast<jule::Str>(47LL)));
				}
			}
			_iter_next_5668318320:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_147e090b0_i; _147e090b0_e = *__julec_range_begin; goto _iter_begin_5668318320; }
			_iter_end_5668318320:;
		}
	}
	return jule::Str("", 0);
}



inline jule::Int _150714f70_leading_zeros(jule::Uint _4922_x) {
	return static_cast<jule::Int>(64LL - _150714f70_len(_4922_x));
}



inline jule::Int _150714f70_leading_zeros8(jule::U8 _5223_x) {
	return static_cast<jule::Int>(8LL - _150714f70_len8(_5223_x));
}



inline jule::Int _150714f70_leading_zeros16(jule::U16 _5524_x) {
	return static_cast<jule::Int>(16LL - _150714f70_len16(_5524_x));
}



inline jule::Int _150714f70_leading_zeros32(jule::U32 _5824_x) {
	return static_cast<jule::Int>(32LL - _150714f70_len32(_5824_x));
}



inline jule::Int _150714f70_leading_zeros64(jule::U64 _6124_x) {
	return static_cast<jule::Int>(64LL - _150714f70_len64(_6124_x));
}



inline jule::Int _150714f70_trailing_zeros(jule::Uint _8323_x) {
	if (false) {
		return static_cast<jule::Int>(_150714f70_trailing_zeros32(static_cast<jule::U32>(_8323_x)));
	}
	return static_cast<jule::Int>(_150714f70_trailing_zeros64(static_cast<jule::U64>(_8323_x)));
}



inline jule::Int _150714f70_trailing_zeros8(jule::U8 _9124_x) {
	return static_cast<jule::Int>(jule::Str("\b\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\4\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\5\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\4\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\6\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\4\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\5\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\4\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\a\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\4\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\5\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\4\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\6\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\4\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\5\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\4\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00", 256)[static_cast<jule::Int>(_9124_x)]);
}



inline jule::Int _150714f70_trailing_zeros16(jule::U16 _9625_x) {
	if (_9625_x == 0LL) {
		return 16LL;
	}
	return static_cast<jule::Int>(_150714f70_DE_BRUIJN32_TAB[static_cast<jule::Int>((static_cast<jule::U32>(_9625_x & (-(_9625_x))) * 125613361LL) >> 27LL)]);
}



inline jule::Int _150714f70_trailing_zeros32(jule::U32 _10525_x) {
	if (_10525_x == 0LL) {
		return 32LL;
	}
	return static_cast<jule::Int>(_150714f70_DE_BRUIJN32_TAB[static_cast<jule::Int>(((_10525_x & (-(_10525_x))) * 125613361LL) >> 27LL)]);
}



inline jule::Int _150714f70_trailing_zeros64(jule::U64 _11425_x) {
	if (_11425_x == 0LL) {
		return 64LL;
	}
	return static_cast<jule::Int>(_150714f70_DE_BRUIJN64_TAB[static_cast<jule::Int>(((_11425_x & (-(_11425_x))) * 285870213051353865LL) >> 58LL)]);
}



inline jule::Int _150714f70_ones_count(jule::Uint _14119_x) {
	if (false) {
		return static_cast<jule::Int>(_150714f70_ones_count32(static_cast<jule::U32>(_14119_x)));
	}
	return static_cast<jule::Int>(_150714f70_ones_count64(static_cast<jule::U64>(_14119_x)));
}



inline jule::Int _150714f70_ones_count8(jule::U8 _14920_x) {
	return static_cast<jule::Int>(jule::Str("\x00\1\1\2\1\2\2\3\1\2\2\3\2\3\3\4\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\4\5\5\6\5\6\6\a\5\6\6\a\6\a\a\b", 256)[static_cast<jule::Int>(_14920_x)]);
}



inline jule::Int _150714f70_ones_count16(jule::U16 _15421_x) {
	return static_cast<jule::Int>(jule::Str("\x00\1\1\2\1\2\2\3\1\2\2\3\2\3\3\4\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\4\5\5\6\5\6\6\a\5\6\6\a\6\a\a\b", 256)[static_cast<jule::Int>(_15421_x >> 8LL)] + jule::Str("\x00\1\1\2\1\2\2\3\1\2\2\3\2\3\3\4\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\4\5\5\6\5\6\6\a\5\6\6\a\6\a\a\b", 256)[static_cast<jule::Int>(_15421_x & 255LL)]);
}



inline jule::Int _150714f70_ones_count32(jule::U32 _15921_x) {
	return static_cast<jule::Int>(((jule::Str("\x00\1\1\2\1\2\2\3\1\2\2\3\2\3\3\4\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\4\5\5\6\5\6\6\a\5\6\6\a\6\a\a\b", 256)[static_cast<jule::Int>(_15921_x >> 24LL)] + jule::Str("\x00\1\1\2\1\2\2\3\1\2\2\3\2\3\3\4\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\4\5\5\6\5\6\6\a\5\6\6\a\6\a\a\b", 256)[static_cast<jule::Int>((_15921_x >> 16LL) & 255LL)]) + jule::Str("\x00\1\1\2\1\2\2\3\1\2\2\3\2\3\3\4\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\4\5\5\6\5\6\6\a\5\6\6\a\6\a\a\b", 256)[static_cast<jule::Int>((_15921_x >> 8LL) & 255LL)]) + jule::Str("\x00\1\1\2\1\2\2\3\1\2\2\3\2\3\3\4\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\4\5\5\6\5\6\6\a\5\6\6\a\6\a\a\b", 256)[static_cast<jule::Int>(_15921_x & 255LL)]);
}



inline jule::Int _150714f70_ones_count64(jule::U64 _16425_x) {
	
	_16425_x=static_cast<jule::U64>(((_16425_x >> 1LL) & 6148914691236517205LL) + (_16425_x & 6148914691236517205LL));
	_16425_x=static_cast<jule::U64>(((_16425_x >> 2LL) & 3689348814741910323LL) + (_16425_x & 3689348814741910323LL));
	_16425_x=static_cast<jule::U64>(((_16425_x >> 4LL) + _16425_x) & 1085102592571150095LL);
	_16425_x+=static_cast<jule::U64>(_16425_x >> 8LL);
	_16425_x+=static_cast<jule::U64>(_16425_x >> 16LL);
	_16425_x+=static_cast<jule::U64>(_16425_x >> 32LL);
	return static_cast<jule::Int>(static_cast<jule::Int>(_16425_x) & 127LLU);
}



inline jule::Uint _150714f70_rotate_left(jule::Uint _20020_x,jule::Int _20029_k) {
	if (false) {
		return static_cast<jule::Uint>(_150714f70_rotate_left32(static_cast<jule::U32>(_20020_x),_20029_k));
	}
	return static_cast<jule::Uint>(_150714f70_rotate_left64(static_cast<jule::U64>(_20020_x),_20029_k));
}



inline jule::U8 _150714f70_rotate_left8(jule::U8 _21121_x,jule::Int _21128_k) {
	
	jule::Uint _2139_s = static_cast<jule::Uint>(_21128_k) & 7LL;
	return static_cast<jule::U8>((_21121_x << _2139_s) | (_21121_x >> (8LL - _2139_s)));
}



inline jule::U16 _150714f70_rotate_left16(jule::U16 _22122_x,jule::Int _22130_k) {
	
	jule::Uint _2239_s = static_cast<jule::Uint>(_22130_k) & 15LL;
	return static_cast<jule::U16>((_22122_x << _2239_s) | (_22122_x >> (16LL - _2239_s)));
}



inline jule::U32 _150714f70_rotate_left32(jule::U32 _23122_x,jule::Int _23130_k) {
	
	jule::Uint _2339_s = static_cast<jule::Uint>(_23130_k) & 31LL;
	return static_cast<jule::U32>((_23122_x << _2339_s) | (_23122_x >> (32LL - _2339_s)));
}



inline jule::U64 _150714f70_rotate_left64(jule::U64 _24122_x,jule::Int _24130_k) {
	
	jule::Uint _2439_s = static_cast<jule::Uint>(_24130_k) & 63LL;
	return static_cast<jule::U64>((_24122_x << _2439_s) | (_24122_x >> (64LL - _2439_s)));
}



inline jule::Uint _150714f70_reverse(jule::Uint _25016_x) {
	if (false) {
		return static_cast<jule::Uint>(_150714f70_reverse32(static_cast<jule::U32>(_25016_x)));
	}
	return static_cast<jule::Uint>(_150714f70_reverse64(static_cast<jule::U64>(_25016_x)));
}



inline jule::U8 _150714f70_reverse8(jule::U8 _25817_x) {
	return static_cast<jule::U8>(jule::Str("\x00\302\200@\303\200 \302\240`\303\240\020\302\220P\303\2200\302\260p\303\260\b\302\210H\303\210(\302\250h\303\250\030\302\230X\303\2308\302\270x\303\270\4\302\204D\303\204$\302\244d\303\244\024\302\224T\303\2244\302\264t\303\264\f\302\214L\303\214,\302\254l\303\254\034\302\234\\\303\234<\302\274|\303\274\2\302\202B\303\202\"\302\242b\303\242\022\302\222R\303\2222\302\262r\303\262\n\302\212J\303\212*\302\252j\303\252\032\302\232Z\303\232:\302\272z\303\272\6\302\206F\303\206&\302\246f\303\246\026\302\226V\303\2266\302\266v\303\266\016\302\216N\303\216.\302\256n\303\256\036\302\236^\303\236>\302\276~\303\276\1\302\201A\303\201!\302\241a\303\241\021\302\221Q\303\2211\302\261q\303\261\t\302\211I\303\211)\302\251i\303\251\031\302\231Y\303\2319\302\271y\303\271\5\302\205E\303\205%\302\245e\303\245\025\302\225U\303\2255\302\265u\303\265\r\302\215M\303\215-\302\255m\303\255\035\302\235]\303\235=\302\275}\303\275\3\302\203C\303\203#\302\243c\303\243\023\302\223S\303\2233\302\263s\303\263\v\302\213K\303\213+\302\253k\303\253\033\302\233[\303\233;\302\273{\303\273\a\302\207G\303\207'\302\247g\303\247\027\302\227W\303\2277\302\267w\303\267\017\302\217O\303\217/\302\257o\303\257\037\302\237_\303\237?\302\277\177\303\277", 384)[static_cast<jule::Int>(_25817_x)]);
}



inline jule::U16 _150714f70_reverse16(jule::U16 _26318_x) {
	return static_cast<jule::U16>(static_cast<jule::U16>(jule::Str("\x00\302\200@\303\200 \302\240`\303\240\020\302\220P\303\2200\302\260p\303\260\b\302\210H\303\210(\302\250h\303\250\030\302\230X\303\2308\302\270x\303\270\4\302\204D\303\204$\302\244d\303\244\024\302\224T\303\2244\302\264t\303\264\f\302\214L\303\214,\302\254l\303\254\034\302\234\\\303\234<\302\274|\303\274\2\302\202B\303\202\"\302\242b\303\242\022\302\222R\303\2222\302\262r\303\262\n\302\212J\303\212*\302\252j\303\252\032\302\232Z\303\232:\302\272z\303\272\6\302\206F\303\206&\302\246f\303\246\026\302\226V\303\2266\302\266v\303\266\016\302\216N\303\216.\302\256n\303\256\036\302\236^\303\236>\302\276~\303\276\1\302\201A\303\201!\302\241a\303\241\021\302\221Q\303\2211\302\261q\303\261\t\302\211I\303\211)\302\251i\303\251\031\302\231Y\303\2319\302\271y\303\271\5\302\205E\303\205%\302\245e\303\245\025\302\225U\303\2255\302\265u\303\265\r\302\215M\303\215-\302\255m\303\255\035\302\235]\303\235=\302\275}\303\275\3\302\203C\303\203#\302\243c\303\243\023\302\223S\303\2233\302\263s\303\263\v\302\213K\303\213+\302\253k\303\253\033\302\233[\303\233;\302\273{\303\273\a\302\207G\303\207'\302\247g\303\247\027\302\227W\303\2277\302\267w\303\267\017\302\217O\303\217/\302\257o\303\257\037\302\237_\303\237?\302\277\177\303\277", 384)[static_cast<jule::Int>(_26318_x >> 8LL)]) | (static_cast<jule::U16>(jule::Str("\x00\302\200@\303\200 \302\240`\303\240\020\302\220P\303\2200\302\260p\303\260\b\302\210H\303\210(\302\250h\303\250\030\302\230X\303\2308\302\270x\303\270\4\302\204D\303\204$\302\244d\303\244\024\302\224T\303\2244\302\264t\303\264\f\302\214L\303\214,\302\254l\303\254\034\302\234\\\303\234<\302\274|\303\274\2\302\202B\303\202\"\302\242b\303\242\022\302\222R\303\2222\302\262r\303\262\n\302\212J\303\212*\302\252j\303\252\032\302\232Z\303\232:\302\272z\303\272\6\302\206F\303\206&\302\246f\303\246\026\302\226V\303\2266\302\266v\303\266\016\302\216N\303\216.\302\256n\303\256\036\302\236^\303\236>\302\276~\303\276\1\302\201A\303\201!\302\241a\303\241\021\302\221Q\303\2211\302\261q\303\261\t\302\211I\303\211)\302\251i\303\251\031\302\231Y\303\2319\302\271y\303\271\5\302\205E\303\205%\302\245e\303\245\025\302\225U\303\2255\302\265u\303\265\r\302\215M\303\215-\302\255m\303\255\035\302\235]\303\235=\302\275}\303\275\3\302\203C\303\203#\302\243c\303\243\023\302\223S\303\2233\302\263s\303\263\v\302\213K\303\213+\302\253k\303\253\033\302\233[\303\233;\302\273{\303\273\a\302\207G\303\207'\302\247g\303\247\027\302\227W\303\2277\302\267w\303\267\017\302\217O\303\217/\302\257o\303\257\037\302\237_\303\237?\302\277\177\303\277", 384)[static_cast<jule::Int>(_26318_x & 255LL)]) << 8LL));
}



inline jule::U32 _150714f70_reverse32(jule::U32 _26822_x) {
	
	_26822_x=static_cast<jule::U32>(((_26822_x >> 1LL) & 1431655765LL) | ((_26822_x & 1431655765LL) << 1LL));
	_26822_x=static_cast<jule::U32>(((_26822_x >> 2LL) & 858993459LL) | ((_26822_x & 858993459LL) << 2LL));
	_26822_x=static_cast<jule::U32>(((_26822_x >> 4LL) & 252645135LL) | ((_26822_x & 252645135LL) << 4LL));
	return static_cast<jule::U32>(_150714f70_reverse_bytes32(_26822_x));
}



inline jule::U64 _150714f70_reverse64(jule::U64 _27722_x) {
	
	_27722_x=static_cast<jule::U64>(((_27722_x >> 1LL) & 6148914691236517205LL) | ((_27722_x & 6148914691236517205LL) << 1LL));
	_27722_x=static_cast<jule::U64>(((_27722_x >> 2LL) & 3689348814741910323LL) | ((_27722_x & 3689348814741910323LL) << 2LL));
	_27722_x=static_cast<jule::U64>(((_27722_x >> 4LL) & 1085102592571150095LL) | ((_27722_x & 1085102592571150095LL) << 4LL));
	return static_cast<jule::U64>(_150714f70_reverse_bytes64(_27722_x));
}



inline jule::Uint _150714f70_reverse_bytes(jule::Uint _29022_x) {
	if (false) {
		return static_cast<jule::Uint>(_150714f70_reverse_bytes32(static_cast<jule::U32>(_29022_x)));
	}
	return static_cast<jule::Uint>(_150714f70_reverse_bytes64(static_cast<jule::U64>(_29022_x)));
}



inline jule::U16 _150714f70_reverse_bytes16(jule::U16 _30024_x) {
	return static_cast<jule::U16>((_30024_x >> 8LL) | (_30024_x << 8LL));
}



inline jule::U32 _150714f70_reverse_bytes32(jule::U32 _30728_x) {
	
	_30728_x=static_cast<jule::U32>(((_30728_x >> 8LL) & 16711935LL) | ((_30728_x & 16711935LL) << 8LL));
	return static_cast<jule::U32>((_30728_x >> 16LL) | (_30728_x << 16LL));
}



inline jule::U64 _150714f70_reverse_bytes64(jule::U64 _31628_x) {
	
	_31628_x=static_cast<jule::U64>(((_31628_x >> 8LL) & 71777214294589695LL) | ((_31628_x & 71777214294589695LL) << 8LL));
	_31628_x=static_cast<jule::U64>(((_31628_x >> 16LL) & 281470681808895LL) | ((_31628_x & 281470681808895LL) << 16LL));
	return static_cast<jule::U64>((_31628_x >> 32LL) | (_31628_x << 32LL));
}



inline jule::Int _150714f70_len(jule::Uint _32712_x) {
	if (false) {
		return static_cast<jule::Int>(_150714f70_len32(static_cast<jule::U32>(_32712_x)));
	}
	return static_cast<jule::Int>(_150714f70_len64(static_cast<jule::U64>(_32712_x)));
}



inline jule::Int _150714f70_len8(jule::U8 _33613_x) {
	return static_cast<jule::Int>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::Int>(_33613_x)]);
}



inline jule::Int _150714f70_len16(jule::U16 _34218_x) {
	jule::Int _34228_n = jule::Int();
	if (_34218_x >= 256LL) {
		_34218_x>>=8LL;
		_34228_n=8LL;
	}
	_34228_n = static_cast<jule::Int>(_34228_n + static_cast<jule::Int>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::Int>(_34218_x)]));
	return _34228_n;
}



inline jule::Int _150714f70_len32(jule::U32 _35218_x) {
	jule::Int _35228_n = jule::Int();
	if (_35218_x >= 65536LL) {
		_35218_x>>=16LL;
		_35228_n=16LL;
	}
	if (_35218_x >= 256LL) {
		_35218_x>>=8LL;
		_35228_n+=8LL;
	}
	_35228_n = static_cast<jule::Int>(_35228_n + static_cast<jule::Int>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::Int>(_35218_x)]));
	return _35228_n;
}



inline jule::Int _150714f70_len64(jule::U64 _36618_x) {
	jule::Int _36628_n = jule::Int();
	if (_36618_x >= 4294967296LL) {
		_36618_x>>=32LL;
		_36628_n=32LL;
	}
	if (_36618_x >= 65536LL) {
		_36618_x>>=16LL;
		_36628_n+=16LL;
	}
	if (_36618_x >= 256LL) {
		_36618_x>>=8LL;
		_36628_n+=8LL;
	}
	_36628_n = static_cast<jule::Int>(_36628_n + static_cast<jule::Int>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::Int>(_36618_x)]));
	return _36628_n;
}



inline std::tuple<jule::Uint,jule::Uint> _150714f70_add(jule::Uint _38912_x,jule::Uint _38921_y,jule::Uint _38930_carry) {
	jule::Uint _38956_carry_out = jule::Uint();
	jule::Uint _38945_sum = jule::Uint();
	if (false) {
		jule::U32 _39114_s32;
		jule::U32 _39119_c32;
		std::tie(_39114_s32,_39119_c32) = _150714f70_add32(static_cast<jule::U32>(_38912_x),static_cast<jule::U32>(_38921_y),static_cast<jule::U32>(_38930_carry));
		_38945_sum = static_cast<jule::Uint>(_39114_s32);
		_38956_carry_out = static_cast<jule::Uint>(_39119_c32);
		return std::make_tuple(_38945_sum,_38956_carry_out);
	}
	jule::U64 _39410_s64;
	jule::U64 _39415_c64;
	std::tie(_39410_s64,_39415_c64) = _150714f70_add64(static_cast<jule::U64>(_38912_x),static_cast<jule::U64>(_38921_y),static_cast<jule::U64>(_38930_carry));
	_38945_sum = static_cast<jule::Uint>(_39410_s64);
	_38956_carry_out = static_cast<jule::Uint>(_39415_c64);
	return std::make_tuple(_38945_sum,_38956_carry_out);
}



inline std::tuple<jule::U32,jule::U32> _150714f70_add32(jule::U32 _40314_x,jule::U32 _40322_y,jule::U32 _40330_carry) {
	jule::U32 _40354_carryout = jule::U32();
	jule::U32 _40344_sum = jule::U32();
	jule::U64 _4049_sum64 = (static_cast<jule::U64>(_40314_x) + static_cast<jule::U64>(_40322_y)) + static_cast<jule::U64>(_40330_carry);
	_40344_sum=static_cast<jule::U32>(_4049_sum64);
	_40354_carryout=static_cast<jule::U32>(_4049_sum64 >> 32LL);
	return std::make_tuple(_40344_sum,_40354_carryout);
}



inline std::tuple<jule::U64,jule::U64> _150714f70_add64(jule::U64 _41514_x,jule::U64 _41522_y,jule::U64 _41530_carry) {
	jule::U64 _41554_carryout = jule::U64();
	jule::U64 _41544_sum = jule::U64();
	_41544_sum=static_cast<jule::U64>((_41514_x + _41522_y) + _41530_carry);
	_41554_carryout=static_cast<jule::U64>(((_41514_x & _41522_y) | ((_41514_x | _41522_y) & (~(_41544_sum)))) >> 63LL);
	return std::make_tuple(_41544_sum,_41554_carryout);
}



inline std::tuple<jule::Uint,jule::Uint> _150714f70_sub(jule::Uint _43112_x,jule::Uint _43121_y,jule::Uint _43130_borrow) {
	jule::Uint _43158_borrow_out = jule::Uint();
	jule::Uint _43146_diff = jule::Uint();
	if (false) {
		jule::U32 _43314_d32;
		jule::U32 _43319_b32;
		std::tie(_43314_d32,_43319_b32) = _150714f70_sub32(static_cast<jule::U32>(_43112_x),static_cast<jule::U32>(_43121_y),static_cast<jule::U32>(_43130_borrow));
		_43146_diff = static_cast<jule::Uint>(_43314_d32);
		_43158_borrow_out = static_cast<jule::Uint>(_43319_b32);
		return std::make_tuple(_43146_diff,_43158_borrow_out);
	}
	jule::U64 _43610_d64;
	jule::U64 _43615_b64;
	std::tie(_43610_d64,_43615_b64) = _150714f70_sub64(static_cast<jule::U64>(_43112_x),static_cast<jule::U64>(_43121_y),static_cast<jule::U64>(_43130_borrow));
	_43146_diff = static_cast<jule::Uint>(_43610_d64);
	_43158_borrow_out = static_cast<jule::Uint>(_43615_b64);
	return std::make_tuple(_43146_diff,_43158_borrow_out);
}



inline std::tuple<jule::U32,jule::U32> _150714f70_sub32(jule::U32 _44514_x,jule::U32 _44522_y,jule::U32 _44530_borrow) {
	jule::U32 _44556_borrowout = jule::U32();
	jule::U32 _44545_diff = jule::U32();
	_44545_diff=static_cast<jule::U32>((_44514_x - _44522_y) - _44530_borrow);
	_44556_borrowout=static_cast<jule::U32>((((~(_44514_x)) & _44522_y) | ((~(_44514_x ^ _44522_y)) & _44545_diff)) >> 31LL);
	return std::make_tuple(_44545_diff,_44556_borrowout);
}



inline std::tuple<jule::U64,jule::U64> _150714f70_sub64(jule::U64 _46014_x,jule::U64 _46022_y,jule::U64 _46030_borrow) {
	jule::U64 _46056_borrowout = jule::U64();
	jule::U64 _46045_diff = jule::U64();
	_46045_diff=static_cast<jule::U64>((_46014_x - _46022_y) - _46030_borrow);
	_46056_borrowout=static_cast<jule::U64>((((~(_46014_x)) & _46022_y) | ((~(_46014_x ^ _46022_y)) & _46045_diff)) >> 63LL);
	return std::make_tuple(_46045_diff,_46056_borrowout);
}



inline std::tuple<jule::Uint,jule::Uint> _150714f70_mul(jule::Uint _47412_x,jule::Uint _47421_y) {
	jule::Uint _47442_lo = jule::Uint();
	jule::Uint _47432_hi = jule::Uint();
	if (false) {
		jule::U32 _47614_h;
		jule::U32 _47617_l;
		std::tie(_47614_h,_47617_l) = _150714f70_mul32(static_cast<jule::U32>(_47412_x),static_cast<jule::U32>(_47421_y));
		_47432_hi = static_cast<jule::Uint>(_47614_h);
		_47442_lo = static_cast<jule::Uint>(_47617_l);
		return std::make_tuple(_47432_hi,_47442_lo);
	}
	jule::U64 _47910_h;
	jule::U64 _47913_l;
	std::tie(_47910_h,_47913_l) = _150714f70_mul64(static_cast<jule::U64>(_47412_x),static_cast<jule::U64>(_47421_y));
	_47432_hi = static_cast<jule::Uint>(_47910_h);
	_47442_lo = static_cast<jule::Uint>(_47913_l);
	return std::make_tuple(_47432_hi,_47442_lo);
}



inline std::tuple<jule::U32,jule::U32> _150714f70_mul32(jule::U32 _48814_x,jule::U32 _48822_y) {
	jule::U32 _48841_lo = jule::U32();
	jule::U32 _48832_hi = jule::U32();
	jule::U64 _4899_tmp = static_cast<jule::U64>(_48814_x) * static_cast<jule::U64>(_48822_y);
	std::tie(_48832_hi,_48841_lo) = std::make_tuple(static_cast<jule::U32>(_4899_tmp >> 32LL),static_cast<jule::U32>(_4899_tmp));
	return std::make_tuple(_48832_hi,_48841_lo);
}



inline std::tuple<jule::U64,jule::U64> _150714f70_mul64(jule::U64 _49914_x,jule::U64 _49922_y) {
	jule::U64 _49941_lo = jule::U64();
	jule::U64 _49932_hi = jule::U64();
	
	jule::U64 _5019_x0 = _49914_x & 4294967295LL;
	jule::U64 _5029_x1 = _49914_x >> 32LL;
	jule::U64 _5039_y0 = _49922_y & 4294967295LL;
	jule::U64 _5049_y1 = _49922_y >> 32LL;
	jule::U64 _5059_w0 = _5019_x0 * _5039_y0;
	jule::U64 _5069_t = (_5029_x1 * _5039_y0) + (_5059_w0 >> 32LL);
	jule::U64 _50713_w1 = _5069_t & 4294967295LL;
	jule::U64 _5089_w2 = _5069_t >> 32LL;
	_50713_w1+=static_cast<jule::U64>(_5019_x0 * _5049_y1);
	_49932_hi=static_cast<jule::U64>(((_5029_x1 * _5049_y1) + _5089_w2) + (_50713_w1 >> 32LL));
	_49941_lo=static_cast<jule::U64>(_49914_x * _49922_y);
	return std::make_tuple(_49932_hi,_49941_lo);
}



inline std::tuple<jule::Uint,jule::Uint> _150714f70_div(jule::Uint _52112_hi,jule::Uint _52122_lo,jule::Uint _52132_y) {
	jule::Uint _52154_rem = jule::Uint();
	jule::Uint _52143_quo = jule::Uint();
	if (false) {
		jule::U32 _52314_q;
		jule::U32 _52317_r;
		std::tie(_52314_q,_52317_r) = _150714f70_div32(static_cast<jule::U32>(_52112_hi),static_cast<jule::U32>(_52122_lo),static_cast<jule::U32>(_52132_y));
		_52143_quo = static_cast<jule::Uint>(_52314_q);
		_52154_rem = static_cast<jule::Uint>(_52317_r);
		return std::make_tuple(_52143_quo,_52154_rem);
	}
	jule::U64 _52610_q;
	jule::U64 _52613_r;
	std::tie(_52610_q,_52613_r) = _150714f70_div64(static_cast<jule::U64>(_52112_hi),static_cast<jule::U64>(_52122_lo),static_cast<jule::U64>(_52132_y));
	_52143_quo = static_cast<jule::Uint>(_52610_q);
	_52154_rem = static_cast<jule::Uint>(_52613_r);
	return std::make_tuple(_52143_quo,_52154_rem);
}



inline std::tuple<jule::U32,jule::U32> _150714f70_div32(jule::U32 _53414_hi,jule::U32 _53423_lo,jule::U32 _53432_y) {
	jule::U32 _53452_rem = jule::U32();
	jule::U32 _53442_quo = jule::U32();
	if (_53432_y == 0LL) {
		jule::panic(_150715130_DIVIDE_ERROR);
	}
	if ((_53432_y != 0LL) && (_53432_y <= _53414_hi)) {
		jule::panic(_150715130_OVERFLOW_ERROR);
	}
	jule::U64 _5419_z = (static_cast<jule::U64>(_53414_hi) << 32LL) | static_cast<jule::U64>(_53423_lo);
	std::tie(_53442_quo,_53452_rem) = std::make_tuple(static_cast<jule::U32>(jule::div(_5419_z,static_cast<jule::U64>(_53432_y))),static_cast<jule::U32>(jule::mod(_5419_z,static_cast<jule::U64>(_53432_y))));
	return std::make_tuple(_53442_quo,_53452_rem);
}



inline std::tuple<jule::U64,jule::U64> _150714f70_div64(jule::U64 _55014_hi,jule::U64 _55023_lo,jule::U64 _55036_y) {
	jule::U64 _55056_rem = jule::U64();
	jule::U64 _55046_quo = jule::U64();
	
	
	if (_55036_y == 0LL) {
		jule::panic(_150715130_DIVIDE_ERROR);
	}
	if (_55036_y <= _55014_hi) {
		jule::panic(_150715130_OVERFLOW_ERROR);
	}
	jule::Uint _5609_s = static_cast<jule::Uint>(_150714f70_leading_zeros64(_55036_y));
	_55036_y<<=_5609_s;
	jule::U64 _5639_yn1 = _55036_y >> 32LL;
	jule::U64 _5649_yn0 = _55036_y & 4294967295LL;
	jule::U64 _5659_un32 = (_55014_hi << _5609_s) | (_55023_lo >> (64LL - _5609_s));
	jule::U64 _5669_un10 = _55023_lo << _5609_s;
	jule::U64 _5679_un1 = _5669_un10 >> 32LL;
	jule::U64 _5689_un0 = _5669_un10 & 4294967295LL;
	jule::U64 _56913_q1 = jule::div(_5659_un32,_5639_yn1);
	jule::U64 _57013_rhat = _5659_un32 - (_56913_q1 * _5639_yn1);
	_iter_begin_5668728672:;
	if (!((_56913_q1 >= 4294967296LL) || ((_56913_q1 * _5649_yn0) > ((4294967296LL * _57013_rhat) + _5679_un1)))) { goto _iter_end_5668728672; }
	{
		(_56913_q1)--;
		_57013_rhat+=_5639_yn1;
		if (_57013_rhat >= 4294967296LL) {
			goto _iter_end_5668728672;
		}
	}
	_iter_next_5668728672:;
	goto _iter_begin_5668728672;
	_iter_end_5668728672:;
	jule::U64 _5809_un21 = ((_5659_un32 * 4294967296LL) + _5679_un1) - (_56913_q1 * _55036_y);
	jule::U64 _58113_q0 = jule::div(_5809_un21,_5639_yn1);
	_57013_rhat=static_cast<jule::U64>(_5809_un21 - (_58113_q0 * _5639_yn1));
	_iter_begin_5668732336:;
	if (!((_58113_q0 >= 4294967296LL) || ((_58113_q0 * _5649_yn0) > ((4294967296LL * _57013_rhat) + _5689_un0)))) { goto _iter_end_5668732336; }
	{
		(_58113_q0)--;
		_57013_rhat+=_5639_yn1;
		if (_57013_rhat >= 4294967296LL) {
			goto _iter_end_5668732336;
		}
	}
	_iter_next_5668732336:;
	goto _iter_begin_5668732336;
	_iter_end_5668732336:;
	_55046_quo = static_cast<jule::U64>((_56913_q1 * 4294967296LL) + _58113_q0);
	_55056_rem = static_cast<jule::U64>((((_5809_un21 * 4294967296LL) + _5689_un0) - (_58113_q0 * _55036_y)) >> _5609_s);
	return std::make_tuple(_55046_quo,_55056_rem);
}



inline jule::Uint _150714f70_rem(jule::Uint _59812_hi,jule::Uint _59822_lo,jule::Uint _59832_y) {
	if (false) {
		return static_cast<jule::Uint>(_150714f70_rem32(static_cast<jule::U32>(_59812_hi),static_cast<jule::U32>(_59822_lo),static_cast<jule::U32>(_59832_y)));
	}
	return static_cast<jule::Uint>(_150714f70_rem64(static_cast<jule::U64>(_59812_hi),static_cast<jule::U64>(_59822_lo),static_cast<jule::U64>(_59832_y)));
}



inline jule::U32 _150714f70_rem32(jule::U32 _60814_hi,jule::U32 _60823_lo,jule::U32 _60832_y) {
	return static_cast<jule::U32>(jule::mod((static_cast<jule::U64>(_60814_hi) << 32LL) | static_cast<jule::U64>(_60823_lo),static_cast<jule::U64>(_60832_y)));
}



inline jule::U64 _150714f70_rem64(jule::U64 _61514_hi,jule::U64 _61523_lo,jule::U64 _61532_y) {
	jule::U64 _62213_rem;
	std::tie(std::ignore,_62213_rem) = _150714f70_div64(static_cast<jule::U64>(jule::mod(_61514_hi,_61532_y)),_61523_lo,_61532_y);
	return _62213_rem;
}



inline jule::F64 _1501bd730_atanh(jule::F64 _7818_x) {
	
	{
		if (!((_7818_x < -1LL) || (_7818_x > 1LL) || (_15022f040_is_nan(_7818_x)))) { goto _case_end_5669035968; }
		_case_begin_5669035968:;
		{
			return static_cast<jule::F64>(_15022f040_nan());
		}
		goto _match_end_5669035536;
		_case_end_5669035968:;
		if (!((_7818_x == 1LL))) { goto _case_end_5669036096; }
		_case_begin_5669036096:;
		{
			return static_cast<jule::F64>(_15022f040_inf(1LL));
		}
		goto _match_end_5669035536;
		_case_end_5669036096:;
		if (!((_7818_x == -1LL))) { goto _case_end_5669036208; }
		_case_begin_5669036208:;
		{
			return static_cast<jule::F64>(_15022f040_inf(-1LL));
		}
		goto _match_end_5669035536;
		_case_end_5669036208:;
		_match_end_5669035536:;
	}
	jule::Bool _8913_sign = false;
	if (_7818_x < 0LL) {
		_7818_x=static_cast<jule::F64>((-(_7818_x)));
		_8913_sign=true;
	}
	jule::F64 _9413_temp = 0LL;
	{
		if (!((_7818_x < 0.000000003725290298461914))) { goto _case_end_5669044976; }
		_case_begin_5669044976:;
		{
			_9413_temp=_7818_x;
		}
		goto _match_end_5669043408;
		_case_end_5669044976:;
		if (!((_7818_x < 0.5))) { goto _case_end_5669044560; }
		_case_begin_5669044560:;
		{
			_9413_temp=static_cast<jule::F64>(_7818_x + _7818_x);
			_9413_temp=static_cast<jule::F64>(0.5 * _15055fc00_log1p(static_cast<jule::F64>(_9413_temp + jule::div(_9413_temp * _7818_x,1LL - _7818_x))));
		}
		goto _match_end_5669043408;
		_case_end_5669044560:;
		_case_begin_5669043536:;
		{
			_9413_temp=static_cast<jule::F64>(0.5 * _15055fc00_log1p(static_cast<jule::F64>(jule::div(_7818_x + _7818_x,1LL - _7818_x))));
		}
		goto _match_end_5669043408;
		_case_end_5669043536:;
		_match_end_5669043408:;
	}
	if (_8913_sign) {
		_9413_temp=static_cast<jule::F64>((-(_9413_temp)));
	}
	return _9413_temp;
}



inline jule::U32 _1501bd670_f32_bits(jule::F32 _4117_f) {
	return (*(((jule::U32*)((&(_4117_f))))));
}



inline jule::F32 _1501bd670_f32_from_bits(jule::U32 _4722_b) {
	return (*(((jule::F32*)((&(_4722_b))))));
}



inline jule::U64 _1501bd670_f64_bits(jule::F64 _5217_f) {
	return (*(((jule::U64*)((&(_5217_f))))));
}



inline jule::F64 _1501bd670_f64_from_bits(jule::U64 _5822_b) {
	return (*(((jule::F64*)((&(_5822_b))))));
}



inline jule::F64 _1501de350_cos(jule::F64 _14816_x) {
	
	
	
	if (_15022f040_is_nan(_14816_x) || _15022f040_is_inf(_14816_x,0LL)) {
		return static_cast<jule::F64>(_15022f040_nan());
	}
	jule::Bool _15813_sign = false;
	_14816_x=static_cast<jule::F64>(_1502fb3e0_abs(_14816_x));
	jule::U64 _16113_j = 0LLU;
	jule::F64 _16213_y = 0LL;
	jule::F64 _16313_z = 0LL;
	if (_14816_x >= 536870912LL) {
		std::tie(_16113_j,_16313_z) = _1501e0f70_trig_reduce(_14816_x);
	} else {
		_16113_j=static_cast<jule::U64>(_14816_x * 1.2732395447351628);
		_16213_y=static_cast<jule::F64>(_16113_j);
		if ((_16113_j & 1LL) == 1LL) {
			(_16113_j)++;
			(_16213_y)++;
		}
		_16113_j&=7LL;
		_16313_z=static_cast<jule::F64>(((_14816_x - (_16213_y * 0.7853981256484985)) - (_16213_y * 0.00000003774894707930798)) - (_16213_y * 0.0000000000000026951514290790595));
	}
	if (_16113_j > 3LL) {
		_16113_j-=4LL;
		_15813_sign=(!(_15813_sign));
	}
	if (_16113_j > 1LL) {
		_15813_sign=(!(_15813_sign));
	}
	jule::F64 _1879_zz = _16313_z * _16313_z;
	if ((_16113_j == 1LL) || (_16113_j == 2LL)) {
		_16213_y=static_cast<jule::F64>(_16313_z + ((_16313_z * _1879_zz) * ((((((((((_1501de350__SIN[0LL] * _1879_zz) + _1501de350__SIN[1LL]) * _1879_zz) + _1501de350__SIN[2LL]) * _1879_zz) + _1501de350__SIN[3LL]) * _1879_zz) + _1501de350__SIN[4LL]) * _1879_zz) + _1501de350__SIN[5LL])));
	} else {
		_16213_y=static_cast<jule::F64>((1LL - (0.5 * _1879_zz)) + ((_1879_zz * _1879_zz) * ((((((((((_1501de350__COS[0LL] * _1879_zz) + _1501de350__COS[1LL]) * _1879_zz) + _1501de350__COS[2LL]) * _1879_zz) + _1501de350__COS[3LL]) * _1879_zz) + _1501de350__COS[4LL]) * _1879_zz) + _1501de350__COS[5LL])));
	}
	if (_15813_sign) {
		_16213_y=static_cast<jule::F64>((-(_16213_y)));
	}
	return _16213_y;
}



inline jule::F64 _1501de350_sin(jule::F64 _20516_x) {
	
	
	
	{
		if (!((_20516_x == 0LL) || (_15022f040_is_nan(_20516_x)))) { goto _case_end_5669088192; }
		_case_begin_5669088192:;
		{
			return _20516_x;
		}
		goto _match_end_5669087904;
		_case_end_5669088192:;
		if (!((_15022f040_is_inf(_20516_x,0LL)))) { goto _case_end_5669088304; }
		_case_begin_5669088304:;
		{
			return static_cast<jule::F64>(_15022f040_nan());
		}
		goto _match_end_5669087904;
		_case_end_5669088304:;
		_match_end_5669087904:;
	}
	jule::Bool _21813_sign = false;
	if (_20516_x < 0LL) {
		_20516_x=static_cast<jule::F64>((-(_20516_x)));
		_21813_sign=true;
	}
	jule::U64 _22413_j = 0LLU;
	jule::F64 _22513_y = 0LL;
	jule::F64 _22613_z = 0LL;
	if (_20516_x >= 536870912LL) {
		std::tie(_22413_j,_22613_z) = _1501e0f70_trig_reduce(_20516_x);
	} else {
		_22413_j=static_cast<jule::U64>(_20516_x * 1.2732395447351628);
		_22513_y=static_cast<jule::F64>(_22413_j);
		if ((_22413_j & 1LL) == 1LL) {
			(_22413_j)++;
			(_22513_y)++;
		}
		_22413_j&=7LL;
		_22613_z=static_cast<jule::F64>(((_20516_x - (_22513_y * 0.7853981256484985)) - (_22513_y * 0.00000003774894707930798)) - (_22513_y * 0.0000000000000026951514290790595));
	}
	if (_22413_j > 3LL) {
		_21813_sign=(!(_21813_sign));
		_22413_j-=4LL;
	}
	jule::F64 _2469_zz = _22613_z * _22613_z;
	if ((_22413_j == 1LL) || (_22413_j == 2LL)) {
		_22513_y=static_cast<jule::F64>((1LL - (0.5 * _2469_zz)) + ((_2469_zz * _2469_zz) * ((((((((((_1501de350__COS[0LL] * _2469_zz) + _1501de350__COS[1LL]) * _2469_zz) + _1501de350__COS[2LL]) * _2469_zz) + _1501de350__COS[3LL]) * _2469_zz) + _1501de350__COS[4LL]) * _2469_zz) + _1501de350__COS[5LL])));
	} else {
		_22513_y=static_cast<jule::F64>(_22613_z + ((_22613_z * _2469_zz) * ((((((((((_1501de350__SIN[0LL] * _2469_zz) + _1501de350__SIN[1LL]) * _2469_zz) + _1501de350__SIN[2LL]) * _2469_zz) + _1501de350__SIN[3LL]) * _2469_zz) + _1501de350__SIN[4LL]) * _2469_zz) + _1501de350__SIN[5LL])));
	}
	if (_21813_sign) {
		_22513_y=static_cast<jule::F64>((-(_22513_y)));
	}
	return _22513_y;
}



inline jule::F64 _1501de7e0_tan(jule::F64 _11316_x) {
	
	
	
	{
		if (!((_11316_x == 0LL) || (_15022f040_is_nan(_11316_x)))) { goto _case_end_5669116064; }
		_case_begin_5669116064:;
		{
			return _11316_x;
		}
		goto _match_end_5669115776;
		_case_end_5669116064:;
		if (!((_15022f040_is_inf(_11316_x,0LL)))) { goto _case_end_5669116176; }
		_case_begin_5669116176:;
		{
			return static_cast<jule::F64>(_15022f040_nan());
		}
		goto _match_end_5669115776;
		_case_end_5669116176:;
		_match_end_5669115776:;
	}
	jule::Bool _12613_sign = false;
	if (_11316_x < 0LL) {
		_11316_x=static_cast<jule::F64>((-(_11316_x)));
		_12613_sign=true;
	}
	jule::U64 _13113_j = 0LLU;
	jule::F64 _13213_y = 0LL;
	jule::F64 _13313_z = 0LL;
	if (_11316_x >= 536870912LL) {
		std::tie(_13113_j,_13313_z) = _1501e0f70_trig_reduce(_11316_x);
	} else {
		_13113_j=static_cast<jule::U64>(_11316_x * 1.2732395447351628);
		_13213_y=static_cast<jule::F64>(_13113_j);
		if ((_13113_j & 1LL) == 1LL) {
			(_13113_j)++;
			(_13213_y)++;
		}
		_13313_z=static_cast<jule::F64>(((_11316_x - (_13213_y * 0.7853981256484985)) - (_13213_y * 0.00000003774894707930798)) - (_13213_y * 0.0000000000000026951514290790595));
	}
	jule::F64 _1489_zz = _13313_z * _13313_z;
	if (_1489_zz > 0.00000000000001) {
		_13213_y=static_cast<jule::F64>(_13313_z + (_13313_z * jule::div(_1489_zz * ((((_1501de7e0__TAN_P[0LL] * _1489_zz) + _1501de7e0__TAN_P[1LL]) * _1489_zz) + _1501de7e0__TAN_P[2LL]),((((((_1489_zz + _1501de7e0__TAN_Q[1LL]) * _1489_zz) + _1501de7e0__TAN_Q[2LL]) * _1489_zz) + _1501de7e0__TAN_Q[3LL]) * _1489_zz) + _1501de7e0__TAN_Q[4LL])));
	} else {
		_13213_y=_13313_z;
	}
	if ((_13113_j & 2LL) == 2LL) {
		_13213_y=static_cast<jule::F64>(jule::div(-1LL,_13213_y));
	}
	if (_12613_sign) {
		_13213_y=static_cast<jule::F64>((-(_13213_y)));
	}
	return _13213_y;
}



inline jule::F64 _1501de520_mod(jule::F64 _5212_x,jule::F64 _5224_y) {
	if ((((_5224_y == 0LL) || _15022f040_is_inf(_5212_x,0LL)) || _15022f040_is_nan(_5212_x)) || _15022f040_is_nan(_5224_y)) {
		return static_cast<jule::F64>(_15022f040_nan());
	}
	_5224_y=static_cast<jule::F64>(_1502fb3e0_abs(_5224_y));
	jule::F64 _5810_yfr;
	jule::Int _5815_yexp;
	std::tie(_5810_yfr,_5815_yexp) = _150213500_frexp(_5224_y);
	jule::F64 _5913_r = _5212_x;
	if (_5212_x < 0LL) {
		_5913_r=static_cast<jule::F64>((-(_5212_x)));
	}
	_iter_begin_5669145200:;
	if (!(_5913_r >= _5224_y)) { goto _iter_end_5669145200; }
	{
		jule::F64 _6514_rfr;
		jule::Int _6523_rexp;
		std::tie(_6514_rfr,_6523_rexp) = _150213500_frexp(_5913_r);
		if (_6514_rfr < _5810_yfr) {
			_6523_rexp=static_cast<jule::Int>(_6523_rexp - 1LL);
		}
		_5913_r=static_cast<jule::F64>(_5913_r - _1503e2220_ldexp(_5224_y,static_cast<jule::Int>(_6523_rexp - _5815_yexp)));
	}
	_iter_next_5669145200:;
	goto _iter_begin_5669145200;
	_iter_end_5669145200:;
	if (_5212_x < 0LL) {
		_5913_r=static_cast<jule::F64>((-(_5913_r)));
	}
	return _5913_r;
}



inline std::tuple<jule::F64,jule::Int> _150213500_frexp(jule::F64 _4718_f) {
	jule::Int _4739_exp = jule::Int();
	jule::F64 _4728_frac = jule::F64();
	{
		if (!((_4718_f == 0LL))) { goto _case_end_5669152144; }
		_case_begin_5669152144:;
		{
			_4728_frac = _4718_f;
			_4739_exp = 0LL;
			return std::make_tuple(_4728_frac,_4739_exp);
		}
		goto _match_end_5669151936;
		_case_end_5669152144:;
		if (!((_15022f040_is_inf(_4718_f,0LL)) || (_15022f040_is_nan(_4718_f)))) { goto _case_end_5669152272; }
		_case_begin_5669152272:;
		{
			_4728_frac = _4718_f;
			_4739_exp = 0LL;
			return std::make_tuple(_4728_frac,_4739_exp);
		}
		goto _match_end_5669151936;
		_case_end_5669152272:;
		_match_end_5669151936:;
	}
	std::tie(_4718_f,_4739_exp) = _15022f040_normalize(_4718_f);
	jule::U64 _5613_x = _1501bd670_f64_bits(_4718_f);
	_4739_exp+=static_cast<jule::Int>((static_cast<jule::Int>((_5613_x >> 52LL) & 2047LL) - 1023LL) + 1LL);
	_5613_x=static_cast<jule::U64>(_5613_x & -9218868437227405313LL);
	_5613_x|=4602678819172646912LL;
	_4728_frac=static_cast<jule::F64>(_1501bd670_f64_from_bits(_5613_x));
	return std::make_tuple(_4728_frac,_4739_exp);
}



inline jule::F32 _150221f00_nextafter32(jule::F32 _4420_x,jule::F32 _4428_y) {
	jule::F32 _4438_r = jule::F32();
	{
		if (!((_15022f040_is_nan(static_cast<jule::F64>(_4420_x))) || (_15022f040_is_nan(static_cast<jule::F64>(_4428_y))))) { goto _case_end_5669163824; }
		_case_begin_5669163824:;
		{
			_4438_r=static_cast<jule::F32>(_15022f040_nan());
		}
		goto _match_end_5669162656;
		_case_end_5669163824:;
		if (!((_4420_x == _4428_y))) { goto _case_end_5669164064; }
		_case_begin_5669164064:;
		{
			_4438_r=_4420_x;
		}
		goto _match_end_5669162656;
		_case_end_5669164064:;
		if (!((_4420_x == 0LL))) { goto _case_end_5669165296; }
		_case_begin_5669165296:;
		{
			_4438_r=static_cast<jule::F32>(_1501dffc0_copysign(static_cast<jule::F64>(_1501bd670_f32_from_bits(1LLU)),static_cast<jule::F64>(_4428_y)));
		}
		goto _match_end_5669162656;
		_case_end_5669165296:;
		if (!(((_4428_y > _4420_x) == (_4420_x > 0LL)))) { goto _case_end_5669163104; }
		_case_begin_5669163104:;
		{
			_4438_r=static_cast<jule::F32>(_1501bd670_f32_from_bits(static_cast<jule::U32>(_1501bd670_f32_bits(_4420_x) + 1LL)));
		}
		goto _match_end_5669162656;
		_case_end_5669163104:;
		_case_begin_5669162800:;
		{
			_4438_r=static_cast<jule::F32>(_1501bd670_f32_from_bits(static_cast<jule::U32>(_1501bd670_f32_bits(_4420_x) - 1LL)));
		}
		goto _match_end_5669162656;
		_case_end_5669162800:;
		_match_end_5669162656:;
	}
	return _4438_r;
}



inline jule::F64 _150221f00_nextafter(jule::F64 _6618_x,jule::F64 _6626_y) {
	jule::F64 _6636_r = jule::F64();
	{
		if (!((_15022f040_is_nan(_6618_x)) || (_15022f040_is_nan(_6626_y)))) { goto _case_end_5669174656; }
		_case_begin_5669174656:;
		{
			_6636_r=static_cast<jule::F64>(_15022f040_nan());
		}
		goto _match_end_5669173488;
		_case_end_5669174656:;
		if (!((_6618_x == _6626_y))) { goto _case_end_5669174992; }
		_case_begin_5669174992:;
		{
			_6636_r=_6618_x;
		}
		goto _match_end_5669173488;
		_case_end_5669174992:;
		if (!((_6618_x == 0LL))) { goto _case_end_5669176064; }
		_case_begin_5669176064:;
		{
			_6636_r=static_cast<jule::F64>(_1501dffc0_copysign(static_cast<jule::F64>(_1501bd670_f64_from_bits(1LLU)),_6626_y));
		}
		goto _match_end_5669173488;
		_case_end_5669176064:;
		if (!(((_6626_y > _6618_x) == (_6618_x > 0LL)))) { goto _case_end_5669176176; }
		_case_begin_5669176176:;
		{
			_6636_r=static_cast<jule::F64>(_1501bd670_f64_from_bits(static_cast<jule::U64>(_1501bd670_f64_bits(_6618_x) + 1LL)));
		}
		goto _match_end_5669173488;
		_case_end_5669176176:;
		_case_begin_5669173632:;
		{
			_6636_r=static_cast<jule::F64>(_1501bd670_f64_from_bits(static_cast<jule::U64>(_1501bd670_f64_bits(_6618_x) - 1LL)));
		}
		goto _match_end_5669173488;
		_case_end_5669173632:;
		_match_end_5669173488:;
	}
	return _6636_r;
}



inline jule::F64 _1501dffc0_copysign(jule::F64 _3917_f,jule::F64 _3925_sign) {
	
	return static_cast<jule::F64>(_1501bd670_f64_from_bits(static_cast<jule::U64>((_1501bd670_f64_bits(_3917_f) & 9223372036854775807LLU) | (_1501bd670_f64_bits(_3925_sign) & 9223372036854775808LLU))));
}



inline std::tuple<jule::U64,jule::F64> _1501e0f70_trig_reduce(jule::F64 _6020_x) {
	jule::F64 _6038_z = jule::F64();
	jule::U64 _6030_j = jule::U64();
	
	if (_6020_x < 0.7853981633974483) {
		_6030_j = 0LL;
		_6038_z = _6020_x;
		return std::make_tuple(_6030_j,_6038_z);
	}
	jule::U64 _6713_ix = _1501bd670_f64_bits(_6020_x);
	jule::Int _689_exp = (static_cast<jule::Int>((_6713_ix >> 52LL) & 2047LL) - 1023LL) - 52LL;
	_6713_ix=static_cast<jule::U64>(_6713_ix & -9218868437227405313LL);
	_6713_ix|=4503599627370496LL;
	jule::Uint _7410_digit = jule::div(static_cast<jule::Uint>(_689_exp + 61LL),64LL);
	jule::Uint _7417_bitshift = jule::mod(static_cast<jule::Uint>(_689_exp + 61LL),64LL);
	std::tie(_7410_digit,_7417_bitshift) = std::make_tuple(jule::div(static_cast<jule::Uint>(_689_exp + 61LL),64LL),jule::mod(static_cast<jule::Uint>(_689_exp + 61LL),64LL));
	jule::U64 _759_z0 = (_1501e0f70_M_PI4[static_cast<jule::Int>(_7410_digit)] << _7417_bitshift) | (_1501e0f70_M_PI4[static_cast<jule::Int>(_7410_digit + 1LL)] >> (64LL - _7417_bitshift));
	jule::U64 _769_z1 = (_1501e0f70_M_PI4[static_cast<jule::Int>(_7410_digit + 1LL)] << _7417_bitshift) | (_1501e0f70_M_PI4[static_cast<jule::Int>(_7410_digit + 2LL)] >> (64LL - _7417_bitshift));
	jule::U64 _779_z2 = (_1501e0f70_M_PI4[static_cast<jule::Int>(_7410_digit + 2LL)] << _7417_bitshift) | (_1501e0f70_M_PI4[static_cast<jule::Int>(_7410_digit + 3LL)] >> (64LL - _7417_bitshift));
	jule::U64 _7910_z2hi;
	std::tie(_7910_z2hi,std::ignore) = _150714f70_mul64(_779_z2,_6713_ix);
	jule::U64 _8010_z1hi;
	jule::U64 _8016_z1lo;
	std::tie(_8010_z1hi,_8016_z1lo) = _150714f70_mul64(_769_z1,_6713_ix);
	jule::U64 _819_z0lo = _759_z0 * _6713_ix;
	jule::U64 _8210_lo;
	jule::U64 _8214_c;
	std::tie(_8210_lo,_8214_c) = _150714f70_add64(_8016_z1lo,_7910_z2hi,0LLU);
	jule::U64 _8314_hi;
	std::tie(_8314_hi,std::ignore) = _150714f70_add64(_819_z0lo,_8010_z1hi,_8214_c);
	_6030_j=static_cast<jule::U64>(_8314_hi >> 61LL);
	_8314_hi=static_cast<jule::U64>((_8314_hi << 3LL) | (_8210_lo >> 61LL));
	jule::Uint _889_lz = static_cast<jule::Uint>(_150714f70_leading_zeros64(_8314_hi));
	jule::U64 _899_e = static_cast<jule::U64>(1023LL - (_889_lz + 1LL));
	_8314_hi=static_cast<jule::U64>((_8314_hi << (_889_lz + 1LL)) | (_8210_lo >> (64LL - (_889_lz + 1LL))));
	_8314_hi>>=12LL;
	_8314_hi|=static_cast<jule::U64>(_899_e << 52LL);
	_6038_z=static_cast<jule::F64>(_1501bd670_f64_from_bits(_8314_hi));
	if ((_6030_j & 1LL) == 1LL) {
		(_6030_j)++;
		_6030_j&=7LL;
		(_6038_z)--;
	}
	_6030_j = _6030_j;
	_6038_z = static_cast<jule::F64>(_6038_z * 0.7853981633974483);
	return std::make_tuple(_6030_j,_6038_z);
}



inline jule::F64 _15023cf50_atan2(jule::F64 _6014_y,jule::F64 _6022_x) {
	{
		if (!((_15022f040_is_nan(_6014_y)) || (_15022f040_is_nan(_6022_x)))) { goto _case_end_5669221584; }
		_case_begin_5669221584:;
		{
			return static_cast<jule::F64>(_15022f040_nan());
		}
		goto _match_end_5669221344;
		_case_end_5669221584:;
		if (!((_6014_y == 0LL))) { goto _case_end_5669221712; }
		_case_begin_5669221712:;
		{
			if ((_6022_x >= 0LL) && (!(_150454890_signbit(_6022_x)))) {
				return static_cast<jule::F64>(_1501dffc0_copysign(0LL,_6014_y));
			}
			return static_cast<jule::F64>(_1501dffc0_copysign(3.141592653589793,_6014_y));
		}
		goto _match_end_5669221344;
		_case_end_5669221712:;
		if (!((_6022_x == 0LL))) { goto _case_end_5669221840; }
		_case_begin_5669221840:;
		{
			return static_cast<jule::F64>(_1501dffc0_copysign(1.5707963267948966,_6014_y));
		}
		goto _match_end_5669221344;
		_case_end_5669221840:;
		if (!((_15022f040_is_inf(_6022_x,0LL)))) { goto _case_end_5669221968; }
		_case_begin_5669221968:;
		{
			if (_15022f040_is_inf(_6022_x,1LL)) {
				{
					if (!((_15022f040_is_inf(_6014_y,0LL)))) { goto _case_end_5669230880; }
					_case_begin_5669230880:;
					{
						return static_cast<jule::F64>(_1501dffc0_copysign(0.7853981633974483,_6014_y));
					}
					goto _match_end_5669229328;
					_case_end_5669230880:;
					_case_begin_5669229472:;
					{
						return static_cast<jule::F64>(_1501dffc0_copysign(0LL,_6014_y));
					}
					goto _match_end_5669229328;
					_case_end_5669229472:;
					_match_end_5669229328:;
				}
			}
			{
				if (!((_15022f040_is_inf(_6014_y,0LL)))) { goto _case_end_5669232352; }
				_case_begin_5669232352:;
				{
					return static_cast<jule::F64>(_1501dffc0_copysign(2.356194490192345,_6014_y));
				}
				goto _match_end_5669231840;
				_case_end_5669232352:;
				_case_begin_5669232560:;
				{
					return static_cast<jule::F64>(_1501dffc0_copysign(3.141592653589793,_6014_y));
				}
				goto _match_end_5669231840;
				_case_end_5669232560:;
				_match_end_5669231840:;
			}
		}
		goto _match_end_5669221344;
		_case_end_5669221968:;
		if (!((_15022f040_is_inf(_6014_y,0LL)))) { goto _case_end_5669222096; }
		_case_begin_5669222096:;
		{
			return static_cast<jule::F64>(_1501dffc0_copysign(1.5707963267948966,_6014_y));
		}
		goto _match_end_5669221344;
		_case_end_5669222096:;
		_match_end_5669221344:;
	}
	jule::F64 _929_q = _1506528e0_atan(static_cast<jule::F64>(jule::div(_6014_y,_6022_x)));
	if (_6022_x < 0LL) {
		if (_929_q <= 0LL) {
			return static_cast<jule::F64>(_929_q + 3.141592653589793);
		}
		return static_cast<jule::F64>(_929_q - 3.141592653589793);
	}
	return _929_q;
}



inline jule::F64 _150257f10_floor(jule::F64 _4414_x) {
	if (((_4414_x == 0LL) || _15022f040_is_nan(_4414_x)) || _15022f040_is_inf(_4414_x,0LL)) {
		return _4414_x;
	}
	if (_4414_x < 0LL) {
		jule::F64 _4918_d;
		jule::F64 _4921_fract;
		std::tie(_4918_d,_4921_fract) = _1502e0ae0_modf(static_cast<jule::F64>((-(_4414_x))));
		if (_4921_fract != 0LL) {
			_4918_d=static_cast<jule::F64>(_4918_d + 1LL);
		}
		return static_cast<jule::F64>((-(_4918_d)));
	}
	jule::F64 _5510_d;
	std::tie(_5510_d,std::ignore) = _1502e0ae0_modf(_4414_x);
	return _5510_d;
}



inline jule::F64 _150257f10_ceil(jule::F64 _6513_x) {
	return static_cast<jule::F64>((-(_150257f10_floor(static_cast<jule::F64>((-(_6513_x)))))));
}



inline jule::F64 _150257f10_trunc(jule::F64 _7314_x) {
	if (((_7314_x == 0LL) || _15022f040_is_nan(_7314_x)) || _15022f040_is_inf(_7314_x,0LL)) {
		return _7314_x;
	}
	jule::F64 _7710_d;
	std::tie(_7710_d,std::ignore) = _1502e0ae0_modf(_7314_x);
	return _7710_d;
}



inline jule::F64 _150257f10_round(jule::F64 _8714_x) {
	jule::U64 _9713_bits = _1501bd670_f64_bits(_8714_x);
	jule::Uint _9813_e = static_cast<jule::Uint>(_9713_bits >> 52LL) & 2047LL;
	if (_9813_e < 1023LL) {
		_9713_bits&=9223372036854775808LLU;
		if (_9813_e == 1022LL) {
			_9713_bits|=4607182418800017408LL;
		}
	} else if (_9813_e < 1075LL) {
		
		_9813_e-=1023LL;
		_9713_bits+=static_cast<jule::Int>(2251799813685248LL >> _9813_e);
		_9713_bits&=static_cast<jule::Int>((~(4503599627370495LL >> _9813_e)));
	}
	return static_cast<jule::F64>(_1501bd670_f64_from_bits(_9713_bits));
}



inline jule::F64 _150257f10_round_even(jule::F64 _12419_x) {
	jule::U64 _13613_bits = _1501bd670_f64_bits(_12419_x);
	jule::Uint _13713_e = static_cast<jule::Uint>(_13613_bits >> 52LL) & 2047LL;
	if (_13713_e >= 1023LL) {
		
		_13713_e-=1023LL;
		_13613_bits+=static_cast<jule::U64>((2251799813685247LL + ((_13613_bits >> (52LL - _13713_e)) & 1LL)) >> _13713_e);
		_13613_bits&=static_cast<jule::Int>((~(4503599627370495LL >> _13713_e)));
	} else if ((_13713_e == 1022LL) && ((_13613_bits & 4503599627370495LL) != 0LL)) {
		_13613_bits=static_cast<jule::U64>((_13613_bits & 9223372036854775808LLU) | 4607182418800017408LL);
	} else {
		_13613_bits&=9223372036854775808LLU;
	}
	return static_cast<jule::F64>(_1501bd670_f64_from_bits(_13613_bits));
}



inline jule::F64 _15022f040_nan(void) {
	return static_cast<jule::F64>(_1501bd670_f64_from_bits(9221120237041090561LLU));
}



inline jule::Bool _15022f040_is_nan(jule::F64 _5215_f) {
	return _5215_f != _5215_f;
}



inline jule::F64 _15022f040_inf(jule::Int _6112_sign) {
	if (_6112_sign >= 0LL) {
		return static_cast<jule::F64>(_1501bd670_f64_from_bits(9218868437227405312LLU));
	}
	return static_cast<jule::F64>(_1501bd670_f64_from_bits(18442240474082181120LLU));
}



inline jule::Bool _15022f040_is_inf(jule::F64 _7215_f,jule::Int _7223_sign) {
	return ((_7223_sign >= 0LL) && (_7215_f > jule::MAX_F64)) || ((_7223_sign <= 0LL) && (_7215_f < jule::MIN_F64));
}



inline std::tuple<jule::F64,jule::Int> _15022f040_normalize(jule::F64 _8214_x) {
	jule::Int _8232_exp = jule::Int();
	jule::F64 _8224_y = jule::F64();
	
	if (_1502fb3e0_abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014) {
		_8224_y = static_cast<jule::F64>(_8214_x * 4503599627370496LL);
		_8232_exp = -52LL;
		return std::make_tuple(_8224_y,_8232_exp);
	}
	_8224_y = _8214_x;
	_8232_exp = 0LL;
	return std::make_tuple(_8224_y,_8232_exp);
}



inline std::tuple<jule::F64,jule::F64> _150286070_sincos(jule::F64 _4619_x) {
	jule::F64 _4639_cos = jule::F64();
	jule::F64 _4629_sin = jule::F64();
	
	
	
	{
		if (!((_4619_x == 0LL))) { goto _case_end_5669288016; }
		_case_begin_5669288016:;
		{
			_4629_sin = _4619_x;
			_4639_cos = 1LL;
			return std::make_tuple(_4629_sin,_4639_cos);
		}
		goto _match_end_5669287728;
		_case_end_5669288016:;
		if (!((_15022f040_is_nan(_4619_x)) || (_15022f040_is_inf(_4619_x,0LL)))) { goto _case_end_5669288128; }
		_case_begin_5669288128:;
		{
			_4629_sin = static_cast<jule::F64>(_15022f040_nan());
			_4639_cos = static_cast<jule::F64>(_15022f040_nan());
			return std::make_tuple(_4629_sin,_4639_cos);
		}
		goto _match_end_5669287728;
		_case_end_5669288128:;
		_match_end_5669287728:;
	}
	jule::Bool _5914_sin_sign = false;
	jule::Bool _5928_cos_sign = false;
	std::tie(_5914_sin_sign,_5928_cos_sign) = std::make_tuple(false,false);
	if (_4619_x < 0LL) {
		_4619_x=static_cast<jule::F64>((-(_4619_x)));
		_5914_sin_sign=true;
	}
	jule::U64 _6513_j = 0LLU;
	jule::F64 _6613_y = 0LL;
	jule::F64 _6713_z = 0LL;
	if (_4619_x >= 536870912LL) {
		std::tie(_6513_j,_6713_z) = _1501e0f70_trig_reduce(_4619_x);
	} else {
		_6513_j=static_cast<jule::U64>(_4619_x * 1.2732395447351628);
		_6613_y=static_cast<jule::F64>(_6513_j);
		if ((_6513_j & 1LL) == 1LL) {
			(_6513_j)++;
			(_6613_y)++;
		}
		_6513_j&=7LL;
		_6713_z=static_cast<jule::F64>(((_4619_x - (_6613_y * 0.7853981256484985)) - (_6613_y * 0.00000003774894707930798)) - (_6613_y * 0.0000000000000026951514290790595));
	}
	if (_6513_j > 3LL) {
		_6513_j-=4LL;
		std::tie(_5914_sin_sign,_5928_cos_sign) = std::make_tuple((!(_5914_sin_sign)),(!(_5928_cos_sign)));
	}
	if (_6513_j > 1LL) {
		_5928_cos_sign=(!(_5928_cos_sign));
	}
	jule::F64 _899_zz = _6713_z * _6713_z;
	_4639_cos=static_cast<jule::F64>((1LL - (0.5 * _899_zz)) + ((_899_zz * _899_zz) * ((((((((((_1501de350__COS[0LL] * _899_zz) + _1501de350__COS[1LL]) * _899_zz) + _1501de350__COS[2LL]) * _899_zz) + _1501de350__COS[3LL]) * _899_zz) + _1501de350__COS[4LL]) * _899_zz) + _1501de350__COS[5LL])));
	_4629_sin=static_cast<jule::F64>(_6713_z + ((_6713_z * _899_zz) * ((((((((((_1501de350__SIN[0LL] * _899_zz) + _1501de350__SIN[1LL]) * _899_zz) + _1501de350__SIN[2LL]) * _899_zz) + _1501de350__SIN[3LL]) * _899_zz) + _1501de350__SIN[4LL]) * _899_zz) + _1501de350__SIN[5LL])));
	if ((_6513_j == 1LL) || (_6513_j == 2LL)) {
		std::tie(_4629_sin,_4639_cos) = std::make_tuple(_4639_cos,_4629_sin);
	}
	if (_5928_cos_sign) {
		_4639_cos=static_cast<jule::F64>((-(_4639_cos)));
	}
	if (_5914_sin_sign) {
		_4629_sin=static_cast<jule::F64>((-(_4629_sin)));
	}
	return std::make_tuple(_4629_sin,_4639_cos);
}



inline jule::F64 _15029f7d0_dim(jule::F64 _4412_x,jule::F64 _4420_y) {
	jule::F64 _509_v = _4412_x - _4420_y;
	if (_509_v <= 0LL) {
		return 0LL;
	}
	return _509_v;
}



inline jule::F64 _15029f7d0_max(jule::F64 _6612_x,jule::F64 _6620_y) {
	{
		if (!((_15022f040_is_inf(_6612_x,1LL)) || (_15022f040_is_inf(_6620_y,1LL)))) { goto _case_end_5669322752; }
		_case_begin_5669322752:;
		{
			return static_cast<jule::F64>(_15022f040_inf(1LL));
		}
		goto _match_end_5669322544;
		_case_end_5669322752:;
		if (!((_15022f040_is_nan(_6612_x)) || (_15022f040_is_nan(_6620_y)))) { goto _case_end_5669322880; }
		_case_begin_5669322880:;
		{
			return static_cast<jule::F64>(_15022f040_nan());
		}
		goto _match_end_5669322544;
		_case_end_5669322880:;
		if (!(((_6612_x == 0LL) && (_6612_x == _6620_y)))) { goto _case_end_5669323008; }
		_case_begin_5669323008:;
		{
			if (_150454890_signbit(_6612_x)) {
				return _6620_y;
			}
			return _6612_x;
		}
		goto _match_end_5669322544;
		_case_end_5669323008:;
		_match_end_5669322544:;
	}
	if (_6612_x > _6620_y) {
		return _6612_x;
	}
	return _6620_y;
}



inline jule::F64 _15029f7d0_min(jule::F64 _9212_x,jule::F64 _9220_y) {
	{
		if (!((_15022f040_is_inf(_9212_x,-1LL)) || (_15022f040_is_inf(_9220_y,-1LL)))) { goto _case_end_5669329856; }
		_case_begin_5669329856:;
		{
			return static_cast<jule::F64>(_15022f040_inf(-1LL));
		}
		goto _match_end_5669329648;
		_case_end_5669329856:;
		if (!((_15022f040_is_nan(_9212_x)) || (_15022f040_is_nan(_9220_y)))) { goto _case_end_5669329984; }
		_case_begin_5669329984:;
		{
			return static_cast<jule::F64>(_15022f040_nan());
		}
		goto _match_end_5669329648;
		_case_end_5669329984:;
		if (!(((_9212_x == 0LL) && (_9212_x == _9220_y)))) { goto _case_end_5669330112; }
		_case_begin_5669330112:;
		{
			if (_150454890_signbit(_9212_x)) {
				return _9212_x;
			}
			return _9220_y;
		}
		goto _match_end_5669329648;
		_case_end_5669330112:;
		_match_end_5669329648:;
	}
	if (_9212_x < _9220_y) {
		return _9212_x;
	}
	return _9220_y;
}



inline jule::F64 _1502aeb50_log(jule::F64 _11112_x) {
	
	
	
	
	
	
	
	
	
	{
		if (!((_15022f040_is_nan(_11112_x)) || (_15022f040_is_inf(_11112_x,1LL)))) { goto _case_end_5669345040; }
		_case_begin_5669345040:;
		{
			return _11112_x;
		}
		goto _match_end_5669344848;
		_case_end_5669345040:;
		if (!((_11112_x < 0LL))) { goto _case_end_5669345168; }
		_case_begin_5669345168:;
		{
			return static_cast<jule::F64>(_15022f040_nan());
		}
		goto _match_end_5669344848;
		_case_end_5669345168:;
		if (!((_11112_x == 0LL))) { goto _case_end_5669345296; }
		_case_begin_5669345296:;
		{
			return static_cast<jule::F64>(_15022f040_inf(-1LL));
		}
		goto _match_end_5669344848;
		_case_end_5669345296:;
		_match_end_5669344848:;
	}
	jule::F64 _13314_f1;
	jule::Int _13322_ki;
	std::tie(_13314_f1,_13322_ki) = _150213500_frexp(_11112_x);
	if (_13314_f1 < 0.7071067811865476) {
		_13314_f1*=2LL;
		(_13322_ki)--;
	}
	jule::F64 _1389_f = _13314_f1 - 1LL;
	jule::F64 _1399_k = static_cast<jule::F64>(_13322_ki);
	jule::F64 _1429_s = jule::div(_1389_f,2LL + _1389_f);
	jule::F64 _1439_s2 = _1429_s * _1429_s;
	jule::F64 _1449_s4 = _1439_s2 * _1439_s2;
	jule::F64 _1459_t1 = _1439_s2 * (0.6666666666666735 + (_1449_s4 * (0.2857142874366239 + (_1449_s4 * (0.1818357216161805 + (_1449_s4 * 0.14798198605116586))))));
	jule::F64 _1469_t2 = _1449_s4 * (0.3999999999940942 + (_1449_s4 * (0.22222198432149784 + (_1449_s4 * 0.15313837699209373))));
	jule::F64 _1479_R = _1459_t1 + _1469_t2;
	jule::F64 _1489_hfsq = (0.5 * _1389_f) * _1389_f;
	return static_cast<jule::F64>((_1399_k * 0.6931471803691238) - ((_1489_hfsq - ((_1429_s * (_1489_hfsq + _1479_R)) + (_1399_k * 0.00000000019082149292705877))) - _1389_f));
}



inline jule::F64 _1502596e0_expm1(jule::F64 _15618_x) {
	
	
	
	
	
	
	
	
	
	
	
	
	
	{
		if (!((_15022f040_is_inf(_15618_x,1LL)) || (_15022f040_is_nan(_15618_x)))) { goto _case_end_5669378112; }
		_case_begin_5669378112:;
		{
			return _15618_x;
		}
		goto _match_end_5669377936;
		_case_end_5669378112:;
		if (!((_15022f040_is_inf(_15618_x,-1LL)))) { goto _case_end_5669378240; }
		_case_begin_5669378240:;
		{
			return -1LL;
		}
		goto _match_end_5669377936;
		_case_end_5669378240:;
		_match_end_5669377936:;
	}
	jule::F64 _18013_absx = _15618_x;
	jule::Bool _18113_sign = false;
	if (_15618_x < 0LL) {
		_18013_absx=static_cast<jule::F64>((-(_18013_absx)));
		_18113_sign=true;
	}
	if (_18013_absx >= 38.816242111356935) {
		if (_18113_sign) {
			return -1LL;
		}
		if (_18013_absx >= 709.782712893384) {
			return static_cast<jule::F64>(_15022f040_inf(1LL));
		}
	}
	jule::F64 _19813_c = 0LL;
	jule::Int _19913_k = 0LL;
	if (_18013_absx > 0.34657359027997264) {
		jule::F64 _20117_hi = 0LL;
		jule::F64 _20217_lo = 0LL;
		if (_18013_absx < 1.0397207708399179) {
			if ((!(_18113_sign))) {
				_20117_hi=static_cast<jule::F64>(_15618_x - 0.6931471803691238);
				_20217_lo=0.00000000019082149292705877;
				_19913_k=1LL;
			} else {
				_20117_hi=static_cast<jule::F64>(_15618_x + 0.6931471803691238);
				_20217_lo=-0.00000000019082149292705877;
				_19913_k=-1LL;
			}
		} else {
			if ((!(_18113_sign))) {
				_19913_k=static_cast<jule::Int>((1.4426950408889634 * _15618_x) + 0.5);
			} else {
				_19913_k=static_cast<jule::Int>((1.4426950408889634 * _15618_x) - 0.5);
			}
			jule::F64 _21917_t = static_cast<jule::F64>(_19913_k);
			_20117_hi=static_cast<jule::F64>(_15618_x - (_21917_t * 0.6931471803691238));
			_20217_lo=static_cast<jule::F64>(_21917_t * 0.00000000019082149292705877);
		}
		_15618_x=static_cast<jule::F64>(_20117_hi - _20217_lo);
		_19813_c=static_cast<jule::F64>((_20117_hi - _15618_x) - _20217_lo);
	} else if (_18013_absx < 0.00000000000000005551115123125783) {
		return _15618_x;
	} else {
		_19913_k=0LL;
	}
	jule::F64 _2329_hfx = 0.5 * _15618_x;
	jule::F64 _2339_hxs = _15618_x * _2329_hfx;
	jule::F64 _2349_r1 = 1LL + (_2339_hxs * (-0.03333333333333313 + (_2339_hxs * (0.0015873015872548146 + (_2339_hxs * (-0.0000793650757867488 + (_2339_hxs * (0.000004008217827329362 + (_2339_hxs * -0.00000020109921818362437)))))))));
	jule::F64 _23513_t = 3LL - (_2349_r1 * _2329_hfx);
	jule::F64 _23613_e = _2339_hxs * jule::div(_2349_r1 - _23513_t,6LL - (_15618_x * _23513_t));
	if (_19913_k == 0LL) {
		return static_cast<jule::F64>(_15618_x - ((_15618_x * _23613_e) - _2339_hxs));
	}
	_23613_e=static_cast<jule::F64>((_15618_x * (_23613_e - _19813_c)) - _19813_c);
	_23613_e-=_2339_hxs;
	{
		if (!((_19913_k == -1LL))) { goto _case_end_5669408896; }
		_case_begin_5669408896:;
		{
			return static_cast<jule::F64>((0.5 * (_15618_x - _23613_e)) - 0.5);
		}
		goto _match_end_5669410800;
		_case_end_5669408896:;
		if (!((_19913_k == 1LL))) { goto _case_end_5669412240; }
		_case_begin_5669412240:;
		{
			if (_15618_x < -0.25) {
				return static_cast<jule::F64>(-2LL * (_23613_e - (_15618_x + 0.5)));
			}
			return static_cast<jule::F64>(1LL + (2LL * (_15618_x - _23613_e)));
		}
		goto _match_end_5669410800;
		_case_end_5669412240:;
		if (!((_19913_k <= -2LL) || (_19913_k > 56LL))) { goto _case_end_5669412352; }
		_case_begin_5669412352:;
		{
			jule::F64 _25117_y = 1LL - (_23613_e - _15618_x);
			_25117_y=static_cast<jule::F64>(_1501bd670_f64_from_bits(static_cast<jule::U64>(_1501bd670_f64_bits(_25117_y) + (static_cast<jule::U64>(_19913_k) << 52LL))));
			return static_cast<jule::F64>(_25117_y - 1LL);
		}
		goto _match_end_5669410800;
		_case_end_5669412352:;
		_match_end_5669410800:;
	}
	if (_19913_k < 20LL) {
		jule::F64 _25613_t = _1501bd670_f64_from_bits(static_cast<jule::U64>(4607182418800017408LL - (9007199254740992LL >> static_cast<jule::Uint>(_19913_k))));
		jule::F64 _25717_y = _25613_t - (_23613_e - _15618_x);
		_25717_y=static_cast<jule::F64>(_1501bd670_f64_from_bits(static_cast<jule::U64>(_1501bd670_f64_bits(_25717_y) + (static_cast<jule::U64>(_19913_k) << 52LL))));
		return _25717_y;
	}
	_23513_t=static_cast<jule::F64>(_1501bd670_f64_from_bits(static_cast<jule::U64>(static_cast<jule::U64>(1023LL - _19913_k) << 52LL)));
	jule::F64 _26213_y = _15618_x - (_23613_e + _23513_t);
	(_26213_y)++;
	_26213_y=static_cast<jule::F64>(_1501bd670_f64_from_bits(static_cast<jule::U64>(_1501bd670_f64_bits(_26213_y) + (static_cast<jule::U64>(_19913_k) << 52LL))));
	return _26213_y;
}



inline jule::F64 _1502fb3e0_abs(jule::F64 _4312_x) {
	return static_cast<jule::F64>(_1501bd670_f64_from_bits(static_cast<jule::U64>(_1501bd670_f64_bits(_4312_x) & 9223372036854775807LLU)));
}



inline jule::F64 _1502cfe00_j1(jule::F64 _10515_x) {
	
	
	
	
	
	
	
	
	
	
	
	{
		if (!((_15022f040_is_nan(_10515_x)))) { goto _case_end_5669443312; }
		_case_begin_5669443312:;
		{
			return _10515_x;
		}
		goto _match_end_5669442752;
		_case_end_5669443312:;
		if (!((_15022f040_is_inf(_10515_x,0LL)) || (_10515_x == 0LL))) { goto _case_end_5669443440; }
		_case_begin_5669443440:;
		{
			return 0LL;
		}
		goto _match_end_5669442752;
		_case_end_5669443440:;
		_match_end_5669442752:;
	}
	jule::Bool _12613_sign = false;
	if (_10515_x < 0LL) {
		_10515_x=static_cast<jule::F64>((-(_10515_x)));
		_12613_sign=true;
	}
	if (_10515_x >= 2LL) {
		jule::F64 _13214_s;
		jule::F64 _13217_c;
		std::tie(_13214_s,_13217_c) = _150286070_sincos(_10515_x);
		jule::F64 _13317_ss = (-(_13214_s)) - _13217_c;
		jule::F64 _13417_cc = _13214_s - _13217_c;
		if (_10515_x < 89884656743115790000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) {
			jule::F64 _13817_z = _1501de350_cos(static_cast<jule::F64>(_10515_x + _10515_x));
			if ((_13214_s * _13217_c) > 0LL) {
				_13417_cc=static_cast<jule::F64>(jule::div(_13817_z,_13317_ss));
			} else {
				_13317_ss=static_cast<jule::F64>(jule::div(_13817_z,_13417_cc));
			}
		}
		jule::F64 _14917_z = 0LL;
		if (_10515_x > 5188146770730811392LL) {
			_14917_z=static_cast<jule::F64>(jule::div(0.5641895835477563 * _13417_cc,_15059e5b0_sqrt(_10515_x)));
		} else {
			jule::F64 _15317_u = _1502cfe00_pone(_10515_x);
			jule::F64 _15417_v = _1502cfe00_qone(_10515_x);
			_14917_z=static_cast<jule::F64>(jule::div(0.5641895835477563 * ((_15317_u * _13417_cc) - (_15417_v * _13317_ss)),_15059e5b0_sqrt(_10515_x)));
		}
		if (_12613_sign) {
			return static_cast<jule::F64>((-(_14917_z)));
		}
		return _14917_z;
	}
	if (_10515_x < 0.000000007450580596923828) {
		return static_cast<jule::F64>(0.5 * _10515_x);
	}
	jule::F64 _16613_z = _10515_x * _10515_x;
	jule::F64 _16713_r = _16613_z * (-0.0625 + (_16613_z * (0.001407056669551897 + (_16613_z * (-0.00001599556310840356 + (_16613_z * 0.000000049672799960958445))))));
	jule::F64 _1689_s = 1LL + (_16613_z * (0.019153759953836346 + (_16613_z * (0.00018594678558863092 + (_16613_z * (0.0000011771846404262368 + (_16613_z * (0.0000000050463625707621704 + (_16613_z * 0.000000000012354227442613791)))))))));
	_16713_r*=_10515_x;
	_16613_z=static_cast<jule::F64>((0.5 * _10515_x) + jule::div(_16713_r,_1689_s));
	if (_12613_sign) {
		return static_cast<jule::F64>((-(_16613_z)));
	}
	return _16613_z;
}



inline jule::F64 _1502cfe00_y1(jule::F64 _18411_x) {
	
	
	
	
	
	
	
	
	
	
	
	
	{
		if (!((_18411_x < 0LL) || (_15022f040_is_nan(_18411_x)))) { goto _case_end_5669484832; }
		_case_begin_5669484832:;
		{
			return static_cast<jule::F64>(_15022f040_nan());
		}
		goto _match_end_5669484640;
		_case_end_5669484832:;
		if (!((_15022f040_is_inf(_18411_x,1LL)))) { goto _case_end_5669484960; }
		_case_begin_5669484960:;
		{
			return 0LL;
		}
		goto _match_end_5669484640;
		_case_end_5669484960:;
		if (!((_18411_x == 0LL))) { goto _case_end_5669485088; }
		_case_begin_5669485088:;
		{
			return static_cast<jule::F64>(_15022f040_inf(-1LL));
		}
		goto _match_end_5669484640;
		_case_end_5669485088:;
		_match_end_5669484640:;
	}
	if (_18411_x >= 2LL) {
		jule::F64 _20814_s;
		jule::F64 _20817_c;
		std::tie(_20814_s,_20817_c) = _150286070_sincos(_18411_x);
		jule::F64 _20917_ss = (-(_20814_s)) - _20817_c;
		jule::F64 _21017_cc = _20814_s - _20817_c;
		if (_18411_x < 89884656743115790000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) {
			jule::F64 _21417_z = _1501de350_cos(static_cast<jule::F64>(_18411_x + _18411_x));
			if ((_20814_s * _20817_c) > 0LL) {
				_21017_cc=static_cast<jule::F64>(jule::div(_21417_z,_20917_ss));
			} else {
				_20917_ss=static_cast<jule::F64>(jule::div(_21417_z,_21017_cc));
			}
		}
		jule::F64 _23217_z = 0LL;
		if (_18411_x > 5188146770730811392LL) {
			_23217_z=static_cast<jule::F64>(jule::div(0.5641895835477563 * _20917_ss,_15059e5b0_sqrt(_18411_x)));
		} else {
			jule::F64 _23617_u = _1502cfe00_pone(_18411_x);
			jule::F64 _23717_v = _1502cfe00_qone(_18411_x);
			_23217_z=static_cast<jule::F64>(jule::div(0.5641895835477563 * ((_23617_u * _20917_ss) + (_23717_v * _21017_cc)),_15059e5b0_sqrt(_18411_x)));
		}
		return _23217_z;
	}
	if (_18411_x <= 0.00000000000000005551115123125783) {
		return static_cast<jule::F64>(jule::div(-0.6366197723675814,_18411_x));
	}
	jule::F64 _2459_z = _18411_x * _18411_x;
	jule::F64 _2469_u = -0.19605709064623894 + (_2459_z * (0.05044387166398113 + (_2459_z * (-0.0019125689587576355 + (_2459_z * (0.00002352526005616105 + (_2459_z * -0.00000009190991580398789)))))));
	jule::F64 _2479_v = 1LL + (_2459_z * (0.01991673182366499 + (_2459_z * (0.00020255258102513517 + (_2459_z * (0.0000013560880109751623 + (_2459_z * (0.000000006227414523646215 + (_2459_z * 0.000000000016655924620799208)))))))));
	return static_cast<jule::F64>((_18411_x * jule::div(_2469_u,_2479_v)) + (0.6366197723675814 * ((_1502cfe00_j1(_18411_x) * _1502aeb50_log(_18411_x)) - jule::div(1LL,_18411_x))));
}



inline jule::F64 _1502cfe00_pone(jule::F64 _3289_x) {
	jule::Array<jule::F64,6>* _32913_p = nullptr;
	jule::Array<jule::F64,5>* _33013_q = nullptr;
	if (_3289_x >= 8LL) {
		_32913_p=(&(_1502cfe00_P_1R8));
		_33013_q=(&(_1502cfe00_P_1S8));
	} else if (_3289_x >= 4.5454) {
		_32913_p=(&(_1502cfe00_P_1R5));
		_33013_q=(&(_1502cfe00_P_1S5));
	} else if (_3289_x >= 2.8571) {
		_32913_p=(&(_1502cfe00_P_1R3));
		_33013_q=(&(_1502cfe00_P_1S3));
	} else if (_3289_x >= 2LL) {
		_32913_p=(&(_1502cfe00_P_1R2));
		_33013_q=(&(_1502cfe00_P_1S2));
	}
	{
		jule::F64 _34513_z = jule::div(1LL,_3289_x * _3289_x);
		jule::F64 _34613_r = (*(_32913_p))[0LL] + (_34513_z * ((*(_32913_p))[1LL] + (_34513_z * ((*(_32913_p))[2LL] + (_34513_z * ((*(_32913_p))[3LL] + (_34513_z * ((*(_32913_p))[4LL] + (_34513_z * (*(_32913_p))[5LL])))))))));
		jule::F64 _34713_s = 1LL + (_34513_z * ((*(_33013_q))[0LL] + (_34513_z * ((*(_33013_q))[1LL] + (_34513_z * ((*(_33013_q))[2LL] + (_34513_z * ((*(_33013_q))[3LL] + (_34513_z * (*(_33013_q))[4LL])))))))));
		return static_cast<jule::F64>(1LL + jule::div(_34613_r,_34713_s));
	}
}



inline jule::F64 _1502cfe00_qone(jule::F64 _4339_x) {
	jule::Array<jule::F64,6>* _43413_p = nullptr;
	jule::Array<jule::F64,6>* _43513_q = nullptr;
	if (_4339_x >= 8LL) {
		_43413_p=(&(_1502cfe00_Q_1R8));
		_43513_q=(&(_1502cfe00_Q_1S8));
	} else if (_4339_x >= 4.5454) {
		_43413_p=(&(_1502cfe00_Q_1R5));
		_43513_q=(&(_1502cfe00_Q_1S5));
	} else if (_4339_x >= 2.8571) {
		_43413_p=(&(_1502cfe00_Q_1R3));
		_43513_q=(&(_1502cfe00_Q_1S3));
	} else if (_4339_x >= 2LL) {
		_43413_p=(&(_1502cfe00_Q_1R2));
		_43513_q=(&(_1502cfe00_Q_1S2));
	}
	{
		jule::F64 _45013_z = jule::div(1LL,_4339_x * _4339_x);
		jule::F64 _45113_r = (*(_43413_p))[0LL] + (_45013_z * ((*(_43413_p))[1LL] + (_45013_z * ((*(_43413_p))[2LL] + (_45013_z * ((*(_43413_p))[3LL] + (_45013_z * ((*(_43413_p))[4LL] + (_45013_z * (*(_43413_p))[5LL])))))))));
		jule::F64 _45213_s = 1LL + (_45013_z * ((*(_43513_q))[0LL] + (_45013_z * ((*(_43513_q))[1LL] + (_45013_z * ((*(_43513_q))[2LL] + (_45013_z * ((*(_43513_q))[3LL] + (_45013_z * ((*(_43513_q))[4LL] + (_45013_z * (*(_43513_q))[5LL])))))))))));
		return static_cast<jule::F64>(jule::div(0.375 + jule::div(_45113_r,_45213_s),_4339_x));
	}
}



inline jule::U64 _1503a2d30_zero(jule::U64 _409_x) {
	if (_409_x == 0LL) {
		return 1LL;
	}
	return 0LL;
}



inline jule::U64 _1503a2d30_nonzero(jule::U64 _4912_x) {
	if (_4912_x != 0LL) {
		return 1LL;
	}
	return 0LL;
}



inline std::tuple<jule::U64,jule::U64> _1503a2d30_shl(jule::U64 _588_u1,jule::U64 _5817_u2,jule::Uint _5826_n) {
	jule::U64 _5846_r2 = jule::U64();
	jule::U64 _5837_r1 = jule::U64();
	_5837_r1=static_cast<jule::U64>(((_588_u1 << _5826_n) | (_5817_u2 >> (64LL - _5826_n))) | (_5817_u2 << (_5826_n - 64LL)));
	_5846_r2=static_cast<jule::U64>(_5817_u2 << _5826_n);
	return std::make_tuple(_5837_r1,_5846_r2);
}



inline std::tuple<jule::U64,jule::U64> _1503a2d30_shr(jule::U64 _648_u1,jule::U64 _6417_u2,jule::Uint _6426_n) {
	jule::U64 _6446_r2 = jule::U64();
	jule::U64 _6437_r1 = jule::U64();
	jule::U64 _7113_shift = _648_u1;
	jule::Uint _7213_shift_n = _6426_n - 64LL;
	_iter_begin_5669560240:;
	if (!((_7113_shift > 0LL) && (_7213_shift_n > 0LL))) { goto _iter_end_5669560240; }
	{
		(_7213_shift_n)--;
		_7113_shift>>=1LL;
	}
	_iter_next_5669560240:;
	goto _iter_begin_5669560240;
	_iter_end_5669560240:;
	_6446_r2=static_cast<jule::U64>(((_6417_u2 >> _6426_n) | (_648_u1 << (64LL - _6426_n))) | _7113_shift);
	_6437_r1=static_cast<jule::U64>(_648_u1 >> _6426_n);
	return std::make_tuple(_6437_r1,_6446_r2);
}



inline std::tuple<jule::U64,jule::U64> _1503a2d30_shrcompress(jule::U64 _8716_u1,jule::U64 _8725_u2,jule::Uint _8734_n) {
	jule::U64 _8754_r2 = jule::U64();
	jule::U64 _8745_r1 = jule::U64();
	{
		if (!((_8734_n == 0LL))) { goto _case_end_5669567456; }
		_case_begin_5669567456:;
		{
			_8745_r1 = _8716_u1;
			_8754_r2 = _8725_u2;
			return std::make_tuple(_8745_r1,_8754_r2);
		}
		goto _match_end_5669567200;
		_case_end_5669567456:;
		if (!((_8734_n == 64LL))) { goto _case_end_5669567584; }
		_case_begin_5669567584:;
		{
			_8745_r1 = 0LL;
			_8754_r2 = static_cast<jule::U64>(_8716_u1 | _1503a2d30_nonzero(_8725_u2));
			return std::make_tuple(_8745_r1,_8754_r2);
		}
		goto _match_end_5669567200;
		_case_end_5669567584:;
		if (!((_8734_n >= 128LL))) { goto _case_end_5669567712; }
		_case_begin_5669567712:;
		{
			_8745_r1 = 0LL;
			_8754_r2 = static_cast<jule::U64>(_1503a2d30_nonzero(static_cast<jule::U64>(_8716_u1 | _8725_u2)));
			return std::make_tuple(_8745_r1,_8754_r2);
		}
		goto _match_end_5669567200;
		_case_end_5669567712:;
		if (!((_8734_n < 64LL))) { goto _case_end_5669567840; }
		_case_begin_5669567840:;
		{
			std::tie(_8745_r1,_8754_r2) = _1503a2d30_shr(_8716_u1,_8725_u2,_8734_n);
			_8754_r2|=static_cast<jule::U64>(_1503a2d30_nonzero(static_cast<jule::U64>(_8725_u2 & ((1LL << _8734_n) - 1LL))));
		}
		goto _match_end_5669567200;
		_case_end_5669567840:;
		if (!((_8734_n < 128LL))) { goto _case_end_5669567968; }
		_case_begin_5669567968:;
		{
			std::tie(_8745_r1,_8754_r2) = _1503a2d30_shr(_8716_u1,_8725_u2,_8734_n);
			_8754_r2|=static_cast<jule::U64>(_1503a2d30_nonzero(static_cast<jule::U64>((_8716_u1 & ((1LL << (_8734_n - 64LL)) - 1LL)) | _8725_u2)));
		}
		goto _match_end_5669567200;
		_case_end_5669567968:;
		_match_end_5669567200:;
	}
	return std::make_tuple(_8745_r1,_8754_r2);
}



inline jule::I32 _1503a2d30_lz(jule::U64 _1057_u1,jule::U64 _10516_u2) {
	jule::I32 _10527_l = jule::I32();
	_10527_l=static_cast<jule::I32>(_150714f70_leading_zeros64(_1057_u1));
	if (_10527_l == 64LL) {
		_10527_l+=static_cast<jule::I32>(_150714f70_leading_zeros64(_10516_u2));
	}
	_10527_l = _10527_l;
	return _10527_l;
}



inline std::tuple<jule::U32,jule::I32,jule::U64> _1503a2d30_split(jule::U64 _11610_b) {
	jule::U64 _11641_mantissa = jule::U64();
	jule::I32 _11631_exp = jule::I32();
	jule::U32 _11620_sign = jule::U32();
	_11620_sign=static_cast<jule::U32>(_11610_b >> 63LL);
	_11631_exp=static_cast<jule::I32>(static_cast<jule::I32>(_11610_b >> 52LL) & 2047LL);
	_11641_mantissa=static_cast<jule::U64>(_11610_b & 4503599627370495LL);
	if (_11631_exp == 0LL) {
		jule::Uint _12313_shift = static_cast<jule::Uint>(_150714f70_leading_zeros64(_11641_mantissa) - 11LL);
		_11641_mantissa<<=_12313_shift;
		_11631_exp=static_cast<jule::I32>(1LL - static_cast<jule::I32>(_12313_shift));
	} else {
		_11641_mantissa|=4503599627370496LL;
	}
	return std::make_tuple(_11620_sign,_11631_exp,_11641_mantissa);
}



inline jule::F64 _1503a2d30_fma(jule::F64 _13512_x,jule::F64 _13520_y,jule::F64 _13528_z) {
	jule::U64 _13610_bx = _1501bd670_f64_bits(_13512_x);
	jule::U64 _13614_by = _1501bd670_f64_bits(_13520_y);
	jule::U64 _13618_bz = _1501bd670_f64_bits(_13528_z);
	std::tie(_13610_bx,_13614_by,_13618_bz) = std::make_tuple(_1501bd670_f64_bits(_13512_x),_1501bd670_f64_bits(_13520_y),_1501bd670_f64_bits(_13528_z));
	if (((((_13512_x == 0LL) || (_13520_y == 0LL)) || (_13528_z == 0LL)) || ((_13610_bx & 9218868437227405312LL) == 9218868437227405312LL)) || ((_13614_by & 9218868437227405312LL) == 9218868437227405312LL)) {
		return static_cast<jule::F64>((_13512_x * _13520_y) + _13528_z);
	}
	if ((_13618_bz & 9218868437227405312LL) == 9218868437227405312LL) {
		return _13528_z;
	}
	jule::U32 _15010_xs;
	jule::I32 _15014_xe;
	jule::U64 _15018_xm;
	std::tie(_15010_xs,_15014_xe,_15018_xm) = _1503a2d30_split(_13610_bx);
	jule::U32 _15110_ys;
	jule::I32 _15114_ye;
	jule::U64 _15118_ym;
	std::tie(_15110_ys,_15114_ye,_15118_ym) = _1503a2d30_split(_13614_by);
	jule::U32 _15214_zs;
	jule::I32 _15222_ze;
	jule::U64 _15226_zm;
	std::tie(_15214_zs,_15222_ze,_15226_zm) = _1503a2d30_split(_13618_bz);
	jule::I32 _15613_pe = ((_15014_xe + _15114_ye) - 1023LL) + 1LL;
	jule::U64 _16114_pm1;
	jule::U64 _16123_pm2;
	std::tie(_16114_pm1,_16123_pm2) = _150714f70_mul64(static_cast<jule::U64>(_15018_xm << 10LL),static_cast<jule::U64>(_15118_ym << 11LL));
	jule::U64 _16214_zm1 = _15226_zm << 10LL;
	jule::U64 _16223_zm2 = static_cast<jule::U64>(0LLU);
	std::tie(_16214_zm1,_16223_zm2) = std::make_tuple(_15226_zm << 10LL,static_cast<jule::U64>(0LLU));
	jule::U32 _16313_ps = _15010_xs ^ _15110_ys;
	jule::Uint _1669_is62zero = static_cast<jule::Uint>(((~(_16114_pm1)) >> 62LL) & 1LL);
	std::tie(_16114_pm1,_16123_pm2) = _1503a2d30_shl(_16114_pm1,_16123_pm2,_1669_is62zero);
	_15613_pe-=static_cast<jule::I32>(_1669_is62zero);
	if ((_15613_pe < _15222_ze) || ((_15613_pe == _15222_ze) && (_16114_pm1 < _16214_zm1))) {
		std::tie(_16313_ps,_15613_pe,_16114_pm1,_16123_pm2,_15214_zs,_15222_ze,_16214_zm1,_16223_zm2) = std::make_tuple(_15214_zs,_15222_ze,_16214_zm1,_16223_zm2,_16313_ps,static_cast<jule::I32>(_15613_pe),_16114_pm1,_16123_pm2);
	}
	std::tie(_16214_zm1,_16223_zm2) = _1503a2d30_shrcompress(_16214_zm1,_16223_zm2,static_cast<jule::Uint>(_15613_pe - _15222_ze));
	jule::U64 _17913_m = 0LLU;
	jule::U64 _18013_c = 0LLU;
	if (_16313_ps == _15214_zs) {
		std::tie(_16123_pm2,_18013_c) = _150714f70_add64(_16123_pm2,_16223_zm2,0LLU);
		std::tie(_16114_pm1,std::ignore) = _150714f70_add64(_16114_pm1,_16214_zm1,_18013_c);
		_15613_pe-=static_cast<jule::I32>((~(_16114_pm1)) >> 63LL);
		std::tie(_16114_pm1,_17913_m) = _1503a2d30_shrcompress(_16114_pm1,_16123_pm2,static_cast<jule::Uint>(64LL + (_16114_pm1 >> 63LL)));
	} else {
		std::tie(_16123_pm2,_18013_c) = _150714f70_sub64(_16123_pm2,_16223_zm2,0LLU);
		std::tie(_16114_pm1,std::ignore) = _150714f70_sub64(_16114_pm1,_16214_zm1,_18013_c);
		jule::I32 _19113_nz = _1503a2d30_lz(_16114_pm1,_16123_pm2);
		_15613_pe-=_19113_nz;
		std::tie(_17913_m,_16123_pm2) = _1503a2d30_shl(_16114_pm1,_16123_pm2,static_cast<jule::Uint>(_19113_nz - 1LL));
		_17913_m|=static_cast<jule::U64>(_1503a2d30_nonzero(_16123_pm2));
	}
	if ((_15613_pe > 2045LL) || ((_15613_pe == 2045LL) && (((_17913_m + 512LL) >> 63LL) == 1LL))) {
		return static_cast<jule::F64>(_1501bd670_f64_from_bits(static_cast<jule::U64>((static_cast<jule::U64>(_16313_ps) << 63LL) | 9218868437227405312LL)));
	}
	if (_15613_pe < 0LL) {
		jule::Uint _20313_n = static_cast<jule::Uint>((-(_15613_pe)));
		_17913_m=static_cast<jule::U64>((_17913_m >> _20313_n) | _1503a2d30_nonzero(static_cast<jule::U64>(_17913_m & ((1LL << _20313_n) - 1LL))));
		_15613_pe=0LL;
	}
	_17913_m=static_cast<jule::U64>(((_17913_m + 512LL) >> 10LL) & (~(_1503a2d30_zero(static_cast<jule::U64>((_17913_m & 1023LL) ^ 512LL)))));
	_15613_pe&=static_cast<jule::I32>((-(static_cast<jule::I32>(_1503a2d30_nonzero(_17913_m)))));
	return static_cast<jule::F64>(_1501bd670_f64_from_bits(static_cast<jule::U64>(((static_cast<jule::U64>(_16313_ps) << 63LL) + (static_cast<jule::U64>(_15613_pe) << 52LL)) + _17913_m)));
}



inline std::tuple<jule::F64,jule::F64> _1502e0ae0_modf(jule::F64 _4413_f) {
	jule::F64 _4437_frac = jule::F64();
	jule::F64 _4423_integer = jule::F64();
	
	jule::F64 _469_abs_f = _1502fb3e0_abs(_4413_f);
	jule::F64 _4713_i = 0LL;
	if (_469_abs_f > 4503599627370496LL) {
		_4713_i=_4413_f;
	} else {
		_4713_i=static_cast<jule::F64>(_469_abs_f + 4503599627370496LL);
		_4713_i-=4503599627370496LL;
		_iter_begin_5669667072:;
		if (!(_4713_i > _469_abs_f)) { goto _iter_end_5669667072; }
		{
			(_4713_i)--;
		}
		_iter_next_5669667072:;
		goto _iter_begin_5669667072;
		_iter_end_5669667072:;
		if (_4413_f < 0LL) {
			_4713_i=static_cast<jule::F64>((-(_4713_i)));
		}
	}
	_4423_integer = _4713_i;
	_4437_frac = static_cast<jule::F64>(_4413_f - _4713_i);
	return std::make_tuple(_4423_integer,_4437_frac);
}



inline jule::F64 _1503d32f0_log10(jule::F64 _4014_x) {
	return static_cast<jule::F64>(_1502aeb50_log(_4014_x) * 0.43429448190325176);
}



inline jule::F64 _1503d32f0_log2(jule::F64 _4413_x) {
	jule::F64 _4510_frac;
	jule::Int _4516_exp;
	std::tie(_4510_frac,_4516_exp) = _150213500_frexp(_4413_x);
	if (_4510_frac == 0.5) {
		return static_cast<jule::F64>(_4516_exp - 1LL);
	}
	return static_cast<jule::F64>((_1502aeb50_log(_4510_frac) * 1.4426950408889634) + static_cast<jule::F64>(_4516_exp));
}



inline jule::F64 _1503484d0_hypot(jule::F64 _5018_p,jule::F64 _5030_q) {
	{
		if (!((_15022f040_is_inf(_5018_p,0LL)) || (_15022f040_is_inf(_5030_q,0LL)))) { goto _case_end_5669677648; }
		_case_begin_5669677648:;
		{
			return static_cast<jule::F64>(_15022f040_inf(1LL));
		}
		goto _match_end_5669677456;
		_case_end_5669677648:;
		if (!((_15022f040_is_nan(_5018_p)) || (_15022f040_is_nan(_5030_q)))) { goto _case_end_5669677776; }
		_case_begin_5669677776:;
		{
			return static_cast<jule::F64>(_15022f040_nan());
		}
		goto _match_end_5669677456;
		_case_end_5669677776:;
		_match_end_5669677456:;
	}
	std::tie(_5018_p,_5030_q) = std::make_tuple(static_cast<jule::F64>(_1502fb3e0_abs(_5018_p)),static_cast<jule::F64>(_1502fb3e0_abs(_5030_q)));
	if (_5018_p < _5030_q) {
		std::tie(_5018_p,_5030_q) = std::make_tuple(_5030_q,_5018_p);
	}
	if (_5018_p == 0LL) {
		return 0LL;
	}
	_5030_q=static_cast<jule::F64>(jule::div(_5030_q,_5018_p));
	return static_cast<jule::F64>(_5018_p * _15059e5b0_sqrt(static_cast<jule::F64>(1LL + (_5030_q * _5030_q))));
}



inline jule::F64 _150347f70_j0(jule::F64 _10715_x) {
	
	
	
	
	
	
	
	
	
	
	
	{
		if (!((_15022f040_is_nan(_10715_x)))) { goto _case_end_5669698016; }
		_case_begin_5669698016:;
		{
			return _10715_x;
		}
		goto _match_end_5669697440;
		_case_end_5669698016:;
		if (!((_15022f040_is_inf(_10715_x,0LL)))) { goto _case_end_5669698144; }
		_case_begin_5669698144:;
		{
			return 0LL;
		}
		goto _match_end_5669697440;
		_case_end_5669698144:;
		if (!((_10715_x == 0LL))) { goto _case_end_5669698272; }
		_case_begin_5669698272:;
		{
			return 1LL;
		}
		goto _match_end_5669697440;
		_case_end_5669698272:;
		_match_end_5669697440:;
	}
	_10715_x=static_cast<jule::F64>(_1502fb3e0_abs(_10715_x));
	if (_10715_x >= 2LL) {
		jule::F64 _13214_s;
		jule::F64 _13217_c;
		std::tie(_13214_s,_13217_c) = _150286070_sincos(_10715_x);
		jule::F64 _13317_ss = _13214_s - _13217_c;
		jule::F64 _13417_cc = _13214_s + _13217_c;
		if (_10715_x < 89884656743115790000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) {
			jule::F64 _13817_z = (-(_1501de350_cos(static_cast<jule::F64>(_10715_x + _10715_x))));
			if ((_13214_s * _13217_c) < 0LL) {
				_13417_cc=static_cast<jule::F64>(jule::div(_13817_z,_13317_ss));
			} else {
				_13317_ss=static_cast<jule::F64>(jule::div(_13817_z,_13417_cc));
			}
		}
		jule::F64 _14917_z = 0LL;
		if (_10715_x > 5188146770730811392LL) {
			_14917_z=static_cast<jule::F64>(jule::div(0.5641895835477563 * _13417_cc,_15059e5b0_sqrt(_10715_x)));
		} else {
			jule::F64 _15317_u = _150347f70_pzero(_10715_x);
			jule::F64 _15417_v = _150347f70_qzero(_10715_x);
			_14917_z=static_cast<jule::F64>(jule::div(0.5641895835477563 * ((_15317_u * _13417_cc) - (_15417_v * _13317_ss)),_15059e5b0_sqrt(_10715_x)));
		}
		return _14917_z;
	}
	if (_10715_x < 0.0001220703125) {
		if (_10715_x < 0.000000007450580596923828) {
			return 1LL;
		}
		return static_cast<jule::F64>(1LL - ((0.25 * _10715_x) * _10715_x));
	}
	jule::F64 _1659_z = _10715_x * _10715_x;
	jule::F64 _1669_r = _1659_z * (0.015624999999999995 + (_1659_z * (-0.00018997929423885472 + (_1659_z * (0.0000018295404953270067 + (_1659_z * -0.000000004618326885321032))))));
	jule::F64 _1679_s = 1LL + (_1659_z * (0.015619102946489001 + (_1659_z * (0.00011692678466333745 + (_1659_z * (0.0000005135465502073181 + (_1659_z * 0.0000000011661400333379)))))));
	if (_10715_x < 1LL) {
		return static_cast<jule::F64>(1LL + (_1659_z * (-0.25 + jule::div(_1669_r,_1679_s))));
	}
	jule::F64 _1719_u = 0.5 * _10715_x;
	return static_cast<jule::F64>(((1LL + _1719_u) * (1LL - _1719_u)) + (_1659_z * jule::div(_1669_r,_1679_s)));
}



inline jule::F64 _150347f70_y0(jule::F64 _18211_x) {
	
	
	
	
	
	
	
	
	
	
	
	
	
	{
		if (!((_18211_x < 0LL) || (_15022f040_is_nan(_18211_x)))) { goto _case_end_5669740944; }
		_case_begin_5669740944:;
		{
			return static_cast<jule::F64>(_15022f040_nan());
		}
		goto _match_end_5669740752;
		_case_end_5669740944:;
		if (!((_15022f040_is_inf(_18211_x,1LL)))) { goto _case_end_5669741072; }
		_case_begin_5669741072:;
		{
			return 0LL;
		}
		goto _match_end_5669740752;
		_case_end_5669741072:;
		if (!((_18211_x == 0LL))) { goto _case_end_5669741200; }
		_case_begin_5669741200:;
		{
			return static_cast<jule::F64>(_15022f040_inf(-1LL));
		}
		goto _match_end_5669740752;
		_case_end_5669741200:;
		_match_end_5669740752:;
	}
	if (_18211_x >= 2LL) {
		jule::F64 _21814_s;
		jule::F64 _21817_c;
		std::tie(_21814_s,_21817_c) = _150286070_sincos(_18211_x);
		jule::F64 _21917_ss = _21814_s - _21817_c;
		jule::F64 _22017_cc = _21814_s + _21817_c;
		if (_18211_x < 89884656743115790000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) {
			jule::F64 _22717_z = (-(_1501de350_cos(static_cast<jule::F64>(_18211_x + _18211_x))));
			if ((_21814_s * _21817_c) < 0LL) {
				_22017_cc=static_cast<jule::F64>(jule::div(_22717_z,_21917_ss));
			} else {
				_21917_ss=static_cast<jule::F64>(jule::div(_22717_z,_22017_cc));
			}
		}
		jule::F64 _23417_z = 0LL;
		if (_18211_x > 5188146770730811392LL) {
			_23417_z=static_cast<jule::F64>(jule::div(0.5641895835477563 * _21917_ss,_15059e5b0_sqrt(_18211_x)));
		} else {
			jule::F64 _23817_u = _150347f70_pzero(_18211_x);
			jule::F64 _23917_v = _150347f70_qzero(_18211_x);
			_23417_z=static_cast<jule::F64>(jule::div(0.5641895835477563 * ((_23817_u * _21917_ss) + (_23917_v * _22017_cc)),_15059e5b0_sqrt(_18211_x)));
		}
		return _23417_z;
	}
	if (_18211_x <= 0.000000007450580596923828) {
		return static_cast<jule::F64>(-0.07380429510868723 + (0.6366197723675814 * _1502aeb50_log(_18211_x)));
	}
	jule::F64 _2479_z = _18211_x * _18211_x;
	jule::F64 _2489_u = -0.07380429510868723 + (_2479_z * (0.17666645250918112 + (_2479_z * (-0.01381856719455969 + (_2479_z * (0.00034745343209368365 + (_2479_z * (-0.0000038140705372436416 + (_2479_z * (0.000000019559013703502292 + (_2479_z * -0.00000000003982051941321034)))))))))));
	jule::F64 _2499_v = 1LL + (_2479_z * (0.01273048348341237 + (_2479_z * (0.00007600686273503533 + (_2479_z * (0.0000002591508518404578 + (_2479_z * 0.00000000044111031133267547)))))));
	return static_cast<jule::F64>(jule::div(_2489_u,_2499_v) + ((0.6366197723675814 * _150347f70_j0(_18211_x)) * _1502aeb50_log(_18211_x)));
}



inline jule::F64 _150347f70_pzero(jule::F64 _33010_x) {
	jule::Array<jule::F64,6>* _33113_p = nullptr;
	jule::Array<jule::F64,5>* _33213_q = nullptr;
	if (_33010_x >= 8LL) {
		_33113_p=(&(_150347f70_P_0R8));
		_33213_q=(&(_150347f70_P_0S8));
	} else if (_33010_x >= 4.5454) {
		_33113_p=(&(_150347f70_P_0R5));
		_33213_q=(&(_150347f70_P_0S5));
	} else if (_33010_x >= 2.8571) {
		_33113_p=(&(_150347f70_P_0R3));
		_33213_q=(&(_150347f70_P_0S3));
	} else if (_33010_x >= 2LL) {
		_33113_p=(&(_150347f70_P_0R2));
		_33213_q=(&(_150347f70_P_0S2));
	}
	{
		jule::F64 _34713_z = jule::div(1LL,_33010_x * _33010_x);
		jule::F64 _34813_r = (*(_33113_p))[0LL] + (_34713_z * ((*(_33113_p))[1LL] + (_34713_z * ((*(_33113_p))[2LL] + (_34713_z * ((*(_33113_p))[3LL] + (_34713_z * ((*(_33113_p))[4LL] + (_34713_z * (*(_33113_p))[5LL])))))))));
		jule::F64 _34913_s = 1LL + (_34713_z * ((*(_33213_q))[0LL] + (_34713_z * ((*(_33213_q))[1LL] + (_34713_z * ((*(_33213_q))[2LL] + (_34713_z * ((*(_33213_q))[3LL] + (_34713_z * (*(_33213_q))[4LL])))))))));
		return static_cast<jule::F64>(1LL + jule::div(_34813_r,_34913_s));
	}
}



inline jule::F64 _150347f70_qzero(jule::F64 _43510_x) {
	jule::Array<jule::F64,6>* _43613_p = nullptr;
	jule::Array<jule::F64,6>* _43713_q = nullptr;
	if (_43510_x >= 8LL) {
		_43613_p=(&(_150347f70_Q_0R8));
		_43713_q=(&(_150347f70_Q_0S8));
	} else if (_43510_x >= 4.5454) {
		_43613_p=(&(_150347f70_Q_0R5));
		_43713_q=(&(_150347f70_Q_0S5));
	} else if (_43510_x >= 2.8571) {
		_43613_p=(&(_150347f70_Q_0R3));
		_43713_q=(&(_150347f70_Q_0S3));
	} else if (_43510_x >= 2LL) {
		_43613_p=(&(_150347f70_Q_0R2));
		_43713_q=(&(_150347f70_Q_0S2));
	}
	{
		jule::F64 _45213_z = jule::div(1LL,_43510_x * _43510_x);
		jule::F64 _45313_r = (*(_43613_p))[0LL] + (_45213_z * ((*(_43613_p))[1LL] + (_45213_z * ((*(_43613_p))[2LL] + (_45213_z * ((*(_43613_p))[3LL] + (_45213_z * ((*(_43613_p))[4LL] + (_45213_z * (*(_43613_p))[5LL])))))))));
		jule::F64 _45413_s = 1LL + (_45213_z * ((*(_43713_q))[0LL] + (_45213_z * ((*(_43713_q))[1LL] + (_45213_z * ((*(_43713_q))[2LL] + (_45213_z * ((*(_43713_q))[3LL] + (_45213_z * ((*(_43713_q))[4LL] + (_45213_z * (*(_43713_q))[5LL])))))))))));
		return static_cast<jule::F64>(jule::div(-0.125 + jule::div(_45313_r,_45413_s),_43510_x));
	}
}



inline jule::F64 _1503e2220_ldexp(jule::F64 _4518_frac,jule::Int _4533_exp) {
	{
		if (!((_4518_frac == 0LL))) { goto _case_end_5669804688; }
		_case_begin_5669804688:;
		{
			return _4518_frac;
		}
		goto _match_end_5669792704;
		_case_end_5669804688:;
		if (!((_15022f040_is_inf(_4518_frac,0LL)) || (_15022f040_is_nan(_4518_frac)))) { goto _case_end_5669804800; }
		_case_begin_5669804800:;
		{
			return _4518_frac;
		}
		goto _match_end_5669792704;
		_case_end_5669804800:;
		_match_end_5669792704:;
	}
	jule::Int _5313_e = 0LL;
	std::tie(_4518_frac,_5313_e) = _15022f040_normalize(_4518_frac);
	_4533_exp+=_5313_e;
	jule::U64 _5613_x = _1501bd670_f64_bits(_4518_frac);
	_4533_exp+=static_cast<jule::Int>((static_cast<jule::Int>(_5613_x >> 52LL) & 2047LL) - 1023LL);
	if (_4533_exp < -1075LL) {
		return static_cast<jule::F64>(_1501dffc0_copysign(0LL,_4518_frac));
	}
	if (_4533_exp > 1023LL) {
		if (_4518_frac < 0LL) {
			return static_cast<jule::F64>(_15022f040_inf(-1LL));
		}
		return static_cast<jule::F64>(_15022f040_inf(1LL));
	}
	jule::F64 _6713_m = 1LL;
	if (_4533_exp < -1022LL) {
		_4533_exp+=53LL;
		_6713_m=0.00000000000000011102230246251565;
	}
	_5613_x=static_cast<jule::U64>(_5613_x & -9218868437227405313LL);
	_5613_x|=static_cast<jule::U64>(static_cast<jule::U64>(_4533_exp + 1023LL) << 52LL);
	return static_cast<jule::F64>(_6713_m * _1501bd670_f64_from_bits(_5613_x));
}



inline jule::Bool _150454890_signbit(jule::F64 _3916_x) {
	return (_1501bd670_f64_bits(_3916_x) & 9223372036854775808LLU) != 0LL;
}



inline jule::F64 _1503f4a20_sinh(jule::F64 _5617_x) {
	
	
	
	
	
	
	
	jule::Bool _6613_sign = false;
	if (_5617_x < 0LL) {
		_5617_x=static_cast<jule::F64>((-(_5617_x)));
		_6613_sign=true;
	}
	jule::F64 _7213_temp = 0LL;
	{
		if (!((_5617_x > 21LL))) { goto _case_end_5669837456; }
		_case_begin_5669837456:;
		{
			_7213_temp=static_cast<jule::F64>(_150538d70_exp(_5617_x) * 0.5);
		}
		goto _match_end_5669831568;
		_case_end_5669837456:;
		if (!((_5617_x > 0.5))) { goto _case_end_5669832000; }
		_case_begin_5669832000:;
		{
			jule::F64 _7713_ex = _150538d70_exp(_5617_x);
			_7213_temp=static_cast<jule::F64>((_7713_ex - jule::div(1LL,_7713_ex)) * 0.5);
		}
		goto _match_end_5669831568;
		_case_end_5669832000:;
		_case_begin_5669831696:;
		{
			jule::F64 _8013_sq = _5617_x * _5617_x;
			_7213_temp=static_cast<jule::F64>(((((((-26.30563213397497 * _8013_sq) + -2894.211355989564) * _8013_sq) + -89912.72022039509) * _8013_sq) + -630767.3640497717) * _5617_x);
			_7213_temp=static_cast<jule::F64>(jule::div(_7213_temp,((((_8013_sq + -173.6789535582337) * _8013_sq) + 15215.17378790019) * _8013_sq) + -630767.3640497717));
		}
		goto _match_end_5669831568;
		_case_end_5669831696:;
		_match_end_5669831568:;
	}
	if (_6613_sign) {
		_7213_temp=static_cast<jule::F64>((-(_7213_temp)));
	}
	return _7213_temp;
}



inline jule::F64 _1503f4a20_cosh(jule::F64 _9717_x) {
	_9717_x=static_cast<jule::F64>(_1502fb3e0_abs(_9717_x));
	if (_9717_x > 21LL) {
		return static_cast<jule::F64>(_150538d70_exp(_9717_x) * 0.5);
	}
	jule::F64 _1029_ex = _150538d70_exp(_9717_x);
	return static_cast<jule::F64>((_1029_ex + jule::div(1LL,_1029_ex)) * 0.5);
}



inline std::tuple<jule::F64,jule::Int> _15046e170_lgamma(jule::F64 _20519_x) {
	jule::Int _20542_sign = jule::Int();
	jule::F64 _20529_lgamma = jule::F64();
	
	
	
	
	
	
	
	_20542_sign=1LL;
	{
		if (!((_15022f040_is_nan(_20519_x)))) { goto _case_end_5669854496; }
		_case_begin_5669854496:;
		{
			_20529_lgamma=_20519_x;
			return std::make_tuple(_20529_lgamma,_20542_sign);
		}
		goto _match_end_5669853856;
		_case_end_5669854496:;
		if (!((_15022f040_is_inf(_20519_x,0LL)))) { goto _case_end_5669854608; }
		_case_begin_5669854608:;
		{
			_20529_lgamma=_20519_x;
			return std::make_tuple(_20529_lgamma,_20542_sign);
		}
		goto _match_end_5669853856;
		_case_end_5669854608:;
		if (!((_20519_x == 0LL))) { goto _case_end_5669855200; }
		_case_begin_5669855200:;
		{
			_20529_lgamma=static_cast<jule::F64>(_15022f040_inf(1LL));
			return std::make_tuple(_20529_lgamma,_20542_sign);
		}
		goto _match_end_5669853856;
		_case_end_5669855200:;
		_match_end_5669853856:;
	}
	jule::Bool _22813_neg = false;
	if (_20519_x < 0LL) {
		_20519_x=static_cast<jule::F64>((-(_20519_x)));
		_22813_neg=true;
	}
	if (_20519_x < 0.000000000000000000000847033) {
		if (_22813_neg) {
			_20542_sign=-1LL;
		}
		_20529_lgamma=static_cast<jule::F64>((-(_1502aeb50_log(_20519_x))));
		return std::make_tuple(_20529_lgamma,_20542_sign);
	}
	jule::F64 _24113_nadj = 0LL;
	if (_22813_neg) {
		if (_20519_x >= 4503599627370496LL) {
			_20529_lgamma=static_cast<jule::F64>(_15022f040_inf(1LL));
			return std::make_tuple(_20529_lgamma,_20542_sign);
		}
		jule::F64 _24713_t = _15046e170_sin_pi(_20519_x);
		if (_24713_t == 0LL) {
			_20529_lgamma=static_cast<jule::F64>(_15022f040_inf(1LL));
			return std::make_tuple(_20529_lgamma,_20542_sign);
		}
		_24113_nadj=static_cast<jule::F64>(_1502aeb50_log(static_cast<jule::F64>(jule::div(3.141592653589793,_1502fb3e0_abs(static_cast<jule::F64>(_24713_t * _20519_x))))));
		if (_24713_t < 0LL) {
			_20542_sign=-1LL;
		}
	}
	{
		if (!((_20519_x == 1LL) || (_20519_x == 2LL))) { goto _case_end_5669872496; }
		_case_begin_5669872496:;
		{
			_20529_lgamma=0LL;
			return std::make_tuple(_20529_lgamma,_20542_sign);
		}
		goto _match_end_5669870128;
		_case_end_5669872496:;
		if (!((_20519_x < 2LL))) { goto _case_end_5669870608; }
		_case_begin_5669870608:;
		{
			jule::F64 _26317_y = 0LL;
			jule::Int _26417_i = 0LL;
			if (_20519_x <= 0.9) {
				_20529_lgamma=static_cast<jule::F64>((-(_1502aeb50_log(_20519_x))));
				{
					if (!((_20519_x >= 0.7316321449683623))) { goto _case_end_5669879728; }
					_case_begin_5669879728:;
					{
						_26317_y=static_cast<jule::F64>(1LL - _20519_x);
						_26417_i=0LL;
					}
					goto _match_end_5669877344;
					_case_end_5669879728:;
					if (!((_20519_x >= 0.19163214496836223))) { goto _case_end_5669878768; }
					_case_begin_5669878768:;
					{
						_26317_y=static_cast<jule::F64>(_20519_x - 0.46163214496836225);
						_26417_i=1LL;
					}
					goto _match_end_5669877344;
					_case_end_5669878768:;
					_case_begin_5669878288:;
					{
						_26317_y=_20519_x;
						_26417_i=2LL;
					}
					goto _match_end_5669877344;
					_case_end_5669878288:;
					_match_end_5669877344:;
				}
			} else {
				_20529_lgamma=0LL;
				{
					if (!((_20519_x >= 1.7316321449683623))) { goto _case_end_5669884064; }
					_case_begin_5669884064:;
					{
						_26317_y=static_cast<jule::F64>(2LL - _20519_x);
						_26417_i=0LL;
					}
					goto _match_end_5669880944;
					_case_end_5669884064:;
					if (!((_20519_x >= 1.1916321449683622))) { goto _case_end_5669885168; }
					_case_begin_5669885168:;
					{
						_26317_y=static_cast<jule::F64>(_20519_x - 1.4616321449683622);
						_26417_i=1LL;
					}
					goto _match_end_5669880944;
					_case_end_5669885168:;
					_case_begin_5669876928:;
					{
						_26317_y=static_cast<jule::F64>(_20519_x - 1LL);
						_26417_i=2LL;
					}
					goto _match_end_5669880944;
					_case_end_5669876928:;
					_match_end_5669880944:;
				}
			}
			{
				auto _match_expr{ _26417_i };
				if (!((0LL) == _match_expr)) { goto _case_end_5669880752; }
				_case_begin_5669880752:;
				{
					jule::F64 _29417_z = _26317_y * _26317_y;
					jule::F64 _29517_p1 = _15046e170__LGAM_A[0LL] + (_29417_z * (_15046e170__LGAM_A[2LL] + (_29417_z * (_15046e170__LGAM_A[4LL] + (_29417_z * (_15046e170__LGAM_A[6LL] + (_29417_z * (_15046e170__LGAM_A[8LL] + (_29417_z * _15046e170__LGAM_A[10LL])))))))));
					jule::F64 _29617_p2 = _29417_z * (_15046e170__LGAM_A[1LL] + (_29417_z * ((+(_15046e170__LGAM_A[3LL])) + (_29417_z * (_15046e170__LGAM_A[5LL] + (_29417_z * (_15046e170__LGAM_A[7LL] + (_29417_z * (_15046e170__LGAM_A[9LL] + (_29417_z * _15046e170__LGAM_A[11LL]))))))))));
					jule::F64 _29717_p = (_26317_y * _29517_p1) + _29617_p2;
					_20529_lgamma+=static_cast<jule::F64>(_29717_p - (0.5 * _26317_y));
				}
				goto _match_end_5669886672;
				_case_end_5669880752:;
				if (!((1LL) == _match_expr)) { goto _case_end_5669885920; }
				_case_begin_5669885920:;
				{
					jule::F64 _30017_z = _26317_y * _26317_y;
					jule::F64 _30117_w = _30017_z * _26317_y;
					jule::F64 _30217_p1 = _15046e170__LGAM_T[0LL] + (_30117_w * (_15046e170__LGAM_T[3LL] + (_30117_w * (_15046e170__LGAM_T[6LL] + (_30117_w * (_15046e170__LGAM_T[9LL] + (_30117_w * _15046e170__LGAM_T[12LL])))))));
					jule::F64 _30317_p2 = _15046e170__LGAM_T[1LL] + (_30117_w * (_15046e170__LGAM_T[4LL] + (_30117_w * (_15046e170__LGAM_T[7LL] + (_30117_w * (_15046e170__LGAM_T[10LL] + (_30117_w * _15046e170__LGAM_T[13LL])))))));
					jule::F64 _30417_p3 = _15046e170__LGAM_T[2LL] + (_30117_w * (_15046e170__LGAM_T[5LL] + (_30117_w * (_15046e170__LGAM_T[8LL] + (_30117_w * (_15046e170__LGAM_T[11LL] + (_30117_w * _15046e170__LGAM_T[14LL])))))));
					jule::F64 _30517_p = (_30017_z * _30217_p1) - (-0.000000000000000003638676997039505 - (_30117_w * (_30317_p2 + (_26317_y * _30417_p3))));
					_20529_lgamma+=static_cast<jule::F64>(-0.12148629053584961 + _30517_p);
				}
				goto _match_end_5669886672;
				_case_end_5669885920:;
				if (!((2LL) == _match_expr)) { goto _case_end_5669876528; }
				_case_begin_5669876528:;
				{
					jule::F64 _30817_p1 = _26317_y * (_15046e170__LGAM_U[0LL] + (_26317_y * (_15046e170__LGAM_U[1LL] + (_26317_y * (_15046e170__LGAM_U[2LL] + (_26317_y * (_15046e170__LGAM_U[3LL] + (_26317_y * (_15046e170__LGAM_U[4LL] + (_26317_y * _15046e170__LGAM_U[5LL]))))))))));
					jule::F64 _30917_p2 = 1LL + (_26317_y * (_15046e170__LGAM_V[1LL] + (_26317_y * (_15046e170__LGAM_V[2LL] + (_26317_y * (_15046e170__LGAM_V[3LL] + (_26317_y * (_15046e170__LGAM_V[4LL] + (_26317_y * _15046e170__LGAM_V[5LL])))))))));
					_20529_lgamma+=static_cast<jule::F64>((-0.5 * _26317_y) + jule::div(_30817_p1,_30917_p2));
				}
				goto _match_end_5669886672;
				_case_end_5669876528:;
				_match_end_5669886672:;
			}
		}
		goto _match_end_5669870128;
		_case_end_5669870608:;
		if (!((_20519_x < 8LL))) { goto _case_end_5669870720; }
		_case_begin_5669870720:;
		{
			jule::Int _31313_i = static_cast<jule::Int>(_20519_x);
			jule::F64 _31413_y = _20519_x - static_cast<jule::F64>(_31313_i);
			jule::F64 _31513_p = _31413_y * (_15046e170__LGAM_S[0LL] + (_31413_y * (_15046e170__LGAM_S[1LL] + (_31413_y * (_15046e170__LGAM_S[2LL] + (_31413_y * (_15046e170__LGAM_S[3LL] + (_31413_y * (_15046e170__LGAM_S[4LL] + (_31413_y * (_15046e170__LGAM_S[5LL] + (_31413_y * _15046e170__LGAM_S[6LL]))))))))))));
			jule::F64 _31613_q = 1LL + (_31413_y * (_15046e170__LGAM_R[1LL] + (_31413_y * (_15046e170__LGAM_R[2LL] + (_31413_y * (_15046e170__LGAM_R[3LL] + (_31413_y * (_15046e170__LGAM_R[4LL] + (_31413_y * (_15046e170__LGAM_R[5LL] + (_31413_y * _15046e170__LGAM_R[6LL])))))))))));
			_20529_lgamma=static_cast<jule::F64>((0.5 * _31413_y) + jule::div(_31513_p,_31613_q));
			jule::F64 _31817_z = 1LL;
			{
				auto _match_expr{ _31313_i };
				if (!((7LL) == _match_expr)) { goto _case_end_5669929376; }
				_case_begin_5669929376:;
				{
					_31817_z*=static_cast<jule::F64>(_31413_y + 6LL);
					goto _case_begin_5669929488;
				}
				goto _match_end_5669923584;
				_case_end_5669929376:;
				if (!((6LL) == _match_expr)) { goto _case_end_5669929488; }
				_case_begin_5669929488:;
				{
					_31817_z*=static_cast<jule::F64>(_31413_y + 5LL);
					goto _case_begin_5669929600;
				}
				goto _match_end_5669923584;
				_case_end_5669929488:;
				if (!((5LL) == _match_expr)) { goto _case_end_5669929600; }
				_case_begin_5669929600:;
				{
					_31817_z*=static_cast<jule::F64>(_31413_y + 4LL);
					goto _case_begin_5669929712;
				}
				goto _match_end_5669923584;
				_case_end_5669929600:;
				if (!((4LL) == _match_expr)) { goto _case_end_5669929712; }
				_case_begin_5669929712:;
				{
					_31817_z*=static_cast<jule::F64>(_31413_y + 3LL);
					goto _case_begin_5669929824;
				}
				goto _match_end_5669923584;
				_case_end_5669929712:;
				if (!((3LL) == _match_expr)) { goto _case_end_5669929824; }
				_case_begin_5669929824:;
				{
					_31817_z*=static_cast<jule::F64>(_31413_y + 2LL);
					_20529_lgamma+=static_cast<jule::F64>(_1502aeb50_log(_31817_z));
				}
				goto _match_end_5669923584;
				_case_end_5669929824:;
				_match_end_5669923584:;
			}
		}
		goto _match_end_5669870128;
		_case_end_5669870720:;
		if (!((_20519_x < 288230376151711744LL))) { goto _case_end_5669871408; }
		_case_begin_5669871408:;
		{
			jule::F64 _33713_t = _1502aeb50_log(_20519_x);
			jule::F64 _33813_z = jule::div(1LL,_20519_x);
			jule::F64 _33913_y = _33813_z * _33813_z;
			jule::F64 _34013_w = _15046e170__LGAM_W[0LL] + (_33813_z * (_15046e170__LGAM_W[1LL] + (_33913_y * (_15046e170__LGAM_W[2LL] + (_33913_y * (_15046e170__LGAM_W[3LL] + (_33913_y * (_15046e170__LGAM_W[4LL] + (_33913_y * (_15046e170__LGAM_W[5LL] + (_33913_y * _15046e170__LGAM_W[6LL])))))))))));
			_20529_lgamma=static_cast<jule::F64>(((_20519_x - 0.5) * (_33713_t - 1LL)) + _34013_w);
		}
		goto _match_end_5669870128;
		_case_end_5669871408:;
		_case_begin_5669870224:;
		{
			_20529_lgamma=static_cast<jule::F64>(_20519_x * (_1502aeb50_log(_20519_x) - 1LL));
		}
		goto _match_end_5669870128;
		_case_end_5669870224:;
		_match_end_5669870128:;
	}
	if (_22813_neg) {
		_20529_lgamma=static_cast<jule::F64>(_24113_nadj - _20529_lgamma);
	}
	return std::make_tuple(_20529_lgamma,_20542_sign);
}



inline jule::F64 _15046e170_sin_pi(jule::F64 _35215_x) {
	
	
	if (_35215_x < 0.25) {
		return static_cast<jule::F64>((-(_1501de350_sin(static_cast<jule::F64>(3.141592653589793 * _35215_x)))));
	}
	jule::F64 _36013_z = _150257f10_floor(_35215_x);
	jule::Int _36113_n = 0LL;
	if (_36013_z != _35215_x) {
		_35215_x=static_cast<jule::F64>(_1501de520_mod(_35215_x,2LL));
		_36113_n=static_cast<jule::Int>(_35215_x * 4LL);
	} else {
		if (_35215_x >= 9007199254740992LL) {
			_35215_x=0LL;
			_36113_n=0LL;
		} else {
			if (_35215_x < 4503599627370496LL) {
				_36013_z=static_cast<jule::F64>(_35215_x + 4503599627370496LL);
			}
			_36113_n=static_cast<jule::Int>(1LL & _1501bd670_f64_bits(_36013_z));
			_35215_x=static_cast<jule::F64>(_36113_n);
			_36113_n<<=2LL;
		}
	}
	{
		auto _match_expr{ _36113_n };
		if (!((0LL) == _match_expr)) { goto _case_end_5669958544; }
		_case_begin_5669958544:;
		{
			_35215_x=static_cast<jule::F64>(_1501de350_sin(static_cast<jule::F64>(3.141592653589793 * _35215_x)));
		}
		goto _match_end_5669955376;
		_case_end_5669958544:;
		if (!((1LL) == _match_expr || (2LL) == _match_expr)) { goto _case_end_5669952800; }
		_case_begin_5669952800:;
		{
			_35215_x=static_cast<jule::F64>(_1501de350_cos(static_cast<jule::F64>(3.141592653589793 * (0.5 - _35215_x))));
		}
		goto _match_end_5669955376;
		_case_end_5669952800:;
		if (!((3LL) == _match_expr || (4LL) == _match_expr)) { goto _case_end_5669952912; }
		_case_begin_5669952912:;
		{
			_35215_x=static_cast<jule::F64>(_1501de350_sin(static_cast<jule::F64>(3.141592653589793 * (1LL - _35215_x))));
		}
		goto _match_end_5669955376;
		_case_end_5669952912:;
		if (!((5LL) == _match_expr || (6LL) == _match_expr)) { goto _case_end_5669958752; }
		_case_begin_5669958752:;
		{
			_35215_x=static_cast<jule::F64>((-(_1501de350_cos(static_cast<jule::F64>(3.141592653589793 * (_35215_x - 1.5))))));
		}
		goto _match_end_5669955376;
		_case_end_5669958752:;
		_case_begin_5669957312:;
		{
			_35215_x=static_cast<jule::F64>(_1501de350_sin(static_cast<jule::F64>(3.141592653589793 * (_35215_x - 2LL))));
		}
		goto _match_end_5669955376;
		_case_end_5669957312:;
		_match_end_5669955376:;
	}
	return static_cast<jule::F64>((-(_35215_x)));
}



inline jule::F64 _15047d3b0_acosh(jule::F64 _7314_x) {
	
	{
		if (!((_7314_x < 1LL) || (_15022f040_is_nan(_7314_x)))) { goto _case_end_5669966416; }
		_case_begin_5669966416:;
		{
			return static_cast<jule::F64>(_15022f040_nan());
		}
		goto _match_end_5669966176;
		_case_end_5669966416:;
		if (!((_7314_x == 1LL))) { goto _case_end_5669966528; }
		_case_begin_5669966528:;
		{
			return 0LL;
		}
		goto _match_end_5669966176;
		_case_end_5669966528:;
		if (!((_7314_x >= 268435456LL))) { goto _case_end_5669966640; }
		_case_begin_5669966640:;
		{
			return static_cast<jule::F64>(_1502aeb50_log(_7314_x) + 0.6931471805599453);
		}
		goto _match_end_5669966176;
		_case_end_5669966640:;
		if (!((_7314_x > 2LL))) { goto _case_end_5669966752; }
		_case_begin_5669966752:;
		{
			return static_cast<jule::F64>(_1502aeb50_log(static_cast<jule::F64>((2LL * _7314_x) - jule::div(1LL,_7314_x + _15059e5b0_sqrt(static_cast<jule::F64>((_7314_x * _7314_x) - 1LL))))));
		}
		goto _match_end_5669966176;
		_case_end_5669966752:;
		_match_end_5669966176:;
	}
	jule::F64 _869_t = _7314_x - 1LL;
	return static_cast<jule::F64>(_15055fc00_log1p(static_cast<jule::F64>(_869_t + _15059e5b0_sqrt(static_cast<jule::F64>((2LL * _869_t) + (_869_t * _869_t))))));
}



inline jule::F64 _1503e4950_tanh(jule::F64 _10613_x) {
	
	jule::F64 _10813_z = _1502fb3e0_abs(_10613_x);
	{
		if (!((_10813_z > 44.014845965556525))) { goto _case_end_5669984288; }
		_case_begin_5669984288:;
		{
			if (_10613_x < 0LL) {
				return -1LL;
			}
			return 1LL;
		}
		goto _match_end_5669977840;
		_case_end_5669984288:;
		if (!((_10813_z >= 0.625))) { goto _case_end_5669984432; }
		_case_begin_5669984432:;
		{
			jule::F64 _11613_s = _150538d70_exp(static_cast<jule::F64>(2LL * _10813_z));
			_10813_z=static_cast<jule::F64>(1LL - jule::div(2LL,_11613_s + 1LL));
			if (_10613_x < 0LL) {
				_10813_z=static_cast<jule::F64>((-(_10813_z)));
			}
		}
		goto _match_end_5669977840;
		_case_end_5669984432:;
		_case_begin_5669977968:;
		{
			if (_10613_x == 0LL) {
				return _10613_x;
			}
			jule::F64 _12513_s = _10613_x * _10613_x;
			_10813_z=static_cast<jule::F64>(_10613_x + jule::div((_10613_x * _12513_s) * ((((_1503e4950_TANH_P[0LL] * _12513_s) + _1503e4950_TANH_P[1LL]) * _12513_s) + _1503e4950_TANH_P[2LL]),((((_12513_s + _1503e4950_TANH_Q[0LL]) * _12513_s) + _1503e4950_TANH_Q[1LL]) * _12513_s) + _1503e4950_TANH_Q[2LL]));
		}
		goto _match_end_5669977840;
		_case_end_5669977968:;
		_match_end_5669977840:;
	}
	return _10813_z;
}



inline jule::F64 _1504d7af0_cbrt(jule::F64 _5617_x) {
	
	
	
	
	
	
	
	
	if (((_5617_x == 0LL) || _15022f040_is_nan(_5617_x)) || _15022f040_is_inf(_5617_x,0LL)) {
		return _5617_x;
	}
	jule::Bool _7113_sign = false;
	if (_5617_x < 0LL) {
		_5617_x=static_cast<jule::F64>((-(_5617_x)));
		_7113_sign=true;
	}
	jule::F64 _7813_t = _1501bd670_f64_from_bits(static_cast<jule::U64>(jule::div(_1501bd670_f64_bits(_5617_x),3LL) + 3071306043645493248LL));
	if (_5617_x < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014) {
		_7813_t=static_cast<jule::F64>(18014398509481984LL);
		_7813_t*=_5617_x;
		_7813_t=static_cast<jule::F64>(_1501bd670_f64_from_bits(static_cast<jule::U64>(jule::div(_1501bd670_f64_bits(_7813_t),3LL) + 2990241250352824320LL)));
	}
	jule::F64 _8713_r = jule::div(_7813_t * _7813_t,_5617_x);
	jule::F64 _8813_s = 0.5428571428571428 + (_8713_r * _7813_t);
	_7813_t*=static_cast<jule::F64>(0.35714285714285715 + jule::div(1.6071428571428572,(_8813_s + 1.4142857142857144) + jule::div(-0.7053061224489796,_8813_s)));
	_7813_t=static_cast<jule::F64>(_1501bd670_f64_from_bits(static_cast<jule::U64>((_1501bd670_f64_bits(_7813_t) & -1073741824LL) + 1073741824LL)));
	_8813_s=static_cast<jule::F64>(_7813_t * _7813_t);
	_8713_r=static_cast<jule::F64>(jule::div(_5617_x,_8813_s));
	jule::F64 _979_w = _7813_t + _7813_t;
	_8713_r=static_cast<jule::F64>(jule::div(_8713_r - _7813_t,_979_w + _8713_r));
	_7813_t=static_cast<jule::F64>(_7813_t + (_7813_t * _8713_r));
	if (_7113_sign) {
		_7813_t=static_cast<jule::F64>((-(_7813_t)));
	}
	return _7813_t;
}



inline jule::F64 _150480f30_pow(jule::F64 _6412_x,jule::F64 _6420_y) {
	{
		if (!((_6420_y == 0LL) || (_6412_x == 1LL))) { goto _case_end_5670016992; }
		_case_begin_5670016992:;
		{
			return 1LL;
		}
		goto _match_end_5670016704;
		_case_end_5670016992:;
		if (!((_6420_y == 1LL))) { goto _case_end_5670017120; }
		_case_begin_5670017120:;
		{
			return _6412_x;
		}
		goto _match_end_5670016704;
		_case_end_5670017120:;
		if (!((_15022f040_is_nan(_6412_x)) || (_15022f040_is_nan(_6420_y)))) { goto _case_end_5670017248; }
		_case_begin_5670017248:;
		{
			return static_cast<jule::F64>(_15022f040_nan());
		}
		goto _match_end_5670016704;
		_case_end_5670017248:;
		if (!((_6412_x == 0LL))) { goto _case_end_5670017376; }
		_case_begin_5670017376:;
		{
			{
				if (!((_6420_y < 0LL))) { goto _case_end_5670020464; }
				_case_begin_5670020464:;
				{
					if (_150480f30_is_odd_int(_6420_y)) {
						return static_cast<jule::F64>(_1501dffc0_copysign(static_cast<jule::F64>(_15022f040_inf(1LL)),_6412_x));
					}
					return static_cast<jule::F64>(_15022f040_inf(1LL));
				}
				goto _match_end_5670021216;
				_case_end_5670020464:;
				if (!((_6420_y > 0LL))) { goto _case_end_5670020576; }
				_case_begin_5670020576:;
				{
					if (_150480f30_is_odd_int(_6420_y)) {
						return _6412_x;
					}
					return 0LL;
				}
				goto _match_end_5670021216;
				_case_end_5670020576:;
				_match_end_5670021216:;
			}
		}
		goto _match_end_5670016704;
		_case_end_5670017376:;
		if (!((_15022f040_is_inf(_6420_y,0LL)))) { goto _case_end_5670017504; }
		_case_begin_5670017504:;
		{
			{
				if (!((_6412_x == -1LL))) { goto _case_end_5670029248; }
				_case_begin_5670029248:;
				{
					return 1LL;
				}
				goto _match_end_5670027104;
				_case_end_5670029248:;
				if (!(((_1502fb3e0_abs(_6412_x) < 1LL) == _15022f040_is_inf(_6420_y,1LL)))) { goto _case_end_5670028992; }
				_case_begin_5670028992:;
				{
					return 0LL;
				}
				goto _match_end_5670027104;
				_case_end_5670028992:;
				_case_begin_5670021904:;
				{
					return static_cast<jule::F64>(_15022f040_inf(1LL));
				}
				goto _match_end_5670027104;
				_case_end_5670021904:;
				_match_end_5670027104:;
			}
		}
		goto _match_end_5670016704;
		_case_end_5670017504:;
		if (!((_15022f040_is_inf(_6412_x,0LL)))) { goto _case_end_5670017632; }
		_case_begin_5670017632:;
		{
			if (_15022f040_is_inf(_6412_x,-1LL)) {
				return static_cast<jule::F64>(_150480f30_pow(static_cast<jule::F64>(jule::div(1LL,_6412_x)),static_cast<jule::F64>((-(_6420_y)))));
			}
			{
				if (!((_6420_y < 0LL))) { goto _case_end_5670031728; }
				_case_begin_5670031728:;
				{
					return 0LL;
				}
				goto _match_end_5670031488;
				_case_end_5670031728:;
				if (!((_6420_y > 0LL))) { goto _case_end_5670030480; }
				_case_begin_5670030480:;
				{
					return static_cast<jule::F64>(_15022f040_inf(1LL));
				}
				goto _match_end_5670031488;
				_case_end_5670030480:;
				_match_end_5670031488:;
			}
		}
		goto _match_end_5670016704;
		_case_end_5670017632:;
		if (!((_6420_y == 0.5))) { goto _case_end_5670017760; }
		_case_begin_5670017760:;
		{
			return static_cast<jule::F64>(_15059e5b0_sqrt(_6412_x));
		}
		goto _match_end_5670016704;
		_case_end_5670017760:;
		if (!((_6420_y == -0.5))) { goto _case_end_5670017888; }
		_case_begin_5670017888:;
		{
			return static_cast<jule::F64>(jule::div(1LL,_15059e5b0_sqrt(_6412_x)));
		}
		goto _match_end_5670016704;
		_case_end_5670017888:;
		_match_end_5670016704:;
	}
	jule::F64 _10814_yi;
	jule::F64 _10822_yf;
	std::tie(_10814_yi,_10822_yf) = _1502e0ae0_modf(static_cast<jule::F64>(_1502fb3e0_abs(_6420_y)));
	if ((_10822_yf != 0LL) && (_6412_x < 0LL)) {
		return static_cast<jule::F64>(_15022f040_nan());
	}
	if (_10814_yi >= 9223372036854775808LLU) {
		{
			if (!((_6412_x == -1LL))) { goto _case_end_5670042704; }
			_case_begin_5670042704:;
			{
				return 1LL;
			}
			goto _match_end_5670038352;
			_case_end_5670042704:;
			if (!(((_1502fb3e0_abs(_6412_x) < 1LL) == (_6420_y > 0LL)))) { goto _case_end_5670042448; }
			_case_begin_5670042448:;
			{
				return 0LL;
			}
			goto _match_end_5670038352;
			_case_end_5670042448:;
			_case_begin_5670038496:;
			{
				return static_cast<jule::F64>(_15022f040_inf(1LL));
			}
			goto _match_end_5670038352;
			_case_end_5670038496:;
			_match_end_5670038352:;
		}
	}
	jule::F64 _12613_a1 = 1LL;
	jule::Int _12713_ae = 0LL;
	if (_10822_yf != 0LL) {
		if (_10822_yf > 0.5) {
			(_10822_yf)--;
			(_10814_yi)++;
		}
		_12613_a1=static_cast<jule::F64>(_150538d70_exp(static_cast<jule::F64>(_10822_yf * _1502aeb50_log(_6412_x))));
	}
	jule::F64 _14214_x1;
	jule::Int _14222_xe;
	std::tie(_14214_x1,_14222_xe) = _150213500_frexp(_6412_x);
	jule::I64 _14313_i = static_cast<jule::I64>(_10814_yi);
	_iter_begin_5670049968:;
	if (!(_14313_i != 0LL)) { goto _iter_end_5670049968; }
	{
		if ((_14222_xe < -4096LL) || (4096LL < _14222_xe)) {
			_12713_ae+=_14222_xe;
			goto _iter_end_5670049968;
		}
		if ((_14313_i & 1LL) == 1LL) {
			_12613_a1*=_14214_x1;
			_12713_ae+=_14222_xe;
		}
		_14214_x1*=_14214_x1;
		_14222_xe<<=1LL;
		if (_14214_x1 < 0.5) {
			_14214_x1+=_14214_x1;
			(_14222_xe)--;
		}
	}
	_iter_next_5670049968:;
	_14313_i>>=1LL;
	goto _iter_begin_5670049968;
	_iter_end_5670049968:;
	if (_6420_y < 0LL) {
		_12613_a1=static_cast<jule::F64>(jule::div(1LL,_12613_a1));
		_12713_ae=static_cast<jule::Int>((-(_12713_ae)));
	}
	return static_cast<jule::F64>(_1503e2220_ldexp(_12613_a1,_12713_ae));
}



inline jule::Bool _150480f30_is_odd_int(jule::F64 _17615_x) {
	jule::F64 _17710_xi;
	jule::F64 _17714_xf;
	std::tie(_17710_xi,_17714_xf) = _1502e0ae0_modf(_17615_x);
	return (_17714_xf == 0LL) && ((static_cast<jule::I64>(_17710_xi) & 1LL) == 1LL);
}



inline jule::F64 _150538d70_exp(jule::F64 _12212_x) {
	
	
	
	
	
	
	{
		if (!((_15022f040_is_nan(_12212_x)) || (_15022f040_is_inf(_12212_x,1LL)))) { goto _case_end_5670067872; }
		_case_begin_5670067872:;
		{
			return _12212_x;
		}
		goto _match_end_5670067456;
		_case_end_5670067872:;
		if (!((_15022f040_is_inf(_12212_x,-1LL)))) { goto _case_end_5670068048; }
		_case_begin_5670068048:;
		{
			return 0LL;
		}
		goto _match_end_5670067456;
		_case_end_5670068048:;
		if (!((_12212_x > 709.782712893384))) { goto _case_end_5670068160; }
		_case_begin_5670068160:;
		{
			return static_cast<jule::F64>(_15022f040_inf(1LL));
		}
		goto _match_end_5670067456;
		_case_end_5670068160:;
		if (!((_12212_x < -745.1332191019411))) { goto _case_end_5670068272; }
		_case_begin_5670068272:;
		{
			return 0LL;
		}
		goto _match_end_5670067456;
		_case_end_5670068272:;
		if (!(((-0.000000003725290298461914 < _12212_x) && (_12212_x < 0.000000003725290298461914)))) { goto _case_end_5670068384; }
		_case_begin_5670068384:;
		{
			return static_cast<jule::F64>(1LL + _12212_x);
		}
		goto _match_end_5670067456;
		_case_end_5670068384:;
		_match_end_5670067456:;
	}
	jule::Int _14613_k = 0LL;
	{
		if (!((_12212_x < 0LL))) { goto _case_end_5670074832; }
		_case_begin_5670074832:;
		{
			_14613_k=static_cast<jule::Int>((1.4426950408889634 * _12212_x) - 0.5);
		}
		goto _match_end_5670073808;
		_case_end_5670074832:;
		if (!((_12212_x > 0LL))) { goto _case_end_5670074944; }
		_case_begin_5670074944:;
		{
			_14613_k=static_cast<jule::Int>((1.4426950408889634 * _12212_x) + 0.5);
		}
		goto _match_end_5670073808;
		_case_end_5670074944:;
		_match_end_5670073808:;
	}
	jule::F64 _1519_hi = _12212_x - (static_cast<jule::F64>(_14613_k) * 0.6931471803691238);
	jule::F64 _1529_lo = static_cast<jule::F64>(_14613_k) * 0.00000000019082149292705877;
	return static_cast<jule::F64>(_150538d70_expmulti(_1519_hi,_1529_lo,_14613_k));
}



inline jule::F64 _150538d70_exp2(jule::F64 _16013_x) {
	
	
	
	
	{
		if (!((_15022f040_is_nan(_16013_x)) || (_15022f040_is_inf(_16013_x,1LL)))) { goto _case_end_5670086320; }
		_case_begin_5670086320:;
		{
			return _16013_x;
		}
		goto _match_end_5670086144;
		_case_end_5670086320:;
		if (!((_15022f040_is_inf(_16013_x,-1LL)))) { goto _case_end_5670086432; }
		_case_begin_5670086432:;
		{
			return 0LL;
		}
		goto _match_end_5670086144;
		_case_end_5670086432:;
		if (!((_16013_x > 1023.9999999999999))) { goto _case_end_5670086560; }
		_case_begin_5670086560:;
		{
			return static_cast<jule::F64>(_15022f040_inf(1LL));
		}
		goto _match_end_5670086144;
		_case_end_5670086560:;
		if (!((_16013_x < -1074LL))) { goto _case_end_5670086688; }
		_case_begin_5670086688:;
		{
			return 0LL;
		}
		goto _match_end_5670086144;
		_case_end_5670086688:;
		_match_end_5670086144:;
	}
	jule::Int _18113_k = 0LL;
	{
		if (!((_16013_x > 0LL))) { goto _case_end_5670091744; }
		_case_begin_5670091744:;
		{
			_18113_k=static_cast<jule::Int>(_16013_x + 0.5);
		}
		goto _match_end_5670091376;
		_case_end_5670091744:;
		if (!((_16013_x < 0LL))) { goto _case_end_5670091872; }
		_case_begin_5670091872:;
		{
			_18113_k=static_cast<jule::Int>(_16013_x - 0.5);
		}
		goto _match_end_5670091376;
		_case_end_5670091872:;
		_match_end_5670091376:;
	}
	jule::F64 _1869_t = _16013_x - static_cast<jule::F64>(_18113_k);
	jule::F64 _1879_hi = _1869_t * 0.6931471803691238;
	jule::F64 _1889_lo = (-(_1869_t)) * 0.00000000019082149292705877;
	return static_cast<jule::F64>(_150538d70_expmulti(_1879_hi,_1889_lo,_18113_k));
}



inline jule::F64 _150538d70_expmulti(jule::F64 _19513_hi,jule::F64 _19522_lo,jule::Int _19531_k) {
	
	
	
	
	
	jule::F64 _2029_r = _19513_hi - _19522_lo;
	jule::F64 _2039_t = _2029_r * _2029_r;
	jule::F64 _2049_c = _2029_r - (_2039_t * (0.16666666666666666 + (_2039_t * (-0.0027777777777015593 + (_2039_t * (0.00006613756321437934 + (_2039_t * (-0.0000016533902205465252 + (_2039_t * 0.000000041381367970572385)))))))));
	jule::F64 _2059_y = 1LL - ((_19522_lo - jule::div(_2029_r * _2049_c,2LL - _2049_c)) - _19513_hi);
	return static_cast<jule::F64>(_1503e2220_ldexp(_2059_y,_19531_k));
}



inline jule::F64 _15055fc00_log1p(jule::F64 _12614_x) {
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	{
		if (!((_12614_x < -1LL) || (_15022f040_is_nan(_12614_x)))) { goto _case_end_5670127680; }
		_case_begin_5670127680:;
		{
			return static_cast<jule::F64>(_15022f040_nan());
		}
		goto _match_end_5670127488;
		_case_end_5670127680:;
		if (!((_12614_x == -1LL))) { goto _case_end_5670127808; }
		_case_begin_5670127808:;
		{
			return static_cast<jule::F64>(_15022f040_inf(-1LL));
		}
		goto _match_end_5670127488;
		_case_end_5670127808:;
		if (!((_15022f040_is_inf(_12614_x,1LL)))) { goto _case_end_5670127936; }
		_case_begin_5670127936:;
		{
			return static_cast<jule::F64>(_15022f040_inf(1LL));
		}
		goto _match_end_5670127488;
		_case_end_5670127936:;
		_match_end_5670127488:;
	}
	jule::F64 _1529_absx = _1502fb3e0_abs(_12614_x);
	jule::F64 _15413_f = 0LL;
	jule::U64 _15513_iu = 0LLU;
	jule::Int _15613_k = 1LL;
	if (_1529_absx < 0.41421356237309503) {
		if (_1529_absx < 0.000000001862645149230957) {
			if (_1529_absx < 0.00000000000000005551115123125783) {
				return _12614_x;
			}
			return static_cast<jule::F64>(_12614_x - ((_12614_x * _12614_x) * 0.5));
		}
		if (_12614_x > -0.2928932188134525) {
			_15613_k=0LL;
			_15413_f=_12614_x;
			_15513_iu=1LL;
		}
	}
	jule::F64 _17113_c = 0LL;
	if (_15613_k != 0LL) {
		jule::F64 _17317_u = 0LL;
		if (_1529_absx < 9007199254740992LL) {
			_17317_u=static_cast<jule::F64>(1LL + _12614_x);
			_15513_iu=static_cast<jule::U64>(_1501bd670_f64_bits(_17317_u));
			_15613_k=static_cast<jule::Int>((_15513_iu >> 52LL) - 1023LL);
			if (_15613_k > 0LL) {
				_17113_c=static_cast<jule::F64>(1LL - (_17317_u - _12614_x));
			} else {
				_17113_c=static_cast<jule::F64>(_12614_x - (_17317_u - 1LL));
			}
			_17113_c/=_17317_u;
		} else {
			_17317_u=_12614_x;
			_15513_iu=static_cast<jule::U64>(_1501bd670_f64_bits(_17317_u));
			_15613_k=static_cast<jule::Int>((_15513_iu >> 52LL) - 1023LL);
			_17113_c=0LL;
		}
		_15513_iu&=4503599627370495LL;
		if (_15513_iu < 1865452045155277LL) {
			_17317_u=static_cast<jule::F64>(_1501bd670_f64_from_bits(static_cast<jule::U64>(_15513_iu | 4607182418800017408LL)));
		} else {
			(_15613_k)++;
			_17317_u=static_cast<jule::F64>(_1501bd670_f64_from_bits(static_cast<jule::U64>(_15513_iu | 4602678819172646912LL)));
			_15513_iu=static_cast<jule::U64>((4503599627370496LL - _15513_iu) >> 2LL);
		}
		_15413_f=static_cast<jule::F64>(_17317_u - 1LL);
	}
	jule::F64 _2029_hfsq = (0.5 * _15413_f) * _15413_f;
	jule::F64 _20313_s = 0LL;
	jule::F64 _20413_R = 0LL;
	jule::F64 _20513_z = 0LL;
	if (_15513_iu == 0LL) {
		if (_15413_f == 0LL) {
			if (_15613_k == 0LL) {
				return 0LL;
			}
			_17113_c+=static_cast<jule::F64>(static_cast<jule::F64>(_15613_k) * 0.00000000019082149292705877);
			return static_cast<jule::F64>((static_cast<jule::F64>(_15613_k) * 0.6931471803691238) + _17113_c);
		}
		_20413_R=static_cast<jule::F64>(_2029_hfsq * (1LL - (0.6666666666666666 * _15413_f)));
		if (_15613_k == 0LL) {
			return static_cast<jule::F64>(_15413_f - _20413_R);
		}
		return static_cast<jule::F64>((static_cast<jule::F64>(_15613_k) * 0.6931471803691238) - ((_20413_R - ((static_cast<jule::F64>(_15613_k) * 0.00000000019082149292705877) + _17113_c)) - _15413_f));
	}
	_20313_s=static_cast<jule::F64>(jule::div(_15413_f,2LL + _15413_f));
	_20513_z=static_cast<jule::F64>(_20313_s * _20313_s);
	_20413_R=static_cast<jule::F64>(_20513_z * (0.6666666666666735 + (_20513_z * (0.3999999999940942 + (_20513_z * (0.2857142874366239 + (_20513_z * (0.22222198432149784 + (_20513_z * (0.1818357216161805 + (_20513_z * (0.15313837699209373 + (_20513_z * 0.14798198605116586)))))))))))));
	if (_15613_k == 0LL) {
		return static_cast<jule::F64>(_15413_f - (_2029_hfsq - (_20313_s * (_2029_hfsq + _20413_R))));
	}
	return static_cast<jule::F64>((static_cast<jule::F64>(_15613_k) * 0.6931471803691238) - ((_2029_hfsq - ((_20313_s * (_2029_hfsq + _20413_R)) + ((static_cast<jule::F64>(_15613_k) * 0.00000000019082149292705877) + _17113_c))) - _15413_f));
}



inline std::tuple<jule::F64,jule::F64> _1504d9340_stirling(jule::F64 _13113_x) {
	if (_13113_x > 200LL) {
		return std::make_tuple(static_cast<jule::F64>(_15022f040_inf(1LL)),1LL);
	}
	
	
	jule::F64 _13713_w = jule::div(1LL,_13113_x);
	_13713_w=static_cast<jule::F64>(1LL + (_13713_w * ((((((((_1504d9340__GAM_S[0LL] * _13713_w) + _1504d9340__GAM_S[1LL]) * _13713_w) + _1504d9340__GAM_S[2LL]) * _13713_w) + _1504d9340__GAM_S[3LL]) * _13713_w) + _1504d9340__GAM_S[4LL])));
	jule::F64 _13913_y1 = _150538d70_exp(_13113_x);
	jule::F64 _14013_y2 = 1LL;
	if (_13113_x > 143.01608) {
		jule::F64 _14213_v = _150480f30_pow(_13113_x,static_cast<jule::F64>((0.5 * _13113_x) - 0.25));
		std::tie(_13913_y1,_14013_y2) = std::make_tuple(_14213_v,static_cast<jule::F64>(jule::div(_14213_v,_13913_y1)));
	} else {
		_13913_y1=static_cast<jule::F64>(jule::div(_150480f30_pow(_13113_x,static_cast<jule::F64>(_13113_x - 0.5)),_13913_y1));
	}
	return std::make_tuple(_13913_y1,static_cast<jule::F64>((2.5066282746310007 * _13713_w) * _14013_y2));
}



inline jule::F64 _1504d9340_gamma(jule::F64 _15918_x) {
	
	{
		if (!((_1504d9340_is_neg_int(_15918_x)) || (_15022f040_is_inf(_15918_x,-1LL)) || (_15022f040_is_nan(_15918_x)))) { goto _case_end_5670191280; }
		_case_begin_5670191280:;
		{
			return static_cast<jule::F64>(_15022f040_nan());
		}
		goto _match_end_5670191040;
		_case_end_5670191280:;
		if (!((_15022f040_is_inf(_15918_x,1LL)))) { goto _case_end_5670191392; }
		_case_begin_5670191392:;
		{
			return static_cast<jule::F64>(_15022f040_inf(1LL));
		}
		goto _match_end_5670191040;
		_case_end_5670191392:;
		if (!((_15918_x == 0LL))) { goto _case_end_5670191504; }
		_case_begin_5670191504:;
		{
			if (_150454890_signbit(_15918_x)) {
				return static_cast<jule::F64>(_15022f040_inf(-1LL));
			}
			return static_cast<jule::F64>(_15022f040_inf(1LL));
		}
		goto _match_end_5670191040;
		_case_end_5670191504:;
		_match_end_5670191040:;
	}
	jule::F64 _17313_q = _1502fb3e0_abs(_15918_x);
	jule::F64 _17413_p = _150257f10_floor(_17313_q);
	if (_17313_q > 33LL) {
		if (_15918_x >= 0LL) {
			jule::F64 _17718_y1;
			jule::F64 _17722_y2;
			std::tie(_17718_y1,_17722_y2) = _1504d9340_stirling(_15918_x);
			return static_cast<jule::F64>(_17718_y1 * _17722_y2);
		}
		jule::Int _18317_signgam = 1LL;
		jule::I64 _18413_ip = static_cast<jule::I64>(_17413_p);
		if ((_18413_ip & 1LL) == 0LL) {
			_18317_signgam=-1LL;
		}
		jule::F64 _18817_z = _17313_q - _17413_p;
		if (_18817_z > 0.5) {
			_17413_p=static_cast<jule::F64>(_17413_p + 1LL);
			_18817_z=static_cast<jule::F64>(_17313_q - _17413_p);
		}
		_18817_z=static_cast<jule::F64>(_17313_q * _1501de350_sin(static_cast<jule::F64>(3.141592653589793 * _18817_z)));
		if (_18817_z == 0LL) {
			return static_cast<jule::F64>(_15022f040_inf(_18317_signgam));
		}
		jule::F64 _19714_sq1;
		jule::F64 _19719_sq2;
		std::tie(_19714_sq1,_19719_sq2) = _1504d9340_stirling(_17313_q);
		jule::F64 _19813_absz = _1502fb3e0_abs(_18817_z);
		jule::F64 _19913_d = (_19813_absz * _19714_sq1) * _19719_sq2;
		if (_15022f040_is_inf(_19913_d,0LL)) {
			_18817_z=static_cast<jule::F64>(jule::div(jule::div(jule::div(3.141592653589793,_19813_absz),_19714_sq1),_19719_sq2));
		} else {
			_18817_z=static_cast<jule::F64>(jule::div(3.141592653589793,_19913_d));
		}
		return static_cast<jule::F64>(static_cast<jule::F64>(_18317_signgam) * _18817_z);
	}
	jule::F64 _20913_z = 1LL;
	_iter_begin_5670198864:;
	if (!(_15918_x >= 3LL)) { goto _iter_end_5670198864; }
	{
		_15918_x=static_cast<jule::F64>(_15918_x - 1LL);
		_20913_z=static_cast<jule::F64>(_20913_z * _15918_x);
	}
	_iter_next_5670198864:;
	goto _iter_begin_5670198864;
	_iter_end_5670198864:;
	_iter_begin_5670217824:;
	if (!(_15918_x < 0LL)) { goto _iter_end_5670217824; }
	{
		if (_15918_x > -0.000000001) {
			goto _julec_label_small;
		}
		_20913_z=static_cast<jule::F64>(jule::div(_20913_z,_15918_x));
		_15918_x=static_cast<jule::F64>(_15918_x + 1LL);
	}
	_iter_next_5670217824:;
	goto _iter_begin_5670217824;
	_iter_end_5670217824:;
	_iter_begin_5670221552:;
	if (!(_15918_x < 2LL)) { goto _iter_end_5670221552; }
	{
		if (_15918_x < 0.000000001) {
			goto _julec_label_small;
		}
		_20913_z=static_cast<jule::F64>(jule::div(_20913_z,_15918_x));
		_15918_x=static_cast<jule::F64>(_15918_x + 1LL);
	}
	_iter_next_5670221552:;
	goto _iter_begin_5670221552;
	_iter_end_5670221552:;
	if (_15918_x == 2LL) {
		return _20913_z;
	}
	_15918_x=static_cast<jule::F64>(_15918_x - 2LL);
	_17413_p=static_cast<jule::F64>((((((((((((_15918_x * _1504d9340__GAM_P[0LL]) + _1504d9340__GAM_P[1LL]) * _15918_x) + _1504d9340__GAM_P[2LL]) * _15918_x) + _1504d9340__GAM_P[3LL]) * _15918_x) + _1504d9340__GAM_P[4LL]) * _15918_x) + _1504d9340__GAM_P[5LL]) * _15918_x) + _1504d9340__GAM_P[6LL]);
	_17313_q=static_cast<jule::F64>((((((((((((((_15918_x * _1504d9340__GAM_Q[0LL]) + _1504d9340__GAM_Q[1LL]) * _15918_x) + _1504d9340__GAM_Q[2LL]) * _15918_x) + _1504d9340__GAM_Q[3LL]) * _15918_x) + _1504d9340__GAM_Q[4LL]) * _15918_x) + _1504d9340__GAM_Q[5LL]) * _15918_x) + _1504d9340__GAM_Q[6LL]) * _15918_x) + _1504d9340__GAM_Q[7LL]);
	return static_cast<jule::F64>(jule::div(_20913_z * _17413_p,_17313_q));
	_julec_label_small:;
	if (_15918_x == 0LL) {
		return static_cast<jule::F64>(_15022f040_inf(1LL));
	}
	return static_cast<jule::F64>(jule::div(_20913_z,(1LL + (0.5772156649015329 * _15918_x)) * _15918_x));
}



inline jule::Bool _1504d9340_is_neg_int(jule::F64 _24515_x) {
	if (_24515_x < 0LL) {
		jule::F64 _24717_xf;
		std::tie(std::ignore,_24717_xf) = _1502e0ae0_modf(_24515_x);
		return _24717_xf == 0LL;
	}
	return false;
}



inline jule::F64 _1505b0ac0_erfinv(jule::F64 _10519_x) {
	if ((_15022f040_is_nan(_10519_x) || (_10519_x <= -1LL)) || (_10519_x >= 1LL)) {
		if ((_10519_x == -1LL) || (_10519_x == 1LL)) {
			return static_cast<jule::F64>(_15022f040_inf(static_cast<jule::Int>(_10519_x)));
		}
		return static_cast<jule::F64>(_15022f040_nan());
	}
	jule::Bool _11413_sign = false;
	if (_10519_x < 0LL) {
		_10519_x=static_cast<jule::F64>((-(_10519_x)));
		_11413_sign=true;
	}
	jule::F64 _12013_ans = 0LL;
	if (_10519_x <= 0.85) {
		jule::F64 _12213_r = 0.180625 - ((0.25 * _10519_x) * _10519_x);
		jule::F64 _12313_z1 = (((((((((((((887.0940696254552 * _12213_r) + 11819.493347062295) * _12213_r) + 23782.041382114385) * _12213_r) + 16235.862515167575) * _12213_r) + 4854.886889384388) * _12213_r) + 697.062665343896) * _12213_r) + 47.07268811238398) * _12213_r) + 1.1975323115670913;
		jule::F64 _12413_z2 = (((((((((((((5226.495278852854 * _12213_r) + 28729.085735721943) * _12213_r) + 39307.89580009271) * _12213_r) + 21213.794301586597) * _12213_r) + 5394.196021424751) * _12213_r) + 687.1870074920579) * _12213_r) + 42.31333070160091) * _12213_r) + 1LL;
		_12013_ans=static_cast<jule::F64>(jule::div(_10519_x * _12313_z1,_12413_z2));
	} else {
		jule::F64 _12717_z1 = 0LL;
		jule::F64 _12817_z2 = 0LL;
		jule::F64 _12917_r = _15059e5b0_sqrt(static_cast<jule::F64>(0.6931471805599453 - _1502aeb50_log(static_cast<jule::F64>(1LL - _10519_x))));
		if (_12917_r <= 5LL) {
			_12917_r-=1.6;
			_12717_z1=static_cast<jule::F64>((((((((((((((0.0007745450142783414 * _12917_r) + 0.022723844989269184) * _12917_r) + 0.2417807251774506) * _12917_r) + 1.2704582524523684) * _12917_r) + 3.6478483247632045) * _12917_r) + 5.769497221460691) * _12917_r) + 4.630337846156546) * _12917_r) + 1.4234371107496835);
			_12817_z2=static_cast<jule::F64>((((((((((((((0.0000000014859850019840355 * _12917_r) + 0.0007744145906515771) * _12917_r) + 0.021494160384252878) * _12917_r) + 0.2094506521051275) * _12917_r) + 0.9754783200178743) * _12917_r) + 2.3707661626024534) * _12917_r) + 2.9036514445419948) * _12917_r) + 1.4142135623730951);
		} else {
			_12917_r-=5LL;
			_12717_z1=static_cast<jule::F64>((((((((((((((0.00000020103343992922881 * _12917_r) + 0.000027115555687434876) * _12917_r) + 0.0012426609473880784) * _12917_r) + 0.026532189526576124) * _12917_r) + 0.29656057182850487) * _12917_r) + 1.7848265399172913) * _12917_r) + 5.463784911164114) * _12917_r) + 6.657904643501103);
			_12817_z2=static_cast<jule::F64>((((((((((((((0.0000000000000028910246058729655 * _12917_r) + 0.0000002010321207683943) * _12917_r) + 0.000026110884050805935) * _12917_r) + 0.0011128009970788597) * _12917_r) + 0.02103693768272069) * _12917_r) + 0.19364809469506591) * _12917_r) + 0.8482908416595164) * _12917_r) + 1.4142135623730951);
		}
		_12013_ans=static_cast<jule::F64>(jule::div(_12717_z1,_12817_z2));
	}
	if (_11413_sign) {
		return static_cast<jule::F64>((-(_12013_ans)));
	}
	return _12013_ans;
}



inline jule::F64 _1505b0ac0_erfcinv(jule::F64 _15516_x) {
	return static_cast<jule::F64>(_1505b0ac0_erfinv(static_cast<jule::F64>(1LL - _15516_x)));
}



inline jule::F64 _15059eaf0_erf(jule::F64 _21716_x) {
	
	
	{
		if (!((_15022f040_is_nan(_21716_x)))) { goto _case_end_5670282704; }
		_case_begin_5670282704:;
		{
			return static_cast<jule::F64>(_15022f040_nan());
		}
		goto _match_end_5670282544;
		_case_end_5670282704:;
		if (!((_15022f040_is_inf(_21716_x,1LL)))) { goto _case_end_5670282816; }
		_case_begin_5670282816:;
		{
			return 1LL;
		}
		goto _match_end_5670282544;
		_case_end_5670282816:;
		if (!((_15022f040_is_inf(_21716_x,-1LL)))) { goto _case_end_5670282928; }
		_case_begin_5670282928:;
		{
			return -1LL;
		}
		goto _match_end_5670282544;
		_case_end_5670282928:;
		_match_end_5670282544:;
	}
	jule::Bool _22913_sign = false;
	if (_21716_x < 0LL) {
		_21716_x=static_cast<jule::F64>((-(_21716_x)));
		_22913_sign=true;
	}
	if (_21716_x < 0.84375) {
		jule::F64 _23517_temp = 0LL;
		if (_21716_x < 0.000000003725290298461914) {
			if (_21716_x < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002848094538889218) {
				_23517_temp=static_cast<jule::F64>(0.125 * ((8LL * _21716_x) + (1.0270333367641007 * _21716_x)));
			} else {
				_23517_temp=static_cast<jule::F64>(_21716_x + (0.1283791670955126 * _21716_x));
			}
		} else {
			jule::F64 _24317_z = _21716_x * _21716_x;
			jule::F64 _24417_r = 0.12837916709551256 + (_24317_z * (-0.3250421072470015 + (_24317_z * (-0.02848174957559851 + (_24317_z * (-0.005770270296489442 + (_24317_z * -0.000023763016656650163)))))));
			jule::F64 _24517_s = 1LL + (_24317_z * (0.39791722395915535 + (_24317_z * (0.0650222499887673 + (_24317_z * (0.005081306281875766 + (_24317_z * (0.00013249473800432164 + (_24317_z * -0.000003960228278775368)))))))));
			jule::F64 _24617_y = jule::div(_24417_r,_24517_s);
			_23517_temp=static_cast<jule::F64>(_21716_x + (_21716_x * _24617_y));
		}
		if (_22913_sign) {
			return static_cast<jule::F64>((-(_23517_temp)));
		}
		return _23517_temp;
	}
	if (_21716_x < 1.25) {
		jule::F64 _25513_s = _21716_x - 1LL;
		jule::F64 _25613_P = -0.0023621185607526594 + (_25513_s * (0.41485611868374833 + (_25513_s * (-0.3722078760357013 + (_25513_s * (0.31834661990116175 + (_25513_s * (-0.11089469428239668 + (_25513_s * (0.035478304325618236 + (_25513_s * -0.002166375594868791)))))))))));
		jule::F64 _25713_Q = 1LL + (_25513_s * (0.10642088040084423 + (_25513_s * (0.540397917702171 + (_25513_s * (0.07182865441419627 + (_25513_s * (0.12617121980876164 + (_25513_s * (0.01363708391202905 + (_25513_s * 0.011984499846799107)))))))))));
		if (_22913_sign) {
			return static_cast<jule::F64>(-0.8450629115104675 - jule::div(_25613_P,_25713_Q));
		}
		return static_cast<jule::F64>(0.8450629115104675 + jule::div(_25613_P,_25713_Q));
	}
	if (_21716_x >= 6LL) {
		if (_22913_sign) {
			return -1LL;
		}
		return 1LL;
	}
	jule::F64 _2699_s = jule::div(1LL,_21716_x * _21716_x);
	jule::F64 _27013_R = 0LL;
	jule::F64 _27113_S = 0LL;
	if (_21716_x < 2.857142857142857) {
		_27013_R=static_cast<jule::F64>(-0.009864944034847148 + (_2699_s * (-0.6938585727071818 + (_2699_s * (-10.558626225323291 + (_2699_s * (-62.375332450326006 + (_2699_s * (-162.39666946257347 + (_2699_s * (-184.60509290671104 + (_2699_s * (-81.2874355063066 + (_2699_s * -9.814329344169145))))))))))))));
		_27113_S=static_cast<jule::F64>(1LL + (_2699_s * (19.651271667439257 + (_2699_s * (137.65775414351904 + (_2699_s * (434.56587747522923 + (_2699_s * (645.3872717332679 + (_2699_s * (429.00814002756783 + (_2699_s * (108.63500554177944 + (_2699_s * (6.570249770319282 + (_2699_s * -0.0604244152148581))))))))))))))));
	} else {
		_27013_R=static_cast<jule::F64>(-0.0098649429247001 + (_2699_s * (-0.799283237680523 + (_2699_s * (-17.757954917754752 + (_2699_s * (-160.63638485582192 + (_2699_s * (-637.5664433683896 + (_2699_s * (-1025.0951316110772 + (_2699_s * -483.5191916086514))))))))))));
		_27113_S=static_cast<jule::F64>(1LL + (_2699_s * (30.33806074348246 + (_2699_s * (325.7925129965739 + (_2699_s * (1536.729586084437 + (_2699_s * (3199.8582195085955 + (_2699_s * (2553.0504064331644 + (_2699_s * (474.52854120695537 + (_2699_s * -22.44095244658582))))))))))))));
	}
	jule::F64 _2799_z = _1501bd670_f64_from_bits(static_cast<jule::U64>(_1501bd670_f64_bits(_21716_x) & 18446744069414584320LLU));
	jule::F64 _2809_r = _150538d70_exp(static_cast<jule::F64>(((-(_2799_z)) * _2799_z) - 0.5625)) * _150538d70_exp(static_cast<jule::F64>(((_2799_z - _21716_x) * (_2799_z + _21716_x)) + jule::div(_27013_R,_27113_S)));
	if (_22913_sign) {
		return static_cast<jule::F64>(jule::div(_2809_r,_21716_x) - 1LL);
	}
	return static_cast<jule::F64>(1LL - jule::div(_2809_r,_21716_x));
}



inline jule::F64 _15059eaf0_erfc(jule::F64 _29317_x) {
	
	{
		if (!((_15022f040_is_nan(_29317_x)))) { goto _case_end_5670337216; }
		_case_begin_5670337216:;
		{
			return static_cast<jule::F64>(_15022f040_nan());
		}
		goto _match_end_5670336784;
		_case_end_5670337216:;
		if (!((_15022f040_is_inf(_29317_x,1LL)))) { goto _case_end_5670337344; }
		_case_begin_5670337344:;
		{
			return 0LL;
		}
		goto _match_end_5670336784;
		_case_end_5670337344:;
		if (!((_15022f040_is_inf(_29317_x,-1LL)))) { goto _case_end_5670337456; }
		_case_begin_5670337456:;
		{
			return 2LL;
		}
		goto _match_end_5670336784;
		_case_end_5670337456:;
		_match_end_5670336784:;
	}
	jule::Bool _30413_sign = false;
	if (_29317_x < 0LL) {
		_29317_x=static_cast<jule::F64>((-(_29317_x)));
		_30413_sign=true;
	}
	if (_29317_x < 0.84375) {
		jule::F64 _31017_temp = 0LL;
		if (_29317_x < 0.000000000000000013877787807814457) {
			_31017_temp=_29317_x;
		} else {
			jule::F64 _31417_z = _29317_x * _29317_x;
			jule::F64 _31517_r = 0.12837916709551256 + (_31417_z * (-0.3250421072470015 + (_31417_z * (-0.02848174957559851 + (_31417_z * (-0.005770270296489442 + (_31417_z * -0.000023763016656650163)))))));
			jule::F64 _31617_s = 1LL + (_31417_z * (0.39791722395915535 + (_31417_z * (0.0650222499887673 + (_31417_z * (0.005081306281875766 + (_31417_z * (0.00013249473800432164 + (_31417_z * -0.000003960228278775368)))))))));
			jule::F64 _31717_y = jule::div(_31517_r,_31617_s);
			if (_29317_x < 0.25) {
				_31017_temp=static_cast<jule::F64>(_29317_x + (_29317_x * _31717_y));
			} else {
				_31017_temp=static_cast<jule::F64>(0.5 + ((_29317_x * _31717_y) + (_29317_x - 0.5)));
			}
		}
		if (_30413_sign) {
			return static_cast<jule::F64>(1LL + _31017_temp);
		}
		return static_cast<jule::F64>(1LL - _31017_temp);
	}
	if (_29317_x < 1.25) {
		jule::F64 _33013_s = _29317_x - 1LL;
		jule::F64 _33113_P = -0.0023621185607526594 + (_33013_s * (0.41485611868374833 + (_33013_s * (-0.3722078760357013 + (_33013_s * (0.31834661990116175 + (_33013_s * (-0.11089469428239668 + (_33013_s * (0.035478304325618236 + (_33013_s * -0.002166375594868791)))))))))));
		jule::F64 _33213_Q = 1LL + (_33013_s * (0.10642088040084423 + (_33013_s * (0.540397917702171 + (_33013_s * (0.07182865441419627 + (_33013_s * (0.12617121980876164 + (_33013_s * (0.01363708391202905 + (_33013_s * 0.011984499846799107)))))))))));
		if (_30413_sign) {
			return static_cast<jule::F64>(1.8450629115104675 + jule::div(_33113_P,_33213_Q));
		}
		return static_cast<jule::F64>(0.15493708848953247 - jule::div(_33113_P,_33213_Q));
	}
	if (_29317_x < 28LL) {
		jule::F64 _34013_s = jule::div(1LL,_29317_x * _29317_x);
		jule::F64 _34117_R = 0LL;
		jule::F64 _34217_S = 0LL;
		if (_29317_x < 2.857142857142857) {
			_34117_R=static_cast<jule::F64>(-0.009864944034847148 + (_34013_s * (-0.6938585727071818 + (_34013_s * (-10.558626225323291 + (_34013_s * (-62.375332450326006 + (_34013_s * (-162.39666946257347 + (_34013_s * (-184.60509290671104 + (_34013_s * (-81.2874355063066 + (_34013_s * -9.814329344169145))))))))))))));
			_34217_S=static_cast<jule::F64>(1LL + (_34013_s * (19.651271667439257 + (_34013_s * (137.65775414351904 + (_34013_s * (434.56587747522923 + (_34013_s * (645.3872717332679 + (_34013_s * (429.00814002756783 + (_34013_s * (108.63500554177944 + (_34013_s * (6.570249770319282 + (_34013_s * -0.0604244152148581))))))))))))))));
		} else {
			if (_30413_sign && (_29317_x > 6LL)) {
				return 2LL;
			}
			_34117_R=static_cast<jule::F64>(-0.0098649429247001 + (_34013_s * (-0.799283237680523 + (_34013_s * (-17.757954917754752 + (_34013_s * (-160.63638485582192 + (_34013_s * (-637.5664433683896 + (_34013_s * (-1025.0951316110772 + (_34013_s * -483.5191916086514))))))))))));
			_34217_S=static_cast<jule::F64>(1LL + (_34013_s * (30.33806074348246 + (_34013_s * (325.7925129965739 + (_34013_s * (1536.729586084437 + (_34013_s * (3199.8582195085955 + (_34013_s * (2553.0504064331644 + (_34013_s * (474.52854120695537 + (_34013_s * -22.44095244658582))))))))))))));
		}
		jule::F64 _35313_z = _1501bd670_f64_from_bits(static_cast<jule::U64>(_1501bd670_f64_bits(_29317_x) & 18446744069414584320LLU));
		jule::F64 _35413_r = _150538d70_exp(static_cast<jule::F64>(((-(_35313_z)) * _35313_z) - 0.5625)) * _150538d70_exp(static_cast<jule::F64>(((_35313_z - _29317_x) * (_35313_z + _29317_x)) + jule::div(_34117_R,_34217_S)));
		if (_30413_sign) {
			return static_cast<jule::F64>(2LL - jule::div(_35413_r,_29317_x));
		}
		return static_cast<jule::F64>(jule::div(_35413_r,_29317_x));
	}
	if (_30413_sign) {
		return 2LL;
	}
	return 0LL;
}



inline jule::F64 _150560610_pow10(jule::Int _6114_n) {
	if ((0LL <= _6114_n) && (_6114_n <= 308LL)) {
		return static_cast<jule::F64>(_150560610_POW10_POSTAB32[static_cast<jule::Int>(jule::div(static_cast<jule::Uint>(_6114_n),32LL))] * _150560610_POW10_TAB[static_cast<jule::Int>(jule::mod(static_cast<jule::Uint>(_6114_n),32LL))]);
	}
	if ((-323LL <= _6114_n) && (_6114_n <= 0LL)) {
		return static_cast<jule::F64>(jule::div(_150560610_POW10_NEGTAB32[static_cast<jule::Int>(jule::div(static_cast<jule::Uint>((-(_6114_n))),32LL))],_150560610_POW10_TAB[static_cast<jule::Int>(jule::mod(static_cast<jule::Uint>((-(_6114_n))),32LL))]));
	}
	if (_6114_n > 0LL) {
		return static_cast<jule::F64>(_15022f040_inf(1LL));
	}
	return 0LL;
}



inline jule::F64 _15059e5b0_sqrt(jule::F64 _12313_x) {
	{
		if (!((_12313_x == 0LL) || (_15022f040_is_nan(_12313_x)) || (_15022f040_is_inf(_12313_x,1LL)))) { goto _case_end_5670401040; }
		_case_begin_5670401040:;
		{
			return _12313_x;
		}
		goto _match_end_5670400608;
		_case_end_5670401040:;
		if (!((_12313_x < 0LL))) { goto _case_end_5670401168; }
		_case_begin_5670401168:;
		{
			return static_cast<jule::F64>(_15022f040_nan());
		}
		goto _match_end_5670400608;
		_case_end_5670401168:;
		_match_end_5670400608:;
	}
	jule::U64 _13113_ix = _1501bd670_f64_bits(_12313_x);
	jule::Int _13313_exp = static_cast<jule::Int>((_13113_ix >> 52LL) & 2047LL);
	if (_13313_exp == 0LL) {
		_iter_begin_5670401616:;
		if (!((_13113_ix & 4503599627370496LL) == 0LL)) { goto _iter_end_5670401616; }
		{
			_13113_ix<<=1LL;
			(_13313_exp)--;
		}
		_iter_next_5670401616:;
		goto _iter_begin_5670401616;
		_iter_end_5670401616:;
		(_13313_exp)++;
	}
	_13313_exp-=1023LL;
	_13113_ix=static_cast<jule::U64>(_13113_ix & -9218868437227405313LL);
	_13113_ix|=4503599627370496LL;
	if ((_13313_exp & 1LL) == 1LL) {
		_13113_ix<<=1LL;
	}
	_13313_exp>>=1LL;
	_13113_ix<<=1LL;
	jule::U64 _15013_q = 0LLU;
	jule::U64 _15113_s = 0LLU;
	jule::U64 _15213_r = static_cast<jule::U64>(9007199254740992LLU);
	_iter_begin_5670404688:;
	if (!(_15213_r != 0LL)) { goto _iter_end_5670404688; }
	{
		jule::U64 _15413_t = _15113_s + _15213_r;
		if (_15413_t <= _13113_ix) {
			_15113_s=static_cast<jule::U64>(_15413_t + _15213_r);
			_13113_ix-=_15413_t;
			_15013_q+=_15213_r;
		}
		_13113_ix<<=1LL;
		_15213_r>>=1LL;
	}
	_iter_next_5670404688:;
	goto _iter_begin_5670404688;
	_iter_end_5670404688:;
	if (_13113_ix != 0LL) {
		_15013_q+=static_cast<jule::U64>(_15013_q & 1LL);
	}
	_13113_ix=static_cast<jule::U64>((_15013_q >> 1LL) + (static_cast<jule::U64>((_13313_exp - 1LL) + 1023LL) << 52LL));
	return static_cast<jule::F64>(_1501bd670_f64_from_bits(_13113_ix));
}



inline jule::F64 _15061dcb0_logb(jule::F64 _4413_x) {
	{
		if (!((_4413_x == 0LL))) { goto _case_end_5670421616; }
		_case_begin_5670421616:;
		{
			return static_cast<jule::F64>(_15022f040_inf(-1LL));
		}
		goto _match_end_5670421392;
		_case_end_5670421616:;
		if (!((_15022f040_is_inf(_4413_x,0LL)))) { goto _case_end_5670421792; }
		_case_begin_5670421792:;
		{
			return static_cast<jule::F64>(_15022f040_inf(1LL));
		}
		goto _match_end_5670421392;
		_case_end_5670421792:;
		if (!((_15022f040_is_nan(_4413_x)))) { goto _case_end_5670421904; }
		_case_begin_5670421904:;
		{
			return _4413_x;
		}
		goto _match_end_5670421392;
		_case_end_5670421904:;
		_match_end_5670421392:;
	}
	return static_cast<jule::F64>(_15061dcb0__ilogb(_4413_x));
}



inline jule::Int _15061dcb0_ilogb(jule::F64 _6314_x) {
	{
		if (!((_6314_x == 0LL))) { goto _case_end_5670426480; }
		_case_begin_5670426480:;
		{
			return -2147483648LL;
		}
		goto _match_end_5670426256;
		_case_end_5670426480:;
		if (!((_15022f040_is_nan(_6314_x)))) { goto _case_end_5670426608; }
		_case_begin_5670426608:;
		{
			return 2147483647LL;
		}
		goto _match_end_5670426256;
		_case_end_5670426608:;
		if (!((_15022f040_is_inf(_6314_x,0LL)))) { goto _case_end_5670426736; }
		_case_begin_5670426736:;
		{
			return 2147483647LL;
		}
		goto _match_end_5670426256;
		_case_end_5670426736:;
		_match_end_5670426256:;
	}
	return static_cast<jule::Int>(_15061dcb0__ilogb(_6314_x));
}



inline jule::Int _15061dcb0__ilogb(jule::F64 _7715_x) {
	jule::Int _7813_exp = 0LL;
	std::tie(_7715_x,_7813_exp) = _15022f040_normalize(_7715_x);
	return static_cast<jule::Int>((static_cast<jule::Int>((_1501bd670_f64_bits(_7715_x) >> 52LL) & 2047LL) - 1023LL) + _7813_exp);
}



inline jule::F64 _1506360a0_jn(jule::Int _8415_n,jule::F64 _8427_x) {
	
	
	{
		if (!((_15022f040_is_nan(_8427_x)))) { goto _case_end_5670437568; }
		_case_begin_5670437568:;
		{
			return _8427_x;
		}
		goto _match_end_5670437392;
		_case_end_5670437568:;
		if (!((_15022f040_is_inf(_8427_x,0LL)))) { goto _case_end_5670437696; }
		_case_begin_5670437696:;
		{
			return 0LL;
		}
		goto _match_end_5670437392;
		_case_end_5670437696:;
		_match_end_5670437392:;
	}
	if (_8415_n == 0LL) {
		return static_cast<jule::F64>(_150347f70_j0(_8427_x));
	}
	if (_8427_x == 0LL) {
		return 0LL;
	}
	if (_8415_n < 0LL) {
		std::tie(_8415_n,_8427_x) = std::make_tuple(static_cast<jule::Int>((-(_8415_n))),static_cast<jule::F64>((-(_8427_x))));
	}
	if (_8415_n == 1LL) {
		return static_cast<jule::F64>(_1502cfe00_j1(_8427_x));
	}
	jule::Bool _10913_sign = false;
	if (_8427_x < 0LL) {
		_8427_x=static_cast<jule::F64>((-(_8427_x)));
		if ((_8415_n & 1LL) == 1LL) {
			_10913_sign=true;
		}
	}
	jule::F64 _11613_b = 0LL;
	if (static_cast<jule::F64>(_8415_n) <= _8427_x) {
		if (_8427_x >= 5967269506265907200LL) {
			jule::F64 _13321_temp = 0LL;
			jule::F64 _13418_s;
			jule::F64 _13421_c;
			std::tie(_13418_s,_13421_c) = _150286070_sincos(_8427_x);
			{
				auto _match_expr{ _8415_n & 3LL };
				if (!((0LL) == _match_expr)) { goto _case_end_5670453056; }
				_case_begin_5670453056:;
				{
					_13321_temp=static_cast<jule::F64>(_13421_c + _13418_s);
				}
				goto _match_end_5670450816;
				_case_end_5670453056:;
				if (!((1LL) == _match_expr)) { goto _case_end_5670453216; }
				_case_begin_5670453216:;
				{
					_13321_temp=static_cast<jule::F64>((-(_13421_c)) + _13418_s);
				}
				goto _match_end_5670450816;
				_case_end_5670453216:;
				if (!((2LL) == _match_expr)) { goto _case_end_5670453328; }
				_case_begin_5670453328:;
				{
					_13321_temp=static_cast<jule::F64>((-(_13421_c)) - _13418_s);
				}
				goto _match_end_5670450816;
				_case_end_5670453328:;
				if (!((3LL) == _match_expr)) { goto _case_end_5670453440; }
				_case_begin_5670453440:;
				{
					_13321_temp=static_cast<jule::F64>(_13421_c - _13418_s);
				}
				goto _match_end_5670450816;
				_case_end_5670453440:;
				_match_end_5670450816:;
			}
			_11613_b=static_cast<jule::F64>(jule::div(0.5641895835477563 * _13321_temp,_15059e5b0_sqrt(_8427_x)));
		} else {
			_11613_b=static_cast<jule::F64>(_1502cfe00_j1(_8427_x));
			jule::Int _14422_i = 1LL;
			jule::F64 _14429_a = _150347f70_j0(_8427_x);
			std::tie(_14422_i,_14429_a) = std::make_tuple(1LL,_150347f70_j0(_8427_x));
			_iter_begin_5670459760:;
			if (!(_14422_i < _8415_n)) { goto _iter_end_5670459760; }
			{
				std::tie(_14429_a,_11613_b) = std::make_tuple(_11613_b,static_cast<jule::F64>((_11613_b * jule::div(static_cast<jule::F64>(_14422_i + _14422_i),_8427_x)) - _14429_a));
			}
			_iter_next_5670459760:;
			(_14422_i)++;
			goto _iter_begin_5670459760;
			_iter_end_5670459760:;
		}
	} else {
		if (_8427_x < 0.000000001862645149230957) {
			if (_8415_n > 33LL) {
				_11613_b=0LL;
			} else {
				jule::F64 _15721_temp = _8427_x * 0.5;
				_11613_b=_15721_temp;
				jule::F64 _15925_a = 1LL;
				jule::Int _16025_i = 2LL;
				_iter_begin_5670467216:;
				if (!(_16025_i <= _8415_n)) { goto _iter_end_5670467216; }
				{
					_15925_a*=static_cast<jule::F64>(_16025_i);
					_11613_b*=_15721_temp;
				}
				_iter_next_5670467216:;
				(_16025_i)++;
				goto _iter_begin_5670467216;
				_iter_end_5670467216:;
				_11613_b/=_15925_a;
			}
		} else {
			jule::F64 _19717_w = jule::div(static_cast<jule::F64>(_8415_n + _8415_n),_8427_x);
			jule::F64 _19817_h = jule::div(2LL,_8427_x);
			jule::F64 _19921_q0 = _19717_w;
			jule::F64 _20021_z = _19717_w + _19817_h;
			jule::F64 _20121_q1 = (_19717_w * _20021_z) - 1LL;
			jule::Int _20221_k = 1LL;
			_iter_begin_5670475808:;
			if (!(_20121_q1 < 1000000000LL)) { goto _iter_end_5670475808; }
			{
				(_20221_k)++;
				_20021_z+=_19817_h;
				std::tie(_19921_q0,_20121_q1) = std::make_tuple(_20121_q1,static_cast<jule::F64>((_20021_z * _20121_q1) - _19921_q0));
			}
			_iter_next_5670475808:;
			goto _iter_begin_5670475808;
			_iter_end_5670475808:;
			jule::Int _20817_m = _8415_n + _8415_n;
			jule::F64 _20921_t = 0LL;
			jule::Int _21021_i = 2LL * (_8415_n + _20221_k);
			_iter_begin_5670480768:;
			if (!(_21021_i >= _20817_m)) { goto _iter_end_5670480768; }
			{
				_20921_t=static_cast<jule::F64>(jule::div(1LL,jule::div(static_cast<jule::F64>(_21021_i),_8427_x) - _20921_t));
			}
			_iter_next_5670480768:;
			_21021_i-=2LL;
			goto _iter_begin_5670480768;
			_iter_end_5670480768:;
			jule::F64 _21421_a = _20921_t;
			_11613_b=1LL;
			jule::F64 _22421_tmp = static_cast<jule::F64>(_8415_n);
			jule::F64 _22517_v = jule::div(2LL,_8427_x);
			_22421_tmp=static_cast<jule::F64>(_22421_tmp * _1502aeb50_log(static_cast<jule::F64>(_1502fb3e0_abs(static_cast<jule::F64>(_22517_v * _22421_tmp)))));
			if (_22421_tmp < 709.782712893384) {
				jule::Int _22825_i = _8415_n - 1LL;
				_iter_begin_5670480176:;
				if (!(_22825_i > 0LL)) { goto _iter_end_5670480176; }
				{
					jule::F64 _23025_di = static_cast<jule::F64>(_22825_i + _22825_i);
					std::tie(_21421_a,_11613_b) = std::make_tuple(_11613_b,static_cast<jule::F64>(jule::div(_11613_b * _23025_di,_8427_x) - _21421_a));
				}
				_iter_next_5670480176:;
				(_22825_i)--;
				goto _iter_begin_5670480176;
				_iter_end_5670480176:;
			} else {
				jule::Int _23425_i = _8415_n - 1LL;
				_iter_begin_5670493136:;
				if (!(_23425_i > 0LL)) { goto _iter_end_5670493136; }
				{
					jule::F64 _23625_di = static_cast<jule::F64>(_23425_i + _23425_i);
					std::tie(_21421_a,_11613_b) = std::make_tuple(_11613_b,static_cast<jule::F64>(jule::div(_11613_b * _23625_di,_8427_x) - _21421_a));
					if (_11613_b > 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) {
						_21421_a/=_11613_b;
						_20921_t/=_11613_b;
						_11613_b=1LL;
					}
				}
				_iter_next_5670493136:;
				(_23425_i)--;
				goto _iter_begin_5670493136;
				_iter_end_5670493136:;
			}
			_11613_b=static_cast<jule::F64>(jule::div(_20921_t * _150347f70_j0(_8427_x),_11613_b));
		}
	}
	if (_10913_sign) {
		return static_cast<jule::F64>((-(_11613_b)));
	}
	return _11613_b;
}



inline jule::F64 _1506360a0_yn(jule::Int _26315_n,jule::F64 _26323_x) {
	
	{
		if (!((_26323_x < 0LL) || (_15022f040_is_nan(_26323_x)))) { goto _case_end_5670502080; }
		_case_begin_5670502080:;
		{
			return static_cast<jule::F64>(_15022f040_nan());
		}
		goto _match_end_5670501840;
		_case_end_5670502080:;
		if (!((_15022f040_is_inf(_26323_x,1LL)))) { goto _case_end_5670502192; }
		_case_begin_5670502192:;
		{
			return 0LL;
		}
		goto _match_end_5670501840;
		_case_end_5670502192:;
		_match_end_5670501840:;
	}
	if (_26315_n == 0LL) {
		return static_cast<jule::F64>(_150347f70_y0(_26323_x));
	}
	if (_26323_x == 0LL) {
		if ((_26315_n < 0LL) && ((_26315_n & 1LL) == 1LL)) {
			return static_cast<jule::F64>(_15022f040_inf(1LL));
		}
		return static_cast<jule::F64>(_15022f040_inf(-1LL));
	}
	jule::Bool _28213_sign = false;
	if (_26315_n < 0LL) {
		_26315_n=static_cast<jule::Int>((-(_26315_n)));
		if ((_26315_n & 1LL) == 1LL) {
			_28213_sign=true;
		}
	}
	if (_26315_n == 1LL) {
		if (_28213_sign) {
			return static_cast<jule::F64>((-(_1502cfe00_y1(_26323_x))));
		}
		return static_cast<jule::F64>(_1502cfe00_y1(_26323_x));
	}
	jule::F64 _29513_b = 0LL;
	if (_26323_x >= 5967269506265907200LL) {
		jule::F64 _31017_temp = 0LL;
		jule::F64 _31114_s;
		jule::F64 _31117_c;
		std::tie(_31114_s,_31117_c) = _150286070_sincos(_26323_x);
		{
			auto _match_expr{ _26315_n & 3LL };
			if (!((0LL) == _match_expr)) { goto _case_end_5670518704; }
			_case_begin_5670518704:;
			{
				_31017_temp=static_cast<jule::F64>(_31114_s - _31117_c);
			}
			goto _match_end_5670516464;
			_case_end_5670518704:;
			if (!((1LL) == _match_expr)) { goto _case_end_5670518864; }
			_case_begin_5670518864:;
			{
				_31017_temp=static_cast<jule::F64>((-(_31114_s)) - _31117_c);
			}
			goto _match_end_5670516464;
			_case_end_5670518864:;
			if (!((2LL) == _match_expr)) { goto _case_end_5670518976; }
			_case_begin_5670518976:;
			{
				_31017_temp=static_cast<jule::F64>((-(_31114_s)) + _31117_c);
			}
			goto _match_end_5670516464;
			_case_end_5670518976:;
			if (!((3LL) == _match_expr)) { goto _case_end_5670519088; }
			_case_begin_5670519088:;
			{
				_31017_temp=static_cast<jule::F64>(_31114_s + _31117_c);
			}
			goto _match_end_5670516464;
			_case_end_5670519088:;
			_match_end_5670516464:;
		}
		_29513_b=static_cast<jule::F64>(jule::div(0.5641895835477563 * _31017_temp,_15059e5b0_sqrt(_26323_x)));
	} else {
		jule::F64 _32017_a = _150347f70_y0(_26323_x);
		_29513_b=static_cast<jule::F64>(_1502cfe00_y1(_26323_x));
		jule::Int _32317_i = 1LL;
		_iter_begin_5670526080:;
		if (!((_32317_i < _26315_n) && (!(_15022f040_is_inf(_29513_b,-1LL))))) { goto _iter_end_5670526080; }
		{
			std::tie(_32017_a,_29513_b) = std::make_tuple(_29513_b,static_cast<jule::F64>((jule::div(static_cast<jule::F64>(_32317_i + _32317_i),_26323_x) * _29513_b) - _32017_a));
		}
		_iter_next_5670526080:;
		(_32317_i)++;
		goto _iter_begin_5670526080;
		_iter_end_5670526080:;
	}
	if (_28213_sign) {
		return static_cast<jule::F64>((-(_29513_b)));
	}
	return _29513_b;
}



inline jule::F64 _1506a0eb0_remainder(jule::F64 _6822_x,jule::F64 _6834_y) {
	
	
	{
		if (!((_15022f040_is_nan(_6822_x)) || (_15022f040_is_nan(_6834_y)) || (_15022f040_is_inf(_6822_x,0LL)) || (_6834_y == 0LL))) { goto _case_end_5670533184; }
		_case_begin_5670533184:;
		{
			return static_cast<jule::F64>(_15022f040_nan());
		}
		goto _match_end_5670533008;
		_case_end_5670533184:;
		if (!((_15022f040_is_inf(_6834_y,0LL)))) { goto _case_end_5670533296; }
		_case_begin_5670533296:;
		{
			return _6822_x;
		}
		goto _match_end_5670533008;
		_case_end_5670533296:;
		_match_end_5670533008:;
	}
	jule::Bool _7913_sign = false;
	if (_6822_x < 0LL) {
		_6822_x=static_cast<jule::F64>((-(_6822_x)));
		_7913_sign=true;
	}
	if (_6834_y < 0LL) {
		_6834_y=static_cast<jule::F64>((-(_6834_y)));
	}
	if (_6822_x == _6834_y) {
		if (_7913_sign) {
			jule::F64 _8917_zero = 0LL;
			return static_cast<jule::F64>((-(_8917_zero)));
		}
		return 0LL;
	}
	if (_6834_y <= 89884656743115790000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) {
		_6822_x=static_cast<jule::F64>(_1501de520_mod(_6822_x,static_cast<jule::F64>(_6834_y + _6834_y)));
	}
	if (_6834_y < 0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004450147717014403) {
		if ((_6822_x + _6822_x) > _6834_y) {
			_6822_x-=_6834_y;
			if ((_6822_x + _6822_x) >= _6834_y) {
				_6822_x-=_6834_y;
			}
		}
	} else {
		jule::F64 _10513_y_half = 0.5 * _6834_y;
		if (_6822_x > _10513_y_half) {
			_6822_x-=_6834_y;
			if (_6822_x >= _10513_y_half) {
				_6822_x-=_6834_y;
			}
		}
	}
	if (_7913_sign) {
		_6822_x=static_cast<jule::F64>((-(_6822_x)));
	}
	return _6822_x;
}



inline jule::F64 _1506528e0_xatan(jule::F64 _8610_x) {
	
	
	
	
	
	
	
	
	
	
	jule::F64 _9813_z = _8610_x * _8610_x;
	_9813_z=static_cast<jule::F64>(jule::div(_9813_z * ((((((((-0.8750608600031904 * _9813_z) + -16.157537187333652) * _9813_z) + -75.00855792314705) * _9813_z) + -122.88666844901361) * _9813_z) + -64.85021904942025),((((((((_9813_z + 24.858464901423062) * _9813_z) + 165.02700983169885) * _9813_z) + 432.88106049129027) * _9813_z) + 485.3903996359137) * _9813_z) + 194.5506571482614));
	_9813_z=static_cast<jule::F64>((_8610_x * _9813_z) + _8610_x);
	return _9813_z;
}



inline jule::F64 _1506528e0_satan(jule::F64 _10610_x) {
	
	
	if (_10610_x <= 0.66) {
		return static_cast<jule::F64>(_1506528e0_xatan(_10610_x));
	}
	if (_10610_x > 2.414213562373095) {
		return static_cast<jule::F64>((1.5707963267948966 - _1506528e0_xatan(static_cast<jule::F64>(jule::div(1LL,_10610_x)))) + 0.00000000000000006123233995736766);
	}
	return static_cast<jule::F64>((0.7853981633974483 + _1506528e0_xatan(static_cast<jule::F64>(jule::div(_10610_x - 1LL,_10610_x + 1LL)))) + 0.00000000000000003061616997868383);
}



inline jule::F64 _1506528e0_atan(jule::F64 _12413_x) {
	if (_12413_x == 0LL) {
		return _12413_x;
	}
	if (_12413_x > 0LL) {
		return static_cast<jule::F64>(_1506528e0_satan(_12413_x));
	}
	return static_cast<jule::F64>((-(_1506528e0_satan(static_cast<jule::F64>((-(_12413_x)))))));
}



inline jule::F64 _1506c2020_asin(jule::F64 _5017_x) {
	if (_5017_x == 0LL) {
		return _5017_x;
	}
	jule::Bool _5413_sign = false;
	if (_5017_x < 0LL) {
		_5017_x=static_cast<jule::F64>((-(_5017_x)));
		_5413_sign=true;
	}
	if (_5017_x > 1LL) {
		return static_cast<jule::F64>(_15022f040_nan());
	}
	jule::F64 _6313_temp = _15059e5b0_sqrt(static_cast<jule::F64>(1LL - (_5017_x * _5017_x)));
	if (_5017_x > 0.7) {
		_6313_temp=static_cast<jule::F64>(1.5707963267948966 - _1506528e0_satan(static_cast<jule::F64>(jule::div(_6313_temp,_5017_x))));
	} else {
		_6313_temp=static_cast<jule::F64>(_1506528e0_satan(static_cast<jule::F64>(jule::div(_5017_x,_6313_temp))));
	}
	if (_5413_sign) {
		_6313_temp=static_cast<jule::F64>((-(_6313_temp)));
	}
	return _6313_temp;
}



inline jule::F64 _1506c2020_acos(jule::F64 _8013_x) {
	return static_cast<jule::F64>(1.5707963267948966 - _1506c2020_asin(_8013_x));
}



inline jule::F64 _1506d6f30_asinh(jule::F64 _7018_x) {
	
	
	
	if (_15022f040_is_nan(_7018_x) || _15022f040_is_inf(_7018_x,0LL)) {
		return _7018_x;
	}
	jule::Bool _7913_sign = false;
	if (_7018_x < 0LL) {
		_7018_x=static_cast<jule::F64>((-(_7018_x)));
		_7913_sign=true;
	}
	jule::F64 _8413_temp = 0LL;
	{
		if (!((_7018_x > 268435456LL))) { goto _case_end_5670597328; }
		_case_begin_5670597328:;
		{
			_8413_temp=static_cast<jule::F64>(_1502aeb50_log(_7018_x) + 0.6931471805599453);
		}
		goto _match_end_5670595696;
		_case_end_5670597328:;
		if (!((_7018_x > 2LL))) { goto _case_end_5670598768; }
		_case_begin_5670598768:;
		{
			_8413_temp=static_cast<jule::F64>(_1502aeb50_log(static_cast<jule::F64>((2LL * _7018_x) + jule::div(1LL,_15059e5b0_sqrt(static_cast<jule::F64>((_7018_x * _7018_x) + 1LL)) + _7018_x))));
		}
		goto _match_end_5670595696;
		_case_end_5670598768:;
		if (!((_7018_x < 0.000000003725290298461914))) { goto _case_end_5670597872; }
		_case_begin_5670597872:;
		{
			_8413_temp=_7018_x;
		}
		goto _match_end_5670595696;
		_case_end_5670597872:;
		_case_begin_5670590704:;
		{
			_8413_temp=static_cast<jule::F64>(_15055fc00_log1p(static_cast<jule::F64>(_7018_x + jule::div(_7018_x * _7018_x,1LL + _15059e5b0_sqrt(static_cast<jule::F64>(1LL + (_7018_x * _7018_x)))))));
		}
		goto _match_end_5670595696;
		_case_end_5670590704:;
		_match_end_5670595696:;
	}
	if (_7913_sign) {
		_8413_temp=static_cast<jule::F64>((-(_8413_temp)));
	}
	return _8413_temp;
}



inline std::tuple<jule::Bool,jule::Int> _157efba10_conv_bool(jule::Str _4118_s) {
	{
		auto _match_expr{ _4118_s };
		if (!((jule::Str("1", 1)) == _match_expr || (jule::Str("t", 1)) == _match_expr || (jule::Str("T", 1)) == _match_expr || (jule::Str("true", 4)) == _match_expr || (jule::Str("TRUE", 4)) == _match_expr || (jule::Str("True", 4)) == _match_expr)) { goto _case_end_5671117792; }
		_case_begin_5671117792:;
		{
			return std::make_tuple(true,0LLU);
		}
		goto _match_end_5671117456;
		_case_end_5671117792:;
		if (!((jule::Str("0", 1)) == _match_expr || (jule::Str("f", 1)) == _match_expr || (jule::Str("F", 1)) == _match_expr || (jule::Str("false", 5)) == _match_expr || (jule::Str("FALSE", 5)) == _match_expr || (jule::Str("False", 5)) == _match_expr)) { goto _case_end_5671118048; }
		_case_begin_5671118048:;
		{
			return std::make_tuple(false,0LLU);
		}
		goto _match_end_5671117456;
		_case_end_5671118048:;
		_match_end_5671117456:;
	}
	return std::make_tuple(false,2LLU);
}



inline jule::Str _157efba10_fmt_bool(jule::Bool _5217_b) {
	if (_5217_b) {
		return jule::Str("true", 4);
	}
	return jule::Str("false", 5);
}



inline jule::Str _147e3cfb0_fmt_float(jule::F64 _7818_f,jule::U8 _7826_fmt,jule::Int _7837_prec,jule::Int _7848_bit_size) {
	return static_cast<jule::Str>(_147e3cfb0_generic_ftoa(nullptr,_7818_f,_7826_fmt,_7837_prec,_7848_bit_size));
}



inline jule::Slice<jule::U8> _147e3cfb0_generic_ftoa(jule::Slice<jule::U8> _8221_dst,jule::F64 _8234_val,jule::U8 _8244_fmt,jule::Int _8259_prec,jule::Int _8270_bit_size) {
	jule::U64 _8313_bits = 0LLU;
	_147e3cfb0_FloatInfo* _8413_flt = nullptr;
	{
		auto _match_expr{ _8270_bit_size };
		if (!((32LL) == _match_expr)) { goto _case_end_5671135056; }
		_case_begin_5671135056:;
		{
			_8313_bits=static_cast<jule::U64>(_1501bd670_f32_bits(static_cast<jule::F32>(_8234_val)));
			_8413_flt=(&(_147e3cfb0_F32_INFO));
		}
		goto _match_end_5671133920;
		_case_end_5671135056:;
		if (!((64LL) == _match_expr)) { goto _case_end_5671135248; }
		_case_begin_5671135248:;
		{
			_8313_bits=static_cast<jule::U64>(_1501bd670_f64_bits(_8234_val));
			_8413_flt=(&(_147e3cfb0_F64_INFO));
		}
		goto _match_end_5671133920;
		_case_end_5671135248:;
		_case_begin_5671134144:;
		{
			jule::panic(jule::Str("std::conv: illegal bit_size", 27));
		}
		goto _match_end_5671133920;
		_case_end_5671134144:;
		_match_end_5671133920:;
	}
	jule::Bool _969_neg = (_8313_bits >> (_8413_flt->_field_expbits + _8413_flt->_field_mantbits)) != 0LL;
	jule::Int _9713_exp = static_cast<jule::Int>(_8313_bits >> _8413_flt->_field_mantbits) & ((1LL << _8413_flt->_field_expbits) - 1LL);
	jule::U64 _9813_mant = _8313_bits & ((static_cast<jule::U64>(1LLU) << _8413_flt->_field_mantbits) - 1LL);
	{
		auto _match_expr{ _9713_exp };
		if (!(((1LL << _8413_flt->_field_expbits) - 1LL) == _match_expr)) { goto _case_end_5671145568; }
		_case_begin_5671145568:;
		{
			jule::Str _10317_s = jule::Str("", 0);
			{
				if (!((_9813_mant != 0LL))) { goto _case_end_5671150448; }
				_case_begin_5671150448:;
				{
					_10317_s=jule::Str("nan", 3);
				}
				goto _match_end_5671149472;
				_case_end_5671150448:;
				if (!((_969_neg))) { goto _case_end_5671151456; }
				_case_begin_5671151456:;
				{
					_10317_s=jule::Str("-inf", 4);
				}
				goto _match_end_5671149472;
				_case_end_5671151456:;
				_case_begin_5671149632:;
				{
					_10317_s=jule::Str("+inf", 4);
				}
				goto _match_end_5671149472;
				_case_end_5671149632:;
				_match_end_5671149472:;
			}
			return jule::append(_8221_dst,static_cast<jule::Slice<jule::U8>>(_10317_s));
		}
		goto _match_end_5671140080;
		_case_end_5671145568:;
		if (!((0LL) == _match_expr)) { goto _case_end_5671145680; }
		_case_begin_5671145680:;
		{
			(_9713_exp)++;
		}
		goto _match_end_5671140080;
		_case_end_5671145680:;
		_case_begin_5671144608:;
		{
			_9813_mant|=static_cast<jule::Uint>(static_cast<jule::U64>(1LLU) << _8413_flt->_field_mantbits);
		}
		goto _match_end_5671140080;
		_case_end_5671144608:;
		_match_end_5671140080:;
	}
	_9713_exp+=_8413_flt->_field_bias;
	if (_8244_fmt == 'b') {
		return _147e3cfb0_fmt_b(_8221_dst,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	if ((_8244_fmt == 'x') || (_8244_fmt == 'X')) {
		return _147e3cfb0_fmt_x(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	if (false) {
		return _147e3cfb0_big_ftoa(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	_147e3cfb0_DecimalSlice _13413_digs = _147e3cfb0_DecimalSlice();
	jule::Bool _13513_ok = false;
	jule::Bool _1379_shortest = _8259_prec < 0LL;
	if (_1379_shortest) {
		jule::Array<jule::U8,32> _14013_buf = jule::Array<jule::U8,32>({});
		_13413_digs._field_d=_14013_buf.slice(0LL);
		_147ebfca0_ryu_ftoa_shortest(_13413_digs,_9813_mant,static_cast<jule::Int>(static_cast<jule::Int>(_9713_exp - static_cast<jule::Int>(_8413_flt->_field_mantbits))),(*(_8413_flt)));
		_13513_ok=true;
		{
			auto _match_expr{ _8244_fmt };
			if (!(('e') == _match_expr || ('E') == _match_expr)) { goto _case_end_5671164912; }
			_case_begin_5671164912:;
			{
				_8259_prec=static_cast<jule::Int>(_147e3cfb0_max(static_cast<jule::Int>(_13413_digs._field_nd - 1LL),0LL));
			}
			goto _match_end_5671163280;
			_case_end_5671164912:;
			if (!(('f') == _match_expr)) { goto _case_end_5671165632; }
			_case_begin_5671165632:;
			{
				_8259_prec=static_cast<jule::Int>(_147e3cfb0_max(static_cast<jule::Int>(_13413_digs._field_nd - _13413_digs._field_dp),0LL));
			}
			goto _match_end_5671163280;
			_case_end_5671165632:;
			if (!(('g') == _match_expr || ('G') == _match_expr)) { goto _case_end_5671165744; }
			_case_begin_5671165744:;
			{
				_8259_prec=_13413_digs._field_nd;
			}
			goto _match_end_5671163280;
			_case_end_5671165744:;
			_match_end_5671163280:;
		}
	} else if (_8244_fmt != 'f') {
		jule::Int _15517_digits = _8259_prec;
		{
			auto _match_expr{ _8244_fmt };
			if (!(('e') == _match_expr || ('E') == _match_expr)) { goto _case_end_5671172416; }
			_case_begin_5671172416:;
			{
				(_15517_digits)++;
			}
			goto _match_end_5671170624;
			_case_end_5671172416:;
			if (!(('g') == _match_expr || ('G') == _match_expr)) { goto _case_end_5671171440; }
			_case_begin_5671171440:;
			{
				if (_8259_prec == 0LL) {
					_8259_prec=1LL;
				}
				_15517_digits=_8259_prec;
			}
			goto _match_end_5671170624;
			_case_end_5671171440:;
			_case_begin_5671171136:;
			{
				_15517_digits=1LL;
			}
			goto _match_end_5671170624;
			_case_end_5671171136:;
			_match_end_5671170624:;
		}
		jule::Array<jule::U8,24> _16813_buf = jule::Array<jule::U8,24>({});
		if ((_8270_bit_size == 32LL) && (_15517_digits <= 9LL)) {
			_13413_digs._field_d=_16813_buf.slice(0LL);
			_147ebfca0_ryu_ftoa_fixed32(_13413_digs,static_cast<jule::U32>(_9813_mant),static_cast<jule::Int>(static_cast<jule::Int>(_9713_exp - static_cast<jule::Int>(_8413_flt->_field_mantbits))),_15517_digits);
			_13513_ok=true;
		} else if (_15517_digits <= 18LL) {
			_13413_digs._field_d=_16813_buf.slice(0LL);
			_147ebfca0_ryu_ftoa_fixed64(_13413_digs,_9813_mant,static_cast<jule::Int>(static_cast<jule::Int>(_9713_exp - static_cast<jule::Int>(_8413_flt->_field_mantbits))),_15517_digits);
			_13513_ok=true;
		}
	}
	if ((!(_13513_ok))) {
		return _147e3cfb0_big_ftoa(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	return _147e3cfb0_fmt_digits(_8221_dst,_1379_shortest,_969_neg,_13413_digs,_8259_prec,_8244_fmt);
}



inline jule::Slice<jule::U8> _147e3cfb0_big_ftoa(jule::Slice<jule::U8> _18617_dst,jule::Int _18634_prec,jule::U8 _18645_fmt,jule::Bool _18656_neg,jule::U64 _18713_mant,jule::Int _18724_exp,_147e3cfb0_FloatInfo& _18735_flt) {
	_150025080_Decimal _18813_d = _150025080_Decimal();
	_18813_d._method_assign(_18713_mant);
	_18813_d._method_shift(static_cast<jule::Int>(_18724_exp - static_cast<jule::Int>(_18735_flt._field_mantbits)));
	_147e3cfb0_DecimalSlice _19113_digs = _147e3cfb0_DecimalSlice();
	jule::Bool _1929_shortest = _18634_prec < 0LL;
	if (_1929_shortest) {
		_147e3cfb0_round_shortest(_18813_d,_18713_mant,_18724_exp,_18735_flt);
		_19113_digs=_147e3cfb0_DecimalSlice(_18813_d._field_d.slice(0LL),_18813_d._field_nd,_18813_d._field_dp,jule::Bool());
		{
			auto _match_expr{ _18645_fmt };
			if (!(('e') == _match_expr || ('E') == _match_expr)) { goto _case_end_5671195424; }
			_case_begin_5671195424:;
			{
				_18634_prec=static_cast<jule::Int>(_19113_digs._field_nd - 1LL);
			}
			goto _match_end_5671197632;
			_case_end_5671195424:;
			if (!(('f') == _match_expr)) { goto _case_end_5671199440; }
			_case_begin_5671199440:;
			{
				_18634_prec=static_cast<jule::Int>(_147e3cfb0_max(static_cast<jule::Int>(_19113_digs._field_nd - _19113_digs._field_dp),0LL));
			}
			goto _match_end_5671197632;
			_case_end_5671199440:;
			if (!(('g') == _match_expr || ('G') == _match_expr)) { goto _case_end_5671199552; }
			_case_begin_5671199552:;
			{
				_18634_prec=_19113_digs._field_nd;
			}
			goto _match_end_5671197632;
			_case_end_5671199552:;
			_match_end_5671197632:;
		}
	} else {
		{
			auto _match_expr{ _18645_fmt };
			if (!(('e') == _match_expr || ('E') == _match_expr)) { goto _case_end_5671203568; }
			_case_begin_5671203568:;
			{
				_18813_d._method_round(static_cast<jule::Int>(_18634_prec + 1LL));
			}
			goto _match_end_5671202112;
			_case_end_5671203568:;
			if (!(('f') == _match_expr)) { goto _case_end_5671203680; }
			_case_begin_5671203680:;
			{
				_18813_d._method_round(static_cast<jule::Int>(_18813_d._field_dp + _18634_prec));
			}
			goto _match_end_5671202112;
			_case_end_5671203680:;
			if (!(('g') == _match_expr || ('G') == _match_expr)) { goto _case_end_5671200288; }
			_case_begin_5671200288:;
			{
				if (_18634_prec == 0LL) {
					_18634_prec=1LL;
				}
				_18813_d._method_round(_18634_prec);
			}
			goto _match_end_5671202112;
			_case_end_5671200288:;
			_match_end_5671202112:;
		}
		_19113_digs=_147e3cfb0_DecimalSlice(_18813_d._field_d.slice(0LL),_18813_d._field_nd,_18813_d._field_dp,jule::Bool());
	}
	return _147e3cfb0_fmt_digits(_18617_dst,_1929_shortest,_18656_neg,_19113_digs,_18634_prec,_18645_fmt);
}



inline jule::Slice<jule::U8> _147e3cfb0_fmt_digits(jule::Slice<jule::U8> _22319_dst,jule::Bool _22332_shortest,jule::Bool _22348_neg,_147e3cfb0_DecimalSlice _22413_digs,jule::Int _22437_prec,jule::U8 _22448_fmt) {
	{
		auto _match_expr{ _22448_fmt };
		if (!(('e') == _match_expr || ('E') == _match_expr)) { goto _case_end_5671216000; }
		_case_begin_5671216000:;
		{
			return _147e3cfb0_fmt_e(_22319_dst,_22348_neg,_22413_digs,_22437_prec,_22448_fmt);
		}
		goto _match_end_5671215664;
		_case_end_5671216000:;
		if (!(('f') == _match_expr)) { goto _case_end_5671216128; }
		_case_begin_5671216128:;
		{
			return _147e3cfb0_fmt_f(_22319_dst,_22348_neg,_22413_digs,_22437_prec);
		}
		goto _match_end_5671215664;
		_case_end_5671216128:;
		if (!(('g') == _match_expr || ('G') == _match_expr)) { goto _case_end_5671216256; }
		_case_begin_5671216256:;
		{
			jule::Int _23217_eprec = _22437_prec;
			if ((_23217_eprec > _22413_digs._field_nd) && (_22413_digs._field_nd >= _22413_digs._field_dp)) {
				_23217_eprec=_22413_digs._field_nd;
			}
			if (_22332_shortest) {
				_23217_eprec=6LL;
			}
			jule::Int _24213_exp = _22413_digs._field_dp - 1LL;
			if ((_24213_exp < -4LL) || (_24213_exp >= _23217_eprec)) {
				if (_22437_prec > _22413_digs._field_nd) {
					_22437_prec=_22413_digs._field_nd;
				}
				return _147e3cfb0_fmt_e(_22319_dst,_22348_neg,_22413_digs,static_cast<jule::Int>(_22437_prec - 1LL),static_cast<jule::U8>((_22448_fmt + 'e') - 'g'));
			}
			if (_22437_prec > _22413_digs._field_dp) {
				_22437_prec=_22413_digs._field_nd;
			}
			return _147e3cfb0_fmt_f(_22319_dst,_22348_neg,_22413_digs,static_cast<jule::Int>(_147e3cfb0_max(static_cast<jule::Int>(_22437_prec - _22413_digs._field_dp),0LL)));
		}
		goto _match_end_5671215664;
		_case_end_5671216256:;
		_match_end_5671215664:;
	}
	return jule::append(_22319_dst,jule::Slice<jule::U8>({'%',_22448_fmt}));
}



inline void _147e3cfb0_round_shortest(_150025080_Decimal& _26124_d,jule::U64 _26136_mant,jule::Int _26147_exp,_147e3cfb0_FloatInfo& _26158_flt) {
	if (_26136_mant == 0LL) {
		_26124_d._field_nd=0LL;
		return;
	}
	jule::Int _2829_minexp = _26158_flt._field_bias + 1LL;
	if ((_26147_exp > _2829_minexp) && ((332LL * (_26124_d._field_dp - _26124_d._field_nd)) >= (100LL * (_26147_exp - static_cast<jule::Int>(_26158_flt._field_mantbits))))) {
		return;
	}
	_150025080_Decimal _29113_upper = _150025080_Decimal();
	_29113_upper._method_assign(static_cast<jule::U64>((_26136_mant * 2LL) + 1LL));
	_29113_upper._method_shift(static_cast<jule::Int>((_26147_exp - static_cast<jule::Int>(_26158_flt._field_mantbits)) - 1LL));
	jule::U64 _30113_mantlo = 0LLU;
	jule::Int _30213_explo = 0LL;
	if ((_26136_mant > (1LL << _26158_flt._field_mantbits)) || (_26147_exp == _2829_minexp)) {
		_30113_mantlo=static_cast<jule::U64>(_26136_mant - 1LL);
		_30213_explo=_26147_exp;
	} else {
		_30113_mantlo=static_cast<jule::U64>((_26136_mant * 2LL) - 1LL);
		_30213_explo=static_cast<jule::Int>(_26147_exp - 1LL);
	}
	_150025080_Decimal _31013_lower = _150025080_Decimal();
	_31013_lower._method_assign(static_cast<jule::U64>((_30113_mantlo * 2LL) + 1LL));
	_31013_lower._method_shift(static_cast<jule::Int>((_30213_explo - static_cast<jule::Int>(_26158_flt._field_mantbits)) - 1LL));
	jule::Bool _3179_inclusive = jule::mod(_26136_mant,2LL) == 0LL;
	jule::U8 _33013_upperdelta = 0LLU;
	jule::Int _33413_ui = 0LL;
	_iter_begin_5671254384:;
	{
		jule::Int _33913_mi = (_33413_ui - _29113_upper._field_dp) + _26124_d._field_dp;
		if (_33913_mi >= _26124_d._field_nd) {
			goto _iter_end_5671254384;
		}
		jule::Int _34313_li = (_33413_ui - _29113_upper._field_dp) + _31013_lower._field_dp;
		jule::U8 _34417_l = static_cast<jule::U8>(48LLU);
		if ((_34313_li >= 0LL) && (_34313_li < _31013_lower._field_nd)) {
			_34417_l=_31013_lower._field_d[static_cast<jule::Int>(_34313_li)];
		}
		jule::U8 _34817_m = static_cast<jule::U8>(48LLU);
		if (_33913_mi >= 0LL) {
			_34817_m=_26124_d._field_d[static_cast<jule::Int>(_33913_mi)];
		}
		jule::U8 _35217_u = static_cast<jule::U8>(48LLU);
		if (_33413_ui < _29113_upper._field_nd) {
			_35217_u=_29113_upper._field_d[static_cast<jule::Int>(_33413_ui)];
		}
		jule::Bool _36013_okdown = (_34417_l != _34817_m) || (_3179_inclusive && ((_34313_li + 1LL) == _31013_lower._field_nd));
		{
			if (!(((_33013_upperdelta == 0LL) && ((_34817_m + 1LL) < _35217_u)))) { goto _case_end_5671271232; }
			_case_begin_5671271232:;
			{
				_33013_upperdelta=2LL;
			}
			goto _match_end_5671268640;
			_case_end_5671271232:;
			if (!(((_33013_upperdelta == 0LL) && (_34817_m != _35217_u)))) { goto _case_end_5671271344; }
			_case_begin_5671271344:;
			{
				_33013_upperdelta=1LL;
			}
			goto _match_end_5671268640;
			_case_end_5671271344:;
			if (!(((_33013_upperdelta == 1LL) && ((_34817_m != '9') || (_35217_u != '0'))))) { goto _case_end_5671271808; }
			_case_begin_5671271808:;
			{
				_33013_upperdelta=2LL;
			}
			goto _match_end_5671268640;
			_case_end_5671271808:;
			_match_end_5671268640:;
		}
		jule::Bool _38113_okup = (_33013_upperdelta > 0LL) && ((_3179_inclusive || (_33013_upperdelta > 1LL)) || ((_33413_ui + 1LL) < _29113_upper._field_nd));
		{
			if (!((_36013_okdown && _38113_okup))) { goto _case_end_5671277584; }
			_case_begin_5671277584:;
			{
				_26124_d._method_round(static_cast<jule::Int>(_33913_mi + 1LL));
				return;
			}
			goto _match_end_5671277008;
			_case_end_5671277584:;
			if (!((_36013_okdown))) { goto _case_end_5671277696; }
			_case_begin_5671277696:;
			{
				_26124_d._method_round_down(static_cast<jule::Int>(_33913_mi + 1LL));
				return;
			}
			goto _match_end_5671277008;
			_case_end_5671277696:;
			if (!((_38113_okup))) { goto _case_end_5671278112; }
			_case_begin_5671278112:;
			{
				_26124_d._method_round_up(static_cast<jule::Int>(_33913_mi + 1LL));
				return;
			}
			goto _match_end_5671277008;
			_case_end_5671278112:;
			_match_end_5671277008:;
		}
	}
	_iter_next_5671254384:;
	(_33413_ui)++;
	goto _iter_begin_5671254384;
	_iter_end_5671254384:;
}



inline jule::Slice<jule::U8> _147e3cfb0_fmt_e(jule::Slice<jule::U8> _40014_dst,jule::Bool _40027_neg,_147e3cfb0_DecimalSlice _40038_d,jule::Int _40055_prec,jule::U8 _40066_fmt) {
	if (_40027_neg) {
		_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({'-'}));
	}
	jule::U8 _40713_ch = '0';
	if (_40038_d._field_nd != 0LL) {
		_40713_ch=_40038_d._field_d[0LL];
	}
	_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({_40713_ch}));
	if (_40055_prec > 0LL) {
		_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({'.'}));
		jule::Int _41617_i = 1LL;
		jule::Int _41713_m = _147e3cfb0_min(_40038_d._field_nd,static_cast<jule::Int>(_40055_prec + 1LL));
		if (_41617_i < _41713_m) {
			_40014_dst=jule::append(_40014_dst,_40038_d._field_d.slice(static_cast<jule::Int>(_41617_i),static_cast<jule::Int>(_41713_m)));
			_41617_i=_41713_m;
		}
		_iter_begin_5671300272:;
		if (!(_41617_i <= _40055_prec)) { goto _iter_end_5671300272; }
		{
			_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({'0'}));
		}
		_iter_next_5671300272:;
		(_41617_i)++;
		goto _iter_begin_5671300272;
		_iter_end_5671300272:;
	}
	_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({_40066_fmt}));
	jule::Int _42913_exp = _40038_d._field_dp - 1LL;
	if (_40038_d._field_nd == 0LL) {
		_42913_exp=0LL;
	}
	if (_42913_exp < 0LL) {
		_40713_ch='-';
		_42913_exp=static_cast<jule::Int>((-(_42913_exp)));
	} else {
		_40713_ch='+';
	}
	_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({_40713_ch}));
	{
		if (!((_42913_exp < 10LL))) { goto _case_end_5671305520; }
		_case_begin_5671305520:;
		{
			_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({'0',static_cast<jule::U8>(static_cast<jule::U8>(_42913_exp) + '0')}));
		}
		goto _match_end_5671302624;
		_case_end_5671305520:;
		if (!((_42913_exp < 100LL))) { goto _case_end_5671304960; }
		_case_begin_5671304960:;
		{
			_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({static_cast<jule::U8>(static_cast<jule::U8>(jule::div(_42913_exp,10LL)) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(jule::mod(_42913_exp,10LL)) + '0')}));
		}
		goto _match_end_5671302624;
		_case_end_5671304960:;
		_case_begin_5671305408:;
		{
			_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({static_cast<jule::U8>(static_cast<jule::U8>(jule::div(_42913_exp,100LL)) + '0'),static_cast<jule::U8>(jule::mod(static_cast<jule::U8>(jule::div(_42913_exp,10LL)),10LL) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(jule::mod(_42913_exp,10LL)) + '0')}));
		}
		goto _match_end_5671302624;
		_case_end_5671305408:;
		_match_end_5671302624:;
	}
	return _40014_dst;
}



inline jule::Slice<jule::U8> _147e3cfb0_fmt_f(jule::Slice<jule::U8> _45514_dst,jule::Bool _45527_neg,_147e3cfb0_DecimalSlice _45538_d,jule::Int _45555_prec) {
	if (_45527_neg) {
		_45514_dst=jule::append(_45514_dst,jule::Slice<jule::U8>({'-'}));
	}
	if (_45538_d._field_dp > 0LL) {
		jule::Int _46317_m = _147e3cfb0_min(_45538_d._field_nd,_45538_d._field_dp);
		_45514_dst=jule::append(_45514_dst,_45538_d._field_d.slice(0LL,static_cast<jule::Int>(_46317_m)));
		_iter_begin_5671317392:;
		if (!(_46317_m < _45538_d._field_dp)) { goto _iter_end_5671317392; }
		{
			_45514_dst=jule::append(_45514_dst,jule::Slice<jule::U8>({'0'}));
		}
		_iter_next_5671317392:;
		(_46317_m)++;
		goto _iter_begin_5671317392;
		_iter_end_5671317392:;
	} else {
		_45514_dst=jule::append(_45514_dst,jule::Slice<jule::U8>({'0'}));
	}
	if (_45555_prec > 0LL) {
		_45514_dst=jule::append(_45514_dst,jule::Slice<jule::U8>({'.'}));
		jule::Int _47417_i = 0LL;
		_iter_begin_5671319600:;
		if (!(_47417_i < _45555_prec)) { goto _iter_end_5671319600; }
		{
			jule::U8 _47621_ch = static_cast<jule::U8>(48LLU);
			jule::Int _47717_j = _45538_d._field_dp + _47417_i;
			if ((0LL <= _47717_j) && (_47717_j < _45538_d._field_nd)) {
				_47621_ch=_45538_d._field_d[static_cast<jule::Int>(_47717_j)];
			}
			_45514_dst=jule::append(_45514_dst,jule::Slice<jule::U8>({_47621_ch}));
		}
		_iter_next_5671319600:;
		(_47417_i)++;
		goto _iter_begin_5671319600;
		_iter_end_5671319600:;
	}
	return _45514_dst;
}



inline jule::Slice<jule::U8> _147e3cfb0_fmt_b(jule::Slice<jule::U8> _48814_dst,jule::Bool _48827_neg,jule::U64 _48838_mant,jule::Int _48853_exp,_147e3cfb0_FloatInfo& _48864_flt) {
	if (_48827_neg) {
		_48814_dst=jule::append(_48814_dst,jule::Slice<jule::U8>({'-'}));
	}
	std::tie(_48814_dst,std::ignore) = _1500241f0_fmt_bits(_48814_dst,_48838_mant,10LL,false,true);
	_48814_dst=jule::append(_48814_dst,jule::Slice<jule::U8>({'p'}));
	_48853_exp-=static_cast<jule::Int>(_48864_flt._field_mantbits);
	if (_48853_exp >= 0LL) {
		_48814_dst=jule::append(_48814_dst,jule::Slice<jule::U8>({'+'}));
	}
	std::tie(_48814_dst,std::ignore) = _1500241f0_fmt_bits(_48814_dst,static_cast<jule::U64>(_48853_exp),10LL,_48853_exp < 0LL,true);
	return _48814_dst;
}



inline jule::Slice<jule::U8> _147e3cfb0_fmt_x(jule::Slice<jule::U8> _51014_dst,jule::Int _51027_prec,jule::U8 _51038_fmt,jule::Bool _51049_neg,jule::U64 _51113_mant,jule::Int _51128_exp,_147e3cfb0_FloatInfo& _51139_flt) {
	if (_51113_mant == 0LL) {
		_51128_exp=0LL;
	}
	_51113_mant<<=static_cast<jule::Uint>(60LL - _51139_flt._field_mantbits);
	_iter_begin_5671343984:;
	if (!((_51113_mant != 0LL) && ((_51113_mant & 1152921504606846976LL) == 0LL))) { goto _iter_end_5671343984; }
	{
		_51113_mant<<=1LL;
		(_51128_exp)--;
	}
	_iter_next_5671343984:;
	goto _iter_begin_5671343984;
	_iter_end_5671343984:;
	if ((_51027_prec >= 0LL) && (_51027_prec < 15LL)) {
		jule::Uint _52513_shift = static_cast<jule::Uint>(_51027_prec * 4LL);
		jule::U64 _52613_extra = (_51113_mant << _52513_shift) & 1152921504606846976LL;
		_51113_mant>>=static_cast<jule::Uint>(60LL - _52513_shift);
		if ((_52613_extra | (_51113_mant & 1LL)) > 576460752303423488LL) {
			(_51113_mant)++;
		}
		_51113_mant<<=static_cast<jule::Uint>(60LL - _52513_shift);
		if ((_51113_mant & 2305843009213693952LL) != 0LL) {
			_51113_mant>>=1LL;
			(_51128_exp)++;
		}
	}
	jule::Str _53913_hex = jule::Str("0123456789abcdef", 16);
	if (_51038_fmt == 'X') {
		_53913_hex=jule::Str("0123456789ABCDEF", 16);
	}
	if (_51049_neg) {
		_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({'-'}));
	}
	_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({'0',_51038_fmt,static_cast<jule::U8>('0' + static_cast<jule::U8>((_51113_mant >> 60LL) & 1LL))}));
	_51113_mant<<=4LL;
	if ((_51027_prec < 0LL) && (_51113_mant != 0LL)) {
		_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({'.'}));
		_iter_begin_5671359600:;
		if (!(_51113_mant != 0LL)) { goto _iter_end_5671359600; }
		{
			_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({_53913_hex[static_cast<jule::Int>((_51113_mant >> 60LL) & 15LL)]}));
			_51113_mant<<=4LL;
		}
		_iter_next_5671359600:;
		goto _iter_begin_5671359600;
		_iter_end_5671359600:;
	} else if (_51027_prec > 0LL) {
		_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({'.'}));
		jule::Int _56017_i = 0LL;
		_iter_begin_5671362720:;
		if (!(_56017_i < _51027_prec)) { goto _iter_end_5671362720; }
		{
			_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({_53913_hex[static_cast<jule::Int>((_51113_mant >> 60LL) & 15LL)]}));
			_51113_mant<<=4LL;
		}
		_iter_next_5671362720:;
		(_56017_i)++;
		goto _iter_begin_5671362720;
		_iter_end_5671362720:;
	}
	jule::U8 _56813_ch = static_cast<jule::U8>(80LLU);
	if (_51038_fmt == _147e40080_lower(_51038_fmt)) {
		_56813_ch='p';
	}
	_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({_56813_ch}));
	if (_51128_exp < 0LL) {
		_56813_ch='-';
		_51128_exp=static_cast<jule::Int>((-(_51128_exp)));
	} else {
		_56813_ch='+';
	}
	_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({_56813_ch}));
	{
		if (!((_51128_exp < 100LL))) { goto _case_end_5671371904; }
		_case_begin_5671371904:;
		{
			_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({static_cast<jule::U8>(static_cast<jule::U8>(jule::div(_51128_exp,10LL)) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(jule::mod(_51128_exp,10LL)) + '0')}));
		}
		goto _match_end_5671368944;
		_case_end_5671371904:;
		if (!((_51128_exp < 1000LL))) { goto _case_end_5671372016; }
		_case_begin_5671372016:;
		{
			_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({static_cast<jule::U8>(static_cast<jule::U8>(jule::div(_51128_exp,100LL)) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(jule::mod(jule::div(_51128_exp,10LL),10LL)) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(jule::mod(_51128_exp,10LL)) + '0')}));
		}
		goto _match_end_5671368944;
		_case_end_5671372016:;
		_case_begin_5671358240:;
		{
			_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({static_cast<jule::U8>(static_cast<jule::U8>(jule::div(_51128_exp,1000LL)) + '0'),static_cast<jule::U8>(jule::mod(static_cast<jule::U8>(jule::div(_51128_exp,100LL)),10LL) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(jule::mod(jule::div(_51128_exp,10LL),10LL)) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(jule::mod(_51128_exp,10LL)) + '0')}));
		}
		goto _match_end_5671368944;
		_case_end_5671358240:;
		_match_end_5671368944:;
	}
	return _51014_dst;
}



inline jule::Int _147e3cfb0_min(jule::Int _5938_a,jule::Int _59316_b) {
	if (_5938_a < _59316_b) {
		return _5938_a;
	}
	return _59316_b;
}



inline jule::Int _147e3cfb0_max(jule::Int _6008_a,jule::Int _60016_b) {
	if (_6008_a > _60016_b) {
		return _6008_a;
	}
	return _60016_b;
}



inline jule::U8 _147e40080_lower(jule::U8 _4910_c) {
	return static_cast<jule::U8>(_4910_c | 32LL);
}



inline std::tuple<jule::U64,jule::Int> _147e40080_parse_uint(jule::Str _5423_s,jule::Int _5435_base,jule::Int _5450_bit_size) {
	if (_5423_s == jule::Str("", 0)) {
		return std::make_tuple(0LL,2LLU);
	}
	{
		if (!(((2LL <= _5435_base) && (_5435_base <= 36LL)))) { goto _case_end_5671393952; }
		goto _match_end_5671390048;
		_case_end_5671393952:;
		if (!((_5435_base == 0LL))) { goto _case_end_5671392960; }
		_case_begin_5671392960:;
		{
			_5435_base=10LL;
			if (_5423_s[0LL] == '0') {
				{
					if (!(((_5423_s.len() >= 3LL) && (_147e40080_lower(_5423_s[1LL]) == 'b')))) { goto _case_end_5671397728; }
					_case_begin_5671397728:;
					{
						_5435_base=2LL;
						_5423_s=_5423_s.slice(2LL);
					}
					goto _match_end_5671396736;
					_case_end_5671397728:;
					if (!(((_5423_s.len() >= 3LL) && (_147e40080_lower(_5423_s[1LL]) == 'o')))) { goto _case_end_5671398672; }
					_case_begin_5671398672:;
					{
						_5435_base=8LL;
						_5423_s=_5423_s.slice(2LL);
					}
					goto _match_end_5671396736;
					_case_end_5671398672:;
					if (!(((_5423_s.len() >= 3LL) && (_147e40080_lower(_5423_s[1LL]) == 'x')))) { goto _case_end_5671398880; }
					_case_begin_5671398880:;
					{
						_5435_base=16LL;
						_5423_s=_5423_s.slice(2LL);
					}
					goto _match_end_5671396736;
					_case_end_5671398880:;
					_case_begin_5671396880:;
					{
						_5435_base=8LL;
						_5423_s=_5423_s.slice(1LL);
					}
					goto _match_end_5671396736;
					_case_end_5671396880:;
					_match_end_5671396736:;
				}
			}
		}
		goto _match_end_5671390048;
		_case_end_5671392960:;
		_case_begin_5671390144:;
		{
			return std::make_tuple(0LL,3LLU);
		}
		goto _match_end_5671390048;
		_case_end_5671390144:;
		_match_end_5671390048:;
	}
	if (_5450_bit_size == 0LL) {
		_5450_bit_size=64LL;
	} else if ((_5450_bit_size < 0LL) || (_5450_bit_size > 64LL)) {
		return std::make_tuple(0LL,4LLU);
	}
	jule::U64 _9313_cutoff = 0LLU;
	{
		auto _match_expr{ _5435_base };
		if (!((10LL) == _match_expr)) { goto _case_end_5671407920; }
		_case_begin_5671407920:;
		{
			_9313_cutoff=1844674407370955264LL;
		}
		goto _match_end_5671406208;
		_case_end_5671407920:;
		if (!((16LL) == _match_expr)) { goto _case_end_5671409488; }
		_case_begin_5671409488:;
		{
			_9313_cutoff=1152921504606846976LL;
		}
		goto _match_end_5671406208;
		_case_end_5671409488:;
		_case_begin_5671407136:;
		{
			_9313_cutoff=static_cast<jule::U64>(jule::div(jule::MAX_U64,static_cast<jule::U64>(_5435_base)) + 1LL);
		}
		goto _match_end_5671406208;
		_case_end_5671407136:;
		_match_end_5671406208:;
	}
	jule::U64 _10013_max_val = 0LLU;
	{
		auto _match_expr{ _5450_bit_size };
		if (!((32LL) == _match_expr)) { goto _case_end_5671407680; }
		_case_begin_5671407680:;
		{
			_10013_max_val=4294967295LLU;
		}
		goto _match_end_5671410592;
		_case_end_5671407680:;
		if (!((64LL) == _match_expr)) { goto _case_end_5671411520; }
		_case_begin_5671411520:;
		{
			_10013_max_val=jule::MAX_U64;
		}
		goto _match_end_5671410592;
		_case_end_5671411520:;
		_match_end_5671410592:;
	}
	jule::U64 _11213_n = 0LLU;
	{
		auto __julec_range_expr = _5423_s;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::U8 _147e40080_c = *__julec_range_begin;
			_iter_begin_5671414368:;
			{
				jule::U8 _11417_d = 0LLU;
				{
					if (!((('0' <= _147e40080_c) && (_147e40080_c <= '9')))) { goto _case_end_5671419344; }
					_case_begin_5671419344:;
					{
						_11417_d=static_cast<jule::U8>(_147e40080_c - '0');
					}
					goto _match_end_5671417184;
					_case_end_5671419344:;
					if (!((('a' <= _147e40080_lower(_147e40080_c)) && (_147e40080_lower(_147e40080_c) <= 'z')))) { goto _case_end_5671418352; }
					_case_begin_5671418352:;
					{
						_11417_d=static_cast<jule::U8>((_147e40080_lower(_147e40080_c) - 'a') + 10LL);
					}
					goto _match_end_5671417184;
					_case_end_5671418352:;
					_case_begin_5671417376:;
					{
						return std::make_tuple(0LL,2LLU);
					}
					goto _match_end_5671417184;
					_case_end_5671417376:;
					_match_end_5671417184:;
				}
				if (_11417_d >= static_cast<jule::U8>(_5435_base)) {
					return std::make_tuple(0LL,2LLU);
				}
				if (_11213_n >= _9313_cutoff) {
					return std::make_tuple(_10013_max_val,1LLU);
				}
				_11213_n*=static_cast<jule::U64>(_5435_base);
				jule::U64 _13413_n1 = _11213_n + static_cast<jule::U64>(_11417_d);
				if ((_13413_n1 < _11213_n) || (_13413_n1 > _10013_max_val)) {
					return std::make_tuple(_10013_max_val,1LLU);
				}
				_11213_n=_13413_n1;
			}
			_iter_next_5671414368:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _147e40080_c = *__julec_range_begin; goto _iter_begin_5671414368; }
			_iter_end_5671414368:;
		}
	}
	return std::make_tuple(_11213_n,0LLU);
}



inline std::tuple<jule::I64,jule::Int> _147e40080_parse_int(jule::Str _16522_s,jule::Int _16530_base,jule::Int _16545_bit_size) {
	jule::Int _16570_err = 0LLU;
	jule::I64 _16562_i = jule::I64();
	if (_16522_s == jule::Str("", 0)) {
		_16562_i = 0LL;
		_16570_err = 2LLU;
		return std::make_tuple(_16562_i,_16570_err);
	}
	jule::Bool _17113_neg = false;
	if (_16522_s[0LL] == '+') {
		_16522_s=_16522_s.slice(1LL);
	} else if (_16522_s[0LL] == '-') {
		_17113_neg=true;
		_16522_s=_16522_s.slice(1LL);
	}
	jule::Uint _18013_un = 0LLU;
	std::tie(_18013_un,_16570_err) = _147e40080_parse_uint(_16522_s,_16530_base,_16545_bit_size);
	if ((_16570_err != 0LLU) && (_16570_err != 1LLU)) {
		_16562_i = 0LL;
		_16570_err = _16570_err;
		return std::make_tuple(_16562_i,_16570_err);
	}
	if (_16545_bit_size == 0LL) {
		_16545_bit_size=64LL;
	}
	jule::U64 _1909_cutoff = static_cast<jule::U64>(1LL << static_cast<jule::Uint>(_16545_bit_size - 1LL));
	if ((!(_17113_neg)) && (_18013_un >= _1909_cutoff)) {
		_16562_i = static_cast<jule::I64>(_1909_cutoff - 1LL);
		_16570_err = 1LLU;
		return std::make_tuple(_16562_i,_16570_err);
	}
	if (_17113_neg && (_18013_un > _1909_cutoff)) {
		_16562_i = static_cast<jule::I64>((-(static_cast<jule::I64>(_1909_cutoff))));
		_16570_err = 1LLU;
		return std::make_tuple(_16562_i,_16570_err);
	}
	jule::I64 _19713_n = static_cast<jule::I64>(_18013_un);
	if (_17113_neg) {
		_19713_n=static_cast<jule::I64>((-(_19713_n)));
	}
	_16562_i = _19713_n;
	_16570_err = 0LLU;
	return std::make_tuple(_16562_i,_16570_err);
}



inline std::tuple<jule::F64,jule::Bool> _147e81490_eisel_lemire64(jule::U64 _4123_man,jule::Int _4133_exp10,jule::Bool _4145_neg) {
	jule::Bool _4166_ok = jule::Bool();
	jule::F64 _4158_f = jule::F64();
	if (_4123_man == 0LL) {
		if (_4145_neg) {
			_4158_f=static_cast<jule::F64>(_1501bd670_f64_from_bits(9223372036854775808LLU));
		}
		_4158_f = _4158_f;
		_4166_ok = true;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	if ((_4133_exp10 < -348LL) || (347LL < _4133_exp10)) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	jule::Int _579_clz = _150714f70_leading_zeros64(_4123_man);
	_4123_man<<=static_cast<jule::Uint>(_579_clz);
	
	jule::U64 _6013_ret_exp2 = static_cast<jule::U64>((((217706LL * _4133_exp10) >> 16LL) + 64LL) + 1023LL) - static_cast<jule::U64>(_579_clz);
	jule::U64 _6314_x_hi;
	jule::U64 _6324_x_lo;
	std::tie(_6314_x_hi,_6324_x_lo) = _150714f70_mul64(_4123_man,_147e81490_DETAILED_POWS_OF_TEN[static_cast<jule::Int>(_4133_exp10 - -348LL)][1LL]);
	if (((_6314_x_hi & 511LL) == 511LL) && ((_6324_x_lo + _4123_man) < _4123_man)) {
		jule::U64 _6714_y_hi;
		jule::U64 _6720_y_lo;
		std::tie(_6714_y_hi,_6720_y_lo) = _150714f70_mul64(_4123_man,_147e81490_DETAILED_POWS_OF_TEN[static_cast<jule::Int>(_4133_exp10 - -348LL)][0LL]);
		jule::U64 _6818_merged_hi = _6314_x_hi;
		jule::U64 _6829_merged_lo = _6324_x_lo + _6714_y_hi;
		std::tie(_6818_merged_hi,_6829_merged_lo) = std::make_tuple(_6314_x_hi,_6324_x_lo + _6714_y_hi);
		if (_6829_merged_lo < _6324_x_lo) {
			(_6818_merged_hi)++;
		}
		if ((((_6818_merged_hi & 511LL) == 511LL) && ((_6829_merged_lo + 1LL) == 0LL)) && ((_6720_y_lo + _4123_man) < _4123_man)) {
			_4158_f = 0LL;
			_4166_ok = false;
			return std::make_tuple(_4158_f,_4166_ok);
		}
		std::tie(_6314_x_hi,_6324_x_lo) = std::make_tuple(_6818_merged_hi,_6829_merged_lo);
	}
	jule::U64 _799_msb = _6314_x_hi >> 63LL;
	jule::U64 _8013_ret_mantissa = _6314_x_hi >> (_799_msb + 9LL);
	_6013_ret_exp2-=static_cast<jule::U64>(1LL ^ _799_msb);
	if (((_6324_x_lo == 0LL) && ((_6314_x_hi & 511LL) == 0LL)) && ((_8013_ret_mantissa & 3LL) == 1LL)) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	_8013_ret_mantissa+=static_cast<jule::U64>(_8013_ret_mantissa & 1LL);
	_8013_ret_mantissa>>=1LL;
	if ((_8013_ret_mantissa >> 53LL) > 0LL) {
		_8013_ret_mantissa>>=1LL;
		_6013_ret_exp2+=1LL;
	}
	if ((_6013_ret_exp2 - 1LL) >= 2046LL) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	jule::U64 _10313_ret_bits = (_6013_ret_exp2 << 52LL) | (_8013_ret_mantissa & 4503599627370495LL);
	if (_4145_neg) {
		_10313_ret_bits|=9223372036854775808LLU;
	}
	_4158_f = static_cast<jule::F64>(_1501bd670_f64_from_bits(_10313_ret_bits));
	_4166_ok = true;
	return std::make_tuple(_4158_f,_4166_ok);
}



inline std::tuple<jule::F32,jule::Bool> _147e81490_eisel_lemire32(jule::U64 _11023_man,jule::Int _11033_exp10,jule::Bool _11045_neg) {
	jule::Bool _11066_ok = jule::Bool();
	jule::F32 _11058_f = jule::F32();
	if (_11023_man == 0LL) {
		if (_11045_neg) {
			_11058_f=static_cast<jule::F32>(_1501bd670_f32_from_bits(2147483648LLU));
		}
		_11058_f = _11058_f;
		_11066_ok = true;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	if ((_11033_exp10 < -348LL) || (347LL < _11033_exp10)) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	jule::Int _1329_clz = _150714f70_leading_zeros64(_11023_man);
	_11023_man<<=static_cast<jule::Uint>(_1329_clz);
	
	jule::U64 _13513_ret_exp2 = static_cast<jule::U64>((((217706LL * _11033_exp10) >> 16LL) + 64LL) + 127LL) - static_cast<jule::U64>(_1329_clz);
	jule::U64 _13814_x_hi;
	jule::U64 _13824_x_lo;
	std::tie(_13814_x_hi,_13824_x_lo) = _150714f70_mul64(_11023_man,_147e81490_DETAILED_POWS_OF_TEN[static_cast<jule::Int>(_11033_exp10 - -348LL)][1LL]);
	if (((_13814_x_hi & 274877906943LL) == 274877906943LL) && ((_13824_x_lo + _11023_man) < _11023_man)) {
		jule::U64 _14214_y_hi;
		jule::U64 _14220_y_lo;
		std::tie(_14214_y_hi,_14220_y_lo) = _150714f70_mul64(_11023_man,_147e81490_DETAILED_POWS_OF_TEN[static_cast<jule::Int>(_11033_exp10 - -348LL)][0LL]);
		jule::U64 _14318_merged_hi = _13814_x_hi;
		jule::U64 _14329_merged_lo = _13824_x_lo + _14214_y_hi;
		std::tie(_14318_merged_hi,_14329_merged_lo) = std::make_tuple(_13814_x_hi,_13824_x_lo + _14214_y_hi);
		if (_14329_merged_lo < _13824_x_lo) {
			(_14318_merged_hi)++;
		}
		if ((((_14318_merged_hi & 274877906943LL) == 274877906943LL) && ((_14329_merged_lo + 1LL) == 0LL)) && ((_14220_y_lo + _11023_man) < _11023_man)) {
			_11058_f = 0LL;
			_11066_ok = false;
			return std::make_tuple(_11058_f,_11066_ok);
		}
		std::tie(_13814_x_hi,_13824_x_lo) = std::make_tuple(_14318_merged_hi,_14329_merged_lo);
	}
	jule::U64 _1549_msb = _13814_x_hi >> 63LL;
	jule::U64 _15513_ret_mantissa = _13814_x_hi >> (_1549_msb + 38LL);
	_13513_ret_exp2-=static_cast<jule::U64>(1LL ^ _1549_msb);
	if (((_13824_x_lo == 0LL) && ((_13814_x_hi & 274877906943LL) == 0LL)) && ((_15513_ret_mantissa & 3LL) == 1LL)) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	_15513_ret_mantissa+=static_cast<jule::U64>(_15513_ret_mantissa & 1LL);
	_15513_ret_mantissa>>=1LL;
	if ((_15513_ret_mantissa >> 24LL) > 0LL) {
		_15513_ret_mantissa>>=1LL;
		_13513_ret_exp2+=1LL;
	}
	if ((_13513_ret_exp2 - 1LL) >= 254LL) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	jule::U64 _17813_ret_bits = (_13513_ret_exp2 << 23LL) | (_15513_ret_mantissa & 8388607LL);
	if (_11045_neg) {
		_17813_ret_bits|=2147483648LL;
	}
	_11058_f = static_cast<jule::F32>(_1501bd670_f32_from_bits(static_cast<jule::U32>(_17813_ret_bits)));
	_11066_ok = true;
	return std::make_tuple(_11058_f,_11066_ok);
}



inline jule::Int _147fb9200_common_prefix_len_ignore_case(jule::Str _4534_s,jule::Str _4542_prefix) {
	jule::I64 _4613_n = _4542_prefix.len();
	if (_4613_n > _4534_s.len()) {
		_4613_n=static_cast<jule::I64>(_4534_s.len());
	}
	jule::Int _5013_i = 0LL;
	_iter_begin_5671531680:;
	if (!(_5013_i < _4613_n)) { goto _iter_end_5671531680; }
	{
		jule::U8 _5217_c = _4534_s[static_cast<jule::Int>(_5013_i)];
		if (('A' <= _5217_c) && (_5217_c <= 'Z')) {
			_5217_c+=32LL;
		}
		if (_5217_c != _4542_prefix[static_cast<jule::Int>(_5013_i)]) {
			return _5013_i;
		}
	}
	_iter_next_5671531680:;
	(_5013_i)++;
	goto _iter_begin_5671531680;
	_iter_end_5671531680:;
	return _4613_n;
}



inline std::tuple<jule::F64,jule::Int,jule::Bool> _147fb9200_special(jule::Str _6816_s) {
	jule::Bool _6842_ok = jule::Bool();
	jule::Int _6834_n = jule::Int();
	jule::F64 _6826_f = jule::F64();
	if (_6816_s == jule::Str("", 0)) {
		_6826_f = 0LL;
		_6834_n = 0LL;
		_6842_ok = false;
		return std::make_tuple(_6826_f,_6834_n,_6842_ok);
	}
	jule::Int _7213_sign = 1LL;
	jule::Int _7313_nsign = 0LL;
	{
		auto _match_expr{ _6816_s[0LL] };
		if (!(('+') == _match_expr || ('-') == _match_expr)) { goto _case_end_5671543760; }
		_case_begin_5671543760:;
		{
			if (_6816_s[0LL] == '-') {
				_7213_sign=-1LL;
			}
			_7313_nsign=1LL;
			_6816_s=_6816_s.slice(1LL);
			goto _case_begin_5671544416;
		}
		goto _match_end_5671542656;
		_case_end_5671543760:;
		if (!(('i') == _match_expr || ('I') == _match_expr)) { goto _case_end_5671544416; }
		_case_begin_5671544416:;
		{
			jule::Int _8317_case_n = _147fb9200_common_prefix_len_ignore_case(_6816_s,jule::Str("infinity", 8));
			if ((3LL < _8317_case_n) && (_8317_case_n < 8LL)) {
				_8317_case_n=3LL;
			}
			if ((_8317_case_n == 3LL) || (_8317_case_n == 8LL)) {
				_6826_f = static_cast<jule::F64>(_15022f040_inf(_7213_sign));
				_6834_n = static_cast<jule::Int>(_7313_nsign + _6834_n);
				_6842_ok = true;
				return std::make_tuple(_6826_f,_6834_n,_6842_ok);
			}
		}
		goto _match_end_5671542656;
		_case_end_5671544416:;
		if (!(('n') == _match_expr || ('N') == _match_expr)) { goto _case_end_5671544528; }
		_case_begin_5671544528:;
		{
			if (_147fb9200_common_prefix_len_ignore_case(_6816_s,jule::Str("nan", 3)) == 3LL) {
				_6826_f = static_cast<jule::F64>(_15022f040_nan());
				_6834_n = 3LL;
				_6842_ok = true;
				return std::make_tuple(_6826_f,_6834_n,_6842_ok);
			}
		}
		goto _match_end_5671542656;
		_case_end_5671544528:;
		_match_end_5671542656:;
	}
	_6826_f = 0LL;
	_6834_n = 0LL;
	_6842_ok = false;
	return std::make_tuple(_6826_f,_6834_n,_6842_ok);
}



inline std::tuple<jule::U64,jule::Int,jule::Bool,jule::Bool,jule::Bool,jule::Int,jule::Bool> _147fb9200_read_float(jule::Str _10315_s) {
	jule::Bool _10457_ok = jule::Bool();
	jule::Int _10449_i = jule::Int();
	jule::Bool _10438_hex = jule::Bool();
	jule::Bool _10425_trunc = jule::Bool();
	jule::Bool _10350_neg = jule::Bool();
	jule::Int _10340_exp = jule::Int();
	jule::U64 _10325_mantissa = jule::U64();
	if (_10449_i >= _10315_s.len()) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
	}
	{
		if (!((_10315_s[static_cast<jule::Int>(_10449_i)] == '+'))) { goto _case_end_5671561248; }
		_case_begin_5671561248:;
		{
			(_10449_i)++;
		}
		goto _match_end_5671561616;
		_case_end_5671561248:;
		if (!((_10315_s[static_cast<jule::Int>(_10449_i)] == '-'))) { goto _case_end_5671561360; }
		_case_begin_5671561360:;
		{
			_10350_neg=true;
			(_10449_i)++;
		}
		goto _match_end_5671561616;
		_case_end_5671561360:;
		_match_end_5671561616:;
	}
	jule::U64 _11813_base = 10LLU;
	jule::Int _11913_max_mant_digits = 19LL;
	jule::U8 _12013_exp_char = 'e';
	if ((((_10449_i + 2LL) < _10315_s.len()) && (_10315_s[static_cast<jule::Int>(_10449_i)] == '0')) && (_147e40080_lower(_10315_s[static_cast<jule::Int>(_10449_i + 1LL)]) == 'x')) {
		_11813_base=16LL;
		_11913_max_mant_digits=16LL;
		_10449_i+=2LL;
		_12013_exp_char='p';
		_10438_hex=true;
	}
	jule::Bool _12813_sawdot = false;
	jule::Bool _12913_sawdigits = false;
	jule::Int _13013_nd = 0LL;
	jule::Int _13113_nd_mant = 0LL;
	jule::Int _13213_dp = 0LL;
	_iter_begin_5671576480:;
	if (!(_10449_i < _10315_s.len())) { goto _iter_end_5671576480; }
	{
		jule::U8 _13413_c = _10315_s[static_cast<jule::Int>(_10449_i)];
		{
			if (!((_13413_c == '.'))) { goto _case_end_5671580384; }
			_case_begin_5671580384:;
			{
				if (_12813_sawdot) {
					goto _julec_label_loop_end;
				}
				_12813_sawdot=true;
				_13213_dp=_13013_nd;
				goto _iter_next_5671576480;
			}
			goto _match_end_5671579536;
			_case_end_5671580384:;
			if (!((('0' <= _13413_c) && (_13413_c <= '9')))) { goto _case_end_5671580496; }
			_case_begin_5671580496:;
			{
				_12913_sawdigits=true;
				if ((_13413_c == '0') && (_13013_nd == 0LL)) {
					(_13213_dp)--;
					goto _iter_next_5671576480;
				}
				(_13013_nd)++;
				if (_13113_nd_mant < _11913_max_mant_digits) {
					_10325_mantissa*=_11813_base;
					_10325_mantissa+=static_cast<jule::U64>(_13413_c - '0');
					(_13113_nd_mant)++;
				} else if (_13413_c != '0') {
					_10425_trunc=true;
				}
				goto _iter_next_5671576480;
			}
			goto _match_end_5671579536;
			_case_end_5671580496:;
			if (!((((_11813_base == 16LL) && ('a' <= _147e40080_lower(_13413_c))) && (_147e40080_lower(_13413_c) <= 'f')))) { goto _case_end_5671580608; }
			_case_begin_5671580608:;
			{
				_12913_sawdigits=true;
				(_13013_nd)++;
				if (_13113_nd_mant < _11913_max_mant_digits) {
					_10325_mantissa*=16LL;
					_10325_mantissa+=static_cast<jule::U64>((_147e40080_lower(_13413_c) - 'a') + 10LL);
					(_13113_nd_mant)++;
				} else {
					_10425_trunc=true;
				}
				goto _iter_next_5671576480;
			}
			goto _match_end_5671579536;
			_case_end_5671580608:;
			_match_end_5671579536:;
		}
		goto _iter_end_5671576480;
	}
	_iter_next_5671576480:;
	(_10449_i)++;
	goto _iter_begin_5671576480;
	_iter_end_5671576480:;
	_julec_label_loop_end:;
	if ((!(_12913_sawdigits))) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
	}
	if ((!(_12813_sawdot))) {
		_13213_dp=_13013_nd;
	}
	if (_11813_base == 16LL) {
		_13213_dp*=4LL;
		_13113_nd_mant*=4LL;
	}
	if ((_10449_i < _10315_s.len()) && (_147e40080_lower(_10315_s[static_cast<jule::Int>(_10449_i)]) == _12013_exp_char)) {
		(_10449_i)++;
		if (_10449_i >= _10315_s.len()) {
			return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
		}
		jule::Int _19517_esign = 1LL;
		if (_10315_s[static_cast<jule::Int>(_10449_i)] == '+') {
			(_10449_i)++;
		} else if (_10315_s[static_cast<jule::Int>(_10449_i)] == '-') {
			(_10449_i)++;
			_19517_esign=-1LL;
		}
		if (((_10449_i >= _10315_s.len()) || (_10315_s[static_cast<jule::Int>(_10449_i)] < '0')) || (_10315_s[static_cast<jule::Int>(_10449_i)] > '9')) {
			return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
		}
		jule::Int _20517_e = 0LL;
		_iter_begin_5671604384:;
		if (!((_10449_i < _10315_s.len()) && (('0' <= _10315_s[static_cast<jule::Int>(_10449_i)]) && (_10315_s[static_cast<jule::Int>(_10449_i)] <= '9')))) { goto _iter_end_5671604384; }
		{
			if (_20517_e < 10000LL) {
				_20517_e=static_cast<jule::Int>(((_20517_e * 10LL) + static_cast<jule::Int>(_10315_s[static_cast<jule::Int>(_10449_i)])) - '0');
			}
		}
		_iter_next_5671604384:;
		(_10449_i)++;
		goto _iter_begin_5671604384;
		_iter_end_5671604384:;
		_13213_dp+=static_cast<jule::Int>(_20517_e * _19517_esign);
	} else if (_11813_base == 16LL) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
	}
	if (_10325_mantissa != 0LL) {
		_10340_exp=static_cast<jule::Int>(_13213_dp - _13113_nd_mant);
	}
	_10457_ok=true;
	return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
}



inline std::tuple<jule::F64,jule::Bool> _147fb9200_atof64_exact(jule::U64 _43317_mantissa,jule::Int _43336_exp,jule::Bool _43346_neg) {
	jule::Bool _43367_ok = jule::Bool();
	jule::F64 _43359_f = jule::F64();
	if ((_43317_mantissa >> _147e3cfb0_F64_INFO._field_mantbits) != 0LL) {
		return std::make_tuple(_43359_f,_43367_ok);
	}
	_43359_f=static_cast<jule::F64>(_43317_mantissa);
	if (_43346_neg) {
		_43359_f=static_cast<jule::F64>((-(_43359_f)));
	}
	{
		if (!((_43336_exp == 0LL))) { goto _case_end_5671619696; }
		_case_begin_5671619696:;
		{
			_43359_f = _43359_f;
			_43367_ok = true;
			return std::make_tuple(_43359_f,_43367_ok);
		}
		goto _match_end_5671620640;
		_case_end_5671619696:;
		if (!(((_43336_exp > 0LL) && (_43336_exp <= 37LL)))) { goto _case_end_5671619808; }
		_case_begin_5671619808:;
		{
			if (_43336_exp > 22LL) {
				_43359_f*=_147fb9200_F64_POW10[static_cast<jule::Int>(_43336_exp - 22LL)];
				_43336_exp=22LL;
			}
			if ((_43359_f > 1000000000000000LL) || (_43359_f < -1000000000000000LL)) {
				return std::make_tuple(_43359_f,_43367_ok);
			}
			_43359_f = static_cast<jule::F64>(_43359_f * _147fb9200_F64_POW10[static_cast<jule::Int>(_43336_exp)]);
			_43367_ok = true;
			return std::make_tuple(_43359_f,_43367_ok);
		}
		goto _match_end_5671620640;
		_case_end_5671619808:;
		if (!(((_43336_exp < 0LL) && (_43336_exp >= -22LL)))) { goto _case_end_5671619920; }
		_case_begin_5671619920:;
		{
			_43359_f = static_cast<jule::F64>(jule::div(_43359_f,_147fb9200_F64_POW10[static_cast<jule::Int>((-(_43336_exp)))]));
			_43367_ok = true;
			return std::make_tuple(_43359_f,_43367_ok);
		}
		goto _match_end_5671620640;
		_case_end_5671619920:;
		_match_end_5671620640:;
	}
	return std::make_tuple(_43359_f,_43367_ok);
}



inline std::tuple<jule::F64,jule::Bool> _147fb9200_atof64exact(jule::U64 _47216_mantissa,jule::Int _47235_exp,jule::Bool _47245_neg) {
	jule::Bool _47266_ok = jule::Bool();
	jule::F64 _47258_f = jule::F64();
	if ((_47216_mantissa >> _147e3cfb0_F64_INFO._field_mantbits) != 0LL) {
		return std::make_tuple(_47258_f,_47266_ok);
	}
	_47258_f=static_cast<jule::F64>(_47216_mantissa);
	if (_47245_neg) {
		_47258_f=static_cast<jule::F64>((-(_47258_f)));
	}
	{
		if (!((_47235_exp == 0LL))) { goto _case_end_5671635648; }
		_case_begin_5671635648:;
		{
			_47258_f = _47258_f;
			_47266_ok = true;
			return std::make_tuple(_47258_f,_47266_ok);
		}
		goto _match_end_5671636688;
		_case_end_5671635648:;
		if (!(((_47235_exp > 0LL) && (_47235_exp <= 37LL)))) { goto _case_end_5671635760; }
		_case_begin_5671635760:;
		{
			if (_47235_exp > 22LL) {
				_47258_f*=_147fb9200_F64_POW10[static_cast<jule::Int>(_47235_exp - 22LL)];
				_47235_exp=22LL;
			}
			if ((_47258_f > 1000000000000000LL) || (_47258_f < -1000000000000000LL)) {
				return std::make_tuple(_47258_f,_47266_ok);
			}
			_47258_f = static_cast<jule::F64>(_47258_f * _147fb9200_F64_POW10[static_cast<jule::Int>(_47235_exp)]);
			_47266_ok = true;
			return std::make_tuple(_47258_f,_47266_ok);
		}
		goto _match_end_5671636688;
		_case_end_5671635760:;
		if (!(((_47235_exp < 0LL) && (_47235_exp >= -22LL)))) { goto _case_end_5671635872; }
		_case_begin_5671635872:;
		{
			_47258_f = static_cast<jule::F64>(jule::div(_47258_f,_147fb9200_F64_POW10[static_cast<jule::Int>((-(_47235_exp)))]));
			_47266_ok = true;
			return std::make_tuple(_47258_f,_47266_ok);
		}
		goto _match_end_5671636688;
		_case_end_5671635872:;
		_match_end_5671636688:;
	}
	return std::make_tuple(_47258_f,_47266_ok);
}



inline std::tuple<jule::F32,jule::Bool> _147fb9200_atof32exact(jule::U64 _50616_mantissa,jule::Int _50635_exp,jule::Bool _50649_neg) {
	jule::Bool _50670_ok = jule::Bool();
	jule::F32 _50662_f = jule::F32();
	if ((_50616_mantissa >> _147e3cfb0_F32_INFO._field_mantbits) != 0LL) {
		return std::make_tuple(_50662_f,_50670_ok);
	}
	_50662_f=static_cast<jule::F32>(_50616_mantissa);
	if (_50649_neg) {
		_50662_f=static_cast<jule::F32>((-(_50662_f)));
	}
	{
		if (!((_50635_exp == 0LL))) { goto _case_end_5671651792; }
		_case_begin_5671651792:;
		{
			_50662_f = _50662_f;
			_50670_ok = true;
			return std::make_tuple(_50662_f,_50670_ok);
		}
		goto _match_end_5671652736;
		_case_end_5671651792:;
		if (!(((_50635_exp > 0LL) && (_50635_exp <= 17LL)))) { goto _case_end_5671651904; }
		_case_begin_5671651904:;
		{
			if (_50635_exp > 10LL) {
				_50662_f*=_147fb9200_F32_POW10[static_cast<jule::Int>(_50635_exp - 10LL)];
				_50635_exp=10LL;
			}
			if ((_50662_f > 10000000LL) || (_50662_f < -10000000LL)) {
				return std::make_tuple(_50662_f,_50670_ok);
			}
			_50662_f = static_cast<jule::F32>(_50662_f * _147fb9200_F32_POW10[static_cast<jule::Int>(_50635_exp)]);
			_50670_ok = true;
			return std::make_tuple(_50662_f,_50670_ok);
		}
		goto _match_end_5671652736;
		_case_end_5671651904:;
		if (!(((_50635_exp < 0LL) && (_50635_exp >= -10LL)))) { goto _case_end_5671652016; }
		_case_begin_5671652016:;
		{
			_50662_f = static_cast<jule::F32>(jule::div(_50662_f,_147fb9200_F32_POW10[static_cast<jule::Int>((-(_50635_exp)))]));
			_50670_ok = true;
			return std::make_tuple(_50662_f,_50670_ok);
		}
		goto _match_end_5671652736;
		_case_end_5671652016:;
		_match_end_5671652736:;
	}
	return std::make_tuple(_50662_f,_50670_ok);
}



inline std::tuple<jule::F64,jule::Int> _147fb9200_atof_hex(jule::Str _54213_s,_147e3cfb0_FloatInfo& _54222_flt,jule::U64 _54242_mantissa,jule::Int _54261_exp,jule::Bool _54271_neg,jule::Bool _54282_trunc) {
	jule::Int _5439_max_exp = ((1LL << _54222_flt._field_expbits) + _54222_flt._field_bias) - 2LL;
	jule::Int _5449_min_exp = _54222_flt._field_bias + 1LL;
	_54261_exp+=static_cast<jule::Int>(_54222_flt._field_mantbits);
	_iter_begin_5671669744:;
	if (!((_54242_mantissa != 0LL) && ((_54242_mantissa >> (_54222_flt._field_mantbits + 2LL)) == 0LL))) { goto _iter_end_5671669744; }
	{
		_54242_mantissa<<=1LL;
		(_54261_exp)--;
	}
	_iter_next_5671669744:;
	goto _iter_begin_5671669744;
	_iter_end_5671669744:;
	if (_54282_trunc) {
		_54242_mantissa|=1LL;
	}
	_iter_begin_5671671296:;
	if (!((_54242_mantissa >> ((1LL + _54222_flt._field_mantbits) + 2LL)) != 0LL)) { goto _iter_end_5671671296; }
	{
		_54242_mantissa=static_cast<jule::U64>((_54242_mantissa >> 1LL) | (_54242_mantissa & 1LL));
		(_54261_exp)++;
	}
	_iter_next_5671671296:;
	goto _iter_begin_5671671296;
	_iter_end_5671671296:;
	_iter_begin_5671673696:;
	if (!((_54242_mantissa > 1LL) && (_54261_exp < (_5449_min_exp - 2LL)))) { goto _iter_end_5671673696; }
	{
		_54242_mantissa=static_cast<jule::U64>((_54242_mantissa >> 1LL) | (_54242_mantissa & 1LL));
		(_54261_exp)++;
	}
	_iter_next_5671673696:;
	goto _iter_begin_5671673696;
	_iter_end_5671673696:;
	jule::U64 _57413_round = _54242_mantissa & 3LL;
	_54242_mantissa>>=2LL;
	_57413_round|=static_cast<jule::U64>(_54242_mantissa & 1LL);
	_54261_exp+=2LL;
	if (_57413_round == 3LL) {
		(_54242_mantissa)++;
		if (_54242_mantissa == (1LL << (1LL + _54222_flt._field_mantbits))) {
			_54242_mantissa>>=1LL;
			(_54261_exp)++;
		}
	}
	if ((_54242_mantissa >> _54222_flt._field_mantbits) == 0LL) {
		_54261_exp=_54222_flt._field_bias;
	}
	jule::Int _58913_err = 0LLU;
	if (_54261_exp > _5439_max_exp) {
		_54242_mantissa=static_cast<jule::U64>(1LL << _54222_flt._field_mantbits);
		_54261_exp=static_cast<jule::Int>(_5439_max_exp + 1LL);
		_58913_err=1LLU;
	}
	jule::U64 _59613_bits = _54242_mantissa & ((1LL << _54222_flt._field_mantbits) - 1LL);
	_59613_bits|=static_cast<jule::U64>(static_cast<jule::U64>((_54261_exp - _54222_flt._field_bias) & ((1LL << _54222_flt._field_expbits) - 1LL)) << _54222_flt._field_mantbits);
	if (_54271_neg) {
		_59613_bits|=static_cast<jule::Int>((1LL << _54222_flt._field_mantbits) << _54222_flt._field_expbits);
	}
	if (_54222_flt == _147e3cfb0_F32_INFO) {
		return std::make_tuple(static_cast<jule::F64>(_1501bd670_f32_from_bits(static_cast<jule::U32>(_59613_bits))),_58913_err);
	}
	return std::make_tuple(static_cast<jule::F64>(_1501bd670_f64_from_bits(_59613_bits)),_58913_err);
}



inline std::tuple<jule::F32,jule::Int,jule::Int> _147fb9200_atof32(jule::Str _60711_s) {
	jule::Int _60745_err = 0LLU;
	jule::Int _60733_n = jule::Int();
	jule::F32 _60721_f = jule::F32();
	{
		jule::F64 _60914_val;
		jule::Int _60919__n;
		jule::Bool _60923_ok;
		std::tie(_60914_val,_60919__n,_60923_ok) = _147fb9200_special(_60711_s);
		if (_60923_ok) {
			_60721_f = static_cast<jule::F32>(_60914_val);
			_60733_n = _60919__n;
			_60745_err = 0LLU;
			return std::make_tuple(_60721_f,_60733_n,_60745_err);
		}
	}
	jule::U64 _61510_mantissa;
	jule::Int _61520_exp;
	jule::Bool _61525_neg;
	jule::Bool _61530_trunc;
	jule::Bool _61537_hex;
	jule::Int _61542__n;
	jule::Bool _61550_ok;
	std::tie(_61510_mantissa,_61520_exp,_61525_neg,_61530_trunc,_61537_hex,_61542__n,_61550_ok) = _147fb9200_read_float(_60711_s);
	_60733_n=_61542__n;
	if ((!(_61550_ok))) {
		_60721_f = 0LL;
		_60733_n = _60733_n;
		_60745_err = 2LLU;
		return std::make_tuple(_60721_f,_60733_n,_60745_err);
	}
	if (_61537_hex) {
		jule::F64 _62217_ff = 0LL;
		std::tie(_62217_ff,_60745_err) = _147fb9200_atof_hex(_60711_s.slice(0LL,static_cast<jule::Int>(_60733_n)),_147e3cfb0_F32_INFO,_61510_mantissa,_61520_exp,_61525_neg,_61530_trunc);
		_60721_f = static_cast<jule::F32>(_62217_ff);
		_60733_n = _60733_n;
		_60745_err = _60745_err;
		return std::make_tuple(_60721_f,_60733_n,_60745_err);
	}
	if (true) {
		if ((!(_61530_trunc))) {
			std::tie(_60721_f,_61550_ok) = _147fb9200_atof32exact(_61510_mantissa,_61520_exp,_61525_neg);
			if (_61550_ok) {
				_60721_f = _60721_f;
				_60733_n = _60733_n;
				_60745_err = 0LLU;
				return std::make_tuple(_60721_f,_60733_n,_60745_err);
			}
		}
		std::tie(_60721_f,_61550_ok) = _147e81490_eisel_lemire32(_61510_mantissa,_61520_exp,_61525_neg);
		if (_61550_ok) {
			if ((!(_61530_trunc))) {
				_60721_f = _60721_f;
				_60733_n = _60733_n;
				_60745_err = 0LLU;
				return std::make_tuple(_60721_f,_60733_n,_60745_err);
			}
			jule::F32 _64421_f_up = 0LL;
			std::tie(_64421_f_up,_61550_ok) = _147e81490_eisel_lemire32(static_cast<jule::U64>(_61510_mantissa + 1LL),_61520_exp,_61525_neg);
			if (_61550_ok && (_60721_f == _64421_f_up)) {
				_60721_f = _60721_f;
				_60733_n = _60733_n;
				_60745_err = 0LLU;
				return std::make_tuple(_60721_f,_60733_n,_60745_err);
			}
		}
	}
	_150025080_Decimal _65313_d = _150025080_Decimal();
	if ((!(_65313_d._method_set(_60711_s.slice(0LL,static_cast<jule::Int>(_60733_n)))))) {
		_60721_f = 0LL;
		_60733_n = _60733_n;
		_60745_err = 2LLU;
		return std::make_tuple(_60721_f,_60733_n,_60745_err);
	}
	jule::U64 _65710_b;
	jule::Bool _65713_ovf;
	std::tie(_65710_b,_65713_ovf) = _65313_d._method_float_bits(_147e3cfb0_F32_INFO);
	_60721_f=static_cast<jule::F32>(_1501bd670_f32_from_bits(static_cast<jule::U32>(_65710_b)));
	if (_65713_ovf) {
		_60745_err=1LLU;
	}
	_60721_f = _60721_f;
	_60733_n = _60733_n;
	_60745_err = _60745_err;
	return std::make_tuple(_60721_f,_60733_n,_60745_err);
}



inline std::tuple<jule::F64,jule::Int,jule::Int> _147fb9200_atof64(jule::Str _66511_s) {
	jule::Int _66545_err = 0LLU;
	jule::Int _66537_n = jule::Int();
	jule::F64 _66525_f = jule::F64();
	{
		jule::F64 _66714_val;
		jule::Int _66719__n;
		jule::Bool _66723_ok;
		std::tie(_66714_val,_66719__n,_66723_ok) = _147fb9200_special(_66511_s);
		if (_66723_ok) {
			_66525_f = _66714_val;
			_66537_n = _66719__n;
			_66545_err = 0LLU;
			return std::make_tuple(_66525_f,_66537_n,_66545_err);
		}
	}
	jule::U64 _67310_mantissa;
	jule::Int _67320_exp;
	jule::Bool _67325_neg;
	jule::Bool _67330_trunc;
	jule::Bool _67337_hex;
	jule::Int _67342__n;
	jule::Bool _67350_ok;
	std::tie(_67310_mantissa,_67320_exp,_67325_neg,_67330_trunc,_67337_hex,_67342__n,_67350_ok) = _147fb9200_read_float(_66511_s);
	_66537_n=_67342__n;
	if ((!(_67350_ok))) {
		_66525_f = 0LL;
		_66537_n = _66537_n;
		_66545_err = 2LLU;
		return std::make_tuple(_66525_f,_66537_n,_66545_err);
	}
	if (_67337_hex) {
		std::tie(_66525_f,_66545_err) = _147fb9200_atof_hex(_66511_s.slice(0LL,static_cast<jule::Int>(_66537_n)),_147e3cfb0_F64_INFO,_67310_mantissa,_67320_exp,_67325_neg,_67330_trunc);
		_66525_f = _66525_f;
		_66537_n = _66537_n;
		_66545_err = _66545_err;
		return std::make_tuple(_66525_f,_66537_n,_66545_err);
	}
	if (true) {
		if ((!(_67330_trunc))) {
			std::tie(_66525_f,_67350_ok) = _147fb9200_atof64exact(_67310_mantissa,_67320_exp,_67325_neg);
			if (_67350_ok) {
				_66525_f = _66525_f;
				_66537_n = _66537_n;
				_66545_err = 0LLU;
				return std::make_tuple(_66525_f,_66537_n,_66545_err);
			}
		}
		std::tie(_66525_f,_67350_ok) = _147e81490_eisel_lemire64(_67310_mantissa,_67320_exp,_67325_neg);
		if (_67350_ok) {
			if ((!(_67330_trunc))) {
				_66525_f = _66525_f;
				_66537_n = _66537_n;
				_66545_err = 0LLU;
				return std::make_tuple(_66525_f,_66537_n,_66545_err);
			}
			jule::F64 _70121_f_up = 0LL;
			std::tie(_70121_f_up,_67350_ok) = _147e81490_eisel_lemire64(static_cast<jule::U64>(_67310_mantissa + 1LL),_67320_exp,_67325_neg);
			if (_67350_ok && (_66525_f == _70121_f_up)) {
				_66525_f = _66525_f;
				_66537_n = _66537_n;
				_66545_err = 0LLU;
				return std::make_tuple(_66525_f,_66537_n,_66545_err);
			}
		}
	}
	_150025080_Decimal _71013_d = _150025080_Decimal();
	if ((!(_71013_d._method_set(_66511_s.slice(0LL,static_cast<jule::Int>(_66537_n)))))) {
		_66525_f = 0LL;
		_66537_n = _66537_n;
		_66545_err = 2LLU;
		return std::make_tuple(_66525_f,_66537_n,_66545_err);
	}
	jule::U64 _71410_b;
	jule::Bool _71413_ovf;
	std::tie(_71410_b,_71413_ovf) = _71013_d._method_float_bits(_147e3cfb0_F64_INFO);
	_66525_f=static_cast<jule::F64>(_1501bd670_f64_from_bits(_71410_b));
	if (_71413_ovf) {
		_66545_err=1LLU;
	}
	_66525_f = _66525_f;
	_66537_n = _66537_n;
	_66545_err = _66545_err;
	return std::make_tuple(_66525_f,_66537_n,_66545_err);
}



inline std::tuple<jule::F64,jule::Int,jule::Int> _147fb9200_parse_float_prefix(jule::Str _72223_s,jule::Int _72231_bit_size) {
	if (_72231_bit_size == 32LL) {
		jule::F32 _72414_f;
		jule::Int _72417_n;
		jule::Int _72420_err;
		std::tie(_72414_f,_72417_n,_72420_err) = _147fb9200_atof32(_72223_s);
		return std::make_tuple(static_cast<jule::F64>(_72414_f),_72417_n,_72420_err);
	}
	jule::F64 _72810_f;
	jule::Int _72813_n;
	jule::Int _72816_err;
	std::tie(_72810_f,_72813_n,_72816_err) = _147fb9200_atof64(_72223_s);
	return std::make_tuple(_72810_f,_72813_n,_72816_err);
}



inline std::tuple<jule::F64,jule::Int> _147fb9200_parse_float(jule::Str _75620_s,jule::Int _75628_bit_size) {
	jule::F64 _75710_f;
	jule::Int _75713_n;
	jule::Int _75716_err;
	std::tie(_75710_f,_75713_n,_75716_err) = _147fb9200_parse_float_prefix(_75620_s,_75628_bit_size);
	if ((_75713_n != _75620_s.len()) && ((_75716_err == 0LLU) || (_75716_err != 2LLU))) {
		return std::make_tuple(0LL,2LLU);
	}
	return std::make_tuple(_75710_f,_75716_err);
}



inline void _147ebfca0_ryu_ftoa_fixed32(_147e3cfb0_DecimalSlice& _4926_d,jule::U32 _4947_mant,jule::Int _4958_exp,jule::Int _4968_prec) {
	if (_4968_prec < 0LL) {
		jule::panic(jule::Str("ryu_ftoa_fixed32 called with negative prec", 42));
	}
	if (_4968_prec > 9LL) {
		jule::panic(jule::Str("ryu_ftoa_fixed32 called with prec > 9", 37));
	}
	if (_4947_mant == 0LL) {
		std::tie(_4926_d._field_nd,_4926_d._field_dp) = std::make_tuple(0LL,0LL);
		return;
	}
	jule::Int _6213_e2 = _4958_exp;
	jule::Int _639_b = _150714f70_len32(_4947_mant);
	if (_639_b < 25LL) {
		_4947_mant<<=static_cast<jule::Uint>(25LL - _639_b);
		_6213_e2+=static_cast<jule::Int>(static_cast<jule::Int>(_639_b) - 25LL);
	}
	jule::Int _749_q = ((-(_147ebfca0_mul_by_log2_log10(static_cast<jule::Int>(_6213_e2 + 24LL)))) + _4968_prec) - 1LL;
	jule::Bool _7913_exact = (_749_q <= 27LL) && (_749_q >= 0LL);
	jule::U32 _8114_di;
	jule::Int _8118_dexp2;
	jule::Bool _8129_d0;
	std::tie(_8114_di,_8118_dexp2,_8129_d0) = _147ebfca0_mult64bit_pow10(_4947_mant,_6213_e2,_749_q);
	if (_8118_dexp2 >= 0LL) {
		jule::panic(jule::Str("not enough significant bits after mult64bit_pow10", 49));
	}
	if (((_749_q < 0LL) && (_749_q >= -10LL)) && _147ebfca0_divisible_by_pow5(static_cast<jule::U64>(_4947_mant),static_cast<jule::Int>((-(_749_q))))) {
		_7913_exact=true;
		_8129_d0=true;
	}
	jule::Uint _949_extra = static_cast<jule::Uint>((-(_8118_dexp2)));
	jule::U32 _959_extra_mask = static_cast<jule::U32>((1LL << _949_extra) - 1LL);
	jule::U32 _9713_dfrac = 0LLU;
	std::tie(_8114_di,_9713_dfrac) = std::make_tuple(static_cast<jule::U32>(_8114_di >> _949_extra),static_cast<jule::U32>(_8114_di & _959_extra_mask));
	jule::Bool _9913_round_up = false;
	if (_7913_exact) {
		_9913_round_up=((_9713_dfrac > (1LL << (_949_extra - 1LL))) || ((_9713_dfrac == (1LL << (_949_extra - 1LL))) && (!(_8129_d0)))) || (((_9713_dfrac == (1LL << (_949_extra - 1LL))) && _8129_d0) && ((_8114_di & 1LL) == 1LL));
	} else {
		_9913_round_up=(_9713_dfrac >> (_949_extra - 1LL)) == 1LL;
	}
	if (_9713_dfrac != 0LL) {
		_8129_d0=false;
	}
	_147ebfca0_format_decimal(_4926_d,static_cast<jule::U64>(_8114_di),(!(_8129_d0)),_9913_round_up,_4968_prec);
	_4926_d._field_dp-=_749_q;
}



inline void _147ebfca0_ryu_ftoa_fixed64(_147e3cfb0_DecimalSlice& _12326_d,jule::U64 _12347_mant,jule::Int _12358_exp,jule::Int _12368_prec) {
	if (_12368_prec > 18LL) {
		jule::panic(jule::Str("ryu_ftoa_fixed64 called with prec > 18", 38));
	}
	if (_12347_mant == 0LL) {
		std::tie(_12326_d._field_nd,_12326_d._field_dp) = std::make_tuple(0LL,0LL);
		return;
	}
	jule::Int _13313_e2 = _12358_exp;
	jule::Int _1349_b = _150714f70_len64(_12347_mant);
	if (_1349_b < 55LL) {
		_12347_mant=static_cast<jule::U64>(_12347_mant << static_cast<jule::Uint>(55LL - _1349_b));
		_13313_e2+=static_cast<jule::Int>(static_cast<jule::Int>(_1349_b) - 55LL);
	}
	jule::Int _1489_q = ((-(_147ebfca0_mul_by_log2_log10(static_cast<jule::Int>(_13313_e2 + 54LL)))) + _12368_prec) - 1LL;
	jule::Bool _15313_exact = (_1489_q <= 55LL) && (_1489_q >= 0LL);
	jule::U64 _15514_di;
	jule::Int _15518_dexp2;
	jule::Bool _15529_d0;
	std::tie(_15514_di,_15518_dexp2,_15529_d0) = _147ebfca0_mult128bit_pow10(_12347_mant,_13313_e2,_1489_q);
	if (_15518_dexp2 >= 0LL) {
		jule::panic(jule::Str("not enough significant bits after mult128bit_pow10", 50));
	}
	if (((_1489_q < 0LL) && (_1489_q >= -22LL)) && _147ebfca0_divisible_by_pow5(_12347_mant,static_cast<jule::Int>((-(_1489_q))))) {
		_15313_exact=true;
		_15529_d0=true;
	}
	jule::Uint _1689_extra = static_cast<jule::Uint>((-(_15518_dexp2)));
	jule::U64 _1699_extra_mask = static_cast<jule::U64>((1LL << _1689_extra) - 1LL);
	jule::U64 _17113_dfrac = 0LLU;
	std::tie(_15514_di,_17113_dfrac) = std::make_tuple(static_cast<jule::U64>(_15514_di >> _1689_extra),static_cast<jule::U64>(_15514_di & _1699_extra_mask));
	jule::Bool _17313_round_up = false;
	if (_15313_exact) {
		_17313_round_up=((_17113_dfrac > (1LL << (_1689_extra - 1LL))) || ((_17113_dfrac == (1LL << (_1689_extra - 1LL))) && (!(_15529_d0)))) || (((_17113_dfrac == (1LL << (_1689_extra - 1LL))) && _15529_d0) && ((_15514_di & 1LL) == 1LL));
	} else {
		_17313_round_up=(_17113_dfrac >> (_1689_extra - 1LL)) == 1LL;
	}
	if (_17113_dfrac != 0LL) {
		_15529_d0=false;
	}
	_147ebfca0_format_decimal(_12326_d,_15514_di,(!(_15529_d0)),_17313_round_up,_12368_prec);
	_12326_d._field_dp-=_1489_q;
}



inline void _147ebfca0_format_decimal(_147e3cfb0_DecimalSlice& _20424_d,jule::U64 _20445_m,jule::Bool _20457_trunc,jule::Bool _20474_round_up,jule::Int _20490_prec) {
	jule::U64 _2059_max = _147ebfca0_U64_POW10[static_cast<jule::Int>(_20490_prec)];
	jule::Int _20613_trimmed = 0LL;
	_iter_begin_5671870720:;
	if (!(_20445_m >= _2059_max)) { goto _iter_end_5671870720; }
	{
		jule::U64 _20814_a = jule::div(_20445_m,10LL);
		jule::U64 _20817_b = jule::mod(_20445_m,10LL);
		std::tie(_20814_a,_20817_b) = std::make_tuple(jule::div(_20445_m,10LL),jule::mod(_20445_m,10LL));
		_20445_m=_20814_a;
		(_20613_trimmed)++;
		if (_20817_b > 5LL) {
			_20474_round_up=true;
		} else if (_20817_b < 5LL) {
			_20474_round_up=false;
		} else {
			_20474_round_up=_20457_trunc || ((_20445_m & 1LL) == 1LL);
		}
		if (_20817_b != 0LL) {
			_20457_trunc=true;
		}
	}
	_iter_next_5671870720:;
	goto _iter_begin_5671870720;
	_iter_end_5671870720:;
	if (_20474_round_up) {
		(_20445_m)++;
	}
	if (_20445_m >= _2059_max) {
		_20445_m/=10LL;
		(_20613_trimmed)++;
	}
	jule::Uint _23313_n = static_cast<jule::Uint>(_20490_prec);
	_20424_d._field_nd=static_cast<jule::Int>(_20490_prec);
	jule::U64 _23513_v = _20445_m;
	_iter_begin_5671880096:;
	if (!(_23513_v >= 100LL)) { goto _iter_end_5671880096; }
	{
		jule::U64 _23717_v1 = 0LLU;
		jule::U64 _23817_v2 = 0LLU;
		if ((_23513_v >> 32LL) == 0LL) {
			std::tie(_23717_v1,_23817_v2) = std::make_tuple(static_cast<jule::U64>(jule::div(static_cast<jule::U32>(_23513_v),100LL)),static_cast<jule::U64>(jule::mod(static_cast<jule::U32>(_23513_v),100LL)));
		} else {
			std::tie(_23717_v1,_23817_v2) = std::make_tuple(static_cast<jule::U64>(jule::div(_23513_v,100LL)),static_cast<jule::U64>(jule::mod(_23513_v,100LL)));
		}
		_23313_n-=2LL;
		_20424_d._field_d[static_cast<jule::Int>(_23313_n + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _23817_v2) + 1LL)]);
		_20424_d._field_d[static_cast<jule::Int>(_23313_n + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _23817_v2) + 0LL)]);
		_23513_v=_23717_v1;
	}
	_iter_next_5671880096:;
	goto _iter_begin_5671880096;
	_iter_end_5671880096:;
	if (_23513_v > 0LL) {
		(_23313_n)--;
		_20424_d._field_d[static_cast<jule::Int>(_23313_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _23513_v) + 1LL)]);
	}
	if (_23513_v >= 10LL) {
		(_23313_n)--;
		_20424_d._field_d[static_cast<jule::Int>(_23313_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(2LL * _23513_v)]);
	}
	_iter_begin_5671895920:;
	if (!(_20424_d._field_d[static_cast<jule::Int>(_20424_d._field_nd - 1LL)] == '0')) { goto _iter_end_5671895920; }
	{
		(_20424_d._field_nd)--;
		(_20613_trimmed)++;
	}
	_iter_next_5671895920:;
	goto _iter_begin_5671895920;
	_iter_end_5671895920:;
	_20424_d._field_dp=static_cast<jule::Int>(_20424_d._field_nd + _20613_trimmed);
}



inline void _147ebfca0_ryu_ftoa_shortest(_147e3cfb0_DecimalSlice& _26527_d,jule::U64 _26548_mant,jule::Int _26559_exp,_147e3cfb0_FloatInfo& _26570_flt) {
	if (_26548_mant == 0LL) {
		std::tie(_26527_d._field_nd,_26527_d._field_dp) = std::make_tuple(0LL,0LL);
		return;
	}
	if ((_26559_exp <= 0LL) && (_150714f70_trailing_zeros64(_26548_mant) >= (-(_26559_exp)))) {
		_26548_mant>>=static_cast<jule::Uint>((-(_26559_exp)));
		_147ebfca0_ryu_digits(_26527_d,_26548_mant,_26548_mant,_26548_mant,true,false);
		return;
	}
	jule::U64 _27710_ml;
	jule::U64 _27714_mc;
	jule::U64 _27718_mu;
	jule::Int _27726_e2;
	std::tie(_27710_ml,_27714_mc,_27718_mu,_27726_e2) = _147ebfca0_compute_bounds(_26548_mant,_26559_exp,_26570_flt);
	if (_27726_e2 == 0LL) {
		_147ebfca0_ryu_digits(_26527_d,_27710_ml,_27714_mc,_27718_mu,true,false);
		return;
	}
	jule::Int _2839_q = _147ebfca0_mul_by_log2_log10(static_cast<jule::Int>((-(_27726_e2)))) + 1LL;
	jule::U64 _28713_dl = 0LLU;
	jule::U64 _28813_dc = 0LLU;
	jule::U64 _28913_du = 0LLU;
	jule::Bool _29013_dl0 = false;
	jule::Bool _29113_dc0 = false;
	jule::Bool _29213_du0 = false;
	if (_26570_flt == _147e3cfb0_F32_INFO) {
		jule::U32 _29417_dl32 = 0LLU;
		jule::U32 _29517_dc32 = 0LLU;
		jule::U32 _29617_du32 = 0LLU;
		std::tie(_29417_dl32,std::ignore,_29013_dl0) = _147ebfca0_mult64bit_pow10(static_cast<jule::U32>(_27710_ml),_27726_e2,_2839_q);
		std::tie(_29517_dc32,std::ignore,_29113_dc0) = _147ebfca0_mult64bit_pow10(static_cast<jule::U32>(_27714_mc),_27726_e2,_2839_q);
		std::tie(_29617_du32,_27726_e2,_29213_du0) = _147ebfca0_mult64bit_pow10(static_cast<jule::U32>(_27718_mu),_27726_e2,_2839_q);
		std::tie(_28713_dl,_28813_dc,_28913_du) = std::make_tuple(static_cast<jule::U64>(_29417_dl32),static_cast<jule::U64>(_29517_dc32),static_cast<jule::U64>(_29617_du32));
	} else {
		std::tie(_28713_dl,std::ignore,_29013_dl0) = _147ebfca0_mult128bit_pow10(_27710_ml,_27726_e2,_2839_q);
		std::tie(_28813_dc,std::ignore,_29113_dc0) = _147ebfca0_mult128bit_pow10(_27714_mc,_27726_e2,_2839_q);
		std::tie(_28913_du,_27726_e2,_29213_du0) = _147ebfca0_mult128bit_pow10(_27718_mu,_27726_e2,_2839_q);
	}
	if (_27726_e2 >= 0LL) {
		jule::panic(jule::Str("not enough significant bits after mult128bit_pow10", 50));
	}
	if (_2839_q > 55LL) {
		std::tie(_29013_dl0,_29113_dc0,_29213_du0) = std::make_tuple(false,false,false);
	}
	if ((_2839_q < 0LL) && (_2839_q >= -24LL)) {
		if (_147ebfca0_divisible_by_pow5(_27710_ml,static_cast<jule::Int>((-(_2839_q))))) {
			_29013_dl0=true;
		}
		if (_147ebfca0_divisible_by_pow5(_27714_mc,static_cast<jule::Int>((-(_2839_q))))) {
			_29113_dc0=true;
		}
		if (_147ebfca0_divisible_by_pow5(_27718_mu,static_cast<jule::Int>((-(_2839_q))))) {
			_29213_du0=true;
		}
	}
	jule::Uint _3299_extra = static_cast<jule::Uint>((-(_27726_e2)));
	jule::U64 _3309_extra_mask = static_cast<jule::U64>((1LL << _3299_extra) - 1LL);
	jule::U64 _33213_fracl = 0LLU;
	std::tie(_28713_dl,_33213_fracl) = std::make_tuple(static_cast<jule::U64>(_28713_dl >> _3299_extra),static_cast<jule::U64>(_28713_dl & _3309_extra_mask));
	jule::U64 _33413_fracc = 0LLU;
	std::tie(_28813_dc,_33413_fracc) = std::make_tuple(static_cast<jule::U64>(_28813_dc >> _3299_extra),static_cast<jule::U64>(_28813_dc & _3309_extra_mask));
	jule::U64 _33613_fracu = 0LLU;
	std::tie(_28913_du,_33613_fracu) = std::make_tuple(static_cast<jule::U64>(_28913_du >> _3299_extra),static_cast<jule::U64>(_28913_du & _3309_extra_mask));
	jule::Bool _34213_uok = (!(_29213_du0)) || (_33613_fracu > 0LL);
	if (_29213_du0 && (_33613_fracu == 0LL)) {
		_34213_uok=(_26548_mant & 1LL) == 0LL;
	}
	if ((!(_34213_uok))) {
		(_28913_du)--;
	}
	jule::Bool _35113_cup = false;
	if (_29113_dc0) {
		_35113_cup=(_33413_fracc > (1LL << (_3299_extra - 1LL))) || ((_33413_fracc == (1LL << (_3299_extra - 1LL))) && ((_28813_dc & 1LL) == 1LL));
	} else {
		_35113_cup=(_33413_fracc >> (_3299_extra - 1LL)) == 1LL;
	}
	jule::Bool _3679_lok = (_29013_dl0 && (_33213_fracl == 0LL)) && ((_26548_mant & 1LL) == 0LL);
	if ((!(_3679_lok))) {
		(_28713_dl)++;
	}
	jule::Bool _3729_c0 = _29113_dc0 && (_33413_fracc == 0LL);
	_147ebfca0_ryu_digits(_26527_d,_28713_dl,_28813_dc,_28913_du,_3729_c0,_35113_cup);
	_26527_d._field_dp-=_2839_q;
}



inline jule::Int _147ebfca0_mul_by_log2_log10(jule::Int _38322_x) {
	return static_cast<jule::Int>((_38322_x * 78913LL) >> 18LL);
}



inline jule::Int _147ebfca0_mul_by_log10_log2(jule::Int _39322_x) {
	return static_cast<jule::Int>((_39322_x * 108853LL) >> 15LL);
}



inline std::tuple<jule::U64,jule::U64,jule::U64,jule::Int> _147ebfca0_compute_bounds(jule::U64 _40119_mant,jule::Int _40130_exp,_147e3cfb0_FloatInfo& _40218_flt) {
	jule::Int _40274_e2 = jule::Int();
	jule::U64 _40262_upper = jule::U64();
	jule::U64 _40248_central = jule::U64();
	jule::U64 _40236_lower = jule::U64();
	if ((_40119_mant != (1LL << _40218_flt._field_mantbits)) || (_40130_exp == ((_40218_flt._field_bias + 1LL) - static_cast<jule::Int>(_40218_flt._field_mantbits)))) {
		std::tie(_40236_lower,_40248_central,_40262_upper) = std::make_tuple(static_cast<jule::U64>((2LL * _40119_mant) - 1LL),static_cast<jule::U64>(2LL * _40119_mant),static_cast<jule::U64>((2LL * _40119_mant) + 1LL));
		_40274_e2=static_cast<jule::Int>(_40130_exp - 1LL);
	} else {
		std::tie(_40236_lower,_40248_central,_40262_upper) = std::make_tuple(static_cast<jule::U64>((4LL * _40119_mant) - 1LL),static_cast<jule::U64>(4LL * _40119_mant),static_cast<jule::U64>((4LL * _40119_mant) + 2LL));
		_40274_e2=static_cast<jule::Int>(_40130_exp - 2LL);
	}
	return std::make_tuple(_40236_lower,_40248_central,_40262_upper,_40274_e2);
}



inline void _147ebfca0_ryu_digits(_147e3cfb0_DecimalSlice& _41520_d,jule::U64 _41537_lower,jule::U64 _41549_central,jule::U64 _41563_upper,jule::Bool _41579_c0,jule::Bool _41593_cup) {
	jule::U32 _41614_lhi;
	jule::U32 _41619_llo;
	std::tie(_41614_lhi,_41619_llo) = _147ebfca0_divmod1e9(_41537_lower);
	jule::U32 _41710_chi;
	jule::U32 _41715_clo;
	std::tie(_41710_chi,_41715_clo) = _147ebfca0_divmod1e9(_41549_central);
	jule::U32 _41810_uhi;
	jule::U32 _41815_ulo;
	std::tie(_41810_uhi,_41815_ulo) = _147ebfca0_divmod1e9(_41563_upper);
	if (_41810_uhi == 0LL) {
		_147ebfca0_ryu_digits32(_41520_d,_41619_llo,_41715_clo,_41815_ulo,_41579_c0,_41593_cup,8LL);
	} else if (_41614_lhi < _41810_uhi) {
		if (_41619_llo != 0LL) {
			(_41614_lhi)++;
		}
		_41579_c0=_41579_c0 && (_41715_clo == 0LL);
		_41593_cup=(_41715_clo > 500000000LL) || ((_41715_clo == 500000000LL) && _41593_cup);
		_147ebfca0_ryu_digits32(_41520_d,_41614_lhi,_41710_chi,_41810_uhi,_41579_c0,_41593_cup,8LL);
		_41520_d._field_dp+=9LL;
	} else {
		_41520_d._field_nd=0LL;
		jule::Uint _43417_n = static_cast<jule::Uint>(9LLU);
		jule::U32 _43517_v = _41710_chi;
		_iter_begin_5671998128:;
		if (!(_43517_v > 0LL)) { goto _iter_end_5671998128; }
		{
			jule::U32 _43718_v1 = jule::div(_43517_v,10LL);
			jule::U32 _43722_v2 = jule::mod(_43517_v,10LL);
			std::tie(_43718_v1,_43722_v2) = std::make_tuple(jule::div(_43517_v,10LL),jule::mod(_43517_v,10LL));
			_43517_v=_43718_v1;
			(_43417_n)--;
			_41520_d._field_d[static_cast<jule::Int>(_43417_n)]=static_cast<jule::U8>(_43722_v2 + '0');
		}
		_iter_next_5671998128:;
		goto _iter_begin_5671998128;
		_iter_end_5671998128:;
		_41520_d._field_d=_41520_d._field_d.slice(static_cast<jule::Int>(_43417_n));
		_41520_d._field_nd=static_cast<jule::Int>(9LL - _43417_n);
		_147ebfca0_ryu_digits32(_41520_d,_41619_llo,_41715_clo,_41815_ulo,_41579_c0,_41593_cup,static_cast<jule::Int>(_41520_d._field_nd + 8LL));
	}
	_iter_begin_5671997472:;
	if (!((_41520_d._field_nd > 0LL) && (_41520_d._field_d[static_cast<jule::Int>(_41520_d._field_nd - 1LL)] == '0'))) { goto _iter_end_5671997472; }
	{
		(_41520_d._field_nd)--;
	}
	_iter_next_5671997472:;
	goto _iter_begin_5671997472;
	_iter_end_5671997472:;
	_iter_begin_5671996176:;
	if (!((_41520_d._field_nd > 0LL) && (_41520_d._field_d[0LL] == '0'))) { goto _iter_end_5671996176; }
	{
		(_41520_d._field_nd)--;
		(_41520_d._field_dp)--;
		_41520_d._field_d=_41520_d._field_d.slice(1LL);
	}
	_iter_next_5671996176:;
	goto _iter_begin_5671996176;
	_iter_end_5671996176:;
}



inline void _147ebfca0_ryu_digits32(_147e3cfb0_DecimalSlice& _46022_d,jule::U32 _46043_lower,jule::U32 _46059_central,jule::U32 _46121_upper,jule::Bool _46137_c0,jule::Bool _46151_cup,jule::Int _46166_endindex) {
	if (_46121_upper == 0LL) {
		_46022_d._field_dp=static_cast<jule::Int>(_46166_endindex + 1LL);
		return;
	}
	jule::Int _46613_trimmed = 0LL;
	jule::Int _46913_c_next_digit = 0LL;
	_iter_begin_5672018272:;
	if (!(_46121_upper > 0LL)) { goto _iter_end_5672018272; }
	{
		jule::U32 _47613_l = jule::div(_46043_lower + 9LL,10LL);
		jule::U32 _47718_c = jule::div(_46059_central,10LL);
		jule::U32 _47725_cdigit = jule::mod(_46059_central,10LL);
		std::tie(_47718_c,_47725_cdigit) = std::make_tuple(jule::div(_46059_central,10LL),jule::mod(_46059_central,10LL));
		jule::U32 _47813_u = jule::div(_46121_upper,10LL);
		if (_47613_l > _47813_u) {
			goto _iter_end_5672018272;
		}
		if ((_47613_l == (_47718_c + 1LL)) && (_47718_c < _47813_u)) {
			(_47718_c)++;
			_47725_cdigit=0LL;
			_46151_cup=false;
		}
		(_46613_trimmed)++;
		_46137_c0=_46137_c0 && (_46913_c_next_digit == 0LL);
		_46913_c_next_digit=static_cast<jule::Int>(_47725_cdigit);
		std::tie(_46043_lower,_46059_central,_46121_upper) = std::make_tuple(_47613_l,_47718_c,_47813_u);
	}
	_iter_next_5672018272:;
	goto _iter_begin_5672018272;
	_iter_end_5672018272:;
	if (_46613_trimmed > 0LL) {
		_46151_cup=((_46913_c_next_digit > 5LL) || ((_46913_c_next_digit == 5LL) && (!(_46137_c0)))) || (((_46913_c_next_digit == 5LL) && _46137_c0) && ((_46059_central & 1LL) == 1LL));
	}
	if ((_46059_central < _46121_upper) && _46151_cup) {
		(_46059_central)++;
	}
	_46166_endindex-=_46613_trimmed;
	jule::U32 _51713_v = _46059_central;
	jule::Int _51813_n = _46166_endindex;
	_iter_begin_5672019136:;
	if (!(_51813_n > _46022_d._field_nd)) { goto _iter_end_5672019136; }
	{
		jule::U32 _52014_v1 = jule::div(_51713_v,100LL);
		jule::U32 _52018_v2 = jule::mod(_51713_v,100LL);
		std::tie(_52014_v1,_52018_v2) = std::make_tuple(jule::div(_51713_v,100LL),jule::mod(_51713_v,100LL));
		_46022_d._field_d[static_cast<jule::Int>(_51813_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _52018_v2) + 1LL)]);
		_46022_d._field_d[static_cast<jule::Int>(_51813_n - 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _52018_v2) + 0LL)]);
		_51813_n-=2LL;
		_51713_v=_52014_v1;
	}
	_iter_next_5672019136:;
	goto _iter_begin_5672019136;
	_iter_end_5672019136:;
	if (_51813_n == _46022_d._field_nd) {
		_46022_d._field_d[static_cast<jule::Int>(_51813_n)]=static_cast<jule::U8>(_51713_v + '0');
	}
	_46022_d._field_nd=static_cast<jule::Int>(_46166_endindex + 1LL);
	_46022_d._field_dp=static_cast<jule::Int>(_46022_d._field_nd + _46613_trimmed);
}



inline std::tuple<jule::U32,jule::Int,jule::Bool> _147ebfca0_mult64bit_pow10(jule::U32 _54220_m,jule::Int _54232_e2,jule::Int _54241_q) {
	jule::Bool _54273_exact = jule::Bool();
	jule::Int _54262_resE = jule::Int();
	jule::U32 _54251_resM = jule::U32();
	if (_54241_q == 0LL) {
		_54251_resM = static_cast<jule::U32>(_54220_m << 6LL);
		_54262_resE = static_cast<jule::Int>(_54232_e2 - 6LL);
		_54273_exact = true;
		return std::make_tuple(_54251_resM,_54262_resE,_54273_exact);
	}
	if ((_54241_q < -348LL) || (347LL < _54241_q)) {
		jule::panic(jule::Str("mult64bit_pow10: power of 10 is out of range", 44));
	}
	jule::U64 _55113_pow = _147e81490_DETAILED_POWS_OF_TEN[static_cast<jule::Int>(_54241_q - -348LL)][1LL];
	if (_54241_q < 0LL) {
		_55113_pow+=1LL;
	}
	jule::U64 _55610_hi;
	jule::U64 _55614_lo;
	std::tie(_55610_hi,_55614_lo) = _150714f70_mul64(static_cast<jule::U64>(_54220_m),_55113_pow);
	_54232_e2+=static_cast<jule::Int>((_147ebfca0_mul_by_log10_log2(_54241_q) - 63LL) + 57LL);
	_54251_resM = static_cast<jule::U32>((_55610_hi << 7LL) | (_55614_lo >> 57LL));
	_54262_resE = _54232_e2;
	_54273_exact = (_55614_lo << 7LL) == 0LL;
	return std::make_tuple(_54251_resM,_54262_resE,_54273_exact);
}



inline std::tuple<jule::U64,jule::Int,jule::Bool> _147ebfca0_mult128bit_pow10(jule::U64 _57021_m,jule::Int _57033_e2,jule::Int _57042_q) {
	jule::Bool _57074_exact = jule::Bool();
	jule::Int _57063_resE = jule::Int();
	jule::U64 _57052_resM = jule::U64();
	if (_57042_q == 0LL) {
		_57052_resM = static_cast<jule::U64>(_57021_m << 8LL);
		_57063_resE = static_cast<jule::Int>(_57033_e2 - 8LL);
		_57074_exact = true;
		return std::make_tuple(_57052_resM,_57063_resE,_57074_exact);
	}
	if ((_57042_q < -348LL) || (347LL < _57042_q)) {
		jule::panic(jule::Str("mult128bit_pow10: power of 10 is out of range", 45));
	}
	jule::Array<jule::U64,2> _57913_pow = _147e81490_DETAILED_POWS_OF_TEN[static_cast<jule::Int>(_57042_q - -348LL)];
	if (_57042_q < 0LL) {
		_57913_pow[0LL]+=1LL;
	}
	_57033_e2+=static_cast<jule::Int>((_147ebfca0_mul_by_log10_log2(_57042_q) - 127LL) + 119LL);
	jule::U64 _58710_l1;
	jule::U64 _58714_l0;
	std::tie(_58710_l1,_58714_l0) = _150714f70_mul64(_57021_m,_57913_pow[0LL]);
	jule::U64 _58814_h1;
	jule::U64 _58818_h0;
	std::tie(_58814_h1,_58818_h0) = _150714f70_mul64(_57021_m,_57913_pow[1LL]);
	jule::U64 _58910_mid;
	jule::U64 _58915_carry;
	std::tie(_58910_mid,_58915_carry) = _150714f70_add64(_58710_l1,_58818_h0,0LLU);
	_58814_h1+=_58915_carry;
	_57052_resM = static_cast<jule::U64>((_58814_h1 << 9LL) | (_58910_mid >> 55LL));
	_57063_resE = _57033_e2;
	_57074_exact = ((_58910_mid << 9LL) == 0LL) && (_58714_l0 == 0LL);
	return std::make_tuple(_57052_resM,_57063_resE,_57074_exact);
}



inline jule::Bool _147ebfca0_divisible_by_pow5(jule::U64 _59426_m,jule::Int _59434_k) {
	if (_59426_m == 0LL) {
		return true;
	}
	jule::Int _59813_i = 0LL;
	_iter_begin_5672083696:;
	if (!(_59813_i < _59434_k)) { goto _iter_end_5672083696; }
	{
		if (jule::mod(_59426_m,5LL) != 0LL) {
			return false;
		}
		_59426_m/=5LL;
	}
	_iter_next_5672083696:;
	(_59813_i)++;
	goto _iter_begin_5672083696;
	_iter_end_5672083696:;
	return true;
}



inline std::tuple<jule::U32,jule::U32> _147ebfca0_divmod1e9(jule::U64 _61014_x) {
	if (true) {
		return std::make_tuple(static_cast<jule::U32>(jule::div(_61014_x,1000000000LL)),static_cast<jule::U32>(jule::mod(_61014_x,1000000000LL)));
	}
	jule::U64 _61510_hi;
	std::tie(_61510_hi,std::ignore) = _150714f70_mul64(static_cast<jule::U64>(_61014_x >> 1LL),9903520314283042200LLU);
	jule::U64 _6169_q = _61510_hi >> 28LL;
	return std::make_tuple(static_cast<jule::U32>(_6169_q),static_cast<jule::U32>(_61014_x - (_6169_q * 1000000000LL)));
}



inline jule::Int _150025080_digit_zero(jule::Slice<jule::U8> _26519_dst) {
	{
		auto __julec_range_expr = _26519_dst;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _150025080_i = 0;
			_iter_begin_5672092176:;
			{
				_26519_dst[static_cast<jule::Int>(_150025080_i)]='0';
			}
			_iter_next_5672092176:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_150025080_i; goto _iter_begin_5672092176; }
			_iter_end_5672092176:;
		}
	}
	return static_cast<jule::I64>(_26519_dst.len());
}



inline void _150025080_trim(_150025080_Decimal& _27514_a) {
	_iter_begin_5672095984:;
	if (!((_27514_a._field_nd > 0LL) && (_27514_a._field_d[static_cast<jule::Int>(_27514_a._field_nd - 1LL)] == '0'))) { goto _iter_end_5672095984; }
	{
		(_27514_a._field_nd)--;
	}
	_iter_next_5672095984:;
	goto _iter_begin_5672095984;
	_iter_end_5672095984:;
	if (_27514_a._field_nd == 0LL) {
		_27514_a._field_dp=0LL;
	}
}



inline void _150025080_right_shift(_150025080_Decimal& _28521_a,jule::Uint _28533_k) {
	jule::Int _28613_r = 0LL;
	jule::Int _28713_w = 0LL;
	jule::Uint _29013_n = 0LLU;
	_iter_begin_5672105712:;
	if (!((_29013_n >> _28533_k) == 0LL)) { goto _iter_end_5672105712; }
	{
		if (_28613_r >= _28521_a._field_nd) {
			if (_29013_n == 0LL) {
				_28521_a._field_nd=0LL;
				return;
			}
			_iter_begin_5672108192:;
			if (!((_29013_n >> _28533_k) == 0LL)) { goto _iter_end_5672108192; }
			{
				_29013_n=static_cast<jule::Uint>(_29013_n * 10LL);
				(_28613_r)++;
			}
			_iter_next_5672108192:;
			goto _iter_begin_5672108192;
			_iter_end_5672108192:;
			goto _iter_end_5672105712;
		}
		jule::Uint _30413_c = static_cast<jule::Uint>(_28521_a._field_d[static_cast<jule::Int>(_28613_r)]);
		_29013_n=static_cast<jule::Uint>(((_29013_n * 10LL) + _30413_c) - '0');
	}
	_iter_next_5672105712:;
	(_28613_r)++;
	goto _iter_begin_5672105712;
	_iter_end_5672105712:;
	_28521_a._field_dp-=static_cast<jule::Int>(_28613_r - 1LL);
	jule::Uint _3099_mask = static_cast<jule::Uint>(static_cast<jule::Uint>(1LL << _28533_k) - 1LL);
	_iter_begin_5672115184:;
	if (!(_28613_r < _28521_a._field_nd)) { goto _iter_end_5672115184; }
	{
		jule::Uint _31313_c = static_cast<jule::Uint>(_28521_a._field_d[static_cast<jule::Int>(_28613_r)]);
		jule::Uint _31413_dig = _29013_n >> _28533_k;
		_29013_n&=_3099_mask;
		_28521_a._field_d[static_cast<jule::Int>(_28713_w)]=static_cast<jule::U8>(_31413_dig + '0');
		(_28713_w)++;
		_29013_n=static_cast<jule::Uint>(((_29013_n * 10LL) + _31313_c) - '0');
	}
	_iter_next_5672115184:;
	(_28613_r)++;
	goto _iter_begin_5672115184;
	_iter_end_5672115184:;
	_iter_begin_5672120048:;
	if (!(_29013_n > 0LL)) { goto _iter_end_5672120048; }
	{
		jule::Uint _32313_dig = _29013_n >> _28533_k;
		_29013_n&=_3099_mask;
		if (_28713_w < 800LL) {
			_28521_a._field_d[static_cast<jule::Int>(_28713_w)]=static_cast<jule::U8>(_32313_dig + '0');
			(_28713_w)++;
		} else if (_32313_dig > 0LL) {
			_28521_a._field_trunc=true;
		}
		_29013_n=static_cast<jule::Uint>(_29013_n * 10LL);
	}
	_iter_next_5672120048:;
	goto _iter_begin_5672120048;
	_iter_end_5672120048:;
	_28521_a._field_nd=_28713_w;
	_150025080_trim(_28521_a);
}



inline jule::Bool _150025080_prefix_is_less_than(jule::Slice<jule::U8> _33924_b,jule::Str _33935_s) {
	jule::Int _34013_i = 0LL;
	_iter_begin_5672129264:;
	if (!(_34013_i < _33935_s.len())) { goto _iter_end_5672129264; }
	{
		if (_34013_i >= _33924_b.len()) {
			return true;
		}
		if (_33924_b[static_cast<jule::Int>(_34013_i)] != _33935_s[static_cast<jule::Int>(_34013_i)]) {
			return _33924_b[static_cast<jule::Int>(_34013_i)] < _33935_s[static_cast<jule::Int>(_34013_i)];
		}
	}
	_iter_next_5672129264:;
	(_34013_i)++;
	goto _iter_begin_5672129264;
	_iter_end_5672129264:;
	return false;
}



inline void _150025080_left_shift(_150025080_Decimal& _35320_a,jule::Uint _35332_k) {
	jule::Int _35413_delta = _150025080_LEFTCHEATS[static_cast<jule::Int>(_35332_k)]._field_delta;
	if (_150025080_prefix_is_less_than(_35320_a._field_d.slice(0LL,static_cast<jule::Int>(_35320_a._field_nd)),_150025080_LEFTCHEATS[static_cast<jule::Int>(_35332_k)]._field_cutoff)) {
		(_35413_delta)--;
	}
	jule::Int _35913_r = _35320_a._field_nd;
	jule::Int _36013_w = _35320_a._field_nd + _35413_delta;
	jule::Uint _36313_n = 0LLU;
	(_35913_r)--;
	_iter_begin_5672143568:;
	if (!(_35913_r >= 0LL)) { goto _iter_end_5672143568; }
	{
		_36313_n+=static_cast<jule::Uint>((static_cast<jule::Uint>(_35320_a._field_d[static_cast<jule::Int>(_35913_r)]) - '0') << _35332_k);
		jule::Uint _36713_quo = jule::div(_36313_n,10LL);
		jule::Uint _36813_rem = _36313_n - (10LL * _36713_quo);
		(_36013_w)--;
		if (_36013_w < 800LL) {
			_35320_a._field_d[static_cast<jule::Int>(_36013_w)]=static_cast<jule::U8>(_36813_rem + '0');
		} else if (_36813_rem != 0LL) {
			_35320_a._field_trunc=true;
		}
		_36313_n=_36713_quo;
	}
	_iter_next_5672143568:;
	(_35913_r)--;
	goto _iter_begin_5672143568;
	_iter_end_5672143568:;
	_iter_begin_5672150528:;
	if (!(_36313_n > 0LL)) { goto _iter_end_5672150528; }
	{
		jule::Uint _38013_quo = jule::div(_36313_n,10LL);
		jule::Uint _38113_rem = _36313_n - (10LL * _38013_quo);
		(_36013_w)--;
		if (_36013_w < 800LL) {
			_35320_a._field_d[static_cast<jule::Int>(_36013_w)]=static_cast<jule::U8>(_38113_rem + '0');
		} else if (_38113_rem != 0LL) {
			_35320_a._field_trunc=true;
		}
		_36313_n=_38013_quo;
	}
	_iter_next_5672150528:;
	goto _iter_begin_5672150528;
	_iter_end_5672150528:;
	_35320_a._field_nd+=_35413_delta;
	if (_35320_a._field_nd >= 800LL) {
		_35320_a._field_nd=800LL;
	}
	_35320_a._field_dp+=_35413_delta;
	_150025080_trim(_35320_a);
}



inline jule::Bool _150025080_should_round_up(_150025080_Decimal& _40021_a,jule::Int _40033_nd) {
	if ((_40033_nd < 0LL) || (_40033_nd >= _40021_a._field_nd)) {
		return false;
	}
	if ((_40021_a._field_d[static_cast<jule::Int>(_40033_nd)] == '5') && ((_40033_nd + 1LL) == _40021_a._field_nd)) {
		if (_40021_a._field_trunc) {
			return true;
		}
		return (_40033_nd > 0LL) && (jule::mod(_40021_a._field_d[static_cast<jule::Int>(_40033_nd - 1LL)] - '0',2LL) != 0LL);
	}
	return _40021_a._field_d[static_cast<jule::Int>(_40033_nd)] >= '5';
}



inline jule::Str _1500241f0_fmt_uint(jule::U64 _6217_i,jule::Int _6225_base) {
	if ((true && (_6217_i < 100LL)) && (_6225_base == 10LL)) {
		return _1500241f0_small(static_cast<jule::Int>(_6217_i));
	}
	jule::Str _6613_s;
	std::tie(std::ignore,_6613_s) = _1500241f0_fmt_bits(nullptr,_6217_i,_6225_base,false,false);
	return _6613_s;
}



inline jule::Str _1500241f0_fmt_int(jule::I64 _7316_i,jule::Int _7324_base) {
	if (((true && (0LL <= _7316_i)) && (_7316_i < 100LL)) && (_7324_base == 10LL)) {
		return _1500241f0_small(static_cast<jule::Int>(_7316_i));
	}
	jule::Str _7713_s;
	std::tie(std::ignore,_7713_s) = _1500241f0_fmt_bits(nullptr,static_cast<jule::U64>(_7316_i),_7324_base,_7316_i < 0LL,false);
	return _7713_s;
}



inline jule::Str _1500241f0_itoa(jule::Int _8213_i) {
	return _1500241f0_fmt_int(static_cast<jule::I64>(_8213_i),10LL);
}



inline jule::Str _1500241f0_small(jule::Int _8510_i) {
	if (_8510_i < 10LL) {
		return jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).slice(static_cast<jule::Int>(_8510_i),static_cast<jule::Int>(_8510_i + 1LL));
	}
	return jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200).slice(static_cast<jule::Int>(_8510_i * 2LL),static_cast<jule::Int>((_8510_i * 2LL) + 2LL));
}



inline jule::Bool _1500241f0_is_power_of_two(jule::Int _9220_x) {
	return (_9220_x & (_9220_x - 1LL)) == 0LL;
}



inline std::tuple<jule::Slice<jule::U8>,jule::Str> _1500241f0_fmt_bits(jule::Slice<jule::U8> _9917_dst,jule::U64 _9934_u,jule::Int _9942_base,jule::Bool _9953_neg,jule::Bool _9964_append_) {
	jule::Str _9992_s = jule::Str();
	jule::Slice<jule::U8> _9981_d = jule::Slice<jule::U8>();
	if ((_9942_base < 2LL) || (_9942_base > jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).len())) {
		jule::panic(jule::Str("std::conv: illegal base", 23));
	}
	jule::Array<jule::U8,65> _10513_a = jule::Array<jule::U8,65>({});
	jule::Int _10613_i = 65LL;
	if (_9953_neg) {
		_9934_u=static_cast<jule::U64>((-(_9934_u)));
	}
	if (_9942_base == 10LL) {
		if (false) {
			_iter_begin_5672198064:;
			if (!(_9934_u >= 1000000000LL)) { goto _iter_end_5672198064; }
			{
				jule::U64 _12521_q = jule::div(_9934_u,1000000000LL);
				jule::Uint _12625_us = static_cast<jule::Uint>(_9934_u - (_12521_q * 1000000000LL));
				jule::Int _12725_j = 4LL;
				_iter_begin_5672201856:;
				if (!(_12725_j > 0LL)) { goto _iter_end_5672201856; }
				{
					jule::Uint _12925_is = jule::mod(_12625_us,100LL) * 2LL;
					_12625_us/=100LL;
					_10613_i-=2LL;
					_10513_a[static_cast<jule::Int>(_10613_i + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_12925_is + 1LL)]);
					_10513_a[static_cast<jule::Int>(_10613_i + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_12925_is + 0LL)]);
				}
				_iter_next_5672201856:;
				(_12725_j)--;
				goto _iter_begin_5672201856;
				_iter_end_5672201856:;
				(_10613_i)--;
				_10513_a[static_cast<jule::Int>(_10613_i)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((_12625_us * 2LL) + 1LL)]);
				_9934_u=_12521_q;
			}
			_iter_next_5672198064:;
			goto _iter_begin_5672198064;
			_iter_end_5672198064:;
		}
		jule::Uint _14717_us = static_cast<jule::Uint>(_9934_u);
		_iter_begin_5672212224:;
		if (!(_14717_us >= 100LL)) { goto _iter_end_5672212224; }
		{
			jule::Uint _14917_is = jule::mod(_14717_us,100LL) * 2LL;
			_14717_us/=100LL;
			_10613_i-=2LL;
			_10513_a[static_cast<jule::Int>(_10613_i + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_14917_is + 1LL)]);
			_10513_a[static_cast<jule::Int>(_10613_i + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_14917_is + 0LL)]);
		}
		_iter_next_5672212224:;
		goto _iter_begin_5672212224;
		_iter_end_5672212224:;
		jule::Uint _15713_is = _14717_us * 2LL;
		(_10613_i)--;
		_10513_a[static_cast<jule::Int>(_10613_i)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_15713_is + 1LL)]);
		if (_14717_us >= 10LL) {
			(_10613_i)--;
			_10513_a[static_cast<jule::Int>(_10613_i)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_15713_is)]);
		}
	} else if (_1500241f0_is_power_of_two(_9942_base)) {
		jule::Uint _17213_shift = static_cast<jule::Uint>(_150714f70_trailing_zeros(static_cast<jule::Uint>(_9942_base))) & 7LL;
		jule::U64 _17313_b = static_cast<jule::U64>(_9942_base);
		jule::Uint _17413_m = static_cast<jule::Uint>(_9942_base) - 1LL;
		_iter_begin_5672227312:;
		if (!(_9934_u >= _17313_b)) { goto _iter_end_5672227312; }
		{
			(_10613_i)--;
			_10513_a[static_cast<jule::Int>(_10613_i)]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::Int>(static_cast<jule::Uint>(_9934_u) & _17413_m)]);
			_9934_u>>=_17213_shift;
		}
		_iter_next_5672227312:;
		goto _iter_begin_5672227312;
		_iter_end_5672227312:;
		(_10613_i)--;
		_10513_a[static_cast<jule::Int>(_10613_i)]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::Int>(static_cast<jule::Uint>(_9934_u))]);
	} else {
		jule::U64 _18513_b = static_cast<jule::U64>(_9942_base);
		_iter_begin_5672232128:;
		if (!(_9934_u >= _18513_b)) { goto _iter_end_5672232128; }
		{
			(_10613_i)--;
			jule::U64 _19117_q = jule::div(_9934_u,_18513_b);
			_10513_a[static_cast<jule::Int>(_10613_i)]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::Int>(static_cast<jule::Uint>(_9934_u - (_19117_q * _18513_b)))]);
			_9934_u=_19117_q;
		}
		_iter_next_5672232128:;
		goto _iter_begin_5672232128;
		_iter_end_5672232128:;
		(_10613_i)--;
		_10513_a[static_cast<jule::Int>(_10613_i)]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::Int>(static_cast<jule::Uint>(_9934_u))]);
	}
	if (_9953_neg) {
		(_10613_i)--;
		_10513_a[static_cast<jule::Int>(_10613_i)]='-';
	}
	if (_9964_append_) {
		_9981_d=jule::append(_9917_dst,_10513_a.slice(static_cast<jule::Int>(_10613_i)));
		return std::make_tuple(_9981_d,_9992_s);
	}
	_9992_s=static_cast<jule::Str>(_10513_a.slice(static_cast<jule::Int>(_10613_i)));
	return std::make_tuple(_9981_d,_9992_s);
}



inline void _147ecb750_exit(jule::Int _1213_code) {
	_147ed9190_exit(_1213_code);
}



inline jule::Str _147ecb750_executable(void) {
	return jule::executable();
}



inline jule::Bool _157e348f0_is_std_header_path(jule::Str _2627_p) {
	return (_2627_p[0LL] == '<') && (_2627_p[static_cast<jule::Int>(_2627_p.len() - 1LL)] == '>');
}



inline jule::Bool _157e348f0_is_valid_header_ext(jule::Str _3128_ext) {
	{
		auto __julec_range_expr = _157e348f0_CPP_HEADER_EXTS;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _157e348f0_valid_ext = *__julec_range_begin;
			_iter_begin_5672544000:;
			{
				if (_3128_ext == _157e348f0_valid_ext) {
					return true;
				}
			}
			_iter_next_5672544000:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _157e348f0_valid_ext = *__julec_range_begin; goto _iter_begin_5672544000; }
			_iter_end_5672544000:;
		}
	}
	return false;
}



inline jule::Bool _157e348f0_is_valid_cpp_ext(jule::Str _4225_ext) {
	{
		auto __julec_range_expr = _157e348f0_CPP_EXTS;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _157e348f0_e = *__julec_range_begin;
			_iter_begin_5672542416:;
			{
				if (_4225_ext == _157e348f0_e) {
					return true;
				}
			}
			_iter_next_5672542416:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _157e348f0_e = *__julec_range_begin; goto _iter_begin_5672542416; }
			_iter_end_5672542416:;
		}
	}
	{
		auto __julec_range_expr = _157e348f0_OBJECTIVE_CPP_EXTS;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _157e348f0_e = *__julec_range_begin;
			_iter_begin_5672550672:;
			{
				if (_4225_ext == _157e348f0_e) {
					return true;
				}
			}
			_iter_next_5672550672:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _157e348f0_e = *__julec_range_begin; goto _iter_begin_5672550672; }
			_iter_end_5672550672:;
		}
	}
	return false;
}



inline std::tuple<jule::Bool,jule::Bool> _157e34740_check_os(jule::Str _713_arg) {
	jule::Bool _735_exist = jule::Bool();
	jule::Bool _725_ok = jule::Bool();
	_725_ok=false;
	_735_exist=true;
	{
		auto _match_expr{ _713_arg };
		if (!((jule::Str("windows", 7)) == _match_expr)) { goto _case_end_5672557104; }
		_case_begin_5672557104:;
		{
			_725_ok=_157eacb90_is_windows(_157eb0090_OS);
		}
		goto _match_end_5672554784;
		_case_end_5672557104:;
		if (!((jule::Str("darwin", 6)) == _match_expr)) { goto _case_end_5672555552; }
		_case_begin_5672555552:;
		{
			_725_ok=_157eacb90_is_darwin(_157eb0090_OS);
		}
		goto _match_end_5672554784;
		_case_end_5672555552:;
		if (!((jule::Str("linux", 5)) == _match_expr)) { goto _case_end_5672555664; }
		_case_begin_5672555664:;
		{
			_725_ok=_157eacb90_is_linux(_157eb0090_OS);
		}
		goto _match_end_5672554784;
		_case_end_5672555664:;
		if (!((jule::Str("unix", 4)) == _match_expr)) { goto _case_end_5672555776; }
		_case_begin_5672555776:;
		{
			_725_ok=_157eacb90_is_unix(_157eb0090_OS);
		}
		goto _match_end_5672554784;
		_case_end_5672555776:;
		_case_begin_5672554496:;
		{
			_725_ok=true;
			_735_exist=false;
		}
		goto _match_end_5672554784;
		_case_end_5672554496:;
		_match_end_5672554784:;
	}
	return std::make_tuple(_725_ok,_735_exist);
}



inline std::tuple<jule::Bool,jule::Bool> _157e34740_check_arch(jule::Str _2415_arg) {
	jule::Bool _2437_exist = jule::Bool();
	jule::Bool _2427_ok = jule::Bool();
	_2427_ok=false;
	_2437_exist=true;
	{
		auto _match_expr{ _2415_arg };
		if (!((jule::Str("i386", 4)) == _match_expr)) { goto _case_end_5672564240; }
		_case_begin_5672564240:;
		{
			_2427_ok=_157eacb90_is_i386(_157eb0090_ARCH);
		}
		goto _match_end_5672561920;
		_case_end_5672564240:;
		if (!((jule::Str("amd64", 5)) == _match_expr)) { goto _case_end_5672562688; }
		_case_begin_5672562688:;
		{
			_2427_ok=_157eacb90_is_amd64(_157eb0090_ARCH);
		}
		goto _match_end_5672561920;
		_case_end_5672562688:;
		if (!((jule::Str("arm64", 5)) == _match_expr)) { goto _case_end_5672562800; }
		_case_begin_5672562800:;
		{
			_2427_ok=_157eacb90_is_arm64(_157eb0090_ARCH);
		}
		goto _match_end_5672561920;
		_case_end_5672562800:;
		if (!((jule::Str("64bit", 5)) == _match_expr)) { goto _case_end_5672562912; }
		_case_begin_5672562912:;
		{
			_2427_ok=_157eacb90_is_64bit(_157eb0090_ARCH);
		}
		goto _match_end_5672561920;
		_case_end_5672562912:;
		if (!((jule::Str("32bit", 5)) == _match_expr)) { goto _case_end_5672563168; }
		_case_begin_5672563168:;
		{
			_2427_ok=_157eacb90_is_32bit(_157eb0090_ARCH);
		}
		goto _match_end_5672561920;
		_case_end_5672563168:;
		_case_begin_5672561632:;
		{
			_2427_ok=true;
			_2437_exist=false;
		}
		goto _match_end_5672561920;
		_case_end_5672561632:;
		_match_end_5672561920:;
	}
	return std::make_tuple(_2427_ok,_2437_exist);
}



inline jule::Bool _157e34740_is_pass_file_annotation(jule::Str _4336_p) {
	_4336_p=_147e135c0_base(_4336_p);
	jule::I64 _459_n = _4336_p.len();
	_4336_p=_4336_p.slice(0LL,static_cast<jule::Int>(_459_n - _147e135c0_ext(_4336_p).len()));
	jule::Str _5113_a1 = jule::Str("", 0);
	jule::Str _5413_a2 = jule::Str("", 0);
	jule::Int _5713_i = _4336_p.rfind(jule::Str("_", 1));
	if (_5713_i == -1LL) {
		jule::Bool _6018_ok;
		jule::Bool _6026_exist;
		std::tie(_6018_ok,_6026_exist) = _157e34740_check_os(_4336_p);
		if (_6026_exist) {
			return _6018_ok;
		}
		std::tie(_6018_ok,_6026_exist) = _157e34740_check_arch(_4336_p);
		return (!(_6026_exist)) || _6018_ok;
	}
	if ((_5713_i + 1LL) >= _459_n) {
		return true;
	}
	_5113_a1=_4336_p.slice(static_cast<jule::Int>(_5713_i + 1LL));
	_4336_p=_4336_p.slice(0LL,static_cast<jule::Int>(_5713_i));
	_5713_i=static_cast<jule::Int>(_4336_p.rfind(jule::Str("_", 1)));
	if (_5713_i != -1LL) {
		_5413_a2=_4336_p.slice(static_cast<jule::Int>(_5713_i + 1LL));
	}
	if (_5413_a2 == jule::Str("", 0)) {
		jule::Bool _8118_ok;
		jule::Bool _8126_exist;
		std::tie(_8118_ok,_8126_exist) = _157e34740_check_os(_5113_a1);
		if (_8126_exist) {
			return _8118_ok;
		}
		std::tie(_8118_ok,_8126_exist) = _157e34740_check_arch(_5113_a1);
		return (!(_8126_exist)) || _8118_ok;
	}
	jule::Bool _8914_ok;
	jule::Bool _8922_exist;
	std::tie(_8914_ok,_8922_exist) = _157e34740_check_arch(_5113_a1);
	if (_8922_exist) {
		if ((!(_8914_ok))) {
			return false;
		}
		jule::Bool _9414_ok;
		jule::Bool _9418_exist;
		std::tie(_9414_ok,_9418_exist) = _157e34740_check_os(_5413_a2);
		return (!(_9418_exist)) || _9414_ok;
	}
	std::tie(_8914_ok,_8922_exist) = _157e34740_check_os(_5113_a1);
	return (!(_8922_exist)) || _8914_ok;
}



inline jule::Str _157e34dc0_logf(jule::Str _24813_fmt,jule::Slice<jule::Any> _24826_args) {
	return _157e34dc0_apply_fmt(_24813_fmt,_24826_args);
}



inline jule::Str _157e34dc0_arg_to_str(jule::Any _25215_arg) {
	{
		auto _match_expr{ _25215_arg };
		if (!(_match_expr.type_is<jule::Str>())) { goto _case_end_5672598384; }
		_case_begin_5672598384:;
		{
			return _25215_arg.operator jule::Str();
		}
		goto _match_end_5672596288;
		_case_end_5672598384:;
		if (!(_match_expr.type_is<jule::U8>())) { goto _case_end_5672598496; }
		_case_begin_5672598496:;
		{
			return static_cast<jule::Str>(_25215_arg.operator jule::U8());
		}
		goto _match_end_5672596288;
		_case_end_5672598496:;
		if (!(_match_expr.type_is<jule::I32>())) { goto _case_end_5672598608; }
		_case_begin_5672598608:;
		{
			return static_cast<jule::Str>(_25215_arg.operator jule::I32());
		}
		goto _match_end_5672596288;
		_case_end_5672598608:;
		_case_begin_5672595408:;
		{
			return jule::Str("<fmt?>", 6);
		}
		goto _match_end_5672596288;
		_case_end_5672595408:;
		_match_end_5672596288:;
	}
}



inline jule::Int _157e34dc0_find_next_fmt(jule::Str _26118_fmt) {
	{
		auto __julec_range_expr = _26118_fmt;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _157e34dc0_i = 0;
			jule::U8 _157e34dc0_b = *__julec_range_begin;
			_iter_begin_5672602064:;
			{
				if (_157e34dc0_b == '@') {
					return _157e34dc0_i;
				}
			}
			_iter_next_5672602064:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_157e34dc0_i; _157e34dc0_b = *__julec_range_begin; goto _iter_begin_5672602064; }
			_iter_end_5672602064:;
		}
	}
	return -1LL;
}



inline jule::Str _157e34dc0_apply_fmt(jule::Str _27018_fmt,jule::Slice<jule::Any> _27028_args) {
	jule::Str _27113_s = jule::Str("", 0);
	{
		auto __julec_range_expr = _27028_args;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Any _157e34dc0_arg = *__julec_range_begin;
			_iter_begin_5672607184:;
			{
				jule::Int _27413_i = _157e34dc0_find_next_fmt(_27018_fmt);
				if (_27413_i == -1LL) {
					goto _iter_end_5672607184;
				}
				_27113_s+=_27018_fmt.slice(0LL,static_cast<jule::Int>(_27413_i));
				_27113_s+=_157e34dc0_arg_to_str(_157e34dc0_arg);
				_27018_fmt=_27018_fmt.slice(static_cast<jule::Int>(_27413_i + 1LL));
			}
			_iter_next_5672607184:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _157e34dc0_arg = *__julec_range_begin; goto _iter_begin_5672607184; }
			_iter_end_5672607184:;
		}
	}
	_27113_s+=_27018_fmt;
	return _27113_s;
}



inline jule::Bool _157eaaf20_is_top_directive(jule::Str _3625_directive) {
	return (_3625_directive == jule::Str("pass", 4)) || (_3625_directive == jule::Str("build", 5));
}



inline jule::Bool _157eacb90_is_windows(jule::Str _5119_os) {
	return _5119_os == jule::Str("windows", 7);
}



inline jule::Bool _157eacb90_is_darwin(jule::Str _5318_os) {
	return _5318_os == jule::Str("darwin", 6);
}



inline jule::Bool _157eacb90_is_linux(jule::Str _5517_os) {
	return _5517_os == jule::Str("linux", 5);
}



inline jule::Bool _157eacb90_is_i386(jule::Str _5716_arch) {
	return _5716_arch == jule::Str("i386", 4);
}



inline jule::Bool _157eacb90_is_amd64(jule::Str _5917_arch) {
	return _5917_arch == jule::Str("amd64", 5);
}



inline jule::Bool _157eacb90_is_arm64(jule::Str _6117_arch) {
	return _6117_arch == jule::Str("arm64", 5);
}



inline jule::Bool _157eacb90_is_unix(jule::Str _6316_os) {
	return _157eacb90_is_darwin(_6316_os) || _157eacb90_is_linux(_6316_os);
}



inline jule::Bool _157eacb90_is_32bit(jule::Str _6517_arch) {
	return _157eacb90_is_i386(_6517_arch);
}



inline jule::Bool _157eacb90_is_64bit(jule::Str _6717_arch) {
	return _157eacb90_is_amd64(_6717_arch) || _157eacb90_is_arm64(_6717_arch);
}



inline void _157eb0090_exit_err(jule::Str _2513_msg) {
	
	jule::outln(_2513_msg);
	_147ecb750_exit(1LL);
}



inline void _157eb0090_init(void) {
	jule::Str _3313_path = _147ecb750_executable();
	if (_3313_path == jule::Str("", 0)) {
		_157eb0090_exit_err(jule::Str("std::jule::build: executable file cannot found", 46));
	}
	jule::Str _3810_pwd;
	jule::Int _3815_err;
	std::tie(_3810_pwd,_3815_err) = _147e65dd0_working_dir();
	if (_3815_err != 0LLU) {
		_157eb0090_exit_err(jule::Str("std::jule::build: working directory path cannot found", 53));
	}
	jule::Str _439_path_exec = _147e135c0_dir(_3313_path);
	_3313_path=_147e135c0_join(jule::Slice<jule::Str>({_439_path_exec,jule::Str("..", 2)}));
	{
		(*((&(_157eb0090_PATH_WD))))=_3810_pwd;
		(*((&(_157eb0090_PATH_EXEC))))=_439_path_exec;
		(*((&(_157eb0090_PATH_STDLIB))))=_147e135c0_join(jule::Slice<jule::Str>({_3313_path,jule::Str("std", 3)}));
		(*((&(_157eb0090_PATH_API))))=_147e135c0_join(jule::Slice<jule::Str>({_157eb0090_PATH_EXEC,jule::Str("..", 2)}));
		(*((&(_157eb0090_PATH_API))))=_147e135c0_join(jule::Slice<jule::Str>({_157eb0090_PATH_API,jule::Str("api", 3)}));
		(*((&(_157eb0090_PATH_API))))=_147e135c0_join(jule::Slice<jule::Str>({_157eb0090_PATH_API,jule::Str("jule.hpp", 8)}));
	}
}



inline jule::Bool _157ef3750_is_jule(jule::Str _2316_path) {
	return _147e135c0_ext(_2316_path) == jule::Str(".jule", 5);
}



inline jule::Int _1504d9830_get_last_fs_error(void) {
	jule::Int _739_err = _147e61090_get_last_errno();
	{
		auto _match_expr{ _739_err };
		if (!((13LL) == _match_expr)) { goto _case_end_5672678416; }
		_case_begin_5672678416:;
		{
			return 1LLU;
		}
		goto _match_end_5672676624;
		_case_end_5672678416:;
		if (!((5LL) == _match_expr)) { goto _case_end_5672678016; }
		_case_begin_5672678016:;
		{
			return 2LLU;
		}
		goto _match_end_5672676624;
		_case_end_5672678016:;
		if (!((40LL) == _match_expr)) { goto _case_end_5672678128; }
		_case_begin_5672678128:;
		{
			return 3LLU;
		}
		goto _match_end_5672676624;
		_case_end_5672678128:;
		if (!((36LL) == _match_expr)) { goto _case_end_5672678240; }
		_case_begin_5672678240:;
		{
			return 4LLU;
		}
		goto _match_end_5672676624;
		_case_end_5672678240:;
		if (!((2LL) == _match_expr)) { goto _case_end_5672677456; }
		_case_begin_5672677456:;
		{
			return 5LLU;
		}
		goto _match_end_5672676624;
		_case_end_5672677456:;
		if (!((20LL) == _match_expr)) { goto _case_end_5672677568; }
		_case_begin_5672677568:;
		{
			return 6LLU;
		}
		goto _match_end_5672676624;
		_case_end_5672677568:;
		if (!((75LL) == _match_expr)) { goto _case_end_5672677680; }
		_case_begin_5672677680:;
		{
			return 7LLU;
		}
		goto _match_end_5672676624;
		_case_end_5672677680:;
		if (!((9LL) == _match_expr)) { goto _case_end_5672678624; }
		_case_begin_5672678624:;
		{
			return 8LLU;
		}
		goto _match_end_5672676624;
		_case_end_5672678624:;
		if (!((24LL) == _match_expr)) { goto _case_end_5672678736; }
		_case_begin_5672678736:;
		{
			return 9LLU;
		}
		goto _match_end_5672676624;
		_case_end_5672678736:;
		if (!((23LL) == _match_expr)) { goto _case_end_5672678848; }
		_case_begin_5672678848:;
		{
			return 10LLU;
		}
		goto _match_end_5672676624;
		_case_end_5672678848:;
		if (!((12LL) == _match_expr)) { goto _case_end_5672679584; }
		_case_begin_5672679584:;
		{
			return 11LLU;
		}
		goto _match_end_5672676624;
		_case_end_5672679584:;
		if (!((17LL) == _match_expr)) { goto _case_end_5672679696; }
		_case_begin_5672679696:;
		{
			return 12LLU;
		}
		goto _match_end_5672676624;
		_case_end_5672679696:;
		if (!((4LL) == _match_expr)) { goto _case_end_5672679808; }
		_case_begin_5672679808:;
		{
			return 13LLU;
		}
		goto _match_end_5672676624;
		_case_end_5672679808:;
		if (!((22LL) == _match_expr)) { goto _case_end_5672679920; }
		_case_begin_5672679920:;
		{
			return 14LLU;
		}
		goto _match_end_5672676624;
		_case_end_5672679920:;
		if (!((21LL) == _match_expr)) { goto _case_end_5672680032; }
		_case_begin_5672680032:;
		{
			return 15LLU;
		}
		goto _match_end_5672676624;
		_case_end_5672680032:;
		if (!((63LL) == _match_expr)) { goto _case_end_5672680144; }
		_case_begin_5672680144:;
		{
			return 16LLU;
		}
		goto _match_end_5672676624;
		_case_end_5672680144:;
		if (!((28LL) == _match_expr)) { goto _case_end_5672680256; }
		_case_begin_5672680256:;
		{
			return 17LLU;
		}
		goto _match_end_5672676624;
		_case_end_5672680256:;
		if (!((6LL) == _match_expr)) { goto _case_end_5672680368; }
		_case_begin_5672680368:;
		{
			return 18LLU;
		}
		goto _match_end_5672676624;
		_case_end_5672680368:;
		if (!((30LL) == _match_expr)) { goto _case_end_5672680480; }
		_case_begin_5672680480:;
		{
			return 19LLU;
		}
		goto _match_end_5672676624;
		_case_end_5672680480:;
		if (!((11LL) == _match_expr)) { goto _case_end_5672680592; }
		_case_begin_5672680592:;
		{
			return 20LLU;
		}
		goto _match_end_5672676624;
		_case_end_5672680592:;
		if (!((26LL) == _match_expr || (16LL) == _match_expr)) { goto _case_end_5672680704; }
		_case_begin_5672680704:;
		{
			return 21LLU;
		}
		goto _match_end_5672676624;
		_case_end_5672680704:;
		if (!((27LL) == _match_expr)) { goto _case_end_5672680816; }
		_case_begin_5672680816:;
		{
			return 22LLU;
		}
		goto _match_end_5672676624;
		_case_end_5672680816:;
		if (!((32LL) == _match_expr)) { goto _case_end_5672680928; }
		_case_begin_5672680928:;
		{
			return 23LLU;
		}
		goto _match_end_5672676624;
		_case_end_5672680928:;
		if (!((34LL) == _match_expr)) { goto _case_end_5672681056; }
		_case_begin_5672681056:;
		{
			return 24LLU;
		}
		goto _match_end_5672676624;
		_case_end_5672681056:;
		if (!((29LL) == _match_expr)) { goto _case_end_5672681184; }
		_case_begin_5672681184:;
		{
			return 25LLU;
		}
		goto _match_end_5672676624;
		_case_end_5672681184:;
		if (!((105LL) == _match_expr)) { goto _case_end_5672681312; }
		_case_begin_5672681312:;
		{
			return 26LLU;
		}
		goto _match_end_5672676624;
		_case_end_5672681312:;
		if (!((74LL) == _match_expr)) { goto _case_end_5672681440; }
		_case_begin_5672681440:;
		{
			return 27LLU;
		}
		goto _match_end_5672676624;
		_case_end_5672681440:;
		if (!((39LL) == _match_expr)) { goto _case_end_5672681568; }
		_case_begin_5672681568:;
		{
			return 28LLU;
		}
		goto _match_end_5672676624;
		_case_end_5672681568:;
		_case_begin_5672677152:;
		{
			return 0LLU;
		}
		goto _match_end_5672676624;
		_case_end_5672677152:;
		_match_end_5672676624:;
	}
}



inline std::tuple<jule::Ref<_150562500_File>,jule::Int> _1504da380_open(jule::Str _1813_path,jule::Int _1824_flag,jule::Int _1837_mode) {
	jule::Int _199_handle = _147e787d0_open((&(_1813_path[0LL])),static_cast<jule::Int>(_1824_flag),_1837_mode);
	if (_199_handle == -1LL) {
		return std::make_tuple(jule::new_ref<_150562500_File>(),_1504d9830_get_last_fs_error());
	}
	return std::make_tuple(jule::new_struct<_150562500_File>(new( std::nothrow ) _150562500_File(_199_handle)),0LLU);
}



inline jule::Int _1504da380_remove_file(jule::Str _3020_path) {
	if (_147e787d0_unlink((&(_3020_path[0LL]))) == 0LL) {
		return 0LLU;
	}
	return _1504d9830_get_last_fs_error();
}



inline std::tuple<jule::Ref<_1505f1a60_Status>,jule::Int> _15053fb30_stat(jule::Str _1113_path) {
	jule::Int _1138_err = 0LLU;
	jule::Ref<_1505f1a60_Status> _1126_s = jule::Ref<_1505f1a60_Status>();
	struct stat _1213_handle = (struct stat){};
	jule::Int _139_code = _147e787d0_stat((&(_1113_path[0LL])),(&(_1213_handle)));
	if (_139_code != -1LL) {
		_1138_err=0LLU;
		_1126_s=jule::new_struct<_1505f1a60_Status>(new( std::nothrow ) _1505f1a60_Status(static_cast<jule::Uint>(_1213_handle.st_mode),static_cast<jule::Uint>(_1213_handle.st_size)));
	} else {
		_1138_err=_1504d9830_get_last_fs_error();
	}
	return std::make_tuple(_1126_s,_1138_err);
}



inline std::tuple<jule::Slice<jule::U8>,jule::Int> _150562500_read_file(jule::Str _12118_path) {
	jule::Ref<_1505f1a60_Status> _12210_s;
	jule::Int _12217_err;
	std::tie(_12210_s,_12217_err) = _15053fb30_stat(_12118_path);
	if (_12217_err != 0LLU) {
		return std::make_tuple(nullptr,_12217_err);
	}
	if ((!(_12210_s->_method_is_reg()))) {
		return std::make_tuple(nullptr,15LLU);
	}
	if (_12210_s->_field_size == 0LL) {
		return std::make_tuple(jule::Slice<jule::U8>::alloc(0LL),0LLU);
	}
	jule::Ref<_150562500_File> _13514_f;
	std::tie(_13514_f,_12217_err) = _1504da380_open(_12118_path,0LL,0LL);
	if (_12217_err != 0LLU) {
		return std::make_tuple(nullptr,_12217_err);
	}
	__JULE_DEFER({
		_13514_f->_method_close();
	});
	jule::Slice<jule::U8> _14113_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::Int>(_12210_s->_field_size));
	jule::Int _14210_n;
	std::tie(_14210_n,_12217_err) = _13514_f->_method_read(_14113_buff);
	if (_12217_err != 0LLU) {
		return std::make_tuple(nullptr,_12217_err);
	}
	return std::make_tuple(_14113_buff.slice(0LL,static_cast<jule::Int>(_14210_n)),0LLU);
}



inline std::tuple<jule::Slice<jule::Ref<_15053ceb0_DirEntry>>,jule::Int> _150643f90_read_dir(jule::Str _2117_path) {
	jule::Int _2152_err = 0LLU;
	jule::Slice<jule::Ref<_15053ceb0_DirEntry>> _2130_dirents = jule::Slice<jule::Ref<_15053ceb0_DirEntry>>();
	DIR* _2213_dir = _147e787d0_opendir((&(_2117_path[0LL])));
	if (_2213_dir == nullptr) {
		_2152_err=_1504d9830_get_last_fs_error();
		return std::make_tuple(_2130_dirents,_2152_err);
	}
	_iter_begin_5672736624:;
	{
		struct dirent* _2813_dirent = _147e787d0_readdir(_2213_dir);
		if (_2813_dirent == nullptr) {
			goto _iter_end_5672736624;
		}
		jule::Str _3213_name = _147e787d0_byte_ptr_to_str(((jule::U8*)(_2813_dirent->d_name)));
		jule::Ref<_1505f1a60_Status> _3314_stat;
		jule::Int _3320_serr;
		std::tie(_3314_stat,_3320_serr) = _15053fb30_stat(_147e135c0_join(jule::Slice<jule::Str>({_2117_path,_3213_name})));
		if (_3320_serr != 0LLU) {
			_2152_err=_3320_serr;
			_2130_dirents=nullptr;
			goto _iter_end_5672736624;
		}
		_2130_dirents=jule::append(_2130_dirents,jule::Slice<jule::Ref<_15053ceb0_DirEntry>>({jule::new_struct<_15053ceb0_DirEntry>(new( std::nothrow ) _15053ceb0_DirEntry(_3213_name,_3314_stat))}));
	}
	_iter_next_5672736624:;
	goto _iter_begin_5672736624;
	_iter_end_5672736624:;
	_147e787d0_closedir(_2213_dir);
	return std::make_tuple(_2130_dirents,_2152_err);
}



inline jule::Int _150643f90_create_dir(jule::Str _5119_path) {
	if (_147e787d0_mkdir((&(_5119_path[0LL])),448LL) == 0LL) {
		return 0LLU;
	}
	return _1504d9830_get_last_fs_error();
}



inline jule::Int _150643f90_remove_dir(jule::Str _6419_path) {
	if (_147e787d0_rmdir((&(_6419_path[0LL]))) == 0LL) {
		return 0LLU;
	}
	return _1504d9830_get_last_fs_error();
}



inline jule::Bool _15081f100_full_rune(jule::Slice<jule::U8> _13718_p) {
	if (_13718_p.len() == 0LL) {
		return false;
	}
	jule::U8 _1419_x = _15081f100_FIRST[static_cast<jule::Int>(_13718_p[0LL])];
	if (_13718_p.len() >= static_cast<jule::Int>(_1419_x & 7LL)) {
		return true;
	}
	_15081f100_accept_range _1469_accept = _15081f100_ACCEPT_RANGES[static_cast<jule::Int>(_1419_x >> 4LL)];
	if ((_13718_p.len() > 1LL) && ((_13718_p[1LL] < _1469_accept._field_lo) || (_1469_accept._field_hi < _13718_p[1LL]))) {
		return true;
	} else if ((_13718_p.len() > 2LL) && ((_13718_p[2LL] < 128LL) || (191LL < _13718_p[2LL]))) {
		return true;
	}
	return false;
}



inline jule::Bool _15081f100_full_rune_str(jule::Str _15622_s) {
	if (_15622_s.len() == 0LL) {
		return false;
	}
	jule::U8 _1609_x = _15081f100_FIRST[static_cast<jule::Int>(_15622_s[0LL])];
	if (_15622_s.len() >= static_cast<jule::Int>(_1609_x & 7LL)) {
		return true;
	}
	_15081f100_accept_range _1659_accept = _15081f100_ACCEPT_RANGES[static_cast<jule::Int>(_1609_x >> 4LL)];
	if ((_15622_s.len() > 1LL) && ((_15622_s[1LL] < _1659_accept._field_lo) || (_1659_accept._field_hi < _15622_s[1LL]))) {
		return true;
	} else if ((_15622_s.len() > 2LL) && ((_15622_s[2LL] < 128LL) || (191LL < _15622_s[2LL]))) {
		return true;
	}
	return false;
}



inline std::tuple<jule::I32,jule::Int> _15081f100_decode_rune(jule::Slice<jule::U8> _18220_p) {
	jule::Int _18242_size = jule::Int();
	jule::I32 _18233_r = jule::I32();
	if (_18220_p.len() < 1LL) {
		_18233_r = 65533LL;
		_18242_size = 0LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _1869_p0 = _18220_p[0LL];
	jule::U8 _1879_x = _15081f100_FIRST[static_cast<jule::Int>(_1869_p0)];
	if (_1879_x >= 240LL) {
		jule::I32 _19213_mask = static_cast<jule::U8>((_1879_x << 31LL) >> 31LL);
		_18233_r = static_cast<jule::I32>((static_cast<jule::I32>(_18220_p[0LL]) & (~(_19213_mask))) | (65533LL & _19213_mask));
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::Int _1959_sz = static_cast<jule::Int>(_1879_x & 7LL);
	_15081f100_accept_range _1969_accept = _15081f100_ACCEPT_RANGES[static_cast<jule::Int>(_1879_x >> 4LL)];
	if (_18220_p.len() < _1959_sz) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _2009_b1 = _18220_p[1LL];
	if ((_2009_b1 < _1969_accept._field_lo) || (_1969_accept._field_hi < _2009_b1)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	if (_1959_sz <= 2LL) {
		_18233_r = static_cast<jule::I32>((static_cast<jule::I32>(_1869_p0 & 31LL) << 6LL) | static_cast<jule::I32>(_2009_b1 & 63LL));
		_18242_size = 2LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _2079_b2 = _18220_p[2LL];
	if ((_2079_b2 < 128LL) || (191LL < _2079_b2)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	if (_1959_sz <= 3LL) {
		_18233_r = static_cast<jule::I32>(((static_cast<jule::I32>(_1869_p0 & 15LL) << 12LL) | (static_cast<jule::I32>(_2009_b1 & 63LL) << 6LL)) | static_cast<jule::I32>(_2079_b2 & 63LL));
		_18242_size = 3LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _2149_b3 = _18220_p[3LL];
	if ((_2149_b3 < 128LL) || (191LL < _2149_b3)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	_18233_r = static_cast<jule::I32>((((static_cast<jule::I32>(_1869_p0 & 7LL) << 18LL) | (static_cast<jule::I32>(_2009_b1 & 63LL) << 12LL)) | (static_cast<jule::I32>(_2079_b2 & 63LL) << 6LL)) | static_cast<jule::I32>(_2149_b3 & 63LL));
	_18242_size = 4LL;
	return std::make_tuple(_18233_r,_18242_size);
}



inline std::tuple<jule::I32,jule::Int> _15081f100_decode_rune_str(jule::Str _22924_s) {
	jule::Int _22943_size = jule::Int();
	jule::I32 _22934_r = jule::I32();
	if (_22924_s.len() < 1LL) {
		_22934_r = 65533LL;
		_22943_size = 0LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	jule::U8 _2339_s0 = _22924_s[0LL];
	jule::U8 _2349_x = _15081f100_FIRST[static_cast<jule::Int>(_2339_s0)];
	if (_2349_x >= 240LL) {
		jule::I32 _23913_mask = static_cast<jule::U8>((_2349_x << 31LL) >> 31LL);
		_22934_r = static_cast<jule::I32>((static_cast<jule::I32>(_22924_s[0LL]) & (~(_23913_mask))) | (65533LL & _23913_mask));
		_22943_size = 1LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	jule::Int _2429_sz = static_cast<jule::Int>(_2349_x & 7LL);
	_15081f100_accept_range _2439_accept = _15081f100_ACCEPT_RANGES[static_cast<jule::Int>(_2349_x >> 4LL)];
	if (_22924_s.len() < _2429_sz) {
		_22934_r = 65533LL;
		_22943_size = 1LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	jule::U8 _2479_s1 = _22924_s[1LL];
	if ((_2479_s1 < _2439_accept._field_lo) || (_2439_accept._field_hi < _2479_s1)) {
		_22934_r = 65533LL;
		_22943_size = 1LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	if (_2429_sz <= 2LL) {
		_22934_r = static_cast<jule::I32>((static_cast<jule::I32>(_2339_s0 & 31LL) << 6LL) | static_cast<jule::I32>(_2479_s1 & 63LL));
		_22943_size = 2LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	jule::U8 _2549_s2 = _22924_s[2LL];
	if ((_2549_s2 < 128LL) || (191LL < _2549_s2)) {
		_22934_r = 65533LL;
		_22943_size = 1LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	if (_2429_sz <= 3LL) {
		_22934_r = static_cast<jule::I32>(((static_cast<jule::I32>(_2339_s0 & 15LL) << 12LL) | (static_cast<jule::I32>(_2479_s1 & 63LL) << 6LL)) | static_cast<jule::I32>(_2549_s2 & 63LL));
		_22943_size = 3LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	jule::U8 _2619_s3 = _22924_s[3LL];
	if ((_2619_s3 < 128LL) || (191LL < _2619_s3)) {
		_22934_r = 65533LL;
		_22943_size = 1LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	_22934_r = static_cast<jule::I32>((((static_cast<jule::I32>(_2339_s0 & 7LL) << 18LL) | (static_cast<jule::I32>(_2479_s1 & 63LL) << 12LL)) | (static_cast<jule::I32>(_2549_s2 & 63LL) << 6LL)) | static_cast<jule::I32>(_2619_s3 & 63LL));
	_22943_size = 4LL;
	return std::make_tuple(_22934_r,_22943_size);
}



inline std::tuple<jule::I32,jule::Int> _15081f100_decode_last_rune(jule::Slice<jule::U8> _27625_p) {
	jule::Int _27647_size = jule::Int();
	jule::I32 _27638_r = jule::I32();
	if (_27625_p.len() == 0LL) {
		_27638_r = 65533LL;
		_27647_size = 0LL;
		return std::make_tuple(_27638_r,_27647_size);
	}
	jule::I64 _2809_end = _27625_p.len();
	jule::I64 _28113_start = _2809_end - 1LL;
	_27638_r=static_cast<jule::I32>(_27625_p[static_cast<jule::Int>(_28113_start)]);
	if (_27638_r < 128LL) {
		_27638_r = _27638_r;
		_27647_size = 1LL;
		return std::make_tuple(_27638_r,_27647_size);
	}
	jule::I64 _28913_lim = _2809_end - 4LL;
	if (_28913_lim < 0LL) {
		_28913_lim=0LL;
	}
	(_28113_start)--;
	_iter_begin_5672970768:;
	if (!(_28113_start >= _28913_lim)) { goto _iter_end_5672970768; }
	{
		if (_15081f100_rune_start(_27625_p[static_cast<jule::Int>(_28113_start)])) {
			goto _iter_end_5672970768;
		}
	}
	_iter_next_5672970768:;
	(_28113_start)--;
	goto _iter_begin_5672970768;
	_iter_end_5672970768:;
	if (_28113_start < 0LL) {
		_28113_start=0LL;
	}
	std::tie(_27638_r,_27647_size) = _15081f100_decode_rune(_27625_p.slice(static_cast<jule::Int>(_28113_start),static_cast<jule::Int>(_2809_end)));
	if ((_28113_start + _27647_size) != _2809_end) {
		_27638_r = 65533LL;
		_27647_size = 1LL;
		return std::make_tuple(_27638_r,_27647_size);
	}
	_27638_r = _27638_r;
	_27647_size = _27647_size;
	return std::make_tuple(_27638_r,_27647_size);
}



inline std::tuple<jule::I32,jule::Int> _15081f100_decode_last_rune_str(jule::Str _31729_s) {
	jule::Int _31748_size = jule::Int();
	jule::I32 _31739_r = jule::I32();
	if (_31729_s.len() == 0LL) {
		_31739_r = 65533LL;
		_31748_size = 0LL;
		return std::make_tuple(_31739_r,_31748_size);
	}
	jule::I64 _3219_end = _31729_s.len();
	jule::I64 _32213_start = _3219_end - 1LL;
	_31739_r=static_cast<jule::I32>(_31729_s[static_cast<jule::Int>(_32213_start)]);
	if (_31739_r < 128LL) {
		_31739_r = _31739_r;
		_31748_size = 1LL;
		return std::make_tuple(_31739_r,_31748_size);
	}
	jule::I64 _33013_lim = _3219_end - 4LL;
	if (_33013_lim < 0LL) {
		_33013_lim=0LL;
	}
	(_32213_start)--;
	_iter_begin_5672988208:;
	if (!(_32213_start >= _33013_lim)) { goto _iter_end_5672988208; }
	{
		if (_15081f100_rune_start(_31729_s[static_cast<jule::Int>(_32213_start)])) {
			goto _iter_end_5672988208;
		}
	}
	_iter_next_5672988208:;
	(_32213_start)--;
	goto _iter_begin_5672988208;
	_iter_end_5672988208:;
	if (_32213_start < 0LL) {
		_32213_start=0LL;
	}
	std::tie(_31739_r,_31748_size) = _15081f100_decode_rune_str(_31729_s.slice(static_cast<jule::Int>(_32213_start),static_cast<jule::Int>(_3219_end)));
	if ((_32213_start + _31748_size) != _3219_end) {
		_31739_r = 65533LL;
		_31748_size = 1LL;
		return std::make_tuple(_31739_r,_31748_size);
	}
	_31739_r = _31739_r;
	_31748_size = _31748_size;
	return std::make_tuple(_31739_r,_31748_size);
}



inline jule::Int _15081f100_rune_len(jule::I32 _35217_r) {
	{
		if (!((_35217_r < 0LL))) { goto _case_end_5672997008; }
		_case_begin_5672997008:;
		{
			return -1LL;
		}
		goto _match_end_5672994592;
		_case_end_5672997008:;
		if (!((_35217_r <= 127LLU))) { goto _case_end_5672997280; }
		_case_begin_5672997280:;
		{
			return 1LL;
		}
		goto _match_end_5672994592;
		_case_end_5672997280:;
		if (!((_35217_r <= 2047LL))) { goto _case_end_5672997392; }
		_case_begin_5672997392:;
		{
			return 2LL;
		}
		goto _match_end_5672994592;
		_case_end_5672997392:;
		if (!(((55296LL <= _35217_r) && (_35217_r <= 57343LL)))) { goto _case_end_5672997504; }
		_case_begin_5672997504:;
		{
			return -1LL;
		}
		goto _match_end_5672994592;
		_case_end_5672997504:;
		if (!((_35217_r <= 65535LL))) { goto _case_end_5672996496; }
		_case_begin_5672996496:;
		{
			return 3LL;
		}
		goto _match_end_5672994592;
		_case_end_5672996496:;
		if (!((_35217_r <= 1114111LL))) { goto _case_end_5672996608; }
		_case_begin_5672996608:;
		{
			return 4LL;
		}
		goto _match_end_5672994592;
		_case_end_5672996608:;
		_case_begin_5672995488:;
		{
			return -1LL;
		}
		goto _match_end_5672994592;
		_case_end_5672995488:;
		_match_end_5672994592:;
	}
}



inline jule::Int _15081f100_encode_rune(jule::Slice<jule::U8> _36724_p,jule::I32 _36739_r) {
	jule::U32 _3699_i = static_cast<jule::U32>(_36739_r);
	{
		if (!((_3699_i <= 127LLU))) { goto _case_end_5673009552; }
		_case_begin_5673009552:;
		{
			_36724_p[0LL]=static_cast<jule::U8>(_36739_r);
			return 1LL;
		}
		goto _match_end_5673003824;
		_case_end_5673009552:;
		if (!((_3699_i <= 2047LL))) { goto _case_end_5673004304; }
		_case_begin_5673004304:;
		{
			_36724_p[0LL]=static_cast<jule::U8>(192LL | static_cast<jule::U8>(_36739_r >> 6LL));
			_36724_p[1LL]=static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_36739_r) & 63LL));
			return 2LL;
		}
		goto _match_end_5673003824;
		_case_end_5673004304:;
		if (!((_3699_i > 1114111LL) || ((55296LL <= _3699_i) && (_3699_i <= 57343LL)))) { goto _case_end_5673004416; }
		_case_begin_5673004416:;
		{
			_36739_r=65533LL;
			goto _case_begin_5673004528;
		}
		goto _match_end_5673003824;
		_case_end_5673004416:;
		if (!((_3699_i <= 65535LL))) { goto _case_end_5673004528; }
		_case_begin_5673004528:;
		{
			_36724_p[0LL]=static_cast<jule::U8>(224LL | static_cast<jule::U8>(_36739_r >> 12LL));
			_36724_p[1LL]=static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_36739_r >> 6LL) & 63LL));
			_36724_p[2LL]=static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_36739_r) & 63LL));
			return 3LL;
		}
		goto _match_end_5673003824;
		_case_end_5673004528:;
		_case_begin_5673004000:;
		{
			_36724_p[0LL]=static_cast<jule::U8>(240LL | static_cast<jule::U8>(_36739_r >> 18LL));
			_36724_p[1LL]=static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_36739_r >> 12LL) & 63LL));
			_36724_p[2LL]=static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_36739_r >> 6LL) & 63LL));
			_36724_p[3LL]=static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_36739_r) & 63LL));
			return 4LL;
		}
		goto _match_end_5673003824;
		_case_end_5673004000:;
		_match_end_5673003824:;
	}
}



inline jule::Slice<jule::U8> _15081f100_append_rune(jule::Slice<jule::U8> _39824_p,jule::I32 _39835_r) {
	if (static_cast<jule::U32>(_39835_r) <= 127LLU) {
		return jule::append(_39824_p,jule::Slice<jule::U8>({static_cast<jule::U8>(_39835_r)}));
	}
	return _15081f100_append_rune_non_ascii(_39824_p,_39835_r);
}



inline jule::Slice<jule::U8> _15081f100_append_rune_non_ascii(jule::Slice<jule::U8> _40530_p,jule::I32 _40545_r) {
	jule::U32 _4079_i = static_cast<jule::U32>(_40545_r);
	{
		if (!((_4079_i <= 2047LL))) { goto _case_end_5673027008; }
		_case_begin_5673027008:;
		{
			return jule::append(_40530_p,jule::Slice<jule::U8>({static_cast<jule::U8>(192LL | static_cast<jule::U8>(_40545_r >> 6LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r) & 63LL))}));
		}
		goto _match_end_5673026544;
		_case_end_5673027008:;
		if (!((_4079_i > 1114111LL) || ((55296LL <= _4079_i) && (_4079_i <= 57343LL)))) { goto _case_end_5673027120; }
		_case_begin_5673027120:;
		{
			_40545_r=65533LL;
			goto _case_begin_5673027232;
		}
		goto _match_end_5673026544;
		_case_end_5673027120:;
		if (!((_4079_i <= 65535LL))) { goto _case_end_5673027232; }
		_case_begin_5673027232:;
		{
			return jule::append(_40530_p,jule::Slice<jule::U8>({static_cast<jule::U8>(224LL | static_cast<jule::U8>(_40545_r >> 12LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r >> 6LL) & 63LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r) & 63LL))}));
		}
		goto _match_end_5673026544;
		_case_end_5673027232:;
		_case_begin_5673026704:;
		{
			return jule::append(_40530_p,jule::Slice<jule::U8>({static_cast<jule::U8>(240LL | static_cast<jule::U8>(_40545_r >> 18LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r >> 12LL) & 63LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r >> 6LL) & 63LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r) & 63LL))}));
		}
		goto _match_end_5673026544;
		_case_end_5673026704:;
		_match_end_5673026544:;
	}
}



inline jule::Int _15081f100_rune_count(jule::Slice<jule::U8> _42319_p) {
	jule::Int _42332_n = jule::Int();
	jule::Int _42413_i = 0LL;
	_iter_begin_5673027808:;
	if (!(_42413_i < _42319_p.len())) { goto _iter_end_5673027808; }
	{
		(_42332_n)++;
		jule::U8 _42717_c = _42319_p[static_cast<jule::Int>(_42413_i)];
		if (_42717_c < 128LL) {
			(_42413_i)++;
			goto _iter_next_5673027808;
		}
		jule::U8 _43313_x = _15081f100_FIRST[static_cast<jule::Int>(_42717_c)];
		if (_43313_x == 241LL) {
			(_42413_i)++;
			goto _iter_next_5673027808;
		}
		jule::Int _43817_size = static_cast<jule::Int>(_43313_x & 7LL);
		if ((_42413_i + _43817_size) > _42319_p.len()) {
			(_42413_i)++;
			goto _iter_next_5673027808;
		}
		_15081f100_accept_range _44313_accept = _15081f100_ACCEPT_RANGES[static_cast<jule::Int>(_43313_x >> 4LL)];
		_42717_c=_42319_p[static_cast<jule::Int>(_42413_i + 1LL)];
		if ((_42717_c < _44313_accept._field_lo) || (_44313_accept._field_hi < _42717_c)) {
			_43817_size=1LL;
		} else if (_43817_size == 2LL) {
		} else {
			_42717_c=_42319_p[static_cast<jule::Int>(_42413_i + 2LL)];
			if ((_42717_c < 128LL) || (191LL < _42717_c)) {
				_43817_size=1LL;
			} else if (_43817_size == 3LL) {
			} else {
				_42717_c=_42319_p[static_cast<jule::Int>(_42413_i + 3LL)];
				if ((_42717_c < 128LL) || (191LL < _42717_c)) {
					_43817_size=1LL;
				}
			}
		}
		_42413_i+=_43817_size;
	}
	_iter_next_5673027808:;
	goto _iter_begin_5673027808;
	_iter_end_5673027808:;
	_42332_n = _42332_n;
	return _42332_n;
}



inline jule::Int _15081f100_rune_count_str(jule::Str _46623_s) {
	jule::Int _46633_n = jule::Int();
	jule::Int _46713_i = 0LL;
	_iter_begin_5673062512:;
	if (!(_46713_i < _46623_s.len())) { goto _iter_end_5673062512; }
	{
		jule::U8 _46917_c = _46623_s[static_cast<jule::Int>(_46713_i)];
		if (_46917_c < 128LL) {
			(_46713_i)++;
			goto _iter_next_5673062512;
		}
		jule::U8 _47513_x = _15081f100_FIRST[static_cast<jule::Int>(_46917_c)];
		if (_47513_x == 241LL) {
			(_46713_i)++;
			goto _iter_next_5673062512;
		}
		jule::Int _48017_size = static_cast<jule::Int>(_47513_x & 7LL);
		if ((_46713_i + _48017_size) > _46623_s.len()) {
			(_46713_i)++;
			goto _iter_next_5673062512;
		}
		_15081f100_accept_range _48513_accept = _15081f100_ACCEPT_RANGES[static_cast<jule::Int>(_47513_x >> 4LL)];
		_46917_c=_46623_s[static_cast<jule::Int>(_46713_i + 1LL)];
		if ((_46917_c < _48513_accept._field_lo) || (_48513_accept._field_hi < _46917_c)) {
			_48017_size=1LL;
		} else if (_48017_size == 2LL) {
		} else {
			_46917_c=_46623_s[static_cast<jule::Int>(_46713_i + 2LL)];
			if ((_46917_c < 128LL) || (191LL < _46917_c)) {
				_48017_size=1LL;
			} else if (_48017_size == 3LL) {
			} else {
				_46917_c=_46623_s[static_cast<jule::Int>(_46713_i + 3LL)];
				if ((_46917_c < 128LL) || (191LL < _46917_c)) {
					_48017_size=1LL;
				}
			}
		}
		_46713_i+=_48017_size;
	}
	_iter_next_5673062512:;
	(_46633_n)++;
	goto _iter_begin_5673062512;
	_iter_end_5673062512:;
	_46633_n = _46633_n;
	return _46633_n;
}



inline jule::Bool _15081f100_rune_start(jule::U8 _51019_b) {
	return (_51019_b & 192LL) != 128LL;
}



inline jule::Bool _15081f100_valid(jule::Slice<jule::U8> _51314_p) {
	jule::Slice<jule::U8> _51613_cp = (*((&(_51314_p))));
	_iter_begin_5673082816:;
	if (!(_51613_cp.len() >= 8LL)) { goto _iter_end_5673082816; }
	{
		jule::U32 _52213_first32 = ((static_cast<jule::U32>(_51613_cp[0LL]) | (static_cast<jule::U32>(_51613_cp[1LL]) << 8LL)) | (static_cast<jule::U32>(_51613_cp[2LL]) << 16LL)) | (static_cast<jule::U32>(_51613_cp[3LL]) << 24LL);
		jule::U32 _52313_second32 = ((static_cast<jule::U32>(_51613_cp[4LL]) | (static_cast<jule::U32>(_51613_cp[5LL]) << 8LL)) | (static_cast<jule::U32>(_51613_cp[6LL]) << 16LL)) | (static_cast<jule::U32>(_51613_cp[7LL]) << 24LL);
		if (((_52213_first32 | _52313_second32) & 2155905152LL) != 0LL) {
			goto _iter_end_5673082816;
		}
		_51613_cp=_51613_cp.slice(8LL);
	}
	_iter_next_5673082816:;
	goto _iter_begin_5673082816;
	_iter_end_5673082816:;
	jule::Int _53013_i = 0LL;
	_iter_begin_5673093408:;
	if (!(_53013_i < _51613_cp.len())) { goto _iter_end_5673093408; }
	{
		jule::U8 _53213_pi = _51613_cp[static_cast<jule::Int>(_53013_i)];
		if (_53213_pi < 128LL) {
			(_53013_i)++;
			goto _iter_next_5673093408;
		}
		jule::U8 _53713_x = _15081f100_FIRST[static_cast<jule::Int>(_53213_pi)];
		if (_53713_x == 241LL) {
			return false;
		}
		jule::Int _54113_size = static_cast<jule::Int>(_53713_x & 7LL);
		if ((_53013_i + _54113_size) > _51613_cp.len()) {
			return false;
		}
		_15081f100_accept_range _54513_accept = _15081f100_ACCEPT_RANGES[static_cast<jule::Int>(_53713_x >> 4LL)];
		jule::U8 _54617_c = _51613_cp[static_cast<jule::Int>(_53013_i + 1LL)];
		if ((_54617_c < _54513_accept._field_lo) || (_54513_accept._field_hi < _54617_c)) {
			return false;
		} else if (_54113_size == 2LL) {
		} else {
			_54617_c=_51613_cp[static_cast<jule::Int>(_53013_i + 2LL)];
			if ((_54617_c < 128LL) || (191LL < _54617_c)) {
				return false;
			} else if (_54113_size == 3LL) {
			} else {
				_54617_c=_51613_cp[static_cast<jule::Int>(_53013_i + 3LL)];
				if ((_54617_c < 128LL) || (191LL < _54617_c)) {
					return false;
				}
			}
		}
		_53013_i+=_54113_size;
	}
	_iter_next_5673093408:;
	goto _iter_begin_5673093408;
	_iter_end_5673093408:;
	return true;
}



inline jule::Bool _15081f100_valid_str(jule::Str _56822_s) {
	_iter_begin_5673114256:;
	if (!(_56822_s.len() >= 8LL)) { goto _iter_end_5673114256; }
	{
		jule::U32 _57313_first32 = ((static_cast<jule::U32>(_56822_s[0LL]) | (static_cast<jule::U32>(_56822_s[1LL]) << 8LL)) | (static_cast<jule::U32>(_56822_s[2LL]) << 16LL)) | (static_cast<jule::U32>(_56822_s[3LL]) << 24LL);
		jule::U32 _57413_second32 = ((static_cast<jule::U32>(_56822_s[4LL]) | (static_cast<jule::U32>(_56822_s[5LL]) << 8LL)) | (static_cast<jule::U32>(_56822_s[6LL]) << 16LL)) | (static_cast<jule::U32>(_56822_s[7LL]) << 24LL);
		if (((_57313_first32 | _57413_second32) & 2155905152LL) != 0LL) {
			goto _iter_end_5673114256;
		}
		_56822_s=_56822_s.slice(8LL);
	}
	_iter_next_5673114256:;
	goto _iter_begin_5673114256;
	_iter_end_5673114256:;
	jule::Int _58113_i = 0LL;
	_iter_begin_5673125600:;
	if (!(_58113_i < _56822_s.len())) { goto _iter_end_5673125600; }
	{
		jule::U8 _58313_si = _56822_s[static_cast<jule::Int>(_58113_i)];
		if (_58313_si < 128LL) {
			(_58113_i)++;
			goto _iter_next_5673125600;
		}
		jule::U8 _58813_x = _15081f100_FIRST[static_cast<jule::Int>(_58313_si)];
		if (_58813_x == 241LL) {
			return false;
		}
		jule::Int _59213_size = static_cast<jule::Int>(_58813_x & 7LL);
		if ((_58113_i + _59213_size) > _56822_s.len()) {
			return false;
		}
		_15081f100_accept_range _59613_accept = _15081f100_ACCEPT_RANGES[static_cast<jule::Int>(_58813_x >> 4LL)];
		jule::U8 _59717_c = _56822_s[static_cast<jule::Int>(_58113_i + 1LL)];
		if ((_59717_c < _59613_accept._field_lo) || (_59613_accept._field_hi < _59717_c)) {
			return false;
		} else if (_59213_size == 2LL) {
		} else {
			_59717_c=_56822_s[static_cast<jule::Int>(_58113_i + 2LL)];
			if ((_59717_c < 128LL) || (191LL < _59717_c)) {
				return false;
			} else if (_59213_size == 3LL) {
			} else {
				_59717_c=_56822_s[static_cast<jule::Int>(_58113_i + 3LL)];
				if ((_59717_c < 128LL) || (191LL < _59717_c)) {
					return false;
				}
			}
		}
		_58113_i+=_59213_size;
	}
	_iter_next_5673125600:;
	goto _iter_begin_5673125600;
	_iter_end_5673125600:;
	return true;
}



inline jule::Bool _15081f100_valid_rune(jule::I32 _62019_r) {
	{
		if (!(((0LL <= _62019_r) && (_62019_r < 55296LL)))) { goto _case_end_5673147440; }
		_case_begin_5673147440:;
		{
			return true;
		}
		goto _match_end_5673146976;
		_case_end_5673147440:;
		if (!(((57343LL < _62019_r) && (_62019_r <= 1114111LL)))) { goto _case_end_5673147552; }
		_case_begin_5673147552:;
		{
			return true;
		}
		goto _match_end_5673146976;
		_case_end_5673147552:;
		_case_begin_5673147088:;
		{
			return false;
		}
		goto _match_end_5673146976;
		_case_end_5673147088:;
		_match_end_5673146976:;
	}
}



inline jule::Bool _150640f50_is_unary_op(jule::Str _31020_kind) {
	{
		auto __julec_range_expr = _150640f50_UNARY_OPS;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _150640f50_op = *__julec_range_begin;
			_iter_begin_5673528960:;
			{
				if (_31020_kind == _150640f50_op) {
					return true;
				}
			}
			_iter_next_5673528960:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _150640f50_op = *__julec_range_begin; goto _iter_begin_5673528960; }
			_iter_end_5673528960:;
		}
	}
	return false;
}



inline jule::Bool _150640f50_is_bin_op(jule::Str _32118_kind) {
	{
		auto __julec_range_expr = _150640f50_BIN_OPS;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _150640f50_op = *__julec_range_begin;
			_iter_begin_5673530560:;
			{
				if (_32118_kind == _150640f50_op) {
					return true;
				}
			}
			_iter_next_5673530560:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _150640f50_op = *__julec_range_begin; goto _iter_begin_5673530560; }
			_iter_end_5673530560:;
		}
	}
	return false;
}



inline jule::Bool _150640f50_is_weak_op(jule::Str _33219_kind) {
	{
		auto __julec_range_expr = _150640f50_WEAK_OPS;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _150640f50_op = *__julec_range_begin;
			_iter_begin_5673533248:;
			{
				if (_33219_kind == _150640f50_op) {
					return true;
				}
			}
			_iter_next_5673533248:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _150640f50_op = *__julec_range_begin; goto _iter_begin_5673533248; }
			_iter_end_5673533248:;
		}
	}
	return false;
}



inline jule::Bool _150640f50_is_str(jule::Str _34315_k) {
	return (_34315_k != jule::Str("", 0)) && ((_34315_k[0LL] == '\"') || _150640f50_is_raw_str(_34315_k));
}



inline jule::Bool _150640f50_is_raw_str(jule::Str _34519_k) {
	return (_34519_k != jule::Str("", 0)) && (_34519_k[0LL] == '`');
}



inline jule::Bool _150640f50_is_rune(jule::Str _34816_k) {
	return (_34816_k != jule::Str("", 0)) && (_34816_k[0LL] == '\'');
}



inline jule::Bool _150640f50_is_nil(jule::Str _35015_k) {
	return _35015_k == jule::Str("nil", 3);
}



inline jule::Bool _150640f50_is_bool(jule::Str _35216_k) {
	return (_35216_k == jule::Str("true", 4)) || (_35216_k == jule::Str("false", 5));
}



inline jule::Bool _150640f50_contains_any(jule::Str _35417_s,jule::Str _35425_bytes) {
	{
		auto __julec_range_expr = _35425_bytes;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::U8 _150640f50_b = *__julec_range_begin;
			_iter_begin_5673542736:;
			{
				jule::Int _35613_i = _35417_s.find(static_cast<jule::Str>(_150640f50_b));
				if (_35613_i >= 0LL) {
					return true;
				}
			}
			_iter_next_5673542736:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _150640f50_b = *__julec_range_begin; goto _iter_begin_5673542736; }
			_iter_end_5673542736:;
		}
	}
	return false;
}



inline jule::Bool _150640f50_is_float(jule::Str _36617_k) {
	if (_36617_k.has_prefix(jule::Str("0x", 2))) {
		return _150640f50_contains_any(_36617_k,jule::Str(".pP", 3));
	}
	return _150640f50_contains_any(_36617_k,jule::Str(".eE", 3));
}



inline jule::Bool _150640f50_is_num(jule::Str _37515_k) {
	if (_37515_k == jule::Str("", 0)) {
		return false;
	}
	jule::U8 _3809_b = _37515_k[0LL];
	return (_3809_b == '.') || (('0' <= _3809_b) && (_3809_b <= '9'));
}



inline jule::Bool _150640f50_is_lit(jule::Str _38515_k) {
	return (((_150640f50_is_num(_38515_k) || _150640f50_is_str(_38515_k)) || _150640f50_is_rune(_38515_k)) || _150640f50_is_nil(_38515_k)) || _150640f50_is_bool(_38515_k);
}



inline jule::Bool _150640f50_is_ignore_ident(jule::Str _39024_ident) {
	return _39024_ident == jule::Str("_", 1);
}



inline jule::Bool _150640f50_is_anon_ident(jule::Str _39222_ident) {
	return _39222_ident == jule::Str("<anonymous>", 11);
}



inline jule::Bool _150640f50_is_punct(jule::I32 _39517_r) {
	{
		auto __julec_range_expr = _150640f50_PUNCTS;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::I32 _150640f50_cr = *__julec_range_begin;
			_iter_begin_5673561248:;
			{
				if (_39517_r == _150640f50_cr) {
					return true;
				}
			}
			_iter_next_5673561248:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _150640f50_cr = *__julec_range_begin; goto _iter_begin_5673561248; }
			_iter_end_5673561248:;
		}
	}
	return false;
}



inline jule::Bool _150640f50_is_space(jule::I32 _40617_r) {
	{
		auto __julec_range_expr = _150640f50_SPACES;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::I32 _150640f50_cr = *__julec_range_begin;
			_iter_begin_5673546208:;
			{
				if (_40617_r == _150640f50_cr) {
					return true;
				}
			}
			_iter_next_5673546208:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _150640f50_cr = *__julec_range_begin; goto _iter_begin_5673546208; }
			_iter_end_5673546208:;
		}
	}
	return false;
}



inline jule::Bool _150640f50_is_letter(jule::I32 _41718_r) {
	return (('a' <= _41718_r) && (_41718_r <= 'z')) || (('A' <= _41718_r) && (_41718_r <= 'Z'));
}



inline jule::Bool _150640f50_is_ident_rune(jule::Str _42322_s) {
	if (_42322_s == jule::Str("", 0)) {
		return false;
	}
	if (_42322_s[0LL] != '_') {
		jule::I32 _42914_r;
		std::tie(_42914_r,std::ignore) = _15081f100_decode_rune_str(_42322_s);
		if ((!(_150640f50_is_letter(_42914_r)))) {
			return false;
		}
	}
	return true;
}



inline jule::Bool _150640f50_is_decimal(jule::U8 _43919_b) {
	return ('0' <= _43919_b) && (_43919_b <= '9');
}



inline jule::Bool _150640f50_is_binary(jule::U8 _44118_b) {
	return (_44118_b == '0') || (_44118_b == '1');
}



inline jule::Bool _150640f50_is_octal(jule::U8 _44317_b) {
	return ('0' <= _44317_b) && (_44317_b <= '7');
}



inline jule::Bool _150640f50_is_hex(jule::U8 _44615_b) {
	{
		if (!((('0' <= _44615_b) && (_44615_b <= '9')))) { goto _case_end_5673578560; }
		_case_begin_5673578560:;
		{
			return true;
		}
		goto _match_end_5673576640;
		_case_end_5673578560:;
		if (!((('a' <= _44615_b) && (_44615_b <= 'f')))) { goto _case_end_5673578672; }
		_case_begin_5673578672:;
		{
			return true;
		}
		goto _match_end_5673576640;
		_case_end_5673578672:;
		if (!((('A' <= _44615_b) && (_44615_b <= 'F')))) { goto _case_end_5673578784; }
		_case_begin_5673578784:;
		{
			return true;
		}
		goto _match_end_5673576640;
		_case_end_5673578784:;
		_case_begin_5673576736:;
		{
			return false;
		}
		goto _match_end_5673576640;
		_case_end_5673576736:;
		_match_end_5673576640:;
	}
}



inline jule::Bool _150640f50_is_assign(jule::Uint _45818_id) {
	return ((((((_45818_id == 2LLU) || (_45818_id == 31LLU)) || (_45818_id == 34LLU)) || (_45818_id == 20LLU)) || (_45818_id == 28LLU)) || (_45818_id == 3LLU)) || (_45818_id == 7LLU);
}



inline jule::Bool _150640f50_is_postfix_op(jule::Str _47122_kind) {
	{
		auto __julec_range_expr = _150640f50_POSTFIX_OPS;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _150640f50_op = *__julec_range_begin;
			_iter_begin_5673583328:;
			{
				if (_47122_kind == _150640f50_op) {
					return true;
				}
			}
			_iter_next_5673583328:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _150640f50_op = *__julec_range_begin; goto _iter_begin_5673583328; }
			_iter_end_5673583328:;
		}
	}
	return false;
}



inline jule::Bool _150640f50_is_assign_op(jule::Str _48221_kind) {
	if (_150640f50_is_postfix_op(_48221_kind)) {
		return true;
	}
	{
		auto __julec_range_expr = _150640f50_ASSING_OPS;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _150640f50_op = *__julec_range_begin;
			_iter_begin_5673589072:;
			{
				if (_48221_kind == _150640f50_op) {
					return true;
				}
			}
			_iter_next_5673589072:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _150640f50_op = *__julec_range_begin; goto _iter_begin_5673589072; }
			_iter_end_5673589072:;
		}
	}
	return false;
}



inline jule::Ref<_1506fba60_File> _1506fba60_new_file_set(jule::Str _6521_path) {
	return jule::new_struct<_1506fba60_File>(new( std::nothrow ) _1506fba60_File(jule::Slice<jule::U8>(),_6521_path,_1509ba170_Vector_0()));
}



inline _157e34dc0_Log _150567d60_make_err(jule::Int _10413_row,jule::Int _10423_col,jule::Ref<_1506fba60_File> _10433_f,jule::Str _10443_fmt,jule::Slice<jule::Any> _10456_args) {
	return _157e34dc0_Log(1LLU,_10413_row,_10423_col,_10433_f->_method_path(),_157e34dc0_logf(_10443_fmt,_10456_args),jule::Str(),jule::Str());
}



inline jule::Bool _150567d60_bytes_has_prefix(jule::Slice<jule::U8> _11421_bytes,jule::Str _11436_prefix) {
	if (_11421_bytes.len() < _11436_prefix.len()) {
		return false;
	}
	{
		auto __julec_range_expr = _11436_prefix;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _150567d60_i = 0;
			_iter_begin_5673600400:;
			{
				if (_11421_bytes[static_cast<jule::Int>(_150567d60_i)] != _11436_prefix[static_cast<jule::Int>(_150567d60_i)]) {
					return false;
				}
			}
			_iter_next_5673600400:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_150567d60_i; goto _iter_begin_5673600400; }
			_iter_end_5673600400:;
		}
	}
	return true;
}



inline jule::Str _150567d60_float_fmt_e(jule::Slice<jule::U8> _12616_txt,jule::Int _12633_i) {
	jule::Str _12643_lit = jule::Str();
	(_12633_i)++;
	if (_12633_i >= _12616_txt.len()) {
		return _12643_lit;
	}
	jule::U8 _1329_b = _12616_txt[static_cast<jule::Int>(_12633_i)];
	if ((_1329_b == '+') || (_1329_b == '-')) {
		(_12633_i)++;
		if (_12633_i >= _12616_txt.len()) {
			return _12643_lit;
		}
	}
	jule::Int _1409_first = _12633_i;
	_iter_begin_5673609184:;
	if (!(_12633_i < _12616_txt.len())) { goto _iter_end_5673609184; }
	{
		jule::U8 _14213_b = _12616_txt[static_cast<jule::Int>(_12633_i)];
		if ((!(_150640f50_is_decimal(_14213_b)))) {
			goto _iter_end_5673609184;
		}
	}
	_iter_next_5673609184:;
	(_12633_i)++;
	goto _iter_begin_5673609184;
	_iter_end_5673609184:;
	if (_12633_i == _1409_first) {
		_12643_lit = jule::Str("", 0);
		return _12643_lit;
	}
	_12643_lit = static_cast<jule::Str>(_12616_txt.slice(0LL,static_cast<jule::Int>(_12633_i)));
	return _12643_lit;
}



inline jule::Str _150567d60_float_fmt_p(jule::Slice<jule::U8> _15416_txt,jule::Int _15429_i) {
	return _150567d60_float_fmt_e(_15416_txt,_15429_i);
}



inline jule::Str _150567d60_float_fmt_dotnp(jule::Slice<jule::U8> _15620_txt,jule::Int _15637_i) {
	if (_15620_txt[static_cast<jule::Int>(_15637_i)] != '.') {
		return jule::Str("", 0);
	}
	(_15637_i)++;
	_julec_label_loop:;
	_iter_begin_5673619984:;
	if (!(_15637_i < _15620_txt.len())) { goto _iter_end_5673619984; }
	{
		jule::U8 _16413_b = _15620_txt[static_cast<jule::Int>(_15637_i)];
		{
			if (!((_150640f50_is_decimal(_16413_b)))) { goto _case_end_5673623840; }
			_case_begin_5673623840:;
			{
				goto _iter_next_5673619984;
			}
			goto _match_end_5673623296;
			_case_end_5673623840:;
			if (!((_150567d60_is_float_fmt_p(_16413_b,_15637_i)))) { goto _case_end_5673623952; }
			_case_begin_5673623952:;
			{
				return _150567d60_float_fmt_p(_15620_txt,_15637_i);
			}
			goto _match_end_5673623296;
			_case_end_5673623952:;
			_case_begin_5673623488:;
			{
				goto _iter_end_5673619984;
			}
			goto _match_end_5673623296;
			_case_end_5673623488:;
			_match_end_5673623296:;
		}
	}
	_iter_next_5673619984:;
	(_15637_i)++;
	goto _iter_begin_5673619984;
	_iter_end_5673619984:;
	return jule::Str("", 0);
}



inline jule::Str _150567d60_float_fmt_dotfp(jule::Slice<jule::U8> _17420_txt,jule::Int _17437_i) {
	_17437_i+=2LL;
	return _150567d60_float_fmt_e(_17420_txt,_17437_i);
}



inline jule::Str _150567d60_float_fmt_dotp(jule::Slice<jule::U8> _18119_txt,jule::Int _18136_i) {
	(_18136_i)++;
	return _150567d60_float_fmt_e(_18119_txt,_18136_i);
}



inline jule::Str _150567d60_float_num(jule::Slice<jule::U8> _18814_txt,jule::Int _18831_i) {
	jule::Str _18841_lit = jule::Str();
	(_18831_i)++;
	_iter_begin_5673633600:;
	if (!(_18831_i < _18814_txt.len())) { goto _iter_end_5673633600; }
	{
		jule::U8 _19113_b = _18814_txt[static_cast<jule::Int>(_18831_i)];
		if ((_18831_i > 1LL) && ((_19113_b == 'e') || (_19113_b == 'E'))) {
			_18841_lit = _150567d60_float_fmt_e(_18814_txt,_18831_i);
			return _18841_lit;
		}
		if ((!(_150640f50_is_decimal(_19113_b)))) {
			goto _iter_end_5673633600;
		}
	}
	_iter_next_5673633600:;
	(_18831_i)++;
	goto _iter_begin_5673633600;
	_iter_end_5673633600:;
	if (_18831_i == 1LL) {
		return _18841_lit;
	}
	_18841_lit = static_cast<jule::Str>(_18814_txt.slice(0LL,static_cast<jule::Int>(_18831_i)));
	return _18841_lit;
}



inline jule::Str _150567d60_common_num(jule::Slice<jule::U8> _20615_txt) {
	jule::Str _20630_lit = jule::Str();
	jule::Int _20713_i = 0LL;
	_julec_label_loop:;
	_iter_begin_5673642320:;
	if (!(_20713_i < _20615_txt.len())) { goto _iter_end_5673642320; }
	{
		jule::U8 _21013_b = _20615_txt[static_cast<jule::Int>(_20713_i)];
		{
			if (!((_21013_b == '.'))) { goto _case_end_5673645184; }
			_case_begin_5673645184:;
			{
				_20630_lit = _150567d60_float_num(_20615_txt,_20713_i);
				return _20630_lit;
			}
			goto _match_end_5673644928;
			_case_end_5673645184:;
			if (!((_150567d60_is_float_fmt_e(_21013_b,_20713_i)))) { goto _case_end_5673645296; }
			_case_begin_5673645296:;
			{
				_20630_lit = _150567d60_float_fmt_e(_20615_txt,_20713_i);
				return _20630_lit;
			}
			goto _match_end_5673644928;
			_case_end_5673645296:;
			if (!(((!(_150640f50_is_decimal(_21013_b)))))) { goto _case_end_5673645408; }
			_case_begin_5673645408:;
			{
				goto _iter_end_5673642320;
			}
			goto _match_end_5673644928;
			_case_end_5673645408:;
			_match_end_5673644928:;
		}
	}
	_iter_next_5673642320:;
	(_20713_i)++;
	goto _iter_begin_5673642320;
	_iter_end_5673642320:;
	if (_20713_i == 0LL) {
		return _20630_lit;
	}
	_20630_lit = static_cast<jule::Str>(_20615_txt.slice(0LL,static_cast<jule::Int>(_20713_i)));
	return _20630_lit;
}



inline jule::Str _150567d60_binary_num(jule::Slice<jule::U8> _22415_txt) {
	jule::Str _22430_lit = jule::Str();
	if ((!(_150567d60_bytes_has_prefix(_22415_txt,jule::Str("0b", 2))))) {
		_22430_lit = jule::Str("", 0);
		return _22430_lit;
	}
	if (_22415_txt.len() < 2LL) {
		return _22430_lit;
	}
	
	jule::Int _23313_i = 2LL;
	_iter_begin_5673653344:;
	if (!(_23313_i < _22415_txt.len())) { goto _iter_end_5673653344; }
	{
		if ((!(_150640f50_is_binary(_22415_txt[static_cast<jule::Int>(_23313_i)])))) {
			goto _iter_end_5673653344;
		}
	}
	_iter_next_5673653344:;
	(_23313_i)++;
	goto _iter_begin_5673653344;
	_iter_end_5673653344:;
	if (_23313_i == 2LL) {
		return _22430_lit;
	}
	_22430_lit = static_cast<jule::Str>(_22415_txt.slice(0LL,static_cast<jule::Int>(_23313_i)));
	return _22430_lit;
}



inline jule::Bool _150567d60_is_float_fmt_e(jule::U8 _24619_b,jule::Int _24628_i) {
	return (_24628_i > 0LL) && ((_24619_b == 'e') || (_24619_b == 'E'));
}



inline jule::Bool _150567d60_is_float_fmt_p(jule::U8 _24719_b,jule::Int _24728_i) {
	return (_24728_i > 0LL) && ((_24719_b == 'p') || (_24719_b == 'P'));
}



inline jule::Bool _150567d60_is_float_fmt_dotnp(jule::Slice<jule::U8> _24923_txt,jule::Int _24940_i) {
	if (_24923_txt[static_cast<jule::Int>(_24940_i)] != '.') {
		return false;
	}
	(_24940_i)++;
	_julec_label_loop:;
	_iter_begin_5673667536:;
	if (!(_24940_i < _24923_txt.len())) { goto _iter_end_5673667536; }
	{
		jule::U8 _25713_b = _24923_txt[static_cast<jule::Int>(_24940_i)];
		{
			if (!((_150640f50_is_decimal(_25713_b)))) { goto _case_end_5673670976; }
			_case_begin_5673670976:;
			{
				goto _iter_next_5673667536;
			}
			goto _match_end_5673670432;
			_case_end_5673670976:;
			if (!((_150567d60_is_float_fmt_p(_25713_b,_24940_i)))) { goto _case_end_5673671088; }
			_case_begin_5673671088:;
			{
				return true;
			}
			goto _match_end_5673670432;
			_case_end_5673671088:;
			_case_begin_5673670624:;
			{
				goto _iter_end_5673667536;
			}
			goto _match_end_5673670432;
			_case_end_5673670624:;
			_match_end_5673670432:;
		}
	}
	_iter_next_5673667536:;
	(_24940_i)++;
	goto _iter_begin_5673667536;
	_iter_end_5673667536:;
	return false;
}



inline jule::Bool _150567d60_is_float_fmt_dotp(jule::Slice<jule::U8> _26822_txt,jule::Int _26835_i) {
	{
		if (!((_26822_txt.len() < 3LL))) { goto _case_end_5673676192; }
		_case_begin_5673676192:;
		{
			goto _case_begin_5673676304;
		}
		goto _match_end_5673675680;
		_case_end_5673676192:;
		if (!((_26822_txt[static_cast<jule::Int>(_26835_i)] != '.'))) { goto _case_end_5673676304; }
		_case_begin_5673676304:;
		{
			goto _case_begin_5673676432;
		}
		goto _match_end_5673675680;
		_case_end_5673676304:;
		if (!(((_26822_txt[static_cast<jule::Int>(_26835_i + 1LL)] != 'p') && (_26822_txt[static_cast<jule::Int>(_26835_i + 1LL)] != 'P')))) { goto _case_end_5673676432; }
		_case_begin_5673676432:;
		{
			return false;
		}
		goto _match_end_5673675680;
		_case_end_5673676432:;
		_case_begin_5673675824:;
		{
			return true;
		}
		goto _match_end_5673675680;
		_case_end_5673675824:;
		_match_end_5673675680:;
	}
}



inline jule::Bool _150567d60_is_float_fmt_dotfp(jule::Slice<jule::U8> _27723_txt,jule::Int _27736_i) {
	{
		if (!((_27723_txt.len() < 4LL))) { goto _case_end_5673682880; }
		_case_begin_5673682880:;
		{
			goto _case_begin_5673682992;
		}
		goto _match_end_5673682352;
		_case_end_5673682880:;
		if (!((_27723_txt[static_cast<jule::Int>(_27736_i)] != '.'))) { goto _case_end_5673682992; }
		_case_begin_5673682992:;
		{
			goto _case_begin_5673683120;
		}
		goto _match_end_5673682352;
		_case_end_5673682992:;
		if (!(((_27723_txt[static_cast<jule::Int>(_27736_i + 1LL)] != 'f') && (_27723_txt[static_cast<jule::Int>(_27736_i + 1LL)] != 'F')))) { goto _case_end_5673683120; }
		_case_begin_5673683120:;
		{
			goto _case_begin_5673684160;
		}
		goto _match_end_5673682352;
		_case_end_5673683120:;
		if (!(((_27723_txt[static_cast<jule::Int>(_27736_i + 2LL)] != 'p') && (_27723_txt[static_cast<jule::Int>(_27736_i + 1LL)] != 'P')))) { goto _case_end_5673684160; }
		_case_begin_5673684160:;
		{
			return false;
		}
		goto _match_end_5673682352;
		_case_end_5673684160:;
		_case_begin_5673682496:;
		{
			return true;
		}
		goto _match_end_5673682352;
		_case_end_5673682496:;
		_match_end_5673682352:;
	}
}



inline jule::Str _150567d60_octal_num(jule::Slice<jule::U8> _28714_txt) {
	jule::Str _28729_lit = jule::Str();
	if (_28714_txt[0LL] != '0') {
		_28729_lit = jule::Str("", 0);
		return _28729_lit;
	}
	if (_28714_txt.len() < 2LL) {
		return _28729_lit;
	}
	jule::Int _29513_octal_start = 1LL;
	if (_28714_txt[1LL] == 'o') {
		if (_28714_txt.len() < 3LL) {
			return _28729_lit;
		}
		(_29513_octal_start)++;
	}
	jule::Int _30413_i = _29513_octal_start;
	_iter_begin_5673695120:;
	if (!(_30413_i < _28714_txt.len())) { goto _iter_end_5673695120; }
	{
		jule::U8 _30613_b = _28714_txt[static_cast<jule::Int>(_30413_i)];
		if (_150567d60_is_float_fmt_e(_30613_b,_30413_i)) {
			_28729_lit = _150567d60_float_fmt_e(_28714_txt,_30413_i);
			return _28729_lit;
		}
		if ((!(_150640f50_is_octal(_30613_b)))) {
			goto _iter_end_5673695120;
		}
	}
	_iter_next_5673695120:;
	(_30413_i)++;
	goto _iter_begin_5673695120;
	_iter_end_5673695120:;
	if (_30413_i == _29513_octal_start) {
		return _28729_lit;
	}
	_28729_lit = static_cast<jule::Str>(_28714_txt.slice(0LL,static_cast<jule::Int>(_30413_i)));
	return _28729_lit;
}



inline jule::Str _150567d60_hex_num(jule::Slice<jule::U8> _32112_txt) {
	jule::Str _32127_lit = jule::Str();
	if (_32112_txt.len() < 3LL) {
		return _32127_lit;
	}
	if ((_32112_txt[0LL] != '0') || ((_32112_txt[1LL] != 'x') && (_32112_txt[1LL] != 'X'))) {
		return _32127_lit;
	}
	
	jule::Int _33013_i = 2LL;
	_julec_label_loop:;
	_iter_begin_5673708832:;
	if (!(_33013_i < _32112_txt.len())) { goto _iter_end_5673708832; }
	{
		jule::U8 _33313_b = _32112_txt[static_cast<jule::Int>(_33013_i)];
		{
			if (!((_150567d60_is_float_fmt_dotp(_32112_txt,_33013_i)))) { goto _case_end_5673711728; }
			_case_begin_5673711728:;
			{
				_32127_lit = _150567d60_float_fmt_dotp(_32112_txt,_33013_i);
				return _32127_lit;
			}
			goto _match_end_5673711440;
			_case_end_5673711728:;
			if (!((_150567d60_is_float_fmt_dotfp(_32112_txt,_33013_i)))) { goto _case_end_5673711840; }
			_case_begin_5673711840:;
			{
				_32127_lit = _150567d60_float_fmt_dotfp(_32112_txt,_33013_i);
				return _32127_lit;
			}
			goto _match_end_5673711440;
			_case_end_5673711840:;
			if (!((_150567d60_is_float_fmt_p(_33313_b,_33013_i)))) { goto _case_end_5673711952; }
			_case_begin_5673711952:;
			{
				_32127_lit = _150567d60_float_fmt_p(_32112_txt,_33013_i);
				return _32127_lit;
			}
			goto _match_end_5673711440;
			_case_end_5673711952:;
			if (!((_150567d60_is_float_fmt_dotnp(_32112_txt,_33013_i)))) { goto _case_end_5673712080; }
			_case_begin_5673712080:;
			{
				_32127_lit = _150567d60_float_fmt_dotnp(_32112_txt,_33013_i);
				return _32127_lit;
			}
			goto _match_end_5673711440;
			_case_end_5673712080:;
			if (!(((!(_150640f50_is_hex(_33313_b)))))) { goto _case_end_5673712208; }
			_case_begin_5673712208:;
			{
				goto _iter_end_5673708832;
			}
			goto _match_end_5673711440;
			_case_end_5673712208:;
			_match_end_5673711440:;
		}
	}
	_iter_next_5673708832:;
	(_33013_i)++;
	goto _iter_begin_5673708832;
	_iter_end_5673708832:;
	if (_33013_i == 2LL) {
		return _32127_lit;
	}
	_32127_lit = static_cast<jule::Str>(_32112_txt.slice(0LL,static_cast<jule::Int>(_33013_i)));
	return _32127_lit;
}



inline jule::Str _150567d60_hex_escape(jule::Slice<jule::U8> _35815_txt,jule::Int _35828_n) {
	jule::Str _35838_seq = jule::Str();
	if (_35815_txt.len() < _35828_n) {
		return _35838_seq;
	}
	
	jule::Int _36413_i = 2LL;
	_iter_begin_5673723104:;
	if (!(_36413_i < _35828_n)) { goto _iter_end_5673723104; }
	{
		if ((!(_150640f50_is_hex(_35815_txt[static_cast<jule::Int>(_36413_i)])))) {
			return _35838_seq;
		}
	}
	_iter_next_5673723104:;
	(_36413_i)++;
	goto _iter_begin_5673723104;
	_iter_end_5673723104:;
	_35838_seq=static_cast<jule::Str>(_35815_txt.slice(0LL,static_cast<jule::Int>(_35828_n)));
	return _35838_seq;
}



inline jule::Str _150567d60_big_unicode_point_escape(jule::Slice<jule::U8> _37629_txt) {
	return _150567d60_hex_escape(_37629_txt,10LL);
}



inline jule::Str _150567d60_little_unicode_point_escape(jule::Slice<jule::U8> _37832_txt) {
	return _150567d60_hex_escape(_37832_txt,6LL);
}



inline jule::Str _150567d60_hex_byte_escape(jule::Slice<jule::U8> _38020_txt) {
	return _150567d60_hex_escape(_38020_txt,4LL);
}



inline jule::Str _150567d60_byte_escape(jule::Slice<jule::U8> _38316_txt) {
	jule::Str _38331_seq = jule::Str();
	if (_38316_txt.len() < 4LL) {
		return _38331_seq;
	}
	if (((!(_150640f50_is_octal(_38316_txt[1LL]))) || (!(_150640f50_is_octal(_38316_txt[2LL])))) || (!(_150640f50_is_octal(_38316_txt[3LL])))) {
		return _38331_seq;
	}
	_38331_seq = static_cast<jule::Str>(_38316_txt.slice(0LL,4LL));
	return _38331_seq;
}



inline jule::Slice<_157e34dc0_Log> _150567d60_lex(jule::Ref<_1506fba60_File> _77316_f) {
	if ((!(jule::real(_77316_f)))) {
		return nullptr;
	}
	_150567d60_Lex _77813_lex = _150567d60_Lex(_1509ba170_Vector_0(),_77316_f,0LL,jule::Int(),-1LL,jule::Slice<_157e34dc0_Log>());
	_77813_lex._method_new_line();
	_77813_lex._method_lex();
	if (_77813_lex._field_errors.len() > 0LL) {
		return _77813_lex._field_errors;
	}
	_77316_f->_field__tokens=_77813_lex._field_tokens;
	return nullptr;
}



inline jule::Ref<_1507e43e0_FileInfo> _1507e43e0_parse_file(jule::Ref<_1506fba60_File> _2223_f) {
	if ((!(jule::real(_2223_f)))) {
		return jule::new_ref<_1507e43e0_FileInfo>();
	}
	jule::Ref<_1507e43e0_FileInfo> _2713_finf = jule::new_struct<_1507e43e0_FileInfo>(new( std::nothrow ) _1507e43e0_FileInfo());
	std::tie(_2713_finf->_field_ast,_2713_finf->_field_errors) = _1507e43e0_parse_fileset(_2223_f);
	if (_2713_finf->_field_errors.len() > 0LL) {
		jule::drop(_2713_finf->_field_ast);
	}
	return _2713_finf;
}



inline jule::Ref<_1507e43e0_PackageInfo> _1507e43e0_parse_package(jule::Slice<jule::Ref<_1506fba60_File>> _3926_filesets) {
	if (_3926_filesets == nullptr) {
		return jule::new_ref<_1507e43e0_PackageInfo>();
	}
	jule::Ref<_1507e43e0_PackageInfo> _4413_pinf = jule::new_struct<_1507e43e0_PackageInfo>(new( std::nothrow ) _1507e43e0_PackageInfo());
	_4413_pinf->_field_files=jule::Slice<jule::Ref<_1507e43e0_FileInfo>>::alloc(0LL,static_cast<jule::Int>(static_cast<jule::I64>(_3926_filesets.len())));
	{
		auto __julec_range_expr = _3926_filesets;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_1506fba60_File> _1507e43e0_f = *__julec_range_begin;
			_iter_begin_5675232560:;
			{
				if ((!(jule::real(_1507e43e0_f)))) {
					goto _iter_next_5675232560;
				}
				jule::Ref<_1507e43e0_FileInfo> _5117_finfo = _1507e43e0_parse_file(_1507e43e0_f);
				_4413_pinf->_field_files=jule::append(_4413_pinf->_field_files,jule::Slice<jule::Ref<_1507e43e0_FileInfo>>({_5117_finfo}));
			}
			_iter_next_5675232560:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1507e43e0_f = *__julec_range_begin; goto _iter_begin_5675232560; }
			_iter_end_5675232560:;
		}
	}
	return _4413_pinf;
}



inline std::tuple<jule::Ref<_15053e120_Ast>,jule::Slice<_157e34dc0_Log>> _1507e43e0_parse_fileset(jule::Ref<_1506fba60_File> _5822_f) {
	jule::Ref<_150831fa0_Parser> _5913_p = jule::new_struct<_150831fa0_Parser>(new( std::nothrow ) _150831fa0_Parser());
	_5913_p->_method_parse(_5822_f);
	return std::make_tuple(_5913_p->_field_ast,_5913_p->_field_errors);
}



inline jule::Ref<_1506406d0_ScopeTree> _1507e2370_new_scope(void) {
	return jule::new_struct<_1506406d0_ScopeTree>(new( std::nothrow ) _1506406d0_ScopeTree());
}



inline std::tuple<jule::Bool,jule::Bool> _1507e2370_is_st(_150640f50_Token _4410_current,_150640f50_Token _4426_prev) {
	jule::Bool _4451_terminated = jule::Bool();
	jule::Bool _4441_ok = jule::Bool();
	_4441_ok=(_4410_current._field_id == 5LLU) || (_4426_prev._field_row < _4410_current._field_row);
	_4451_terminated=_4410_current._field_id == 5LLU;
	return std::make_tuple(_4441_ok,_4451_terminated);
}



inline std::tuple<jule::Int,jule::Bool> _1507e2370_next_st_pos(jule::Slice<_150640f50_Token> _5116_tokens,jule::Int _5133_start) {
	jule::Int _5213_brace_n = 0LL;
	jule::Int _5313_i = _5133_start;
	_iter_begin_5675253168:;
	if (!(_5313_i < _5116_tokens.len())) { goto _iter_end_5675253168; }
	{
		jule::Bool _5517_ok = false;
		jule::Bool _5617_terminated = false;
		_150640f50_Token _5713_tok = _5116_tokens[static_cast<jule::Int>(_5313_i)];
		{
			auto _match_expr{ _5713_tok._field_id };
			if (!((3LLU) == _match_expr)) { goto _case_end_5675259248; }
			_case_begin_5675259248:;
			{
				{
					auto _match_expr{ _5713_tok._field_kind };
					if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_5675267280; }
					_case_begin_5675267280:;
					{
						if ((_5213_brace_n == 0LL) && (_5313_i > _5133_start)) {
							std::tie(_5517_ok,_5617_terminated) = _1507e2370_is_st(_5713_tok,_5116_tokens[static_cast<jule::Int>(_5313_i - 1LL)]);
							if (_5517_ok) {
								goto _julec_label_return;
							}
						}
						(_5213_brace_n)++;
						goto _iter_next_5675253168;
					}
					goto _match_end_5675259728;
					_case_end_5675267280:;
					_case_begin_5675260848:;
					{
						(_5213_brace_n)--;
						if ((_5213_brace_n == 0LL) && ((_5313_i + 1LL) < _5116_tokens.len())) {
							std::tie(_5517_ok,_5617_terminated) = _1507e2370_is_st(_5116_tokens[static_cast<jule::Int>(_5313_i + 1LL)],_5713_tok);
							if (_5517_ok) {
								(_5313_i)++;
								goto _julec_label_return;
							}
						}
						goto _iter_next_5675253168;
					}
					goto _match_end_5675259728;
					_case_end_5675260848:;
					_match_end_5675259728:;
				}
			}
			goto _match_end_5675257216;
			_case_end_5675259248:;
			_match_end_5675257216:;
		}
		if (_5213_brace_n != 0LL) {
			goto _iter_next_5675253168;
		} else if (_5313_i > _5133_start) {
			_150640f50_Token _8917_prev = _5116_tokens[static_cast<jule::Int>(_5313_i - 1LL)];
			if (((_8917_prev._field_id == 7LLU) && _150640f50_is_bin_op(_8917_prev._field_kind)) && (_8917_prev._field_row < _5713_tok._field_row)) {
				goto _iter_next_5675253168;
			}
			std::tie(_5517_ok,_5617_terminated) = _1507e2370_is_st(_5713_tok,_8917_prev);
		} else {
			std::tie(_5517_ok,_5617_terminated) = _1507e2370_is_st(_5713_tok,_5713_tok);
		}
		if ((!(_5517_ok))) {
			goto _iter_next_5675253168;
		}
		_julec_label_return:;
		if (_5617_terminated) {
			(_5313_i)++;
		}
		return std::make_tuple(_5313_i,_5617_terminated);
	}
	_iter_next_5675253168:;
	(_5313_i)++;
	goto _iter_begin_5675253168;
	_iter_end_5675253168:;
	return std::make_tuple(_5313_i,false);
}



inline std::tuple<jule::Slice<_150640f50_Token>,jule::Bool> _1507e2370_skip_st(jule::Int& _11217_i,jule::Slice<_150640f50_Token> _11229_tokens) {
	jule::Int _1139_start = _11217_i;
	jule::Bool _11413_terminated = false;
	std::tie(_11217_i,_11413_terminated) = _1507e2370_next_st_pos(_11229_tokens,_1139_start);
	jule::Slice<_150640f50_Token> _11613_st_tokens = _11229_tokens.slice(static_cast<jule::Int>(_1139_start),static_cast<jule::Int>(_11217_i));
	if (_11413_terminated) {
		if (_11613_st_tokens.len() == 1LL) {
			std::tie(_11613_st_tokens,_11413_terminated) = _1507e2370_skip_st(_11217_i,_11229_tokens);
			return std::make_tuple(_11613_st_tokens,_11413_terminated);
		}
		_11613_st_tokens=_11613_st_tokens.slice(0LL,static_cast<jule::Int>(_11613_st_tokens.len() - 1LL));
	}
	return std::make_tuple(_11613_st_tokens,_11413_terminated);
}



inline jule::Slice<jule::Ref<_1507e2370_Stmt>> _1507e2370_split_stms(jule::Slice<_150640f50_Token> _13419_tokens) {
	jule::Slice<jule::Ref<_1507e2370_Stmt>> _13513_stms = nullptr;
	jule::Int _13613_pos = 0LL;
	_iter_begin_5675295264:;
	if (!(_13613_pos < _13419_tokens.len())) { goto _iter_end_5675295264; }
	{
		jule::Slice<_150640f50_Token> _13818_tokens;
		jule::Bool _13826_terminated;
		std::tie(_13818_tokens,_13826_terminated) = _1507e2370_skip_st(_13613_pos,_13419_tokens);
		_13513_stms=jule::append(_13513_stms,jule::Slice<jule::Ref<_1507e2370_Stmt>>({jule::new_struct<_1507e2370_Stmt>(new( std::nothrow ) _1507e2370_Stmt(_13818_tokens,_13826_terminated))}));
	}
	_iter_next_5675295264:;
	goto _iter_begin_5675295264;
	_iter_end_5675295264:;
	return _13513_stms;
}



inline jule::Slice<_150640f50_Token> _1507ea360_is_fn_call(jule::Slice<_150640f50_Token> _3919_tokens) {
	{
		auto _match_expr{ _3919_tokens[0LL]._field_id };
		if (!((3LLU) == _match_expr || (2LLU) == _match_expr || (1LLU) == _match_expr)) { goto _case_end_5675303312; }
		goto _match_end_5675300800;
		_case_end_5675303312:;
		_case_begin_5675295696:;
		{
			_150640f50_Token _4713_tok = _3919_tokens[static_cast<jule::Int>(_3919_tokens.len() - 1LL)];
			if ((_4713_tok._field_id != 3LLU) && (_4713_tok._field_kind != jule::Str(")", 1))) {
				return nullptr;
			}
		}
		goto _match_end_5675300800;
		_case_end_5675295696:;
		_match_end_5675300800:;
	}
	_150640f50_Token _529_tok = _3919_tokens[static_cast<jule::Int>(_3919_tokens.len() - 1LL)];
	if ((_529_tok._field_id != 3LLU) || (_529_tok._field_kind != jule::Str(")", 1))) {
		return nullptr;
	}
	jule::Int _5613_brace_n = 0LL;
	jule::I64 _5913_i = _3919_tokens.len() - 1LL;
	_iter_begin_5675306608:;
	if (!(_5913_i >= 1LL)) { goto _iter_end_5675306608; }
	{
		_150640f50_Token _6113_tok = _3919_tokens[static_cast<jule::Int>(_5913_i)];
		if (_6113_tok._field_id == 3LLU) {
			{
				auto _match_expr{ _6113_tok._field_kind };
				if (!((jule::Str(")", 1)) == _match_expr)) { goto _case_end_5675314080; }
				_case_begin_5675314080:;
				{
					(_5613_brace_n)++;
				}
				goto _match_end_5675313344;
				_case_end_5675314080:;
				if (!((jule::Str("(", 1)) == _match_expr)) { goto _case_end_5675314192; }
				_case_begin_5675314192:;
				{
					(_5613_brace_n)--;
				}
				goto _match_end_5675313344;
				_case_end_5675314192:;
				_match_end_5675313344:;
			}
			if (_5613_brace_n == 0LL) {
				return _3919_tokens.slice(0LL,static_cast<jule::Int>(_5913_i));
			}
		}
	}
	_iter_next_5675306608:;
	(_5913_i)--;
	goto _iter_begin_5675306608;
	_iter_end_5675306608:;
	return nullptr;
}



inline jule::Ref<_1507ea360_CallData> _1507ea360_get_call_data(jule::Slice<_150640f50_Token> _8122_tokens) {
	jule::Ref<_1507ea360_CallData> _8213_data = jule::new_struct<_1507ea360_CallData>(new( std::nothrow ) _1507ea360_CallData());
	std::tie(_8213_data->_field_expr_tokens,_8213_data->_field_args_tokens) = _150831fa0_range_last(_8122_tokens);
	if (_8213_data->_field_expr_tokens.len() == 0LL) {
		return _8213_data;
	}
	_150640f50_Token _899_token = _8213_data->_field_expr_tokens[static_cast<jule::Int>(_8213_data->_field_expr_tokens.len() - 1LL)];
	if ((_899_token._field_id == 3LLU) && (_899_token._field_kind == jule::Str("]", 1))) {
		std::tie(_8213_data->_field_expr_tokens,_8213_data->_field_generics_tokens) = _150831fa0_range_last(_8213_data->_field_expr_tokens);
	}
	return _8213_data;
}



inline jule::Slice<_150640f50_Token> _1507ea360_get_block_expr(jule::Slice<_150640f50_Token> _9723_tokens) {
	jule::Int _9813_brace_n = 0LL;
	{
		auto __julec_range_expr = _9723_tokens;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _1507ea360_i = 0;
			_150640f50_Token _1507ea360_tok = *__julec_range_begin;
			_iter_begin_5675327216:;
			{
				if (_1507ea360_tok._field_id == 3LLU) {
					{
						auto _match_expr{ _1507ea360_tok._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr)) { goto _case_end_5675332096; }
						_case_begin_5675332096:;
						{
							if (_9813_brace_n > 0LL) {
								(_9813_brace_n)++;
								goto _match_end_5675330016;
							}
							return _9723_tokens.slice(0LL,static_cast<jule::Int>(_1507ea360_i));
						}
						goto _match_end_5675330016;
						_case_end_5675332096:;
						if (!((jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_5675331856; }
						_case_begin_5675331856:;
						{
							(_9813_brace_n)++;
						}
						goto _match_end_5675330016;
						_case_end_5675331856:;
						_case_begin_5675330704:;
						{
							(_9813_brace_n)--;
						}
						goto _match_end_5675330016;
						_case_end_5675330704:;
						_match_end_5675330016:;
					}
				}
			}
			_iter_next_5675327216:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_1507ea360_i; _1507ea360_tok = *__julec_range_begin; goto _iter_begin_5675327216; }
			_iter_end_5675327216:;
		}
	}
	return nullptr;
}



inline std::tuple<jule::Slice<_150640f50_Token>,jule::Slice<_150640f50_Token>> _1507ea360_split_colon(jule::Slice<_150640f50_Token> _12320_tokens) {
	jule::Int _12413_range_n = 0LL;
	{
		auto __julec_range_expr = _12320_tokens;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _1507ea360_i = 0;
			_150640f50_Token _1507ea360_token = *__julec_range_begin;
			_iter_begin_5675329584:;
			{
				{
					auto _match_expr{ _1507ea360_token._field_id };
					if (!((3LLU) == _match_expr)) { goto _case_end_5675337856; }
					_case_begin_5675337856:;
					{
						{
							auto _match_expr{ _1507ea360_token._field_kind };
							if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_5675340416; }
							_case_begin_5675340416:;
							{
								(_12413_range_n)++;
								goto _iter_next_5675329584;
							}
							goto _match_end_5675338512;
							_case_end_5675340416:;
							_case_begin_5675339632:;
							{
								(_12413_range_n)--;
							}
							goto _match_end_5675338512;
							_case_end_5675339632:;
							_match_end_5675338512:;
						}
					}
					goto _match_end_5675337152;
					_case_end_5675337856:;
					if (!((11LLU) == _match_expr)) { goto _case_end_5675337968; }
					_case_begin_5675337968:;
					{
						if (_12413_range_n < 1LL) {
							jule::Slice<_150640f50_Token> _14125_l = _12320_tokens.slice(0LL,static_cast<jule::Int>(_1507ea360_i));
							jule::Slice<_150640f50_Token> _14225_r = _12320_tokens.slice(static_cast<jule::Int>(_1507ea360_i + 1LL));
							return std::make_tuple(_14125_l,_14225_r);
						}
					}
					goto _match_end_5675337152;
					_case_end_5675337968:;
					_match_end_5675337152:;
				}
			}
			_iter_next_5675329584:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_1507ea360_i; _1507ea360_token = *__julec_range_begin; goto _iter_begin_5675329584; }
			_iter_end_5675329584:;
		}
	}
	return std::make_tuple(nullptr,nullptr);
}



inline jule::Slice<_150640f50_Token> _1507ea360_eliminate_comments(jule::Slice<_150640f50_Token> _18127_tokens) {
	jule::Slice<_150640f50_Token> _18213_cutted = nullptr;
	{
		auto __julec_range_expr = _18127_tokens;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			_150640f50_Token _1507ea360_token = *__julec_range_begin;
			_iter_begin_5675348560:;
			{
				if (_1507ea360_token._field_id != 18LLU) {
					_18213_cutted=jule::append(_18213_cutted,jule::Slice<_150640f50_Token>({_1507ea360_token}));
				}
			}
			_iter_next_5675348560:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1507ea360_token = *__julec_range_begin; goto _iter_begin_5675348560; }
			_iter_end_5675348560:;
		}
	}
	return _18213_cutted;
}



inline jule::Int _1507ea360_find_lowest_prec_op(jule::Slice<_150640f50_Token> _19324_tokens) {
	_1507ea360_Precedencer _19413_prec = _1507ea360_Precedencer();
	jule::Int _19513_brace_n = 0LL;
	{
		auto __julec_range_expr = _19324_tokens;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _1507ea360_i = 0;
			_150640f50_Token _1507ea360_token = *__julec_range_begin;
			_iter_begin_5675355712:;
			{
				{
					if (!((_1507ea360_token._field_id == 3LLU))) { goto _case_end_5675358432; }
					_case_begin_5675358432:;
					{
						{
							auto _match_expr{ _1507ea360_token._field_kind };
							if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr)) { goto _case_end_5675362272; }
							_case_begin_5675362272:;
							{
								(_19513_brace_n)++;
							}
							goto _match_end_5675359696;
							_case_end_5675362272:;
							_case_begin_5675360960:;
							{
								(_19513_brace_n)--;
							}
							goto _match_end_5675359696;
							_case_end_5675360960:;
							_match_end_5675359696:;
						}
						goto _iter_next_5675355712;
					}
					goto _match_end_5675358208;
					_case_end_5675358432:;
					if (!((_1507ea360_i == 0LL))) { goto _case_end_5675358560; }
					_case_begin_5675358560:;
					{
						goto _iter_next_5675355712;
					}
					goto _match_end_5675358208;
					_case_end_5675358560:;
					if (!((_1507ea360_token._field_id != 7LLU))) { goto _case_end_5675358688; }
					_case_begin_5675358688:;
					{
						goto _iter_next_5675355712;
					}
					goto _match_end_5675358208;
					_case_end_5675358688:;
					if (!((_19513_brace_n > 0LL))) { goto _case_end_5675358816; }
					_case_begin_5675358816:;
					{
						goto _iter_next_5675355712;
					}
					goto _match_end_5675358208;
					_case_end_5675358816:;
					_match_end_5675358208:;
				}
				_150640f50_Token _22013_left = _19324_tokens[static_cast<jule::Int>(_1507ea360_i - 1LL)];
				if ((_22013_left._field_id == 7LLU) || (_22013_left._field_id == 11LLU)) {
					goto _iter_next_5675355712;
				}
				if (((_1507ea360_i > 1LL) && (_22013_left._field_id == 3LLU)) && (_22013_left._field_kind == jule::Str("]", 1))) {
					_150640f50_Token _22817_lleft = _19324_tokens[static_cast<jule::Int>(_1507ea360_i - 2LL)];
					if ((_22817_lleft._field_id == 3LLU) && (_22817_lleft._field_kind == jule::Str("[", 1))) {
						if ((_1507ea360_token._field_kind == jule::Str("&", 1)) || (_1507ea360_token._field_kind == jule::Str("*", 1))) {
							goto _iter_next_5675355712;
						}
					}
				}
				jule::Int _23713_p = _1507ea360_token._method_prec();
				if (_23713_p != -1LL) {
					_19413_prec._method_set(_23713_p,jule::Any(_1507ea360_i));
				}
			}
			_iter_next_5675355712:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_1507ea360_i; _1507ea360_token = *__julec_range_begin; goto _iter_begin_5675355712; }
			_iter_end_5675355712:;
		}
	}
	jule::Any _2439_data = _19413_prec._method_get_lower();
	if (_2439_data == nullptr) {
		return -1LL;
	}
	return _2439_data.operator jule::Int();
}



inline jule::Ref<_1506406d0_IdentExpr> _1507ea360_build_ident_expr(_150640f50_Token _25025_token) {
	return jule::new_struct<_1506406d0_IdentExpr>(new( std::nothrow ) _1506406d0_IdentExpr(_25025_token,_25025_token._field_kind,false));
}



inline std::tuple<jule::Slice<_150640f50_Token>,jule::Int> _1507ea360_get_range_expr_tokens(jule::Slice<_150640f50_Token> _25830_tokens) {
	jule::Int _25913_range_n = 0LL;
	jule::I64 _26013_i = _25830_tokens.len() - 1LL;
	_iter_begin_5675383216:;
	if (!(_26013_i >= 0LL)) { goto _iter_end_5675383216; }
	{
		_150640f50_Token _26213_tok = _25830_tokens[static_cast<jule::Int>(_26013_i)];
		if (_26213_tok._field_id == 3LLU) {
			{
				auto _match_expr{ _26213_tok._field_kind };
				if (!((jule::Str("}", 1)) == _match_expr || (jule::Str("]", 1)) == _match_expr || (jule::Str(")", 1)) == _match_expr)) { goto _case_end_5675389744; }
				_case_begin_5675389744:;
				{
					(_25913_range_n)++;
				}
				goto _match_end_5675388224;
				_case_end_5675389744:;
				_case_begin_5675388912:;
				{
					(_25913_range_n)--;
				}
				goto _match_end_5675388224;
				_case_end_5675388912:;
				_match_end_5675388224:;
			}
		}
		if (_25913_range_n == 0LL) {
			return std::make_tuple(_25830_tokens.slice(0LL,static_cast<jule::Int>(_26013_i)),_25913_range_n);
		}
	}
	_iter_next_5675383216:;
	(_26013_i)--;
	goto _iter_begin_5675383216;
	_iter_end_5675383216:;
	return std::make_tuple(nullptr,_25913_range_n);
}



inline jule::Bool _1507eb940_check_assign_tokens(jule::Slice<_150640f50_Token> _1624_tokens) {
	if ((_1624_tokens.len() == 0LL) || (!(_150640f50_is_assign(_1624_tokens[0LL]._field_id)))) {
		return false;
	}
	jule::Int _2113_brace_n = 0LL;
	{
		auto __julec_range_expr = _1624_tokens;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			_150640f50_Token _1507eb940_t = *__julec_range_begin;
			_iter_begin_5675396112:;
			{
				if (_1507eb940_t._field_id == 3LLU) {
					{
						auto _match_expr{ _1507eb940_t._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_5675399936; }
						_case_begin_5675399936:;
						{
							(_2113_brace_n)++;
						}
						goto _match_end_5675398416;
						_case_end_5675399936:;
						_case_begin_5675399104:;
						{
							(_2113_brace_n)--;
						}
						goto _match_end_5675398416;
						_case_end_5675399104:;
						_match_end_5675398416:;
					}
				}
				if (_2113_brace_n < 0LL) {
					return false;
				} else if (_2113_brace_n > 0LL) {
					goto _iter_next_5675396112;
				} else if ((_1507eb940_t._field_id == 7LLU) && _150640f50_is_assign_op(_1507eb940_t._field_kind)) {
					return true;
				}
			}
			_iter_next_5675396112:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1507eb940_t = *__julec_range_begin; goto _iter_begin_5675396112; }
			_iter_end_5675396112:;
		}
	}
	return false;
}



inline _157e34dc0_Log _150831fa0_make_err(jule::Int _5613_row,jule::Int _5623_col,jule::Ref<_1506fba60_File> _5633_f,jule::Str _5643_fmt,jule::Slice<jule::Any> _5656_args) {
	return _157e34dc0_Log(1LLU,_5613_row,_5623_col,_5633_f->_method_path(),_157e34dc0_logf(_5643_fmt,_5656_args),jule::Str(),jule::Str());
}



inline jule::Slice<_150640f50_Token> _150831fa0_range(jule::Int& _7515_i,jule::Str _7523_open,jule::Str _7540_close,jule::Slice<_150640f50_Token> _7562_tokens) {
	if (_7515_i >= _7562_tokens.len()) {
		return nullptr;
	}
	_150640f50_Token _809_tok = _7562_tokens[static_cast<jule::Int>(_7515_i)];
	if ((_809_tok._field_id != 3LLU) || (_809_tok._field_kind != _7523_open)) {
		return nullptr;
	}
	(_7515_i)++;
	jule::Int _8613_range_n = 1LL;
	jule::Int _879_start = _7515_i;
	_iter_begin_5675417024:;
	if (!((_8613_range_n != 0LL) && (_7515_i < _7562_tokens.len()))) { goto _iter_end_5675417024; }
	{
		_150640f50_Token _8913_token = _7562_tokens[static_cast<jule::Int>(_7515_i)];
		if (_8913_token._field_id == 3LLU) {
			{
				auto _match_expr{ _8913_token._field_kind };
				if (!((_7523_open) == _match_expr)) { goto _case_end_5675421472; }
				_case_begin_5675421472:;
				{
					(_8613_range_n)++;
				}
				goto _match_end_5675420736;
				_case_end_5675421472:;
				if (!((_7540_close) == _match_expr)) { goto _case_end_5675421584; }
				_case_begin_5675421584:;
				{
					(_8613_range_n)--;
				}
				goto _match_end_5675420736;
				_case_end_5675421584:;
				_match_end_5675420736:;
			}
		}
	}
	_iter_next_5675417024:;
	(_7515_i)++;
	goto _iter_begin_5675417024;
	_iter_end_5675417024:;
	return _7562_tokens.slice(static_cast<jule::Int>(_879_start),static_cast<jule::Int>(_7515_i - 1LL));
}



inline std::tuple<jule::Slice<_150640f50_Token>,jule::Slice<_150640f50_Token>> _150831fa0_range_last(jule::Slice<_150640f50_Token> _10819_tokens) {
	jule::Slice<_150640f50_Token> _10855_cut = jule::Slice<_150640f50_Token>();
	jule::Slice<_150640f50_Token> _10838_cutted = jule::Slice<_150640f50_Token>();
	if (_10819_tokens.len() == 0LL) {
		_10838_cutted = _10819_tokens;
		_10855_cut = nullptr;
		return std::make_tuple(_10838_cutted,_10855_cut);
	} else if (_10819_tokens[static_cast<jule::Int>(_10819_tokens.len() - 1LL)]._field_id != 3LLU) {
		_10838_cutted = _10819_tokens;
		_10855_cut = nullptr;
		return std::make_tuple(_10838_cutted,_10855_cut);
	}
	jule::Int _11513_brace_n = 0LL;
	jule::I64 _11613_i = _10819_tokens.len() - 1LL;
	_iter_begin_5675420624:;
	if (!(_11613_i >= 0LL)) { goto _iter_end_5675420624; }
	{
		_150640f50_Token _11813_token = _10819_tokens[static_cast<jule::Int>(_11613_i)];
		if (_11813_token._field_id == 3LLU) {
			{
				auto _match_expr{ _11813_token._field_kind };
				if (!((jule::Str("}", 1)) == _match_expr || (jule::Str("]", 1)) == _match_expr || (jule::Str(")", 1)) == _match_expr)) { goto _case_end_5675436912; }
				_case_begin_5675436912:;
				{
					(_11513_brace_n)++;
					goto _iter_next_5675420624;
				}
				goto _match_end_5675435392;
				_case_end_5675436912:;
				_case_begin_5675436080:;
				{
					(_11513_brace_n)--;
				}
				goto _match_end_5675435392;
				_case_end_5675436080:;
				_match_end_5675435392:;
			}
		}
		if (_11513_brace_n == 0LL) {
			_10838_cutted = _10819_tokens.slice(0LL,static_cast<jule::Int>(_11613_i));
			_10855_cut = _10819_tokens.slice(static_cast<jule::Int>(_11613_i));
			return std::make_tuple(_10838_cutted,_10855_cut);
		}
	}
	_iter_next_5675420624:;
	(_11613_i)--;
	goto _iter_begin_5675420624;
	_iter_end_5675420624:;
	_10838_cutted = _10819_tokens;
	_10855_cut = nullptr;
	return std::make_tuple(_10838_cutted,_10855_cut);
}



inline std::tuple<jule::Slice<jule::Slice<_150640f50_Token>>,jule::Slice<_157e34dc0_Log>> _150831fa0_parts(jule::Slice<_150640f50_Token> _14614_tokens,jule::Uint _14631_id,jule::Bool _14644_expr_must) {
	if (_14614_tokens.len() == 0LL) {
		return std::make_tuple(nullptr,nullptr);
	}
	jule::Slice<jule::Slice<_150640f50_Token>> _15113_parts = nullptr;
	jule::Slice<_157e34dc0_Log> _15213_errors = nullptr;
	jule::Int _15413_range_n = 0LL;
	jule::Int _15513_last = 0LL;
	{
		auto __julec_range_expr = _14614_tokens;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _150831fa0_i = 0;
			_150640f50_Token _150831fa0_token = *__julec_range_begin;
			_iter_begin_5675450432:;
			{
				if (_150831fa0_token._field_id == 3LLU) {
					{
						auto _match_expr{ _150831fa0_token._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_5675454720; }
						_case_begin_5675454720:;
						{
							(_15413_range_n)++;
							goto _iter_next_5675450432;
						}
						goto _match_end_5675453200;
						_case_end_5675454720:;
						_case_begin_5675453888:;
						{
							(_15413_range_n)--;
						}
						goto _match_end_5675453200;
						_case_end_5675453888:;
						_match_end_5675453200:;
					}
				}
				if (_15413_range_n > 0LL) {
					goto _iter_next_5675450432;
				}
				if (_150831fa0_token._field_id == _14631_id) {
					if (_14644_expr_must && ((_150831fa0_i - _15513_last) <= 0LL)) {
						_157e34dc0_Log _17521_err = _150831fa0_make_err(_150831fa0_token._field_row,_150831fa0_token._field_column,_150831fa0_token._field_file,jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
						_15213_errors=jule::append(_15213_errors,jule::Slice<_157e34dc0_Log>({_17521_err}));
					}
					_15113_parts=jule::append(_15113_parts,jule::Slice<jule::Slice<_150640f50_Token>>({_14614_tokens.slice(static_cast<jule::Int>(_15513_last),static_cast<jule::Int>(_150831fa0_i))}));
					_15513_last=static_cast<jule::Int>(_150831fa0_i + 1LL);
				}
			}
			_iter_next_5675450432:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_150831fa0_i; _150831fa0_token = *__julec_range_begin; goto _iter_begin_5675450432; }
			_iter_end_5675450432:;
		}
	}
	if (_15513_last < _14614_tokens.len()) {
		_15113_parts=jule::append(_15113_parts,jule::Slice<jule::Slice<_150640f50_Token>>({_14614_tokens.slice(static_cast<jule::Int>(_15513_last))}));
	} else if ((!(_14644_expr_must))) {
		_15113_parts=jule::append(_15113_parts,jule::Slice<jule::Slice<_150640f50_Token>>({jule::Slice<_150640f50_Token>({})}));
	}
	return std::make_tuple(_15113_parts,_15213_errors);
}



inline jule::Str _150831fa0_get_close_kind_of_brace(jule::Str _19228_left) {
	{
		auto _match_expr{ _19228_left };
		if (!((jule::Str(")", 1)) == _match_expr)) { goto _case_end_5675467856; }
		_case_begin_5675467856:;
		{
			return jule::Str("(", 1);
		}
		goto _match_end_5675464144;
		_case_end_5675467856:;
		if (!((jule::Str("}", 1)) == _match_expr)) { goto _case_end_5675467968; }
		_case_begin_5675467968:;
		{
			return jule::Str("{", 1);
		}
		goto _match_end_5675464144;
		_case_end_5675467968:;
		if (!((jule::Str("]", 1)) == _match_expr)) { goto _case_end_5675468080; }
		_case_begin_5675468080:;
		{
			return jule::Str("[", 1);
		}
		goto _match_end_5675464144;
		_case_end_5675468080:;
		_case_begin_5675464336:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_5675464144;
		_case_end_5675464336:;
		_match_end_5675464144:;
	}
}



inline _157e34dc0_Log _150831fa0_compiler_err(_150640f50_Token _20117_token,jule::Str _20131_fmt,jule::Slice<jule::Any> _20144_args) {
	return _157e34dc0_Log(1LLU,_20117_token._field_row,_20117_token._field_column,_20117_token._field_file->_method_path(),_157e34dc0_logf(_20131_fmt,_20144_args),_20117_token._field_file->_method_get_row(_20117_token._field_row),jule::Str());
}



inline void _150831fa0_push_suggest(_157e34dc0_Log* _21228_log,jule::Str _21239_fmt,jule::Slice<jule::Any> _21252_args) {
	_21228_log->_field_suggest=_157e34dc0_logf(_21239_fmt,_21252_args);
}



inline jule::Ref<_1506406d0_Comment> _150831fa0_build_comment(_150640f50_Token _21622_token) {
	_21622_token._field_kind=_21622_token._field_kind.slice(2LL).trim(jule::Str(" \n\r\t\v", 5));
	return jule::new_struct<_1506406d0_Comment>(new( std::nothrow ) _1506406d0_Comment(_21622_token,_21622_token._field_kind));
}



inline jule::Str _150831fa0_tokstoa(jule::Slice<_150640f50_Token> _22512_tokens) {
	jule::Str _22613_s = jule::Str("", 0);
	{
		auto __julec_range_expr = _22512_tokens;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			_150640f50_Token _150831fa0_token = *__julec_range_begin;
			_iter_begin_5675483728:;
			{
				_22613_s+=_150831fa0_token._field_kind;
			}
			_iter_next_5675483728:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _150831fa0_token = *__julec_range_begin; goto _iter_begin_5675483728; }
			_iter_end_5675483728:;
		}
	}
	return _22613_s;
}



inline jule::Ref<_1506406d0_TypeDecl> _150aed7c0_build_void_type(void) {
	return jule::new_struct<_1506406d0_TypeDecl>(new( std::nothrow ) _1506406d0_TypeDecl());
}



inline jule::Ref<_1506406d0_TypeDecl> _150aed7c0_build_prim_type(_150640f50_Token _2024_token) {
	return jule::new_struct<_1506406d0_TypeDecl>(new( std::nothrow ) _1506406d0_TypeDecl(_2024_token,jule::Any(jule::new_struct<_1506406d0_IdentTypeDecl>(new( std::nothrow ) _1506406d0_IdentTypeDecl(_2024_token,_2024_token._field_kind,false,nullptr)))));
}



inline std::tuple<jule::Slice<_150640f50_Token>,jule::Int> _150aed7c0_split_map_range(jule::Slice<_150640f50_Token> _3524_tokens,jule::Int& _3546_i) {
	jule::Int _3579_colon = jule::Int();
	jule::Slice<_150640f50_Token> _3556_range_tokens = jule::Slice<_150640f50_Token>();
	_3579_colon=-1LL;
	jule::Int _3713_range_n = 0LL;
	jule::Int _389_start = _3546_i;
	_iter_begin_5675492480:;
	if (!(_3546_i < _3524_tokens.len())) { goto _iter_end_5675492480; }
	{
		_150640f50_Token _4013_token = _3524_tokens[static_cast<jule::Int>(_3546_i)];
		if (_4013_token._field_id == 3LLU) {
			{
				auto _match_expr{ _4013_token._field_kind };
				if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_5675497248; }
				_case_begin_5675497248:;
				{
					(_3713_range_n)++;
					goto _iter_next_5675492480;
				}
				goto _match_end_5675495728;
				_case_end_5675497248:;
				_case_begin_5675496416:;
				{
					(_3713_range_n)--;
				}
				goto _match_end_5675495728;
				_case_end_5675496416:;
				_match_end_5675495728:;
			}
		}
		if (_3713_range_n == 0LL) {
			if ((_389_start + 1LL) > _3546_i) {
				return std::make_tuple(_3556_range_tokens,_3579_colon);
			}
			_3556_range_tokens=_3524_tokens.slice(static_cast<jule::Int>(_389_start + 1LL),static_cast<jule::Int>(_3546_i));
			goto _iter_end_5675492480;
		} else if (_3713_range_n != 1LL) {
			goto _iter_next_5675492480;
		}
		if ((_3579_colon == -1LL) && (_4013_token._field_id == 11LLU)) {
			_3579_colon=static_cast<jule::Int>((_3546_i - _389_start) - 1LL);
		}
	}
	_iter_next_5675492480:;
	(_3546_i)++;
	goto _iter_begin_5675492480;
	_iter_end_5675492480:;
	return std::make_tuple(_3556_range_tokens,_3579_colon);
}



inline void _15199b440_lshift_unsig(_15199b440_Const& _53222_c,_15199b440_Const& _53233_x) {
	jule::U64 _5339_l = _53222_c._method_as_u64();
	jule::U64 _5349_r = _53233_x._method_as_u64();
	_53222_c._method_set_u64(static_cast<jule::U64>(_5339_l << _5349_r));
}



inline void _15199b440_rshift_unsig(_15199b440_Const& _53822_c,_15199b440_Const& _53833_x) {
	jule::U64 _5399_l = _53822_c._method_as_u64();
	jule::U64 _5409_r = _53833_x._method_as_u64();
	_53822_c._method_set_u64(static_cast<jule::U64>(_5399_l >> _5409_r));
}



inline jule::Bool _15199d360_check_bit(jule::Str _914_v,jule::Int _922_bit,jule::Fn<jule::Bool(jule::Str,jule::Int,jule::Int)> _932_checker) {
	{
		if (!((_914_v == jule::Str("", 0)))) { goto _case_end_5678422592; }
		_case_begin_5678422592:;
		{
			return false;
		}
		goto _match_end_5678420256;
		_case_end_5678422592:;
		if (!((_914_v.len() == 1LL))) { goto _case_end_5678421424; }
		_case_begin_5678421424:;
		{
			return true;
		}
		goto _match_end_5678420256;
		_case_end_5678421424:;
		if (!((_914_v.has_prefix(jule::Str("0x", 2))))) { goto _case_end_5678421536; }
		_case_begin_5678421536:;
		{
			return _932_checker(_914_v.slice(2LL),16LL,_922_bit);
		}
		goto _match_end_5678420256;
		_case_end_5678421536:;
		if (!((_914_v.has_prefix(jule::Str("0b", 2))))) { goto _case_end_5678421648; }
		_case_begin_5678421648:;
		{
			return _932_checker(_914_v.slice(2LL),2LL,_922_bit);
		}
		goto _match_end_5678420256;
		_case_end_5678421648:;
		if (!((_914_v.has_prefix(jule::Str("0o", 2))))) { goto _case_end_5678420720; }
		_case_begin_5678420720:;
		{
			return _932_checker(_914_v.slice(2LL),8LL,_922_bit);
		}
		goto _match_end_5678420256;
		_case_end_5678420720:;
		if (!((_914_v[0LL] == '0'))) { goto _case_end_5678420832; }
		_case_begin_5678420832:;
		{
			return _932_checker(_914_v.slice(1LL),8LL,_922_bit);
		}
		goto _match_end_5678420256;
		_case_end_5678420832:;
		_case_begin_5678420416:;
		{
			return _932_checker(_914_v,10LL,_922_bit);
		}
		goto _match_end_5678420256;
		_case_end_5678420416:;
		_match_end_5678420256:;
	}
}



inline jule::Str _15199d360_real_kind_of(jule::Str _2421_kind) {
	{
		auto _match_expr{ _2421_kind };
		if (!((jule::Str("int", 3)) == _match_expr)) { goto _case_end_5678433232; }
		_case_begin_5678433232:;
		{
			return jule::Str("i64", 3);
		}
		goto _match_end_5678428464;
		_case_end_5678433232:;
		if (!((jule::Str("uint", 4)) == _match_expr || (jule::Str("uintptr", 7)) == _match_expr)) { goto _case_end_5678433344; }
		_case_begin_5678433344:;
		{
			return jule::Str("u64", 3);
		}
		goto _match_end_5678428464;
		_case_end_5678433344:;
		_case_begin_5678428224:;
		{
			return _2421_kind;
		}
		goto _match_end_5678428464;
		_case_end_5678428224:;
		_match_end_5678428464:;
	}
}



inline jule::Int _15199d360_bitsize_of(jule::Str _4019_k) {
	{
		auto _match_expr{ _4019_k };
		if (!((jule::Str("i8", 2)) == _match_expr || (jule::Str("u8", 2)) == _match_expr)) { goto _case_end_5678436624; }
		_case_begin_5678436624:;
		{
			return 8LL;
		}
		goto _match_end_5678435536;
		_case_end_5678436624:;
		if (!((jule::Str("i16", 3)) == _match_expr || (jule::Str("u16", 3)) == _match_expr)) { goto _case_end_5678436736; }
		_case_begin_5678436736:;
		{
			return 16LL;
		}
		goto _match_end_5678435536;
		_case_end_5678436736:;
		if (!((jule::Str("i32", 3)) == _match_expr || (jule::Str("u32", 3)) == _match_expr || (jule::Str("f32", 3)) == _match_expr)) { goto _case_end_5678436912; }
		_case_begin_5678436912:;
		{
			return 32LL;
		}
		goto _match_end_5678435536;
		_case_end_5678436912:;
		if (!((jule::Str("i64", 3)) == _match_expr || (jule::Str("u64", 3)) == _match_expr || (jule::Str("f64", 3)) == _match_expr)) { goto _case_end_5678437024; }
		_case_begin_5678437024:;
		{
			return 64LL;
		}
		goto _match_end_5678435536;
		_case_end_5678437024:;
		if (!((jule::Str("uint", 4)) == _match_expr || (jule::Str("int", 3)) == _match_expr)) { goto _case_end_5678437152; }
		_case_begin_5678437152:;
		{
			return 64LL;
		}
		goto _match_end_5678435536;
		_case_end_5678437152:;
		_case_begin_5678433888:;
		{
			return -1LL;
		}
		goto _match_end_5678435536;
		_case_end_5678433888:;
		_match_end_5678435536:;
	}
}



inline jule::Str _15199d360_int_from_bits(jule::U64 _7222_bits) {
	{
		auto _match_expr{ _7222_bits };
		if (!((8LL) == _match_expr)) { goto _case_end_5678441088; }
		_case_begin_5678441088:;
		{
			return jule::Str("i8", 2);
		}
		goto _match_end_5678439088;
		_case_end_5678441088:;
		if (!((16LL) == _match_expr)) { goto _case_end_5678441200; }
		_case_begin_5678441200:;
		{
			return jule::Str("i16", 3);
		}
		goto _match_end_5678439088;
		_case_end_5678441200:;
		if (!((32LL) == _match_expr)) { goto _case_end_5678441312; }
		_case_begin_5678441312:;
		{
			return jule::Str("i32", 3);
		}
		goto _match_end_5678439088;
		_case_end_5678441312:;
		if (!((64LL) == _match_expr)) { goto _case_end_5678442256; }
		_case_begin_5678442256:;
		{
			return jule::Str("i64", 3);
		}
		goto _match_end_5678439088;
		_case_end_5678442256:;
		_case_begin_5678440448:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_5678439088;
		_case_end_5678440448:;
		_match_end_5678439088:;
	}
}



inline jule::Str _15199d360_uint_from_bits(jule::U64 _8523_bits) {
	{
		auto _match_expr{ _8523_bits };
		if (!((8LL) == _match_expr)) { goto _case_end_5678435088; }
		_case_begin_5678435088:;
		{
			return jule::Str("u8", 2);
		}
		goto _match_end_5678444272;
		_case_end_5678435088:;
		if (!((16LL) == _match_expr)) { goto _case_end_5678435200; }
		_case_begin_5678435200:;
		{
			return jule::Str("u16", 3);
		}
		goto _match_end_5678444272;
		_case_end_5678435200:;
		if (!((32LL) == _match_expr)) { goto _case_end_5678435312; }
		_case_begin_5678435312:;
		{
			return jule::Str("u32", 3);
		}
		goto _match_end_5678444272;
		_case_end_5678435312:;
		if (!((64LL) == _match_expr)) { goto _case_end_5678446272; }
		_case_begin_5678446272:;
		{
			return jule::Str("u64", 3);
		}
		goto _match_end_5678444272;
		_case_end_5678446272:;
		_case_begin_5678445088:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_5678444272;
		_case_end_5678445088:;
		_match_end_5678444272:;
	}
}



inline jule::Str _15199d360_float_from_bits(jule::U64 _9924_bits) {
	{
		auto _match_expr{ _9924_bits };
		if (!((32LL) == _match_expr)) { goto _case_end_5678447664; }
		_case_begin_5678447664:;
		{
			return jule::Str("f32", 3);
		}
		goto _match_end_5678448208;
		_case_end_5678447664:;
		if (!((64LL) == _match_expr)) { goto _case_end_5678447776; }
		_case_begin_5678447776:;
		{
			return jule::Str("f64", 3);
		}
		goto _match_end_5678448208;
		_case_end_5678447776:;
		_case_begin_5678449072:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_5678448208;
		_case_end_5678449072:;
		_match_end_5678448208:;
	}
}



inline jule::Bool _15199d360_check_bit_int(jule::Str _10822_v,jule::Int _10830_bit) {
	return _15199d360_check_bit(_10822_v,_10830_bit,jule::Fn<jule::Bool(jule::Str,jule::Int,jule::Int)>([=](jule::Str _10930_v,jule::Int _10938_base,jule::Int _10949_bit) mutable -> jule::Bool {
		jule::Int _11017_err;
		std::tie(std::ignore,_11017_err) = _147e40080_parse_int(_10930_v,_10938_base,_10949_bit);
		return _11017_err == 0LLU;
	}));
}



inline jule::Bool _15199d360_check_bit_uint(jule::Str _11623_v,jule::Int _11631_bit) {
	return _15199d360_check_bit(_11623_v,_11631_bit,jule::Fn<jule::Bool(jule::Str,jule::Int,jule::Int)>([=](jule::Str _11730_v,jule::Int _11738_base,jule::Int _11749_bit) mutable -> jule::Bool {
		jule::Int _11817_err;
		std::tie(std::ignore,_11817_err) = _147e40080_parse_uint(_11730_v,_11738_base,_11749_bit);
		return _11817_err == 0LLU;
	}));
}



inline jule::Bool _15199d360_check_bit_float(jule::Str _12424_val,jule::Int _12434_bit) {
	jule::Int _12513_err;
	std::tie(std::ignore,_12513_err) = _147fb9200_parse_float(_12424_val,_12434_bit);
	return _12513_err == 0LLU;
}



inline jule::U64 _15199d360_bitsize_of_float(jule::F64 _13425_x) {
	{
		if (!(((-340282346638528860000000000000000000000.0 <= _13425_x) && (_13425_x <= 340282346638528860000000000000000000000.0)))) { goto _case_end_5678473072; }
		_case_begin_5678473072:;
		{
			return 32LL;
		}
		goto _match_end_5678470848;
		_case_end_5678473072:;
		_case_begin_5678471008:;
		{
			return 64LL;
		}
		goto _match_end_5678470848;
		_case_end_5678471008:;
		_match_end_5678470848:;
	}
}



inline jule::U64 _15199d360_bitsize_of_int(jule::I64 _14823_x) {
	{
		if (!(((-128LL <= _14823_x) && (_14823_x <= 127LL)))) { goto _case_end_5678475984; }
		_case_begin_5678475984:;
		{
			return 8LL;
		}
		goto _match_end_5678473728;
		_case_end_5678475984:;
		if (!(((-32768LL <= _14823_x) && (_14823_x <= 32767LL)))) { goto _case_end_5678475552; }
		_case_begin_5678475552:;
		{
			return 16LL;
		}
		goto _match_end_5678473728;
		_case_end_5678475552:;
		if (!(((-2147483648LL <= _14823_x) && (_14823_x <= 2147483647LL)))) { goto _case_end_5678475664; }
		_case_begin_5678475664:;
		{
			return 32LL;
		}
		goto _match_end_5678473728;
		_case_end_5678475664:;
		_case_begin_5678473824:;
		{
			return 64LL;
		}
		goto _match_end_5678473728;
		_case_end_5678473824:;
		_match_end_5678473728:;
	}
}



inline jule::U64 _15199d360_bitsize_of_uint(jule::U64 _16424_x) {
	{
		if (!((_16424_x <= 255LL))) { goto _case_end_5678481104; }
		_case_begin_5678481104:;
		{
			return 8LL;
		}
		goto _match_end_5678478208;
		_case_end_5678481104:;
		if (!((_16424_x <= 65535LL))) { goto _case_end_5678480672; }
		_case_begin_5678480672:;
		{
			return 16LL;
		}
		goto _match_end_5678478208;
		_case_end_5678480672:;
		if (!((_16424_x <= 4294967295LL))) { goto _case_end_5678480784; }
		_case_begin_5678480784:;
		{
			return 32LL;
		}
		goto _match_end_5678478208;
		_case_end_5678480784:;
		_case_begin_5678479248:;
		{
			return 64LL;
		}
		goto _match_end_5678478208;
		_case_end_5678479248:;
		_match_end_5678478208:;
	}
}



inline jule::F64 _15199dfc0_min_of(jule::Str _4319_k) {
	_4319_k=_15199d360_real_kind_of(_4319_k);
	{
		auto _match_expr{ _4319_k };
		if (!((jule::Str("i8", 2)) == _match_expr)) { goto _case_end_5678485488; }
		_case_begin_5678485488:;
		{
			return -128LL;
		}
		goto _match_end_5678483104;
		_case_end_5678485488:;
		if (!((jule::Str("i16", 3)) == _match_expr)) { goto _case_end_5678485008; }
		_case_begin_5678485008:;
		{
			return -32768LL;
		}
		goto _match_end_5678483104;
		_case_end_5678485008:;
		if (!((jule::Str("i32", 3)) == _match_expr)) { goto _case_end_5678485120; }
		_case_begin_5678485120:;
		{
			return -2147483648LL;
		}
		goto _match_end_5678483104;
		_case_end_5678485120:;
		if (!((jule::Str("i64", 3)) == _match_expr)) { goto _case_end_5678484608; }
		_case_begin_5678484608:;
		{
			return jule::MIN_I64;
		}
		goto _match_end_5678483104;
		_case_end_5678484608:;
		if (!((jule::Str("f32", 3)) == _match_expr)) { goto _case_end_5678484720; }
		_case_begin_5678484720:;
		{
			return -340282346638528860000000000000000000000.0;
		}
		goto _match_end_5678483104;
		_case_end_5678484720:;
		if (!((jule::Str("f64", 3)) == _match_expr)) { goto _case_end_5678484832; }
		_case_begin_5678484832:;
		{
			return jule::MIN_F64;
		}
		goto _match_end_5678483104;
		_case_end_5678484832:;
		_case_begin_5678483664:;
		{
			return 0LL;
		}
		goto _match_end_5678483104;
		_case_end_5678483664:;
		_match_end_5678483104:;
	}
}



inline jule::F64 _15199dfc0_max_of(jule::Str _5819_k) {
	_5819_k=_15199d360_real_kind_of(_5819_k);
	{
		auto _match_expr{ _5819_k };
		if (!((jule::Str("i8", 2)) == _match_expr)) { goto _case_end_5678490944; }
		_case_begin_5678490944:;
		{
			return 127LL;
		}
		goto _match_end_5678489216;
		_case_end_5678490944:;
		if (!((jule::Str("i16", 3)) == _match_expr)) { goto _case_end_5678491056; }
		_case_begin_5678491056:;
		{
			return 32767LL;
		}
		goto _match_end_5678489216;
		_case_end_5678491056:;
		if (!((jule::Str("i32", 3)) == _match_expr)) { goto _case_end_5678490144; }
		_case_begin_5678490144:;
		{
			return 2147483647LL;
		}
		goto _match_end_5678489216;
		_case_end_5678490144:;
		if (!((jule::Str("i64", 3)) == _match_expr)) { goto _case_end_5678490256; }
		_case_begin_5678490256:;
		{
			return jule::MAX_I64;
		}
		goto _match_end_5678489216;
		_case_end_5678490256:;
		if (!((jule::Str("u8", 2)) == _match_expr)) { goto _case_end_5678490368; }
		_case_begin_5678490368:;
		{
			return 255LL;
		}
		goto _match_end_5678489216;
		_case_end_5678490368:;
		if (!((jule::Str("u16", 3)) == _match_expr)) { goto _case_end_5678490480; }
		_case_begin_5678490480:;
		{
			return 65535LL;
		}
		goto _match_end_5678489216;
		_case_end_5678490480:;
		if (!((jule::Str("u32", 3)) == _match_expr)) { goto _case_end_5678490592; }
		_case_begin_5678490592:;
		{
			return 4294967295LL;
		}
		goto _match_end_5678489216;
		_case_end_5678490592:;
		if (!((jule::Str("u64", 3)) == _match_expr)) { goto _case_end_5678490704; }
		_case_begin_5678490704:;
		{
			return jule::MAX_U64;
		}
		goto _match_end_5678489216;
		_case_end_5678490704:;
		if (!((jule::Str("f32", 3)) == _match_expr)) { goto _case_end_5678490816; }
		_case_begin_5678490816:;
		{
			return 340282346638528860000000000000000000000.0;
		}
		goto _match_end_5678489216;
		_case_end_5678490816:;
		if (!((jule::Str("f64", 3)) == _match_expr)) { goto _case_end_5678491584; }
		_case_begin_5678491584:;
		{
			return jule::MAX_F64;
		}
		goto _match_end_5678489216;
		_case_end_5678491584:;
		_case_begin_5678486976:;
		{
			return 0LL;
		}
		goto _match_end_5678489216;
		_case_end_5678486976:;
		_match_end_5678489216:;
	}
}



inline jule::Bool _151a210d0_is_i8_compatible(jule::Str _629_k) {
	_629_k=_15199d360_real_kind_of(_629_k);
	return _629_k == jule::Str("i8", 2);
}



inline jule::Bool _151a210d0_is_i16_compatible(jule::Str _1230_k) {
	_1230_k=_15199d360_real_kind_of(_1230_k);
	return ((_1230_k == jule::Str("i8", 2)) || (_1230_k == jule::Str("i16", 3))) || (_1230_k == jule::Str("u8", 2));
}



inline jule::Bool _151a210d0_is_i32_compatible(jule::Str _2030_k) {
	_2030_k=_15199d360_real_kind_of(_2030_k);
	return ((((_2030_k == jule::Str("i8", 2)) || (_2030_k == jule::Str("i16", 3))) || (_2030_k == jule::Str("i32", 3))) || (_2030_k == jule::Str("u8", 2))) || (_2030_k == jule::Str("u16", 3));
}



inline jule::Bool _151a210d0_is_i64_compatible(jule::Str _3030_k) {
	_3030_k=_15199d360_real_kind_of(_3030_k);
	return ((((((_3030_k == jule::Str("i8", 2)) || (_3030_k == jule::Str("i16", 3))) || (_3030_k == jule::Str("i32", 3))) || (_3030_k == jule::Str("i64", 3))) || (_3030_k == jule::Str("u8", 2))) || (_3030_k == jule::Str("u16", 3))) || (_3030_k == jule::Str("u32", 3));
}



inline jule::Bool _151a210d0_is_u8_compatible(jule::Str _4229_k) {
	_4229_k=_15199d360_real_kind_of(_4229_k);
	return _4229_k == jule::Str("u8", 2);
}



inline jule::Bool _151a210d0_is_u16_compatible(jule::Str _4830_k) {
	_4830_k=_15199d360_real_kind_of(_4830_k);
	return (_4830_k == jule::Str("u8", 2)) || (_4830_k == jule::Str("u16", 3));
}



inline jule::Bool _151a210d0_is_u32_compatible(jule::Str _5430_k) {
	_5430_k=_15199d360_real_kind_of(_5430_k);
	return ((_5430_k == jule::Str("u8", 2)) || (_5430_k == jule::Str("u16", 3))) || (_5430_k == jule::Str("u32", 3));
}



inline jule::Bool _151a210d0_is_u64_compatible(jule::Str _6230_k) {
	_6230_k=_15199d360_real_kind_of(_6230_k);
	return (((_6230_k == jule::Str("u8", 2)) || (_6230_k == jule::Str("u16", 3))) || (_6230_k == jule::Str("u32", 3))) || (_6230_k == jule::Str("u64", 3));
}



inline jule::Bool _151a210d0_is_f32_compatible(jule::Str _7130_k) {
	_7130_k=_15199d360_real_kind_of(_7130_k);
	return _7130_k == jule::Str("f32", 3);
}



inline jule::Bool _151a210d0_is_f64_compatible(jule::Str _7730_k) {
	_7730_k=_15199d360_real_kind_of(_7730_k);
	return (_7730_k == jule::Str("f64", 3)) || (_7730_k == jule::Str("f32", 3));
}



inline jule::Bool _151a210d0_types_are_compatible(jule::Str _8633_k1,jule::Str _8642_k2) {
	_8633_k1=_15199d360_real_kind_of(_8633_k1);
	{
		auto _match_expr{ _8633_k1 };
		if (!((jule::Str("any", 3)) == _match_expr)) { goto _case_end_5678520736; }
		_case_begin_5678520736:;
		{
			return true;
		}
		goto _match_end_5678513472;
		_case_end_5678520736:;
		if (!((jule::Str("i8", 2)) == _match_expr)) { goto _case_end_5678521008; }
		_case_begin_5678521008:;
		{
			return _151a210d0_is_i8_compatible(_8642_k2);
		}
		goto _match_end_5678513472;
		_case_end_5678521008:;
		if (!((jule::Str("i16", 3)) == _match_expr)) { goto _case_end_5678521120; }
		_case_begin_5678521120:;
		{
			return _151a210d0_is_i16_compatible(_8642_k2);
		}
		goto _match_end_5678513472;
		_case_end_5678521120:;
		if (!((jule::Str("i32", 3)) == _match_expr)) { goto _case_end_5678521232; }
		_case_begin_5678521232:;
		{
			return _151a210d0_is_i32_compatible(_8642_k2);
		}
		goto _match_end_5678513472;
		_case_end_5678521232:;
		if (!((jule::Str("i64", 3)) == _match_expr)) { goto _case_end_5678521344; }
		_case_begin_5678521344:;
		{
			return _151a210d0_is_i64_compatible(_8642_k2);
		}
		goto _match_end_5678513472;
		_case_end_5678521344:;
		if (!((jule::Str("u8", 2)) == _match_expr)) { goto _case_end_5678521568; }
		_case_begin_5678521568:;
		{
			return _151a210d0_is_u8_compatible(_8642_k2);
		}
		goto _match_end_5678513472;
		_case_end_5678521568:;
		if (!((jule::Str("u16", 3)) == _match_expr)) { goto _case_end_5678521680; }
		_case_begin_5678521680:;
		{
			return _151a210d0_is_u16_compatible(_8642_k2);
		}
		goto _match_end_5678513472;
		_case_end_5678521680:;
		if (!((jule::Str("u32", 3)) == _match_expr)) { goto _case_end_5678521792; }
		_case_begin_5678521792:;
		{
			return _151a210d0_is_u32_compatible(_8642_k2);
		}
		goto _match_end_5678513472;
		_case_end_5678521792:;
		if (!((jule::Str("u64", 3)) == _match_expr)) { goto _case_end_5678521904; }
		_case_begin_5678521904:;
		{
			return _151a210d0_is_u64_compatible(_8642_k2);
		}
		goto _match_end_5678513472;
		_case_end_5678521904:;
		if (!((jule::Str("f32", 3)) == _match_expr)) { goto _case_end_5678522048; }
		_case_begin_5678522048:;
		{
			return _151a210d0_is_f32_compatible(_8642_k2);
		}
		goto _match_end_5678513472;
		_case_end_5678522048:;
		if (!((jule::Str("f64", 3)) == _match_expr)) { goto _case_end_5678522160; }
		_case_begin_5678522160:;
		{
			return _151a210d0_is_f64_compatible(_8642_k2);
		}
		goto _match_end_5678513472;
		_case_end_5678522160:;
		if (!((jule::Str("bool", 4)) == _match_expr)) { goto _case_end_5678522272; }
		_case_begin_5678522272:;
		{
			return _8642_k2 == jule::Str("bool", 4);
		}
		goto _match_end_5678513472;
		_case_end_5678522272:;
		if (!((jule::Str("str", 3)) == _match_expr)) { goto _case_end_5678522384; }
		_case_begin_5678522384:;
		{
			return _8642_k2 == jule::Str("str", 3);
		}
		goto _match_end_5678513472;
		_case_end_5678522384:;
		_case_begin_5678518576:;
		{
			return false;
		}
		goto _match_end_5678513472;
		_case_end_5678518576:;
		_match_end_5678513472:;
	}
}



inline jule::Bool _151a210d0_is_i16_greater(jule::Str _10727_k) {
	_10727_k=_15199d360_real_kind_of(_10727_k);
	return _10727_k == jule::Str("u8", 2);
}



inline jule::Bool _151a210d0_is_i32_greater(jule::Str _11327_k) {
	_11327_k=_15199d360_real_kind_of(_11327_k);
	return (_11327_k == jule::Str("i8", 2)) || (_11327_k == jule::Str("i16", 3));
}



inline jule::Bool _151a210d0_is_i64_greater(jule::Str _11927_k) {
	_11927_k=_15199d360_real_kind_of(_11927_k);
	return ((_11927_k == jule::Str("i8", 2)) || (_11927_k == jule::Str("i16", 3))) || (_11927_k == jule::Str("i32", 3));
}



inline jule::Bool _151a210d0_is_u8_greater(jule::Str _12726_k) {
	_12726_k=_15199d360_real_kind_of(_12726_k);
	return _12726_k == jule::Str("i8", 2);
}



inline jule::Bool _151a210d0_is_u16_greater(jule::Str _13327_k) {
	_13327_k=_15199d360_real_kind_of(_13327_k);
	return ((_13327_k == jule::Str("u8", 2)) || (_13327_k == jule::Str("i8", 2))) || (_13327_k == jule::Str("i16", 3));
}



inline jule::Bool _151a210d0_is_u32_greater(jule::Str _14127_k) {
	_14127_k=_15199d360_real_kind_of(_14127_k);
	return ((((_14127_k == jule::Str("u8", 2)) || (_14127_k == jule::Str("u16", 3))) || (_14127_k == jule::Str("i8", 2))) || (_14127_k == jule::Str("i16", 3))) || (_14127_k == jule::Str("i32", 3));
}



inline jule::Bool _151a210d0_is_u64_greater(jule::Str _15127_k) {
	_15127_k=_15199d360_real_kind_of(_15127_k);
	return ((((((_15127_k == jule::Str("u8", 2)) || (_15127_k == jule::Str("u16", 3))) || (_15127_k == jule::Str("u32", 3))) || (_15127_k == jule::Str("i8", 2))) || (_15127_k == jule::Str("i16", 3))) || (_15127_k == jule::Str("i32", 3))) || (_15127_k == jule::Str("i64", 3));
}



inline jule::Bool _151a210d0_is_f32_greater(jule::Str _16323_k) {
	return _16323_k != jule::Str("f64", 3);
}



inline jule::Bool _151a210d0_is_f64_greater(jule::Str _16523_k) {
	return true;
}



inline jule::Bool _151a210d0_is_greater(jule::Str _16823_k1,jule::Str _16832_k2) {
	_16823_k1=_15199d360_real_kind_of(_16823_k1);
	{
		auto _match_expr{ _16823_k1 };
		if (!((jule::Str("i16", 3)) == _match_expr)) { goto _case_end_5678550544; }
		_case_begin_5678550544:;
		{
			return _151a210d0_is_i16_greater(_16832_k2);
		}
		goto _match_end_5678548592;
		_case_end_5678550544:;
		if (!((jule::Str("i32", 3)) == _match_expr)) { goto _case_end_5678550656; }
		_case_begin_5678550656:;
		{
			return _151a210d0_is_i32_greater(_16832_k2);
		}
		goto _match_end_5678548592;
		_case_end_5678550656:;
		if (!((jule::Str("i64", 3)) == _match_expr)) { goto _case_end_5678551424; }
		_case_begin_5678551424:;
		{
			return _151a210d0_is_i64_greater(_16832_k2);
		}
		goto _match_end_5678548592;
		_case_end_5678551424:;
		if (!((jule::Str("u16", 3)) == _match_expr)) { goto _case_end_5678551536; }
		_case_begin_5678551536:;
		{
			return _151a210d0_is_u16_greater(_16832_k2);
		}
		goto _match_end_5678548592;
		_case_end_5678551536:;
		if (!((jule::Str("u8", 2)) == _match_expr)) { goto _case_end_5678551648; }
		_case_begin_5678551648:;
		{
			return _151a210d0_is_u8_greater(_16832_k2);
		}
		goto _match_end_5678548592;
		_case_end_5678551648:;
		if (!((jule::Str("u32", 3)) == _match_expr)) { goto _case_end_5678551776; }
		_case_begin_5678551776:;
		{
			return _151a210d0_is_u32_greater(_16832_k2);
		}
		goto _match_end_5678548592;
		_case_end_5678551776:;
		if (!((jule::Str("u64", 3)) == _match_expr)) { goto _case_end_5678550800; }
		_case_begin_5678550800:;
		{
			return _151a210d0_is_u64_greater(_16832_k2);
		}
		goto _match_end_5678548592;
		_case_end_5678550800:;
		if (!((jule::Str("f32", 3)) == _match_expr)) { goto _case_end_5678550928; }
		_case_begin_5678550928:;
		{
			return _151a210d0_is_f32_greater(_16832_k2);
		}
		goto _match_end_5678548592;
		_case_end_5678550928:;
		if (!((jule::Str("f64", 3)) == _match_expr)) { goto _case_end_5678551056; }
		_case_begin_5678551056:;
		{
			return _151a210d0_is_f64_greater(_16832_k2);
		}
		goto _match_end_5678548592;
		_case_end_5678551056:;
		if (!((jule::Str("any", 3)) == _match_expr)) { goto _case_end_5678551184; }
		_case_begin_5678551184:;
		{
			return true;
		}
		goto _match_end_5678548592;
		_case_end_5678551184:;
		_case_begin_5678549904:;
		{
			return false;
		}
		goto _match_end_5678548592;
		_case_end_5678549904:;
		_match_end_5678548592:;
	}
}



inline jule::Bool _1519b1410_is_sig_int(jule::Str _2723_k) {
	_2723_k=_15199d360_real_kind_of(_2723_k);
	return (((_2723_k == jule::Str("i8", 2)) || (_2723_k == jule::Str("i16", 3))) || (_2723_k == jule::Str("i32", 3))) || (_2723_k == jule::Str("i64", 3));
}



inline jule::Bool _1519b1410_is_unsig_int(jule::Str _3825_k) {
	_3825_k=_15199d360_real_kind_of(_3825_k);
	return (((_3825_k == jule::Str("u8", 2)) || (_3825_k == jule::Str("u16", 3))) || (_3825_k == jule::Str("u32", 3))) || (_3825_k == jule::Str("u64", 3));
}



inline jule::Bool _1519b1410_is_int(jule::Str _4915_k) {
	return _1519b1410_is_sig_int(_4915_k) || _1519b1410_is_unsig_int(_4915_k);
}



inline jule::Bool _1519b1410_is_float(jule::Str _5417_k) {
	return (_5417_k == jule::Str("f32", 3)) || (_5417_k == jule::Str("f64", 3));
}



inline jule::Bool _1519b1410_is_num(jule::Str _5915_k) {
	return _1519b1410_is_int(_5915_k) || _1519b1410_is_float(_5915_k);
}



inline jule::Bool _1519b1410_is_sig_num(jule::Str _6419_k) {
	return _1519b1410_is_sig_int(_6419_k) || _1519b1410_is_float(_6419_k);
}



inline std::tuple<jule::Str,jule::Bool> _151ae6af0_is_byte_lit(jule::Str _1524_kind) {
	if (_1524_kind.len() < 3LL) {
		return std::make_tuple(jule::Str("", 0),false);
	}
	_1524_kind=_1524_kind.slice(1LL,static_cast<jule::Int>(_1524_kind.len() - 1LL));
	jule::Bool _2113_is_byte = false;
	{
		if (!(((_1524_kind.len() == 1LL) && (_1524_kind[0LL] <= 255LL)))) { goto _case_end_5678587952; }
		_case_begin_5678587952:;
		{
			_2113_is_byte=true;
		}
		goto _match_end_5678587696;
		_case_end_5678587952:;
		if (!(((_1524_kind[0LL] == '\\') && (_1524_kind[1LL] == 'x')))) { goto _case_end_5678588064; }
		_case_begin_5678588064:;
		{
			_2113_is_byte=true;
		}
		goto _match_end_5678587696;
		_case_end_5678588064:;
		if (!((((_1524_kind[0LL] == '\\') && (_1524_kind[1LL] >= '0')) && (_1524_kind[1LL] <= '7')))) { goto _case_end_5678588176; }
		_case_begin_5678588176:;
		{
			_2113_is_byte=true;
		}
		goto _match_end_5678587696;
		_case_end_5678588176:;
		_match_end_5678587696:;
	}
	return std::make_tuple(_1524_kind,_2113_is_byte);
}



inline jule::I32 _151ae6af0_to_rune(jule::Slice<jule::U8> _4016_bytes) {
	if (_4016_bytes.len() == 0LL) {
		return 0LL;
	}
	jule::I32 _4513_r = 0LL;
	if ((_4016_bytes[0LL] == '\\') && (_4016_bytes.len() > 1LL)) {
		jule::Int _4717_i = 0LL;
		_4513_r=static_cast<jule::I32>(_151ae6af0_rune_from_esq_seq(_4016_bytes,_4717_i));
	} else {
		std::tie(_4513_r,std::ignore) = _15081f100_decode_rune(_4016_bytes);
	}
	return _4513_r;
}



inline jule::Str _151ae6af0_to_raw_str(jule::Slice<jule::U8> _5919_bytes) {
	return static_cast<jule::Str>(_5919_bytes);
}



inline jule::Str _151ae6af0_to_str(jule::Slice<jule::U8> _6415_bytes) {
	if (_6415_bytes.len() == 0LL) {
		return jule::Str("", 0);
	}
	jule::Str _6913_s = jule::Str("", 0);
	jule::Int _7013_i = 0LL;
	_iter_begin_5678604816:;
	if (!(_7013_i < _6415_bytes.len())) { goto _iter_end_5678604816; }
	{
		jule::U8 _7213_b = _6415_bytes[static_cast<jule::Int>(_7013_i)];
		if (_7213_b == '\\') {
			_6913_s+=_151ae6af0_str_esq_seq(_6415_bytes,_7013_i);
		} else {
			jule::I32 _7618_r;
			jule::Int _7621_size;
			std::tie(_7618_r,_7621_size) = _15081f100_decode_rune(_6415_bytes.slice(static_cast<jule::Int>(_7013_i)));
			_7013_i+=_7621_size;
			_6913_s+=static_cast<jule::Str>(_7618_r);
		}
	}
	_iter_next_5678604816:;
	goto _iter_begin_5678604816;
	_iter_end_5678604816:;
	return _6913_s;
}



inline std::tuple<jule::U8,jule::Bool> _151ae6af0_try_btoa_common_esq(jule::Slice<jule::U8> _8424_bytes) {
	jule::Bool _8452_ok = jule::Bool();
	jule::U8 _8441_seq = jule::U8();
	if ((_8424_bytes.len() < 2LL) || (_8424_bytes[0LL] != '\\')) {
		return std::make_tuple(_8441_seq,_8452_ok);
	}
	{
		auto _match_expr{ _8424_bytes[1LL] };
		if (!(('\\') == _match_expr)) { goto _case_end_5678615232; }
		_case_begin_5678615232:;
		{
			_8441_seq='\\';
		}
		goto _match_end_5678614048;
		_case_end_5678615232:;
		if (!(('\'') == _match_expr)) { goto _case_end_5678615344; }
		_case_begin_5678615344:;
		{
			_8441_seq='\'';
		}
		goto _match_end_5678614048;
		_case_end_5678615344:;
		if (!(('\"') == _match_expr)) { goto _case_end_5678615664; }
		_case_begin_5678615664:;
		{
			_8441_seq='\"';
		}
		goto _match_end_5678614048;
		_case_end_5678615664:;
		if (!(('a') == _match_expr)) { goto _case_end_5678615776; }
		_case_begin_5678615776:;
		{
			_8441_seq='\a';
		}
		goto _match_end_5678614048;
		_case_end_5678615776:;
		if (!(('b') == _match_expr)) { goto _case_end_5678615888; }
		_case_begin_5678615888:;
		{
			_8441_seq='\b';
		}
		goto _match_end_5678614048;
		_case_end_5678615888:;
		if (!(('f') == _match_expr)) { goto _case_end_5678616000; }
		_case_begin_5678616000:;
		{
			_8441_seq='\f';
		}
		goto _match_end_5678614048;
		_case_end_5678616000:;
		if (!(('n') == _match_expr)) { goto _case_end_5678616112; }
		_case_begin_5678616112:;
		{
			_8441_seq='\n';
		}
		goto _match_end_5678614048;
		_case_end_5678616112:;
		if (!(('r') == _match_expr)) { goto _case_end_5678616224; }
		_case_begin_5678616224:;
		{
			_8441_seq='\r';
		}
		goto _match_end_5678614048;
		_case_end_5678616224:;
		if (!(('t') == _match_expr)) { goto _case_end_5678616336; }
		_case_begin_5678616336:;
		{
			_8441_seq='\t';
		}
		goto _match_end_5678614048;
		_case_end_5678616336:;
		if (!(('v') == _match_expr)) { goto _case_end_5678616448; }
		_case_begin_5678616448:;
		{
			_8441_seq='\v';
		}
		goto _match_end_5678614048;
		_case_end_5678616448:;
		_match_end_5678614048:;
	}
	_8452_ok=_8441_seq != 0LL;
	return std::make_tuple(_8441_seq,_8452_ok);
}



inline jule::I32 _151ae6af0_rune_from_esq_seq(jule::Slice<jule::U8> _10622_bytes,jule::Int& _10642_i) {
	jule::U8 _10710_b;
	jule::Bool _10713_ok;
	std::tie(_10710_b,_10713_ok) = _151ae6af0_try_btoa_common_esq(_10622_bytes.slice(static_cast<jule::Int>(_10642_i)));
	(_10642_i)++;
	if (_10713_ok) {
		(_10642_i)++;
		return static_cast<jule::I32>(_10710_b);
	}
	{
		auto _match_expr{ _10622_bytes[static_cast<jule::Int>(_10642_i)] };
		if (!(('u') == _match_expr)) { goto _case_end_5678631760; }
		_case_begin_5678631760:;
		{
			
			jule::U64 _11714_rc;
			std::tie(_11714_rc,std::ignore) = _147e40080_parse_uint(static_cast<jule::Str>(_10622_bytes.slice(static_cast<jule::Int>(_10642_i + 1LL),static_cast<jule::Int>(_10642_i + 5LL))),16LL,64LL);
			_10642_i+=5LL;
			jule::I32 _11913_r = static_cast<jule::I32>(_11714_rc);
			return _11913_r;
		}
		goto _match_end_5678626944;
		_case_end_5678631760:;
		if (!(('U') == _match_expr)) { goto _case_end_5678633424; }
		_case_begin_5678633424:;
		{
			
			jule::U64 _12414_rc;
			std::tie(_12414_rc,std::ignore) = _147e40080_parse_uint(static_cast<jule::Str>(_10622_bytes.slice(static_cast<jule::Int>(_10642_i + 1LL),static_cast<jule::Int>(_10642_i + 9LL))),16LL,64LL);
			_10642_i+=9LL;
			jule::I32 _12613_r = static_cast<jule::I32>(_12414_rc);
			return _12613_r;
		}
		goto _match_end_5678626944;
		_case_end_5678633424:;
		if (!(('x') == _match_expr)) { goto _case_end_5678633536; }
		_case_begin_5678633536:;
		{
			
			jule::Slice<jule::U8> _13113_seq = _10622_bytes.slice(static_cast<jule::Int>(_10642_i + 1LL),static_cast<jule::Int>(_10642_i + 3LL));
			_10642_i+=3LL;
			jule::U64 _13314_b;
			std::tie(_13314_b,std::ignore) = _147e40080_parse_uint(static_cast<jule::Str>(_13113_seq),16LL,64LL);
			return static_cast<jule::I32>(_13314_b);
		}
		goto _match_end_5678626944;
		_case_end_5678633536:;
		_case_begin_5678626016:;
		{
			
			jule::Slice<jule::U8> _13813_seq = _10622_bytes.slice(static_cast<jule::Int>(_10642_i),static_cast<jule::Int>(_10642_i + 3LL));
			_10642_i+=3LL;
			jule::U64 _14014_b;
			std::tie(_14014_b,std::ignore) = _147e40080_parse_uint(static_cast<jule::Str>(_13813_seq.slice(1LL)),8LL,64LL);
			return static_cast<jule::I32>(_14014_b);
		}
		goto _match_end_5678626944;
		_case_end_5678626016:;
		_match_end_5678626944:;
	}
}



inline jule::Str _151ae6af0_str_esq_seq(jule::Slice<jule::U8> _14516_bytes,jule::Int& _14536_i) {
	jule::I32 _1469_r = _151ae6af0_rune_from_esq_seq(_14516_bytes,_14536_i);
	if (_1469_r <= 255LL) {
		return static_cast<jule::Str>(_1469_r);
	}
	return _151ae6af0_to_str(static_cast<jule::Slice<jule::U8>>(static_cast<jule::Str>(_1469_r)));
}



inline jule::Ref<_150e75a70_ReferenceStack> _150e75a70_new_reference_stack(void) {
	return jule::new_struct<_150e75a70_ReferenceStack>(new( std::nothrow ) _150e75a70_ReferenceStack());
}



inline jule::Str _150e75a70_str_repeat(jule::Str _9715_sub,jule::Int _9729_n) {
	if (_9729_n == 0LL) {
		return jule::Str("", 0);
	}
	jule::Str _10213_s = jule::Str("", 0);
	_iter_begin_5681094000:;
	if (!(_9729_n > 0LL)) { goto _iter_end_5681094000; }
	{
		_10213_s+=_9715_sub;
	}
	_iter_next_5681094000:;
	(_9729_n)--;
	goto _iter_begin_5681094000;
	_iter_end_5681094000:;
	return _10213_s;
}



inline jule::Str _150e75a70_build_doc(jule::Ref<_1506406d0_CommentGroup> _10918_cg) {
	if ((!(jule::real(_10918_cg)))) {
		return jule::Str("", 0);
	}
	jule::Str _11413_doc = jule::Str("", 0);
	{
		auto __julec_range_expr = _10918_cg->_field_comments;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_1506406d0_Comment> _150e75a70_c = *__julec_range_begin;
			_iter_begin_5681098592:;
			{
				_11413_doc+=_150e75a70_c->_field_text;
				_11413_doc+=jule::Str(" ", 1);
			}
			_iter_next_5681098592:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _150e75a70_c = *__julec_range_begin; goto _iter_begin_5681098592; }
			_iter_end_5681098592:;
		}
	}
	return _11413_doc;
}



inline jule::Ref<_15177b070_TypeSymbol> _150e75a70_build_type(jule::Ref<_1506406d0_TypeDecl> _12219_t) {
	if ((!(jule::real(_12219_t)))) {
		return jule::new_ref<_15177b070_TypeSymbol>();
	}
	return jule::new_struct<_15177b070_TypeSymbol>(new( std::nothrow ) _15177b070_TypeSymbol(_12219_t,jule::Ref<_15177b070_TypeKind>()));
}



inline jule::Ref<_151290fd0_Value> _150e75a70_build_expr(jule::Ref<_1506406d0_Expr> _13119_expr) {
	if ((!(jule::real(_13119_expr)))) {
		return jule::new_ref<_151290fd0_Value>();
	}
	return jule::new_struct<_151290fd0_Value>(new( std::nothrow ) _151290fd0_Value(_13119_expr,jule::Ref<_151290fd0_Data>()));
}



inline jule::Ref<_15177b070_TypeAlias> _150e75a70_build_type_alias(jule::Ref<_1506406d0_TypeAliasDecl> _14125_decl) {
	return jule::new_struct<_15177b070_TypeAlias>(new( std::nothrow ) _15177b070_TypeAlias(_14125_decl->_field_scope,_14125_decl->_field_public,_14125_decl->_field_cpp_linked,jule::Bool(),_14125_decl->_field_token,_14125_decl->_field_ident,_150e75a70_build_type(_14125_decl->_field_kind),_150e75a70_build_doc(_14125_decl->_field_doc_comments),jule::Slice<jule::Any>()));
}



inline jule::Ref<_150a13110_Field> _150e75a70_build_field(jule::Ref<_1506406d0_FieldDecl> _15320_decl) {
	return jule::new_struct<_150a13110_Field>(new( std::nothrow ) _150a13110_Field(jule::Ref<_150a13110_Struct>(),_15320_decl->_field_token,_15320_decl->_field_public,_15320_decl->_field_mutable,_15320_decl->_field_ident,_150e75a70_build_type(_15320_decl->_field_kind)));
}



inline jule::Slice<jule::Ref<_150a13110_Field>> _150e75a70_build_fields(jule::Slice<jule::Ref<_1506406d0_FieldDecl>> _16321_decls) {
	jule::Slice<jule::Ref<_150a13110_Field>> _16413_fields = jule::Slice<jule::Ref<_150a13110_Field>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_16321_decls.len())));
	{
		auto __julec_range_expr = _16321_decls;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _150e75a70_i = 0;
			jule::Ref<_1506406d0_FieldDecl> _150e75a70_decl = *__julec_range_begin;
			_iter_begin_5681109264:;
			{
				_16413_fields[static_cast<jule::Int>(_150e75a70_i)]=_150e75a70_build_field(_150e75a70_decl);
			}
			_iter_next_5681109264:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_150e75a70_i; _150e75a70_decl = *__julec_range_begin; goto _iter_begin_5681109264; }
			_iter_end_5681109264:;
		}
	}
	return _16413_fields;
}



inline jule::Ref<_150a13110_Struct> _150e75a70_build_struct(jule::Ref<_1506406d0_StructDecl> _17121_decl) {
	return jule::new_struct<_150a13110_Struct>(new( std::nothrow ) _150a13110_Struct(jule::Ref<_1510c9150_Sema>(),jule::Slice<jule::Ref<_150a13110_Struct>>(),jule::Slice<jule::Ref<_150a13110_Struct>>(),_17121_decl->_field_token,_17121_decl->_field_ident,_150e75a70_build_fields(_17121_decl->_field_fields),_1509ba170_Vector_11(),_17121_decl->_field_public,_17121_decl->_field_cpp_linked,_17121_decl->_field_directives,_150e75a70_build_doc(_17121_decl->_field_doc_comments),_17121_decl->_field_generics,jule::Slice<jule::Ref<_150f166e0_Trait>>(),jule::Slice<jule::Ref<_150a13110_StructIns>>()));
}



inline jule::Ref<_15081bcd0_Param> _150e75a70_build_param(jule::Ref<_1506406d0_ParamDecl> _18420_decl) {
	return jule::new_struct<_15081bcd0_Param>(new( std::nothrow ) _15081bcd0_Param(_18420_decl->_field_token,_18420_decl->_field_mutable,_18420_decl->_field_variadic,_18420_decl->_field_reference,_150e75a70_build_type(_18420_decl->_field_kind),_18420_decl->_field_ident));
}



inline jule::Slice<jule::Ref<_15081bcd0_Param>> _150e75a70_build_params(jule::Slice<jule::Ref<_1506406d0_ParamDecl>> _19521_decls) {
	jule::Slice<jule::Ref<_15081bcd0_Param>> _19613_params = jule::Slice<jule::Ref<_15081bcd0_Param>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_19521_decls.len())));
	{
		auto __julec_range_expr = _19521_decls;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _150e75a70_i = 0;
			jule::Ref<_1506406d0_ParamDecl> _150e75a70_decl = *__julec_range_begin;
			_iter_begin_5681127344:;
			{
				_19613_params[static_cast<jule::Int>(_150e75a70_i)]=_150e75a70_build_param(_150e75a70_decl);
			}
			_iter_next_5681127344:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_150e75a70_i; _150e75a70_decl = *__julec_range_begin; goto _iter_begin_5681127344; }
			_iter_end_5681127344:;
		}
	}
	return _19613_params;
}



inline jule::Ref<_15081bcd0_RetType> _150e75a70_build_ret_type(jule::Ref<_1506406d0_RetTypeDecl> _20323_decl) {
	if ((_20323_decl->_field_idents == nullptr) && (!(jule::real(_20323_decl->_field_kind)))) {
		return jule::new_ref<_15081bcd0_RetType>();
	}
	return jule::new_struct<_15081bcd0_RetType>(new( std::nothrow ) _15081bcd0_RetType(_150e75a70_build_type(_20323_decl->_field_kind),_20323_decl->_field_idents));
}



inline jule::Ref<_15081bcd0_Fn> _150e75a70_build_fn(jule::Ref<_1506406d0_FnDecl> _21317_decl) {
	return jule::new_struct<_15081bcd0_Fn>(new( std::nothrow ) _15081bcd0_Fn(jule::Ref<_1510c9150_Sema>(),_21317_decl->_field_token,_21317_decl->_field_global,_21317_decl->_field_unsafety,_21317_decl->_field_public,_21317_decl->_field_cpp_linked,_21317_decl->_field_statically,_21317_decl->_field_ident,_21317_decl->_field_directives,_150e75a70_build_doc(_21317_decl->_field_doc_comments),_21317_decl->_field_scope,_21317_decl->_field_generics,_150e75a70_build_ret_type(_21317_decl->_field_result),_150e75a70_build_params(_21317_decl->_field_params),jule::Ref<_150a13110_Struct>(),jule::Slice<jule::Ref<_15081bcd0_FnIns>>()));
}



inline jule::Slice<jule::Ref<_15081bcd0_Fn>> _150e75a70_build_methods(jule::Slice<jule::Ref<_1506406d0_FnDecl>> _23122_decls) {
	jule::Slice<jule::Ref<_15081bcd0_Fn>> _23213_methods = jule::Slice<jule::Ref<_15081bcd0_Fn>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_23122_decls.len())));
	{
		auto __julec_range_expr = _23122_decls;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _150e75a70_i = 0;
			jule::Ref<_1506406d0_FnDecl> _150e75a70_decl = *__julec_range_begin;
			_iter_begin_5681142640:;
			{
				_23213_methods[static_cast<jule::Int>(_150e75a70_i)]=_150e75a70_build_fn(_150e75a70_decl);
			}
			_iter_next_5681142640:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_150e75a70_i; _150e75a70_decl = *__julec_range_begin; goto _iter_begin_5681142640; }
			_iter_end_5681142640:;
		}
	}
	return _23213_methods;
}



inline jule::Ref<_150f166e0_Trait> _150e75a70_build_trait(jule::Ref<_1506406d0_TraitDecl> _23920_decl) {
	return jule::new_struct<_150f166e0_Trait>(new( std::nothrow ) _150f166e0_Trait(_23920_decl->_field_token,_23920_decl->_field_ident,_23920_decl->_field_public,_150e75a70_build_doc(_23920_decl->_field_doc_comments),_150e75a70_build_methods(_23920_decl->_field_methods),jule::Slice<jule::Ref<_150a13110_Struct>>()));
}



inline jule::Ref<_150f1c930_EnumItem> _150e75a70_build_enum_item(jule::Ref<_1506406d0_EnumItemDecl> _24924_decl) {
	return jule::new_struct<_150f1c930_EnumItem>(new( std::nothrow ) _150f1c930_EnumItem(_24924_decl->_field_token,_24924_decl->_field_ident,_150e75a70_build_expr(_24924_decl->_field_expr)));
}



inline jule::Slice<jule::Ref<_150f1c930_EnumItem>> _150e75a70_build_enum_items(jule::Slice<jule::Ref<_1506406d0_EnumItemDecl>> _25725_decls) {
	jule::Slice<jule::Ref<_150f1c930_EnumItem>> _25813_items = jule::Slice<jule::Ref<_150f1c930_EnumItem>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_25725_decls.len())));
	{
		auto __julec_range_expr = _25725_decls;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _150e75a70_i = 0;
			jule::Ref<_1506406d0_EnumItemDecl> _150e75a70_decl = *__julec_range_begin;
			_iter_begin_5681153904:;
			{
				_25813_items[static_cast<jule::Int>(_150e75a70_i)]=_150e75a70_build_enum_item(_150e75a70_decl);
			}
			_iter_next_5681153904:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_150e75a70_i; _150e75a70_decl = *__julec_range_begin; goto _iter_begin_5681153904; }
			_iter_end_5681153904:;
		}
	}
	return _25813_items;
}



inline jule::Ref<_150f1c930_Enum> _150e75a70_build_enum(jule::Ref<_1506406d0_EnumDecl> _26519_decl) {
	return jule::new_struct<_150f1c930_Enum>(new( std::nothrow ) _150f1c930_Enum(_26519_decl->_field_token,_26519_decl->_field_public,_26519_decl->_field_ident,_150e75a70_build_type(_26519_decl->_field_kind),_150e75a70_build_enum_items(_26519_decl->_field_items),_150e75a70_build_doc(_26519_decl->_field_doc_comments)));
}



inline jule::Ref<_1511317d0_Var> _150e75a70_build_var(jule::Ref<_1506406d0_VarDecl> _27618_decl) {
	return jule::new_struct<_1511317d0_Var>(new( std::nothrow ) _1511317d0_Var(jule::Ref<_150d29660_Scope>(),_27618_decl->_field_token,_27618_decl->_field_ident,_27618_decl->_field_cpp_linked,_27618_decl->_field_constant,_27618_decl->_field_mutable,_27618_decl->_field_public,jule::Bool(),_27618_decl->_field_statically,_27618_decl->_field_reference,_150e75a70_build_doc(_27618_decl->_field_doc_comments),_150e75a70_build_type(_27618_decl->_field_kind),_150e75a70_build_expr(_27618_decl->_field_expr),_150e75a70_new_reference_stack(),_27618_decl->_field_directives,jule::Slice<jule::Ref<_1511317d0_Var>>()));
}



inline jule::Ref<_150f235a0_Impl> _150e75a70_build_impl(jule::Ref<_1506406d0_Impl> _29419_decl) {
	return jule::new_struct<_150f235a0_Impl>(new( std::nothrow ) _150f235a0_Impl(_29419_decl->_field_base,_29419_decl->_field_dest,_150e75a70_build_methods(_29419_decl->_field_methods)));
}



inline jule::Ref<_150d29660_ScopeChecker> _150d29660_new_scope_checker_base(jule::Ref<_1510c9150_Sema> _3931_s,jule::Ref<_15081bcd0_FnIns> _3945_owner) {
	return jule::new_struct<_150d29660_ScopeChecker>(new( std::nothrow ) _150d29660_ScopeChecker(_3931_s,_3945_owner,jule::Ref<_150d29660_ScopeChecker>(),jule::Int(),jule::new_struct<_15128c4d0_SymbolTable>(new( std::nothrow ) _15128c4d0_SymbolTable()),jule::Ref<_150d29660_Scope>(),jule::Ref<_1506406d0_ScopeTree>(),jule::Uintptr(),jule::Uintptr(),jule::Ref<jule::Slice<jule::Ref<_150d29660_ScopeLabel>>>(),jule::Ref<jule::Slice<jule::Ref<_150d29660_ScopeGoto>>>(),jule::Int()));
}



inline jule::Ref<_150d29660_ScopeChecker> _150d29660_new_scope_checker(jule::Ref<_1510c9150_Sema> _4726_s,jule::Ref<_15081bcd0_FnIns> _4740_owner) {
	jule::Ref<_150d29660_ScopeChecker> _4813_base = _150d29660_new_scope_checker_base(_4726_s,_4740_owner);
	_4813_base->_field_labels=jule::new_ref<jule::Slice<jule::Ref<_150d29660_ScopeLabel>>>(nullptr);
	_4813_base->_field_gotos=jule::new_ref<jule::Slice<jule::Ref<_150d29660_ScopeGoto>>>(nullptr);
	return _4813_base;
}



inline jule::Ref<_150d29660_ScopeLabel> _150d29660_find_label_parent(jule::Str _5722_ident,jule::Ref<_150d29660_ScopeChecker> _5738_scope) {
	jule::Ref<_150d29660_ScopeLabel> _5813_label = _5738_scope->_method_find_label_scope(_5722_ident);
	_iter_begin_5681177104:;
	if (!((!(jule::real(_5813_label))))) { goto _iter_end_5681177104; }
	{
		if ((!(jule::real(_5738_scope->_field_parent))) || jule::real(_5738_scope->_field_owner)) {
			return jule::new_ref<_150d29660_ScopeLabel>();
		}
		_5738_scope=_5738_scope->_field_parent;
		_5813_label=_5738_scope->_method_find_label_scope(_5722_ident);
	}
	_iter_next_5681177104:;
	goto _iter_begin_5681177104;
	_iter_end_5681177104:;
	return _5813_label;
}



inline jule::Int _150d29660_count_match_type(jule::Ref<_150d29660_Match> _7121_m,jule::Ref<_15177b070_TypeKind> _7132_t) {
	jule::Int _7213_n = 0LL;
	jule::Str _739_kind = _7132_t->_method_to_str();
	_julec_label_loop:;
	{
		auto __julec_range_expr = _7121_m->_field_cases;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_150d29660_Case> _150d29660_c = *__julec_range_begin;
			_iter_begin_5681203888:;
			{
				if ((!(jule::real(_150d29660_c)))) {
					goto _iter_next_5681203888;
				}
				{
					auto __julec_range_expr = _150d29660_c->_field_exprs;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Any _150d29660_expr = *__julec_range_begin;
						_iter_begin_5681206448:;
						{
							if (_150d29660_expr == nullptr) {
								goto _iter_end_5681203888;
							}
							if (_739_kind == _150d29660_expr.operator jule::Ref<_15177b070_TypeKind>()->_method_to_str()) {
								(_7213_n)++;
							}
						}
						_iter_next_5681206448:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { _150d29660_expr = *__julec_range_begin; goto _iter_begin_5681206448; }
						_iter_end_5681206448:;
					}
				}
			}
			_iter_next_5681203888:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _150d29660_c = *__julec_range_begin; goto _iter_begin_5681203888; }
			_iter_end_5681203888:;
		}
	}
	return _7213_n;
}



inline jule::Slice<jule::Ref<_151290fd0_Data>> _150d29660_get_datas_from_tuple_data(jule::Ref<_151290fd0_Data> _9534_d) {
	if (jule::real(_9534_d->_field_kind->_method_tup())) {
		{
			auto _match_expr{ _9534_d->_field_model };
			if (!(_match_expr.type_is<jule::Ref<_150f25dd0_TupleExprModel>>())) { goto _case_end_5681224160; }
			_case_begin_5681224160:;
			{
				return _9534_d->_field_model.operator jule::Ref<_150f25dd0_TupleExprModel>()->_field_datas;
			}
			goto _match_end_5681211648;
			_case_end_5681224160:;
			_case_begin_5681212336:;
			{
				jule::Ref<_15177b070_Tuple> _10221_t = _9534_d->_field_kind->_method_tup();
				jule::Slice<jule::Ref<_151290fd0_Data>> _10321_r = jule::Slice<jule::Ref<_151290fd0_Data>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_10221_t->_field_types.len())));
				{
					auto __julec_range_expr = _10221_t->_field_types;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Int _150d29660_i = 0;
						jule::Ref<_15177b070_TypeKind> _150d29660_kind = *__julec_range_begin;
						_iter_begin_5681220304:;
						{
							_10321_r[static_cast<jule::Int>(_150d29660_i)]=jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(_150d29660_kind,jule::Ref<_15177b070_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_15199b440_Const>()));
						}
						_iter_next_5681220304:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { ++_150d29660_i; _150d29660_kind = *__julec_range_begin; goto _iter_begin_5681220304; }
						_iter_end_5681220304:;
					}
				}
				return _10321_r;
			}
			goto _match_end_5681211648;
			_case_end_5681212336:;
			_match_end_5681211648:;
		}
	} else {
		return jule::Slice<jule::Ref<_151290fd0_Data>>({_9534_d});
	}
}



inline jule::Slice<jule::Any> _150d29660_get_expr_models(jule::Any _11724_m) {
	{
		auto _match_expr{ _11724_m };
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_TupleExpr>>())) { goto _case_end_5681227952; }
		_case_begin_5681227952:;
		{
			jule::Ref<_1506406d0_TupleExpr> _12017_tup = _11724_m.operator jule::Ref<_1506406d0_TupleExpr>();
			jule::Slice<jule::Any> _12117_models = jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::Int>(static_cast<jule::I64>(_12017_tup->_field_expr.len())));
			{
				auto __julec_range_expr = _12017_tup->_field_expr;
				if (__julec_range_expr.begin() != __julec_range_expr.end()) {
					auto __julec_range_begin = __julec_range_expr.begin();
					const auto __julec_range_end = __julec_range_expr.end();
					jule::Ref<_1506406d0_Expr> _150d29660_expr = *__julec_range_begin;
					_iter_begin_5681232640:;
					{
						_12117_models=jule::append(_12117_models,jule::Slice<jule::Any>({_150d29660_expr->_field_kind}));
					}
					_iter_next_5681232640:;
					++__julec_range_begin;
					if (__julec_range_begin != __julec_range_end) { _150d29660_expr = *__julec_range_begin; goto _iter_begin_5681232640; }
					_iter_end_5681232640:;
				}
			}
			return _12117_models;
		}
		goto _match_end_5681227056;
		_case_end_5681227952:;
		_case_begin_5681224576:;
		{
			return jule::Slice<jule::Any>({_11724_m});
		}
		goto _match_end_5681227056;
		_case_end_5681224576:;
		_match_end_5681227056:;
	}
}



inline jule::Bool _150d29660_check_mut(jule::Ref<_1510c9150_Sema> _13218_s,jule::Ref<_151290fd0_Data> _13228_left,jule::Ref<_151290fd0_Data> _13245_right,_150640f50_Token _13259_error_token) {
	jule::Bool _13281_ok = jule::Bool();
	{
		if (!(((!(_13228_left->_field_mutable))))) { goto _case_end_5681238960; }
		_case_begin_5681238960:;
		{
			_13218_s->_method_push_err(_13259_error_token,jule::Str("cannot assign to immutable define", 33),jule::Slice<jule::Any>({}));
			_13281_ok = false;
			return _13281_ok;
		}
		goto _match_end_5681237360;
		_case_end_5681238960:;
		if (!(((jule::real(_13245_right) && (!(_13245_right->_field_mutable))) && _15177b070_is_mut(_13245_right->_field_kind)))) { goto _case_end_5681238480; }
		_case_begin_5681238480:;
		{
			_13218_s->_method_push_err(_13259_error_token,jule::Str("cannot assign mutable type used immutable define to mutable define", 66),jule::Slice<jule::Any>({}));
			_13281_ok = false;
			return _13281_ok;
		}
		goto _match_end_5681237360;
		_case_end_5681238480:;
		_case_begin_5681237472:;
		{
			_13281_ok = true;
			return _13281_ok;
		}
		goto _match_end_5681237360;
		_case_end_5681237472:;
		_match_end_5681237360:;
	}
}



inline jule::Bool _150d29660_check_assign(jule::Ref<_1510c9150_Sema> _14721_s,jule::Ref<_151290fd0_Data> _14735_left,jule::Ref<_151290fd0_Data> _14752_right,_150640f50_Token _14766_error_token) {
	jule::Bool _14788_ok = jule::Bool();
	jule::Ref<_15081bcd0_FnIns> _1489_f = _14735_left->_field_kind->_method_fnc();
	if ((jule::real(_1489_f) && jule::real(_1489_f->_field_decl)) && _1489_f->_field_decl->_field_global) {
		_14721_s->_method_push_err(_14766_error_token,jule::Str("type is not support assignment", 30),jule::Slice<jule::Any>({}));
		_14788_ok = false;
		return _14788_ok;
	}
	{
		if (!((_14735_left->_method_is_const()))) { goto _case_end_5681254848; }
		_case_begin_5681254848:;
		{
			_14721_s->_method_push_err(_14766_error_token,jule::Str("constants is can't assign", 25),jule::Slice<jule::Any>({}));
			_14721_s->_method_push_suggest(jule::Str("remove constant qualifer if you need to assign", 46),jule::Slice<jule::Any>({}));
			_14788_ok = false;
			return _14788_ok;
		}
		goto _match_end_5681252592;
		_case_end_5681254848:;
		if (!(((!(_14735_left->_field_lvalue))))) { goto _case_end_5681254352; }
		_case_begin_5681254352:;
		{
			_14721_s->_method_push_err(_14766_error_token,jule::Str("assignment required lvalue", 26),jule::Slice<jule::Any>({}));
			_14788_ok = false;
			return _14788_ok;
		}
		goto _match_end_5681252592;
		_case_end_5681254352:;
		if (!(((!(_150d29660_check_mut(_14721_s,_14735_left,_14752_right,_14766_error_token)))))) { goto _case_end_5681254480; }
		_case_begin_5681254480:;
		{
			_14788_ok = false;
			return _14788_ok;
		}
		goto _match_end_5681252592;
		_case_end_5681254480:;
		_case_begin_5681253344:;
		{
			_14788_ok = true;
			return _14788_ok;
		}
		goto _match_end_5681252592;
		_case_end_5681253344:;
		_match_end_5681252592:;
	}
}



inline jule::Bool _150d29660_is_valid_ast_st_for_next_st(jule::Any _17236_n) {
	{
		auto _match_expr{ _17236_n };
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_AssignSt>>())) { goto _case_end_5681264704; }
		_case_begin_5681264704:;
		{
			return (!(_17236_n.operator jule::Ref<_1506406d0_AssignSt>()->_field_declarative));
		}
		goto _match_end_5681263376;
		_case_end_5681264704:;
		if (!(_match_expr.type_is<jule::Ref<_1506406d0_FnCallExpr>>() || _match_expr.type_is<jule::Ref<_1506406d0_Expr>>())) { goto _case_end_5681264816; }
		_case_begin_5681264816:;
		{
			return true;
		}
		goto _match_end_5681263376;
		_case_end_5681264816:;
		_case_begin_5681263472:;
		{
			return false;
		}
		goto _match_end_5681263376;
		_case_end_5681263472:;
		_match_end_5681263376:;
	}
}



inline jule::Bool _150d29660_is_valid_st_for_next_st(jule::Any _18628_st) {
	{
		auto _match_expr{ _18628_st };
		if (!(_match_expr.type_is<jule::Ref<_150f25dd0_FnCallExprModel>>() || _match_expr.type_is<jule::Ref<_150d29660_Postfix>>() || _match_expr.type_is<jule::Ref<_150d29660_Assign>>() || _match_expr.type_is<jule::Ref<_150d29660_MultiAssign>>())) { goto _case_end_5681267824; }
		_case_begin_5681267824:;
		{
			return true;
		}
		goto _match_end_5681266768;
		_case_end_5681267824:;
		if (!(_match_expr.type_is<jule::Ref<_151290fd0_Data>>())) { goto _case_end_5681267936; }
		_case_begin_5681267936:;
		{
			{
				auto _match_expr{ _18628_st.operator jule::Ref<_151290fd0_Data>()->_field_model };
				if (!(_match_expr.type_is<jule::Ref<_150f25dd0_FnCallExprModel>>())) { goto _case_end_5681276784; }
				_case_begin_5681276784:;
				{
					return true;
				}
				goto _match_end_5681274464;
				_case_end_5681276784:;
				_case_begin_5681276480:;
				{
					return false;
				}
				goto _match_end_5681274464;
				_case_end_5681276480:;
				_match_end_5681274464:;
			}
		}
		goto _match_end_5681266768;
		_case_end_5681267936:;
		_case_begin_5681266928:;
		{
			return false;
		}
		goto _match_end_5681266768;
		_case_end_5681266928:;
		_match_end_5681266768:;
	}
}



inline jule::Bool _150d29660_st_is_def(jule::Any _20514_st) {
	{
		auto _match_expr{ _20514_st };
		if (!(_match_expr.type_is<jule::Ref<_1511317d0_Var>>())) { goto _case_end_5681278576; }
		_case_begin_5681278576:;
		{
			return true;
		}
		goto _match_end_5681277392;
		_case_end_5681278576:;
		_case_begin_5681278880:;
		{
			return false;
		}
		goto _match_end_5681277392;
		_case_end_5681278880:;
		_match_end_5681277392:;
	}
}



inline jule::Ref<_1511317d0_Var> _150f26340_find_var_in_package(jule::Slice<jule::Ref<_15128c4d0_SymbolTable>> _2728_files,jule::Str _2751_ident,jule::Bool _2763_cpp_linked) {
	{
		auto __julec_range_expr = _2728_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_15128c4d0_SymbolTable> _150f26340_f = *__julec_range_begin;
			_iter_begin_5681281728:;
			{
				jule::Ref<_1511317d0_Var> _2917_v = _150f26340_f->_method_find_var(_2751_ident,_2763_cpp_linked);
				if (jule::real(_2917_v)) {
					return _2917_v;
				}
			}
			_iter_next_5681281728:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _150f26340_f = *__julec_range_begin; goto _iter_begin_5681281728; }
			_iter_end_5681281728:;
		}
	}
	return jule::new_ref<_1511317d0_Var>();
}



inline jule::Ref<_15177b070_TypeAlias> _150f26340_find_type_alias_in_package(jule::Slice<jule::Ref<_15128c4d0_SymbolTable>> _3935_files,jule::Str _3958_ident,jule::Bool _3970_cpp_linked) {
	{
		auto __julec_range_expr = _3935_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_15128c4d0_SymbolTable> _150f26340_f = *__julec_range_begin;
			_iter_begin_5681288816:;
			{
				jule::Ref<_15177b070_TypeAlias> _4117_ta = _150f26340_f->_method_find_type_alias(_3958_ident,_3970_cpp_linked);
				if (jule::real(_4117_ta)) {
					return _4117_ta;
				}
			}
			_iter_next_5681288816:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _150f26340_f = *__julec_range_begin; goto _iter_begin_5681288816; }
			_iter_end_5681288816:;
		}
	}
	return jule::new_ref<_15177b070_TypeAlias>();
}



inline jule::Ref<_150a13110_Struct> _150f26340_find_struct_in_package(jule::Slice<jule::Ref<_15128c4d0_SymbolTable>> _5131_files,jule::Str _5154_ident,jule::Bool _5166_cpp_linked) {
	{
		auto __julec_range_expr = _5131_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_15128c4d0_SymbolTable> _150f26340_f = *__julec_range_begin;
			_iter_begin_5681295568:;
			{
				jule::Ref<_150a13110_Struct> _5317_s = _150f26340_f->_method_find_struct(_5154_ident,_5166_cpp_linked);
				if (jule::real(_5317_s)) {
					return _5317_s;
				}
			}
			_iter_next_5681295568:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _150f26340_f = *__julec_range_begin; goto _iter_begin_5681295568; }
			_iter_end_5681295568:;
		}
	}
	return jule::new_ref<_150a13110_Struct>();
}



inline jule::Ref<_15081bcd0_Fn> _150f26340_find_fn_in_package(jule::Slice<jule::Ref<_15128c4d0_SymbolTable>> _6327_files,jule::Str _6350_ident,jule::Bool _6362_cpp_linked) {
	{
		auto __julec_range_expr = _6327_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_15128c4d0_SymbolTable> _150f26340_file = *__julec_range_begin;
			_iter_begin_5681302320:;
			{
				jule::Ref<_15081bcd0_Fn> _6517_f = _150f26340_file->_method_find_fn(_6350_ident,_6362_cpp_linked);
				if (jule::real(_6517_f)) {
					return _6517_f;
				}
			}
			_iter_next_5681302320:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _150f26340_file = *__julec_range_begin; goto _iter_begin_5681302320; }
			_iter_end_5681302320:;
		}
	}
	return jule::new_ref<_15081bcd0_Fn>();
}



inline jule::Ref<_150f166e0_Trait> _150f26340_find_trait_in_package(jule::Slice<jule::Ref<_15128c4d0_SymbolTable>> _7530_files,jule::Str _7553_ident) {
	{
		auto __julec_range_expr = _7530_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_15128c4d0_SymbolTable> _150f26340_f = *__julec_range_begin;
			_iter_begin_5681308512:;
			{
				jule::Ref<_150f166e0_Trait> _7717_t = _150f26340_f->_method_find_trait(_7553_ident);
				if (jule::real(_7717_t)) {
					return _7717_t;
				}
			}
			_iter_next_5681308512:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _150f26340_f = *__julec_range_begin; goto _iter_begin_5681308512; }
			_iter_end_5681308512:;
		}
	}
	return jule::new_ref<_150f166e0_Trait>();
}



inline jule::Ref<_150f1c930_Enum> _150f26340_find_enum_in_package(jule::Slice<jule::Ref<_15128c4d0_SymbolTable>> _8729_files,jule::Str _8752_ident) {
	{
		auto __julec_range_expr = _8729_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_15128c4d0_SymbolTable> _150f26340_f = *__julec_range_begin;
			_iter_begin_5681312688:;
			{
				jule::Ref<_150f1c930_Enum> _8917_e = _150f26340_f->_method_find_enum(_8752_ident);
				if (jule::real(_8917_e)) {
					return _8917_e;
				}
			}
			_iter_next_5681312688:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _150f26340_f = *__julec_range_begin; goto _iter_begin_5681312688; }
			_iter_end_5681312688:;
		}
	}
	return jule::new_ref<_150f1c930_Enum>();
}



inline _157e34dc0_Log _1510c9150_compiler_err(_150640f50_Token _1617_token,jule::Bool _1631_line,jule::Str _1643_fmt,jule::Slice<jule::Any> _1656_args) {
	_157e34dc0_Log _1713_log = _157e34dc0_Log(1LLU,_1617_token._field_row,_1617_token._field_column,_1617_token._field_file->_method_path(),_157e34dc0_logf(_1643_fmt,_1656_args),jule::Str(),jule::Str());
	if (_1631_line) {
		_1713_log._field_line=_1617_token._field_file->_method_get_row(_1617_token._field_row);
	}
	return _1713_log;
}



inline jule::Bool _1510c9150_imp_is_lookupable(jule::Ref<_150f26340_ImportInfo> _3022_i,jule::Str _3038_ident) {
	if (_3022_i->_field_cpp_linked) {
		return false;
	}
	if ((!(_3022_i->_field_import_all))) {
		if (_3022_i->_field_selected.len() > 0LL) {
			return _3022_i->_method_exist_ident(_3038_ident);
		}
	}
	return _3022_i->_field_import_all;
}



inline jule::Slice<jule::Ref<_1511317d0_Var>> _1510c9150_build_ret_vars(jule::Ref<_15081bcd0_FnIns> _4323_f) {
	if (_4323_f->_field_decl->_method_is_void() || (!(jule::real(_4323_f->_field_result)))) {
		return nullptr;
	}
	jule::Slice<jule::Ref<_1511317d0_Var>> _4813_vars = nullptr;
	jule::Slice<jule::Ref<_15177b070_TypeKind>> _4913_types = _1510d19a0_get_fn_result_types(_4323_f);
	{
		auto __julec_range_expr = _4323_f->_field_decl->_field_result->_field_idents;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _1510c9150_i = 0;
			_150640f50_Token _1510c9150_ident = *__julec_range_begin;
			_iter_begin_5681338432:;
			{
				if (_150640f50_is_ignore_ident(_1510c9150_ident._field_kind)) {
					goto _iter_next_5681338432;
				}
				jule::Ref<_1511317d0_Var> _5517_v = jule::new_struct<_1511317d0_Var>(new( std::nothrow ) _1511317d0_Var(_4323_f->_field_scope,_1510c9150_ident,_1510c9150_ident._field_kind,jule::Bool(),jule::Bool(),true,jule::Bool(),true,jule::Bool(),jule::Bool(),jule::Str(),jule::new_struct<_15177b070_TypeSymbol>(new( std::nothrow ) _15177b070_TypeSymbol(jule::Ref<_1506406d0_TypeDecl>(),_4913_types[static_cast<jule::Int>(_1510c9150_i)])),jule::new_struct<_151290fd0_Value>(new( std::nothrow ) _151290fd0_Value(jule::Ref<_1506406d0_Expr>(),jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data()))),jule::Ref<_150e75a70_ReferenceStack>(),jule::Slice<jule::Ref<_1506406d0_Directive>>(),jule::Slice<jule::Ref<_1511317d0_Var>>()));
				_4813_vars=jule::append(_4813_vars,jule::Slice<jule::Ref<_1511317d0_Var>>({_5517_v}));
			}
			_iter_next_5681338432:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_1510c9150_i; _1510c9150_ident = *__julec_range_begin; goto _iter_begin_5681338432; }
			_iter_end_5681338432:;
		}
	}
	return _4813_vars;
}



inline jule::Slice<jule::Ref<_1511317d0_Var>> _1510c9150_build_param_vars(jule::Ref<_15081bcd0_FnIns> _7225_f) {
	if (_7225_f->_field_params.len() == 0LL) {
		return nullptr;
	}
	jule::Slice<jule::Ref<_1511317d0_Var>> _7713_vars = jule::Slice<jule::Ref<_1511317d0_Var>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_7225_f->_field_params.len())));
	{
		auto __julec_range_expr = _7225_f->_field_params;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _1510c9150_i = 0;
			jule::Ref<_15081bcd0_ParamIns> _1510c9150_p = *__julec_range_begin;
			_iter_begin_5681351824:;
			{
				jule::Ref<_1511317d0_Var> _7917_v = jule::new_struct<_1511317d0_Var>(new( std::nothrow ) _1511317d0_Var(_7225_f->_field_scope,_1510c9150_p->_field_decl->_field_token,_1510c9150_p->_field_decl->_field_ident,jule::Bool(),jule::Bool(),_1510c9150_p->_field_decl->_field_mutable,jule::Bool(),true,jule::Bool(),jule::Bool(),jule::Str(),jule::new_struct<_15177b070_TypeSymbol>(new( std::nothrow ) _15177b070_TypeSymbol()),jule::new_struct<_151290fd0_Value>(new( std::nothrow ) _151290fd0_Value(jule::Ref<_1506406d0_Expr>(),jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data()))),jule::Ref<_150e75a70_ReferenceStack>(),jule::Slice<jule::Ref<_1506406d0_Directive>>(),jule::Slice<jule::Ref<_1511317d0_Var>>()));
				{
					if (!((_1510c9150_p->_field_decl->_method_is_self()))) { goto _case_end_5681359360; }
					_case_begin_5681359360:;
					{
						_7917_v->_field_kind->_field_kind=jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_7225_f->_field_owner));
						_7917_v->_field_reference=true;
						if (_1510c9150_p->_field_decl->_method_is_ref()) {
							_7917_v->_field_ident=_7917_v->_field_ident.slice(1LL);
							_7917_v->_field_kind->_field_kind->_field_kind=jule::new_struct<_15177b070_Ref>(new( std::nothrow ) _15177b070_Ref(_7917_v->_field_kind->_field_kind->_method_clone()));
						}
					}
					goto _match_end_5681358336;
					_case_end_5681359360:;
					if (!((_1510c9150_p->_field_decl->_field_variadic))) { goto _case_end_5681362160; }
					_case_begin_5681362160:;
					{
						_7917_v->_field_kind->_field_kind=jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_15177b070_Slc>(new( std::nothrow ) _15177b070_Slc(_1510c9150_p->_field_kind->_method_clone()))));
					}
					goto _match_end_5681358336;
					_case_end_5681362160:;
					_case_begin_5681358576:;
					{
						_7917_v->_field_kind->_field_kind=_1510c9150_p->_field_kind->_method_clone();
					}
					goto _match_end_5681358336;
					_case_end_5681358576:;
					_match_end_5681358336:;
				}
				_7713_vars[static_cast<jule::Int>(_1510c9150_i)]=_7917_v;
			}
			_iter_next_5681351824:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_1510c9150_i; _1510c9150_p = *__julec_range_begin; goto _iter_begin_5681351824; }
			_iter_end_5681351824:;
		}
	}
	return _7713_vars;
}



inline jule::Slice<jule::Ref<_15177b070_TypeAlias>> _1510c9150_build_generic_type_aliases(jule::Ref<_15081bcd0_FnIns> _12035_f) {
	jule::I64 _12113_size = _12035_f->_field_generics.len();
	if (jule::real(_12035_f->_field_decl->_field_owner)) {
		_12113_size+=static_cast<jule::I64>(_12035_f->_field_decl->_field_owner->_field_generics.len());
	}
	if (_12113_size == 0LL) {
		return nullptr;
	}
	jule::Slice<jule::Ref<_15177b070_TypeAlias>> _13013_aliases = jule::Slice<jule::Ref<_15177b070_TypeAlias>>::alloc(static_cast<jule::Int>(_12113_size));
	{
		auto __julec_range_expr = _12035_f->_field_generics;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _1510c9150_i = 0;
			jule::Ref<_15177b070_TypeKind> _1510c9150_g = *__julec_range_begin;
			_iter_begin_5681382720:;
			{
				jule::Ref<_1506406d0_GenericDecl> _13317_decl = _12035_f->_field_decl->_field_generics[static_cast<jule::Int>(_1510c9150_i)];
				_13013_aliases[static_cast<jule::Int>(_1510c9150_i)]=jule::new_struct<_15177b070_TypeAlias>(new( std::nothrow ) _15177b070_TypeAlias(_12035_f->_field_decl->_field_scope,jule::Bool(),jule::Bool(),true,_13317_decl->_field_token,_13317_decl->_field_ident,jule::new_struct<_15177b070_TypeSymbol>(new( std::nothrow ) _15177b070_TypeSymbol(jule::Ref<_1506406d0_TypeDecl>(),_1510c9150_g)),jule::Str(),jule::Slice<jule::Any>()));
			}
			_iter_next_5681382720:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_1510c9150_i; _1510c9150_g = *__julec_range_begin; goto _iter_begin_5681382720; }
			_iter_end_5681382720:;
		}
	}
	if (jule::real(_12035_f->_field_decl->_field_owner)) {
		jule::Ref<_150a13110_StructIns> _14417_owner = _12035_f->_field_owner;
		{
			auto __julec_range_expr = _14417_owner->_field_generics;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Int _1510c9150_i = 0;
				jule::Ref<_15177b070_TypeKind> _1510c9150_g = *__julec_range_begin;
				_iter_begin_5681391120:;
				{
					jule::Ref<_1506406d0_GenericDecl> _14621_decl = _14417_owner->_field_decl->_field_generics[static_cast<jule::Int>(_1510c9150_i)];
					_13013_aliases[static_cast<jule::Int>(_12035_f->_field_generics.len() + _1510c9150_i)]=jule::new_struct<_15177b070_TypeAlias>(new( std::nothrow ) _15177b070_TypeAlias(_12035_f->_field_decl->_field_scope,jule::Bool(),jule::Bool(),true,_14621_decl->_field_token,_14621_decl->_field_ident,jule::new_struct<_15177b070_TypeSymbol>(new( std::nothrow ) _15177b070_TypeSymbol(jule::Ref<_1506406d0_TypeDecl>(),_1510c9150_g)),jule::Str(),jule::Slice<jule::Any>()));
				}
				_iter_next_5681391120:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { ++_1510c9150_i; _1510c9150_g = *__julec_range_begin; goto _iter_begin_5681391120; }
				_iter_end_5681391120:;
			}
		}
	}
	return _13013_aliases;
}



inline jule::Ref<_15128c4d0_SymbolTable> _1510c9150_find_file(jule::Slice<jule::Ref<_15128c4d0_SymbolTable>> _16018_files,jule::Ref<_1506fba60_File> _16041_handler) {
	{
		auto __julec_range_expr = _16018_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_15128c4d0_SymbolTable> _1510c9150_fl = *__julec_range_begin;
			_iter_begin_5681399152:;
			{
				if ((_1510c9150_fl->_field_file).alloc == (_16041_handler).alloc) {
					return _1510c9150_fl;
				}
			}
			_iter_next_5681399152:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1510c9150_fl = *__julec_range_begin; goto _iter_begin_5681399152; }
			_iter_end_5681399152:;
		}
	}
	return jule::new_ref<_15128c4d0_SymbolTable>();
}



inline std::tuple<jule::Bool,jule::Bool> _1510c9150_conditional_has_ret(jule::Ref<_150d29660_Conditional> _16928_c) {
	jule::Bool _16957_breaking = jule::Bool();
	jule::Bool _16947_ok = jule::Bool();
	jule::Bool _17013_breaked = false;
	{
		auto __julec_range_expr = _16928_c->_field_elifs;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_150d29660_If> _1510c9150_elif = *__julec_range_begin;
			_iter_begin_5681404720:;
			{
				if ((!(jule::real(_1510c9150_elif)))) {
					_16947_ok = false;
					_16957_breaking = false;
					return std::make_tuple(_16947_ok,_16957_breaking);
				}
				std::tie(_16947_ok,std::ignore,_16957_breaking) = _1510c9150___has_ret(_1510c9150_elif->_field_scope);
				_17013_breaked=_17013_breaked || _16957_breaking;
				if ((!(_16947_ok))) {
					_16947_ok = false;
					_16957_breaking = _17013_breaked;
					return std::make_tuple(_16947_ok,_16957_breaking);
				}
			}
			_iter_next_5681404720:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1510c9150_elif = *__julec_range_begin; goto _iter_begin_5681404720; }
			_iter_end_5681404720:;
		}
	}
	if ((!(jule::real(_16928_c->_field_default)))) {
		_16947_ok = false;
		_16957_breaking = _17013_breaked;
		return std::make_tuple(_16947_ok,_16957_breaking);
	}
	std::tie(_16947_ok,std::ignore,_16957_breaking) = _1510c9150___has_ret(_16928_c->_field_default->_field_scope);
	_17013_breaked=_17013_breaked || _16957_breaking;
	_16947_ok = _16947_ok;
	_16957_breaking = _17013_breaked;
	return std::make_tuple(_16947_ok,_16957_breaking);
}



inline jule::Bool _1510c9150_match_has_ret(jule::Ref<_150d29660_Match> _19122_m) {
	if ((!(jule::real(_19122_m->_field_default)))) {
		return false;
	}
	jule::Bool _19613_ok = true;
	jule::Bool _19713_falled = false;
	jule::Bool _19813_breaked = false;
	{
		auto __julec_range_expr = _19122_m->_field_cases;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_150d29660_Case> _1510c9150_c = *__julec_range_begin;
			_iter_begin_5681418896:;
			{
				if ((!(jule::real(_1510c9150_c)))) {
					return false;
				}
				std::tie(_19613_ok,_19713_falled,_19813_breaked) = _1510c9150___has_ret(_1510c9150_c->_field_scope);
				if (((!(_19613_ok)) && (!(_19713_falled))) || _19813_breaked) {
					return false;
				}
				{
					if (!(((!(_19613_ok))))) { goto _case_end_5681423456; }
					_case_begin_5681423456:;
					{
						if ((!(_19713_falled))) {
							return false;
						}
						goto _case_begin_5681423568;
					}
					goto _match_end_5681422880;
					_case_end_5681423456:;
					if (!((_19713_falled))) { goto _case_end_5681423568; }
					_case_begin_5681423568:;
					{
						if ((!(jule::real(_1510c9150_c->_field_next)))) {
							return false;
						}
						goto _iter_next_5681418896;
					}
					goto _match_end_5681422880;
					_case_end_5681423568:;
					_match_end_5681422880:;
				}
				_19713_falled=false;
			}
			_iter_next_5681418896:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1510c9150_c = *__julec_range_begin; goto _iter_begin_5681418896; }
			_iter_end_5681418896:;
		}
	}
	return _1510c9150_has_ret(_19122_m->_field_default->_field_scope);
}



inline std::tuple<jule::Bool,jule::Bool,jule::Bool> _1510c9150___has_ret(jule::Ref<_150d29660_Scope> _22718_s) {
	jule::Bool _22755_breaked = jule::Bool();
	jule::Bool _22741_falled = jule::Bool();
	jule::Bool _22731_ok = jule::Bool();
	if ((!(jule::real(_22718_s)))) {
		_22731_ok = false;
		_22741_falled = false;
		_22755_breaked = false;
		return std::make_tuple(_22731_ok,_22741_falled,_22755_breaked);
	}
	jule::Int _23213_i = 0LL;
	_iter_begin_5681433568:;
	if (!(_23213_i < _22718_s->_field_stmts._method_len())) { goto _iter_end_5681433568; }
	{
		jule::Any _23417_st = _22718_s->_field_stmts._method_at(_23213_i);
		{
			auto _match_expr{ _23417_st };
			if (!(_match_expr.type_is<jule::Ref<_150d29660_FallSt>>())) { goto _case_end_5681436560; }
			_case_begin_5681436560:;
			{
				_22741_falled=true;
			}
			goto _match_end_5681434816;
			_case_end_5681436560:;
			if (!(_match_expr.type_is<jule::Ref<_150d29660_BreakSt>>())) { goto _case_end_5681436672; }
			_case_begin_5681436672:;
			{
				_22731_ok = false;
				_22741_falled = false;
				_22755_breaked = true;
				return std::make_tuple(_22731_ok,_22741_falled,_22755_breaked);
			}
			goto _match_end_5681434816;
			_case_end_5681436672:;
			if (!(_match_expr.type_is<jule::Ref<_150d29660_RetSt>>())) { goto _case_end_5681436784; }
			_case_begin_5681436784:;
			{
				_22731_ok = true;
				_22741_falled = _22741_falled;
				_22755_breaked = _22755_breaked;
				return std::make_tuple(_22731_ok,_22741_falled,_22755_breaked);
			}
			goto _match_end_5681434816;
			_case_end_5681436784:;
			if (!(_match_expr.type_is<jule::Ref<_150d29660_Scope>>())) { goto _case_end_5681436896; }
			_case_begin_5681436896:;
			{
				jule::Bool _24617_ok = _1510c9150_has_ret(_23417_st.operator jule::Ref<_150d29660_Scope>());
				if (_24617_ok) {
					_22731_ok = true;
					_22741_falled = false;
					_22755_breaked = false;
					return std::make_tuple(_22731_ok,_22741_falled,_22755_breaked);
				}
			}
			goto _match_end_5681434816;
			_case_end_5681436896:;
			if (!(_match_expr.type_is<jule::Ref<_151290fd0_Data>>())) { goto _case_end_5681437008; }
			_case_begin_5681437008:;
			{
				{
					auto _match_expr{ _23417_st.operator jule::Ref<_151290fd0_Data>()->_field_model };
					if (!(_match_expr.type_is<jule::Ref<_150f25dd0_BuiltinPanicCallExprModel>>())) { goto _case_end_5681450832; }
					_case_begin_5681450832:;
					{
						_22731_ok = true;
						_22741_falled = _22741_falled;
						_22755_breaked = _22755_breaked;
						return std::make_tuple(_22731_ok,_22741_falled,_22755_breaked);
					}
					goto _match_end_5681450160;
					_case_end_5681450832:;
					_match_end_5681450160:;
				}
			}
			goto _match_end_5681434816;
			_case_end_5681437008:;
			if (!(_match_expr.type_is<jule::Ref<_150d29660_Recover>>())) { goto _case_end_5681437120; }
			_case_begin_5681437120:;
			{
				jule::Bool _25818_ok;
				jule::Bool _25822_falled;
				jule::Bool _25830_breaked;
				std::tie(_25818_ok,_25822_falled,_25830_breaked) = _1510c9150___has_ret(_23417_st.operator jule::Ref<_150d29660_Recover>()->_field_scope);
				if (_25818_ok) {
					_22731_ok = true;
					_22741_falled = _25822_falled;
					_22755_breaked = _25830_breaked;
					return std::make_tuple(_22731_ok,_22741_falled,_22755_breaked);
				}
			}
			goto _match_end_5681434816;
			_case_end_5681437120:;
			if (!(_match_expr.type_is<jule::Ref<_150d29660_Conditional>>())) { goto _case_end_5681437232; }
			_case_begin_5681437232:;
			{
				jule::Bool _26418_ok;
				jule::Bool _26422_breaking;
				std::tie(_26418_ok,_26422_breaking) = _1510c9150_conditional_has_ret(_23417_st.operator jule::Ref<_150d29660_Conditional>());
				if (_26418_ok) {
					_22731_ok = true;
					_22741_falled = false;
					_22755_breaked = false;
					return std::make_tuple(_22731_ok,_22741_falled,_22755_breaked);
				}
				if (_26422_breaking) {
					_22731_ok = false;
					_22741_falled = false;
					_22755_breaked = _22755_breaked;
					return std::make_tuple(_22731_ok,_22741_falled,_22755_breaked);
				}
			}
			goto _match_end_5681434816;
			_case_end_5681437232:;
			if (!(_match_expr.type_is<jule::Ref<_150d29660_Match>>())) { goto _case_end_5681437344; }
			_case_begin_5681437344:;
			{
				jule::Bool _27417_ok = _1510c9150_match_has_ret(_23417_st.operator jule::Ref<_150d29660_Match>());
				if (_27417_ok) {
					_22731_ok = true;
					_22741_falled = false;
					_22755_breaked = false;
					return std::make_tuple(_22731_ok,_22741_falled,_22755_breaked);
				}
			}
			goto _match_end_5681434816;
			_case_end_5681437344:;
			_match_end_5681434816:;
		}
	}
	_iter_next_5681433568:;
	(_23213_i)++;
	goto _iter_begin_5681433568;
	_iter_end_5681433568:;
	_22731_ok = false;
	_22741_falled = _22741_falled;
	_22755_breaked = _22755_breaked;
	return std::make_tuple(_22731_ok,_22741_falled,_22755_breaked);
}



inline jule::Bool _1510c9150_has_ret(jule::Ref<_150d29660_Scope> _28416_s) {
	jule::Bool _28510_ok;
	std::tie(_28510_ok,std::ignore,std::ignore) = _1510c9150___has_ret(_28416_s);
	return _28510_ok;
}



inline void _1510c9150_push_suggest(_157e34dc0_Log* _28928_log,jule::Str _28939_fmt,jule::Slice<jule::Any> _28952_args) {
	_28928_log->_field_suggest=_157e34dc0_logf(_28939_fmt,_28952_args);
}



inline jule::Slice<jule::Ref<_15177b070_TypeKind>> _1510d19a0_get_fn_result_types(jule::Ref<_15081bcd0_FnIns> _3728_f) {
	{
		if (!((_3728_f->_field_decl->_method_is_void() || (!(jule::real(_3728_f->_field_result)))))) { goto _case_end_5681478736; }
		_case_begin_5681478736:;
		{
			return nullptr;
		}
		goto _match_end_5681477168;
		_case_end_5681478736:;
		if (!(((!(jule::real(_3728_f->_field_result->_method_tup())))))) { goto _case_end_5681479792; }
		_case_begin_5681479792:;
		{
			return jule::Slice<jule::Ref<_15177b070_TypeKind>>({_3728_f->_field_result});
		}
		goto _match_end_5681477168;
		_case_end_5681479792:;
		_case_begin_5681477328:;
		{
			return _3728_f->_field_result->_method_tup()->_field_types;
		}
		goto _match_end_5681477168;
		_case_end_5681477328:;
		_match_end_5681477168:;
	}
}



inline jule::Bool _1510d19a0_trait_has_reference_receiver(jule::Ref<_150f166e0_Trait> _5033_t) {
	{
		auto __julec_range_expr = _5033_t->_field_methods;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_15081bcd0_Fn> _1510d19a0_f = *__julec_range_begin;
			_iter_begin_5681481968:;
			{
				if (_1510d19a0_f->_field_statically) {
					goto _iter_next_5681481968;
				}
				jule::Ref<_15081bcd0_Param> _5713_p = _1510d19a0_f->_field_params[0LL];
				if (_5713_p->_method_is_ref() && _5713_p->_method_is_self()) {
					return true;
				}
			}
			_iter_next_5681481968:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1510d19a0_f = *__julec_range_begin; goto _iter_begin_5681481968; }
			_iter_end_5681481968:;
		}
	}
	return false;
}



inline jule::Bool _1510d19a0_float_assignable(jule::Str _6521_kind,jule::Ref<_151290fd0_Data> _6532_d) {
	jule::Str _669_value = _147e3cfb0_fmt_float(static_cast<jule::F64>(_6532_d->_field_constant->_method_read_f64()),'e',-1LL,64LL);
	return _15199d360_check_bit_float(_669_value,static_cast<jule::Int>(_15199d360_bitsize_of(_6521_kind)));
}



inline jule::Bool _1510d19a0_sig_assignable(jule::Str _7019_kind,jule::Ref<_151290fd0_Data> _7030_d) {
	jule::F64 _719_min = _15199dfc0_min_of(_7019_kind);
	jule::F64 _729_max = _15199dfc0_max_of(_7019_kind);
	{
		if (!((_7030_d->_field_constant->_method_is_f64()))) { goto _case_end_5681497088; }
		_case_begin_5681497088:;
		{
			jule::F64 _7613_x = static_cast<jule::F64>(_7030_d->_field_constant->_method_read_f64());
			jule::F64 _7714_i;
			jule::F64 _7717_frac;
			std::tie(_7714_i,_7717_frac) = _1502e0ae0_modf(_7613_x);
			if (_7717_frac != 0LL) {
				return false;
			}
			return (_7714_i >= _719_min) && (_7714_i <= _729_max);
		}
		goto _match_end_5681496848;
		_case_end_5681497088:;
		if (!((_7030_d->_field_constant->_method_is_u64()))) { goto _case_end_5681497200; }
		_case_begin_5681497200:;
		{
			jule::F64 _8413_x = static_cast<jule::F64>(_7030_d->_field_constant->_method_read_u64());
			if (_8413_x <= _729_max) {
				return true;
			}
		}
		goto _match_end_5681496848;
		_case_end_5681497200:;
		if (!((_7030_d->_field_constant->_method_is_i64()))) { goto _case_end_5681497312; }
		_case_begin_5681497312:;
		{
			jule::F64 _9013_x = static_cast<jule::F64>(_7030_d->_field_constant->_method_read_i64());
			return (_719_min <= _9013_x) && (_9013_x <= _729_max);
		}
		goto _match_end_5681496848;
		_case_end_5681497312:;
		_match_end_5681496848:;
	}
	return false;
}



inline jule::Bool _1510d19a0_unsig_assignable(jule::Str _9721_kind,jule::Ref<_151290fd0_Data> _9732_d) {
	jule::F64 _989_max = _15199dfc0_max_of(_9721_kind);
	{
		if (!((_9732_d->_field_constant->_method_is_f64()))) { goto _case_end_5681512496; }
		_case_begin_5681512496:;
		{
			jule::F64 _10213_x = _9732_d->_field_constant->_method_read_f64();
			if (_10213_x < 0LL) {
				return false;
			}
			jule::F64 _10714_i;
			jule::F64 _10717_frac;
			std::tie(_10714_i,_10717_frac) = _1502e0ae0_modf(_10213_x);
			if (_10717_frac != 0LL) {
				return false;
			}
			return _10714_i <= _989_max;
		}
		goto _match_end_5681512240;
		_case_end_5681512496:;
		if (!((_9732_d->_field_constant->_method_is_u64()))) { goto _case_end_5681512608; }
		_case_begin_5681512608:;
		{
			jule::F64 _11413_x = static_cast<jule::F64>(_9732_d->_field_constant->_method_read_u64());
			if (_11413_x <= _989_max) {
				return true;
			}
		}
		goto _match_end_5681512240;
		_case_end_5681512608:;
		if (!((_9732_d->_field_constant->_method_is_i64()))) { goto _case_end_5681512720; }
		_case_begin_5681512720:;
		{
			jule::F64 _12013_x = static_cast<jule::F64>(_9732_d->_field_constant->_method_read_i64());
			return (0LL <= _12013_x) && (_12013_x <= _989_max);
		}
		goto _match_end_5681512240;
		_case_end_5681512720:;
		_match_end_5681512240:;
	}
	return false;
}



inline jule::Bool _1510d19a0_int_assignable(jule::Str _12719_kind,jule::Ref<_151290fd0_Data> _12730_d) {
	{
		if (!((_1519b1410_is_sig_int(_12719_kind)))) { goto _case_end_5681527152; }
		_case_begin_5681527152:;
		{
			return _1510d19a0_sig_assignable(_12719_kind,_12730_d);
		}
		goto _match_end_5681522608;
		_case_end_5681527152:;
		if (!((_1519b1410_is_unsig_int(_12719_kind)))) { goto _case_end_5681527264; }
		_case_begin_5681527264:;
		{
			return _1510d19a0_unsig_assignable(_12719_kind,_12730_d);
		}
		goto _match_end_5681522608;
		_case_end_5681527264:;
		_case_begin_5681522720:;
		{
			return false;
		}
		goto _match_end_5681522608;
		_case_end_5681522720:;
		_match_end_5681522608:;
	}
}



inline jule::Any _151290fd0_find_builtins_import(jule::Str _7825_ident,jule::Ref<_150f26340_ImportInfo> _7837_imp) {
	return _1518a9420_find_package_builtin_def(_7837_imp->_field_link_path,_7825_ident);
}



inline jule::Any _151290fd0_find_builtins_sema(jule::Str _8223_ident,jule::Ref<_1510c9150_Sema> _8239_s) {
	jule::Int _8313_i = 0LL;
	_iter_begin_5681530928:;
	if (!(_8313_i < _8239_s->_field_file->_field_imports._method_len())) { goto _iter_end_5681530928; }
	{
		jule::Ref<_150f26340_ImportInfo> _8517_imp = _8239_s->_field_file->_field_imports._method_at(_8313_i);
		if (_8517_imp->_field_import_all || _8517_imp->_method_exist_ident(_8223_ident)) {
			jule::Any _8721_def = _151290fd0_find_builtins_import(_8223_ident,_8517_imp);
			if (_8721_def != nullptr) {
				return _8721_def;
			}
		}
	}
	_iter_next_5681530928:;
	(_8313_i)++;
	goto _iter_begin_5681530928;
	_iter_end_5681530928:;
	return jule::Any(nullptr);
}



inline jule::Bool _151290fd0_is_ok_for_shifting(jule::Ref<_151290fd0_Data> _9627_d) {
	jule::Ref<_15177b070_Prim> _979_prim = _9627_d->_field_kind->_method_prim();
	if ((!(jule::real(_979_prim))) || (!(_1519b1410_is_int(_979_prim->_method_to_str())))) {
		return false;
	}
	if ((!(_9627_d->_method_is_const()))) {
		return true;
	}
	{
		if (!((_9627_d->_field_constant->_method_is_i64()))) { goto _case_end_5681547840; }
		_case_begin_5681547840:;
		{
			return _9627_d->_field_constant->_method_read_i64() >= 0LL;
		}
		goto _match_end_5681546512;
		_case_end_5681547840:;
		if (!((_9627_d->_field_constant->_method_is_u64()))) { goto _case_end_5681547952; }
		_case_begin_5681547952:;
		{
			return true;
		}
		goto _match_end_5681546512;
		_case_end_5681547952:;
		_case_begin_5681546800:;
		{
			return false;
		}
		goto _match_end_5681546512;
		_case_end_5681546800:;
		_match_end_5681546512:;
	}
}



inline jule::Bool _151290fd0_is_instanced_struct(jule::Ref<_150a13110_StructIns> _11324_s) {
	return _11324_s->_field_decl->_field_generics.len() == _11324_s->_field_generics.len();
}



inline void _151290fd0_normalize_bitsize(jule::Ref<_151290fd0_Data> _11726_d) {
	if ((!(_11726_d->_method_is_const()))) {
		return;
	}
	jule::Str _12213_kind = jule::Str("", 0);
	{
		if (!((_11726_d->_field_constant->_method_is_f64()))) { goto _case_end_5681557040; }
		_case_begin_5681557040:;
		{
			jule::F64 _12513_x = _11726_d->_field_constant->_method_read_f64();
			_12213_kind=_15199d360_float_from_bits(static_cast<jule::U64>(_15199d360_bitsize_of_float(_12513_x)));
		}
		goto _match_end_5681555840;
		_case_end_5681557040:;
		if (!((_11726_d->_field_constant->_method_is_i64()))) { goto _case_end_5681556272; }
		_case_begin_5681556272:;
		{
			jule::I64 _12913_x = _11726_d->_field_constant->_method_read_i64();
			_12213_kind=_15199d360_int_from_bits(static_cast<jule::U64>(_15199d360_bitsize_of_int(_12913_x)));
		}
		goto _match_end_5681555840;
		_case_end_5681556272:;
		if (!((_11726_d->_field_constant->_method_is_u64()))) { goto _case_end_5681556384; }
		_case_begin_5681556384:;
		{
			jule::U64 _13313_x = _11726_d->_field_constant->_method_read_u64();
			_12213_kind=_15199d360_uint_from_bits(static_cast<jule::U64>(_15199d360_bitsize_of_uint(_13313_x)));
		}
		goto _match_end_5681555840;
		_case_end_5681556384:;
		_case_begin_5681555968:;
		{
			return;
		}
		goto _match_end_5681555840;
		_case_end_5681555968:;
		_match_end_5681555840:;
	}
	if (jule::real(_11726_d->_field_kind->_method_enm())) {
		return;
	}
	_11726_d->_field_kind->_field_kind=_15177b070_build_prim_type(_12213_kind);
}



inline void _151290fd0_normalize_type(jule::Ref<_151290fd0_Data> _14823_d) {
	{
		if (!((_1510d19a0_int_assignable(jule::Str("int", 3),_14823_d)))) { goto _case_end_5681570128; }
		_case_begin_5681570128:;
		{
			_14823_d->_field_kind->_field_kind=_15177b070_build_prim_type(jule::Str("int", 3));
			_14823_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_14823_d->_field_constant->_method_as_f64()));
		}
		goto _match_end_5681569920;
		_case_end_5681570128:;
		if (!((_1510d19a0_int_assignable(jule::Str("uint", 4),_14823_d)))) { goto _case_end_5681570256; }
		_case_begin_5681570256:;
		{
			_14823_d->_field_kind->_field_kind=_15177b070_build_prim_type(jule::Str("uint", 4));
			_14823_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_14823_d->_field_constant->_method_as_f64()));
		}
		goto _match_end_5681569920;
		_case_end_5681570256:;
		_match_end_5681569920:;
	}
}



inline void _151290fd0_apply_cast_kind_model(jule::Ref<_151290fd0_Data> _16030_d) {
	_16030_d->_field_model=jule::Any(jule::new_struct<_150f25dd0_CastingExprModel>(new( std::nothrow ) _150f25dd0_CastingExprModel(_16030_d->_field_model,_16030_d->_field_cast_kind,_16030_d->_field_kind)));
}



inline void _151290fd0_apply_cast_kind(jule::Ref<_151290fd0_Data> _16824_d) {
	if ((!(jule::real(_16824_d->_field_cast_kind)))) {
		return;
	}
	_151290fd0_apply_cast_kind_model(_16824_d);
	_16824_d->_field_kind=_16824_d->_field_cast_kind;
	jule::drop(_16824_d->_field_cast_kind);
}



inline jule::Ref<_151290fd0_Data> _151290fd0_build_void_data(void) {
	return jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_15177b070_build_prim_type(jule::Str("void", 4)))),jule::Ref<_15177b070_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),false,jule::Ref<_15199b440_Const>()));
}



inline jule::Str _151290fd0_kind_by_bitsize(jule::Any _18920_expr) {
	{
		auto _match_expr{ _18920_expr };
		if (!(_match_expr.type_is<jule::F64>())) { goto _case_end_5681588352; }
		_case_begin_5681588352:;
		{
			jule::F64 _19213_x = _18920_expr.operator jule::F64();
			return _15199d360_float_from_bits(static_cast<jule::U64>(_15199d360_bitsize_of_float(_19213_x)));
		}
		goto _match_end_5681584912;
		_case_end_5681588352:;
		if (!(_match_expr.type_is<jule::I64>())) { goto _case_end_5681588464; }
		_case_begin_5681588464:;
		{
			jule::I64 _19613_x = _18920_expr.operator jule::I64();
			return _15199d360_int_from_bits(static_cast<jule::U64>(_15199d360_bitsize_of_int(_19613_x)));
		}
		goto _match_end_5681584912;
		_case_end_5681588464:;
		if (!(_match_expr.type_is<jule::U64>())) { goto _case_end_5681588576; }
		_case_begin_5681588576:;
		{
			jule::U64 _20013_x = _18920_expr.operator jule::U64();
			return _15199d360_uint_from_bits(static_cast<jule::U64>(_15199d360_bitsize_of_uint(_20013_x)));
		}
		goto _match_end_5681584912;
		_case_end_5681588576:;
		_case_begin_5681588176:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_5681584912;
		_case_end_5681588176:;
		_match_end_5681584912:;
	}
}



inline jule::Str _151290fd0_check_data_for_integer_indexing(jule::Ref<_151290fd0_Data> _20840_d) {
	jule::Str _20852_err_fmt = jule::Str("", 0);
	if ((!(jule::real(_20840_d)))) {
		_20852_err_fmt = jule::Str("", 0);
		return _20852_err_fmt;
	}
	jule::Ref<_15177b070_TypeKind> _21313_kind = _20840_d->_field_kind;
	if (jule::real(_21313_kind->_method_ref())) {
		_21313_kind=_21313_kind->_method_ref()->_field_elem;
	}
	{
		if (!(((!(jule::real(_21313_kind->_method_prim())))))) { goto _case_end_5681604368; }
		_case_begin_5681604368:;
		{
			_20852_err_fmt = jule::Str("invalid expression", 18);
			return _20852_err_fmt;
		}
		goto _match_end_5681599456;
		_case_end_5681604368:;
		if (!(((!(_1519b1410_is_int(_21313_kind->_method_prim()->_method_to_str())))))) { goto _case_end_5681604480; }
		_case_begin_5681604480:;
		{
			_20852_err_fmt = jule::Str("invalid expression", 18);
			return _20852_err_fmt;
		}
		goto _match_end_5681599456;
		_case_end_5681604480:;
		if (!((_20840_d->_method_is_const()))) { goto _case_end_5681602464; }
		_case_begin_5681602464:;
		{
			if (_20840_d->_field_constant->_method_as_f64() < 0LL) {
				_20852_err_fmt = jule::Str("overflow the limit of data-type", 31);
				return _20852_err_fmt;
			}
		}
		goto _match_end_5681599456;
		_case_end_5681602464:;
		_case_begin_5681599696:;
		{
			_20840_d->_field_cast_kind=jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_15177b070_build_prim_type(jule::Str("int", 3))));
			_151290fd0_apply_cast_kind(_20840_d);
		}
		goto _match_end_5681599456;
		_case_end_5681599696:;
		_match_end_5681599456:;
	}
	_20852_err_fmt = jule::Str("", 0);
	return _20852_err_fmt;
}



inline jule::Bool _15177b070_can_get_ptr(jule::Ref<_151290fd0_Data> _45420_d) {
	if ((!(_45420_d->_field_lvalue)) || _45420_d->_method_is_const()) {
		return false;
	}
	{
		if (!((jule::real(_45420_d->_field_kind->_method_fnc()) || jule::real(_45420_d->_field_kind->_method_enm())))) { goto _case_end_5681612176; }
		_case_begin_5681612176:;
		{
			return false;
		}
		goto _match_end_5681611040;
		_case_end_5681612176:;
		_case_begin_5681611200:;
		{
			return true;
		}
		goto _match_end_5681611040;
		_case_end_5681611200:;
		_match_end_5681611040:;
	}
}



inline jule::Bool _15177b070_is_lvalue(jule::Ref<_15177b070_TypeKind> _46818_t) {
	return ((jule::real(_46818_t->_method_ref()) || jule::real(_46818_t->_method_ptr())) || jule::real(_46818_t->_method_slc())) || jule::real(_46818_t->_method_map());
}



inline jule::Bool _15177b070_is_mut(jule::Ref<_15177b070_TypeKind> _47215_t) {
	if (jule::real(_47215_t->_method_strct())) {
		return _47215_t->_method_strct()->_field_has_mut;
	}
	if (jule::real(_47215_t->_method_prim())) {
		jule::Ref<_15177b070_Prim> _47713_p = _47215_t->_method_prim();
		return _47713_p->_method_is_any();
	}
	return (jule::real(_47215_t->_method_slc()) || jule::real(_47215_t->_method_ptr())) || jule::real(_47215_t->_method_ref());
}



inline jule::Bool _15177b070_supports_cloning(jule::Ref<_15177b070_TypeKind> _48325_k) {
	{
		if (!((jule::real(_48325_k->_method_prim())))) { goto _case_end_5681634256; }
		_case_begin_5681634256:;
		{
			return (!(_48325_k->_method_prim()->_method_is_any()));
		}
		goto _match_end_5681633488;
		_case_end_5681634256:;
		if (!((jule::real(_48325_k->_method_enm())))) { goto _case_end_5681634368; }
		_case_begin_5681634368:;
		{
			return true;
		}
		goto _match_end_5681633488;
		_case_end_5681634368:;
		if (!((jule::real(_48325_k->_method_fnc())))) { goto _case_end_5681635344; }
		_case_begin_5681635344:;
		{
			return true;
		}
		goto _match_end_5681633488;
		_case_end_5681635344:;
		if (!((jule::real(_48325_k->_method_ptr())))) { goto _case_end_5681635456; }
		_case_begin_5681635456:;
		{
			return true;
		}
		goto _match_end_5681633488;
		_case_end_5681635456:;
		if (!((jule::real(_48325_k->_method_slc())))) { goto _case_end_5681635568; }
		_case_begin_5681635568:;
		{
			return _15177b070_supports_cloning(_48325_k->_method_slc()->_field_elem);
		}
		goto _match_end_5681633488;
		_case_end_5681635568:;
		if (!((jule::real(_48325_k->_method_map())))) { goto _case_end_5681635696; }
		_case_begin_5681635696:;
		{
			return _15177b070_supports_cloning(_48325_k->_method_map()->_field_key) && _15177b070_supports_cloning(_48325_k->_method_map()->_field_val);
		}
		goto _match_end_5681633488;
		_case_end_5681635696:;
		if (!((jule::real(_48325_k->_method_arr())))) { goto _case_end_5681634704; }
		_case_begin_5681634704:;
		{
			return _15177b070_supports_cloning(_48325_k->_method_arr()->_field_elem);
		}
		goto _match_end_5681633488;
		_case_end_5681634704:;
		if (!((jule::real(_48325_k->_method_ref())))) { goto _case_end_5681634832; }
		_case_begin_5681634832:;
		{
			return _15177b070_supports_cloning(_48325_k->_method_ref()->_field_elem);
		}
		goto _match_end_5681633488;
		_case_end_5681634832:;
		if (!((jule::real(_48325_k->_method_strct())))) { goto _case_end_5681634960; }
		_case_begin_5681634960:;
		{
			jule::Ref<_150a13110_StructIns> _51017_s = _48325_k->_method_strct();
			if ((!(_51017_s->_field_has_mut))) {
				return true;
			}
			if (((!(jule::real(_51017_s->_field_decl))) || _51017_s->_field_decl->_field_cpp_linked) || (!(_51017_s->_field_decl->_method_is_derives(jule::Str("Clone", 5))))) {
				return false;
			}
			return true;
		}
		goto _match_end_5681633488;
		_case_end_5681634960:;
		_case_begin_5681629728:;
		{
			return false;
		}
		goto _match_end_5681633488;
		_case_end_5681629728:;
		_match_end_5681633488:;
	}
}



inline jule::Bool _15177b070_is_nil_compatible(jule::Ref<_15177b070_TypeKind> _52426_t) {
	jule::Ref<_15177b070_Prim> _5259_prim = _52426_t->_method_prim();
	if (jule::real(_5259_prim) && _5259_prim->_method_is_any()) {
		return true;
	}
	return ((((_52426_t->_method_is_nil() || jule::real(_52426_t->_method_fnc())) || jule::real(_52426_t->_method_ptr())) || jule::real(_52426_t->_method_trt())) || jule::real(_52426_t->_method_slc())) || jule::real(_52426_t->_method_map());
}



inline jule::Bool _15177b070_is_valid_for_ref(jule::Ref<_15177b070_TypeKind> _54025_t) {
	jule::Ref<_150a13110_StructIns> _54113_s = _54025_t->_method_strct();
	if ((jule::real(_54113_s) && jule::real(_54113_s->_field_decl)) && _54113_s->_field_decl->_field_cpp_linked) {
		return false;
	}
	return (!(((jule::real(_54025_t->_method_enm()) || jule::real(_54025_t->_method_ptr())) || jule::real(_54025_t->_method_ref())) || jule::real(_54025_t->_method_arr())));
}



inline jule::Bool _15177b070_is_variadicable(jule::Ref<_15177b070_TypeKind> _54824_tk) {
	return jule::real(_54824_tk->_method_slc());
}



inline jule::Str _15177b070_build_link_path_by_tokens(jule::Slice<_150640f50_Token> _55030_tokens) {
	jule::Str _55113_s = _55030_tokens[0LL]._field_kind;
	{
		auto __julec_range_expr = _55030_tokens.slice(1LL);
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			_150640f50_Token _15177b070_token = *__julec_range_begin;
			_iter_begin_5681671568:;
			{
				_55113_s+=jule::Str("::", 2);
				_55113_s+=_15177b070_token._field_kind;
			}
			_iter_next_5681671568:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _15177b070_token = *__julec_range_begin; goto _iter_begin_5681671568; }
			_iter_end_5681671568:;
		}
	}
	return _55113_s;
}



inline jule::Ref<_15177b070_Prim> _15177b070_build_prim_type(jule::Str _55920_kind) {
	return jule::new_struct<_15177b070_Prim>(new( std::nothrow ) _15177b070_Prim(_55920_kind));
}



inline jule::Ref<_150a13110_Struct> _15177b070_get_struct_from_kind(jule::Ref<_15177b070_TypeKind> _56529_k) {
	{
		if (!(((!(jule::real(_56529_k)))))) { goto _case_end_5681677920; }
		_case_begin_5681677920:;
		{
			return jule::new_ref<_150a13110_Struct>();
		}
		goto _match_end_5681675376;
		_case_end_5681677920:;
		if (!((jule::real(_56529_k->_method_strct())))) { goto _case_end_5681676928; }
		_case_begin_5681676928:;
		{
			return _56529_k->_method_strct()->_field_decl;
		}
		goto _match_end_5681675376;
		_case_end_5681676928:;
		if (!((jule::real(_56529_k->_method_ref())))) { goto _case_end_5681677136; }
		_case_begin_5681677136:;
		{
			return _15177b070_get_struct_from_kind(_56529_k->_method_ref()->_field_elem);
		}
		goto _match_end_5681675376;
		_case_end_5681677136:;
		if (!((jule::real(_56529_k->_method_slc())))) { goto _case_end_5681677584; }
		_case_begin_5681677584:;
		{
			return _15177b070_get_struct_from_kind(_56529_k->_method_slc()->_field_elem);
		}
		goto _match_end_5681675376;
		_case_end_5681677584:;
		if (!((jule::real(_56529_k->_method_arr())))) { goto _case_end_5681677696; }
		_case_begin_5681677696:;
		{
			return _15177b070_get_struct_from_kind(_56529_k->_method_arr()->_field_elem);
		}
		goto _match_end_5681675376;
		_case_end_5681677696:;
		if (!((jule::real(_56529_k->_method_ptr())))) { goto _case_end_5681676528; }
		_case_begin_5681676528:;
		{
			return jule::new_ref<_150a13110_Struct>();
		}
		goto _match_end_5681675376;
		_case_end_5681676528:;
		_case_begin_5681675520:;
		{
			return jule::new_ref<_150a13110_Struct>();
		}
		goto _match_end_5681675376;
		_case_end_5681675520:;
		_match_end_5681675376:;
	}
}



inline jule::Bool _15177b070_is_prim(jule::Str _59412_kind) {
	return (((((((((((((((_59412_kind == jule::Str("i8", 2)) || (_59412_kind == jule::Str("i16", 3))) || (_59412_kind == jule::Str("i32", 3))) || (_59412_kind == jule::Str("i64", 3))) || (_59412_kind == jule::Str("u8", 2))) || (_59412_kind == jule::Str("u16", 3))) || (_59412_kind == jule::Str("u32", 3))) || (_59412_kind == jule::Str("u64", 3))) || (_59412_kind == jule::Str("f32", 3))) || (_59412_kind == jule::Str("f64", 3))) || (_59412_kind == jule::Str("int", 3))) || (_59412_kind == jule::Str("uint", 4))) || (_59412_kind == jule::Str("uintptr", 7))) || (_59412_kind == jule::Str("bool", 4))) || (_59412_kind == jule::Str("str", 3))) || (_59412_kind == jule::Str("any", 3));
}



inline std::tuple<jule::Ref<_15128c4d0_SymbolTable>,jule::Slice<_157e34dc0_Log>> _1517f9a70_build_symbols(jule::Ref<_15053e120_Ast> _922_ast,jule::Trait<_150f26340_Importer> _937_importer,jule::Ref<_150e75a70_SymbolBuilder> _961_owner) {
	jule::Ref<_150e75a70_SymbolBuilder> _1013_sb = jule::new_struct<_150e75a70_SymbolBuilder>(new( std::nothrow ) _150e75a70_SymbolBuilder(_961_owner,_937_importer,jule::Slice<_157e34dc0_Log>(),_922_ast,jule::Ref<_15128c4d0_SymbolTable>()));
	_1013_sb->_method_build();
	if (_1013_sb->_field_errors.len() == 0LL) {
		return std::make_tuple(_1013_sb->_field_table,nullptr);
	}
	return std::make_tuple(jule::new_ref<_15128c4d0_SymbolTable>(),_1013_sb->_field_errors);
}



inline std::tuple<jule::Ref<_150f26340_Package>,jule::Slice<_157e34dc0_Log>> _1517f9a70___analyze_package(jule::Slice<jule::Ref<_15053e120_Ast>> _2326_files,jule::Trait<_150f26340_Importer> _2345_importer) {
	jule::Slice<jule::Ref<_15128c4d0_SymbolTable>> _2513_tables = jule::Slice<jule::Ref<_15128c4d0_SymbolTable>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_2326_files.len())));
	{
		auto __julec_range_expr = _2326_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _1517f9a70_i = 0;
			jule::Ref<_15053e120_Ast> _1517f9a70_f = *__julec_range_begin;
			_iter_begin_5681702768:;
			{
				jule::Ref<_15128c4d0_SymbolTable> _2718_table;
				jule::Slice<_157e34dc0_Log> _2729_errors;
				std::tie(_2718_table,_2729_errors) = _1517f9a70_build_symbols(_1517f9a70_f,_2345_importer,jule::new_ref<_150e75a70_SymbolBuilder>());
				if (_2729_errors.len() > 0LL) {
					return std::make_tuple(jule::new_ref<_150f26340_Package>(),_2729_errors);
				}
				_2513_tables[static_cast<jule::Int>(_1517f9a70_i)]=_2718_table;
			}
			_iter_next_5681702768:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_1517f9a70_i; _1517f9a70_f = *__julec_range_begin; goto _iter_begin_5681702768; }
			_iter_end_5681702768:;
		}
	}
	jule::Ref<_1510c9150_Sema> _3413_sema = jule::new_struct<_1510c9150_Sema>(new( std::nothrow ) _1510c9150_Sema());
	_3413_sema->_method_check(_2513_tables);
	if (_3413_sema->_field_errors.len() > 0LL) {
		return std::make_tuple(jule::new_ref<_150f26340_Package>(),_3413_sema->_field_errors);
	}
	jule::Ref<_150f26340_Package> _4013_pkg = jule::new_struct<_150f26340_Package>(new( std::nothrow ) _150f26340_Package(_3413_sema->_field_files));
	return std::make_tuple(_4013_pkg,nullptr);
}



inline std::tuple<jule::Ref<_150f26340_Package>,jule::Slice<_157e34dc0_Log>> _1517f9a70_analyze_package(jule::Slice<jule::Ref<_15053e120_Ast>> _6428_files,jule::Trait<_150f26340_Importer> _6447_importer) {
	if (_6428_files.len() == 0LL) {
		return std::make_tuple(jule::new_ref<_150f26340_Package>(),nullptr);
	}
	jule::Ref<_150f26340_Package> _6914_package;
	jule::Slice<_157e34dc0_Log> _6927_logs;
	std::tie(_6914_package,_6927_logs) = _1517f9a70___analyze_package(_6428_files,_6447_importer);
	return std::make_tuple(_6914_package,_6927_logs);
}



inline std::tuple<jule::Ref<_15128c4d0_SymbolTable>,jule::Slice<_157e34dc0_Log>> _1517f9a70_analyze_file(jule::Ref<_15053e120_Ast> _9025_f,jule::Trait<_150f26340_Importer> _9038_importer) {
	jule::Slice<jule::Ref<_15053e120_Ast>> _9113_files = jule::Slice<jule::Ref<_15053e120_Ast>>({_9025_f});
	jule::Ref<_150f26340_Package> _9214_pkg;
	jule::Slice<_157e34dc0_Log> _9223_errors;
	std::tie(_9214_pkg,_9223_errors) = _1517f9a70_analyze_package(_9113_files,_9038_importer);
	if (_9223_errors.len() > 0LL) {
		return std::make_tuple(jule::new_ref<_15128c4d0_SymbolTable>(),_9223_errors);
	}
	jule::Ref<_15128c4d0_SymbolTable> _9913_table = _9214_pkg->_field_files[0LL];
	return std::make_tuple(_9913_table,nullptr);
}



inline void _1518a9420_init(void) {
	_1518a9420_BUILTIN_FN_OUT->_field_caller=_1518a9420_builtin_caller_out;
	_1518a9420_BUILTIN_FN_OUTLN->_field_caller=_1518a9420_builtin_caller_outln;
	_1518a9420_BUILTIN_FN_NEW->_field_caller=_1518a9420_builtin_caller_new;
	_1518a9420_BUILTIN_FN_REAL->_field_caller=_1518a9420_builtin_caller_real;
	_1518a9420_BUILTIN_FN_DROP->_field_caller=_1518a9420_builtin_caller_drop;
	_1518a9420_BUILTIN_FN_PANIC->_field_caller=_1518a9420_builtin_caller_panic;
	_1518a9420_BUILTIN_FN_MAKE->_field_caller=_1518a9420_builtin_caller_make;
	_1518a9420_BUILTIN_FN_APPEND->_field_caller=_1518a9420_builtin_caller_append;
	_1518a9420_BUILTIN_FN_COPY->_field_caller=_1518a9420_builtin_caller_copy;
	_1518a9420_BUILTIN_FN_RECOVER->_field_caller=_1518a9420_builtin_caller_recover;
	_1518a9420_BUILTIN_FN_CLONE->_field_caller=_1518a9420_builtin_caller_clone;
	_1518a9420_BUILTIN_FN_STD_MEM_SIZE_OF->_field_caller=_1518a9420_builtin_caller_std_mem_size_of;
	_1518a9420_BUILTIN_FN_STD_MEM_ALIGN_OF->_field_caller=_1518a9420_builtin_caller_std_mem_align_of;
	jule::Ref<_15081bcd0_Fn> _9113_error_method = _1518a9420_BUILTIN_TRAIT_ERROR->_method_find_method(jule::Str("error", 5));
	jule::Ref<_15081bcd0_FnIns> _9213_error_method_ins = _9113_error_method->_method_instance();
	_9213_error_method_ins->_field_result=jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_15177b070_build_prim_type(jule::Str("str", 3))));
	_9213_error_method_ins->_field_caller=_1518a9420_builtin_caller_common;
	_9113_error_method->_method_append_instance(_9213_error_method_ins);
}



inline jule::Ref<_15081bcd0_FnIns> _1518a9420_find_builtin_fn(jule::Str _9820_ident) {
	{
		auto _match_expr{ _9820_ident };
		if (!((jule::Str("out", 3)) == _match_expr)) { goto _case_end_5681749776; }
		_case_begin_5681749776:;
		{
			return _1518a9420_BUILTIN_FN_OUT;
		}
		goto _match_end_5681747584;
		_case_end_5681749776:;
		if (!((jule::Str("outln", 5)) == _match_expr)) { goto _case_end_5681750352; }
		_case_begin_5681750352:;
		{
			return _1518a9420_BUILTIN_FN_OUTLN;
		}
		goto _match_end_5681747584;
		_case_end_5681750352:;
		if (!((jule::Str("new", 3)) == _match_expr)) { goto _case_end_5681749360; }
		_case_begin_5681749360:;
		{
			return _1518a9420_BUILTIN_FN_NEW;
		}
		goto _match_end_5681747584;
		_case_end_5681749360:;
		if (!((jule::Str("real", 4)) == _match_expr)) { goto _case_end_5681749568; }
		_case_begin_5681749568:;
		{
			return _1518a9420_BUILTIN_FN_REAL;
		}
		goto _match_end_5681747584;
		_case_end_5681749568:;
		if (!((jule::Str("drop", 4)) == _match_expr)) { goto _case_end_5681750016; }
		_case_begin_5681750016:;
		{
			return _1518a9420_BUILTIN_FN_DROP;
		}
		goto _match_end_5681747584;
		_case_end_5681750016:;
		if (!((jule::Str("panic", 5)) == _match_expr)) { goto _case_end_5681750128; }
		_case_begin_5681750128:;
		{
			return _1518a9420_BUILTIN_FN_PANIC;
		}
		goto _match_end_5681747584;
		_case_end_5681750128:;
		if (!((jule::Str("make", 4)) == _match_expr)) { goto _case_end_5681748960; }
		_case_begin_5681748960:;
		{
			return _1518a9420_BUILTIN_FN_MAKE;
		}
		goto _match_end_5681747584;
		_case_end_5681748960:;
		if (!((jule::Str("append", 6)) == _match_expr)) { goto _case_end_5681749072; }
		_case_begin_5681749072:;
		{
			return _1518a9420_BUILTIN_FN_APPEND;
		}
		goto _match_end_5681747584;
		_case_end_5681749072:;
		if (!((jule::Str("copy", 4)) == _match_expr)) { goto _case_end_5681749184; }
		_case_begin_5681749184:;
		{
			return _1518a9420_BUILTIN_FN_COPY;
		}
		goto _match_end_5681747584;
		_case_end_5681749184:;
		if (!((jule::Str("recover", 7)) == _match_expr)) { goto _case_end_5681748432; }
		_case_begin_5681748432:;
		{
			return _1518a9420_BUILTIN_FN_RECOVER;
		}
		goto _match_end_5681747584;
		_case_end_5681748432:;
		if (!((jule::Str("clone", 5)) == _match_expr)) { goto _case_end_5681748544; }
		_case_begin_5681748544:;
		{
			return _1518a9420_BUILTIN_FN_CLONE;
		}
		goto _match_end_5681747584;
		_case_end_5681748544:;
		_case_begin_5681748048:;
		{
			return jule::new_ref<_15081bcd0_FnIns>();
		}
		goto _match_end_5681747584;
		_case_end_5681748048:;
		_match_end_5681747584:;
	}
}



inline jule::Ref<_15177b070_TypeAlias> _1518a9420_find_builtin_type_alias(jule::Str _11528_ident) {
	{
		auto _match_expr{ _11528_ident };
		if (!((jule::Str("byte", 4)) == _match_expr)) { goto _case_end_5681758544; }
		_case_begin_5681758544:;
		{
			return _1518a9420_BUILTIN_TYPE_ALIAS_BYTE;
		}
		goto _match_end_5681756000;
		_case_end_5681758544:;
		if (!((jule::Str("rune", 4)) == _match_expr)) { goto _case_end_5681757552; }
		_case_begin_5681757552:;
		{
			return _1518a9420_BUILTIN_TYPE_ALIAS_RUNE;
		}
		goto _match_end_5681756000;
		_case_end_5681757552:;
		_case_begin_5681756352:;
		{
			return jule::new_ref<_15177b070_TypeAlias>();
		}
		goto _match_end_5681756000;
		_case_end_5681756352:;
		_match_end_5681756000:;
	}
}



inline jule::Ref<_150f166e0_Trait> _1518a9420_find_builtin_trait(jule::Str _12323_ident) {
	{
		auto _match_expr{ _12323_ident };
		if (!((jule::Str("Error", 5)) == _match_expr)) { goto _case_end_5681759616; }
		_case_begin_5681759616:;
		{
			return _1518a9420_BUILTIN_TRAIT_ERROR;
		}
		goto _match_end_5681757760;
		_case_end_5681759616:;
		_case_begin_5681759152:;
		{
			return jule::new_ref<_150f166e0_Trait>();
		}
		goto _match_end_5681757760;
		_case_end_5681759152:;
		_match_end_5681757760:;
	}
}



inline jule::Any _1518a9420_find_builtin_def(jule::Str _13021_ident) {
	jule::Ref<_15081bcd0_FnIns> _13113_f = _1518a9420_find_builtin_fn(_13021_ident);
	if (jule::real(_13113_f)) {
		return jule::Any(_13113_f);
	}
	jule::Ref<_15177b070_TypeAlias> _13613_ta = _1518a9420_find_builtin_type_alias(_13021_ident);
	if (jule::real(_13613_ta)) {
		return jule::Any(_13613_ta);
	}
	jule::Ref<_150f166e0_Trait> _14113_t = _1518a9420_find_builtin_trait(_13021_ident);
	if (jule::real(_14113_t)) {
		return jule::Any(_14113_t);
	}
	return jule::Any(nullptr);
}



inline jule::Any _1518a9420_find_builtin_def_std_mem(jule::Str _14929_ident) {
	{
		auto _match_expr{ _14929_ident };
		if (!((jule::Str("size_of", 7)) == _match_expr)) { goto _case_end_5681769264; }
		_case_begin_5681769264:;
		{
			return jule::Any(_1518a9420_BUILTIN_FN_STD_MEM_SIZE_OF);
		}
		goto _match_end_5681766128;
		_case_end_5681769264:;
		if (!((jule::Str("align_of", 8)) == _match_expr)) { goto _case_end_5681769824; }
		_case_begin_5681769824:;
		{
			return jule::Any(_1518a9420_BUILTIN_FN_STD_MEM_ALIGN_OF);
		}
		goto _match_end_5681766128;
		_case_end_5681769824:;
		_case_begin_5681767664:;
		{
			return jule::Any(nullptr);
		}
		goto _match_end_5681766128;
		_case_end_5681767664:;
		_match_end_5681766128:;
	}
}



inline jule::Any _1518a9420_find_package_builtin_def(jule::Str _15729_link_path,jule::Str _15745_ident) {
	{
		auto _match_expr{ _15729_link_path };
		if (!((jule::Str("std::mem", 8)) == _match_expr)) { goto _case_end_5681773344; }
		_case_begin_5681773344:;
		{
			return _1518a9420_find_builtin_def_std_mem(_15745_ident);
		}
		goto _match_end_5681771600;
		_case_end_5681773344:;
		_case_begin_5681772000:;
		{
			return jule::Any(nullptr);
		}
		goto _match_end_5681771600;
		_case_end_5681772000:;
		_match_end_5681771600:;
	}
}



inline jule::Ref<_151290fd0_Data> _1518a9420_builtin_caller_common_plain(jule::Ref<_151290fd0_Eval> _16436_e,jule::Ref<_1506406d0_FnCallExpr> _16450_fc,jule::Ref<_151290fd0_Data> _16471_d) {
	jule::Ref<_15081bcd0_FnIns> _16513_f = _16471_d->_field_kind->_method_fnc();
	_1510d19a0_FnCallArgChecker _16713_fcac = _1510d19a0_FnCallArgChecker(_16436_e,_16450_fc->_field_args,_16450_fc->_field_token,_16513_f,false,jule::Slice<jule::Any>());
	_16713_fcac._method_check();
	jule::Ref<_150f25dd0_FnCallExprModel> _17613_model = jule::new_struct<_150f25dd0_FnCallExprModel>(new( std::nothrow ) _150f25dd0_FnCallExprModel(_16513_f,_16450_fc->_field_concurrent,_16471_d->_field_model,_16713_fcac._field_arg_models));
	if ((!(jule::real(_16513_f->_field_result)))) {
		_16471_d=_151290fd0_build_void_data();
	} else {
		_16471_d=jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(_16513_f->_field_result,jule::Ref<_15177b070_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_15199b440_Const>()));
	}
	_16471_d->_field_model=jule::Any(_17613_model);
	return _16471_d;
}



inline jule::Ref<_151290fd0_Data> _1518a9420_builtin_caller_common(jule::Ref<_151290fd0_Eval> _19530_e,jule::Ref<_1506406d0_FnCallExpr> _19544_fc,jule::Ref<_151290fd0_Data> _19565_d) {
	if (_19544_fc->_field_generics.len() > 0LL) {
		_19530_e->_method_push_err(_19544_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	return _1518a9420_builtin_caller_common_plain(_19530_e,_19544_fc,_19565_d);
}



inline jule::Ref<_151290fd0_Data> _1518a9420_builtin_caller_common_mut(jule::Ref<_151290fd0_Eval> _20334_e,jule::Ref<_1506406d0_FnCallExpr> _20348_fc,jule::Ref<_151290fd0_Data> _20369_d) {
	if ((!(_20369_d->_field_mutable))) {
		_20334_e->_method_push_err(_20348_fc->_field_token,jule::Str("mutable operation cannot used with immutable define", 51),jule::Slice<jule::Any>({}));
	}
	return _1518a9420_builtin_caller_common(_20334_e,_20348_fc,_20369_d);
}



inline jule::Ref<_151290fd0_Data> _1518a9420_builtin_caller_out(jule::Ref<_151290fd0_Eval> _21027_e,jule::Ref<_1506406d0_FnCallExpr> _21041_fc,jule::Ref<_151290fd0_Data> ) {
	if (_21041_fc->_field_generics.len() > 0LL) {
		_21027_e->_method_push_err(_21041_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_21041_fc->_field_args.len() < 1LL) {
		_21027_e->_method_push_err(_21041_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("v", 1))}));
		return jule::new_ref<_151290fd0_Data>();
	}
	if (_21041_fc->_field_args.len() > 1LL) {
		_21027_e->_method_push_err(_21041_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_151290fd0_Data> _22213_expr = _21027_e->_method_eval_expr(_21041_fc->_field_args[0LL]);
	if ((!(jule::real(_22213_expr)))) {
		return jule::new_ref<_151290fd0_Data>();
	}
	if (_22213_expr->_method_is_void() || jule::real(_22213_expr->_field_kind->_method_fnc())) {
		_21027_e->_method_push_err(_21041_fc->_field_args[0LL]->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		return jule::new_ref<_151290fd0_Data>();
	}
	jule::Ref<_151290fd0_Data> _23213_d = _151290fd0_build_void_data();
	_23213_d->_field_model=jule::Any(jule::new_struct<_150f25dd0_BuiltinOutCallExprModel>(new( std::nothrow ) _150f25dd0_BuiltinOutCallExprModel(_22213_expr->_field_model)));
	return _23213_d;
}



inline jule::Ref<_151290fd0_Data> _1518a9420_builtin_caller_outln(jule::Ref<_151290fd0_Eval> _23729_e,jule::Ref<_1506406d0_FnCallExpr> _23743_fc,jule::Ref<_151290fd0_Data> ) {
	jule::Ref<_151290fd0_Data> _23813_d = _1518a9420_builtin_caller_out(_23729_e,_23743_fc,jule::new_ref<_151290fd0_Data>());
	if ((!(jule::real(_23813_d)))) {
		return jule::new_ref<_151290fd0_Data>();
	}
	_23813_d->_field_model=jule::Any(jule::new_struct<_150f25dd0_BuiltinOutlnCallExprModel>(new( std::nothrow ) _150f25dd0_BuiltinOutlnCallExprModel(_23813_d->_field_model.operator jule::Ref<_150f25dd0_BuiltinOutCallExprModel>()->_field_expr)));
	return _23813_d;
}



inline jule::Ref<_151290fd0_Data> _1518a9420_builtin_caller_new(jule::Ref<_151290fd0_Eval> _24927_e,jule::Ref<_1506406d0_FnCallExpr> _24941_fc,jule::Ref<_151290fd0_Data> _24962_d) {
	if (_24941_fc->_field_generics.len() > 0LL) {
		_24927_e->_method_push_err(_24941_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_24941_fc->_field_args.len() < 1LL) {
		_24927_e->_method_push_err(_24941_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type", 4))}));
		return jule::new_ref<_151290fd0_Data>();
	}
	if (_24941_fc->_field_args.len() > 2LL) {
		_24927_e->_method_push_err(_24941_fc->_field_args[2LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_151290fd0_Data> _26113_t = _24927_e->_method_eval_expr_kind(_24941_fc->_field_args[0LL]->_field_kind);
	if ((!(jule::real(_26113_t)))) {
		return jule::new_ref<_151290fd0_Data>();
	}
	if ((!(_26113_t->_field_decl))) {
		_24927_e->_method_push_err(_24941_fc->_field_args[0LL]->_field_token,jule::Str("invalid data-type", 17),jule::Slice<jule::Any>({}));
		return jule::new_ref<_151290fd0_Data>();
	}
	if ((!(_15177b070_is_valid_for_ref(_26113_t->_field_kind)))) {
		jule::Ref<_150a13110_StructIns> _27217_s = _26113_t->_field_kind->_method_strct();
		if ((jule::real(_27217_s) && jule::real(_27217_s->_field_decl)) && _27217_s->_field_decl->_field_cpp_linked) {
			_24927_e->_method_push_err(_24941_fc->_field_args[0LL]->_field_token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>({}));
		} else {
			_24927_e->_method_push_err(_24941_fc->_field_args[0LL]->_field_token,jule::Str("invalid data-type", 17),jule::Slice<jule::Any>({}));
		}
		return jule::new_ref<_151290fd0_Data>();
	}
	_24962_d->_field_kind=jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_15177b070_Ref>(new( std::nothrow ) _15177b070_Ref(_26113_t->_field_kind->_method_clone()))));
	if (_24941_fc->_field_args.len() == 2LL) {
		jule::Ref<_151290fd0_Data> _28417_init = _24927_e->_field_s->_method_evalp(_24941_fc->_field_args[1LL],_24927_e->_field_lookup,_26113_t->_field_kind);
		if (jule::real(_28417_init)) {
			_26113_t->_field_mutable=true;
			_150d29660_check_mut(_24927_e->_field_s,_26113_t,_28417_init,_24941_fc->_field_args[1LL]->_field_token);
			_24927_e->_field_s->_method_check_assign_type(_26113_t->_field_kind,_28417_init,_24941_fc->_field_args[1LL]->_field_token,false);
			if (jule::real(_28417_init->_field_kind->_method_ref())) {
				_28417_init->_field_model=jule::Any(jule::new_struct<_150f25dd0_ExplicitDerefExprModel>(new( std::nothrow ) _150f25dd0_ExplicitDerefExprModel(_28417_init->_field_model)));
			}
			_24962_d->_field_model=jule::Any(jule::new_struct<_150f25dd0_BuiltinNewCallExprModel>(new( std::nothrow ) _150f25dd0_BuiltinNewCallExprModel(_26113_t->_field_kind,_28417_init->_field_model)));
		}
	} else {
		_24962_d->_field_model=jule::Any(jule::new_struct<_150f25dd0_BuiltinNewCallExprModel>(new( std::nothrow ) _150f25dd0_BuiltinNewCallExprModel(_26113_t->_field_kind,jule::Any())));
	}
	return _24962_d;
}



inline jule::Ref<_151290fd0_Data> _1518a9420_builtin_caller_real(jule::Ref<_151290fd0_Eval> _30828_e,jule::Ref<_1506406d0_FnCallExpr> _30842_fc,jule::Ref<_151290fd0_Data> _30863_d) {
	if (_30842_fc->_field_generics.len() > 0LL) {
		_30828_e->_method_push_err(_30842_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_30842_fc->_field_args.len() < 1LL) {
		_30828_e->_method_push_err(_30842_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("ref", 3))}));
		return jule::new_ref<_151290fd0_Data>();
	}
	if (_30842_fc->_field_args.len() > 1LL) {
		_30828_e->_method_push_err(_30842_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_151290fd0_Data> _32013_ref = _30828_e->_method_eval_expr(_30842_fc->_field_args[0LL]);
	if ((!(jule::real(_32013_ref)))) {
		return jule::new_ref<_151290fd0_Data>();
	}
	if ((!(jule::real(_32013_ref->_field_kind->_method_ref())))) {
		_30828_e->_method_push_err(_30842_fc->_field_args[0LL]->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		_30828_e->_method_push_suggest(jule::Str("expression must be reference type", 33),jule::Slice<jule::Any>({}));
		return jule::new_ref<_151290fd0_Data>();
	}
	_30863_d->_field_kind=_1518a9420_BUILTIN_FN_REAL->_field_result;
	_30863_d->_field_model=jule::Any(jule::new_struct<_150f25dd0_BuiltinRealCallExprModel>(new( std::nothrow ) _150f25dd0_BuiltinRealCallExprModel(_32013_ref->_field_model)));
	return _30863_d;
}



inline jule::Ref<_151290fd0_Data> _1518a9420_builtin_caller_drop(jule::Ref<_151290fd0_Eval> _33628_e,jule::Ref<_1506406d0_FnCallExpr> _33642_fc,jule::Ref<_151290fd0_Data> ) {
	if (_33642_fc->_field_generics.len() > 0LL) {
		_33628_e->_method_push_err(_33642_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_33642_fc->_field_args.len() < 1LL) {
		_33628_e->_method_push_err(_33642_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("ref", 3))}));
		return jule::new_ref<_151290fd0_Data>();
	}
	if (_33642_fc->_field_args.len() > 1LL) {
		_33628_e->_method_push_err(_33642_fc->_field_args[2LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_151290fd0_Data> _34813_ref = _33628_e->_method_eval_expr(_33642_fc->_field_args[0LL]);
	if ((!(jule::real(_34813_ref)))) {
		return jule::new_ref<_151290fd0_Data>();
	}
	if ((!(jule::real(_34813_ref->_field_kind->_method_ref())))) {
		_33628_e->_method_push_err(_33642_fc->_field_args[0LL]->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		_33628_e->_method_push_suggest(jule::Str("expression must be reference type", 33),jule::Slice<jule::Any>({}));
		return jule::new_ref<_151290fd0_Data>();
	}
	_150d29660_check_mut(_33628_e->_field_s,_34813_ref,jule::new_ref<_151290fd0_Data>(),_33642_fc->_field_args[0LL]->_field_token);
	jule::Ref<_151290fd0_Data> _36113_d = _151290fd0_build_void_data();
	_36113_d->_field_model=jule::Any(jule::new_struct<_150f25dd0_BuiltinDropCallExprModel>(new( std::nothrow ) _150f25dd0_BuiltinDropCallExprModel(_34813_ref->_field_model)));
	return _36113_d;
}



inline jule::Ref<_151290fd0_Data> _1518a9420_builtin_caller_panic(jule::Ref<_151290fd0_Eval> _36629_e,jule::Ref<_1506406d0_FnCallExpr> _36643_fc,jule::Ref<_151290fd0_Data> ) {
	if (_36643_fc->_field_generics.len() > 0LL) {
		_36629_e->_method_push_err(_36643_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_36643_fc->_field_args.len() < 1LL) {
		_36629_e->_method_push_err(_36643_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("error", 5))}));
		return jule::new_ref<_151290fd0_Data>();
	}
	if (_36643_fc->_field_args.len() > 1LL) {
		_36629_e->_method_push_err(_36643_fc->_field_args[2LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_151290fd0_Data> _37813_expr = _36629_e->_method_eval_expr(_36643_fc->_field_args[0LL]);
	if ((!(jule::real(_37813_expr)))) {
		return jule::new_ref<_151290fd0_Data>();
	}
	if (jule::real(_37813_expr->_field_kind->_method_strct())) {
		jule::Ref<_150a13110_StructIns> _38413_s = _37813_expr->_field_kind->_method_strct();
		if (_38413_s->_field_decl->_method_is_implements(_1518a9420_BUILTIN_TRAIT_ERROR)) {
			_37813_expr->_field_cast_kind=jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_1518a9420_BUILTIN_TRAIT_ERROR));
			_151290fd0_apply_cast_kind(_37813_expr);
		}
	}
	jule::Ref<_151290fd0_Data> _39313_d = _151290fd0_build_void_data();
	_39313_d->_field_model=jule::Any(jule::new_struct<_150f25dd0_BuiltinPanicCallExprModel>(new( std::nothrow ) _150f25dd0_BuiltinPanicCallExprModel(_37813_expr->_field_model)));
	return _39313_d;
}



inline jule::Ref<_151290fd0_Data> _1518a9420_builtin_caller_make(jule::Ref<_151290fd0_Eval> _39828_e,jule::Ref<_1506406d0_FnCallExpr> _39842_fc,jule::Ref<_151290fd0_Data> _39863_d) {
	if (_39842_fc->_field_generics.len() > 0LL) {
		_39828_e->_method_push_err(_39842_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_39842_fc->_field_args.len() < 2LL) {
		if (_39842_fc->_field_args.len() == 1LL) {
			_39828_e->_method_push_err(_39842_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("size", 4))}));
			return jule::new_ref<_151290fd0_Data>();
		}
		_39828_e->_method_push_err(_39842_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type, size", 10))}));
		return jule::new_ref<_151290fd0_Data>();
	}
	if (_39842_fc->_field_args.len() > 3LL) {
		_39828_e->_method_push_err(_39842_fc->_field_args[3LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_151290fd0_Data> _41413_t = _39828_e->_method_eval_expr_kind(_39842_fc->_field_args[0LL]->_field_kind);
	if ((!(jule::real(_41413_t)))) {
		return jule::new_ref<_151290fd0_Data>();
	}
	if ((!(_41413_t->_field_decl)) || (!(jule::real(_41413_t->_field_kind->_method_slc())))) {
		_39828_e->_method_push_err(_39842_fc->_field_args[0LL]->_field_token,jule::Str("invalid data-type", 17),jule::Slice<jule::Any>({}));
		return jule::new_ref<_151290fd0_Data>();
	}
	_39863_d->_field_kind=_41413_t->_field_kind;
	jule::Ref<_151290fd0_Data> _42613_len = _39828_e->_field_s->_method_evalp(_39842_fc->_field_args[1LL],_39828_e->_field_lookup,_41413_t->_field_kind);
	if ((!(jule::real(_42613_len)))) {
		return _39863_d;
	}
	_39828_e->_method_check_integer_indexing_by_data(_42613_len,_39842_fc->_field_args[1LL]->_field_token);
	if (_39842_fc->_field_args.len() == 3LL) {
		jule::Ref<_151290fd0_Data> _43417_cap = _39828_e->_field_s->_method_evalp(_39842_fc->_field_args[2LL],_39828_e->_field_lookup,_41413_t->_field_kind);
		if ((!(jule::real(_43417_cap)))) {
			return _39863_d;
		}
		_39828_e->_method_check_integer_indexing_by_data(_43417_cap,_39842_fc->_field_args[2LL]->_field_token);
		_39863_d->_field_model=jule::Any(jule::new_struct<_150f25dd0_BuiltinMakeCallExprModel>(new( std::nothrow ) _150f25dd0_BuiltinMakeCallExprModel(_41413_t->_field_kind,_42613_len->_field_model,_43417_cap->_field_model)));
	} else {
		_39863_d->_field_model=jule::Any(jule::new_struct<_150f25dd0_BuiltinMakeCallExprModel>(new( std::nothrow ) _150f25dd0_BuiltinMakeCallExprModel(_41413_t->_field_kind,_42613_len->_field_model,jule::Any())));
	}
	return _39863_d;
}



inline jule::Ref<_151290fd0_Data> _1518a9420_builtin_caller_append(jule::Ref<_151290fd0_Eval> _45530_e,jule::Ref<_1506406d0_FnCallExpr> _45544_fc,jule::Ref<_151290fd0_Data> _45565_d) {
	if (_45544_fc->_field_generics.len() > 0LL) {
		_45530_e->_method_push_err(_45544_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_45544_fc->_field_args.len() < 2LL) {
		if (_45544_fc->_field_args.len() == 1LL) {
			_45530_e->_method_push_err(_45544_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src", 3))}));
			return jule::new_ref<_151290fd0_Data>();
		}
		_45530_e->_method_push_err(_45544_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src, values", 11))}));
		return jule::new_ref<_151290fd0_Data>();
	}
	jule::Ref<_151290fd0_Data> _46813_t = _45530_e->_method_eval_expr(_45544_fc->_field_args[0LL]);
	if ((!(jule::real(_46813_t)))) {
		return jule::new_ref<_151290fd0_Data>();
	}
	jule::Bool _47313_ref = false;
	if (jule::real(_46813_t->_field_kind->_method_ref())) {
		_46813_t->_field_kind=_46813_t->_field_kind->_method_ref()->_field_elem;
		_47313_ref=true;
	}
	if ((!(jule::real(_46813_t->_field_kind->_method_slc())))) {
		_45530_e->_method_push_err(_45544_fc->_field_args[0LL]->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		return jule::new_ref<_151290fd0_Data>();
	}
	jule::Ref<_15081bcd0_FnIns> _48413_f = jule::new_struct<_15081bcd0_FnIns>(new( std::nothrow ) _15081bcd0_FnIns(jule::Ref<_150a13110_StructIns>(),jule::Ref<_15081bcd0_Fn>(),jule::Slice<jule::Ref<_15177b070_TypeKind>>(),jule::Slice<jule::Ref<_15081bcd0_ParamIns>>({jule::new_struct<_15081bcd0_ParamIns>(new( std::nothrow ) _15081bcd0_ParamIns(jule::new_struct<_15081bcd0_Param>(new( std::nothrow ) _15081bcd0_Param(_150640f50_Token(),true,jule::Bool(),jule::Bool(),jule::Ref<_15177b070_TypeSymbol>(),jule::Str())),_46813_t->_field_kind->_method_clone())),jule::new_struct<_15081bcd0_ParamIns>(new( std::nothrow ) _15081bcd0_ParamIns(jule::new_struct<_15081bcd0_Param>(new( std::nothrow ) _15081bcd0_Param(_150640f50_Token(),true,true,jule::Bool(),jule::Ref<_15177b070_TypeSymbol>(),jule::Str())),_46813_t->_field_kind->_method_slc()->_field_elem->_method_clone()))}),_46813_t->_field_kind->_method_clone(),jule::Ref<_150d29660_Scope>(),jule::Ref<_150e75a70_ReferenceStack>(),jule::Ref<_150e75a70_ReferenceStack>(),_1518a9420_builtin_caller_common_plain,jule::Bool(),jule::Bool()));
	_45565_d->_field_kind=jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_48413_f));
	_45565_d->_field_model=jule::Any(jule::new_struct<_150f25dd0_CommonIdentExprModel>(new( std::nothrow ) _150f25dd0_CommonIdentExprModel(jule::Str("append", 6))));
	_45565_d=_1518a9420_builtin_caller_common_plain(_45530_e,_45544_fc,_45565_d);
	if (jule::real(_45565_d)) {
		jule::Ref<_150f25dd0_FnCallExprModel> _50817_model = _45565_d->_field_model.operator jule::Ref<_150f25dd0_FnCallExprModel>();
		if (_47313_ref) {
			_50817_model->_field_args[0LL]=jule::Any(jule::new_struct<_150f25dd0_ExplicitDerefExprModel>(new( std::nothrow ) _150f25dd0_ExplicitDerefExprModel(_46813_t->_field_model)));
		}
		_45565_d->_field_model=jule::Any(jule::new_struct<_150f25dd0_BuiltinAppendCallExprModel>(new( std::nothrow ) _150f25dd0_BuiltinAppendCallExprModel(_50817_model->_field_args[0LL],_50817_model->_field_args[1LL])));
	}
	return _45565_d;
}



inline jule::Ref<_151290fd0_Data> _1518a9420_builtin_caller_copy(jule::Ref<_151290fd0_Eval> _52228_e,jule::Ref<_1506406d0_FnCallExpr> _52242_fc,jule::Ref<_151290fd0_Data> _52263_d) {
	if (_52242_fc->_field_generics.len() > 0LL) {
		_52228_e->_method_push_err(_52242_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_52242_fc->_field_args.len() < 2LL) {
		if (_52242_fc->_field_args.len() == 1LL) {
			_52228_e->_method_push_err(_52242_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src", 3))}));
			return jule::new_ref<_151290fd0_Data>();
		}
		_52228_e->_method_push_err(_52242_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src, values", 11))}));
		return jule::new_ref<_151290fd0_Data>();
	}
	if (_52242_fc->_field_args.len() > 2LL) {
		_52228_e->_method_push_err(_52242_fc->_field_args[2LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_151290fd0_Data> _53813_t = _52228_e->_method_eval_expr(_52242_fc->_field_args[0LL]);
	if ((!(jule::real(_53813_t)))) {
		return jule::new_ref<_151290fd0_Data>();
	}
	jule::Bool _54313_ref = false;
	if (jule::real(_53813_t->_field_kind->_method_ref())) {
		_53813_t->_field_kind=_53813_t->_field_kind->_method_ref()->_field_elem;
		_54313_ref=false;
	}
	if ((!(jule::real(_53813_t->_field_kind->_method_slc())))) {
		_52228_e->_method_push_err(_52242_fc->_field_args[0LL]->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		return jule::new_ref<_151290fd0_Data>();
	}
	if ((!(_53813_t->_field_mutable))) {
		_52228_e->_method_push_err(_52242_fc->_field_args[0LL]->_field_token,jule::Str("mutable operation cannot used with immutable define", 51),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_15081bcd0_FnIns> _55813_f = jule::new_struct<_15081bcd0_FnIns>(new( std::nothrow ) _15081bcd0_FnIns(jule::Ref<_150a13110_StructIns>(),jule::Ref<_15081bcd0_Fn>(),jule::Slice<jule::Ref<_15177b070_TypeKind>>(),jule::Slice<jule::Ref<_15081bcd0_ParamIns>>({jule::new_struct<_15081bcd0_ParamIns>(new( std::nothrow ) _15081bcd0_ParamIns(jule::new_struct<_15081bcd0_Param>(new( std::nothrow ) _15081bcd0_Param()),_53813_t->_field_kind->_method_clone())),jule::new_struct<_15081bcd0_ParamIns>(new( std::nothrow ) _15081bcd0_ParamIns(jule::new_struct<_15081bcd0_Param>(new( std::nothrow ) _15081bcd0_Param(_150640f50_Token(),true,jule::Bool(),jule::Bool(),jule::Ref<_15177b070_TypeSymbol>(),jule::Str())),_53813_t->_field_kind->_method_clone()))}),_1518a9420_BUILTIN_FN_COPY->_field_result,jule::Ref<_150d29660_Scope>(),jule::Ref<_150e75a70_ReferenceStack>(),jule::Ref<_150e75a70_ReferenceStack>(),_1518a9420_builtin_caller_common_plain,jule::Bool(),jule::Bool()));
	_52263_d->_field_kind=jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_55813_f));
	_52263_d->_field_model=jule::Any(jule::new_struct<_150f25dd0_CommonIdentExprModel>(new( std::nothrow ) _150f25dd0_CommonIdentExprModel(jule::Str("copy", 4))));
	_52263_d=_1518a9420_builtin_caller_common_plain(_52228_e,_52242_fc,_52263_d);
	if (jule::real(_52263_d) && _54313_ref) {
		_52263_d->_field_model.operator jule::Ref<_150f25dd0_FnCallExprModel>()->_field_args[0LL]=jule::Any(jule::new_struct<_150f25dd0_ExplicitDerefExprModel>(new( std::nothrow ) _150f25dd0_ExplicitDerefExprModel(_53813_t->_field_model)));
	}
	return _52263_d;
}



inline jule::Ref<_151290fd0_Data> _1518a9420_builtin_caller_recover(jule::Ref<_151290fd0_Eval> _58731_e,jule::Ref<_1506406d0_FnCallExpr> _58745_fc,jule::Ref<_151290fd0_Data> ) {
	if (_58745_fc->_field_generics.len() > 0LL) {
		_58731_e->_method_push_err(_58745_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	
	if (_58745_fc->_field_args.len() < 1LL) {
		_58731_e->_method_push_err(_58745_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("handler", 7))}));
		return jule::new_ref<_151290fd0_Data>();
	}
	if (_58745_fc->_field_args.len() > 1LL) {
		_58731_e->_method_push_err(_58745_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_151290fd0_Data> _60113_t = _58731_e->_method_eval_expr(_58745_fc->_field_args[0LL]);
	if ((!(jule::real(_60113_t)))) {
		return jule::new_ref<_151290fd0_Data>();
	}
	if ((!(jule::real(_60113_t->_field_kind->_method_fnc())))) {
		_58731_e->_method_push_err(_58745_fc->_field_args[0LL]->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		return jule::new_ref<_151290fd0_Data>();
	}
	jule::Str _6119_tkind = _60113_t->_field_kind->_method_fnc()->_method_to_str();
	if (_6119_tkind != jule::Str("fn(Error)", 9)) {
		_58731_e->_method_push_err(_58745_fc->_field_args[0LL]->_field_token,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_6119_tkind),jule::Any(jule::Str("fn(Error)", 9))}));
	}
	jule::Ref<_151290fd0_Data> _61613_d = _151290fd0_build_void_data();
	_61613_d->_field_kind=_60113_t->_field_kind->_method_clone();
	_61613_d->_field_model=jule::Any(jule::new_struct<_150d29660_Recover>(new( std::nothrow ) _150d29660_Recover(jule::Ref<_15081bcd0_FnIns>(),_60113_t->_field_model,jule::Ref<_150d29660_Scope>(),jule::Ref<_15081bcd0_FnIns>())));
	return _61613_d;
}



inline jule::Ref<_151290fd0_Data> _1518a9420_builtin_caller_clone(jule::Ref<_151290fd0_Eval> _62429_e,jule::Ref<_1506406d0_FnCallExpr> _62443_fc,jule::Ref<_151290fd0_Data> ) {
	if (_62443_fc->_field_generics.len() > 0LL) {
		_62429_e->_method_push_err(_62443_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_62443_fc->_field_args.len() < 1LL) {
		_62429_e->_method_push_err(_62443_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("expr", 4))}));
		return jule::new_ref<_151290fd0_Data>();
	}
	if (_62443_fc->_field_args.len() > 1LL) {
		_62429_e->_method_push_err(_62443_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_151290fd0_Data> _63713_d = _62429_e->_method_eval_expr_kind(_62443_fc->_field_args[0LL]->_field_kind);
	if ((!(jule::real(_63713_d)))) {
		return jule::new_ref<_151290fd0_Data>();
	}
	jule::Fn<void(jule::Ref<_15177b070_TypeKind>)> _6429_check_kind = jule::Fn<void(jule::Ref<_15177b070_TypeKind>)>([=](jule::Ref<_15177b070_TypeKind> _64229_k) mutable -> void {
		{
			if (!((jule::real(_64229_k->_method_slc())))) { goto _case_end_5682088416; }
			_case_begin_5682088416:;
			{
				if ((!(_15177b070_supports_cloning(_64229_k->_method_slc()->_field_elem)))) {
					_62429_e->_method_push_err(_62443_fc->_field_args[0LL]->_field_token,jule::Str("internal types of \"@\" is not supports cloning", 45),jule::Slice<jule::Any>({jule::Any(_64229_k->_method_to_str())}));
				}
			}
			goto _match_end_5682087408;
			_case_end_5682088416:;
			if (!((jule::real(_64229_k->_method_map())))) { goto _case_end_5682091472; }
			_case_begin_5682091472:;
			{
				if ((!(_15177b070_supports_cloning(_64229_k->_method_map()->_field_key))) || _15177b070_supports_cloning(_64229_k->_method_map()->_field_val)) {
					_62429_e->_method_push_err(_62443_fc->_field_args[0LL]->_field_token,jule::Str("internal types of \"@\" is not supports cloning", 45),jule::Slice<jule::Any>({jule::Any(_64229_k->_method_to_str())}));
				}
			}
			goto _match_end_5682087408;
			_case_end_5682091472:;
			if (!((jule::real(_64229_k->_method_arr())))) { goto _case_end_5682087872; }
			_case_begin_5682087872:;
			{
				if ((!(_15177b070_supports_cloning(_64229_k->_method_arr()->_field_elem)))) {
					_62429_e->_method_push_err(_62443_fc->_field_args[0LL]->_field_token,jule::Str("internal types of \"@\" is not supports cloning", 45),jule::Slice<jule::Any>({jule::Any(_64229_k->_method_to_str())}));
				}
			}
			goto _match_end_5682087408;
			_case_end_5682087872:;
			if (!((jule::real(_64229_k->_method_ref())))) { goto _case_end_5682087984; }
			_case_begin_5682087984:;
			{
				if ((!(_15177b070_supports_cloning(_64229_k->_method_ref()->_field_elem)))) {
					_62429_e->_method_push_err(_62443_fc->_field_args[0LL]->_field_token,jule::Str("internal types of \"@\" is not supports cloning", 45),jule::Slice<jule::Any>({jule::Any(_64229_k->_method_to_str())}));
				}
			}
			goto _match_end_5682087408;
			_case_end_5682087984:;
			if (!((jule::real(_64229_k->_method_strct())))) { goto _case_end_5682088096; }
			_case_begin_5682088096:;
			{
				jule::Ref<_150a13110_StructIns> _66517_s = _63713_d->_field_kind->_method_strct();
				if ((!(_66517_s->_field_has_mut))) {
					_62429_e->_method_push_err(_62443_fc->_field_args[0LL]->_field_token,jule::Str("struct \"@\" is not breaks immutability, do not needs cloning", 59),jule::Slice<jule::Any>({jule::Any(_63713_d->_field_kind->_method_to_str())}));
				}
				if (((!(jule::real(_66517_s->_field_decl))) || _66517_s->_field_decl->_field_cpp_linked) || (!(_66517_s->_field_decl->_method_is_derives(jule::Str("Clone", 5))))) {
					_62429_e->_method_push_err(_62443_fc->_field_args[0LL]->_field_token,jule::Str("type \"@\" is not derives: @", 26),jule::Slice<jule::Any>({jule::Any(_63713_d->_field_kind->_method_to_str()),jule::Any(jule::Str("Clone", 5))}));
				}
			}
			goto _match_end_5682087408;
			_case_end_5682088096:;
			_case_begin_5682087568:;
			{
				_62429_e->_method_push_err(_62443_fc->_field_args[0LL]->_field_token,jule::Str("type \"@\" is not derives: @", 26),jule::Slice<jule::Any>({jule::Any(_63713_d->_field_kind->_method_to_str()),jule::Any(jule::Str("Clone", 5))}));
			}
			goto _match_end_5682087408;
			_case_end_5682087568:;
			_match_end_5682087408:;
		}
	});
	{
		if (!(((!(_63713_d->_field_lvalue))))) { goto _case_end_5682109840; }
		_case_begin_5682109840:;
		{
			_62429_e->_method_push_err(_62443_fc->_field_args[0LL]->_field_token,jule::Str("non-lvalue expressions cannot be clone", 38),jule::Slice<jule::Any>({}));
		}
		goto _match_end_5682109696;
		_case_end_5682109840:;
		if (!(((!(_15177b070_supports_cloning(_63713_d->_field_kind)))))) { goto _case_end_5682109952; }
		_case_begin_5682109952:;
		{
			_6429_check_kind(_63713_d->_field_kind);
		}
		goto _match_end_5682109696;
		_case_end_5682109952:;
		_match_end_5682109696:;
	}
	_63713_d->_field_mutable=true;
	_63713_d->_field_model=jule::Any(jule::new_struct<_150f25dd0_BuiltinCloneCallExprModel>(new( std::nothrow ) _150f25dd0_BuiltinCloneCallExprModel(_63713_d->_field_model)));
	return _63713_d;
}



inline jule::Ref<_151290fd0_Data> _1518a9420_builtin_caller_std_mem_size_of(jule::Ref<_151290fd0_Eval> _69139_e,jule::Ref<_1506406d0_FnCallExpr> _69153_fc,jule::Ref<_151290fd0_Data> ) {
	if (_69153_fc->_field_generics.len() > 0LL) {
		_69139_e->_method_push_err(_69153_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_151290fd0_Data> _69513_result = jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_15177b070_build_prim_type(jule::Str("uint", 4)))),jule::Ref<_15177b070_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_15199b440_Const>()));
	if (_69153_fc->_field_args.len() < 1LL) {
		_69139_e->_method_push_err(_69153_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type|expr", 9))}));
		return _69513_result;
	}
	if (_69153_fc->_field_args.len() > 1LL) {
		_69139_e->_method_push_err(_69153_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_151290fd0_Data> _70713_d = _69139_e->_method_eval_expr_kind(_69153_fc->_field_args[0LL]->_field_kind);
	if ((!(jule::real(_70713_d)))) {
		return _69513_result;
	}
	_69513_result->_field_model=jule::Any(jule::new_struct<_150f25dd0_SizeofExprModel>(new( std::nothrow ) _150f25dd0_SizeofExprModel(_70713_d->_field_model)));
	return _69513_result;
}



inline jule::Ref<_151290fd0_Data> _1518a9420_builtin_caller_std_mem_align_of(jule::Ref<_151290fd0_Eval> _71640_e,jule::Ref<_1506406d0_FnCallExpr> _71654_fc,jule::Ref<_151290fd0_Data> ) {
	if (_71654_fc->_field_generics.len() > 0LL) {
		_71640_e->_method_push_err(_71654_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_151290fd0_Data> _72013_result = jule::new_struct<_151290fd0_Data>(new( std::nothrow ) _151290fd0_Data(jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_15177b070_build_prim_type(jule::Str("uint", 4)))),jule::Ref<_15177b070_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_15199b440_Const>()));
	if (_71654_fc->_field_args.len() < 1LL) {
		_71640_e->_method_push_err(_71654_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type|expr", 9))}));
		return _72013_result;
	}
	if (_71654_fc->_field_args.len() > 1LL) {
		_71640_e->_method_push_err(_71654_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_151290fd0_Data> _73213_d = _71640_e->_method_eval_expr_kind(_71654_fc->_field_args[0LL]->_field_kind);
	if ((!(jule::real(_73213_d)))) {
		return _72013_result;
	}
	_72013_result->_field_model=jule::Any(jule::new_struct<_150f25dd0_AlignofExprModel>(new( std::nothrow ) _150f25dd0_AlignofExprModel(_73213_d->_field_model)));
	return _72013_result;
}



inline jule::Bool _1502a15d0_eval_directive_ident(jule::Str _625_ident) {
	if (_625_ident == jule::Str("", 0)) {
		return false;
	}
	{
		auto __julec_range_expr = _15020d0b0_FLAGS;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _1502a15d0_flag = *__julec_range_begin;
			_iter_begin_5689568880:;
			{
				if (_1502a15d0_flag == _625_ident) {
					return true;
				}
			}
			_iter_next_5689568880:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1502a15d0_flag = *__julec_range_begin; goto _iter_begin_5689568880; }
			_iter_end_5689568880:;
		}
	}
	return false;
}



inline jule::Bool _1502a15d0_eval_directive_part(jule::Str _2228_part) {
	jule::Bool _239_logical_not = _2228_part[0LL] == '!';
	if (_239_logical_not) {
		_2228_part=_2228_part.slice(1LL);
	}
	jule::Bool _2813_result = _1502a15d0_eval_directive_ident(_2228_part);
	if (_239_logical_not) {
		_2813_result=(!(_2813_result));
	}
	return _2813_result;
}



inline jule::Slice<jule::Str> _1502a15d0_split_operans(jule::Str _3718_op,jule::Str _3727_expr) {
	jule::Slice<jule::Str> _3813_parts = jule::Slice<jule::Str>::alloc(0LL,10LL);
	jule::Int _4013_range_n = 0LL;
	jule::Int _4113_i = 0LL;
	jule::Int _4213_last = 0LL;
	_iter_begin_5689593120:;
	if (!(_4113_i < (_3727_expr.len() - 1LL))) { goto _iter_end_5689593120; }
	{
		jule::U8 _4413_b = _3727_expr[static_cast<jule::Int>(_4113_i)];
		if (_4413_b == '(') {
			(_4013_range_n)++;
			goto _iter_next_5689593120;
		} else if (_4413_b == ')') {
			(_4013_range_n)--;
		}
		if (_4013_range_n > 0LL) {
			goto _iter_next_5689593120;
		}
		{
			auto _match_expr{ _3718_op };
			if (!((jule::Str("||", 2)) == _match_expr)) { goto _case_end_5689601616; }
			_case_begin_5689601616:;
			{
				if ((_4413_b == '|') && (_3727_expr[static_cast<jule::Int>(_4113_i + 1LL)] == '|')) {
					_3813_parts=jule::append(_3813_parts,jule::Slice<jule::Str>({_3727_expr.slice(static_cast<jule::Int>(_4213_last),static_cast<jule::Int>(_4113_i))}));
					_4213_last=static_cast<jule::Int>(_4113_i + 2LL);
				}
			}
			goto _match_end_5689599456;
			_case_end_5689601616:;
			if (!((jule::Str("&&", 2)) == _match_expr)) { goto _case_end_5689601728; }
			_case_begin_5689601728:;
			{
				if ((_4413_b == '&') && (_3727_expr[static_cast<jule::Int>(_4113_i + 1LL)] == '&')) {
					_3813_parts=jule::append(_3813_parts,jule::Slice<jule::Str>({_3727_expr.slice(static_cast<jule::Int>(_4213_last),static_cast<jule::Int>(_4113_i))}));
					_4213_last=static_cast<jule::Int>(_4113_i + 2LL);
				}
			}
			goto _match_end_5689599456;
			_case_end_5689601728:;
			_match_end_5689599456:;
		}
	}
	_iter_next_5689593120:;
	(_4113_i)++;
	goto _iter_begin_5689593120;
	_iter_end_5689593120:;
	if (_4213_last < _3727_expr.len()) {
		_3813_parts=jule::append(_3813_parts,jule::Slice<jule::Str>({_3727_expr.slice(static_cast<jule::Int>(_4213_last))}));
	} else {
		_3813_parts=jule::append(_3813_parts,jule::Slice<jule::Str>({jule::Str("", 0)}));
	}
	return _3813_parts;
}



inline jule::Bool _1502a15d0_eval_directive_expr(jule::Str _8724_expr) {
	if (_8724_expr == jule::Str("", 0)) {
		return false;
	}
	jule::Bool _9213_result = false;
	jule::Slice<jule::Str> _949_logical_or_parts = _1502a15d0_split_operans(jule::Str("||", 2),_8724_expr);
	{
		auto __julec_range_expr = _949_logical_or_parts;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _1502a15d0_part = *__julec_range_begin;
			_iter_begin_5689617792:;
			{
				if (_1502a15d0_part == jule::Str("", 0)) {
					return false;
				}
				jule::Bool _10017_and = true;
				jule::Slice<jule::Str> _10113_logical_and_parts = _1502a15d0_split_operans(jule::Str("&&", 2),_1502a15d0_part);
				{
					auto __julec_range_expr = _10113_logical_and_parts;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Str _1502a15d0_and_part = *__julec_range_begin;
						_iter_begin_5689622304:;
						{
							if (_1502a15d0_and_part.find(jule::Str("(", 1)) != -1LL) {
								if (_1502a15d0_and_part[static_cast<jule::Int>(_1502a15d0_and_part.len() - 1LL)] != ')') {
									return false;
								}
								jule::Str _10721_expr = _1502a15d0_and_part.slice(1LL,static_cast<jule::Int>(_1502a15d0_and_part.len() - 1LL));
								_10017_and=_10017_and && _1502a15d0_eval_directive_expr(_10721_expr);
							} else {
								_10017_and=_10017_and && _1502a15d0_eval_directive_part(_1502a15d0_and_part);
							}
						}
						_iter_next_5689622304:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { _1502a15d0_and_part = *__julec_range_begin; goto _iter_begin_5689622304; }
						_iter_end_5689622304:;
					}
				}
				_9213_result=_9213_result || _10017_and;
			}
			_iter_next_5689617792:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1502a15d0_part = *__julec_range_begin; goto _iter_begin_5689617792; }
			_iter_end_5689617792:;
		}
	}
	return _9213_result;
}



inline void _15020d0b0_set_os_flags(void) {
	{
		if (!((jule::Str("windows", 7)) == jule::Str("linux", 5))) { goto _case_end_5689628688; }
		_case_begin_5689628688:;
		{
			_15020d0b0_FLAGS=jule::append(_15020d0b0_FLAGS,jule::Slice<jule::Str>({jule::Str("windows", 7)}));
		}
		goto _match_end_5689616704;
		_case_end_5689628688:;
		if (!((jule::Str("linux", 5)) == jule::Str("linux", 5))) { goto _case_end_5689632080; }
		_case_begin_5689632080:;
		{
			_15020d0b0_FLAGS=jule::append(_15020d0b0_FLAGS,jule::Slice<jule::Str>({jule::Str("linux", 5)}));
		}
		goto _match_end_5689616704;
		_case_end_5689632080:;
		if (!((jule::Str("darwin", 6)) == jule::Str("linux", 5))) { goto _case_end_5689618560; }
		_case_begin_5689618560:;
		{
			_15020d0b0_FLAGS=jule::append(_15020d0b0_FLAGS,jule::Slice<jule::Str>({jule::Str("darwin", 6)}));
		}
		goto _match_end_5689616704;
		_case_end_5689618560:;
		_match_end_5689616704:;
	}
	if (_157eacb90_is_unix(jule::Str("linux", 5))) {
		_15020d0b0_FLAGS=jule::append(_15020d0b0_FLAGS,jule::Slice<jule::Str>({jule::Str("unix", 4)}));
	}
}



inline void _15020d0b0_set_arch_flags(void) {
	{
		if (!((jule::Str("i386", 4)) == jule::Str("amd64", 5))) { goto _case_end_5689630832; }
		_case_begin_5689630832:;
		{
			_15020d0b0_FLAGS=jule::append(_15020d0b0_FLAGS,jule::Slice<jule::Str>({jule::Str("i386", 4)}));
		}
		goto _match_end_5689634176;
		_case_end_5689630832:;
		if (!((jule::Str("amd64", 5)) == jule::Str("amd64", 5))) { goto _case_end_5689632656; }
		_case_begin_5689632656:;
		{
			_15020d0b0_FLAGS=jule::append(_15020d0b0_FLAGS,jule::Slice<jule::Str>({jule::Str("amd64", 5)}));
		}
		goto _match_end_5689634176;
		_case_end_5689632656:;
		if (!((jule::Str("arm64", 5)) == jule::Str("amd64", 5))) { goto _case_end_5689632784; }
		_case_begin_5689632784:;
		{
			_15020d0b0_FLAGS=jule::append(_15020d0b0_FLAGS,jule::Slice<jule::Str>({jule::Str("arm64", 5)}));
		}
		goto _match_end_5689634176;
		_case_end_5689632784:;
		_match_end_5689634176:;
	}
	if (_157eacb90_is_64bit(jule::Str("amd64", 5))) {
		_15020d0b0_FLAGS=jule::append(_15020d0b0_FLAGS,jule::Slice<jule::Str>({jule::Str("64bit", 5)}));
	}
	if (_157eacb90_is_32bit(jule::Str("amd64", 5))) {
		_15020d0b0_FLAGS=jule::append(_15020d0b0_FLAGS,jule::Slice<jule::Str>({jule::Str("32bit", 5)}));
	}
}



inline void _15020d0b0_init(void) {
	_15020d0b0_set_os_flags();
	_15020d0b0_set_arch_flags();
}



inline void _1503de590_exit_err(jule::Str _2313_msg) {
	
	jule::outln(_2313_msg);
	_147ecb750_exit(1LL);
}



inline jule::Slice<jule::U8> _1503de590_read_buff(jule::Str _3114_path) {
	jule::Slice<jule::U8> _3214_buffer;
	jule::Int _3222_err;
	std::tie(_3214_buffer,_3222_err) = _150562500_read_file(_3114_path);
	if (_3222_err != 0LLU) {
		_1503de590_exit_err(jule::Str("error: file cannot read", 23));
	}
	return _3214_buffer;
}



inline _157e34dc0_Log _1503de590_flat_compiler_err(jule::Str _4122_text) {
	return _157e34dc0_Log(1LLU,jule::Int(),jule::Int(),jule::Str(),_4122_text,jule::Str(),jule::Str());
}



inline std::tuple<jule::Slice<jule::Ref<_15053ceb0_DirEntry>>,jule::Str> _1503de590_read_package_dirents(jule::Str _4925_path) {
	jule::Str _4951_err_msg = jule::Str();
	jule::Slice<jule::Ref<_15053ceb0_DirEntry>> _5014_dirents;
	jule::Int _5023_err;
	std::tie(_5014_dirents,_5023_err) = _150643f90_read_dir(_4925_path);
	if (_5023_err != 0LLU) {
		_4951_err_msg = jule::Str("connot read package directory: ", 31) + _4925_path;
		return std::make_tuple(nullptr,_4951_err_msg);
	}
	jule::Slice<jule::Ref<_15053ceb0_DirEntry>> _5513_passed_dirents = nullptr;
	{
		auto __julec_range_expr = _5014_dirents;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_15053ceb0_DirEntry> _1503de590_dirent = *__julec_range_begin;
			_iter_begin_5689657408:;
			{
				jule::Str _5713_name = _1503de590_dirent->_field_name;
				if (_1503de590_dirent->_field_stat->_method_is_dir() || (!(_5713_name.has_suffix(jule::Str(".jule", 5))))) {
					goto _iter_next_5689657408;
				}
				_5513_passed_dirents=jule::append(_5513_passed_dirents,jule::Slice<jule::Ref<_15053ceb0_DirEntry>>({_1503de590_dirent}));
			}
			_iter_next_5689657408:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1503de590_dirent = *__julec_range_begin; goto _iter_begin_5689657408; }
			_iter_end_5689657408:;
		}
	}
	_4951_err_msg = jule::Str("", 0);
	return std::make_tuple(_5513_passed_dirents,_4951_err_msg);
}



inline jule::Str _1503de590_concat_all_parts(jule::Slice<jule::Str> _7121_parts) {
	jule::Str _7213_s = jule::Str("", 0);
	{
		auto __julec_range_expr = _7121_parts;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _1503de590_part = *__julec_range_begin;
			_iter_begin_5689667584:;
			{
				_7213_s+=_1503de590_part;
			}
			_iter_next_5689667584:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1503de590_part = *__julec_range_begin; goto _iter_begin_5689667584; }
			_iter_end_5689667584:;
		}
	}
	return _7213_s;
}



inline jule::Bool _1503de590_is_pass_build_directives(jule::Ref<_15053e120_Ast>& _8034_file) {
	jule::Int _8113_i = 0LL;
	_iter_begin_5689670048:;
	if (!(_8113_i < _8034_file->_field_top_directives._method_len())) { goto _iter_end_5689670048; }
	{
		jule::Ref<_1506406d0_Directive> _8317_td = _8034_file->_field_top_directives._method_at(_8113_i);
		if (_8317_td->_field_tag != jule::Str("build", 5)) {
			goto _iter_next_5689670048;
		}
		jule::Str _8813_expr = _1503de590_concat_all_parts(_8317_td->_field_args);
		jule::Bool _8913_result = _1502a15d0_eval_directive_expr(_8813_expr);
		if ((!(_8913_result))) {
			return false;
		}
	}
	_iter_next_5689670048:;
	(_8113_i)++;
	goto _iter_begin_5689670048;
	_iter_end_5689670048:;
	return true;
}



inline void _1501d9900_push_passes(jule::Ref<_150f26340_Package> _11420_p,jule::Slice<jule::Str>& _11438_passes) {
	{
		auto __julec_range_expr = _11420_p->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_15128c4d0_SymbolTable> _1501d9900_f = *__julec_range_begin;
			_iter_begin_5689726560:;
			{
				jule::Int _11617_i = 0LL;
				_julec_label_push:;
				_iter_begin_5689729200:;
				if (!(_11617_i < _1501d9900_f->_field_passes._method_len())) { goto _iter_end_5689729200; }
				{
					_150e75a70_Pass _11921_pass = _1501d9900_f->_field_passes._method_at(_11617_i);
					if (_11921_pass._field_text == jule::Str("", 0)) {
						goto _iter_next_5689729200;
					}
					{
						auto __julec_range_expr = _11438_passes;
						if (__julec_range_expr.begin() != __julec_range_expr.end()) {
							auto __julec_range_begin = __julec_range_expr.begin();
							const auto __julec_range_end = __julec_range_expr.end();
							jule::Str _1501d9900_cpass = *__julec_range_begin;
							_iter_begin_5689732928:;
							{
								if (_1501d9900_cpass == _11921_pass._field_text) {
									goto _iter_next_5689729200;
								}
							}
							_iter_next_5689732928:;
							++__julec_range_begin;
							if (__julec_range_begin != __julec_range_end) { _1501d9900_cpass = *__julec_range_begin; goto _iter_begin_5689732928; }
							_iter_end_5689732928:;
						}
					}
					_11438_passes=jule::append(_11438_passes,jule::Slice<jule::Str>({_11921_pass._field_text}));
				}
				_iter_next_5689729200:;
				(_11617_i)++;
				goto _iter_begin_5689729200;
				_iter_end_5689729200:;
			}
			_iter_next_5689726560:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1501d9900_f = *__julec_range_begin; goto _iter_begin_5689726560; }
			_iter_end_5689726560:;
		}
	}
}



inline jule::Slice<jule::Str> _1501d9900_get_all_unique_passes(jule::Ref<_150f26340_Package> _13330_pkg,jule::Slice<jule::Ref<_150f26340_ImportInfo>> _13349_uses) {
	jule::Slice<jule::Str> _13413_passes = nullptr;
	_1501d9900_push_passes(_13330_pkg,_13413_passes);
	{
		auto __julec_range_expr = _13349_uses;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_150f26340_ImportInfo> _1501d9900_u = *__julec_range_begin;
			_iter_begin_5689740864:;
			{
				if ((!(_1501d9900_u->_field_cpp_linked))) {
					_1501d9900_push_passes(_1501d9900_u->_field_package,_13413_passes);
				}
			}
			_iter_next_5689740864:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1501d9900_u = *__julec_range_begin; goto _iter_begin_5689740864; }
			_iter_end_5689740864:;
		}
	}
	return _13413_passes;
}



inline jule::Bool _157ee5140_is_exist_0(jule::Slice<jule::Any> _3116_arr,jule::Ref<_15081bcd0_FnIns> _3128_t) {
	{
		auto __julec_range_expr = _3116_arr;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Any _157ee5140_ref = *__julec_range_begin;
			_iter_begin_5689841152:;
			{
				{
					auto _match_expr{ _157ee5140_ref };
					if (!(_match_expr.type_is<jule::Ref<_15081bcd0_FnIns>>())) { goto _case_end_5689842864; }
					_case_begin_5689842864:;
					{
						if ((_157ee5140_ref.operator jule::Ref<_15081bcd0_FnIns>()).alloc == (_3128_t).alloc) {
							return true;
						}
					}
					goto _match_end_5689842544;
					_case_end_5689842864:;
					_match_end_5689842544:;
				}
			}
			_iter_next_5689841152:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _157ee5140_ref = *__julec_range_begin; goto _iter_begin_5689841152; }
			_iter_end_5689841152:;
		}
	}
	return false;
}

inline jule::Bool _157ee5140_is_exist_1(jule::Slice<jule::Any> _3116_arr,jule::Ref<_1511317d0_Var> _3128_t) {
	{
		auto __julec_range_expr = _3116_arr;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Any _157ee5140_ref = *__julec_range_begin;
			_iter_begin_5689849152:;
			{
				{
					auto _match_expr{ _157ee5140_ref };
					if (!(_match_expr.type_is<jule::Ref<_1511317d0_Var>>())) { goto _case_end_5689850864; }
					_case_begin_5689850864:;
					{
						if ((_157ee5140_ref.operator jule::Ref<_1511317d0_Var>()).alloc == (_3128_t).alloc) {
							return true;
						}
					}
					goto _match_end_5689850544;
					_case_end_5689850864:;
					_match_end_5689850544:;
				}
			}
			_iter_next_5689849152:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _157ee5140_ref = *__julec_range_begin; goto _iter_begin_5689849152; }
			_iter_end_5689849152:;
		}
	}
	return false;
}

inline jule::Bool _157ee5140_is_exist_2(jule::Slice<jule::Any> _3116_arr,jule::Ref<_150a13110_StructIns> _3128_t) {
	{
		auto __julec_range_expr = _3116_arr;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Any _157ee5140_ref = *__julec_range_begin;
			_iter_begin_5689857216:;
			{
				{
					auto _match_expr{ _157ee5140_ref };
					if (!(_match_expr.type_is<jule::Ref<_150a13110_StructIns>>())) { goto _case_end_5689858928; }
					_case_begin_5689858928:;
					{
						if ((_157ee5140_ref.operator jule::Ref<_150a13110_StructIns>()).alloc == (_3128_t).alloc) {
							return true;
						}
					}
					goto _match_end_5689858608;
					_case_end_5689858928:;
					_match_end_5689858608:;
				}
			}
			_iter_next_5689857216:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _157ee5140_ref = *__julec_range_begin; goto _iter_begin_5689857216; }
			_iter_end_5689857216:;
		}
	}
	return false;
}

inline jule::Bool _157ee5140_is_exist_3(jule::Slice<jule::Any> _3116_arr,jule::Ref<_150f166e0_Trait> _3128_t) {
	{
		auto __julec_range_expr = _3116_arr;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Any _157ee5140_ref = *__julec_range_begin;
			_iter_begin_5689865216:;
			{
				{
					auto _match_expr{ _157ee5140_ref };
					if (!(_match_expr.type_is<jule::Ref<_150f166e0_Trait>>())) { goto _case_end_5689866928; }
					_case_begin_5689866928:;
					{
						if ((_157ee5140_ref.operator jule::Ref<_150f166e0_Trait>()).alloc == (_3128_t).alloc) {
							return true;
						}
					}
					goto _match_end_5689866608;
					_case_end_5689866928:;
					_match_end_5689866608:;
				}
			}
			_iter_next_5689865216:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _157ee5140_ref = *__julec_range_begin; goto _iter_begin_5689865216; }
			_iter_end_5689865216:;
		}
	}
	return false;
}



inline jule::Bool _157ee5140_is_exist_ref(jule::Slice<jule::Any> _4421_refs,jule::Any _4434_ref) {
	{
		auto _match_expr{ _4434_ref };
		if (!(_match_expr.type_is<jule::Ref<_15081bcd0_FnIns>>())) { goto _case_end_5689833216; }
		_case_begin_5689833216:;
		{
			return _157ee5140_is_exist_0(_4421_refs,_4434_ref.operator jule::Ref<_15081bcd0_FnIns>());
		}
		goto _match_end_5689832448;
		_case_end_5689833216:;
		if (!(_match_expr.type_is<jule::Ref<_1511317d0_Var>>())) { goto _case_end_5689833328; }
		_case_begin_5689833328:;
		{
			return _157ee5140_is_exist_1(_4421_refs,_4434_ref.operator jule::Ref<_1511317d0_Var>());
		}
		goto _match_end_5689832448;
		_case_end_5689833328:;
		if (!(_match_expr.type_is<jule::Ref<_150a13110_StructIns>>())) { goto _case_end_5689834432; }
		_case_begin_5689834432:;
		{
			return _157ee5140_is_exist_2(_4421_refs,_4434_ref.operator jule::Ref<_150a13110_StructIns>());
		}
		goto _match_end_5689832448;
		_case_end_5689834432:;
		if (!(_match_expr.type_is<jule::Ref<_150f166e0_Trait>>())) { goto _case_end_5689834544; }
		_case_begin_5689834544:;
		{
			return _157ee5140_is_exist_3(_4421_refs,_4434_ref.operator jule::Ref<_150f166e0_Trait>());
		}
		goto _match_end_5689832448;
		_case_end_5689834544:;
		_case_begin_5689832672:;
		{
			return false;
		}
		goto _match_end_5689832448;
		_case_end_5689832672:;
		_match_end_5689832448:;
	}
}



inline jule::Bool _157ee5140_is_dead(jule::Any _5516_ref) {
	jule::Bool _5528_dead = jule::Bool();
	if (_157ee5140_is_exist_ref(_157ee5140_deads,_5516_ref)) {
		_5528_dead = true;
		return _5528_dead;
	}
	{
		auto _match_expr{ _5516_ref };
		if (!(_match_expr.type_is<jule::Ref<_15081bcd0_FnIns>>())) { goto _case_end_5689872176; }
		_case_begin_5689872176:;
		{
			if (_5516_ref.operator jule::Ref<_15081bcd0_FnIns>()->_field_decl->_method_is_init()) {
				goto _match_end_5689833888;
			}
			goto _case_begin_5689845568;
		}
		goto _match_end_5689833888;
		_case_end_5689872176:;
		_case_begin_5689845568:;
		{
			if (_157ee5140_is_exist_ref(jule::Slice<jule::Any>({_157ee5140_current,_157ee5140_main_current}),_5516_ref)) {
				_5528_dead = true;
				return _5528_dead;
			}
			if (_157ee5140_is_exist_ref(_157ee5140_checking,_5516_ref)) {
				_5528_dead = true;
				return _5528_dead;
			}
		}
		goto _match_end_5689833888;
		_case_end_5689845568:;
		_match_end_5689833888:;
	}
	jule::Any _7613_old = _157ee5140_current;
	_157ee5140_current=_5516_ref;
	jule::I64 _789_len = _157ee5140_checking.len();
	_157ee5140_checking=jule::append(_157ee5140_checking,jule::Slice<jule::Any>({_5516_ref}));
	__JULE_DEFER({
		_157ee5140_current=_7613_old;
		_157ee5140_drop_ref(_157ee5140_checking,_789_len);
	});
	{
		auto _match_expr{ _5516_ref };
		if (!(_match_expr.type_is<jule::Ref<_15081bcd0_FnIns>>())) { goto _case_end_5689876208; }
		_case_begin_5689876208:;
		{
			_5528_dead = _157ee5140_is_fn_dead(_5516_ref.operator jule::Ref<_15081bcd0_FnIns>());
			return _5528_dead;
		}
		goto _match_end_5689874560;
		_case_end_5689876208:;
		if (!(_match_expr.type_is<jule::Ref<_1511317d0_Var>>())) { goto _case_end_5689876320; }
		_case_begin_5689876320:;
		{
			_5528_dead = _157ee5140_is_var_dead(_5516_ref.operator jule::Ref<_1511317d0_Var>());
			return _5528_dead;
		}
		goto _match_end_5689874560;
		_case_end_5689876320:;
		if (!(_match_expr.type_is<jule::Ref<_150a13110_StructIns>>())) { goto _case_end_5689878336; }
		_case_begin_5689878336:;
		{
			_5528_dead = _157ee5140_is_struct_dead(_5516_ref.operator jule::Ref<_150a13110_StructIns>());
			return _5528_dead;
		}
		goto _match_end_5689874560;
		_case_end_5689878336:;
		if (!(_match_expr.type_is<jule::Ref<_150f166e0_Trait>>())) { goto _case_end_5689878448; }
		_case_begin_5689878448:;
		{
			_5528_dead = _157ee5140_is_trait_dead(_5516_ref.operator jule::Ref<_150f166e0_Trait>());
			return _5528_dead;
		}
		goto _match_end_5689874560;
		_case_end_5689878448:;
		_case_begin_5689878000:;
		{
			_5528_dead = false;
			return _5528_dead;
		}
		goto _match_end_5689874560;
		_case_end_5689878000:;
		_match_end_5689874560:;
	}
}



inline void _157ee5140_remove_from_slice_0(jule::Slice<jule::Ref<_15081bcd0_FnIns>>& _10630_s,jule::Int _10639_pos) {
	if (_10639_pos == _10630_s.len()) {
		return;
	}
	_10630_s=jule::append(_10630_s.slice(0LL,static_cast<jule::Int>(_10639_pos)),_10630_s.slice(static_cast<jule::Int>(_10639_pos + 1LL)));
}

inline void _157ee5140_remove_from_slice_1(jule::Slice<jule::Ref<_150a13110_StructIns>>& _10630_s,jule::Int _10639_pos) {
	if (_10639_pos == _10630_s.len()) {
		return;
	}
	_10630_s=jule::append(_10630_s.slice(0LL,static_cast<jule::Int>(_10639_pos)),_10630_s.slice(static_cast<jule::Int>(_10639_pos + 1LL)));
}



inline void _157ee5140_drop_ref(jule::Slice<jule::Any>& _11418_refs,jule::Int _11431_pos) {
	_11418_refs=_11418_refs.slice(0LL,static_cast<jule::Int>(_11431_pos));
}



inline jule::Bool _157ee5140_is_all_references_are_dead_0(jule::Ref<_150e75a70_ReferenceStack> _12438_references) {
	jule::Int _12513_i = 0LL;
	_iter_begin_5689898448:;
	if (!(_12513_i < _12438_references->_method_len())) { goto _iter_end_5689898448; }
	{
		jule::Any _12717_ref = _12438_references->_method_at(_12513_i);
		{
			auto _match_expr{ _157ee5140_current };
			if (!(_match_expr.type_is<jule::Ref<_15081bcd0_FnIns>>())) { goto _case_end_5689901248; }
			_case_begin_5689901248:;
			{
				{
					auto _match_expr{ _12717_ref };
					if (!(_match_expr.type_is<jule::Ref<_15081bcd0_FnIns>>())) { goto _case_end_5689903136; }
					_case_begin_5689903136:;
					{
						if ((_157ee5140_current.operator jule::Ref<_15081bcd0_FnIns>()).alloc == (_12717_ref.operator jule::Ref<_15081bcd0_FnIns>()).alloc) {
							goto _iter_next_5689898448;
						}
					}
					goto _match_end_5689901776;
					_case_end_5689903136:;
					_match_end_5689901776:;
				}
			}
			goto _match_end_5689900240;
			_case_end_5689901248:;
			_match_end_5689900240:;
		}
		{
			auto _match_expr{ _157ee5140_main_current };
			if (!(_match_expr.type_is<jule::Ref<_15081bcd0_FnIns>>())) { goto _case_end_5689903808; }
			_case_begin_5689903808:;
			{
				{
					auto _match_expr{ _12717_ref };
					if (!(_match_expr.type_is<jule::Ref<_15081bcd0_FnIns>>())) { goto _case_end_5689904256; }
					_case_begin_5689904256:;
					{
						if ((_157ee5140_main_current.operator jule::Ref<_15081bcd0_FnIns>()).alloc == (_12717_ref.operator jule::Ref<_15081bcd0_FnIns>()).alloc) {
							goto _iter_next_5689898448;
						}
					}
					goto _match_end_5689902192;
					_case_end_5689904256:;
					_match_end_5689902192:;
				}
			}
			goto _match_end_5689904928;
			_case_end_5689903808:;
			_match_end_5689904928:;
		}
		if ((!(_157ee5140_is_dead(_12717_ref)))) {
			return false;
		}
	}
	_iter_next_5689898448:;
	(_12513_i)++;
	goto _iter_begin_5689898448;
	_iter_end_5689898448:;
	return true;
}

inline jule::Bool _157ee5140_is_all_references_are_dead_1(jule::Ref<_150e75a70_ReferenceStack> _12438_references) {
	jule::Int _12513_i = 0LL;
	_iter_begin_5689917216:;
	if (!(_12513_i < _12438_references->_method_len())) { goto _iter_end_5689917216; }
	{
		jule::Any _12717_ref = _12438_references->_method_at(_12513_i);
		{
			auto _match_expr{ _157ee5140_current };
			if (!(_match_expr.type_is<jule::Ref<_1511317d0_Var>>())) { goto _case_end_5689920336; }
			_case_begin_5689920336:;
			{
				{
					auto _match_expr{ _12717_ref };
					if (!(_match_expr.type_is<jule::Ref<_1511317d0_Var>>())) { goto _case_end_5689921840; }
					_case_begin_5689921840:;
					{
						if ((_157ee5140_current.operator jule::Ref<_1511317d0_Var>()).alloc == (_12717_ref.operator jule::Ref<_1511317d0_Var>()).alloc) {
							goto _iter_next_5689917216;
						}
					}
					goto _match_end_5689920448;
					_case_end_5689921840:;
					_match_end_5689920448:;
				}
			}
			goto _match_end_5689919040;
			_case_end_5689920336:;
			_match_end_5689919040:;
		}
		{
			auto _match_expr{ _157ee5140_main_current };
			if (!(_match_expr.type_is<jule::Ref<_1511317d0_Var>>())) { goto _case_end_5689920800; }
			_case_begin_5689920800:;
			{
				{
					auto _match_expr{ _12717_ref };
					if (!(_match_expr.type_is<jule::Ref<_1511317d0_Var>>())) { goto _case_end_5689922928; }
					_case_begin_5689922928:;
					{
						if ((_157ee5140_main_current.operator jule::Ref<_1511317d0_Var>()).alloc == (_12717_ref.operator jule::Ref<_1511317d0_Var>()).alloc) {
							goto _iter_next_5689917216;
						}
					}
					goto _match_end_5689922512;
					_case_end_5689922928:;
					_match_end_5689922512:;
				}
			}
			goto _match_end_5689923632;
			_case_end_5689920800:;
			_match_end_5689923632:;
		}
		if ((!(_157ee5140_is_dead(_12717_ref)))) {
			return false;
		}
	}
	_iter_next_5689917216:;
	(_12513_i)++;
	goto _iter_begin_5689917216;
	_iter_end_5689917216:;
	return true;
}

inline jule::Bool _157ee5140_is_all_references_are_dead_2(jule::Ref<_150e75a70_ReferenceStack> _12438_references) {
	jule::Int _12513_i = 0LL;
	_iter_begin_5689951760:;
	if (!(_12513_i < _12438_references->_method_len())) { goto _iter_end_5689951760; }
	{
		jule::Any _12717_ref = _12438_references->_method_at(_12513_i);
		{
			auto _match_expr{ _157ee5140_current };
			if (!(_match_expr.type_is<jule::Ref<_150a13110_StructIns>>())) { goto _case_end_5689954880; }
			_case_begin_5689954880:;
			{
				{
					auto _match_expr{ _12717_ref };
					if (!(_match_expr.type_is<jule::Ref<_150a13110_StructIns>>())) { goto _case_end_5689956416; }
					_case_begin_5689956416:;
					{
						if ((_157ee5140_current.operator jule::Ref<_150a13110_StructIns>()).alloc == (_12717_ref.operator jule::Ref<_150a13110_StructIns>()).alloc) {
							goto _iter_next_5689951760;
						}
					}
					goto _match_end_5689955072;
					_case_end_5689956416:;
					_match_end_5689955072:;
				}
			}
			goto _match_end_5689954352;
			_case_end_5689954880:;
			_match_end_5689954352:;
		}
		{
			auto _match_expr{ _157ee5140_main_current };
			if (!(_match_expr.type_is<jule::Ref<_150a13110_StructIns>>())) { goto _case_end_5689957088; }
			_case_begin_5689957088:;
			{
				{
					auto _match_expr{ _12717_ref };
					if (!(_match_expr.type_is<jule::Ref<_150a13110_StructIns>>())) { goto _case_end_5689957600; }
					_case_begin_5689957600:;
					{
						if ((_157ee5140_main_current.operator jule::Ref<_150a13110_StructIns>()).alloc == (_12717_ref.operator jule::Ref<_150a13110_StructIns>()).alloc) {
							goto _iter_next_5689951760;
						}
					}
					goto _match_end_5689959024;
					_case_end_5689957600:;
					_match_end_5689959024:;
				}
			}
			goto _match_end_5689958208;
			_case_end_5689957088:;
			_match_end_5689958208:;
		}
		if ((!(_157ee5140_is_dead(_12717_ref)))) {
			return false;
		}
	}
	_iter_next_5689951760:;
	(_12513_i)++;
	goto _iter_begin_5689951760;
	_iter_end_5689951760:;
	return true;
}



inline jule::Bool _157ee5140_is_fn_dead(jule::Ref<_15081bcd0_FnIns> _15319_f) {
	if (_15319_f->_field_decl->_field_cpp_linked) {
		return false;
	}
	if (_15319_f->_field_decl->_method_is_entry_point() || _15319_f->_field_decl->_method_is_init()) {
		return (!(_15319_f->_field_decl->_field_statically));
	}
	if (jule::real(_15319_f->_field_owner)) {
		if (_157ee5140_is_exist_ref(_157ee5140_checking,jule::Any(_15319_f->_field_owner))) {
			return true;
		}
		return _157ee5140_is_dead(jule::Any(_15319_f->_field_owner));
	}
	return _157ee5140_is_all_references_are_dead_0(_15319_f->_field_references);
}



inline jule::Bool _157ee5140_is_var_dead(jule::Ref<_1511317d0_Var> _17920_v) {
	if (_17920_v->_field_constant) {
		return true;
	}
	if (_17920_v->_field_cpp_linked) {
		return false;
	}
	return _157ee5140_is_all_references_are_dead_1(_17920_v->_field_references);
}



inline jule::Bool _157ee5140_kind_is_dead(jule::Ref<_15177b070_TypeKind> _19121_k) {
	{
		if (!((jule::real(_19121_k->_method_ref())))) { goto _case_end_5689921456; }
		_case_begin_5689921456:;
		{
			return _157ee5140_kind_is_dead(_19121_k->_method_ref()->_field_elem);
		}
		goto _match_end_5689926960;
		_case_end_5689921456:;
		if (!((jule::real(_19121_k->_method_ptr())))) { goto _case_end_5689929888; }
		_case_begin_5689929888:;
		{
			return _157ee5140_kind_is_dead(_19121_k->_method_ptr()->_field_elem);
		}
		goto _match_end_5689926960;
		_case_end_5689929888:;
		if (!((jule::real(_19121_k->_method_slc())))) { goto _case_end_5689930000; }
		_case_begin_5689930000:;
		{
			return _157ee5140_kind_is_dead(_19121_k->_method_slc()->_field_elem);
		}
		goto _match_end_5689926960;
		_case_end_5689930000:;
		if (!((jule::real(_19121_k->_method_arr())))) { goto _case_end_5689930160; }
		_case_begin_5689930160:;
		{
			return _157ee5140_kind_is_dead(_19121_k->_method_arr()->_field_elem);
		}
		goto _match_end_5689926960;
		_case_end_5689930160:;
		if (!((jule::real(_19121_k->_method_trt())))) { goto _case_end_5689930272; }
		_case_begin_5689930272:;
		{
			jule::Ref<_150f166e0_Trait> _20617_t = _19121_k->_method_trt();
			if (_157ee5140_is_dead(jule::Any(_20617_t))) {
				return true;
			}
		}
		goto _match_end_5689926960;
		_case_end_5689930272:;
		if (!((jule::real(_19121_k->_method_strct())))) { goto _case_end_5689930384; }
		_case_begin_5689930384:;
		{
			jule::Ref<_150a13110_StructIns> _21217_s = _19121_k->_method_strct();
			if (_157ee5140_is_dead(jule::Any(_21217_s))) {
				return true;
			}
		}
		goto _match_end_5689926960;
		_case_end_5689930384:;
		_match_end_5689926960:;
	}
	return false;
}



inline jule::Bool _157ee5140_is_any_generic_is_dead(jule::Slice<jule::Ref<_15177b070_TypeKind>>& _22032_generics) {
	{
		auto __julec_range_expr = _22032_generics;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_15177b070_TypeKind> _157ee5140_g = *__julec_range_begin;
			_iter_begin_5689931680:;
			{
				if (_157ee5140_kind_is_dead(_157ee5140_g)) {
					return true;
				}
			}
			_iter_next_5689931680:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _157ee5140_g = *__julec_range_begin; goto _iter_begin_5689931680; }
			_iter_end_5689931680:;
		}
	}
	return false;
}



inline jule::Bool _157ee5140_is_struct_dead(jule::Ref<_150a13110_StructIns> _22923_s) {
	return false;
	if (_22923_s->_field_decl->_field_cpp_linked) {
		return false;
	}
	return _157ee5140_is_all_references_are_dead_2(_22923_s->_field_references);
}



inline jule::Bool _157ee5140_is_trait_dead(jule::Ref<_150f166e0_Trait> _24622_t) {
	return false;
	{
		auto __julec_range_expr = _24622_t->_field_implemented;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_150a13110_Struct> _157ee5140_imp = *__julec_range_begin;
			_iter_begin_5689961440:;
			{
				jule::Int _25117_i = 0LL;
				_iter_begin_5689966304:;
				if (!(_25117_i < _157ee5140_imp->_field_instances.len())) { goto _iter_end_5689966304; }
				{
					jule::Ref<_150a13110_StructIns> _25321_ins = _157ee5140_imp->_field_instances[static_cast<jule::Int>(_25117_i)];
					if ((!(_157ee5140_is_struct_dead(_25321_ins)))) {
						return false;
					}
				}
				_iter_next_5689966304:;
				(_25117_i)++;
				goto _iter_begin_5689966304;
				_iter_end_5689966304:;
			}
			_iter_next_5689961440:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _157ee5140_imp = *__julec_range_begin; goto _iter_begin_5689961440; }
			_iter_end_5689961440:;
		}
	}
	return true;
}



inline void _157ee5140_eliminate_dead_functions(_1509ba170_Vector_11& _26434_funcs) {
	jule::Int _26513_i = 0LL;
	_iter_begin_5689969904:;
	if (!(_26513_i < _26434_funcs._method_len())) { goto _iter_end_5689969904; }
	{
		jule::Ref<_15081bcd0_Fn> _26717_f = _26434_funcs._method_at(_26513_i);
		jule::Int _26817_j = 0LL;
		_iter_begin_5689973808:;
		if (!(_26817_j < _26717_f->_field_instances.len())) { goto _iter_end_5689973808; }
		{
			jule::Ref<_15081bcd0_FnIns> _27021_ins = _26717_f->_field_instances[static_cast<jule::Int>(_26817_j)];
			_157ee5140_main_current=jule::Any(_27021_ins);
			if (_157ee5140_is_fn_dead(_27021_ins)) {
				_157ee5140_deads=jule::append(_157ee5140_deads,jule::Slice<jule::Any>({jule::Any(_27021_ins)}));
				_157ee5140_remove_from_slice_0(_26717_f->_field_instances,_26817_j);
				goto _iter_next_5689973808;
			}
			_157eacdb0_eliminate_dead_code_of_scope(_27021_ins->_field_scope);
			(_26817_j)++;
		}
		_iter_next_5689973808:;
		goto _iter_begin_5689973808;
		_iter_end_5689973808:;
		if (_26717_f->_field_instances.len() == 0LL) {
			_26434_funcs._method_remove_range(_26513_i,1LL);
			goto _iter_next_5689969904;
		}
		(_26513_i)++;
	}
	_iter_next_5689969904:;
	goto _iter_begin_5689969904;
	_iter_end_5689969904:;
}



inline void _157ee5140_eliminate_dead_globals(jule::Ref<_150f26340_Package>& _29032_pkg) {
	{
		auto __julec_range_expr = _29032_pkg->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_15128c4d0_SymbolTable> _157ee5140_f = *__julec_range_begin;
			_iter_begin_5689991680:;
			{
				jule::Int _29217_i = 0LL;
				_iter_begin_5689993616:;
				if (!(_29217_i < _157ee5140_f->_field_vars._method_len())) { goto _iter_end_5689993616; }
				{
					jule::Ref<_1511317d0_Var> _29421_v = _157ee5140_f->_field_vars._method_at(_29217_i);
					_157ee5140_main_current=jule::Any(_29421_v);
					if (_157ee5140_is_var_dead(_29421_v)) {
						_157ee5140_deads=jule::append(_157ee5140_deads,jule::Slice<jule::Any>({jule::Any(_29421_v)}));
						_157ee5140_f->_field_vars._method_remove_range(_29217_i,1LL);
					} else {
						(_29217_i)++;
					}
				}
				_iter_next_5689993616:;
				goto _iter_begin_5689993616;
				_iter_end_5689993616:;
			}
			_iter_next_5689991680:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _157ee5140_f = *__julec_range_begin; goto _iter_begin_5689991680; }
			_iter_end_5689991680:;
		}
	}
}



inline void _157ee5140_eliminate_dead_functions_package(jule::Ref<_150f26340_Package>& _30642_pkg) {
	{
		auto __julec_range_expr = _30642_pkg->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_15128c4d0_SymbolTable> _157ee5140_f = *__julec_range_begin;
			_iter_begin_5689994528:;
			{
				_157ee5140_eliminate_dead_functions(_157ee5140_f->_field_funcs);
			}
			_iter_next_5689994528:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _157ee5140_f = *__julec_range_begin; goto _iter_begin_5689994528; }
			_iter_end_5689994528:;
		}
	}
}



inline void _157ee5140_eliminate_dead_structs(jule::Ref<_150f26340_Package>& _31232_pkg) {
	{
		auto __julec_range_expr = _31232_pkg->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_15128c4d0_SymbolTable> _157ee5140_f = *__julec_range_begin;
			_iter_begin_5690002160:;
			{
				jule::Int _31417_i = 0LL;
				_iter_begin_5690005472:;
				if (!(_31417_i < _157ee5140_f->_field_structs._method_len())) { goto _iter_end_5690005472; }
				{
					jule::Ref<_150a13110_Struct> _31621_s = _157ee5140_f->_field_structs._method_at(_31417_i);
					jule::Int _31721_j = 0LL;
					_iter_begin_5690009456:;
					if (!(_31721_j < _31621_s->_field_instances.len())) { goto _iter_end_5690009456; }
					{
						jule::Ref<_150a13110_StructIns> _31925_ins = _31621_s->_field_instances[static_cast<jule::Int>(_31721_j)];
						_157ee5140_main_current=jule::Any(_31925_ins);
						if (_157ee5140_is_struct_dead(_31925_ins)) {
							_157ee5140_deads=jule::append(_157ee5140_deads,jule::Slice<jule::Any>({jule::Any(_31925_ins)}));
							_157ee5140_remove_from_slice_1(_31621_s->_field_instances,_31721_j);
							goto _iter_next_5690009456;
						}
						(_31721_j)++;
					}
					_iter_next_5690009456:;
					goto _iter_begin_5690009456;
					_iter_end_5690009456:;
					if (_31621_s->_field_instances.len() == 0LL) {
						_157ee5140_f->_field_structs._method_remove_range(_31417_i,1LL);
						goto _iter_next_5690005472;
					}
					(_31417_i)++;
				}
				_iter_next_5690005472:;
				goto _iter_begin_5690005472;
				_iter_end_5690005472:;
			}
			_iter_next_5690002160:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _157ee5140_f = *__julec_range_begin; goto _iter_begin_5690002160; }
			_iter_end_5690002160:;
		}
	}
}



inline void _157ee5140_eliminate_dead_traits(jule::Ref<_150f26340_Package>& _34931_pkg) {
	{
		auto __julec_range_expr = _34931_pkg->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_15128c4d0_SymbolTable> _157ee5140_f = *__julec_range_begin;
			_iter_begin_5690025952:;
			{
				jule::Int _35117_i = 0LL;
				_iter_begin_5690027776:;
				if (!(_35117_i < _157ee5140_f->_field_traits._method_len())) { goto _iter_end_5690027776; }
				{
					jule::Ref<_150f166e0_Trait> _35321_t = _157ee5140_f->_field_traits._method_at(_35117_i);
					_157ee5140_main_current=jule::Any(_35321_t);
					if (_157ee5140_is_trait_dead(_35321_t)) {
						_157ee5140_deads=jule::append(_157ee5140_deads,jule::Slice<jule::Any>({jule::Any(_35321_t)}));
						_157ee5140_f->_field_traits._method_remove_range(_35117_i,1LL);
					} else {
						(_35117_i)++;
					}
				}
				_iter_next_5690027776:;
				goto _iter_begin_5690027776;
				_iter_end_5690027776:;
			}
			_iter_next_5690025952:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _157ee5140_f = *__julec_range_begin; goto _iter_begin_5690025952; }
			_iter_end_5690025952:;
		}
	}
}



inline void _157ee5140_catch_alive_init(jule::Ref<_150f26340_Package>& _36526_pkg) {
	
	
	jule::Ref<_15081bcd0_Fn> _36813_f = _36526_pkg->_method_find_fn(jule::Str("init", 4),false);
	if ((!(jule::real(_36813_f)))) {
		return;
	}
	jule::I64 _3739_n = _157ee5140_deads.len();
	__JULE_DEFER({
		_157ee5140_deads=_157ee5140_deads.slice(0LL,static_cast<jule::Int>(_3739_n));
		_157ee5140_checking=nullptr;
		_157ee5140_current=jule::Any(nullptr);
	});
	jule::Ref<_15081bcd0_FnIns> _38113_ins = _36813_f->_field_instances[0LL];
	jule::Int _38213_i = 0LL;
	_iter_begin_5690037552:;
	if (!(_38213_i < _38113_ins->_field_refers->_method_len())) { goto _iter_end_5690037552; }
	{
		if ((!(_157ee5140_is_dead(_38113_ins->_field_refers->_method_at(_38213_i))))) {
			_36813_f->_field_statically=true;
			return;
		}
	}
	_iter_next_5690037552:;
	(_38213_i)++;
	goto _iter_begin_5690037552;
	_iter_end_5690037552:;
}



inline void _157ee5140_eliminate_dead_code_package(jule::Ref<_150f26340_Package>& _39137_pkg) {
	_157ee5140_deads=jule::Slice<jule::Any>::alloc(0LL,2000LL);
	_157ee5140_catch_alive_init(_39137_pkg);
	_157ee5140_eliminate_dead_globals(_39137_pkg);
	_157ee5140_eliminate_dead_functions_package(_39137_pkg);
}



inline void _157ee5140_eliminate_dead_code(jule::Ref<_1501d9900_IR> _40232_ir) {
	jule::I64 _40313_i = _40232_ir->_field_used.len() - 1LL;
	_iter_begin_5690051424:;
	if (!(_40313_i >= 0LL)) { goto _iter_end_5690051424; }
	{
		jule::Ref<_150f26340_ImportInfo> _40517_u = _40232_ir->_field_used[static_cast<jule::Int>(_40313_i)];
		if ((!(_40517_u->_field_cpp_linked))) {
			_157ee5140_eliminate_dead_code_package(_40517_u->_field_package);
		}
	}
	_iter_next_5690051424:;
	(_40313_i)--;
	goto _iter_begin_5690051424;
	_iter_end_5690051424:;
	_157ee5140_eliminate_dead_code_package(_40232_ir->_field_main);
	_157ee5140_deads=nullptr;
	_157ee5140_checking=nullptr;
	_157ee5140_current=jule::Any(nullptr);
}



inline void _157eacdb0_eliminate_dead_code_of_scope(jule::Ref<_150d29660_Scope> _7437_s) {
	jule::Ref<_157eacdb0_ScopeDeadCode> _7513_sdc = jule::new_struct<_157eacdb0_ScopeDeadCode>(new( std::nothrow ) _157eacdb0_ScopeDeadCode(jule::Ref<_157eacdb0_ScopeDeadCode>(),_7437_s,(&(_7437_s->_field_stmts)),jule::Int()));
	{
		_7513_sdc->_method_optimize_stmts();
	}
}



inline void _1501e6230_push_opt_level(jule::Int _2823_level) {
	{
		auto _match_expr{ _2823_level };
		if (!((0LLU) == _match_expr)) { goto _case_end_5690099664; }
		_case_begin_5690099664:;
		{
			_1501e6230_OPTIMIZATIONS=nullptr;
		}
		goto _match_end_5690098224;
		_case_end_5690099664:;
		if (!((1LLU) == _match_expr)) { goto _case_end_5690099776; }
		_case_begin_5690099776:;
		{
			_1501e6230_OPTIMIZATIONS=jule::append(_1501e6230_OPTIMIZATIONS,jule::Slice<jule::Str>({jule::Str("--opt-copy", 10),jule::Str("--opt-deadcode", 14),jule::Str("--opt-append", 12)}));
		}
		goto _match_end_5690098224;
		_case_end_5690099776:;
		_case_begin_5690098704:;
		{
			return;
		}
		goto _match_end_5690098224;
		_case_end_5690098704:;
		_match_end_5690098224:;
	}
}



inline jule::Bool _1501e6230_is_opt_enabled(jule::Str _4523_opt) {
	{
		auto __julec_range_expr = _1501e6230_OPTIMIZATIONS;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _1501e6230_oopt = *__julec_range_begin;
			_iter_begin_5690102720:;
			{
				if (_4523_opt == _1501e6230_oopt) {
					return true;
				}
			}
			_iter_next_5690102720:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1501e6230_oopt = *__julec_range_begin; goto _iter_begin_5690102720; }
			_iter_end_5690102720:;
		}
	}
	return false;
}



inline jule::Str _1517eb5a0_gen_if(jule::Ref<_150d29660_If> _12815_i) {
	jule::Str _12913_obj = jule::Str("if (", 4);
	_12913_obj+=_1517eb830_gen_expr(_12815_i->_field_expr);
	_12913_obj+=jule::Str(") ", 2);
	_12913_obj+=_1517eb5a0_gen_scope(_12815_i->_field_scope);
	return _12913_obj;
}



inline jule::Str _1517eb5a0_gen_conditional(jule::Ref<_150d29660_Conditional> _13624_c) {
	jule::Str _13713_obj = _1517eb5a0_gen_if(_13624_c->_field_elifs[0LL]);
	{
		auto __julec_range_expr = _13624_c->_field_elifs.slice(1LL);
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_150d29660_If> _1517eb5a0_elif = *__julec_range_begin;
			_iter_begin_5690425616:;
			{
				_13713_obj+=jule::Str(" else ", 6);
				_13713_obj+=_1517eb5a0_gen_if(_1517eb5a0_elif);
			}
			_iter_next_5690425616:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1517eb5a0_elif = *__julec_range_begin; goto _iter_begin_5690425616; }
			_iter_end_5690425616:;
		}
	}
	if (jule::real(_13624_c->_field_default)) {
		_13713_obj+=jule::Str(" else ", 6);
		_13713_obj+=_1517eb5a0_gen_scope(_13624_c->_field_default->_field_scope);
	}
	return _13713_obj;
}



inline jule::Str _1517eb5a0_gen_inf_iter(jule::Ref<_150d29660_InfIter> _15221_it) {
	jule::Str _1539_begin = _151c17930_iter_begin_label_ident(((jule::Uintptr)((_15221_it).alloc)));
	jule::Str _1549_end = _151c17930_iter_end_label_ident(((jule::Uintptr)((_15221_it).alloc)));
	jule::Str _1559_next = _151c17930_iter_next_label_ident(((jule::Uintptr)((_15221_it).alloc)));
	jule::Str _1569_indent = _1514109b0_indent();
	jule::Str _15813_obj = _1539_begin + jule::Str(":;\n", 3);
	_15813_obj+=_1569_indent;
	_15813_obj+=_1517eb5a0_gen_scope(_15221_it->_field_scope);
	_15813_obj+=jule::Str("\n", 1);
	_15813_obj+=_1569_indent;
	_15813_obj+=_1559_next + jule::Str(":;\n", 3);
	_15813_obj+=_1569_indent;
	_15813_obj+=(jule::Str("goto ", 5) + _1539_begin) + jule::Str(";\n", 2);
	_15813_obj+=_1569_indent;
	_15813_obj+=_1549_end + jule::Str(":;", 2);
	return _15813_obj;
}



inline jule::Str _1517eb5a0_gen_while_iter(jule::Ref<_150d29660_WhileIter> _17223_it) {
	jule::Str _1739_begin = _151c17930_iter_begin_label_ident(((jule::Uintptr)((_17223_it).alloc)));
	jule::Str _1749_end = _151c17930_iter_end_label_ident(((jule::Uintptr)((_17223_it).alloc)));
	jule::Str _1759_next = _151c17930_iter_next_label_ident(((jule::Uintptr)((_17223_it).alloc)));
	jule::Str _1769_indent = _1514109b0_indent();
	jule::Str _17813_obj = _1739_begin + jule::Str(":;\n", 3);
	_17813_obj+=_1769_indent;
	if (_17223_it->_field_expr != nullptr) {
		_17813_obj+=jule::Str("if (!(", 6);
		_17813_obj+=_1517eb830_gen_expr(_17223_it->_field_expr);
		_17813_obj+=jule::Str(")) { goto ", 10);
		_17813_obj+=_1749_end;
		_17813_obj+=jule::Str("; }\n", 4);
		_17813_obj+=_1769_indent;
	}
	_17813_obj+=_1517eb5a0_gen_scope(_17223_it->_field_scope);
	_17813_obj+=jule::Str("\n", 1);
	_17813_obj+=_1769_indent;
	_17813_obj+=_1759_next + jule::Str(":;\n", 3);
	_17813_obj+=_1769_indent;
	if (_17223_it->_field_next != nullptr) {
		_17813_obj+=_1517eb5a0_gen_st(_17223_it->_field_next);
		_17813_obj+=jule::Str("\n", 1);
		_17813_obj+=_1769_indent;
	}
	_17813_obj+=(jule::Str("goto ", 5) + _1739_begin) + jule::Str(";\n", 2);
	_17813_obj+=_1769_indent;
	_17813_obj+=_1749_end + jule::Str(":;", 2);
	return _17813_obj;
}



inline jule::Trait<_1517eb5a0_RangeSetter> _1517eb5a0_get_range_setter(jule::Ref<_150d29660_RangeIter> _20525_it) {
	{
		if (!((jule::real(_20525_it->_field_expr->_field_kind->_method_slc())))) { goto _case_end_5690459952; }
		_case_begin_5690459952:;
		{
			return jule::new_struct<_1517eb5a0_IndexRangeSetter>(new( std::nothrow ) _1517eb5a0_IndexRangeSetter());
		}
		goto _match_end_5690456608;
		_case_end_5690459952:;
		if (!((jule::real(_20525_it->_field_expr->_field_kind->_method_arr())))) { goto _case_end_5690458144; }
		_case_begin_5690458144:;
		{
			return jule::new_struct<_1517eb5a0_IndexRangeSetter>(new( std::nothrow ) _1517eb5a0_IndexRangeSetter());
		}
		goto _match_end_5690456608;
		_case_end_5690458144:;
		if (!((jule::real(_20525_it->_field_expr->_field_kind->_method_map())))) { goto _case_end_5690458256; }
		_case_begin_5690458256:;
		{
			return jule::new_struct<_1517eb5a0_MapRangeSetter>(new( std::nothrow ) _1517eb5a0_MapRangeSetter());
		}
		goto _match_end_5690456608;
		_case_end_5690458256:;
		_case_begin_5690456736:;
		{
			return jule::new_struct<_1517eb5a0_IndexRangeSetter>(new( std::nothrow ) _1517eb5a0_IndexRangeSetter());
		}
		goto _match_end_5690456608;
		_case_end_5690456736:;
		_match_end_5690456608:;
	}
}



inline jule::Str _1517eb5a0_gen_range_iter(jule::Ref<_150d29660_RangeIter> _21423_it) {
	_1514109b0_add_indent();
	jule::Str _2179_begin = _151c17930_iter_begin_label_ident(((jule::Uintptr)((_21423_it).alloc)));
	jule::Str _2189_end = _151c17930_iter_end_label_ident(((jule::Uintptr)((_21423_it).alloc)));
	jule::Str _2199_next = _151c17930_iter_next_label_ident(((jule::Uintptr)((_21423_it).alloc)));
	jule::Str _22013__indent = _1514109b0_indent();
	jule::Trait<_1517eb5a0_RangeSetter> _2219_setter = _1517eb5a0_get_range_setter(_21423_it);
	jule::Str _22313_obj = jule::Str("{\n", 2);
	_22313_obj+=_22013__indent;
	if (_21423_it->_field_expr->_field_lvalue && _1501e6230_is_opt_enabled(jule::Str("--opt-copy", 10))) {
		_22313_obj+=jule::Str("auto &__julec_range_expr = ", 27);
	} else {
		_22313_obj+=jule::Str("auto __julec_range_expr = ", 26);
	}
	_22313_obj+=_1517eb830_gen_expr(_21423_it->_field_expr->_field_model) + jule::Str(";\n", 2);
	_22313_obj+=_22013__indent;
	_22313_obj+=jule::Str("if (__julec_range_expr.begin() != __julec_range_expr.end()) {\n", 62);
	_1514109b0_add_indent();
	_22013__indent=_1514109b0_indent();
	_22313_obj+=_22013__indent;
	_22313_obj+=jule::Str("auto __julec_range_begin = __julec_range_expr.begin();\n", 55);
	_22313_obj+=_22013__indent;
	_22313_obj+=jule::Str("const auto __julec_range_end = __julec_range_expr.end();\n", 57);
	_22313_obj+=_22013__indent;
	_22313_obj+=_2219_setter.get()._method_setup_vars(_21423_it->_field_key_a,_21423_it->_field_key_b);
	_22313_obj+=_2179_begin + jule::Str(":;\n", 3);
	_22313_obj+=_22013__indent;
	_22313_obj+=_1517eb5a0_gen_scope(_21423_it->_field_scope);
	_22313_obj+=jule::Str("\n", 1);
	_22313_obj+=_22013__indent;
	_22313_obj+=_2199_next + jule::Str(":;\n", 3);
	_22313_obj+=_22013__indent;
	_22313_obj+=_2219_setter.get()._method_next_steps(_21423_it->_field_key_a,_21423_it->_field_key_b,_2179_begin);
	_22313_obj+=_22013__indent;
	_22313_obj+=_2189_end + jule::Str(":;\n", 3);
	_1514109b0_done_indent();
	_22013__indent=_1514109b0_indent();
	_22313_obj+=_22013__indent;
	_22313_obj+=jule::Str("}\n", 2);
	_1514109b0_done_indent();
	_22013__indent=_1514109b0_indent();
	_22313_obj+=_22013__indent;
	_22313_obj+=jule::Str("}", 1);
	return _22313_obj;
}



inline jule::Str _1517eb5a0_gen_cont(jule::Ref<_150d29660_ContSt> _26913_c) {
	return (jule::Str("goto ", 5) + _151c17930_iter_next_label_ident(_26913_c->_field_it)) + jule::Str(";", 1);
}



inline jule::Str _1517eb5a0_gen_label(jule::Ref<_150d29660_Label> _27314_l) {
	return _151c17930_label_ident(_27314_l->_field_ident) + jule::Str(":;", 2);
}



inline jule::Str _1517eb5a0_gen_goto(jule::Ref<_150d29660_GotoSt> _27713_gt) {
	return (jule::Str("goto ", 5) + _151c17930_label_ident(_27713_gt->_field_ident)) + jule::Str(";", 1);
}



inline jule::Str _1517eb5a0_gen_postfix(jule::Ref<_150d29660_Postfix> _28120_p) {
	return (((jule::Str("(", 1) + _1517eb830_gen_expr(_28120_p->_field_expr)) + jule::Str(")", 1)) + _28120_p->_field_op) + jule::Str(";", 1);
}



inline jule::Str _1517eb5a0_gen_assign(jule::Ref<_150d29660_Assign> _28519_a) {
	jule::Str _28613_obj = _1517eb830_gen_expr(_28519_a->_field_l);
	_28613_obj+=_28519_a->_field_op;
	if (_1501e6230_is_opt_enabled(jule::Str("--opt-append", 12))) {
		{
			auto _match_expr{ _28519_a->_field_r };
			if (!(_match_expr.type_is<jule::Ref<_150f25dd0_BuiltinAppendCallExprModel>>())) { goto _case_end_5690501264; }
			_case_begin_5690501264:;
			{
				jule::Ref<_150f25dd0_BuiltinAppendCallExprModel> _29121_model = _28519_a->_field_r.operator jule::Ref<_150f25dd0_BuiltinAppendCallExprModel>();
				jule::Str _29218_expr;
				jule::Bool _29224_optimized;
				std::tie(_29218_expr,_29224_optimized) = _1517eb830_gen_builtin_append_call_expr_model_assign(_28519_a->_field_l,_29121_model);
				if (_29224_optimized) {
					return _29218_expr;
				}
				_28613_obj+=_29218_expr;
			}
			goto _match_end_5690499248;
			_case_end_5690501264:;
			_case_begin_5690500480:;
			{
				_28613_obj+=_1517eb830_gen_expr(_28519_a->_field_r);
			}
			goto _match_end_5690499248;
			_case_end_5690500480:;
			_match_end_5690499248:;
		}
	} else {
		_28613_obj+=_1517eb830_gen_expr(_28519_a->_field_r);
	}
	_28613_obj+=jule::Str(";", 1);
	return _28613_obj;
}



inline jule::Str _1517eb5a0_gen_multi_assign(jule::Ref<_150d29660_MultiAssign> _30825_a) {
	jule::Str _30913_obj = jule::Str("std::tie(", 9);
	{
		auto __julec_range_expr = _30825_a->_field_l;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Any _1517eb5a0_l = *__julec_range_begin;
			_iter_begin_5690509344:;
			{
				if (_1517eb5a0_l == nullptr) {
					_30913_obj+=jule::Str("std::ignore,", 12);
				} else {
					_30913_obj+=_1517eb830_gen_expr(_1517eb5a0_l) + jule::Str(",", 1);
				}
			}
			_iter_next_5690509344:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1517eb5a0_l = *__julec_range_begin; goto _iter_begin_5690509344; }
			_iter_end_5690509344:;
		}
	}
	_30913_obj=_30913_obj.slice(0LL,static_cast<jule::Int>(_30913_obj.len() - 1LL));
	_30913_obj+=jule::Str(") = ", 4);
	_30913_obj+=_1517eb830_gen_expr(_30825_a->_field_r);
	_30913_obj+=jule::Str(";", 1);
	return _30913_obj;
}



inline jule::Str _1517eb5a0_gen_case(jule::Ref<_150d29660_Match> _32617_m,jule::Ref<_150d29660_Case> _32632_c) {
	
	jule::Str _3299_end = _151c17930_case_end_label_ident(((jule::Uintptr)((_32632_c).alloc)));
	jule::Str _33013_obj = jule::Str("", 0);
	if (_32632_c->_field_exprs.len() > 0LL) {
		_33013_obj+=jule::Str("if (!(", 6);
		{
			auto __julec_range_expr = _32632_c->_field_exprs;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Int _1517eb5a0_i = 0;
				jule::Any _1517eb5a0_expr = *__julec_range_begin;
				_iter_begin_5690520864:;
				{
					{
						if (!(((!(_32617_m->_field_type_match))))) { goto _case_end_5690524416; }
						_case_begin_5690524416:;
						{
							_33013_obj+=jule::Str("(", 1);
							_33013_obj+=_1517eb830_gen_expr(_1517eb5a0_expr);
							_33013_obj+=jule::Str(")", 1);
							if (_32617_m->_field_expr->_method_is_const()) {
								if ((!(_32617_m->_field_expr->_field_constant->_method_is_bool())) || (!(_32617_m->_field_expr->_field_constant->_method_read_bool()))) {
									_33013_obj+=jule::Str(" == ", 4);
									_33013_obj+=_1517eb830_gen_expr_model(_32617_m->_field_expr->_field_model);
								}
							} else {
								_33013_obj+=jule::Str(" == ", 4);
								_33013_obj+=jule::Str("_match_expr", 11);
							}
						}
						goto _match_end_5690523424;
						_case_end_5690524416:;
						_case_begin_5690523568:;
						{
							_33013_obj+=jule::Str("_match_expr", 11);
							_33013_obj+=(jule::Str(".type_is<", 9) + _1517eb830_gen_expr(_1517eb5a0_expr)) + jule::Str(">()", 3);
						}
						goto _match_end_5690523424;
						_case_end_5690523568:;
						_match_end_5690523424:;
					}
					if ((_1517eb5a0_i + 1LL) < _32632_c->_field_exprs.len()) {
						_33013_obj+=jule::Str(" || ", 4);
					}
				}
				_iter_next_5690520864:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { ++_1517eb5a0_i; _1517eb5a0_expr = *__julec_range_begin; goto _iter_begin_5690520864; }
				_iter_end_5690520864:;
			}
		}
		_33013_obj+=jule::Str(")) { goto ", 10);
		_33013_obj+=_3299_end + jule::Str("; }\n", 4);
	}
	if (_32632_c->_field_scope->_field_stmts._method_len() > 0LL) {
		_33013_obj+=_1514109b0_indent();
		_33013_obj+=_151c17930_case_begin_label_ident(((jule::Uintptr)((_32632_c).alloc))) + jule::Str(":;\n", 3);
		_33013_obj+=_1514109b0_indent();
		_33013_obj+=_1517eb5a0_gen_scope(_32632_c->_field_scope);
		_33013_obj+=jule::Str("\n", 1);
	}
	_33013_obj+=_1514109b0_indent();
	_33013_obj+=jule::Str("goto ", 5);
	_33013_obj+=_151c17930_match_end_label_ident(((jule::Uintptr)((_32617_m).alloc))) + jule::Str(";", 1);
	_33013_obj+=jule::Str("\n", 1);
	_33013_obj+=_1514109b0_indent();
	_33013_obj+=_3299_end + jule::Str(":;", 2);
	return _33013_obj;
}



inline jule::Str _1517eb5a0_gen_match(jule::Ref<_150d29660_Match> _38118_m) {
	jule::Str _38213_obj = jule::Str("{\n", 2);
	_1514109b0_add_indent();
	_38213_obj+=_1514109b0_indent();
	if ((!(_38118_m->_field_expr->_method_is_const()))) {
		if (_38118_m->_field_expr->_field_lvalue && _1501e6230_is_opt_enabled(jule::Str("--opt-copy", 10))) {
			_38213_obj+=jule::Str("auto &_match_expr{ ", 19);
		} else {
			_38213_obj+=jule::Str("auto _match_expr{ ", 18);
		}
		_38213_obj+=_1517eb830_gen_expr(_38118_m->_field_expr->_field_model);
		_38213_obj+=jule::Str(" };\n", 4);
		_38213_obj+=_1514109b0_indent();
	}
	if (_38118_m->_field_cases.len() > 0LL) {
		_38213_obj+=_1517eb5a0_gen_case(_38118_m,_38118_m->_field_cases[0LL]);
		{
			auto __julec_range_expr = _38118_m->_field_cases.slice(1LL);
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_150d29660_Case> _1517eb5a0_c = *__julec_range_begin;
				_iter_begin_5690548528:;
				{
					_38213_obj+=jule::Str("\n", 1);
					_38213_obj+=_1514109b0_indent();
					_38213_obj+=_1517eb5a0_gen_case(_38118_m,_1517eb5a0_c);
				}
				_iter_next_5690548528:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _1517eb5a0_c = *__julec_range_begin; goto _iter_begin_5690548528; }
				_iter_end_5690548528:;
			}
		}
	}
	if (jule::real(_38118_m->_field_default)) {
		_38213_obj+=jule::Str("\n", 1);
		_38213_obj+=_1517eb5a0_gen_case(_38118_m,_38118_m->_field_default);
	}
	_38213_obj+=jule::Str("\n", 1);
	_38213_obj+=_1514109b0_indent();
	_38213_obj+=_151c17930_match_end_label_ident(((jule::Uintptr)((_38118_m).alloc))) + jule::Str(":;", 2);
	_38213_obj+=jule::Str("\n", 1);
	_1514109b0_done_indent();
	_38213_obj+=_1514109b0_indent();
	_38213_obj+=jule::Str("}", 1);
	return _38213_obj;
}



inline jule::Str _1517eb5a0_gen_fall_st(jule::Ref<_150d29660_FallSt> _42716_f) {
	return (jule::Str("goto ", 5) + _151c17930_case_begin_label_ident(_42716_f->_field_dest_case)) + jule::Str(";", 1);
}



inline jule::Str _1517eb5a0_gen_break_st(jule::Ref<_150d29660_BreakSt> _43117_b) {
	jule::Str _43213_obj = jule::Str("goto ", 5);
	if (_43117_b->_field_it != 0LL) {
		_43213_obj+=_151c17930_iter_end_label_ident(_43117_b->_field_it);
	} else {
		_43213_obj+=_151c17930_match_end_label_ident(_43117_b->_field_mtch);
	}
	_43213_obj+=jule::Str(";", 1);
	return _43213_obj;
}



inline jule::Str _1517eb5a0_gen_ret_vars(jule::Ref<_150d29660_RetSt> _44321_r) {
	jule::Str _44413_obj = jule::Str("", 0);
	{
		auto __julec_range_expr = _44321_r->_field_vars;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_1511317d0_Var> _1517eb5a0_v = *__julec_range_begin;
			_iter_begin_5690565088:;
			{
				if (_150640f50_is_ignore_ident(_1517eb5a0_v->_field_ident)) {
					_44413_obj+=_1517eb830_get_init_expr(_1517eb5a0_v->_field_kind->_field_kind);
				} else {
					_44413_obj+=_151c17930_var_out_ident(_1517eb5a0_v);
				}
				_44413_obj+=jule::Str(",", 1);
			}
			_iter_next_5690565088:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1517eb5a0_v = *__julec_range_begin; goto _iter_begin_5690565088; }
			_iter_end_5690565088:;
		}
	}
	_44413_obj=_44413_obj.slice(0LL,static_cast<jule::Int>(_44413_obj.len() - 1LL));
	if (_44321_r->_field_vars.len() > 1LL) {
		_44413_obj=(jule::Str("return std::make_tuple(", 23) + _44413_obj) + jule::Str(")", 1);
	} else {
		_44413_obj=jule::Str("return ", 7) + _44413_obj;
	}
	_44413_obj+=jule::Str(";", 1);
	return _44413_obj;
}



inline jule::Str _1517eb5a0_gen_ret_expr_tuple(jule::Ref<_150d29660_RetSt> _46727_r) {
	{
		auto _match_expr{ _46727_r->_field_expr };
		if (!(_match_expr.type_is<jule::Ref<_150f25dd0_FnCallExprModel>>())) { goto _case_end_5690573584; }
		_case_begin_5690573584:;
		{
			return (jule::Str("return ", 7) + _1517eb830_gen_expr_model(_46727_r->_field_expr)) + jule::Str(";", 1);
		}
		goto _match_end_5690571328;
		_case_end_5690573584:;
		_match_end_5690571328:;
	}
	jule::Slice<jule::Ref<_151290fd0_Data>> _47313_datas = _46727_r->_field_expr.operator jule::Ref<_150f25dd0_TupleExprModel>()->_field_datas;
	jule::Str _47413_obj = jule::Str("", 0);
	{
		auto __julec_range_expr = _46727_r->_field_vars;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _1517eb5a0_i = 0;
			jule::Ref<_1511317d0_Var> _1517eb5a0_v = *__julec_range_begin;
			_iter_begin_5690578480:;
			{
				if ((!(_150640f50_is_ignore_ident(_1517eb5a0_v->_field_ident)))) {
					jule::Str _47817_ident = _151c17930_var_out_ident(_1517eb5a0_v);
					_47413_obj+=((_47817_ident + jule::Str(" = ", 3)) + _1517eb830_gen_expr(_47313_datas[static_cast<jule::Int>(_1517eb5a0_i)]->_field_model)) + jule::Str(";\n", 2);
					_47413_obj+=_1514109b0_indent();
				}
			}
			_iter_next_5690578480:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_1517eb5a0_i; _1517eb5a0_v = *__julec_range_begin; goto _iter_begin_5690578480; }
			_iter_end_5690578480:;
		}
	}
	_47413_obj+=jule::Str("return std::make_tuple(", 23);
	{
		auto __julec_range_expr = _47313_datas;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _1517eb5a0_i = 0;
			jule::Ref<_151290fd0_Data> _1517eb5a0_d = *__julec_range_begin;
			_iter_begin_5690580096:;
			{
				jule::Ref<_1511317d0_Var> _48617_v = _46727_r->_field_vars[static_cast<jule::Int>(_1517eb5a0_i)];
				if (_150640f50_is_ignore_ident(_48617_v->_field_ident)) {
					_47413_obj+=_1517eb830_gen_expr(_1517eb5a0_d->_field_model);
				} else {
					_47413_obj+=_151c17930_var_out_ident(_48617_v);
				}
				_47413_obj+=jule::Str(",", 1);
			}
			_iter_next_5690580096:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_1517eb5a0_i; _1517eb5a0_d = *__julec_range_begin; goto _iter_begin_5690580096; }
			_iter_end_5690580096:;
		}
	}
	_47413_obj=_47413_obj.slice(0LL,static_cast<jule::Int>(_47413_obj.len() - 1LL));
	_47413_obj+=jule::Str(");", 2);
	return _47413_obj;
}



inline jule::Str _1517eb5a0_gen_ret_expr(jule::Ref<_150d29660_RetSt> _50121_r) {
	if (_50121_r->_field_vars.len() == 0LL) {
		return (jule::Str("return ", 7) + _1517eb830_gen_expr(_50121_r->_field_expr)) + jule::Str(";", 1);
	}
	if (_50121_r->_field_vars.len() > 1LL) {
		return _1517eb5a0_gen_ret_expr_tuple(_50121_r);
	}
	if ((!(_150640f50_is_ignore_ident(_50121_r->_field_vars[0LL]->_field_ident)))) {
		jule::Str _51113_ident = _151c17930_var_out_ident(_50121_r->_field_vars[0LL]);
		jule::Str _51217_obj = ((_51113_ident + jule::Str(" = ", 3)) + _1517eb830_gen_expr(_50121_r->_field_expr)) + jule::Str(";\n", 2);
		_51217_obj+=_1514109b0_indent();
		_51217_obj+=(jule::Str("return ", 7) + _51113_ident) + jule::Str(";", 1);
		return _51217_obj;
	}
	return (jule::Str("return ", 7) + _1517eb830_gen_expr(_50121_r->_field_expr)) + jule::Str(";", 1);
}



inline jule::Str _1517eb5a0_gen_ret_st(jule::Ref<_150d29660_RetSt> _52119_r) {
	if ((_52119_r->_field_expr == nullptr) && (_52119_r->_field_vars.len() == 0LL)) {
		return jule::Str("return;", 7);
	}
	if (_52119_r->_field_expr == nullptr) {
		return _1517eb5a0_gen_ret_vars(_52119_r);
	}
	return _1517eb5a0_gen_ret_expr(_52119_r);
}



inline jule::Str _1517eb5a0_gen_ret_st_with_defaults(jule::Ref<_15177b070_TypeKind> _53333_result) {
	jule::Str _53413_obj = jule::Str("return ", 7);
	if (jule::real(_53333_result->_method_tup())) {
		_53413_obj+=jule::Str("std::make_tuple(", 16);
		{
			auto __julec_range_expr = _53333_result->_method_tup()->_field_types;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_15177b070_TypeKind> _1517eb5a0_t = *__julec_range_begin;
				_iter_begin_5690609904:;
				{
					_53413_obj+=_1517eb830_get_init_expr(_1517eb5a0_t);
					_53413_obj+=jule::Str(",", 1);
				}
				_iter_next_5690609904:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _1517eb5a0_t = *__julec_range_begin; goto _iter_begin_5690609904; }
				_iter_end_5690609904:;
			}
		}
		_53413_obj=_53413_obj.slice(0LL,static_cast<jule::Int>(_53413_obj.len() - 1LL));
		_53413_obj+=jule::Str(")", 1);
	} else {
		_53413_obj+=_1517eb830_get_init_expr(_53333_result);
	}
	_53413_obj+=jule::Str(";", 1);
	return _53413_obj;
}



inline jule::Str _1517eb5a0_gen_recover(jule::Ref<_150d29660_Recover> _55020_r) {
	jule::Str _55113_obj = jule::Str("try ", 4);
	_55113_obj+=_1517eb5a0_gen_scope(_55020_r->_field_scope);
	_55113_obj+=jule::Str(" catch(jule::Exception e) ", 26);
	if (_55020_r->_field_handler->_method_is_anon()) {
		_1514109b0_add_indent();
		_55113_obj+=jule::Str("{\n", 2);
		_55113_obj+=_1514109b0_indent();
		_55113_obj+=_1517eb830_gen_expr(_55020_r->_field_handler_expr);
		_55113_obj+=jule::Str("(jule::exception_to_error(e));", 30);
		if ((!(_55020_r->_field_scope_owner->_field_decl->_method_is_void()))) {
			_55113_obj+=jule::Str("\n", 1);
			_55113_obj+=_1514109b0_indent();
			_1514109b0_done_indent();
			_55113_obj+=_1517eb5a0_gen_ret_st_with_defaults(_55020_r->_field_scope_owner->_field_result);
		} else {
			_1514109b0_done_indent();
		}
		_55113_obj+=jule::Str("\n", 1);
		_55113_obj+=_1514109b0_indent();
		_55113_obj+=jule::Str("}", 1);
	} else {
		_55113_obj+=jule::Str("{\n", 2);
		_1514109b0_add_indent();
		_55113_obj+=_1514109b0_indent();
		_55113_obj+=_1517eb830_gen_expr(_55020_r->_field_handler_expr);
		_55113_obj+=jule::Str("(jule::exception_to_error(e));\n", 31);
		_55113_obj+=_1514109b0_indent();
		if (_55020_r->_field_scope_owner->_field_decl->_method_is_void()) {
			_1514109b0_done_indent();
			_55113_obj+=jule::Str(" }", 2);
		} else {
			_55113_obj+=_1517eb5a0_gen_ret_st_with_defaults(_55020_r->_field_scope_owner->_field_result);
			_55113_obj+=jule::Str("\n", 1);
			_1514109b0_done_indent();
			_55113_obj+=_1514109b0_indent();
			_55113_obj+=jule::Str("}", 1);
		}
	}
	return _55113_obj;
}



inline jule::Str _1517eb5a0_gen_data_expr(jule::Ref<_151290fd0_Data> _59922_d) {
	return _1517eb830_gen_expr(_59922_d->_field_model) + jule::Str(";", 1);
}



inline jule::Str _1517eb5a0_gen_st(jule::Any _60415_st) {
	{
		auto _match_expr{ _60415_st };
		if (!(_match_expr.type_is<jule::Ref<_150d29660_Scope>>())) { goto _case_end_5690651920; }
		_case_begin_5690651920:;
		{
			return _1517eb5a0_gen_scope(_60415_st.operator jule::Ref<_150d29660_Scope>());
		}
		goto _match_end_5690650416;
		_case_end_5690651920:;
		if (!(_match_expr.type_is<jule::Ref<_1511317d0_Var>>())) { goto _case_end_5690650912; }
		_case_begin_5690650912:;
		{
			return _1514109b0_gen_var(_60415_st.operator jule::Ref<_1511317d0_Var>());
		}
		goto _match_end_5690650416;
		_case_end_5690650912:;
		if (!(_match_expr.type_is<jule::Ref<_151290fd0_Data>>())) { goto _case_end_5690651024; }
		_case_begin_5690651024:;
		{
			return _1517eb5a0_gen_data_expr(_60415_st.operator jule::Ref<_151290fd0_Data>());
		}
		goto _match_end_5690650416;
		_case_end_5690651024:;
		if (!(_match_expr.type_is<jule::Ref<_150d29660_Conditional>>())) { goto _case_end_5690651136; }
		_case_begin_5690651136:;
		{
			return _1517eb5a0_gen_conditional(_60415_st.operator jule::Ref<_150d29660_Conditional>());
		}
		goto _match_end_5690650416;
		_case_end_5690651136:;
		if (!(_match_expr.type_is<jule::Ref<_150d29660_InfIter>>())) { goto _case_end_5690652192; }
		_case_begin_5690652192:;
		{
			return _1517eb5a0_gen_inf_iter(_60415_st.operator jule::Ref<_150d29660_InfIter>());
		}
		goto _match_end_5690650416;
		_case_end_5690652192:;
		if (!(_match_expr.type_is<jule::Ref<_150d29660_WhileIter>>())) { goto _case_end_5690652304; }
		_case_begin_5690652304:;
		{
			return _1517eb5a0_gen_while_iter(_60415_st.operator jule::Ref<_150d29660_WhileIter>());
		}
		goto _match_end_5690650416;
		_case_end_5690652304:;
		if (!(_match_expr.type_is<jule::Ref<_150d29660_RangeIter>>())) { goto _case_end_5690652416; }
		_case_begin_5690652416:;
		{
			return _1517eb5a0_gen_range_iter(_60415_st.operator jule::Ref<_150d29660_RangeIter>());
		}
		goto _match_end_5690650416;
		_case_end_5690652416:;
		if (!(_match_expr.type_is<jule::Ref<_150d29660_ContSt>>())) { goto _case_end_5690652528; }
		_case_begin_5690652528:;
		{
			return _1517eb5a0_gen_cont(_60415_st.operator jule::Ref<_150d29660_ContSt>());
		}
		goto _match_end_5690650416;
		_case_end_5690652528:;
		if (!(_match_expr.type_is<jule::Ref<_150d29660_Label>>())) { goto _case_end_5690652688; }
		_case_begin_5690652688:;
		{
			return _1517eb5a0_gen_label(_60415_st.operator jule::Ref<_150d29660_Label>());
		}
		goto _match_end_5690650416;
		_case_end_5690652688:;
		if (!(_match_expr.type_is<jule::Ref<_150d29660_GotoSt>>())) { goto _case_end_5690652800; }
		_case_begin_5690652800:;
		{
			return _1517eb5a0_gen_goto(_60415_st.operator jule::Ref<_150d29660_GotoSt>());
		}
		goto _match_end_5690650416;
		_case_end_5690652800:;
		if (!(_match_expr.type_is<jule::Ref<_150d29660_Postfix>>())) { goto _case_end_5690652912; }
		_case_begin_5690652912:;
		{
			return _1517eb5a0_gen_postfix(_60415_st.operator jule::Ref<_150d29660_Postfix>());
		}
		goto _match_end_5690650416;
		_case_end_5690652912:;
		if (!(_match_expr.type_is<jule::Ref<_150d29660_Assign>>())) { goto _case_end_5690653024; }
		_case_begin_5690653024:;
		{
			return _1517eb5a0_gen_assign(_60415_st.operator jule::Ref<_150d29660_Assign>());
		}
		goto _match_end_5690650416;
		_case_end_5690653024:;
		if (!(_match_expr.type_is<jule::Ref<_150d29660_MultiAssign>>())) { goto _case_end_5690653136; }
		_case_begin_5690653136:;
		{
			return _1517eb5a0_gen_multi_assign(_60415_st.operator jule::Ref<_150d29660_MultiAssign>());
		}
		goto _match_end_5690650416;
		_case_end_5690653136:;
		if (!(_match_expr.type_is<jule::Ref<_150d29660_Match>>())) { goto _case_end_5690653248; }
		_case_begin_5690653248:;
		{
			return _1517eb5a0_gen_match(_60415_st.operator jule::Ref<_150d29660_Match>());
		}
		goto _match_end_5690650416;
		_case_end_5690653248:;
		if (!(_match_expr.type_is<jule::Ref<_150d29660_FallSt>>())) { goto _case_end_5690653360; }
		_case_begin_5690653360:;
		{
			return _1517eb5a0_gen_fall_st(_60415_st.operator jule::Ref<_150d29660_FallSt>());
		}
		goto _match_end_5690650416;
		_case_end_5690653360:;
		if (!(_match_expr.type_is<jule::Ref<_150d29660_BreakSt>>())) { goto _case_end_5690653472; }
		_case_begin_5690653472:;
		{
			return _1517eb5a0_gen_break_st(_60415_st.operator jule::Ref<_150d29660_BreakSt>());
		}
		goto _match_end_5690650416;
		_case_end_5690653472:;
		if (!(_match_expr.type_is<jule::Ref<_150d29660_RetSt>>())) { goto _case_end_5690653584; }
		_case_begin_5690653584:;
		{
			return _1517eb5a0_gen_ret_st(_60415_st.operator jule::Ref<_150d29660_RetSt>());
		}
		goto _match_end_5690650416;
		_case_end_5690653584:;
		if (!(_match_expr.type_is<jule::Ref<_150d29660_Recover>>())) { goto _case_end_5690653696; }
		_case_begin_5690653696:;
		{
			return _1517eb5a0_gen_recover(_60415_st.operator jule::Ref<_150d29660_Recover>());
		}
		goto _match_end_5690650416;
		_case_end_5690653696:;
		_case_begin_5690650512:;
		{
			return jule::Str("<unimplemented_stmt>", 20);
		}
		goto _match_end_5690650416;
		_case_end_5690650512:;
		_match_end_5690650416:;
	}
}



inline jule::Str _1517eb5a0_gen_scope(jule::Ref<_150d29660_Scope> _62918_s) {
	jule::Str _63013_obj = jule::Str("{\n", 2);
	_1514109b0_add_indent();
	jule::Int _63313_i = 0LL;
	_iter_begin_5690682048:;
	if (!(_63313_i < _62918_s->_field_stmts._method_len())) { goto _iter_end_5690682048; }
	{
		jule::Any _63517_st = _62918_s->_field_stmts._method_at(_63313_i);
		_63013_obj+=_1514109b0_indent();
		_63013_obj+=_1517eb5a0_gen_st(_63517_st);
		_63013_obj+=jule::Str("\n", 1);
	}
	_iter_next_5690682048:;
	(_63313_i)++;
	goto _iter_begin_5690682048;
	_iter_end_5690682048:;
	_1514109b0_done_indent();
	_63013_obj+=_1514109b0_indent();
	_63013_obj+=jule::Str("}", 1);
	if (_62918_s->_field_deferred) {
		_63013_obj=(jule::Str("__JULE_DEFER(", 13) + _63013_obj) + jule::Str(");", 2);
	}
	return _63013_obj;
}



inline jule::Str _1517eb5a0_gen_fn_scope(jule::Ref<_15081bcd0_FnIns> _65321_f) {
	if (jule::real(_65321_f->_field_owner)) {
		return _1517eb5a0_gen_method_scope(_65321_f);
	}
	return _1517eb5a0_gen_scope(_65321_f->_field_scope);
}



inline jule::Str _1517eb5a0_gen_method_scope(jule::Ref<_15081bcd0_FnIns> _66225_f) {
	return _1517eb5a0_gen_scope(_66225_f->_field_scope);
}



inline jule::Str _1517eb830_concat_all_parts(jule::Slice<jule::Str> _7621_parts) {
	jule::Str _7713_s = jule::Str("", 0);
	{
		auto __julec_range_expr = _7621_parts;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _1517eb830_part = *__julec_range_begin;
			_iter_begin_5690694480:;
			{
				_7713_s+=_1517eb830_part;
			}
			_iter_next_5690694480:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1517eb830_part = *__julec_range_begin; goto _iter_begin_5690694480; }
			_iter_end_5690694480:;
		}
	}
	return _7713_s;
}



inline jule::Str _1517eb830_get_accessor(jule::Ref<_15177b070_TypeKind> _8421_t) {
	if (jule::real(_8421_t->_method_ref()) || jule::real(_8421_t->_method_ptr())) {
		return jule::Str("->", 2);
	}
	return jule::Str(".", 1);
}



inline jule::Str _1517eb830_decompose_common_esq(jule::U8 _9125_b) {
	{
		auto _match_expr{ _9125_b };
		if (!(('\\') == _match_expr)) { goto _case_end_5690699952; }
		_case_begin_5690699952:;
		{
			return jule::Str("\\\\", 2);
		}
		goto _match_end_5690698832;
		_case_end_5690699952:;
		if (!(('\'') == _match_expr)) { goto _case_end_5690700064; }
		_case_begin_5690700064:;
		{
			return jule::Str("'", 1);
		}
		goto _match_end_5690698832;
		_case_end_5690700064:;
		if (!(('\"') == _match_expr)) { goto _case_end_5690700944; }
		_case_begin_5690700944:;
		{
			return jule::Str("\\\"", 2);
		}
		goto _match_end_5690698832;
		_case_end_5690700944:;
		if (!(('\a') == _match_expr)) { goto _case_end_5690701056; }
		_case_begin_5690701056:;
		{
			return jule::Str("\\a", 2);
		}
		goto _match_end_5690698832;
		_case_end_5690701056:;
		if (!(('\b') == _match_expr)) { goto _case_end_5690701168; }
		_case_begin_5690701168:;
		{
			return jule::Str("\\b", 2);
		}
		goto _match_end_5690698832;
		_case_end_5690701168:;
		if (!(('\f') == _match_expr)) { goto _case_end_5690701280; }
		_case_begin_5690701280:;
		{
			return jule::Str("\\f", 2);
		}
		goto _match_end_5690698832;
		_case_end_5690701280:;
		if (!(('\n') == _match_expr)) { goto _case_end_5690700256; }
		_case_begin_5690700256:;
		{
			return jule::Str("\\n", 2);
		}
		goto _match_end_5690698832;
		_case_end_5690700256:;
		if (!(('\r') == _match_expr)) { goto _case_end_5690700368; }
		_case_begin_5690700368:;
		{
			return jule::Str("\\r", 2);
		}
		goto _match_end_5690698832;
		_case_end_5690700368:;
		if (!(('\t') == _match_expr)) { goto _case_end_5690700496; }
		_case_begin_5690700496:;
		{
			return jule::Str("\\t", 2);
		}
		goto _match_end_5690698832;
		_case_end_5690700496:;
		if (!(('\v') == _match_expr)) { goto _case_end_5690700624; }
		_case_begin_5690700624:;
		{
			return jule::Str("\\v", 2);
		}
		goto _match_end_5690698832;
		_case_end_5690700624:;
		_case_begin_5690699200:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_5690698832;
		_case_end_5690699200:;
		_match_end_5690698832:;
	}
}



inline jule::Str _1517eb830_sbtoa(jule::U8 _10710_b) {
	if (_10710_b == 0LL) {
		return jule::Str("\\x00", 4);
	}
	if (_10710_b <= 127LL) {
		jule::Str _11313_seq = _1517eb830_decompose_common_esq(_10710_b);
		if (_11313_seq != jule::Str("", 0)) {
			return _11313_seq;
		}
		if ((32LL <= _10710_b) && (_10710_b <= 126LL)) {
			return static_cast<jule::Str>(_10710_b);
		}
	}
	jule::Str _1239_seq = _1500241f0_fmt_uint(static_cast<jule::U64>(_10710_b),8LL);
	if (_1239_seq.len() == 2LL) {
		return jule::Str("\\0", 2) + _1239_seq;
	}
	return jule::Str("\\", 1) + _1239_seq;
}



inline jule::Str _1517eb830_get_str_model(jule::Ref<_15199b440_Const> _13018_c) {
	jule::Str _1319_content = _13018_c->_method_read_str();
	jule::Slice<jule::U8> _1329_bytes = static_cast<jule::Slice<jule::U8>>(_1319_content);
	jule::Str _1339_len = _1500241f0_fmt_int(static_cast<jule::I64>(_1329_bytes.len()),10LL);
	jule::Str _13513_lit = jule::Str("", 0);
	{
		auto __julec_range_expr = _1329_bytes;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::U8 _1517eb830_b = *__julec_range_begin;
			_iter_begin_5690720384:;
			{
				_13513_lit+=_1517eb830_sbtoa(_1517eb830_b);
			}
			_iter_next_5690720384:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1517eb830_b = *__julec_range_begin; goto _iter_begin_5690720384; }
			_iter_end_5690720384:;
		}
	}
	return ((((_151c17930_as_jt(jule::Str("str", 3)) + jule::Str("(\"", 2)) + _13513_lit) + jule::Str("\", ", 3)) + _1339_len) + jule::Str(")", 1);
}



inline jule::Str _1517eb830_get_bool_model(jule::Ref<_15199b440_Const> _14319_c) {
	if (_14319_c->_method_read_bool()) {
		return jule::Str("true", 4);
	}
	return jule::Str("false", 5);
}



inline jule::Str _1517eb830_get_nil_model(void) {
	return jule::Str("nullptr", 7);
}



inline jule::Str _1517eb830_gen_float_special_cases(jule::F64 _15228_x) {
	{
		if (!((_15022f040_is_nan(_15228_x)))) { goto _case_end_5690726544; }
		_case_begin_5690726544:;
		{
			return jule::Str("NAN", 3);
		}
		goto _match_end_5690726048;
		_case_end_5690726544:;
		if (!((_15022f040_is_inf(_15228_x,1LL)))) { goto _case_end_5690726656; }
		_case_begin_5690726656:;
		{
			return jule::Str("INFINITY", 8);
		}
		goto _match_end_5690726048;
		_case_end_5690726656:;
		if (!((_15022f040_is_inf(_15228_x,-1LL)))) { goto _case_end_5690726768; }
		_case_begin_5690726768:;
		{
			return jule::Str("-INFINITY", 9);
		}
		goto _match_end_5690726048;
		_case_end_5690726768:;
		_case_begin_5690726176:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_5690726048;
		_case_end_5690726176:;
		_match_end_5690726048:;
	}
}



inline jule::Str _1517eb830_ftoa(jule::F64 _1619_f,jule::Int _16117_bitsize) {
	if (_16117_bitsize != 32LL) {
		if (_1619_f == static_cast<jule::F64>(static_cast<jule::I64>(_1619_f))) {
			return _1517eb830_i64toa(static_cast<jule::I64>(_1619_f));
		}
		if (_1619_f == static_cast<jule::F64>(static_cast<jule::U64>(_1619_f))) {
			return _1517eb830_u64toa(static_cast<jule::U64>(_1619_f));
		}
	}
	jule::Str _17113_m = _147e3cfb0_fmt_float(_1619_f,'f',-1LL,_16117_bitsize);
	if (_17113_m.find(jule::Str(".", 1)) == -1LL) {
		_17113_m+=jule::Str(".0", 2);
	}
	return _17113_m;
}



inline jule::Str _1517eb830_get_f32_model(jule::Ref<_15199b440_Const> _17818_c) {
	jule::F64 _1799_x = _17818_c->_method_as_f64();
	jule::Str _1829_f = _1517eb830_gen_float_special_cases(_1799_x);
	if (_1829_f != jule::Str("", 0)) {
		return _1829_f;
	}
	{
		if (!((_1799_x == 340282346638528860000000000000000000000.0))) { goto _case_end_5690743568; }
		_case_begin_5690743568:;
		{
			return jule::Str("jule::MAX_F32", 13);
		}
		goto _match_end_5690742336;
		_case_end_5690743568:;
		if (!((_1799_x == -340282346638528860000000000000000000000.0))) { goto _case_end_5690743680; }
		_case_begin_5690743680:;
		{
			return jule::Str("jule::MIN_F32", 13);
		}
		goto _match_end_5690742336;
		_case_end_5690743680:;
		_match_end_5690742336:;
	}
	return _1517eb830_ftoa(_1799_x,32LL) + jule::Str("f", 1);
}



inline jule::Str _1517eb830_get_f64_model(jule::Ref<_15199b440_Const> _19518_c) {
	jule::F64 _1969_x = _19518_c->_method_as_f64();
	jule::Str _1999_f = _1517eb830_gen_float_special_cases(_1969_x);
	if (_1999_f != jule::Str("", 0)) {
		return _1999_f;
	}
	{
		if (!((_1969_x == jule::MAX_F64))) { goto _case_end_5690750256; }
		_case_begin_5690750256:;
		{
			return jule::Str("jule::MAX_F64", 13);
		}
		goto _match_end_5690749024;
		_case_end_5690750256:;
		if (!((_1969_x == jule::MIN_F64))) { goto _case_end_5690750368; }
		_case_begin_5690750368:;
		{
			return jule::Str("jule::MIN_F64", 13);
		}
		goto _match_end_5690749024;
		_case_end_5690750368:;
		_match_end_5690749024:;
	}
	return _1517eb830_ftoa(_1969_x,64LL);
}



inline jule::Str _1517eb830_get_float_model(jule::Ref<_151290fd0_Data> _21224_d) {
	{
		if (!((_21224_d->_field_kind->_method_prim()->_method_is_f32()))) { goto _case_end_5690754240; }
		_case_begin_5690754240:;
		{
			return _1517eb830_get_f32_model(_21224_d->_field_constant);
		}
		goto _match_end_5690752672;
		_case_end_5690754240:;
		_case_begin_5690752896:;
		{
			return _1517eb830_get_f64_model(_21224_d->_field_constant);
		}
		goto _match_end_5690752672;
		_case_end_5690752896:;
		_match_end_5690752672:;
	}
}



inline jule::Str _1517eb830_i64toa(jule::I64 _21911_x) {
	{
		if (!((_21911_x == jule::MAX_I64))) { goto _case_end_5690755712; }
		_case_begin_5690755712:;
		{
			return jule::Str("jule::MAX_I64", 13);
		}
		goto _match_end_5690753024;
		_case_end_5690755712:;
		if (!((_21911_x == jule::MIN_I64))) { goto _case_end_5690755824; }
		_case_begin_5690755824:;
		{
			return jule::Str("jule::MIN_I64", 13);
		}
		goto _match_end_5690753024;
		_case_end_5690755824:;
		_match_end_5690753024:;
	}
	jule::Str _2259_fmt = _1500241f0_fmt_int(_21911_x,10LL);
	if (_157eacb90_is_64bit(jule::Str("amd64", 5))) {
		return _2259_fmt + jule::Str("LL", 2);
	}
	return _2259_fmt + jule::Str("L", 1);
}



inline jule::Str _1517eb830_get_i64_model(jule::Ref<_15199b440_Const> _23218_c) {
	return _1517eb830_i64toa(static_cast<jule::I64>(_23218_c->_method_read_i64()));
}



inline jule::Str _1517eb830_u64toa(jule::U64 _23611_x) {
	{
		if (!((_23611_x == jule::MAX_U64))) { goto _case_end_5690763776; }
		_case_begin_5690763776:;
		{
			return jule::Str("jule::MAX_U64", 13);
		}
		goto _match_end_5690763648;
		_case_end_5690763776:;
		_match_end_5690763648:;
	}
	jule::Str _2429_fmt = _1500241f0_fmt_uint(_23611_x,10LL);
	if (_157eacb90_is_64bit(jule::Str("amd64", 5))) {
		return _2429_fmt + jule::Str("LLU", 3);
	}
	return _2429_fmt + jule::Str("LU", 2);
}



inline jule::Str _1517eb830_get_u64_model(jule::Ref<_15199b440_Const> _24918_c) {
	return _1517eb830_u64toa(static_cast<jule::U64>(_24918_c->_method_read_u64()));
}



inline jule::Str _1517eb830_gen_const_expr(jule::Ref<_151290fd0_Data> _25323_d) {
	{
		if (!((_25323_d->_field_constant->_method_is_str()))) { goto _case_end_5690770432; }
		_case_begin_5690770432:;
		{
			return _1517eb830_get_str_model(_25323_d->_field_constant);
		}
		goto _match_end_5690769920;
		_case_end_5690770432:;
		if (!((_25323_d->_field_constant->_method_is_bool()))) { goto _case_end_5690770544; }
		_case_begin_5690770544:;
		{
			return _1517eb830_get_bool_model(_25323_d->_field_constant);
		}
		goto _match_end_5690769920;
		_case_end_5690770544:;
		if (!((_25323_d->_field_constant->_method_is_f64()))) { goto _case_end_5690771712; }
		_case_begin_5690771712:;
		{
			return _1517eb830_get_float_model(_25323_d);
		}
		goto _match_end_5690769920;
		_case_end_5690771712:;
		if (!((_25323_d->_field_constant->_method_is_i64()))) { goto _case_end_5690771824; }
		_case_begin_5690771824:;
		{
			return _1517eb830_get_i64_model(_25323_d->_field_constant);
		}
		goto _match_end_5690769920;
		_case_end_5690771824:;
		if (!((_25323_d->_field_constant->_method_is_u64()))) { goto _case_end_5690771936; }
		_case_begin_5690771936:;
		{
			return _1517eb830_get_u64_model(_25323_d->_field_constant);
		}
		goto _match_end_5690769920;
		_case_end_5690771936:;
		if (!((_25323_d->_field_constant->_method_is_nil()))) { goto _case_end_5690772048; }
		_case_begin_5690772048:;
		{
			return _1517eb830_get_nil_model();
		}
		goto _match_end_5690769920;
		_case_end_5690772048:;
		_case_begin_5690770016:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_5690769920;
		_case_end_5690770016:;
		_match_end_5690769920:;
	}
}



inline jule::Str _1517eb830_gen_const_expr_model(jule::Ref<_15199b440_Const> _26525_m) {
	{
		if (!((_26525_m->_method_is_str()))) { goto _case_end_5690782320; }
		_case_begin_5690782320:;
		{
			return _1517eb830_get_str_model(_26525_m);
		}
		goto _match_end_5690781168;
		_case_end_5690782320:;
		if (!((_26525_m->_method_is_bool()))) { goto _case_end_5690782432; }
		_case_begin_5690782432:;
		{
			return _1517eb830_get_bool_model(_26525_m);
		}
		goto _match_end_5690781168;
		_case_end_5690782432:;
		if (!((_26525_m->_method_is_f64()))) { goto _case_end_5690783520; }
		_case_begin_5690783520:;
		{
			return _1517eb830_get_f64_model(_26525_m);
		}
		goto _match_end_5690781168;
		_case_end_5690783520:;
		if (!((_26525_m->_method_is_i64()))) { goto _case_end_5690783632; }
		_case_begin_5690783632:;
		{
			return _1517eb830_get_i64_model(_26525_m);
		}
		goto _match_end_5690781168;
		_case_end_5690783632:;
		if (!((_26525_m->_method_is_u64()))) { goto _case_end_5690783744; }
		_case_begin_5690783744:;
		{
			return _1517eb830_get_u64_model(_26525_m);
		}
		goto _match_end_5690781168;
		_case_end_5690783744:;
		if (!((_26525_m->_method_is_nil()))) { goto _case_end_5690783856; }
		_case_begin_5690783856:;
		{
			return _1517eb830_get_nil_model();
		}
		goto _match_end_5690781168;
		_case_end_5690783856:;
		_case_begin_5690779696:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_5690781168;
		_case_end_5690779696:;
		_match_end_5690781168:;
	}
}



inline jule::Str _1517eb830_gen_binop_expr_model(jule::Ref<_150f25dd0_BinopExprModel> _27729_m) {
	{
		auto _match_expr{ _27729_m->_field_op };
		if (!((jule::Str("/", 1)) == _match_expr)) { goto _case_end_5690794496; }
		_case_begin_5690794496:;
		{
			jule::Str _28017_obj = jule::Str("jule::div(", 10);
			_28017_obj+=_1517eb830_gen_expr(_27729_m->_field_left);
			_28017_obj+=jule::Str(",", 1);
			_28017_obj+=_1517eb830_gen_expr(_27729_m->_field_right);
			_28017_obj+=jule::Str(")", 1);
			return _28017_obj;
		}
		goto _match_end_5690788512;
		_case_end_5690794496:;
		if (!((jule::Str("%", 1)) == _match_expr)) { goto _case_end_5690794064; }
		_case_begin_5690794064:;
		{
			jule::Str _28817_obj = jule::Str("jule::mod(", 10);
			_28817_obj+=_1517eb830_gen_expr(_27729_m->_field_left);
			_28817_obj+=jule::Str(",", 1);
			_28817_obj+=_1517eb830_gen_expr(_27729_m->_field_right);
			_28817_obj+=jule::Str(")", 1);
			return _28817_obj;
		}
		goto _match_end_5690788512;
		_case_end_5690794064:;
		_case_begin_5690790288:;
		{
			jule::Str _29617_obj = jule::Str("(", 1);
			_29617_obj+=_1517eb830_gen_expr_model(_27729_m->_field_left);
			_29617_obj+=jule::Str(" ", 1);
			_29617_obj+=_27729_m->_field_op;
			_29617_obj+=jule::Str(" ", 1);
			_29617_obj+=_1517eb830_gen_expr_model(_27729_m->_field_right);
			_29617_obj+=jule::Str(")", 1);
			return _29617_obj;
		}
		goto _match_end_5690788512;
		_case_end_5690790288:;
		_match_end_5690788512:;
	}
}



inline jule::Str _1517eb830_gen_var_expr_model(jule::Ref<_1511317d0_Var> _30727_m) {
	if (_30727_m->_field_cpp_linked) {
		jule::Ref<_1506406d0_Directive> _30913_d = _151c417b0_find_directive(_30727_m->_field_directives,jule::Str("namespace", 9));
		if (jule::real(_30913_d)) {
			return (_1517eb830_concat_all_parts(_30913_d->_field_args) + jule::Str("::", 2)) + _151c17930_var_out_ident(_30727_m);
		}
	}
	return _151c17930_var_out_ident(_30727_m);
}



inline jule::Str _1517eb830_gen_struct_expr_model(jule::Ref<_150a13110_Struct> _31726_m) {
	return _151c417b0_gen_struct_kind(_31726_m);
}



inline jule::Str _1517eb830_gen_struct_ins_expr_model(jule::Ref<_150a13110_StructIns> _32134_m) {
	return _151c417b0_gen_struct_kind_ins(_32134_m);
}



inline jule::Str _1517eb830_gen_unary_expr_model(jule::Ref<_150f25dd0_UnaryExprModel> _32529_m) {
	{
		auto _match_expr{ _32529_m->_field_op };
		if (!((jule::Str("^", 1)) == _match_expr)) { goto _case_end_5690811984; }
		_case_begin_5690811984:;
		{
			return (jule::Str("(~(", 3) + _1517eb830_gen_expr(_32529_m->_field_expr)) + jule::Str("))", 2);
		}
		goto _match_end_5690808688;
		_case_end_5690811984:;
		_case_begin_5690808976:;
		{
			return (((jule::Str("(", 1) + _32529_m->_field_op) + jule::Str("(", 1)) + _1517eb830_gen_expr(_32529_m->_field_expr)) + jule::Str("))", 2);
		}
		goto _match_end_5690808688;
		_case_end_5690808976:;
		_match_end_5690808688:;
	}
}



inline jule::Str _1517eb830_gen_get_ref_ptr_expr_model(jule::Ref<_150f25dd0_GetRefPtrExprModel> _33235_m) {
	return (jule::Str("(", 1) + _1517eb830_gen_expr(_33235_m->_field_expr)) + jule::Str(").alloc", 7);
}



inline jule::Str _1517eb830_gen_cpp_struct_lit_expr_model(jule::Ref<_150f25dd0_StructLitExprModel> _33638_m) {
	jule::Str _33713_obj = jule::Str("(", 1) + _151c417b0_gen_struct_kind_ins(_33638_m->_field_strct);
	_33713_obj+=jule::Str("){", 2);
	if (_33638_m->_field_args.len() > 0LL) {
		_julec_label_iter:;
		{
			auto __julec_range_expr = _33638_m->_field_strct->_field_fields;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_150a13110_FieldIns> _1517eb830_f = *__julec_range_begin;
				_iter_begin_5690818560:;
				{
					if (_33638_m->_field_strct->_field_decl->_field_cpp_linked) {
						{
							auto __julec_range_expr = _33638_m->_field_args;
							if (__julec_range_expr.begin() != __julec_range_expr.end()) {
								auto __julec_range_begin = __julec_range_expr.begin();
								const auto __julec_range_end = __julec_range_expr.end();
								jule::Ref<_150f25dd0_StructArgExprModel> _1517eb830_arg = *__julec_range_begin;
								_iter_begin_5690821376:;
								{
									if (_1517eb830_arg->_field_field == _1517eb830_f) {
										_33713_obj+=jule::Str(".", 1);
										_33713_obj+=_151c17930_field_out_ident(_1517eb830_f->_field_decl);
										_33713_obj+=jule::Str("=", 1);
										_33713_obj+=_1517eb830_gen_expr(_1517eb830_arg->_field_expr) + jule::Str(",", 1);
										goto _iter_next_5690818560;
									}
								}
								_iter_next_5690821376:;
								++__julec_range_begin;
								if (__julec_range_begin != __julec_range_end) { _1517eb830_arg = *__julec_range_begin; goto _iter_begin_5690821376; }
								_iter_end_5690821376:;
							}
						}
						goto _iter_next_5690818560;
					}
					_33713_obj+=_151c17930_field_out_ident(_1517eb830_f->_field_decl) + jule::Str(": ", 2);
					{
						auto __julec_range_expr = _33638_m->_field_args;
						if (__julec_range_expr.begin() != __julec_range_expr.end()) {
							auto __julec_range_begin = __julec_range_expr.begin();
							const auto __julec_range_end = __julec_range_expr.end();
							jule::Ref<_150f25dd0_StructArgExprModel> _1517eb830_arg = *__julec_range_begin;
							_iter_begin_5690820224:;
							{
								if (_1517eb830_arg->_field_field == _1517eb830_f) {
									_33713_obj+=_1517eb830_gen_expr(_1517eb830_arg->_field_expr) + jule::Str(",", 1);
									goto _iter_next_5690818560;
								}
							}
							_iter_next_5690820224:;
							++__julec_range_begin;
							if (__julec_range_begin != __julec_range_end) { _1517eb830_arg = *__julec_range_begin; goto _iter_begin_5690820224; }
							_iter_end_5690820224:;
						}
					}
					_33713_obj+=_1517eb830_get_init_expr(_1517eb830_f->_field_kind) + jule::Str(",", 1);
				}
				_iter_next_5690818560:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _1517eb830_f = *__julec_range_begin; goto _iter_begin_5690818560; }
				_iter_end_5690818560:;
			}
		}
		_33713_obj=_33713_obj.slice(0LL,static_cast<jule::Int>(_33713_obj.len() - 1LL));
	}
	_33713_obj+=jule::Str("}", 1);
	return _33713_obj;
}



inline jule::Str _1517eb830_gen_struct_lit_expr_model(jule::Ref<_150f25dd0_StructLitExprModel> _37034_m) {
	if (_37034_m->_field_strct->_field_decl->_field_cpp_linked) {
		return _1517eb830_gen_cpp_struct_lit_expr_model(_37034_m);
	}
	jule::Str _37513_obj = _151c17930_struct_ins_out_ident(_37034_m->_field_strct);
	_37513_obj+=jule::Str("(", 1);
	if (_37034_m->_field_args.len() > 0LL) {
		_julec_label_iter:;
		{
			auto __julec_range_expr = _37034_m->_field_strct->_field_fields;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_150a13110_FieldIns> _1517eb830_f = *__julec_range_begin;
				_iter_begin_5690838768:;
				{
					{
						auto __julec_range_expr = _37034_m->_field_args;
						if (__julec_range_expr.begin() != __julec_range_expr.end()) {
							auto __julec_range_begin = __julec_range_expr.begin();
							const auto __julec_range_end = __julec_range_expr.end();
							jule::Ref<_150f25dd0_StructArgExprModel> _1517eb830_arg = *__julec_range_begin;
							_iter_begin_5690840656:;
							{
								if (_1517eb830_arg->_field_field == _1517eb830_f) {
									_37513_obj+=_1517eb830_gen_expr(_1517eb830_arg->_field_expr) + jule::Str(",", 1);
									goto _iter_next_5690838768;
								}
							}
							_iter_next_5690840656:;
							++__julec_range_begin;
							if (__julec_range_begin != __julec_range_end) { _1517eb830_arg = *__julec_range_begin; goto _iter_begin_5690840656; }
							_iter_end_5690840656:;
						}
					}
					_37513_obj+=_1517eb830_get_init_expr(_1517eb830_f->_field_kind) + jule::Str(",", 1);
				}
				_iter_next_5690838768:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _1517eb830_f = *__julec_range_begin; goto _iter_begin_5690838768; }
				_iter_end_5690838768:;
			}
		}
		_37513_obj=_37513_obj.slice(0LL,static_cast<jule::Int>(_37513_obj.len() - 1LL));
	}
	_37513_obj+=jule::Str(")", 1);
	return _37513_obj;
}



inline jule::Str _1517eb830_gen_alloc_struct_lit_expr_model(jule::Ref<_150f25dd0_AllocStructLitExprModel> _39440_m) {
	jule::Str _39513_obj = jule::Str("jule::new_struct<", 17);
	_39513_obj+=_151c17930_struct_out_ident(_39440_m->_field_lit->_field_strct->_field_decl);
	_39513_obj+=jule::Str(">(new( std::nothrow ) ", 22);
	_39513_obj+=_1517eb830_gen_struct_lit_expr_model(_39440_m->_field_lit);
	_39513_obj+=jule::Str(")", 1);
	return _39513_obj;
}



inline jule::Str _1517eb830_gen_casting_expr_model(jule::Ref<_150f25dd0_CastingExprModel> _40331_m) {
	jule::Str _40413_obj = jule::Str("", 0);
	{
		if (!((jule::real(_40331_m->_field_kind->_method_prim()) && _40331_m->_field_kind->_method_prim()->_method_is_any()))) { goto _case_end_5690853488; }
		_case_begin_5690853488:;
		{
			_40413_obj+=_151c417b0_gen_type_kind(_40331_m->_field_kind);
			_40413_obj+=jule::Str("(", 1);
			_40413_obj+=_1517eb830_gen_expr_model(_40331_m->_field_expr);
			_40413_obj+=jule::Str(")", 1);
		}
		goto _match_end_5690852480;
		_case_end_5690853488:;
		if (!((jule::real(_40331_m->_field_expr_kind->_method_ptr())) || (jule::real(_40331_m->_field_kind->_method_ptr())))) { goto _case_end_5690855968; }
		_case_begin_5690855968:;
		{
			_40413_obj+=jule::Str("((", 2);
			_40413_obj+=_151c417b0_gen_type_kind(_40331_m->_field_kind);
			_40413_obj+=jule::Str(")(", 2);
			_40413_obj+=_1517eb830_gen_expr(_40331_m->_field_expr);
			_40413_obj+=jule::Str("))", 2);
		}
		goto _match_end_5690852480;
		_case_end_5690855968:;
		if (!((jule::real(_40331_m->_field_expr_kind->_method_trt())) || (jule::real(_40331_m->_field_expr_kind->_method_prim()) && _40331_m->_field_expr_kind->_method_prim()->_method_is_any()))) { goto _case_end_5690856288; }
		_case_begin_5690856288:;
		{
			_40413_obj+=_1517eb830_gen_expr_model(_40331_m->_field_expr);
			_40413_obj+=_1517eb830_get_accessor(_40331_m->_field_expr_kind);
			_40413_obj+=jule::Str("operator ", 9);
			_40413_obj+=_151c417b0_gen_type_kind(_40331_m->_field_kind);
			_40413_obj+=jule::Str("()", 2);
		}
		goto _match_end_5690852480;
		_case_end_5690856288:;
		_case_begin_5690852672:;
		{
			_40413_obj+=jule::Str("static_cast<", 12);
			_40413_obj+=_151c417b0_gen_type_kind(_40331_m->_field_kind);
			_40413_obj+=jule::Str(">(", 2);
			_40413_obj+=_1517eb830_gen_expr(_40331_m->_field_expr);
			_40413_obj+=jule::Str(")", 1);
		}
		goto _match_end_5690852480;
		_case_end_5690852672:;
		_match_end_5690852480:;
	}
	return _40413_obj;
}



inline jule::Str _1517eb830_gen_arg_expr_models(jule::Slice<jule::Any> _43828_models) {
	if (_43828_models.len() == 0LL) {
		return jule::Str("", 0);
	}
	jule::Str _44313_obj = jule::Str("", 0);
	{
		auto __julec_range_expr = _43828_models;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Any _1517eb830_m = *__julec_range_begin;
			_iter_begin_5690870320:;
			{
				_44313_obj+=_1517eb830_gen_expr(_1517eb830_m) + jule::Str(",", 1);
			}
			_iter_next_5690870320:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1517eb830_m = *__julec_range_begin; goto _iter_begin_5690870320; }
			_iter_end_5690870320:;
		}
	}
	_44313_obj=_44313_obj.slice(0LL,static_cast<jule::Int>(_44313_obj.len() - 1LL));
	return _44313_obj;
}



inline jule::Str _1517eb830_gen_fn_call_expr_model(jule::Ref<_150f25dd0_FnCallExprModel> _45131_m) {
	jule::Str _45213_obj = _1517eb830_gen_expr_model(_45131_m->_field_expr);
	if ((!(_45131_m->_field_func->_method_is_builtin()))) {
		if (_45131_m->_field_func->_field_decl->_field_cpp_linked && (_45131_m->_field_func->_field_generics.len() > 0LL)) {
			if ((!(_151c417b0_has_directive(_45131_m->_field_func->_field_decl->_field_directives,jule::Str("cdef", 4))))) {
				_45213_obj+=jule::Str("<", 1);
				{
					auto __julec_range_expr = _45131_m->_field_func->_field_generics;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Ref<_15177b070_TypeKind> _1517eb830_g = *__julec_range_begin;
						_iter_begin_5690879040:;
						{
							_45213_obj+=_151c417b0_gen_type_kind(_1517eb830_g) + jule::Str(",", 1);
						}
						_iter_next_5690879040:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { _1517eb830_g = *__julec_range_begin; goto _iter_begin_5690879040; }
						_iter_end_5690879040:;
					}
				}
				_45213_obj=_45213_obj.slice(0LL,static_cast<jule::Int>(_45213_obj.len() - 1LL));
				_45213_obj+=jule::Str(">", 1);
			}
		}
	}
	_45213_obj+=jule::Str("(", 1);
	_45213_obj+=_1517eb830_gen_arg_expr_models(_45131_m->_field_args);
	_45213_obj+=jule::Str(")", 1);
	if (_45131_m->_field_is_co) {
		_45213_obj=(jule::Str("__JULE_CO(", 10) + _45213_obj) + jule::Str(")", 1);
	}
	return _45213_obj;
}



inline jule::Str _1517eb830_gen_slice_expr_model(jule::Ref<_150f25dd0_SliceExprModel> _47629_m) {
	jule::Str _47713_obj = _151c417b0_as_slice_kind(_47629_m->_field_elem_kind);
	_47713_obj+=jule::Str("({", 2);
	_47713_obj+=_1517eb830_gen_arg_expr_models(_47629_m->_field_elems);
	_47713_obj+=jule::Str("})", 2);
	return _47713_obj;
}



inline jule::Str _1517eb830_gen_indexing_expr_model(jule::Ref<_150f25dd0_IndexigExprModel> _48432_m) {
	jule::Str _48513_obj = _1517eb830_gen_expr_model(_48432_m->_field_expr);
	_48513_obj+=jule::Str("[", 1);
	_48513_obj+=_1517eb830_gen_expr(_48432_m->_field_index);
	_48513_obj+=jule::Str("]", 1);
	return _48513_obj;
}



inline jule::Str _1517eb830_gen_anon_fn_expr_model(jule::Ref<_150f25dd0_AnonFnExprModel> _49231_m) {
	jule::Str _49313_obj = _151c417b0_gen_fn_kind(_49231_m->_field_func);
	_49313_obj+=jule::Str("([=]", 4);
	_49313_obj+=_1514109b0_gen_params_ins(_49231_m->_field_func->_field_params);
	_49313_obj+=jule::Str(" mutable -> ", 12);
	_49313_obj+=_1514109b0_gen_fn_ins_result(_49231_m->_field_func);
	_49313_obj+=jule::Str(" ", 1);
	_49313_obj+=_1517eb5a0_gen_fn_scope(_49231_m->_field_func);
	_49313_obj+=jule::Str(")", 1);
	return _49313_obj;
}



inline jule::Str _1517eb830_gen_map_expr_model(jule::Ref<_150f25dd0_MapExprModel> _50927_m) {
	jule::Str _51013_obj = _151c17930_as_jt(jule::Str("map", 3));
	_51013_obj+=jule::Str("<", 1);
	_51013_obj+=_151c417b0_gen_type_kind(_50927_m->_field_key_kind);
	_51013_obj+=jule::Str(",", 1);
	_51013_obj+=_151c417b0_gen_type_kind(_50927_m->_field_val_kind);
	_51013_obj+=jule::Str(">({", 3);
	if (_50927_m->_field_entries.len() > 0LL) {
		{
			auto __julec_range_expr = _50927_m->_field_entries;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_150f25dd0_KeyValPairExprModel> _1517eb830_pair = *__julec_range_begin;
				_iter_begin_5690903120:;
				{
					jule::Str _51821_pair_obj = jule::Str("{", 1);
					_51821_pair_obj+=_1517eb830_gen_expr(_1517eb830_pair->_field_key);
					_51821_pair_obj+=jule::Str(",", 1);
					_51821_pair_obj+=_1517eb830_gen_expr(_1517eb830_pair->_field_val);
					_51821_pair_obj+=jule::Str("}", 1);
					_51013_obj+=_51821_pair_obj;
					_51013_obj+=jule::Str(",", 1);
				}
				_iter_next_5690903120:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _1517eb830_pair = *__julec_range_begin; goto _iter_begin_5690903120; }
				_iter_end_5690903120:;
			}
		}
		_51013_obj=_51013_obj.slice(0LL,static_cast<jule::Int>(_51013_obj.len() - 1LL));
	}
	_51013_obj+=jule::Str("})", 2);
	return _51013_obj;
}



inline jule::Str _1517eb830_gen_slicing_expr_model(jule::Ref<_150f25dd0_SlicingExprModel> _53231_m) {
	jule::Str _53313_obj = _1517eb830_gen_expr_model(_53231_m->_field_expr);
	_53313_obj+=jule::Str(".slice(", 7);
	_53313_obj+=_1517eb830_gen_expr(_53231_m->_field_left);
	if (_53231_m->_field_right != nullptr) {
		_53313_obj+=jule::Str(",", 1);
		_53313_obj+=_1517eb830_gen_expr(_53231_m->_field_right);
	}
	_53313_obj+=jule::Str(")", 1);
	return _53313_obj;
}



inline jule::Str _1517eb830_gen_trait_sub_ident_expr_model(jule::Ref<_150f25dd0_TraitSubIdentExprModel> _54439_m) {
	jule::Str _54513_obj = _1517eb830_gen_expr_model(_54439_m->_field_expr);
	_54513_obj+=jule::Str(".get()._method_", 15);
	_54513_obj+=_54439_m->_field_ident;
	return _54513_obj;
}



inline jule::Str _1517eb830_gen_struct_sub_ident_expr_model(jule::Ref<_150f25dd0_StructSubIdentExprModel> _55140_m) {
	jule::Str _55213_obj = _1517eb830_gen_expr_model(_55140_m->_field_expr);
	_55213_obj+=_1517eb830_get_accessor(_55140_m->_field_expr_kind);
	if (jule::real(_55140_m->_field_field)) {
		_55213_obj+=_151c17930_field_out_ident(_55140_m->_field_field->_field_decl);
	} else {
		_55213_obj+=_151c17930_fn_ins_out_ident(_55140_m->_field_method);
	}
	return _55213_obj;
}



inline jule::Str _1517eb830_gen_common_ident_expr_model(jule::Ref<_150f25dd0_CommonIdentExprModel> _56232_m) {
	return _56232_m->_field_ident;
}



inline jule::Str _1517eb830_gen_common_sub_ident_expr_model(jule::Ref<_150f25dd0_CommonSubIdentExprModel> _56640_m) {
	jule::Str _56713_obj = _1517eb830_gen_expr_model(_56640_m->_field_expr);
	_56713_obj+=_1517eb830_get_accessor(_56640_m->_field_expr_kind);
	_56713_obj+=_56640_m->_field_ident;
	return _56713_obj;
}



inline jule::Str _1517eb830_gen_array_expr_model(jule::Ref<_150f25dd0_ArrayExprModel> _57329_m) {
	jule::Str _57413_obj = _151c417b0_gen_array_kind(_57329_m->_field_kind);
	_57413_obj+=jule::Str("({", 2);
	_57413_obj+=_1517eb830_gen_arg_expr_models(_57329_m->_field_elems);
	_57413_obj+=jule::Str("})", 2);
	return _57413_obj;
}



inline jule::Str _1517eb830_gen_fn_ins_expr_model(jule::Ref<_15081bcd0_FnIns> _58130_m) {
	if (jule::real(_58130_m->_field_decl) && _58130_m->_field_decl->_field_cpp_linked) {
		jule::Ref<_1506406d0_Directive> _58313_d = _151c417b0_find_directive(_58130_m->_field_decl->_field_directives,jule::Str("namespace", 9));
		if (jule::real(_58313_d)) {
			return (_1517eb830_concat_all_parts(_58313_d->_field_args) + jule::Str("::", 2)) + _151c17930_fn_ins_out_ident(_58130_m);
		}
	}
	return _151c17930_fn_ins_out_ident(_58130_m);
}



inline jule::Str _1517eb830_gen_tuple_expr_model(jule::Ref<_150f25dd0_TupleExprModel> _59129_m) {
	jule::Str _59213_obj = jule::Str("std::make_tuple(", 16);
	{
		auto __julec_range_expr = _59129_m->_field_datas;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_151290fd0_Data> _1517eb830_d = *__julec_range_begin;
			_iter_begin_5690936576:;
			{
				_59213_obj+=_1517eb830_gen_expr(_1517eb830_d->_field_model) + jule::Str(",", 1);
			}
			_iter_next_5690936576:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1517eb830_d = *__julec_range_begin; goto _iter_begin_5690936576; }
			_iter_end_5690936576:;
		}
	}
	_59213_obj=_59213_obj.slice(0LL,static_cast<jule::Int>(_59213_obj.len() - 1LL));
	_59213_obj+=jule::Str(")", 1);
	return _59213_obj;
}



inline jule::Str _1517eb830_gen_builtin_new_call_expr_model(jule::Ref<_150f25dd0_BuiltinNewCallExprModel> _60140_m) {
	jule::Str _60213_obj = jule::Str("jule::new_ref<", 14);
	_60213_obj+=_151c417b0_gen_type_kind(_60140_m->_field_kind);
	_60213_obj+=jule::Str(">(", 2);
	if (_60140_m->_field_init != nullptr) {
		_60213_obj+=_1517eb830_gen_expr(_60140_m->_field_init);
	}
	_60213_obj+=jule::Str(")", 1);
	return _60213_obj;
}



inline jule::Str _1517eb830_gen_builtin_out_call_expr_model(jule::Ref<_150f25dd0_BuiltinOutCallExprModel> _61240_m) {
	jule::Str _61313_obj = jule::Str("jule::out(", 10);
	_61313_obj+=_1517eb830_gen_expr(_61240_m->_field_expr);
	_61313_obj+=jule::Str(")", 1);
	return _61313_obj;
}



inline jule::Str _1517eb830_gen_builtin_outln_call_expr_model(jule::Ref<_150f25dd0_BuiltinOutlnCallExprModel> _61942_m) {
	jule::Str _62013_obj = jule::Str("jule::outln(", 12);
	_62013_obj+=_1517eb830_gen_expr(_61942_m->_field_expr);
	_62013_obj+=jule::Str(")", 1);
	return _62013_obj;
}



inline jule::Str _1517eb830_gen_builtin_real_call_expr_model(jule::Ref<_150f25dd0_BuiltinRealCallExprModel> _62641_m) {
	jule::Str _62713_obj = jule::Str("jule::real(", 11);
	_62713_obj+=_1517eb830_gen_expr(_62641_m->_field_expr);
	_62713_obj+=jule::Str(")", 1);
	return _62713_obj;
}



inline jule::Str _1517eb830_gen_builtin_drop_call_expr_model(jule::Ref<_150f25dd0_BuiltinDropCallExprModel> _63341_m) {
	jule::Str _63413_obj = jule::Str("jule::drop(", 11);
	_63413_obj+=_1517eb830_gen_expr(_63341_m->_field_expr);
	_63413_obj+=jule::Str(")", 1);
	return _63413_obj;
}



inline jule::Str _1517eb830_gen_builtin_panic_call_expr_model(jule::Ref<_150f25dd0_BuiltinPanicCallExprModel> _64042_m) {
	jule::Str _64113_obj = jule::Str("jule::panic(", 12);
	_64113_obj+=_1517eb830_gen_expr(_64042_m->_field_expr);
	_64113_obj+=jule::Str(")", 1);
	return _64113_obj;
}



inline jule::Str _1517eb830_gen_builtin_make_call_expr_model(jule::Ref<_150f25dd0_BuiltinMakeCallExprModel> _64741_m) {
	jule::Str _64813_obj = jule::Str("", 0);
	if (_64741_m->_field_len != nullptr) {
		_64813_obj+=_1517eb830_gen_expr(_64741_m->_field_len);
	} else {
		_64813_obj+=jule::Str("0", 1);
	}
	if (_64741_m->_field_cap != nullptr) {
		_64813_obj+=jule::Str(",", 1) + _1517eb830_gen_expr(_64741_m->_field_cap);
	}
	if (jule::real(_64741_m->_field_kind->_method_slc()->_field_elem->_method_enm())) {
		_64813_obj+=jule::Str(",", 1);
		_64813_obj+=_1517eb830_get_init_expr(_64741_m->_field_kind->_method_slc()->_field_elem);
		if (_64741_m->_field_cap != nullptr) {
			_64813_obj=(_151c417b0_gen_type_kind(_64741_m->_field_kind) + jule::Str("::alloc(", 8)) + _64813_obj;
		} else {
			_64813_obj=(_151c417b0_gen_type_kind(_64741_m->_field_kind) + jule::Str("::alloc_def(", 12)) + _64813_obj;
		}
	} else {
		_64813_obj=(_151c417b0_gen_type_kind(_64741_m->_field_kind) + jule::Str("::alloc(", 8)) + _64813_obj;
	}
	_64813_obj+=jule::Str(")", 1);
	return _64813_obj;
}



inline jule::Str _1517eb830_gen_builtin_append_call_expr_model_assign_opt(jule::Bool _6755_same_dest,jule::Str& _6766_dest_expr,jule::Ref<_15177b070_TypeKind>& _67710_dest_kind,jule::Ref<_150f25dd0_SliceExprModel>& _67810_s,jule::Ref<_150f25dd0_BuiltinAppendCallExprModel>& _67910_m) {
	jule::Str _68013_obj = jule::Str("", 0);
	if ((!(_6755_same_dest))) {
		_68013_obj+=(((((_6766_dest_expr + jule::Str(" = jule::alloc_for_append(", 26)) + _1517eb830_gen_expr_model(_67910_m->_field_dest)) + jule::Str(",", 1)) + _1500241f0_itoa(static_cast<jule::I64>(_67810_s->_field_elems.len()))) + jule::Str(")", 1)) + jule::Str(";", 1);
	}
	{
		auto __julec_range_expr = _67810_s->_field_elems;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Any _1517eb830_e = *__julec_range_begin;
			_iter_begin_5690974912:;
			{
				_68013_obj+=_6766_dest_expr;
				_68013_obj+=_1517eb830_get_accessor(_67710_dest_kind);
				_68013_obj+=jule::Str("push(", 5);
				_68013_obj+=_1517eb830_gen_expr_model(_1517eb830_e);
				_68013_obj+=jule::Str(");", 2);
			}
			_iter_next_5690974912:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1517eb830_e = *__julec_range_begin; goto _iter_begin_5690974912; }
			_iter_end_5690974912:;
		}
	}
	return _68013_obj;
}



inline std::tuple<jule::Str,jule::Bool> _1517eb830_gen_builtin_append_call_expr_model_assign(jule::Any _69450_dest,jule::Ref<_150f25dd0_BuiltinAppendCallExprModel> _69471_m) {
	jule::Bool _694110_optimized = jule::Bool();
	{
		auto _match_expr{ _69471_m->_field_elements };
		if (!(_match_expr.type_is<jule::Ref<_150f25dd0_SliceExprModel>>())) { goto _case_end_5690983488; }
		_case_begin_5690983488:;
		{
			{
				auto _match_expr{ _69450_dest };
				if (!(_match_expr.type_is<jule::Ref<_1511317d0_Var>>())) { goto _case_end_5690985168; }
				_case_begin_5690985168:;
				{
					jule::Ref<_150f25dd0_SliceExprModel> _69921_s = _69471_m->_field_elements.operator jule::Ref<_150f25dd0_SliceExprModel>();
					jule::Str _70017_dest_expr = _1517eb830_gen_expr_model(_69450_dest);
					jule::Ref<_1511317d0_Var> _70121_dest_var = _69450_dest.operator jule::Ref<_1511317d0_Var>();
					jule::Bool _70217_same_dest = _151c417b0_any_equals_0(_70121_dest_var,_69471_m->_field_dest);
					_694110_optimized = true;
					return std::make_tuple(_1517eb830_gen_builtin_append_call_expr_model_assign_opt(_70217_same_dest,_70017_dest_expr,_70121_dest_var->_field_kind->_field_kind,_69921_s,_69471_m),_694110_optimized);
				}
				goto _match_end_5690983632;
				_case_end_5690985168:;
				if (!(_match_expr.type_is<jule::Ref<_150f25dd0_StructSubIdentExprModel>>())) { goto _case_end_5690985280; }
				_case_begin_5690985280:;
				{
					jule::Ref<_150f25dd0_SliceExprModel> _70721_s = _69471_m->_field_elements.operator jule::Ref<_150f25dd0_SliceExprModel>();
					jule::Str _70817_dest_expr = _1517eb830_gen_expr_model(_69450_dest);
					jule::Ref<_150a13110_FieldIns> _70921_dest_field = _69450_dest.operator jule::Ref<_150f25dd0_StructSubIdentExprModel>()->_field_field;
					jule::Bool _71017_same_dest = _151c417b0_any_equals_1(_70921_dest_field,_69471_m->_field_dest);
					_694110_optimized = true;
					return std::make_tuple(_1517eb830_gen_builtin_append_call_expr_model_assign_opt(_71017_same_dest,_70817_dest_expr,_70921_dest_field->_field_kind,_70721_s,_69471_m),_694110_optimized);
				}
				goto _match_end_5690983632;
				_case_end_5690985280:;
				_match_end_5690983632:;
			}
		}
		goto _match_end_5690983008;
		_case_end_5690983488:;
		_match_end_5690983008:;
	}
	_694110_optimized = false;
	return std::make_tuple(_1517eb830_gen_builtin_append_call_expr_model(_69471_m),_694110_optimized);
}



inline jule::Str _1517eb830_gen_builtin_append_call_expr_model(jule::Ref<_150f25dd0_BuiltinAppendCallExprModel> _71943_m) {
	return (((jule::Str("jule::append(", 13) + _1517eb830_gen_expr_model(_71943_m->_field_dest)) + jule::Str(",", 1)) + _1517eb830_gen_expr_model(_71943_m->_field_elements)) + jule::Str(")", 1);
}



inline jule::Str _1517eb830_gen_builtin_clone_call_expr_model(jule::Ref<_150f25dd0_BuiltinCloneCallExprModel> _72342_m) {
	jule::Str _72413_obj = jule::Str("jule::clone(", 12);
	_72413_obj+=_1517eb830_gen_expr_model(_72342_m->_field_expr);
	_72413_obj+=jule::Str(")", 1);
	return _72413_obj;
}



inline jule::Str _1517eb830_gen_sizeof_expr_model(jule::Ref<_150f25dd0_SizeofExprModel> _73030_m) {
	jule::Str _73113_obj = jule::Str("sizeof(", 7);
	_73113_obj+=_1517eb830_gen_expr(_73030_m->_field_expr);
	_73113_obj+=jule::Str(")", 1);
	return _73113_obj;
}



inline jule::Str _1517eb830_gen_alignof_expr_model(jule::Ref<_150f25dd0_AlignofExprModel> _73731_m) {
	jule::Str _73813_obj = jule::Str("alignof(", 8);
	_73813_obj+=_1517eb830_gen_expr(_73731_m->_field_expr);
	_73813_obj+=jule::Str(")", 1);
	return _73813_obj;
}



inline jule::Str _1517eb830_gen_rune_expr_model(jule::Ref<_150f25dd0_RuneExprModel> _74424_m) {
	if (_74424_m->_field_code <= 127LL) {
		jule::Str _74617_b = _1517eb830_sbtoa(static_cast<jule::U8>(_74424_m->_field_code));
		if (_74617_b == jule::Str("'", 1)) {
			_74617_b=jule::Str("\\'", 2);
		}
		return (jule::Str("'", 1) + _74617_b) + jule::Str("'", 1);
	}
	return _1517eb830_i64toa(static_cast<jule::I64>(_74424_m->_field_code));
}



inline jule::Str _1517eb830_gen_builtin_error_trait_sub_ident_expr_model(jule::Ref<_150f25dd0_BuiltinErrorTraitSubIdentExprModel> _75553_m) {
	jule::Str _75613_obj = _1517eb830_gen_expr_model(_75553_m->_field_expr);
	_75613_obj+=jule::Str(".get().", 7);
	_75613_obj+=_75553_m->_field_ident;
	return _75613_obj;
}



inline jule::Str _1517eb830_gen_explicit_deref_expr_model(jule::Ref<_150f25dd0_ExplicitDerefExprModel> _76238_m) {
	jule::Str _76313_obj = _1517eb830_gen_expr_model(_76238_m->_field_expr);
	_76313_obj+=jule::Str(".get()", 6);
	return _76313_obj;
}



inline jule::Str _1517eb830_gen_struct_static_ident_expr_model(jule::Ref<_150f25dd0_StructStaticIdentExprModel> _76843_m) {
	jule::Str _76913_obj = _151c17930_struct_ins_out_ident(_76843_m->_field_structure);
	_76913_obj+=jule::Str("::", 2);
	_76913_obj+=_151c17930_fn_ins_out_ident(_76843_m->_field_method);
	return _76913_obj;
}



inline jule::Str _1517eb830_gen_expr_model(jule::Any _77523_m) {
	{
		auto _match_expr{ _77523_m };
		if (!(_match_expr.type_is<jule::Ref<_15177b070_TypeKind>>())) { goto _case_end_5691038224; }
		_case_begin_5691038224:;
		{
			return _151c417b0_gen_type_kind(_77523_m.operator jule::Ref<_15177b070_TypeKind>());
		}
		goto _match_end_5691036464;
		_case_end_5691038224:;
		if (!(_match_expr.type_is<jule::Ref<_15199b440_Const>>())) { goto _case_end_5691038336; }
		_case_begin_5691038336:;
		{
			return _1517eb830_gen_const_expr_model(_77523_m.operator jule::Ref<_15199b440_Const>());
		}
		goto _match_end_5691036464;
		_case_end_5691038336:;
		if (!(_match_expr.type_is<jule::Ref<_1511317d0_Var>>())) { goto _case_end_5691037824; }
		_case_begin_5691037824:;
		{
			return _1517eb830_gen_var_expr_model(_77523_m.operator jule::Ref<_1511317d0_Var>());
		}
		goto _match_end_5691036464;
		_case_end_5691037824:;
		if (!(_match_expr.type_is<jule::Ref<_150f166e0_Trait>>())) { goto _case_end_5691037936; }
		_case_begin_5691037936:;
		{
			return _151c17930_trait_out_ident(_77523_m.operator jule::Ref<_150f166e0_Trait>());
		}
		goto _match_end_5691036464;
		_case_end_5691037936:;
		if (!(_match_expr.type_is<jule::Ref<_150a13110_Struct>>())) { goto _case_end_5691038048; }
		_case_begin_5691038048:;
		{
			return _1517eb830_gen_struct_expr_model(_77523_m.operator jule::Ref<_150a13110_Struct>());
		}
		goto _match_end_5691036464;
		_case_end_5691038048:;
		if (!(_match_expr.type_is<jule::Ref<_150a13110_StructIns>>())) { goto _case_end_5691037344; }
		_case_begin_5691037344:;
		{
			return _1517eb830_gen_struct_ins_expr_model(_77523_m.operator jule::Ref<_150a13110_StructIns>());
		}
		goto _match_end_5691036464;
		_case_end_5691037344:;
		if (!(_match_expr.type_is<jule::Ref<_15081bcd0_FnIns>>())) { goto _case_end_5691037456; }
		_case_begin_5691037456:;
		{
			return _1517eb830_gen_fn_ins_expr_model(_77523_m.operator jule::Ref<_15081bcd0_FnIns>());
		}
		goto _match_end_5691036464;
		_case_end_5691037456:;
		if (!(_match_expr.type_is<jule::Ref<_150f25dd0_BinopExprModel>>())) { goto _case_end_5691037568; }
		_case_begin_5691037568:;
		{
			return _1517eb830_gen_binop_expr_model(_77523_m.operator jule::Ref<_150f25dd0_BinopExprModel>());
		}
		goto _match_end_5691036464;
		_case_end_5691037568:;
		if (!(_match_expr.type_is<jule::Ref<_150f25dd0_UnaryExprModel>>())) { goto _case_end_5691038688; }
		_case_begin_5691038688:;
		{
			return _1517eb830_gen_unary_expr_model(_77523_m.operator jule::Ref<_150f25dd0_UnaryExprModel>());
		}
		goto _match_end_5691036464;
		_case_end_5691038688:;
		if (!(_match_expr.type_is<jule::Ref<_150f25dd0_GetRefPtrExprModel>>())) { goto _case_end_5691038800; }
		_case_begin_5691038800:;
		{
			return _1517eb830_gen_get_ref_ptr_expr_model(_77523_m.operator jule::Ref<_150f25dd0_GetRefPtrExprModel>());
		}
		goto _match_end_5691036464;
		_case_end_5691038800:;
		if (!(_match_expr.type_is<jule::Ref<_150f25dd0_StructLitExprModel>>())) { goto _case_end_5691038912; }
		_case_begin_5691038912:;
		{
			return _1517eb830_gen_struct_lit_expr_model(_77523_m.operator jule::Ref<_150f25dd0_StructLitExprModel>());
		}
		goto _match_end_5691036464;
		_case_end_5691038912:;
		if (!(_match_expr.type_is<jule::Ref<_150f25dd0_AllocStructLitExprModel>>())) { goto _case_end_5691039760; }
		_case_begin_5691039760:;
		{
			return _1517eb830_gen_alloc_struct_lit_expr_model(_77523_m.operator jule::Ref<_150f25dd0_AllocStructLitExprModel>());
		}
		goto _match_end_5691036464;
		_case_end_5691039760:;
		if (!(_match_expr.type_is<jule::Ref<_150f25dd0_CastingExprModel>>())) { goto _case_end_5691039872; }
		_case_begin_5691039872:;
		{
			return _1517eb830_gen_casting_expr_model(_77523_m.operator jule::Ref<_150f25dd0_CastingExprModel>());
		}
		goto _match_end_5691036464;
		_case_end_5691039872:;
		if (!(_match_expr.type_is<jule::Ref<_150f25dd0_FnCallExprModel>>())) { goto _case_end_5691039984; }
		_case_begin_5691039984:;
		{
			return _1517eb830_gen_fn_call_expr_model(_77523_m.operator jule::Ref<_150f25dd0_FnCallExprModel>());
		}
		goto _match_end_5691036464;
		_case_end_5691039984:;
		if (!(_match_expr.type_is<jule::Ref<_150f25dd0_SliceExprModel>>())) { goto _case_end_5691040096; }
		_case_begin_5691040096:;
		{
			return _1517eb830_gen_slice_expr_model(_77523_m.operator jule::Ref<_150f25dd0_SliceExprModel>());
		}
		goto _match_end_5691036464;
		_case_end_5691040096:;
		if (!(_match_expr.type_is<jule::Ref<_150f25dd0_ArrayExprModel>>())) { goto _case_end_5691040208; }
		_case_begin_5691040208:;
		{
			return _1517eb830_gen_array_expr_model(_77523_m.operator jule::Ref<_150f25dd0_ArrayExprModel>());
		}
		goto _match_end_5691036464;
		_case_end_5691040208:;
		if (!(_match_expr.type_is<jule::Ref<_150f25dd0_IndexigExprModel>>())) { goto _case_end_5691040320; }
		_case_begin_5691040320:;
		{
			return _1517eb830_gen_indexing_expr_model(_77523_m.operator jule::Ref<_150f25dd0_IndexigExprModel>());
		}
		goto _match_end_5691036464;
		_case_end_5691040320:;
		if (!(_match_expr.type_is<jule::Ref<_150f25dd0_AnonFnExprModel>>())) { goto _case_end_5691040432; }
		_case_begin_5691040432:;
		{
			return _1517eb830_gen_anon_fn_expr_model(_77523_m.operator jule::Ref<_150f25dd0_AnonFnExprModel>());
		}
		goto _match_end_5691036464;
		_case_end_5691040432:;
		if (!(_match_expr.type_is<jule::Ref<_150f25dd0_MapExprModel>>())) { goto _case_end_5691040544; }
		_case_begin_5691040544:;
		{
			return _1517eb830_gen_map_expr_model(_77523_m.operator jule::Ref<_150f25dd0_MapExprModel>());
		}
		goto _match_end_5691036464;
		_case_end_5691040544:;
		if (!(_match_expr.type_is<jule::Ref<_150f25dd0_SlicingExprModel>>())) { goto _case_end_5691040656; }
		_case_begin_5691040656:;
		{
			return _1517eb830_gen_slicing_expr_model(_77523_m.operator jule::Ref<_150f25dd0_SlicingExprModel>());
		}
		goto _match_end_5691036464;
		_case_end_5691040656:;
		if (!(_match_expr.type_is<jule::Ref<_150f25dd0_TraitSubIdentExprModel>>())) { goto _case_end_5691040768; }
		_case_begin_5691040768:;
		{
			return _1517eb830_gen_trait_sub_ident_expr_model(_77523_m.operator jule::Ref<_150f25dd0_TraitSubIdentExprModel>());
		}
		goto _match_end_5691036464;
		_case_end_5691040768:;
		if (!(_match_expr.type_is<jule::Ref<_150f25dd0_StructSubIdentExprModel>>())) { goto _case_end_5691040880; }
		_case_begin_5691040880:;
		{
			return _1517eb830_gen_struct_sub_ident_expr_model(_77523_m.operator jule::Ref<_150f25dd0_StructSubIdentExprModel>());
		}
		goto _match_end_5691036464;
		_case_end_5691040880:;
		if (!(_match_expr.type_is<jule::Ref<_150f25dd0_CommonIdentExprModel>>())) { goto _case_end_5691040992; }
		_case_begin_5691040992:;
		{
			return _1517eb830_gen_common_ident_expr_model(_77523_m.operator jule::Ref<_150f25dd0_CommonIdentExprModel>());
		}
		goto _match_end_5691036464;
		_case_end_5691040992:;
		if (!(_match_expr.type_is<jule::Ref<_150f25dd0_CommonSubIdentExprModel>>())) { goto _case_end_5691041120; }
		_case_begin_5691041120:;
		{
			return _1517eb830_gen_common_sub_ident_expr_model(_77523_m.operator jule::Ref<_150f25dd0_CommonSubIdentExprModel>());
		}
		goto _match_end_5691036464;
		_case_end_5691041120:;
		if (!(_match_expr.type_is<jule::Ref<_150f25dd0_TupleExprModel>>())) { goto _case_end_5691041248; }
		_case_begin_5691041248:;
		{
			return _1517eb830_gen_tuple_expr_model(_77523_m.operator jule::Ref<_150f25dd0_TupleExprModel>());
		}
		goto _match_end_5691036464;
		_case_end_5691041248:;
		if (!(_match_expr.type_is<jule::Ref<_150f25dd0_BuiltinOutCallExprModel>>())) { goto _case_end_5691041376; }
		_case_begin_5691041376:;
		{
			return _1517eb830_gen_builtin_out_call_expr_model(_77523_m.operator jule::Ref<_150f25dd0_BuiltinOutCallExprModel>());
		}
		goto _match_end_5691036464;
		_case_end_5691041376:;
		if (!(_match_expr.type_is<jule::Ref<_150f25dd0_BuiltinOutlnCallExprModel>>())) { goto _case_end_5691041504; }
		_case_begin_5691041504:;
		{
			return _1517eb830_gen_builtin_outln_call_expr_model(_77523_m.operator jule::Ref<_150f25dd0_BuiltinOutlnCallExprModel>());
		}
		goto _match_end_5691036464;
		_case_end_5691041504:;
		if (!(_match_expr.type_is<jule::Ref<_150f25dd0_BuiltinNewCallExprModel>>())) { goto _case_end_5691041632; }
		_case_begin_5691041632:;
		{
			return _1517eb830_gen_builtin_new_call_expr_model(_77523_m.operator jule::Ref<_150f25dd0_BuiltinNewCallExprModel>());
		}
		goto _match_end_5691036464;
		_case_end_5691041632:;
		if (!(_match_expr.type_is<jule::Ref<_150f25dd0_BuiltinRealCallExprModel>>())) { goto _case_end_5691041760; }
		_case_begin_5691041760:;
		{
			return _1517eb830_gen_builtin_real_call_expr_model(_77523_m.operator jule::Ref<_150f25dd0_BuiltinRealCallExprModel>());
		}
		goto _match_end_5691036464;
		_case_end_5691041760:;
		if (!(_match_expr.type_is<jule::Ref<_150f25dd0_BuiltinDropCallExprModel>>())) { goto _case_end_5691041888; }
		_case_begin_5691041888:;
		{
			return _1517eb830_gen_builtin_drop_call_expr_model(_77523_m.operator jule::Ref<_150f25dd0_BuiltinDropCallExprModel>());
		}
		goto _match_end_5691036464;
		_case_end_5691041888:;
		if (!(_match_expr.type_is<jule::Ref<_150f25dd0_BuiltinPanicCallExprModel>>())) { goto _case_end_5691042016; }
		_case_begin_5691042016:;
		{
			return _1517eb830_gen_builtin_panic_call_expr_model(_77523_m.operator jule::Ref<_150f25dd0_BuiltinPanicCallExprModel>());
		}
		goto _match_end_5691036464;
		_case_end_5691042016:;
		if (!(_match_expr.type_is<jule::Ref<_150f25dd0_BuiltinMakeCallExprModel>>())) { goto _case_end_5691042144; }
		_case_begin_5691042144:;
		{
			return _1517eb830_gen_builtin_make_call_expr_model(_77523_m.operator jule::Ref<_150f25dd0_BuiltinMakeCallExprModel>());
		}
		goto _match_end_5691036464;
		_case_end_5691042144:;
		if (!(_match_expr.type_is<jule::Ref<_150f25dd0_BuiltinAppendCallExprModel>>())) { goto _case_end_5691042272; }
		_case_begin_5691042272:;
		{
			return _1517eb830_gen_builtin_append_call_expr_model(_77523_m.operator jule::Ref<_150f25dd0_BuiltinAppendCallExprModel>());
		}
		goto _match_end_5691036464;
		_case_end_5691042272:;
		if (!(_match_expr.type_is<jule::Ref<_150f25dd0_BuiltinCloneCallExprModel>>())) { goto _case_end_5691042400; }
		_case_begin_5691042400:;
		{
			return _1517eb830_gen_builtin_clone_call_expr_model(_77523_m.operator jule::Ref<_150f25dd0_BuiltinCloneCallExprModel>());
		}
		goto _match_end_5691036464;
		_case_end_5691042400:;
		if (!(_match_expr.type_is<jule::Ref<_150f25dd0_SizeofExprModel>>())) { goto _case_end_5691042528; }
		_case_begin_5691042528:;
		{
			return _1517eb830_gen_sizeof_expr_model(_77523_m.operator jule::Ref<_150f25dd0_SizeofExprModel>());
		}
		goto _match_end_5691036464;
		_case_end_5691042528:;
		if (!(_match_expr.type_is<jule::Ref<_150f25dd0_AlignofExprModel>>())) { goto _case_end_5691042656; }
		_case_begin_5691042656:;
		{
			return _1517eb830_gen_alignof_expr_model(_77523_m.operator jule::Ref<_150f25dd0_AlignofExprModel>());
		}
		goto _match_end_5691036464;
		_case_end_5691042656:;
		if (!(_match_expr.type_is<jule::Ref<_150f25dd0_RuneExprModel>>())) { goto _case_end_5691042784; }
		_case_begin_5691042784:;
		{
			return _1517eb830_gen_rune_expr_model(_77523_m.operator jule::Ref<_150f25dd0_RuneExprModel>());
		}
		goto _match_end_5691036464;
		_case_end_5691042784:;
		if (!(_match_expr.type_is<jule::Ref<_150f25dd0_BuiltinErrorTraitSubIdentExprModel>>())) { goto _case_end_5691042912; }
		_case_begin_5691042912:;
		{
			return _1517eb830_gen_builtin_error_trait_sub_ident_expr_model(_77523_m.operator jule::Ref<_150f25dd0_BuiltinErrorTraitSubIdentExprModel>());
		}
		goto _match_end_5691036464;
		_case_end_5691042912:;
		if (!(_match_expr.type_is<jule::Ref<_150f25dd0_ExplicitDerefExprModel>>())) { goto _case_end_5691043040; }
		_case_begin_5691043040:;
		{
			return _1517eb830_gen_explicit_deref_expr_model(_77523_m.operator jule::Ref<_150f25dd0_ExplicitDerefExprModel>());
		}
		goto _match_end_5691036464;
		_case_end_5691043040:;
		if (!(_match_expr.type_is<jule::Ref<_150f25dd0_StructStaticIdentExprModel>>())) { goto _case_end_5691043168; }
		_case_begin_5691043168:;
		{
			return _1517eb830_gen_struct_static_ident_expr_model(_77523_m.operator jule::Ref<_150f25dd0_StructStaticIdentExprModel>());
		}
		goto _match_end_5691036464;
		_case_end_5691043168:;
		_case_begin_5691036880:;
		{
			return jule::Str("<unimplemented_expression_model>", 32);
		}
		goto _match_end_5691036464;
		_case_end_5691036880:;
		_match_end_5691036464:;
	}
}



inline jule::Str _1517eb830_gen_expr(jule::Any _90217_e) {
	jule::Str _90313_obj = _1517eb830_gen_expr_model(_90217_e);
	if (_90313_obj[0LL] != '(') {
		return _90313_obj;
	}
	{
		auto _match_expr{ _90217_e };
		if (!(_match_expr.type_is<jule::Ref<_150f25dd0_BinopExprModel>>())) { goto _case_end_5691100544; }
		_case_begin_5691100544:;
		{
			_90313_obj=_90313_obj.slice(1LL,static_cast<jule::Int>(_90313_obj.len() - 1LL));
		}
		goto _match_end_5691101776;
		_case_end_5691100544:;
		_match_end_5691101776:;
	}
	return _90313_obj;
}



inline jule::Str _1517eb830_gen_val(jule::Ref<_151290fd0_Value> _91516_v) {
	if (_91516_v->_field_data->_method_is_const()) {
		return _1517eb830_gen_const_expr(_91516_v->_field_data);
	}
	return _1517eb830_gen_expr(_91516_v->_field_data->_field_model);
}



inline jule::Str _1517eb830_get_init_expr(jule::Ref<_15177b070_TypeKind> _92222_t) {
	if (jule::real(_92222_t->_method_ptr())) {
		return jule::Str("nullptr", 7);
	}
	jule::Ref<_150f1c930_Enum> _92713_enm = _92222_t->_method_enm();
	if ((!(jule::real(_92713_enm)))) {
		return _151c417b0_gen_type_kind(_92222_t) + jule::Str("()", 2);
	}
	return _1517eb830_gen_val(_92713_enm->_field_items[0LL]->_field_value);
}



inline jule::Str _151c170a0_get_derive_fn_decl_clone(jule::Ref<_150a13110_Struct> _729_s) {
	jule::Str _813_obj = _151c417b0_gen_struct_kind(_729_s);
	_813_obj+=jule::Str(" clone(void) const ", 19);
	return _813_obj;
}



inline jule::Str _151c170a0_get_derive_fn_def_clone(jule::Ref<_150a13110_Struct> _1328_s) {
	jule::Str _1413_obj = _151c417b0_gen_struct_kind(_1328_s);
	_1413_obj+=(jule::Str(" ", 1) + _1413_obj) + jule::Str("::clone(void) const ", 20);
	return _1413_obj;
}



inline jule::Str _151c17930_as_ident(jule::Str _2513_ident) {
	return jule::Str("_", 1) + _2513_ident;
}



inline jule::Str _151c17930_as_jt(jule::Str _2810_id) {
	jule::Slice<jule::I32> _2913_ident = static_cast<jule::Slice<jule::I32>>(_2810_id);
	if ((97LL <= _2913_ident[0LL]) && (_2913_ident[0LL] <= 122LL)) {
		_2913_ident[0LL]-=32LL;
	}
	return jule::Str("jule::", 6) + static_cast<jule::Str>(_2913_ident);
}



inline jule::Str _151c17930_get_ptr_as_ident(jule::Uintptr _3721_ptr) {
	jule::Str _3813_addr = jule::Str("_", 1) + _1500241f0_fmt_uint(static_cast<jule::U64>(_3721_ptr),16LL);
	{
		auto __julec_range_expr = _3813_addr;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _151c17930_i = 0;
			jule::U8 _151c17930_r = *__julec_range_begin;
			_iter_begin_5691124656:;
			{
				if (_151c17930_r != '0') {
					_3813_addr=_3813_addr.slice(static_cast<jule::Int>(_151c17930_i));
					goto _iter_end_5691124656;
				}
			}
			_iter_next_5691124656:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_151c17930_i; _151c17930_r = *__julec_range_begin; goto _iter_begin_5691124656; }
			_iter_end_5691124656:;
		}
	}
	return _3813_addr;
}



inline jule::Str _151c17930_as_out_ident(jule::Str _5317_ident,jule::Uintptr _5329_ptr) {
	if (_5329_ptr != 0LL) {
		return (_151c17930_get_ptr_as_ident(_5329_ptr) + jule::Str("_", 1)) + _5317_ident;
	}
	return _151c17930_as_ident(_5317_ident);
}



inline jule::Str _151c17930_as_local_ident(jule::Int _6619_row,jule::Int _6629_col,jule::Str _6643_ident) {
	_6643_ident=((_1500241f0_itoa(_6619_row) + _1500241f0_itoa(_6629_col)) + jule::Str("_", 1)) + _6643_ident;
	return _151c17930_as_ident(_6643_ident);
}



inline jule::Str _151c17930_fn_out_ident(jule::Ref<_15081bcd0_Fn> _7217_f) {
	{
		if (!((_7217_f->_field_cpp_linked))) { goto _case_end_5691136992; }
		_case_begin_5691136992:;
		{
			return _7217_f->_field_ident;
		}
		goto _match_end_5691134544;
		_case_end_5691136992:;
		if (!((_7217_f->_field_ident == jule::Str("main", 4)))) { goto _case_end_5691138912; }
		_case_begin_5691138912:;
		{
			return jule::Str("entry_point", 11);
		}
		goto _match_end_5691134544;
		_case_end_5691138912:;
		if (!((_7217_f->_method_is_method()))) { goto _case_end_5691139024; }
		_case_begin_5691139024:;
		{
			if (_7217_f->_field_statically) {
				return jule::Str("_static_method_", 15) + _7217_f->_field_ident;
			}
			return jule::Str("_method_", 8) + _7217_f->_field_ident;
		}
		goto _match_end_5691134544;
		_case_end_5691139024:;
		_case_begin_5691134656:;
		{
			return _151c17930_as_out_ident(_7217_f->_field_ident,static_cast<jule::Uintptr>(_7217_f->_field_token._field_file->_method_addr()));
		}
		goto _match_end_5691134544;
		_case_end_5691134656:;
		_match_end_5691134544:;
	}
}



inline jule::Str _151c17930_fn_ins_out_ident(jule::Ref<_15081bcd0_FnIns> _9221_f) {
	if (_9221_f->_method_is_builtin()) {
		return jule::Str("jule::", 6) + _9221_f->_field_decl->_field_ident;
	}
	if (_9221_f->_field_decl->_field_cpp_linked || (_9221_f->_field_generics.len() == 0LL)) {
		return _151c17930_fn_out_ident(_9221_f->_field_decl);
	}
	{
		auto __julec_range_expr = _9221_f->_field_decl->_field_instances;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _151c17930_i = 0;
			jule::Ref<_15081bcd0_FnIns> _151c17930_ins = *__julec_range_begin;
			_iter_begin_5691147168:;
			{
				jule::Ref<_15177b070_TypeKind> _10213_kind = jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_151c17930_ins));
				if (_9221_f->_method_equals(_10213_kind)) {
					return (_151c17930_fn_out_ident(_9221_f->_field_decl) + jule::Str("_", 1)) + _1500241f0_itoa(_151c17930_i);
				}
			}
			_iter_next_5691147168:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_151c17930_i; _151c17930_ins = *__julec_range_begin; goto _iter_begin_5691147168; }
			_iter_end_5691147168:;
		}
	}
	return jule::Str("__?__", 5);
}



inline jule::Str _151c17930_trait_out_ident(jule::Ref<_150f166e0_Trait> _11220_t) {
	if (_11220_t->_method_is_builtin()) {
		return jule::Str("jule::", 6) + _11220_t->_field_ident;
	}
	return _151c17930_as_out_ident(_11220_t->_field_ident,static_cast<jule::Uintptr>(_11220_t->_field_token._field_file->_method_addr()));
}



inline jule::Str _151c17930_param_out_ident(jule::Ref<_15081bcd0_Param> _12020_p) {
	if (_150640f50_is_anon_ident(_12020_p->_field_ident) || _150640f50_is_ignore_ident(_12020_p->_field_ident)) {
		return jule::Str("", 0);
	}
	return _151c17930_as_local_ident(_12020_p->_field_token._field_row,_12020_p->_field_token._field_column,_12020_p->_field_ident);
}



inline jule::Str _151c17930_struct_out_ident(jule::Ref<_150a13110_Struct> _12821_s) {
	if (_12821_s->_field_cpp_linked) {
		if (_151c417b0_has_directive(_12821_s->_field_directives,jule::Str("typedef", 7))) {
			return _12821_s->_field_ident;
		}
		return jule::Str("struct ", 7) + _12821_s->_field_ident;
	}
	return _151c17930_as_out_ident(_12821_s->_field_ident,static_cast<jule::Uintptr>(_12821_s->_field_token._field_file->_method_addr()));
}



inline jule::Str _151c17930_struct_ins_out_ident(jule::Ref<_150a13110_StructIns> _13925_s) {
	if (_13925_s->_field_decl->_field_cpp_linked || (_13925_s->_field_generics.len() == 0LL)) {
		return _151c17930_struct_out_ident(_13925_s->_field_decl);
	}
	{
		auto __julec_range_expr = _13925_s->_field_decl->_field_instances;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _151c17930_i = 0;
			jule::Ref<_150a13110_StructIns> _151c17930_ins = *__julec_range_begin;
			_iter_begin_5691168576:;
			{
				jule::Ref<_15177b070_TypeKind> _14513_kind = jule::new_struct<_15177b070_TypeKind>(new( std::nothrow ) _15177b070_TypeKind(jule::Str(),jule::Bool(),_151c17930_ins));
				if (_13925_s->_method_equals(_14513_kind)) {
					return (_151c17930_struct_out_ident(_13925_s->_field_decl) + jule::Str("_", 1)) + _1500241f0_itoa(_151c17930_i);
				}
			}
			_iter_next_5691168576:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_151c17930_i; _151c17930_ins = *__julec_range_begin; goto _iter_begin_5691168576; }
			_iter_end_5691168576:;
		}
	}
	return jule::Str("__?__", 5);
}



inline jule::Str _151c17930_field_out_ident(jule::Ref<_150a13110_Field> _15520_f) {
	if (_15520_f->_field_owner->_field_cpp_linked) {
		return _15520_f->_field_ident;
	}
	return jule::Str("_field_", 7) + _15520_f->_field_ident;
}



inline jule::Str _151c17930_var_out_ident(jule::Ref<_1511317d0_Var> _16322_v) {
	{
		if (!((_16322_v->_field_cpp_linked))) { goto _case_end_5691180544; }
		_case_begin_5691180544:;
		{
			return _16322_v->_field_ident;
		}
		goto _match_end_5691172336;
		_case_end_5691180544:;
		if (!((_16322_v->_field_ident == jule::Str("self", 4)))) { goto _case_end_5691180656; }
		_case_begin_5691180656:;
		{
			if (jule::real(_16322_v->_field_kind->_field_kind->_method_ref())) {
				return jule::Str("this->self", 10);
			}
			return jule::Str("(*this)", 7);
		}
		goto _match_end_5691172336;
		_case_end_5691180656:;
		if (!((jule::real(_16322_v->_field_scope)))) { goto _case_end_5691177584; }
		_case_begin_5691177584:;
		{
			return _151c17930_as_local_ident(_16322_v->_field_token._field_row,_16322_v->_field_token._field_column,_16322_v->_field_ident);
		}
		goto _match_end_5691172336;
		_case_end_5691177584:;
		_case_begin_5691177280:;
		{
			return _151c17930_as_out_ident(_16322_v->_field_ident,static_cast<jule::Uintptr>(_16322_v->_field_token._field_file->_method_addr()));
		}
		goto _match_end_5691172336;
		_case_end_5691177280:;
		_match_end_5691172336:;
	}
}



inline jule::Str _151c17930_iter_begin_label_ident(jule::Uintptr _18327_it) {
	return jule::Str("_iter_begin_", 12) + _1500241f0_itoa(static_cast<jule::Int>(_18327_it));
}



inline jule::Str _151c17930_iter_end_label_ident(jule::Uintptr _18825_it) {
	return jule::Str("_iter_end_", 10) + _1500241f0_itoa(static_cast<jule::Int>(_18825_it));
}



inline jule::Str _151c17930_iter_next_label_ident(jule::Uintptr _19326_it) {
	return jule::Str("_iter_next_", 11) + _1500241f0_itoa(static_cast<jule::Int>(_19326_it));
}



inline jule::Str _151c17930_label_ident(jule::Str _19816_ident) {
	return jule::Str("_julec_label_", 13) + _19816_ident;
}



inline jule::Str _151c17930_match_end_label_ident(jule::Uintptr _20326_m) {
	return jule::Str("_match_end_", 11) + _1500241f0_itoa(static_cast<jule::Int>(_20326_m));
}



inline jule::Str _151c17930_case_begin_label_ident(jule::Uintptr _20827_c) {
	return jule::Str("_case_begin_", 12) + _1500241f0_itoa(static_cast<jule::Int>(_20827_c));
}



inline jule::Str _151c17930_case_end_label_ident(jule::Uintptr _21325_c) {
	return jule::Str("_case_end_", 10) + _1500241f0_itoa(static_cast<jule::Int>(_21325_c));
}



inline jule::Bool _151c417b0_any_equals_0(jule::Ref<_1511317d0_Var>& _2619_first,jule::Any& _2631_other) {
	{
		auto _match_expr{ _2631_other };
		if (!(_match_expr.type_is<jule::Ref<_1511317d0_Var>>())) { goto _case_end_5690996448; }
		_case_begin_5690996448:;
		{
			return (_2619_first).alloc == (_2631_other.operator jule::Ref<_1511317d0_Var>()).alloc;
		}
		goto _match_end_5690995584;
		_case_end_5690996448:;
		_case_begin_5690996064:;
		{
			return false;
		}
		goto _match_end_5690995584;
		_case_end_5690996064:;
		_match_end_5690995584:;
	}
}

inline jule::Bool _151c417b0_any_equals_1(jule::Ref<_150a13110_FieldIns>& _2619_first,jule::Any& _2631_other) {
	{
		auto _match_expr{ _2631_other };
		if (!(_match_expr.type_is<jule::Ref<_150a13110_FieldIns>>())) { goto _case_end_5691009456; }
		_case_begin_5691009456:;
		{
			return (_2619_first).alloc == (_2631_other.operator jule::Ref<_150a13110_FieldIns>()).alloc;
		}
		goto _match_end_5691008592;
		_case_end_5691009456:;
		_case_begin_5691009072:;
		{
			return false;
		}
		goto _match_end_5691008592;
		_case_end_5691009072:;
		_match_end_5691008592:;
	}
}



inline jule::Ref<_1506406d0_Directive> _151c417b0_find_directive(jule::Slice<jule::Ref<_1506406d0_Directive>> _3423_directives,jule::Str _3465_tag) {
	{
		auto __julec_range_expr = _3423_directives;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_1506406d0_Directive> _151c417b0_dr = *__julec_range_begin;
			_iter_begin_5691197968:;
			{
				if (_151c417b0_dr->_field_tag == _3465_tag) {
					return _151c417b0_dr;
				}
			}
			_iter_next_5691197968:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _151c417b0_dr = *__julec_range_begin; goto _iter_begin_5691197968; }
			_iter_end_5691197968:;
		}
	}
	return jule::new_ref<_1506406d0_Directive>();
}



inline jule::Bool _151c417b0_has_directive(jule::Slice<jule::Ref<_1506406d0_Directive>> _4418_directives,jule::Str _4460_tag) {
	return jule::real(_151c417b0_find_directive((*((&(_4418_directives)))),_4460_tag));
}



inline jule::Str _151c417b0_gen_prim_kind(jule::Ref<_15177b070_Prim> _4918_p) {
	return _151c17930_as_jt(_4918_p->_method_to_str());
}



inline jule::Str _151c417b0_gen_tuple_kind(jule::Ref<_15177b070_Tuple> _5423_t) {
	jule::Str _5513_obj = jule::Str("std::tuple<", 11);
	{
		auto __julec_range_expr = _5423_t->_field_types;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_15177b070_TypeKind> _151c417b0_t = *__julec_range_begin;
			_iter_begin_5691205296:;
			{
				_5513_obj+=_151c417b0_gen_type_kind(_151c417b0_t) + jule::Str(",", 1);
			}
			_iter_next_5691205296:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _151c417b0_t = *__julec_range_begin; goto _iter_begin_5691205296; }
			_iter_end_5691205296:;
		}
	}
	_5513_obj=_5513_obj.slice(0LL,static_cast<jule::Int>(_5513_obj.len() - 1LL));
	return _5513_obj + jule::Str(">", 1);
}



inline jule::Str _151c417b0_as_ref_kind(jule::Str _6416_elem) {
	jule::Str _659_ref = _151c17930_as_jt(jule::Str("ref", 3));
	return ((_659_ref + jule::Str("<", 1)) + _6416_elem) + jule::Str(">", 1);
}



inline jule::Str _151c417b0_gen_ref_kind(jule::Ref<_15177b070_Ref> _7021_r) {
	jule::Str _719_elem = _151c417b0_gen_type_kind(_7021_r->_field_elem);
	return _151c417b0_as_ref_kind(_719_elem);
}



inline jule::Str _151c417b0_gen_ptr_kind(jule::Ref<_15177b070_Ptr> _7621_p) {
	
	if (_7621_p->_method_is_unsafe()) {
		return jule::Str("void*", 5);
	}
	jule::Str _829_elem = _151c417b0_gen_type_kind(_7621_p->_field_elem);
	return _829_elem + jule::Str("*", 1);
}



inline jule::Str _151c417b0_gen_enum_kind(jule::Ref<_150f1c930_Enum> _8722_e) {
	return _151c417b0_gen_type_kind(_8722_e->_field_kind->_field_kind);
}



inline jule::Str _151c417b0_as_slice_kind(jule::Ref<_15177b070_TypeKind> _9122_elem) {
	jule::Str _929_elem_s = _151c417b0_gen_type_kind(_9122_elem);
	jule::Str _939_slc = _151c17930_as_jt(jule::Str("slice", 5));
	return ((_939_slc + jule::Str("<", 1)) + _929_elem_s) + jule::Str(">", 1);
}



inline jule::Str _151c417b0_gen_slice_kind(jule::Ref<_15177b070_Slc> _9823_s) {
	return _151c417b0_as_slice_kind(_9823_s->_field_elem);
}



inline jule::Str _151c417b0_gen_map_kind(jule::Ref<_15177b070_Map> _10321_m) {
	jule::Str _1049_key = _151c417b0_gen_type_kind(_10321_m->_field_key);
	jule::Str _1059_val = _151c417b0_gen_type_kind(_10321_m->_field_val);
	jule::Str _1069__map = _151c17930_as_jt(jule::Str("map", 3));
	return ((((_1069__map + jule::Str("<", 1)) + _1049_key) + jule::Str(",", 1)) + _1059_val) + jule::Str(">", 1);
}



inline jule::Str _151c417b0_gen_trait_kind_from_ident(jule::Str _11030_ident) {
	jule::Str _1119_trt = _151c17930_as_jt(jule::Str("trait", 5));
	return ((_1119_trt + jule::Str("<", 1)) + _11030_ident) + jule::Str(">", 1);
}



inline jule::Str _151c417b0_gen_trait_kind(jule::Ref<_150f166e0_Trait> _11619_t) {
	jule::Str _1179_ident = _151c17930_trait_out_ident(_11619_t);
	return _151c417b0_gen_trait_kind_from_ident(_1179_ident);
}



inline jule::Str _151c417b0_gen_struct_kind(jule::Ref<_150a13110_Struct> _12220_s) {
	jule::Str _12313_rep = jule::Str("", 0);
	if (_12220_s->_field_cpp_linked && (!(_151c417b0_has_directive(_12220_s->_field_directives,jule::Str("typedef", 7))))) {
		_12313_rep+=jule::Str("struct ", 7);
	}
	_12313_rep+=_151c17930_struct_out_ident(_12220_s);
	return _12313_rep;
}



inline jule::Str _151c417b0_gen_struct_kind_ins(jule::Ref<_150a13110_StructIns> _13328_s) {
	if (_13328_s->_field_decl->_field_cpp_linked) {
		jule::Str _13517_ident = _151c17930_struct_ins_out_ident(_13328_s);
		if (_13328_s->_field_generics.len() > 0LL) {
			_13517_ident+=jule::Str("<", 1);
			{
				auto __julec_range_expr = _13328_s->_field_generics;
				if (__julec_range_expr.begin() != __julec_range_expr.end()) {
					auto __julec_range_begin = __julec_range_expr.begin();
					const auto __julec_range_end = __julec_range_expr.end();
					jule::Ref<_15177b070_TypeKind> _151c417b0_g = *__julec_range_begin;
					_iter_begin_5691241728:;
					{
						_13517_ident+=_151c417b0_gen_type_kind(_151c417b0_g) + jule::Str(",", 1);
					}
					_iter_next_5691241728:;
					++__julec_range_begin;
					if (__julec_range_begin != __julec_range_end) { _151c417b0_g = *__julec_range_begin; goto _iter_begin_5691241728; }
					_iter_end_5691241728:;
				}
			}
			_13517_ident=_13517_ident.slice(0LL,static_cast<jule::Int>(_13517_ident.len() - 1LL));
			_13517_ident+=jule::Str(">", 1);
		}
		jule::Ref<_1506406d0_Directive> _14413_d = _151c417b0_find_directive(_13328_s->_field_decl->_field_directives,jule::Str("namespace", 9));
		if (jule::real(_14413_d)) {
			_13517_ident=(_1517eb830_concat_all_parts(_14413_d->_field_args) + jule::Str("::", 2)) + _13517_ident;
		}
		return _13517_ident;
	}
	return _151c17930_struct_ins_out_ident(_13328_s);
}



inline jule::Str _151c417b0_gen_array_kind(jule::Ref<_15177b070_Arr> _15423_a) {
	jule::Str _1559_arr = _151c17930_as_jt(jule::Str("array", 5));
	jule::Str _1569_elem = _151c417b0_gen_type_kind(_15423_a->_field_elem);
	jule::Str _1579_size = _1500241f0_itoa(_15423_a->_field_n);
	return ((((_1559_arr + jule::Str("<", 1)) + _1569_elem) + jule::Str(",", 1)) + _1579_size) + jule::Str(">", 1);
}



inline jule::Str _151c417b0_gen_fn_anon_decl(jule::Ref<_15081bcd0_FnIns> _16125_f) {
	jule::Str _16213_decl = _1514109b0_gen_fn_ins_result(_16125_f);
	_16213_decl+=jule::Str("(", 1);
	if (_16125_f->_field_params.len() > 0LL) {
		{
			auto __julec_range_expr = _16125_f->_field_params;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_15081bcd0_ParamIns> _151c417b0_param = *__julec_range_begin;
				_iter_begin_5691257088:;
				{
					if (_151c417b0_param->_field_decl->_method_is_self()) {
						goto _iter_next_5691257088;
					}
					_16213_decl+=_1514109b0_gen_param_ins_prototype(_151c417b0_param);
					_16213_decl+=jule::Str(",", 1);
				}
				_iter_next_5691257088:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _151c417b0_param = *__julec_range_begin; goto _iter_begin_5691257088; }
				_iter_end_5691257088:;
			}
		}
		_16213_decl=_16213_decl.slice(0LL,static_cast<jule::Int>(_16213_decl.len() - 1LL));
	} else {
		_16213_decl+=jule::Str("void", 4);
	}
	_16213_decl+=jule::Str(")", 1);
	return _16213_decl;
}



inline jule::Str _151c417b0_gen_fn_kind(jule::Ref<_15081bcd0_FnIns> _18420_f) {
	jule::Str _1859_fnc = _151c17930_as_jt(jule::Str("fn", 2));
	jule::Str _1869_decl = _151c417b0_gen_fn_anon_decl(_18420_f);
	return ((_1859_fnc + jule::Str("<", 1)) + _1869_decl) + jule::Str(">", 1);
}



inline jule::Str _151c417b0_gen_type_kind(jule::Ref<_15177b070_TypeKind> _19122_k) {
	{
		if (!((_19122_k->_method_is_cpp_linked()))) { goto _case_end_5691270000; }
		_case_begin_5691270000:;
		{
			return _19122_k->_field_cpp_ident;
		}
		goto _match_end_5691266992;
		_case_end_5691270000:;
		if (!((jule::real(_19122_k->_method_prim())))) { goto _case_end_5691269360; }
		_case_begin_5691269360:;
		{
			return _151c417b0_gen_prim_kind(_19122_k->_method_prim());
		}
		goto _match_end_5691266992;
		_case_end_5691269360:;
		if (!((jule::real(_19122_k->_method_tup())))) { goto _case_end_5691269472; }
		_case_begin_5691269472:;
		{
			return _151c417b0_gen_tuple_kind(_19122_k->_method_tup());
		}
		goto _match_end_5691266992;
		_case_end_5691269472:;
		if (!((jule::real(_19122_k->_method_ref())))) { goto _case_end_5691269600; }
		_case_begin_5691269600:;
		{
			return _151c417b0_gen_ref_kind(_19122_k->_method_ref());
		}
		goto _match_end_5691266992;
		_case_end_5691269600:;
		if (!((jule::real(_19122_k->_method_ptr())))) { goto _case_end_5691268672; }
		_case_begin_5691268672:;
		{
			return _151c417b0_gen_ptr_kind(_19122_k->_method_ptr());
		}
		goto _match_end_5691266992;
		_case_end_5691268672:;
		if (!((jule::real(_19122_k->_method_enm())))) { goto _case_end_5691268784; }
		_case_begin_5691268784:;
		{
			return _151c417b0_gen_enum_kind(_19122_k->_method_enm());
		}
		goto _match_end_5691266992;
		_case_end_5691268784:;
		if (!((jule::real(_19122_k->_method_slc())))) { goto _case_end_5691268912; }
		_case_begin_5691268912:;
		{
			return _151c417b0_gen_slice_kind(_19122_k->_method_slc());
		}
		goto _match_end_5691266992;
		_case_end_5691268912:;
		if (!((jule::real(_19122_k->_method_map())))) { goto _case_end_5691270208; }
		_case_begin_5691270208:;
		{
			return _151c417b0_gen_map_kind(_19122_k->_method_map());
		}
		goto _match_end_5691266992;
		_case_end_5691270208:;
		if (!((jule::real(_19122_k->_method_trt())))) { goto _case_end_5691270320; }
		_case_begin_5691270320:;
		{
			return _151c417b0_gen_trait_kind(_19122_k->_method_trt());
		}
		goto _match_end_5691266992;
		_case_end_5691270320:;
		if (!((jule::real(_19122_k->_method_strct())))) { goto _case_end_5691270432; }
		_case_begin_5691270432:;
		{
			return _151c417b0_gen_struct_kind_ins(_19122_k->_method_strct());
		}
		goto _match_end_5691266992;
		_case_end_5691270432:;
		if (!((jule::real(_19122_k->_method_arr())))) { goto _case_end_5691270624; }
		_case_begin_5691270624:;
		{
			return _151c417b0_gen_array_kind(_19122_k->_method_arr());
		}
		goto _match_end_5691266992;
		_case_end_5691270624:;
		if (!((jule::real(_19122_k->_method_fnc())))) { goto _case_end_5691270736; }
		_case_begin_5691270736:;
		{
			return _151c417b0_gen_fn_kind(_19122_k->_method_fnc());
		}
		goto _match_end_5691266992;
		_case_end_5691270736:;
		_case_begin_5691267360:;
		{
			return jule::Str("[<unimplemented_type_kind>]", 27);
		}
		goto _match_end_5691266992;
		_case_end_5691267360:;
		_match_end_5691266992:;
	}
}



inline void _1514109b0_add_indent(void) {
	(_1514109b0_INDENT)++;
}



inline void _1514109b0_done_indent(void) {
	(_1514109b0_INDENT)--;
}



inline jule::Str _1514109b0_indent(void) {
	
	if (_1514109b0_INDENT == 0LL) {
		return jule::Str("", 0);
	}
	jule::Str _7913_s = jule::Str("", 0);
	jule::Int _8013_i = 0LL;
	_iter_begin_5691280176:;
	if (!(_8013_i < _1514109b0_INDENT)) { goto _iter_end_5691280176; }
	{
		_7913_s+=jule::Str("\t", 1);
	}
	_iter_next_5691280176:;
	(_8013_i)++;
	goto _iter_begin_5691280176;
	_iter_end_5691280176:;
	return _7913_s;
}



inline jule::Bool _1514109b0_is_cpp_header_file(jule::Str _8723_path) {
	jule::Int _889_offset = _8723_path.rfind(jule::Str(".", 1));
	if (_889_offset == -1LL) {
		return false;
	}
	return _157e348f0_is_valid_header_ext(_8723_path.slice(static_cast<jule::Int>(_889_offset)));
}



inline jule::Str _1514109b0_gen_links(jule::Ref<_1501d9900_IR> _9618_ir) {
	jule::Str _9713_obj = jule::Str("", 0);
	{
		auto __julec_range_expr = _9618_ir->_field_used;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_150f26340_ImportInfo> _1514109b0_pkg = *__julec_range_begin;
			_iter_begin_5691298592:;
			{
				{
					if (!(((!(_1514109b0_pkg->_field_cpp_linked))))) { goto _case_end_5691300464; }
					_case_begin_5691300464:;
					{
						goto _iter_next_5691298592;
					}
					goto _match_end_5691300272;
					_case_end_5691300464:;
					if (!((_157e348f0_is_std_header_path(_1514109b0_pkg->_field_path)))) { goto _case_end_5691300592; }
					_case_begin_5691300592:;
					{
						_9713_obj+=(jule::Str("#include ", 9) + _1514109b0_pkg->_field_path) + jule::Str("\n", 1);
					}
					goto _match_end_5691300272;
					_case_end_5691300592:;
					_match_end_5691300272:;
				}
			}
			_iter_next_5691298592:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1514109b0_pkg = *__julec_range_begin; goto _iter_begin_5691298592; }
			_iter_end_5691298592:;
		}
	}
	{
		auto __julec_range_expr = _9618_ir->_field_used;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_150f26340_ImportInfo> _1514109b0_pkg = *__julec_range_begin;
			_iter_begin_5691302528:;
			{
				{
					if (!(((!(_1514109b0_pkg->_field_cpp_linked))))) { goto _case_end_5691305440; }
					_case_begin_5691305440:;
					{
						goto _iter_next_5691302528;
					}
					goto _match_end_5691305248;
					_case_end_5691305440:;
					if (!((_1514109b0_is_cpp_header_file(_1514109b0_pkg->_field_path)))) { goto _case_end_5691305568; }
					_case_begin_5691305568:;
					{
						_9713_obj+=(jule::Str("#include \"", 10) + _1514109b0_pkg->_field_path) + jule::Str("\"\n", 2);
					}
					goto _match_end_5691305248;
					_case_end_5691305568:;
					_match_end_5691305248:;
				}
			}
			_iter_next_5691302528:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1514109b0_pkg = *__julec_range_begin; goto _iter_begin_5691302528; }
			_iter_end_5691302528:;
		}
	}
	return _9713_obj;
}



inline jule::Str _1514109b0_gen_fn_result(jule::Ref<_15081bcd0_Fn> _12122_f) {
	if (_12122_f->_method_is_void()) {
		return jule::Str("void", 4);
	}
	return _151c417b0_gen_type_kind(_12122_f->_field_result->_field_kind->_field_kind);
}



inline jule::Str _1514109b0_gen_fn_ins_result(jule::Ref<_15081bcd0_FnIns> _12926_f) {
	if (_12926_f->_field_decl->_method_is_void()) {
		return jule::Str("void", 4);
	}
	return _151c417b0_gen_type_kind(_12926_f->_field_result);
}



inline jule::Str _1514109b0_gen_param_prototype(jule::Ref<_15081bcd0_Param> _13728_p) {
	jule::Str _13813_obj = jule::Str("", 0);
	if (_13728_p->_field_variadic) {
		_13813_obj+=_151c17930_as_jt(jule::Str("slice", 5));
		_13813_obj+=jule::Str("<", 1);
		_13813_obj+=_151c417b0_gen_type_kind(_13728_p->_field_kind->_field_kind);
		_13813_obj+=jule::Str(">", 1);
	} else {
		_13813_obj+=_151c417b0_gen_type_kind(_13728_p->_field_kind->_field_kind);
	}
	return _13813_obj;
}



inline jule::Str _1514109b0_gen_param_ins(jule::Ref<_15081bcd0_ParamIns> _15122_p) {
	jule::Str _15213_obj = _1514109b0_gen_param_ins_prototype(_15122_p);
	_15213_obj+=jule::Str(" ", 1);
	_15213_obj+=_151c17930_param_out_ident(_15122_p->_field_decl);
	return _15213_obj;
}



inline jule::Str _1514109b0_gen_param_ins_prototype(jule::Ref<_15081bcd0_ParamIns> _15932_p) {
	jule::Str _16013_obj = jule::Str("", 0);
	if (_15932_p->_field_decl->_field_variadic) {
		_16013_obj+=_151c17930_as_jt(jule::Str("slice", 5));
		_16013_obj+=jule::Str("<", 1);
		_16013_obj+=_151c417b0_gen_type_kind(_15932_p->_field_kind);
		_16013_obj+=jule::Str(">", 1);
	} else {
		_16013_obj+=_151c417b0_gen_type_kind(_15932_p->_field_kind);
	}
	if (_15932_p->_field_decl->_field_reference) {
		_16013_obj+=jule::Str("&", 1);
	}
	return _16013_obj;
}



inline jule::Str _1514109b0_gen_param(jule::Ref<_15081bcd0_Param> _17818_p) {
	jule::Str _17913_obj = _1514109b0_gen_param_prototype(_17818_p);
	if (((_17818_p->_field_ident != jule::Str("", 0)) && (!(_150640f50_is_ignore_ident(_17818_p->_field_ident)))) && (!(_150640f50_is_anon_ident(_17818_p->_field_ident)))) {
		_17913_obj+=jule::Str(" ", 1) + _151c17930_param_out_ident(_17818_p);
	}
	return _17913_obj;
}



inline jule::Str _1514109b0_gen_params(jule::Slice<jule::Ref<_15081bcd0_Param>> _18719_params) {
	{
		if (!((_18719_params.len() == 0LL))) { goto _case_end_5691334432; }
		_case_begin_5691334432:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_5691334272;
		_case_end_5691334432:;
		if (!(((_18719_params.len() == 1LL) && _18719_params[0LL]->_method_is_self()))) { goto _case_end_5691334560; }
		_case_begin_5691334560:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_5691334272;
		_case_end_5691334560:;
		_match_end_5691334272:;
	}
	jule::Str _19613_obj = jule::Str("(", 1);
	{
		auto __julec_range_expr = _18719_params;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_15081bcd0_Param> _1514109b0_p = *__julec_range_begin;
			_iter_begin_5691338192:;
			{
				if ((!(_1514109b0_p->_method_is_self()))) {
					_19613_obj+=_1514109b0_gen_param(_1514109b0_p) + jule::Str(",", 1);
				}
			}
			_iter_next_5691338192:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1514109b0_p = *__julec_range_begin; goto _iter_begin_5691338192; }
			_iter_end_5691338192:;
		}
	}
	_19613_obj=_19613_obj.slice(0LL,static_cast<jule::Int>(_19613_obj.len() - 1LL));
	return _19613_obj + jule::Str(")", 1);
}



inline jule::Str _1514109b0_gen_params_ins(jule::Slice<jule::Ref<_15081bcd0_ParamIns>> _20823_params) {
	{
		if (!((_20823_params.len() == 0LL))) { goto _case_end_5691343424; }
		_case_begin_5691343424:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_5691343280;
		_case_end_5691343424:;
		if (!(((_20823_params.len() == 1LL) && _20823_params[0LL]->_field_decl->_method_is_self()))) { goto _case_end_5691343536; }
		_case_begin_5691343536:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_5691343280;
		_case_end_5691343536:;
		_match_end_5691343280:;
	}
	jule::Str _21713_obj = jule::Str("(", 1);
	{
		auto __julec_range_expr = _20823_params;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_15081bcd0_ParamIns> _1514109b0_p = *__julec_range_begin;
			_iter_begin_5691347392:;
			{
				if ((!(_1514109b0_p->_field_decl->_method_is_self()))) {
					_21713_obj+=_1514109b0_gen_param_ins(_1514109b0_p) + jule::Str(",", 1);
				}
			}
			_iter_next_5691347392:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1514109b0_p = *__julec_range_begin; goto _iter_begin_5691347392; }
			_iter_end_5691347392:;
		}
	}
	_21713_obj=_21713_obj.slice(0LL,static_cast<jule::Int>(_21713_obj.len() - 1LL));
	return _21713_obj + jule::Str(")", 1);
}



inline jule::Str _1514109b0_gen_params_prototypes(jule::Slice<jule::Ref<_15081bcd0_ParamIns>> _23030_params) {
	{
		if (!((_23030_params.len() == 0LL))) { goto _case_end_5691352400; }
		_case_begin_5691352400:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_5691349280;
		_case_end_5691352400:;
		if (!(((_23030_params.len() == 1LL) && _23030_params[0LL]->_field_decl->_method_is_self()))) { goto _case_end_5691353024; }
		_case_begin_5691353024:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_5691349280;
		_case_end_5691353024:;
		_match_end_5691349280:;
	}
	jule::Str _23913_obj = jule::Str("(", 1);
	{
		auto __julec_range_expr = _23030_params;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_15081bcd0_ParamIns> _1514109b0_p = *__julec_range_begin;
			_iter_begin_5691356816:;
			{
				if ((!(_1514109b0_p->_field_decl->_method_is_self()))) {
					_23913_obj+=_1514109b0_gen_param_ins_prototype(_1514109b0_p) + jule::Str(",", 1);
				}
			}
			_iter_next_5691356816:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1514109b0_p = *__julec_range_begin; goto _iter_begin_5691356816; }
			_iter_end_5691356816:;
		}
	}
	_23913_obj=_23913_obj.slice(0LL,static_cast<jule::Int>(_23913_obj.len() - 1LL));
	return _23913_obj + jule::Str(")", 1);
}



inline jule::Str _1514109b0_gen_trait(jule::Ref<_150f166e0_Trait> _25218_t) {
	
	jule::Str _2549_outid = _151c17930_trait_out_ident(_25218_t);
	jule::Str _25613_obj = jule::Str("struct ", 7);
	_25613_obj+=_2549_outid;
	_25613_obj+=jule::Str(" {\n", 3);
	_25613_obj+=jule::Str("\t", 1);
	_25613_obj+=jule::Str("virtual ~", 9);
	_25613_obj+=_2549_outid;
	_25613_obj+=jule::Str("(void) {}\n\n", 11);
	{
		auto __julec_range_expr = _25218_t->_field_methods;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_15081bcd0_Fn> _1514109b0_f = *__julec_range_begin;
			_iter_begin_5691365776:;
			{
				_25613_obj+=jule::Str("\t", 1);
				_25613_obj+=jule::Str("virtual ", 8);
				_25613_obj+=_1514109b0_gen_fn_result(_1514109b0_f);
				_25613_obj+=jule::Str(" _method_", 9);
				_25613_obj+=_1514109b0_f->_field_ident;
				_25613_obj+=_1514109b0_gen_params(_1514109b0_f->_field_params);
				_25613_obj+=jule::Str(" {", 2);
				if ((!(_1514109b0_f->_method_is_void()))) {
					_25613_obj+=jule::Str(" return {}; ", 12);
				}
				_25613_obj+=jule::Str("}\n", 2);
			}
			_iter_next_5691365776:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1514109b0_f = *__julec_range_begin; goto _iter_begin_5691365776; }
			_iter_end_5691365776:;
		}
	}
	_25613_obj+=jule::Str("};", 2);
	return _25613_obj;
}



inline jule::Str _1514109b0_gen_traits_tbl(jule::Ref<_15128c4d0_SymbolTable> _28123_tbl) {
	jule::Str _28213_obj = jule::Str("", 0);
	jule::Int _28313_i = 0LL;
	_iter_begin_5691374272:;
	if (!(_28313_i < _28123_tbl->_field_traits._method_len())) { goto _iter_end_5691374272; }
	{
		jule::Ref<_150f166e0_Trait> _28517_t = _28123_tbl->_field_traits._method_at(_28313_i);
		_28213_obj+=_1514109b0_gen_trait(_28517_t) + jule::Str("\n\n", 2);
	}
	_iter_next_5691374272:;
	(_28313_i)++;
	goto _iter_begin_5691374272;
	_iter_end_5691374272:;
	return _28213_obj;
}



inline jule::Str _1514109b0_gen_traits_pkg(jule::Ref<_150f26340_Package> _29223_pkg) {
	jule::Str _29313_obj = jule::Str("", 0);
	{
		auto __julec_range_expr = _29223_pkg->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_15128c4d0_SymbolTable> _1514109b0_tbl = *__julec_range_begin;
			_iter_begin_5691379808:;
			{
				_29313_obj+=_1514109b0_gen_traits_tbl(_1514109b0_tbl);
			}
			_iter_next_5691379808:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1514109b0_tbl = *__julec_range_begin; goto _iter_begin_5691379808; }
			_iter_end_5691379808:;
		}
	}
	return _29313_obj;
}



inline jule::Str _1514109b0_gen_traits(jule::Ref<_1501d9900_IR> _30119_ir) {
	jule::Str _30213_obj = jule::Str("", 0);
	{
		auto __julec_range_expr = _30119_ir->_field_used;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_150f26340_ImportInfo> _1514109b0_u = *__julec_range_begin;
			_iter_begin_5691383360:;
			{
				if ((!(_1514109b0_u->_field_cpp_linked))) {
					_30213_obj+=_1514109b0_gen_traits_pkg(_1514109b0_u->_field_package);
				}
			}
			_iter_next_5691383360:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1514109b0_u = *__julec_range_begin; goto _iter_begin_5691383360; }
			_iter_end_5691383360:;
		}
	}
	_30213_obj+=_1514109b0_gen_traits_pkg(_30119_ir->_field_main);
	return _30213_obj;
}



inline jule::Str _1514109b0_gen_trait_prototype(jule::Ref<_150f166e0_Trait> _31324_t) {
	return (jule::Str("struct ", 7) + _151c17930_trait_out_ident(_31324_t)) + jule::Str(";", 1);
}



inline jule::Str _1514109b0_gen_trait_prototypes(jule::Ref<_150f26340_Package> _31829_p) {
	jule::Str _31913_obj = jule::Str("", 0);
	{
		auto __julec_range_expr = _31829_p->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_15128c4d0_SymbolTable> _1514109b0_f = *__julec_range_begin;
			_iter_begin_5691390304:;
			{
				jule::Int _32117_i = 0LL;
				_iter_begin_5691392112:;
				if (!(_32117_i < _1514109b0_f->_field_traits._method_len())) { goto _iter_end_5691392112; }
				{
					jule::Ref<_150f166e0_Trait> _32317_t = _1514109b0_f->_field_traits._method_at(_32117_i);
					if (_32317_t->_field_token._field_id != 0LLU) {
						_31913_obj+=_1514109b0_gen_trait_prototype(_32317_t) + jule::Str("\n", 1);
					}
				}
				_iter_next_5691392112:;
				(_32117_i)++;
				goto _iter_begin_5691392112;
				_iter_end_5691392112:;
			}
			_iter_next_5691390304:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1514109b0_f = *__julec_range_begin; goto _iter_begin_5691390304; }
			_iter_end_5691390304:;
		}
	}
	return _31913_obj;
}



inline jule::Str _1514109b0_gen_struct_plain_prototype(jule::Ref<_150a13110_Struct> _33331_s) {
	jule::Str _33413_obj = jule::Str("", 0);
	{
		auto __julec_range_expr = _33331_s->_field_instances;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_150a13110_StructIns> _1514109b0_ins = *__julec_range_begin;
			_iter_begin_5691398608:;
			{
				_33413_obj+=jule::Str("\nstruct ", 8);
				_33413_obj+=_151c17930_struct_ins_out_ident(_1514109b0_ins);
				_33413_obj+=jule::Str(";", 1);
				_33413_obj+=jule::Str("\n", 1);
			}
			_iter_next_5691398608:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1514109b0_ins = *__julec_range_begin; goto _iter_begin_5691398608; }
			_iter_end_5691398608:;
		}
	}
	return _33413_obj;
}



inline jule::Str _1514109b0_gen_struct_plain_prototypes(jule::Slice<jule::Ref<_150a13110_Struct>> _34536_structs) {
	jule::Str _34613_obj = jule::Str("", 0);
	{
		auto __julec_range_expr = _34536_structs;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_150a13110_Struct> _1514109b0_s = *__julec_range_begin;
			_iter_begin_5691402832:;
			{
				if ((!(_1514109b0_s->_field_cpp_linked)) && (_1514109b0_s->_field_token._field_id != 0LLU)) {
					_34613_obj+=_1514109b0_gen_struct_plain_prototype(_1514109b0_s) + jule::Str("\n", 1);
				}
			}
			_iter_next_5691402832:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1514109b0_s = *__julec_range_begin; goto _iter_begin_5691402832; }
			_iter_end_5691402832:;
		}
	}
	return _34613_obj;
}



inline jule::Str _1514109b0_gen_struct_traits(jule::Ref<_150a13110_Struct> _35622_s) {
	if (_35622_s->_field_implements.len() == 0LL) {
		return jule::Str("", 0);
	}
	jule::Str _36113_obj = jule::Str(": ", 2);
	{
		auto __julec_range_expr = _35622_s->_field_implements;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_150f166e0_Trait> _1514109b0_i = *__julec_range_begin;
			_iter_begin_5691409216:;
			{
				_36113_obj+=jule::Str("public ", 7);
				_36113_obj+=_151c17930_trait_out_ident(_1514109b0_i);
				_36113_obj+=jule::Str(",", 1);
			}
			_iter_next_5691409216:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1514109b0_i = *__julec_range_begin; goto _iter_begin_5691409216; }
			_iter_end_5691409216:;
		}
	}
	_36113_obj=_36113_obj.slice(0LL,static_cast<jule::Int>(_36113_obj.len() - 1LL));
	return _36113_obj;
}



inline jule::Str _1514109b0_gen_field_decl(jule::Ref<_150a13110_FieldIns> _37223_f) {
	jule::Str _37313_obj = _151c417b0_gen_type_kind(_37223_f->_field_kind) + jule::Str(" ", 1);
	_37313_obj+=_151c17930_field_out_ident(_37223_f->_field_decl);
	_37313_obj+=(jule::Str("{", 1) + _1517eb830_get_init_expr(_37223_f->_field_kind)) + jule::Str("}", 1);
	_37313_obj+=jule::Str(";", 1);
	return _37313_obj;
}



inline jule::Str _1514109b0_gen_struct_self_field_type_kind(jule::Ref<_150a13110_StructIns> _38140_s) {
	return _151c417b0_as_ref_kind(_151c417b0_gen_struct_kind_ins(_38140_s));
}



inline jule::Str _1514109b0_gen_struct_self_field(jule::Ref<_150a13110_StructIns> _38630_s) {
	jule::Str _38713_obj = _1514109b0_gen_struct_self_field_type_kind(_38630_s);
	_38713_obj+=jule::Str(" self{};", 8);
	return _38713_obj;
}



inline jule::Str _1514109b0_gen_struct_self_field_init_st(jule::Ref<_150a13110_StructIns> _39238_s) {
	jule::Str _39313_obj = jule::Str("this->self = ", 13);
	_39313_obj+=_1514109b0_gen_struct_self_field_type_kind(_39238_s);
	_39313_obj+=jule::Str("::make(this, nullptr);", 22);
	return _39313_obj;
}



inline jule::Str _1514109b0_gen_struct_constructor(jule::Ref<_150a13110_StructIns> _39931_s) {
	jule::Str _40013_obj = _151c17930_struct_ins_out_ident(_39931_s);
	_40013_obj+=jule::Str("(", 1);
	if (_39931_s->_field_fields.len() > 0LL) {
		{
			auto __julec_range_expr = _39931_s->_field_fields;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_150a13110_FieldIns> _1514109b0_f = *__julec_range_begin;
				_iter_begin_5691425968:;
				{
					_40013_obj+=_151c417b0_gen_type_kind(_1514109b0_f->_field_kind);
					_40013_obj+=(jule::Str(" __param_", 9) + _1514109b0_f->_field_decl->_field_ident) + jule::Str(", ", 2);
				}
				_iter_next_5691425968:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _1514109b0_f = *__julec_range_begin; goto _iter_begin_5691425968; }
				_iter_end_5691425968:;
			}
		}
		_40013_obj=_40013_obj.slice(0LL,static_cast<jule::Int>(_40013_obj.len() - 2LL));
	} else {
		_40013_obj+=jule::Str("void", 4);
	}
	_40013_obj+=jule::Str(") {\n", 4);
	_1514109b0_add_indent();
	_40013_obj+=_1514109b0_indent();
	_40013_obj+=_1514109b0_gen_struct_self_field_init_st(_39931_s);
	_40013_obj+=jule::Str("\n", 1);
	if (_39931_s->_field_fields.len() > 0LL) {
		{
			auto __julec_range_expr = _39931_s->_field_fields;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_150a13110_FieldIns> _1514109b0_f = *__julec_range_begin;
				_iter_begin_5691432752:;
				{
					_40013_obj+=jule::Str("\n", 1);
					_40013_obj+=_1514109b0_indent();
					_40013_obj+=jule::Str("this->", 6);
					_40013_obj+=_151c17930_field_out_ident(_1514109b0_f->_field_decl);
					_40013_obj+=jule::Str(" = ", 3);
					_40013_obj+=jule::Str("__param_", 8) + _1514109b0_f->_field_decl->_field_ident;
					_40013_obj+=jule::Str(";", 1);
				}
				_iter_next_5691432752:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _1514109b0_f = *__julec_range_begin; goto _iter_begin_5691432752; }
				_iter_end_5691432752:;
			}
		}
	}
	_1514109b0_done_indent();
	_40013_obj+=(jule::Str("\n", 1) + _1514109b0_indent()) + jule::Str("}", 1);
	return _40013_obj;
}



inline jule::Str _1514109b0_gen_struct_destructor(jule::Ref<_150a13110_StructIns> _43626_s) {
	jule::Str _43713_obj = jule::Str("~", 1);
	_43713_obj+=_151c17930_struct_ins_out_ident(_43626_s);
	_43713_obj+=jule::Str("(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }", 91);
	return _43713_obj;
}



inline jule::Str _1514109b0_gen_struct_operators(jule::Ref<_150a13110_StructIns> _44329_s) {
	jule::Str _4449_out_ident = _151c17930_struct_ins_out_ident(_44329_s);
	jule::Str _44513_obj = jule::Str("", 0);
	_44513_obj+=_1514109b0_indent();
	_44513_obj+=jule::Str("inline bool operator==(const ", 29);
	_44513_obj+=_4449_out_ident;
	_44513_obj+=jule::Str(" &_Src) const {", 15);
	if (_44329_s->_field_fields.len() > 0LL) {
		_1514109b0_add_indent();
		_44513_obj+=jule::Str("\n", 1);
		_44513_obj+=_1514109b0_indent();
		_44513_obj+=jule::Str("return ", 7);
		_1514109b0_add_indent();
		jule::Int _45717_n = 0LL;
		{
			auto __julec_range_expr = _44329_s->_field_fields;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_150a13110_FieldIns> _1514109b0_f = *__julec_range_begin;
				_iter_begin_5691448704:;
				{
					jule::Ref<_150a13110_StructIns> _46017_strct = _1514109b0_f->_field_kind->_method_strct();
					if ((jule::real(_46017_strct) && jule::real(_46017_strct->_field_decl)) && _46017_strct->_field_decl->_field_cpp_linked) {
						goto _iter_next_5691448704;
					}
					(_45717_n)++;
					_44513_obj+=jule::Str("\n", 1);
					_44513_obj+=_1514109b0_indent();
					_44513_obj+=jule::Str("this->", 6);
					jule::Str _46917_f_ident = _151c17930_field_out_ident(_1514109b0_f->_field_decl);
					_44513_obj+=_46917_f_ident;
					_44513_obj+=jule::Str(" == _Src.", 9);
					_44513_obj+=_46917_f_ident;
					_44513_obj+=jule::Str(" &&", 3);
				}
				_iter_next_5691448704:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _1514109b0_f = *__julec_range_begin; goto _iter_begin_5691448704; }
				_iter_end_5691448704:;
			}
		}
		_1514109b0_done_indent();
		if (_45717_n > 0LL) {
			_44513_obj=_44513_obj.slice(0LL,static_cast<jule::Int>(_44513_obj.len() - 3LL));
		} else {
			_44513_obj+=jule::Str("true", 4);
		}
		_44513_obj+=jule::Str(";\n", 2);
		_1514109b0_done_indent();
		_44513_obj+=_1514109b0_indent();
		_44513_obj+=jule::Str("}", 1);
	} else {
		_44513_obj+=jule::Str(" return true; }", 15);
	}
	_44513_obj+=jule::Str("\n\n", 2);
	_44513_obj+=_1514109b0_indent();
	_44513_obj+=jule::Str("inline bool operator!=(const ", 29);
	_44513_obj+=_4449_out_ident;
	_44513_obj+=jule::Str(" &_Src) const { return !this->operator==(_Src); }", 49);
	return _44513_obj;
}



inline jule::Str _1514109b0_gen_struct_derive_defs_prototypes(jule::Ref<_150a13110_StructIns> _49638_s) {
	jule::Str _49713_obj = jule::Str("", 0);
	if (_49638_s->_field_decl->_method_is_derives(jule::Str("Clone", 5))) {
		_49713_obj+=_1514109b0_indent();
		_49713_obj+=_151c170a0_get_derive_fn_decl_clone(_49638_s->_field_decl);
		_49713_obj+=jule::Str(";\n\n", 3);
	}
	return _49713_obj;
}



inline jule::Str _1514109b0_gen_struct_ins_prototype(jule::Ref<_150a13110_StructIns> _50833_s) {
	jule::Str _50913_obj = jule::Str("struct ", 7);
	jule::Str _5109_out_ident = _151c17930_struct_ins_out_ident(_50833_s);
	_50913_obj+=_5109_out_ident;
	_50913_obj+=_1514109b0_gen_struct_traits(_50833_s->_field_decl);
	_50913_obj+=jule::Str(" {\n", 3);
	_1514109b0_add_indent();
	_50913_obj+=_1514109b0_indent();
	_50913_obj+=_1514109b0_gen_struct_self_field(_50833_s);
	_50913_obj+=jule::Str("\n\n", 2);
	if (_50833_s->_field_fields.len() > 0LL) {
		{
			auto __julec_range_expr = _50833_s->_field_fields;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_150a13110_FieldIns> _1514109b0_f = *__julec_range_begin;
				_iter_begin_5691474672:;
				{
					_50913_obj+=_1514109b0_indent();
					_50913_obj+=_1514109b0_gen_field_decl(_1514109b0_f);
					_50913_obj+=jule::Str("\n", 1);
				}
				_iter_next_5691474672:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _1514109b0_f = *__julec_range_begin; goto _iter_begin_5691474672; }
				_iter_end_5691474672:;
			}
		}
		_50913_obj+=jule::Str("\n\n", 2);
		_50913_obj+=_1514109b0_indent();
		_50913_obj+=_1514109b0_gen_struct_constructor(_50833_s);
		_50913_obj+=jule::Str("\n\n", 2);
	}
	_50913_obj+=_1514109b0_indent();
	_50913_obj+=_1514109b0_gen_struct_destructor(_50833_s);
	_50913_obj+=jule::Str("\n\n", 2);
	_50913_obj+=_1514109b0_indent();
	_50913_obj+=_5109_out_ident;
	_50913_obj+=jule::Str("(void) { ", 9);
	_50913_obj+=_1514109b0_gen_struct_self_field_init_st(_50833_s);
	_50913_obj+=jule::Str(" }\n\n", 4);
	{
		auto __julec_range_expr = _50833_s->_field_methods;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_15081bcd0_Fn> _1514109b0_f = *__julec_range_begin;
			_iter_begin_5691473552:;
			{
				jule::Str _54317_proto = _1514109b0_gen_fn_prototype(_1514109b0_f,true);
				if (_1514109b0_f->_field_statically) {
					_54317_proto=(_1514109b0_indent() + jule::Str("static ", 7)) + _54317_proto.trim(jule::Str("\t ", 2));
				}
				_50913_obj+=_54317_proto;
				_50913_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_5691473552:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1514109b0_f = *__julec_range_begin; goto _iter_begin_5691473552; }
			_iter_end_5691473552:;
		}
	}
	_50913_obj+=_1514109b0_gen_struct_derive_defs_prototypes(_50833_s);
	_50913_obj+=_1514109b0_gen_struct_operators(_50833_s);
	_50913_obj+=jule::Str("\n", 1);
	_1514109b0_done_indent();
	_50913_obj+=_1514109b0_indent() + jule::Str("};", 2);
	return _50913_obj;
}



inline jule::Str _1514109b0_gen_struct_prototype(jule::Ref<_150a13110_Struct> _56229_s) {
	jule::Str _56313_obj = jule::Str("", 0);
	{
		auto __julec_range_expr = _56229_s->_field_instances;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_150a13110_StructIns> _1514109b0_ins = *__julec_range_begin;
			_iter_begin_5691489488:;
			{
				_56313_obj+=_1514109b0_gen_struct_ins_prototype(_1514109b0_ins) + jule::Str("\n\n", 2);
			}
			_iter_next_5691489488:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1514109b0_ins = *__julec_range_begin; goto _iter_begin_5691489488; }
			_iter_end_5691489488:;
		}
	}
	return _56313_obj;
}



inline jule::Str _1514109b0_gen_struct_prototypes(jule::Slice<jule::Ref<_150a13110_Struct>> _57130_structs) {
	jule::Str _57213_obj = jule::Str("", 0);
	{
		auto __julec_range_expr = _57130_structs;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_150a13110_Struct> _1514109b0_s = *__julec_range_begin;
			_iter_begin_5691493136:;
			{
				if ((!(_1514109b0_s->_field_cpp_linked)) && (_1514109b0_s->_field_token._field_id != 0LLU)) {
					_57213_obj+=_1514109b0_gen_struct_prototype(_1514109b0_s) + jule::Str("\n", 1);
				}
			}
			_iter_next_5691493136:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1514109b0_s = *__julec_range_begin; goto _iter_begin_5691493136; }
			_iter_end_5691493136:;
		}
	}
	return _57213_obj;
}



inline jule::Str _1514109b0_gen_fn_decl_head(jule::Ref<_15081bcd0_FnIns> _58125_f,jule::Bool _58136_method) {
	jule::Str _58213_obj = jule::Str("", 0);
	if ((!(_58125_f->_field_decl->_method_is_entry_point()))) {
		_58213_obj+=jule::Str("inline ", 7);
	}
	_58213_obj+=_1514109b0_gen_fn_ins_result(_58125_f) + jule::Str(" ", 1);
	if ((!(_58136_method)) && jule::real(_58125_f->_field_decl->_field_owner)) {
		_58213_obj+=_151c17930_struct_ins_out_ident(_58125_f->_field_owner) + jule::Str("::", 2);
	}
	_58213_obj+=_151c17930_fn_ins_out_ident(_58125_f);
	return _58213_obj;
}



inline jule::Str _1514109b0_gen_fn_prototype(jule::Ref<_15081bcd0_Fn> _59825_f,jule::Bool _59833_method) {
	jule::Str _59913_obj = jule::Str("", 0);
	{
		auto __julec_range_expr = _59825_f->_field_instances;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_15081bcd0_FnIns> _1514109b0_c = *__julec_range_begin;
			_iter_begin_5691505824:;
			{
				_59913_obj+=_1514109b0_indent();
				_59913_obj+=_1514109b0_gen_fn_decl_head(_1514109b0_c,_59833_method);
				_59913_obj+=_1514109b0_gen_params_prototypes(_1514109b0_c->_field_params);
				_59913_obj+=jule::Str(";\n", 2);
			}
			_iter_next_5691505824:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1514109b0_c = *__julec_range_begin; goto _iter_begin_5691505824; }
			_iter_end_5691505824:;
		}
	}
	return _59913_obj;
}



inline jule::Str _1514109b0_gen_fn_prototypes(jule::Ref<_150f26340_Package> _61026_pkg) {
	jule::Str _61113_obj = jule::Str("", 0);
	{
		auto __julec_range_expr = _61026_pkg->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_15128c4d0_SymbolTable> _1514109b0_file = *__julec_range_begin;
			_iter_begin_5691510720:;
			{
				jule::Int _61317_i = 0LL;
				_iter_begin_5691512544:;
				if (!(_61317_i < _1514109b0_file->_field_funcs._method_len())) { goto _iter_end_5691512544; }
				{
					jule::Ref<_15081bcd0_Fn> _61521_f = _1514109b0_file->_field_funcs._method_at(_61317_i);
					if ((!(_61521_f->_field_cpp_linked)) && (_61521_f->_field_token._field_id != 0LLU)) {
						_61113_obj+=_1514109b0_gen_fn_prototype(_61521_f,false);
					}
				}
				_iter_next_5691512544:;
				(_61317_i)++;
				goto _iter_begin_5691512544;
				_iter_end_5691512544:;
			}
			_iter_next_5691510720:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1514109b0_file = *__julec_range_begin; goto _iter_begin_5691510720; }
			_iter_end_5691510720:;
		}
	}
	return _61113_obj;
}



inline jule::Str _1514109b0_gen_prototypes(jule::Ref<_1501d9900_IR> _62523_ir,jule::Slice<jule::Ref<_150a13110_Struct>> _62536_structs) {
	jule::Str _62613_obj = jule::Str("", 0);
	{
		auto __julec_range_expr = _62523_ir->_field_used;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_150f26340_ImportInfo> _1514109b0_u = *__julec_range_begin;
			_iter_begin_5691520048:;
			{
				if ((!(_1514109b0_u->_field_cpp_linked))) {
					_62613_obj+=_1514109b0_gen_trait_prototypes(_1514109b0_u->_field_package);
				}
			}
			_iter_next_5691520048:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1514109b0_u = *__julec_range_begin; goto _iter_begin_5691520048; }
			_iter_end_5691520048:;
		}
	}
	_62613_obj+=_1514109b0_gen_trait_prototypes(_62523_ir->_field_main);
	_62613_obj+=_1514109b0_gen_struct_plain_prototypes(_62536_structs);
	_62613_obj+=_1514109b0_gen_traits(_62523_ir) + jule::Str("\n", 1);
	_62613_obj+=_1514109b0_gen_struct_prototypes(_62536_structs);
	{
		auto __julec_range_expr = _62523_ir->_field_used;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_150f26340_ImportInfo> _1514109b0_u = *__julec_range_begin;
			_iter_begin_5691524928:;
			{
				if ((!(_1514109b0_u->_field_cpp_linked))) {
					_62613_obj+=_1514109b0_gen_fn_prototypes(_1514109b0_u->_field_package);
				}
			}
			_iter_next_5691524928:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1514109b0_u = *__julec_range_begin; goto _iter_begin_5691524928; }
			_iter_end_5691524928:;
		}
	}
	_62613_obj+=_1514109b0_gen_fn_prototypes(_62523_ir->_field_main);
	return _62613_obj;
}



inline jule::Str _1514109b0_gen_var_init_expr(jule::Ref<_1511317d0_Var> _65326_v,jule::Str _65335_init) {
	jule::Str _65413_obj = jule::Str("", 0);
	if (_65326_v->_field_statically) {
		_65413_obj+=jule::Str("static ", 7);
	}
	_65413_obj+=_151c417b0_gen_type_kind(_65326_v->_field_kind->_field_kind) + jule::Str(" ", 1);
	if (_65326_v->_field_reference) {
		_65413_obj+=jule::Str("&", 1);
	}
	_65413_obj+=_151c17930_var_out_ident(_65326_v);
	if (_65335_init != jule::Str("", 0)) {
		_65413_obj+=jule::Str(" = ", 3) + _65335_init;
	}
	_65413_obj+=jule::Str(";", 1);
	return _65413_obj;
}



inline jule::Str _1514109b0_gen_var(jule::Ref<_1511317d0_Var> _67216_v) {
	if (_150640f50_is_ignore_ident(_67216_v->_field_ident)) {
		return jule::Str("", 0);
	}
	if (_67216_v->_field_constant) {
		return jule::Str("", 0);
	}
	if (jule::real(_67216_v->_field_value) && jule::real(_67216_v->_field_value->_field_expr)) {
		if (_67216_v->_field_value->_field_data->_field_model != nullptr) {
			return _1514109b0_gen_var_init_expr(_67216_v,_1517eb830_gen_val(_67216_v->_field_value));
		}
		return _1514109b0_gen_var_init_expr(_67216_v,jule::Str("", 0));
	}
	return _1514109b0_gen_var_init_expr(_67216_v,_1517eb830_get_init_expr(_67216_v->_field_kind->_field_kind));
}



inline jule::Str _1514109b0_gen_globals(jule::Slice<jule::Ref<_1511317d0_Var>> _69020_globals) {
	jule::Str _69113_obj = jule::Str("", 0);
	{
		auto __julec_range_expr = _69020_globals;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_1511317d0_Var> _1514109b0_v = *__julec_range_begin;
			_iter_begin_5691544720:;
			{
				if ((!(_1514109b0_v->_field_constant)) && (_1514109b0_v->_field_token._field_id != 0LLU)) {
					_69113_obj+=_1514109b0_gen_var(_1514109b0_v) + jule::Str("\n", 1);
				}
			}
			_iter_next_5691544720:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1514109b0_v = *__julec_range_begin; goto _iter_begin_5691544720; }
			_iter_end_5691544720:;
		}
	}
	return _69113_obj;
}



inline jule::Str _1514109b0_gen_fn(jule::Ref<_15081bcd0_Fn> _70315_f) {
	jule::Str _70413_obj = jule::Str("", 0);
	{
		auto __julec_range_expr = _70315_f->_field_instances;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_15081bcd0_FnIns> _1514109b0_ins = *__julec_range_begin;
			_iter_begin_5691549792:;
			{
				_70413_obj+=_1514109b0_gen_fn_decl_head(_1514109b0_ins,false);
				_70413_obj+=_1514109b0_gen_params_ins(_1514109b0_ins->_field_params) + jule::Str(" ", 1);
				_70413_obj+=_1517eb5a0_gen_fn_scope(_1514109b0_ins);
				_70413_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_5691549792:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1514109b0_ins = *__julec_range_begin; goto _iter_begin_5691549792; }
			_iter_end_5691549792:;
		}
	}
	return _70413_obj;
}



inline jule::Str _1514109b0_gen_pkg_fns(jule::Ref<_150f26340_Package> _71520_p) {
	jule::Str _71613_obj = jule::Str("", 0);
	{
		auto __julec_range_expr = _71520_p->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_15128c4d0_SymbolTable> _1514109b0_f = *__julec_range_begin;
			_iter_begin_5691555040:;
			{
				jule::Int _71817_i = 0LL;
				_iter_begin_5691556768:;
				if (!(_71817_i < _1514109b0_f->_field_funcs._method_len())) { goto _iter_end_5691556768; }
				{
					jule::Ref<_15081bcd0_Fn> _72021_f = _1514109b0_f->_field_funcs._method_at(_71817_i);
					if ((!(_72021_f->_field_cpp_linked)) && (_72021_f->_field_token._field_id != 0LLU)) {
						_71613_obj+=_1514109b0_gen_fn(_72021_f) + jule::Str("\n\n", 2);
					}
				}
				_iter_next_5691556768:;
				(_71817_i)++;
				goto _iter_begin_5691556768;
				_iter_end_5691556768:;
			}
			_iter_next_5691555040:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1514109b0_f = *__julec_range_begin; goto _iter_begin_5691555040; }
			_iter_end_5691555040:;
		}
	}
	return _71613_obj;
}



inline jule::Str _1514109b0_gen_struct_method_defs(jule::Ref<_150a13110_StructIns> _73031_s) {
	jule::Str _73113_obj = jule::Str("", 0);
	{
		auto __julec_range_expr = _73031_s->_field_methods;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_15081bcd0_Fn> _1514109b0_f = *__julec_range_begin;
			_iter_begin_5691563712:;
			{
				_73113_obj+=_1514109b0_indent();
				_73113_obj+=_1514109b0_gen_fn(_1514109b0_f);
				_73113_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_5691563712:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1514109b0_f = *__julec_range_begin; goto _iter_begin_5691563712; }
			_iter_end_5691563712:;
		}
	}
	return _73113_obj;
}



inline jule::Str _1514109b0_gen_struct_ostream(jule::Ref<_150a13110_StructIns> _74127_s) {
	jule::Str _74213_obj = jule::Str("", 0);
	_74213_obj+=_1514109b0_indent();
	_74213_obj+=jule::Str("std::ostream &operator<<(std::ostream &_Stream, const ", 54);
	_74213_obj+=_151c17930_struct_ins_out_ident(_74127_s);
	_74213_obj+=jule::Str(" &_Src) {\n", 10);
	_1514109b0_add_indent();
	_74213_obj+=_1514109b0_indent();
	_74213_obj+=jule::Str("_Stream << \"", 12);
	_74213_obj+=_74127_s->_field_decl->_field_ident;
	_74213_obj+=jule::Str("{\";\n", 4);
	{
		auto __julec_range_expr = _74127_s->_field_fields;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _1514109b0_i = 0;
			jule::Ref<_150a13110_FieldIns> _1514109b0_f = *__julec_range_begin;
			_iter_begin_5691571312:;
			{
				_74213_obj+=_1514109b0_indent();
				_74213_obj+=jule::Str("_Stream << \"", 12);
				_74213_obj+=_1514109b0_f->_field_decl->_field_ident;
				_74213_obj+=jule::Str(":", 1);
				jule::Ref<_150a13110_StructIns> _76013_strct = _1514109b0_f->_field_kind->_method_strct();
				if ((jule::real(_76013_strct) && jule::real(_76013_strct->_field_decl)) && _76013_strct->_field_decl->_field_cpp_linked) {
					_74213_obj+=(jule::Str(" cpp.", 5) + _151c17930_field_out_ident(_1514109b0_f->_field_decl)) + jule::Str("\"", 1);
				} else {
					_74213_obj+=jule::Str("\" << _Src.", 10);
					_74213_obj+=_151c17930_field_out_ident(_1514109b0_f->_field_decl);
				}
				if ((_1514109b0_i + 1LL) < _74127_s->_field_fields.len()) {
					_74213_obj+=jule::Str(" << \", \"", 8);
				}
				_74213_obj+=jule::Str(";\n", 2);
			}
			_iter_next_5691571312:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_1514109b0_i; _1514109b0_f = *__julec_range_begin; goto _iter_begin_5691571312; }
			_iter_end_5691571312:;
		}
	}
	_74213_obj+=_1514109b0_indent();
	_74213_obj+=jule::Str("_Stream << \"}\";\n", 16);
	_74213_obj+=_1514109b0_indent();
	_74213_obj+=jule::Str("return _Stream;\n", 16);
	_1514109b0_done_indent();
	_74213_obj+=_1514109b0_indent();
	_74213_obj+=jule::Str("}", 1);
	return _74213_obj;
}



inline jule::Str _1514109b0_gen_struct_derive_defs(jule::Ref<_150a13110_StructIns> _78331_s) {
	jule::Str _78413_obj = jule::Str("", 0);
	if (_78331_s->_field_decl->_method_is_derives(jule::Str("Clone", 5))) {
		_78413_obj+=_1514109b0_indent();
		_78413_obj+=_151c170a0_get_derive_fn_def_clone(_78331_s->_field_decl);
		_78413_obj+=jule::Str("{\n", 2);
		_1514109b0_add_indent();
		_78413_obj+=_1514109b0_indent();
		_78413_obj+=_151c417b0_gen_struct_kind_ins(_78331_s);
		_78413_obj+=jule::Str(" clone;\n", 8);
		{
			auto __julec_range_expr = _78331_s->_field_fields;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_150a13110_FieldIns> _1514109b0_f = *__julec_range_begin;
				_iter_begin_5691588880:;
				{
					jule::Str _79517_ident = _151c17930_field_out_ident(_1514109b0_f->_field_decl);
					_78413_obj+=_1514109b0_indent();
					_78413_obj+=jule::Str("clone.", 6);
					_78413_obj+=_79517_ident;
					_78413_obj+=jule::Str(" = jule::clone(this->", 21);
					_78413_obj+=_79517_ident;
					_78413_obj+=jule::Str(");\n", 3);
				}
				_iter_next_5691588880:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _1514109b0_f = *__julec_range_begin; goto _iter_begin_5691588880; }
				_iter_end_5691588880:;
			}
		}
		_78413_obj+=_1514109b0_indent();
		_78413_obj+=jule::Str("return clone;\n", 14);
		_1514109b0_done_indent();
		_78413_obj+=_1514109b0_indent();
		_78413_obj+=jule::Str("}", 1);
	}
	return _78413_obj;
}



inline jule::Str _1514109b0_gen_struct_ins(jule::Ref<_150a13110_StructIns> _81523_s) {
	jule::Str _81613_obj = _1514109b0_gen_struct_method_defs(_81523_s);
	_81613_obj+=jule::Str("\n\n", 2);
	_81613_obj+=_1514109b0_gen_struct_derive_defs(_81523_s);
	_81613_obj+=jule::Str("\n\n", 2);
	_81613_obj+=_1514109b0_gen_struct_ostream(_81523_s);
	return _81613_obj;
}



inline jule::Str _1514109b0_gen_struct(jule::Ref<_150a13110_Struct> _82519_s) {
	jule::Str _82613_obj = jule::Str("", 0);
	{
		auto __julec_range_expr = _82519_s->_field_instances;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_150a13110_StructIns> _1514109b0_ins = *__julec_range_begin;
			_iter_begin_5691599632:;
			{
				_82613_obj+=_1514109b0_gen_struct_ins(_1514109b0_ins) + jule::Str("\n\n", 2);
			}
			_iter_next_5691599632:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1514109b0_ins = *__julec_range_begin; goto _iter_begin_5691599632; }
			_iter_end_5691599632:;
		}
	}
	return _82613_obj;
}



inline jule::Str _1514109b0_gen_structs(jule::Slice<jule::Ref<_150a13110_Struct>> _83420_structs) {
	jule::Str _83513_obj = jule::Str("", 0);
	{
		auto __julec_range_expr = _83420_structs;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_150a13110_Struct> _1514109b0_s = *__julec_range_begin;
			_iter_begin_5691603280:;
			{
				if ((!(_1514109b0_s->_field_cpp_linked)) && (_1514109b0_s->_field_token._field_id != 0LLU)) {
					_83513_obj+=_1514109b0_gen_struct(_1514109b0_s);
					_83513_obj+=jule::Str("\n\n", 2);
				}
			}
			_iter_next_5691603280:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1514109b0_s = *__julec_range_begin; goto _iter_begin_5691603280; }
			_iter_end_5691603280:;
		}
	}
	return _83513_obj;
}



inline jule::Str _1514109b0_gen_fns(jule::Ref<_1501d9900_IR> _84616_ir) {
	jule::Str _84713_obj = jule::Str("", 0);
	{
		auto __julec_range_expr = _84616_ir->_field_used;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_150f26340_ImportInfo> _1514109b0_u = *__julec_range_begin;
			_iter_begin_5691608464:;
			{
				if ((!(_1514109b0_u->_field_cpp_linked))) {
					_84713_obj+=_1514109b0_gen_pkg_fns(_1514109b0_u->_field_package);
				}
			}
			_iter_next_5691608464:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1514109b0_u = *__julec_range_begin; goto _iter_begin_5691608464; }
			_iter_end_5691608464:;
		}
	}
	_84713_obj+=_1514109b0_gen_pkg_fns(_84616_ir->_field_main);
	return _84713_obj;
}



inline void _1514109b0_push_init(jule::Ref<_150f26340_Package> _85918_pkg,jule::Str& _85938_obj) {
	
	
	jule::Ref<_15081bcd0_Fn> _8639_f = _85918_pkg->_method_find_fn(jule::Str("init", 4),false);
	if ((!(jule::real(_8639_f)))) {
		return;
	}
	_85938_obj+=(jule::Str("\n\t", 2) + _151c17930_fn_out_ident(_8639_f)) + jule::Str("();", 3);
}



inline jule::Str _1514109b0_gen_init_caller(jule::Ref<_1501d9900_IR> _87224_ir) {
	jule::Str _87313_obj = jule::Str("void ", 5);
	_87313_obj+=jule::Str("__jule_call_initializers", 24);
	_87313_obj+=jule::Str("(void) {", 8);
	{
		auto __julec_range_expr = _87224_ir->_field_used;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_150f26340_ImportInfo> _1514109b0_u = *__julec_range_begin;
			_iter_begin_5691620000:;
			{
				if ((!(_1514109b0_u->_field_cpp_linked))) {
					_1514109b0_push_init(_1514109b0_u->_field_package,_87313_obj);
				}
			}
			_iter_next_5691620000:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1514109b0_u = *__julec_range_begin; goto _iter_begin_5691620000; }
			_iter_end_5691620000:;
		}
	}
	_1514109b0_push_init(_87224_ir->_field_main,_87313_obj);
	_87313_obj+=jule::Str("\n}", 2);
	return _87313_obj;
}



inline void _1514109b0_append_standard(jule::Str& _88829_obj_code,jule::Str _88844_compiler,jule::Str _88859_compiler_cmd) {
	struct JuleCompileTime _8899_time = time_now();
	jule::Str _89113_time_str = jule::Str("", 0);
	_89113_time_str+=_1500241f0_itoa(_8899_time.day);
	_89113_time_str+=jule::Str("/", 1);
	_89113_time_str+=_1500241f0_itoa(_8899_time.month);
	_89113_time_str+=jule::Str("/", 1);
	_89113_time_str+=_1500241f0_itoa(_8899_time.year);
	_89113_time_str+=jule::Str(" ", 1);
	_89113_time_str+=_1500241f0_itoa(_8899_time.hour);
	_89113_time_str+=jule::Str(".", 1);
	_89113_time_str+=_1500241f0_itoa(_8899_time.minute);
	_89113_time_str+=jule::Str(" (DD/MM/YYYY) (HH.MM)", 21);
	jule::Str _90313_s = jule::Str("", 0);
	_90313_s+=jule::Str("// Auto generated by JuleC.\n", 28);
	_90313_s+=jule::Str("// JuleC version: ", 18);
	_90313_s+=jule::Str("beta 0.0.4 master", 17);
	_90313_s+=jule::Str("\n", 1);
	_90313_s+=jule::Str("// Date: ", 9);
	_90313_s+=_89113_time_str;
	_90313_s+=jule::Str("\n//\n// Recommended Compile Command;\n// ", 39);
	_90313_s+=_88844_compiler;
	_90313_s+=jule::Str(" ", 1);
	_90313_s+=_88859_compiler_cmd;
	_90313_s+=jule::Str("\n\n#include \"", 12);
	_90313_s+=_157eb0090_PATH_API;
	_90313_s+=jule::Str("\"\n\n", 3);
	_90313_s+=_88829_obj_code;
	_90313_s+=jule::Str("\nint main(int argc, char *argv[], char *envp[]) {\n    std::set_terminate(&jule::terminate_handler);\n    jule::set_sig_handler(jule::signal_handler);\n    jule::setup_command_line_args(argc, argv);\n    jule::setup_environment_variables(envp);\n\n    __jule_call_initializers();\n    entry_point();\n\n    return EXIT_SUCCESS;\n}", 320);
	_88829_obj_code=_90313_s;
}



inline jule::Str _1514109b0_gen(jule::Ref<_1501d9900_IR> _93716_ir) {
	jule::Ref<_1514109b0_OrderedDecls> _93813_od = jule::new_struct<_1514109b0_OrderedDecls>(new( std::nothrow ) _1514109b0_OrderedDecls());
	_93813_od->_field_structs=_93716_ir->_method_get_all_structures();
	_151d3a7b0_order_structures(_93813_od->_field_structs);
	_93813_od->_field_globals=_93716_ir->_method_get_all_variables();
	_151d3a7b0_order_variables(_93813_od->_field_globals);
	jule::Str _94513_obj = jule::Str("", 0);
	_94513_obj+=_1514109b0_gen_links(_93716_ir) + jule::Str("\n", 1);
	_94513_obj+=_1514109b0_gen_prototypes(_93716_ir,_93813_od->_field_structs) + jule::Str("\n\n", 2);
	_94513_obj+=_1514109b0_gen_globals(_93813_od->_field_globals) + jule::Str("\n", 1);
	_94513_obj+=_1514109b0_gen_structs(_93813_od->_field_structs);
	_94513_obj+=_1514109b0_gen_fns(_93716_ir) + jule::Str("\n", 1);
	_94513_obj+=_1514109b0_gen_init_caller(_93716_ir) + jule::Str("\n", 1);
	return _94513_obj;
}



inline jule::Bool _151d3a7b0_is_struct_ordered(jule::Slice<jule::Ref<_150a13110_Struct>> _822_structs,jule::Ref<_150a13110_Struct> _842_s) {
	{
		auto __julec_range_expr = _842_s->_field_depends;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_150a13110_Struct> _151d3a7b0_d = *__julec_range_begin;
			_iter_begin_5691652384:;
			{
				{
					auto __julec_range_expr = _822_structs;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Ref<_150a13110_Struct> _151d3a7b0_ss = *__julec_range_begin;
						_iter_begin_5691654080:;
						{
							if ((_151d3a7b0_ss).alloc == (_842_s).alloc) {
								return false;
							} else if ((_151d3a7b0_ss).alloc == (_151d3a7b0_d).alloc) {
								goto _iter_end_5691654080;
							}
						}
						_iter_next_5691654080:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { _151d3a7b0_ss = *__julec_range_begin; goto _iter_begin_5691654080; }
						_iter_end_5691654080:;
					}
				}
			}
			_iter_next_5691652384:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _151d3a7b0_d = *__julec_range_begin; goto _iter_begin_5691652384; }
			_iter_end_5691652384:;
		}
	}
	return true;
}



inline void _151d3a7b0_order_structures(jule::Slice<jule::Ref<_150a13110_Struct>> _2425_structs) {
	jule::I64 _259_n = _2425_structs.len();
	jule::Int _2613_i = 0LL;
	_iter_begin_5691658528:;
	if (!(_2613_i < _259_n)) { goto _iter_end_5691658528; }
	{
		jule::Bool _2817_swapped = false;
		jule::Int _3017_j = 0LL;
		_iter_begin_5691661392:;
		if (!(_3017_j < ((_259_n - _2613_i) - 1LL))) { goto _iter_end_5691661392; }
		{
			if (_2425_structs[static_cast<jule::Int>(_3017_j)]->_field_depends.len() > 1LL) {
				std::tie(_2425_structs[static_cast<jule::Int>(_3017_j)],_2425_structs[static_cast<jule::Int>(_3017_j + 1LL)]) = std::make_tuple(_2425_structs[static_cast<jule::Int>(_3017_j + 1LL)],_2425_structs[static_cast<jule::Int>(_3017_j)]);
				_2817_swapped=true;
			}
		}
		_iter_next_5691661392:;
		(_3017_j)++;
		goto _iter_begin_5691661392;
		_iter_end_5691661392:;
		if ((!(_2817_swapped))) {
			goto _iter_end_5691658528;
		}
	}
	_iter_next_5691658528:;
	(_2613_i)++;
	goto _iter_begin_5691658528;
	_iter_end_5691658528:;
	_2613_i=0LL;
	_iter_begin_5691658800:;
	if (!(_2613_i < _259_n)) { goto _iter_end_5691658800; }
	{
		jule::Bool _4517_swapped = false;
		jule::Int _4717_j = 0LL;
		_iter_begin_5691659104:;
		if (!(_4717_j < ((_259_n - _2613_i) - 1LL))) { goto _iter_end_5691659104; }
		{
			if ((!(_151d3a7b0_is_struct_ordered(_2425_structs,_2425_structs[static_cast<jule::Int>(_4717_j)])))) {
				std::tie(_2425_structs[static_cast<jule::Int>(_4717_j)],_2425_structs[static_cast<jule::Int>(_4717_j + 1LL)]) = std::make_tuple(_2425_structs[static_cast<jule::Int>(_4717_j + 1LL)],_2425_structs[static_cast<jule::Int>(_4717_j)]);
				_4517_swapped=true;
			}
		}
		_iter_next_5691659104:;
		(_4717_j)++;
		goto _iter_begin_5691659104;
		_iter_end_5691659104:;
		if ((!(_4517_swapped))) {
			goto _iter_end_5691658800;
		}
	}
	_iter_next_5691658800:;
	(_2613_i)++;
	goto _iter_begin_5691658800;
	_iter_end_5691658800:;
}



inline jule::Bool _151d3a7b0_is_var_ordered(jule::Slice<jule::Ref<_1511317d0_Var>> _6219_vars,jule::Ref<_1511317d0_Var> _6233_v) {
	{
		auto __julec_range_expr = _6233_v->_field_depends;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_1511317d0_Var> _151d3a7b0_d = *__julec_range_begin;
			_iter_begin_5691694768:;
			{
				{
					auto __julec_range_expr = _6219_vars;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Ref<_1511317d0_Var> _151d3a7b0_vv = *__julec_range_begin;
						_iter_begin_5691696464:;
						{
							if ((_151d3a7b0_vv).alloc == (_6233_v).alloc) {
								return false;
							} else if ((_151d3a7b0_vv).alloc == (_151d3a7b0_d).alloc) {
								goto _iter_end_5691696464;
							}
						}
						_iter_next_5691696464:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { _151d3a7b0_vv = *__julec_range_begin; goto _iter_begin_5691696464; }
						_iter_end_5691696464:;
					}
				}
			}
			_iter_next_5691694768:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _151d3a7b0_d = *__julec_range_begin; goto _iter_begin_5691694768; }
			_iter_end_5691694768:;
		}
	}
	return true;
}



inline void _151d3a7b0_order_variables(jule::Slice<jule::Ref<_1511317d0_Var>> _7824_vars) {
	jule::I64 _799_n = _7824_vars.len();
	jule::Int _8013_i = 0LL;
	_iter_begin_5691700912:;
	if (!(_8013_i < _799_n)) { goto _iter_end_5691700912; }
	{
		jule::Bool _8217_swapped = false;
		jule::Int _8417_j = 0LL;
		_iter_begin_5691703776:;
		if (!(_8417_j < ((_799_n - _8013_i) - 1LL))) { goto _iter_end_5691703776; }
		{
			if ((!(_151d3a7b0_is_var_ordered(_7824_vars,_7824_vars[static_cast<jule::Int>(_8417_j)])))) {
				std::tie(_7824_vars[static_cast<jule::Int>(_8417_j)],_7824_vars[static_cast<jule::Int>(_8417_j + 1LL)]) = std::make_tuple(_7824_vars[static_cast<jule::Int>(_8417_j + 1LL)],_7824_vars[static_cast<jule::Int>(_8417_j)]);
				_8217_swapped=true;
			}
		}
		_iter_next_5691703776:;
		(_8417_j)++;
		goto _iter_begin_5691703776;
		_iter_end_5691703776:;
		if ((!(_8217_swapped))) {
			goto _iter_end_5691700912;
		}
	}
	_iter_next_5691700912:;
	(_8013_i)++;
	goto _iter_begin_5691700912;
	_iter_end_5691700912:;
}



inline jule::Str _157e094f0_str_repeat(jule::Str _3515_sub,jule::Int _3529_n) {
	if (_3529_n == 0LL) {
		return jule::Str("", 0);
	}
	jule::Str _4013_s = jule::Str("", 0);
	_iter_begin_5691803376:;
	if (!(_3529_n > 0LL)) { goto _iter_end_5691803376; }
	{
		_4013_s+=_3515_sub;
	}
	_iter_next_5691803376:;
	(_3529_n)--;
	goto _iter_begin_5691803376;
	_iter_end_5691803376:;
	return _4013_s;
}



inline void _157e094f0_print_error_message(jule::Str _4724_msg) {
	jule::outln(_4724_msg);
}



inline void _157e094f0_help(void) {
	if (_147e65dd0_ARGS.len() > 2LL) {
		_157e094f0_print_error_message(jule::Str("invalid command: ", 17) + _147e65dd0_ARGS[2LL]);
		return;
	}
	jule::I64 _5613_max = _157e094f0_HELP_MAP[0LL][0LL].len();
	{
		auto __julec_range_expr = _157e094f0_HELP_MAP;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Array<jule::Str,2> _157e094f0_k = *__julec_range_begin;
			_iter_begin_5691810848:;
			{
				jule::I64 _5813_n = _157e094f0_k[0LL].len();
				if (_5813_n > _5613_max) {
					_5613_max=_5813_n;
				}
			}
			_iter_next_5691810848:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _157e094f0_k = *__julec_range_begin; goto _iter_begin_5691810848; }
			_iter_end_5691810848:;
		}
	}
	jule::Str _6413_s = jule::Str("", 0);
	
	{
		auto __julec_range_expr = _157e094f0_HELP_MAP;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _157e094f0_i = 0;
			jule::Array<jule::Str,2> _157e094f0_part = *__julec_range_begin;
			_iter_begin_5691815776:;
			{
				_6413_s+=_157e094f0_part[0LL];
				_6413_s+=_157e094f0_str_repeat(jule::Str(" ", 1),static_cast<jule::I64>((_5613_max - _157e094f0_part[0LL].len()) + 5LL));
				_6413_s+=_157e094f0_part[1LL];
				if ((_157e094f0_i + 1LL) < 4LL) {
					_6413_s+=jule::Str("\n", 1);
				}
			}
			_iter_next_5691815776:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_157e094f0_i; _157e094f0_part = *__julec_range_begin; goto _iter_begin_5691815776; }
			_iter_end_5691815776:;
		}
	}
	jule::outln(_6413_s);
}



inline void _157e094f0_version(void) {
	if (_147e65dd0_ARGS.len() > 2LL) {
		_157e094f0_print_error_message(jule::Str("invalid command: ", 17) + _147e65dd0_ARGS[2LL]);
		return;
	}
	jule::out(jule::Str("julec version ", 14));
	jule::outln(jule::Str("beta 0.0.4 master", 17));
}



inline void _157e094f0_tool_distos(void) {
	jule::out(jule::Str("supported operating systems:\n ", 30));
	{
		auto __julec_range_expr = _157eacb90_DISTOS;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _157e094f0_os = *__julec_range_begin;
			_iter_begin_5691824432:;
			{
				jule::out(_157e094f0_os);
				jule::out(jule::Str(" ", 1));
			}
			_iter_next_5691824432:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _157e094f0_os = *__julec_range_begin; goto _iter_begin_5691824432; }
			_iter_end_5691824432:;
		}
	}
	jule::outln(jule::Str("", 0));
}



inline void _157e094f0_tool_distarch(void) {
	jule::out(jule::Str("supported architects:\n ", 23));
	{
		auto __julec_range_expr = _157eacb90_DISTARCH;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _157e094f0_arch = *__julec_range_begin;
			_iter_begin_5691825856:;
			{
				jule::out(_157e094f0_arch);
				jule::out(jule::Str(" ", 1));
			}
			_iter_next_5691825856:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _157e094f0_arch = *__julec_range_begin; goto _iter_begin_5691825856; }
			_iter_end_5691825856:;
		}
	}
	jule::outln(jule::Str("", 0));
}



inline void _157e094f0_tool(void) {
	if (_147e65dd0_ARGS.len() == 2LL) {
		jule::outln(jule::Str("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;
	} else if (_147e65dd0_ARGS.len() > 3LL) {
		_157e094f0_print_error_message(jule::Str("invalid command: ", 17) + _147e65dd0_ARGS[3LL]);
		return;
	}
	jule::Str _1199_cmd = _147e65dd0_ARGS[2LL];
	{
		auto _match_expr{ _1199_cmd };
		if (!((jule::Str("distos", 6)) == _match_expr)) { goto _case_end_5691835536; }
		_case_begin_5691835536:;
		{
			_157e094f0_tool_distos();
		}
		goto _match_end_5691833888;
		_case_end_5691835536:;
		if (!((jule::Str("distarch", 8)) == _match_expr)) { goto _case_end_5691836544; }
		_case_begin_5691836544:;
		{
			_157e094f0_tool_distarch();
		}
		goto _match_end_5691833888;
		_case_end_5691836544:;
		_case_begin_5691834624:;
		{
			_157e094f0_print_error_message(jule::Str("Undefined command: ", 19) + _1199_cmd);
		}
		goto _match_end_5691833888;
		_case_end_5691834624:;
		_match_end_5691833888:;
	}
}



inline void _157e094f0_julenv(void) {
	jule::outln(jule::Str("julec version: beta 0.0.4 master", 32));
	jule::outln(jule::Str("architecture: amd64", 19));
	jule::outln(jule::Str("operating system: linux", 23));
}



inline jule::Bool _157e094f0_process_command(void) {
	{
		auto _match_expr{ _147e65dd0_ARGS[1LL] };
		if (!((jule::Str("help", 4)) == _match_expr)) { goto _case_end_5691840304; }
		_case_begin_5691840304:;
		{
			_157e094f0_help();
		}
		goto _match_end_5691837088;
		_case_end_5691840304:;
		if (!((jule::Str("version", 7)) == _match_expr)) { goto _case_end_5691840416; }
		_case_begin_5691840416:;
		{
			_157e094f0_version();
		}
		goto _match_end_5691837088;
		_case_end_5691840416:;
		if (!((jule::Str("tool", 4)) == _match_expr)) { goto _case_end_5691840528; }
		_case_begin_5691840528:;
		{
			_157e094f0_tool();
		}
		goto _match_end_5691837088;
		_case_end_5691840528:;
		if (!((jule::Str("julenv", 6)) == _match_expr)) { goto _case_end_5691841472; }
		_case_begin_5691841472:;
		{
			_157e094f0_julenv();
		}
		goto _match_end_5691837088;
		_case_end_5691841472:;
		_case_begin_5691839872:;
		{
			return false;
		}
		goto _match_end_5691837088;
		_case_end_5691839872:;
		_match_end_5691837088:;
	}
	return true;
}



inline void _157e094f0_init(void) {
	_157e24260_COMPILER=jule::Str("clang", 5);
	_157e24260_COMPILER_PATH=jule::Str("clang++", 7);
}



inline void _157e094f0_exit_err(jule::Str _15413_msg) {
	jule::outln(_15413_msg);
	_147ecb750_exit(1LL);
}



void entry_point(void) {
	julec_init();
	if (_147e65dd0_ARGS.len() < 2LL) {
		_147ecb750_exit(0LL);
	}
	if (_157e094f0_process_command()) {
		return;
	}
	_157e24260_compile_command();
}



inline jule::Int _157e24260_system(jule::Str _6711_cmd) {
	return static_cast<jule::Int>(static_cast<jule::Int>(system(((char*)((&(_6711_cmd[0LL])))))));
}



inline std::tuple<jule::Str,jule::Str> _157e24260_get_option(jule::Slice<jule::Str> _7115_args,jule::Int& _7133_i) {
	jule::Str _7153_content = jule::Str();
	jule::Str _7143_arg = jule::Str();
	_iter_begin_5691857152:;
	if (!(_7133_i < _7115_args.len())) { goto _iter_end_5691857152; }
	{
		_7143_arg=_7115_args[static_cast<jule::Int>(_7133_i)];
		jule::Int _7417_j = 0LL;
		jule::Slice<jule::I32> _7517_runes = static_cast<jule::Slice<jule::I32>>(_7143_arg);
		jule::I32 _7617_r = _7517_runes[static_cast<jule::Int>(_7417_j)];
		if (_7617_r != '-') {
			_7153_content+=_7143_arg;
			_7143_arg=jule::Str("", 0);
			goto _iter_next_5691857152;
		}
		(_7417_j)++;
		if (_7417_j >= _7517_runes.len()) {
			_157e094f0_exit_err(jule::Str("undefined syntax: ", 18) + _7143_arg);
		}
		_7617_r=_7517_runes[static_cast<jule::Int>(_7417_j)];
		if (_7617_r == '-') {
			(_7417_j)++;
			if (_7417_j >= _7517_runes.len()) {
				_157e094f0_exit_err(jule::Str("undefined syntax: ", 18) + _7143_arg);
			}
			_7617_r=_7517_runes[static_cast<jule::Int>(_7417_j)];
		}
		if ((!(_150640f50_is_ident_rune(static_cast<jule::Str>(_7617_r))))) {
			_157e094f0_exit_err(jule::Str("undefined syntax: ", 18) + _7143_arg);
		}
		(_7417_j)++;
		_iter_begin_5691867920:;
		if (!(_7417_j < _7517_runes.len())) { goto _iter_end_5691867920; }
		{
			_7617_r=_7517_runes[static_cast<jule::Int>(_7417_j)];
			if (((((!(_150640f50_is_space(_7617_r))) && (!(_150640f50_is_letter(_7617_r)))) && (!(_150640f50_is_decimal(static_cast<jule::U8>(_7617_r))))) && (_7617_r != '_')) && (_7617_r != '-')) {
				_157e094f0_exit_err(jule::Str("undefined syntax: ", 18) + static_cast<jule::Str>(_7517_runes.slice(static_cast<jule::Int>(_7417_j))));
			}
		}
		_iter_next_5691867920:;
		(_7417_j)++;
		goto _iter_begin_5691867920;
		_iter_end_5691867920:;
		goto _iter_end_5691857152;
	}
	_iter_next_5691857152:;
	(_7133_i)++;
	goto _iter_begin_5691857152;
	_iter_end_5691857152:;
	return std::make_tuple(_7143_arg,_7153_content);
}



inline jule::Str _157e24260_get_option_value(jule::Slice<jule::Str> _11521_args,jule::Int& _11539_i) {
	(_11539_i)++;
	if (_11539_i < _11521_args.len()) {
		jule::Str _11813_arg = _11521_args[static_cast<jule::Int>(_11539_i)];
		return _11813_arg;
	}
	return jule::Str("", 0);
}



inline void _157e24260_parse_out_option(jule::Slice<jule::Str> _12421_args,jule::Int& _12439_i) {
	jule::Str _1259_value = _157e24260_get_option_value(_12421_args,_12439_i);
	if (_1259_value == jule::Str("", 0)) {
		_157e094f0_exit_err(jule::Str("missing option value: -o --out", 30));
	}
	_157e24260_OUT=_1259_value;
}



inline void _157e24260_parse_opt_option(jule::Slice<jule::Str> _13221_args,jule::Int& _13239_i) {
	jule::Str _1339_value = _157e24260_get_option_value(_13221_args,_13239_i);
	if (_1339_value == jule::Str("", 0)) {
		_157e094f0_exit_err(jule::Str("missing option value: --opt", 27));
	}
	{
		auto _match_expr{ _1339_value };
		if (!((jule::Str("L0", 2)) == _match_expr)) { goto _case_end_5691892096; }
		_case_begin_5691892096:;
		{
			_1501e6230_push_opt_level(0LLU);
		}
		goto _match_end_5691888800;
		_case_end_5691892096:;
		if (!((jule::Str("L1", 2)) == _match_expr)) { goto _case_end_5691892208; }
		_case_begin_5691892208:;
		{
			_1501e6230_push_opt_level(1LLU);
		}
		goto _match_end_5691888800;
		_case_end_5691892208:;
		_case_begin_5691890560:;
		{
			_157e094f0_exit_err(jule::Str("invalid optimization level: ", 28) + _1339_value);
		}
		goto _match_end_5691888800;
		_case_end_5691890560:;
		_match_end_5691888800:;
	}
}



inline void _157e24260_check_target_arch(jule::Str _14522_arch) {
	{
		auto __julec_range_expr = _157eacb90_DISTARCH;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _157e24260_distarch = *__julec_range_begin;
			_iter_begin_5691894320:;
			{
				if (_14522_arch == _157e24260_distarch) {
					return;
				}
			}
			_iter_next_5691894320:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _157e24260_distarch = *__julec_range_begin; goto _iter_begin_5691894320; }
			_iter_end_5691894320:;
		}
	}
	_157e094f0_exit_err(jule::Str("unsupported/undefined architecture: ", 36) + _14522_arch);
}



inline void _157e24260_check_target_os(jule::Str _15520_os) {
	{
		auto __julec_range_expr = _157eacb90_DISTOS;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _157e24260_distos = *__julec_range_begin;
			_iter_begin_5691897616:;
			{
				if (_15520_os == _157e24260_distos) {
					return;
				}
			}
			_iter_next_5691897616:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _157e24260_distos = *__julec_range_begin; goto _iter_begin_5691897616; }
			_iter_end_5691897616:;
		}
	}
	_157e094f0_exit_err(jule::Str("unsupported/undefined operating system: ", 40) + _15520_os);
}



inline void _157e24260_parse_target_option(jule::Slice<jule::Str> _16524_args,jule::Int& _16542_i) {
	jule::Str _1669_value = _157e24260_get_option_value(_16524_args,_16542_i);
	if (_1669_value == jule::Str("", 0)) {
		_157e094f0_exit_err(jule::Str("missing option value: --target", 30));
	}
	jule::Slice<jule::Str> _1719_parts = _1669_value.split(jule::Str("-", 1),-1LL);
	if (_1719_parts.len() != 2LL) {
		_157e094f0_exit_err(jule::Str("undefined platform target format: ", 34) + _1669_value);
	}
	jule::Str _17610_os = _1719_parts[0LL];
	jule::Str _17614_arch = _1719_parts[1LL];
	std::tie(_17610_os,_17614_arch) = std::make_tuple(_1719_parts[0LL],_1719_parts[1LL]);
	if (_17610_os != jule::Str("native", 6)) {
		_157e24260_check_target_os(_17610_os);
		_157eb0090_OS=_17610_os;
	}
	if (_17614_arch != jule::Str("native", 6)) {
		_157e24260_check_target_arch(_17614_arch);
		_157eb0090_ARCH=_17614_arch;
	}
}



inline void _157e24260_parse_compiler_option(jule::Slice<jule::Str> _18926_args,jule::Int& _18944_i) {
	jule::Str _1909_value = _157e24260_get_option_value(_18926_args,_18944_i);
	{
		auto _match_expr{ _1909_value };
		if (!((jule::Str("", 0)) == _match_expr)) { goto _case_end_5691916784; }
		_case_begin_5691916784:;
		{
			_157e094f0_exit_err(jule::Str("missing option value: --compiler", 32));
		}
		goto _match_end_5691913360;
		_case_end_5691916784:;
		if (!((jule::Str("clang", 5)) == _match_expr)) { goto _case_end_5691917744; }
		_case_begin_5691917744:;
		{
			_157e24260_COMPILER=jule::Str("clang", 5);
			_157e24260_COMPILER_PATH=jule::Str("clang++", 7);
		}
		goto _match_end_5691913360;
		_case_end_5691917744:;
		if (!((jule::Str("gcc", 3)) == _match_expr)) { goto _case_end_5691917856; }
		_case_begin_5691917856:;
		{
			_157e24260_COMPILER=jule::Str("gcc", 3);
			_157e24260_COMPILER_PATH=jule::Str("g++", 3);
		}
		goto _match_end_5691913360;
		_case_end_5691917856:;
		_case_begin_5691915696:;
		{
			_157e094f0_exit_err(jule::Str("invalid option value for --compiler: ", 37) + _1909_value);
		}
		goto _match_end_5691913360;
		_case_end_5691915696:;
		_match_end_5691913360:;
	}
}



inline jule::Str _157e24260_parse_options(jule::Slice<jule::Str> _20818_args) {
	jule::Str _20913_cmd = jule::Str("", 0);
	jule::Int _21313_i = 1LL;
	_iter_begin_5691922496:;
	if (!(_21313_i < _20818_args.len())) { goto _iter_end_5691922496; }
	{
		jule::Str _21514_arg;
		jule::Str _21519_content;
		std::tie(_21514_arg,_21519_content) = _157e24260_get_option(_20818_args,_21313_i);
		_20913_cmd+=_21519_content;
		{
			auto _match_expr{ _21514_arg };
			if (!((jule::Str("", 0)) == _match_expr)) { goto _case_end_5691928096; }
			goto _match_end_5691923472;
			_case_end_5691928096:;
			if (!((jule::Str("-o", 2)) == _match_expr || (jule::Str("--out", 5)) == _match_expr)) { goto _case_end_5691926304; }
			_case_begin_5691926304:;
			{
				_157e24260_parse_out_option(_20818_args,_21313_i);
			}
			goto _match_end_5691923472;
			_case_end_5691926304:;
			if (!((jule::Str("-t", 2)) == _match_expr || (jule::Str("--transpile", 11)) == _match_expr)) { goto _case_end_5691926416; }
			_case_begin_5691926416:;
			{
				_157e24260_MODE=1LLU;
			}
			goto _match_end_5691923472;
			_case_end_5691926416:;
			if (!((jule::Str("-c", 2)) == _match_expr || (jule::Str("--compile", 9)) == _match_expr)) { goto _case_end_5691926528; }
			_case_begin_5691926528:;
			{
				_157e24260_MODE=0LLU;
			}
			goto _match_end_5691923472;
			_case_end_5691926528:;
			if (!((jule::Str("--compiler", 10)) == _match_expr)) { goto _case_end_5691928256; }
			_case_begin_5691928256:;
			{
				_157e24260_parse_compiler_option(_20818_args,_21313_i);
			}
			goto _match_end_5691923472;
			_case_end_5691928256:;
			if (!((jule::Str("--opt-copy", 10)) == _match_expr)) { goto _case_end_5691928368; }
			_case_begin_5691928368:;
			{
				_1501e6230_OPTIMIZATIONS=jule::append(_1501e6230_OPTIMIZATIONS,jule::Slice<jule::Str>({jule::Str("--opt-copy", 10)}));
			}
			goto _match_end_5691923472;
			_case_end_5691928368:;
			if (!((jule::Str("--opt-deadcode", 14)) == _match_expr)) { goto _case_end_5691928480; }
			_case_begin_5691928480:;
			{
				_1501e6230_OPTIMIZATIONS=jule::append(_1501e6230_OPTIMIZATIONS,jule::Slice<jule::Str>({jule::Str("--opt-deadcode", 14)}));
			}
			goto _match_end_5691923472;
			_case_end_5691928480:;
			if (!((jule::Str("--opt-append", 12)) == _match_expr)) { goto _case_end_5691928592; }
			_case_begin_5691928592:;
			{
				_1501e6230_OPTIMIZATIONS=jule::append(_1501e6230_OPTIMIZATIONS,jule::Slice<jule::Str>({jule::Str("--opt-append", 12)}));
			}
			goto _match_end_5691923472;
			_case_end_5691928592:;
			if (!((jule::Str("--opt", 5)) == _match_expr)) { goto _case_end_5691928704; }
			_case_begin_5691928704:;
			{
				_157e24260_parse_opt_option(_20818_args,_21313_i);
			}
			goto _match_end_5691923472;
			_case_end_5691928704:;
			if (!((jule::Str("--target", 8)) == _match_expr)) { goto _case_end_5691928816; }
			_case_begin_5691928816:;
			{
				_157e24260_parse_target_option(_20818_args,_21313_i);
			}
			goto _match_end_5691923472;
			_case_end_5691928816:;
			_case_begin_5691925456:;
			{
				_157e094f0_exit_err(jule::Str("undefined option: ", 18) + _21514_arg);
			}
			goto _match_end_5691923472;
			_case_end_5691925456:;
			_match_end_5691923472:;
		}
	}
	_iter_next_5691922496:;
	(_21313_i)++;
	goto _iter_begin_5691922496;
	_iter_end_5691922496:;
	_20913_cmd=_20913_cmd.trim(jule::Str(" \t\r\n\v", 5));
	return _20913_cmd;
}



inline void _157e24260_write_output(jule::Str _25517_path,jule::Str _25528_content) {
	jule::Str _2569_dir = _147e135c0_dir(_25517_path);
	jule::Int _25817_err;
	std::tie(std::ignore,_25817_err) = _15053fb30_stat(_2569_dir);
	if (_25817_err != 0LLU) {
		jule::Int _26013_err = _150643f90_create_dir(_2569_dir);
		if (_26013_err != 0LLU) {
			_157e094f0_exit_err(jule::Str("a problem occurs when code generation", 37));
		}
	}
	jule::Ref<_150562500_File> _26614_f;
	std::tie(_26614_f,_25817_err) = _1504da380_open(_25517_path,578LL,438LL);
	if (_25817_err != 0LLU) {
		_157e094f0_exit_err(jule::Str("a problem occurs when code generation", 37));
	}
	std::tie(std::ignore,_25817_err) = _26614_f->_method_write(static_cast<jule::Slice<jule::U8>>(_25528_content));
	if (_25817_err != 0LLU) {
		_157e094f0_exit_err(jule::Str("a problem occurs when code generation", 37));
	}
	_26614_f->_method_close();
}



inline void _157e24260_clear_objects(void) {
	if (_1504da380_remove_file(_157e24260_get_compile_path()) != 0LLU) {
		jule::outln(jule::Str("a problem occurs when object cleaning", 37));
		return;
	}
	_150643f90_remove_dir(_157e24260_OUT_DIR);
}



inline void _157e24260_compile_ir(jule::Str _29215_compiler,jule::Str _29230_compiler_cmd) {
	jule::Int _2939_status = _157e24260_system((_29215_compiler + jule::Str(" ", 1)) + _29230_compiler_cmd);
	if (_2939_status != 0LL) {
		jule::out(jule::Str("external compiler failed with status code: ", 43));
		jule::outln(_2939_status);
		_157e094f0_exit_err(jule::Str("", 0));
	}
	_157e24260_clear_objects();
}



inline void _157e24260_do_spell(jule::Str _30413_obj,jule::Str _30423_compiler,jule::Str _30438_compiler_cmd) {
	jule::Str _3059_path = _157e24260_get_compile_path();
	_157e24260_write_output(_3059_path,_30413_obj);
	{
		auto _match_expr{ _157e24260_MODE };
		if (!((0LLU) == _match_expr)) { goto _case_end_5691961616; }
		_case_begin_5691961616:;
		{
			_157e24260_compile_ir(_30423_compiler,_30438_compiler_cmd);
		}
		goto _match_end_5691959984;
		_case_end_5691961616:;
		_match_end_5691959984:;
	}
}



inline void _157e24260_check_mode(void) {
	if ((_157e24260_MODE != 1LLU) && (_157e24260_MODE != 0LLU)) {
		jule::outln(_157e34dc0_logf(jule::Str("\"@\" is invalid value for the \"@\" key", 36),jule::Slice<jule::Any>({jule::Any(_157e24260_MODE),jule::Any(jule::Str("mode", 4))})));
		_157e094f0_exit_err(jule::Str("", 0));
	}
}



inline void _157e24260_check_compiler(void) {
	if ((_157e24260_COMPILER != jule::Str("gcc", 3)) && (_157e24260_COMPILER != jule::Str("clang", 5))) {
		jule::outln(_157e34dc0_logf(jule::Str("\"@\" is invalid value for the \"@\" key", 36),jule::Slice<jule::Any>({jule::Any(_157e24260_COMPILER),jule::Any(jule::Str("compiler", 8))})));
		_157e094f0_exit_err(jule::Str("", 0));
	}
}



inline void _157e24260_set(void) {
	_157e24260_check_mode();
	_157e24260_check_compiler();
}



inline void _157e24260_print_logs(jule::Slice<_157e34dc0_Log>& _33416_logs) {
	{
		auto __julec_range_expr = _33416_logs;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			_157e34dc0_Log _157e24260_l = *__julec_range_begin;
			_iter_begin_5691971136:;
			{
				_157e24e40_Logger::_static_method_log(_157e24260_l);
			}
			_iter_next_5691971136:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _157e24260_l = *__julec_range_begin; goto _iter_begin_5691971136; }
			_iter_end_5691971136:;
		}
	}
}



inline jule::Bool _157e24260_is_cpp_source_file(jule::Str _34023_path) {
	jule::Int _3419_offset = _34023_path.rfind(jule::Str(".", 1));
	if (_3419_offset == -1LL) {
		return false;
	}
	return _157e348f0_is_valid_cpp_ext(_34023_path.slice(static_cast<jule::Int>(_3419_offset)));
}



inline std::tuple<jule::Str,jule::Str> _157e24260_gen_compile_cmd(jule::Str _34920_source_path,jule::Ref<_1501d9900_IR> _34938_ir) {
	jule::Str _3509_compiler = _157e24260_COMPILER_PATH;
	
	
	
	jule::Str _3559_SET_STD = jule::Str("--std=", 6) + _157e24260_CPP_STD;
	jule::Str _35713_cmd = jule::Str("-O0 ", 4);
	{
		auto _match_expr{ _157e24260_COMPILER };
		if (!((jule::Str("gcc", 3)) == _match_expr)) { goto _case_end_5691987680; }
		_case_begin_5691987680:;
		{
			_35713_cmd+=jule::Str("-w ", 3);
		}
		goto _match_end_5691986224;
		_case_end_5691987680:;
		if (!((jule::Str("clang", 5)) == _match_expr)) { goto _case_end_5691987792; }
		_case_begin_5691987792:;
		{
			_35713_cmd+=jule::Str("-Wno-everything ", 16);
		}
		goto _match_end_5691986224;
		_case_end_5691987792:;
		_match_end_5691986224:;
	}
	_35713_cmd+=_3559_SET_STD + jule::Str(" ", 1);
	{
		auto __julec_range_expr = _34938_ir->_field_passes;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _157e24260_pass = *__julec_range_begin;
			_iter_begin_5691990096:;
			{
				_35713_cmd+=_157e24260_pass + jule::Str(" ", 1);
			}
			_iter_next_5691990096:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _157e24260_pass = *__julec_range_begin; goto _iter_begin_5691990096; }
			_iter_end_5691990096:;
		}
	}
	{
		auto __julec_range_expr = _34938_ir->_field_used;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_150f26340_ImportInfo> _157e24260_u = *__julec_range_begin;
			_iter_begin_5691991104:;
			{
				if (_157e24260_u->_field_cpp_linked && _157e24260_is_cpp_source_file(_157e24260_u->_field_path)) {
					_35713_cmd+=_157e24260_u->_field_path + jule::Str(" ", 1);
				}
			}
			_iter_next_5691991104:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _157e24260_u = *__julec_range_begin; goto _iter_begin_5691991104; }
			_iter_end_5691991104:;
		}
	}
	if (_157e24260_OUT != jule::Str("", 0)) {
		_35713_cmd+=(jule::Str("-o ", 3) + _157e24260_OUT) + jule::Str(" ", 1);
	}
	_35713_cmd+=_34920_source_path;
	return std::make_tuple(_3509_compiler,_35713_cmd);
}



inline jule::Str _157e24260_get_compile_path(void) {
	return _147e135c0_join(jule::Slice<jule::Str>({_157e24260_OUT_DIR,_157e24260_OUT_NAME}));
}



inline void _157e24260_apply_target_independent_optimizations(jule::Ref<_1501d9900_IR> _39847_ir) {
	if (_1501e6230_is_opt_enabled(jule::Str("--opt-deadcode", 14))) {
		_157ee5140_eliminate_dead_code(_39847_ir);
	}
}



inline void _157e24260_compile_command(void) {
	jule::Str _4069_path = _157e24260_parse_options(_147e65dd0_ARGS);
	if (_4069_path == jule::Str("", 0)) {
		_157e094f0_exit_err(_157e34dc0_logf(jule::Str("missing compile path", 20),jule::Slice<jule::Any>({})));
	}
	jule::Ref<_1505f1a60_Status> _41210_inf;
	jule::Int _41215_err;
	std::tie(_41210_inf,_41215_err) = _15053fb30_stat(_157eb0090_PATH_STDLIB);
	if ((_41215_err != 0LLU) || (!(_41210_inf->_method_is_dir()))) {
		_157e094f0_exit_err(_157e34dc0_logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>({})));
	}
	_157e24260_set();
	jule::Ref<_1501d9900_IR> _41914_ir;
	jule::Slice<_157e34dc0_Log> _41918_logs;
	std::tie(_41914_ir,_41918_logs) = _1501d9900_IR::_static_method_build(_4069_path);
	if ((!(jule::real(_41914_ir))) && (_41918_logs == nullptr)) {
		_157e094f0_exit_err(_157e34dc0_logf(jule::Str("there is no Jule source code in this package: @", 47),jule::Slice<jule::Any>({jule::Any(_4069_path)})));
	}
	if (_41918_logs != nullptr) {
		_157e24260_print_logs(_41918_logs);
		_157e094f0_exit_err(jule::Str("", 0));
	}
	
	jule::Ref<_15081bcd0_Fn> _43113_f = _41914_ir->_field_main->_method_find_fn(jule::Str("main", 4),false);
	if ((!(jule::real(_43113_f)))) {
		_157e094f0_exit_err(_157e34dc0_logf(jule::Str("entry point (main) function is not defined", 42),jule::Slice<jule::Any>({})));
	}
	_43113_f->_field_statically=true;
	_43113_f=_41914_ir->_field_main->_method_find_fn(jule::Str("init", 4),false);
	if (jule::real(_43113_f)) {
		_43113_f->_field_statically=true;
	}
	_157e24260_apply_target_independent_optimizations(_41914_ir);
	jule::Str _44410_compiler;
	jule::Str _44420_compiler_cmd;
	std::tie(_44410_compiler,_44420_compiler_cmd) = _157e24260_gen_compile_cmd(_157e24260_get_compile_path(),_41914_ir);
	jule::Str _44613_obj = _1514109b0_gen(_41914_ir);
	_1514109b0_append_standard(_44613_obj,_44410_compiler,_44420_compiler_cmd);
	_157e24260_do_spell(_44613_obj,_44410_compiler,_44420_compiler_cmd);
}




void __jule_call_initializers(void) {
	_147e65dd0_init();
	_157eb0090_init();
	_1518a9420_init();
	_15020d0b0_init();
	_157e094f0_init();
}

int main(int argc, char *argv[], char *envp[]) {
    std::set_terminate(&jule::terminate_handler);
    jule::set_sig_handler(jule::signal_handler);
    jule::setup_command_line_args(argc, argv);
    jule::setup_environment_variables(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}