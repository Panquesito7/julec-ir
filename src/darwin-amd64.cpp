#include "api/jule.hpp"

#include <dirent.h>
#include <fcntl.h>
#include <unistd.h>
#include <cstdio>
#include <sys/stat.h>
#include "std/sys/syscall_unix.hpp"
#include "std/env/proc.hpp"
#include "std/process/process.hpp"
#include "std/vector/alloc.hpp"
#include "std/jule/parser/parser.hpp"
#include "src/julec/obj/cxx/cxx.hpp"
#include "src/julec/julec.hpp"

struct _11a0945e0_Importer;
struct _11a3c2e70_Kind;
struct _11aa76f70_Lookup;
struct _11909cfa0_RangeSetter;

struct _1410391e0_LazyBuff;


struct _141082340_FloatInfo;


struct _141082340_DecimalSlice;


struct _13ff7af20_LeftCheat;


struct _13ff7af20_Decimal;


struct _13fe81720_Log;


struct _118d9e870_DirEntry;


struct _118da2050_File;


struct _118db5e40_Status;


struct _118dab460_accept_range;


struct _11911a8a0_Token;


struct _11916a220_KindPair;


struct _118d9a790_CommentGroup;


struct _118d9a790_NamespaceTypeDecl;


struct _118d9a790_RefTypeDecl;


struct _118d9a790_SlcTypeDecl;


struct _118d9a790_TupleTypeDecl;


struct _118d9a790_PtrTypeDecl;


struct _118d9a790_ArrTypeDecl;


struct _118d9a790_MapTypeDecl;


struct _118d9a790_RetTypeDecl;


struct _118d9a790_TupleExpr;


struct _118d9a790_LitExpr;


struct _118d9a790_UnsafeExpr;


struct _118d9a790_IdentExpr;


struct _118d9a790_UnaryExpr;


struct _118d9a790_VariadicExpr;


struct _118d9a790_CastExpr;


struct _118d9a790_NsSelectionExpr;


struct _118d9a790_SubIdentExpr;


struct _118d9a790_BinopExpr;


struct _118d9a790_FieldExprPair;


struct _118d9a790_StructLit;


struct _118d9a790_BraceLit;


struct _118d9a790_KeyValPair;


struct _118d9a790_SliceExpr;


struct _118d9a790_IndexingExpr;


struct _118d9a790_SlicingExpr;


struct _118d9a790_LabelSt;


struct _118d9a790_FallSt;


struct _118d9a790_AssignSt;


struct _118d9a790_ScopeTree;


struct _118d9a790_RetSt;


struct _118d9a790_Iter;


struct _118d9a790_WhileKind;


struct _118d9a790_RangeKind;


struct _118d9a790_Conditional;


struct _118d9a790_MatchCase;


struct _118da92c0_FileInfo;


struct _11912dd80_Stmt;


struct _11912dd80_ScopeParser;


struct _11943fdb0_CallData;


struct _11943fdb0_Precedencer;


struct _11943fdb0_ExprBuilder;


struct _11953bd10_Parser;


struct _11972a4d0_TypeBuilder;


struct _11ab854f0_Const;


struct _118bb7d70_FieldIns;


struct _118bb7d70_StructIns;


struct _119099250_RetType;


struct _119099250_ParamIns;


struct _119099250_FnIns;


struct _13feceeb0_SymbolBuilder;


struct _11a093930_If;


struct _11a093930_Else;


struct _11a093930_Conditional;


struct _11a093930_InfIter;


struct _11a093930_WhileIter;


struct _11a093930_RangeIter;


struct _11a093930_ContSt;


struct _11a093930_BreakSt;


struct _11a093930_Label;


struct _11a093930_GotoSt;


struct _11a093930_Postfix;


struct _11a093930_Assign;


struct _11a093930_MultiAssign;


struct _11a093930_Match;


struct _11a093930_Case;


struct _11a093930_FallSt;


struct _11a093930_RetSt;


struct _11a093930_Recover;


struct _11a093930_ScopeGoto;


struct _11a093930_ScopeChecker;


struct _119748ec0_BinopExprModel;


struct _119748ec0_UnaryExprModel;


struct _119748ec0_GetRefPtrExprModel;


struct _119748ec0_StructArgExprModel;


struct _119748ec0_StructLitExprModel;


struct _119748ec0_AllocStructLitExprModel;


struct _119748ec0_CastingExprModel;


struct _119748ec0_FnCallExprModel;


struct _119748ec0_SliceExprModel;


struct _119748ec0_IndexigExprModel;


struct _119748ec0_AnonFnExprModel;


struct _119748ec0_KeyValPairExprModel;


struct _119748ec0_MapExprModel;


struct _119748ec0_SlicingExprModel;


struct _119748ec0_TraitSubIdentExprModel;


struct _119748ec0_StructSubIdentExprModel;


struct _119748ec0_StructStaticIdentExprModel;


struct _119748ec0_ArrayExprModel;


struct _119748ec0_CommonIdentExprModel;


struct _119748ec0_CommonSubIdentExprModel;


struct _119748ec0_TupleExprModel;


struct _119748ec0_BuiltinOutCallExprModel;


struct _119748ec0_BuiltinOutlnCallExprModel;


struct _119748ec0_BuiltinCloneCallExprModel;


struct _119748ec0_BuiltinNewCallExprModel;


struct _119748ec0_BuiltinRealCallExprModel;


struct _119748ec0_BuiltinDropCallExprModel;


struct _119748ec0_BuiltinPanicCallExprModel;


struct _119748ec0_BuiltinMakeCallExprModel;


struct _119748ec0_BuiltinErrorTraitSubIdentExprModel;


struct _119748ec0_SizeofExprModel;


struct _119748ec0_AlignofExprModel;


struct _119748ec0_RuneExprModel;


struct _119748ec0_ExplicitDerefExprModel;


struct _11a0945e0_Package;


struct _11a096220_Sema;


struct _11a21f8a0_DynamicTypeAnnotation;


struct _11a21f8a0_StructLitChecker;


struct _11a21f8a0_RangeChecker;


struct _11a53f4f0_Data;


struct _11a53f4f0_Value;


struct _11a53f4f0_Eval;


struct _11a3c2e70_TypeKind;


struct _11a3c2e70_TypeSymbol;


struct _11a3c2e70_Prim;


struct _11a3c2e70_Ref;


struct _11a3c2e70_Slc;


struct _11a3c2e70_Tuple;


struct _11a3c2e70_Map;


struct _11a3c2e70_Arr;


struct _11a3c2e70_Ptr;


struct _11a3c2e70_Referencer;


struct _118d6ac90_PlainImporter;


struct _10fee6360_IR;


struct _10fea5860_ScopeDeadCode;


struct _11909cfa0_IndexRangeSetter;


struct _11909cfa0_MapRangeSetter;


struct _11a1c3f00_OrderedDecls;


struct _11a3c2e70_TypeChecker;


struct _11a3c2e70_TypeAlias;


struct _11a53f4f0_BinopSolver;


struct _11a21f8a0_RetTypeChecker;


struct _11a21f8a0_FnCallArgChecker;


struct _11a21f8a0_AssignTypeChecker;


struct _11a21f8a0_TypeCompatibilityChecker;


struct _11a245f20_Var;


struct _11a0945e0_ImportInfo;


struct _11a093930_ScopeLabel;


struct _11a091460_Impl;


struct _11a089b40_Enum;


struct _11a089b40_EnumItem;


struct _118e2b060_Trait;


struct _13feceeb0_Pass;


struct _119099250_Fn;


struct _119099250_Param;


struct _118bb7d70_Field;


struct _118dbfd80_AssignInfo;


struct _118d9a790_Impl;


struct _118d9a790_TraitDecl;


struct _118d9a790_StructDecl;


struct _118d9a790_FieldDecl;


struct _118d9a790_EnumDecl;


struct _118d9a790_EnumItemDecl;


struct _118d9a790_UseDecl;


struct _118d9a790_Case;


struct _118d9a790_TypeAliasDecl;


struct _118d9a790_Else;


struct _118d9a790_If;


struct _118d9a790_ContSt;


struct _118d9a790_BreakSt;


struct _118d9a790_VarDecl;


struct _118d9a790_FnDecl;


struct _118d9a790_ParamDecl;


struct _118d9a790_AssignLeft;


struct _118d9a790_GotoSt;


struct _118d9a790_GenericDecl;


struct _118d9a790_FnCallExpr;


struct _118d9a790_Expr;


struct _118d9a790_IdentTypeDecl;


struct _118d9a790_TypeDecl;


struct _118d9a790_Directive;


struct _118d9a790_Comment;


struct _118d9a790_Node;


struct _1192e4e90_Vector_0;

struct _1192e4e90_Vector_1;

struct _1192e4e90_Vector_2;

struct _1192e4e90_Vector_3;

struct _1192e4e90_Vector_4;

struct _1192e4e90_Vector_5;

struct _1192e4e90_Vector_6;

struct _1192e4e90_Vector_7;

struct _1192e4e90_Vector_8;

struct _1192e4e90_Vector_9;

struct _1192e4e90_Vector_10;

struct _1192e4e90_Vector_11;

struct _1192e4e90_Vector_12;

struct _1192e4e90_Vector_13;

struct _1192e4e90_Vector_14;

struct _1192e4e90_Vector_15;


struct _118d9a520_File;


struct _11916a220_Lex;


struct _118d8a140_Ast;


struct _118bb7d70_Struct;


struct _13feceeb0_ReferenceStack;


struct _11a093930_Scope;


struct _11a3c2dc0_SymbolTable;

struct _11a0945e0_Importer {
	virtual ~_11a0945e0_Importer(void) {}

	virtual jule::Ref<_11a0945e0_ImportInfo> _method_get_import(jule::Str _1629_path) { return {}; }
	virtual std::tuple<jule::Slice<jule::Ref<_118d8a140_Ast>>,jule::Slice<_13fe81720_Log>> _method_import_package(jule::Str _2034_path) { return {}; }
	virtual void _method_imported(jule::Ref<_11a0945e0_ImportInfo>) {}
};

struct _11a3c2e70_Kind {
	virtual ~_11a3c2e70_Kind(void) {}

	virtual jule::Str _method_to_str(void) { return {}; }
	virtual jule::Bool _method_equals(jule::Ref<_11a3c2e70_TypeKind> _4621_other) { return {}; }
};

struct _11aa76f70_Lookup {
	virtual ~_11aa76f70_Lookup(void) {}

	virtual jule::Ref<_11a0945e0_ImportInfo> _method_find_package(jule::Str _731_ident) { return {}; }
	virtual jule::Ref<_11a0945e0_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ref<_11a0945e0_ImportInfo>)> _833_selector) { return {}; }
	virtual jule::Ref<_11a245f20_Var> _method_find_var(jule::Str _927_ident,jule::Bool _939_cpp_linked) { return {}; }
	virtual jule::Ref<_11a3c2e70_TypeAlias> _method_find_type_alias(jule::Str _1034_ident,jule::Bool _1046_cpp_linked) { return {}; }
	virtual jule::Ref<_118bb7d70_Struct> _method_find_struct(jule::Str _1130_ident,jule::Bool _1142_cpp_linked) { return {}; }
	virtual jule::Ref<_119099250_Fn> _method_find_fn(jule::Str _1226_ident,jule::Bool _1238_cpp_linked) { return {}; }
	virtual jule::Ref<_118e2b060_Trait> _method_find_trait(jule::Str _1329_ident) { return {}; }
	virtual jule::Ref<_11a089b40_Enum> _method_find_enum(jule::Str _1428_ident) { return {}; }
};

struct _11909cfa0_RangeSetter {
	virtual ~_11909cfa0_RangeSetter(void) {}

	virtual jule::Str _method_setup_vars(jule::Ref<_11a245f20_Var> _3729_key_a,jule::Ref<_11a245f20_Var> _3746_key_b) { return {}; }
	virtual jule::Str _method_next_steps(jule::Ref<_11a245f20_Var> _3829_key_a,jule::Ref<_11a245f20_Var> _3846_key_b,jule::Str _3859_begin) { return {}; }
};


struct _1410391e0_LazyBuff {
	jule::Ref<_1410391e0_LazyBuff> self{};

	jule::Str _field_path{jule::Str()};
	jule::Slice<jule::U8> _field_buff{jule::Slice<jule::U8>()};
	jule::Int _field_w{jule::Int()};
	jule::Str _field_vol_and_path{jule::Str()};
	jule::Int _field_vol_len{jule::Int()};


	_1410391e0_LazyBuff(jule::Str __param_path, jule::Slice<jule::U8> __param_buff, jule::Int __param_w, jule::Str __param_vol_and_path, jule::Int __param_vol_len) {
		this->self = jule::Ref<_1410391e0_LazyBuff>::make(this, nullptr);

		this->_field_path = __param_path;
		this->_field_buff = __param_buff;
		this->_field_w = __param_w;
		this->_field_vol_and_path = __param_vol_and_path;
		this->_field_vol_len = __param_vol_len;
	}

	~_1410391e0_LazyBuff(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1410391e0_LazyBuff(void) { this->self = jule::Ref<_1410391e0_LazyBuff>::make(this, nullptr); }

	inline jule::U8 _method_index(jule::Int);


	inline void _method_append(jule::U8);


	inline jule::Str _method_string(void);


	inline bool operator==(const _1410391e0_LazyBuff &_Src) {
		return 
			this->_field_path == _Src._field_path &&
			this->_field_buff == _Src._field_buff &&
			this->_field_w == _Src._field_w &&
			this->_field_vol_and_path == _Src._field_vol_and_path &&
			this->_field_vol_len == _Src._field_vol_len;
	}

	inline bool operator!=(const _1410391e0_LazyBuff &_Src) { return !this->operator==(_Src); }
};


struct _141082340_FloatInfo {
	jule::Ref<_141082340_FloatInfo> self{};

	jule::Uint _field_mantbits{jule::Uint()};
	jule::Uint _field_expbits{jule::Uint()};
	jule::Int _field_bias{jule::Int()};


	_141082340_FloatInfo(jule::Uint __param_mantbits, jule::Uint __param_expbits, jule::Int __param_bias) {
		this->self = jule::Ref<_141082340_FloatInfo>::make(this, nullptr);

		this->_field_mantbits = __param_mantbits;
		this->_field_expbits = __param_expbits;
		this->_field_bias = __param_bias;
	}

	~_141082340_FloatInfo(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_141082340_FloatInfo(void) { this->self = jule::Ref<_141082340_FloatInfo>::make(this, nullptr); }

	inline bool operator==(const _141082340_FloatInfo &_Src) {
		return 
			this->_field_mantbits == _Src._field_mantbits &&
			this->_field_expbits == _Src._field_expbits &&
			this->_field_bias == _Src._field_bias;
	}

	inline bool operator!=(const _141082340_FloatInfo &_Src) { return !this->operator==(_Src); }
};


struct _141082340_DecimalSlice {
	jule::Ref<_141082340_DecimalSlice> self{};

	jule::Slice<jule::U8> _field_d{jule::Slice<jule::U8>()};
	jule::Int _field_nd{jule::Int()};
	jule::Int _field_dp{jule::Int()};
	jule::Bool _field_neg{jule::Bool()};


	_141082340_DecimalSlice(jule::Slice<jule::U8> __param_d, jule::Int __param_nd, jule::Int __param_dp, jule::Bool __param_neg) {
		this->self = jule::Ref<_141082340_DecimalSlice>::make(this, nullptr);

		this->_field_d = __param_d;
		this->_field_nd = __param_nd;
		this->_field_dp = __param_dp;
		this->_field_neg = __param_neg;
	}

	~_141082340_DecimalSlice(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_141082340_DecimalSlice(void) { this->self = jule::Ref<_141082340_DecimalSlice>::make(this, nullptr); }

	inline bool operator==(const _141082340_DecimalSlice &_Src) {
		return 
			this->_field_d == _Src._field_d &&
			this->_field_nd == _Src._field_nd &&
			this->_field_dp == _Src._field_dp &&
			this->_field_neg == _Src._field_neg;
	}

	inline bool operator!=(const _141082340_DecimalSlice &_Src) { return !this->operator==(_Src); }
};


struct _13ff7af20_LeftCheat {
	jule::Ref<_13ff7af20_LeftCheat> self{};

	jule::Int _field_delta{jule::Int()};
	jule::Str _field_cutoff{jule::Str()};


	_13ff7af20_LeftCheat(jule::Int __param_delta, jule::Str __param_cutoff) {
		this->self = jule::Ref<_13ff7af20_LeftCheat>::make(this, nullptr);

		this->_field_delta = __param_delta;
		this->_field_cutoff = __param_cutoff;
	}

	~_13ff7af20_LeftCheat(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_13ff7af20_LeftCheat(void) { this->self = jule::Ref<_13ff7af20_LeftCheat>::make(this, nullptr); }

	inline bool operator==(const _13ff7af20_LeftCheat &_Src) {
		return 
			this->_field_delta == _Src._field_delta &&
			this->_field_cutoff == _Src._field_cutoff;
	}

	inline bool operator!=(const _13ff7af20_LeftCheat &_Src) { return !this->operator==(_Src); }
};


struct _13ff7af20_Decimal {
	jule::Ref<_13ff7af20_Decimal> self{};

	jule::Array<jule::U8,800> _field_d{jule::Array<jule::U8,800>()};
	jule::Int _field_nd{jule::Int()};
	jule::Int _field_dp{jule::Int()};
	jule::Bool _field_neg{jule::Bool()};
	jule::Bool _field_trunc{jule::Bool()};


	_13ff7af20_Decimal(jule::Array<jule::U8,800> __param_d, jule::Int __param_nd, jule::Int __param_dp, jule::Bool __param_neg, jule::Bool __param_trunc) {
		this->self = jule::Ref<_13ff7af20_Decimal>::make(this, nullptr);

		this->_field_d = __param_d;
		this->_field_nd = __param_nd;
		this->_field_dp = __param_dp;
		this->_field_neg = __param_neg;
		this->_field_trunc = __param_trunc;
	}

	~_13ff7af20_Decimal(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_13ff7af20_Decimal(void) { this->self = jule::Ref<_13ff7af20_Decimal>::make(this, nullptr); }

	inline jule::Bool _method_set(jule::Str);


	inline std::tuple<jule::U64,jule::Bool> _method_float_bits(_141082340_FloatInfo&);


	inline void _method_assign(jule::U64);


	inline void _method_shift(jule::Int);


	inline void _method_round_down(jule::Int);


	inline void _method_round_up(jule::Int);


	inline void _method_round(jule::Int);


	inline jule::U64 _method_rounded_integer(void);


	inline bool operator==(const _13ff7af20_Decimal &_Src) {
		return 
			this->_field_d == _Src._field_d &&
			this->_field_nd == _Src._field_nd &&
			this->_field_dp == _Src._field_dp &&
			this->_field_neg == _Src._field_neg &&
			this->_field_trunc == _Src._field_trunc;
	}

	inline bool operator!=(const _13ff7af20_Decimal &_Src) { return !this->operator==(_Src); }
};


struct _13fe81720_Log {
	jule::Ref<_13fe81720_Log> self{};

	jule::Int _field_kind{0LLU};
	jule::Int _field_row{jule::Int()};
	jule::Int _field_column{jule::Int()};
	jule::Str _field_path{jule::Str()};
	jule::Str _field_text{jule::Str()};


	_13fe81720_Log(jule::Int __param_kind, jule::Int __param_row, jule::Int __param_column, jule::Str __param_path, jule::Str __param_text) {
		this->self = jule::Ref<_13fe81720_Log>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_row = __param_row;
		this->_field_column = __param_column;
		this->_field_path = __param_path;
		this->_field_text = __param_text;
	}

	~_13fe81720_Log(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_13fe81720_Log(void) { this->self = jule::Ref<_13fe81720_Log>::make(this, nullptr); }

	inline jule::Str _method_flat(void);


	inline jule::Str _method_error(void);


	inline jule::Str _method_to_str(void);


	inline bool operator==(const _13fe81720_Log &_Src) {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_row == _Src._field_row &&
			this->_field_column == _Src._field_column &&
			this->_field_path == _Src._field_path &&
			this->_field_text == _Src._field_text;
	}

	inline bool operator!=(const _13fe81720_Log &_Src) { return !this->operator==(_Src); }
};


struct _118d9e870_DirEntry {
	jule::Ref<_118d9e870_DirEntry> self{};

	jule::Str _field_name{jule::Str()};
	jule::Ref<_118db5e40_Status> _field_stat{jule::Ref<_118db5e40_Status>()};


	_118d9e870_DirEntry(jule::Str __param_name, jule::Ref<_118db5e40_Status> __param_stat) {
		this->self = jule::Ref<_118d9e870_DirEntry>::make(this, nullptr);

		this->_field_name = __param_name;
		this->_field_stat = __param_stat;
	}

	~_118d9e870_DirEntry(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118d9e870_DirEntry(void) { this->self = jule::Ref<_118d9e870_DirEntry>::make(this, nullptr); }

	inline bool operator==(const _118d9e870_DirEntry &_Src) {
		return 
			this->_field_name == _Src._field_name &&
			this->_field_stat == _Src._field_stat;
	}

	inline bool operator!=(const _118d9e870_DirEntry &_Src) { return !this->operator==(_Src); }
};


struct _118da2050_File {
	jule::Ref<_118da2050_File> self{};

	jule::Int _field_handle{jule::Int()};


	_118da2050_File(jule::Int __param_handle) {
		this->self = jule::Ref<_118da2050_File>::make(this, nullptr);

		this->_field_handle = __param_handle;
	}

	~_118da2050_File(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118da2050_File(void) { this->self = jule::Ref<_118da2050_File>::make(this, nullptr); }

	inline std::tuple<jule::I64,jule::Int> _method_seek(jule::I64,jule::Int);


	inline std::tuple<jule::Int,jule::Int> _method_read(jule::Slice<jule::U8>);


	inline std::tuple<jule::Int,jule::Int> _method_write(jule::Slice<jule::U8>);


	inline jule::Int _method_close(void);


	inline bool operator==(const _118da2050_File &_Src) {
		return 
			this->_field_handle == _Src._field_handle;
	}

	inline bool operator!=(const _118da2050_File &_Src) { return !this->operator==(_Src); }
};


struct _118db5e40_Status {
	jule::Ref<_118db5e40_Status> self{};

	jule::Uint _field_mode{jule::Uint()};
	jule::Uint _field_size{jule::Uint()};


	_118db5e40_Status(jule::Uint __param_mode, jule::Uint __param_size) {
		this->self = jule::Ref<_118db5e40_Status>::make(this, nullptr);

		this->_field_mode = __param_mode;
		this->_field_size = __param_size;
	}

	~_118db5e40_Status(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118db5e40_Status(void) { this->self = jule::Ref<_118db5e40_Status>::make(this, nullptr); }

	inline jule::Bool _method_is_dir(void);


	inline jule::Bool _method_is_reg(void);


	inline bool operator==(const _118db5e40_Status &_Src) {
		return 
			this->_field_mode == _Src._field_mode &&
			this->_field_size == _Src._field_size;
	}

	inline bool operator!=(const _118db5e40_Status &_Src) { return !this->operator==(_Src); }
};


struct _118dab460_accept_range {
	jule::Ref<_118dab460_accept_range> self{};

	jule::U8 _field_lo{jule::U8()};
	jule::U8 _field_hi{jule::U8()};


	_118dab460_accept_range(jule::U8 __param_lo, jule::U8 __param_hi) {
		this->self = jule::Ref<_118dab460_accept_range>::make(this, nullptr);

		this->_field_lo = __param_lo;
		this->_field_hi = __param_hi;
	}

	~_118dab460_accept_range(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118dab460_accept_range(void) { this->self = jule::Ref<_118dab460_accept_range>::make(this, nullptr); }

	inline bool operator==(const _118dab460_accept_range &_Src) {
		return 
			this->_field_lo == _Src._field_lo &&
			this->_field_hi == _Src._field_hi;
	}

	inline bool operator!=(const _118dab460_accept_range &_Src) { return !this->operator==(_Src); }
};


struct _11911a8a0_Token {
	jule::Ref<_11911a8a0_Token> self{};

	jule::Ref<_118d9a520_File> _field_file{jule::Ref<_118d9a520_File>()};
	jule::Int _field_row{jule::Int()};
	jule::Int _field_column{jule::Int()};
	jule::Str _field_kind{jule::Str()};
	jule::Uint _field_id{0LLU};


	_11911a8a0_Token(jule::Ref<_118d9a520_File> __param_file, jule::Int __param_row, jule::Int __param_column, jule::Str __param_kind, jule::Uint __param_id) {
		this->self = jule::Ref<_11911a8a0_Token>::make(this, nullptr);

		this->_field_file = __param_file;
		this->_field_row = __param_row;
		this->_field_column = __param_column;
		this->_field_kind = __param_kind;
		this->_field_id = __param_id;
	}

	~_11911a8a0_Token(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11911a8a0_Token(void) { this->self = jule::Ref<_11911a8a0_Token>::make(this, nullptr); }

	inline jule::Int _method_prec(void);


	inline bool operator==(const _11911a8a0_Token &_Src) {
		return 
			this->_field_file == _Src._field_file &&
			this->_field_row == _Src._field_row &&
			this->_field_column == _Src._field_column &&
			this->_field_kind == _Src._field_kind &&
			this->_field_id == _Src._field_id;
	}

	inline bool operator!=(const _11911a8a0_Token &_Src) { return !this->operator==(_Src); }
};


struct _11916a220_KindPair {
	jule::Ref<_11916a220_KindPair> self{};

	jule::Str _field_kind{jule::Str("::", 2)};
	jule::Uint _field_id{0LLU};


	_11916a220_KindPair(jule::Str __param_kind, jule::Uint __param_id) {
		this->self = jule::Ref<_11916a220_KindPair>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_id = __param_id;
	}

	~_11916a220_KindPair(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11916a220_KindPair(void) { this->self = jule::Ref<_11916a220_KindPair>::make(this, nullptr); }

	inline bool operator==(const _11916a220_KindPair &_Src) {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_id == _Src._field_id;
	}

	inline bool operator!=(const _11916a220_KindPair &_Src) { return !this->operator==(_Src); }
};


struct _118d9a790_CommentGroup {
	jule::Ref<_118d9a790_CommentGroup> self{};

	jule::Slice<jule::Ref<_118d9a790_Comment>> _field_comments{jule::Slice<jule::Ref<_118d9a790_Comment>>()};


	_118d9a790_CommentGroup(jule::Slice<jule::Ref<_118d9a790_Comment>> __param_comments) {
		this->self = jule::Ref<_118d9a790_CommentGroup>::make(this, nullptr);

		this->_field_comments = __param_comments;
	}

	~_118d9a790_CommentGroup(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118d9a790_CommentGroup(void) { this->self = jule::Ref<_118d9a790_CommentGroup>::make(this, nullptr); }

	inline bool operator==(const _118d9a790_CommentGroup &_Src) {
		return 
			this->_field_comments == _Src._field_comments;
	}

	inline bool operator!=(const _118d9a790_CommentGroup &_Src) { return !this->operator==(_Src); }
};


struct _118d9a790_NamespaceTypeDecl {
	jule::Ref<_118d9a790_NamespaceTypeDecl> self{};

	jule::Slice<_11911a8a0_Token> _field_idents{jule::Slice<_11911a8a0_Token>()};
	jule::Ref<_118d9a790_IdentTypeDecl> _field_kind{jule::Ref<_118d9a790_IdentTypeDecl>()};


	_118d9a790_NamespaceTypeDecl(jule::Slice<_11911a8a0_Token> __param_idents, jule::Ref<_118d9a790_IdentTypeDecl> __param_kind) {
		this->self = jule::Ref<_118d9a790_NamespaceTypeDecl>::make(this, nullptr);

		this->_field_idents = __param_idents;
		this->_field_kind = __param_kind;
	}

	~_118d9a790_NamespaceTypeDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118d9a790_NamespaceTypeDecl(void) { this->self = jule::Ref<_118d9a790_NamespaceTypeDecl>::make(this, nullptr); }

	inline bool operator==(const _118d9a790_NamespaceTypeDecl &_Src) {
		return 
			this->_field_idents == _Src._field_idents &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _118d9a790_NamespaceTypeDecl &_Src) { return !this->operator==(_Src); }
};


struct _118d9a790_RefTypeDecl {
	jule::Ref<_118d9a790_RefTypeDecl> self{};

	jule::Ref<_118d9a790_TypeDecl> _field_elem{jule::Ref<_118d9a790_TypeDecl>()};


	_118d9a790_RefTypeDecl(jule::Ref<_118d9a790_TypeDecl> __param_elem) {
		this->self = jule::Ref<_118d9a790_RefTypeDecl>::make(this, nullptr);

		this->_field_elem = __param_elem;
	}

	~_118d9a790_RefTypeDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118d9a790_RefTypeDecl(void) { this->self = jule::Ref<_118d9a790_RefTypeDecl>::make(this, nullptr); }

	inline bool operator==(const _118d9a790_RefTypeDecl &_Src) {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _118d9a790_RefTypeDecl &_Src) { return !this->operator==(_Src); }
};


struct _118d9a790_SlcTypeDecl {
	jule::Ref<_118d9a790_SlcTypeDecl> self{};

	jule::Ref<_118d9a790_TypeDecl> _field_elem{jule::Ref<_118d9a790_TypeDecl>()};


	_118d9a790_SlcTypeDecl(jule::Ref<_118d9a790_TypeDecl> __param_elem) {
		this->self = jule::Ref<_118d9a790_SlcTypeDecl>::make(this, nullptr);

		this->_field_elem = __param_elem;
	}

	~_118d9a790_SlcTypeDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118d9a790_SlcTypeDecl(void) { this->self = jule::Ref<_118d9a790_SlcTypeDecl>::make(this, nullptr); }

	inline bool operator==(const _118d9a790_SlcTypeDecl &_Src) {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _118d9a790_SlcTypeDecl &_Src) { return !this->operator==(_Src); }
};


struct _118d9a790_TupleTypeDecl {
	jule::Ref<_118d9a790_TupleTypeDecl> self{};

	jule::Slice<jule::Ref<_118d9a790_TypeDecl>> _field_types{jule::Slice<jule::Ref<_118d9a790_TypeDecl>>()};


	_118d9a790_TupleTypeDecl(jule::Slice<jule::Ref<_118d9a790_TypeDecl>> __param_types) {
		this->self = jule::Ref<_118d9a790_TupleTypeDecl>::make(this, nullptr);

		this->_field_types = __param_types;
	}

	~_118d9a790_TupleTypeDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118d9a790_TupleTypeDecl(void) { this->self = jule::Ref<_118d9a790_TupleTypeDecl>::make(this, nullptr); }

	inline bool operator==(const _118d9a790_TupleTypeDecl &_Src) {
		return 
			this->_field_types == _Src._field_types;
	}

	inline bool operator!=(const _118d9a790_TupleTypeDecl &_Src) { return !this->operator==(_Src); }
};


struct _118d9a790_PtrTypeDecl {
	jule::Ref<_118d9a790_PtrTypeDecl> self{};

	jule::Ref<_118d9a790_TypeDecl> _field_elem{jule::Ref<_118d9a790_TypeDecl>()};


	_118d9a790_PtrTypeDecl(jule::Ref<_118d9a790_TypeDecl> __param_elem) {
		this->self = jule::Ref<_118d9a790_PtrTypeDecl>::make(this, nullptr);

		this->_field_elem = __param_elem;
	}

	~_118d9a790_PtrTypeDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118d9a790_PtrTypeDecl(void) { this->self = jule::Ref<_118d9a790_PtrTypeDecl>::make(this, nullptr); }

	inline jule::Bool _method_is_unsafe(void);


	inline bool operator==(const _118d9a790_PtrTypeDecl &_Src) {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _118d9a790_PtrTypeDecl &_Src) { return !this->operator==(_Src); }
};


struct _118d9a790_ArrTypeDecl {
	jule::Ref<_118d9a790_ArrTypeDecl> self{};

	jule::Ref<_118d9a790_TypeDecl> _field_elem{jule::Ref<_118d9a790_TypeDecl>()};
	jule::Ref<_118d9a790_Expr> _field_size{jule::Ref<_118d9a790_Expr>()};


	_118d9a790_ArrTypeDecl(jule::Ref<_118d9a790_TypeDecl> __param_elem, jule::Ref<_118d9a790_Expr> __param_size) {
		this->self = jule::Ref<_118d9a790_ArrTypeDecl>::make(this, nullptr);

		this->_field_elem = __param_elem;
		this->_field_size = __param_size;
	}

	~_118d9a790_ArrTypeDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118d9a790_ArrTypeDecl(void) { this->self = jule::Ref<_118d9a790_ArrTypeDecl>::make(this, nullptr); }

	inline jule::Bool _method_auto_sized(void);


	inline bool operator==(const _118d9a790_ArrTypeDecl &_Src) {
		return 
			this->_field_elem == _Src._field_elem &&
			this->_field_size == _Src._field_size;
	}

	inline bool operator!=(const _118d9a790_ArrTypeDecl &_Src) { return !this->operator==(_Src); }
};


struct _118d9a790_MapTypeDecl {
	jule::Ref<_118d9a790_MapTypeDecl> self{};

	jule::Ref<_118d9a790_TypeDecl> _field_key{jule::Ref<_118d9a790_TypeDecl>()};
	jule::Ref<_118d9a790_TypeDecl> _field_val{jule::Ref<_118d9a790_TypeDecl>()};


	_118d9a790_MapTypeDecl(jule::Ref<_118d9a790_TypeDecl> __param_key, jule::Ref<_118d9a790_TypeDecl> __param_val) {
		this->self = jule::Ref<_118d9a790_MapTypeDecl>::make(this, nullptr);

		this->_field_key = __param_key;
		this->_field_val = __param_val;
	}

	~_118d9a790_MapTypeDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118d9a790_MapTypeDecl(void) { this->self = jule::Ref<_118d9a790_MapTypeDecl>::make(this, nullptr); }

	inline bool operator==(const _118d9a790_MapTypeDecl &_Src) {
		return 
			this->_field_key == _Src._field_key &&
			this->_field_val == _Src._field_val;
	}

	inline bool operator!=(const _118d9a790_MapTypeDecl &_Src) { return !this->operator==(_Src); }
};


struct _118d9a790_RetTypeDecl {
	jule::Ref<_118d9a790_RetTypeDecl> self{};

	jule::Ref<_118d9a790_TypeDecl> _field_kind{jule::Ref<_118d9a790_TypeDecl>()};
	jule::Slice<_11911a8a0_Token> _field_idents{jule::Slice<_11911a8a0_Token>()};


	_118d9a790_RetTypeDecl(jule::Ref<_118d9a790_TypeDecl> __param_kind, jule::Slice<_11911a8a0_Token> __param_idents) {
		this->self = jule::Ref<_118d9a790_RetTypeDecl>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_idents = __param_idents;
	}

	~_118d9a790_RetTypeDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118d9a790_RetTypeDecl(void) { this->self = jule::Ref<_118d9a790_RetTypeDecl>::make(this, nullptr); }

	inline bool operator==(const _118d9a790_RetTypeDecl &_Src) {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_idents == _Src._field_idents;
	}

	inline bool operator!=(const _118d9a790_RetTypeDecl &_Src) { return !this->operator==(_Src); }
};


struct _118d9a790_TupleExpr {
	jule::Ref<_118d9a790_TupleExpr> self{};

	jule::Slice<jule::Any> _field_expr{jule::Slice<jule::Any>()};


	_118d9a790_TupleExpr(jule::Slice<jule::Any> __param_expr) {
		this->self = jule::Ref<_118d9a790_TupleExpr>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_118d9a790_TupleExpr(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118d9a790_TupleExpr(void) { this->self = jule::Ref<_118d9a790_TupleExpr>::make(this, nullptr); }

	inline bool operator==(const _118d9a790_TupleExpr &_Src) {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _118d9a790_TupleExpr &_Src) { return !this->operator==(_Src); }
};


struct _118d9a790_LitExpr {
	jule::Ref<_118d9a790_LitExpr> self{};

	_11911a8a0_Token _field_token{_11911a8a0_Token()};
	jule::Str _field_value{jule::Str()};


	_118d9a790_LitExpr(_11911a8a0_Token __param_token, jule::Str __param_value) {
		this->self = jule::Ref<_118d9a790_LitExpr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_value = __param_value;
	}

	~_118d9a790_LitExpr(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118d9a790_LitExpr(void) { this->self = jule::Ref<_118d9a790_LitExpr>::make(this, nullptr); }

	inline jule::Bool _method_is_nil(void);


	inline bool operator==(const _118d9a790_LitExpr &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_value == _Src._field_value;
	}

	inline bool operator!=(const _118d9a790_LitExpr &_Src) { return !this->operator==(_Src); }
};


struct _118d9a790_UnsafeExpr {
	jule::Ref<_118d9a790_UnsafeExpr> self{};

	_11911a8a0_Token _field_token{_11911a8a0_Token()};
	jule::Any _field_expr{jule::Any()};


	_118d9a790_UnsafeExpr(_11911a8a0_Token __param_token, jule::Any __param_expr) {
		this->self = jule::Ref<_118d9a790_UnsafeExpr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_expr = __param_expr;
	}

	~_118d9a790_UnsafeExpr(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118d9a790_UnsafeExpr(void) { this->self = jule::Ref<_118d9a790_UnsafeExpr>::make(this, nullptr); }

	inline bool operator==(const _118d9a790_UnsafeExpr &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _118d9a790_UnsafeExpr &_Src) { return !this->operator==(_Src); }
};


struct _118d9a790_IdentExpr {
	jule::Ref<_118d9a790_IdentExpr> self{};

	_11911a8a0_Token _field_token{_11911a8a0_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_cpp_linked{jule::Bool()};


	_118d9a790_IdentExpr(_11911a8a0_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked) {
		this->self = jule::Ref<_118d9a790_IdentExpr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_cpp_linked = __param_cpp_linked;
	}

	~_118d9a790_IdentExpr(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118d9a790_IdentExpr(void) { this->self = jule::Ref<_118d9a790_IdentExpr>::make(this, nullptr); }

	inline jule::Bool _method_is_self(void);


	inline bool operator==(const _118d9a790_IdentExpr &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_cpp_linked == _Src._field_cpp_linked;
	}

	inline bool operator!=(const _118d9a790_IdentExpr &_Src) { return !this->operator==(_Src); }
};


struct _118d9a790_UnaryExpr {
	jule::Ref<_118d9a790_UnaryExpr> self{};

	_11911a8a0_Token _field_op{_11911a8a0_Token()};
	jule::Any _field_expr{jule::Any()};


	_118d9a790_UnaryExpr(_11911a8a0_Token __param_op, jule::Any __param_expr) {
		this->self = jule::Ref<_118d9a790_UnaryExpr>::make(this, nullptr);

		this->_field_op = __param_op;
		this->_field_expr = __param_expr;
	}

	~_118d9a790_UnaryExpr(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118d9a790_UnaryExpr(void) { this->self = jule::Ref<_118d9a790_UnaryExpr>::make(this, nullptr); }

	inline bool operator==(const _118d9a790_UnaryExpr &_Src) {
		return 
			this->_field_op == _Src._field_op &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _118d9a790_UnaryExpr &_Src) { return !this->operator==(_Src); }
};


struct _118d9a790_VariadicExpr {
	jule::Ref<_118d9a790_VariadicExpr> self{};

	_11911a8a0_Token _field_token{_11911a8a0_Token()};
	jule::Any _field_expr{jule::Any()};


	_118d9a790_VariadicExpr(_11911a8a0_Token __param_token, jule::Any __param_expr) {
		this->self = jule::Ref<_118d9a790_VariadicExpr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_expr = __param_expr;
	}

	~_118d9a790_VariadicExpr(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118d9a790_VariadicExpr(void) { this->self = jule::Ref<_118d9a790_VariadicExpr>::make(this, nullptr); }

	inline bool operator==(const _118d9a790_VariadicExpr &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _118d9a790_VariadicExpr &_Src) { return !this->operator==(_Src); }
};


struct _118d9a790_CastExpr {
	jule::Ref<_118d9a790_CastExpr> self{};

	jule::Ref<_118d9a790_TypeDecl> _field_kind{jule::Ref<_118d9a790_TypeDecl>()};
	jule::Any _field_expr{jule::Any()};


	_118d9a790_CastExpr(jule::Ref<_118d9a790_TypeDecl> __param_kind, jule::Any __param_expr) {
		this->self = jule::Ref<_118d9a790_CastExpr>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_expr = __param_expr;
	}

	~_118d9a790_CastExpr(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118d9a790_CastExpr(void) { this->self = jule::Ref<_118d9a790_CastExpr>::make(this, nullptr); }

	inline bool operator==(const _118d9a790_CastExpr &_Src) {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _118d9a790_CastExpr &_Src) { return !this->operator==(_Src); }
};


struct _118d9a790_NsSelectionExpr {
	jule::Ref<_118d9a790_NsSelectionExpr> self{};

	jule::Slice<_11911a8a0_Token> _field_ns{jule::Slice<_11911a8a0_Token>()};
	_11911a8a0_Token _field_ident{_11911a8a0_Token()};


	_118d9a790_NsSelectionExpr(jule::Slice<_11911a8a0_Token> __param_ns, _11911a8a0_Token __param_ident) {
		this->self = jule::Ref<_118d9a790_NsSelectionExpr>::make(this, nullptr);

		this->_field_ns = __param_ns;
		this->_field_ident = __param_ident;
	}

	~_118d9a790_NsSelectionExpr(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118d9a790_NsSelectionExpr(void) { this->self = jule::Ref<_118d9a790_NsSelectionExpr>::make(this, nullptr); }

	inline bool operator==(const _118d9a790_NsSelectionExpr &_Src) {
		return 
			this->_field_ns == _Src._field_ns &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _118d9a790_NsSelectionExpr &_Src) { return !this->operator==(_Src); }
};


struct _118d9a790_SubIdentExpr {
	jule::Ref<_118d9a790_SubIdentExpr> self{};

	jule::Bool _field_is_self{jule::Bool()};
	jule::Any _field_expr{jule::Any()};
	_11911a8a0_Token _field_ident{_11911a8a0_Token()};


	_118d9a790_SubIdentExpr(jule::Bool __param_is_self, jule::Any __param_expr, _11911a8a0_Token __param_ident) {
		this->self = jule::Ref<_118d9a790_SubIdentExpr>::make(this, nullptr);

		this->_field_is_self = __param_is_self;
		this->_field_expr = __param_expr;
		this->_field_ident = __param_ident;
	}

	~_118d9a790_SubIdentExpr(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118d9a790_SubIdentExpr(void) { this->self = jule::Ref<_118d9a790_SubIdentExpr>::make(this, nullptr); }

	inline bool operator==(const _118d9a790_SubIdentExpr &_Src) {
		return 
			this->_field_is_self == _Src._field_is_self &&
			this->_field_expr == _Src._field_expr &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _118d9a790_SubIdentExpr &_Src) { return !this->operator==(_Src); }
};


struct _118d9a790_BinopExpr {
	jule::Ref<_118d9a790_BinopExpr> self{};

	jule::Any _field_left{jule::Any()};
	jule::Any _field_right{jule::Any()};
	_11911a8a0_Token _field_op{_11911a8a0_Token()};


	_118d9a790_BinopExpr(jule::Any __param_left, jule::Any __param_right, _11911a8a0_Token __param_op) {
		this->self = jule::Ref<_118d9a790_BinopExpr>::make(this, nullptr);

		this->_field_left = __param_left;
		this->_field_right = __param_right;
		this->_field_op = __param_op;
	}

	~_118d9a790_BinopExpr(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118d9a790_BinopExpr(void) { this->self = jule::Ref<_118d9a790_BinopExpr>::make(this, nullptr); }

	inline bool operator==(const _118d9a790_BinopExpr &_Src) {
		return 
			this->_field_left == _Src._field_left &&
			this->_field_right == _Src._field_right &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _118d9a790_BinopExpr &_Src) { return !this->operator==(_Src); }
};


struct _118d9a790_FieldExprPair {
	jule::Ref<_118d9a790_FieldExprPair> self{};

	_11911a8a0_Token _field_field{_11911a8a0_Token()};
	jule::Any _field_expr{jule::Any()};


	_118d9a790_FieldExprPair(_11911a8a0_Token __param_field, jule::Any __param_expr) {
		this->self = jule::Ref<_118d9a790_FieldExprPair>::make(this, nullptr);

		this->_field_field = __param_field;
		this->_field_expr = __param_expr;
	}

	~_118d9a790_FieldExprPair(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118d9a790_FieldExprPair(void) { this->self = jule::Ref<_118d9a790_FieldExprPair>::make(this, nullptr); }

	inline jule::Bool _method_is_targeted(void);


	inline bool operator==(const _118d9a790_FieldExprPair &_Src) {
		return 
			this->_field_field == _Src._field_field &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _118d9a790_FieldExprPair &_Src) { return !this->operator==(_Src); }
};


struct _118d9a790_StructLit {
	jule::Ref<_118d9a790_StructLit> self{};

	jule::Ref<_118d9a790_TypeDecl> _field_kind{jule::Ref<_118d9a790_TypeDecl>()};
	jule::Slice<jule::Any> _field_exprs{jule::Slice<jule::Any>()};


	_118d9a790_StructLit(jule::Ref<_118d9a790_TypeDecl> __param_kind, jule::Slice<jule::Any> __param_exprs) {
		this->self = jule::Ref<_118d9a790_StructLit>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_exprs = __param_exprs;
	}

	~_118d9a790_StructLit(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118d9a790_StructLit(void) { this->self = jule::Ref<_118d9a790_StructLit>::make(this, nullptr); }

	inline bool operator==(const _118d9a790_StructLit &_Src) {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_exprs == _Src._field_exprs;
	}

	inline bool operator!=(const _118d9a790_StructLit &_Src) { return !this->operator==(_Src); }
};


struct _118d9a790_BraceLit {
	jule::Ref<_118d9a790_BraceLit> self{};

	_11911a8a0_Token _field_token{_11911a8a0_Token()};
	jule::Slice<jule::Any> _field_exprs{jule::Slice<jule::Any>()};


	_118d9a790_BraceLit(_11911a8a0_Token __param_token, jule::Slice<jule::Any> __param_exprs) {
		this->self = jule::Ref<_118d9a790_BraceLit>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_exprs = __param_exprs;
	}

	~_118d9a790_BraceLit(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118d9a790_BraceLit(void) { this->self = jule::Ref<_118d9a790_BraceLit>::make(this, nullptr); }

	inline jule::Bool _method_is_empty(void);


	inline bool operator==(const _118d9a790_BraceLit &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_exprs == _Src._field_exprs;
	}

	inline bool operator!=(const _118d9a790_BraceLit &_Src) { return !this->operator==(_Src); }
};


struct _118d9a790_KeyValPair {
	jule::Ref<_118d9a790_KeyValPair> self{};

	jule::Any _field_key{jule::Any()};
	jule::Any _field_val{jule::Any()};
	_11911a8a0_Token _field_colon{_11911a8a0_Token()};


	_118d9a790_KeyValPair(jule::Any __param_key, jule::Any __param_val, _11911a8a0_Token __param_colon) {
		this->self = jule::Ref<_118d9a790_KeyValPair>::make(this, nullptr);

		this->_field_key = __param_key;
		this->_field_val = __param_val;
		this->_field_colon = __param_colon;
	}

	~_118d9a790_KeyValPair(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118d9a790_KeyValPair(void) { this->self = jule::Ref<_118d9a790_KeyValPair>::make(this, nullptr); }

	inline bool operator==(const _118d9a790_KeyValPair &_Src) {
		return 
			this->_field_key == _Src._field_key &&
			this->_field_val == _Src._field_val &&
			this->_field_colon == _Src._field_colon;
	}

	inline bool operator!=(const _118d9a790_KeyValPair &_Src) { return !this->operator==(_Src); }
};


struct _118d9a790_SliceExpr {
	jule::Ref<_118d9a790_SliceExpr> self{};

	_11911a8a0_Token _field_token{_11911a8a0_Token()};
	jule::Slice<jule::Any> _field_elems{jule::Slice<jule::Any>()};


	_118d9a790_SliceExpr(_11911a8a0_Token __param_token, jule::Slice<jule::Any> __param_elems) {
		this->self = jule::Ref<_118d9a790_SliceExpr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_elems = __param_elems;
	}

	~_118d9a790_SliceExpr(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118d9a790_SliceExpr(void) { this->self = jule::Ref<_118d9a790_SliceExpr>::make(this, nullptr); }

	inline jule::Bool _method_is_empty(void);


	inline bool operator==(const _118d9a790_SliceExpr &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_elems == _Src._field_elems;
	}

	inline bool operator!=(const _118d9a790_SliceExpr &_Src) { return !this->operator==(_Src); }
};


struct _118d9a790_IndexingExpr {
	jule::Ref<_118d9a790_IndexingExpr> self{};

	_11911a8a0_Token _field_token{_11911a8a0_Token()};
	jule::Any _field_expr{jule::Any()};
	jule::Any _field_index{jule::Any()};


	_118d9a790_IndexingExpr(_11911a8a0_Token __param_token, jule::Any __param_expr, jule::Any __param_index) {
		this->self = jule::Ref<_118d9a790_IndexingExpr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_expr = __param_expr;
		this->_field_index = __param_index;
	}

	~_118d9a790_IndexingExpr(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118d9a790_IndexingExpr(void) { this->self = jule::Ref<_118d9a790_IndexingExpr>::make(this, nullptr); }

	inline bool operator==(const _118d9a790_IndexingExpr &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_index == _Src._field_index;
	}

	inline bool operator!=(const _118d9a790_IndexingExpr &_Src) { return !this->operator==(_Src); }
};


struct _118d9a790_SlicingExpr {
	jule::Ref<_118d9a790_SlicingExpr> self{};

	_11911a8a0_Token _field_token{_11911a8a0_Token()};
	jule::Any _field_expr{jule::Any()};
	jule::Any _field_start{jule::Any()};
	jule::Any _field_to{jule::Any()};


	_118d9a790_SlicingExpr(_11911a8a0_Token __param_token, jule::Any __param_expr, jule::Any __param_start, jule::Any __param_to) {
		this->self = jule::Ref<_118d9a790_SlicingExpr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_expr = __param_expr;
		this->_field_start = __param_start;
		this->_field_to = __param_to;
	}

	~_118d9a790_SlicingExpr(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118d9a790_SlicingExpr(void) { this->self = jule::Ref<_118d9a790_SlicingExpr>::make(this, nullptr); }

	inline bool operator==(const _118d9a790_SlicingExpr &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_start == _Src._field_start &&
			this->_field_to == _Src._field_to;
	}

	inline bool operator!=(const _118d9a790_SlicingExpr &_Src) { return !this->operator==(_Src); }
};


struct _118d9a790_LabelSt {
	jule::Ref<_118d9a790_LabelSt> self{};

	_11911a8a0_Token _field_token{_11911a8a0_Token()};
	jule::Str _field_ident{jule::Str()};


	_118d9a790_LabelSt(_11911a8a0_Token __param_token, jule::Str __param_ident) {
		this->self = jule::Ref<_118d9a790_LabelSt>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
	}

	~_118d9a790_LabelSt(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118d9a790_LabelSt(void) { this->self = jule::Ref<_118d9a790_LabelSt>::make(this, nullptr); }

	inline bool operator==(const _118d9a790_LabelSt &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _118d9a790_LabelSt &_Src) { return !this->operator==(_Src); }
};


struct _118d9a790_FallSt {
	jule::Ref<_118d9a790_FallSt> self{};

	_11911a8a0_Token _field_token{_11911a8a0_Token()};


	_118d9a790_FallSt(_11911a8a0_Token __param_token) {
		this->self = jule::Ref<_118d9a790_FallSt>::make(this, nullptr);

		this->_field_token = __param_token;
	}

	~_118d9a790_FallSt(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118d9a790_FallSt(void) { this->self = jule::Ref<_118d9a790_FallSt>::make(this, nullptr); }

	inline bool operator==(const _118d9a790_FallSt &_Src) {
		return 
			this->_field_token == _Src._field_token;
	}

	inline bool operator!=(const _118d9a790_FallSt &_Src) { return !this->operator==(_Src); }
};


struct _118d9a790_AssignSt {
	jule::Ref<_118d9a790_AssignSt> self{};

	jule::Bool _field_declarative{jule::Bool()};
	_11911a8a0_Token _field_setter{_11911a8a0_Token()};
	jule::Slice<jule::Ref<_118d9a790_AssignLeft>> _field_left{jule::Slice<jule::Ref<_118d9a790_AssignLeft>>()};
	jule::Ref<_118d9a790_Expr> _field_right{jule::Ref<_118d9a790_Expr>()};


	_118d9a790_AssignSt(jule::Bool __param_declarative, _11911a8a0_Token __param_setter, jule::Slice<jule::Ref<_118d9a790_AssignLeft>> __param_left, jule::Ref<_118d9a790_Expr> __param_right) {
		this->self = jule::Ref<_118d9a790_AssignSt>::make(this, nullptr);

		this->_field_declarative = __param_declarative;
		this->_field_setter = __param_setter;
		this->_field_left = __param_left;
		this->_field_right = __param_right;
	}

	~_118d9a790_AssignSt(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118d9a790_AssignSt(void) { this->self = jule::Ref<_118d9a790_AssignSt>::make(this, nullptr); }

	inline bool operator==(const _118d9a790_AssignSt &_Src) {
		return 
			this->_field_declarative == _Src._field_declarative &&
			this->_field_setter == _Src._field_setter &&
			this->_field_left == _Src._field_left &&
			this->_field_right == _Src._field_right;
	}

	inline bool operator!=(const _118d9a790_AssignSt &_Src) { return !this->operator==(_Src); }
};


struct _118d9a790_ScopeTree {
	jule::Ref<_118d9a790_ScopeTree> self{};

	jule::Ref<_118d9a790_ScopeTree> _field_parent{jule::Ref<_118d9a790_ScopeTree>()};
	jule::Bool _field_unsafety{jule::Bool()};
	jule::Bool _field_deferred{jule::Bool()};
	jule::Slice<jule::Any> _field_stmts{jule::Slice<jule::Any>()};


	_118d9a790_ScopeTree(jule::Ref<_118d9a790_ScopeTree> __param_parent, jule::Bool __param_unsafety, jule::Bool __param_deferred, jule::Slice<jule::Any> __param_stmts) {
		this->self = jule::Ref<_118d9a790_ScopeTree>::make(this, nullptr);

		this->_field_parent = __param_parent;
		this->_field_unsafety = __param_unsafety;
		this->_field_deferred = __param_deferred;
		this->_field_stmts = __param_stmts;
	}

	~_118d9a790_ScopeTree(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118d9a790_ScopeTree(void) { this->self = jule::Ref<_118d9a790_ScopeTree>::make(this, nullptr); }

	inline bool operator==(const _118d9a790_ScopeTree &_Src) {
		return 
			this->_field_parent == _Src._field_parent &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_deferred == _Src._field_deferred &&
			this->_field_stmts == _Src._field_stmts;
	}

	inline bool operator!=(const _118d9a790_ScopeTree &_Src) { return !this->operator==(_Src); }
};


struct _118d9a790_RetSt {
	jule::Ref<_118d9a790_RetSt> self{};

	_11911a8a0_Token _field_token{_11911a8a0_Token()};
	jule::Ref<_118d9a790_Expr> _field_expr{jule::Ref<_118d9a790_Expr>()};


	_118d9a790_RetSt(_11911a8a0_Token __param_token, jule::Ref<_118d9a790_Expr> __param_expr) {
		this->self = jule::Ref<_118d9a790_RetSt>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_expr = __param_expr;
	}

	~_118d9a790_RetSt(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118d9a790_RetSt(void) { this->self = jule::Ref<_118d9a790_RetSt>::make(this, nullptr); }

	inline bool operator==(const _118d9a790_RetSt &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _118d9a790_RetSt &_Src) { return !this->operator==(_Src); }
};


struct _118d9a790_Iter {
	jule::Ref<_118d9a790_Iter> self{};

	_11911a8a0_Token _field_token{_11911a8a0_Token()};
	jule::Any _field_kind{jule::Any()};
	jule::Ref<_118d9a790_ScopeTree> _field_scope{jule::Ref<_118d9a790_ScopeTree>()};


	_118d9a790_Iter(_11911a8a0_Token __param_token, jule::Any __param_kind, jule::Ref<_118d9a790_ScopeTree> __param_scope) {
		this->self = jule::Ref<_118d9a790_Iter>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_kind = __param_kind;
		this->_field_scope = __param_scope;
	}

	~_118d9a790_Iter(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118d9a790_Iter(void) { this->self = jule::Ref<_118d9a790_Iter>::make(this, nullptr); }

	inline jule::Bool _method_is_inf(void);


	inline bool operator==(const _118d9a790_Iter &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_kind == _Src._field_kind &&
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _118d9a790_Iter &_Src) { return !this->operator==(_Src); }
};


struct _118d9a790_WhileKind {
	jule::Ref<_118d9a790_WhileKind> self{};

	jule::Ref<_118d9a790_Expr> _field_expr{jule::Ref<_118d9a790_Expr>()};
	jule::Any _field_next{jule::Any()};
	_11911a8a0_Token _field_next_token{_11911a8a0_Token()};


	_118d9a790_WhileKind(jule::Ref<_118d9a790_Expr> __param_expr, jule::Any __param_next, _11911a8a0_Token __param_next_token) {
		this->self = jule::Ref<_118d9a790_WhileKind>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_next = __param_next;
		this->_field_next_token = __param_next_token;
	}

	~_118d9a790_WhileKind(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118d9a790_WhileKind(void) { this->self = jule::Ref<_118d9a790_WhileKind>::make(this, nullptr); }

	inline jule::Bool _method_is_while_next(void);


	inline bool operator==(const _118d9a790_WhileKind &_Src) {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_next == _Src._field_next &&
			this->_field_next_token == _Src._field_next_token;
	}

	inline bool operator!=(const _118d9a790_WhileKind &_Src) { return !this->operator==(_Src); }
};


struct _118d9a790_RangeKind {
	jule::Ref<_118d9a790_RangeKind> self{};

	_11911a8a0_Token _field_in_token{_11911a8a0_Token()};
	jule::Ref<_118d9a790_Expr> _field_expr{jule::Ref<_118d9a790_Expr>()};
	jule::Ref<_118d9a790_VarDecl> _field_key_a{jule::Ref<_118d9a790_VarDecl>()};
	jule::Ref<_118d9a790_VarDecl> _field_key_b{jule::Ref<_118d9a790_VarDecl>()};


	_118d9a790_RangeKind(_11911a8a0_Token __param_in_token, jule::Ref<_118d9a790_Expr> __param_expr, jule::Ref<_118d9a790_VarDecl> __param_key_a, jule::Ref<_118d9a790_VarDecl> __param_key_b) {
		this->self = jule::Ref<_118d9a790_RangeKind>::make(this, nullptr);

		this->_field_in_token = __param_in_token;
		this->_field_expr = __param_expr;
		this->_field_key_a = __param_key_a;
		this->_field_key_b = __param_key_b;
	}

	~_118d9a790_RangeKind(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118d9a790_RangeKind(void) { this->self = jule::Ref<_118d9a790_RangeKind>::make(this, nullptr); }

	inline bool operator==(const _118d9a790_RangeKind &_Src) {
		return 
			this->_field_in_token == _Src._field_in_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_key_a == _Src._field_key_a &&
			this->_field_key_b == _Src._field_key_b;
	}

	inline bool operator!=(const _118d9a790_RangeKind &_Src) { return !this->operator==(_Src); }
};


struct _118d9a790_Conditional {
	jule::Ref<_118d9a790_Conditional> self{};

	jule::Ref<_118d9a790_If> _field_head{jule::Ref<_118d9a790_If>()};
	jule::Slice<jule::Ref<_118d9a790_If>> _field_tail{jule::Slice<jule::Ref<_118d9a790_If>>()};
	jule::Ref<_118d9a790_Else> _field_default{jule::Ref<_118d9a790_Else>()};


	_118d9a790_Conditional(jule::Ref<_118d9a790_If> __param_head, jule::Slice<jule::Ref<_118d9a790_If>> __param_tail, jule::Ref<_118d9a790_Else> __param_default) {
		this->self = jule::Ref<_118d9a790_Conditional>::make(this, nullptr);

		this->_field_head = __param_head;
		this->_field_tail = __param_tail;
		this->_field_default = __param_default;
	}

	~_118d9a790_Conditional(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118d9a790_Conditional(void) { this->self = jule::Ref<_118d9a790_Conditional>::make(this, nullptr); }

	inline bool operator==(const _118d9a790_Conditional &_Src) {
		return 
			this->_field_head == _Src._field_head &&
			this->_field_tail == _Src._field_tail &&
			this->_field_default == _Src._field_default;
	}

	inline bool operator!=(const _118d9a790_Conditional &_Src) { return !this->operator==(_Src); }
};


struct _118d9a790_MatchCase {
	jule::Ref<_118d9a790_MatchCase> self{};

	_11911a8a0_Token _field_token{_11911a8a0_Token()};
	jule::Bool _field_type_match{jule::Bool()};
	jule::Ref<_118d9a790_Expr> _field_expr{jule::Ref<_118d9a790_Expr>()};
	jule::Slice<jule::Ref<_118d9a790_Case>> _field_cases{jule::Slice<jule::Ref<_118d9a790_Case>>()};
	jule::Ref<_118d9a790_Else> _field_default{jule::Ref<_118d9a790_Else>()};


	_118d9a790_MatchCase(_11911a8a0_Token __param_token, jule::Bool __param_type_match, jule::Ref<_118d9a790_Expr> __param_expr, jule::Slice<jule::Ref<_118d9a790_Case>> __param_cases, jule::Ref<_118d9a790_Else> __param_default) {
		this->self = jule::Ref<_118d9a790_MatchCase>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_type_match = __param_type_match;
		this->_field_expr = __param_expr;
		this->_field_cases = __param_cases;
		this->_field_default = __param_default;
	}

	~_118d9a790_MatchCase(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118d9a790_MatchCase(void) { this->self = jule::Ref<_118d9a790_MatchCase>::make(this, nullptr); }

	inline bool operator==(const _118d9a790_MatchCase &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_type_match == _Src._field_type_match &&
			this->_field_expr == _Src._field_expr &&
			this->_field_cases == _Src._field_cases &&
			this->_field_default == _Src._field_default;
	}

	inline bool operator!=(const _118d9a790_MatchCase &_Src) { return !this->operator==(_Src); }
};


struct _118da92c0_FileInfo {
	jule::Ref<_118da92c0_FileInfo> self{};

	jule::Ref<_118d8a140_Ast> _field_ast{jule::Ref<_118d8a140_Ast>()};
	jule::Slice<_13fe81720_Log> _field_errors{jule::Slice<_13fe81720_Log>()};


	_118da92c0_FileInfo(jule::Ref<_118d8a140_Ast> __param_ast, jule::Slice<_13fe81720_Log> __param_errors) {
		this->self = jule::Ref<_118da92c0_FileInfo>::make(this, nullptr);

		this->_field_ast = __param_ast;
		this->_field_errors = __param_errors;
	}

	~_118da92c0_FileInfo(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118da92c0_FileInfo(void) { this->self = jule::Ref<_118da92c0_FileInfo>::make(this, nullptr); }

	inline bool operator==(const _118da92c0_FileInfo &_Src) {
		return 
			this->_field_ast == _Src._field_ast &&
			this->_field_errors == _Src._field_errors;
	}

	inline bool operator!=(const _118da92c0_FileInfo &_Src) { return !this->operator==(_Src); }
};


struct _11912dd80_Stmt {
	jule::Ref<_11912dd80_Stmt> self{};

	jule::Slice<_11911a8a0_Token> _field_tokens{jule::Slice<_11911a8a0_Token>()};
	jule::Bool _field_terminated{jule::Bool()};


	_11912dd80_Stmt(jule::Slice<_11911a8a0_Token> __param_tokens, jule::Bool __param_terminated) {
		this->self = jule::Ref<_11912dd80_Stmt>::make(this, nullptr);

		this->_field_tokens = __param_tokens;
		this->_field_terminated = __param_terminated;
	}

	~_11912dd80_Stmt(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11912dd80_Stmt(void) { this->self = jule::Ref<_11912dd80_Stmt>::make(this, nullptr); }

	inline bool operator==(const _11912dd80_Stmt &_Src) {
		return 
			this->_field_tokens == _Src._field_tokens &&
			this->_field_terminated == _Src._field_terminated;
	}

	inline bool operator!=(const _11912dd80_Stmt &_Src) { return !this->operator==(_Src); }
};


struct _11912dd80_ScopeParser {
	jule::Ref<_11912dd80_ScopeParser> self{};

	jule::Ref<_11953bd10_Parser> _field_p{jule::Ref<_11953bd10_Parser>()};
	jule::Ref<_118d9a790_ScopeTree> _field_s{jule::Ref<_118d9a790_ScopeTree>()};
	jule::Slice<jule::Ref<_11912dd80_Stmt>> _field_stms{jule::Slice<jule::Ref<_11912dd80_Stmt>>()};
	jule::Int _field_pos{jule::Int()};


	_11912dd80_ScopeParser(jule::Ref<_11953bd10_Parser> __param_p, jule::Ref<_118d9a790_ScopeTree> __param_s, jule::Slice<jule::Ref<_11912dd80_Stmt>> __param_stms, jule::Int __param_pos) {
		this->self = jule::Ref<_11912dd80_ScopeParser>::make(this, nullptr);

		this->_field_p = __param_p;
		this->_field_s = __param_s;
		this->_field_stms = __param_stms;
		this->_field_pos = __param_pos;
	}

	~_11912dd80_ScopeParser(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11912dd80_ScopeParser(void) { this->self = jule::Ref<_11912dd80_ScopeParser>::make(this, nullptr); }

	inline void _method_stop(void);


	inline jule::Bool _method_stopped(void);


	inline jule::Bool _method_finished(void);


	inline jule::Bool _method_is_last_st(void);


	inline void _method_push_err(_11911a8a0_Token,jule::Str);


	inline void _method_insert_as_next(jule::Slice<_11911a8a0_Token>);


	inline jule::Ref<_11912dd80_Stmt> _method_next(void);


	inline jule::Ref<_118d9a790_ScopeTree> _method_build_scope(jule::Slice<_11911a8a0_Token>);


	inline jule::Any _method_build_var_st(jule::Slice<_11911a8a0_Token>);


	inline jule::Any _method_build_ret_st(jule::Slice<_11911a8a0_Token>);


	inline jule::Any _method_build_while_next_iter(jule::Ref<_11912dd80_Stmt>);


	inline jule::Ref<_118d9a790_WhileKind> _method_build_while_iter_kind(jule::Slice<_11911a8a0_Token>);


	inline jule::Slice<jule::Slice<_11911a8a0_Token>> _method_get_range_kind_keys_tokens(jule::Slice<_11911a8a0_Token>);


	inline jule::Ref<_118d9a790_VarDecl> _method_build_range_kind_key(jule::Slice<_11911a8a0_Token>);


	inline jule::Slice<jule::Ref<_118d9a790_VarDecl>> _method_build_range_kind_keys(jule::Slice<jule::Slice<_11911a8a0_Token>>);


	inline void _method_setup_range_kind_keys_plain(jule::Ref<_118d9a790_RangeKind>,jule::Slice<_11911a8a0_Token>);


	inline void _method_setup_range_kind_keys_explicit(jule::Ref<_118d9a790_RangeKind>,jule::Slice<_11911a8a0_Token>);


	inline void _method_setup_range_kind_keys(jule::Ref<_118d9a790_RangeKind>,jule::Slice<_11911a8a0_Token>);


	inline jule::Ref<_118d9a790_RangeKind> _method_build_range_iter_kind(jule::Slice<_11911a8a0_Token>,jule::Slice<_11911a8a0_Token>,_11911a8a0_Token);


	inline jule::Any _method_build_common_iter_kind(jule::Slice<_11911a8a0_Token>,_11911a8a0_Token);


	inline jule::Any _method_build_common_iter(jule::Slice<_11911a8a0_Token>);


	inline jule::Any _method_buid_iter_st(jule::Ref<_11912dd80_Stmt>);


	inline jule::Any _method_build_break_st(jule::Slice<_11911a8a0_Token>);


	inline jule::Any _method_build_cont_st(jule::Slice<_11911a8a0_Token>);


	inline jule::Ref<_118d9a790_If> _method_build_if(jule::Slice<_11911a8a0_Token>&);


	inline jule::Ref<_118d9a790_Else> _method_build_else(jule::Slice<_11911a8a0_Token>);


	inline jule::Any _method_build_if_else_chain(jule::Slice<_11911a8a0_Token>);


	inline jule::Any _method_build_comment_st(_11911a8a0_Token);


	inline jule::Any _method_build_call_st(jule::Slice<_11911a8a0_Token>);


	inline jule::Any _method_build_co_call_st(jule::Slice<_11911a8a0_Token>);


	inline jule::Any _method_build_goto_st(jule::Slice<_11911a8a0_Token>);


	inline jule::Any _method_build_fall_st(jule::Slice<_11911a8a0_Token>);


	inline jule::Any _method_build_type_alias_st(jule::Slice<_11911a8a0_Token>);


	inline void _method_push_case_expr(jule::Slice<_11911a8a0_Token>,_11911a8a0_Token,jule::Bool,jule::Slice<jule::Ref<_118d9a790_Expr>>&);


	inline jule::Slice<jule::Ref<_118d9a790_Expr>> _method_build_case_exprs(jule::Slice<_11911a8a0_Token>&,jule::Bool);


	inline jule::Ref<_118d9a790_ScopeTree> _method_build_case_scope(jule::Slice<_11911a8a0_Token>&);


	inline std::tuple<jule::Ref<_118d9a790_Case>,jule::Bool> _method_build_case(jule::Slice<_11911a8a0_Token>&,jule::Bool);


	inline std::tuple<jule::Slice<jule::Ref<_118d9a790_Case>>,jule::Ref<_118d9a790_Else>> _method_build_cases(jule::Slice<_11911a8a0_Token>,jule::Bool);


	inline jule::Ref<_118d9a790_MatchCase> _method_build_match_case(jule::Slice<_11911a8a0_Token>);


	inline jule::Ref<_118d9a790_ScopeTree> _method_build_scope_st(jule::Slice<_11911a8a0_Token>);


	inline jule::Ref<_118d9a790_LabelSt> _method_build_label_st(jule::Slice<_11911a8a0_Token>);


	inline std::tuple<jule::Any,jule::Bool> _method_build_id_st(jule::Slice<_11911a8a0_Token>);


	inline jule::Ref<_118dbfd80_AssignInfo> _method_build_assign_info(jule::Slice<_11911a8a0_Token>);


	inline jule::Ref<_118d9a790_AssignLeft> _method_build_assign_l(jule::Slice<_11911a8a0_Token>);


	inline jule::Slice<jule::Ref<_118d9a790_AssignLeft>> _method_build_assign_ls(jule::Slice<jule::Slice<_11911a8a0_Token>>);


	inline std::tuple<jule::Ref<_118d9a790_AssignSt>,jule::Bool> _method_build_plain_assign(jule::Slice<_11911a8a0_Token>);


	inline std::tuple<jule::Ref<_118d9a790_AssignSt>,jule::Bool> _method_build_decl_assign(jule::Slice<_11911a8a0_Token>);


	inline std::tuple<jule::Ref<_118d9a790_AssignSt>,jule::Bool> _method_build_assign_st(jule::Slice<_11911a8a0_Token>);


	inline jule::Any _method_build_st(jule::Ref<_11912dd80_Stmt>);


	inline void _method_build(jule::Slice<_11911a8a0_Token>,jule::Ref<_118d9a790_ScopeTree>);


	inline bool operator==(const _11912dd80_ScopeParser &_Src) {
		return 
			this->_field_p == _Src._field_p &&
			this->_field_s == _Src._field_s &&
			this->_field_stms == _Src._field_stms &&
			this->_field_pos == _Src._field_pos;
	}

	inline bool operator!=(const _11912dd80_ScopeParser &_Src) { return !this->operator==(_Src); }
};


struct _11943fdb0_CallData {
	jule::Ref<_11943fdb0_CallData> self{};

	jule::Slice<_11911a8a0_Token> _field_expr_tokens{jule::Slice<_11911a8a0_Token>()};
	jule::Slice<_11911a8a0_Token> _field_args_tokens{jule::Slice<_11911a8a0_Token>()};
	jule::Slice<_11911a8a0_Token> _field_generics_tokens{jule::Slice<_11911a8a0_Token>()};


	_11943fdb0_CallData(jule::Slice<_11911a8a0_Token> __param_expr_tokens, jule::Slice<_11911a8a0_Token> __param_args_tokens, jule::Slice<_11911a8a0_Token> __param_generics_tokens) {
		this->self = jule::Ref<_11943fdb0_CallData>::make(this, nullptr);

		this->_field_expr_tokens = __param_expr_tokens;
		this->_field_args_tokens = __param_args_tokens;
		this->_field_generics_tokens = __param_generics_tokens;
	}

	~_11943fdb0_CallData(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11943fdb0_CallData(void) { this->self = jule::Ref<_11943fdb0_CallData>::make(this, nullptr); }

	inline bool operator==(const _11943fdb0_CallData &_Src) {
		return 
			this->_field_expr_tokens == _Src._field_expr_tokens &&
			this->_field_args_tokens == _Src._field_args_tokens &&
			this->_field_generics_tokens == _Src._field_generics_tokens;
	}

	inline bool operator!=(const _11943fdb0_CallData &_Src) { return !this->operator==(_Src); }
};


struct _11943fdb0_Precedencer {
	jule::Ref<_11943fdb0_Precedencer> self{};

	jule::Slice<jule::Slice<jule::Any>> _field_pairs{jule::Slice<jule::Slice<jule::Any>>()};


	_11943fdb0_Precedencer(jule::Slice<jule::Slice<jule::Any>> __param_pairs) {
		this->self = jule::Ref<_11943fdb0_Precedencer>::make(this, nullptr);

		this->_field_pairs = __param_pairs;
	}

	~_11943fdb0_Precedencer(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11943fdb0_Precedencer(void) { this->self = jule::Ref<_11943fdb0_Precedencer>::make(this, nullptr); }

	inline void _method_set(jule::Int,jule::Any);


	inline jule::Any _method_get_lower(void);


	inline bool operator==(const _11943fdb0_Precedencer &_Src) {
		return 
			this->_field_pairs == _Src._field_pairs;
	}

	inline bool operator!=(const _11943fdb0_Precedencer &_Src) { return !this->operator==(_Src); }
};


struct _11943fdb0_ExprBuilder {
	jule::Ref<_11943fdb0_ExprBuilder> self{};

	jule::Ref<_11953bd10_Parser> _field_p{jule::Ref<_11953bd10_Parser>()};


	_11943fdb0_ExprBuilder(jule::Ref<_11953bd10_Parser> __param_p) {
		this->self = jule::Ref<_11943fdb0_ExprBuilder>::make(this, nullptr);

		this->_field_p = __param_p;
	}

	~_11943fdb0_ExprBuilder(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11943fdb0_ExprBuilder(void) { this->self = jule::Ref<_11943fdb0_ExprBuilder>::make(this, nullptr); }

	inline void _method_push_err(_11911a8a0_Token,jule::Str,jule::Slice<jule::Any>);


	inline jule::Ref<_118d9a790_TupleExpr> _method_build_tuple(jule::Slice<jule::Slice<_11911a8a0_Token>>);


	inline jule::Ref<_118d9a790_LitExpr> _method_build_lit(_11911a8a0_Token);


	inline jule::Ref<_118d9a790_TypeDecl> _method_build_primitive_type(_11911a8a0_Token);


	inline jule::Any _method_build_single(_11911a8a0_Token);


	inline jule::Ref<_118d9a790_IdentExpr> _method_build_cpp_linked_ident(jule::Slice<_11911a8a0_Token>);


	inline jule::Ref<_118d9a790_UnaryExpr> _method_build_unary(jule::Slice<_11911a8a0_Token>);


	inline jule::Ref<_118d9a790_SubIdentExpr> _method_build_obj_sub_ident(jule::Slice<_11911a8a0_Token>);


	inline jule::Ref<_118d9a790_NsSelectionExpr> _method_build_ns_sub_ident(jule::Slice<_11911a8a0_Token>);


	inline jule::Ref<_118d9a790_TypeDecl> _method_build_type(jule::Slice<_11911a8a0_Token>);


	inline jule::Any _method_build_sub_ident(jule::Slice<_11911a8a0_Token>);


	inline jule::Ref<_118d9a790_VariadicExpr> _method_build_variadic(jule::Slice<_11911a8a0_Token>);


	inline jule::Any _method_build_op_right(jule::Slice<_11911a8a0_Token>);


	inline jule::Any _method_build_between_parentheses(jule::Slice<_11911a8a0_Token>);


	inline jule::Ref<_118d9a790_CastExpr> _method_try_build_cast(jule::Slice<_11911a8a0_Token>);


	inline void _method_push_arg(jule::Slice<jule::Ref<_118d9a790_Expr>>&,jule::Slice<_11911a8a0_Token>,_11911a8a0_Token);


	inline jule::Slice<jule::Ref<_118d9a790_Expr>> _method_build_args(jule::Slice<_11911a8a0_Token>);


	inline jule::Slice<jule::Ref<_118d9a790_TypeDecl>> _method_build_call_generics(jule::Slice<_11911a8a0_Token>);


	inline jule::Ref<_118d9a790_FnCallExpr> _method_build_fn_call(_11911a8a0_Token,jule::Ref<_11943fdb0_CallData>);


	inline jule::Any _method_build_parentheses_range(jule::Slice<_11911a8a0_Token>);


	inline jule::Ref<_118d9a790_UnsafeExpr> _method_build_unsafe_expr(jule::Slice<_11911a8a0_Token>);


	inline jule::Ref<_118d9a790_FnDecl> _method_build_anon_fn(jule::Slice<_11911a8a0_Token>);


	inline jule::Any _method_build_unsafe(jule::Slice<_11911a8a0_Token>);


	inline void _method_push_range_lit_part(jule::Slice<_11911a8a0_Token>,_11911a8a0_Token,jule::Slice<jule::Slice<_11911a8a0_Token>>&);


	inline jule::Slice<jule::Slice<_11911a8a0_Token>> _method_get_brace_range_lit_expr_parts(jule::Slice<_11911a8a0_Token>);


	inline jule::Ref<_118d9a790_FieldExprPair> _method_build_field_expr_pair(jule::Slice<_11911a8a0_Token>);


	inline jule::Any _method_build_struct_lit_expr(jule::Slice<_11911a8a0_Token>);


	inline jule::Slice<jule::Any> _method_build_struct_lit_exprs(jule::Slice<_11911a8a0_Token>);


	inline jule::Ref<_118d9a790_StructLit> _method_build_typed_struct_literal(jule::Slice<_11911a8a0_Token>);


	inline jule::Any _method_build_brace_lit_part(jule::Slice<_11911a8a0_Token>);


	inline jule::Ref<_118d9a790_BraceLit> _method_build_brace_lit(jule::Slice<_11911a8a0_Token>);


	inline jule::Any _method_build_brace_range(jule::Slice<_11911a8a0_Token>);


	inline jule::Slice<jule::Slice<_11911a8a0_Token>> _method_get_enumerable_parts(jule::Slice<_11911a8a0_Token>);


	inline jule::Ref<_118d9a790_SliceExpr> _method_build_slice(jule::Slice<_11911a8a0_Token>);


	inline jule::Ref<_118d9a790_IndexingExpr> _method_build_indexing(jule::Slice<_11911a8a0_Token>,jule::Slice<_11911a8a0_Token>,_11911a8a0_Token);


	inline jule::Ref<_118d9a790_SlicingExpr> _method_build_slicing(jule::Slice<_11911a8a0_Token>,jule::Slice<_11911a8a0_Token>,jule::Int,_11911a8a0_Token);


	inline jule::Any _method_build_bracket_range(jule::Slice<_11911a8a0_Token>);


	inline jule::Any _method_build_data(jule::Slice<_11911a8a0_Token>);


	inline jule::Ref<_118d9a790_BinopExpr> _method_build_binop(jule::Slice<_11911a8a0_Token>,jule::Int);


	inline jule::Any _method_build(jule::Slice<_11911a8a0_Token>);


	inline jule::Any _method_build_kind(jule::Slice<_11911a8a0_Token>);


	inline jule::Ref<_118d9a790_Expr> _method_build_from_tokens(jule::Slice<_11911a8a0_Token>);


	inline bool operator==(const _11943fdb0_ExprBuilder &_Src) {
		return 
			this->_field_p == _Src._field_p;
	}

	inline bool operator!=(const _11943fdb0_ExprBuilder &_Src) { return !this->operator==(_Src); }
};


struct _11953bd10_Parser {
	jule::Ref<_11953bd10_Parser> self{};

	jule::Ref<_118d8a140_Ast> _field_ast{jule::Ref<_118d8a140_Ast>()};
	jule::Slice<jule::Ref<_118d9a790_Directive>> _field_directives{jule::Slice<jule::Ref<_118d9a790_Directive>>()};
	jule::Ref<_118d9a790_CommentGroup> _field_comment_group{jule::Ref<_118d9a790_CommentGroup>()};
	jule::Slice<_13fe81720_Log> _field_errors{jule::Slice<_13fe81720_Log>()};


	_11953bd10_Parser(jule::Ref<_118d8a140_Ast> __param_ast, jule::Slice<jule::Ref<_118d9a790_Directive>> __param_directives, jule::Ref<_118d9a790_CommentGroup> __param_comment_group, jule::Slice<_13fe81720_Log> __param_errors) {
		this->self = jule::Ref<_11953bd10_Parser>::make(this, nullptr);

		this->_field_ast = __param_ast;
		this->_field_directives = __param_directives;
		this->_field_comment_group = __param_comment_group;
		this->_field_errors = __param_errors;
	}

	~_11953bd10_Parser(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11953bd10_Parser(void) { this->self = jule::Ref<_11953bd10_Parser>::make(this, nullptr); }

	inline void _method_stop(void);


	inline jule::Bool _method_stopped(void);


	inline void _method_push_err(_11911a8a0_Token,jule::Str,jule::Slice<jule::Any>);


	inline jule::Ref<_118d9a790_Expr> _method_build_expr(jule::Slice<_11911a8a0_Token>);


	inline jule::Ref<_118d9a790_Directive> _method_get_directive(jule::Ref<_118d9a790_Comment>);


	inline void _method_push_directive(jule::Ref<_118d9a790_Comment>);


	inline void _method_process_comment(jule::Ref<_118d9a790_Comment>);


	inline jule::Ref<_118d9a790_ScopeTree> _method_build_scope(jule::Slice<_11911a8a0_Token>);


	inline std::tuple<jule::Ref<_118d9a790_TypeDecl>,jule::Bool> _method___build_type(jule::Slice<_11911a8a0_Token>,jule::Int*,jule::Bool);


	inline std::tuple<jule::Ref<_118d9a790_TypeDecl>,jule::Bool> _method_build_type(jule::Slice<_11911a8a0_Token>,jule::Int*,jule::Bool);


	inline jule::Ref<_118d9a790_TypeAliasDecl> _method_build_type_alias_decl(jule::Slice<_11911a8a0_Token>);


	inline void _method_build_var_type_and_expr(jule::Ref<_118d9a790_VarDecl>,jule::Slice<_11911a8a0_Token>);


	inline void _method_build_var_common(jule::Ref<_118d9a790_VarDecl>,jule::Slice<_11911a8a0_Token>);


	inline void _method_build_var_begin(jule::Ref<_118d9a790_VarDecl>,jule::Ref<jule::Int>,jule::Slice<_11911a8a0_Token>);


	inline jule::Ref<_118d9a790_VarDecl> _method_build_var(jule::Slice<_11911a8a0_Token>);


	inline jule::Ref<_118d9a790_GenericDecl> _method_build_generic(jule::Slice<_11911a8a0_Token>);


	inline jule::Slice<jule::Ref<_118d9a790_GenericDecl>> _method_build_generics(jule::Slice<_11911a8a0_Token>,_11911a8a0_Token);


	inline jule::Ref<_118d9a790_ParamDecl> _method_build_self_param(jule::Slice<_11911a8a0_Token>);


	inline void _method_param_type_begin(jule::Ref<_118d9a790_ParamDecl>,jule::Int&,jule::Slice<_11911a8a0_Token>);


	inline void _method_build_param_type(jule::Ref<_118d9a790_ParamDecl>,jule::Slice<_11911a8a0_Token>,jule::Bool);


	inline void _method_param_body_id(jule::Ref<_118d9a790_ParamDecl>,_11911a8a0_Token);


	inline void _method_build_param_body(jule::Ref<_118d9a790_ParamDecl>,jule::Ref<jule::Int>,jule::Slice<_11911a8a0_Token>,jule::Bool);


	inline jule::Ref<_118d9a790_ParamDecl> _method_build_param(jule::Slice<_11911a8a0_Token>,jule::Bool);


	inline void _method_check_params(jule::Slice<jule::Ref<_118d9a790_ParamDecl>>);


	inline jule::Slice<jule::Ref<_118d9a790_ParamDecl>> _method_build_params(jule::Slice<_11911a8a0_Token>,jule::Bool,jule::Bool);


	inline std::tuple<jule::Ref<_118d9a790_RetTypeDecl>,jule::Bool> _method_build_multi_ret_type(jule::Slice<_11911a8a0_Token>,jule::Int&);


	inline std::tuple<jule::Ref<_118d9a790_RetTypeDecl>,jule::Bool> _method_build_ret_type(jule::Slice<_11911a8a0_Token>,jule::Int&);


	inline jule::Ref<_118d9a790_FnDecl> _method_build_fn_prototype(jule::Slice<_11911a8a0_Token>,jule::Int&,jule::Bool,jule::Bool);


	inline jule::Ref<_118d9a790_FnDecl> _method_build_fn(jule::Slice<_11911a8a0_Token>,jule::Bool,jule::Bool,jule::Bool);


	inline jule::Slice<_11911a8a0_Token> _method_get_use_decl_selectors(jule::Slice<_11911a8a0_Token>);


	inline void _method_build_cpp_use_decl(jule::Ref<_118d9a790_UseDecl>,jule::Slice<_11911a8a0_Token>);


	inline void _method_build_std_use_decl(jule::Ref<_118d9a790_UseDecl>,jule::Slice<_11911a8a0_Token>);


	inline void _method_build_ident_use_decl(jule::Ref<_118d9a790_UseDecl>,jule::Slice<_11911a8a0_Token>);


	inline void _method_parse_use_decl(jule::Ref<_118d9a790_UseDecl>,jule::Slice<_11911a8a0_Token>);


	inline jule::Ref<_118d9a790_UseDecl> _method_build_use_decl(jule::Slice<_11911a8a0_Token>);


	inline jule::Ref<_118d9a790_Expr> _method_build_enum_item_expr(jule::Ref<jule::Int>,jule::Slice<_11911a8a0_Token>);


	inline jule::Slice<jule::Ref<_118d9a790_EnumItemDecl>> _method_build_enum_items(jule::Slice<_11911a8a0_Token>);


	inline jule::Ref<_118d9a790_EnumDecl> _method_build_enum_decl(jule::Slice<_11911a8a0_Token>);


	inline jule::Ref<_118d9a790_FieldDecl> _method_build_field(jule::Slice<_11911a8a0_Token>);


	inline jule::Slice<jule::Ref<_118d9a790_FieldDecl>> _method_build_struct_decl_fields(jule::Slice<_11911a8a0_Token>);


	inline jule::Ref<_118d9a790_StructDecl> _method_build_struct_decl(jule::Slice<_11911a8a0_Token>);


	inline void _method_check_method_receiver(jule::Ref<_118d9a790_FnDecl>);


	inline jule::Slice<jule::Ref<_118d9a790_FnDecl>> _method_build_trait_methods(jule::Slice<_11911a8a0_Token>);


	inline jule::Ref<_118d9a790_TraitDecl> _method_build_trait_decl(jule::Slice<_11911a8a0_Token>);


	inline jule::Ref<_118d9a790_FnDecl> _method_build_cpp_link_fn(jule::Slice<_11911a8a0_Token>);


	inline jule::Ref<_118d9a790_VarDecl> _method_build_cpp_link_var(jule::Slice<_11911a8a0_Token>);


	inline jule::Ref<_118d9a790_StructDecl> _method_build_cpp_link_struct(jule::Slice<_11911a8a0_Token>);


	inline jule::Ref<_118d9a790_TypeAliasDecl> _method_build_cpp_link_type_alias(jule::Slice<_11911a8a0_Token>);


	inline jule::Any _method_build_cpp_link(jule::Slice<_11911a8a0_Token>);


	inline jule::Ref<_118d9a790_FnDecl> _method_get_method(jule::Slice<_11911a8a0_Token>);


	inline void _method_parse_impl_trait(jule::Ref<_118d9a790_Impl>,jule::Slice<_11911a8a0_Token>);


	inline void _method_parse_impl_struct(jule::Ref<_118d9a790_Impl>,jule::Slice<_11911a8a0_Token>);


	inline void _method_parse_impl_body(jule::Ref<_118d9a790_Impl>,jule::Slice<_11911a8a0_Token>);


	inline jule::Ref<_118d9a790_Impl> _method_build_impl(jule::Slice<_11911a8a0_Token>);


	inline jule::Any _method_build_node_data(jule::Slice<_11911a8a0_Token>);


	inline void _method_check_comment_group(_118d9a790_Node);


	inline void _method_check_directive(_118d9a790_Node);


	inline void _method_apply_meta(_118d9a790_Node,jule::Bool);


	inline void _method_check_use_decl(_118d9a790_Node);


	inline std::tuple<jule::Bool,jule::Any> _method_build_general_scope_node_data(jule::Slice<_11911a8a0_Token>);


	inline _118d9a790_Node _method_parse_node(jule::Slice<_11911a8a0_Token>);


	inline void _method_append_node(jule::Slice<_11911a8a0_Token>);


	inline void _method_remove_range(jule::Int,jule::Str,jule::Slice<_11911a8a0_Token>&,jule::Slice<jule::Int>&);


	inline void _method_push_wrong_order_close_err(_11911a8a0_Token,jule::Slice<_11911a8a0_Token>&,jule::Slice<jule::Int>&);


	inline void _method_push_range_close(_11911a8a0_Token,jule::Str,jule::Slice<_11911a8a0_Token>&,jule::Slice<jule::Int>&);


	inline void _method_check_ranges(jule::Slice<_11911a8a0_Token>);


	inline void _method_parse(jule::Ref<_118d9a520_File>);


	inline bool operator==(const _11953bd10_Parser &_Src) {
		return 
			this->_field_ast == _Src._field_ast &&
			this->_field_directives == _Src._field_directives &&
			this->_field_comment_group == _Src._field_comment_group &&
			this->_field_errors == _Src._field_errors;
	}

	inline bool operator!=(const _11953bd10_Parser &_Src) { return !this->operator==(_Src); }
};


struct _11972a4d0_TypeBuilder {
	jule::Ref<_11972a4d0_TypeBuilder> self{};

	jule::Ref<_11953bd10_Parser> _field_p{jule::Ref<_11953bd10_Parser>()};
	jule::Slice<_11911a8a0_Token> _field_tokens{jule::Slice<_11911a8a0_Token>()};
	jule::Int* _field_i{nullptr};
	jule::Bool _field_err{jule::Bool()};


	_11972a4d0_TypeBuilder(jule::Ref<_11953bd10_Parser> __param_p, jule::Slice<_11911a8a0_Token> __param_tokens, jule::Int* __param_i, jule::Bool __param_err) {
		this->self = jule::Ref<_11972a4d0_TypeBuilder>::make(this, nullptr);

		this->_field_p = __param_p;
		this->_field_tokens = __param_tokens;
		this->_field_i = __param_i;
		this->_field_err = __param_err;
	}

	~_11972a4d0_TypeBuilder(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11972a4d0_TypeBuilder(void) { this->self = jule::Ref<_11972a4d0_TypeBuilder>::make(this, nullptr); }

	inline void _method_push_err(_11911a8a0_Token,jule::Str);


	inline jule::Ref<_118d9a790_TypeDecl> _method_build_prim(void);


	inline jule::Ref<_118d9a790_TypeDecl> _method_build_namespace(void);


	inline jule::Slice<jule::Ref<_118d9a790_TypeDecl>> _method_build_generics(void);


	inline jule::Slice<jule::Slice<_11911a8a0_Token>> _method_ident_generics(void);


	inline jule::Ref<_118d9a790_TypeDecl> _method_build_ident(void);


	inline jule::Ref<_118d9a790_TypeDecl> _method_build_cpp_link(void);


	inline jule::Ref<_118d9a790_TypeDecl> _method_build_fn(void);


	inline jule::Ref<_118d9a790_TypeDecl> _method_build_ptr(void);


	inline jule::Ref<_118d9a790_TypeDecl> _method_build_ref(void);


	inline jule::Ref<_118d9a790_TypeDecl> _method_build_op(void);


	inline jule::Ref<_118d9a790_TypeDecl> _method_build_slc(void);


	inline jule::Ref<_118d9a790_TypeDecl> _method_build_arr(void);


	inline jule::Ref<_118d9a790_TypeDecl> _method_build_map(jule::Int,jule::Slice<_11911a8a0_Token>);


	inline jule::Ref<_118d9a790_TypeDecl> _method_build_enumerable(void);


	inline jule::Ref<_118d9a790_TypeDecl> _method_step(void);


	inline std::tuple<jule::Ref<_118d9a790_TypeDecl>,jule::Bool> _method_build(void);


	inline bool operator==(const _11972a4d0_TypeBuilder &_Src) {
		return 
			this->_field_p == _Src._field_p &&
			this->_field_tokens == _Src._field_tokens &&
			this->_field_i == _Src._field_i &&
			this->_field_err == _Src._field_err;
	}

	inline bool operator!=(const _11972a4d0_TypeBuilder &_Src) { return !this->operator==(_Src); }
};


struct _11ab854f0_Const {
	jule::Ref<_11ab854f0_Const> self{};

	jule::Any _field_data{jule::Any()};


	_11ab854f0_Const(jule::Any __param_data) {
		this->self = jule::Ref<_11ab854f0_Const>::make(this, nullptr);

		this->_field_data = __param_data;
	}

	~_11ab854f0_Const(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11ab854f0_Const(void) { this->self = jule::Ref<_11ab854f0_Const>::make(this, nullptr); }

	inline jule::I64 _method_read_i64(void);


	inline jule::U64 _method_read_u64(void);


	inline jule::Bool _method_read_bool(void);


	inline jule::Str _method_read_str(void);


	inline jule::F64 _method_read_f64(void);


	inline jule::I64 _method_as_i64(void);


	inline jule::U64 _method_as_u64(void);


	inline jule::F64 _method_as_f64(void);


	inline void _method_set_i64(jule::I64);


	inline void _method_set_u64(jule::U64);


	inline void _method_set_bool(jule::Bool);


	inline void _method_set_str(jule::Str);


	inline void _method_set_f64(jule::F64);


	inline void _method_set_nil(void);


	inline void _method_set_by_type(jule::F64,_11ab854f0_Const);


	inline jule::Bool _method_is_i64(void);


	inline jule::Bool _method_is_u64(void);


	inline jule::Bool _method_is_bool(void);


	inline jule::Bool _method_is_str(void);


	inline jule::Bool _method_is_f64(void);


	inline jule::Bool _method_is_nil(void);


	inline jule::Bool _method_are_same_types(_11ab854f0_Const);


	inline jule::Bool _method_and(_11ab854f0_Const);


	inline jule::Bool _method_or(_11ab854f0_Const);


	inline jule::Bool _method_eqs(_11ab854f0_Const);


	inline jule::Bool _method_lt(_11ab854f0_Const);


	inline jule::Bool _method_gt(_11ab854f0_Const);


	inline jule::Bool _method_add(_11ab854f0_Const);


	inline jule::Bool _method_sub(_11ab854f0_Const);


	inline jule::Bool _method_mul(_11ab854f0_Const);


	inline jule::Bool _method_div(_11ab854f0_Const);


	inline jule::Bool _method_mod(_11ab854f0_Const);


	inline jule::Bool _method_bitwise_and(_11ab854f0_Const);


	inline jule::Bool _method_bitwise_or(_11ab854f0_Const);


	inline jule::Bool _method_xor(_11ab854f0_Const);


	inline jule::Bool _method_lshift(_11ab854f0_Const);


	inline jule::Bool _method_rshift(_11ab854f0_Const);


	inline bool operator==(const _11ab854f0_Const &_Src) {
		return 
			this->_field_data == _Src._field_data;
	}

	inline bool operator!=(const _11ab854f0_Const &_Src) { return !this->operator==(_Src); }
};


struct _118bb7d70_FieldIns {
	jule::Ref<_118bb7d70_FieldIns> self{};

	jule::Ref<_118bb7d70_Field> _field_decl{jule::Ref<_118bb7d70_Field>()};
	jule::Ref<_11a3c2e70_TypeKind> _field_kind{jule::Ref<_11a3c2e70_TypeKind>()};


	_118bb7d70_FieldIns(jule::Ref<_118bb7d70_Field> __param_decl, jule::Ref<_11a3c2e70_TypeKind> __param_kind) {
		this->self = jule::Ref<_118bb7d70_FieldIns>::make(this, nullptr);

		this->_field_decl = __param_decl;
		this->_field_kind = __param_kind;
	}

	~_118bb7d70_FieldIns(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118bb7d70_FieldIns(void) { this->self = jule::Ref<_118bb7d70_FieldIns>::make(this, nullptr); }

	inline bool operator==(const _118bb7d70_FieldIns &_Src) {
		return 
			this->_field_decl == _Src._field_decl &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _118bb7d70_FieldIns &_Src) { return !this->operator==(_Src); }
};


struct _118bb7d70_StructIns: public _11a3c2e70_Kind {
	jule::Ref<_118bb7d70_StructIns> self{};

	jule::Bool _field_checked{jule::Bool()};
	jule::Ref<_118bb7d70_Struct> _field_decl{jule::Ref<_118bb7d70_Struct>()};
	jule::Slice<jule::Ref<_11a3c2e70_TypeKind>> _field_generics{jule::Slice<jule::Ref<_11a3c2e70_TypeKind>>()};
	jule::Slice<jule::Ref<_118bb7d70_FieldIns>> _field_fields{jule::Slice<jule::Ref<_118bb7d70_FieldIns>>()};
	jule::Slice<jule::Ref<_119099250_Fn>> _field_methods{jule::Slice<jule::Ref<_119099250_Fn>>()};
	jule::Bool _field_has_mut{jule::Bool()};


	_118bb7d70_StructIns(jule::Bool __param_checked, jule::Ref<_118bb7d70_Struct> __param_decl, jule::Slice<jule::Ref<_11a3c2e70_TypeKind>> __param_generics, jule::Slice<jule::Ref<_118bb7d70_FieldIns>> __param_fields, jule::Slice<jule::Ref<_119099250_Fn>> __param_methods, jule::Bool __param_has_mut) {
		this->self = jule::Ref<_118bb7d70_StructIns>::make(this, nullptr);

		this->_field_checked = __param_checked;
		this->_field_decl = __param_decl;
		this->_field_generics = __param_generics;
		this->_field_fields = __param_fields;
		this->_field_methods = __param_methods;
		this->_field_has_mut = __param_has_mut;
	}

	~_118bb7d70_StructIns(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118bb7d70_StructIns(void) { this->self = jule::Ref<_118bb7d70_StructIns>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_11a3c2e70_TypeKind>);


	inline jule::Ref<_119099250_Fn> _method_find_method(jule::Str,jule::Bool);


	inline jule::Ref<_118bb7d70_FieldIns> _method_find_field(jule::Str);


	inline bool operator==(const _118bb7d70_StructIns &_Src) {
		return 
			this->_field_checked == _Src._field_checked &&
			this->_field_decl == _Src._field_decl &&
			this->_field_generics == _Src._field_generics &&
			this->_field_fields == _Src._field_fields &&
			this->_field_methods == _Src._field_methods &&
			this->_field_has_mut == _Src._field_has_mut;
	}

	inline bool operator!=(const _118bb7d70_StructIns &_Src) { return !this->operator==(_Src); }
};


struct _119099250_RetType {
	jule::Ref<_119099250_RetType> self{};

	jule::Ref<_11a3c2e70_TypeSymbol> _field_kind{jule::Ref<_11a3c2e70_TypeSymbol>()};
	jule::Slice<_11911a8a0_Token> _field_idents{jule::Slice<_11911a8a0_Token>()};


	_119099250_RetType(jule::Ref<_11a3c2e70_TypeSymbol> __param_kind, jule::Slice<_11911a8a0_Token> __param_idents) {
		this->self = jule::Ref<_119099250_RetType>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_idents = __param_idents;
	}

	~_119099250_RetType(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_119099250_RetType(void) { this->self = jule::Ref<_119099250_RetType>::make(this, nullptr); }

	inline bool operator==(const _119099250_RetType &_Src) {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_idents == _Src._field_idents;
	}

	inline bool operator!=(const _119099250_RetType &_Src) { return !this->operator==(_Src); }
};


struct _119099250_ParamIns {
	jule::Ref<_119099250_ParamIns> self{};

	jule::Ref<_119099250_Param> _field_decl{jule::Ref<_119099250_Param>()};
	jule::Ref<_11a3c2e70_TypeKind> _field_kind{jule::Ref<_11a3c2e70_TypeKind>()};


	_119099250_ParamIns(jule::Ref<_119099250_Param> __param_decl, jule::Ref<_11a3c2e70_TypeKind> __param_kind) {
		this->self = jule::Ref<_119099250_ParamIns>::make(this, nullptr);

		this->_field_decl = __param_decl;
		this->_field_kind = __param_kind;
	}

	~_119099250_ParamIns(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_119099250_ParamIns(void) { this->self = jule::Ref<_119099250_ParamIns>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline bool operator==(const _119099250_ParamIns &_Src) {
		return 
			this->_field_decl == _Src._field_decl &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _119099250_ParamIns &_Src) { return !this->operator==(_Src); }
};


struct _119099250_FnIns: public _11a3c2e70_Kind {
	jule::Ref<_119099250_FnIns> self{};

	jule::Ref<_118bb7d70_StructIns> _field_owner{jule::Ref<_118bb7d70_StructIns>()};
	jule::Ref<_119099250_Fn> _field_decl{jule::Ref<_119099250_Fn>()};
	jule::Slice<jule::Ref<_11a3c2e70_TypeKind>> _field_generics{jule::Slice<jule::Ref<_11a3c2e70_TypeKind>>()};
	jule::Slice<jule::Ref<_119099250_ParamIns>> _field_params{jule::Slice<jule::Ref<_119099250_ParamIns>>()};
	jule::Ref<_11a3c2e70_TypeKind> _field_result{jule::Ref<_11a3c2e70_TypeKind>()};
	jule::Ref<_11a093930_Scope> _field_scope{jule::Ref<_11a093930_Scope>()};
	jule::Fn<jule::Ref<_11a53f4f0_Data>(jule::Ref<_11a53f4f0_Eval>,jule::Ref<_118d9a790_FnCallExpr>,jule::Ref<_11a53f4f0_Data>)> _field_caller{jule::Fn<jule::Ref<_11a53f4f0_Data>(jule::Ref<_11a53f4f0_Eval>,jule::Ref<_118d9a790_FnCallExpr>,jule::Ref<_11a53f4f0_Data>)>()};
	jule::Bool _field_reloaded{jule::Bool()};
	jule::Bool _field_anon{jule::Bool()};


	_119099250_FnIns(jule::Ref<_118bb7d70_StructIns> __param_owner, jule::Ref<_119099250_Fn> __param_decl, jule::Slice<jule::Ref<_11a3c2e70_TypeKind>> __param_generics, jule::Slice<jule::Ref<_119099250_ParamIns>> __param_params, jule::Ref<_11a3c2e70_TypeKind> __param_result, jule::Ref<_11a093930_Scope> __param_scope, jule::Fn<jule::Ref<_11a53f4f0_Data>(jule::Ref<_11a53f4f0_Eval>,jule::Ref<_118d9a790_FnCallExpr>,jule::Ref<_11a53f4f0_Data>)> __param_caller, jule::Bool __param_reloaded, jule::Bool __param_anon) {
		this->self = jule::Ref<_119099250_FnIns>::make(this, nullptr);

		this->_field_owner = __param_owner;
		this->_field_decl = __param_decl;
		this->_field_generics = __param_generics;
		this->_field_params = __param_params;
		this->_field_result = __param_result;
		this->_field_scope = __param_scope;
		this->_field_caller = __param_caller;
		this->_field_reloaded = __param_reloaded;
		this->_field_anon = __param_anon;
	}

	~_119099250_FnIns(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_119099250_FnIns(void) { this->self = jule::Ref<_119099250_FnIns>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_11a3c2e70_TypeKind>);


	inline jule::Bool _method_is_builtin(void);


	inline jule::Bool _method_is_anon(void);


	inline bool operator==(const _119099250_FnIns &_Src) {
		return 
			this->_field_owner == _Src._field_owner &&
			this->_field_decl == _Src._field_decl &&
			this->_field_generics == _Src._field_generics &&
			this->_field_params == _Src._field_params &&
			this->_field_result == _Src._field_result &&
			this->_field_scope == _Src._field_scope &&
			this->_field_caller == _Src._field_caller &&
			this->_field_reloaded == _Src._field_reloaded &&
			this->_field_anon == _Src._field_anon;
	}

	inline bool operator!=(const _119099250_FnIns &_Src) { return !this->operator==(_Src); }
};


struct _13feceeb0_SymbolBuilder {
	jule::Ref<_13feceeb0_SymbolBuilder> self{};

	jule::Ref<_13feceeb0_SymbolBuilder> _field_owner{jule::Ref<_13feceeb0_SymbolBuilder>()};
	jule::Trait<_11a0945e0_Importer> _field_importer{jule::Trait<_11a0945e0_Importer>()};
	jule::Slice<_13fe81720_Log> _field_errors{jule::Slice<_13fe81720_Log>()};
	jule::Ref<_118d8a140_Ast> _field_ast{jule::Ref<_118d8a140_Ast>()};
	jule::Ref<_11a3c2dc0_SymbolTable> _field_table{jule::Ref<_11a3c2dc0_SymbolTable>()};


	_13feceeb0_SymbolBuilder(jule::Ref<_13feceeb0_SymbolBuilder> __param_owner, jule::Trait<_11a0945e0_Importer> __param_importer, jule::Slice<_13fe81720_Log> __param_errors, jule::Ref<_118d8a140_Ast> __param_ast, jule::Ref<_11a3c2dc0_SymbolTable> __param_table) {
		this->self = jule::Ref<_13feceeb0_SymbolBuilder>::make(this, nullptr);

		this->_field_owner = __param_owner;
		this->_field_importer = __param_importer;
		this->_field_errors = __param_errors;
		this->_field_ast = __param_ast;
		this->_field_table = __param_table;
	}

	~_13feceeb0_SymbolBuilder(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_13feceeb0_SymbolBuilder(void) { this->self = jule::Ref<_13feceeb0_SymbolBuilder>::make(this, nullptr); }

	inline jule::Ref<_13feceeb0_SymbolBuilder> _method_get_root(void);


	inline void _method_push_err(_11911a8a0_Token,jule::Str,jule::Slice<jule::Any>);


	inline jule::Bool _method_check_cpp_use_decl_path(jule::Ref<_118d9a790_UseDecl>);


	inline jule::Ref<_11a0945e0_ImportInfo> _method_build_cpp_header_import(jule::Ref<_118d9a790_UseDecl>);


	inline jule::Ref<_11a0945e0_ImportInfo> _method_build_std_import(jule::Ref<_118d9a790_UseDecl>);


	inline jule::Ref<_11a0945e0_ImportInfo> _method_build_ident_import(jule::Ref<_118d9a790_UseDecl>);


	inline jule::Ref<_11a0945e0_ImportInfo> _method_build_import(jule::Ref<_118d9a790_UseDecl>);


	inline jule::Bool _method_check_duplicate_use_decl(jule::Ref<_11a0945e0_ImportInfo>);


	inline void _method_impl_import_selections(jule::Ref<_11a0945e0_ImportInfo>,jule::Ref<_118d9a790_UseDecl>);


	inline jule::Str _method_get_as_link_path(jule::Str);


	inline void _method_push_cycle_error(jule::Ref<_13feceeb0_SymbolBuilder>,jule::Str,jule::Str&);


	inline void _method_push_cross_cycle_error(jule::Ref<_13feceeb0_SymbolBuilder>,jule::Ref<_11a0945e0_ImportInfo>,_11911a8a0_Token);


	inline jule::Bool _method_check_import_cycles(jule::Ref<_11a0945e0_ImportInfo>,jule::Ref<_118d9a790_UseDecl>);


	inline jule::Bool _method_import_package(jule::Ref<_11a0945e0_ImportInfo>,jule::Ref<_118d9a790_UseDecl>);


	inline jule::Ref<_11a0945e0_ImportInfo> _method_import_use_decl(jule::Ref<_118d9a790_UseDecl>);


	inline void _method_import_use_decls(void);


	inline void _method_append_decl(_118d9a790_Node);


	inline void _method_append_decls(void);


	inline void _method_append_impls(void);


	inline void _method_push_directive_pass(jule::Ref<_118d9a790_Directive>);


	inline void _method_append_top_directives(void);


	inline void _method_build(void);


	inline bool operator==(const _13feceeb0_SymbolBuilder &_Src) {
		return 
			this->_field_owner == _Src._field_owner &&
			this->_field_importer == _Src._field_importer &&
			this->_field_errors == _Src._field_errors &&
			this->_field_ast == _Src._field_ast &&
			this->_field_table == _Src._field_table;
	}

	inline bool operator!=(const _13feceeb0_SymbolBuilder &_Src) { return !this->operator==(_Src); }
};


struct _11a093930_If {
	jule::Ref<_11a093930_If> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Ref<_11a093930_Scope> _field_scope{jule::Ref<_11a093930_Scope>()};


	_11a093930_If(jule::Any __param_expr, jule::Ref<_11a093930_Scope> __param_scope) {
		this->self = jule::Ref<_11a093930_If>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_scope = __param_scope;
	}

	~_11a093930_If(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11a093930_If(void) { this->self = jule::Ref<_11a093930_If>::make(this, nullptr); }

	inline bool operator==(const _11a093930_If &_Src) {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _11a093930_If &_Src) { return !this->operator==(_Src); }
};


struct _11a093930_Else {
	jule::Ref<_11a093930_Else> self{};

	jule::Ref<_11a093930_Scope> _field_scope{jule::Ref<_11a093930_Scope>()};


	_11a093930_Else(jule::Ref<_11a093930_Scope> __param_scope) {
		this->self = jule::Ref<_11a093930_Else>::make(this, nullptr);

		this->_field_scope = __param_scope;
	}

	~_11a093930_Else(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11a093930_Else(void) { this->self = jule::Ref<_11a093930_Else>::make(this, nullptr); }

	inline bool operator==(const _11a093930_Else &_Src) {
		return 
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _11a093930_Else &_Src) { return !this->operator==(_Src); }
};


struct _11a093930_Conditional {
	jule::Ref<_11a093930_Conditional> self{};

	jule::Slice<jule::Ref<_11a093930_If>> _field_elifs{jule::Slice<jule::Ref<_11a093930_If>>()};
	jule::Ref<_11a093930_Else> _field_default{jule::Ref<_11a093930_Else>()};


	_11a093930_Conditional(jule::Slice<jule::Ref<_11a093930_If>> __param_elifs, jule::Ref<_11a093930_Else> __param_default) {
		this->self = jule::Ref<_11a093930_Conditional>::make(this, nullptr);

		this->_field_elifs = __param_elifs;
		this->_field_default = __param_default;
	}

	~_11a093930_Conditional(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11a093930_Conditional(void) { this->self = jule::Ref<_11a093930_Conditional>::make(this, nullptr); }

	inline bool operator==(const _11a093930_Conditional &_Src) {
		return 
			this->_field_elifs == _Src._field_elifs &&
			this->_field_default == _Src._field_default;
	}

	inline bool operator!=(const _11a093930_Conditional &_Src) { return !this->operator==(_Src); }
};


struct _11a093930_InfIter {
	jule::Ref<_11a093930_InfIter> self{};

	jule::Ref<_11a093930_Scope> _field_scope{jule::Ref<_11a093930_Scope>()};


	_11a093930_InfIter(jule::Ref<_11a093930_Scope> __param_scope) {
		this->self = jule::Ref<_11a093930_InfIter>::make(this, nullptr);

		this->_field_scope = __param_scope;
	}

	~_11a093930_InfIter(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11a093930_InfIter(void) { this->self = jule::Ref<_11a093930_InfIter>::make(this, nullptr); }

	inline bool operator==(const _11a093930_InfIter &_Src) {
		return 
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _11a093930_InfIter &_Src) { return !this->operator==(_Src); }
};


struct _11a093930_WhileIter {
	jule::Ref<_11a093930_WhileIter> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Any _field_next{jule::Any()};
	jule::Ref<_11a093930_Scope> _field_scope{jule::Ref<_11a093930_Scope>()};


	_11a093930_WhileIter(jule::Any __param_expr, jule::Any __param_next, jule::Ref<_11a093930_Scope> __param_scope) {
		this->self = jule::Ref<_11a093930_WhileIter>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_next = __param_next;
		this->_field_scope = __param_scope;
	}

	~_11a093930_WhileIter(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11a093930_WhileIter(void) { this->self = jule::Ref<_11a093930_WhileIter>::make(this, nullptr); }

	inline jule::Bool _method_is_while_next(void);


	inline bool operator==(const _11a093930_WhileIter &_Src) {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_next == _Src._field_next &&
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _11a093930_WhileIter &_Src) { return !this->operator==(_Src); }
};


struct _11a093930_RangeIter {
	jule::Ref<_11a093930_RangeIter> self{};

	jule::Ref<_11a53f4f0_Data> _field_expr{jule::Ref<_11a53f4f0_Data>()};
	jule::Ref<_11a093930_Scope> _field_scope{jule::Ref<_11a093930_Scope>()};
	jule::Ref<_11a245f20_Var> _field_key_a{jule::Ref<_11a245f20_Var>()};
	jule::Ref<_11a245f20_Var> _field_key_b{jule::Ref<_11a245f20_Var>()};


	_11a093930_RangeIter(jule::Ref<_11a53f4f0_Data> __param_expr, jule::Ref<_11a093930_Scope> __param_scope, jule::Ref<_11a245f20_Var> __param_key_a, jule::Ref<_11a245f20_Var> __param_key_b) {
		this->self = jule::Ref<_11a093930_RangeIter>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_scope = __param_scope;
		this->_field_key_a = __param_key_a;
		this->_field_key_b = __param_key_b;
	}

	~_11a093930_RangeIter(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11a093930_RangeIter(void) { this->self = jule::Ref<_11a093930_RangeIter>::make(this, nullptr); }

	inline bool operator==(const _11a093930_RangeIter &_Src) {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_scope == _Src._field_scope &&
			this->_field_key_a == _Src._field_key_a &&
			this->_field_key_b == _Src._field_key_b;
	}

	inline bool operator!=(const _11a093930_RangeIter &_Src) { return !this->operator==(_Src); }
};


struct _11a093930_ContSt {
	jule::Ref<_11a093930_ContSt> self{};

	jule::Uintptr _field_it{jule::Uintptr()};


	_11a093930_ContSt(jule::Uintptr __param_it) {
		this->self = jule::Ref<_11a093930_ContSt>::make(this, nullptr);

		this->_field_it = __param_it;
	}

	~_11a093930_ContSt(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11a093930_ContSt(void) { this->self = jule::Ref<_11a093930_ContSt>::make(this, nullptr); }

	inline bool operator==(const _11a093930_ContSt &_Src) {
		return 
			this->_field_it == _Src._field_it;
	}

	inline bool operator!=(const _11a093930_ContSt &_Src) { return !this->operator==(_Src); }
};


struct _11a093930_BreakSt {
	jule::Ref<_11a093930_BreakSt> self{};

	jule::Uintptr _field_it{jule::Uintptr()};
	jule::Uintptr _field_mtch{jule::Uintptr()};


	_11a093930_BreakSt(jule::Uintptr __param_it, jule::Uintptr __param_mtch) {
		this->self = jule::Ref<_11a093930_BreakSt>::make(this, nullptr);

		this->_field_it = __param_it;
		this->_field_mtch = __param_mtch;
	}

	~_11a093930_BreakSt(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11a093930_BreakSt(void) { this->self = jule::Ref<_11a093930_BreakSt>::make(this, nullptr); }

	inline bool operator==(const _11a093930_BreakSt &_Src) {
		return 
			this->_field_it == _Src._field_it &&
			this->_field_mtch == _Src._field_mtch;
	}

	inline bool operator!=(const _11a093930_BreakSt &_Src) { return !this->operator==(_Src); }
};


struct _11a093930_Label {
	jule::Ref<_11a093930_Label> self{};

	jule::Str _field_ident{jule::Str()};


	_11a093930_Label(jule::Str __param_ident) {
		this->self = jule::Ref<_11a093930_Label>::make(this, nullptr);

		this->_field_ident = __param_ident;
	}

	~_11a093930_Label(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11a093930_Label(void) { this->self = jule::Ref<_11a093930_Label>::make(this, nullptr); }

	inline bool operator==(const _11a093930_Label &_Src) {
		return 
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _11a093930_Label &_Src) { return !this->operator==(_Src); }
};


struct _11a093930_GotoSt {
	jule::Ref<_11a093930_GotoSt> self{};

	jule::Str _field_ident{jule::Str()};


	_11a093930_GotoSt(jule::Str __param_ident) {
		this->self = jule::Ref<_11a093930_GotoSt>::make(this, nullptr);

		this->_field_ident = __param_ident;
	}

	~_11a093930_GotoSt(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11a093930_GotoSt(void) { this->self = jule::Ref<_11a093930_GotoSt>::make(this, nullptr); }

	inline bool operator==(const _11a093930_GotoSt &_Src) {
		return 
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _11a093930_GotoSt &_Src) { return !this->operator==(_Src); }
};


struct _11a093930_Postfix {
	jule::Ref<_11a093930_Postfix> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Str _field_op{jule::Str()};


	_11a093930_Postfix(jule::Any __param_expr, jule::Str __param_op) {
		this->self = jule::Ref<_11a093930_Postfix>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_op = __param_op;
	}

	~_11a093930_Postfix(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11a093930_Postfix(void) { this->self = jule::Ref<_11a093930_Postfix>::make(this, nullptr); }

	inline bool operator==(const _11a093930_Postfix &_Src) {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _11a093930_Postfix &_Src) { return !this->operator==(_Src); }
};


struct _11a093930_Assign {
	jule::Ref<_11a093930_Assign> self{};

	jule::Any _field_l{jule::Any()};
	jule::Any _field_r{jule::Any()};
	jule::Str _field_op{jule::Str()};


	_11a093930_Assign(jule::Any __param_l, jule::Any __param_r, jule::Str __param_op) {
		this->self = jule::Ref<_11a093930_Assign>::make(this, nullptr);

		this->_field_l = __param_l;
		this->_field_r = __param_r;
		this->_field_op = __param_op;
	}

	~_11a093930_Assign(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11a093930_Assign(void) { this->self = jule::Ref<_11a093930_Assign>::make(this, nullptr); }

	inline bool operator==(const _11a093930_Assign &_Src) {
		return 
			this->_field_l == _Src._field_l &&
			this->_field_r == _Src._field_r &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _11a093930_Assign &_Src) { return !this->operator==(_Src); }
};


struct _11a093930_MultiAssign {
	jule::Ref<_11a093930_MultiAssign> self{};

	jule::Slice<jule::Any> _field_l{jule::Slice<jule::Any>()};
	jule::Any _field_r{jule::Any()};


	_11a093930_MultiAssign(jule::Slice<jule::Any> __param_l, jule::Any __param_r) {
		this->self = jule::Ref<_11a093930_MultiAssign>::make(this, nullptr);

		this->_field_l = __param_l;
		this->_field_r = __param_r;
	}

	~_11a093930_MultiAssign(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11a093930_MultiAssign(void) { this->self = jule::Ref<_11a093930_MultiAssign>::make(this, nullptr); }

	inline bool operator==(const _11a093930_MultiAssign &_Src) {
		return 
			this->_field_l == _Src._field_l &&
			this->_field_r == _Src._field_r;
	}

	inline bool operator!=(const _11a093930_MultiAssign &_Src) { return !this->operator==(_Src); }
};


struct _11a093930_Match {
	jule::Ref<_11a093930_Match> self{};

	jule::Ref<_11a53f4f0_Data> _field_expr{jule::Ref<_11a53f4f0_Data>()};
	jule::Bool _field_type_match{jule::Bool()};
	jule::Slice<jule::Ref<_11a093930_Case>> _field_cases{jule::Slice<jule::Ref<_11a093930_Case>>()};
	jule::Ref<_11a093930_Case> _field_default{jule::Ref<_11a093930_Case>()};


	_11a093930_Match(jule::Ref<_11a53f4f0_Data> __param_expr, jule::Bool __param_type_match, jule::Slice<jule::Ref<_11a093930_Case>> __param_cases, jule::Ref<_11a093930_Case> __param_default) {
		this->self = jule::Ref<_11a093930_Match>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_type_match = __param_type_match;
		this->_field_cases = __param_cases;
		this->_field_default = __param_default;
	}

	~_11a093930_Match(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11a093930_Match(void) { this->self = jule::Ref<_11a093930_Match>::make(this, nullptr); }

	inline bool operator==(const _11a093930_Match &_Src) {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_type_match == _Src._field_type_match &&
			this->_field_cases == _Src._field_cases &&
			this->_field_default == _Src._field_default;
	}

	inline bool operator!=(const _11a093930_Match &_Src) { return !this->operator==(_Src); }
};


struct _11a093930_Case {
	jule::Ref<_11a093930_Case> self{};

	jule::Ref<_11a093930_Match> _field_owner{jule::Ref<_11a093930_Match>()};
	jule::Ref<_11a093930_Scope> _field_scope{jule::Ref<_11a093930_Scope>()};
	jule::Slice<jule::Any> _field_exprs{jule::Slice<jule::Any>()};
	jule::Ref<_11a093930_Case> _field_next{jule::Ref<_11a093930_Case>()};


	_11a093930_Case(jule::Ref<_11a093930_Match> __param_owner, jule::Ref<_11a093930_Scope> __param_scope, jule::Slice<jule::Any> __param_exprs, jule::Ref<_11a093930_Case> __param_next) {
		this->self = jule::Ref<_11a093930_Case>::make(this, nullptr);

		this->_field_owner = __param_owner;
		this->_field_scope = __param_scope;
		this->_field_exprs = __param_exprs;
		this->_field_next = __param_next;
	}

	~_11a093930_Case(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11a093930_Case(void) { this->self = jule::Ref<_11a093930_Case>::make(this, nullptr); }

	inline jule::Bool _method_is_default(void);


	inline bool operator==(const _11a093930_Case &_Src) {
		return 
			this->_field_owner == _Src._field_owner &&
			this->_field_scope == _Src._field_scope &&
			this->_field_exprs == _Src._field_exprs &&
			this->_field_next == _Src._field_next;
	}

	inline bool operator!=(const _11a093930_Case &_Src) { return !this->operator==(_Src); }
};


struct _11a093930_FallSt {
	jule::Ref<_11a093930_FallSt> self{};

	jule::Uintptr _field_dest_case{jule::Uintptr()};


	_11a093930_FallSt(jule::Uintptr __param_dest_case) {
		this->self = jule::Ref<_11a093930_FallSt>::make(this, nullptr);

		this->_field_dest_case = __param_dest_case;
	}

	~_11a093930_FallSt(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11a093930_FallSt(void) { this->self = jule::Ref<_11a093930_FallSt>::make(this, nullptr); }

	inline bool operator==(const _11a093930_FallSt &_Src) {
		return 
			this->_field_dest_case == _Src._field_dest_case;
	}

	inline bool operator!=(const _11a093930_FallSt &_Src) { return !this->operator==(_Src); }
};


struct _11a093930_RetSt {
	jule::Ref<_11a093930_RetSt> self{};

	jule::Slice<jule::Ref<_11a245f20_Var>> _field_vars{jule::Slice<jule::Ref<_11a245f20_Var>>()};
	jule::Any _field_expr{jule::Any()};


	_11a093930_RetSt(jule::Slice<jule::Ref<_11a245f20_Var>> __param_vars, jule::Any __param_expr) {
		this->self = jule::Ref<_11a093930_RetSt>::make(this, nullptr);

		this->_field_vars = __param_vars;
		this->_field_expr = __param_expr;
	}

	~_11a093930_RetSt(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11a093930_RetSt(void) { this->self = jule::Ref<_11a093930_RetSt>::make(this, nullptr); }

	inline bool operator==(const _11a093930_RetSt &_Src) {
		return 
			this->_field_vars == _Src._field_vars &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _11a093930_RetSt &_Src) { return !this->operator==(_Src); }
};


struct _11a093930_Recover {
	jule::Ref<_11a093930_Recover> self{};

	jule::Ref<_119099250_FnIns> _field_handler{jule::Ref<_119099250_FnIns>()};
	jule::Any _field_handler_expr{jule::Any()};
	jule::Ref<_11a093930_Scope> _field_scope{jule::Ref<_11a093930_Scope>()};


	_11a093930_Recover(jule::Ref<_119099250_FnIns> __param_handler, jule::Any __param_handler_expr, jule::Ref<_11a093930_Scope> __param_scope) {
		this->self = jule::Ref<_11a093930_Recover>::make(this, nullptr);

		this->_field_handler = __param_handler;
		this->_field_handler_expr = __param_handler_expr;
		this->_field_scope = __param_scope;
	}

	~_11a093930_Recover(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11a093930_Recover(void) { this->self = jule::Ref<_11a093930_Recover>::make(this, nullptr); }

	inline bool operator==(const _11a093930_Recover &_Src) {
		return 
			this->_field_handler == _Src._field_handler &&
			this->_field_handler_expr == _Src._field_handler_expr &&
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _11a093930_Recover &_Src) { return !this->operator==(_Src); }
};


struct _11a093930_ScopeGoto {
	jule::Ref<_11a093930_ScopeGoto> self{};

	jule::Ref<_118d9a790_GotoSt> _field_gt{jule::Ref<_118d9a790_GotoSt>()};
	jule::Ref<_11a093930_ScopeChecker> _field_scope{jule::Ref<_11a093930_ScopeChecker>()};
	jule::Int _field_pos{jule::Int()};


	_11a093930_ScopeGoto(jule::Ref<_118d9a790_GotoSt> __param_gt, jule::Ref<_11a093930_ScopeChecker> __param_scope, jule::Int __param_pos) {
		this->self = jule::Ref<_11a093930_ScopeGoto>::make(this, nullptr);

		this->_field_gt = __param_gt;
		this->_field_scope = __param_scope;
		this->_field_pos = __param_pos;
	}

	~_11a093930_ScopeGoto(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11a093930_ScopeGoto(void) { this->self = jule::Ref<_11a093930_ScopeGoto>::make(this, nullptr); }

	inline bool operator==(const _11a093930_ScopeGoto &_Src) {
		return 
			this->_field_gt == _Src._field_gt &&
			this->_field_scope == _Src._field_scope &&
			this->_field_pos == _Src._field_pos;
	}

	inline bool operator!=(const _11a093930_ScopeGoto &_Src) { return !this->operator==(_Src); }
};


struct _11a093930_ScopeChecker: public _11aa76f70_Lookup {
	jule::Ref<_11a093930_ScopeChecker> self{};

	jule::Ref<_11a096220_Sema> _field_s{jule::Ref<_11a096220_Sema>()};
	jule::Ref<_119099250_FnIns> _field_owner{jule::Ref<_119099250_FnIns>()};
	jule::Ref<_11a093930_ScopeChecker> _field_parent{jule::Ref<_11a093930_ScopeChecker>()};
	jule::Int _field_child_index{jule::Int()};
	jule::Ref<_11a3c2dc0_SymbolTable> _field_table{jule::Ref<_11a3c2dc0_SymbolTable>()};
	jule::Ref<_11a093930_Scope> _field_scope{jule::Ref<_11a093930_Scope>()};
	jule::Ref<_118d9a790_ScopeTree> _field_tree{jule::Ref<_118d9a790_ScopeTree>()};
	jule::Uintptr _field_it{jule::Uintptr()};
	jule::Uintptr _field_cse{jule::Uintptr()};
	jule::Ref<jule::Slice<jule::Ref<_11a093930_ScopeLabel>>> _field_labels{jule::Ref<jule::Slice<jule::Ref<_11a093930_ScopeLabel>>>()};
	jule::Ref<jule::Slice<jule::Ref<_11a093930_ScopeGoto>>> _field_gotos{jule::Ref<jule::Slice<jule::Ref<_11a093930_ScopeGoto>>>()};
	jule::Int _field_i{jule::Int()};


	_11a093930_ScopeChecker(jule::Ref<_11a096220_Sema> __param_s, jule::Ref<_119099250_FnIns> __param_owner, jule::Ref<_11a093930_ScopeChecker> __param_parent, jule::Int __param_child_index, jule::Ref<_11a3c2dc0_SymbolTable> __param_table, jule::Ref<_11a093930_Scope> __param_scope, jule::Ref<_118d9a790_ScopeTree> __param_tree, jule::Uintptr __param_it, jule::Uintptr __param_cse, jule::Ref<jule::Slice<jule::Ref<_11a093930_ScopeLabel>>> __param_labels, jule::Ref<jule::Slice<jule::Ref<_11a093930_ScopeGoto>>> __param_gotos, jule::Int __param_i) {
		this->self = jule::Ref<_11a093930_ScopeChecker>::make(this, nullptr);

		this->_field_s = __param_s;
		this->_field_owner = __param_owner;
		this->_field_parent = __param_parent;
		this->_field_child_index = __param_child_index;
		this->_field_table = __param_table;
		this->_field_scope = __param_scope;
		this->_field_tree = __param_tree;
		this->_field_it = __param_it;
		this->_field_cse = __param_cse;
		this->_field_labels = __param_labels;
		this->_field_gotos = __param_gotos;
		this->_field_i = __param_i;
	}

	~_11a093930_ScopeChecker(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11a093930_ScopeChecker(void) { this->self = jule::Ref<_11a093930_ScopeChecker>::make(this, nullptr); }

	inline jule::Ref<_11a0945e0_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ref<_11a0945e0_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ref<_11a0945e0_ImportInfo>)>);


	inline jule::Ref<_11a245f20_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ref<_11a3c2e70_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ref<_118bb7d70_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ref<_119099250_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ref<_118e2b060_Trait> _method_find_trait(jule::Str);


	inline jule::Ref<_11a089b40_Enum> _method_find_enum(jule::Str);


	inline jule::Bool _method_is_unsafe(void);


	inline jule::Bool _method_is_root(void);


	inline jule::Ref<_11a093930_ScopeChecker> _method_get_root(void);


	inline jule::Ref<_11a093930_Label> _method_find_label(jule::Str);


	inline jule::Ref<_11a093930_ScopeLabel> _method_find_label_scope(jule::Str);


	inline jule::Ref<_11a093930_ScopeLabel> _method_find_label_all(jule::Str);


	inline jule::Bool _method_is_duplicated_ident(jule::Uintptr,jule::Str);


	inline void _method_check_var_decl(jule::Ref<_118d9a790_VarDecl>);


	inline void _method_check_type_alias_decl(jule::Ref<_118d9a790_TypeAliasDecl>);


	inline jule::Ref<_11a093930_Scope> _method_get_child(void);


	inline void _method_check_child_ssc(jule::Ref<_118d9a790_ScopeTree>,jule::Ref<_11a093930_Scope>,jule::Ref<_11a093930_ScopeChecker>);


	inline jule::Ref<_11a093930_Scope> _method_check_child_sc(jule::Ref<_118d9a790_ScopeTree>,jule::Ref<_11a093930_ScopeChecker>);


	inline jule::Ref<_11a093930_Scope> _method_check_child(jule::Ref<_118d9a790_ScopeTree>);


	inline void _method_check_anon_scope(jule::Ref<_118d9a790_ScopeTree>);


	inline jule::Bool _method_try_call_recover(jule::Ref<_11a53f4f0_Data>);


	inline void _method_check_expr(jule::Ref<_118d9a790_Expr>);


	inline jule::Ref<_11a093930_If> _method_check_if(jule::Ref<_118d9a790_If>);


	inline jule::Ref<_11a093930_Else> _method_check_else(jule::Ref<_118d9a790_Else>);


	inline void _method_check_conditional(jule::Ref<_118d9a790_Conditional>);


	inline jule::Ref<_11a093930_Scope> _method_check_iter_scope_sc(jule::Uintptr,jule::Ref<_118d9a790_ScopeTree>,jule::Ref<_11a093930_ScopeChecker>);


	inline jule::Ref<_11a093930_Scope> _method_check_iter_scope(jule::Uintptr,jule::Ref<_118d9a790_ScopeTree>);


	inline void _method_check_inf_iter(jule::Ref<_118d9a790_Iter>);


	inline void _method_check_while_iter(jule::Ref<_118d9a790_Iter>);


	inline void _method_check_range_iter(jule::Ref<_118d9a790_Iter>);


	inline void _method_check_iter(jule::Ref<_118d9a790_Iter>);


	inline jule::Bool _method_check_valid_cont_label(jule::Uintptr);


	inline jule::Bool _method_check_valid_break_label(jule::Uintptr);


	inline jule::Ref<_11a093930_ContSt> _method_check_cont_valid_scope(jule::Ref<_118d9a790_ContSt>);


	inline void _method_check_cont(jule::Ref<_118d9a790_ContSt>);


	inline void _method_check_label(jule::Ref<_118d9a790_LabelSt>);


	inline void _method_push_goto(jule::Ref<_118d9a790_GotoSt>);


	inline void _method_check_postfix(jule::Ref<_118d9a790_AssignSt>);


	inline jule::Bool _method_is_new_assign_ident(jule::Str);


	inline void _method_check_single_assign(jule::Ref<_118d9a790_AssignSt>);


	inline void _method___process_end_part_of_multi_assign(jule::Ref<_11a093930_MultiAssign>,jule::Ref<_118d9a790_AssignSt>,jule::Ref<_118d9a790_AssignLeft>,jule::Ref<_11a53f4f0_Data>,jule::Ref<_11a53f4f0_Data>);


	inline void _method_check_ret_multi_assign(jule::Ref<_118d9a790_AssignSt>);


	inline void _method_check_multi_assign(jule::Ref<_118d9a790_AssignSt>);


	inline void _method_check_assign_st(jule::Ref<_118d9a790_AssignSt>);


	inline jule::Ref<_11a093930_Scope> _method_check_case_scope(jule::Ref<_11a093930_Case>,jule::Ref<_118d9a790_ScopeTree>);


	inline jule::Ref<_11a093930_Case> _method_check_case(jule::Ref<_11a093930_Match>,jule::Int,jule::Ref<_118d9a790_Case>,jule::Ref<_11a53f4f0_Data>);


	inline void _method_check_cases(jule::Ref<_118d9a790_MatchCase>,jule::Ref<_11a093930_Match>,jule::Ref<_11a53f4f0_Data>);


	inline jule::Ref<_11a093930_Case> _method_check_default(jule::Ref<_11a093930_Match>,jule::Ref<_118d9a790_Else>);


	inline void _method_check_type_match(jule::Ref<_118d9a790_MatchCase>);


	inline void _method_check_common_match(jule::Ref<_118d9a790_MatchCase>);


	inline void _method_check_match(jule::Ref<_118d9a790_MatchCase>);


	inline void _method_check_fall(jule::Ref<_118d9a790_FallSt>);


	inline jule::Ref<_11a093930_BreakSt> _method_check_break_with_label(jule::Ref<_118d9a790_BreakSt>);


	inline jule::Ref<_11a093930_BreakSt> _method_check_plain_break(jule::Ref<_118d9a790_BreakSt>);


	inline void _method_check_break(jule::Ref<_118d9a790_BreakSt>);


	inline void _method_check_ret(jule::Ref<_118d9a790_RetSt>);


	inline void _method_check_node(jule::Any);


	inline void _method_check_tree(void);


	inline void _method_check_same_scope_goto(jule::Ref<_11a093930_ScopeGoto>,jule::Ref<_11a093930_ScopeLabel>);


	inline jule::Bool _method_check_label_parents(jule::Ref<_11a093930_ScopeGoto>,jule::Ref<_11a093930_ScopeLabel>);


	inline void _method_check_goto_scope(jule::Ref<_11a093930_ScopeGoto>,jule::Ref<_11a093930_ScopeLabel>);


	inline void _method_check_diff_scope_goto(jule::Ref<_11a093930_ScopeGoto>,jule::Ref<_11a093930_ScopeLabel>);


	inline void _method_check_goto(jule::Ref<_11a093930_ScopeGoto>,jule::Ref<_11a093930_ScopeLabel>);


	inline void _method_check_gotos(void);


	inline void _method_check_labels(void);


	inline void _method_check_vars(void);


	inline void _method_check_aliases(void);


	inline void _method_check(jule::Ref<_118d9a790_ScopeTree>,jule::Ref<_11a093930_Scope>);


	inline jule::Ref<_11a093930_ScopeChecker> _method_new_child_checker(void);


	inline bool operator==(const _11a093930_ScopeChecker &_Src) {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_owner == _Src._field_owner &&
			this->_field_parent == _Src._field_parent &&
			this->_field_child_index == _Src._field_child_index &&
			this->_field_table == _Src._field_table &&
			this->_field_scope == _Src._field_scope &&
			this->_field_tree == _Src._field_tree &&
			this->_field_it == _Src._field_it &&
			this->_field_cse == _Src._field_cse &&
			this->_field_labels == _Src._field_labels &&
			this->_field_gotos == _Src._field_gotos &&
			this->_field_i == _Src._field_i;
	}

	inline bool operator!=(const _11a093930_ScopeChecker &_Src) { return !this->operator==(_Src); }
};


struct _119748ec0_BinopExprModel {
	jule::Ref<_119748ec0_BinopExprModel> self{};

	jule::Any _field_left{jule::Any()};
	jule::Any _field_right{jule::Any()};
	jule::Str _field_op{jule::Str()};


	_119748ec0_BinopExprModel(jule::Any __param_left, jule::Any __param_right, jule::Str __param_op) {
		this->self = jule::Ref<_119748ec0_BinopExprModel>::make(this, nullptr);

		this->_field_left = __param_left;
		this->_field_right = __param_right;
		this->_field_op = __param_op;
	}

	~_119748ec0_BinopExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_119748ec0_BinopExprModel(void) { this->self = jule::Ref<_119748ec0_BinopExprModel>::make(this, nullptr); }

	inline bool operator==(const _119748ec0_BinopExprModel &_Src) {
		return 
			this->_field_left == _Src._field_left &&
			this->_field_right == _Src._field_right &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _119748ec0_BinopExprModel &_Src) { return !this->operator==(_Src); }
};


struct _119748ec0_UnaryExprModel {
	jule::Ref<_119748ec0_UnaryExprModel> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Str _field_op{jule::Str()};


	_119748ec0_UnaryExprModel(jule::Any __param_expr, jule::Str __param_op) {
		this->self = jule::Ref<_119748ec0_UnaryExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_op = __param_op;
	}

	~_119748ec0_UnaryExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_119748ec0_UnaryExprModel(void) { this->self = jule::Ref<_119748ec0_UnaryExprModel>::make(this, nullptr); }

	inline bool operator==(const _119748ec0_UnaryExprModel &_Src) {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _119748ec0_UnaryExprModel &_Src) { return !this->operator==(_Src); }
};


struct _119748ec0_GetRefPtrExprModel {
	jule::Ref<_119748ec0_GetRefPtrExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_119748ec0_GetRefPtrExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_119748ec0_GetRefPtrExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_119748ec0_GetRefPtrExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_119748ec0_GetRefPtrExprModel(void) { this->self = jule::Ref<_119748ec0_GetRefPtrExprModel>::make(this, nullptr); }

	inline bool operator==(const _119748ec0_GetRefPtrExprModel &_Src) {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _119748ec0_GetRefPtrExprModel &_Src) { return !this->operator==(_Src); }
};


struct _119748ec0_StructArgExprModel {
	jule::Ref<_119748ec0_StructArgExprModel> self{};

	jule::Ref<_118bb7d70_FieldIns> _field_field{jule::Ref<_118bb7d70_FieldIns>()};
	jule::Any _field_expr{jule::Any()};


	_119748ec0_StructArgExprModel(jule::Ref<_118bb7d70_FieldIns> __param_field, jule::Any __param_expr) {
		this->self = jule::Ref<_119748ec0_StructArgExprModel>::make(this, nullptr);

		this->_field_field = __param_field;
		this->_field_expr = __param_expr;
	}

	~_119748ec0_StructArgExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_119748ec0_StructArgExprModel(void) { this->self = jule::Ref<_119748ec0_StructArgExprModel>::make(this, nullptr); }

	inline bool operator==(const _119748ec0_StructArgExprModel &_Src) {
		return 
			this->_field_field == _Src._field_field &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _119748ec0_StructArgExprModel &_Src) { return !this->operator==(_Src); }
};


struct _119748ec0_StructLitExprModel {
	jule::Ref<_119748ec0_StructLitExprModel> self{};

	jule::Ref<_118bb7d70_StructIns> _field_strct{jule::Ref<_118bb7d70_StructIns>()};
	jule::Slice<jule::Ref<_119748ec0_StructArgExprModel>> _field_args{jule::Slice<jule::Ref<_119748ec0_StructArgExprModel>>()};


	_119748ec0_StructLitExprModel(jule::Ref<_118bb7d70_StructIns> __param_strct, jule::Slice<jule::Ref<_119748ec0_StructArgExprModel>> __param_args) {
		this->self = jule::Ref<_119748ec0_StructLitExprModel>::make(this, nullptr);

		this->_field_strct = __param_strct;
		this->_field_args = __param_args;
	}

	~_119748ec0_StructLitExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_119748ec0_StructLitExprModel(void) { this->self = jule::Ref<_119748ec0_StructLitExprModel>::make(this, nullptr); }

	inline bool operator==(const _119748ec0_StructLitExprModel &_Src) {
		return 
			this->_field_strct == _Src._field_strct &&
			this->_field_args == _Src._field_args;
	}

	inline bool operator!=(const _119748ec0_StructLitExprModel &_Src) { return !this->operator==(_Src); }
};


struct _119748ec0_AllocStructLitExprModel {
	jule::Ref<_119748ec0_AllocStructLitExprModel> self{};

	jule::Ref<_119748ec0_StructLitExprModel> _field_lit{jule::Ref<_119748ec0_StructLitExprModel>()};


	_119748ec0_AllocStructLitExprModel(jule::Ref<_119748ec0_StructLitExprModel> __param_lit) {
		this->self = jule::Ref<_119748ec0_AllocStructLitExprModel>::make(this, nullptr);

		this->_field_lit = __param_lit;
	}

	~_119748ec0_AllocStructLitExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_119748ec0_AllocStructLitExprModel(void) { this->self = jule::Ref<_119748ec0_AllocStructLitExprModel>::make(this, nullptr); }

	inline bool operator==(const _119748ec0_AllocStructLitExprModel &_Src) {
		return 
			this->_field_lit == _Src._field_lit;
	}

	inline bool operator!=(const _119748ec0_AllocStructLitExprModel &_Src) { return !this->operator==(_Src); }
};


struct _119748ec0_CastingExprModel {
	jule::Ref<_119748ec0_CastingExprModel> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Ref<_11a3c2e70_TypeKind> _field_kind{jule::Ref<_11a3c2e70_TypeKind>()};
	jule::Ref<_11a3c2e70_TypeKind> _field_expr_kind{jule::Ref<_11a3c2e70_TypeKind>()};


	_119748ec0_CastingExprModel(jule::Any __param_expr, jule::Ref<_11a3c2e70_TypeKind> __param_kind, jule::Ref<_11a3c2e70_TypeKind> __param_expr_kind) {
		this->self = jule::Ref<_119748ec0_CastingExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_kind = __param_kind;
		this->_field_expr_kind = __param_expr_kind;
	}

	~_119748ec0_CastingExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_119748ec0_CastingExprModel(void) { this->self = jule::Ref<_119748ec0_CastingExprModel>::make(this, nullptr); }

	inline bool operator==(const _119748ec0_CastingExprModel &_Src) {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_kind == _Src._field_kind &&
			this->_field_expr_kind == _Src._field_expr_kind;
	}

	inline bool operator!=(const _119748ec0_CastingExprModel &_Src) { return !this->operator==(_Src); }
};


struct _119748ec0_FnCallExprModel {
	jule::Ref<_119748ec0_FnCallExprModel> self{};

	jule::Ref<_119099250_FnIns> _field_func{jule::Ref<_119099250_FnIns>()};
	jule::Bool _field_is_co{jule::Bool()};
	jule::Any _field_expr{jule::Any()};
	jule::Slice<jule::Any> _field_args{jule::Slice<jule::Any>()};


	_119748ec0_FnCallExprModel(jule::Ref<_119099250_FnIns> __param_func, jule::Bool __param_is_co, jule::Any __param_expr, jule::Slice<jule::Any> __param_args) {
		this->self = jule::Ref<_119748ec0_FnCallExprModel>::make(this, nullptr);

		this->_field_func = __param_func;
		this->_field_is_co = __param_is_co;
		this->_field_expr = __param_expr;
		this->_field_args = __param_args;
	}

	~_119748ec0_FnCallExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_119748ec0_FnCallExprModel(void) { this->self = jule::Ref<_119748ec0_FnCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _119748ec0_FnCallExprModel &_Src) {
		return 
			this->_field_func == _Src._field_func &&
			this->_field_is_co == _Src._field_is_co &&
			this->_field_expr == _Src._field_expr &&
			this->_field_args == _Src._field_args;
	}

	inline bool operator!=(const _119748ec0_FnCallExprModel &_Src) { return !this->operator==(_Src); }
};


struct _119748ec0_SliceExprModel {
	jule::Ref<_119748ec0_SliceExprModel> self{};

	jule::Ref<_11a3c2e70_TypeKind> _field_elem_kind{jule::Ref<_11a3c2e70_TypeKind>()};
	jule::Slice<jule::Any> _field_elems{jule::Slice<jule::Any>()};


	_119748ec0_SliceExprModel(jule::Ref<_11a3c2e70_TypeKind> __param_elem_kind, jule::Slice<jule::Any> __param_elems) {
		this->self = jule::Ref<_119748ec0_SliceExprModel>::make(this, nullptr);

		this->_field_elem_kind = __param_elem_kind;
		this->_field_elems = __param_elems;
	}

	~_119748ec0_SliceExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_119748ec0_SliceExprModel(void) { this->self = jule::Ref<_119748ec0_SliceExprModel>::make(this, nullptr); }

	inline bool operator==(const _119748ec0_SliceExprModel &_Src) {
		return 
			this->_field_elem_kind == _Src._field_elem_kind &&
			this->_field_elems == _Src._field_elems;
	}

	inline bool operator!=(const _119748ec0_SliceExprModel &_Src) { return !this->operator==(_Src); }
};


struct _119748ec0_IndexigExprModel {
	jule::Ref<_119748ec0_IndexigExprModel> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Any _field_index{jule::Any()};


	_119748ec0_IndexigExprModel(jule::Any __param_expr, jule::Any __param_index) {
		this->self = jule::Ref<_119748ec0_IndexigExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_index = __param_index;
	}

	~_119748ec0_IndexigExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_119748ec0_IndexigExprModel(void) { this->self = jule::Ref<_119748ec0_IndexigExprModel>::make(this, nullptr); }

	inline bool operator==(const _119748ec0_IndexigExprModel &_Src) {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_index == _Src._field_index;
	}

	inline bool operator!=(const _119748ec0_IndexigExprModel &_Src) { return !this->operator==(_Src); }
};


struct _119748ec0_AnonFnExprModel {
	jule::Ref<_119748ec0_AnonFnExprModel> self{};

	jule::Ref<_119099250_FnIns> _field_func{jule::Ref<_119099250_FnIns>()};
	jule::Bool _field_global{jule::Bool()};


	_119748ec0_AnonFnExprModel(jule::Ref<_119099250_FnIns> __param_func, jule::Bool __param_global) {
		this->self = jule::Ref<_119748ec0_AnonFnExprModel>::make(this, nullptr);

		this->_field_func = __param_func;
		this->_field_global = __param_global;
	}

	~_119748ec0_AnonFnExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_119748ec0_AnonFnExprModel(void) { this->self = jule::Ref<_119748ec0_AnonFnExprModel>::make(this, nullptr); }

	inline bool operator==(const _119748ec0_AnonFnExprModel &_Src) {
		return 
			this->_field_func == _Src._field_func &&
			this->_field_global == _Src._field_global;
	}

	inline bool operator!=(const _119748ec0_AnonFnExprModel &_Src) { return !this->operator==(_Src); }
};


struct _119748ec0_KeyValPairExprModel {
	jule::Ref<_119748ec0_KeyValPairExprModel> self{};

	jule::Any _field_key{jule::Any()};
	jule::Any _field_val{jule::Any()};


	_119748ec0_KeyValPairExprModel(jule::Any __param_key, jule::Any __param_val) {
		this->self = jule::Ref<_119748ec0_KeyValPairExprModel>::make(this, nullptr);

		this->_field_key = __param_key;
		this->_field_val = __param_val;
	}

	~_119748ec0_KeyValPairExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_119748ec0_KeyValPairExprModel(void) { this->self = jule::Ref<_119748ec0_KeyValPairExprModel>::make(this, nullptr); }

	inline bool operator==(const _119748ec0_KeyValPairExprModel &_Src) {
		return 
			this->_field_key == _Src._field_key &&
			this->_field_val == _Src._field_val;
	}

	inline bool operator!=(const _119748ec0_KeyValPairExprModel &_Src) { return !this->operator==(_Src); }
};


struct _119748ec0_MapExprModel {
	jule::Ref<_119748ec0_MapExprModel> self{};

	jule::Ref<_11a3c2e70_TypeKind> _field_key_kind{jule::Ref<_11a3c2e70_TypeKind>()};
	jule::Ref<_11a3c2e70_TypeKind> _field_val_kind{jule::Ref<_11a3c2e70_TypeKind>()};
	jule::Slice<jule::Ref<_119748ec0_KeyValPairExprModel>> _field_entries{jule::Slice<jule::Ref<_119748ec0_KeyValPairExprModel>>()};


	_119748ec0_MapExprModel(jule::Ref<_11a3c2e70_TypeKind> __param_key_kind, jule::Ref<_11a3c2e70_TypeKind> __param_val_kind, jule::Slice<jule::Ref<_119748ec0_KeyValPairExprModel>> __param_entries) {
		this->self = jule::Ref<_119748ec0_MapExprModel>::make(this, nullptr);

		this->_field_key_kind = __param_key_kind;
		this->_field_val_kind = __param_val_kind;
		this->_field_entries = __param_entries;
	}

	~_119748ec0_MapExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_119748ec0_MapExprModel(void) { this->self = jule::Ref<_119748ec0_MapExprModel>::make(this, nullptr); }

	inline bool operator==(const _119748ec0_MapExprModel &_Src) {
		return 
			this->_field_key_kind == _Src._field_key_kind &&
			this->_field_val_kind == _Src._field_val_kind &&
			this->_field_entries == _Src._field_entries;
	}

	inline bool operator!=(const _119748ec0_MapExprModel &_Src) { return !this->operator==(_Src); }
};


struct _119748ec0_SlicingExprModel {
	jule::Ref<_119748ec0_SlicingExprModel> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Any _field_left{jule::Any()};
	jule::Any _field_right{jule::Any()};


	_119748ec0_SlicingExprModel(jule::Any __param_expr, jule::Any __param_left, jule::Any __param_right) {
		this->self = jule::Ref<_119748ec0_SlicingExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_left = __param_left;
		this->_field_right = __param_right;
	}

	~_119748ec0_SlicingExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_119748ec0_SlicingExprModel(void) { this->self = jule::Ref<_119748ec0_SlicingExprModel>::make(this, nullptr); }

	inline bool operator==(const _119748ec0_SlicingExprModel &_Src) {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_left == _Src._field_left &&
			this->_field_right == _Src._field_right;
	}

	inline bool operator!=(const _119748ec0_SlicingExprModel &_Src) { return !this->operator==(_Src); }
};


struct _119748ec0_TraitSubIdentExprModel {
	jule::Ref<_119748ec0_TraitSubIdentExprModel> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Str _field_ident{jule::Str()};


	_119748ec0_TraitSubIdentExprModel(jule::Any __param_expr, jule::Str __param_ident) {
		this->self = jule::Ref<_119748ec0_TraitSubIdentExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_ident = __param_ident;
	}

	~_119748ec0_TraitSubIdentExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_119748ec0_TraitSubIdentExprModel(void) { this->self = jule::Ref<_119748ec0_TraitSubIdentExprModel>::make(this, nullptr); }

	inline bool operator==(const _119748ec0_TraitSubIdentExprModel &_Src) {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _119748ec0_TraitSubIdentExprModel &_Src) { return !this->operator==(_Src); }
};


struct _119748ec0_StructSubIdentExprModel {
	jule::Ref<_119748ec0_StructSubIdentExprModel> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Ref<_11a3c2e70_TypeKind> _field_expr_kind{jule::Ref<_11a3c2e70_TypeKind>()};
	jule::Ref<_119099250_FnIns> _field_method{jule::Ref<_119099250_FnIns>()};
	jule::Ref<_118bb7d70_FieldIns> _field_field{jule::Ref<_118bb7d70_FieldIns>()};


	_119748ec0_StructSubIdentExprModel(jule::Any __param_expr, jule::Ref<_11a3c2e70_TypeKind> __param_expr_kind, jule::Ref<_119099250_FnIns> __param_method, jule::Ref<_118bb7d70_FieldIns> __param_field) {
		this->self = jule::Ref<_119748ec0_StructSubIdentExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_expr_kind = __param_expr_kind;
		this->_field_method = __param_method;
		this->_field_field = __param_field;
	}

	~_119748ec0_StructSubIdentExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_119748ec0_StructSubIdentExprModel(void) { this->self = jule::Ref<_119748ec0_StructSubIdentExprModel>::make(this, nullptr); }

	inline bool operator==(const _119748ec0_StructSubIdentExprModel &_Src) {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_expr_kind == _Src._field_expr_kind &&
			this->_field_method == _Src._field_method &&
			this->_field_field == _Src._field_field;
	}

	inline bool operator!=(const _119748ec0_StructSubIdentExprModel &_Src) { return !this->operator==(_Src); }
};


struct _119748ec0_StructStaticIdentExprModel {
	jule::Ref<_119748ec0_StructStaticIdentExprModel> self{};

	jule::Ref<_118bb7d70_StructIns> _field_structure{jule::Ref<_118bb7d70_StructIns>()};
	jule::Any _field_expr{jule::Any()};
	jule::Ref<_119099250_FnIns> _field_method{jule::Ref<_119099250_FnIns>()};


	_119748ec0_StructStaticIdentExprModel(jule::Ref<_118bb7d70_StructIns> __param_structure, jule::Any __param_expr, jule::Ref<_119099250_FnIns> __param_method) {
		this->self = jule::Ref<_119748ec0_StructStaticIdentExprModel>::make(this, nullptr);

		this->_field_structure = __param_structure;
		this->_field_expr = __param_expr;
		this->_field_method = __param_method;
	}

	~_119748ec0_StructStaticIdentExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_119748ec0_StructStaticIdentExprModel(void) { this->self = jule::Ref<_119748ec0_StructStaticIdentExprModel>::make(this, nullptr); }

	inline bool operator==(const _119748ec0_StructStaticIdentExprModel &_Src) {
		return 
			this->_field_structure == _Src._field_structure &&
			this->_field_expr == _Src._field_expr &&
			this->_field_method == _Src._field_method;
	}

	inline bool operator!=(const _119748ec0_StructStaticIdentExprModel &_Src) { return !this->operator==(_Src); }
};


struct _119748ec0_ArrayExprModel {
	jule::Ref<_119748ec0_ArrayExprModel> self{};

	jule::Ref<_11a3c2e70_Arr> _field_kind{jule::Ref<_11a3c2e70_Arr>()};
	jule::Slice<jule::Any> _field_elems{jule::Slice<jule::Any>()};


	_119748ec0_ArrayExprModel(jule::Ref<_11a3c2e70_Arr> __param_kind, jule::Slice<jule::Any> __param_elems) {
		this->self = jule::Ref<_119748ec0_ArrayExprModel>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_elems = __param_elems;
	}

	~_119748ec0_ArrayExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_119748ec0_ArrayExprModel(void) { this->self = jule::Ref<_119748ec0_ArrayExprModel>::make(this, nullptr); }

	inline bool operator==(const _119748ec0_ArrayExprModel &_Src) {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_elems == _Src._field_elems;
	}

	inline bool operator!=(const _119748ec0_ArrayExprModel &_Src) { return !this->operator==(_Src); }
};


struct _119748ec0_CommonIdentExprModel {
	jule::Ref<_119748ec0_CommonIdentExprModel> self{};

	jule::Str _field_ident{jule::Str()};


	_119748ec0_CommonIdentExprModel(jule::Str __param_ident) {
		this->self = jule::Ref<_119748ec0_CommonIdentExprModel>::make(this, nullptr);

		this->_field_ident = __param_ident;
	}

	~_119748ec0_CommonIdentExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_119748ec0_CommonIdentExprModel(void) { this->self = jule::Ref<_119748ec0_CommonIdentExprModel>::make(this, nullptr); }

	inline bool operator==(const _119748ec0_CommonIdentExprModel &_Src) {
		return 
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _119748ec0_CommonIdentExprModel &_Src) { return !this->operator==(_Src); }
};


struct _119748ec0_CommonSubIdentExprModel {
	jule::Ref<_119748ec0_CommonSubIdentExprModel> self{};

	jule::Ref<_11a3c2e70_TypeKind> _field_expr_kind{jule::Ref<_11a3c2e70_TypeKind>()};
	jule::Any _field_expr{jule::Any()};
	jule::Str _field_ident{jule::Str()};


	_119748ec0_CommonSubIdentExprModel(jule::Ref<_11a3c2e70_TypeKind> __param_expr_kind, jule::Any __param_expr, jule::Str __param_ident) {
		this->self = jule::Ref<_119748ec0_CommonSubIdentExprModel>::make(this, nullptr);

		this->_field_expr_kind = __param_expr_kind;
		this->_field_expr = __param_expr;
		this->_field_ident = __param_ident;
	}

	~_119748ec0_CommonSubIdentExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_119748ec0_CommonSubIdentExprModel(void) { this->self = jule::Ref<_119748ec0_CommonSubIdentExprModel>::make(this, nullptr); }

	inline bool operator==(const _119748ec0_CommonSubIdentExprModel &_Src) {
		return 
			this->_field_expr_kind == _Src._field_expr_kind &&
			this->_field_expr == _Src._field_expr &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _119748ec0_CommonSubIdentExprModel &_Src) { return !this->operator==(_Src); }
};


struct _119748ec0_TupleExprModel {
	jule::Ref<_119748ec0_TupleExprModel> self{};

	jule::Slice<jule::Ref<_11a53f4f0_Data>> _field_datas{jule::Slice<jule::Ref<_11a53f4f0_Data>>()};


	_119748ec0_TupleExprModel(jule::Slice<jule::Ref<_11a53f4f0_Data>> __param_datas) {
		this->self = jule::Ref<_119748ec0_TupleExprModel>::make(this, nullptr);

		this->_field_datas = __param_datas;
	}

	~_119748ec0_TupleExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_119748ec0_TupleExprModel(void) { this->self = jule::Ref<_119748ec0_TupleExprModel>::make(this, nullptr); }

	inline bool operator==(const _119748ec0_TupleExprModel &_Src) {
		return 
			this->_field_datas == _Src._field_datas;
	}

	inline bool operator!=(const _119748ec0_TupleExprModel &_Src) { return !this->operator==(_Src); }
};


struct _119748ec0_BuiltinOutCallExprModel {
	jule::Ref<_119748ec0_BuiltinOutCallExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_119748ec0_BuiltinOutCallExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_119748ec0_BuiltinOutCallExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_119748ec0_BuiltinOutCallExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_119748ec0_BuiltinOutCallExprModel(void) { this->self = jule::Ref<_119748ec0_BuiltinOutCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _119748ec0_BuiltinOutCallExprModel &_Src) {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _119748ec0_BuiltinOutCallExprModel &_Src) { return !this->operator==(_Src); }
};


struct _119748ec0_BuiltinOutlnCallExprModel {
	jule::Ref<_119748ec0_BuiltinOutlnCallExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_119748ec0_BuiltinOutlnCallExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_119748ec0_BuiltinOutlnCallExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_119748ec0_BuiltinOutlnCallExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_119748ec0_BuiltinOutlnCallExprModel(void) { this->self = jule::Ref<_119748ec0_BuiltinOutlnCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _119748ec0_BuiltinOutlnCallExprModel &_Src) {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _119748ec0_BuiltinOutlnCallExprModel &_Src) { return !this->operator==(_Src); }
};


struct _119748ec0_BuiltinCloneCallExprModel {
	jule::Ref<_119748ec0_BuiltinCloneCallExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_119748ec0_BuiltinCloneCallExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_119748ec0_BuiltinCloneCallExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_119748ec0_BuiltinCloneCallExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_119748ec0_BuiltinCloneCallExprModel(void) { this->self = jule::Ref<_119748ec0_BuiltinCloneCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _119748ec0_BuiltinCloneCallExprModel &_Src) {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _119748ec0_BuiltinCloneCallExprModel &_Src) { return !this->operator==(_Src); }
};


struct _119748ec0_BuiltinNewCallExprModel {
	jule::Ref<_119748ec0_BuiltinNewCallExprModel> self{};

	jule::Ref<_11a3c2e70_TypeKind> _field_kind{jule::Ref<_11a3c2e70_TypeKind>()};
	jule::Any _field_init{jule::Any()};


	_119748ec0_BuiltinNewCallExprModel(jule::Ref<_11a3c2e70_TypeKind> __param_kind, jule::Any __param_init) {
		this->self = jule::Ref<_119748ec0_BuiltinNewCallExprModel>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_init = __param_init;
	}

	~_119748ec0_BuiltinNewCallExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_119748ec0_BuiltinNewCallExprModel(void) { this->self = jule::Ref<_119748ec0_BuiltinNewCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _119748ec0_BuiltinNewCallExprModel &_Src) {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_init == _Src._field_init;
	}

	inline bool operator!=(const _119748ec0_BuiltinNewCallExprModel &_Src) { return !this->operator==(_Src); }
};


struct _119748ec0_BuiltinRealCallExprModel {
	jule::Ref<_119748ec0_BuiltinRealCallExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_119748ec0_BuiltinRealCallExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_119748ec0_BuiltinRealCallExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_119748ec0_BuiltinRealCallExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_119748ec0_BuiltinRealCallExprModel(void) { this->self = jule::Ref<_119748ec0_BuiltinRealCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _119748ec0_BuiltinRealCallExprModel &_Src) {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _119748ec0_BuiltinRealCallExprModel &_Src) { return !this->operator==(_Src); }
};


struct _119748ec0_BuiltinDropCallExprModel {
	jule::Ref<_119748ec0_BuiltinDropCallExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_119748ec0_BuiltinDropCallExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_119748ec0_BuiltinDropCallExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_119748ec0_BuiltinDropCallExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_119748ec0_BuiltinDropCallExprModel(void) { this->self = jule::Ref<_119748ec0_BuiltinDropCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _119748ec0_BuiltinDropCallExprModel &_Src) {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _119748ec0_BuiltinDropCallExprModel &_Src) { return !this->operator==(_Src); }
};


struct _119748ec0_BuiltinPanicCallExprModel {
	jule::Ref<_119748ec0_BuiltinPanicCallExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_119748ec0_BuiltinPanicCallExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_119748ec0_BuiltinPanicCallExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_119748ec0_BuiltinPanicCallExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_119748ec0_BuiltinPanicCallExprModel(void) { this->self = jule::Ref<_119748ec0_BuiltinPanicCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _119748ec0_BuiltinPanicCallExprModel &_Src) {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _119748ec0_BuiltinPanicCallExprModel &_Src) { return !this->operator==(_Src); }
};


struct _119748ec0_BuiltinMakeCallExprModel {
	jule::Ref<_119748ec0_BuiltinMakeCallExprModel> self{};

	jule::Ref<_11a3c2e70_TypeKind> _field_kind{jule::Ref<_11a3c2e70_TypeKind>()};
	jule::Any _field_len{jule::Any()};
	jule::Any _field_cap{jule::Any()};


	_119748ec0_BuiltinMakeCallExprModel(jule::Ref<_11a3c2e70_TypeKind> __param_kind, jule::Any __param_len, jule::Any __param_cap) {
		this->self = jule::Ref<_119748ec0_BuiltinMakeCallExprModel>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_len = __param_len;
		this->_field_cap = __param_cap;
	}

	~_119748ec0_BuiltinMakeCallExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_119748ec0_BuiltinMakeCallExprModel(void) { this->self = jule::Ref<_119748ec0_BuiltinMakeCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _119748ec0_BuiltinMakeCallExprModel &_Src) {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_len == _Src._field_len &&
			this->_field_cap == _Src._field_cap;
	}

	inline bool operator!=(const _119748ec0_BuiltinMakeCallExprModel &_Src) { return !this->operator==(_Src); }
};


struct _119748ec0_BuiltinErrorTraitSubIdentExprModel {
	jule::Ref<_119748ec0_BuiltinErrorTraitSubIdentExprModel> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Str _field_ident{jule::Str()};


	_119748ec0_BuiltinErrorTraitSubIdentExprModel(jule::Any __param_expr, jule::Str __param_ident) {
		this->self = jule::Ref<_119748ec0_BuiltinErrorTraitSubIdentExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_ident = __param_ident;
	}

	~_119748ec0_BuiltinErrorTraitSubIdentExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_119748ec0_BuiltinErrorTraitSubIdentExprModel(void) { this->self = jule::Ref<_119748ec0_BuiltinErrorTraitSubIdentExprModel>::make(this, nullptr); }

	inline bool operator==(const _119748ec0_BuiltinErrorTraitSubIdentExprModel &_Src) {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _119748ec0_BuiltinErrorTraitSubIdentExprModel &_Src) { return !this->operator==(_Src); }
};


struct _119748ec0_SizeofExprModel {
	jule::Ref<_119748ec0_SizeofExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_119748ec0_SizeofExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_119748ec0_SizeofExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_119748ec0_SizeofExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_119748ec0_SizeofExprModel(void) { this->self = jule::Ref<_119748ec0_SizeofExprModel>::make(this, nullptr); }

	inline bool operator==(const _119748ec0_SizeofExprModel &_Src) {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _119748ec0_SizeofExprModel &_Src) { return !this->operator==(_Src); }
};


struct _119748ec0_AlignofExprModel {
	jule::Ref<_119748ec0_AlignofExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_119748ec0_AlignofExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_119748ec0_AlignofExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_119748ec0_AlignofExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_119748ec0_AlignofExprModel(void) { this->self = jule::Ref<_119748ec0_AlignofExprModel>::make(this, nullptr); }

	inline bool operator==(const _119748ec0_AlignofExprModel &_Src) {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _119748ec0_AlignofExprModel &_Src) { return !this->operator==(_Src); }
};


struct _119748ec0_RuneExprModel {
	jule::Ref<_119748ec0_RuneExprModel> self{};

	jule::I32 _field_code{jule::I32()};


	_119748ec0_RuneExprModel(jule::I32 __param_code) {
		this->self = jule::Ref<_119748ec0_RuneExprModel>::make(this, nullptr);

		this->_field_code = __param_code;
	}

	~_119748ec0_RuneExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_119748ec0_RuneExprModel(void) { this->self = jule::Ref<_119748ec0_RuneExprModel>::make(this, nullptr); }

	inline bool operator==(const _119748ec0_RuneExprModel &_Src) {
		return 
			this->_field_code == _Src._field_code;
	}

	inline bool operator!=(const _119748ec0_RuneExprModel &_Src) { return !this->operator==(_Src); }
};


struct _119748ec0_ExplicitDerefExprModel {
	jule::Ref<_119748ec0_ExplicitDerefExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_119748ec0_ExplicitDerefExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_119748ec0_ExplicitDerefExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_119748ec0_ExplicitDerefExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_119748ec0_ExplicitDerefExprModel(void) { this->self = jule::Ref<_119748ec0_ExplicitDerefExprModel>::make(this, nullptr); }

	inline bool operator==(const _119748ec0_ExplicitDerefExprModel &_Src) {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _119748ec0_ExplicitDerefExprModel &_Src) { return !this->operator==(_Src); }
};


struct _11a0945e0_Package: public _11aa76f70_Lookup {
	jule::Ref<_11a0945e0_Package> self{};

	jule::Slice<jule::Ref<_11a3c2dc0_SymbolTable>> _field_files{jule::Slice<jule::Ref<_11a3c2dc0_SymbolTable>>()};


	_11a0945e0_Package(jule::Slice<jule::Ref<_11a3c2dc0_SymbolTable>> __param_files) {
		this->self = jule::Ref<_11a0945e0_Package>::make(this, nullptr);

		this->_field_files = __param_files;
	}

	~_11a0945e0_Package(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11a0945e0_Package(void) { this->self = jule::Ref<_11a0945e0_Package>::make(this, nullptr); }

	inline jule::Ref<_11a0945e0_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ref<_11a0945e0_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ref<_11a0945e0_ImportInfo>)>);


	inline jule::Ref<_11a245f20_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ref<_11a3c2e70_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ref<_118bb7d70_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ref<_119099250_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ref<_118e2b060_Trait> _method_find_trait(jule::Str);


	inline jule::Ref<_11a089b40_Enum> _method_find_enum(jule::Str);


	inline bool operator==(const _11a0945e0_Package &_Src) {
		return 
			this->_field_files == _Src._field_files;
	}

	inline bool operator!=(const _11a0945e0_Package &_Src) { return !this->operator==(_Src); }
};


struct _11a096220_Sema: public _11aa76f70_Lookup {
	jule::Ref<_11a096220_Sema> self{};

	jule::Slice<_13fe81720_Log> _field_errors{jule::Slice<_13fe81720_Log>()};
	jule::Slice<jule::Ref<_11a3c2dc0_SymbolTable>> _field_files{jule::Slice<jule::Ref<_11a3c2dc0_SymbolTable>>()};
	jule::Ref<_11a3c2dc0_SymbolTable> _field_file{jule::Ref<_11a3c2dc0_SymbolTable>()};


	_11a096220_Sema(jule::Slice<_13fe81720_Log> __param_errors, jule::Slice<jule::Ref<_11a3c2dc0_SymbolTable>> __param_files, jule::Ref<_11a3c2dc0_SymbolTable> __param_file) {
		this->self = jule::Ref<_11a096220_Sema>::make(this, nullptr);

		this->_field_errors = __param_errors;
		this->_field_files = __param_files;
		this->_field_file = __param_file;
	}

	~_11a096220_Sema(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11a096220_Sema(void) { this->self = jule::Ref<_11a096220_Sema>::make(this, nullptr); }

	inline jule::Ref<_11a0945e0_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ref<_11a0945e0_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ref<_11a0945e0_ImportInfo>)>);


	inline jule::Ref<_11a245f20_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ref<_11a3c2e70_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ref<_118bb7d70_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ref<_119099250_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ref<_118e2b060_Trait> _method_find_trait(jule::Str);


	inline jule::Ref<_11a089b40_Enum> _method_find_enum(jule::Str);


	inline void _method_set_current_file(jule::Ref<_11a3c2dc0_SymbolTable>);


	inline void _method_push_err(_11911a8a0_Token,jule::Str,jule::Slice<jule::Any>);


	inline jule::Bool _method_is_accessible_define(jule::Bool,_11911a8a0_Token);


	inline jule::Bool _method_is_duplicated_ident(jule::Uintptr,jule::Str,jule::Bool);


	inline jule::Bool _method_check_generic_quantity(jule::Int,jule::Int,_11911a8a0_Token);


	inline jule::Bool _method_is_duplicated_import_selection(jule::Uintptr,jule::Str);


	inline jule::Any _method_get_import_def(jule::Str,jule::Ref<_11a0945e0_ImportInfo>&);


	inline void _method_check_import_selections(jule::Ref<_11a0945e0_ImportInfo>);


	inline jule::Bool _method_check_import(jule::Ref<_11a0945e0_ImportInfo>);


	inline void _method_check_imports(void);


	inline void _method_impl_file_impls(void);


	inline void _method_impl_impls(void);


	inline void _method_check_enums(void);


	inline jule::Bool _method_check_type_with_refers(jule::Ref<_11a3c2e70_TypeSymbol>,jule::Trait<_11aa76f70_Lookup>,jule::Ref<_11a3c2e70_Referencer>);


	inline jule::Bool _method_check_type(jule::Ref<_11a3c2e70_TypeSymbol>,jule::Trait<_11aa76f70_Lookup>);


	inline jule::Ref<_11a3c2e70_TypeKind> _method_build_type_with_generics(jule::Ref<_118d9a790_TypeDecl>,jule::Slice<jule::Ref<_11a3c2e70_TypeAlias>>);


	inline jule::Ref<_11a3c2e70_TypeKind> _method_build_type(jule::Ref<_118d9a790_TypeDecl>);


	inline jule::Ref<_11a53f4f0_Data> _method_evalpd(jule::Ref<_118d9a790_Expr>,jule::Trait<_11aa76f70_Lookup>,jule::Ref<_11a3c2e70_TypeKind>,jule::Ref<_11a245f20_Var>);


	inline jule::Ref<_11a53f4f0_Data> _method_evalp(jule::Ref<_118d9a790_Expr>,jule::Trait<_11aa76f70_Lookup>,jule::Ref<_11a3c2e70_TypeKind>);


	inline jule::Ref<_11a53f4f0_Data> _method_eval(jule::Ref<_118d9a790_Expr>,jule::Trait<_11aa76f70_Lookup>);


	inline void _method_check_assign_type(jule::Ref<_11a3c2e70_TypeKind>,jule::Ref<_11a53f4f0_Data>,_11911a8a0_Token,jule::Bool);


	inline jule::Bool _method_check_type_compatibility(jule::Ref<_11a3c2e70_TypeKind>,jule::Ref<_11a3c2e70_TypeKind>,_11911a8a0_Token,jule::Bool);


	inline jule::Ref<_11a3c2e70_TypeKind> _method_build_non_generic_type_kind(jule::Ref<_118d9a790_TypeDecl>,jule::Slice<jule::Ref<_118d9a790_GenericDecl>>);


	inline void _method_build_fn_non_generic_type_kinds(jule::Ref<_119099250_FnIns>);


	inline jule::Ref<_119099250_FnIns> _method_get_trait_check_fn_kind(jule::Ref<_119099250_Fn>);


	inline jule::Bool _method_reload_fn_ins_types(jule::Ref<_119099250_FnIns>);


	inline void _method_check_validity_for_init_expr(jule::Bool,jule::Bool,jule::Ref<_11a3c2e70_TypeKind>,jule::Ref<_11a53f4f0_Data>,_11911a8a0_Token);


	inline jule::Bool _method_check_type_alias_decl_kind(jule::Ref<_11a3c2e70_TypeAlias>,jule::Trait<_11aa76f70_Lookup>);


	inline void _method_check_type_alias_decl(jule::Ref<_11a3c2e70_TypeAlias>,jule::Trait<_11aa76f70_Lookup>);


	inline void _method_check_type_alias_decl_dup(jule::Ref<_11a3c2e70_TypeAlias>);


	inline jule::Bool _method_check_type_alias_decls(void);


	inline void _method_check_enum_items_dup(jule::Ref<_11a089b40_Enum>);


	inline void _method_check_enum_items_str(jule::Ref<_11a089b40_Enum>);


	inline void _method_check_enum_items_int(jule::Ref<_11a089b40_Enum>);


	inline void _method_check_enum_decl(jule::Ref<_11a089b40_Enum>);


	inline jule::Bool _method_check_enum_decls(void);


	inline jule::Bool _method_check_decl_generics(jule::Slice<jule::Ref<_118d9a790_GenericDecl>>);


	inline jule::Bool _method_check_fn_decl_params_dup(jule::Ref<_119099250_Fn>);


	inline jule::Bool _method_check_fn_decl_result_dup(jule::Ref<_119099250_Fn>);


	inline jule::Bool _method_check_fn_decl_types(jule::Ref<_119099250_Fn>);


	inline jule::Bool _method_check_fn_decl_prototype(jule::Ref<_119099250_Fn>);


	inline void _method_check_trait_decl_method(jule::Ref<_119099250_Fn>);


	inline void _method_check_trait_decl_methods(jule::Ref<_118e2b060_Trait>);


	inline void _method_check_trait_decl(jule::Ref<_118e2b060_Trait>);


	inline jule::Bool _method_check_trait_decls(void);


	inline jule::Bool _method_check_trait_impl_methods(jule::Ref<_118e2b060_Trait>,jule::Ref<_11a091460_Impl>);


	inline jule::Bool _method_impl_to_struct(jule::Ref<_118bb7d70_Struct>,jule::Ref<_11a091460_Impl>);


	inline void _method_impl_trait(jule::Ref<_11a091460_Impl>);


	inline void _method_impl_struct(jule::Ref<_11a091460_Impl>);


	inline void _method_impl_impl(jule::Ref<_11a091460_Impl>);


	inline void _method_check_var_decl(jule::Ref<_11a245f20_Var>,jule::Trait<_11aa76f70_Lookup>);


	inline void _method_check_global_var_decl(jule::Ref<_11a245f20_Var>);


	inline jule::Bool _method_check_global_decls(void);


	inline jule::Bool _method_check_struct_trait_impl(jule::Ref<_118bb7d70_Struct>,jule::Ref<_118e2b060_Trait>);


	inline jule::Bool _method_check_struct_impls(jule::Ref<_118bb7d70_Struct>);


	inline jule::Bool _method_check_struct_fields(jule::Ref<_118bb7d70_Struct>);


	inline void _method_check_struct_decl(jule::Ref<_118bb7d70_Struct>);


	inline jule::Bool _method_check_struct_decls(void);


	inline void _method_check_fn_decl(jule::Ref<_119099250_Fn>);


	inline jule::Bool _method_check_fn_decls(void);


	inline jule::Bool _method_check_directive_pass(_13feceeb0_Pass);


	inline jule::Bool _method_check_passes(void);


	inline void _method_push_cycle_error(jule::Ref<_118bb7d70_Struct>,jule::Ref<_118bb7d70_Struct>,jule::Str&);


	inline jule::Bool _method_check_cross_cycle(jule::Ref<_118bb7d70_Struct>,jule::Ref<_118bb7d70_Struct>,jule::Str&);


	inline jule::Bool _method_check_struct_derive_illegal_cycles(jule::Str,jule::Ref<_118bb7d70_Struct>,jule::Ref<_11a3c2e70_TypeKind>);


	inline jule::Bool _method_check_struct_ins_derive_clone(jule::Ref<_118bb7d70_StructIns>);


	inline jule::Bool _method_check_struct_derive_clone(jule::Ref<_118bb7d70_Struct>);


	inline jule::Bool _method_check_file_derives(void);


	inline void _method_check_package_derives(void);


	inline void _method_check_package_decls(void);


	inline void _method_check_data_for_type_inference(jule::Ref<_11a53f4f0_Data>,_11911a8a0_Token);


	inline void _method_check_var(jule::Ref<_11a245f20_Var>);


	inline void _method_check_type_var(jule::Ref<_11a245f20_Var>,jule::Trait<_11aa76f70_Lookup>);


	inline void _method_check_global_types(void);


	inline void _method_check_type_method(jule::Ref<_118bb7d70_StructIns>,jule::Ref<_119099250_Fn>);


	inline void _method_check_type_struct(jule::Ref<_118bb7d70_Struct>);


	inline void _method_check_struct_types(void);


	inline void _method_check_rets(jule::Ref<_119099250_FnIns>);


	inline void _method_check_fn_ins_sc(jule::Ref<_119099250_FnIns>,jule::Ref<_11a093930_ScopeChecker>);


	inline void _method_check_fn_ins(jule::Ref<_119099250_FnIns>);


	inline void _method_check_type_fn(jule::Ref<_119099250_Fn>);


	inline void _method_precheck_type_fn(jule::Ref<_119099250_Fn>);


	inline jule::Bool _method_precheck_fn_types(void);


	inline jule::Bool _method_check_fn_types(void);


	inline void _method_check_package_types(void);


	inline void _method_set_file_sema_fields(void);


	inline void _method_set_sema_fields(void);


	inline void _method_check(jule::Slice<jule::Ref<_11a3c2dc0_SymbolTable>>);


	inline bool operator==(const _11a096220_Sema &_Src) {
		return 
			this->_field_errors == _Src._field_errors &&
			this->_field_files == _Src._field_files &&
			this->_field_file == _Src._field_file;
	}

	inline bool operator!=(const _11a096220_Sema &_Src) { return !this->operator==(_Src); }
};


struct _11a21f8a0_DynamicTypeAnnotation {
	jule::Ref<_11a21f8a0_DynamicTypeAnnotation> self{};

	jule::Ref<_11a53f4f0_Eval> _field_e{jule::Ref<_11a53f4f0_Eval>()};
	jule::Ref<_119099250_FnIns> _field_f{jule::Ref<_119099250_FnIns>()};
	jule::Ref<_119099250_ParamIns> _field_p{jule::Ref<_119099250_ParamIns>()};
	jule::Ref<_11a53f4f0_Data> _field_a{jule::Ref<_11a53f4f0_Data>()};
	_11911a8a0_Token _field_error_token{_11911a8a0_Token()};
	_11a3c2e70_TypeKind** _field_k{nullptr};


	_11a21f8a0_DynamicTypeAnnotation(jule::Ref<_11a53f4f0_Eval> __param_e, jule::Ref<_119099250_FnIns> __param_f, jule::Ref<_119099250_ParamIns> __param_p, jule::Ref<_11a53f4f0_Data> __param_a, _11911a8a0_Token __param_error_token, _11a3c2e70_TypeKind** __param_k) {
		this->self = jule::Ref<_11a21f8a0_DynamicTypeAnnotation>::make(this, nullptr);

		this->_field_e = __param_e;
		this->_field_f = __param_f;
		this->_field_p = __param_p;
		this->_field_a = __param_a;
		this->_field_error_token = __param_error_token;
		this->_field_k = __param_k;
	}

	~_11a21f8a0_DynamicTypeAnnotation(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11a21f8a0_DynamicTypeAnnotation(void) { this->self = jule::Ref<_11a21f8a0_DynamicTypeAnnotation>::make(this, nullptr); }

	inline void _method_push_generic(jule::Ref<_11a3c2e70_TypeKind>,jule::Int);


	inline jule::Bool _method_annotate_prim(jule::Ref<_11a3c2e70_TypeKind>);


	inline jule::Bool _method_annotate_slc(jule::Ref<_11a3c2e70_TypeKind>);


	inline jule::Bool _method_check_map_key(_11a3c2e70_TypeKind**,jule::Ref<_11a3c2e70_TypeKind>);


	inline jule::Bool _method_annotate_map(jule::Ref<_11a3c2e70_TypeKind>);


	inline jule::Bool _method_annotate_fn(jule::Ref<_11a3c2e70_TypeKind>);


	inline jule::Bool _method_annotate_ptr(jule::Ref<_11a3c2e70_TypeKind>);


	inline jule::Bool _method_annotate_any(jule::Ref<_11a3c2e70_TypeKind>);


	inline jule::Bool _method_annotate_kind(jule::Ref<_11a3c2e70_TypeKind>);


	inline jule::Bool _method_annotate(void);


	inline bool operator==(const _11a21f8a0_DynamicTypeAnnotation &_Src) {
		return 
			this->_field_e == _Src._field_e &&
			this->_field_f == _Src._field_f &&
			this->_field_p == _Src._field_p &&
			this->_field_a == _Src._field_a &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_k == _Src._field_k;
	}

	inline bool operator!=(const _11a21f8a0_DynamicTypeAnnotation &_Src) { return !this->operator==(_Src); }
};


struct _11a21f8a0_StructLitChecker {
	jule::Ref<_11a21f8a0_StructLitChecker> self{};

	jule::Ref<_11a53f4f0_Eval> _field_e{jule::Ref<_11a53f4f0_Eval>()};
	_11911a8a0_Token _field_error_token{_11911a8a0_Token()};
	jule::Ref<_118bb7d70_StructIns> _field_s{jule::Ref<_118bb7d70_StructIns>()};
	jule::Slice<jule::Ref<_119748ec0_StructArgExprModel>> _field_args{jule::Slice<jule::Ref<_119748ec0_StructArgExprModel>>()};


	_11a21f8a0_StructLitChecker(jule::Ref<_11a53f4f0_Eval> __param_e, _11911a8a0_Token __param_error_token, jule::Ref<_118bb7d70_StructIns> __param_s, jule::Slice<jule::Ref<_119748ec0_StructArgExprModel>> __param_args) {
		this->self = jule::Ref<_11a21f8a0_StructLitChecker>::make(this, nullptr);

		this->_field_e = __param_e;
		this->_field_error_token = __param_error_token;
		this->_field_s = __param_s;
		this->_field_args = __param_args;
	}

	~_11a21f8a0_StructLitChecker(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11a21f8a0_StructLitChecker(void) { this->self = jule::Ref<_11a21f8a0_StructLitChecker>::make(this, nullptr); }

	inline void _method_push_err(_11911a8a0_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_match(jule::Ref<_118bb7d70_FieldIns>,jule::Ref<_11a53f4f0_Data>,_11911a8a0_Token);


	inline void _method_check_pair(jule::Ref<_118d9a790_FieldExprPair>,jule::Slice<jule::Any>);


	inline jule::Bool _method_ready_exprs(jule::Slice<jule::Any>);


	inline void _method_check(jule::Slice<jule::Any>);


	inline bool operator==(const _11a21f8a0_StructLitChecker &_Src) {
		return 
			this->_field_e == _Src._field_e &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_s == _Src._field_s &&
			this->_field_args == _Src._field_args;
	}

	inline bool operator!=(const _11a21f8a0_StructLitChecker &_Src) { return !this->operator==(_Src); }
};


struct _11a21f8a0_RangeChecker {
	jule::Ref<_11a21f8a0_RangeChecker> self{};

	jule::Ref<_11a093930_ScopeChecker> _field_sc{jule::Ref<_11a093930_ScopeChecker>()};
	jule::Ref<_118d9a790_RangeKind> _field_rang{jule::Ref<_118d9a790_RangeKind>()};
	jule::Ref<_11a093930_RangeIter> _field_kind{jule::Ref<_11a093930_RangeIter>()};
	jule::Ref<_11a53f4f0_Data> _field_d{jule::Ref<_11a53f4f0_Data>()};


	_11a21f8a0_RangeChecker(jule::Ref<_11a093930_ScopeChecker> __param_sc, jule::Ref<_118d9a790_RangeKind> __param_rang, jule::Ref<_11a093930_RangeIter> __param_kind, jule::Ref<_11a53f4f0_Data> __param_d) {
		this->self = jule::Ref<_11a21f8a0_RangeChecker>::make(this, nullptr);

		this->_field_sc = __param_sc;
		this->_field_rang = __param_rang;
		this->_field_kind = __param_kind;
		this->_field_d = __param_d;
	}

	~_11a21f8a0_RangeChecker(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11a21f8a0_RangeChecker(void) { this->self = jule::Ref<_11a21f8a0_RangeChecker>::make(this, nullptr); }

	inline jule::Ref<_11a245f20_Var> _method_build_var(jule::Ref<_118d9a790_VarDecl>);


	inline void _method_set_size_key(void);


	inline void _method_check_slice(void);


	inline void _method_check_array(void);


	inline void _method_check_map_key_a(void);


	inline void _method_check_map_key_b(void);


	inline void _method_check_map(void);


	inline void _method_check_str(void);


	inline jule::Bool _method_check(void);


	inline bool operator==(const _11a21f8a0_RangeChecker &_Src) {
		return 
			this->_field_sc == _Src._field_sc &&
			this->_field_rang == _Src._field_rang &&
			this->_field_kind == _Src._field_kind &&
			this->_field_d == _Src._field_d;
	}

	inline bool operator!=(const _11a21f8a0_RangeChecker &_Src) { return !this->operator==(_Src); }
};


struct _11a53f4f0_Data {
	jule::Ref<_11a53f4f0_Data> self{};

	jule::Ref<_11a3c2e70_TypeKind> _field_kind{jule::Ref<_11a3c2e70_TypeKind>()};
	jule::Ref<_11a3c2e70_TypeKind> _field_cast_kind{jule::Ref<_11a3c2e70_TypeKind>()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Bool _field_reference{jule::Bool()};
	jule::Bool _field_lvalue{jule::Bool()};
	jule::Bool _field_variadiced{jule::Bool()};
	jule::Bool _field_is_rune{jule::Bool()};
	jule::Any _field_model{jule::Any()};
	jule::Bool _field_decl{jule::Bool()};
	jule::Ref<_11ab854f0_Const> _field_constant{jule::Ref<_11ab854f0_Const>()};


	_11a53f4f0_Data(jule::Ref<_11a3c2e70_TypeKind> __param_kind, jule::Ref<_11a3c2e70_TypeKind> __param_cast_kind, jule::Bool __param_mutable, jule::Bool __param_reference, jule::Bool __param_lvalue, jule::Bool __param_variadiced, jule::Bool __param_is_rune, jule::Any __param_model, jule::Bool __param_decl, jule::Ref<_11ab854f0_Const> __param_constant) {
		this->self = jule::Ref<_11a53f4f0_Data>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_cast_kind = __param_cast_kind;
		this->_field_mutable = __param_mutable;
		this->_field_reference = __param_reference;
		this->_field_lvalue = __param_lvalue;
		this->_field_variadiced = __param_variadiced;
		this->_field_is_rune = __param_is_rune;
		this->_field_model = __param_model;
		this->_field_decl = __param_decl;
		this->_field_constant = __param_constant;
	}

	~_11a53f4f0_Data(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11a53f4f0_Data(void) { this->self = jule::Ref<_11a53f4f0_Data>::make(this, nullptr); }

	inline jule::Bool _method_is_nil(void);


	inline jule::Bool _method_is_void(void);


	inline jule::Bool _method_is_const(void);


	inline bool operator==(const _11a53f4f0_Data &_Src) {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_cast_kind == _Src._field_cast_kind &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_reference == _Src._field_reference &&
			this->_field_lvalue == _Src._field_lvalue &&
			this->_field_variadiced == _Src._field_variadiced &&
			this->_field_is_rune == _Src._field_is_rune &&
			this->_field_model == _Src._field_model &&
			this->_field_decl == _Src._field_decl &&
			this->_field_constant == _Src._field_constant;
	}

	inline bool operator!=(const _11a53f4f0_Data &_Src) { return !this->operator==(_Src); }
};


struct _11a53f4f0_Value {
	jule::Ref<_11a53f4f0_Value> self{};

	jule::Ref<_118d9a790_Expr> _field_expr{jule::Ref<_118d9a790_Expr>()};
	jule::Ref<_11a53f4f0_Data> _field_data{jule::Ref<_11a53f4f0_Data>()};


	_11a53f4f0_Value(jule::Ref<_118d9a790_Expr> __param_expr, jule::Ref<_11a53f4f0_Data> __param_data) {
		this->self = jule::Ref<_11a53f4f0_Value>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_data = __param_data;
	}

	~_11a53f4f0_Value(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11a53f4f0_Value(void) { this->self = jule::Ref<_11a53f4f0_Value>::make(this, nullptr); }

	inline bool operator==(const _11a53f4f0_Value &_Src) {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_data == _Src._field_data;
	}

	inline bool operator!=(const _11a53f4f0_Value &_Src) { return !this->operator==(_Src); }
};


struct _11a53f4f0_Eval {
	jule::Ref<_11a53f4f0_Eval> self{};

	jule::Ref<_11a096220_Sema> _field_s{jule::Ref<_11a096220_Sema>()};
	jule::Trait<_11aa76f70_Lookup> _field_lookup{jule::Trait<_11aa76f70_Lookup>()};
	jule::Ref<_11a3c2e70_TypeKind> _field_prefix{jule::Ref<_11a3c2e70_TypeKind>()};
	jule::Bool _field_unsafety{jule::Bool()};
	jule::Ref<_11a245f20_Var> _field_owner{jule::Ref<_11a245f20_Var>()};


	_11a53f4f0_Eval(jule::Ref<_11a096220_Sema> __param_s, jule::Trait<_11aa76f70_Lookup> __param_lookup, jule::Ref<_11a3c2e70_TypeKind> __param_prefix, jule::Bool __param_unsafety, jule::Ref<_11a245f20_Var> __param_owner) {
		this->self = jule::Ref<_11a53f4f0_Eval>::make(this, nullptr);

		this->_field_s = __param_s;
		this->_field_lookup = __param_lookup;
		this->_field_prefix = __param_prefix;
		this->_field_unsafety = __param_unsafety;
		this->_field_owner = __param_owner;
	}

	~_11a53f4f0_Eval(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11a53f4f0_Eval(void) { this->self = jule::Ref<_11a53f4f0_Eval>::make(this, nullptr); }

	inline void _method_push_err(_11911a8a0_Token,jule::Str,jule::Slice<jule::Any>);


	inline jule::Bool _method_is_unsafe(void);


	inline jule::Bool _method_is_global(void);


	inline jule::Ref<_11a53f4f0_Data> _method_lit_nil(void);


	inline jule::Ref<_11a53f4f0_Data> _method_lit_str(jule::Ref<_118d9a790_LitExpr>);


	inline jule::Ref<_11a53f4f0_Data> _method_lit_bool(jule::Ref<_118d9a790_LitExpr>);


	inline jule::Ref<_11a53f4f0_Data> _method_lit_rune(jule::Ref<_118d9a790_LitExpr>);


	inline jule::Ref<_11a53f4f0_Data> _method_lit_float(jule::Ref<_118d9a790_LitExpr>);


	inline jule::Ref<_11a53f4f0_Data> _method_lit_int(jule::Ref<_118d9a790_LitExpr>);


	inline jule::Ref<_11a53f4f0_Data> _method_lit_num(jule::Ref<_118d9a790_LitExpr>);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_lit(jule::Ref<_118d9a790_LitExpr>);


	inline jule::Any _method_find_builtins(jule::Str);


	inline jule::Any _method_get_def(jule::Str,jule::Bool);


	inline void _method_push_reference(jule::Ref<_13feceeb0_ReferenceStack>);


	inline void _method_push_reference_to_fn(jule::Ref<_119099250_Fn>);


	inline void _method_push_reference_to_var(jule::Ref<_11a245f20_Var>);


	inline void _method_push_reference_to_struct(jule::Ref<_118bb7d70_Struct>);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_enum(jule::Ref<_11a089b40_Enum>,_11911a8a0_Token);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_struct(jule::Ref<_118bb7d70_StructIns>,_11911a8a0_Token);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_fn_ins(jule::Ref<_119099250_FnIns>);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_fn(jule::Ref<_119099250_Fn>,_11911a8a0_Token);


	inline void _method_push_illegal_cycle_error(jule::Ref<_11a245f20_Var>,jule::Ref<_11a245f20_Var>,jule::Str&);


	inline jule::Bool _method_check_cross_cycle(jule::Ref<_11a245f20_Var>,jule::Str&);


	inline jule::Bool _method_check_illegal_cycles(jule::Ref<_11a245f20_Var>,_11911a8a0_Token);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_var(jule::Ref<_11a245f20_Var>,_11911a8a0_Token);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_type_alias(jule::Ref<_11a3c2e70_TypeAlias>,_11911a8a0_Token);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_def(jule::Any,_11911a8a0_Token);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_ident(jule::Ref<_118d9a790_IdentExpr>);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_unary_minus(jule::Ref<_11a53f4f0_Data>);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_unary_plus(jule::Ref<_11a53f4f0_Data>);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_unary_caret(jule::Ref<_11a53f4f0_Data>);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_unary_excl(jule::Ref<_11a53f4f0_Data>);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_unary_star(jule::Ref<_11a53f4f0_Data>,_11911a8a0_Token);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_unary_amper(jule::Ref<_11a53f4f0_Data>);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_unary_type_decl(jule::Ref<_11a53f4f0_Data>,jule::Ref<_118d9a790_UnaryExpr>);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_unary(jule::Ref<_118d9a790_UnaryExpr>);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_variadic(jule::Ref<_118d9a790_VariadicExpr>);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_unsafe(jule::Ref<_118d9a790_UnsafeExpr>);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_arr(jule::Ref<_118d9a790_SliceExpr>);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_exp_slc(jule::Ref<_118d9a790_SliceExpr>,jule::Ref<_11a3c2e70_TypeKind>);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_slice_expr(jule::Ref<_118d9a790_SliceExpr>);


	inline void _method_check_integer_indexing_by_data(jule::Ref<_11a53f4f0_Data>,_11911a8a0_Token);


	inline void _method_indexing_ptr(jule::Ref<_11a53f4f0_Data>,jule::Ref<_11a53f4f0_Data>,jule::Ref<_118d9a790_IndexingExpr>);


	inline void _method_indexing_arr(jule::Ref<_11a53f4f0_Data>,jule::Ref<_11a53f4f0_Data>,jule::Ref<_118d9a790_IndexingExpr>);


	inline void _method_indexing_slc(jule::Ref<_11a53f4f0_Data>,jule::Ref<_11a53f4f0_Data>,jule::Ref<_118d9a790_IndexingExpr>);


	inline void _method_indexing_map(jule::Ref<_11a53f4f0_Data>,jule::Ref<_11a53f4f0_Data>,jule::Ref<_118d9a790_IndexingExpr>);


	inline void _method_indexing_str(jule::Ref<_11a53f4f0_Data>,jule::Ref<_11a53f4f0_Data>,jule::Ref<_118d9a790_IndexingExpr>);


	inline void _method_to_indexing(jule::Ref<_11a53f4f0_Data>,jule::Ref<_11a53f4f0_Data>,jule::Ref<_118d9a790_IndexingExpr>);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_ident_decl_from_indexing(jule::Ref<_118d9a790_IndexingExpr>);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_indexing(jule::Ref<_118d9a790_IndexingExpr>);


	inline std::tuple<jule::Ref<_11a53f4f0_Data>,jule::Ref<_11a53f4f0_Data>> _method_eval_slicing_exprs(jule::Ref<_118d9a790_SlicingExpr>);


	inline void _method_slicing_arr(jule::Ref<_11a53f4f0_Data>);


	inline void _method_slicing_slc(jule::Ref<_11a53f4f0_Data>);


	inline void _method_slicing_str(jule::Ref<_11a53f4f0_Data>,jule::Ref<_11a53f4f0_Data>,jule::Ref<_11a53f4f0_Data>);


	inline void _method_check_slicing(jule::Ref<_11a53f4f0_Data>,jule::Ref<_11a53f4f0_Data>,jule::Ref<_11a53f4f0_Data>,jule::Ref<_118d9a790_SlicingExpr>);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_slicing(jule::Ref<_118d9a790_SlicingExpr>);


	inline void _method_cast_ptr(jule::Ref<_11a3c2e70_TypeKind>,jule::Ref<_11a53f4f0_Data>,_11911a8a0_Token);


	inline void _method_cast_struct(jule::Ref<_11a3c2e70_TypeKind>,jule::Ref<_11a53f4f0_Data>,_11911a8a0_Token);


	inline void _method_cast_ref(jule::Ref<_11a3c2e70_TypeKind>,jule::Ref<_11a53f4f0_Data>,_11911a8a0_Token);


	inline void _method_cast_slc(jule::Ref<_11a3c2e70_TypeKind>,jule::Ref<_11a53f4f0_Data>,_11911a8a0_Token);


	inline void _method_cast_str(jule::Ref<_11a53f4f0_Data>,_11911a8a0_Token);


	inline void _method_cast_int(jule::Ref<_11a3c2e70_TypeKind>,jule::Ref<_11a53f4f0_Data>,_11911a8a0_Token);


	inline void _method_cast_num(jule::Ref<_11a3c2e70_TypeKind>,jule::Ref<_11a53f4f0_Data>,_11911a8a0_Token);


	inline void _method_cast_prim(jule::Ref<_11a3c2e70_TypeKind>,jule::Ref<_11a53f4f0_Data>,_11911a8a0_Token);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_cast_by_type_n_data(jule::Ref<_11a3c2e70_TypeKind>,jule::Ref<_11a53f4f0_Data>,_11911a8a0_Token);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_cast(jule::Ref<_118d9a790_CastExpr>);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_ns_selection(jule::Ref<_118d9a790_NsSelectionExpr>);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_struct_lit_explicit(jule::Ref<_118bb7d70_StructIns>,jule::Slice<jule::Any>,_11911a8a0_Token);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_struct_lit(jule::Ref<_118d9a790_StructLit>);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_type(jule::Ref<_118d9a790_TypeDecl>);


	inline jule::Ref<_11a53f4f0_Data> _method_call_type_fn(jule::Ref<_118d9a790_FnCallExpr>,jule::Ref<_11a53f4f0_Data>);


	inline std::tuple<jule::Bool,jule::Bool> _method_check_fn_call_generics(jule::Ref<_119099250_FnIns>,jule::Ref<_118d9a790_FnCallExpr>);


	inline jule::Ref<_11a53f4f0_Data> _method_call_builtin_fn(jule::Ref<_118d9a790_FnCallExpr>,jule::Ref<_11a53f4f0_Data>);


	inline void _method_check_fn_of_concurrent_call(jule::Ref<_119099250_FnIns>&,_11911a8a0_Token);


	inline jule::Ref<_11a53f4f0_Data> _method_call_fn(jule::Ref<_118d9a790_FnCallExpr>,jule::Ref<_11a53f4f0_Data>);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_fn_call(jule::Ref<_118d9a790_FnCallExpr>);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_enum_static(jule::Ref<_11a089b40_Enum>,_11911a8a0_Token);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_struct_static(jule::Ref<_118bb7d70_StructIns>,_11911a8a0_Token);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_trait_sub_ident(jule::Ref<_11a53f4f0_Data>,jule::Ref<_118e2b060_Trait>,_11911a8a0_Token);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_struct_sub_ident(jule::Ref<_11a53f4f0_Data>,jule::Ref<_118bb7d70_StructIns>,jule::Ref<_118d9a790_SubIdentExpr>,jule::Bool);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_slice_sub_ident(jule::Ref<_11a53f4f0_Data>,_11911a8a0_Token);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_array_sub_ident(jule::Ref<_11a53f4f0_Data>,_11911a8a0_Token);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_map_sub_ident(jule::Ref<_11a53f4f0_Data>,_11911a8a0_Token);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_str_sub_ident(jule::Ref<_11a53f4f0_Data>,_11911a8a0_Token);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_int_type_static(_11911a8a0_Token);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_uint_type_static(_11911a8a0_Token);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_i8_type_static(_11911a8a0_Token);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_i16_type_static(_11911a8a0_Token);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_i32_type_static(_11911a8a0_Token);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_i64_type_static(_11911a8a0_Token);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_u8_type_static(_11911a8a0_Token);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_u16_type_static(_11911a8a0_Token);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_u32_type_static(_11911a8a0_Token);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_u64_type_static(_11911a8a0_Token);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_f32_type_tatic(_11911a8a0_Token);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_f64_type_static(_11911a8a0_Token);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_prim_static(jule::Str,_11911a8a0_Token);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_type_static(jule::Ref<_11a53f4f0_Data>,jule::Ref<_118d9a790_SubIdentExpr>);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_obj_sub_ident(jule::Ref<_11a53f4f0_Data>,jule::Ref<_118d9a790_SubIdentExpr>);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_sub_ident(jule::Ref<_118d9a790_SubIdentExpr>);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_tuple(jule::Ref<_118d9a790_TupleExpr>);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_map(jule::Ref<_11a3c2e70_Map>,jule::Ref<_118d9a790_BraceLit>);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_brace_lit(jule::Ref<_118d9a790_BraceLit>);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_anon_fn(jule::Ref<_118d9a790_FnDecl>);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_binop(jule::Ref<_118d9a790_BinopExpr>);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_expr_kind(jule::Any);


	inline jule::Ref<_11a53f4f0_Data> _method_eval(jule::Ref<_118d9a790_Expr>);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_expr(jule::Ref<_118d9a790_Expr>);


	inline bool operator==(const _11a53f4f0_Eval &_Src) {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_lookup == _Src._field_lookup &&
			this->_field_prefix == _Src._field_prefix &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_owner == _Src._field_owner;
	}

	inline bool operator!=(const _11a53f4f0_Eval &_Src) { return !this->operator==(_Src); }
};


struct _11a3c2e70_TypeKind: public _11a3c2e70_Kind {
	jule::Ref<_11a3c2e70_TypeKind> self{};

	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Str _field_cpp_ident{jule::Str()};
	jule::Trait<_11a3c2e70_Kind> _field_kind{jule::Trait<_11a3c2e70_Kind>()};


	_11a3c2e70_TypeKind(jule::Bool __param_cpp_linked, jule::Str __param_cpp_ident, jule::Trait<_11a3c2e70_Kind> __param_kind) {
		this->self = jule::Ref<_11a3c2e70_TypeKind>::make(this, nullptr);

		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_cpp_ident = __param_cpp_ident;
		this->_field_kind = __param_kind;
	}

	~_11a3c2e70_TypeKind(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11a3c2e70_TypeKind(void) { this->self = jule::Ref<_11a3c2e70_TypeKind>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_11a3c2e70_TypeKind>);


	inline jule::Ref<_11a3c2e70_TypeKind> _method_clone(void);


	inline jule::Bool _method_is_nil(void);


	inline jule::Bool _method_is_void(void);


	inline jule::Ref<_11a3c2e70_Prim> _method_prim(void);


	inline jule::Ref<_11a3c2e70_Ref> _method_ref(void);


	inline jule::Ref<_11a3c2e70_Ptr> _method_ptr(void);


	inline jule::Ref<_11a089b40_Enum> _method_enm(void);


	inline jule::Ref<_11a3c2e70_Arr> _method_arr(void);


	inline jule::Ref<_11a3c2e70_Slc> _method_slc(void);


	inline jule::Ref<_119099250_FnIns> _method_fnc(void);


	inline jule::Ref<_118bb7d70_StructIns> _method_strct(void);


	inline jule::Ref<_118e2b060_Trait> _method_trt(void);


	inline jule::Ref<_11a3c2e70_Map> _method_map(void);


	inline jule::Ref<_11a3c2e70_Tuple> _method_tup(void);


	inline bool operator==(const _11a3c2e70_TypeKind &_Src) {
		return 
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_cpp_ident == _Src._field_cpp_ident &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _11a3c2e70_TypeKind &_Src) { return !this->operator==(_Src); }
};


struct _11a3c2e70_TypeSymbol {
	jule::Ref<_11a3c2e70_TypeSymbol> self{};

	jule::Ref<_118d9a790_TypeDecl> _field_decl{jule::Ref<_118d9a790_TypeDecl>()};
	jule::Ref<_11a3c2e70_TypeKind> _field_kind{jule::Ref<_11a3c2e70_TypeKind>()};


	_11a3c2e70_TypeSymbol(jule::Ref<_118d9a790_TypeDecl> __param_decl, jule::Ref<_11a3c2e70_TypeKind> __param_kind) {
		this->self = jule::Ref<_11a3c2e70_TypeSymbol>::make(this, nullptr);

		this->_field_decl = __param_decl;
		this->_field_kind = __param_kind;
	}

	~_11a3c2e70_TypeSymbol(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11a3c2e70_TypeSymbol(void) { this->self = jule::Ref<_11a3c2e70_TypeSymbol>::make(this, nullptr); }

	inline jule::Bool _method_checked(void);


	inline void _method_remove_kind(void);


	inline bool operator==(const _11a3c2e70_TypeSymbol &_Src) {
		return 
			this->_field_decl == _Src._field_decl &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _11a3c2e70_TypeSymbol &_Src) { return !this->operator==(_Src); }
};


struct _11a3c2e70_Prim: public _11a3c2e70_Kind {
	jule::Ref<_11a3c2e70_Prim> self{};

	jule::Str _field_kind{jule::Str()};


	_11a3c2e70_Prim(jule::Str __param_kind) {
		this->self = jule::Ref<_11a3c2e70_Prim>::make(this, nullptr);

		this->_field_kind = __param_kind;
	}

	~_11a3c2e70_Prim(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11a3c2e70_Prim(void) { this->self = jule::Ref<_11a3c2e70_Prim>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_11a3c2e70_TypeKind>);


	inline jule::Bool _method_is_i8(void);


	inline jule::Bool _method_is_i16(void);


	inline jule::Bool _method_is_i32(void);


	inline jule::Bool _method_is_i64(void);


	inline jule::Bool _method_is_u8(void);


	inline jule::Bool _method_is_u16(void);


	inline jule::Bool _method_is_u32(void);


	inline jule::Bool _method_is_u64(void);


	inline jule::Bool _method_is_f32(void);


	inline jule::Bool _method_is_f64(void);


	inline jule::Bool _method_is_int(void);


	inline jule::Bool _method_is_uint(void);


	inline jule::Bool _method_is_uintptr(void);


	inline jule::Bool _method_is_bool(void);


	inline jule::Bool _method_is_str(void);


	inline jule::Bool _method_is_any(void);


	inline bool operator==(const _11a3c2e70_Prim &_Src) {
		return 
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _11a3c2e70_Prim &_Src) { return !this->operator==(_Src); }
};


struct _11a3c2e70_Ref: public _11a3c2e70_Kind {
	jule::Ref<_11a3c2e70_Ref> self{};

	jule::Ref<_11a3c2e70_TypeKind> _field_elem{jule::Ref<_11a3c2e70_TypeKind>()};


	_11a3c2e70_Ref(jule::Ref<_11a3c2e70_TypeKind> __param_elem) {
		this->self = jule::Ref<_11a3c2e70_Ref>::make(this, nullptr);

		this->_field_elem = __param_elem;
	}

	~_11a3c2e70_Ref(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11a3c2e70_Ref(void) { this->self = jule::Ref<_11a3c2e70_Ref>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_11a3c2e70_TypeKind>);


	inline bool operator==(const _11a3c2e70_Ref &_Src) {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _11a3c2e70_Ref &_Src) { return !this->operator==(_Src); }
};


struct _11a3c2e70_Slc: public _11a3c2e70_Kind {
	jule::Ref<_11a3c2e70_Slc> self{};

	jule::Ref<_11a3c2e70_TypeKind> _field_elem{jule::Ref<_11a3c2e70_TypeKind>()};


	_11a3c2e70_Slc(jule::Ref<_11a3c2e70_TypeKind> __param_elem) {
		this->self = jule::Ref<_11a3c2e70_Slc>::make(this, nullptr);

		this->_field_elem = __param_elem;
	}

	~_11a3c2e70_Slc(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11a3c2e70_Slc(void) { this->self = jule::Ref<_11a3c2e70_Slc>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_11a3c2e70_TypeKind>);


	inline bool operator==(const _11a3c2e70_Slc &_Src) {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _11a3c2e70_Slc &_Src) { return !this->operator==(_Src); }
};


struct _11a3c2e70_Tuple: public _11a3c2e70_Kind {
	jule::Ref<_11a3c2e70_Tuple> self{};

	jule::Slice<jule::Ref<_11a3c2e70_TypeKind>> _field_types{jule::Slice<jule::Ref<_11a3c2e70_TypeKind>>()};


	_11a3c2e70_Tuple(jule::Slice<jule::Ref<_11a3c2e70_TypeKind>> __param_types) {
		this->self = jule::Ref<_11a3c2e70_Tuple>::make(this, nullptr);

		this->_field_types = __param_types;
	}

	~_11a3c2e70_Tuple(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11a3c2e70_Tuple(void) { this->self = jule::Ref<_11a3c2e70_Tuple>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_11a3c2e70_TypeKind>);


	inline bool operator==(const _11a3c2e70_Tuple &_Src) {
		return 
			this->_field_types == _Src._field_types;
	}

	inline bool operator!=(const _11a3c2e70_Tuple &_Src) { return !this->operator==(_Src); }
};


struct _11a3c2e70_Map: public _11a3c2e70_Kind {
	jule::Ref<_11a3c2e70_Map> self{};

	jule::Ref<_11a3c2e70_TypeKind> _field_key{jule::Ref<_11a3c2e70_TypeKind>()};
	jule::Ref<_11a3c2e70_TypeKind> _field_val{jule::Ref<_11a3c2e70_TypeKind>()};


	_11a3c2e70_Map(jule::Ref<_11a3c2e70_TypeKind> __param_key, jule::Ref<_11a3c2e70_TypeKind> __param_val) {
		this->self = jule::Ref<_11a3c2e70_Map>::make(this, nullptr);

		this->_field_key = __param_key;
		this->_field_val = __param_val;
	}

	~_11a3c2e70_Map(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11a3c2e70_Map(void) { this->self = jule::Ref<_11a3c2e70_Map>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_11a3c2e70_TypeKind>);


	inline bool operator==(const _11a3c2e70_Map &_Src) {
		return 
			this->_field_key == _Src._field_key &&
			this->_field_val == _Src._field_val;
	}

	inline bool operator!=(const _11a3c2e70_Map &_Src) { return !this->operator==(_Src); }
};


struct _11a3c2e70_Arr: public _11a3c2e70_Kind {
	jule::Ref<_11a3c2e70_Arr> self{};

	jule::Bool _field_auto{jule::Bool()};
	jule::Int _field_n{jule::Int()};
	jule::Ref<_11a3c2e70_TypeKind> _field_elem{jule::Ref<_11a3c2e70_TypeKind>()};


	_11a3c2e70_Arr(jule::Bool __param_auto, jule::Int __param_n, jule::Ref<_11a3c2e70_TypeKind> __param_elem) {
		this->self = jule::Ref<_11a3c2e70_Arr>::make(this, nullptr);

		this->_field_auto = __param_auto;
		this->_field_n = __param_n;
		this->_field_elem = __param_elem;
	}

	~_11a3c2e70_Arr(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11a3c2e70_Arr(void) { this->self = jule::Ref<_11a3c2e70_Arr>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_11a3c2e70_TypeKind>);


	inline bool operator==(const _11a3c2e70_Arr &_Src) {
		return 
			this->_field_auto == _Src._field_auto &&
			this->_field_n == _Src._field_n &&
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _11a3c2e70_Arr &_Src) { return !this->operator==(_Src); }
};


struct _11a3c2e70_Ptr: public _11a3c2e70_Kind {
	jule::Ref<_11a3c2e70_Ptr> self{};

	jule::Ref<_11a3c2e70_TypeKind> _field_elem{jule::Ref<_11a3c2e70_TypeKind>()};


	_11a3c2e70_Ptr(jule::Ref<_11a3c2e70_TypeKind> __param_elem) {
		this->self = jule::Ref<_11a3c2e70_Ptr>::make(this, nullptr);

		this->_field_elem = __param_elem;
	}

	~_11a3c2e70_Ptr(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11a3c2e70_Ptr(void) { this->self = jule::Ref<_11a3c2e70_Ptr>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_11a3c2e70_TypeKind>);


	inline jule::Bool _method_is_unsafe(void);


	inline bool operator==(const _11a3c2e70_Ptr &_Src) {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _11a3c2e70_Ptr &_Src) { return !this->operator==(_Src); }
};


struct _11a3c2e70_Referencer {
	jule::Ref<_11a3c2e70_Referencer> self{};

	jule::Str _field_ident{jule::Str()};
	jule::Any _field_owner{jule::Any()};
	jule::Slice<jule::Any>* _field_refs{nullptr};


	_11a3c2e70_Referencer(jule::Str __param_ident, jule::Any __param_owner, jule::Slice<jule::Any>* __param_refs) {
		this->self = jule::Ref<_11a3c2e70_Referencer>::make(this, nullptr);

		this->_field_ident = __param_ident;
		this->_field_owner = __param_owner;
		this->_field_refs = __param_refs;
	}

	~_11a3c2e70_Referencer(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11a3c2e70_Referencer(void) { this->self = jule::Ref<_11a3c2e70_Referencer>::make(this, nullptr); }

	inline bool operator==(const _11a3c2e70_Referencer &_Src) {
		return 
			this->_field_ident == _Src._field_ident &&
			this->_field_owner == _Src._field_owner &&
			this->_field_refs == _Src._field_refs;
	}

	inline bool operator!=(const _11a3c2e70_Referencer &_Src) { return !this->operator==(_Src); }
};


struct _118d6ac90_PlainImporter: public _11a0945e0_Importer {
	jule::Ref<_118d6ac90_PlainImporter> self{};

	jule::Slice<jule::Ref<_11a0945e0_ImportInfo>> _field_all_packages{jule::Slice<jule::Ref<_11a0945e0_ImportInfo>>()};


	_118d6ac90_PlainImporter(jule::Slice<jule::Ref<_11a0945e0_ImportInfo>> __param_all_packages) {
		this->self = jule::Ref<_118d6ac90_PlainImporter>::make(this, nullptr);

		this->_field_all_packages = __param_all_packages;
	}

	~_118d6ac90_PlainImporter(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118d6ac90_PlainImporter(void) { this->self = jule::Ref<_118d6ac90_PlainImporter>::make(this, nullptr); }

	inline jule::Ref<_11a0945e0_ImportInfo> _method_get_import(jule::Str);


	inline std::tuple<jule::Slice<jule::Ref<_118d8a140_Ast>>,jule::Slice<_13fe81720_Log>> _method_import_package(jule::Str);


	inline void _method_imported(jule::Ref<_11a0945e0_ImportInfo>);


	inline bool operator==(const _118d6ac90_PlainImporter &_Src) {
		return 
			this->_field_all_packages == _Src._field_all_packages;
	}

	inline bool operator!=(const _118d6ac90_PlainImporter &_Src) { return !this->operator==(_Src); }
};


struct _10fee6360_IR {
	jule::Ref<_10fee6360_IR> self{};

	jule::Slice<jule::Str> _field_passes{jule::Slice<jule::Str>()};
	jule::Ref<_11a0945e0_Package> _field_main{jule::Ref<_11a0945e0_Package>()};
	jule::Slice<jule::Ref<_11a0945e0_ImportInfo>> _field_used{jule::Slice<jule::Ref<_11a0945e0_ImportInfo>>()};


	_10fee6360_IR(jule::Slice<jule::Str> __param_passes, jule::Ref<_11a0945e0_Package> __param_main, jule::Slice<jule::Ref<_11a0945e0_ImportInfo>> __param_used) {
		this->self = jule::Ref<_10fee6360_IR>::make(this, nullptr);

		this->_field_passes = __param_passes;
		this->_field_main = __param_main;
		this->_field_used = __param_used;
	}

	~_10fee6360_IR(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10fee6360_IR(void) { this->self = jule::Ref<_10fee6360_IR>::make(this, nullptr); }

	inline void _method_append_structs(jule::Ref<_11a0945e0_Package>,jule::Slice<jule::Ref<_118bb7d70_Struct>>&);


	inline jule::Slice<jule::Ref<_118bb7d70_Struct>> _method_get_all_structures(void);


	inline void _method_append_vars(jule::Ref<_11a0945e0_Package>,jule::Slice<jule::Ref<_11a245f20_Var>>&);


	inline jule::Slice<jule::Ref<_11a245f20_Var>> _method_get_all_variables(void);


	inline bool operator==(const _10fee6360_IR &_Src) {
		return 
			this->_field_passes == _Src._field_passes &&
			this->_field_main == _Src._field_main &&
			this->_field_used == _Src._field_used;
	}

	inline bool operator!=(const _10fee6360_IR &_Src) { return !this->operator==(_Src); }
};


struct _10fea5860_ScopeDeadCode {
	jule::Ref<_10fea5860_ScopeDeadCode> self{};

	jule::Ref<_10fea5860_ScopeDeadCode> _field_parent{jule::Ref<_10fea5860_ScopeDeadCode>()};
	jule::Ref<_11a093930_Scope> _field_s{jule::Ref<_11a093930_Scope>()};
	_1192e4e90_Vector_8* _field_stmts{nullptr};
	jule::Int _field_i{jule::Int()};


	_10fea5860_ScopeDeadCode(jule::Ref<_10fea5860_ScopeDeadCode> __param_parent, jule::Ref<_11a093930_Scope> __param_s, _1192e4e90_Vector_8* __param_stmts, jule::Int __param_i) {
		this->self = jule::Ref<_10fea5860_ScopeDeadCode>::make(this, nullptr);

		this->_field_parent = __param_parent;
		this->_field_s = __param_s;
		this->_field_stmts = __param_stmts;
		this->_field_i = __param_i;
	}

	~_10fea5860_ScopeDeadCode(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10fea5860_ScopeDeadCode(void) { this->self = jule::Ref<_10fea5860_ScopeDeadCode>::make(this, nullptr); }

	inline void _method_optimize_child(jule::Ref<_11a093930_Scope>);


	inline void _method_eliminate_followed(void);


	inline void _method_optimize_stmt(jule::Any);


	inline void _method_optimize_stmts(void);


	inline bool operator==(const _10fea5860_ScopeDeadCode &_Src) {
		return 
			this->_field_parent == _Src._field_parent &&
			this->_field_s == _Src._field_s &&
			this->_field_stmts == _Src._field_stmts &&
			this->_field_i == _Src._field_i;
	}

	inline bool operator!=(const _10fea5860_ScopeDeadCode &_Src) { return !this->operator==(_Src); }
};


struct _11909cfa0_IndexRangeSetter: public _11909cfa0_RangeSetter {
	jule::Ref<_11909cfa0_IndexRangeSetter> self{};

	~_11909cfa0_IndexRangeSetter(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11909cfa0_IndexRangeSetter(void) { this->self = jule::Ref<_11909cfa0_IndexRangeSetter>::make(this, nullptr); }

	inline jule::Str _method_setup_vars(jule::Ref<_11a245f20_Var>,jule::Ref<_11a245f20_Var>);


	inline jule::Str _method_next_steps(jule::Ref<_11a245f20_Var>,jule::Ref<_11a245f20_Var>,jule::Str);


	inline bool operator==(const _11909cfa0_IndexRangeSetter &_Src) { return true; }

	inline bool operator!=(const _11909cfa0_IndexRangeSetter &_Src) { return !this->operator==(_Src); }
};


struct _11909cfa0_MapRangeSetter: public _11909cfa0_RangeSetter {
	jule::Ref<_11909cfa0_MapRangeSetter> self{};

	~_11909cfa0_MapRangeSetter(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11909cfa0_MapRangeSetter(void) { this->self = jule::Ref<_11909cfa0_MapRangeSetter>::make(this, nullptr); }

	inline jule::Str _method_setup_vars(jule::Ref<_11a245f20_Var>,jule::Ref<_11a245f20_Var>);


	inline jule::Str _method_next_steps(jule::Ref<_11a245f20_Var>,jule::Ref<_11a245f20_Var>,jule::Str);


	inline bool operator==(const _11909cfa0_MapRangeSetter &_Src) { return true; }

	inline bool operator!=(const _11909cfa0_MapRangeSetter &_Src) { return !this->operator==(_Src); }
};


struct _11a1c3f00_OrderedDecls {
	jule::Ref<_11a1c3f00_OrderedDecls> self{};

	jule::Slice<jule::Ref<_118bb7d70_Struct>> _field_structs{jule::Slice<jule::Ref<_118bb7d70_Struct>>()};
	jule::Slice<jule::Ref<_11a245f20_Var>> _field_globals{jule::Slice<jule::Ref<_11a245f20_Var>>()};


	_11a1c3f00_OrderedDecls(jule::Slice<jule::Ref<_118bb7d70_Struct>> __param_structs, jule::Slice<jule::Ref<_11a245f20_Var>> __param_globals) {
		this->self = jule::Ref<_11a1c3f00_OrderedDecls>::make(this, nullptr);

		this->_field_structs = __param_structs;
		this->_field_globals = __param_globals;
	}

	~_11a1c3f00_OrderedDecls(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11a1c3f00_OrderedDecls(void) { this->self = jule::Ref<_11a1c3f00_OrderedDecls>::make(this, nullptr); }

	inline bool operator==(const _11a1c3f00_OrderedDecls &_Src) {
		return 
			this->_field_structs == _Src._field_structs &&
			this->_field_globals == _Src._field_globals;
	}

	inline bool operator!=(const _11a1c3f00_OrderedDecls &_Src) { return !this->operator==(_Src); }
};


struct _11a3c2e70_TypeChecker {
	jule::Ref<_11a3c2e70_TypeChecker> self{};

	jule::Ref<_11a096220_Sema> _field_s{jule::Ref<_11a096220_Sema>()};
	jule::Trait<_11aa76f70_Lookup> _field_lookup{jule::Trait<_11aa76f70_Lookup>()};
	jule::Ref<_11a3c2e70_Referencer> _field_referencer{jule::Ref<_11a3c2e70_Referencer>()};
	_11911a8a0_Token _field_error_token{_11911a8a0_Token()};
	jule::Slice<jule::Ref<_118d9a790_GenericDecl>> _field_ignore_generics{jule::Slice<jule::Ref<_118d9a790_GenericDecl>>()};
	jule::Slice<jule::Ref<_11a3c2e70_TypeAlias>> _field_use_generics{jule::Slice<jule::Ref<_11a3c2e70_TypeAlias>>()};
	jule::Bool _field_not_plain{jule::Bool()};


	_11a3c2e70_TypeChecker(jule::Ref<_11a096220_Sema> __param_s, jule::Trait<_11aa76f70_Lookup> __param_lookup, jule::Ref<_11a3c2e70_Referencer> __param_referencer, _11911a8a0_Token __param_error_token, jule::Slice<jule::Ref<_118d9a790_GenericDecl>> __param_ignore_generics, jule::Slice<jule::Ref<_11a3c2e70_TypeAlias>> __param_use_generics, jule::Bool __param_not_plain) {
		this->self = jule::Ref<_11a3c2e70_TypeChecker>::make(this, nullptr);

		this->_field_s = __param_s;
		this->_field_lookup = __param_lookup;
		this->_field_referencer = __param_referencer;
		this->_field_error_token = __param_error_token;
		this->_field_ignore_generics = __param_ignore_generics;
		this->_field_use_generics = __param_use_generics;
		this->_field_not_plain = __param_not_plain;
	}

	~_11a3c2e70_TypeChecker(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11a3c2e70_TypeChecker(void) { this->self = jule::Ref<_11a3c2e70_TypeChecker>::make(this, nullptr); }

	inline void _method_push_err(_11911a8a0_Token,jule::Str,jule::Slice<jule::Any>);


	inline jule::Ref<_11a3c2e70_Prim> _method_build_prim(jule::Ref<_118d9a790_IdentTypeDecl>);


	inline void _method_push_cycle_error(jule::Any,jule::Any,jule::Str&);


	inline jule::Bool _method_check_cross_cycle(jule::Any,jule::Str&);


	inline jule::Bool _method_check_illegal_cycles(jule::Ref<_118d9a790_IdentTypeDecl>,jule::Any);


	inline jule::Trait<_11a3c2e70_Kind> _method_from_type_alias(jule::Ref<_118d9a790_IdentTypeDecl>,jule::Ref<_11a3c2e70_TypeAlias>);


	inline jule::Ref<_11a089b40_Enum> _method_from_enum(jule::Ref<_118d9a790_IdentTypeDecl>,jule::Ref<_11a089b40_Enum>);


	inline jule::Bool _method_check_struct_ins(jule::Ref<_118bb7d70_StructIns>,_11911a8a0_Token);


	inline void _method_append_used_struct_reference(jule::Ref<_118bb7d70_Struct>);


	inline jule::Ref<_118bb7d70_StructIns> _method_from_struct(jule::Ref<_118d9a790_IdentTypeDecl>,jule::Ref<_118bb7d70_Struct>);


	inline jule::Trait<_11a3c2e70_Kind> _method_get_def(jule::Ref<_118d9a790_IdentTypeDecl>);


	inline jule::Trait<_11a3c2e70_Kind> _method_build_ident(jule::Ref<_118d9a790_IdentTypeDecl>);


	inline jule::Ref<_11a3c2e70_Ref> _method_build_ref_from_type(jule::Ref<_11a3c2e70_TypeKind>);


	inline jule::Ref<_11a3c2e70_Ref> _method_build_ref(jule::Ref<_118d9a790_RefTypeDecl>);


	inline jule::Ref<_11a3c2e70_Ptr> _method_build_ptr_from_type(jule::Ref<_11a3c2e70_TypeKind>);


	inline jule::Ref<_11a3c2e70_Ptr> _method_build_ptr(jule::Ref<_118d9a790_PtrTypeDecl>);


	inline jule::Ref<_11a3c2e70_Slc> _method_build_slc(jule::Ref<_118d9a790_SlcTypeDecl>);


	inline jule::Ref<_11a3c2e70_Arr> _method_build_arr(jule::Ref<_118d9a790_ArrTypeDecl>);


	inline jule::Ref<_11a3c2e70_Map> _method_build_map(jule::Ref<_118d9a790_MapTypeDecl>);


	inline jule::Ref<_11a3c2e70_Tuple> _method_build_tuple(jule::Ref<_118d9a790_TupleTypeDecl>);


	inline jule::Bool _method_check_fn_types(jule::Ref<_119099250_FnIns>);


	inline jule::Ref<_119099250_FnIns> _method_build_fn(jule::Ref<_118d9a790_FnDecl>);


	inline jule::Trait<_11a3c2e70_Kind> _method_build_by_std_namespace(jule::Ref<_118d9a790_NamespaceTypeDecl>);


	inline jule::Trait<_11a3c2e70_Kind> _method_build_by_namespace(jule::Ref<_118d9a790_NamespaceTypeDecl>);


	inline jule::Ref<_11a3c2e70_TypeKind> _method_build(jule::Any);


	inline jule::Ref<_11a3c2e70_TypeKind> _method_check_decl(jule::Ref<_118d9a790_TypeDecl>);


	inline void _method_check(jule::Ref<_11a3c2e70_TypeSymbol>);


	inline bool operator==(const _11a3c2e70_TypeChecker &_Src) {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_lookup == _Src._field_lookup &&
			this->_field_referencer == _Src._field_referencer &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_ignore_generics == _Src._field_ignore_generics &&
			this->_field_use_generics == _Src._field_use_generics &&
			this->_field_not_plain == _Src._field_not_plain;
	}

	inline bool operator!=(const _11a3c2e70_TypeChecker &_Src) { return !this->operator==(_Src); }
};


struct _11a3c2e70_TypeAlias {
	jule::Ref<_11a3c2e70_TypeAlias> self{};

	jule::Ref<_118d9a790_ScopeTree> _field_scope{jule::Ref<_118d9a790_ScopeTree>()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_used{jule::Bool()};
	_11911a8a0_Token _field_token{_11911a8a0_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_11a3c2e70_TypeSymbol> _field_kind{jule::Ref<_11a3c2e70_TypeSymbol>()};
	jule::Str _field_doc{jule::Str()};
	jule::Slice<jule::Any> _field_refers{jule::Slice<jule::Any>()};


	_11a3c2e70_TypeAlias(jule::Ref<_118d9a790_ScopeTree> __param_scope, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Bool __param_used, _11911a8a0_Token __param_token, jule::Str __param_ident, jule::Ref<_11a3c2e70_TypeSymbol> __param_kind, jule::Str __param_doc, jule::Slice<jule::Any> __param_refers) {
		this->self = jule::Ref<_11a3c2e70_TypeAlias>::make(this, nullptr);

		this->_field_scope = __param_scope;
		this->_field_public = __param_public;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_used = __param_used;
		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_kind = __param_kind;
		this->_field_doc = __param_doc;
		this->_field_refers = __param_refers;
	}

	~_11a3c2e70_TypeAlias(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11a3c2e70_TypeAlias(void) { this->self = jule::Ref<_11a3c2e70_TypeAlias>::make(this, nullptr); }

	inline bool operator==(const _11a3c2e70_TypeAlias &_Src) {
		return 
			this->_field_scope == _Src._field_scope &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_used == _Src._field_used &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind &&
			this->_field_doc == _Src._field_doc &&
			this->_field_refers == _Src._field_refers;
	}

	inline bool operator!=(const _11a3c2e70_TypeAlias &_Src) { return !this->operator==(_Src); }
};


struct _11a53f4f0_BinopSolver {
	jule::Ref<_11a53f4f0_BinopSolver> self{};

	jule::Ref<_11a53f4f0_Eval> _field_e{jule::Ref<_11a53f4f0_Eval>()};
	jule::Ref<_11a53f4f0_Data> _field_l{jule::Ref<_11a53f4f0_Data>()};
	jule::Ref<_11a53f4f0_Data> _field_r{jule::Ref<_11a53f4f0_Data>()};
	_11911a8a0_Token _field_op{_11911a8a0_Token()};


	_11a53f4f0_BinopSolver(jule::Ref<_11a53f4f0_Eval> __param_e, jule::Ref<_11a53f4f0_Data> __param_l, jule::Ref<_11a53f4f0_Data> __param_r, _11911a8a0_Token __param_op) {
		this->self = jule::Ref<_11a53f4f0_BinopSolver>::make(this, nullptr);

		this->_field_e = __param_e;
		this->_field_l = __param_l;
		this->_field_r = __param_r;
		this->_field_op = __param_op;
	}

	~_11a53f4f0_BinopSolver(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11a53f4f0_BinopSolver(void) { this->self = jule::Ref<_11a53f4f0_BinopSolver>::make(this, nullptr); }

	inline jule::Bool _method_check_type_compatibility(void);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_nil(void);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_enum(void);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_ptr(void);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_arr(void);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_slc(void);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_fn(void);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_struct(void);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_trait(void);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_any(void);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_bool(void);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_str(void);


	inline void _method_set_type_to_greater(void);


	inline void _method_check_mod_data(jule::Ref<_11a53f4f0_Data>);


	inline void _method_mod(void);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_float(void);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_unsig_int(void);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_sig_int(void);


	inline jule::Ref<_11a53f4f0_Data> _method_eval_prim(void);


	inline jule::Ref<_11a53f4f0_Data> _method_eval(void);


	inline void _method_assign_shift(jule::Ref<_11a53f4f0_Data>,jule::F64);


	inline void _method_solve_const(jule::Ref<_11a53f4f0_Data>);


	inline void _method_post_const(jule::Ref<_11a53f4f0_Data>);


	inline void _method_prepare_data(jule::Ref<_11a53f4f0_Data>);


	inline void _method_prepare_eval(void);


	inline void _method_check_data(jule::Ref<_11a53f4f0_Data>);


	inline void _method_check_datas(void);


	inline jule::Ref<_11a53f4f0_Data> _method_solve_explicit(jule::Ref<_11a53f4f0_Data>,jule::Ref<_11a53f4f0_Data>);


	inline jule::Ref<_11a53f4f0_Data> _method_solve(jule::Ref<_118d9a790_BinopExpr>);


	inline bool operator==(const _11a53f4f0_BinopSolver &_Src) {
		return 
			this->_field_e == _Src._field_e &&
			this->_field_l == _Src._field_l &&
			this->_field_r == _Src._field_r &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _11a53f4f0_BinopSolver &_Src) { return !this->operator==(_Src); }
};


struct _11a21f8a0_RetTypeChecker {
	jule::Ref<_11a21f8a0_RetTypeChecker> self{};

	jule::Ref<_11a093930_ScopeChecker> _field_sc{jule::Ref<_11a093930_ScopeChecker>()};
	jule::Ref<_119099250_FnIns> _field_f{jule::Ref<_119099250_FnIns>()};
	jule::Slice<jule::Ref<_11a3c2e70_TypeKind>> _field_types{jule::Slice<jule::Ref<_11a3c2e70_TypeKind>>()};
	jule::Slice<jule::Any> _field_exprs{jule::Slice<jule::Any>()};
	jule::Slice<jule::Ref<_11a245f20_Var>> _field_vars{jule::Slice<jule::Ref<_11a245f20_Var>>()};
	_11911a8a0_Token _field_error_token{_11911a8a0_Token()};
	jule::Any _field_model{jule::Any()};


	_11a21f8a0_RetTypeChecker(jule::Ref<_11a093930_ScopeChecker> __param_sc, jule::Ref<_119099250_FnIns> __param_f, jule::Slice<jule::Ref<_11a3c2e70_TypeKind>> __param_types, jule::Slice<jule::Any> __param_exprs, jule::Slice<jule::Ref<_11a245f20_Var>> __param_vars, _11911a8a0_Token __param_error_token, jule::Any __param_model) {
		this->self = jule::Ref<_11a21f8a0_RetTypeChecker>::make(this, nullptr);

		this->_field_sc = __param_sc;
		this->_field_f = __param_f;
		this->_field_types = __param_types;
		this->_field_exprs = __param_exprs;
		this->_field_vars = __param_vars;
		this->_field_error_token = __param_error_token;
		this->_field_model = __param_model;
	}

	~_11a21f8a0_RetTypeChecker(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11a21f8a0_RetTypeChecker(void) { this->self = jule::Ref<_11a21f8a0_RetTypeChecker>::make(this, nullptr); }

	inline void _method_prepare_types(void);


	inline void _method_prepare_exprs(jule::Ref<_118d9a790_Expr>);


	inline void _method_ret_vars(void);


	inline void _method_check_exprs(void);


	inline jule::Bool _method_check(jule::Ref<_118d9a790_Expr>);


	inline bool operator==(const _11a21f8a0_RetTypeChecker &_Src) {
		return 
			this->_field_sc == _Src._field_sc &&
			this->_field_f == _Src._field_f &&
			this->_field_types == _Src._field_types &&
			this->_field_exprs == _Src._field_exprs &&
			this->_field_vars == _Src._field_vars &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_model == _Src._field_model;
	}

	inline bool operator!=(const _11a21f8a0_RetTypeChecker &_Src) { return !this->operator==(_Src); }
};


struct _11a21f8a0_FnCallArgChecker {
	jule::Ref<_11a21f8a0_FnCallArgChecker> self{};

	jule::Ref<_11a53f4f0_Eval> _field_e{jule::Ref<_11a53f4f0_Eval>()};
	jule::Slice<jule::Ref<_118d9a790_Expr>> _field_args{jule::Slice<jule::Ref<_118d9a790_Expr>>()};
	_11911a8a0_Token _field_error_token{_11911a8a0_Token()};
	jule::Ref<_119099250_FnIns> _field_f{jule::Ref<_119099250_FnIns>()};
	jule::Bool _field_dynamic_annotation{jule::Bool()};
	jule::Slice<jule::Any> _field_arg_models{jule::Slice<jule::Any>()};


	_11a21f8a0_FnCallArgChecker(jule::Ref<_11a53f4f0_Eval> __param_e, jule::Slice<jule::Ref<_118d9a790_Expr>> __param_args, _11911a8a0_Token __param_error_token, jule::Ref<_119099250_FnIns> __param_f, jule::Bool __param_dynamic_annotation, jule::Slice<jule::Any> __param_arg_models) {
		this->self = jule::Ref<_11a21f8a0_FnCallArgChecker>::make(this, nullptr);

		this->_field_e = __param_e;
		this->_field_args = __param_args;
		this->_field_error_token = __param_error_token;
		this->_field_f = __param_f;
		this->_field_dynamic_annotation = __param_dynamic_annotation;
		this->_field_arg_models = __param_arg_models;
	}

	~_11a21f8a0_FnCallArgChecker(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11a21f8a0_FnCallArgChecker(void) { this->self = jule::Ref<_11a21f8a0_FnCallArgChecker>::make(this, nullptr); }

	inline void _method_push_err_token(_11911a8a0_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_err(jule::Str,jule::Slice<jule::Any>);


	inline jule::Slice<jule::Ref<_119099250_ParamIns>> _method_get_params(void);


	inline jule::Bool _method_check_counts(jule::Slice<jule::Ref<_119099250_ParamIns>>);


	inline jule::Bool _method_check_arg(jule::Ref<_119099250_ParamIns>,jule::Ref<_11a53f4f0_Data>,_11911a8a0_Token);


	inline jule::Bool _method_push(jule::Ref<_119099250_ParamIns>,jule::Ref<_118d9a790_Expr>);


	inline jule::Bool _method_push_variadic(jule::Ref<_119099250_ParamIns>,jule::Int);


	inline jule::Bool _method_check_args(jule::Slice<jule::Ref<_119099250_ParamIns>>);


	inline jule::Bool _method_check_dynamic_type_annotation(void);


	inline jule::Bool _method_check(void);


	inline bool operator==(const _11a21f8a0_FnCallArgChecker &_Src) {
		return 
			this->_field_e == _Src._field_e &&
			this->_field_args == _Src._field_args &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_f == _Src._field_f &&
			this->_field_dynamic_annotation == _Src._field_dynamic_annotation &&
			this->_field_arg_models == _Src._field_arg_models;
	}

	inline bool operator!=(const _11a21f8a0_FnCallArgChecker &_Src) { return !this->operator==(_Src); }
};


struct _11a21f8a0_AssignTypeChecker {
	jule::Ref<_11a21f8a0_AssignTypeChecker> self{};

	jule::Ref<_11a096220_Sema> _field_s{jule::Ref<_11a096220_Sema>()};
	jule::Ref<_11a3c2e70_TypeKind> _field_dest{jule::Ref<_11a3c2e70_TypeKind>()};
	jule::Ref<_11a53f4f0_Data> _field_d{jule::Ref<_11a53f4f0_Data>()};
	_11911a8a0_Token _field_error_token{_11911a8a0_Token()};
	jule::Bool _field_deref{jule::Bool()};


	_11a21f8a0_AssignTypeChecker(jule::Ref<_11a096220_Sema> __param_s, jule::Ref<_11a3c2e70_TypeKind> __param_dest, jule::Ref<_11a53f4f0_Data> __param_d, _11911a8a0_Token __param_error_token, jule::Bool __param_deref) {
		this->self = jule::Ref<_11a21f8a0_AssignTypeChecker>::make(this, nullptr);

		this->_field_s = __param_s;
		this->_field_dest = __param_dest;
		this->_field_d = __param_d;
		this->_field_error_token = __param_error_token;
		this->_field_deref = __param_deref;
	}

	~_11a21f8a0_AssignTypeChecker(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11a21f8a0_AssignTypeChecker(void) { this->self = jule::Ref<_11a21f8a0_AssignTypeChecker>::make(this, nullptr); }

	inline void _method_push_err(jule::Str,jule::Slice<jule::Any>);


	inline jule::Bool _method_check_validity(void);


	inline jule::Bool _method_check_const(void);


	inline jule::Bool _method_check(void);


	inline bool operator==(const _11a21f8a0_AssignTypeChecker &_Src) {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_dest == _Src._field_dest &&
			this->_field_d == _Src._field_d &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_deref == _Src._field_deref;
	}

	inline bool operator!=(const _11a21f8a0_AssignTypeChecker &_Src) { return !this->operator==(_Src); }
};


struct _11a21f8a0_TypeCompatibilityChecker {
	jule::Ref<_11a21f8a0_TypeCompatibilityChecker> self{};

	jule::Ref<_11a096220_Sema> _field_s{jule::Ref<_11a096220_Sema>()};
	jule::Ref<_11a3c2e70_TypeKind> _field_dest{jule::Ref<_11a3c2e70_TypeKind>()};
	jule::Ref<_11a3c2e70_TypeKind> _field_src{jule::Ref<_11a3c2e70_TypeKind>()};
	_11911a8a0_Token _field_error_token{_11911a8a0_Token()};
	jule::Bool _field_deref{jule::Bool()};
	jule::Bool _field_ignore_any{jule::Bool()};


	_11a21f8a0_TypeCompatibilityChecker(jule::Ref<_11a096220_Sema> __param_s, jule::Ref<_11a3c2e70_TypeKind> __param_dest, jule::Ref<_11a3c2e70_TypeKind> __param_src, _11911a8a0_Token __param_error_token, jule::Bool __param_deref, jule::Bool __param_ignore_any) {
		this->self = jule::Ref<_11a21f8a0_TypeCompatibilityChecker>::make(this, nullptr);

		this->_field_s = __param_s;
		this->_field_dest = __param_dest;
		this->_field_src = __param_src;
		this->_field_error_token = __param_error_token;
		this->_field_deref = __param_deref;
		this->_field_ignore_any = __param_ignore_any;
	}

	~_11a21f8a0_TypeCompatibilityChecker(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11a21f8a0_TypeCompatibilityChecker(void) { this->self = jule::Ref<_11a21f8a0_TypeCompatibilityChecker>::make(this, nullptr); }

	inline void _method_push_err(jule::Str,jule::Slice<jule::Any>);


	inline jule::Bool _method_check_trait(void);


	inline jule::Bool _method_check_ref(void);


	inline jule::Bool _method_check_ptr(void);


	inline jule::Bool _method_check_slc(void);


	inline jule::Bool _method_check_arr(void);


	inline jule::Bool _method_check_map(void);


	inline jule::Bool _method_check_struct(void);


	inline jule::Bool _method_check_fn(void);


	inline jule::Bool _method_check_enum(void);


	inline jule::Bool _method_check(void);


	inline bool operator==(const _11a21f8a0_TypeCompatibilityChecker &_Src) {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_dest == _Src._field_dest &&
			this->_field_src == _Src._field_src &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_deref == _Src._field_deref &&
			this->_field_ignore_any == _Src._field_ignore_any;
	}

	inline bool operator!=(const _11a21f8a0_TypeCompatibilityChecker &_Src) { return !this->operator==(_Src); }
};


struct _11a245f20_Var {
	jule::Ref<_11a245f20_Var> self{};

	jule::Ref<_11a093930_Scope> _field_scope{jule::Ref<_11a093930_Scope>()};
	_11911a8a0_Token _field_token{_11911a8a0_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_constant{jule::Bool()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_used{jule::Bool()};
	jule::Bool _field_statically{jule::Bool()};
	jule::Bool _field_reference{jule::Bool()};
	jule::Str _field_doc{jule::Str()};
	jule::Ref<_11a3c2e70_TypeSymbol> _field_kind{jule::Ref<_11a3c2e70_TypeSymbol>()};
	jule::Ref<_11a53f4f0_Value> _field_value{jule::Ref<_11a53f4f0_Value>()};
	jule::Ref<_13feceeb0_ReferenceStack> _field_references{jule::Ref<_13feceeb0_ReferenceStack>()};
	jule::Slice<jule::Ref<_11a245f20_Var>> _field_depends{jule::Slice<jule::Ref<_11a245f20_Var>>()};


	_11a245f20_Var(jule::Ref<_11a093930_Scope> __param_scope, _11911a8a0_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked, jule::Bool __param_constant, jule::Bool __param_mutable, jule::Bool __param_public, jule::Bool __param_used, jule::Bool __param_statically, jule::Bool __param_reference, jule::Str __param_doc, jule::Ref<_11a3c2e70_TypeSymbol> __param_kind, jule::Ref<_11a53f4f0_Value> __param_value, jule::Ref<_13feceeb0_ReferenceStack> __param_references, jule::Slice<jule::Ref<_11a245f20_Var>> __param_depends) {
		this->self = jule::Ref<_11a245f20_Var>::make(this, nullptr);

		this->_field_scope = __param_scope;
		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_constant = __param_constant;
		this->_field_mutable = __param_mutable;
		this->_field_public = __param_public;
		this->_field_used = __param_used;
		this->_field_statically = __param_statically;
		this->_field_reference = __param_reference;
		this->_field_doc = __param_doc;
		this->_field_kind = __param_kind;
		this->_field_value = __param_value;
		this->_field_references = __param_references;
		this->_field_depends = __param_depends;
	}

	~_11a245f20_Var(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11a245f20_Var(void) { this->self = jule::Ref<_11a245f20_Var>::make(this, nullptr); }

	inline jule::Bool _method_is_initialized(void);


	inline jule::Bool _method_is_type_inferred(void);


	inline bool operator==(const _11a245f20_Var &_Src) {
		return 
			this->_field_scope == _Src._field_scope &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_constant == _Src._field_constant &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_public == _Src._field_public &&
			this->_field_used == _Src._field_used &&
			this->_field_statically == _Src._field_statically &&
			this->_field_reference == _Src._field_reference &&
			this->_field_doc == _Src._field_doc &&
			this->_field_kind == _Src._field_kind &&
			this->_field_value == _Src._field_value &&
			this->_field_references == _Src._field_references &&
			this->_field_depends == _Src._field_depends;
	}

	inline bool operator!=(const _11a245f20_Var &_Src) { return !this->operator==(_Src); }
};


struct _11a0945e0_ImportInfo: public _11aa76f70_Lookup {
	jule::Ref<_11a0945e0_ImportInfo> self{};

	_11911a8a0_Token _field_token{_11911a8a0_Token()};
	jule::Str _field_path{jule::Str()};
	jule::Str _field_link_path{jule::Str()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_duplicate{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_std{jule::Bool()};
	jule::Bool _field_import_all{jule::Bool()};
	jule::Slice<_11911a8a0_Token> _field_selected{jule::Slice<_11911a8a0_Token>()};
	jule::Ref<_11a0945e0_Package> _field_package{jule::Ref<_11a0945e0_Package>()};


	_11a0945e0_ImportInfo(_11911a8a0_Token __param_token, jule::Str __param_path, jule::Str __param_link_path, jule::Str __param_ident, jule::Bool __param_duplicate, jule::Bool __param_cpp_linked, jule::Bool __param_std, jule::Bool __param_import_all, jule::Slice<_11911a8a0_Token> __param_selected, jule::Ref<_11a0945e0_Package> __param_package) {
		this->self = jule::Ref<_11a0945e0_ImportInfo>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_path = __param_path;
		this->_field_link_path = __param_link_path;
		this->_field_ident = __param_ident;
		this->_field_duplicate = __param_duplicate;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_std = __param_std;
		this->_field_import_all = __param_import_all;
		this->_field_selected = __param_selected;
		this->_field_package = __param_package;
	}

	~_11a0945e0_ImportInfo(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11a0945e0_ImportInfo(void) { this->self = jule::Ref<_11a0945e0_ImportInfo>::make(this, nullptr); }

	inline jule::Ref<_11a0945e0_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ref<_11a0945e0_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ref<_11a0945e0_ImportInfo>)>);


	inline jule::Ref<_11a245f20_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ref<_11a3c2e70_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ref<_118bb7d70_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ref<_119099250_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ref<_118e2b060_Trait> _method_find_trait(jule::Str);


	inline jule::Ref<_11a089b40_Enum> _method_find_enum(jule::Str);


	inline jule::Bool _method_is_lookupable(jule::Str);


	inline jule::Bool _method_exist_ident(jule::Str);


	inline bool operator==(const _11a0945e0_ImportInfo &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_path == _Src._field_path &&
			this->_field_link_path == _Src._field_link_path &&
			this->_field_ident == _Src._field_ident &&
			this->_field_duplicate == _Src._field_duplicate &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_std == _Src._field_std &&
			this->_field_import_all == _Src._field_import_all &&
			this->_field_selected == _Src._field_selected &&
			this->_field_package == _Src._field_package;
	}

	inline bool operator!=(const _11a0945e0_ImportInfo &_Src) { return !this->operator==(_Src); }
};


struct _11a093930_ScopeLabel {
	jule::Ref<_11a093930_ScopeLabel> self{};

	_11911a8a0_Token _field_token{_11911a8a0_Token()};
	jule::Ref<_11a093930_Label> _field_label{jule::Ref<_11a093930_Label>()};
	jule::Int _field_pos{jule::Int()};
	jule::Ref<_11a093930_ScopeChecker> _field_scope{jule::Ref<_11a093930_ScopeChecker>()};
	jule::Bool _field_used{jule::Bool()};


	_11a093930_ScopeLabel(_11911a8a0_Token __param_token, jule::Ref<_11a093930_Label> __param_label, jule::Int __param_pos, jule::Ref<_11a093930_ScopeChecker> __param_scope, jule::Bool __param_used) {
		this->self = jule::Ref<_11a093930_ScopeLabel>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_label = __param_label;
		this->_field_pos = __param_pos;
		this->_field_scope = __param_scope;
		this->_field_used = __param_used;
	}

	~_11a093930_ScopeLabel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11a093930_ScopeLabel(void) { this->self = jule::Ref<_11a093930_ScopeLabel>::make(this, nullptr); }

	inline bool operator==(const _11a093930_ScopeLabel &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_label == _Src._field_label &&
			this->_field_pos == _Src._field_pos &&
			this->_field_scope == _Src._field_scope &&
			this->_field_used == _Src._field_used;
	}

	inline bool operator!=(const _11a093930_ScopeLabel &_Src) { return !this->operator==(_Src); }
};


struct _11a091460_Impl {
	jule::Ref<_11a091460_Impl> self{};

	_11911a8a0_Token _field_base{_11911a8a0_Token()};
	_11911a8a0_Token _field_dest{_11911a8a0_Token()};
	jule::Slice<jule::Ref<_119099250_Fn>> _field_methods{jule::Slice<jule::Ref<_119099250_Fn>>()};


	_11a091460_Impl(_11911a8a0_Token __param_base, _11911a8a0_Token __param_dest, jule::Slice<jule::Ref<_119099250_Fn>> __param_methods) {
		this->self = jule::Ref<_11a091460_Impl>::make(this, nullptr);

		this->_field_base = __param_base;
		this->_field_dest = __param_dest;
		this->_field_methods = __param_methods;
	}

	~_11a091460_Impl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11a091460_Impl(void) { this->self = jule::Ref<_11a091460_Impl>::make(this, nullptr); }

	inline jule::Bool _method_is_trait_impl(void);


	inline jule::Bool _method_is_struct_impl(void);


	inline bool operator==(const _11a091460_Impl &_Src) {
		return 
			this->_field_base == _Src._field_base &&
			this->_field_dest == _Src._field_dest &&
			this->_field_methods == _Src._field_methods;
	}

	inline bool operator!=(const _11a091460_Impl &_Src) { return !this->operator==(_Src); }
};


struct _11a089b40_Enum: public _11a3c2e70_Kind {
	jule::Ref<_11a089b40_Enum> self{};

	_11911a8a0_Token _field_token{_11911a8a0_Token()};
	jule::Bool _field_public{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_11a3c2e70_TypeSymbol> _field_kind{jule::Ref<_11a3c2e70_TypeSymbol>()};
	jule::Slice<jule::Ref<_11a089b40_EnumItem>> _field_items{jule::Slice<jule::Ref<_11a089b40_EnumItem>>()};
	jule::Str _field_doc{jule::Str()};


	_11a089b40_Enum(_11911a8a0_Token __param_token, jule::Bool __param_public, jule::Str __param_ident, jule::Ref<_11a3c2e70_TypeSymbol> __param_kind, jule::Slice<jule::Ref<_11a089b40_EnumItem>> __param_items, jule::Str __param_doc) {
		this->self = jule::Ref<_11a089b40_Enum>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_public = __param_public;
		this->_field_ident = __param_ident;
		this->_field_kind = __param_kind;
		this->_field_items = __param_items;
		this->_field_doc = __param_doc;
	}

	~_11a089b40_Enum(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11a089b40_Enum(void) { this->self = jule::Ref<_11a089b40_Enum>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_11a3c2e70_TypeKind>);


	inline jule::Ref<_11a089b40_EnumItem> _method_find_item(jule::Str);


	inline bool operator==(const _11a089b40_Enum &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_public == _Src._field_public &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind &&
			this->_field_items == _Src._field_items &&
			this->_field_doc == _Src._field_doc;
	}

	inline bool operator!=(const _11a089b40_Enum &_Src) { return !this->operator==(_Src); }
};


struct _11a089b40_EnumItem {
	jule::Ref<_11a089b40_EnumItem> self{};

	_11911a8a0_Token _field_token{_11911a8a0_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_11a53f4f0_Value> _field_value{jule::Ref<_11a53f4f0_Value>()};


	_11a089b40_EnumItem(_11911a8a0_Token __param_token, jule::Str __param_ident, jule::Ref<_11a53f4f0_Value> __param_value) {
		this->self = jule::Ref<_11a089b40_EnumItem>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_value = __param_value;
	}

	~_11a089b40_EnumItem(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11a089b40_EnumItem(void) { this->self = jule::Ref<_11a089b40_EnumItem>::make(this, nullptr); }

	inline jule::Bool _method_auto_expr(void);


	inline bool operator==(const _11a089b40_EnumItem &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_value == _Src._field_value;
	}

	inline bool operator!=(const _11a089b40_EnumItem &_Src) { return !this->operator==(_Src); }
};


struct _118e2b060_Trait: public _11a3c2e70_Kind {
	jule::Ref<_118e2b060_Trait> self{};

	_11911a8a0_Token _field_token{_11911a8a0_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_public{jule::Bool()};
	jule::Str _field_doc{jule::Str()};
	jule::Slice<jule::Ref<_119099250_Fn>> _field_methods{jule::Slice<jule::Ref<_119099250_Fn>>()};
	jule::Slice<jule::Ref<_118bb7d70_Struct>> _field_implemented{jule::Slice<jule::Ref<_118bb7d70_Struct>>()};


	_118e2b060_Trait(_11911a8a0_Token __param_token, jule::Str __param_ident, jule::Bool __param_public, jule::Str __param_doc, jule::Slice<jule::Ref<_119099250_Fn>> __param_methods, jule::Slice<jule::Ref<_118bb7d70_Struct>> __param_implemented) {
		this->self = jule::Ref<_118e2b060_Trait>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_public = __param_public;
		this->_field_doc = __param_doc;
		this->_field_methods = __param_methods;
		this->_field_implemented = __param_implemented;
	}

	~_118e2b060_Trait(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118e2b060_Trait(void) { this->self = jule::Ref<_118e2b060_Trait>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_11a3c2e70_TypeKind>);


	inline jule::Bool _method_is_builtin(void);


	inline jule::Ref<_119099250_Fn> _method_find_method(jule::Str);


	inline bool operator==(const _118e2b060_Trait &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_public == _Src._field_public &&
			this->_field_doc == _Src._field_doc &&
			this->_field_methods == _Src._field_methods &&
			this->_field_implemented == _Src._field_implemented;
	}

	inline bool operator!=(const _118e2b060_Trait &_Src) { return !this->operator==(_Src); }
};


struct _13feceeb0_Pass {
	jule::Ref<_13feceeb0_Pass> self{};

	_11911a8a0_Token _field_token{_11911a8a0_Token()};
	jule::Str _field_text{jule::Str()};


	_13feceeb0_Pass(_11911a8a0_Token __param_token, jule::Str __param_text) {
		this->self = jule::Ref<_13feceeb0_Pass>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_text = __param_text;
	}

	~_13feceeb0_Pass(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_13feceeb0_Pass(void) { this->self = jule::Ref<_13feceeb0_Pass>::make(this, nullptr); }

	inline bool operator==(const _13feceeb0_Pass &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_text == _Src._field_text;
	}

	inline bool operator!=(const _13feceeb0_Pass &_Src) { return !this->operator==(_Src); }
};


struct _119099250_Fn {
	jule::Ref<_119099250_Fn> self{};

	jule::Ref<_11a096220_Sema> _field_sema{jule::Ref<_11a096220_Sema>()};
	_11911a8a0_Token _field_token{_11911a8a0_Token()};
	jule::Bool _field_global{jule::Bool()};
	jule::Bool _field_unsafety{jule::Bool()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_statically{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Slice<jule::Ref<_118d9a790_Directive>> _field_directives{jule::Slice<jule::Ref<_118d9a790_Directive>>()};
	jule::Str _field_doc{jule::Str()};
	jule::Ref<_118d9a790_ScopeTree> _field_scope{jule::Ref<_118d9a790_ScopeTree>()};
	jule::Slice<jule::Ref<_118d9a790_GenericDecl>> _field_generics{jule::Slice<jule::Ref<_118d9a790_GenericDecl>>()};
	jule::Ref<_119099250_RetType> _field_result{jule::Ref<_119099250_RetType>()};
	jule::Slice<jule::Ref<_119099250_Param>> _field_params{jule::Slice<jule::Ref<_119099250_Param>>()};
	jule::Ref<_118bb7d70_Struct> _field_owner{jule::Ref<_118bb7d70_Struct>()};
	jule::Ref<_13feceeb0_ReferenceStack> _field_references{jule::Ref<_13feceeb0_ReferenceStack>()};
	jule::Slice<jule::Ref<_119099250_FnIns>> _field_instances{jule::Slice<jule::Ref<_119099250_FnIns>>()};


	_119099250_Fn(jule::Ref<_11a096220_Sema> __param_sema, _11911a8a0_Token __param_token, jule::Bool __param_global, jule::Bool __param_unsafety, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Bool __param_statically, jule::Str __param_ident, jule::Slice<jule::Ref<_118d9a790_Directive>> __param_directives, jule::Str __param_doc, jule::Ref<_118d9a790_ScopeTree> __param_scope, jule::Slice<jule::Ref<_118d9a790_GenericDecl>> __param_generics, jule::Ref<_119099250_RetType> __param_result, jule::Slice<jule::Ref<_119099250_Param>> __param_params, jule::Ref<_118bb7d70_Struct> __param_owner, jule::Ref<_13feceeb0_ReferenceStack> __param_references, jule::Slice<jule::Ref<_119099250_FnIns>> __param_instances) {
		this->self = jule::Ref<_119099250_Fn>::make(this, nullptr);

		this->_field_sema = __param_sema;
		this->_field_token = __param_token;
		this->_field_global = __param_global;
		this->_field_unsafety = __param_unsafety;
		this->_field_public = __param_public;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_statically = __param_statically;
		this->_field_ident = __param_ident;
		this->_field_directives = __param_directives;
		this->_field_doc = __param_doc;
		this->_field_scope = __param_scope;
		this->_field_generics = __param_generics;
		this->_field_result = __param_result;
		this->_field_params = __param_params;
		this->_field_owner = __param_owner;
		this->_field_references = __param_references;
		this->_field_instances = __param_instances;
	}

	~_119099250_Fn(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_119099250_Fn(void) { this->self = jule::Ref<_119099250_Fn>::make(this, nullptr); }

	inline jule::Bool _method_is_void(void);


	inline jule::Bool _method_is_method(void);


	inline jule::Bool _method_is_entry_point(void);


	inline jule::Bool _method_is_init(void);


	inline jule::Bool _method_is_anon(void);


	inline jule::Bool _method_any_var(void);


	inline jule::Bool _method_parameters_uses_generics(void);


	inline jule::Bool _method_result_uses_generics(void);


	inline jule::Ref<_119099250_FnIns> _method_instance_force(void);


	inline jule::Ref<_119099250_FnIns> _method_instance(void);


	inline std::tuple<jule::Bool,jule::Int> _method_append_instance(jule::Ref<_119099250_FnIns>);


	inline bool operator==(const _119099250_Fn &_Src) {
		return 
			this->_field_sema == _Src._field_sema &&
			this->_field_token == _Src._field_token &&
			this->_field_global == _Src._field_global &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_statically == _Src._field_statically &&
			this->_field_ident == _Src._field_ident &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc == _Src._field_doc &&
			this->_field_scope == _Src._field_scope &&
			this->_field_generics == _Src._field_generics &&
			this->_field_result == _Src._field_result &&
			this->_field_params == _Src._field_params &&
			this->_field_owner == _Src._field_owner &&
			this->_field_references == _Src._field_references &&
			this->_field_instances == _Src._field_instances;
	}

	inline bool operator!=(const _119099250_Fn &_Src) { return !this->operator==(_Src); }
};


struct _119099250_Param {
	jule::Ref<_119099250_Param> self{};

	_11911a8a0_Token _field_token{_11911a8a0_Token()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Bool _field_variadic{jule::Bool()};
	jule::Bool _field_reference{jule::Bool()};
	jule::Ref<_11a3c2e70_TypeSymbol> _field_kind{jule::Ref<_11a3c2e70_TypeSymbol>()};
	jule::Str _field_ident{jule::Str()};


	_119099250_Param(_11911a8a0_Token __param_token, jule::Bool __param_mutable, jule::Bool __param_variadic, jule::Bool __param_reference, jule::Ref<_11a3c2e70_TypeSymbol> __param_kind, jule::Str __param_ident) {
		this->self = jule::Ref<_119099250_Param>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_mutable = __param_mutable;
		this->_field_variadic = __param_variadic;
		this->_field_reference = __param_reference;
		this->_field_kind = __param_kind;
		this->_field_ident = __param_ident;
	}

	~_119099250_Param(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_119099250_Param(void) { this->self = jule::Ref<_119099250_Param>::make(this, nullptr); }

	inline jule::Ref<_119099250_ParamIns> _method_instance(void);


	inline jule::Bool _method_is_self(void);


	inline jule::Bool _method_is_ref(void);


	inline bool operator==(const _119099250_Param &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_variadic == _Src._field_variadic &&
			this->_field_reference == _Src._field_reference &&
			this->_field_kind == _Src._field_kind &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _119099250_Param &_Src) { return !this->operator==(_Src); }
};


struct _118bb7d70_Field {
	jule::Ref<_118bb7d70_Field> self{};

	jule::Ref<_118bb7d70_Struct> _field_owner{jule::Ref<_118bb7d70_Struct>()};
	_11911a8a0_Token _field_token{_11911a8a0_Token()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_11a3c2e70_TypeSymbol> _field_kind{jule::Ref<_11a3c2e70_TypeSymbol>()};


	_118bb7d70_Field(jule::Ref<_118bb7d70_Struct> __param_owner, _11911a8a0_Token __param_token, jule::Bool __param_public, jule::Bool __param_mutable, jule::Str __param_ident, jule::Ref<_11a3c2e70_TypeSymbol> __param_kind) {
		this->self = jule::Ref<_118bb7d70_Field>::make(this, nullptr);

		this->_field_owner = __param_owner;
		this->_field_token = __param_token;
		this->_field_public = __param_public;
		this->_field_mutable = __param_mutable;
		this->_field_ident = __param_ident;
		this->_field_kind = __param_kind;
	}

	~_118bb7d70_Field(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118bb7d70_Field(void) { this->self = jule::Ref<_118bb7d70_Field>::make(this, nullptr); }

	inline jule::Ref<_118bb7d70_FieldIns> _method_instance(void);


	inline bool operator==(const _118bb7d70_Field &_Src) {
		return 
			this->_field_owner == _Src._field_owner &&
			this->_field_token == _Src._field_token &&
			this->_field_public == _Src._field_public &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _118bb7d70_Field &_Src) { return !this->operator==(_Src); }
};


struct _118dbfd80_AssignInfo {
	jule::Ref<_118dbfd80_AssignInfo> self{};

	jule::Slice<_11911a8a0_Token> _field_l{jule::Slice<_11911a8a0_Token>()};
	jule::Slice<_11911a8a0_Token> _field_r{jule::Slice<_11911a8a0_Token>()};
	_11911a8a0_Token _field_setter{_11911a8a0_Token()};
	jule::Bool _field_ok{jule::Bool()};


	_118dbfd80_AssignInfo(jule::Slice<_11911a8a0_Token> __param_l, jule::Slice<_11911a8a0_Token> __param_r, _11911a8a0_Token __param_setter, jule::Bool __param_ok) {
		this->self = jule::Ref<_118dbfd80_AssignInfo>::make(this, nullptr);

		this->_field_l = __param_l;
		this->_field_r = __param_r;
		this->_field_setter = __param_setter;
		this->_field_ok = __param_ok;
	}

	~_118dbfd80_AssignInfo(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118dbfd80_AssignInfo(void) { this->self = jule::Ref<_118dbfd80_AssignInfo>::make(this, nullptr); }

	inline bool operator==(const _118dbfd80_AssignInfo &_Src) {
		return 
			this->_field_l == _Src._field_l &&
			this->_field_r == _Src._field_r &&
			this->_field_setter == _Src._field_setter &&
			this->_field_ok == _Src._field_ok;
	}

	inline bool operator!=(const _118dbfd80_AssignInfo &_Src) { return !this->operator==(_Src); }
};


struct _118d9a790_Impl {
	jule::Ref<_118d9a790_Impl> self{};

	_11911a8a0_Token _field_base{_11911a8a0_Token()};
	_11911a8a0_Token _field_dest{_11911a8a0_Token()};
	jule::Slice<jule::Ref<_118d9a790_FnDecl>> _field_methods{jule::Slice<jule::Ref<_118d9a790_FnDecl>>()};


	_118d9a790_Impl(_11911a8a0_Token __param_base, _11911a8a0_Token __param_dest, jule::Slice<jule::Ref<_118d9a790_FnDecl>> __param_methods) {
		this->self = jule::Ref<_118d9a790_Impl>::make(this, nullptr);

		this->_field_base = __param_base;
		this->_field_dest = __param_dest;
		this->_field_methods = __param_methods;
	}

	~_118d9a790_Impl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118d9a790_Impl(void) { this->self = jule::Ref<_118d9a790_Impl>::make(this, nullptr); }

	inline jule::Bool _method_is_trait_impl(void);


	inline jule::Bool _method_is_struct_impl(void);


	inline bool operator==(const _118d9a790_Impl &_Src) {
		return 
			this->_field_base == _Src._field_base &&
			this->_field_dest == _Src._field_dest &&
			this->_field_methods == _Src._field_methods;
	}

	inline bool operator!=(const _118d9a790_Impl &_Src) { return !this->operator==(_Src); }
};


struct _118d9a790_TraitDecl {
	jule::Ref<_118d9a790_TraitDecl> self{};

	_11911a8a0_Token _field_token{_11911a8a0_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_public{jule::Bool()};
	jule::Ref<_118d9a790_CommentGroup> _field_doc_comments{jule::Ref<_118d9a790_CommentGroup>()};
	jule::Slice<jule::Ref<_118d9a790_FnDecl>> _field_methods{jule::Slice<jule::Ref<_118d9a790_FnDecl>>()};


	_118d9a790_TraitDecl(_11911a8a0_Token __param_token, jule::Str __param_ident, jule::Bool __param_public, jule::Ref<_118d9a790_CommentGroup> __param_doc_comments, jule::Slice<jule::Ref<_118d9a790_FnDecl>> __param_methods) {
		this->self = jule::Ref<_118d9a790_TraitDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_public = __param_public;
		this->_field_doc_comments = __param_doc_comments;
		this->_field_methods = __param_methods;
	}

	~_118d9a790_TraitDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118d9a790_TraitDecl(void) { this->self = jule::Ref<_118d9a790_TraitDecl>::make(this, nullptr); }

	inline bool operator==(const _118d9a790_TraitDecl &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_public == _Src._field_public &&
			this->_field_doc_comments == _Src._field_doc_comments &&
			this->_field_methods == _Src._field_methods;
	}

	inline bool operator!=(const _118d9a790_TraitDecl &_Src) { return !this->operator==(_Src); }
};


struct _118d9a790_StructDecl {
	jule::Ref<_118d9a790_StructDecl> self{};

	_11911a8a0_Token _field_token{_11911a8a0_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Slice<jule::Ref<_118d9a790_FieldDecl>> _field_fields{jule::Slice<jule::Ref<_118d9a790_FieldDecl>>()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Slice<jule::Ref<_118d9a790_Directive>> _field_directives{jule::Slice<jule::Ref<_118d9a790_Directive>>()};
	jule::Ref<_118d9a790_CommentGroup> _field_doc_comments{jule::Ref<_118d9a790_CommentGroup>()};
	jule::Slice<jule::Ref<_118d9a790_GenericDecl>> _field_generics{jule::Slice<jule::Ref<_118d9a790_GenericDecl>>()};


	_118d9a790_StructDecl(_11911a8a0_Token __param_token, jule::Str __param_ident, jule::Slice<jule::Ref<_118d9a790_FieldDecl>> __param_fields, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Slice<jule::Ref<_118d9a790_Directive>> __param_directives, jule::Ref<_118d9a790_CommentGroup> __param_doc_comments, jule::Slice<jule::Ref<_118d9a790_GenericDecl>> __param_generics) {
		this->self = jule::Ref<_118d9a790_StructDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_fields = __param_fields;
		this->_field_public = __param_public;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_directives = __param_directives;
		this->_field_doc_comments = __param_doc_comments;
		this->_field_generics = __param_generics;
	}

	~_118d9a790_StructDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118d9a790_StructDecl(void) { this->self = jule::Ref<_118d9a790_StructDecl>::make(this, nullptr); }

	inline bool operator==(const _118d9a790_StructDecl &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_fields == _Src._field_fields &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc_comments == _Src._field_doc_comments &&
			this->_field_generics == _Src._field_generics;
	}

	inline bool operator!=(const _118d9a790_StructDecl &_Src) { return !this->operator==(_Src); }
};


struct _118d9a790_FieldDecl {
	jule::Ref<_118d9a790_FieldDecl> self{};

	_11911a8a0_Token _field_token{_11911a8a0_Token()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_118d9a790_TypeDecl> _field_kind{jule::Ref<_118d9a790_TypeDecl>()};


	_118d9a790_FieldDecl(_11911a8a0_Token __param_token, jule::Bool __param_public, jule::Bool __param_mutable, jule::Str __param_ident, jule::Ref<_118d9a790_TypeDecl> __param_kind) {
		this->self = jule::Ref<_118d9a790_FieldDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_public = __param_public;
		this->_field_mutable = __param_mutable;
		this->_field_ident = __param_ident;
		this->_field_kind = __param_kind;
	}

	~_118d9a790_FieldDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118d9a790_FieldDecl(void) { this->self = jule::Ref<_118d9a790_FieldDecl>::make(this, nullptr); }

	inline bool operator==(const _118d9a790_FieldDecl &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_public == _Src._field_public &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _118d9a790_FieldDecl &_Src) { return !this->operator==(_Src); }
};


struct _118d9a790_EnumDecl {
	jule::Ref<_118d9a790_EnumDecl> self{};

	_11911a8a0_Token _field_token{_11911a8a0_Token()};
	jule::Bool _field_public{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_118d9a790_TypeDecl> _field_kind{jule::Ref<_118d9a790_TypeDecl>()};
	jule::Slice<jule::Ref<_118d9a790_EnumItemDecl>> _field_items{jule::Slice<jule::Ref<_118d9a790_EnumItemDecl>>()};
	jule::Ref<_118d9a790_CommentGroup> _field_doc_comments{jule::Ref<_118d9a790_CommentGroup>()};


	_118d9a790_EnumDecl(_11911a8a0_Token __param_token, jule::Bool __param_public, jule::Str __param_ident, jule::Ref<_118d9a790_TypeDecl> __param_kind, jule::Slice<jule::Ref<_118d9a790_EnumItemDecl>> __param_items, jule::Ref<_118d9a790_CommentGroup> __param_doc_comments) {
		this->self = jule::Ref<_118d9a790_EnumDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_public = __param_public;
		this->_field_ident = __param_ident;
		this->_field_kind = __param_kind;
		this->_field_items = __param_items;
		this->_field_doc_comments = __param_doc_comments;
	}

	~_118d9a790_EnumDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118d9a790_EnumDecl(void) { this->self = jule::Ref<_118d9a790_EnumDecl>::make(this, nullptr); }

	inline jule::Bool _method_default_typed(void);


	inline bool operator==(const _118d9a790_EnumDecl &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_public == _Src._field_public &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind &&
			this->_field_items == _Src._field_items &&
			this->_field_doc_comments == _Src._field_doc_comments;
	}

	inline bool operator!=(const _118d9a790_EnumDecl &_Src) { return !this->operator==(_Src); }
};


struct _118d9a790_EnumItemDecl {
	jule::Ref<_118d9a790_EnumItemDecl> self{};

	_11911a8a0_Token _field_token{_11911a8a0_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_118d9a790_Expr> _field_expr{jule::Ref<_118d9a790_Expr>()};


	_118d9a790_EnumItemDecl(_11911a8a0_Token __param_token, jule::Str __param_ident, jule::Ref<_118d9a790_Expr> __param_expr) {
		this->self = jule::Ref<_118d9a790_EnumItemDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_expr = __param_expr;
	}

	~_118d9a790_EnumItemDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118d9a790_EnumItemDecl(void) { this->self = jule::Ref<_118d9a790_EnumItemDecl>::make(this, nullptr); }

	inline jule::Bool _method_auto_expr(void);


	inline bool operator==(const _118d9a790_EnumItemDecl &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _118d9a790_EnumItemDecl &_Src) { return !this->operator==(_Src); }
};


struct _118d9a790_UseDecl {
	jule::Ref<_118d9a790_UseDecl> self{};

	_11911a8a0_Token _field_token{_11911a8a0_Token()};
	jule::Str _field_link_path{jule::Str()};
	jule::Bool _field_full{jule::Bool()};
	jule::Slice<_11911a8a0_Token> _field_selected{jule::Slice<_11911a8a0_Token>()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_std{jule::Bool()};


	_118d9a790_UseDecl(_11911a8a0_Token __param_token, jule::Str __param_link_path, jule::Bool __param_full, jule::Slice<_11911a8a0_Token> __param_selected, jule::Bool __param_cpp_linked, jule::Bool __param_std) {
		this->self = jule::Ref<_118d9a790_UseDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_link_path = __param_link_path;
		this->_field_full = __param_full;
		this->_field_selected = __param_selected;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_std = __param_std;
	}

	~_118d9a790_UseDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118d9a790_UseDecl(void) { this->self = jule::Ref<_118d9a790_UseDecl>::make(this, nullptr); }

	inline bool operator==(const _118d9a790_UseDecl &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_link_path == _Src._field_link_path &&
			this->_field_full == _Src._field_full &&
			this->_field_selected == _Src._field_selected &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_std == _Src._field_std;
	}

	inline bool operator!=(const _118d9a790_UseDecl &_Src) { return !this->operator==(_Src); }
};


struct _118d9a790_Case {
	jule::Ref<_118d9a790_Case> self{};

	_11911a8a0_Token _field_token{_11911a8a0_Token()};
	jule::Ref<_118d9a790_ScopeTree> _field_scope{jule::Ref<_118d9a790_ScopeTree>()};
	jule::Slice<jule::Ref<_118d9a790_Expr>> _field_exprs{jule::Slice<jule::Ref<_118d9a790_Expr>>()};


	_118d9a790_Case(_11911a8a0_Token __param_token, jule::Ref<_118d9a790_ScopeTree> __param_scope, jule::Slice<jule::Ref<_118d9a790_Expr>> __param_exprs) {
		this->self = jule::Ref<_118d9a790_Case>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_scope = __param_scope;
		this->_field_exprs = __param_exprs;
	}

	~_118d9a790_Case(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118d9a790_Case(void) { this->self = jule::Ref<_118d9a790_Case>::make(this, nullptr); }

	inline bool operator==(const _118d9a790_Case &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_scope == _Src._field_scope &&
			this->_field_exprs == _Src._field_exprs;
	}

	inline bool operator!=(const _118d9a790_Case &_Src) { return !this->operator==(_Src); }
};


struct _118d9a790_TypeAliasDecl {
	jule::Ref<_118d9a790_TypeAliasDecl> self{};

	jule::Ref<_118d9a790_ScopeTree> _field_scope{jule::Ref<_118d9a790_ScopeTree>()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	_11911a8a0_Token _field_token{_11911a8a0_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_118d9a790_TypeDecl> _field_kind{jule::Ref<_118d9a790_TypeDecl>()};
	jule::Ref<_118d9a790_CommentGroup> _field_doc_comments{jule::Ref<_118d9a790_CommentGroup>()};


	_118d9a790_TypeAliasDecl(jule::Ref<_118d9a790_ScopeTree> __param_scope, jule::Bool __param_public, jule::Bool __param_cpp_linked, _11911a8a0_Token __param_token, jule::Str __param_ident, jule::Ref<_118d9a790_TypeDecl> __param_kind, jule::Ref<_118d9a790_CommentGroup> __param_doc_comments) {
		this->self = jule::Ref<_118d9a790_TypeAliasDecl>::make(this, nullptr);

		this->_field_scope = __param_scope;
		this->_field_public = __param_public;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_kind = __param_kind;
		this->_field_doc_comments = __param_doc_comments;
	}

	~_118d9a790_TypeAliasDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118d9a790_TypeAliasDecl(void) { this->self = jule::Ref<_118d9a790_TypeAliasDecl>::make(this, nullptr); }

	inline bool operator==(const _118d9a790_TypeAliasDecl &_Src) {
		return 
			this->_field_scope == _Src._field_scope &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind &&
			this->_field_doc_comments == _Src._field_doc_comments;
	}

	inline bool operator!=(const _118d9a790_TypeAliasDecl &_Src) { return !this->operator==(_Src); }
};


struct _118d9a790_Else {
	jule::Ref<_118d9a790_Else> self{};

	_11911a8a0_Token _field_token{_11911a8a0_Token()};
	jule::Ref<_118d9a790_ScopeTree> _field_scope{jule::Ref<_118d9a790_ScopeTree>()};


	_118d9a790_Else(_11911a8a0_Token __param_token, jule::Ref<_118d9a790_ScopeTree> __param_scope) {
		this->self = jule::Ref<_118d9a790_Else>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_scope = __param_scope;
	}

	~_118d9a790_Else(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118d9a790_Else(void) { this->self = jule::Ref<_118d9a790_Else>::make(this, nullptr); }

	inline bool operator==(const _118d9a790_Else &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _118d9a790_Else &_Src) { return !this->operator==(_Src); }
};


struct _118d9a790_If {
	jule::Ref<_118d9a790_If> self{};

	_11911a8a0_Token _field_token{_11911a8a0_Token()};
	jule::Ref<_118d9a790_Expr> _field_expr{jule::Ref<_118d9a790_Expr>()};
	jule::Ref<_118d9a790_ScopeTree> _field_scope{jule::Ref<_118d9a790_ScopeTree>()};


	_118d9a790_If(_11911a8a0_Token __param_token, jule::Ref<_118d9a790_Expr> __param_expr, jule::Ref<_118d9a790_ScopeTree> __param_scope) {
		this->self = jule::Ref<_118d9a790_If>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_expr = __param_expr;
		this->_field_scope = __param_scope;
	}

	~_118d9a790_If(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118d9a790_If(void) { this->self = jule::Ref<_118d9a790_If>::make(this, nullptr); }

	inline bool operator==(const _118d9a790_If &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _118d9a790_If &_Src) { return !this->operator==(_Src); }
};


struct _118d9a790_ContSt {
	jule::Ref<_118d9a790_ContSt> self{};

	_11911a8a0_Token _field_token{_11911a8a0_Token()};
	_11911a8a0_Token _field_label{_11911a8a0_Token()};


	_118d9a790_ContSt(_11911a8a0_Token __param_token, _11911a8a0_Token __param_label) {
		this->self = jule::Ref<_118d9a790_ContSt>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_label = __param_label;
	}

	~_118d9a790_ContSt(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118d9a790_ContSt(void) { this->self = jule::Ref<_118d9a790_ContSt>::make(this, nullptr); }

	inline bool operator==(const _118d9a790_ContSt &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_label == _Src._field_label;
	}

	inline bool operator!=(const _118d9a790_ContSt &_Src) { return !this->operator==(_Src); }
};


struct _118d9a790_BreakSt {
	jule::Ref<_118d9a790_BreakSt> self{};

	_11911a8a0_Token _field_token{_11911a8a0_Token()};
	_11911a8a0_Token _field_label{_11911a8a0_Token()};


	_118d9a790_BreakSt(_11911a8a0_Token __param_token, _11911a8a0_Token __param_label) {
		this->self = jule::Ref<_118d9a790_BreakSt>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_label = __param_label;
	}

	~_118d9a790_BreakSt(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118d9a790_BreakSt(void) { this->self = jule::Ref<_118d9a790_BreakSt>::make(this, nullptr); }

	inline bool operator==(const _118d9a790_BreakSt &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_label == _Src._field_label;
	}

	inline bool operator!=(const _118d9a790_BreakSt &_Src) { return !this->operator==(_Src); }
};


struct _118d9a790_VarDecl {
	jule::Ref<_118d9a790_VarDecl> self{};

	jule::Ref<_118d9a790_ScopeTree> _field_scope{jule::Ref<_118d9a790_ScopeTree>()};
	_11911a8a0_Token _field_token{_11911a8a0_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Bool _field_constant{jule::Bool()};
	jule::Bool _field_statically{jule::Bool()};
	jule::Bool _field_reference{jule::Bool()};
	jule::Ref<_118d9a790_CommentGroup> _field_doc_comments{jule::Ref<_118d9a790_CommentGroup>()};
	jule::Ref<_118d9a790_TypeDecl> _field_kind{jule::Ref<_118d9a790_TypeDecl>()};
	jule::Ref<_118d9a790_Expr> _field_expr{jule::Ref<_118d9a790_Expr>()};


	_118d9a790_VarDecl(jule::Ref<_118d9a790_ScopeTree> __param_scope, _11911a8a0_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked, jule::Bool __param_public, jule::Bool __param_mutable, jule::Bool __param_constant, jule::Bool __param_statically, jule::Bool __param_reference, jule::Ref<_118d9a790_CommentGroup> __param_doc_comments, jule::Ref<_118d9a790_TypeDecl> __param_kind, jule::Ref<_118d9a790_Expr> __param_expr) {
		this->self = jule::Ref<_118d9a790_VarDecl>::make(this, nullptr);

		this->_field_scope = __param_scope;
		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_public = __param_public;
		this->_field_mutable = __param_mutable;
		this->_field_constant = __param_constant;
		this->_field_statically = __param_statically;
		this->_field_reference = __param_reference;
		this->_field_doc_comments = __param_doc_comments;
		this->_field_kind = __param_kind;
		this->_field_expr = __param_expr;
	}

	~_118d9a790_VarDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118d9a790_VarDecl(void) { this->self = jule::Ref<_118d9a790_VarDecl>::make(this, nullptr); }

	inline bool operator==(const _118d9a790_VarDecl &_Src) {
		return 
			this->_field_scope == _Src._field_scope &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_public == _Src._field_public &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_constant == _Src._field_constant &&
			this->_field_statically == _Src._field_statically &&
			this->_field_reference == _Src._field_reference &&
			this->_field_doc_comments == _Src._field_doc_comments &&
			this->_field_kind == _Src._field_kind &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _118d9a790_VarDecl &_Src) { return !this->operator==(_Src); }
};


struct _118d9a790_FnDecl {
	jule::Ref<_118d9a790_FnDecl> self{};

	_11911a8a0_Token _field_token{_11911a8a0_Token()};
	jule::Bool _field_global{jule::Bool()};
	jule::Bool _field_unsafety{jule::Bool()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_statically{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Slice<jule::Ref<_118d9a790_Directive>> _field_directives{jule::Slice<jule::Ref<_118d9a790_Directive>>()};
	jule::Ref<_118d9a790_CommentGroup> _field_doc_comments{jule::Ref<_118d9a790_CommentGroup>()};
	jule::Ref<_118d9a790_ScopeTree> _field_scope{jule::Ref<_118d9a790_ScopeTree>()};
	jule::Slice<jule::Ref<_118d9a790_GenericDecl>> _field_generics{jule::Slice<jule::Ref<_118d9a790_GenericDecl>>()};
	jule::Ref<_118d9a790_RetTypeDecl> _field_result{jule::Ref<_118d9a790_RetTypeDecl>()};
	jule::Slice<jule::Ref<_118d9a790_ParamDecl>> _field_params{jule::Slice<jule::Ref<_118d9a790_ParamDecl>>()};


	_118d9a790_FnDecl(_11911a8a0_Token __param_token, jule::Bool __param_global, jule::Bool __param_unsafety, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Bool __param_statically, jule::Str __param_ident, jule::Slice<jule::Ref<_118d9a790_Directive>> __param_directives, jule::Ref<_118d9a790_CommentGroup> __param_doc_comments, jule::Ref<_118d9a790_ScopeTree> __param_scope, jule::Slice<jule::Ref<_118d9a790_GenericDecl>> __param_generics, jule::Ref<_118d9a790_RetTypeDecl> __param_result, jule::Slice<jule::Ref<_118d9a790_ParamDecl>> __param_params) {
		this->self = jule::Ref<_118d9a790_FnDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_global = __param_global;
		this->_field_unsafety = __param_unsafety;
		this->_field_public = __param_public;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_statically = __param_statically;
		this->_field_ident = __param_ident;
		this->_field_directives = __param_directives;
		this->_field_doc_comments = __param_doc_comments;
		this->_field_scope = __param_scope;
		this->_field_generics = __param_generics;
		this->_field_result = __param_result;
		this->_field_params = __param_params;
	}

	~_118d9a790_FnDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118d9a790_FnDecl(void) { this->self = jule::Ref<_118d9a790_FnDecl>::make(this, nullptr); }

	inline bool operator==(const _118d9a790_FnDecl &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_global == _Src._field_global &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_statically == _Src._field_statically &&
			this->_field_ident == _Src._field_ident &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc_comments == _Src._field_doc_comments &&
			this->_field_scope == _Src._field_scope &&
			this->_field_generics == _Src._field_generics &&
			this->_field_result == _Src._field_result &&
			this->_field_params == _Src._field_params;
	}

	inline bool operator!=(const _118d9a790_FnDecl &_Src) { return !this->operator==(_Src); }
};


struct _118d9a790_ParamDecl {
	jule::Ref<_118d9a790_ParamDecl> self{};

	_11911a8a0_Token _field_token{_11911a8a0_Token()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Bool _field_variadic{jule::Bool()};
	jule::Bool _field_reference{jule::Bool()};
	jule::Ref<_118d9a790_TypeDecl> _field_kind{jule::Ref<_118d9a790_TypeDecl>()};
	jule::Str _field_ident{jule::Str()};


	_118d9a790_ParamDecl(_11911a8a0_Token __param_token, jule::Bool __param_mutable, jule::Bool __param_variadic, jule::Bool __param_reference, jule::Ref<_118d9a790_TypeDecl> __param_kind, jule::Str __param_ident) {
		this->self = jule::Ref<_118d9a790_ParamDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_mutable = __param_mutable;
		this->_field_variadic = __param_variadic;
		this->_field_reference = __param_reference;
		this->_field_kind = __param_kind;
		this->_field_ident = __param_ident;
	}

	~_118d9a790_ParamDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118d9a790_ParamDecl(void) { this->self = jule::Ref<_118d9a790_ParamDecl>::make(this, nullptr); }

	inline jule::Bool _method_is_self(void);


	inline jule::Bool _method_is_ref(void);


	inline bool operator==(const _118d9a790_ParamDecl &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_variadic == _Src._field_variadic &&
			this->_field_reference == _Src._field_reference &&
			this->_field_kind == _Src._field_kind &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _118d9a790_ParamDecl &_Src) { return !this->operator==(_Src); }
};


struct _118d9a790_AssignLeft {
	jule::Ref<_118d9a790_AssignLeft> self{};

	_11911a8a0_Token _field_token{_11911a8a0_Token()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Bool _field_reference{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_118d9a790_Expr> _field_expr{jule::Ref<_118d9a790_Expr>()};


	_118d9a790_AssignLeft(_11911a8a0_Token __param_token, jule::Bool __param_mutable, jule::Bool __param_reference, jule::Str __param_ident, jule::Ref<_118d9a790_Expr> __param_expr) {
		this->self = jule::Ref<_118d9a790_AssignLeft>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_mutable = __param_mutable;
		this->_field_reference = __param_reference;
		this->_field_ident = __param_ident;
		this->_field_expr = __param_expr;
	}

	~_118d9a790_AssignLeft(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118d9a790_AssignLeft(void) { this->self = jule::Ref<_118d9a790_AssignLeft>::make(this, nullptr); }

	inline bool operator==(const _118d9a790_AssignLeft &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_reference == _Src._field_reference &&
			this->_field_ident == _Src._field_ident &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _118d9a790_AssignLeft &_Src) { return !this->operator==(_Src); }
};


struct _118d9a790_GotoSt {
	jule::Ref<_118d9a790_GotoSt> self{};

	_11911a8a0_Token _field_token{_11911a8a0_Token()};
	_11911a8a0_Token _field_label{_11911a8a0_Token()};


	_118d9a790_GotoSt(_11911a8a0_Token __param_token, _11911a8a0_Token __param_label) {
		this->self = jule::Ref<_118d9a790_GotoSt>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_label = __param_label;
	}

	~_118d9a790_GotoSt(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118d9a790_GotoSt(void) { this->self = jule::Ref<_118d9a790_GotoSt>::make(this, nullptr); }

	inline bool operator==(const _118d9a790_GotoSt &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_label == _Src._field_label;
	}

	inline bool operator!=(const _118d9a790_GotoSt &_Src) { return !this->operator==(_Src); }
};


struct _118d9a790_GenericDecl {
	jule::Ref<_118d9a790_GenericDecl> self{};

	_11911a8a0_Token _field_token{_11911a8a0_Token()};
	jule::Str _field_ident{jule::Str()};


	_118d9a790_GenericDecl(_11911a8a0_Token __param_token, jule::Str __param_ident) {
		this->self = jule::Ref<_118d9a790_GenericDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
	}

	~_118d9a790_GenericDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118d9a790_GenericDecl(void) { this->self = jule::Ref<_118d9a790_GenericDecl>::make(this, nullptr); }

	inline bool operator==(const _118d9a790_GenericDecl &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _118d9a790_GenericDecl &_Src) { return !this->operator==(_Src); }
};


struct _118d9a790_FnCallExpr {
	jule::Ref<_118d9a790_FnCallExpr> self{};

	_11911a8a0_Token _field_token{_11911a8a0_Token()};
	jule::Ref<_118d9a790_Expr> _field_expr{jule::Ref<_118d9a790_Expr>()};
	jule::Slice<jule::Ref<_118d9a790_TypeDecl>> _field_generics{jule::Slice<jule::Ref<_118d9a790_TypeDecl>>()};
	jule::Slice<jule::Ref<_118d9a790_Expr>> _field_args{jule::Slice<jule::Ref<_118d9a790_Expr>>()};
	jule::Bool _field_concurrent{jule::Bool()};


	_118d9a790_FnCallExpr(_11911a8a0_Token __param_token, jule::Ref<_118d9a790_Expr> __param_expr, jule::Slice<jule::Ref<_118d9a790_TypeDecl>> __param_generics, jule::Slice<jule::Ref<_118d9a790_Expr>> __param_args, jule::Bool __param_concurrent) {
		this->self = jule::Ref<_118d9a790_FnCallExpr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_expr = __param_expr;
		this->_field_generics = __param_generics;
		this->_field_args = __param_args;
		this->_field_concurrent = __param_concurrent;
	}

	~_118d9a790_FnCallExpr(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118d9a790_FnCallExpr(void) { this->self = jule::Ref<_118d9a790_FnCallExpr>::make(this, nullptr); }

	inline bool operator==(const _118d9a790_FnCallExpr &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_generics == _Src._field_generics &&
			this->_field_args == _Src._field_args &&
			this->_field_concurrent == _Src._field_concurrent;
	}

	inline bool operator!=(const _118d9a790_FnCallExpr &_Src) { return !this->operator==(_Src); }
};


struct _118d9a790_Expr {
	jule::Ref<_118d9a790_Expr> self{};

	_11911a8a0_Token _field_token{_11911a8a0_Token()};
	jule::Any _field_kind{jule::Any()};


	_118d9a790_Expr(_11911a8a0_Token __param_token, jule::Any __param_kind) {
		this->self = jule::Ref<_118d9a790_Expr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_kind = __param_kind;
	}

	~_118d9a790_Expr(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118d9a790_Expr(void) { this->self = jule::Ref<_118d9a790_Expr>::make(this, nullptr); }

	inline jule::Bool _method_is_fn_call(void);


	inline bool operator==(const _118d9a790_Expr &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _118d9a790_Expr &_Src) { return !this->operator==(_Src); }
};


struct _118d9a790_IdentTypeDecl {
	jule::Ref<_118d9a790_IdentTypeDecl> self{};

	_11911a8a0_Token _field_token{_11911a8a0_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Slice<jule::Ref<_118d9a790_TypeDecl>> _field_generics{jule::Slice<jule::Ref<_118d9a790_TypeDecl>>()};


	_118d9a790_IdentTypeDecl(_11911a8a0_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked, jule::Slice<jule::Ref<_118d9a790_TypeDecl>> __param_generics) {
		this->self = jule::Ref<_118d9a790_IdentTypeDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_generics = __param_generics;
	}

	~_118d9a790_IdentTypeDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118d9a790_IdentTypeDecl(void) { this->self = jule::Ref<_118d9a790_IdentTypeDecl>::make(this, nullptr); }

	inline jule::Bool _method_is_prim(void);


	inline bool operator==(const _118d9a790_IdentTypeDecl &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_generics == _Src._field_generics;
	}

	inline bool operator!=(const _118d9a790_IdentTypeDecl &_Src) { return !this->operator==(_Src); }
};


struct _118d9a790_TypeDecl {
	jule::Ref<_118d9a790_TypeDecl> self{};

	_11911a8a0_Token _field_token{_11911a8a0_Token()};
	jule::Any _field_kind{jule::Any()};


	_118d9a790_TypeDecl(_11911a8a0_Token __param_token, jule::Any __param_kind) {
		this->self = jule::Ref<_118d9a790_TypeDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_kind = __param_kind;
	}

	~_118d9a790_TypeDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118d9a790_TypeDecl(void) { this->self = jule::Ref<_118d9a790_TypeDecl>::make(this, nullptr); }

	inline bool operator==(const _118d9a790_TypeDecl &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _118d9a790_TypeDecl &_Src) { return !this->operator==(_Src); }
};


struct _118d9a790_Directive {
	jule::Ref<_118d9a790_Directive> self{};

	_11911a8a0_Token _field_token{_11911a8a0_Token()};
	jule::Str _field_tag{jule::Str()};
	jule::Slice<jule::Str> _field_args{jule::Slice<jule::Str>()};


	_118d9a790_Directive(_11911a8a0_Token __param_token, jule::Str __param_tag, jule::Slice<jule::Str> __param_args) {
		this->self = jule::Ref<_118d9a790_Directive>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_tag = __param_tag;
		this->_field_args = __param_args;
	}

	~_118d9a790_Directive(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118d9a790_Directive(void) { this->self = jule::Ref<_118d9a790_Directive>::make(this, nullptr); }

	inline bool operator==(const _118d9a790_Directive &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_tag == _Src._field_tag &&
			this->_field_args == _Src._field_args;
	}

	inline bool operator!=(const _118d9a790_Directive &_Src) { return !this->operator==(_Src); }
};


struct _118d9a790_Comment {
	jule::Ref<_118d9a790_Comment> self{};

	_11911a8a0_Token _field_token{_11911a8a0_Token()};
	jule::Str _field_text{jule::Str()};


	_118d9a790_Comment(_11911a8a0_Token __param_token, jule::Str __param_text) {
		this->self = jule::Ref<_118d9a790_Comment>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_text = __param_text;
	}

	~_118d9a790_Comment(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118d9a790_Comment(void) { this->self = jule::Ref<_118d9a790_Comment>::make(this, nullptr); }

	inline jule::Bool _method_is_directive(void);


	inline bool operator==(const _118d9a790_Comment &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_text == _Src._field_text;
	}

	inline bool operator!=(const _118d9a790_Comment &_Src) { return !this->operator==(_Src); }
};


struct _118d9a790_Node {
	jule::Ref<_118d9a790_Node> self{};

	_11911a8a0_Token _field_token{_11911a8a0_Token()};
	jule::Any _field_data{jule::Any()};


	_118d9a790_Node(_11911a8a0_Token __param_token, jule::Any __param_data) {
		this->self = jule::Ref<_118d9a790_Node>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_data = __param_data;
	}

	~_118d9a790_Node(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118d9a790_Node(void) { this->self = jule::Ref<_118d9a790_Node>::make(this, nullptr); }

	inline jule::Bool _method_is_decl(void);


	inline jule::Bool _method_is_comment(void);


	inline jule::Bool _method_is_impl(void);


	inline jule::Bool _method_is_use_decl(void);


	inline bool operator==(const _118d9a790_Node &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_data == _Src._field_data;
	}

	inline bool operator!=(const _118d9a790_Node &_Src) { return !this->operator==(_Src); }
};


struct _1192e4e90_Vector_0 {
	jule::Ref<_1192e4e90_Vector_0> self{};

	StdJuleVectorBuffer<_11911a8a0_Token> _field__buffer{StdJuleVectorBuffer<_11911a8a0_Token>()};


	_1192e4e90_Vector_0(StdJuleVectorBuffer<_11911a8a0_Token> __param__buffer) {
		this->self = jule::Ref<_1192e4e90_Vector_0>::make(this, nullptr);

		this->_field__buffer = __param__buffer;
	}

	~_1192e4e90_Vector_0(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1192e4e90_Vector_0(void) { this->self = jule::Ref<_1192e4e90_Vector_0>::make(this, nullptr); }

	static inline _1192e4e90_Vector_0 _static_method_new(jule::Int);


	inline jule::Int _method_calc_grow(jule::Int);


	inline void _method_resize_alloc(jule::Int);


	inline void _method_review_allocation(jule::Int);


	inline jule::Int _method_len(void);


	inline jule::Int _method_cap(void);


	inline void _method_dealloc(void);


	inline void _method_set_len(jule::Int);


	inline _11911a8a0_Token _method_at(jule::Int);


	inline void _method_set(jule::Int,_11911a8a0_Token);


	inline void _method_push(_11911a8a0_Token);


	inline void _method_push_front(_11911a8a0_Token);


	inline void _method_append(jule::Slice<_11911a8a0_Token>);


	inline void _method_merge(_1192e4e90_Vector_0);


	inline void _method_merge_front(_1192e4e90_Vector_0);


	inline void _method_remove_range(jule::Int,jule::Int);


	inline void _method_insert(jule::Int,_11911a8a0_Token);


	inline _1192e4e90_Vector_0 _method_slice(jule::Int,jule::Int);


	inline bool operator==(const _1192e4e90_Vector_0 &_Src) {
		return true;
	}

	inline bool operator!=(const _1192e4e90_Vector_0 &_Src) { return !this->operator==(_Src); }
};

struct _1192e4e90_Vector_1 {
	jule::Ref<_1192e4e90_Vector_1> self{};

	StdJuleVectorBuffer<jule::Ref<_118d9a790_Directive>> _field__buffer{StdJuleVectorBuffer<jule::Ref<_118d9a790_Directive>>()};


	_1192e4e90_Vector_1(StdJuleVectorBuffer<jule::Ref<_118d9a790_Directive>> __param__buffer) {
		this->self = jule::Ref<_1192e4e90_Vector_1>::make(this, nullptr);

		this->_field__buffer = __param__buffer;
	}

	~_1192e4e90_Vector_1(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1192e4e90_Vector_1(void) { this->self = jule::Ref<_1192e4e90_Vector_1>::make(this, nullptr); }

	static inline _1192e4e90_Vector_1 _static_method_new(jule::Int);


	inline jule::Int _method_calc_grow(jule::Int);


	inline void _method_resize_alloc(jule::Int);


	inline void _method_review_allocation(jule::Int);


	inline jule::Int _method_len(void);


	inline jule::Int _method_cap(void);


	inline void _method_dealloc(void);


	inline void _method_set_len(jule::Int);


	inline jule::Ref<_118d9a790_Directive> _method_at(jule::Int);


	inline void _method_set(jule::Int,jule::Ref<_118d9a790_Directive>);


	inline void _method_push(jule::Ref<_118d9a790_Directive>);


	inline void _method_push_front(jule::Ref<_118d9a790_Directive>);


	inline void _method_append(jule::Slice<jule::Ref<_118d9a790_Directive>>);


	inline void _method_merge(_1192e4e90_Vector_1);


	inline void _method_merge_front(_1192e4e90_Vector_1);


	inline void _method_remove_range(jule::Int,jule::Int);


	inline void _method_insert(jule::Int,jule::Ref<_118d9a790_Directive>);


	inline _1192e4e90_Vector_1 _method_slice(jule::Int,jule::Int);


	inline bool operator==(const _1192e4e90_Vector_1 &_Src) {
		return true;
	}

	inline bool operator!=(const _1192e4e90_Vector_1 &_Src) { return !this->operator==(_Src); }
};

struct _1192e4e90_Vector_2 {
	jule::Ref<_1192e4e90_Vector_2> self{};

	StdJuleVectorBuffer<jule::Ref<_118d9a790_UseDecl>> _field__buffer{StdJuleVectorBuffer<jule::Ref<_118d9a790_UseDecl>>()};


	_1192e4e90_Vector_2(StdJuleVectorBuffer<jule::Ref<_118d9a790_UseDecl>> __param__buffer) {
		this->self = jule::Ref<_1192e4e90_Vector_2>::make(this, nullptr);

		this->_field__buffer = __param__buffer;
	}

	~_1192e4e90_Vector_2(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1192e4e90_Vector_2(void) { this->self = jule::Ref<_1192e4e90_Vector_2>::make(this, nullptr); }

	static inline _1192e4e90_Vector_2 _static_method_new(jule::Int);


	inline jule::Int _method_calc_grow(jule::Int);


	inline void _method_resize_alloc(jule::Int);


	inline void _method_review_allocation(jule::Int);


	inline jule::Int _method_len(void);


	inline jule::Int _method_cap(void);


	inline void _method_dealloc(void);


	inline void _method_set_len(jule::Int);


	inline jule::Ref<_118d9a790_UseDecl> _method_at(jule::Int);


	inline void _method_set(jule::Int,jule::Ref<_118d9a790_UseDecl>);


	inline void _method_push(jule::Ref<_118d9a790_UseDecl>);


	inline void _method_push_front(jule::Ref<_118d9a790_UseDecl>);


	inline void _method_append(jule::Slice<jule::Ref<_118d9a790_UseDecl>>);


	inline void _method_merge(_1192e4e90_Vector_2);


	inline void _method_merge_front(_1192e4e90_Vector_2);


	inline void _method_remove_range(jule::Int,jule::Int);


	inline void _method_insert(jule::Int,jule::Ref<_118d9a790_UseDecl>);


	inline _1192e4e90_Vector_2 _method_slice(jule::Int,jule::Int);


	inline bool operator==(const _1192e4e90_Vector_2 &_Src) {
		return true;
	}

	inline bool operator!=(const _1192e4e90_Vector_2 &_Src) { return !this->operator==(_Src); }
};

struct _1192e4e90_Vector_3 {
	jule::Ref<_1192e4e90_Vector_3> self{};

	StdJuleVectorBuffer<jule::Ref<_118d9a790_Impl>> _field__buffer{StdJuleVectorBuffer<jule::Ref<_118d9a790_Impl>>()};


	_1192e4e90_Vector_3(StdJuleVectorBuffer<jule::Ref<_118d9a790_Impl>> __param__buffer) {
		this->self = jule::Ref<_1192e4e90_Vector_3>::make(this, nullptr);

		this->_field__buffer = __param__buffer;
	}

	~_1192e4e90_Vector_3(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1192e4e90_Vector_3(void) { this->self = jule::Ref<_1192e4e90_Vector_3>::make(this, nullptr); }

	static inline _1192e4e90_Vector_3 _static_method_new(jule::Int);


	inline jule::Int _method_calc_grow(jule::Int);


	inline void _method_resize_alloc(jule::Int);


	inline void _method_review_allocation(jule::Int);


	inline jule::Int _method_len(void);


	inline jule::Int _method_cap(void);


	inline void _method_dealloc(void);


	inline void _method_set_len(jule::Int);


	inline jule::Ref<_118d9a790_Impl> _method_at(jule::Int);


	inline void _method_set(jule::Int,jule::Ref<_118d9a790_Impl>);


	inline void _method_push(jule::Ref<_118d9a790_Impl>);


	inline void _method_push_front(jule::Ref<_118d9a790_Impl>);


	inline void _method_append(jule::Slice<jule::Ref<_118d9a790_Impl>>);


	inline void _method_merge(_1192e4e90_Vector_3);


	inline void _method_merge_front(_1192e4e90_Vector_3);


	inline void _method_remove_range(jule::Int,jule::Int);


	inline void _method_insert(jule::Int,jule::Ref<_118d9a790_Impl>);


	inline _1192e4e90_Vector_3 _method_slice(jule::Int,jule::Int);


	inline bool operator==(const _1192e4e90_Vector_3 &_Src) {
		return true;
	}

	inline bool operator!=(const _1192e4e90_Vector_3 &_Src) { return !this->operator==(_Src); }
};

struct _1192e4e90_Vector_4 {
	jule::Ref<_1192e4e90_Vector_4> self{};

	StdJuleVectorBuffer<jule::Ref<_118d9a790_Comment>> _field__buffer{StdJuleVectorBuffer<jule::Ref<_118d9a790_Comment>>()};


	_1192e4e90_Vector_4(StdJuleVectorBuffer<jule::Ref<_118d9a790_Comment>> __param__buffer) {
		this->self = jule::Ref<_1192e4e90_Vector_4>::make(this, nullptr);

		this->_field__buffer = __param__buffer;
	}

	~_1192e4e90_Vector_4(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1192e4e90_Vector_4(void) { this->self = jule::Ref<_1192e4e90_Vector_4>::make(this, nullptr); }

	static inline _1192e4e90_Vector_4 _static_method_new(jule::Int);


	inline jule::Int _method_calc_grow(jule::Int);


	inline void _method_resize_alloc(jule::Int);


	inline void _method_review_allocation(jule::Int);


	inline jule::Int _method_len(void);


	inline jule::Int _method_cap(void);


	inline void _method_dealloc(void);


	inline void _method_set_len(jule::Int);


	inline jule::Ref<_118d9a790_Comment> _method_at(jule::Int);


	inline void _method_set(jule::Int,jule::Ref<_118d9a790_Comment>);


	inline void _method_push(jule::Ref<_118d9a790_Comment>);


	inline void _method_push_front(jule::Ref<_118d9a790_Comment>);


	inline void _method_append(jule::Slice<jule::Ref<_118d9a790_Comment>>);


	inline void _method_merge(_1192e4e90_Vector_4);


	inline void _method_merge_front(_1192e4e90_Vector_4);


	inline void _method_remove_range(jule::Int,jule::Int);


	inline void _method_insert(jule::Int,jule::Ref<_118d9a790_Comment>);


	inline _1192e4e90_Vector_4 _method_slice(jule::Int,jule::Int);


	inline bool operator==(const _1192e4e90_Vector_4 &_Src) {
		return true;
	}

	inline bool operator!=(const _1192e4e90_Vector_4 &_Src) { return !this->operator==(_Src); }
};

struct _1192e4e90_Vector_5 {
	jule::Ref<_1192e4e90_Vector_5> self{};

	StdJuleVectorBuffer<_118d9a790_Node> _field__buffer{StdJuleVectorBuffer<_118d9a790_Node>()};


	_1192e4e90_Vector_5(StdJuleVectorBuffer<_118d9a790_Node> __param__buffer) {
		this->self = jule::Ref<_1192e4e90_Vector_5>::make(this, nullptr);

		this->_field__buffer = __param__buffer;
	}

	~_1192e4e90_Vector_5(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1192e4e90_Vector_5(void) { this->self = jule::Ref<_1192e4e90_Vector_5>::make(this, nullptr); }

	static inline _1192e4e90_Vector_5 _static_method_new(jule::Int);


	inline jule::Int _method_calc_grow(jule::Int);


	inline void _method_resize_alloc(jule::Int);


	inline void _method_review_allocation(jule::Int);


	inline jule::Int _method_len(void);


	inline jule::Int _method_cap(void);


	inline void _method_dealloc(void);


	inline void _method_set_len(jule::Int);


	inline _118d9a790_Node _method_at(jule::Int);


	inline void _method_set(jule::Int,_118d9a790_Node);


	inline void _method_push(_118d9a790_Node);


	inline void _method_push_front(_118d9a790_Node);


	inline void _method_append(jule::Slice<_118d9a790_Node>);


	inline void _method_merge(_1192e4e90_Vector_5);


	inline void _method_merge_front(_1192e4e90_Vector_5);


	inline void _method_remove_range(jule::Int,jule::Int);


	inline void _method_insert(jule::Int,_118d9a790_Node);


	inline _1192e4e90_Vector_5 _method_slice(jule::Int,jule::Int);


	inline bool operator==(const _1192e4e90_Vector_5 &_Src) {
		return true;
	}

	inline bool operator!=(const _1192e4e90_Vector_5 &_Src) { return !this->operator==(_Src); }
};

struct _1192e4e90_Vector_6 {
	jule::Ref<_1192e4e90_Vector_6> self{};

	StdJuleVectorBuffer<_13feceeb0_Pass> _field__buffer{StdJuleVectorBuffer<_13feceeb0_Pass>()};


	_1192e4e90_Vector_6(StdJuleVectorBuffer<_13feceeb0_Pass> __param__buffer) {
		this->self = jule::Ref<_1192e4e90_Vector_6>::make(this, nullptr);

		this->_field__buffer = __param__buffer;
	}

	~_1192e4e90_Vector_6(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1192e4e90_Vector_6(void) { this->self = jule::Ref<_1192e4e90_Vector_6>::make(this, nullptr); }

	static inline _1192e4e90_Vector_6 _static_method_new(jule::Int);


	inline jule::Int _method_calc_grow(jule::Int);


	inline void _method_resize_alloc(jule::Int);


	inline void _method_review_allocation(jule::Int);


	inline jule::Int _method_len(void);


	inline jule::Int _method_cap(void);


	inline void _method_dealloc(void);


	inline void _method_set_len(jule::Int);


	inline _13feceeb0_Pass _method_at(jule::Int);


	inline void _method_set(jule::Int,_13feceeb0_Pass);


	inline void _method_push(_13feceeb0_Pass);


	inline void _method_push_front(_13feceeb0_Pass);


	inline void _method_append(jule::Slice<_13feceeb0_Pass>);


	inline void _method_merge(_1192e4e90_Vector_6);


	inline void _method_merge_front(_1192e4e90_Vector_6);


	inline void _method_remove_range(jule::Int,jule::Int);


	inline void _method_insert(jule::Int,_13feceeb0_Pass);


	inline _1192e4e90_Vector_6 _method_slice(jule::Int,jule::Int);


	inline bool operator==(const _1192e4e90_Vector_6 &_Src) {
		return true;
	}

	inline bool operator!=(const _1192e4e90_Vector_6 &_Src) { return !this->operator==(_Src); }
};

struct _1192e4e90_Vector_7 {
	jule::Ref<_1192e4e90_Vector_7> self{};

	StdJuleVectorBuffer<jule::Ref<_11a0945e0_ImportInfo>> _field__buffer{StdJuleVectorBuffer<jule::Ref<_11a0945e0_ImportInfo>>()};


	_1192e4e90_Vector_7(StdJuleVectorBuffer<jule::Ref<_11a0945e0_ImportInfo>> __param__buffer) {
		this->self = jule::Ref<_1192e4e90_Vector_7>::make(this, nullptr);

		this->_field__buffer = __param__buffer;
	}

	~_1192e4e90_Vector_7(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1192e4e90_Vector_7(void) { this->self = jule::Ref<_1192e4e90_Vector_7>::make(this, nullptr); }

	static inline _1192e4e90_Vector_7 _static_method_new(jule::Int);


	inline jule::Int _method_calc_grow(jule::Int);


	inline void _method_resize_alloc(jule::Int);


	inline void _method_review_allocation(jule::Int);


	inline jule::Int _method_len(void);


	inline jule::Int _method_cap(void);


	inline void _method_dealloc(void);


	inline void _method_set_len(jule::Int);


	inline jule::Ref<_11a0945e0_ImportInfo> _method_at(jule::Int);


	inline void _method_set(jule::Int,jule::Ref<_11a0945e0_ImportInfo>);


	inline void _method_push(jule::Ref<_11a0945e0_ImportInfo>);


	inline void _method_push_front(jule::Ref<_11a0945e0_ImportInfo>);


	inline void _method_append(jule::Slice<jule::Ref<_11a0945e0_ImportInfo>>);


	inline void _method_merge(_1192e4e90_Vector_7);


	inline void _method_merge_front(_1192e4e90_Vector_7);


	inline void _method_remove_range(jule::Int,jule::Int);


	inline void _method_insert(jule::Int,jule::Ref<_11a0945e0_ImportInfo>);


	inline _1192e4e90_Vector_7 _method_slice(jule::Int,jule::Int);


	inline bool operator==(const _1192e4e90_Vector_7 &_Src) {
		return true;
	}

	inline bool operator!=(const _1192e4e90_Vector_7 &_Src) { return !this->operator==(_Src); }
};

struct _1192e4e90_Vector_8 {
	jule::Ref<_1192e4e90_Vector_8> self{};

	StdJuleVectorBuffer<jule::Any> _field__buffer{StdJuleVectorBuffer<jule::Any>()};


	_1192e4e90_Vector_8(StdJuleVectorBuffer<jule::Any> __param__buffer) {
		this->self = jule::Ref<_1192e4e90_Vector_8>::make(this, nullptr);

		this->_field__buffer = __param__buffer;
	}

	~_1192e4e90_Vector_8(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1192e4e90_Vector_8(void) { this->self = jule::Ref<_1192e4e90_Vector_8>::make(this, nullptr); }

	static inline _1192e4e90_Vector_8 _static_method_new(jule::Int);


	inline jule::Int _method_calc_grow(jule::Int);


	inline void _method_resize_alloc(jule::Int);


	inline void _method_review_allocation(jule::Int);


	inline jule::Int _method_len(void);


	inline jule::Int _method_cap(void);


	inline void _method_dealloc(void);


	inline void _method_set_len(jule::Int);


	inline jule::Any _method_at(jule::Int);


	inline void _method_set(jule::Int,jule::Any);


	inline void _method_push(jule::Any);


	inline void _method_push_front(jule::Any);


	inline void _method_append(jule::Slice<jule::Any>);


	inline void _method_merge(_1192e4e90_Vector_8);


	inline void _method_merge_front(_1192e4e90_Vector_8);


	inline void _method_remove_range(jule::Int,jule::Int);


	inline void _method_insert(jule::Int,jule::Any);


	inline _1192e4e90_Vector_8 _method_slice(jule::Int,jule::Int);


	inline bool operator==(const _1192e4e90_Vector_8 &_Src) {
		return true;
	}

	inline bool operator!=(const _1192e4e90_Vector_8 &_Src) { return !this->operator==(_Src); }
};

struct _1192e4e90_Vector_9 {
	jule::Ref<_1192e4e90_Vector_9> self{};

	StdJuleVectorBuffer<jule::Ref<_11a245f20_Var>> _field__buffer{StdJuleVectorBuffer<jule::Ref<_11a245f20_Var>>()};


	_1192e4e90_Vector_9(StdJuleVectorBuffer<jule::Ref<_11a245f20_Var>> __param__buffer) {
		this->self = jule::Ref<_1192e4e90_Vector_9>::make(this, nullptr);

		this->_field__buffer = __param__buffer;
	}

	~_1192e4e90_Vector_9(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1192e4e90_Vector_9(void) { this->self = jule::Ref<_1192e4e90_Vector_9>::make(this, nullptr); }

	static inline _1192e4e90_Vector_9 _static_method_new(jule::Int);


	inline jule::Int _method_calc_grow(jule::Int);


	inline void _method_resize_alloc(jule::Int);


	inline void _method_review_allocation(jule::Int);


	inline jule::Int _method_len(void);


	inline jule::Int _method_cap(void);


	inline void _method_dealloc(void);


	inline void _method_set_len(jule::Int);


	inline jule::Ref<_11a245f20_Var> _method_at(jule::Int);


	inline void _method_set(jule::Int,jule::Ref<_11a245f20_Var>);


	inline void _method_push(jule::Ref<_11a245f20_Var>);


	inline void _method_push_front(jule::Ref<_11a245f20_Var>);


	inline void _method_append(jule::Slice<jule::Ref<_11a245f20_Var>>);


	inline void _method_merge(_1192e4e90_Vector_9);


	inline void _method_merge_front(_1192e4e90_Vector_9);


	inline void _method_remove_range(jule::Int,jule::Int);


	inline void _method_insert(jule::Int,jule::Ref<_11a245f20_Var>);


	inline _1192e4e90_Vector_9 _method_slice(jule::Int,jule::Int);


	inline bool operator==(const _1192e4e90_Vector_9 &_Src) {
		return true;
	}

	inline bool operator!=(const _1192e4e90_Vector_9 &_Src) { return !this->operator==(_Src); }
};

struct _1192e4e90_Vector_10 {
	jule::Ref<_1192e4e90_Vector_10> self{};

	StdJuleVectorBuffer<jule::Ref<_11a3c2e70_TypeAlias>> _field__buffer{StdJuleVectorBuffer<jule::Ref<_11a3c2e70_TypeAlias>>()};


	_1192e4e90_Vector_10(StdJuleVectorBuffer<jule::Ref<_11a3c2e70_TypeAlias>> __param__buffer) {
		this->self = jule::Ref<_1192e4e90_Vector_10>::make(this, nullptr);

		this->_field__buffer = __param__buffer;
	}

	~_1192e4e90_Vector_10(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1192e4e90_Vector_10(void) { this->self = jule::Ref<_1192e4e90_Vector_10>::make(this, nullptr); }

	static inline _1192e4e90_Vector_10 _static_method_new(jule::Int);


	inline jule::Int _method_calc_grow(jule::Int);


	inline void _method_resize_alloc(jule::Int);


	inline void _method_review_allocation(jule::Int);


	inline jule::Int _method_len(void);


	inline jule::Int _method_cap(void);


	inline void _method_dealloc(void);


	inline void _method_set_len(jule::Int);


	inline jule::Ref<_11a3c2e70_TypeAlias> _method_at(jule::Int);


	inline void _method_set(jule::Int,jule::Ref<_11a3c2e70_TypeAlias>);


	inline void _method_push(jule::Ref<_11a3c2e70_TypeAlias>);


	inline void _method_push_front(jule::Ref<_11a3c2e70_TypeAlias>);


	inline void _method_append(jule::Slice<jule::Ref<_11a3c2e70_TypeAlias>>);


	inline void _method_merge(_1192e4e90_Vector_10);


	inline void _method_merge_front(_1192e4e90_Vector_10);


	inline void _method_remove_range(jule::Int,jule::Int);


	inline void _method_insert(jule::Int,jule::Ref<_11a3c2e70_TypeAlias>);


	inline _1192e4e90_Vector_10 _method_slice(jule::Int,jule::Int);


	inline bool operator==(const _1192e4e90_Vector_10 &_Src) {
		return true;
	}

	inline bool operator!=(const _1192e4e90_Vector_10 &_Src) { return !this->operator==(_Src); }
};

struct _1192e4e90_Vector_11 {
	jule::Ref<_1192e4e90_Vector_11> self{};

	StdJuleVectorBuffer<jule::Ref<_119099250_Fn>> _field__buffer{StdJuleVectorBuffer<jule::Ref<_119099250_Fn>>()};


	_1192e4e90_Vector_11(StdJuleVectorBuffer<jule::Ref<_119099250_Fn>> __param__buffer) {
		this->self = jule::Ref<_1192e4e90_Vector_11>::make(this, nullptr);

		this->_field__buffer = __param__buffer;
	}

	~_1192e4e90_Vector_11(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1192e4e90_Vector_11(void) { this->self = jule::Ref<_1192e4e90_Vector_11>::make(this, nullptr); }

	static inline _1192e4e90_Vector_11 _static_method_new(jule::Int);


	inline jule::Int _method_calc_grow(jule::Int);


	inline void _method_resize_alloc(jule::Int);


	inline void _method_review_allocation(jule::Int);


	inline jule::Int _method_len(void);


	inline jule::Int _method_cap(void);


	inline void _method_dealloc(void);


	inline void _method_set_len(jule::Int);


	inline jule::Ref<_119099250_Fn> _method_at(jule::Int);


	inline void _method_set(jule::Int,jule::Ref<_119099250_Fn>);


	inline void _method_push(jule::Ref<_119099250_Fn>);


	inline void _method_push_front(jule::Ref<_119099250_Fn>);


	inline void _method_append(jule::Slice<jule::Ref<_119099250_Fn>>);


	inline void _method_merge(_1192e4e90_Vector_11);


	inline void _method_merge_front(_1192e4e90_Vector_11);


	inline void _method_remove_range(jule::Int,jule::Int);


	inline void _method_insert(jule::Int,jule::Ref<_119099250_Fn>);


	inline _1192e4e90_Vector_11 _method_slice(jule::Int,jule::Int);


	inline bool operator==(const _1192e4e90_Vector_11 &_Src) {
		return true;
	}

	inline bool operator!=(const _1192e4e90_Vector_11 &_Src) { return !this->operator==(_Src); }
};

struct _1192e4e90_Vector_12 {
	jule::Ref<_1192e4e90_Vector_12> self{};

	StdJuleVectorBuffer<jule::Ref<_118bb7d70_Struct>> _field__buffer{StdJuleVectorBuffer<jule::Ref<_118bb7d70_Struct>>()};


	_1192e4e90_Vector_12(StdJuleVectorBuffer<jule::Ref<_118bb7d70_Struct>> __param__buffer) {
		this->self = jule::Ref<_1192e4e90_Vector_12>::make(this, nullptr);

		this->_field__buffer = __param__buffer;
	}

	~_1192e4e90_Vector_12(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1192e4e90_Vector_12(void) { this->self = jule::Ref<_1192e4e90_Vector_12>::make(this, nullptr); }

	static inline _1192e4e90_Vector_12 _static_method_new(jule::Int);


	inline jule::Int _method_calc_grow(jule::Int);


	inline void _method_resize_alloc(jule::Int);


	inline void _method_review_allocation(jule::Int);


	inline jule::Int _method_len(void);


	inline jule::Int _method_cap(void);


	inline void _method_dealloc(void);


	inline void _method_set_len(jule::Int);


	inline jule::Ref<_118bb7d70_Struct> _method_at(jule::Int);


	inline void _method_set(jule::Int,jule::Ref<_118bb7d70_Struct>);


	inline void _method_push(jule::Ref<_118bb7d70_Struct>);


	inline void _method_push_front(jule::Ref<_118bb7d70_Struct>);


	inline void _method_append(jule::Slice<jule::Ref<_118bb7d70_Struct>>);


	inline void _method_merge(_1192e4e90_Vector_12);


	inline void _method_merge_front(_1192e4e90_Vector_12);


	inline void _method_remove_range(jule::Int,jule::Int);


	inline void _method_insert(jule::Int,jule::Ref<_118bb7d70_Struct>);


	inline _1192e4e90_Vector_12 _method_slice(jule::Int,jule::Int);


	inline bool operator==(const _1192e4e90_Vector_12 &_Src) {
		return true;
	}

	inline bool operator!=(const _1192e4e90_Vector_12 &_Src) { return !this->operator==(_Src); }
};

struct _1192e4e90_Vector_13 {
	jule::Ref<_1192e4e90_Vector_13> self{};

	StdJuleVectorBuffer<jule::Ref<_118e2b060_Trait>> _field__buffer{StdJuleVectorBuffer<jule::Ref<_118e2b060_Trait>>()};


	_1192e4e90_Vector_13(StdJuleVectorBuffer<jule::Ref<_118e2b060_Trait>> __param__buffer) {
		this->self = jule::Ref<_1192e4e90_Vector_13>::make(this, nullptr);

		this->_field__buffer = __param__buffer;
	}

	~_1192e4e90_Vector_13(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1192e4e90_Vector_13(void) { this->self = jule::Ref<_1192e4e90_Vector_13>::make(this, nullptr); }

	static inline _1192e4e90_Vector_13 _static_method_new(jule::Int);


	inline jule::Int _method_calc_grow(jule::Int);


	inline void _method_resize_alloc(jule::Int);


	inline void _method_review_allocation(jule::Int);


	inline jule::Int _method_len(void);


	inline jule::Int _method_cap(void);


	inline void _method_dealloc(void);


	inline void _method_set_len(jule::Int);


	inline jule::Ref<_118e2b060_Trait> _method_at(jule::Int);


	inline void _method_set(jule::Int,jule::Ref<_118e2b060_Trait>);


	inline void _method_push(jule::Ref<_118e2b060_Trait>);


	inline void _method_push_front(jule::Ref<_118e2b060_Trait>);


	inline void _method_append(jule::Slice<jule::Ref<_118e2b060_Trait>>);


	inline void _method_merge(_1192e4e90_Vector_13);


	inline void _method_merge_front(_1192e4e90_Vector_13);


	inline void _method_remove_range(jule::Int,jule::Int);


	inline void _method_insert(jule::Int,jule::Ref<_118e2b060_Trait>);


	inline _1192e4e90_Vector_13 _method_slice(jule::Int,jule::Int);


	inline bool operator==(const _1192e4e90_Vector_13 &_Src) {
		return true;
	}

	inline bool operator!=(const _1192e4e90_Vector_13 &_Src) { return !this->operator==(_Src); }
};

struct _1192e4e90_Vector_14 {
	jule::Ref<_1192e4e90_Vector_14> self{};

	StdJuleVectorBuffer<jule::Ref<_11a089b40_Enum>> _field__buffer{StdJuleVectorBuffer<jule::Ref<_11a089b40_Enum>>()};


	_1192e4e90_Vector_14(StdJuleVectorBuffer<jule::Ref<_11a089b40_Enum>> __param__buffer) {
		this->self = jule::Ref<_1192e4e90_Vector_14>::make(this, nullptr);

		this->_field__buffer = __param__buffer;
	}

	~_1192e4e90_Vector_14(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1192e4e90_Vector_14(void) { this->self = jule::Ref<_1192e4e90_Vector_14>::make(this, nullptr); }

	static inline _1192e4e90_Vector_14 _static_method_new(jule::Int);


	inline jule::Int _method_calc_grow(jule::Int);


	inline void _method_resize_alloc(jule::Int);


	inline void _method_review_allocation(jule::Int);


	inline jule::Int _method_len(void);


	inline jule::Int _method_cap(void);


	inline void _method_dealloc(void);


	inline void _method_set_len(jule::Int);


	inline jule::Ref<_11a089b40_Enum> _method_at(jule::Int);


	inline void _method_set(jule::Int,jule::Ref<_11a089b40_Enum>);


	inline void _method_push(jule::Ref<_11a089b40_Enum>);


	inline void _method_push_front(jule::Ref<_11a089b40_Enum>);


	inline void _method_append(jule::Slice<jule::Ref<_11a089b40_Enum>>);


	inline void _method_merge(_1192e4e90_Vector_14);


	inline void _method_merge_front(_1192e4e90_Vector_14);


	inline void _method_remove_range(jule::Int,jule::Int);


	inline void _method_insert(jule::Int,jule::Ref<_11a089b40_Enum>);


	inline _1192e4e90_Vector_14 _method_slice(jule::Int,jule::Int);


	inline bool operator==(const _1192e4e90_Vector_14 &_Src) {
		return true;
	}

	inline bool operator!=(const _1192e4e90_Vector_14 &_Src) { return !this->operator==(_Src); }
};

struct _1192e4e90_Vector_15 {
	jule::Ref<_1192e4e90_Vector_15> self{};

	StdJuleVectorBuffer<jule::Ref<_11a091460_Impl>> _field__buffer{StdJuleVectorBuffer<jule::Ref<_11a091460_Impl>>()};


	_1192e4e90_Vector_15(StdJuleVectorBuffer<jule::Ref<_11a091460_Impl>> __param__buffer) {
		this->self = jule::Ref<_1192e4e90_Vector_15>::make(this, nullptr);

		this->_field__buffer = __param__buffer;
	}

	~_1192e4e90_Vector_15(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1192e4e90_Vector_15(void) { this->self = jule::Ref<_1192e4e90_Vector_15>::make(this, nullptr); }

	static inline _1192e4e90_Vector_15 _static_method_new(jule::Int);


	inline jule::Int _method_calc_grow(jule::Int);


	inline void _method_resize_alloc(jule::Int);


	inline void _method_review_allocation(jule::Int);


	inline jule::Int _method_len(void);


	inline jule::Int _method_cap(void);


	inline void _method_dealloc(void);


	inline void _method_set_len(jule::Int);


	inline jule::Ref<_11a091460_Impl> _method_at(jule::Int);


	inline void _method_set(jule::Int,jule::Ref<_11a091460_Impl>);


	inline void _method_push(jule::Ref<_11a091460_Impl>);


	inline void _method_push_front(jule::Ref<_11a091460_Impl>);


	inline void _method_append(jule::Slice<jule::Ref<_11a091460_Impl>>);


	inline void _method_merge(_1192e4e90_Vector_15);


	inline void _method_merge_front(_1192e4e90_Vector_15);


	inline void _method_remove_range(jule::Int,jule::Int);


	inline void _method_insert(jule::Int,jule::Ref<_11a091460_Impl>);


	inline _1192e4e90_Vector_15 _method_slice(jule::Int,jule::Int);


	inline bool operator==(const _1192e4e90_Vector_15 &_Src) {
		return true;
	}

	inline bool operator!=(const _1192e4e90_Vector_15 &_Src) { return !this->operator==(_Src); }
};


struct _118d9a520_File {
	jule::Ref<_118d9a520_File> self{};

	jule::Str _field__path{jule::Str()};
	_1192e4e90_Vector_0 _field__tokens{_1192e4e90_Vector_0()};


	_118d9a520_File(jule::Str __param__path, _1192e4e90_Vector_0 __param__tokens) {
		this->self = jule::Ref<_118d9a520_File>::make(this, nullptr);

		this->_field__path = __param__path;
		this->_field__tokens = __param__tokens;
	}

	~_118d9a520_File(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118d9a520_File(void) { this->self = jule::Ref<_118d9a520_File>::make(this, nullptr); }

	inline jule::Bool _method_is_ok(void);


	inline jule::Str _method_path(void);


	inline jule::Str _method_dir(void);


	inline jule::Str _method_name(void);


	inline jule::Uintptr _method_addr(void);


	inline _1192e4e90_Vector_0 _method_tokens(void);


	inline bool operator==(const _118d9a520_File &_Src) {
		return 
			this->_field__path == _Src._field__path &&
			this->_field__tokens == _Src._field__tokens;
	}

	inline bool operator!=(const _118d9a520_File &_Src) { return !this->operator==(_Src); }
};


struct _11916a220_Lex {
	jule::Ref<_11916a220_Lex> self{};

	jule::Bool _field_first_token_of_line{jule::Bool()};
	_1192e4e90_Vector_0 _field_tokens{_1192e4e90_Vector_0()};
	jule::Slice<jule::U8> _field_data{jule::Slice<jule::U8>()};
	jule::Ref<_118d9a520_File> _field_file{jule::Ref<_118d9a520_File>()};
	jule::Int _field_pos{jule::Int()};
	jule::Int _field_column{jule::Int()};
	jule::Int _field_row{jule::Int()};
	jule::Slice<_13fe81720_Log> _field_errors{jule::Slice<_13fe81720_Log>()};


	_11916a220_Lex(jule::Bool __param_first_token_of_line, _1192e4e90_Vector_0 __param_tokens, jule::Slice<jule::U8> __param_data, jule::Ref<_118d9a520_File> __param_file, jule::Int __param_pos, jule::Int __param_column, jule::Int __param_row, jule::Slice<_13fe81720_Log> __param_errors) {
		this->self = jule::Ref<_11916a220_Lex>::make(this, nullptr);

		this->_field_first_token_of_line = __param_first_token_of_line;
		this->_field_tokens = __param_tokens;
		this->_field_data = __param_data;
		this->_field_file = __param_file;
		this->_field_pos = __param_pos;
		this->_field_column = __param_column;
		this->_field_row = __param_row;
		this->_field_errors = __param_errors;
	}

	~_11916a220_Lex(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11916a220_Lex(void) { this->self = jule::Ref<_11916a220_Lex>::make(this, nullptr); }

	inline void _method_push_err(jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_err_tok(_11911a8a0_Token,jule::Str);


	inline void _method_lex(void);


	inline jule::Str _method_id(jule::Slice<jule::U8>);


	inline jule::Slice<jule::U8> _method_resume(void);


	inline void _method_lex_line_comment(_11911a8a0_Token&);


	inline void _method_lex_range_comment(void);


	inline jule::Str _method_num(jule::Slice<jule::U8>);


	inline jule::Str _method_escape_seq(jule::Slice<jule::U8>);


	inline jule::Str _method_get_rune(jule::Slice<jule::U8>,jule::Bool);


	inline jule::Str _method_lex_rune(jule::Slice<jule::U8>);


	inline jule::Str _method_lex_str(void);


	inline void _method_new_line(void);


	inline jule::Bool _method_is_op(jule::Slice<jule::U8>,jule::Str,jule::Uint,_11911a8a0_Token&);


	inline jule::Bool _method_lex_basic_ops(jule::Slice<jule::U8>,_11911a8a0_Token&);


	inline jule::Bool _method_lex_id(jule::Slice<jule::U8>,_11911a8a0_Token&);


	inline jule::Bool _method_lex_num(jule::Slice<jule::U8>,_11911a8a0_Token&);


	inline _11911a8a0_Token _method_token(void);


	inline bool operator==(const _11916a220_Lex &_Src) {
		return 
			this->_field_first_token_of_line == _Src._field_first_token_of_line &&
			this->_field_tokens == _Src._field_tokens &&
			this->_field_data == _Src._field_data &&
			this->_field_file == _Src._field_file &&
			this->_field_pos == _Src._field_pos &&
			this->_field_column == _Src._field_column &&
			this->_field_row == _Src._field_row &&
			this->_field_errors == _Src._field_errors;
	}

	inline bool operator!=(const _11916a220_Lex &_Src) { return !this->operator==(_Src); }
};


struct _118d8a140_Ast {
	jule::Ref<_118d8a140_Ast> self{};

	jule::Ref<_118d9a520_File> _field_file{jule::Ref<_118d9a520_File>()};
	_1192e4e90_Vector_1 _field_top_directives{_1192e4e90_Vector_1()};
	_1192e4e90_Vector_2 _field_use_decls{_1192e4e90_Vector_2()};
	_1192e4e90_Vector_3 _field_impls{_1192e4e90_Vector_3()};
	_1192e4e90_Vector_4 _field_comments{_1192e4e90_Vector_4()};
	_1192e4e90_Vector_5 _field_decls{_1192e4e90_Vector_5()};


	_118d8a140_Ast(jule::Ref<_118d9a520_File> __param_file, _1192e4e90_Vector_1 __param_top_directives, _1192e4e90_Vector_2 __param_use_decls, _1192e4e90_Vector_3 __param_impls, _1192e4e90_Vector_4 __param_comments, _1192e4e90_Vector_5 __param_decls) {
		this->self = jule::Ref<_118d8a140_Ast>::make(this, nullptr);

		this->_field_file = __param_file;
		this->_field_top_directives = __param_top_directives;
		this->_field_use_decls = __param_use_decls;
		this->_field_impls = __param_impls;
		this->_field_comments = __param_comments;
		this->_field_decls = __param_decls;
	}

	~_118d8a140_Ast(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118d8a140_Ast(void) { this->self = jule::Ref<_118d8a140_Ast>::make(this, nullptr); }

	inline bool operator==(const _118d8a140_Ast &_Src) {
		return 
			this->_field_file == _Src._field_file &&
			this->_field_top_directives == _Src._field_top_directives &&
			this->_field_use_decls == _Src._field_use_decls &&
			this->_field_impls == _Src._field_impls &&
			this->_field_comments == _Src._field_comments &&
			this->_field_decls == _Src._field_decls;
	}

	inline bool operator!=(const _118d8a140_Ast &_Src) { return !this->operator==(_Src); }
};


struct _118bb7d70_Struct {
	jule::Ref<_118bb7d70_Struct> self{};

	jule::Ref<_11a096220_Sema> _field_sema{jule::Ref<_11a096220_Sema>()};
	jule::Slice<jule::Ref<_118bb7d70_Struct>> _field_depends{jule::Slice<jule::Ref<_118bb7d70_Struct>>()};
	jule::Slice<jule::Ref<_118bb7d70_Struct>> _field_uses{jule::Slice<jule::Ref<_118bb7d70_Struct>>()};
	_11911a8a0_Token _field_token{_11911a8a0_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Slice<jule::Ref<_118bb7d70_Field>> _field_fields{jule::Slice<jule::Ref<_118bb7d70_Field>>()};
	_1192e4e90_Vector_11 _field_methods{_1192e4e90_Vector_11()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Slice<jule::Ref<_118d9a790_Directive>> _field_directives{jule::Slice<jule::Ref<_118d9a790_Directive>>()};
	jule::Str _field_doc{jule::Str()};
	jule::Slice<jule::Ref<_118d9a790_GenericDecl>> _field_generics{jule::Slice<jule::Ref<_118d9a790_GenericDecl>>()};
	jule::Slice<jule::Ref<_118e2b060_Trait>> _field_implements{jule::Slice<jule::Ref<_118e2b060_Trait>>()};
	jule::Ref<_13feceeb0_ReferenceStack> _field_references{jule::Ref<_13feceeb0_ReferenceStack>()};
	jule::Slice<jule::Ref<_118bb7d70_StructIns>> _field_instances{jule::Slice<jule::Ref<_118bb7d70_StructIns>>()};


	_118bb7d70_Struct(jule::Ref<_11a096220_Sema> __param_sema, jule::Slice<jule::Ref<_118bb7d70_Struct>> __param_depends, jule::Slice<jule::Ref<_118bb7d70_Struct>> __param_uses, _11911a8a0_Token __param_token, jule::Str __param_ident, jule::Slice<jule::Ref<_118bb7d70_Field>> __param_fields, _1192e4e90_Vector_11 __param_methods, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Slice<jule::Ref<_118d9a790_Directive>> __param_directives, jule::Str __param_doc, jule::Slice<jule::Ref<_118d9a790_GenericDecl>> __param_generics, jule::Slice<jule::Ref<_118e2b060_Trait>> __param_implements, jule::Ref<_13feceeb0_ReferenceStack> __param_references, jule::Slice<jule::Ref<_118bb7d70_StructIns>> __param_instances) {
		this->self = jule::Ref<_118bb7d70_Struct>::make(this, nullptr);

		this->_field_sema = __param_sema;
		this->_field_depends = __param_depends;
		this->_field_uses = __param_uses;
		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_fields = __param_fields;
		this->_field_methods = __param_methods;
		this->_field_public = __param_public;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_directives = __param_directives;
		this->_field_doc = __param_doc;
		this->_field_generics = __param_generics;
		this->_field_implements = __param_implements;
		this->_field_references = __param_references;
		this->_field_instances = __param_instances;
	}

	~_118bb7d70_Struct(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_118bb7d70_Struct(void) { this->self = jule::Ref<_118bb7d70_Struct>::make(this, nullptr); }

	inline jule::Ref<_118bb7d70_StructIns> _method_instance(void);


	inline jule::Ref<_118bb7d70_StructIns> _method_append_instance(jule::Ref<_118bb7d70_StructIns>);


	inline jule::Ref<_119099250_Fn> _method_find_method(jule::Str,jule::Bool);


	inline jule::Ref<_118bb7d70_Field> _method_find_field(jule::Str);


	inline jule::Bool _method_is_implements(jule::Ref<_118e2b060_Trait>);


	inline jule::Bool _method_is_derives(jule::Str);


	inline jule::Bool _method_is_uses(jule::Ref<_118bb7d70_Struct>);


	inline bool operator==(const _118bb7d70_Struct &_Src) {
		return 
			this->_field_sema == _Src._field_sema &&
			this->_field_depends == _Src._field_depends &&
			this->_field_uses == _Src._field_uses &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_fields == _Src._field_fields &&
			this->_field_methods == _Src._field_methods &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc == _Src._field_doc &&
			this->_field_generics == _Src._field_generics &&
			this->_field_implements == _Src._field_implements &&
			this->_field_references == _Src._field_references &&
			this->_field_instances == _Src._field_instances;
	}

	inline bool operator!=(const _118bb7d70_Struct &_Src) { return !this->operator==(_Src); }
};


struct _13feceeb0_ReferenceStack {
	jule::Ref<_13feceeb0_ReferenceStack> self{};

	_1192e4e90_Vector_8 _field_buffer{_1192e4e90_Vector_8()};


	_13feceeb0_ReferenceStack(_1192e4e90_Vector_8 __param_buffer) {
		this->self = jule::Ref<_13feceeb0_ReferenceStack>::make(this, nullptr);

		this->_field_buffer = __param_buffer;
	}

	~_13feceeb0_ReferenceStack(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_13feceeb0_ReferenceStack(void) { this->self = jule::Ref<_13feceeb0_ReferenceStack>::make(this, nullptr); }

	inline jule::Int _method_len(void);


	inline jule::Any _method_at(jule::Int);


	inline void _method_push(jule::Any);


	inline void _method_remove(jule::Int);


	inline jule::Bool _method_exist_0(jule::Ref<_11a245f20_Var>);
	inline jule::Bool _method_exist_1(jule::Ref<_119099250_Fn>);


	inline bool operator==(const _13feceeb0_ReferenceStack &_Src) {
		return 
			this->_field_buffer == _Src._field_buffer;
	}

	inline bool operator!=(const _13feceeb0_ReferenceStack &_Src) { return !this->operator==(_Src); }
};


struct _11a093930_Scope {
	jule::Ref<_11a093930_Scope> self{};

	jule::Ref<_11a093930_Scope> _field_parent{jule::Ref<_11a093930_Scope>()};
	jule::Bool _field_unsafety{jule::Bool()};
	jule::Bool _field_deferred{jule::Bool()};
	_1192e4e90_Vector_8 _field_stmts{_1192e4e90_Vector_8()};


	_11a093930_Scope(jule::Ref<_11a093930_Scope> __param_parent, jule::Bool __param_unsafety, jule::Bool __param_deferred, _1192e4e90_Vector_8 __param_stmts) {
		this->self = jule::Ref<_11a093930_Scope>::make(this, nullptr);

		this->_field_parent = __param_parent;
		this->_field_unsafety = __param_unsafety;
		this->_field_deferred = __param_deferred;
		this->_field_stmts = __param_stmts;
	}

	~_11a093930_Scope(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11a093930_Scope(void) { this->self = jule::Ref<_11a093930_Scope>::make(this, nullptr); }

	inline bool operator==(const _11a093930_Scope &_Src) {
		return 
			this->_field_parent == _Src._field_parent &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_deferred == _Src._field_deferred &&
			this->_field_stmts == _Src._field_stmts;
	}

	inline bool operator!=(const _11a093930_Scope &_Src) { return !this->operator==(_Src); }
};


struct _11a3c2dc0_SymbolTable: public _11aa76f70_Lookup {
	jule::Ref<_11a3c2dc0_SymbolTable> self{};

	jule::Ref<_118d9a520_File> _field_file{jule::Ref<_118d9a520_File>()};
	_1192e4e90_Vector_6 _field_passes{_1192e4e90_Vector_6()};
	_1192e4e90_Vector_7 _field_imports{_1192e4e90_Vector_7()};
	_1192e4e90_Vector_9 _field_vars{_1192e4e90_Vector_9()};
	_1192e4e90_Vector_10 _field_type_aliases{_1192e4e90_Vector_10()};
	_1192e4e90_Vector_12 _field_structs{_1192e4e90_Vector_12()};
	_1192e4e90_Vector_11 _field_funcs{_1192e4e90_Vector_11()};
	_1192e4e90_Vector_13 _field_traits{_1192e4e90_Vector_13()};
	_1192e4e90_Vector_14 _field_enums{_1192e4e90_Vector_14()};
	_1192e4e90_Vector_15 _field_impls{_1192e4e90_Vector_15()};


	_11a3c2dc0_SymbolTable(jule::Ref<_118d9a520_File> __param_file, _1192e4e90_Vector_6 __param_passes, _1192e4e90_Vector_7 __param_imports, _1192e4e90_Vector_9 __param_vars, _1192e4e90_Vector_10 __param_type_aliases, _1192e4e90_Vector_12 __param_structs, _1192e4e90_Vector_11 __param_funcs, _1192e4e90_Vector_13 __param_traits, _1192e4e90_Vector_14 __param_enums, _1192e4e90_Vector_15 __param_impls) {
		this->self = jule::Ref<_11a3c2dc0_SymbolTable>::make(this, nullptr);

		this->_field_file = __param_file;
		this->_field_passes = __param_passes;
		this->_field_imports = __param_imports;
		this->_field_vars = __param_vars;
		this->_field_type_aliases = __param_type_aliases;
		this->_field_structs = __param_structs;
		this->_field_funcs = __param_funcs;
		this->_field_traits = __param_traits;
		this->_field_enums = __param_enums;
		this->_field_impls = __param_impls;
	}

	~_11a3c2dc0_SymbolTable(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11a3c2dc0_SymbolTable(void) { this->self = jule::Ref<_11a3c2dc0_SymbolTable>::make(this, nullptr); }

	inline jule::Ref<_11a0945e0_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ref<_11a0945e0_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ref<_11a0945e0_ImportInfo>)>);


	inline jule::Ref<_11a245f20_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ref<_11a3c2e70_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ref<_118bb7d70_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ref<_119099250_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ref<_118e2b060_Trait> _method_find_trait(jule::Str);


	inline jule::Ref<_11a089b40_Enum> _method_find_enum(jule::Str);


	inline jule::Ref<_11a245f20_Var> _method___find_var(jule::Str,jule::Bool,jule::Bool);


	inline jule::Ref<_11a3c2e70_TypeAlias> _method___find_type_alias(jule::Str,jule::Bool,jule::Bool);


	inline jule::Any _method_def_by_ident(jule::Str,jule::Bool);


	inline jule::Bool _method_is_duplicated_ident(jule::Uintptr,jule::Str,jule::Bool);


	inline bool operator==(const _11a3c2dc0_SymbolTable &_Src) {
		return 
			this->_field_file == _Src._field_file &&
			this->_field_passes == _Src._field_passes &&
			this->_field_imports == _Src._field_imports &&
			this->_field_vars == _Src._field_vars &&
			this->_field_type_aliases == _Src._field_type_aliases &&
			this->_field_structs == _Src._field_structs &&
			this->_field_funcs == _Src._field_funcs &&
			this->_field_traits == _Src._field_traits &&
			this->_field_enums == _Src._field_enums &&
			this->_field_impls == _Src._field_impls;
	}

	inline bool operator!=(const _11a3c2dc0_SymbolTable &_Src) { return !this->operator==(_Src); }
};


inline jule::Int _14108e780_get_last_errno(void);
inline jule::Str _141090180_byte_ptr_to_str(jule::U8*);
inline jule::Int _141090180_stat(jule::U8*,struct stat*);
inline jule::Int _141090180_open(jule::U8*,jule::Int,jule::Int);
inline jule::U8* _141090180_getcwd(jule::U8*,jule::Uint);
inline DIR* _141090180_opendir(jule::U8*);
inline struct dirent* _141090180_readdir(DIR*);
inline jule::Int _141090180_closedir(DIR*);
inline jule::Int _141090180_mkdir(jule::U8*,jule::Int);
inline jule::Int _141090180_rmdir(jule::U8*);
inline jule::Int _141090180_unlink(jule::U8*);
inline jule::I64 _13ff06980_seek(jule::Int,jule::I64,jule::Int);
inline jule::Int _13ff06980_read(jule::Int,void*,jule::Uint);
inline jule::Int _13ff06980_close(jule::Int);
inline jule::Int _13ff06980_write(jule::Int,void*,jule::Uint);
inline void _13ff06980_exit(jule::Int);
inline void _13ff30700_free(void*);
inline jule::Int _14107bc50_get_last_os_error(void);
inline std::tuple<jule::Str,jule::Int> _14107c570_working_dir(void);
inline void _14107c570_init(void);
inline std::tuple<jule::Str,jule::Int> _1410891a0___getwd(void);
inline jule::Str _1410391e0_clean(jule::Str);
inline jule::Str _1410391e0_from_slash(jule::Str);
inline jule::Str _1410391e0_join(jule::Slice<jule::Str>);
inline jule::Str _1410391e0_ext(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _1410391e0_abs(jule::Str);
inline jule::Str _1410391e0_base(jule::Str);
inline jule::Str _1410391e0_dir(jule::Str);
inline jule::Str _1410391e0_volume_name(jule::Str);
inline jule::Bool _141039060_is_path_sep(jule::U8);
inline jule::Bool _141039060_is_abs(jule::Str);
inline jule::Int _141039060_volume_name_len(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _141039060___abs(jule::Str);
inline jule::Str _141039060_str_join(jule::Slice<jule::Str>,jule::Str);
inline jule::Str _141039060___join(jule::Slice<jule::Str>);
inline jule::Int _118fb69d0_leading_zeros64(jule::U64);
inline jule::Int _118fb69d0_trailing_zeros(jule::Uint);
inline jule::Int _118fb69d0_trailing_zeros32(jule::U32);
inline jule::Int _118fb69d0_trailing_zeros64(jule::U64);
inline jule::Int _118fb69d0_len32(jule::U32);
inline jule::Int _118fb69d0_len64(jule::U64);
inline std::tuple<jule::U64,jule::U64> _118fb69d0_add64(jule::U64,jule::U64,jule::U64);
inline std::tuple<jule::U64,jule::U64> _118fb69d0_mul64(jule::U64,jule::U64);
inline jule::U32 _10ffa2650_f32_bits(jule::F32);
inline jule::F32 _10ffa2650_f32_from_bits(jule::U32);
inline jule::U64 _10ffa2650_f64_bits(jule::F64);
inline jule::F64 _10ffa2650_f64_from_bits(jule::U64);
inline jule::F64 _1189bef30_nan(void);
inline jule::Bool _1189bef30_is_nan(jule::F64);
inline jule::F64 _1189bef30_inf(jule::Int);
inline jule::Bool _1189bef30_is_inf(jule::F64,jule::Int);
inline jule::F64 _118a80b10_abs(jule::F64);
inline std::tuple<jule::F64,jule::F64> _10ffc0250_modf(jule::F64);
inline jule::Str _141082340_fmt_float(jule::F64,jule::U8,jule::Int,jule::Int);
inline jule::Slice<jule::U8> _141082340_generic_ftoa(jule::Slice<jule::U8>,jule::F64,jule::U8,jule::Int,jule::Int);
inline jule::Slice<jule::U8> _141082340_big_ftoa(jule::Slice<jule::U8>,jule::Int,jule::U8,jule::Bool,jule::U64,jule::Int,_141082340_FloatInfo&);
inline jule::Slice<jule::U8> _141082340_fmt_digits(jule::Slice<jule::U8>,jule::Bool,jule::Bool,_141082340_DecimalSlice,jule::Int,jule::U8);
inline void _141082340_round_shortest(_13ff7af20_Decimal&,jule::U64,jule::Int,_141082340_FloatInfo&);
inline jule::Slice<jule::U8> _141082340_fmt_e(jule::Slice<jule::U8>,jule::Bool,_141082340_DecimalSlice,jule::Int,jule::U8);
inline jule::Slice<jule::U8> _141082340_fmt_f(jule::Slice<jule::U8>,jule::Bool,_141082340_DecimalSlice,jule::Int);
inline jule::Slice<jule::U8> _141082340_fmt_b(jule::Slice<jule::U8>,jule::Bool,jule::U64,jule::Int,_141082340_FloatInfo&);
inline jule::Slice<jule::U8> _141082340_fmt_x(jule::Slice<jule::U8>,jule::Int,jule::U8,jule::Bool,jule::U64,jule::Int,_141082340_FloatInfo&);
inline jule::Int _141082340_min(jule::Int,jule::Int);
inline jule::Int _141082340_max(jule::Int,jule::Int);
inline jule::U8 _12ff26420_lower(jule::U8);
inline std::tuple<jule::U64,jule::Int> _12ff26420_parse_uint(jule::Str,jule::Int,jule::Int);
inline std::tuple<jule::I64,jule::Int> _12ff26420_parse_int(jule::Str,jule::Int,jule::Int);
inline std::tuple<jule::F64,jule::Bool> _13ff09830_eisel_lemire64(jule::U64,jule::Int,jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _13ff09830_eisel_lemire32(jule::U64,jule::Int,jule::Bool);
inline jule::Int _13ffab0a0_common_prefix_len_ignore_case(jule::Str,jule::Str);
inline std::tuple<jule::F64,jule::Int,jule::Bool> _13ffab0a0_special(jule::Str);
inline std::tuple<jule::U64,jule::Int,jule::Bool,jule::Bool,jule::Bool,jule::Int,jule::Bool> _13ffab0a0_read_float(jule::Str);
inline std::tuple<jule::F64,jule::Bool> _13ffab0a0_atof64exact(jule::U64,jule::Int,jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _13ffab0a0_atof32exact(jule::U64,jule::Int,jule::Bool);
inline std::tuple<jule::F64,jule::Int> _13ffab0a0_atof_hex(jule::Str,_141082340_FloatInfo&,jule::U64,jule::Int,jule::Bool,jule::Bool);
inline std::tuple<jule::F32,jule::Int,jule::Int> _13ffab0a0_atof32(jule::Str);
inline std::tuple<jule::F64,jule::Int,jule::Int> _13ffab0a0_atof64(jule::Str);
inline std::tuple<jule::F64,jule::Int,jule::Int> _13ffab0a0_parse_float_prefix(jule::Str,jule::Int);
inline std::tuple<jule::F64,jule::Int> _13ffab0a0_parse_float(jule::Str,jule::Int);
inline void _13fff9140_ryu_ftoa_fixed32(_141082340_DecimalSlice&,jule::U32,jule::Int,jule::Int);
inline void _13fff9140_ryu_ftoa_fixed64(_141082340_DecimalSlice&,jule::U64,jule::Int,jule::Int);
inline void _13fff9140_format_decimal(_141082340_DecimalSlice&,jule::U64,jule::Bool,jule::Bool,jule::Int);
inline void _13fff9140_ryu_ftoa_shortest(_141082340_DecimalSlice&,jule::U64,jule::Int,_141082340_FloatInfo&);
inline jule::Int _13fff9140_mul_by_log2_log10(jule::Int);
inline jule::Int _13fff9140_mul_by_log10_log2(jule::Int);
inline std::tuple<jule::U64,jule::U64,jule::U64,jule::Int> _13fff9140_compute_bounds(jule::U64,jule::Int,_141082340_FloatInfo&);
inline void _13fff9140_ryu_digits(_141082340_DecimalSlice&,jule::U64,jule::U64,jule::U64,jule::Bool,jule::Bool);
inline void _13fff9140_ryu_digits32(_141082340_DecimalSlice&,jule::U32,jule::U32,jule::U32,jule::Bool,jule::Bool,jule::Int);
inline std::tuple<jule::U32,jule::Int,jule::Bool> _13fff9140_mult64bit_pow10(jule::U32,jule::Int,jule::Int);
inline std::tuple<jule::U64,jule::Int,jule::Bool> _13fff9140_mult128bit_pow10(jule::U64,jule::Int,jule::Int);
inline jule::Bool _13fff9140_divisible_by_pow5(jule::U64,jule::Int);
inline std::tuple<jule::U32,jule::U32> _13fff9140_divmod1e9(jule::U64);
inline void _13ff7af20_trim(_13ff7af20_Decimal&);
inline void _13ff7af20_right_shift(_13ff7af20_Decimal&,jule::Uint);
inline jule::Bool _13ff7af20_prefix_is_less_than(jule::Slice<jule::U8>,jule::Str);
inline void _13ff7af20_left_shift(_13ff7af20_Decimal&,jule::Uint);
inline jule::Bool _13ff7af20_should_round_up(_13ff7af20_Decimal&,jule::Int);
inline jule::Str _10ff65780_fmt_uint(jule::U64,jule::Int);
inline jule::Str _10ff65780_fmt_int(jule::I64,jule::Int);
inline jule::Str _10ff65780_itoa(jule::Int);
inline jule::Str _10ff65780_small(jule::Int);
inline jule::Bool _10ff65780_is_power_of_two(jule::Int);
inline std::tuple<jule::Slice<jule::U8>,jule::Str> _10ff65780_fmt_bits(jule::Slice<jule::U8>,jule::U64,jule::Int,jule::Bool,jule::Bool);
inline void _118e57f00_exit(jule::Int);
inline jule::Str _118e57f00_executable(void);
inline jule::Bool _13fe20550_is_std_header_path(jule::Str);
inline jule::Bool _13fe20550_is_valid_header_ext(jule::Str);
inline jule::Bool _13fe20550_is_valid_cpp_ext(jule::Str);
inline std::tuple<jule::Bool,jule::Bool> _13fe82e00_check_os(jule::Str);
inline std::tuple<jule::Bool,jule::Bool> _13fe82e00_check_arch(jule::Str);
inline jule::Bool _13fe82e00_is_pass_file_annotation(jule::Str);
inline jule::Str _13fe9efa0_errorf(jule::Str,jule::Slice<jule::Any>);
inline jule::Str _13fe9efa0_arg_to_str(jule::Any);
inline jule::Int _13fe9efa0_find_next_fmt(jule::Str);
inline jule::Str _13fe9efa0_apply_fmt(jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _1410150a0_is_top_directive(jule::Str);
inline jule::Bool _1410149e0_is_windows(jule::Str);
inline jule::Bool _1410149e0_is_darwin(jule::Str);
inline jule::Bool _1410149e0_is_linux(jule::Str);
inline jule::Bool _1410149e0_is_i386(jule::Str);
inline jule::Bool _1410149e0_is_amd64(jule::Str);
inline jule::Bool _1410149e0_is_arm64(jule::Str);
inline jule::Bool _1410149e0_is_unix(jule::Str);
inline jule::Bool _1410149e0_is_32bit(jule::Str);
inline jule::Bool _1410149e0_is_64bit(jule::Str);
inline void _1410197f0_exit_err(jule::Str);
inline void _1410197f0_init(void);
inline jule::Int _118d89970_get_last_fs_error(void);
inline std::tuple<jule::Ref<_118da2050_File>,jule::Int> _118d89bd0_open(jule::Str,jule::Int,jule::Int);
inline jule::Int _118d89bd0_remove_file(jule::Str);
inline std::tuple<jule::Ref<_118db5e40_Status>,jule::Int> _118d9e780_stat(jule::Str);
inline std::tuple<jule::Slice<jule::U8>,jule::Int> _118da2050_read_file(jule::Str);
inline std::tuple<jule::Slice<jule::Ref<_118d9e870_DirEntry>>,jule::Int> _118da0200_read_dir(jule::Str);
inline jule::Int _118da0200_create_dir(jule::Str);
inline jule::Int _118da0200_remove_dir(jule::Str);
inline std::tuple<jule::I32,jule::Int> _118dab460_decode_rune(jule::Slice<jule::U8>);
inline std::tuple<jule::I32,jule::Int> _118dab460_decode_rune_str(jule::Str);
inline jule::Bool _11911a8a0_is_unary_op(jule::Str);
inline jule::Bool _11911a8a0_is_bin_op(jule::Str);
inline jule::Bool _11911a8a0_is_str(jule::Str);
inline jule::Bool _11911a8a0_is_raw_str(jule::Str);
inline jule::Bool _11911a8a0_is_rune(jule::Str);
inline jule::Bool _11911a8a0_is_bool(jule::Str);
inline jule::Bool _11911a8a0_contains_any(jule::Str,jule::Str);
inline jule::Bool _11911a8a0_is_float(jule::Str);
inline jule::Bool _11911a8a0_is_num(jule::Str);
inline jule::Bool _11911a8a0_is_ignore_ident(jule::Str);
inline jule::Bool _11911a8a0_is_anon_ident(jule::Str);
inline jule::Bool _11911a8a0_is_space(jule::I32);
inline jule::Bool _11911a8a0_is_letter(jule::I32);
inline jule::Bool _11911a8a0_is_ident_rune(jule::Str);
inline jule::Bool _11911a8a0_is_decimal(jule::U8);
inline jule::Bool _11911a8a0_is_binary(jule::U8);
inline jule::Bool _11911a8a0_is_octal(jule::U8);
inline jule::Bool _11911a8a0_is_hex(jule::U8);
inline jule::Bool _11911a8a0_is_assign(jule::Uint);
inline jule::Bool _11911a8a0_is_postfix_op(jule::Str);
inline jule::Bool _11911a8a0_is_assign_op(jule::Str);
inline jule::Ref<_118d9a520_File> _118d9a520_new_file_set(jule::Str);
inline _13fe81720_Log _11916a220_make_err(jule::Int,jule::Int,jule::Ref<_118d9a520_File>,jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _11916a220_bytes_has_prefix(jule::Slice<jule::U8>,jule::Str);
inline jule::Str _11916a220_float_fmt_e(jule::Slice<jule::U8>,jule::Int);
inline jule::Str _11916a220_float_fmt_p(jule::Slice<jule::U8>,jule::Int);
inline jule::Str _11916a220_float_fmt_dotnp(jule::Slice<jule::U8>,jule::Int);
inline jule::Str _11916a220_float_fmt_dotfp(jule::Slice<jule::U8>,jule::Int);
inline jule::Str _11916a220_float_fmt_dotp(jule::Slice<jule::U8>,jule::Int);
inline jule::Str _11916a220_float_num(jule::Slice<jule::U8>,jule::Int);
inline jule::Str _11916a220_common_num(jule::Slice<jule::U8>);
inline jule::Str _11916a220_binary_num(jule::Slice<jule::U8>);
inline jule::Bool _11916a220_is_float_fmt_e(jule::U8,jule::Int);
inline jule::Bool _11916a220_is_float_fmt_p(jule::U8,jule::Int);
inline jule::Bool _11916a220_is_float_fmt_dotnp(jule::Slice<jule::U8>,jule::Int);
inline jule::Bool _11916a220_is_float_fmt_dotp(jule::Slice<jule::U8>,jule::Int);
inline jule::Bool _11916a220_is_float_fmt_dotfp(jule::Slice<jule::U8>,jule::Int);
inline jule::Str _11916a220_octal_num(jule::Slice<jule::U8>);
inline jule::Str _11916a220_hex_num(jule::Slice<jule::U8>);
inline jule::Str _11916a220_hex_escape(jule::Slice<jule::U8>,jule::Int);
inline jule::Str _11916a220_big_unicode_point_escape(jule::Slice<jule::U8>);
inline jule::Str _11916a220_little_unicode_point_escape(jule::Slice<jule::U8>);
inline jule::Str _11916a220_hex_byte_escape(jule::Slice<jule::U8>);
inline jule::Str _11916a220_byte_escape(jule::Slice<jule::U8>);
inline jule::Slice<_13fe81720_Log> _11916a220_lex(jule::Ref<_118d9a520_File>,jule::Slice<jule::U8>);
inline jule::Ref<_118da92c0_FileInfo> _118da92c0_parse_file(jule::Ref<_118d9a520_File>);
inline std::tuple<jule::Ref<_118d8a140_Ast>,jule::Slice<_13fe81720_Log>> _118da92c0_parse_fileset(jule::Ref<_118d9a520_File>);
inline jule::Ref<_118d9a790_ScopeTree> _11912dd80_new_scope(void);
inline std::tuple<jule::Bool,jule::Bool> _11912dd80_is_st(_11911a8a0_Token,_11911a8a0_Token);
inline std::tuple<jule::Int,jule::Bool> _11912dd80_next_st_pos(jule::Slice<_11911a8a0_Token>,jule::Int);
inline std::tuple<jule::Slice<_11911a8a0_Token>,jule::Bool> _11912dd80_skip_st(jule::Int&,jule::Slice<_11911a8a0_Token>);
inline jule::Slice<jule::Ref<_11912dd80_Stmt>> _11912dd80_split_stms(jule::Slice<_11911a8a0_Token>);
inline jule::Slice<_11911a8a0_Token> _11943fdb0_is_fn_call(jule::Slice<_11911a8a0_Token>);
inline jule::Ref<_11943fdb0_CallData> _11943fdb0_get_call_data(jule::Slice<_11911a8a0_Token>);
inline jule::Slice<_11911a8a0_Token> _11943fdb0_get_block_expr(jule::Slice<_11911a8a0_Token>);
inline std::tuple<jule::Slice<_11911a8a0_Token>,jule::Slice<_11911a8a0_Token>> _11943fdb0_split_colon(jule::Slice<_11911a8a0_Token>);
inline jule::Slice<_11911a8a0_Token> _11943fdb0_eliminate_comments(jule::Slice<_11911a8a0_Token>);
inline jule::Int _11943fdb0_find_lowest_prec_op(jule::Slice<_11911a8a0_Token>);
inline jule::Ref<_118d9a790_IdentExpr> _11943fdb0_build_ident_expr(_11911a8a0_Token);
inline std::tuple<jule::Slice<_11911a8a0_Token>,jule::Int> _11943fdb0_get_range_expr_tokens(jule::Slice<_11911a8a0_Token>);
inline jule::Bool _118dbfd80_check_assign_tokens(jule::Slice<_11911a8a0_Token>);
inline _13fe81720_Log _11953bd10_make_err(jule::Int,jule::Int,jule::Ref<_118d9a520_File>,jule::Str,jule::Slice<jule::Any>);
inline jule::Slice<_11911a8a0_Token> _11953bd10_range(jule::Int&,jule::Str,jule::Str,jule::Slice<_11911a8a0_Token>);
inline std::tuple<jule::Slice<_11911a8a0_Token>,jule::Slice<_11911a8a0_Token>> _11953bd10_range_last(jule::Slice<_11911a8a0_Token>);
inline std::tuple<jule::Slice<jule::Slice<_11911a8a0_Token>>,jule::Slice<_13fe81720_Log>> _11953bd10_parts(jule::Slice<_11911a8a0_Token>,jule::Uint,jule::Bool);
inline jule::Str _11953bd10_get_close_kind_of_brace(jule::Str);
inline _13fe81720_Log _11953bd10_compiler_err(_11911a8a0_Token,jule::Str,jule::Slice<jule::Any>);
inline jule::Ref<_118d9a790_Comment> _11953bd10_build_comment(_11911a8a0_Token);
inline jule::Str _11953bd10_tokstoa(jule::Slice<_11911a8a0_Token>);
inline jule::Ref<_118d9a790_TypeDecl> _11972a4d0_build_void_type(void);
inline jule::Ref<_118d9a790_TypeDecl> _11972a4d0_build_prim_type(_11911a8a0_Token);
inline std::tuple<jule::Slice<_11911a8a0_Token>,jule::Int> _11972a4d0_split_map_range(jule::Slice<_11911a8a0_Token>,jule::Int&);
inline jule::Ref<_11ab854f0_Const> _11ab854f0_new_i64(jule::I64);
inline jule::Ref<_11ab854f0_Const> _11ab854f0_new_u64(jule::U64);
inline jule::Ref<_11ab854f0_Const> _11ab854f0_new_bool(jule::Bool);
inline jule::Ref<_11ab854f0_Const> _11ab854f0_new_str(jule::Str);
inline jule::Ref<_11ab854f0_Const> _11ab854f0_new_f64(jule::F64);
inline jule::Ref<_11ab854f0_Const> _11ab854f0_new_nil(void);
inline void _11ab854f0_lshift_unsig(_11ab854f0_Const&,_11ab854f0_Const&);
inline void _11ab854f0_rshift_unsig(_11ab854f0_Const&,_11ab854f0_Const&);
inline jule::Str _11abc8da0_real_kind_of(jule::Str);
inline jule::Int _11abc8da0_bitsize_of(jule::Str);
inline jule::Str _11abc8da0_int_from_bits(jule::U64);
inline jule::Str _11abc8da0_uint_from_bits(jule::U64);
inline jule::Str _11abc8da0_float_from_bits(jule::U64);
inline jule::Bool _11abc8da0_check_bit_float(jule::Str,jule::Int);
inline jule::U64 _11abc8da0_bitsize_of_float(jule::F64);
inline jule::U64 _11abc8da0_bitsize_of_int(jule::I64);
inline jule::U64 _11abc8da0_bitsize_of_uint(jule::U64);
inline jule::F64 _11ab89af0_min_of(jule::Str);
inline jule::F64 _11ab89af0_max_of(jule::Str);
inline jule::Bool _11ac2f0a0_is_i8_compatible(jule::Str);
inline jule::Bool _11ac2f0a0_is_i16_compatible(jule::Str);
inline jule::Bool _11ac2f0a0_is_i32_compatible(jule::Str);
inline jule::Bool _11ac2f0a0_is_i64_compatible(jule::Str);
inline jule::Bool _11ac2f0a0_is_u8_compatible(jule::Str);
inline jule::Bool _11ac2f0a0_is_u16_compatible(jule::Str);
inline jule::Bool _11ac2f0a0_is_u32_compatible(jule::Str);
inline jule::Bool _11ac2f0a0_is_u64_compatible(jule::Str);
inline jule::Bool _11ac2f0a0_is_f32_compatible(jule::Str);
inline jule::Bool _11ac2f0a0_is_f64_compatible(jule::Str);
inline jule::Bool _11ac2f0a0_types_are_compatible(jule::Str,jule::Str);
inline jule::Bool _11ac2f0a0_is_i16_greater(jule::Str);
inline jule::Bool _11ac2f0a0_is_i32_greater(jule::Str);
inline jule::Bool _11ac2f0a0_is_i64_greater(jule::Str);
inline jule::Bool _11ac2f0a0_is_u8_greater(jule::Str);
inline jule::Bool _11ac2f0a0_is_u16_greater(jule::Str);
inline jule::Bool _11ac2f0a0_is_u32_greater(jule::Str);
inline jule::Bool _11ac2f0a0_is_u64_greater(jule::Str);
inline jule::Bool _11ac2f0a0_is_f32_greater(jule::Str);
inline jule::Bool _11ac2f0a0_is_f64_greater(jule::Str);
inline jule::Bool _11ac2f0a0_is_greater(jule::Str,jule::Str);
inline jule::Bool _11ab8b300_is_sig_int(jule::Str);
inline jule::Bool _11ab8b300_is_unsig_int(jule::Str);
inline jule::Bool _11ab8b300_is_int(jule::Str);
inline jule::Bool _11ab8b300_is_float(jule::Str);
inline jule::Bool _11ab8b300_is_num(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _11acfaa00_is_byte_lit(jule::Str);
inline jule::I32 _11acfaa00_to_rune(jule::Slice<jule::U8>);
inline jule::Str _11acfaa00_to_raw_str(jule::Slice<jule::U8>);
inline jule::Str _11acfaa00_to_str(jule::Slice<jule::U8>);
inline std::tuple<jule::U8,jule::Bool> _11acfaa00_try_btoa_common_esq(jule::Slice<jule::U8>);
inline jule::I32 _11acfaa00_rune_from_esq_seq(jule::Slice<jule::U8>,jule::Int&);
inline jule::Str _11acfaa00_str_esq_seq(jule::Slice<jule::U8>,jule::Int&);
inline jule::Ref<_13feceeb0_ReferenceStack> _13feceeb0_new_reference_stack(void);
inline jule::Str _13feceeb0_str_repeat(jule::Str,jule::Int);
inline jule::Str _13feceeb0_build_doc(jule::Ref<_118d9a790_CommentGroup>);
inline jule::Ref<_11a3c2e70_TypeSymbol> _13feceeb0_build_type(jule::Ref<_118d9a790_TypeDecl>);
inline jule::Ref<_11a53f4f0_Value> _13feceeb0_build_expr(jule::Ref<_118d9a790_Expr>);
inline jule::Ref<_11a3c2e70_TypeAlias> _13feceeb0_build_type_alias(jule::Ref<_118d9a790_TypeAliasDecl>);
inline jule::Ref<_118bb7d70_Field> _13feceeb0_build_field(jule::Ref<_118d9a790_FieldDecl>);
inline jule::Slice<jule::Ref<_118bb7d70_Field>> _13feceeb0_build_fields(jule::Slice<jule::Ref<_118d9a790_FieldDecl>>);
inline jule::Ref<_118bb7d70_Struct> _13feceeb0_build_struct(jule::Ref<_118d9a790_StructDecl>);
inline jule::Ref<_119099250_Param> _13feceeb0_build_param(jule::Ref<_118d9a790_ParamDecl>);
inline jule::Slice<jule::Ref<_119099250_Param>> _13feceeb0_build_params(jule::Slice<jule::Ref<_118d9a790_ParamDecl>>);
inline jule::Ref<_119099250_RetType> _13feceeb0_build_ret_type(jule::Ref<_118d9a790_RetTypeDecl>);
inline jule::Ref<_119099250_Fn> _13feceeb0_build_fn(jule::Ref<_118d9a790_FnDecl>);
inline jule::Slice<jule::Ref<_119099250_Fn>> _13feceeb0_build_methods(jule::Slice<jule::Ref<_118d9a790_FnDecl>>);
inline jule::Ref<_118e2b060_Trait> _13feceeb0_build_trait(jule::Ref<_118d9a790_TraitDecl>);
inline jule::Ref<_11a089b40_EnumItem> _13feceeb0_build_enum_item(jule::Ref<_118d9a790_EnumItemDecl>);
inline jule::Slice<jule::Ref<_11a089b40_EnumItem>> _13feceeb0_build_enum_items(jule::Slice<jule::Ref<_118d9a790_EnumItemDecl>>);
inline jule::Ref<_11a089b40_Enum> _13feceeb0_build_enum(jule::Ref<_118d9a790_EnumDecl>);
inline jule::Ref<_11a245f20_Var> _13feceeb0_build_var(jule::Ref<_118d9a790_VarDecl>);
inline jule::Ref<_11a091460_Impl> _13feceeb0_build_impl(jule::Ref<_118d9a790_Impl>);
inline jule::Ref<_11a093930_ScopeChecker> _11a093930_new_scope_checker_base(jule::Ref<_11a096220_Sema>,jule::Ref<_119099250_FnIns>);
inline jule::Ref<_11a093930_ScopeChecker> _11a093930_new_scope_checker(jule::Ref<_11a096220_Sema>,jule::Ref<_119099250_FnIns>);
inline jule::Ref<_11a093930_ScopeLabel> _11a093930_find_label_parent(jule::Str,jule::Ref<_11a093930_ScopeChecker>);
inline jule::Int _11a093930_count_match_type(jule::Ref<_11a093930_Match>,jule::Ref<_11a3c2e70_TypeKind>);
inline jule::Slice<jule::Ref<_11a53f4f0_Data>> _11a093930_get_datas_from_tuple_data(jule::Ref<_11a53f4f0_Data>);
inline jule::Slice<jule::Any> _11a093930_get_expr_models(jule::Any);
inline jule::Bool _11a093930_check_mut(jule::Ref<_11a096220_Sema>,jule::Ref<_11a53f4f0_Data>,jule::Ref<_11a53f4f0_Data>,_11911a8a0_Token);
inline jule::Bool _11a093930_check_assign(jule::Ref<_11a096220_Sema>,jule::Ref<_11a53f4f0_Data>,jule::Ref<_11a53f4f0_Data>,_11911a8a0_Token);
inline jule::Bool _11a093930_is_valid_ast_st_for_next_st(jule::Any);
inline jule::Bool _11a093930_is_valid_st_for_next_st(jule::Any);
inline jule::Bool _11a093930_st_is_def(jule::Any);
inline jule::Ref<_11a245f20_Var> _11a0945e0_find_var_in_package(jule::Slice<jule::Ref<_11a3c2dc0_SymbolTable>>,jule::Str,jule::Bool);
inline jule::Ref<_11a3c2e70_TypeAlias> _11a0945e0_find_type_alias_in_package(jule::Slice<jule::Ref<_11a3c2dc0_SymbolTable>>,jule::Str,jule::Bool);
inline jule::Ref<_118bb7d70_Struct> _11a0945e0_find_struct_in_package(jule::Slice<jule::Ref<_11a3c2dc0_SymbolTable>>,jule::Str,jule::Bool);
inline jule::Ref<_119099250_Fn> _11a0945e0_find_fn_in_package(jule::Slice<jule::Ref<_11a3c2dc0_SymbolTable>>,jule::Str,jule::Bool);
inline jule::Ref<_118e2b060_Trait> _11a0945e0_find_trait_in_package(jule::Slice<jule::Ref<_11a3c2dc0_SymbolTable>>,jule::Str);
inline jule::Ref<_11a089b40_Enum> _11a0945e0_find_enum_in_package(jule::Slice<jule::Ref<_11a3c2dc0_SymbolTable>>,jule::Str);
inline _13fe81720_Log _11a096220_compiler_err(_11911a8a0_Token,jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _11a096220_imp_is_lookupable(jule::Ref<_11a0945e0_ImportInfo>,jule::Str);
inline jule::Slice<jule::Ref<_11a245f20_Var>> _11a096220_build_ret_vars(jule::Ref<_119099250_FnIns>);
inline jule::Slice<jule::Ref<_11a245f20_Var>> _11a096220_build_param_vars(jule::Ref<_119099250_FnIns>);
inline jule::Slice<jule::Ref<_11a3c2e70_TypeAlias>> _11a096220_build_generic_type_aliases(jule::Ref<_119099250_FnIns>);
inline jule::Ref<_11a3c2dc0_SymbolTable> _11a096220_find_file(jule::Slice<jule::Ref<_11a3c2dc0_SymbolTable>>,jule::Ref<_118d9a520_File>);
inline std::tuple<jule::Bool,jule::Bool> _11a096220_conditional_has_ret(jule::Ref<_11a093930_Conditional>);
inline jule::Bool _11a096220_match_has_ret(jule::Ref<_11a093930_Match>);
inline std::tuple<jule::Bool,jule::Bool,jule::Bool> _11a096220___has_ret(jule::Ref<_11a093930_Scope>);
inline jule::Bool _11a096220_has_ret(jule::Ref<_11a093930_Scope>);
inline jule::Slice<jule::Ref<_11a3c2e70_TypeKind>> _11a21f8a0_get_fn_result_types(jule::Ref<_119099250_FnIns>);
inline jule::Bool _11a21f8a0_trait_has_reference_receiver(jule::Ref<_118e2b060_Trait>);
inline jule::Bool _11a21f8a0_float_assignable(jule::Str,jule::Ref<_11a53f4f0_Data>);
inline jule::Bool _11a21f8a0_sig_assignable(jule::Str,jule::Ref<_11a53f4f0_Data>);
inline jule::Bool _11a21f8a0_unsig_assignable(jule::Str,jule::Ref<_11a53f4f0_Data>);
inline jule::Bool _11a21f8a0_int_assignable(jule::Str,jule::Ref<_11a53f4f0_Data>);
inline jule::Any _11a53f4f0_find_builtins_import(jule::Str,jule::Ref<_11a0945e0_ImportInfo>);
inline jule::Any _11a53f4f0_find_builtins_sema(jule::Str,jule::Ref<_11a096220_Sema>);
inline jule::Bool _11a53f4f0_is_ok_for_shifting(jule::Ref<_11a53f4f0_Data>);
inline jule::Bool _11a53f4f0_is_instanced_struct(jule::Ref<_118bb7d70_StructIns>);
inline void _11a53f4f0_normalize_bitsize(jule::Ref<_11a53f4f0_Data>);
inline void _11a53f4f0_normalize_type(jule::Ref<_11a53f4f0_Data>);
inline void _11a53f4f0_apply_cast_kind_model(jule::Ref<_11a53f4f0_Data>);
inline void _11a53f4f0_apply_cast_kind(jule::Ref<_11a53f4f0_Data>);
inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_build_void_data(void);
inline jule::Str _11a53f4f0_kind_by_bitsize(jule::Any);
inline jule::Str _11a53f4f0_check_data_for_integer_indexing(jule::Ref<_11a53f4f0_Data>);
inline jule::Bool _11a3c2e70_can_get_ptr(jule::Ref<_11a53f4f0_Data>);
inline jule::Bool _11a3c2e70_is_lvalue(jule::Ref<_11a3c2e70_TypeKind>);
inline jule::Bool _11a3c2e70_is_mut(jule::Ref<_11a3c2e70_TypeKind>);
inline jule::Bool _11a3c2e70_supports_cloning(jule::Ref<_11a3c2e70_TypeKind>);
inline jule::Bool _11a3c2e70_is_nil_compatible(jule::Ref<_11a3c2e70_TypeKind>);
inline jule::Bool _11a3c2e70_is_valid_for_ref(jule::Ref<_11a3c2e70_TypeKind>);
inline jule::Bool _11a3c2e70_is_variadicable(jule::Ref<_11a3c2e70_TypeKind>);
inline jule::Str _11a3c2e70_build_link_path_by_tokens(jule::Slice<_11911a8a0_Token>);
inline jule::Ref<_11a3c2e70_Prim> _11a3c2e70_build_prim_type(jule::Str);
inline jule::Ref<_118bb7d70_Struct> _11a3c2e70_get_struct_from_kind(jule::Ref<_11a3c2e70_TypeKind>);
inline jule::Bool _11a3c2e70_is_prim(jule::Str);
inline std::tuple<jule::Ref<_11a3c2dc0_SymbolTable>,jule::Slice<_13fe81720_Log>> _11a3c6730_build_symbols(jule::Ref<_118d8a140_Ast>,jule::Trait<_11a0945e0_Importer>,jule::Ref<_13feceeb0_SymbolBuilder>);
inline std::tuple<jule::Ref<_11a0945e0_Package>,jule::Slice<_13fe81720_Log>> _11a3c6730___analyze_package(jule::Slice<jule::Ref<_118d8a140_Ast>>,jule::Trait<_11a0945e0_Importer>);
inline std::tuple<jule::Ref<_11a0945e0_Package>,jule::Slice<_13fe81720_Log>> _11a3c6730_analyze_package(jule::Slice<jule::Ref<_118d8a140_Ast>>,jule::Trait<_11a0945e0_Importer>);
inline void _11aa913b0_init(void);
inline jule::Ref<_119099250_FnIns> _11aa913b0_find_builtin_fn(jule::Str);
inline jule::Ref<_11a3c2e70_TypeAlias> _11aa913b0_find_builtin_type_alias(jule::Str);
inline jule::Ref<_118e2b060_Trait> _11aa913b0_find_builtin_trait(jule::Str);
inline jule::Any _11aa913b0_find_builtin_def(jule::Str);
inline jule::Any _11aa913b0_find_builtin_def_std_mem(jule::Str);
inline jule::Any _11aa913b0_find_package_builtin_def(jule::Str,jule::Str);
inline jule::Ref<_11a53f4f0_Data> _11aa913b0_builtin_caller_common_plain(jule::Ref<_11a53f4f0_Eval>,jule::Ref<_118d9a790_FnCallExpr>,jule::Ref<_11a53f4f0_Data>);
inline jule::Ref<_11a53f4f0_Data> _11aa913b0_builtin_caller_common(jule::Ref<_11a53f4f0_Eval>,jule::Ref<_118d9a790_FnCallExpr>,jule::Ref<_11a53f4f0_Data>);
inline jule::Ref<_11a53f4f0_Data> _11aa913b0_builtin_caller_common_mut(jule::Ref<_11a53f4f0_Eval>,jule::Ref<_118d9a790_FnCallExpr>,jule::Ref<_11a53f4f0_Data>);
inline jule::Ref<_11a53f4f0_Data> _11aa913b0_builtin_caller_out(jule::Ref<_11a53f4f0_Eval>,jule::Ref<_118d9a790_FnCallExpr>,jule::Ref<_11a53f4f0_Data>);
inline jule::Ref<_11a53f4f0_Data> _11aa913b0_builtin_caller_outln(jule::Ref<_11a53f4f0_Eval>,jule::Ref<_118d9a790_FnCallExpr>,jule::Ref<_11a53f4f0_Data>);
inline jule::Ref<_11a53f4f0_Data> _11aa913b0_builtin_caller_new(jule::Ref<_11a53f4f0_Eval>,jule::Ref<_118d9a790_FnCallExpr>,jule::Ref<_11a53f4f0_Data>);
inline jule::Ref<_11a53f4f0_Data> _11aa913b0_builtin_caller_real(jule::Ref<_11a53f4f0_Eval>,jule::Ref<_118d9a790_FnCallExpr>,jule::Ref<_11a53f4f0_Data>);
inline jule::Ref<_11a53f4f0_Data> _11aa913b0_builtin_caller_drop(jule::Ref<_11a53f4f0_Eval>,jule::Ref<_118d9a790_FnCallExpr>,jule::Ref<_11a53f4f0_Data>);
inline jule::Ref<_11a53f4f0_Data> _11aa913b0_builtin_caller_panic(jule::Ref<_11a53f4f0_Eval>,jule::Ref<_118d9a790_FnCallExpr>,jule::Ref<_11a53f4f0_Data>);
inline jule::Ref<_11a53f4f0_Data> _11aa913b0_builtin_caller_make(jule::Ref<_11a53f4f0_Eval>,jule::Ref<_118d9a790_FnCallExpr>,jule::Ref<_11a53f4f0_Data>);
inline jule::Ref<_11a53f4f0_Data> _11aa913b0_builtin_caller_append(jule::Ref<_11a53f4f0_Eval>,jule::Ref<_118d9a790_FnCallExpr>,jule::Ref<_11a53f4f0_Data>);
inline jule::Ref<_11a53f4f0_Data> _11aa913b0_builtin_caller_copy(jule::Ref<_11a53f4f0_Eval>,jule::Ref<_118d9a790_FnCallExpr>,jule::Ref<_11a53f4f0_Data>);
inline jule::Ref<_11a53f4f0_Data> _11aa913b0_builtin_caller_recover(jule::Ref<_11a53f4f0_Eval>,jule::Ref<_118d9a790_FnCallExpr>,jule::Ref<_11a53f4f0_Data>);
inline jule::Ref<_11a53f4f0_Data> _11aa913b0_builtin_caller_clone(jule::Ref<_11a53f4f0_Eval>,jule::Ref<_118d9a790_FnCallExpr>,jule::Ref<_11a53f4f0_Data>);
inline jule::Ref<_11a53f4f0_Data> _11aa913b0_builtin_caller_std_mem_size_of(jule::Ref<_11a53f4f0_Eval>,jule::Ref<_118d9a790_FnCallExpr>,jule::Ref<_11a53f4f0_Data>);
inline jule::Ref<_11a53f4f0_Data> _11aa913b0_builtin_caller_std_mem_align_of(jule::Ref<_11a53f4f0_Eval>,jule::Ref<_118d9a790_FnCallExpr>,jule::Ref<_11a53f4f0_Data>);
inline jule::Bool _118d3e580_eval_directive_ident(jule::Str);
inline jule::Bool _118d3e580_eval_directive_part(jule::Str);
inline jule::Slice<jule::Str> _118d3e580_split_operans(jule::Str,jule::Str);
inline jule::Bool _118d3e580_eval_directive_expr(jule::Str);
inline void _118d5bd10_set_os_flags(void);
inline void _118d5bd10_set_arch_flags(void);
inline void _118d5bd10_init(void);
inline void _118d6ac90_exit_err(jule::Str);
inline jule::Slice<jule::U8> _118d6ac90_read_buff(jule::Str);
inline _13fe81720_Log _118d6ac90_flat_compiler_err(jule::Str);
inline std::tuple<jule::Slice<jule::Ref<_118d9e870_DirEntry>>,jule::Str> _118d6ac90_read_package_dirents(jule::Str);
inline jule::Str _118d6ac90_concat_all_parts(jule::Slice<jule::Str>);
inline jule::Bool _118d6ac90_is_pass_build_directives(jule::Ref<_118d8a140_Ast>&);
inline void _10fee6360_push_passes(jule::Ref<_11a0945e0_Package>,jule::Slice<jule::Str>&);
inline jule::Slice<jule::Str> _10fee6360_get_all_unique_passes(jule::Ref<_11a0945e0_Package>,jule::Slice<jule::Ref<_11a0945e0_ImportInfo>>);
inline std::tuple<jule::Ref<_10fee6360_IR>,jule::Slice<_13fe81720_Log>> _10fee6360_build_ir(jule::Str);
inline jule::Bool _13fe7c170_is_exist_0(jule::Slice<jule::Any>,jule::Ref<_119099250_Fn>);
inline jule::Bool _13fe7c170_is_exist_1(jule::Slice<jule::Any>,jule::Ref<_11a245f20_Var>);
inline jule::Bool _13fe7c170_is_exist_2(jule::Slice<jule::Any>,jule::Ref<_118bb7d70_Struct>);
inline jule::Bool _13fe7c170_is_exist_3(jule::Slice<jule::Any>,jule::Ref<_118e2b060_Trait>);
inline jule::Bool _13fe7c170_is_exist_ref(jule::Slice<jule::Any>,jule::Any);
inline jule::Bool _13fe7c170_is_dead(jule::Any);
inline void _13fe7c170_drop_ref(jule::Slice<jule::Any>&,jule::Int);
inline jule::Bool _13fe7c170_is_all_references_are_dead_0(jule::Ref<_13feceeb0_ReferenceStack>);
inline jule::Bool _13fe7c170_is_all_references_are_dead_1(jule::Ref<_13feceeb0_ReferenceStack>);
inline jule::Bool _13fe7c170_is_all_references_are_dead_2(jule::Ref<_13feceeb0_ReferenceStack>);
inline jule::Bool _13fe7c170_is_fn_dead(jule::Ref<_119099250_Fn>);
inline jule::Bool _13fe7c170_is_var_dead(jule::Ref<_11a245f20_Var>);
inline jule::Bool _13fe7c170_is_struct_dead(jule::Ref<_118bb7d70_Struct>);
inline jule::Bool _13fe7c170_is_trait_dead(jule::Ref<_118e2b060_Trait>);
inline void _13fe7c170_eliminate_dead_functions(_1192e4e90_Vector_11&);
inline void _13fe7c170_eliminate_dead_globals(jule::Ref<_11a0945e0_Package>);
inline void _13fe7c170_eliminate_dead_functions_package(jule::Ref<_11a0945e0_Package>);
inline void _13fe7c170_eliminate_dead_structs(jule::Ref<_11a0945e0_Package>);
inline void _13fe7c170_eliminate_dead_traits(jule::Ref<_11a0945e0_Package>);
inline void _13fe7c170_eliminate_dead_code_package(jule::Ref<_11a0945e0_Package>);
inline void _13fe7c170_eliminate_dead_code(jule::Ref<_10fee6360_IR>);
inline void _10fea5860_eliminate_dead_code_of_scope(jule::Ref<_11a093930_Scope>);
inline void _119083710_push_opt_level(jule::Int);
inline jule::Bool _119083710_is_opt_enabled(jule::Str);
inline jule::Str _11909cfa0_gen_if(jule::Ref<_11a093930_If>);
inline jule::Str _11909cfa0_gen_conditional(jule::Ref<_11a093930_Conditional>);
inline jule::Str _11909cfa0_gen_inf_iter(jule::Ref<_11a093930_InfIter>);
inline jule::Str _11909cfa0_gen_while_iter(jule::Ref<_11a093930_WhileIter>);
inline jule::Trait<_11909cfa0_RangeSetter> _11909cfa0_get_range_setter(jule::Ref<_11a093930_RangeIter>);
inline jule::Str _11909cfa0_gen_range_iter(jule::Ref<_11a093930_RangeIter>);
inline jule::Str _11909cfa0_gen_cont(jule::Ref<_11a093930_ContSt>);
inline jule::Str _11909cfa0_gen_label(jule::Ref<_11a093930_Label>);
inline jule::Str _11909cfa0_gen_goto(jule::Ref<_11a093930_GotoSt>);
inline jule::Str _11909cfa0_gen_postfix(jule::Ref<_11a093930_Postfix>);
inline jule::Str _11909cfa0_gen_assign(jule::Ref<_11a093930_Assign>);
inline jule::Str _11909cfa0_gen_multi_assign(jule::Ref<_11a093930_MultiAssign>);
inline jule::Str _11909cfa0_gen_case(jule::Ref<_11a093930_Match>,jule::Ref<_11a093930_Case>);
inline jule::Str _11909cfa0_gen_match(jule::Ref<_11a093930_Match>);
inline jule::Str _11909cfa0_gen_fall_st(jule::Ref<_11a093930_FallSt>);
inline jule::Str _11909cfa0_gen_break_st(jule::Ref<_11a093930_BreakSt>);
inline jule::Str _11909cfa0_gen_ret_vars(jule::Ref<_11a093930_RetSt>);
inline jule::Str _11909cfa0_gen_ret_expr_tuple(jule::Ref<_11a093930_RetSt>);
inline jule::Str _11909cfa0_gen_ret_expr(jule::Ref<_11a093930_RetSt>);
inline jule::Str _11909cfa0_gen_ret_st(jule::Ref<_11a093930_RetSt>);
inline jule::Str _11909cfa0_gen_recover(jule::Ref<_11a093930_Recover>);
inline jule::Str _11909cfa0_gen_data_expr(jule::Ref<_11a53f4f0_Data>);
inline jule::Str _11909cfa0_gen_st(jule::Any);
inline jule::Str _11909cfa0_gen_scope(jule::Ref<_11a093930_Scope>);
inline jule::Str _11909cfa0_gen_fn_scope(jule::Ref<_119099250_FnIns>);
inline jule::Str _11909cfa0_gen_method_scope(jule::Ref<_119099250_FnIns>);
inline jule::Str _11ad8ca40_get_accessor(jule::Ref<_11a3c2e70_TypeKind>);
inline jule::Str _11ad8ca40_decompose_common_esq(jule::U8);
inline jule::Str _11ad8ca40_sbtoa(jule::U8);
inline jule::Str _11ad8ca40_get_str_model(jule::Ref<_11ab854f0_Const>);
inline jule::Str _11ad8ca40_get_bool_model(jule::Ref<_11ab854f0_Const>);
inline jule::Str _11ad8ca40_get_nil_model(void);
inline jule::Str _11ad8ca40_gen_float_special_cases(jule::F64);
inline jule::Str _11ad8ca40_get_f32_model(jule::Ref<_11ab854f0_Const>);
inline jule::Str _11ad8ca40_get_f64_model(jule::Ref<_11ab854f0_Const>);
inline jule::Str _11ad8ca40_get_float_model(jule::Ref<_11a53f4f0_Data>);
inline jule::Str _11ad8ca40_i64toa(jule::I64);
inline jule::Str _11ad8ca40_get_i64_model(jule::Ref<_11ab854f0_Const>);
inline jule::Str _11ad8ca40_get_u64_model(jule::Ref<_11ab854f0_Const>);
inline jule::Str _11ad8ca40_gen_const_expr(jule::Ref<_11a53f4f0_Data>);
inline jule::Str _11ad8ca40_gen_const_expr_model(jule::Ref<_11ab854f0_Const>);
inline jule::Str _11ad8ca40_gen_binop_expr_model(jule::Ref<_119748ec0_BinopExprModel>);
inline jule::Str _11ad8ca40_gen_var_expr_model(jule::Ref<_11a245f20_Var>);
inline jule::Str _11ad8ca40_gen_struct_expr_model(jule::Ref<_118bb7d70_Struct>);
inline jule::Str _11ad8ca40_gen_struct_ins_expr_model(jule::Ref<_118bb7d70_StructIns>);
inline jule::Str _11ad8ca40_gen_unary_expr_model(jule::Ref<_119748ec0_UnaryExprModel>);
inline jule::Str _11ad8ca40_gen_get_ref_ptr_expr_model(jule::Ref<_119748ec0_GetRefPtrExprModel>);
inline jule::Str _11ad8ca40_gen_cpp_struct_lit_expr_model(jule::Ref<_119748ec0_StructLitExprModel>);
inline jule::Str _11ad8ca40_gen_struct_lit_expr_model(jule::Ref<_119748ec0_StructLitExprModel>);
inline jule::Str _11ad8ca40_gen_alloc_struct_lit_expr_model(jule::Ref<_119748ec0_AllocStructLitExprModel>);
inline jule::Str _11ad8ca40_gen_casting_expr_model(jule::Ref<_119748ec0_CastingExprModel>);
inline jule::Str _11ad8ca40_gen_arg_expr_models(jule::Slice<jule::Any>);
inline jule::Str _11ad8ca40_gen_fn_call_expr_model(jule::Ref<_119748ec0_FnCallExprModel>);
inline jule::Str _11ad8ca40_gen_slice_expr_model(jule::Ref<_119748ec0_SliceExprModel>);
inline jule::Str _11ad8ca40_gen_indexing_expr_model(jule::Ref<_119748ec0_IndexigExprModel>);
inline jule::Str _11ad8ca40_gen_anon_fn_expr_model(jule::Ref<_119748ec0_AnonFnExprModel>);
inline jule::Str _11ad8ca40_gen_map_expr_model(jule::Ref<_119748ec0_MapExprModel>);
inline jule::Str _11ad8ca40_gen_slicing_expr_model(jule::Ref<_119748ec0_SlicingExprModel>);
inline jule::Str _11ad8ca40_gen_trait_sub_ident_expr_model(jule::Ref<_119748ec0_TraitSubIdentExprModel>);
inline jule::Str _11ad8ca40_gen_struct_sub_ident_expr_model(jule::Ref<_119748ec0_StructSubIdentExprModel>);
inline jule::Str _11ad8ca40_gen_common_ident_expr_model(jule::Ref<_119748ec0_CommonIdentExprModel>);
inline jule::Str _11ad8ca40_gen_common_sub_ident_expr_model(jule::Ref<_119748ec0_CommonSubIdentExprModel>);
inline jule::Str _11ad8ca40_gen_array_expr_model(jule::Ref<_119748ec0_ArrayExprModel>);
inline jule::Str _11ad8ca40_gen_fn_ins_expr_model(jule::Ref<_119099250_FnIns>);
inline jule::Str _11ad8ca40_gen_tuple_expr_model(jule::Ref<_119748ec0_TupleExprModel>);
inline jule::Str _11ad8ca40_gen_builtin_new_call_expr_model(jule::Ref<_119748ec0_BuiltinNewCallExprModel>);
inline jule::Str _11ad8ca40_gen_builtin_out_call_expr_model(jule::Ref<_119748ec0_BuiltinOutCallExprModel>);
inline jule::Str _11ad8ca40_gen_builtin_outln_call_expr_model(jule::Ref<_119748ec0_BuiltinOutlnCallExprModel>);
inline jule::Str _11ad8ca40_gen_builtin_real_call_expr_model(jule::Ref<_119748ec0_BuiltinRealCallExprModel>);
inline jule::Str _11ad8ca40_gen_builtin_drop_call_expr_model(jule::Ref<_119748ec0_BuiltinDropCallExprModel>);
inline jule::Str _11ad8ca40_gen_builtin_panic_call_expr_model(jule::Ref<_119748ec0_BuiltinPanicCallExprModel>);
inline jule::Str _11ad8ca40_gen_builtin_make_call_expr_model(jule::Ref<_119748ec0_BuiltinMakeCallExprModel>);
inline jule::Str _11ad8ca40_gen_builtin_clone_call_expr_model(jule::Ref<_119748ec0_BuiltinCloneCallExprModel>);
inline jule::Str _11ad8ca40_gen_sizeof_expr_model(jule::Ref<_119748ec0_SizeofExprModel>);
inline jule::Str _11ad8ca40_gen_alignof_expr_model(jule::Ref<_119748ec0_AlignofExprModel>);
inline jule::Str _11ad8ca40_gen_rune_expr_model(jule::Ref<_119748ec0_RuneExprModel>);
inline jule::Str _11ad8ca40_gen_builtin_error_trait_sub_ident_expr_model(jule::Ref<_119748ec0_BuiltinErrorTraitSubIdentExprModel>);
inline jule::Str _11ad8ca40_gen_explicit_deref_expr_model(jule::Ref<_119748ec0_ExplicitDerefExprModel>);
inline jule::Str _11ad8ca40_gen_struct_static_ident_expr_model(jule::Ref<_119748ec0_StructStaticIdentExprModel>);
inline jule::Str _11ad8ca40_gen_expr_model(jule::Any);
inline jule::Str _11ad8ca40_gen_expr(jule::Any);
inline jule::Str _11ad8ca40_gen_val(jule::Ref<_11a53f4f0_Value>);
inline jule::Str _11ad8ca40_get_init_expr(jule::Ref<_11a3c2e70_TypeKind>);
inline jule::Str _11ae5dd20_get_derive_fn_decl_clone(jule::Ref<_118bb7d70_Struct>);
inline jule::Str _11ae5dd20_get_derive_fn_def_clone(jule::Ref<_118bb7d70_Struct>);
inline jule::Str _11ae60410_as_ident(jule::Str);
inline jule::Str _11ae60410_as_jt(jule::Str);
inline jule::Str _11ae60410_get_ptr_as_ident(jule::Uintptr);
inline jule::Str _11ae60410_as_out_ident(jule::Str,jule::Uintptr);
inline jule::Str _11ae60410_as_local_ident(jule::Int,jule::Int,jule::Str);
inline jule::Str _11ae60410_fn_out_ident(jule::Ref<_119099250_Fn>);
inline jule::Str _11ae60410_fn_ins_out_ident(jule::Ref<_119099250_FnIns>);
inline jule::Str _11ae60410_trait_out_ident(jule::Ref<_118e2b060_Trait>);
inline jule::Str _11ae60410_param_out_ident(jule::Ref<_119099250_Param>);
inline jule::Str _11ae60410_struct_out_ident(jule::Ref<_118bb7d70_Struct>);
inline jule::Str _11ae60410_struct_ins_out_ident(jule::Ref<_118bb7d70_StructIns>);
inline jule::Str _11ae60410_field_out_ident(jule::Ref<_118bb7d70_Field>);
inline jule::Str _11ae60410_var_out_ident(jule::Ref<_11a245f20_Var>);
inline jule::Str _11ae60410_iter_begin_label_ident(jule::Uintptr);
inline jule::Str _11ae60410_iter_end_label_ident(jule::Uintptr);
inline jule::Str _11ae60410_iter_next_label_ident(jule::Uintptr);
inline jule::Str _11ae60410_label_ident(jule::Str);
inline jule::Str _11ae60410_match_end_label_ident(jule::Uintptr);
inline jule::Str _11ae60410_case_begin_label_ident(jule::Uintptr);
inline jule::Str _11ae60410_case_end_label_ident(jule::Uintptr);
inline jule::Bool _11a1932e0_has_directive(jule::Slice<jule::Ref<_118d9a790_Directive>>,jule::Str);
inline jule::Str _11a1932e0_gen_prim_kind(jule::Ref<_11a3c2e70_Prim>);
inline jule::Str _11a1932e0_gen_tuple_kind(jule::Ref<_11a3c2e70_Tuple>);
inline jule::Str _11a1932e0_as_ref_kind(jule::Str);
inline jule::Str _11a1932e0_gen_ref_kind(jule::Ref<_11a3c2e70_Ref>);
inline jule::Str _11a1932e0_gen_ptr_kind(jule::Ref<_11a3c2e70_Ptr>);
inline jule::Str _11a1932e0_gen_enum_kind(jule::Ref<_11a089b40_Enum>);
inline jule::Str _11a1932e0_as_slice_kind(jule::Ref<_11a3c2e70_TypeKind>);
inline jule::Str _11a1932e0_gen_slice_kind(jule::Ref<_11a3c2e70_Slc>);
inline jule::Str _11a1932e0_gen_map_kind(jule::Ref<_11a3c2e70_Map>);
inline jule::Str _11a1932e0_gen_trait_kind_from_ident(jule::Str);
inline jule::Str _11a1932e0_gen_trait_kind(jule::Ref<_118e2b060_Trait>);
inline jule::Str _11a1932e0_gen_struct_kind(jule::Ref<_118bb7d70_Struct>);
inline jule::Str _11a1932e0_gen_struct_kind_ins(jule::Ref<_118bb7d70_StructIns>);
inline jule::Str _11a1932e0_gen_array_kind(jule::Ref<_11a3c2e70_Arr>);
inline jule::Str _11a1932e0_gen_fn_anon_decl(jule::Ref<_119099250_FnIns>);
inline jule::Str _11a1932e0_gen_fn_kind(jule::Ref<_119099250_FnIns>);
inline jule::Str _11a1932e0_gen_type_kind(jule::Ref<_11a3c2e70_TypeKind>);
inline void _11a1c3f00_add_indent(void);
inline void _11a1c3f00_done_indent(void);
inline jule::Str _11a1c3f00_indent(void);
inline jule::Bool _11a1c3f00_is_cpp_header_file(jule::Str);
inline jule::Str _11a1c3f00_gen_links(jule::Ref<_10fee6360_IR>);
inline jule::Str _11a1c3f00_gen_fn_result(jule::Ref<_119099250_Fn>);
inline jule::Str _11a1c3f00_gen_fn_ins_result(jule::Ref<_119099250_FnIns>);
inline jule::Str _11a1c3f00_gen_param_prototype(jule::Ref<_119099250_Param>);
inline jule::Str _11a1c3f00_gen_param_ins(jule::Ref<_119099250_ParamIns>);
inline jule::Str _11a1c3f00_gen_param_ins_prototype(jule::Ref<_119099250_ParamIns>);
inline jule::Str _11a1c3f00_gen_param(jule::Ref<_119099250_Param>);
inline jule::Str _11a1c3f00_gen_params(jule::Slice<jule::Ref<_119099250_Param>>);
inline jule::Str _11a1c3f00_gen_params_ins(jule::Slice<jule::Ref<_119099250_ParamIns>>);
inline jule::Str _11a1c3f00_gen_params_prototypes(jule::Slice<jule::Ref<_119099250_ParamIns>>);
inline jule::Str _11a1c3f00_gen_trait(jule::Ref<_118e2b060_Trait>);
inline jule::Str _11a1c3f00_gen_traits_tbl(jule::Ref<_11a3c2dc0_SymbolTable>);
inline jule::Str _11a1c3f00_gen_traits_pkg(jule::Ref<_11a0945e0_Package>);
inline jule::Str _11a1c3f00_gen_traits(jule::Ref<_10fee6360_IR>);
inline jule::Str _11a1c3f00_gen_trait_prototype(jule::Ref<_118e2b060_Trait>);
inline jule::Str _11a1c3f00_gen_trait_prototypes(jule::Ref<_11a0945e0_Package>);
inline jule::Str _11a1c3f00_gen_struct_plain_prototype(jule::Ref<_118bb7d70_Struct>);
inline jule::Str _11a1c3f00_gen_struct_plain_prototypes(jule::Slice<jule::Ref<_118bb7d70_Struct>>);
inline jule::Str _11a1c3f00_gen_struct_traits(jule::Ref<_118bb7d70_Struct>);
inline jule::Str _11a1c3f00_gen_field_decl(jule::Ref<_118bb7d70_FieldIns>);
inline jule::Str _11a1c3f00_gen_struct_self_field_type_kind(jule::Ref<_118bb7d70_StructIns>);
inline jule::Str _11a1c3f00_gen_struct_self_field(jule::Ref<_118bb7d70_StructIns>);
inline jule::Str _11a1c3f00_gen_struct_self_field_init_st(jule::Ref<_118bb7d70_StructIns>);
inline jule::Str _11a1c3f00_gen_struct_constructor(jule::Ref<_118bb7d70_StructIns>);
inline jule::Str _11a1c3f00_gen_struct_destructor(jule::Ref<_118bb7d70_StructIns>);
inline jule::Str _11a1c3f00_gen_struct_operators(jule::Ref<_118bb7d70_StructIns>);
inline jule::Str _11a1c3f00_gen_struct_derive_defs_prototypes(jule::Ref<_118bb7d70_StructIns>);
inline jule::Str _11a1c3f00_gen_struct_ins_prototype(jule::Ref<_118bb7d70_StructIns>);
inline jule::Str _11a1c3f00_gen_struct_prototype(jule::Ref<_118bb7d70_Struct>);
inline jule::Str _11a1c3f00_gen_struct_prototypes(jule::Slice<jule::Ref<_118bb7d70_Struct>>);
inline jule::Str _11a1c3f00_gen_fn_decl_head(jule::Ref<_119099250_FnIns>,jule::Bool);
inline jule::Str _11a1c3f00_gen_fn_prototype(jule::Ref<_119099250_Fn>,jule::Bool);
inline jule::Str _11a1c3f00_gen_fn_prototypes(jule::Ref<_11a0945e0_Package>);
inline jule::Str _11a1c3f00_gen_prototypes(jule::Ref<_10fee6360_IR>,jule::Slice<jule::Ref<_118bb7d70_Struct>>);
inline jule::Str _11a1c3f00_gen_var_init_expr(jule::Ref<_11a245f20_Var>,jule::Str);
inline jule::Str _11a1c3f00_gen_var(jule::Ref<_11a245f20_Var>);
inline jule::Str _11a1c3f00_gen_globals(jule::Slice<jule::Ref<_11a245f20_Var>>);
inline jule::Str _11a1c3f00_gen_fn(jule::Ref<_119099250_Fn>);
inline jule::Str _11a1c3f00_gen_pkg_fns(jule::Ref<_11a0945e0_Package>);
inline jule::Str _11a1c3f00_gen_struct_method_defs(jule::Ref<_118bb7d70_StructIns>);
inline jule::Str _11a1c3f00_gen_struct_ostream(jule::Ref<_118bb7d70_StructIns>);
inline jule::Str _11a1c3f00_gen_struct_derive_defs(jule::Ref<_118bb7d70_StructIns>);
inline jule::Str _11a1c3f00_gen_struct_ins(jule::Ref<_118bb7d70_StructIns>);
inline jule::Str _11a1c3f00_gen_struct(jule::Ref<_118bb7d70_Struct>);
inline jule::Str _11a1c3f00_gen_structs(jule::Slice<jule::Ref<_118bb7d70_Struct>>);
inline jule::Str _11a1c3f00_gen_fns(jule::Ref<_10fee6360_IR>);
inline void _11a1c3f00_push_init(jule::Ref<_11a0945e0_Package>,jule::Str&);
inline jule::Str _11a1c3f00_gen_init_caller(jule::Ref<_10fee6360_IR>);
inline void _11a1c3f00_append_standard(jule::Str&,jule::Str,jule::Str);
inline jule::Str _11a1c3f00_gen(jule::Ref<_10fee6360_IR>);
inline jule::Bool _11a1c4520_is_struct_ordered(jule::Slice<jule::Ref<_118bb7d70_Struct>>,jule::Ref<_118bb7d70_Struct>);
inline void _11a1c4520_order_structures(jule::Slice<jule::Ref<_118bb7d70_Struct>>);
inline jule::Bool _11a1c4520_is_var_ordered(jule::Slice<jule::Ref<_11a245f20_Var>>,jule::Ref<_11a245f20_Var>);
inline void _11a1c4520_order_variables(jule::Slice<jule::Ref<_11a245f20_Var>>);
inline jule::Str _141006360_str_repeat(jule::Str,jule::Int);
inline void _141006360_print_error_message(jule::Str);
inline void _141006360_help(void);
inline void _141006360_version(void);
inline void _141006360_tool_distos(void);
inline void _141006360_tool_distarch(void);
inline void _141006360_tool(void);
inline jule::Bool _141006360_process_command(void);
inline void _141006360_init(void);
inline void _141006360_exit_err(jule::Str);
void entry_point(void);
inline std::tuple<jule::Str,jule::Str> _13fe1e4a0_get_option(jule::Slice<jule::Str>,jule::Int&);
inline jule::Str _13fe1e4a0_get_option_value(jule::Slice<jule::Str>,jule::Int&);
inline void _13fe1e4a0_parse_out_option(jule::Slice<jule::Str>,jule::Int&);
inline void _13fe1e4a0_parse_opt_option(jule::Slice<jule::Str>,jule::Int&);
inline void _13fe1e4a0_check_target_arch(jule::Str);
inline void _13fe1e4a0_check_target_os(jule::Str);
inline void _13fe1e4a0_parse_target_option(jule::Slice<jule::Str>,jule::Int&);
inline void _13fe1e4a0_parse_compiler_option(jule::Slice<jule::Str>,jule::Int&);
inline jule::Str _13fe1e4a0_parse_options(jule::Slice<jule::Str>);
inline void _13fe1e4a0_write_output(jule::Str,jule::Str);
inline void _13fe1e4a0_clear_objects(void);
inline void _13fe1e4a0_compile_ir(jule::Str,jule::Str);
inline void _13fe1e4a0_do_spell(jule::Str,jule::Str,jule::Str);
inline void _13fe1e4a0_check_mode(void);
inline void _13fe1e4a0_check_compiler(void);
inline void _13fe1e4a0_set(void);
inline void _13fe1e4a0_print_logs(jule::Slice<_13fe81720_Log>);
inline jule::Bool _13fe1e4a0_is_cpp_source_file(jule::Str);
inline std::tuple<jule::Str,jule::Str> _13fe1e4a0_gen_compile_cmd(jule::Str,jule::Ref<_10fee6360_IR>);
inline jule::Str _13fe1e4a0_get_compile_path(void);
inline void _13fe1e4a0_apply_target_independent_optimizations(jule::Ref<_10fee6360_IR>);
inline void _13fe1e4a0_compile_command(void);


static jule::Str _13fe1e4a0_COMPILER = jule::Str("", 0);
static jule::Str _13fe1e4a0_COMPILER_PATH = jule::Str("", 0);
static jule::Str _13fe1e4a0_OUT_DIR = jule::Str("dist", 4);
static jule::Int _13fe1e4a0_MODE = 0LLU;
static jule::Str _13fe1e4a0_OUT_NAME = jule::Str("ir.cpp", 6);
static jule::Str _13fe1e4a0_OUT = jule::Str("", 0);
static jule::Slice<jule::Str> _14107c570_ARGS = nullptr;
static jule::Slice<jule::Str> _14107c570_ENV = nullptr;
static jule::Array<jule::U8,32> _118fb69d0_DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
static jule::Array<jule::U8,64> _118fb69d0_DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
static _141082340_FloatInfo _141082340_F32_INFO = _141082340_FloatInfo(23LLU,8LLU,-127LL);
static _141082340_FloatInfo _141082340_F64_INFO = _141082340_FloatInfo(52LLU,11LLU,-1023LL);
static jule::Array<jule::Array<jule::U64,2>,696> _13ff09830_DETAILED_POWS_OF_TEN = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
static jule::Slice<jule::Int> _13ffab0a0_POWTAB = jule::Slice<jule::Int>({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
static jule::Slice<jule::F64> _13ffab0a0_F64_POW10 = jule::Slice<jule::F64>({1e+00,1e+01,1e+02,1e+03,1e+04,1e+05,1e+06,1e+07,1e+08,1e+09,1e+10,1e+11,1e+12,1e+13,1e+14,1e+15,1e+16,1e+17,1e+18,1e+19,1e+20,1e+21,1e+22});
static jule::Slice<jule::F32> _13ffab0a0_F32_POW10 = jule::Slice<jule::F32>({1e+00,1e+01,1e+02,1e+03,1e+04,1e+05,1e+06,1e+07,1e+08,1e+09,1e+10});
static jule::Array<jule::U64,20> _13fff9140_U64_POW10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
static jule::Slice<_13ff7af20_LeftCheat> _13ff7af20_LEFTCHEATS = jule::Slice<_13ff7af20_LeftCheat>({_13ff7af20_LeftCheat(0LL,jule::Str("", 0)),_13ff7af20_LeftCheat(1LL,jule::Str("5", 1)),_13ff7af20_LeftCheat(1LL,jule::Str("25", 2)),_13ff7af20_LeftCheat(1LL,jule::Str("125", 3)),_13ff7af20_LeftCheat(2LL,jule::Str("625", 3)),_13ff7af20_LeftCheat(2LL,jule::Str("3125", 4)),_13ff7af20_LeftCheat(2LL,jule::Str("15625", 5)),_13ff7af20_LeftCheat(3LL,jule::Str("78125", 5)),_13ff7af20_LeftCheat(3LL,jule::Str("390625", 6)),_13ff7af20_LeftCheat(3LL,jule::Str("1953125", 7)),_13ff7af20_LeftCheat(4LL,jule::Str("9765625", 7)),_13ff7af20_LeftCheat(4LL,jule::Str("48828125", 8)),_13ff7af20_LeftCheat(4LL,jule::Str("244140625", 9)),_13ff7af20_LeftCheat(4LL,jule::Str("1220703125", 10)),_13ff7af20_LeftCheat(5LL,jule::Str("6103515625", 10)),_13ff7af20_LeftCheat(5LL,jule::Str("30517578125", 11)),_13ff7af20_LeftCheat(5LL,jule::Str("152587890625", 12)),_13ff7af20_LeftCheat(6LL,jule::Str("762939453125", 12)),_13ff7af20_LeftCheat(6LL,jule::Str("3814697265625", 13)),_13ff7af20_LeftCheat(6LL,jule::Str("19073486328125", 14)),_13ff7af20_LeftCheat(7LL,jule::Str("95367431640625", 14)),_13ff7af20_LeftCheat(7LL,jule::Str("476837158203125", 15)),_13ff7af20_LeftCheat(7LL,jule::Str("2384185791015625", 16)),_13ff7af20_LeftCheat(7LL,jule::Str("11920928955078125", 17)),_13ff7af20_LeftCheat(8LL,jule::Str("59604644775390625", 17)),_13ff7af20_LeftCheat(8LL,jule::Str("298023223876953125", 18)),_13ff7af20_LeftCheat(8LL,jule::Str("1490116119384765625", 19)),_13ff7af20_LeftCheat(9LL,jule::Str("7450580596923828125", 19)),_13ff7af20_LeftCheat(9LL,jule::Str("37252902984619140625", 20)),_13ff7af20_LeftCheat(9LL,jule::Str("186264514923095703125", 21)),_13ff7af20_LeftCheat(10LL,jule::Str("931322574615478515625", 21)),_13ff7af20_LeftCheat(10LL,jule::Str("4656612873077392578125", 22)),_13ff7af20_LeftCheat(10LL,jule::Str("23283064365386962890625", 23)),_13ff7af20_LeftCheat(10LL,jule::Str("116415321826934814453125", 24)),_13ff7af20_LeftCheat(11LL,jule::Str("582076609134674072265625", 24)),_13ff7af20_LeftCheat(11LL,jule::Str("2910383045673370361328125", 25)),_13ff7af20_LeftCheat(11LL,jule::Str("14551915228366851806640625", 26)),_13ff7af20_LeftCheat(12LL,jule::Str("72759576141834259033203125", 26)),_13ff7af20_LeftCheat(12LL,jule::Str("363797880709171295166015625", 27)),_13ff7af20_LeftCheat(12LL,jule::Str("1818989403545856475830078125", 28)),_13ff7af20_LeftCheat(13LL,jule::Str("9094947017729282379150390625", 28)),_13ff7af20_LeftCheat(13LL,jule::Str("45474735088646411895751953125", 29)),_13ff7af20_LeftCheat(13LL,jule::Str("227373675443232059478759765625", 30)),_13ff7af20_LeftCheat(13LL,jule::Str("1136868377216160297393798828125", 31)),_13ff7af20_LeftCheat(14LL,jule::Str("5684341886080801486968994140625", 31)),_13ff7af20_LeftCheat(14LL,jule::Str("28421709430404007434844970703125", 32)),_13ff7af20_LeftCheat(14LL,jule::Str("142108547152020037174224853515625", 33)),_13ff7af20_LeftCheat(15LL,jule::Str("710542735760100185871124267578125", 33)),_13ff7af20_LeftCheat(15LL,jule::Str("3552713678800500929355621337890625", 34)),_13ff7af20_LeftCheat(15LL,jule::Str("17763568394002504646778106689453125", 35)),_13ff7af20_LeftCheat(16LL,jule::Str("88817841970012523233890533447265625", 35)),_13ff7af20_LeftCheat(16LL,jule::Str("444089209850062616169452667236328125", 36)),_13ff7af20_LeftCheat(16LL,jule::Str("2220446049250313080847263336181640625", 37)),_13ff7af20_LeftCheat(16LL,jule::Str("11102230246251565404236316680908203125", 38)),_13ff7af20_LeftCheat(17LL,jule::Str("55511151231257827021181583404541015625", 38)),_13ff7af20_LeftCheat(17LL,jule::Str("277555756156289135105907917022705078125", 39)),_13ff7af20_LeftCheat(17LL,jule::Str("1387778780781445675529539585113525390625", 40)),_13ff7af20_LeftCheat(18LL,jule::Str("6938893903907228377647697925567626953125", 40)),_13ff7af20_LeftCheat(18LL,jule::Str("34694469519536141888238489627838134765625", 41)),_13ff7af20_LeftCheat(18LL,jule::Str("173472347597680709441192448139190673828125", 42)),_13ff7af20_LeftCheat(19LL,jule::Str("867361737988403547205962240695953369140625", 42))});
static jule::Array<jule::Str,4> _13fe20550_CPP_HEADER_EXTS = jule::Array<jule::Str,4>({jule::Str(".h", 2),jule::Str(".hpp", 4),jule::Str(".hxx", 4),jule::Str(".hh", 3)});
static jule::Array<jule::Str,3> _13fe20550_CPP_EXTS = jule::Array<jule::Str,3>({jule::Str(".cpp", 4),jule::Str(".cc", 3),jule::Str(".cxx", 4)});
static jule::Array<jule::Str,1> _13fe20550_OBJECTIVE_CPP_EXTS = jule::Array<jule::Str,1>({jule::Str(".mm", 3)});
static jule::Map<jule::Str,jule::Str> _13fe9efa0_ERRORS = jule::Map<jule::Str,jule::Str>({{jule::Str("stdlib_not_exist", 16),jule::Str("standard library directory not found", 36)},{jule::Str("file_not_useable", 16),jule::Str("file is not useable for this operating system or architecture", 61)},{jule::Str("file_not_jule", 13),jule::Str("this is not jule source file: @", 31)},{jule::Str("no_entry_point", 14),jule::Str("entry point (main) function is not defined", 42)},{jule::Str("duplicated_ident", 16),jule::Str("duplicated identifier for declarations in scope: @", 50)},{jule::Str("extra_closed_parentheses", 24),jule::Str("extra closed parentheses", 24)},{jule::Str("extra_closed_braces", 19),jule::Str("extra closed braces", 19)},{jule::Str("extra_closed_brackets", 21),jule::Str("extra closed brackets", 21)},{jule::Str("wait_close_parentheses", 22),jule::Str("parentheses waiting to close", 28)},{jule::Str("wait_close_brace", 16),jule::Str("brace waiting to close", 22)},{jule::Str("wait_close_bracket", 18),jule::Str("bracket are waiting to close", 28)},{jule::Str("expected_parentheses_close", 26),jule::Str("was expected parentheses close", 30)},{jule::Str("expected_brace_close", 20),jule::Str("was expected brace close", 24)},{jule::Str("expected_bracket_close", 22),jule::Str("was expected bracket close", 26)},{jule::Str("body_not_exist", 14),jule::Str("body is not exist", 17)},{jule::Str("operator_overflow", 17),jule::Str("operator overflow", 17)},{jule::Str("incompatible_types", 18),jule::Str("@ and @ data-types are not compatible", 37)},{jule::Str("operator_not_for_juletype", 25),jule::Str("@ operator is not defined for @ type", 36)},{jule::Str("operator_not_for_float", 22),jule::Str("@ operator is not defined for float type(s)", 43)},{jule::Str("operator_not_for_int", 20),jule::Str("@ operator is not defined for integer type(s)", 45)},{jule::Str("operator_not_for_uint", 21),jule::Str("@ operator is not defined for unsigned integer type(s)", 54)},{jule::Str("ident_not_exist", 15),jule::Str("identifier is not exist: @", 26)},{jule::Str("not_function_call", 17),jule::Str("value is not function", 21)},{jule::Str("argument_overflow", 17),jule::Str("argument overflow", 17)},{jule::Str("fn_have_ret", 11),jule::Str("@ function cannot have return type", 34)},{jule::Str("fn_have_parameters", 18),jule::Str("@ function cannot have parameter(s)", 35)},{jule::Str("fn_is_unsafe", 12),jule::Str("@ function cannot unsafe", 24)},{jule::Str("require_ret_expr", 16),jule::Str("return statements of non-void functions should have return expression", 69)},{jule::Str("void_function_ret_expr", 22),jule::Str("void functions is cannot returns any value", 42)},{jule::Str("bitshift_must_unsigned", 22),jule::Str("bit shifting value is must be unsigned", 38)},{jule::Str("logical_not_bool", 16),jule::Str("logical expression is have only boolean type values", 51)},{jule::Str("assign_const", 12),jule::Str("constants is can't assign", 25)},{jule::Str("assign_require_lvalue", 21),jule::Str("assignment required lvalue", 26)},{jule::Str("assign_type_not_support_value", 29),jule::Str("type is not support assignment", 30)},{jule::Str("invalid_token", 13),jule::Str("undefined code content: @", 25)},{jule::Str("invalid_syntax", 14),jule::Str("invalid syntax", 14)},{jule::Str("invalid_type", 12),jule::Str("invalid data-type", 17)},{jule::Str("invalid_numeric_range", 21),jule::Str("arithmetic value overflow", 25)},{jule::Str("invalid_operator", 16),jule::Str("invalid operator", 16)},{jule::Str("invalid_expr_unary_operator", 27),jule::Str("invalid expression for unary @ operator", 39)},{jule::Str("invalid_escape_sequence", 23),jule::Str("invalid escape sequence", 23)},{jule::Str("invalid_type_source", 19),jule::Str("invalid data-type source", 24)},{jule::Str("invalid_preprocessor", 20),jule::Str("invalid preprocessor directive", 30)},{jule::Str("invalid_pragma_directive", 24),jule::Str("invalid pragma directive", 24)},{jule::Str("invalid_type_for_const", 22),jule::Str("@ is invalid data-type for constant", 35)},{jule::Str("invalid_value_for_key", 21),jule::Str("\"@\" is invalid value for the \"@\" key", 36)},{jule::Str("invalid_expr", 12),jule::Str("invalid expression", 18)},{jule::Str("invalid_cpp_ext", 15),jule::Str("invalid C++ extension: @", 24)},{jule::Str("invalid_label", 13),jule::Str("invalid label", 13)},{jule::Str("missing_value_for_type_inference", 32),jule::Str("type inference declarations should have a initializer", 53)},{jule::Str("missing_type", 12),jule::Str("data-type missing", 17)},{jule::Str("missing_expr", 12),jule::Str("expression missing", 18)},{jule::Str("missing_block_comment", 21),jule::Str("missing block comment close", 27)},{jule::Str("missing_rune_end", 16),jule::Str("rune is not finished", 20)},{jule::Str("missing_ret", 11),jule::Str("missing return at end of function", 33)},{jule::Str("missing_string_end", 18),jule::Str("string is not finished", 22)},{jule::Str("missing_multi_ret", 17),jule::Str("missing return expressions for multi return", 43)},{jule::Str("missing_multi_assign_idents", 27),jule::Str("missing identifier(s) for multiple assignment", 45)},{jule::Str("missing_use_path", 16),jule::Str("missing path of use statement", 29)},{jule::Str("missing_pragma_directive", 24),jule::Str("missing pragma directive", 24)},{jule::Str("missing_goto_label", 18),jule::Str("missing label identifier for goto statement", 43)},{jule::Str("missing_expr_for", 16),jule::Str("missing expression for @", 24)},{jule::Str("missing_generics", 16),jule::Str("missing generics", 16)},{jule::Str("missing_receiver", 16),jule::Str("missing receiver parameter", 26)},{jule::Str("missing_function_parentheses", 28),jule::Str("missing function parentheses", 28)},{jule::Str("expr_not_const", 14),jule::Str("expressions is not constant expression", 38)},{jule::Str("nil_for_type_inference", 22),jule::Str("nil is cannot use with type inferred definitions", 48)},{jule::Str("void_for_type_inference", 23),jule::Str("void data is cannot use for type inferred definitions", 53)},{jule::Str("rune_empty", 10),jule::Str("rune is cannot empty", 20)},{jule::Str("rune_overflow", 13),jule::Str("rune is should be single", 24)},{jule::Str("not_supports_indexing", 21),jule::Str("@ data type is not support indexing", 35)},{jule::Str("not_supports_slicing", 20),jule::Str("@ data type is not support slicing", 34)},{jule::Str("already_const", 13),jule::Str("define is already constant", 26)},{jule::Str("already_variadic", 16),jule::Str("define is already variadic", 26)},{jule::Str("already_reference", 17),jule::Str("define is already reference", 27)},{jule::Str("duplicate_use_decl", 18),jule::Str("duplicate use declaration: @", 28)},{jule::Str("ignore_ident", 12),jule::Str("ignore operator cannot use as identifier for this declaration", 61)},{jule::Str("overflow_multi_assign_idents", 28),jule::Str("overflow multi assignment identifers", 36)},{jule::Str("overflow_ret", 12),jule::Str("overflow return expressions", 27)},{jule::Str("break_at_out_of_valid_scope", 27),jule::Str("break keyword is cannot used at out of iteration and match cases", 64)},{jule::Str("continue_at_out_of_valid_scope", 30),jule::Str("continue keyword is cannot used at out of iteration", 51)},{jule::Str("iter_while_require_bool_expr", 28),jule::Str("while iterations must be have boolean expression", 48)},{jule::Str("iter_range_require_enumerable_expr", 34),jule::Str("range iterations must be have enumerable expression", 51)},{jule::Str("much_range_vars", 15),jule::Str("range variables can be maximum two", 34)},{jule::Str("if_require_bool_expr", 20),jule::Str("if conditions must be have boolean expression", 45)},{jule::Str("else_have_expr", 14),jule::Str("else's cannot have any expression", 33)},{jule::Str("variadic_parameter_not_last", 27),jule::Str("variadic parameter can only be last parameter", 45)},{jule::Str("variadic_with_non_variadicable", 30),jule::Str("@ data-type is not variadicable", 31)},{jule::Str("more_args_with_variadiced", 25),jule::Str("variadic argument can't use with more argument", 46)},{jule::Str("type_not_supports_casting", 25),jule::Str("@ data-type not supports casting", 32)},{jule::Str("type_not_supports_casting_to", 28),jule::Str("@ data-type not supports casting to @ data-type", 47)},{jule::Str("use_at_content", 14),jule::Str("use declaration must be start of source code", 44)},{jule::Str("use_not_found", 13),jule::Str("used directory path not found/access: @", 39)},{jule::Str("used_package_has_errors", 23),jule::Str("used package has errors: @", 26)},{jule::Str("def_not_support_pub", 19),jule::Str("define is not supports pub modifier", 35)},{jule::Str("obj_not_support_sub_fields", 26),jule::Str("object @ is not supports sub fields", 35)},{jule::Str("obj_have_not_ident", 18),jule::Str("object is not have sub field in this identifier: @", 50)},{jule::Str("type_not_support_sub_fields", 27),jule::Str("type @ is not supports sub fields", 33)},{jule::Str("type_have_not_ident", 19),jule::Str("type @ is not have sub field in this identifier: @", 50)},{jule::Str("doc_couldnt_generated", 21),jule::Str("@: documentation could not generated because Jule source code has an errors", 75)},{jule::Str("declared_but_not_used", 21),jule::Str("@ declared but not used", 23)},{jule::Str("expr_not_func_call", 18),jule::Str("statement must have function call expression", 44)},{jule::Str("label_exist", 11),jule::Str("label is already exist in this identifier: @", 44)},{jule::Str("label_not_exist", 15),jule::Str("not exist any label in this identifier: @", 41)},{jule::Str("goto_jumps_declarations", 23),jule::Str("goto @ jumps over declaration(s)", 32)},{jule::Str("fn_not_has_parameter", 20),jule::Str("function is not has parameter in this identifier: @", 51)},{jule::Str("already_has_expr", 16),jule::Str("@ already has expression", 24)},{jule::Str("argument_must_target_to_field", 29),jule::Str("argument must target to field", 29)},{jule::Str("overflow_limits", 15),jule::Str("overflow the limit of data-type", 31)},{jule::Str("generics_overflow", 17),jule::Str("overflow generics", 17)},{jule::Str("has_generics", 12),jule::Str("define has generics", 19)},{jule::Str("not_has_generics", 16),jule::Str("define not has generics", 23)},{jule::Str("type_not_supports_generics", 26),jule::Str("type @ not supports generics", 28)},{jule::Str("divide_by_zero", 14),jule::Str("divide by zero", 14)},{jule::Str("trait_have_not_ident", 20),jule::Str("trait @ have not any define in this identifier: @", 49)},{jule::Str("not_impl_trait_def", 18),jule::Str("trait @ derived but not implemented trait's @ define", 52)},{jule::Str("dynamic_type_annotation_failed", 30),jule::Str("dynamic type annotation failed", 30)},{jule::Str("fallthrough_wrong_use", 21),jule::Str("fallthrough keyword can only useable at end of the case scopes", 62)},{jule::Str("fallthrough_into_final_case", 27),jule::Str("fallthrough cannot useable at final case", 40)},{jule::Str("unsafe_behavior_at_out_of_unsafe_scope", 38),jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54)},{jule::Str("ref_method_used_with_not_ref_instance", 37),jule::Str("reference method cannot use with non-reference instance", 55)},{jule::Str("method_as_anonymous_fn", 22),jule::Str("methods cannot use as anonymous function", 40)},{jule::Str("genericed_fn_as_anonymous_fn", 28),jule::Str("genericed functions cannot use as anonymous function", 52)},{jule::Str("illegal_cycle_refers_itself", 27),jule::Str("illegal cycle in declaration, @ refers to itself", 48)},{jule::Str("illegal_cross_cycle", 19),jule::Str("illegal cross cycle in declarations;\n@", 38)},{jule::Str("assignment_to_non_mut", 21),jule::Str("cannot assign to immutable define", 33)},{jule::Str("assignment_non_mut_to_mut", 25),jule::Str("cannot assign mutable type used immutable define to mutable define", 66)},{jule::Str("ret_with_mut_typed_non_mut", 26),jule::Str("mutable typed return expressions should be mutable", 50)},{jule::Str("mutable_operation_on_immutable", 30),jule::Str("mutable operation cannot used with immutable define", 51)},{jule::Str("trait_has_reference_parametered_function", 40),jule::Str("trait has reference receiver parameter used method, cannot assign non-reference instance", 88)},{jule::Str("enum_have_not_field", 19),jule::Str("enum have not any field: @", 26)},{jule::Str("duplicate_match_type", 20),jule::Str("type is already checked: @", 26)},{jule::Str("cpp_linked_variable_has_expr", 28),jule::Str("cpp linked variables cannot have expression", 43)},{jule::Str("cpp_linked_variable_is_const", 28),jule::Str("cpp linked variables cannot constant", 36)},{jule::Str("const_var_not_have_expr", 23),jule::Str("constant variable must have initialize expression", 49)},{jule::Str("ref_refs_ref", 12),jule::Str("references cannot reference to another reference", 48)},{jule::Str("ref_refs_ptr", 12),jule::Str("references cannot reference to pointer", 38)},{jule::Str("ref_refs_array", 14),jule::Str("references cannot reference to array", 36)},{jule::Str("ref_refs_enum", 13),jule::Str("references cannot reference to enum", 35)},{jule::Str("ptr_points_ref", 14),jule::Str("pointers cannot point to reference", 34)},{jule::Str("ptr_points_enum", 15),jule::Str("pointers cannot point to enum", 29)},{jule::Str("missing_expr_for_unary", 22),jule::Str("missing expression for unary operator", 37)},{jule::Str("invalid_op_for_unary", 20),jule::Str("invalid_operator_for_unary: @", 29)},{jule::Str("use_decl_at_body", 16),jule::Str("use declarations must declared before other declarations", 56)},{jule::Str("pwd_cannot_set", 14),jule::Str("current working directory cannot set", 36)},{jule::Str("array_auto_sized", 16),jule::Str("array must have explicit size", 29)},{jule::Str("namespace_not_exist", 19),jule::Str("namespace not exist: @", 22)},{jule::Str("impl_base_not_exist", 19),jule::Str("any valid base definition is not exist in this identifier: @", 60)},{jule::Str("impl_dest_not_exist", 19),jule::Str("any valid destination definition is not exist in this identifier: @", 67)},{jule::Str("struct_already_have_ident", 25),jule::Str("struct @ already have a define in this identifier: @", 52)},{jule::Str("unsafe_ptr_indexing", 19),jule::Str("unsafe pointers not supports indexing", 37)},{jule::Str("method_has_generic_with_same_ident", 34),jule::Str("methods cannot have same generic identifier with owner same time", 64)},{jule::Str("tuple_assign_to_single", 22),jule::Str("tuples cannot assign to single define in same time", 50)},{jule::Str("missing_compile_path", 20),jule::Str("missing compile path", 20)},{jule::Str("array_size_is_not_int", 21),jule::Str("array size must be integer", 26)},{jule::Str("array_size_is_negative", 22),jule::Str("array size must be positive integer", 35)},{jule::Str("builtin_as_anonymous_fn", 23),jule::Str("built-in define cannot use as anonymous function", 48)},{jule::Str("type_case_has_not_valid_expr", 28),jule::Str("type-case must be have <any> or trait typed expression", 54)},{jule::Str("illegal_impl_out_of_package", 27),jule::Str("illegal implementation via definition from out of package", 57)},{jule::Str("method_not_invoked", 18),jule::Str("methods should be invoked", 25)},{jule::Str("duplicated_import_selection", 27),jule::Str("duplicated identifier selection: @", 34)},{jule::Str("ident_is_not_accessible", 23),jule::Str("identifier is not accessible: @", 31)},{jule::Str("invalid_stmt_for_next", 21),jule::Str("invalid statement for while-next", 32)},{jule::Str("modulo_with_not_int", 19),jule::Str("module operator must be used with integer type", 46)},{jule::Str("pkg_illegal_cycle_refers_itself", 31),jule::Str("illegal cycle in use declaration, package @ refers to itself", 60)},{jule::Str("pkg_illegal_cross_cycle", 23),jule::Str("illegal cross cycle in use declarations;\n@", 42)},{jule::Str("refers_to", 9),jule::Str("@ refers to @", 13)},{jule::Str("no_file_in_entry_package", 24),jule::Str("there is no Jule source code in this package: @", 47)},{jule::Str("no_member_in_enum", 17),jule::Str("there is no member for enum: @", 30)},{jule::Str("type_is_not_derives", 19),jule::Str("type \"@\" is not derives: @", 26)},{jule::Str("clone_non_lvalue", 16),jule::Str("non-lvalue expressions cannot be clone", 38)},{jule::Str("clone_immut_struct", 18),jule::Str("struct \"@\" is not breaks immutability, do not needs cloning", 59)},{jule::Str("internal_type_not_supports_clone", 32),jule::Str("internal types of \"@\" is not supports cloning", 45)},{jule::Str("type_not_compatible_for_derive", 30),jule::Str("type \"@\" is not compatible to derive \"@\"", 40)},{jule::Str("pass_directive_not_starts_with_dash", 35),jule::Str("the pass directive must be start with dash", 42)},{jule::Str("derive_illegal_cycle_refers_itself", 34),jule::Str("illegal cycle for \"@\" derive, struct \"@\" refers to itself", 57)},{jule::Str("derive_illegal_cross_cycle", 26),jule::Str("illegal cross cycle for \"@\" derive;\n@", 37)},{jule::Str("invalid_expr_for_binop", 22),jule::Str("invalid expression used for binary operation", 44)},{jule::Str("cpp_linked_struct_for_ref", 25),jule::Str("cpp-linked structures cannot supports reference counting", 56)},{jule::Str("trait_method_has_generics", 25),jule::Str("trait methods cannot have generics", 34)},{jule::Str("enum_as_map_val", 15),jule::Str("maps do not support enums as map key type", 41)},{jule::Str("global_not_static", 17),jule::Str("global variables must be static", 31)},{jule::Str("static_is_type_inferred", 23),jule::Str("static variables must be have type annotation", 45)},{jule::Str("static_not_have_expr", 20),jule::Str("static variables must be have initialize expression", 51)},{jule::Str("static_function_has_receiver", 28),jule::Str("static functions cannot have receiver parameter", 47)},{jule::Str("reference_assign_non_var", 24),jule::Str("references requires variable for assignment", 43)},{jule::Str("mut_reference_points_to_immut", 29),jule::Str("mutable reference cannot point to immutable data", 48)},{jule::Str("reference_not_initialized", 25),jule::Str("reference variables must be have lvalue initialize expression", 61)},{jule::Str("constant_reference", 18),jule::Str("references cannot be constant", 29)},{jule::Str("reference_is_dangling", 21),jule::Str("you cannot use \"@\" reference variable, because reference is dangling", 68)},{jule::Str("concurrent_call_with_reference_parameter", 40),jule::Str("concurrent calls does not support functions which is has reference parameter(s)", 79)},{jule::Str("used_ref_in_anon_fn_from_parent_scope", 37),jule::Str("anonymous functions cannot access to reference \"@\" definition of parent scope", 77)}});
static jule::Array<jule::Str,5> _1410150a0_DIRECTIVES = jule::Array<jule::Str,5>({jule::Str("cdef", 4),jule::Str("typedef", 7),jule::Str("derive", 6),jule::Str("pass", 4),jule::Str("build", 5)});
static jule::Array<jule::Str,3> _1410149e0_DISTOS = jule::Array<jule::Str,3>({jule::Str("windows", 7),jule::Str("linux", 5),jule::Str("darwin", 6)});
static jule::Array<jule::Str,3> _1410149e0_DISTARCH = jule::Array<jule::Str,3>({jule::Str("arm64", 5),jule::Str("amd64", 5),jule::Str("i386", 4)});
static jule::Str _1410197f0_PATH_STDLIB = jule::Str("", 0);
static jule::Str _1410197f0_PATH_EXEC = jule::Str("", 0);
static jule::Str _1410197f0_PATH_WD = jule::Str("", 0);
static jule::Str _1410197f0_PATH_API = jule::Str("", 0);
static jule::Array<jule::I32,5> _11911a8a0_SPACES = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
static jule::Array<jule::Str,6> _11911a8a0_UNARY_OPS = jule::Array<jule::Str,6>({jule::Str("-", 1),jule::Str("+", 1),jule::Str("^", 1),jule::Str("!", 1),jule::Str("*", 1),jule::Str("&", 1)});
static jule::Array<jule::Str,13> _11911a8a0_BIN_OPS = jule::Array<jule::Str,13>({jule::Str("+", 1),jule::Str("-", 1),jule::Str("*", 1),jule::Str("/", 1),jule::Str("%", 1),jule::Str("&", 1),jule::Str("|", 1),jule::Str("^", 1),jule::Str("<", 1),jule::Str(">", 1),jule::Str("!", 1),jule::Str("&&", 2),jule::Str("||", 2)});
static jule::Array<jule::Str,2> _11911a8a0_POSTFIX_OPS = jule::Array<jule::Str,2>({jule::Str("++", 2),jule::Str("--", 2)});
static jule::Array<jule::Str,11> _11911a8a0_ASSING_OPS = jule::Array<jule::Str,11>({jule::Str("=", 1),jule::Str("+=", 2),jule::Str("-=", 2),jule::Str("/=", 2),jule::Str("*=", 2),jule::Str("%=", 2),jule::Str(">>=", 3),jule::Str("<<=", 3),jule::Str("|=", 2),jule::Str("&=", 2),jule::Str("^=", 2)});
static jule::Array<_11916a220_KindPair,46> _11916a220_KEYWORDS = jule::Array<_11916a220_KindPair,46>({_11916a220_KindPair(jule::Str("i8", 2),1LLU),_11916a220_KindPair(jule::Str("i16", 3),1LLU),_11916a220_KindPair(jule::Str("i32", 3),1LLU),_11916a220_KindPair(jule::Str("i64", 3),1LLU),_11916a220_KindPair(jule::Str("u8", 2),1LLU),_11916a220_KindPair(jule::Str("u16", 3),1LLU),_11916a220_KindPair(jule::Str("u32", 3),1LLU),_11916a220_KindPair(jule::Str("u64", 3),1LLU),_11916a220_KindPair(jule::Str("f32", 3),1LLU),_11916a220_KindPair(jule::Str("f64", 3),1LLU),_11916a220_KindPair(jule::Str("uint", 4),1LLU),_11916a220_KindPair(jule::Str("int", 3),1LLU),_11916a220_KindPair(jule::Str("uintptr", 7),1LLU),_11916a220_KindPair(jule::Str("bool", 4),1LLU),_11916a220_KindPair(jule::Str("str", 3),1LLU),_11916a220_KindPair(jule::Str("any", 3),1LLU),_11916a220_KindPair(jule::Str("true", 4),6LLU),_11916a220_KindPair(jule::Str("false", 5),6LLU),_11916a220_KindPair(jule::Str("nil", 3),6LLU),_11916a220_KindPair(jule::Str("const", 5),9LLU),_11916a220_KindPair(jule::Str("ret", 3),4LLU),_11916a220_KindPair(jule::Str("type", 4),10LLU),_11916a220_KindPair(jule::Str("for", 3),12LLU),_11916a220_KindPair(jule::Str("break", 5),13LLU),_11916a220_KindPair(jule::Str("continue", 8),14LLU),_11916a220_KindPair(jule::Str("in", 2),15LLU),_11916a220_KindPair(jule::Str("if", 2),16LLU),_11916a220_KindPair(jule::Str("else", 4),17LLU),_11916a220_KindPair(jule::Str("use", 3),19LLU),_11916a220_KindPair(jule::Str("pub", 3),21LLU),_11916a220_KindPair(jule::Str("goto", 4),22LLU),_11916a220_KindPair(jule::Str("enum", 4),24LLU),_11916a220_KindPair(jule::Str("struct", 6),25LLU),_11916a220_KindPair(jule::Str("co", 2),26LLU),_11916a220_KindPair(jule::Str("match", 5),27LLU),_11916a220_KindPair(jule::Str("self", 4),28LLU),_11916a220_KindPair(jule::Str("trait", 5),29LLU),_11916a220_KindPair(jule::Str("impl", 4),30LLU),_11916a220_KindPair(jule::Str("cpp", 3),31LLU),_11916a220_KindPair(jule::Str("fall", 4),32LLU),_11916a220_KindPair(jule::Str("fn", 2),33LLU),_11916a220_KindPair(jule::Str("let", 3),34LLU),_11916a220_KindPair(jule::Str("unsafe", 6),35LLU),_11916a220_KindPair(jule::Str("mut", 3),36LLU),_11916a220_KindPair(jule::Str("defer", 5),37LLU),_11916a220_KindPair(jule::Str("static", 6),38LLU)});
static jule::Array<_11916a220_KindPair,38> _11916a220_BASIC_OPS = jule::Array<_11916a220_KindPair,38>({_11916a220_KindPair(jule::Str("::", 2),23LLU),_11916a220_KindPair(jule::Str(":", 1),11LLU),_11916a220_KindPair(jule::Str(";", 1),5LLU),_11916a220_KindPair(jule::Str(",", 1),8LLU),_11916a220_KindPair(jule::Str("...", 3),7LLU),_11916a220_KindPair(jule::Str(".", 1),20LLU),_11916a220_KindPair(jule::Str("+=", 2),7LLU),_11916a220_KindPair(jule::Str("-=", 2),7LLU),_11916a220_KindPair(jule::Str("*=", 2),7LLU),_11916a220_KindPair(jule::Str("/=", 2),7LLU),_11916a220_KindPair(jule::Str("%=", 2),7LLU),_11916a220_KindPair(jule::Str("<<=", 3),7LLU),_11916a220_KindPair(jule::Str(">>=", 3),7LLU),_11916a220_KindPair(jule::Str("^=", 2),7LLU),_11916a220_KindPair(jule::Str("&=", 2),7LLU),_11916a220_KindPair(jule::Str("|=", 2),7LLU),_11916a220_KindPair(jule::Str("==", 2),7LLU),_11916a220_KindPair(jule::Str("!=", 2),7LLU),_11916a220_KindPair(jule::Str(">=", 2),7LLU),_11916a220_KindPair(jule::Str("<=", 2),7LLU),_11916a220_KindPair(jule::Str("&&", 2),7LLU),_11916a220_KindPair(jule::Str("||", 2),7LLU),_11916a220_KindPair(jule::Str("<<", 2),7LLU),_11916a220_KindPair(jule::Str(">>", 2),7LLU),_11916a220_KindPair(jule::Str("++", 2),7LLU),_11916a220_KindPair(jule::Str("--", 2),7LLU),_11916a220_KindPair(jule::Str("+", 1),7LLU),_11916a220_KindPair(jule::Str("-", 1),7LLU),_11916a220_KindPair(jule::Str("*", 1),7LLU),_11916a220_KindPair(jule::Str("/", 1),7LLU),_11916a220_KindPair(jule::Str("%", 1),7LLU),_11916a220_KindPair(jule::Str("&", 1),7LLU),_11916a220_KindPair(jule::Str("|", 1),7LLU),_11916a220_KindPair(jule::Str("^", 1),7LLU),_11916a220_KindPair(jule::Str("!", 1),7LLU),_11916a220_KindPair(jule::Str("<", 1),7LLU),_11916a220_KindPair(jule::Str(">", 1),7LLU),_11916a220_KindPair(jule::Str("=", 1),7LLU)});
static jule::Ref<_119099250_FnIns> _11aa913b0_BUILTIN_FN_OUT = jule::new_struct<_119099250_FnIns>(new( std::nothrow ) _119099250_FnIns());
static jule::Ref<_119099250_FnIns> _11aa913b0_BUILTIN_FN_OUTLN = jule::new_struct<_119099250_FnIns>(new( std::nothrow ) _119099250_FnIns());
static jule::Ref<_119099250_FnIns> _11aa913b0_BUILTIN_FN_NEW = jule::new_struct<_119099250_FnIns>(new( std::nothrow ) _119099250_FnIns());
static jule::Ref<_119099250_FnIns> _11aa913b0_BUILTIN_FN_DROP = jule::new_struct<_119099250_FnIns>(new( std::nothrow ) _119099250_FnIns());
static jule::Ref<_119099250_FnIns> _11aa913b0_BUILTIN_FN_PANIC = jule::new_struct<_119099250_FnIns>(new( std::nothrow ) _119099250_FnIns());
static jule::Ref<_119099250_FnIns> _11aa913b0_BUILTIN_FN_MAKE = jule::new_struct<_119099250_FnIns>(new( std::nothrow ) _119099250_FnIns());
static jule::Ref<_119099250_FnIns> _11aa913b0_BUILTIN_FN_APPEND = jule::new_struct<_119099250_FnIns>(new( std::nothrow ) _119099250_FnIns());
static jule::Ref<_119099250_FnIns> _11aa913b0_BUILTIN_FN_RECOVER = jule::new_struct<_119099250_FnIns>(new( std::nothrow ) _119099250_FnIns());
static jule::Ref<_119099250_FnIns> _11aa913b0_BUILTIN_FN_CLONE = jule::new_struct<_119099250_FnIns>(new( std::nothrow ) _119099250_FnIns());
static jule::Ref<_119099250_FnIns> _11aa913b0_BUILTIN_FN_STD_MEM_SIZE_OF = jule::new_struct<_119099250_FnIns>(new( std::nothrow ) _119099250_FnIns());
static jule::Ref<_119099250_FnIns> _11aa913b0_BUILTIN_FN_STD_MEM_ALIGN_OF = jule::new_struct<_119099250_FnIns>(new( std::nothrow ) _119099250_FnIns());
static jule::Ref<_119099250_FnIns> _11aa913b0_BUILTIN_FN_REAL = jule::new_struct<_119099250_FnIns>(new( std::nothrow ) _119099250_FnIns(jule::Ref<_118bb7d70_StructIns>(),jule::Ref<_119099250_Fn>(),jule::Slice<jule::Ref<_11a3c2e70_TypeKind>>(),jule::Slice<jule::Ref<_119099250_ParamIns>>(),jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_11a3c2e70_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_11a093930_Scope>(),jule::Fn<jule::Ref<_11a53f4f0_Data>(jule::Ref<_11a53f4f0_Eval>,jule::Ref<_118d9a790_FnCallExpr>,jule::Ref<_11a53f4f0_Data>)>(),jule::Bool(),jule::Bool()));
static jule::Ref<_119099250_FnIns> _11aa913b0_BUILTIN_FN_COPY = jule::new_struct<_119099250_FnIns>(new( std::nothrow ) _119099250_FnIns(jule::Ref<_118bb7d70_StructIns>(),jule::Ref<_119099250_Fn>(),jule::Slice<jule::Ref<_11a3c2e70_TypeKind>>(),jule::Slice<jule::Ref<_119099250_ParamIns>>(),jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_11a3c2e70_build_prim_type(jule::Str("int", 3)))),jule::Ref<_11a093930_Scope>(),jule::Fn<jule::Ref<_11a53f4f0_Data>(jule::Ref<_11a53f4f0_Eval>,jule::Ref<_118d9a790_FnCallExpr>,jule::Ref<_11a53f4f0_Data>)>(),jule::Bool(),jule::Bool()));
static jule::Ref<_11a3c2e70_TypeAlias> _11aa913b0_BUILTIN_TYPE_ALIAS_BYTE = jule::new_struct<_11a3c2e70_TypeAlias>(new( std::nothrow ) _11a3c2e70_TypeAlias(jule::Ref<_118d9a790_ScopeTree>(),true,jule::Bool(),jule::Bool(),_11911a8a0_Token(),jule::Str(),jule::new_struct<_11a3c2e70_TypeSymbol>(new( std::nothrow ) _11a3c2e70_TypeSymbol(jule::Ref<_118d9a790_TypeDecl>(),jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_11a3c2e70_build_prim_type(jule::Str("u8", 2)))))),jule::Str(),jule::Slice<jule::Any>()));
static jule::Ref<_11a3c2e70_TypeAlias> _11aa913b0_BUILTIN_TYPE_ALIAS_RUNE = jule::new_struct<_11a3c2e70_TypeAlias>(new( std::nothrow ) _11a3c2e70_TypeAlias(jule::Ref<_118d9a790_ScopeTree>(),true,jule::Bool(),jule::Bool(),_11911a8a0_Token(),jule::Str(),jule::new_struct<_11a3c2e70_TypeSymbol>(new( std::nothrow ) _11a3c2e70_TypeSymbol(jule::Ref<_118d9a790_TypeDecl>(),jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_11a3c2e70_build_prim_type(jule::Str("i32", 3)))))),jule::Str(),jule::Slice<jule::Any>()));
static jule::Ref<_118e2b060_Trait> _11aa913b0_BUILTIN_TRAIT_ERROR = jule::new_struct<_118e2b060_Trait>(new( std::nothrow ) _118e2b060_Trait(_11911a8a0_Token(),jule::Str("Error", 5),true,jule::Str(),jule::Slice<jule::Ref<_119099250_Fn>>({jule::new_struct<_119099250_Fn>(new( std::nothrow ) _119099250_Fn(jule::Ref<_11a096220_Sema>(),_11911a8a0_Token(),jule::Bool(),jule::Bool(),true,jule::Bool(),jule::Bool(),jule::Str("error", 5),jule::Slice<jule::Ref<_118d9a790_Directive>>(),jule::Str(),jule::Ref<_118d9a790_ScopeTree>(),jule::Slice<jule::Ref<_118d9a790_GenericDecl>>(),jule::new_struct<_119099250_RetType>(new( std::nothrow ) _119099250_RetType(jule::new_struct<_11a3c2e70_TypeSymbol>(new( std::nothrow ) _11a3c2e70_TypeSymbol(jule::new_struct<_118d9a790_TypeDecl>(new( std::nothrow ) _118d9a790_TypeDecl(_11911a8a0_Token(),jule::Any(jule::new_struct<_118d9a790_IdentTypeDecl>(new( std::nothrow ) _118d9a790_IdentTypeDecl(_11911a8a0_Token(),jule::Str("str", 3),jule::Bool(),jule::Slice<jule::Ref<_118d9a790_TypeDecl>>()))))),jule::Ref<_11a3c2e70_TypeKind>())),jule::Slice<_11911a8a0_Token>())),jule::Slice<jule::Ref<_119099250_Param>>({jule::new_struct<_119099250_Param>(new( std::nothrow ) _119099250_Param(_11911a8a0_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_11a3c2e70_TypeSymbol>(),jule::Str("self", 4)))}),jule::Ref<_118bb7d70_Struct>(),jule::Ref<_13feceeb0_ReferenceStack>(),jule::Slice<jule::Ref<_119099250_FnIns>>()))}),jule::Slice<jule::Ref<_118bb7d70_Struct>>()));
static jule::Slice<jule::Str> _118d5bd10_FLAGS = nullptr;
static jule::Slice<jule::Any> _13fe7c170_deads = nullptr;
static jule::Slice<jule::Any> _13fe7c170_checking = nullptr;
static jule::Any _13fe7c170_current = jule::Any(nullptr);
static jule::Slice<jule::Str> _119083710_OPTIMIZATIONS = nullptr;
static jule::U64 _11a1c3f00_INDENT = 0LLU;
static jule::Array<_118dab460_accept_range,16> _118dab460_ACCEPT_RANGES = jule::Array<_118dab460_accept_range,16>({_118dab460_accept_range(128LLU,191LLU),_118dab460_accept_range(160LLU,191LLU),_118dab460_accept_range(128LLU,159LLU),_118dab460_accept_range(144LLU,191LLU),_118dab460_accept_range(128LLU,143LLU)});
static jule::Array<jule::U8,256> _118dab460_FIRST = jule::Array<jule::U8,256>({240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,19LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,35LLU,3LLU,3LLU,52LLU,4LLU,4LLU,4LLU,68LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU});
static jule::Str _1410197f0_ARCH = jule::Str("amd64", 5);
static jule::Str _1410197f0_OS = jule::Str("darwin", 6);
static jule::Array<jule::Array<jule::Str,2>,3> _141006360_HELP_MAP = jule::Array<jule::Array<jule::Str,2>,3>({jule::Array<jule::Str,2>({jule::Str("help", 4),jule::Str("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str("version", 7),jule::Str("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str("tool", 4),jule::Str("Tools for effective Jule", 24)})});

inline jule::U8 _1410391e0_LazyBuff::_method_index(jule::Int _5324_i) {
	if ((*this)._field_buff != nullptr) {
		return (*this)._field_buff[static_cast<jule::Int>(_5324_i)];
	}
	return (*this)._field_path[static_cast<jule::Int>(_5324_i)];
}



inline void _1410391e0_LazyBuff::_method_append(jule::U8 _6025_c) {
	if ((*this)._field_buff == nullptr) {
		if (((*this)._field_w < (*this)._field_path.len()) && ((*this)._field_path[static_cast<jule::Int>((*this)._field_w)] == _6025_c)) {
			((*this)._field_w)++;
			return;
		}
		(*this)._field_buff=jule::Slice<jule::U8>::alloc(static_cast<jule::Int>(static_cast<jule::I64>((*this)._field_path.len())));
		copy((*this)._field_buff,static_cast<jule::Slice<jule::U8>>((*this)._field_path.slice(0LL,static_cast<jule::Int>((*this)._field_w))));
	}
	(*this)._field_buff[static_cast<jule::Int>((*this)._field_w)]=_6025_c;
	((*this)._field_w)++;
}



inline jule::Str _1410391e0_LazyBuff::_method_string(void) {
	if ((*this)._field_buff == nullptr) {
		return (*this)._field_vol_and_path.slice(0LL,static_cast<jule::Int>((*this)._field_vol_len + (*this)._field_w));
	}
	return (*this)._field_vol_and_path.slice(0LL,static_cast<jule::Int>((*this)._field_vol_len)) + static_cast<jule::Str>((*this)._field_buff.slice(0LL,static_cast<jule::Int>((*this)._field_w)));
}







std::ostream &operator<<(std::ostream &_Stream, const _1410391e0_LazyBuff &_Src) {
	_Stream << "LazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "vol_and_path:" << _Src._field_vol_and_path << ", ";
	_Stream << "vol_len:" << _Src._field_vol_len;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _141082340_FloatInfo &_Src) {
	_Stream << "FloatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _141082340_DecimalSlice &_Src) {
	_Stream << "DecimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _13ff7af20_LeftCheat &_Src) {
	_Stream << "LeftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _13ff7af20_Decimal::_method_set(jule::Str _22922_s) {
	jule::Bool _22932_ok = jule::Bool();
	jule::Int _23017_i = 0LL;
	(*this)._field_neg=false;
	(*this)._field_trunc=false;
	if (_23017_i >= _22922_s.len()) {
		return _22932_ok;
	}
	{
		if (!((_22922_s[static_cast<jule::Int>(_23017_i)] == '+'))) { goto _case_end_4753449936; }
		_case_begin_4753449936:;
		{
			(_23017_i)++;
		}
		goto _match_end_4753450992;
		_case_end_4753449936:;
		if (!((_22922_s[static_cast<jule::Int>(_23017_i)] == '-'))) { goto _case_end_4753450048; }
		_case_begin_4753450048:;
		{
			(*this)._field_neg=true;
			(_23017_i)++;
		}
		goto _match_end_4753450992;
		_case_end_4753450048:;
		_match_end_4753450992:;
	}
	jule::Bool _24717_sawdot = false;
	jule::Bool _24817_sawdigits = false;
	_iter_begin_4753456784:;
	if (!(_23017_i < _22922_s.len())) { goto _iter_end_4753456784; }
	{
		{
			if (!((_22922_s[static_cast<jule::Int>(_23017_i)] == '.'))) { goto _case_end_4753458576; }
			_case_begin_4753458576:;
			{
				if (_24717_sawdot) {
					return _22932_ok;
				}
				_24717_sawdot=true;
				(*this)._field_dp=(*this)._field_nd;
				goto _iter_next_4753456784;
			}
			goto _match_end_4753458336;
			_case_end_4753458576:;
			if (!((('0' <= _22922_s[static_cast<jule::Int>(_23017_i)]) && (_22922_s[static_cast<jule::Int>(_23017_i)] <= '9')))) { goto _case_end_4753458688; }
			_case_begin_4753458688:;
			{
				_24817_sawdigits=true;
				if ((_22922_s[static_cast<jule::Int>(_23017_i)] == '0') && ((*this)._field_nd == 0LL)) {
					((*this)._field_dp)--;
					goto _iter_next_4753456784;
				}
				if ((*this)._field_nd < 800LL) {
					(*this)._field_d[static_cast<jule::Int>((*this)._field_nd)]=_22922_s[static_cast<jule::Int>(_23017_i)];
					((*this)._field_nd)++;
				} else if (_22922_s[static_cast<jule::Int>(_23017_i)] != '0') {
					(*this)._field_trunc=true;
				}
				goto _iter_next_4753456784;
			}
			goto _match_end_4753458336;
			_case_end_4753458688:;
			_match_end_4753458336:;
		}
		goto _iter_end_4753456784;
	}
	_iter_next_4753456784:;
	(_23017_i)++;
	goto _iter_begin_4753456784;
	_iter_end_4753456784:;
	if ((!(_24817_sawdigits))) {
		return _22932_ok;
	}
	if ((!(_24717_sawdot))) {
		(*this)._field_dp=(*this)._field_nd;
	}
	if ((_23017_i < _22922_s.len()) && (_12ff26420_lower(_22922_s[static_cast<jule::Int>(_23017_i)]) == 'e')) {
		(_23017_i)++;
		if (_23017_i >= _22922_s.len()) {
			return _22932_ok;
		}
		jule::Int _29121_esign = 1LL;
		if (_22922_s[static_cast<jule::Int>(_23017_i)] == '+') {
			(_23017_i)++;
		} else if (_22922_s[static_cast<jule::Int>(_23017_i)] == '-') {
			(_23017_i)++;
			_29121_esign=-1LL;
		}
		if (((_23017_i >= _22922_s.len()) || (_22922_s[static_cast<jule::Int>(_23017_i)] < '0')) || (_22922_s[static_cast<jule::Int>(_23017_i)] > '9')) {
			return _22932_ok;
		}
		jule::Int _30121_e = 0LL;
		_iter_begin_4753485216:;
		if (!((_23017_i < _22922_s.len()) && (('0' <= _22922_s[static_cast<jule::Int>(_23017_i)]) && (_22922_s[static_cast<jule::Int>(_23017_i)] <= '9')))) { goto _iter_end_4753485216; }
		{
			if (_30121_e < 10000LL) {
				_30121_e=((_30121_e * 10LL) + static_cast<jule::Int>(_22922_s[static_cast<jule::Int>(_23017_i)])) - '0';
			}
		}
		_iter_next_4753485216:;
		(_23017_i)++;
		goto _iter_begin_4753485216;
		_iter_end_4753485216:;
		(*this)._field_dp+=_30121_e * _29121_esign;
	}
	if (_23017_i != _22922_s.len()) {
		return _22932_ok;
	}
	_22932_ok=true;
	return _22932_ok;
}



inline std::tuple<jule::U64,jule::Bool> _13ff7af20_Decimal::_method_float_bits(_141082340_FloatInfo& _31830_flt) {
	jule::Bool _31856_overflow = jule::Bool();
	jule::U64 _31848_b = jule::U64();
	jule::Int _31917_exp = 0LL;
	jule::U64 _32017_mant = 0LLU;
	if ((*this)._field_nd == 0LL) {
		_32017_mant=0LL;
		_31917_exp=_31830_flt._field_bias;
		goto _julec_label_out;
	}
	if ((*this)._field_dp > 310LL) {
		goto _julec_label_overflow;
	}
	if ((*this)._field_dp < -330LL) {
		_32017_mant=0LL;
		_31917_exp=_31830_flt._field_bias;
		goto _julec_label_out;
	}
	_31917_exp=0LL;
	_iter_begin_4753507568:;
	if (!((*this)._field_dp > 0LL)) { goto _iter_end_4753507568; }
	{
		jule::Int _34521_n = 0LL;
		if ((*this)._field_dp >= _13ffab0a0_POWTAB.len()) {
			_34521_n=27LL;
		} else {
			_34521_n=_13ffab0a0_POWTAB[static_cast<jule::Int>((*this)._field_dp)];
		}
		(*this)._method_shift(static_cast<jule::Int>((-(_34521_n))));
		_31917_exp+=_34521_n;
	}
	_iter_next_4753507568:;
	goto _iter_begin_4753507568;
	_iter_end_4753507568:;
	_iter_begin_4753520432:;
	if (!(((*this)._field_dp < 0LL) || (((*this)._field_dp == 0LL) && ((*this)._field_d[static_cast<jule::Int>(0LL)] < '5')))) { goto _iter_end_4753520432; }
	{
		jule::Int _35521_n = 0LL;
		if ((-((*this)._field_dp)) >= _13ffab0a0_POWTAB.len()) {
			_35521_n=27LL;
		} else {
			_35521_n=_13ffab0a0_POWTAB[static_cast<jule::Int>((-((*this)._field_dp)))];
		}
		(*this)._method_shift(_35521_n);
		_31917_exp-=_35521_n;
	}
	_iter_next_4753520432:;
	goto _iter_begin_4753520432;
	_iter_end_4753520432:;
	(_31917_exp)--;
	if (_31917_exp < (_31830_flt._field_bias + 1LL)) {
		jule::Int _37217_n = (_31830_flt._field_bias + 1LL) - _31917_exp;
		(*this)._method_shift(static_cast<jule::Int>((-(_37217_n))));
		_31917_exp+=_37217_n;
	}
	if ((_31917_exp - _31830_flt._field_bias) >= ((1LL << _31830_flt._field_expbits) - 1LL)) {
		goto _julec_label_overflow;
	}
	(*this)._method_shift(static_cast<jule::Int>(1LL + _31830_flt._field_mantbits));
	_32017_mant=static_cast<jule::U64>((*this)._method_rounded_integer());
	if (_32017_mant == (2LL << _31830_flt._field_mantbits)) {
		_32017_mant>>=1LL;
		(_31917_exp)++;
		if ((_31917_exp - _31830_flt._field_bias) >= ((1LL << _31830_flt._field_expbits) - 1LL)) {
			goto _julec_label_overflow;
		}
	}
	if ((_32017_mant & (1LL << _31830_flt._field_mantbits)) == 0LL) {
		_31917_exp=_31830_flt._field_bias;
	}
	goto _julec_label_out;
	_julec_label_overflow:;
	_32017_mant=0LL;
	_31917_exp=static_cast<jule::Int>(((1LL << _31830_flt._field_expbits) - 1LL) + _31830_flt._field_bias);
	_31856_overflow=true;
	_julec_label_out:;
	jule::U64 _40817_bits = _32017_mant & ((static_cast<jule::U64>(1LLU) << _31830_flt._field_mantbits) - 1LL);
	_40817_bits|=static_cast<jule::U64>(static_cast<jule::U64>((_31917_exp - _31830_flt._field_bias) & ((1LL << _31830_flt._field_expbits) - 1LL)) << _31830_flt._field_mantbits);
	if ((*this)._field_neg) {
		_40817_bits|=static_cast<jule::Int>((1LL << _31830_flt._field_mantbits) << _31830_flt._field_expbits);
	}
	_31848_b = _40817_bits;
	_31856_overflow = _31856_overflow;
	return std::make_tuple(_31848_b,_31856_overflow);
}



inline void _13ff7af20_Decimal::_method_assign(jule::U64 _15229_v) {
	jule::Array<jule::U8,24> _15317_buf = jule::Array<jule::U8,24>({});
	jule::Int _15617_n = 0LL;
	_iter_begin_4753565328:;
	if (!(_15229_v > 0LL)) { goto _iter_end_4753565328; }
	{
		jule::U64 _15817_v1 = jule::div(_15229_v,10LL);
		_15229_v-=static_cast<jule::U64>(10LL * _15817_v1);
		_15317_buf[static_cast<jule::Int>(_15617_n)]=static_cast<jule::U8>(_15229_v + '0');
		(_15617_n)++;
		_15229_v=_15817_v1;
	}
	_iter_next_4753565328:;
	goto _iter_begin_4753565328;
	_iter_end_4753565328:;
	(*this)._field_nd=0LL;
	(_15617_n)--;
	_iter_begin_4753569472:;
	if (!(_15617_n >= 0LL)) { goto _iter_end_4753569472; }
	{
		(*this)._field_d[static_cast<jule::Int>((*this)._field_nd)]=_15317_buf[static_cast<jule::Int>(_15617_n)];
		((*this)._field_nd)++;
	}
	_iter_next_4753569472:;
	(_15617_n)--;
	goto _iter_begin_4753569472;
	_iter_end_4753569472:;
	(*this)._field_dp=(*this)._field_nd;
	_13ff7af20_trim((*this));
}



inline void _13ff7af20_Decimal::_method_shift(jule::Int _17728_k) {
	{
		if (!(((*this)._field_nd == 0LL))) { goto _case_end_4753578448; }
		goto _match_end_4753578176;
		_case_end_4753578448:;
		if (!((_17728_k > 0LL))) { goto _case_end_4753578560; }
		_case_begin_4753578560:;
		{
			_iter_begin_4753581232:;
			if (!(_17728_k > 60LL)) { goto _iter_end_4753581232; }
			{
				_13ff7af20_left_shift((*this),60LLU);
				_17728_k-=60LL;
			}
			_iter_next_4753581232:;
			goto _iter_begin_4753581232;
			_iter_end_4753581232:;
			_13ff7af20_left_shift((*this),static_cast<jule::Uint>(_17728_k));
		}
		goto _match_end_4753578176;
		_case_end_4753578560:;
		if (!((_17728_k < 0LL))) { goto _case_end_4753578672; }
		_case_begin_4753578672:;
		{
			_iter_begin_4753580704:;
			if (!(_17728_k < -60LL)) { goto _iter_end_4753580704; }
			{
				_13ff7af20_right_shift((*this),60LLU);
				_17728_k+=60LL;
			}
			_iter_next_4753580704:;
			goto _iter_begin_4753580704;
			_iter_end_4753580704:;
			_13ff7af20_right_shift((*this),static_cast<jule::Uint>((-(_17728_k))));
		}
		goto _match_end_4753578176;
		_case_end_4753578672:;
		_match_end_4753578176:;
	}
}



inline void _13ff7af20_Decimal::_method_round_down(jule::Int _19729_nd) {
	if ((_19729_nd < 0LL) || (_19729_nd >= (*this)._field_nd)) {
		return;
	}
	(*this)._field_nd=_19729_nd;
	_13ff7af20_trim((*this));
}



inline void _13ff7af20_Decimal::_method_round_up(jule::Int _20627_nd) {
	if ((_20627_nd < 0LL) || (_20627_nd >= (*this)._field_nd)) {
		return;
	}
	jule::Int _21217_i = _20627_nd - 1LL;
	_iter_begin_4753596080:;
	if (!(_21217_i >= 0LL)) { goto _iter_end_4753596080; }
	{
		jule::U8 _21417_c = (*this)._field_d[static_cast<jule::Int>(_21217_i)];
		if (_21417_c < '9') {
			((*this)._field_d[static_cast<jule::Int>(_21217_i)])++;
			(*this)._field_nd=_21217_i + 1LL;
			return;
		}
	}
	_iter_next_4753596080:;
	(_21217_i)--;
	goto _iter_begin_4753596080;
	_iter_end_4753596080:;
	(*this)._field_d[static_cast<jule::Int>(0LL)]='1';
	(*this)._field_nd=1LL;
	((*this)._field_dp)++;
}



inline void _13ff7af20_Decimal::_method_round(jule::Int _23324_nd) {
	if ((_23324_nd < 0LL) || (_23324_nd >= (*this)._field_nd)) {
		return;
	}
	if (_13ff7af20_should_round_up((*this),_23324_nd)) {
		(*this)._method_round_up(_23324_nd);
	} else {
		(*this)._method_round_down(_23324_nd);
	}
}



inline jule::U64 _13ff7af20_Decimal::_method_rounded_integer(void) {
	if ((*this)._field_dp > 20LL) {
		return jule::MAX_U64;
	}
	jule::Int _25017_i = 0LL;
	jule::U64 _25117_n = 0LLU;
	_iter_begin_4753615840:;
	if (!((_25017_i < (*this)._field_dp) && (_25017_i < (*this)._field_nd))) { goto _iter_end_4753615840; }
	{
		_25117_n=(_25117_n * 10LL) + static_cast<jule::U64>((*this)._field_d[static_cast<jule::Int>(_25017_i)] - '0');
	}
	_iter_next_4753615840:;
	(_25017_i)++;
	goto _iter_begin_4753615840;
	_iter_end_4753615840:;
	_iter_begin_4753617568:;
	if (!(_25017_i < (*this)._field_dp)) { goto _iter_end_4753617568; }
	{
		_25117_n*=10LL;
	}
	_iter_next_4753617568:;
	(_25017_i)++;
	goto _iter_begin_4753617568;
	_iter_end_4753617568:;
	if (_13ff7af20_should_round_up((*this),(*this)._field_dp)) {
		(_25117_n)++;
	}
	return _25117_n;
}







std::ostream &operator<<(std::ostream &_Stream, const _13ff7af20_Decimal &_Src) {
	_Stream << "Decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _13fe81720_Log::_method_flat(void) {
	return (*this)._field_text;
}



inline jule::Str _13fe81720_Log::_method_error(void) {
	jule::Str _2817_log = jule::Str("", 0);
	_2817_log+=(*this)._field_path;
	_2817_log+=jule::Str(":", 1);
	_2817_log+=_10ff65780_itoa((*this)._field_row);
	_2817_log+=jule::Str(":", 1);
	_2817_log+=_10ff65780_itoa((*this)._field_column);
	_2817_log+=jule::Str(" ", 1);
	_2817_log+=(*this)._field_text;
	return _2817_log;
}



inline jule::Str _13fe81720_Log::_method_to_str(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		if (!((0LLU) == _match_expr)) { goto _case_end_4753924736; }
		_case_begin_4753924736:;
		{
			return (*this)._method_flat();
		}
		goto _match_end_4753914816;
		_case_end_4753924736:;
		if (!((1LLU) == _match_expr)) { goto _case_end_4753924848; }
		_case_begin_4753924848:;
		{
			return (*this)._method_error();
		}
		goto _match_end_4753914816;
		_case_end_4753924848:;
		_case_begin_4753923712:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4753914816;
		_case_end_4753923712:;
		_match_end_4753914816:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _13fe81720_Log &_Src) {
	_Stream << "Log{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "text:" << _Src._field_text;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _118d9e870_DirEntry &_Src) {
	_Stream << "DirEntry{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "stat:" << _Src._field_stat;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::I64,jule::Int> _118da2050_File::_method_seek(jule::I64 _5527_offset,jule::Int _5540_origin) {
	jule::I64 _5613_pos = _13ff06980_seek((*this)._field_handle,_5527_offset,static_cast<jule::Int>(_5540_origin));
	return std::make_tuple(_5613_pos,0LLU);
}



inline std::tuple<jule::Int,jule::Int> _118da2050_File::_method_read(jule::Slice<jule::U8> _7031_buff) {
	jule::Int _7047_n = jule::Int();
	if (_7031_buff.len() == 0LL) {
		_7047_n = 0LL;
		return std::make_tuple(_7047_n,0LLU);
	}
	_7047_n=static_cast<jule::Int>(static_cast<jule::Int>(_13ff06980_read((*this)._field_handle,(&(_7031_buff[static_cast<jule::Int>(0LL)])),static_cast<jule::Uint>(_7031_buff.len()))));
	if (_7047_n == -1LL) {
		_7047_n=0LL;
		_7047_n = _7047_n;
		return std::make_tuple(_7047_n,_118d89970_get_last_fs_error());
	}
	_7047_n = _7047_n;
	return std::make_tuple(_7047_n,0LLU);
}



inline std::tuple<jule::Int,jule::Int> _118da2050_File::_method_write(jule::Slice<jule::U8> _8928_buff) {
	jule::Int _8944_n = jule::Int();
	if (_8928_buff.len() == 0LL) {
		_8944_n = 0LL;
		return std::make_tuple(_8944_n,0LLU);
	}
	_8944_n=static_cast<jule::Int>(static_cast<jule::Int>(_13ff06980_write((*this)._field_handle,(&(_8928_buff[static_cast<jule::Int>(0LL)])),static_cast<jule::Uint>(_8928_buff.len()))));
	if (_8944_n == -1LL) {
		_8944_n=0LL;
		_8944_n = _8944_n;
		return std::make_tuple(_8944_n,_118d89970_get_last_fs_error());
	}
	_8944_n = _8944_n;
	return std::make_tuple(_8944_n,0LLU);
}



inline jule::Int _118da2050_File::_method_close(void) {
	if (_13ff06980_close((*this)._field_handle) == -1LL) {
		return _118d89970_get_last_fs_error();
	}
	return 0LLU;
}







std::ostream &operator<<(std::ostream &_Stream, const _118da2050_File &_Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _118db5e40_Status::_method_is_dir(void) {
	return ((*this)._field_mode & 16384LL) == 16384LL;
}



inline jule::Bool _118db5e40_Status::_method_is_reg(void) {
	return ((*this)._field_mode & 32768LL) == 32768LL;
}







std::ostream &operator<<(std::ostream &_Stream, const _118db5e40_Status &_Src) {
	_Stream << "Status{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _118dab460_accept_range &_Src) {
	_Stream << "accept_range{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}



inline jule::Int _11911a8a0_Token::_method_prec(void) {
	if ((*this)._field_id != 7LLU) {
		return -1LL;
	}
	{
		auto &_match_expr{ (*this)._field_kind };
		if (!((jule::Str("*", 1)) == _match_expr || (jule::Str("%", 1)) == _match_expr || (jule::Str("/", 1)) == _match_expr || (jule::Str(">>", 2)) == _match_expr || (jule::Str("<<", 2)) == _match_expr || (jule::Str("&", 1)) == _match_expr)) { goto _case_end_4755366992; }
		_case_begin_4755366992:;
		{
			return 5LL;
		}
		goto _match_end_4755363568;
		_case_end_4755366992:;
		if (!((jule::Str("+", 1)) == _match_expr || (jule::Str("-", 1)) == _match_expr || (jule::Str("|", 1)) == _match_expr || (jule::Str("^", 1)) == _match_expr)) { goto _case_end_4755367104; }
		_case_begin_4755367104:;
		{
			return 4LL;
		}
		goto _match_end_4755363568;
		_case_end_4755367104:;
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr || (jule::Str("=", 1)) == _match_expr || (jule::Str("<", 1)) == _match_expr || (jule::Str("<=", 2)) == _match_expr || (jule::Str(">", 1)) == _match_expr || (jule::Str(">=", 2)) == _match_expr)) { goto _case_end_4755365248; }
		_case_begin_4755365248:;
		{
			return 3LL;
		}
		goto _match_end_4755363568;
		_case_end_4755365248:;
		if (!((jule::Str("&&", 2)) == _match_expr)) { goto _case_end_4755365360; }
		_case_begin_4755365360:;
		{
			return 2LL;
		}
		goto _match_end_4755363568;
		_case_end_4755365360:;
		if (!((jule::Str("||", 2)) == _match_expr)) { goto _case_end_4755365472; }
		_case_begin_4755365472:;
		{
			return 1LL;
		}
		goto _match_end_4755363568;
		_case_end_4755365472:;
		_case_begin_4755362496:;
		{
			return -1LL;
		}
		goto _match_end_4755363568;
		_case_end_4755362496:;
		_match_end_4755363568:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _11911a8a0_Token &_Src) {
	_Stream << "Token{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11916a220_KindPair &_Src) {
	_Stream << "KindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _118d9a790_CommentGroup &_Src) {
	_Stream << "CommentGroup{";
	_Stream << "comments:" << _Src._field_comments;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _118d9a790_NamespaceTypeDecl &_Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "idents:" << _Src._field_idents << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _118d9a790_RefTypeDecl &_Src) {
	_Stream << "RefTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _118d9a790_SlcTypeDecl &_Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _118d9a790_TupleTypeDecl &_Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "types:" << _Src._field_types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _118d9a790_PtrTypeDecl::_method_is_unsafe(void) {
	return (!(jule::real((*this)._field_elem)));
}







std::ostream &operator<<(std::ostream &_Stream, const _118d9a790_PtrTypeDecl &_Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _118d9a790_ArrTypeDecl::_method_auto_sized(void) {
	return (!(jule::real((*this)._field_size)));
}







std::ostream &operator<<(std::ostream &_Stream, const _118d9a790_ArrTypeDecl &_Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _118d9a790_MapTypeDecl &_Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _118d9a790_RetTypeDecl &_Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "idents:" << _Src._field_idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _118d9a790_TupleExpr &_Src) {
	_Stream << "TupleExpr{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _118d9a790_LitExpr::_method_is_nil(void) {
	return (*this)._field_value == jule::Str("nil", 3);
}







std::ostream &operator<<(std::ostream &_Stream, const _118d9a790_LitExpr &_Src) {
	_Stream << "LitExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "value:" << _Src._field_value;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _118d9a790_UnsafeExpr &_Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _118d9a790_IdentExpr::_method_is_self(void) {
	return (*this)._field_ident == jule::Str("self", 4);
}







std::ostream &operator<<(std::ostream &_Stream, const _118d9a790_IdentExpr &_Src) {
	_Stream << "IdentExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _118d9a790_UnaryExpr &_Src) {
	_Stream << "UnaryExpr{";
	_Stream << "op:" << _Src._field_op << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _118d9a790_VariadicExpr &_Src) {
	_Stream << "VariadicExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _118d9a790_CastExpr &_Src) {
	_Stream << "CastExpr{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _118d9a790_NsSelectionExpr &_Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "ns:" << _Src._field_ns << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _118d9a790_SubIdentExpr &_Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "is_self:" << _Src._field_is_self << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _118d9a790_BinopExpr &_Src) {
	_Stream << "BinopExpr{";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _118d9a790_FieldExprPair::_method_is_targeted(void) {
	return (*this)._field_field._field_id != 0LLU;
}







std::ostream &operator<<(std::ostream &_Stream, const _118d9a790_FieldExprPair &_Src) {
	_Stream << "FieldExprPair{";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _118d9a790_StructLit &_Src) {
	_Stream << "StructLit{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _118d9a790_BraceLit::_method_is_empty(void) {
	return (*this)._field_exprs.len() == 0LL;
}







std::ostream &operator<<(std::ostream &_Stream, const _118d9a790_BraceLit &_Src) {
	_Stream << "BraceLit{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _118d9a790_KeyValPair &_Src) {
	_Stream << "KeyValPair{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val << ", ";
	_Stream << "colon:" << _Src._field_colon;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _118d9a790_SliceExpr::_method_is_empty(void) {
	return (*this)._field_elems.len() == 0LL;
}







std::ostream &operator<<(std::ostream &_Stream, const _118d9a790_SliceExpr &_Src) {
	_Stream << "SliceExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _118d9a790_IndexingExpr &_Src) {
	_Stream << "IndexingExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "index:" << _Src._field_index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _118d9a790_SlicingExpr &_Src) {
	_Stream << "SlicingExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "start:" << _Src._field_start << ", ";
	_Stream << "to:" << _Src._field_to;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _118d9a790_LabelSt &_Src) {
	_Stream << "LabelSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _118d9a790_FallSt &_Src) {
	_Stream << "FallSt{";
	_Stream << "token:" << _Src._field_token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _118d9a790_AssignSt &_Src) {
	_Stream << "AssignSt{";
	_Stream << "declarative:" << _Src._field_declarative << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _118d9a790_ScopeTree &_Src) {
	_Stream << "ScopeTree{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "deferred:" << _Src._field_deferred << ", ";
	_Stream << "stmts:" << _Src._field_stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _118d9a790_RetSt &_Src) {
	_Stream << "RetSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _118d9a790_Iter::_method_is_inf(void) {
	return (*this)._field_kind == nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _118d9a790_Iter &_Src) {
	_Stream << "Iter{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _118d9a790_WhileKind::_method_is_while_next(void) {
	return (*this)._field_next != nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _118d9a790_WhileKind &_Src) {
	_Stream << "WhileKind{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "next:" << _Src._field_next << ", ";
	_Stream << "next_token:" << _Src._field_next_token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _118d9a790_RangeKind &_Src) {
	_Stream << "RangeKind{";
	_Stream << "in_token:" << _Src._field_in_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "key_a:" << _Src._field_key_a << ", ";
	_Stream << "key_b:" << _Src._field_key_b;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _118d9a790_Conditional &_Src) {
	_Stream << "Conditional{";
	_Stream << "head:" << _Src._field_head << ", ";
	_Stream << "tail:" << _Src._field_tail << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _118d9a790_MatchCase &_Src) {
	_Stream << "MatchCase{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "type_match:" << _Src._field_type_match << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "cases:" << _Src._field_cases << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _118da92c0_FileInfo &_Src) {
	_Stream << "FileInfo{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11912dd80_Stmt &_Src) {
	_Stream << "Stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _11912dd80_ScopeParser::_method_stop(void) {
	(*this)._field_pos=-1LL;
}



inline jule::Bool _11912dd80_ScopeParser::_method_stopped(void) {
	return (*this)._field_pos == -1LL;
}



inline jule::Bool _11912dd80_ScopeParser::_method_finished(void) {
	return (*this)._field_pos >= (*this)._field_stms.len();
}



inline jule::Bool _11912dd80_ScopeParser::_method_is_last_st(void) {
	return ((*this)._field_pos + 1LL) >= (*this)._field_stms.len();
}



inline void _11912dd80_ScopeParser::_method_push_err(_11911a8a0_Token _15827_token,jule::Str _15841_key) {
	(*this)._field_p->_method_push_err(_15827_token,_15841_key,jule::Slice<jule::Any>({}));
}



inline void _11912dd80_ScopeParser::_method_insert_as_next(jule::Slice<_11911a8a0_Token> _16037_tokens) {
	(*this)._field_stms=append((*this)._field_stms.slice(0LL,static_cast<jule::Int>((*this)._field_pos + 1LL)),(*this)._field_stms.slice(static_cast<jule::Int>((*this)._field_pos)));
	(*this)._field_stms[static_cast<jule::Int>((*this)._field_pos + 1LL)]=jule::new_struct<_11912dd80_Stmt>(new( std::nothrow ) _11912dd80_Stmt(_16037_tokens,jule::Bool()));
}



inline jule::Ref<_11912dd80_Stmt> _11912dd80_ScopeParser::_method_next(void) {
	((*this)._field_pos)++;
	return (*this)._field_stms[static_cast<jule::Int>((*this)._field_pos)];
}



inline jule::Ref<_118d9a790_ScopeTree> _11912dd80_ScopeParser::_method_build_scope(jule::Slice<_11911a8a0_Token> _17034_tokens) {
	jule::Ref<_118d9a790_ScopeTree> _17117_s = _11912dd80_new_scope();
	_17117_s->_field_parent=(*this)._field_s;
	_11912dd80_ScopeParser _17317_ssp = _11912dd80_ScopeParser((*this)._field_p,jule::Ref<_118d9a790_ScopeTree>(),jule::Slice<jule::Ref<_11912dd80_Stmt>>(),jule::Int());
	_17317_ssp._method_build(_17034_tokens,_17117_s);
	return _17117_s;
}



inline jule::Any _11912dd80_ScopeParser::_method_build_var_st(jule::Slice<_11911a8a0_Token> _18035_tokens) {
	jule::Ref<_118d9a790_VarDecl> _18117_v = (*this)._field_p->_method_build_var(_18035_tokens);
	_18117_v->_field_scope=(*this)._field_s;
	return jule::Any(_18117_v);
}



inline jule::Any _11912dd80_ScopeParser::_method_build_ret_st(jule::Slice<_11911a8a0_Token> _18635_tokens) {
	jule::Ref<_118d9a790_RetSt> _18717_st = jule::new_struct<_118d9a790_RetSt>(new( std::nothrow ) _118d9a790_RetSt(_18635_tokens[static_cast<jule::Int>(0LL)],jule::Ref<_118d9a790_Expr>()));
	if (_18635_tokens.len() > 1LL) {
		_18635_tokens=_18635_tokens.slice(static_cast<jule::Int>(1LL));
		_18717_st->_field_expr=(*this)._field_p->_method_build_expr(_18635_tokens);
	}
	return jule::Any(_18717_st);
}



inline jule::Any _11912dd80_ScopeParser::_method_build_while_next_iter(jule::Ref<_11912dd80_Stmt> _19744_s) {
	jule::Ref<_118d9a790_Iter> _19817_it = jule::new_struct<_118d9a790_Iter>(new( std::nothrow ) _118d9a790_Iter(_19744_s->_field_tokens[static_cast<jule::Int>(0LL)],jule::Any(),jule::Ref<_118d9a790_ScopeTree>()));
	jule::Slice<_11911a8a0_Token> _20117_tokens = _19744_s->_field_tokens.slice(static_cast<jule::Int>(1LL));
	jule::Ref<_118d9a790_WhileKind> _20217_kind = jule::new_struct<_118d9a790_WhileKind>(new( std::nothrow ) _118d9a790_WhileKind());
	if (_20117_tokens.len() > 0LL) {
		_20217_kind->_field_expr=(*this)._field_p->_method_build_expr(_20117_tokens);
	}
	if ((*this)._method_is_last_st()) {
		(*this)._method_push_err(_19817_it->_field_token,jule::Str("invalid_syntax", 14));
		return jule::Any(nullptr);
	}
	_20117_tokens=(*this)._method_next()->_field_tokens;
	jule::Slice<_11911a8a0_Token> _21417_st_tokens = _11943fdb0_get_block_expr(_20117_tokens);
	if (_21417_st_tokens.len() > 0LL) {
		jule::Ref<_11912dd80_Stmt> _21621_s = jule::new_struct<_11912dd80_Stmt>(new( std::nothrow ) _11912dd80_Stmt(_21417_st_tokens,_19744_s->_field_terminated));
		_20217_kind->_field_next_token=_21417_st_tokens[static_cast<jule::Int>(0LL)];
		_20217_kind->_field_next=(*this)._method_build_st(_21621_s);
	}
	jule::I64 _22417_i = _21417_st_tokens.len();
	jule::Slice<_11911a8a0_Token> _22517_block_tokens = _11953bd10_range(_22417_i,jule::Str("{", 1),jule::Str("}", 1),_20117_tokens);
	if (_22517_block_tokens == nullptr) {
		(*this)._method_stop();
		(*this)._method_push_err(_19817_it->_field_token,jule::Str("body_not_exist", 14));
		return jule::Any(nullptr);
	}
	if (_22417_i < _20117_tokens.len()) {
		(*this)._method_push_err(_20117_tokens[static_cast<jule::Int>(_22417_i)],jule::Str("invalid_syntax", 14));
	}
	_19817_it->_field_scope=(*this)._method_build_scope(_22517_block_tokens);
	_19817_it->_field_kind=jule::Any(_20217_kind);
	return jule::Any(_19817_it);
}



inline jule::Ref<_118d9a790_WhileKind> _11912dd80_ScopeParser::_method_build_while_iter_kind(jule::Slice<_11911a8a0_Token> _24144_tokens) {
	return jule::new_struct<_118d9a790_WhileKind>(new( std::nothrow ) _118d9a790_WhileKind((*this)._field_p->_method_build_expr(_24144_tokens),jule::Any(),_11911a8a0_Token()));
}



inline jule::Slice<jule::Slice<_11911a8a0_Token>> _11912dd80_ScopeParser::_method_get_range_kind_keys_tokens(jule::Slice<_11911a8a0_Token> _24749_toks) {
	jule::Slice<jule::Slice<_11911a8a0_Token>> _24818_vars;
	jule::Slice<_13fe81720_Log> _24824_errs;
	std::tie(_24818_vars,_24824_errs) = _11953bd10_parts(_24749_toks,8LLU,true);
	(*this)._field_p->_field_errors=append((*this)._field_p->_field_errors,_24824_errs);
	return _24818_vars;
}



inline jule::Ref<_118d9a790_VarDecl> _11912dd80_ScopeParser::_method_build_range_kind_key(jule::Slice<_11911a8a0_Token> _25343_tokens) {
	if (_25343_tokens.len() == 0LL) {
		return jule::new_ref<_118d9a790_VarDecl>();
	}
	jule::Ref<_118d9a790_VarDecl> _25717_key = jule::new_struct<_118d9a790_VarDecl>(new( std::nothrow ) _118d9a790_VarDecl(jule::Ref<_118d9a790_ScopeTree>(),_25343_tokens[static_cast<jule::Int>(0LL)],jule::Str(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_118d9a790_CommentGroup>(),jule::Ref<_118d9a790_TypeDecl>(),jule::Ref<_118d9a790_Expr>()));
	if (_25717_key->_field_token._field_id == 36LLU) {
		_25717_key->_field_mutable=true;
		if (_25343_tokens.len() == 1LL) {
			(*this)._method_push_err(_25717_key->_field_token,jule::Str("invalid_syntax", 14));
		}
		_25717_key->_field_token=_25343_tokens[static_cast<jule::Int>(1LL)];
	} else if (_25343_tokens.len() > 1LL) {
		(*this)._method_push_err(_25343_tokens[static_cast<jule::Int>(1LL)],jule::Str("invalid_syntax", 14));
	}
	if (_25717_key->_field_token._field_id != 2LLU) {
		(*this)._method_push_err(_25717_key->_field_token,jule::Str("invalid_syntax", 14));
		return jule::new_ref<_118d9a790_VarDecl>();
	}
	_25717_key->_field_ident=_25717_key->_field_token._field_kind;
	return _25717_key;
}



inline jule::Slice<jule::Ref<_118d9a790_VarDecl>> _11912dd80_ScopeParser::_method_build_range_kind_keys(jule::Slice<jule::Slice<_11911a8a0_Token>> _27744_parts) {
	jule::Slice<jule::Ref<_118d9a790_VarDecl>> _27817_keys = nullptr;
	{
		auto &__julec_range_expr = _27744_parts;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Slice<_11911a8a0_Token> _11912dd80_tokens = *__julec_range_begin;
			_iter_begin_4748459184:;
			{
				_27817_keys=append(_27817_keys,jule::Slice<jule::Ref<_118d9a790_VarDecl>>({(*this)._method_build_range_kind_key(_11912dd80_tokens)}));
			}
			_iter_next_4748459184:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11912dd80_tokens = *__julec_range_begin; goto _iter_begin_4748459184; }
			_iter_end_4748459184:;
		}
	}
	return _27817_keys;
}



inline void _11912dd80_ScopeParser::_method_setup_range_kind_keys_plain(jule::Ref<_118d9a790_RangeKind> _28550_rng,jule::Slice<_11911a8a0_Token> _28571_tokens) {
	jule::Slice<jule::Slice<_11911a8a0_Token>> _28617_key_tokens = (*this)._method_get_range_kind_keys_tokens(_28571_tokens);
	if (_28617_key_tokens.len() == 0LL) {
		return;
	}
	if (_28617_key_tokens.len() > 2LL) {
		(*this)._method_push_err(_28550_rng->_field_in_token,jule::Str("much_range_vars", 15));
	}
	jule::Slice<jule::Ref<_118d9a790_VarDecl>> _29317_keys = (*this)._method_build_range_kind_keys(_28617_key_tokens);
	_28550_rng->_field_key_a=_29317_keys[static_cast<jule::Int>(0LL)];
	if (_29317_keys.len() > 1LL) {
		_28550_rng->_field_key_b=_29317_keys[static_cast<jule::Int>(1LL)];
	}
}



inline void _11912dd80_ScopeParser::_method_setup_range_kind_keys_explicit(jule::Ref<_118d9a790_RangeKind> _30053_rng,jule::Slice<_11911a8a0_Token> _30074_tokens) {
	jule::Int _30117_i = 0LL;
	jule::Slice<_11911a8a0_Token> _30217_rang = _11953bd10_range(_30117_i,jule::Str("(", 1),jule::Str(")", 1),_30074_tokens);
	if (_30117_i < _30074_tokens.len()) {
		(*this)._method_push_err(_30053_rng->_field_in_token,jule::Str("invalid_syntax", 14));
	}
	(*this)._method_setup_range_kind_keys_plain(_30053_rng,_30217_rang);
}



inline void _11912dd80_ScopeParser::_method_setup_range_kind_keys(jule::Ref<_118d9a790_RangeKind> _30944_rng,jule::Slice<_11911a8a0_Token> _30965_tokens) {
	if (_30965_tokens[static_cast<jule::Int>(0LL)]._field_id == 3LLU) {
		if (_30965_tokens[static_cast<jule::Int>(0LL)]._field_kind != jule::Str("(", 1)) {
			(*this)._method_push_err(_30965_tokens[static_cast<jule::Int>(0LL)],jule::Str("invalid_syntax", 14));
			return;
		}
		(*this)._method_setup_range_kind_keys_explicit(_30944_rng,_30965_tokens);
		return;
	}
	(*this)._method_setup_range_kind_keys_plain(_30944_rng,_30965_tokens);
}



inline jule::Ref<_118d9a790_RangeKind> _11912dd80_ScopeParser::_method_build_range_iter_kind(jule::Slice<_11911a8a0_Token> _32144_var_tokens,jule::Slice<_11911a8a0_Token> _32169_expr_tokens,_11911a8a0_Token _32191_in_token) {
	jule::Ref<_118d9a790_RangeKind> _32217_rng = jule::new_struct<_118d9a790_RangeKind>(new( std::nothrow ) _118d9a790_RangeKind(_32191_in_token,jule::Ref<_118d9a790_Expr>(),jule::Ref<_118d9a790_VarDecl>(),jule::Ref<_118d9a790_VarDecl>()));
	if (_32169_expr_tokens.len() == 0LL) {
		(*this)._method_push_err(_32217_rng->_field_in_token,jule::Str("missing_expr", 12));
		return _32217_rng;
	}
	_32217_rng->_field_expr=(*this)._field_p->_method_build_expr(_32169_expr_tokens);
	if (_32144_var_tokens.len() > 0LL) {
		(*this)._method_setup_range_kind_keys(_32217_rng,_32144_var_tokens);
	}
	return _32217_rng;
}



inline jule::Any _11912dd80_ScopeParser::_method_build_common_iter_kind(jule::Slice<_11911a8a0_Token> _33645_tokens,_11911a8a0_Token _33662_err_tok) {
	jule::Int _33717_brace_n = 0LL;
	{
		auto &__julec_range_expr = _33645_tokens;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _11912dd80_i = 0;
			_11911a8a0_Token _11912dd80_tok = *__julec_range_begin;
			_iter_begin_4748516352:;
			{
				if (_11912dd80_tok._field_id == 3LLU) {
					{
						auto &_match_expr{ _11912dd80_tok._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4748521648; }
						_case_begin_4748521648:;
						{
							(_33717_brace_n)++;
							goto _iter_next_4748516352;
						}
						goto _match_end_4748519616;
						_case_end_4748521648:;
						_case_begin_4748520528:;
						{
							(_33717_brace_n)--;
						}
						goto _match_end_4748519616;
						_case_end_4748520528:;
						_match_end_4748519616:;
					}
				}
				if (_33717_brace_n != 0LL) {
					goto _iter_next_4748516352;
				}
				{
					auto &_match_expr{ _11912dd80_tok._field_id };
					if (!((15LLU) == _match_expr)) { goto _case_end_4748523872; }
					_case_begin_4748523872:;
					{
						jule::Slice<_11911a8a0_Token> _35625_decl_tokens = _33645_tokens.slice(0LL,static_cast<jule::Int>(_11912dd80_i));
						jule::Slice<_11911a8a0_Token> _35725_expr_tokens = _33645_tokens.slice(static_cast<jule::Int>(_11912dd80_i + 1LL));
						return jule::Any((*this)._method_build_range_iter_kind(_35625_decl_tokens,_35725_expr_tokens,_11912dd80_tok));
					}
					goto _match_end_4748524400;
					_case_end_4748523872:;
					_match_end_4748524400:;
				}
			}
			_iter_next_4748516352:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_11912dd80_i; _11912dd80_tok = *__julec_range_begin; goto _iter_begin_4748516352; }
			_iter_end_4748516352:;
		}
	}
	return jule::Any((*this)._method_build_while_iter_kind(_33645_tokens));
}



inline jule::Any _11912dd80_ScopeParser::_method_build_common_iter(jule::Slice<_11911a8a0_Token> _36440_tokens) {
	jule::Ref<_118d9a790_Iter> _36517_it = jule::new_struct<_118d9a790_Iter>(new( std::nothrow ) _118d9a790_Iter(_36440_tokens[static_cast<jule::Int>(0LL)],jule::Any(),jule::Ref<_118d9a790_ScopeTree>()));
	_36440_tokens=_36440_tokens.slice(static_cast<jule::Int>(1LL));
	if (_36440_tokens.len() == 0LL) {
		(*this)._method_stop();
		(*this)._method_push_err(_36517_it->_field_token,jule::Str("body_not_exist", 14));
		return jule::Any(nullptr);
	}
	jule::Slice<_11911a8a0_Token> _37417_expr_tokens = _11943fdb0_get_block_expr(_36440_tokens);
	if (_37417_expr_tokens.len() > 0LL) {
		_36517_it->_field_kind=(*this)._method_build_common_iter_kind(_37417_expr_tokens,_36517_it->_field_token);
	}
	jule::I64 _37817_i = _37417_expr_tokens.len();
	jule::Slice<_11911a8a0_Token> _37917_scope_tokens = _11953bd10_range(_37817_i,jule::Str("{", 1),jule::Str("}", 1),_36440_tokens);
	if (_37917_scope_tokens == nullptr) {
		(*this)._method_stop();
		(*this)._method_push_err(_36517_it->_field_token,jule::Str("body_not_exist", 14));
		return jule::Any(nullptr);
	}
	if (_37817_i < _36440_tokens.len()) {
		(*this)._method_push_err(_36440_tokens[static_cast<jule::Int>(_37817_i)],jule::Str("invalid_syntax", 14));
	}
	_36517_it->_field_scope=(*this)._method_build_scope(_37917_scope_tokens);
	return jule::Any(_36517_it);
}



inline jule::Any _11912dd80_ScopeParser::_method_buid_iter_st(jule::Ref<_11912dd80_Stmt> _39235_st) {
	if (_39235_st->_field_terminated) {
		return (*this)._method_build_while_next_iter(_39235_st);
	}
	return (*this)._method_build_common_iter(_39235_st->_field_tokens);
}



inline jule::Any _11912dd80_ScopeParser::_method_build_break_st(jule::Slice<_11911a8a0_Token> _39937_tokens) {
	jule::Ref<_118d9a790_BreakSt> _40017_brk = jule::new_struct<_118d9a790_BreakSt>(new( std::nothrow ) _118d9a790_BreakSt(_39937_tokens[static_cast<jule::Int>(0LL)],_11911a8a0_Token()));
	if (_39937_tokens.len() > 1LL) {
		if (_39937_tokens[static_cast<jule::Int>(1LL)]._field_id != 2LLU) {
			(*this)._method_push_err(_39937_tokens[static_cast<jule::Int>(1LL)],jule::Str("invalid_syntax", 14));
		} else {
			_40017_brk->_field_label=_39937_tokens[static_cast<jule::Int>(1LL)];
			if (_39937_tokens.len() > 2LL) {
				(*this)._method_push_err(_39937_tokens[static_cast<jule::Int>(1LL)],jule::Str("invalid_syntax", 14));
			}
		}
	}
	return jule::Any(_40017_brk);
}



inline jule::Any _11912dd80_ScopeParser::_method_build_cont_st(jule::Slice<_11911a8a0_Token> _41636_tokens) {
	jule::Ref<_118d9a790_ContSt> _41717_cont = jule::new_struct<_118d9a790_ContSt>(new( std::nothrow ) _118d9a790_ContSt(_41636_tokens[static_cast<jule::Int>(0LL)],_11911a8a0_Token()));
	if (_41636_tokens.len() > 1LL) {
		if (_41636_tokens[static_cast<jule::Int>(1LL)]._field_id != 2LLU) {
			(*this)._method_push_err(_41636_tokens[static_cast<jule::Int>(1LL)],jule::Str("invalid_syntax", 14));
		} else {
			_41717_cont->_field_label=_41636_tokens[static_cast<jule::Int>(1LL)];
			if (_41636_tokens.len() > 2LL) {
				(*this)._method_push_err(_41636_tokens[static_cast<jule::Int>(1LL)],jule::Str("invalid_syntax", 14));
			}
		}
	}
	return jule::Any(_41717_cont);
}



inline jule::Ref<_118d9a790_If> _11912dd80_ScopeParser::_method_build_if(jule::Slice<_11911a8a0_Token>& _43332_tokens) {
	jule::Ref<_118d9a790_If> _43417_model = jule::new_struct<_118d9a790_If>(new( std::nothrow ) _118d9a790_If(_43332_tokens[static_cast<jule::Int>(0LL)],jule::Ref<_118d9a790_Expr>(),jule::Ref<_118d9a790_ScopeTree>()));
	_43332_tokens=_43332_tokens.slice(static_cast<jule::Int>(1LL));
	jule::Slice<_11911a8a0_Token> _43817_expr_tokens = _11943fdb0_get_block_expr(_43332_tokens);
	jule::Int _43917_i = 0LL;
	if (_43817_expr_tokens.len() == 0LL) {
		(*this)._method_push_err(_43417_model->_field_token,jule::Str("missing_expr", 12));
	} else {
		_43917_i=static_cast<jule::I64>(_43817_expr_tokens.len());
	}
	jule::Slice<_11911a8a0_Token> _44517_scope_tokens = _11953bd10_range(_43917_i,jule::Str("{", 1),jule::Str("}", 1),_43332_tokens);
	if (_44517_scope_tokens == nullptr) {
		(*this)._method_stop();
		(*this)._method_push_err(_43417_model->_field_token,jule::Str("body_not_exist", 14));
		return jule::new_ref<_118d9a790_If>();
	}
	if (_43917_i < _43332_tokens.len()) {
		if (_43332_tokens[static_cast<jule::Int>(_43917_i)]._field_id == 17LLU) {
			_43332_tokens=_43332_tokens.slice(static_cast<jule::Int>(_43917_i));
		} else {
			(*this)._method_push_err(_43332_tokens[static_cast<jule::Int>(_43917_i)],jule::Str("invalid_syntax", 14));
			_43332_tokens=nullptr;
		}
	}
	_43417_model->_field_expr=(*this)._field_p->_method_build_expr(_43817_expr_tokens);
	_43417_model->_field_scope=(*this)._method_build_scope(_44517_scope_tokens);
	return _43417_model;
}



inline jule::Ref<_118d9a790_Else> _11912dd80_ScopeParser::_method_build_else(jule::Slice<_11911a8a0_Token> _46433_tokens) {
	jule::Ref<_118d9a790_Else> _46517_els = jule::new_struct<_118d9a790_Else>(new( std::nothrow ) _118d9a790_Else(_46433_tokens[static_cast<jule::Int>(0LL)],jule::Ref<_118d9a790_ScopeTree>()));
	_46433_tokens=_46433_tokens.slice(static_cast<jule::Int>(1LL));
	jule::Int _46917_i = 0LL;
	jule::Slice<_11911a8a0_Token> _47017_scope_tokens = _11953bd10_range(_46917_i,jule::Str("{", 1),jule::Str("}", 1),_46433_tokens);
	if (_47017_scope_tokens == nullptr) {
		if (_46917_i < _46433_tokens.len()) {
			(*this)._method_push_err(_46517_els->_field_token,jule::Str("else_have_expr", 14));
		} else {
			(*this)._method_stop();
			(*this)._method_push_err(_46517_els->_field_token,jule::Str("body_not_exist", 14));
		}
		return jule::new_ref<_118d9a790_Else>();
	}
	if (_46917_i < _46433_tokens.len()) {
		(*this)._method_push_err(_46433_tokens[static_cast<jule::Int>(_46917_i)],jule::Str("invalid_syntax", 14));
	}
	_46517_els->_field_scope=(*this)._method_build_scope(_47017_scope_tokens);
	return _46517_els;
}



inline jule::Any _11912dd80_ScopeParser::_method_build_if_else_chain(jule::Slice<_11911a8a0_Token> _48742_tokens) {
	jule::Ref<_118d9a790_Conditional> _48817_chain = jule::new_struct<_118d9a790_Conditional>(new( std::nothrow ) _118d9a790_Conditional((*this)._method_build_if(_48742_tokens),jule::Slice<jule::Ref<_118d9a790_If>>(),jule::Ref<_118d9a790_Else>()));
	if ((!(jule::real(_48817_chain->_field_head)))) {
		return jule::Any(nullptr);
	}
	_iter_begin_4748644592:;
	if (!(_48742_tokens != nullptr)) { goto _iter_end_4748644592; }
	{
		if (_48742_tokens[static_cast<jule::Int>(0LL)]._field_id != 17LLU) {
			goto _iter_end_4748644592;
		}
		if ((_48742_tokens.len() > 1LL) && (_48742_tokens[static_cast<jule::Int>(1LL)]._field_id == 16LLU)) {
			_48742_tokens=_48742_tokens.slice(static_cast<jule::Int>(1LL));
			jule::Ref<_118d9a790_If> _50025_elif = (*this)._method_build_if(_48742_tokens);
			_48817_chain->_field_tail=append(_48817_chain->_field_tail,jule::Slice<jule::Ref<_118d9a790_If>>({_50025_elif}));
			goto _iter_next_4748644592;
		}
		_48817_chain->_field_default=(*this)._method_build_else(_48742_tokens);
		goto _iter_end_4748644592;
	}
	_iter_next_4748644592:;
	goto _iter_begin_4748644592;
	_iter_end_4748644592:;
	return jule::Any(_48817_chain);
}



inline jule::Any _11912dd80_ScopeParser::_method_build_comment_st(_11911a8a0_Token _51035_token) {
	return jule::Any(_11953bd10_build_comment(_51035_token));
}



inline jule::Any _11912dd80_ScopeParser::_method_build_call_st(jule::Slice<_11911a8a0_Token> _51436_tokens) {
	_11911a8a0_Token _51513_token = _51436_tokens[static_cast<jule::Int>(0LL)];
	if (_11943fdb0_is_fn_call(_51436_tokens) == nullptr) {
		(*this)._method_push_err(_51513_token,jule::Str("expr_not_func_call", 18));
	}
	jule::Ref<_118d9a790_Expr> _51917_expr = (*this)._field_p->_method_build_expr(_51436_tokens);
	if (jule::real(_51917_expr) && (!(_51917_expr->_method_is_fn_call()))) {
		(*this)._method_push_err(_51513_token,jule::Str("invalid_syntax", 14));
	}
	return jule::Any(_51917_expr);
}



inline jule::Any _11912dd80_ScopeParser::_method_build_co_call_st(jule::Slice<_11911a8a0_Token> _52639_tokens) {
	_52639_tokens=_52639_tokens.slice(static_cast<jule::Int>(1LL));
	jule::Any _52817_cc = (*this)._method_build_call_st(_52639_tokens);
	_52817_cc.operator jule::Ref<_118d9a790_Expr>()->_field_kind.operator jule::Ref<_118d9a790_FnCallExpr>()->_field_concurrent=true;
	return _52817_cc;
}



inline jule::Any _11912dd80_ScopeParser::_method_build_goto_st(jule::Slice<_11911a8a0_Token> _53336_tokens) {
	jule::Ref<_118d9a790_GotoSt> _53417_gt = jule::new_struct<_118d9a790_GotoSt>(new( std::nothrow ) _118d9a790_GotoSt(_53336_tokens[static_cast<jule::Int>(0LL)],_11911a8a0_Token()));
	if (_53336_tokens.len() == 1LL) {
		(*this)._method_push_err(_53417_gt->_field_token,jule::Str("missing_goto_label", 18));
		return jule::Any(nullptr);
	} else if (_53336_tokens.len() > 2LL) {
		(*this)._method_push_err(_53336_tokens[static_cast<jule::Int>(2LL)],jule::Str("invalid_syntax", 14));
	}
	_11911a8a0_Token _54317_ident_token = _53336_tokens[static_cast<jule::Int>(1LL)];
	if (_54317_ident_token._field_id != 2LLU) {
		(*this)._method_push_err(_54317_ident_token,jule::Str("invalid_syntax", 14));
		return jule::Any(_53417_gt);
	}
	_53417_gt->_field_label=_54317_ident_token;
	return jule::Any(_53417_gt);
}



inline jule::Any _11912dd80_ScopeParser::_method_build_fall_st(jule::Slice<_11911a8a0_Token> _55236_tokens) {
	jule::Ref<_118d9a790_FallSt> _55317_fll = jule::new_struct<_118d9a790_FallSt>(new( std::nothrow ) _118d9a790_FallSt(_55236_tokens[static_cast<jule::Int>(0LL)]));
	if (_55236_tokens.len() > 1LL) {
		(*this)._method_push_err(_55236_tokens[static_cast<jule::Int>(1LL)],jule::Str("invalid_syntax", 14));
	}
	return jule::Any(_55317_fll);
}



inline jule::Any _11912dd80_ScopeParser::_method_build_type_alias_st(jule::Slice<_11911a8a0_Token> _56242_tokens) {
	jule::Ref<_118d9a790_TypeAliasDecl> _56317_tad = (*this)._field_p->_method_build_type_alias_decl(_56242_tokens);
	_56317_tad->_field_scope=(*this)._field_s;
	return jule::Any(_56317_tad);
}



inline void _11912dd80_ScopeParser::_method_push_case_expr(jule::Slice<_11911a8a0_Token> _56837_tokens,_11911a8a0_Token _56858_token,jule::Bool _5699_type_match,jule::Slice<jule::Ref<_118d9a790_Expr>>& _56932_exprs) {
	if (_56837_tokens.len() == 0LL) {
		return;
	}
	if (_5699_type_match) {
		jule::Int _57521_i = 0LL;
		jule::Ref<_118d9a790_TypeDecl> _57622_t;
		jule::Bool _57625_ok;
		std::tie(_57622_t,_57625_ok) = (*this)._field_p->_method_build_type(_56837_tokens,(&(_57521_i)),true);
		if (_57625_ok) {
			_56932_exprs=append(_56932_exprs,jule::Slice<jule::Ref<_118d9a790_Expr>>({jule::new_struct<_118d9a790_Expr>(new( std::nothrow ) _118d9a790_Expr(_56858_token,jule::Any(_57622_t)))}));
		}
		if (_57521_i < _56837_tokens.len()) {
			(*this)._method_push_err(_56837_tokens[static_cast<jule::Int>(_57521_i)],jule::Str("invalid_syntax", 14));
		}
		return;
	}
	_56932_exprs=append(_56932_exprs,jule::Slice<jule::Ref<_118d9a790_Expr>>({(*this)._field_p->_method_build_expr(_56837_tokens)}));
}



inline jule::Slice<jule::Ref<_118d9a790_Expr>> _11912dd80_ScopeParser::_method_build_case_exprs(jule::Slice<_11911a8a0_Token>& _59140_tokens,jule::Bool _59157_type_match) {
	jule::Slice<jule::Ref<_118d9a790_Expr>> _59217_exprs = nullptr;
	jule::Int _59417_brace_n = 0LL;
	jule::Int _59517_j = 0LL;
	{
		auto &__julec_range_expr = _59140_tokens;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _11912dd80_i = 0;
			_11911a8a0_Token _11912dd80_tok = *__julec_range_begin;
			_iter_begin_4748740720:;
			{
				if (_11912dd80_tok._field_id == 3LLU) {
					{
						auto &_match_expr{ _11912dd80_tok._field_kind };
						if (!((jule::Str("(", 1)) == _match_expr || (jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr)) { goto _case_end_4748745760; }
						_case_begin_4748745760:;
						{
							(_59417_brace_n)++;
						}
						goto _match_end_4748743728;
						_case_end_4748745760:;
						_case_begin_4748744640:;
						{
							(_59417_brace_n)--;
						}
						goto _match_end_4748743728;
						_case_end_4748744640:;
						_match_end_4748743728:;
					}
					goto _iter_next_4748740720;
				} else if (_59417_brace_n != 0LL) {
					goto _iter_next_4748740720;
				}
				{
					if (!(((_11912dd80_tok._field_id == 7LLU) && (_11912dd80_tok._field_kind == jule::Str("|", 1))))) { goto _case_end_4748747552; }
					_case_begin_4748747552:;
					{
						(*this)._method_push_case_expr(_59140_tokens.slice(static_cast<jule::Int>(_59517_j),static_cast<jule::Int>(_11912dd80_i)),_11912dd80_tok,_59157_type_match,_59217_exprs);
						_59517_j=_11912dd80_i + 1LL;
					}
					goto _match_end_4748747024;
					_case_end_4748747552:;
					if (!((_11912dd80_tok._field_id == 11LLU))) { goto _case_end_4748747664; }
					_case_begin_4748747664:;
					{
						(*this)._method_push_case_expr(_59140_tokens.slice(static_cast<jule::Int>(_59517_j),static_cast<jule::Int>(_11912dd80_i)),_11912dd80_tok,_59157_type_match,_59217_exprs);
						_59140_tokens=_59140_tokens.slice(static_cast<jule::Int>(_11912dd80_i + 1LL));
						return _59217_exprs;
					}
					goto _match_end_4748747024;
					_case_end_4748747664:;
					_match_end_4748747024:;
				}
			}
			_iter_next_4748740720:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_11912dd80_i; _11912dd80_tok = *__julec_range_begin; goto _iter_begin_4748740720; }
			_iter_end_4748740720:;
		}
	}
	(*this)._method_push_err(_59140_tokens[static_cast<jule::Int>(0LL)],jule::Str("invalid_syntax", 14));
	_59140_tokens=nullptr;
	return nullptr;
}



inline jule::Ref<_118d9a790_ScopeTree> _11912dd80_ScopeParser::_method_build_case_scope(jule::Slice<_11911a8a0_Token>& _62740_tokens) {
	jule::Int _62817_n = 0LL;
	_iter_begin_4748764704:;
	{
		jule::Int _63021_i = 0LL;
		jule::Slice<_11911a8a0_Token> _63122_next;
		std::tie(_63122_next,std::ignore) = _11912dd80_skip_st(_63021_i,_62740_tokens.slice(static_cast<jule::Int>(_62817_n)));
		if (_63122_next.len() == 0LL) {
			goto _iter_end_4748764704;
		}
		_11911a8a0_Token _63517_tok = _63122_next[static_cast<jule::Int>(0LL)];
		if ((_63517_tok._field_id != 7LLU) || (_63517_tok._field_kind != jule::Str("|", 1))) {
			_62817_n+=static_cast<jule::I64>(_63122_next.len());
			goto _iter_next_4748764704;
		}
		jule::Ref<_118d9a790_ScopeTree> _64021_scope = (*this)._method_build_scope(_62740_tokens.slice(0LL,static_cast<jule::Int>(_62817_n)));
		_62740_tokens=_62740_tokens.slice(static_cast<jule::Int>(_62817_n));
		return _64021_scope;
	}
	_iter_next_4748764704:;
	goto _iter_begin_4748764704;
	_iter_end_4748764704:;
	jule::Ref<_118d9a790_ScopeTree> _64417_scope = (*this)._method_build_scope(_62740_tokens);
	_62740_tokens=nullptr;
	return _64417_scope;
}



inline std::tuple<jule::Ref<_118d9a790_Case>,jule::Bool> _11912dd80_ScopeParser::_method_build_case(jule::Slice<_11911a8a0_Token>& _64934_tokens,jule::Bool _64951_type_match) {
	jule::Ref<_118d9a790_Case> _65017_c = jule::new_struct<_118d9a790_Case>(new( std::nothrow ) _118d9a790_Case(_64934_tokens[static_cast<jule::Int>(0LL)],jule::Ref<_118d9a790_ScopeTree>(),jule::Slice<jule::Ref<_118d9a790_Expr>>()));
	_64934_tokens=_64934_tokens.slice(static_cast<jule::Int>(1LL));
	_65017_c->_field_exprs=(*this)._method_build_case_exprs(_64934_tokens,_64951_type_match);
	_65017_c->_field_scope=(*this)._method_build_case_scope(_64934_tokens);
	jule::Bool _65613_is_default = _65017_c->_field_exprs.len() == 0LL;
	return std::make_tuple(_65017_c,_65613_is_default);
}



inline std::tuple<jule::Slice<jule::Ref<_118d9a790_Case>>,jule::Ref<_118d9a790_Else>> _11912dd80_ScopeParser::_method_build_cases(jule::Slice<_11911a8a0_Token> _66034_tokens,jule::Bool _66051_type_match) {
	jule::Slice<jule::Ref<_118d9a790_Case>> _66117_cases = nullptr;
	jule::Ref<_118d9a790_Else> _66217_def = jule::new_ref<_118d9a790_Else>();
	_iter_begin_4748801968:;
	if (!(_66034_tokens.len() > 0LL)) { goto _iter_end_4748801968; }
	{
		_11911a8a0_Token _66421_tok = _66034_tokens[static_cast<jule::Int>(0LL)];
		if (_66421_tok._field_id == 18LLU) {
			_66034_tokens=_66034_tokens.slice(static_cast<jule::Int>(1LL));
			goto _iter_next_4748801968;
		}
		if ((_66421_tok._field_id != 7LLU) || (_66421_tok._field_kind != jule::Str("|", 1))) {
			(*this)._method_push_err(_66421_tok,jule::Str("invalid_syntax", 14));
			goto _iter_end_4748801968;
		}
		jule::Ref<_118d9a790_Case> _67522_c;
		jule::Bool _67525_is_default;
		std::tie(_67522_c,_67525_is_default) = (*this)._method_build_case(_66034_tokens,_66051_type_match);
		if (_67525_is_default) {
			_67522_c->_field_token=_66421_tok;
			if ((!(jule::real(_66217_def)))) {
				_66217_def=jule::new_struct<_118d9a790_Else>(new( std::nothrow ) _118d9a790_Else(_67522_c->_field_token,_67522_c->_field_scope));
			} else {
				(*this)._method_push_err(_66421_tok,jule::Str("invalid_syntax", 14));
			}
		} else {
			_66117_cases=append(_66117_cases,jule::Slice<jule::Ref<_118d9a790_Case>>({_67522_c}));
		}
	}
	_iter_next_4748801968:;
	goto _iter_begin_4748801968;
	_iter_end_4748801968:;
	return std::make_tuple(_66117_cases,_66217_def);
}



inline jule::Ref<_118d9a790_MatchCase> _11912dd80_ScopeParser::_method_build_match_case(jule::Slice<_11911a8a0_Token> _69339_tokens) {
	jule::Ref<_118d9a790_MatchCase> _69417_m = jule::new_struct<_118d9a790_MatchCase>(new( std::nothrow ) _118d9a790_MatchCase(_69339_tokens[static_cast<jule::Int>(0LL)],jule::Bool(),jule::Ref<_118d9a790_Expr>(),jule::Slice<jule::Ref<_118d9a790_Case>>(),jule::Ref<_118d9a790_Else>()));
	_69339_tokens=_69339_tokens.slice(static_cast<jule::Int>(1LL));
	if ((_69339_tokens.len() > 0LL) && (_69339_tokens[static_cast<jule::Int>(0LL)]._field_id == 10LLU)) {
		_69417_m->_field_type_match=true;
		_69339_tokens=_69339_tokens.slice(static_cast<jule::Int>(1LL));
	}
	jule::Slice<_11911a8a0_Token> _70417_expr_tokens = _11943fdb0_get_block_expr(_69339_tokens);
	if (_70417_expr_tokens.len() > 0LL) {
		_69417_m->_field_expr=(*this)._field_p->_method_build_expr(_70417_expr_tokens);
	} else if (_69417_m->_field_type_match) {
		(*this)._method_push_err(_69417_m->_field_token,jule::Str("missing_expr", 12));
	}
	jule::I64 _71117_i = _70417_expr_tokens.len();
	jule::Slice<_11911a8a0_Token> _71217_block_toks = _11953bd10_range(_71117_i,jule::Str("{", 1),jule::Str("}", 1),_69339_tokens);
	if (_71217_block_toks == nullptr) {
		(*this)._method_stop();
		(*this)._method_push_err(_69417_m->_field_token,jule::Str("body_not_exist", 14));
		return jule::new_ref<_118d9a790_MatchCase>();
	}
	std::tie(_69417_m->_field_cases,_69417_m->_field_default) = (*this)._method_build_cases(_71217_block_toks,_69417_m->_field_type_match);
	return _69417_m;
}



inline jule::Ref<_118d9a790_ScopeTree> _11912dd80_ScopeParser::_method_build_scope_st(jule::Slice<_11911a8a0_Token> _72337_tokens) {
	jule::Bool _72417_is_unsafe = false;
	jule::Bool _72517_is_deferred = false;
	_11911a8a0_Token _72617_token = _72337_tokens[static_cast<jule::Int>(0LL)];
	if (_72617_token._field_id == 35LLU) {
		_72417_is_unsafe=true;
		_72337_tokens=_72337_tokens.slice(static_cast<jule::Int>(1LL));
		if (_72337_tokens.len() == 0LL) {
			(*this)._method_push_err(_72617_token,jule::Str("invalid_syntax", 14));
			return jule::new_ref<_118d9a790_ScopeTree>();
		}
		_72617_token=_72337_tokens[static_cast<jule::Int>(0LL)];
		if (_72617_token._field_id == 37LLU) {
			_72517_is_deferred=true;
			_72337_tokens=_72337_tokens.slice(static_cast<jule::Int>(1LL));
			if (_72337_tokens.len() == 0LL) {
				(*this)._method_push_err(_72617_token,jule::Str("invalid_syntax", 14));
				return jule::new_ref<_118d9a790_ScopeTree>();
			}
		}
	} else if (_72617_token._field_id == 37LLU) {
		_72517_is_deferred=true;
		_72337_tokens=_72337_tokens.slice(static_cast<jule::Int>(1LL));
		if (_72337_tokens.len() == 0LL) {
			(*this)._method_push_err(_72617_token,jule::Str("invalid_syntax", 14));
			return jule::new_ref<_118d9a790_ScopeTree>();
		}
	}
	jule::Int _75217_i = 0LL;
	jule::Slice<_11911a8a0_Token> _75317_scope_tokens = _11953bd10_range(_75217_i,jule::Str("{", 1),jule::Str("}", 1),_72337_tokens);
	if (_75317_scope_tokens == nullptr) {
		(*this)._method_push_err(_72617_token,jule::Str("invalid_syntax", 14));
		return jule::new_ref<_118d9a790_ScopeTree>();
	} else if (_75217_i < _72337_tokens.len()) {
		(*this)._method_push_err(_72337_tokens[static_cast<jule::Int>(_75217_i)],jule::Str("invalid_syntax", 14));
	}
	jule::Ref<_118d9a790_ScopeTree> _76017_scope = (*this)._method_build_scope(_75317_scope_tokens);
	_76017_scope->_field_unsafety=_72417_is_unsafe;
	_76017_scope->_field_deferred=_72517_is_deferred;
	return _76017_scope;
}



inline jule::Ref<_118d9a790_LabelSt> _11912dd80_ScopeParser::_method_build_label_st(jule::Slice<_11911a8a0_Token> _76637_tokens) {
	jule::Ref<_118d9a790_LabelSt> _76717_lbl = jule::new_struct<_118d9a790_LabelSt>(new( std::nothrow ) _118d9a790_LabelSt(_76637_tokens[static_cast<jule::Int>(0LL)],_76637_tokens[static_cast<jule::Int>(0LL)]._field_kind));
	if (_76637_tokens.len() > 2LL) {
		_76637_tokens=_76637_tokens.slice(static_cast<jule::Int>(2LL));
		(*this)._method_insert_as_next(_76637_tokens);
	}
	return _76717_lbl;
}



inline std::tuple<jule::Any,jule::Bool> _11912dd80_ScopeParser::_method_build_id_st(jule::Slice<_11911a8a0_Token> _78134_tokens) {
	jule::Bool _78163_ok = jule::Bool();
	if (_78134_tokens.len() == 1LL) {
		return std::make_tuple(jule::Any(),_78163_ok);
	}
	_11911a8a0_Token _78617_token = _78134_tokens[static_cast<jule::Int>(1LL)];
	{
		auto &_match_expr{ _78617_token._field_id };
		if (!((11LLU) == _match_expr)) { goto _case_end_4748899280; }
		_case_begin_4748899280:;
		{
			_78163_ok = true;
			return std::make_tuple(jule::Any((*this)._method_build_label_st(_78134_tokens)),_78163_ok);
		}
		goto _match_end_4748896320;
		_case_end_4748899280:;
		_match_end_4748896320:;
	}
	return std::make_tuple(jule::Any(),_78163_ok);
}



inline jule::Ref<_118dbfd80_AssignInfo> _11912dd80_ScopeParser::_method_build_assign_info(jule::Slice<_11911a8a0_Token> _79540_tokens) {
	jule::Ref<_118dbfd80_AssignInfo> _79617_info = jule::new_struct<_118dbfd80_AssignInfo>(new( std::nothrow ) _118dbfd80_AssignInfo(jule::Slice<_11911a8a0_Token>(),jule::Slice<_11911a8a0_Token>(),_11911a8a0_Token(),true));
	jule::Int _79917_brace_n = 0LL;
	{
		auto &__julec_range_expr = _79540_tokens;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _11912dd80_i = 0;
			_11911a8a0_Token _11912dd80_token = *__julec_range_begin;
			_iter_begin_4748910016:;
			{
				if (_11912dd80_token._field_id == 3LLU) {
					{
						auto &_match_expr{ _11912dd80_token._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4748914768; }
						_case_begin_4748914768:;
						{
							(_79917_brace_n)++;
						}
						goto _match_end_4748912736;
						_case_end_4748914768:;
						_case_begin_4748913648:;
						{
							(_79917_brace_n)--;
						}
						goto _match_end_4748912736;
						_case_end_4748913648:;
						_match_end_4748912736:;
					}
				}
				{
					if (!((_79917_brace_n > 0LL))) { goto _case_end_4748912160; }
					_case_begin_4748912160:;
					{
						goto _iter_next_4748910016;
					}
					goto _match_end_4748916368;
					_case_end_4748912160:;
					if (!((_11912dd80_token._field_id != 7LLU))) { goto _case_end_4748912272; }
					_case_begin_4748912272:;
					{
						goto _iter_next_4748910016;
					}
					goto _match_end_4748916368;
					_case_end_4748912272:;
					if (!(((!(_11911a8a0_is_assign_op(_11912dd80_token._field_kind)))))) { goto _case_end_4748912384; }
					_case_begin_4748912384:;
					{
						goto _iter_next_4748910016;
					}
					goto _match_end_4748916368;
					_case_end_4748912384:;
					_match_end_4748916368:;
				}
				_79617_info->_field_l=_79540_tokens.slice(0LL,static_cast<jule::Int>(_11912dd80_i));
				if (_79617_info->_field_l.len() == 0LL) {
					_79617_info->_field_ok=false;
				}
				_79617_info->_field_setter=_11912dd80_token;
				if ((_11912dd80_i + 1LL) >= _79540_tokens.len()) {
					_79617_info->_field_r=nullptr;
					_79617_info->_field_ok=_11911a8a0_is_postfix_op(_79617_info->_field_setter._field_kind);
					goto _iter_end_4748910016;
				}
				_79617_info->_field_r=_79540_tokens.slice(static_cast<jule::Int>(_11912dd80_i + 1LL));
				if (_11911a8a0_is_postfix_op(_79617_info->_field_setter._field_kind)) {
					if (_79617_info->_field_r.len() > 0LL) {
						(*this)._method_push_err(_79617_info->_field_r[static_cast<jule::Int>(0LL)],jule::Str("invalid_syntax", 14));
						_79617_info->_field_r=nullptr;
					}
				}
				goto _iter_end_4748910016;
			}
			_iter_next_4748910016:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_11912dd80_i; _11912dd80_token = *__julec_range_begin; goto _iter_begin_4748910016; }
			_iter_end_4748910016:;
		}
	}
	return _79617_info;
}



inline jule::Ref<_118d9a790_AssignLeft> _11912dd80_ScopeParser::_method_build_assign_l(jule::Slice<_11911a8a0_Token> _84237_tokens) {
	jule::Ref<_118d9a790_AssignLeft> _84317_l = jule::new_struct<_118d9a790_AssignLeft>(new( std::nothrow ) _118d9a790_AssignLeft(_84237_tokens[static_cast<jule::Int>(0LL)],jule::Bool(),jule::Bool(),jule::Str(),jule::Ref<_118d9a790_Expr>()));
	if (_84237_tokens[static_cast<jule::Int>(0LL)]._field_id == 2LLU) {
		_84317_l->_field_ident=_84317_l->_field_token._field_kind;
	}
	_84317_l->_field_expr=(*this)._field_p->_method_build_expr(_84237_tokens);
	return _84317_l;
}



inline jule::Slice<jule::Ref<_118d9a790_AssignLeft>> _11912dd80_ScopeParser::_method_build_assign_ls(jule::Slice<jule::Slice<_11911a8a0_Token>> _85538_parts) {
	jule::Slice<jule::Ref<_118d9a790_AssignLeft>> _85617_lefts = nullptr;
	{
		auto &__julec_range_expr = _85538_parts;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Slice<_11911a8a0_Token> _11912dd80_part = *__julec_range_begin;
			_iter_begin_4748949808:;
			{
				jule::Ref<_118d9a790_AssignLeft> _85821_l = (*this)._method_build_assign_l(_11912dd80_part);
				_85617_lefts=append(_85617_lefts,jule::Slice<jule::Ref<_118d9a790_AssignLeft>>({_85821_l}));
			}
			_iter_next_4748949808:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11912dd80_part = *__julec_range_begin; goto _iter_begin_4748949808; }
			_iter_end_4748949808:;
		}
	}
	return _85617_lefts;
}



inline std::tuple<jule::Ref<_118d9a790_AssignSt>,jule::Bool> _11912dd80_ScopeParser::_method_build_plain_assign(jule::Slice<_11911a8a0_Token> _86541_tokens) {
	jule::Ref<_118dbfd80_AssignInfo> _86617_info = (*this)._method_build_assign_info(_86541_tokens);
	if ((!(_86617_info->_field_ok))) {
		return std::make_tuple(jule::new_ref<_118d9a790_AssignSt>(),false);
	}
	jule::Ref<_118d9a790_AssignSt> _87117_assign = jule::new_struct<_118d9a790_AssignSt>(new( std::nothrow ) _118d9a790_AssignSt(jule::Bool(),_86617_info->_field_setter,jule::Slice<jule::Ref<_118d9a790_AssignLeft>>(),jule::Ref<_118d9a790_Expr>()));
	jule::Slice<jule::Slice<_11911a8a0_Token>> _87518_parts;
	jule::Slice<_13fe81720_Log> _87525_errs;
	std::tie(_87518_parts,_87525_errs) = _11953bd10_parts(_86617_info->_field_l,8LLU,true);
	if (_87525_errs.len() > 0LL) {
		(*this)._field_p->_field_errors=append((*this)._field_p->_field_errors,_87525_errs);
		return std::make_tuple(jule::new_ref<_118d9a790_AssignSt>(),false);
	}
	_87117_assign->_field_left=(*this)._method_build_assign_ls(_87518_parts);
	if (_86617_info->_field_r != nullptr) {
		_87117_assign->_field_right=(*this)._field_p->_method_build_expr(_86617_info->_field_r);
	}
	return std::make_tuple(_87117_assign,true);
}



inline std::tuple<jule::Ref<_118d9a790_AssignSt>,jule::Bool> _11912dd80_ScopeParser::_method_build_decl_assign(jule::Slice<_11911a8a0_Token> _88940_tokens) {
	if (_88940_tokens.len() < 1LL) {
		return std::make_tuple(jule::new_ref<_118d9a790_AssignSt>(),false);
	}
	_88940_tokens=_88940_tokens.slice(static_cast<jule::Int>(1LL));
	_11911a8a0_Token _89513_token = _88940_tokens[static_cast<jule::Int>(0LL)];
	if ((_89513_token._field_id != 3LLU) || (_89513_token._field_kind != jule::Str("(", 1))) {
		return std::make_tuple(jule::new_ref<_118d9a790_AssignSt>(),false);
	}
	jule::Ref<_118d9a790_AssignSt> _90017_assign = jule::new_struct<_118d9a790_AssignSt>(new( std::nothrow ) _118d9a790_AssignSt(true,_11911a8a0_Token(),jule::Slice<jule::Ref<_118d9a790_AssignLeft>>(),jule::Ref<_118d9a790_Expr>()));
	jule::Int _90417_i = 0LL;
	jule::Slice<_11911a8a0_Token> _90517_rang = _11953bd10_range(_90417_i,jule::Str("(", 1),jule::Str(")", 1),_88940_tokens);
	if (_90517_rang == nullptr) {
		(*this)._method_push_err(_89513_token,jule::Str("invalid_syntax", 14));
		return std::make_tuple(jule::new_ref<_118d9a790_AssignSt>(),false);
	} else if ((_90417_i + 1LL) < _88940_tokens.len()) {
		_90017_assign->_field_setter=_88940_tokens[static_cast<jule::Int>(_90417_i)];
		(_90417_i)++;
		_90017_assign->_field_right=(*this)._field_p->_method_build_expr(_88940_tokens.slice(static_cast<jule::Int>(_90417_i)));
	}
	jule::Slice<jule::Slice<_11911a8a0_Token>> _91618_parts;
	jule::Slice<_13fe81720_Log> _91625_errs;
	std::tie(_91618_parts,_91625_errs) = _11953bd10_parts(_90517_rang,8LLU,true);
	if (_91625_errs.len() > 0LL) {
		(*this)._field_p->_field_errors=append((*this)._field_p->_field_errors,_91625_errs);
		return std::make_tuple(jule::new_ref<_118d9a790_AssignSt>(),false);
	}
	{
		auto &__julec_range_expr = _91618_parts;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Slice<_11911a8a0_Token> _11912dd80_part = *__julec_range_begin;
			_iter_begin_4757415232:;
			{
				jule::Bool _92321_is_mut = false;
				jule::Bool _92421_is_ref = false;
				_11911a8a0_Token _92617_token = _11912dd80_part[static_cast<jule::Int>(0LL)];
				if (_92617_token._field_id == 36LLU) {
					_92321_is_mut=true;
					_11912dd80_part=_11912dd80_part.slice(static_cast<jule::Int>(1LL));
					if (_11912dd80_part.len() == 0LL) {
						(*this)._method_push_err(_92617_token,jule::Str("invalid_syntax", 14));
						goto _iter_next_4757415232;
					}
				}
				if ((_11912dd80_part[static_cast<jule::Int>(0LL)]._field_id == 7LLU) && (_11912dd80_part[static_cast<jule::Int>(0LL)]._field_kind == jule::Str("&", 1))) {
					_92421_is_ref=true;
					_11912dd80_part=_11912dd80_part.slice(static_cast<jule::Int>(1LL));
					if (_11912dd80_part.len() == 0LL) {
						(*this)._method_push_err(_92617_token,jule::Str("invalid_syntax", 14));
						goto _iter_next_4757415232;
					}
				}
				if (((_11912dd80_part[static_cast<jule::Int>(0LL)]._field_id != 2LLU) && (_11912dd80_part[static_cast<jule::Int>(0LL)]._field_id != 3LLU)) && (_11912dd80_part[static_cast<jule::Int>(0LL)]._field_kind != jule::Str("(", 1))) {
					(*this)._method_push_err(_92617_token,jule::Str("invalid_syntax", 14));
					goto _iter_next_4757415232;
				}
				jule::Ref<_118d9a790_AssignLeft> _95221_l = (*this)._method_build_assign_l(_11912dd80_part);
				_95221_l->_field_mutable=_92321_is_mut;
				_95221_l->_field_reference=_92421_is_ref;
				_90017_assign->_field_left=append(_90017_assign->_field_left,jule::Slice<jule::Ref<_118d9a790_AssignLeft>>({_95221_l}));
			}
			_iter_next_4757415232:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11912dd80_part = *__julec_range_begin; goto _iter_begin_4757415232; }
			_iter_end_4757415232:;
		}
	}
	return std::make_tuple(_90017_assign,true);
}



inline std::tuple<jule::Ref<_118d9a790_AssignSt>,jule::Bool> _11912dd80_ScopeParser::_method_build_assign_st(jule::Slice<_11911a8a0_Token> _96138_tokens) {
	jule::Bool _96172_ok = jule::Bool();
	jule::Ref<_118d9a790_AssignSt> _96157_st = jule::Ref<_118d9a790_AssignSt>();
	if ((!(_118dbfd80_check_assign_tokens(_96138_tokens)))) {
		_96157_st = jule::new_ref<_118d9a790_AssignSt>();
		_96172_ok = false;
		return std::make_tuple(_96157_st,_96172_ok);
	}
	{
		auto &_match_expr{ _96138_tokens[static_cast<jule::Int>(0LL)]._field_id };
		if (!((34LLU) == _match_expr)) { goto _case_end_4757457200; }
		_case_begin_4757457200:;
		{
			std::tie(_96157_st,_96172_ok) = (*this)._method_build_decl_assign(_96138_tokens);
		}
		goto _match_end_4757452480;
		_case_end_4757457200:;
		_case_begin_4757455344:;
		{
			std::tie(_96157_st,_96172_ok) = (*this)._method_build_plain_assign(_96138_tokens);
		}
		goto _match_end_4757452480;
		_case_end_4757455344:;
		_match_end_4757452480:;
	}
	return std::make_tuple(_96157_st,_96172_ok);
}



inline jule::Any _11912dd80_ScopeParser::_method_build_st(jule::Ref<_11912dd80_Stmt> _97431_st) {
	_11911a8a0_Token _97517_token = _97431_st->_field_tokens[static_cast<jule::Int>(0LL)];
	if (_97517_token._field_id == 2LLU) {
		jule::Any _97722_s;
		jule::Bool _97725_ok;
		std::tie(_97722_s,_97725_ok) = (*this)._method_build_id_st(_97431_st->_field_tokens);
		if (_97725_ok) {
			return _97722_s;
		}
	}
	jule::Ref<_118d9a790_AssignSt> _98318_s;
	jule::Bool _98321_ok;
	std::tie(_98318_s,_98321_ok) = (*this)._method_build_assign_st(_97431_st->_field_tokens);
	if (_98321_ok) {
		return jule::Any(_98318_s);
	}
	{
		auto &_match_expr{ _97517_token._field_id };
		if (!((38LLU) == _match_expr || (9LLU) == _match_expr || (34LLU) == _match_expr || (36LLU) == _match_expr)) { goto _case_end_4757472752; }
		_case_begin_4757472752:;
		{
			return (*this)._method_build_var_st(_97431_st->_field_tokens);
		}
		goto _match_end_4757471280;
		_case_end_4757472752:;
		if (!((4LLU) == _match_expr)) { goto _case_end_4757472240; }
		_case_begin_4757472240:;
		{
			return (*this)._method_build_ret_st(_97431_st->_field_tokens);
		}
		goto _match_end_4757471280;
		_case_end_4757472240:;
		if (!((12LLU) == _match_expr)) { goto _case_end_4757469728; }
		_case_begin_4757469728:;
		{
			return (*this)._method_buid_iter_st(_97431_st);
		}
		goto _match_end_4757471280;
		_case_end_4757469728:;
		if (!((13LLU) == _match_expr)) { goto _case_end_4757475136; }
		_case_begin_4757475136:;
		{
			return (*this)._method_build_break_st(_97431_st->_field_tokens);
		}
		goto _match_end_4757471280;
		_case_end_4757475136:;
		if (!((14LLU) == _match_expr)) { goto _case_end_4757473104; }
		_case_begin_4757473104:;
		{
			return (*this)._method_build_cont_st(_97431_st->_field_tokens);
		}
		goto _match_end_4757471280;
		_case_end_4757473104:;
		if (!((16LLU) == _match_expr)) { goto _case_end_4757473216; }
		_case_begin_4757473216:;
		{
			return (*this)._method_build_if_else_chain(_97431_st->_field_tokens);
		}
		goto _match_end_4757471280;
		_case_end_4757473216:;
		if (!((18LLU) == _match_expr)) { goto _case_end_4757473328; }
		_case_begin_4757473328:;
		{
			return (*this)._method_build_comment_st(_97517_token);
		}
		goto _match_end_4757471280;
		_case_end_4757473328:;
		if (!((26LLU) == _match_expr)) { goto _case_end_4757473440; }
		_case_begin_4757473440:;
		{
			return (*this)._method_build_co_call_st(_97431_st->_field_tokens);
		}
		goto _match_end_4757471280;
		_case_end_4757473440:;
		if (!((22LLU) == _match_expr)) { goto _case_end_4757475536; }
		_case_begin_4757475536:;
		{
			return (*this)._method_build_goto_st(_97431_st->_field_tokens);
		}
		goto _match_end_4757471280;
		_case_end_4757475536:;
		if (!((32LLU) == _match_expr)) { goto _case_end_4757475648; }
		_case_begin_4757475648:;
		{
			return (*this)._method_build_fall_st(_97431_st->_field_tokens);
		}
		goto _match_end_4757471280;
		_case_end_4757475648:;
		if (!((10LLU) == _match_expr)) { goto _case_end_4757475760; }
		_case_begin_4757475760:;
		{
			return (*this)._method_build_type_alias_st(_97431_st->_field_tokens);
		}
		goto _match_end_4757471280;
		_case_end_4757475760:;
		if (!((27LLU) == _match_expr)) { goto _case_end_4757475872; }
		_case_begin_4757475872:;
		{
			return jule::Any((*this)._method_build_match_case(_97431_st->_field_tokens));
		}
		goto _match_end_4757471280;
		_case_end_4757475872:;
		if (!((35LLU) == _match_expr || (37LLU) == _match_expr)) { goto _case_end_4757475984; }
		_case_begin_4757475984:;
		{
			return jule::Any((*this)._method_build_scope_st(_97431_st->_field_tokens));
		}
		goto _match_end_4757471280;
		_case_end_4757475984:;
		if (!((3LLU) == _match_expr)) { goto _case_end_4757476096; }
		_case_begin_4757476096:;
		{
			if (_97517_token._field_kind == jule::Str("{", 1)) {
				return jule::Any((*this)._method_build_scope_st(_97431_st->_field_tokens));
			}
		}
		goto _match_end_4757471280;
		_case_end_4757476096:;
		_case_begin_4757470704:;
		{
			if (_11943fdb0_is_fn_call(_97431_st->_field_tokens) != nullptr) {
				return (*this)._method_build_call_st(_97431_st->_field_tokens);
			}
		}
		goto _match_end_4757471280;
		_case_end_4757470704:;
		_match_end_4757471280:;
	}
	(*this)._method_push_err(_97517_token,jule::Str("invalid_syntax", 14));
	return jule::Any(nullptr);
}



inline void _11912dd80_ScopeParser::_method_build(jule::Slice<_11911a8a0_Token> _105028_tokens,jule::Ref<_118d9a790_ScopeTree> _105049_s) {
	if ((!(jule::real(_105049_s)))) {
		return;
	}
	(*this)._field_stms=_11912dd80_split_stms(_105028_tokens);
	(*this)._field_pos=-1LL;
	(*this)._field_s=_105049_s;
	_iter_begin_4757505680:;
	if (!((!((*this)._method_is_last_st())) && (!((*this)._method_finished())))) { goto _iter_end_4757505680; }
	{
		jule::Ref<_11912dd80_Stmt> _105921_st = (*this)._method_next();
		jule::Any _106021_data = (*this)._method_build_st(_105921_st);
		if (_106021_data != nullptr) {
			(*this)._field_s->_field_stmts=append((*this)._field_s->_field_stmts,jule::Slice<jule::Any>({_106021_data}));
		}
		if ((*this)._method_stopped()) {
			goto _iter_end_4757505680;
		}
	}
	_iter_next_4757505680:;
	goto _iter_begin_4757505680;
	_iter_end_4757505680:;
}







std::ostream &operator<<(std::ostream &_Stream, const _11912dd80_ScopeParser &_Src) {
	_Stream << "ScopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stms:" << _Src._field_stms << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11943fdb0_CallData &_Src) {
	_Stream << "CallData{";
	_Stream << "expr_tokens:" << _Src._field_expr_tokens << ", ";
	_Stream << "args_tokens:" << _Src._field_args_tokens << ", ";
	_Stream << "generics_tokens:" << _Src._field_generics_tokens;
	_Stream << "}";
	return _Stream;
}



inline void _11943fdb0_Precedencer::_method_set(jule::Int _15422_level,jule::Any _15434_expr) {
	{
		auto &__julec_range_expr = (*this)._field_pairs;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _11943fdb0_i = 0;
			jule::Slice<jule::Any> _11943fdb0_pair = *__julec_range_begin;
			_iter_begin_4757518384:;
			{
				jule::Int _15617_pair_level = _11943fdb0_pair[static_cast<jule::Int>(0LL)].operator jule::Int();
				if (_15422_level > _15617_pair_level) {
					jule::Slice<jule::Slice<jule::Any>> _15825_first = (*this)._field_pairs.slice(0LL,static_cast<jule::Int>(_11943fdb0_i));
					jule::Slice<jule::Slice<jule::Any>> _15925_buffer = jule::Slice<jule::Slice<jule::Any>>({jule::Slice<jule::Any>({jule::Any(_15422_level),_15434_expr})});
					jule::Slice<jule::Slice<jule::Any>> _16025_appended = append(_15925_buffer,(*this)._field_pairs.slice(static_cast<jule::Int>(_11943fdb0_i)));
					(*this)._field_pairs=append(_15825_first,_16025_appended);
					return;
				}
			}
			_iter_next_4757518384:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_11943fdb0_i; _11943fdb0_pair = *__julec_range_begin; goto _iter_begin_4757518384; }
			_iter_end_4757518384:;
		}
	}
	(*this)._field_pairs=append((*this)._field_pairs,jule::Slice<jule::Slice<jule::Any>>({jule::Slice<jule::Any>({jule::Any(_15422_level),_15434_expr})}));
}



inline jule::Any _11943fdb0_Precedencer::_method_get_lower(void) {
	jule::I64 _16917_i = (*this)._field_pairs.len() - 1LL;
	_iter_begin_4757537552:;
	if (!(_16917_i >= 0LL)) { goto _iter_end_4757537552; }
	{
		jule::Any _17121_data = (*this)._field_pairs[static_cast<jule::Int>(_16917_i)][static_cast<jule::Int>(1LL)];
		if (_17121_data != nullptr) {
			return _17121_data;
		}
	}
	_iter_next_4757537552:;
	(_16917_i)--;
	goto _iter_begin_4757537552;
	_iter_end_4757537552:;
	return jule::Any(nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, const _11943fdb0_Precedencer &_Src) {
	_Stream << "Precedencer{";
	_Stream << "pairs:" << _Src._field_pairs;
	_Stream << "}";
	return _Stream;
}



inline void _11943fdb0_ExprBuilder::_method_push_err(_11911a8a0_Token _28627_token,jule::Str _28641_key,jule::Slice<jule::Any> _28651_args) {
	(*this)._field_p->_method_push_err(_28627_token,_28641_key,_28651_args);
}



inline jule::Ref<_118d9a790_TupleExpr> _11943fdb0_ExprBuilder::_method_build_tuple(jule::Slice<jule::Slice<_11911a8a0_Token>> _29034_parts) {
	jule::Ref<_118d9a790_TupleExpr> _29117_tuple = jule::new_struct<_118d9a790_TupleExpr>(new( std::nothrow ) _118d9a790_TupleExpr(jule::Slice<jule::Any>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_29034_parts.len())))));
	{
		auto &__julec_range_expr = _29034_parts;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _11943fdb0_i = 0;
			jule::Slice<_11911a8a0_Token> _11943fdb0_part = *__julec_range_begin;
			_iter_begin_4757572928:;
			{
				_29117_tuple->_field_expr[static_cast<jule::Int>(_11943fdb0_i)]=(*this)._method_build(_11943fdb0_part);
			}
			_iter_next_4757572928:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_11943fdb0_i; _11943fdb0_part = *__julec_range_begin; goto _iter_begin_4757572928; }
			_iter_end_4757572928:;
		}
	}
	return _29117_tuple;
}



inline jule::Ref<_118d9a790_LitExpr> _11943fdb0_ExprBuilder::_method_build_lit(_11911a8a0_Token _30028_token) {
	return jule::new_struct<_118d9a790_LitExpr>(new( std::nothrow ) _118d9a790_LitExpr(_30028_token,_30028_token._field_kind));
}



inline jule::Ref<_118d9a790_TypeDecl> _11943fdb0_ExprBuilder::_method_build_primitive_type(_11911a8a0_Token _30739_token) {
	return _11972a4d0_build_prim_type(_30739_token);
}



inline jule::Any _11943fdb0_ExprBuilder::_method_build_single(_11911a8a0_Token _31135_token) {
	{
		auto &_match_expr{ _31135_token._field_id };
		if (!((6LLU) == _match_expr)) { goto _case_end_4757590960; }
		_case_begin_4757590960:;
		{
			return jule::Any((*this)._method_build_lit(_31135_token));
		}
		goto _match_end_4757584992;
		_case_end_4757590960:;
		if (!((2LLU) == _match_expr || (28LLU) == _match_expr)) { goto _case_end_4757587968; }
		_case_begin_4757587968:;
		{
			return jule::Any(_11943fdb0_build_ident_expr(_31135_token));
		}
		goto _match_end_4757584992;
		_case_end_4757587968:;
		if (!((1LLU) == _match_expr)) { goto _case_end_4757587504; }
		_case_begin_4757587504:;
		{
			return jule::Any((*this)._method_build_primitive_type(_31135_token));
		}
		goto _match_end_4757584992;
		_case_end_4757587504:;
		_case_begin_4757587200:;
		{
			(*this)._method_push_err(_31135_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return jule::Any(nullptr);
		}
		goto _match_end_4757584992;
		_case_end_4757587200:;
		_match_end_4757584992:;
	}
}



inline jule::Ref<_118d9a790_IdentExpr> _11943fdb0_ExprBuilder::_method_build_cpp_linked_ident(jule::Slice<_11911a8a0_Token> _32945_tokens) {
	if (_32945_tokens[static_cast<jule::Int>(0LL)]._field_id != 31LLU) {
		return jule::new_ref<_118d9a790_IdentExpr>();
	} else if (_32945_tokens[static_cast<jule::Int>(1LL)]._field_id != 20LLU) {
		(*this)._method_push_err(_32945_tokens[static_cast<jule::Int>(1LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_118d9a790_IdentExpr>();
	}
	_11911a8a0_Token _33617_token = _32945_tokens[static_cast<jule::Int>(2LL)];
	if (_33617_token._field_id != 2LLU) {
		(*this)._method_push_err(_32945_tokens[static_cast<jule::Int>(2LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_118d9a790_IdentExpr>();
	}
	jule::Ref<_118d9a790_IdentExpr> _34117_expr = _11943fdb0_build_ident_expr(_33617_token);
	_34117_expr->_field_cpp_linked=true;
	return _34117_expr;
}



inline jule::Ref<_118d9a790_UnaryExpr> _11943fdb0_ExprBuilder::_method_build_unary(jule::Slice<_11911a8a0_Token> _34634_tokens) {
	_11911a8a0_Token _34717_op = _34634_tokens[static_cast<jule::Int>(0LL)];
	if (_34634_tokens.len() == 1LL) {
		(*this)._method_push_err(_34717_op,jule::Str("missing_expr_for_unary", 22),jule::Slice<jule::Any>({}));
		return jule::new_ref<_118d9a790_UnaryExpr>();
	} else if ((!(_11911a8a0_is_unary_op(_34717_op._field_kind)))) {
		(*this)._method_push_err(_34717_op,jule::Str("invalid_op_for_unary", 20),jule::Slice<jule::Any>({jule::Any(_34717_op._field_kind)}));
		return jule::new_ref<_118d9a790_UnaryExpr>();
	}
	_34634_tokens=_34634_tokens.slice(static_cast<jule::Int>(1LL));
	return jule::new_struct<_118d9a790_UnaryExpr>(new( std::nothrow ) _118d9a790_UnaryExpr(_34717_op,(*this)._method_build(_34634_tokens)));
}



inline jule::Ref<_118d9a790_SubIdentExpr> _11943fdb0_ExprBuilder::_method_build_obj_sub_ident(jule::Slice<_11911a8a0_Token> _36742_tokens) {
	jule::I64 _36817_i = _36742_tokens.len() - 1LL;
	_11911a8a0_Token _36917_ident_token = _36742_tokens[static_cast<jule::Int>(_36817_i)];
	(_36817_i)--;
	_36742_tokens=_36742_tokens.slice(0LL,static_cast<jule::Int>(_36817_i));
	if (_36742_tokens.len() == 0LL) {
		(*this)._method_push_err(_36917_ident_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_118d9a790_SubIdentExpr>();
	}
	return jule::new_struct<_118d9a790_SubIdentExpr>(new( std::nothrow ) _118d9a790_SubIdentExpr(jule::Bool(),(*this)._method_build(_36742_tokens),_36917_ident_token));
}



inline jule::Ref<_118d9a790_NsSelectionExpr> _11943fdb0_ExprBuilder::_method_build_ns_sub_ident(jule::Slice<_11911a8a0_Token> _38241_tokens) {
	jule::Ref<_118d9a790_NsSelectionExpr> _38317_ns = jule::new_struct<_118d9a790_NsSelectionExpr>(new( std::nothrow ) _118d9a790_NsSelectionExpr());
	{
		auto &__julec_range_expr = _38241_tokens;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _11943fdb0_i = 0;
			_11911a8a0_Token _11943fdb0_token = *__julec_range_begin;
			_iter_begin_4757640208:;
			{
				if ((_11943fdb0_i % 2LL) == 0LL) {
					if (_11943fdb0_token._field_id != 2LLU) {
						(*this)._method_push_err(_11943fdb0_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
					}
					_38317_ns->_field_ns=append(_38317_ns->_field_ns,jule::Slice<_11911a8a0_Token>({_11943fdb0_token}));
				} else if (_11943fdb0_token._field_id != 23LLU) {
					(*this)._method_push_err(_11943fdb0_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
				}
			}
			_iter_next_4757640208:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_11943fdb0_i; _11943fdb0_token = *__julec_range_begin; goto _iter_begin_4757640208; }
			_iter_end_4757640208:;
		}
	}
	_38317_ns->_field_ident=_38317_ns->_field_ns[static_cast<jule::Int>(_38317_ns->_field_ns.len() - 1LL)];
	_38317_ns->_field_ns=_38317_ns->_field_ns.slice(0LL,static_cast<jule::Int>(_38317_ns->_field_ns.len() - 1LL));
	return _38317_ns;
}



inline jule::Ref<_118d9a790_TypeDecl> _11943fdb0_ExprBuilder::_method_build_type(jule::Slice<_11911a8a0_Token> _39933_tokens) {
	jule::Int _40017_i = 0LL;
	jule::Ref<_118d9a790_TypeDecl> _40118_t;
	jule::Bool _40121_ok;
	std::tie(_40118_t,_40121_ok) = (*this)._field_p->_method_build_type(_39933_tokens,(&(_40017_i)),false);
	if ((!(_40121_ok))) {
		(*this)._method_push_err(_39933_tokens[static_cast<jule::Int>(0LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_118d9a790_TypeDecl>();
	}
	if (_40017_i < _39933_tokens.len()) {
		(*this)._method_push_err(_39933_tokens[static_cast<jule::Int>(_40017_i)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
	}
	return _40118_t;
}



inline jule::Any _11943fdb0_ExprBuilder::_method_build_sub_ident(jule::Slice<_11911a8a0_Token> _41338_tokens) {
	jule::I64 _41413_i = _41338_tokens.len() - 2LL;
	_11911a8a0_Token _41513_token = _41338_tokens[static_cast<jule::Int>(_41413_i)];
	{
		auto &_match_expr{ _41513_token._field_id };
		if (!((20LLU) == _match_expr)) { goto _case_end_4757675616; }
		_case_begin_4757675616:;
		{
			return jule::Any((*this)._method_build_obj_sub_ident(_41338_tokens));
		}
		goto _match_end_4757674336;
		_case_end_4757675616:;
		if (!((23LLU) == _match_expr)) { goto _case_end_4757675728; }
		_case_begin_4757675728:;
		{
			return jule::Any((*this)._method_build_ns_sub_ident(_41338_tokens));
		}
		goto _match_end_4757674336;
		_case_end_4757675728:;
		if (!((3LLU) == _match_expr)) { goto _case_end_4757675840; }
		_case_begin_4757675840:;
		{
			if (_41513_token._field_kind == jule::Str("]", 1)) {
				return jule::Any((*this)._method_build_type(_41338_tokens));
			}
		}
		goto _match_end_4757674336;
		_case_end_4757675840:;
		_match_end_4757674336:;
	}
	(*this)._method_push_err(_41513_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
	return jule::Any(nullptr);
}



inline jule::Ref<_118d9a790_VariadicExpr> _11943fdb0_ExprBuilder::_method_build_variadic(jule::Slice<_11911a8a0_Token> _43437_tokens) {
	_11911a8a0_Token _43517_token = _43437_tokens[static_cast<jule::Int>(_43437_tokens.len() - 1LL)];
	_43437_tokens=_43437_tokens.slice(0LL,static_cast<jule::Int>(_43437_tokens.len() - 1LL));
	return jule::new_struct<_118d9a790_VariadicExpr>(new( std::nothrow ) _118d9a790_VariadicExpr(_43517_token,(*this)._method_build(_43437_tokens)));
}



inline jule::Any _11943fdb0_ExprBuilder::_method_build_op_right(jule::Slice<_11911a8a0_Token> _44337_tokens) {
	_11911a8a0_Token _44417_token = _44337_tokens[static_cast<jule::Int>(_44337_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _44417_token._field_kind };
		if (!((jule::Str("...", 3)) == _match_expr)) { goto _case_end_4757700512; }
		_case_begin_4757700512:;
		{
			return jule::Any((*this)._method_build_variadic(_44337_tokens));
		}
		goto _match_end_4757696240;
		_case_end_4757700512:;
		_case_begin_4757696912:;
		{
			(*this)._method_push_err(_44417_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return jule::Any(nullptr);
		}
		goto _match_end_4757696240;
		_case_end_4757696912:;
		_match_end_4757696240:;
	}
}



inline jule::Any _11943fdb0_ExprBuilder::_method_build_between_parentheses(jule::Slice<_11911a8a0_Token> _45548_tokens) {
	_11911a8a0_Token _45613_token = _45548_tokens[static_cast<jule::Int>(0LL)];
	_45548_tokens=_45548_tokens.slice(static_cast<jule::Int>(1LL),static_cast<jule::Int>(_45548_tokens.len() - 1LL));
	if (_45548_tokens.len() == 0LL) {
		(*this)._method_push_err(_45613_token,jule::Str("missing_expr", 12),jule::Slice<jule::Any>({}));
		return jule::Any(nullptr);
	}
	return (*this)._method_build(_45548_tokens);
}



inline jule::Ref<_118d9a790_CastExpr> _11943fdb0_ExprBuilder::_method_try_build_cast(jule::Slice<_11911a8a0_Token> _46537_tokens) {
	jule::Int _46617_range_n = 0LL;
	_11911a8a0_Token _46713_error_token = _46537_tokens[static_cast<jule::Int>(0LL)];
	{
		auto &__julec_range_expr = _46537_tokens;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _11943fdb0_i = 0;
			_11911a8a0_Token _11943fdb0_token = *__julec_range_begin;
			_iter_begin_4757717264:;
			{
				if (_11943fdb0_token._field_id == 3LLU) {
					{
						auto &_match_expr{ _11943fdb0_token._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4757722016; }
						_case_begin_4757722016:;
						{
							(_46617_range_n)++;
							goto _iter_next_4757717264;
						}
						goto _match_end_4757719984;
						_case_end_4757722016:;
						_case_begin_4757720896:;
						{
							(_46617_range_n)--;
						}
						goto _match_end_4757719984;
						_case_end_4757720896:;
						_match_end_4757719984:;
					}
				}
				if (_46617_range_n > 0LL) {
					goto _iter_next_4757717264;
				} else if ((_11943fdb0_i + 1LL) == _46537_tokens.len()) {
					return jule::new_ref<_118d9a790_CastExpr>();
				}
				jule::Slice<_11911a8a0_Token> _48821_type_tokens = _46537_tokens.slice(static_cast<jule::Int>(1LL),static_cast<jule::Int>(_11943fdb0_i));
				jule::Slice<_11911a8a0_Token> _48921_expr_tokens = _46537_tokens.slice(static_cast<jule::Int>(_11943fdb0_i + 1LL));
				if (_48921_expr_tokens.len() == 0LL) {
					return jule::new_ref<_118d9a790_CastExpr>();
				}
				_11911a8a0_Token _49617_token = _48921_expr_tokens[static_cast<jule::Int>(0LL)];
				if ((_49617_token._field_id != 3LLU) || (_49617_token._field_kind != jule::Str("(", 1))) {
					return jule::new_ref<_118d9a790_CastExpr>();
				}
				jule::Ref<_118d9a790_CastExpr> _50121_cast = jule::new_struct<_118d9a790_CastExpr>(new( std::nothrow ) _118d9a790_CastExpr());
				if (_48921_expr_tokens.len() == 2LL) {
					(*this)._method_push_err(_46713_error_token,jule::Str("missing_expr", 12),jule::Slice<jule::Any>({}));
				}
				jule::Int _50821_type_index = 0LL;
				jule::Ref<_118d9a790_TypeDecl> _50922_t;
				jule::Bool _50925_ok;
				std::tie(_50922_t,_50925_ok) = (*this)._field_p->_method_build_type(_48821_type_tokens,(&(_50821_type_index)),true);
				if (_50925_ok && (_50821_type_index < _48821_type_tokens.len())) {
					(*this)._method_push_err(_48821_type_tokens[static_cast<jule::Int>(_50821_type_index)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
				} else if ((!(_50925_ok))) {
					return _50121_cast;
				}
				_50121_cast->_field_kind=_50922_t;
				jule::Int _51721_i = 0LL;
				_11953bd10_range(_51721_i,jule::Str("(", 1),jule::Str(")", 1),_48921_expr_tokens);
				if (_51721_i < _48921_expr_tokens.len()) {
					return jule::new_ref<_118d9a790_CastExpr>();
				}
				_50121_cast->_field_expr=(*this)._method_build(_48921_expr_tokens.slice(0LL,static_cast<jule::Int>(_51721_i)));
				return _50121_cast;
			}
			_iter_next_4757717264:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_11943fdb0_i; _11943fdb0_token = *__julec_range_begin; goto _iter_begin_4757717264; }
			_iter_end_4757717264:;
		}
	}
	return jule::new_ref<_118d9a790_CastExpr>();
}



inline void _11943fdb0_ExprBuilder::_method_push_arg(jule::Slice<jule::Ref<_118d9a790_Expr>>& _53032_args,jule::Slice<_11911a8a0_Token> _53051_tokens,_11911a8a0_Token _53068_err_token) {
	if (_53051_tokens.len() == 0LL) {
		(*this)._method_push_err(_53068_err_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return;
	}
	_53032_args=append(_53032_args,jule::Slice<jule::Ref<_118d9a790_Expr>>({(*this)._method_build_from_tokens(_53051_tokens)}));
}



inline jule::Slice<jule::Ref<_118d9a790_Expr>> _11943fdb0_ExprBuilder::_method_build_args(jule::Slice<_11911a8a0_Token> _53833_tokens) {
	if (_53833_tokens.len() < 2LL) {
		return nullptr;
	}
	jule::Slice<jule::Ref<_118d9a790_Expr>> _54417_args = nullptr;
	jule::Int _54517_last = 0LL;
	jule::Int _54617_range_n = 0LL;
	_53833_tokens=_53833_tokens.slice(static_cast<jule::Int>(1LL),static_cast<jule::Int>(_53833_tokens.len() - 1LL));
	{
		auto &__julec_range_expr = _53833_tokens;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _11943fdb0_i = 0;
			_11911a8a0_Token _11943fdb0_token = *__julec_range_begin;
			_iter_begin_4757776960:;
			{
				if (_11943fdb0_token._field_id == 3LLU) {
					{
						auto &_match_expr{ _11943fdb0_token._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4757781488; }
						_case_begin_4757781488:;
						{
							(_54617_range_n)++;
						}
						goto _match_end_4757779456;
						_case_end_4757781488:;
						_case_begin_4757780368:;
						{
							(_54617_range_n)--;
						}
						goto _match_end_4757779456;
						_case_end_4757780368:;
						_match_end_4757779456:;
					}
				}
				if ((_54617_range_n > 0LL) || (_11943fdb0_token._field_id != 8LLU)) {
					goto _iter_next_4757776960;
				}
				(*this)._method_push_arg(_54417_args,_53833_tokens.slice(static_cast<jule::Int>(_54517_last),static_cast<jule::Int>(_11943fdb0_i)),_11943fdb0_token);
				_54517_last=_11943fdb0_i + 1LL;
			}
			_iter_next_4757776960:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_11943fdb0_i; _11943fdb0_token = *__julec_range_begin; goto _iter_begin_4757776960; }
			_iter_end_4757776960:;
		}
	}
	if (_54517_last < _53833_tokens.len()) {
		if (_54517_last == 0LL) {
			if (_53833_tokens.len() > 0LL) {
				(*this)._method_push_arg(_54417_args,_53833_tokens.slice(static_cast<jule::Int>(_54517_last)),_53833_tokens[static_cast<jule::Int>(_54517_last)]);
			}
		} else {
			(*this)._method_push_arg(_54417_args,_53833_tokens.slice(static_cast<jule::Int>(_54517_last)),_53833_tokens[static_cast<jule::Int>(_54517_last - 1LL)]);
		}
	}
	return _54417_args;
}



inline jule::Slice<jule::Ref<_118d9a790_TypeDecl>> _11943fdb0_ExprBuilder::_method_build_call_generics(jule::Slice<_11911a8a0_Token> _58142_tokens) {
	if (_58142_tokens.len() == 0LL) {
		return nullptr;
	}
	_58142_tokens=_58142_tokens.slice(static_cast<jule::Int>(1LL),static_cast<jule::Int>(_58142_tokens.len() - 1LL));
	jule::Slice<jule::Slice<_11911a8a0_Token>> _58718_parts;
	jule::Slice<_13fe81720_Log> _58725_errs;
	std::tie(_58718_parts,_58725_errs) = _11953bd10_parts(_58142_tokens,8LLU,true);
	jule::Slice<jule::Ref<_118d9a790_TypeDecl>> _58817_generics = jule::Slice<jule::Ref<_118d9a790_TypeDecl>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_58718_parts.len())));
	(*this)._field_p->_field_errors=append((*this)._field_p->_field_errors,_58725_errs);
	{
		auto &__julec_range_expr = _58718_parts;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _11943fdb0_i = 0;
			jule::Slice<_11911a8a0_Token> _11943fdb0_part = *__julec_range_begin;
			_iter_begin_4757808560:;
			{
				if (_11943fdb0_part.len() == 0LL) {
					goto _iter_next_4757808560;
				}
				jule::Int _59421_j = 0LL;
				jule::Ref<_118d9a790_TypeDecl> _59522_generic;
				std::tie(_59522_generic,std::ignore) = (*this)._field_p->_method_build_type(_11943fdb0_part,(&(_59421_j)),true);
				if (_59421_j < _11943fdb0_part.len()) {
					(*this)._method_push_err(_11943fdb0_part[static_cast<jule::Int>(_59421_j)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
				}
				_58817_generics[static_cast<jule::Int>(_11943fdb0_i)]=_59522_generic;
			}
			_iter_next_4757808560:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_11943fdb0_i; _11943fdb0_part = *__julec_range_begin; goto _iter_begin_4757808560; }
			_iter_end_4757808560:;
		}
	}
	return _58817_generics;
}



inline jule::Ref<_118d9a790_FnCallExpr> _11943fdb0_ExprBuilder::_method_build_fn_call(_11911a8a0_Token _60536_token,jule::Ref<_11943fdb0_CallData> _60554_data) {
	return jule::new_struct<_118d9a790_FnCallExpr>(new( std::nothrow ) _118d9a790_FnCallExpr(_60536_token,(*this)._method_build_from_tokens(_60554_data->_field_expr_tokens),(*this)._method_build_call_generics(_60554_data->_field_generics_tokens),(*this)._method_build_args(_60554_data->_field_args_tokens),jule::Bool()));
}



inline jule::Any _11943fdb0_ExprBuilder::_method_build_parentheses_range(jule::Slice<_11911a8a0_Token> _61446_tokens) {
	_11911a8a0_Token _61517_token = _61446_tokens[static_cast<jule::Int>(0LL)];
	{
		auto &_match_expr{ _61517_token._field_id };
		if (!((3LLU) == _match_expr)) { goto _case_end_4757835824; }
		_case_begin_4757835824:;
		{
			{
				auto &_match_expr{ _61517_token._field_kind };
				if (!((jule::Str("(", 1)) == _match_expr)) { goto _case_end_4757837776; }
				_case_begin_4757837776:;
				{
					jule::Ref<_118d9a790_CastExpr> _62025_expr = (*this)._method_try_build_cast(_61446_tokens);
					if (jule::real(_62025_expr)) {
						return jule::Any(_62025_expr);
					}
				}
				goto _match_end_4757836352;
				_case_end_4757837776:;
				_match_end_4757836352:;
			}
		}
		goto _match_end_4757833920;
		_case_end_4757835824:;
		_match_end_4757833920:;
	}
	jule::Ref<_11943fdb0_CallData> _62717_data = _11943fdb0_get_call_data(_61446_tokens);
	if (_62717_data->_field_expr_tokens.len() == 0LL) {
		return (*this)._method_build_between_parentheses(_62717_data->_field_args_tokens);
	}
	return jule::Any((*this)._method_build_fn_call(_61517_token,_62717_data));
}



inline jule::Ref<_118d9a790_UnsafeExpr> _11943fdb0_ExprBuilder::_method_build_unsafe_expr(jule::Slice<_11911a8a0_Token> _63840_tokens) {
	_11911a8a0_Token _63917_token = _63840_tokens[static_cast<jule::Int>(0LL)];
	_63840_tokens=_63840_tokens.slice(static_cast<jule::Int>(1LL));
	jule::Int _64117_i = 0LL;
	jule::Slice<_11911a8a0_Token> _64217_range_tokens = _11953bd10_range(_64117_i,jule::Str("{", 1),jule::Str("}", 1),_63840_tokens);
	if (_64217_range_tokens.len() == 0LL) {
		(*this)._method_push_err(_63840_tokens[static_cast<jule::Int>(0LL)],jule::Str("missing_expr", 12),jule::Slice<jule::Any>({}));
		return jule::new_ref<_118d9a790_UnsafeExpr>();
	}
	return jule::new_struct<_118d9a790_UnsafeExpr>(new( std::nothrow ) _118d9a790_UnsafeExpr(_63917_token,(*this)._method_build_from_tokens(_64217_range_tokens)->_field_kind));
}



inline jule::Ref<_118d9a790_FnDecl> _11943fdb0_ExprBuilder::_method_build_anon_fn(jule::Slice<_11911a8a0_Token> _65336_tokens) {
	return (*this)._field_p->_method_build_fn(_65336_tokens,false,true,false);
}



inline jule::Any _11943fdb0_ExprBuilder::_method_build_unsafe(jule::Slice<_11911a8a0_Token> _65735_tokens) {
	if (_65735_tokens.len() == 0LL) {
		(*this)._method_push_err(_65735_tokens[static_cast<jule::Int>(0LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::Any(nullptr);
	}
	{
		auto &_match_expr{ _65735_tokens[static_cast<jule::Int>(1LL)]._field_id };
		if (!((33LLU) == _match_expr)) { goto _case_end_4757875328; }
		_case_begin_4757875328:;
		{
			return jule::Any((*this)._method_build_anon_fn(_65735_tokens));
		}
		goto _match_end_4757872592;
		_case_end_4757875328:;
		_case_begin_4757873184:;
		{
			return jule::Any((*this)._method_build_unsafe_expr(_65735_tokens));
		}
		goto _match_end_4757872592;
		_case_end_4757873184:;
		_match_end_4757872592:;
	}
}



inline void _11943fdb0_ExprBuilder::_method_push_range_lit_part(jule::Slice<_11911a8a0_Token> _67342_part,_11911a8a0_Token _6749_error_token,jule::Slice<jule::Slice<_11911a8a0_Token>>& _67434_parts) {
	if (_67342_part.len() == 0LL) {
		(*this)._method_push_err(_6749_error_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return;
	}
	_67434_parts=append(_67434_parts,jule::Slice<jule::Slice<_11911a8a0_Token>>({_67342_part}));
}



inline jule::Slice<jule::Slice<_11911a8a0_Token>> _11943fdb0_ExprBuilder::_method_get_brace_range_lit_expr_parts(jule::Slice<_11911a8a0_Token> _68353_tokens) {
	if (_68353_tokens.len() < 2LL) {
		return nullptr;
	}
	jule::Slice<jule::Slice<_11911a8a0_Token>> _68917_parts = nullptr;
	jule::Int _69117_last = 0LL;
	jule::Int _69217_range_n = 0LL;
	_68353_tokens=_68353_tokens.slice(static_cast<jule::Int>(1LL),static_cast<jule::Int>(_68353_tokens.len() - 1LL));
	{
		auto &__julec_range_expr = _68353_tokens;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _11943fdb0_i = 0;
			_11911a8a0_Token _11943fdb0_token = *__julec_range_begin;
			_iter_begin_4757895888:;
			{
				if (_11943fdb0_token._field_id == 3LLU) {
					{
						auto &_match_expr{ _11943fdb0_token._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4757900416; }
						_case_begin_4757900416:;
						{
							(_69217_range_n)++;
						}
						goto _match_end_4757898384;
						_case_end_4757900416:;
						_case_begin_4757899296:;
						{
							(_69217_range_n)--;
						}
						goto _match_end_4757898384;
						_case_end_4757899296:;
						_match_end_4757898384:;
					}
				}
				if ((_69217_range_n > 0LL) || (_11943fdb0_token._field_id != 8LLU)) {
					goto _iter_next_4757895888;
				}
				(*this)._method_push_range_lit_part(_68353_tokens.slice(static_cast<jule::Int>(_69117_last),static_cast<jule::Int>(_11943fdb0_i)),_11943fdb0_token,_68917_parts);
				_69117_last=_11943fdb0_i + 1LL;
			}
			_iter_next_4757895888:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_11943fdb0_i; _11943fdb0_token = *__julec_range_begin; goto _iter_begin_4757895888; }
			_iter_end_4757895888:;
		}
	}
	if (_69117_last < _68353_tokens.len()) {
		if (_69117_last == 0LL) {
			if (_68353_tokens.len() > 0LL) {
				(*this)._method_push_range_lit_part(_68353_tokens.slice(static_cast<jule::Int>(_69117_last)),_68353_tokens[static_cast<jule::Int>(_69117_last)],_68917_parts);
			}
		} else {
			(*this)._method_push_range_lit_part(_68353_tokens.slice(static_cast<jule::Int>(_69117_last)),_68353_tokens[static_cast<jule::Int>(_69117_last - 1LL)],_68917_parts);
		}
	}
	return _68917_parts;
}



inline jule::Ref<_118d9a790_FieldExprPair> _11943fdb0_ExprBuilder::_method_build_field_expr_pair(jule::Slice<_11911a8a0_Token> _72644_tokens) {
	jule::Ref<_118d9a790_FieldExprPair> _72717_pair = jule::new_struct<_118d9a790_FieldExprPair>(new( std::nothrow ) _118d9a790_FieldExprPair(_72644_tokens[static_cast<jule::Int>(0LL)],jule::Any()));
	_72644_tokens=_72644_tokens.slice(static_cast<jule::Int>(2LL));
	_72717_pair->_field_expr=(*this)._method_build_from_tokens(_72644_tokens)->_field_kind;
	return _72717_pair;
}



inline jule::Any _11943fdb0_ExprBuilder::_method_build_struct_lit_expr(jule::Slice<_11911a8a0_Token> _73544_tokens) {
	_11911a8a0_Token _73613_token = _73544_tokens[static_cast<jule::Int>(0LL)];
	if (_73613_token._field_id == 2LLU) {
		if (_73544_tokens.len() > 1LL) {
			_11911a8a0_Token _73921_token = _73544_tokens[static_cast<jule::Int>(1LL)];
			if (_73921_token._field_id == 11LLU) {
				return jule::Any((*this)._method_build_field_expr_pair(_73544_tokens));
			}
		}
	}
	return jule::Any((*this)._method_build_from_tokens(_73544_tokens));
}



inline jule::Slice<jule::Any> _11943fdb0_ExprBuilder::_method_build_struct_lit_exprs(jule::Slice<_11911a8a0_Token> _74845_tokens) {
	jule::Slice<jule::Slice<_11911a8a0_Token>> _74917_parts = (*this)._method_get_brace_range_lit_expr_parts(_74845_tokens);
	if (_74917_parts.len() == 0LL) {
		return nullptr;
	}
	jule::Slice<jule::Any> _75417_pairs = jule::Slice<jule::Any>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_74917_parts.len())));
	{
		auto &__julec_range_expr = _74917_parts;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _11943fdb0_i = 0;
			jule::Slice<_11911a8a0_Token> _11943fdb0_part = *__julec_range_begin;
			_iter_begin_4757942672:;
			{
				_75417_pairs[static_cast<jule::Int>(_11943fdb0_i)]=(*this)._method_build_struct_lit_expr(_11943fdb0_part);
			}
			_iter_next_4757942672:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_11943fdb0_i; _11943fdb0_part = *__julec_range_begin; goto _iter_begin_4757942672; }
			_iter_end_4757942672:;
		}
	}
	return _75417_pairs;
}



inline jule::Ref<_118d9a790_StructLit> _11943fdb0_ExprBuilder::_method_build_typed_struct_literal(jule::Slice<_11911a8a0_Token> _76149_tokens) {
	jule::Int _76217_i = 0LL;
	jule::Ref<_118d9a790_TypeDecl> _76318_t;
	jule::Bool _76321_ok;
	std::tie(_76318_t,_76321_ok) = (*this)._field_p->_method_build_type(_76149_tokens,(&(_76217_i)),true);
	if ((!(_76321_ok))) {
		return jule::new_ref<_118d9a790_StructLit>();
	} else if (_76217_i >= _76149_tokens.len()) {
		(*this)._method_push_err(_76149_tokens[static_cast<jule::Int>(0LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_118d9a790_StructLit>();
	}
	_76149_tokens=_76149_tokens.slice(static_cast<jule::Int>(_76217_i));
	_11911a8a0_Token _77213_token = _76149_tokens[static_cast<jule::Int>(0LL)];
	if ((_77213_token._field_id != 3LLU) || (_77213_token._field_kind != jule::Str("{", 1))) {
		(*this)._method_push_err(_77213_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_118d9a790_StructLit>();
	}
	return jule::new_struct<_118d9a790_StructLit>(new( std::nothrow ) _118d9a790_StructLit(_76318_t,(*this)._method_build_struct_lit_exprs(_76149_tokens)));
}



inline jule::Any _11943fdb0_ExprBuilder::_method_build_brace_lit_part(jule::Slice<_11911a8a0_Token> _78443_tokens) {
	jule::Slice<_11911a8a0_Token> _78518_l;
	jule::Slice<_11911a8a0_Token> _78525_r;
	std::tie(_78518_l,_78525_r) = _11943fdb0_split_colon(_78443_tokens);
	if (_78518_l != nullptr) {
		return jule::Any(jule::new_struct<_118d9a790_KeyValPair>(new( std::nothrow ) _118d9a790_KeyValPair((*this)._method_build_from_tokens(_78518_l)->_field_kind,(*this)._method_build_from_tokens(_78525_r)->_field_kind,_78443_tokens[static_cast<jule::Int>(_78518_l.len())])));
	}
	return jule::Any((*this)._method_build_from_tokens(_78443_tokens));
}



inline jule::Ref<_118d9a790_BraceLit> _11943fdb0_ExprBuilder::_method_build_brace_lit(jule::Slice<_11911a8a0_Token> _79738_tokens) {
	jule::Ref<_118d9a790_BraceLit> _79817_lit = jule::new_struct<_118d9a790_BraceLit>(new( std::nothrow ) _118d9a790_BraceLit(_79738_tokens[static_cast<jule::Int>(0LL)],jule::Slice<jule::Any>()));
	jule::Slice<jule::Slice<_11911a8a0_Token>> _80217_parts = (*this)._method_get_brace_range_lit_expr_parts(_79738_tokens);
	if (_80217_parts == nullptr) {
		return _79817_lit;
	}
	_79817_lit->_field_exprs=jule::Slice<jule::Any>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_80217_parts.len())));
	{
		auto &__julec_range_expr = _80217_parts;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _11943fdb0_i = 0;
			jule::Slice<_11911a8a0_Token> _11943fdb0_part = *__julec_range_begin;
			_iter_begin_4757986032:;
			{
				_79817_lit->_field_exprs[static_cast<jule::Int>(_11943fdb0_i)]=(*this)._method_build_brace_lit_part(_11943fdb0_part);
			}
			_iter_next_4757986032:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_11943fdb0_i; _11943fdb0_part = *__julec_range_begin; goto _iter_begin_4757986032; }
			_iter_end_4757986032:;
		}
	}
	return _79817_lit;
}



inline jule::Any _11943fdb0_ExprBuilder::_method_build_brace_range(jule::Slice<_11911a8a0_Token> _81540_tokens) {
	jule::Slice<_11911a8a0_Token> _81614_expr_tokens;
	jule::Int _81627_range_n;
	std::tie(_81614_expr_tokens,_81627_range_n) = _11943fdb0_get_range_expr_tokens(_81540_tokens);
	{
		if (!((_81614_expr_tokens.len() == 0LL))) { goto _case_end_4757994448; }
		_case_begin_4757994448:;
		{
			return jule::Any((*this)._method_build_brace_lit(_81540_tokens));
		}
		goto _match_end_4757994000;
		_case_end_4757994448:;
		if (!((_81627_range_n > 0LL))) { goto _case_end_4757994560; }
		_case_begin_4757994560:;
		{
			(*this)._method_push_err(_81540_tokens[static_cast<jule::Int>(0LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return jule::Any(nullptr);
		}
		goto _match_end_4757994000;
		_case_end_4757994560:;
		_match_end_4757994000:;
	}
	{
		auto &_match_expr{ _81614_expr_tokens[static_cast<jule::Int>(0LL)]._field_id };
		if (!((35LLU) == _match_expr)) { goto _case_end_4758005936; }
		_case_begin_4758005936:;
		{
			return (*this)._method_build_unsafe(_81540_tokens);
		}
		goto _match_end_4757998192;
		_case_end_4758005936:;
		if (!((33LLU) == _match_expr)) { goto _case_end_4758003008; }
		_case_begin_4758003008:;
		{
			return jule::Any((*this)._method_build_anon_fn(_81540_tokens));
		}
		goto _match_end_4757998192;
		_case_end_4758003008:;
		if (!((2LLU) == _match_expr || (31LLU) == _match_expr)) { goto _case_end_4758001952; }
		_case_begin_4758001952:;
		{
			return jule::Any((*this)._method_build_typed_struct_literal(_81540_tokens));
		}
		goto _match_end_4757998192;
		_case_end_4758001952:;
		_case_begin_4758001648:;
		{
			(*this)._method_push_err(_81614_expr_tokens[static_cast<jule::Int>(0LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return jule::Any(nullptr);
		}
		goto _match_end_4757998192;
		_case_end_4758001648:;
		_match_end_4757998192:;
	}
}



inline jule::Slice<jule::Slice<_11911a8a0_Token>> _11943fdb0_ExprBuilder::_method_get_enumerable_parts(jule::Slice<_11911a8a0_Token> _84543_tokens) {
	_84543_tokens=_84543_tokens.slice(static_cast<jule::Int>(1LL),static_cast<jule::Int>(_84543_tokens.len() - 1LL));
	jule::Slice<jule::Slice<_11911a8a0_Token>> _84718_parts;
	jule::Slice<_13fe81720_Log> _84725_errors;
	std::tie(_84718_parts,_84725_errors) = _11953bd10_parts(_84543_tokens,8LLU,true);
	(*this)._field_p->_field_errors=append((*this)._field_p->_field_errors,_84725_errors);
	return _84718_parts;
}



inline jule::Ref<_118d9a790_SliceExpr> _11943fdb0_ExprBuilder::_method_build_slice(jule::Slice<_11911a8a0_Token> _85234_tokens) {
	jule::Ref<_118d9a790_SliceExpr> _85317_slc = jule::new_struct<_118d9a790_SliceExpr>(new( std::nothrow ) _118d9a790_SliceExpr(_85234_tokens[static_cast<jule::Int>(0LL)],jule::Slice<jule::Any>()));
	jule::Slice<jule::Slice<_11911a8a0_Token>> _85717_parts = (*this)._method_get_enumerable_parts(_85234_tokens);
	if (_85717_parts.len() == 0LL) {
		return _85317_slc;
	}
	_85317_slc->_field_elems=jule::Slice<jule::Any>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_85717_parts.len())));
	{
		auto &__julec_range_expr = _85717_parts;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _11943fdb0_i = 0;
			jule::Slice<_11911a8a0_Token> _11943fdb0_p = *__julec_range_begin;
			_iter_begin_4758027664:;
			{
				_85317_slc->_field_elems[static_cast<jule::Int>(_11943fdb0_i)]=(*this)._method_build_from_tokens(_11943fdb0_p)->_field_kind;
			}
			_iter_next_4758027664:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_11943fdb0_i; _11943fdb0_p = *__julec_range_begin; goto _iter_begin_4758027664; }
			_iter_end_4758027664:;
		}
	}
	return _85317_slc;
}



inline jule::Ref<_118d9a790_IndexingExpr> _11943fdb0_ExprBuilder::_method_build_indexing(jule::Slice<_11911a8a0_Token> _87037_expr_tokens,jule::Slice<_11911a8a0_Token> _87113_tokens,_11911a8a0_Token _87134_error_token) {
	_87113_tokens=_87113_tokens.slice(static_cast<jule::Int>(1LL),static_cast<jule::Int>(_87113_tokens.len() - 1LL));
	return jule::new_struct<_118d9a790_IndexingExpr>(new( std::nothrow ) _118d9a790_IndexingExpr(_87134_error_token,(*this)._method_build_from_tokens(_87037_expr_tokens)->_field_kind,(*this)._method_build_from_tokens(_87113_tokens)->_field_kind));
}



inline jule::Ref<_118d9a790_SlicingExpr> _11943fdb0_ExprBuilder::_method_build_slicing(jule::Slice<_11911a8a0_Token> _88036_expr_tokens,jule::Slice<_11911a8a0_Token> _88062_slicing_tokens,jule::Int _8819_colon,_11911a8a0_Token _88121_error_token) {
	jule::Ref<_118d9a790_SlicingExpr> _88217_slc = jule::new_struct<_118d9a790_SlicingExpr>(new( std::nothrow ) _118d9a790_SlicingExpr(_88121_error_token,(*this)._method_build_from_tokens(_88036_expr_tokens)->_field_kind,jule::Any(),jule::Any()));
	jule::Slice<_11911a8a0_Token> _88717_start_expr_tokens = _88062_slicing_tokens.slice(0LL,static_cast<jule::Int>(_8819_colon));
	if (_88717_start_expr_tokens.len() > 0LL) {
		_88217_slc->_field_start=(*this)._method_build_from_tokens(_88717_start_expr_tokens)->_field_kind;
	}
	jule::Slice<_11911a8a0_Token> _89217_to_expr_tokens = _88062_slicing_tokens.slice(static_cast<jule::Int>(_8819_colon + 1LL));
	if (_89217_to_expr_tokens.len() > 0LL) {
		_88217_slc->_field_to=(*this)._method_build_from_tokens(_89217_to_expr_tokens)->_field_kind;
	}
	return _88217_slc;
}



inline jule::Any _11943fdb0_ExprBuilder::_method_build_bracket_range(jule::Slice<_11911a8a0_Token> _90042_tokens) {
	_11911a8a0_Token _90117_error_token = _90042_tokens[static_cast<jule::Int>(0LL)];
	jule::Slice<_11911a8a0_Token> _90218_expr_tokens;
	jule::Int _90231_range_n;
	std::tie(_90218_expr_tokens,_90231_range_n) = _11943fdb0_get_range_expr_tokens(_90042_tokens);
	{
		if (!((_90218_expr_tokens.len() == 0LL))) { goto _case_end_4758066480; }
		_case_begin_4758066480:;
		{
			return jule::Any((*this)._method_build_slice(_90042_tokens));
		}
		goto _match_end_4758066272;
		_case_end_4758066480:;
		if (!(((_90218_expr_tokens.len() == 0LL) || (_90231_range_n > 0LL)))) { goto _case_end_4758066592; }
		_case_begin_4758066592:;
		{
			(*this)._method_push_err(_90117_error_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return jule::Any(nullptr);
		}
		goto _match_end_4758066272;
		_case_end_4758066592:;
		_match_end_4758066272:;
	}
	_90042_tokens=_90042_tokens.slice(static_cast<jule::Int>(_90218_expr_tokens.len()));
	jule::Int _92117_i = 0LL;
	jule::Slice<_11911a8a0_Token> _92218_slicing_tokens;
	jule::Int _92234_colon;
	std::tie(_92218_slicing_tokens,_92234_colon) = _11972a4d0_split_map_range(_90042_tokens,_92117_i);
	if (_92234_colon != -1LL) {
		return jule::Any((*this)._method_build_slicing(_90218_expr_tokens,_92218_slicing_tokens,_92234_colon,_90117_error_token));
	}
	return jule::Any((*this)._method_build_indexing(_90218_expr_tokens,_90042_tokens,_90117_error_token));
}



inline jule::Any _11943fdb0_ExprBuilder::_method_build_data(jule::Slice<_11911a8a0_Token> _92933_tokens) {
	{
		auto _match_expr{ _92933_tokens.len() };
		if (!((0LL) == _match_expr)) { goto _case_end_4758083360; }
		_case_begin_4758083360:;
		{
			return jule::Any(nullptr);
		}
		goto _match_end_4758082352;
		_case_end_4758083360:;
		if (!((1LL) == _match_expr)) { goto _case_end_4758083472; }
		_case_begin_4758083472:;
		{
			return (*this)._method_build_single(_92933_tokens[static_cast<jule::Int>(0LL)]);
		}
		goto _match_end_4758082352;
		_case_end_4758083472:;
		if (!((3LL) == _match_expr)) { goto _case_end_4758083584; }
		_case_begin_4758083584:;
		{
			if (_92933_tokens[static_cast<jule::Int>(0LL)]._field_id == 31LLU) {
				return jule::Any((*this)._method_build_cpp_linked_ident(_92933_tokens));
			}
		}
		goto _match_end_4758082352;
		_case_end_4758083584:;
		_match_end_4758082352:;
	}
	_11911a8a0_Token _94317_token = _92933_tokens[static_cast<jule::Int>(0LL)];
	{
		auto &_match_expr{ _94317_token._field_id };
		if (!((7LLU) == _match_expr)) { goto _case_end_4758092496; }
		_case_begin_4758092496:;
		{
			if ((_92933_tokens.len() > 1LL) && (_94317_token._field_kind == jule::Str("*", 1))) {
				_94317_token=_92933_tokens[static_cast<jule::Int>(1LL)];
				if ((_94317_token._field_id == 1LLU) || (_94317_token._field_id == 35LLU)) {
					return jule::Any((*this)._method_build_type(_92933_tokens));
				}
			}
			return jule::Any((*this)._method_build_unary(_92933_tokens));
		}
		goto _match_end_4758086320;
		_case_end_4758092496:;
		if (!((3LLU) == _match_expr)) { goto _case_end_4758092608; }
		_case_begin_4758092608:;
		{
			if ((_94317_token._field_kind != jule::Str("[", 1)) || (_92933_tokens.len() < 3LL)) {
				goto _match_end_4758086320;
			}
			_11911a8a0_Token _96117_next = _92933_tokens[static_cast<jule::Int>(1LL)];
			if ((_96117_next._field_id != 3LLU) || (_96117_next._field_kind != jule::Str("]", 1))) {
				goto _match_end_4758086320;
			}
			return jule::Any((*this)._method_build_type(_92933_tokens));
		}
		goto _match_end_4758086320;
		_case_end_4758092608:;
		_match_end_4758086320:;
	}
	_94317_token=_92933_tokens[static_cast<jule::Int>(_92933_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _94317_token._field_id };
		if (!((2LLU) == _match_expr)) { goto _case_end_4758109808; }
		_case_begin_4758109808:;
		{
			return (*this)._method_build_sub_ident(_92933_tokens);
		}
		goto _match_end_4758109072;
		_case_end_4758109808:;
		if (!((1LLU) == _match_expr)) { goto _case_end_4758110016; }
		_case_begin_4758110016:;
		{
			return jule::Any((*this)._method_build_type(_92933_tokens));
		}
		goto _match_end_4758109072;
		_case_end_4758110016:;
		if (!((7LLU) == _match_expr)) { goto _case_end_4758110128; }
		_case_begin_4758110128:;
		{
			return (*this)._method_build_op_right(_92933_tokens);
		}
		goto _match_end_4758109072;
		_case_end_4758110128:;
		if (!((3LLU) == _match_expr)) { goto _case_end_4758110240; }
		_case_begin_4758110240:;
		{
			{
				auto &_match_expr{ _94317_token._field_kind };
				if (!((jule::Str(")", 1)) == _match_expr)) { goto _case_end_4758111008; }
				_case_begin_4758111008:;
				{
					return (*this)._method_build_parentheses_range(_92933_tokens);
				}
				goto _match_end_4758115824;
				_case_end_4758111008:;
				if (!((jule::Str("}", 1)) == _match_expr)) { goto _case_end_4758111120; }
				_case_begin_4758111120:;
				{
					return (*this)._method_build_brace_range(_92933_tokens);
				}
				goto _match_end_4758115824;
				_case_end_4758111120:;
				if (!((jule::Str("]", 1)) == _match_expr)) { goto _case_end_4758111232; }
				_case_begin_4758111232:;
				{
					return (*this)._method_build_bracket_range(_92933_tokens);
				}
				goto _match_end_4758115824;
				_case_end_4758111232:;
				_match_end_4758115824:;
			}
		}
		goto _match_end_4758109072;
		_case_end_4758110240:;
		_match_end_4758109072:;
	}
	(*this)._method_push_err(_92933_tokens[static_cast<jule::Int>(0LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
	return jule::Any(nullptr);
}



inline jule::Ref<_118d9a790_BinopExpr> _11943fdb0_ExprBuilder::_method_build_binop(jule::Slice<_11911a8a0_Token> _99834_tokens,jule::Int _99851_i) {
	jule::Slice<_11911a8a0_Token> _99917_left_tokens = _99834_tokens.slice(0LL,static_cast<jule::Int>(_99851_i));
	jule::Slice<_11911a8a0_Token> _100017_right_tokens = _99834_tokens.slice(static_cast<jule::Int>(_99851_i + 1LL));
	if (_99917_left_tokens.len() == 0LL) {
		(*this)._method_push_err(_99834_tokens[static_cast<jule::Int>(_99851_i)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_118d9a790_BinopExpr>();
	}
	if (_100017_right_tokens.len() == 0LL) {
		(*this)._method_push_err(_99834_tokens[static_cast<jule::Int>(_99851_i)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_118d9a790_BinopExpr>();
	}
	return jule::new_struct<_118d9a790_BinopExpr>(new( std::nothrow ) _118d9a790_BinopExpr((*this)._method_build(_99917_left_tokens),(*this)._method_build(_100017_right_tokens),_99834_tokens[static_cast<jule::Int>(_99851_i)]));
}



inline jule::Any _11943fdb0_ExprBuilder::_method_build(jule::Slice<_11911a8a0_Token> _101928_tokens) {
	jule::Int _102013_i = _11943fdb0_find_lowest_prec_op(_101928_tokens);
	if (_102013_i == -1LL) {
		return (*this)._method_build_data(_101928_tokens);
	}
	return jule::Any((*this)._method_build_binop(_101928_tokens,_102013_i));
}



inline jule::Any _11943fdb0_ExprBuilder::_method_build_kind(jule::Slice<_11911a8a0_Token> _102733_tokens) {
	jule::Slice<jule::Slice<_11911a8a0_Token>> _102818_parts;
	jule::Slice<_13fe81720_Log> _102825_errors;
	std::tie(_102818_parts,_102825_errors) = _11953bd10_parts(_102733_tokens,8LLU,true);
	if (_102825_errors != nullptr) {
		(*this)._field_p->_field_errors=append((*this)._field_p->_field_errors,_102825_errors);
		return jule::Any(nullptr);
	} else if (_102818_parts.len() > 1LL) {
		return jule::Any((*this)._method_build_tuple(_102818_parts));
	}
	return (*this)._method_build(_102733_tokens);
}



inline jule::Ref<_118d9a790_Expr> _11943fdb0_ExprBuilder::_method_build_from_tokens(jule::Slice<_11911a8a0_Token> _103840_tokens) {
	_103840_tokens=_11943fdb0_eliminate_comments(_103840_tokens);
	if (_103840_tokens.len() == 0LL) {
		return jule::new_ref<_118d9a790_Expr>();
	}
	return jule::new_struct<_118d9a790_Expr>(new( std::nothrow ) _118d9a790_Expr(_103840_tokens[static_cast<jule::Int>(0LL)],(*this)._method_build_kind(_103840_tokens)));
}







std::ostream &operator<<(std::ostream &_Stream, const _11943fdb0_ExprBuilder &_Src) {
	_Stream << "ExprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}



inline void _11953bd10_Parser::_method_stop(void) {
	jule::drop((*this)._field_ast);
}



inline jule::Bool _11953bd10_Parser::_method_stopped(void) {
	return (!(jule::real((*this)._field_ast)));
}



inline void _11953bd10_Parser::_method_push_err(_11911a8a0_Token _23927_token,jule::Str _23941_key,jule::Slice<jule::Any> _23951_args) {
	(*this)._field_errors=append((*this)._field_errors,jule::Slice<_13fe81720_Log>({_11953bd10_compiler_err(_23927_token,_23941_key,_23951_args)}));
}



inline jule::Ref<_118d9a790_Expr> _11953bd10_Parser::_method_build_expr(jule::Slice<_11911a8a0_Token> _24334_tokens) {
	jule::Ref<_11943fdb0_ExprBuilder> _24417_ep = jule::new_struct<_11943fdb0_ExprBuilder>(new( std::nothrow ) _11943fdb0_ExprBuilder(this->self));
	jule::Ref<_118d9a790_Expr> _24517_expr = _24417_ep->_method_build_from_tokens(_24334_tokens);
	return _24517_expr;
}



inline jule::Ref<_118d9a790_Directive> _11953bd10_Parser::_method_get_directive(jule::Ref<_118d9a790_Comment> _24928_c) {
	if (_24928_c->_field_text.len() <= jule::Str("jule:", 5).len()) {
		return jule::new_ref<_118d9a790_Directive>();
	}
	jule::Ref<_118d9a790_Directive> _25417_d = jule::new_struct<_118d9a790_Directive>(new( std::nothrow ) _118d9a790_Directive(_24928_c->_field_token,jule::Str(),jule::Slice<jule::Str>()));
	jule::Str _25813_pragma = _24928_c->_field_token._field_kind.slice(static_cast<jule::Int>(jule::Str("jule:", 5).len()));
	jule::Slice<jule::Str> _25917_parts = _25813_pragma.split(jule::Str(" ", 1),-1LL);
	_25417_d->_field_tag=_25917_parts[static_cast<jule::Int>(0LL)];
	_25417_d->_field_args=_25917_parts.slice(static_cast<jule::Int>(1LL));
	jule::Bool _26517_ok = false;
	{
		auto &__julec_range_expr = _1410150a0_DIRECTIVES;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _11953bd10_kind = *__julec_range_begin;
			_iter_begin_4758193920:;
			{
				if (_25417_d->_field_tag == _11953bd10_kind) {
					_26517_ok=true;
					goto _iter_end_4758193920;
				}
			}
			_iter_next_4758193920:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11953bd10_kind = *__julec_range_begin; goto _iter_begin_4758193920; }
			_iter_end_4758193920:;
		}
	}
	if ((!(_26517_ok))) {
		return jule::new_ref<_118d9a790_Directive>();
	}
	return _25417_d;
}



inline void _11953bd10_Parser::_method_push_directive(jule::Ref<_118d9a790_Comment> _27933_c) {
	jule::Ref<_118d9a790_Directive> _28017_d = (*this)._method_get_directive(_27933_c);
	if ((!(jule::real(_28017_d)))) {
		return;
	}
	{
		auto &__julec_range_expr = (*this)._field_directives;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_118d9a790_Directive> _11953bd10_pd = *__julec_range_begin;
			_iter_begin_4758202736:;
			{
				if (_28017_d->_field_tag == _11953bd10_pd->_field_tag) {
					return;
				}
			}
			_iter_next_4758202736:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11953bd10_pd = *__julec_range_begin; goto _iter_begin_4758202736; }
			_iter_end_4758202736:;
		}
	}
	(*this)._field_directives=append((*this)._field_directives,jule::Slice<jule::Ref<_118d9a790_Directive>>({_28017_d}));
}



inline void _11953bd10_Parser::_method_process_comment(jule::Ref<_118d9a790_Comment> _29538_c) {
	if (_29538_c->_method_is_directive()) {
		(*this)._method_push_directive(_29538_c);
		return;
	}
	if ((!(jule::real((*this)._field_comment_group)))) {
		(*this)._field_comment_group=jule::new_struct<_118d9a790_CommentGroup>(new( std::nothrow ) _118d9a790_CommentGroup());
	}
	(*this)._field_comment_group->_field_comments=append((*this)._field_comment_group->_field_comments,jule::Slice<jule::Ref<_118d9a790_Comment>>({_29538_c}));
}



inline jule::Ref<_118d9a790_ScopeTree> _11953bd10_Parser::_method_build_scope(jule::Slice<_11911a8a0_Token> _30635_tokens) {
	jule::Ref<_118d9a790_ScopeTree> _30717_s = _11912dd80_new_scope();
	_11912dd80_ScopeParser _30817_sp = _11912dd80_ScopeParser(this->self,jule::Ref<_118d9a790_ScopeTree>(),jule::Slice<jule::Ref<_11912dd80_Stmt>>(),jule::Int());
	_30817_sp._method_build(_30635_tokens,_30717_s);
	return _30717_s;
}



inline std::tuple<jule::Ref<_118d9a790_TypeDecl>,jule::Bool> _11953bd10_Parser::_method___build_type(jule::Slice<_11911a8a0_Token> _31543_tokens,jule::Int* _31613_i,jule::Bool _31622_err) {
	_11972a4d0_TypeBuilder _31717_tb = _11972a4d0_TypeBuilder(this->self,_31543_tokens,_31613_i,_31622_err);
	jule::Ref<_118d9a790_TypeDecl> _32318_decl;
	jule::Bool _32324_ok;
	std::tie(_32318_decl,_32324_ok) = _31717_tb._method_build();
	return std::make_tuple(_32318_decl,_32324_ok);
}



inline std::tuple<jule::Ref<_118d9a790_TypeDecl>,jule::Bool> _11953bd10_Parser::_method_build_type(jule::Slice<_11911a8a0_Token> _32841_tokens,jule::Int* _32913_i,jule::Bool _32922_err) {
	_11911a8a0_Token _33013_token = _32841_tokens[static_cast<jule::Int>((*(_32913_i)))];
	jule::Ref<_118d9a790_TypeDecl> _33118_t;
	jule::Bool _33121_ok;
	std::tie(_33118_t,_33121_ok) = this->self->_method___build_type(_32841_tokens,_32913_i,_32922_err);
	if (_32922_err && (!(_33121_ok))) {
		this->self->_method_push_err(_33013_token,jule::Str("invalid_type", 12),jule::Slice<jule::Any>({}));
	}
	return std::make_tuple(_33118_t,_33121_ok);
}



inline jule::Ref<_118d9a790_TypeAliasDecl> _11953bd10_Parser::_method_build_type_alias_decl(jule::Slice<_11911a8a0_Token> _33845_tokens) {
	jule::Int _33917_i = 1LL;
	if (_33917_i >= _33845_tokens.len()) {
		this->self->_method_push_err(_33845_tokens[static_cast<jule::Int>(_33917_i - 1LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_118d9a790_TypeAliasDecl>();
	}
	jule::Ref<_118d9a790_TypeAliasDecl> _34417_tad = jule::new_struct<_118d9a790_TypeAliasDecl>(new( std::nothrow ) _118d9a790_TypeAliasDecl(jule::Ref<_118d9a790_ScopeTree>(),jule::Bool(),jule::Bool(),_33845_tokens[static_cast<jule::Int>(1LL)],_33845_tokens[static_cast<jule::Int>(1LL)]._field_kind,jule::Ref<_118d9a790_TypeDecl>(),jule::Ref<_118d9a790_CommentGroup>()));
	_11911a8a0_Token _34817_token = _33845_tokens[static_cast<jule::Int>(_33917_i)];
	if (_34817_token._field_id != 2LLU) {
		this->self->_method_push_err(_34817_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
	}
	(_33917_i)++;
	if (_33917_i >= _33845_tokens.len()) {
		this->self->_method_push_err(_33845_tokens[static_cast<jule::Int>(_33917_i - 1LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return _34417_tad;
	}
	_34817_token=_33845_tokens[static_cast<jule::Int>(_33917_i)];
	if (_34817_token._field_id != 11LLU) {
		this->self->_method_push_err(_33845_tokens[static_cast<jule::Int>(_33917_i - 1LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return _34417_tad;
	}
	(_33917_i)++;
	if (_33917_i >= _33845_tokens.len()) {
		this->self->_method_push_err(_33845_tokens[static_cast<jule::Int>(_33917_i - 1LL)],jule::Str("missing_type", 12),jule::Slice<jule::Any>({}));
		return _34417_tad;
	}
	jule::Ref<_118d9a790_TypeDecl> _36718_t;
	jule::Bool _36721_ok;
	std::tie(_36718_t,_36721_ok) = this->self->_method_build_type(_33845_tokens,(&(_33917_i)),true);
	_34417_tad->_field_kind=_36718_t;
	if (_36721_ok && (_33917_i < _33845_tokens.len())) {
		this->self->_method_push_err(_33845_tokens[static_cast<jule::Int>(_33917_i)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
	}
	return _34417_tad;
}



inline void _11953bd10_Parser::_method_build_var_type_and_expr(jule::Ref<_118d9a790_VarDecl> _37547_v,jule::Slice<_11911a8a0_Token> _37564_tokens) {
	jule::Int _37617_i = 0LL;
	_11911a8a0_Token _37717_tok = _37564_tokens[static_cast<jule::Int>(_37617_i)];
	if (_37717_tok._field_id == 11LLU) {
		(_37617_i)++;
		if ((_37617_i >= _37564_tokens.len()) || ((_37564_tokens[static_cast<jule::Int>(_37617_i)]._field_id == 7LLU) && (_37564_tokens[static_cast<jule::Int>(_37617_i)]._field_kind == jule::Str("=", 1)))) {
			this->self->_method_push_err(_37717_tok,jule::Str("missing_type", 12),jule::Slice<jule::Any>({}));
			return;
		}
		jule::Ref<_118d9a790_TypeDecl> _38522_t;
		jule::Bool _38525_ok;
		std::tie(_38522_t,_38525_ok) = this->self->_method_build_type(_37564_tokens,(&(_37617_i)),true);
		if (_38525_ok) {
			_37547_v->_field_kind=_38522_t;
			if (_37617_i >= _37564_tokens.len()) {
				return;
			}
			_37717_tok=_37564_tokens[static_cast<jule::Int>(_37617_i)];
		}
	}
	if (_37717_tok._field_id == 7LLU) {
		if (_37717_tok._field_kind != jule::Str("=", 1)) {
			this->self->_method_push_err(_37717_tok,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return;
		}
		jule::Slice<_11911a8a0_Token> _40021_expr_tokens = _37564_tokens.slice(static_cast<jule::Int>(_37617_i + 1LL));
		if (_40021_expr_tokens.len() == 0LL) {
			this->self->_method_push_err(_37717_tok,jule::Str("missing_expr", 12),jule::Slice<jule::Any>({}));
			return;
		}
		_37547_v->_field_expr=this->self->_method_build_expr(_40021_expr_tokens);
	} else {
		this->self->_method_push_err(_37717_tok,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
	}
}



inline void _11953bd10_Parser::_method_build_var_common(jule::Ref<_118d9a790_VarDecl> _41140_v,jule::Slice<_11911a8a0_Token> _41157_tokens) {
	_41140_v->_field_token=_41157_tokens[static_cast<jule::Int>(0LL)];
	if (_41140_v->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_41140_v->_field_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return;
	}
	_41140_v->_field_ident=_41140_v->_field_token._field_kind;
	jule::drop(_41140_v->_field_kind);
	if (_41157_tokens.len() > 1LL) {
		_41157_tokens=_41157_tokens.slice(static_cast<jule::Int>(1LL));
		this->self->_method_build_var_type_and_expr(_41140_v,_41157_tokens);
	}
}



inline void _11953bd10_Parser::_method_build_var_begin(jule::Ref<_118d9a790_VarDecl> _42538_v,jule::Ref<jule::Int> _42555_i,jule::Slice<_11911a8a0_Token> _42564_tokens) {
	_11911a8a0_Token _42613_tok = _42564_tokens[static_cast<jule::Int>(_42555_i)];
	{
		auto &_match_expr{ _42613_tok._field_id };
		if (!((38LLU) == _match_expr)) { goto _case_end_4758341488; }
		_case_begin_4758341488:;
		{
			_42538_v->_field_statically=true;
			goto _case_begin_4758341600;
		}
		goto _match_end_4758337424;
		_case_end_4758341488:;
		if (!((34LLU) == _match_expr)) { goto _case_end_4758341600; }
		_case_begin_4758341600:;
		{
			(_42555_i)++;
			if (_42564_tokens[static_cast<jule::Int>(_42555_i)]._field_id == 36LLU) {
				_42538_v->_field_mutable=true;
				(_42555_i)++;
			}
		}
		goto _match_end_4758337424;
		_case_end_4758341600:;
		if (!((9LLU) == _match_expr)) { goto _case_end_4758341712; }
		_case_begin_4758341712:;
		{
			(_42555_i)++;
			if (_42538_v->_field_constant) {
				(*this)._method_push_err(_42613_tok,jule::Str("already_const", 13),jule::Slice<jule::Any>({}));
				goto _match_end_4758337424;
			}
			_42538_v->_field_constant=true;
			if ((!(_42538_v->_field_mutable))) {
				goto _match_end_4758337424;
			}
			goto _case_begin_4758338720;
		}
		goto _match_end_4758337424;
		_case_end_4758341712:;
		_case_begin_4758338720:;
		{
			(*this)._method_push_err(_42613_tok,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4758337424;
		_case_end_4758338720:;
		_match_end_4758337424:;
	}
	if (_42555_i >= _42564_tokens.len()) {
		(*this)._method_push_err(_42613_tok,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
	}
}



inline jule::Ref<_118d9a790_VarDecl> _11953bd10_Parser::_method_build_var(jule::Slice<_11911a8a0_Token> _46333_tokens) {
	jule::Ref<jule::Int> _46417_i = jule::new_ref<jule::Int>(0LL);
	jule::Ref<_118d9a790_VarDecl> _46517_v = jule::new_struct<_118d9a790_VarDecl>(new( std::nothrow ) _118d9a790_VarDecl(jule::Ref<_118d9a790_ScopeTree>(),_46333_tokens[static_cast<jule::Int>(_46417_i)],jule::Str(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_118d9a790_CommentGroup>(),jule::Ref<_118d9a790_TypeDecl>(),jule::Ref<_118d9a790_Expr>()));
	this->self->_method_build_var_begin(_46517_v,_46417_i,_46333_tokens);
	if (_46417_i >= _46333_tokens.len()) {
		return jule::new_ref<_118d9a790_VarDecl>();
	}
	_46333_tokens=_46333_tokens.slice(static_cast<jule::Int>(_46417_i));
	if ((_46333_tokens[static_cast<jule::Int>(0LL)]._field_id == 7LLU) && (_46333_tokens[static_cast<jule::Int>(0LL)]._field_kind == jule::Str("&", 1))) {
		_46517_v->_field_reference=true;
		if (_46333_tokens.len() == 1LL) {
			return jule::new_ref<_118d9a790_VarDecl>();
		}
		_46333_tokens=_46333_tokens.slice(static_cast<jule::Int>(1LL));
	}
	this->self->_method_build_var_common(_46517_v,_46333_tokens);
	return _46517_v;
}



inline jule::Ref<_118d9a790_GenericDecl> _11953bd10_Parser::_method_build_generic(jule::Slice<_11911a8a0_Token> _48536_tokens) {
	if (_48536_tokens.len() > 1LL) {
		(*this)._method_push_err(_48536_tokens[static_cast<jule::Int>(1LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_118d9a790_GenericDecl> _48917_g = jule::new_struct<_118d9a790_GenericDecl>(new( std::nothrow ) _118d9a790_GenericDecl(_48536_tokens[static_cast<jule::Int>(0LL)],jule::Str()));
	if (_48917_g->_field_token._field_id != 2LLU) {
		(*this)._method_push_err(_48917_g->_field_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
	}
	_48917_g->_field_ident=_48917_g->_field_token._field_kind;
	return _48917_g;
}



inline jule::Slice<jule::Ref<_118d9a790_GenericDecl>> _11953bd10_Parser::_method_build_generics(jule::Slice<_11911a8a0_Token> _49937_tokens,_11911a8a0_Token _49954_error_token) {
	if (_49937_tokens.len() == 0LL) {
		(*this)._method_push_err(_49954_error_token,jule::Str("missing_expr", 12),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	jule::Slice<jule::Slice<_11911a8a0_Token>> _50518_parts;
	jule::Slice<_13fe81720_Log> _50525_errors;
	std::tie(_50518_parts,_50525_errors) = _11953bd10_parts(_49937_tokens,8LLU,true);
	(*this)._field_errors=append((*this)._field_errors,_50525_errors);
	jule::Slice<jule::Ref<_118d9a790_GenericDecl>> _50817_generics = jule::Slice<jule::Ref<_118d9a790_GenericDecl>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_50518_parts.len())));
	{
		auto &__julec_range_expr = _50518_parts;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _11953bd10_i = 0;
			jule::Slice<_11911a8a0_Token> _11953bd10_part = *__julec_range_begin;
			_iter_begin_4758396672:;
			{
				if (_50518_parts.len() > 0LL) {
					_50817_generics[static_cast<jule::Int>(_11953bd10_i)]=(*this)._method_build_generic(_11953bd10_part);
				}
			}
			_iter_next_4758396672:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_11953bd10_i; _11953bd10_part = *__julec_range_begin; goto _iter_begin_4758396672; }
			_iter_end_4758396672:;
		}
	}
	return _50817_generics;
}



inline jule::Ref<_118d9a790_ParamDecl> _11953bd10_Parser::_method_build_self_param(jule::Slice<_11911a8a0_Token> _51839_tokens) {
	if (_51839_tokens.len() == 0LL) {
		return jule::new_ref<_118d9a790_ParamDecl>();
	}
	jule::Ref<_118d9a790_ParamDecl> _52317_param = jule::new_struct<_118d9a790_ParamDecl>(new( std::nothrow ) _118d9a790_ParamDecl());
	jule::Int _52617_i = 0LL;
	if (_51839_tokens[static_cast<jule::Int>(_52617_i)]._field_id == 36LLU) {
		_52317_param->_field_mutable=true;
		(_52617_i)++;
		if (_52617_i >= _51839_tokens.len()) {
			(*this)._method_push_err(_51839_tokens[static_cast<jule::Int>(_52617_i - 1LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_118d9a790_ParamDecl>();
		}
	}
	if (_51839_tokens[static_cast<jule::Int>(_52617_i)]._field_kind == jule::Str("&", 1)) {
		_52317_param->_field_ident=jule::Str("&", 1);
		(_52617_i)++;
		if (_52617_i >= _51839_tokens.len()) {
			(*this)._method_push_err(_51839_tokens[static_cast<jule::Int>(_52617_i - 1LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_118d9a790_ParamDecl>();
		}
	}
	if (_51839_tokens[static_cast<jule::Int>(_52617_i)]._field_id == 28LLU) {
		_52317_param->_field_ident+=jule::Str("self", 4);
		_52317_param->_field_token=_51839_tokens[static_cast<jule::Int>(_52617_i)];
		(_52617_i)++;
		if (_52617_i < _51839_tokens.len()) {
			(*this)._method_push_err(_51839_tokens[static_cast<jule::Int>(_52617_i)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		}
	}
	return _52317_param;
}



inline void _11953bd10_Parser::_method_param_type_begin(jule::Ref<_118d9a790_ParamDecl> _55739_param,jule::Int& _55763_i,jule::Slice<_11911a8a0_Token> _55771_tokens) {
	_iter_begin_4758428768:;
	if (!(_55763_i < _55771_tokens.len())) { goto _iter_end_4758428768; }
	{
		_11911a8a0_Token _55917_token = _55771_tokens[static_cast<jule::Int>(_55763_i)];
		if (_55917_token._field_id != 7LLU) {
			return;
		} else if (_55917_token._field_kind != jule::Str("...", 3)) {
			return;
		}
		if (_55739_param->_field_variadic) {
			(*this)._method_push_err(_55917_token,jule::Str("already_variadic", 16),jule::Slice<jule::Any>({}));
			goto _iter_next_4758428768;
		}
		_55739_param->_field_variadic=true;
	}
	_iter_next_4758428768:;
	(_55763_i)++;
	goto _iter_begin_4758428768;
	_iter_end_4758428768:;
}



inline void _11953bd10_Parser::_method_build_param_type(jule::Ref<_118d9a790_ParamDecl> _57440_param,jule::Slice<_11911a8a0_Token> _57463_tokens,jule::Bool _57480_must_pure) {
	jule::Int _57517_i = 0LL;
	if ((!(_57480_must_pure))) {
		this->self->_method_param_type_begin(_57440_param,_57517_i,_57463_tokens);
		if (_57517_i >= _57463_tokens.len()) {
			return;
		}
	}
	std::tie(_57440_param->_field_kind,std::ignore) = this->self->_method_build_type(_57463_tokens,(&(_57517_i)),true);
	if (_57517_i < _57463_tokens.len()) {
		this->self->_method_push_err(_57463_tokens[static_cast<jule::Int>(_57517_i)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
	}
}



inline void _11953bd10_Parser::_method_param_body_id(jule::Ref<_118d9a790_ParamDecl> _58832_param,_11911a8a0_Token _58851_token) {
	if (_11911a8a0_is_ignore_ident(_58851_token._field_kind)) {
		_58832_param->_field_ident=jule::Str("<anonymous>", 11);
		return;
	}
	_58832_param->_field_ident=_58851_token._field_kind;
}



inline void _11953bd10_Parser::_method_build_param_body(jule::Ref<_118d9a790_ParamDecl> _59640_param,jule::Ref<jule::Int> _59663_i,jule::Slice<_11911a8a0_Token> _59676_tokens,jule::Bool _59693_must_pure) {
	this->self->_method_param_body_id(_59640_param,_59676_tokens[static_cast<jule::Int>(_59663_i)]);
	_11911a8a0_Token _59817_tok = _59676_tokens[static_cast<jule::Int>(_59663_i)];
	if ((_59663_i + 1LL) >= _59676_tokens.len()) {
		return;
	} else if (((_59676_tokens.len() - _59663_i) - 1LL) < 2LL) {
		this->self->_method_push_err(_59817_tok,jule::Str("missing_type", 12),jule::Slice<jule::Any>({}));
		return;
	}
	_59817_tok=_59676_tokens[static_cast<jule::Int>(_59663_i + 1LL)];
	if (_59817_tok._field_id != 11LLU) {
		this->self->_method_build_param_type(_59640_param,_59676_tokens,_59693_must_pure);
		return;
	}
	_59676_tokens=_59676_tokens.slice(static_cast<jule::Int>(_59663_i + 2LL));
	this->self->_method_build_param_type(_59640_param,_59676_tokens,_59693_must_pure);
}



inline jule::Ref<_118d9a790_ParamDecl> _11953bd10_Parser::_method_build_param(jule::Slice<_11911a8a0_Token> _61735_tokens,jule::Bool _61752_must_pure) {
	jule::Ref<_118d9a790_ParamDecl> _61817_param = jule::new_struct<_118d9a790_ParamDecl>(new( std::nothrow ) _118d9a790_ParamDecl(_61735_tokens[static_cast<jule::Int>(0LL)],jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_118d9a790_TypeDecl>(),jule::Str()));
	if (_61817_param->_field_token._field_id == 36LLU) {
		_61817_param->_field_mutable=true;
		if (_61735_tokens.len() == 1LL) {
			this->self->_method_push_err(_61735_tokens[static_cast<jule::Int>(0LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_118d9a790_ParamDecl>();
		}
		_61735_tokens=_61735_tokens.slice(static_cast<jule::Int>(1LL));
		_61817_param->_field_token=_61735_tokens[static_cast<jule::Int>(0LL)];
	}
	if (_61735_tokens.len() >= 3LL) {
		if ((_61817_param->_field_token._field_id == 7LLU) && (_61817_param->_field_token._field_kind == jule::Str("&", 1))) {
			if (_61735_tokens.len() == 1LL) {
				this->self->_method_push_err(_61735_tokens[static_cast<jule::Int>(0LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
				return jule::new_ref<_118d9a790_ParamDecl>();
			}
			if ((_61735_tokens[static_cast<jule::Int>(1LL)]._field_id == 2LLU) && (_61735_tokens[static_cast<jule::Int>(2LL)]._field_id == 11LLU)) {
				_61817_param->_field_reference=true;
				_61735_tokens=_61735_tokens.slice(static_cast<jule::Int>(1LL));
				_61817_param->_field_token=_61735_tokens[static_cast<jule::Int>(0LL)];
			}
		}
	}
	if (_61817_param->_field_token._field_id != 2LLU) {
		_61817_param->_field_ident=jule::Str("<anonymous>", 11);
		this->self->_method_build_param_type(_61817_param,_61735_tokens,_61752_must_pure);
	} else {
		jule::Ref<jule::Int> _65421_i = jule::new_ref<jule::Int>(0LL);
		this->self->_method_build_param_body(_61817_param,_65421_i,_61735_tokens,_61752_must_pure);
	}
	return _61817_param;
}



inline void _11953bd10_Parser::_method_check_params(jule::Slice<jule::Ref<_118d9a790_ParamDecl>> _66135_params) {
	{
		auto &__julec_range_expr = _66135_params;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_118d9a790_ParamDecl> _11953bd10_param = *__julec_range_begin;
			_iter_begin_4758534160:;
			{
				if (_11953bd10_param->_method_is_self() || jule::real(_11953bd10_param->_field_kind)) {
					goto _iter_next_4758534160;
				}
				if (_11953bd10_param->_field_token._field_id == 0LLU) {
					(*this)._method_push_err(_11953bd10_param->_field_token,jule::Str("missing_type", 12),jule::Slice<jule::Any>({}));
				} else {
					_11953bd10_param->_field_kind=jule::new_struct<_118d9a790_TypeDecl>(new( std::nothrow ) _118d9a790_TypeDecl(_11953bd10_param->_field_token,jule::Any(jule::new_struct<_118d9a790_IdentTypeDecl>(new( std::nothrow ) _118d9a790_IdentTypeDecl(_11953bd10_param->_field_token,_11953bd10_param->_field_token._field_kind,jule::Bool(),jule::Slice<jule::Ref<_118d9a790_TypeDecl>>())))));
					_11953bd10_param->_field_ident=jule::Str("<anonymous>", 11);
					_11953bd10_param->_field_token=_11911a8a0_Token();
				}
			}
			_iter_next_4758534160:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11953bd10_param = *__julec_range_begin; goto _iter_begin_4758534160; }
			_iter_end_4758534160:;
		}
	}
}



inline jule::Slice<jule::Ref<_118d9a790_ParamDecl>> _11953bd10_Parser::_method_build_params(jule::Slice<_11911a8a0_Token> _68236_tokens,jule::Bool _68253_method,jule::Bool _68267_must_pure) {
	jule::Slice<jule::Slice<_11911a8a0_Token>> _68318_parts;
	jule::Slice<_13fe81720_Log> _68325_errs;
	std::tie(_68318_parts,_68325_errs) = _11953bd10_parts(_68236_tokens,8LLU,true);
	this->self->_field_errors=append(this->self->_field_errors,_68325_errs);
	if (_68318_parts.len() == 0LL) {
		return nullptr;
	}
	jule::Slice<jule::Ref<_118d9a790_ParamDecl>> _68917_params = nullptr;
	if (_68253_method && (_68318_parts.len() > 0LL)) {
		jule::Ref<_118d9a790_ParamDecl> _69121_param = this->self->_method_build_self_param(_68318_parts[static_cast<jule::Int>(0LL)]);
		if (jule::real(_69121_param) && _69121_param->_method_is_self()) {
			_68917_params=append(_68917_params,jule::Slice<jule::Ref<_118d9a790_ParamDecl>>({_69121_param}));
			_68318_parts=_68318_parts.slice(static_cast<jule::Int>(1LL));
		}
	}
	{
		auto &__julec_range_expr = _68318_parts;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Slice<_11911a8a0_Token> _11953bd10_part = *__julec_range_begin;
			_iter_begin_4758562176:;
			{
				jule::Ref<_118d9a790_ParamDecl> _69921_param = this->self->_method_build_param(_11953bd10_part,_68267_must_pure);
				if (jule::real(_69921_param)) {
					_68917_params=append(_68917_params,jule::Slice<jule::Ref<_118d9a790_ParamDecl>>({_69921_param}));
				}
			}
			_iter_next_4758562176:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11953bd10_part = *__julec_range_begin; goto _iter_begin_4758562176; }
			_iter_end_4758562176:;
		}
	}
	this->self->_method_check_params(_68917_params);
	return _68917_params;
}



inline std::tuple<jule::Ref<_118d9a790_RetTypeDecl>,jule::Bool> _11953bd10_Parser::_method_build_multi_ret_type(jule::Slice<_11911a8a0_Token> _70944_tokens,jule::Int& _70966_i) {
	jule::Bool _70993_ok = jule::Bool();
	jule::Ref<_118d9a790_RetTypeDecl> _70976_t = jule::Ref<_118d9a790_RetTypeDecl>();
	_70976_t=jule::new_struct<_118d9a790_RetTypeDecl>(new( std::nothrow ) _118d9a790_RetTypeDecl());
	(_70966_i)++;
	if (_70966_i >= _70944_tokens.len()) {
		(_70966_i)--;
		std::tie(_70976_t->_field_kind,_70993_ok) = this->self->_method_build_type(_70944_tokens,(&(_70966_i)),false);
		return std::make_tuple(_70976_t,_70993_ok);
	}
	(_70966_i)--;
	jule::Slice<_11911a8a0_Token> _71917_range_tokens = _11953bd10_range(_70966_i,jule::Str("(", 1),jule::Str(")", 1),_70944_tokens);
	jule::Slice<jule::Ref<_118d9a790_ParamDecl>> _72017_params = this->self->_method_build_params(_71917_range_tokens,false,true);
	jule::Slice<jule::Ref<_118d9a790_TypeDecl>> _72217_types = jule::Slice<jule::Ref<_118d9a790_TypeDecl>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_72017_params.len())));
	{
		auto &__julec_range_expr = _72017_params;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _11953bd10_i = 0;
			jule::Ref<_118d9a790_ParamDecl> _11953bd10_param = *__julec_range_begin;
			_iter_begin_4758588112:;
			{
				_72217_types[static_cast<jule::Int>(_11953bd10_i)]=_11953bd10_param->_field_kind;
				if (_11953bd10_param->_field_ident != jule::Str("<anonymous>", 11)) {
					_11953bd10_param->_field_token._field_kind=_11953bd10_param->_field_ident;
				} else {
					_11953bd10_param->_field_token._field_kind=jule::Str("_", 1);
				}
				_70976_t->_field_idents=append(_70976_t->_field_idents,jule::Slice<_11911a8a0_Token>({_11953bd10_param->_field_token}));
			}
			_iter_next_4758588112:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_11953bd10_i; _11953bd10_param = *__julec_range_begin; goto _iter_begin_4758588112; }
			_iter_end_4758588112:;
		}
	}
	if (_72217_types.len() > 1LL) {
		_70976_t->_field_kind=jule::new_struct<_118d9a790_TypeDecl>(new( std::nothrow ) _118d9a790_TypeDecl(_70944_tokens[static_cast<jule::Int>(0LL)],jule::Any(jule::new_struct<_118d9a790_TupleTypeDecl>(new( std::nothrow ) _118d9a790_TupleTypeDecl(_72217_types)))));
	} else {
		_70976_t->_field_kind=_72217_types[static_cast<jule::Int>(0LL)];
	}
	_70993_ok=true;
	return std::make_tuple(_70976_t,_70993_ok);
}



inline std::tuple<jule::Ref<_118d9a790_RetTypeDecl>,jule::Bool> _11953bd10_Parser::_method_build_ret_type(jule::Slice<_11911a8a0_Token> _74838_tokens,jule::Int& _74860_i) {
	jule::Bool _74887_ok = jule::Bool();
	jule::Ref<_118d9a790_RetTypeDecl> _74870_t = jule::Ref<_118d9a790_RetTypeDecl>();
	_74870_t=jule::new_struct<_118d9a790_RetTypeDecl>(new( std::nothrow ) _118d9a790_RetTypeDecl());
	if (_74860_i >= _74838_tokens.len()) {
		return std::make_tuple(_74870_t,_74887_ok);
	}
	_11911a8a0_Token _75417_token = _74838_tokens[static_cast<jule::Int>(_74860_i)];
	{
		auto &_match_expr{ _75417_token._field_id };
		if (!((3LLU) == _match_expr)) { goto _case_end_4758614048; }
		_case_begin_4758614048:;
		{
			if (_75417_token._field_kind == jule::Str("{", 1)) {
				return std::make_tuple(_74870_t,_74887_ok);
			}
		}
		goto _match_end_4758612208;
		_case_end_4758614048:;
		if (!((7LLU) == _match_expr)) { goto _case_end_4758614160; }
		_case_begin_4758614160:;
		{
			if (_75417_token._field_kind == jule::Str("=", 1)) {
				return std::make_tuple(_74870_t,_74887_ok);
			}
		}
		goto _match_end_4758612208;
		_case_end_4758614160:;
		if (!((11LLU) == _match_expr)) { goto _case_end_4758614272; }
		_case_begin_4758614272:;
		{
			if ((_74860_i + 1LL) >= _74838_tokens.len()) {
				this->self->_method_push_err(_75417_token,jule::Str("missing_type", 12),jule::Slice<jule::Any>({}));
				return std::make_tuple(_74870_t,_74887_ok);
			}
			(_74860_i)++;
			_75417_token=_74838_tokens[static_cast<jule::Int>(_74860_i)];
			if (_75417_token._field_id == 3LLU) {
				{
					auto &_match_expr{ _75417_token._field_kind };
					if (!((jule::Str("(", 1)) == _match_expr)) { goto _case_end_4758625008; }
					_case_begin_4758625008:;
					{
						jule::Ref<_118d9a790_RetTypeDecl> _77730_decl;
						jule::Bool _77736_ok;
						std::tie(_77730_decl,_77736_ok) = this->self->_method_build_multi_ret_type(_74838_tokens,_74860_i);
						_74870_t = _77730_decl;
						_74887_ok = _77736_ok;
						return std::make_tuple(_74870_t,_74887_ok);
					}
					goto _match_end_4758373872;
					_case_end_4758625008:;
					if (!((jule::Str("{", 1)) == _match_expr)) { goto _case_end_4758625120; }
					_case_begin_4758625120:;
					{
						this->self->_method_push_err(_75417_token,jule::Str("missing_type", 12),jule::Slice<jule::Any>({}));
						return std::make_tuple(_74870_t,_74887_ok);
					}
					goto _match_end_4758373872;
					_case_end_4758625120:;
					_match_end_4758373872:;
				}
			}
			std::tie(_74870_t->_field_kind,_74887_ok) = this->self->_method_build_type(_74838_tokens,(&(_74860_i)),true);
			return std::make_tuple(_74870_t,_74887_ok);
		}
		goto _match_end_4758612208;
		_case_end_4758614272:;
		_match_end_4758612208:;
	}
	(_74860_i)++;
	this->self->_method_push_err(_75417_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
	return std::make_tuple(_74870_t,_74887_ok);
}



inline jule::Ref<_118d9a790_FnDecl> _11953bd10_Parser::_method_build_fn_prototype(jule::Slice<_11911a8a0_Token> _79342_tokens,jule::Int& _79364_i,jule::Bool _79372_method,jule::Bool _79386_anon) {
	jule::Ref<_118d9a790_FnDecl> _79417_f = jule::new_struct<_118d9a790_FnDecl>(new( std::nothrow ) _118d9a790_FnDecl(_79342_tokens[static_cast<jule::Int>(_79364_i)],jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Str(),jule::Slice<jule::Ref<_118d9a790_Directive>>(),jule::Ref<_118d9a790_CommentGroup>(),jule::Ref<_118d9a790_ScopeTree>(),jule::Slice<jule::Ref<_118d9a790_GenericDecl>>(),jule::Ref<_118d9a790_RetTypeDecl>(),jule::Slice<jule::Ref<_118d9a790_ParamDecl>>()));
	if (_79417_f->_field_token._field_id == 38LLU) {
		_79417_f->_field_statically=true;
		(_79364_i)++;
		if (_79364_i >= _79342_tokens.len()) {
			this->self->_method_push_err(_79417_f->_field_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_118d9a790_FnDecl>();
		}
		_79417_f->_field_token=_79342_tokens[static_cast<jule::Int>(_79364_i)];
	}
	if (_79417_f->_field_token._field_id == 35LLU) {
		_79417_f->_field_unsafety=true;
		(_79364_i)++;
		if (_79364_i >= _79342_tokens.len()) {
			this->self->_method_push_err(_79417_f->_field_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_118d9a790_FnDecl>();
		}
		_79417_f->_field_token=_79342_tokens[static_cast<jule::Int>(_79364_i)];
	}
	(_79364_i)++;
	if (_79364_i >= _79342_tokens.len()) {
		this->self->_method_push_err(_79417_f->_field_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_118d9a790_FnDecl>();
	}
	if (_79386_anon) {
		_79417_f->_field_ident=jule::Str("<anonymous>", 11);
	} else {
		_11911a8a0_Token _83017_tok = _79342_tokens[static_cast<jule::Int>(_79364_i)];
		if (_83017_tok._field_id != 2LLU) {
			this->self->_method_push_err(_83017_tok,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_118d9a790_FnDecl>();
		}
		_79417_f->_field_ident=_83017_tok._field_kind;
		(_79364_i)++;
	}
	if (_79364_i >= _79342_tokens.len()) {
		this->self->_method_push_err(_79417_f->_field_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_118d9a790_FnDecl>();
	}
	_11911a8a0_Token _84413_error_token = _79342_tokens[static_cast<jule::Int>(_79364_i)];
	jule::Slice<_11911a8a0_Token> _84517_generics_tokens = _11953bd10_range(_79364_i,jule::Str("[", 1),jule::Str("]", 1),_79342_tokens);
	if (_84517_generics_tokens != nullptr) {
		_79417_f->_field_generics=this->self->_method_build_generics(_84517_generics_tokens,_84413_error_token);
	}
	if (_79342_tokens[static_cast<jule::Int>(_79364_i)]._field_kind != jule::Str("(", 1)) {
		this->self->_method_push_err(_79342_tokens[static_cast<jule::Int>(_79364_i)],jule::Str("missing_function_parentheses", 28),jule::Slice<jule::Any>({}));
		return jule::new_ref<_118d9a790_FnDecl>();
	}
	jule::Slice<_11911a8a0_Token> _85517_params_toks = _11953bd10_range(_79364_i,jule::Str("(", 1),jule::Str(")", 1),_79342_tokens);
	if (_85517_params_toks.len() > 0LL) {
		_79417_f->_field_params=this->self->_method_build_params(_85517_params_toks,_79372_method,false);
	}
	std::tie(_79417_f->_field_result,std::ignore) = this->self->_method_build_ret_type(_79342_tokens,_79364_i);
	return _79417_f;
}



inline jule::Ref<_118d9a790_FnDecl> _11953bd10_Parser::_method_build_fn(jule::Slice<_11911a8a0_Token> _86432_tokens,jule::Bool _86449_method,jule::Bool _86463_anon,jule::Bool _86475_prototype) {
	jule::Int _86517_i = 0LL;
	jule::Ref<_118d9a790_FnDecl> _86617_f = this->self->_method_build_fn_prototype(_86432_tokens,_86517_i,_86449_method,_86463_anon);
	if (_86475_prototype) {
		if (_86517_i < _86432_tokens.len()) {
			this->self->_method_push_err(_86432_tokens[static_cast<jule::Int>(_86517_i + 1LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		}
		return _86617_f;
	} else if ((!(jule::real(_86617_f)))) {
		return _86617_f;
	}
	if (_86517_i >= _86432_tokens.len()) {
		this->self->_method_stop();
		this->self->_method_push_err(_86617_f->_field_token,jule::Str("body_not_exist", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_118d9a790_FnDecl>();
	}
	jule::Slice<_11911a8a0_Token> _88117_block_tokens = _11953bd10_range(_86517_i,jule::Str("{", 1),jule::Str("}", 1),_86432_tokens);
	if (_88117_block_tokens != nullptr) {
		_86617_f->_field_scope=this->self->_method_build_scope(_88117_block_tokens);
		_86617_f->_field_scope->_field_unsafety=_86617_f->_field_unsafety;
		if (_86517_i < _86432_tokens.len()) {
			this->self->_method_push_err(_86432_tokens[static_cast<jule::Int>(_86517_i)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		}
	} else {
		this->self->_method_stop();
		this->self->_method_push_err(_86617_f->_field_token,jule::Str("body_not_exist", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_118d9a790_FnDecl>();
	}
	return _86617_f;
}



inline jule::Slice<_11911a8a0_Token> _11953bd10_Parser::_method_get_use_decl_selectors(jule::Slice<_11911a8a0_Token> _89645_tokens) {
	jule::Int _89717_i = 0LL;
	_89645_tokens=_11953bd10_range(_89717_i,jule::Str("{", 1),jule::Str("}", 1),_89645_tokens);
	jule::Slice<jule::Slice<_11911a8a0_Token>> _89918_parts;
	jule::Slice<_13fe81720_Log> _89925_errs;
	std::tie(_89918_parts,_89925_errs) = _11953bd10_parts(_89645_tokens,8LLU,true);
	if (_89925_errs.len() > 0LL) {
		(*this)._field_errors=append((*this)._field_errors,_89925_errs);
		return nullptr;
	}
	jule::Slice<_11911a8a0_Token> _90517_selectors = jule::Slice<_11911a8a0_Token>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_89918_parts.len())));
	{
		auto &__julec_range_expr = _89918_parts;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _11953bd10_i = 0;
			jule::Slice<_11911a8a0_Token> _11953bd10_part = *__julec_range_begin;
			_iter_begin_4758724144:;
			{
				if (_11953bd10_part.len() > 1LL) {
					(*this)._method_push_err(_11953bd10_part[static_cast<jule::Int>(1LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
				}
				_11911a8a0_Token _91021_tok = _11953bd10_part[static_cast<jule::Int>(0LL)];
				if ((_91021_tok._field_id != 2LLU) && (_91021_tok._field_id != 28LLU)) {
					(*this)._method_push_err(_91021_tok,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
					goto _iter_next_4758724144;
				}
				_90517_selectors[static_cast<jule::Int>(_11953bd10_i)]=_91021_tok;
			}
			_iter_next_4758724144:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_11953bd10_i; _11953bd10_part = *__julec_range_begin; goto _iter_begin_4758724144; }
			_iter_end_4758724144:;
		}
	}
	return _90517_selectors;
}



inline void _11953bd10_Parser::_method_build_cpp_use_decl(jule::Ref<_118d9a790_UseDecl> _92041_decl,jule::Slice<_11911a8a0_Token> _92057_tokens) {
	if (_92057_tokens.len() > 2LL) {
		(*this)._method_push_err(_92057_tokens[static_cast<jule::Int>(2LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
	}
	_11911a8a0_Token _92413_token = _92057_tokens[static_cast<jule::Int>(1LL)];
	if ((_92413_token._field_id != 6LLU) || ((_92413_token._field_kind[static_cast<jule::Int>(0LL)] != '`') && (_92413_token._field_kind[static_cast<jule::Int>(0LL)] != '\"'))) {
		(*this)._method_push_err(_92413_token,jule::Str("invalid_expr", 12),jule::Slice<jule::Any>({}));
		return;
	}
	_92041_decl->_field_cpp_linked=true;
	_92041_decl->_field_link_path=_92413_token._field_kind.slice(static_cast<jule::Int>(1LL),static_cast<jule::Int>(_92413_token._field_kind.len() - 1LL));
	if ((!(_13fe20550_is_std_header_path(_92041_decl->_field_link_path)))) {
		_92041_decl->_field_link_path=_1410391e0_join(jule::Slice<jule::Str>({_92413_token._field_file->_method_dir(),_92041_decl->_field_link_path}));
	}
}



inline void _11953bd10_Parser::_method_build_std_use_decl(jule::Ref<_118d9a790_UseDecl> _93641_decl,jule::Slice<_11911a8a0_Token> _93661_tokens) {
	_93641_decl->_field_std=true;
	_11911a8a0_Token _93917_token = _93661_tokens[static_cast<jule::Int>(0LL)];
	if (_93661_tokens.len() < 3LL) {
		(*this)._method_push_err(_93917_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return;
	}
	_93661_tokens=_93661_tokens.slice(static_cast<jule::Int>(2LL));
	_93917_token=_93661_tokens[static_cast<jule::Int>(_93661_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _93917_token._field_id };
		if (!((23LLU) == _match_expr)) { goto _case_end_4758770992; }
		_case_begin_4758770992:;
		{
			(*this)._method_push_err(_93917_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4758762288;
		_case_end_4758770992:;
		if (!((3LLU) == _match_expr)) { goto _case_end_4758771104; }
		_case_begin_4758771104:;
		{
			if (_93917_token._field_kind != jule::Str("}", 1)) {
				(*this)._method_push_err(_93917_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			jule::Slice<_11911a8a0_Token> _95721_selectors = nullptr;
			std::tie(_93661_tokens,_95721_selectors) = _11953bd10_range_last(_93661_tokens);
			_93641_decl->_field_selected=(*this)._method_get_use_decl_selectors(_95721_selectors);
			if (_93661_tokens.len() == 0LL) {
				(*this)._method_push_err(_93917_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_93917_token=_93661_tokens[static_cast<jule::Int>(_93661_tokens.len() - 1LL)];
			if (_93917_token._field_id != 23LLU) {
				(*this)._method_push_err(_93917_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_93661_tokens=_93661_tokens.slice(0LL,static_cast<jule::Int>(_93661_tokens.len() - 1LL));
			if (_93661_tokens.len() == 0LL) {
				(*this)._method_push_err(_93917_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
		}
		goto _match_end_4758762288;
		_case_end_4758771104:;
		if (!((7LLU) == _match_expr)) { goto _case_end_4758771216; }
		_case_begin_4758771216:;
		{
			if (_93917_token._field_kind != jule::Str("*", 1)) {
				(*this)._method_push_err(_93917_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_93661_tokens=_93661_tokens.slice(0LL,static_cast<jule::Int>(_93661_tokens.len() - 1LL));
			if (_93661_tokens.len() == 0LL) {
				(*this)._method_push_err(_93917_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_93917_token=_93661_tokens[static_cast<jule::Int>(_93661_tokens.len() - 1LL)];
			if (_93917_token._field_id != 23LLU) {
				(*this)._method_push_err(_93917_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_93661_tokens=_93661_tokens.slice(0LL,static_cast<jule::Int>(_93661_tokens.len() - 1LL));
			if (_93661_tokens.len() == 0LL) {
				(*this)._method_push_err(_93917_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_93641_decl->_field_full=true;
		}
		goto _match_end_4758762288;
		_case_end_4758771216:;
		_match_end_4758762288:;
	}
	_93641_decl->_field_link_path=jule::Str("std::", 5) + _11953bd10_tokstoa(_93661_tokens);
}



inline void _11953bd10_Parser::_method_build_ident_use_decl(jule::Ref<_118d9a790_UseDecl> _100043_decl,jule::Slice<_11911a8a0_Token> _100063_tokens) {
	_100043_decl->_field_std=false;
	_11911a8a0_Token _100317_token = _100063_tokens[static_cast<jule::Int>(_100063_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _100317_token._field_id };
		if (!((23LLU) == _match_expr)) { goto _case_end_4758816608; }
		_case_begin_4758816608:;
		{
			(*this)._method_push_err(_100317_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4758814672;
		_case_end_4758816608:;
		if (!((3LLU) == _match_expr)) { goto _case_end_4758816720; }
		_case_begin_4758816720:;
		{
			if (_100317_token._field_kind != jule::Str("}", 1)) {
				(*this)._method_push_err(_100317_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			jule::Slice<_11911a8a0_Token> _101521_selectors = nullptr;
			std::tie(_100063_tokens,_101521_selectors) = _11953bd10_range_last(_100063_tokens);
			_100043_decl->_field_selected=(*this)._method_get_use_decl_selectors(_101521_selectors);
			if (_100063_tokens.len() == 0LL) {
				(*this)._method_push_err(_100317_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_100317_token=_100063_tokens[static_cast<jule::Int>(_100063_tokens.len() - 1LL)];
			if (_100317_token._field_id != 23LLU) {
				(*this)._method_push_err(_100317_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_100063_tokens=_100063_tokens.slice(0LL,static_cast<jule::Int>(_100063_tokens.len() - 1LL));
			if (_100063_tokens.len() == 0LL) {
				(*this)._method_push_err(_100317_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
		}
		goto _match_end_4758814672;
		_case_end_4758816720:;
		if (!((7LLU) == _match_expr)) { goto _case_end_4758816832; }
		_case_begin_4758816832:;
		{
			if (_100317_token._field_kind != jule::Str("*", 1)) {
				(*this)._method_push_err(_100317_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_100063_tokens=_100063_tokens.slice(0LL,static_cast<jule::Int>(_100063_tokens.len() - 1LL));
			if (_100063_tokens.len() == 0LL) {
				(*this)._method_push_err(_100317_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_100317_token=_100063_tokens[static_cast<jule::Int>(_100063_tokens.len() - 1LL)];
			if (_100317_token._field_id != 23LLU) {
				(*this)._method_push_err(_100317_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_100063_tokens=_100063_tokens.slice(0LL,static_cast<jule::Int>(_100063_tokens.len() - 1LL));
			if (_100063_tokens.len() == 0LL) {
				(*this)._method_push_err(_100317_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_100043_decl->_field_full=true;
		}
		goto _match_end_4758814672;
		_case_end_4758816832:;
		_match_end_4758814672:;
	}
	_100043_decl->_field_link_path=_11953bd10_tokstoa(_100063_tokens);
}



inline void _11953bd10_Parser::_method_parse_use_decl(jule::Ref<_118d9a790_UseDecl> _106537_decl,jule::Slice<_11911a8a0_Token> _106557_tokens) {
	_11911a8a0_Token _106613_token = _106557_tokens[static_cast<jule::Int>(0LL)];
	if (_106613_token._field_id == 31LLU) {
		(*this)._method_build_cpp_use_decl(_106537_decl,_106557_tokens);
		return;
	}
	if (_106613_token._field_id != 2LLU) {
		(*this)._method_push_err(_106613_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return;
	}
	
	{
		if (!((_106613_token._field_kind == jule::Str("std", 3)))) { goto _case_end_4758868288; }
		_case_begin_4758868288:;
		{
			(*this)._method_build_std_use_decl(_106537_decl,_106557_tokens);
		}
		goto _match_end_4758866784;
		_case_end_4758868288:;
		_case_begin_4758866944:;
		{
			(*this)._method_build_ident_use_decl(_106537_decl,_106557_tokens);
		}
		goto _match_end_4758866784;
		_case_end_4758866944:;
		_match_end_4758866784:;
	}
}



inline jule::Ref<_118d9a790_UseDecl> _11953bd10_Parser::_method_build_use_decl(jule::Slice<_11911a8a0_Token> _108837_tokens) {
	jule::Ref<_118d9a790_UseDecl> _108917_decl = jule::new_struct<_118d9a790_UseDecl>(new( std::nothrow ) _118d9a790_UseDecl(_108837_tokens[static_cast<jule::Int>(0LL)],jule::Str(),jule::Bool(),jule::Slice<_11911a8a0_Token>(),jule::Bool(),jule::Bool()));
	if (_108837_tokens.len() < 2LL) {
		(*this)._method_push_err(_108917_decl->_field_token,jule::Str("missing_use_path", 16),jule::Slice<jule::Any>({}));
		return jule::new_ref<_118d9a790_UseDecl>();
	}
	_108837_tokens=_108837_tokens.slice(static_cast<jule::Int>(1LL));
	(*this)._method_parse_use_decl(_108917_decl,_108837_tokens);
	return _108917_decl;
}



inline jule::Ref<_118d9a790_Expr> _11953bd10_Parser::_method_build_enum_item_expr(jule::Ref<jule::Int> _110144_i,jule::Slice<_11911a8a0_Token> _110157_tokens) {
	jule::Int _110217_brace_n = 0LL;
	jule::Int _110313_expr_start = _110144_i;
	_iter_begin_4758887056:;
	if (!(_110144_i < _110157_tokens.len())) { goto _iter_end_4758887056; }
	{
		_11911a8a0_Token _110517_t = _110157_tokens[static_cast<jule::Int>(_110144_i)];
		if (_110517_t._field_id == 3LLU) {
			{
				auto &_match_expr{ _110517_t._field_kind };
				if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4758892896; }
				_case_begin_4758892896:;
				{
					(_110217_brace_n)++;
					goto _iter_next_4758887056;
				}
				goto _match_end_4758890864;
				_case_end_4758892896:;
				_case_begin_4758891776:;
				{
					(_110217_brace_n)--;
				}
				goto _match_end_4758890864;
				_case_end_4758891776:;
				_match_end_4758890864:;
			}
		}
		if (_110217_brace_n > 0LL) {
			goto _iter_next_4758887056;
		}
		if ((_110517_t._field_id == 8LLU) || ((_110144_i + 1LL) >= _110157_tokens.len())) {
			jule::Slice<_11911a8a0_Token> _112425_expr_tokens = nullptr;
			if (_110517_t._field_id == 8LLU) {
				_112425_expr_tokens=_110157_tokens.slice(static_cast<jule::Int>(_110313_expr_start),static_cast<jule::Int>(_110144_i));
			} else {
				_112425_expr_tokens=_110157_tokens.slice(static_cast<jule::Int>(_110313_expr_start));
			}
			return this->self->_method_build_expr(_112425_expr_tokens);
		}
	}
	_iter_next_4758887056:;
	(_110144_i)++;
	goto _iter_begin_4758887056;
	_iter_end_4758887056:;
	return jule::new_ref<_118d9a790_Expr>();
}



inline jule::Slice<jule::Ref<_118d9a790_EnumItemDecl>> _11953bd10_Parser::_method_build_enum_items(jule::Slice<_11911a8a0_Token> _113640_tokens) {
	jule::Slice<jule::Ref<_118d9a790_EnumItemDecl>> _113717_items = jule::Slice<jule::Ref<_118d9a790_EnumItemDecl>>::alloc(static_cast<jule::Int>(0LL));
	jule::Ref<jule::Int> _113817_i = jule::new_ref<jule::Int>(0LL);
	_iter_begin_4758910256:;
	if (!(_113817_i < _113640_tokens.len())) { goto _iter_end_4758910256; }
	{
		_11911a8a0_Token _114021_t = _113640_tokens[static_cast<jule::Int>(_113817_i)];
		if (_114021_t._field_id == 18LLU) {
			goto _iter_next_4758910256;
		}
		jule::Ref<_118d9a790_EnumItemDecl> _114521_item = jule::new_struct<_118d9a790_EnumItemDecl>(new( std::nothrow ) _118d9a790_EnumItemDecl());
		_114521_item->_field_token=_114021_t;
		if (_114521_item->_field_token._field_id != 2LLU) {
			this->self->_method_push_err(_114521_item->_field_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		}
		_114521_item->_field_ident=_114521_item->_field_token._field_kind;
		if (((_113817_i + 1LL) >= _113640_tokens.len()) || (_113640_tokens[static_cast<jule::Int>(_113817_i + 1LL)]._field_id == 8LLU)) {
			if ((_113817_i + 1LL) < _113640_tokens.len()) {
				(_113817_i)++;
			}
			_113717_items=append(_113717_items,jule::Slice<jule::Ref<_118d9a790_EnumItemDecl>>({_114521_item}));
			goto _iter_next_4758910256;
		}
		(_113817_i)++;
		_114021_t=_113640_tokens[static_cast<jule::Int>(_113817_i)];
		if ((_114021_t._field_id != 7LLU) && (_114021_t._field_kind != jule::Str("=", 1))) {
			this->self->_method_push_err(_113640_tokens[static_cast<jule::Int>(0LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		}
		(_113817_i)++;
		if ((_113817_i >= _113640_tokens.len()) || (_113640_tokens[static_cast<jule::Int>(_113817_i)]._field_id == 8LLU)) {
			this->self->_method_push_err(_113640_tokens[static_cast<jule::Int>(0LL)],jule::Str("missing_expr", 12),jule::Slice<jule::Any>({}));
			goto _iter_next_4758910256;
		}
		_114521_item->_field_expr=this->self->_method_build_enum_item_expr(_113817_i,_113640_tokens);
		_113717_items=append(_113717_items,jule::Slice<jule::Ref<_118d9a790_EnumItemDecl>>({_114521_item}));
	}
	_iter_next_4758910256:;
	(_113817_i)++;
	goto _iter_begin_4758910256;
	_iter_end_4758910256:;
	return _113717_items;
}



inline jule::Ref<_118d9a790_EnumDecl> _11953bd10_Parser::_method_build_enum_decl(jule::Slice<_11911a8a0_Token> _117439_tokens) {
	if ((_117439_tokens.len() < 2LL) || (_117439_tokens.len() < 3LL)) {
		this->self->_method_push_err(_117439_tokens[static_cast<jule::Int>(0LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_118d9a790_EnumDecl>();
	}
	jule::Ref<_118d9a790_EnumDecl> _117917_e = jule::new_struct<_118d9a790_EnumDecl>(new( std::nothrow ) _118d9a790_EnumDecl(_117439_tokens[static_cast<jule::Int>(1LL)],jule::Bool(),jule::Str(),jule::Ref<_118d9a790_TypeDecl>(),jule::Slice<jule::Ref<_118d9a790_EnumItemDecl>>(),jule::Ref<_118d9a790_CommentGroup>()));
	if (_117917_e->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_117917_e->_field_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
	}
	_117917_e->_field_ident=_117917_e->_field_token._field_kind;
	jule::Int _118617_i = 2LL;
	if (_117439_tokens[static_cast<jule::Int>(_118617_i)]._field_id == 11LLU) {
		(_118617_i)++;
		if (_118617_i >= _117439_tokens.len()) {
			this->self->_method_push_err(_117439_tokens[static_cast<jule::Int>(_118617_i - 1LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return _117917_e;
		}
		std::tie(_117917_e->_field_kind,std::ignore) = this->self->_method_build_type(_117439_tokens,(&(_118617_i)),true);
		if (_118617_i >= _117439_tokens.len()) {
			this->self->_method_stop();
			this->self->_method_push_err(_117917_e->_field_token,jule::Str("body_not_exist", 14),jule::Slice<jule::Any>({}));
			return _117917_e;
		}
	} else {
		jule::drop(_117917_e->_field_kind);
	}
	jule::Slice<_11911a8a0_Token> _120217_item_tokens = _11953bd10_range(_118617_i,jule::Str("{", 1),jule::Str("}", 1),_117439_tokens);
	if (_120217_item_tokens == nullptr) {
		this->self->_method_stop();
		this->self->_method_push_err(_117917_e->_field_token,jule::Str("body_not_exist", 14),jule::Slice<jule::Any>({}));
		return _117917_e;
	} else if (_118617_i < _117439_tokens.len()) {
		this->self->_method_push_err(_117439_tokens[static_cast<jule::Int>(_118617_i)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
	}
	_117917_e->_field_items=this->self->_method_build_enum_items(_120217_item_tokens);
	return _117917_e;
}



inline jule::Ref<_118d9a790_FieldDecl> _11953bd10_Parser::_method_build_field(jule::Slice<_11911a8a0_Token> _121435_tokens) {
	jule::Ref<_118d9a790_FieldDecl> _121517_f = jule::new_struct<_118d9a790_FieldDecl>(new( std::nothrow ) _118d9a790_FieldDecl());
	_121517_f->_field_public=_121435_tokens[static_cast<jule::Int>(0LL)]._field_id == 21LLU;
	if (_121517_f->_field_public) {
		if (_121435_tokens.len() == 1LL) {
			this->self->_method_push_err(_121435_tokens[static_cast<jule::Int>(0LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_118d9a790_FieldDecl>();
		}
		_121435_tokens=_121435_tokens.slice(static_cast<jule::Int>(1LL));
	}
	_121517_f->_field_mutable=_121435_tokens[static_cast<jule::Int>(0LL)]._field_id == 36LLU;
	if (_121517_f->_field_mutable) {
		if (_121435_tokens.len() == 1LL) {
			this->self->_method_push_err(_121435_tokens[static_cast<jule::Int>(0LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_118d9a790_FieldDecl>();
		}
		_121435_tokens=_121435_tokens.slice(static_cast<jule::Int>(1LL));
	}
	_121517_f->_field_token=_121435_tokens[static_cast<jule::Int>(0LL)];
	if (_121517_f->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_121517_f->_field_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_118d9a790_FieldDecl>();
	}
	_121517_f->_field_ident=_121517_f->_field_token._field_kind;
	if (_121435_tokens.len() == 1LL) {
		this->self->_method_push_err(_121435_tokens[static_cast<jule::Int>(0LL)],jule::Str("missing_type", 12),jule::Slice<jule::Any>({}));
		return jule::new_ref<_118d9a790_FieldDecl>();
	} else if (_121435_tokens[static_cast<jule::Int>(1LL)]._field_id != 11LLU) {
		this->self->_method_push_err(_121435_tokens[static_cast<jule::Int>(1LL)],jule::Str("missing_type", 12),jule::Slice<jule::Any>({}));
		return jule::new_ref<_118d9a790_FieldDecl>();
	}
	_121435_tokens=_121435_tokens.slice(static_cast<jule::Int>(2LL));
	jule::Int _125117_i = 0LL;
	std::tie(_121517_f->_field_kind,std::ignore) = this->self->_method_build_type(_121435_tokens,(&(_125117_i)),true);
	if (_125117_i < _121435_tokens.len()) {
		this->self->_method_push_err(_121435_tokens[static_cast<jule::Int>(_125117_i)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_118d9a790_FieldDecl>();
	}
	return _121517_f;
}



inline jule::Slice<jule::Ref<_118d9a790_FieldDecl>> _11953bd10_Parser::_method_build_struct_decl_fields(jule::Slice<_11911a8a0_Token> _126148_tokens) {
	jule::Slice<jule::Ref<_118d9a790_FieldDecl>> _126217_fields = nullptr;
	jule::Slice<jule::Ref<_11912dd80_Stmt>> _126317_stms = _11912dd80_split_stms(_126148_tokens);
	{
		auto &__julec_range_expr = _126317_stms;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11912dd80_Stmt> _11953bd10_st = *__julec_range_begin;
			_iter_begin_4759026784:;
			{
				jule::Slice<_11911a8a0_Token> _126521_tokens = _11953bd10_st->_field_tokens;
				if (_126521_tokens[static_cast<jule::Int>(0LL)]._field_id == 18LLU) {
					goto _iter_next_4759026784;
				}
				jule::Ref<_118d9a790_FieldDecl> _126921_f = this->self->_method_build_field(_126521_tokens);
				_126217_fields=append(_126217_fields,jule::Slice<jule::Ref<_118d9a790_FieldDecl>>({_126921_f}));
			}
			_iter_next_4759026784:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11953bd10_st = *__julec_range_begin; goto _iter_begin_4759026784; }
			_iter_end_4759026784:;
		}
	}
	return _126217_fields;
}



inline jule::Ref<_118d9a790_StructDecl> _11953bd10_Parser::_method_build_struct_decl(jule::Slice<_11911a8a0_Token> _127541_tokens) {
	if (_127541_tokens.len() < 3LL) {
		this->self->_method_push_err(_127541_tokens[static_cast<jule::Int>(0LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_118d9a790_StructDecl>();
	}
	jule::Int _128117_i = 1LL;
	jule::Ref<_118d9a790_StructDecl> _128217_s = jule::new_struct<_118d9a790_StructDecl>(new( std::nothrow ) _118d9a790_StructDecl(_127541_tokens[static_cast<jule::Int>(_128117_i)],jule::Str(),jule::Slice<jule::Ref<_118d9a790_FieldDecl>>(),jule::Bool(),jule::Bool(),jule::Slice<jule::Ref<_118d9a790_Directive>>(),jule::Ref<_118d9a790_CommentGroup>(),jule::Slice<jule::Ref<_118d9a790_GenericDecl>>()));
	if (_128217_s->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_128217_s->_field_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
	}
	(_128117_i)++;
	if (_128117_i >= _127541_tokens.len()) {
		this->self->_method_push_err(_127541_tokens[static_cast<jule::Int>(_128117_i)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return _128217_s;
	}
	_128217_s->_field_ident=_128217_s->_field_token._field_kind;
	_11911a8a0_Token _129513_error_token = _127541_tokens[static_cast<jule::Int>(_128117_i)];
	jule::Slice<_11911a8a0_Token> _129617_generics_tokens = _11953bd10_range(_128117_i,jule::Str("[", 1),jule::Str("]", 1),_127541_tokens);
	if (_129617_generics_tokens != nullptr) {
		_128217_s->_field_generics=this->self->_method_build_generics(_129617_generics_tokens,_129513_error_token);
	}
	if (_128117_i >= _127541_tokens.len()) {
		this->self->_method_push_err(_127541_tokens[static_cast<jule::Int>(_128117_i)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return _128217_s;
	}
	jule::Slice<_11911a8a0_Token> _130517_body_tokens = _11953bd10_range(_128117_i,jule::Str("{", 1),jule::Str("}", 1),_127541_tokens);
	if (_130517_body_tokens == nullptr) {
		this->self->_method_stop();
		this->self->_method_push_err(_128217_s->_field_token,jule::Str("body_not_exist", 14),jule::Slice<jule::Any>({}));
		return _128217_s;
	}
	if (_128117_i < _127541_tokens.len()) {
		this->self->_method_push_err(_127541_tokens[static_cast<jule::Int>(_128117_i)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
	}
	_128217_s->_field_fields=this->self->_method_build_struct_decl_fields(_130517_body_tokens);
	return _128217_s;
}



inline void _11953bd10_Parser::_method_check_method_receiver(jule::Ref<_118d9a790_FnDecl> _131840_f) {
	if (_131840_f->_field_statically) {
		if ((_131840_f->_field_params.len() > 0LL) && _131840_f->_field_params[static_cast<jule::Int>(0LL)]->_method_is_self()) {
			(*this)._method_push_err(_131840_f->_field_token,jule::Str("static_function_has_receiver", 28),jule::Slice<jule::Any>({}));
		}
		return;
	}
	if (_131840_f->_field_params.len() == 0LL) {
		(*this)._method_push_err(_131840_f->_field_token,jule::Str("missing_receiver", 16),jule::Slice<jule::Any>({}));
		return;
	}
	jule::Ref<_118d9a790_ParamDecl> _133113_param = _131840_f->_field_params[static_cast<jule::Int>(0LL)];
	if ((!(_133113_param->_method_is_self()))) {
		(*this)._method_push_err(_131840_f->_field_token,jule::Str("missing_receiver", 16),jule::Slice<jule::Any>({}));
		return;
	}
}



inline jule::Slice<jule::Ref<_118d9a790_FnDecl>> _11953bd10_Parser::_method_build_trait_methods(jule::Slice<_11911a8a0_Token> _133843_tokens) {
	jule::Slice<jule::Ref<_118d9a790_FnDecl>> _133917_methods = nullptr;
	jule::Slice<jule::Ref<_11912dd80_Stmt>> _134017_stms = _11912dd80_split_stms(_133843_tokens);
	{
		auto &__julec_range_expr = _134017_stms;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11912dd80_Stmt> _11953bd10_st = *__julec_range_begin;
			_iter_begin_4759095088:;
			{
				jule::Slice<_11911a8a0_Token> _134221_tokens = _11943fdb0_eliminate_comments(_11953bd10_st->_field_tokens);
				if (_134221_tokens.len() == 0LL) {
					goto _iter_next_4759095088;
				}
				jule::Ref<_118d9a790_FnDecl> _134721_f = this->self->_method_build_fn(_134221_tokens,true,false,true);
				if (jule::real(_134721_f)) {
					this->self->_method_check_method_receiver(_134721_f);
					if (_134721_f->_field_generics.len() > 0LL) {
						this->self->_method_push_err(_134721_f->_field_token,jule::Str("trait_method_has_generics", 25),jule::Slice<jule::Any>({}));
					}
					_134721_f->_field_public=true;
					_133917_methods=append(_133917_methods,jule::Slice<jule::Ref<_118d9a790_FnDecl>>({_134721_f}));
				}
			}
			_iter_next_4759095088:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11953bd10_st = *__julec_range_begin; goto _iter_begin_4759095088; }
			_iter_end_4759095088:;
		}
	}
	return _133917_methods;
}



inline jule::Ref<_118d9a790_TraitDecl> _11953bd10_Parser::_method_build_trait_decl(jule::Slice<_11911a8a0_Token> _136040_tokens) {
	if (_136040_tokens.len() < 3LL) {
		this->self->_method_push_err(_136040_tokens[static_cast<jule::Int>(0LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_118d9a790_TraitDecl>();
	}
	jule::Ref<_118d9a790_TraitDecl> _136517_t = jule::new_struct<_118d9a790_TraitDecl>(new( std::nothrow ) _118d9a790_TraitDecl(_136040_tokens[static_cast<jule::Int>(1LL)],jule::Str(),jule::Bool(),jule::Ref<_118d9a790_CommentGroup>(),jule::Slice<jule::Ref<_118d9a790_FnDecl>>()));
	if (_136517_t->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_136517_t->_field_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
	}
	_136517_t->_field_ident=_136517_t->_field_token._field_kind;
	jule::Int _137217_i = 2LL;
	jule::Slice<_11911a8a0_Token> _137317_body_tokens = _11953bd10_range(_137217_i,jule::Str("{", 1),jule::Str("}", 1),_136040_tokens);
	if (_137317_body_tokens == nullptr) {
		this->self->_method_stop();
		this->self->_method_push_err(_136517_t->_field_token,jule::Str("body_not_exist", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_118d9a790_TraitDecl>();
	}
	if (_137217_i < _136040_tokens.len()) {
		this->self->_method_push_err(_136040_tokens[static_cast<jule::Int>(_137217_i)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
	}
	_136517_t->_field_methods=this->self->_method_build_trait_methods(_137317_body_tokens);
	return _136517_t;
}



inline jule::Ref<_118d9a790_FnDecl> _11953bd10_Parser::_method_build_cpp_link_fn(jule::Slice<_11911a8a0_Token> _138641_tokens) {
	_138641_tokens=_138641_tokens.slice(static_cast<jule::Int>(1LL));
	jule::Ref<_118d9a790_FnDecl> _138817_f = this->self->_method_build_fn(_138641_tokens,false,false,true);
	if (jule::real(_138817_f)) {
		_138817_f->_field_cpp_linked=true;
	}
	return _138817_f;
}



inline jule::Ref<_118d9a790_VarDecl> _11953bd10_Parser::_method_build_cpp_link_var(jule::Slice<_11911a8a0_Token> _139542_tokens) {
	_139542_tokens=_139542_tokens.slice(static_cast<jule::Int>(1LL));
	jule::Ref<_118d9a790_VarDecl> _139717_v = this->self->_method_build_var(_139542_tokens);
	if (jule::real(_139717_v)) {
		_139717_v->_field_cpp_linked=true;
		if (jule::real(_139717_v->_field_expr)) {
			this->self->_method_push_err(_139717_v->_field_token,jule::Str("cpp_linked_variable_has_expr", 28),jule::Slice<jule::Any>({}));
		}
	}
	return _139717_v;
}



inline jule::Ref<_118d9a790_StructDecl> _11953bd10_Parser::_method_build_cpp_link_struct(jule::Slice<_11911a8a0_Token> _140745_tokens) {
	_140745_tokens=_140745_tokens.slice(static_cast<jule::Int>(1LL));
	jule::Ref<_118d9a790_StructDecl> _140917_s = this->self->_method_build_struct_decl(_140745_tokens);
	if (jule::real(_140917_s)) {
		_140917_s->_field_cpp_linked=true;
	}
	return _140917_s;
}



inline jule::Ref<_118d9a790_TypeAliasDecl> _11953bd10_Parser::_method_build_cpp_link_type_alias(jule::Slice<_11911a8a0_Token> _141649_tokens) {
	_141649_tokens=_141649_tokens.slice(static_cast<jule::Int>(1LL));
	jule::Ref<_118d9a790_TypeAliasDecl> _141817_t = this->self->_method_build_type_alias_decl(_141649_tokens);
	if (jule::real(_141817_t)) {
		_141817_t->_field_cpp_linked=true;
	}
	return _141817_t;
}



inline jule::Any _11953bd10_Parser::_method_build_cpp_link(jule::Slice<_11911a8a0_Token> _142538_tokens) {
	_11911a8a0_Token _142617_token = _142538_tokens[static_cast<jule::Int>(0LL)];
	if (_142538_tokens.len() == 1LL) {
		this->self->_method_push_err(_142617_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::Any(nullptr);
	}
	_142617_token=_142538_tokens[static_cast<jule::Int>(1LL)];
	{
		auto &_match_expr{ _142617_token._field_id };
		if (!((33LLU) == _match_expr || (35LLU) == _match_expr)) { goto _case_end_4759175120; }
		_case_begin_4759175120:;
		{
			return jule::Any(this->self->_method_build_cpp_link_fn(_142538_tokens));
		}
		goto _match_end_4759172640;
		_case_end_4759175120:;
		if (!((9LLU) == _match_expr || (34LLU) == _match_expr)) { goto _case_end_4759174368; }
		_case_begin_4759174368:;
		{
			return jule::Any(this->self->_method_build_cpp_link_var(_142538_tokens));
		}
		goto _match_end_4759172640;
		_case_end_4759174368:;
		if (!((25LLU) == _match_expr)) { goto _case_end_4759174480; }
		_case_begin_4759174480:;
		{
			return jule::Any(this->self->_method_build_cpp_link_struct(_142538_tokens));
		}
		goto _match_end_4759172640;
		_case_end_4759174480:;
		if (!((10LLU) == _match_expr)) { goto _case_end_4759174592; }
		_case_begin_4759174592:;
		{
			return jule::Any(this->self->_method_build_cpp_link_type_alias(_142538_tokens));
		}
		goto _match_end_4759172640;
		_case_end_4759174592:;
		_case_begin_4759173840:;
		{
			this->self->_method_push_err(_142617_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4759172640;
		_case_end_4759173840:;
		_match_end_4759172640:;
	}
	return jule::Any(nullptr);
}



inline jule::Ref<_118d9a790_FnDecl> _11953bd10_Parser::_method_get_method(jule::Slice<_11911a8a0_Token> _145334_tokens) {
	jule::Int _145417_i = 0LL;
	_11911a8a0_Token _145517_token = _145334_tokens[static_cast<jule::Int>(_145417_i)];
	if (_145517_token._field_id == 38LLU) {
		if ((_145417_i + 1LL) >= _145334_tokens.len()) {
			this->self->_method_push_err(_145517_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_118d9a790_FnDecl>();
		}
		(_145417_i)++;
		_145517_token=_145334_tokens[static_cast<jule::Int>(_145417_i)];
	}
	if (_145517_token._field_id == 35LLU) {
		if ((_145417_i + 1LL) >= _145334_tokens.len()) {
			this->self->_method_push_err(_145517_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_118d9a790_FnDecl>();
		}
		(_145417_i)++;
		_145517_token=_145334_tokens[static_cast<jule::Int>(_145417_i)];
	}
	if (_145517_token._field_id != 33LLU) {
		this->self->_method_push_err(_145517_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_118d9a790_FnDecl>();
	}
	return this->self->_method_build_fn(_145334_tokens,true,false,false);
}



inline void _11953bd10_Parser::_method_parse_impl_trait(jule::Ref<_118d9a790_Impl> _148240_ipl,jule::Slice<_11911a8a0_Token> _148256_tokens) {
	jule::Slice<jule::Ref<_11912dd80_Stmt>> _148317_stms = _11912dd80_split_stms(_148256_tokens);
	{
		auto &__julec_range_expr = _148317_stms;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11912dd80_Stmt> _11953bd10_st = *__julec_range_begin;
			_iter_begin_4759208512:;
			{
				jule::Slice<_11911a8a0_Token> _148521_tokens = _11953bd10_st->_field_tokens;
				_11911a8a0_Token _148617_token = _148521_tokens[static_cast<jule::Int>(0LL)];
				{
					auto &_match_expr{ _148617_token._field_id };
					if (!((18LLU) == _match_expr)) { goto _case_end_4759215168; }
					_case_begin_4759215168:;
					{
						goto _iter_next_4759208512;
					}
					goto _match_end_4759211536;
					_case_end_4759215168:;
					if (!((38LLU) == _match_expr || (33LLU) == _match_expr || (35LLU) == _match_expr)) { goto _case_end_4759214064; }
					_case_begin_4759214064:;
					{
						jule::Ref<_118d9a790_FnDecl> _149525_f = this->self->_method_get_method(_148521_tokens);
						if (jule::real(_149525_f)) {
							_149525_f->_field_public=true;
							this->self->_method_check_method_receiver(_149525_f);
							_148240_ipl->_field_methods=append(_148240_ipl->_field_methods,jule::Slice<jule::Ref<_118d9a790_FnDecl>>({_149525_f}));
						}
					}
					goto _match_end_4759211536;
					_case_end_4759214064:;
					_case_begin_4759213760:;
					{
						this->self->_method_push_err(_148617_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
						goto _iter_next_4759208512;
					}
					goto _match_end_4759211536;
					_case_end_4759213760:;
					_match_end_4759211536:;
				}
			}
			_iter_next_4759208512:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11953bd10_st = *__julec_range_begin; goto _iter_begin_4759208512; }
			_iter_end_4759208512:;
		}
	}
}



inline void _11953bd10_Parser::_method_parse_impl_struct(jule::Ref<_118d9a790_Impl> _150941_ipl,jule::Slice<_11911a8a0_Token> _150957_tokens) {
	jule::Slice<jule::Ref<_11912dd80_Stmt>> _151017_stms = _11912dd80_split_stms(_150957_tokens);
	{
		auto &__julec_range_expr = _151017_stms;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11912dd80_Stmt> _11953bd10_st = *__julec_range_begin;
			_iter_begin_4759229536:;
			{
				jule::Slice<_11911a8a0_Token> _151221_tokens = _11953bd10_st->_field_tokens;
				_11911a8a0_Token _151321_token = _151221_tokens[static_cast<jule::Int>(0LL)];
				jule::Bool _151421_is_pub = false;
				{
					auto &_match_expr{ _151321_token._field_id };
					if (!((18LLU) == _match_expr)) { goto _case_end_4759236032; }
					_case_begin_4759236032:;
					{
						goto _iter_next_4759229536;
					}
					goto _match_end_4759234912;
					_case_end_4759236032:;
					if (!((21LLU) == _match_expr)) { goto _case_end_4759236144; }
					_case_begin_4759236144:;
					{
						_151421_is_pub=true;
						if (_151221_tokens.len() == 1LL) {
							this->self->_method_push_err(_151221_tokens[static_cast<jule::Int>(0LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
							goto _iter_next_4759229536;
						}
						_151221_tokens=_151221_tokens.slice(static_cast<jule::Int>(1LL));
						if (_151221_tokens.len() > 0LL) {
							_151321_token=_151221_tokens[static_cast<jule::Int>(0LL)];
						}
					}
					goto _match_end_4759234912;
					_case_end_4759236144:;
					_match_end_4759234912:;
				}
				{
					auto &_match_expr{ _151321_token._field_id };
					if (!((38LLU) == _match_expr || (33LLU) == _match_expr || (35LLU) == _match_expr)) { goto _case_end_4759246368; }
					_case_begin_4759246368:;
					{
						jule::Ref<_118d9a790_FnDecl> _153625_f = this->self->_method_get_method(_151221_tokens);
						if (jule::real(_153625_f)) {
							_153625_f->_field_public=_151421_is_pub;
							this->self->_method_check_method_receiver(_153625_f);
							_150941_ipl->_field_methods=append(_150941_ipl->_field_methods,jule::Slice<jule::Ref<_118d9a790_FnDecl>>({_153625_f}));
						}
					}
					goto _match_end_4759246112;
					_case_end_4759246368:;
					_case_begin_4759245744:;
					{
						this->self->_method_push_err(_151321_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
						goto _iter_next_4759229536;
					}
					goto _match_end_4759246112;
					_case_end_4759245744:;
					_match_end_4759246112:;
				}
			}
			_iter_next_4759229536:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11953bd10_st = *__julec_range_begin; goto _iter_begin_4759229536; }
			_iter_end_4759229536:;
		}
	}
}



inline void _11953bd10_Parser::_method_parse_impl_body(jule::Ref<_118d9a790_Impl> _155039_ipl,jule::Slice<_11911a8a0_Token> _155055_tokens) {
	if (_155039_ipl->_method_is_trait_impl()) {
		this->self->_method_parse_impl_trait(_155039_ipl,_155055_tokens);
		return;
	}
	this->self->_method_parse_impl_struct(_155039_ipl,_155055_tokens);
}



inline jule::Ref<_118d9a790_Impl> _11953bd10_Parser::_method_build_impl(jule::Slice<_11911a8a0_Token> _155834_tokens) {
	_11911a8a0_Token _155917_token = _155834_tokens[static_cast<jule::Int>(0LL)];
	if (_155834_tokens.len() < 2LL) {
		this->self->_method_push_err(_155917_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_118d9a790_Impl>();
	}
	_155917_token=_155834_tokens[static_cast<jule::Int>(1LL)];
	if (_155917_token._field_id != 2LLU) {
		this->self->_method_push_err(_155917_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_118d9a790_Impl>();
	}
	if (_155834_tokens.len() < 3LL) {
		this->self->_method_push_err(_155917_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_118d9a790_Impl>();
	}
	jule::Ref<_118d9a790_Impl> _157317_ipl = jule::new_struct<_118d9a790_Impl>(new( std::nothrow ) _118d9a790_Impl(_155917_token,_11911a8a0_Token(),jule::Slice<jule::Ref<_118d9a790_FnDecl>>()));
	_155917_token=_155834_tokens[static_cast<jule::Int>(2LL)];
	if (_155917_token._field_id != 12LLU) {
		if ((_155917_token._field_id == 3LLU) && (_155917_token._field_kind == jule::Str("{", 1))) {
			std::tie(_157317_ipl->_field_base,_157317_ipl->_field_dest) = std::make_tuple(_157317_ipl->_field_dest,_157317_ipl->_field_base);
			_155834_tokens=_155834_tokens.slice(static_cast<jule::Int>(2LL));
			goto _julec_label_body;
		}
		this->self->_method_push_err(_155917_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_118d9a790_Impl>();
	}
	if (_155834_tokens.len() < 4LL) {
		this->self->_method_push_err(_155917_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_118d9a790_Impl>();
	}
	_155917_token=_155834_tokens[static_cast<jule::Int>(3LL)];
	if (_155917_token._field_id != 2LLU) {
		this->self->_method_push_err(_155917_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_118d9a790_Impl>();
	}
	_157317_ipl->_field_dest=_155917_token;
	_155834_tokens=_155834_tokens.slice(static_cast<jule::Int>(4LL));
	_julec_label_body:;
	jule::Int _160217_i = 0LL;
	jule::Slice<_11911a8a0_Token> _160317_body_tokens = _11953bd10_range(_160217_i,jule::Str("{", 1),jule::Str("}", 1),_155834_tokens);
	if (_160317_body_tokens == nullptr) {
		this->self->_method_stop();
		this->self->_method_push_err(_157317_ipl->_field_base,jule::Str("body_not_exist", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_118d9a790_Impl>();
	}
	if (_160217_i < _155834_tokens.len()) {
		this->self->_method_push_err(_155834_tokens[static_cast<jule::Int>(_160217_i)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
	}
	this->self->_method_parse_impl_body(_157317_ipl,_160317_body_tokens);
	return _157317_ipl;
}



inline jule::Any _11953bd10_Parser::_method_build_node_data(jule::Slice<_11911a8a0_Token> _161639_tokens) {
	_11911a8a0_Token _161717_token = _161639_tokens[static_cast<jule::Int>(0LL)];
	{
		auto &_match_expr{ _161717_token._field_id };
		if (!((19LLU) == _match_expr)) { goto _case_end_4759318496; }
		_case_begin_4759318496:;
		{
			return jule::Any(this->self->_method_build_use_decl(_161639_tokens));
		}
		goto _match_end_4759313104;
		_case_end_4759318496:;
		if (!((33LLU) == _match_expr || (35LLU) == _match_expr)) { goto _case_end_4759318720; }
		_case_begin_4759318720:;
		{
			jule::Ref<_118d9a790_FnDecl> _162421_f = this->self->_method_build_fn(_161639_tokens,false,false,false);
			if (jule::real(_162421_f)) {
				_162421_f->_field_global=true;
			}
			return jule::Any(_162421_f);
		}
		goto _match_end_4759313104;
		_case_end_4759318720:;
		if (!((34LLU) == _match_expr || (9LLU) == _match_expr || (36LLU) == _match_expr || (38LLU) == _match_expr)) { goto _case_end_4759316512; }
		_case_begin_4759316512:;
		{
			return jule::Any(this->self->_method_build_var(_161639_tokens));
		}
		goto _match_end_4759313104;
		_case_end_4759316512:;
		if (!((10LLU) == _match_expr)) { goto _case_end_4759315488; }
		_case_begin_4759315488:;
		{
			return jule::Any(this->self->_method_build_type_alias_decl(_161639_tokens));
		}
		goto _match_end_4759313104;
		_case_end_4759315488:;
		if (!((24LLU) == _match_expr)) { goto _case_end_4759315600; }
		_case_begin_4759315600:;
		{
			return jule::Any(this->self->_method_build_enum_decl(_161639_tokens));
		}
		goto _match_end_4759313104;
		_case_end_4759315600:;
		if (!((25LLU) == _match_expr)) { goto _case_end_4759317824; }
		_case_begin_4759317824:;
		{
			return jule::Any(this->self->_method_build_struct_decl(_161639_tokens));
		}
		goto _match_end_4759313104;
		_case_end_4759317824:;
		if (!((29LLU) == _match_expr)) { goto _case_end_4759317936; }
		_case_begin_4759317936:;
		{
			return jule::Any(this->self->_method_build_trait_decl(_161639_tokens));
		}
		goto _match_end_4759313104;
		_case_end_4759317936:;
		if (!((30LLU) == _match_expr)) { goto _case_end_4759318048; }
		_case_begin_4759318048:;
		{
			return jule::Any(this->self->_method_build_impl(_161639_tokens));
		}
		goto _match_end_4759313104;
		_case_end_4759318048:;
		if (!((31LLU) == _match_expr)) { goto _case_end_4759318160; }
		_case_begin_4759318160:;
		{
			return this->self->_method_build_cpp_link(_161639_tokens);
		}
		goto _match_end_4759313104;
		_case_end_4759318160:;
		if (!((18LLU) == _match_expr)) { goto _case_end_4759318272; }
		_case_begin_4759318272:;
		{
			jule::Ref<_118d9a790_Comment> _165821_c = _11953bd10_build_comment(_161717_token);
			this->self->_method_process_comment(_165821_c);
			return jule::Any(_165821_c);
		}
		goto _match_end_4759313104;
		_case_end_4759318272:;
		_case_begin_4759315008:;
		{
			this->self->_method_push_err(_161717_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return jule::Any(nullptr);
		}
		goto _match_end_4759313104;
		_case_end_4759315008:;
		_match_end_4759313104:;
	}
}



inline void _11953bd10_Parser::_method_check_comment_group(_118d9a790_Node _166838_node) {
	if ((!(jule::real((*this)._field_comment_group)))) {
		return;
	}
	{
		auto &_match_expr{ _166838_node._field_data };
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_Comment>>() || _match_expr.type_is<jule::Ref<_118d9a790_Directive>>())) { goto _case_end_4759342896; }
		goto _match_end_4759340976;
		_case_end_4759342896:;
		_case_begin_4759341936:;
		{
			jule::drop((*this)._field_comment_group);
		}
		goto _match_end_4759340976;
		_case_end_4759341936:;
		_match_end_4759340976:;
	}
}



inline void _11953bd10_Parser::_method_check_directive(_118d9a790_Node _168234_node) {
	if ((*this)._field_directives == nullptr) {
		return;
	}
	{
		auto &_match_expr{ _168234_node._field_data };
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_Directive>>() || _match_expr.type_is<jule::Ref<_118d9a790_Comment>>())) { goto _case_end_4759350064; }
		goto _match_end_4759348064;
		_case_end_4759350064:;
		_case_begin_4759347680:;
		{
			(*this)._field_directives=nullptr;
		}
		goto _match_end_4759348064;
		_case_end_4759347680:;
		_match_end_4759348064:;
	}
}



inline void _11953bd10_Parser::_method_apply_meta(_118d9a790_Node _169733_node,jule::Bool _169749_is_pub) {
	{
		auto &_match_expr{ _169733_node._field_data };
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_VarDecl>>())) { goto _case_end_4759353664; }
		_case_begin_4759353664:;
		{
			jule::Ref<_118d9a790_VarDecl> _170021_v = _169733_node._field_data.operator jule::Ref<_118d9a790_VarDecl>();
			if ((!(jule::real(_170021_v)))) {
				return;
			}
			_170021_v->_field_public=_169749_is_pub;
			_170021_v->_field_doc_comments=(*this)._field_comment_group;
			_169749_is_pub=false;
			jule::drop((*this)._field_comment_group);
		}
		goto _match_end_4759352800;
		_case_end_4759353664:;
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_FnDecl>>())) { goto _case_end_4759353776; }
		_case_begin_4759353776:;
		{
			jule::Ref<_118d9a790_FnDecl> _171021_f = _169733_node._field_data.operator jule::Ref<_118d9a790_FnDecl>();
			if ((!(jule::real(_171021_f)))) {
				return;
			}
			_171021_f->_field_public=_169749_is_pub;
			_169749_is_pub=false;
			_171021_f->_field_directives=(*this)._field_directives;
			(*this)._field_directives=nullptr;
			_171021_f->_field_doc_comments=(*this)._field_comment_group;
			jule::drop((*this)._field_comment_group);
		}
		goto _match_end_4759352800;
		_case_end_4759353776:;
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_TypeAliasDecl>>())) { goto _case_end_4759353888; }
		_case_begin_4759353888:;
		{
			jule::Ref<_118d9a790_TypeAliasDecl> _172321_tad = _169733_node._field_data.operator jule::Ref<_118d9a790_TypeAliasDecl>();
			if ((!(jule::real(_172321_tad)))) {
				return;
			}
			_172321_tad->_field_public=_169749_is_pub;
			_169749_is_pub=false;
			_172321_tad->_field_doc_comments=(*this)._field_comment_group;
			jule::drop((*this)._field_comment_group);
		}
		goto _match_end_4759352800;
		_case_end_4759353888:;
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_EnumDecl>>())) { goto _case_end_4759354016; }
		_case_begin_4759354016:;
		{
			jule::Ref<_118d9a790_EnumDecl> _173321_ed = _169733_node._field_data.operator jule::Ref<_118d9a790_EnumDecl>();
			if ((!(jule::real(_173321_ed)))) {
				return;
			}
			_173321_ed->_field_doc_comments=(*this)._field_comment_group;
			jule::drop((*this)._field_comment_group);
			_173321_ed->_field_public=_169749_is_pub;
			_169749_is_pub=false;
		}
		goto _match_end_4759352800;
		_case_end_4759354016:;
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_StructDecl>>())) { goto _case_end_4759354144; }
		_case_begin_4759354144:;
		{
			jule::Ref<_118d9a790_StructDecl> _174321_sd = _169733_node._field_data.operator jule::Ref<_118d9a790_StructDecl>();
			if ((!(jule::real(_174321_sd)))) {
				return;
			}
			_174321_sd->_field_directives=(*this)._field_directives;
			(*this)._field_directives=nullptr;
			_174321_sd->_field_doc_comments=(*this)._field_comment_group;
			jule::drop((*this)._field_comment_group);
			_174321_sd->_field_public=_169749_is_pub;
			_169749_is_pub=false;
		}
		goto _match_end_4759352800;
		_case_end_4759354144:;
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_TraitDecl>>())) { goto _case_end_4759354272; }
		_case_begin_4759354272:;
		{
			jule::Ref<_118d9a790_TraitDecl> _175521_td = _169733_node._field_data.operator jule::Ref<_118d9a790_TraitDecl>();
			if ((!(jule::real(_175521_td)))) {
				return;
			}
			_175521_td->_field_doc_comments=(*this)._field_comment_group;
			jule::drop((*this)._field_comment_group);
			_175521_td->_field_public=_169749_is_pub;
			_169749_is_pub=false;
		}
		goto _match_end_4759352800;
		_case_end_4759354272:;
		_match_end_4759352800:;
	}
	if (_169749_is_pub) {
		(*this)._method_push_err(_169733_node._field_token,jule::Str("def_not_support_pub", 19),jule::Slice<jule::Any>({}));
	}
}



inline void _11953bd10_Parser::_method_check_use_decl(_118d9a790_Node _176933_node) {
	{
		auto &_match_expr{ _176933_node._field_data };
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_UseDecl>>())) { goto _case_end_4759397904; }
		goto _match_end_4759396048;
		_case_end_4759397904:;
		_case_begin_4759396864:;
		{
			return;
		}
		goto _match_end_4759396048;
		_case_end_4759396864:;
		_match_end_4759396048:;
	}
	if ((*this)._field_ast->_field_decls._method_len() > 0LL) {
		(*this)._method_push_err(_176933_node._field_token,jule::Str("use_decl_at_body", 16),jule::Slice<jule::Any>({}));
	}
}



inline std::tuple<jule::Bool,jule::Any> _11953bd10_Parser::_method_build_general_scope_node_data(jule::Slice<_11911a8a0_Token> _178353_st) {
	jule::Any _178382_data = jule::Any();
	jule::Bool _178368_is_pub = jule::Bool();
	if (_178353_st[static_cast<jule::Int>(0LL)]._field_id == 21LLU) {
		_178368_is_pub=true;
		_178353_st=_178353_st.slice(static_cast<jule::Int>(1LL));
		if (_178353_st.len() == 0LL) {
			this->self->_method_push_err(_178353_st[static_cast<jule::Int>(0LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return std::make_tuple(_178368_is_pub,_178382_data);
		}
	}
	_178382_data=this->self->_method_build_node_data(_178353_st);
	_178368_is_pub = _178368_is_pub;
	_178382_data = _178382_data;
	return std::make_tuple(_178368_is_pub,_178382_data);
}



inline _118d9a790_Node _11953bd10_Parser::_method_parse_node(jule::Slice<_11911a8a0_Token> _179834_st) {
	_118d9a790_Node _179917_node = _118d9a790_Node(_179834_st[static_cast<jule::Int>(0LL)],jule::Any());
	jule::Bool _180314_is_pub;
	jule::Any _180326_data;
	std::tie(_180314_is_pub,_180326_data) = this->self->_method_build_general_scope_node_data(_179834_st);
	if (_180326_data == nullptr) {
		return _179917_node;
	}
	_179917_node._field_data=_180326_data;
	this->self->_method_apply_meta(_179917_node,_180314_is_pub);
	this->self->_method_check_comment_group(_179917_node);
	this->self->_method_check_directive(_179917_node);
	this->self->_method_check_use_decl(_179917_node);
	return _179917_node;
}



inline void _11953bd10_Parser::_method_append_node(jule::Slice<_11911a8a0_Token> _181735_st) {
	if (_181735_st.len() == 0LL) {
		return;
	}
	_118d9a790_Node _182217_node = this->self->_method_parse_node(_181735_st);
	if ((_182217_node._field_data == nullptr) || this->self->_method_stopped()) {
		return;
	}
	{
		if (!((_182217_node._method_is_use_decl()))) { goto _case_end_4759437840; }
		_case_begin_4759437840:;
		{
			this->self->_field_ast->_field_use_decls._method_push(_182217_node._field_data.operator jule::Ref<_118d9a790_UseDecl>());
		}
		goto _match_end_4759435344;
		_case_end_4759437840:;
		if (!((_182217_node._method_is_decl()))) { goto _case_end_4759436784; }
		_case_begin_4759436784:;
		{
			this->self->_field_ast->_field_decls._method_push(_182217_node);
		}
		goto _match_end_4759435344;
		_case_end_4759436784:;
		if (!((_182217_node._method_is_comment()))) { goto _case_end_4759436896; }
		_case_begin_4759436896:;
		{
			jule::Ref<_118d9a790_Comment> _183721_c = _182217_node._field_data.operator jule::Ref<_118d9a790_Comment>();
			this->self->_field_ast->_field_comments._method_push(_183721_c);
		}
		goto _match_end_4759435344;
		_case_end_4759436896:;
		if (!((_182217_node._method_is_impl()))) { goto _case_end_4759437008; }
		_case_begin_4759437008:;
		{
			this->self->_field_ast->_field_impls._method_push(_182217_node._field_data.operator jule::Ref<_118d9a790_Impl>());
		}
		goto _match_end_4759435344;
		_case_end_4759437008:;
		_case_begin_4759436480:;
		{
			this->self->_method_push_err(_182217_node._field_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4759435344;
		_case_end_4759436480:;
		_match_end_4759435344:;
	}
}



inline void _11953bd10_Parser::_method_remove_range(jule::Int _184831_i,jule::Str _184839_kind,jule::Slice<_11911a8a0_Token>& _184851_tokens,jule::Slice<jule::Int>& _184873_ranges) {
	jule::Str _184913_close = _11953bd10_get_close_kind_of_brace(_184839_kind);
	_iter_begin_4759453808:;
	if (!(_184831_i >= 0LL)) { goto _iter_end_4759453808; }
	{
		_11911a8a0_Token _185117_tok = _184851_tokens[static_cast<jule::Int>(_184873_ranges[static_cast<jule::Int>(_184831_i)])];
		if (_185117_tok._field_kind != _184913_close) {
			goto _iter_next_4759453808;
		}
		_184873_ranges=append(_184873_ranges.slice(0LL,static_cast<jule::Int>(_184831_i)),_184873_ranges.slice(static_cast<jule::Int>(_184831_i + 1LL)));
		goto _iter_end_4759453808;
	}
	_iter_next_4759453808:;
	(_184831_i)--;
	goto _iter_begin_4759453808;
	_iter_end_4759453808:;
}



inline void _11953bd10_Parser::_method_push_wrong_order_close_err(_11911a8a0_Token _186145_t,jule::Slice<_11911a8a0_Token>& _186156_tokens,jule::Slice<jule::Int>& _186174_ranges) {
	jule::Str _186217_msg = jule::Str("", 0);
	{
		auto &_match_expr{ _186156_tokens[static_cast<jule::Int>(_186174_ranges[static_cast<jule::Int>(_186174_ranges.len() - 1LL)])]._field_kind };
		if (!((jule::Str("(", 1)) == _match_expr)) { goto _case_end_4759476448; }
		_case_begin_4759476448:;
		{
			_186217_msg=jule::Str("expected_parentheses_close", 26);
		}
		goto _match_end_4759473520;
		_case_end_4759476448:;
		if (!((jule::Str("{", 1)) == _match_expr)) { goto _case_end_4759476560; }
		_case_begin_4759476560:;
		{
			_186217_msg=jule::Str("expected_brace_close", 20);
		}
		goto _match_end_4759473520;
		_case_end_4759476560:;
		if (!((jule::Str("[", 1)) == _match_expr)) { goto _case_end_4759476672; }
		_case_begin_4759476672:;
		{
			_186217_msg=jule::Str("expected_bracket_close", 22);
		}
		goto _match_end_4759473520;
		_case_end_4759476672:;
		_match_end_4759473520:;
	}
	(*this)._method_push_err(_186145_t,_186217_msg,jule::Slice<jule::Any>({}));
}



inline void _11953bd10_Parser::_method_push_range_close(_11911a8a0_Token _187235_t,jule::Str _187245_left,jule::Slice<_11911a8a0_Token>& _187257_tokens,jule::Slice<jule::Int>& _187279_ranges) {
	jule::I64 _187313_n = _187279_ranges.len();
	if (_187313_n == 0LL) {
		{
			auto &_match_expr{ _187235_t._field_kind };
			if (!((jule::Str("]", 1)) == _match_expr)) { goto _case_end_4759505264; }
			_case_begin_4759505264:;
			{
				(*this)._method_push_err(_187235_t,jule::Str("extra_closed_brackets", 21),jule::Slice<jule::Any>({}));
			}
			goto _match_end_4759504384;
			_case_end_4759505264:;
			if (!((jule::Str("}", 1)) == _match_expr)) { goto _case_end_4759505376; }
			_case_begin_4759505376:;
			{
				(*this)._method_push_err(_187235_t,jule::Str("extra_closed_braces", 19),jule::Slice<jule::Any>({}));
			}
			goto _match_end_4759504384;
			_case_end_4759505376:;
			if (!((jule::Str(")", 1)) == _match_expr)) { goto _case_end_4759505488; }
			_case_begin_4759505488:;
			{
				(*this)._method_push_err(_187235_t,jule::Str("extra_closed_parentheses", 24),jule::Slice<jule::Any>({}));
			}
			goto _match_end_4759504384;
			_case_end_4759505488:;
			_match_end_4759504384:;
		}
		return;
	} else if (_187257_tokens[static_cast<jule::Int>(_187279_ranges[static_cast<jule::Int>(_187313_n - 1LL)])]._field_kind != _187245_left) {
		(*this)._method_push_wrong_order_close_err(_187235_t,_187257_tokens,_187279_ranges);
	}
	(*this)._method_remove_range(_187313_n - 1LL,_187235_t._field_kind,_187257_tokens,_187279_ranges);
}



inline void _11953bd10_Parser::_method_check_ranges(jule::Slice<_11911a8a0_Token> _188731_tokens) {
	jule::Slice<jule::Int> _188817_ranges = nullptr;
	{
		auto &__julec_range_expr = _188731_tokens;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _11953bd10_i = 0;
			_11911a8a0_Token _11953bd10_token = *__julec_range_begin;
			_iter_begin_4759520448:;
			{
				if (_11953bd10_token._field_id != 3LLU) {
					goto _iter_next_4759520448;
				}
				{
					auto &_match_expr{ _11953bd10_token._field_kind };
					if (!((jule::Str("(", 1)) == _match_expr || (jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr)) { goto _case_end_4759524304; }
					_case_begin_4759524304:;
					{
						_188817_ranges=append(_188817_ranges,jule::Slice<jule::Int>({_11953bd10_i}));
					}
					goto _match_end_4759524896;
					_case_end_4759524304:;
					if (!((jule::Str(")", 1)) == _match_expr)) { goto _case_end_4759524992; }
					_case_begin_4759524992:;
					{
						(*this)._method_push_range_close(_11953bd10_token,jule::Str("(", 1),_188731_tokens,_188817_ranges);
					}
					goto _match_end_4759524896;
					_case_end_4759524992:;
					if (!((jule::Str("}", 1)) == _match_expr)) { goto _case_end_4759525104; }
					_case_begin_4759525104:;
					{
						(*this)._method_push_range_close(_11953bd10_token,jule::Str("{", 1),_188731_tokens,_188817_ranges);
					}
					goto _match_end_4759524896;
					_case_end_4759525104:;
					if (!((jule::Str("]", 1)) == _match_expr)) { goto _case_end_4759525216; }
					_case_begin_4759525216:;
					{
						(*this)._method_push_range_close(_11953bd10_token,jule::Str("[", 1),_188731_tokens,_188817_ranges);
					}
					goto _match_end_4759524896;
					_case_end_4759525216:;
					_match_end_4759524896:;
				}
			}
			_iter_next_4759520448:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_11953bd10_i; _11953bd10_token = *__julec_range_begin; goto _iter_begin_4759520448; }
			_iter_end_4759520448:;
		}
	}
	{
		auto &__julec_range_expr = _188817_ranges;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _11953bd10_i = *__julec_range_begin;
			_iter_begin_4759531312:;
			{
				_11911a8a0_Token _191317_token = _188731_tokens[static_cast<jule::Int>(_11953bd10_i)];
				{
					auto &_match_expr{ _191317_token._field_kind };
					if (!((jule::Str("(", 1)) == _match_expr)) { goto _case_end_4759537904; }
					_case_begin_4759537904:;
					{
						(*this)._method_push_err(_191317_token,jule::Str("wait_close_parentheses", 22),jule::Slice<jule::Any>({}));
					}
					goto _match_end_4759535808;
					_case_end_4759537904:;
					if (!((jule::Str("{", 1)) == _match_expr)) { goto _case_end_4759538016; }
					_case_begin_4759538016:;
					{
						(*this)._method_push_err(_191317_token,jule::Str("wait_close_brace", 16),jule::Slice<jule::Any>({}));
					}
					goto _match_end_4759535808;
					_case_end_4759538016:;
					if (!((jule::Str("[", 1)) == _match_expr)) { goto _case_end_4759538128; }
					_case_begin_4759538128:;
					{
						(*this)._method_push_err(_191317_token,jule::Str("wait_close_bracket", 18),jule::Slice<jule::Any>({}));
					}
					goto _match_end_4759535808;
					_case_end_4759538128:;
					_match_end_4759535808:;
				}
			}
			_iter_next_4759531312:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11953bd10_i = *__julec_range_begin; goto _iter_begin_4759531312; }
			_iter_end_4759531312:;
		}
	}
}



inline void _11953bd10_Parser::_method_parse(jule::Ref<_118d9a520_File> _192229_f) {
	this->self->_field_ast=jule::new_struct<_118d8a140_Ast>(new( std::nothrow ) _118d8a140_Ast(_192229_f,_1192e4e90_Vector_1(),_1192e4e90_Vector_2(),_1192e4e90_Vector_3(),_1192e4e90_Vector_4(),_1192e4e90_Vector_5()));
	jule::Slice<_11911a8a0_Token> _192717_tokens = __jule_parser_vector_as_slice<_1192e4e90_Vector_0,_11911a8a0_Token>(_192229_f->_method_tokens());
	this->self->_method_check_ranges(_192717_tokens);
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	jule::Slice<jule::Ref<_11912dd80_Stmt>> _193417_stms = _11912dd80_split_stms(_192717_tokens);
	jule::Int _193717_i = 0LL;
	_iter_begin_4759545312:;
	if (!(_193717_i < _193417_stms.len())) { goto _iter_end_4759545312; }
	{
		jule::Ref<_11912dd80_Stmt> _193921_st = _193417_stms[static_cast<jule::Int>(_193717_i)];
		if (_193921_st->_field_tokens.len() == 0LL) {
			return;
		}
		jule::Any _194425_data;
		std::tie(std::ignore,_194425_data) = this->self->_method_build_general_scope_node_data(_193921_st->_field_tokens);
		if (_194425_data == nullptr) {
			goto _iter_next_4759545312;
		}
		if (this->self->_method_stopped()) {
			return;
		}
		_118d9a790_Node _195321_node = _118d9a790_Node(_11911a8a0_Token(),_194425_data);
		if (_195321_node._method_is_comment()) {
			jule::Ref<_118d9a790_Directive> _195525_d = this->self->_method_get_directive(_195321_node._field_data.operator jule::Ref<_118d9a790_Comment>());
			if (jule::real(_195525_d) && _1410150a0_is_top_directive(_195525_d->_field_tag)) {
				this->self->_field_ast->_field_top_directives._method_push(_195525_d);
			}
		} else {
			goto _iter_end_4759545312;
		}
	}
	_iter_next_4759545312:;
	(_193717_i)++;
	goto _iter_begin_4759545312;
	_iter_end_4759545312:;
	this->self->_field_errors=nullptr;
	_iter_begin_4759571456:;
	if (!(_193717_i < _193417_stms.len())) { goto _iter_end_4759571456; }
	{
		jule::Ref<_11912dd80_Stmt> _196821_st = _193417_stms[static_cast<jule::Int>(_193717_i)];
		this->self->_method_append_node(_196821_st->_field_tokens);
		if (this->self->_method_stopped()) {
			goto _iter_end_4759571456;
		}
	}
	_iter_next_4759571456:;
	(_193717_i)++;
	goto _iter_begin_4759571456;
	_iter_end_4759571456:;
}







std::ostream &operator<<(std::ostream &_Stream, const _11953bd10_Parser &_Src) {
	_Stream << "Parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "comment_group:" << _Src._field_comment_group << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}



inline void _11972a4d0_TypeBuilder::_method_push_err(_11911a8a0_Token _7727_token,jule::Str _7741_key) {
	if ((*this)._field_err) {
		(*this)._field_p->_method_push_err(_7727_token,_7741_key,jule::Slice<jule::Any>({}));
	}
}



inline jule::Ref<_118d9a790_TypeDecl> _11972a4d0_TypeBuilder::_method_build_prim(void) {
	jule::Ref<_118d9a790_TypeDecl> _8417_t = _11972a4d0_build_prim_type((*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))]);
	((*((*this)._field_i)))++;
	return _8417_t;
}



inline jule::Ref<_118d9a790_TypeDecl> _11972a4d0_TypeBuilder::_method_build_namespace(void) {
	jule::Ref<_118d9a790_TypeDecl> _9017_t = jule::new_struct<_118d9a790_TypeDecl>(new( std::nothrow ) _118d9a790_TypeDecl((*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))],jule::Any()));
	jule::Ref<_118d9a790_NamespaceTypeDecl> _9417_nst = jule::new_struct<_118d9a790_NamespaceTypeDecl>(new( std::nothrow ) _118d9a790_NamespaceTypeDecl());
	jule::Int _9517_n = 0LL;
	_iter_begin_4759594352:;
	if (!((*((*this)._field_i)) < (*this)._field_tokens.len())) { goto _iter_end_4759594352; }
	{
		_11911a8a0_Token _9721_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
		if ((_9517_n % 2LL) == 0LL) {
			if (_9721_token._field_id != 2LLU) {
				(*this)._method_push_err(_9721_token,jule::Str("invalid_syntax", 14));
			}
			_9417_nst->_field_idents=append(_9417_nst->_field_idents,jule::Slice<_11911a8a0_Token>({_9721_token}));
		} else if (_9721_token._field_id != 23LLU) {
			goto _iter_end_4759594352;
		}
		(_9517_n)++;
	}
	_iter_next_4759594352:;
	((*((*this)._field_i)))++;
	goto _iter_begin_4759594352;
	_iter_end_4759594352:;
	_9417_nst->_field_idents=_9417_nst->_field_idents.slice(0LL,static_cast<jule::Int>(_9417_nst->_field_idents.len() - 1LL));
	((*((*this)._field_i)))--;
	_9417_nst->_field_kind=(*this)._method_build_ident()->_field_kind.operator jule::Ref<_118d9a790_IdentTypeDecl>();
	_9017_t->_field_kind=jule::Any(_9417_nst);
	return _9017_t;
}



inline jule::Slice<jule::Ref<_118d9a790_TypeDecl>> _11972a4d0_TypeBuilder::_method_build_generics(void) {
	if ((*((*this)._field_i)) >= (*this)._field_tokens.len()) {
		return nullptr;
	}
	_11911a8a0_Token _12213_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	if ((_12213_token._field_id != 3LLU) || (_12213_token._field_kind != jule::Str("[", 1))) {
		return nullptr;
	}
	jule::Slice<jule::Slice<_11911a8a0_Token>> _12717_parts = (*this)._method_ident_generics();
	if (_12717_parts.len() == 0LL) {
		(*this)._method_push_err(_12213_token,jule::Str("invalid_syntax", 14));
		return nullptr;
	}
	jule::Slice<jule::Ref<_118d9a790_TypeDecl>> _13317_types = jule::Slice<jule::Ref<_118d9a790_TypeDecl>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_12717_parts.len())));
	{
		auto &__julec_range_expr = _12717_parts;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _11972a4d0_i = 0;
			jule::Slice<_11911a8a0_Token> _11972a4d0_part = *__julec_range_begin;
			_iter_begin_4759629712:;
			{
				jule::Int _13521_j = 0LL;
				jule::Ref<_118d9a790_TypeDecl> _13622_t;
				std::tie(_13622_t,std::ignore) = (*this)._field_p->_method_build_type(_11972a4d0_part,(&(_13521_j)),true);
				if (_13521_j < _11972a4d0_part.len()) {
					(*this)._method_push_err(_11972a4d0_part[static_cast<jule::Int>(_13521_j)],jule::Str("invalid_syntax", 14));
				}
				_13317_types[static_cast<jule::Int>(_11972a4d0_i)]=_13622_t;
			}
			_iter_next_4759629712:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_11972a4d0_i; _11972a4d0_part = *__julec_range_begin; goto _iter_begin_4759629712; }
			_iter_end_4759629712:;
		}
	}
	return _13317_types;
}



inline jule::Slice<jule::Slice<_11911a8a0_Token>> _11972a4d0_TypeBuilder::_method_ident_generics(void) {
	jule::Int _14613_first = (*((*this)._field_i));
	jule::Int _14717_range_n = 0LL;
	_iter_begin_4759641856:;
	if (!((*((*this)._field_i)) < (*this)._field_tokens.len())) { goto _iter_end_4759641856; }
	{
		_11911a8a0_Token _14917_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
		if (_14917_token._field_id == 3LLU) {
			{
				auto &_match_expr{ _14917_token._field_kind };
				if (!((jule::Str("[", 1)) == _match_expr)) { goto _case_end_4759646608; }
				_case_begin_4759646608:;
				{
					(_14717_range_n)++;
				}
				goto _match_end_4759645648;
				_case_end_4759646608:;
				if (!((jule::Str("]", 1)) == _match_expr)) { goto _case_end_4759646720; }
				_case_begin_4759646720:;
				{
					(_14717_range_n)--;
				}
				goto _match_end_4759645648;
				_case_end_4759646720:;
				_match_end_4759645648:;
			}
		}
		if (_14717_range_n == 0LL) {
			((*((*this)._field_i)))++;
			goto _iter_end_4759641856;
		}
	}
	_iter_next_4759641856:;
	((*((*this)._field_i)))++;
	goto _iter_begin_4759641856;
	_iter_end_4759641856:;
	jule::Slice<_11911a8a0_Token> _16117_tokens = (*this)._field_tokens.slice(static_cast<jule::Int>(_14613_first + 1LL),static_cast<jule::Int>((*((*this)._field_i)) - 1LL));
	jule::Slice<jule::Slice<_11911a8a0_Token>> _16218_parts;
	jule::Slice<_13fe81720_Log> _16225_errors;
	std::tie(_16218_parts,_16225_errors) = _11953bd10_parts(_16117_tokens,8LLU,true);
	if ((*this)._field_err) {
		(*this)._field_p->_field_errors=append((*this)._field_p->_field_errors,_16225_errors);
	}
	return _16218_parts;
}



inline jule::Ref<_118d9a790_TypeDecl> _11972a4d0_TypeBuilder::_method_build_ident(void) {
	if ((((*((*this)._field_i)) + 1LL) < (*this)._field_tokens.len()) && ((*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)) + 1LL)]._field_id == 23LLU)) {
		return (*this)._method_build_namespace();
	}
	_11911a8a0_Token _17317_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	jule::Ref<_118d9a790_IdentTypeDecl> _17417_it = jule::new_struct<_118d9a790_IdentTypeDecl>(new( std::nothrow ) _118d9a790_IdentTypeDecl(_17317_token,_17317_token._field_kind,false,jule::Slice<jule::Ref<_118d9a790_TypeDecl>>()));
	((*((*this)._field_i)))++;
	_17417_it->_field_generics=(*this)._method_build_generics();
	return jule::new_struct<_118d9a790_TypeDecl>(new( std::nothrow ) _118d9a790_TypeDecl(_17317_token,jule::Any(_17417_it)));
}



inline jule::Ref<_118d9a790_TypeDecl> _11972a4d0_TypeBuilder::_method_build_cpp_link(void) {
	if ((((*((*this)._field_i)) + 1LL) >= (*this)._field_tokens.len()) || ((*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)) + 1LL)]._field_id != 20LLU)) {
		(*this)._method_push_err((*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))],jule::Str("invalid_syntax", 14));
		return jule::new_ref<_118d9a790_TypeDecl>();
	}
	(*((*this)._field_i))+=2LL;
	jule::Ref<_118d9a790_TypeDecl> _19317_t = (*this)._method_build_ident();
	_19317_t->_field_kind.operator jule::Ref<_118d9a790_IdentTypeDecl>()->_field_cpp_linked=true;
	return _19317_t;
}



inline jule::Ref<_118d9a790_TypeDecl> _11972a4d0_TypeBuilder::_method_build_fn(void) {
	_11911a8a0_Token _19917_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	jule::Ref<_118d9a790_FnDecl> _20017_f = (*this)._field_p->_method_build_fn_prototype((*this)._field_tokens,(*((*this)._field_i)),false,true);
	if ((!(jule::real(_20017_f)))) {
		return jule::new_ref<_118d9a790_TypeDecl>();
	}
	return jule::new_struct<_118d9a790_TypeDecl>(new( std::nothrow ) _118d9a790_TypeDecl(_19917_token,jule::Any(_20017_f)));
}



inline jule::Ref<_118d9a790_TypeDecl> _11972a4d0_TypeBuilder::_method_build_ptr(void) {
	_11911a8a0_Token _21117_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	if (((*((*this)._field_i)) + 1LL) >= (*this)._field_tokens.len()) {
		(*this)._method_push_err(_21117_token,jule::Str("invalid_syntax", 14));
		return jule::new_ref<_118d9a790_TypeDecl>();
	}
	((*((*this)._field_i)))++;
	if ((*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))]._field_id == 35LLU) {
		((*((*this)._field_i)))++;
		return jule::new_struct<_118d9a790_TypeDecl>(new( std::nothrow ) _118d9a790_TypeDecl(_21117_token,jule::Any(jule::new_struct<_118d9a790_PtrTypeDecl>(new( std::nothrow ) _118d9a790_PtrTypeDecl(jule::new_ref<_118d9a790_TypeDecl>())))));
	}
	jule::Ref<_118d9a790_TypeDecl> _22817_elem = (*this)._method_step();
	if ((!(jule::real(_22817_elem)))) {
		return jule::new_ref<_118d9a790_TypeDecl>();
	}
	return jule::new_struct<_118d9a790_TypeDecl>(new( std::nothrow ) _118d9a790_TypeDecl(_21117_token,jule::Any(jule::new_struct<_118d9a790_PtrTypeDecl>(new( std::nothrow ) _118d9a790_PtrTypeDecl(_22817_elem)))));
}



inline jule::Ref<_118d9a790_TypeDecl> _11972a4d0_TypeBuilder::_method_build_ref(void) {
	_11911a8a0_Token _24217_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	if (((*((*this)._field_i)) + 1LL) >= (*this)._field_tokens.len()) {
		(*this)._method_push_err(_24217_token,jule::Str("invalid_syntax", 14));
		return jule::new_ref<_118d9a790_TypeDecl>();
	}
	((*((*this)._field_i)))++;
	jule::Ref<_118d9a790_TypeDecl> _24917_elem = (*this)._method_step();
	if ((!(jule::real(_24917_elem)))) {
		return jule::new_ref<_118d9a790_TypeDecl>();
	}
	return jule::new_struct<_118d9a790_TypeDecl>(new( std::nothrow ) _118d9a790_TypeDecl(_24217_token,jule::Any(jule::new_struct<_118d9a790_RefTypeDecl>(new( std::nothrow ) _118d9a790_RefTypeDecl(_24917_elem)))));
}



inline jule::Ref<_118d9a790_TypeDecl> _11972a4d0_TypeBuilder::_method_build_op(void) {
	_11911a8a0_Token _26317_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	{
		auto &_match_expr{ _26317_token._field_kind };
		if (!((jule::Str("*", 1)) == _match_expr)) { goto _case_end_4759730672; }
		_case_begin_4759730672:;
		{
			return (*this)._method_build_ptr();
		}
		goto _match_end_4759726624;
		_case_end_4759730672:;
		if (!((jule::Str("&", 1)) == _match_expr)) { goto _case_end_4759732704; }
		_case_begin_4759732704:;
		{
			return (*this)._method_build_ref();
		}
		goto _match_end_4759726624;
		_case_end_4759732704:;
		if (!((jule::Str("&&", 2)) == _match_expr)) { goto _case_end_4759732816; }
		_case_begin_4759732816:;
		{
			(*this)._method_push_err(_26317_token,jule::Str("ref_refs_ref", 12));
			return (*this)._method_build_ref();
		}
		goto _match_end_4759726624;
		_case_end_4759732816:;
		_case_begin_4759729232:;
		{
			(*this)._method_push_err(_26317_token,jule::Str("invalid_syntax", 14));
			return jule::new_ref<_118d9a790_TypeDecl>();
		}
		goto _match_end_4759726624;
		_case_end_4759729232:;
		_match_end_4759726624:;
	}
}



inline jule::Ref<_118d9a790_TypeDecl> _11972a4d0_TypeBuilder::_method_build_slc(void) {
	_11911a8a0_Token _28217_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	((*((*this)._field_i)))++;
	jule::Ref<_118d9a790_TypeDecl> _28417_elem = (*this)._method_step();
	if ((!(jule::real(_28417_elem)))) {
		return jule::new_ref<_118d9a790_TypeDecl>();
	}
	return jule::new_struct<_118d9a790_TypeDecl>(new( std::nothrow ) _118d9a790_TypeDecl(_28217_token,jule::Any(jule::new_struct<_118d9a790_SlcTypeDecl>(new( std::nothrow ) _118d9a790_SlcTypeDecl(_28417_elem)))));
}



inline jule::Ref<_118d9a790_TypeDecl> _11972a4d0_TypeBuilder::_method_build_arr(void) {
	if ((*((*this)._field_i)) >= (*this)._field_tokens.len()) {
		(*this)._method_push_err((*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)) - 1LL)],jule::Str("missing_type", 12));
		return jule::new_ref<_118d9a790_TypeDecl>();
	}
	jule::Int _30513_expr_delta = (*((*this)._field_i));
	jule::Ref<_118d9a790_TypeDecl> _30717_elem = (*this)._method_step();
	if ((!(jule::real(_30717_elem)))) {
		return jule::new_ref<_118d9a790_TypeDecl>();
	}
	jule::Ref<_118d9a790_ArrTypeDecl> _31217_arrt = jule::new_struct<_118d9a790_ArrTypeDecl>(new( std::nothrow ) _118d9a790_ArrTypeDecl(_30717_elem,jule::Ref<_118d9a790_Expr>()));
	jule::Slice<_11911a8a0_Token> _31621_expr_tokens;
	std::tie(std::ignore,_31621_expr_tokens) = _11953bd10_range_last((*this)._field_tokens.slice(0LL,static_cast<jule::Int>(_30513_expr_delta)));
	_31621_expr_tokens=_31621_expr_tokens.slice(static_cast<jule::Int>(1LL),static_cast<jule::Int>(_31621_expr_tokens.len() - 1LL));
	_11911a8a0_Token _31817_token = _31621_expr_tokens[static_cast<jule::Int>(0LL)];
	if (((_31621_expr_tokens.len() == 1LL) && (_31817_token._field_id == 7LLU)) && (_31817_token._field_kind == jule::Str("...", 3))) {
	} else {
		_31217_arrt->_field_size=(*this)._field_p->_method_build_expr(_31621_expr_tokens);
	}
	return jule::new_struct<_118d9a790_TypeDecl>(new( std::nothrow ) _118d9a790_TypeDecl(_31817_token,jule::Any(_31217_arrt)));
}



inline jule::Ref<_118d9a790_TypeDecl> _11972a4d0_TypeBuilder::_method_build_map(jule::Int _33128_colon,jule::Slice<_11911a8a0_Token> _33144_tokens) {
	_11911a8a0_Token _33217_colon_token = (*this)._field_tokens[static_cast<jule::Int>(_33128_colon)];
	if ((_33128_colon == 0LL) || ((_33128_colon + 1LL) >= _33144_tokens.len())) {
		(*this)._method_push_err(_33217_colon_token,jule::Str("missing_type", 12));
		return jule::new_ref<_118d9a790_TypeDecl>();
	}
	jule::Slice<_11911a8a0_Token> _33717_key_tokens = _33144_tokens.slice(0LL,static_cast<jule::Int>(_33128_colon));
	jule::Slice<_11911a8a0_Token> _33817_val_tokens = _33144_tokens.slice(static_cast<jule::Int>(_33128_colon + 1LL));
	jule::Ref<_118d9a790_MapTypeDecl> _33917_mapt = jule::new_struct<_118d9a790_MapTypeDecl>(new( std::nothrow ) _118d9a790_MapTypeDecl());
	jule::Int _34117_j = 0LL;
	jule::Ref<_118d9a790_TypeDecl> _34218_keyt;
	jule::Bool _34228_ok;
	std::tie(_34218_keyt,_34228_ok) = (*this)._field_p->_method_build_type(_33717_key_tokens,(&(_34117_j)),(*this)._field_err);
	if ((!(_34228_ok))) {
		return jule::new_ref<_118d9a790_TypeDecl>();
	} else if (_34117_j < _33717_key_tokens.len()) {
		(*this)._method_push_err(_33717_key_tokens[static_cast<jule::Int>(_34117_j)],jule::Str("invalid_syntax", 14));
	}
	_33917_mapt->_field_key=_34218_keyt;
	_34117_j=0LL;
	jule::Ref<_118d9a790_TypeDecl> _35118_valt;
	std::tie(_35118_valt,_34228_ok) = (*this)._field_p->_method_build_type(_33817_val_tokens,(&(_34117_j)),(*this)._field_err);
	if ((!(_34228_ok))) {
		return jule::new_ref<_118d9a790_TypeDecl>();
	} else if (_34117_j < _33817_val_tokens.len()) {
		(*this)._method_push_err(_33817_val_tokens[static_cast<jule::Int>(_34117_j)],jule::Str("invalid_syntax", 14));
	}
	_33917_mapt->_field_val=_35118_valt;
	return jule::new_struct<_118d9a790_TypeDecl>(new( std::nothrow ) _118d9a790_TypeDecl(_33217_colon_token,jule::Any(_33917_mapt)));
}



inline jule::Ref<_118d9a790_TypeDecl> _11972a4d0_TypeBuilder::_method_build_enumerable(void) {
	_11911a8a0_Token _36617_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	if (((((*((*this)._field_i)) + 2LL) >= (*this)._field_tokens.len()) || (_36617_token._field_id != 3LLU)) || (_36617_token._field_kind != jule::Str("[", 1))) {
		(*this)._method_push_err(_36617_token,jule::Str("invalid_syntax", 14));
		return jule::new_ref<_118d9a790_TypeDecl>();
	}
	((*((*this)._field_i)))++;
	_36617_token=(*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	if ((_36617_token._field_id == 3LLU) && (_36617_token._field_kind == jule::Str("]", 1))) {
		return (*this)._method_build_slc();
	}
	((*((*this)._field_i)))--;
	jule::Slice<_11911a8a0_Token> _38018_map_tokens;
	jule::Int _38030_colon;
	std::tie(_38018_map_tokens,_38030_colon) = _11972a4d0_split_map_range((*this)._field_tokens,(*((*this)._field_i)));
	((*((*this)._field_i)))++;
	if (_38030_colon == -1LL) {
		return (*this)._method_build_arr();
	}
	return (*this)._method_build_map(_38030_colon,_38018_map_tokens);
}



inline jule::Ref<_118d9a790_TypeDecl> _11972a4d0_TypeBuilder::_method_step(void) {
	_11911a8a0_Token _38913_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	{
		auto &_match_expr{ _38913_token._field_id };
		if (!((1LLU) == _match_expr)) { goto _case_end_4759827312; }
		_case_begin_4759827312:;
		{
			return (*this)._method_build_prim();
		}
		goto _match_end_4759821680;
		_case_end_4759827312:;
		if (!((2LLU) == _match_expr)) { goto _case_end_4759827424; }
		_case_begin_4759827424:;
		{
			return (*this)._method_build_ident();
		}
		goto _match_end_4759821680;
		_case_end_4759827424:;
		if (!((31LLU) == _match_expr)) { goto _case_end_4759827056; }
		_case_begin_4759827056:;
		{
			return (*this)._method_build_cpp_link();
		}
		goto _match_end_4759821680;
		_case_end_4759827056:;
		if (!((33LLU) == _match_expr)) { goto _case_end_4759827168; }
		_case_begin_4759827168:;
		{
			return (*this)._method_build_fn();
		}
		goto _match_end_4759821680;
		_case_end_4759827168:;
		if (!((7LLU) == _match_expr)) { goto _case_end_4759823536; }
		_case_begin_4759823536:;
		{
			return (*this)._method_build_op();
		}
		goto _match_end_4759821680;
		_case_end_4759823536:;
		if (!((3LLU) == _match_expr)) { goto _case_end_4759823648; }
		_case_begin_4759823648:;
		{
			return (*this)._method_build_enumerable();
		}
		goto _match_end_4759821680;
		_case_end_4759823648:;
		_case_begin_4759823232:;
		{
			((*((*this)._field_i)))++;
			(*this)._method_push_err(_38913_token,jule::Str("invalid_syntax", 14));
			return jule::new_ref<_118d9a790_TypeDecl>();
		}
		goto _match_end_4759821680;
		_case_end_4759823232:;
		_match_end_4759821680:;
	}
}



inline std::tuple<jule::Ref<_118d9a790_TypeDecl>,jule::Bool> _11972a4d0_TypeBuilder::_method_build(void) {
	jule::Bool _41844_ok = jule::Bool();
	jule::Ref<_118d9a790_TypeDecl> _41917_root = (*this)._method_step();
	if ((!(jule::real(_41917_root)))) {
		_41844_ok = false;
		return std::make_tuple(_11972a4d0_build_void_type(),_41844_ok);
	}
	_41844_ok = true;
	return std::make_tuple(_41917_root,_41844_ok);
}







std::ostream &operator<<(std::ostream &_Stream, const _11972a4d0_TypeBuilder &_Src) {
	_Stream << "TypeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}



inline jule::I64 _11ab854f0_Const::_method_read_i64(void) {
	if ((!((*this)._method_is_i64()))) {
		return 0LL;
	}
	return (*this)._field_data.operator jule::I64();
}



inline jule::U64 _11ab854f0_Const::_method_read_u64(void) {
	if ((!((*this)._method_is_u64()))) {
		return 0LL;
	}
	return (*this)._field_data.operator jule::U64();
}



inline jule::Bool _11ab854f0_Const::_method_read_bool(void) {
	if ((!((*this)._method_is_bool()))) {
		return false;
	}
	return (*this)._field_data.operator jule::Bool();
}



inline jule::Str _11ab854f0_Const::_method_read_str(void) {
	if ((!((*this)._method_is_str()))) {
		return jule::Str("", 0);
	}
	return (*this)._field_data.operator jule::Str();
}



inline jule::F64 _11ab854f0_Const::_method_read_f64(void) {
	if ((!((*this)._method_is_f64()))) {
		return 0LL;
	}
	return (*this)._field_data.operator jule::F64();
}



inline jule::I64 _11ab854f0_Const::_method_as_i64(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::I64>())) { goto _case_end_4759916752; }
		_case_begin_4759916752:;
		{
			return (*this)._field_data.operator jule::I64();
		}
		goto _match_end_4759912288;
		_case_end_4759916752:;
		if (!(_match_expr.type_is<jule::U64>())) { goto _case_end_4759916864; }
		_case_begin_4759916864:;
		{
			return static_cast<jule::I64>((*this)._field_data.operator jule::U64());
		}
		goto _match_end_4759912288;
		_case_end_4759916864:;
		if (!(_match_expr.type_is<jule::F64>())) { goto _case_end_4759915536; }
		_case_begin_4759915536:;
		{
			return static_cast<jule::I64>((*this)._field_data.operator jule::F64());
		}
		goto _match_end_4759912288;
		_case_end_4759915536:;
		_case_begin_4759914448:;
		{
			return 0LL;
		}
		goto _match_end_4759912288;
		_case_end_4759914448:;
		_match_end_4759912288:;
	}
}



inline jule::U64 _11ab854f0_Const::_method_as_u64(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::U64>())) { goto _case_end_4759924048; }
		_case_begin_4759924048:;
		{
			return (*this)._field_data.operator jule::U64();
		}
		goto _match_end_4759921792;
		_case_end_4759924048:;
		if (!(_match_expr.type_is<jule::I64>())) { goto _case_end_4759924160; }
		_case_begin_4759924160:;
		{
			return static_cast<jule::U64>((*this)._field_data.operator jule::I64());
		}
		goto _match_end_4759921792;
		_case_end_4759924160:;
		if (!(_match_expr.type_is<jule::F64>())) { goto _case_end_4759923232; }
		_case_begin_4759923232:;
		{
			return static_cast<jule::U64>((*this)._field_data.operator jule::F64());
		}
		goto _match_end_4759921792;
		_case_end_4759923232:;
		_case_begin_4759920560:;
		{
			return 0LL;
		}
		goto _match_end_4759921792;
		_case_end_4759920560:;
		_match_end_4759921792:;
	}
}



inline jule::F64 _11ab854f0_Const::_method_as_f64(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::F64>())) { goto _case_end_4759931920; }
		_case_begin_4759931920:;
		{
			return (*this)._field_data.operator jule::F64();
		}
		goto _match_end_4759926032;
		_case_end_4759931920:;
		if (!(_match_expr.type_is<jule::I64>())) { goto _case_end_4759932032; }
		_case_begin_4759932032:;
		{
			return static_cast<jule::F64>((*this)._field_data.operator jule::I64());
		}
		goto _match_end_4759926032;
		_case_end_4759932032:;
		if (!(_match_expr.type_is<jule::U64>())) { goto _case_end_4759930704; }
		_case_begin_4759930704:;
		{
			return static_cast<jule::F64>((*this)._field_data.operator jule::U64());
		}
		goto _match_end_4759926032;
		_case_end_4759930704:;
		_case_begin_4759927792:;
		{
			return 0LL;
		}
		goto _match_end_4759926032;
		_case_end_4759927792:;
		_match_end_4759926032:;
	}
}



inline void _11ab854f0_Const::_method_set_i64(jule::I64 _13830_x) {
	(*this)._field_data=jule::Any(_13830_x);
}



inline void _11ab854f0_Const::_method_set_u64(jule::U64 _14030_x) {
	(*this)._field_data=jule::Any(_14030_x);
}



inline void _11ab854f0_Const::_method_set_bool(jule::Bool _14231_x) {
	(*this)._field_data=jule::Any(_14231_x);
}



inline void _11ab854f0_Const::_method_set_str(jule::Str _14430_x) {
	(*this)._field_data=jule::Any(_14430_x);
}



inline void _11ab854f0_Const::_method_set_f64(jule::F64 _14630_x) {
	(*this)._field_data=jule::Any(_14630_x);
}



inline void _11ab854f0_Const::_method_set_nil(void) {
	(*this)._field_data=jule::Any(nullptr);
}



inline void _11ab854f0_Const::_method_set_by_type(jule::F64 _15030_v,_11ab854f0_Const _15038_x) {
	{
		if (!((_15038_x._method_is_f64()))) { goto _case_end_4759956000; }
		_case_begin_4759956000:;
		{
			(*this)._method_set_f64(_15030_v);
		}
		goto _match_end_4759955712;
		_case_end_4759956000:;
		if (!(((*this)._method_is_f64()))) { goto _case_end_4759956112; }
		_case_begin_4759956112:;
		{
			(*this)._method_set_f64(_15030_v);
		}
		goto _match_end_4759955712;
		_case_end_4759956112:;
		if (!(((*this)._method_is_i64()))) { goto _case_end_4759956224; }
		_case_begin_4759956224:;
		{
			(*this)._method_set_i64(static_cast<jule::I64>(_15030_v));
		}
		goto _match_end_4759955712;
		_case_end_4759956224:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4759956352; }
		_case_begin_4759956352:;
		{
			(*this)._method_set_u64(static_cast<jule::U64>(_15030_v));
		}
		goto _match_end_4759955712;
		_case_end_4759956352:;
		_match_end_4759955712:;
	}
}



inline jule::Bool _11ab854f0_Const::_method_is_i64(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::I64>())) { goto _case_end_4759967264; }
		_case_begin_4759967264:;
		{
			return true;
		}
		goto _match_end_4759955152;
		_case_end_4759967264:;
		_case_begin_4759966208:;
		{
			return false;
		}
		goto _match_end_4759955152;
		_case_end_4759966208:;
		_match_end_4759955152:;
	}
}



inline jule::Bool _11ab854f0_Const::_method_is_u64(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::U64>())) { goto _case_end_4759970208; }
		_case_begin_4759970208:;
		{
			return true;
		}
		goto _match_end_4759966432;
		_case_end_4759970208:;
		_case_begin_4759967712:;
		{
			return false;
		}
		goto _match_end_4759966432;
		_case_end_4759967712:;
		_match_end_4759966432:;
	}
}



inline jule::Bool _11ab854f0_Const::_method_is_bool(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Bool>())) { goto _case_end_4759973152; }
		_case_begin_4759973152:;
		{
			return true;
		}
		goto _match_end_4759969696;
		_case_end_4759973152:;
		_case_begin_4759971712:;
		{
			return false;
		}
		goto _match_end_4759969696;
		_case_end_4759971712:;
		_match_end_4759969696:;
	}
}



inline jule::Bool _11ab854f0_Const::_method_is_str(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Str>())) { goto _case_end_4759976096; }
		_case_begin_4759976096:;
		{
			return true;
		}
		goto _match_end_4759972640;
		_case_end_4759976096:;
		_case_begin_4759974656:;
		{
			return false;
		}
		goto _match_end_4759972640;
		_case_end_4759974656:;
		_match_end_4759972640:;
	}
}



inline jule::Bool _11ab854f0_Const::_method_is_f64(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::F64>())) { goto _case_end_4759979040; }
		_case_begin_4759979040:;
		{
			return true;
		}
		goto _match_end_4759975584;
		_case_end_4759979040:;
		_case_begin_4759977600:;
		{
			return false;
		}
		goto _match_end_4759975584;
		_case_end_4759977600:;
		_match_end_4759975584:;
	}
}



inline jule::Bool _11ab854f0_Const::_method_is_nil(void) {
	return (*this)._field_data == nullptr;
}



inline jule::Bool _11ab854f0_Const::_method_are_same_types(_11ab854f0_Const _20733_x) {
	{
		if (!(((*this)._method_is_i64() == _20733_x._method_is_i64()))) { goto _case_end_4759985776; }
		_case_begin_4759985776:;
		{
			return true;
		}
		goto _match_end_4759984368;
		_case_end_4759985776:;
		if (!(((*this)._method_is_u64() == _20733_x._method_is_u64()))) { goto _case_end_4759986704; }
		_case_begin_4759986704:;
		{
			return true;
		}
		goto _match_end_4759984368;
		_case_end_4759986704:;
		if (!(((*this)._method_is_f64() == _20733_x._method_is_f64()))) { goto _case_end_4759986816; }
		_case_begin_4759986816:;
		{
			return true;
		}
		goto _match_end_4759984368;
		_case_end_4759986816:;
		if (!(((*this)._method_is_bool() == _20733_x._method_is_bool()))) { goto _case_end_4759986928; }
		_case_begin_4759986928:;
		{
			return true;
		}
		goto _match_end_4759984368;
		_case_end_4759986928:;
		if (!(((*this)._method_is_str() == _20733_x._method_is_str()))) { goto _case_end_4759984880; }
		_case_begin_4759984880:;
		{
			return true;
		}
		goto _match_end_4759984368;
		_case_end_4759984880:;
		if (!(((*this)._method_is_nil() == _20733_x._method_is_nil()))) { goto _case_end_4759984992; }
		_case_begin_4759984992:;
		{
			return true;
		}
		goto _match_end_4759984368;
		_case_end_4759984992:;
		_case_begin_4759984576:;
		{
			return false;
		}
		goto _match_end_4759984368;
		_case_end_4759984576:;
		_match_end_4759984368:;
	}
}



inline jule::Bool _11ab854f0_Const::_method_and(_11ab854f0_Const _22522_x) {
	{
		if (!(((*this)._method_is_bool() && _22522_x._method_is_bool()))) { goto _case_end_4760000512; }
		_case_begin_4760000512:;
		{
			return (*this)._method_read_bool() && _22522_x._method_read_bool();
		}
		goto _match_end_4759999216;
		_case_end_4760000512:;
		_case_begin_4759999424:;
		{
			return false;
		}
		goto _match_end_4759999216;
		_case_end_4759999424:;
		_match_end_4759999216:;
	}
}



inline jule::Bool _11ab854f0_Const::_method_or(_11ab854f0_Const _23721_x) {
	{
		if (!(((*this)._method_is_bool() && _23721_x._method_is_bool()))) { goto _case_end_4760007024; }
		_case_begin_4760007024:;
		{
			return (*this)._method_read_bool() || _23721_x._method_read_bool();
		}
		goto _match_end_4760005728;
		_case_end_4760007024:;
		_case_begin_4760005936:;
		{
			return false;
		}
		goto _match_end_4760005728;
		_case_end_4760005936:;
		_match_end_4760005728:;
	}
}



inline jule::Bool _11ab854f0_Const::_method_eqs(_11ab854f0_Const _24922_x) {
	{
		if (!(((*this)._method_is_nil()))) { goto _case_end_4760013712; }
		_case_begin_4760013712:;
		{
			return _24922_x._method_is_nil();
		}
		goto _match_end_4760012304;
		_case_end_4760013712:;
		if (!(((*this)._method_is_bool()))) { goto _case_end_4760014640; }
		_case_begin_4760014640:;
		{
			return _24922_x._method_is_bool() && ((*this)._method_read_bool() == _24922_x._method_read_bool());
		}
		goto _match_end_4760012304;
		_case_end_4760014640:;
		if (!(((*this)._method_is_str()))) { goto _case_end_4760014752; }
		_case_begin_4760014752:;
		{
			return _24922_x._method_is_str() && ((*this)._method_read_str() == _24922_x._method_read_str());
		}
		goto _match_end_4760012304;
		_case_end_4760014752:;
		if (!(((*this)._method_is_i64()))) { goto _case_end_4760014864; }
		_case_begin_4760014864:;
		{
			return (*this)._method_read_i64() == _24922_x._method_as_i64();
		}
		goto _match_end_4760012304;
		_case_end_4760014864:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4760012816; }
		_case_begin_4760012816:;
		{
			return (*this)._method_read_u64() == _24922_x._method_as_u64();
		}
		goto _match_end_4760012304;
		_case_end_4760012816:;
		if (!(((*this)._method_is_f64()))) { goto _case_end_4760012928; }
		_case_begin_4760012928:;
		{
			return (*this)._method_read_f64() == _24922_x._method_as_f64();
		}
		goto _match_end_4760012304;
		_case_end_4760012928:;
		_case_begin_4760012512:;
		{
			return false;
		}
		goto _match_end_4760012304;
		_case_end_4760012512:;
		_match_end_4760012304:;
	}
}



inline jule::Bool _11ab854f0_Const::_method_lt(_11ab854f0_Const _28121_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4760032208; }
		_case_begin_4760032208:;
		{
			return (*this)._method_read_i64() < _28121_x._method_as_i64();
		}
		goto _match_end_4760030848;
		_case_end_4760032208:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4760032320; }
		_case_begin_4760032320:;
		{
			return (*this)._method_read_u64() < _28121_x._method_as_u64();
		}
		goto _match_end_4760030848;
		_case_end_4760032320:;
		if (!(((*this)._method_is_f64()))) { goto _case_end_4760033184; }
		_case_begin_4760033184:;
		{
			return (*this)._method_read_f64() < _28121_x._method_as_f64();
		}
		goto _match_end_4760030848;
		_case_end_4760033184:;
		_case_begin_4760031056:;
		{
			return false;
		}
		goto _match_end_4760030848;
		_case_end_4760031056:;
		_match_end_4760030848:;
	}
}



inline jule::Bool _11ab854f0_Const::_method_gt(_11ab854f0_Const _30421_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4760042944; }
		_case_begin_4760042944:;
		{
			return (*this)._method_read_i64() > _30421_x._method_as_i64();
		}
		goto _match_end_4760041584;
		_case_end_4760042944:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4760043056; }
		_case_begin_4760043056:;
		{
			return (*this)._method_read_u64() > _30421_x._method_as_u64();
		}
		goto _match_end_4760041584;
		_case_end_4760043056:;
		if (!(((*this)._method_is_f64()))) { goto _case_end_4760043920; }
		_case_begin_4760043920:;
		{
			return (*this)._method_read_f64() > _30421_x._method_as_f64();
		}
		goto _match_end_4760041584;
		_case_end_4760043920:;
		_case_begin_4760041792:;
		{
			return false;
		}
		goto _match_end_4760041584;
		_case_end_4760041792:;
		_match_end_4760041584:;
	}
}



inline jule::Bool _11ab854f0_Const::_method_add(_11ab854f0_Const _32626_x) {
	{
		if (!(((*this)._method_is_str()))) { goto _case_end_4760053280; }
		_case_begin_4760053280:;
		{
			if ((!(_32626_x._method_is_str()))) {
				return false;
			}
			(*this)._method_set_str((*this)._method_read_str() + _32626_x._method_read_str());
		}
		goto _match_end_4760051984;
		_case_end_4760053280:;
		if (!(((*this)._method_is_f64()) || ((*this)._method_is_i64()) || ((*this)._method_is_u64()))) { goto _case_end_4760053392; }
		_case_begin_4760053392:;
		{
			(*this)._method_set_by_type(static_cast<jule::F64>((*this)._method_as_f64() + _32626_x._method_as_f64()),_32626_x);
		}
		goto _match_end_4760051984;
		_case_end_4760053392:;
		_case_begin_4760052192:;
		{
			return false;
		}
		goto _match_end_4760051984;
		_case_end_4760052192:;
		_match_end_4760051984:;
	}
	return true;
}



inline jule::Bool _11ab854f0_Const::_method_sub(_11ab854f0_Const _34726_x) {
	{
		if (!(((*this)._method_is_f64()) || ((*this)._method_is_i64()) || ((*this)._method_is_u64()))) { goto _case_end_4760066480; }
		_case_begin_4760066480:;
		{
			(*this)._method_set_by_type(static_cast<jule::F64>((*this)._method_as_f64() - _34726_x._method_as_f64()),_34726_x);
		}
		goto _match_end_4760065184;
		_case_end_4760066480:;
		_case_begin_4760065392:;
		{
			return false;
		}
		goto _match_end_4760065184;
		_case_end_4760065392:;
		_match_end_4760065184:;
	}
	return true;
}



inline jule::Bool _11ab854f0_Const::_method_mul(_11ab854f0_Const _36226_x) {
	{
		if (!(((*this)._method_is_f64()) || ((*this)._method_is_i64()) || ((*this)._method_is_u64()))) { goto _case_end_4760075408; }
		_case_begin_4760075408:;
		{
			(*this)._method_set_by_type(static_cast<jule::F64>((*this)._method_as_f64() * _36226_x._method_as_f64()),_36226_x);
		}
		goto _match_end_4760074112;
		_case_end_4760075408:;
		_case_begin_4760074320:;
		{
			return false;
		}
		goto _match_end_4760074112;
		_case_end_4760074320:;
		_match_end_4760074112:;
	}
	return true;
}



inline jule::Bool _11ab854f0_Const::_method_div(_11ab854f0_Const _38126_x) {
	{
		if (!(((*this)._method_is_f64()))) { goto _case_end_4760083776; }
		_case_begin_4760083776:;
		{
			jule::F64 _38417_l = _38126_x._method_as_f64();
			if (_38417_l == 0LL) {
				return false;
			}
			(*this)._method_set_f64(static_cast<jule::F64>(jule::div((*this)._method_read_f64(),_38417_l)));
		}
		goto _match_end_4760082416;
		_case_end_4760083776:;
		if (!(((*this)._method_is_i64()))) { goto _case_end_4760083888; }
		_case_begin_4760083888:;
		{
			jule::F64 _39117_l = _38126_x._method_as_f64();
			if (_39117_l == 0LL) {
				return false;
			}
			(*this)._method_set_f64(static_cast<jule::F64>(jule::div((*this)._method_as_f64(),_39117_l)));
		}
		goto _match_end_4760082416;
		_case_end_4760083888:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4760084752; }
		_case_begin_4760084752:;
		{
			jule::F64 _39817_l = _38126_x._method_as_f64();
			if (_39817_l == 0LL) {
				return false;
			}
			(*this)._method_set_f64(static_cast<jule::F64>(jule::div((*this)._method_as_f64(),_39817_l)));
		}
		goto _match_end_4760082416;
		_case_end_4760084752:;
		_case_begin_4760082624:;
		{
			return false;
		}
		goto _match_end_4760082416;
		_case_end_4760082624:;
		_match_end_4760082416:;
	}
	return true;
}



inline jule::Bool _11ab854f0_Const::_method_mod(_11ab854f0_Const _41326_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4760103536; }
		_case_begin_4760103536:;
		{
			jule::I64 _41617_l = _41326_x._method_as_i64();
			if (_41617_l == 0LL) {
				return false;
			}
			(*this)._method_set_i64(static_cast<jule::I64>((*this)._method_read_i64() % _41617_l));
		}
		goto _match_end_4760102240;
		_case_end_4760103536:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4760103648; }
		_case_begin_4760103648:;
		{
			jule::U64 _42317_l = _41326_x._method_as_u64();
			if (_42317_l == 0LL) {
				return false;
			}
			(*this)._method_set_u64(static_cast<jule::U64>((*this)._method_read_u64() % _42317_l));
		}
		goto _match_end_4760102240;
		_case_end_4760103648:;
		_case_begin_4760102448:;
		{
			return false;
		}
		goto _match_end_4760102240;
		_case_end_4760102448:;
		_match_end_4760102240:;
	}
	return true;
}



inline jule::Bool _11ab854f0_Const::_method_bitwise_and(_11ab854f0_Const _43734_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4760118352; }
		_case_begin_4760118352:;
		{
			(*this)._method_set_i64(static_cast<jule::I64>((*this)._method_read_i64() & _43734_x._method_as_i64()));
		}
		goto _match_end_4760117056;
		_case_end_4760118352:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4760118464; }
		_case_begin_4760118464:;
		{
			(*this)._method_set_u64(static_cast<jule::U64>((*this)._method_read_u64() & _43734_x._method_as_u64()));
		}
		goto _match_end_4760117056;
		_case_end_4760118464:;
		_case_begin_4760117264:;
		{
			return false;
		}
		goto _match_end_4760117056;
		_case_end_4760117264:;
		_match_end_4760117056:;
	}
	return true;
}



inline jule::Bool _11ab854f0_Const::_method_bitwise_or(_11ab854f0_Const _45333_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4760128800; }
		_case_begin_4760128800:;
		{
			(*this)._method_set_i64(static_cast<jule::I64>((*this)._method_read_i64() | _45333_x._method_as_i64()));
		}
		goto _match_end_4760127504;
		_case_end_4760128800:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4760128912; }
		_case_begin_4760128912:;
		{
			(*this)._method_set_u64(static_cast<jule::U64>((*this)._method_read_u64() | _45333_x._method_as_u64()));
		}
		goto _match_end_4760127504;
		_case_end_4760128912:;
		_case_begin_4760127712:;
		{
			return false;
		}
		goto _match_end_4760127504;
		_case_end_4760127712:;
		_match_end_4760127504:;
	}
	return true;
}



inline jule::Bool _11ab854f0_Const::_method_xor(_11ab854f0_Const _46926_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4760139536; }
		_case_begin_4760139536:;
		{
			(*this)._method_set_i64(static_cast<jule::I64>((*this)._method_read_i64() ^ _46926_x._method_as_i64()));
		}
		goto _match_end_4760138240;
		_case_end_4760139536:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4760139648; }
		_case_begin_4760139648:;
		{
			(*this)._method_set_u64(static_cast<jule::U64>((*this)._method_read_u64() ^ _46926_x._method_as_u64()));
		}
		goto _match_end_4760138240;
		_case_end_4760139648:;
		_case_begin_4760138448:;
		{
			return false;
		}
		goto _match_end_4760138240;
		_case_end_4760138448:;
		_match_end_4760138240:;
	}
	return true;
}



inline jule::Bool _11ab854f0_Const::_method_lshift(_11ab854f0_Const _48529_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4760149984; }
		_case_begin_4760149984:;
		{
			jule::I64 _48817_l = (*this)._method_as_i64();
			if (_48817_l < 0LL) {
				jule::U64 _49021_r = _48529_x._method_as_u64();
				(*this)._method_set_i64(_48817_l << _49021_r);
			} else {
				_11ab854f0_lshift_unsig((*this),_48529_x);
			}
		}
		goto _match_end_4760148688;
		_case_end_4760149984:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4760150096; }
		_case_begin_4760150096:;
		{
			_11ab854f0_lshift_unsig((*this),_48529_x);
		}
		goto _match_end_4760148688;
		_case_end_4760150096:;
		_case_begin_4760148896:;
		{
			return false;
		}
		goto _match_end_4760148688;
		_case_end_4760148896:;
		_match_end_4760148688:;
	}
	return true;
}



inline jule::Bool _11ab854f0_Const::_method_rshift(_11ab854f0_Const _50829_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4760162496; }
		_case_begin_4760162496:;
		{
			jule::I64 _51117_l = (*this)._method_as_i64();
			if (_51117_l < 0LL) {
				jule::U64 _51321_r = _50829_x._method_as_u64();
				(*this)._method_set_i64(_51117_l >> _51321_r);
			} else {
				_11ab854f0_rshift_unsig((*this),_50829_x);
			}
		}
		goto _match_end_4760161200;
		_case_end_4760162496:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4760162608; }
		_case_begin_4760162608:;
		{
			_11ab854f0_rshift_unsig((*this),_50829_x);
		}
		goto _match_end_4760161200;
		_case_end_4760162608:;
		_case_begin_4760161408:;
		{
			return false;
		}
		goto _match_end_4760161200;
		_case_end_4760161408:;
		_match_end_4760161200:;
	}
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, const _11ab854f0_Const &_Src) {
	_Stream << "Const{";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _118bb7d70_FieldIns &_Src) {
	_Stream << "FieldIns{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _118bb7d70_StructIns::_method_to_str(void) {
	jule::Str _20717_kind = jule::Str("", 0);
	_20717_kind+=(*this)._field_decl->_field_ident;
	if ((*this)._field_generics.len() > 0LL) {
		_20717_kind+=jule::Str("[", 1);
		{
			auto &__julec_range_expr = (*this)._field_generics;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_11a3c2e70_TypeKind> _118bb7d70_g = *__julec_range_begin;
				_iter_begin_4764672992:;
				{
					_20717_kind+=_118bb7d70_g->_method_to_str();
					_20717_kind+=jule::Str(",", 1);
				}
				_iter_next_4764672992:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _118bb7d70_g = *__julec_range_begin; goto _iter_begin_4764672992; }
				_iter_end_4764672992:;
			}
		}
		_20717_kind=_20717_kind.slice(0LL,static_cast<jule::Int>(_20717_kind.len() - 1LL));
		_20717_kind+=jule::Str("]", 1);
	}
	return _20717_kind;
}



inline jule::Bool _118bb7d70_StructIns::_method_equals(jule::Ref<_11a3c2e70_TypeKind> _22221_other) {
	jule::Ref<_118bb7d70_StructIns> _22313_s = (_22221_other).alloc->_method_strct();
	if ((!(jule::real(_22313_s)))) {
		return false;
	}
	if (((*this)._field_decl).alloc != (_22313_s->_field_decl).alloc) {
		return false;
	}
	if ((*this)._field_generics.len() != _22313_s->_field_generics.len()) {
		return false;
	}
	jule::Int _23617_i = 0LL;
	_iter_begin_4764687312:;
	if (!(_23617_i < (*this)._field_generics.len())) { goto _iter_end_4764687312; }
	{
		if ((!((*this)._field_generics[static_cast<jule::Int>(_23617_i)]->_method_equals(_22313_s->_field_generics[static_cast<jule::Int>(_23617_i)])))) {
			return false;
		}
	}
	_iter_next_4764687312:;
	(_23617_i)++;
	goto _iter_begin_4764687312;
	_iter_end_4764687312:;
	return true;
}



inline jule::Ref<_119099250_Fn> _118bb7d70_StructIns::_method_find_method(jule::Str _25034_ident,jule::Bool _25046_statically) {
	{
		auto &__julec_range_expr = (*this)._field_methods;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_119099250_Fn> _118bb7d70_f = *__julec_range_begin;
			_iter_begin_4764696416:;
			{
				if ((_118bb7d70_f->_field_statically == _25046_statically) && (_118bb7d70_f->_field_ident == _25034_ident)) {
					return _118bb7d70_f;
				}
			}
			_iter_next_4764696416:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _118bb7d70_f = *__julec_range_begin; goto _iter_begin_4764696416; }
			_iter_end_4764696416:;
		}
	}
	return jule::new_ref<_119099250_Fn>();
}



inline jule::Ref<_118bb7d70_FieldIns> _118bb7d70_StructIns::_method_find_field(jule::Str _26133_ident) {
	{
		auto &__julec_range_expr = (*this)._field_fields;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_118bb7d70_FieldIns> _118bb7d70_f = *__julec_range_begin;
			_iter_begin_4764703200:;
			{
				if (_118bb7d70_f->_field_decl->_field_ident == _26133_ident) {
					return _118bb7d70_f;
				}
			}
			_iter_next_4764703200:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _118bb7d70_f = *__julec_range_begin; goto _iter_begin_4764703200; }
			_iter_end_4764703200:;
		}
	}
	return jule::new_ref<_118bb7d70_FieldIns>();
}







std::ostream &operator<<(std::ostream &_Stream, const _118bb7d70_StructIns &_Src) {
	_Stream << "StructIns{";
	_Stream << "checked:" << _Src._field_checked << ", ";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "has_mut:" << _Src._field_has_mut;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _119099250_RetType &_Src) {
	_Stream << "RetType{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "idents:" << _Src._field_idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _119099250_ParamIns::_method_to_str(void) {
	jule::Str _19217_s = jule::Str("", 0);
	if ((*this)._field_decl->_field_mutable) {
		_19217_s+=jule::Str("mut ", 4);
	}
	if ((*this)._field_decl->_field_reference) {
		_19217_s+=jule::Str("&_:", 3);
	}
	if ((*this)._field_decl->_method_is_self()) {
		if ((*this)._field_decl->_method_is_ref()) {
			_19217_s+=jule::Str("&", 1);
		}
		_19217_s+=jule::Str("self", 4);
		return _19217_s;
	}
	if ((*this)._field_decl->_field_variadic) {
		_19217_s+=jule::Str("...", 3);
	}
	if (jule::real((*this)._field_kind)) {
		_19217_s+=(*this)._field_kind->_method_to_str();
	}
	return _19217_s;
}







std::ostream &operator<<(std::ostream &_Stream, const _119099250_ParamIns &_Src) {
	_Stream << "ParamIns{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _119099250_FnIns::_method_to_str(void) {
	jule::Str _23717_s = jule::Str("", 0);
	if ((*this)._field_decl->_field_statically) {
		_23717_s+=jule::Str("static ", 7);
	}
	if ((*this)._field_decl->_field_unsafety) {
		_23717_s+=jule::Str("unsafe ", 7);
	}
	_23717_s+=jule::Str("fn", 2);
	if ((*this)._field_generics.len() > 0LL) {
		_23717_s+=jule::Str("[", 1);
		{
			auto &__julec_range_expr = (*this)._field_generics;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Int _119099250_i = 0;
				jule::Ref<_11a3c2e70_TypeKind> _119099250_t = *__julec_range_begin;
				_iter_begin_4764833424:;
				{
					_23717_s+=_119099250_t->_method_to_str();
					if ((_119099250_i + 1LL) < (*this)._field_generics.len()) {
						_23717_s+=jule::Str(",", 1);
					}
				}
				_iter_next_4764833424:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { ++_119099250_i; _119099250_t = *__julec_range_begin; goto _iter_begin_4764833424; }
				_iter_end_4764833424:;
			}
		}
		_23717_s+=jule::Str("]", 1);
	} else if ((*this)._field_decl->_field_generics.len() > 0LL) {
		_23717_s+=jule::Str("[", 1);
		{
			auto &__julec_range_expr = (*this)._field_decl->_field_generics;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Int _119099250_i = 0;
				jule::Ref<_118d9a790_GenericDecl> _119099250_g = *__julec_range_begin;
				_iter_begin_4764832512:;
				{
					_23717_s+=_119099250_g->_field_ident;
					if ((_119099250_i + 1LL) < (*this)._field_decl->_field_generics.len()) {
						_23717_s+=jule::Str(",", 1);
					}
				}
				_iter_next_4764832512:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { ++_119099250_i; _119099250_g = *__julec_range_begin; goto _iter_begin_4764832512; }
				_iter_end_4764832512:;
			}
		}
		_23717_s+=jule::Str("]", 1);
	}
	_23717_s+=jule::Str("(", 1);
	jule::I64 _27013_n = (*this)._field_params.len();
	if (_27013_n > 0LL) {
		{
			auto &__julec_range_expr = (*this)._field_params;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_119099250_ParamIns> _119099250_p = *__julec_range_begin;
				_iter_begin_4764849504:;
				{
					_23717_s+=_119099250_p->_method_to_str();
					_23717_s+=jule::Str(",", 1);
				}
				_iter_next_4764849504:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _119099250_p = *__julec_range_begin; goto _iter_begin_4764849504; }
				_iter_end_4764849504:;
			}
		}
		_23717_s=_23717_s.slice(0LL,static_cast<jule::Int>(_23717_s.len() - 1LL));
	}
	_23717_s+=jule::Str(")", 1);
	if ((!((*this)._field_decl->_method_is_void()))) {
		_23717_s+=jule::Str(":", 1);
		_23717_s+=(*this)._field_result->_method_to_str();
	}
	return _23717_s;
}



inline jule::Bool _119099250_FnIns::_method_equals(jule::Ref<_11a3c2e70_TypeKind> _28721_other) {
	jule::Ref<_119099250_FnIns> _28813_f = (_28721_other).alloc->_method_fnc();
	if ((!(jule::real(_28813_f)))) {
		return false;
	}
	if ((*this)._field_decl->_field_statically != _28813_f->_field_decl->_field_statically) {
		return false;
	}
	if ((*this)._field_decl->_field_unsafety != _28813_f->_field_decl->_field_unsafety) {
		return false;
	}
	if ((*this)._field_generics.len() != _28813_f->_field_generics.len()) {
		return false;
	}
	if ((*this)._field_decl->_method_is_void() != _28813_f->_field_decl->_method_is_void()) {
		return false;
	}
	jule::Int _30917_i = 0LL;
	_iter_begin_4764868000:;
	if (!(_30917_i < (*this)._field_generics.len())) { goto _iter_end_4764868000; }
	{
		if ((!((*this)._field_generics[static_cast<jule::Int>(_30917_i)]->_method_equals(_28813_f->_field_generics[static_cast<jule::Int>(_30917_i)])))) {
			return false;
		}
	}
	_iter_next_4764868000:;
	(_30917_i)++;
	goto _iter_begin_4764868000;
	_iter_end_4764868000:;
	jule::Fn<jule::Bool(jule::Ref<_119099250_ParamIns>,jule::Ref<_119099250_ParamIns>)> _31613_check_params = jule::Fn<jule::Bool(jule::Ref<_119099250_ParamIns>,jule::Ref<_119099250_ParamIns>)>([=](jule::Ref<_119099250_ParamIns> _31631_p1,jule::Ref<_119099250_ParamIns> _31646_p2) mutable -> jule::Bool {
		if (_31631_p1->_field_decl->_field_mutable != _31646_p2->_field_decl->_field_mutable) {
			return false;
		}
		if (_31631_p1->_field_decl->_method_is_self()) {
			if ((!(_31646_p2->_field_decl->_method_is_self()))) {
				return false;
			}
			if (_31631_p1->_field_decl->_method_is_ref() != _31646_p2->_field_decl->_method_is_ref()) {
				return false;
			}
			return true;
		}
		if (_31631_p1->_field_decl->_field_reference != _31646_p2->_field_decl->_field_reference) {
			return false;
		}
		if (_31631_p1->_field_decl->_field_variadic != _31646_p2->_field_decl->_field_variadic) {
			return false;
		}
		return _31631_p1->_field_kind->_method_equals(_31646_p2->_field_kind);
	});
	_30917_i=0LL;
	_iter_begin_4764896960:;
	if (!(_30917_i < (*this)._field_params.len())) { goto _iter_end_4764896960; }
	{
		if ((!(_31613_check_params((*this)._field_params[static_cast<jule::Int>(_30917_i)],_28813_f->_field_params[static_cast<jule::Int>(_30917_i)])))) {
			return false;
		}
	}
	_iter_next_4764896960:;
	(_30917_i)++;
	goto _iter_begin_4764896960;
	_iter_end_4764896960:;
	if ((!((*this)._field_decl->_method_is_void()))) {
		if ((!((*this)._field_result->_method_equals(_28813_f->_field_result)))) {
			return false;
		}
	}
	return true;
}



inline jule::Bool _119099250_FnIns::_method_is_builtin(void) {
	return (*this)._field_caller != nullptr;
}



inline jule::Bool _119099250_FnIns::_method_is_anon(void) {
	return (*this)._field_anon || (jule::real((*this)._field_decl) && (*this)._field_decl->_method_is_anon());
}







std::ostream &operator<<(std::ostream &_Stream, const _119099250_FnIns &_Src) {
	_Stream << "FnIns{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "params:" << _Src._field_params << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "caller:" << _Src._field_caller << ", ";
	_Stream << "reloaded:" << _Src._field_reloaded << ", ";
	_Stream << "anon:" << _Src._field_anon;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_13feceeb0_SymbolBuilder> _13feceeb0_SymbolBuilder::_method_get_root(void) {
	jule::Ref<_13feceeb0_SymbolBuilder> _31017_root = this->self;
	_iter_begin_4764925200:;
	if (!(jule::real(_31017_root->_field_owner))) { goto _iter_end_4764925200; }
	{
		_31017_root=_31017_root->_field_owner;
	}
	_iter_next_4764925200:;
	goto _iter_begin_4764925200;
	_iter_end_4764925200:;
	return _31017_root;
}



inline void _13feceeb0_SymbolBuilder::_method_push_err(_11911a8a0_Token _31727_token,jule::Str _31741_key,jule::Slice<jule::Any> _31751_args) {
	(*this)._field_errors=append((*this)._field_errors,jule::Slice<_13fe81720_Log>({_13fe81720_Log(1LLU,_31727_token._field_row,_31727_token._field_column,_31727_token._field_file->_method_path(),_13fe9efa0_errorf(_31741_key,_31751_args))}));
}



inline jule::Bool _13feceeb0_SymbolBuilder::_method_check_cpp_use_decl_path(jule::Ref<_118d9a790_UseDecl> _32742_decl) {
	jule::Bool _32760_ok = jule::Bool();
	if (_13fe20550_is_std_header_path(_32742_decl->_field_link_path)) {
		_32760_ok = true;
		return _32760_ok;
	}
	jule::Str _33213_ext = _1410391e0_ext(_32742_decl->_field_link_path);
	if ((!(_13fe20550_is_valid_header_ext(_33213_ext))) && (!(_13fe20550_is_valid_cpp_ext(_33213_ext)))) {
		(*this)._method_push_err(_32742_decl->_field_token,jule::Str("invalid_cpp_ext", 15),jule::Slice<jule::Any>({jule::Any(_33213_ext)}));
		_32760_ok = false;
		return _32760_ok;
	}
	jule::Ref<_118db5e40_Status> _33814_info;
	jule::Int _33820_err;
	std::tie(_33814_info,_33820_err) = _118d9e780_stat(_32742_decl->_field_link_path);
	if ((_33820_err != 0LLU) || _33814_info->_method_is_dir()) {
		(*this)._method_push_err(_32742_decl->_field_token,jule::Str("use_not_found", 13),jule::Slice<jule::Any>({jule::Any(_32742_decl->_field_link_path)}));
		_32760_ok = false;
		return _32760_ok;
	}
	_32760_ok = true;
	return _32760_ok;
}



inline jule::Ref<_11a0945e0_ImportInfo> _13feceeb0_SymbolBuilder::_method_build_cpp_header_import(jule::Ref<_118d9a790_UseDecl> _34846_decl) {
	jule::Str _34917_path = _34846_decl->_field_link_path;
	if ((!(_13fe20550_is_std_header_path(_34846_decl->_field_link_path)))) {
		jule::Bool _35221_ok = (*this)._method_check_cpp_use_decl_path(_34846_decl);
		if ((!(_35221_ok))) {
			return jule::new_ref<_11a0945e0_ImportInfo>();
		}
		std::tie(_34917_path,_35221_ok) = _1410391e0_abs(_34846_decl->_field_link_path);
		if ((!(_35221_ok))) {
			(*this)._method_push_err(_34846_decl->_field_token,jule::Str("use_not_found", 13),jule::Slice<jule::Any>({jule::Any(_34846_decl->_field_link_path)}));
		}
	}
	return jule::new_struct<_11a0945e0_ImportInfo>(new( std::nothrow ) _11a0945e0_ImportInfo(_34846_decl->_field_token,_34917_path,_34846_decl->_field_link_path,jule::Str("", 0),jule::Bool(),true,false,jule::Bool(),jule::Slice<_11911a8a0_Token>(),jule::new_ref<_11a0945e0_Package>()));
}



inline jule::Ref<_11a0945e0_ImportInfo> _13feceeb0_SymbolBuilder::_method_build_std_import(jule::Ref<_118d9a790_UseDecl> _37539_decl) {
	jule::Str _37617_path = _37539_decl->_field_link_path.slice(static_cast<jule::Int>(jule::Str("std::", 5).len()));
	_37617_path=_37617_path.replace(jule::Str("::", 2),static_cast<jule::Str>(47LL),-1LL);
	_37617_path=_1410391e0_join(jule::Slice<jule::Str>({_1410197f0_PATH_STDLIB,_37617_path}));
	jule::Bool _37920_ok;
	std::tie(_37617_path,_37920_ok) = _1410391e0_abs(_37617_path);
	if ((!(_37920_ok))) {
		(*this)._method_push_err(_37539_decl->_field_token,jule::Str("use_not_found", 13),jule::Slice<jule::Any>({jule::Any(_37539_decl->_field_link_path)}));
		return jule::new_ref<_11a0945e0_ImportInfo>();
	}
	jule::Ref<_118db5e40_Status> _38514_info;
	jule::Int _38520_err;
	std::tie(_38514_info,_38520_err) = _118d9e780_stat(_37617_path);
	if ((_38520_err != 0LLU) || (!(_38514_info->_method_is_dir()))) {
		(*this)._method_push_err(_37539_decl->_field_token,jule::Str("use_not_found", 13),jule::Slice<jule::Any>({jule::Any(_37539_decl->_field_link_path)}));
		return jule::new_ref<_11a0945e0_ImportInfo>();
	}
	jule::Str _39313_ident = _37539_decl->_field_link_path.slice(static_cast<jule::Int>(_37539_decl->_field_link_path.rfind(jule::Str("::", 2)) + 1LL));
	return jule::new_struct<_11a0945e0_ImportInfo>(new( std::nothrow ) _11a0945e0_ImportInfo(_37539_decl->_field_token,_37617_path,_37539_decl->_field_link_path,_39313_ident,jule::Bool(),false,true,_37539_decl->_field_full,jule::Slice<_11911a8a0_Token>(),jule::new_struct<_11a0945e0_Package>(new( std::nothrow ) _11a0945e0_Package(nullptr))));
}



inline jule::Ref<_11a0945e0_ImportInfo> _13feceeb0_SymbolBuilder::_method_build_ident_import(jule::Ref<_118d9a790_UseDecl> _40942_decl) {
	jule::Str _41017_path = _40942_decl->_field_link_path;
	_41017_path=_41017_path.replace(jule::Str("::", 2),static_cast<jule::Str>(47LL),-1LL);
	_41017_path=_1410391e0_join(jule::Slice<jule::Str>({this->self->_method_get_root()->_field_ast->_field_file->_method_dir(),_41017_path}));
	jule::Bool _41420_ok;
	std::tie(_41017_path,_41420_ok) = _1410391e0_abs(_41017_path);
	if ((!(_41420_ok))) {
		this->self->_method_push_err(_40942_decl->_field_token,jule::Str("use_not_found", 13),jule::Slice<jule::Any>({jule::Any(_40942_decl->_field_link_path)}));
		return jule::new_ref<_11a0945e0_ImportInfo>();
	}
	jule::Ref<_118db5e40_Status> _42014_info;
	jule::Int _42020_err;
	std::tie(_42014_info,_42020_err) = _118d9e780_stat(_41017_path);
	if ((_42020_err != 0LLU) || (!(_42014_info->_method_is_dir()))) {
		this->self->_method_push_err(_40942_decl->_field_token,jule::Str("use_not_found", 13),jule::Slice<jule::Any>({jule::Any(_40942_decl->_field_link_path)}));
		return jule::new_ref<_11a0945e0_ImportInfo>();
	}
	jule::Str _42813_ident = _40942_decl->_field_link_path.slice(static_cast<jule::Int>(_40942_decl->_field_link_path.rfind(jule::Str("::", 2)) + 1LL));
	return jule::new_struct<_11a0945e0_ImportInfo>(new( std::nothrow ) _11a0945e0_ImportInfo(_40942_decl->_field_token,_41017_path,_40942_decl->_field_link_path,_42813_ident,jule::Bool(),false,false,_40942_decl->_field_full,jule::Slice<_11911a8a0_Token>(),jule::new_struct<_11a0945e0_Package>(new( std::nothrow ) _11a0945e0_Package(nullptr))));
}



inline jule::Ref<_11a0945e0_ImportInfo> _13feceeb0_SymbolBuilder::_method_build_import(jule::Ref<_118d9a790_UseDecl> _44436_decl) {
	{
		if (!((_44436_decl->_field_cpp_linked))) { goto _case_end_5098871504; }
		_case_begin_5098871504:;
		{
			return this->self->_method_build_cpp_header_import(_44436_decl);
		}
		goto _match_end_5098554672;
		_case_end_5098871504:;
		if (!((_44436_decl->_field_std))) { goto _case_end_5098871248; }
		_case_begin_5098871248:;
		{
			return this->self->_method_build_std_import(_44436_decl);
		}
		goto _match_end_5098554672;
		_case_end_5098871248:;
		_case_begin_4756610800:;
		{
			return this->self->_method_build_ident_import(_44436_decl);
		}
		goto _match_end_5098554672;
		_case_end_4756610800:;
		_match_end_5098554672:;
	}
}



inline jule::Bool _13feceeb0_SymbolBuilder::_method_check_duplicate_use_decl(jule::Ref<_11a0945e0_ImportInfo> _45243_pkg) {
	jule::Bool _45263_ok = jule::Bool();
	jule::Ref<_11a0945e0_ImportInfo> _45413_lpkg = (*this)._field_table->_method_select_package(jule::Fn<jule::Bool(jule::Ref<_11a0945e0_ImportInfo>)>([=](jule::Ref<_11a0945e0_ImportInfo> _45449_spkg) mutable -> jule::Bool {
		return _45243_pkg->_field_path == _45449_spkg->_field_path;
	}));
	if ((!(jule::real(_45413_lpkg)))) {
		_45263_ok = true;
		return _45263_ok;
	}
	(*this)._method_push_err(_45243_pkg->_field_token,jule::Str("duplicate_use_decl", 18),jule::Slice<jule::Any>({jule::Any(_45243_pkg->_field_link_path)}));
	_45263_ok = false;
	return _45263_ok;
}



inline void _13feceeb0_SymbolBuilder::_method_impl_import_selections(jule::Ref<_11a0945e0_ImportInfo> _46545_imp,jule::Ref<_118d9a790_UseDecl> _46567_decl) {
	{
		auto &__julec_range_expr = _46567_decl->_field_selected;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			_11911a8a0_Token _13feceeb0_ident = *__julec_range_begin;
			_iter_begin_4756630608:;
			{
				if (_46545_imp->_method_exist_ident(_13feceeb0_ident._field_kind)) {
					(*this)._method_push_err(_13feceeb0_ident,jule::Str("duplicated_import_selection", 27),jule::Slice<jule::Any>({jule::Any(_13feceeb0_ident._field_kind)}));
					goto _iter_next_4756630608;
				}
				_46545_imp->_field_selected=append(_46545_imp->_field_selected,jule::Slice<_11911a8a0_Token>({_13feceeb0_ident}));
			}
			_iter_next_4756630608:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _13feceeb0_ident = *__julec_range_begin; goto _iter_begin_4756630608; }
			_iter_end_4756630608:;
		}
	}
}



inline jule::Str _13feceeb0_SymbolBuilder::_method_get_as_link_path(jule::Str _47640_path) {
	if (_47640_path.has_prefix(_1410197f0_PATH_STDLIB)) {
		_47640_path=_47640_path.slice(static_cast<jule::Int>(_1410197f0_PATH_STDLIB.len()));
		return jule::Str("std", 3) + _47640_path.replace(static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL);
	}
	jule::Str _48214_root;
	std::tie(_48214_root,std::ignore) = _1410391e0_abs(this->self->_method_get_root()->_field_ast->_field_file->_method_dir());
	_47640_path=_47640_path.slice(static_cast<jule::Int>(_48214_root.len()));
	if (_47640_path[static_cast<jule::Int>(0LL)] == 47LL) {
		_47640_path=_47640_path.slice(static_cast<jule::Int>(1LL));
	}
	return _47640_path.replace(static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL);
}



inline void _13feceeb0_SymbolBuilder::_method_push_cycle_error(jule::Ref<_13feceeb0_SymbolBuilder> _49036_sb,jule::Str _49056_path,jule::Str& _49072_message) {
	
	jule::Str _49313_refers_to = _13fe9efa0_errorf(jule::Str("refers_to", 9),jule::Slice<jule::Any>({jule::Any(this->self->_method_get_as_link_path(_49036_sb->_field_table->_field_file->_method_dir())),jule::Any(this->self->_method_get_as_link_path(_49056_path))}));
	_49072_message=((_13feceeb0_str_repeat(jule::Str(" ", 1),4LL) + _49313_refers_to) + jule::Str("\n", 1)) + _49072_message;
}



inline void _13feceeb0_SymbolBuilder::_method_push_cross_cycle_error(jule::Ref<_13feceeb0_SymbolBuilder> _50042_target,jule::Ref<_11a0945e0_ImportInfo> _50066_imp,_11911a8a0_Token _50084_error_token) {
	jule::Str _50117_message = jule::Str("", 0);
	this->self->_method_push_cycle_error(this->self,_50066_imp->_field_path,_50117_message);
	jule::Ref<_13feceeb0_SymbolBuilder> _50517_owner = this->self->_field_owner;
	jule::Ref<_13feceeb0_SymbolBuilder> _50617_old = this->self;
	_iter_begin_4756676496:;
	if (!(jule::real(_50517_owner->_field_owner))) { goto _iter_end_4756676496; }
	{
		this->self->_method_push_cycle_error(_50617_old->_field_owner,_50617_old->_field_table->_field_file->_method_dir(),_50117_message);
		if ((_50517_owner->_field_owner).alloc == (_50042_target).alloc) {
			this->self->_method_push_cycle_error(_50042_target,_50517_owner->_field_table->_field_file->_method_dir(),_50117_message);
			goto _iter_end_4756676496;
		}
		_50617_old=_50517_owner;
		_50517_owner=_50517_owner->_field_owner;
	}
	_iter_next_4756676496:;
	goto _iter_begin_4756676496;
	_iter_end_4756676496:;
	this->self->_method_push_err(_50084_error_token,jule::Str("pkg_illegal_cross_cycle", 23),jule::Slice<jule::Any>({jule::Any(_50117_message)}));
}



inline jule::Bool _13feceeb0_SymbolBuilder::_method_check_import_cycles(jule::Ref<_11a0945e0_ImportInfo> _52339_imp,jule::Ref<_118d9a790_UseDecl> _52357_decl) {
	if (_52339_imp->_field_path == this->self->_field_table->_field_file->_method_dir()) {
		this->self->_method_push_err(_52357_decl->_field_token,jule::Str("pkg_illegal_cycle_refers_itself", 31),jule::Slice<jule::Any>({jule::Any(this->self->_method_get_as_link_path(_52339_imp->_field_path))}));
		return false;
	}
	if ((!(jule::real(this->self->_field_owner)))) {
		return true;
	}
	if (this->self->_field_owner->_field_table->_field_file->_method_dir() == _52339_imp->_field_path) {
		this->self->_method_push_cross_cycle_error(this->self->_field_owner,_52339_imp,_52357_decl->_field_token);
		return false;
	}
	jule::Ref<_13feceeb0_SymbolBuilder> _53817_owner = this->self->_field_owner;
	_julec_label_iter:;
	if (_53817_owner->_field_table->_field_file->_method_dir() == _52339_imp->_field_path) {
		this->self->_method_push_cross_cycle_error(_53817_owner,_52339_imp,_52357_decl->_field_token);
		return false;
	}
	if (jule::real(_53817_owner->_field_owner)) {
		_53817_owner=_53817_owner->_field_owner;
		goto _julec_label_iter;
	}
	return true;
}



inline jule::Bool _13feceeb0_SymbolBuilder::_method_import_package(jule::Ref<_11a0945e0_ImportInfo> _55338_imp,jule::Ref<_118d9a790_UseDecl> _55360_decl) {
	jule::Bool _55378_ok = jule::Bool();
	if (_55338_imp->_field_cpp_linked) {
		_55378_ok = true;
		return _55378_ok;
	}
	jule::Ref<_11a0945e0_ImportInfo> _55817_port = this->self->_field_importer.get()._method_get_import(_55338_imp->_field_path);
	if (jule::real(_55817_port)) {
		_55338_imp->_field_package=_55817_port->_field_package;
		_55338_imp->_field_duplicate=true;
	} else {
		if ((!(this->self->_method_check_import_cycles(_55338_imp,_55360_decl)))) {
			_55378_ok = false;
			return _55378_ok;
		}
		jule::Slice<jule::Ref<_118d8a140_Ast>> _56722_asts;
		jule::Slice<_13fe81720_Log> _56728_errors;
		std::tie(_56722_asts,_56728_errors) = this->self->_field_importer.get()._method_import_package(_55338_imp->_field_path);
		if (_56728_errors.len() > 0LL) {
			this->self->_field_errors=append(this->self->_field_errors,_56728_errors);
			_55378_ok = false;
			return _55378_ok;
		}
		{
			auto &__julec_range_expr = _56722_asts;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_118d8a140_Ast> _13feceeb0_ast = *__julec_range_begin;
				_iter_begin_4756734400:;
				{
					jule::Ref<_11a3c2dc0_SymbolTable> _57426_table;
					jule::Slice<_13fe81720_Log> _57433_errors;
					std::tie(_57426_table,_57433_errors) = _11a3c6730_build_symbols(_13feceeb0_ast,this->self->_field_importer,this->self);
					if (_57433_errors.len() > 0LL) {
						this->self->_field_errors=append(this->self->_field_errors,_57433_errors);
						this->self->_method_push_err(_55338_imp->_field_token,jule::Str("used_package_has_errors", 23),jule::Slice<jule::Any>({jule::Any(_55338_imp->_field_link_path)}));
						_55378_ok = false;
						return _55378_ok;
					}
					_55338_imp->_field_package->_field_files=append(_55338_imp->_field_package->_field_files,jule::Slice<jule::Ref<_11a3c2dc0_SymbolTable>>({_57426_table}));
				}
				_iter_next_4756734400:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _13feceeb0_ast = *__julec_range_begin; goto _iter_begin_4756734400; }
				_iter_end_4756734400:;
			}
		}
	}
	this->self->_method_impl_import_selections(_55338_imp,_55360_decl);
	_55378_ok = true;
	return _55378_ok;
}



inline jule::Ref<_11a0945e0_ImportInfo> _13feceeb0_SymbolBuilder::_method_import_use_decl(jule::Ref<_118d9a790_UseDecl> _59239_decl) {
	jule::Ref<_11a0945e0_ImportInfo> _59317_imp = this->self->_method_build_import(_59239_decl);
	if ((!(jule::real(_59317_imp)))) {
		return jule::new_ref<_11a0945e0_ImportInfo>();
	}
	jule::Bool _59917_ok = this->self->_method_check_duplicate_use_decl(_59317_imp);
	if ((!(_59917_ok))) {
		return jule::new_ref<_11a0945e0_ImportInfo>();
	}
	_59917_ok=this->self->_method_import_package(_59317_imp,_59239_decl);
	this->self->_field_table->_field_imports._method_push(_59317_imp);
	if (_59917_ok) {
		this->self->_field_importer.get()._method_imported(_59317_imp);
		return _59317_imp;
	}
	return jule::new_ref<_11a0945e0_ImportInfo>();
}



inline void _13feceeb0_SymbolBuilder::_method_import_use_decls(void) {
	jule::Int _61417_i = 0LL;
	_iter_begin_4756765632:;
	if (!(_61417_i < this->self->_field_ast->_field_use_decls._method_len())) { goto _iter_end_4756765632; }
	{
		jule::Ref<_118d9a790_UseDecl> _61621_decl = this->self->_field_ast->_field_use_decls._method_at(_61417_i);
		this->self->_method_import_use_decl(_61621_decl);
		if (this->self->_field_errors.len() > 0LL) {
			goto _iter_end_4756765632;
		}
	}
	_iter_next_4756765632:;
	(_61417_i)++;
	goto _iter_begin_4756765632;
	_iter_end_4756765632:;
}



inline void _13feceeb0_SymbolBuilder::_method_append_decl(_118d9a790_Node _62634_decl) {
	{
		auto &_match_expr{ _62634_decl._field_data };
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_TypeAliasDecl>>())) { goto _case_end_4756777136; }
		_case_begin_4756777136:;
		{
			jule::Ref<_11a3c2e70_TypeAlias> _62921_ta = _13feceeb0_build_type_alias(_62634_decl._field_data.operator jule::Ref<_118d9a790_TypeAliasDecl>());
			(*this)._field_table->_field_type_aliases._method_push(_62921_ta);
		}
		goto _match_end_4756774816;
		_case_end_4756777136:;
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_StructDecl>>())) { goto _case_end_4756776416; }
		_case_begin_4756776416:;
		{
			jule::Ref<_118bb7d70_Struct> _63321_srct = _13feceeb0_build_struct(_62634_decl._field_data.operator jule::Ref<_118d9a790_StructDecl>());
			(*this)._field_table->_field_structs._method_push(_63321_srct);
		}
		goto _match_end_4756774816;
		_case_end_4756776416:;
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_FnDecl>>())) { goto _case_end_4756776528; }
		_case_begin_4756776528:;
		{
			jule::Ref<_119099250_Fn> _63721_f = _13feceeb0_build_fn(_62634_decl._field_data.operator jule::Ref<_118d9a790_FnDecl>());
			(*this)._field_table->_field_funcs._method_push(_63721_f);
		}
		goto _match_end_4756774816;
		_case_end_4756776528:;
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_TraitDecl>>())) { goto _case_end_4756775936; }
		_case_begin_4756775936:;
		{
			jule::Ref<_118e2b060_Trait> _64121_t = _13feceeb0_build_trait(_62634_decl._field_data.operator jule::Ref<_118d9a790_TraitDecl>());
			(*this)._field_table->_field_traits._method_push(_64121_t);
		}
		goto _match_end_4756774816;
		_case_end_4756775936:;
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_VarDecl>>())) { goto _case_end_4756776048; }
		_case_begin_4756776048:;
		{
			jule::Ref<_11a245f20_Var> _64521_v = _13feceeb0_build_var(_62634_decl._field_data.operator jule::Ref<_118d9a790_VarDecl>());
			(*this)._field_table->_field_vars._method_push(_64521_v);
		}
		goto _match_end_4756774816;
		_case_end_4756776048:;
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_EnumDecl>>())) { goto _case_end_4756776160; }
		_case_begin_4756776160:;
		{
			jule::Ref<_11a089b40_Enum> _64921_e = _13feceeb0_build_enum(_62634_decl._field_data.operator jule::Ref<_118d9a790_EnumDecl>());
			(*this)._field_table->_field_enums._method_push(_64921_e);
		}
		goto _match_end_4756774816;
		_case_end_4756776160:;
		_case_begin_4756775632:;
		{
			(*this)._method_push_err(_62634_decl._field_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4756774816;
		_case_end_4756775632:;
		_match_end_4756774816:;
	}
}



inline void _13feceeb0_SymbolBuilder::_method_append_decls(void) {
	jule::Int _65817_i = 0LL;
	_iter_begin_4756796960:;
	if (!(_65817_i < (*this)._field_ast->_field_decls._method_len())) { goto _iter_end_4756796960; }
	{
		_118d9a790_Node _66021_decl = (*this)._field_ast->_field_decls._method_at(_65817_i);
		(*this)._method_append_decl(_66021_decl);
	}
	_iter_next_4756796960:;
	(_65817_i)++;
	goto _iter_begin_4756796960;
	_iter_end_4756796960:;
}



inline void _13feceeb0_SymbolBuilder::_method_append_impls(void) {
	(*this)._field_table->_field_impls=_1192e4e90_Vector_15::_static_method_new(static_cast<jule::Int>((*this)._field_ast->_field_impls._method_len()));
	jule::Int _66717_i = 0LL;
	_iter_begin_4756817104:;
	if (!(_66717_i < (*this)._field_ast->_field_impls._method_len())) { goto _iter_end_4756817104; }
	{
		jule::Ref<_118d9a790_Impl> _66921_decl = (*this)._field_ast->_field_impls._method_at(_66717_i);
		(*this)._field_table->_field_impls._method_push(_13feceeb0_build_impl(_66921_decl));
	}
	_iter_next_4756817104:;
	(_66717_i)++;
	goto _iter_begin_4756817104;
	_iter_end_4756817104:;
}



inline void _13feceeb0_SymbolBuilder::_method_push_directive_pass(jule::Ref<_118d9a790_Directive> _67442_d) {
	_13feceeb0_Pass _67517_pass = _13feceeb0_Pass(_67442_d->_field_token,jule::Str());
	{
		auto &__julec_range_expr = _67442_d->_field_args;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _13feceeb0_arg = *__julec_range_begin;
			_iter_begin_4756828528:;
			{
				if (_13feceeb0_arg != jule::Str("", 0)) {
					_67517_pass._field_text+=_13feceeb0_arg + jule::Str(" ", 1);
				}
			}
			_iter_next_4756828528:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _13feceeb0_arg = *__julec_range_begin; goto _iter_begin_4756828528; }
			_iter_end_4756828528:;
		}
	}
	_67517_pass._field_text=_67517_pass._field_text.trim(jule::Str(" \n\r\t\v", 5));
	(*this)._field_table->_field_passes._method_push(_67517_pass);
}



inline void _13feceeb0_SymbolBuilder::_method_append_top_directives(void) {
	jule::Int _68817_i = 0LL;
	_iter_begin_4756824960:;
	if (!(_68817_i < (*this)._field_ast->_field_top_directives._method_len())) { goto _iter_end_4756824960; }
	{
		jule::Ref<_118d9a790_Directive> _69021_d = (*this)._field_ast->_field_top_directives._method_at(_68817_i);
		{
			auto &_match_expr{ _69021_d->_field_tag };
			if (!((jule::Str("pass", 4)) == _match_expr)) { goto _case_end_4756841568; }
			_case_begin_4756841568:;
			{
				(*this)._method_push_directive_pass(_69021_d);
			}
			goto _match_end_4756840240;
			_case_end_4756841568:;
			_match_end_4756840240:;
		}
	}
	_iter_next_4756824960:;
	(_68817_i)++;
	goto _iter_begin_4756824960;
	_iter_end_4756824960:;
}



inline void _13feceeb0_SymbolBuilder::_method_build(void) {
	this->self->_field_table=jule::new_struct<_11a3c2dc0_SymbolTable>(new( std::nothrow ) _11a3c2dc0_SymbolTable(this->self->_field_ast->_field_file,_1192e4e90_Vector_6(),_1192e4e90_Vector_7(),_1192e4e90_Vector_9(),_1192e4e90_Vector_10(),_1192e4e90_Vector_12(),_1192e4e90_Vector_11(),_1192e4e90_Vector_13(),_1192e4e90_Vector_14(),_1192e4e90_Vector_15()));
	this->self->_method_append_top_directives();
	this->self->_method_import_use_decls();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_append_decls();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_append_impls();
}







std::ostream &operator<<(std::ostream &_Stream, const _13feceeb0_SymbolBuilder &_Src) {
	_Stream << "SymbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11a093930_If &_Src) {
	_Stream << "If{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11a093930_Else &_Src) {
	_Stream << "Else{";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11a093930_Conditional &_Src) {
	_Stream << "Conditional{";
	_Stream << "elifs:" << _Src._field_elifs << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11a093930_InfIter &_Src) {
	_Stream << "InfIter{";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _11a093930_WhileIter::_method_is_while_next(void) {
	return (*this)._field_next != nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _11a093930_WhileIter &_Src) {
	_Stream << "WhileIter{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "next:" << _Src._field_next << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11a093930_RangeIter &_Src) {
	_Stream << "RangeIter{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "key_a:" << _Src._field_key_a << ", ";
	_Stream << "key_b:" << _Src._field_key_b;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11a093930_ContSt &_Src) {
	_Stream << "ContSt{";
	_Stream << "it:" << _Src._field_it;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11a093930_BreakSt &_Src) {
	_Stream << "BreakSt{";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "mtch:" << _Src._field_mtch;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11a093930_Label &_Src) {
	_Stream << "Label{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11a093930_GotoSt &_Src) {
	_Stream << "GotoSt{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11a093930_Postfix &_Src) {
	_Stream << "Postfix{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11a093930_Assign &_Src) {
	_Stream << "Assign{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11a093930_MultiAssign &_Src) {
	_Stream << "MultiAssign{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11a093930_Match &_Src) {
	_Stream << "Match{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "type_match:" << _Src._field_type_match << ", ";
	_Stream << "cases:" << _Src._field_cases << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _11a093930_Case::_method_is_default(void) {
	return (*this)._field_exprs == nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _11a093930_Case &_Src) {
	_Stream << "Case{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "next:" << _Src._field_next;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11a093930_FallSt &_Src) {
	_Stream << "FallSt{";
	_Stream << "dest_case:" << _Src._field_dest_case;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11a093930_RetSt &_Src) {
	_Stream << "RetSt{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11a093930_Recover &_Src) {
	_Stream << "Recover{";
	_Stream << "handler:" << _Src._field_handler << ", ";
	_Stream << "handler_expr:" << _Src._field_handler_expr << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11a093930_ScopeGoto &_Src) {
	_Stream << "ScopeGoto{";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_11a0945e0_ImportInfo> _11a093930_ScopeChecker::_method_find_package(jule::Str _36731_ident) {
	return (*this)._field_s->_method_find_package(_36731_ident);
}



inline jule::Ref<_11a0945e0_ImportInfo> _11a093930_ScopeChecker::_method_select_package(jule::Fn<jule::Bool(jule::Ref<_11a0945e0_ImportInfo>)> _37733_selector) {
	return (*this)._field_s->_method_select_package(_37733_selector);
}



inline jule::Ref<_11a245f20_Var> _11a093930_ScopeChecker::_method_find_var(jule::Str _38827_ident,jule::Bool _38839_cpp_linked) {
	
	jule::Ref<_11a245f20_Var> _39117_v = (*this)._field_table->_method___find_var(_38827_ident,_38839_cpp_linked,true);
	if (jule::real(_39117_v)) {
		return _39117_v;
	}
	jule::Ref<_11a093930_ScopeChecker> _39617_parent = (*this)._field_parent;
	_iter_begin_4756913168:;
	if (!(jule::real(_39617_parent))) { goto _iter_end_4756913168; }
	{
		jule::Ref<_11a245f20_Var> _39821_v = _39617_parent->_field_table->_method___find_var(_38827_ident,_38839_cpp_linked,true);
		if (jule::real(_39821_v)) {
			return _39821_v;
		}
		_39617_parent=_39617_parent->_field_parent;
	}
	_iter_next_4756913168:;
	goto _iter_begin_4756913168;
	_iter_end_4756913168:;
	return (*this)._field_s->_method_find_var(_38827_ident,_38839_cpp_linked);
}



inline jule::Ref<_11a3c2e70_TypeAlias> _11a093930_ScopeChecker::_method_find_type_alias(jule::Str _41534_ident,jule::Bool _41546_cpp_linked) {
	
	jule::Ref<_11a3c2e70_TypeAlias> _41817_ta = (*this)._field_table->_method___find_type_alias(_41534_ident,_41546_cpp_linked,true);
	if (jule::real(_41817_ta)) {
		return _41817_ta;
	}
	jule::Ref<_11a093930_ScopeChecker> _42317_parent = (*this)._field_parent;
	_iter_begin_4756929936:;
	if (!(jule::real(_42317_parent))) { goto _iter_end_4756929936; }
	{
		jule::Ref<_11a3c2e70_TypeAlias> _42521_ta = _42317_parent->_field_table->_method___find_type_alias(_41534_ident,_41546_cpp_linked,true);
		if (jule::real(_42521_ta)) {
			return _42521_ta;
		}
		_42317_parent=_42317_parent->_field_parent;
	}
	_iter_next_4756929936:;
	goto _iter_begin_4756929936;
	_iter_end_4756929936:;
	return (*this)._field_s->_method_find_type_alias(_41534_ident,_41546_cpp_linked);
}



inline jule::Ref<_118bb7d70_Struct> _11a093930_ScopeChecker::_method_find_struct(jule::Str _44030_ident,jule::Bool _44042_cpp_linked) {
	return (*this)._field_s->_method_find_struct(_44030_ident,_44042_cpp_linked);
}



inline jule::Ref<_119099250_Fn> _11a093930_ScopeChecker::_method_find_fn(jule::Str _44926_ident,jule::Bool _44938_cpp_linked) {
	return (*this)._field_s->_method_find_fn(_44926_ident,_44938_cpp_linked);
}



inline jule::Ref<_118e2b060_Trait> _11a093930_ScopeChecker::_method_find_trait(jule::Str _45829_ident) {
	return (*this)._field_s->_method_find_trait(_45829_ident);
}



inline jule::Ref<_11a089b40_Enum> _11a093930_ScopeChecker::_method_find_enum(jule::Str _46728_ident) {
	return (*this)._field_s->_method_find_enum(_46728_ident);
}



inline jule::Bool _11a093930_ScopeChecker::_method_is_unsafe(void) {
	jule::Ref<_11a093930_ScopeChecker> _47517_scope = this->self;
	_julec_label_iter:;
	if (_47517_scope->_field_scope->_field_unsafety) {
		return true;
	}
	if (jule::real(_47517_scope->_field_parent)) {
		_47517_scope=_47517_scope->_field_parent;
		goto _julec_label_iter;
	}
	return false;
}



inline jule::Bool _11a093930_ScopeChecker::_method_is_root(void) {
	return (!(jule::real((*this)._field_parent))) || jule::real((*this)._field_owner);
}



inline jule::Ref<_11a093930_ScopeChecker> _11a093930_ScopeChecker::_method_get_root(void) {
	jule::Ref<_11a093930_ScopeChecker> _49717_root = this->self;
	_iter_begin_4756976416:;
	if (!(jule::real(_49717_root->_field_parent) && (!(jule::real(_49717_root->_field_owner))))) { goto _iter_end_4756976416; }
	{
		_49717_root=_49717_root->_field_parent;
	}
	_iter_next_4756976416:;
	goto _iter_begin_4756976416;
	_iter_end_4756976416:;
	return _49717_root;
}



inline jule::Ref<_11a093930_Label> _11a093930_ScopeChecker::_method_find_label(jule::Str _50729_ident) {
	jule::Int _50817_i = 0LL;
	_iter_begin_4756981456:;
	if (!(_50817_i < (*this)._field_scope->_field_stmts._method_len())) { goto _iter_end_4756981456; }
	{
		jule::Any _51021_st = (*this)._field_scope->_field_stmts._method_at(_50817_i);
		{
			auto &_match_expr{ _51021_st };
			if (!(_match_expr.type_is<jule::Ref<_11a093930_Label>>())) { goto _case_end_4756985984; }
			_case_begin_4756985984:;
			{
				jule::Ref<_11a093930_Label> _51325_label = _51021_st.operator jule::Ref<_11a093930_Label>();
				if (_51325_label->_field_ident == _50729_ident) {
					return _51325_label;
				}
			}
			goto _match_end_4756984848;
			_case_end_4756985984:;
			_match_end_4756984848:;
		}
	}
	_iter_next_4756981456:;
	(_50817_i)++;
	goto _iter_begin_4756981456;
	_iter_end_4756981456:;
	return jule::new_ref<_11a093930_Label>();
}



inline jule::Ref<_11a093930_ScopeLabel> _11a093930_ScopeChecker::_method_find_label_scope(jule::Str _52536_ident) {
	jule::Ref<_11a093930_ScopeLabel> _52617_label = this->self->_method_find_label_all(_52536_ident);
	if (jule::real(_52617_label) && ((_52617_label->_field_scope).alloc == (this->self).alloc)) {
		return _52617_label;
	}
	return jule::new_ref<_11a093930_ScopeLabel>();
}



inline jule::Ref<_11a093930_ScopeLabel> _11a093930_ScopeChecker::_method_find_label_all(jule::Str _53733_ident) {
	{
		auto &__julec_range_expr = (*this)._field_labels.get();
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11a093930_ScopeLabel> _11a093930_lbl = *__julec_range_begin;
			_iter_begin_4756997280:;
			{
				if (_11a093930_lbl->_field_label->_field_ident == _53733_ident) {
					return _11a093930_lbl;
				}
			}
			_iter_next_4756997280:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a093930_lbl = *__julec_range_begin; goto _iter_begin_4756997280; }
			_iter_end_4756997280:;
		}
	}
	return jule::new_ref<_11a093930_ScopeLabel>();
}



inline jule::Bool _11a093930_ScopeChecker::_method_is_duplicated_ident(jule::Uintptr _54938_itself,jule::Str _54955_ident) {
	jule::Ref<_11a245f20_Var> _55013_v = (*this)._method_find_var(_54955_ident,false);
	if ((jule::real(_55013_v) && (((jule::Uintptr)((_55013_v).alloc)) != _54938_itself)) && ((_55013_v->_field_scope).alloc == ((*this)._field_scope).alloc)) {
		return true;
	}
	jule::Ref<_11a3c2e70_TypeAlias> _55513_ta = (*this)._method_find_type_alias(_54955_ident,false);
	if ((jule::real(_55513_ta) && (((jule::Uintptr)((_55513_ta).alloc)) != _54938_itself)) && ((_55513_ta->_field_scope).alloc == ((*this)._field_tree).alloc)) {
		return true;
	}
	return false;
}



inline void _11a093930_ScopeChecker::_method_check_var_decl(jule::Ref<_118d9a790_VarDecl> _56338_decl) {
	jule::Ref<_11a245f20_Var> _56417_v = _13feceeb0_build_var(_56338_decl);
	_56417_v->_field_scope=this->self->_field_scope;
	__JULE_DEFER({
		this->self->_field_table->_field_vars._method_push(_56417_v);
		this->self->_field_scope->_field_stmts._method_push(jule::Any(_56417_v));
	});
	if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_56417_v).alloc)),_56417_v->_field_ident)) {
		this->self->_field_s->_method_push_err(_56417_v->_field_token,jule::Str("duplicated_ident", 16),jule::Slice<jule::Any>({jule::Any(_56417_v->_field_ident)}));
	}
	this->self->_field_s->_method_check_var_decl(_56417_v,this->self);
	if ((!(_56417_v->_method_is_type_inferred())) && ((!(jule::real(_56417_v->_field_kind))) || (!(jule::real(_56417_v->_field_kind->_field_kind))))) {
		return;
	}
	this->self->_field_s->_method_check_type_var(_56417_v,this->self);
}



inline void _11a093930_ScopeChecker::_method_check_type_alias_decl(jule::Ref<_118d9a790_TypeAliasDecl> _58445_decl) {
	jule::Ref<_11a3c2e70_TypeAlias> _58517_ta = _13feceeb0_build_type_alias(_58445_decl);
	if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_58517_ta).alloc)),_58517_ta->_field_ident)) {
		this->self->_field_s->_method_push_err(_58517_ta->_field_token,jule::Str("duplicated_ident", 16),jule::Slice<jule::Any>({jule::Any(_58517_ta->_field_ident)}));
	}
	this->self->_field_s->_method_check_type_alias_decl(_58517_ta,this->self);
	this->self->_field_table->_field_type_aliases._method_push(_58517_ta);
}



inline jule::Ref<_11a093930_Scope> _11a093930_ScopeChecker::_method_get_child(void) {
	return jule::new_struct<_11a093930_Scope>(new( std::nothrow ) _11a093930_Scope((*this)._field_scope,jule::Bool(),jule::Bool(),_1192e4e90_Vector_8()));
}



inline void _11a093930_ScopeChecker::_method_check_child_ssc(jule::Ref<_118d9a790_ScopeTree> _60039_tree,jule::Ref<_11a093930_Scope> _60061_s,jule::Ref<_11a093930_ScopeChecker> _60076_ssc) {
	_60076_ssc->_field_parent=this->self;
	_60076_ssc->_method_check(_60039_tree,_60061_s);
}



inline jule::Ref<_11a093930_Scope> _11a093930_ScopeChecker::_method_check_child_sc(jule::Ref<_118d9a790_ScopeTree> _60538_tree,jule::Ref<_11a093930_ScopeChecker> _60560_ssc) {
	jule::Ref<_11a093930_Scope> _60617_s = this->self->_method_get_child();
	this->self->_method_check_child_ssc(_60538_tree,_60617_s,_60560_ssc);
	return _60617_s;
}



inline jule::Ref<_11a093930_Scope> _11a093930_ScopeChecker::_method_check_child(jule::Ref<_118d9a790_ScopeTree> _61135_tree) {
	jule::Ref<_11a093930_ScopeChecker> _61217_ssc = this->self->_method_new_child_checker();
	return this->self->_method_check_child_sc(_61135_tree,_61217_ssc);
}



inline void _11a093930_ScopeChecker::_method_check_anon_scope(jule::Ref<_118d9a790_ScopeTree> _61640_tree) {
	jule::Ref<_11a093930_Scope> _61717_s = this->self->_method_check_child(_61640_tree);
	this->self->_field_scope->_field_stmts._method_push(jule::Any(_61717_s));
}



inline jule::Bool _11a093930_ScopeChecker::_method_try_call_recover(jule::Ref<_11a53f4f0_Data> _62140_d) {
	{
		auto &_match_expr{ _62140_d->_field_model };
		if (!(_match_expr.type_is<jule::Ref<_11a093930_Recover>>())) { goto _case_end_4757082976; }
		goto _match_end_4757081120;
		_case_end_4757082976:;
		_case_begin_4757081936:;
		{
			return false;
		}
		goto _match_end_4757081120;
		_case_end_4757081936:;
		_match_end_4757081120:;
	}
	jule::Ref<_11a093930_Recover> _63017_rec = _62140_d->_field_model.operator jule::Ref<_11a093930_Recover>();
	_63017_rec->_field_handler=_62140_d->_field_kind->_method_fnc();
	_63017_rec->_field_scope=jule::new_struct<_11a093930_Scope>(new( std::nothrow ) _11a093930_Scope());
	this->self->_field_scope->_field_stmts._method_push(jule::Any(_63017_rec));
	this->self->_field_tree->_field_stmts=this->self->_field_tree->_field_stmts.slice(static_cast<jule::Int>(this->self->_field_i + 1LL));
	this->self->_field_scope=_63017_rec->_field_scope;
	this->self->_method_check_tree();
	return true;
}



inline void _11a093930_ScopeChecker::_method_check_expr(jule::Ref<_118d9a790_Expr> _64234_expr) {
	jule::Ref<_11a53f4f0_Data> _64317_d = this->self->_field_s->_method_eval(_64234_expr,this->self);
	if ((!(jule::real(_64317_d)))) {
		return;
	}
	if (_64234_expr->_method_is_fn_call()) {
		jule::Bool _64917_ok = this->self->_method_try_call_recover(_64317_d);
		if (_64917_ok) {
			return;
		}
	}
	this->self->_field_scope->_field_stmts._method_push(jule::Any(_64317_d));
}



inline jule::Ref<_11a093930_If> _11a093930_ScopeChecker::_method_check_if(jule::Ref<_118d9a790_If> _65832_i) {
	jule::Ref<_11a093930_Scope> _65917_s = this->self->_method_check_child(_65832_i->_field_scope);
	jule::Ref<_11a53f4f0_Data> _66117_d = this->self->_field_s->_method_eval(_65832_i->_field_expr,this->self);
	if ((!(jule::real(_66117_d)))) {
		return jule::new_ref<_11a093930_If>();
	}
	jule::Ref<_11a3c2e70_Prim> _66613_prim = _66117_d->_field_kind->_method_prim();
	if ((!(jule::real(_66613_prim)))) {
		this->self->_field_s->_method_push_err(_65832_i->_field_expr->_field_token,jule::Str("if_require_bool_expr", 20),jule::Slice<jule::Any>({}));
		return jule::new_ref<_11a093930_If>();
	}
	if ((!(_66613_prim->_method_is_bool()))) {
		this->self->_field_s->_method_push_err(_65832_i->_field_expr->_field_token,jule::Str("if_require_bool_expr", 20),jule::Slice<jule::Any>({}));
		return jule::new_ref<_11a093930_If>();
	}
	return jule::new_struct<_11a093930_If>(new( std::nothrow ) _11a093930_If(_66117_d->_field_model,_65917_s));
}



inline jule::Ref<_11a093930_Else> _11a093930_ScopeChecker::_method_check_else(jule::Ref<_118d9a790_Else> _68334_e) {
	jule::Ref<_11a093930_Scope> _68417_s = this->self->_method_check_child(_68334_e->_field_scope);
	return jule::new_struct<_11a093930_Else>(new( std::nothrow ) _11a093930_Else(_68417_s));
}



inline void _11a093930_ScopeChecker::_method_check_conditional(jule::Ref<_118d9a790_Conditional> _69041_conditional) {
	jule::Ref<_11a093930_Conditional> _69117_c = jule::new_struct<_11a093930_Conditional>(new( std::nothrow ) _11a093930_Conditional());
	this->self->_field_scope->_field_stmts._method_push(jule::Any(_69117_c));
	_69117_c->_field_elifs=jule::Slice<jule::Ref<_11a093930_If>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_69041_conditional->_field_tail.len() + 1LL)));
	_69117_c->_field_elifs[static_cast<jule::Int>(0LL)]=this->self->_method_check_if(_69041_conditional->_field_head);
	{
		auto &__julec_range_expr = _69041_conditional->_field_tail;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _11a093930_i = 0;
			jule::Ref<_118d9a790_If> _11a093930_elif = *__julec_range_begin;
			_iter_begin_4757141568:;
			{
				_69117_c->_field_elifs[static_cast<jule::Int>(_11a093930_i + 1LL)]=this->self->_method_check_if(_11a093930_elif);
			}
			_iter_next_4757141568:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_11a093930_i; _11a093930_elif = *__julec_range_begin; goto _iter_begin_4757141568; }
			_iter_end_4757141568:;
		}
	}
	if (jule::real(_69041_conditional->_field_default)) {
		_69117_c->_field_default=this->self->_method_check_else(_69041_conditional->_field_default);
	}
}



inline jule::Ref<_11a093930_Scope> _11a093930_ScopeChecker::_method_check_iter_scope_sc(jule::Uintptr _70639_it,jule::Ref<_118d9a790_ScopeTree> _70656_tree,jule::Ref<_11a093930_ScopeChecker> _70678_ssc) {
	_70678_ssc->_field_it=_70639_it;
	return this->self->_method_check_child_sc(_70656_tree,_70678_ssc);
}



inline jule::Ref<_11a093930_Scope> _11a093930_ScopeChecker::_method_check_iter_scope(jule::Uintptr _71136_it,jule::Ref<_118d9a790_ScopeTree> _71153_tree) {
	jule::Ref<_11a093930_ScopeChecker> _71217_ssc = this->self->_method_new_child_checker();
	return this->self->_method_check_iter_scope_sc(_71136_it,_71153_tree,_71217_ssc);
}



inline void _11a093930_ScopeChecker::_method_check_inf_iter(jule::Ref<_118d9a790_Iter> _71638_it) {
	jule::Ref<_11a093930_InfIter> _71717_kind = jule::new_struct<_11a093930_InfIter>(new( std::nothrow ) _11a093930_InfIter());
	this->self->_field_scope->_field_stmts._method_push(jule::Any(_71717_kind));
	_71717_kind->_field_scope=this->self->_method_check_iter_scope(((jule::Uintptr)((_71717_kind).alloc)),_71638_it->_field_scope);
}



inline void _11a093930_ScopeChecker::_method_check_while_iter(jule::Ref<_118d9a790_Iter> _72440_it) {
	jule::Ref<_118d9a790_WhileKind> _72517_wh = _72440_it->_field_kind.operator jule::Ref<_118d9a790_WhileKind>();
	if ((!(jule::real(_72517_wh->_field_expr))) && (_72517_wh->_field_next == nullptr)) {
		this->self->_method_check_inf_iter(_72440_it);
		return;
	}
	jule::Ref<_11a093930_WhileIter> _73117_kind = jule::new_struct<_11a093930_WhileIter>(new( std::nothrow ) _11a093930_WhileIter());
	this->self->_field_scope->_field_stmts._method_push(jule::Any(_73117_kind));
	_73117_kind->_field_scope=this->self->_method_check_iter_scope(((jule::Uintptr)((_73117_kind).alloc)),_72440_it->_field_scope);
	if (jule::real(_72517_wh->_field_expr)) {
		jule::Ref<_11a53f4f0_Data> _73821_d = this->self->_field_s->_method_eval(_72517_wh->_field_expr,this->self);
		if ((!(jule::real(_73821_d)))) {
			return;
		}
		jule::Ref<_11a3c2e70_Prim> _74317_prim = _73821_d->_field_kind->_method_prim();
		if ((!(jule::real(_74317_prim)))) {
			this->self->_field_s->_method_push_err(_72440_it->_field_token,jule::Str("iter_while_require_bool_expr", 28),jule::Slice<jule::Any>({}));
			return;
		}
		if ((!(_74317_prim->_method_is_bool()))) {
			this->self->_field_s->_method_push_err(_72440_it->_field_token,jule::Str("iter_while_require_bool_expr", 28),jule::Slice<jule::Any>({}));
			return;
		}
		_73117_kind->_field_expr=_73821_d->_field_model;
	}
	if (_72517_wh->_method_is_while_next()) {
		if ((!(_11a093930_is_valid_ast_st_for_next_st(_72517_wh->_field_next)))) {
			this->self->_field_s->_method_push_err(_72517_wh->_field_next_token,jule::Str("invalid_stmt_for_next", 21),jule::Slice<jule::Any>({}));
			return;
		}
		jule::Int _76317_n = this->self->_field_scope->_field_stmts._method_len();
		this->self->_method_check_node(_72517_wh->_field_next);
		if (_76317_n < this->self->_field_scope->_field_stmts._method_len()) {
			jule::Any _76625_st = this->self->_field_scope->_field_stmts._method_at(_76317_n);
			this->self->_field_scope->_field_stmts._method_set_len(_76317_n);
			if ((!(_11a093930_is_valid_st_for_next_st(_76625_st)))) {
				this->self->_field_s->_method_push_err(_72517_wh->_field_next_token,jule::Str("invalid_stmt_for_next", 21),jule::Slice<jule::Any>({}));
			}
			_73117_kind->_field_next=_76625_st;
		}
	}
}



inline void _11a093930_ScopeChecker::_method_check_range_iter(jule::Ref<_118d9a790_Iter> _77740_it) {
	jule::Ref<_118d9a790_RangeKind> _77817_rang = _77740_it->_field_kind.operator jule::Ref<_118d9a790_RangeKind>();
	jule::Ref<_11a53f4f0_Data> _78017_d = this->self->_field_s->_method_eval(_77817_rang->_field_expr,this->self);
	if ((!(jule::real(_78017_d)))) {
		return;
	}
	jule::Ref<_11a093930_RangeIter> _78517_kind = jule::new_struct<_11a093930_RangeIter>(new( std::nothrow ) _11a093930_RangeIter(_78017_d,jule::Ref<_11a093930_Scope>(),jule::Ref<_11a245f20_Var>(),jule::Ref<_11a245f20_Var>()));
	_11a21f8a0_RangeChecker _78917_rc = _11a21f8a0_RangeChecker(this->self,_77817_rang,_78517_kind,_78017_d);
	jule::Bool _79513_ok = _78917_rc._method_check();
	if ((!(_79513_ok))) {
		return;
	}
	this->self->_field_scope->_field_stmts._method_push(jule::Any(_78517_kind));
	jule::Ref<_11a093930_ScopeChecker> _80217_ssc = this->self->_method_new_child_checker();
	if (jule::real(_78517_kind->_field_key_a)) {
		_80217_ssc->_field_table->_field_vars._method_push(_78517_kind->_field_key_a);
	}
	if (jule::real(_78517_kind->_field_key_b)) {
		_80217_ssc->_field_table->_field_vars._method_push(_78517_kind->_field_key_b);
	}
	_78517_kind->_field_scope=this->self->_method_check_iter_scope_sc(((jule::Uintptr)((_78517_kind).alloc)),_77740_it->_field_scope,_80217_ssc);
}



inline void _11a093930_ScopeChecker::_method_check_iter(jule::Ref<_118d9a790_Iter> _81534_it) {
	if (_81534_it->_method_is_inf()) {
		this->self->_method_check_inf_iter(_81534_it);
		return;
	}
	{
		auto &_match_expr{ _81534_it->_field_kind };
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_WhileKind>>())) { goto _case_end_4757248816; }
		_case_begin_4757248816:;
		{
			this->self->_method_check_while_iter(_81534_it);
		}
		goto _match_end_4757244896;
		_case_end_4757248816:;
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_RangeKind>>())) { goto _case_end_4757247520; }
		_case_begin_4757247520:;
		{
			this->self->_method_check_range_iter(_81534_it);
		}
		goto _match_end_4757244896;
		_case_end_4757247520:;
		_case_begin_4757247216:;
		{
			jule::outln(jule::Str("error <unimplemented iteration kind>", 36));
		}
		goto _match_end_4757244896;
		_case_end_4757247216:;
		_match_end_4757244896:;
	}
}



inline jule::Bool _11a093930_ScopeChecker::_method_check_valid_cont_label(jule::Uintptr _82842_it) {
	jule::Ref<_11a093930_ScopeChecker> _82917_scope = this->self;
	_julec_label_iter:;
	if (_82917_scope->_field_it == _82842_it) {
		return true;
	}
	if (jule::real(_82917_scope->_field_parent)) {
		_82917_scope=_82917_scope->_field_parent;
		goto _julec_label_iter;
	}
	return false;
}



inline jule::Bool _11a093930_ScopeChecker::_method_check_valid_break_label(jule::Uintptr _84443_ptr) {
	jule::Ref<_11a093930_ScopeChecker> _84517_scope = this->self;
	_julec_label_iter:;
	if (_84517_scope->_field_it == _84443_ptr) {
		return true;
	}
	if (_84517_scope->_field_cse != 0LL) {
		jule::Uintptr _85317_mtch = ((jule::Uintptr)((((_11a093930_Case*)(_84517_scope->_field_cse))->_field_owner).alloc));
		if (_85317_mtch == _84443_ptr) {
			return true;
		}
	}
	if (jule::real(_84517_scope->_field_parent)) {
		_84517_scope=_84517_scope->_field_parent;
		goto _julec_label_iter;
	}
	return false;
}



inline jule::Ref<_11a093930_ContSt> _11a093930_ScopeChecker::_method_check_cont_valid_scope(jule::Ref<_118d9a790_ContSt> _86741_c) {
	if (_86741_c->_field_label._field_id != 0LLU) {
		return jule::new_struct<_11a093930_ContSt>(new( std::nothrow ) _11a093930_ContSt());
	}
	_11a093930_ScopeChecker _87217_scope = (*this);
	_julec_label_iter:;
	{
		if (!((((_87217_scope._field_it == 0LL) && jule::real(_87217_scope._field_parent)) && (!(jule::real(_87217_scope._field_owner)))))) { goto _case_end_4757280256; }
		_case_begin_4757280256:;
		{
			_87217_scope=_87217_scope._field_parent;
			goto _julec_label_iter;
		}
		goto _match_end_4757279808;
		_case_end_4757280256:;
		if (!((_87217_scope._field_it != 0LL))) { goto _case_end_4757280368; }
		_case_begin_4757280368:;
		{
			return jule::new_struct<_11a093930_ContSt>(new( std::nothrow ) _11a093930_ContSt(_87217_scope._field_it));
		}
		goto _match_end_4757279808;
		_case_end_4757280368:;
		_match_end_4757279808:;
	}
	(*this)._field_s->_method_push_err(_86741_c->_field_token,jule::Str("continue_at_out_of_valid_scope", 30),jule::Slice<jule::Any>({}));
	return jule::new_ref<_11a093930_ContSt>();
}



inline void _11a093930_ScopeChecker::_method_check_cont(jule::Ref<_118d9a790_ContSt> _88730_c) {
	jule::Ref<_11a093930_ContSt> _88817_cont = this->self->_method_check_cont_valid_scope(_88730_c);
	if ((!(jule::real(_88817_cont)))) {
		return;
	}
	if (_88730_c->_field_label._field_id != 0LLU) {
		jule::Ref<_11a093930_ScopeLabel> _89421_label = _11a093930_find_label_parent(_88730_c->_field_label._field_kind,this->self->_field_parent);
		if ((!(jule::real(_89421_label)))) {
			this->self->_field_s->_method_push_err(_88730_c->_field_label,jule::Str("label_not_exist", 15),jule::Slice<jule::Any>({jule::Any(_88730_c->_field_label._field_kind)}));
			return;
		}
		_89421_label->_field_used=true;
		if ((_89421_label->_field_pos + 1LL) >= _89421_label->_field_scope->_field_scope->_field_stmts._method_len()) {
			this->self->_field_s->_method_push_err(_88730_c->_field_label,jule::Str("invalid_label", 13),jule::Slice<jule::Any>({}));
			return;
		}
		jule::Int _90717_i = _89421_label->_field_pos + 1LL;
		if (_90717_i >= _89421_label->_field_scope->_field_scope->_field_stmts._method_len()) {
			this->self->_field_s->_method_push_err(_88730_c->_field_label,jule::Str("invalid_label", 13),jule::Slice<jule::Any>({}));
		} else {
			jule::Any _91125_st = _89421_label->_field_scope->_field_scope->_field_stmts._method_at(_90717_i);
			{
				auto &_match_expr{ _91125_st };
				if (!(_match_expr.type_is<jule::Ref<_11a093930_InfIter>>())) { goto _case_end_4757317088; }
				_case_begin_4757317088:;
				{
					_88817_cont->_field_it=((jule::Uintptr)((_91125_st.operator jule::Ref<_11a093930_InfIter>()).alloc));
				}
				goto _match_end_4757314880;
				_case_end_4757317088:;
				if (!(_match_expr.type_is<jule::Ref<_11a093930_RangeIter>>())) { goto _case_end_4757316192; }
				_case_begin_4757316192:;
				{
					_88817_cont->_field_it=((jule::Uintptr)((_91125_st.operator jule::Ref<_11a093930_RangeIter>()).alloc));
				}
				goto _match_end_4757314880;
				_case_end_4757316192:;
				if (!(_match_expr.type_is<jule::Ref<_11a093930_WhileIter>>())) { goto _case_end_4757316304; }
				_case_begin_4757316304:;
				{
					_88817_cont->_field_it=((jule::Uintptr)((_91125_st.operator jule::Ref<_11a093930_WhileIter>()).alloc));
				}
				goto _match_end_4757314880;
				_case_end_4757316304:;
				_case_begin_4757315888:;
				{
					this->self->_field_s->_method_push_err(_88730_c->_field_label,jule::Str("invalid_label", 13),jule::Slice<jule::Any>({}));
				}
				goto _match_end_4757314880;
				_case_end_4757315888:;
				_match_end_4757314880:;
			}
		}
	}
	if (_88817_cont->_field_it != 0LL) {
		if ((!(this->self->_method_check_valid_cont_label(_88817_cont->_field_it)))) {
			this->self->_field_s->_method_push_err(_88730_c->_field_label,jule::Str("invalid_label", 13),jule::Slice<jule::Any>({}));
		}
	}
	this->self->_field_scope->_field_stmts._method_push(jule::Any(_88817_cont));
}



inline void _11a093930_ScopeChecker::_method_check_label(jule::Ref<_118d9a790_LabelSt> _93035_l) {
	if (jule::real(this->self->_method_find_label(_93035_l->_field_ident))) {
		this->self->_field_s->_method_push_err(_93035_l->_field_token,jule::Str("label_exist", 11),jule::Slice<jule::Any>({jule::Any(_93035_l->_field_ident)}));
		return;
	}
	jule::Ref<_11a093930_Label> _93617_label = jule::new_struct<_11a093930_Label>(new( std::nothrow ) _11a093930_Label(_93035_l->_field_ident));
	this->self->_field_scope->_field_stmts._method_push(jule::Any(_93617_label));
	this->self->_field_labels=append(this->self->_field_labels.get(),jule::Slice<jule::Ref<_11a093930_ScopeLabel>>({jule::new_struct<_11a093930_ScopeLabel>(new( std::nothrow ) _11a093930_ScopeLabel(_93035_l->_field_token,_93617_label,static_cast<jule::Int>(this->self->_field_scope->_field_stmts._method_len() - 1LL),this->self,jule::Bool()))}));
}



inline void _11a093930_ScopeChecker::_method_push_goto(jule::Ref<_118d9a790_GotoSt> _94933_gt) {
	this->self->_field_scope->_field_stmts._method_push(jule::Any(jule::new_struct<_11a093930_GotoSt>(new( std::nothrow ) _11a093930_GotoSt(_94933_gt->_field_label._field_kind))));
	this->self->_field_gotos=append(this->self->_field_gotos.get(),jule::Slice<jule::Ref<_11a093930_ScopeGoto>>({jule::new_struct<_11a093930_ScopeGoto>(new( std::nothrow ) _11a093930_ScopeGoto(_94933_gt,this->self,static_cast<jule::Int>(this->self->_field_scope->_field_stmts._method_len() - 1LL)))}));
}



inline void _11a093930_ScopeChecker::_method_check_postfix(jule::Ref<_118d9a790_AssignSt> _96137_a) {
	if (_96137_a->_field_left.len() > 1LL) {
		this->self->_field_s->_method_push_err(_96137_a->_field_setter,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return;
	}
	jule::Ref<_11a53f4f0_Data> _96717_d = this->self->_field_s->_method_eval(_96137_a->_field_left[static_cast<jule::Int>(0LL)]->_field_expr,this->self);
	if ((!(jule::real(_96717_d)))) {
		return;
	}
	_11a093930_check_assign(this->self->_field_s,_96717_d,jule::new_ref<_11a53f4f0_Data>(),_96137_a->_field_setter);
	if (jule::real(_96717_d->_field_kind->_method_ptr())) {
		jule::Ref<_11a3c2e70_Ptr> _97521_ptr = _96717_d->_field_kind->_method_ptr();
		if ((!(_97521_ptr->_method_is_unsafe())) && (!(this->self->_method_is_unsafe()))) {
			this->self->_field_s->_method_push_err(_96137_a->_field_left[static_cast<jule::Int>(0LL)]->_field_expr->_field_token,jule::Str("unsafe_behavior_at_out_of_unsafe_scope", 38),jule::Slice<jule::Any>({}));
			return;
		}
	}
	jule::Ref<_11a3c2e70_TypeKind> _98217_check_t = _96717_d->_field_kind;
	if (jule::real(_96717_d->_field_kind->_method_ref())) {
		_98217_check_t=_96717_d->_field_kind->_method_ref()->_field_elem;
	}
	if ((!(jule::real(_98217_check_t->_method_prim()))) || (!(_11ab8b300_is_num(_98217_check_t->_method_prim()->_field_kind)))) {
		this->self->_field_s->_method_push_err(_96137_a->_field_setter,jule::Str("operator_not_for_juletype", 25),jule::Slice<jule::Any>({jule::Any(_96137_a->_field_setter._field_kind),jule::Any(_96717_d->_field_kind->_method_to_str())}));
		return;
	}
	this->self->_field_scope->_field_stmts._method_push(jule::Any(jule::new_struct<_11a093930_Postfix>(new( std::nothrow ) _11a093930_Postfix(_96717_d->_field_model,_96137_a->_field_setter._field_kind))));
}



inline jule::Bool _11a093930_ScopeChecker::_method_is_new_assign_ident(jule::Str _99838_ident) {
	if (_11911a8a0_is_ignore_ident(_99838_ident) || (_99838_ident == jule::Str("", 0))) {
		return false;
	}
	return (*this)._field_table->_method_def_by_ident(_99838_ident,false) == nullptr;
}



inline void _11a093930_ScopeChecker::_method_check_single_assign(jule::Ref<_118d9a790_AssignSt> _100643_a) {
	jule::Ref<_11a53f4f0_Data> _100717_l = jule::new_ref<_11a53f4f0_Data>();
	jule::Ref<_11a53f4f0_Data> _100817_r = jule::new_ref<_11a53f4f0_Data>();
	if ((!(_11911a8a0_is_ignore_ident(_100643_a->_field_left[static_cast<jule::Int>(0LL)]->_field_ident)))) {
		_100717_l=this->self->_field_s->_method_eval(_100643_a->_field_left[static_cast<jule::Int>(0LL)]->_field_expr,this->self);
		if ((!(jule::real(_100717_l)))) {
			return;
		}
	}
	if (jule::real(_100717_l)) {
		_100817_r=this->self->_field_s->_method_evalp(_100643_a->_field_right,this->self,_100717_l->_field_kind);
	} else {
		_100817_r=this->self->_field_s->_method_eval(_100643_a->_field_right,this->self);
	}
	if ((!(jule::real(_100817_r)))) {
		return;
	}
	if ((!(jule::real(_100717_l)))) {
		if (_100817_r->_field_kind->_method_is_void()) {
			this->self->_field_s->_method_push_err(_100643_a->_field_right->_field_token,jule::Str("invalid_expr", 12),jule::Slice<jule::Any>({}));
		}
		this->self->_field_scope->_field_stmts._method_push(jule::Any(_100817_r));
		return;
	}
	if ((!(_11a093930_check_assign(this->self->_field_s,_100717_l,_100817_r,_100643_a->_field_setter)))) {
		return;
	}
	if (jule::real(_100817_r->_field_kind->_method_tup())) {
		this->self->_field_s->_method_push_err(_100643_a->_field_setter,jule::Str("missing_multi_assign_idents", 27),jule::Slice<jule::Any>({}));
		return;
	}
	this->self->_field_scope->_field_stmts._method_push(jule::Any(jule::new_struct<_11a093930_Assign>(new( std::nothrow ) _11a093930_Assign(_100717_l->_field_model,_100817_r->_field_model,_100643_a->_field_setter._field_kind))));
	if ((_100643_a->_field_setter._field_kind != jule::Str("=", 1)) && (!(_100817_r->_method_is_const()))) {
		_100643_a->_field_setter._field_kind=_100643_a->_field_setter._field_kind.slice(0LL,static_cast<jule::Int>(_100643_a->_field_setter._field_kind.len() - 1LL));
		_11a53f4f0_BinopSolver _105321_solver = _11a53f4f0_BinopSolver(jule::new_struct<_11a53f4f0_Eval>(new( std::nothrow ) _11a53f4f0_Eval(this->self->_field_s,this->self,jule::Ref<_11a3c2e70_TypeKind>(),this->self->_method_is_unsafe(),jule::Ref<_11a245f20_Var>())),jule::Ref<_11a53f4f0_Data>(),jule::Ref<_11a53f4f0_Data>(),_100643_a->_field_setter);
		_100817_r=_105321_solver._method_solve_explicit(_100717_l,_100817_r);
		if ((!(jule::real(_100817_r)))) {
			return;
		}
		_100643_a->_field_setter._field_kind+=jule::Str("=", 1);
	}
	_11a21f8a0_AssignTypeChecker _106917_checker = _11a21f8a0_AssignTypeChecker(this->self->_field_s,_100717_l->_field_kind,_100817_r,_100643_a->_field_setter,true);
	_106917_checker._method_check();
}



inline void _11a093930_ScopeChecker::_method___process_end_part_of_multi_assign(jule::Ref<_11a093930_MultiAssign> _107957_st,jule::Ref<_118d9a790_AssignSt> _108013_a,jule::Ref<_118d9a790_AssignLeft> _108027_lexpr,jule::Ref<_11a53f4f0_Data> _108051_l,jule::Ref<_11a53f4f0_Data> _108065_r) {
	if (_11911a8a0_is_ignore_ident(_108027_lexpr->_field_ident)) {
		if (_108065_r->_field_kind->_method_is_void()) {
			(*this)._field_s->_method_push_err(_108013_a->_field_right->_field_token,jule::Str("invalid_expr", 12),jule::Slice<jule::Any>({}));
		}
		_107957_st->_field_l=append(_107957_st->_field_l,jule::Slice<jule::Any>({jule::Any(nullptr)}));
		return;
	}
	if (_108013_a->_field_declarative && (*this)._method_is_new_assign_ident(_108027_lexpr->_field_ident)) {
		jule::Ref<_11a245f20_Var> _109221_v = jule::new_struct<_11a245f20_Var>(new( std::nothrow ) _11a245f20_Var((*this)._field_scope,_108027_lexpr->_field_token,_108027_lexpr->_field_ident,jule::Bool(),jule::Bool(),_108027_lexpr->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),_108027_lexpr->_field_reference,jule::Str(),jule::Ref<_11a3c2e70_TypeSymbol>(),jule::new_struct<_11a53f4f0_Value>(new( std::nothrow ) _11a53f4f0_Value(_108013_a->_field_right,_108065_r)),jule::Ref<_13feceeb0_ReferenceStack>(),jule::Slice<jule::Ref<_11a245f20_Var>>()));
		(*this)._field_s->_method_check_var(_109221_v);
		_107957_st->_field_l=append(_107957_st->_field_l,jule::Slice<jule::Any>({jule::Any(_109221_v)}));
		(*this)._field_table->_field_vars._method_push(_109221_v);
		(*this)._field_scope->_field_stmts._method_push(jule::Any(_109221_v));
		return;
	}
	if (_108027_lexpr->_field_mutable || _108027_lexpr->_field_reference) {
		(*this)._field_s->_method_push_err(_108027_lexpr->_field_token,jule::Str("duplicated_ident", 16),jule::Slice<jule::Any>({jule::Any(_108027_lexpr->_field_ident)}));
	}
	if ((!(_11a093930_check_assign((*this)._field_s,_108051_l,_108065_r,_108013_a->_field_setter)))) {
		return;
	}
	
	(*this)._field_s->_method_check_validity_for_init_expr(_108051_l->_field_mutable,false,_108051_l->_field_kind,_108065_r,_108013_a->_field_setter);
	_11a21f8a0_AssignTypeChecker _112617_checker = _11a21f8a0_AssignTypeChecker((*this)._field_s,_108051_l->_field_kind,_108065_r,_108013_a->_field_setter,true);
	_112617_checker._method_check();
	_107957_st->_field_l=append(_107957_st->_field_l,jule::Slice<jule::Any>({_108051_l->_field_model}));
}



inline void _11a093930_ScopeChecker::_method_check_ret_multi_assign(jule::Ref<_118d9a790_AssignSt> _113846_a) {
	jule::Ref<_11a53f4f0_Data> _113917_rd = this->self->_field_s->_method_eval(_113846_a->_field_right,this->self);
	if ((!(jule::real(_113917_rd)))) {
		return;
	}
	jule::Slice<jule::Ref<_11a53f4f0_Data>> _114417_r = _11a093930_get_datas_from_tuple_data(_113917_rd);
	{
		if (!((_113846_a->_field_left.len() > _114417_r.len()))) { goto _case_end_4765931376; }
		_case_begin_4765931376:;
		{
			this->self->_field_s->_method_push_err(_113846_a->_field_setter,jule::Str("overflow_multi_assign_idents", 28),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4765930928;
		_case_end_4765931376:;
		if (!((_113846_a->_field_left.len() < _114417_r.len()))) { goto _case_end_4765931488; }
		_case_begin_4765931488:;
		{
			this->self->_field_s->_method_push_err(_113846_a->_field_setter,jule::Str("missing_multi_assign_idents", 27),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4765930928;
		_case_end_4765931488:;
		_match_end_4765930928:;
	}
	jule::Ref<_11a093930_MultiAssign> _115617_st = jule::new_struct<_11a093930_MultiAssign>(new( std::nothrow ) _11a093930_MultiAssign(jule::Slice<jule::Any>(),_113917_rd->_field_model));
	if ((!(jule::real(_113917_rd->_field_kind->_method_tup())))) {
		_115617_st->_field_r=jule::Any(jule::new_struct<_119748ec0_TupleExprModel>(new( std::nothrow ) _119748ec0_TupleExprModel(_114417_r)));
	}
	{
		auto &__julec_range_expr = _113846_a->_field_left;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _11a093930_i = 0;
			_iter_begin_4765944352:;
			{
				jule::Ref<_118d9a790_AssignLeft> _116521_lexpr = _113846_a->_field_left[static_cast<jule::Int>(_11a093930_i)];
				jule::Ref<_11a53f4f0_Data> _116621_l = jule::new_ref<_11a53f4f0_Data>();
				jule::Ref<_11a53f4f0_Data> _116721_r = _114417_r[static_cast<jule::Int>(_11a093930_i)];
				if ((!(_11911a8a0_is_ignore_ident(_116521_lexpr->_field_ident))) && ((!(_113846_a->_field_declarative)) || (!(this->self->_method_is_new_assign_ident(_116521_lexpr->_field_ident))))) {
					_116621_l=this->self->_field_s->_method_eval(_116521_lexpr->_field_expr,this->self);
					if ((!(jule::real(_116621_l)))) {
						goto _iter_next_4765944352;
					}
				}
				this->self->_method___process_end_part_of_multi_assign(_115617_st,_113846_a,_116521_lexpr,_116621_l,_116721_r);
			}
			_iter_next_4765944352:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_11a093930_i; goto _iter_begin_4765944352; }
			_iter_end_4765944352:;
		}
	}
	this->self->_field_scope->_field_stmts._method_push(jule::Any(_115617_st));
}



inline void _11a093930_ScopeChecker::_method_check_multi_assign(jule::Ref<_118d9a790_AssignSt> _118242_a) {
	{
		auto &_match_expr{ _118242_a->_field_right->_field_kind };
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_FnCallExpr>>())) { goto _case_end_4765964224; }
		_case_begin_4765964224:;
		{
			this->self->_method_check_ret_multi_assign(_118242_a);
			return;
		}
		goto _match_end_4765963120;
		_case_end_4765964224:;
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_UnsafeExpr>>())) { goto _case_end_4765964336; }
		_case_begin_4765964336:;
		{
			{
				auto &_match_expr{ _118242_a->_field_right->_field_kind.operator jule::Ref<_118d9a790_UnsafeExpr>()->_field_expr };
				if (!(_match_expr.type_is<jule::Ref<_118d9a790_FnCallExpr>>())) { goto _case_end_4765969344; }
				_case_begin_4765969344:;
				{
					this->self->_method_check_ret_multi_assign(_118242_a);
					return;
				}
				goto _match_end_4765966144;
				_case_end_4765969344:;
				_match_end_4765966144:;
			}
		}
		goto _match_end_4765963120;
		_case_end_4765964336:;
		_match_end_4765963120:;
	}
	jule::Slice<jule::Any> _119617_right = _11a093930_get_expr_models(_118242_a->_field_right->_field_kind);
	{
		if (!((_118242_a->_field_left.len() > _119617_right.len()))) { goto _case_end_4765972992; }
		_case_begin_4765972992:;
		{
			this->self->_field_s->_method_push_err(_118242_a->_field_setter,jule::Str("overflow_multi_assign_idents", 28),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4765972800;
		_case_end_4765972992:;
		if (!((_118242_a->_field_left.len() < _119617_right.len()))) { goto _case_end_4765973104; }
		_case_begin_4765973104:;
		{
			this->self->_field_s->_method_push_err(_118242_a->_field_setter,jule::Str("missing_multi_assign_idents", 27),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4765972800;
		_case_end_4765973104:;
		_match_end_4765972800:;
	}
	jule::Ref<_119748ec0_TupleExprModel> _120817_right_tuple = jule::new_struct<_119748ec0_TupleExprModel>(new( std::nothrow ) _119748ec0_TupleExprModel());
	jule::Ref<_11a093930_MultiAssign> _121017_st = jule::new_struct<_11a093930_MultiAssign>(new( std::nothrow ) _11a093930_MultiAssign(jule::Slice<jule::Any>(),jule::Any(_120817_right_tuple)));
	{
		auto &__julec_range_expr = _118242_a->_field_left;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _11a093930_i = 0;
			_iter_begin_4765984368:;
			{
				jule::Ref<_118d9a790_AssignLeft> _121521_lexpr = _118242_a->_field_left[static_cast<jule::Int>(_11a093930_i)];
				jule::Ref<_11a53f4f0_Data> _121621_l = jule::new_ref<_11a53f4f0_Data>();
				jule::Ref<_11a53f4f0_Data> _121721_r = jule::new_ref<_11a53f4f0_Data>();
				if ((!(_11911a8a0_is_ignore_ident(_121521_lexpr->_field_ident))) && ((!(_118242_a->_field_declarative)) || (!(this->self->_method_is_new_assign_ident(_121521_lexpr->_field_ident))))) {
					_121621_l=this->self->_field_s->_method_eval(_121521_lexpr->_field_expr,this->self);
					if ((!(jule::real(_121621_l)))) {
						goto _iter_next_4765984368;
					}
				}
				if (jule::real(_121621_l)) {
					jule::Ref<_118d9a790_Expr> _122725_expr = jule::new_struct<_118d9a790_Expr>(new( std::nothrow ) _118d9a790_Expr(_118242_a->_field_right->_field_token,_119617_right[static_cast<jule::Int>(_11a093930_i)]));
					_121721_r=this->self->_field_s->_method_evalp(_122725_expr,this->self,_121621_l->_field_kind);
				} else {
					jule::Ref<_118d9a790_Expr> _123025_expr = jule::new_struct<_118d9a790_Expr>(new( std::nothrow ) _118d9a790_Expr(_118242_a->_field_right->_field_token,_119617_right[static_cast<jule::Int>(_11a093930_i)]));
					_121721_r=this->self->_field_s->_method_eval(_123025_expr,this->self);
				}
				if ((!(jule::real(_121721_r)))) {
					goto _iter_next_4765984368;
				}
				_120817_right_tuple->_field_datas=append(_120817_right_tuple->_field_datas,jule::Slice<jule::Ref<_11a53f4f0_Data>>({_121721_r}));
				this->self->_method___process_end_part_of_multi_assign(_121017_st,_118242_a,_121521_lexpr,_121621_l,_121721_r);
			}
			_iter_next_4765984368:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_11a093930_i; goto _iter_begin_4765984368; }
			_iter_end_4765984368:;
		}
	}
	this->self->_field_scope->_field_stmts._method_push(jule::Any(_121017_st));
}



inline void _11a093930_ScopeChecker::_method_check_assign_st(jule::Ref<_118d9a790_AssignSt> _124539_a) {
	if (_11911a8a0_is_postfix_op(_124539_a->_field_setter._field_kind)) {
		this->self->_method_check_postfix(_124539_a);
		return;
	}
	if ((_124539_a->_field_left.len() == 1LL) && (!(_124539_a->_field_declarative))) {
		this->self->_method_check_single_assign(_124539_a);
		return;
	}
	this->self->_method_check_multi_assign(_124539_a);
}



inline jule::Ref<_11a093930_Scope> _11a093930_ScopeChecker::_method_check_case_scope(jule::Ref<_11a093930_Case> _125936_c,jule::Ref<_118d9a790_ScopeTree> _125950_tree) {
	jule::Ref<_11a093930_ScopeChecker> _126017_ssc = this->self->_method_new_child_checker();
	_126017_ssc->_field_cse=((jule::Uintptr)((_125936_c).alloc));
	return this->self->_method_check_child_sc(_125950_tree,_126017_ssc);
}



inline jule::Ref<_11a093930_Case> _11a093930_ScopeChecker::_method_check_case(jule::Ref<_11a093930_Match> _126534_m,jule::Int _126545_i,jule::Ref<_118d9a790_Case> _126557_c,jule::Ref<_11a53f4f0_Data> _126587_expr) {
	jule::Ref<_11a093930_Case> _126617__case = _126534_m->_field_cases[static_cast<jule::Int>(_126545_i)];
	_126617__case->_field_exprs=jule::Slice<jule::Any>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_126557_c->_field_exprs.len())));
	{
		auto &__julec_range_expr = _126557_c->_field_exprs;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _11a093930_i = 0;
			jule::Ref<_118d9a790_Expr> _11a093930_e = *__julec_range_begin;
			_iter_begin_4707874240:;
			{
				if (_126534_m->_field_type_match) {
					jule::Ref<_11a53f4f0_Eval> _127125_eval = jule::new_struct<_11a53f4f0_Eval>(new( std::nothrow ) _11a53f4f0_Eval(this->self->_field_s,this->self,jule::Ref<_11a3c2e70_TypeKind>(),jule::Bool(),jule::Ref<_11a245f20_Var>()));
					jule::Ref<_11a53f4f0_Data> _127625_d = _127125_eval->_method_eval(_11a093930_e);
					if (jule::real(_127625_d)) {
						_126617__case->_field_exprs[static_cast<jule::Int>(_11a093930_i)]=jule::Any(_127625_d->_field_kind);
						if (_11a093930_count_match_type(_126534_m,_127625_d->_field_kind) > 1LL) {
							this->self->_field_s->_method_push_err(_11a093930_e->_field_token,jule::Str("duplicate_match_type", 20),jule::Slice<jule::Any>({jule::Any(_127625_d->_field_kind->_method_to_str())}));
						}
					}
					jule::Ref<_118e2b060_Trait> _128421_trt = _126587_expr->_field_kind->_method_trt();
					if (jule::real(_128421_trt)) {
						this->self->_field_s->_method_check_type_compatibility(_126587_expr->_field_kind,_127625_d->_field_kind,_11a093930_e->_field_token,false);
					}
					goto _iter_next_4707874240;
				}
				jule::Ref<_11a53f4f0_Data> _129221_d = this->self->_field_s->_method_eval(_11a093930_e,this->self);
				if ((!(jule::real(_129221_d)))) {
					goto _iter_next_4707874240;
				}
				_126617__case->_field_exprs[static_cast<jule::Int>(_11a093930_i)]=_129221_d->_field_model;
				_11a21f8a0_AssignTypeChecker _129921_checker = _11a21f8a0_AssignTypeChecker(this->self->_field_s,_126587_expr->_field_kind,_129221_d,_11a093930_e->_field_token,true);
				_129921_checker._method_check();
			}
			_iter_next_4707874240:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_11a093930_i; _11a093930_e = *__julec_range_begin; goto _iter_begin_4707874240; }
			_iter_end_4707874240:;
		}
	}
	_126617__case->_field_scope=this->self->_method_check_case_scope(_126617__case,_126557_c->_field_scope);
	return _126617__case;
}



inline void _11a093930_ScopeChecker::_method_check_cases(jule::Ref<_118d9a790_MatchCase> _131335_m,jule::Ref<_11a093930_Match> _131370_rm,jule::Ref<_11a53f4f0_Data> _131386_expr) {
	_131370_rm->_field_cases=jule::Slice<jule::Ref<_11a093930_Case>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_131335_m->_field_cases.len())));
	{
		auto &__julec_range_expr = _131335_m->_field_cases;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _11a093930_i = 0;
			_iter_begin_4706034064:;
			{
				jule::Ref<_11a093930_Case> _131621__case = jule::new_struct<_11a093930_Case>(new( std::nothrow ) _11a093930_Case(_131370_rm,jule::Ref<_11a093930_Scope>(),jule::Slice<jule::Any>(),jule::Ref<_11a093930_Case>()));
				if (_11a093930_i > 0LL) {
					_131370_rm->_field_cases[static_cast<jule::Int>(_11a093930_i - 1LL)]->_field_next=_131621__case;
				}
				_131370_rm->_field_cases[static_cast<jule::Int>(_11a093930_i)]=_131621__case;
			}
			_iter_next_4706034064:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_11a093930_i; goto _iter_begin_4706034064; }
			_iter_end_4706034064:;
		}
	}
	if (jule::real(_131370_rm->_field_default) && (_131335_m->_field_cases.len() > 0LL)) {
		_131370_rm->_field_cases[static_cast<jule::Int>(_131370_rm->_field_cases.len() - 1LL)]->_field_next=_131370_rm->_field_default;
	}
	{
		auto &__julec_range_expr = _131335_m->_field_cases;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _11a093930_i = 0;
			jule::Ref<_118d9a790_Case> _11a093930_c = *__julec_range_begin;
			_iter_begin_4706715216:;
			{
				this->self->_method_check_case(_131370_rm,_11a093930_i,_11a093930_c,_131386_expr);
			}
			_iter_next_4706715216:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_11a093930_i; _11a093930_c = *__julec_range_begin; goto _iter_begin_4706715216; }
			_iter_end_4706715216:;
		}
	}
}



inline jule::Ref<_11a093930_Case> _11a093930_ScopeChecker::_method_check_default(jule::Ref<_11a093930_Match> _133637_m,jule::Ref<_118d9a790_Else> _133652_d) {
	jule::Ref<_11a093930_Case> _133717_def = jule::new_struct<_11a093930_Case>(new( std::nothrow ) _11a093930_Case(_133637_m,jule::Ref<_11a093930_Scope>(),jule::Slice<jule::Any>(),jule::Ref<_11a093930_Case>()));
	_133717_def->_field_scope=this->self->_method_check_case_scope(_133717_def,_133652_d->_field_scope);
	return _133717_def;
}



inline void _11a093930_ScopeChecker::_method_check_type_match(jule::Ref<_118d9a790_MatchCase> _134440_m) {
	jule::Ref<_11a53f4f0_Data> _134517_d = this->self->_field_s->_method_eval(_134440_m->_field_expr,this->self);
	if ((!(jule::real(_134517_d)))) {
		return;
	}
	if ((!((jule::real(_134517_d->_field_kind->_method_prim()) && _134517_d->_field_kind->_method_prim()->_method_is_any()) || jule::real(_134517_d->_field_kind->_method_trt())))) {
		this->self->_field_s->_method_push_err(_134440_m->_field_expr->_field_token,jule::Str("type_case_has_not_valid_expr", 28),jule::Slice<jule::Any>({}));
		return;
	}
	jule::Ref<_11a093930_Match> _135517_tm = jule::new_struct<_11a093930_Match>(new( std::nothrow ) _11a093930_Match(_134517_d,true,jule::Slice<jule::Ref<_11a093930_Case>>(),jule::Ref<_11a093930_Case>()));
	this->self->_field_scope->_field_stmts._method_push(jule::Any(_135517_tm));
	if (jule::real(_134440_m->_field_default)) {
		_135517_tm->_field_default=this->self->_method_check_default(_135517_tm,_134440_m->_field_default);
	}
	this->self->_method_check_cases(_134440_m,_135517_tm,_134517_d);
}



inline void _11a093930_ScopeChecker::_method_check_common_match(jule::Ref<_118d9a790_MatchCase> _136842_m) {
	jule::Ref<_11a53f4f0_Data> _136917_d = jule::new_ref<_11a53f4f0_Data>();
	if ((!(jule::real(_136842_m->_field_expr)))) {
		_136917_d=jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_11a3c2e70_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_11a3c2e70_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),_11ab854f0_new_bool(true)));
		_136917_d->_field_model=jule::Any(_136917_d->_field_constant);
	} else {
		_136917_d=this->self->_field_s->_method_eval(_136842_m->_field_expr,this->self);
		if ((!(jule::real(_136917_d)))) {
			return;
		}
	}
	jule::Ref<_11a093930_Match> _138317_mc = jule::new_struct<_11a093930_Match>(new( std::nothrow ) _11a093930_Match(_136917_d,jule::Bool(),jule::Slice<jule::Ref<_11a093930_Case>>(),jule::Ref<_11a093930_Case>()));
	this->self->_field_scope->_field_stmts._method_push(jule::Any(_138317_mc));
	if (jule::real(_136842_m->_field_default)) {
		_138317_mc->_field_default=this->self->_method_check_default(_138317_mc,_136842_m->_field_default);
	}
	this->self->_method_check_cases(_136842_m,_138317_mc,_136917_d);
}



inline void _11a093930_ScopeChecker::_method_check_match(jule::Ref<_118d9a790_MatchCase> _139535_m) {
	if (_139535_m->_field_type_match) {
		this->self->_method_check_type_match(_139535_m);
		return;
	}
	this->self->_method_check_common_match(_139535_m);
}



inline void _11a093930_ScopeChecker::_method_check_fall(jule::Ref<_118d9a790_FallSt> _140329_f) {
	if (((*this)._field_cse == 0LL) || (((*this)._field_scope->_field_stmts._method_len() + 1LL) < (*this)._field_scope->_field_stmts._method_len())) {
		(*this)._field_s->_method_push_err(_140329_f->_field_token,jule::Str("fallthrough_wrong_use", 21),jule::Slice<jule::Any>({}));
		return;
	}
	_11a093930_Case* _140917__case = ((_11a093930_Case*)((*this)._field_cse));
	if ((!(jule::real(_140917__case->_field_next)))) {
		(*this)._field_s->_method_push_err(_140329_f->_field_token,jule::Str("fallthrough_into_final_case", 27),jule::Slice<jule::Any>({}));
		return;
	}
	(*this)._field_scope->_field_stmts._method_push(jule::Any(jule::new_struct<_11a093930_FallSt>(new( std::nothrow ) _11a093930_FallSt(static_cast<jule::Uintptr>(((jule::Uintptr)((_140917__case->_field_next).alloc)))))));
}



inline jule::Ref<_11a093930_BreakSt> _11a093930_ScopeChecker::_method_check_break_with_label(jule::Ref<_118d9a790_BreakSt> _142042_b) {
	jule::Ref<_11a093930_BreakSt> _142117_brk = this->self->_method_check_plain_break(_142042_b);
	if ((!(jule::real(_142117_brk)))) {
		return jule::new_ref<_11a093930_BreakSt>();
	}
	_142117_brk->_field_it=0LL;
	_142117_brk->_field_mtch=0LL;
	jule::Ref<_11a093930_ScopeLabel> _143117_label = _11a093930_find_label_parent(_142042_b->_field_label._field_kind,this->self->_field_parent);
	if ((!(jule::real(_143117_label)))) {
		this->self->_field_s->_method_push_err(_142042_b->_field_label,jule::Str("label_not_exist", 15),jule::Slice<jule::Any>({jule::Any(_142042_b->_field_label._field_kind)}));
		return jule::new_ref<_11a093930_BreakSt>();
	}
	_143117_label->_field_used=true;
	if ((_143117_label->_field_pos + 1LL) >= _143117_label->_field_scope->_field_scope->_field_stmts._method_len()) {
		this->self->_field_s->_method_push_err(_142042_b->_field_label,jule::Str("invalid_label", 13),jule::Slice<jule::Any>({}));
		return jule::new_ref<_11a093930_BreakSt>();
	}
	jule::Int _144413_i = _143117_label->_field_pos + 1LL;
	if (_144413_i >= _143117_label->_field_scope->_field_scope->_field_stmts._method_len()) {
		this->self->_field_s->_method_push_err(_142042_b->_field_label,jule::Str("invalid_label", 13),jule::Slice<jule::Any>({}));
	} else {
		jule::Any _144821_st = _143117_label->_field_scope->_field_scope->_field_stmts._method_at(_144413_i);
		{
			auto &_match_expr{ _144821_st };
			if (!(_match_expr.type_is<jule::Ref<_11a093930_InfIter>>())) { goto _case_end_4707928768; }
			_case_begin_4707928768:;
			{
				_142117_brk->_field_it=((jule::Uintptr)((_144821_st.operator jule::Ref<_11a093930_InfIter>()).alloc));
			}
			goto _match_end_4707926528;
			_case_end_4707928768:;
			if (!(_match_expr.type_is<jule::Ref<_11a093930_RangeIter>>())) { goto _case_end_4707927872; }
			_case_begin_4707927872:;
			{
				_142117_brk->_field_it=((jule::Uintptr)((_144821_st.operator jule::Ref<_11a093930_RangeIter>()).alloc));
			}
			goto _match_end_4707926528;
			_case_end_4707927872:;
			if (!(_match_expr.type_is<jule::Ref<_11a093930_WhileIter>>())) { goto _case_end_4707927984; }
			_case_begin_4707927984:;
			{
				_142117_brk->_field_it=((jule::Uintptr)((_144821_st.operator jule::Ref<_11a093930_WhileIter>()).alloc));
			}
			goto _match_end_4707926528;
			_case_end_4707927984:;
			if (!(_match_expr.type_is<jule::Ref<_11a093930_Match>>())) { goto _case_end_4707928096; }
			_case_begin_4707928096:;
			{
				_142117_brk->_field_mtch=((jule::Uintptr)((_144821_st.operator jule::Ref<_11a093930_Match>()).alloc));
			}
			goto _match_end_4707926528;
			_case_end_4707928096:;
			_case_begin_4707927568:;
			{
				this->self->_field_s->_method_push_err(_142042_b->_field_label,jule::Str("invalid_label", 13),jule::Slice<jule::Any>({}));
			}
			goto _match_end_4707926528;
			_case_end_4707927568:;
			_match_end_4707926528:;
		}
	}
	if (_142117_brk->_field_it != 0LL) {
		if ((!(this->self->_method_check_valid_break_label(_142117_brk->_field_it)))) {
			this->self->_field_s->_method_push_err(_142042_b->_field_label,jule::Str("invalid_label", 13),jule::Slice<jule::Any>({}));
		}
	}
	if (_142117_brk->_field_mtch != 0LL) {
		if ((!(this->self->_method_check_valid_break_label(_142117_brk->_field_mtch)))) {
			this->self->_field_s->_method_push_err(_142042_b->_field_label,jule::Str("invalid_label", 13),jule::Slice<jule::Any>({}));
		}
	}
	return _142117_brk;
}



inline jule::Ref<_11a093930_BreakSt> _11a093930_ScopeChecker::_method_check_plain_break(jule::Ref<_118d9a790_BreakSt> _147337_b) {
	jule::Ref<_11a093930_ScopeChecker> _147417_scope = this->self;
	_julec_label_iter:;
	{
		if (!(((((_147417_scope->_field_it == 0LL) && (_147417_scope->_field_cse == 0LL)) && jule::real(_147417_scope->_field_parent)) && (!(jule::real(_147417_scope->_field_owner)))))) { goto _case_end_4707951744; }
		_case_begin_4707951744:;
		{
			_147417_scope=_147417_scope->_field_parent;
			goto _julec_label_iter;
		}
		goto _match_end_4707951520;
		_case_end_4707951744:;
		if (!((_147417_scope->_field_it != 0LL))) { goto _case_end_4707951856; }
		_case_begin_4707951856:;
		{
			return jule::new_struct<_11a093930_BreakSt>(new( std::nothrow ) _11a093930_BreakSt(_147417_scope->_field_it,jule::Uintptr()));
		}
		goto _match_end_4707951520;
		_case_end_4707951856:;
		if (!((_147417_scope->_field_cse != 0LL))) { goto _case_end_4707951968; }
		_case_begin_4707951968:;
		{
			return jule::new_struct<_11a093930_BreakSt>(new( std::nothrow ) _11a093930_BreakSt(jule::Uintptr(),static_cast<jule::Uintptr>(((jule::Uintptr)((((_11a093930_Case*)(_147417_scope->_field_cse))->_field_owner).alloc)))));
		}
		goto _match_end_4707951520;
		_case_end_4707951968:;
		_match_end_4707951520:;
	}
	this->self->_field_s->_method_push_err(_147337_b->_field_token,jule::Str("break_at_out_of_valid_scope", 27),jule::Slice<jule::Any>({}));
	return jule::new_ref<_11a093930_BreakSt>();
}



inline void _11a093930_ScopeChecker::_method_check_break(jule::Ref<_118d9a790_BreakSt> _149231_b) {
	if (_149231_b->_field_label._field_id != 0LLU) {
		jule::Ref<_11a093930_BreakSt> _149421_brk = this->self->_method_check_break_with_label(_149231_b);
		this->self->_field_scope->_field_stmts._method_push(jule::Any(_149421_brk));
		return;
	}
	jule::Ref<_11a093930_BreakSt> _149917_brk = this->self->_method_check_plain_break(_149231_b);
	this->self->_field_scope->_field_stmts._method_push(jule::Any(_149917_brk));
}



inline void _11a093930_ScopeChecker::_method_check_ret(jule::Ref<_118d9a790_RetSt> _150333_r) {
	jule::Ref<_11a093930_RetSt> _150417_rt = jule::new_struct<_11a093930_RetSt>(new( std::nothrow ) _11a093930_RetSt());
	this->self->_field_scope->_field_stmts._method_push(jule::Any(_150417_rt));
	jule::Ref<_11a21f8a0_RetTypeChecker> _150717_rtc = jule::new_struct<_11a21f8a0_RetTypeChecker>(new( std::nothrow ) _11a21f8a0_RetTypeChecker(this->self,this->self->_method_get_root()->_field_owner,jule::Slice<jule::Ref<_11a3c2e70_TypeKind>>(),jule::Slice<jule::Any>(),jule::Slice<jule::Ref<_11a245f20_Var>>(),_150333_r->_field_token,jule::Any()));
	jule::Bool _151213_ok = _150717_rtc->_method_check(_150333_r->_field_expr);
	if ((!(_151213_ok))) {
		return;
	}
	if ((!(jule::real(_150333_r->_field_expr))) && (_150717_rtc->_field_vars.len() == 0LL)) {
		return;
	}
	_150417_rt->_field_vars=_150717_rtc->_field_vars;
	if (jule::real(_150333_r->_field_expr)) {
		_150417_rt->_field_expr=_150717_rtc->_field_model;
	}
}



inline void _11a093930_ScopeChecker::_method_check_node(jule::Any _152834_node) {
	{
		auto &_match_expr{ _152834_node };
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_Comment>>())) { goto _case_end_4708001360; }
		_case_begin_4708001360:;
		{
			goto _match_end_4707999792;
		}
		goto _match_end_4707999792;
		_case_end_4708001360:;
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_ScopeTree>>())) { goto _case_end_4708001472; }
		_case_begin_4708001472:;
		{
			this->self->_method_check_anon_scope(_152834_node.operator jule::Ref<_118d9a790_ScopeTree>());
		}
		goto _match_end_4707999792;
		_case_end_4708001472:;
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_VarDecl>>())) { goto _case_end_4708001584; }
		_case_begin_4708001584:;
		{
			this->self->_method_check_var_decl(_152834_node.operator jule::Ref<_118d9a790_VarDecl>());
		}
		goto _match_end_4707999792;
		_case_end_4708001584:;
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_TypeAliasDecl>>())) { goto _case_end_4708000656; }
		_case_begin_4708000656:;
		{
			this->self->_method_check_type_alias_decl(_152834_node.operator jule::Ref<_118d9a790_TypeAliasDecl>());
		}
		goto _match_end_4707999792;
		_case_end_4708000656:;
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_Expr>>())) { goto _case_end_4708000768; }
		_case_begin_4708000768:;
		{
			this->self->_method_check_expr(_152834_node.operator jule::Ref<_118d9a790_Expr>());
		}
		goto _match_end_4707999792;
		_case_end_4708000768:;
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_Conditional>>())) { goto _case_end_4708000880; }
		_case_begin_4708000880:;
		{
			this->self->_method_check_conditional(_152834_node.operator jule::Ref<_118d9a790_Conditional>());
		}
		goto _match_end_4707999792;
		_case_end_4708000880:;
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_Iter>>())) { goto _case_end_4708000992; }
		_case_begin_4708000992:;
		{
			this->self->_method_check_iter(_152834_node.operator jule::Ref<_118d9a790_Iter>());
		}
		goto _match_end_4707999792;
		_case_end_4708000992:;
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_ContSt>>())) { goto _case_end_4708002624; }
		_case_begin_4708002624:;
		{
			this->self->_method_check_cont(_152834_node.operator jule::Ref<_118d9a790_ContSt>());
		}
		goto _match_end_4707999792;
		_case_end_4708002624:;
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_LabelSt>>())) { goto _case_end_4708002736; }
		_case_begin_4708002736:;
		{
			this->self->_method_check_label(_152834_node.operator jule::Ref<_118d9a790_LabelSt>());
		}
		goto _match_end_4707999792;
		_case_end_4708002736:;
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_GotoSt>>())) { goto _case_end_4708002848; }
		_case_begin_4708002848:;
		{
			this->self->_method_push_goto(_152834_node.operator jule::Ref<_118d9a790_GotoSt>());
		}
		goto _match_end_4707999792;
		_case_end_4708002848:;
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_AssignSt>>())) { goto _case_end_4708002960; }
		_case_begin_4708002960:;
		{
			this->self->_method_check_assign_st(_152834_node.operator jule::Ref<_118d9a790_AssignSt>());
		}
		goto _match_end_4707999792;
		_case_end_4708002960:;
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_MatchCase>>())) { goto _case_end_4708003072; }
		_case_begin_4708003072:;
		{
			this->self->_method_check_match(_152834_node.operator jule::Ref<_118d9a790_MatchCase>());
		}
		goto _match_end_4707999792;
		_case_end_4708003072:;
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_FallSt>>())) { goto _case_end_4708003184; }
		_case_begin_4708003184:;
		{
			this->self->_method_check_fall(_152834_node.operator jule::Ref<_118d9a790_FallSt>());
		}
		goto _match_end_4707999792;
		_case_end_4708003184:;
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_BreakSt>>())) { goto _case_end_4708003296; }
		_case_begin_4708003296:;
		{
			this->self->_method_check_break(_152834_node.operator jule::Ref<_118d9a790_BreakSt>());
		}
		goto _match_end_4707999792;
		_case_end_4708003296:;
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_RetSt>>())) { goto _case_end_4708003408; }
		_case_begin_4708003408:;
		{
			this->self->_method_check_ret(_152834_node.operator jule::Ref<_118d9a790_RetSt>());
		}
		goto _match_end_4707999792;
		_case_end_4708003408:;
		_case_begin_4708000304:;
		{
			jule::outln(jule::Str("error <unimplemented scope node>", 32));
		}
		goto _match_end_4707999792;
		_case_end_4708000304:;
		_match_end_4707999792:;
	}
}



inline void _11a093930_ScopeChecker::_method_check_tree(void) {
	this->self->_field_i=0LL;
	_iter_begin_4766040016:;
	if (!(this->self->_field_i < this->self->_field_tree->_field_stmts.len())) { goto _iter_end_4766040016; }
	{
		this->self->_method_check_node(this->self->_field_tree->_field_stmts[static_cast<jule::Int>(this->self->_field_i)]);
	}
	_iter_next_4766040016:;
	(this->self->_field_i)++;
	goto _iter_begin_4766040016;
	_iter_end_4766040016:;
}



inline void _11a093930_ScopeChecker::_method_check_same_scope_goto(jule::Ref<_11a093930_ScopeGoto> _155640_gt,jule::Ref<_11a093930_ScopeLabel> _155660_label) {
	if (_155660_label->_field_pos < _155640_gt->_field_pos) {
		return;
	}
	jule::Int _156117_i = _155660_label->_field_pos;
	_iter_begin_4766050112:;
	if (!(_156117_i > _155640_gt->_field_pos)) { goto _iter_end_4766050112; }
	{
		jule::Any _156317_s = _155660_label->_field_scope->_field_scope->_field_stmts._method_at(_156117_i);
		if (_11a093930_st_is_def(_156317_s)) {
			(*this)._field_s->_method_push_err(_155640_gt->_field_gt->_field_token,jule::Str("goto_jumps_declarations", 23),jule::Slice<jule::Any>({jule::Any(_155640_gt->_field_gt->_field_label._field_kind)}));
			goto _iter_end_4766050112;
		}
	}
	_iter_next_4766050112:;
	(_156117_i)--;
	goto _iter_begin_4766050112;
	_iter_end_4766050112:;
}



inline jule::Bool _11a093930_ScopeChecker::_method_check_label_parents(jule::Ref<_11a093930_ScopeGoto> _157138_gt,jule::Ref<_11a093930_ScopeLabel> _157158_label) {
	jule::Ref<_11a093930_ScopeChecker> _157217_scope = _157158_label->_field_scope;
	_julec_label_parent_scopes:;
	if (jule::real(_157217_scope->_field_parent) && ((_157217_scope->_field_parent).alloc != (_157138_gt->_field_scope).alloc)) {
		_157217_scope=_157217_scope->_field_parent;
		jule::Int _157721_i = 0LL;
		_iter_begin_4766066112:;
		if (!(_157721_i < _157217_scope->_field_scope->_field_stmts._method_len())) { goto _iter_end_4766066112; }
		{
			{
				if (!((_157721_i >= _157158_label->_field_pos))) { goto _case_end_4766067680; }
				_case_begin_4766067680:;
				{
					return true;
				}
				goto _match_end_4766067440;
				_case_end_4766067680:;
				if (!((_11a093930_st_is_def(_157217_scope->_field_scope->_field_stmts._method_at(_157721_i))))) { goto _case_end_4766067792; }
				_case_begin_4766067792:;
				{
					(*this)._field_s->_method_push_err(_157138_gt->_field_gt->_field_token,jule::Str("goto_jumps_declarations", 23),jule::Slice<jule::Any>({jule::Any(_157138_gt->_field_gt->_field_label._field_kind)}));
					return false;
				}
				goto _match_end_4766067440;
				_case_end_4766067792:;
				_match_end_4766067440:;
			}
		}
		_iter_next_4766066112:;
		(_157721_i)++;
		goto _iter_begin_4766066112;
		_iter_end_4766066112:;
		goto _julec_label_parent_scopes;
	}
	return true;
}



inline void _11a093930_ScopeChecker::_method_check_goto_scope(jule::Ref<_11a093930_ScopeGoto> _159539_gt,jule::Ref<_11a093930_ScopeLabel> _159555_label) {
	jule::Int _159617_i = _159539_gt->_field_pos;
	_iter_begin_4766083376:;
	if (!(_159617_i < _159539_gt->_field_scope->_field_scope->_field_stmts._method_len())) { goto _iter_end_4766083376; }
	{
		{
			if (!((_159617_i >= _159555_label->_field_pos))) { goto _case_end_4766085024; }
			_case_begin_4766085024:;
			{
				return;
			}
			goto _match_end_4766084784;
			_case_end_4766085024:;
			if (!((_11a093930_st_is_def(_159539_gt->_field_scope->_field_scope->_field_stmts._method_at(_159617_i))))) { goto _case_end_4766085136; }
			_case_begin_4766085136:;
			{
				(*this)._field_s->_method_push_err(_159539_gt->_field_gt->_field_token,jule::Str("goto_jumps_declarations", 23),jule::Slice<jule::Any>({jule::Any(_159539_gt->_field_gt->_field_label._field_kind)}));
				return;
			}
			goto _match_end_4766084784;
			_case_end_4766085136:;
			_match_end_4766084784:;
		}
	}
	_iter_next_4766083376:;
	(_159617_i)++;
	goto _iter_begin_4766083376;
	_iter_end_4766083376:;
}



inline void _11a093930_ScopeChecker::_method_check_diff_scope_goto(jule::Ref<_11a093930_ScopeGoto> _160944_gt,jule::Ref<_11a093930_ScopeLabel> _160964_label) {
	{
		if (!(((_160964_label->_field_scope->_field_child_index > 0LL) && (_160944_gt->_field_scope->_field_child_index == 0LL)))) { goto _case_end_4766097600; }
		_case_begin_4766097600:;
		{
			if ((!((*this)._method_check_label_parents(_160944_gt,_160964_label)))) {
				return;
			}
		}
		goto _match_end_4766097344;
		_case_end_4766097600:;
		if (!((_160964_label->_field_scope->_field_child_index < _160944_gt->_field_scope->_field_child_index))) { goto _case_end_4766097712; }
		_case_begin_4766097712:;
		{
			return;
		}
		goto _match_end_4766097344;
		_case_end_4766097712:;
		_match_end_4766097344:;
	}
	jule::Ref<_11a093930_ScopeChecker> _162017_scope = _160964_label->_field_scope;
	jule::Int _162117_i = _160964_label->_field_pos - 1LL;
	_iter_begin_4766104624:;
	if (!(_162117_i >= 0LL)) { goto _iter_end_4766104624; }
	{
		jule::Any _162317_s = _162017_scope->_field_scope->_field_stmts._method_at(_162117_i);
		{
			auto &_match_expr{ _162317_s };
			if (!(_match_expr.type_is<jule::Ref<_11a093930_Scope>>())) { goto _case_end_4766109824; }
			_case_begin_4766109824:;
			{
				if (_162117_i <= _160944_gt->_field_pos) {
					return;
				}
			}
			goto _match_end_4766108720;
			_case_end_4766109824:;
			_match_end_4766108720:;
		}
		if (_11a093930_st_is_def(_162317_s)) {
			(*this)._field_s->_method_push_err(_160944_gt->_field_gt->_field_token,jule::Str("goto_jumps_declarations", 23),jule::Slice<jule::Any>({jule::Any(_160944_gt->_field_gt->_field_label._field_kind)}));
			goto _iter_end_4766104624;
		}
	}
	_iter_next_4766104624:;
	(_162117_i)--;
	goto _iter_begin_4766104624;
	_iter_end_4766104624:;
	if (jule::real(_162017_scope->_field_parent) && ((_162017_scope->_field_parent).alloc != (_160944_gt->_field_scope).alloc)) {
		(*this)._method_check_label_parents(_160944_gt,_160964_label);
	} else {
		(*this)._method_check_goto_scope(_160944_gt,_160964_label);
	}
}



inline void _11a093930_ScopeChecker::_method_check_goto(jule::Ref<_11a093930_ScopeGoto> _164533_gt,jule::Ref<_11a093930_ScopeLabel> _164553_label) {
	{
		if (!(((_164533_gt->_field_scope).alloc == (_164553_label->_field_scope).alloc))) { goto _case_end_4766124128; }
		_case_begin_4766124128:;
		{
			(*this)._method_check_same_scope_goto(_164533_gt,_164553_label);
		}
		goto _match_end_4766123872;
		_case_end_4766124128:;
		if (!((_164553_label->_field_scope->_field_child_index > 0LL))) { goto _case_end_4766124240; }
		_case_begin_4766124240:;
		{
			(*this)._method_check_diff_scope_goto(_164533_gt,_164553_label);
		}
		goto _match_end_4766123872;
		_case_end_4766124240:;
		_match_end_4766123872:;
	}
}



inline void _11a093930_ScopeChecker::_method_check_gotos(void) {
	{
		auto &__julec_range_expr = (*this)._field_gotos.get();
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11a093930_ScopeGoto> _11a093930_gt = *__julec_range_begin;
			_iter_begin_4766130976:;
			{
				jule::Ref<_11a093930_ScopeLabel> _165721_label = (*this)._method_find_label_all(_11a093930_gt->_field_gt->_field_label._field_kind);
				if ((!(jule::real(_165721_label)))) {
					(*this)._field_s->_method_push_err(_11a093930_gt->_field_gt->_field_token,jule::Str("label_not_exist", 15),jule::Slice<jule::Any>({jule::Any(_11a093930_gt->_field_gt->_field_label._field_kind)}));
					goto _iter_next_4766130976;
				}
				_165721_label->_field_used=true;
				(*this)._method_check_goto(_11a093930_gt,_165721_label);
			}
			_iter_next_4766130976:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a093930_gt = *__julec_range_begin; goto _iter_begin_4766130976; }
			_iter_end_4766130976:;
		}
	}
}



inline void _11a093930_ScopeChecker::_method_check_labels(void) {
	{
		auto &__julec_range_expr = (*this)._field_labels.get();
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11a093930_ScopeLabel> _11a093930_l = *__julec_range_begin;
			_iter_begin_4766143680:;
			{
				if ((!(_11a093930_l->_field_used))) {
					(*this)._field_s->_method_push_err(_11a093930_l->_field_token,jule::Str("declared_but_not_used", 21),jule::Slice<jule::Any>({jule::Any(_11a093930_l->_field_label->_field_ident)}));
				}
			}
			_iter_next_4766143680:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a093930_l = *__julec_range_begin; goto _iter_begin_4766143680; }
			_iter_end_4766143680:;
		}
	}
}



inline void _11a093930_ScopeChecker::_method_check_vars(void) {
	jule::Int _167717_i = 0LL;
	_iter_begin_4766144752:;
	if (!(_167717_i < (*this)._field_table->_field_vars._method_len())) { goto _iter_end_4766144752; }
	{
		jule::Ref<_11a245f20_Var> _167917_v = (*this)._field_table->_field_vars._method_at(_167717_i);
		if ((((!(_167917_v->_field_used)) && (!(_11911a8a0_is_ignore_ident(_167917_v->_field_ident)))) && (!(_11911a8a0_is_anon_ident(_167917_v->_field_ident)))) && (_167917_v->_field_ident != jule::Str("self", 4))) {
			(*this)._field_s->_method_push_err(_167917_v->_field_token,jule::Str("declared_but_not_used", 21),jule::Slice<jule::Any>({jule::Any(_167917_v->_field_ident)}));
		}
	}
	_iter_next_4766144752:;
	(_167717_i)++;
	goto _iter_begin_4766144752;
	_iter_end_4766144752:;
}



inline void _11a093930_ScopeChecker::_method_check_aliases(void) {
	jule::Int _168717_i = 0LL;
	_iter_begin_4766144576:;
	if (!(_168717_i < (*this)._field_table->_field_type_aliases._method_len())) { goto _iter_end_4766144576; }
	{
		jule::Ref<_11a3c2e70_TypeAlias> _168917_a = (*this)._field_table->_field_type_aliases._method_at(_168717_i);
		if (((!(_168917_a->_field_used)) && (!(_11911a8a0_is_ignore_ident(_168917_a->_field_ident)))) && (!(_11911a8a0_is_anon_ident(_168917_a->_field_ident)))) {
			(*this)._field_s->_method_push_err(_168917_a->_field_token,jule::Str("declared_but_not_used", 21),jule::Slice<jule::Any>({jule::Any(_168917_a->_field_ident)}));
		}
	}
	_iter_next_4766144576:;
	(_168717_i)++;
	goto _iter_begin_4766144576;
	_iter_end_4766144576:;
}



inline void _11a093930_ScopeChecker::_method_check(jule::Ref<_118d9a790_ScopeTree> _169729_tree,jule::Ref<_11a093930_Scope> _169751_s) {
	_169751_s->_field_deferred=_169729_tree->_field_deferred;
	_169751_s->_field_unsafety=_169729_tree->_field_unsafety;
	jule::I64 _170113_errors = this->self->_field_s->_field_errors.len();
	this->self->_field_tree=_169729_tree;
	this->self->_field_scope=_169751_s;
	this->self->_method_check_tree();
	if (_170113_errors == this->self->_field_s->_field_errors.len()) {
		this->self->_method_check_vars();
		this->self->_method_check_aliases();
	}
	if (this->self->_method_is_root()) {
		this->self->_method_check_gotos();
		this->self->_method_check_labels();
	}
}



inline jule::Ref<_11a093930_ScopeChecker> _11a093930_ScopeChecker::_method_new_child_checker(void) {
	jule::Ref<_11a093930_ScopeChecker> _172117_base = _11a093930_new_scope_checker_base(this->self->_field_s,jule::new_ref<_119099250_FnIns>());
	_172117_base->_field_parent=this->self;
	_172117_base->_field_labels=this->self->_field_labels;
	_172117_base->_field_gotos=this->self->_field_gotos;
	_172117_base->_field_child_index=this->self->_field_child_index + 1LL;
	return _172117_base;
}







std::ostream &operator<<(std::ostream &_Stream, const _11a093930_ScopeChecker &_Src) {
	_Stream << "ScopeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "child_index:" << _Src._field_child_index << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _119748ec0_BinopExprModel &_Src) {
	_Stream << "BinopExprModel{";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _119748ec0_UnaryExprModel &_Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _119748ec0_GetRefPtrExprModel &_Src) {
	_Stream << "GetRefPtrExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _119748ec0_StructArgExprModel &_Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _119748ec0_StructLitExprModel &_Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "strct:" << _Src._field_strct << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _119748ec0_AllocStructLitExprModel &_Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "lit:" << _Src._field_lit;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _119748ec0_CastingExprModel &_Src) {
	_Stream << "CastingExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr_kind:" << _Src._field_expr_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _119748ec0_FnCallExprModel &_Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "is_co:" << _Src._field_is_co << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _119748ec0_SliceExprModel &_Src) {
	_Stream << "SliceExprModel{";
	_Stream << "elem_kind:" << _Src._field_elem_kind << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _119748ec0_IndexigExprModel &_Src) {
	_Stream << "IndexigExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "index:" << _Src._field_index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _119748ec0_AnonFnExprModel &_Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "global:" << _Src._field_global;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _119748ec0_KeyValPairExprModel &_Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _119748ec0_MapExprModel &_Src) {
	_Stream << "MapExprModel{";
	_Stream << "key_kind:" << _Src._field_key_kind << ", ";
	_Stream << "val_kind:" << _Src._field_val_kind << ", ";
	_Stream << "entries:" << _Src._field_entries;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _119748ec0_SlicingExprModel &_Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _119748ec0_TraitSubIdentExprModel &_Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _119748ec0_StructSubIdentExprModel &_Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "expr_kind:" << _Src._field_expr_kind << ", ";
	_Stream << "method:" << _Src._field_method << ", ";
	_Stream << "field:" << _Src._field_field;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _119748ec0_StructStaticIdentExprModel &_Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "structure:" << _Src._field_structure << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "method:" << _Src._field_method;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _119748ec0_ArrayExprModel &_Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _119748ec0_CommonIdentExprModel &_Src) {
	_Stream << "CommonIdentExprModel{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _119748ec0_CommonSubIdentExprModel &_Src) {
	_Stream << "CommonSubIdentExprModel{";
	_Stream << "expr_kind:" << _Src._field_expr_kind << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _119748ec0_TupleExprModel &_Src) {
	_Stream << "TupleExprModel{";
	_Stream << "datas:" << _Src._field_datas;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _119748ec0_BuiltinOutCallExprModel &_Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _119748ec0_BuiltinOutlnCallExprModel &_Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _119748ec0_BuiltinCloneCallExprModel &_Src) {
	_Stream << "BuiltinCloneCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _119748ec0_BuiltinNewCallExprModel &_Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "init:" << _Src._field_init;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _119748ec0_BuiltinRealCallExprModel &_Src) {
	_Stream << "BuiltinRealCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _119748ec0_BuiltinDropCallExprModel &_Src) {
	_Stream << "BuiltinDropCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _119748ec0_BuiltinPanicCallExprModel &_Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _119748ec0_BuiltinMakeCallExprModel &_Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "len:" << _Src._field_len << ", ";
	_Stream << "cap:" << _Src._field_cap;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _119748ec0_BuiltinErrorTraitSubIdentExprModel &_Src) {
	_Stream << "BuiltinErrorTraitSubIdentExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _119748ec0_SizeofExprModel &_Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _119748ec0_AlignofExprModel &_Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _119748ec0_RuneExprModel &_Src) {
	_Stream << "RuneExprModel{";
	_Stream << "code:" << _Src._field_code;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _119748ec0_ExplicitDerefExprModel &_Src) {
	_Stream << "ExplicitDerefExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_11a0945e0_ImportInfo> _11a0945e0_Package::_method_find_package(jule::Str ) {
	return jule::new_ref<_11a0945e0_ImportInfo>();
}



inline jule::Ref<_11a0945e0_ImportInfo> _11a0945e0_Package::_method_select_package(jule::Fn<jule::Bool(jule::Ref<_11a0945e0_ImportInfo>)> ) {
	return jule::new_ref<_11a0945e0_ImportInfo>();
}



inline jule::Ref<_11a245f20_Var> _11a0945e0_Package::_method_find_var(jule::Str _26327_ident,jule::Bool _26339_cpp_linked) {
	return _11a0945e0_find_var_in_package((*this)._field_files,_26327_ident,_26339_cpp_linked);
}



inline jule::Ref<_11a3c2e70_TypeAlias> _11a0945e0_Package::_method_find_type_alias(jule::Str _26934_ident,jule::Bool _26946_cpp_linked) {
	return _11a0945e0_find_type_alias_in_package((*this)._field_files,_26934_ident,_26946_cpp_linked);
}



inline jule::Ref<_118bb7d70_Struct> _11a0945e0_Package::_method_find_struct(jule::Str _27530_ident,jule::Bool _27542_cpp_linked) {
	return _11a0945e0_find_struct_in_package((*this)._field_files,_27530_ident,_27542_cpp_linked);
}



inline jule::Ref<_119099250_Fn> _11a0945e0_Package::_method_find_fn(jule::Str _28126_ident,jule::Bool _28138_cpp_linked) {
	return _11a0945e0_find_fn_in_package((*this)._field_files,_28126_ident,_28138_cpp_linked);
}



inline jule::Ref<_118e2b060_Trait> _11a0945e0_Package::_method_find_trait(jule::Str _28729_ident) {
	return _11a0945e0_find_trait_in_package((*this)._field_files,_28729_ident);
}



inline jule::Ref<_11a089b40_Enum> _11a0945e0_Package::_method_find_enum(jule::Str _29328_ident) {
	return _11a0945e0_find_enum_in_package((*this)._field_files,_29328_ident);
}







std::ostream &operator<<(std::ostream &_Stream, const _11a0945e0_Package &_Src) {
	_Stream << "Package{";
	_Stream << "files:" << _Src._field_files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_11a0945e0_ImportInfo> _11a096220_Sema::_method_find_package(jule::Str _29331_ident) {
	return (*this)._field_file->_method_find_package(_29331_ident);
}



inline jule::Ref<_11a0945e0_ImportInfo> _11a096220_Sema::_method_select_package(jule::Fn<jule::Bool(jule::Ref<_11a0945e0_ImportInfo>)> _30333_selector) {
	return (*this)._field_file->_method_select_package(_30333_selector);
}



inline jule::Ref<_11a245f20_Var> _11a096220_Sema::_method_find_var(jule::Str _31327_ident,jule::Bool _31339_cpp_linked) {
	jule::Ref<_11a245f20_Var> _31517_v = _11a0945e0_find_var_in_package((*this)._field_files,_31327_ident,_31339_cpp_linked);
	if (jule::real(_31517_v)) {
		return _31517_v;
	}
	jule::Int _32117_i = 0LL;
	_iter_begin_4766296768:;
	if (!(_32117_i < (*this)._field_file->_field_imports._method_len())) { goto _iter_end_4766296768; }
	{
		jule::Ref<_11a0945e0_ImportInfo> _32321_imp = (*this)._field_file->_field_imports._method_at(_32117_i);
		if ((!(_11a096220_imp_is_lookupable(_32321_imp,_31327_ident)))) {
			goto _iter_next_4766296768;
		}
		jule::Ref<_11a245f20_Var> _32721_v = _32321_imp->_method_find_var(_31327_ident,_31339_cpp_linked);
		if (jule::real(_32721_v) && (*this)._method_is_accessible_define(_32721_v->_field_public,_32721_v->_field_token)) {
			return _32721_v;
		}
	}
	_iter_next_4766296768:;
	(_32117_i)++;
	goto _iter_begin_4766296768;
	_iter_end_4766296768:;
	return jule::new_ref<_11a245f20_Var>();
}



inline jule::Ref<_11a3c2e70_TypeAlias> _11a096220_Sema::_method_find_type_alias(jule::Str _34234_ident,jule::Bool _34246_cpp_linked) {
	jule::Ref<_11a3c2e70_TypeAlias> _34417_ta = _11a0945e0_find_type_alias_in_package((*this)._field_files,_34234_ident,_34246_cpp_linked);
	if (jule::real(_34417_ta)) {
		return _34417_ta;
	}
	jule::Int _35017_i = 0LL;
	_iter_begin_4766314640:;
	if (!(_35017_i < (*this)._field_file->_field_imports._method_len())) { goto _iter_end_4766314640; }
	{
		jule::Ref<_11a0945e0_ImportInfo> _35221_imp = (*this)._field_file->_field_imports._method_at(_35017_i);
		if ((!(_11a096220_imp_is_lookupable(_35221_imp,_34234_ident)))) {
			goto _iter_next_4766314640;
		}
		jule::Ref<_11a3c2e70_TypeAlias> _35621_ta = _35221_imp->_method_find_type_alias(_34234_ident,_34246_cpp_linked);
		if (jule::real(_35621_ta) && (*this)._method_is_accessible_define(_35621_ta->_field_public,_35621_ta->_field_token)) {
			return _35621_ta;
		}
	}
	_iter_next_4766314640:;
	(_35017_i)++;
	goto _iter_begin_4766314640;
	_iter_end_4766314640:;
	return jule::new_ref<_11a3c2e70_TypeAlias>();
}



inline jule::Ref<_118bb7d70_Struct> _11a096220_Sema::_method_find_struct(jule::Str _37130_ident,jule::Bool _37142_cpp_linked) {
	jule::Ref<_118bb7d70_Struct> _37317_strct = _11a0945e0_find_struct_in_package((*this)._field_files,_37130_ident,_37142_cpp_linked);
	if (jule::real(_37317_strct)) {
		return _37317_strct;
	}
	jule::Int _37917_i = 0LL;
	_iter_begin_4766331280:;
	if (!(_37917_i < (*this)._field_file->_field_imports._method_len())) { goto _iter_end_4766331280; }
	{
		jule::Ref<_11a0945e0_ImportInfo> _38121_imp = (*this)._field_file->_field_imports._method_at(_37917_i);
		if ((!(_11a096220_imp_is_lookupable(_38121_imp,_37130_ident)))) {
			goto _iter_next_4766331280;
		}
		jule::Ref<_118bb7d70_Struct> _38521_strct = _38121_imp->_method_find_struct(_37130_ident,_37142_cpp_linked);
		if (jule::real(_38521_strct) && (*this)._method_is_accessible_define(_38521_strct->_field_public,_38521_strct->_field_token)) {
			return _38521_strct;
		}
	}
	_iter_next_4766331280:;
	(_37917_i)++;
	goto _iter_begin_4766331280;
	_iter_end_4766331280:;
	return jule::new_ref<_118bb7d70_Struct>();
}



inline jule::Ref<_119099250_Fn> _11a096220_Sema::_method_find_fn(jule::Str _40026_ident,jule::Bool _40038_cpp_linked) {
	jule::Ref<_119099250_Fn> _40217_f = _11a0945e0_find_fn_in_package((*this)._field_files,_40026_ident,_40038_cpp_linked);
	if (jule::real(_40217_f)) {
		return _40217_f;
	}
	jule::Int _40817_i = 0LL;
	_iter_begin_4766347776:;
	if (!(_40817_i < (*this)._field_file->_field_imports._method_len())) { goto _iter_end_4766347776; }
	{
		jule::Ref<_11a0945e0_ImportInfo> _41021_imp = (*this)._field_file->_field_imports._method_at(_40817_i);
		if ((!(_11a096220_imp_is_lookupable(_41021_imp,_40026_ident)))) {
			goto _iter_next_4766347776;
		}
		jule::Ref<_119099250_Fn> _41421_f = _41021_imp->_method_find_fn(_40026_ident,_40038_cpp_linked);
		if (jule::real(_41421_f) && (*this)._method_is_accessible_define(_41421_f->_field_public,_41421_f->_field_token)) {
			return _41421_f;
		}
	}
	_iter_next_4766347776:;
	(_40817_i)++;
	goto _iter_begin_4766347776;
	_iter_end_4766347776:;
	return jule::new_ref<_119099250_Fn>();
}



inline jule::Ref<_118e2b060_Trait> _11a096220_Sema::_method_find_trait(jule::Str _42929_ident) {
	jule::Ref<_118e2b060_Trait> _43117_t = _11a0945e0_find_trait_in_package((*this)._field_files,_42929_ident);
	if (jule::real(_43117_t)) {
		return _43117_t;
	}
	jule::Int _43717_i = 0LL;
	_iter_begin_4766362400:;
	if (!(_43717_i < (*this)._field_file->_field_imports._method_len())) { goto _iter_end_4766362400; }
	{
		jule::Ref<_11a0945e0_ImportInfo> _43921_imp = (*this)._field_file->_field_imports._method_at(_43717_i);
		if ((!(_11a096220_imp_is_lookupable(_43921_imp,_42929_ident)))) {
			goto _iter_next_4766362400;
		}
		jule::Ref<_118e2b060_Trait> _44321_t = _43921_imp->_method_find_trait(_42929_ident);
		if (jule::real(_44321_t) && (*this)._method_is_accessible_define(_44321_t->_field_public,_44321_t->_field_token)) {
			return _44321_t;
		}
	}
	_iter_next_4766362400:;
	(_43717_i)++;
	goto _iter_begin_4766362400;
	_iter_end_4766362400:;
	return jule::new_ref<_118e2b060_Trait>();
}



inline jule::Ref<_11a089b40_Enum> _11a096220_Sema::_method_find_enum(jule::Str _45828_ident) {
	jule::Ref<_11a089b40_Enum> _46017_e = _11a0945e0_find_enum_in_package((*this)._field_files,_45828_ident);
	if (jule::real(_46017_e)) {
		return _46017_e;
	}
	jule::Int _46617_i = 0LL;
	_iter_begin_4766378000:;
	if (!(_46617_i < (*this)._field_file->_field_imports._method_len())) { goto _iter_end_4766378000; }
	{
		jule::Ref<_11a0945e0_ImportInfo> _46821_imp = (*this)._field_file->_field_imports._method_at(_46617_i);
		if ((!(_11a096220_imp_is_lookupable(_46821_imp,_45828_ident)))) {
			goto _iter_next_4766378000;
		}
		jule::Ref<_11a089b40_Enum> _47221_e = _46821_imp->_method_find_enum(_45828_ident);
		if (jule::real(_47221_e) && (*this)._method_is_accessible_define(_47221_e->_field_public,_47221_e->_field_token)) {
			return _47221_e;
		}
	}
	_iter_next_4766378000:;
	(_46617_i)++;
	goto _iter_begin_4766378000;
	_iter_end_4766378000:;
	return jule::new_ref<_11a089b40_Enum>();
}



inline void _11a096220_Sema::_method_set_current_file(jule::Ref<_11a3c2dc0_SymbolTable> _48339_f) {
	(*this)._field_file=_48339_f;
}



inline void _11a096220_Sema::_method_push_err(_11911a8a0_Token _48527_token,jule::Str _48541_key,jule::Slice<jule::Any> _48551_args) {
	(*this)._field_errors=append((*this)._field_errors,jule::Slice<_13fe81720_Log>({_11a096220_compiler_err(_48527_token,_48541_key,_48551_args)}));
}



inline jule::Bool _11a096220_Sema::_method_is_accessible_define(jule::Bool _49035_public,_11911a8a0_Token _49049_token) {
	return (_49035_public || (!(jule::real(_49049_token._field_file)))) || ((*this)._field_file->_field_file->_method_dir() == _49049_token._field_file->_method_dir());
}



inline jule::Bool _11a096220_Sema::_method_is_duplicated_ident(jule::Uintptr _49734_itself,jule::Str _49751_ident,jule::Bool _49763_cpp_linked) {
	{
		auto &__julec_range_expr = (*this)._field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11a3c2dc0_SymbolTable> _11a096220_f = *__julec_range_begin;
			_iter_begin_4766408576:;
			{
				if (_11a096220_f->_method_is_duplicated_ident(_49734_itself,_49751_ident,_49763_cpp_linked)) {
					return true;
				}
				jule::Int _50321_i = 0LL;
				_iter_begin_4766414336:;
				if (!(_50321_i < _11a096220_f->_field_imports._method_len())) { goto _iter_end_4766414336; }
				{
					jule::Ref<_11a0945e0_ImportInfo> _50521_imp = (&(_11a096220_f->_field_imports))->_method_at(_50321_i);
					{
						auto &__julec_range_expr = _50521_imp->_field_selected;
						if (__julec_range_expr.begin() != __julec_range_expr.end()) {
							auto __julec_range_begin = __julec_range_expr.begin();
							const auto __julec_range_end = __julec_range_expr.end();
							_11911a8a0_Token _11a096220_selected = *__julec_range_begin;
							_iter_begin_4766417392:;
							{
								if (_11a096220_selected._field_kind == _49751_ident) {
									return true;
								}
							}
							_iter_next_4766417392:;
							++__julec_range_begin;
							if (__julec_range_begin != __julec_range_end) { _11a096220_selected = *__julec_range_begin; goto _iter_begin_4766417392; }
							_iter_end_4766417392:;
						}
					}
				}
				_iter_next_4766414336:;
				(_50321_i)++;
				goto _iter_begin_4766414336;
				_iter_end_4766414336:;
			}
			_iter_next_4766408576:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a096220_f = *__julec_range_begin; goto _iter_begin_4766408576; }
			_iter_end_4766408576:;
		}
	}
	return false;
}



inline jule::Bool _11a096220_Sema::_method_check_generic_quantity(jule::Int _51641_required,jule::Int _51656_given,_11911a8a0_Token _51668_error_token) {
	jule::Bool _51690_ok = jule::Bool();
	{
		if (!(((_51641_required == 0LL) && (_51656_given > 0LL)))) { goto _case_end_4766426992; }
		_case_begin_4766426992:;
		{
			(*this)._method_push_err(_51668_error_token,jule::Str("not_has_generics", 16),jule::Slice<jule::Any>({}));
			_51690_ok = false;
			return _51690_ok;
		}
		goto _match_end_4766425632;
		_case_end_4766426992:;
		if (!(((_51641_required > 0LL) && (_51656_given == 0LL)))) { goto _case_end_4766427104; }
		_case_begin_4766427104:;
		{
			(*this)._method_push_err(_51668_error_token,jule::Str("has_generics", 12),jule::Slice<jule::Any>({}));
			_51690_ok = false;
			return _51690_ok;
		}
		goto _match_end_4766425632;
		_case_end_4766427104:;
		if (!((_51641_required < _51656_given))) { goto _case_end_4766428000; }
		_case_begin_4766428000:;
		{
			(*this)._method_push_err(_51668_error_token,jule::Str("generics_overflow", 17),jule::Slice<jule::Any>({}));
			_51690_ok = false;
			return _51690_ok;
		}
		goto _match_end_4766425632;
		_case_end_4766428000:;
		if (!((_51641_required > _51656_given))) { goto _case_end_4766428112; }
		_case_begin_4766428112:;
		{
			(*this)._method_push_err(_51668_error_token,jule::Str("missing_generics", 16),jule::Slice<jule::Any>({}));
			_51690_ok = false;
			return _51690_ok;
		}
		goto _match_end_4766425632;
		_case_end_4766428112:;
		_case_begin_4766425824:;
		{
			_51690_ok = true;
			return _51690_ok;
		}
		goto _match_end_4766425632;
		_case_end_4766425824:;
		_match_end_4766425632:;
	}
}



inline jule::Bool _11a096220_Sema::_method_is_duplicated_import_selection(jule::Uintptr _53945_itself,jule::Str _53962_ident) {
	jule::Int _54017_i = 0LL;
	_iter_begin_4766441104:;
	if (!(_54017_i < (*this)._field_file->_field_imports._method_len())) { goto _iter_end_4766441104; }
	{
		jule::Ref<_11a0945e0_ImportInfo> _54217_imp = ((*this)._field_file).alloc->_field_imports._method_at(_54017_i);
		if (((jule::Uintptr)((_54217_imp).alloc)) == _53945_itself) {
			goto _iter_end_4766441104;
		}
		if (_54217_imp->_method_exist_ident(_53962_ident)) {
			return true;
		}
	}
	_iter_next_4766441104:;
	(_54017_i)++;
	goto _iter_begin_4766441104;
	_iter_end_4766441104:;
	return false;
}



inline jule::Any _11a096220_Sema::_method_get_import_def(jule::Str _55629_ident,jule::Ref<_11a0945e0_ImportInfo>& _55646_imp) {
	if (_11aa913b0_find_package_builtin_def(_55646_imp->_field_link_path,_55629_ident) != nullptr) {
		return jule::Any(true);
	}
	{
		auto &__julec_range_expr = _55646_imp->_field_package->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11a3c2dc0_SymbolTable> _11a096220_f = *__julec_range_begin;
			_iter_begin_4766456000:;
			{
				
				jule::Any _56321_def = _11a096220_f->_method_def_by_ident(_55629_ident,false);
				if (_56321_def != nullptr) {
					return _56321_def;
				}
			}
			_iter_next_4766456000:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a096220_f = *__julec_range_begin; goto _iter_begin_4766456000; }
			_iter_end_4766456000:;
		}
	}
	return jule::Any(nullptr);
}



inline void _11a096220_Sema::_method_check_import_selections(jule::Ref<_11a0945e0_ImportInfo> _57246_imp) {
	(*this)._method_set_current_file((*this)._field_files[static_cast<jule::Int>(0LL)]);
	__JULE_DEFER({
		jule::drop((*this)._field_file);
	});
	{
		auto &__julec_range_expr = _57246_imp->_field_selected;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			_11911a8a0_Token _11a096220_ident = *__julec_range_begin;
			_iter_begin_4766465408:;
			{
				if (_11a096220_ident._field_kind == jule::Str("self", 4)) {
					goto _iter_next_4766465408;
				}
				if ((*this)._method_is_duplicated_import_selection(((jule::Uintptr)((_57246_imp).alloc)),_11a096220_ident._field_kind)) {
					(*this)._method_push_err(_11a096220_ident,jule::Str("duplicated_ident", 16),jule::Slice<jule::Any>({jule::Any(_11a096220_ident._field_kind)}));
					goto _iter_next_4766465408;
				}
				jule::Any _58721_def = (*this)._method_get_import_def(_11a096220_ident._field_kind,_57246_imp);
				{
					auto &_match_expr{ _58721_def };
					if (!(_match_expr.type_is<jule::Bool>())) { goto _case_end_4766477264; }
					_case_begin_4766477264:;
					{
						goto _iter_next_4766465408;
					}
					goto _match_end_4766474736;
					_case_end_4766477264:;
					if (!(_match_expr.type_is<jule::Ref<_11a245f20_Var>>())) { goto _case_end_4766476448; }
					_case_begin_4766476448:;
					{
						jule::Ref<_11a245f20_Var> _59425_v = _58721_def.operator jule::Ref<_11a245f20_Var>();
						if ((*this)._method_is_accessible_define(_59425_v->_field_public,_59425_v->_field_token)) {
							goto _iter_next_4766465408;
						}
					}
					goto _match_end_4766474736;
					_case_end_4766476448:;
					if (!(_match_expr.type_is<jule::Ref<_11a3c2e70_TypeAlias>>())) { goto _case_end_4766476560; }
					_case_begin_4766476560:;
					{
						jule::Ref<_11a3c2e70_TypeAlias> _60025_ta = _58721_def.operator jule::Ref<_11a3c2e70_TypeAlias>();
						if ((*this)._method_is_accessible_define(_60025_ta->_field_public,_60025_ta->_field_token)) {
							goto _iter_next_4766465408;
						}
					}
					goto _match_end_4766474736;
					_case_end_4766476560:;
					if (!(_match_expr.type_is<jule::Ref<_118bb7d70_Struct>>())) { goto _case_end_4766476672; }
					_case_begin_4766476672:;
					{
						jule::Ref<_118bb7d70_Struct> _60625_strct = _58721_def.operator jule::Ref<_118bb7d70_Struct>();
						if ((*this)._method_is_accessible_define(_60625_strct->_field_public,_60625_strct->_field_token)) {
							goto _iter_next_4766465408;
						}
					}
					goto _match_end_4766474736;
					_case_end_4766476672:;
					if (!(_match_expr.type_is<jule::Ref<_118e2b060_Trait>>())) { goto _case_end_4766479392; }
					_case_begin_4766479392:;
					{
						jule::Ref<_118e2b060_Trait> _61225_t = _58721_def.operator jule::Ref<_118e2b060_Trait>();
						if ((*this)._method_is_accessible_define(_61225_t->_field_public,_61225_t->_field_token)) {
							goto _iter_next_4766465408;
						}
					}
					goto _match_end_4766474736;
					_case_end_4766479392:;
					if (!(_match_expr.type_is<jule::Ref<_11a089b40_Enum>>())) { goto _case_end_4766479504; }
					_case_begin_4766479504:;
					{
						jule::Ref<_11a089b40_Enum> _61825_e = _58721_def.operator jule::Ref<_11a089b40_Enum>();
						if ((*this)._method_is_accessible_define(_61825_e->_field_public,_61825_e->_field_token)) {
							goto _iter_next_4766465408;
						}
					}
					goto _match_end_4766474736;
					_case_end_4766479504:;
					if (!(_match_expr.type_is<jule::Ref<_119099250_Fn>>())) { goto _case_end_4766479616; }
					_case_begin_4766479616:;
					{
						jule::Ref<_119099250_Fn> _62425_f = _58721_def.operator jule::Ref<_119099250_Fn>();
						if ((*this)._method_is_accessible_define(_62425_f->_field_public,_62425_f->_field_token)) {
							goto _iter_next_4766465408;
						}
					}
					goto _match_end_4766474736;
					_case_end_4766479616:;
					_case_begin_4766475952:;
					{
						(*this)._method_push_err(_11a096220_ident,jule::Str("ident_not_exist", 15),jule::Slice<jule::Any>({jule::Any(_11a096220_ident._field_kind)}));
						goto _iter_next_4766465408;
					}
					goto _match_end_4766474736;
					_case_end_4766475952:;
					_match_end_4766474736:;
				}
				(*this)._method_push_err(_11a096220_ident,jule::Str("ident_is_not_accessible", 23),jule::Slice<jule::Any>({jule::Any(_11a096220_ident._field_kind)}));
			}
			_iter_next_4766465408:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a096220_ident = *__julec_range_begin; goto _iter_begin_4766465408; }
			_iter_end_4766465408:;
		}
	}
}



inline jule::Bool _11a096220_Sema::_method_check_import(jule::Ref<_11a0945e0_ImportInfo> _63935_imp) {
	if ((_63935_imp->_field_duplicate || _63935_imp->_field_cpp_linked) || (_63935_imp->_field_package->_field_files.len() == 0LL)) {
		return true;
	}
	jule::Ref<_11a096220_Sema> _64417_sema = jule::new_struct<_11a096220_Sema>(new( std::nothrow ) _11a096220_Sema());
	_64417_sema->_method_check(_63935_imp->_field_package->_field_files);
	if (_64417_sema->_field_errors.len() > 0LL) {
		(*this)._field_errors=append((*this)._field_errors,_64417_sema->_field_errors);
		return false;
	}
	(*this)._method_check_import_selections(_63935_imp);
	return true;
}



inline void _11a096220_Sema::_method_check_imports(void) {
	{
		auto &__julec_range_expr = (*this)._field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11a3c2dc0_SymbolTable> _11a096220_file = *__julec_range_begin;
			_iter_begin_4766521408:;
			{
				jule::Int _65721_i = 0LL;
				_iter_begin_4766523072:;
				if (!(_65721_i < _11a096220_file->_field_imports._method_len())) { goto _iter_end_4766523072; }
				{
					jule::Ref<_11a0945e0_ImportInfo> _65925_imp = _11a096220_file->_field_imports._method_at(_65721_i);
					jule::Bool _66021_ok = (*this)._method_check_import(_65925_imp);
					if ((!(_66021_ok))) {
						(*this)._method_push_err(_65925_imp->_field_token,jule::Str("used_package_has_errors", 23),jule::Slice<jule::Any>({jule::Any(_65925_imp->_field_link_path)}));
						return;
					}
				}
				_iter_next_4766523072:;
				(_65721_i)++;
				goto _iter_begin_4766523072;
				_iter_end_4766523072:;
			}
			_iter_next_4766521408:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a096220_file = *__julec_range_begin; goto _iter_begin_4766521408; }
			_iter_end_4766521408:;
		}
	}
}



inline void _11a096220_Sema::_method_impl_file_impls(void) {
	jule::Int _67217_i = 0LL;
	_iter_begin_4766532272:;
	if (!(_67217_i < this->self->_field_file->_field_impls._method_len())) { goto _iter_end_4766532272; }
	{
		jule::Ref<_11a091460_Impl> _67421_imp = this->self->_field_file->_field_impls._method_at(_67217_i);
		this->self->_method_impl_impl(_67421_imp);
	}
	_iter_next_4766532272:;
	(_67217_i)++;
	goto _iter_begin_4766532272;
	_iter_end_4766532272:;
}



inline void _11a096220_Sema::_method_impl_impls(void) {
	{
		auto &__julec_range_expr = this->self->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11a3c2dc0_SymbolTable> _11a096220_file = *__julec_range_begin;
			_iter_begin_4766542048:;
			{
				this->self->_method_set_current_file(_11a096220_file);
				this->self->_method_impl_file_impls();
			}
			_iter_next_4766542048:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a096220_file = *__julec_range_begin; goto _iter_begin_4766542048; }
			_iter_end_4766542048:;
		}
	}
}



inline void _11a096220_Sema::_method_check_enums(void) {
	{
		auto &__julec_range_expr = this->self->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11a3c2dc0_SymbolTable> _11a096220_file = *__julec_range_begin;
			_iter_begin_4766546976:;
			{
				this->self->_method_set_current_file(_11a096220_file);
				this->self->_method_check_enum_decls();
			}
			_iter_next_4766546976:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a096220_file = *__julec_range_begin; goto _iter_begin_4766546976; }
			_iter_end_4766546976:;
		}
	}
}



inline jule::Bool _11a096220_Sema::_method_check_type_with_refers(jule::Ref<_11a3c2e70_TypeSymbol> _69546_t,jule::Trait<_11aa76f70_Lookup> _69562_l,jule::Ref<_11a3c2e70_Referencer> _69573_referencer) {
	jule::Bool _695100_ok = jule::Bool();
	if (_69546_t->_method_checked()) {
		_695100_ok = true;
		return _695100_ok;
	}
	_11a3c2e70_TypeChecker _69917_tc = _11a3c2e70_TypeChecker(this->self,_69562_l,_69573_referencer,_11911a8a0_Token(),jule::Slice<jule::Ref<_118d9a790_GenericDecl>>(),jule::Slice<jule::Ref<_11a3c2e70_TypeAlias>>(),jule::Bool());
	_69917_tc._method_check(_69546_t);
	_695100_ok = _69546_t->_method_checked();
	return _695100_ok;
}



inline jule::Bool _11a096220_Sema::_method_check_type(jule::Ref<_11a3c2e70_TypeSymbol> _71034_t,jule::Trait<_11aa76f70_Lookup> _71050_l) {
	jule::Bool _71063_ok = jule::Bool();
	_71063_ok = this->self->_method_check_type_with_refers(_71034_t,_71050_l,jule::new_ref<_11a3c2e70_Referencer>());
	return _71063_ok;
}



inline jule::Ref<_11a3c2e70_TypeKind> _11a096220_Sema::_method_build_type_with_generics(jule::Ref<_118d9a790_TypeDecl> _71648_t,jule::Slice<jule::Ref<_11a3c2e70_TypeAlias>> _71662_generics) {
	jule::Ref<_11a3c2e70_TypeChecker> _71717_tc = jule::new_struct<_11a3c2e70_TypeChecker>(new( std::nothrow ) _11a3c2e70_TypeChecker(this->self,this->self,jule::Ref<_11a3c2e70_Referencer>(),_11911a8a0_Token(),jule::Slice<jule::Ref<_118d9a790_GenericDecl>>(),_71662_generics,jule::Bool()));
	return _71717_tc->_method_check_decl(_71648_t);
}



inline jule::Ref<_11a3c2e70_TypeKind> _11a096220_Sema::_method_build_type(jule::Ref<_118d9a790_TypeDecl> _72634_t) {
	return this->self->_method_build_type_with_generics(_72634_t,nullptr);
}



inline jule::Ref<_11a53f4f0_Data> _11a096220_Sema::_method_evalpd(jule::Ref<_118d9a790_Expr> _73230_expr,jule::Trait<_11aa76f70_Lookup> _73247_l,jule::Ref<_11a3c2e70_TypeKind> _73262_p,jule::Ref<_11a245f20_Var> _73276_owner) {
	jule::Ref<_11a53f4f0_Eval> _73317_e = jule::new_struct<_11a53f4f0_Eval>(new( std::nothrow ) _11a53f4f0_Eval(this->self,_73247_l,jule::Ref<_11a3c2e70_TypeKind>(),jule::Bool(),_73276_owner));
	{
		auto &_match_expr{ _73247_l };
		if (!(_match_expr.type_is<jule::Ref<_11a093930_ScopeChecker>>())) { goto _case_end_4766602528; }
		_case_begin_4766602528:;
		{
			_73317_e->_field_unsafety=_73247_l.operator jule::Ref<_11a093930_ScopeChecker>()->_method_is_unsafe();
		}
		goto _match_end_4766601664;
		_case_end_4766602528:;
		_match_end_4766601664:;
	}
	_73317_e->_field_prefix=_73262_p;
	return _73317_e->_method_eval_expr(_73230_expr);
}



inline jule::Ref<_11a53f4f0_Data> _11a096220_Sema::_method_evalp(jule::Ref<_118d9a790_Expr> _75029_expr,jule::Trait<_11aa76f70_Lookup> _75046_l,jule::Ref<_11a3c2e70_TypeKind> _75061_p) {
	return this->self->_method_evalpd(_75029_expr,_75046_l,_75061_p,jule::new_ref<_11a245f20_Var>());
}



inline jule::Ref<_11a53f4f0_Data> _11a096220_Sema::_method_eval(jule::Ref<_118d9a790_Expr> _75528_expr,jule::Trait<_11aa76f70_Lookup> _75545_l) {
	return this->self->_method_evalp(_75528_expr,_75545_l,jule::new_ref<_11a3c2e70_TypeKind>());
}



inline void _11a096220_Sema::_method_check_assign_type(jule::Ref<_11a3c2e70_TypeKind> _75941_dest,jule::Ref<_11a53f4f0_Data> _75962_d,_11911a8a0_Token _75972_error_token,jule::Bool _75992_deref) {
	jule::Ref<_11a21f8a0_AssignTypeChecker> _76017_atc = jule::new_struct<_11a21f8a0_AssignTypeChecker>(new( std::nothrow ) _11a21f8a0_AssignTypeChecker(this->self,_75941_dest,_75962_d,_75972_error_token,_75992_deref));
	jule::Bool _76713_ok = _76017_atc->_method_check();
	if ((!(_76713_ok))) {
		return;
	}
	if ((!(_75962_d->_method_is_const())) || (!(jule::real(_75941_dest->_method_prim())))) {
		return;
	}
	jule::Str _77617_kind = _75941_dest->_method_prim()->_field_kind;
	{
		if (!((_11ab8b300_is_sig_int(_77617_kind)))) { goto _case_end_4766627424; }
		_case_begin_4766627424:;
		{
			_75962_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_75962_d->_field_constant->_method_as_i64()));
		}
		goto _match_end_4766627200;
		_case_end_4766627424:;
		if (!((_11ab8b300_is_unsig_int(_77617_kind)))) { goto _case_end_4766627536; }
		_case_begin_4766627536:;
		{
			_75962_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_75962_d->_field_constant->_method_as_u64()));
		}
		goto _match_end_4766627200;
		_case_end_4766627536:;
		if (!((_11ab8b300_is_float(_77617_kind)))) { goto _case_end_4766627648; }
		_case_begin_4766627648:;
		{
			_75962_d->_field_constant->_method_set_f64(static_cast<jule::F64>(_75962_d->_field_constant->_method_as_f64()));
		}
		goto _match_end_4766627200;
		_case_end_4766627648:;
		_match_end_4766627200:;
	}
}



inline jule::Bool _11a096220_Sema::_method_check_type_compatibility(jule::Ref<_11a3c2e70_TypeKind> _79048_dest,jule::Ref<_11a3c2e70_TypeKind> _79113_src,_11911a8a0_Token _79129_error_token,jule::Bool _79149_deref) {
	jule::Str _79213_dest_kind = _79048_dest->_method_to_str();
	if ((!(jule::real(_79113_src)))) {
		this->self->_method_push_err(_79129_error_token,jule::Str("incompatible_types", 18),jule::Slice<jule::Any>({jule::Any(_79213_dest_kind),jule::Any(jule::Str("<untyped>", 9))}));
		return false;
	}
	jule::Str _79713_src_kind = _79113_src->_method_to_str();
	if (jule::real(_79113_src->_method_tup())) {
		this->self->_method_push_err(_79129_error_token,jule::Str("incompatible_types", 18),jule::Slice<jule::Any>({jule::Any(_79213_dest_kind),jule::Any(_79713_src_kind)}));
		return false;
	}
	if (jule::real(_79048_dest->_method_prim()) && _79048_dest->_method_prim()->_method_is_any()) {
		return false;
	}
	jule::Ref<_11a21f8a0_TypeCompatibilityChecker> _80917_tcc = jule::new_struct<_11a21f8a0_TypeCompatibilityChecker>(new( std::nothrow ) _11a21f8a0_TypeCompatibilityChecker(this->self,_79048_dest,_79113_src,_79129_error_token,_79149_deref,jule::Bool()));
	jule::Bool _81613_ok = _80917_tcc->_method_check();
	{
		if (!((_81613_ok))) { goto _case_end_4766666240; }
		_case_begin_4766666240:;
		{
			return true;
		}
		goto _match_end_4766664544;
		_case_end_4766666240:;
		if (!((_79213_dest_kind == _79713_src_kind))) { goto _case_end_4766669168; }
		_case_begin_4766669168:;
		{
			return true;
		}
		goto _match_end_4766664544;
		_case_end_4766669168:;
		_case_begin_4766646960:;
		{
			this->self->_method_push_err(_79129_error_token,jule::Str("incompatible_types", 18),jule::Slice<jule::Any>({jule::Any(_79213_dest_kind),jule::Any(_79713_src_kind)}));
			return false;
		}
		goto _match_end_4766664544;
		_case_end_4766646960:;
		_match_end_4766664544:;
	}
}



inline jule::Ref<_11a3c2e70_TypeKind> _11a096220_Sema::_method_build_non_generic_type_kind(jule::Ref<_118d9a790_TypeDecl> _83751_ast,jule::Slice<jule::Ref<_118d9a790_GenericDecl>> _83767_generics) {
	jule::Ref<_11a3c2e70_TypeChecker> _83817_tc = jule::new_struct<_11a3c2e70_TypeChecker>(new( std::nothrow ) _11a3c2e70_TypeChecker(this->self,this->self,jule::Ref<_11a3c2e70_Referencer>(),_11911a8a0_Token(),_83767_generics,jule::Slice<jule::Ref<_11a3c2e70_TypeAlias>>(),jule::Bool()));
	return _83817_tc->_method_check_decl(_83751_ast);
}



inline void _11a096220_Sema::_method_build_fn_non_generic_type_kinds(jule::Ref<_119099250_FnIns> _84655_f) {
	jule::Slice<jule::Ref<_118d9a790_GenericDecl>> _84717_generics = nullptr;
	if (_84655_f->_field_decl->_method_is_method()) {
		_84717_generics=append(_84655_f->_field_decl->_field_generics,_84655_f->_field_decl->_field_owner->_field_generics);
	} else {
		_84717_generics=_84655_f->_field_decl->_field_generics;
	}
	{
		auto &__julec_range_expr = _84655_f->_field_params;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_119099250_ParamIns> _11a096220_p = *__julec_range_begin;
			_iter_begin_4766682064:;
			{
				if ((!(_11a096220_p->_field_decl->_method_is_self()))) {
					_11a096220_p->_field_kind=this->self->_method_build_non_generic_type_kind(_11a096220_p->_field_decl->_field_kind->_field_decl,_84717_generics);
				}
			}
			_iter_next_4766682064:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a096220_p = *__julec_range_begin; goto _iter_begin_4766682064; }
			_iter_end_4766682064:;
		}
	}
	if ((!(_84655_f->_field_decl->_method_is_void()))) {
		_84655_f->_field_result=this->self->_method_build_non_generic_type_kind(_84655_f->_field_decl->_field_result->_field_kind->_field_decl,_84717_generics);
	}
}



inline jule::Ref<_119099250_FnIns> _11a096220_Sema::_method_get_trait_check_fn_kind(jule::Ref<_119099250_Fn> _86447_f) {
	jule::Ref<_119099250_FnIns> _86517_ins = _86447_f->_method_instance_force();
	this->self->_method_build_fn_non_generic_type_kinds(_86517_ins);
	return _86517_ins;
}



inline jule::Bool _11a096220_Sema::_method_reload_fn_ins_types(jule::Ref<_119099250_FnIns> _87043_f) {
	jule::Bool _87056_ok = jule::Bool();
	if (_87043_f->_method_is_builtin() || _87043_f->_method_is_anon()) {
		_87056_ok = true;
		return _87056_ok;
	}
	jule::Ref<_11a096220_Sema> _87517_sema = _87043_f->_field_decl->_field_sema;
	jule::Ref<_11a3c2dc0_SymbolTable> _87717_old = _87043_f->_field_decl->_field_sema->_field_file;
	__JULE_DEFER({
		_87043_f->_field_decl->_field_sema->_method_set_current_file(_87717_old);
	});
	jule::Ref<_11a3c2dc0_SymbolTable> _87917_file = _11a096220_find_file(_87043_f->_field_decl->_field_sema->_field_files,_87043_f->_field_decl->_field_token._field_file);
	if (jule::real(_87917_file)) {
		_87043_f->_field_decl->_field_sema->_method_set_current_file(_87917_file);
	}
	jule::I64 _88417_size = _87043_f->_field_generics.len();
	if (jule::real(_87043_f->_field_decl) && jule::real(_87043_f->_field_decl->_field_owner)) {
		_88417_size+=static_cast<jule::I64>(_87043_f->_field_decl->_field_owner->_field_generics.len());
	}
	jule::Slice<jule::Ref<_11a3c2e70_TypeAlias>> _88917_generics = jule::Slice<jule::Ref<_11a3c2e70_TypeAlias>>::alloc(static_cast<jule::Int>(0LL),static_cast<jule::Int>(_88417_size));
	{
		auto &__julec_range_expr = _87043_f->_field_generics;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _11a096220_i = 0;
			jule::Ref<_11a3c2e70_TypeKind> _11a096220_g = *__julec_range_begin;
			_iter_begin_4766723808:;
			{
				_88917_generics=append(_88917_generics,jule::Slice<jule::Ref<_11a3c2e70_TypeAlias>>({jule::new_struct<_11a3c2e70_TypeAlias>(new( std::nothrow ) _11a3c2e70_TypeAlias(jule::Ref<_118d9a790_ScopeTree>(),jule::Bool(),jule::Bool(),jule::Bool(),_11911a8a0_Token(),_87043_f->_field_decl->_field_generics[static_cast<jule::Int>(_11a096220_i)]->_field_ident,jule::new_struct<_11a3c2e70_TypeSymbol>(new( std::nothrow ) _11a3c2e70_TypeSymbol(jule::Ref<_118d9a790_TypeDecl>(),_11a096220_g)),jule::Str(),jule::Slice<jule::Any>()))}));
			}
			_iter_next_4766723808:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_11a096220_i; _11a096220_g = *__julec_range_begin; goto _iter_begin_4766723808; }
			_iter_end_4766723808:;
		}
	}
	if (jule::real(_87043_f->_field_decl) && jule::real(_87043_f->_field_decl->_field_owner)) {
		jule::Ref<_118bb7d70_StructIns> _90121_owner = _87043_f->_field_owner;
		{
			auto &__julec_range_expr = _90121_owner->_field_generics;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Int _11a096220_i = 0;
				jule::Ref<_11a3c2e70_TypeKind> _11a096220_g = *__julec_range_begin;
				_iter_begin_4766733408:;
				{
					_88917_generics=append(_88917_generics,jule::Slice<jule::Ref<_11a3c2e70_TypeAlias>>({jule::new_struct<_11a3c2e70_TypeAlias>(new( std::nothrow ) _11a3c2e70_TypeAlias(jule::Ref<_118d9a790_ScopeTree>(),jule::Bool(),jule::Bool(),jule::Bool(),_11911a8a0_Token(),_90121_owner->_field_decl->_field_generics[static_cast<jule::Int>(_11a096220_i)]->_field_ident,jule::new_struct<_11a3c2e70_TypeSymbol>(new( std::nothrow ) _11a3c2e70_TypeSymbol(jule::Ref<_118d9a790_TypeDecl>(),_11a096220_g)),jule::Str(),jule::Slice<jule::Any>()))}));
				}
				_iter_next_4766733408:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { ++_11a096220_i; _11a096220_g = *__julec_range_begin; goto _iter_begin_4766733408; }
				_iter_end_4766733408:;
			}
		}
	}
	_87056_ok=true;
	{
		auto &__julec_range_expr = _87043_f->_field_params;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_119099250_ParamIns> _11a096220_p = *__julec_range_begin;
			_iter_begin_4766735008:;
			{
				if ((!(_11a096220_p->_field_decl->_method_is_self()))) {
					_11a096220_p->_field_kind=_87517_sema->_method_build_type_with_generics(_11a096220_p->_field_decl->_field_kind->_field_decl,_88917_generics);
					_87056_ok=jule::real(_11a096220_p->_field_kind) && _87056_ok;
				}
			}
			_iter_next_4766735008:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a096220_p = *__julec_range_begin; goto _iter_begin_4766735008; }
			_iter_end_4766735008:;
		}
	}
	if ((!(_87043_f->_field_decl->_method_is_void()))) {
		_87043_f->_field_result=_87517_sema->_method_build_type_with_generics(_87043_f->_field_decl->_field_result->_field_kind->_field_decl,_88917_generics);
		_87056_ok=jule::real(_87043_f->_field_result) && _87056_ok;
	}
	if ((_87517_sema).alloc != (this->self).alloc) {
		this->self->_field_errors=append(this->self->_field_errors,_87517_sema->_field_errors);
	}
	_87056_ok = _87056_ok;
	return _87056_ok;
}



inline void _11a096220_Sema::_method_check_validity_for_init_expr(jule::Bool _93248_left_mut,jule::Bool _93264_left_ref,jule::Ref<_11a3c2e70_TypeKind> _9339_left_kind,jule::Ref<_11a53f4f0_Data> _93335_d,_11911a8a0_Token _93345_error_token) {
	if ((_93248_left_mut && (!(_93335_d->_field_mutable))) && _11a3c2e70_is_mut(_93335_d->_field_kind)) {
		this->self->_method_push_err(_93345_error_token,jule::Str("assignment_non_mut_to_mut", 25),jule::Slice<jule::Any>({}));
	}
	if (_93264_left_ref) {
		{
			auto &_match_expr{ _93335_d->_field_model };
			if (!(_match_expr.type_is<jule::Ref<_11a245f20_Var>>() || _match_expr.type_is<jule::Ref<_119748ec0_TraitSubIdentExprModel>>() || _match_expr.type_is<jule::Ref<_119748ec0_CommonIdentExprModel>>() || _match_expr.type_is<jule::Ref<_119748ec0_StructSubIdentExprModel>>() || _match_expr.type_is<jule::Ref<_119748ec0_CommonSubIdentExprModel>>())) { goto _case_end_4766766496; }
			goto _match_end_4766763840;
			_case_end_4766766496:;
			if (!(_match_expr.type_is<jule::Ref<_119748ec0_UnaryExprModel>>())) { goto _case_end_4766767808; }
			_case_begin_4766767808:;
			{
				jule::Ref<_119748ec0_UnaryExprModel> _94721_unary = _93335_d->_field_model.operator jule::Ref<_119748ec0_UnaryExprModel>();
				if (_94721_unary->_field_op == jule::Str("*", 1)) {
					goto _match_end_4766763840;
				}
				goto _case_begin_4766765008;
			}
			goto _match_end_4766763840;
			_case_end_4766767808:;
			_case_begin_4766765008:;
			{
				this->self->_method_push_err(_93345_error_token,jule::Str("reference_assign_non_var", 24),jule::Slice<jule::Any>({}));
			}
			goto _match_end_4766763840;
			_case_end_4766765008:;
			_match_end_4766763840:;
		}
		if (_93248_left_mut && (!(_93335_d->_field_mutable))) {
			this->self->_method_push_err(_93345_error_token,jule::Str("mut_reference_points_to_immut", 29),jule::Slice<jule::Any>({}));
		}
	}
	jule::Ref<_11a21f8a0_AssignTypeChecker> _96317_atc = jule::new_struct<_11a21f8a0_AssignTypeChecker>(new( std::nothrow ) _11a21f8a0_AssignTypeChecker(this->self,jule::Ref<_11a3c2e70_TypeKind>(),_93335_d,_93345_error_token,jule::Bool()));
	_96317_atc->_method_check_validity();
}



inline jule::Bool _11a096220_Sema::_method_check_type_alias_decl_kind(jule::Ref<_11a3c2e70_TypeAlias> _97150_ta,jule::Trait<_11aa76f70_Lookup> _97166_l) {
	jule::Bool _97179_ok = jule::Bool();
	jule::Ref<_11a3c2dc0_SymbolTable> _97217_old = this->self->_field_file;
	__JULE_DEFER({
		this->self->_method_set_current_file(_97217_old);
	});
	jule::Ref<_11a3c2dc0_SymbolTable> _97417_file = _11a096220_find_file(this->self->_field_files,_97150_ta->_field_token._field_file);
	if (jule::real(_97417_file)) {
		this->self->_method_set_current_file(_97417_file);
	}
	_97179_ok=this->self->_method_check_type_with_refers(_97150_ta->_field_kind,_97166_l,jule::new_struct<_11a3c2e70_Referencer>(new( std::nothrow ) _11a3c2e70_Referencer(_97150_ta->_field_ident,jule::Any(_97150_ta),(&(_97150_ta->_field_refers)))));
	if ((_97179_ok && jule::real(_97150_ta->_field_kind->_field_kind->_method_arr())) && _97150_ta->_field_kind->_field_kind->_method_arr()->_field_auto) {
		this->self->_method_push_err(_97150_ta->_field_kind->_field_decl->_field_token,jule::Str("array_auto_sized", 16),jule::Slice<jule::Any>({}));
		_97179_ok=false;
	}
	return _97179_ok;
}



inline void _11a096220_Sema::_method_check_type_alias_decl(jule::Ref<_11a3c2e70_TypeAlias> _99145_ta,jule::Trait<_11aa76f70_Lookup> _99161_l) {
	if (_11911a8a0_is_ignore_ident(_99145_ta->_field_ident)) {
		this->self->_method_push_err(_99145_ta->_field_token,jule::Str("ignore_ident", 12),jule::Slice<jule::Any>({}));
	}
	this->self->_method_check_type_alias_decl_kind(_99145_ta,_99161_l);
}



inline void _11a096220_Sema::_method_check_type_alias_decl_dup(jule::Ref<_11a3c2e70_TypeAlias> _99949_ta) {
	if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_99949_ta).alloc)),_99949_ta->_field_ident,_99949_ta->_field_cpp_linked)) {
		this->self->_method_push_err(_99949_ta->_field_token,jule::Str("duplicated_ident", 16),jule::Slice<jule::Any>({jule::Any(_99949_ta->_field_ident)}));
	}
	this->self->_method_check_type_alias_decl_kind(_99949_ta,this->self);
}



inline jule::Bool _11a096220_Sema::_method_check_type_alias_decls(void) {
	jule::Bool _100744_ok = jule::Bool();
	jule::Int _100817_i = 0LL;
	_iter_begin_4766814912:;
	if (!(_100817_i < this->self->_field_file->_field_type_aliases._method_len())) { goto _iter_end_4766814912; }
	{
		jule::Ref<_11a3c2e70_TypeAlias> _101021_ta = this->self->_field_file->_field_type_aliases._method_at(_100817_i);
		this->self->_method_check_type_alias_decl_dup(_101021_ta);
		if (this->self->_field_errors.len() > 0LL) {
			_100744_ok = false;
			return _100744_ok;
		}
	}
	_iter_next_4766814912:;
	(_100817_i)++;
	goto _iter_begin_4766814912;
	_iter_end_4766814912:;
	_100744_ok = true;
	return _100744_ok;
}



inline void _11a096220_Sema::_method_check_enum_items_dup(jule::Ref<_11a089b40_Enum> _102139_e) {
	{
		auto &__julec_range_expr = _102139_e->_field_items;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11a089b40_EnumItem> _11a096220_item = *__julec_range_begin;
			_iter_begin_4766825168:;
			{
				if (_11911a8a0_is_ignore_ident(_11a096220_item->_field_ident)) {
					(*this)._method_push_err(_11a096220_item->_field_token,jule::Str("ignore_ident", 12),jule::Slice<jule::Any>({}));
				} else {
					{
						auto &__julec_range_expr = _102139_e->_field_items;
						if (__julec_range_expr.begin() != __julec_range_expr.end()) {
							auto __julec_range_begin = __julec_range_expr.begin();
							const auto __julec_range_end = __julec_range_expr.end();
							jule::Ref<_11a089b40_EnumItem> _11a096220_citem = *__julec_range_begin;
							_iter_begin_4766848080:;
							{
								if (_11a096220_item == _11a096220_citem) {
									goto _iter_end_4766848080;
								} else if (_11a096220_item->_field_ident == _11a096220_citem->_field_ident) {
									(*this)._method_push_err(_11a096220_item->_field_token,jule::Str("duplicated_ident", 16),jule::Slice<jule::Any>({jule::Any(_11a096220_item->_field_ident)}));
									goto _iter_end_4766848080;
								}
							}
							_iter_next_4766848080:;
							++__julec_range_begin;
							if (__julec_range_begin != __julec_range_end) { _11a096220_citem = *__julec_range_begin; goto _iter_begin_4766848080; }
							_iter_end_4766848080:;
						}
					}
				}
			}
			_iter_next_4766825168:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a096220_item = *__julec_range_begin; goto _iter_begin_4766825168; }
			_iter_end_4766825168:;
		}
	}
}



inline void _11a096220_Sema::_method_check_enum_items_str(jule::Ref<_11a089b40_Enum> _103844_e) {
	{
		auto &__julec_range_expr = _103844_e->_field_items;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11a089b40_EnumItem> _11a096220_item = *__julec_range_begin;
			_iter_begin_4766849216:;
			{
				if (_11a096220_item->_method_auto_expr()) {
					_11a096220_item->_field_value=jule::new_struct<_11a53f4f0_Value>(new( std::nothrow ) _11a53f4f0_Value(jule::Ref<_118d9a790_Expr>(),jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::Ref<_11a3c2e70_TypeKind>(),jule::Ref<_11a3c2e70_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),_11ab854f0_new_str(_11a096220_item->_field_ident)))));
					_11a096220_item->_field_value->_field_data->_field_model=jule::Any(_11a096220_item->_field_value->_field_data->_field_constant);
				} else {
					jule::Ref<_11a53f4f0_Data> _104825_d = this->self->_method_eval(_11a096220_item->_field_value->_field_expr,this->self);
					if ((!(jule::real(_104825_d)))) {
						goto _iter_next_4766849216;
					}
					if ((!(_104825_d->_method_is_const()))) {
						this->self->_method_push_err(_11a096220_item->_field_value->_field_expr->_field_token,jule::Str("expr_not_const", 14),jule::Slice<jule::Any>({}));
					}
					this->self->_method_check_assign_type(_103844_e->_field_kind->_field_kind,_104825_d,_11a096220_item->_field_token,false);
					_11a096220_item->_field_value->_field_data=_104825_d;
				}
			}
			_iter_next_4766849216:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a096220_item = *__julec_range_begin; goto _iter_begin_4766849216; }
			_iter_end_4766849216:;
		}
	}
}



inline void _11a096220_Sema::_method_check_enum_items_int(jule::Ref<_11a089b40_Enum> _106344_e) {
	jule::U64 _106417_max = static_cast<jule::U64>(_11ab89af0_max_of(_106344_e->_field_kind->_field_kind->_method_prim()->_method_to_str()));
	{
		auto &__julec_range_expr = _106344_e->_field_items;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _11a096220_i = 0;
			jule::Ref<_11a089b40_EnumItem> _11a096220_item = *__julec_range_begin;
			_iter_begin_4766878976:;
			{
				if (_106417_max == 0LL) {
					this->self->_method_push_err(_11a096220_item->_field_token,jule::Str("overflow_limits", 15),jule::Slice<jule::Any>({}));
				} else {
					(_106417_max)--;
				}
				if (_11a096220_item->_method_auto_expr()) {
					_11a096220_item->_field_value=jule::new_struct<_11a53f4f0_Value>(new( std::nothrow ) _11a53f4f0_Value(jule::Ref<_118d9a790_Expr>(),jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::Ref<_11a3c2e70_TypeKind>(),jule::Ref<_11a3c2e70_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),_11ab854f0_new_u64(_106417_max - (_106417_max - static_cast<jule::U64>(_11a096220_i)))))));
					_11a096220_item->_field_value->_field_data->_field_model=jule::Any(_11a096220_item->_field_value->_field_data->_field_constant);
				} else {
					jule::Ref<_11a53f4f0_Data> _108025_d = this->self->_method_eval(_11a096220_item->_field_value->_field_expr,this->self);
					if ((!(jule::real(_108025_d)))) {
						goto _iter_next_4766878976;
					}
					if ((!(_108025_d->_method_is_const()))) {
						this->self->_method_push_err(_11a096220_item->_field_value->_field_expr->_field_token,jule::Str("expr_not_const", 14),jule::Slice<jule::Any>({}));
					}
					this->self->_method_check_assign_type(_106344_e->_field_kind->_field_kind,_108025_d,_11a096220_item->_field_token,false);
					_11a096220_item->_field_value->_field_data=_108025_d;
				}
			}
			_iter_next_4766878976:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_11a096220_i; _11a096220_item = *__julec_range_begin; goto _iter_begin_4766878976; }
			_iter_end_4766878976:;
		}
	}
}



inline void _11a096220_Sema::_method_check_enum_decl(jule::Ref<_11a089b40_Enum> _109539_e) {
	if (_11911a8a0_is_ignore_ident(_109539_e->_field_ident)) {
		this->self->_method_push_err(_109539_e->_field_token,jule::Str("ignore_ident", 12),jule::Slice<jule::Any>({}));
	} else if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_109539_e).alloc)),_109539_e->_field_ident,false)) {
		this->self->_method_push_err(_109539_e->_field_token,jule::Str("duplicated_ident", 16),jule::Slice<jule::Any>({jule::Any(_109539_e->_field_ident)}));
	}
	if (_109539_e->_field_items.len() == 0LL) {
		this->self->_method_push_err(_109539_e->_field_token,jule::Str("no_member_in_enum", 17),jule::Slice<jule::Any>({jule::Any(_109539_e->_field_ident)}));
	}
	this->self->_method_check_enum_items_dup(_109539_e);
	if (jule::real(_109539_e->_field_kind)) {
		if ((!(this->self->_method_check_type(_109539_e->_field_kind,this->self)))) {
			return;
		}
	} else {
		_109539_e->_field_kind=jule::new_struct<_11a3c2e70_TypeSymbol>(new( std::nothrow ) _11a3c2e70_TypeSymbol(jule::Ref<_118d9a790_TypeDecl>(),jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_11a3c2e70_build_prim_type(jule::Str("int", 3))))));
	}
	jule::Ref<_11a3c2e70_Prim> _112117_t = _109539_e->_field_kind->_field_kind->_method_prim();
	if ((!(jule::real(_112117_t)))) {
		this->self->_method_push_err(_109539_e->_field_token,jule::Str("invalid_type_source", 19),jule::Slice<jule::Any>({}));
		return;
	}
	{
		if (!((_112117_t->_method_is_str()))) { goto _case_end_4766927904; }
		_case_begin_4766927904:;
		{
			this->self->_method_check_enum_items_str(_109539_e);
		}
		goto _match_end_4766923744;
		_case_end_4766927904:;
		if (!((_11ab8b300_is_int(_112117_t->_method_to_str())))) { goto _case_end_4766927168; }
		_case_begin_4766927168:;
		{
			this->self->_method_check_enum_items_int(_109539_e);
		}
		goto _match_end_4766923744;
		_case_end_4766927168:;
		_case_begin_4766923904:;
		{
			this->self->_method_push_err(_109539_e->_field_token,jule::Str("invalid_type_source", 19),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4766923744;
		_case_end_4766923904:;
		_match_end_4766923744:;
	}
}



inline jule::Bool _11a096220_Sema::_method_check_enum_decls(void) {
	jule::Bool _114138_ok = jule::Bool();
	jule::Int _114217_i = 0LL;
	_iter_begin_4766936800:;
	if (!(_114217_i < this->self->_field_file->_field_enums._method_len())) { goto _iter_end_4766936800; }
	{
		jule::Ref<_11a089b40_Enum> _114421_e = this->self->_field_file->_field_enums._method_at(_114217_i);
		this->self->_method_check_enum_decl(_114421_e);
		if (this->self->_field_errors.len() > 0LL) {
			_114138_ok = false;
			return _114138_ok;
		}
	}
	_iter_next_4766936800:;
	(_114217_i)++;
	goto _iter_begin_4766936800;
	_iter_end_4766936800:;
	_114138_ok = true;
	return _114138_ok;
}



inline jule::Bool _11a096220_Sema::_method_check_decl_generics(jule::Slice<jule::Ref<_118d9a790_GenericDecl>> _115538_generics) {
	jule::Bool _115566_ok = jule::Bool();
	_115566_ok=true;
	{
		auto &__julec_range_expr = _115538_generics;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _11a096220_i = 0;
			jule::Ref<_118d9a790_GenericDecl> _11a096220_g = *__julec_range_begin;
			_iter_begin_4766948432:;
			{
				if (_11911a8a0_is_ignore_ident(_11a096220_g->_field_ident)) {
					(*this)._method_push_err(_11a096220_g->_field_token,jule::Str("ignore_ident", 12),jule::Slice<jule::Any>({}));
					_115566_ok=false;
					goto _iter_next_4766948432;
				}
				_julec_label_duplication_lookup:;
				{
					auto &__julec_range_expr = _115538_generics;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Int _11a096220_j = 0;
						jule::Ref<_118d9a790_GenericDecl> _11a096220_ct = *__julec_range_begin;
						_iter_begin_4766954528:;
						{
							{
								if (!((_11a096220_j >= _11a096220_i))) { goto _case_end_4766957008; }
								_case_begin_4766957008:;
								{
									goto _iter_end_4766954528;
								}
								goto _match_end_4766956768;
								_case_end_4766957008:;
								if (!((_11a096220_g->_field_ident == _11a096220_ct->_field_ident))) { goto _case_end_4766957120; }
								_case_begin_4766957120:;
								{
									(*this)._method_push_err(_11a096220_g->_field_token,jule::Str("duplicated_ident", 16),jule::Slice<jule::Any>({jule::Any(_11a096220_g->_field_ident)}));
									_115566_ok=false;
									goto _iter_end_4766954528;
								}
								goto _match_end_4766956768;
								_case_end_4766957120:;
								_match_end_4766956768:;
							}
						}
						_iter_next_4766954528:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { ++_11a096220_j; _11a096220_ct = *__julec_range_begin; goto _iter_begin_4766954528; }
						_iter_end_4766954528:;
					}
				}
			}
			_iter_next_4766948432:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_11a096220_i; _11a096220_g = *__julec_range_begin; goto _iter_begin_4766948432; }
			_iter_end_4766948432:;
		}
	}
	return _115566_ok;
}



inline jule::Bool _11a096220_Sema::_method_check_fn_decl_params_dup(jule::Ref<_119099250_Fn> _118243_f) {
	jule::Bool _118253_ok = jule::Bool();
	_118253_ok=true;
	_julec_label_check:;
	{
		auto &__julec_range_expr = _118243_f->_field_params;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _11a096220_i = 0;
			jule::Ref<_119099250_Param> _11a096220_p = *__julec_range_begin;
			_iter_begin_4766966960:;
			{
				{
					auto &__julec_range_expr = _118243_f->_field_generics;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Ref<_118d9a790_GenericDecl> _11a096220_g = *__julec_range_begin;
						_iter_begin_4766969600:;
						{
							if (_11a096220_p->_field_ident == _11a096220_g->_field_ident) {
								_118253_ok=false;
								(*this)._method_push_err(_11a096220_p->_field_token,jule::Str("duplicated_ident", 16),jule::Slice<jule::Any>({jule::Any(_11a096220_p->_field_ident)}));
								goto _iter_next_4766966960;
							}
						}
						_iter_next_4766969600:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { _11a096220_g = *__julec_range_begin; goto _iter_begin_4766969600; }
						_iter_end_4766969600:;
					}
				}
				_julec_label_params_lookup:;
				{
					auto &__julec_range_expr = _118243_f->_field_params;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Int _11a096220_j = 0;
						jule::Ref<_119099250_Param> _11a096220_jp = *__julec_range_begin;
						_iter_begin_4766970240:;
						{
							{
								if (!((_11a096220_j >= _11a096220_i))) { goto _case_end_4766978176; }
								_case_begin_4766978176:;
								{
									goto _iter_end_4766970240;
								}
								goto _match_end_4766977920;
								_case_end_4766978176:;
								if (!((_11911a8a0_is_anon_ident(_11a096220_p->_field_ident) || _11911a8a0_is_anon_ident(_11a096220_jp->_field_ident)))) { goto _case_end_4766978288; }
								_case_begin_4766978288:;
								{
									goto _iter_end_4766970240;
								}
								goto _match_end_4766977920;
								_case_end_4766978288:;
								if (!((_11a096220_p->_field_ident == _11a096220_jp->_field_ident))) { goto _case_end_4766978400; }
								_case_begin_4766978400:;
								{
									_118253_ok=false;
									(*this)._method_push_err(_11a096220_p->_field_token,jule::Str("duplicated_ident", 16),jule::Slice<jule::Any>({jule::Any(_11a096220_p->_field_ident)}));
									goto _iter_next_4766966960;
								}
								goto _match_end_4766977920;
								_case_end_4766978400:;
								_match_end_4766977920:;
							}
						}
						_iter_next_4766970240:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { ++_11a096220_j; _11a096220_jp = *__julec_range_begin; goto _iter_begin_4766970240; }
						_iter_end_4766970240:;
					}
				}
			}
			_iter_next_4766966960:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_11a096220_i; _11a096220_p = *__julec_range_begin; goto _iter_begin_4766966960; }
			_iter_end_4766966960:;
		}
	}
	return _118253_ok;
}



inline jule::Bool _11a096220_Sema::_method_check_fn_decl_result_dup(jule::Ref<_119099250_Fn> _121643_f) {
	jule::Bool _121653_ok = jule::Bool();
	_121653_ok=true;
	if (_121643_f->_method_is_void()) {
		return _121653_ok;
	}
	{
		auto &__julec_range_expr = _121643_f->_field_result->_field_idents;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _11a096220_i = 0;
			_11911a8a0_Token _11a096220_v = *__julec_range_begin;
			_iter_begin_4766991808:;
			{
				if (_11911a8a0_is_ignore_ident(_11a096220_v._field_kind)) {
					goto _iter_next_4766991808;
				}
				{
					auto &__julec_range_expr = _121643_f->_field_generics;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Ref<_118d9a790_GenericDecl> _11a096220_g = *__julec_range_begin;
						_iter_begin_4766995856:;
						{
							if (_11a096220_v._field_kind == _11a096220_g->_field_ident) {
								goto _julec_label_exist;
							}
						}
						_iter_next_4766995856:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { _11a096220_g = *__julec_range_begin; goto _iter_begin_4766995856; }
						_iter_end_4766995856:;
					}
				}
				{
					auto &__julec_range_expr = _121643_f->_field_params;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Ref<_119099250_Param> _11a096220_p = *__julec_range_begin;
						_iter_begin_4766999472:;
						{
							if (_11a096220_v._field_kind == _11a096220_p->_field_ident) {
								goto _julec_label_exist;
							}
						}
						_iter_next_4766999472:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { _11a096220_p = *__julec_range_begin; goto _iter_begin_4766999472; }
						_iter_end_4766999472:;
					}
				}
				_julec_label_itself_lookup:;
				{
					auto &__julec_range_expr = _121643_f->_field_result->_field_idents;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Int _11a096220_j = 0;
						_11911a8a0_Token _11a096220_jv = *__julec_range_begin;
						_iter_begin_4767004704:;
						{
							{
								if (!((_11a096220_j >= _11a096220_i))) { goto _case_end_4767007344; }
								_case_begin_4767007344:;
								{
									goto _iter_end_4767004704;
								}
								goto _match_end_4767007104;
								_case_end_4767007344:;
								if (!((_11a096220_jv._field_kind == _11a096220_v._field_kind))) { goto _case_end_4767007456; }
								_case_begin_4767007456:;
								{
									goto _julec_label_exist;
								}
								goto _match_end_4767007104;
								_case_end_4767007456:;
								_match_end_4767007104:;
							}
						}
						_iter_next_4767004704:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { ++_11a096220_j; _11a096220_jv = *__julec_range_begin; goto _iter_begin_4767004704; }
						_iter_end_4767004704:;
					}
				}
				goto _iter_next_4766991808;
				_julec_label_exist:;
				(*this)._method_push_err(_11a096220_v,jule::Str("duplicated_ident", 16),jule::Slice<jule::Any>({jule::Any(_11a096220_v._field_kind)}));
				_121653_ok=false;
			}
			_iter_next_4766991808:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_11a096220_i; _11a096220_v = *__julec_range_begin; goto _iter_begin_4766991808; }
			_iter_end_4766991808:;
		}
	}
	return _121653_ok;
}



inline jule::Bool _11a096220_Sema::_method_check_fn_decl_types(jule::Ref<_119099250_Fn> _126443_f) {
	jule::Bool _126453_ok = jule::Bool();
	_126453_ok=true;
	jule::Slice<jule::Ref<_118d9a790_GenericDecl>> _126717_generics = _126443_f->_field_generics;
	if (jule::real(_126443_f->_field_owner)) {
		_126717_generics=append(_126717_generics,_126443_f->_field_owner->_field_generics);
	}
	{
		auto &__julec_range_expr = _126443_f->_field_params;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_119099250_Param> _11a096220_p = *__julec_range_begin;
			_iter_begin_4767023920:;
			{
				if ((!(_11a096220_p->_method_is_self()))) {
					jule::Ref<_11a3c2e70_TypeKind> _127425_kind = this->self->_method_build_non_generic_type_kind(_11a096220_p->_field_kind->_field_decl,_126717_generics);
					_126453_ok=jule::real(_127425_kind) && _126453_ok;
					_11a096220_p->_field_kind->_field_kind=_127425_kind;
				}
			}
			_iter_next_4767023920:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a096220_p = *__julec_range_begin; goto _iter_begin_4767023920; }
			_iter_end_4767023920:;
		}
	}
	if ((!(_126443_f->_method_is_void()))) {
		jule::Ref<_11a3c2e70_TypeKind> _128121_kind = this->self->_method_build_non_generic_type_kind(_126443_f->_field_result->_field_kind->_field_decl,_126717_generics);
		_126453_ok=jule::real(_128121_kind) && _126453_ok;
		_126443_f->_field_result->_field_kind->_field_kind=_128121_kind;
	}
	_126453_ok = _126453_ok;
	return _126453_ok;
}



inline jule::Bool _11a096220_Sema::_method_check_fn_decl_prototype(jule::Ref<_119099250_Fn> _129147_f) {
	jule::Bool _129157_ok = jule::Bool();
	{
		if (!(((!(this->self->_method_check_decl_generics(_129147_f->_field_generics)))))) { goto _case_end_4767039632; }
		_case_begin_4767039632:;
		{
			_129157_ok = false;
			return _129157_ok;
		}
		goto _match_end_4767038256;
		_case_end_4767039632:;
		if (!(((!(this->self->_method_check_fn_decl_params_dup(_129147_f)))))) { goto _case_end_4767039744; }
		_case_begin_4767039744:;
		{
			_129157_ok = false;
			return _129157_ok;
		}
		goto _match_end_4767038256;
		_case_end_4767039744:;
		if (!(((!(this->self->_method_check_fn_decl_result_dup(_129147_f)))))) { goto _case_end_4767040640; }
		_case_begin_4767040640:;
		{
			_129157_ok = false;
			return _129157_ok;
		}
		goto _match_end_4767038256;
		_case_end_4767040640:;
		if (!(((!(this->self->_method_check_fn_decl_types(_129147_f)))))) { goto _case_end_4767040752; }
		_case_begin_4767040752:;
		{
			_129157_ok = false;
			return _129157_ok;
		}
		goto _match_end_4767038256;
		_case_end_4767040752:;
		_case_begin_4767038464:;
		{
			_129157_ok = true;
			return _129157_ok;
		}
		goto _match_end_4767038256;
		_case_end_4767038464:;
		_match_end_4767038256:;
	}
}



inline void _11a096220_Sema::_method_check_trait_decl_method(jule::Ref<_119099250_Fn> _131047_f) {
	if (_11911a8a0_is_ignore_ident(_131047_f->_field_ident)) {
		this->self->_method_push_err(_131047_f->_field_token,jule::Str("ignore_ident", 12),jule::Slice<jule::Any>({}));
	}
	this->self->_method_check_fn_decl_prototype(_131047_f);
	_131047_f->_field_sema=this->self;
}



inline void _11a096220_Sema::_method_check_trait_decl_methods(jule::Ref<_118e2b060_Trait> _131948_t) {
	{
		auto &__julec_range_expr = _131948_t->_field_methods;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _11a096220_i = 0;
			jule::Ref<_119099250_Fn> _11a096220_f = *__julec_range_begin;
			_iter_begin_4767055056:;
			{
				this->self->_method_check_trait_decl_method(_11a096220_f);
				if (this->self->_field_errors.len() > 0LL) {
					return;
				}
				_julec_label_duplicate_lookup:;
				{
					auto &__julec_range_expr = _131948_t->_field_methods;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Int _11a096220_j = 0;
						jule::Ref<_119099250_Fn> _11a096220_jf = *__julec_range_begin;
						_iter_begin_4767061216:;
						{
							{
								if (!((_11a096220_j >= _11a096220_i))) { goto _case_end_4767064224; }
								_case_begin_4767064224:;
								{
									goto _iter_end_4767061216;
								}
								goto _match_end_4767063984;
								_case_end_4767064224:;
								if (!((_11a096220_f->_field_ident == _11a096220_jf->_field_ident))) { goto _case_end_4767064336; }
								_case_begin_4767064336:;
								{
									this->self->_method_push_err(_11a096220_f->_field_token,jule::Str("duplicated_ident", 16),jule::Slice<jule::Any>({jule::Any(_11a096220_f->_field_ident)}));
									goto _iter_end_4767061216;
								}
								goto _match_end_4767063984;
								_case_end_4767064336:;
								_match_end_4767063984:;
							}
						}
						_iter_next_4767061216:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { ++_11a096220_j; _11a096220_jf = *__julec_range_begin; goto _iter_begin_4767061216; }
						_iter_end_4767061216:;
					}
				}
			}
			_iter_next_4767055056:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_11a096220_i; _11a096220_f = *__julec_range_begin; goto _iter_begin_4767055056; }
			_iter_end_4767055056:;
		}
	}
}



inline void _11a096220_Sema::_method_check_trait_decl(jule::Ref<_118e2b060_Trait> _134940_t) {
	if (_11911a8a0_is_ignore_ident(_134940_t->_field_ident)) {
		this->self->_method_push_err(_134940_t->_field_token,jule::Str("ignore_ident", 12),jule::Slice<jule::Any>({}));
	} else if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_134940_t).alloc)),_134940_t->_field_ident,false)) {
		this->self->_method_push_err(_134940_t->_field_token,jule::Str("duplicated_ident", 16),jule::Slice<jule::Any>({jule::Any(_134940_t->_field_ident)}));
	}
	this->self->_method_check_trait_decl_methods(_134940_t);
}



inline jule::Bool _11a096220_Sema::_method_check_trait_decls(void) {
	jule::Bool _136039_ok = jule::Bool();
	jule::Int _136117_i = 0LL;
	_iter_begin_4767083648:;
	if (!(_136117_i < this->self->_field_file->_field_traits._method_len())) { goto _iter_end_4767083648; }
	{
		jule::Ref<_118e2b060_Trait> _136321_t = this->self->_field_file->_field_traits._method_at(_136117_i);
		this->self->_method_check_trait_decl(_136321_t);
		if (this->self->_field_errors.len() > 0LL) {
			_136039_ok = false;
			return _136039_ok;
		}
	}
	_iter_next_4767083648:;
	(_136117_i)++;
	goto _iter_begin_4767083648;
	_iter_end_4767083648:;
	_136039_ok = true;
	return _136039_ok;
}



inline jule::Bool _11a096220_Sema::_method_check_trait_impl_methods(jule::Ref<_118e2b060_Trait> _137447_base,jule::Ref<_11a091460_Impl> _137461_ipl) {
	jule::Bool _137475_ok = jule::Bool();
	_137475_ok=true;
	{
		auto &__julec_range_expr = _137461_ipl->_field_methods;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_119099250_Fn> _11a096220_f = *__julec_range_begin;
			_iter_begin_4767094928:;
			{
				if ((!(jule::real(_137447_base->_method_find_method(_11a096220_f->_field_ident))))) {
					(*this)._method_push_err(_11a096220_f->_field_token,jule::Str("trait_have_not_ident", 20),jule::Slice<jule::Any>({jule::Any(_137447_base->_field_ident),jule::Any(_11a096220_f->_field_ident)}));
					_137475_ok=false;
				}
			}
			_iter_next_4767094928:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a096220_f = *__julec_range_begin; goto _iter_begin_4767094928; }
			_iter_end_4767094928:;
		}
	}
	return _137475_ok;
}



inline jule::Bool _11a096220_Sema::_method_impl_to_struct(jule::Ref<_118bb7d70_Struct> _138538_dest,jule::Ref<_11a091460_Impl> _138557_ipl) {
	jule::Bool _138571_ok = jule::Bool();
	_138571_ok=true;
	{
		auto &__julec_range_expr = _138557_ipl->_field_methods;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_119099250_Fn> _11a096220_f = *__julec_range_begin;
			_iter_begin_4767106480:;
			{
				if (jule::real(_138538_dest->_method_find_method(_11a096220_f->_field_ident,_11a096220_f->_field_statically)) || jule::real(_138538_dest->_method_find_field(_11a096220_f->_field_ident))) {
					this->self->_method_push_err(_11a096220_f->_field_token,jule::Str("struct_already_have_ident", 25),jule::Slice<jule::Any>({jule::Any(_138538_dest->_field_ident),jule::Any(_11a096220_f->_field_ident)}));
					_138571_ok=false;
					goto _iter_next_4767106480;
				}
				if ((_138538_dest->_field_generics.len() > 0LL) && (_11a096220_f->_field_generics.len() > 0LL)) {
					{
						auto &__julec_range_expr = _11a096220_f->_field_generics;
						if (__julec_range_expr.begin() != __julec_range_expr.end()) {
							auto __julec_range_begin = __julec_range_expr.begin();
							const auto __julec_range_end = __julec_range_expr.end();
							jule::Ref<_118d9a790_GenericDecl> _11a096220_fg = *__julec_range_begin;
							_iter_begin_4767116736:;
							{
								{
									auto &__julec_range_expr = _138538_dest->_field_generics;
									if (__julec_range_expr.begin() != __julec_range_expr.end()) {
										auto __julec_range_begin = __julec_range_expr.begin();
										const auto __julec_range_end = __julec_range_expr.end();
										jule::Ref<_118d9a790_GenericDecl> _11a096220_dg = *__julec_range_begin;
										_iter_begin_4767118800:;
										{
											if (_11a096220_fg->_field_ident == _11a096220_dg->_field_ident) {
												this->self->_method_push_err(_11a096220_fg->_field_token,jule::Str("method_has_generic_with_same_ident", 34),jule::Slice<jule::Any>({}));
												_138571_ok=false;
											}
										}
										_iter_next_4767118800:;
										++__julec_range_begin;
										if (__julec_range_begin != __julec_range_end) { _11a096220_dg = *__julec_range_begin; goto _iter_begin_4767118800; }
										_iter_end_4767118800:;
									}
								}
							}
							_iter_next_4767116736:;
							++__julec_range_begin;
							if (__julec_range_begin != __julec_range_end) { _11a096220_fg = *__julec_range_begin; goto _iter_begin_4767116736; }
							_iter_end_4767116736:;
						}
					}
				}
				_11a096220_f->_field_sema=this->self;
				_11a096220_f->_field_owner=_138538_dest;
				_138538_dest->_field_methods._method_push(_11a096220_f);
			}
			_iter_next_4767106480:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a096220_f = *__julec_range_begin; goto _iter_begin_4767106480; }
			_iter_end_4767106480:;
		}
	}
	return _138571_ok;
}



inline void _11a096220_Sema::_method_impl_trait(jule::Ref<_11a091460_Impl> _141334_decl) {
	jule::Ref<_118e2b060_Trait> _141417_base = this->self->_method_find_trait(_141334_decl->_field_base._field_kind);
	if ((!(jule::real(_141417_base)))) {
		_141417_base=_11aa913b0_find_builtin_trait(_141334_decl->_field_base._field_kind);
	}
	if ((!(jule::real(_141417_base)))) {
		this->self->_method_push_err(_141334_decl->_field_base,jule::Str("impl_base_not_exist", 19),jule::Slice<jule::Any>({jule::Any(_141334_decl->_field_base._field_kind)}));
		return;
	}
	
	jule::Ref<_118bb7d70_Struct> _142717_dest = this->self->_method_find_struct(_141334_decl->_field_dest._field_kind,false);
	if ((!(jule::real(_142717_dest)))) {
		this->self->_method_push_err(_141334_decl->_field_dest,jule::Str("impl_dest_not_exist", 19),jule::Slice<jule::Any>({jule::Any(_141334_decl->_field_dest._field_kind)}));
		return;
	}
	if (_142717_dest->_field_token._field_file->_method_dir() != this->self->_field_file->_field_file->_method_dir()) {
		this->self->_method_push_err(_141334_decl->_field_dest,jule::Str("illegal_impl_out_of_package", 27),jule::Slice<jule::Any>({}));
		return;
	}
	_141417_base->_field_implemented=append(_141417_base->_field_implemented,jule::Slice<jule::Ref<_118bb7d70_Struct>>({_142717_dest}));
	_142717_dest->_field_implements=append(_142717_dest->_field_implements,jule::Slice<jule::Ref<_118e2b060_Trait>>({_141417_base}));
	{
		if (!(((!(this->self->_method_check_trait_impl_methods(_141417_base,_141334_decl)))))) { goto _case_end_4708028320; }
		_case_begin_4708028320:;
		{
			return;
		}
		goto _match_end_4708027616;
		_case_end_4708028320:;
		if (!(((!(this->self->_method_impl_to_struct(_142717_dest,_141334_decl)))))) { goto _case_end_4708028544; }
		_case_begin_4708028544:;
		{
			return;
		}
		goto _match_end_4708027616;
		_case_end_4708028544:;
		_match_end_4708027616:;
	}
}



inline void _11a096220_Sema::_method_impl_struct(jule::Ref<_11a091460_Impl> _145035_decl) {
	
	jule::Ref<_118bb7d70_Struct> _145517_dest = this->self->_method_find_struct(_145035_decl->_field_dest._field_kind,false);
	if ((!(jule::real(_145517_dest)))) {
		this->self->_method_push_err(_145035_decl->_field_dest,jule::Str("impl_dest_not_exist", 19),jule::Slice<jule::Any>({jule::Any(_145035_decl->_field_dest._field_kind)}));
		return;
	}
	if (_145517_dest->_field_token._field_file->_method_dir() != this->self->_field_file->_field_file->_method_dir()) {
		this->self->_method_push_err(_145035_decl->_field_dest,jule::Str("illegal_impl_out_of_package", 27),jule::Slice<jule::Any>({}));
		return;
	}
	{
		if (!(((!(this->self->_method_impl_to_struct(_145517_dest,_145035_decl)))))) { goto _case_end_4708048656; }
		_case_begin_4708048656:;
		{
			return;
		}
		goto _match_end_4708047664;
		_case_end_4708048656:;
		_match_end_4708047664:;
	}
}



inline void _11a096220_Sema::_method_impl_impl(jule::Ref<_11a091460_Impl> _147333_decl) {
	{
		if (!((_147333_decl->_method_is_trait_impl()))) { goto _case_end_4708052576; }
		_case_begin_4708052576:;
		{
			this->self->_method_impl_trait(_147333_decl);
		}
		goto _match_end_4708052320;
		_case_end_4708052576:;
		if (!((_147333_decl->_method_is_struct_impl()))) { goto _case_end_4708052688; }
		_case_begin_4708052688:;
		{
			this->self->_method_impl_struct(_147333_decl);
		}
		goto _match_end_4708052320;
		_case_end_4708052688:;
		_match_end_4708052320:;
	}
}



inline void _11a096220_Sema::_method_check_var_decl(jule::Ref<_11a245f20_Var> _148538_decl,jule::Trait<_11aa76f70_Lookup> _148550_l) {
	if (_11911a8a0_is_ignore_ident(_148538_decl->_field_ident)) {
		this->self->_method_push_err(_148538_decl->_field_token,jule::Str("ignore_ident", 12),jule::Slice<jule::Any>({}));
	}
	if (_148538_decl->_method_is_type_inferred()) {
		if (_148538_decl->_field_statically) {
			this->self->_method_push_err(_148538_decl->_field_token,jule::Str("static_is_type_inferred", 23),jule::Slice<jule::Any>({}));
		}
		if ((!(_148538_decl->_method_is_initialized()))) {
			this->self->_method_push_err(_148538_decl->_field_token,jule::Str("missing_value_for_type_inference", 32),jule::Slice<jule::Any>({}));
		}
	} else {
		this->self->_method_check_type(_148538_decl->_field_kind,_148550_l);
	}
	if (_148538_decl->_field_constant && _148538_decl->_field_reference) {
		this->self->_method_push_err(_148538_decl->_field_token,jule::Str("constant_reference", 18),jule::Slice<jule::Any>({}));
	}
	if ((!(_148538_decl->_method_is_initialized()))) {
		if (_148538_decl->_field_constant) {
			this->self->_method_push_err(_148538_decl->_field_token,jule::Str("const_var_not_have_expr", 23),jule::Slice<jule::Any>({}));
		}
		if (_148538_decl->_field_statically) {
			this->self->_method_push_err(_148538_decl->_field_token,jule::Str("static_not_have_expr", 20),jule::Slice<jule::Any>({}));
		}
		if (_148538_decl->_field_reference) {
			this->self->_method_push_err(_148538_decl->_field_token,jule::Str("reference_not_initialized", 25),jule::Slice<jule::Any>({}));
		}
	}
}



inline void _11a096220_Sema::_method_check_global_var_decl(jule::Ref<_11a245f20_Var> _152245_decl) {
	if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_152245_decl).alloc)),_152245_decl->_field_ident,_152245_decl->_field_cpp_linked)) {
		this->self->_method_push_err(_152245_decl->_field_token,jule::Str("duplicated_ident", 16),jule::Slice<jule::Any>({jule::Any(_152245_decl->_field_ident)}));
	}
	if (_152245_decl->_field_cpp_linked && _152245_decl->_field_constant) {
		this->self->_method_push_err(_152245_decl->_field_token,jule::Str("cpp_linked_variable_is_const", 28),jule::Slice<jule::Any>({}));
	}
	if (((!(_152245_decl->_field_cpp_linked)) && (!(_152245_decl->_field_constant))) && (!(_152245_decl->_field_statically))) {
		this->self->_method_push_err(_152245_decl->_field_token,jule::Str("global_not_static", 17),jule::Slice<jule::Any>({}));
	}
	this->self->_method_check_var_decl(_152245_decl,this->self);
}



inline jule::Bool _11a096220_Sema::_method_check_global_decls(void) {
	jule::Bool _153740_ok = jule::Bool();
	jule::Int _153817_i = 0LL;
	_iter_begin_4708101424:;
	if (!(_153817_i < this->self->_field_file->_field_vars._method_len())) { goto _iter_end_4708101424; }
	{
		jule::Ref<_11a245f20_Var> _154021_decl = this->self->_field_file->_field_vars._method_at(_153817_i);
		this->self->_method_check_global_var_decl(_154021_decl);
		if (this->self->_field_errors.len() > 0LL) {
			_153740_ok = false;
			return _153740_ok;
		}
	}
	_iter_next_4708101424:;
	(_153817_i)++;
	goto _iter_begin_4708101424;
	_iter_end_4708101424:;
	_153740_ok = true;
	return _153740_ok;
}



inline jule::Bool _11a096220_Sema::_method_check_struct_trait_impl(jule::Ref<_118bb7d70_Struct> _155147_strct,jule::Ref<_118e2b060_Trait> _155167_trt) {
	jule::Bool _155182_ok = jule::Bool();
	{
		auto &__julec_range_expr = _155167_trt->_field_methods;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_119099250_Fn> _11a096220_tf = *__julec_range_begin;
			_iter_begin_4767898640:;
			{
				jule::Bool _155321_exist = false;
				jule::Ref<_119099250_Fn> _155421_sf = _155147_strct->_method_find_method(_11a096220_tf->_field_ident,_11a096220_tf->_field_statically);
				jule::Ref<_119099250_FnIns> _155517_tf_k = this->self->_method_get_trait_check_fn_kind(_11a096220_tf);
				if (jule::real(_155421_sf)) {
					jule::Ref<_119099250_FnIns> _155721_sf_k = this->self->_method_get_trait_check_fn_kind(_155421_sf);
					_155321_exist=((_155517_tf_k->_field_decl->_field_public == _155721_sf_k->_field_decl->_field_public) && (_155517_tf_k->_field_decl->_field_ident == _155721_sf_k->_field_decl->_field_ident)) && _155517_tf_k->_method_equals(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_155721_sf_k)));
				}
				if ((!(_155321_exist))) {
					this->self->_method_push_err(_155147_strct->_field_token,jule::Str("not_impl_trait_def", 18),jule::Slice<jule::Any>({jule::Any(_155167_trt->_field_ident),jule::Any(_155517_tf_k->_method_to_str())}));
					_155182_ok=false;
				}
			}
			_iter_next_4767898640:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a096220_tf = *__julec_range_begin; goto _iter_begin_4767898640; }
			_iter_end_4767898640:;
		}
	}
	return _155182_ok;
}



inline jule::Bool _11a096220_Sema::_method_check_struct_impls(jule::Ref<_118bb7d70_Struct> _157242_strct) {
	jule::Bool _157260_ok = jule::Bool();
	_157260_ok=true;
	{
		auto &__julec_range_expr = _157242_strct->_field_implements;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_118e2b060_Trait> _11a096220_trt = *__julec_range_begin;
			_iter_begin_4767919280:;
			{
				_157260_ok=this->self->_method_check_struct_trait_impl(_157242_strct,_11a096220_trt) && _157260_ok;
			}
			_iter_next_4767919280:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a096220_trt = *__julec_range_begin; goto _iter_begin_4767919280; }
			_iter_end_4767919280:;
		}
	}
	_157260_ok = _157260_ok;
	return _157260_ok;
}



inline jule::Bool _11a096220_Sema::_method_check_struct_fields(jule::Ref<_118bb7d70_Struct> _158043_st) {
	jule::Bool _158058_ok = jule::Bool();
	_158058_ok=true;
	jule::Ref<_11a3c2e70_TypeChecker> _158317_tc = jule::new_struct<_11a3c2e70_TypeChecker>(new( std::nothrow ) _11a3c2e70_TypeChecker(this->self,this->self,jule::new_struct<_11a3c2e70_Referencer>(new( std::nothrow ) _11a3c2e70_Referencer(_158043_st->_field_ident,jule::Any(_158043_st),nullptr)),_11911a8a0_Token(),_158043_st->_field_generics,jule::Slice<jule::Ref<_11a3c2e70_TypeAlias>>(),jule::Bool()));
	jule::I64 _159313_n = _158043_st->_field_instances.len();
	{
		auto &__julec_range_expr = _158043_st->_field_fields;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_118bb7d70_Field> _11a096220_f = *__julec_range_begin;
			_iter_begin_4767931984:;
			{
				_11a096220_f->_field_owner=_158043_st;
				_11a096220_f->_field_kind->_field_kind=_158317_tc->_method_check_decl(_11a096220_f->_field_kind->_field_decl);
				_158058_ok=jule::real(_11a096220_f->_field_kind->_field_kind) && _158058_ok;
				{
					auto &__julec_range_expr = _158043_st->_field_fields;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Ref<_118bb7d70_Field> _11a096220_cf = *__julec_range_begin;
						_iter_begin_4767937904:;
						{
							if (_11a096220_f == _11a096220_cf) {
								goto _iter_end_4767937904;
							} else if (_11a096220_f->_field_ident == _11a096220_cf->_field_ident) {
								this->self->_method_push_err(_11a096220_f->_field_token,jule::Str("duplicated_ident", 16),jule::Slice<jule::Any>({jule::Any(_11a096220_f->_field_ident)}));
								_158058_ok=false;
							}
						}
						_iter_next_4767937904:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { _11a096220_cf = *__julec_range_begin; goto _iter_begin_4767937904; }
						_iter_end_4767937904:;
					}
				}
			}
			_iter_next_4767931984:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a096220_f = *__julec_range_begin; goto _iter_begin_4767931984; }
			_iter_end_4767931984:;
		}
	}
	if (_158058_ok && (_159313_n != _158043_st->_field_instances.len())) {
		jule::drop(_158317_tc->_field_referencer);
		_158043_st->_field_instances=_158043_st->_field_instances.slice(0LL,static_cast<jule::Int>(_159313_n));
		{
			auto &__julec_range_expr = _158043_st->_field_fields;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_118bb7d70_Field> _11a096220_f = *__julec_range_begin;
				_iter_begin_4767945760:;
				{
					_11a096220_f->_field_kind->_field_kind=_158317_tc->_method_check_decl(_11a096220_f->_field_kind->_field_decl);
				}
				_iter_next_4767945760:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _11a096220_f = *__julec_range_begin; goto _iter_begin_4767945760; }
				_iter_end_4767945760:;
			}
		}
	}
	_158058_ok = _158058_ok;
	return _158058_ok;
}



inline void _11a096220_Sema::_method_check_struct_decl(jule::Ref<_118bb7d70_Struct> _162141_strct) {
	if (_11911a8a0_is_ignore_ident(_162141_strct->_field_ident)) {
		this->self->_method_push_err(_162141_strct->_field_token,jule::Str("ignore_ident", 12),jule::Slice<jule::Any>({}));
	} else if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_162141_strct).alloc)),_162141_strct->_field_ident,_162141_strct->_field_cpp_linked)) {
		this->self->_method_push_err(_162141_strct->_field_token,jule::Str("duplicated_ident", 16),jule::Slice<jule::Any>({jule::Any(_162141_strct->_field_ident)}));
	}
	_162141_strct->_field_sema=this->self;
	{
		if (!(((!(this->self->_method_check_decl_generics(_162141_strct->_field_generics)))))) { goto _case_end_4767961312; }
		_case_begin_4767961312:;
		{
			return;
		}
		goto _match_end_4767960960;
		_case_end_4767961312:;
		if (!(((!(this->self->_method_check_struct_fields(_162141_strct)))))) { goto _case_end_4767961424; }
		_case_begin_4767961424:;
		{
			return;
		}
		goto _match_end_4767960960;
		_case_end_4767961424:;
		if (!(((!(this->self->_method_check_struct_impls(_162141_strct)))))) { goto _case_end_4767961536; }
		_case_begin_4767961536:;
		{
			return;
		}
		goto _match_end_4767960960;
		_case_end_4767961536:;
		_match_end_4767960960:;
	}
}



inline jule::Bool _11a096220_Sema::_method_check_struct_decls(void) {
	jule::Bool _163740_ok = jule::Bool();
	jule::Int _163817_i = 0LL;
	_iter_begin_4767969152:;
	if (!(_163817_i < this->self->_field_file->_field_structs._method_len())) { goto _iter_end_4767969152; }
	{
		jule::Ref<_118bb7d70_Struct> _164021_strct = this->self->_field_file->_field_structs._method_at(_163817_i);
		this->self->_method_check_struct_decl(_164021_strct);
		if (this->self->_field_errors.len() > 0LL) {
			_163740_ok = false;
			return _163740_ok;
		}
	}
	_iter_next_4767969152:;
	(_163817_i)++;
	goto _iter_begin_4767969152;
	_iter_end_4767969152:;
	_163740_ok = true;
	return _163740_ok;
}



inline void _11a096220_Sema::_method_check_fn_decl(jule::Ref<_119099250_Fn> _165237_f) {
	if (_11911a8a0_is_ignore_ident(_165237_f->_field_ident)) {
		this->self->_method_push_err(_165237_f->_field_token,jule::Str("ignore_ident", 12),jule::Slice<jule::Any>({}));
	} else if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_165237_f).alloc)),_165237_f->_field_ident,_165237_f->_field_cpp_linked)) {
		this->self->_method_push_err(_165237_f->_field_token,jule::Str("duplicated_ident", 16),jule::Slice<jule::Any>({jule::Any(_165237_f->_field_ident)}));
	}
	_165237_f->_field_sema=this->self;
	this->self->_method_check_fn_decl_prototype(_165237_f);
}



inline jule::Bool _11a096220_Sema::_method_check_fn_decls(void) {
	jule::Bool _166436_ok = jule::Bool();
	jule::Int _166517_i = 0LL;
	_iter_begin_4767991296:;
	if (!(_166517_i < this->self->_field_file->_field_funcs._method_len())) { goto _iter_end_4767991296; }
	{
		jule::Ref<_119099250_Fn> _166721_f = this->self->_field_file->_field_funcs._method_at(_166517_i);
		this->self->_method_check_fn_decl(_166721_f);
		if (this->self->_field_errors.len() > 0LL) {
			_166436_ok = false;
			return _166436_ok;
		}
	}
	_iter_next_4767991296:;
	(_166517_i)++;
	goto _iter_begin_4767991296;
	_iter_end_4767991296:;
	_166436_ok = true;
	return _166436_ok;
}



inline jule::Bool _11a096220_Sema::_method_check_directive_pass(_13feceeb0_Pass _167839_pass) {
	jule::Bool _167853_ok = jule::Bool();
	if (_167839_pass._field_text == jule::Str("", 0)) {
		_167853_ok = true;
		return _167853_ok;
	}
	if (_167839_pass._field_text[static_cast<jule::Int>(0LL)] != '-') {
		(*this)._method_push_err(_167839_pass._field_token,jule::Str("pass_directive_not_starts_with_dash", 35),jule::Slice<jule::Any>({}));
		_167853_ok = false;
		return _167853_ok;
	}
	_167853_ok = true;
	return _167853_ok;
}



inline jule::Bool _11a096220_Sema::_method_check_passes(void) {
	jule::Bool _169133_ok = jule::Bool();
	_169133_ok=true;
	jule::Int _169317_i = 0LL;
	_iter_begin_4768009648:;
	if (!(_169317_i < (*this)._field_file->_field_passes._method_len())) { goto _iter_end_4768009648; }
	{
		_13feceeb0_Pass _169517_pass = (*this)._field_file->_field_passes._method_at(_169317_i);
		_169133_ok=(*this)._method_check_directive_pass(_169517_pass) && _169133_ok;
	}
	_iter_next_4768009648:;
	(_169317_i)++;
	goto _iter_begin_4768009648;
	_iter_end_4768009648:;
	return _169133_ok;
}



inline void _11a096220_Sema::_method_push_cycle_error(jule::Ref<_118bb7d70_Struct> _170131_st1,jule::Ref<_118bb7d70_Struct> _170145_st2,jule::Str& _170164_message) {
	
	jule::Str _170413_refers_to = _13fe9efa0_errorf(jule::Str("refers_to", 9),jule::Slice<jule::Any>({jule::Any(_170131_st1->_field_ident),jule::Any(_170145_st2->_field_ident)}));
	_170164_message=((_13feceeb0_str_repeat(jule::Str(" ", 1),4LL) + _170413_refers_to) + jule::Str("\n", 1)) + _170164_message;
}



inline jule::Bool _11a096220_Sema::_method_check_cross_cycle(jule::Ref<_118bb7d70_Struct> _170832_st1,jule::Ref<_118bb7d70_Struct> _170846_st2,jule::Str& _170865_message) {
	{
		auto &__julec_range_expr = _170846_st2->_field_uses;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_118bb7d70_Struct> _11a096220_u = *__julec_range_begin;
			_iter_begin_4768030144:;
			{
				if ((_11a096220_u).alloc == (_170832_st1).alloc) {
					(*this)._method_push_cycle_error(_170846_st2,_11a096220_u,_170865_message);
					return false;
				}
				if ((!((*this)._method_check_cross_cycle(_170832_st1,_11a096220_u,_170865_message)))) {
					(*this)._method_push_cycle_error(_170846_st2,_11a096220_u,_170865_message);
					return false;
				}
			}
			_iter_next_4768030144:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a096220_u = *__julec_range_begin; goto _iter_begin_4768030144; }
			_iter_end_4768030144:;
		}
	}
	return true;
}



inline jule::Bool _11a096220_Sema::_method_check_struct_derive_illegal_cycles(jule::Str _172453_derive,jule::Ref<_118bb7d70_Struct> _172466_st1,jule::Ref<_11a3c2e70_TypeKind> _172484_k) {
	jule::Bool _1724100_ok = jule::Bool();
	jule::Ref<_118bb7d70_Struct> _172517_st2 = _11a3c2e70_get_struct_from_kind(_172484_k);
	if ((!(jule::real(_172517_st2)))) {
		_1724100_ok = true;
		return _1724100_ok;
	}
	if ((_172466_st1).alloc == (_172517_st2).alloc) {
		(*this)._method_push_err(_172466_st1->_field_token,jule::Str("derive_illegal_cycle_refers_itself", 34),jule::Slice<jule::Any>({jule::Any(_172453_derive),jule::Any(_172466_st1->_field_ident)}));
		_1724100_ok = false;
		return _1724100_ok;
	}
	jule::Str _173717_message = jule::Str("", 0);
	if ((!((*this)._method_check_cross_cycle(_172466_st1,_172517_st2,_173717_message)))) {
		jule::Str _174021_err_msg = _173717_message;
		_173717_message=jule::Str("", 0);
		(*this)._method_push_cycle_error(_172466_st1,_172517_st2,_173717_message);
		_174021_err_msg=_174021_err_msg + _173717_message;
		(*this)._method_push_err(_172466_st1->_field_token,jule::Str("derive_illegal_cross_cycle", 26),jule::Slice<jule::Any>({jule::Any(_172453_derive),jule::Any(_174021_err_msg)}));
		_1724100_ok = false;
		return _1724100_ok;
	}
	_1724100_ok = true;
	return _1724100_ok;
}



inline jule::Bool _11a096220_Sema::_method_check_struct_ins_derive_clone(jule::Ref<_118bb7d70_StructIns> _175152_st) {
	jule::Bool _175170_ok = jule::Bool();
	if ((!(_175152_st->_field_decl->_method_is_derives(jule::Str("Clone", 5))))) {
		_175170_ok = true;
		return _175170_ok;
	}
	{
		auto &__julec_range_expr = _175152_st->_field_fields;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_118bb7d70_FieldIns> _11a096220_f = *__julec_range_begin;
			_iter_begin_4768064176:;
			{
				if ((!(jule::real(_11a096220_f->_field_kind))) || (!(_11a3c2e70_is_mut(_11a096220_f->_field_kind)))) {
					goto _iter_next_4768064176;
				}
				if ((!(_11a3c2e70_supports_cloning(_11a096220_f->_field_kind)))) {
					(*this)._method_push_err(_175152_st->_field_decl->_field_token,jule::Str("type_not_compatible_for_derive", 30),jule::Slice<jule::Any>({jule::Any(_11a096220_f->_field_kind->_method_to_str()),jule::Any(jule::Str("Clone", 5))}));
					_175170_ok = false;
					return _175170_ok;
				}
				if ((!((*this)._method_check_struct_derive_illegal_cycles(jule::Str("Clone", 5),_175152_st->_field_decl,_11a096220_f->_field_kind)))) {
					_175170_ok = false;
					return _175170_ok;
				}
			}
			_iter_next_4768064176:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a096220_f = *__julec_range_begin; goto _iter_begin_4768064176; }
			_iter_end_4768064176:;
		}
	}
	_175170_ok = true;
	return _175170_ok;
}



inline jule::Bool _11a096220_Sema::_method_check_struct_derive_clone(jule::Ref<_118bb7d70_Struct> _177448_st) {
	jule::Bool _177463_ok = jule::Bool();
	_177463_ok = (*this)._method_check_struct_ins_derive_clone(_177448_st->_method_instance());
	return _177463_ok;
}



inline jule::Bool _11a096220_Sema::_method_check_file_derives(void) {
	jule::Bool _177839_ok = jule::Bool();
	jule::Int _178017_i = 0LL;
	_iter_begin_4768084992:;
	if (!(_178017_i < (*this)._field_file->_field_structs._method_len())) { goto _iter_end_4768084992; }
	{
		jule::Ref<_118bb7d70_Struct> _178221_st = (*this)._field_file->_field_structs._method_at(_178017_i);
		jule::Bool _178317_ok = (*this)._method_check_struct_derive_clone(_178221_st);
		if ((!(_178317_ok))) {
			_177839_ok = false;
			return _177839_ok;
		}
	}
	_iter_next_4768084992:;
	(_178017_i)++;
	goto _iter_begin_4768084992;
	_iter_end_4768084992:;
	_177839_ok = true;
	return _177839_ok;
}



inline void _11a096220_Sema::_method_check_package_derives(void) {
	{
		auto &__julec_range_expr = (*this)._field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11a3c2dc0_SymbolTable> _11a096220_f = *__julec_range_begin;
			_iter_begin_4768093680:;
			{
				(*this)._method_set_current_file(_11a096220_f);
				jule::Bool _179517_ok = (*this)._method_check_file_derives();
				if ((!(_179517_ok))) {
					return;
				}
			}
			_iter_next_4768093680:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a096220_f = *__julec_range_begin; goto _iter_begin_4768093680; }
			_iter_end_4768093680:;
		}
	}
}



inline void _11a096220_Sema::_method_check_package_decls(void) {
	{
		auto &__julec_range_expr = this->self->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11a3c2dc0_SymbolTable> _11a096220_f = *__julec_range_begin;
			_iter_begin_4768099328:;
			{
				this->self->_method_set_current_file(_11a096220_f);
				if ((!(this->self->_method_check_passes()))) {
					return;
				}
			}
			_iter_next_4768099328:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a096220_f = *__julec_range_begin; goto _iter_begin_4768099328; }
			_iter_end_4768099328:;
		}
	}
	{
		auto &__julec_range_expr = this->self->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11a3c2dc0_SymbolTable> _11a096220_f = *__julec_range_begin;
			_iter_begin_4768100912:;
			{
				this->self->_method_set_current_file(_11a096220_f);
				if ((!(this->self->_method_check_type_alias_decls()))) {
					return;
				}
			}
			_iter_next_4768100912:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a096220_f = *__julec_range_begin; goto _iter_begin_4768100912; }
			_iter_end_4768100912:;
		}
	}
	{
		auto &__julec_range_expr = this->self->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11a3c2dc0_SymbolTable> _11a096220_f = *__julec_range_begin;
			_iter_begin_4768104928:;
			{
				this->self->_method_set_current_file(_11a096220_f);
				if ((!(this->self->_method_check_trait_decls()))) {
					return;
				}
			}
			_iter_next_4768104928:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a096220_f = *__julec_range_begin; goto _iter_begin_4768104928; }
			_iter_end_4768104928:;
		}
	}
	{
		auto &__julec_range_expr = this->self->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11a3c2dc0_SymbolTable> _11a096220_f = *__julec_range_begin;
			_iter_begin_4768108720:;
			{
				this->self->_method_set_current_file(_11a096220_f);
				if ((!(this->self->_method_check_global_decls()))) {
					return;
				}
			}
			_iter_next_4768108720:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a096220_f = *__julec_range_begin; goto _iter_begin_4768108720; }
			_iter_end_4768108720:;
		}
	}
	{
		auto &__julec_range_expr = this->self->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11a3c2dc0_SymbolTable> _11a096220_f = *__julec_range_begin;
			_iter_begin_4768112672:;
			{
				this->self->_method_set_current_file(_11a096220_f);
				if ((!(this->self->_method_check_fn_decls()))) {
					return;
				}
			}
			_iter_next_4768112672:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a096220_f = *__julec_range_begin; goto _iter_begin_4768112672; }
			_iter_end_4768112672:;
		}
	}
	{
		auto &__julec_range_expr = this->self->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11a3c2dc0_SymbolTable> _11a096220_f = *__julec_range_begin;
			_iter_begin_4768116336:;
			{
				this->self->_method_set_current_file(_11a096220_f);
				if ((!(this->self->_method_check_struct_decls()))) {
					return;
				}
			}
			_iter_next_4768116336:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a096220_f = *__julec_range_begin; goto _iter_begin_4768116336; }
			_iter_end_4768116336:;
		}
	}
	this->self->_method_check_package_derives();
}



inline void _11a096220_Sema::_method_check_data_for_type_inference(jule::Ref<_11a53f4f0_Data> _185048_d,_11911a8a0_Token _185058_err_token) {
	{
		if (!((_185048_d->_method_is_nil()))) { goto _case_end_4768126784; }
		_case_begin_4768126784:;
		{
			(*this)._method_push_err(_185058_err_token,jule::Str("nil_for_type_inference", 22),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4768126528;
		_case_end_4768126784:;
		if (!((_185048_d->_method_is_void()))) { goto _case_end_4768126896; }
		_case_begin_4768126896:;
		{
			(*this)._method_push_err(_185058_err_token,jule::Str("void_for_type_inreference", 25),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4768126528;
		_case_end_4768126896:;
		_match_end_4768126528:;
	}
}



inline void _11a096220_Sema::_method_check_var(jule::Ref<_11a245f20_Var> _186033_v) {
	if (_186033_v->_field_cpp_linked) {
		return;
	}
	if (_186033_v->_method_is_type_inferred()) {
		_186033_v->_field_kind=jule::new_struct<_11a3c2e70_TypeSymbol>(new( std::nothrow ) _11a3c2e70_TypeSymbol(jule::Ref<_118d9a790_TypeDecl>(),_186033_v->_field_value->_field_data->_field_kind));
		this->self->_method_check_data_for_type_inference(_186033_v->_field_value->_field_data,_186033_v->_field_value->_field_expr->_field_token);
	} else {
		jule::Ref<_11a3c2e70_Arr> _187221_arr = _186033_v->_field_kind->_field_kind->_method_arr();
		if (jule::real(_187221_arr)) {
			if (_187221_arr->_field_auto) {
				jule::Ref<_11a3c2e70_Arr> _187525_data_arr = _186033_v->_field_value->_field_data->_field_kind->_method_arr();
				if (jule::real(_187525_data_arr)) {
					_187221_arr->_field_n=_187525_data_arr->_field_n;
				}
			}
		}
		this->self->_method_check_assign_type(_186033_v->_field_kind->_field_kind,_186033_v->_field_value->_field_data,_186033_v->_field_value->_field_expr->_field_token,false);
	}
	this->self->_method_check_validity_for_init_expr(_186033_v->_field_mutable,_186033_v->_field_reference,_186033_v->_field_kind->_field_kind,_186033_v->_field_value->_field_data,_186033_v->_field_value->_field_expr->_field_token);
	if ((!(_186033_v->_field_constant))) {
		jule::drop(_186033_v->_field_value->_field_data->_field_constant);
	}
}



inline void _11a096220_Sema::_method_check_type_var(jule::Ref<_11a245f20_Var> _189838_decl,jule::Trait<_11aa76f70_Lookup> _189850_l) {
	if (_189838_decl->_field_cpp_linked || (!(_189838_decl->_method_is_initialized()))) {
		return;
	}
	if (jule::real(_189838_decl->_field_kind)) {
		_189838_decl->_field_value->_field_data=this->self->_method_evalpd(_189838_decl->_field_value->_field_expr,_189850_l,_189838_decl->_field_kind->_field_kind,_189838_decl);
	} else {
		_189838_decl->_field_value->_field_data=this->self->_method_evalpd(_189838_decl->_field_value->_field_expr,_189850_l,jule::new_ref<_11a3c2e70_TypeKind>(),_189838_decl);
	}
	if ((!(jule::real(_189838_decl->_field_value->_field_data)))) {
		return;
	}
	this->self->_method_check_var(_189838_decl);
}



inline void _11a096220_Sema::_method_check_global_types(void) {
	jule::Int _191917_i = 0LL;
	_iter_begin_4768171968:;
	if (!(_191917_i < this->self->_field_file->_field_vars._method_len())) { goto _iter_end_4768171968; }
	{
		jule::Ref<_11a245f20_Var> _192121_decl = this->self->_field_file->_field_vars._method_at(_191917_i);
		this->self->_method_check_type_var(_192121_decl,this->self);
	}
	_iter_next_4768171968:;
	(_191917_i)++;
	goto _iter_begin_4768171968;
	_iter_end_4768171968:;
	_191917_i=0LL;
	_iter_begin_4768178736:;
	if (!(_191917_i < this->self->_field_file->_field_vars._method_len())) { goto _iter_end_4768178736; }
	{
		jule::Ref<_11a245f20_Var> _192821_decl = this->self->_field_file->_field_vars._method_at(_191917_i);
		if (_192821_decl->_method_is_initialized() && (_192821_decl->_field_depends.len() > 0LL)) {
			this->self->_method_check_type_var(_192821_decl,this->self);
		}
	}
	_iter_next_4768178736:;
	(_191917_i)++;
	goto _iter_begin_4768178736;
	_iter_end_4768178736:;
}



inline void _11a096220_Sema::_method_check_type_method(jule::Ref<_118bb7d70_StructIns> _193541_strct,jule::Ref<_119099250_Fn> _193564_f) {
	if (_193564_f->_field_cpp_linked) {
		return;
	}
	if (_193564_f->_field_generics.len() > 0LL) {
		return;
	}
	if (_193564_f->_field_instances.len() == 0LL) {
		jule::Ref<_119099250_FnIns> _194621_ins = _193564_f->_method_instance();
		_194621_ins->_field_owner=_193541_strct;
		_193564_f->_method_append_instance(_194621_ins);
		this->self->_method_reload_fn_ins_types(_194621_ins);
		_194621_ins->_field_reloaded=true;
	}
	{
		auto &__julec_range_expr = _193564_f->_field_instances;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_119099250_FnIns> _11a096220_ins = *__julec_range_begin;
			_iter_begin_4768197280:;
			{
				if (_11a096220_ins->_field_scope->_field_stmts._method_len() > 0LL) {
					goto _iter_next_4768197280;
				}
				this->self->_method_check_fn_ins(_11a096220_ins);
			}
			_iter_next_4768197280:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a096220_ins = *__julec_range_begin; goto _iter_begin_4768197280; }
			_iter_end_4768197280:;
		}
	}
}



inline void _11a096220_Sema::_method_check_type_struct(jule::Ref<_118bb7d70_Struct> _196241_strct) {
	if (_196241_strct->_field_cpp_linked) {
		return;
	}
	if ((_196241_strct->_field_generics.len() == 0LL) && (_196241_strct->_field_instances.len() == 0LL)) {
		jule::Ref<_118bb7d70_StructIns> _196821_ins = _196241_strct->_method_instance();
		_196821_ins->_field_checked=true;
		_196241_strct->_method_append_instance(_196821_ins);
	}
	{
		auto &__julec_range_expr = _196241_strct->_field_instances;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_118bb7d70_StructIns> _11a096220_ins = *__julec_range_begin;
			_iter_begin_4768213280:;
			{
				{
					auto &__julec_range_expr = _11a096220_ins->_field_methods;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Ref<_119099250_Fn> _11a096220_f = *__julec_range_begin;
						_iter_begin_4768215824:;
						{
							this->self->_method_check_type_method(_11a096220_ins,_11a096220_f);
						}
						_iter_next_4768215824:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { _11a096220_f = *__julec_range_begin; goto _iter_begin_4768215824; }
						_iter_end_4768215824:;
					}
				}
			}
			_iter_next_4768213280:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a096220_ins = *__julec_range_begin; goto _iter_begin_4768213280; }
			_iter_end_4768213280:;
		}
	}
}



inline void _11a096220_Sema::_method_check_struct_types(void) {
	jule::Int _198117_i = 0LL;
	_iter_begin_4768216928:;
	if (!(_198117_i < this->self->_field_file->_field_structs._method_len())) { goto _iter_end_4768216928; }
	{
		jule::Ref<_118bb7d70_Struct> _198321_strct = this->self->_field_file->_field_structs._method_at(_198117_i);
		this->self->_method_check_type_struct(_198321_strct);
	}
	_iter_next_4768216928:;
	(_198117_i)++;
	goto _iter_begin_4768216928;
	_iter_end_4768216928:;
}



inline void _11a096220_Sema::_method_check_rets(jule::Ref<_119099250_FnIns> _198833_f) {
	if (_198833_f->_field_decl->_method_is_void()) {
		return;
	}
	jule::Bool _199313_ok = _11a096220_has_ret(_198833_f->_field_scope);
	if ((!(_199313_ok))) {
		(*this)._method_push_err(_198833_f->_field_decl->_field_token,jule::Str("missing_ret", 11),jule::Slice<jule::Any>({}));
	}
}



inline void _11a096220_Sema::_method_check_fn_ins_sc(jule::Ref<_119099250_FnIns> _199938_f,jule::Ref<_11a093930_ScopeChecker> _199953_sc) {
	if (_199938_f->_field_decl->_field_cpp_linked) {
		return;
	}
	jule::Slice<jule::Ref<_11a245f20_Var>> _200417_vars = _11a096220_build_ret_vars(_199938_f);
	_199953_sc->_field_table->_field_vars._method_append(_200417_vars);
	_199953_sc->_field_table->_field_vars._method_append(_11a096220_build_param_vars(_199938_f));
	_199953_sc->_field_table->_field_type_aliases._method_append(_11a096220_build_generic_type_aliases(_199938_f));
	_199953_sc->_method_check(_199938_f->_field_decl->_field_scope,_199938_f->_field_scope);
	if (_200417_vars.len() > 0LL) {
		{
			auto &__julec_range_expr = _200417_vars;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_11a245f20_Var> _11a096220_v = *__julec_range_begin;
				_iter_begin_4768243152:;
				{
					_199938_f->_field_scope->_field_stmts._method_push_front(jule::Any(_11a096220_v));
				}
				_iter_next_4768243152:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _11a096220_v = *__julec_range_begin; goto _iter_begin_4768243152; }
				_iter_end_4768243152:;
			}
		}
	}
	(*this)._method_check_rets(_199938_f);
}



inline void _11a096220_Sema::_method_check_fn_ins(jule::Ref<_119099250_FnIns> _202235_f) {
	if (_202235_f->_field_decl->_field_cpp_linked) {
		return;
	}
	jule::Ref<_11a3c2dc0_SymbolTable> _202717_old = _202235_f->_field_decl->_field_sema->_field_file;
	__JULE_DEFER({
		_202235_f->_field_decl->_field_sema->_method_set_current_file(_202717_old);
	});
	jule::Ref<_11a3c2dc0_SymbolTable> _202917_file = _11a096220_find_file(_202235_f->_field_decl->_field_sema->_field_files,_202235_f->_field_decl->_field_token._field_file);
	if (jule::real(_202917_file)) {
		_202235_f->_field_decl->_field_sema->_method_set_current_file(_202917_file);
	}
	jule::Ref<_11a093930_ScopeChecker> _203417_sc = _11a093930_new_scope_checker(_202235_f->_field_decl->_field_sema,_202235_f);
	(*this)._method_check_fn_ins_sc(_202235_f,_203417_sc);
	if ((_202235_f->_field_decl->_field_sema).alloc != (&((*this)))) {
		(*this)._field_errors=append((*this)._field_errors,_202235_f->_field_decl->_field_sema->_field_errors);
	}
}



inline void _11a096220_Sema::_method_check_type_fn(jule::Ref<_119099250_Fn> _204237_f) {
	if (_204237_f->_field_cpp_linked) {
		return;
	}
	if (_204237_f->_field_generics.len() > 0LL) {
		return;
	}
	{
		auto &__julec_range_expr = _204237_f->_field_instances;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_119099250_FnIns> _11a096220_ins = *__julec_range_begin;
			_iter_begin_4768276432:;
			{
				this->self->_method_check_fn_ins(_11a096220_ins);
			}
			_iter_next_4768276432:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a096220_ins = *__julec_range_begin; goto _iter_begin_4768276432; }
			_iter_end_4768276432:;
		}
	}
}



inline void _11a096220_Sema::_method_precheck_type_fn(jule::Ref<_119099250_Fn> _205740_f) {
	if (_205740_f->_field_cpp_linked) {
		return;
	}
	if (_205740_f->_field_generics.len() > 0LL) {
		return;
	}
	if (_205740_f->_field_instances.len() == 0LL) {
		jule::Ref<_119099250_FnIns> _206821_ins = _205740_f->_method_instance();
		_205740_f->_field_instances=append(_205740_f->_field_instances,jule::Slice<jule::Ref<_119099250_FnIns>>({_206821_ins}));
		this->self->_method_reload_fn_ins_types(_206821_ins);
		_206821_ins->_field_reloaded=true;
	}
}



inline jule::Bool _11a096220_Sema::_method_precheck_fn_types(void) {
	jule::Bool _207639_ok = jule::Bool();
	jule::Int _207717_i = 0LL;
	_iter_begin_4768293488:;
	if (!(_207717_i < this->self->_field_file->_field_funcs._method_len())) { goto _iter_end_4768293488; }
	{
		jule::Ref<_119099250_Fn> _207921_decl = this->self->_field_file->_field_funcs._method_at(_207717_i);
		this->self->_method_precheck_type_fn(_207921_decl);
	}
	_iter_next_4768293488:;
	(_207717_i)++;
	goto _iter_begin_4768293488;
	_iter_end_4768293488:;
	_207639_ok = true;
	return _207639_ok;
}



inline jule::Bool _11a096220_Sema::_method_check_fn_types(void) {
	jule::Bool _208736_ok = jule::Bool();
	jule::Int _208817_i = 0LL;
	_iter_begin_4768302272:;
	if (!(_208817_i < this->self->_field_file->_field_funcs._method_len())) { goto _iter_end_4768302272; }
	{
		jule::Ref<_119099250_Fn> _209021_decl = this->self->_field_file->_field_funcs._method_at(_208817_i);
		this->self->_method_check_type_fn(_209021_decl);
	}
	_iter_next_4768302272:;
	(_208817_i)++;
	goto _iter_begin_4768302272;
	_iter_end_4768302272:;
	_208736_ok = true;
	return _208736_ok;
}



inline void _11a096220_Sema::_method_check_package_types(void) {
	{
		auto &__julec_range_expr = this->self->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11a3c2dc0_SymbolTable> _11a096220_f = *__julec_range_begin;
			_iter_begin_4768309792:;
			{
				this->self->_method_set_current_file(_11a096220_f);
				this->self->_method_check_global_types();
			}
			_iter_next_4768309792:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a096220_f = *__julec_range_begin; goto _iter_begin_4768309792; }
			_iter_end_4768309792:;
		}
	}
	{
		auto &__julec_range_expr = this->self->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11a3c2dc0_SymbolTable> _11a096220_f = *__julec_range_begin;
			_iter_begin_4768310800:;
			{
				this->self->_method_set_current_file(_11a096220_f);
				this->self->_method_precheck_fn_types();
			}
			_iter_next_4768310800:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a096220_f = *__julec_range_begin; goto _iter_begin_4768310800; }
			_iter_end_4768310800:;
		}
	}
	{
		auto &__julec_range_expr = this->self->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11a3c2dc0_SymbolTable> _11a096220_f = *__julec_range_begin;
			_iter_begin_4768316864:;
			{
				this->self->_method_set_current_file(_11a096220_f);
				this->self->_method_check_fn_types();
			}
			_iter_next_4768316864:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a096220_f = *__julec_range_begin; goto _iter_begin_4768316864; }
			_iter_end_4768316864:;
		}
	}
	{
		auto &__julec_range_expr = this->self->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11a3c2dc0_SymbolTable> _11a096220_f = *__julec_range_begin;
			_iter_begin_4768317616:;
			{
				this->self->_method_set_current_file(_11a096220_f);
				this->self->_method_check_struct_types();
			}
			_iter_next_4768317616:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a096220_f = *__julec_range_begin; goto _iter_begin_4768317616; }
			_iter_end_4768317616:;
		}
	}
}



inline void _11a096220_Sema::_method_set_file_sema_fields(void) {
	jule::Int _212217_i = 0LL;
	_iter_begin_4768324384:;
	if (!(_212217_i < this->self->_field_file->_field_funcs._method_len())) { goto _iter_end_4768324384; }
	{
		jule::Ref<_119099250_Fn> _212421_f = this->self->_field_file->_field_funcs._method_at(_212217_i);
		_212421_f->_field_sema=this->self;
	}
	_iter_next_4768324384:;
	(_212217_i)++;
	goto _iter_begin_4768324384;
	_iter_end_4768324384:;
	_212217_i=0LL;
	_iter_begin_4768329680:;
	if (!(_212217_i < this->self->_field_file->_field_structs._method_len())) { goto _iter_end_4768329680; }
	{
		jule::Ref<_118bb7d70_Struct> _213021_st = this->self->_field_file->_field_structs._method_at(_212217_i);
		_213021_st->_field_sema=this->self;
	}
	_iter_next_4768329680:;
	(_212217_i)++;
	goto _iter_begin_4768329680;
	_iter_end_4768329680:;
}



inline void _11a096220_Sema::_method_set_sema_fields(void) {
	{
		auto &__julec_range_expr = this->self->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11a3c2dc0_SymbolTable> _11a096220_file = *__julec_range_begin;
			_iter_begin_4768336416:;
			{
				this->self->_method_set_current_file(_11a096220_file);
				this->self->_method_set_file_sema_fields();
			}
			_iter_next_4768336416:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a096220_file = *__julec_range_begin; goto _iter_begin_4768336416; }
			_iter_end_4768336416:;
		}
	}
}



inline void _11a096220_Sema::_method_check(jule::Slice<jule::Ref<_11a3c2dc0_SymbolTable>> _214229_files) {
	this->self->_field_files=_214229_files;
	this->self->_method_check_imports();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_check_enums();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_set_sema_fields();
	this->self->_method_impl_impls();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_check_package_decls();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_check_package_types();
}







std::ostream &operator<<(std::ostream &_Stream, const _11a096220_Sema &_Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file;
	_Stream << "}";
	return _Stream;
}



inline void _11a21f8a0_DynamicTypeAnnotation::_method_push_generic(jule::Ref<_11a3c2e70_TypeKind> _52735_k,jule::Int _52749_i) {
	(*this)._field_f->_field_generics[static_cast<jule::Int>(_52749_i)]=_52735_k;
}



inline jule::Bool _11a21f8a0_DynamicTypeAnnotation::_method_annotate_prim(jule::Ref<_11a3c2e70_TypeKind> _53143_k) {
	jule::Bool _53159_ok = jule::Bool();
	jule::Str _53213_kind = (*((*this)._field_k))->_method_to_str();
	{
		auto &__julec_range_expr = (*this)._field_f->_field_decl->_field_generics;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _11a21f8a0_i = 0;
			jule::Ref<_118d9a790_GenericDecl> _11a21f8a0_g = *__julec_range_begin;
			_iter_begin_4767342832:;
			{
				if (_53213_kind != _11a21f8a0_g->_field_ident) {
					goto _iter_next_4767342832;
				}
				jule::Ref<_11a3c2e70_TypeKind> _53817_t = (*this)._field_f->_field_generics[static_cast<jule::Int>(_11a21f8a0_i)];
				{
					if (!(((!(jule::real(_53817_t)))))) { goto _case_end_4767348896; }
					_case_begin_4767348896:;
					{
						(*this)._method_push_generic(_53143_k,_11a21f8a0_i);
					}
					goto _match_end_4767348688;
					_case_end_4767348896:;
					if (!((_53817_t->_method_to_str() != _53143_k->_method_to_str()))) { goto _case_end_4767349008; }
					_case_begin_4767349008:;
					{
						_53159_ok = false;
						return _53159_ok;
					}
					goto _match_end_4767348688;
					_case_end_4767349008:;
					_match_end_4767348688:;
				}
				(*((*this)._field_k))->_field_kind=_53143_k->_field_kind;
				_53159_ok = true;
				return _53159_ok;
			}
			_iter_next_4767342832:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_11a21f8a0_i; _11a21f8a0_g = *__julec_range_begin; goto _iter_begin_4767342832; }
			_iter_end_4767342832:;
		}
	}
	_53159_ok = false;
	return _53159_ok;
}



inline jule::Bool _11a21f8a0_DynamicTypeAnnotation::_method_annotate_slc(jule::Ref<_11a3c2e70_TypeKind> _55542_k) {
	jule::Bool _55558_ok = jule::Bool();
	jule::Ref<_11a3c2e70_Slc> _55617_pslc = (*((*this)._field_k))->_method_slc();
	if ((!(jule::real(_55617_pslc)))) {
		_55558_ok = false;
		return _55558_ok;
	}
	jule::Ref<_11a3c2e70_Slc> _56117_slc = _55542_k->_method_slc();
	_11a3c2e70_TypeKind* _56217_kk = (_55617_pslc->_field_elem).alloc;
	(*this)._field_k=(&(_56217_kk));
	_55558_ok = (*this)._method_annotate_kind(_56117_slc->_field_elem);
	return _55558_ok;
}



inline jule::Bool _11a21f8a0_DynamicTypeAnnotation::_method_check_map_key(_11a3c2e70_TypeKind** _56743_k,jule::Ref<_11a3c2e70_TypeKind> _56762_ck) {
	jule::Bool _56779_ok = jule::Bool();
	_11a3c2e70_TypeKind** _56817_old = (*this)._field_k;
	(*this)._field_k=_56743_k;
	_56779_ok=(*this)._method_annotate_kind(_56762_ck);
	(*this)._field_k=_56817_old;
	_56779_ok = _56779_ok;
	return _56779_ok;
}



inline jule::Bool _11a21f8a0_DynamicTypeAnnotation::_method_annotate_map(jule::Ref<_11a3c2e70_TypeKind> _57542_k) {
	jule::Bool _57558_ok = jule::Bool();
	jule::Ref<_11a3c2e70_Map> _57617_pmap = (*((*this)._field_k))->_method_map();
	if ((!(jule::real(_57617_pmap)))) {
		_57558_ok = false;
		return _57558_ok;
	}
	jule::Ref<_11a3c2e70_Map> _58117_m = _57542_k->_method_map();
	_11a3c2e70_TypeKind* _58317_key = (_57617_pmap->_field_key).alloc;
	_11a3c2e70_TypeKind* _58417_val = (_57617_pmap->_field_val).alloc;
	_57558_ok = (*this)._method_check_map_key((&(_58317_key)),_58117_m->_field_key) && (*this)._method_check_map_key((&(_58417_val)),_58117_m->_field_val);
	return _57558_ok;
}



inline jule::Bool _11a21f8a0_DynamicTypeAnnotation::_method_annotate_fn(jule::Ref<_11a3c2e70_TypeKind> _58841_k) {
	jule::Bool _58857_ok = jule::Bool();
	jule::Ref<_119099250_FnIns> _58917_pf = (*((*this)._field_k))->_method_fnc();
	if ((!(jule::real(_58917_pf)))) {
		_58857_ok = false;
		return _58857_ok;
	}
	jule::Ref<_119099250_FnIns> _59317_f = _58841_k->_method_fnc();
	{
		if (!((_58917_pf->_field_params.len() != _59317_f->_field_params.len()))) { goto _case_end_4767395808; }
		_case_begin_4767395808:;
		{
			_58857_ok = false;
			return _58857_ok;
		}
		goto _match_end_4767395360;
		_case_end_4767395808:;
		if (!((_58917_pf->_field_decl->_method_is_void() != _59317_f->_field_decl->_method_is_void()))) { goto _case_end_4767395920; }
		_case_begin_4767395920:;
		{
			_58857_ok = false;
			return _58857_ok;
		}
		goto _match_end_4767395360;
		_case_end_4767395920:;
		_match_end_4767395360:;
	}
	_58857_ok=true;
	_11a3c2e70_TypeKind** _60317_old = (*this)._field_k;
	{
		auto &__julec_range_expr = _59317_f->_field_params;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _11a21f8a0_i = 0;
			jule::Ref<_119099250_ParamIns> _11a21f8a0_fp = *__julec_range_begin;
			_iter_begin_4767402576:;
			{
				_11a3c2e70_TypeKind* _60521_pfp = (_58917_pf->_field_params[static_cast<jule::Int>(_11a21f8a0_i)]->_field_kind).alloc;
				(*this)._field_k=(&(_60521_pfp));
				_58857_ok=(*this)._method_annotate_kind(_11a21f8a0_fp->_field_kind) && _58857_ok;
			}
			_iter_next_4767402576:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_11a21f8a0_i; _11a21f8a0_fp = *__julec_range_begin; goto _iter_begin_4767402576; }
			_iter_end_4767402576:;
		}
	}
	if ((!(_58917_pf->_field_decl->_method_is_void()))) {
		_11a3c2e70_TypeKind* _61121_result = (_58917_pf->_field_result).alloc;
		(*this)._field_k=(&(_61121_result));
		_58857_ok=(*this)._method_annotate_kind(_59317_f->_field_result) && _58857_ok;
	}
	(*this)._field_k=_60317_old;
	_58857_ok = _58857_ok;
	return _58857_ok;
}



inline jule::Bool _11a21f8a0_DynamicTypeAnnotation::_method_annotate_ptr(jule::Ref<_11a3c2e70_TypeKind> _62042_k) {
	jule::Bool _62058_ok = jule::Bool();
	jule::Ref<_11a3c2e70_Ptr> _62117_pptr = (*((*this)._field_k))->_method_ptr();
	if ((!(jule::real(_62117_pptr)))) {
		_62058_ok = false;
		return _62058_ok;
	}
	jule::Ref<_11a3c2e70_Ptr> _62617_ptr = _62042_k->_method_ptr();
	_11a3c2e70_TypeKind* _62717_cpptr = (_62117_pptr->_field_elem).alloc;
	(*this)._field_k=(&(_62717_cpptr));
	_62058_ok = (*this)._method_annotate_kind(_62617_ptr->_field_elem);
	return _62058_ok;
}



inline jule::Bool _11a21f8a0_DynamicTypeAnnotation::_method_annotate_any(jule::Ref<_11a3c2e70_TypeKind> _63242_k) {
	jule::Bool _63258_ok = jule::Bool();
	jule::Str _63313_kind = (*((*this)._field_k))->_method_to_str();
	{
		auto &__julec_range_expr = (*this)._field_f->_field_decl->_field_generics;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _11a21f8a0_i = 0;
			jule::Ref<_118d9a790_GenericDecl> _11a21f8a0_g = *__julec_range_begin;
			_iter_begin_4767431312:;
			{
				if (_63313_kind != _11a21f8a0_g->_field_ident) {
					goto _iter_next_4767431312;
				}
				jule::Ref<_11a3c2e70_TypeKind> _63917_t = (*this)._field_f->_field_generics[static_cast<jule::Int>(_11a21f8a0_i)];
				{
					if (!(((!(jule::real(_63917_t)))))) { goto _case_end_4767437376; }
					_case_begin_4767437376:;
					{
						(*this)._method_push_generic(_63242_k,_11a21f8a0_i);
					}
					goto _match_end_4767437168;
					_case_end_4767437376:;
					if (!((_63917_t->_method_to_str() != _63242_k->_method_to_str()))) { goto _case_end_4767437488; }
					_case_begin_4767437488:;
					{
						_63258_ok = false;
						return _63258_ok;
					}
					goto _match_end_4767437168;
					_case_end_4767437488:;
					_match_end_4767437168:;
				}
				(*((*this)._field_k))->_field_kind=_63242_k->_field_kind;
				_63258_ok = true;
				return _63258_ok;
			}
			_iter_next_4767431312:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_11a21f8a0_i; _11a21f8a0_g = *__julec_range_begin; goto _iter_begin_4767431312; }
			_iter_end_4767431312:;
		}
	}
	_63258_ok = false;
	return _63258_ok;
}



inline jule::Bool _11a21f8a0_DynamicTypeAnnotation::_method_annotate_kind(jule::Ref<_11a3c2e70_TypeKind> _65643_k) {
	jule::Bool _65659_ok = jule::Bool();
	if (((*this)._field_k == nullptr) || ((*((*this)._field_k)) == nullptr)) {
		return _65659_ok;
	}
	{
		if (!(((*this)._method_annotate_any(_65643_k)))) { goto _case_end_4767449904; }
		_case_begin_4767449904:;
		{
			_65659_ok = true;
			return _65659_ok;
		}
		goto _match_end_4767446096;
		_case_end_4767449904:;
		if (!((jule::real(_65643_k->_method_prim())))) { goto _case_end_4767450880; }
		_case_begin_4767450880:;
		{
			_65659_ok = (*this)._method_annotate_prim(_65643_k);
			return _65659_ok;
		}
		goto _match_end_4767446096;
		_case_end_4767450880:;
		if (!((jule::real(_65643_k->_method_slc())))) { goto _case_end_4767450992; }
		_case_begin_4767450992:;
		{
			_65659_ok = (*this)._method_annotate_slc(_65643_k);
			return _65659_ok;
		}
		goto _match_end_4767446096;
		_case_end_4767450992:;
		if (!((jule::real(_65643_k->_method_map())))) { goto _case_end_4767451104; }
		_case_begin_4767451104:;
		{
			_65659_ok = (*this)._method_annotate_map(_65643_k);
			return _65659_ok;
		}
		goto _match_end_4767446096;
		_case_end_4767451104:;
		if (!((jule::real(_65643_k->_method_fnc())))) { goto _case_end_4767449168; }
		_case_begin_4767449168:;
		{
			_65659_ok = (*this)._method_annotate_fn(_65643_k);
			return _65659_ok;
		}
		goto _match_end_4767446096;
		_case_end_4767449168:;
		if (!((jule::real(_65643_k->_method_ptr())))) { goto _case_end_4767449280; }
		_case_begin_4767449280:;
		{
			_65659_ok = (*this)._method_annotate_ptr(_65643_k);
			return _65659_ok;
		}
		goto _match_end_4767446096;
		_case_end_4767449280:;
		_case_begin_4767447760:;
		{
			_65659_ok = false;
			return _65659_ok;
		}
		goto _match_end_4767446096;
		_case_end_4767447760:;
		_match_end_4767446096:;
	}
}



inline jule::Bool _11a21f8a0_DynamicTypeAnnotation::_method_annotate(void) {
	jule::Bool _67236_ok = jule::Bool();
	_11a3c2e70_TypeKind* _67317_pk = ((*this)._field_p->_field_kind).alloc;
	(*this)._field_k=(&(_67317_pk));
	_67236_ok = (*this)._method_annotate_kind((*this)._field_a->_field_kind);
	return _67236_ok;
}







std::ostream &operator<<(std::ostream &_Stream, const _11a21f8a0_DynamicTypeAnnotation &_Src) {
	_Stream << "DynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "k:" << _Src._field_k;
	_Stream << "}";
	return _Stream;
}



inline void _11a21f8a0_StructLitChecker::_method_push_err(_11911a8a0_Token _89327_token,jule::Str _89341_key,jule::Slice<jule::Any> _89351_args) {
	(*this)._field_e->_method_push_err(_89327_token,_89341_key,_89351_args);
}



inline void _11a21f8a0_StructLitChecker::_method_push_match(jule::Ref<_118bb7d70_FieldIns> _89733_f,jule::Ref<_11a53f4f0_Data> _89751_d,_11911a8a0_Token _89761_error_token) {
	(*this)._field_args=append((*this)._field_args,jule::Slice<jule::Ref<_119748ec0_StructArgExprModel>>({jule::new_struct<_119748ec0_StructArgExprModel>(new( std::nothrow ) _119748ec0_StructArgExprModel(_89733_f,_89751_d->_field_model))}));
	
	(*this)._field_e->_field_s->_method_check_validity_for_init_expr(_89733_f->_field_decl->_field_mutable,false,_89733_f->_field_kind,_89751_d,_89761_error_token);
	(*this)._field_e->_field_s->_method_check_assign_type(_89733_f->_field_kind,_89751_d,_89761_error_token,false);
}



inline void _11a21f8a0_StructLitChecker::_method_check_pair(jule::Ref<_118d9a790_FieldExprPair> _90833_pair,jule::Slice<jule::Any> _90859_exprs) {
	jule::Ref<_118bb7d70_FieldIns> _91017_f = (*this)._field_s->_method_find_field(_90833_pair->_field_field._field_kind);
	if ((!(jule::real(_91017_f)))) {
		(*this)._method_push_err(_90833_pair->_field_field,jule::Str("ident_not_exist", 15),jule::Slice<jule::Any>({jule::Any(_90833_pair->_field_field._field_kind)}));
		return;
	}
	if ((!((*this)._field_e->_field_s->_method_is_accessible_define(_91017_f->_field_decl->_field_public,_91017_f->_field_decl->_field_token)))) {
		(*this)._method_push_err(_90833_pair->_field_field,jule::Str("ident_is_not_accessible", 23),jule::Slice<jule::Any>({jule::Any(_90833_pair->_field_field._field_kind)}));
	}
	_julec_label_dup_lookup:;
	{
		auto &__julec_range_expr = _90859_exprs;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Any _11a21f8a0_expr = *__julec_range_begin;
			_iter_begin_4768552064:;
			{
				{
					auto &_match_expr{ _11a21f8a0_expr };
					if (!(_match_expr.type_is<jule::Ref<_118d9a790_FieldExprPair>>())) { goto _case_end_4768553264; }
					_case_begin_4768553264:;
					{
						jule::Ref<_118d9a790_FieldExprPair> _92525_dpair = _11a21f8a0_expr.operator jule::Ref<_118d9a790_FieldExprPair>();
						{
							if (!((_90833_pair == _92525_dpair))) { goto _case_end_4768557168; }
							_case_begin_4768557168:;
							{
								goto _iter_end_4768552064;
							}
							goto _match_end_4768556912;
							_case_end_4768557168:;
							if (!((_90833_pair->_field_field._field_kind == _92525_dpair->_field_field._field_kind))) { goto _case_end_4768557280; }
							_case_begin_4768557280:;
							{
								(*this)._method_push_err(_90833_pair->_field_field,jule::Str("already_has_expr", 16),jule::Slice<jule::Any>({jule::Any(_90833_pair->_field_field._field_kind)}));
								goto _iter_end_4768552064;
							}
							goto _match_end_4768556912;
							_case_end_4768557280:;
							_match_end_4768556912:;
						}
					}
					goto _match_end_4768552512;
					_case_end_4768553264:;
					_match_end_4768552512:;
				}
			}
			_iter_next_4768552064:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a21f8a0_expr = *__julec_range_begin; goto _iter_begin_4768552064; }
			_iter_end_4768552064:;
		}
	}
	jule::Ref<_11a3c2e70_TypeKind> _93717_prefix = (*this)._field_e->_field_prefix;
	__JULE_DEFER({
		(*this)._field_e->_field_prefix=_93717_prefix;
	});
	(*this)._field_e->_field_prefix=_91017_f->_field_kind;
	jule::Ref<_11a53f4f0_Data> _94117_d = (*this)._field_e->_method_eval_expr_kind(_90833_pair->_field_expr);
	if ((!(jule::real(_94117_d)))) {
		return;
	}
	(*this)._method_push_match(_91017_f,_94117_d,_90833_pair->_field_field);
}



inline jule::Bool _11a21f8a0_StructLitChecker::_method_ready_exprs(jule::Slice<jule::Any> _94834_exprs) {
	jule::Bool _94917_ok = true;
	{
		auto &__julec_range_expr = _94834_exprs;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _11a21f8a0_i = 0;
			jule::Any _11a21f8a0_expr = *__julec_range_begin;
			_iter_begin_4768574240:;
			{
				{
					auto &_match_expr{ _11a21f8a0_expr };
					if (!(_match_expr.type_is<jule::Ref<_118d9a790_KeyValPair>>())) { goto _case_end_4768576672; }
					_case_begin_4768576672:;
					{
						jule::Ref<_118d9a790_KeyValPair> _95325_pair = _11a21f8a0_expr.operator jule::Ref<_118d9a790_KeyValPair>();
						{
							auto &_match_expr{ _95325_pair->_field_key };
							if (!(_match_expr.type_is<jule::Ref<_118d9a790_IdentExpr>>())) { goto _case_end_4768582080; }
							goto _match_end_4768579920;
							_case_end_4768582080:;
							_case_begin_4768580832:;
							{
								(*this)._method_push_err(_95325_pair->_field_colon,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
								_94917_ok=false;
								goto _iter_next_4768574240;
							}
							goto _match_end_4768579920;
							_case_end_4768580832:;
							_match_end_4768579920:;
						}
						_94834_exprs[static_cast<jule::Int>(_11a21f8a0_i)]=jule::Any(jule::new_struct<_118d9a790_FieldExprPair>(new( std::nothrow ) _118d9a790_FieldExprPair(_95325_pair->_field_key.operator jule::Ref<_118d9a790_IdentExpr>()->_field_token,_95325_pair->_field_val)));
					}
					goto _match_end_4768576544;
					_case_end_4768576672:;
					_match_end_4768576544:;
				}
			}
			_iter_next_4768574240:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_11a21f8a0_i; _11a21f8a0_expr = *__julec_range_begin; goto _iter_begin_4768574240; }
			_iter_end_4768574240:;
		}
	}
	return _94917_ok;
}



inline void _11a21f8a0_StructLitChecker::_method_check(jule::Slice<jule::Any> _97428_exprs) {
	if (_97428_exprs.len() == 0LL) {
		return;
	}
	if ((!((*this)._method_ready_exprs(_97428_exprs)))) {
		return;
	}
	jule::Bool _98317_paired = false;
	{
		auto &__julec_range_expr = _97428_exprs;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _11a21f8a0_i = 0;
			jule::Any _11a21f8a0_expr = *__julec_range_begin;
			_iter_begin_4768593920:;
			{
				{
					auto &_match_expr{ _11a21f8a0_expr };
					if (!(_match_expr.type_is<jule::Ref<_118d9a790_FieldExprPair>>())) { goto _case_end_4768597040; }
					_case_begin_4768597040:;
					{
						jule::Ref<_118d9a790_FieldExprPair> _98725_pair = _11a21f8a0_expr.operator jule::Ref<_118d9a790_FieldExprPair>();
						if ((_11a21f8a0_i > 0LL) && (!(_98317_paired))) {
							(*this)._method_push_err(_98725_pair->_field_field,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
						}
						_98317_paired=true;
						(*this)._method_check_pair(_98725_pair,_97428_exprs);
					}
					goto _match_end_4768595312;
					_case_end_4768597040:;
					if (!(_match_expr.type_is<jule::Ref<_118d9a790_Expr>>())) { goto _case_end_4768597152; }
					_case_begin_4768597152:;
					{
						jule::Ref<_118d9a790_Expr> _99525_e = _11a21f8a0_expr.operator jule::Ref<_118d9a790_Expr>();
						if (_98317_paired) {
							(*this)._method_push_err(_99525_e->_field_token,jule::Str("argument_must_target_to_field", 29),jule::Slice<jule::Any>({}));
						}
						if (_11a21f8a0_i >= (*this)._field_s->_field_fields.len()) {
							(*this)._method_push_err(_99525_e->_field_token,jule::Str("argument_overflow", 17),jule::Slice<jule::Any>({}));
							goto _iter_next_4768593920;
						}
						jule::Ref<_118bb7d70_FieldIns> _100425_field = (*this)._field_s->_field_fields[static_cast<jule::Int>(_11a21f8a0_i)];
						jule::Ref<_11a3c2e70_TypeKind> _100625_prefix = (*this)._field_e->_field_prefix;
						__JULE_DEFER({
							(*this)._field_e->_field_prefix=_100625_prefix;
						});
						(*this)._field_e->_field_prefix=_100425_field->_field_kind;
						jule::Ref<_11a53f4f0_Data> _101025_d = (*this)._field_e->_method_eval_expr_kind(_99525_e->_field_kind);
						if ((!(jule::real(_101025_d)))) {
							goto _iter_next_4768593920;
						}
						(*this)._method_push_match(_100425_field,_101025_d,_99525_e->_field_token);
					}
					goto _match_end_4768595312;
					_case_end_4768597152:;
					_match_end_4768595312:;
				}
			}
			_iter_next_4768593920:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_11a21f8a0_i; _11a21f8a0_expr = *__julec_range_begin; goto _iter_begin_4768593920; }
			_iter_end_4768593920:;
		}
	}
	if ((!(_98317_paired))) {
		jule::I64 _102117_n = (*this)._field_s->_field_fields.len();
		jule::I64 _102221_diff = _102117_n - _97428_exprs.len();
		{
			if (!((_102221_diff <= 0LL))) { goto _case_end_4768626544; }
			_case_begin_4768626544:;
			{
				return;
			}
			goto _match_end_4768626352;
			_case_end_4768626544:;
			_match_end_4768626352:;
		}
		jule::Str _102821_idents = jule::Str("", 0);
		_iter_begin_4768627040:;
		if (!(_102221_diff > 0LL)) { goto _iter_end_4768627040; }
		{
			_102821_idents+=jule::Str(", ", 2) + (*this)._field_s->_field_fields[static_cast<jule::Int>(_102117_n - _102221_diff)]->_field_decl->_field_ident;
		}
		_iter_next_4768627040:;
		(_102221_diff)--;
		goto _iter_begin_4768627040;
		_iter_end_4768627040:;
		_102821_idents=_102821_idents.slice(static_cast<jule::Int>(2LL));
		(*this)._method_push_err((*this)._field_error_token,jule::Str("missing_expr_for", 16),jule::Slice<jule::Any>({jule::Any(_102821_idents)}));
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _11a21f8a0_StructLitChecker &_Src) {
	_Stream << "StructLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_11a245f20_Var> _11a21f8a0_RangeChecker::_method_build_var(jule::Ref<_118d9a790_VarDecl> _104728_decl) {
	jule::Ref<_11a245f20_Var> _104817_v = _13feceeb0_build_var(_104728_decl);
	return _104817_v;
}



inline void _11a21f8a0_RangeChecker::_method_set_size_key(void) {
	if ((!(jule::real((*this)._field_rang->_field_key_a))) || _11911a8a0_is_ignore_ident((*this)._field_rang->_field_key_a->_field_ident)) {
		return;
	}
	(*this)._field_kind->_field_key_a=(*this)._method_build_var((*this)._field_rang->_field_key_a);
	(*this)._field_kind->_field_key_a->_field_kind=jule::new_struct<_11a3c2e70_TypeSymbol>(new( std::nothrow ) _11a3c2e70_TypeSymbol(jule::Ref<_118d9a790_TypeDecl>(),jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_11a3c2e70_build_prim_type(jule::Str("int", 3))))));
}



inline void _11a21f8a0_RangeChecker::_method_check_slice(void) {
	(*this)._method_set_size_key();
	if ((!(jule::real((*this)._field_rang->_field_key_b))) || _11911a8a0_is_ignore_ident((*this)._field_rang->_field_key_b->_field_ident)) {
		return;
	}
	jule::Ref<_11a3c2e70_Slc> _107117_slc = (*this)._field_d->_field_kind->_method_slc();
	(*this)._field_kind->_field_key_b=(*this)._method_build_var((*this)._field_rang->_field_key_b);
	(*this)._field_kind->_field_key_b->_field_kind=jule::new_struct<_11a3c2e70_TypeSymbol>(new( std::nothrow ) _11a3c2e70_TypeSymbol(jule::Ref<_118d9a790_TypeDecl>(),_107117_slc->_field_elem));
	(*this)._field_sc->_field_s->_method_check_validity_for_init_expr((*this)._field_kind->_field_key_b->_field_mutable,(*this)._field_kind->_field_key_b->_field_reference,(*this)._field_kind->_field_key_b->_field_kind->_field_kind,(*this)._field_d,(*this)._field_rang->_field_in_token);
}



inline void _11a21f8a0_RangeChecker::_method_check_array(void) {
	(*this)._method_set_size_key();
	if ((!(jule::real((*this)._field_rang->_field_key_b))) || _11911a8a0_is_ignore_ident((*this)._field_rang->_field_key_b->_field_ident)) {
		return;
	}
	jule::Ref<_11a3c2e70_Arr> _108817_arr = (*this)._field_d->_field_kind->_method_arr();
	(*this)._field_kind->_field_key_b=(*this)._method_build_var((*this)._field_rang->_field_key_b);
	(*this)._field_kind->_field_key_b->_field_kind=jule::new_struct<_11a3c2e70_TypeSymbol>(new( std::nothrow ) _11a3c2e70_TypeSymbol(jule::Ref<_118d9a790_TypeDecl>(),_108817_arr->_field_elem));
	(*this)._field_sc->_field_s->_method_check_validity_for_init_expr((*this)._field_kind->_field_key_b->_field_mutable,(*this)._field_kind->_field_key_b->_field_reference,(*this)._field_kind->_field_key_b->_field_kind->_field_kind,(*this)._field_d,(*this)._field_rang->_field_in_token);
}



inline void _11a21f8a0_RangeChecker::_method_check_map_key_a(void) {
	if ((!(jule::real((*this)._field_rang->_field_key_a))) || _11911a8a0_is_ignore_ident((*this)._field_rang->_field_key_a->_field_ident)) {
		return;
	}
	jule::Ref<_11a3c2e70_Map> _110417_m = (*this)._field_d->_field_kind->_method_map();
	(*this)._field_kind->_field_key_a=(*this)._method_build_var((*this)._field_rang->_field_key_a);
	(*this)._field_kind->_field_key_a->_field_kind=jule::new_struct<_11a3c2e70_TypeSymbol>(new( std::nothrow ) _11a3c2e70_TypeSymbol(jule::Ref<_118d9a790_TypeDecl>(),_110417_m->_field_key));
	jule::Ref<_11a53f4f0_Data> _110817_d = jule::new_ref<_11a53f4f0_Data>((*this)._field_d.get());
	_110817_d->_field_kind=_110417_m->_field_key;
	(*this)._field_sc->_field_s->_method_check_validity_for_init_expr((*this)._field_kind->_field_key_a->_field_mutable,(*this)._field_kind->_field_key_a->_field_reference,(*this)._field_kind->_field_key_a->_field_kind->_field_kind,_110817_d,(*this)._field_rang->_field_in_token);
}



inline void _11a21f8a0_RangeChecker::_method_check_map_key_b(void) {
	if ((!(jule::real((*this)._field_rang->_field_key_b))) || _11911a8a0_is_ignore_ident((*this)._field_rang->_field_key_b->_field_ident)) {
		return;
	}
	jule::Ref<_11a3c2e70_Map> _112317_m = (*this)._field_d->_field_kind->_method_map();
	(*this)._field_kind->_field_key_b=(*this)._method_build_var((*this)._field_rang->_field_key_b);
	(*this)._field_kind->_field_key_b->_field_kind=jule::new_struct<_11a3c2e70_TypeSymbol>(new( std::nothrow ) _11a3c2e70_TypeSymbol(jule::Ref<_118d9a790_TypeDecl>(),_112317_m->_field_val));
	jule::Ref<_11a53f4f0_Data> _112717_d = jule::new_ref<_11a53f4f0_Data>((*this)._field_d.get());
	_112717_d->_field_kind=_112317_m->_field_val;
	(*this)._field_sc->_field_s->_method_check_validity_for_init_expr((*this)._field_kind->_field_key_b->_field_mutable,(*this)._field_kind->_field_key_b->_field_reference,(*this)._field_kind->_field_key_b->_field_kind->_field_kind,_112717_d,(*this)._field_rang->_field_in_token);
}



inline void _11a21f8a0_RangeChecker::_method_check_map(void) {
	(*this)._method_check_map_key_a();
	(*this)._method_check_map_key_b();
}



inline void _11a21f8a0_RangeChecker::_method_check_str(void) {
	(*this)._method_set_size_key();
	if ((!(jule::real((*this)._field_rang->_field_key_b))) || _11911a8a0_is_ignore_ident((*this)._field_rang->_field_key_b->_field_ident)) {
		return;
	}
	(*this)._field_kind->_field_key_b=(*this)._method_build_var((*this)._field_rang->_field_key_b);
	(*this)._field_kind->_field_key_b->_field_kind=jule::new_struct<_11a3c2e70_TypeSymbol>(new( std::nothrow ) _11a3c2e70_TypeSymbol(jule::Ref<_118d9a790_TypeDecl>(),jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_11a3c2e70_build_prim_type(jule::Str("u8", 2))))));
}



inline jule::Bool _11a21f8a0_RangeChecker::_method_check(void) {
	if (jule::real((*this)._field_d->_field_kind->_method_ref())) {
		(*this)._field_d->_field_model=jule::Any(jule::new_struct<_119748ec0_ExplicitDerefExprModel>(new( std::nothrow ) _119748ec0_ExplicitDerefExprModel((*this)._field_d->_field_model)));
		(*this)._field_d->_field_kind=(*this)._field_d->_field_kind->_method_ref()->_field_elem;
	}
	{
		if (!((jule::real((*this)._field_d->_field_kind->_method_slc())))) { goto _case_end_4768736528; }
		_case_begin_4768736528:;
		{
			(*this)._method_check_slice();
			return true;
		}
		goto _match_end_4768736240;
		_case_end_4768736528:;
		if (!((jule::real((*this)._field_d->_field_kind->_method_arr())))) { goto _case_end_4768736640; }
		_case_begin_4768736640:;
		{
			(*this)._method_check_array();
			return true;
		}
		goto _match_end_4768736240;
		_case_end_4768736640:;
		if (!((jule::real((*this)._field_d->_field_kind->_method_map())))) { goto _case_end_4768736752; }
		_case_begin_4768736752:;
		{
			(*this)._method_check_map();
			return true;
		}
		goto _match_end_4768736240;
		_case_end_4768736752:;
		_match_end_4768736240:;
	}
	jule::Ref<_11a3c2e70_Prim> _117813_prim = (*this)._field_d->_field_kind->_method_prim();
	if (jule::real(_117813_prim) && _117813_prim->_method_is_str()) {
		(*this)._method_check_str();
		return true;
	}
	(*this)._field_sc->_field_s->_method_push_err((*this)._field_rang->_field_in_token,jule::Str("iter_range_require_enumerable_expr", 34),jule::Slice<jule::Any>({}));
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _11a21f8a0_RangeChecker &_Src) {
	_Stream << "RangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _11a53f4f0_Data::_method_is_nil(void) {
	return (*this)._field_kind->_method_is_nil();
}



inline jule::Bool _11a53f4f0_Data::_method_is_void(void) {
	return (*this)._field_kind->_method_is_void();
}



inline jule::Bool _11a53f4f0_Data::_method_is_const(void) {
	return jule::real((*this)._field_constant);
}







std::ostream &operator<<(std::ostream &_Stream, const _11a53f4f0_Data &_Src) {
	_Stream << "Data{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "cast_kind:" << _Src._field_cast_kind << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "lvalue:" << _Src._field_lvalue << ", ";
	_Stream << "variadiced:" << _Src._field_variadiced << ", ";
	_Stream << "is_rune:" << _Src._field_is_rune << ", ";
	_Stream << "model:" << _Src._field_model << ", ";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "constant:" << _Src._field_constant;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11a53f4f0_Value &_Src) {
	_Stream << "Value{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline void _11a53f4f0_Eval::_method_push_err(_11911a8a0_Token _29227_token,jule::Str _29241_key,jule::Slice<jule::Any> _29251_args) {
	(*this)._field_s->_field_errors=append((*this)._field_s->_field_errors,jule::Slice<_13fe81720_Log>({_11a096220_compiler_err(_29227_token,_29241_key,_29251_args)}));
}



inline jule::Bool _11a53f4f0_Eval::_method_is_unsafe(void) {
	return (*this)._field_unsafety;
}



inline jule::Bool _11a53f4f0_Eval::_method_is_global(void) {
	{
		auto &_match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_11a096220_Sema>>())) { goto _case_end_4767629120; }
		_case_begin_4767629120:;
		{
			return true;
		}
		goto _match_end_4767627248;
		_case_end_4767629120:;
		_case_begin_4767628032:;
		{
			return false;
		}
		goto _match_end_4767627248;
		_case_end_4767628032:;
		_match_end_4767627248:;
	}
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_lit_nil(void) {
	jule::Ref<_11ab854f0_Const> _31117_constant = _11ab854f0_new_nil();
	return jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),nullptr)),jule::Ref<_11a3c2e70_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(_31117_constant),false,_31117_constant));
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_lit_str(jule::Ref<_118d9a790_LitExpr> _32222_lt) {
	jule::Str _32317_s = _32222_lt->_field_value.slice(static_cast<jule::Int>(1LL),static_cast<jule::Int>(_32222_lt->_field_value.len() - 1LL));
	if (_11911a8a0_is_raw_str(_32222_lt->_field_value)) {
		_32317_s=_11acfaa00_to_raw_str(static_cast<jule::Slice<jule::U8>>(_32317_s));
	} else {
		_32317_s=_11acfaa00_to_str(static_cast<jule::Slice<jule::U8>>(_32317_s));
	}
	jule::Ref<_11ab854f0_Const> _32917_constant = _11ab854f0_new_str(_32317_s);
	return jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_11a3c2e70_build_prim_type(jule::Str("str", 3)))),jule::Ref<_11a3c2e70_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(_32917_constant),false,_32917_constant));
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_lit_bool(jule::Ref<_118d9a790_LitExpr> _34323_lit) {
	jule::Ref<_11ab854f0_Const> _34417_constant = _11ab854f0_new_bool(_34323_lit->_field_value == jule::Str("true", 4));
	return jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_11a3c2e70_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_11a3c2e70_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(_34417_constant),false,_34417_constant));
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_lit_rune(jule::Ref<_118d9a790_LitExpr> _35723_l) {
	
	
	jule::Str _36113_lt = _35723_l->_field_value.slice(static_cast<jule::Int>(1LL),static_cast<jule::Int>(_35723_l->_field_value.len() - 1LL));
	jule::I32 _36213_r = _11acfaa00_to_rune(static_cast<jule::Slice<jule::U8>>(_36113_lt));
	jule::Ref<_11a53f4f0_Data> _36317_data = jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::Ref<_11a3c2e70_TypeKind>(),jule::Ref<_11a3c2e70_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),false,_11ab854f0_new_i64(static_cast<jule::I64>(_36213_r))));
	jule::Bool _37017_is_byte;
	std::tie(std::ignore,_37017_is_byte) = _11acfaa00_is_byte_lit(_35723_l->_field_value);
	if (_37017_is_byte) {
		_36317_data->_field_kind=jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_11a3c2e70_build_prim_type(jule::Str("u8", 2))));
	} else {
		_36317_data->_field_kind=jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_11a3c2e70_build_prim_type(jule::Str("i32", 3))));
	}
	_36317_data->_field_model=jule::Any(jule::new_struct<_119748ec0_RuneExprModel>(new( std::nothrow ) _119748ec0_RuneExprModel(_36213_r)));
	_36317_data->_field_is_rune=true;
	return _36317_data;
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_lit_float(jule::Ref<_118d9a790_LitExpr> _38624_l) {
	
	jule::F64 _38914_f;
	std::tie(_38914_f,std::ignore) = _13ffab0a0_parse_float(_38624_l->_field_value,64LL);
	jule::Ref<_11ab854f0_Const> _39017_constant = _11ab854f0_new_f64(_38914_f);
	return jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_11a3c2e70_build_prim_type(jule::Str("f64", 3)))),jule::Ref<_11a3c2e70_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(_39017_constant),false,_39017_constant));
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_lit_int(jule::Ref<_118d9a790_LitExpr> _40422_l) {
	
	jule::Str _40717_lit = _40422_l->_field_value;
	jule::Int _40817_base = 0LL;
	{
		if (!((_40717_lit.has_prefix(jule::Str("0x", 2))))) { goto _case_end_4767692784; }
		_case_begin_4767692784:;
		{
			_40717_lit=_40717_lit.slice(static_cast<jule::Int>(2LL));
			_40817_base=16LL;
		}
		goto _match_end_4767691536;
		_case_end_4767692784:;
		if (!((_40717_lit.has_prefix(jule::Str("0b", 2))))) { goto _case_end_4767692928; }
		_case_begin_4767692928:;
		{
			_40717_lit=_40717_lit.slice(static_cast<jule::Int>(2LL));
			_40817_base=2LL;
		}
		goto _match_end_4767691536;
		_case_end_4767692928:;
		if (!((_40717_lit.has_prefix(jule::Str("0o", 2))))) { goto _case_end_4767693168; }
		_case_begin_4767693168:;
		{
			_40717_lit=_40717_lit.slice(static_cast<jule::Int>(2LL));
			_40817_base=8LL;
		}
		goto _match_end_4767691536;
		_case_end_4767693168:;
		if (!(((_40717_lit[static_cast<jule::Int>(0LL)] == '0') && (_40717_lit.len() > 1LL)))) { goto _case_end_4767693536; }
		_case_begin_4767693536:;
		{
			_40717_lit=_40717_lit.slice(static_cast<jule::Int>(1LL));
			_40817_base=8LL;
		}
		goto _match_end_4767691536;
		_case_end_4767693536:;
		_case_begin_4767691984:;
		{
			_40817_base=10LL;
		}
		goto _match_end_4767691536;
		_case_end_4767691984:;
		_match_end_4767691536:;
	}
	jule::Ref<_11a53f4f0_Data> _43117_d = jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::Ref<_11a3c2e70_TypeKind>(),jule::Ref<_11a3c2e70_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),false,jule::Ref<_11ab854f0_Const>()));
	jule::Any _43717_value = jule::Any(nullptr);
	jule::I64 _43814_sig;
	jule::Int _43819_err;
	std::tie(_43814_sig,_43819_err) = _12ff26420_parse_int(_40717_lit,_40817_base,64LL);
	if (_43819_err == 0LLU) {
		_43717_value=jule::Any(_43814_sig);
		_43117_d->_field_constant=_11ab854f0_new_i64(_43814_sig);
	} else {
		jule::U64 _44318_unsig;
		std::tie(_44318_unsig,std::ignore) = _12ff26420_parse_uint(_40717_lit,_40817_base,64LL);
		_43117_d->_field_constant=_11ab854f0_new_u64(_44318_unsig);
		_43717_value=jule::Any(_44318_unsig);
	}
	_43117_d->_field_kind=jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_11a3c2e70_build_prim_type(_11a53f4f0_kind_by_bitsize(_43717_value))));
	_11a53f4f0_normalize_bitsize(_43117_d);
	_43117_d->_field_model=jule::Any(_43117_d->_field_constant);
	return _43117_d;
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_lit_num(jule::Ref<_118d9a790_LitExpr> _45822_l) {
	{
		if (!((_11911a8a0_is_float(_45822_l->_field_value)))) { goto _case_end_4767728704; }
		_case_begin_4767728704:;
		{
			return (*this)._method_lit_float(_45822_l);
		}
		goto _match_end_4767726208;
		_case_end_4767728704:;
		_case_begin_4767726416:;
		{
			return (*this)._method_lit_int(_45822_l);
		}
		goto _match_end_4767726208;
		_case_end_4767726416:;
		_match_end_4767726208:;
	}
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_eval_lit(jule::Ref<_118d9a790_LitExpr> _46523_lit) {
	{
		if (!((_46523_lit->_method_is_nil()))) { goto _case_end_4767735248; }
		_case_begin_4767735248:;
		{
			return (*this)._method_lit_nil();
		}
		goto _match_end_4767732608;
		_case_end_4767735248:;
		if (!((_11911a8a0_is_str(_46523_lit->_field_value)))) { goto _case_end_4767734896; }
		_case_begin_4767734896:;
		{
			return (*this)._method_lit_str(_46523_lit);
		}
		goto _match_end_4767732608;
		_case_end_4767734896:;
		if (!((_11911a8a0_is_bool(_46523_lit->_field_value)))) { goto _case_end_4767735008; }
		_case_begin_4767735008:;
		{
			return (*this)._method_lit_bool(_46523_lit);
		}
		goto _match_end_4767732608;
		_case_end_4767735008:;
		if (!((_11911a8a0_is_rune(_46523_lit->_field_value)))) { goto _case_end_4767735472; }
		_case_begin_4767735472:;
		{
			return (*this)._method_lit_rune(_46523_lit);
		}
		goto _match_end_4767732608;
		_case_end_4767735472:;
		if (!((_11911a8a0_is_num(_46523_lit->_field_value)))) { goto _case_end_4767735584; }
		_case_begin_4767735584:;
		{
			return (*this)._method_lit_num(_46523_lit);
		}
		goto _match_end_4767732608;
		_case_end_4767735584:;
		_case_begin_4767732816:;
		{
			return jule::new_ref<_11a53f4f0_Data>();
		}
		goto _match_end_4767732608;
		_case_end_4767732816:;
		_match_end_4767732608:;
	}
}



inline jule::Any _11a53f4f0_Eval::_method_find_builtins(jule::Str _47632_ident) {
	{
		auto &_match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_11a0945e0_ImportInfo>>())) { goto _case_end_4767746832; }
		_case_begin_4767746832:;
		{
			jule::Any _47921_def = _11a53f4f0_find_builtins_import(_47632_ident,(*this)._field_lookup.operator jule::Ref<_11a0945e0_ImportInfo>());
			if (_47921_def != nullptr) {
				return _47921_def;
			}
		}
		goto _match_end_4767746096;
		_case_end_4767746832:;
		if (!(_match_expr.type_is<jule::Ref<_11a096220_Sema>>())) { goto _case_end_4767746960; }
		_case_begin_4767746960:;
		{
			jule::Any _48521_def = _11a53f4f0_find_builtins_sema(_47632_ident,(*this)._field_lookup.operator jule::Ref<_11a096220_Sema>());
			if (_48521_def != nullptr) {
				return _48521_def;
			}
		}
		goto _match_end_4767746096;
		_case_end_4767746960:;
		if (!(_match_expr.type_is<jule::Ref<_11a093930_ScopeChecker>>())) { goto _case_end_4767747072; }
		_case_begin_4767747072:;
		{
			jule::Any _49121_def = _11a53f4f0_find_builtins_sema(_47632_ident,(*this)._field_lookup.operator jule::Ref<_11a093930_ScopeChecker>()->_field_s);
			if (_49121_def != nullptr) {
				return _49121_def;
			}
		}
		goto _match_end_4767746096;
		_case_end_4767747072:;
		_match_end_4767746096:;
	}
	return _11aa913b0_find_builtin_def(_47632_ident);
}



inline jule::Any _11a53f4f0_Eval::_method_get_def(jule::Str _50026_ident,jule::Bool _50038_cpp_linked) {
	if ((!(_50038_cpp_linked))) {
		jule::Ref<_11a089b40_Enum> _50221_enm = (*this)._field_lookup.get()._method_find_enum(_50026_ident);
		if (jule::real(_50221_enm)) {
			return jule::Any(_50221_enm);
		}
	}
	jule::Ref<_11a245f20_Var> _50817_v = (*this)._field_lookup.get()._method_find_var(_50026_ident,_50038_cpp_linked);
	if (jule::real(_50817_v)) {
		return jule::Any(_50817_v);
	}
	jule::Ref<_119099250_Fn> _51317_f = (*this)._field_lookup.get()._method_find_fn(_50026_ident,_50038_cpp_linked);
	if (jule::real(_51317_f)) {
		return jule::Any(_51317_f);
	}
	jule::Ref<_118bb7d70_Struct> _51817_s = (*this)._field_lookup.get()._method_find_struct(_50026_ident,_50038_cpp_linked);
	if (jule::real(_51817_s)) {
		return jule::Any(_51817_s);
	}
	jule::Ref<_11a3c2e70_TypeAlias> _52317_ta = (*this)._field_lookup.get()._method_find_type_alias(_50026_ident,_50038_cpp_linked);
	if (jule::real(_52317_ta)) {
		return jule::Any(_52317_ta);
	}
	return (*this)._method_find_builtins(_50026_ident);
}



inline void _11a53f4f0_Eval::_method_push_reference(jule::Ref<_13feceeb0_ReferenceStack> _53137_references) {
	{
		auto &_match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_11a093930_ScopeChecker>>())) { goto _case_end_4767793040; }
		_case_begin_4767793040:;
		{
			jule::Ref<_11a093930_ScopeChecker> _53421_sc = (*this)._field_lookup.operator jule::Ref<_11a093930_ScopeChecker>()->_method_get_root();
			if ((!(_53137_references->_method_exist_1(_53421_sc->_field_owner->_field_decl)))) {
				_53137_references->_method_push(jule::Any(_53421_sc->_field_owner->_field_decl));
			}
		}
		goto _match_end_4767786672;
		_case_end_4767793040:;
		_case_begin_4767787440:;
		{
			if (jule::real((*this)._field_owner) && (!(_53137_references->_method_exist_0((*this)._field_owner)))) {
				_53137_references->_method_push(jule::Any((*this)._field_owner));
			}
		}
		goto _match_end_4767786672;
		_case_end_4767787440:;
		_match_end_4767786672:;
	}
}



inline void _11a53f4f0_Eval::_method_push_reference_to_fn(jule::Ref<_119099250_Fn> _54643_f) {
	(*this)._method_push_reference(_54643_f->_field_references);
}



inline void _11a53f4f0_Eval::_method_push_reference_to_var(jule::Ref<_11a245f20_Var> _55044_v) {
	if ((!(jule::real(_55044_v->_field_references)))) {
		return;
	}
	(*this)._method_push_reference(_55044_v->_field_references);
}



inline void _11a53f4f0_Eval::_method_push_reference_to_struct(jule::Ref<_118bb7d70_Struct> _55847_s) {
	(*this)._method_push_reference(_55847_s->_field_references);
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_eval_enum(jule::Ref<_11a089b40_Enum> _56228_enm,_11911a8a0_Token _56240_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_56228_enm->_field_public,_56228_enm->_field_token)))) {
		(*this)._method_push_err(_56240_error_token,jule::Str("ident_is_not_accessible", 23),jule::Slice<jule::Any>({jule::Any(_56228_enm->_field_ident)}));
		return jule::new_ref<_11a53f4f0_Data>();
	}
	return jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_56228_enm)),jule::Ref<_11a3c2e70_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),true,jule::new_ref<_11ab854f0_Const>()));
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_eval_struct(jule::Ref<_118bb7d70_StructIns> _57934_s,_11911a8a0_Token _57949_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_57934_s->_field_decl->_field_public,_57934_s->_field_decl->_field_token)))) {
		(*this)._method_push_err(_57949_error_token,jule::Str("ident_is_not_accessible", 23),jule::Slice<jule::Any>({jule::Any(_57934_s->_field_decl->_field_ident)}));
		return jule::new_ref<_11a53f4f0_Data>();
	}
	return jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_57934_s)),jule::Ref<_11a3c2e70_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(_57934_s),true,jule::new_ref<_11ab854f0_Const>()));
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_eval_fn_ins(jule::Ref<_119099250_FnIns> _59730_f) {
	return jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_59730_f)),jule::Ref<_11a3c2e70_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(_59730_f),false,jule::new_ref<_11ab854f0_Const>()));
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_eval_fn(jule::Ref<_119099250_Fn> _61030_f,_11911a8a0_Token _61038_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_61030_f->_field_public,_61030_f->_field_token)))) {
		(*this)._method_push_err(_61038_error_token,jule::Str("ident_is_not_accessible", 23),jule::Slice<jule::Any>({jule::Any(_61030_f->_field_ident)}));
		return jule::new_ref<_11a53f4f0_Data>();
	}
	(*this)._method_push_reference_to_fn(_61030_f);
	jule::Ref<_119099250_FnIns> _61817_ins = _61030_f->_method_instance();
	return (*this)._method_eval_fn_ins(_61817_ins);
}



inline void _11a53f4f0_Eval::_method_push_illegal_cycle_error(jule::Ref<_11a245f20_Var> _62243_v1,jule::Ref<_11a245f20_Var> _62253_v2,jule::Str& _62268_message) {
	
	jule::Str _62513_refers_to = _13fe9efa0_errorf(jule::Str("refers_to", 9),jule::Slice<jule::Any>({jule::Any(_62243_v1->_field_ident),jule::Any(_62253_v2->_field_ident)}));
	_62268_message=((_13feceeb0_str_repeat(jule::Str(" ", 1),4LL) + _62513_refers_to) + jule::Str("\n", 1)) + _62268_message;
}



inline jule::Bool _11a53f4f0_Eval::_method_check_cross_cycle(jule::Ref<_11a245f20_Var> _62936_v,jule::Str& _62950_message) {
	{
		auto &__julec_range_expr = _62936_v->_field_depends;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11a245f20_Var> _11a53f4f0_d = *__julec_range_begin;
			_iter_begin_5099416240:;
			{
				if (_11a53f4f0_d == (*this)._field_owner) {
					(*this)._method_push_illegal_cycle_error(_62936_v,_11a53f4f0_d,_62950_message);
					return false;
				}
				if ((!((*this)._method_check_cross_cycle(_11a53f4f0_d,_62950_message)))) {
					(*this)._method_push_illegal_cycle_error(_62936_v,_11a53f4f0_d,_62950_message);
					return false;
				}
			}
			_iter_next_5099416240:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a53f4f0_d = *__julec_range_begin; goto _iter_begin_5099416240; }
			_iter_end_5099416240:;
		}
	}
	return true;
}



inline jule::Bool _11a53f4f0_Eval::_method_check_illegal_cycles(jule::Ref<_11a245f20_Var> _64843_v,_11911a8a0_Token _64852_decl_token) {
	jule::Bool _64873_ok = jule::Bool();
	if ((!(jule::real((*this)._field_owner)))) {
		_64873_ok = true;
		return _64873_ok;
	}
	if (((*this)._field_owner).alloc == (_64843_v).alloc) {
		(*this)._method_push_err((*this)._field_owner->_field_token,jule::Str("illegal_cycle_refers_itself", 27),jule::Slice<jule::Any>({jule::Any((*this)._field_owner->_field_ident)}));
		_64873_ok = false;
		return _64873_ok;
	}
	jule::Str _66017_message = jule::Str("", 0);
	if ((!((*this)._method_check_cross_cycle(_64843_v,_66017_message)))) {
		jule::Str _66321_err_msg = _66017_message;
		_66017_message=jule::Str("", 0);
		(*this)._method_push_illegal_cycle_error((*this)._field_owner,_64843_v,_66017_message);
		_66321_err_msg=_66321_err_msg + _66017_message;
		(*this)._method_push_err(_64852_decl_token,jule::Str("illegal_cross_cycle", 19),jule::Slice<jule::Any>({jule::Any(_66321_err_msg)}));
		_64873_ok = false;
		return _64873_ok;
	}
	(*this)._field_owner->_field_depends=append((*this)._field_owner->_field_depends,jule::Slice<jule::Ref<_11a245f20_Var>>({_64843_v}));
	_64873_ok = true;
	return _64873_ok;
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_eval_var(jule::Ref<_11a245f20_Var> _67531_v,_11911a8a0_Token _67540_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_67531_v->_field_public,_67531_v->_field_token)))) {
		(*this)._method_push_err(_67540_error_token,jule::Str("ident_is_not_accessible", 23),jule::Slice<jule::Any>({jule::Any(_67531_v->_field_ident)}));
		return jule::new_ref<_11a53f4f0_Data>();
	}
	_67531_v->_field_used=true;
	{
		auto &_match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_11a096220_Sema>>())) { goto _case_end_5099454016; }
		_case_begin_5099454016:;
		{
			jule::Bool _68617_ok = (*this)._method_check_illegal_cycles(_67531_v,_67540_error_token);
			if ((!(_68617_ok))) {
				return jule::new_ref<_11a53f4f0_Data>();
			}
		}
		goto _match_end_5099452304;
		_case_end_5099454016:;
		if (!(_match_expr.type_is<jule::Ref<_11a093930_ScopeChecker>>())) { goto _case_end_5099454128; }
		_case_begin_5099454128:;
		{
			if ((!(_67531_v->_field_reference)) || (*this)._method_is_unsafe()) {
				goto _match_end_5099452304;
			}
			jule::Ref<_11a093930_ScopeChecker> _69621_s = (*this)._field_lookup.operator jule::Ref<_11a093930_ScopeChecker>();
			_iter_begin_5099462768:;
			if (!((!(jule::real(_69621_s->_field_owner))) && jule::real(_69621_s->_field_parent))) { goto _iter_end_5099462768; }
			{
				_69621_s=_69621_s->_field_parent;
			}
			_iter_next_5099462768:;
			goto _iter_begin_5099462768;
			_iter_end_5099462768:;
			if ((jule::real(_69621_s->_field_owner) && _69621_s->_field_owner->_field_anon) && ((_67531_v->_field_scope).alloc != (_69621_s->_field_owner->_field_scope).alloc)) {
				(*this)._method_push_err(_67540_error_token,jule::Str("used_ref_in_anon_fn_from_parent_scope", 37),jule::Slice<jule::Any>({jule::Any(_67531_v->_field_ident)}));
			}
		}
		goto _match_end_5099452304;
		_case_end_5099454128:;
		_match_end_5099452304:;
	}
	(*this)._method_push_reference_to_var(_67531_v);
	if ((!(_67531_v->_field_cpp_linked)) && ((!(jule::real(_67531_v->_field_value))) || (!(jule::real(_67531_v->_field_value->_field_data))))) {
		if (_67531_v->_field_constant) {
			(*this)._field_s->_method_check_type_var(_67531_v,(*this)._field_s);
			if ((!(jule::real(_67531_v->_field_value->_field_data)))) {
				return jule::new_ref<_11a53f4f0_Data>();
			}
		}
	}
	if ((!(jule::real(_67531_v->_field_kind))) || (!(jule::real(_67531_v->_field_kind->_field_kind)))) {
		return jule::new_ref<_11a53f4f0_Data>();
	}
	jule::Ref<_11a53f4f0_Data> _72217_d = jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(_67531_v->_field_kind->_field_kind->_method_clone(),jule::Ref<_11a3c2e70_TypeKind>(),_67531_v->_field_mutable,_67531_v->_field_reference,(!(_67531_v->_field_constant)),jule::Bool(),jule::Bool(),jule::Any(_67531_v),false,jule::Ref<_11ab854f0_Const>()));
	if (((!(_67531_v->_field_cpp_linked)) && _67531_v->_method_is_initialized()) && jule::real(_67531_v->_field_value->_field_data)) {
		_72217_d->_field_is_rune=_67531_v->_field_value->_field_data->_field_is_rune;
	}
	if (_67531_v->_field_constant) {
		_72217_d->_field_constant=jule::new_ref<_11ab854f0_Const>(_67531_v->_field_value->_field_data->_field_constant.get());
		_72217_d->_field_model=jule::Any(_72217_d->_field_constant);
	}
	if (jule::real(_72217_d->_field_kind->_method_fnc())) {
		jule::Ref<_119099250_FnIns> _74121_f = _72217_d->_field_kind->_method_fnc();
		if (jule::real(_74121_f->_field_decl)) {
			_74121_f->_field_decl->_field_ident=_67531_v->_field_ident;
		}
	}
	return _72217_d;
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_eval_type_alias(jule::Ref<_11a3c2e70_TypeAlias> _75238_ta,_11911a8a0_Token _75254_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_75238_ta->_field_public,_75238_ta->_field_token)))) {
		(*this)._method_push_err(_75254_error_token,jule::Str("ident_is_not_accessible", 23),jule::Slice<jule::Any>({jule::Any(_75238_ta->_field_ident)}));
		return jule::new_ref<_11a53f4f0_Data>();
	}
	_75238_ta->_field_used=true;
	jule::Trait<_11a3c2e70_Kind> _76017_kind = _75238_ta->_field_kind->_field_kind->_field_kind;
	{
		auto &_match_expr{ _76017_kind };
		if (!(_match_expr.type_is<jule::Ref<_118bb7d70_StructIns>>())) { goto _case_end_5099508992; }
		_case_begin_5099508992:;
		{
			return (*this)._method_eval_struct(_76017_kind.operator jule::Ref<_118bb7d70_StructIns>(),_75254_error_token);
		}
		goto _match_end_5099504720;
		_case_end_5099508992:;
		if (!(_match_expr.type_is<jule::Ref<_11a089b40_Enum>>())) { goto _case_end_5099509104; }
		_case_begin_5099509104:;
		{
			return (*this)._method_eval_enum(_76017_kind.operator jule::Ref<_11a089b40_Enum>(),_75254_error_token);
		}
		goto _match_end_5099504720;
		_case_end_5099509104:;
		_case_begin_5099506864:;
		{
			jule::Ref<_11a53f4f0_Data> _76921_d = jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(_75238_ta->_field_kind->_field_kind->_method_clone(),jule::Ref<_11a3c2e70_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),true,jule::Ref<_11ab854f0_Const>()));
			_76921_d->_field_model=jule::Any(_76921_d->_field_kind);
			return _76921_d;
		}
		goto _match_end_5099504720;
		_case_end_5099506864:;
		_match_end_5099504720:;
	}
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_eval_def(jule::Any _77831_def,_11911a8a0_Token _77841_ident) {
	{
		auto &_match_expr{ _77831_def };
		if (!(_match_expr.type_is<jule::Ref<_11a245f20_Var>>())) { goto _case_end_5099526096; }
		_case_begin_5099526096:;
		{
			return (*this)._method_eval_var(_77831_def.operator jule::Ref<_11a245f20_Var>(),_77841_ident);
		}
		goto _match_end_5099521120;
		_case_end_5099526096:;
		if (!(_match_expr.type_is<jule::Ref<_11a089b40_Enum>>())) { goto _case_end_5099526208; }
		_case_begin_5099526208:;
		{
			return (*this)._method_eval_enum(_77831_def.operator jule::Ref<_11a089b40_Enum>(),_77841_ident);
		}
		goto _match_end_5099521120;
		_case_end_5099526208:;
		if (!(_match_expr.type_is<jule::Ref<_118bb7d70_Struct>>())) { goto _case_end_5099525840; }
		_case_begin_5099525840:;
		{
			return (*this)._method_eval_struct(_77831_def.operator jule::Ref<_118bb7d70_Struct>()->_method_instance(),_77841_ident);
		}
		goto _match_end_5099521120;
		_case_end_5099525840:;
		if (!(_match_expr.type_is<jule::Ref<_119099250_Fn>>())) { goto _case_end_5099525952; }
		_case_begin_5099525952:;
		{
			return (*this)._method_eval_fn(_77831_def.operator jule::Ref<_119099250_Fn>(),_77841_ident);
		}
		goto _match_end_5099521120;
		_case_end_5099525952:;
		if (!(_match_expr.type_is<jule::Ref<_119099250_FnIns>>())) { goto _case_end_5099526416; }
		_case_begin_5099526416:;
		{
			return (*this)._method_eval_fn_ins(_77831_def.operator jule::Ref<_119099250_FnIns>());
		}
		goto _match_end_5099521120;
		_case_end_5099526416:;
		if (!(_match_expr.type_is<jule::Ref<_11a3c2e70_TypeAlias>>())) { goto _case_end_5099526528; }
		_case_begin_5099526528:;
		{
			return (*this)._method_eval_type_alias(_77831_def.operator jule::Ref<_11a3c2e70_TypeAlias>(),_77841_ident);
		}
		goto _match_end_5099521120;
		_case_end_5099526528:;
		_case_begin_5099521216:;
		{
			(*this)._method_push_err(_77841_ident,jule::Str("ident_not_exist", 15),jule::Slice<jule::Any>({jule::Any(_77841_ident._field_kind)}));
			return jule::new_ref<_11a53f4f0_Data>();
		}
		goto _match_end_5099521120;
		_case_end_5099521216:;
		_match_end_5099521120:;
	}
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_eval_ident(jule::Ref<_118d9a790_IdentExpr> _80429_ident) {
	jule::Any _80517_def = (*this)._method_get_def(_80429_ident->_field_ident,_80429_ident->_field_cpp_linked);
	return (*this)._method_eval_def(_80517_def,_80429_ident->_field_token);
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_eval_unary_minus(jule::Ref<_11a53f4f0_Data> _80935_d) {
	jule::Ref<_11a3c2e70_Prim> _81013_t = _80935_d->_field_kind->_method_prim();
	if ((!(jule::real(_81013_t))) || (!(_11ab8b300_is_num(_81013_t->_method_to_str())))) {
		return jule::new_ref<_11a53f4f0_Data>();
	}
	if (_80935_d->_method_is_const()) {
		{
			if (!((_80935_d->_field_constant->_method_is_f64()))) { goto _case_end_5099552080; }
			_case_begin_5099552080:;
			{
				_80935_d->_field_constant->_method_set_f64(static_cast<jule::F64>((-(_80935_d->_field_constant->_method_read_f64()))));
			}
			goto _match_end_5099551824;
			_case_end_5099552080:;
			if (!((_80935_d->_field_constant->_method_is_i64()))) { goto _case_end_5099552192; }
			_case_begin_5099552192:;
			{
				_80935_d->_field_constant->_method_set_f64(static_cast<jule::F64>((-(_80935_d->_field_constant->_method_as_f64()))));
			}
			goto _match_end_5099551824;
			_case_end_5099552192:;
			if (!((_80935_d->_field_constant->_method_is_u64()))) { goto _case_end_5099552304; }
			_case_begin_5099552304:;
			{
				_80935_d->_field_constant->_method_set_f64(static_cast<jule::F64>((-(_80935_d->_field_constant->_method_as_f64()))));
			}
			goto _match_end_5099551824;
			_case_end_5099552304:;
			_match_end_5099551824:;
		}
		_11a53f4f0_normalize_type(_80935_d);
	}
	_80935_d->_field_lvalue=false;
	_80935_d->_field_model=jule::Any(jule::new_struct<_119748ec0_UnaryExprModel>(new( std::nothrow ) _119748ec0_UnaryExprModel(_80935_d->_field_model,jule::Str("-", 1))));
	return _80935_d;
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_eval_unary_plus(jule::Ref<_11a53f4f0_Data> _83234_d) {
	jule::Ref<_11a3c2e70_Prim> _83313_t = _83234_d->_field_kind->_method_prim();
	if ((!(jule::real(_83313_t))) || (!(_11ab8b300_is_num(_83313_t->_method_to_str())))) {
		return jule::new_ref<_11a53f4f0_Data>();
	}
	if (_83234_d->_method_is_const()) {
		{
			if (!((_83234_d->_field_constant->_method_is_f64()))) { goto _case_end_4768963520; }
			_case_begin_4768963520:;
			{
				_83234_d->_field_constant->_method_set_f64(static_cast<jule::F64>((+(_83234_d->_field_constant->_method_read_f64()))));
			}
			goto _match_end_4768963264;
			_case_end_4768963520:;
			if (!((_83234_d->_field_constant->_method_is_i64()))) { goto _case_end_4768963632; }
			_case_begin_4768963632:;
			{
				_83234_d->_field_constant->_method_set_f64(static_cast<jule::F64>((+(_83234_d->_field_constant->_method_as_f64()))));
			}
			goto _match_end_4768963264;
			_case_end_4768963632:;
			if (!((_83234_d->_field_constant->_method_is_u64()))) { goto _case_end_4768963744; }
			_case_begin_4768963744:;
			{
				_83234_d->_field_constant->_method_set_f64(static_cast<jule::F64>((+(_83234_d->_field_constant->_method_as_f64()))));
			}
			goto _match_end_4768963264;
			_case_end_4768963744:;
			_match_end_4768963264:;
		}
		_11a53f4f0_normalize_type(_83234_d);
	}
	_83234_d->_field_lvalue=false;
	_83234_d->_field_model=jule::Any(jule::new_struct<_119748ec0_UnaryExprModel>(new( std::nothrow ) _119748ec0_UnaryExprModel(_83234_d->_field_model,jule::Str("+", 1))));
	return _83234_d;
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_eval_unary_caret(jule::Ref<_11a53f4f0_Data> _85535_d) {
	jule::Ref<_11a3c2e70_Prim> _85613_t = _85535_d->_field_kind->_method_prim();
	if ((!(jule::real(_85613_t))) || (!(_11ab8b300_is_int(_85613_t->_method_to_str())))) {
		return jule::new_ref<_11a53f4f0_Data>();
	}
	if (_85535_d->_method_is_const()) {
		{
			if (!((_85535_d->_field_constant->_method_is_i64()))) { goto _case_end_4768985328; }
			_case_begin_4768985328:;
			{
				_85535_d->_field_constant->_method_set_i64(static_cast<jule::I64>((~(_85535_d->_field_constant->_method_read_i64()))));
			}
			goto _match_end_4768985088;
			_case_end_4768985328:;
			if (!((_85535_d->_field_constant->_method_is_u64()))) { goto _case_end_4768985440; }
			_case_begin_4768985440:;
			{
				_85535_d->_field_constant->_method_set_u64(static_cast<jule::U64>((~(_85535_d->_field_constant->_method_read_u64()))));
			}
			goto _match_end_4768985088;
			_case_end_4768985440:;
			_match_end_4768985088:;
		}
	}
	_85535_d->_field_lvalue=false;
	_85535_d->_field_model=jule::Any(jule::new_struct<_119748ec0_UnaryExprModel>(new( std::nothrow ) _119748ec0_UnaryExprModel(_85535_d->_field_model,jule::Str("^", 1))));
	return _85535_d;
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_eval_unary_excl(jule::Ref<_11a53f4f0_Data> _87934_d) {
	jule::Ref<_11a3c2e70_Prim> _88013_t = _87934_d->_field_kind->_method_prim();
	if ((!(jule::real(_88013_t))) || (!(_88013_t->_method_is_bool()))) {
		return jule::new_ref<_11a53f4f0_Data>();
	}
	if (_87934_d->_method_is_const()) {
		{
			if (!((_87934_d->_field_constant->_method_is_bool()))) { goto _case_end_4769002576; }
			_case_begin_4769002576:;
			{
				_87934_d->_field_constant->_method_set_bool((!(_87934_d->_field_constant->_method_read_bool())));
			}
			goto _match_end_4769002352;
			_case_end_4769002576:;
			_match_end_4769002352:;
		}
	}
	_87934_d->_field_lvalue=false;
	_87934_d->_field_model=jule::Any(jule::new_struct<_119748ec0_UnaryExprModel>(new( std::nothrow ) _119748ec0_UnaryExprModel(_87934_d->_field_model,jule::Str("!", 1))));
	return _87934_d;
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_eval_unary_star(jule::Ref<_11a53f4f0_Data> _90038_d,_11911a8a0_Token _90048_op) {
	if ((!((*this)._method_is_unsafe()))) {
		(*this)._method_push_err(_90048_op,jule::Str("unsafe_behavior_at_out_of_unsafe_scope", 38),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_11a3c2e70_Ptr> _90517_t = _90038_d->_field_kind->_method_ptr();
	if ((!(jule::real(_90517_t))) || _90517_t->_method_is_unsafe()) {
		return jule::new_ref<_11a53f4f0_Data>();
	}
	jule::drop(_90038_d->_field_constant);
	_90038_d->_field_lvalue=true;
	_90038_d->_field_kind=_90517_t->_field_elem;
	_90038_d->_field_model=jule::Any(jule::new_struct<_119748ec0_UnaryExprModel>(new( std::nothrow ) _119748ec0_UnaryExprModel(_90038_d->_field_model,jule::Str("*", 1))));
	return _90038_d;
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_eval_unary_amper(jule::Ref<_11a53f4f0_Data> _91935_d) {
	{
		auto &_match_expr{ _91935_d->_field_model };
		if (!(_match_expr.type_is<jule::Ref<_119748ec0_StructLitExprModel>>())) { goto _case_end_4769038720; }
		_case_begin_4769038720:;
		{
			jule::Ref<_119748ec0_StructLitExprModel> _92221_lit = _91935_d->_field_model.operator jule::Ref<_119748ec0_StructLitExprModel>();
			_91935_d->_field_kind=jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),jule::new_struct<_11a3c2e70_Ref>(new( std::nothrow ) _11a3c2e70_Ref(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_92221_lit->_field_strct))))));
			_91935_d->_field_model=jule::Any(jule::new_struct<_119748ec0_AllocStructLitExprModel>(new( std::nothrow ) _119748ec0_AllocStructLitExprModel(_92221_lit)));
		}
		goto _match_end_4769025712;
		_case_end_4769038720:;
		_case_begin_4769026528:;
		{
			{
				if (!((jule::real(_91935_d->_field_kind->_method_ref())))) { goto _case_end_4769028880; }
				_case_begin_4769028880:;
				{
					_91935_d->_field_kind=jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),jule::new_struct<_11a3c2e70_Ptr>(new( std::nothrow ) _11a3c2e70_Ptr(_91935_d->_field_kind->_method_ref()->_field_elem->_method_clone()))));
					_91935_d->_field_model=jule::Any(jule::new_struct<_119748ec0_GetRefPtrExprModel>(new( std::nothrow ) _119748ec0_GetRefPtrExprModel(_91935_d->_field_model)));
				}
				goto _match_end_4769027872;
				_case_end_4769028880:;
				if (!((_11a3c2e70_can_get_ptr(_91935_d)))) { goto _case_end_4769029664; }
				_case_begin_4769029664:;
				{
					_91935_d->_field_kind=jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),jule::new_struct<_11a3c2e70_Ptr>(new( std::nothrow ) _11a3c2e70_Ptr(_91935_d->_field_kind->_method_clone()))));
					_91935_d->_field_model=jule::Any(jule::new_struct<_119748ec0_UnaryExprModel>(new( std::nothrow ) _119748ec0_UnaryExprModel(_91935_d->_field_model,jule::Str("&", 1))));
				}
				goto _match_end_4769027872;
				_case_end_4769029664:;
				_case_begin_4769028064:;
				{
					jule::drop(_91935_d);
				}
				goto _match_end_4769027872;
				_case_end_4769028064:;
				_match_end_4769027872:;
			}
		}
		goto _match_end_4769025712;
		_case_end_4769026528:;
		_match_end_4769025712:;
	}
	if (jule::real(_91935_d)) {
		jule::drop(_91935_d->_field_constant);
		_91935_d->_field_lvalue=true;
		_91935_d->_field_mutable=true;
	}
	return _91935_d;
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_eval_unary_type_decl(jule::Ref<_11a53f4f0_Data> _96643_d,jule::Ref<_118d9a790_UnaryExpr> _96653_u) {
	_11a3c2e70_TypeChecker _96717_tc = _11a3c2e70_TypeChecker((*this)._field_s,(*this)._field_lookup,jule::Ref<_11a3c2e70_Referencer>(),_96653_u->_field_op,jule::Slice<jule::Ref<_118d9a790_GenericDecl>>(),jule::Slice<jule::Ref<_11a3c2e70_TypeAlias>>(),jule::Bool());
	{
		auto &_match_expr{ _96653_u->_field_op._field_kind };
		if (!((jule::Str("*", 1)) == _match_expr)) { goto _case_end_4769056432; }
		_case_begin_4769056432:;
		{
			_96643_d->_field_kind=jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_96717_tc._method_build_ptr_from_type(_96643_d->_field_kind)));
		}
		goto _match_end_4769052144;
		_case_end_4769056432:;
		if (!((jule::Str("&", 1)) == _match_expr)) { goto _case_end_4769059936; }
		_case_begin_4769059936:;
		{
			_96643_d->_field_kind=jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_96717_tc._method_build_ref_from_type(_96643_d->_field_kind)));
		}
		goto _match_end_4769052144;
		_case_end_4769059936:;
		_case_begin_4769054976:;
		{
			(*this)._method_push_err(_96653_u->_field_op,jule::Str("invalid_expr_unary_operator", 27),jule::Slice<jule::Any>({jule::Any(_96653_u->_field_op._field_kind)}));
			return jule::new_ref<_11a53f4f0_Data>();
		}
		goto _match_end_4769052144;
		_case_end_4769054976:;
		_match_end_4769052144:;
	}
	_96643_d->_field_decl=true;
	return _96643_d;
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_eval_unary(jule::Ref<_118d9a790_UnaryExpr> _98934_u) {
	jule::Ref<_11a3c2e70_TypeKind> _99017_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_99017_prefix;
	});
	jule::Ref<_11a53f4f0_Data> _99417_d = this->self->_method_eval_expr_kind(_98934_u->_field_expr);
	if ((!(jule::real(_99417_d)))) {
		return jule::new_ref<_11a53f4f0_Data>();
	}
	if (_99417_d->_field_decl) {
		return this->self->_method_eval_unary_type_decl(_99417_d,_98934_u);
	}
	jule::Ref<_11a3c2e70_TypeKind> _100317_cast_kind = _99417_d->_field_cast_kind;
	{
		auto &_match_expr{ _98934_u->_field_op._field_kind };
		if (!((jule::Str("-", 1)) == _match_expr)) { goto _case_end_4769080464; }
		_case_begin_4769080464:;
		{
			_99417_d=this->self->_method_eval_unary_minus(_99417_d);
		}
		goto _match_end_4769075328;
		_case_end_4769080464:;
		if (!((jule::Str("+", 1)) == _match_expr)) { goto _case_end_4769080576; }
		_case_begin_4769080576:;
		{
			_99417_d=this->self->_method_eval_unary_plus(_99417_d);
		}
		goto _match_end_4769075328;
		_case_end_4769080576:;
		if (!((jule::Str("^", 1)) == _match_expr)) { goto _case_end_4769079584; }
		_case_begin_4769079584:;
		{
			_99417_d=this->self->_method_eval_unary_caret(_99417_d);
		}
		goto _match_end_4769075328;
		_case_end_4769079584:;
		if (!((jule::Str("!", 1)) == _match_expr)) { goto _case_end_4769079696; }
		_case_begin_4769079696:;
		{
			_99417_d=this->self->_method_eval_unary_excl(_99417_d);
		}
		goto _match_end_4769075328;
		_case_end_4769079696:;
		if (!((jule::Str("*", 1)) == _match_expr)) { goto _case_end_4769079808; }
		_case_begin_4769079808:;
		{
			_99417_d=this->self->_method_eval_unary_star(_99417_d,_98934_u->_field_op);
		}
		goto _match_end_4769075328;
		_case_end_4769079808:;
		if (!((jule::Str("&", 1)) == _match_expr)) { goto _case_end_4769079920; }
		_case_begin_4769079920:;
		{
			_99417_d=this->self->_method_eval_unary_amper(_99417_d);
		}
		goto _match_end_4769075328;
		_case_end_4769079920:;
		_case_begin_4769074096:;
		{
			jule::drop(_99417_d);
		}
		goto _match_end_4769075328;
		_case_end_4769074096:;
		_match_end_4769075328:;
	}
	if ((!(jule::real(_99417_d)))) {
		this->self->_method_push_err(_98934_u->_field_op,jule::Str("invalid_expr_unary_operator", 27),jule::Slice<jule::Any>({jule::Any(_98934_u->_field_op._field_kind)}));
	} else if (_99417_d->_method_is_const()) {
		_99417_d->_field_model=jule::Any(_99417_d->_field_constant);
	} else if (jule::real(_100317_cast_kind)) {
		_99417_d->_field_cast_kind=_100317_cast_kind;
		_11a53f4f0_apply_cast_kind(_99417_d);
	}
	return _99417_d;
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_eval_variadic(jule::Ref<_118d9a790_VariadicExpr> _102637_v) {
	jule::Ref<_11a3c2e70_TypeKind> _102717_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_102717_prefix;
	});
	jule::Ref<_11a53f4f0_Data> _103117_d = this->self->_method_eval_expr_kind(_102637_v->_field_expr);
	if ((!(jule::real(_103117_d)))) {
		return jule::new_ref<_11a53f4f0_Data>();
	}
	if (jule::real(_103117_d->_field_kind->_method_ref())) {
		_103117_d->_field_kind=_103117_d->_field_kind->_method_ref()->_field_elem;
		_103117_d->_field_model=jule::Any(jule::new_struct<_119748ec0_ExplicitDerefExprModel>(new( std::nothrow ) _119748ec0_ExplicitDerefExprModel(_103117_d->_field_model)));
	}
	if ((!(_11a3c2e70_is_variadicable(_103117_d->_field_kind)))) {
		this->self->_method_push_err(_102637_v->_field_token,jule::Str("variadic_with_non_variadicable", 30),jule::Slice<jule::Any>({jule::Any(_103117_d->_field_kind->_method_to_str())}));
		return jule::new_ref<_11a53f4f0_Data>();
	}
	_103117_d->_field_variadiced=true;
	_103117_d->_field_kind=_103117_d->_field_kind->_method_slc()->_field_elem;
	return _103117_d;
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_eval_unsafe(jule::Ref<_118d9a790_UnsafeExpr> _105335_u) {
	jule::Bool _105413_unsafety = this->self->_field_unsafety;
	this->self->_field_unsafety=true;
	jule::Ref<_11a53f4f0_Data> _105717_d = this->self->_method_eval_expr_kind(_105335_u->_field_expr);
	this->self->_field_unsafety=_105413_unsafety;
	return _105717_d;
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_eval_arr(jule::Ref<_118d9a790_SliceExpr> _106432_s) {
	jule::Ref<_11a3c2e70_Arr> _106617_pt = this->self->_field_prefix->_method_arr();
	jule::Ref<_11a3c2e70_Arr> _106817_arr = jule::new_struct<_11a3c2e70_Arr>(new( std::nothrow ) _11a3c2e70_Arr(false,0LL,_106617_pt->_field_elem));
	if (_106617_pt->_field_auto) {
		_106817_arr->_field_n=static_cast<jule::I64>(_106432_s->_field_elems.len());
	} else {
		_106817_arr->_field_n=static_cast<jule::I64>(_106432_s->_field_elems.len());
		if (_106817_arr->_field_n > _106617_pt->_field_n) {
			this->self->_method_push_err(_106432_s->_field_token,jule::Str("overflow_limits", 15),jule::Slice<jule::Any>({}));
		} else if (_106817_arr->_field_n < _106617_pt->_field_n) {
			_106817_arr->_field_n=_106617_pt->_field_n;
		}
	}
	jule::Ref<_119748ec0_ArrayExprModel> _108517_model = jule::new_struct<_119748ec0_ArrayExprModel>(new( std::nothrow ) _119748ec0_ArrayExprModel(_106817_arr,jule::Slice<jule::Any>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_106432_s->_field_elems.len())))));
	jule::Ref<_11a3c2e70_TypeKind> _109017_prefix = this->self->_field_prefix;
	this->self->_field_prefix=_106817_arr->_field_elem;
	{
		auto &__julec_range_expr = _106432_s->_field_elems;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _11a53f4f0_i = 0;
			jule::Any _11a53f4f0_elem = *__julec_range_begin;
			_iter_begin_4769145136:;
			{
				jule::Ref<_11a53f4f0_Data> _109321_d = this->self->_method_eval_expr_kind(_11a53f4f0_elem);
				if ((!(jule::real(_109321_d)))) {
					goto _iter_next_4769145136;
				}
				this->self->_field_s->_method_check_assign_type(_106817_arr->_field_elem,_109321_d,_106432_s->_field_token,true);
				_108517_model->_field_elems[static_cast<jule::Int>(_11a53f4f0_i)]=_109321_d->_field_model;
			}
			_iter_next_4769145136:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_11a53f4f0_i; _11a53f4f0_elem = *__julec_range_begin; goto _iter_begin_4769145136; }
			_iter_end_4769145136:;
		}
	}
	this->self->_field_prefix=_109017_prefix;
	return jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_106817_arr)),jule::Ref<_11a3c2e70_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_108517_model),jule::Bool(),jule::Ref<_11ab854f0_Const>()));
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_eval_exp_slc(jule::Ref<_118d9a790_SliceExpr> _111036_s,jule::Ref<_11a3c2e70_TypeKind> _111051_elem_type) {
	jule::Ref<_11a3c2e70_Slc> _111117_slc = jule::new_struct<_11a3c2e70_Slc>(new( std::nothrow ) _11a3c2e70_Slc(_111051_elem_type));
	jule::Ref<_119748ec0_SliceExprModel> _111517_model = jule::new_struct<_119748ec0_SliceExprModel>(new( std::nothrow ) _119748ec0_SliceExprModel(_111051_elem_type,jule::Slice<jule::Any>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_111036_s->_field_elems.len())))));
	jule::Ref<_11a3c2e70_TypeKind> _112017_prefix = this->self->_field_prefix;
	this->self->_field_prefix=_111117_slc->_field_elem;
	{
		auto &__julec_range_expr = _111036_s->_field_elems;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _11a53f4f0_i = 0;
			jule::Any _11a53f4f0_elem = *__julec_range_begin;
			_iter_begin_4769169296:;
			{
				jule::Ref<_11a53f4f0_Data> _112321_d = this->self->_method_eval_expr_kind(_11a53f4f0_elem);
				if ((!(jule::real(_112321_d)))) {
					goto _iter_next_4769169296;
				}
				this->self->_field_s->_method_check_assign_type(_111117_slc->_field_elem,_112321_d,_111036_s->_field_token,true);
				_111517_model->_field_elems[static_cast<jule::Int>(_11a53f4f0_i)]=_112321_d->_field_model;
			}
			_iter_next_4769169296:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_11a53f4f0_i; _11a53f4f0_elem = *__julec_range_begin; goto _iter_begin_4769169296; }
			_iter_end_4769169296:;
		}
	}
	this->self->_field_prefix=_112017_prefix;
	return jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_111117_slc)),jule::Ref<_11a3c2e70_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_111517_model),jule::Bool(),jule::Ref<_11ab854f0_Const>()));
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_eval_slice_expr(jule::Ref<_118d9a790_SliceExpr> _114039_s) {
	if (jule::real(this->self->_field_prefix)) {
		{
			if (!((jule::real(this->self->_field_prefix->_method_arr())))) { goto _case_end_4769185120; }
			_case_begin_4769185120:;
			{
				return this->self->_method_eval_arr(_114039_s);
			}
			goto _match_end_4769184880;
			_case_end_4769185120:;
			if (!((jule::real(this->self->_field_prefix->_method_slc())))) { goto _case_end_4769185232; }
			_case_begin_4769185232:;
			{
				jule::Ref<_11a3c2e70_Slc> _114725_pt = this->self->_field_prefix->_method_slc();
				return this->self->_method_eval_exp_slc(_114039_s,_114725_pt->_field_elem);
			}
			goto _match_end_4769184880;
			_case_end_4769185232:;
			_match_end_4769184880:;
		}
	}
	jule::Ref<_11a3c2e70_TypeKind> _115217_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	if (_114039_s->_field_elems.len() == 0LL) {
		this->self->_method_push_err(_114039_s->_field_token,jule::Str("dynamic_type_annotation_failed", 30),jule::Slice<jule::Any>({}));
		return jule::new_ref<_11a53f4f0_Data>();
	}
	jule::Ref<_11a53f4f0_Data> _116017_first_elem = this->self->_method_eval_expr_kind(_114039_s->_field_elems[static_cast<jule::Int>(0LL)]);
	if ((!(jule::real(_116017_first_elem)))) {
		return jule::new_ref<_11a53f4f0_Data>();
	}
	jule::Ref<_11a53f4f0_Data> _116517_d = this->self->_method_eval_exp_slc(_114039_s,_116017_first_elem->_field_kind);
	this->self->_field_prefix=_115217_prefix;
	return _116517_d;
}



inline void _11a53f4f0_Eval::_method_check_integer_indexing_by_data(jule::Ref<_11a53f4f0_Data> _117153_d,_11911a8a0_Token _117163_token) {
	jule::Str _117213_err_key = _11a53f4f0_check_data_for_integer_indexing(_117153_d);
	if (_117213_err_key != jule::Str("", 0)) {
		(*this)._method_push_err(_117163_token,_117213_err_key,jule::Slice<jule::Any>({}));
	}
}



inline void _11a53f4f0_Eval::_method_indexing_ptr(jule::Ref<_11a53f4f0_Data> _117835_d,jule::Ref<_11a53f4f0_Data> _117849_index,jule::Ref<_118d9a790_IndexingExpr> _117863_i) {
	(*this)._method_check_integer_indexing_by_data(_117849_index,_117863_i->_field_token);
	jule::Ref<_11a3c2e70_Ptr> _118117_ptr = _117835_d->_field_kind->_method_ptr();
	{
		if (!((_118117_ptr->_method_is_unsafe()))) { goto _case_end_4769216928; }
		_case_begin_4769216928:;
		{
			(*this)._method_push_err(_117863_i->_field_token,jule::Str("unsafe_ptr_indexing", 19),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4769216720;
		_case_end_4769216928:;
		if (!(((!((*this)._method_is_unsafe()))))) { goto _case_end_4769217040; }
		_case_begin_4769217040:;
		{
			(*this)._method_push_err(_117863_i->_field_token,jule::Str("unsafe_behavior_at_out_of_unsafe_scope", 38),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4769216720;
		_case_end_4769217040:;
		_match_end_4769216720:;
	}
	_117835_d->_field_kind=_118117_ptr->_field_elem->_method_clone();
}



inline void _11a53f4f0_Eval::_method_indexing_arr(jule::Ref<_11a53f4f0_Data> _119435_d,jule::Ref<_11a53f4f0_Data> _119449_index,jule::Ref<_118d9a790_IndexingExpr> _119463_i) {
	jule::Ref<_11a3c2e70_Arr> _119517_arr = _119435_d->_field_kind->_method_arr();
	_119435_d->_field_kind=_119517_arr->_field_elem->_method_clone();
	(*this)._method_check_integer_indexing_by_data(_119449_index,_119463_i->_field_token);
}



inline void _11a53f4f0_Eval::_method_indexing_slc(jule::Ref<_11a53f4f0_Data> _120035_d,jule::Ref<_11a53f4f0_Data> _120048_index,jule::Ref<_118d9a790_IndexingExpr> _120062_i) {
	jule::Ref<_11a3c2e70_Slc> _120117_slc = _120035_d->_field_kind->_method_slc();
	_120035_d->_field_kind=_120117_slc->_field_elem->_method_clone();
	(*this)._method_check_integer_indexing_by_data(_120048_index,_120062_i->_field_token);
}



inline void _11a53f4f0_Eval::_method_indexing_map(jule::Ref<_11a53f4f0_Data> _120635_d,jule::Ref<_11a53f4f0_Data> _120649_index,jule::Ref<_118d9a790_IndexingExpr> _120667_i) {
	if ((!(jule::real(_120649_index)))) {
		return;
	}
	jule::Ref<_11a3c2e70_Map> _121117_m = _120635_d->_field_kind->_method_map();
	_11a21f8a0_AssignTypeChecker _121217_atc = _11a21f8a0_AssignTypeChecker((*this)._field_s,_121117_m->_field_key,_120649_index,_120667_i->_field_token,true);
	_121217_atc._method_check();
	_120635_d->_field_kind=_121117_m->_field_val->_method_clone();
}



inline void _11a53f4f0_Eval::_method_indexing_str(jule::Ref<_11a53f4f0_Data> _122435_d,jule::Ref<_11a53f4f0_Data> _122449_index,jule::Ref<_118d9a790_IndexingExpr> _122463_i) {
	
	_122435_d->_field_kind->_field_kind=_11a3c2e70_build_prim_type(jule::Str("u8", 2));
	if ((!(jule::real(_122449_index)))) {
		return;
	}
	(*this)._method_check_integer_indexing_by_data(_122449_index,_122463_i->_field_token);
	if ((!(_122449_index->_method_is_const()))) {
		jule::drop(_122435_d->_field_constant);
		return;
	}
	if (_122435_d->_method_is_const()) {
		_11911a8a0_Token _124017_error_token = _122463_i->_field_token;
		jule::I64 _124117_i = _122449_index->_field_constant->_method_as_i64();
		jule::Str _124217_s = _122435_d->_field_constant->_method_read_str();
		if (static_cast<jule::Int>(_124117_i) >= _124217_s.len()) {
			(*this)._method_push_err(_124017_error_token,jule::Str("overflow_limits", 15),jule::Slice<jule::Any>({}));
		} else {
			_122435_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_124217_s[static_cast<jule::Int>(_124117_i)]));
		}
	}
}



inline void _11a53f4f0_Eval::_method_to_indexing(jule::Ref<_11a53f4f0_Data> _125134_d,jule::Ref<_11a53f4f0_Data> _125148_index,jule::Ref<_118d9a790_IndexingExpr> _125166_i) {
	{
		if (!((jule::real(_125134_d->_field_kind->_method_ptr())))) { goto _case_end_4767849296; }
		_case_begin_4767849296:;
		{
			(*this)._method_indexing_ptr(_125134_d,_125148_index,_125166_i);
			return;
		}
		goto _match_end_4767849008;
		_case_end_4767849296:;
		if (!((jule::real(_125134_d->_field_kind->_method_arr())))) { goto _case_end_4767849408; }
		_case_begin_4767849408:;
		{
			(*this)._method_indexing_arr(_125134_d,_125148_index,_125166_i);
			return;
		}
		goto _match_end_4767849008;
		_case_end_4767849408:;
		if (!((jule::real(_125134_d->_field_kind->_method_slc())))) { goto _case_end_4767849520; }
		_case_begin_4767849520:;
		{
			(*this)._method_indexing_slc(_125134_d,_125148_index,_125166_i);
			return;
		}
		goto _match_end_4767849008;
		_case_end_4767849520:;
		if (!((jule::real(_125134_d->_field_kind->_method_map())))) { goto _case_end_4767849648; }
		_case_begin_4767849648:;
		{
			(*this)._method_indexing_map(_125134_d,_125148_index,_125166_i);
			return;
		}
		goto _match_end_4767849008;
		_case_end_4767849648:;
		if (!((jule::real(_125134_d->_field_kind->_method_prim())))) { goto _case_end_4767849776; }
		_case_begin_4767849776:;
		{
			jule::Ref<_11a3c2e70_Prim> _127017_prim = _125134_d->_field_kind->_method_prim();
			{
				if (!((_127017_prim->_method_is_str()))) { goto _case_end_4767864704; }
				_case_begin_4767864704:;
				{
					(*this)._method_indexing_str(_125134_d,_125148_index,_125166_i);
					return;
				}
				goto _match_end_4767864448;
				_case_end_4767864704:;
				_match_end_4767864448:;
			}
		}
		goto _match_end_4767849008;
		_case_end_4767849776:;
		_match_end_4767849008:;
	}
	(*this)._method_push_err(_125166_i->_field_token,jule::Str("not_supports_indexing", 21),jule::Slice<jule::Any>({jule::Any(_125134_d->_field_kind->_method_to_str())}));
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_eval_ident_decl_from_indexing(jule::Ref<_118d9a790_IndexingExpr> _128153_i) {
	{
		auto &_match_expr{ _128153_i->_field_expr };
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_IdentExpr>>())) { goto _case_end_4767874368; }
		goto _match_end_4767872016;
		_case_end_4767874368:;
		_case_begin_4767872832:;
		{
			this->self->_method_push_err(_128153_i->_field_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_11a53f4f0_Data>();
		}
		goto _match_end_4767872016;
		_case_end_4767872832:;
		_match_end_4767872016:;
	}
	jule::Ref<_118d9a790_IdentTypeDecl> _128917_decl = jule::new_struct<_118d9a790_IdentTypeDecl>(new( std::nothrow ) _118d9a790_IdentTypeDecl(_11911a8a0_Token(),_128153_i->_field_expr.operator jule::Ref<_118d9a790_IdentExpr>()->_field_ident,jule::Bool(),jule::Slice<jule::Ref<_118d9a790_TypeDecl>>()));
	{
		auto &_match_expr{ _128153_i->_field_index };
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_UnaryExpr>>())) { goto _case_end_4769996848; }
		_case_begin_4769996848:;
		{
			jule::Ref<_11a53f4f0_Data> _129721_d = this->self->_method_eval_unary(_128153_i->_field_index.operator jule::Ref<_118d9a790_UnaryExpr>());
			if ((!(_129721_d->_field_decl))) {
				this->self->_method_push_err(_128153_i->_field_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
				return jule::new_ref<_11a53f4f0_Data>();
			}
			_128917_decl->_field_generics=append(_128917_decl->_field_generics,jule::Slice<jule::Ref<_118d9a790_TypeDecl>>({jule::new_struct<_118d9a790_TypeDecl>(new( std::nothrow ) _118d9a790_TypeDecl(_11911a8a0_Token(),jule::Any(_129721_d->_field_kind)))}));
		}
		goto _match_end_4769991760;
		_case_end_4769996848:;
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_TypeDecl>>())) { goto _case_end_4769996960; }
		_case_begin_4769996960:;
		{
			_128917_decl->_field_generics=append(_128917_decl->_field_generics,jule::Slice<jule::Ref<_118d9a790_TypeDecl>>({_128153_i->_field_index.operator jule::Ref<_118d9a790_TypeDecl>()}));
		}
		goto _match_end_4769991760;
		_case_end_4769996960:;
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_IdentExpr>>())) { goto _case_end_4769996592; }
		_case_begin_4769996592:;
		{
			_128917_decl->_field_generics=append(_128917_decl->_field_generics,jule::Slice<jule::Ref<_118d9a790_TypeDecl>>({jule::new_struct<_118d9a790_TypeDecl>(new( std::nothrow ) _118d9a790_TypeDecl(_11911a8a0_Token(),jule::Any(jule::new_struct<_118d9a790_IdentTypeDecl>(new( std::nothrow ) _118d9a790_IdentTypeDecl(_11911a8a0_Token(),_128153_i->_field_index.operator jule::Ref<_118d9a790_IdentExpr>()->_field_ident,jule::Bool(),jule::Slice<jule::Ref<_118d9a790_TypeDecl>>())))))}));
		}
		goto _match_end_4769991760;
		_case_end_4769996592:;
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_TupleExpr>>())) { goto _case_end_4769996704; }
		_case_begin_4769996704:;
		{
			{
				auto &__julec_range_expr = _128153_i->_field_index.operator jule::Ref<_118d9a790_TupleExpr>()->_field_expr;
				if (__julec_range_expr.begin() != __julec_range_expr.end()) {
					auto __julec_range_begin = __julec_range_expr.begin();
					const auto __julec_range_end = __julec_range_expr.end();
					jule::Any _11a53f4f0_expr = *__julec_range_begin;
					_iter_begin_4770017120:;
					{
						{
							auto &_match_expr{ _11a53f4f0_expr };
							if (!(_match_expr.type_is<jule::Ref<_118d9a790_TypeDecl>>())) { goto _case_end_4770019056; }
							_case_begin_4770019056:;
							{
								_128917_decl->_field_generics=append(_128917_decl->_field_generics,jule::Slice<jule::Ref<_118d9a790_TypeDecl>>({_11a53f4f0_expr.operator jule::Ref<_118d9a790_TypeDecl>()}));
							}
							goto _match_end_4770018288;
							_case_end_4770019056:;
							if (!(_match_expr.type_is<jule::Ref<_118d9a790_IdentExpr>>())) { goto _case_end_4770019168; }
							_case_begin_4770019168:;
							{
								_128917_decl->_field_generics=append(_128917_decl->_field_generics,jule::Slice<jule::Ref<_118d9a790_TypeDecl>>({jule::new_struct<_118d9a790_TypeDecl>(new( std::nothrow ) _118d9a790_TypeDecl(_11911a8a0_Token(),jule::Any(jule::new_struct<_118d9a790_IdentTypeDecl>(new( std::nothrow ) _118d9a790_IdentTypeDecl(_11911a8a0_Token(),_11a53f4f0_expr.operator jule::Ref<_118d9a790_IdentExpr>()->_field_ident,jule::Bool(),jule::Slice<jule::Ref<_118d9a790_TypeDecl>>())))))}));
							}
							goto _match_end_4770018288;
							_case_end_4770019168:;
							_match_end_4770018288:;
						}
					}
					_iter_next_4770017120:;
					++__julec_range_begin;
					if (__julec_range_begin != __julec_range_end) { _11a53f4f0_expr = *__julec_range_begin; goto _iter_begin_4770017120; }
					_iter_end_4770017120:;
				}
			}
		}
		goto _match_end_4769991760;
		_case_end_4769996704:;
		_case_begin_4769992864:;
		{
			this->self->_method_push_err(_128153_i->_field_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_11a53f4f0_Data>();
		}
		goto _match_end_4769991760;
		_case_end_4769992864:;
		_match_end_4769991760:;
	}
	return this->self->_method_eval_type(jule::new_struct<_118d9a790_TypeDecl>(new( std::nothrow ) _118d9a790_TypeDecl(_11911a8a0_Token(),jule::Any(_128917_decl))));
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_eval_indexing(jule::Ref<_118d9a790_IndexingExpr> _133337_i) {
	jule::Ref<_11a3c2e70_TypeKind> _133417_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_133417_prefix;
	});
	jule::Ref<_11a53f4f0_Data> _133817_d = this->self->_method_eval_expr_kind(_133337_i->_field_expr);
	if ((!(jule::real(_133817_d)))) {
		return jule::new_ref<_11a53f4f0_Data>();
	}
	if (_133817_d->_field_decl) {
		return this->self->_method_eval_ident_decl_from_indexing(_133337_i);
	}
	jule::Any _134817_expr_model = _133817_d->_field_model;
	jule::Ref<_11a53f4f0_Data> _134917_index = this->self->_method_eval_expr_kind(_133337_i->_field_index);
	this->self->_method_to_indexing(_133817_d,_134917_index,_133337_i);
	if (jule::real(_134917_index)) {
		if (_133817_d->_method_is_const()) {
			_133817_d->_field_model=jule::Any(_133817_d->_field_constant);
		} else {
			_133817_d->_field_model=jule::Any(jule::new_struct<_119748ec0_IndexigExprModel>(new( std::nothrow ) _119748ec0_IndexigExprModel(_134817_expr_model,_134917_index->_field_model)));
		}
	}
	return _133817_d;
}



inline std::tuple<jule::Ref<_11a53f4f0_Data>,jule::Ref<_11a53f4f0_Data>> _11a53f4f0_Eval::_method_eval_slicing_exprs(jule::Ref<_118d9a790_SlicingExpr> _137042_s) {
	jule::Ref<_11a3c2e70_TypeKind> _137117_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_137117_prefix;
	});
	jule::Ref<_11a53f4f0_Data> _137517_l = jule::new_ref<_11a53f4f0_Data>();
	jule::Ref<_11a53f4f0_Data> _137617_r = jule::new_ref<_11a53f4f0_Data>();
	if (_137042_s->_field_start != nullptr) {
		_137517_l=this->self->_method_eval_expr_kind(_137042_s->_field_start);
		if (jule::real(_137517_l)) {
			this->self->_method_check_integer_indexing_by_data(_137517_l,_137042_s->_field_token);
		} else {
			return std::make_tuple(jule::new_ref<_11a53f4f0_Data>(),jule::new_ref<_11a53f4f0_Data>());
		}
	} else {
		_137517_l=jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_11a3c2e70_build_prim_type(jule::Str("i64", 3)))),jule::Ref<_11a3c2e70_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),_11ab854f0_new_i64(0LL)));
		_137517_l->_field_model=jule::Any(_137517_l->_field_constant);
	}
	if (_137042_s->_field_to != nullptr) {
		_137617_r=this->self->_method_eval_expr_kind(_137042_s->_field_to);
		if (jule::real(_137617_r)) {
			this->self->_method_check_integer_indexing_by_data(_137617_r,_137042_s->_field_token);
		} else {
			return std::make_tuple(jule::new_ref<_11a53f4f0_Data>(),jule::new_ref<_11a53f4f0_Data>());
		}
	}
	return std::make_tuple(_137517_l,_137617_r);
}



inline void _11a53f4f0_Eval::_method_slicing_arr(jule::Ref<_11a53f4f0_Data> _140530_d) {
	jule::Ref<_11a3c2e70_TypeKind> _140617_elem_type = _140530_d->_field_kind->_method_arr()->_field_elem->_method_clone();
	_140530_d->_field_kind->_field_kind=jule::new_struct<_11a3c2e70_Slc>(new( std::nothrow ) _11a3c2e70_Slc(_140617_elem_type));
	_140530_d->_field_lvalue=false;
	_140530_d->_field_mutable=_140530_d->_field_mutable || (!(_11a3c2e70_is_mut(_140617_elem_type)));
}



inline void _11a53f4f0_Eval::_method_slicing_slc(jule::Ref<_11a53f4f0_Data> _141630_d) {
	_141630_d->_field_lvalue=false;
}



inline void _11a53f4f0_Eval::_method_slicing_str(jule::Ref<_11a53f4f0_Data> _142030_d,jule::Ref<_11a53f4f0_Data> _142040_l,jule::Ref<_11a53f4f0_Data> _142050_r) {
	_142030_d->_field_lvalue=false;
	_142030_d->_field_mutable=true;
	if ((!(_142030_d->_method_is_const()))) {
		return;
	}
	if ((!(jule::real(_142040_l))) || (!(jule::real(_142050_r)))) {
		jule::drop(_142030_d->_field_constant);
		return;
	}
	if (_142040_l->_method_is_const() && _142050_r->_method_is_const()) {
		jule::I64 _143317_left = _142040_l->_field_constant->_method_as_i64();
		if (_143317_left < 0LL) {
			return;
		}
		jule::Str _143817_s = _142030_d->_field_constant->_method_read_str();
		jule::I64 _143921_right = 0LL;
		if ((!(jule::real(_142050_r)))) {
			_143921_right=static_cast<jule::I64>(_143817_s.len());
		} else {
			_143921_right=static_cast<jule::I64>(_142050_r->_field_constant->_method_as_i64());
		}
		if (_143317_left > _143921_right) {
			return;
		}
		_142030_d->_field_constant->_method_set_str(_143817_s.slice(static_cast<jule::Int>(_143317_left),static_cast<jule::Int>(_143921_right)));
	} else {
		jule::drop(_142030_d->_field_constant);
	}
}



inline void _11a53f4f0_Eval::_method_check_slicing(jule::Ref<_11a53f4f0_Data> _145536_d,jule::Ref<_11a53f4f0_Data> _145546_l,jule::Ref<_11a53f4f0_Data> _145556_r,jule::Ref<_118d9a790_SlicingExpr> _145566_s) {
	{
		if (!((jule::real(_145536_d->_field_kind->_method_arr())))) { goto _case_end_4769311200; }
		_case_begin_4769311200:;
		{
			(*this)._method_slicing_arr(_145536_d);
			return;
		}
		goto _match_end_4769310928;
		_case_end_4769311200:;
		if (!((jule::real(_145536_d->_field_kind->_method_slc())))) { goto _case_end_4769311312; }
		_case_begin_4769311312:;
		{
			(*this)._method_slicing_slc(_145536_d);
			return;
		}
		goto _match_end_4769310928;
		_case_end_4769311312:;
		if (!((jule::real(_145536_d->_field_kind->_method_prim())))) { goto _case_end_4769311424; }
		_case_begin_4769311424:;
		{
			jule::Ref<_11a3c2e70_Prim> _146617_prim = _145536_d->_field_kind->_method_prim();
			{
				if (!((_146617_prim->_method_is_str()))) { goto _case_end_4769321792; }
				_case_begin_4769321792:;
				{
					(*this)._method_slicing_str(_145536_d,_145546_l,_145556_r);
					return;
				}
				goto _match_end_4769321536;
				_case_end_4769321792:;
				_match_end_4769321536:;
			}
		}
		goto _match_end_4769310928;
		_case_end_4769311424:;
		_match_end_4769310928:;
	}
	(*this)._method_push_err(_145566_s->_field_token,jule::Str("not_supports_slicing", 20),jule::Slice<jule::Any>({jule::Any(_145536_d->_field_kind->_method_to_str())}));
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_eval_slicing(jule::Ref<_118d9a790_SlicingExpr> _147736_s) {
	jule::Ref<_11a53f4f0_Data> _147817_d = this->self->_method_eval_expr_kind(_147736_s->_field_expr);
	if ((!(jule::real(_147817_d)))) {
		return jule::new_ref<_11a53f4f0_Data>();
	}
	jule::Ref<_11a53f4f0_Data> _148318_l;
	jule::Ref<_11a53f4f0_Data> _148325_r;
	std::tie(_148318_l,_148325_r) = this->self->_method_eval_slicing_exprs(_147736_s);
	if ((!(jule::real(_148318_l)))) {
		return _147817_d;
	}
	this->self->_method_check_slicing(_147817_d,_148318_l,_148325_r,_147736_s);
	jule::drop(_147817_d->_field_cast_kind);
	jule::Ref<_119748ec0_SlicingExprModel> _149117_model = jule::new_struct<_119748ec0_SlicingExprModel>(new( std::nothrow ) _119748ec0_SlicingExprModel(_147817_d->_field_model,_148318_l->_field_model,jule::Any()));
	if (jule::real(_148325_r)) {
		_149117_model->_field_right=_148325_r->_field_model;
	}
	_147817_d->_field_model=jule::Any(_149117_model);
	return _147817_d;
}



inline void _11a53f4f0_Eval::_method_cast_ptr(jule::Ref<_11a3c2e70_TypeKind> _150427_t,jule::Ref<_11a53f4f0_Data> _150445_d,_11911a8a0_Token _150455_error_token) {
	if ((!((*this)._method_is_unsafe()))) {
		(*this)._method_push_err(_150455_error_token,jule::Str("unsafe_behavior_at_out_of_unsafe_scope", 38),jule::Slice<jule::Any>({}));
		return;
	}
	jule::Ref<_11a3c2e70_Prim> _151013_prim = _150445_d->_field_kind->_method_prim();
	if ((!(jule::real(_150445_d->_field_kind->_method_ptr()))) && ((!(jule::real(_151013_prim))) || (!(_11ab8b300_is_int(_151013_prim->_method_to_str()))))) {
		(*this)._method_push_err(_150455_error_token,jule::Str("type_not_supports_casting_to", 28),jule::Slice<jule::Any>({jule::Any(_150445_d->_field_kind->_method_to_str()),jule::Any(_150427_t->_method_to_str())}));
	}
	jule::drop(_150445_d->_field_constant);
}



inline void _11a53f4f0_Eval::_method_cast_struct(jule::Ref<_11a3c2e70_TypeKind> _151834_t,jule::Ref<_11a53f4f0_Data> _151852_d,_11911a8a0_Token _151862_error_token) {
	jule::Ref<_118e2b060_Trait> _151917_tr = _151852_d->_field_kind->_method_trt();
	if ((!(jule::real(_151917_tr)))) {
		(*this)._method_push_err(_151862_error_token,jule::Str("type_not_supports_casting_to", 28),jule::Slice<jule::Any>({jule::Any(_151852_d->_field_kind->_method_to_str()),jule::Any(_151834_t->_method_to_str())}));
		return;
	}
	jule::Ref<_118bb7d70_StructIns> _152517_s = jule::new_ref<_118bb7d70_StructIns>();
	if (jule::real(_151834_t->_method_ref())) {
		_152517_s=_151834_t->_method_ref()->_field_elem->_method_strct();
	} else {
		_152517_s=_151834_t->_method_strct();
	}
	(*this)._method_push_reference_to_struct(_152517_s->_field_decl);
	if ((!(_152517_s->_field_decl->_method_is_implements(_151917_tr)))) {
		(*this)._method_push_err(_151862_error_token,jule::Str("type_not_supports_casting_to", 28),jule::Slice<jule::Any>({jule::Any(_151852_d->_field_kind->_method_to_str()),jule::Any(_151834_t->_method_to_str())}));
	}
}



inline void _11a53f4f0_Eval::_method_cast_ref(jule::Ref<_11a3c2e70_TypeKind> _153931_t,jule::Ref<_11a53f4f0_Data> _153949_d,_11911a8a0_Token _153959_error_token) {
	jule::Ref<_11a3c2e70_Ref> _154017_ref = _153931_t->_method_ref();
	if (jule::real(_154017_ref->_field_elem->_method_strct())) {
		(*this)._method_cast_struct(_153931_t,_153949_d,_153959_error_token);
		return;
	}
	(*this)._method_push_err(_153959_error_token,jule::Str("type_not_supports_casting_to", 28),jule::Slice<jule::Any>({jule::Any(_153949_d->_field_kind->_method_to_str()),jule::Any(_153931_t->_method_to_str())}));
}



inline void _11a53f4f0_Eval::_method_cast_slc(jule::Ref<_11a3c2e70_TypeKind> _154931_t,jule::Ref<_11a53f4f0_Data> _154949_d,_11911a8a0_Token _154959_error_token) {
	if (jule::real(_154949_d->_field_kind->_method_enm())) {
		if ((!(jule::real(_154949_d->_field_kind->_method_enm()->_field_kind->_field_kind->_method_prim()))) || (!(_154949_d->_field_kind->_method_enm()->_field_kind->_field_kind->_method_prim()->_method_is_str()))) {
			(*this)._method_push_err(_154959_error_token,jule::Str("type_not_supports_casting_to", 28),jule::Slice<jule::Any>({jule::Any(_154949_d->_field_kind->_method_to_str()),jule::Any(_154931_t->_method_to_str())}));
			return;
		}
	} else if ((!(jule::real(_154949_d->_field_kind->_method_prim()))) || (!(_154949_d->_field_kind->_method_prim()->_method_is_str()))) {
		(*this)._method_push_err(_154959_error_token,jule::Str("type_not_supports_casting_to", 28),jule::Slice<jule::Any>({jule::Any(_154949_d->_field_kind->_method_to_str()),jule::Any(_154931_t->_method_to_str())}));
		return;
	}
	_154931_t=_154931_t->_method_slc()->_field_elem;
	jule::Ref<_11a3c2e70_Prim> _156113_prim = _154931_t->_method_prim();
	if ((!(jule::real(_156113_prim))) || ((!(_156113_prim->_method_is_u8())) && (!(_156113_prim->_method_is_i32())))) {
		(*this)._method_push_err(_154959_error_token,jule::Str("type_not_supports_casting_to", 28),jule::Slice<jule::Any>({jule::Any(_154949_d->_field_kind->_method_to_str()),jule::Any(_154931_t->_method_to_str())}));
	}
}



inline void _11a53f4f0_Eval::_method_cast_str(jule::Ref<_11a53f4f0_Data> _156731_d,_11911a8a0_Token _156741_error_token) {
	if (jule::real(_156731_d->_field_kind->_method_enm())) {
		jule::Ref<_11a089b40_Enum> _156921_e = _156731_d->_field_kind->_method_enm();
		if (jule::real(_156921_e->_field_kind->_field_kind->_method_prim()) && _156921_e->_field_kind->_field_kind->_method_prim()->_method_is_str()) {
			return;
		}
	}
	if (jule::real(_156731_d->_field_kind->_method_prim())) {
		jule::Ref<_11a3c2e70_Prim> _157617_prim = _156731_d->_field_kind->_method_prim();
		if ((!(_157617_prim->_method_is_u8())) && (!(_157617_prim->_method_is_i32()))) {
			(*this)._method_push_err(_156741_error_token,jule::Str("type_not_supports_casting_to", 28),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_156731_d->_field_kind->_method_to_str())}));
		}
		return;
	}
	if ((!(jule::real(_156731_d->_field_kind->_method_slc())))) {
		(*this)._method_push_err(_156741_error_token,jule::Str("type_not_supports_casting_to", 28),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_156731_d->_field_kind->_method_to_str())}));
		return;
	}
	jule::Ref<_11a3c2e70_TypeKind> _158817_t = _156731_d->_field_kind->_method_slc()->_field_elem;
	jule::Ref<_11a3c2e70_Prim> _158913_prim = _158817_t->_method_prim();
	if ((!(jule::real(_158913_prim))) || ((!(_158913_prim->_method_is_u8())) && (!(_158913_prim->_method_is_i32())))) {
		(*this)._method_push_err(_156741_error_token,jule::Str("type_not_supports_casting_to", 28),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_156731_d->_field_kind->_method_to_str())}));
	}
}



inline void _11a53f4f0_Eval::_method_cast_int(jule::Ref<_11a3c2e70_TypeKind> _159531_t,jule::Ref<_11a53f4f0_Data> _159549_d,_11911a8a0_Token _159559_error_token) {
	if (_159549_d->_method_is_const()) {
		jule::Ref<_11a3c2e70_Prim> _159717_prim = _159531_t->_method_prim();
		{
			if (!((_11ab8b300_is_sig_int(_159717_prim->_field_kind)))) { goto _case_end_4769459120; }
			_case_begin_4769459120:;
			{
				_159549_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_159549_d->_field_constant->_method_as_i64()));
			}
			goto _match_end_4769458864;
			_case_end_4769459120:;
			if (!((_11ab8b300_is_unsig_int(_159717_prim->_field_kind)))) { goto _case_end_4769459232; }
			_case_begin_4769459232:;
			{
				_159549_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_159549_d->_field_constant->_method_as_u64()));
			}
			goto _match_end_4769458864;
			_case_end_4769459232:;
			_match_end_4769458864:;
		}
	}
	if (jule::real(_159549_d->_field_kind->_method_enm())) {
		jule::Ref<_11a089b40_Enum> _160817_e = _159549_d->_field_kind->_method_enm();
		if (_11ab8b300_is_num(_160817_e->_field_kind->_field_kind->_method_to_str())) {
			return;
		}
	}
	if (jule::real(_159549_d->_field_kind->_method_ptr())) {
		jule::Ref<_11a3c2e70_Prim> _161517_prim = _159531_t->_method_prim();
		if (_161517_prim->_method_is_uintptr()) {
		} else if ((!((*this)._method_is_unsafe()))) {
			(*this)._method_push_err(_159559_error_token,jule::Str("unsafe_behavior_at_out_of_unsafe_scope", 38),jule::Slice<jule::Any>({}));
		} else if (((((!(_161517_prim->_method_is_i32())) && (!(_161517_prim->_method_is_i64()))) && (!(_161517_prim->_method_is_u16()))) && (!(_161517_prim->_method_is_u32()))) && (!(_161517_prim->_method_is_u64()))) {
			(*this)._method_push_err(_159559_error_token,jule::Str("type_not_supports_casting_to", 28),jule::Slice<jule::Any>({jule::Any(_159549_d->_field_kind->_method_to_str()),jule::Any(_159531_t->_method_to_str())}));
		}
		return;
	}
	jule::Ref<_11a3c2e70_Prim> _162613_prim = _159549_d->_field_kind->_method_prim();
	if (jule::real(_162613_prim) && _11ab8b300_is_num(_162613_prim->_method_to_str())) {
		return;
	}
	(*this)._method_push_err(_159559_error_token,jule::Str("type_not_supports_casting_to", 28),jule::Slice<jule::Any>({jule::Any(_159549_d->_field_kind->_method_to_str()),jule::Any(_159531_t->_method_to_str())}));
}



inline void _11a53f4f0_Eval::_method_cast_num(jule::Ref<_11a3c2e70_TypeKind> _163431_t,jule::Ref<_11a53f4f0_Data> _163449_d,_11911a8a0_Token _163459_error_token) {
	if (_163449_d->_method_is_const()) {
		jule::Ref<_11a3c2e70_Prim> _163617_prim = _163431_t->_method_prim();
		{
			if (!((_11ab8b300_is_float(_163617_prim->_field_kind)))) { goto _case_end_4769502864; }
			_case_begin_4769502864:;
			{
				_163449_d->_field_constant->_method_set_f64(static_cast<jule::F64>(_163449_d->_field_constant->_method_as_f64()));
			}
			goto _match_end_4769502544;
			_case_end_4769502864:;
			if (!((_11ab8b300_is_sig_int(_163617_prim->_field_kind)))) { goto _case_end_4769502976; }
			_case_begin_4769502976:;
			{
				_163449_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_163449_d->_field_constant->_method_as_i64()));
			}
			goto _match_end_4769502544;
			_case_end_4769502976:;
			if (!((_11ab8b300_is_unsig_int(_163617_prim->_field_kind)))) { goto _case_end_4769503088; }
			_case_begin_4769503088:;
			{
				_163449_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_163449_d->_field_constant->_method_as_u64()));
			}
			goto _match_end_4769502544;
			_case_end_4769503088:;
			_match_end_4769502544:;
		}
	}
	if (jule::real(_163449_d->_field_kind->_method_enm())) {
		jule::Ref<_11a089b40_Enum> _165017_e = _163449_d->_field_kind->_method_enm();
		if (_11ab8b300_is_num(_165017_e->_field_kind->_field_kind->_method_to_str())) {
			return;
		}
	}
	jule::Ref<_11a3c2e70_Prim> _165613_prim = _163449_d->_field_kind->_method_prim();
	if (jule::real(_165613_prim) && _11ab8b300_is_num(_165613_prim->_method_to_str())) {
		return;
	}
	(*this)._method_push_err(_163459_error_token,jule::Str("type_not_supports_casting_to", 28),jule::Slice<jule::Any>({jule::Any(_163449_d->_field_kind->_method_to_str()),jule::Any(_163431_t->_method_to_str())}));
}



inline void _11a53f4f0_Eval::_method_cast_prim(jule::Ref<_11a3c2e70_TypeKind> _166432_t,jule::Ref<_11a53f4f0_Data> _166450_d,_11911a8a0_Token _166460_error_token) {
	jule::Ref<_11a3c2e70_Prim> _166513_prim = _166432_t->_method_prim();
	{
		if (!((_166513_prim->_method_is_any()))) { goto _case_end_4769531728; }
		goto _match_end_4769529968;
		_case_end_4769531728:;
		if (!((_166513_prim->_method_is_str()))) { goto _case_end_4769531008; }
		_case_begin_4769531008:;
		{
			(*this)._method_cast_str(_166450_d,_166460_error_token);
		}
		goto _match_end_4769529968;
		_case_end_4769531008:;
		if (!((_11ab8b300_is_int(_166513_prim->_method_to_str())))) { goto _case_end_4769530528; }
		_case_begin_4769530528:;
		{
			(*this)._method_cast_int(_166432_t,_166450_d,_166460_error_token);
		}
		goto _match_end_4769529968;
		_case_end_4769530528:;
		if (!((_11ab8b300_is_num(_166513_prim->_method_to_str())))) { goto _case_end_4769530640; }
		_case_begin_4769530640:;
		{
			(*this)._method_cast_num(_166432_t,_166450_d,_166460_error_token);
		}
		goto _match_end_4769529968;
		_case_end_4769530640:;
		_case_begin_4769530224:;
		{
			(*this)._method_push_err(_166460_error_token,jule::Str("type_not_supports_casting", 25),jule::Slice<jule::Any>({jule::Any(_166432_t->_method_to_str())}));
		}
		goto _match_end_4769529968;
		_case_end_4769530224:;
		_match_end_4769529968:;
	}
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_eval_cast_by_type_n_data(jule::Ref<_11a3c2e70_TypeKind> _168447_t,jule::Ref<_11a53f4f0_Data> _168465_d,_11911a8a0_Token _168475_error_token) {
	{
		if (!((jule::real(_168465_d->_field_kind->_method_prim()) && _168465_d->_field_kind->_method_prim()->_method_is_any()))) { goto _case_end_4769548160; }
		goto _match_end_4769546416;
		_case_end_4769548160:;
		if (!((jule::real(_168447_t->_method_ptr())))) { goto _case_end_4769550544; }
		_case_begin_4769550544:;
		{
			(*this)._method_cast_ptr(_168447_t,_168465_d,_168475_error_token);
		}
		goto _match_end_4769546416;
		_case_end_4769550544:;
		if (!((jule::real(_168447_t->_method_ref())))) { goto _case_end_4769550656; }
		_case_begin_4769550656:;
		{
			(*this)._method_cast_ref(_168447_t,_168465_d,_168475_error_token);
		}
		goto _match_end_4769546416;
		_case_end_4769550656:;
		if (!((jule::real(_168447_t->_method_slc())))) { goto _case_end_4769546912; }
		_case_begin_4769546912:;
		{
			(*this)._method_cast_slc(_168447_t,_168465_d,_168475_error_token);
		}
		goto _match_end_4769546416;
		_case_end_4769546912:;
		if (!((jule::real(_168447_t->_method_strct())))) { goto _case_end_4769547024; }
		_case_begin_4769547024:;
		{
			(*this)._method_cast_struct(_168447_t,_168465_d,_168475_error_token);
		}
		goto _match_end_4769546416;
		_case_end_4769547024:;
		if (!((jule::real(_168447_t->_method_prim())))) { goto _case_end_4769547136; }
		_case_begin_4769547136:;
		{
			(*this)._method_cast_prim(_168447_t,_168465_d,_168475_error_token);
		}
		goto _match_end_4769546416;
		_case_end_4769547136:;
		_case_begin_4769546608:;
		{
			(*this)._method_push_err(_168475_error_token,jule::Str("type_not_supports_casting", 25),jule::Slice<jule::Any>({jule::Any(_168447_t->_method_to_str())}));
			jule::drop(_168465_d);
		}
		goto _match_end_4769546416;
		_case_end_4769546608:;
		_match_end_4769546416:;
	}
	if ((!(jule::real(_168465_d)))) {
		return jule::new_ref<_11a53f4f0_Data>();
	}
	_168465_d->_field_mutable=_168465_d->_field_mutable || ((!(_11a3c2e70_is_mut(_168465_d->_field_kind))) && _11a3c2e70_is_mut(_168447_t));
	_168465_d->_field_lvalue=_11a3c2e70_is_lvalue(_168447_t);
	_168465_d->_field_decl=false;
	if (jule::real(_168447_t->_method_prim()) && _168465_d->_method_is_const()) {
		_168465_d->_field_model=jule::Any(_168465_d->_field_constant);
	}
	if ((!(jule::real(_168465_d->_field_kind->_method_enm()))) || (_168465_d->_field_kind->_method_enm()->_field_kind->_field_kind->_method_to_str() != _168447_t->_method_to_str())) {
		_168465_d->_field_cast_kind=_168447_t;
	} else {
		_168465_d->_field_kind=_168447_t;
	}
	return _168465_d;
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_eval_cast(jule::Ref<_118d9a790_CastExpr> _173333_c) {
	jule::Ref<_11a3c2e70_TypeSymbol> _173417_t = _13feceeb0_build_type(_173333_c->_field_kind);
	jule::Bool _173513_ok = this->self->_field_s->_method_check_type(_173417_t,this->self->_field_lookup);
	if ((!(_173513_ok))) {
		return jule::new_ref<_11a53f4f0_Data>();
	}
	jule::Ref<_11a3c2e70_TypeKind> _174017_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_174017_prefix;
	});
	jule::Ref<_11a53f4f0_Data> _174417_d = this->self->_method_eval_expr_kind(_173333_c->_field_expr);
	if ((!(jule::real(_174417_d)))) {
		return jule::new_ref<_11a53f4f0_Data>();
	}
	_174417_d=this->self->_method_eval_cast_by_type_n_data(_173417_t->_field_kind,_174417_d,_173333_c->_field_kind->_field_token);
	return _174417_d;
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_eval_ns_selection(jule::Ref<_118d9a790_NsSelectionExpr> _175436_s) {
	jule::Str _175513_path = _11a3c2e70_build_link_path_by_tokens(_175436_s->_field_ns);
	jule::Ref<_11a0945e0_ImportInfo> _175617_imp = (*this)._field_lookup.get()._method_select_package(jule::Fn<jule::Bool(jule::Ref<_11a0945e0_ImportInfo>)>([=](jule::Ref<_11a0945e0_ImportInfo> _175653_p) mutable -> jule::Bool {
		return _175653_p->_field_link_path == _175513_path;
	}));
	if ((!(jule::real(_175617_imp))) || (!(_175617_imp->_method_is_lookupable(jule::Str("self", 4))))) {
		(*this)._method_push_err(_175436_s->_field_ident,jule::Str("namespace_not_exist", 19),jule::Slice<jule::Any>({jule::Any(_175513_path)}));
		return jule::new_ref<_11a53f4f0_Data>();
	}
	jule::Trait<_11aa76f70_Lookup> _176517_lookup = (*this)._field_lookup;
	(*this)._field_lookup=_175617_imp;
	
	jule::Any _176917_def = (*this)._method_get_def(_175436_s->_field_ident._field_kind,false);
	(*this)._field_lookup=_176517_lookup;
	jule::Ref<_11a53f4f0_Data> _177217_d = (*this)._method_eval_def(_176917_def,_175436_s->_field_ident);
	return _177217_d;
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_eval_struct_lit_explicit(jule::Ref<_118bb7d70_StructIns> _177748_s,jule::Slice<jule::Any> _177767_exprs,_11911a8a0_Token _177786_error_token) {
	jule::Bool _177813_ok = this->self->_field_s->_method_check_generic_quantity(static_cast<jule::I64>(_177748_s->_field_decl->_field_generics.len()),static_cast<jule::I64>(_177748_s->_field_generics.len()),_177786_error_token);
	if ((!(_177813_ok))) {
		return jule::new_ref<_11a53f4f0_Data>();
	}
	this->self->_method_push_reference_to_struct(_177748_s->_field_decl);
	_11a21f8a0_StructLitChecker _178617_slc = _11a21f8a0_StructLitChecker(this->self,_177786_error_token,_177748_s,jule::Slice<jule::Ref<_119748ec0_StructArgExprModel>>());
	_178617_slc._method_check(_177767_exprs);
	return jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_177748_s)),jule::Ref<_11a3c2e70_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_119748ec0_StructLitExprModel>(new( std::nothrow ) _119748ec0_StructLitExprModel(_177748_s,_178617_slc._field_args))),jule::Bool(),jule::Ref<_11ab854f0_Const>()));
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_eval_struct_lit(jule::Ref<_118d9a790_StructLit> _180339_lit) {
	jule::Ref<_11a3c2e70_TypeSymbol> _180417_t = _13feceeb0_build_type(_180339_lit->_field_kind);
	jule::Bool _180513_ok = this->self->_field_s->_method_check_type(_180417_t,this->self->_field_lookup);
	if ((!(_180513_ok))) {
		return jule::new_ref<_11a53f4f0_Data>();
	}
	jule::Ref<_118bb7d70_StructIns> _181017_s = _180417_t->_field_kind->_method_strct();
	if ((!(jule::real(_181017_s)))) {
		this->self->_method_push_err(_180339_lit->_field_kind->_field_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_11a53f4f0_Data>();
	}
	return this->self->_method_eval_struct_lit_explicit(_181017_s,_180339_lit->_field_exprs,_180339_lit->_field_kind->_field_token);
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_eval_type(jule::Ref<_118d9a790_TypeDecl> _181932_t) {
	jule::Ref<_11a3c2e70_TypeSymbol> _182017_tk = _13feceeb0_build_type(_181932_t);
	jule::Bool _182113_ok = (*this)._field_s->_method_check_type(_182017_tk,(*this)._field_lookup);
	if ((!(_182113_ok))) {
		return jule::new_ref<_11a53f4f0_Data>();
	}
	return jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(_182017_tk->_field_kind,jule::Ref<_11a3c2e70_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_182017_tk->_field_kind),true,jule::Ref<_11ab854f0_Const>()));
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_call_type_fn(jule::Ref<_118d9a790_FnCallExpr> _183336_fc,jule::Ref<_11a53f4f0_Data> _183357_d) {
	if (_183336_fc->_field_generics.len() > 0LL) {
		this->self->_method_push_err(_183336_fc->_field_token,jule::Str("type_not_supports_generics", 26),jule::Slice<jule::Any>({jule::Any(_183357_d->_field_kind->_method_to_str())}));
	} else if (_183336_fc->_field_args.len() < 1LL) {
		this->self->_method_push_err(_183336_fc->_field_token,jule::Str("missing_expr_for", 16),jule::Slice<jule::Any>({jule::Any(jule::Str("v", 1))}));
	} else if (_183336_fc->_field_args.len() > 1LL) {
		this->self->_method_push_err(_183336_fc->_field_args[static_cast<jule::Int>(1LL)]->_field_token,jule::Str("argument_overflow", 17),jule::Slice<jule::Any>({}));
	}
	if (_183336_fc->_field_args.len() > 0LL) {
		jule::Ref<_11a53f4f0_Data> _184321_arg = this->self->_method_eval_expr_kind(_183336_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_kind);
		if (jule::real(_184321_arg)) {
			_183357_d=this->self->_method_eval_cast_by_type_n_data(_183357_d->_field_kind,_184321_arg,_183336_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_token);
		}
	}
	_183357_d->_field_decl=false;
	return _183357_d;
}



inline std::tuple<jule::Bool,jule::Bool> _11a53f4f0_Eval::_method_check_fn_call_generics(jule::Ref<_119099250_FnIns> _185445_f,jule::Ref<_118d9a790_FnCallExpr> _185513_fc) {
	jule::Bool _185542_dynamic_annotation = jule::Bool();
	jule::Bool _185532_ok = jule::Bool();
	{
		if (!((((_185445_f->_field_decl->_field_generics.len() > 0LL) && (_185513_fc->_field_generics.len() == 0LL)) && (_185445_f->_field_params.len() > 0LL)))) { goto _case_end_4769695776; }
		_case_begin_4769695776:;
		{
			_185542_dynamic_annotation=true;
			_185445_f->_field_generics=jule::Slice<jule::Ref<_11a3c2e70_TypeKind>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_185445_f->_field_decl->_field_generics.len())));
			_185532_ok = true;
			_185542_dynamic_annotation = true;
			return std::make_tuple(_185532_ok,_185542_dynamic_annotation);
		}
		goto _match_end_4769685984;
		_case_end_4769695776:;
		if (!(((!((*this)._field_s->_method_check_generic_quantity(static_cast<jule::I64>(_185445_f->_field_decl->_field_generics.len()),static_cast<jule::I64>(_185513_fc->_field_generics.len()),_185513_fc->_field_token)))))) { goto _case_end_4769700640; }
		_case_begin_4769700640:;
		{
			_185532_ok = false;
			_185542_dynamic_annotation = false;
			return std::make_tuple(_185532_ok,_185542_dynamic_annotation);
		}
		goto _match_end_4769685984;
		_case_end_4769700640:;
		_case_begin_4769686192:;
		{
			_185445_f->_field_generics=jule::Slice<jule::Ref<_11a3c2e70_TypeKind>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_185445_f->_field_decl->_field_generics.len())));
			{
				auto &__julec_range_expr = _185513_fc->_field_generics;
				if (__julec_range_expr.begin() != __julec_range_expr.end()) {
					auto __julec_range_begin = __julec_range_expr.begin();
					const auto __julec_range_end = __julec_range_expr.end();
					jule::Int _11a53f4f0_i = 0;
					jule::Ref<_118d9a790_TypeDecl> _11a53f4f0_g = *__julec_range_begin;
					_iter_begin_4769687792:;
					{
						jule::Ref<_11a3c2e70_TypeSymbol> _187025_k = _13feceeb0_build_type(_11a53f4f0_g);
						jule::Bool _187121_ok = (*this)._field_s->_method_check_type(_187025_k,(*this)._field_lookup);
						if ((!(_187121_ok))) {
							_185532_ok = false;
							_185542_dynamic_annotation = false;
							return std::make_tuple(_185532_ok,_185542_dynamic_annotation);
						}
						_185445_f->_field_generics[static_cast<jule::Int>(_11a53f4f0_i)]=_187025_k->_field_kind;
					}
					_iter_next_4769687792:;
					++__julec_range_begin;
					if (__julec_range_begin != __julec_range_end) { ++_11a53f4f0_i; _11a53f4f0_g = *__julec_range_begin; goto _iter_begin_4769687792; }
					_iter_end_4769687792:;
				}
			}
			_185532_ok = true;
			_185542_dynamic_annotation = false;
			return std::make_tuple(_185532_ok,_185542_dynamic_annotation);
		}
		goto _match_end_4769685984;
		_case_end_4769686192:;
		_match_end_4769685984:;
	}
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_call_builtin_fn(jule::Ref<_118d9a790_FnCallExpr> _188239_fc,jule::Ref<_11a53f4f0_Data> _188260_d) {
	jule::Ref<_119099250_FnIns> _188317_f = _188260_d->_field_kind->_method_fnc();
	_188260_d=_188317_f->_field_caller(this->self,_188239_fc,_188260_d);
	if ((!(jule::real(_188260_d)))) {
		return jule::new_ref<_11a53f4f0_Data>();
	}
	_188260_d->_field_mutable=true;
	return _188260_d;
}



inline void _11a53f4f0_Eval::_method_check_fn_of_concurrent_call(jule::Ref<_119099250_FnIns>& _189447_f,_11911a8a0_Token _189458_error_token) {
	if ((*this)._method_is_unsafe()) {
		return;
	}
	{
		auto &__julec_range_expr = _189447_f->_field_params;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_119099250_ParamIns> _11a53f4f0_p = *__julec_range_begin;
			_iter_begin_4769727952:;
			{
				if (_11a53f4f0_p->_field_decl->_field_reference) {
					(*this)._method_push_err(_189458_error_token,jule::Str("concurrent_call_with_reference_parameter", 40),jule::Slice<jule::Any>({}));
					return;
				}
			}
			_iter_next_4769727952:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a53f4f0_p = *__julec_range_begin; goto _iter_begin_4769727952; }
			_iter_end_4769727952:;
		}
	}
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_call_fn(jule::Ref<_118d9a790_FnCallExpr> _190731_fc,jule::Ref<_11a53f4f0_Data> _190752_d) {
	jule::Ref<_119099250_FnIns> _190817_f = _190752_d->_field_kind->_method_fnc();
	if (_190817_f->_method_is_builtin()) {
		return this->self->_method_call_builtin_fn(_190731_fc,_190752_d);
	}
	if (_190731_fc->_field_concurrent) {
		this->self->_method_check_fn_of_concurrent_call(_190817_f,_190731_fc->_field_token);
	}
	if ((((!(_190752_d->_field_mutable)) && _190817_f->_field_decl->_method_is_method()) && (!(_190817_f->_field_decl->_field_statically))) && _190817_f->_field_decl->_field_params[static_cast<jule::Int>(0LL)]->_field_mutable) {
		this->self->_method_push_err(_190731_fc->_field_token,jule::Str("mutable_operation_on_immutable", 30),jule::Slice<jule::Any>({}));
	} else if ((!(this->self->_method_is_unsafe())) && _190817_f->_field_decl->_field_unsafety) {
		this->self->_method_push_err(_190731_fc->_field_token,jule::Str("unsafe_behavior_at_out_of_unsafe_scope", 38),jule::Slice<jule::Any>({}));
	}
	jule::Bool _192318_ok;
	jule::Bool _192322_dynamic_annotation;
	std::tie(_192318_ok,_192322_dynamic_annotation) = this->self->_method_check_fn_call_generics(_190817_f,_190731_fc);
	if ((!(_192318_ok))) {
		return jule::new_ref<_11a53f4f0_Data>();
	}
	jule::Ref<_11a096220_Sema> _192817_old = this->self->_field_s;
	if (jule::real(_190817_f->_field_decl->_field_owner)) {
		this->self->_field_s=_190817_f->_field_decl->_field_owner->_field_sema;
	}
	__JULE_DEFER({
		if ((_192817_old).alloc != (this->self->_field_s).alloc) {
			_192817_old->_field_errors=append(_192817_old->_field_errors,this->self->_field_s->_field_errors);
		}
		this->self->_field_s=_192817_old;
	});
	if ((!(_192322_dynamic_annotation))) {
		if ((!(_190817_f->_field_reloaded))) {
			jule::Bool _194221_ok = this->self->_field_s->_method_reload_fn_ins_types(_190817_f);
			if ((!(_194221_ok))) {
				return jule::new_ref<_11a53f4f0_Data>();
			}
			_190817_f->_field_reloaded=true;
		}
	} else {
		this->self->_field_s->_method_build_fn_non_generic_type_kinds(_190817_f);
	}
	_11a21f8a0_FnCallArgChecker _195217_fcac = _11a21f8a0_FnCallArgChecker(this->self,_190731_fc->_field_args,_190731_fc->_field_token,_190817_f,_192322_dynamic_annotation,jule::Slice<jule::Any>());
	if (jule::real(_190817_f->_field_decl->_field_owner)) {
		std::tie(_192817_old,this->self->_field_s) = std::make_tuple(this->self->_field_s,_192817_old);
		_192318_ok=_195217_fcac._method_check();
		std::tie(_192817_old,this->self->_field_s) = std::make_tuple(this->self->_field_s,_192817_old);
	} else {
		_192318_ok=_195217_fcac._method_check();
	}
	if ((!(_192318_ok)) && _192322_dynamic_annotation) {
		return jule::new_ref<_11a53f4f0_Data>();
	}
	jule::Bool _197114_is_unique_ins;
	jule::Int _197129_pos;
	std::tie(_197114_is_unique_ins,_197129_pos) = _190817_f->_field_decl->_method_append_instance(_190817_f);
	if ((!(_197114_is_unique_ins))) {
		_190817_f=_190817_f->_field_decl->_field_instances[static_cast<jule::Int>(_197129_pos)];
	}
	jule::Any _197617_call_model = _190752_d->_field_model;
	if (_190817_f->_field_decl->_method_is_void()) {
		_190752_d=_11a53f4f0_build_void_data();
	} else {
		if (_192322_dynamic_annotation) {
			_192318_ok=this->self->_field_s->_method_reload_fn_ins_types(_190817_f);
			if ((!(_192318_ok))) {
				return jule::new_ref<_11a53f4f0_Data>();
			}
			_190817_f->_field_reloaded=true;
		}
		_190752_d->_field_kind=_190817_f->_field_result;
		_190752_d->_field_lvalue=_11a3c2e70_is_lvalue(_190817_f->_field_result);
	}
	_190752_d->_field_mutable=true;
	_190752_d->_field_model=jule::Any(jule::new_struct<_119748ec0_FnCallExprModel>(new( std::nothrow ) _119748ec0_FnCallExprModel(_190817_f,_190731_fc->_field_concurrent,_197617_call_model,_195217_fcac._field_arg_models)));
	if ((_190817_f->_field_generics.len() > 0LL) && _197114_is_unique_ins) {
		this->self->_field_s->_method_check_fn_ins(_190817_f);
	}
	return _190752_d;
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_eval_fn_call(jule::Ref<_118d9a790_FnCallExpr> _200936_fc) {
	jule::Ref<_11a3c2e70_TypeKind> _201017_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_201017_prefix;
	});
	jule::Ref<_11a53f4f0_Data> _201417_d = this->self->_method_eval_expr_kind(_200936_fc->_field_expr->_field_kind);
	if ((!(jule::real(_201417_d)))) {
		return jule::new_ref<_11a53f4f0_Data>();
	}
	if (_201417_d->_field_decl) {
		return this->self->_method_call_type_fn(_200936_fc,_201417_d);
	}
	if ((!(jule::real(_201417_d->_field_kind->_method_fnc())))) {
		this->self->_method_push_err(_200936_fc->_field_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_11a53f4f0_Data>();
	}
	return this->self->_method_call_fn(_200936_fc,_201417_d);
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_eval_enum_static(jule::Ref<_11a089b40_Enum> _203139_enm,_11911a8a0_Token _203151_ident) {
	jule::Ref<_11a53f4f0_Data> _203217_d = jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_203139_enm)),jule::Ref<_11a3c2e70_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),false,jule::Ref<_11ab854f0_Const>()));
	jule::Ref<_11a089b40_EnumItem> _203917_item = _203139_enm->_method_find_item(_203151_ident._field_kind);
	if ((!(jule::real(_203917_item)))) {
		(*this)._method_push_err(_203151_ident,jule::Str("obj_have_not_ident", 18),jule::Slice<jule::Any>({jule::Any(_203151_ident._field_kind)}));
	} else {
		_203217_d->_field_constant=jule::new_ref<_11ab854f0_Const>(_203917_item->_field_value->_field_data->_field_constant.get());
		_203217_d->_field_model=jule::Any(_203217_d->_field_constant);
	}
	return _203217_d;
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_eval_struct_static(jule::Ref<_118bb7d70_StructIns> _205041_s,_11911a8a0_Token _205056_ident) {
	
	jule::Ref<_119099250_Fn> _205217_method = _205041_s->_method_find_method(_205056_ident._field_kind,true);
	if ((!(jule::real(_205217_method)))) {
		(*this)._method_push_err(_205056_ident,jule::Str("obj_have_not_ident", 18),jule::Slice<jule::Any>({jule::Any(_205056_ident._field_kind)}));
	}
	jule::Ref<_11a53f4f0_Data> _205717_d = jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::Ref<_11a3c2e70_TypeKind>(),jule::Ref<_11a3c2e70_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),false,jule::Ref<_11ab854f0_Const>()));
	(*this)._method_push_reference_to_fn(_205217_method);
	jule::Ref<_119099250_FnIns> _206517_ins = _205217_method->_method_instance();
	_206517_ins->_field_owner=_205041_s;
	_205717_d->_field_model=jule::Any(jule::new_struct<_119748ec0_StructStaticIdentExprModel>(new( std::nothrow ) _119748ec0_StructStaticIdentExprModel(_205041_s,_205717_d->_field_model,_206517_ins)));
	_205717_d->_field_kind=jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_206517_ins));
	return _205717_d;
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_eval_trait_sub_ident(jule::Ref<_11a53f4f0_Data> _207739_d,jule::Ref<_118e2b060_Trait> _207753_trt,_11911a8a0_Token _207766_ident) {
	jule::Ref<_119099250_Fn> _207817_f = _207753_trt->_method_find_method(_207766_ident._field_kind);
	if ((!(jule::real(_207817_f)))) {
		(*this)._method_push_err(_207766_ident,jule::Str("obj_have_not_ident", 18),jule::Slice<jule::Any>({jule::Any(_207766_ident._field_kind)}));
		return jule::new_ref<_11a53f4f0_Data>();
	}
	jule::Any _208417_model = jule::Any(nullptr);
	if ((_207753_trt).alloc == (_11aa913b0_BUILTIN_TRAIT_ERROR).alloc) {
		_208417_model=jule::Any(jule::new_struct<_119748ec0_BuiltinErrorTraitSubIdentExprModel>(new( std::nothrow ) _119748ec0_BuiltinErrorTraitSubIdentExprModel(_207739_d->_field_model,_207766_ident._field_kind)));
	} else {
		_208417_model=jule::Any(jule::new_struct<_119748ec0_TraitSubIdentExprModel>(new( std::nothrow ) _119748ec0_TraitSubIdentExprModel(_207739_d->_field_model,_207766_ident._field_kind)));
	}
	return jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_207817_f->_method_instance())),jule::Ref<_11a3c2e70_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),_208417_model,false,jule::Ref<_11ab854f0_Const>()));
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_eval_struct_sub_ident(jule::Ref<_11a53f4f0_Data> _210644_d,jule::Ref<_118bb7d70_StructIns> _210658_s,jule::Ref<_118d9a790_SubIdentExpr> _210673_si,jule::Bool _210692_ref) {
	jule::Ref<_118bb7d70_FieldIns> _210717_f = _210658_s->_method_find_field(_210673_si->_field_ident._field_kind);
	if (jule::real(_210717_f)) {
		if ((!((*this)._field_s->_method_is_accessible_define(_210717_f->_field_decl->_field_public,_210717_f->_field_decl->_field_token)))) {
			(*this)._method_push_err(_210673_si->_field_ident,jule::Str("ident_is_not_accessible", 23),jule::Slice<jule::Any>({jule::Any(_210717_f->_field_decl->_field_ident)}));
		}
		jule::Ref<_119748ec0_StructSubIdentExprModel> _211321_model = jule::new_struct<_119748ec0_StructSubIdentExprModel>(new( std::nothrow ) _119748ec0_StructSubIdentExprModel(_210644_d->_field_model,_210644_d->_field_kind,jule::Ref<_119099250_FnIns>(),_210717_f));
		_210644_d->_field_model=jule::Any(_211321_model);
		_210644_d->_field_kind=_210717_f->_field_kind->_method_clone();
		if (_210717_f->_field_decl->_field_mutable && (!(_210644_d->_field_mutable))) {
			{
				auto &_match_expr{ (*this)._field_lookup };
				if (!(_match_expr.type_is<jule::Ref<_11a093930_ScopeChecker>>())) { goto _case_end_4769886192; }
				_case_begin_4769886192:;
				{
					jule::Ref<_11a093930_ScopeChecker> _212525_scope = (*this)._field_lookup.operator jule::Ref<_11a093930_ScopeChecker>();
					_210644_d->_field_mutable=jule::real(_212525_scope->_field_owner) && ((_212525_scope->_field_owner->_field_owner).alloc == (_210658_s).alloc);
					if (_210644_d->_field_mutable) {
						jule::Ref<_11a245f20_Var> _212833_field = _211321_model->_field_expr.operator jule::Ref<_11a245f20_Var>();
						jule::Ref<_11a245f20_Var> _212933_v = jule::new_struct<_11a245f20_Var>(new( std::nothrow ) _11a245f20_Var(_212833_field->_field_scope,_212833_field->_field_token,_212833_field->_field_ident,_212833_field->_field_cpp_linked,_212833_field->_field_constant,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Str(),_212833_field->_field_kind,_212833_field->_field_value,jule::Ref<_13feceeb0_ReferenceStack>(),jule::Slice<jule::Ref<_11a245f20_Var>>()));
						_212933_v->_field_mutable=true;
						_211321_model->_field_expr=jule::Any(_212933_v);
					}
				}
				goto _match_end_4769883872;
				_case_end_4769886192:;
				_match_end_4769883872:;
			}
		}
		return _210644_d;
	}
	
	jule::Ref<_119099250_Fn> _214817_m = _210658_s->_method_find_method(_210673_si->_field_ident._field_kind,false);
	if ((!(jule::real(_214817_m)))) {
		(*this)._method_push_err(_210673_si->_field_ident,jule::Str("obj_have_not_ident", 18),jule::Slice<jule::Any>({jule::Any(_210673_si->_field_ident._field_kind)}));
		return jule::new_ref<_11a53f4f0_Data>();
	}
	if (_214817_m->_field_params[static_cast<jule::Int>(0LL)]->_method_is_ref() && (!(_210692_ref))) {
		(*this)._method_push_err(_210673_si->_field_ident,jule::Str("ref_method_used_with_not_ref_instance", 37),jule::Slice<jule::Any>({}));
	}
	(*this)._method_push_reference_to_fn(_214817_m);
	jule::Ref<_119099250_FnIns> _216017_ins = _214817_m->_method_instance();
	_216017_ins->_field_owner=_210658_s;
	_210644_d->_field_model=jule::Any(jule::new_struct<_119748ec0_StructSubIdentExprModel>(new( std::nothrow ) _119748ec0_StructSubIdentExprModel(_210644_d->_field_model,_210644_d->_field_kind,_216017_ins,jule::Ref<_118bb7d70_FieldIns>())));
	_210644_d->_field_kind=jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_216017_ins));
	return _210644_d;
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_eval_slice_sub_ident(jule::Ref<_11a53f4f0_Data> _217143_d,_11911a8a0_Token _217153_ident) {
	{
		auto &_match_expr{ _217153_ident._field_kind };
		if (!((jule::Str("len", 3)) == _match_expr)) { goto _case_end_4769922928; }
		_case_begin_4769922928:;
		{
			return jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_11a3c2e70_build_prim_type(jule::Str("i64", 3)))),jule::Ref<_11a3c2e70_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_119748ec0_CommonSubIdentExprModel>(new( std::nothrow ) _119748ec0_CommonSubIdentExprModel(_217143_d->_field_kind,_217143_d->_field_model,jule::Str("len()", 5)))),jule::Bool(),jule::Ref<_11ab854f0_Const>()));
		}
		goto _match_end_4769920592;
		_case_end_4769922928:;
		if (!((jule::Str("cap", 3)) == _match_expr)) { goto _case_end_4769925840; }
		_case_begin_4769925840:;
		{
			return jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_11a3c2e70_build_prim_type(jule::Str("i64", 3)))),jule::Ref<_11a3c2e70_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_119748ec0_CommonSubIdentExprModel>(new( std::nothrow ) _119748ec0_CommonSubIdentExprModel(_217143_d->_field_kind,_217143_d->_field_model,jule::Str("cap()", 5)))),jule::Bool(),jule::Ref<_11ab854f0_Const>()));
		}
		goto _match_end_4769920592;
		_case_end_4769925840:;
		_case_begin_4769921344:;
		{
			(*this)._method_push_err(_217153_ident,jule::Str("obj_have_not_ident", 18),jule::Slice<jule::Any>({jule::Any(_217153_ident._field_kind)}));
			return jule::new_ref<_11a53f4f0_Data>();
		}
		goto _match_end_4769920592;
		_case_end_4769921344:;
		_match_end_4769920592:;
	}
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_eval_array_sub_ident(jule::Ref<_11a53f4f0_Data> _220143_d,_11911a8a0_Token _220153_ident) {
	{
		auto &_match_expr{ _220153_ident._field_kind };
		if (!((jule::Str("len", 3)) == _match_expr)) { goto _case_end_4769938304; }
		_case_begin_4769938304:;
		{
			jule::Ref<_11ab854f0_Const> _220421_c = _11ab854f0_new_i64(static_cast<jule::I64>(_220143_d->_field_kind->_method_arr()->_field_n));
			return jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_11a3c2e70_build_prim_type(jule::Str("i64", 3)))),jule::Ref<_11a3c2e70_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_220421_c),jule::Bool(),_220421_c));
		}
		goto _match_end_4769935968;
		_case_end_4769938304:;
		_case_begin_4769936720:;
		{
			(*this)._method_push_err(_220153_ident,jule::Str("obj_have_not_ident", 18),jule::Slice<jule::Any>({jule::Any(_220153_ident._field_kind)}));
			return jule::new_ref<_11a53f4f0_Data>();
		}
		goto _match_end_4769935968;
		_case_end_4769936720:;
		_match_end_4769935968:;
	}
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_eval_map_sub_ident(jule::Ref<_11a53f4f0_Data> _221841_d,_11911a8a0_Token _221851_ident) {
	{
		auto &_match_expr{ _221851_ident._field_kind };
		if (!((jule::Str("len", 3)) == _match_expr)) { goto _case_end_4769954304; }
		_case_begin_4769954304:;
		{
			return jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_11a3c2e70_build_prim_type(jule::Str("i64", 3)))),jule::Ref<_11a3c2e70_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_119748ec0_CommonSubIdentExprModel>(new( std::nothrow ) _119748ec0_CommonSubIdentExprModel(_221841_d->_field_kind,_221841_d->_field_model,jule::Str("len()", 5)))),jule::Bool(),jule::Ref<_11ab854f0_Const>()));
		}
		goto _match_end_4769949056;
		_case_end_4769954304:;
		if (!((jule::Str("clear", 5)) == _match_expr)) { goto _case_end_4769954416; }
		_case_begin_4769954416:;
		{
			return jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),jule::new_struct<_119099250_FnIns>(new( std::nothrow ) _119099250_FnIns(jule::Ref<_118bb7d70_StructIns>(),jule::Ref<_119099250_Fn>(),jule::Slice<jule::Ref<_11a3c2e70_TypeKind>>(),jule::Slice<jule::Ref<_119099250_ParamIns>>(),jule::Ref<_11a3c2e70_TypeKind>(),jule::Ref<_11a093930_Scope>(),_11aa913b0_builtin_caller_common_mut,jule::Bool(),jule::Bool())))),jule::Ref<_11a3c2e70_TypeKind>(),_221841_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_119748ec0_CommonSubIdentExprModel>(new( std::nothrow ) _119748ec0_CommonSubIdentExprModel(_221841_d->_field_kind,_221841_d->_field_model,jule::Str("clear", 5)))),jule::Bool(),jule::Ref<_11ab854f0_Const>()));
		}
		goto _match_end_4769949056;
		_case_end_4769954416:;
		if (!((jule::Str("keys", 4)) == _match_expr)) { goto _case_end_4769954048; }
		_case_begin_4769954048:;
		{
			jule::Ref<_11a3c2e70_Map> _224721_m = _221841_d->_field_kind->_method_map();
			return jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),jule::new_struct<_119099250_FnIns>(new( std::nothrow ) _119099250_FnIns(jule::Ref<_118bb7d70_StructIns>(),jule::Ref<_119099250_Fn>(),jule::Slice<jule::Ref<_11a3c2e70_TypeKind>>(),jule::Slice<jule::Ref<_119099250_ParamIns>>(),jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),jule::new_struct<_11a3c2e70_Slc>(new( std::nothrow ) _11a3c2e70_Slc(_224721_m->_field_key)))),jule::Ref<_11a093930_Scope>(),_11aa913b0_builtin_caller_common_mut,jule::Bool(),jule::Bool())))),jule::Ref<_11a3c2e70_TypeKind>(),_221841_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_119748ec0_CommonSubIdentExprModel>(new( std::nothrow ) _119748ec0_CommonSubIdentExprModel(_221841_d->_field_kind,_221841_d->_field_model,jule::Str("keys", 4)))),jule::Bool(),jule::Ref<_11ab854f0_Const>()));
		}
		goto _match_end_4769949056;
		_case_end_4769954048:;
		if (!((jule::Str("values", 6)) == _match_expr)) { goto _case_end_4769954160; }
		_case_begin_4769954160:;
		{
			jule::Ref<_11a3c2e70_Map> _226821_m = _221841_d->_field_kind->_method_map();
			return jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),jule::new_struct<_119099250_FnIns>(new( std::nothrow ) _119099250_FnIns(jule::Ref<_118bb7d70_StructIns>(),jule::Ref<_119099250_Fn>(),jule::Slice<jule::Ref<_11a3c2e70_TypeKind>>(),jule::Slice<jule::Ref<_119099250_ParamIns>>(),jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),jule::new_struct<_11a3c2e70_Slc>(new( std::nothrow ) _11a3c2e70_Slc(_226821_m->_field_val)))),jule::Ref<_11a093930_Scope>(),_11aa913b0_builtin_caller_common_mut,jule::Bool(),jule::Bool())))),jule::Ref<_11a3c2e70_TypeKind>(),_221841_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_119748ec0_CommonSubIdentExprModel>(new( std::nothrow ) _119748ec0_CommonSubIdentExprModel(_221841_d->_field_kind,_221841_d->_field_model,jule::Str("values", 6)))),jule::Bool(),jule::Ref<_11ab854f0_Const>()));
		}
		goto _match_end_4769949056;
		_case_end_4769954160:;
		if (!((jule::Str("has", 3)) == _match_expr)) { goto _case_end_4769954624; }
		_case_begin_4769954624:;
		{
			jule::Ref<_11a3c2e70_Map> _228921_m = _221841_d->_field_kind->_method_map();
			return jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),jule::new_struct<_119099250_FnIns>(new( std::nothrow ) _119099250_FnIns(jule::Ref<_118bb7d70_StructIns>(),jule::Ref<_119099250_Fn>(),jule::Slice<jule::Ref<_11a3c2e70_TypeKind>>(),jule::Slice<jule::Ref<_119099250_ParamIns>>({jule::new_struct<_119099250_ParamIns>(new( std::nothrow ) _119099250_ParamIns(jule::new_struct<_119099250_Param>(new( std::nothrow ) _119099250_Param(_11911a8a0_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_11a3c2e70_TypeSymbol>(),jule::Str("key", 3))),_228921_m->_field_key))}),jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_11a3c2e70_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_11a093930_Scope>(),_11aa913b0_builtin_caller_common,jule::Bool(),jule::Bool())))),jule::Ref<_11a3c2e70_TypeKind>(),_221841_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_119748ec0_CommonSubIdentExprModel>(new( std::nothrow ) _119748ec0_CommonSubIdentExprModel(_221841_d->_field_kind,_221841_d->_field_model,jule::Str("has", 3)))),jule::Bool(),jule::Ref<_11ab854f0_Const>()));
		}
		goto _match_end_4769949056;
		_case_end_4769954624:;
		if (!((jule::Str("del", 3)) == _match_expr)) { goto _case_end_4769954736; }
		_case_begin_4769954736:;
		{
			jule::Ref<_11a3c2e70_Map> _231421_m = _221841_d->_field_kind->_method_map();
			return jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),jule::new_struct<_119099250_FnIns>(new( std::nothrow ) _119099250_FnIns(jule::Ref<_118bb7d70_StructIns>(),jule::Ref<_119099250_Fn>(),jule::Slice<jule::Ref<_11a3c2e70_TypeKind>>(),jule::Slice<jule::Ref<_119099250_ParamIns>>({jule::new_struct<_119099250_ParamIns>(new( std::nothrow ) _119099250_ParamIns(jule::new_struct<_119099250_Param>(new( std::nothrow ) _119099250_Param(_11911a8a0_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_11a3c2e70_TypeSymbol>(),jule::Str("key", 3))),_231421_m->_field_key))}),jule::Ref<_11a3c2e70_TypeKind>(),jule::Ref<_11a093930_Scope>(),_11aa913b0_builtin_caller_common_mut,jule::Bool(),jule::Bool())))),jule::Ref<_11a3c2e70_TypeKind>(),_221841_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_119748ec0_CommonSubIdentExprModel>(new( std::nothrow ) _119748ec0_CommonSubIdentExprModel(_221841_d->_field_kind,_221841_d->_field_model,jule::Str("del", 3)))),jule::Bool(),jule::Ref<_11ab854f0_Const>()));
		}
		goto _match_end_4769949056;
		_case_end_4769954736:;
		_case_begin_4769949808:;
		{
			(*this)._method_push_err(_221851_ident,jule::Str("obj_have_not_ident", 18),jule::Slice<jule::Any>({jule::Any(_221851_ident._field_kind)}));
			return jule::new_ref<_11a53f4f0_Data>();
		}
		goto _match_end_4769949056;
		_case_end_4769949808:;
		_match_end_4769949056:;
	}
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_eval_str_sub_ident(jule::Ref<_11a53f4f0_Data> _234341_d,_11911a8a0_Token _234351_ident) {
	{
		auto &_match_expr{ _234351_ident._field_kind };
		if (!((jule::Str("len", 3)) == _match_expr)) { goto _case_end_4769953552; }
		_case_begin_4769953552:;
		{
			return jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_11a3c2e70_build_prim_type(jule::Str("i64", 3)))),jule::Ref<_11a3c2e70_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_119748ec0_CommonSubIdentExprModel>(new( std::nothrow ) _119748ec0_CommonSubIdentExprModel(_234341_d->_field_kind,_234341_d->_field_model,jule::Str("len()", 5)))),jule::Bool(),jule::Ref<_11ab854f0_Const>()));
		}
		goto _match_end_4772093968;
		_case_end_4769953552:;
		if (!((jule::Str("has_prefix", 10)) == _match_expr)) { goto _case_end_4771054448; }
		_case_begin_4771054448:;
		{
			return jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),jule::new_struct<_119099250_FnIns>(new( std::nothrow ) _119099250_FnIns(jule::Ref<_118bb7d70_StructIns>(),jule::Ref<_119099250_Fn>(),jule::Slice<jule::Ref<_11a3c2e70_TypeKind>>(),jule::Slice<jule::Ref<_119099250_ParamIns>>({jule::new_struct<_119099250_ParamIns>(new( std::nothrow ) _119099250_ParamIns(jule::new_struct<_119099250_Param>(new( std::nothrow ) _119099250_Param(_11911a8a0_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_11a3c2e70_TypeSymbol>(),jule::Str("sub", 3))),_234341_d->_field_kind))}),jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_11a3c2e70_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_11a093930_Scope>(),_11aa913b0_builtin_caller_common,jule::Bool(),jule::Bool())))),jule::Ref<_11a3c2e70_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_119748ec0_CommonSubIdentExprModel>(new( std::nothrow ) _119748ec0_CommonSubIdentExprModel(_234341_d->_field_kind,_234341_d->_field_model,jule::Str("has_prefix", 10)))),jule::Bool(),jule::Ref<_11ab854f0_Const>()));
		}
		goto _match_end_4772093968;
		_case_end_4771054448:;
		if (!((jule::Str("has_suffix", 10)) == _match_expr)) { goto _case_end_4771054560; }
		_case_begin_4771054560:;
		{
			return jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),jule::new_struct<_119099250_FnIns>(new( std::nothrow ) _119099250_FnIns(jule::Ref<_118bb7d70_StructIns>(),jule::Ref<_119099250_Fn>(),jule::Slice<jule::Ref<_11a3c2e70_TypeKind>>(),jule::Slice<jule::Ref<_119099250_ParamIns>>({jule::new_struct<_119099250_ParamIns>(new( std::nothrow ) _119099250_ParamIns(jule::new_struct<_119099250_Param>(new( std::nothrow ) _119099250_Param(_11911a8a0_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_11a3c2e70_TypeSymbol>(),jule::Str("sub", 3))),_234341_d->_field_kind))}),jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_11a3c2e70_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_11a093930_Scope>(),_11aa913b0_builtin_caller_common,jule::Bool(),jule::Bool())))),jule::Ref<_11a3c2e70_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_119748ec0_CommonSubIdentExprModel>(new( std::nothrow ) _119748ec0_CommonSubIdentExprModel(_234341_d->_field_kind,_234341_d->_field_model,jule::Str("has_suffix", 10)))),jule::Bool(),jule::Ref<_11ab854f0_Const>()));
		}
		goto _match_end_4772093968;
		_case_end_4771054560:;
		if (!((jule::Str("find", 4)) == _match_expr)) { goto _case_end_4771056800; }
		_case_begin_4771056800:;
		{
			return jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),jule::new_struct<_119099250_FnIns>(new( std::nothrow ) _119099250_FnIns(jule::Ref<_118bb7d70_StructIns>(),jule::Ref<_119099250_Fn>(),jule::Slice<jule::Ref<_11a3c2e70_TypeKind>>(),jule::Slice<jule::Ref<_119099250_ParamIns>>({jule::new_struct<_119099250_ParamIns>(new( std::nothrow ) _119099250_ParamIns(jule::new_struct<_119099250_Param>(new( std::nothrow ) _119099250_Param(_11911a8a0_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_11a3c2e70_TypeSymbol>(),jule::Str("sub", 3))),_234341_d->_field_kind))}),jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_11a3c2e70_build_prim_type(jule::Str("int", 3)))),jule::Ref<_11a093930_Scope>(),_11aa913b0_builtin_caller_common,jule::Bool(),jule::Bool())))),jule::Ref<_11a3c2e70_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_119748ec0_CommonSubIdentExprModel>(new( std::nothrow ) _119748ec0_CommonSubIdentExprModel(_234341_d->_field_kind,_234341_d->_field_model,jule::Str("find", 4)))),jule::Bool(),jule::Ref<_11ab854f0_Const>()));
		}
		goto _match_end_4772093968;
		_case_end_4771056800:;
		if (!((jule::Str("rfind", 5)) == _match_expr)) { goto _case_end_4771056912; }
		_case_begin_4771056912:;
		{
			return jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),jule::new_struct<_119099250_FnIns>(new( std::nothrow ) _119099250_FnIns(jule::Ref<_118bb7d70_StructIns>(),jule::Ref<_119099250_Fn>(),jule::Slice<jule::Ref<_11a3c2e70_TypeKind>>(),jule::Slice<jule::Ref<_119099250_ParamIns>>({jule::new_struct<_119099250_ParamIns>(new( std::nothrow ) _119099250_ParamIns(jule::new_struct<_119099250_Param>(new( std::nothrow ) _119099250_Param(_11911a8a0_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_11a3c2e70_TypeSymbol>(),jule::Str("sub", 3))),_234341_d->_field_kind))}),jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_11a3c2e70_build_prim_type(jule::Str("int", 3)))),jule::Ref<_11a093930_Scope>(),_11aa913b0_builtin_caller_common,jule::Bool(),jule::Bool())))),jule::Ref<_11a3c2e70_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_119748ec0_CommonSubIdentExprModel>(new( std::nothrow ) _119748ec0_CommonSubIdentExprModel(_234341_d->_field_kind,_234341_d->_field_model,jule::Str("rfind", 5)))),jule::Bool(),jule::Ref<_11ab854f0_Const>()));
		}
		goto _match_end_4772093968;
		_case_end_4771056912:;
		if (!((jule::Str("trim", 4)) == _match_expr)) { goto _case_end_4769936832; }
		_case_begin_4769936832:;
		{
			return jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),jule::new_struct<_119099250_FnIns>(new( std::nothrow ) _119099250_FnIns(jule::Ref<_118bb7d70_StructIns>(),jule::Ref<_119099250_Fn>(),jule::Slice<jule::Ref<_11a3c2e70_TypeKind>>(),jule::Slice<jule::Ref<_119099250_ParamIns>>({jule::new_struct<_119099250_ParamIns>(new( std::nothrow ) _119099250_ParamIns(jule::new_struct<_119099250_Param>(new( std::nothrow ) _119099250_Param(_11911a8a0_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_11a3c2e70_TypeSymbol>(),jule::Str("bytes", 5))),_234341_d->_field_kind))}),_234341_d->_field_kind,jule::Ref<_11a093930_Scope>(),_11aa913b0_builtin_caller_common,jule::Bool(),jule::Bool())))),jule::Ref<_11a3c2e70_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_119748ec0_CommonSubIdentExprModel>(new( std::nothrow ) _119748ec0_CommonSubIdentExprModel(_234341_d->_field_kind,_234341_d->_field_model,jule::Str("trim", 4)))),jule::Bool(),jule::Ref<_11ab854f0_Const>()));
		}
		goto _match_end_4772093968;
		_case_end_4769936832:;
		if (!((jule::Str("rtrim", 5)) == _match_expr)) { goto _case_end_4769936944; }
		_case_begin_4769936944:;
		{
			return jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),jule::new_struct<_119099250_FnIns>(new( std::nothrow ) _119099250_FnIns(jule::Ref<_118bb7d70_StructIns>(),jule::Ref<_119099250_Fn>(),jule::Slice<jule::Ref<_11a3c2e70_TypeKind>>(),jule::Slice<jule::Ref<_119099250_ParamIns>>({jule::new_struct<_119099250_ParamIns>(new( std::nothrow ) _119099250_ParamIns(jule::new_struct<_119099250_Param>(new( std::nothrow ) _119099250_Param(_11911a8a0_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_11a3c2e70_TypeSymbol>(),jule::Str("bytes", 5))),_234341_d->_field_kind))}),_234341_d->_field_kind,jule::Ref<_11a093930_Scope>(),_11aa913b0_builtin_caller_common,jule::Bool(),jule::Bool())))),jule::Ref<_11a3c2e70_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_119748ec0_CommonSubIdentExprModel>(new( std::nothrow ) _119748ec0_CommonSubIdentExprModel(_234341_d->_field_kind,_234341_d->_field_model,jule::Str("rtrim", 5)))),jule::Bool(),jule::Ref<_11ab854f0_Const>()));
		}
		goto _match_end_4772093968;
		_case_end_4769936944:;
		if (!((jule::Str("split", 5)) == _match_expr)) { goto _case_end_4769937056; }
		_case_begin_4769937056:;
		{
			return jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),jule::new_struct<_119099250_FnIns>(new( std::nothrow ) _119099250_FnIns(jule::Ref<_118bb7d70_StructIns>(),jule::Ref<_119099250_Fn>(),jule::Slice<jule::Ref<_11a3c2e70_TypeKind>>(),jule::Slice<jule::Ref<_119099250_ParamIns>>({jule::new_struct<_119099250_ParamIns>(new( std::nothrow ) _119099250_ParamIns(jule::new_struct<_119099250_Param>(new( std::nothrow ) _119099250_Param(_11911a8a0_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_11a3c2e70_TypeSymbol>(),jule::Str("sub", 3))),_234341_d->_field_kind)),jule::new_struct<_119099250_ParamIns>(new( std::nothrow ) _119099250_ParamIns(jule::new_struct<_119099250_Param>(new( std::nothrow ) _119099250_Param(_11911a8a0_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_11a3c2e70_TypeSymbol>(),jule::Str("n", 1))),jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_11a3c2e70_build_prim_type(jule::Str("int", 3))))))}),jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),jule::new_struct<_11a3c2e70_Slc>(new( std::nothrow ) _11a3c2e70_Slc(_234341_d->_field_kind)))),jule::Ref<_11a093930_Scope>(),_11aa913b0_builtin_caller_common,jule::Bool(),jule::Bool())))),jule::Ref<_11a3c2e70_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_119748ec0_CommonSubIdentExprModel>(new( std::nothrow ) _119748ec0_CommonSubIdentExprModel(_234341_d->_field_kind,_234341_d->_field_model,jule::Str("split", 5)))),jule::Bool(),jule::Ref<_11ab854f0_Const>()));
		}
		goto _match_end_4772093968;
		_case_end_4769937056:;
		if (!((jule::Str("replace", 7)) == _match_expr)) { goto _case_end_4771052576; }
		_case_begin_4771052576:;
		{
			return jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),jule::new_struct<_119099250_FnIns>(new( std::nothrow ) _119099250_FnIns(jule::Ref<_118bb7d70_StructIns>(),jule::Ref<_119099250_Fn>(),jule::Slice<jule::Ref<_11a3c2e70_TypeKind>>(),jule::Slice<jule::Ref<_119099250_ParamIns>>({jule::new_struct<_119099250_ParamIns>(new( std::nothrow ) _119099250_ParamIns(jule::new_struct<_119099250_Param>(new( std::nothrow ) _119099250_Param(_11911a8a0_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_11a3c2e70_TypeSymbol>(),jule::Str("sub", 3))),_234341_d->_field_kind)),jule::new_struct<_119099250_ParamIns>(new( std::nothrow ) _119099250_ParamIns(jule::new_struct<_119099250_Param>(new( std::nothrow ) _119099250_Param(_11911a8a0_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_11a3c2e70_TypeSymbol>(),jule::Str("new", 3))),_234341_d->_field_kind)),jule::new_struct<_119099250_ParamIns>(new( std::nothrow ) _119099250_ParamIns(jule::new_struct<_119099250_Param>(new( std::nothrow ) _119099250_Param(_11911a8a0_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_11a3c2e70_TypeSymbol>(),jule::Str("n", 1))),jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_11a3c2e70_build_prim_type(jule::Str("int", 3))))))}),_234341_d->_field_kind,jule::Ref<_11a093930_Scope>(),_11aa913b0_builtin_caller_common,jule::Bool(),jule::Bool())))),jule::Ref<_11a3c2e70_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_119748ec0_CommonSubIdentExprModel>(new( std::nothrow ) _119748ec0_CommonSubIdentExprModel(_234341_d->_field_kind,_234341_d->_field_model,jule::Str("replace", 7)))),jule::Bool(),jule::Ref<_11ab854f0_Const>()));
		}
		goto _match_end_4772093968;
		_case_end_4771052576:;
		_case_begin_4772094720:;
		{
			(*this)._method_push_err(_234351_ident,jule::Str("obj_have_not_ident", 18),jule::Slice<jule::Any>({jule::Any(_234351_ident._field_kind)}));
			return jule::new_ref<_11a53f4f0_Data>();
		}
		goto _match_end_4772093968;
		_case_end_4772094720:;
		_match_end_4772093968:;
	}
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_eval_int_type_static(_11911a8a0_Token _256839_ident) {
	
	{
		auto &_match_expr{ _256839_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4771118624; }
		_case_begin_4771118624:;
		{
			jule::Ref<_11ab854f0_Const> _257321_c = _11ab854f0_new_i64(static_cast<jule::I64>(_11ab89af0_max_of(jule::Str("int", 3))));
			return jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_11a3c2e70_build_prim_type(jule::Str("int", 3)))),jule::Ref<_11a3c2e70_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_257321_c),jule::Bool(),_257321_c));
		}
		goto _match_end_4771116080;
		_case_end_4771118624:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_4771122064; }
		_case_begin_4771122064:;
		{
			jule::Ref<_11ab854f0_Const> _258121_c = _11ab854f0_new_i64(static_cast<jule::I64>(_11ab89af0_min_of(jule::Str("int", 3))));
			return jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_11a3c2e70_build_prim_type(jule::Str("int", 3)))),jule::Ref<_11a3c2e70_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_258121_c),jule::Bool(),_258121_c));
		}
		goto _match_end_4771116080;
		_case_end_4771122064:;
		_case_begin_4771117136:;
		{
			(*this)._method_push_err(_256839_ident,jule::Str("type_have_not_ident", 19),jule::Slice<jule::Any>({jule::Any(jule::Str("int", 3)),jule::Any(_256839_ident._field_kind)}));
			return jule::new_ref<_11a53f4f0_Data>();
		}
		goto _match_end_4771116080;
		_case_end_4771117136:;
		_match_end_4771116080:;
	}
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_eval_uint_type_static(_11911a8a0_Token _259440_ident) {
	
	{
		auto &_match_expr{ _259440_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4771135744; }
		_case_begin_4771135744:;
		{
			jule::Ref<_11ab854f0_Const> _259921_c = _11ab854f0_new_u64(static_cast<jule::U64>(_11ab89af0_max_of(jule::Str("uint", 4))));
			return jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_11a3c2e70_build_prim_type(jule::Str("uint", 4)))),jule::Ref<_11a3c2e70_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_259921_c),jule::Bool(),_259921_c));
		}
		goto _match_end_4771133200;
		_case_end_4771135744:;
		_case_begin_4771134256:;
		{
			(*this)._method_push_err(_259440_ident,jule::Str("type_have_not_ident", 19),jule::Slice<jule::Any>({jule::Any(jule::Str("uint", 4)),jule::Any(_259440_ident._field_kind)}));
			return jule::new_ref<_11a53f4f0_Data>();
		}
		goto _match_end_4771133200;
		_case_end_4771134256:;
		_match_end_4771133200:;
	}
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_eval_i8_type_static(_11911a8a0_Token _261238_ident) {
	
	
	
	{
		auto &_match_expr{ _261238_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4771153744; }
		_case_begin_4771153744:;
		{
			jule::Ref<_11ab854f0_Const> _261921_c = _11ab854f0_new_i64(127LL);
			return jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_11a3c2e70_build_prim_type(jule::Str("i8", 2)))),jule::Ref<_11a3c2e70_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_261921_c),jule::Bool(),_261921_c));
		}
		goto _match_end_4771148048;
		_case_end_4771153744:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_4771153856; }
		_case_begin_4771153856:;
		{
			jule::Ref<_11ab854f0_Const> _262721_c = _11ab854f0_new_i64(-128LL);
			return jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_11a3c2e70_build_prim_type(jule::Str("i8", 2)))),jule::Ref<_11a3c2e70_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_262721_c),jule::Bool(),_262721_c));
		}
		goto _match_end_4771148048;
		_case_end_4771153856:;
		_case_begin_4771148912:;
		{
			(*this)._method_push_err(_261238_ident,jule::Str("type_have_not_ident", 19),jule::Slice<jule::Any>({jule::Any(jule::Str("i8", 2)),jule::Any(_261238_ident._field_kind)}));
			return jule::new_ref<_11a53f4f0_Data>();
		}
		goto _match_end_4771148048;
		_case_end_4771148912:;
		_match_end_4771148048:;
	}
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_eval_i16_type_static(_11911a8a0_Token _264039_ident) {
	
	
	
	{
		auto &_match_expr{ _264039_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4771171376; }
		_case_begin_4771171376:;
		{
			jule::Ref<_11ab854f0_Const> _264721_c = _11ab854f0_new_i64(32767LL);
			return jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_11a3c2e70_build_prim_type(jule::Str("i16", 3)))),jule::Ref<_11a3c2e70_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_264721_c),jule::Bool(),_264721_c));
		}
		goto _match_end_4771165680;
		_case_end_4771171376:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_4771171488; }
		_case_begin_4771171488:;
		{
			jule::Ref<_11ab854f0_Const> _265521_c = _11ab854f0_new_i64(-32768LL);
			return jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_11a3c2e70_build_prim_type(jule::Str("i16", 3)))),jule::Ref<_11a3c2e70_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_265521_c),jule::Bool(),_265521_c));
		}
		goto _match_end_4771165680;
		_case_end_4771171488:;
		_case_begin_4771166544:;
		{
			(*this)._method_push_err(_264039_ident,jule::Str("type_have_not_ident", 19),jule::Slice<jule::Any>({jule::Any(jule::Str("i16", 3)),jule::Any(_264039_ident._field_kind)}));
			return jule::new_ref<_11a53f4f0_Data>();
		}
		goto _match_end_4771165680;
		_case_end_4771166544:;
		_match_end_4771165680:;
	}
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_eval_i32_type_static(_11911a8a0_Token _266839_ident) {
	
	
	
	{
		auto &_match_expr{ _266839_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4771189008; }
		_case_begin_4771189008:;
		{
			jule::Ref<_11ab854f0_Const> _267521_c = _11ab854f0_new_i64(2147483647LL);
			return jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_11a3c2e70_build_prim_type(jule::Str("i32", 3)))),jule::Ref<_11a3c2e70_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_267521_c),jule::Bool(),_267521_c));
		}
		goto _match_end_4771183312;
		_case_end_4771189008:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_4771189120; }
		_case_begin_4771189120:;
		{
			jule::Ref<_11ab854f0_Const> _268321_c = _11ab854f0_new_i64(-2147483648LL);
			return jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_11a3c2e70_build_prim_type(jule::Str("i32", 3)))),jule::Ref<_11a3c2e70_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_268321_c),jule::Bool(),_268321_c));
		}
		goto _match_end_4771183312;
		_case_end_4771189120:;
		_case_begin_4771184176:;
		{
			(*this)._method_push_err(_266839_ident,jule::Str("type_have_not_ident", 19),jule::Slice<jule::Any>({jule::Any(jule::Str("i32", 3)),jule::Any(_266839_ident._field_kind)}));
			return jule::new_ref<_11a53f4f0_Data>();
		}
		goto _match_end_4771183312;
		_case_end_4771184176:;
		_match_end_4771183312:;
	}
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_eval_i64_type_static(_11911a8a0_Token _269639_ident) {
	
	
	
	{
		auto &_match_expr{ _269639_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4771203440; }
		_case_begin_4771203440:;
		{
			jule::Ref<_11ab854f0_Const> _270321_c = _11ab854f0_new_i64(jule::MIN_I64);
			return jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_11a3c2e70_build_prim_type(jule::Str("i64", 3)))),jule::Ref<_11a3c2e70_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_270321_c),jule::Bool(),_270321_c));
		}
		goto _match_end_4771201424;
		_case_end_4771203440:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_4771207920; }
		_case_begin_4771207920:;
		{
			jule::Ref<_11ab854f0_Const> _271121_c = _11ab854f0_new_i64(jule::MAX_I64);
			return jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_11a3c2e70_build_prim_type(jule::Str("i64", 3)))),jule::Ref<_11a3c2e70_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_271121_c),jule::Bool(),_271121_c));
		}
		goto _match_end_4771201424;
		_case_end_4771207920:;
		_case_begin_4771202288:;
		{
			(*this)._method_push_err(_269639_ident,jule::Str("type_have_not_ident", 19),jule::Slice<jule::Any>({jule::Any(jule::Str("i64", 3)),jule::Any(_269639_ident._field_kind)}));
			return jule::new_ref<_11a53f4f0_Data>();
		}
		goto _match_end_4771201424;
		_case_end_4771202288:;
		_match_end_4771201424:;
	}
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_eval_u8_type_static(_11911a8a0_Token _272438_ident) {
	
	
	{
		auto &_match_expr{ _272438_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4771221200; }
		_case_begin_4771221200:;
		{
			jule::Ref<_11ab854f0_Const> _273021_c = _11ab854f0_new_u64(255LLU);
			return jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_11a3c2e70_build_prim_type(jule::Str("u8", 2)))),jule::Ref<_11a3c2e70_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_273021_c),jule::Bool(),_273021_c));
		}
		goto _match_end_4771218912;
		_case_end_4771221200:;
		_case_begin_4771219664:;
		{
			(*this)._method_push_err(_272438_ident,jule::Str("type_have_not_ident", 19),jule::Slice<jule::Any>({jule::Any(jule::Str("u8", 2)),jule::Any(_272438_ident._field_kind)}));
			return jule::new_ref<_11a53f4f0_Data>();
		}
		goto _match_end_4771218912;
		_case_end_4771219664:;
		_match_end_4771218912:;
	}
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_eval_u16_type_static(_11911a8a0_Token _274339_ident) {
	
	
	{
		auto &_match_expr{ _274339_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4771234144; }
		_case_begin_4771234144:;
		{
			jule::Ref<_11ab854f0_Const> _274921_c = _11ab854f0_new_u64(65535LLU);
			return jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_11a3c2e70_build_prim_type(jule::Str("u16", 3)))),jule::Ref<_11a3c2e70_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_274921_c),jule::Bool(),_274921_c));
		}
		goto _match_end_4771231856;
		_case_end_4771234144:;
		_case_begin_4771232608:;
		{
			(*this)._method_push_err(_274339_ident,jule::Str("type_have_not_ident", 19),jule::Slice<jule::Any>({jule::Any(jule::Str("u16", 3)),jule::Any(_274339_ident._field_kind)}));
			return jule::new_ref<_11a53f4f0_Data>();
		}
		goto _match_end_4771231856;
		_case_end_4771232608:;
		_match_end_4771231856:;
	}
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_eval_u32_type_static(_11911a8a0_Token _276239_ident) {
	
	
	{
		auto &_match_expr{ _276239_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4771246800; }
		_case_begin_4771246800:;
		{
			jule::Ref<_11ab854f0_Const> _276821_c = _11ab854f0_new_u64(4294967295LLU);
			return jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_11a3c2e70_build_prim_type(jule::Str("u32", 3)))),jule::Ref<_11a3c2e70_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_276821_c),jule::Bool(),_276821_c));
		}
		goto _match_end_4771244512;
		_case_end_4771246800:;
		_case_begin_4771245264:;
		{
			(*this)._method_push_err(_276239_ident,jule::Str("type_have_not_ident", 19),jule::Slice<jule::Any>({jule::Any(jule::Str("u32", 3)),jule::Any(_276239_ident._field_kind)}));
			return jule::new_ref<_11a53f4f0_Data>();
		}
		goto _match_end_4771244512;
		_case_end_4771245264:;
		_match_end_4771244512:;
	}
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_eval_u64_type_static(_11911a8a0_Token _278139_ident) {
	
	
	{
		auto &_match_expr{ _278139_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4771259600; }
		_case_begin_4771259600:;
		{
			jule::Ref<_11ab854f0_Const> _278721_c = _11ab854f0_new_u64(jule::MAX_U64);
			return jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_11a3c2e70_build_prim_type(jule::Str("u64", 3)))),jule::Ref<_11a3c2e70_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_278721_c),jule::Bool(),_278721_c));
		}
		goto _match_end_4771257312;
		_case_end_4771259600:;
		_case_begin_4771258064:;
		{
			(*this)._method_push_err(_278139_ident,jule::Str("type_have_not_ident", 19),jule::Slice<jule::Any>({jule::Any(jule::Str("u64", 3)),jule::Any(_278139_ident._field_kind)}));
			return jule::new_ref<_11a53f4f0_Data>();
		}
		goto _match_end_4771257312;
		_case_end_4771258064:;
		_match_end_4771257312:;
	}
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_eval_f32_type_tatic(_11911a8a0_Token _280038_ident) {
	
	
	
	{
		auto &_match_expr{ _280038_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4771276800; }
		_case_begin_4771276800:;
		{
			jule::Ref<_11ab854f0_Const> _280721_c = _11ab854f0_new_f64(3.4028234663852886e+38);
			return jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_11a3c2e70_build_prim_type(jule::Str("f32", 3)))),jule::Ref<_11a3c2e70_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_280721_c),jule::Bool(),_280721_c));
		}
		goto _match_end_4771270416;
		_case_end_4771276800:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_4771276912; }
		_case_begin_4771276912:;
		{
			jule::Ref<_11ab854f0_Const> _281521_c = _11ab854f0_new_f64(-3.4028234663852886e+38);
			return jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_11a3c2e70_build_prim_type(jule::Str("f32", 3)))),jule::Ref<_11a3c2e70_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_281521_c),jule::Bool(),_281521_c));
		}
		goto _match_end_4771270416;
		_case_end_4771276912:;
		_case_begin_4771271968:;
		{
			(*this)._method_push_err(_280038_ident,jule::Str("type_have_not_ident", 19),jule::Slice<jule::Any>({jule::Any(jule::Str("f32", 3)),jule::Any(_280038_ident._field_kind)}));
			return jule::new_ref<_11a53f4f0_Data>();
		}
		goto _match_end_4771270416;
		_case_end_4771271968:;
		_match_end_4771270416:;
	}
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_eval_f64_type_static(_11911a8a0_Token _282839_ident) {
	
	
	
	{
		auto &_match_expr{ _282839_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4771294736; }
		_case_begin_4771294736:;
		{
			jule::Ref<_11ab854f0_Const> _283521_c = _11ab854f0_new_f64(jule::MAX_F64);
			return jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_11a3c2e70_build_prim_type(jule::Str("f64", 3)))),jule::Ref<_11a3c2e70_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_283521_c),jule::Bool(),_283521_c));
		}
		goto _match_end_4771288208;
		_case_end_4771294736:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_4771294848; }
		_case_begin_4771294848:;
		{
			jule::Ref<_11ab854f0_Const> _284321_c = _11ab854f0_new_f64(jule::MIN_F64);
			return jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_11a3c2e70_build_prim_type(jule::Str("f64", 3)))),jule::Ref<_11a3c2e70_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_284321_c),jule::Bool(),_284321_c));
		}
		goto _match_end_4771288208;
		_case_end_4771294848:;
		_case_begin_4771289904:;
		{
			(*this)._method_push_err(_282839_ident,jule::Str("type_have_not_ident", 19),jule::Slice<jule::Any>({jule::Any(jule::Str("f64", 3)),jule::Any(_282839_ident._field_kind)}));
			return jule::new_ref<_11a53f4f0_Data>();
		}
		goto _match_end_4771288208;
		_case_end_4771289904:;
		_match_end_4771288208:;
	}
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_eval_prim_static(jule::Str _285635_kind,_11911a8a0_Token _285646_ident) {
	{
		auto &_match_expr{ _285635_kind };
		if (!((jule::Str("int", 3)) == _match_expr)) { goto _case_end_4771306176; }
		_case_begin_4771306176:;
		{
			return (*this)._method_eval_int_type_static(_285646_ident);
		}
		goto _match_end_4771304112;
		_case_end_4771306176:;
		if (!((jule::Str("uint", 4)) == _match_expr)) { goto _case_end_4771309136; }
		_case_begin_4771309136:;
		{
			return (*this)._method_eval_uint_type_static(_285646_ident);
		}
		goto _match_end_4771304112;
		_case_end_4771309136:;
		if (!((jule::Str("i8", 2)) == _match_expr)) { goto _case_end_4771309248; }
		_case_begin_4771309248:;
		{
			return (*this)._method_eval_i8_type_static(_285646_ident);
		}
		goto _match_end_4771304112;
		_case_end_4771309248:;
		if (!((jule::Str("i16", 3)) == _match_expr)) { goto _case_end_4771309712; }
		_case_begin_4771309712:;
		{
			return (*this)._method_eval_i16_type_static(_285646_ident);
		}
		goto _match_end_4771304112;
		_case_end_4771309712:;
		if (!((jule::Str("i32", 3)) == _match_expr)) { goto _case_end_4771309824; }
		_case_begin_4771309824:;
		{
			return (*this)._method_eval_i32_type_static(_285646_ident);
		}
		goto _match_end_4771304112;
		_case_end_4771309824:;
		if (!((jule::Str("i64", 3)) == _match_expr)) { goto _case_end_4771305008; }
		_case_begin_4771305008:;
		{
			return (*this)._method_eval_i64_type_static(_285646_ident);
		}
		goto _match_end_4771304112;
		_case_end_4771305008:;
		if (!((jule::Str("u8", 2)) == _match_expr)) { goto _case_end_4771305120; }
		_case_begin_4771305120:;
		{
			return (*this)._method_eval_u8_type_static(_285646_ident);
		}
		goto _match_end_4771304112;
		_case_end_4771305120:;
		if (!((jule::Str("u16", 3)) == _match_expr)) { goto _case_end_4771305232; }
		_case_begin_4771305232:;
		{
			return (*this)._method_eval_u16_type_static(_285646_ident);
		}
		goto _match_end_4771304112;
		_case_end_4771305232:;
		if (!((jule::Str("u32", 3)) == _match_expr)) { goto _case_end_4771308416; }
		_case_begin_4771308416:;
		{
			return (*this)._method_eval_u32_type_static(_285646_ident);
		}
		goto _match_end_4771304112;
		_case_end_4771308416:;
		if (!((jule::Str("u64", 3)) == _match_expr)) { goto _case_end_4771308528; }
		_case_begin_4771308528:;
		{
			return (*this)._method_eval_u64_type_static(_285646_ident);
		}
		goto _match_end_4771304112;
		_case_end_4771308528:;
		if (!((jule::Str("f32", 3)) == _match_expr)) { goto _case_end_4771308640; }
		_case_begin_4771308640:;
		{
			return (*this)._method_eval_f32_type_tatic(_285646_ident);
		}
		goto _match_end_4771304112;
		_case_end_4771308640:;
		if (!((jule::Str("f64", 3)) == _match_expr)) { goto _case_end_4771308752; }
		_case_begin_4771308752:;
		{
			return (*this)._method_eval_f64_type_static(_285646_ident);
		}
		goto _match_end_4771304112;
		_case_end_4771308752:;
		_case_begin_4771304208:;
		{
			(*this)._method_push_err(_285646_ident,jule::Str("type_have_not_ident", 19),jule::Slice<jule::Any>({jule::Any(_285635_kind),jule::Any(_285646_ident._field_kind)}));
			return jule::new_ref<_11a53f4f0_Data>();
		}
		goto _match_end_4771304112;
		_case_end_4771304208:;
		_match_end_4771304112:;
	}
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_eval_type_static(jule::Ref<_11a53f4f0_Data> _287639_d,jule::Ref<_118d9a790_SubIdentExpr> _287653_si) {
	{
		if (!((jule::real(_287639_d->_field_kind->_method_prim())))) { goto _case_end_4771334272; }
		_case_begin_4771334272:;
		{
			return (*this)._method_eval_prim_static(_287639_d->_field_kind->_method_prim()->_method_to_str(),_287653_si->_field_ident);
		}
		goto _match_end_4771328864;
		_case_end_4771334272:;
		if (!((jule::real(_287639_d->_field_kind->_method_enm())))) { goto _case_end_4771334384; }
		_case_begin_4771334384:;
		{
			return (*this)._method_eval_enum_static(_287639_d->_field_kind->_method_enm(),_287653_si->_field_ident);
		}
		goto _match_end_4771328864;
		_case_end_4771334384:;
		if (!((jule::real(_287639_d->_field_kind->_method_strct())))) { goto _case_end_4771334016; }
		_case_begin_4771334016:;
		{
			return (*this)._method_eval_struct_static(_287639_d->_field_kind->_method_strct(),_287653_si->_field_ident);
		}
		goto _match_end_4771328864;
		_case_end_4771334016:;
		_case_begin_4771329072:;
		{
			(*this)._method_push_err(_287653_si->_field_ident,jule::Str("type_not_support_sub_fields", 27),jule::Slice<jule::Any>({jule::Any(_287639_d->_field_kind->_method_to_str())}));
			return jule::new_ref<_11a53f4f0_Data>();
		}
		goto _match_end_4771328864;
		_case_end_4771329072:;
		_match_end_4771328864:;
	}
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_eval_obj_sub_ident(jule::Ref<_11a53f4f0_Data> _289341_d,jule::Ref<_118d9a790_SubIdentExpr> _289355_si) {
	jule::Ref<_11a3c2e70_TypeKind> _289417_kind = _289341_d->_field_kind;
	if (jule::real(_289341_d->_field_kind->_method_ptr())) {
		jule::Ref<_11a3c2e70_Ptr> _289617_ptr = _289341_d->_field_kind->_method_ptr();
		if ((!(_289617_ptr->_method_is_unsafe()))) {
			if ((!(_289355_si->_field_is_self)) && (!((*this)._method_is_unsafe()))) {
				(*this)._method_push_err(_289355_si->_field_ident,jule::Str("unsafe_behavior_at_out_of_unsafe_scope", 38),jule::Slice<jule::Any>({}));
			}
			_289417_kind=_289341_d->_field_kind->_method_ptr()->_field_elem;
		}
	} else if (jule::real(_289341_d->_field_kind->_method_ref())) {
		_289417_kind=_289341_d->_field_kind->_method_ref()->_field_elem;
	}
	{
		if (!((jule::real(_289341_d->_field_kind->_method_trt())))) { goto _case_end_4771360768; }
		_case_begin_4771360768:;
		{
			return (*this)._method_eval_trait_sub_ident(_289341_d,_289341_d->_field_kind->_method_trt(),_289355_si->_field_ident);
		}
		goto _match_end_4771360400;
		_case_end_4771360768:;
		if (!((jule::real(_289417_kind->_method_strct())))) { goto _case_end_4771360880; }
		_case_begin_4771360880:;
		{
			jule::Ref<_118bb7d70_StructIns> _291217_s = _289417_kind->_method_strct();
			if (_11a53f4f0_is_instanced_struct(_291217_s)) {
				jule::Bool _291425_used_reference_elem = jule::real(_289341_d->_field_kind->_method_ref());
				return (*this)._method_eval_struct_sub_ident(_289341_d,_289417_kind->_method_strct(),_289355_si,_291425_used_reference_elem);
			}
		}
		goto _match_end_4771360400;
		_case_end_4771360880:;
		if (!((jule::real(_289417_kind->_method_slc())))) { goto _case_end_4771360992; }
		_case_begin_4771360992:;
		{
			return (*this)._method_eval_slice_sub_ident(_289341_d,_289355_si->_field_ident);
		}
		goto _match_end_4771360400;
		_case_end_4771360992:;
		if (!((jule::real(_289417_kind->_method_arr())))) { goto _case_end_4771361104; }
		_case_begin_4771361104:;
		{
			return (*this)._method_eval_array_sub_ident(_289341_d,_289355_si->_field_ident);
		}
		goto _match_end_4771360400;
		_case_end_4771361104:;
		if (!((jule::real(_289417_kind->_method_map())))) { goto _case_end_4771361232; }
		_case_begin_4771361232:;
		{
			return (*this)._method_eval_map_sub_ident(_289341_d,_289355_si->_field_ident);
		}
		goto _match_end_4771360400;
		_case_end_4771361232:;
		if (!((jule::real(_289417_kind->_method_prim())))) { goto _case_end_4771361360; }
		_case_begin_4771361360:;
		{
			jule::Ref<_11a3c2e70_Prim> _292817_p = _289417_kind->_method_prim();
			{
				auto &_match_expr{ _292817_p->_field_kind };
				if (!((jule::Str("str", 3)) == _match_expr)) { goto _case_end_4771381280; }
				_case_begin_4771381280:;
				{
					return (*this)._method_eval_str_sub_ident(_289341_d,_289355_si->_field_ident);
				}
				goto _match_end_4771379872;
				_case_end_4771381280:;
				_match_end_4771379872:;
			}
		}
		goto _match_end_4771360400;
		_case_end_4771361360:;
		_match_end_4771360400:;
	}
	(*this)._method_push_err(_289355_si->_field_ident,jule::Str("obj_not_support_sub_fields", 26),jule::Slice<jule::Any>({jule::Any(_289341_d->_field_kind->_method_to_str())}));
	return jule::new_ref<_11a53f4f0_Data>();
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_eval_sub_ident(jule::Ref<_118d9a790_SubIdentExpr> _293938_si) {
	jule::Ref<_11a3c2e70_TypeKind> _294017_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_294017_prefix;
	});
	jule::Ref<_11a53f4f0_Data> _294417_d = this->self->_method_eval_expr_kind(_293938_si->_field_expr);
	if ((!(jule::real(_294417_d)))) {
		return jule::new_ref<_11a53f4f0_Data>();
	}
	if (_294417_d->_field_decl) {
		return this->self->_method_eval_type_static(_294417_d,_293938_si);
	}
	return this->self->_method_eval_obj_sub_ident(_294417_d,_293938_si);
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_eval_tuple(jule::Ref<_118d9a790_TupleExpr> _295634_tup) {
	jule::Ref<_11a3c2e70_Tuple> _295717_tup_t = jule::new_struct<_11a3c2e70_Tuple>(new( std::nothrow ) _11a3c2e70_Tuple());
	_295717_tup_t->_field_types=jule::Slice<jule::Ref<_11a3c2e70_TypeKind>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_295634_tup->_field_expr.len())));
	jule::Ref<_119748ec0_TupleExprModel> _296017_model = jule::new_struct<_119748ec0_TupleExprModel>(new( std::nothrow ) _119748ec0_TupleExprModel(jule::Slice<jule::Ref<_11a53f4f0_Data>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_295634_tup->_field_expr.len())))));
	jule::Bool _296417_ok = true;
	{
		auto &__julec_range_expr = _295634_tup->_field_expr;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _11a53f4f0_i = 0;
			jule::Any _11a53f4f0_expr = *__julec_range_begin;
			_iter_begin_4771408672:;
			{
				jule::Ref<_11a53f4f0_Data> _296621_d = this->self->_method_eval_expr_kind(_11a53f4f0_expr);
				if ((!(jule::real(_296621_d)))) {
					_296417_ok=false;
					goto _iter_next_4771408672;
				}
				_295717_tup_t->_field_types[static_cast<jule::Int>(_11a53f4f0_i)]=_296621_d->_field_kind;
				_296017_model->_field_datas[static_cast<jule::Int>(_11a53f4f0_i)]=_296621_d;
			}
			_iter_next_4771408672:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_11a53f4f0_i; _11a53f4f0_expr = *__julec_range_begin; goto _iter_begin_4771408672; }
			_iter_end_4771408672:;
		}
	}
	if ((!(_296417_ok))) {
		return jule::new_ref<_11a53f4f0_Data>();
	}
	return jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_295717_tup_t)),jule::Ref<_11a3c2e70_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_296017_model),jule::Bool(),jule::Ref<_11ab854f0_Const>()));
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_eval_map(jule::Ref<_11a3c2e70_Map> _298532_m,jule::Ref<_118d9a790_BraceLit> _298545_lit) {
	jule::Ref<_119748ec0_MapExprModel> _298617_model = jule::new_struct<_119748ec0_MapExprModel>(new( std::nothrow ) _119748ec0_MapExprModel(_298532_m->_field_key,_298532_m->_field_val,jule::Slice<jule::Ref<_119748ec0_KeyValPairExprModel>>()));
	{
		auto &__julec_range_expr = _298545_lit->_field_exprs;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Any _11a53f4f0_expr = *__julec_range_begin;
			_iter_begin_4771426272:;
			{
				{
					auto &_match_expr{ _11a53f4f0_expr };
					if (!(_match_expr.type_is<jule::Ref<_118d9a790_KeyValPair>>())) { goto _case_end_4771429024; }
					goto _match_end_4771427504;
					_case_end_4771429024:;
					_case_begin_4771427600:;
					{
						this->self->_method_push_err(_298545_lit->_field_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
						return jule::new_ref<_11a53f4f0_Data>();
					}
					goto _match_end_4771427504;
					_case_end_4771427600:;
					_match_end_4771427504:;
				}
				jule::Ref<_118d9a790_KeyValPair> _300121_pair = _11a53f4f0_expr.operator jule::Ref<_118d9a790_KeyValPair>();
				jule::Ref<_11a53f4f0_Data> _300321_key = this->self->_method_eval_expr_kind(_300121_pair->_field_key);
				if ((!(jule::real(_300321_key)))) {
					return jule::new_ref<_11a53f4f0_Data>();
				}
				jule::Ref<_11a53f4f0_Data> _300821_val = this->self->_method_eval_expr_kind(_300121_pair->_field_val);
				if ((!(jule::real(_300821_val)))) {
					return jule::new_ref<_11a53f4f0_Data>();
				}
				this->self->_field_s->_method_check_assign_type(_298532_m->_field_key,_300321_key,_300121_pair->_field_colon,true);
				this->self->_field_s->_method_check_assign_type(_298532_m->_field_val,_300821_val,_300121_pair->_field_colon,true);
				_298617_model->_field_entries=append(_298617_model->_field_entries,jule::Slice<jule::Ref<_119748ec0_KeyValPairExprModel>>({jule::new_struct<_119748ec0_KeyValPairExprModel>(new( std::nothrow ) _119748ec0_KeyValPairExprModel(_300321_key->_field_model,_300821_val->_field_model))}));
			}
			_iter_next_4771426272:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a53f4f0_expr = *__julec_range_begin; goto _iter_begin_4771426272; }
			_iter_end_4771426272:;
		}
	}
	return jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_298532_m)),jule::Ref<_11a3c2e70_TypeKind>(),true,jule::Bool(),false,false,jule::Bool(),jule::Any(_298617_model),false,jule::Ref<_11ab854f0_Const>()));
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_eval_brace_lit(jule::Ref<_118d9a790_BraceLit> _303238_lit) {
	{
		if (!(((!(jule::real(this->self->_field_prefix)))))) { goto _case_end_4771452640; }
		_case_begin_4771452640:;
		{
			this->self->_method_push_err(_303238_lit->_field_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_11a53f4f0_Data>();
		}
		goto _match_end_4771451504;
		_case_end_4771452640:;
		if (!((jule::real(this->self->_field_prefix->_method_map())))) { goto _case_end_4771455824; }
		_case_begin_4771455824:;
		{
			return this->self->_method_eval_map(this->self->_field_prefix->_method_map(),_303238_lit);
		}
		goto _match_end_4771451504;
		_case_end_4771455824:;
		if (!((jule::real(this->self->_field_prefix->_method_strct())))) { goto _case_end_4771455936; }
		_case_begin_4771455936:;
		{
			return this->self->_method_eval_struct_lit_explicit(this->self->_field_prefix->_method_strct(),_303238_lit->_field_exprs,_303238_lit->_field_token);
		}
		goto _match_end_4771451504;
		_case_end_4771455936:;
		_case_begin_4771451712:;
		{
			this->self->_method_push_err(_303238_lit->_field_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_11a53f4f0_Data>();
		}
		goto _match_end_4771451504;
		_case_end_4771451712:;
		_match_end_4771451504:;
	}
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_eval_anon_fn(jule::Ref<_118d9a790_FnDecl> _305035_decl) {
	_11a3c2e70_TypeChecker _305117_tc = _11a3c2e70_TypeChecker((*this)._field_s,(*this)._field_lookup,jule::Ref<_11a3c2e70_Referencer>(),_11911a8a0_Token(),jule::Slice<jule::Ref<_118d9a790_GenericDecl>>(),jule::Slice<jule::Ref<_11a3c2e70_TypeAlias>>(),jule::Bool());
	jule::Ref<_119099250_FnIns> _305517_ins = _305117_tc._method_build_fn(_305035_decl);
	_305517_ins->_field_anon=true;
	{
		auto &_match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_11a093930_ScopeChecker>>())) { goto _case_end_4771475104; }
		_case_begin_4771475104:;
		{
			jule::Ref<_11a093930_ScopeChecker> _306021_sc = (*this)._field_lookup.operator jule::Ref<_11a093930_ScopeChecker>();
			jule::Ref<_11a093930_ScopeChecker> _306121_scc = _306021_sc->_method_new_child_checker();
			_306121_scc->_field_labels=jule::new_ref<jule::Slice<jule::Ref<_11a093930_ScopeLabel>>>(nullptr);
			_306121_scc->_field_gotos=jule::new_ref<jule::Slice<jule::Ref<_11a093930_ScopeGoto>>>(nullptr);
			jule::drop(_306121_scc->_field_owner);
			_306121_scc->_field_child_index=0LL;
			_306121_scc->_field_it=0LL;
			_306121_scc->_field_cse=0LL;
			_306121_scc->_field_owner=_305517_ins;
			(*this)._field_s->_method_check_fn_ins_sc(_305517_ins,_306121_scc);
		}
		goto _match_end_4771472288;
		_case_end_4771475104:;
		_case_begin_4771467904:;
		{
			(*this)._field_s->_method_check_fn_ins(_305517_ins);
		}
		goto _match_end_4771472288;
		_case_end_4771467904:;
		_match_end_4771472288:;
	}
	return jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_305517_ins)),jule::Ref<_11a3c2e70_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_119748ec0_AnonFnExprModel>(new( std::nothrow ) _119748ec0_AnonFnExprModel(_305517_ins,(*this)._method_is_global()))),jule::Bool(),jule::Ref<_11ab854f0_Const>()));
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_eval_binop(jule::Ref<_118d9a790_BinopExpr> _308434_op) {
	jule::Ref<_11a3c2e70_TypeKind> _308517_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_308517_prefix;
	});
	_11a53f4f0_BinopSolver _308917_bs = _11a53f4f0_BinopSolver(this->self,jule::Ref<_11a53f4f0_Data>(),jule::Ref<_11a53f4f0_Data>(),_11911a8a0_Token());
	return _308917_bs._method_solve(_308434_op);
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_eval_expr_kind(jule::Any _309538_kind) {
	jule::Ref<_11a53f4f0_Data> _309617_d = jule::new_ref<_11a53f4f0_Data>();
	{
		auto &_match_expr{ _309538_kind };
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_LitExpr>>())) { goto _case_end_4771503440; }
		_case_begin_4771503440:;
		{
			_309617_d=this->self->_method_eval_lit(_309538_kind.operator jule::Ref<_118d9a790_LitExpr>());
		}
		goto _match_end_4771500784;
		_case_end_4771503440:;
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_IdentExpr>>())) { goto _case_end_4771502896; }
		_case_begin_4771502896:;
		{
			_309617_d=this->self->_method_eval_ident(_309538_kind.operator jule::Ref<_118d9a790_IdentExpr>());
		}
		goto _match_end_4771500784;
		_case_end_4771502896:;
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_UnaryExpr>>())) { goto _case_end_4771503008; }
		_case_begin_4771503008:;
		{
			_309617_d=this->self->_method_eval_unary(_309538_kind.operator jule::Ref<_118d9a790_UnaryExpr>());
		}
		goto _match_end_4771500784;
		_case_end_4771503008:;
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_VariadicExpr>>())) { goto _case_end_4771504000; }
		_case_begin_4771504000:;
		{
			_309617_d=this->self->_method_eval_variadic(_309538_kind.operator jule::Ref<_118d9a790_VariadicExpr>());
		}
		goto _match_end_4771500784;
		_case_end_4771504000:;
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_UnsafeExpr>>())) { goto _case_end_4771504112; }
		_case_begin_4771504112:;
		{
			_309617_d=this->self->_method_eval_unsafe(_309538_kind.operator jule::Ref<_118d9a790_UnsafeExpr>());
		}
		goto _match_end_4771500784;
		_case_end_4771504112:;
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_SliceExpr>>())) { goto _case_end_4771504224; }
		_case_begin_4771504224:;
		{
			_309617_d=this->self->_method_eval_slice_expr(_309538_kind.operator jule::Ref<_118d9a790_SliceExpr>());
		}
		goto _match_end_4771500784;
		_case_end_4771504224:;
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_IndexingExpr>>())) { goto _case_end_4771504336; }
		_case_begin_4771504336:;
		{
			_309617_d=this->self->_method_eval_indexing(_309538_kind.operator jule::Ref<_118d9a790_IndexingExpr>());
		}
		goto _match_end_4771500784;
		_case_end_4771504336:;
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_SlicingExpr>>())) { goto _case_end_4771504448; }
		_case_begin_4771504448:;
		{
			_309617_d=this->self->_method_eval_slicing(_309538_kind.operator jule::Ref<_118d9a790_SlicingExpr>());
		}
		goto _match_end_4771500784;
		_case_end_4771504448:;
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_CastExpr>>())) { goto _case_end_4771504560; }
		_case_begin_4771504560:;
		{
			_309617_d=this->self->_method_eval_cast(_309538_kind.operator jule::Ref<_118d9a790_CastExpr>());
		}
		goto _match_end_4771500784;
		_case_end_4771504560:;
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_NsSelectionExpr>>())) { goto _case_end_4771504672; }
		_case_begin_4771504672:;
		{
			_309617_d=this->self->_method_eval_ns_selection(_309538_kind.operator jule::Ref<_118d9a790_NsSelectionExpr>());
		}
		goto _match_end_4771500784;
		_case_end_4771504672:;
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_StructLit>>())) { goto _case_end_4771504784; }
		_case_begin_4771504784:;
		{
			_309617_d=this->self->_method_eval_struct_lit(_309538_kind.operator jule::Ref<_118d9a790_StructLit>());
		}
		goto _match_end_4771500784;
		_case_end_4771504784:;
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_TypeDecl>>())) { goto _case_end_4771504896; }
		_case_begin_4771504896:;
		{
			_309617_d=this->self->_method_eval_type(_309538_kind.operator jule::Ref<_118d9a790_TypeDecl>());
		}
		goto _match_end_4771500784;
		_case_end_4771504896:;
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_FnCallExpr>>())) { goto _case_end_4771505008; }
		_case_begin_4771505008:;
		{
			_309617_d=this->self->_method_eval_fn_call(_309538_kind.operator jule::Ref<_118d9a790_FnCallExpr>());
		}
		goto _match_end_4771500784;
		_case_end_4771505008:;
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_SubIdentExpr>>())) { goto _case_end_4771505120; }
		_case_begin_4771505120:;
		{
			_309617_d=this->self->_method_eval_sub_ident(_309538_kind.operator jule::Ref<_118d9a790_SubIdentExpr>());
		}
		goto _match_end_4771500784;
		_case_end_4771505120:;
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_TupleExpr>>())) { goto _case_end_4771505232; }
		_case_begin_4771505232:;
		{
			_309617_d=this->self->_method_eval_tuple(_309538_kind.operator jule::Ref<_118d9a790_TupleExpr>());
		}
		goto _match_end_4771500784;
		_case_end_4771505232:;
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_BraceLit>>())) { goto _case_end_4771505344; }
		_case_begin_4771505344:;
		{
			_309617_d=this->self->_method_eval_brace_lit(_309538_kind.operator jule::Ref<_118d9a790_BraceLit>());
		}
		goto _match_end_4771500784;
		_case_end_4771505344:;
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_FnDecl>>())) { goto _case_end_4771505456; }
		_case_begin_4771505456:;
		{
			_309617_d=this->self->_method_eval_anon_fn(_309538_kind.operator jule::Ref<_118d9a790_FnDecl>());
		}
		goto _match_end_4771500784;
		_case_end_4771505456:;
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_BinopExpr>>())) { goto _case_end_4771505568; }
		_case_begin_4771505568:;
		{
			_309617_d=this->self->_method_eval_binop(_309538_kind.operator jule::Ref<_118d9a790_BinopExpr>());
		}
		goto _match_end_4771500784;
		_case_end_4771505568:;
		_case_begin_4771501936:;
		{
			jule::drop(_309617_d);
		}
		goto _match_end_4771500784;
		_case_end_4771501936:;
		_match_end_4771500784:;
	}
	if ((!(jule::real(_309617_d)))) {
		return jule::new_ref<_11a53f4f0_Data>();
	}
	if ((!(jule::real(_309617_d->_field_kind)))) {
		return _309617_d;
	}
	if ((((!(jule::real(_309617_d->_field_cast_kind))) && _309617_d->_method_is_const()) && (!(_309617_d->_field_is_rune))) && jule::real(_309617_d->_field_kind->_method_prim())) {
		{
			if (!((_309617_d->_field_constant->_method_is_i64()))) { goto _case_end_4771546544; }
			_case_begin_4771546544:;
			{
				if (_11a21f8a0_int_assignable(jule::Str("int", 3),_309617_d)) {
					_309617_d->_field_kind->_field_kind=_11a3c2e70_build_prim_type(jule::Str("int", 3));
				}
			}
			goto _match_end_4771546304;
			_case_end_4771546544:;
			if (!((_309617_d->_field_constant->_method_is_u64()))) { goto _case_end_4771546656; }
			_case_begin_4771546656:;
			{
				if (_11a21f8a0_int_assignable(jule::Str("uint", 4),_309617_d)) {
					_309617_d->_field_kind->_field_kind=_11a3c2e70_build_prim_type(jule::Str("uint", 4));
				}
			}
			goto _match_end_4771546304;
			_case_end_4771546656:;
			_match_end_4771546304:;
		}
	}
	if ((!(_309617_d->_field_decl))) {
		if ((((((jule::real(this->self->_field_prefix) && (!(jule::real(_309617_d->_field_cast_kind)))) && (!(_309617_d->_field_variadiced))) && (!(_309617_d->_field_lvalue))) && (!(_309617_d->_method_is_const()))) && jule::real(_309617_d->_field_kind->_method_prim())) && _11ab8b300_is_num(_309617_d->_field_kind->_method_prim()->_field_kind)) {
			_309617_d->_field_cast_kind=_309617_d->_field_kind;
		}
		_11a53f4f0_apply_cast_kind(_309617_d);
		if ((!(jule::real(_309617_d->_field_kind->_method_prim()))) || (!(_309617_d->_field_kind->_method_prim()->_method_is_any()))) {
			if ((jule::real(this->self->_field_prefix) && jule::real(this->self->_field_prefix->_method_prim())) && this->self->_field_prefix->_method_prim()->_method_is_any()) {
				_309617_d->_field_cast_kind=this->self->_field_prefix;
				_11a53f4f0_apply_cast_kind_model(_309617_d);
				jule::drop(_309617_d->_field_cast_kind);
			}
		}
	}
	return _309617_d;
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_eval(jule::Ref<_118d9a790_Expr> _317128_expr) {
	jule::Ref<_11a53f4f0_Data> _317217_d = this->self->_method_eval_expr_kind(_317128_expr->_field_kind);
	if ((!(jule::real(_317217_d))) || (!(jule::real(_317217_d->_field_kind)))) {
		return jule::new_ref<_11a53f4f0_Data>();
	}
	{
		if (!((jule::real(_317217_d->_field_kind->_method_fnc())))) { goto _case_end_4771578144; }
		_case_begin_4771578144:;
		{
			jule::Ref<_119099250_FnIns> _317921_f = _317217_d->_field_kind->_method_fnc();
			if (_317921_f->_method_is_builtin()) {
				goto _match_end_4771577696;
			}
			if (_317921_f->_field_generics.len() != _317921_f->_field_decl->_field_generics.len()) {
				this->self->_field_s->_method_push_err(_317128_expr->_field_token,jule::Str("has_generics", 12),jule::Slice<jule::Any>({}));
			}
			if (_317921_f->_field_decl->_method_is_method()) {
				this->self->_field_s->_method_push_err(_317128_expr->_field_token,jule::Str("method_not_invoked", 18),jule::Slice<jule::Any>({}));
			}
		}
		goto _match_end_4771577696;
		_case_end_4771578144:;
		_match_end_4771577696:;
	}
	return _317217_d;
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_Eval::_method_eval_expr(jule::Ref<_118d9a790_Expr> _319933_expr) {
	jule::Ref<_11a53f4f0_Data> _320017_d = this->self->_method_eval(_319933_expr);
	{
		if (!(((!(jule::real(_320017_d)))))) { goto _case_end_4771597184; }
		_case_begin_4771597184:;
		{
			return jule::new_ref<_11a53f4f0_Data>();
		}
		goto _match_end_4771594656;
		_case_end_4771597184:;
		if (!((_320017_d->_field_decl))) { goto _case_end_4771597296; }
		_case_begin_4771597296:;
		{
			this->self->_method_push_err(_319933_expr->_field_token,jule::Str("invalid_expr", 12),jule::Slice<jule::Any>({}));
			return jule::new_ref<_11a53f4f0_Data>();
		}
		goto _match_end_4771594656;
		_case_end_4771597296:;
		_case_begin_4771594912:;
		{
			return _320017_d;
		}
		goto _match_end_4771594656;
		_case_end_4771594912:;
		_match_end_4771594656:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _11a53f4f0_Eval &_Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "owner:" << _Src._field_owner;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _11a3c2e70_TypeKind::_method_to_str(void) {
	if ((*this)._method_is_nil()) {
		return jule::Str("nil", 3);
	}
	if ((*this)._field_cpp_linked) {
		return jule::Str("cpp.", 4) + (*this)._field_cpp_ident;
	}
	return (*this)._field_kind.get()._method_to_str();
}



inline jule::Bool _11a3c2e70_TypeKind::_method_equals(jule::Ref<_11a3c2e70_TypeKind> _7121_other) {
	if ((*this)._method_is_nil()) {
		return _7121_other->_method_is_nil();
	}
	if ((*this)._field_cpp_linked) {
		if ((!(_7121_other->_field_cpp_linked))) {
			return false;
		}
		return (*this)._field_cpp_ident == _7121_other->_field_cpp_ident;
	}
	return (*this)._field_kind.get()._method_equals(_7121_other);
}



inline jule::Ref<_11a3c2e70_TypeKind> _11a3c2e70_TypeKind::_method_clone(void) {
	if ((!(jule::real(this->self)))) {
		return jule::new_ref<_11a3c2e70_TypeKind>();
	}
	jule::Ref<_11a3c2e70_TypeKind> _9417_kind = jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(this->self->_field_cpp_linked,this->self->_field_cpp_ident,this->self->_field_kind));
	return _9417_kind;
}



inline jule::Bool _11a3c2e70_TypeKind::_method_is_nil(void) {
	return (*this)._field_kind == nullptr;
}



inline jule::Bool _11a3c2e70_TypeKind::_method_is_void(void) {
	jule::Ref<_11a3c2e70_Prim> _10713_prim = (*((&((*this)))))._method_prim();
	return jule::real(_10713_prim) && (_10713_prim->_method_to_str() == jule::Str("void", 4));
}



inline jule::Ref<_11a3c2e70_Prim> _11a3c2e70_TypeKind::_method_prim(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_11a3c2e70_Prim>>())) { goto _case_end_4773221008; }
		_case_begin_4773221008:;
		{
			return (*this)._field_kind.operator jule::Ref<_11a3c2e70_Prim>();
		}
		goto _match_end_4773219040;
		_case_end_4773221008:;
		_case_begin_4773216352:;
		{
			return jule::new_ref<_11a3c2e70_Prim>();
		}
		goto _match_end_4773219040;
		_case_end_4773216352:;
		_match_end_4773219040:;
	}
}



inline jule::Ref<_11a3c2e70_Ref> _11a3c2e70_TypeKind::_method_ref(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_11a3c2e70_Ref>>())) { goto _case_end_4773225056; }
		_case_begin_4773225056:;
		{
			return (*this)._field_kind.operator jule::Ref<_11a3c2e70_Ref>();
		}
		goto _match_end_4773219904;
		_case_end_4773225056:;
		_case_begin_4773220384:;
		{
			return jule::new_ref<_11a3c2e70_Ref>();
		}
		goto _match_end_4773219904;
		_case_end_4773220384:;
		_match_end_4773219904:;
	}
}



inline jule::Ref<_11a3c2e70_Ptr> _11a3c2e70_TypeKind::_method_ptr(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_11a3c2e70_Ptr>>())) { goto _case_end_4773229216; }
		_case_begin_4773229216:;
		{
			return (*this)._field_kind.operator jule::Ref<_11a3c2e70_Ptr>();
		}
		goto _match_end_4773225664;
		_case_end_4773229216:;
		_case_begin_4773224336:;
		{
			return jule::new_ref<_11a3c2e70_Ptr>();
		}
		goto _match_end_4773225664;
		_case_end_4773224336:;
		_match_end_4773225664:;
	}
}



inline jule::Ref<_11a089b40_Enum> _11a3c2e70_TypeKind::_method_enm(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_11a089b40_Enum>>())) { goto _case_end_4773233136; }
		_case_begin_4773233136:;
		{
			return (*this)._field_kind.operator jule::Ref<_11a089b40_Enum>();
		}
		goto _match_end_4773229824;
		_case_end_4773233136:;
		_case_begin_4773228592:;
		{
			return jule::new_ref<_11a089b40_Enum>();
		}
		goto _match_end_4773229824;
		_case_end_4773228592:;
		_match_end_4773229824:;
	}
}



inline jule::Ref<_11a3c2e70_Arr> _11a3c2e70_TypeKind::_method_arr(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_11a3c2e70_Arr>>())) { goto _case_end_4773237008; }
		_case_begin_4773237008:;
		{
			return (*this)._field_kind.operator jule::Ref<_11a3c2e70_Arr>();
		}
		goto _match_end_4773233744;
		_case_end_4773237008:;
		_case_begin_4773232416:;
		{
			return jule::new_ref<_11a3c2e70_Arr>();
		}
		goto _match_end_4773233744;
		_case_end_4773232416:;
		_match_end_4773233744:;
	}
}



inline jule::Ref<_11a3c2e70_Slc> _11a3c2e70_TypeKind::_method_slc(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_11a3c2e70_Slc>>())) { goto _case_end_4773240928; }
		_case_begin_4773240928:;
		{
			return (*this)._field_kind.operator jule::Ref<_11a3c2e70_Slc>();
		}
		goto _match_end_4773237616;
		_case_end_4773240928:;
		_case_begin_4773236384:;
		{
			return jule::new_ref<_11a3c2e70_Slc>();
		}
		goto _match_end_4773237616;
		_case_end_4773236384:;
		_match_end_4773237616:;
	}
}



inline jule::Ref<_119099250_FnIns> _11a3c2e70_TypeKind::_method_fnc(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_119099250_FnIns>>())) { goto _case_end_4773244800; }
		_case_begin_4773244800:;
		{
			return (*this)._field_kind.operator jule::Ref<_119099250_FnIns>();
		}
		goto _match_end_4773241536;
		_case_end_4773244800:;
		_case_begin_4773240208:;
		{
			return jule::new_ref<_119099250_FnIns>();
		}
		goto _match_end_4773241536;
		_case_end_4773240208:;
		_match_end_4773241536:;
	}
}



inline jule::Ref<_118bb7d70_StructIns> _11a3c2e70_TypeKind::_method_strct(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_118bb7d70_StructIns>>())) { goto _case_end_4773248672; }
		_case_begin_4773248672:;
		{
			return (*this)._field_kind.operator jule::Ref<_118bb7d70_StructIns>();
		}
		goto _match_end_4773245408;
		_case_end_4773248672:;
		_case_begin_4773244176:;
		{
			return jule::new_ref<_118bb7d70_StructIns>();
		}
		goto _match_end_4773245408;
		_case_end_4773244176:;
		_match_end_4773245408:;
	}
}



inline jule::Ref<_118e2b060_Trait> _11a3c2e70_TypeKind::_method_trt(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_118e2b060_Trait>>())) { goto _case_end_4773252544; }
		_case_begin_4773252544:;
		{
			return (*this)._field_kind.operator jule::Ref<_118e2b060_Trait>();
		}
		goto _match_end_4773249280;
		_case_end_4773252544:;
		_case_begin_4773247952:;
		{
			return jule::new_ref<_118e2b060_Trait>();
		}
		goto _match_end_4773249280;
		_case_end_4773247952:;
		_match_end_4773249280:;
	}
}



inline jule::Ref<_11a3c2e70_Map> _11a3c2e70_TypeKind::_method_map(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_11a3c2e70_Map>>())) { goto _case_end_4773256416; }
		_case_begin_4773256416:;
		{
			return (*this)._field_kind.operator jule::Ref<_11a3c2e70_Map>();
		}
		goto _match_end_4773253152;
		_case_end_4773256416:;
		_case_begin_4773251920:;
		{
			return jule::new_ref<_11a3c2e70_Map>();
		}
		goto _match_end_4773253152;
		_case_end_4773251920:;
		_match_end_4773253152:;
	}
}



inline jule::Ref<_11a3c2e70_Tuple> _11a3c2e70_TypeKind::_method_tup(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_11a3c2e70_Tuple>>())) { goto _case_end_4773260336; }
		_case_begin_4773260336:;
		{
			return (*this)._field_kind.operator jule::Ref<_11a3c2e70_Tuple>();
		}
		goto _match_end_4773257024;
		_case_end_4773260336:;
		_case_begin_4773255696:;
		{
			return jule::new_ref<_11a3c2e70_Tuple>();
		}
		goto _match_end_4773257024;
		_case_end_4773255696:;
		_match_end_4773257024:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _11a3c2e70_TypeKind &_Src) {
	_Stream << "TypeKind{";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "cpp_ident:" << _Src._field_cpp_ident << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _11a3c2e70_TypeSymbol::_method_checked(void) {
	return jule::real((*this)._field_kind);
}



inline void _11a3c2e70_TypeSymbol::_method_remove_kind(void) {
	jule::drop((*this)._field_kind);
}







std::ostream &operator<<(std::ostream &_Stream, const _11a3c2e70_TypeSymbol &_Src) {
	_Stream << "TypeSymbol{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _11a3c2e70_Prim::_method_to_str(void) {
	return (*this)._field_kind;
}



inline jule::Bool _11a3c2e70_Prim::_method_equals(jule::Ref<_11a3c2e70_TypeKind> _22521_other) {
	jule::Ref<_11a3c2e70_Prim> _22613_prim = (_22521_other).alloc->_method_prim();
	if ((!(jule::real(_22613_prim)))) {
		return false;
	}
	return (*this)._field_kind == _22613_prim->_field_kind;
}



inline jule::Bool _11a3c2e70_Prim::_method_is_i8(void) {
	return (*this)._field_kind == jule::Str("i8", 2);
}



inline jule::Bool _11a3c2e70_Prim::_method_is_i16(void) {
	return (*this)._field_kind == jule::Str("i16", 3);
}



inline jule::Bool _11a3c2e70_Prim::_method_is_i32(void) {
	return (*this)._field_kind == jule::Str("i32", 3);
}



inline jule::Bool _11a3c2e70_Prim::_method_is_i64(void) {
	return (*this)._field_kind == jule::Str("i64", 3);
}



inline jule::Bool _11a3c2e70_Prim::_method_is_u8(void) {
	return (*this)._field_kind == jule::Str("u8", 2);
}



inline jule::Bool _11a3c2e70_Prim::_method_is_u16(void) {
	return (*this)._field_kind == jule::Str("u16", 3);
}



inline jule::Bool _11a3c2e70_Prim::_method_is_u32(void) {
	return (*this)._field_kind == jule::Str("u32", 3);
}



inline jule::Bool _11a3c2e70_Prim::_method_is_u64(void) {
	return (*this)._field_kind == jule::Str("u64", 3);
}



inline jule::Bool _11a3c2e70_Prim::_method_is_f32(void) {
	return (*this)._field_kind == jule::Str("f32", 3);
}



inline jule::Bool _11a3c2e70_Prim::_method_is_f64(void) {
	return (*this)._field_kind == jule::Str("f64", 3);
}



inline jule::Bool _11a3c2e70_Prim::_method_is_int(void) {
	return (*this)._field_kind == jule::Str("int", 3);
}



inline jule::Bool _11a3c2e70_Prim::_method_is_uint(void) {
	return (*this)._field_kind == jule::Str("uint", 4);
}



inline jule::Bool _11a3c2e70_Prim::_method_is_uintptr(void) {
	return (*this)._field_kind == jule::Str("uintptr", 7);
}



inline jule::Bool _11a3c2e70_Prim::_method_is_bool(void) {
	return (*this)._field_kind == jule::Str("bool", 4);
}



inline jule::Bool _11a3c2e70_Prim::_method_is_str(void) {
	return (*this)._field_kind == jule::Str("str", 3);
}



inline jule::Bool _11a3c2e70_Prim::_method_is_any(void) {
	return (*this)._field_kind == jule::Str("any", 3);
}







std::ostream &operator<<(std::ostream &_Stream, const _11a3c2e70_Prim &_Src) {
	_Stream << "Prim{";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _11a3c2e70_Ref::_method_to_str(void) {
	return jule::Str("&", 1) + (*this)._field_elem->_method_to_str();
}



inline jule::Bool _11a3c2e70_Ref::_method_equals(jule::Ref<_11a3c2e70_TypeKind> _29421_other) {
	jule::Ref<_11a3c2e70_Ref> _29513_ref = (_29421_other).alloc->_method_ref();
	if ((!(jule::real(_29513_ref)))) {
		return false;
	}
	return (*this)._field_elem->_method_equals(_29513_ref->_field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, const _11a3c2e70_Ref &_Src) {
	_Stream << "Ref{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _11a3c2e70_Slc::_method_to_str(void) {
	return jule::Str("[]", 2) + (*this)._field_elem->_method_to_str();
}



inline jule::Bool _11a3c2e70_Slc::_method_equals(jule::Ref<_11a3c2e70_TypeKind> _31321_other) {
	jule::Ref<_11a3c2e70_Slc> _31413_slc = (_31321_other).alloc->_method_slc();
	if ((!(jule::real(_31413_slc)))) {
		return false;
	}
	return (*this)._field_elem->_method_equals(_31413_slc->_field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, const _11a3c2e70_Slc &_Src) {
	_Stream << "Slc{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _11a3c2e70_Tuple::_method_to_str(void) {
	jule::Str _33017_s = jule::Str("(", 1);
	_33017_s+=(*this)._field_types[static_cast<jule::Int>(0LL)]->_method_to_str();
	{
		auto __julec_range_expr = (*this)._field_types.slice(static_cast<jule::Int>(1LL));
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11a3c2e70_TypeKind> _11a3c2e70_t = *__julec_range_begin;
			_iter_begin_4773323488:;
			{
				_33017_s+=jule::Str(",", 1);
				_33017_s+=_11a3c2e70_t->_method_to_str();
			}
			_iter_next_4773323488:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a3c2e70_t = *__julec_range_begin; goto _iter_begin_4773323488; }
			_iter_end_4773323488:;
		}
	}
	_33017_s+=jule::Str(")", 1);
	return _33017_s;
}



inline jule::Bool _11a3c2e70_Tuple::_method_equals(jule::Ref<_11a3c2e70_TypeKind> _34121_other) {
	jule::Ref<_11a3c2e70_Tuple> _34213_tup = (_34121_other).alloc->_method_tup();
	if ((!(jule::real(_34213_tup)))) {
		return false;
	}
	if ((*this)._field_types.len() != _34213_tup->_field_types.len()) {
		return false;
	}
	jule::Int _35117_i = 0LL;
	_iter_begin_4773331008:;
	if (!(_35117_i < (*this)._field_types.len())) { goto _iter_end_4773331008; }
	{
		if ((!((*this)._field_types[static_cast<jule::Int>(_35117_i)]->_method_equals(_34213_tup->_field_types[static_cast<jule::Int>(_35117_i)])))) {
			return false;
		}
	}
	_iter_next_4773331008:;
	(_35117_i)++;
	goto _iter_begin_4773331008;
	_iter_end_4773331008:;
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, const _11a3c2e70_Tuple &_Src) {
	_Stream << "Tuple{";
	_Stream << "types:" << _Src._field_types;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _11a3c2e70_Map::_method_to_str(void) {
	jule::Str _37117_s = jule::Str("[", 1);
	_37117_s+=(*this)._field_key->_method_to_str();
	_37117_s+=jule::Str(":", 1);
	_37117_s+=(*this)._field_val->_method_to_str();
	_37117_s+=jule::Str("]", 1);
	return _37117_s;
}



inline jule::Bool _11a3c2e70_Map::_method_equals(jule::Ref<_11a3c2e70_TypeKind> _38021_other) {
	jule::Ref<_11a3c2e70_Map> _38113_map = (_38021_other).alloc->_method_map();
	if ((!(jule::real(_38113_map)))) {
		return false;
	}
	return (*this)._field_key->_method_equals(_38113_map->_field_key) && (*this)._field_val->_method_equals(_38113_map->_field_val);
}







std::ostream &operator<<(std::ostream &_Stream, const _11a3c2e70_Map &_Src) {
	_Stream << "Map{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _11a3c2e70_Arr::_method_to_str(void) {
	jule::Str _39917_s = jule::Str("[", 1);
	_39917_s+=_10ff65780_itoa((*this)._field_n);
	_39917_s+=jule::Str("]", 1);
	_39917_s+=(*this)._field_elem->_method_to_str();
	return _39917_s;
}



inline jule::Bool _11a3c2e70_Arr::_method_equals(jule::Ref<_11a3c2e70_TypeKind> _40721_other) {
	jule::Ref<_11a3c2e70_Arr> _40813_arr = (_40721_other).alloc->_method_arr();
	if ((!(jule::real(_40813_arr)))) {
		return false;
	}
	return ((*this)._field_n == _40813_arr->_field_n) && (*this)._field_elem->_method_equals(_40813_arr->_field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, const _11a3c2e70_Arr &_Src) {
	_Stream << "Arr{";
	_Stream << "auto:" << _Src._field_auto << ", ";
	_Stream << "n:" << _Src._field_n << ", ";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _11a3c2e70_Ptr::_method_to_str(void) {
	if ((*this)._method_is_unsafe()) {
		return jule::Str("*unsafe", 7);
	}
	return jule::Str("*", 1) + (*this)._field_elem->_method_to_str();
}



inline jule::Bool _11a3c2e70_Ptr::_method_equals(jule::Ref<_11a3c2e70_TypeKind> _43121_other) {
	jule::Ref<_11a3c2e70_Ptr> _43213_ptr = (_43121_other).alloc->_method_ptr();
	if ((!(jule::real(_43213_ptr)))) {
		return false;
	}
	return (*this)._field_elem->_method_equals(_43213_ptr->_field_elem);
}



inline jule::Bool _11a3c2e70_Ptr::_method_is_unsafe(void) {
	return (!(jule::real((*this)._field_elem)));
}







std::ostream &operator<<(std::ostream &_Stream, const _11a3c2e70_Ptr &_Src) {
	_Stream << "Ptr{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11a3c2e70_Referencer &_Src) {
	_Stream << "Referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_11a0945e0_ImportInfo> _118d6ac90_PlainImporter::_method_get_import(jule::Str _9929_path) {
	{
		auto &__julec_range_expr = (*this)._field_all_packages;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11a0945e0_ImportInfo> _118d6ac90_p = *__julec_range_begin;
			_iter_begin_5099601792:;
			{
				if (_118d6ac90_p->_field_path == _9929_path) {
					return _118d6ac90_p;
				}
			}
			_iter_next_5099601792:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _118d6ac90_p = *__julec_range_begin; goto _iter_begin_5099601792; }
			_iter_end_5099601792:;
		}
	}
	return jule::new_ref<_11a0945e0_ImportInfo>();
}



inline std::tuple<jule::Slice<jule::Ref<_118d8a140_Ast>>,jule::Slice<_13fe81720_Log>> _118d6ac90_PlainImporter::_method_import_package(jule::Str _10933_path) {
	jule::Slice<jule::Ref<_118d9e870_DirEntry>> _11014_dirents;
	jule::Str _11023_err_msg;
	std::tie(_11014_dirents,_11023_err_msg) = _118d6ac90_read_package_dirents(_10933_path);
	if (_11023_err_msg != jule::Str("", 0)) {
		jule::Slice<_13fe81720_Log> _11221_errors = jule::Slice<_13fe81720_Log>({_118d6ac90_flat_compiler_err(_11023_err_msg)});
		return std::make_tuple(nullptr,_11221_errors);
	}
	jule::Slice<jule::Ref<_118d8a140_Ast>> _11617_asts = nullptr;
	{
		auto &__julec_range_expr = _11014_dirents;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_118d9e870_DirEntry> _118d6ac90_dirent = *__julec_range_begin;
			_iter_begin_5099607312:;
			{
				jule::Str _11817_path = _1410391e0_join(jule::Slice<jule::Str>({_10933_path,_118d6ac90_dirent->_field_name}));
				jule::Ref<_118d9a520_File> _11921_file = _118d9a520_new_file_set(_11817_path);
				jule::Slice<_13fe81720_Log> _12021_errors = _11916a220_lex(_11921_file,_118d6ac90_read_buff(_11921_file->_method_path()));
				if (_12021_errors.len() > 0LL) {
					return std::make_tuple(nullptr,_12021_errors);
				}
				jule::Ref<_118da92c0_FileInfo> _12521_finfo = _118da92c0_parse_file(_11921_file);
				if (_12521_finfo->_field_errors.len() > 0LL) {
					return std::make_tuple(nullptr,_12521_finfo->_field_errors);
				}
				if ((!(_118d6ac90_is_pass_build_directives(_12521_finfo->_field_ast)))) {
					goto _iter_next_5099607312;
				}
				_11617_asts=append(_11617_asts,jule::Slice<jule::Ref<_118d8a140_Ast>>({_12521_finfo->_field_ast}));
			}
			_iter_next_5099607312:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _118d6ac90_dirent = *__julec_range_begin; goto _iter_begin_5099607312; }
			_iter_end_5099607312:;
		}
	}
	return std::make_tuple(_11617_asts,nullptr);
}



inline void _118d6ac90_PlainImporter::_method_imported(jule::Ref<_11a0945e0_ImportInfo> _14031_imp) {
	{
		auto &__julec_range_expr = (*this)._field_all_packages;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11a0945e0_ImportInfo> _118d6ac90_p = *__julec_range_begin;
			_iter_begin_5099636432:;
			{
				if ((_118d6ac90_p->_field_cpp_linked == _14031_imp->_field_cpp_linked) && (_118d6ac90_p->_field_link_path == _14031_imp->_field_link_path)) {
					return;
				}
			}
			_iter_next_5099636432:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _118d6ac90_p = *__julec_range_begin; goto _iter_begin_5099636432; }
			_iter_end_5099636432:;
		}
	}
	(*this)._field_all_packages=append((*this)._field_all_packages,jule::Slice<jule::Ref<_11a0945e0_ImportInfo>>({_14031_imp}));
}







std::ostream &operator<<(std::ostream &_Stream, const _118d6ac90_PlainImporter &_Src) {
	_Stream << "PlainImporter{";
	_Stream << "all_packages:" << _Src._field_all_packages;
	_Stream << "}";
	return _Stream;
}



inline void _10fee6360_IR::_method_append_structs(jule::Ref<_11a0945e0_Package> _2433_p,jule::Slice<jule::Ref<_118bb7d70_Struct>>& _2451_buffer) {
	{
		auto &__julec_range_expr = _2433_p->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11a3c2dc0_SymbolTable> _10fee6360_f = *__julec_range_begin;
			_iter_begin_5099698560:;
			{
				jule::Int _2621_i = 0LL;
				_iter_begin_5099700864:;
				if (!(_2621_i < _10fee6360_f->_field_structs._method_len())) { goto _iter_end_5099700864; }
				{
					jule::Ref<_118bb7d70_Struct> _2825_s = _10fee6360_f->_field_structs._method_at(_2621_i);
					if ((!(_2825_s->_field_cpp_linked))) {
						_2451_buffer=append(_2451_buffer,jule::Slice<jule::Ref<_118bb7d70_Struct>>({_2825_s}));
					}
				}
				_iter_next_5099700864:;
				(_2621_i)++;
				goto _iter_begin_5099700864;
				_iter_end_5099700864:;
			}
			_iter_next_5099698560:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10fee6360_f = *__julec_range_begin; goto _iter_begin_5099698560; }
			_iter_end_5099698560:;
		}
	}
}



inline jule::Slice<jule::Ref<_118bb7d70_Struct>> _10fee6360_IR::_method_get_all_structures(void) {
	jule::Slice<jule::Ref<_118bb7d70_Struct>> _3917_buffer = nullptr;
	(*this)._method_append_structs((*this)._field_main,_3917_buffer);
	{
		auto &__julec_range_expr = (*this)._field_used;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11a0945e0_ImportInfo> _10fee6360_u = *__julec_range_begin;
			_iter_begin_5099712112:;
			{
				if ((!(_10fee6360_u->_field_cpp_linked))) {
					(*this)._method_append_structs(_10fee6360_u->_field_package,_3917_buffer);
				}
			}
			_iter_next_5099712112:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10fee6360_u = *__julec_range_begin; goto _iter_begin_5099712112; }
			_iter_end_5099712112:;
		}
	}
	return _3917_buffer;
}



inline void _10fee6360_IR::_method_append_vars(jule::Ref<_11a0945e0_Package> _5230_p,jule::Slice<jule::Ref<_11a245f20_Var>>& _5248_buffer) {
	{
		auto &__julec_range_expr = _5230_p->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11a3c2dc0_SymbolTable> _10fee6360_f = *__julec_range_begin;
			_iter_begin_5099718800:;
			{
				jule::Int _5421_i = 0LL;
				_iter_begin_5099721104:;
				if (!(_5421_i < _10fee6360_f->_field_vars._method_len())) { goto _iter_end_5099721104; }
				{
					jule::Ref<_11a245f20_Var> _5625_v = _10fee6360_f->_field_vars._method_at(_5421_i);
					if ((!(_5625_v->_field_cpp_linked))) {
						_5248_buffer=append(_5248_buffer,jule::Slice<jule::Ref<_11a245f20_Var>>({_5625_v}));
					}
				}
				_iter_next_5099721104:;
				(_5421_i)++;
				goto _iter_begin_5099721104;
				_iter_end_5099721104:;
			}
			_iter_next_5099718800:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10fee6360_f = *__julec_range_begin; goto _iter_begin_5099718800; }
			_iter_end_5099718800:;
		}
	}
}



inline jule::Slice<jule::Ref<_11a245f20_Var>> _10fee6360_IR::_method_get_all_variables(void) {
	jule::Slice<jule::Ref<_11a245f20_Var>> _6717_buffer = nullptr;
	(*this)._method_append_vars((*this)._field_main,_6717_buffer);
	{
		auto &__julec_range_expr = (*this)._field_used;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11a0945e0_ImportInfo> _10fee6360_u = *__julec_range_begin;
			_iter_begin_5099732352:;
			{
				if ((!(_10fee6360_u->_field_cpp_linked))) {
					(*this)._method_append_vars(_10fee6360_u->_field_package,_6717_buffer);
				}
			}
			_iter_next_5099732352:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10fee6360_u = *__julec_range_begin; goto _iter_begin_5099732352; }
			_iter_end_5099732352:;
		}
	}
	return _6717_buffer;
}







std::ostream &operator<<(std::ostream &_Stream, const _10fee6360_IR &_Src) {
	_Stream << "IR{";
	_Stream << "passes:" << _Src._field_passes << ", ";
	_Stream << "main:" << _Src._field_main << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}



inline void _10fea5860_ScopeDeadCode::_method_optimize_child(jule::Ref<_11a093930_Scope> _2138_s) {
	jule::Ref<_10fea5860_ScopeDeadCode> _2217_sdc = jule::new_struct<_10fea5860_ScopeDeadCode>(new( std::nothrow ) _10fea5860_ScopeDeadCode(this->self,_2138_s,(&(_2138_s->_field_stmts)),jule::Int()));
	{
		_2217_sdc->_method_optimize_stmts();
	}
}



inline void _10fea5860_ScopeDeadCode::_method_eliminate_followed(void) {
	(*this)._field_stmts->_method_remove_range((*this)._field_i + 1LL,static_cast<jule::Int>(((*this)._field_stmts->_method_len() - (*this)._field_i) - 1LL));
	jule::Ref<_10fea5860_ScopeDeadCode> _3217_parent = (*this)._field_parent;
	_iter_begin_5099957712:;
	if (!(jule::real(_3217_parent))) { goto _iter_end_5099957712; }
	{
		_3217_parent->_field_stmts->_method_remove_range(_3217_parent->_field_i + 1LL,static_cast<jule::Int>((_3217_parent->_field_stmts->_method_len() - _3217_parent->_field_i) - 1LL));
		_3217_parent=_3217_parent->_field_parent;
	}
	_iter_next_5099957712:;
	goto _iter_begin_5099957712;
	_iter_end_5099957712:;
}



inline void _10fea5860_ScopeDeadCode::_method_optimize_stmt(jule::Any _3944_st) {
	{
		auto &_match_expr{ _3944_st };
		if (!(_match_expr.type_is<jule::Ref<_11a093930_Scope>>())) { goto _case_end_5099964976; }
		_case_begin_5099964976:;
		{
			jule::Ref<_11a093930_Scope> _4221_scope = _3944_st.operator jule::Ref<_11a093930_Scope>();
			if (_4221_scope->_field_deferred) {
				_10fea5860_eliminate_dead_code_of_scope(_4221_scope);
			} else {
				this->self->_method_optimize_child(_4221_scope);
			}
		}
		goto _match_end_5099964608;
		_case_end_5099964976:;
		if (!(_match_expr.type_is<jule::Ref<_11a093930_RetSt>>())) { goto _case_end_5099965088; }
		_case_begin_5099965088:;
		{
			this->self->_method_eliminate_followed();
		}
		goto _match_end_5099964608;
		_case_end_5099965088:;
		_match_end_5099964608:;
	}
}



inline void _10fea5860_ScopeDeadCode::_method_optimize_stmts(void) {
	this->self->_field_i=0LL;
	_iter_begin_5099966592:;
	if (!(this->self->_field_i < this->self->_field_stmts->_method_len())) { goto _iter_end_5099966592; }
	{
		this->self->_method_optimize_stmt(this->self->_field_stmts->_method_at(this->self->_field_i));
	}
	_iter_next_5099966592:;
	(this->self->_field_i)++;
	goto _iter_begin_5099966592;
	_iter_end_5099966592:;
}







std::ostream &operator<<(std::ostream &_Stream, const _10fea5860_ScopeDeadCode &_Src) {
	_Stream << "ScopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _11909cfa0_IndexRangeSetter::_method_setup_vars(jule::Ref<_11a245f20_Var> _4429_key_a,jule::Ref<_11a245f20_Var> _4446_key_b) {
	jule::Str _4513_indent = _11a1c3f00_indent();
	jule::Str _4717_obj = jule::Str("", 0);
	if (jule::real(_4429_key_a)) {
		_4717_obj+=_11a1c3f00_gen_var_init_expr(_4429_key_a,jule::Str("0", 1));
		_4717_obj+=jule::Str("\n", 1);
		_4717_obj+=_4513_indent;
	}
	if (jule::real(_4446_key_b)) {
		_4717_obj+=_11a1c3f00_gen_var_init_expr(_4446_key_b,jule::Str("*__julec_range_begin", 20));
		_4717_obj+=jule::Str("\n", 1);
		_4717_obj+=_4513_indent;
	}
	return _4717_obj;
}



inline jule::Str _11909cfa0_IndexRangeSetter::_method_next_steps(jule::Ref<_11a245f20_Var> _6329_key_a,jule::Ref<_11a245f20_Var> _6346_key_b,jule::Str _6359_begin) {
	jule::Str _6413_indent = _11a1c3f00_indent();
	jule::Str _6617_obj = jule::Str("++__julec_range_begin;\n", 23);
	_6617_obj+=_6413_indent;
	_6617_obj+=jule::Str("if (__julec_range_begin != __julec_range_end) { ", 48);
	if (jule::real(_6329_key_a)) {
		_6617_obj+=(jule::Str("++", 2) + _11ae60410_var_out_ident(_6329_key_a)) + jule::Str("; ", 2);
	}
	if (jule::real(_6346_key_b)) {
		_6617_obj+=_11ae60410_var_out_ident(_6346_key_b) + jule::Str(" = *__julec_range_begin; ", 25);
	}
	_6617_obj+=(jule::Str("goto ", 5) + _6359_begin) + jule::Str("; }\n", 4);
	return _6617_obj;
}







std::ostream &operator<<(std::ostream &_Stream, const _11909cfa0_IndexRangeSetter &_Src) {
	_Stream << "IndexRangeSetter{";
	_Stream << "}";
	return _Stream;
}



inline jule::Str _11909cfa0_MapRangeSetter::_method_setup_vars(jule::Ref<_11a245f20_Var> _8529_key_a,jule::Ref<_11a245f20_Var> _8546_key_b) {
	jule::Str _8613_indent = _11a1c3f00_indent();
	jule::Str _8717_obj = jule::Str("", 0);
	if (jule::real(_8529_key_a)) {
		_8717_obj+=_11a1c3f00_gen_var_init_expr(_8529_key_a,jule::Str("__julec_range_begin->first", 26));
		_8717_obj+=jule::Str("\n", 1);
		_8717_obj+=_8613_indent;
	}
	if (jule::real(_8546_key_b)) {
		_8717_obj+=_11a1c3f00_gen_var_init_expr(_8546_key_b,jule::Str("__julec_range_begin->second", 27));
		_8717_obj+=jule::Str("\n", 1);
		_8717_obj+=_8613_indent;
	}
	return _8717_obj;
}



inline jule::Str _11909cfa0_MapRangeSetter::_method_next_steps(jule::Ref<_11a245f20_Var> _10429_key_a,jule::Ref<_11a245f20_Var> _10446_key_b,jule::Str _10459_begin) {
	jule::Str _10513_indent = _11a1c3f00_indent();
	jule::Str _10717_obj = jule::Str("++__julec_range_begin;\n", 23);
	_10717_obj+=_10513_indent;
	_10717_obj+=jule::Str("if (__julec_range_begin != __julec_range_end) { ", 48);
	if (jule::real(_10429_key_a)) {
		_10717_obj+=_11ae60410_var_out_ident(_10429_key_a);
		_10717_obj+=jule::Str(" = __julec_range_begin->first; ", 31);
	}
	if (jule::real(_10446_key_b)) {
		_10717_obj+=_11ae60410_var_out_ident(_10446_key_b);
		_10717_obj+=jule::Str(" = __julec_range_begin->second; ", 32);
	}
	_10717_obj+=(jule::Str("goto ", 5) + _10459_begin) + jule::Str("; }\n", 4);
	return _10717_obj;
}







std::ostream &operator<<(std::ostream &_Stream, const _11909cfa0_MapRangeSetter &_Src) {
	_Stream << "MapRangeSetter{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11a1c3f00_OrderedDecls &_Src) {
	_Stream << "OrderedDecls{";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "globals:" << _Src._field_globals;
	_Stream << "}";
	return _Stream;
}



inline void _11a3c2e70_TypeChecker::_method_push_err(_11911a8a0_Token _64527_token,jule::Str _64541_key,jule::Slice<jule::Any> _64551_args) {
	(*this)._field_s->_method_push_err(_64527_token,_64541_key,_64551_args);
}



inline jule::Ref<_11a3c2e70_Prim> _11a3c2e70_TypeChecker::_method_build_prim(jule::Ref<_118d9a790_IdentTypeDecl> _64929_decl) {
	if ((!(_11a3c2e70_is_prim(_64929_decl->_field_ident)))) {
		(*this)._method_push_err((*this)._field_error_token,jule::Str("invalid_type", 12),jule::Slice<jule::Any>({}));
		return jule::new_ref<_11a3c2e70_Prim>();
	}
	if (_64929_decl->_field_generics.len() > 0LL) {
		(*this)._method_push_err(_64929_decl->_field_token,jule::Str("type_not_supports_generics", 26),jule::Slice<jule::Any>({jule::Any(_64929_decl->_field_ident)}));
		return jule::new_ref<_11a3c2e70_Prim>();
	}
	return _11a3c2e70_build_prim_type(_64929_decl->_field_ident);
}



inline void _11a3c2e70_TypeChecker::_method_push_cycle_error(jule::Any _66331_def1,jule::Any _66342_def2,jule::Str& _66358_message) {
	
	jule::Fn<jule::Str(jule::Any&)> _66613_get_ident = jule::Fn<jule::Str(jule::Any&)>([=](jule::Any& _66629_def) mutable -> jule::Str {
		{
			auto &_match_expr{ _66629_def };
			if (!(_match_expr.type_is<jule::Ref<_11a3c2e70_TypeAlias>>())) { goto _case_end_4773406608; }
			_case_begin_4773406608:;
			{
				return _66629_def.operator jule::Ref<_11a3c2e70_TypeAlias>()->_field_ident;
			}
			goto _match_end_4773404944;
			_case_end_4773406608:;
			if (!(_match_expr.type_is<jule::Ref<_118bb7d70_Struct>>())) { goto _case_end_4773406720; }
			_case_begin_4773406720:;
			{
				return _66629_def.operator jule::Ref<_118bb7d70_Struct>()->_field_ident;
			}
			goto _match_end_4773404944;
			_case_end_4773406720:;
			if (!(_match_expr.type_is<jule::Ref<_11a089b40_Enum>>())) { goto _case_end_4773407616; }
			_case_begin_4773407616:;
			{
				return _66629_def.operator jule::Ref<_11a089b40_Enum>()->_field_ident;
			}
			goto _match_end_4773404944;
			_case_end_4773407616:;
			_case_begin_4773405040:;
			{
				return jule::Str("", 0);
			}
			goto _match_end_4773404944;
			_case_end_4773405040:;
			_match_end_4773404944:;
		}
	});
	jule::Str _67513_def1_ident = _66613_get_ident(_66331_def1);
	jule::Str _67613_def2_ident = _66613_get_ident(_66342_def2);
	jule::Str _67713_refers_to = _13fe9efa0_errorf(jule::Str("refers_to", 9),jule::Slice<jule::Any>({jule::Any(_67513_def1_ident),jule::Any(_67613_def2_ident)}));
	_66358_message=((_13feceeb0_str_repeat(jule::Str(" ", 1),4LL) + _67713_refers_to) + jule::Str("\n", 1)) + _66358_message;
}



inline jule::Bool _11a3c2e70_TypeChecker::_method_check_cross_cycle(jule::Any _68132_decl,jule::Str& _68148_message) {
	{
		auto &_match_expr{ _68132_decl };
		if (!(_match_expr.type_is<jule::Ref<_11a3c2e70_TypeAlias>>())) { goto _case_end_4773419776; }
		_case_begin_4773419776:;
		{
			jule::Ref<_11a3c2e70_TypeAlias> _68417_ta = _68132_decl.operator jule::Ref<_11a3c2e70_TypeAlias>();
			{
				auto &__julec_range_expr = _68417_ta->_field_refers;
				if (__julec_range_expr.begin() != __julec_range_expr.end()) {
					auto __julec_range_begin = __julec_range_expr.begin();
					const auto __julec_range_end = __julec_range_expr.end();
					jule::Any _11a3c2e70_d = *__julec_range_begin;
					_iter_begin_4773423824:;
					{
						if (_11a3c2e70_d == (*this)._field_referencer->_field_owner) {
							(*this)._method_push_cycle_error(jule::Any(_68417_ta),_11a3c2e70_d,_68148_message);
							return false;
						}
						if ((!((*this)._method_check_cross_cycle(_11a3c2e70_d,_68148_message)))) {
							(*this)._method_push_cycle_error(jule::Any(_68417_ta),_11a3c2e70_d,_68148_message);
							return false;
						}
					}
					_iter_next_4773423824:;
					++__julec_range_begin;
					if (__julec_range_begin != __julec_range_end) { _11a3c2e70_d = *__julec_range_begin; goto _iter_begin_4773423824; }
					_iter_end_4773423824:;
				}
			}
		}
		goto _match_end_4773419632;
		_case_end_4773419776:;
		if (!(_match_expr.type_is<jule::Ref<_118bb7d70_Struct>>())) { goto _case_end_4773420336; }
		_case_begin_4773420336:;
		{
			jule::Ref<_118bb7d70_Struct> _69817_s = _68132_decl.operator jule::Ref<_118bb7d70_Struct>();
			{
				auto &__julec_range_expr = _69817_s->_field_depends;
				if (__julec_range_expr.begin() != __julec_range_expr.end()) {
					auto __julec_range_begin = __julec_range_expr.begin();
					const auto __julec_range_end = __julec_range_expr.end();
					jule::Ref<_118bb7d70_Struct> _11a3c2e70_d = *__julec_range_begin;
					_iter_begin_4773433456:;
					{
						if ((*this)._field_referencer->_field_owner == _11a3c2e70_d) {
							(*this)._method_push_cycle_error(jule::Any(_69817_s),jule::Any(_11a3c2e70_d),_68148_message);
							return false;
						}
						if ((!((*this)._method_check_cross_cycle(jule::Any(_11a3c2e70_d),_68148_message)))) {
							(*this)._method_push_cycle_error(jule::Any(_69817_s),jule::Any(_11a3c2e70_d),_68148_message);
							return false;
						}
					}
					_iter_next_4773433456:;
					++__julec_range_begin;
					if (__julec_range_begin != __julec_range_end) { _11a3c2e70_d = *__julec_range_begin; goto _iter_begin_4773433456; }
					_iter_end_4773433456:;
				}
			}
		}
		goto _match_end_4773419632;
		_case_end_4773420336:;
		_match_end_4773419632:;
	}
	return true;
}



inline jule::Bool _11a3c2e70_TypeChecker::_method_check_illegal_cycles(jule::Ref<_118d9a790_IdentTypeDecl> _72039_ident,jule::Any _72066_decl) {
	jule::Bool _72079_ok = jule::Bool();
	if ((!(jule::real((*this)._field_referencer)))) {
		_72079_ok = true;
		return _72079_ok;
	}
	{
		auto &_match_expr{ _72066_decl };
		if (!(_match_expr.type_is<jule::Ref<_118bb7d70_Struct>>())) { goto _case_end_4773444848; }
		_case_begin_4773444848:;
		{
			if ((*this)._field_not_plain) {
				_72079_ok = true;
				return _72079_ok;
			}
		}
		goto _match_end_4773445904;
		_case_end_4773444848:;
		_match_end_4773445904:;
	}
	if ((*this)._field_referencer->_field_owner == _72066_decl) {
		(*this)._method_push_err(_72039_ident->_field_token,jule::Str("illegal_cycle_refers_itself", 27),jule::Slice<jule::Any>({jule::Any((*this)._field_referencer->_field_ident)}));
		_72079_ok = false;
		return _72079_ok;
	}
	jule::Str _73917_message = jule::Str("", 0);
	if ((!((*this)._method_check_cross_cycle(_72066_decl,_73917_message)))) {
		jule::Str _74221_err_msg = _73917_message;
		_73917_message=jule::Str("", 0);
		(*this)._method_push_cycle_error((*this)._field_referencer->_field_owner,_72066_decl,_73917_message);
		_74221_err_msg=_74221_err_msg + _73917_message;
		(*this)._method_push_err(_72039_ident->_field_token,jule::Str("illegal_cross_cycle", 19),jule::Slice<jule::Any>({jule::Any(_74221_err_msg)}));
		_72079_ok = false;
		return _72079_ok;
	}
	{
		auto &_match_expr{ (*this)._field_referencer->_field_owner };
		if (!(_match_expr.type_is<jule::Ref<_11a3c2e70_TypeAlias>>())) { goto _case_end_4773462672; }
		_case_begin_4773462672:;
		{
			{
				(*((*this)._field_referencer->_field_refs))=append((*((*this)._field_referencer->_field_refs)),jule::Slice<jule::Any>({_72066_decl}));
			}
		}
		goto _match_end_4773462176;
		_case_end_4773462672:;
		if (!(_match_expr.type_is<jule::Ref<_118bb7d70_Struct>>())) { goto _case_end_4773462800; }
		_case_begin_4773462800:;
		{
			{
				auto &_match_expr{ _72066_decl };
				if (!(_match_expr.type_is<jule::Ref<_118bb7d70_Struct>>())) { goto _case_end_4773463616; }
				_case_begin_4773463616:;
				{
					jule::Ref<_118bb7d70_Struct> _75725_s = (*this)._field_referencer->_field_owner.operator jule::Ref<_118bb7d70_Struct>();
					_75725_s->_field_depends=append(_75725_s->_field_depends,jule::Slice<jule::Ref<_118bb7d70_Struct>>({_72066_decl.operator jule::Ref<_118bb7d70_Struct>()}));
				}
				goto _match_end_4773465280;
				_case_end_4773463616:;
				_match_end_4773465280:;
			}
		}
		goto _match_end_4773462176;
		_case_end_4773462800:;
		_match_end_4773462176:;
	}
	_72079_ok = true;
	return _72079_ok;
}



inline jule::Trait<_11a3c2e70_Kind> _11a3c2e70_TypeChecker::_method_from_type_alias(jule::Ref<_118d9a790_IdentTypeDecl> _76534_decl,jule::Ref<_11a3c2e70_TypeAlias> _76560_ta) {
	if ((!((*this)._field_s->_method_is_accessible_define(_76560_ta->_field_public,_76560_ta->_field_token)))) {
		(*this)._method_push_err(_76534_decl->_field_token,jule::Str("ident_not_exist", 15),jule::Slice<jule::Any>({jule::Any(_76534_decl->_field_ident)}));
		return nullptr;
	}
	_76560_ta->_field_used=true;
	if (_76534_decl->_field_generics.len() > 0LL) {
		(*this)._method_push_err(_76534_decl->_field_token,jule::Str("type_not_supports_generics", 26),jule::Slice<jule::Any>({jule::Any(_76534_decl->_field_ident)}));
		return nullptr;
	}
	jule::Bool _77817_ok = (*this)._method_check_illegal_cycles(_76534_decl,jule::Any(_76560_ta));
	if ((!(_77817_ok))) {
		return nullptr;
	}
	_77817_ok=(*this)._field_s->_method_check_type_alias_decl_kind(_76560_ta,(*this)._field_lookup);
	if ((!(_77817_ok))) {
		return nullptr;
	}
	jule::Ref<_11a3c2e70_TypeKind> _78917_kind = _76560_ta->_field_kind->_field_kind->_method_clone();
	if (_76560_ta->_field_cpp_linked) {
		_78917_kind->_field_cpp_linked=true;
		_78917_kind->_field_cpp_ident=_76560_ta->_field_ident;
	}
	return _78917_kind;
}



inline jule::Ref<_11a089b40_Enum> _11a3c2e70_TypeChecker::_method_from_enum(jule::Ref<_118d9a790_IdentTypeDecl> _79928_decl,jule::Ref<_11a089b40_Enum> _79954_e) {
	if ((!((*this)._field_s->_method_is_accessible_define(_79954_e->_field_public,_79954_e->_field_token)))) {
		(*this)._method_push_err(_79928_decl->_field_token,jule::Str("ident_not_exist", 15),jule::Slice<jule::Any>({jule::Any(_79928_decl->_field_ident)}));
		return jule::new_ref<_11a089b40_Enum>();
	}
	if (_79928_decl->_field_generics.len() > 0LL) {
		(*this)._method_push_err(_79928_decl->_field_token,jule::Str("type_not_supports_generics", 26),jule::Slice<jule::Any>({jule::Any(_79928_decl->_field_ident)}));
		return jule::new_ref<_11a089b40_Enum>();
	}
	return _79954_e;
}



inline jule::Bool _11a3c2e70_TypeChecker::_method_check_struct_ins(jule::Ref<_118bb7d70_StructIns> _81339_ins,_11911a8a0_Token _81356_error_token) {
	jule::Bool _81378_ok = jule::Bool();
	if (_81339_ins->_field_checked) {
		_81378_ok = true;
		return _81378_ok;
	}
	_81339_ins->_field_checked=true;
	if (jule::real((*this)._field_referencer) && ((*this)._field_referencer->_field_owner == _81339_ins->_field_decl)) {
		_81378_ok = true;
		return _81378_ok;
	}
	jule::Ref<_11a3c2dc0_SymbolTable> _82717_old_file = (*this)._field_s->_field_file;
	__JULE_DEFER({
		(*this)._field_s->_method_set_current_file(_82717_old_file);
	});
	jule::Ref<_11a3c2dc0_SymbolTable> _83017_f = _11a096220_find_file((*this)._field_s->_field_files,_81339_ins->_field_decl->_field_token._field_file);
	if (jule::real(_83017_f)) {
		(*this)._field_s->_method_set_current_file(_83017_f);
	}
	jule::Ref<_11a3c2e70_Referencer> _83517_referencer = jule::new_struct<_11a3c2e70_Referencer>(new( std::nothrow ) _11a3c2e70_Referencer(_81339_ins->_field_decl->_field_ident,jule::Any(_81339_ins->_field_decl),nullptr));
	jule::Slice<jule::Ref<_11a3c2e70_TypeAlias>> _84017_generics = jule::Slice<jule::Ref<_11a3c2e70_TypeAlias>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_81339_ins->_field_generics.len())));
	{
		auto &__julec_range_expr = _81339_ins->_field_generics;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _11a3c2e70_i = 0;
			jule::Ref<_11a3c2e70_TypeKind> _11a3c2e70_g = *__julec_range_begin;
			_iter_begin_4773531456:;
			{
				_84017_generics[static_cast<jule::Int>(_11a3c2e70_i)]=jule::new_struct<_11a3c2e70_TypeAlias>(new( std::nothrow ) _11a3c2e70_TypeAlias(jule::Ref<_118d9a790_ScopeTree>(),jule::Bool(),jule::Bool(),jule::Bool(),_11911a8a0_Token(),_81339_ins->_field_decl->_field_generics[static_cast<jule::Int>(_11a3c2e70_i)]->_field_ident,jule::new_struct<_11a3c2e70_TypeSymbol>(new( std::nothrow ) _11a3c2e70_TypeSymbol(jule::Ref<_118d9a790_TypeDecl>(),_11a3c2e70_g)),jule::Str(),jule::Slice<jule::Any>()));
			}
			_iter_next_4773531456:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_11a3c2e70_i; _11a3c2e70_g = *__julec_range_begin; goto _iter_begin_4773531456; }
			_iter_end_4773531456:;
		}
	}
	jule::Ref<_11a3c2dc0_SymbolTable> _85017_old_sema_file = _81339_ins->_field_decl->_field_sema->_field_file;
	__JULE_DEFER({
		_81339_ins->_field_decl->_field_sema->_method_set_current_file(_85017_old_sema_file);
	});
	_11a3c2e70_TypeChecker _85317_tc = _11a3c2e70_TypeChecker(_81339_ins->_field_decl->_field_sema,_81339_ins->_field_decl->_field_sema,_83517_referencer,_11911a8a0_Token(),jule::Slice<jule::Ref<_118d9a790_GenericDecl>>(),_84017_generics,jule::Bool());
	{
		auto &__julec_range_expr = _81339_ins->_field_fields;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_118bb7d70_FieldIns> _11a3c2e70_f = *__julec_range_begin;
			_iter_begin_4770059168:;
			{
				jule::Ref<_11a3c2e70_TypeKind> _86221_kind = _85317_tc._method_check_decl(_11a3c2e70_f->_field_decl->_field_kind->_field_decl);
				_81378_ok=jule::real(_86221_kind);
				if ((jule::real(_81339_ins->_field_decl->_field_sema) && ((*this)._field_s != _81339_ins->_field_decl->_field_sema)) && (_81339_ins->_field_decl->_field_sema->_field_errors.len() > 0LL)) {
					(*this)._field_s->_field_errors=append((*this)._field_s->_field_errors,_81339_ins->_field_decl->_field_sema->_field_errors);
				}
				if ((!(_81378_ok))) {
					_81378_ok = false;
					return _81378_ok;
				}
				_11a3c2e70_f->_field_kind=_86221_kind;
				if (_11a3c2e70_is_mut(_11a3c2e70_f->_field_kind)) {
					_81339_ins->_field_has_mut=true;
					(*this)._field_s->_method_check_struct_ins_derive_clone(_81339_ins);
				}
			}
			_iter_next_4770059168:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a3c2e70_f = *__julec_range_begin; goto _iter_begin_4770059168; }
			_iter_end_4770059168:;
		}
	}
	if (_81339_ins->_field_generics.len() > 0LL) {
		{
			auto &__julec_range_expr = _81339_ins->_field_methods;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_119099250_Fn> _11a3c2e70_m = *__julec_range_begin;
				_iter_begin_4770077728:;
				{
					if (_11a3c2e70_m->_field_generics.len() > 0LL) {
						goto _iter_next_4770077728;
					}
					(*this)._field_s->_method_check_type_method(_81339_ins,_11a3c2e70_m);
				}
				_iter_next_4770077728:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _11a3c2e70_m = *__julec_range_begin; goto _iter_begin_4770077728; }
				_iter_end_4770077728:;
			}
		}
	}
	_81378_ok = true;
	return _81378_ok;
}



inline void _11a3c2e70_TypeChecker::_method_append_used_struct_reference(jule::Ref<_118bb7d70_Struct> _89451_s) {
	if ((!(jule::real((*this)._field_referencer)))) {
		return;
	}
	{
		auto &_match_expr{ (*this)._field_referencer->_field_owner };
		if (!(_match_expr.type_is<jule::Ref<_118bb7d70_Struct>>())) { goto _case_end_4770089872; }
		_case_begin_4770089872:;
		{
			jule::Ref<_118bb7d70_Struct> _90121_ref_s = (*this)._field_referencer->_field_owner.operator jule::Ref<_118bb7d70_Struct>();
			if ((!(_90121_ref_s->_method_is_uses(_89451_s)))) {
				_90121_ref_s->_field_uses=append(_90121_ref_s->_field_uses,jule::Slice<jule::Ref<_118bb7d70_Struct>>({_89451_s}));
			}
		}
		goto _match_end_4770088784;
		_case_end_4770089872:;
		_match_end_4770088784:;
	}
}



inline jule::Ref<_118bb7d70_StructIns> _11a3c2e70_TypeChecker::_method_from_struct(jule::Ref<_118d9a790_IdentTypeDecl> _90834_decl,jule::Ref<_118bb7d70_Struct> _90860_s) {
	if ((!((*this)._field_s->_method_is_accessible_define(_90860_s->_field_public,_90860_s->_field_token)))) {
		(*this)._method_push_err(_90834_decl->_field_token,jule::Str("ident_not_exist", 15),jule::Slice<jule::Any>({jule::Any(_90834_decl->_field_ident)}));
		return jule::new_ref<_118bb7d70_StructIns>();
	}
	if ((*this)._field_ignore_generics.len() > 0LL) {
		return jule::new_ref<_118bb7d70_StructIns>();
	}
	jule::Bool _91917_ok = (*this)._field_not_plain || (*this)._method_check_illegal_cycles(_90834_decl,jule::Any(_90860_s));
	if ((!(_91917_ok))) {
		return jule::new_ref<_118bb7d70_StructIns>();
	}
	(*this)._method_append_used_struct_reference(_90860_s);
	jule::Ref<_118bb7d70_StructIns> _92517_ins = _90860_s->_method_instance();
	_92517_ins->_field_generics=jule::Slice<jule::Ref<_11a3c2e70_TypeKind>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_90834_decl->_field_generics.len())));
	jule::Ref<_11a3c2e70_Referencer> _92717_referencer = (*this)._field_referencer;
	jule::drop((*this)._field_referencer);
	{
		auto &__julec_range_expr = _90834_decl->_field_generics;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _11a3c2e70_i = 0;
			jule::Ref<_118d9a790_TypeDecl> _11a3c2e70_g = *__julec_range_begin;
			_iter_begin_4770118480:;
			{
				jule::Ref<_11a3c2e70_TypeKind> _93021_kind = (*this)._method_build(_11a3c2e70_g->_field_kind);
				if ((!(jule::real(_93021_kind)))) {
					_91917_ok=false;
					goto _iter_next_4770118480;
				}
				_92517_ins->_field_generics[static_cast<jule::Int>(_11a3c2e70_i)]=_93021_kind;
			}
			_iter_next_4770118480:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_11a3c2e70_i; _11a3c2e70_g = *__julec_range_begin; goto _iter_begin_4770118480; }
			_iter_end_4770118480:;
		}
	}
	(*this)._field_referencer=_92717_referencer;
	if ((!(_91917_ok))) {
		return jule::new_ref<_118bb7d70_StructIns>();
	}
	_91917_ok=(*this)._field_s->_method_check_generic_quantity(static_cast<jule::I64>(_92517_ins->_field_decl->_field_generics.len()),static_cast<jule::I64>(_92517_ins->_field_generics.len()),_90834_decl->_field_token);
	if ((!(_91917_ok))) {
		return jule::new_ref<_118bb7d70_StructIns>();
	}
	jule::Ref<_118bb7d70_StructIns> _94917_exist_instance = _90860_s->_method_append_instance(_92517_ins);
	if (jule::real(_94917_exist_instance)) {
		return _94917_exist_instance;
	}
	_91917_ok=(*this)._method_check_struct_ins(_92517_ins,_90834_decl->_field_token);
	if ((!(_91917_ok))) {
		return jule::new_ref<_118bb7d70_StructIns>();
	}
	return _92517_ins;
}



inline jule::Trait<_11a3c2e70_Kind> _11a3c2e70_TypeChecker::_method_get_def(jule::Ref<_118d9a790_IdentTypeDecl> _96430_decl) {
	{
		auto &__julec_range_expr = (*this)._field_ignore_generics;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_118d9a790_GenericDecl> _11a3c2e70_g = *__julec_range_begin;
			_iter_begin_4770141360:;
			{
				if (_11a3c2e70_g->_field_ident == _96430_decl->_field_ident) {
					return _11a3c2e70_build_prim_type(_11a3c2e70_g->_field_ident);
				}
			}
			_iter_next_4770141360:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a3c2e70_g = *__julec_range_begin; goto _iter_begin_4770141360; }
			_iter_end_4770141360:;
		}
	}
	{
		auto &__julec_range_expr = (*this)._field_use_generics;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11a3c2e70_TypeAlias> _11a3c2e70_g = *__julec_range_begin;
			_iter_begin_4770142832:;
			{
				if (_11a3c2e70_g->_field_ident == _96430_decl->_field_ident) {
					jule::Ref<_118bb7d70_StructIns> _97325_st = _11a3c2e70_g->_field_kind->_field_kind->_method_strct();
					if (jule::real(_97325_st)) {
						jule::Bool _97525_ok = (*this)._method_check_illegal_cycles(_96430_decl,jule::Any(_97325_st->_field_decl));
						if ((!(_97525_ok))) {
							return nullptr;
						}
					}
					return _11a3c2e70_g->_field_kind->_field_kind->_field_kind;
				}
			}
			_iter_next_4770142832:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a3c2e70_g = *__julec_range_begin; goto _iter_begin_4770142832; }
			_iter_end_4770142832:;
		}
	}
	if ((!(_96430_decl->_field_cpp_linked))) {
		jule::Ref<_11a089b40_Enum> _98521_e = (*this)._field_lookup.get()._method_find_enum(_96430_decl->_field_ident);
		if (jule::real(_98521_e)) {
			return (*this)._method_from_enum(_96430_decl,_98521_e);
		}
		jule::Ref<_118e2b060_Trait> _99021_t = (*this)._field_lookup.get()._method_find_trait(_96430_decl->_field_ident);
		if ((!(jule::real(_99021_t)))) {
			_99021_t=_11aa913b0_find_builtin_trait(_96430_decl->_field_ident);
		}
		if (jule::real(_99021_t)) {
			if ((!((*this)._field_s->_method_is_accessible_define(_99021_t->_field_public,_99021_t->_field_token)))) {
				(*this)._method_push_err(_96430_decl->_field_token,jule::Str("ident_not_exist", 15),jule::Slice<jule::Any>({jule::Any(_96430_decl->_field_ident)}));
				return nullptr;
			}
			if (_96430_decl->_field_generics.len() > 0LL) {
				(*this)._method_push_err(_96430_decl->_field_token,jule::Str("type_not_supports_generics", 26),jule::Slice<jule::Any>({jule::Any(_96430_decl->_field_ident)}));
				return nullptr;
			}
			return _99021_t;
		}
	}
	jule::Ref<_118bb7d70_Struct> _100817_s = (*this)._field_lookup.get()._method_find_struct(_96430_decl->_field_ident,_96430_decl->_field_cpp_linked);
	if (jule::real(_100817_s)) {
		return (*this)._method_from_struct(_96430_decl,_100817_s);
	}
	jule::Ref<_11a3c2e70_TypeAlias> _101317_ta = (*this)._field_lookup.get()._method_find_type_alias(_96430_decl->_field_ident,_96430_decl->_field_cpp_linked);
	if ((!(jule::real(_101317_ta)))) {
		_101317_ta=_11aa913b0_find_builtin_type_alias(_96430_decl->_field_ident);
	}
	if (jule::real(_101317_ta)) {
		return (*this)._method_from_type_alias(_96430_decl,_101317_ta);
	}
	(*this)._method_push_err(_96430_decl->_field_token,jule::Str("ident_not_exist", 15),jule::Slice<jule::Any>({jule::Any(_96430_decl->_field_ident)}));
	return nullptr;
}



inline jule::Trait<_11a3c2e70_Kind> _11a3c2e70_TypeChecker::_method_build_ident(jule::Ref<_118d9a790_IdentTypeDecl> _102534_decl) {
	{
		if (!((_11a3c2e70_is_prim(_102534_decl->_field_ident)))) { goto _case_end_4770189072; }
		_case_begin_4770189072:;
		{
			return (*this)._method_build_prim(_102534_decl);
		}
		goto _match_end_4770186576;
		_case_end_4770189072:;
		_case_begin_4770186784:;
		{
			return (*this)._method_get_def(_102534_decl);
		}
		goto _match_end_4770186576;
		_case_end_4770186784:;
		_match_end_4770186576:;
	}
}



inline jule::Ref<_11a3c2e70_Ref> _11a3c2e70_TypeChecker::_method_build_ref_from_type(jule::Ref<_11a3c2e70_TypeKind> _103242_elem) {
	{
		if (!(((!(jule::real(_103242_elem)))))) { goto _case_end_4770188464; }
		_case_begin_4770188464:;
		{
			return jule::new_ref<_11a3c2e70_Ref>();
		}
		goto _match_end_4770188144;
		_case_end_4770188464:;
		if (!((jule::real(_103242_elem->_method_strct())))) { goto _case_end_4770188576; }
		_case_begin_4770188576:;
		{
			jule::Ref<_118bb7d70_StructIns> _103917_s = _103242_elem->_method_strct();
			if (jule::real(_103917_s->_field_decl) && _103917_s->_field_decl->_field_cpp_linked) {
				(*this)._method_push_err((*this)._field_error_token,jule::Str("cpp_linked_struct_for_ref", 25),jule::Slice<jule::Any>({}));
				return jule::new_ref<_11a3c2e70_Ref>();
			}
		}
		goto _match_end_4770188144;
		_case_end_4770188576:;
		if (!((jule::real(_103242_elem->_method_ref())))) { goto _case_end_4770192544; }
		_case_begin_4770192544:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("ref_refs_ref", 12),jule::Slice<jule::Any>({}));
			return jule::new_ref<_11a3c2e70_Ref>();
		}
		goto _match_end_4770188144;
		_case_end_4770192544:;
		if (!((jule::real(_103242_elem->_method_ptr())))) { goto _case_end_4770192656; }
		_case_begin_4770192656:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("ref_refs_ptr", 12),jule::Slice<jule::Any>({}));
			return jule::new_ref<_11a3c2e70_Ref>();
		}
		goto _match_end_4770188144;
		_case_end_4770192656:;
		if (!((jule::real(_103242_elem->_method_enm())))) { goto _case_end_4770192768; }
		_case_begin_4770192768:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("ref_refs_enum", 13),jule::Slice<jule::Any>({}));
			return jule::new_ref<_11a3c2e70_Ref>();
		}
		goto _match_end_4770188144;
		_case_end_4770192768:;
		if (!((jule::real(_103242_elem->_method_arr())))) { goto _case_end_4770192880; }
		_case_begin_4770192880:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("ref_refs_array", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_11a3c2e70_Ref>();
		}
		goto _match_end_4770188144;
		_case_end_4770192880:;
		_match_end_4770188144:;
	}
	return jule::new_struct<_11a3c2e70_Ref>(new( std::nothrow ) _11a3c2e70_Ref(_103242_elem));
}



inline jule::Ref<_11a3c2e70_Ref> _11a3c2e70_TypeChecker::_method_build_ref(jule::Ref<_118d9a790_RefTypeDecl> _106732_decl) {
	jule::Bool _106813_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_106813_not_plain;
	});
	jule::Ref<_11a3c2e70_TypeKind> _107217_elem = (*this)._method_check_decl(_106732_decl->_field_elem);
	return (*this)._method_build_ref_from_type(_107217_elem);
}



inline jule::Ref<_11a3c2e70_Ptr> _11a3c2e70_TypeChecker::_method_build_ptr_from_type(jule::Ref<_11a3c2e70_TypeKind> _107642_elem) {
	{
		if (!(((!(jule::real(_107642_elem)))))) { goto _case_end_4770224224; }
		_case_begin_4770224224:;
		{
			return jule::new_ref<_11a3c2e70_Ptr>();
		}
		goto _match_end_4770223936;
		_case_end_4770224224:;
		if (!((jule::real(_107642_elem->_method_ref())))) { goto _case_end_4770224336; }
		_case_begin_4770224336:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("ptr_points_ref", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_11a3c2e70_Ptr>();
		}
		goto _match_end_4770223936;
		_case_end_4770224336:;
		if (!((jule::real(_107642_elem->_method_enm())))) { goto _case_end_4770224448; }
		_case_begin_4770224448:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("ptr_points_enum", 15),jule::Slice<jule::Any>({}));
			return jule::new_ref<_11a3c2e70_Ptr>();
		}
		goto _match_end_4770223936;
		_case_end_4770224448:;
		if (!((jule::real(_107642_elem->_method_arr()) && _107642_elem->_method_arr()->_field_auto))) { goto _case_end_4770224576; }
		_case_begin_4770224576:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("array_auto_sized", 16),jule::Slice<jule::Any>({}));
			return jule::new_ref<_11a3c2e70_Ptr>();
		}
		goto _match_end_4770223936;
		_case_end_4770224576:;
		_match_end_4770223936:;
	}
	return jule::new_struct<_11a3c2e70_Ptr>(new( std::nothrow ) _11a3c2e70_Ptr(_107642_elem));
}



inline jule::Ref<_11a3c2e70_Ptr> _11a3c2e70_TypeChecker::_method_build_ptr(jule::Ref<_118d9a790_PtrTypeDecl> _110032_decl) {
	jule::Bool _110113_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_110113_not_plain;
	});
	jule::Ref<_11a3c2e70_TypeKind> _110517_elem = jule::new_ref<_11a3c2e70_TypeKind>();
	if ((!(_110032_decl->_method_is_unsafe()))) {
		_110517_elem=(*this)._method_check_decl(_110032_decl->_field_elem);
		return (*this)._method_build_ptr_from_type(_110517_elem);
	}
	return jule::new_struct<_11a3c2e70_Ptr>(new( std::nothrow ) _11a3c2e70_Ptr(_110517_elem));
}



inline jule::Ref<_11a3c2e70_Slc> _11a3c2e70_TypeChecker::_method_build_slc(jule::Ref<_118d9a790_SlcTypeDecl> _111732_decl) {
	jule::Bool _111813_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_111813_not_plain;
	});
	jule::Ref<_11a3c2e70_TypeKind> _112217_elem = (*this)._method_check_decl(_111732_decl->_field_elem);
	{
		if (!(((!(jule::real(_112217_elem)))))) { goto _case_end_4770255200; }
		_case_begin_4770255200:;
		{
			return jule::new_ref<_11a3c2e70_Slc>();
		}
		goto _match_end_4770254512;
		_case_end_4770255200:;
		if (!((jule::real(_112217_elem->_method_arr()) && _112217_elem->_method_arr()->_field_auto))) { goto _case_end_4770255312; }
		_case_begin_4770255312:;
		{
			(*this)._method_push_err(_111732_decl->_field_elem->_field_token,jule::Str("array_auto_sized", 16),jule::Slice<jule::Any>({}));
			return jule::new_ref<_11a3c2e70_Slc>();
		}
		goto _match_end_4770254512;
		_case_end_4770255312:;
		_match_end_4770254512:;
	}
	return jule::new_struct<_11a3c2e70_Slc>(new( std::nothrow ) _11a3c2e70_Slc(_112217_elem));
}



inline jule::Ref<_11a3c2e70_Arr> _11a3c2e70_TypeChecker::_method_build_arr(jule::Ref<_118d9a790_ArrTypeDecl> _113932_decl) {
	jule::Bool _114013_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_114013_not_plain;
	});
	jule::Int _114417_n = 0LL;
	if ((!(_113932_decl->_method_auto_sized()))) {
		jule::Ref<_11a53f4f0_Data> _114721_size = (*this)._field_s->_method_eval(_113932_decl->_field_size,(*this)._field_lookup);
		if ((!(jule::real(_114721_size)))) {
			return jule::new_ref<_11a3c2e70_Arr>();
		}
		if ((!(_114721_size->_method_is_const()))) {
			(*this)._method_push_err(_113932_decl->_field_elem->_field_token,jule::Str("expr_not_const", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_11a3c2e70_Arr>();
		} else if ((!(_11ab8b300_is_int(_114721_size->_field_kind->_method_prim()->_field_kind)))) {
			(*this)._method_push_err(_113932_decl->_field_elem->_field_token,jule::Str("array_size_is_not_int", 21),jule::Slice<jule::Any>({}));
			return jule::new_ref<_11a3c2e70_Arr>();
		}
		_114417_n=static_cast<jule::Int>(_114721_size->_field_constant->_method_as_i64());
		if (_114417_n < 0LL) {
			(*this)._method_push_err(_113932_decl->_field_elem->_field_token,jule::Str("array_size_is_negative", 22),jule::Slice<jule::Any>({}));
			return jule::new_ref<_11a3c2e70_Arr>();
		}
	}
	jule::Ref<_11a3c2e70_TypeKind> _116717_elem = (*this)._method_check_decl(_113932_decl->_field_elem);
	{
		if (!(((!(jule::real(_116717_elem)))))) { goto _case_end_4770287984; }
		_case_begin_4770287984:;
		{
			return jule::new_ref<_11a3c2e70_Arr>();
		}
		goto _match_end_4770287776;
		_case_end_4770287984:;
		if (!((jule::real(_116717_elem->_method_arr()) && _116717_elem->_method_arr()->_field_auto))) { goto _case_end_4770288096; }
		_case_begin_4770288096:;
		{
			(*this)._method_push_err(_113932_decl->_field_elem->_field_token,jule::Str("array_auto_sized", 16),jule::Slice<jule::Any>({}));
			return jule::new_ref<_11a3c2e70_Arr>();
		}
		goto _match_end_4770287776;
		_case_end_4770288096:;
		_match_end_4770287776:;
	}
	return jule::new_struct<_11a3c2e70_Arr>(new( std::nothrow ) _11a3c2e70_Arr(_113932_decl->_method_auto_sized(),_114417_n,_116717_elem));
}



inline jule::Ref<_11a3c2e70_Map> _11a3c2e70_TypeChecker::_method_build_map(jule::Ref<_118d9a790_MapTypeDecl> _118632_decl) {
	jule::Bool _118713_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_118713_not_plain;
	});
	jule::Ref<_11a3c2e70_TypeKind> _119117_key = (*this)._method_check_decl(_118632_decl->_field_key);
	if ((!(jule::real(_119117_key)))) {
		return jule::new_ref<_11a3c2e70_Map>();
	}
	jule::Ref<_11a3c2e70_TypeKind> _119617_val = (*this)._method_check_decl(_118632_decl->_field_val);
	if ((!(jule::real(_119617_val)))) {
		return jule::new_ref<_11a3c2e70_Map>();
	}
	if (jule::real(_119617_val->_method_enm())) {
		(*this)._method_push_err(_118632_decl->_field_val->_field_token,jule::Str("enum_as_map_val", 15),jule::Slice<jule::Any>({}));
	}
	return jule::new_struct<_11a3c2e70_Map>(new( std::nothrow ) _11a3c2e70_Map(_119117_key,_119617_val));
}



inline jule::Ref<_11a3c2e70_Tuple> _11a3c2e70_TypeChecker::_method_build_tuple(jule::Ref<_118d9a790_TupleTypeDecl> _121034_decl) {
	jule::Slice<jule::Ref<_11a3c2e70_TypeKind>> _121117_types = jule::Slice<jule::Ref<_11a3c2e70_TypeKind>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_121034_decl->_field_types.len())));
	{
		auto &__julec_range_expr = _121034_decl->_field_types;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _11a3c2e70_i = 0;
			jule::Ref<_118d9a790_TypeDecl> _11a3c2e70_t = *__julec_range_begin;
			_iter_begin_4770315840:;
			{
				jule::Ref<_11a3c2e70_TypeKind> _121321_kind = (*this)._method_check_decl(_11a3c2e70_t);
				if ((!(jule::real(_121321_kind)))) {
					return jule::new_ref<_11a3c2e70_Tuple>();
				}
				_121117_types[static_cast<jule::Int>(_11a3c2e70_i)]=_121321_kind;
			}
			_iter_next_4770315840:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_11a3c2e70_i; _11a3c2e70_t = *__julec_range_begin; goto _iter_begin_4770315840; }
			_iter_end_4770315840:;
		}
	}
	return jule::new_struct<_11a3c2e70_Tuple>(new( std::nothrow ) _11a3c2e70_Tuple(_121117_types));
}



inline jule::Bool _11a3c2e70_TypeChecker::_method_check_fn_types(jule::Ref<_119099250_FnIns> _122337_f) {
	jule::Bool _122350_ok = jule::Bool();
	{
		auto &__julec_range_expr = _122337_f->_field_params;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_119099250_ParamIns> _11a3c2e70_p = *__julec_range_begin;
			_iter_begin_4770325280:;
			{
				_11a3c2e70_p->_field_kind=(*this)._method_build(_11a3c2e70_p->_field_decl->_field_kind->_field_decl->_field_kind);
				_122350_ok=jule::real(_11a3c2e70_p->_field_kind);
				if ((!(_122350_ok))) {
					_122350_ok = false;
					return _122350_ok;
				}
			}
			_iter_next_4770325280:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a3c2e70_p = *__julec_range_begin; goto _iter_begin_4770325280; }
			_iter_end_4770325280:;
		}
	}
	if ((!(_122337_f->_field_decl->_method_is_void()))) {
		_122337_f->_field_result=(*this)._method_build(_122337_f->_field_decl->_field_result->_field_kind->_field_decl->_field_kind);
		_122350_ok = jule::real(_122337_f->_field_result);
		return _122350_ok;
	}
	_122350_ok = true;
	return _122350_ok;
}



inline jule::Ref<_119099250_FnIns> _11a3c2e70_TypeChecker::_method_build_fn(jule::Ref<_118d9a790_FnDecl> _124031_decl) {
	if (_124031_decl->_field_generics.len() > 0LL) {
		(*this)._method_push_err(_124031_decl->_field_token,jule::Str("genericed_fn_as_anonymous_fn", 28),jule::Slice<jule::Any>({}));
		return jule::new_ref<_119099250_FnIns>();
	}
	jule::Ref<_119099250_Fn> _124617_f = _13feceeb0_build_fn(_124031_decl);
	jule::Ref<_119099250_FnIns> _124717_ins = _124617_f->_method_instance_force();
	_124717_ins->_field_anon=true;
	jule::Bool _125013_ok = (*this)._method_check_fn_types(_124717_ins);
	if ((!(_125013_ok))) {
		return jule::new_ref<_119099250_FnIns>();
	}
	return _124717_ins;
}



inline jule::Trait<_11a3c2e70_Kind> _11a3c2e70_TypeChecker::_method_build_by_std_namespace(jule::Ref<_118d9a790_NamespaceTypeDecl> _125845_decl) {
	jule::Str _125913_path = _11a3c2e70_build_link_path_by_tokens(_125845_decl->_field_idents);
	jule::Ref<_11a0945e0_ImportInfo> _126017_imp = (*this)._field_lookup.get()._method_select_package(jule::Fn<jule::Bool(jule::Ref<_11a0945e0_ImportInfo>)>([=](jule::Ref<_11a0945e0_ImportInfo> _126053_imp) mutable -> jule::Bool {
		return _126053_imp->_field_std && (_126053_imp->_field_link_path == _125913_path);
	}));
	if ((!(jule::real(_126017_imp))) || (!(_126017_imp->_method_is_lookupable(jule::Str("self", 4))))) {
		(*this)._method_push_err(_125845_decl->_field_idents[static_cast<jule::Int>(0LL)],jule::Str("namespace_not_exist", 19),jule::Slice<jule::Any>({jule::Any(_125913_path)}));
		return nullptr;
	}
	jule::Trait<_11aa76f70_Lookup> _126917_lookup = (*this)._field_lookup;
	(*this)._field_lookup=_126017_imp;
	jule::Trait<_11a3c2e70_Kind> _127217_kind = (*this)._method_build_ident(_125845_decl->_field_kind);
	(*this)._field_lookup=_126917_lookup;
	return _127217_kind;
}



inline jule::Trait<_11a3c2e70_Kind> _11a3c2e70_TypeChecker::_method_build_by_namespace(jule::Ref<_118d9a790_NamespaceTypeDecl> _127941_decl) {
	_11911a8a0_Token _128013_token = _127941_decl->_field_idents[static_cast<jule::Int>(0LL)];
	if (_128013_token._field_kind == jule::Str("std", 3)) {
		return (*this)._method_build_by_std_namespace(_127941_decl);
	}
	(*this)._method_push_err(_128013_token,jule::Str("ident_not_exist", 15),jule::Slice<jule::Any>({jule::Any(_128013_token._field_kind)}));
	return nullptr;
}



inline jule::Ref<_11a3c2e70_TypeKind> _11a3c2e70_TypeChecker::_method_build(jule::Any _128928_decl_kind) {
	jule::Trait<_11a3c2e70_Kind> _129017_kind = nullptr;
	{
		auto &_match_expr{ _128928_decl_kind };
		if (!(_match_expr.type_is<jule::Ref<_11a3c2e70_TypeKind>>())) { goto _case_end_4770378688; }
		_case_begin_4770378688:;
		{
			_129017_kind=_128928_decl_kind.operator jule::Ref<_11a3c2e70_TypeKind>();
		}
		goto _match_end_4770376672;
		_case_end_4770378688:;
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_IdentTypeDecl>>())) { goto _case_end_4770380960; }
		_case_begin_4770380960:;
		{
			jule::Trait<_11a3c2e70_Kind> _129721_t = (*this)._method_build_ident(_128928_decl_kind.operator jule::Ref<_118d9a790_IdentTypeDecl>());
			if (_129721_t != nullptr) {
				_129017_kind=_129721_t;
			}
		}
		goto _match_end_4770376672;
		_case_end_4770380960:;
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_RefTypeDecl>>())) { goto _case_end_4770381072; }
		_case_begin_4770381072:;
		{
			jule::Ref<_11a3c2e70_Ref> _130321_t = (*this)._method_build_ref(_128928_decl_kind.operator jule::Ref<_118d9a790_RefTypeDecl>());
			if (jule::real(_130321_t)) {
				_129017_kind=_130321_t;
			}
		}
		goto _match_end_4770376672;
		_case_end_4770381072:;
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_PtrTypeDecl>>())) { goto _case_end_4770381536; }
		_case_begin_4770381536:;
		{
			jule::Ref<_11a3c2e70_Ptr> _130921_t = (*this)._method_build_ptr(_128928_decl_kind.operator jule::Ref<_118d9a790_PtrTypeDecl>());
			if (jule::real(_130921_t)) {
				_129017_kind=_130921_t;
			}
		}
		goto _match_end_4770376672;
		_case_end_4770381536:;
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_SlcTypeDecl>>())) { goto _case_end_4770381648; }
		_case_begin_4770381648:;
		{
			jule::Ref<_11a3c2e70_Slc> _131521_t = (*this)._method_build_slc(_128928_decl_kind.operator jule::Ref<_118d9a790_SlcTypeDecl>());
			if (jule::real(_131521_t)) {
				_129017_kind=_131521_t;
			}
		}
		goto _match_end_4770376672;
		_case_end_4770381648:;
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_ArrTypeDecl>>())) { goto _case_end_4770377568; }
		_case_begin_4770377568:;
		{
			jule::Ref<_11a3c2e70_Arr> _132121_t = (*this)._method_build_arr(_128928_decl_kind.operator jule::Ref<_118d9a790_ArrTypeDecl>());
			if (jule::real(_132121_t)) {
				_129017_kind=_132121_t;
			}
		}
		goto _match_end_4770376672;
		_case_end_4770377568:;
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_MapTypeDecl>>())) { goto _case_end_4770377680; }
		_case_begin_4770377680:;
		{
			jule::Ref<_11a3c2e70_Map> _132721_t = (*this)._method_build_map(_128928_decl_kind.operator jule::Ref<_118d9a790_MapTypeDecl>());
			if (jule::real(_132721_t)) {
				_129017_kind=_132721_t;
			}
		}
		goto _match_end_4770376672;
		_case_end_4770377680:;
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_TupleTypeDecl>>())) { goto _case_end_4770377792; }
		_case_begin_4770377792:;
		{
			jule::Ref<_11a3c2e70_Tuple> _133321_t = (*this)._method_build_tuple(_128928_decl_kind.operator jule::Ref<_118d9a790_TupleTypeDecl>());
			if (jule::real(_133321_t)) {
				_129017_kind=_133321_t;
			}
		}
		goto _match_end_4770376672;
		_case_end_4770377792:;
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_FnDecl>>())) { goto _case_end_4770380224; }
		_case_begin_4770380224:;
		{
			jule::Ref<_119099250_FnIns> _133921_t = (*this)._method_build_fn(_128928_decl_kind.operator jule::Ref<_118d9a790_FnDecl>());
			if (jule::real(_133921_t)) {
				_129017_kind=_133921_t;
			}
		}
		goto _match_end_4770376672;
		_case_end_4770380224:;
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_NamespaceTypeDecl>>())) { goto _case_end_4770380336; }
		_case_begin_4770380336:;
		{
			jule::Trait<_11a3c2e70_Kind> _134521_t = (*this)._method_build_by_namespace(_128928_decl_kind.operator jule::Ref<_118d9a790_NamespaceTypeDecl>());
			if (_134521_t != nullptr) {
				_129017_kind=_134521_t;
			}
		}
		goto _match_end_4770376672;
		_case_end_4770380336:;
		_case_begin_4770377216:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("invalid_type", 12),jule::Slice<jule::Any>({}));
			return jule::new_ref<_11a3c2e70_TypeKind>();
		}
		goto _match_end_4770376672;
		_case_end_4770377216:;
		_match_end_4770376672:;
	}
	if (_129017_kind == nullptr) {
		return jule::new_ref<_11a3c2e70_TypeKind>();
	}
	{
		auto &_match_expr{ _129017_kind };
		if (!(_match_expr.type_is<jule::Ref<_11a3c2e70_TypeKind>>())) { goto _case_end_4770418512; }
		_case_begin_4770418512:;
		{
			return _129017_kind.operator jule::Ref<_11a3c2e70_TypeKind>();
		}
		goto _match_end_4770416800;
		_case_end_4770418512:;
		_case_begin_4770416304:;
		{
			return jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_129017_kind));
		}
		goto _match_end_4770416800;
		_case_end_4770416304:;
		_match_end_4770416800:;
	}
}



inline jule::Ref<_11a3c2e70_TypeKind> _11a3c2e70_TypeChecker::_method_check_decl(jule::Ref<_118d9a790_TypeDecl> _137033_decl) {
	_11911a8a0_Token _137217_error_token = (*this)._field_error_token;
	(*this)._field_error_token=_137033_decl->_field_token;
	jule::Ref<_11a3c2e70_TypeKind> _137517_kind = (*this)._method_build(_137033_decl->_field_kind);
	(*this)._field_error_token=_137217_error_token;
	return _137517_kind;
}



inline void _11a3c2e70_TypeChecker::_method_check(jule::Ref<_11a3c2e70_TypeSymbol> _138128_t) {
	if ((!(jule::real(_138128_t->_field_decl)))) {
		return;
	}
	jule::Ref<_11a3c2e70_TypeKind> _138617_kind = (*this)._method_check_decl(_138128_t->_field_decl);
	if ((!(jule::real(_138617_kind)))) {
		_138128_t->_method_remove_kind();
		return;
	}
	_138128_t->_field_kind=_138617_kind;
}







std::ostream &operator<<(std::ostream &_Stream, const _11a3c2e70_TypeChecker &_Src) {
	_Stream << "TypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "ignore_generics:" << _Src._field_ignore_generics << ", ";
	_Stream << "use_generics:" << _Src._field_use_generics << ", ";
	_Stream << "not_plain:" << _Src._field_not_plain;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11a3c2e70_TypeAlias &_Src) {
	_Stream << "TypeAlias{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "refers:" << _Src._field_refers;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _11a53f4f0_BinopSolver::_method_check_type_compatibility(void) {
	_11a21f8a0_TypeCompatibilityChecker _322417_tcc = _11a21f8a0_TypeCompatibilityChecker((*this)._field_e->_field_s,(*this)._field_l->_field_kind,(*this)._field_r->_field_kind,(*this)._field_op,true,jule::Bool());
	return _322417_tcc._method_check();
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_BinopSolver::_method_eval_nil(void) {
	if ((!(_11a3c2e70_is_nil_compatible((*this)._field_r->_field_kind)))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("incompatible_types", 18),jule::Slice<jule::Any>({jule::Any(jule::Str("nil", 3)),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_11a53f4f0_Data>();
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4771621248; }
		_case_begin_4771621248:;
		{
			return jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_11a3c2e70_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_11a3c2e70_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_11ab854f0_Const>()));
		}
		goto _match_end_4771608544;
		_case_end_4771621248:;
		_case_begin_4771615584:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("operator_not_for_juletype", 25),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(jule::Str("nil", 3))}));
			return jule::new_ref<_11a53f4f0_Data>();
		}
		goto _match_end_4771608544;
		_case_end_4771615584:;
		_match_end_4771608544:;
	}
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_BinopSolver::_method_eval_enum(void) {
	jule::Ref<_11a089b40_Enum> _325617_enm = (*this)._field_l->_field_kind->_method_enm();
	if ((!(jule::real((*this)._field_r->_field_kind->_method_enm()))) || ((_325617_enm).alloc != ((*this)._field_r->_field_kind->_method_enm()).alloc)) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("incompatible_types", 18),jule::Slice<jule::Any>({jule::Any(_325617_enm->_field_ident),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_11a53f4f0_Data>();
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4771635248; }
		_case_begin_4771635248:;
		{
			return jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_11a3c2e70_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_11a3c2e70_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_11ab854f0_Const>()));
		}
		goto _match_end_4771634208;
		_case_end_4771635248:;
		if (!((jule::Str("&", 1)) == _match_expr || (jule::Str("|", 1)) == _match_expr)) { goto _case_end_4771639744; }
		_case_begin_4771639744:;
		{
			if ((!(jule::real(_325617_enm->_field_kind->_field_kind->_method_prim()))) || (!(_11ab8b300_is_int(_325617_enm->_field_kind->_field_kind->_method_prim()->_method_to_str())))) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("operator_not_for_juletype", 25),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(_325617_enm->_field_ident)}));
			}
			return (*this)._field_l;
		}
		goto _match_end_4771634208;
		_case_end_4771639744:;
		_case_begin_4771633824:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("operator_not_for_juletype", 25),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(_325617_enm->_field_ident)}));
			return jule::new_ref<_11a53f4f0_Data>();
		}
		goto _match_end_4771634208;
		_case_end_4771633824:;
		_match_end_4771634208:;
	}
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_BinopSolver::_method_eval_ptr(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("incompatible_types", 18),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_11a53f4f0_Data>();
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr || (jule::Str("<", 1)) == _match_expr || (jule::Str(">", 1)) == _match_expr || (jule::Str("<=", 2)) == _match_expr || (jule::Str(">=", 2)) == _match_expr)) { goto _case_end_4771656816; }
		_case_begin_4771656816:;
		{
			return jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_11a3c2e70_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_11a3c2e70_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_11ab854f0_Const>()));
		}
		goto _match_end_4771650752;
		_case_end_4771656816:;
		_case_begin_4771656704:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("operator_not_for_juletype", 25),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_11a53f4f0_Data>();
		}
		goto _match_end_4771650752;
		_case_end_4771656704:;
		_match_end_4771650752:;
	}
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_BinopSolver::_method_eval_arr(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("incompatible_types", 18),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_11a53f4f0_Data>();
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4771665424; }
		_case_begin_4771665424:;
		{
			return jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_11a3c2e70_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_11a3c2e70_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_11ab854f0_Const>()));
		}
		goto _match_end_4771665568;
		_case_end_4771665424:;
		_case_begin_4771665280:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("operator_not_for_juletype", 25),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_11a53f4f0_Data>();
		}
		goto _match_end_4771665568;
		_case_end_4771665280:;
		_match_end_4771665568:;
	}
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_BinopSolver::_method_eval_slc(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("incompatible_types", 18),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_11a53f4f0_Data>();
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4771690944; }
		_case_begin_4771690944:;
		{
			return jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_11a3c2e70_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_11a3c2e70_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_11ab854f0_Const>()));
		}
		goto _match_end_4771679936;
		_case_end_4771690944:;
		_case_begin_4771688736:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("operator_not_for_juletype", 25),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_11a53f4f0_Data>();
		}
		goto _match_end_4771679936;
		_case_end_4771688736:;
		_match_end_4771679936:;
	}
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_BinopSolver::_method_eval_fn(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("incompatible_types", 18),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_11a53f4f0_Data>();
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4771706640; }
		_case_begin_4771706640:;
		{
			return jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_11a3c2e70_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_11a3c2e70_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_11ab854f0_Const>()));
		}
		goto _match_end_4771695536;
		_case_end_4771706640:;
		_case_begin_4771705632:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("operator_not_for_juletype", 25),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_11a53f4f0_Data>();
		}
		goto _match_end_4771695536;
		_case_end_4771705632:;
		_match_end_4771695536:;
	}
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_BinopSolver::_method_eval_struct(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("incompatible_types", 18),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_11a53f4f0_Data>();
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4771722768; }
		_case_begin_4771722768:;
		{
			return jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_11a3c2e70_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_11a3c2e70_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_11ab854f0_Const>()));
		}
		goto _match_end_4769156896;
		_case_end_4771722768:;
		_case_begin_4771720080:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("operator_not_for_juletype", 25),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_11a53f4f0_Data>();
		}
		goto _match_end_4769156896;
		_case_end_4771720080:;
		_match_end_4769156896:;
	}
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_BinopSolver::_method_eval_trait(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("incompatible_types", 18),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_11a53f4f0_Data>();
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4767716368; }
		_case_begin_4767716368:;
		{
			return jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_11a3c2e70_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_11a3c2e70_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_11ab854f0_Const>()));
		}
		goto _match_end_4765981296;
		_case_end_4767716368:;
		_case_begin_4767719984:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("operator_not_for_juletype", 25),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_11a53f4f0_Data>();
		}
		goto _match_end_4765981296;
		_case_end_4767719984:;
		_match_end_4765981296:;
	}
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_BinopSolver::_method_eval_any(void) {
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4767649872; }
		_case_begin_4767649872:;
		{
			return jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_11a3c2e70_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_11a3c2e70_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_11ab854f0_Const>()));
		}
		goto _match_end_4767430064;
		_case_end_4767649872:;
		_case_begin_4767648640:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("operator_not_for_juletype", 25),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(jule::Str("any", 3))}));
			return jule::new_ref<_11a53f4f0_Data>();
		}
		goto _match_end_4767430064;
		_case_end_4767648640:;
		_match_end_4767430064:;
	}
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_BinopSolver::_method_eval_bool(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("incompatible_types", 18),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_11a53f4f0_Data>();
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr || (jule::Str("&&", 2)) == _match_expr || (jule::Str("||", 2)) == _match_expr)) { goto _case_end_4770048048; }
		_case_begin_4770048048:;
		{
			return (*this)._field_l;
		}
		goto _match_end_4770037008;
		_case_end_4770048048:;
		_case_begin_4770045808:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("operator_not_for_juletype", 25),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_11a53f4f0_Data>();
		}
		goto _match_end_4770037008;
		_case_end_4770045808:;
		_match_end_4770037008:;
	}
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_BinopSolver::_method_eval_str(void) {
	jule::Str _345017_rk = (*this)._field_r->_field_kind->_method_to_str();
	if (_345017_rk != jule::Str("str", 3)) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("incompatible_types", 18),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any(_345017_rk)}));
		return jule::new_ref<_11a53f4f0_Data>();
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("+", 1)) == _match_expr)) { goto _case_end_4771746096; }
		_case_begin_4771746096:;
		{
			return (*this)._field_l;
		}
		goto _match_end_4771744816;
		_case_end_4771746096:;
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4771750528; }
		_case_begin_4771750528:;
		{
			return jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_11a3c2e70_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_11a3c2e70_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_11ab854f0_Const>()));
		}
		goto _match_end_4771744816;
		_case_end_4771750528:;
		_case_begin_4771745024:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("operator_not_for_juletype", 25),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(jule::Str("any", 3))}));
			return jule::new_ref<_11a53f4f0_Data>();
		}
		goto _match_end_4771744816;
		_case_end_4771745024:;
		_match_end_4771744816:;
	}
}



inline void _11a53f4f0_BinopSolver::_method_set_type_to_greater(void) {
	if (((*this)._field_l->_method_is_const() && (*this)._field_r->_method_is_const()) || ((!((*this)._field_l->_method_is_const())) && (!((*this)._field_r->_method_is_const())))) {
		jule::Str _347617_lk = (*this)._field_l->_field_kind->_method_to_str();
		jule::Str _347717_rk = (*this)._field_r->_field_kind->_method_to_str();
		if (_11ac2f0a0_is_greater(_347717_rk,_347617_lk)) {
			(*this)._field_l->_field_kind=(*this)._field_r->_field_kind;
		}
		return;
	}
	if ((*this)._field_l->_method_is_const()) {
		(*this)._field_l->_field_kind=(*this)._field_r->_field_kind;
		return;
	}
	(*this)._field_r->_field_kind=(*this)._field_l->_field_kind;
}



inline void _11a53f4f0_BinopSolver::_method_check_mod_data(jule::Ref<_11a53f4f0_Data> _349237_d) {
	if ((!(_349237_d->_method_is_const()))) {
		if ((!(jule::real(_349237_d->_field_kind->_method_prim()))) || (!(_11ab8b300_is_int(_349237_d->_field_kind->_method_prim()->_field_kind)))) {
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("modulo_with_not_int", 19),jule::Slice<jule::Any>({}));
		}
		return;
	}
	{
		if (!((_11a21f8a0_sig_assignable(jule::Str("i64", 3),_349237_d)))) { goto _case_end_4771778768; }
		_case_begin_4771778768:;
		{
			_349237_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_349237_d->_field_constant->_method_as_i64()));
		}
		goto _match_end_4771777248;
		_case_end_4771778768:;
		if (!((_11a21f8a0_unsig_assignable(jule::Str("u64", 3),_349237_d)))) { goto _case_end_4771778224; }
		_case_begin_4771778224:;
		{
			_349237_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_349237_d->_field_constant->_method_as_u64()));
		}
		goto _match_end_4771777248;
		_case_end_4771778224:;
		_case_begin_4771777440:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("modulo_with_not_int", 19),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4771777248;
		_case_end_4771777440:;
		_match_end_4771777248:;
	}
}



inline void _11a53f4f0_BinopSolver::_method_mod(void) {
	(*this)._method_check_mod_data((*this)._field_l);
	(*this)._method_check_mod_data((*this)._field_r);
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_BinopSolver::_method_eval_float(void) {
	jule::Str _351813_lk = (*this)._field_l->_field_kind->_method_to_str();
	jule::Str _351913_rk = (*this)._field_r->_field_kind->_method_to_str();
	if ((!(_11ab8b300_is_num(_351813_lk))) || (!(_11ab8b300_is_num(_351913_rk)))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("incompatible_types", 18),jule::Slice<jule::Any>({jule::Any(_351813_lk),jule::Any(_351913_rk)}));
		return jule::new_ref<_11a53f4f0_Data>();
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr || (jule::Str("<", 1)) == _match_expr || (jule::Str(">", 1)) == _match_expr || (jule::Str(">=", 2)) == _match_expr || (jule::Str("<=", 2)) == _match_expr)) { goto _case_end_4771801488; }
		_case_begin_4771801488:;
		{
			return jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_11a3c2e70_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_11a3c2e70_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_11ab854f0_Const>()));
		}
		goto _match_end_4771801680;
		_case_end_4771801488:;
		_match_end_4771801680:;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("+", 1)) == _match_expr || (jule::Str("-", 1)) == _match_expr || (jule::Str("*", 1)) == _match_expr || (jule::Str("/", 1)) == _match_expr)) { goto _case_end_4771808512; }
		_case_begin_4771808512:;
		{
			(*this)._method_set_type_to_greater();
			return (*this)._field_l;
		}
		goto _match_end_4771806448;
		_case_end_4771808512:;
		if (!((jule::Str("%", 1)) == _match_expr)) { goto _case_end_4771811872; }
		_case_begin_4771811872:;
		{
			if ((!(_11ab8b300_is_int(_351913_rk)))) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("incompatible_types", 18),jule::Slice<jule::Any>({jule::Any(_351813_lk),jule::Any(_351913_rk)}));
				return jule::new_ref<_11a53f4f0_Data>();
			}
			(*this)._method_mod();
			return (*this)._field_r;
		}
		goto _match_end_4771806448;
		_case_end_4771811872:;
		_case_begin_4771807888:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("operator_not_for_float", 22),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind)}));
			return jule::new_ref<_11a53f4f0_Data>();
		}
		goto _match_end_4771806448;
		_case_end_4771807888:;
		_match_end_4771806448:;
	}
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_BinopSolver::_method_eval_unsig_int(void) {
	jule::Str _356413_lk = (*this)._field_l->_field_kind->_method_to_str();
	jule::Str _356513_rk = (*this)._field_r->_field_kind->_method_to_str();
	if ((!(_11ab8b300_is_num(_356413_lk))) || (!(_11ab8b300_is_num(_356513_rk)))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("incompatible_types", 18),jule::Slice<jule::Any>({jule::Any(_356413_lk),jule::Any(_356513_rk)}));
		return jule::new_ref<_11a53f4f0_Data>();
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr || (jule::Str("<", 1)) == _match_expr || (jule::Str(">", 1)) == _match_expr || (jule::Str(">=", 2)) == _match_expr || (jule::Str("<=", 2)) == _match_expr)) { goto _case_end_4771828864; }
		_case_begin_4771828864:;
		{
			return jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_11a3c2e70_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_11a3c2e70_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_11ab854f0_Const>()));
		}
		goto _match_end_4771829056;
		_case_end_4771828864:;
		_match_end_4771829056:;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("+", 1)) == _match_expr || (jule::Str("-", 1)) == _match_expr || (jule::Str("*", 1)) == _match_expr || (jule::Str("/", 1)) == _match_expr || (jule::Str("&", 1)) == _match_expr || (jule::Str("|", 1)) == _match_expr || (jule::Str("^", 1)) == _match_expr)) { goto _case_end_4771839248; }
		_case_begin_4771839248:;
		{
			(*this)._method_set_type_to_greater();
			return (*this)._field_l;
		}
		goto _match_end_4771833824;
		_case_end_4771839248:;
		if (!((jule::Str("%", 1)) == _match_expr)) { goto _case_end_4771839360; }
		_case_begin_4771839360:;
		{
			(*this)._method_mod();
			(*this)._method_set_type_to_greater();
			return (*this)._field_l;
		}
		goto _match_end_4771833824;
		_case_end_4771839360:;
		if (!((jule::Str("<<", 2)) == _match_expr || (jule::Str(">>", 2)) == _match_expr)) { goto _case_end_4771838992; }
		_case_begin_4771838992:;
		{
			if ((!(_11a53f4f0_is_ok_for_shifting((*this)._field_r)))) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("bitshift_must_unsigned", 22),jule::Slice<jule::Any>({}));
				return jule::new_ref<_11a53f4f0_Data>();
			}
			if ((*this)._field_l->_method_is_const()) {
				(*this)._field_l->_field_kind=(*this)._field_r->_field_kind;
			}
			return (*this)._field_l;
		}
		goto _match_end_4771833824;
		_case_end_4771838992:;
		_case_begin_4771835264:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("operator_not_for_uint", 21),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind)}));
			return jule::new_ref<_11a53f4f0_Data>();
		}
		goto _match_end_4771833824;
		_case_end_4771835264:;
		_match_end_4771833824:;
	}
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_BinopSolver::_method_eval_sig_int(void) {
	jule::Str _362313_lk = (*this)._field_l->_field_kind->_method_to_str();
	jule::Str _362413_rk = (*this)._field_r->_field_kind->_method_to_str();
	if ((!(_11ab8b300_is_num(_362313_lk))) || (!(_11ab8b300_is_num(_362413_rk)))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("incompatible_types", 18),jule::Slice<jule::Any>({jule::Any(_362313_lk),jule::Any(_362413_rk)}));
		return jule::new_ref<_11a53f4f0_Data>();
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr || (jule::Str("<", 1)) == _match_expr || (jule::Str(">", 1)) == _match_expr || (jule::Str(">=", 2)) == _match_expr || (jule::Str("<=", 2)) == _match_expr)) { goto _case_end_4771861120; }
		_case_begin_4771861120:;
		{
			return jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_11a3c2e70_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_11a3c2e70_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_11ab854f0_Const>()));
		}
		goto _match_end_4771861312;
		_case_end_4771861120:;
		_match_end_4771861312:;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("+", 1)) == _match_expr || (jule::Str("-", 1)) == _match_expr || (jule::Str("*", 1)) == _match_expr || (jule::Str("/", 1)) == _match_expr || (jule::Str("&", 1)) == _match_expr || (jule::Str("|", 1)) == _match_expr || (jule::Str("^", 1)) == _match_expr)) { goto _case_end_4771871504; }
		_case_begin_4771871504:;
		{
			(*this)._method_set_type_to_greater();
			return (*this)._field_l;
		}
		goto _match_end_4771866080;
		_case_end_4771871504:;
		if (!((jule::Str("%", 1)) == _match_expr)) { goto _case_end_4771871616; }
		_case_begin_4771871616:;
		{
			(*this)._method_mod();
			(*this)._method_set_type_to_greater();
			return (*this)._field_l;
		}
		goto _match_end_4771866080;
		_case_end_4771871616:;
		if (!((jule::Str("<<", 2)) == _match_expr || (jule::Str(">>", 2)) == _match_expr)) { goto _case_end_4771871248; }
		_case_begin_4771871248:;
		{
			if ((!(_11a53f4f0_is_ok_for_shifting((*this)._field_r)))) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("bitshift_must_unsigned", 22),jule::Slice<jule::Any>({}));
				return jule::new_ref<_11a53f4f0_Data>();
			}
			return (*this)._field_l;
		}
		goto _match_end_4771866080;
		_case_end_4771871248:;
		_case_begin_4771867520:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("operator_not_for_int", 20),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind)}));
			return jule::new_ref<_11a53f4f0_Data>();
		}
		goto _match_end_4771866080;
		_case_end_4771867520:;
		_match_end_4771866080:;
	}
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_BinopSolver::_method_eval_prim(void) {
	jule::Ref<_11a3c2e70_Prim> _367813_prim = (*this)._field_l->_field_kind->_method_prim();
	{
		if (!((_367813_prim->_method_is_any()))) { goto _case_end_4771884768; }
		_case_begin_4771884768:;
		{
			return (*this)._method_eval_any();
		}
		goto _match_end_4771884448;
		_case_end_4771884768:;
		if (!((_367813_prim->_method_is_bool()))) { goto _case_end_4771884880; }
		_case_begin_4771884880:;
		{
			return (*this)._method_eval_bool();
		}
		goto _match_end_4771884448;
		_case_end_4771884880:;
		if (!((_367813_prim->_method_is_str()))) { goto _case_end_4771884992; }
		_case_begin_4771884992:;
		{
			return (*this)._method_eval_str();
		}
		goto _match_end_4771884448;
		_case_end_4771884992:;
		_match_end_4771884448:;
	}
	jule::Ref<_11a3c2e70_Prim> _368513_rprim = (*this)._field_r->_field_kind->_method_prim();
	if ((!(jule::real(_368513_rprim)))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("incompatible_types", 18),jule::Slice<jule::Any>({jule::Any(_367813_prim->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_11a53f4f0_Data>();
	}
	jule::Str _369113_lk = _367813_prim->_method_to_str();
	{
		if (!((_11ab8b300_is_float(_369113_lk)))) { goto _case_end_4771901536; }
		_case_begin_4771901536:;
		{
			return (*this)._method_eval_float();
		}
		goto _match_end_4771898096;
		_case_end_4771901536:;
		if (!((_11ab8b300_is_unsig_int(_369113_lk)))) { goto _case_end_4771901648; }
		_case_begin_4771901648:;
		{
			return (*this)._method_eval_unsig_int();
		}
		goto _match_end_4771898096;
		_case_end_4771901648:;
		if (!((_11ab8b300_is_sig_int(_369113_lk)))) { goto _case_end_4771901280; }
		_case_begin_4771901280:;
		{
			return (*this)._method_eval_sig_int();
		}
		goto _match_end_4771898096;
		_case_end_4771901280:;
		_case_begin_4771899200:;
		{
			return jule::new_ref<_11a53f4f0_Data>();
		}
		goto _match_end_4771898096;
		_case_end_4771899200:;
		_match_end_4771898096:;
	}
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_BinopSolver::_method_eval(void) {
	{
		if (!(((*this)._field_l->_field_kind->_method_is_void()))) { goto _case_end_4771908736; }
		_case_begin_4771908736:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("operator_not_for_juletype", 25),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(jule::Str("void", 4))}));
			return jule::new_ref<_11a53f4f0_Data>();
		}
		goto _match_end_4771902576;
		_case_end_4771908736:;
		if (!(((*this)._field_l->_field_kind->_method_is_nil()))) { goto _case_end_4771908848; }
		_case_begin_4771908848:;
		{
			return (*this)._method_eval_nil();
		}
		goto _match_end_4771902576;
		_case_end_4771908848:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_enm())))) { goto _case_end_4771909312; }
		_case_begin_4771909312:;
		{
			return (*this)._method_eval_enum();
		}
		goto _match_end_4771902576;
		_case_end_4771909312:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_ptr())))) { goto _case_end_4771909424; }
		_case_begin_4771909424:;
		{
			return (*this)._method_eval_ptr();
		}
		goto _match_end_4771902576;
		_case_end_4771909424:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_arr())))) { goto _case_end_4771907744; }
		_case_begin_4771907744:;
		{
			return (*this)._method_eval_arr();
		}
		goto _match_end_4771902576;
		_case_end_4771907744:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_slc())))) { goto _case_end_4771907856; }
		_case_begin_4771907856:;
		{
			return (*this)._method_eval_slc();
		}
		goto _match_end_4771902576;
		_case_end_4771907856:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_fnc())))) { goto _case_end_4771906960; }
		_case_begin_4771906960:;
		{
			return (*this)._method_eval_fn();
		}
		goto _match_end_4771902576;
		_case_end_4771906960:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_trt()) || jule::real((*this)._field_r->_field_kind->_method_trt())))) { goto _case_end_4771907072; }
		_case_begin_4771907072:;
		{
			if (jule::real((*this)._field_r->_field_kind->_method_trt())) {
				std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple((*this)._field_r,(*this)._field_l);
			}
			return (*this)._method_eval_trait();
		}
		goto _match_end_4771902576;
		_case_end_4771907072:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_strct())))) { goto _case_end_4771907184; }
		_case_begin_4771907184:;
		{
			return (*this)._method_eval_struct();
		}
		goto _match_end_4771902576;
		_case_end_4771907184:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_prim())))) { goto _case_end_4771908176; }
		_case_begin_4771908176:;
		{
			return (*this)._method_eval_prim();
		}
		goto _match_end_4771902576;
		_case_end_4771908176:;
		_case_begin_4771906656:;
		{
			return jule::new_ref<_11a53f4f0_Data>();
		}
		goto _match_end_4771902576;
		_case_end_4771906656:;
		_match_end_4771902576:;
	}
}



inline void _11a53f4f0_BinopSolver::_method_assign_shift(jule::Ref<_11a53f4f0_Data> _374131_d,jule::F64 _374141_r) {
	{
		if (!((_374141_r <= 6LL))) { goto _case_end_4771945312; }
		_case_begin_4771945312:;
		{
			_374131_d->_field_kind->_method_prim()->_field_kind=jule::Str("i8", 2);
			_374131_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_374131_d->_field_constant->_method_as_i64()));
		}
		goto _match_end_4771942688;
		_case_end_4771945312:;
		if (!((_374141_r <= 7LL))) { goto _case_end_4771943360; }
		_case_begin_4771943360:;
		{
			_374131_d->_field_kind->_method_prim()->_field_kind=jule::Str("u8", 2);
			_374131_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_374131_d->_field_constant->_method_as_u64()));
		}
		goto _match_end_4771942688;
		_case_end_4771943360:;
		if (!((_374141_r <= 14LL))) { goto _case_end_4771943472; }
		_case_begin_4771943472:;
		{
			_374131_d->_field_kind->_method_prim()->_field_kind=jule::Str("i16", 3);
			_374131_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_374131_d->_field_constant->_method_as_i64()));
		}
		goto _match_end_4771942688;
		_case_end_4771943472:;
		if (!((_374141_r <= 15LL))) { goto _case_end_4771947872; }
		_case_begin_4771947872:;
		{
			_374131_d->_field_kind->_method_prim()->_field_kind=jule::Str("u16", 3);
			_374131_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_374131_d->_field_constant->_method_as_u64()));
		}
		goto _match_end_4771942688;
		_case_end_4771947872:;
		if (!((_374141_r <= 30LL))) { goto _case_end_4771947984; }
		_case_begin_4771947984:;
		{
			_374131_d->_field_kind->_method_prim()->_field_kind=jule::Str("i32", 3);
			_374131_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_374131_d->_field_constant->_method_as_i64()));
		}
		goto _match_end_4771942688;
		_case_end_4771947984:;
		if (!((_374141_r <= 31LL))) { goto _case_end_4771948096; }
		_case_begin_4771948096:;
		{
			_374131_d->_field_kind->_method_prim()->_field_kind=jule::Str("u32", 3);
			_374131_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_374131_d->_field_constant->_method_as_u64()));
		}
		goto _match_end_4771942688;
		_case_end_4771948096:;
		if (!((_374141_r <= 62LL))) { goto _case_end_4771948208; }
		_case_begin_4771948208:;
		{
			_374131_d->_field_kind->_method_prim()->_field_kind=jule::Str("i64", 3);
			_374131_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_374131_d->_field_constant->_method_as_i64()));
		}
		goto _match_end_4771942688;
		_case_end_4771948208:;
		if (!((_374141_r <= 63LL))) { goto _case_end_4771948320; }
		_case_begin_4771948320:;
		{
			_374131_d->_field_kind->_method_prim()->_field_kind=jule::Str("u64", 3);
			_374131_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_374131_d->_field_constant->_method_as_u64()));
		}
		goto _match_end_4771942688;
		_case_end_4771948320:;
		if (!((_374141_r <= 127LL))) { goto _case_end_4771948432; }
		_case_begin_4771948432:;
		{
			_374131_d->_field_kind->_method_prim()->_field_kind=jule::Str("f32", 3);
			_374131_d->_field_constant->_method_set_f64(static_cast<jule::F64>(_374131_d->_field_constant->_method_as_f64()));
		}
		goto _match_end_4771942688;
		_case_end_4771948432:;
		_case_begin_4771942896:;
		{
			_374131_d->_field_kind->_method_prim()->_field_kind=jule::Str("f64", 3);
			_374131_d->_field_constant->_method_set_f64(static_cast<jule::F64>(_374131_d->_field_constant->_method_as_f64()));
		}
		goto _match_end_4771942688;
		_case_end_4771942896:;
		_match_end_4771942688:;
	}
}



inline void _11a53f4f0_BinopSolver::_method_solve_const(jule::Ref<_11a53f4f0_Data> _378534_d) {
	{
		if (!(((!(jule::real(_378534_d)))))) { goto _case_end_4771988016; }
		_case_begin_4771988016:;
		{
			return;
		}
		goto _match_end_4771987760;
		_case_end_4771988016:;
		if (!(((!((*this)._field_l->_method_is_const()))) || ((!((*this)._field_r->_method_is_const()))))) { goto _case_end_4771988128; }
		_case_begin_4771988128:;
		{
			jule::drop(_378534_d->_field_constant);
			return;
		}
		goto _match_end_4771987760;
		_case_end_4771988128:;
		_match_end_4771987760:;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr)) { goto _case_end_4771991616; }
		_case_begin_4771991616:;
		{
			_378534_d->_field_constant=_11ab854f0_new_bool((*this)._field_l->_field_constant->_method_eqs((*this)._field_r->_field_constant));
		}
		goto _match_end_4771992608;
		_case_end_4771991616:;
		if (!((jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4771991728; }
		_case_begin_4771991728:;
		{
			_378534_d->_field_constant=_11ab854f0_new_bool((!((*this)._field_l->_field_constant->_method_eqs((*this)._field_r->_field_constant))));
		}
		goto _match_end_4771992608;
		_case_end_4771991728:;
		if (!((jule::Str("::", 2)) == _match_expr)) { goto _case_end_4771993808; }
		_case_begin_4771993808:;
		{
			_378534_d->_field_constant=_11ab854f0_new_bool((*this)._field_l->_field_constant->_method_or((*this)._field_r->_field_constant));
		}
		goto _match_end_4771992608;
		_case_end_4771993808:;
		if (!((jule::Str("&&", 2)) == _match_expr)) { goto _case_end_4771993920; }
		_case_begin_4771993920:;
		{
			_378534_d->_field_constant=_11ab854f0_new_bool((*this)._field_l->_field_constant->_method_and((*this)._field_r->_field_constant));
		}
		goto _match_end_4771992608;
		_case_end_4771993920:;
		if (!((jule::Str(">", 1)) == _match_expr)) { goto _case_end_4771994032; }
		_case_begin_4771994032:;
		{
			_378534_d->_field_constant=_11ab854f0_new_bool((*this)._field_l->_field_constant->_method_gt((*this)._field_r->_field_constant));
		}
		goto _match_end_4771992608;
		_case_end_4771994032:;
		if (!((jule::Str("<", 1)) == _match_expr)) { goto _case_end_4771994144; }
		_case_begin_4771994144:;
		{
			_378534_d->_field_constant=_11ab854f0_new_bool((*this)._field_l->_field_constant->_method_lt((*this)._field_r->_field_constant));
		}
		goto _match_end_4771992608;
		_case_end_4771994144:;
		if (!((jule::Str(">=", 2)) == _match_expr)) { goto _case_end_4771994256; }
		_case_begin_4771994256:;
		{
			_378534_d->_field_constant=_11ab854f0_new_bool((*this)._field_l->_field_constant->_method_gt((*this)._field_r->_field_constant) || (*this)._field_l->_field_constant->_method_eqs((*this)._field_r->_field_constant));
		}
		goto _match_end_4771992608;
		_case_end_4771994256:;
		if (!((jule::Str("<=", 2)) == _match_expr)) { goto _case_end_4771994368; }
		_case_begin_4771994368:;
		{
			_378534_d->_field_constant=_11ab854f0_new_bool((*this)._field_l->_field_constant->_method_lt((*this)._field_r->_field_constant) || (*this)._field_l->_field_constant->_method_eqs((*this)._field_r->_field_constant));
		}
		goto _match_end_4771992608;
		_case_end_4771994368:;
		if (!((jule::Str("+", 1)) == _match_expr)) { goto _case_end_4771994480; }
		_case_begin_4771994480:;
		{
			(*this)._field_l->_field_constant->_method_add((*this)._field_r->_field_constant);
			_378534_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4771992608;
		_case_end_4771994480:;
		if (!((jule::Str("-", 1)) == _match_expr)) { goto _case_end_4771994592; }
		_case_begin_4771994592:;
		{
			(*this)._field_l->_field_constant->_method_sub((*this)._field_r->_field_constant);
			_378534_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4771992608;
		_case_end_4771994592:;
		if (!((jule::Str("*", 1)) == _match_expr)) { goto _case_end_4771994704; }
		_case_begin_4771994704:;
		{
			(*this)._field_l->_field_constant->_method_mul((*this)._field_r->_field_constant);
			_378534_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4771992608;
		_case_end_4771994704:;
		if (!((jule::Str("/", 1)) == _match_expr)) { goto _case_end_4771994816; }
		_case_begin_4771994816:;
		{
			jule::Bool _383517_ok = (*this)._field_l->_field_constant->_method_div((*this)._field_r->_field_constant);
			if ((!(_383517_ok)) && ((*this)._field_r->_field_constant->_method_as_f64() == 0LL)) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("divide_by_zero", 14),jule::Slice<jule::Any>({}));
			}
			_378534_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4771992608;
		_case_end_4771994816:;
		if (!((jule::Str("%", 1)) == _match_expr)) { goto _case_end_4771994928; }
		_case_begin_4771994928:;
		{
			jule::Bool _384217_ok = (*this)._field_l->_field_constant->_method_mod((*this)._field_r->_field_constant);
			if ((!(_384217_ok)) && ((*this)._field_r->_field_constant->_method_as_f64() == 0LL)) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("divide_by_zero", 14),jule::Slice<jule::Any>({}));
			}
			_378534_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4771992608;
		_case_end_4771994928:;
		if (!((jule::Str("|", 1)) == _match_expr)) { goto _case_end_4771995040; }
		_case_begin_4771995040:;
		{
			(*this)._field_l->_field_constant->_method_bitwise_or((*this)._field_r->_field_constant);
			_378534_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4771992608;
		_case_end_4771995040:;
		if (!((jule::Str("&", 1)) == _match_expr)) { goto _case_end_4771995152; }
		_case_begin_4771995152:;
		{
			(*this)._field_l->_field_constant->_method_bitwise_and((*this)._field_r->_field_constant);
			_378534_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4771992608;
		_case_end_4771995152:;
		if (!((jule::Str("^", 1)) == _match_expr)) { goto _case_end_4771995264; }
		_case_begin_4771995264:;
		{
			(*this)._field_l->_field_constant->_method_xor((*this)._field_r->_field_constant);
			_378534_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4771992608;
		_case_end_4771995264:;
		if (!((jule::Str("<<", 2)) == _match_expr)) { goto _case_end_4771995392; }
		_case_begin_4771995392:;
		{
			_378534_d->_field_constant=(*this)._field_l->_field_constant;
			(*this)._field_l->_field_constant->_method_lshift((*this)._field_r->_field_constant);
			(*this)._method_assign_shift(_378534_d,static_cast<jule::F64>((*this)._field_r->_field_constant->_method_as_f64()));
		}
		goto _match_end_4771992608;
		_case_end_4771995392:;
		if (!((jule::Str(">>", 2)) == _match_expr)) { goto _case_end_4771995520; }
		_case_begin_4771995520:;
		{
			_378534_d->_field_constant=(*this)._field_l->_field_constant;
			(*this)._field_l->_field_constant->_method_rshift((*this)._field_r->_field_constant);
			(*this)._method_assign_shift(_378534_d,static_cast<jule::F64>((*this)._field_r->_field_constant->_method_as_f64()));
		}
		goto _match_end_4771992608;
		_case_end_4771995520:;
		_match_end_4771992608:;
	}
	_378534_d->_field_model=jule::Any(_378534_d->_field_constant);
}



inline void _11a53f4f0_BinopSolver::_method_post_const(jule::Ref<_11a53f4f0_Data> _387429_d) {
	if ((!(jule::real(_387429_d)))) {
		return;
	}
	if ((!(_387429_d->_method_is_const()))) {
		return;
	}
	_11a53f4f0_normalize_bitsize(_387429_d);
}



inline void _11a53f4f0_BinopSolver::_method_prepare_data(jule::Ref<_11a53f4f0_Data> _388531_d) {
	if (jule::real(_388531_d) && jule::real(_388531_d->_field_kind->_method_ref())) {
		_388531_d->_field_kind=_388531_d->_field_kind->_method_ref()->_field_elem;
	}
}



inline void _11a53f4f0_BinopSolver::_method_prepare_eval(void) {
	(*this)._method_prepare_data((*this)._field_r);
	(*this)._method_prepare_data((*this)._field_l);
}



inline void _11a53f4f0_BinopSolver::_method_check_data(jule::Ref<_11a53f4f0_Data> _389633_d) {
	jule::Ref<_119099250_FnIns> _389713_f = _389633_d->_field_kind->_method_fnc();
	if ((jule::real(_389713_f) && jule::real(_389713_f->_field_decl)) && _389713_f->_field_decl->_method_is_method()) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("invalid_expr_for_binop", 22),jule::Slice<jule::Any>({}));
	}
}



inline void _11a53f4f0_BinopSolver::_method_check_datas(void) {
	(*this)._method_check_data((*this)._field_l);
	(*this)._method_check_data((*this)._field_r);
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_BinopSolver::_method_solve_explicit(jule::Ref<_11a53f4f0_Data> _390837_l,jule::Ref<_11a53f4f0_Data> _390851_r) {
	std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple(_390837_l,_390851_r);
	(*this)._method_prepare_eval();
	(*this)._method_check_datas();
	jule::Ref<_11a53f4f0_Data> _391417_d = (*this)._method_eval();
	std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple(_390837_l,_390851_r);
	(*this)._method_solve_const(_391417_d);
	(*this)._method_post_const(_391417_d);
	if (jule::real(_391417_d) && (!(_391417_d->_method_is_const()))) {
		_391417_d->_field_model=jule::Any(jule::new_struct<_119748ec0_BinopExprModel>(new( std::nothrow ) _119748ec0_BinopExprModel(_390837_l->_field_model,_390851_r->_field_model,(*this)._field_op._field_kind)));
	}
	return _391417_d;
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_BinopSolver::_method_solve(jule::Ref<_118d9a790_BinopExpr> _393728_op) {
	jule::Ref<_11a53f4f0_Data> _393817_l = (*this)._field_e->_method_eval_expr_kind(_393728_op->_field_left);
	if ((!(jule::real(_393817_l))) || (!(jule::real(_393817_l->_field_kind)))) {
		return jule::new_ref<_11a53f4f0_Data>();
	}
	jule::Ref<_11a53f4f0_Data> _394317_r = (*this)._field_e->_method_eval_expr_kind(_393728_op->_field_right);
	if ((!(jule::real(_394317_r))) || (!(jule::real(_394317_r->_field_kind)))) {
		return jule::new_ref<_11a53f4f0_Data>();
	}
	(*this)._field_op=_393728_op->_field_op;
	jule::Ref<_11a53f4f0_Data> _395017_d = (*this)._method_solve_explicit(_393817_l,_394317_r);
	if ((jule::real(_395017_d) && _393817_l->_field_is_rune) && _394317_r->_field_is_rune) {
		_395017_d->_field_is_rune=true;
	}
	return _395017_d;
}







std::ostream &operator<<(std::ostream &_Stream, const _11a53f4f0_BinopSolver &_Src) {
	_Stream << "BinopSolver{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}



inline void _11a21f8a0_RetTypeChecker::_method_prepare_types(void) {
	(*this)._field_types=_11a21f8a0_get_fn_result_types((*this)._field_f);
}



inline void _11a21f8a0_RetTypeChecker::_method_prepare_exprs(jule::Ref<_118d9a790_Expr> _120536_e) {
	if ((!(jule::real(_120536_e)))) {
		return;
	}
	{
		auto &_match_expr{ _120536_e->_field_kind };
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_TupleExpr>>())) { goto _case_end_4768765936; }
		_case_begin_4768765936:;
		{
			jule::Ref<_118d9a790_TupleExpr> _121221_tup = _120536_e->_field_kind.operator jule::Ref<_118d9a790_TupleExpr>();
			(*this)._field_exprs=_121221_tup->_field_expr;
		}
		goto _match_end_4768764160;
		_case_end_4768765936:;
		_case_begin_4768764800:;
		{
			(*this)._field_exprs=append((*this)._field_exprs,jule::Slice<jule::Any>({_120536_e->_field_kind}));
		}
		goto _match_end_4768764160;
		_case_end_4768764800:;
		_match_end_4768764160:;
	}
}



inline void _11a21f8a0_RetTypeChecker::_method_ret_vars(void) {
	if ((*this)._field_f->_field_decl->_method_is_void()) {
		return;
	}
	(*this)._field_vars=jule::Slice<jule::Ref<_11a245f20_Var>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>((*this)._field_f->_field_decl->_field_result->_field_idents.len())));
	jule::Ref<_11a093930_ScopeChecker> _122617_root_scope = (*this)._field_sc->_method_get_root();
	jule::Int _122817_j = 0LL;
	{
		auto &__julec_range_expr = (*this)._field_f->_field_decl->_field_result->_field_idents;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _11a21f8a0_i = 0;
			_11911a8a0_Token _11a21f8a0_ident = *__julec_range_begin;
			_iter_begin_4768781344:;
			{
				if ((!(_11911a8a0_is_ignore_ident(_11a21f8a0_ident._field_kind)))) {
					(*this)._field_vars[static_cast<jule::Int>(_11a21f8a0_i)]=_122617_root_scope->_field_table->_field_vars._method_at(_122817_j);
					(_122817_j)++;
				} else {
					(*this)._field_vars[static_cast<jule::Int>(_11a21f8a0_i)]=jule::new_struct<_11a245f20_Var>(new( std::nothrow ) _11a245f20_Var(jule::Ref<_11a093930_Scope>(),_11911a8a0_Token(),jule::Str("_", 1),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Str(),jule::new_struct<_11a3c2e70_TypeSymbol>(new( std::nothrow ) _11a3c2e70_TypeSymbol(jule::Ref<_118d9a790_TypeDecl>(),(*this)._field_types[static_cast<jule::Int>(_11a21f8a0_i)])),jule::Ref<_11a53f4f0_Value>(),jule::Ref<_13feceeb0_ReferenceStack>(),jule::Slice<jule::Ref<_11a245f20_Var>>()));
				}
			}
			_iter_next_4768781344:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_11a21f8a0_i; _11a21f8a0_ident = *__julec_range_begin; goto _iter_begin_4768781344; }
			_iter_end_4768781344:;
		}
	}
	if (_122817_j == 0LL) {
		(*this)._field_vars=nullptr;
	}
}



inline void _11a21f8a0_RetTypeChecker::_method_check_exprs(void) {
	if ((*this)._field_exprs.len() == 0LL) {
		return;
	}
	jule::Slice<jule::Ref<_11a53f4f0_Data>> _125217_datas = jule::Slice<jule::Ref<_11a53f4f0_Data>>::alloc(static_cast<jule::Int>(0LL),static_cast<jule::Int>(static_cast<jule::I64>((*this)._field_exprs.len())));
	jule::Ref<_118d9a790_Expr> _125417_e = jule::new_struct<_118d9a790_Expr>(new( std::nothrow ) _118d9a790_Expr());
	{
		auto &__julec_range_expr = (*this)._field_exprs;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _11a21f8a0_i = 0;
			jule::Any _11a21f8a0_expr = *__julec_range_begin;
			_iter_begin_4768799696:;
			{
				if (_11a21f8a0_i >= (*this)._field_types.len()) {
					goto _iter_end_4768799696;
				}
				jule::Ref<_11a3c2e70_TypeKind> _126121_t = (*this)._field_types[static_cast<jule::Int>(_11a21f8a0_i)];
				_125417_e->_field_kind=_11a21f8a0_expr;
				jule::Ref<_11a53f4f0_Data> _126421_d = (*this)._field_sc->_field_s->_method_evalp(_125417_e,(*this)._field_sc,_126121_t);
				if ((!(jule::real(_126421_d)))) {
					goto _iter_next_4768799696;
				}
				_125217_datas=append(_125217_datas,jule::Slice<jule::Ref<_11a53f4f0_Data>>({_126421_d}));
				if ((!(_126421_d->_field_mutable)) && _11a3c2e70_is_mut(_126421_d->_field_kind)) {
					(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("ret_with_mut_typed_non_mut", 26),jule::Slice<jule::Any>({}));
					return;
				}
				_11a21f8a0_AssignTypeChecker _127621_ac = _11a21f8a0_AssignTypeChecker((*this)._field_sc->_field_s,_126121_t,_126421_d,(*this)._field_error_token,jule::Bool());
				_127621_ac._method_check();
			}
			_iter_next_4768799696:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_11a21f8a0_i; _11a21f8a0_expr = *__julec_range_begin; goto _iter_begin_4768799696; }
			_iter_end_4768799696:;
		}
	}
	if (_125217_datas.len() > 1LL) {
		(*this)._field_model=jule::Any(jule::new_struct<_119748ec0_TupleExprModel>(new( std::nothrow ) _119748ec0_TupleExprModel(_125217_datas)));
	} else if (_125217_datas.len() == 1LL) {
		(*this)._field_model=_125217_datas[static_cast<jule::Int>(0LL)]->_field_model;
	}
}



inline jule::Bool _11a21f8a0_RetTypeChecker::_method_check(jule::Ref<_118d9a790_Expr> _129528_e) {
	(*this)._method_prepare_types();
	(*this)._method_prepare_exprs(_129528_e);
	(*this)._method_ret_vars();
	jule::I64 _130013_n = (*this)._field_exprs.len();
	if ((_130013_n == 0LL) && (!((*this)._field_f->_field_decl->_method_is_void()))) {
		if ((!((*this)._field_f->_field_decl->_method_any_var()))) {
			(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("require_ret_expr", 16),jule::Slice<jule::Any>({}));
			return false;
		}
		return true;
	}
	if ((_130013_n > 0LL) && (*this)._field_f->_field_decl->_method_is_void()) {
		(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("void_function_ret_expr", 22),jule::Slice<jule::Any>({}));
		return false;
	}
	if (_130013_n > (*this)._field_types.len()) {
		(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("overflow_ret", 12),jule::Slice<jule::Any>({}));
	} else if (_130013_n < (*this)._field_types.len()) {
		(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("missing_multi_ret", 17),jule::Slice<jule::Any>({}));
	}
	(*this)._method_check_exprs();
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, const _11a21f8a0_RetTypeChecker &_Src) {
	_Stream << "RetTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline void _11a21f8a0_FnCallArgChecker::_method_push_err_token(_11911a8a0_Token _69033_token,jule::Str _69047_key,jule::Slice<jule::Any> _69057_args) {
	(*this)._field_e->_field_s->_method_push_err(_69033_token,_69047_key,_69057_args);
}



inline void _11a21f8a0_FnCallArgChecker::_method_push_err(jule::Str _69427_key,jule::Slice<jule::Any> _69437_args) {
	(*this)._method_push_err_token((*this)._field_error_token,_69427_key,_69437_args);
}



inline jule::Slice<jule::Ref<_119099250_ParamIns>> _11a21f8a0_FnCallArgChecker::_method_get_params(void) {
	if ((((*this)._field_f->_field_params.len() > 0LL) && jule::real((*this)._field_f->_field_params[static_cast<jule::Int>(0LL)]->_field_decl)) && (*this)._field_f->_field_params[static_cast<jule::Int>(0LL)]->_field_decl->_method_is_self()) {
		return (*this)._field_f->_field_params.slice(static_cast<jule::Int>(1LL));
	}
	return (*this)._field_f->_field_params;
}



inline jule::Bool _11a21f8a0_FnCallArgChecker::_method_check_counts(jule::Slice<jule::Ref<_119099250_ParamIns>> _70531_params) {
	jule::Bool _70554_ok = jule::Bool();
	jule::I64 _70617_n = _70531_params.len();
	if ((_70617_n > 0LL) && _70531_params[static_cast<jule::Int>(0LL)]->_field_decl->_method_is_self()) {
		(_70617_n)--;
	}
	jule::I64 _71117_diff = _70617_n - (*this)._field_args.len();
	{
		if (!((_71117_diff == 0LL))) { goto _case_end_4767497904; }
		_case_begin_4767497904:;
		{
			_70554_ok = true;
			return _70554_ok;
		}
		goto _match_end_4767497488;
		_case_end_4767497904:;
		if (!(((_70617_n > 0LL) && _70531_params[static_cast<jule::Int>(_70617_n - 1LL)]->_field_decl->_field_variadic))) { goto _case_end_4767498016; }
		_case_begin_4767498016:;
		{
			_70554_ok = true;
			return _70554_ok;
		}
		goto _match_end_4767497488;
		_case_end_4767498016:;
		if (!(((_71117_diff < 0LL) || (_71117_diff > _70531_params.len())))) { goto _case_end_4767498128; }
		_case_begin_4767498128:;
		{
			(*this)._method_push_err(jule::Str("argument_overflow", 17),jule::Slice<jule::Any>({}));
			_70554_ok = false;
			return _70554_ok;
		}
		goto _match_end_4767497488;
		_case_end_4767498128:;
		_match_end_4767497488:;
	}
	jule::Str _72417_idents = jule::Str("", 0);
	_iter_begin_4767502960:;
	if (!(_71117_diff > 0LL)) { goto _iter_end_4767502960; }
	{
		_72417_idents+=jule::Str(", ", 2) + _70531_params[static_cast<jule::Int>(_70617_n - _71117_diff)]->_field_decl->_field_ident;
	}
	_iter_next_4767502960:;
	(_71117_diff)--;
	goto _iter_begin_4767502960;
	_iter_end_4767502960:;
	_72417_idents=_72417_idents.slice(static_cast<jule::Int>(2LL));
	(*this)._method_push_err(jule::Str("missing_expr_for", 16),jule::Slice<jule::Any>({jule::Any(_72417_idents)}));
	_70554_ok = false;
	return _70554_ok;
}



inline jule::Bool _11a21f8a0_FnCallArgChecker::_method_check_arg(jule::Ref<_119099250_ParamIns> _73432_p,jule::Ref<_11a53f4f0_Data> _73450_arg,_11911a8a0_Token _73466_error_token) {
	jule::Bool _73488_ok = jule::Bool();
	if ((*this)._field_dynamic_annotation) {
		_11a21f8a0_DynamicTypeAnnotation _73621_dta = _11a21f8a0_DynamicTypeAnnotation((*this)._field_e,(*this)._field_f,_73432_p,_73450_arg,_73466_error_token,nullptr);
		_73488_ok=_73621_dta._method_annotate();
		if ((!(_73488_ok))) {
			(*this)._method_push_err_token(_73466_error_token,jule::Str("dynamic_type_annotation_failed", 30),jule::Slice<jule::Any>({}));
			_73488_ok = false;
			return _73488_ok;
		}
	}
	(*this)._field_e->_field_s->_method_check_validity_for_init_expr(_73432_p->_field_decl->_field_mutable,_73432_p->_field_decl->_field_reference,_73432_p->_field_kind,_73450_arg,_73466_error_token);
	(*this)._field_e->_field_s->_method_check_assign_type(_73432_p->_field_kind,_73450_arg,_73466_error_token,false);
	_73488_ok = true;
	return _73488_ok;
}



inline jule::Bool _11a21f8a0_FnCallArgChecker::_method_push(jule::Ref<_119099250_ParamIns> _75627_p,jule::Ref<_118d9a790_Expr> _75645_arg) {
	jule::Bool _75659_ok = jule::Bool();
	jule::Ref<_11a53f4f0_Data> _75717_d = jule::new_ref<_11a53f4f0_Data>();
	if ((!((*this)._field_dynamic_annotation)) && (!(_75627_p->_field_decl->_field_variadic))) {
		jule::Ref<_11a3c2e70_TypeKind> _75921_old = (*this)._field_e->_field_prefix;
		(*this)._field_e->_field_prefix=_75627_p->_field_kind;
		_75717_d=(*this)._field_e->_method_eval_expr_kind(_75645_arg->_field_kind);
		(*this)._field_e->_field_prefix=_75921_old;
	} else {
		jule::Ref<_11a3c2e70_TypeKind> _76421_old = (*this)._field_e->_field_prefix;
		jule::drop((*this)._field_e->_field_prefix);
		_75717_d=(*this)._field_e->_method_eval_expr_kind(_75645_arg->_field_kind);
		(*this)._field_e->_field_prefix=_76421_old;
	}
	if ((!(jule::real(_75717_d)))) {
		_75659_ok = false;
		return _75659_ok;
	}
	(*this)._field_arg_models=append((*this)._field_arg_models,jule::Slice<jule::Any>({_75717_d->_field_model}));
	_75659_ok = (*this)._method_check_arg(_75627_p,_75717_d,_75645_arg->_field_token);
	return _75659_ok;
}



inline jule::Bool _11a21f8a0_FnCallArgChecker::_method_push_variadic(jule::Ref<_119099250_ParamIns> _77636_p,jule::Int _77654_i) {
	jule::Bool _77664_ok = jule::Bool();
	_77664_ok=true;
	jule::Bool _77817_variadiced = false;
	jule::Bool _77913_more = (_77654_i + 1LL) < (*this)._field_args.len();
	jule::Ref<_119748ec0_SliceExprModel> _78017_model = jule::new_struct<_119748ec0_SliceExprModel>(new( std::nothrow ) _119748ec0_SliceExprModel(_77636_p->_field_kind,jule::Slice<jule::Any>()));
	jule::Ref<_11a3c2e70_TypeKind> _78417_old = (*this)._field_e->_field_prefix;
	_iter_begin_4768441680:;
	if (!(_77654_i < (*this)._field_args.len())) { goto _iter_end_4768441680; }
	{
		jule::Ref<_118d9a790_Expr> _78621_arg = (*this)._field_args[static_cast<jule::Int>(_77654_i)];
		{
			auto &_match_expr{ _78621_arg->_field_kind };
			if (!(_match_expr.type_is<jule::Ref<_118d9a790_VariadicExpr>>())) { goto _case_end_4768450928; }
			_case_begin_4768450928:;
			{
				(*this)._field_e->_field_prefix=jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),jule::new_struct<_11a3c2e70_Slc>(new( std::nothrow ) _11a3c2e70_Slc(_77636_p->_field_kind))));
			}
			goto _match_end_4768448368;
			_case_end_4768450928:;
			_case_begin_4768449696:;
			{
				(*this)._field_e->_field_prefix=_77636_p->_field_kind;
			}
			goto _match_end_4768448368;
			_case_end_4768449696:;
			_match_end_4768448368:;
		}
		jule::Ref<_11a53f4f0_Data> _79621_d = (*this)._field_e->_method_eval_expr_kind(_78621_arg->_field_kind);
		if ((!(jule::real(_79621_d)))) {
			_77664_ok=false;
			goto _iter_next_4768441680;
		}
		if (_79621_d->_field_variadiced) {
			_77817_variadiced=true;
			_79621_d->_field_variadiced=false;
			{
				auto &_match_expr{ _79621_d->_field_model };
				if (!(_match_expr.type_is<jule::Ref<_119748ec0_SliceExprModel>>())) { goto _case_end_4768461104; }
				_case_begin_4768461104:;
				{
					_78017_model=_79621_d->_field_model.operator jule::Ref<_119748ec0_SliceExprModel>();
					_78017_model->_field_elem_kind=_77636_p->_field_kind;
				}
				goto _match_end_4768458848;
				_case_end_4768461104:;
				_case_begin_4768459648:;
				{
					jule::drop(_78017_model);
					(*this)._field_arg_models=append((*this)._field_arg_models,jule::Slice<jule::Any>({_79621_d->_field_model}));
				}
				goto _match_end_4768458848;
				_case_end_4768459648:;
				_match_end_4768458848:;
			}
		} else {
			_78017_model->_field_elems=append(_78017_model->_field_elems,jule::Slice<jule::Any>({_79621_d->_field_model}));
		}
		_77664_ok=(*this)._method_check_arg(_77636_p,_79621_d,_78621_arg->_field_token) && _77664_ok;
	}
	_iter_next_4768441680:;
	(_77654_i)++;
	goto _iter_begin_4768441680;
	_iter_end_4768441680:;
	(*this)._field_e->_field_prefix=_78417_old;
	if (_77817_variadiced && _77913_more) {
		(*this)._method_push_err(jule::Str("more_args_with_variadiced", 25),jule::Slice<jule::Any>({}));
	}
	if (jule::real(_78017_model)) {
		(*this)._field_arg_models=append((*this)._field_arg_models,jule::Slice<jule::Any>({jule::Any(_78017_model)}));
	}
	_77664_ok = _77664_ok;
	return _77664_ok;
}



inline jule::Bool _11a21f8a0_FnCallArgChecker::_method_check_args(jule::Slice<jule::Ref<_119099250_ParamIns>> _83233_params) {
	jule::Bool _83256_ok = jule::Bool();
	_83256_ok=true;
	jule::Int _83417_i = 0LL;
	_julec_label_iter:;
	_iter_begin_4768484624:;
	if (!(_83417_i < _83233_params.len())) { goto _iter_end_4768484624; }
	{
		jule::Ref<_119099250_ParamIns> _83721_p = _83233_params[static_cast<jule::Int>(_83417_i)];
		{
			if (!((_83721_p->_field_decl->_method_is_self()))) { goto _case_end_4768490032; }
			goto _match_end_4768487760;
			_case_end_4768490032:;
			if (!((_83721_p->_field_decl->_field_variadic))) { goto _case_end_4768489216; }
			_case_begin_4768489216:;
			{
				_83256_ok=(*this)._method_push_variadic(_83721_p,_83417_i) && _83256_ok;
				goto _iter_end_4768484624;
			}
			goto _match_end_4768487760;
			_case_end_4768489216:;
			if (!(((*this)._field_args.len() <= _83417_i))) { goto _case_end_4768489328; }
			_case_begin_4768489328:;
			{
				_83256_ok=false;
				goto _iter_end_4768484624;
			}
			goto _match_end_4768487760;
			_case_end_4768489328:;
			_case_begin_4768488016:;
			{
				_83256_ok=(*this)._method_push(_83721_p,(*this)._field_args[static_cast<jule::Int>(_83417_i)]) && _83256_ok;
			}
			goto _match_end_4768487760;
			_case_end_4768488016:;
			_match_end_4768487760:;
		}
		(_83417_i)++;
	}
	_iter_next_4768484624:;
	goto _iter_begin_4768484624;
	_iter_end_4768484624:;
	_83256_ok = _83256_ok;
	return _83256_ok;
}



inline jule::Bool _11a21f8a0_FnCallArgChecker::_method_check_dynamic_type_annotation(void) {
	jule::Bool _85950_ok = jule::Bool();
	{
		auto &__julec_range_expr = (*this)._field_f->_field_generics;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11a3c2e70_TypeKind> _11a21f8a0_g = *__julec_range_begin;
			_iter_begin_4768499696:;
			{
				if ((!(jule::real(_11a21f8a0_g)))) {
					(*this)._method_push_err(jule::Str("dynamic_type_annotation_failed", 30),jule::Slice<jule::Any>({}));
					_85950_ok = false;
					return _85950_ok;
				}
			}
			_iter_next_4768499696:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a21f8a0_g = *__julec_range_begin; goto _iter_begin_4768499696; }
			_iter_end_4768499696:;
		}
	}
	_85950_ok = true;
	return _85950_ok;
}



inline jule::Bool _11a21f8a0_FnCallArgChecker::_method_check(void) {
	jule::Bool _86926_ok = jule::Bool();
	jule::Slice<jule::Ref<_119099250_ParamIns>> _87017_params = (*this)._method_get_params();
	_86926_ok=(*this)._method_check_counts(_87017_params);
	if ((!(_86926_ok))) {
		_86926_ok = false;
		return _86926_ok;
	}
	_86926_ok=(*this)._method_check_args(_87017_params);
	if (_86926_ok && (*this)._field_dynamic_annotation) {
		_86926_ok=(*this)._method_check_dynamic_type_annotation();
	}
	_86926_ok = _86926_ok;
	return _86926_ok;
}







std::ostream &operator<<(std::ostream &_Stream, const _11a21f8a0_FnCallArgChecker &_Src) {
	_Stream << "FnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamic_annotation:" << _Src._field_dynamic_annotation << ", ";
	_Stream << "arg_models:" << _Src._field_arg_models;
	_Stream << "}";
	return _Stream;
}



inline void _11a21f8a0_AssignTypeChecker::_method_push_err(jule::Str _43227_key,jule::Slice<jule::Any> _43237_args) {
	(*this)._field_s->_method_push_err((*this)._field_error_token,_43227_key,_43237_args);
}



inline jule::Bool _11a21f8a0_AssignTypeChecker::_method_check_validity(void) {
	jule::Bool _43717_valid = true;
	{
		if (!((jule::real((*this)._field_d->_field_kind->_method_fnc())))) { goto _case_end_4767277600; }
		_case_begin_4767277600:;
		{
			jule::Ref<_119099250_FnIns> _44117_f = (*this)._field_d->_field_kind->_method_fnc();
			{
				if (!((_44117_f->_method_is_builtin()))) { goto _case_end_4767282512; }
				_case_begin_4767282512:;
				{
					(*this)._method_push_err(jule::Str("builtin_as_anonymous_fn", 23),jule::Slice<jule::Any>({}));
					_43717_valid=false;
				}
				goto _match_end_4767282192;
				_case_end_4767282512:;
				if (!((_44117_f->_field_decl->_method_is_method()))) { goto _case_end_4767282624; }
				_case_begin_4767282624:;
				{
					(*this)._method_push_err(jule::Str("method_as_anonymous_fn", 22),jule::Slice<jule::Any>({}));
					_43717_valid=false;
				}
				goto _match_end_4767282192;
				_case_end_4767282624:;
				if (!((_44117_f->_field_decl->_field_generics.len() > 0LL))) { goto _case_end_4767282736; }
				_case_begin_4767282736:;
				{
					(*this)._method_push_err(jule::Str("genericed_fn_as_anonymous_fn", 28),jule::Slice<jule::Any>({}));
					_43717_valid=false;
				}
				goto _match_end_4767282192;
				_case_end_4767282736:;
				_match_end_4767282192:;
			}
		}
		goto _match_end_4767277344;
		_case_end_4767277600:;
		if (!((jule::real((*this)._field_d->_field_kind->_method_tup())))) { goto _case_end_4767277712; }
		_case_begin_4767277712:;
		{
			(*this)._method_push_err(jule::Str("tuple_assign_to_single", 22),jule::Slice<jule::Any>({}));
			_43717_valid=false;
		}
		goto _match_end_4767277344;
		_case_end_4767277712:;
		_match_end_4767277344:;
	}
	return _43717_valid;
}



inline jule::Bool _11a21f8a0_AssignTypeChecker::_method_check_const(void) {
	if ((((!((*this)._field_d->_method_is_const())) || (!(jule::real((*this)._field_dest->_method_prim())))) || (!(jule::real((*this)._field_d->_field_kind->_method_prim())))) || (!(_11ab8b300_is_num((*this)._field_d->_field_kind->_method_prim()->_field_kind)))) {
		return false;
	}
	jule::Str _47313_kind = (*this)._field_dest->_method_prim()->_field_kind;
	{
		if (!((_11ab8b300_is_float(_47313_kind)))) { goto _case_end_4767305360; }
		_case_begin_4767305360:;
		{
			if ((!(_11a21f8a0_float_assignable(_47313_kind,(*this)._field_d)))) {
				(*this)._method_push_err(jule::Str("overflow_limits", 15),jule::Slice<jule::Any>({}));
				return false;
			}
		}
		goto _match_end_4767304112;
		_case_end_4767305360:;
		if (!((_11ab8b300_is_int(_47313_kind)))) { goto _case_end_4767305472; }
		_case_begin_4767305472:;
		{
			if ((!(_11a21f8a0_int_assignable(_47313_kind,(*this)._field_d)))) {
				(*this)._method_push_err(jule::Str("overflow_limits", 15),jule::Slice<jule::Any>({}));
				return false;
			}
		}
		goto _match_end_4767304112;
		_case_end_4767305472:;
		_case_begin_4767304272:;
		{
			return false;
		}
		goto _match_end_4767304112;
		_case_end_4767304272:;
		_match_end_4767304112:;
	}
	return true;
}



inline jule::Bool _11a21f8a0_AssignTypeChecker::_method_check(void) {
	{
		if (!(((!(jule::real((*this)._field_d)))))) { goto _case_end_4767317008; }
		_case_begin_4767317008:;
		{
			return false;
		}
		goto _match_end_4767314464;
		_case_end_4767317008:;
		if (!(((!((*this)._method_check_validity()))))) { goto _case_end_4767315024; }
		_case_begin_4767315024:;
		{
			return false;
		}
		goto _match_end_4767314464;
		_case_end_4767315024:;
		if (!(((*this)._field_d->_field_variadiced))) { goto _case_end_4767315136; }
		_case_begin_4767315136:;
		{
			(*this)._method_push_err(jule::Str("incompatible_types", 18),jule::Slice<jule::Any>({jule::Any((*this)._field_dest->_method_to_str()),jule::Any(((*this)._field_d->_field_kind->_method_to_str() + jule::Str("...", 3)))}));
			return false;
		}
		goto _match_end_4767314464;
		_case_end_4767315136:;
		if (!(((*this)._method_check_const()))) { goto _case_end_4767315248; }
		_case_begin_4767315248:;
		{
			return true;
		}
		goto _match_end_4767314464;
		_case_end_4767315248:;
		_case_begin_4767314720:;
		{
			return (*this)._field_s->_method_check_type_compatibility((*this)._field_dest,(*this)._field_d->_field_kind,(*this)._field_error_token,(*this)._field_deref);
		}
		goto _match_end_4767314464;
		_case_end_4767314720:;
		_match_end_4767314464:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _11a21f8a0_AssignTypeChecker &_Src) {
	_Stream << "AssignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "deref:" << _Src._field_deref;
	_Stream << "}";
	return _Stream;
}



inline void _11a21f8a0_TypeCompatibilityChecker::_method_push_err(jule::Str _14627_key,jule::Slice<jule::Any> _14637_args) {
	(*this)._field_s->_method_push_err((*this)._field_error_token,_14627_key,_14637_args);
}



inline jule::Bool _11a21f8a0_TypeCompatibilityChecker::_method_check_trait(void) {
	jule::Bool _15032_ok = jule::Bool();
	if ((*this)._field_src->_method_is_nil()) {
		_15032_ok = true;
		return _15032_ok;
	}
	jule::Ref<_118e2b060_Trait> _15513_trt = (*this)._field_dest->_method_trt();
	jule::Bool _15617_ref = false;
	{
		if (!((jule::real((*this)._field_src->_method_ref())))) { goto _case_end_4768370608; }
		_case_begin_4768370608:;
		{
			_15617_ref=true;
			(*this)._field_src=(*this)._field_src->_method_ref()->_field_elem;
			if (jule::real((*this)._field_src->_method_strct())) {
				_15032_ok = false;
				return _15032_ok;
			}
			goto _case_begin_4768370720;
		}
		goto _match_end_4768369200;
		_case_end_4768370608:;
		if (!((jule::real((*this)._field_src->_method_strct())))) { goto _case_end_4768370720; }
		_case_begin_4768370720:;
		{
			jule::Ref<_118bb7d70_StructIns> _16717_s = (*this)._field_src->_method_strct();
			if ((!(_16717_s->_field_decl->_method_is_implements(_15513_trt)))) {
				_15032_ok = false;
				return _15032_ok;
			}
			if (_11a21f8a0_trait_has_reference_receiver(_15513_trt) && (!(_15617_ref))) {
				(*this)._method_push_err(jule::Str("trait_has_reference_parametered_function", 40),jule::Slice<jule::Any>({}));
				_15032_ok = false;
				return _15032_ok;
			}
			_15032_ok = true;
			return _15032_ok;
		}
		goto _match_end_4768369200;
		_case_end_4768370720:;
		if (!((jule::real((*this)._field_src->_method_trt())))) { goto _case_end_4768371632; }
		_case_begin_4768371632:;
		{
			_15032_ok = _15513_trt == (*this)._field_src->_method_trt();
			return _15032_ok;
		}
		goto _match_end_4768369200;
		_case_end_4768371632:;
		_case_begin_4768369648:;
		{
			_15032_ok = false;
			return _15032_ok;
		}
		goto _match_end_4768369200;
		_case_end_4768369648:;
		_match_end_4768369200:;
	}
}



inline jule::Bool _11a21f8a0_TypeCompatibilityChecker::_method_check_ref(void) {
	jule::Bool _18730_ok = jule::Bool();
	if ((*this)._field_dest->_method_to_str() == (*this)._field_src->_method_to_str()) {
		_18730_ok = true;
		return _18730_ok;
	} else if ((!((*this)._field_deref))) {
		_18730_ok = false;
		return _18730_ok;
	} else if ((!(jule::real((*this)._field_src->_method_ref())))) {
		(*this)._field_dest=(*this)._field_dest->_method_ref()->_field_elem;
		_18730_ok = (*this)._method_check();
		return _18730_ok;
	}
	(*this)._field_src=(*this)._field_src->_method_ref()->_field_elem;
	_18730_ok = (*this)._method_check();
	return _18730_ok;
}



inline jule::Bool _11a21f8a0_TypeCompatibilityChecker::_method_check_ptr(void) {
	jule::Bool _20130_ok = jule::Bool();
	if ((*this)._field_src->_method_is_nil()) {
		_20130_ok = true;
		return _20130_ok;
	}
	jule::Ref<_11a3c2e70_Ptr> _20617_src = (*this)._field_src->_method_ptr();
	if ((!(jule::real(_20617_src)))) {
		_20130_ok = false;
		return _20130_ok;
	}
	jule::Ref<_11a3c2e70_Ptr> _21117_dest = (*this)._field_dest->_method_ptr();
	if (_21117_dest->_method_is_unsafe()) {
		_20130_ok = true;
		return _20130_ok;
	}
	_11a21f8a0_TypeCompatibilityChecker _21717_sub = _11a21f8a0_TypeCompatibilityChecker((*this)._field_s,_21117_dest->_field_elem,_20617_src->_field_elem,(*this)._field_error_token,jule::Bool(),true);
	_20130_ok = _21717_sub._method_check();
	return _20130_ok;
}



inline jule::Bool _11a21f8a0_TypeCompatibilityChecker::_method_check_slc(void) {
	jule::Bool _22730_ok = jule::Bool();
	if ((*this)._field_src->_method_is_nil()) {
		_22730_ok = true;
		return _22730_ok;
	}
	jule::Ref<_11a3c2e70_Slc> _23217_src = (*this)._field_src->_method_slc();
	if ((!(jule::real(_23217_src)))) {
		_22730_ok = false;
		return _22730_ok;
	}
	jule::Ref<_11a3c2e70_Slc> _23617_dest = (*this)._field_dest->_method_slc();
	_11a21f8a0_TypeCompatibilityChecker _23817_sub = _11a21f8a0_TypeCompatibilityChecker((*this)._field_s,_23617_dest->_field_elem,_23217_src->_field_elem,(*this)._field_error_token,jule::Bool(),true);
	_22730_ok = _23817_sub._method_check();
	return _22730_ok;
}



inline jule::Bool _11a21f8a0_TypeCompatibilityChecker::_method_check_arr(void) {
	jule::Bool _24830_ok = jule::Bool();
	jule::Ref<_11a3c2e70_Arr> _24917_src = (*this)._field_src->_method_arr();
	if ((!(jule::real(_24917_src)))) {
		_24830_ok = false;
		return _24830_ok;
	}
	jule::Ref<_11a3c2e70_Arr> _25317_dest = (*this)._field_dest->_method_arr();
	if (_25317_dest->_field_n != _24917_src->_field_n) {
		_24830_ok = false;
		return _24830_ok;
	}
	_11a21f8a0_TypeCompatibilityChecker _25817_sub = _11a21f8a0_TypeCompatibilityChecker((*this)._field_s,_25317_dest->_field_elem,_24917_src->_field_elem,(*this)._field_error_token,jule::Bool(),true);
	_24830_ok = _25817_sub._method_check();
	return _24830_ok;
}



inline jule::Bool _11a21f8a0_TypeCompatibilityChecker::_method_check_map(void) {
	jule::Bool _26830_ok = jule::Bool();
	if ((*this)._field_src->_method_is_nil()) {
		_26830_ok = true;
		return _26830_ok;
	}
	jule::Ref<_11a3c2e70_Map> _27317_src = (*this)._field_src->_method_map();
	if ((!(jule::real(_27317_src)))) {
		_26830_ok = false;
		return _26830_ok;
	}
	jule::Ref<_11a3c2e70_Map> _27817_dest = (*this)._field_dest->_method_map();
	_11a21f8a0_TypeCompatibilityChecker _28017_sub = _11a21f8a0_TypeCompatibilityChecker((*this)._field_s,_27817_dest->_field_key,_27317_src->_field_key,(*this)._field_error_token,jule::Bool(),jule::Bool());
	if ((!(_28017_sub._method_check()))) {
		_26830_ok = false;
		return _26830_ok;
	}
	_28017_sub._field_src=_27317_src->_field_val;
	_28017_sub._field_dest=_27817_dest->_field_val;
	_26830_ok = _28017_sub._method_check();
	return _26830_ok;
}



inline jule::Bool _11a21f8a0_TypeCompatibilityChecker::_method_check_struct(void) {
	jule::Bool _29533_ok = jule::Bool();
	jule::Ref<_118bb7d70_StructIns> _29617_src = (*this)._field_src->_method_strct();
	if ((!(jule::real(_29617_src)))) {
		_29533_ok = false;
		return _29533_ok;
	}
	jule::Ref<_118bb7d70_StructIns> _30017_dest = (*this)._field_dest->_method_strct();
	{
		if (!(((_30017_dest->_field_decl).alloc != (_29617_src->_field_decl).alloc))) { goto _case_end_4767183952; }
		_case_begin_4767183952:;
		{
			_29533_ok = false;
			return _29533_ok;
		}
		goto _match_end_4767188304;
		_case_end_4767183952:;
		if (!((_30017_dest->_field_generics.len() == 0LL))) { goto _case_end_4767188752; }
		_case_begin_4767188752:;
		{
			_29533_ok = true;
			return _29533_ok;
		}
		goto _match_end_4767188304;
		_case_end_4767188752:;
		_match_end_4767188304:;
	}
	{
		auto &__julec_range_expr = _30017_dest->_field_generics;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _11a21f8a0_i = 0;
			jule::Ref<_11a3c2e70_TypeKind> _11a21f8a0_dg = *__julec_range_begin;
			_iter_begin_4767193584:;
			{
				jule::Ref<_11a3c2e70_TypeKind> _31021_sg = _29617_src->_field_generics[static_cast<jule::Int>(_11a21f8a0_i)];
				_11a21f8a0_TypeCompatibilityChecker _31121_sub = _11a21f8a0_TypeCompatibilityChecker((*this)._field_s,_11a21f8a0_dg,_31021_sg,(*this)._field_error_token,jule::Bool(),jule::Bool());
				if ((!(_31121_sub._method_check()))) {
					_29533_ok = false;
					return _29533_ok;
				}
			}
			_iter_next_4767193584:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_11a21f8a0_i; _11a21f8a0_dg = *__julec_range_begin; goto _iter_begin_4767193584; }
			_iter_end_4767193584:;
		}
	}
	_29533_ok = true;
	return _29533_ok;
}



inline jule::Bool _11a21f8a0_TypeCompatibilityChecker::_method_check_fn(void) {
	jule::Bool _32429_ok = jule::Bool();
	if ((*this)._field_src->_method_is_nil()) {
		_32429_ok = true;
		return _32429_ok;
	}
	jule::Ref<_119099250_FnIns> _32917_src = (*this)._field_src->_method_fnc();
	if ((!(jule::real(_32917_src)))) {
		_32429_ok = false;
		return _32429_ok;
	}
	jule::Ref<_119099250_FnIns> _33417_dest = (*this)._field_dest->_method_fnc();
	if (jule::real(_32917_src->_field_result) != jule::real(_33417_dest->_field_result)) {
		_32429_ok = false;
		return _32429_ok;
	}
	if (_32917_src->_field_params.len() != _33417_dest->_field_params.len()) {
		_32429_ok = false;
		return _32429_ok;
	}
	{
		auto &__julec_range_expr = _32917_src->_field_params;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _11a21f8a0_i = 0;
			_iter_begin_4767212832:;
			{
				jule::Ref<_119099250_ParamIns> _34321_srcp = _32917_src->_field_params[static_cast<jule::Int>(_11a21f8a0_i)];
				jule::Ref<_119099250_ParamIns> _34421_destp = _33417_dest->_field_params[static_cast<jule::Int>(_11a21f8a0_i)];
				if (jule::real(_34321_srcp) != jule::real(_34421_destp)) {
					_32429_ok = false;
					return _32429_ok;
				}
				_11a21f8a0_TypeCompatibilityChecker _34921_sub = _11a21f8a0_TypeCompatibilityChecker((*this)._field_s,_34421_destp->_field_kind,_34321_srcp->_field_kind,(*this)._field_error_token,jule::Bool(),jule::Bool());
				if ((!(_34921_sub._method_check()))) {
					_32429_ok = false;
					return _32429_ok;
				}
			}
			_iter_next_4767212832:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_11a21f8a0_i; goto _iter_begin_4767212832; }
			_iter_end_4767212832:;
		}
	}
	if (jule::real(_32917_src->_field_result)) {
		_11a21f8a0_TypeCompatibilityChecker _36121_sub = _11a21f8a0_TypeCompatibilityChecker((*this)._field_s,_33417_dest->_field_result,_32917_src->_field_result,(*this)._field_error_token,jule::Bool(),jule::Bool());
		if ((!(_36121_sub._method_check()))) {
			_32429_ok = false;
			return _32429_ok;
		}
	}
	_32429_ok = true;
	return _32429_ok;
}



inline jule::Bool _11a21f8a0_TypeCompatibilityChecker::_method_check_enum(void) {
	jule::Bool _37531_ok = jule::Bool();
	jule::Ref<_11a089b40_Enum> _37613_r = (*this)._field_src->_method_enm();
	if ((!(jule::real(_37613_r)))) {
		_37531_ok = false;
		return _37531_ok;
	}
	_37531_ok = ((*this)._field_dest->_method_enm()).alloc == (_37613_r).alloc;
	return _37531_ok;
}



inline jule::Bool _11a21f8a0_TypeCompatibilityChecker::_method_check(void) {
	jule::Bool _38326_ok = jule::Bool();
	if ((!(jule::real((*this)._field_src)))) {
		_38326_ok = false;
		return _38326_ok;
	}
	if (jule::real((*this)._field_dest->_method_ref())) {
		_38326_ok = (*this)._method_check_ref();
		return _38326_ok;
	}
	if (jule::real((*this)._field_src->_method_ref())) {
		(*this)._field_src=(*this)._field_src->_method_ref()->_field_elem;
	}
	{
		if (!((jule::real((*this)._field_dest->_method_trt())))) { goto _case_end_4767245088; }
		_case_begin_4767245088:;
		{
			_38326_ok = (*this)._method_check_trait();
			return _38326_ok;
		}
		goto _match_end_4767244656;
		_case_end_4767245088:;
		if (!((jule::real((*this)._field_dest->_method_ptr())))) { goto _case_end_4767245200; }
		_case_begin_4767245200:;
		{
			_38326_ok = (*this)._method_check_ptr();
			return _38326_ok;
		}
		goto _match_end_4767244656;
		_case_end_4767245200:;
		if (!((jule::real((*this)._field_dest->_method_slc())))) { goto _case_end_4767245312; }
		_case_begin_4767245312:;
		{
			_38326_ok = (*this)._method_check_slc();
			return _38326_ok;
		}
		goto _match_end_4767244656;
		_case_end_4767245312:;
		if (!((jule::real((*this)._field_dest->_method_arr())))) { goto _case_end_4767245424; }
		_case_begin_4767245424:;
		{
			_38326_ok = (*this)._method_check_arr();
			return _38326_ok;
		}
		goto _match_end_4767244656;
		_case_end_4767245424:;
		if (!((jule::real((*this)._field_dest->_method_map())))) { goto _case_end_4767245536; }
		_case_begin_4767245536:;
		{
			_38326_ok = (*this)._method_check_map();
			return _38326_ok;
		}
		goto _match_end_4767244656;
		_case_end_4767245536:;
		if (!((jule::real((*this)._field_dest->_method_enm())))) { goto _case_end_4767245648; }
		_case_begin_4767245648:;
		{
			_38326_ok = (*this)._method_check_enum();
			return _38326_ok;
		}
		goto _match_end_4767244656;
		_case_end_4767245648:;
		if (!((jule::real((*this)._field_dest->_method_strct())))) { goto _case_end_4767245760; }
		_case_begin_4767245760:;
		{
			_38326_ok = (*this)._method_check_struct();
			return _38326_ok;
		}
		goto _match_end_4767244656;
		_case_end_4767245760:;
		if (!((jule::real((*this)._field_dest->_method_fnc())))) { goto _case_end_4767245872; }
		_case_begin_4767245872:;
		{
			_38326_ok = (*this)._method_check_fn();
			return _38326_ok;
		}
		goto _match_end_4767244656;
		_case_end_4767245872:;
		_match_end_4767244656:;
	}
	jule::Str _40713_dest = (*this)._field_dest->_method_to_str();
	if ((!((*this)._field_ignore_any)) || (_40713_dest != jule::Str("any", 3))) {
		if (_11ac2f0a0_types_are_compatible(_40713_dest,(*this)._field_src->_method_to_str())) {
			_38326_ok = true;
			return _38326_ok;
		}
	}
	if (_11a3c2e70_is_nil_compatible((*this)._field_dest)) {
		_38326_ok = (*this)._field_src->_method_is_nil();
		return _38326_ok;
	}
	_38326_ok = false;
	return _38326_ok;
}







std::ostream &operator<<(std::ostream &_Stream, const _11a21f8a0_TypeCompatibilityChecker &_Src) {
	_Stream << "TypeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "deref:" << _Src._field_deref << ", ";
	_Stream << "ignore_any:" << _Src._field_ignore_any;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _11a245f20_Var::_method_is_initialized(void) {
	return jule::real((*this)._field_value);
}



inline jule::Bool _11a245f20_Var::_method_is_type_inferred(void) {
	return (!(jule::real((*this)._field_kind))) || (!(jule::real((*this)._field_kind->_field_decl)));
}







std::ostream &operator<<(std::ostream &_Stream, const _11a245f20_Var &_Src) {
	_Stream << "Var{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "constant:" << _Src._field_constant << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "value:" << _Src._field_value << ", ";
	_Stream << "references:" << _Src._field_references << ", ";
	_Stream << "depends:" << _Src._field_depends;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_11a0945e0_ImportInfo> _11a0945e0_ImportInfo::_method_find_package(jule::Str ) {
	return jule::new_ref<_11a0945e0_ImportInfo>();
}



inline jule::Ref<_11a0945e0_ImportInfo> _11a0945e0_ImportInfo::_method_select_package(jule::Fn<jule::Bool(jule::Ref<_11a0945e0_ImportInfo>)> ) {
	return jule::new_ref<_11a0945e0_ImportInfo>();
}



inline jule::Ref<_11a245f20_Var> _11a0945e0_ImportInfo::_method_find_var(jule::Str _14427_ident,jule::Bool _14439_cpp_linked) {
	if ((!((*this)._method_is_lookupable(_14427_ident)))) {
		return jule::new_ref<_11a245f20_Var>();
	}
	return _11a0945e0_find_var_in_package((*this)._field_package->_field_files,_14427_ident,false);
}



inline jule::Ref<_11a3c2e70_TypeAlias> _11a0945e0_ImportInfo::_method_find_type_alias(jule::Str _15734_ident,jule::Bool _15746_cpp_linked) {
	if ((!((*this)._method_is_lookupable(_15734_ident)))) {
		return jule::new_ref<_11a3c2e70_TypeAlias>();
	}
	return _11a0945e0_find_type_alias_in_package((*this)._field_package->_field_files,_15734_ident,false);
}



inline jule::Ref<_118bb7d70_Struct> _11a0945e0_ImportInfo::_method_find_struct(jule::Str _17030_ident,jule::Bool _17042_cpp_linked) {
	if ((!((*this)._method_is_lookupable(_17030_ident)))) {
		return jule::new_ref<_118bb7d70_Struct>();
	}
	return _11a0945e0_find_struct_in_package((*this)._field_package->_field_files,_17030_ident,false);
}



inline jule::Ref<_119099250_Fn> _11a0945e0_ImportInfo::_method_find_fn(jule::Str _18326_ident,jule::Bool _18338_cpp_linked) {
	if ((!((*this)._method_is_lookupable(_18326_ident)))) {
		return jule::new_ref<_119099250_Fn>();
	}
	return _11a0945e0_find_fn_in_package((*this)._field_package->_field_files,_18326_ident,false);
}



inline jule::Ref<_118e2b060_Trait> _11a0945e0_ImportInfo::_method_find_trait(jule::Str _19529_ident) {
	if ((!((*this)._method_is_lookupable(_19529_ident)))) {
		return jule::new_ref<_118e2b060_Trait>();
	}
	return _11a0945e0_find_trait_in_package((*this)._field_package->_field_files,_19529_ident);
}



inline jule::Ref<_11a089b40_Enum> _11a0945e0_ImportInfo::_method_find_enum(jule::Str _20728_ident) {
	if ((!((*this)._method_is_lookupable(_20728_ident)))) {
		return jule::new_ref<_11a089b40_Enum>();
	}
	return _11a0945e0_find_enum_in_package((*this)._field_package->_field_files,_20728_ident);
}



inline jule::Bool _11a0945e0_ImportInfo::_method_is_lookupable(jule::Str _21728_ident) {
	if ((*this)._field_cpp_linked) {
		return false;
	}
	if ((!((*this)._field_import_all))) {
		if ((*this)._method_exist_ident(jule::Str("self", 4))) {
			return true;
		}
		if ((*this)._field_selected.len() > 0LL) {
			if ((!((*this)._method_exist_ident(_21728_ident)))) {
				return false;
			}
		}
	}
	return true;
}



inline jule::Bool _11a0945e0_ImportInfo::_method_exist_ident(jule::Str _23726_ident) {
	{
		auto &__julec_range_expr = (*this)._field_selected;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			_11911a8a0_Token _11a0945e0_sident = *__julec_range_begin;
			_iter_begin_4766252768:;
			{
				if (_11a0945e0_sident._field_kind == _23726_ident) {
					return true;
				}
			}
			_iter_next_4766252768:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a0945e0_sident = *__julec_range_begin; goto _iter_begin_4766252768; }
			_iter_end_4766252768:;
		}
	}
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _11a0945e0_ImportInfo &_Src) {
	_Stream << "ImportInfo{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "link_path:" << _Src._field_link_path << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "duplicate:" << _Src._field_duplicate << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "std:" << _Src._field_std << ", ";
	_Stream << "import_all:" << _Src._field_import_all << ", ";
	_Stream << "selected:" << _Src._field_selected << ", ";
	_Stream << "package:" << _Src._field_package;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11a093930_ScopeLabel &_Src) {
	_Stream << "ScopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _11a091460_Impl::_method_is_trait_impl(void) {
	return (*this)._field_base._field_id != 0LLU;
}



inline jule::Bool _11a091460_Impl::_method_is_struct_impl(void) {
	return (*this)._field_base._field_id == 0LLU;
}







std::ostream &operator<<(std::ostream &_Stream, const _11a091460_Impl &_Src) {
	_Stream << "Impl{";
	_Stream << "base:" << _Src._field_base << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "methods:" << _Src._field_methods;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _11a089b40_Enum::_method_to_str(void) {
	return (*this)._field_ident;
}



inline jule::Bool _11a089b40_Enum::_method_equals(jule::Ref<_11a3c2e70_TypeKind> _3521_other) {
	jule::Ref<_11a089b40_Enum> _3613_enm = (_3521_other).alloc->_method_enm();
	if ((!(jule::real(_3613_enm)))) {
		return false;
	}
	return (&((*this))) == (_3613_enm).alloc;
}



inline jule::Ref<_11a089b40_EnumItem> _11a089b40_Enum::_method_find_item(jule::Str _4732_ident) {
	{
		auto &__julec_range_expr = (*this)._field_items;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11a089b40_EnumItem> _11a089b40_item = *__julec_range_begin;
			_iter_begin_4756880784:;
			{
				if (_11a089b40_item->_field_ident == _4732_ident) {
					return _11a089b40_item;
				}
			}
			_iter_next_4756880784:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a089b40_item = *__julec_range_begin; goto _iter_begin_4756880784; }
			_iter_end_4756880784:;
		}
	}
	return jule::new_ref<_11a089b40_EnumItem>();
}







std::ostream &operator<<(std::ostream &_Stream, const _11a089b40_Enum &_Src) {
	_Stream << "Enum{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "items:" << _Src._field_items << ", ";
	_Stream << "doc:" << _Src._field_doc;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _11a089b40_EnumItem::_method_auto_expr(void) {
	return (!(jule::real((*this)._field_value)));
}







std::ostream &operator<<(std::ostream &_Stream, const _11a089b40_EnumItem &_Src) {
	_Stream << "EnumItem{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "value:" << _Src._field_value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _118e2b060_Trait::_method_to_str(void) {
	return (*this)._field_ident;
}



inline jule::Bool _118e2b060_Trait::_method_equals(jule::Ref<_11a3c2e70_TypeKind> _2421_other) {
	jule::Ref<_118e2b060_Trait> _2513_trt = (_2421_other).alloc->_method_trt();
	if ((!(jule::real(_2513_trt)))) {
		return false;
	}
	return (&((*this))) == (_2513_trt).alloc;
}



inline jule::Bool _118e2b060_Trait::_method_is_builtin(void) {
	return (*this)._field_token._field_id == 0LLU;
}



inline jule::Ref<_119099250_Fn> _118e2b060_Trait::_method_find_method(jule::Str _3934_ident) {
	{
		auto &__julec_range_expr = (*this)._field_methods;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_119099250_Fn> _118e2b060_f = *__julec_range_begin;
			_iter_begin_4756866112:;
			{
				if (_118e2b060_f->_field_ident == _3934_ident) {
					return _118e2b060_f;
				}
			}
			_iter_next_4756866112:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _118e2b060_f = *__julec_range_begin; goto _iter_begin_4756866112; }
			_iter_end_4756866112:;
		}
	}
	return jule::new_ref<_119099250_Fn>();
}







std::ostream &operator<<(std::ostream &_Stream, const _118e2b060_Trait &_Src) {
	_Stream << "Trait{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "implemented:" << _Src._field_implemented;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _13feceeb0_Pass &_Src) {
	_Stream << "Pass{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "text:" << _Src._field_text;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _119099250_Fn::_method_is_void(void) {
	return (!(jule::real((*this)._field_result)));
}



inline jule::Bool _119099250_Fn::_method_is_method(void) {
	return jule::real((*this)._field_owner);
}



inline jule::Bool _119099250_Fn::_method_is_entry_point(void) {
	return (*this)._field_ident == jule::Str("main", 4);
}



inline jule::Bool _119099250_Fn::_method_is_init(void) {
	return (*this)._field_ident == jule::Str("init", 4);
}



inline jule::Bool _119099250_Fn::_method_is_anon(void) {
	return _11911a8a0_is_anon_ident((*this)._field_ident);
}



inline jule::Bool _119099250_Fn::_method_any_var(void) {
	return jule::real((*this)._field_result) && ((*this)._field_result->_field_idents.len() > 0LL);
}



inline jule::Bool _119099250_Fn::_method_parameters_uses_generics(void) {
	if ((*this)._field_generics.len() == 0LL) {
		return false;
	}
	{
		auto &__julec_range_expr = (*this)._field_params;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_119099250_Param> _119099250_p = *__julec_range_begin;
			_iter_begin_4764746608:;
			{
				if (_119099250_p->_method_is_self()) {
					goto _iter_next_4764746608;
				}
				jule::Str _9417_pk = _119099250_p->_field_kind->_field_kind->_method_to_str();
				{
					auto &__julec_range_expr = (*this)._field_generics;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Ref<_118d9a790_GenericDecl> _119099250_g = *__julec_range_begin;
						_iter_begin_4764752528:;
						{
							if (_9417_pk.find(_119099250_g->_field_ident) != -1LL) {
								return true;
							}
						}
						_iter_next_4764752528:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { _119099250_g = *__julec_range_begin; goto _iter_begin_4764752528; }
						_iter_end_4764752528:;
					}
				}
			}
			_iter_next_4764746608:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _119099250_p = *__julec_range_begin; goto _iter_begin_4764746608; }
			_iter_end_4764746608:;
		}
	}
	return false;
}



inline jule::Bool _119099250_Fn::_method_result_uses_generics(void) {
	if ((*this)._method_is_void()) {
		return false;
	} else if ((!(jule::real((*this)._field_result->_field_kind))) || (!(jule::real((*this)._field_result->_field_kind->_field_kind)))) {
		return false;
	}
	jule::Str _11313_rk = (*this)._field_result->_field_kind->_field_kind->_method_to_str();
	{
		auto &__julec_range_expr = (*this)._field_generics;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_118d9a790_GenericDecl> _119099250_g = *__julec_range_begin;
			_iter_begin_4764765232:;
			{
				if (_11313_rk.find(_119099250_g->_field_ident) != -1LL) {
					return true;
				}
			}
			_iter_next_4764765232:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _119099250_g = *__julec_range_begin; goto _iter_begin_4764765232; }
			_iter_end_4764765232:;
		}
	}
	return false;
}



inline jule::Ref<_119099250_FnIns> _119099250_Fn::_method_instance_force(void) {
	jule::Ref<_119099250_FnIns> _12617_ins = jule::new_struct<_119099250_FnIns>(new( std::nothrow ) _119099250_FnIns(jule::Ref<_118bb7d70_StructIns>(),this->self,jule::Slice<jule::Ref<_11a3c2e70_TypeKind>>(),jule::Slice<jule::Ref<_119099250_ParamIns>>(),jule::Ref<_11a3c2e70_TypeKind>(),jule::new_struct<_11a093930_Scope>(new( std::nothrow ) _11a093930_Scope()),jule::Fn<jule::Ref<_11a53f4f0_Data>(jule::Ref<_11a53f4f0_Eval>,jule::Ref<_118d9a790_FnCallExpr>,jule::Ref<_11a53f4f0_Data>)>(),jule::Bool(),jule::Bool()));
	_12617_ins->_field_params=jule::Slice<jule::Ref<_119099250_ParamIns>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(this->self->_field_params.len())));
	{
		auto &__julec_range_expr = this->self->_field_params;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _119099250_i = 0;
			jule::Ref<_119099250_Param> _119099250_p = *__julec_range_begin;
			_iter_begin_4764776144:;
			{
				_12617_ins->_field_params[static_cast<jule::Int>(_119099250_i)]=_119099250_p->_method_instance();
			}
			_iter_next_4764776144:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_119099250_i; _119099250_p = *__julec_range_begin; goto _iter_begin_4764776144; }
			_iter_end_4764776144:;
		}
	}
	if (jule::real(_12617_ins->_field_decl->_field_result)) {
		_12617_ins->_field_result=_12617_ins->_field_decl->_field_result->_field_kind->_field_kind;
	}
	return _12617_ins;
}



inline jule::Ref<_119099250_FnIns> _119099250_Fn::_method_instance(void) {
	if ((this->self->_field_generics.len() == 0LL) && (this->self->_field_instances.len() == 1LL)) {
		return this->self->_field_instances[static_cast<jule::Int>(0LL)];
	}
	return this->self->_method_instance_force();
}



inline std::tuple<jule::Bool,jule::Int> _119099250_Fn::_method_append_instance(jule::Ref<_119099250_FnIns> _15238_ins) {
	if ((*this)._field_generics.len() == 0LL) {
		if ((*this)._field_instances.len() == 1LL) {
			return std::make_tuple(false,0LL);
		}
		(*this)._field_instances=append((*this)._field_instances,jule::Slice<jule::Ref<_119099250_FnIns>>({_15238_ins}));
		return std::make_tuple(true,-1LL);
	}
	if ((*this)._field_instances.len() == 0LL) {
		(*this)._field_instances=append((*this)._field_instances,jule::Slice<jule::Ref<_119099250_FnIns>>({_15238_ins}));
		return std::make_tuple(true,-1LL);
	}
	{
		auto &__julec_range_expr = (*this)._field_instances;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _119099250_j = 0;
			jule::Ref<_119099250_FnIns> _119099250_ains = *__julec_range_begin;
			_iter_begin_4764798656:;
			{
				{
					auto &__julec_range_expr = _119099250_ains->_field_generics;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Int _119099250_i = 0;
						jule::Ref<_11a3c2e70_TypeKind> _119099250_ag = *__julec_range_begin;
						_iter_begin_4764805600:;
						{
							if (_119099250_ag->_method_equals(_15238_ins->_field_generics[static_cast<jule::Int>(_119099250_i)])) {
								return std::make_tuple(false,_119099250_j);
							}
						}
						_iter_next_4764805600:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { ++_119099250_i; _119099250_ag = *__julec_range_begin; goto _iter_begin_4764805600; }
						_iter_end_4764805600:;
					}
				}
			}
			_iter_next_4764798656:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_119099250_j; _119099250_ains = *__julec_range_begin; goto _iter_begin_4764798656; }
			_iter_end_4764798656:;
		}
	}
	(*this)._field_instances=append((*this)._field_instances,jule::Slice<jule::Ref<_119099250_FnIns>>({_15238_ins}));
	return std::make_tuple(true,-1LL);
}







std::ostream &operator<<(std::ostream &_Stream, const _119099250_Fn &_Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "global:" << _Src._field_global << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "params:" << _Src._field_params << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "references:" << _Src._field_references << ", ";
	_Stream << "instances:" << _Src._field_instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_119099250_ParamIns> _119099250_Param::_method_instance(void) {
	return jule::new_struct<_119099250_ParamIns>(new( std::nothrow ) _119099250_ParamIns(this->self,jule::Ref<_11a3c2e70_TypeKind>()));
}



inline jule::Bool _119099250_Param::_method_is_self(void) {
	return ((*this)._field_ident == jule::Str("&self", 5)) || ((*this)._field_ident == jule::Str("self", 4));
}



inline jule::Bool _119099250_Param::_method_is_ref(void) {
	return ((*this)._field_ident != jule::Str("", 0)) && ((*this)._field_ident[static_cast<jule::Int>(0LL)] == '&');
}







std::ostream &operator<<(std::ostream &_Stream, const _119099250_Param &_Src) {
	_Stream << "Param{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_118bb7d70_FieldIns> _118bb7d70_Field::_method_instance(void) {
	return jule::new_struct<_118bb7d70_FieldIns>(new( std::nothrow ) _118bb7d70_FieldIns(this->self,this->self->_field_kind->_field_kind));
}







std::ostream &operator<<(std::ostream &_Stream, const _118bb7d70_Field &_Src) {
	_Stream << "Field{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _118dbfd80_AssignInfo &_Src) {
	_Stream << "AssignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _118d9a790_Impl::_method_is_trait_impl(void) {
	return (*this)._field_base._field_id != 0LLU;
}



inline jule::Bool _118d9a790_Impl::_method_is_struct_impl(void) {
	return (*this)._field_base._field_id == 0LLU;
}







std::ostream &operator<<(std::ostream &_Stream, const _118d9a790_Impl &_Src) {
	_Stream << "Impl{";
	_Stream << "base:" << _Src._field_base << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "methods:" << _Src._field_methods;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _118d9a790_TraitDecl &_Src) {
	_Stream << "TraitDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments << ", ";
	_Stream << "methods:" << _Src._field_methods;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _118d9a790_StructDecl &_Src) {
	_Stream << "StructDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _118d9a790_FieldDecl &_Src) {
	_Stream << "FieldDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _118d9a790_EnumDecl::_method_default_typed(void) {
	return (!(jule::real((*this)._field_kind)));
}







std::ostream &operator<<(std::ostream &_Stream, const _118d9a790_EnumDecl &_Src) {
	_Stream << "EnumDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "items:" << _Src._field_items << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _118d9a790_EnumItemDecl::_method_auto_expr(void) {
	return (!(jule::real((*this)._field_expr)));
}







std::ostream &operator<<(std::ostream &_Stream, const _118d9a790_EnumItemDecl &_Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _118d9a790_UseDecl &_Src) {
	_Stream << "UseDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "link_path:" << _Src._field_link_path << ", ";
	_Stream << "full:" << _Src._field_full << ", ";
	_Stream << "selected:" << _Src._field_selected << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "std:" << _Src._field_std;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _118d9a790_Case &_Src) {
	_Stream << "Case{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _118d9a790_TypeAliasDecl &_Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _118d9a790_Else &_Src) {
	_Stream << "Else{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _118d9a790_If &_Src) {
	_Stream << "If{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _118d9a790_ContSt &_Src) {
	_Stream << "ContSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _118d9a790_BreakSt &_Src) {
	_Stream << "BreakSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _118d9a790_VarDecl &_Src) {
	_Stream << "VarDecl{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "constant:" << _Src._field_constant << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _118d9a790_FnDecl &_Src) {
	_Stream << "FnDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "global:" << _Src._field_global << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "params:" << _Src._field_params;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _118d9a790_ParamDecl::_method_is_self(void) {
	return (*this)._field_ident.has_suffix(jule::Str("self", 4));
}



inline jule::Bool _118d9a790_ParamDecl::_method_is_ref(void) {
	return ((*this)._field_ident != jule::Str("", 0)) && ((*this)._field_ident[static_cast<jule::Int>(0LL)] == '&');
}







std::ostream &operator<<(std::ostream &_Stream, const _118d9a790_ParamDecl &_Src) {
	_Stream << "ParamDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _118d9a790_AssignLeft &_Src) {
	_Stream << "AssignLeft{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _118d9a790_GotoSt &_Src) {
	_Stream << "GotoSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _118d9a790_GenericDecl &_Src) {
	_Stream << "GenericDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _118d9a790_FnCallExpr &_Src) {
	_Stream << "FnCallExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "concurrent:" << _Src._field_concurrent;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _118d9a790_Expr::_method_is_fn_call(void) {
	if ((*this)._field_kind == nullptr) {
		return false;
	}
	{
		auto &_match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_FnCallExpr>>())) { goto _case_end_5099082432; }
		_case_begin_5099082432:;
		{
			return true;
		}
		goto _match_end_5099080416;
		_case_end_5099082432:;
		_case_begin_5099081104:;
		{
			return false;
		}
		goto _match_end_5099080416;
		_case_end_5099081104:;
		_match_end_5099080416:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _118d9a790_Expr &_Src) {
	_Stream << "Expr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _118d9a790_IdentTypeDecl::_method_is_prim(void) {
	return (*this)._field_token._field_id == 1LLU;
}







std::ostream &operator<<(std::ostream &_Stream, const _118d9a790_IdentTypeDecl &_Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _118d9a790_TypeDecl &_Src) {
	_Stream << "TypeDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _118d9a790_Directive &_Src) {
	_Stream << "Directive{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "tag:" << _Src._field_tag << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _118d9a790_Comment::_method_is_directive(void) {
	return (*this)._field_text.has_prefix(jule::Str("jule:", 5));
}







std::ostream &operator<<(std::ostream &_Stream, const _118d9a790_Comment &_Src) {
	_Stream << "Comment{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "text:" << _Src._field_text;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _118d9a790_Node::_method_is_decl(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_EnumDecl>>() || _match_expr.type_is<jule::Ref<_118d9a790_FnDecl>>() || _match_expr.type_is<jule::Ref<_118d9a790_StructDecl>>() || _match_expr.type_is<jule::Ref<_118d9a790_TraitDecl>>() || _match_expr.type_is<jule::Ref<_118d9a790_TypeAliasDecl>>() || _match_expr.type_is<jule::Ref<_118d9a790_FieldDecl>>() || _match_expr.type_is<jule::Ref<_118d9a790_UseDecl>>() || _match_expr.type_is<jule::Ref<_118d9a790_VarDecl>>() || _match_expr.type_is<jule::Ref<_118d9a790_TypeDecl>>())) { goto _case_end_5099038048; }
		_case_begin_5099038048:;
		{
			return true;
		}
		goto _match_end_5099036176;
		_case_end_5099038048:;
		_case_begin_5099037040:;
		{
			return false;
		}
		goto _match_end_5099036176;
		_case_end_5099037040:;
		_match_end_5099036176:;
	}
}



inline jule::Bool _118d9a790_Node::_method_is_comment(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_Comment>>() || _match_expr.type_is<jule::Ref<_118d9a790_CommentGroup>>())) { goto _case_end_5099055344; }
		_case_begin_5099055344:;
		{
			return true;
		}
		goto _match_end_5099052976;
		_case_end_5099055344:;
		_case_begin_5099054320:;
		{
			return false;
		}
		goto _match_end_5099052976;
		_case_end_5099054320:;
		_match_end_5099052976:;
	}
}



inline jule::Bool _118d9a790_Node::_method_is_impl(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_Impl>>())) { goto _case_end_5099059440; }
		_case_begin_5099059440:;
		{
			return true;
		}
		goto _match_end_5099057088;
		_case_end_5099059440:;
		_case_begin_5099058416:;
		{
			return false;
		}
		goto _match_end_5099057088;
		_case_end_5099058416:;
		_match_end_5099057088:;
	}
}



inline jule::Bool _118d9a790_Node::_method_is_use_decl(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_UseDecl>>())) { goto _case_end_5099063216; }
		_case_begin_5099063216:;
		{
			return true;
		}
		goto _match_end_5099060848;
		_case_end_5099063216:;
		_case_begin_5099062192:;
		{
			return false;
		}
		goto _match_end_5099060848;
		_case_end_5099062192:;
		_match_end_5099060848:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _118d9a790_Node &_Src) {
	_Stream << "Node{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline _1192e4e90_Vector_0 _1192e4e90_Vector_0::_static_method_new(jule::Int _4319_cap) {
	_1192e4e90_Vector_0 _4417_vec = _1192e4e90_Vector_0();
	if (_4319_cap != 0LL) {
		_4417_vec._method_resize_alloc(_4319_cap);
	}
	return _4417_vec;
}



inline jule::Int _1192e4e90_Vector_0::_method_calc_grow(jule::Int _5324_delta) {
	jule::Int _5413_t = (*this)._field__buffer.len + _5324_delta;
	return _5413_t * 2LL;
}



inline void _1192e4e90_Vector_0::_method_resize_alloc(jule::Int _5831_n) {
	void* _5917_new_heap = __jule_std_vector_alloc<_11911a8a0_Token>(_5831_n);
	if (_5917_new_heap == nullptr) {
		jule::panic(jule::Str("Vector[T].resize_alloc: heap reallocation failed", 48));
	}
	if ((*this)._field__buffer.heap == nullptr) {
		(*this)._field__buffer.heap=_5917_new_heap;
		(*this)._field__buffer.cap=_5831_n;
		return;
	}
	{
		if ((*this)._field__buffer.len > 0LL) {
			__jule_std_vector_copy_range<_11911a8a0_Token>(_5917_new_heap,(*this)._field__buffer.heap,(*this)._field__buffer.len);
		}
		__jule_std_vector_dealloc<_11911a8a0_Token>((*this)._field__buffer.heap);
		(*this)._field__buffer.heap=_5917_new_heap;
	}
	(*this)._field__buffer.cap=_5831_n;
}



inline void _1192e4e90_Vector_0::_method_review_allocation(jule::Int _8336_delta) {
	if (((*this)._field__buffer.len + _8336_delta) > (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>((*this)._method_calc_grow(_8336_delta)));
	}
}



inline jule::Int _1192e4e90_Vector_0::_method_len(void) {
	return (*this)._field__buffer.len;
}



inline jule::Int _1192e4e90_Vector_0::_method_cap(void) {
	return (*this)._field__buffer.cap;
}



inline void _1192e4e90_Vector_0::_method_dealloc(void) {
	(*this)._field__buffer.drop();
}



inline void _1192e4e90_Vector_0::_method_set_len(jule::Int _10330_n) {
	if (_10330_n < 0LL) {
		(*this)._field__buffer.len=0LL;
		return;
	}
	if (_10330_n >= (*this)._field__buffer.len) {
		return;
	}
	(*this)._field__buffer.len=_10330_n;
}



inline _11911a8a0_Token _1192e4e90_Vector_0::_method_at(jule::Int _11525_i) {
	if ((_11525_i < 0LL) || (_11525_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].at: out of range", 26));
	}
	return __jule_std_vector_deref<_11911a8a0_Token>((*this)._field__buffer.heap,_11525_i);
}



inline void _1192e4e90_Vector_0::_method_set(jule::Int _12326_i,_11911a8a0_Token _12338_item) {
	if ((_12326_i < 0LL) || (_12326_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].set: out of range", 27));
	}
	{
		__jule_std_vector_heap_assign<_11911a8a0_Token>((*this)._field__buffer.heap,_12326_i,_12338_item);
	}
}



inline void _1192e4e90_Vector_0::_method_push(_11911a8a0_Token _13131_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	{
		__jule_std_vector_heap_assign<_11911a8a0_Token>((*this)._field__buffer.heap,(*this)._field__buffer.len,_13131_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _1192e4e90_Vector_0::_method_push_front(_11911a8a0_Token _14637_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	jule::Int _15217_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_4754794864:;
	if (!(_15217_i >= 0LL)) { goto _iter_end_4754794864; }
	{
		{
			__jule_std_vector_heap_move<_11911a8a0_Token>((*this)._field__buffer.heap,_15217_i,_15217_i + 1LL);
		}
	}
	_iter_next_4754794864:;
	(_15217_i)--;
	goto _iter_begin_4754794864;
	_iter_end_4754794864:;
	{
		__jule_std_vector_heap_assign<_11911a8a0_Token>((*this)._field__buffer.heap,0LL,_14637_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _1192e4e90_Vector_0::_method_append(jule::Slice<_11911a8a0_Token> _16333_items) {
	if (_16333_items.len() == 0LL) {
		return;
	}
	(*this)._method_review_allocation(static_cast<jule::I64>(_16333_items.len()));
	{
		__jule_std_vector_copy_range<_11911a8a0_Token>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(_11911a8a0_Token) * (*this)._field__buffer.len))),__jule_get_pointer_of_slice<_11911a8a0_Token>(_16333_items),static_cast<jule::I64>(_16333_items.len()));
	}
	(*this)._field__buffer.len+=static_cast<jule::I64>(_16333_items.len());
}



inline void _1192e4e90_Vector_0::_method_merge(_1192e4e90_Vector_0 _18032_vec) {
	if (_18032_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_18032_vec._field__buffer.len);
	{
		__jule_std_vector_copy_range<_11911a8a0_Token>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(_11911a8a0_Token) * (*this)._field__buffer.len))),_18032_vec._field__buffer.heap,_18032_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_18032_vec._field__buffer.len;
}



inline void _1192e4e90_Vector_0::_method_merge_front(_1192e4e90_Vector_0 _19738_vec) {
	if (_19738_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_19738_vec._field__buffer.len);
	jule::Int _20517_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_4754837536:;
	if (!(_20517_i >= 0LL)) { goto _iter_end_4754837536; }
	{
		{
			__jule_std_vector_heap_move<_11911a8a0_Token>((*this)._field__buffer.heap,_20517_i,_20517_i + _19738_vec._field__buffer.len);
		}
	}
	_iter_next_4754837536:;
	(_20517_i)--;
	goto _iter_begin_4754837536;
	_iter_end_4754837536:;
	{
		__jule_std_vector_copy_range<_11911a8a0_Token>((*this)._field__buffer.heap,_19738_vec._field__buffer.heap,_19738_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_19738_vec._field__buffer.len;
}



inline void _1192e4e90_Vector_0::_method_remove_range(jule::Int _22335_start,jule::Int _22347_n) {
	if (_22347_n < 1LL) {
		return;
	}
	if (_22335_start < -1LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at negative index", 57));
	}
	if (_22335_start >= (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at out of range", 55));
	}
	if ((((*this)._field__buffer.len - _22335_start) - _22347_n) < 0LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing continues at out of range ", 59));
	}
	jule::Int _23917_i = _22335_start + _22347_n;
	_iter_begin_4754863872:;
	if (!(_23917_i < (*this)._field__buffer.len)) { goto _iter_end_4754863872; }
	{
		{
			__jule_std_vector_heap_move<_11911a8a0_Token>((*this)._field__buffer.heap,_23917_i,_23917_i - _22347_n);
		}
	}
	_iter_next_4754863872:;
	(_23917_i)++;
	goto _iter_begin_4754863872;
	_iter_end_4754863872:;
	(*this)._field__buffer.len-=_22347_n;
}



inline void _1192e4e90_Vector_0::_method_insert(jule::Int _24829_i,_11911a8a0_Token _24841_item) {
	if (_24829_i < 0LL) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at negative index", 52));
	}
	if (_24829_i > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at out of range", 50));
	}
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	jule::Int _26117_j = (*this)._field__buffer.len - 1LL;
	_iter_begin_4754874880:;
	if (!(_26117_j >= _24829_i)) { goto _iter_end_4754874880; }
	{
		{
			__jule_std_vector_heap_move<_11911a8a0_Token>((*this)._field__buffer.heap,_26117_j,_26117_j + 1LL);
		}
	}
	_iter_next_4754874880:;
	(_26117_j)--;
	goto _iter_begin_4754874880;
	_iter_end_4754874880:;
	{
		__jule_std_vector_heap_assign<_11911a8a0_Token>((*this)._field__buffer.heap,_24829_i,_24841_item);
	}
	((*this)._field__buffer.len)++;
}



inline _1192e4e90_Vector_0 _1192e4e90_Vector_0::_method_slice(jule::Int _27228_start,jule::Int _27240_end) {
	if (_27228_start < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at negative index", 49));
	}
	if (_27228_start > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at out of range", 47));
	}
	if (_27240_end > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at out of range", 45));
	}
	if (_27240_end < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at negative index", 47));
	}
	if (_27228_start > _27240_end) {
		jule::panic(jule::Str("Vector[T].slice: start point < end point", 40));
	}
	if (_27228_start == _27240_end) {
		return _1192e4e90_Vector_0::_static_method_new(0LL);
	}
	_1192e4e90_Vector_0 _29317_vec = _1192e4e90_Vector_0::_static_method_new(_27240_end - _27228_start);
	{
		__jule_std_vector_copy_range<_11911a8a0_Token>(_29317_vec._field__buffer.heap,((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(_11911a8a0_Token) * _27228_start))),_29317_vec._field__buffer.cap);
	}
	_29317_vec._field__buffer.len=_29317_vec._field__buffer.cap;
	return _29317_vec;
}







std::ostream &operator<<(std::ostream &_Stream, const _1192e4e90_Vector_0 &_Src) {
	_Stream << "Vector{";
	_Stream << "_buffer: cpp._field__buffer";
	_Stream << "}";
	return _Stream;
}

inline _1192e4e90_Vector_1 _1192e4e90_Vector_1::_static_method_new(jule::Int _4319_cap) {
	_1192e4e90_Vector_1 _4417_vec = _1192e4e90_Vector_1();
	if (_4319_cap != 0LL) {
		_4417_vec._method_resize_alloc(_4319_cap);
	}
	return _4417_vec;
}



inline jule::Int _1192e4e90_Vector_1::_method_calc_grow(jule::Int _5324_delta) {
	jule::Int _5413_t = (*this)._field__buffer.len + _5324_delta;
	return _5413_t * 2LL;
}



inline void _1192e4e90_Vector_1::_method_resize_alloc(jule::Int _5831_n) {
	void* _5917_new_heap = __jule_std_vector_alloc<jule::Ref<_118d9a790_Directive>>(_5831_n);
	if (_5917_new_heap == nullptr) {
		jule::panic(jule::Str("Vector[T].resize_alloc: heap reallocation failed", 48));
	}
	if ((*this)._field__buffer.heap == nullptr) {
		(*this)._field__buffer.heap=_5917_new_heap;
		(*this)._field__buffer.cap=_5831_n;
		return;
	}
	{
		if ((*this)._field__buffer.len > 0LL) {
			__jule_std_vector_copy_range<jule::Ref<_118d9a790_Directive>>(_5917_new_heap,(*this)._field__buffer.heap,(*this)._field__buffer.len);
		}
		__jule_std_vector_dealloc<jule::Ref<_118d9a790_Directive>>((*this)._field__buffer.heap);
		(*this)._field__buffer.heap=_5917_new_heap;
	}
	(*this)._field__buffer.cap=_5831_n;
}



inline void _1192e4e90_Vector_1::_method_review_allocation(jule::Int _8336_delta) {
	if (((*this)._field__buffer.len + _8336_delta) > (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>((*this)._method_calc_grow(_8336_delta)));
	}
}



inline jule::Int _1192e4e90_Vector_1::_method_len(void) {
	return (*this)._field__buffer.len;
}



inline jule::Int _1192e4e90_Vector_1::_method_cap(void) {
	return (*this)._field__buffer.cap;
}



inline void _1192e4e90_Vector_1::_method_dealloc(void) {
	(*this)._field__buffer.drop();
}



inline void _1192e4e90_Vector_1::_method_set_len(jule::Int _10330_n) {
	if (_10330_n < 0LL) {
		(*this)._field__buffer.len=0LL;
		return;
	}
	if (_10330_n >= (*this)._field__buffer.len) {
		return;
	}
	(*this)._field__buffer.len=_10330_n;
}



inline jule::Ref<_118d9a790_Directive> _1192e4e90_Vector_1::_method_at(jule::Int _11525_i) {
	if ((_11525_i < 0LL) || (_11525_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].at: out of range", 26));
	}
	return __jule_std_vector_deref<jule::Ref<_118d9a790_Directive>>((*this)._field__buffer.heap,_11525_i);
}



inline void _1192e4e90_Vector_1::_method_set(jule::Int _12326_i,jule::Ref<_118d9a790_Directive> _12338_item) {
	if ((_12326_i < 0LL) || (_12326_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].set: out of range", 27));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_118d9a790_Directive>>((*this)._field__buffer.heap,_12326_i,_12338_item);
	}
}



inline void _1192e4e90_Vector_1::_method_push(jule::Ref<_118d9a790_Directive> _13131_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_118d9a790_Directive>>((*this)._field__buffer.heap,(*this)._field__buffer.len,_13131_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _1192e4e90_Vector_1::_method_push_front(jule::Ref<_118d9a790_Directive> _14637_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	jule::Int _15217_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_4755738416:;
	if (!(_15217_i >= 0LL)) { goto _iter_end_4755738416; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_118d9a790_Directive>>((*this)._field__buffer.heap,_15217_i,_15217_i + 1LL);
		}
	}
	_iter_next_4755738416:;
	(_15217_i)--;
	goto _iter_begin_4755738416;
	_iter_end_4755738416:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_118d9a790_Directive>>((*this)._field__buffer.heap,0LL,_14637_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _1192e4e90_Vector_1::_method_append(jule::Slice<jule::Ref<_118d9a790_Directive>> _16333_items) {
	if (_16333_items.len() == 0LL) {
		return;
	}
	(*this)._method_review_allocation(static_cast<jule::I64>(_16333_items.len()));
	{
		__jule_std_vector_copy_range<jule::Ref<_118d9a790_Directive>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_118d9a790_Directive>) * (*this)._field__buffer.len))),__jule_get_pointer_of_slice<jule::Ref<_118d9a790_Directive>>(_16333_items),static_cast<jule::I64>(_16333_items.len()));
	}
	(*this)._field__buffer.len+=static_cast<jule::I64>(_16333_items.len());
}



inline void _1192e4e90_Vector_1::_method_merge(_1192e4e90_Vector_1 _18032_vec) {
	if (_18032_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_18032_vec._field__buffer.len);
	{
		__jule_std_vector_copy_range<jule::Ref<_118d9a790_Directive>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_118d9a790_Directive>) * (*this)._field__buffer.len))),_18032_vec._field__buffer.heap,_18032_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_18032_vec._field__buffer.len;
}



inline void _1192e4e90_Vector_1::_method_merge_front(_1192e4e90_Vector_1 _19738_vec) {
	if (_19738_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_19738_vec._field__buffer.len);
	jule::Int _20517_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_4755781184:;
	if (!(_20517_i >= 0LL)) { goto _iter_end_4755781184; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_118d9a790_Directive>>((*this)._field__buffer.heap,_20517_i,_20517_i + _19738_vec._field__buffer.len);
		}
	}
	_iter_next_4755781184:;
	(_20517_i)--;
	goto _iter_begin_4755781184;
	_iter_end_4755781184:;
	{
		__jule_std_vector_copy_range<jule::Ref<_118d9a790_Directive>>((*this)._field__buffer.heap,_19738_vec._field__buffer.heap,_19738_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_19738_vec._field__buffer.len;
}



inline void _1192e4e90_Vector_1::_method_remove_range(jule::Int _22335_start,jule::Int _22347_n) {
	if (_22347_n < 1LL) {
		return;
	}
	if (_22335_start < -1LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at negative index", 57));
	}
	if (_22335_start >= (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at out of range", 55));
	}
	if ((((*this)._field__buffer.len - _22335_start) - _22347_n) < 0LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing continues at out of range ", 59));
	}
	jule::Int _23917_i = _22335_start + _22347_n;
	_iter_begin_4755807376:;
	if (!(_23917_i < (*this)._field__buffer.len)) { goto _iter_end_4755807376; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_118d9a790_Directive>>((*this)._field__buffer.heap,_23917_i,_23917_i - _22347_n);
		}
	}
	_iter_next_4755807376:;
	(_23917_i)++;
	goto _iter_begin_4755807376;
	_iter_end_4755807376:;
	(*this)._field__buffer.len-=_22347_n;
}



inline void _1192e4e90_Vector_1::_method_insert(jule::Int _24829_i,jule::Ref<_118d9a790_Directive> _24841_item) {
	if (_24829_i < 0LL) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at negative index", 52));
	}
	if (_24829_i > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at out of range", 50));
	}
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	jule::Int _26117_j = (*this)._field__buffer.len - 1LL;
	_iter_begin_4755818384:;
	if (!(_26117_j >= _24829_i)) { goto _iter_end_4755818384; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_118d9a790_Directive>>((*this)._field__buffer.heap,_26117_j,_26117_j + 1LL);
		}
	}
	_iter_next_4755818384:;
	(_26117_j)--;
	goto _iter_begin_4755818384;
	_iter_end_4755818384:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_118d9a790_Directive>>((*this)._field__buffer.heap,_24829_i,_24841_item);
	}
	((*this)._field__buffer.len)++;
}



inline _1192e4e90_Vector_1 _1192e4e90_Vector_1::_method_slice(jule::Int _27228_start,jule::Int _27240_end) {
	if (_27228_start < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at negative index", 49));
	}
	if (_27228_start > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at out of range", 47));
	}
	if (_27240_end > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at out of range", 45));
	}
	if (_27240_end < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at negative index", 47));
	}
	if (_27228_start > _27240_end) {
		jule::panic(jule::Str("Vector[T].slice: start point < end point", 40));
	}
	if (_27228_start == _27240_end) {
		return _1192e4e90_Vector_1::_static_method_new(0LL);
	}
	_1192e4e90_Vector_1 _29317_vec = _1192e4e90_Vector_1::_static_method_new(_27240_end - _27228_start);
	{
		__jule_std_vector_copy_range<jule::Ref<_118d9a790_Directive>>(_29317_vec._field__buffer.heap,((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_118d9a790_Directive>) * _27228_start))),_29317_vec._field__buffer.cap);
	}
	_29317_vec._field__buffer.len=_29317_vec._field__buffer.cap;
	return _29317_vec;
}







std::ostream &operator<<(std::ostream &_Stream, const _1192e4e90_Vector_1 &_Src) {
	_Stream << "Vector{";
	_Stream << "_buffer: cpp._field__buffer";
	_Stream << "}";
	return _Stream;
}

inline _1192e4e90_Vector_2 _1192e4e90_Vector_2::_static_method_new(jule::Int _4319_cap) {
	_1192e4e90_Vector_2 _4417_vec = _1192e4e90_Vector_2();
	if (_4319_cap != 0LL) {
		_4417_vec._method_resize_alloc(_4319_cap);
	}
	return _4417_vec;
}



inline jule::Int _1192e4e90_Vector_2::_method_calc_grow(jule::Int _5324_delta) {
	jule::Int _5413_t = (*this)._field__buffer.len + _5324_delta;
	return _5413_t * 2LL;
}



inline void _1192e4e90_Vector_2::_method_resize_alloc(jule::Int _5831_n) {
	void* _5917_new_heap = __jule_std_vector_alloc<jule::Ref<_118d9a790_UseDecl>>(_5831_n);
	if (_5917_new_heap == nullptr) {
		jule::panic(jule::Str("Vector[T].resize_alloc: heap reallocation failed", 48));
	}
	if ((*this)._field__buffer.heap == nullptr) {
		(*this)._field__buffer.heap=_5917_new_heap;
		(*this)._field__buffer.cap=_5831_n;
		return;
	}
	{
		if ((*this)._field__buffer.len > 0LL) {
			__jule_std_vector_copy_range<jule::Ref<_118d9a790_UseDecl>>(_5917_new_heap,(*this)._field__buffer.heap,(*this)._field__buffer.len);
		}
		__jule_std_vector_dealloc<jule::Ref<_118d9a790_UseDecl>>((*this)._field__buffer.heap);
		(*this)._field__buffer.heap=_5917_new_heap;
	}
	(*this)._field__buffer.cap=_5831_n;
}



inline void _1192e4e90_Vector_2::_method_review_allocation(jule::Int _8336_delta) {
	if (((*this)._field__buffer.len + _8336_delta) > (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>((*this)._method_calc_grow(_8336_delta)));
	}
}



inline jule::Int _1192e4e90_Vector_2::_method_len(void) {
	return (*this)._field__buffer.len;
}



inline jule::Int _1192e4e90_Vector_2::_method_cap(void) {
	return (*this)._field__buffer.cap;
}



inline void _1192e4e90_Vector_2::_method_dealloc(void) {
	(*this)._field__buffer.drop();
}



inline void _1192e4e90_Vector_2::_method_set_len(jule::Int _10330_n) {
	if (_10330_n < 0LL) {
		(*this)._field__buffer.len=0LL;
		return;
	}
	if (_10330_n >= (*this)._field__buffer.len) {
		return;
	}
	(*this)._field__buffer.len=_10330_n;
}



inline jule::Ref<_118d9a790_UseDecl> _1192e4e90_Vector_2::_method_at(jule::Int _11525_i) {
	if ((_11525_i < 0LL) || (_11525_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].at: out of range", 26));
	}
	return __jule_std_vector_deref<jule::Ref<_118d9a790_UseDecl>>((*this)._field__buffer.heap,_11525_i);
}



inline void _1192e4e90_Vector_2::_method_set(jule::Int _12326_i,jule::Ref<_118d9a790_UseDecl> _12338_item) {
	if ((_12326_i < 0LL) || (_12326_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].set: out of range", 27));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_118d9a790_UseDecl>>((*this)._field__buffer.heap,_12326_i,_12338_item);
	}
}



inline void _1192e4e90_Vector_2::_method_push(jule::Ref<_118d9a790_UseDecl> _13131_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_118d9a790_UseDecl>>((*this)._field__buffer.heap,(*this)._field__buffer.len,_13131_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _1192e4e90_Vector_2::_method_push_front(jule::Ref<_118d9a790_UseDecl> _14637_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	jule::Int _15217_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_4755943440:;
	if (!(_15217_i >= 0LL)) { goto _iter_end_4755943440; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_118d9a790_UseDecl>>((*this)._field__buffer.heap,_15217_i,_15217_i + 1LL);
		}
	}
	_iter_next_4755943440:;
	(_15217_i)--;
	goto _iter_begin_4755943440;
	_iter_end_4755943440:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_118d9a790_UseDecl>>((*this)._field__buffer.heap,0LL,_14637_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _1192e4e90_Vector_2::_method_append(jule::Slice<jule::Ref<_118d9a790_UseDecl>> _16333_items) {
	if (_16333_items.len() == 0LL) {
		return;
	}
	(*this)._method_review_allocation(static_cast<jule::I64>(_16333_items.len()));
	{
		__jule_std_vector_copy_range<jule::Ref<_118d9a790_UseDecl>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_118d9a790_UseDecl>) * (*this)._field__buffer.len))),__jule_get_pointer_of_slice<jule::Ref<_118d9a790_UseDecl>>(_16333_items),static_cast<jule::I64>(_16333_items.len()));
	}
	(*this)._field__buffer.len+=static_cast<jule::I64>(_16333_items.len());
}



inline void _1192e4e90_Vector_2::_method_merge(_1192e4e90_Vector_2 _18032_vec) {
	if (_18032_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_18032_vec._field__buffer.len);
	{
		__jule_std_vector_copy_range<jule::Ref<_118d9a790_UseDecl>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_118d9a790_UseDecl>) * (*this)._field__buffer.len))),_18032_vec._field__buffer.heap,_18032_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_18032_vec._field__buffer.len;
}



inline void _1192e4e90_Vector_2::_method_merge_front(_1192e4e90_Vector_2 _19738_vec) {
	if (_19738_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_19738_vec._field__buffer.len);
	jule::Int _20517_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_4755986192:;
	if (!(_20517_i >= 0LL)) { goto _iter_end_4755986192; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_118d9a790_UseDecl>>((*this)._field__buffer.heap,_20517_i,_20517_i + _19738_vec._field__buffer.len);
		}
	}
	_iter_next_4755986192:;
	(_20517_i)--;
	goto _iter_begin_4755986192;
	_iter_end_4755986192:;
	{
		__jule_std_vector_copy_range<jule::Ref<_118d9a790_UseDecl>>((*this)._field__buffer.heap,_19738_vec._field__buffer.heap,_19738_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_19738_vec._field__buffer.len;
}



inline void _1192e4e90_Vector_2::_method_remove_range(jule::Int _22335_start,jule::Int _22347_n) {
	if (_22347_n < 1LL) {
		return;
	}
	if (_22335_start < -1LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at negative index", 57));
	}
	if (_22335_start >= (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at out of range", 55));
	}
	if ((((*this)._field__buffer.len - _22335_start) - _22347_n) < 0LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing continues at out of range ", 59));
	}
	jule::Int _23917_i = _22335_start + _22347_n;
	_iter_begin_4756012384:;
	if (!(_23917_i < (*this)._field__buffer.len)) { goto _iter_end_4756012384; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_118d9a790_UseDecl>>((*this)._field__buffer.heap,_23917_i,_23917_i - _22347_n);
		}
	}
	_iter_next_4756012384:;
	(_23917_i)++;
	goto _iter_begin_4756012384;
	_iter_end_4756012384:;
	(*this)._field__buffer.len-=_22347_n;
}



inline void _1192e4e90_Vector_2::_method_insert(jule::Int _24829_i,jule::Ref<_118d9a790_UseDecl> _24841_item) {
	if (_24829_i < 0LL) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at negative index", 52));
	}
	if (_24829_i > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at out of range", 50));
	}
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	jule::Int _26117_j = (*this)._field__buffer.len - 1LL;
	_iter_begin_4756023392:;
	if (!(_26117_j >= _24829_i)) { goto _iter_end_4756023392; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_118d9a790_UseDecl>>((*this)._field__buffer.heap,_26117_j,_26117_j + 1LL);
		}
	}
	_iter_next_4756023392:;
	(_26117_j)--;
	goto _iter_begin_4756023392;
	_iter_end_4756023392:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_118d9a790_UseDecl>>((*this)._field__buffer.heap,_24829_i,_24841_item);
	}
	((*this)._field__buffer.len)++;
}



inline _1192e4e90_Vector_2 _1192e4e90_Vector_2::_method_slice(jule::Int _27228_start,jule::Int _27240_end) {
	if (_27228_start < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at negative index", 49));
	}
	if (_27228_start > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at out of range", 47));
	}
	if (_27240_end > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at out of range", 45));
	}
	if (_27240_end < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at negative index", 47));
	}
	if (_27228_start > _27240_end) {
		jule::panic(jule::Str("Vector[T].slice: start point < end point", 40));
	}
	if (_27228_start == _27240_end) {
		return _1192e4e90_Vector_2::_static_method_new(0LL);
	}
	_1192e4e90_Vector_2 _29317_vec = _1192e4e90_Vector_2::_static_method_new(_27240_end - _27228_start);
	{
		__jule_std_vector_copy_range<jule::Ref<_118d9a790_UseDecl>>(_29317_vec._field__buffer.heap,((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_118d9a790_UseDecl>) * _27228_start))),_29317_vec._field__buffer.cap);
	}
	_29317_vec._field__buffer.len=_29317_vec._field__buffer.cap;
	return _29317_vec;
}







std::ostream &operator<<(std::ostream &_Stream, const _1192e4e90_Vector_2 &_Src) {
	_Stream << "Vector{";
	_Stream << "_buffer: cpp._field__buffer";
	_Stream << "}";
	return _Stream;
}

inline _1192e4e90_Vector_3 _1192e4e90_Vector_3::_static_method_new(jule::Int _4319_cap) {
	_1192e4e90_Vector_3 _4417_vec = _1192e4e90_Vector_3();
	if (_4319_cap != 0LL) {
		_4417_vec._method_resize_alloc(_4319_cap);
	}
	return _4417_vec;
}



inline jule::Int _1192e4e90_Vector_3::_method_calc_grow(jule::Int _5324_delta) {
	jule::Int _5413_t = (*this)._field__buffer.len + _5324_delta;
	return _5413_t * 2LL;
}



inline void _1192e4e90_Vector_3::_method_resize_alloc(jule::Int _5831_n) {
	void* _5917_new_heap = __jule_std_vector_alloc<jule::Ref<_118d9a790_Impl>>(_5831_n);
	if (_5917_new_heap == nullptr) {
		jule::panic(jule::Str("Vector[T].resize_alloc: heap reallocation failed", 48));
	}
	if ((*this)._field__buffer.heap == nullptr) {
		(*this)._field__buffer.heap=_5917_new_heap;
		(*this)._field__buffer.cap=_5831_n;
		return;
	}
	{
		if ((*this)._field__buffer.len > 0LL) {
			__jule_std_vector_copy_range<jule::Ref<_118d9a790_Impl>>(_5917_new_heap,(*this)._field__buffer.heap,(*this)._field__buffer.len);
		}
		__jule_std_vector_dealloc<jule::Ref<_118d9a790_Impl>>((*this)._field__buffer.heap);
		(*this)._field__buffer.heap=_5917_new_heap;
	}
	(*this)._field__buffer.cap=_5831_n;
}



inline void _1192e4e90_Vector_3::_method_review_allocation(jule::Int _8336_delta) {
	if (((*this)._field__buffer.len + _8336_delta) > (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>((*this)._method_calc_grow(_8336_delta)));
	}
}



inline jule::Int _1192e4e90_Vector_3::_method_len(void) {
	return (*this)._field__buffer.len;
}



inline jule::Int _1192e4e90_Vector_3::_method_cap(void) {
	return (*this)._field__buffer.cap;
}



inline void _1192e4e90_Vector_3::_method_dealloc(void) {
	(*this)._field__buffer.drop();
}



inline void _1192e4e90_Vector_3::_method_set_len(jule::Int _10330_n) {
	if (_10330_n < 0LL) {
		(*this)._field__buffer.len=0LL;
		return;
	}
	if (_10330_n >= (*this)._field__buffer.len) {
		return;
	}
	(*this)._field__buffer.len=_10330_n;
}



inline jule::Ref<_118d9a790_Impl> _1192e4e90_Vector_3::_method_at(jule::Int _11525_i) {
	if ((_11525_i < 0LL) || (_11525_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].at: out of range", 26));
	}
	return __jule_std_vector_deref<jule::Ref<_118d9a790_Impl>>((*this)._field__buffer.heap,_11525_i);
}



inline void _1192e4e90_Vector_3::_method_set(jule::Int _12326_i,jule::Ref<_118d9a790_Impl> _12338_item) {
	if ((_12326_i < 0LL) || (_12326_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].set: out of range", 27));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_118d9a790_Impl>>((*this)._field__buffer.heap,_12326_i,_12338_item);
	}
}



inline void _1192e4e90_Vector_3::_method_push(jule::Ref<_118d9a790_Impl> _13131_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_118d9a790_Impl>>((*this)._field__buffer.heap,(*this)._field__buffer.len,_13131_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _1192e4e90_Vector_3::_method_push_front(jule::Ref<_118d9a790_Impl> _14637_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	jule::Int _15217_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5098267408:;
	if (!(_15217_i >= 0LL)) { goto _iter_end_5098267408; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_118d9a790_Impl>>((*this)._field__buffer.heap,_15217_i,_15217_i + 1LL);
		}
	}
	_iter_next_5098267408:;
	(_15217_i)--;
	goto _iter_begin_5098267408;
	_iter_end_5098267408:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_118d9a790_Impl>>((*this)._field__buffer.heap,0LL,_14637_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _1192e4e90_Vector_3::_method_append(jule::Slice<jule::Ref<_118d9a790_Impl>> _16333_items) {
	if (_16333_items.len() == 0LL) {
		return;
	}
	(*this)._method_review_allocation(static_cast<jule::I64>(_16333_items.len()));
	{
		__jule_std_vector_copy_range<jule::Ref<_118d9a790_Impl>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_118d9a790_Impl>) * (*this)._field__buffer.len))),__jule_get_pointer_of_slice<jule::Ref<_118d9a790_Impl>>(_16333_items),static_cast<jule::I64>(_16333_items.len()));
	}
	(*this)._field__buffer.len+=static_cast<jule::I64>(_16333_items.len());
}



inline void _1192e4e90_Vector_3::_method_merge(_1192e4e90_Vector_3 _18032_vec) {
	if (_18032_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_18032_vec._field__buffer.len);
	{
		__jule_std_vector_copy_range<jule::Ref<_118d9a790_Impl>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_118d9a790_Impl>) * (*this)._field__buffer.len))),_18032_vec._field__buffer.heap,_18032_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_18032_vec._field__buffer.len;
}



inline void _1192e4e90_Vector_3::_method_merge_front(_1192e4e90_Vector_3 _19738_vec) {
	if (_19738_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_19738_vec._field__buffer.len);
	jule::Int _20517_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5098484480:;
	if (!(_20517_i >= 0LL)) { goto _iter_end_5098484480; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_118d9a790_Impl>>((*this)._field__buffer.heap,_20517_i,_20517_i + _19738_vec._field__buffer.len);
		}
	}
	_iter_next_5098484480:;
	(_20517_i)--;
	goto _iter_begin_5098484480;
	_iter_end_5098484480:;
	{
		__jule_std_vector_copy_range<jule::Ref<_118d9a790_Impl>>((*this)._field__buffer.heap,_19738_vec._field__buffer.heap,_19738_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_19738_vec._field__buffer.len;
}



inline void _1192e4e90_Vector_3::_method_remove_range(jule::Int _22335_start,jule::Int _22347_n) {
	if (_22347_n < 1LL) {
		return;
	}
	if (_22335_start < -1LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at negative index", 57));
	}
	if (_22335_start >= (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at out of range", 55));
	}
	if ((((*this)._field__buffer.len - _22335_start) - _22347_n) < 0LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing continues at out of range ", 59));
	}
	jule::Int _23917_i = _22335_start + _22347_n;
	_iter_begin_5098510672:;
	if (!(_23917_i < (*this)._field__buffer.len)) { goto _iter_end_5098510672; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_118d9a790_Impl>>((*this)._field__buffer.heap,_23917_i,_23917_i - _22347_n);
		}
	}
	_iter_next_5098510672:;
	(_23917_i)++;
	goto _iter_begin_5098510672;
	_iter_end_5098510672:;
	(*this)._field__buffer.len-=_22347_n;
}



inline void _1192e4e90_Vector_3::_method_insert(jule::Int _24829_i,jule::Ref<_118d9a790_Impl> _24841_item) {
	if (_24829_i < 0LL) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at negative index", 52));
	}
	if (_24829_i > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at out of range", 50));
	}
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	jule::Int _26117_j = (*this)._field__buffer.len - 1LL;
	_iter_begin_5098521680:;
	if (!(_26117_j >= _24829_i)) { goto _iter_end_5098521680; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_118d9a790_Impl>>((*this)._field__buffer.heap,_26117_j,_26117_j + 1LL);
		}
	}
	_iter_next_5098521680:;
	(_26117_j)--;
	goto _iter_begin_5098521680;
	_iter_end_5098521680:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_118d9a790_Impl>>((*this)._field__buffer.heap,_24829_i,_24841_item);
	}
	((*this)._field__buffer.len)++;
}



inline _1192e4e90_Vector_3 _1192e4e90_Vector_3::_method_slice(jule::Int _27228_start,jule::Int _27240_end) {
	if (_27228_start < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at negative index", 49));
	}
	if (_27228_start > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at out of range", 47));
	}
	if (_27240_end > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at out of range", 45));
	}
	if (_27240_end < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at negative index", 47));
	}
	if (_27228_start > _27240_end) {
		jule::panic(jule::Str("Vector[T].slice: start point < end point", 40));
	}
	if (_27228_start == _27240_end) {
		return _1192e4e90_Vector_3::_static_method_new(0LL);
	}
	_1192e4e90_Vector_3 _29317_vec = _1192e4e90_Vector_3::_static_method_new(_27240_end - _27228_start);
	{
		__jule_std_vector_copy_range<jule::Ref<_118d9a790_Impl>>(_29317_vec._field__buffer.heap,((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_118d9a790_Impl>) * _27228_start))),_29317_vec._field__buffer.cap);
	}
	_29317_vec._field__buffer.len=_29317_vec._field__buffer.cap;
	return _29317_vec;
}







std::ostream &operator<<(std::ostream &_Stream, const _1192e4e90_Vector_3 &_Src) {
	_Stream << "Vector{";
	_Stream << "_buffer: cpp._field__buffer";
	_Stream << "}";
	return _Stream;
}

inline _1192e4e90_Vector_4 _1192e4e90_Vector_4::_static_method_new(jule::Int _4319_cap) {
	_1192e4e90_Vector_4 _4417_vec = _1192e4e90_Vector_4();
	if (_4319_cap != 0LL) {
		_4417_vec._method_resize_alloc(_4319_cap);
	}
	return _4417_vec;
}



inline jule::Int _1192e4e90_Vector_4::_method_calc_grow(jule::Int _5324_delta) {
	jule::Int _5413_t = (*this)._field__buffer.len + _5324_delta;
	return _5413_t * 2LL;
}



inline void _1192e4e90_Vector_4::_method_resize_alloc(jule::Int _5831_n) {
	void* _5917_new_heap = __jule_std_vector_alloc<jule::Ref<_118d9a790_Comment>>(_5831_n);
	if (_5917_new_heap == nullptr) {
		jule::panic(jule::Str("Vector[T].resize_alloc: heap reallocation failed", 48));
	}
	if ((*this)._field__buffer.heap == nullptr) {
		(*this)._field__buffer.heap=_5917_new_heap;
		(*this)._field__buffer.cap=_5831_n;
		return;
	}
	{
		if ((*this)._field__buffer.len > 0LL) {
			__jule_std_vector_copy_range<jule::Ref<_118d9a790_Comment>>(_5917_new_heap,(*this)._field__buffer.heap,(*this)._field__buffer.len);
		}
		__jule_std_vector_dealloc<jule::Ref<_118d9a790_Comment>>((*this)._field__buffer.heap);
		(*this)._field__buffer.heap=_5917_new_heap;
	}
	(*this)._field__buffer.cap=_5831_n;
}



inline void _1192e4e90_Vector_4::_method_review_allocation(jule::Int _8336_delta) {
	if (((*this)._field__buffer.len + _8336_delta) > (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>((*this)._method_calc_grow(_8336_delta)));
	}
}



inline jule::Int _1192e4e90_Vector_4::_method_len(void) {
	return (*this)._field__buffer.len;
}



inline jule::Int _1192e4e90_Vector_4::_method_cap(void) {
	return (*this)._field__buffer.cap;
}



inline void _1192e4e90_Vector_4::_method_dealloc(void) {
	(*this)._field__buffer.drop();
}



inline void _1192e4e90_Vector_4::_method_set_len(jule::Int _10330_n) {
	if (_10330_n < 0LL) {
		(*this)._field__buffer.len=0LL;
		return;
	}
	if (_10330_n >= (*this)._field__buffer.len) {
		return;
	}
	(*this)._field__buffer.len=_10330_n;
}



inline jule::Ref<_118d9a790_Comment> _1192e4e90_Vector_4::_method_at(jule::Int _11525_i) {
	if ((_11525_i < 0LL) || (_11525_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].at: out of range", 26));
	}
	return __jule_std_vector_deref<jule::Ref<_118d9a790_Comment>>((*this)._field__buffer.heap,_11525_i);
}



inline void _1192e4e90_Vector_4::_method_set(jule::Int _12326_i,jule::Ref<_118d9a790_Comment> _12338_item) {
	if ((_12326_i < 0LL) || (_12326_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].set: out of range", 27));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_118d9a790_Comment>>((*this)._field__buffer.heap,_12326_i,_12338_item);
	}
}



inline void _1192e4e90_Vector_4::_method_push(jule::Ref<_118d9a790_Comment> _13131_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_118d9a790_Comment>>((*this)._field__buffer.heap,(*this)._field__buffer.len,_13131_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _1192e4e90_Vector_4::_method_push_front(jule::Ref<_118d9a790_Comment> _14637_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	jule::Int _15217_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5098648720:;
	if (!(_15217_i >= 0LL)) { goto _iter_end_5098648720; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_118d9a790_Comment>>((*this)._field__buffer.heap,_15217_i,_15217_i + 1LL);
		}
	}
	_iter_next_5098648720:;
	(_15217_i)--;
	goto _iter_begin_5098648720;
	_iter_end_5098648720:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_118d9a790_Comment>>((*this)._field__buffer.heap,0LL,_14637_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _1192e4e90_Vector_4::_method_append(jule::Slice<jule::Ref<_118d9a790_Comment>> _16333_items) {
	if (_16333_items.len() == 0LL) {
		return;
	}
	(*this)._method_review_allocation(static_cast<jule::I64>(_16333_items.len()));
	{
		__jule_std_vector_copy_range<jule::Ref<_118d9a790_Comment>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_118d9a790_Comment>) * (*this)._field__buffer.len))),__jule_get_pointer_of_slice<jule::Ref<_118d9a790_Comment>>(_16333_items),static_cast<jule::I64>(_16333_items.len()));
	}
	(*this)._field__buffer.len+=static_cast<jule::I64>(_16333_items.len());
}



inline void _1192e4e90_Vector_4::_method_merge(_1192e4e90_Vector_4 _18032_vec) {
	if (_18032_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_18032_vec._field__buffer.len);
	{
		__jule_std_vector_copy_range<jule::Ref<_118d9a790_Comment>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_118d9a790_Comment>) * (*this)._field__buffer.len))),_18032_vec._field__buffer.heap,_18032_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_18032_vec._field__buffer.len;
}



inline void _1192e4e90_Vector_4::_method_merge_front(_1192e4e90_Vector_4 _19738_vec) {
	if (_19738_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_19738_vec._field__buffer.len);
	jule::Int _20517_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5098691152:;
	if (!(_20517_i >= 0LL)) { goto _iter_end_5098691152; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_118d9a790_Comment>>((*this)._field__buffer.heap,_20517_i,_20517_i + _19738_vec._field__buffer.len);
		}
	}
	_iter_next_5098691152:;
	(_20517_i)--;
	goto _iter_begin_5098691152;
	_iter_end_5098691152:;
	{
		__jule_std_vector_copy_range<jule::Ref<_118d9a790_Comment>>((*this)._field__buffer.heap,_19738_vec._field__buffer.heap,_19738_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_19738_vec._field__buffer.len;
}



inline void _1192e4e90_Vector_4::_method_remove_range(jule::Int _22335_start,jule::Int _22347_n) {
	if (_22347_n < 1LL) {
		return;
	}
	if (_22335_start < -1LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at negative index", 57));
	}
	if (_22335_start >= (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at out of range", 55));
	}
	if ((((*this)._field__buffer.len - _22335_start) - _22347_n) < 0LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing continues at out of range ", 59));
	}
	jule::Int _23917_i = _22335_start + _22347_n;
	_iter_begin_5098717344:;
	if (!(_23917_i < (*this)._field__buffer.len)) { goto _iter_end_5098717344; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_118d9a790_Comment>>((*this)._field__buffer.heap,_23917_i,_23917_i - _22347_n);
		}
	}
	_iter_next_5098717344:;
	(_23917_i)++;
	goto _iter_begin_5098717344;
	_iter_end_5098717344:;
	(*this)._field__buffer.len-=_22347_n;
}



inline void _1192e4e90_Vector_4::_method_insert(jule::Int _24829_i,jule::Ref<_118d9a790_Comment> _24841_item) {
	if (_24829_i < 0LL) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at negative index", 52));
	}
	if (_24829_i > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at out of range", 50));
	}
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	jule::Int _26117_j = (*this)._field__buffer.len - 1LL;
	_iter_begin_5098728352:;
	if (!(_26117_j >= _24829_i)) { goto _iter_end_5098728352; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_118d9a790_Comment>>((*this)._field__buffer.heap,_26117_j,_26117_j + 1LL);
		}
	}
	_iter_next_5098728352:;
	(_26117_j)--;
	goto _iter_begin_5098728352;
	_iter_end_5098728352:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_118d9a790_Comment>>((*this)._field__buffer.heap,_24829_i,_24841_item);
	}
	((*this)._field__buffer.len)++;
}



inline _1192e4e90_Vector_4 _1192e4e90_Vector_4::_method_slice(jule::Int _27228_start,jule::Int _27240_end) {
	if (_27228_start < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at negative index", 49));
	}
	if (_27228_start > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at out of range", 47));
	}
	if (_27240_end > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at out of range", 45));
	}
	if (_27240_end < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at negative index", 47));
	}
	if (_27228_start > _27240_end) {
		jule::panic(jule::Str("Vector[T].slice: start point < end point", 40));
	}
	if (_27228_start == _27240_end) {
		return _1192e4e90_Vector_4::_static_method_new(0LL);
	}
	_1192e4e90_Vector_4 _29317_vec = _1192e4e90_Vector_4::_static_method_new(_27240_end - _27228_start);
	{
		__jule_std_vector_copy_range<jule::Ref<_118d9a790_Comment>>(_29317_vec._field__buffer.heap,((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_118d9a790_Comment>) * _27228_start))),_29317_vec._field__buffer.cap);
	}
	_29317_vec._field__buffer.len=_29317_vec._field__buffer.cap;
	return _29317_vec;
}







std::ostream &operator<<(std::ostream &_Stream, const _1192e4e90_Vector_4 &_Src) {
	_Stream << "Vector{";
	_Stream << "_buffer: cpp._field__buffer";
	_Stream << "}";
	return _Stream;
}

inline _1192e4e90_Vector_5 _1192e4e90_Vector_5::_static_method_new(jule::Int _4319_cap) {
	_1192e4e90_Vector_5 _4417_vec = _1192e4e90_Vector_5();
	if (_4319_cap != 0LL) {
		_4417_vec._method_resize_alloc(_4319_cap);
	}
	return _4417_vec;
}



inline jule::Int _1192e4e90_Vector_5::_method_calc_grow(jule::Int _5324_delta) {
	jule::Int _5413_t = (*this)._field__buffer.len + _5324_delta;
	return _5413_t * 2LL;
}



inline void _1192e4e90_Vector_5::_method_resize_alloc(jule::Int _5831_n) {
	void* _5917_new_heap = __jule_std_vector_alloc<_118d9a790_Node>(_5831_n);
	if (_5917_new_heap == nullptr) {
		jule::panic(jule::Str("Vector[T].resize_alloc: heap reallocation failed", 48));
	}
	if ((*this)._field__buffer.heap == nullptr) {
		(*this)._field__buffer.heap=_5917_new_heap;
		(*this)._field__buffer.cap=_5831_n;
		return;
	}
	{
		if ((*this)._field__buffer.len > 0LL) {
			__jule_std_vector_copy_range<_118d9a790_Node>(_5917_new_heap,(*this)._field__buffer.heap,(*this)._field__buffer.len);
		}
		__jule_std_vector_dealloc<_118d9a790_Node>((*this)._field__buffer.heap);
		(*this)._field__buffer.heap=_5917_new_heap;
	}
	(*this)._field__buffer.cap=_5831_n;
}



inline void _1192e4e90_Vector_5::_method_review_allocation(jule::Int _8336_delta) {
	if (((*this)._field__buffer.len + _8336_delta) > (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>((*this)._method_calc_grow(_8336_delta)));
	}
}



inline jule::Int _1192e4e90_Vector_5::_method_len(void) {
	return (*this)._field__buffer.len;
}



inline jule::Int _1192e4e90_Vector_5::_method_cap(void) {
	return (*this)._field__buffer.cap;
}



inline void _1192e4e90_Vector_5::_method_dealloc(void) {
	(*this)._field__buffer.drop();
}



inline void _1192e4e90_Vector_5::_method_set_len(jule::Int _10330_n) {
	if (_10330_n < 0LL) {
		(*this)._field__buffer.len=0LL;
		return;
	}
	if (_10330_n >= (*this)._field__buffer.len) {
		return;
	}
	(*this)._field__buffer.len=_10330_n;
}



inline _118d9a790_Node _1192e4e90_Vector_5::_method_at(jule::Int _11525_i) {
	if ((_11525_i < 0LL) || (_11525_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].at: out of range", 26));
	}
	return __jule_std_vector_deref<_118d9a790_Node>((*this)._field__buffer.heap,_11525_i);
}



inline void _1192e4e90_Vector_5::_method_set(jule::Int _12326_i,_118d9a790_Node _12338_item) {
	if ((_12326_i < 0LL) || (_12326_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].set: out of range", 27));
	}
	{
		__jule_std_vector_heap_assign<_118d9a790_Node>((*this)._field__buffer.heap,_12326_i,_12338_item);
	}
}



inline void _1192e4e90_Vector_5::_method_push(_118d9a790_Node _13131_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	{
		__jule_std_vector_heap_assign<_118d9a790_Node>((*this)._field__buffer.heap,(*this)._field__buffer.len,_13131_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _1192e4e90_Vector_5::_method_push_front(_118d9a790_Node _14637_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	jule::Int _15217_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5098852656:;
	if (!(_15217_i >= 0LL)) { goto _iter_end_5098852656; }
	{
		{
			__jule_std_vector_heap_move<_118d9a790_Node>((*this)._field__buffer.heap,_15217_i,_15217_i + 1LL);
		}
	}
	_iter_next_5098852656:;
	(_15217_i)--;
	goto _iter_begin_5098852656;
	_iter_end_5098852656:;
	{
		__jule_std_vector_heap_assign<_118d9a790_Node>((*this)._field__buffer.heap,0LL,_14637_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _1192e4e90_Vector_5::_method_append(jule::Slice<_118d9a790_Node> _16333_items) {
	if (_16333_items.len() == 0LL) {
		return;
	}
	(*this)._method_review_allocation(static_cast<jule::I64>(_16333_items.len()));
	{
		__jule_std_vector_copy_range<_118d9a790_Node>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(_118d9a790_Node) * (*this)._field__buffer.len))),__jule_get_pointer_of_slice<_118d9a790_Node>(_16333_items),static_cast<jule::I64>(_16333_items.len()));
	}
	(*this)._field__buffer.len+=static_cast<jule::I64>(_16333_items.len());
}



inline void _1192e4e90_Vector_5::_method_merge(_1192e4e90_Vector_5 _18032_vec) {
	if (_18032_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_18032_vec._field__buffer.len);
	{
		__jule_std_vector_copy_range<_118d9a790_Node>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(_118d9a790_Node) * (*this)._field__buffer.len))),_18032_vec._field__buffer.heap,_18032_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_18032_vec._field__buffer.len;
}



inline void _1192e4e90_Vector_5::_method_merge_front(_1192e4e90_Vector_5 _19738_vec) {
	if (_19738_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_19738_vec._field__buffer.len);
	jule::Int _20517_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5098896064:;
	if (!(_20517_i >= 0LL)) { goto _iter_end_5098896064; }
	{
		{
			__jule_std_vector_heap_move<_118d9a790_Node>((*this)._field__buffer.heap,_20517_i,_20517_i + _19738_vec._field__buffer.len);
		}
	}
	_iter_next_5098896064:;
	(_20517_i)--;
	goto _iter_begin_5098896064;
	_iter_end_5098896064:;
	{
		__jule_std_vector_copy_range<_118d9a790_Node>((*this)._field__buffer.heap,_19738_vec._field__buffer.heap,_19738_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_19738_vec._field__buffer.len;
}



inline void _1192e4e90_Vector_5::_method_remove_range(jule::Int _22335_start,jule::Int _22347_n) {
	if (_22347_n < 1LL) {
		return;
	}
	if (_22335_start < -1LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at negative index", 57));
	}
	if (_22335_start >= (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at out of range", 55));
	}
	if ((((*this)._field__buffer.len - _22335_start) - _22347_n) < 0LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing continues at out of range ", 59));
	}
	jule::Int _23917_i = _22335_start + _22347_n;
	_iter_begin_5098922256:;
	if (!(_23917_i < (*this)._field__buffer.len)) { goto _iter_end_5098922256; }
	{
		{
			__jule_std_vector_heap_move<_118d9a790_Node>((*this)._field__buffer.heap,_23917_i,_23917_i - _22347_n);
		}
	}
	_iter_next_5098922256:;
	(_23917_i)++;
	goto _iter_begin_5098922256;
	_iter_end_5098922256:;
	(*this)._field__buffer.len-=_22347_n;
}



inline void _1192e4e90_Vector_5::_method_insert(jule::Int _24829_i,_118d9a790_Node _24841_item) {
	if (_24829_i < 0LL) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at negative index", 52));
	}
	if (_24829_i > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at out of range", 50));
	}
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	jule::Int _26117_j = (*this)._field__buffer.len - 1LL;
	_iter_begin_5098933264:;
	if (!(_26117_j >= _24829_i)) { goto _iter_end_5098933264; }
	{
		{
			__jule_std_vector_heap_move<_118d9a790_Node>((*this)._field__buffer.heap,_26117_j,_26117_j + 1LL);
		}
	}
	_iter_next_5098933264:;
	(_26117_j)--;
	goto _iter_begin_5098933264;
	_iter_end_5098933264:;
	{
		__jule_std_vector_heap_assign<_118d9a790_Node>((*this)._field__buffer.heap,_24829_i,_24841_item);
	}
	((*this)._field__buffer.len)++;
}



inline _1192e4e90_Vector_5 _1192e4e90_Vector_5::_method_slice(jule::Int _27228_start,jule::Int _27240_end) {
	if (_27228_start < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at negative index", 49));
	}
	if (_27228_start > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at out of range", 47));
	}
	if (_27240_end > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at out of range", 45));
	}
	if (_27240_end < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at negative index", 47));
	}
	if (_27228_start > _27240_end) {
		jule::panic(jule::Str("Vector[T].slice: start point < end point", 40));
	}
	if (_27228_start == _27240_end) {
		return _1192e4e90_Vector_5::_static_method_new(0LL);
	}
	_1192e4e90_Vector_5 _29317_vec = _1192e4e90_Vector_5::_static_method_new(_27240_end - _27228_start);
	{
		__jule_std_vector_copy_range<_118d9a790_Node>(_29317_vec._field__buffer.heap,((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(_118d9a790_Node) * _27228_start))),_29317_vec._field__buffer.cap);
	}
	_29317_vec._field__buffer.len=_29317_vec._field__buffer.cap;
	return _29317_vec;
}







std::ostream &operator<<(std::ostream &_Stream, const _1192e4e90_Vector_5 &_Src) {
	_Stream << "Vector{";
	_Stream << "_buffer: cpp._field__buffer";
	_Stream << "}";
	return _Stream;
}

inline _1192e4e90_Vector_6 _1192e4e90_Vector_6::_static_method_new(jule::Int _4319_cap) {
	_1192e4e90_Vector_6 _4417_vec = _1192e4e90_Vector_6();
	if (_4319_cap != 0LL) {
		_4417_vec._method_resize_alloc(_4319_cap);
	}
	return _4417_vec;
}



inline jule::Int _1192e4e90_Vector_6::_method_calc_grow(jule::Int _5324_delta) {
	jule::Int _5413_t = (*this)._field__buffer.len + _5324_delta;
	return _5413_t * 2LL;
}



inline void _1192e4e90_Vector_6::_method_resize_alloc(jule::Int _5831_n) {
	void* _5917_new_heap = __jule_std_vector_alloc<_13feceeb0_Pass>(_5831_n);
	if (_5917_new_heap == nullptr) {
		jule::panic(jule::Str("Vector[T].resize_alloc: heap reallocation failed", 48));
	}
	if ((*this)._field__buffer.heap == nullptr) {
		(*this)._field__buffer.heap=_5917_new_heap;
		(*this)._field__buffer.cap=_5831_n;
		return;
	}
	{
		if ((*this)._field__buffer.len > 0LL) {
			__jule_std_vector_copy_range<_13feceeb0_Pass>(_5917_new_heap,(*this)._field__buffer.heap,(*this)._field__buffer.len);
		}
		__jule_std_vector_dealloc<_13feceeb0_Pass>((*this)._field__buffer.heap);
		(*this)._field__buffer.heap=_5917_new_heap;
	}
	(*this)._field__buffer.cap=_5831_n;
}



inline void _1192e4e90_Vector_6::_method_review_allocation(jule::Int _8336_delta) {
	if (((*this)._field__buffer.len + _8336_delta) > (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>((*this)._method_calc_grow(_8336_delta)));
	}
}



inline jule::Int _1192e4e90_Vector_6::_method_len(void) {
	return (*this)._field__buffer.len;
}



inline jule::Int _1192e4e90_Vector_6::_method_cap(void) {
	return (*this)._field__buffer.cap;
}



inline void _1192e4e90_Vector_6::_method_dealloc(void) {
	(*this)._field__buffer.drop();
}



inline void _1192e4e90_Vector_6::_method_set_len(jule::Int _10330_n) {
	if (_10330_n < 0LL) {
		(*this)._field__buffer.len=0LL;
		return;
	}
	if (_10330_n >= (*this)._field__buffer.len) {
		return;
	}
	(*this)._field__buffer.len=_10330_n;
}



inline _13feceeb0_Pass _1192e4e90_Vector_6::_method_at(jule::Int _11525_i) {
	if ((_11525_i < 0LL) || (_11525_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].at: out of range", 26));
	}
	return __jule_std_vector_deref<_13feceeb0_Pass>((*this)._field__buffer.heap,_11525_i);
}



inline void _1192e4e90_Vector_6::_method_set(jule::Int _12326_i,_13feceeb0_Pass _12338_item) {
	if ((_12326_i < 0LL) || (_12326_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].set: out of range", 27));
	}
	{
		__jule_std_vector_heap_assign<_13feceeb0_Pass>((*this)._field__buffer.heap,_12326_i,_12338_item);
	}
}



inline void _1192e4e90_Vector_6::_method_push(_13feceeb0_Pass _13131_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	{
		__jule_std_vector_heap_assign<_13feceeb0_Pass>((*this)._field__buffer.heap,(*this)._field__buffer.len,_13131_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _1192e4e90_Vector_6::_method_push_front(_13feceeb0_Pass _14637_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	jule::Int _15217_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_4760789120:;
	if (!(_15217_i >= 0LL)) { goto _iter_end_4760789120; }
	{
		{
			__jule_std_vector_heap_move<_13feceeb0_Pass>((*this)._field__buffer.heap,_15217_i,_15217_i + 1LL);
		}
	}
	_iter_next_4760789120:;
	(_15217_i)--;
	goto _iter_begin_4760789120;
	_iter_end_4760789120:;
	{
		__jule_std_vector_heap_assign<_13feceeb0_Pass>((*this)._field__buffer.heap,0LL,_14637_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _1192e4e90_Vector_6::_method_append(jule::Slice<_13feceeb0_Pass> _16333_items) {
	if (_16333_items.len() == 0LL) {
		return;
	}
	(*this)._method_review_allocation(static_cast<jule::I64>(_16333_items.len()));
	{
		__jule_std_vector_copy_range<_13feceeb0_Pass>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(_13feceeb0_Pass) * (*this)._field__buffer.len))),__jule_get_pointer_of_slice<_13feceeb0_Pass>(_16333_items),static_cast<jule::I64>(_16333_items.len()));
	}
	(*this)._field__buffer.len+=static_cast<jule::I64>(_16333_items.len());
}



inline void _1192e4e90_Vector_6::_method_merge(_1192e4e90_Vector_6 _18032_vec) {
	if (_18032_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_18032_vec._field__buffer.len);
	{
		__jule_std_vector_copy_range<_13feceeb0_Pass>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(_13feceeb0_Pass) * (*this)._field__buffer.len))),_18032_vec._field__buffer.heap,_18032_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_18032_vec._field__buffer.len;
}



inline void _1192e4e90_Vector_6::_method_merge_front(_1192e4e90_Vector_6 _19738_vec) {
	if (_19738_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_19738_vec._field__buffer.len);
	jule::Int _20517_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_4760833280:;
	if (!(_20517_i >= 0LL)) { goto _iter_end_4760833280; }
	{
		{
			__jule_std_vector_heap_move<_13feceeb0_Pass>((*this)._field__buffer.heap,_20517_i,_20517_i + _19738_vec._field__buffer.len);
		}
	}
	_iter_next_4760833280:;
	(_20517_i)--;
	goto _iter_begin_4760833280;
	_iter_end_4760833280:;
	{
		__jule_std_vector_copy_range<_13feceeb0_Pass>((*this)._field__buffer.heap,_19738_vec._field__buffer.heap,_19738_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_19738_vec._field__buffer.len;
}



inline void _1192e4e90_Vector_6::_method_remove_range(jule::Int _22335_start,jule::Int _22347_n) {
	if (_22347_n < 1LL) {
		return;
	}
	if (_22335_start < -1LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at negative index", 57));
	}
	if (_22335_start >= (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at out of range", 55));
	}
	if ((((*this)._field__buffer.len - _22335_start) - _22347_n) < 0LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing continues at out of range ", 59));
	}
	jule::Int _23917_i = _22335_start + _22347_n;
	_iter_begin_4760859472:;
	if (!(_23917_i < (*this)._field__buffer.len)) { goto _iter_end_4760859472; }
	{
		{
			__jule_std_vector_heap_move<_13feceeb0_Pass>((*this)._field__buffer.heap,_23917_i,_23917_i - _22347_n);
		}
	}
	_iter_next_4760859472:;
	(_23917_i)++;
	goto _iter_begin_4760859472;
	_iter_end_4760859472:;
	(*this)._field__buffer.len-=_22347_n;
}



inline void _1192e4e90_Vector_6::_method_insert(jule::Int _24829_i,_13feceeb0_Pass _24841_item) {
	if (_24829_i < 0LL) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at negative index", 52));
	}
	if (_24829_i > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at out of range", 50));
	}
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	jule::Int _26117_j = (*this)._field__buffer.len - 1LL;
	_iter_begin_4760870480:;
	if (!(_26117_j >= _24829_i)) { goto _iter_end_4760870480; }
	{
		{
			__jule_std_vector_heap_move<_13feceeb0_Pass>((*this)._field__buffer.heap,_26117_j,_26117_j + 1LL);
		}
	}
	_iter_next_4760870480:;
	(_26117_j)--;
	goto _iter_begin_4760870480;
	_iter_end_4760870480:;
	{
		__jule_std_vector_heap_assign<_13feceeb0_Pass>((*this)._field__buffer.heap,_24829_i,_24841_item);
	}
	((*this)._field__buffer.len)++;
}



inline _1192e4e90_Vector_6 _1192e4e90_Vector_6::_method_slice(jule::Int _27228_start,jule::Int _27240_end) {
	if (_27228_start < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at negative index", 49));
	}
	if (_27228_start > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at out of range", 47));
	}
	if (_27240_end > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at out of range", 45));
	}
	if (_27240_end < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at negative index", 47));
	}
	if (_27228_start > _27240_end) {
		jule::panic(jule::Str("Vector[T].slice: start point < end point", 40));
	}
	if (_27228_start == _27240_end) {
		return _1192e4e90_Vector_6::_static_method_new(0LL);
	}
	_1192e4e90_Vector_6 _29317_vec = _1192e4e90_Vector_6::_static_method_new(_27240_end - _27228_start);
	{
		__jule_std_vector_copy_range<_13feceeb0_Pass>(_29317_vec._field__buffer.heap,((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(_13feceeb0_Pass) * _27228_start))),_29317_vec._field__buffer.cap);
	}
	_29317_vec._field__buffer.len=_29317_vec._field__buffer.cap;
	return _29317_vec;
}







std::ostream &operator<<(std::ostream &_Stream, const _1192e4e90_Vector_6 &_Src) {
	_Stream << "Vector{";
	_Stream << "_buffer: cpp._field__buffer";
	_Stream << "}";
	return _Stream;
}

inline _1192e4e90_Vector_7 _1192e4e90_Vector_7::_static_method_new(jule::Int _4319_cap) {
	_1192e4e90_Vector_7 _4417_vec = _1192e4e90_Vector_7();
	if (_4319_cap != 0LL) {
		_4417_vec._method_resize_alloc(_4319_cap);
	}
	return _4417_vec;
}



inline jule::Int _1192e4e90_Vector_7::_method_calc_grow(jule::Int _5324_delta) {
	jule::Int _5413_t = (*this)._field__buffer.len + _5324_delta;
	return _5413_t * 2LL;
}



inline void _1192e4e90_Vector_7::_method_resize_alloc(jule::Int _5831_n) {
	void* _5917_new_heap = __jule_std_vector_alloc<jule::Ref<_11a0945e0_ImportInfo>>(_5831_n);
	if (_5917_new_heap == nullptr) {
		jule::panic(jule::Str("Vector[T].resize_alloc: heap reallocation failed", 48));
	}
	if ((*this)._field__buffer.heap == nullptr) {
		(*this)._field__buffer.heap=_5917_new_heap;
		(*this)._field__buffer.cap=_5831_n;
		return;
	}
	{
		if ((*this)._field__buffer.len > 0LL) {
			__jule_std_vector_copy_range<jule::Ref<_11a0945e0_ImportInfo>>(_5917_new_heap,(*this)._field__buffer.heap,(*this)._field__buffer.len);
		}
		__jule_std_vector_dealloc<jule::Ref<_11a0945e0_ImportInfo>>((*this)._field__buffer.heap);
		(*this)._field__buffer.heap=_5917_new_heap;
	}
	(*this)._field__buffer.cap=_5831_n;
}



inline void _1192e4e90_Vector_7::_method_review_allocation(jule::Int _8336_delta) {
	if (((*this)._field__buffer.len + _8336_delta) > (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>((*this)._method_calc_grow(_8336_delta)));
	}
}



inline jule::Int _1192e4e90_Vector_7::_method_len(void) {
	return (*this)._field__buffer.len;
}



inline jule::Int _1192e4e90_Vector_7::_method_cap(void) {
	return (*this)._field__buffer.cap;
}



inline void _1192e4e90_Vector_7::_method_dealloc(void) {
	(*this)._field__buffer.drop();
}



inline void _1192e4e90_Vector_7::_method_set_len(jule::Int _10330_n) {
	if (_10330_n < 0LL) {
		(*this)._field__buffer.len=0LL;
		return;
	}
	if (_10330_n >= (*this)._field__buffer.len) {
		return;
	}
	(*this)._field__buffer.len=_10330_n;
}



inline jule::Ref<_11a0945e0_ImportInfo> _1192e4e90_Vector_7::_method_at(jule::Int _11525_i) {
	if ((_11525_i < 0LL) || (_11525_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].at: out of range", 26));
	}
	return __jule_std_vector_deref<jule::Ref<_11a0945e0_ImportInfo>>((*this)._field__buffer.heap,_11525_i);
}



inline void _1192e4e90_Vector_7::_method_set(jule::Int _12326_i,jule::Ref<_11a0945e0_ImportInfo> _12338_item) {
	if ((_12326_i < 0LL) || (_12326_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].set: out of range", 27));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_11a0945e0_ImportInfo>>((*this)._field__buffer.heap,_12326_i,_12338_item);
	}
}



inline void _1192e4e90_Vector_7::_method_push(jule::Ref<_11a0945e0_ImportInfo> _13131_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_11a0945e0_ImportInfo>>((*this)._field__buffer.heap,(*this)._field__buffer.len,_13131_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _1192e4e90_Vector_7::_method_push_front(jule::Ref<_11a0945e0_ImportInfo> _14637_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	jule::Int _15217_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_4761007856:;
	if (!(_15217_i >= 0LL)) { goto _iter_end_4761007856; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_11a0945e0_ImportInfo>>((*this)._field__buffer.heap,_15217_i,_15217_i + 1LL);
		}
	}
	_iter_next_4761007856:;
	(_15217_i)--;
	goto _iter_begin_4761007856;
	_iter_end_4761007856:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_11a0945e0_ImportInfo>>((*this)._field__buffer.heap,0LL,_14637_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _1192e4e90_Vector_7::_method_append(jule::Slice<jule::Ref<_11a0945e0_ImportInfo>> _16333_items) {
	if (_16333_items.len() == 0LL) {
		return;
	}
	(*this)._method_review_allocation(static_cast<jule::I64>(_16333_items.len()));
	{
		__jule_std_vector_copy_range<jule::Ref<_11a0945e0_ImportInfo>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_11a0945e0_ImportInfo>) * (*this)._field__buffer.len))),__jule_get_pointer_of_slice<jule::Ref<_11a0945e0_ImportInfo>>(_16333_items),static_cast<jule::I64>(_16333_items.len()));
	}
	(*this)._field__buffer.len+=static_cast<jule::I64>(_16333_items.len());
}



inline void _1192e4e90_Vector_7::_method_merge(_1192e4e90_Vector_7 _18032_vec) {
	if (_18032_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_18032_vec._field__buffer.len);
	{
		__jule_std_vector_copy_range<jule::Ref<_11a0945e0_ImportInfo>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_11a0945e0_ImportInfo>) * (*this)._field__buffer.len))),_18032_vec._field__buffer.heap,_18032_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_18032_vec._field__buffer.len;
}



inline void _1192e4e90_Vector_7::_method_merge_front(_1192e4e90_Vector_7 _19738_vec) {
	if (_19738_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_19738_vec._field__buffer.len);
	jule::Int _20517_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_4761050960:;
	if (!(_20517_i >= 0LL)) { goto _iter_end_4761050960; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_11a0945e0_ImportInfo>>((*this)._field__buffer.heap,_20517_i,_20517_i + _19738_vec._field__buffer.len);
		}
	}
	_iter_next_4761050960:;
	(_20517_i)--;
	goto _iter_begin_4761050960;
	_iter_end_4761050960:;
	{
		__jule_std_vector_copy_range<jule::Ref<_11a0945e0_ImportInfo>>((*this)._field__buffer.heap,_19738_vec._field__buffer.heap,_19738_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_19738_vec._field__buffer.len;
}



inline void _1192e4e90_Vector_7::_method_remove_range(jule::Int _22335_start,jule::Int _22347_n) {
	if (_22347_n < 1LL) {
		return;
	}
	if (_22335_start < -1LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at negative index", 57));
	}
	if (_22335_start >= (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at out of range", 55));
	}
	if ((((*this)._field__buffer.len - _22335_start) - _22347_n) < 0LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing continues at out of range ", 59));
	}
	jule::Int _23917_i = _22335_start + _22347_n;
	_iter_begin_4761077152:;
	if (!(_23917_i < (*this)._field__buffer.len)) { goto _iter_end_4761077152; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_11a0945e0_ImportInfo>>((*this)._field__buffer.heap,_23917_i,_23917_i - _22347_n);
		}
	}
	_iter_next_4761077152:;
	(_23917_i)++;
	goto _iter_begin_4761077152;
	_iter_end_4761077152:;
	(*this)._field__buffer.len-=_22347_n;
}



inline void _1192e4e90_Vector_7::_method_insert(jule::Int _24829_i,jule::Ref<_11a0945e0_ImportInfo> _24841_item) {
	if (_24829_i < 0LL) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at negative index", 52));
	}
	if (_24829_i > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at out of range", 50));
	}
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	jule::Int _26117_j = (*this)._field__buffer.len - 1LL;
	_iter_begin_4761085744:;
	if (!(_26117_j >= _24829_i)) { goto _iter_end_4761085744; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_11a0945e0_ImportInfo>>((*this)._field__buffer.heap,_26117_j,_26117_j + 1LL);
		}
	}
	_iter_next_4761085744:;
	(_26117_j)--;
	goto _iter_begin_4761085744;
	_iter_end_4761085744:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_11a0945e0_ImportInfo>>((*this)._field__buffer.heap,_24829_i,_24841_item);
	}
	((*this)._field__buffer.len)++;
}



inline _1192e4e90_Vector_7 _1192e4e90_Vector_7::_method_slice(jule::Int _27228_start,jule::Int _27240_end) {
	if (_27228_start < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at negative index", 49));
	}
	if (_27228_start > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at out of range", 47));
	}
	if (_27240_end > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at out of range", 45));
	}
	if (_27240_end < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at negative index", 47));
	}
	if (_27228_start > _27240_end) {
		jule::panic(jule::Str("Vector[T].slice: start point < end point", 40));
	}
	if (_27228_start == _27240_end) {
		return _1192e4e90_Vector_7::_static_method_new(0LL);
	}
	_1192e4e90_Vector_7 _29317_vec = _1192e4e90_Vector_7::_static_method_new(_27240_end - _27228_start);
	{
		__jule_std_vector_copy_range<jule::Ref<_11a0945e0_ImportInfo>>(_29317_vec._field__buffer.heap,((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_11a0945e0_ImportInfo>) * _27228_start))),_29317_vec._field__buffer.cap);
	}
	_29317_vec._field__buffer.len=_29317_vec._field__buffer.cap;
	return _29317_vec;
}







std::ostream &operator<<(std::ostream &_Stream, const _1192e4e90_Vector_7 &_Src) {
	_Stream << "Vector{";
	_Stream << "_buffer: cpp._field__buffer";
	_Stream << "}";
	return _Stream;
}

inline _1192e4e90_Vector_8 _1192e4e90_Vector_8::_static_method_new(jule::Int _4319_cap) {
	_1192e4e90_Vector_8 _4417_vec = _1192e4e90_Vector_8();
	if (_4319_cap != 0LL) {
		_4417_vec._method_resize_alloc(_4319_cap);
	}
	return _4417_vec;
}



inline jule::Int _1192e4e90_Vector_8::_method_calc_grow(jule::Int _5324_delta) {
	jule::Int _5413_t = (*this)._field__buffer.len + _5324_delta;
	return _5413_t * 2LL;
}



inline void _1192e4e90_Vector_8::_method_resize_alloc(jule::Int _5831_n) {
	void* _5917_new_heap = __jule_std_vector_alloc<jule::Any>(_5831_n);
	if (_5917_new_heap == nullptr) {
		jule::panic(jule::Str("Vector[T].resize_alloc: heap reallocation failed", 48));
	}
	if ((*this)._field__buffer.heap == nullptr) {
		(*this)._field__buffer.heap=_5917_new_heap;
		(*this)._field__buffer.cap=_5831_n;
		return;
	}
	{
		if ((*this)._field__buffer.len > 0LL) {
			__jule_std_vector_copy_range<jule::Any>(_5917_new_heap,(*this)._field__buffer.heap,(*this)._field__buffer.len);
		}
		__jule_std_vector_dealloc<jule::Any>((*this)._field__buffer.heap);
		(*this)._field__buffer.heap=_5917_new_heap;
	}
	(*this)._field__buffer.cap=_5831_n;
}



inline void _1192e4e90_Vector_8::_method_review_allocation(jule::Int _8336_delta) {
	if (((*this)._field__buffer.len + _8336_delta) > (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>((*this)._method_calc_grow(_8336_delta)));
	}
}



inline jule::Int _1192e4e90_Vector_8::_method_len(void) {
	return (*this)._field__buffer.len;
}



inline jule::Int _1192e4e90_Vector_8::_method_cap(void) {
	return (*this)._field__buffer.cap;
}



inline void _1192e4e90_Vector_8::_method_dealloc(void) {
	(*this)._field__buffer.drop();
}



inline void _1192e4e90_Vector_8::_method_set_len(jule::Int _10330_n) {
	if (_10330_n < 0LL) {
		(*this)._field__buffer.len=0LL;
		return;
	}
	if (_10330_n >= (*this)._field__buffer.len) {
		return;
	}
	(*this)._field__buffer.len=_10330_n;
}



inline jule::Any _1192e4e90_Vector_8::_method_at(jule::Int _11525_i) {
	if ((_11525_i < 0LL) || (_11525_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].at: out of range", 26));
	}
	return __jule_std_vector_deref<jule::Any>((*this)._field__buffer.heap,_11525_i);
}



inline void _1192e4e90_Vector_8::_method_set(jule::Int _12326_i,jule::Any _12338_item) {
	if ((_12326_i < 0LL) || (_12326_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].set: out of range", 27));
	}
	{
		__jule_std_vector_heap_assign<jule::Any>((*this)._field__buffer.heap,_12326_i,_12338_item);
	}
}



inline void _1192e4e90_Vector_8::_method_push(jule::Any _13131_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	{
		__jule_std_vector_heap_assign<jule::Any>((*this)._field__buffer.heap,(*this)._field__buffer.len,_13131_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _1192e4e90_Vector_8::_method_push_front(jule::Any _14637_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	jule::Int _15217_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_4761226992:;
	if (!(_15217_i >= 0LL)) { goto _iter_end_4761226992; }
	{
		{
			__jule_std_vector_heap_move<jule::Any>((*this)._field__buffer.heap,_15217_i,_15217_i + 1LL);
		}
	}
	_iter_next_4761226992:;
	(_15217_i)--;
	goto _iter_begin_4761226992;
	_iter_end_4761226992:;
	{
		__jule_std_vector_heap_assign<jule::Any>((*this)._field__buffer.heap,0LL,_14637_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _1192e4e90_Vector_8::_method_append(jule::Slice<jule::Any> _16333_items) {
	if (_16333_items.len() == 0LL) {
		return;
	}
	(*this)._method_review_allocation(static_cast<jule::I64>(_16333_items.len()));
	{
		__jule_std_vector_copy_range<jule::Any>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Any) * (*this)._field__buffer.len))),__jule_get_pointer_of_slice<jule::Any>(_16333_items),static_cast<jule::I64>(_16333_items.len()));
	}
	(*this)._field__buffer.len+=static_cast<jule::I64>(_16333_items.len());
}



inline void _1192e4e90_Vector_8::_method_merge(_1192e4e90_Vector_8 _18032_vec) {
	if (_18032_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_18032_vec._field__buffer.len);
	{
		__jule_std_vector_copy_range<jule::Any>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Any) * (*this)._field__buffer.len))),_18032_vec._field__buffer.heap,_18032_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_18032_vec._field__buffer.len;
}



inline void _1192e4e90_Vector_8::_method_merge_front(_1192e4e90_Vector_8 _19738_vec) {
	if (_19738_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_19738_vec._field__buffer.len);
	jule::Int _20517_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_4761269424:;
	if (!(_20517_i >= 0LL)) { goto _iter_end_4761269424; }
	{
		{
			__jule_std_vector_heap_move<jule::Any>((*this)._field__buffer.heap,_20517_i,_20517_i + _19738_vec._field__buffer.len);
		}
	}
	_iter_next_4761269424:;
	(_20517_i)--;
	goto _iter_begin_4761269424;
	_iter_end_4761269424:;
	{
		__jule_std_vector_copy_range<jule::Any>((*this)._field__buffer.heap,_19738_vec._field__buffer.heap,_19738_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_19738_vec._field__buffer.len;
}



inline void _1192e4e90_Vector_8::_method_remove_range(jule::Int _22335_start,jule::Int _22347_n) {
	if (_22347_n < 1LL) {
		return;
	}
	if (_22335_start < -1LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at negative index", 57));
	}
	if (_22335_start >= (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at out of range", 55));
	}
	if ((((*this)._field__buffer.len - _22335_start) - _22347_n) < 0LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing continues at out of range ", 59));
	}
	jule::Int _23917_i = _22335_start + _22347_n;
	_iter_begin_4761295616:;
	if (!(_23917_i < (*this)._field__buffer.len)) { goto _iter_end_4761295616; }
	{
		{
			__jule_std_vector_heap_move<jule::Any>((*this)._field__buffer.heap,_23917_i,_23917_i - _22347_n);
		}
	}
	_iter_next_4761295616:;
	(_23917_i)++;
	goto _iter_begin_4761295616;
	_iter_end_4761295616:;
	(*this)._field__buffer.len-=_22347_n;
}



inline void _1192e4e90_Vector_8::_method_insert(jule::Int _24829_i,jule::Any _24841_item) {
	if (_24829_i < 0LL) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at negative index", 52));
	}
	if (_24829_i > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at out of range", 50));
	}
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	jule::Int _26117_j = (*this)._field__buffer.len - 1LL;
	_iter_begin_4761306624:;
	if (!(_26117_j >= _24829_i)) { goto _iter_end_4761306624; }
	{
		{
			__jule_std_vector_heap_move<jule::Any>((*this)._field__buffer.heap,_26117_j,_26117_j + 1LL);
		}
	}
	_iter_next_4761306624:;
	(_26117_j)--;
	goto _iter_begin_4761306624;
	_iter_end_4761306624:;
	{
		__jule_std_vector_heap_assign<jule::Any>((*this)._field__buffer.heap,_24829_i,_24841_item);
	}
	((*this)._field__buffer.len)++;
}



inline _1192e4e90_Vector_8 _1192e4e90_Vector_8::_method_slice(jule::Int _27228_start,jule::Int _27240_end) {
	if (_27228_start < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at negative index", 49));
	}
	if (_27228_start > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at out of range", 47));
	}
	if (_27240_end > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at out of range", 45));
	}
	if (_27240_end < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at negative index", 47));
	}
	if (_27228_start > _27240_end) {
		jule::panic(jule::Str("Vector[T].slice: start point < end point", 40));
	}
	if (_27228_start == _27240_end) {
		return _1192e4e90_Vector_8::_static_method_new(0LL);
	}
	_1192e4e90_Vector_8 _29317_vec = _1192e4e90_Vector_8::_static_method_new(_27240_end - _27228_start);
	{
		__jule_std_vector_copy_range<jule::Any>(_29317_vec._field__buffer.heap,((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Any) * _27228_start))),_29317_vec._field__buffer.cap);
	}
	_29317_vec._field__buffer.len=_29317_vec._field__buffer.cap;
	return _29317_vec;
}







std::ostream &operator<<(std::ostream &_Stream, const _1192e4e90_Vector_8 &_Src) {
	_Stream << "Vector{";
	_Stream << "_buffer: cpp._field__buffer";
	_Stream << "}";
	return _Stream;
}

inline _1192e4e90_Vector_9 _1192e4e90_Vector_9::_static_method_new(jule::Int _4319_cap) {
	_1192e4e90_Vector_9 _4417_vec = _1192e4e90_Vector_9();
	if (_4319_cap != 0LL) {
		_4417_vec._method_resize_alloc(_4319_cap);
	}
	return _4417_vec;
}



inline jule::Int _1192e4e90_Vector_9::_method_calc_grow(jule::Int _5324_delta) {
	jule::Int _5413_t = (*this)._field__buffer.len + _5324_delta;
	return _5413_t * 2LL;
}



inline void _1192e4e90_Vector_9::_method_resize_alloc(jule::Int _5831_n) {
	void* _5917_new_heap = __jule_std_vector_alloc<jule::Ref<_11a245f20_Var>>(_5831_n);
	if (_5917_new_heap == nullptr) {
		jule::panic(jule::Str("Vector[T].resize_alloc: heap reallocation failed", 48));
	}
	if ((*this)._field__buffer.heap == nullptr) {
		(*this)._field__buffer.heap=_5917_new_heap;
		(*this)._field__buffer.cap=_5831_n;
		return;
	}
	{
		if ((*this)._field__buffer.len > 0LL) {
			__jule_std_vector_copy_range<jule::Ref<_11a245f20_Var>>(_5917_new_heap,(*this)._field__buffer.heap,(*this)._field__buffer.len);
		}
		__jule_std_vector_dealloc<jule::Ref<_11a245f20_Var>>((*this)._field__buffer.heap);
		(*this)._field__buffer.heap=_5917_new_heap;
	}
	(*this)._field__buffer.cap=_5831_n;
}



inline void _1192e4e90_Vector_9::_method_review_allocation(jule::Int _8336_delta) {
	if (((*this)._field__buffer.len + _8336_delta) > (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>((*this)._method_calc_grow(_8336_delta)));
	}
}



inline jule::Int _1192e4e90_Vector_9::_method_len(void) {
	return (*this)._field__buffer.len;
}



inline jule::Int _1192e4e90_Vector_9::_method_cap(void) {
	return (*this)._field__buffer.cap;
}



inline void _1192e4e90_Vector_9::_method_dealloc(void) {
	(*this)._field__buffer.drop();
}



inline void _1192e4e90_Vector_9::_method_set_len(jule::Int _10330_n) {
	if (_10330_n < 0LL) {
		(*this)._field__buffer.len=0LL;
		return;
	}
	if (_10330_n >= (*this)._field__buffer.len) {
		return;
	}
	(*this)._field__buffer.len=_10330_n;
}



inline jule::Ref<_11a245f20_Var> _1192e4e90_Vector_9::_method_at(jule::Int _11525_i) {
	if ((_11525_i < 0LL) || (_11525_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].at: out of range", 26));
	}
	return __jule_std_vector_deref<jule::Ref<_11a245f20_Var>>((*this)._field__buffer.heap,_11525_i);
}



inline void _1192e4e90_Vector_9::_method_set(jule::Int _12326_i,jule::Ref<_11a245f20_Var> _12338_item) {
	if ((_12326_i < 0LL) || (_12326_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].set: out of range", 27));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_11a245f20_Var>>((*this)._field__buffer.heap,_12326_i,_12338_item);
	}
}



inline void _1192e4e90_Vector_9::_method_push(jule::Ref<_11a245f20_Var> _13131_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_11a245f20_Var>>((*this)._field__buffer.heap,(*this)._field__buffer.len,_13131_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _1192e4e90_Vector_9::_method_push_front(jule::Ref<_11a245f20_Var> _14637_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	jule::Int _15217_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_4761442016:;
	if (!(_15217_i >= 0LL)) { goto _iter_end_4761442016; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_11a245f20_Var>>((*this)._field__buffer.heap,_15217_i,_15217_i + 1LL);
		}
	}
	_iter_next_4761442016:;
	(_15217_i)--;
	goto _iter_begin_4761442016;
	_iter_end_4761442016:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_11a245f20_Var>>((*this)._field__buffer.heap,0LL,_14637_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _1192e4e90_Vector_9::_method_append(jule::Slice<jule::Ref<_11a245f20_Var>> _16333_items) {
	if (_16333_items.len() == 0LL) {
		return;
	}
	(*this)._method_review_allocation(static_cast<jule::I64>(_16333_items.len()));
	{
		__jule_std_vector_copy_range<jule::Ref<_11a245f20_Var>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_11a245f20_Var>) * (*this)._field__buffer.len))),__jule_get_pointer_of_slice<jule::Ref<_11a245f20_Var>>(_16333_items),static_cast<jule::I64>(_16333_items.len()));
	}
	(*this)._field__buffer.len+=static_cast<jule::I64>(_16333_items.len());
}



inline void _1192e4e90_Vector_9::_method_merge(_1192e4e90_Vector_9 _18032_vec) {
	if (_18032_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_18032_vec._field__buffer.len);
	{
		__jule_std_vector_copy_range<jule::Ref<_11a245f20_Var>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_11a245f20_Var>) * (*this)._field__buffer.len))),_18032_vec._field__buffer.heap,_18032_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_18032_vec._field__buffer.len;
}



inline void _1192e4e90_Vector_9::_method_merge_front(_1192e4e90_Vector_9 _19738_vec) {
	if (_19738_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_19738_vec._field__buffer.len);
	jule::Int _20517_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_4761484448:;
	if (!(_20517_i >= 0LL)) { goto _iter_end_4761484448; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_11a245f20_Var>>((*this)._field__buffer.heap,_20517_i,_20517_i + _19738_vec._field__buffer.len);
		}
	}
	_iter_next_4761484448:;
	(_20517_i)--;
	goto _iter_begin_4761484448;
	_iter_end_4761484448:;
	{
		__jule_std_vector_copy_range<jule::Ref<_11a245f20_Var>>((*this)._field__buffer.heap,_19738_vec._field__buffer.heap,_19738_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_19738_vec._field__buffer.len;
}



inline void _1192e4e90_Vector_9::_method_remove_range(jule::Int _22335_start,jule::Int _22347_n) {
	if (_22347_n < 1LL) {
		return;
	}
	if (_22335_start < -1LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at negative index", 57));
	}
	if (_22335_start >= (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at out of range", 55));
	}
	if ((((*this)._field__buffer.len - _22335_start) - _22347_n) < 0LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing continues at out of range ", 59));
	}
	jule::Int _23917_i = _22335_start + _22347_n;
	_iter_begin_4761510640:;
	if (!(_23917_i < (*this)._field__buffer.len)) { goto _iter_end_4761510640; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_11a245f20_Var>>((*this)._field__buffer.heap,_23917_i,_23917_i - _22347_n);
		}
	}
	_iter_next_4761510640:;
	(_23917_i)++;
	goto _iter_begin_4761510640;
	_iter_end_4761510640:;
	(*this)._field__buffer.len-=_22347_n;
}



inline void _1192e4e90_Vector_9::_method_insert(jule::Int _24829_i,jule::Ref<_11a245f20_Var> _24841_item) {
	if (_24829_i < 0LL) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at negative index", 52));
	}
	if (_24829_i > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at out of range", 50));
	}
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	jule::Int _26117_j = (*this)._field__buffer.len - 1LL;
	_iter_begin_4761521648:;
	if (!(_26117_j >= _24829_i)) { goto _iter_end_4761521648; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_11a245f20_Var>>((*this)._field__buffer.heap,_26117_j,_26117_j + 1LL);
		}
	}
	_iter_next_4761521648:;
	(_26117_j)--;
	goto _iter_begin_4761521648;
	_iter_end_4761521648:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_11a245f20_Var>>((*this)._field__buffer.heap,_24829_i,_24841_item);
	}
	((*this)._field__buffer.len)++;
}



inline _1192e4e90_Vector_9 _1192e4e90_Vector_9::_method_slice(jule::Int _27228_start,jule::Int _27240_end) {
	if (_27228_start < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at negative index", 49));
	}
	if (_27228_start > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at out of range", 47));
	}
	if (_27240_end > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at out of range", 45));
	}
	if (_27240_end < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at negative index", 47));
	}
	if (_27228_start > _27240_end) {
		jule::panic(jule::Str("Vector[T].slice: start point < end point", 40));
	}
	if (_27228_start == _27240_end) {
		return _1192e4e90_Vector_9::_static_method_new(0LL);
	}
	_1192e4e90_Vector_9 _29317_vec = _1192e4e90_Vector_9::_static_method_new(_27240_end - _27228_start);
	{
		__jule_std_vector_copy_range<jule::Ref<_11a245f20_Var>>(_29317_vec._field__buffer.heap,((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_11a245f20_Var>) * _27228_start))),_29317_vec._field__buffer.cap);
	}
	_29317_vec._field__buffer.len=_29317_vec._field__buffer.cap;
	return _29317_vec;
}







std::ostream &operator<<(std::ostream &_Stream, const _1192e4e90_Vector_9 &_Src) {
	_Stream << "Vector{";
	_Stream << "_buffer: cpp._field__buffer";
	_Stream << "}";
	return _Stream;
}

inline _1192e4e90_Vector_10 _1192e4e90_Vector_10::_static_method_new(jule::Int _4319_cap) {
	_1192e4e90_Vector_10 _4417_vec = _1192e4e90_Vector_10();
	if (_4319_cap != 0LL) {
		_4417_vec._method_resize_alloc(_4319_cap);
	}
	return _4417_vec;
}



inline jule::Int _1192e4e90_Vector_10::_method_calc_grow(jule::Int _5324_delta) {
	jule::Int _5413_t = (*this)._field__buffer.len + _5324_delta;
	return _5413_t * 2LL;
}



inline void _1192e4e90_Vector_10::_method_resize_alloc(jule::Int _5831_n) {
	void* _5917_new_heap = __jule_std_vector_alloc<jule::Ref<_11a3c2e70_TypeAlias>>(_5831_n);
	if (_5917_new_heap == nullptr) {
		jule::panic(jule::Str("Vector[T].resize_alloc: heap reallocation failed", 48));
	}
	if ((*this)._field__buffer.heap == nullptr) {
		(*this)._field__buffer.heap=_5917_new_heap;
		(*this)._field__buffer.cap=_5831_n;
		return;
	}
	{
		if ((*this)._field__buffer.len > 0LL) {
			__jule_std_vector_copy_range<jule::Ref<_11a3c2e70_TypeAlias>>(_5917_new_heap,(*this)._field__buffer.heap,(*this)._field__buffer.len);
		}
		__jule_std_vector_dealloc<jule::Ref<_11a3c2e70_TypeAlias>>((*this)._field__buffer.heap);
		(*this)._field__buffer.heap=_5917_new_heap;
	}
	(*this)._field__buffer.cap=_5831_n;
}



inline void _1192e4e90_Vector_10::_method_review_allocation(jule::Int _8336_delta) {
	if (((*this)._field__buffer.len + _8336_delta) > (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>((*this)._method_calc_grow(_8336_delta)));
	}
}



inline jule::Int _1192e4e90_Vector_10::_method_len(void) {
	return (*this)._field__buffer.len;
}



inline jule::Int _1192e4e90_Vector_10::_method_cap(void) {
	return (*this)._field__buffer.cap;
}



inline void _1192e4e90_Vector_10::_method_dealloc(void) {
	(*this)._field__buffer.drop();
}



inline void _1192e4e90_Vector_10::_method_set_len(jule::Int _10330_n) {
	if (_10330_n < 0LL) {
		(*this)._field__buffer.len=0LL;
		return;
	}
	if (_10330_n >= (*this)._field__buffer.len) {
		return;
	}
	(*this)._field__buffer.len=_10330_n;
}



inline jule::Ref<_11a3c2e70_TypeAlias> _1192e4e90_Vector_10::_method_at(jule::Int _11525_i) {
	if ((_11525_i < 0LL) || (_11525_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].at: out of range", 26));
	}
	return __jule_std_vector_deref<jule::Ref<_11a3c2e70_TypeAlias>>((*this)._field__buffer.heap,_11525_i);
}



inline void _1192e4e90_Vector_10::_method_set(jule::Int _12326_i,jule::Ref<_11a3c2e70_TypeAlias> _12338_item) {
	if ((_12326_i < 0LL) || (_12326_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].set: out of range", 27));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_11a3c2e70_TypeAlias>>((*this)._field__buffer.heap,_12326_i,_12338_item);
	}
}



inline void _1192e4e90_Vector_10::_method_push(jule::Ref<_11a3c2e70_TypeAlias> _13131_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_11a3c2e70_TypeAlias>>((*this)._field__buffer.heap,(*this)._field__buffer.len,_13131_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _1192e4e90_Vector_10::_method_push_front(jule::Ref<_11a3c2e70_TypeAlias> _14637_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	jule::Int _15217_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_4761663232:;
	if (!(_15217_i >= 0LL)) { goto _iter_end_4761663232; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_11a3c2e70_TypeAlias>>((*this)._field__buffer.heap,_15217_i,_15217_i + 1LL);
		}
	}
	_iter_next_4761663232:;
	(_15217_i)--;
	goto _iter_begin_4761663232;
	_iter_end_4761663232:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_11a3c2e70_TypeAlias>>((*this)._field__buffer.heap,0LL,_14637_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _1192e4e90_Vector_10::_method_append(jule::Slice<jule::Ref<_11a3c2e70_TypeAlias>> _16333_items) {
	if (_16333_items.len() == 0LL) {
		return;
	}
	(*this)._method_review_allocation(static_cast<jule::I64>(_16333_items.len()));
	{
		__jule_std_vector_copy_range<jule::Ref<_11a3c2e70_TypeAlias>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_11a3c2e70_TypeAlias>) * (*this)._field__buffer.len))),__jule_get_pointer_of_slice<jule::Ref<_11a3c2e70_TypeAlias>>(_16333_items),static_cast<jule::I64>(_16333_items.len()));
	}
	(*this)._field__buffer.len+=static_cast<jule::I64>(_16333_items.len());
}



inline void _1192e4e90_Vector_10::_method_merge(_1192e4e90_Vector_10 _18032_vec) {
	if (_18032_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_18032_vec._field__buffer.len);
	{
		__jule_std_vector_copy_range<jule::Ref<_11a3c2e70_TypeAlias>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_11a3c2e70_TypeAlias>) * (*this)._field__buffer.len))),_18032_vec._field__buffer.heap,_18032_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_18032_vec._field__buffer.len;
}



inline void _1192e4e90_Vector_10::_method_merge_front(_1192e4e90_Vector_10 _19738_vec) {
	if (_19738_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_19738_vec._field__buffer.len);
	jule::Int _20517_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_4761708464:;
	if (!(_20517_i >= 0LL)) { goto _iter_end_4761708464; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_11a3c2e70_TypeAlias>>((*this)._field__buffer.heap,_20517_i,_20517_i + _19738_vec._field__buffer.len);
		}
	}
	_iter_next_4761708464:;
	(_20517_i)--;
	goto _iter_begin_4761708464;
	_iter_end_4761708464:;
	{
		__jule_std_vector_copy_range<jule::Ref<_11a3c2e70_TypeAlias>>((*this)._field__buffer.heap,_19738_vec._field__buffer.heap,_19738_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_19738_vec._field__buffer.len;
}



inline void _1192e4e90_Vector_10::_method_remove_range(jule::Int _22335_start,jule::Int _22347_n) {
	if (_22347_n < 1LL) {
		return;
	}
	if (_22335_start < -1LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at negative index", 57));
	}
	if (_22335_start >= (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at out of range", 55));
	}
	if ((((*this)._field__buffer.len - _22335_start) - _22347_n) < 0LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing continues at out of range ", 59));
	}
	jule::Int _23917_i = _22335_start + _22347_n;
	_iter_begin_4761732720:;
	if (!(_23917_i < (*this)._field__buffer.len)) { goto _iter_end_4761732720; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_11a3c2e70_TypeAlias>>((*this)._field__buffer.heap,_23917_i,_23917_i - _22347_n);
		}
	}
	_iter_next_4761732720:;
	(_23917_i)++;
	goto _iter_begin_4761732720;
	_iter_end_4761732720:;
	(*this)._field__buffer.len-=_22347_n;
}



inline void _1192e4e90_Vector_10::_method_insert(jule::Int _24829_i,jule::Ref<_11a3c2e70_TypeAlias> _24841_item) {
	if (_24829_i < 0LL) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at negative index", 52));
	}
	if (_24829_i > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at out of range", 50));
	}
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	jule::Int _26117_j = (*this)._field__buffer.len - 1LL;
	_iter_begin_4761743728:;
	if (!(_26117_j >= _24829_i)) { goto _iter_end_4761743728; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_11a3c2e70_TypeAlias>>((*this)._field__buffer.heap,_26117_j,_26117_j + 1LL);
		}
	}
	_iter_next_4761743728:;
	(_26117_j)--;
	goto _iter_begin_4761743728;
	_iter_end_4761743728:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_11a3c2e70_TypeAlias>>((*this)._field__buffer.heap,_24829_i,_24841_item);
	}
	((*this)._field__buffer.len)++;
}



inline _1192e4e90_Vector_10 _1192e4e90_Vector_10::_method_slice(jule::Int _27228_start,jule::Int _27240_end) {
	if (_27228_start < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at negative index", 49));
	}
	if (_27228_start > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at out of range", 47));
	}
	if (_27240_end > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at out of range", 45));
	}
	if (_27240_end < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at negative index", 47));
	}
	if (_27228_start > _27240_end) {
		jule::panic(jule::Str("Vector[T].slice: start point < end point", 40));
	}
	if (_27228_start == _27240_end) {
		return _1192e4e90_Vector_10::_static_method_new(0LL);
	}
	_1192e4e90_Vector_10 _29317_vec = _1192e4e90_Vector_10::_static_method_new(_27240_end - _27228_start);
	{
		__jule_std_vector_copy_range<jule::Ref<_11a3c2e70_TypeAlias>>(_29317_vec._field__buffer.heap,((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_11a3c2e70_TypeAlias>) * _27228_start))),_29317_vec._field__buffer.cap);
	}
	_29317_vec._field__buffer.len=_29317_vec._field__buffer.cap;
	return _29317_vec;
}







std::ostream &operator<<(std::ostream &_Stream, const _1192e4e90_Vector_10 &_Src) {
	_Stream << "Vector{";
	_Stream << "_buffer: cpp._field__buffer";
	_Stream << "}";
	return _Stream;
}

inline _1192e4e90_Vector_11 _1192e4e90_Vector_11::_static_method_new(jule::Int _4319_cap) {
	_1192e4e90_Vector_11 _4417_vec = _1192e4e90_Vector_11();
	if (_4319_cap != 0LL) {
		_4417_vec._method_resize_alloc(_4319_cap);
	}
	return _4417_vec;
}



inline jule::Int _1192e4e90_Vector_11::_method_calc_grow(jule::Int _5324_delta) {
	jule::Int _5413_t = (*this)._field__buffer.len + _5324_delta;
	return _5413_t * 2LL;
}



inline void _1192e4e90_Vector_11::_method_resize_alloc(jule::Int _5831_n) {
	void* _5917_new_heap = __jule_std_vector_alloc<jule::Ref<_119099250_Fn>>(_5831_n);
	if (_5917_new_heap == nullptr) {
		jule::panic(jule::Str("Vector[T].resize_alloc: heap reallocation failed", 48));
	}
	if ((*this)._field__buffer.heap == nullptr) {
		(*this)._field__buffer.heap=_5917_new_heap;
		(*this)._field__buffer.cap=_5831_n;
		return;
	}
	{
		if ((*this)._field__buffer.len > 0LL) {
			__jule_std_vector_copy_range<jule::Ref<_119099250_Fn>>(_5917_new_heap,(*this)._field__buffer.heap,(*this)._field__buffer.len);
		}
		__jule_std_vector_dealloc<jule::Ref<_119099250_Fn>>((*this)._field__buffer.heap);
		(*this)._field__buffer.heap=_5917_new_heap;
	}
	(*this)._field__buffer.cap=_5831_n;
}



inline void _1192e4e90_Vector_11::_method_review_allocation(jule::Int _8336_delta) {
	if (((*this)._field__buffer.len + _8336_delta) > (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>((*this)._method_calc_grow(_8336_delta)));
	}
}



inline jule::Int _1192e4e90_Vector_11::_method_len(void) {
	return (*this)._field__buffer.len;
}



inline jule::Int _1192e4e90_Vector_11::_method_cap(void) {
	return (*this)._field__buffer.cap;
}



inline void _1192e4e90_Vector_11::_method_dealloc(void) {
	(*this)._field__buffer.drop();
}



inline void _1192e4e90_Vector_11::_method_set_len(jule::Int _10330_n) {
	if (_10330_n < 0LL) {
		(*this)._field__buffer.len=0LL;
		return;
	}
	if (_10330_n >= (*this)._field__buffer.len) {
		return;
	}
	(*this)._field__buffer.len=_10330_n;
}



inline jule::Ref<_119099250_Fn> _1192e4e90_Vector_11::_method_at(jule::Int _11525_i) {
	if ((_11525_i < 0LL) || (_11525_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].at: out of range", 26));
	}
	return __jule_std_vector_deref<jule::Ref<_119099250_Fn>>((*this)._field__buffer.heap,_11525_i);
}



inline void _1192e4e90_Vector_11::_method_set(jule::Int _12326_i,jule::Ref<_119099250_Fn> _12338_item) {
	if ((_12326_i < 0LL) || (_12326_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].set: out of range", 27));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_119099250_Fn>>((*this)._field__buffer.heap,_12326_i,_12338_item);
	}
}



inline void _1192e4e90_Vector_11::_method_push(jule::Ref<_119099250_Fn> _13131_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_119099250_Fn>>((*this)._field__buffer.heap,(*this)._field__buffer.len,_13131_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _1192e4e90_Vector_11::_method_push_front(jule::Ref<_119099250_Fn> _14637_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	jule::Int _15217_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_4761916752:;
	if (!(_15217_i >= 0LL)) { goto _iter_end_4761916752; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_119099250_Fn>>((*this)._field__buffer.heap,_15217_i,_15217_i + 1LL);
		}
	}
	_iter_next_4761916752:;
	(_15217_i)--;
	goto _iter_begin_4761916752;
	_iter_end_4761916752:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_119099250_Fn>>((*this)._field__buffer.heap,0LL,_14637_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _1192e4e90_Vector_11::_method_append(jule::Slice<jule::Ref<_119099250_Fn>> _16333_items) {
	if (_16333_items.len() == 0LL) {
		return;
	}
	(*this)._method_review_allocation(static_cast<jule::I64>(_16333_items.len()));
	{
		__jule_std_vector_copy_range<jule::Ref<_119099250_Fn>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_119099250_Fn>) * (*this)._field__buffer.len))),__jule_get_pointer_of_slice<jule::Ref<_119099250_Fn>>(_16333_items),static_cast<jule::I64>(_16333_items.len()));
	}
	(*this)._field__buffer.len+=static_cast<jule::I64>(_16333_items.len());
}



inline void _1192e4e90_Vector_11::_method_merge(_1192e4e90_Vector_11 _18032_vec) {
	if (_18032_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_18032_vec._field__buffer.len);
	{
		__jule_std_vector_copy_range<jule::Ref<_119099250_Fn>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_119099250_Fn>) * (*this)._field__buffer.len))),_18032_vec._field__buffer.heap,_18032_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_18032_vec._field__buffer.len;
}



inline void _1192e4e90_Vector_11::_method_merge_front(_1192e4e90_Vector_11 _19738_vec) {
	if (_19738_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_19738_vec._field__buffer.len);
	jule::Int _20517_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_4761959184:;
	if (!(_20517_i >= 0LL)) { goto _iter_end_4761959184; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_119099250_Fn>>((*this)._field__buffer.heap,_20517_i,_20517_i + _19738_vec._field__buffer.len);
		}
	}
	_iter_next_4761959184:;
	(_20517_i)--;
	goto _iter_begin_4761959184;
	_iter_end_4761959184:;
	{
		__jule_std_vector_copy_range<jule::Ref<_119099250_Fn>>((*this)._field__buffer.heap,_19738_vec._field__buffer.heap,_19738_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_19738_vec._field__buffer.len;
}



inline void _1192e4e90_Vector_11::_method_remove_range(jule::Int _22335_start,jule::Int _22347_n) {
	if (_22347_n < 1LL) {
		return;
	}
	if (_22335_start < -1LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at negative index", 57));
	}
	if (_22335_start >= (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at out of range", 55));
	}
	if ((((*this)._field__buffer.len - _22335_start) - _22347_n) < 0LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing continues at out of range ", 59));
	}
	jule::Int _23917_i = _22335_start + _22347_n;
	_iter_begin_4761985376:;
	if (!(_23917_i < (*this)._field__buffer.len)) { goto _iter_end_4761985376; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_119099250_Fn>>((*this)._field__buffer.heap,_23917_i,_23917_i - _22347_n);
		}
	}
	_iter_next_4761985376:;
	(_23917_i)++;
	goto _iter_begin_4761985376;
	_iter_end_4761985376:;
	(*this)._field__buffer.len-=_22347_n;
}



inline void _1192e4e90_Vector_11::_method_insert(jule::Int _24829_i,jule::Ref<_119099250_Fn> _24841_item) {
	if (_24829_i < 0LL) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at negative index", 52));
	}
	if (_24829_i > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at out of range", 50));
	}
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	jule::Int _26117_j = (*this)._field__buffer.len - 1LL;
	_iter_begin_4761996384:;
	if (!(_26117_j >= _24829_i)) { goto _iter_end_4761996384; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_119099250_Fn>>((*this)._field__buffer.heap,_26117_j,_26117_j + 1LL);
		}
	}
	_iter_next_4761996384:;
	(_26117_j)--;
	goto _iter_begin_4761996384;
	_iter_end_4761996384:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_119099250_Fn>>((*this)._field__buffer.heap,_24829_i,_24841_item);
	}
	((*this)._field__buffer.len)++;
}



inline _1192e4e90_Vector_11 _1192e4e90_Vector_11::_method_slice(jule::Int _27228_start,jule::Int _27240_end) {
	if (_27228_start < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at negative index", 49));
	}
	if (_27228_start > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at out of range", 47));
	}
	if (_27240_end > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at out of range", 45));
	}
	if (_27240_end < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at negative index", 47));
	}
	if (_27228_start > _27240_end) {
		jule::panic(jule::Str("Vector[T].slice: start point < end point", 40));
	}
	if (_27228_start == _27240_end) {
		return _1192e4e90_Vector_11::_static_method_new(0LL);
	}
	_1192e4e90_Vector_11 _29317_vec = _1192e4e90_Vector_11::_static_method_new(_27240_end - _27228_start);
	{
		__jule_std_vector_copy_range<jule::Ref<_119099250_Fn>>(_29317_vec._field__buffer.heap,((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_119099250_Fn>) * _27228_start))),_29317_vec._field__buffer.cap);
	}
	_29317_vec._field__buffer.len=_29317_vec._field__buffer.cap;
	return _29317_vec;
}







std::ostream &operator<<(std::ostream &_Stream, const _1192e4e90_Vector_11 &_Src) {
	_Stream << "Vector{";
	_Stream << "_buffer: cpp._field__buffer";
	_Stream << "}";
	return _Stream;
}

inline _1192e4e90_Vector_12 _1192e4e90_Vector_12::_static_method_new(jule::Int _4319_cap) {
	_1192e4e90_Vector_12 _4417_vec = _1192e4e90_Vector_12();
	if (_4319_cap != 0LL) {
		_4417_vec._method_resize_alloc(_4319_cap);
	}
	return _4417_vec;
}



inline jule::Int _1192e4e90_Vector_12::_method_calc_grow(jule::Int _5324_delta) {
	jule::Int _5413_t = (*this)._field__buffer.len + _5324_delta;
	return _5413_t * 2LL;
}



inline void _1192e4e90_Vector_12::_method_resize_alloc(jule::Int _5831_n) {
	void* _5917_new_heap = __jule_std_vector_alloc<jule::Ref<_118bb7d70_Struct>>(_5831_n);
	if (_5917_new_heap == nullptr) {
		jule::panic(jule::Str("Vector[T].resize_alloc: heap reallocation failed", 48));
	}
	if ((*this)._field__buffer.heap == nullptr) {
		(*this)._field__buffer.heap=_5917_new_heap;
		(*this)._field__buffer.cap=_5831_n;
		return;
	}
	{
		if ((*this)._field__buffer.len > 0LL) {
			__jule_std_vector_copy_range<jule::Ref<_118bb7d70_Struct>>(_5917_new_heap,(*this)._field__buffer.heap,(*this)._field__buffer.len);
		}
		__jule_std_vector_dealloc<jule::Ref<_118bb7d70_Struct>>((*this)._field__buffer.heap);
		(*this)._field__buffer.heap=_5917_new_heap;
	}
	(*this)._field__buffer.cap=_5831_n;
}



inline void _1192e4e90_Vector_12::_method_review_allocation(jule::Int _8336_delta) {
	if (((*this)._field__buffer.len + _8336_delta) > (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>((*this)._method_calc_grow(_8336_delta)));
	}
}



inline jule::Int _1192e4e90_Vector_12::_method_len(void) {
	return (*this)._field__buffer.len;
}



inline jule::Int _1192e4e90_Vector_12::_method_cap(void) {
	return (*this)._field__buffer.cap;
}



inline void _1192e4e90_Vector_12::_method_dealloc(void) {
	(*this)._field__buffer.drop();
}



inline void _1192e4e90_Vector_12::_method_set_len(jule::Int _10330_n) {
	if (_10330_n < 0LL) {
		(*this)._field__buffer.len=0LL;
		return;
	}
	if (_10330_n >= (*this)._field__buffer.len) {
		return;
	}
	(*this)._field__buffer.len=_10330_n;
}



inline jule::Ref<_118bb7d70_Struct> _1192e4e90_Vector_12::_method_at(jule::Int _11525_i) {
	if ((_11525_i < 0LL) || (_11525_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].at: out of range", 26));
	}
	return __jule_std_vector_deref<jule::Ref<_118bb7d70_Struct>>((*this)._field__buffer.heap,_11525_i);
}



inline void _1192e4e90_Vector_12::_method_set(jule::Int _12326_i,jule::Ref<_118bb7d70_Struct> _12338_item) {
	if ((_12326_i < 0LL) || (_12326_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].set: out of range", 27));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_118bb7d70_Struct>>((*this)._field__buffer.heap,_12326_i,_12338_item);
	}
}



inline void _1192e4e90_Vector_12::_method_push(jule::Ref<_118bb7d70_Struct> _13131_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_118bb7d70_Struct>>((*this)._field__buffer.heap,(*this)._field__buffer.len,_13131_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _1192e4e90_Vector_12::_method_push_front(jule::Ref<_118bb7d70_Struct> _14637_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	jule::Int _15217_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_4762116672:;
	if (!(_15217_i >= 0LL)) { goto _iter_end_4762116672; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_118bb7d70_Struct>>((*this)._field__buffer.heap,_15217_i,_15217_i + 1LL);
		}
	}
	_iter_next_4762116672:;
	(_15217_i)--;
	goto _iter_begin_4762116672;
	_iter_end_4762116672:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_118bb7d70_Struct>>((*this)._field__buffer.heap,0LL,_14637_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _1192e4e90_Vector_12::_method_append(jule::Slice<jule::Ref<_118bb7d70_Struct>> _16333_items) {
	if (_16333_items.len() == 0LL) {
		return;
	}
	(*this)._method_review_allocation(static_cast<jule::I64>(_16333_items.len()));
	{
		__jule_std_vector_copy_range<jule::Ref<_118bb7d70_Struct>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_118bb7d70_Struct>) * (*this)._field__buffer.len))),__jule_get_pointer_of_slice<jule::Ref<_118bb7d70_Struct>>(_16333_items),static_cast<jule::I64>(_16333_items.len()));
	}
	(*this)._field__buffer.len+=static_cast<jule::I64>(_16333_items.len());
}



inline void _1192e4e90_Vector_12::_method_merge(_1192e4e90_Vector_12 _18032_vec) {
	if (_18032_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_18032_vec._field__buffer.len);
	{
		__jule_std_vector_copy_range<jule::Ref<_118bb7d70_Struct>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_118bb7d70_Struct>) * (*this)._field__buffer.len))),_18032_vec._field__buffer.heap,_18032_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_18032_vec._field__buffer.len;
}



inline void _1192e4e90_Vector_12::_method_merge_front(_1192e4e90_Vector_12 _19738_vec) {
	if (_19738_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_19738_vec._field__buffer.len);
	jule::Int _20517_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_4762159120:;
	if (!(_20517_i >= 0LL)) { goto _iter_end_4762159120; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_118bb7d70_Struct>>((*this)._field__buffer.heap,_20517_i,_20517_i + _19738_vec._field__buffer.len);
		}
	}
	_iter_next_4762159120:;
	(_20517_i)--;
	goto _iter_begin_4762159120;
	_iter_end_4762159120:;
	{
		__jule_std_vector_copy_range<jule::Ref<_118bb7d70_Struct>>((*this)._field__buffer.heap,_19738_vec._field__buffer.heap,_19738_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_19738_vec._field__buffer.len;
}



inline void _1192e4e90_Vector_12::_method_remove_range(jule::Int _22335_start,jule::Int _22347_n) {
	if (_22347_n < 1LL) {
		return;
	}
	if (_22335_start < -1LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at negative index", 57));
	}
	if (_22335_start >= (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at out of range", 55));
	}
	if ((((*this)._field__buffer.len - _22335_start) - _22347_n) < 0LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing continues at out of range ", 59));
	}
	jule::Int _23917_i = _22335_start + _22347_n;
	_iter_begin_4762185312:;
	if (!(_23917_i < (*this)._field__buffer.len)) { goto _iter_end_4762185312; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_118bb7d70_Struct>>((*this)._field__buffer.heap,_23917_i,_23917_i - _22347_n);
		}
	}
	_iter_next_4762185312:;
	(_23917_i)++;
	goto _iter_begin_4762185312;
	_iter_end_4762185312:;
	(*this)._field__buffer.len-=_22347_n;
}



inline void _1192e4e90_Vector_12::_method_insert(jule::Int _24829_i,jule::Ref<_118bb7d70_Struct> _24841_item) {
	if (_24829_i < 0LL) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at negative index", 52));
	}
	if (_24829_i > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at out of range", 50));
	}
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	jule::Int _26117_j = (*this)._field__buffer.len - 1LL;
	_iter_begin_4762196320:;
	if (!(_26117_j >= _24829_i)) { goto _iter_end_4762196320; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_118bb7d70_Struct>>((*this)._field__buffer.heap,_26117_j,_26117_j + 1LL);
		}
	}
	_iter_next_4762196320:;
	(_26117_j)--;
	goto _iter_begin_4762196320;
	_iter_end_4762196320:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_118bb7d70_Struct>>((*this)._field__buffer.heap,_24829_i,_24841_item);
	}
	((*this)._field__buffer.len)++;
}



inline _1192e4e90_Vector_12 _1192e4e90_Vector_12::_method_slice(jule::Int _27228_start,jule::Int _27240_end) {
	if (_27228_start < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at negative index", 49));
	}
	if (_27228_start > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at out of range", 47));
	}
	if (_27240_end > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at out of range", 45));
	}
	if (_27240_end < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at negative index", 47));
	}
	if (_27228_start > _27240_end) {
		jule::panic(jule::Str("Vector[T].slice: start point < end point", 40));
	}
	if (_27228_start == _27240_end) {
		return _1192e4e90_Vector_12::_static_method_new(0LL);
	}
	_1192e4e90_Vector_12 _29317_vec = _1192e4e90_Vector_12::_static_method_new(_27240_end - _27228_start);
	{
		__jule_std_vector_copy_range<jule::Ref<_118bb7d70_Struct>>(_29317_vec._field__buffer.heap,((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_118bb7d70_Struct>) * _27228_start))),_29317_vec._field__buffer.cap);
	}
	_29317_vec._field__buffer.len=_29317_vec._field__buffer.cap;
	return _29317_vec;
}







std::ostream &operator<<(std::ostream &_Stream, const _1192e4e90_Vector_12 &_Src) {
	_Stream << "Vector{";
	_Stream << "_buffer: cpp._field__buffer";
	_Stream << "}";
	return _Stream;
}

inline _1192e4e90_Vector_13 _1192e4e90_Vector_13::_static_method_new(jule::Int _4319_cap) {
	_1192e4e90_Vector_13 _4417_vec = _1192e4e90_Vector_13();
	if (_4319_cap != 0LL) {
		_4417_vec._method_resize_alloc(_4319_cap);
	}
	return _4417_vec;
}



inline jule::Int _1192e4e90_Vector_13::_method_calc_grow(jule::Int _5324_delta) {
	jule::Int _5413_t = (*this)._field__buffer.len + _5324_delta;
	return _5413_t * 2LL;
}



inline void _1192e4e90_Vector_13::_method_resize_alloc(jule::Int _5831_n) {
	void* _5917_new_heap = __jule_std_vector_alloc<jule::Ref<_118e2b060_Trait>>(_5831_n);
	if (_5917_new_heap == nullptr) {
		jule::panic(jule::Str("Vector[T].resize_alloc: heap reallocation failed", 48));
	}
	if ((*this)._field__buffer.heap == nullptr) {
		(*this)._field__buffer.heap=_5917_new_heap;
		(*this)._field__buffer.cap=_5831_n;
		return;
	}
	{
		if ((*this)._field__buffer.len > 0LL) {
			__jule_std_vector_copy_range<jule::Ref<_118e2b060_Trait>>(_5917_new_heap,(*this)._field__buffer.heap,(*this)._field__buffer.len);
		}
		__jule_std_vector_dealloc<jule::Ref<_118e2b060_Trait>>((*this)._field__buffer.heap);
		(*this)._field__buffer.heap=_5917_new_heap;
	}
	(*this)._field__buffer.cap=_5831_n;
}



inline void _1192e4e90_Vector_13::_method_review_allocation(jule::Int _8336_delta) {
	if (((*this)._field__buffer.len + _8336_delta) > (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>((*this)._method_calc_grow(_8336_delta)));
	}
}



inline jule::Int _1192e4e90_Vector_13::_method_len(void) {
	return (*this)._field__buffer.len;
}



inline jule::Int _1192e4e90_Vector_13::_method_cap(void) {
	return (*this)._field__buffer.cap;
}



inline void _1192e4e90_Vector_13::_method_dealloc(void) {
	(*this)._field__buffer.drop();
}



inline void _1192e4e90_Vector_13::_method_set_len(jule::Int _10330_n) {
	if (_10330_n < 0LL) {
		(*this)._field__buffer.len=0LL;
		return;
	}
	if (_10330_n >= (*this)._field__buffer.len) {
		return;
	}
	(*this)._field__buffer.len=_10330_n;
}



inline jule::Ref<_118e2b060_Trait> _1192e4e90_Vector_13::_method_at(jule::Int _11525_i) {
	if ((_11525_i < 0LL) || (_11525_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].at: out of range", 26));
	}
	return __jule_std_vector_deref<jule::Ref<_118e2b060_Trait>>((*this)._field__buffer.heap,_11525_i);
}



inline void _1192e4e90_Vector_13::_method_set(jule::Int _12326_i,jule::Ref<_118e2b060_Trait> _12338_item) {
	if ((_12326_i < 0LL) || (_12326_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].set: out of range", 27));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_118e2b060_Trait>>((*this)._field__buffer.heap,_12326_i,_12338_item);
	}
}



inline void _1192e4e90_Vector_13::_method_push(jule::Ref<_118e2b060_Trait> _13131_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_118e2b060_Trait>>((*this)._field__buffer.heap,(*this)._field__buffer.len,_13131_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _1192e4e90_Vector_13::_method_push_front(jule::Ref<_118e2b060_Trait> _14637_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	jule::Int _15217_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_4762318352:;
	if (!(_15217_i >= 0LL)) { goto _iter_end_4762318352; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_118e2b060_Trait>>((*this)._field__buffer.heap,_15217_i,_15217_i + 1LL);
		}
	}
	_iter_next_4762318352:;
	(_15217_i)--;
	goto _iter_begin_4762318352;
	_iter_end_4762318352:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_118e2b060_Trait>>((*this)._field__buffer.heap,0LL,_14637_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _1192e4e90_Vector_13::_method_append(jule::Slice<jule::Ref<_118e2b060_Trait>> _16333_items) {
	if (_16333_items.len() == 0LL) {
		return;
	}
	(*this)._method_review_allocation(static_cast<jule::I64>(_16333_items.len()));
	{
		__jule_std_vector_copy_range<jule::Ref<_118e2b060_Trait>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_118e2b060_Trait>) * (*this)._field__buffer.len))),__jule_get_pointer_of_slice<jule::Ref<_118e2b060_Trait>>(_16333_items),static_cast<jule::I64>(_16333_items.len()));
	}
	(*this)._field__buffer.len+=static_cast<jule::I64>(_16333_items.len());
}



inline void _1192e4e90_Vector_13::_method_merge(_1192e4e90_Vector_13 _18032_vec) {
	if (_18032_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_18032_vec._field__buffer.len);
	{
		__jule_std_vector_copy_range<jule::Ref<_118e2b060_Trait>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_118e2b060_Trait>) * (*this)._field__buffer.len))),_18032_vec._field__buffer.heap,_18032_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_18032_vec._field__buffer.len;
}



inline void _1192e4e90_Vector_13::_method_merge_front(_1192e4e90_Vector_13 _19738_vec) {
	if (_19738_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_19738_vec._field__buffer.len);
	jule::Int _20517_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_4762360784:;
	if (!(_20517_i >= 0LL)) { goto _iter_end_4762360784; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_118e2b060_Trait>>((*this)._field__buffer.heap,_20517_i,_20517_i + _19738_vec._field__buffer.len);
		}
	}
	_iter_next_4762360784:;
	(_20517_i)--;
	goto _iter_begin_4762360784;
	_iter_end_4762360784:;
	{
		__jule_std_vector_copy_range<jule::Ref<_118e2b060_Trait>>((*this)._field__buffer.heap,_19738_vec._field__buffer.heap,_19738_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_19738_vec._field__buffer.len;
}



inline void _1192e4e90_Vector_13::_method_remove_range(jule::Int _22335_start,jule::Int _22347_n) {
	if (_22347_n < 1LL) {
		return;
	}
	if (_22335_start < -1LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at negative index", 57));
	}
	if (_22335_start >= (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at out of range", 55));
	}
	if ((((*this)._field__buffer.len - _22335_start) - _22347_n) < 0LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing continues at out of range ", 59));
	}
	jule::Int _23917_i = _22335_start + _22347_n;
	_iter_begin_4762386976:;
	if (!(_23917_i < (*this)._field__buffer.len)) { goto _iter_end_4762386976; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_118e2b060_Trait>>((*this)._field__buffer.heap,_23917_i,_23917_i - _22347_n);
		}
	}
	_iter_next_4762386976:;
	(_23917_i)++;
	goto _iter_begin_4762386976;
	_iter_end_4762386976:;
	(*this)._field__buffer.len-=_22347_n;
}



inline void _1192e4e90_Vector_13::_method_insert(jule::Int _24829_i,jule::Ref<_118e2b060_Trait> _24841_item) {
	if (_24829_i < 0LL) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at negative index", 52));
	}
	if (_24829_i > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at out of range", 50));
	}
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	jule::Int _26117_j = (*this)._field__buffer.len - 1LL;
	_iter_begin_4762397984:;
	if (!(_26117_j >= _24829_i)) { goto _iter_end_4762397984; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_118e2b060_Trait>>((*this)._field__buffer.heap,_26117_j,_26117_j + 1LL);
		}
	}
	_iter_next_4762397984:;
	(_26117_j)--;
	goto _iter_begin_4762397984;
	_iter_end_4762397984:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_118e2b060_Trait>>((*this)._field__buffer.heap,_24829_i,_24841_item);
	}
	((*this)._field__buffer.len)++;
}



inline _1192e4e90_Vector_13 _1192e4e90_Vector_13::_method_slice(jule::Int _27228_start,jule::Int _27240_end) {
	if (_27228_start < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at negative index", 49));
	}
	if (_27228_start > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at out of range", 47));
	}
	if (_27240_end > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at out of range", 45));
	}
	if (_27240_end < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at negative index", 47));
	}
	if (_27228_start > _27240_end) {
		jule::panic(jule::Str("Vector[T].slice: start point < end point", 40));
	}
	if (_27228_start == _27240_end) {
		return _1192e4e90_Vector_13::_static_method_new(0LL);
	}
	_1192e4e90_Vector_13 _29317_vec = _1192e4e90_Vector_13::_static_method_new(_27240_end - _27228_start);
	{
		__jule_std_vector_copy_range<jule::Ref<_118e2b060_Trait>>(_29317_vec._field__buffer.heap,((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_118e2b060_Trait>) * _27228_start))),_29317_vec._field__buffer.cap);
	}
	_29317_vec._field__buffer.len=_29317_vec._field__buffer.cap;
	return _29317_vec;
}







std::ostream &operator<<(std::ostream &_Stream, const _1192e4e90_Vector_13 &_Src) {
	_Stream << "Vector{";
	_Stream << "_buffer: cpp._field__buffer";
	_Stream << "}";
	return _Stream;
}

inline _1192e4e90_Vector_14 _1192e4e90_Vector_14::_static_method_new(jule::Int _4319_cap) {
	_1192e4e90_Vector_14 _4417_vec = _1192e4e90_Vector_14();
	if (_4319_cap != 0LL) {
		_4417_vec._method_resize_alloc(_4319_cap);
	}
	return _4417_vec;
}



inline jule::Int _1192e4e90_Vector_14::_method_calc_grow(jule::Int _5324_delta) {
	jule::Int _5413_t = (*this)._field__buffer.len + _5324_delta;
	return _5413_t * 2LL;
}



inline void _1192e4e90_Vector_14::_method_resize_alloc(jule::Int _5831_n) {
	void* _5917_new_heap = __jule_std_vector_alloc<jule::Ref<_11a089b40_Enum>>(_5831_n);
	if (_5917_new_heap == nullptr) {
		jule::panic(jule::Str("Vector[T].resize_alloc: heap reallocation failed", 48));
	}
	if ((*this)._field__buffer.heap == nullptr) {
		(*this)._field__buffer.heap=_5917_new_heap;
		(*this)._field__buffer.cap=_5831_n;
		return;
	}
	{
		if ((*this)._field__buffer.len > 0LL) {
			__jule_std_vector_copy_range<jule::Ref<_11a089b40_Enum>>(_5917_new_heap,(*this)._field__buffer.heap,(*this)._field__buffer.len);
		}
		__jule_std_vector_dealloc<jule::Ref<_11a089b40_Enum>>((*this)._field__buffer.heap);
		(*this)._field__buffer.heap=_5917_new_heap;
	}
	(*this)._field__buffer.cap=_5831_n;
}



inline void _1192e4e90_Vector_14::_method_review_allocation(jule::Int _8336_delta) {
	if (((*this)._field__buffer.len + _8336_delta) > (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>((*this)._method_calc_grow(_8336_delta)));
	}
}



inline jule::Int _1192e4e90_Vector_14::_method_len(void) {
	return (*this)._field__buffer.len;
}



inline jule::Int _1192e4e90_Vector_14::_method_cap(void) {
	return (*this)._field__buffer.cap;
}



inline void _1192e4e90_Vector_14::_method_dealloc(void) {
	(*this)._field__buffer.drop();
}



inline void _1192e4e90_Vector_14::_method_set_len(jule::Int _10330_n) {
	if (_10330_n < 0LL) {
		(*this)._field__buffer.len=0LL;
		return;
	}
	if (_10330_n >= (*this)._field__buffer.len) {
		return;
	}
	(*this)._field__buffer.len=_10330_n;
}



inline jule::Ref<_11a089b40_Enum> _1192e4e90_Vector_14::_method_at(jule::Int _11525_i) {
	if ((_11525_i < 0LL) || (_11525_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].at: out of range", 26));
	}
	return __jule_std_vector_deref<jule::Ref<_11a089b40_Enum>>((*this)._field__buffer.heap,_11525_i);
}



inline void _1192e4e90_Vector_14::_method_set(jule::Int _12326_i,jule::Ref<_11a089b40_Enum> _12338_item) {
	if ((_12326_i < 0LL) || (_12326_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].set: out of range", 27));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_11a089b40_Enum>>((*this)._field__buffer.heap,_12326_i,_12338_item);
	}
}



inline void _1192e4e90_Vector_14::_method_push(jule::Ref<_11a089b40_Enum> _13131_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_11a089b40_Enum>>((*this)._field__buffer.heap,(*this)._field__buffer.len,_13131_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _1192e4e90_Vector_14::_method_push_front(jule::Ref<_11a089b40_Enum> _14637_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	jule::Int _15217_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_4762527392:;
	if (!(_15217_i >= 0LL)) { goto _iter_end_4762527392; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_11a089b40_Enum>>((*this)._field__buffer.heap,_15217_i,_15217_i + 1LL);
		}
	}
	_iter_next_4762527392:;
	(_15217_i)--;
	goto _iter_begin_4762527392;
	_iter_end_4762527392:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_11a089b40_Enum>>((*this)._field__buffer.heap,0LL,_14637_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _1192e4e90_Vector_14::_method_append(jule::Slice<jule::Ref<_11a089b40_Enum>> _16333_items) {
	if (_16333_items.len() == 0LL) {
		return;
	}
	(*this)._method_review_allocation(static_cast<jule::I64>(_16333_items.len()));
	{
		__jule_std_vector_copy_range<jule::Ref<_11a089b40_Enum>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_11a089b40_Enum>) * (*this)._field__buffer.len))),__jule_get_pointer_of_slice<jule::Ref<_11a089b40_Enum>>(_16333_items),static_cast<jule::I64>(_16333_items.len()));
	}
	(*this)._field__buffer.len+=static_cast<jule::I64>(_16333_items.len());
}



inline void _1192e4e90_Vector_14::_method_merge(_1192e4e90_Vector_14 _18032_vec) {
	if (_18032_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_18032_vec._field__buffer.len);
	{
		__jule_std_vector_copy_range<jule::Ref<_11a089b40_Enum>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_11a089b40_Enum>) * (*this)._field__buffer.len))),_18032_vec._field__buffer.heap,_18032_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_18032_vec._field__buffer.len;
}



inline void _1192e4e90_Vector_14::_method_merge_front(_1192e4e90_Vector_14 _19738_vec) {
	if (_19738_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_19738_vec._field__buffer.len);
	jule::Int _20517_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_4762570336:;
	if (!(_20517_i >= 0LL)) { goto _iter_end_4762570336; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_11a089b40_Enum>>((*this)._field__buffer.heap,_20517_i,_20517_i + _19738_vec._field__buffer.len);
		}
	}
	_iter_next_4762570336:;
	(_20517_i)--;
	goto _iter_begin_4762570336;
	_iter_end_4762570336:;
	{
		__jule_std_vector_copy_range<jule::Ref<_11a089b40_Enum>>((*this)._field__buffer.heap,_19738_vec._field__buffer.heap,_19738_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_19738_vec._field__buffer.len;
}



inline void _1192e4e90_Vector_14::_method_remove_range(jule::Int _22335_start,jule::Int _22347_n) {
	if (_22347_n < 1LL) {
		return;
	}
	if (_22335_start < -1LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at negative index", 57));
	}
	if (_22335_start >= (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at out of range", 55));
	}
	if ((((*this)._field__buffer.len - _22335_start) - _22347_n) < 0LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing continues at out of range ", 59));
	}
	jule::Int _23917_i = _22335_start + _22347_n;
	_iter_begin_4762596528:;
	if (!(_23917_i < (*this)._field__buffer.len)) { goto _iter_end_4762596528; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_11a089b40_Enum>>((*this)._field__buffer.heap,_23917_i,_23917_i - _22347_n);
		}
	}
	_iter_next_4762596528:;
	(_23917_i)++;
	goto _iter_begin_4762596528;
	_iter_end_4762596528:;
	(*this)._field__buffer.len-=_22347_n;
}



inline void _1192e4e90_Vector_14::_method_insert(jule::Int _24829_i,jule::Ref<_11a089b40_Enum> _24841_item) {
	if (_24829_i < 0LL) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at negative index", 52));
	}
	if (_24829_i > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at out of range", 50));
	}
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	jule::Int _26117_j = (*this)._field__buffer.len - 1LL;
	_iter_begin_4762607536:;
	if (!(_26117_j >= _24829_i)) { goto _iter_end_4762607536; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_11a089b40_Enum>>((*this)._field__buffer.heap,_26117_j,_26117_j + 1LL);
		}
	}
	_iter_next_4762607536:;
	(_26117_j)--;
	goto _iter_begin_4762607536;
	_iter_end_4762607536:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_11a089b40_Enum>>((*this)._field__buffer.heap,_24829_i,_24841_item);
	}
	((*this)._field__buffer.len)++;
}



inline _1192e4e90_Vector_14 _1192e4e90_Vector_14::_method_slice(jule::Int _27228_start,jule::Int _27240_end) {
	if (_27228_start < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at negative index", 49));
	}
	if (_27228_start > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at out of range", 47));
	}
	if (_27240_end > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at out of range", 45));
	}
	if (_27240_end < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at negative index", 47));
	}
	if (_27228_start > _27240_end) {
		jule::panic(jule::Str("Vector[T].slice: start point < end point", 40));
	}
	if (_27228_start == _27240_end) {
		return _1192e4e90_Vector_14::_static_method_new(0LL);
	}
	_1192e4e90_Vector_14 _29317_vec = _1192e4e90_Vector_14::_static_method_new(_27240_end - _27228_start);
	{
		__jule_std_vector_copy_range<jule::Ref<_11a089b40_Enum>>(_29317_vec._field__buffer.heap,((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_11a089b40_Enum>) * _27228_start))),_29317_vec._field__buffer.cap);
	}
	_29317_vec._field__buffer.len=_29317_vec._field__buffer.cap;
	return _29317_vec;
}







std::ostream &operator<<(std::ostream &_Stream, const _1192e4e90_Vector_14 &_Src) {
	_Stream << "Vector{";
	_Stream << "_buffer: cpp._field__buffer";
	_Stream << "}";
	return _Stream;
}

inline _1192e4e90_Vector_15 _1192e4e90_Vector_15::_static_method_new(jule::Int _4319_cap) {
	_1192e4e90_Vector_15 _4417_vec = _1192e4e90_Vector_15();
	if (_4319_cap != 0LL) {
		_4417_vec._method_resize_alloc(_4319_cap);
	}
	return _4417_vec;
}



inline jule::Int _1192e4e90_Vector_15::_method_calc_grow(jule::Int _5324_delta) {
	jule::Int _5413_t = (*this)._field__buffer.len + _5324_delta;
	return _5413_t * 2LL;
}



inline void _1192e4e90_Vector_15::_method_resize_alloc(jule::Int _5831_n) {
	void* _5917_new_heap = __jule_std_vector_alloc<jule::Ref<_11a091460_Impl>>(_5831_n);
	if (_5917_new_heap == nullptr) {
		jule::panic(jule::Str("Vector[T].resize_alloc: heap reallocation failed", 48));
	}
	if ((*this)._field__buffer.heap == nullptr) {
		(*this)._field__buffer.heap=_5917_new_heap;
		(*this)._field__buffer.cap=_5831_n;
		return;
	}
	{
		if ((*this)._field__buffer.len > 0LL) {
			__jule_std_vector_copy_range<jule::Ref<_11a091460_Impl>>(_5917_new_heap,(*this)._field__buffer.heap,(*this)._field__buffer.len);
		}
		__jule_std_vector_dealloc<jule::Ref<_11a091460_Impl>>((*this)._field__buffer.heap);
		(*this)._field__buffer.heap=_5917_new_heap;
	}
	(*this)._field__buffer.cap=_5831_n;
}



inline void _1192e4e90_Vector_15::_method_review_allocation(jule::Int _8336_delta) {
	if (((*this)._field__buffer.len + _8336_delta) > (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>((*this)._method_calc_grow(_8336_delta)));
	}
}



inline jule::Int _1192e4e90_Vector_15::_method_len(void) {
	return (*this)._field__buffer.len;
}



inline jule::Int _1192e4e90_Vector_15::_method_cap(void) {
	return (*this)._field__buffer.cap;
}



inline void _1192e4e90_Vector_15::_method_dealloc(void) {
	(*this)._field__buffer.drop();
}



inline void _1192e4e90_Vector_15::_method_set_len(jule::Int _10330_n) {
	if (_10330_n < 0LL) {
		(*this)._field__buffer.len=0LL;
		return;
	}
	if (_10330_n >= (*this)._field__buffer.len) {
		return;
	}
	(*this)._field__buffer.len=_10330_n;
}



inline jule::Ref<_11a091460_Impl> _1192e4e90_Vector_15::_method_at(jule::Int _11525_i) {
	if ((_11525_i < 0LL) || (_11525_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].at: out of range", 26));
	}
	return __jule_std_vector_deref<jule::Ref<_11a091460_Impl>>((*this)._field__buffer.heap,_11525_i);
}



inline void _1192e4e90_Vector_15::_method_set(jule::Int _12326_i,jule::Ref<_11a091460_Impl> _12338_item) {
	if ((_12326_i < 0LL) || (_12326_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].set: out of range", 27));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_11a091460_Impl>>((*this)._field__buffer.heap,_12326_i,_12338_item);
	}
}



inline void _1192e4e90_Vector_15::_method_push(jule::Ref<_11a091460_Impl> _13131_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_11a091460_Impl>>((*this)._field__buffer.heap,(*this)._field__buffer.len,_13131_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _1192e4e90_Vector_15::_method_push_front(jule::Ref<_11a091460_Impl> _14637_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	jule::Int _15217_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_4762750064:;
	if (!(_15217_i >= 0LL)) { goto _iter_end_4762750064; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_11a091460_Impl>>((*this)._field__buffer.heap,_15217_i,_15217_i + 1LL);
		}
	}
	_iter_next_4762750064:;
	(_15217_i)--;
	goto _iter_begin_4762750064;
	_iter_end_4762750064:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_11a091460_Impl>>((*this)._field__buffer.heap,0LL,_14637_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _1192e4e90_Vector_15::_method_append(jule::Slice<jule::Ref<_11a091460_Impl>> _16333_items) {
	if (_16333_items.len() == 0LL) {
		return;
	}
	(*this)._method_review_allocation(static_cast<jule::I64>(_16333_items.len()));
	{
		__jule_std_vector_copy_range<jule::Ref<_11a091460_Impl>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_11a091460_Impl>) * (*this)._field__buffer.len))),__jule_get_pointer_of_slice<jule::Ref<_11a091460_Impl>>(_16333_items),static_cast<jule::I64>(_16333_items.len()));
	}
	(*this)._field__buffer.len+=static_cast<jule::I64>(_16333_items.len());
}



inline void _1192e4e90_Vector_15::_method_merge(_1192e4e90_Vector_15 _18032_vec) {
	if (_18032_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_18032_vec._field__buffer.len);
	{
		__jule_std_vector_copy_range<jule::Ref<_11a091460_Impl>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_11a091460_Impl>) * (*this)._field__buffer.len))),_18032_vec._field__buffer.heap,_18032_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_18032_vec._field__buffer.len;
}



inline void _1192e4e90_Vector_15::_method_merge_front(_1192e4e90_Vector_15 _19738_vec) {
	if (_19738_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_19738_vec._field__buffer.len);
	jule::Int _20517_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_4762792880:;
	if (!(_20517_i >= 0LL)) { goto _iter_end_4762792880; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_11a091460_Impl>>((*this)._field__buffer.heap,_20517_i,_20517_i + _19738_vec._field__buffer.len);
		}
	}
	_iter_next_4762792880:;
	(_20517_i)--;
	goto _iter_begin_4762792880;
	_iter_end_4762792880:;
	{
		__jule_std_vector_copy_range<jule::Ref<_11a091460_Impl>>((*this)._field__buffer.heap,_19738_vec._field__buffer.heap,_19738_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_19738_vec._field__buffer.len;
}



inline void _1192e4e90_Vector_15::_method_remove_range(jule::Int _22335_start,jule::Int _22347_n) {
	if (_22347_n < 1LL) {
		return;
	}
	if (_22335_start < -1LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at negative index", 57));
	}
	if (_22335_start >= (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at out of range", 55));
	}
	if ((((*this)._field__buffer.len - _22335_start) - _22347_n) < 0LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing continues at out of range ", 59));
	}
	jule::Int _23917_i = _22335_start + _22347_n;
	_iter_begin_4762819072:;
	if (!(_23917_i < (*this)._field__buffer.len)) { goto _iter_end_4762819072; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_11a091460_Impl>>((*this)._field__buffer.heap,_23917_i,_23917_i - _22347_n);
		}
	}
	_iter_next_4762819072:;
	(_23917_i)++;
	goto _iter_begin_4762819072;
	_iter_end_4762819072:;
	(*this)._field__buffer.len-=_22347_n;
}



inline void _1192e4e90_Vector_15::_method_insert(jule::Int _24829_i,jule::Ref<_11a091460_Impl> _24841_item) {
	if (_24829_i < 0LL) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at negative index", 52));
	}
	if (_24829_i > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at out of range", 50));
	}
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	jule::Int _26117_j = (*this)._field__buffer.len - 1LL;
	_iter_begin_4762830080:;
	if (!(_26117_j >= _24829_i)) { goto _iter_end_4762830080; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_11a091460_Impl>>((*this)._field__buffer.heap,_26117_j,_26117_j + 1LL);
		}
	}
	_iter_next_4762830080:;
	(_26117_j)--;
	goto _iter_begin_4762830080;
	_iter_end_4762830080:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_11a091460_Impl>>((*this)._field__buffer.heap,_24829_i,_24841_item);
	}
	((*this)._field__buffer.len)++;
}



inline _1192e4e90_Vector_15 _1192e4e90_Vector_15::_method_slice(jule::Int _27228_start,jule::Int _27240_end) {
	if (_27228_start < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at negative index", 49));
	}
	if (_27228_start > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at out of range", 47));
	}
	if (_27240_end > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at out of range", 45));
	}
	if (_27240_end < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at negative index", 47));
	}
	if (_27228_start > _27240_end) {
		jule::panic(jule::Str("Vector[T].slice: start point < end point", 40));
	}
	if (_27228_start == _27240_end) {
		return _1192e4e90_Vector_15::_static_method_new(0LL);
	}
	_1192e4e90_Vector_15 _29317_vec = _1192e4e90_Vector_15::_static_method_new(_27240_end - _27228_start);
	{
		__jule_std_vector_copy_range<jule::Ref<_11a091460_Impl>>(_29317_vec._field__buffer.heap,((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_11a091460_Impl>) * _27228_start))),_29317_vec._field__buffer.cap);
	}
	_29317_vec._field__buffer.len=_29317_vec._field__buffer.cap;
	return _29317_vec;
}







std::ostream &operator<<(std::ostream &_Stream, const _1192e4e90_Vector_15 &_Src) {
	_Stream << "Vector{";
	_Stream << "_buffer: cpp._field__buffer";
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _118d9a520_File::_method_is_ok(void) {
	jule::Int _1817_err;
	std::tie(std::ignore,_1817_err) = _118d9e780_stat((*this)._field__path);
	return _1817_err == 0LLU;
}



inline jule::Str _118d9a520_File::_method_path(void) {
	return (*this)._field__path;
}



inline jule::Str _118d9a520_File::_method_dir(void) {
	return _1410391e0_dir((*this)._field__path);
}



inline jule::Str _118d9a520_File::_method_name(void) {
	return _1410391e0_base((*this)._field__path);
}



inline jule::Uintptr _118d9a520_File::_method_addr(void) {
	return ((jule::Uintptr)((&((*this)))));
}



inline _1192e4e90_Vector_0 _118d9a520_File::_method_tokens(void) {
	return (*this)._field__tokens;
}







std::ostream &operator<<(std::ostream &_Stream, const _118d9a520_File &_Src) {
	_Stream << "File{";
	_Stream << "_path:" << _Src._field__path << ", ";
	_Stream << "_tokens:" << _Src._field__tokens;
	_Stream << "}";
	return _Stream;
}



inline void _11916a220_Lex::_method_push_err(jule::Str _40727_key,jule::Slice<jule::Any> _40737_args) {
	(*this)._field_errors=append((*this)._field_errors,jule::Slice<_13fe81720_Log>({_11916a220_make_err((*this)._field_row,(*this)._field_column,(*this)._field_file,_40727_key,_40737_args)}));
}



inline void _11916a220_Lex::_method_push_err_tok(_11911a8a0_Token _41231_token,jule::Str _41245_key) {
	(*this)._field_errors=append((*this)._field_errors,jule::Slice<_13fe81720_Log>({_11916a220_make_err(_41231_token._field_row,_41231_token._field_column,(*this)._field_file,_41245_key,jule::Slice<jule::Any>({}))}));
}



inline void _11916a220_Lex::_method_lex(void) {
	(*this)._field_errors=nullptr;
	(*this)._method_new_line();
	_iter_begin_4755402384:;
	if (!((*this)._field_pos < (*this)._field_data.len())) { goto _iter_end_4755402384; }
	{
		_11911a8a0_Token _42221_token = (*this)._method_token();
		(*this)._field_first_token_of_line=false;
		if (_42221_token._field_id != 0LLU) {
			(*this)._field_tokens._method_push(_42221_token);
		}
	}
	_iter_next_4755402384:;
	goto _iter_begin_4755402384;
	_iter_end_4755402384:;
	(*this)._field_data=nullptr;
}



inline jule::Str _11916a220_Lex::_method_id(jule::Slice<jule::U8> _43321_ln) {
	if (_43321_ln.len() == 0LL) {
		return jule::Str("", 0);
	}
	if ((_43321_ln[static_cast<jule::Int>(0LL)] != '_') && (!(_11911a8a0_is_letter(static_cast<jule::I32>(_43321_ln[static_cast<jule::Int>(0LL)]))))) {
		return jule::Str("", 0);
	}
	{
		auto &__julec_range_expr = _43321_ln;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _11916a220_i = 0;
			jule::U8 _11916a220_r = *__julec_range_begin;
			_iter_begin_4755418320:;
			{
				if (((_11916a220_r != '_') && (!(_11911a8a0_is_decimal(static_cast<jule::U8>(_11916a220_r))))) && (!(_11911a8a0_is_letter(_11916a220_r)))) {
					return static_cast<jule::Str>(_43321_ln.slice(0LL,static_cast<jule::Int>(_11916a220_i)));
				}
				((*this)._field_pos)++;
			}
			_iter_next_4755418320:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_11916a220_i; _11916a220_r = *__julec_range_begin; goto _iter_begin_4755418320; }
			_iter_end_4755418320:;
		}
	}
	return static_cast<jule::Str>(_43321_ln);
}



inline jule::Slice<jule::U8> _11916a220_Lex::_method_resume(void) {
	jule::Int _45417_i = (*this)._field_pos;
	_iter_begin_4755427072:;
	if (!(_45417_i < (*this)._field_data.len())) { goto _iter_end_4755427072; }
	{
		jule::I32 _45617_r = static_cast<jule::I32>((*this)._field_data[static_cast<jule::Int>(_45417_i)]);
		if (_11911a8a0_is_space(_45617_r)) {
			((*this)._field_pos)++;
			{
				auto &_match_expr{ _45617_r };
				if (!(('\n') == _match_expr)) { goto _case_end_4755433424; }
				_case_begin_4755433424:;
				{
					(*this)._method_new_line();
				}
				goto _match_end_4755431856;
				_case_end_4755433424:;
				if (!(('\t') == _match_expr)) { goto _case_end_4755434096; }
				_case_begin_4755434096:;
				{
					(*this)._field_column+=4LL;
				}
				goto _match_end_4755431856;
				_case_end_4755434096:;
				_case_begin_4755432528:;
				{
					((*this)._field_column)++;
				}
				goto _match_end_4755431856;
				_case_end_4755432528:;
				_match_end_4755431856:;
			}
			goto _iter_next_4755427072;
		}
		jule::Int _46721_j = _45417_i;
		_iter_begin_4755430864:;
		if (!(_46721_j < (*this)._field_data.len())) { goto _iter_end_4755430864; }
		{
			jule::U8 _46921_r = (*this)._field_data[static_cast<jule::Int>(_46721_j)];
			if (_46921_r == '\n') {
				goto _iter_end_4755430864;
			}
		}
		_iter_next_4755430864:;
		(_46721_j)++;
		goto _iter_begin_4755430864;
		_iter_end_4755430864:;
		return (*this)._field_data.slice(static_cast<jule::Int>(_45417_i),static_cast<jule::Int>(_46721_j));
	}
	_iter_next_4755427072:;
	(_45417_i)++;
	goto _iter_begin_4755427072;
	_iter_end_4755427072:;
	return nullptr;
}



inline void _11916a220_Lex::_method_lex_line_comment(_11911a8a0_Token& _48040_token) {
	jule::Int _48113_start = (*this)._field_pos;
	(*this)._field_pos+=2LL;
	_iter_begin_4755446640:;
	if (!((*this)._field_pos < (*this)._field_data.len())) { goto _iter_end_4755446640; }
	{
		jule::U8 _48517_r = (*this)._field_data[static_cast<jule::Int>((*this)._field_pos)];
		if ((_48517_r == '\n') || (_48517_r == '\r')) {
			if ((*this)._field_first_token_of_line) {
				_48040_token._field_id=18LLU;
				_48040_token._field_kind=static_cast<jule::Str>((*this)._field_data.slice(static_cast<jule::Int>(_48113_start),static_cast<jule::Int>((*this)._field_pos)));
			}
			return;
		}
	}
	_iter_next_4755446640:;
	((*this)._field_pos)++;
	goto _iter_begin_4755446640;
	_iter_end_4755446640:;
	if ((*this)._field_first_token_of_line) {
		_48040_token._field_id=18LLU;
		_48040_token._field_kind=static_cast<jule::Str>((*this)._field_data.slice(static_cast<jule::Int>(_48113_start)));
	}
}



inline void _11916a220_Lex::_method_lex_range_comment(void) {
	(*this)._field_pos+=2LL;
	_iter_begin_4755463472:;
	if (!((*this)._field_pos < (*this)._field_data.len())) { goto _iter_end_4755463472; }
	{
		jule::U8 _50417_r = (*this)._field_data[static_cast<jule::Int>((*this)._field_pos)];
		if (_50417_r == '\r') {
			goto _iter_next_4755463472;
		}
		if (_50417_r == '\n') {
			(*this)._method_new_line();
			goto _iter_next_4755463472;
		}
		(*this)._field_column+=1LL;
		if (((((*this)._field_pos + 1LL) < (*this)._field_data.len()) && (_50417_r == '*')) && ((*this)._field_data[static_cast<jule::Int>((*this)._field_pos + 1LL)] == '/')) {
			(*this)._field_column+=2LL;
			(*this)._field_pos+=2LL;
			return;
		}
	}
	_iter_next_4755463472:;
	((*this)._field_pos)++;
	goto _iter_begin_4755463472;
	_iter_end_4755463472:;
	(*this)._method_push_err(jule::Str("missing_block_comment", 21),jule::Slice<jule::Any>({}));
}



inline jule::Str _11916a220_Lex::_method_num(jule::Slice<jule::U8> _52322_txt) {
	jule::Str _52337_lit = jule::Str();
	_52337_lit=_11916a220_hex_num(_52322_txt);
	if (_52337_lit != jule::Str("", 0)) {
		goto _julec_label_end;
	}
	_52337_lit=_11916a220_octal_num(_52322_txt);
	if (_52337_lit != jule::Str("", 0)) {
		goto _julec_label_end;
	}
	_52337_lit=_11916a220_binary_num(_52322_txt);
	if (_52337_lit != jule::Str("", 0)) {
		goto _julec_label_end;
	}
	_52337_lit=_11916a220_common_num(_52322_txt);
	_julec_label_end:;
	(*this)._field_pos+=static_cast<jule::I64>(_52337_lit.len());
	return _52337_lit;
}



inline jule::Str _11916a220_Lex::_method_escape_seq(jule::Slice<jule::U8> _54229_txt) {
	jule::Str _54317_seq = jule::Str("", 0);
	if (_54229_txt.len() < 2LL) {
		goto _julec_label_end;
	}
	{
		auto &_match_expr{ _54229_txt[static_cast<jule::Int>(1LL)] };
		if (!(('\\') == _match_expr || ('\'') == _match_expr || ('\"') == _match_expr || ('a') == _match_expr || ('b') == _match_expr || ('f') == _match_expr || ('n') == _match_expr || ('r') == _match_expr || ('t') == _match_expr || ('v') == _match_expr)) { goto _case_end_4755501488; }
		_case_begin_4755501488:;
		{
			(*this)._field_pos+=2LL;
			return static_cast<jule::Str>(_54229_txt.slice(0LL,static_cast<jule::Int>(2LL)));
		}
		goto _match_end_4755499264;
		_case_end_4755501488:;
		if (!(('U') == _match_expr)) { goto _case_end_4755500800; }
		_case_begin_4755500800:;
		{
			_54317_seq=_11916a220_big_unicode_point_escape(_54229_txt);
		}
		goto _match_end_4755499264;
		_case_end_4755500800:;
		if (!(('u') == _match_expr)) { goto _case_end_4755501232; }
		_case_begin_4755501232:;
		{
			_54317_seq=_11916a220_little_unicode_point_escape(_54229_txt);
		}
		goto _match_end_4755499264;
		_case_end_4755501232:;
		if (!(('x') == _match_expr)) { goto _case_end_4755499904; }
		_case_begin_4755499904:;
		{
			_54317_seq=_11916a220_hex_byte_escape(_54229_txt);
		}
		goto _match_end_4755499264;
		_case_end_4755499904:;
		_case_begin_4755498544:;
		{
			_54317_seq=_11916a220_byte_escape(_54229_txt);
		}
		goto _match_end_4755499264;
		_case_end_4755498544:;
		_match_end_4755499264:;
	}
	_julec_label_end:;
	if (_54317_seq == jule::Str("", 0)) {
		((*this)._field_pos)++;
		(*this)._method_push_err(jule::Str("invalid_escape_sequence", 23),jule::Slice<jule::Any>({}));
		return jule::Str("", 0);
	}
	(*this)._field_pos+=static_cast<jule::I64>(_54317_seq.len());
	return _54317_seq;
}



inline jule::Str _11916a220_Lex::_method_get_rune(jule::Slice<jule::U8> _57627_txt,jule::Bool _57640_raw) {
	if ((!(_57640_raw)) && (_57627_txt[static_cast<jule::Int>(0LL)] == '\\')) {
		return (*this)._method_escape_seq(_57627_txt);
	}
	jule::I32 _58114_r;
	jule::Int _58117_n;
	std::tie(_58114_r,_58117_n) = _118dab460_decode_rune(_57627_txt);
	(*this)._field_pos+=_58117_n;
	return static_cast<jule::Str>(_58114_r);
}



inline jule::Str _11916a220_Lex::_method_lex_rune(jule::Slice<jule::U8> _58627_txt) {
	jule::Str _58717_run = jule::Str("'", 1);
	((*this)._field_column)++;
	jule::Int _58917_n = 0LL;
	jule::Int _59017_i = 1LL;
	_iter_begin_4755525216:;
	if (!(_59017_i < _58627_txt.len())) { goto _iter_end_4755525216; }
	{
		if (_58627_txt[static_cast<jule::Int>(_59017_i)] == '\r') {
			goto _iter_next_4755525216;
		}
		if (_58627_txt[static_cast<jule::Int>(_59017_i)] == '\n') {
			(*this)._method_push_err(jule::Str("missing_rune_end", 16),jule::Slice<jule::Any>({}));
			((*this)._field_pos)++;
			(*this)._method_new_line();
			return jule::Str("", 0);
		}
		jule::Str _60217_r = (*this)._method_get_rune(_58627_txt.slice(static_cast<jule::Int>(_59017_i)),false);
		_58717_run+=_60217_r;
		jule::I64 _60417_length = _60217_r.len();
		(*this)._field_column+=_60417_length;
		if (_60217_r == jule::Str("'", 1)) {
			((*this)._field_pos)++;
			goto _iter_end_4755525216;
		}
		if (_60417_length > 1LL) {
			_59017_i+=_60417_length - 1LL;
		}
		(_58917_n)++;
	}
	_iter_next_4755525216:;
	(_59017_i)++;
	goto _iter_begin_4755525216;
	_iter_end_4755525216:;
	if (_58917_n == 0LL) {
		(*this)._method_push_err(jule::Str("rune_empty", 10),jule::Slice<jule::Any>({}));
	} else if (_58917_n > 1LL) {
		(*this)._method_push_err(jule::Str("rune_overflow", 13),jule::Slice<jule::Any>({}));
	}
	return _58717_run;
}



inline jule::Str _11916a220_Lex::_method_lex_str(void) {
	jule::Str _62617_s = jule::Str("", 0);
	jule::U8 _62713_mark = (*this)._field_data[static_cast<jule::Int>((*this)._field_pos)];
	((*this)._field_pos)++;
	jule::Bool _62913_raw = _62713_mark == '`';
	_62617_s+=static_cast<jule::Str>(_62713_mark);
	((*this)._field_column)++;
	_iter_begin_4755552720:;
	if (!((*this)._field_pos < (*this)._field_data.len())) { goto _iter_end_4755552720; }
	{
		jule::U8 _63417_ch = (*this)._field_data[static_cast<jule::Int>((*this)._field_pos)];
		if (_63417_ch == '\r') {
			goto _iter_next_4755552720;
		}
		if (_63417_ch == '\n') {
			(*this)._method_new_line();
			if ((!(_62913_raw))) {
				(*this)._method_push_err(jule::Str("missing_string_end", 18),jule::Slice<jule::Any>({}));
				((*this)._field_pos)++;
				return jule::Str("", 0);
			}
		}
		jule::Str _64617_r = (*this)._method_get_rune((*this)._field_data.slice(static_cast<jule::Int>((*this)._field_pos)),_62913_raw);
		_62617_s+=_64617_r;
		(*this)._field_column+=static_cast<jule::I64>(_64617_r.len());
		if (_63417_ch == _62713_mark) {
			goto _iter_end_4755552720;
		}
	}
	_iter_next_4755552720:;
	goto _iter_begin_4755552720;
	_iter_end_4755552720:;
	return _62617_s;
}



inline void _11916a220_Lex::_method_new_line(void) {
	(*this)._field_first_token_of_line=true;
	((*this)._field_row)++;
	(*this)._field_column=1LL;
}



inline jule::Bool _11916a220_Lex::_method_is_op(jule::Slice<jule::U8> _66324_txt,jule::Str _66337_kind,jule::Uint _66348_id,_11911a8a0_Token& _66366_t) {
	if ((!(_11916a220_bytes_has_prefix(_66324_txt,_66337_kind)))) {
		return false;
	}
	_66366_t._field_kind=_66337_kind;
	_66366_t._field_id=_66348_id;
	(*this)._field_pos+=static_cast<jule::I64>(_66337_kind.len());
	return true;
}



inline jule::Bool _11916a220_Lex::_method_lex_basic_ops(jule::Slice<jule::U8> _67432_txt,_11911a8a0_Token& _67450_tok) {
	{
		auto &__julec_range_expr = _11916a220_BASIC_OPS;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			_11916a220_KindPair _11916a220_pair = *__julec_range_begin;
			_iter_begin_4755588896:;
			{
				if ((*this)._method_is_op(_67432_txt,_11916a220_pair._field_kind,_11916a220_pair._field_id,_67450_tok)) {
					return true;
				}
			}
			_iter_next_4755588896:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11916a220_pair = *__julec_range_begin; goto _iter_begin_4755588896; }
			_iter_end_4755588896:;
		}
	}
	return false;
}



inline jule::Bool _11916a220_Lex::_method_lex_id(jule::Slice<jule::U8> _68425_txt,_11911a8a0_Token& _68443_t) {
	jule::Str _68513_lex = (*this)._method_id(_68425_txt);
	if (_68513_lex == jule::Str("", 0)) {
		return false;
	}
	_68443_t._field_kind=_68513_lex;
	_68443_t._field_id=2LLU;
	return true;
}



inline jule::Bool _11916a220_Lex::_method_lex_num(jule::Slice<jule::U8> _69526_txt,_11911a8a0_Token& _69544_t) {
	jule::Str _69613_lex = (*this)._method_num(_69526_txt);
	if (_69613_lex == jule::Str("", 0)) {
		return false;
	}
	_69544_t._field_kind=_69613_lex;
	_69544_t._field_id=6LLU;
	return true;
}



inline _11911a8a0_Token _11916a220_Lex::_method_token(void) {
	_11911a8a0_Token _70817_t = _11911a8a0_Token((*this)._field_file,jule::Int(),jule::Int(),jule::Str(),0LLU);
	jule::Slice<jule::U8> _71013_txt = (*this)._method_resume();
	if (_71013_txt == nullptr) {
		return _70817_t;
	}
	_70817_t._field_column=(*this)._field_column;
	_70817_t._field_row=(*this)._field_row;
	{
		if (!(((*this)._method_lex_num(_71013_txt,_70817_t)))) { goto _case_end_4755620848; }
		goto _match_end_4755614080;
		_case_end_4755620848:;
		if (!((_71013_txt[static_cast<jule::Int>(0LL)] == '\''))) { goto _case_end_4755617888; }
		_case_begin_4755617888:;
		{
			_70817_t._field_kind=(*this)._method_lex_rune(_71013_txt);
			_70817_t._field_id=6LLU;
			return _70817_t;
		}
		goto _match_end_4755614080;
		_case_end_4755617888:;
		if (!(((_71013_txt[static_cast<jule::Int>(0LL)] == '\"') || (_71013_txt[static_cast<jule::Int>(0LL)] == '`')))) { goto _case_end_4755615040; }
		_case_begin_4755615040:;
		{
			_70817_t._field_kind=(*this)._method_lex_str();
			_70817_t._field_id=6LLU;
			return _70817_t;
		}
		goto _match_end_4755614080;
		_case_end_4755615040:;
		if (!((_11916a220_bytes_has_prefix(_71013_txt,jule::Str("//", 2))))) { goto _case_end_4755615152; }
		_case_begin_4755615152:;
		{
			(*this)._method_lex_line_comment(_70817_t);
			return _70817_t;
		}
		goto _match_end_4755614080;
		_case_end_4755615152:;
		if (!((_11916a220_bytes_has_prefix(_71013_txt,jule::Str("/*", 2))))) { goto _case_end_4755615264; }
		_case_begin_4755615264:;
		{
			(*this)._method_lex_range_comment();
			return _70817_t;
		}
		goto _match_end_4755614080;
		_case_end_4755615264:;
		if (!(((*this)._method_is_op(_71013_txt,jule::Str("(", 1),3LLU,_70817_t)) || ((*this)._method_is_op(_71013_txt,jule::Str(")", 1),3LLU,_70817_t)) || ((*this)._method_is_op(_71013_txt,jule::Str("{", 1),3LLU,_70817_t)) || ((*this)._method_is_op(_71013_txt,jule::Str("}", 1),3LLU,_70817_t)) || ((*this)._method_is_op(_71013_txt,jule::Str("[", 1),3LLU,_70817_t)) || ((*this)._method_is_op(_71013_txt,jule::Str("]", 1),3LLU,_70817_t)) || ((*this)._method_lex_basic_ops(_71013_txt,_70817_t)))) { goto _case_end_4755621008; }
		goto _match_end_4755614080;
		_case_end_4755621008:;
		if (!(((*this)._method_lex_id(_71013_txt,_70817_t)))) { goto _case_end_4755621120; }
		_case_begin_4755621120:;
		{
			{
				auto &__julec_range_expr = _11916a220_KEYWORDS;
				if (__julec_range_expr.begin() != __julec_range_expr.end()) {
					auto __julec_range_begin = __julec_range_expr.begin();
					const auto __julec_range_end = __julec_range_expr.end();
					_11916a220_KindPair _11916a220_pair = *__julec_range_begin;
					_iter_begin_4755642336:;
					{
						if (_11916a220_pair._field_kind == _70817_t._field_kind) {
							_70817_t._field_id=_11916a220_pair._field_id;
							goto _iter_end_4755642336;
						}
					}
					_iter_next_4755642336:;
					++__julec_range_begin;
					if (__julec_range_begin != __julec_range_end) { _11916a220_pair = *__julec_range_begin; goto _iter_begin_4755642336; }
					_iter_end_4755642336:;
				}
			}
		}
		goto _match_end_4755614080;
		_case_end_4755621120:;
		_case_begin_4755614592:;
		{
			jule::I32 _76018_r;
			jule::Int _76021_sz;
			std::tie(_76018_r,_76021_sz) = _118dab460_decode_rune(_71013_txt);
			(*this)._method_push_err(jule::Str("invalid_token", 13),jule::Slice<jule::Any>({jule::Any(_76018_r)}));
			((*this)._field_column)++;
			(*this)._field_pos+=_76021_sz;
			return _70817_t;
		}
		goto _match_end_4755614080;
		_case_end_4755614592:;
		_match_end_4755614080:;
	}
	(*this)._field_column+=static_cast<jule::I64>(_70817_t._field_kind.len());
	return _70817_t;
}







std::ostream &operator<<(std::ostream &_Stream, const _11916a220_Lex &_Src) {
	_Stream << "Lex{";
	_Stream << "first_token_of_line:" << _Src._field_first_token_of_line << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "data:" << _Src._field_data << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _118d8a140_Ast &_Src) {
	_Stream << "Ast{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "top_directives:" << _Src._field_top_directives << ", ";
	_Stream << "use_decls:" << _Src._field_use_decls << ", ";
	_Stream << "impls:" << _Src._field_impls << ", ";
	_Stream << "comments:" << _Src._field_comments << ", ";
	_Stream << "decls:" << _Src._field_decls;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_118bb7d70_StructIns> _118bb7d70_Struct::_method_instance(void) {
	if ((this->self->_field_generics.len() == 0LL) && (this->self->_field_instances.len() == 1LL)) {
		return this->self->_field_instances[static_cast<jule::Int>(0LL)];
	}
	jule::Ref<_118bb7d70_StructIns> _6817_ins = jule::new_struct<_118bb7d70_StructIns>(new( std::nothrow ) _118bb7d70_StructIns(jule::Bool(),this->self,jule::Slice<jule::Ref<_11a3c2e70_TypeKind>>(),jule::Slice<jule::Ref<_118bb7d70_FieldIns>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(this->self->_field_fields.len()))),jule::Slice<jule::Ref<_119099250_Fn>>::alloc(static_cast<jule::Int>(static_cast<jule::Int>(this->self->_field_methods._method_len()))),jule::Bool()));
	{
		auto &__julec_range_expr = this->self->_field_fields;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _118bb7d70_i = 0;
			jule::Ref<_118bb7d70_Field> _118bb7d70_f = *__julec_range_begin;
			_iter_begin_4764598160:;
			{
				_6817_ins->_field_fields[static_cast<jule::Int>(_118bb7d70_i)]=_118bb7d70_f->_method_instance();
				if (jule::real(_118bb7d70_f->_field_kind->_field_kind) && _11a3c2e70_is_mut(_118bb7d70_f->_field_kind->_field_kind)) {
					_6817_ins->_field_has_mut=true;
				}
			}
			_iter_next_4764598160:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_118bb7d70_i; _118bb7d70_f = *__julec_range_begin; goto _iter_begin_4764598160; }
			_iter_end_4764598160:;
		}
	}
	jule::Int _8117_i = 0LL;
	_iter_begin_4764585968:;
	if (!(_8117_i < this->self->_field_methods._method_len())) { goto _iter_end_4764585968; }
	{
		jule::Ref<_119099250_Fn> _8321_f = this->self->_field_methods._method_at(_8117_i);
		jule::Ref<_119099250_Fn> _8421_fins = jule::new_struct<_119099250_Fn>(new( std::nothrow ) _119099250_Fn(_8321_f->_field_sema,_8321_f->_field_token,_8321_f->_field_global,_8321_f->_field_unsafety,_8321_f->_field_public,_8321_f->_field_cpp_linked,_8321_f->_field_statically,_8321_f->_field_ident,_8321_f->_field_directives,_8321_f->_field_doc,_8321_f->_field_scope,_8321_f->_field_generics,_8321_f->_field_result,_8321_f->_field_params,_8321_f->_field_owner,_8321_f->_field_references,nullptr));
		_6817_ins->_field_methods[static_cast<jule::Int>(_8117_i)]=_8421_fins;
	}
	_iter_next_4764585968:;
	(_8117_i)++;
	goto _iter_begin_4764585968;
	_iter_end_4764585968:;
	return _6817_ins;
}



inline jule::Ref<_118bb7d70_StructIns> _118bb7d70_Struct::_method_append_instance(jule::Ref<_118bb7d70_StructIns> _11138_ins) {
	if (((*this)._field_generics.len() == 0LL) && ((*this)._field_instances.len() == 1LL)) {
		return (*this)._field_instances[static_cast<jule::Int>(0LL)];
	}
	{
		auto &__julec_range_expr = (*this)._field_instances;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_118bb7d70_StructIns> _118bb7d70_ains = *__julec_range_begin;
			_iter_begin_4764625424:;
			{
				{
					auto &__julec_range_expr = _118bb7d70_ains->_field_generics;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Int _118bb7d70_i = 0;
						jule::Ref<_11a3c2e70_TypeKind> _118bb7d70_ag = *__julec_range_begin;
						_iter_begin_4764627680:;
						{
							if (_118bb7d70_ag->_method_equals(_11138_ins->_field_generics[static_cast<jule::Int>(_118bb7d70_i)])) {
								return _118bb7d70_ains;
							}
						}
						_iter_next_4764627680:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { ++_118bb7d70_i; _118bb7d70_ag = *__julec_range_begin; goto _iter_begin_4764627680; }
						_iter_end_4764627680:;
					}
				}
			}
			_iter_next_4764625424:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _118bb7d70_ains = *__julec_range_begin; goto _iter_begin_4764625424; }
			_iter_end_4764625424:;
		}
	}
	(*this)._field_instances=append((*this)._field_instances,jule::Slice<jule::Ref<_118bb7d70_StructIns>>({_11138_ins}));
	return jule::new_ref<_118bb7d70_StructIns>();
}



inline jule::Ref<_119099250_Fn> _118bb7d70_Struct::_method_find_method(jule::Str _13234_ident,jule::Bool _13246_statically) {
	jule::Int _13317_i = 0LL;
	_iter_begin_4764638528:;
	if (!(_13317_i < (*this)._field_methods._method_len())) { goto _iter_end_4764638528; }
	{
		jule::Ref<_119099250_Fn> _13521_f = (*this)._field_methods._method_at(_13317_i);
		if ((_13521_f->_field_statically == _13246_statically) && (_13521_f->_field_ident == _13234_ident)) {
			return _13521_f;
		}
	}
	_iter_next_4764638528:;
	(_13317_i)++;
	goto _iter_begin_4764638528;
	_iter_end_4764638528:;
	return jule::new_ref<_119099250_Fn>();
}



inline jule::Ref<_118bb7d70_Field> _118bb7d70_Struct::_method_find_field(jule::Str _14533_ident) {
	{
		auto &__julec_range_expr = (*this)._field_fields;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_118bb7d70_Field> _118bb7d70_f = *__julec_range_begin;
			_iter_begin_4764648144:;
			{
				if (_118bb7d70_f->_field_ident == _14533_ident) {
					return _118bb7d70_f;
				}
			}
			_iter_next_4764648144:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _118bb7d70_f = *__julec_range_begin; goto _iter_begin_4764648144; }
			_iter_end_4764648144:;
		}
	}
	return jule::new_ref<_118bb7d70_Field>();
}



inline jule::Bool _118bb7d70_Struct::_method_is_implements(jule::Ref<_118e2b060_Trait> _15532_t) {
	{
		auto &__julec_range_expr = (*this)._field_implements;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_118e2b060_Trait> _118bb7d70_it = *__julec_range_begin;
			_iter_begin_4764652496:;
			{
				if ((_15532_t).alloc == (_118bb7d70_it).alloc) {
					return true;
				}
			}
			_iter_next_4764652496:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _118bb7d70_it = *__julec_range_begin; goto _iter_begin_4764652496; }
			_iter_end_4764652496:;
		}
	}
	return false;
}



inline jule::Bool _118bb7d70_Struct::_method_is_derives(jule::Str _16529_ident) {
	{
		auto &__julec_range_expr = (*this)._field_directives;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_118d9a790_Directive> _118bb7d70_d = *__julec_range_begin;
			_iter_begin_4764656832:;
			{
				if (_118bb7d70_d->_field_tag == jule::Str("derive", 6)) {
					if ((_118bb7d70_d->_field_args.len() == 1LL) && (_118bb7d70_d->_field_args[static_cast<jule::Int>(0LL)] == _16529_ident)) {
						return true;
					}
				}
			}
			_iter_next_4764656832:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _118bb7d70_d = *__julec_range_begin; goto _iter_begin_4764656832; }
			_iter_end_4764656832:;
		}
	}
	return false;
}



inline jule::Bool _118bb7d70_Struct::_method_is_uses(jule::Ref<_118bb7d70_Struct> _17726_s) {
	{
		auto &__julec_range_expr = (*this)._field_uses;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_118bb7d70_Struct> _118bb7d70_u = *__julec_range_begin;
			_iter_begin_4764665248:;
			{
				_iter_begin_4764666400:;
				if (!((_17726_s).alloc == (_118bb7d70_u).alloc)) { goto _iter_end_4764666400; }
				{
					return true;
				}
				_iter_next_4764666400:;
				goto _iter_begin_4764666400;
				_iter_end_4764666400:;
			}
			_iter_next_4764665248:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _118bb7d70_u = *__julec_range_begin; goto _iter_begin_4764665248; }
			_iter_end_4764665248:;
		}
	}
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _118bb7d70_Struct &_Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "depends:" << _Src._field_depends << ", ";
	_Stream << "uses:" << _Src._field_uses << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "implements:" << _Src._field_implements << ", ";
	_Stream << "references:" << _Src._field_references << ", ";
	_Stream << "instances:" << _Src._field_instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Int _13feceeb0_ReferenceStack::_method_len(void) {
	return static_cast<jule::Int>((*this)._field_buffer._method_len());
}



inline jule::Any _13feceeb0_ReferenceStack::_method_at(jule::Int _5125_i) {
	return (*this)._field_buffer._method_at(_5125_i);
}



inline void _13feceeb0_ReferenceStack::_method_push(jule::Any _5631_ref) {
	(*this)._field_buffer._method_push(_5631_ref);
}



inline void _13feceeb0_ReferenceStack::_method_remove(jule::Int _6129_i) {
	(*this)._field_buffer._method_remove_range(_6129_i,1LL);
}



inline jule::Bool _13feceeb0_ReferenceStack::_method_exist_0(jule::Ref<_11a245f20_Var> _6627_t) {
	jule::Int _6717_i = 0LL;
	_iter_begin_4767796624:;
	if (!(_6717_i < (*this)._method_len())) { goto _iter_end_4767796624; }
	{
		jule::Any _6917_ref = (&((*this)._field_buffer))->_method_at(_6717_i);
		{
			auto &_match_expr{ _6917_ref };
			if (!(_match_expr.type_is<jule::Ref<_11a245f20_Var>>())) { goto _case_end_4767801120; }
			_case_begin_4767801120:;
			{
				if ((_6917_ref.operator jule::Ref<_11a245f20_Var>()).alloc == (_6627_t).alloc) {
					return true;
				}
			}
			goto _match_end_4767800080;
			_case_end_4767801120:;
			_match_end_4767800080:;
		}
	}
	_iter_next_4767796624:;
	(_6717_i)++;
	goto _iter_begin_4767796624;
	_iter_end_4767796624:;
	return false;
}

inline jule::Bool _13feceeb0_ReferenceStack::_method_exist_1(jule::Ref<_119099250_Fn> _6627_t) {
	jule::Int _6717_i = 0LL;
	_iter_begin_4767813504:;
	if (!(_6717_i < (*this)._method_len())) { goto _iter_end_4767813504; }
	{
		jule::Any _6917_ref = (&((*this)._field_buffer))->_method_at(_6717_i);
		{
			auto &_match_expr{ _6917_ref };
			if (!(_match_expr.type_is<jule::Ref<_119099250_Fn>>())) { goto _case_end_4767817840; }
			_case_begin_4767817840:;
			{
				if ((_6917_ref.operator jule::Ref<_119099250_Fn>()).alloc == (_6627_t).alloc) {
					return true;
				}
			}
			goto _match_end_4767815536;
			_case_end_4767817840:;
			_match_end_4767815536:;
		}
	}
	_iter_next_4767813504:;
	(_6717_i)++;
	goto _iter_begin_4767813504;
	_iter_end_4767813504:;
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _13feceeb0_ReferenceStack &_Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11a093930_Scope &_Src) {
	_Stream << "Scope{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "deferred:" << _Src._field_deferred << ", ";
	_Stream << "stmts:" << _Src._field_stmts;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_11a0945e0_ImportInfo> _11a3c2dc0_SymbolTable::_method_find_package(jule::Str _2631_ident) {
	jule::Int _2717_i = 0LL;
	_iter_begin_4768852560:;
	if (!(_2717_i < (*this)._field_imports._method_len())) { goto _iter_end_4768852560; }
	{
		jule::Ref<_11a0945e0_ImportInfo> _2921_pkg = (*this)._field_imports._method_at(_2717_i);
		if (_2921_pkg->_field_ident == _2631_ident) {
			return _2921_pkg;
		}
	}
	_iter_next_4768852560:;
	(_2717_i)++;
	goto _iter_begin_4768852560;
	_iter_end_4768852560:;
	return jule::new_ref<_11a0945e0_ImportInfo>();
}



inline jule::Ref<_11a0945e0_ImportInfo> _11a3c2dc0_SymbolTable::_method_select_package(jule::Fn<jule::Bool(jule::Ref<_11a0945e0_ImportInfo>)> _4033_selector) {
	if (_4033_selector == nullptr) {
		return jule::new_ref<_11a0945e0_ImportInfo>();
	}
	jule::Int _4517_i = 0LL;
	_iter_begin_4768861968:;
	if (!(_4517_i < (*this)._field_imports._method_len())) { goto _iter_end_4768861968; }
	{
		jule::Ref<_11a0945e0_ImportInfo> _4721_pkg = (*this)._field_imports._method_at(_4517_i);
		if (_4033_selector(_4721_pkg)) {
			return _4721_pkg;
		}
	}
	_iter_next_4768861968:;
	(_4517_i)++;
	goto _iter_begin_4768861968;
	_iter_end_4768861968:;
	return jule::new_ref<_11a0945e0_ImportInfo>();
}



inline jule::Ref<_11a245f20_Var> _11a3c2dc0_SymbolTable::_method_find_var(jule::Str _5727_ident,jule::Bool _5739_cpp_linked) {
	return (*this)._method___find_var(_5727_ident,_5739_cpp_linked,false);
}



inline jule::Ref<_11a3c2e70_TypeAlias> _11a3c2dc0_SymbolTable::_method_find_type_alias(jule::Str _6334_ident,jule::Bool _6346_cpp_linked) {
	return (*this)._method___find_type_alias(_6334_ident,_6346_cpp_linked,false);
}



inline jule::Ref<_118bb7d70_Struct> _11a3c2dc0_SymbolTable::_method_find_struct(jule::Str _6930_ident,jule::Bool _6942_cpp_linked) {
	jule::Int _7017_i = 0LL;
	_iter_begin_4768875840:;
	if (!(_7017_i < (*this)._field_structs._method_len())) { goto _iter_end_4768875840; }
	{
		jule::Ref<_118bb7d70_Struct> _7221_s = (*this)._field_structs._method_at(_7017_i);
		if ((_7221_s->_field_ident == _6930_ident) && (_7221_s->_field_cpp_linked == _6942_cpp_linked)) {
			return _7221_s;
		}
	}
	_iter_next_4768875840:;
	(_7017_i)++;
	goto _iter_begin_4768875840;
	_iter_end_4768875840:;
	return jule::new_ref<_118bb7d70_Struct>();
}



inline jule::Ref<_119099250_Fn> _11a3c2dc0_SymbolTable::_method_find_fn(jule::Str _8226_ident,jule::Bool _8238_cpp_linked) {
	jule::Int _8317_i = 0LL;
	_iter_begin_4768883488:;
	if (!(_8317_i < (*this)._field_funcs._method_len())) { goto _iter_end_4768883488; }
	{
		jule::Ref<_119099250_Fn> _8521_f = (*this)._field_funcs._method_at(_8317_i);
		if ((_8521_f->_field_ident == _8226_ident) && (_8521_f->_field_cpp_linked == _8238_cpp_linked)) {
			return _8521_f;
		}
	}
	_iter_next_4768883488:;
	(_8317_i)++;
	goto _iter_begin_4768883488;
	_iter_end_4768883488:;
	return jule::new_ref<_119099250_Fn>();
}



inline jule::Ref<_118e2b060_Trait> _11a3c2dc0_SymbolTable::_method_find_trait(jule::Str _9529_ident) {
	jule::Int _9617_i = 0LL;
	_iter_begin_4768892016:;
	if (!(_9617_i < (*this)._field_traits._method_len())) { goto _iter_end_4768892016; }
	{
		jule::Ref<_118e2b060_Trait> _9821_t = (*this)._field_traits._method_at(_9617_i);
		if (_9821_t->_field_ident == _9529_ident) {
			return _9821_t;
		}
	}
	_iter_next_4768892016:;
	(_9617_i)++;
	goto _iter_begin_4768892016;
	_iter_end_4768892016:;
	return jule::new_ref<_118e2b060_Trait>();
}



inline jule::Ref<_11a089b40_Enum> _11a3c2dc0_SymbolTable::_method_find_enum(jule::Str _10828_ident) {
	jule::Int _10917_i = 0LL;
	_iter_begin_4768899312:;
	if (!(_10917_i < (*this)._field_enums._method_len())) { goto _iter_end_4768899312; }
	{
		jule::Ref<_11a089b40_Enum> _11121_e = (*this)._field_enums._method_at(_10917_i);
		if (_11121_e->_field_ident == _10828_ident) {
			return _11121_e;
		}
	}
	_iter_next_4768899312:;
	(_10917_i)++;
	goto _iter_begin_4768899312;
	_iter_end_4768899312:;
	return jule::new_ref<_11a089b40_Enum>();
}



inline jule::Ref<_11a245f20_Var> _11a3c2dc0_SymbolTable::_method___find_var(jule::Str _12129_ident,jule::Bool _12141_cpp_linked,jule::Bool _12159_reverse) {
	if (_12159_reverse) {
		jule::Int _12321_i = (*this)._field_vars._method_len() - 1LL;
		_iter_begin_4768911520:;
		if (!(_12321_i >= 0LL)) { goto _iter_end_4768911520; }
		{
			jule::Ref<_11a245f20_Var> _12525_v = (*this)._field_vars._method_at(_12321_i);
			if ((_12525_v->_field_ident == _12129_ident) && (_12525_v->_field_cpp_linked == _12141_cpp_linked)) {
				return _12525_v;
			}
		}
		_iter_next_4768911520:;
		(_12321_i)--;
		goto _iter_begin_4768911520;
		_iter_end_4768911520:;
	} else {
		jule::Int _13121_i = 0LL;
		_iter_begin_4768915808:;
		if (!(_13121_i < (*this)._field_vars._method_len())) { goto _iter_end_4768915808; }
		{
			jule::Ref<_11a245f20_Var> _13325_v = (*this)._field_vars._method_at(_13121_i);
			if ((_13325_v->_field_ident == _12129_ident) && (_13325_v->_field_cpp_linked == _12141_cpp_linked)) {
				return _13325_v;
			}
		}
		_iter_next_4768915808:;
		(_13121_i)++;
		goto _iter_begin_4768915808;
		_iter_end_4768915808:;
	}
	return jule::new_ref<_11a245f20_Var>();
}



inline jule::Ref<_11a3c2e70_TypeAlias> _11a3c2dc0_SymbolTable::_method___find_type_alias(jule::Str _14236_ident,jule::Bool _14248_cpp_linked,jule::Bool _14266_reverse) {
	if (_14266_reverse) {
		jule::Int _14421_i = (*this)._field_type_aliases._method_len() - 1LL;
		_iter_begin_4768944400:;
		if (!(_14421_i >= 0LL)) { goto _iter_end_4768944400; }
		{
			jule::Ref<_11a3c2e70_TypeAlias> _14625_ta = (*this)._field_type_aliases._method_at(_14421_i);
			if ((_14625_ta->_field_ident == _14236_ident) && (_14625_ta->_field_cpp_linked == _14248_cpp_linked)) {
				return _14625_ta;
			}
		}
		_iter_next_4768944400:;
		(_14421_i)--;
		goto _iter_begin_4768944400;
		_iter_end_4768944400:;
	} else {
		jule::Int _15221_i = 0LL;
		_iter_begin_4765794912:;
		if (!(_15221_i < (*this)._field_type_aliases._method_len())) { goto _iter_end_4765794912; }
		{
			jule::Ref<_11a3c2e70_TypeAlias> _15425_ta = (*this)._field_type_aliases._method_at(_15221_i);
			if ((_15425_ta->_field_ident == _14236_ident) && (_15425_ta->_field_cpp_linked == _14248_cpp_linked)) {
				return _15425_ta;
			}
		}
		_iter_next_4765794912:;
		(_15221_i)++;
		goto _iter_begin_4765794912;
		_iter_end_4765794912:;
	}
	return jule::new_ref<_11a3c2e70_TypeAlias>();
}



inline jule::Any _11a3c2dc0_SymbolTable::_method_def_by_ident(jule::Str _16531_ident,jule::Bool _16543_cpp_linked) {
	jule::Int _16617_i = 0LL;
	_iter_begin_4767532144:;
	if (!(_16617_i < (*this)._field_vars._method_len())) { goto _iter_end_4767532144; }
	{
		jule::Ref<_11a245f20_Var> _16821_v = (*this)._field_vars._method_at(_16617_i);
		if ((_16821_v->_field_ident == _16531_ident) && (_16821_v->_field_cpp_linked == _16543_cpp_linked)) {
			return jule::Any(_16821_v);
		}
	}
	_iter_next_4767532144:;
	(_16617_i)++;
	goto _iter_begin_4767532144;
	_iter_end_4767532144:;
	_16617_i=0LL;
	_iter_begin_4767533392:;
	if (!(_16617_i < (*this)._field_type_aliases._method_len())) { goto _iter_end_4767533392; }
	{
		jule::Ref<_11a3c2e70_TypeAlias> _17621_ta = (*this)._field_type_aliases._method_at(_16617_i);
		if ((_17621_ta->_field_ident == _16531_ident) && (_17621_ta->_field_cpp_linked == _16543_cpp_linked)) {
			return jule::Any(_17621_ta);
		}
	}
	_iter_next_4767533392:;
	(_16617_i)++;
	goto _iter_begin_4767533392;
	_iter_end_4767533392:;
	_16617_i=0LL;
	_iter_begin_4767539808:;
	if (!(_16617_i < (*this)._field_structs._method_len())) { goto _iter_end_4767539808; }
	{
		jule::Ref<_118bb7d70_Struct> _18421_s = (*this)._field_structs._method_at(_16617_i);
		if ((_18421_s->_field_ident == _16531_ident) && (_18421_s->_field_cpp_linked == _16543_cpp_linked)) {
			return jule::Any(_18421_s);
		}
	}
	_iter_next_4767539808:;
	(_16617_i)++;
	goto _iter_begin_4767539808;
	_iter_end_4767539808:;
	_16617_i=0LL;
	_iter_begin_4767545344:;
	if (!(_16617_i < (*this)._field_funcs._method_len())) { goto _iter_end_4767545344; }
	{
		jule::Ref<_119099250_Fn> _19221_f = (*this)._field_funcs._method_at(_16617_i);
		if ((_19221_f->_field_ident == _16531_ident) && (_19221_f->_field_cpp_linked == _16543_cpp_linked)) {
			return jule::Any(_19221_f);
		}
	}
	_iter_next_4767545344:;
	(_16617_i)++;
	goto _iter_begin_4767545344;
	_iter_end_4767545344:;
	if (_16543_cpp_linked) {
		return jule::Any(nullptr);
	}
	_16617_i=0LL;
	_iter_begin_4767557072:;
	if (!(_16617_i < (*this)._field_traits._method_len())) { goto _iter_end_4767557072; }
	{
		jule::Ref<_118e2b060_Trait> _20421_t = (*this)._field_traits._method_at(_16617_i);
		if (_20421_t->_field_ident == _16531_ident) {
			return jule::Any(_20421_t);
		}
	}
	_iter_next_4767557072:;
	(_16617_i)++;
	goto _iter_begin_4767557072;
	_iter_end_4767557072:;
	_16617_i=0LL;
	_iter_begin_4767561904:;
	if (!(_16617_i < (*this)._field_enums._method_len())) { goto _iter_end_4767561904; }
	{
		jule::Ref<_11a089b40_Enum> _21221_e = (*this)._field_enums._method_at(_16617_i);
		if (_21221_e->_field_ident == _16531_ident) {
			return jule::Any(_21221_e);
		}
	}
	_iter_next_4767561904:;
	(_16617_i)++;
	goto _iter_begin_4767561904;
	_iter_end_4767561904:;
	return jule::Any(nullptr);
}



inline jule::Bool _11a3c2dc0_SymbolTable::_method_is_duplicated_ident(jule::Uintptr _22434_itself,jule::Str _22451_ident,jule::Bool _22463_cpp_linked) {
	jule::Int _22517_i = 0LL;
	_iter_begin_4767570416:;
	if (!(_22517_i < (*this)._field_vars._method_len())) { goto _iter_end_4767570416; }
	{
		jule::Ref<_11a245f20_Var> _22717_v = (&((*this)._field_vars))->_method_at(_22517_i);
		if (((((jule::Uintptr)((_22717_v).alloc)) != _22434_itself) && (_22717_v->_field_ident == _22451_ident)) && (_22717_v->_field_cpp_linked == _22463_cpp_linked)) {
			return true;
		}
	}
	_iter_next_4767570416:;
	(_22517_i)++;
	goto _iter_begin_4767570416;
	_iter_end_4767570416:;
	_22517_i=0LL;
	_iter_begin_4767571600:;
	if (!(_22517_i < (*this)._field_type_aliases._method_len())) { goto _iter_end_4767571600; }
	{
		jule::Ref<_11a3c2e70_TypeAlias> _23517_ta = (&((*this)._field_type_aliases))->_method_at(_22517_i);
		if (((((jule::Uintptr)((_23517_ta).alloc)) != _22434_itself) && (_23517_ta->_field_ident == _22451_ident)) && (_23517_ta->_field_cpp_linked == _22463_cpp_linked)) {
			return true;
		}
	}
	_iter_next_4767571600:;
	(_22517_i)++;
	goto _iter_begin_4767571600;
	_iter_end_4767571600:;
	_22517_i=0LL;
	_iter_begin_4767579472:;
	if (!(_22517_i < (*this)._field_structs._method_len())) { goto _iter_end_4767579472; }
	{
		jule::Ref<_118bb7d70_Struct> _24317_s = (&((*this)._field_structs))->_method_at(_22517_i);
		if (((((jule::Uintptr)((_24317_s).alloc)) != _22434_itself) && (_24317_s->_field_ident == _22451_ident)) && (_24317_s->_field_cpp_linked == _22463_cpp_linked)) {
			return true;
		}
	}
	_iter_next_4767579472:;
	(_22517_i)++;
	goto _iter_begin_4767579472;
	_iter_end_4767579472:;
	_22517_i=0LL;
	_iter_begin_4767586224:;
	if (!(_22517_i < (*this)._field_funcs._method_len())) { goto _iter_end_4767586224; }
	{
		jule::Ref<_119099250_Fn> _25117_f = (&((*this)._field_funcs))->_method_at(_22517_i);
		if (((((jule::Uintptr)((_25117_f).alloc)) != _22434_itself) && (_25117_f->_field_ident == _22451_ident)) && (_25117_f->_field_cpp_linked == _22463_cpp_linked)) {
			return true;
		}
	}
	_iter_next_4767586224:;
	(_22517_i)++;
	goto _iter_begin_4767586224;
	_iter_end_4767586224:;
	if (_22463_cpp_linked) {
		return false;
	}
	_22517_i=0LL;
	_iter_begin_4767600240:;
	if (!(_22517_i < (*this)._field_traits._method_len())) { goto _iter_end_4767600240; }
	{
		jule::Ref<_118e2b060_Trait> _26317_t = (&((*this)._field_traits))->_method_at(_22517_i);
		if ((((jule::Uintptr)((_26317_t).alloc)) != _22434_itself) && (_26317_t->_field_ident == _22451_ident)) {
			return true;
		}
	}
	_iter_next_4767600240:;
	(_22517_i)++;
	goto _iter_begin_4767600240;
	_iter_end_4767600240:;
	_22517_i=0LL;
	_iter_begin_4767606960:;
	if (!(_22517_i < (*this)._field_enums._method_len())) { goto _iter_end_4767606960; }
	{
		jule::Ref<_11a089b40_Enum> _27117_e = (&((*this)._field_enums))->_method_at(_22517_i);
		if ((((jule::Uintptr)((_27117_e).alloc)) != _22434_itself) && (_27117_e->_field_ident == _22451_ident)) {
			return true;
		}
	}
	_iter_next_4767606960:;
	(_22517_i)++;
	goto _iter_begin_4767606960;
	_iter_end_4767606960:;
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _11a3c2dc0_SymbolTable &_Src) {
	_Stream << "SymbolTable{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "passes:" << _Src._field_passes << ", ";
	_Stream << "imports:" << _Src._field_imports << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "type_aliases:" << _Src._field_type_aliases << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "funcs:" << _Src._field_funcs << ", ";
	_Stream << "traits:" << _Src._field_traits << ", ";
	_Stream << "enums:" << _Src._field_enums << ", ";
	_Stream << "impls:" << _Src._field_impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Int _14108e780_get_last_errno(void) {
	return errno;
}



inline jule::Str _141090180_byte_ptr_to_str(jule::U8* _4831_s) {
	if (_4831_s == nullptr) {
		return jule::Str("", 0);
	}
	return __jule_str_from_byte_ptr(_4831_s);
}



inline jule::Int _141090180_stat(jule::U8* _5620_path,struct stat* _5637_stat) {
	return static_cast<jule::Int>(__jule_stat(((char*)(_5620_path)),_5637_stat));
}



inline jule::Int _141090180_open(jule::U8* _6120_path,jule::Int _6133_flag,jule::Int _6144_mode) {
	return static_cast<jule::Int>(open(((char*)(_6120_path)),_6133_flag,_6144_mode));
}



inline jule::U8* _141090180_getcwd(jule::U8* _6722_buff,jule::Uint _6735_bufflen) {
	return ((jule::U8*)(getcwd(((char*)(_6722_buff)),_6735_bufflen)));
}



inline DIR* _141090180_opendir(jule::U8* _7223_path) {
	return opendir(((char*)(_7223_path)));
}



inline struct dirent* _141090180_readdir(DIR* _7527_dir) {
	return readdir(_7527_dir);
}



inline jule::Int _141090180_closedir(DIR* _7828_dir) {
	return static_cast<jule::Int>(closedir(_7828_dir));
}



inline jule::Int _141090180_mkdir(jule::U8* _8721_path,jule::Int _8734_mode) {
	return static_cast<jule::Int>(mkdir(((char*)(_8721_path)),_8734_mode));
}



inline jule::Int _141090180_rmdir(jule::U8* _9221_path) {
	return static_cast<jule::Int>(rmdir(((char*)(_9221_path))));
}



inline jule::Int _141090180_unlink(jule::U8* _9522_path) {
	return static_cast<jule::Int>(unlink(((char*)(_9522_path))));
}



inline jule::I64 _13ff06980_seek(jule::Int _2613_handle,jule::I64 _2626_offset,jule::Int _2639_origin) {
	return static_cast<jule::I64>(lseek(_2613_handle,_2626_offset,_2639_origin));
}



inline jule::Int _13ff06980_read(jule::Int _3120_handle,void* _3137_buff,jule::Uint _3152_n) {
	return static_cast<jule::Int>(read(_3120_handle,_3137_buff,_3152_n));
}



inline jule::Int _13ff06980_close(jule::Int _3614_handle) {
	return static_cast<jule::Int>(close(_3614_handle));
}



inline jule::Int _13ff06980_write(jule::Int _3921_handle,void* _3934_buff,jule::Uint _3949_n) {
	return static_cast<jule::Int>(write(_3921_handle,_3934_buff,_3949_n));
}



inline void _13ff06980_exit(jule::Int _4413_code) {
	exit(_4413_code);
}



inline void _13ff30700_free(void* _2924_ptr) {
	free(_2924_ptr);
}



inline jule::Int _14107bc50_get_last_os_error(void) {
	jule::Int _319_err = _14108e780_get_last_errno();
	{
		auto &_match_expr{ _319_err };
		if (!((13LL) == _match_expr)) { goto _case_end_4748054928; }
		_case_begin_4748054928:;
		{
			return 1LLU;
		}
		goto _match_end_4748053280;
		_case_end_4748054928:;
		if (!((5LL) == _match_expr)) { goto _case_end_4748054160; }
		_case_begin_4748054160:;
		{
			return 2LLU;
		}
		goto _match_end_4748053280;
		_case_end_4748054160:;
		if (!((62LL) == _match_expr)) { goto _case_end_4748054272; }
		_case_begin_4748054272:;
		{
			return 3LLU;
		}
		goto _match_end_4748053280;
		_case_end_4748054272:;
		if (!((63LL) == _match_expr)) { goto _case_end_4748054384; }
		_case_begin_4748054384:;
		{
			return 4LLU;
		}
		goto _match_end_4748053280;
		_case_end_4748054384:;
		if (!((2LL) == _match_expr)) { goto _case_end_4748055232; }
		_case_begin_4748055232:;
		{
			return 5LLU;
		}
		goto _match_end_4748053280;
		_case_end_4748055232:;
		if (!((20LL) == _match_expr)) { goto _case_end_4748055344; }
		_case_begin_4748055344:;
		{
			return 6LLU;
		}
		goto _match_end_4748053280;
		_case_end_4748055344:;
		if (!((12LL) == _match_expr)) { goto _case_end_4748055456; }
		_case_begin_4748055456:;
		{
			return 7LLU;
		}
		goto _match_end_4748053280;
		_case_end_4748055456:;
		_case_begin_4748053856:;
		{
			return 0LLU;
		}
		goto _match_end_4748053280;
		_case_end_4748053856:;
		_match_end_4748053280:;
	}
}



inline std::tuple<jule::Str,jule::Int> _14107c570_working_dir(void) {
	jule::Str _3310_p;
	jule::Int _3313_err;
	std::tie(_3310_p,_3313_err) = _1410891a0___getwd();
	return std::make_tuple(_3310_p,_3313_err);
}



inline void _14107c570_init(void) {
	{
		(*((&(_14107c570_ARGS))))=__jule_get_command_line_args();
		(*((&(_14107c570_ENV))))=__jule_get_environment_variables();
	}
}



inline std::tuple<jule::Str,jule::Int> _1410891a0___getwd(void) {
	jule::U8* _1513_buff = _141090180_getcwd(nullptr,0LLU);
	if (_1513_buff == nullptr) {
		return std::make_tuple(jule::Str("", 0),_14107bc50_get_last_os_error());
	}
	jule::Str _199_pwd = _141090180_byte_ptr_to_str(_1513_buff);
	{
		_13ff30700_free(_1513_buff);
	}
	return std::make_tuple(_199_pwd,0LLU);
}



inline jule::Str _1410391e0_clean(jule::Str _10718_path) {
	jule::Str _1089_original_path = _10718_path;
	jule::Int _1099_vol_len = _141039060_volume_name_len(_10718_path);
	_10718_path=_10718_path.slice(static_cast<jule::Int>(_1099_vol_len));
	if (_10718_path == jule::Str("", 0)) {
		if (((_1099_vol_len > 1LL) && _141039060_is_path_sep(_1089_original_path[static_cast<jule::Int>(0LL)])) && _141039060_is_path_sep(_1089_original_path[static_cast<jule::Int>(1LL)])) {
			return _1410391e0_from_slash(_1089_original_path);
		}
		return _1089_original_path + jule::Str(".", 1);
	}
	jule::Bool _1189_rooted = _141039060_is_path_sep(_10718_path[static_cast<jule::Int>(0LL)]);
	jule::I64 _1259_n = _10718_path.len();
	_1410391e0_LazyBuff _12613_out = _1410391e0_LazyBuff(_10718_path,jule::Slice<jule::U8>(),jule::Int(),_1089_original_path,_1099_vol_len);
	jule::Int _13114_r = 0LL;
	jule::Int _13121_dotdot = 0LL;
	std::tie(_13114_r,_13121_dotdot) = std::make_tuple(0LL,0LL);
	if (_1189_rooted) {
		_12613_out._method_append(47LLU);
		std::tie(_13114_r,_13121_dotdot) = std::make_tuple(1LL,1LL);
	}
	_iter_begin_4748128976:;
	if (!(_13114_r < _1259_n)) { goto _iter_end_4748128976; }
	{
		{
			if (!((_141039060_is_path_sep(_10718_path[static_cast<jule::Int>(_13114_r)])))) { goto _case_end_4748148464; }
			_case_begin_4748148464:;
			{
				(_13114_r)++;
			}
			goto _match_end_4748130544;
			_case_end_4748148464:;
			if (!(((_10718_path[static_cast<jule::Int>(_13114_r)] == '.') && (((_13114_r + 1LL) == _1259_n) || _141039060_is_path_sep(_10718_path[static_cast<jule::Int>(_13114_r + 1LL)]))))) { goto _case_end_4748149536; }
			_case_begin_4748149536:;
			{
				(_13114_r)++;
			}
			goto _match_end_4748130544;
			_case_end_4748149536:;
			if (!((((_10718_path[static_cast<jule::Int>(_13114_r)] == '.') && (_10718_path[static_cast<jule::Int>(_13114_r + 1LL)] == '.')) && (((_13114_r + 2LL) == _1259_n) || _141039060_is_path_sep(_10718_path[static_cast<jule::Int>(_13114_r + 2LL)]))))) { goto _case_end_4748146224; }
			_case_begin_4748146224:;
			{
				_13114_r+=2LL;
				{
					if (!((_12613_out._field_w > _13121_dotdot))) { goto _case_end_4748159984; }
					_case_begin_4748159984:;
					{
						(_12613_out._field_w)--;
						_iter_begin_4748160816:;
						if (!((_12613_out._field_w > _13121_dotdot) && (!(_141039060_is_path_sep(static_cast<jule::U8>(_12613_out._method_index(_12613_out._field_w))))))) { goto _iter_end_4748160816; }
						{
							(_12613_out._field_w)--;
						}
						_iter_next_4748160816:;
						goto _iter_begin_4748160816;
						_iter_end_4748160816:;
					}
					goto _match_end_4748155312;
					_case_end_4748159984:;
					if (!(((!(_1189_rooted))))) { goto _case_end_4748160096; }
					_case_begin_4748160096:;
					{
						if (_12613_out._field_w > 0LL) {
							_12613_out._method_append(47LLU);
						}
						_12613_out._method_append('.');
						_12613_out._method_append('.');
						_13121_dotdot=_12613_out._field_w;
					}
					goto _match_end_4748155312;
					_case_end_4748160096:;
					_match_end_4748155312:;
				}
			}
			goto _match_end_4748130544;
			_case_end_4748146224:;
			_case_begin_4748130736:;
			{
				if ((_1189_rooted && (_12613_out._field_w != 1LL)) || ((!(_1189_rooted)) && (_12613_out._field_w != 0LL))) {
					_12613_out._method_append(47LLU);
				}
				if (((false && (_12613_out._field_w == 0LL)) && (_12613_out._field_vol_len == 0LL)) && (_13114_r != 0LL)) {
					jule::Int _17425_i = _13114_r;
					_iter_begin_4748137328:;
					if (!((_17425_i < _1259_n) && (!(_141039060_is_path_sep(_10718_path[static_cast<jule::Int>(_17425_i)]))))) { goto _iter_end_4748137328; }
					{
						if (_10718_path[static_cast<jule::Int>(_17425_i)] == ':') {
							_12613_out._method_append('.');
							_12613_out._method_append(47LLU);
							goto _iter_end_4748137328;
						}
					}
					_iter_next_4748137328:;
					(_17425_i)++;
					goto _iter_begin_4748137328;
					_iter_end_4748137328:;
				}
				_iter_begin_4748144368:;
				if (!((_13114_r < _1259_n) && (!(_141039060_is_path_sep(_10718_path[static_cast<jule::Int>(_13114_r)]))))) { goto _iter_end_4748144368; }
				{
					_12613_out._method_append(_10718_path[static_cast<jule::Int>(_13114_r)]);
				}
				_iter_next_4748144368:;
				(_13114_r)++;
				goto _iter_begin_4748144368;
				_iter_end_4748144368:;
			}
			goto _match_end_4748130544;
			_case_end_4748130736:;
			_match_end_4748130544:;
		}
	}
	_iter_next_4748128976:;
	goto _iter_begin_4748128976;
	_iter_end_4748128976:;
	if (_12613_out._field_w == 0LL) {
		_12613_out._method_append('.');
	}
	return _1410391e0_from_slash(_12613_out._method_string());
}



inline jule::Str _1410391e0_from_slash(jule::Str _21019_path) {
	if (true) {
		return _21019_path;
	}
	return _21019_path.replace(jule::Str("/", 1),static_cast<jule::Str>(47LL),-1LL);
}



inline jule::Str _1410391e0_join(jule::Slice<jule::Str> _22413_elem) {
	return _141039060___join(_22413_elem);
}



inline jule::Str _1410391e0_ext(jule::Str _22912_path) {
	jule::I64 _23013_i = _22912_path.len() - 1LL;
	_iter_begin_4748185376:;
	if (!((_23013_i >= 0LL) && (!(_141039060_is_path_sep(_22912_path[static_cast<jule::Int>(_23013_i)]))))) { goto _iter_end_4748185376; }
	{
		if (_22912_path[static_cast<jule::Int>(_23013_i)] == '.') {
			return _22912_path.slice(static_cast<jule::Int>(_23013_i));
		}
	}
	_iter_next_4748185376:;
	(_23013_i)--;
	goto _iter_begin_4748185376;
	_iter_end_4748185376:;
	return jule::Str("", 0);
}



inline std::tuple<jule::Str,jule::Bool> _1410391e0_abs(jule::Str _24412_path) {
	jule::Str _24510_abs_path;
	jule::Bool _24520_ok;
	std::tie(_24510_abs_path,_24520_ok) = _141039060___abs(_24412_path);
	return std::make_tuple(_24510_abs_path,_24520_ok);
}



inline jule::Str _1410391e0_base(jule::Str _25317_path) {
	if (_25317_path == jule::Str("", 0)) {
		return jule::Str(".", 1);
	}
	_iter_begin_4748197088:;
	if (!((_25317_path.len() > 0LL) && _141039060_is_path_sep(_25317_path[static_cast<jule::Int>(_25317_path.len() - 1LL)]))) { goto _iter_end_4748197088; }
	{
		_25317_path=_25317_path.slice(static_cast<jule::Int>(0LL),static_cast<jule::Int>(_25317_path.len() - 1LL));
	}
	_iter_next_4748197088:;
	goto _iter_begin_4748197088;
	_iter_end_4748197088:;
	_25317_path=_25317_path.slice(static_cast<jule::Int>(_1410391e0_volume_name(_25317_path).len()));
	jule::I64 _26413_i = _25317_path.len() - 1LL;
	_iter_begin_4748198160:;
	if (!((_26413_i >= 0LL) && (!(_141039060_is_path_sep(_25317_path[static_cast<jule::Int>(_26413_i)]))))) { goto _iter_end_4748198160; }
	{
		(_26413_i)--;
	}
	_iter_next_4748198160:;
	goto _iter_begin_4748198160;
	_iter_end_4748198160:;
	if (_26413_i >= 0LL) {
		_25317_path=_25317_path.slice(static_cast<jule::Int>(_26413_i + 1LL));
	}
	if (_25317_path == jule::Str("", 0)) {
		return static_cast<jule::Str>(47LL);
	}
	return _25317_path;
}



inline jule::Str _1410391e0_dir(jule::Str _28412_path) {
	jule::Str _2859_vol = _1410391e0_volume_name(_28412_path);
	jule::I64 _28613_i = _28412_path.len() - 1LL;
	_iter_begin_4748214064:;
	if (!((_28613_i >= _2859_vol.len()) && (!(_141039060_is_path_sep(_28412_path[static_cast<jule::Int>(_28613_i)]))))) { goto _iter_end_4748214064; }
	{
		(_28613_i)--;
	}
	_iter_next_4748214064:;
	goto _iter_begin_4748214064;
	_iter_end_4748214064:;
	jule::Str _2909_dir = _1410391e0_clean(_28412_path.slice(static_cast<jule::Int>(_2859_vol.len()),static_cast<jule::Int>(_28613_i + 1LL)));
	if ((_2909_dir == jule::Str(".", 1)) && (_2859_vol.len() > 2LL)) {
		return _2859_vol;
	}
	return _2859_vol + _2909_dir;
}



inline jule::Str _1410391e0_volume_name(jule::Str _30220_path) {
	return _1410391e0_from_slash(_30220_path.slice(0LL,static_cast<jule::Int>(_141039060_volume_name_len(_30220_path))));
}



inline jule::Bool _141039060_is_path_sep(jule::U8 _4720_c) {
	return 47LL == _4720_c;
}



inline jule::Bool _141039060_is_abs(jule::Str _5215_path) {
	return _5215_path.has_prefix(jule::Str("/", 1));
}



inline jule::Int _141039060_volume_name_len(jule::Str _5620_path) {
	return 0LL;
}



inline std::tuple<jule::Str,jule::Bool> _141039060___abs(jule::Str _5810_path) {
	jule::Bool _5828_ok = jule::Bool();
	if (_141039060_is_abs(_5810_path)) {
		_5828_ok = true;
		return std::make_tuple(_1410391e0_clean(_5810_path),_5828_ok);
	}
	jule::Str _6210_wd;
	jule::Int _6214_err;
	std::tie(_6210_wd,_6214_err) = _14107c570_working_dir();
	if (_6214_err != 0LLU) {
		_5828_ok = false;
		return std::make_tuple(jule::Str("", 0),_5828_ok);
	}
	_5828_ok = true;
	return std::make_tuple(_141039060___join(jule::Slice<jule::Str>({_6210_wd,_5810_path})),_5828_ok);
}



inline jule::Str _141039060_str_join(jule::Slice<jule::Str> _6913_elems,jule::Str _6927_sep) {
	{
		auto _match_expr{ _6913_elems.len() };
		if (!((0LL) == _match_expr)) { goto _case_end_4748242144; }
		_case_begin_4748242144:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4748241568;
		_case_end_4748242144:;
		if (!((1LL) == _match_expr)) { goto _case_end_4748242592; }
		_case_begin_4748242592:;
		{
			return _6913_elems[static_cast<jule::Int>(0LL)];
		}
		goto _match_end_4748241568;
		_case_end_4748242592:;
		_match_end_4748241568:;
	}
	jule::Str _7513_s = _6913_elems[static_cast<jule::Int>(0LL)];
	{
		auto __julec_range_expr = _6913_elems.slice(static_cast<jule::Int>(1LL));
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _141039060_elem = *__julec_range_begin;
			_iter_begin_4748247216:;
			{
				_7513_s+=_6927_sep + _141039060_elem;
			}
			_iter_next_4748247216:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _141039060_elem = *__julec_range_begin; goto _iter_begin_4748247216; }
			_iter_end_4748247216:;
		}
	}
	return _7513_s;
}



inline jule::Str _141039060___join(jule::Slice<jule::Str> _8211_elem) {
	{
		auto &__julec_range_expr = _8211_elem;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _141039060_i = 0;
			jule::Str _141039060_e = *__julec_range_begin;
			_iter_begin_4734557936:;
			{
				if (_141039060_e != jule::Str("", 0)) {
					return _1410391e0_clean(_141039060_str_join(_8211_elem.slice(static_cast<jule::Int>(_141039060_i)),static_cast<jule::Str>(47LL)));
				}
			}
			_iter_next_4734557936:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_141039060_i; _141039060_e = *__julec_range_begin; goto _iter_begin_4734557936; }
			_iter_end_4734557936:;
		}
	}
	return jule::Str("", 0);
}



inline jule::Int _118fb69d0_leading_zeros64(jule::U64 _6124_x) {
	return static_cast<jule::Int>(64LL - _118fb69d0_len64(_6124_x));
}



inline jule::Int _118fb69d0_trailing_zeros(jule::Uint _8323_x) {
	if (false) {
		return static_cast<jule::Int>(_118fb69d0_trailing_zeros32(static_cast<jule::U32>(_8323_x)));
	}
	return static_cast<jule::Int>(_118fb69d0_trailing_zeros64(static_cast<jule::U64>(_8323_x)));
}



inline jule::Int _118fb69d0_trailing_zeros32(jule::U32 _10525_x) {
	if (_10525_x == 0LL) {
		return 32LL;
	}
	return static_cast<jule::Int>(_118fb69d0_DE_BRUIJN32_TAB[static_cast<jule::Int>(((_10525_x & (-(_10525_x))) * 125613361LL) >> 27LL)]);
}



inline jule::Int _118fb69d0_trailing_zeros64(jule::U64 _11425_x) {
	if (_11425_x == 0LL) {
		return 64LL;
	}
	return static_cast<jule::Int>(_118fb69d0_DE_BRUIJN64_TAB[static_cast<jule::Int>(((_11425_x & (-(_11425_x))) * 285870213051353865LL) >> 58LL)]);
}



inline jule::Int _118fb69d0_len32(jule::U32 _35218_x) {
	jule::Int _35228_n = jule::Int();
	if (_35218_x >= 65536LL) {
		_35218_x>>=16LL;
		_35228_n=16LL;
	}
	if (_35218_x >= 256LL) {
		_35218_x>>=8LL;
		_35228_n+=8LL;
	}
	_35228_n = _35228_n + static_cast<jule::Int>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::Int>(_35218_x)]);
	return _35228_n;
}



inline jule::Int _118fb69d0_len64(jule::U64 _36618_x) {
	jule::Int _36628_n = jule::Int();
	if (_36618_x >= 4294967296LL) {
		_36618_x>>=32LL;
		_36628_n=32LL;
	}
	if (_36618_x >= 65536LL) {
		_36618_x>>=16LL;
		_36628_n+=16LL;
	}
	if (_36618_x >= 256LL) {
		_36618_x>>=8LL;
		_36628_n+=8LL;
	}
	_36628_n = _36628_n + static_cast<jule::Int>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::Int>(_36618_x)]);
	return _36628_n;
}



inline std::tuple<jule::U64,jule::U64> _118fb69d0_add64(jule::U64 _41514_x,jule::U64 _41522_y,jule::U64 _41530_carry) {
	jule::U64 _41554_carryout = jule::U64();
	jule::U64 _41544_sum = jule::U64();
	_41544_sum=(_41514_x + _41522_y) + _41530_carry;
	_41554_carryout=((_41514_x & _41522_y) | ((_41514_x | _41522_y) & (~(_41544_sum)))) >> 63LL;
	return std::make_tuple(_41544_sum,_41554_carryout);
}



inline std::tuple<jule::U64,jule::U64> _118fb69d0_mul64(jule::U64 _49914_x,jule::U64 _49922_y) {
	jule::U64 _49941_lo = jule::U64();
	jule::U64 _49932_hi = jule::U64();
	
	jule::U64 _5019_x0 = _49914_x & 4294967295LL;
	jule::U64 _5029_x1 = _49914_x >> 32LL;
	jule::U64 _5039_y0 = _49922_y & 4294967295LL;
	jule::U64 _5049_y1 = _49922_y >> 32LL;
	jule::U64 _5059_w0 = _5019_x0 * _5039_y0;
	jule::U64 _5069_t = (_5029_x1 * _5039_y0) + (_5059_w0 >> 32LL);
	jule::U64 _50713_w1 = _5069_t & 4294967295LL;
	jule::U64 _5089_w2 = _5069_t >> 32LL;
	_50713_w1+=_5019_x0 * _5049_y1;
	_49932_hi=((_5029_x1 * _5049_y1) + _5089_w2) + (_50713_w1 >> 32LL);
	_49941_lo=_49914_x * _49922_y;
	return std::make_tuple(_49932_hi,_49941_lo);
}



inline jule::U32 _10ffa2650_f32_bits(jule::F32 _4117_f) {
	return (*(((jule::U32*)((&(_4117_f))))));
}



inline jule::F32 _10ffa2650_f32_from_bits(jule::U32 _4722_b) {
	return (*(((jule::F32*)((&(_4722_b))))));
}



inline jule::U64 _10ffa2650_f64_bits(jule::F64 _5217_f) {
	return (*(((jule::U64*)((&(_5217_f))))));
}



inline jule::F64 _10ffa2650_f64_from_bits(jule::U64 _5822_b) {
	return (*(((jule::F64*)((&(_5822_b))))));
}



inline jule::F64 _1189bef30_nan(void) {
	return static_cast<jule::F64>(_10ffa2650_f64_from_bits(9221120237041090561LLU));
}



inline jule::Bool _1189bef30_is_nan(jule::F64 _5215_f) {
	return _5215_f != _5215_f;
}



inline jule::F64 _1189bef30_inf(jule::Int _6112_sign) {
	if (_6112_sign >= 0LL) {
		return static_cast<jule::F64>(_10ffa2650_f64_from_bits(9218868437227405312LLU));
	}
	return static_cast<jule::F64>(_10ffa2650_f64_from_bits(18442240474082181120LLU));
}



inline jule::Bool _1189bef30_is_inf(jule::F64 _7215_f,jule::Int _7223_sign) {
	return ((_7223_sign >= 0LL) && (_7215_f > jule::MAX_F64)) || ((_7223_sign <= 0LL) && (_7215_f < jule::MIN_F64));
}



inline jule::F64 _118a80b10_abs(jule::F64 _4312_x) {
	return static_cast<jule::F64>(_10ffa2650_f64_from_bits(static_cast<jule::U64>(_10ffa2650_f64_bits(_4312_x) & 9223372036854775807LLU)));
}



inline std::tuple<jule::F64,jule::F64> _10ffc0250_modf(jule::F64 _4413_f) {
	jule::F64 _4437_frac = jule::F64();
	jule::F64 _4423_integer = jule::F64();
	
	jule::F64 _469_abs_f = _118a80b10_abs(_4413_f);
	jule::F64 _4713_i = 0e+00;
	if (_469_abs_f > 4.503599627370496e+15) {
		_4713_i=_4413_f;
	} else {
		_4713_i=_469_abs_f + 4.503599627370496e+15;
		_4713_i-=4.503599627370496e+15;
		_iter_begin_4749931600:;
		if (!(_4713_i > _469_abs_f)) { goto _iter_end_4749931600; }
		{
			(_4713_i)--;
		}
		_iter_next_4749931600:;
		goto _iter_begin_4749931600;
		_iter_end_4749931600:;
		if (_4413_f < 0e+00) {
			_4713_i=static_cast<jule::F64>((-(_4713_i)));
		}
	}
	_4423_integer = _4713_i;
	_4437_frac = _4413_f - _4713_i;
	return std::make_tuple(_4423_integer,_4437_frac);
}



inline jule::Str _141082340_fmt_float(jule::F64 _7818_f,jule::U8 _7826_fmt,jule::Int _7837_prec,jule::Int _7848_bit_size) {
	return static_cast<jule::Str>(_141082340_generic_ftoa(nullptr,_7818_f,_7826_fmt,_7837_prec,_7848_bit_size));
}



inline jule::Slice<jule::U8> _141082340_generic_ftoa(jule::Slice<jule::U8> _8221_dst,jule::F64 _8234_val,jule::U8 _8244_fmt,jule::Int _8259_prec,jule::Int _8270_bit_size) {
	jule::U64 _8313_bits = 0LLU;
	_141082340_FloatInfo* _8413_flt = nullptr;
	{
		auto &_match_expr{ _8270_bit_size };
		if (!((32LL) == _match_expr)) { goto _case_end_4751955824; }
		_case_begin_4751955824:;
		{
			_8313_bits=static_cast<jule::U64>(_10ffa2650_f32_bits(static_cast<jule::F32>(_8234_val)));
			_8413_flt=(&(_141082340_F32_INFO));
		}
		goto _match_end_4751954272;
		_case_end_4751955824:;
		if (!((64LL) == _match_expr)) { goto _case_end_4751955936; }
		_case_begin_4751955936:;
		{
			_8313_bits=static_cast<jule::U64>(_10ffa2650_f64_bits(_8234_val));
			_8413_flt=(&(_141082340_F64_INFO));
		}
		goto _match_end_4751954272;
		_case_end_4751955936:;
		_case_begin_4751954848:;
		{
			jule::panic(jule::Str("std::conv: illegal bit_size", 27));
		}
		goto _match_end_4751954272;
		_case_end_4751954848:;
		_match_end_4751954272:;
	}
	jule::Bool _969_neg = (_8313_bits >> (_8413_flt->_field_expbits + _8413_flt->_field_mantbits)) != 0LL;
	jule::Int _9713_exp = static_cast<jule::Int>(_8313_bits >> _8413_flt->_field_mantbits) & ((1LL << _8413_flt->_field_expbits) - 1LL);
	jule::U64 _9813_mant = _8313_bits & ((static_cast<jule::U64>(1LLU) << _8413_flt->_field_mantbits) - 1LL);
	{
		auto &_match_expr{ _9713_exp };
		if (!(((1LL << _8413_flt->_field_expbits) - 1LL) == _match_expr)) { goto _case_end_4751970256; }
		_case_begin_4751970256:;
		{
			jule::Str _10317_s = jule::Str("", 0);
			{
				if (!((_9813_mant != 0LL))) { goto _case_end_4751976592; }
				_case_begin_4751976592:;
				{
					_10317_s=jule::Str("nan", 3);
				}
				goto _match_end_4751974208;
				_case_end_4751976592:;
				if (!((_969_neg))) { goto _case_end_4751975584; }
				_case_begin_4751975584:;
				{
					_10317_s=jule::Str("-inf", 4);
				}
				goto _match_end_4751974208;
				_case_end_4751975584:;
				_case_begin_4751974464:;
				{
					_10317_s=jule::Str("+inf", 4);
				}
				goto _match_end_4751974208;
				_case_end_4751974464:;
				_match_end_4751974208:;
			}
			return append(_8221_dst,static_cast<jule::Slice<jule::U8>>(_10317_s));
		}
		goto _match_end_4751963472;
		_case_end_4751970256:;
		if (!((0LL) == _match_expr)) { goto _case_end_4751969456; }
		_case_begin_4751969456:;
		{
			(_9713_exp)++;
		}
		goto _match_end_4751963472;
		_case_end_4751969456:;
		_case_begin_4751968464:;
		{
			_9813_mant|=static_cast<jule::Uint>(static_cast<jule::U64>(1LLU) << _8413_flt->_field_mantbits);
		}
		goto _match_end_4751963472;
		_case_end_4751968464:;
		_match_end_4751963472:;
	}
	_9713_exp+=_8413_flt->_field_bias;
	if (_8244_fmt == 'b') {
		return _141082340_fmt_b(_8221_dst,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	if ((_8244_fmt == 'x') || (_8244_fmt == 'X')) {
		return _141082340_fmt_x(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	if (false) {
		return _141082340_big_ftoa(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	_141082340_DecimalSlice _13413_digs = _141082340_DecimalSlice();
	jule::Bool _13513_ok = false;
	jule::Bool _1379_shortest = _8259_prec < 0LL;
	if (_1379_shortest) {
		jule::Array<jule::U8,32> _14013_buf = jule::Array<jule::U8,32>({});
		_13413_digs._field_d=_14013_buf.slice(0LL);
		_13fff9140_ryu_ftoa_shortest(_13413_digs,_9813_mant,_9713_exp - static_cast<jule::Int>(_8413_flt->_field_mantbits),(*(_8413_flt)));
		_13513_ok=true;
		{
			auto &_match_expr{ _8244_fmt };
			if (!(('e') == _match_expr || ('E') == _match_expr)) { goto _case_end_4751996224; }
			_case_begin_4751996224:;
			{
				_8259_prec=static_cast<jule::Int>(_141082340_max(_13413_digs._field_nd - 1LL,0LL));
			}
			goto _match_end_4751994416;
			_case_end_4751996224:;
			if (!(('f') == _match_expr)) { goto _case_end_4751996336; }
			_case_begin_4751996336:;
			{
				_8259_prec=static_cast<jule::Int>(_141082340_max(_13413_digs._field_nd - _13413_digs._field_dp,0LL));
			}
			goto _match_end_4751994416;
			_case_end_4751996336:;
			if (!(('g') == _match_expr || ('G') == _match_expr)) { goto _case_end_4751997184; }
			_case_begin_4751997184:;
			{
				_8259_prec=_13413_digs._field_nd;
			}
			goto _match_end_4751994416;
			_case_end_4751997184:;
			_match_end_4751994416:;
		}
	} else if (_8244_fmt != 'f') {
		jule::Int _15517_digits = _8259_prec;
		{
			auto &_match_expr{ _8244_fmt };
			if (!(('e') == _match_expr || ('E') == _match_expr)) { goto _case_end_4752004528; }
			_case_begin_4752004528:;
			{
				(_15517_digits)++;
			}
			goto _match_end_4752002624;
			_case_end_4752004528:;
			if (!(('g') == _match_expr || ('G') == _match_expr)) { goto _case_end_4752005312; }
			_case_begin_4752005312:;
			{
				if (_8259_prec == 0LL) {
					_8259_prec=1LL;
				}
				_15517_digits=_8259_prec;
			}
			goto _match_end_4752002624;
			_case_end_4752005312:;
			_case_begin_4752003728:;
			{
				_15517_digits=1LL;
			}
			goto _match_end_4752002624;
			_case_end_4752003728:;
			_match_end_4752002624:;
		}
		jule::Array<jule::U8,24> _16813_buf = jule::Array<jule::U8,24>({});
		if ((_8270_bit_size == 32LL) && (_15517_digits <= 9LL)) {
			_13413_digs._field_d=_16813_buf.slice(0LL);
			_13fff9140_ryu_ftoa_fixed32(_13413_digs,static_cast<jule::U32>(_9813_mant),_9713_exp - static_cast<jule::Int>(_8413_flt->_field_mantbits),_15517_digits);
			_13513_ok=true;
		} else if (_15517_digits <= 18LL) {
			_13413_digs._field_d=_16813_buf.slice(0LL);
			_13fff9140_ryu_ftoa_fixed64(_13413_digs,_9813_mant,_9713_exp - static_cast<jule::Int>(_8413_flt->_field_mantbits),_15517_digits);
			_13513_ok=true;
		}
	}
	if ((!(_13513_ok))) {
		return _141082340_big_ftoa(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	return _141082340_fmt_digits(_8221_dst,_1379_shortest,_969_neg,_13413_digs,_8259_prec,_8244_fmt);
}



inline jule::Slice<jule::U8> _141082340_big_ftoa(jule::Slice<jule::U8> _18617_dst,jule::Int _18634_prec,jule::U8 _18645_fmt,jule::Bool _18656_neg,jule::U64 _18713_mant,jule::Int _18724_exp,_141082340_FloatInfo& _18735_flt) {
	_13ff7af20_Decimal _18813_d = _13ff7af20_Decimal();
	_18813_d._method_assign(_18713_mant);
	_18813_d._method_shift(_18724_exp - static_cast<jule::Int>(_18735_flt._field_mantbits));
	_141082340_DecimalSlice _19113_digs = _141082340_DecimalSlice();
	jule::Bool _1929_shortest = _18634_prec < 0LL;
	if (_1929_shortest) {
		_141082340_round_shortest(_18813_d,_18713_mant,_18724_exp,_18735_flt);
		_19113_digs=_141082340_DecimalSlice(_18813_d._field_d.slice(0LL),_18813_d._field_nd,_18813_d._field_dp,jule::Bool());
		{
			auto &_match_expr{ _18645_fmt };
			if (!(('e') == _match_expr || ('E') == _match_expr)) { goto _case_end_4752033264; }
			_case_begin_4752033264:;
			{
				_18634_prec=_19113_digs._field_nd - 1LL;
			}
			goto _match_end_4752034656;
			_case_end_4752033264:;
			if (!(('f') == _match_expr)) { goto _case_end_4752038432; }
			_case_begin_4752038432:;
			{
				_18634_prec=static_cast<jule::Int>(_141082340_max(_19113_digs._field_nd - _19113_digs._field_dp,0LL));
			}
			goto _match_end_4752034656;
			_case_end_4752038432:;
			if (!(('g') == _match_expr || ('G') == _match_expr)) { goto _case_end_4752038544; }
			_case_begin_4752038544:;
			{
				_18634_prec=_19113_digs._field_nd;
			}
			goto _match_end_4752034656;
			_case_end_4752038544:;
			_match_end_4752034656:;
		}
	} else {
		{
			auto &_match_expr{ _18645_fmt };
			if (!(('e') == _match_expr || ('E') == _match_expr)) { goto _case_end_4752039264; }
			_case_begin_4752039264:;
			{
				_18813_d._method_round(_18634_prec + 1LL);
			}
			goto _match_end_4752043520;
			_case_end_4752039264:;
			if (!(('f') == _match_expr)) { goto _case_end_4752039376; }
			_case_begin_4752039376:;
			{
				_18813_d._method_round(_18813_d._field_dp + _18634_prec);
			}
			goto _match_end_4752043520;
			_case_end_4752039376:;
			if (!(('g') == _match_expr || ('G') == _match_expr)) { goto _case_end_4752039488; }
			_case_begin_4752039488:;
			{
				if (_18634_prec == 0LL) {
					_18634_prec=1LL;
				}
				_18813_d._method_round(_18634_prec);
			}
			goto _match_end_4752043520;
			_case_end_4752039488:;
			_match_end_4752043520:;
		}
		_19113_digs=_141082340_DecimalSlice(_18813_d._field_d.slice(0LL),_18813_d._field_nd,_18813_d._field_dp,jule::Bool());
	}
	return _141082340_fmt_digits(_18617_dst,_1929_shortest,_18656_neg,_19113_digs,_18634_prec,_18645_fmt);
}



inline jule::Slice<jule::U8> _141082340_fmt_digits(jule::Slice<jule::U8> _22319_dst,jule::Bool _22332_shortest,jule::Bool _22348_neg,_141082340_DecimalSlice _22413_digs,jule::Int _22437_prec,jule::U8 _22448_fmt) {
	{
		auto &_match_expr{ _22448_fmt };
		if (!(('e') == _match_expr || ('E') == _match_expr)) { goto _case_end_4752058064; }
		_case_begin_4752058064:;
		{
			return _141082340_fmt_e(_22319_dst,_22348_neg,_22413_digs,_22437_prec,_22448_fmt);
		}
		goto _match_end_4752057472;
		_case_end_4752058064:;
		if (!(('f') == _match_expr)) { goto _case_end_4752058176; }
		_case_begin_4752058176:;
		{
			return _141082340_fmt_f(_22319_dst,_22348_neg,_22413_digs,_22437_prec);
		}
		goto _match_end_4752057472;
		_case_end_4752058176:;
		if (!(('g') == _match_expr || ('G') == _match_expr)) { goto _case_end_4752058288; }
		_case_begin_4752058288:;
		{
			jule::Int _23217_eprec = _22437_prec;
			if ((_23217_eprec > _22413_digs._field_nd) && (_22413_digs._field_nd >= _22413_digs._field_dp)) {
				_23217_eprec=_22413_digs._field_nd;
			}
			if (_22332_shortest) {
				_23217_eprec=6LL;
			}
			jule::Int _24213_exp = _22413_digs._field_dp - 1LL;
			if ((_24213_exp < -4LL) || (_24213_exp >= _23217_eprec)) {
				if (_22437_prec > _22413_digs._field_nd) {
					_22437_prec=_22413_digs._field_nd;
				}
				return _141082340_fmt_e(_22319_dst,_22348_neg,_22413_digs,_22437_prec - 1LL,(_22448_fmt + 'e') - 'g');
			}
			if (_22437_prec > _22413_digs._field_dp) {
				_22437_prec=_22413_digs._field_nd;
			}
			return _141082340_fmt_f(_22319_dst,_22348_neg,_22413_digs,static_cast<jule::Int>(_141082340_max(_22437_prec - _22413_digs._field_dp,0LL)));
		}
		goto _match_end_4752057472;
		_case_end_4752058288:;
		_match_end_4752057472:;
	}
	return append(_22319_dst,jule::Slice<jule::U8>({'%',_22448_fmt}));
}



inline void _141082340_round_shortest(_13ff7af20_Decimal& _26124_d,jule::U64 _26136_mant,jule::Int _26147_exp,_141082340_FloatInfo& _26158_flt) {
	if (_26136_mant == 0LL) {
		_26124_d._field_nd=0LL;
		return;
	}
	jule::Int _2829_minexp = _26158_flt._field_bias + 1LL;
	if ((_26147_exp > _2829_minexp) && ((332LL * (_26124_d._field_dp - _26124_d._field_nd)) >= (100LL * (_26147_exp - static_cast<jule::Int>(_26158_flt._field_mantbits))))) {
		return;
	}
	_13ff7af20_Decimal _29113_upper = _13ff7af20_Decimal();
	_29113_upper._method_assign((_26136_mant * 2LL) + 1LL);
	_29113_upper._method_shift((_26147_exp - static_cast<jule::Int>(_26158_flt._field_mantbits)) - 1LL);
	jule::U64 _30113_mantlo = 0LLU;
	jule::Int _30213_explo = 0LL;
	if ((_26136_mant > (1LL << _26158_flt._field_mantbits)) || (_26147_exp == _2829_minexp)) {
		_30113_mantlo=_26136_mant - 1LL;
		_30213_explo=_26147_exp;
	} else {
		_30113_mantlo=(_26136_mant * 2LL) - 1LL;
		_30213_explo=_26147_exp - 1LL;
	}
	_13ff7af20_Decimal _31013_lower = _13ff7af20_Decimal();
	_31013_lower._method_assign((_30113_mantlo * 2LL) + 1LL);
	_31013_lower._method_shift((_30213_explo - static_cast<jule::Int>(_26158_flt._field_mantbits)) - 1LL);
	jule::Bool _3179_inclusive = (_26136_mant % 2LL) == 0LL;
	jule::U8 _33013_upperdelta = 0LLU;
	jule::Int _33413_ui = 0LL;
	_iter_begin_4752105040:;
	{
		jule::Int _33913_mi = (_33413_ui - _29113_upper._field_dp) + _26124_d._field_dp;
		if (_33913_mi >= _26124_d._field_nd) {
			goto _iter_end_4752105040;
		}
		jule::Int _34313_li = (_33413_ui - _29113_upper._field_dp) + _31013_lower._field_dp;
		jule::U8 _34417_l = static_cast<jule::U8>(48LLU);
		if ((_34313_li >= 0LL) && (_34313_li < _31013_lower._field_nd)) {
			_34417_l=_31013_lower._field_d[static_cast<jule::Int>(_34313_li)];
		}
		jule::U8 _34817_m = static_cast<jule::U8>(48LLU);
		if (_33913_mi >= 0LL) {
			_34817_m=_26124_d._field_d[static_cast<jule::Int>(_33913_mi)];
		}
		jule::U8 _35217_u = static_cast<jule::U8>(48LLU);
		if (_33413_ui < _29113_upper._field_nd) {
			_35217_u=_29113_upper._field_d[static_cast<jule::Int>(_33413_ui)];
		}
		jule::Bool _36013_okdown = (_34417_l != _34817_m) || (_3179_inclusive && ((_34313_li + 1LL) == _31013_lower._field_nd));
		{
			if (!(((_33013_upperdelta == 0LL) && ((_34817_m + 1LL) < _35217_u)))) { goto _case_end_4752127168; }
			_case_begin_4752127168:;
			{
				_33013_upperdelta=2LL;
			}
			goto _match_end_4752128240;
			_case_end_4752127168:;
			if (!(((_33013_upperdelta == 0LL) && (_34817_m != _35217_u)))) { goto _case_end_4752127280; }
			_case_begin_4752127280:;
			{
				_33013_upperdelta=1LL;
			}
			goto _match_end_4752128240;
			_case_end_4752127280:;
			if (!(((_33013_upperdelta == 1LL) && ((_34817_m != '9') || (_35217_u != '0'))))) { goto _case_end_4752127392; }
			_case_begin_4752127392:;
			{
				_33013_upperdelta=2LL;
			}
			goto _match_end_4752128240;
			_case_end_4752127392:;
			_match_end_4752128240:;
		}
		jule::Bool _38113_okup = (_33013_upperdelta > 0LL) && ((_3179_inclusive || (_33013_upperdelta > 1LL)) || ((_33413_ui + 1LL) < _29113_upper._field_nd));
		{
			if (!((_36013_okdown && _38113_okup))) { goto _case_end_4752137312; }
			_case_begin_4752137312:;
			{
				_26124_d._method_round(_33913_mi + 1LL);
				return;
			}
			goto _match_end_4752133664;
			_case_end_4752137312:;
			if (!((_36013_okdown))) { goto _case_end_4752137424; }
			_case_begin_4752137424:;
			{
				_26124_d._method_round_down(_33913_mi + 1LL);
				return;
			}
			goto _match_end_4752133664;
			_case_end_4752137424:;
			if (!((_38113_okup))) { goto _case_end_4752137872; }
			_case_begin_4752137872:;
			{
				_26124_d._method_round_up(_33913_mi + 1LL);
				return;
			}
			goto _match_end_4752133664;
			_case_end_4752137872:;
			_match_end_4752133664:;
		}
	}
	_iter_next_4752105040:;
	(_33413_ui)++;
	goto _iter_begin_4752105040;
	_iter_end_4752105040:;
}



inline jule::Slice<jule::U8> _141082340_fmt_e(jule::Slice<jule::U8> _40014_dst,jule::Bool _40027_neg,_141082340_DecimalSlice _40038_d,jule::Int _40055_prec,jule::U8 _40066_fmt) {
	if (_40027_neg) {
		_40014_dst=append(_40014_dst,jule::Slice<jule::U8>({'-'}));
	}
	jule::U8 _40713_ch = '0';
	if (_40038_d._field_nd != 0LL) {
		_40713_ch=_40038_d._field_d[static_cast<jule::Int>(0LL)];
	}
	_40014_dst=append(_40014_dst,jule::Slice<jule::U8>({_40713_ch}));
	if (_40055_prec > 0LL) {
		_40014_dst=append(_40014_dst,jule::Slice<jule::U8>({'.'}));
		jule::Int _41617_i = 1LL;
		jule::Int _41713_m = _141082340_min(_40038_d._field_nd,_40055_prec + 1LL);
		if (_41617_i < _41713_m) {
			_40014_dst=append(_40014_dst,_40038_d._field_d.slice(static_cast<jule::Int>(_41617_i),static_cast<jule::Int>(_41713_m)));
			_41617_i=_41713_m;
		}
		_iter_begin_4752182784:;
		if (!(_41617_i <= _40055_prec)) { goto _iter_end_4752182784; }
		{
			_40014_dst=append(_40014_dst,jule::Slice<jule::U8>({'0'}));
		}
		_iter_next_4752182784:;
		(_41617_i)++;
		goto _iter_begin_4752182784;
		_iter_end_4752182784:;
	}
	_40014_dst=append(_40014_dst,jule::Slice<jule::U8>({_40066_fmt}));
	jule::Int _42913_exp = _40038_d._field_dp - 1LL;
	if (_40038_d._field_nd == 0LL) {
		_42913_exp=0LL;
	}
	if (_42913_exp < 0LL) {
		_40713_ch='-';
		_42913_exp=static_cast<jule::Int>((-(_42913_exp)));
	} else {
		_40713_ch='+';
	}
	_40014_dst=append(_40014_dst,jule::Slice<jule::U8>({_40713_ch}));
	{
		if (!((_42913_exp < 10LL))) { goto _case_end_4752200512; }
		_case_begin_4752200512:;
		{
			_40014_dst=append(_40014_dst,jule::Slice<jule::U8>({'0',static_cast<jule::U8>(static_cast<jule::U8>(_42913_exp) + '0')}));
		}
		goto _match_end_4752195664;
		_case_end_4752200512:;
		if (!((_42913_exp < 100LL))) { goto _case_end_4752199232; }
		_case_begin_4752199232:;
		{
			_40014_dst=append(_40014_dst,jule::Slice<jule::U8>({static_cast<jule::U8>(static_cast<jule::U8>(jule::div(_42913_exp,10LL)) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(_42913_exp % 10LL) + '0')}));
		}
		goto _match_end_4752195664;
		_case_end_4752199232:;
		_case_begin_4752194128:;
		{
			_40014_dst=append(_40014_dst,jule::Slice<jule::U8>({static_cast<jule::U8>(static_cast<jule::U8>(jule::div(_42913_exp,100LL)) + '0'),static_cast<jule::U8>((static_cast<jule::U8>(jule::div(_42913_exp,10LL)) % 10LL) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(_42913_exp % 10LL) + '0')}));
		}
		goto _match_end_4752195664;
		_case_end_4752194128:;
		_match_end_4752195664:;
	}
	return _40014_dst;
}



inline jule::Slice<jule::U8> _141082340_fmt_f(jule::Slice<jule::U8> _45514_dst,jule::Bool _45527_neg,_141082340_DecimalSlice _45538_d,jule::Int _45555_prec) {
	if (_45527_neg) {
		_45514_dst=append(_45514_dst,jule::Slice<jule::U8>({'-'}));
	}
	if (_45538_d._field_dp > 0LL) {
		jule::Int _46317_m = _141082340_min(_45538_d._field_nd,_45538_d._field_dp);
		_45514_dst=append(_45514_dst,_45538_d._field_d.slice(0LL,static_cast<jule::Int>(_46317_m)));
		_iter_begin_4752221376:;
		if (!(_46317_m < _45538_d._field_dp)) { goto _iter_end_4752221376; }
		{
			_45514_dst=append(_45514_dst,jule::Slice<jule::U8>({'0'}));
		}
		_iter_next_4752221376:;
		(_46317_m)++;
		goto _iter_begin_4752221376;
		_iter_end_4752221376:;
	} else {
		_45514_dst=append(_45514_dst,jule::Slice<jule::U8>({'0'}));
	}
	if (_45555_prec > 0LL) {
		_45514_dst=append(_45514_dst,jule::Slice<jule::U8>({'.'}));
		jule::Int _47417_i = 0LL;
		_iter_begin_4752229552:;
		if (!(_47417_i < _45555_prec)) { goto _iter_end_4752229552; }
		{
			jule::U8 _47621_ch = static_cast<jule::U8>(48LLU);
			jule::Int _47717_j = _45538_d._field_dp + _47417_i;
			if ((0LL <= _47717_j) && (_47717_j < _45538_d._field_nd)) {
				_47621_ch=_45538_d._field_d[static_cast<jule::Int>(_47717_j)];
			}
			_45514_dst=append(_45514_dst,jule::Slice<jule::U8>({_47621_ch}));
		}
		_iter_next_4752229552:;
		(_47417_i)++;
		goto _iter_begin_4752229552;
		_iter_end_4752229552:;
	}
	return _45514_dst;
}



inline jule::Slice<jule::U8> _141082340_fmt_b(jule::Slice<jule::U8> _48814_dst,jule::Bool _48827_neg,jule::U64 _48838_mant,jule::Int _48853_exp,_141082340_FloatInfo& _48864_flt) {
	if (_48827_neg) {
		_48814_dst=append(_48814_dst,jule::Slice<jule::U8>({'-'}));
	}
	std::tie(_48814_dst,std::ignore) = _10ff65780_fmt_bits(_48814_dst,_48838_mant,10LL,false,true);
	_48814_dst=append(_48814_dst,jule::Slice<jule::U8>({'p'}));
	_48853_exp-=static_cast<jule::Int>(_48864_flt._field_mantbits);
	if (_48853_exp >= 0LL) {
		_48814_dst=append(_48814_dst,jule::Slice<jule::U8>({'+'}));
	}
	std::tie(_48814_dst,std::ignore) = _10ff65780_fmt_bits(_48814_dst,static_cast<jule::U64>(_48853_exp),10LL,_48853_exp < 0LL,true);
	return _48814_dst;
}



inline jule::Slice<jule::U8> _141082340_fmt_x(jule::Slice<jule::U8> _51014_dst,jule::Int _51027_prec,jule::U8 _51038_fmt,jule::Bool _51049_neg,jule::U64 _51113_mant,jule::Int _51128_exp,_141082340_FloatInfo& _51139_flt) {
	if (_51113_mant == 0LL) {
		_51128_exp=0LL;
	}
	_51113_mant<<=static_cast<jule::Uint>(60LL - _51139_flt._field_mantbits);
	_iter_begin_4752262240:;
	if (!((_51113_mant != 0LL) && ((_51113_mant & 1152921504606846976LL) == 0LL))) { goto _iter_end_4752262240; }
	{
		_51113_mant<<=1LL;
		(_51128_exp)--;
	}
	_iter_next_4752262240:;
	goto _iter_begin_4752262240;
	_iter_end_4752262240:;
	if ((_51027_prec >= 0LL) && (_51027_prec < 15LL)) {
		jule::Uint _52513_shift = static_cast<jule::Uint>(_51027_prec * 4LL);
		jule::U64 _52613_extra = (_51113_mant << _52513_shift) & 1152921504606846976LL;
		_51113_mant>>=static_cast<jule::Uint>(60LL - _52513_shift);
		if ((_52613_extra | (_51113_mant & 1LL)) > 576460752303423488LL) {
			(_51113_mant)++;
		}
		_51113_mant<<=static_cast<jule::Uint>(60LL - _52513_shift);
		if ((_51113_mant & 2305843009213693952LL) != 0LL) {
			_51113_mant>>=1LL;
			(_51128_exp)++;
		}
	}
	jule::Str _53913_hex = jule::Str("0123456789abcdef", 16);
	if (_51038_fmt == 'X') {
		_53913_hex=jule::Str("0123456789ABCDEF", 16);
	}
	if (_51049_neg) {
		_51014_dst=append(_51014_dst,jule::Slice<jule::U8>({'-'}));
	}
	_51014_dst=append(_51014_dst,jule::Slice<jule::U8>({'0',_51038_fmt,static_cast<jule::U8>('0' + static_cast<jule::U8>((_51113_mant >> 60LL) & 1LL))}));
	_51113_mant<<=4LL;
	if ((_51027_prec < 0LL) && (_51113_mant != 0LL)) {
		_51014_dst=append(_51014_dst,jule::Slice<jule::U8>({'.'}));
		_iter_begin_4752288512:;
		if (!(_51113_mant != 0LL)) { goto _iter_end_4752288512; }
		{
			_51014_dst=append(_51014_dst,jule::Slice<jule::U8>({_53913_hex[static_cast<jule::Int>((_51113_mant >> 60LL) & 15LL)]}));
			_51113_mant<<=4LL;
		}
		_iter_next_4752288512:;
		goto _iter_begin_4752288512;
		_iter_end_4752288512:;
	} else if (_51027_prec > 0LL) {
		_51014_dst=append(_51014_dst,jule::Slice<jule::U8>({'.'}));
		jule::Int _56017_i = 0LL;
		_iter_begin_4752293104:;
		if (!(_56017_i < _51027_prec)) { goto _iter_end_4752293104; }
		{
			_51014_dst=append(_51014_dst,jule::Slice<jule::U8>({_53913_hex[static_cast<jule::Int>((_51113_mant >> 60LL) & 15LL)]}));
			_51113_mant<<=4LL;
		}
		_iter_next_4752293104:;
		(_56017_i)++;
		goto _iter_begin_4752293104;
		_iter_end_4752293104:;
	}
	jule::U8 _56813_ch = static_cast<jule::U8>(80LLU);
	if (_51038_fmt == _12ff26420_lower(_51038_fmt)) {
		_56813_ch='p';
	}
	_51014_dst=append(_51014_dst,jule::Slice<jule::U8>({_56813_ch}));
	if (_51128_exp < 0LL) {
		_56813_ch='-';
		_51128_exp=static_cast<jule::Int>((-(_51128_exp)));
	} else {
		_56813_ch='+';
	}
	_51014_dst=append(_51014_dst,jule::Slice<jule::U8>({_56813_ch}));
	{
		if (!((_51128_exp < 100LL))) { goto _case_end_4752317264; }
		_case_begin_4752317264:;
		{
			_51014_dst=append(_51014_dst,jule::Slice<jule::U8>({static_cast<jule::U8>(static_cast<jule::U8>(jule::div(_51128_exp,10LL)) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(_51128_exp % 10LL) + '0')}));
		}
		goto _match_end_4752306336;
		_case_end_4752317264:;
		if (!((_51128_exp < 1000LL))) { goto _case_end_4752312512; }
		_case_begin_4752312512:;
		{
			_51014_dst=append(_51014_dst,jule::Slice<jule::U8>({static_cast<jule::U8>(static_cast<jule::U8>(jule::div(_51128_exp,100LL)) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(jule::div(_51128_exp,10LL) % 10LL) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(_51128_exp % 10LL) + '0')}));
		}
		goto _match_end_4752306336;
		_case_end_4752312512:;
		_case_begin_4752276736:;
		{
			_51014_dst=append(_51014_dst,jule::Slice<jule::U8>({static_cast<jule::U8>(static_cast<jule::U8>(jule::div(_51128_exp,1000LL)) + '0'),static_cast<jule::U8>((static_cast<jule::U8>(jule::div(_51128_exp,100LL)) % 10LL) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(jule::div(_51128_exp,10LL) % 10LL) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(_51128_exp % 10LL) + '0')}));
		}
		goto _match_end_4752306336;
		_case_end_4752276736:;
		_match_end_4752306336:;
	}
	return _51014_dst;
}



inline jule::Int _141082340_min(jule::Int _5938_a,jule::Int _59316_b) {
	if (_5938_a < _59316_b) {
		return _5938_a;
	}
	return _59316_b;
}



inline jule::Int _141082340_max(jule::Int _6008_a,jule::Int _60016_b) {
	if (_6008_a > _60016_b) {
		return _6008_a;
	}
	return _60016_b;
}



inline jule::U8 _12ff26420_lower(jule::U8 _4910_c) {
	return _4910_c | 32LL;
}



inline std::tuple<jule::U64,jule::Int> _12ff26420_parse_uint(jule::Str _5423_s,jule::Int _5435_base,jule::Int _5450_bit_size) {
	if (_5423_s == jule::Str("", 0)) {
		return std::make_tuple(0LL,2LLU);
	}
	{
		if (!(((2LL <= _5435_base) && (_5435_base <= 36LL)))) { goto _case_end_4752342288; }
		goto _match_end_4752339312;
		_case_end_4752342288:;
		if (!((_5435_base == 0LL))) { goto _case_end_4752343312; }
		_case_begin_4752343312:;
		{
			_5435_base=10LL;
			if (_5423_s[static_cast<jule::Int>(0LL)] == '0') {
				{
					if (!(((_5423_s.len() >= 3LL) && (_12ff26420_lower(_5423_s[static_cast<jule::Int>(1LL)]) == 'b')))) { goto _case_end_4752348352; }
					_case_begin_4752348352:;
					{
						_5435_base=2LL;
						_5423_s=_5423_s.slice(static_cast<jule::Int>(2LL));
					}
					goto _match_end_4752346864;
					_case_end_4752348352:;
					if (!(((_5423_s.len() >= 3LL) && (_12ff26420_lower(_5423_s[static_cast<jule::Int>(1LL)]) == 'o')))) { goto _case_end_4752350272; }
					_case_begin_4752350272:;
					{
						_5435_base=8LL;
						_5423_s=_5423_s.slice(static_cast<jule::Int>(2LL));
					}
					goto _match_end_4752346864;
					_case_end_4752350272:;
					if (!(((_5423_s.len() >= 3LL) && (_12ff26420_lower(_5423_s[static_cast<jule::Int>(1LL)]) == 'x')))) { goto _case_end_4752348704; }
					_case_begin_4752348704:;
					{
						_5435_base=16LL;
						_5423_s=_5423_s.slice(static_cast<jule::Int>(2LL));
					}
					goto _match_end_4752346864;
					_case_end_4752348704:;
					_case_begin_4752347056:;
					{
						_5435_base=8LL;
						_5423_s=_5423_s.slice(static_cast<jule::Int>(1LL));
					}
					goto _match_end_4752346864;
					_case_end_4752347056:;
					_match_end_4752346864:;
				}
			}
		}
		goto _match_end_4752339312;
		_case_end_4752343312:;
		_case_begin_4752338272:;
		{
			return std::make_tuple(0LL,3LLU);
		}
		goto _match_end_4752339312;
		_case_end_4752338272:;
		_match_end_4752339312:;
	}
	if (_5450_bit_size == 0LL) {
		_5450_bit_size=64LL;
	} else if ((_5450_bit_size < 0LL) || (_5450_bit_size > 64LL)) {
		return std::make_tuple(0LL,4LLU);
	}
	jule::U64 _9313_cutoff = 0LLU;
	{
		auto &_match_expr{ _5435_base };
		if (!((10LL) == _match_expr)) { goto _case_end_4752368144; }
		_case_begin_4752368144:;
		{
			_9313_cutoff=1.8446744073709553e+18;
		}
		goto _match_end_4752363872;
		_case_end_4752368144:;
		if (!((16LL) == _match_expr)) { goto _case_end_4752369680; }
		_case_begin_4752369680:;
		{
			_9313_cutoff=1.152921504606847e+18;
		}
		goto _match_end_4752363872;
		_case_end_4752369680:;
		_case_begin_4752366176:;
		{
			_9313_cutoff=static_cast<jule::U64>(jule::div(jule::MAX_U64,static_cast<jule::U64>(_5435_base)) + 1LL);
		}
		goto _match_end_4752363872;
		_case_end_4752366176:;
		_match_end_4752363872:;
	}
	jule::U64 _10013_max_val = 0LLU;
	{
		auto &_match_expr{ _5450_bit_size };
		if (!((32LL) == _match_expr)) { goto _case_end_4752372560; }
		_case_begin_4752372560:;
		{
			_10013_max_val=4294967295LLU;
		}
		goto _match_end_4752370368;
		_case_end_4752372560:;
		if (!((64LL) == _match_expr)) { goto _case_end_4752372672; }
		_case_begin_4752372672:;
		{
			_10013_max_val=jule::MAX_U64;
		}
		goto _match_end_4752370368;
		_case_end_4752372672:;
		_match_end_4752370368:;
	}
	jule::U64 _11213_n = 0LLU;
	{
		auto &__julec_range_expr = _5423_s;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::U8 _12ff26420_c = *__julec_range_begin;
			_iter_begin_4752366448:;
			{
				jule::U8 _11417_d = 0LLU;
				{
					if (!((('0' <= _12ff26420_c) && (_12ff26420_c <= '9')))) { goto _case_end_4752380896; }
					_case_begin_4752380896:;
					{
						_11417_d=_12ff26420_c - '0';
					}
					goto _match_end_4752379264;
					_case_end_4752380896:;
					if (!((('a' <= _12ff26420_lower(_12ff26420_c)) && (_12ff26420_lower(_12ff26420_c) <= 'z')))) { goto _case_end_4752381920; }
					_case_begin_4752381920:;
					{
						_11417_d=static_cast<jule::U8>((_12ff26420_lower(_12ff26420_c) - 'a') + 10LL);
					}
					goto _match_end_4752379264;
					_case_end_4752381920:;
					_case_begin_4752379520:;
					{
						return std::make_tuple(0LL,2LLU);
					}
					goto _match_end_4752379264;
					_case_end_4752379520:;
					_match_end_4752379264:;
				}
				if (_11417_d >= static_cast<jule::U8>(_5435_base)) {
					return std::make_tuple(0LL,2LLU);
				}
				if (_11213_n >= _9313_cutoff) {
					return std::make_tuple(_10013_max_val,1LLU);
				}
				_11213_n*=static_cast<jule::U64>(_5435_base);
				jule::U64 _13413_n1 = _11213_n + static_cast<jule::U64>(_11417_d);
				if ((_13413_n1 < _11213_n) || (_13413_n1 > _10013_max_val)) {
					return std::make_tuple(_10013_max_val,1LLU);
				}
				_11213_n=_13413_n1;
			}
			_iter_next_4752366448:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _12ff26420_c = *__julec_range_begin; goto _iter_begin_4752366448; }
			_iter_end_4752366448:;
		}
	}
	return std::make_tuple(_11213_n,0LLU);
}



inline std::tuple<jule::I64,jule::Int> _12ff26420_parse_int(jule::Str _16522_s,jule::Int _16530_base,jule::Int _16545_bit_size) {
	jule::Int _16570_err = 0LLU;
	jule::I64 _16562_i = jule::I64();
	if (_16522_s == jule::Str("", 0)) {
		_16562_i = 0LL;
		_16570_err = 2LLU;
		return std::make_tuple(_16562_i,_16570_err);
	}
	jule::Bool _17113_neg = false;
	if (_16522_s[static_cast<jule::Int>(0LL)] == '+') {
		_16522_s=_16522_s.slice(static_cast<jule::Int>(1LL));
	} else if (_16522_s[static_cast<jule::Int>(0LL)] == '-') {
		_17113_neg=true;
		_16522_s=_16522_s.slice(static_cast<jule::Int>(1LL));
	}
	jule::Uint _18013_un = 0LLU;
	std::tie(_18013_un,_16570_err) = _12ff26420_parse_uint(_16522_s,_16530_base,_16545_bit_size);
	if ((_16570_err != 0LLU) && (_16570_err != 1LLU)) {
		_16562_i = 0LL;
		_16570_err = _16570_err;
		return std::make_tuple(_16562_i,_16570_err);
	}
	if (_16545_bit_size == 0LL) {
		_16545_bit_size=64LL;
	}
	jule::U64 _1909_cutoff = static_cast<jule::U64>(1LL << static_cast<jule::Uint>(_16545_bit_size - 1LL));
	if ((!(_17113_neg)) && (_18013_un >= _1909_cutoff)) {
		_16562_i = static_cast<jule::I64>(_1909_cutoff - 1LL);
		_16570_err = 1LLU;
		return std::make_tuple(_16562_i,_16570_err);
	}
	if (_17113_neg && (_18013_un > _1909_cutoff)) {
		_16562_i = static_cast<jule::I64>((-(static_cast<jule::I64>(_1909_cutoff))));
		_16570_err = 1LLU;
		return std::make_tuple(_16562_i,_16570_err);
	}
	jule::I64 _19713_n = static_cast<jule::I64>(_18013_un);
	if (_17113_neg) {
		_19713_n=static_cast<jule::I64>((-(_19713_n)));
	}
	_16562_i = _19713_n;
	_16570_err = 0LLU;
	return std::make_tuple(_16562_i,_16570_err);
}



inline std::tuple<jule::F64,jule::Bool> _13ff09830_eisel_lemire64(jule::U64 _4123_man,jule::Int _4133_exp10,jule::Bool _4145_neg) {
	jule::Bool _4166_ok = jule::Bool();
	jule::F64 _4158_f = jule::F64();
	if (_4123_man == 0LL) {
		if (_4145_neg) {
			_4158_f=static_cast<jule::F64>(_10ffa2650_f64_from_bits(9223372036854775808LLU));
		}
		_4158_f = _4158_f;
		_4166_ok = true;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	if ((_4133_exp10 < -348LL) || (347LL < _4133_exp10)) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	jule::Int _579_clz = _118fb69d0_leading_zeros64(_4123_man);
	_4123_man<<=static_cast<jule::Uint>(_579_clz);
	
	jule::U64 _6013_ret_exp2 = static_cast<jule::U64>((((217706LL * _4133_exp10) >> 16LL) + 64LL) + 1023LL) - static_cast<jule::U64>(_579_clz);
	jule::U64 _6314_x_hi;
	jule::U64 _6324_x_lo;
	std::tie(_6314_x_hi,_6324_x_lo) = _118fb69d0_mul64(_4123_man,_13ff09830_DETAILED_POWS_OF_TEN[static_cast<jule::Int>(_4133_exp10 - -348LL)][static_cast<jule::Int>(1LL)]);
	if (((_6314_x_hi & 511LL) == 511LL) && ((_6324_x_lo + _4123_man) < _4123_man)) {
		jule::U64 _6714_y_hi;
		jule::U64 _6720_y_lo;
		std::tie(_6714_y_hi,_6720_y_lo) = _118fb69d0_mul64(_4123_man,_13ff09830_DETAILED_POWS_OF_TEN[static_cast<jule::Int>(_4133_exp10 - -348LL)][static_cast<jule::Int>(0LL)]);
		jule::U64 _6818_merged_hi = _6314_x_hi;
		jule::U64 _6829_merged_lo = _6324_x_lo + _6714_y_hi;
		std::tie(_6818_merged_hi,_6829_merged_lo) = std::make_tuple(_6314_x_hi,_6324_x_lo + _6714_y_hi);
		if (_6829_merged_lo < _6324_x_lo) {
			(_6818_merged_hi)++;
		}
		if ((((_6818_merged_hi & 511LL) == 511LL) && ((_6829_merged_lo + 1LL) == 0LL)) && ((_6720_y_lo + _4123_man) < _4123_man)) {
			_4158_f = 0LL;
			_4166_ok = false;
			return std::make_tuple(_4158_f,_4166_ok);
		}
		std::tie(_6314_x_hi,_6324_x_lo) = std::make_tuple(_6818_merged_hi,_6829_merged_lo);
	}
	jule::U64 _799_msb = _6314_x_hi >> 63LL;
	jule::U64 _8013_ret_mantissa = _6314_x_hi >> (_799_msb + 9LL);
	_6013_ret_exp2-=static_cast<jule::U64>(1LL ^ _799_msb);
	if (((_6324_x_lo == 0LL) && ((_6314_x_hi & 511LL) == 0LL)) && ((_8013_ret_mantissa & 3LL) == 1LL)) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	_8013_ret_mantissa+=_8013_ret_mantissa & 1LL;
	_8013_ret_mantissa>>=1LL;
	if ((_8013_ret_mantissa >> 53LL) > 0LL) {
		_8013_ret_mantissa>>=1LL;
		_6013_ret_exp2+=1LL;
	}
	if ((_6013_ret_exp2 - 1LL) >= 2046LL) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	jule::U64 _10313_ret_bits = (_6013_ret_exp2 << 52LL) | (_8013_ret_mantissa & 4503599627370495LL);
	if (_4145_neg) {
		_10313_ret_bits|=9223372036854775808LLU;
	}
	_4158_f = static_cast<jule::F64>(_10ffa2650_f64_from_bits(_10313_ret_bits));
	_4166_ok = true;
	return std::make_tuple(_4158_f,_4166_ok);
}



inline std::tuple<jule::F32,jule::Bool> _13ff09830_eisel_lemire32(jule::U64 _11023_man,jule::Int _11033_exp10,jule::Bool _11045_neg) {
	jule::Bool _11066_ok = jule::Bool();
	jule::F32 _11058_f = jule::F32();
	if (_11023_man == 0LL) {
		if (_11045_neg) {
			_11058_f=static_cast<jule::F32>(_10ffa2650_f32_from_bits(2147483648LLU));
		}
		_11058_f = _11058_f;
		_11066_ok = true;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	if ((_11033_exp10 < -348LL) || (347LL < _11033_exp10)) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	jule::Int _1329_clz = _118fb69d0_leading_zeros64(_11023_man);
	_11023_man<<=static_cast<jule::Uint>(_1329_clz);
	
	jule::U64 _13513_ret_exp2 = static_cast<jule::U64>((((217706LL * _11033_exp10) >> 16LL) + 64LL) + 127LL) - static_cast<jule::U64>(_1329_clz);
	jule::U64 _13814_x_hi;
	jule::U64 _13824_x_lo;
	std::tie(_13814_x_hi,_13824_x_lo) = _118fb69d0_mul64(_11023_man,_13ff09830_DETAILED_POWS_OF_TEN[static_cast<jule::Int>(_11033_exp10 - -348LL)][static_cast<jule::Int>(1LL)]);
	if (((_13814_x_hi & 274877906943LL) == 274877906943LL) && ((_13824_x_lo + _11023_man) < _11023_man)) {
		jule::U64 _14214_y_hi;
		jule::U64 _14220_y_lo;
		std::tie(_14214_y_hi,_14220_y_lo) = _118fb69d0_mul64(_11023_man,_13ff09830_DETAILED_POWS_OF_TEN[static_cast<jule::Int>(_11033_exp10 - -348LL)][static_cast<jule::Int>(0LL)]);
		jule::U64 _14318_merged_hi = _13814_x_hi;
		jule::U64 _14329_merged_lo = _13824_x_lo + _14214_y_hi;
		std::tie(_14318_merged_hi,_14329_merged_lo) = std::make_tuple(_13814_x_hi,_13824_x_lo + _14214_y_hi);
		if (_14329_merged_lo < _13824_x_lo) {
			(_14318_merged_hi)++;
		}
		if ((((_14318_merged_hi & 274877906943LL) == 274877906943LL) && ((_14329_merged_lo + 1LL) == 0LL)) && ((_14220_y_lo + _11023_man) < _11023_man)) {
			_11058_f = 0LL;
			_11066_ok = false;
			return std::make_tuple(_11058_f,_11066_ok);
		}
		std::tie(_13814_x_hi,_13824_x_lo) = std::make_tuple(_14318_merged_hi,_14329_merged_lo);
	}
	jule::U64 _1549_msb = _13814_x_hi >> 63LL;
	jule::U64 _15513_ret_mantissa = _13814_x_hi >> (_1549_msb + 38LL);
	_13513_ret_exp2-=static_cast<jule::U64>(1LL ^ _1549_msb);
	if (((_13824_x_lo == 0LL) && ((_13814_x_hi & 274877906943LL) == 0LL)) && ((_15513_ret_mantissa & 3LL) == 1LL)) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	_15513_ret_mantissa+=_15513_ret_mantissa & 1LL;
	_15513_ret_mantissa>>=1LL;
	if ((_15513_ret_mantissa >> 24LL) > 0LL) {
		_15513_ret_mantissa>>=1LL;
		_13513_ret_exp2+=1LL;
	}
	if ((_13513_ret_exp2 - 1LL) >= 254LL) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	jule::U64 _17813_ret_bits = (_13513_ret_exp2 << 23LL) | (_15513_ret_mantissa & 8388607LL);
	if (_11045_neg) {
		_17813_ret_bits|=2147483648LL;
	}
	_11058_f = static_cast<jule::F32>(_10ffa2650_f32_from_bits(static_cast<jule::U32>(_17813_ret_bits)));
	_11066_ok = true;
	return std::make_tuple(_11058_f,_11066_ok);
}



inline jule::Int _13ffab0a0_common_prefix_len_ignore_case(jule::Str _4534_s,jule::Str _4542_prefix) {
	jule::I64 _4613_n = _4542_prefix.len();
	if (_4613_n > _4534_s.len()) {
		_4613_n=static_cast<jule::I64>(_4534_s.len());
	}
	jule::Int _5013_i = 0LL;
	_iter_begin_4752531776:;
	if (!(_5013_i < _4613_n)) { goto _iter_end_4752531776; }
	{
		jule::U8 _5217_c = _4534_s[static_cast<jule::Int>(_5013_i)];
		if (('A' <= _5217_c) && (_5217_c <= 'Z')) {
			_5217_c+=32LL;
		}
		if (_5217_c != _4542_prefix[static_cast<jule::Int>(_5013_i)]) {
			return _5013_i;
		}
	}
	_iter_next_4752531776:;
	(_5013_i)++;
	goto _iter_begin_4752531776;
	_iter_end_4752531776:;
	return _4613_n;
}



inline std::tuple<jule::F64,jule::Int,jule::Bool> _13ffab0a0_special(jule::Str _6816_s) {
	jule::Bool _6842_ok = jule::Bool();
	jule::Int _6834_n = jule::Int();
	jule::F64 _6826_f = jule::F64();
	if (_6816_s == jule::Str("", 0)) {
		_6826_f = 0LL;
		_6834_n = 0LL;
		_6842_ok = false;
		return std::make_tuple(_6826_f,_6834_n,_6842_ok);
	}
	jule::Int _7213_sign = 1LL;
	jule::Int _7313_nsign = 0LL;
	{
		auto &_match_expr{ _6816_s[static_cast<jule::Int>(0LL)] };
		if (!(('+') == _match_expr || ('-') == _match_expr)) { goto _case_end_4752547216; }
		_case_begin_4752547216:;
		{
			if (_6816_s[static_cast<jule::Int>(0LL)] == '-') {
				_7213_sign=-1LL;
			}
			_7313_nsign=1LL;
			_6816_s=_6816_s.slice(static_cast<jule::Int>(1LL));
			goto _case_begin_4752548384;
		}
		goto _match_end_4752545600;
		_case_end_4752547216:;
		if (!(('i') == _match_expr || ('I') == _match_expr)) { goto _case_end_4752548384; }
		_case_begin_4752548384:;
		{
			jule::Int _8317_case_n = _13ffab0a0_common_prefix_len_ignore_case(_6816_s,jule::Str("infinity", 8));
			if ((3LL < _8317_case_n) && (_8317_case_n < 8LL)) {
				_8317_case_n=3LL;
			}
			if ((_8317_case_n == 3LL) || (_8317_case_n == 8LL)) {
				_6826_f = static_cast<jule::F64>(_1189bef30_inf(_7213_sign));
				_6834_n = _7313_nsign + _6834_n;
				_6842_ok = true;
				return std::make_tuple(_6826_f,_6834_n,_6842_ok);
			}
		}
		goto _match_end_4752545600;
		_case_end_4752548384:;
		if (!(('n') == _match_expr || ('N') == _match_expr)) { goto _case_end_4752548496; }
		_case_begin_4752548496:;
		{
			if (_13ffab0a0_common_prefix_len_ignore_case(_6816_s,jule::Str("nan", 3)) == 3LL) {
				_6826_f = static_cast<jule::F64>(_1189bef30_nan());
				_6834_n = 3LL;
				_6842_ok = true;
				return std::make_tuple(_6826_f,_6834_n,_6842_ok);
			}
		}
		goto _match_end_4752545600;
		_case_end_4752548496:;
		_match_end_4752545600:;
	}
	_6826_f = 0LL;
	_6834_n = 0LL;
	_6842_ok = false;
	return std::make_tuple(_6826_f,_6834_n,_6842_ok);
}



inline std::tuple<jule::U64,jule::Int,jule::Bool,jule::Bool,jule::Bool,jule::Int,jule::Bool> _13ffab0a0_read_float(jule::Str _10315_s) {
	jule::Bool _10457_ok = jule::Bool();
	jule::Int _10449_i = jule::Int();
	jule::Bool _10438_hex = jule::Bool();
	jule::Bool _10425_trunc = jule::Bool();
	jule::Bool _10350_neg = jule::Bool();
	jule::Int _10340_exp = jule::Int();
	jule::U64 _10325_mantissa = jule::U64();
	if (_10449_i >= _10315_s.len()) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
	}
	{
		if (!((_10315_s[static_cast<jule::Int>(_10449_i)] == '+'))) { goto _case_end_4752570576; }
		_case_begin_4752570576:;
		{
			(_10449_i)++;
		}
		goto _match_end_4752571504;
		_case_end_4752570576:;
		if (!((_10315_s[static_cast<jule::Int>(_10449_i)] == '-'))) { goto _case_end_4752570688; }
		_case_begin_4752570688:;
		{
			_10350_neg=true;
			(_10449_i)++;
		}
		goto _match_end_4752571504;
		_case_end_4752570688:;
		_match_end_4752571504:;
	}
	jule::U64 _11813_base = 10LLU;
	jule::Int _11913_max_mant_digits = 19LL;
	jule::U8 _12013_exp_char = 'e';
	if ((((_10449_i + 2LL) < _10315_s.len()) && (_10315_s[static_cast<jule::Int>(_10449_i)] == '0')) && (_12ff26420_lower(_10315_s[static_cast<jule::Int>(_10449_i + 1LL)]) == 'x')) {
		_11813_base=16LL;
		_11913_max_mant_digits=16LL;
		_10449_i+=2LL;
		_12013_exp_char='p';
		_10438_hex=true;
	}
	jule::Bool _12813_sawdot = false;
	jule::Bool _12913_sawdigits = false;
	jule::Int _13013_nd = 0LL;
	jule::Int _13113_nd_mant = 0LL;
	jule::Int _13213_dp = 0LL;
	_iter_begin_4752589840:;
	if (!(_10449_i < _10315_s.len())) { goto _iter_end_4752589840; }
	{
		jule::U8 _13413_c = _10315_s[static_cast<jule::Int>(_10449_i)];
		{
			if (!((_13413_c == '.'))) { goto _case_end_4752594304; }
			_case_begin_4752594304:;
			{
				if (_12813_sawdot) {
					goto _julec_label_loop_end;
				}
				_12813_sawdot=true;
				_13213_dp=_13013_nd;
				goto _iter_next_4752589840;
			}
			goto _match_end_4752593760;
			_case_end_4752594304:;
			if (!((('0' <= _13413_c) && (_13413_c <= '9')))) { goto _case_end_4752594416; }
			_case_begin_4752594416:;
			{
				_12913_sawdigits=true;
				if ((_13413_c == '0') && (_13013_nd == 0LL)) {
					(_13213_dp)--;
					goto _iter_next_4752589840;
				}
				(_13013_nd)++;
				if (_13113_nd_mant < _11913_max_mant_digits) {
					_10325_mantissa*=_11813_base;
					_10325_mantissa+=static_cast<jule::U64>(_13413_c - '0');
					(_13113_nd_mant)++;
				} else if (_13413_c != '0') {
					_10425_trunc=true;
				}
				goto _iter_next_4752589840;
			}
			goto _match_end_4752593760;
			_case_end_4752594416:;
			if (!((((_11813_base == 16LL) && ('a' <= _12ff26420_lower(_13413_c))) && (_12ff26420_lower(_13413_c) <= 'f')))) { goto _case_end_4752594528; }
			_case_begin_4752594528:;
			{
				_12913_sawdigits=true;
				(_13013_nd)++;
				if (_13113_nd_mant < _11913_max_mant_digits) {
					_10325_mantissa*=16LL;
					_10325_mantissa+=static_cast<jule::U64>((_12ff26420_lower(_13413_c) - 'a') + 10LL);
					(_13113_nd_mant)++;
				} else {
					_10425_trunc=true;
				}
				goto _iter_next_4752589840;
			}
			goto _match_end_4752593760;
			_case_end_4752594528:;
			_match_end_4752593760:;
		}
		goto _iter_end_4752589840;
	}
	_iter_next_4752589840:;
	(_10449_i)++;
	goto _iter_begin_4752589840;
	_iter_end_4752589840:;
	_julec_label_loop_end:;
	if ((!(_12913_sawdigits))) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
	}
	if ((!(_12813_sawdot))) {
		_13213_dp=_13013_nd;
	}
	if (_11813_base == 16LL) {
		_13213_dp*=4LL;
		_13113_nd_mant*=4LL;
	}
	if ((_10449_i < _10315_s.len()) && (_12ff26420_lower(_10315_s[static_cast<jule::Int>(_10449_i)]) == _12013_exp_char)) {
		(_10449_i)++;
		if (_10449_i >= _10315_s.len()) {
			return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
		}
		jule::Int _19517_esign = 1LL;
		if (_10315_s[static_cast<jule::Int>(_10449_i)] == '+') {
			(_10449_i)++;
		} else if (_10315_s[static_cast<jule::Int>(_10449_i)] == '-') {
			(_10449_i)++;
			_19517_esign=-1LL;
		}
		if (((_10449_i >= _10315_s.len()) || (_10315_s[static_cast<jule::Int>(_10449_i)] < '0')) || (_10315_s[static_cast<jule::Int>(_10449_i)] > '9')) {
			return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
		}
		jule::Int _20517_e = 0LL;
		_iter_begin_4752625184:;
		if (!((_10449_i < _10315_s.len()) && (('0' <= _10315_s[static_cast<jule::Int>(_10449_i)]) && (_10315_s[static_cast<jule::Int>(_10449_i)] <= '9')))) { goto _iter_end_4752625184; }
		{
			if (_20517_e < 10000LL) {
				_20517_e=((_20517_e * 10LL) + static_cast<jule::Int>(_10315_s[static_cast<jule::Int>(_10449_i)])) - '0';
			}
		}
		_iter_next_4752625184:;
		(_10449_i)++;
		goto _iter_begin_4752625184;
		_iter_end_4752625184:;
		_13213_dp+=_20517_e * _19517_esign;
	} else if (_11813_base == 16LL) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
	}
	if (_10325_mantissa != 0LL) {
		_10340_exp=_13213_dp - _13113_nd_mant;
	}
	_10457_ok=true;
	return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
}



inline std::tuple<jule::F64,jule::Bool> _13ffab0a0_atof64exact(jule::U64 _47216_mantissa,jule::Int _47235_exp,jule::Bool _47245_neg) {
	jule::Bool _47266_ok = jule::Bool();
	jule::F64 _47258_f = jule::F64();
	if ((_47216_mantissa >> _141082340_F64_INFO._field_mantbits) != 0LL) {
		return std::make_tuple(_47258_f,_47266_ok);
	}
	_47258_f=static_cast<jule::F64>(_47216_mantissa);
	if (_47245_neg) {
		_47258_f=static_cast<jule::F64>((-(_47258_f)));
	}
	{
		if (!((_47235_exp == 0LL))) { goto _case_end_4752666432; }
		_case_begin_4752666432:;
		{
			_47258_f = _47258_f;
			_47266_ok = true;
			return std::make_tuple(_47258_f,_47266_ok);
		}
		goto _match_end_4752666976;
		_case_end_4752666432:;
		if (!(((_47235_exp > 0LL) && (_47235_exp <= 37LL)))) { goto _case_end_4752666544; }
		_case_begin_4752666544:;
		{
			if (_47235_exp > 22LL) {
				_47258_f*=_13ffab0a0_F64_POW10[static_cast<jule::Int>(_47235_exp - 22LL)];
				_47235_exp=22LL;
			}
			if ((_47258_f > 1e+15) || (_47258_f < -1000000000000000LL)) {
				return std::make_tuple(_47258_f,_47266_ok);
			}
			_47258_f = _47258_f * _13ffab0a0_F64_POW10[static_cast<jule::Int>(_47235_exp)];
			_47266_ok = true;
			return std::make_tuple(_47258_f,_47266_ok);
		}
		goto _match_end_4752666976;
		_case_end_4752666544:;
		if (!(((_47235_exp < 0LL) && (_47235_exp >= -22LL)))) { goto _case_end_4752666656; }
		_case_begin_4752666656:;
		{
			_47258_f = jule::div(_47258_f,_13ffab0a0_F64_POW10[static_cast<jule::Int>((-(_47235_exp)))]);
			_47266_ok = true;
			return std::make_tuple(_47258_f,_47266_ok);
		}
		goto _match_end_4752666976;
		_case_end_4752666656:;
		_match_end_4752666976:;
	}
	return std::make_tuple(_47258_f,_47266_ok);
}



inline std::tuple<jule::F32,jule::Bool> _13ffab0a0_atof32exact(jule::U64 _50616_mantissa,jule::Int _50635_exp,jule::Bool _50649_neg) {
	jule::Bool _50670_ok = jule::Bool();
	jule::F32 _50662_f = jule::F32();
	if ((_50616_mantissa >> _141082340_F32_INFO._field_mantbits) != 0LL) {
		return std::make_tuple(_50662_f,_50670_ok);
	}
	_50662_f=static_cast<jule::F32>(_50616_mantissa);
	if (_50649_neg) {
		_50662_f=static_cast<jule::F32>((-(_50662_f)));
	}
	{
		if (!((_50635_exp == 0LL))) { goto _case_end_4752687072; }
		_case_begin_4752687072:;
		{
			_50662_f = _50662_f;
			_50670_ok = true;
			return std::make_tuple(_50662_f,_50670_ok);
		}
		goto _match_end_4752686704;
		_case_end_4752687072:;
		if (!(((_50635_exp > 0LL) && (_50635_exp <= 17LL)))) { goto _case_end_4752687184; }
		_case_begin_4752687184:;
		{
			if (_50635_exp > 10LL) {
				_50662_f*=_13ffab0a0_F32_POW10[static_cast<jule::Int>(_50635_exp - 10LL)];
				_50635_exp=10LL;
			}
			if ((_50662_f > 1e+07) || (_50662_f < -10000000LL)) {
				return std::make_tuple(_50662_f,_50670_ok);
			}
			_50662_f = _50662_f * _13ffab0a0_F32_POW10[static_cast<jule::Int>(_50635_exp)];
			_50670_ok = true;
			return std::make_tuple(_50662_f,_50670_ok);
		}
		goto _match_end_4752686704;
		_case_end_4752687184:;
		if (!(((_50635_exp < 0LL) && (_50635_exp >= -10LL)))) { goto _case_end_4752687296; }
		_case_begin_4752687296:;
		{
			_50662_f = jule::div(_50662_f,_13ffab0a0_F32_POW10[static_cast<jule::Int>((-(_50635_exp)))]);
			_50670_ok = true;
			return std::make_tuple(_50662_f,_50670_ok);
		}
		goto _match_end_4752686704;
		_case_end_4752687296:;
		_match_end_4752686704:;
	}
	return std::make_tuple(_50662_f,_50670_ok);
}



inline std::tuple<jule::F64,jule::Int> _13ffab0a0_atof_hex(jule::Str _54213_s,_141082340_FloatInfo& _54222_flt,jule::U64 _54242_mantissa,jule::Int _54261_exp,jule::Bool _54271_neg,jule::Bool _54282_trunc) {
	jule::Int _5439_max_exp = ((1LL << _54222_flt._field_expbits) + _54222_flt._field_bias) - 2LL;
	jule::Int _5449_min_exp = _54222_flt._field_bias + 1LL;
	_54261_exp+=static_cast<jule::Int>(_54222_flt._field_mantbits);
	_iter_begin_4752709104:;
	if (!((_54242_mantissa != 0LL) && ((_54242_mantissa >> (_54222_flt._field_mantbits + 2LL)) == 0LL))) { goto _iter_end_4752709104; }
	{
		_54242_mantissa<<=1LL;
		(_54261_exp)--;
	}
	_iter_next_4752709104:;
	goto _iter_begin_4752709104;
	_iter_end_4752709104:;
	if (_54282_trunc) {
		_54242_mantissa|=1LL;
	}
	_iter_begin_4752713248:;
	if (!((_54242_mantissa >> ((1LL + _54222_flt._field_mantbits) + 2LL)) != 0LL)) { goto _iter_end_4752713248; }
	{
		_54242_mantissa=(_54242_mantissa >> 1LL) | (_54242_mantissa & 1LL);
		(_54261_exp)++;
	}
	_iter_next_4752713248:;
	goto _iter_begin_4752713248;
	_iter_end_4752713248:;
	_iter_begin_4752711728:;
	if (!((_54242_mantissa > 1LL) && (_54261_exp < (_5449_min_exp - 2LL)))) { goto _iter_end_4752711728; }
	{
		_54242_mantissa=(_54242_mantissa >> 1LL) | (_54242_mantissa & 1LL);
		(_54261_exp)++;
	}
	_iter_next_4752711728:;
	goto _iter_begin_4752711728;
	_iter_end_4752711728:;
	jule::U64 _57413_round = _54242_mantissa & 3LL;
	_54242_mantissa>>=2LL;
	_57413_round|=_54242_mantissa & 1LL;
	_54261_exp+=2LL;
	if (_57413_round == 3LL) {
		(_54242_mantissa)++;
		if (_54242_mantissa == (1LL << (1LL + _54222_flt._field_mantbits))) {
			_54242_mantissa>>=1LL;
			(_54261_exp)++;
		}
	}
	if ((_54242_mantissa >> _54222_flt._field_mantbits) == 0LL) {
		_54261_exp=_54222_flt._field_bias;
	}
	jule::Int _58913_err = 0LLU;
	if (_54261_exp > _5439_max_exp) {
		_54242_mantissa=static_cast<jule::U64>(1LL << _54222_flt._field_mantbits);
		_54261_exp=_5439_max_exp + 1LL;
		_58913_err=1LLU;
	}
	jule::U64 _59613_bits = _54242_mantissa & ((1LL << _54222_flt._field_mantbits) - 1LL);
	_59613_bits|=static_cast<jule::U64>(static_cast<jule::U64>((_54261_exp - _54222_flt._field_bias) & ((1LL << _54222_flt._field_expbits) - 1LL)) << _54222_flt._field_mantbits);
	if (_54271_neg) {
		_59613_bits|=static_cast<jule::Int>((1LL << _54222_flt._field_mantbits) << _54222_flt._field_expbits);
	}
	if (_54222_flt == _141082340_F32_INFO) {
		return std::make_tuple(static_cast<jule::F64>(_10ffa2650_f32_from_bits(static_cast<jule::U32>(_59613_bits))),_58913_err);
	}
	return std::make_tuple(static_cast<jule::F64>(_10ffa2650_f64_from_bits(_59613_bits)),_58913_err);
}



inline std::tuple<jule::F32,jule::Int,jule::Int> _13ffab0a0_atof32(jule::Str _60711_s) {
	jule::Int _60745_err = 0LLU;
	jule::Int _60733_n = jule::Int();
	jule::F32 _60721_f = jule::F32();
	{
		jule::F64 _60914_val;
		jule::Int _60919__n;
		jule::Bool _60923_ok;
		std::tie(_60914_val,_60919__n,_60923_ok) = _13ffab0a0_special(_60711_s);
		if (_60923_ok) {
			_60721_f = static_cast<jule::F32>(_60914_val);
			_60733_n = _60919__n;
			_60745_err = 0LLU;
			return std::make_tuple(_60721_f,_60733_n,_60745_err);
		}
	}
	jule::U64 _61510_mantissa;
	jule::Int _61520_exp;
	jule::Bool _61525_neg;
	jule::Bool _61530_trunc;
	jule::Bool _61537_hex;
	jule::Int _61542__n;
	jule::Bool _61550_ok;
	std::tie(_61510_mantissa,_61520_exp,_61525_neg,_61530_trunc,_61537_hex,_61542__n,_61550_ok) = _13ffab0a0_read_float(_60711_s);
	_60733_n=_61542__n;
	if ((!(_61550_ok))) {
		_60721_f = 0LL;
		_60733_n = _60733_n;
		_60745_err = 2LLU;
		return std::make_tuple(_60721_f,_60733_n,_60745_err);
	}
	if (_61537_hex) {
		jule::F64 _62217_ff = 0e+00;
		std::tie(_62217_ff,_60745_err) = _13ffab0a0_atof_hex(_60711_s.slice(0LL,static_cast<jule::Int>(_60733_n)),_141082340_F32_INFO,_61510_mantissa,_61520_exp,_61525_neg,_61530_trunc);
		_60721_f = static_cast<jule::F32>(_62217_ff);
		_60733_n = _60733_n;
		_60745_err = _60745_err;
		return std::make_tuple(_60721_f,_60733_n,_60745_err);
	}
	if (true) {
		if ((!(_61530_trunc))) {
			std::tie(_60721_f,_61550_ok) = _13ffab0a0_atof32exact(_61510_mantissa,_61520_exp,_61525_neg);
			if (_61550_ok) {
				_60721_f = _60721_f;
				_60733_n = _60733_n;
				_60745_err = 0LLU;
				return std::make_tuple(_60721_f,_60733_n,_60745_err);
			}
		}
		std::tie(_60721_f,_61550_ok) = _13ff09830_eisel_lemire32(_61510_mantissa,_61520_exp,_61525_neg);
		if (_61550_ok) {
			if ((!(_61530_trunc))) {
				_60721_f = _60721_f;
				_60733_n = _60733_n;
				_60745_err = 0LLU;
				return std::make_tuple(_60721_f,_60733_n,_60745_err);
			}
			jule::F32 _64421_f_up = 0e+00;
			std::tie(_64421_f_up,_61550_ok) = _13ff09830_eisel_lemire32(_61510_mantissa + 1LL,_61520_exp,_61525_neg);
			if (_61550_ok && (_60721_f == _64421_f_up)) {
				_60721_f = _60721_f;
				_60733_n = _60733_n;
				_60745_err = 0LLU;
				return std::make_tuple(_60721_f,_60733_n,_60745_err);
			}
		}
	}
	_13ff7af20_Decimal _65313_d = _13ff7af20_Decimal();
	if ((!(_65313_d._method_set(_60711_s.slice(0LL,static_cast<jule::Int>(_60733_n)))))) {
		_60721_f = 0LL;
		_60733_n = _60733_n;
		_60745_err = 2LLU;
		return std::make_tuple(_60721_f,_60733_n,_60745_err);
	}
	jule::U64 _65710_b;
	jule::Bool _65713_ovf;
	std::tie(_65710_b,_65713_ovf) = _65313_d._method_float_bits(_141082340_F32_INFO);
	_60721_f=static_cast<jule::F32>(_10ffa2650_f32_from_bits(static_cast<jule::U32>(_65710_b)));
	if (_65713_ovf) {
		_60745_err=1LLU;
	}
	_60721_f = _60721_f;
	_60733_n = _60733_n;
	_60745_err = _60745_err;
	return std::make_tuple(_60721_f,_60733_n,_60745_err);
}



inline std::tuple<jule::F64,jule::Int,jule::Int> _13ffab0a0_atof64(jule::Str _66511_s) {
	jule::Int _66545_err = 0LLU;
	jule::Int _66537_n = jule::Int();
	jule::F64 _66525_f = jule::F64();
	{
		jule::F64 _66714_val;
		jule::Int _66719__n;
		jule::Bool _66723_ok;
		std::tie(_66714_val,_66719__n,_66723_ok) = _13ffab0a0_special(_66511_s);
		if (_66723_ok) {
			_66525_f = _66714_val;
			_66537_n = _66719__n;
			_66545_err = 0LLU;
			return std::make_tuple(_66525_f,_66537_n,_66545_err);
		}
	}
	jule::U64 _67310_mantissa;
	jule::Int _67320_exp;
	jule::Bool _67325_neg;
	jule::Bool _67330_trunc;
	jule::Bool _67337_hex;
	jule::Int _67342__n;
	jule::Bool _67350_ok;
	std::tie(_67310_mantissa,_67320_exp,_67325_neg,_67330_trunc,_67337_hex,_67342__n,_67350_ok) = _13ffab0a0_read_float(_66511_s);
	_66537_n=_67342__n;
	if ((!(_67350_ok))) {
		_66525_f = 0LL;
		_66537_n = _66537_n;
		_66545_err = 2LLU;
		return std::make_tuple(_66525_f,_66537_n,_66545_err);
	}
	if (_67337_hex) {
		std::tie(_66525_f,_66545_err) = _13ffab0a0_atof_hex(_66511_s.slice(0LL,static_cast<jule::Int>(_66537_n)),_141082340_F64_INFO,_67310_mantissa,_67320_exp,_67325_neg,_67330_trunc);
		_66525_f = _66525_f;
		_66537_n = _66537_n;
		_66545_err = _66545_err;
		return std::make_tuple(_66525_f,_66537_n,_66545_err);
	}
	if (true) {
		if ((!(_67330_trunc))) {
			std::tie(_66525_f,_67350_ok) = _13ffab0a0_atof64exact(_67310_mantissa,_67320_exp,_67325_neg);
			if (_67350_ok) {
				_66525_f = _66525_f;
				_66537_n = _66537_n;
				_66545_err = 0LLU;
				return std::make_tuple(_66525_f,_66537_n,_66545_err);
			}
		}
		std::tie(_66525_f,_67350_ok) = _13ff09830_eisel_lemire64(_67310_mantissa,_67320_exp,_67325_neg);
		if (_67350_ok) {
			if ((!(_67330_trunc))) {
				_66525_f = _66525_f;
				_66537_n = _66537_n;
				_66545_err = 0LLU;
				return std::make_tuple(_66525_f,_66537_n,_66545_err);
			}
			jule::F64 _70121_f_up = 0e+00;
			std::tie(_70121_f_up,_67350_ok) = _13ff09830_eisel_lemire64(_67310_mantissa + 1LL,_67320_exp,_67325_neg);
			if (_67350_ok && (_66525_f == _70121_f_up)) {
				_66525_f = _66525_f;
				_66537_n = _66537_n;
				_66545_err = 0LLU;
				return std::make_tuple(_66525_f,_66537_n,_66545_err);
			}
		}
	}
	_13ff7af20_Decimal _71013_d = _13ff7af20_Decimal();
	if ((!(_71013_d._method_set(_66511_s.slice(0LL,static_cast<jule::Int>(_66537_n)))))) {
		_66525_f = 0LL;
		_66537_n = _66537_n;
		_66545_err = 2LLU;
		return std::make_tuple(_66525_f,_66537_n,_66545_err);
	}
	jule::U64 _71410_b;
	jule::Bool _71413_ovf;
	std::tie(_71410_b,_71413_ovf) = _71013_d._method_float_bits(_141082340_F64_INFO);
	_66525_f=static_cast<jule::F64>(_10ffa2650_f64_from_bits(_71410_b));
	if (_71413_ovf) {
		_66545_err=1LLU;
	}
	_66525_f = _66525_f;
	_66537_n = _66537_n;
	_66545_err = _66545_err;
	return std::make_tuple(_66525_f,_66537_n,_66545_err);
}



inline std::tuple<jule::F64,jule::Int,jule::Int> _13ffab0a0_parse_float_prefix(jule::Str _72223_s,jule::Int _72231_bit_size) {
	if (_72231_bit_size == 32LL) {
		jule::F32 _72414_f;
		jule::Int _72417_n;
		jule::Int _72420_err;
		std::tie(_72414_f,_72417_n,_72420_err) = _13ffab0a0_atof32(_72223_s);
		return std::make_tuple(static_cast<jule::F64>(_72414_f),_72417_n,_72420_err);
	}
	jule::F64 _72810_f;
	jule::Int _72813_n;
	jule::Int _72816_err;
	std::tie(_72810_f,_72813_n,_72816_err) = _13ffab0a0_atof64(_72223_s);
	return std::make_tuple(_72810_f,_72813_n,_72816_err);
}



inline std::tuple<jule::F64,jule::Int> _13ffab0a0_parse_float(jule::Str _75620_s,jule::Int _75628_bit_size) {
	jule::F64 _75710_f;
	jule::Int _75713_n;
	jule::Int _75716_err;
	std::tie(_75710_f,_75713_n,_75716_err) = _13ffab0a0_parse_float_prefix(_75620_s,_75628_bit_size);
	if ((_75713_n != _75620_s.len()) && ((_75716_err == 0LLU) || (_75716_err != 2LLU))) {
		return std::make_tuple(0LL,2LLU);
	}
	return std::make_tuple(_75710_f,_75716_err);
}



inline void _13fff9140_ryu_ftoa_fixed32(_141082340_DecimalSlice& _4926_d,jule::U32 _4947_mant,jule::Int _4958_exp,jule::Int _4968_prec) {
	if (_4968_prec < 0LL) {
		jule::panic(jule::Str("ryu_ftoa_fixed32 called with negative prec", 42));
	}
	if (_4968_prec > 9LL) {
		jule::panic(jule::Str("ryu_ftoa_fixed32 called with prec > 9", 37));
	}
	if (_4947_mant == 0LL) {
		std::tie(_4926_d._field_nd,_4926_d._field_dp) = std::make_tuple(0LL,0LL);
		return;
	}
	jule::Int _6213_e2 = _4958_exp;
	jule::Int _639_b = _118fb69d0_len32(_4947_mant);
	if (_639_b < 25LL) {
		_4947_mant<<=static_cast<jule::Uint>(25LL - _639_b);
		_6213_e2+=static_cast<jule::Int>(static_cast<jule::Int>(_639_b) - 25LL);
	}
	jule::Int _749_q = ((-(_13fff9140_mul_by_log2_log10(_6213_e2 + 24LL))) + _4968_prec) - 1LL;
	jule::Bool _7913_exact = (_749_q <= 27LL) && (_749_q >= 0LL);
	jule::U32 _8114_di;
	jule::Int _8118_dexp2;
	jule::Bool _8129_d0;
	std::tie(_8114_di,_8118_dexp2,_8129_d0) = _13fff9140_mult64bit_pow10(_4947_mant,_6213_e2,_749_q);
	if (_8118_dexp2 >= 0LL) {
		jule::panic(jule::Str("not enough significant bits after mult64bit_pow10", 49));
	}
	if (((_749_q < 0LL) && (_749_q >= -10LL)) && _13fff9140_divisible_by_pow5(static_cast<jule::U64>(_4947_mant),static_cast<jule::Int>((-(_749_q))))) {
		_7913_exact=true;
		_8129_d0=true;
	}
	jule::Uint _949_extra = static_cast<jule::Uint>((-(_8118_dexp2)));
	jule::U32 _959_extra_mask = static_cast<jule::U32>((1LL << _949_extra) - 1LL);
	jule::U32 _9713_dfrac = 0LLU;
	std::tie(_8114_di,_9713_dfrac) = std::make_tuple(_8114_di >> _949_extra,_8114_di & _959_extra_mask);
	jule::Bool _9913_round_up = false;
	if (_7913_exact) {
		_9913_round_up=((_9713_dfrac > (1LL << (_949_extra - 1LL))) || ((_9713_dfrac == (1LL << (_949_extra - 1LL))) && (!(_8129_d0)))) || (((_9713_dfrac == (1LL << (_949_extra - 1LL))) && _8129_d0) && ((_8114_di & 1LL) == 1LL));
	} else {
		_9913_round_up=(_9713_dfrac >> (_949_extra - 1LL)) == 1LL;
	}
	if (_9713_dfrac != 0LL) {
		_8129_d0=false;
	}
	_13fff9140_format_decimal(_4926_d,static_cast<jule::U64>(_8114_di),(!(_8129_d0)),_9913_round_up,_4968_prec);
	_4926_d._field_dp-=_749_q;
}



inline void _13fff9140_ryu_ftoa_fixed64(_141082340_DecimalSlice& _12326_d,jule::U64 _12347_mant,jule::Int _12358_exp,jule::Int _12368_prec) {
	if (_12368_prec > 18LL) {
		jule::panic(jule::Str("ryu_ftoa_fixed64 called with prec > 18", 38));
	}
	if (_12347_mant == 0LL) {
		std::tie(_12326_d._field_nd,_12326_d._field_dp) = std::make_tuple(0LL,0LL);
		return;
	}
	jule::Int _13313_e2 = _12358_exp;
	jule::Int _1349_b = _118fb69d0_len64(_12347_mant);
	if (_1349_b < 55LL) {
		_12347_mant=_12347_mant << static_cast<jule::Uint>(55LL - _1349_b);
		_13313_e2+=static_cast<jule::Int>(static_cast<jule::Int>(_1349_b) - 55LL);
	}
	jule::Int _1489_q = ((-(_13fff9140_mul_by_log2_log10(_13313_e2 + 54LL))) + _12368_prec) - 1LL;
	jule::Bool _15313_exact = (_1489_q <= 55LL) && (_1489_q >= 0LL);
	jule::U64 _15514_di;
	jule::Int _15518_dexp2;
	jule::Bool _15529_d0;
	std::tie(_15514_di,_15518_dexp2,_15529_d0) = _13fff9140_mult128bit_pow10(_12347_mant,_13313_e2,_1489_q);
	if (_15518_dexp2 >= 0LL) {
		jule::panic(jule::Str("not enough significant bits after mult128bit_pow10", 50));
	}
	if (((_1489_q < 0LL) && (_1489_q >= -22LL)) && _13fff9140_divisible_by_pow5(_12347_mant,static_cast<jule::Int>((-(_1489_q))))) {
		_15313_exact=true;
		_15529_d0=true;
	}
	jule::Uint _1689_extra = static_cast<jule::Uint>((-(_15518_dexp2)));
	jule::U64 _1699_extra_mask = static_cast<jule::U64>((1LL << _1689_extra) - 1LL);
	jule::U64 _17113_dfrac = 0LLU;
	std::tie(_15514_di,_17113_dfrac) = std::make_tuple(_15514_di >> _1689_extra,_15514_di & _1699_extra_mask);
	jule::Bool _17313_round_up = false;
	if (_15313_exact) {
		_17313_round_up=((_17113_dfrac > (1LL << (_1689_extra - 1LL))) || ((_17113_dfrac == (1LL << (_1689_extra - 1LL))) && (!(_15529_d0)))) || (((_17113_dfrac == (1LL << (_1689_extra - 1LL))) && _15529_d0) && ((_15514_di & 1LL) == 1LL));
	} else {
		_17313_round_up=(_17113_dfrac >> (_1689_extra - 1LL)) == 1LL;
	}
	if (_17113_dfrac != 0LL) {
		_15529_d0=false;
	}
	_13fff9140_format_decimal(_12326_d,_15514_di,(!(_15529_d0)),_17313_round_up,_12368_prec);
	_12326_d._field_dp-=_1489_q;
}



inline void _13fff9140_format_decimal(_141082340_DecimalSlice& _20424_d,jule::U64 _20445_m,jule::Bool _20457_trunc,jule::Bool _20474_round_up,jule::Int _20490_prec) {
	jule::U64 _2059_max = _13fff9140_U64_POW10[static_cast<jule::Int>(_20490_prec)];
	jule::Int _20613_trimmed = 0LL;
	_iter_begin_4752943392:;
	if (!(_20445_m >= _2059_max)) { goto _iter_end_4752943392; }
	{
		jule::U64 _20814_a = jule::div(_20445_m,10LL);
		jule::U64 _20817_b = _20445_m % 10LL;
		std::tie(_20814_a,_20817_b) = std::make_tuple(jule::div(_20445_m,10LL),_20445_m % 10LL);
		_20445_m=_20814_a;
		(_20613_trimmed)++;
		if (_20817_b > 5LL) {
			_20474_round_up=true;
		} else if (_20817_b < 5LL) {
			_20474_round_up=false;
		} else {
			_20474_round_up=_20457_trunc || ((_20445_m & 1LL) == 1LL);
		}
		if (_20817_b != 0LL) {
			_20457_trunc=true;
		}
	}
	_iter_next_4752943392:;
	goto _iter_begin_4752943392;
	_iter_end_4752943392:;
	if (_20474_round_up) {
		(_20445_m)++;
	}
	if (_20445_m >= _2059_max) {
		_20445_m/=10LL;
		(_20613_trimmed)++;
	}
	jule::Uint _23313_n = static_cast<jule::Uint>(_20490_prec);
	_20424_d._field_nd=static_cast<jule::Int>(_20490_prec);
	jule::U64 _23513_v = _20445_m;
	_iter_begin_4752957168:;
	if (!(_23513_v >= 100LL)) { goto _iter_end_4752957168; }
	{
		jule::U64 _23717_v1 = 0LLU;
		jule::U64 _23817_v2 = 0LLU;
		if ((_23513_v >> 32LL) == 0LL) {
			std::tie(_23717_v1,_23817_v2) = std::make_tuple(static_cast<jule::U64>(jule::div(static_cast<jule::U32>(_23513_v),100LL)),static_cast<jule::U64>(static_cast<jule::U32>(_23513_v) % 100LL));
		} else {
			std::tie(_23717_v1,_23817_v2) = std::make_tuple(jule::div(_23513_v,100LL),_23513_v % 100LL);
		}
		_23313_n-=2LL;
		_20424_d._field_d[static_cast<jule::Int>(_23313_n + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _23817_v2) + 1LL)]);
		_20424_d._field_d[static_cast<jule::Int>(_23313_n + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _23817_v2) + 0LL)]);
		_23513_v=_23717_v1;
	}
	_iter_next_4752957168:;
	goto _iter_begin_4752957168;
	_iter_end_4752957168:;
	if (_23513_v > 0LL) {
		(_23313_n)--;
		_20424_d._field_d[static_cast<jule::Int>(_23313_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _23513_v) + 1LL)]);
	}
	if (_23513_v >= 10LL) {
		(_23313_n)--;
		_20424_d._field_d[static_cast<jule::Int>(_23313_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(2LL * _23513_v)]);
	}
	_iter_begin_4752983344:;
	if (!(_20424_d._field_d[static_cast<jule::Int>(_20424_d._field_nd - 1LL)] == '0')) { goto _iter_end_4752983344; }
	{
		(_20424_d._field_nd)--;
		(_20613_trimmed)++;
	}
	_iter_next_4752983344:;
	goto _iter_begin_4752983344;
	_iter_end_4752983344:;
	_20424_d._field_dp=_20424_d._field_nd + _20613_trimmed;
}



inline void _13fff9140_ryu_ftoa_shortest(_141082340_DecimalSlice& _26527_d,jule::U64 _26548_mant,jule::Int _26559_exp,_141082340_FloatInfo& _26570_flt) {
	if (_26548_mant == 0LL) {
		std::tie(_26527_d._field_nd,_26527_d._field_dp) = std::make_tuple(0LL,0LL);
		return;
	}
	if ((_26559_exp <= 0LL) && (_118fb69d0_trailing_zeros64(_26548_mant) >= (-(_26559_exp)))) {
		_26548_mant>>=static_cast<jule::Uint>((-(_26559_exp)));
		_13fff9140_ryu_digits(_26527_d,_26548_mant,_26548_mant,_26548_mant,true,false);
		return;
	}
	jule::U64 _27710_ml;
	jule::U64 _27714_mc;
	jule::U64 _27718_mu;
	jule::Int _27726_e2;
	std::tie(_27710_ml,_27714_mc,_27718_mu,_27726_e2) = _13fff9140_compute_bounds(_26548_mant,_26559_exp,_26570_flt);
	if (_27726_e2 == 0LL) {
		_13fff9140_ryu_digits(_26527_d,_27710_ml,_27714_mc,_27718_mu,true,false);
		return;
	}
	jule::Int _2839_q = _13fff9140_mul_by_log2_log10(static_cast<jule::Int>((-(_27726_e2)))) + 1LL;
	jule::U64 _28713_dl = 0LLU;
	jule::U64 _28813_dc = 0LLU;
	jule::U64 _28913_du = 0LLU;
	jule::Bool _29013_dl0 = false;
	jule::Bool _29113_dc0 = false;
	jule::Bool _29213_du0 = false;
	if (_26570_flt == _141082340_F32_INFO) {
		jule::U32 _29417_dl32 = 0LLU;
		jule::U32 _29517_dc32 = 0LLU;
		jule::U32 _29617_du32 = 0LLU;
		std::tie(_29417_dl32,std::ignore,_29013_dl0) = _13fff9140_mult64bit_pow10(static_cast<jule::U32>(_27710_ml),_27726_e2,_2839_q);
		std::tie(_29517_dc32,std::ignore,_29113_dc0) = _13fff9140_mult64bit_pow10(static_cast<jule::U32>(_27714_mc),_27726_e2,_2839_q);
		std::tie(_29617_du32,_27726_e2,_29213_du0) = _13fff9140_mult64bit_pow10(static_cast<jule::U32>(_27718_mu),_27726_e2,_2839_q);
		std::tie(_28713_dl,_28813_dc,_28913_du) = std::make_tuple(static_cast<jule::U64>(_29417_dl32),static_cast<jule::U64>(_29517_dc32),static_cast<jule::U64>(_29617_du32));
	} else {
		std::tie(_28713_dl,std::ignore,_29013_dl0) = _13fff9140_mult128bit_pow10(_27710_ml,_27726_e2,_2839_q);
		std::tie(_28813_dc,std::ignore,_29113_dc0) = _13fff9140_mult128bit_pow10(_27714_mc,_27726_e2,_2839_q);
		std::tie(_28913_du,_27726_e2,_29213_du0) = _13fff9140_mult128bit_pow10(_27718_mu,_27726_e2,_2839_q);
	}
	if (_27726_e2 >= 0LL) {
		jule::panic(jule::Str("not enough significant bits after mult128bit_pow10", 50));
	}
	if (_2839_q > 55LL) {
		std::tie(_29013_dl0,_29113_dc0,_29213_du0) = std::make_tuple(false,false,false);
	}
	if ((_2839_q < 0LL) && (_2839_q >= -24LL)) {
		if (_13fff9140_divisible_by_pow5(_27710_ml,static_cast<jule::Int>((-(_2839_q))))) {
			_29013_dl0=true;
		}
		if (_13fff9140_divisible_by_pow5(_27714_mc,static_cast<jule::Int>((-(_2839_q))))) {
			_29113_dc0=true;
		}
		if (_13fff9140_divisible_by_pow5(_27718_mu,static_cast<jule::Int>((-(_2839_q))))) {
			_29213_du0=true;
		}
	}
	jule::Uint _3299_extra = static_cast<jule::Uint>((-(_27726_e2)));
	jule::U64 _3309_extra_mask = static_cast<jule::U64>((1LL << _3299_extra) - 1LL);
	jule::U64 _33213_fracl = 0LLU;
	std::tie(_28713_dl,_33213_fracl) = std::make_tuple(_28713_dl >> _3299_extra,_28713_dl & _3309_extra_mask);
	jule::U64 _33413_fracc = 0LLU;
	std::tie(_28813_dc,_33413_fracc) = std::make_tuple(_28813_dc >> _3299_extra,_28813_dc & _3309_extra_mask);
	jule::U64 _33613_fracu = 0LLU;
	std::tie(_28913_du,_33613_fracu) = std::make_tuple(_28913_du >> _3299_extra,_28913_du & _3309_extra_mask);
	jule::Bool _34213_uok = (!(_29213_du0)) || (_33613_fracu > 0LL);
	if (_29213_du0 && (_33613_fracu == 0LL)) {
		_34213_uok=(_26548_mant & 1LL) == 0LL;
	}
	if ((!(_34213_uok))) {
		(_28913_du)--;
	}
	jule::Bool _35113_cup = false;
	if (_29113_dc0) {
		_35113_cup=(_33413_fracc > (1LL << (_3299_extra - 1LL))) || ((_33413_fracc == (1LL << (_3299_extra - 1LL))) && ((_28813_dc & 1LL) == 1LL));
	} else {
		_35113_cup=(_33413_fracc >> (_3299_extra - 1LL)) == 1LL;
	}
	jule::Bool _3679_lok = (_29013_dl0 && (_33213_fracl == 0LL)) && ((_26548_mant & 1LL) == 0LL);
	if ((!(_3679_lok))) {
		(_28713_dl)++;
	}
	jule::Bool _3729_c0 = _29113_dc0 && (_33413_fracc == 0LL);
	_13fff9140_ryu_digits(_26527_d,_28713_dl,_28813_dc,_28913_du,_3729_c0,_35113_cup);
	_26527_d._field_dp-=_2839_q;
}



inline jule::Int _13fff9140_mul_by_log2_log10(jule::Int _38322_x) {
	return (_38322_x * 78913LL) >> 18LL;
}



inline jule::Int _13fff9140_mul_by_log10_log2(jule::Int _39322_x) {
	return (_39322_x * 108853LL) >> 15LL;
}



inline std::tuple<jule::U64,jule::U64,jule::U64,jule::Int> _13fff9140_compute_bounds(jule::U64 _40119_mant,jule::Int _40130_exp,_141082340_FloatInfo& _40218_flt) {
	jule::Int _40274_e2 = jule::Int();
	jule::U64 _40262_upper = jule::U64();
	jule::U64 _40248_central = jule::U64();
	jule::U64 _40236_lower = jule::U64();
	if ((_40119_mant != (1LL << _40218_flt._field_mantbits)) || (_40130_exp == ((_40218_flt._field_bias + 1LL) - static_cast<jule::Int>(_40218_flt._field_mantbits)))) {
		std::tie(_40236_lower,_40248_central,_40262_upper) = std::make_tuple(static_cast<jule::U64>((2LL * _40119_mant) - 1LL),static_cast<jule::U64>(2LL * _40119_mant),static_cast<jule::U64>((2LL * _40119_mant) + 1LL));
		_40274_e2=_40130_exp - 1LL;
	} else {
		std::tie(_40236_lower,_40248_central,_40262_upper) = std::make_tuple(static_cast<jule::U64>((4LL * _40119_mant) - 1LL),static_cast<jule::U64>(4LL * _40119_mant),static_cast<jule::U64>((4LL * _40119_mant) + 2LL));
		_40274_e2=_40130_exp - 2LL;
	}
	return std::make_tuple(_40236_lower,_40248_central,_40262_upper,_40274_e2);
}



inline void _13fff9140_ryu_digits(_141082340_DecimalSlice& _41520_d,jule::U64 _41537_lower,jule::U64 _41549_central,jule::U64 _41563_upper,jule::Bool _41579_c0,jule::Bool _41593_cup) {
	jule::U32 _41614_lhi;
	jule::U32 _41619_llo;
	std::tie(_41614_lhi,_41619_llo) = _13fff9140_divmod1e9(_41537_lower);
	jule::U32 _41710_chi;
	jule::U32 _41715_clo;
	std::tie(_41710_chi,_41715_clo) = _13fff9140_divmod1e9(_41549_central);
	jule::U32 _41810_uhi;
	jule::U32 _41815_ulo;
	std::tie(_41810_uhi,_41815_ulo) = _13fff9140_divmod1e9(_41563_upper);
	if (_41810_uhi == 0LL) {
		_13fff9140_ryu_digits32(_41520_d,_41619_llo,_41715_clo,_41815_ulo,_41579_c0,_41593_cup,8LL);
	} else if (_41614_lhi < _41810_uhi) {
		if (_41619_llo != 0LL) {
			(_41614_lhi)++;
		}
		_41579_c0=_41579_c0 && (_41715_clo == 0LL);
		_41593_cup=(_41715_clo > 5e+08) || ((_41715_clo == 5e+08) && _41593_cup);
		_13fff9140_ryu_digits32(_41520_d,_41614_lhi,_41710_chi,_41810_uhi,_41579_c0,_41593_cup,8LL);
		_41520_d._field_dp+=9LL;
	} else {
		_41520_d._field_nd=0LL;
		jule::Uint _43417_n = static_cast<jule::Uint>(9LLU);
		jule::U32 _43517_v = _41710_chi;
		_iter_begin_4753107280:;
		if (!(_43517_v > 0LL)) { goto _iter_end_4753107280; }
		{
			jule::U32 _43718_v1 = jule::div(_43517_v,10LL);
			jule::U32 _43722_v2 = _43517_v % 10LL;
			std::tie(_43718_v1,_43722_v2) = std::make_tuple(jule::div(_43517_v,10LL),_43517_v % 10LL);
			_43517_v=_43718_v1;
			(_43417_n)--;
			_41520_d._field_d[static_cast<jule::Int>(_43417_n)]=static_cast<jule::U8>(_43722_v2 + '0');
		}
		_iter_next_4753107280:;
		goto _iter_begin_4753107280;
		_iter_end_4753107280:;
		_41520_d._field_d=_41520_d._field_d.slice(static_cast<jule::Int>(_43417_n));
		_41520_d._field_nd=static_cast<jule::Int>(9LL - _43417_n);
		_13fff9140_ryu_digits32(_41520_d,_41619_llo,_41715_clo,_41815_ulo,_41579_c0,_41593_cup,_41520_d._field_nd + 8LL);
	}
	_iter_begin_4753115328:;
	if (!((_41520_d._field_nd > 0LL) && (_41520_d._field_d[static_cast<jule::Int>(_41520_d._field_nd - 1LL)] == '0'))) { goto _iter_end_4753115328; }
	{
		(_41520_d._field_nd)--;
	}
	_iter_next_4753115328:;
	goto _iter_begin_4753115328;
	_iter_end_4753115328:;
	_iter_begin_4753118688:;
	if (!((_41520_d._field_nd > 0LL) && (_41520_d._field_d[static_cast<jule::Int>(0LL)] == '0'))) { goto _iter_end_4753118688; }
	{
		(_41520_d._field_nd)--;
		(_41520_d._field_dp)--;
		_41520_d._field_d=_41520_d._field_d.slice(static_cast<jule::Int>(1LL));
	}
	_iter_next_4753118688:;
	goto _iter_begin_4753118688;
	_iter_end_4753118688:;
}



inline void _13fff9140_ryu_digits32(_141082340_DecimalSlice& _46022_d,jule::U32 _46043_lower,jule::U32 _46059_central,jule::U32 _46121_upper,jule::Bool _46137_c0,jule::Bool _46151_cup,jule::Int _46166_endindex) {
	if (_46121_upper == 0LL) {
		_46022_d._field_dp=_46166_endindex + 1LL;
		return;
	}
	jule::Int _46613_trimmed = 0LL;
	jule::Int _46913_c_next_digit = 0LL;
	_iter_begin_4753132880:;
	if (!(_46121_upper > 0LL)) { goto _iter_end_4753132880; }
	{
		jule::U32 _47613_l = jule::div(_46043_lower + 9LL,10LL);
		jule::U32 _47718_c = jule::div(_46059_central,10LL);
		jule::U32 _47725_cdigit = _46059_central % 10LL;
		std::tie(_47718_c,_47725_cdigit) = std::make_tuple(jule::div(_46059_central,10LL),_46059_central % 10LL);
		jule::U32 _47813_u = jule::div(_46121_upper,10LL);
		if (_47613_l > _47813_u) {
			goto _iter_end_4753132880;
		}
		if ((_47613_l == (_47718_c + 1LL)) && (_47718_c < _47813_u)) {
			(_47718_c)++;
			_47725_cdigit=0LL;
			_46151_cup=false;
		}
		(_46613_trimmed)++;
		_46137_c0=_46137_c0 && (_46913_c_next_digit == 0LL);
		_46913_c_next_digit=static_cast<jule::Int>(_47725_cdigit);
		std::tie(_46043_lower,_46059_central,_46121_upper) = std::make_tuple(_47613_l,_47718_c,_47813_u);
	}
	_iter_next_4753132880:;
	goto _iter_begin_4753132880;
	_iter_end_4753132880:;
	if (_46613_trimmed > 0LL) {
		_46151_cup=((_46913_c_next_digit > 5LL) || ((_46913_c_next_digit == 5LL) && (!(_46137_c0)))) || (((_46913_c_next_digit == 5LL) && _46137_c0) && ((_46059_central & 1LL) == 1LL));
	}
	if ((_46059_central < _46121_upper) && _46151_cup) {
		(_46059_central)++;
	}
	_46166_endindex-=_46613_trimmed;
	jule::U32 _51713_v = _46059_central;
	jule::Int _51813_n = _46166_endindex;
	_iter_begin_4753134368:;
	if (!(_51813_n > _46022_d._field_nd)) { goto _iter_end_4753134368; }
	{
		jule::U32 _52014_v1 = jule::div(_51713_v,100LL);
		jule::U32 _52018_v2 = _51713_v % 100LL;
		std::tie(_52014_v1,_52018_v2) = std::make_tuple(jule::div(_51713_v,100LL),_51713_v % 100LL);
		_46022_d._field_d[static_cast<jule::Int>(_51813_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _52018_v2) + 1LL)]);
		_46022_d._field_d[static_cast<jule::Int>(_51813_n - 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _52018_v2) + 0LL)]);
		_51813_n-=2LL;
		_51713_v=_52014_v1;
	}
	_iter_next_4753134368:;
	goto _iter_begin_4753134368;
	_iter_end_4753134368:;
	if (_51813_n == _46022_d._field_nd) {
		_46022_d._field_d[static_cast<jule::Int>(_51813_n)]=static_cast<jule::U8>(_51713_v + '0');
	}
	_46022_d._field_nd=_46166_endindex + 1LL;
	_46022_d._field_dp=_46022_d._field_nd + _46613_trimmed;
}



inline std::tuple<jule::U32,jule::Int,jule::Bool> _13fff9140_mult64bit_pow10(jule::U32 _54220_m,jule::Int _54232_e2,jule::Int _54241_q) {
	jule::Bool _54273_exact = jule::Bool();
	jule::Int _54262_resE = jule::Int();
	jule::U32 _54251_resM = jule::U32();
	if (_54241_q == 0LL) {
		_54251_resM = _54220_m << 6LL;
		_54262_resE = _54232_e2 - 6LL;
		_54273_exact = true;
		return std::make_tuple(_54251_resM,_54262_resE,_54273_exact);
	}
	if ((_54241_q < -348LL) || (347LL < _54241_q)) {
		jule::panic(jule::Str("mult64bit_pow10: power of 10 is out of range", 44));
	}
	jule::U64 _55113_pow = _13ff09830_DETAILED_POWS_OF_TEN[static_cast<jule::Int>(_54241_q - -348LL)][static_cast<jule::Int>(1LL)];
	if (_54241_q < 0LL) {
		_55113_pow+=1LL;
	}
	jule::U64 _55610_hi;
	jule::U64 _55614_lo;
	std::tie(_55610_hi,_55614_lo) = _118fb69d0_mul64(static_cast<jule::U64>(_54220_m),_55113_pow);
	_54232_e2+=static_cast<jule::Int>((_13fff9140_mul_by_log10_log2(_54241_q) - 63LL) + 57LL);
	_54251_resM = static_cast<jule::U32>((_55610_hi << 7LL) | (_55614_lo >> 57LL));
	_54262_resE = _54232_e2;
	_54273_exact = (_55614_lo << 7LL) == 0LL;
	return std::make_tuple(_54251_resM,_54262_resE,_54273_exact);
}



inline std::tuple<jule::U64,jule::Int,jule::Bool> _13fff9140_mult128bit_pow10(jule::U64 _57021_m,jule::Int _57033_e2,jule::Int _57042_q) {
	jule::Bool _57074_exact = jule::Bool();
	jule::Int _57063_resE = jule::Int();
	jule::U64 _57052_resM = jule::U64();
	if (_57042_q == 0LL) {
		_57052_resM = _57021_m << 8LL;
		_57063_resE = _57033_e2 - 8LL;
		_57074_exact = true;
		return std::make_tuple(_57052_resM,_57063_resE,_57074_exact);
	}
	if ((_57042_q < -348LL) || (347LL < _57042_q)) {
		jule::panic(jule::Str("mult128bit_pow10: power of 10 is out of range", 45));
	}
	jule::Array<jule::U64,2> _57913_pow = _13ff09830_DETAILED_POWS_OF_TEN[static_cast<jule::Int>(_57042_q - -348LL)];
	if (_57042_q < 0LL) {
		_57913_pow[static_cast<jule::Int>(0LL)]+=1LL;
	}
	_57033_e2+=static_cast<jule::Int>((_13fff9140_mul_by_log10_log2(_57042_q) - 127LL) + 119LL);
	jule::U64 _58710_l1;
	jule::U64 _58714_l0;
	std::tie(_58710_l1,_58714_l0) = _118fb69d0_mul64(_57021_m,_57913_pow[static_cast<jule::Int>(0LL)]);
	jule::U64 _58814_h1;
	jule::U64 _58818_h0;
	std::tie(_58814_h1,_58818_h0) = _118fb69d0_mul64(_57021_m,_57913_pow[static_cast<jule::Int>(1LL)]);
	jule::U64 _58910_mid;
	jule::U64 _58915_carry;
	std::tie(_58910_mid,_58915_carry) = _118fb69d0_add64(_58710_l1,_58818_h0,0LLU);
	_58814_h1+=_58915_carry;
	_57052_resM = (_58814_h1 << 9LL) | (_58910_mid >> 55LL);
	_57063_resE = _57033_e2;
	_57074_exact = ((_58910_mid << 9LL) == 0LL) && (_58714_l0 == 0LL);
	return std::make_tuple(_57052_resM,_57063_resE,_57074_exact);
}



inline jule::Bool _13fff9140_divisible_by_pow5(jule::U64 _59426_m,jule::Int _59434_k) {
	if (_59426_m == 0LL) {
		return true;
	}
	jule::Int _59813_i = 0LL;
	_iter_begin_4753236672:;
	if (!(_59813_i < _59434_k)) { goto _iter_end_4753236672; }
	{
		if ((_59426_m % 5LL) != 0LL) {
			return false;
		}
		_59426_m/=5LL;
	}
	_iter_next_4753236672:;
	(_59813_i)++;
	goto _iter_begin_4753236672;
	_iter_end_4753236672:;
	return true;
}



inline std::tuple<jule::U32,jule::U32> _13fff9140_divmod1e9(jule::U64 _61014_x) {
	if (true) {
		return std::make_tuple(static_cast<jule::U32>(jule::div(_61014_x,1e+09)),static_cast<jule::U32>(_61014_x % 1000000000LL));
	}
	jule::U64 _61510_hi;
	std::tie(_61510_hi,std::ignore) = _118fb69d0_mul64(_61014_x >> 1LL,9903520314283042200LLU);
	jule::U64 _6169_q = _61510_hi >> 28LL;
	return std::make_tuple(static_cast<jule::U32>(_6169_q),static_cast<jule::U32>(_61014_x - (_6169_q * 1e+09)));
}



inline void _13ff7af20_trim(_13ff7af20_Decimal& _27514_a) {
	_iter_begin_4753251264:;
	if (!((_27514_a._field_nd > 0LL) && (_27514_a._field_d[static_cast<jule::Int>(_27514_a._field_nd - 1LL)] == '0'))) { goto _iter_end_4753251264; }
	{
		(_27514_a._field_nd)--;
	}
	_iter_next_4753251264:;
	goto _iter_begin_4753251264;
	_iter_end_4753251264:;
	if (_27514_a._field_nd == 0LL) {
		_27514_a._field_dp=0LL;
	}
}



inline void _13ff7af20_right_shift(_13ff7af20_Decimal& _28521_a,jule::Uint _28533_k) {
	jule::Int _28613_r = 0LL;
	jule::Int _28713_w = 0LL;
	jule::Uint _29013_n = 0LLU;
	_iter_begin_4753259216:;
	if (!((_29013_n >> _28533_k) == 0LL)) { goto _iter_end_4753259216; }
	{
		if (_28613_r >= _28521_a._field_nd) {
			if (_29013_n == 0LL) {
				_28521_a._field_nd=0LL;
				return;
			}
			_iter_begin_4753267808:;
			if (!((_29013_n >> _28533_k) == 0LL)) { goto _iter_end_4753267808; }
			{
				_29013_n=_29013_n * 10LL;
				(_28613_r)++;
			}
			_iter_next_4753267808:;
			goto _iter_begin_4753267808;
			_iter_end_4753267808:;
			goto _iter_end_4753259216;
		}
		jule::Uint _30413_c = static_cast<jule::Uint>(_28521_a._field_d[static_cast<jule::Int>(_28613_r)]);
		_29013_n=((_29013_n * 10LL) + _30413_c) - '0';
	}
	_iter_next_4753259216:;
	(_28613_r)++;
	goto _iter_begin_4753259216;
	_iter_end_4753259216:;
	_28521_a._field_dp-=_28613_r - 1LL;
	jule::Uint _3099_mask = static_cast<jule::Uint>(static_cast<jule::Uint>(1LL << _28533_k) - 1LL);
	_iter_begin_4753273696:;
	if (!(_28613_r < _28521_a._field_nd)) { goto _iter_end_4753273696; }
	{
		jule::Uint _31313_c = static_cast<jule::Uint>(_28521_a._field_d[static_cast<jule::Int>(_28613_r)]);
		jule::Uint _31413_dig = _29013_n >> _28533_k;
		_29013_n&=_3099_mask;
		_28521_a._field_d[static_cast<jule::Int>(_28713_w)]=static_cast<jule::U8>(_31413_dig + '0');
		(_28713_w)++;
		_29013_n=((_29013_n * 10LL) + _31313_c) - '0';
	}
	_iter_next_4753273696:;
	(_28613_r)++;
	goto _iter_begin_4753273696;
	_iter_end_4753273696:;
	_iter_begin_4753282240:;
	if (!(_29013_n > 0LL)) { goto _iter_end_4753282240; }
	{
		jule::Uint _32313_dig = _29013_n >> _28533_k;
		_29013_n&=_3099_mask;
		if (_28713_w < 800LL) {
			_28521_a._field_d[static_cast<jule::Int>(_28713_w)]=static_cast<jule::U8>(_32313_dig + '0');
			(_28713_w)++;
		} else if (_32313_dig > 0LL) {
			_28521_a._field_trunc=true;
		}
		_29013_n=_29013_n * 10LL;
	}
	_iter_next_4753282240:;
	goto _iter_begin_4753282240;
	_iter_end_4753282240:;
	_28521_a._field_nd=_28713_w;
	_13ff7af20_trim(_28521_a);
}



inline jule::Bool _13ff7af20_prefix_is_less_than(jule::Slice<jule::U8> _33924_b,jule::Str _33935_s) {
	jule::Int _34013_i = 0LL;
	_iter_begin_4753293808:;
	if (!(_34013_i < _33935_s.len())) { goto _iter_end_4753293808; }
	{
		if (_34013_i >= _33924_b.len()) {
			return true;
		}
		if (_33924_b[static_cast<jule::Int>(_34013_i)] != _33935_s[static_cast<jule::Int>(_34013_i)]) {
			return _33924_b[static_cast<jule::Int>(_34013_i)] < _33935_s[static_cast<jule::Int>(_34013_i)];
		}
	}
	_iter_next_4753293808:;
	(_34013_i)++;
	goto _iter_begin_4753293808;
	_iter_end_4753293808:;
	return false;
}



inline void _13ff7af20_left_shift(_13ff7af20_Decimal& _35320_a,jule::Uint _35332_k) {
	jule::Int _35413_delta = _13ff7af20_LEFTCHEATS[static_cast<jule::Int>(_35332_k)]._field_delta;
	if (_13ff7af20_prefix_is_less_than(_35320_a._field_d.slice(static_cast<jule::Int>(0LL),static_cast<jule::Int>(_35320_a._field_nd)),_13ff7af20_LEFTCHEATS[static_cast<jule::Int>(_35332_k)]._field_cutoff)) {
		(_35413_delta)--;
	}
	jule::Int _35913_r = _35320_a._field_nd;
	jule::Int _36013_w = _35320_a._field_nd + _35413_delta;
	jule::Uint _36313_n = 0LLU;
	(_35913_r)--;
	_iter_begin_4753312464:;
	if (!(_35913_r >= 0LL)) { goto _iter_end_4753312464; }
	{
		_36313_n+=static_cast<jule::Uint>((static_cast<jule::Uint>(_35320_a._field_d[static_cast<jule::Int>(_35913_r)]) - '0') << _35332_k);
		jule::Uint _36713_quo = jule::div(_36313_n,10LL);
		jule::Uint _36813_rem = _36313_n - (10LL * _36713_quo);
		(_36013_w)--;
		if (_36013_w < 800LL) {
			_35320_a._field_d[static_cast<jule::Int>(_36013_w)]=static_cast<jule::U8>(_36813_rem + '0');
		} else if (_36813_rem != 0LL) {
			_35320_a._field_trunc=true;
		}
		_36313_n=_36713_quo;
	}
	_iter_next_4753312464:;
	(_35913_r)--;
	goto _iter_begin_4753312464;
	_iter_end_4753312464:;
	_iter_begin_4753319232:;
	if (!(_36313_n > 0LL)) { goto _iter_end_4753319232; }
	{
		jule::Uint _38013_quo = jule::div(_36313_n,10LL);
		jule::Uint _38113_rem = _36313_n - (10LL * _38013_quo);
		(_36013_w)--;
		if (_36013_w < 800LL) {
			_35320_a._field_d[static_cast<jule::Int>(_36013_w)]=static_cast<jule::U8>(_38113_rem + '0');
		} else if (_38113_rem != 0LL) {
			_35320_a._field_trunc=true;
		}
		_36313_n=_38013_quo;
	}
	_iter_next_4753319232:;
	goto _iter_begin_4753319232;
	_iter_end_4753319232:;
	_35320_a._field_nd+=_35413_delta;
	if (_35320_a._field_nd >= 800LL) {
		_35320_a._field_nd=800LL;
	}
	_35320_a._field_dp+=_35413_delta;
	_13ff7af20_trim(_35320_a);
}



inline jule::Bool _13ff7af20_should_round_up(_13ff7af20_Decimal& _40021_a,jule::Int _40033_nd) {
	if ((_40033_nd < 0LL) || (_40033_nd >= _40021_a._field_nd)) {
		return false;
	}
	if ((_40021_a._field_d[static_cast<jule::Int>(_40033_nd)] == '5') && ((_40033_nd + 1LL) == _40021_a._field_nd)) {
		if (_40021_a._field_trunc) {
			return true;
		}
		return (_40033_nd > 0LL) && (((_40021_a._field_d[static_cast<jule::Int>(_40033_nd - 1LL)] - '0') % 2LL) != 0LL);
	}
	return _40021_a._field_d[static_cast<jule::Int>(_40033_nd)] >= '5';
}



inline jule::Str _10ff65780_fmt_uint(jule::U64 _6217_i,jule::Int _6225_base) {
	if ((true && (_6217_i < 100LL)) && (_6225_base == 10LL)) {
		return _10ff65780_small(static_cast<jule::Int>(_6217_i));
	}
	jule::Str _6613_s;
	std::tie(std::ignore,_6613_s) = _10ff65780_fmt_bits(nullptr,_6217_i,_6225_base,false,false);
	return _6613_s;
}



inline jule::Str _10ff65780_fmt_int(jule::I64 _7316_i,jule::Int _7324_base) {
	if (((true && (0LL <= _7316_i)) && (_7316_i < 100LL)) && (_7324_base == 10LL)) {
		return _10ff65780_small(static_cast<jule::Int>(_7316_i));
	}
	jule::Str _7713_s;
	std::tie(std::ignore,_7713_s) = _10ff65780_fmt_bits(nullptr,static_cast<jule::U64>(_7316_i),_7324_base,_7316_i < 0LL,false);
	return _7713_s;
}



inline jule::Str _10ff65780_itoa(jule::Int _8213_i) {
	return _10ff65780_fmt_int(static_cast<jule::I64>(_8213_i),10LL);
}



inline jule::Str _10ff65780_small(jule::Int _8510_i) {
	if (_8510_i < 10LL) {
		return jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).slice(static_cast<jule::Int>(_8510_i),static_cast<jule::Int>(_8510_i + 1LL));
	}
	return jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200).slice(static_cast<jule::Int>(_8510_i * 2LL),static_cast<jule::Int>((_8510_i * 2LL) + 2LL));
}



inline jule::Bool _10ff65780_is_power_of_two(jule::Int _9220_x) {
	return (_9220_x & (_9220_x - 1LL)) == 0LL;
}



inline std::tuple<jule::Slice<jule::U8>,jule::Str> _10ff65780_fmt_bits(jule::Slice<jule::U8> _9917_dst,jule::U64 _9934_u,jule::Int _9942_base,jule::Bool _9953_neg,jule::Bool _9964_append_) {
	jule::Str _9992_s = jule::Str();
	jule::Slice<jule::U8> _9981_d = jule::Slice<jule::U8>();
	if ((_9942_base < 2LL) || (_9942_base > jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).len())) {
		jule::panic(jule::Str("std::conv: illegal base", 23));
	}
	jule::Array<jule::U8,65> _10513_a = jule::Array<jule::U8,65>({});
	jule::Int _10613_i = 65LL;
	if (_9953_neg) {
		_9934_u=static_cast<jule::U64>((-(_9934_u)));
	}
	if (_9942_base == 10LL) {
		if (false) {
			_iter_begin_4753382240:;
			if (!(_9934_u >= 1e+09)) { goto _iter_end_4753382240; }
			{
				jule::U64 _12521_q = jule::div(_9934_u,1e+09);
				jule::Uint _12625_us = static_cast<jule::Uint>(_9934_u - (_12521_q * 1e+09));
				jule::Int _12725_j = 4LL;
				_iter_begin_4753385408:;
				if (!(_12725_j > 0LL)) { goto _iter_end_4753385408; }
				{
					jule::Uint _12925_is = (_12625_us % 100LL) * 2LL;
					_12625_us/=100LL;
					_10613_i-=2LL;
					_10513_a[static_cast<jule::Int>(_10613_i + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_12925_is + 1LL)]);
					_10513_a[static_cast<jule::Int>(_10613_i + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_12925_is + 0LL)]);
				}
				_iter_next_4753385408:;
				(_12725_j)--;
				goto _iter_begin_4753385408;
				_iter_end_4753385408:;
				(_10613_i)--;
				_10513_a[static_cast<jule::Int>(_10613_i)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((_12625_us * 2LL) + 1LL)]);
				_9934_u=_12521_q;
			}
			_iter_next_4753382240:;
			goto _iter_begin_4753382240;
			_iter_end_4753382240:;
		}
		jule::Uint _14717_us = static_cast<jule::Uint>(_9934_u);
		_iter_begin_4753381552:;
		if (!(_14717_us >= 100LL)) { goto _iter_end_4753381552; }
		{
			jule::Uint _14917_is = (_14717_us % 100LL) * 2LL;
			_14717_us/=100LL;
			_10613_i-=2LL;
			_10513_a[static_cast<jule::Int>(_10613_i + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_14917_is + 1LL)]);
			_10513_a[static_cast<jule::Int>(_10613_i + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_14917_is + 0LL)]);
		}
		_iter_next_4753381552:;
		goto _iter_begin_4753381552;
		_iter_end_4753381552:;
		jule::Uint _15713_is = _14717_us * 2LL;
		(_10613_i)--;
		_10513_a[static_cast<jule::Int>(_10613_i)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_15713_is + 1LL)]);
		if (_14717_us >= 10LL) {
			(_10613_i)--;
			_10513_a[static_cast<jule::Int>(_10613_i)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_15713_is)]);
		}
	} else if (_10ff65780_is_power_of_two(_9942_base)) {
		jule::Uint _17213_shift = static_cast<jule::Uint>(_118fb69d0_trailing_zeros(static_cast<jule::Uint>(_9942_base))) & 7LL;
		jule::U64 _17313_b = static_cast<jule::U64>(_9942_base);
		jule::Uint _17413_m = static_cast<jule::Uint>(_9942_base) - 1LL;
		_iter_begin_4753421248:;
		if (!(_9934_u >= _17313_b)) { goto _iter_end_4753421248; }
		{
			(_10613_i)--;
			_10513_a[static_cast<jule::Int>(_10613_i)]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::Int>(static_cast<jule::Uint>(_9934_u) & _17413_m)]);
			_9934_u>>=_17213_shift;
		}
		_iter_next_4753421248:;
		goto _iter_begin_4753421248;
		_iter_end_4753421248:;
		(_10613_i)--;
		_10513_a[static_cast<jule::Int>(_10613_i)]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::Int>(static_cast<jule::Uint>(_9934_u))]);
	} else {
		jule::U64 _18513_b = static_cast<jule::U64>(_9942_base);
		_iter_begin_4753430480:;
		if (!(_9934_u >= _18513_b)) { goto _iter_end_4753430480; }
		{
			(_10613_i)--;
			jule::U64 _19117_q = jule::div(_9934_u,_18513_b);
			_10513_a[static_cast<jule::Int>(_10613_i)]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::Int>(static_cast<jule::Uint>(_9934_u - (_19117_q * _18513_b)))]);
			_9934_u=_19117_q;
		}
		_iter_next_4753430480:;
		goto _iter_begin_4753430480;
		_iter_end_4753430480:;
		(_10613_i)--;
		_10513_a[static_cast<jule::Int>(_10613_i)]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::Int>(static_cast<jule::Uint>(_9934_u))]);
	}
	if (_9953_neg) {
		(_10613_i)--;
		_10513_a[static_cast<jule::Int>(_10613_i)]='-';
	}
	if (_9964_append_) {
		_9981_d=append(_9917_dst,_10513_a.slice(static_cast<jule::Int>(_10613_i)));
		return std::make_tuple(_9981_d,_9992_s);
	}
	_9992_s=static_cast<jule::Str>(_10513_a.slice(static_cast<jule::Int>(_10613_i)));
	return std::make_tuple(_9981_d,_9992_s);
}



inline void _118e57f00_exit(jule::Int _1313_code) {
	_13ff06980_exit(_1313_code);
}



inline jule::Str _118e57f00_executable(void) {
	return __jule_executable();
}



inline jule::Bool _13fe20550_is_std_header_path(jule::Str _2627_p) {
	return (_2627_p[static_cast<jule::Int>(0LL)] == '<') && (_2627_p[static_cast<jule::Int>(_2627_p.len() - 1LL)] == '>');
}



inline jule::Bool _13fe20550_is_valid_header_ext(jule::Str _3128_ext) {
	{
		auto &__julec_range_expr = _13fe20550_CPP_HEADER_EXTS;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _13fe20550_valid_ext = *__julec_range_begin;
			_iter_begin_4753786832:;
			{
				if (_3128_ext == _13fe20550_valid_ext) {
					return true;
				}
			}
			_iter_next_4753786832:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _13fe20550_valid_ext = *__julec_range_begin; goto _iter_begin_4753786832; }
			_iter_end_4753786832:;
		}
	}
	return false;
}



inline jule::Bool _13fe20550_is_valid_cpp_ext(jule::Str _4225_ext) {
	{
		auto &__julec_range_expr = _13fe20550_CPP_EXTS;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _13fe20550_e = *__julec_range_begin;
			_iter_begin_4753791488:;
			{
				if (_4225_ext == _13fe20550_e) {
					return true;
				}
			}
			_iter_next_4753791488:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _13fe20550_e = *__julec_range_begin; goto _iter_begin_4753791488; }
			_iter_end_4753791488:;
		}
	}
	{
		auto &__julec_range_expr = _13fe20550_OBJECTIVE_CPP_EXTS;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _13fe20550_e = *__julec_range_begin;
			_iter_begin_4753795744:;
			{
				if (_4225_ext == _13fe20550_e) {
					return true;
				}
			}
			_iter_next_4753795744:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _13fe20550_e = *__julec_range_begin; goto _iter_begin_4753795744; }
			_iter_end_4753795744:;
		}
	}
	return false;
}



inline std::tuple<jule::Bool,jule::Bool> _13fe82e00_check_os(jule::Str _713_arg) {
	jule::Bool _735_exist = jule::Bool();
	jule::Bool _725_ok = jule::Bool();
	_725_ok=false;
	_735_exist=true;
	{
		auto &_match_expr{ _713_arg };
		if (!((jule::Str("windows", 7)) == _match_expr)) { goto _case_end_4753802496; }
		_case_begin_4753802496:;
		{
			_725_ok=_1410149e0_is_windows(_1410197f0_OS);
		}
		goto _match_end_4753799392;
		_case_end_4753802496:;
		if (!((jule::Str("darwin", 6)) == _match_expr)) { goto _case_end_4753801136; }
		_case_begin_4753801136:;
		{
			_725_ok=_1410149e0_is_darwin(_1410197f0_OS);
		}
		goto _match_end_4753799392;
		_case_end_4753801136:;
		if (!((jule::Str("linux", 5)) == _match_expr)) { goto _case_end_4753801248; }
		_case_begin_4753801248:;
		{
			_725_ok=_1410149e0_is_linux(_1410197f0_OS);
		}
		goto _match_end_4753799392;
		_case_end_4753801248:;
		if (!((jule::Str("unix", 4)) == _match_expr)) { goto _case_end_4753801360; }
		_case_begin_4753801360:;
		{
			_725_ok=_1410149e0_is_unix(_1410197f0_OS);
		}
		goto _match_end_4753799392;
		_case_end_4753801360:;
		_case_begin_4753799824:;
		{
			_725_ok=true;
			_735_exist=false;
		}
		goto _match_end_4753799392;
		_case_end_4753799824:;
		_match_end_4753799392:;
	}
	return std::make_tuple(_725_ok,_735_exist);
}



inline std::tuple<jule::Bool,jule::Bool> _13fe82e00_check_arch(jule::Str _2415_arg) {
	jule::Bool _2437_exist = jule::Bool();
	jule::Bool _2427_ok = jule::Bool();
	_2427_ok=false;
	_2437_exist=true;
	{
		auto &_match_expr{ _2415_arg };
		if (!((jule::Str("i386", 4)) == _match_expr)) { goto _case_end_4753812016; }
		_case_begin_4753812016:;
		{
			_2427_ok=_1410149e0_is_i386(_1410197f0_ARCH);
		}
		goto _match_end_4753808912;
		_case_end_4753812016:;
		if (!((jule::Str("amd64", 5)) == _match_expr)) { goto _case_end_4753810656; }
		_case_begin_4753810656:;
		{
			_2427_ok=_1410149e0_is_amd64(_1410197f0_ARCH);
		}
		goto _match_end_4753808912;
		_case_end_4753810656:;
		if (!((jule::Str("arm64", 5)) == _match_expr)) { goto _case_end_4753810768; }
		_case_begin_4753810768:;
		{
			_2427_ok=_1410149e0_is_arm64(_1410197f0_ARCH);
		}
		goto _match_end_4753808912;
		_case_end_4753810768:;
		if (!((jule::Str("64bit", 5)) == _match_expr)) { goto _case_end_4753810880; }
		_case_begin_4753810880:;
		{
			_2427_ok=_1410149e0_is_64bit(_1410197f0_ARCH);
		}
		goto _match_end_4753808912;
		_case_end_4753810880:;
		if (!((jule::Str("32bit", 5)) == _match_expr)) { goto _case_end_4753811312; }
		_case_begin_4753811312:;
		{
			_2427_ok=_1410149e0_is_32bit(_1410197f0_ARCH);
		}
		goto _match_end_4753808912;
		_case_end_4753811312:;
		_case_begin_4753809344:;
		{
			_2427_ok=true;
			_2437_exist=false;
		}
		goto _match_end_4753808912;
		_case_end_4753809344:;
		_match_end_4753808912:;
	}
	return std::make_tuple(_2427_ok,_2437_exist);
}



inline jule::Bool _13fe82e00_is_pass_file_annotation(jule::Str _4336_p) {
	_4336_p=_1410391e0_base(_4336_p);
	jule::I64 _459_n = _4336_p.len();
	_4336_p=_4336_p.slice(0LL,static_cast<jule::Int>(_459_n - _1410391e0_ext(_4336_p).len()));
	jule::Str _5113_a1 = jule::Str("", 0);
	jule::Str _5413_a2 = jule::Str("", 0);
	jule::Int _5713_i = _4336_p.rfind(jule::Str("_", 1));
	if (_5713_i == -1LL) {
		jule::Bool _6018_ok;
		jule::Bool _6026_exist;
		std::tie(_6018_ok,_6026_exist) = _13fe82e00_check_os(_4336_p);
		if (_6026_exist) {
			return _6018_ok;
		}
		std::tie(_6018_ok,_6026_exist) = _13fe82e00_check_arch(_4336_p);
		return (!(_6026_exist)) || _6018_ok;
	}
	if ((_5713_i + 1LL) >= _459_n) {
		return true;
	}
	_5113_a1=_4336_p.slice(static_cast<jule::Int>(_5713_i + 1LL));
	_4336_p=_4336_p.slice(0LL,static_cast<jule::Int>(_5713_i));
	_5713_i=static_cast<jule::Int>(_4336_p.rfind(jule::Str("_", 1)));
	if (_5713_i != -1LL) {
		_5413_a2=_4336_p.slice(static_cast<jule::Int>(_5713_i + 1LL));
	}
	if (_5413_a2 == jule::Str("", 0)) {
		jule::Bool _8118_ok;
		jule::Bool _8126_exist;
		std::tie(_8118_ok,_8126_exist) = _13fe82e00_check_os(_5113_a1);
		if (_8126_exist) {
			return _8118_ok;
		}
		std::tie(_8118_ok,_8126_exist) = _13fe82e00_check_arch(_5113_a1);
		return (!(_8126_exist)) || _8118_ok;
	}
	jule::Bool _8914_ok;
	jule::Bool _8922_exist;
	std::tie(_8914_ok,_8922_exist) = _13fe82e00_check_arch(_5113_a1);
	if (_8922_exist) {
		if ((!(_8914_ok))) {
			return false;
		}
		jule::Bool _9414_ok;
		jule::Bool _9418_exist;
		std::tie(_9414_ok,_9418_exist) = _13fe82e00_check_os(_5413_a2);
		return (!(_9418_exist)) || _9414_ok;
	}
	std::tie(_8914_ok,_8922_exist) = _13fe82e00_check_os(_5113_a1);
	return (!(_8922_exist)) || _8914_ok;
}



inline jule::Str _13fe9efa0_errorf(jule::Str _20215_key,jule::Slice<jule::Any> _20225_args) {
	jule::Str _2039_fmt = _13fe9efa0_ERRORS[_20215_key];
	return _13fe9efa0_apply_fmt(_2039_fmt,_20225_args);
}



inline jule::Str _13fe9efa0_arg_to_str(jule::Any _20715_arg) {
	{
		auto &_match_expr{ _20715_arg };
		if (!(_match_expr.type_is<jule::Str>())) { goto _case_end_4753858416; }
		_case_begin_4753858416:;
		{
			return _20715_arg.operator jule::Str();
		}
		goto _match_end_4753856240;
		_case_end_4753858416:;
		if (!(_match_expr.type_is<jule::U8>())) { goto _case_end_4753858528; }
		_case_begin_4753858528:;
		{
			return static_cast<jule::Str>(_20715_arg.operator jule::U8());
		}
		goto _match_end_4753856240;
		_case_end_4753858528:;
		if (!(_match_expr.type_is<jule::I32>())) { goto _case_end_4753856992; }
		_case_begin_4753856992:;
		{
			return static_cast<jule::Str>(_20715_arg.operator jule::I32());
		}
		goto _match_end_4753856240;
		_case_end_4753856992:;
		_case_begin_4753855120:;
		{
			return jule::Str("<fmt?>", 6);
		}
		goto _match_end_4753856240;
		_case_end_4753855120:;
		_match_end_4753856240:;
	}
}



inline jule::Int _13fe9efa0_find_next_fmt(jule::Str _21618_fmt) {
	{
		auto &__julec_range_expr = _21618_fmt;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _13fe9efa0_i = 0;
			jule::U8 _13fe9efa0_b = *__julec_range_begin;
			_iter_begin_4753856416:;
			{
				if (_13fe9efa0_b == '@') {
					return _13fe9efa0_i;
				}
			}
			_iter_next_4753856416:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_13fe9efa0_i; _13fe9efa0_b = *__julec_range_begin; goto _iter_begin_4753856416; }
			_iter_end_4753856416:;
		}
	}
	return -1LL;
}



inline jule::Str _13fe9efa0_apply_fmt(jule::Str _22518_fmt,jule::Slice<jule::Any> _22528_args) {
	jule::Str _22613_s = jule::Str("", 0);
	{
		auto &__julec_range_expr = _22528_args;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Any _13fe9efa0_arg = *__julec_range_begin;
			_iter_begin_4753867776:;
			{
				jule::Int _22913_i = _13fe9efa0_find_next_fmt(_22518_fmt);
				if (_22913_i == -1LL) {
					goto _iter_end_4753867776;
				}
				_22613_s+=_22518_fmt.slice(0LL,static_cast<jule::Int>(_22913_i));
				_22613_s+=_13fe9efa0_arg_to_str(_13fe9efa0_arg);
				_22518_fmt=_22518_fmt.slice(static_cast<jule::Int>(_22913_i + 1LL));
			}
			_iter_next_4753867776:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _13fe9efa0_arg = *__julec_range_begin; goto _iter_begin_4753867776; }
			_iter_end_4753867776:;
		}
	}
	_22613_s+=_22518_fmt;
	return _22613_s;
}



inline jule::Bool _1410150a0_is_top_directive(jule::Str _3425_directive) {
	return (_3425_directive == jule::Str("pass", 4)) || (_3425_directive == jule::Str("build", 5));
}



inline jule::Bool _1410149e0_is_windows(jule::Str _5119_os) {
	return _5119_os == jule::Str("windows", 7);
}



inline jule::Bool _1410149e0_is_darwin(jule::Str _5318_os) {
	return _5318_os == jule::Str("darwin", 6);
}



inline jule::Bool _1410149e0_is_linux(jule::Str _5517_os) {
	return _5517_os == jule::Str("linux", 5);
}



inline jule::Bool _1410149e0_is_i386(jule::Str _5716_arch) {
	return _5716_arch == jule::Str("i386", 4);
}



inline jule::Bool _1410149e0_is_amd64(jule::Str _5917_arch) {
	return _5917_arch == jule::Str("amd64", 5);
}



inline jule::Bool _1410149e0_is_arm64(jule::Str _6117_arch) {
	return _6117_arch == jule::Str("arm64", 5);
}



inline jule::Bool _1410149e0_is_unix(jule::Str _6316_os) {
	return _1410149e0_is_darwin(_6316_os) || _1410149e0_is_linux(_6316_os);
}



inline jule::Bool _1410149e0_is_32bit(jule::Str _6517_arch) {
	return _1410149e0_is_i386(_6517_arch);
}



inline jule::Bool _1410149e0_is_64bit(jule::Str _6717_arch) {
	return _1410149e0_is_amd64(_6717_arch) || _1410149e0_is_arm64(_6717_arch);
}



inline void _1410197f0_exit_err(jule::Str _2513_msg) {
	
	jule::outln(_2513_msg);
	_118e57f00_exit(1LL);
}



inline void _1410197f0_init(void) {
	jule::Str _3313_path = _118e57f00_executable();
	if (_3313_path == jule::Str("", 0)) {
		_1410197f0_exit_err(jule::Str("std::jule::build: executable file cannot found", 46));
	}
	jule::Str _3810_pwd;
	jule::Int _3815_err;
	std::tie(_3810_pwd,_3815_err) = _14107c570_working_dir();
	if (_3815_err != 0LLU) {
		_1410197f0_exit_err(jule::Str("std::jule::build: working directory path cannot found", 53));
	}
	jule::Str _439_path_exec = _1410391e0_dir(_3313_path);
	_3313_path=_1410391e0_join(jule::Slice<jule::Str>({_439_path_exec,jule::Str("..", 2)}));
	{
		(*((&(_1410197f0_PATH_WD))))=_3810_pwd;
		(*((&(_1410197f0_PATH_EXEC))))=_439_path_exec;
		(*((&(_1410197f0_PATH_STDLIB))))=_1410391e0_join(jule::Slice<jule::Str>({_3313_path,jule::Str("std", 3)}));
		(*((&(_1410197f0_PATH_API))))=_1410391e0_join(jule::Slice<jule::Str>({_1410197f0_PATH_EXEC,jule::Str("..", 2)}));
		(*((&(_1410197f0_PATH_API))))=_1410391e0_join(jule::Slice<jule::Str>({_1410197f0_PATH_API,jule::Str("api", 3)}));
		(*((&(_1410197f0_PATH_API))))=_1410391e0_join(jule::Slice<jule::Str>({_1410197f0_PATH_API,jule::Str("jule.hpp", 8)}));
	}
}



inline jule::Int _118d89970_get_last_fs_error(void) {
	jule::Int _739_err = _14108e780_get_last_errno();
	{
		auto &_match_expr{ _739_err };
		if (!((13LL) == _match_expr)) { goto _case_end_4753966864; }
		_case_begin_4753966864:;
		{
			return 1LLU;
		}
		goto _match_end_4753965344;
		_case_end_4753966864:;
		if (!((5LL) == _match_expr)) { goto _case_end_4753966976; }
		_case_begin_4753966976:;
		{
			return 2LLU;
		}
		goto _match_end_4753965344;
		_case_end_4753966976:;
		if (!((62LL) == _match_expr)) { goto _case_end_4753966224; }
		_case_begin_4753966224:;
		{
			return 3LLU;
		}
		goto _match_end_4753965344;
		_case_end_4753966224:;
		if (!((63LL) == _match_expr)) { goto _case_end_4753966336; }
		_case_begin_4753966336:;
		{
			return 4LLU;
		}
		goto _match_end_4753965344;
		_case_end_4753966336:;
		if (!((2LL) == _match_expr)) { goto _case_end_4753966448; }
		_case_begin_4753966448:;
		{
			return 5LLU;
		}
		goto _match_end_4753965344;
		_case_end_4753966448:;
		if (!((20LL) == _match_expr)) { goto _case_end_4753967776; }
		_case_begin_4753967776:;
		{
			return 6LLU;
		}
		goto _match_end_4753965344;
		_case_end_4753967776:;
		if (!((84LL) == _match_expr)) { goto _case_end_4753967888; }
		_case_begin_4753967888:;
		{
			return 7LLU;
		}
		goto _match_end_4753965344;
		_case_end_4753967888:;
		if (!((9LL) == _match_expr)) { goto _case_end_4753968000; }
		_case_begin_4753968000:;
		{
			return 8LLU;
		}
		goto _match_end_4753965344;
		_case_end_4753968000:;
		if (!((24LL) == _match_expr)) { goto _case_end_4753968112; }
		_case_begin_4753968112:;
		{
			return 9LLU;
		}
		goto _match_end_4753965344;
		_case_end_4753968112:;
		if (!((23LL) == _match_expr)) { goto _case_end_4753968432; }
		_case_begin_4753968432:;
		{
			return 10LLU;
		}
		goto _match_end_4753965344;
		_case_end_4753968432:;
		if (!((12LL) == _match_expr)) { goto _case_end_4753968544; }
		_case_begin_4753968544:;
		{
			return 11LLU;
		}
		goto _match_end_4753965344;
		_case_end_4753968544:;
		if (!((17LL) == _match_expr)) { goto _case_end_4753968656; }
		_case_begin_4753968656:;
		{
			return 12LLU;
		}
		goto _match_end_4753965344;
		_case_end_4753968656:;
		if (!((4LL) == _match_expr)) { goto _case_end_4753968768; }
		_case_begin_4753968768:;
		{
			return 13LLU;
		}
		goto _match_end_4753965344;
		_case_end_4753968768:;
		if (!((22LL) == _match_expr)) { goto _case_end_4753968880; }
		_case_begin_4753968880:;
		{
			return 14LLU;
		}
		goto _match_end_4753965344;
		_case_end_4753968880:;
		if (!((21LL) == _match_expr)) { goto _case_end_4753968992; }
		_case_begin_4753968992:;
		{
			return 15LLU;
		}
		goto _match_end_4753965344;
		_case_end_4753968992:;
		if (!((98LL) == _match_expr)) { goto _case_end_4753969104; }
		_case_begin_4753969104:;
		{
			return 16LLU;
		}
		goto _match_end_4753965344;
		_case_end_4753969104:;
		if (!((28LL) == _match_expr)) { goto _case_end_4753969216; }
		_case_begin_4753969216:;
		{
			return 17LLU;
		}
		goto _match_end_4753965344;
		_case_end_4753969216:;
		if (!((6LL) == _match_expr)) { goto _case_end_4753969328; }
		_case_begin_4753969328:;
		{
			return 18LLU;
		}
		goto _match_end_4753965344;
		_case_end_4753969328:;
		if (!((30LL) == _match_expr)) { goto _case_end_4753969440; }
		_case_begin_4753969440:;
		{
			return 19LLU;
		}
		goto _match_end_4753965344;
		_case_end_4753969440:;
		if (!((35LL) == _match_expr)) { goto _case_end_4753969552; }
		_case_begin_4753969552:;
		{
			return 20LLU;
		}
		goto _match_end_4753965344;
		_case_end_4753969552:;
		if (!((26LL) == _match_expr || (16LL) == _match_expr)) { goto _case_end_4753969664; }
		_case_begin_4753969664:;
		{
			return 21LLU;
		}
		goto _match_end_4753965344;
		_case_end_4753969664:;
		if (!((27LL) == _match_expr)) { goto _case_end_4753969776; }
		_case_begin_4753969776:;
		{
			return 22LLU;
		}
		goto _match_end_4753965344;
		_case_end_4753969776:;
		if (!((32LL) == _match_expr)) { goto _case_end_4753969888; }
		_case_begin_4753969888:;
		{
			return 23LLU;
		}
		goto _match_end_4753965344;
		_case_end_4753969888:;
		if (!((34LL) == _match_expr)) { goto _case_end_4753970000; }
		_case_begin_4753970000:;
		{
			return 24LLU;
		}
		goto _match_end_4753965344;
		_case_end_4753970000:;
		if (!((29LL) == _match_expr)) { goto _case_end_4753970112; }
		_case_begin_4753970112:;
		{
			return 25LLU;
		}
		goto _match_end_4753965344;
		_case_end_4753970112:;
		if (!((55LL) == _match_expr)) { goto _case_end_4753970224; }
		_case_begin_4753970224:;
		{
			return 26LLU;
		}
		goto _match_end_4753965344;
		_case_end_4753970224:;
		if (!((94LL) == _match_expr)) { goto _case_end_4753970336; }
		_case_begin_4753970336:;
		{
			return 27LLU;
		}
		goto _match_end_4753965344;
		_case_end_4753970336:;
		if (!((66LL) == _match_expr)) { goto _case_end_4753970448; }
		_case_begin_4753970448:;
		{
			return 28LLU;
		}
		goto _match_end_4753965344;
		_case_end_4753970448:;
		_case_begin_4753965920:;
		{
			return 0LLU;
		}
		goto _match_end_4753965344;
		_case_end_4753965920:;
		_match_end_4753965344:;
	}
}



inline std::tuple<jule::Ref<_118da2050_File>,jule::Int> _118d89bd0_open(jule::Str _1813_path,jule::Int _1824_flag,jule::Int _1837_mode) {
	jule::Int _199_handle = _141090180_open((&(_1813_path[static_cast<jule::Int>(0LL)])),static_cast<jule::Int>(_1824_flag),_1837_mode);
	if (_199_handle == -1LL) {
		return std::make_tuple(jule::new_ref<_118da2050_File>(),_118d89970_get_last_fs_error());
	}
	return std::make_tuple(jule::new_struct<_118da2050_File>(new( std::nothrow ) _118da2050_File(_199_handle)),0LLU);
}



inline jule::Int _118d89bd0_remove_file(jule::Str _3020_path) {
	if (_141090180_unlink((&(_3020_path[static_cast<jule::Int>(0LL)]))) == 0LL) {
		return 0LLU;
	}
	return _118d89970_get_last_fs_error();
}



inline std::tuple<jule::Ref<_118db5e40_Status>,jule::Int> _118d9e780_stat(jule::Str _1113_path) {
	jule::Int _1138_err = 0LLU;
	jule::Ref<_118db5e40_Status> _1126_s = jule::Ref<_118db5e40_Status>();
	struct stat _1213_handle = (struct stat){};
	jule::Int _139_code = _141090180_stat((&(_1113_path[static_cast<jule::Int>(0LL)])),(&(_1213_handle)));
	if (_139_code != -1LL) {
		_1138_err=0LLU;
		_1126_s=jule::new_struct<_118db5e40_Status>(new( std::nothrow ) _118db5e40_Status(static_cast<jule::Uint>(_1213_handle.st_mode),static_cast<jule::Uint>(_1213_handle.st_size)));
	} else {
		_1138_err=_118d89970_get_last_fs_error();
	}
	return std::make_tuple(_1126_s,_1138_err);
}



inline std::tuple<jule::Slice<jule::U8>,jule::Int> _118da2050_read_file(jule::Str _12118_path) {
	jule::Ref<_118db5e40_Status> _12210_s;
	jule::Int _12217_err;
	std::tie(_12210_s,_12217_err) = _118d9e780_stat(_12118_path);
	if (_12217_err != 0LLU) {
		return std::make_tuple(nullptr,_12217_err);
	}
	if ((!(_12210_s->_method_is_reg()))) {
		return std::make_tuple(nullptr,15LLU);
	}
	if (_12210_s->_field_size == 0LL) {
		return std::make_tuple(jule::Slice<jule::U8>::alloc(static_cast<jule::Int>(0LL)),0LLU);
	}
	jule::Ref<_118da2050_File> _13514_f;
	std::tie(_13514_f,_12217_err) = _118d89bd0_open(_12118_path,0LL,0LL);
	if (_12217_err != 0LLU) {
		return std::make_tuple(nullptr,_12217_err);
	}
	__JULE_DEFER({
		_13514_f->_method_close();
	});
	jule::Slice<jule::U8> _14113_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::Int>(_12210_s->_field_size));
	jule::Int _14210_n;
	std::tie(_14210_n,_12217_err) = _13514_f->_method_read(_14113_buff);
	if (_12217_err != 0LLU) {
		return std::make_tuple(nullptr,_12217_err);
	}
	return std::make_tuple(_14113_buff.slice(0LL,static_cast<jule::Int>(_14210_n)),0LLU);
}



inline std::tuple<jule::Slice<jule::Ref<_118d9e870_DirEntry>>,jule::Int> _118da0200_read_dir(jule::Str _2117_path) {
	jule::Int _2152_err = 0LLU;
	jule::Slice<jule::Ref<_118d9e870_DirEntry>> _2130_dirents = jule::Slice<jule::Ref<_118d9e870_DirEntry>>();
	DIR* _2213_dir = _141090180_opendir((&(_2117_path[static_cast<jule::Int>(0LL)])));
	if (_2213_dir == nullptr) {
		_2152_err=_118d89970_get_last_fs_error();
		return std::make_tuple(_2130_dirents,_2152_err);
	}
	_iter_begin_4754041904:;
	{
		struct dirent* _2813_dirent = _141090180_readdir(_2213_dir);
		if (_2813_dirent == nullptr) {
			goto _iter_end_4754041904;
		}
		jule::Str _3213_name = _141090180_byte_ptr_to_str(((jule::U8*)(_2813_dirent->d_name)));
		jule::Ref<_118db5e40_Status> _3314_stat;
		jule::Int _3320_serr;
		std::tie(_3314_stat,_3320_serr) = _118d9e780_stat(_1410391e0_join(jule::Slice<jule::Str>({_2117_path,_3213_name})));
		if (_3320_serr != 0LLU) {
			_2152_err=_3320_serr;
			_2130_dirents=nullptr;
			goto _iter_end_4754041904;
		}
		_2130_dirents=append(_2130_dirents,jule::Slice<jule::Ref<_118d9e870_DirEntry>>({jule::new_struct<_118d9e870_DirEntry>(new( std::nothrow ) _118d9e870_DirEntry(_3213_name,_3314_stat))}));
	}
	_iter_next_4754041904:;
	goto _iter_begin_4754041904;
	_iter_end_4754041904:;
	_141090180_closedir(_2213_dir);
	return std::make_tuple(_2130_dirents,_2152_err);
}



inline jule::Int _118da0200_create_dir(jule::Str _5119_path) {
	if (_141090180_mkdir((&(_5119_path[static_cast<jule::Int>(0LL)])),448LL) == 0LL) {
		return 0LLU;
	}
	return _118d89970_get_last_fs_error();
}



inline jule::Int _118da0200_remove_dir(jule::Str _6419_path) {
	if (_141090180_rmdir((&(_6419_path[static_cast<jule::Int>(0LL)]))) == 0LL) {
		return 0LLU;
	}
	return _118d89970_get_last_fs_error();
}



inline std::tuple<jule::I32,jule::Int> _118dab460_decode_rune(jule::Slice<jule::U8> _18220_p) {
	jule::Int _18242_size = jule::Int();
	jule::I32 _18233_r = jule::I32();
	if (_18220_p.len() < 1LL) {
		_18233_r = 65533LL;
		_18242_size = 0LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _1869_p0 = _18220_p[static_cast<jule::Int>(0LL)];
	jule::U8 _1879_x = _118dab460_FIRST[static_cast<jule::Int>(_1869_p0)];
	if (_1879_x >= 240LL) {
		jule::I32 _19213_mask = (_1879_x << 31LL) >> 31LL;
		_18233_r = static_cast<jule::I32>((static_cast<jule::I32>(_18220_p[static_cast<jule::Int>(0LL)]) & (~(_19213_mask))) | (65533LL & _19213_mask));
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::Int _1959_sz = static_cast<jule::Int>(_1879_x & 7LL);
	_118dab460_accept_range _1969_accept = _118dab460_ACCEPT_RANGES[static_cast<jule::Int>(_1879_x >> 4LL)];
	if (_18220_p.len() < _1959_sz) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _2009_b1 = _18220_p[static_cast<jule::Int>(1LL)];
	if ((_2009_b1 < _1969_accept._field_lo) || (_1969_accept._field_hi < _2009_b1)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	if (_1959_sz <= 2LL) {
		_18233_r = static_cast<jule::I32>((static_cast<jule::I32>(_1869_p0 & 31LL) << 6LL) | static_cast<jule::I32>(_2009_b1 & 63LL));
		_18242_size = 2LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _2079_b2 = _18220_p[static_cast<jule::Int>(2LL)];
	if ((_2079_b2 < 128LL) || (191LL < _2079_b2)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	if (_1959_sz <= 3LL) {
		_18233_r = static_cast<jule::I32>(((static_cast<jule::I32>(_1869_p0 & 15LL) << 12LL) | (static_cast<jule::I32>(_2009_b1 & 63LL) << 6LL)) | static_cast<jule::I32>(_2079_b2 & 63LL));
		_18242_size = 3LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _2149_b3 = _18220_p[static_cast<jule::Int>(3LL)];
	if ((_2149_b3 < 128LL) || (191LL < _2149_b3)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	_18233_r = static_cast<jule::I32>((((static_cast<jule::I32>(_1869_p0 & 7LL) << 18LL) | (static_cast<jule::I32>(_2009_b1 & 63LL) << 12LL)) | (static_cast<jule::I32>(_2079_b2 & 63LL) << 6LL)) | static_cast<jule::I32>(_2149_b3 & 63LL));
	_18242_size = 4LL;
	return std::make_tuple(_18233_r,_18242_size);
}



inline std::tuple<jule::I32,jule::Int> _118dab460_decode_rune_str(jule::Str _22924_s) {
	jule::Int _22943_size = jule::Int();
	jule::I32 _22934_r = jule::I32();
	if (_22924_s.len() < 1LL) {
		_22934_r = 65533LL;
		_22943_size = 0LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	jule::U8 _2339_s0 = _22924_s[static_cast<jule::Int>(0LL)];
	jule::U8 _2349_x = _118dab460_FIRST[static_cast<jule::Int>(_2339_s0)];
	if (_2349_x >= 240LL) {
		jule::I32 _23913_mask = (_2349_x << 31LL) >> 31LL;
		_22934_r = static_cast<jule::I32>((static_cast<jule::I32>(_22924_s[static_cast<jule::Int>(0LL)]) & (~(_23913_mask))) | (65533LL & _23913_mask));
		_22943_size = 1LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	jule::Int _2429_sz = static_cast<jule::Int>(_2349_x & 7LL);
	_118dab460_accept_range _2439_accept = _118dab460_ACCEPT_RANGES[static_cast<jule::Int>(_2349_x >> 4LL)];
	if (_22924_s.len() < _2429_sz) {
		_22934_r = 65533LL;
		_22943_size = 1LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	jule::U8 _2479_s1 = _22924_s[static_cast<jule::Int>(1LL)];
	if ((_2479_s1 < _2439_accept._field_lo) || (_2439_accept._field_hi < _2479_s1)) {
		_22934_r = 65533LL;
		_22943_size = 1LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	if (_2429_sz <= 2LL) {
		_22934_r = static_cast<jule::I32>((static_cast<jule::I32>(_2339_s0 & 31LL) << 6LL) | static_cast<jule::I32>(_2479_s1 & 63LL));
		_22943_size = 2LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	jule::U8 _2549_s2 = _22924_s[static_cast<jule::Int>(2LL)];
	if ((_2549_s2 < 128LL) || (191LL < _2549_s2)) {
		_22934_r = 65533LL;
		_22943_size = 1LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	if (_2429_sz <= 3LL) {
		_22934_r = static_cast<jule::I32>(((static_cast<jule::I32>(_2339_s0 & 15LL) << 12LL) | (static_cast<jule::I32>(_2479_s1 & 63LL) << 6LL)) | static_cast<jule::I32>(_2549_s2 & 63LL));
		_22943_size = 3LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	jule::U8 _2619_s3 = _22924_s[static_cast<jule::Int>(3LL)];
	if ((_2619_s3 < 128LL) || (191LL < _2619_s3)) {
		_22934_r = 65533LL;
		_22943_size = 1LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	_22934_r = static_cast<jule::I32>((((static_cast<jule::I32>(_2339_s0 & 7LL) << 18LL) | (static_cast<jule::I32>(_2479_s1 & 63LL) << 12LL)) | (static_cast<jule::I32>(_2549_s2 & 63LL) << 6LL)) | static_cast<jule::I32>(_2619_s3 & 63LL));
	_22943_size = 4LL;
	return std::make_tuple(_22934_r,_22943_size);
}



inline jule::Bool _11911a8a0_is_unary_op(jule::Str _31020_kind) {
	{
		auto &__julec_range_expr = _11911a8a0_UNARY_OPS;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _11911a8a0_op = *__julec_range_begin;
			_iter_begin_4755055328:;
			{
				if (_31020_kind == _11911a8a0_op) {
					return true;
				}
			}
			_iter_next_4755055328:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11911a8a0_op = *__julec_range_begin; goto _iter_begin_4755055328; }
			_iter_end_4755055328:;
		}
	}
	return false;
}



inline jule::Bool _11911a8a0_is_bin_op(jule::Str _32118_kind) {
	{
		auto &__julec_range_expr = _11911a8a0_BIN_OPS;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _11911a8a0_op = *__julec_range_begin;
			_iter_begin_4755059600:;
			{
				if (_32118_kind == _11911a8a0_op) {
					return true;
				}
			}
			_iter_next_4755059600:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11911a8a0_op = *__julec_range_begin; goto _iter_begin_4755059600; }
			_iter_end_4755059600:;
		}
	}
	return false;
}



inline jule::Bool _11911a8a0_is_str(jule::Str _34315_k) {
	return (_34315_k != jule::Str("", 0)) && ((_34315_k[static_cast<jule::Int>(0LL)] == '\"') || _11911a8a0_is_raw_str(_34315_k));
}



inline jule::Bool _11911a8a0_is_raw_str(jule::Str _34519_k) {
	return (_34519_k != jule::Str("", 0)) && (_34519_k[static_cast<jule::Int>(0LL)] == '`');
}



inline jule::Bool _11911a8a0_is_rune(jule::Str _34816_k) {
	return (_34816_k != jule::Str("", 0)) && (_34816_k[static_cast<jule::Int>(0LL)] == '\'');
}



inline jule::Bool _11911a8a0_is_bool(jule::Str _35216_k) {
	return (_35216_k == jule::Str("true", 4)) || (_35216_k == jule::Str("false", 5));
}



inline jule::Bool _11911a8a0_contains_any(jule::Str _35417_s,jule::Str _35425_bytes) {
	{
		auto &__julec_range_expr = _35425_bytes;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::U8 _11911a8a0_b = *__julec_range_begin;
			_iter_begin_4755074496:;
			{
				jule::Int _35613_i = _35417_s.find(static_cast<jule::Str>(_11911a8a0_b));
				if (_35613_i >= 0LL) {
					return true;
				}
			}
			_iter_next_4755074496:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11911a8a0_b = *__julec_range_begin; goto _iter_begin_4755074496; }
			_iter_end_4755074496:;
		}
	}
	return false;
}



inline jule::Bool _11911a8a0_is_float(jule::Str _36617_k) {
	if (_36617_k.has_prefix(jule::Str("0x", 2))) {
		return _11911a8a0_contains_any(_36617_k,jule::Str(".pP", 3));
	}
	return _11911a8a0_contains_any(_36617_k,jule::Str(".eE", 3));
}



inline jule::Bool _11911a8a0_is_num(jule::Str _37515_k) {
	if (_37515_k == jule::Str("", 0)) {
		return false;
	}
	jule::U8 _3809_b = _37515_k[static_cast<jule::Int>(0LL)];
	return (_3809_b == '.') || (('0' <= _3809_b) && (_3809_b <= '9'));
}



inline jule::Bool _11911a8a0_is_ignore_ident(jule::Str _39024_ident) {
	return _39024_ident == jule::Str("_", 1);
}



inline jule::Bool _11911a8a0_is_anon_ident(jule::Str _39222_ident) {
	return _39222_ident == jule::Str("<anonymous>", 11);
}



inline jule::Bool _11911a8a0_is_space(jule::I32 _40617_r) {
	{
		auto &__julec_range_expr = _11911a8a0_SPACES;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::I32 _11911a8a0_cr = *__julec_range_begin;
			_iter_begin_4755100848:;
			{
				if (_40617_r == _11911a8a0_cr) {
					return true;
				}
			}
			_iter_next_4755100848:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11911a8a0_cr = *__julec_range_begin; goto _iter_begin_4755100848; }
			_iter_end_4755100848:;
		}
	}
	return false;
}



inline jule::Bool _11911a8a0_is_letter(jule::I32 _41718_r) {
	return (('a' <= _41718_r) && (_41718_r <= 'z')) || (('A' <= _41718_r) && (_41718_r <= 'Z'));
}



inline jule::Bool _11911a8a0_is_ident_rune(jule::Str _42322_s) {
	if (_42322_s == jule::Str("", 0)) {
		return false;
	}
	if (_42322_s[static_cast<jule::Int>(0LL)] != '_') {
		jule::I32 _42914_r;
		std::tie(_42914_r,std::ignore) = _118dab460_decode_rune_str(_42322_s);
		if ((!(_11911a8a0_is_letter(_42914_r)))) {
			return false;
		}
	}
	return true;
}



inline jule::Bool _11911a8a0_is_decimal(jule::U8 _43919_b) {
	return ('0' <= _43919_b) && (_43919_b <= '9');
}



inline jule::Bool _11911a8a0_is_binary(jule::U8 _44118_b) {
	return (_44118_b == '0') || (_44118_b == '1');
}



inline jule::Bool _11911a8a0_is_octal(jule::U8 _44317_b) {
	return ('0' <= _44317_b) && (_44317_b <= '7');
}



inline jule::Bool _11911a8a0_is_hex(jule::U8 _44615_b) {
	{
		if (!((('0' <= _44615_b) && (_44615_b <= '9')))) { goto _case_end_4755120256; }
		_case_begin_4755120256:;
		{
			return true;
		}
		goto _match_end_4755118016;
		_case_end_4755120256:;
		if (!((('a' <= _44615_b) && (_44615_b <= 'f')))) { goto _case_end_4755121920; }
		_case_begin_4755121920:;
		{
			return true;
		}
		goto _match_end_4755118016;
		_case_end_4755121920:;
		if (!((('A' <= _44615_b) && (_44615_b <= 'F')))) { goto _case_end_4755122032; }
		_case_begin_4755122032:;
		{
			return true;
		}
		goto _match_end_4755118016;
		_case_end_4755122032:;
		_case_begin_4755119200:;
		{
			return false;
		}
		goto _match_end_4755118016;
		_case_end_4755119200:;
		_match_end_4755118016:;
	}
}



inline jule::Bool _11911a8a0_is_assign(jule::Uint _45818_id) {
	return ((((((_45818_id == 2LLU) || (_45818_id == 31LLU)) || (_45818_id == 34LLU)) || (_45818_id == 20LLU)) || (_45818_id == 28LLU)) || (_45818_id == 3LLU)) || (_45818_id == 7LLU);
}



inline jule::Bool _11911a8a0_is_postfix_op(jule::Str _47122_kind) {
	{
		auto &__julec_range_expr = _11911a8a0_POSTFIX_OPS;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _11911a8a0_op = *__julec_range_begin;
			_iter_begin_4755124736:;
			{
				if (_47122_kind == _11911a8a0_op) {
					return true;
				}
			}
			_iter_next_4755124736:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11911a8a0_op = *__julec_range_begin; goto _iter_begin_4755124736; }
			_iter_end_4755124736:;
		}
	}
	return false;
}



inline jule::Bool _11911a8a0_is_assign_op(jule::Str _48221_kind) {
	if (_11911a8a0_is_postfix_op(_48221_kind)) {
		return true;
	}
	{
		auto &__julec_range_expr = _11911a8a0_ASSING_OPS;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _11911a8a0_op = *__julec_range_begin;
			_iter_begin_4755134368:;
			{
				if (_48221_kind == _11911a8a0_op) {
					return true;
				}
			}
			_iter_next_4755134368:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11911a8a0_op = *__julec_range_begin; goto _iter_begin_4755134368; }
			_iter_end_4755134368:;
		}
	}
	return false;
}



inline jule::Ref<_118d9a520_File> _118d9a520_new_file_set(jule::Str _4021_path) {
	return jule::new_struct<_118d9a520_File>(new( std::nothrow ) _118d9a520_File(_4021_path,_1192e4e90_Vector_0()));
}



inline _13fe81720_Log _11916a220_make_err(jule::Int _10413_row,jule::Int _10423_col,jule::Ref<_118d9a520_File> _10433_f,jule::Str _10443_key,jule::Slice<jule::Any> _10453_args) {
	return _13fe81720_Log(1LLU,_10413_row,_10423_col,_10433_f->_method_path(),_13fe9efa0_errorf(_10443_key,_10453_args));
}



inline jule::Bool _11916a220_bytes_has_prefix(jule::Slice<jule::U8> _11421_bytes,jule::Str _11436_prefix) {
	if (_11421_bytes.len() < _11436_prefix.len()) {
		return false;
	}
	{
		auto &__julec_range_expr = _11436_prefix;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _11916a220_i = 0;
			_iter_begin_4755142384:;
			{
				if (_11421_bytes[static_cast<jule::Int>(_11916a220_i)] != _11436_prefix[static_cast<jule::Int>(_11916a220_i)]) {
					return false;
				}
			}
			_iter_next_4755142384:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_11916a220_i; goto _iter_begin_4755142384; }
			_iter_end_4755142384:;
		}
	}
	return true;
}



inline jule::Str _11916a220_float_fmt_e(jule::Slice<jule::U8> _12616_txt,jule::Int _12633_i) {
	jule::Str _12643_lit = jule::Str();
	(_12633_i)++;
	if (_12633_i >= _12616_txt.len()) {
		return _12643_lit;
	}
	jule::U8 _1329_b = _12616_txt[static_cast<jule::Int>(_12633_i)];
	if ((_1329_b == '+') || (_1329_b == '-')) {
		(_12633_i)++;
		if (_12633_i >= _12616_txt.len()) {
			return _12643_lit;
		}
	}
	jule::Int _1409_first = _12633_i;
	_iter_begin_4755159536:;
	if (!(_12633_i < _12616_txt.len())) { goto _iter_end_4755159536; }
	{
		jule::U8 _14213_b = _12616_txt[static_cast<jule::Int>(_12633_i)];
		if ((!(_11911a8a0_is_decimal(_14213_b)))) {
			goto _iter_end_4755159536;
		}
	}
	_iter_next_4755159536:;
	(_12633_i)++;
	goto _iter_begin_4755159536;
	_iter_end_4755159536:;
	if (_12633_i == _1409_first) {
		_12643_lit = jule::Str("", 0);
		return _12643_lit;
	}
	_12643_lit = static_cast<jule::Str>(_12616_txt.slice(0LL,static_cast<jule::Int>(_12633_i)));
	return _12643_lit;
}



inline jule::Str _11916a220_float_fmt_p(jule::Slice<jule::U8> _15416_txt,jule::Int _15429_i) {
	return _11916a220_float_fmt_e(_15416_txt,_15429_i);
}



inline jule::Str _11916a220_float_fmt_dotnp(jule::Slice<jule::U8> _15620_txt,jule::Int _15637_i) {
	if (_15620_txt[static_cast<jule::Int>(_15637_i)] != '.') {
		return jule::Str("", 0);
	}
	(_15637_i)++;
	_julec_label_loop:;
	_iter_begin_4755171232:;
	if (!(_15637_i < _15620_txt.len())) { goto _iter_end_4755171232; }
	{
		jule::U8 _16413_b = _15620_txt[static_cast<jule::Int>(_15637_i)];
		{
			if (!((_11911a8a0_is_decimal(_16413_b)))) { goto _case_end_4755175936; }
			_case_begin_4755175936:;
			{
				goto _iter_next_4755171232;
			}
			goto _match_end_4755175376;
			_case_end_4755175936:;
			if (!((_11916a220_is_float_fmt_p(_16413_b,_15637_i)))) { goto _case_end_4755176048; }
			_case_begin_4755176048:;
			{
				return _11916a220_float_fmt_p(_15620_txt,_15637_i);
			}
			goto _match_end_4755175376;
			_case_end_4755176048:;
			_case_begin_4755175632:;
			{
				goto _iter_end_4755171232;
			}
			goto _match_end_4755175376;
			_case_end_4755175632:;
			_match_end_4755175376:;
		}
	}
	_iter_next_4755171232:;
	(_15637_i)++;
	goto _iter_begin_4755171232;
	_iter_end_4755171232:;
	return jule::Str("", 0);
}



inline jule::Str _11916a220_float_fmt_dotfp(jule::Slice<jule::U8> _17420_txt,jule::Int _17437_i) {
	_17437_i+=2LL;
	return _11916a220_float_fmt_e(_17420_txt,_17437_i);
}



inline jule::Str _11916a220_float_fmt_dotp(jule::Slice<jule::U8> _18119_txt,jule::Int _18136_i) {
	(_18136_i)++;
	return _11916a220_float_fmt_e(_18119_txt,_18136_i);
}



inline jule::Str _11916a220_float_num(jule::Slice<jule::U8> _18814_txt,jule::Int _18831_i) {
	jule::Str _18841_lit = jule::Str();
	(_18831_i)++;
	_iter_begin_4755187520:;
	if (!(_18831_i < _18814_txt.len())) { goto _iter_end_4755187520; }
	{
		jule::U8 _19113_b = _18814_txt[static_cast<jule::Int>(_18831_i)];
		if ((_18831_i > 1LL) && ((_19113_b == 'e') || (_19113_b == 'E'))) {
			_18841_lit = _11916a220_float_fmt_e(_18814_txt,_18831_i);
			return _18841_lit;
		}
		if ((!(_11911a8a0_is_decimal(_19113_b)))) {
			goto _iter_end_4755187520;
		}
	}
	_iter_next_4755187520:;
	(_18831_i)++;
	goto _iter_begin_4755187520;
	_iter_end_4755187520:;
	if (_18831_i == 1LL) {
		return _18841_lit;
	}
	_18841_lit = static_cast<jule::Str>(_18814_txt.slice(0LL,static_cast<jule::Int>(_18831_i)));
	return _18841_lit;
}



inline jule::Str _11916a220_common_num(jule::Slice<jule::U8> _20615_txt) {
	jule::Str _20630_lit = jule::Str();
	jule::Int _20713_i = 0LL;
	_julec_label_loop:;
	_iter_begin_4755198800:;
	if (!(_20713_i < _20615_txt.len())) { goto _iter_end_4755198800; }
	{
		jule::U8 _21013_b = _20615_txt[static_cast<jule::Int>(_20713_i)];
		{
			if (!((_21013_b == '.'))) { goto _case_end_4755202128; }
			_case_begin_4755202128:;
			{
				_20630_lit = _11916a220_float_num(_20615_txt,_20713_i);
				return _20630_lit;
			}
			goto _match_end_4755201808;
			_case_end_4755202128:;
			if (!((_11916a220_is_float_fmt_e(_21013_b,_20713_i)))) { goto _case_end_4755202240; }
			_case_begin_4755202240:;
			{
				_20630_lit = _11916a220_float_fmt_e(_20615_txt,_20713_i);
				return _20630_lit;
			}
			goto _match_end_4755201808;
			_case_end_4755202240:;
			if (!(((!(_11911a8a0_is_decimal(_21013_b)))))) { goto _case_end_4755202352; }
			_case_begin_4755202352:;
			{
				goto _iter_end_4755198800;
			}
			goto _match_end_4755201808;
			_case_end_4755202352:;
			_match_end_4755201808:;
		}
	}
	_iter_next_4755198800:;
	(_20713_i)++;
	goto _iter_begin_4755198800;
	_iter_end_4755198800:;
	if (_20713_i == 0LL) {
		return _20630_lit;
	}
	_20630_lit = static_cast<jule::Str>(_20615_txt.slice(0LL,static_cast<jule::Int>(_20713_i)));
	return _20630_lit;
}



inline jule::Str _11916a220_binary_num(jule::Slice<jule::U8> _22415_txt) {
	jule::Str _22430_lit = jule::Str();
	if ((!(_11916a220_bytes_has_prefix(_22415_txt,jule::Str("0b", 2))))) {
		_22430_lit = jule::Str("", 0);
		return _22430_lit;
	}
	if (_22415_txt.len() < 2LL) {
		return _22430_lit;
	}
	
	jule::Int _23313_i = 2LL;
	_iter_begin_4755213152:;
	if (!(_23313_i < _22415_txt.len())) { goto _iter_end_4755213152; }
	{
		if ((!(_11911a8a0_is_binary(_22415_txt[static_cast<jule::Int>(_23313_i)])))) {
			goto _iter_end_4755213152;
		}
	}
	_iter_next_4755213152:;
	(_23313_i)++;
	goto _iter_begin_4755213152;
	_iter_end_4755213152:;
	if (_23313_i == 2LL) {
		return _22430_lit;
	}
	_22430_lit = static_cast<jule::Str>(_22415_txt.slice(0LL,static_cast<jule::Int>(_23313_i)));
	return _22430_lit;
}



inline jule::Bool _11916a220_is_float_fmt_e(jule::U8 _24619_b,jule::Int _24628_i) {
	return (_24628_i > 0LL) && ((_24619_b == 'e') || (_24619_b == 'E'));
}



inline jule::Bool _11916a220_is_float_fmt_p(jule::U8 _24719_b,jule::Int _24728_i) {
	return (_24728_i > 0LL) && ((_24719_b == 'p') || (_24719_b == 'P'));
}



inline jule::Bool _11916a220_is_float_fmt_dotnp(jule::Slice<jule::U8> _24923_txt,jule::Int _24940_i) {
	if (_24923_txt[static_cast<jule::Int>(_24940_i)] != '.') {
		return false;
	}
	(_24940_i)++;
	_julec_label_loop:;
	_iter_begin_4755230800:;
	if (!(_24940_i < _24923_txt.len())) { goto _iter_end_4755230800; }
	{
		jule::U8 _25713_b = _24923_txt[static_cast<jule::Int>(_24940_i)];
		{
			if (!((_11911a8a0_is_decimal(_25713_b)))) { goto _case_end_4755234448; }
			_case_begin_4755234448:;
			{
				goto _iter_next_4755230800;
			}
			goto _match_end_4755233888;
			_case_end_4755234448:;
			if (!((_11916a220_is_float_fmt_p(_25713_b,_24940_i)))) { goto _case_end_4755234560; }
			_case_begin_4755234560:;
			{
				return true;
			}
			goto _match_end_4755233888;
			_case_end_4755234560:;
			_case_begin_4755234144:;
			{
				goto _iter_end_4755230800;
			}
			goto _match_end_4755233888;
			_case_end_4755234144:;
			_match_end_4755233888:;
		}
	}
	_iter_next_4755230800:;
	(_24940_i)++;
	goto _iter_begin_4755230800;
	_iter_end_4755230800:;
	return false;
}



inline jule::Bool _11916a220_is_float_fmt_dotp(jule::Slice<jule::U8> _26822_txt,jule::Int _26835_i) {
	{
		if (!((_26822_txt.len() < 3LL))) { goto _case_end_4755241584; }
		_case_begin_4755241584:;
		{
			goto _case_begin_4755241696;
		}
		goto _match_end_4755240224;
		_case_end_4755241584:;
		if (!((_26822_txt[static_cast<jule::Int>(_26835_i)] != '.'))) { goto _case_end_4755241696; }
		_case_begin_4755241696:;
		{
			goto _case_begin_4755242560;
		}
		goto _match_end_4755240224;
		_case_end_4755241696:;
		if (!(((_26822_txt[static_cast<jule::Int>(_26835_i + 1LL)] != 'p') && (_26822_txt[static_cast<jule::Int>(_26835_i + 1LL)] != 'P')))) { goto _case_end_4755242560; }
		_case_begin_4755242560:;
		{
			return false;
		}
		goto _match_end_4755240224;
		_case_end_4755242560:;
		_case_begin_4755240432:;
		{
			return true;
		}
		goto _match_end_4755240224;
		_case_end_4755240432:;
		_match_end_4755240224:;
	}
}



inline jule::Bool _11916a220_is_float_fmt_dotfp(jule::Slice<jule::U8> _27723_txt,jule::Int _27736_i) {
	{
		if (!((_27723_txt.len() < 4LL))) { goto _case_end_4755250016; }
		_case_begin_4755250016:;
		{
			goto _case_begin_4755250128;
		}
		goto _match_end_4755248640;
		_case_end_4755250016:;
		if (!((_27723_txt[static_cast<jule::Int>(_27736_i)] != '.'))) { goto _case_end_4755250128; }
		_case_begin_4755250128:;
		{
			goto _case_begin_4755250976;
		}
		goto _match_end_4755248640;
		_case_end_4755250128:;
		if (!(((_27723_txt[static_cast<jule::Int>(_27736_i + 1LL)] != 'f') && (_27723_txt[static_cast<jule::Int>(_27736_i + 1LL)] != 'F')))) { goto _case_end_4755250976; }
		_case_begin_4755250976:;
		{
			goto _case_begin_4755251088;
		}
		goto _match_end_4755248640;
		_case_end_4755250976:;
		if (!(((_27723_txt[static_cast<jule::Int>(_27736_i + 2LL)] != 'p') && (_27723_txt[static_cast<jule::Int>(_27736_i + 1LL)] != 'P')))) { goto _case_end_4755251088; }
		_case_begin_4755251088:;
		{
			return false;
		}
		goto _match_end_4755248640;
		_case_end_4755251088:;
		_case_begin_4755248896:;
		{
			return true;
		}
		goto _match_end_4755248640;
		_case_end_4755248896:;
		_match_end_4755248640:;
	}
}



inline jule::Str _11916a220_octal_num(jule::Slice<jule::U8> _28714_txt) {
	jule::Str _28729_lit = jule::Str();
	if (_28714_txt[static_cast<jule::Int>(0LL)] != '0') {
		_28729_lit = jule::Str("", 0);
		return _28729_lit;
	}
	if (_28714_txt.len() < 2LL) {
		return _28729_lit;
	}
	jule::Int _29513_octal_start = 1LL;
	if (_28714_txt[static_cast<jule::Int>(1LL)] == 'o') {
		if (_28714_txt.len() < 3LL) {
			return _28729_lit;
		}
		(_29513_octal_start)++;
	}
	jule::Int _30413_i = _29513_octal_start;
	_iter_begin_4755266704:;
	if (!(_30413_i < _28714_txt.len())) { goto _iter_end_4755266704; }
	{
		jule::U8 _30613_b = _28714_txt[static_cast<jule::Int>(_30413_i)];
		if (_11916a220_is_float_fmt_e(_30613_b,_30413_i)) {
			_28729_lit = _11916a220_float_fmt_e(_28714_txt,_30413_i);
			return _28729_lit;
		}
		if ((!(_11911a8a0_is_octal(_30613_b)))) {
			goto _iter_end_4755266704;
		}
	}
	_iter_next_4755266704:;
	(_30413_i)++;
	goto _iter_begin_4755266704;
	_iter_end_4755266704:;
	if (_30413_i == _29513_octal_start) {
		return _28729_lit;
	}
	_28729_lit = static_cast<jule::Str>(_28714_txt.slice(0LL,static_cast<jule::Int>(_30413_i)));
	return _28729_lit;
}



inline jule::Str _11916a220_hex_num(jule::Slice<jule::U8> _32112_txt) {
	jule::Str _32127_lit = jule::Str();
	if (_32112_txt.len() < 3LL) {
		return _32127_lit;
	}
	if ((_32112_txt[static_cast<jule::Int>(0LL)] != '0') || ((_32112_txt[static_cast<jule::Int>(1LL)] != 'x') && (_32112_txt[static_cast<jule::Int>(1LL)] != 'X'))) {
		return _32127_lit;
	}
	
	jule::Int _33013_i = 2LL;
	_julec_label_loop:;
	_iter_begin_4755285520:;
	if (!(_33013_i < _32112_txt.len())) { goto _iter_end_4755285520; }
	{
		jule::U8 _33313_b = _32112_txt[static_cast<jule::Int>(_33013_i)];
		{
			if (!((_11916a220_is_float_fmt_dotp(_32112_txt,_33013_i)))) { goto _case_end_4755288896; }
			_case_begin_4755288896:;
			{
				_32127_lit = _11916a220_float_fmt_dotp(_32112_txt,_33013_i);
				return _32127_lit;
			}
			goto _match_end_4755288544;
			_case_end_4755288896:;
			if (!((_11916a220_is_float_fmt_dotfp(_32112_txt,_33013_i)))) { goto _case_end_4755289008; }
			_case_begin_4755289008:;
			{
				_32127_lit = _11916a220_float_fmt_dotfp(_32112_txt,_33013_i);
				return _32127_lit;
			}
			goto _match_end_4755288544;
			_case_end_4755289008:;
			if (!((_11916a220_is_float_fmt_p(_33313_b,_33013_i)))) { goto _case_end_4755289120; }
			_case_begin_4755289120:;
			{
				_32127_lit = _11916a220_float_fmt_p(_32112_txt,_33013_i);
				return _32127_lit;
			}
			goto _match_end_4755288544;
			_case_end_4755289120:;
			if (!((_11916a220_is_float_fmt_dotnp(_32112_txt,_33013_i)))) { goto _case_end_4755289232; }
			_case_begin_4755289232:;
			{
				_32127_lit = _11916a220_float_fmt_dotnp(_32112_txt,_33013_i);
				return _32127_lit;
			}
			goto _match_end_4755288544;
			_case_end_4755289232:;
			if (!(((!(_11911a8a0_is_hex(_33313_b)))))) { goto _case_end_4755289344; }
			_case_begin_4755289344:;
			{
				goto _iter_end_4755285520;
			}
			goto _match_end_4755288544;
			_case_end_4755289344:;
			_match_end_4755288544:;
		}
	}
	_iter_next_4755285520:;
	(_33013_i)++;
	goto _iter_begin_4755285520;
	_iter_end_4755285520:;
	if (_33013_i == 2LL) {
		return _32127_lit;
	}
	_32127_lit = static_cast<jule::Str>(_32112_txt.slice(0LL,static_cast<jule::Int>(_33013_i)));
	return _32127_lit;
}



inline jule::Str _11916a220_hex_escape(jule::Slice<jule::U8> _35815_txt,jule::Int _35828_n) {
	jule::Str _35838_seq = jule::Str();
	if (_35815_txt.len() < _35828_n) {
		return _35838_seq;
	}
	
	jule::Int _36413_i = 2LL;
	_iter_begin_4755320720:;
	if (!(_36413_i < _35828_n)) { goto _iter_end_4755320720; }
	{
		if ((!(_11911a8a0_is_hex(_35815_txt[static_cast<jule::Int>(_36413_i)])))) {
			return _35838_seq;
		}
	}
	_iter_next_4755320720:;
	(_36413_i)++;
	goto _iter_begin_4755320720;
	_iter_end_4755320720:;
	_35838_seq=static_cast<jule::Str>(_35815_txt.slice(0LL,static_cast<jule::Int>(_35828_n)));
	return _35838_seq;
}



inline jule::Str _11916a220_big_unicode_point_escape(jule::Slice<jule::U8> _37629_txt) {
	return _11916a220_hex_escape(_37629_txt,10LL);
}



inline jule::Str _11916a220_little_unicode_point_escape(jule::Slice<jule::U8> _37932_txt) {
	return _11916a220_hex_escape(_37932_txt,6LL);
}



inline jule::Str _11916a220_hex_byte_escape(jule::Slice<jule::U8> _38220_txt) {
	return _11916a220_hex_escape(_38220_txt,4LL);
}



inline jule::Str _11916a220_byte_escape(jule::Slice<jule::U8> _38516_txt) {
	jule::Str _38531_seq = jule::Str();
	if (_38516_txt.len() < 4LL) {
		return _38531_seq;
	}
	if (((!(_11911a8a0_is_octal(_38516_txt[static_cast<jule::Int>(1LL)]))) || (!(_11911a8a0_is_octal(_38516_txt[static_cast<jule::Int>(2LL)])))) || (!(_11911a8a0_is_octal(_38516_txt[static_cast<jule::Int>(3LL)])))) {
		return _38531_seq;
	}
	_38531_seq = static_cast<jule::Str>(_38516_txt.slice(0LL,static_cast<jule::Int>(4LL)));
	return _38531_seq;
}



inline jule::Slice<_13fe81720_Log> _11916a220_lex(jule::Ref<_118d9a520_File> _77516_f,jule::Slice<jule::U8> _77526_text) {
	if ((!(jule::real(_77516_f)))) {
		return nullptr;
	}
	_11916a220_Lex _78013_lex = _11916a220_Lex(jule::Bool(),_1192e4e90_Vector_0(),_77526_text,_77516_f,0LL,jule::Int(),-1LL,jule::Slice<_13fe81720_Log>());
	_78013_lex._method_new_line();
	_78013_lex._method_lex();
	if (_78013_lex._field_errors.len() > 0LL) {
		return _78013_lex._field_errors;
	}
	_77516_f->_field__tokens=_78013_lex._field_tokens;
	return nullptr;
}



inline jule::Ref<_118da92c0_FileInfo> _118da92c0_parse_file(jule::Ref<_118d9a520_File> _2223_f) {
	if ((!(jule::real(_2223_f)))) {
		return jule::new_ref<_118da92c0_FileInfo>();
	}
	jule::Ref<_118da92c0_FileInfo> _2713_finf = jule::new_struct<_118da92c0_FileInfo>(new( std::nothrow ) _118da92c0_FileInfo());
	std::tie(_2713_finf->_field_ast,_2713_finf->_field_errors) = _118da92c0_parse_fileset(_2223_f);
	if (_2713_finf->_field_errors != nullptr) {
		jule::drop(_2713_finf->_field_ast);
	}
	return _2713_finf;
}



inline std::tuple<jule::Ref<_118d8a140_Ast>,jule::Slice<_13fe81720_Log>> _118da92c0_parse_fileset(jule::Ref<_118d9a520_File> _5722_f) {
	jule::Ref<_11953bd10_Parser> _5813_p = jule::new_struct<_11953bd10_Parser>(new( std::nothrow ) _11953bd10_Parser());
	_5813_p->_method_parse(_5722_f);
	return std::make_tuple(_5813_p->_field_ast,_5813_p->_field_errors);
}



inline jule::Ref<_118d9a790_ScopeTree> _11912dd80_new_scope(void) {
	return jule::new_struct<_118d9a790_ScopeTree>(new( std::nothrow ) _118d9a790_ScopeTree());
}



inline std::tuple<jule::Bool,jule::Bool> _11912dd80_is_st(_11911a8a0_Token _4310_current,_11911a8a0_Token _4326_prev) {
	jule::Bool _4351_terminated = jule::Bool();
	jule::Bool _4341_ok = jule::Bool();
	_4341_ok=(_4310_current._field_id == 5LLU) || (_4326_prev._field_row < _4310_current._field_row);
	_4351_terminated=_4310_current._field_id == 5LLU;
	return std::make_tuple(_4341_ok,_4351_terminated);
}



inline std::tuple<jule::Int,jule::Bool> _11912dd80_next_st_pos(jule::Slice<_11911a8a0_Token> _5016_tokens,jule::Int _5033_start) {
	jule::Int _5113_brace_n = 0LL;
	jule::Int _5213_i = _5033_start;
	_iter_begin_4756403744:;
	if (!(_5213_i < _5016_tokens.len())) { goto _iter_end_4756403744; }
	{
		jule::Bool _5417_ok = false;
		jule::Bool _5517_terminated = false;
		_11911a8a0_Token _5613_tok = _5016_tokens[static_cast<jule::Int>(_5213_i)];
		{
			auto &_match_expr{ _5613_tok._field_id };
			if (!((3LLU) == _match_expr)) { goto _case_end_4756410176; }
			_case_begin_4756410176:;
			{
				{
					auto &_match_expr{ _5613_tok._field_kind };
					if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4756418912; }
					_case_begin_4756418912:;
					{
						if ((_5113_brace_n == 0LL) && (_5213_i > _5033_start)) {
							std::tie(_5417_ok,_5517_terminated) = _11912dd80_is_st(_5613_tok,_5016_tokens[static_cast<jule::Int>(_5213_i - 1LL)]);
							if (_5417_ok) {
								goto _julec_label_return;
							}
						}
						(_5113_brace_n)++;
						goto _iter_next_4756403744;
					}
					goto _match_end_4756410528;
					_case_end_4756418912:;
					_case_begin_4756411984:;
					{
						(_5113_brace_n)--;
						if ((_5113_brace_n == 0LL) && ((_5213_i + 1LL) < _5016_tokens.len())) {
							std::tie(_5417_ok,_5517_terminated) = _11912dd80_is_st(_5016_tokens[static_cast<jule::Int>(_5213_i + 1LL)],_5613_tok);
							if (_5417_ok) {
								(_5213_i)++;
								goto _julec_label_return;
							}
						}
						goto _iter_next_4756403744;
					}
					goto _match_end_4756410528;
					_case_end_4756411984:;
					_match_end_4756410528:;
				}
			}
			goto _match_end_4756407696;
			_case_end_4756410176:;
			_match_end_4756407696:;
		}
		if (_5113_brace_n != 0LL) {
			goto _iter_next_4756403744;
		} else if (_5213_i > _5033_start) {
			_11911a8a0_Token _8817_prev = _5016_tokens[static_cast<jule::Int>(_5213_i - 1LL)];
			if (((_8817_prev._field_id == 7LLU) && _11911a8a0_is_bin_op(_8817_prev._field_kind)) && (_8817_prev._field_row < _5613_tok._field_row)) {
				goto _iter_next_4756403744;
			}
			std::tie(_5417_ok,_5517_terminated) = _11912dd80_is_st(_5613_tok,_8817_prev);
		} else {
			std::tie(_5417_ok,_5517_terminated) = _11912dd80_is_st(_5613_tok,_5613_tok);
		}
		if ((!(_5417_ok))) {
			goto _iter_next_4756403744;
		}
		_julec_label_return:;
		if (_5517_terminated) {
			(_5213_i)++;
		}
		return std::make_tuple(_5213_i,_5517_terminated);
	}
	_iter_next_4756403744:;
	(_5213_i)++;
	goto _iter_begin_4756403744;
	_iter_end_4756403744:;
	return std::make_tuple(_5213_i,false);
}



inline std::tuple<jule::Slice<_11911a8a0_Token>,jule::Bool> _11912dd80_skip_st(jule::Int& _11117_i,jule::Slice<_11911a8a0_Token> _11129_tokens) {
	jule::Int _1129_start = _11117_i;
	jule::Bool _11313_terminated = false;
	std::tie(_11117_i,_11313_terminated) = _11912dd80_next_st_pos(_11129_tokens,_1129_start);
	jule::Slice<_11911a8a0_Token> _11513_st_tokens = _11129_tokens.slice(static_cast<jule::Int>(_1129_start),static_cast<jule::Int>(_11117_i));
	if (_11313_terminated) {
		if (_11513_st_tokens.len() == 1LL) {
			std::tie(_11513_st_tokens,_11313_terminated) = _11912dd80_skip_st(_11117_i,_11129_tokens);
			return std::make_tuple(_11513_st_tokens,_11313_terminated);
		}
		_11513_st_tokens=_11513_st_tokens.slice(0LL,static_cast<jule::Int>(_11513_st_tokens.len() - 1LL));
	}
	return std::make_tuple(_11513_st_tokens,_11313_terminated);
}



inline jule::Slice<jule::Ref<_11912dd80_Stmt>> _11912dd80_split_stms(jule::Slice<_11911a8a0_Token> _13319_tokens) {
	jule::Slice<jule::Ref<_11912dd80_Stmt>> _13413_stms = nullptr;
	jule::Int _13513_pos = 0LL;
	_iter_begin_4756448304:;
	if (!(_13513_pos < _13319_tokens.len())) { goto _iter_end_4756448304; }
	{
		jule::Slice<_11911a8a0_Token> _13718_tokens;
		jule::Bool _13726_terminated;
		std::tie(_13718_tokens,_13726_terminated) = _11912dd80_skip_st(_13513_pos,_13319_tokens);
		_13413_stms=append(_13413_stms,jule::Slice<jule::Ref<_11912dd80_Stmt>>({jule::new_struct<_11912dd80_Stmt>(new( std::nothrow ) _11912dd80_Stmt(_13718_tokens,_13726_terminated))}));
	}
	_iter_next_4756448304:;
	goto _iter_begin_4756448304;
	_iter_end_4756448304:;
	return _13413_stms;
}



inline jule::Slice<_11911a8a0_Token> _11943fdb0_is_fn_call(jule::Slice<_11911a8a0_Token> _3819_tokens) {
	{
		auto &_match_expr{ _3819_tokens[static_cast<jule::Int>(0LL)]._field_id };
		if (!((3LLU) == _match_expr || (2LLU) == _match_expr || (1LLU) == _match_expr)) { goto _case_end_4756467104; }
		goto _match_end_4756462640;
		_case_end_4756467104:;
		_case_begin_4756463648:;
		{
			_11911a8a0_Token _4613_tok = _3819_tokens[static_cast<jule::Int>(_3819_tokens.len() - 1LL)];
			if ((_4613_tok._field_id != 3LLU) && (_4613_tok._field_kind != jule::Str(")", 1))) {
				return nullptr;
			}
		}
		goto _match_end_4756462640;
		_case_end_4756463648:;
		_match_end_4756462640:;
	}
	_11911a8a0_Token _519_tok = _3819_tokens[static_cast<jule::Int>(_3819_tokens.len() - 1LL)];
	if ((_519_tok._field_id != 3LLU) || (_519_tok._field_kind != jule::Str(")", 1))) {
		return nullptr;
	}
	jule::Int _5513_brace_n = 0LL;
	jule::I64 _5813_i = _3819_tokens.len() - 1LL;
	_iter_begin_4756475552:;
	if (!(_5813_i >= 1LL)) { goto _iter_end_4756475552; }
	{
		_11911a8a0_Token _6013_tok = _3819_tokens[static_cast<jule::Int>(_5813_i)];
		if (_6013_tok._field_id == 3LLU) {
			{
				auto &_match_expr{ _6013_tok._field_kind };
				if (!((jule::Str(")", 1)) == _match_expr)) { goto _case_end_4756480688; }
				_case_begin_4756480688:;
				{
					(_5513_brace_n)++;
				}
				goto _match_end_4756479728;
				_case_end_4756480688:;
				if (!((jule::Str("(", 1)) == _match_expr)) { goto _case_end_4756480800; }
				_case_begin_4756480800:;
				{
					(_5513_brace_n)--;
				}
				goto _match_end_4756479728;
				_case_end_4756480800:;
				_match_end_4756479728:;
			}
			if (_5513_brace_n == 0LL) {
				return _3819_tokens.slice(0LL,static_cast<jule::Int>(_5813_i));
			}
		}
	}
	_iter_next_4756475552:;
	(_5813_i)--;
	goto _iter_begin_4756475552;
	_iter_end_4756475552:;
	return nullptr;
}



inline jule::Ref<_11943fdb0_CallData> _11943fdb0_get_call_data(jule::Slice<_11911a8a0_Token> _8022_tokens) {
	jule::Ref<_11943fdb0_CallData> _8113_data = jule::new_struct<_11943fdb0_CallData>(new( std::nothrow ) _11943fdb0_CallData());
	std::tie(_8113_data->_field_expr_tokens,_8113_data->_field_args_tokens) = _11953bd10_range_last(_8022_tokens);
	if (_8113_data->_field_expr_tokens.len() == 0LL) {
		return _8113_data;
	}
	_11911a8a0_Token _889_token = _8113_data->_field_expr_tokens[static_cast<jule::Int>(_8113_data->_field_expr_tokens.len() - 1LL)];
	if ((_889_token._field_id == 3LLU) && (_889_token._field_kind == jule::Str("]", 1))) {
		std::tie(_8113_data->_field_expr_tokens,_8113_data->_field_generics_tokens) = _11953bd10_range_last(_8113_data->_field_expr_tokens);
	}
	return _8113_data;
}



inline jule::Slice<_11911a8a0_Token> _11943fdb0_get_block_expr(jule::Slice<_11911a8a0_Token> _9623_tokens) {
	jule::Int _9713_brace_n = 0LL;
	{
		auto &__julec_range_expr = _9623_tokens;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _11943fdb0_i = 0;
			_11911a8a0_Token _11943fdb0_tok = *__julec_range_begin;
			_iter_begin_4756497440:;
			{
				if (_11943fdb0_tok._field_id == 3LLU) {
					{
						auto &_match_expr{ _11943fdb0_tok._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr)) { goto _case_end_4756502736; }
						_case_begin_4756502736:;
						{
							if (_9713_brace_n > 0LL) {
								(_9713_brace_n)++;
								goto _match_end_4756500704;
							}
							return _9623_tokens.slice(0LL,static_cast<jule::Int>(_11943fdb0_i));
						}
						goto _match_end_4756500704;
						_case_end_4756502736:;
						if (!((jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4756502976; }
						_case_begin_4756502976:;
						{
							(_9713_brace_n)++;
						}
						goto _match_end_4756500704;
						_case_end_4756502976:;
						_case_begin_4756501616:;
						{
							(_9713_brace_n)--;
						}
						goto _match_end_4756500704;
						_case_end_4756501616:;
						_match_end_4756500704:;
					}
				}
			}
			_iter_next_4756497440:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_11943fdb0_i; _11943fdb0_tok = *__julec_range_begin; goto _iter_begin_4756497440; }
			_iter_end_4756497440:;
		}
	}
	return nullptr;
}



inline std::tuple<jule::Slice<_11911a8a0_Token>,jule::Slice<_11911a8a0_Token>> _11943fdb0_split_colon(jule::Slice<_11911a8a0_Token> _12220_tokens) {
	jule::Int _12313_range_n = 0LL;
	{
		auto &__julec_range_expr = _12220_tokens;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _11943fdb0_i = 0;
			_11911a8a0_Token _11943fdb0_token = *__julec_range_begin;
			_iter_begin_4756499392:;
			{
				{
					auto &_match_expr{ _11943fdb0_token._field_id };
					if (!((3LLU) == _match_expr)) { goto _case_end_4756510544; }
					_case_begin_4756510544:;
					{
						{
							auto &_match_expr{ _11943fdb0_token._field_kind };
							if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4756513712; }
							_case_begin_4756513712:;
							{
								(_12313_range_n)++;
								goto _iter_next_4756499392;
							}
							goto _match_end_4756510832;
							_case_end_4756513712:;
							_case_begin_4756512640:;
							{
								(_12313_range_n)--;
							}
							goto _match_end_4756510832;
							_case_end_4756512640:;
							_match_end_4756510832:;
						}
					}
					goto _match_end_4756509632;
					_case_end_4756510544:;
					if (!((11LLU) == _match_expr)) { goto _case_end_4756510656; }
					_case_begin_4756510656:;
					{
						if (_12313_range_n < 1LL) {
							jule::Slice<_11911a8a0_Token> _14025_l = _12220_tokens.slice(0LL,static_cast<jule::Int>(_11943fdb0_i));
							jule::Slice<_11911a8a0_Token> _14125_r = _12220_tokens.slice(static_cast<jule::Int>(_11943fdb0_i + 1LL));
							return std::make_tuple(_14025_l,_14125_r);
						}
					}
					goto _match_end_4756509632;
					_case_end_4756510656:;
					_match_end_4756509632:;
				}
			}
			_iter_next_4756499392:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_11943fdb0_i; _11943fdb0_token = *__julec_range_begin; goto _iter_begin_4756499392; }
			_iter_end_4756499392:;
		}
	}
	return std::make_tuple(nullptr,nullptr);
}



inline jule::Slice<_11911a8a0_Token> _11943fdb0_eliminate_comments(jule::Slice<_11911a8a0_Token> _18027_tokens) {
	jule::Slice<_11911a8a0_Token> _18113_cutted = nullptr;
	{
		auto &__julec_range_expr = _18027_tokens;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			_11911a8a0_Token _11943fdb0_token = *__julec_range_begin;
			_iter_begin_4756523584:;
			{
				if (_11943fdb0_token._field_id != 18LLU) {
					_18113_cutted=append(_18113_cutted,jule::Slice<_11911a8a0_Token>({_11943fdb0_token}));
				}
			}
			_iter_next_4756523584:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11943fdb0_token = *__julec_range_begin; goto _iter_begin_4756523584; }
			_iter_end_4756523584:;
		}
	}
	return _18113_cutted;
}



inline jule::Int _11943fdb0_find_lowest_prec_op(jule::Slice<_11911a8a0_Token> _19224_tokens) {
	_11943fdb0_Precedencer _19313_prec = _11943fdb0_Precedencer();
	jule::Int _19413_brace_n = 0LL;
	{
		auto &__julec_range_expr = _19224_tokens;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _11943fdb0_i = 0;
			_11911a8a0_Token _11943fdb0_token = *__julec_range_begin;
			_iter_begin_4756533264:;
			{
				{
					if (!((_11943fdb0_token._field_id == 3LLU))) { goto _case_end_4756535776; }
					_case_begin_4756535776:;
					{
						{
							auto &_match_expr{ _11943fdb0_token._field_kind };
							if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr)) { goto _case_end_4756539776; }
							_case_begin_4756539776:;
							{
								(_19413_brace_n)++;
							}
							goto _match_end_4756537184;
							_case_end_4756539776:;
							_case_begin_4756537792:;
							{
								(_19413_brace_n)--;
							}
							goto _match_end_4756537184;
							_case_end_4756537792:;
							_match_end_4756537184:;
						}
						goto _iter_next_4756533264;
					}
					goto _match_end_4756535504;
					_case_end_4756535776:;
					if (!((_11943fdb0_i == 0LL))) { goto _case_end_4756535888; }
					_case_begin_4756535888:;
					{
						goto _iter_next_4756533264;
					}
					goto _match_end_4756535504;
					_case_end_4756535888:;
					if (!((_11943fdb0_token._field_id != 7LLU))) { goto _case_end_4756536000; }
					_case_begin_4756536000:;
					{
						goto _iter_next_4756533264;
					}
					goto _match_end_4756535504;
					_case_end_4756536000:;
					if (!((_19413_brace_n > 0LL))) { goto _case_end_4756536128; }
					_case_begin_4756536128:;
					{
						goto _iter_next_4756533264;
					}
					goto _match_end_4756535504;
					_case_end_4756536128:;
					_match_end_4756535504:;
				}
				_11911a8a0_Token _21913_left = _19224_tokens[static_cast<jule::Int>(_11943fdb0_i - 1LL)];
				if ((_21913_left._field_id == 7LLU) || (_21913_left._field_id == 11LLU)) {
					goto _iter_next_4756533264;
				}
				if (((_11943fdb0_i > 1LL) && (_21913_left._field_id == 3LLU)) && (_21913_left._field_kind == jule::Str("]", 1))) {
					_11911a8a0_Token _22717_lleft = _19224_tokens[static_cast<jule::Int>(_11943fdb0_i - 2LL)];
					if ((_22717_lleft._field_id == 3LLU) && (_22717_lleft._field_kind == jule::Str("[", 1))) {
						if ((_11943fdb0_token._field_kind == jule::Str("&", 1)) || (_11943fdb0_token._field_kind == jule::Str("*", 1))) {
							goto _iter_next_4756533264;
						}
					}
				}
				jule::Int _23613_p = _11943fdb0_token._method_prec();
				if (_23613_p != -1LL) {
					_19313_prec._method_set(_23613_p,jule::Any(_11943fdb0_i));
				}
			}
			_iter_next_4756533264:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_11943fdb0_i; _11943fdb0_token = *__julec_range_begin; goto _iter_begin_4756533264; }
			_iter_end_4756533264:;
		}
	}
	jule::Any _2429_data = _19313_prec._method_get_lower();
	if (_2429_data == nullptr) {
		return -1LL;
	}
	return _2429_data.operator jule::Int();
}



inline jule::Ref<_118d9a790_IdentExpr> _11943fdb0_build_ident_expr(_11911a8a0_Token _24925_token) {
	return jule::new_struct<_118d9a790_IdentExpr>(new( std::nothrow ) _118d9a790_IdentExpr(_24925_token,_24925_token._field_kind,false));
}



inline std::tuple<jule::Slice<_11911a8a0_Token>,jule::Int> _11943fdb0_get_range_expr_tokens(jule::Slice<_11911a8a0_Token> _25730_tokens) {
	jule::Int _25813_range_n = 0LL;
	jule::I64 _25913_i = _25730_tokens.len() - 1LL;
	_iter_begin_4756569472:;
	if (!(_25913_i >= 0LL)) { goto _iter_end_4756569472; }
	{
		_11911a8a0_Token _26113_tok = _25730_tokens[static_cast<jule::Int>(_25913_i)];
		if (_26113_tok._field_id == 3LLU) {
			{
				auto &_match_expr{ _26113_tok._field_kind };
				if (!((jule::Str("}", 1)) == _match_expr || (jule::Str("]", 1)) == _match_expr || (jule::Str(")", 1)) == _match_expr)) { goto _case_end_4756574848; }
				_case_begin_4756574848:;
				{
					(_25813_range_n)++;
				}
				goto _match_end_4756572816;
				_case_end_4756574848:;
				_case_begin_4756573728:;
				{
					(_25813_range_n)--;
				}
				goto _match_end_4756572816;
				_case_end_4756573728:;
				_match_end_4756572816:;
			}
		}
		if (_25813_range_n == 0LL) {
			return std::make_tuple(_25730_tokens.slice(0LL,static_cast<jule::Int>(_25913_i)),_25813_range_n);
		}
	}
	_iter_next_4756569472:;
	(_25913_i)--;
	goto _iter_begin_4756569472;
	_iter_end_4756569472:;
	return std::make_tuple(nullptr,_25813_range_n);
}



inline jule::Bool _118dbfd80_check_assign_tokens(jule::Slice<_11911a8a0_Token> _1624_tokens) {
	if ((_1624_tokens.len() == 0LL) || (!(_11911a8a0_is_assign(_1624_tokens[static_cast<jule::Int>(0LL)]._field_id)))) {
		return false;
	}
	jule::Int _2113_brace_n = 0LL;
	{
		auto &__julec_range_expr = _1624_tokens;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			_11911a8a0_Token _118dbfd80_t = *__julec_range_begin;
			_iter_begin_4756584016:;
			{
				if (_118dbfd80_t._field_id == 3LLU) {
					{
						auto &_match_expr{ _118dbfd80_t._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4756588592; }
						_case_begin_4756588592:;
						{
							(_2113_brace_n)++;
						}
						goto _match_end_4756586560;
						_case_end_4756588592:;
						_case_begin_4756587472:;
						{
							(_2113_brace_n)--;
						}
						goto _match_end_4756586560;
						_case_end_4756587472:;
						_match_end_4756586560:;
					}
				}
				if (_2113_brace_n < 0LL) {
					return false;
				} else if (_2113_brace_n > 0LL) {
					goto _iter_next_4756584016;
				} else if ((_118dbfd80_t._field_id == 7LLU) && _11911a8a0_is_assign_op(_118dbfd80_t._field_kind)) {
					return true;
				}
			}
			_iter_next_4756584016:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _118dbfd80_t = *__julec_range_begin; goto _iter_begin_4756584016; }
			_iter_end_4756584016:;
		}
	}
	return false;
}



inline _13fe81720_Log _11953bd10_make_err(jule::Int _5513_row,jule::Int _5523_col,jule::Ref<_118d9a520_File> _5533_f,jule::Str _5543_key,jule::Slice<jule::Any> _5553_args) {
	return _13fe81720_Log(1LLU,_5513_row,_5523_col,_5533_f->_method_path(),_13fe9efa0_errorf(_5543_key,_5553_args));
}



inline jule::Slice<_11911a8a0_Token> _11953bd10_range(jule::Int& _7415_i,jule::Str _7423_open,jule::Str _7440_close,jule::Slice<_11911a8a0_Token> _7462_tokens) {
	if (_7415_i >= _7462_tokens.len()) {
		return nullptr;
	}
	_11911a8a0_Token _799_tok = _7462_tokens[static_cast<jule::Int>(_7415_i)];
	if ((_799_tok._field_id != 3LLU) || (_799_tok._field_kind != _7423_open)) {
		return nullptr;
	}
	(_7415_i)++;
	jule::Int _8513_range_n = 1LL;
	jule::Int _869_start = _7415_i;
	_iter_begin_4756609696:;
	if (!((_8513_range_n != 0LL) && (_7415_i < _7462_tokens.len()))) { goto _iter_end_4756609696; }
	{
		_11911a8a0_Token _8813_token = _7462_tokens[static_cast<jule::Int>(_7415_i)];
		if (_8813_token._field_id == 3LLU) {
			{
				auto &_match_expr{ _8813_token._field_kind };
				if (!((_7423_open) == _match_expr)) { goto _case_end_4756614720; }
				_case_begin_4756614720:;
				{
					(_8513_range_n)++;
				}
				goto _match_end_4756613760;
				_case_end_4756614720:;
				if (!((_7440_close) == _match_expr)) { goto _case_end_4756614832; }
				_case_begin_4756614832:;
				{
					(_8513_range_n)--;
				}
				goto _match_end_4756613760;
				_case_end_4756614832:;
				_match_end_4756613760:;
			}
		}
	}
	_iter_next_4756609696:;
	(_7415_i)++;
	goto _iter_begin_4756609696;
	_iter_end_4756609696:;
	return _7462_tokens.slice(static_cast<jule::Int>(_869_start),static_cast<jule::Int>(_7415_i - 1LL));
}



inline std::tuple<jule::Slice<_11911a8a0_Token>,jule::Slice<_11911a8a0_Token>> _11953bd10_range_last(jule::Slice<_11911a8a0_Token> _10719_tokens) {
	jule::Slice<_11911a8a0_Token> _10755_cut = jule::Slice<_11911a8a0_Token>();
	jule::Slice<_11911a8a0_Token> _10738_cutted = jule::Slice<_11911a8a0_Token>();
	if (_10719_tokens.len() == 0LL) {
		_10738_cutted = _10719_tokens;
		_10755_cut = nullptr;
		return std::make_tuple(_10738_cutted,_10755_cut);
	} else if (_10719_tokens[static_cast<jule::Int>(_10719_tokens.len() - 1LL)]._field_id != 3LLU) {
		_10738_cutted = _10719_tokens;
		_10755_cut = nullptr;
		return std::make_tuple(_10738_cutted,_10755_cut);
	}
	jule::Int _11413_brace_n = 0LL;
	jule::I64 _11513_i = _10719_tokens.len() - 1LL;
	_iter_begin_5367897392:;
	if (!(_11513_i >= 0LL)) { goto _iter_end_5367897392; }
	{
		_11911a8a0_Token _11713_token = _10719_tokens[static_cast<jule::Int>(_11513_i)];
		if (_11713_token._field_id == 3LLU) {
			{
				auto &_match_expr{ _11713_token._field_kind };
				if (!((jule::Str("}", 1)) == _match_expr || (jule::Str("]", 1)) == _match_expr || (jule::Str(")", 1)) == _match_expr)) { goto _case_end_5367922384; }
				_case_begin_5367922384:;
				{
					(_11413_brace_n)++;
					goto _iter_next_5367897392;
				}
				goto _match_end_4707390992;
				_case_end_5367922384:;
				_case_begin_5367902944:;
				{
					(_11413_brace_n)--;
				}
				goto _match_end_4707390992;
				_case_end_5367902944:;
				_match_end_4707390992:;
			}
		}
		if (_11413_brace_n == 0LL) {
			_10738_cutted = _10719_tokens.slice(0LL,static_cast<jule::Int>(_11513_i));
			_10755_cut = _10719_tokens.slice(static_cast<jule::Int>(_11513_i));
			return std::make_tuple(_10738_cutted,_10755_cut);
		}
	}
	_iter_next_5367897392:;
	(_11513_i)--;
	goto _iter_begin_5367897392;
	_iter_end_5367897392:;
	_10738_cutted = _10719_tokens;
	_10755_cut = nullptr;
	return std::make_tuple(_10738_cutted,_10755_cut);
}



inline std::tuple<jule::Slice<jule::Slice<_11911a8a0_Token>>,jule::Slice<_13fe81720_Log>> _11953bd10_parts(jule::Slice<_11911a8a0_Token> _14514_tokens,jule::Uint _14531_id,jule::Bool _14544_expr_must) {
	if (_14514_tokens.len() == 0LL) {
		return std::make_tuple(nullptr,nullptr);
	}
	jule::Slice<jule::Slice<_11911a8a0_Token>> _15013_parts = nullptr;
	jule::Slice<_13fe81720_Log> _15113_errors = nullptr;
	jule::Int _15313_range_n = 0LL;
	jule::Int _15413_last = 0LL;
	{
		auto &__julec_range_expr = _14514_tokens;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _11953bd10_i = 0;
			_11911a8a0_Token _11953bd10_token = *__julec_range_begin;
			_iter_begin_4706832896:;
			{
				if (_11953bd10_token._field_id == 3LLU) {
					{
						auto &_match_expr{ _11953bd10_token._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_5368197456; }
						_case_begin_5368197456:;
						{
							(_15313_range_n)++;
							goto _iter_next_4706832896;
						}
						goto _match_end_5368208000;
						_case_end_5368197456:;
						_case_begin_5368196928:;
						{
							(_15313_range_n)--;
						}
						goto _match_end_5368208000;
						_case_end_5368196928:;
						_match_end_5368208000:;
					}
				}
				if (_15313_range_n > 0LL) {
					goto _iter_next_4706832896;
				}
				if (_11953bd10_token._field_id == _14531_id) {
					if (_14544_expr_must && ((_11953bd10_i - _15413_last) <= 0LL)) {
						_13fe81720_Log _17421_err = _11953bd10_make_err(_11953bd10_token._field_row,_11953bd10_token._field_column,_11953bd10_token._field_file,jule::Str("missing_expr", 12),jule::Slice<jule::Any>({}));
						_15113_errors=append(_15113_errors,jule::Slice<_13fe81720_Log>({_17421_err}));
					}
					_15013_parts=append(_15013_parts,jule::Slice<jule::Slice<_11911a8a0_Token>>({_14514_tokens.slice(static_cast<jule::Int>(_15413_last),static_cast<jule::Int>(_11953bd10_i))}));
					_15413_last=_11953bd10_i + 1LL;
				}
			}
			_iter_next_4706832896:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_11953bd10_i; _11953bd10_token = *__julec_range_begin; goto _iter_begin_4706832896; }
			_iter_end_4706832896:;
		}
	}
	if (_15413_last < _14514_tokens.len()) {
		_15013_parts=append(_15013_parts,jule::Slice<jule::Slice<_11911a8a0_Token>>({_14514_tokens.slice(static_cast<jule::Int>(_15413_last))}));
	} else if ((!(_14544_expr_must))) {
		_15013_parts=append(_15013_parts,jule::Slice<jule::Slice<_11911a8a0_Token>>({jule::Slice<_11911a8a0_Token>({})}));
	}
	return std::make_tuple(_15013_parts,_15113_errors);
}



inline jule::Str _11953bd10_get_close_kind_of_brace(jule::Str _19128_left) {
	{
		auto &_match_expr{ _19128_left };
		if (!((jule::Str(")", 1)) == _match_expr)) { goto _case_end_4748269616; }
		_case_begin_4748269616:;
		{
			return jule::Str("(", 1);
		}
		goto _match_end_4748267952;
		_case_end_4748269616:;
		if (!((jule::Str("}", 1)) == _match_expr)) { goto _case_end_4748269728; }
		_case_begin_4748269728:;
		{
			return jule::Str("{", 1);
		}
		goto _match_end_4748267952;
		_case_end_4748269728:;
		if (!((jule::Str("]", 1)) == _match_expr)) { goto _case_end_4748270624; }
		_case_begin_4748270624:;
		{
			return jule::Str("[", 1);
		}
		goto _match_end_4748267952;
		_case_end_4748270624:;
		_case_begin_4748268048:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4748267952;
		_case_end_4748268048:;
		_match_end_4748267952:;
	}
}



inline _13fe81720_Log _11953bd10_compiler_err(_11911a8a0_Token _20017_token,jule::Str _20031_key,jule::Slice<jule::Any> _20041_args) {
	return _13fe81720_Log(1LLU,_20017_token._field_row,_20017_token._field_column,_20017_token._field_file->_method_path(),_13fe9efa0_errorf(_20031_key,_20041_args));
}



inline jule::Ref<_118d9a790_Comment> _11953bd10_build_comment(_11911a8a0_Token _21022_token) {
	_21022_token._field_kind=_21022_token._field_kind.slice(static_cast<jule::Int>(2LL)).trim(jule::Str(" \n\r\t\v", 5));
	return jule::new_struct<_118d9a790_Comment>(new( std::nothrow ) _118d9a790_Comment(_21022_token,_21022_token._field_kind));
}



inline jule::Str _11953bd10_tokstoa(jule::Slice<_11911a8a0_Token> _21912_tokens) {
	jule::Str _22013_s = jule::Str("", 0);
	{
		auto &__julec_range_expr = _21912_tokens;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			_11911a8a0_Token _11953bd10_token = *__julec_range_begin;
			_iter_begin_4748283472:;
			{
				_22013_s+=_11953bd10_token._field_kind;
			}
			_iter_next_4748283472:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11953bd10_token = *__julec_range_begin; goto _iter_begin_4748283472; }
			_iter_end_4748283472:;
		}
	}
	return _22013_s;
}



inline jule::Ref<_118d9a790_TypeDecl> _11972a4d0_build_void_type(void) {
	return jule::new_struct<_118d9a790_TypeDecl>(new( std::nothrow ) _118d9a790_TypeDecl());
}



inline jule::Ref<_118d9a790_TypeDecl> _11972a4d0_build_prim_type(_11911a8a0_Token _1924_token) {
	return jule::new_struct<_118d9a790_TypeDecl>(new( std::nothrow ) _118d9a790_TypeDecl(_1924_token,jule::Any(jule::new_struct<_118d9a790_IdentTypeDecl>(new( std::nothrow ) _118d9a790_IdentTypeDecl(_1924_token,_1924_token._field_kind,false,nullptr)))));
}



inline std::tuple<jule::Slice<_11911a8a0_Token>,jule::Int> _11972a4d0_split_map_range(jule::Slice<_11911a8a0_Token> _3424_tokens,jule::Int& _3446_i) {
	jule::Int _3479_colon = jule::Int();
	jule::Slice<_11911a8a0_Token> _3456_range_tokens = jule::Slice<_11911a8a0_Token>();
	_3479_colon=-1LL;
	jule::Int _3613_range_n = 0LL;
	jule::Int _379_start = _3446_i;
	_iter_begin_4748293760:;
	if (!(_3446_i < _3424_tokens.len())) { goto _iter_end_4748293760; }
	{
		_11911a8a0_Token _3913_token = _3424_tokens[static_cast<jule::Int>(_3446_i)];
		if (_3913_token._field_id == 3LLU) {
			{
				auto &_match_expr{ _3913_token._field_kind };
				if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4748299696; }
				_case_begin_4748299696:;
				{
					(_3613_range_n)++;
					goto _iter_next_4748293760;
				}
				goto _match_end_4748297664;
				_case_end_4748299696:;
				_case_begin_4748298576:;
				{
					(_3613_range_n)--;
				}
				goto _match_end_4748297664;
				_case_end_4748298576:;
				_match_end_4748297664:;
			}
		}
		if (_3613_range_n == 0LL) {
			if ((_379_start + 1LL) > _3446_i) {
				return std::make_tuple(_3456_range_tokens,_3479_colon);
			}
			_3456_range_tokens=_3424_tokens.slice(static_cast<jule::Int>(_379_start + 1LL),static_cast<jule::Int>(_3446_i));
			goto _iter_end_4748293760;
		} else if (_3613_range_n != 1LL) {
			goto _iter_next_4748293760;
		}
		if ((_3479_colon == -1LL) && (_3913_token._field_id == 11LLU)) {
			_3479_colon=(_3446_i - _379_start) - 1LL;
		}
	}
	_iter_next_4748293760:;
	(_3446_i)++;
	goto _iter_begin_4748293760;
	_iter_end_4748293760:;
	return std::make_tuple(_3456_range_tokens,_3479_colon);
}



inline jule::Ref<_11ab854f0_Const> _11ab854f0_new_i64(jule::I64 _1216_x) {
	return jule::new_struct<_11ab854f0_Const>(new( std::nothrow ) _11ab854f0_Const(jule::Any(_1216_x)));
}



inline jule::Ref<_11ab854f0_Const> _11ab854f0_new_u64(jule::U64 _1416_x) {
	return jule::new_struct<_11ab854f0_Const>(new( std::nothrow ) _11ab854f0_Const(jule::Any(_1416_x)));
}



inline jule::Ref<_11ab854f0_Const> _11ab854f0_new_bool(jule::Bool _1617_x) {
	return jule::new_struct<_11ab854f0_Const>(new( std::nothrow ) _11ab854f0_Const(jule::Any(_1617_x)));
}



inline jule::Ref<_11ab854f0_Const> _11ab854f0_new_str(jule::Str _1816_x) {
	return jule::new_struct<_11ab854f0_Const>(new( std::nothrow ) _11ab854f0_Const(jule::Any(_1816_x)));
}



inline jule::Ref<_11ab854f0_Const> _11ab854f0_new_f64(jule::F64 _2016_x) {
	return jule::new_struct<_11ab854f0_Const>(new( std::nothrow ) _11ab854f0_Const(jule::Any(_2016_x)));
}



inline jule::Ref<_11ab854f0_Const> _11ab854f0_new_nil(void) {
	return jule::new_struct<_11ab854f0_Const>(new( std::nothrow ) _11ab854f0_Const(jule::Any(nullptr)));
}



inline void _11ab854f0_lshift_unsig(_11ab854f0_Const& _53022_c,_11ab854f0_Const& _53033_x) {
	jule::U64 _5319_l = _53022_c._method_as_u64();
	jule::U64 _5329_r = _53033_x._method_as_u64();
	_53022_c._method_set_u64(_5319_l << _5329_r);
}



inline void _11ab854f0_rshift_unsig(_11ab854f0_Const& _53622_c,_11ab854f0_Const& _53633_x) {
	jule::U64 _5379_l = _53622_c._method_as_u64();
	jule::U64 _5389_r = _53633_x._method_as_u64();
	_53622_c._method_set_u64(_5379_l >> _5389_r);
}



inline jule::Str _11abc8da0_real_kind_of(jule::Str _2421_kind) {
	{
		auto &_match_expr{ _2421_kind };
		if (!((jule::Str("int", 3)) == _match_expr)) { goto _case_end_4760266224; }
		_case_begin_4760266224:;
		{
			return jule::Str("i64", 3);
		}
		goto _match_end_4760267232;
		_case_end_4760266224:;
		if (!((jule::Str("uint", 4)) == _match_expr || (jule::Str("uintptr", 7)) == _match_expr)) { goto _case_end_4760266336; }
		_case_begin_4760266336:;
		{
			return jule::Str("u64", 3);
		}
		goto _match_end_4760267232;
		_case_end_4760266336:;
		_case_begin_4760270816:;
		{
			return _2421_kind;
		}
		goto _match_end_4760267232;
		_case_end_4760270816:;
		_match_end_4760267232:;
	}
}



inline jule::Int _11abc8da0_bitsize_of(jule::Str _4019_k) {
	{
		auto &_match_expr{ _4019_k };
		if (!((jule::Str("i8", 2)) == _match_expr || (jule::Str("u8", 2)) == _match_expr)) { goto _case_end_4760277088; }
		_case_begin_4760277088:;
		{
			return 8LL;
		}
		goto _match_end_4760272560;
		_case_end_4760277088:;
		if (!((jule::Str("i16", 3)) == _match_expr || (jule::Str("u16", 3)) == _match_expr)) { goto _case_end_4760277200; }
		_case_begin_4760277200:;
		{
			return 16LL;
		}
		goto _match_end_4760272560;
		_case_end_4760277200:;
		if (!((jule::Str("i32", 3)) == _match_expr || (jule::Str("u32", 3)) == _match_expr || (jule::Str("f32", 3)) == _match_expr)) { goto _case_end_4760277312; }
		_case_begin_4760277312:;
		{
			return 32LL;
		}
		goto _match_end_4760272560;
		_case_end_4760277312:;
		if (!((jule::Str("i64", 3)) == _match_expr || (jule::Str("u64", 3)) == _match_expr || (jule::Str("f64", 3)) == _match_expr)) { goto _case_end_4760275664; }
		_case_begin_4760275664:;
		{
			return 64LL;
		}
		goto _match_end_4760272560;
		_case_end_4760275664:;
		if (!((jule::Str("uint", 4)) == _match_expr || (jule::Str("int", 3)) == _match_expr)) { goto _case_end_4760275776; }
		_case_begin_4760275776:;
		{
			return 64LL;
		}
		goto _match_end_4760272560;
		_case_end_4760275776:;
		_case_begin_4760274720:;
		{
			return -1LL;
		}
		goto _match_end_4760272560;
		_case_end_4760274720:;
		_match_end_4760272560:;
	}
}



inline jule::Str _11abc8da0_int_from_bits(jule::U64 _7222_bits) {
	{
		auto &_match_expr{ _7222_bits };
		if (!((8LL) == _match_expr)) { goto _case_end_4760284304; }
		_case_begin_4760284304:;
		{
			return jule::Str("i8", 2);
		}
		goto _match_end_4760280256;
		_case_end_4760284304:;
		if (!((16LL) == _match_expr)) { goto _case_end_4760284416; }
		_case_begin_4760284416:;
		{
			return jule::Str("i16", 3);
		}
		goto _match_end_4760280256;
		_case_end_4760284416:;
		if (!((32LL) == _match_expr)) { goto _case_end_4760284528; }
		_case_begin_4760284528:;
		{
			return jule::Str("i32", 3);
		}
		goto _match_end_4760280256;
		_case_end_4760284528:;
		if (!((64LL) == _match_expr)) { goto _case_end_4760282976; }
		_case_begin_4760282976:;
		{
			return jule::Str("i64", 3);
		}
		goto _match_end_4760280256;
		_case_end_4760282976:;
		_case_begin_4760280944:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4760280256;
		_case_end_4760280944:;
		_match_end_4760280256:;
	}
}



inline jule::Str _11abc8da0_uint_from_bits(jule::U64 _8523_bits) {
	{
		auto &_match_expr{ _8523_bits };
		if (!((8LL) == _match_expr)) { goto _case_end_4760289424; }
		_case_begin_4760289424:;
		{
			return jule::Str("u8", 2);
		}
		goto _match_end_4760287904;
		_case_end_4760289424:;
		if (!((16LL) == _match_expr)) { goto _case_end_4760289536; }
		_case_begin_4760289536:;
		{
			return jule::Str("u16", 3);
		}
		goto _match_end_4760287904;
		_case_end_4760289536:;
		if (!((32LL) == _match_expr)) { goto _case_end_4760289648; }
		_case_begin_4760289648:;
		{
			return jule::Str("u32", 3);
		}
		goto _match_end_4760287904;
		_case_end_4760289648:;
		if (!((64LL) == _match_expr)) { goto _case_end_4760286656; }
		_case_begin_4760286656:;
		{
			return jule::Str("u64", 3);
		}
		goto _match_end_4760287904;
		_case_end_4760286656:;
		_case_begin_4760287536:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4760287904;
		_case_end_4760287536:;
		_match_end_4760287904:;
	}
}



inline jule::Str _11abc8da0_float_from_bits(jule::U64 _9924_bits) {
	{
		auto &_match_expr{ _9924_bits };
		if (!((32LL) == _match_expr)) { goto _case_end_4760293424; }
		_case_begin_4760293424:;
		{
			return jule::Str("f32", 3);
		}
		goto _match_end_4760293024;
		_case_end_4760293424:;
		if (!((64LL) == _match_expr)) { goto _case_end_4760294544; }
		_case_begin_4760294544:;
		{
			return jule::Str("f64", 3);
		}
		goto _match_end_4760293024;
		_case_end_4760294544:;
		_case_begin_4760292656:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4760293024;
		_case_end_4760292656:;
		_match_end_4760293024:;
	}
}



inline jule::Bool _11abc8da0_check_bit_float(jule::Str _12424_val,jule::Int _12434_bit) {
	jule::Int _12513_err;
	std::tie(std::ignore,_12513_err) = _13ffab0a0_parse_float(_12424_val,_12434_bit);
	return _12513_err == 0LLU;
}



inline jule::U64 _11abc8da0_bitsize_of_float(jule::F64 _13425_x) {
	{
		if (!(((-3.4028234663852886e+38 <= _13425_x) && (_13425_x <= 3.4028234663852886e+38)))) { goto _case_end_4760320352; }
		_case_begin_4760320352:;
		{
			return 32LL;
		}
		goto _match_end_4760317504;
		_case_end_4760320352:;
		_case_begin_4760317664:;
		{
			return 64LL;
		}
		goto _match_end_4760317504;
		_case_end_4760317664:;
		_match_end_4760317504:;
	}
}



inline jule::U64 _11abc8da0_bitsize_of_int(jule::I64 _14823_x) {
	{
		if (!(((-128LL <= _14823_x) && (_14823_x <= 127LL)))) { goto _case_end_4760324064; }
		_case_begin_4760324064:;
		{
			return 8LL;
		}
		goto _match_end_4760320896;
		_case_end_4760324064:;
		if (!(((-32768LL <= _14823_x) && (_14823_x <= 32767LL)))) { goto _case_end_4760324176; }
		_case_begin_4760324176:;
		{
			return 16LL;
		}
		goto _match_end_4760320896;
		_case_end_4760324176:;
		if (!(((-2147483648LL <= _14823_x) && (_14823_x <= 2147483647LL)))) { goto _case_end_4760322848; }
		_case_begin_4760322848:;
		{
			return 32LL;
		}
		goto _match_end_4760320896;
		_case_end_4760322848:;
		_case_begin_4760321344:;
		{
			return 64LL;
		}
		goto _match_end_4760320896;
		_case_end_4760321344:;
		_match_end_4760320896:;
	}
}



inline jule::U64 _11abc8da0_bitsize_of_uint(jule::U64 _16424_x) {
	{
		if (!((_16424_x <= 255LL))) { goto _case_end_4760331264; }
		_case_begin_4760331264:;
		{
			return 8LL;
		}
		goto _match_end_4760329440;
		_case_end_4760331264:;
		if (!((_16424_x <= 65535LL))) { goto _case_end_4760331376; }
		_case_begin_4760331376:;
		{
			return 16LL;
		}
		goto _match_end_4760329440;
		_case_end_4760331376:;
		if (!((_16424_x <= 4294967295LL))) { goto _case_end_4760330048; }
		_case_begin_4760330048:;
		{
			return 32LL;
		}
		goto _match_end_4760329440;
		_case_end_4760330048:;
		_case_begin_4760328608:;
		{
			return 64LL;
		}
		goto _match_end_4760329440;
		_case_end_4760328608:;
		_match_end_4760329440:;
	}
}



inline jule::F64 _11ab89af0_min_of(jule::Str _4319_k) {
	_4319_k=_11abc8da0_real_kind_of(_4319_k);
	{
		auto &_match_expr{ _4319_k };
		if (!((jule::Str("i8", 2)) == _match_expr)) { goto _case_end_4760337248; }
		_case_begin_4760337248:;
		{
			return -128LL;
		}
		goto _match_end_4760332352;
		_case_end_4760337248:;
		if (!((jule::Str("i16", 3)) == _match_expr)) { goto _case_end_4760335920; }
		_case_begin_4760335920:;
		{
			return -32768LL;
		}
		goto _match_end_4760332352;
		_case_end_4760335920:;
		if (!((jule::Str("i32", 3)) == _match_expr)) { goto _case_end_4760336032; }
		_case_begin_4760336032:;
		{
			return -2147483648LL;
		}
		goto _match_end_4760332352;
		_case_end_4760336032:;
		if (!((jule::Str("i64", 3)) == _match_expr)) { goto _case_end_4760335472; }
		_case_begin_4760335472:;
		{
			return jule::MIN_I64;
		}
		goto _match_end_4760332352;
		_case_end_4760335472:;
		if (!((jule::Str("f32", 3)) == _match_expr)) { goto _case_end_4760335584; }
		_case_begin_4760335584:;
		{
			return -3.4028234663852886e+38;
		}
		goto _match_end_4760332352;
		_case_end_4760335584:;
		if (!((jule::Str("f64", 3)) == _match_expr)) { goto _case_end_4760335696; }
		_case_begin_4760335696:;
		{
			return jule::MIN_F64;
		}
		goto _match_end_4760332352;
		_case_end_4760335696:;
		_case_begin_4760335200:;
		{
			return 0LL;
		}
		goto _match_end_4760332352;
		_case_end_4760335200:;
		_match_end_4760332352:;
	}
}



inline jule::F64 _11ab89af0_max_of(jule::Str _5819_k) {
	_5819_k=_11abc8da0_real_kind_of(_5819_k);
	{
		auto &_match_expr{ _5819_k };
		if (!((jule::Str("i8", 2)) == _match_expr)) { goto _case_end_4760345360; }
		_case_begin_4760345360:;
		{
			return 127LL;
		}
		goto _match_end_4760343312;
		_case_end_4760345360:;
		if (!((jule::Str("i16", 3)) == _match_expr)) { goto _case_end_4760343984; }
		_case_begin_4760343984:;
		{
			return 32767LL;
		}
		goto _match_end_4760343312;
		_case_end_4760343984:;
		if (!((jule::Str("i32", 3)) == _match_expr)) { goto _case_end_4760344096; }
		_case_begin_4760344096:;
		{
			return 2147483647LL;
		}
		goto _match_end_4760343312;
		_case_end_4760344096:;
		if (!((jule::Str("i64", 3)) == _match_expr)) { goto _case_end_4760343424; }
		_case_begin_4760343424:;
		{
			return jule::MAX_I64;
		}
		goto _match_end_4760343312;
		_case_end_4760343424:;
		if (!((jule::Str("u8", 2)) == _match_expr)) { goto _case_end_4760343536; }
		_case_begin_4760343536:;
		{
			return 255LL;
		}
		goto _match_end_4760343312;
		_case_end_4760343536:;
		if (!((jule::Str("u16", 3)) == _match_expr)) { goto _case_end_4760343648; }
		_case_begin_4760343648:;
		{
			return 65535LL;
		}
		goto _match_end_4760343312;
		_case_end_4760343648:;
		if (!((jule::Str("u32", 3)) == _match_expr)) { goto _case_end_4760344400; }
		_case_begin_4760344400:;
		{
			return 4294967295LL;
		}
		goto _match_end_4760343312;
		_case_end_4760344400:;
		if (!((jule::Str("u64", 3)) == _match_expr)) { goto _case_end_4760344512; }
		_case_begin_4760344512:;
		{
			return jule::MAX_U64;
		}
		goto _match_end_4760343312;
		_case_end_4760344512:;
		if (!((jule::Str("f32", 3)) == _match_expr)) { goto _case_end_4760344624; }
		_case_begin_4760344624:;
		{
			return 3.4028234663852886e+38;
		}
		goto _match_end_4760343312;
		_case_end_4760344624:;
		if (!((jule::Str("f64", 3)) == _match_expr)) { goto _case_end_4760344736; }
		_case_begin_4760344736:;
		{
			return jule::MAX_F64;
		}
		goto _match_end_4760343312;
		_case_end_4760344736:;
		_case_begin_4760338176:;
		{
			return 0LL;
		}
		goto _match_end_4760343312;
		_case_end_4760338176:;
		_match_end_4760343312:;
	}
}



inline jule::Bool _11ac2f0a0_is_i8_compatible(jule::Str _629_k) {
	_629_k=_11abc8da0_real_kind_of(_629_k);
	return _629_k == jule::Str("i8", 2);
}



inline jule::Bool _11ac2f0a0_is_i16_compatible(jule::Str _1230_k) {
	_1230_k=_11abc8da0_real_kind_of(_1230_k);
	return ((_1230_k == jule::Str("i8", 2)) || (_1230_k == jule::Str("i16", 3))) || (_1230_k == jule::Str("u8", 2));
}



inline jule::Bool _11ac2f0a0_is_i32_compatible(jule::Str _2230_k) {
	_2230_k=_11abc8da0_real_kind_of(_2230_k);
	return ((((_2230_k == jule::Str("i8", 2)) || (_2230_k == jule::Str("i16", 3))) || (_2230_k == jule::Str("i32", 3))) || (_2230_k == jule::Str("u8", 2))) || (_2230_k == jule::Str("u16", 3));
}



inline jule::Bool _11ac2f0a0_is_i64_compatible(jule::Str _3430_k) {
	_3430_k=_11abc8da0_real_kind_of(_3430_k);
	return ((((((_3430_k == jule::Str("i8", 2)) || (_3430_k == jule::Str("i16", 3))) || (_3430_k == jule::Str("i32", 3))) || (_3430_k == jule::Str("i64", 3))) || (_3430_k == jule::Str("u8", 2))) || (_3430_k == jule::Str("u16", 3))) || (_3430_k == jule::Str("u32", 3));
}



inline jule::Bool _11ac2f0a0_is_u8_compatible(jule::Str _4829_k) {
	_4829_k=_11abc8da0_real_kind_of(_4829_k);
	return _4829_k == jule::Str("u8", 2);
}



inline jule::Bool _11ac2f0a0_is_u16_compatible(jule::Str _5430_k) {
	_5430_k=_11abc8da0_real_kind_of(_5430_k);
	return (_5430_k == jule::Str("u8", 2)) || (_5430_k == jule::Str("u16", 3));
}



inline jule::Bool _11ac2f0a0_is_u32_compatible(jule::Str _6030_k) {
	_6030_k=_11abc8da0_real_kind_of(_6030_k);
	return ((_6030_k == jule::Str("u8", 2)) || (_6030_k == jule::Str("u16", 3))) || (_6030_k == jule::Str("u32", 3));
}



inline jule::Bool _11ac2f0a0_is_u64_compatible(jule::Str _7030_k) {
	_7030_k=_11abc8da0_real_kind_of(_7030_k);
	return (((_7030_k == jule::Str("u8", 2)) || (_7030_k == jule::Str("u16", 3))) || (_7030_k == jule::Str("u32", 3))) || (_7030_k == jule::Str("u64", 3));
}



inline jule::Bool _11ac2f0a0_is_f32_compatible(jule::Str _8130_k) {
	_8130_k=_11abc8da0_real_kind_of(_8130_k);
	return ((((((((_8130_k == jule::Str("f32", 3)) || (_8130_k == jule::Str("i8", 2))) || (_8130_k == jule::Str("i16", 3))) || (_8130_k == jule::Str("i32", 3))) || (_8130_k == jule::Str("i64", 3))) || (_8130_k == jule::Str("u8", 2))) || (_8130_k == jule::Str("u16", 3))) || (_8130_k == jule::Str("u32", 3))) || (_8130_k == jule::Str("u64", 3));
}



inline jule::Bool _11ac2f0a0_is_f64_compatible(jule::Str _9730_k) {
	_9730_k=_11abc8da0_real_kind_of(_9730_k);
	return (((((((((_9730_k == jule::Str("f64", 3)) || (_9730_k == jule::Str("f32", 3))) || (_9730_k == jule::Str("i8", 2))) || (_9730_k == jule::Str("i16", 3))) || (_9730_k == jule::Str("i32", 3))) || (_9730_k == jule::Str("i64", 3))) || (_9730_k == jule::Str("u8", 2))) || (_9730_k == jule::Str("u16", 3))) || (_9730_k == jule::Str("u32", 3))) || (_9730_k == jule::Str("u64", 3));
}



inline jule::Bool _11ac2f0a0_types_are_compatible(jule::Str _11633_k1,jule::Str _11642_k2) {
	_11633_k1=_11abc8da0_real_kind_of(_11633_k1);
	{
		auto &_match_expr{ _11633_k1 };
		if (!((jule::Str("any", 3)) == _match_expr)) { goto _case_end_4760395792; }
		_case_begin_4760395792:;
		{
			return true;
		}
		goto _match_end_4760392080;
		_case_end_4760395792:;
		if (!((jule::Str("i8", 2)) == _match_expr)) { goto _case_end_4760395904; }
		_case_begin_4760395904:;
		{
			return _11ac2f0a0_is_i8_compatible(_11642_k2);
		}
		goto _match_end_4760392080;
		_case_end_4760395904:;
		if (!((jule::Str("i16", 3)) == _match_expr)) { goto _case_end_4760396016; }
		_case_begin_4760396016:;
		{
			return _11ac2f0a0_is_i16_compatible(_11642_k2);
		}
		goto _match_end_4760392080;
		_case_end_4760396016:;
		if (!((jule::Str("i32", 3)) == _match_expr)) { goto _case_end_4760394256; }
		_case_begin_4760394256:;
		{
			return _11ac2f0a0_is_i32_compatible(_11642_k2);
		}
		goto _match_end_4760392080;
		_case_end_4760394256:;
		if (!((jule::Str("i64", 3)) == _match_expr)) { goto _case_end_4760394368; }
		_case_begin_4760394368:;
		{
			return _11ac2f0a0_is_i64_compatible(_11642_k2);
		}
		goto _match_end_4760392080;
		_case_end_4760394368:;
		if (!((jule::Str("u8", 2)) == _match_expr)) { goto _case_end_4760394480; }
		_case_begin_4760394480:;
		{
			return _11ac2f0a0_is_u8_compatible(_11642_k2);
		}
		goto _match_end_4760392080;
		_case_end_4760394480:;
		if (!((jule::Str("u16", 3)) == _match_expr)) { goto _case_end_4760395104; }
		_case_begin_4760395104:;
		{
			return _11ac2f0a0_is_u16_compatible(_11642_k2);
		}
		goto _match_end_4760392080;
		_case_end_4760395104:;
		if (!((jule::Str("u32", 3)) == _match_expr)) { goto _case_end_4760395216; }
		_case_begin_4760395216:;
		{
			return _11ac2f0a0_is_u32_compatible(_11642_k2);
		}
		goto _match_end_4760392080;
		_case_end_4760395216:;
		if (!((jule::Str("u64", 3)) == _match_expr)) { goto _case_end_4760395328; }
		_case_begin_4760395328:;
		{
			return _11ac2f0a0_is_u64_compatible(_11642_k2);
		}
		goto _match_end_4760392080;
		_case_end_4760395328:;
		if (!((jule::Str("f32", 3)) == _match_expr)) { goto _case_end_4760395440; }
		_case_begin_4760395440:;
		{
			return _11ac2f0a0_is_f32_compatible(_11642_k2);
		}
		goto _match_end_4760392080;
		_case_end_4760395440:;
		if (!((jule::Str("f64", 3)) == _match_expr)) { goto _case_end_4760396160; }
		_case_begin_4760396160:;
		{
			return _11ac2f0a0_is_f64_compatible(_11642_k2);
		}
		goto _match_end_4760392080;
		_case_end_4760396160:;
		if (!((jule::Str("bool", 4)) == _match_expr)) { goto _case_end_4760396272; }
		_case_begin_4760396272:;
		{
			return _11642_k2 == jule::Str("bool", 4);
		}
		goto _match_end_4760392080;
		_case_end_4760396272:;
		if (!((jule::Str("str", 3)) == _match_expr)) { goto _case_end_4760396384; }
		_case_begin_4760396384:;
		{
			return _11642_k2 == jule::Str("str", 3);
		}
		goto _match_end_4760392080;
		_case_end_4760396384:;
		_case_begin_4760393952:;
		{
			return false;
		}
		goto _match_end_4760392080;
		_case_end_4760393952:;
		_match_end_4760392080:;
	}
}



inline jule::Bool _11ac2f0a0_is_i16_greater(jule::Str _13727_k) {
	_13727_k=_11abc8da0_real_kind_of(_13727_k);
	return _13727_k == jule::Str("u8", 2);
}



inline jule::Bool _11ac2f0a0_is_i32_greater(jule::Str _14327_k) {
	_14327_k=_11abc8da0_real_kind_of(_14327_k);
	return (_14327_k == jule::Str("i8", 2)) || (_14327_k == jule::Str("i16", 3));
}



inline jule::Bool _11ac2f0a0_is_i64_greater(jule::Str _14927_k) {
	_14927_k=_11abc8da0_real_kind_of(_14927_k);
	return ((_14927_k == jule::Str("i8", 2)) || (_14927_k == jule::Str("i16", 3))) || (_14927_k == jule::Str("i32", 3));
}



inline jule::Bool _11ac2f0a0_is_u8_greater(jule::Str _15926_k) {
	_15926_k=_11abc8da0_real_kind_of(_15926_k);
	return _15926_k == jule::Str("i8", 2);
}



inline jule::Bool _11ac2f0a0_is_u16_greater(jule::Str _16527_k) {
	_16527_k=_11abc8da0_real_kind_of(_16527_k);
	return ((_16527_k == jule::Str("u8", 2)) || (_16527_k == jule::Str("i8", 2))) || (_16527_k == jule::Str("i16", 3));
}



inline jule::Bool _11ac2f0a0_is_u32_greater(jule::Str _17527_k) {
	_17527_k=_11abc8da0_real_kind_of(_17527_k);
	return ((((_17527_k == jule::Str("u8", 2)) || (_17527_k == jule::Str("u16", 3))) || (_17527_k == jule::Str("i8", 2))) || (_17527_k == jule::Str("i16", 3))) || (_17527_k == jule::Str("i32", 3));
}



inline jule::Bool _11ac2f0a0_is_u64_greater(jule::Str _18727_k) {
	_18727_k=_11abc8da0_real_kind_of(_18727_k);
	return ((((((_18727_k == jule::Str("u8", 2)) || (_18727_k == jule::Str("u16", 3))) || (_18727_k == jule::Str("u32", 3))) || (_18727_k == jule::Str("i8", 2))) || (_18727_k == jule::Str("i16", 3))) || (_18727_k == jule::Str("i32", 3))) || (_18727_k == jule::Str("i64", 3));
}



inline jule::Bool _11ac2f0a0_is_f32_greater(jule::Str _20123_k) {
	return _20123_k != jule::Str("f64", 3);
}



inline jule::Bool _11ac2f0a0_is_f64_greater(jule::Str _20323_k) {
	return true;
}



inline jule::Bool _11ac2f0a0_is_greater(jule::Str _20623_k1,jule::Str _20632_k2) {
	_20623_k1=_11abc8da0_real_kind_of(_20623_k1);
	{
		auto &_match_expr{ _20623_k1 };
		if (!((jule::Str("i16", 3)) == _match_expr)) { goto _case_end_4760435968; }
		_case_begin_4760435968:;
		{
			return _11ac2f0a0_is_i16_greater(_20632_k2);
		}
		goto _match_end_4760434096;
		_case_end_4760435968:;
		if (!((jule::Str("i32", 3)) == _match_expr)) { goto _case_end_4760436832; }
		_case_begin_4760436832:;
		{
			return _11ac2f0a0_is_i32_greater(_20632_k2);
		}
		goto _match_end_4760434096;
		_case_end_4760436832:;
		if (!((jule::Str("i64", 3)) == _match_expr)) { goto _case_end_4760436944; }
		_case_begin_4760436944:;
		{
			return _11ac2f0a0_is_i64_greater(_20632_k2);
		}
		goto _match_end_4760434096;
		_case_end_4760436944:;
		if (!((jule::Str("u16", 3)) == _match_expr)) { goto _case_end_4760437056; }
		_case_begin_4760437056:;
		{
			return _11ac2f0a0_is_u16_greater(_20632_k2);
		}
		goto _match_end_4760434096;
		_case_end_4760437056:;
		if (!((jule::Str("u8", 2)) == _match_expr)) { goto _case_end_4760435328; }
		_case_begin_4760435328:;
		{
			return _11ac2f0a0_is_u8_greater(_20632_k2);
		}
		goto _match_end_4760434096;
		_case_end_4760435328:;
		if (!((jule::Str("u32", 3)) == _match_expr)) { goto _case_end_4760435440; }
		_case_begin_4760435440:;
		{
			return _11ac2f0a0_is_u32_greater(_20632_k2);
		}
		goto _match_end_4760434096;
		_case_end_4760435440:;
		if (!((jule::Str("u64", 3)) == _match_expr)) { goto _case_end_4760435552; }
		_case_begin_4760435552:;
		{
			return _11ac2f0a0_is_u64_greater(_20632_k2);
		}
		goto _match_end_4760434096;
		_case_end_4760435552:;
		if (!((jule::Str("f32", 3)) == _match_expr)) { goto _case_end_4760436144; }
		_case_begin_4760436144:;
		{
			return _11ac2f0a0_is_f32_greater(_20632_k2);
		}
		goto _match_end_4760434096;
		_case_end_4760436144:;
		if (!((jule::Str("f64", 3)) == _match_expr)) { goto _case_end_4760436256; }
		_case_begin_4760436256:;
		{
			return _11ac2f0a0_is_f64_greater(_20632_k2);
		}
		goto _match_end_4760434096;
		_case_end_4760436256:;
		if (!((jule::Str("any", 3)) == _match_expr)) { goto _case_end_4760436368; }
		_case_begin_4760436368:;
		{
			return true;
		}
		goto _match_end_4760434096;
		_case_end_4760436368:;
		_case_begin_4760434864:;
		{
			return false;
		}
		goto _match_end_4760434096;
		_case_end_4760434864:;
		_match_end_4760434096:;
	}
}



inline jule::Bool _11ab8b300_is_sig_int(jule::Str _2723_k) {
	_2723_k=_11abc8da0_real_kind_of(_2723_k);
	return (((_2723_k == jule::Str("i8", 2)) || (_2723_k == jule::Str("i16", 3))) || (_2723_k == jule::Str("i32", 3))) || (_2723_k == jule::Str("i64", 3));
}



inline jule::Bool _11ab8b300_is_unsig_int(jule::Str _3825_k) {
	_3825_k=_11abc8da0_real_kind_of(_3825_k);
	return (((_3825_k == jule::Str("u8", 2)) || (_3825_k == jule::Str("u16", 3))) || (_3825_k == jule::Str("u32", 3))) || (_3825_k == jule::Str("u64", 3));
}



inline jule::Bool _11ab8b300_is_int(jule::Str _4915_k) {
	return _11ab8b300_is_sig_int(_4915_k) || _11ab8b300_is_unsig_int(_4915_k);
}



inline jule::Bool _11ab8b300_is_float(jule::Str _5417_k) {
	return (_5417_k == jule::Str("f32", 3)) || (_5417_k == jule::Str("f64", 3));
}



inline jule::Bool _11ab8b300_is_num(jule::Str _5915_k) {
	return _11ab8b300_is_int(_5915_k) || _11ab8b300_is_float(_5915_k);
}



inline std::tuple<jule::Str,jule::Bool> _11acfaa00_is_byte_lit(jule::Str _1524_kind) {
	if (_1524_kind.len() < 3LL) {
		return std::make_tuple(jule::Str("", 0),false);
	}
	_1524_kind=_1524_kind.slice(static_cast<jule::Int>(1LL),static_cast<jule::Int>(_1524_kind.len() - 1LL));
	jule::Bool _2113_is_byte = false;
	{
		if (!(((_1524_kind.len() == 1LL) && (_1524_kind[static_cast<jule::Int>(0LL)] <= 255LL)))) { goto _case_end_4760481104; }
		_case_begin_4760481104:;
		{
			_2113_is_byte=true;
		}
		goto _match_end_4760480656;
		_case_end_4760481104:;
		if (!(((_1524_kind[static_cast<jule::Int>(0LL)] == '\\') && (_1524_kind[static_cast<jule::Int>(1LL)] == 'x')))) { goto _case_end_4760481216; }
		_case_begin_4760481216:;
		{
			_2113_is_byte=true;
		}
		goto _match_end_4760480656;
		_case_end_4760481216:;
		if (!((((_1524_kind[static_cast<jule::Int>(0LL)] == '\\') && (_1524_kind[static_cast<jule::Int>(1LL)] >= '0')) && (_1524_kind[static_cast<jule::Int>(1LL)] <= '7')))) { goto _case_end_4760481328; }
		_case_begin_4760481328:;
		{
			_2113_is_byte=true;
		}
		goto _match_end_4760480656;
		_case_end_4760481328:;
		_match_end_4760480656:;
	}
	return std::make_tuple(_1524_kind,_2113_is_byte);
}



inline jule::I32 _11acfaa00_to_rune(jule::Slice<jule::U8> _4016_bytes) {
	if (_4016_bytes.len() == 0LL) {
		return 0LL;
	}
	jule::I32 _4513_r = 0LL;
	if ((_4016_bytes[static_cast<jule::Int>(0LL)] == '\\') && (_4016_bytes.len() > 1LL)) {
		jule::Int _4717_i = 0LL;
		_4513_r=static_cast<jule::I32>(_11acfaa00_rune_from_esq_seq(_4016_bytes,_4717_i));
	} else {
		std::tie(_4513_r,std::ignore) = _118dab460_decode_rune(_4016_bytes);
	}
	return _4513_r;
}



inline jule::Str _11acfaa00_to_raw_str(jule::Slice<jule::U8> _5919_bytes) {
	return static_cast<jule::Str>(_5919_bytes);
}



inline jule::Str _11acfaa00_to_str(jule::Slice<jule::U8> _6415_bytes) {
	if (_6415_bytes.len() == 0LL) {
		return jule::Str("", 0);
	}
	jule::Str _6913_s = jule::Str("", 0);
	jule::Int _7013_i = 0LL;
	_iter_begin_4760507232:;
	if (!(_7013_i < _6415_bytes.len())) { goto _iter_end_4760507232; }
	{
		jule::U8 _7213_b = _6415_bytes[static_cast<jule::Int>(_7013_i)];
		if (_7213_b == '\\') {
			_6913_s+=_11acfaa00_str_esq_seq(_6415_bytes,_7013_i);
		} else {
			jule::I32 _7618_r;
			jule::Int _7621_size;
			std::tie(_7618_r,_7621_size) = _118dab460_decode_rune(_6415_bytes.slice(static_cast<jule::Int>(_7013_i)));
			_7013_i+=_7621_size;
			_6913_s+=static_cast<jule::Str>(_7618_r);
		}
	}
	_iter_next_4760507232:;
	goto _iter_begin_4760507232;
	_iter_end_4760507232:;
	return _6913_s;
}



inline std::tuple<jule::U8,jule::Bool> _11acfaa00_try_btoa_common_esq(jule::Slice<jule::U8> _8424_bytes) {
	jule::Bool _8452_ok = jule::Bool();
	jule::U8 _8441_seq = jule::U8();
	if ((_8424_bytes.len() < 2LL) || (_8424_bytes[static_cast<jule::Int>(0LL)] != '\\')) {
		return std::make_tuple(_8441_seq,_8452_ok);
	}
	{
		auto &_match_expr{ _8424_bytes[static_cast<jule::Int>(1LL)] };
		if (!(('\\') == _match_expr)) { goto _case_end_4760521568; }
		_case_begin_4760521568:;
		{
			_8441_seq='\\';
		}
		goto _match_end_4760518416;
		_case_end_4760521568:;
		if (!(('\'') == _match_expr)) { goto _case_end_4760521680; }
		_case_begin_4760521680:;
		{
			_8441_seq='\'';
		}
		goto _match_end_4760518416;
		_case_end_4760521680:;
		if (!(('\"') == _match_expr)) { goto _case_end_4760521792; }
		_case_begin_4760521792:;
		{
			_8441_seq='\"';
		}
		goto _match_end_4760518416;
		_case_end_4760521792:;
		if (!(('a') == _match_expr)) { goto _case_end_4760521904; }
		_case_begin_4760521904:;
		{
			_8441_seq='\a';
		}
		goto _match_end_4760518416;
		_case_end_4760521904:;
		if (!(('b') == _match_expr)) { goto _case_end_4760522016; }
		_case_begin_4760522016:;
		{
			_8441_seq='\b';
		}
		goto _match_end_4760518416;
		_case_end_4760522016:;
		if (!(('f') == _match_expr)) { goto _case_end_4760522128; }
		_case_begin_4760522128:;
		{
			_8441_seq='\f';
		}
		goto _match_end_4760518416;
		_case_end_4760522128:;
		if (!(('n') == _match_expr)) { goto _case_end_4760522240; }
		_case_begin_4760522240:;
		{
			_8441_seq='\n';
		}
		goto _match_end_4760518416;
		_case_end_4760522240:;
		if (!(('r') == _match_expr)) { goto _case_end_4760522352; }
		_case_begin_4760522352:;
		{
			_8441_seq='\r';
		}
		goto _match_end_4760518416;
		_case_end_4760522352:;
		if (!(('t') == _match_expr)) { goto _case_end_4760522464; }
		_case_begin_4760522464:;
		{
			_8441_seq='\t';
		}
		goto _match_end_4760518416;
		_case_end_4760522464:;
		if (!(('v') == _match_expr)) { goto _case_end_4760522576; }
		_case_begin_4760522576:;
		{
			_8441_seq='\v';
		}
		goto _match_end_4760518416;
		_case_end_4760522576:;
		_match_end_4760518416:;
	}
	_8452_ok=_8441_seq != 0LL;
	return std::make_tuple(_8441_seq,_8452_ok);
}



inline jule::I32 _11acfaa00_rune_from_esq_seq(jule::Slice<jule::U8> _10622_bytes,jule::Int& _10642_i) {
	jule::U8 _10710_b;
	jule::Bool _10713_ok;
	std::tie(_10710_b,_10713_ok) = _11acfaa00_try_btoa_common_esq(_10622_bytes.slice(static_cast<jule::Int>(_10642_i)));
	(_10642_i)++;
	if (_10713_ok) {
		(_10642_i)++;
		return static_cast<jule::I32>(_10710_b);
	}
	{
		auto &_match_expr{ _10622_bytes[static_cast<jule::Int>(_10642_i)] };
		if (!(('u') == _match_expr)) { goto _case_end_4760557696; }
		_case_begin_4760557696:;
		{
			
			jule::U64 _11714_rc;
			std::tie(_11714_rc,std::ignore) = _12ff26420_parse_uint(static_cast<jule::Str>(_10622_bytes.slice(static_cast<jule::Int>(_10642_i + 1LL),static_cast<jule::Int>(_10642_i + 5LL))),16LL,64LL);
			_10642_i+=5LL;
			jule::I32 _11913_r = static_cast<jule::I32>(_11714_rc);
			return _11913_r;
		}
		goto _match_end_4760534848;
		_case_end_4760557696:;
		if (!(('U') == _match_expr)) { goto _case_end_4760560224; }
		_case_begin_4760560224:;
		{
			
			jule::U64 _12414_rc;
			std::tie(_12414_rc,std::ignore) = _12ff26420_parse_uint(static_cast<jule::Str>(_10622_bytes.slice(static_cast<jule::Int>(_10642_i + 1LL),static_cast<jule::Int>(_10642_i + 9LL))),16LL,64LL);
			_10642_i+=9LL;
			jule::I32 _12613_r = static_cast<jule::I32>(_12414_rc);
			return _12613_r;
		}
		goto _match_end_4760534848;
		_case_end_4760560224:;
		if (!(('x') == _match_expr)) { goto _case_end_4760562000; }
		_case_begin_4760562000:;
		{
			
			jule::Slice<jule::U8> _13113_seq = _10622_bytes.slice(static_cast<jule::Int>(_10642_i + 1LL),static_cast<jule::Int>(_10642_i + 3LL));
			_10642_i+=3LL;
			jule::U64 _13314_b;
			std::tie(_13314_b,std::ignore) = _12ff26420_parse_uint(static_cast<jule::Str>(_13113_seq),16LL,64LL);
			return static_cast<jule::I32>(_13314_b);
		}
		goto _match_end_4760534848;
		_case_end_4760562000:;
		_case_begin_4760553504:;
		{
			
			jule::Slice<jule::U8> _13813_seq = _10622_bytes.slice(static_cast<jule::Int>(_10642_i),static_cast<jule::Int>(_10642_i + 3LL));
			_10642_i+=3LL;
			jule::U64 _14014_b;
			std::tie(_14014_b,std::ignore) = _12ff26420_parse_uint(static_cast<jule::Str>(_13813_seq.slice(static_cast<jule::Int>(1LL))),8LL,64LL);
			return static_cast<jule::I32>(_14014_b);
		}
		goto _match_end_4760534848;
		_case_end_4760553504:;
		_match_end_4760534848:;
	}
}



inline jule::Str _11acfaa00_str_esq_seq(jule::Slice<jule::U8> _14516_bytes,jule::Int& _14536_i) {
	jule::I32 _1469_r = _11acfaa00_rune_from_esq_seq(_14516_bytes,_14536_i);
	if (_1469_r <= 255LL) {
		return static_cast<jule::Str>(_1469_r);
	}
	return _11acfaa00_to_str(static_cast<jule::Slice<jule::U8>>(static_cast<jule::Str>(_1469_r)));
}



inline jule::Ref<_13feceeb0_ReferenceStack> _13feceeb0_new_reference_stack(void) {
	return jule::new_struct<_13feceeb0_ReferenceStack>(new( std::nothrow ) _13feceeb0_ReferenceStack());
}



inline jule::Str _13feceeb0_str_repeat(jule::Str _9115_sub,jule::Int _9129_n) {
	if (_9129_n == 0LL) {
		return jule::Str("", 0);
	}
	jule::Str _9613_s = jule::Str("", 0);
	_iter_begin_4763280192:;
	if (!(_9129_n > 0LL)) { goto _iter_end_4763280192; }
	{
		_9613_s+=_9115_sub;
	}
	_iter_next_4763280192:;
	(_9129_n)--;
	goto _iter_begin_4763280192;
	_iter_end_4763280192:;
	return _9613_s;
}



inline jule::Str _13feceeb0_build_doc(jule::Ref<_118d9a790_CommentGroup> _10318_cg) {
	if ((!(jule::real(_10318_cg)))) {
		return jule::Str("", 0);
	}
	jule::Str _10813_doc = jule::Str("", 0);
	{
		auto &__julec_range_expr = _10318_cg->_field_comments;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_118d9a790_Comment> _13feceeb0_c = *__julec_range_begin;
			_iter_begin_4763285888:;
			{
				_10813_doc+=_13feceeb0_c->_field_text;
				_10813_doc+=jule::Str(" ", 1);
			}
			_iter_next_4763285888:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _13feceeb0_c = *__julec_range_begin; goto _iter_begin_4763285888; }
			_iter_end_4763285888:;
		}
	}
	return _10813_doc;
}



inline jule::Ref<_11a3c2e70_TypeSymbol> _13feceeb0_build_type(jule::Ref<_118d9a790_TypeDecl> _11619_t) {
	if ((!(jule::real(_11619_t)))) {
		return jule::new_ref<_11a3c2e70_TypeSymbol>();
	}
	return jule::new_struct<_11a3c2e70_TypeSymbol>(new( std::nothrow ) _11a3c2e70_TypeSymbol(_11619_t,jule::Ref<_11a3c2e70_TypeKind>()));
}



inline jule::Ref<_11a53f4f0_Value> _13feceeb0_build_expr(jule::Ref<_118d9a790_Expr> _12519_expr) {
	if ((!(jule::real(_12519_expr)))) {
		return jule::new_ref<_11a53f4f0_Value>();
	}
	return jule::new_struct<_11a53f4f0_Value>(new( std::nothrow ) _11a53f4f0_Value(_12519_expr,jule::Ref<_11a53f4f0_Data>()));
}



inline jule::Ref<_11a3c2e70_TypeAlias> _13feceeb0_build_type_alias(jule::Ref<_118d9a790_TypeAliasDecl> _13525_decl) {
	return jule::new_struct<_11a3c2e70_TypeAlias>(new( std::nothrow ) _11a3c2e70_TypeAlias(_13525_decl->_field_scope,_13525_decl->_field_public,_13525_decl->_field_cpp_linked,jule::Bool(),_13525_decl->_field_token,_13525_decl->_field_ident,_13feceeb0_build_type(_13525_decl->_field_kind),_13feceeb0_build_doc(_13525_decl->_field_doc_comments),jule::Slice<jule::Any>()));
}



inline jule::Ref<_118bb7d70_Field> _13feceeb0_build_field(jule::Ref<_118d9a790_FieldDecl> _14720_decl) {
	return jule::new_struct<_118bb7d70_Field>(new( std::nothrow ) _118bb7d70_Field(jule::Ref<_118bb7d70_Struct>(),_14720_decl->_field_token,_14720_decl->_field_public,_14720_decl->_field_mutable,_14720_decl->_field_ident,_13feceeb0_build_type(_14720_decl->_field_kind)));
}



inline jule::Slice<jule::Ref<_118bb7d70_Field>> _13feceeb0_build_fields(jule::Slice<jule::Ref<_118d9a790_FieldDecl>> _15721_decls) {
	jule::Slice<jule::Ref<_118bb7d70_Field>> _15813_fields = jule::Slice<jule::Ref<_118bb7d70_Field>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_15721_decls.len())));
	{
		auto &__julec_range_expr = _15721_decls;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _13feceeb0_i = 0;
			jule::Ref<_118d9a790_FieldDecl> _13feceeb0_decl = *__julec_range_begin;
			_iter_begin_4763303824:;
			{
				_15813_fields[static_cast<jule::Int>(_13feceeb0_i)]=_13feceeb0_build_field(_13feceeb0_decl);
			}
			_iter_next_4763303824:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_13feceeb0_i; _13feceeb0_decl = *__julec_range_begin; goto _iter_begin_4763303824; }
			_iter_end_4763303824:;
		}
	}
	return _15813_fields;
}



inline jule::Ref<_118bb7d70_Struct> _13feceeb0_build_struct(jule::Ref<_118d9a790_StructDecl> _16521_decl) {
	return jule::new_struct<_118bb7d70_Struct>(new( std::nothrow ) _118bb7d70_Struct(jule::Ref<_11a096220_Sema>(),jule::Slice<jule::Ref<_118bb7d70_Struct>>(),jule::Slice<jule::Ref<_118bb7d70_Struct>>(),_16521_decl->_field_token,_16521_decl->_field_ident,_13feceeb0_build_fields(_16521_decl->_field_fields),_1192e4e90_Vector_11(),_16521_decl->_field_public,_16521_decl->_field_cpp_linked,_16521_decl->_field_directives,_13feceeb0_build_doc(_16521_decl->_field_doc_comments),_16521_decl->_field_generics,jule::Slice<jule::Ref<_118e2b060_Trait>>(),_13feceeb0_new_reference_stack(),jule::Slice<jule::Ref<_118bb7d70_StructIns>>()));
}



inline jule::Ref<_119099250_Param> _13feceeb0_build_param(jule::Ref<_118d9a790_ParamDecl> _17920_decl) {
	return jule::new_struct<_119099250_Param>(new( std::nothrow ) _119099250_Param(_17920_decl->_field_token,_17920_decl->_field_mutable,_17920_decl->_field_variadic,_17920_decl->_field_reference,_13feceeb0_build_type(_17920_decl->_field_kind),_17920_decl->_field_ident));
}



inline jule::Slice<jule::Ref<_119099250_Param>> _13feceeb0_build_params(jule::Slice<jule::Ref<_118d9a790_ParamDecl>> _19021_decls) {
	jule::Slice<jule::Ref<_119099250_Param>> _19113_params = jule::Slice<jule::Ref<_119099250_Param>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_19021_decls.len())));
	{
		auto &__julec_range_expr = _19021_decls;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _13feceeb0_i = 0;
			jule::Ref<_118d9a790_ParamDecl> _13feceeb0_decl = *__julec_range_begin;
			_iter_begin_4763321296:;
			{
				_19113_params[static_cast<jule::Int>(_13feceeb0_i)]=_13feceeb0_build_param(_13feceeb0_decl);
			}
			_iter_next_4763321296:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_13feceeb0_i; _13feceeb0_decl = *__julec_range_begin; goto _iter_begin_4763321296; }
			_iter_end_4763321296:;
		}
	}
	return _19113_params;
}



inline jule::Ref<_119099250_RetType> _13feceeb0_build_ret_type(jule::Ref<_118d9a790_RetTypeDecl> _19823_decl) {
	if ((_19823_decl->_field_idents == nullptr) && (!(jule::real(_19823_decl->_field_kind)))) {
		return jule::new_ref<_119099250_RetType>();
	}
	return jule::new_struct<_119099250_RetType>(new( std::nothrow ) _119099250_RetType(_13feceeb0_build_type(_19823_decl->_field_kind),_19823_decl->_field_idents));
}



inline jule::Ref<_119099250_Fn> _13feceeb0_build_fn(jule::Ref<_118d9a790_FnDecl> _20817_decl) {
	return jule::new_struct<_119099250_Fn>(new( std::nothrow ) _119099250_Fn(jule::Ref<_11a096220_Sema>(),_20817_decl->_field_token,_20817_decl->_field_global,_20817_decl->_field_unsafety,_20817_decl->_field_public,_20817_decl->_field_cpp_linked,_20817_decl->_field_statically,_20817_decl->_field_ident,_20817_decl->_field_directives,_13feceeb0_build_doc(_20817_decl->_field_doc_comments),_20817_decl->_field_scope,_20817_decl->_field_generics,_13feceeb0_build_ret_type(_20817_decl->_field_result),_13feceeb0_build_params(_20817_decl->_field_params),jule::Ref<_118bb7d70_Struct>(),_13feceeb0_new_reference_stack(),jule::Slice<jule::Ref<_119099250_FnIns>>()));
}



inline jule::Slice<jule::Ref<_119099250_Fn>> _13feceeb0_build_methods(jule::Slice<jule::Ref<_118d9a790_FnDecl>> _22722_decls) {
	jule::Slice<jule::Ref<_119099250_Fn>> _22813_methods = jule::Slice<jule::Ref<_119099250_Fn>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_22722_decls.len())));
	{
		auto &__julec_range_expr = _22722_decls;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _13feceeb0_i = 0;
			jule::Ref<_118d9a790_FnDecl> _13feceeb0_decl = *__julec_range_begin;
			_iter_begin_4763340864:;
			{
				_22813_methods[static_cast<jule::Int>(_13feceeb0_i)]=_13feceeb0_build_fn(_13feceeb0_decl);
			}
			_iter_next_4763340864:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_13feceeb0_i; _13feceeb0_decl = *__julec_range_begin; goto _iter_begin_4763340864; }
			_iter_end_4763340864:;
		}
	}
	return _22813_methods;
}



inline jule::Ref<_118e2b060_Trait> _13feceeb0_build_trait(jule::Ref<_118d9a790_TraitDecl> _23520_decl) {
	return jule::new_struct<_118e2b060_Trait>(new( std::nothrow ) _118e2b060_Trait(_23520_decl->_field_token,_23520_decl->_field_ident,_23520_decl->_field_public,_13feceeb0_build_doc(_23520_decl->_field_doc_comments),_13feceeb0_build_methods(_23520_decl->_field_methods),jule::Slice<jule::Ref<_118bb7d70_Struct>>()));
}



inline jule::Ref<_11a089b40_EnumItem> _13feceeb0_build_enum_item(jule::Ref<_118d9a790_EnumItemDecl> _24524_decl) {
	return jule::new_struct<_11a089b40_EnumItem>(new( std::nothrow ) _11a089b40_EnumItem(_24524_decl->_field_token,_24524_decl->_field_ident,_13feceeb0_build_expr(_24524_decl->_field_expr)));
}



inline jule::Slice<jule::Ref<_11a089b40_EnumItem>> _13feceeb0_build_enum_items(jule::Slice<jule::Ref<_118d9a790_EnumItemDecl>> _25325_decls) {
	jule::Slice<jule::Ref<_11a089b40_EnumItem>> _25413_items = jule::Slice<jule::Ref<_11a089b40_EnumItem>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_25325_decls.len())));
	{
		auto &__julec_range_expr = _25325_decls;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _13feceeb0_i = 0;
			jule::Ref<_118d9a790_EnumItemDecl> _13feceeb0_decl = *__julec_range_begin;
			_iter_begin_4763354448:;
			{
				_25413_items[static_cast<jule::Int>(_13feceeb0_i)]=_13feceeb0_build_enum_item(_13feceeb0_decl);
			}
			_iter_next_4763354448:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_13feceeb0_i; _13feceeb0_decl = *__julec_range_begin; goto _iter_begin_4763354448; }
			_iter_end_4763354448:;
		}
	}
	return _25413_items;
}



inline jule::Ref<_11a089b40_Enum> _13feceeb0_build_enum(jule::Ref<_118d9a790_EnumDecl> _26119_decl) {
	return jule::new_struct<_11a089b40_Enum>(new( std::nothrow ) _11a089b40_Enum(_26119_decl->_field_token,_26119_decl->_field_public,_26119_decl->_field_ident,_13feceeb0_build_type(_26119_decl->_field_kind),_13feceeb0_build_enum_items(_26119_decl->_field_items),_13feceeb0_build_doc(_26119_decl->_field_doc_comments)));
}



inline jule::Ref<_11a245f20_Var> _13feceeb0_build_var(jule::Ref<_118d9a790_VarDecl> _27218_decl) {
	return jule::new_struct<_11a245f20_Var>(new( std::nothrow ) _11a245f20_Var(jule::Ref<_11a093930_Scope>(),_27218_decl->_field_token,_27218_decl->_field_ident,_27218_decl->_field_cpp_linked,_27218_decl->_field_constant,_27218_decl->_field_mutable,_27218_decl->_field_public,jule::Bool(),_27218_decl->_field_statically,_27218_decl->_field_reference,_13feceeb0_build_doc(_27218_decl->_field_doc_comments),_13feceeb0_build_type(_27218_decl->_field_kind),_13feceeb0_build_expr(_27218_decl->_field_expr),_13feceeb0_new_reference_stack(),jule::Slice<jule::Ref<_11a245f20_Var>>()));
}



inline jule::Ref<_11a091460_Impl> _13feceeb0_build_impl(jule::Ref<_118d9a790_Impl> _28919_decl) {
	return jule::new_struct<_11a091460_Impl>(new( std::nothrow ) _11a091460_Impl(_28919_decl->_field_base,_28919_decl->_field_dest,_13feceeb0_build_methods(_28919_decl->_field_methods)));
}



inline jule::Ref<_11a093930_ScopeChecker> _11a093930_new_scope_checker_base(jule::Ref<_11a096220_Sema> _3831_s,jule::Ref<_119099250_FnIns> _3845_owner) {
	return jule::new_struct<_11a093930_ScopeChecker>(new( std::nothrow ) _11a093930_ScopeChecker(_3831_s,_3845_owner,jule::Ref<_11a093930_ScopeChecker>(),jule::Int(),jule::new_struct<_11a3c2dc0_SymbolTable>(new( std::nothrow ) _11a3c2dc0_SymbolTable()),jule::Ref<_11a093930_Scope>(),jule::Ref<_118d9a790_ScopeTree>(),jule::Uintptr(),jule::Uintptr(),jule::Ref<jule::Slice<jule::Ref<_11a093930_ScopeLabel>>>(),jule::Ref<jule::Slice<jule::Ref<_11a093930_ScopeGoto>>>(),jule::Int()));
}



inline jule::Ref<_11a093930_ScopeChecker> _11a093930_new_scope_checker(jule::Ref<_11a096220_Sema> _4626_s,jule::Ref<_119099250_FnIns> _4640_owner) {
	jule::Ref<_11a093930_ScopeChecker> _4713_base = _11a093930_new_scope_checker_base(_4626_s,_4640_owner);
	_4713_base->_field_labels=jule::new_ref<jule::Slice<jule::Ref<_11a093930_ScopeLabel>>>(nullptr);
	_4713_base->_field_gotos=jule::new_ref<jule::Slice<jule::Ref<_11a093930_ScopeGoto>>>(nullptr);
	return _4713_base;
}



inline jule::Ref<_11a093930_ScopeLabel> _11a093930_find_label_parent(jule::Str _5622_ident,jule::Ref<_11a093930_ScopeChecker> _5638_scope) {
	jule::Ref<_11a093930_ScopeLabel> _5713_label = _5638_scope->_method_find_label_scope(_5622_ident);
	_iter_begin_4763383440:;
	if (!((!(jule::real(_5713_label))))) { goto _iter_end_4763383440; }
	{
		if ((!(jule::real(_5638_scope->_field_parent))) || jule::real(_5638_scope->_field_owner)) {
			return jule::new_ref<_11a093930_ScopeLabel>();
		}
		_5638_scope=_5638_scope->_field_parent;
		_5713_label=_5638_scope->_method_find_label_scope(_5622_ident);
	}
	_iter_next_4763383440:;
	goto _iter_begin_4763383440;
	_iter_end_4763383440:;
	return _5713_label;
}



inline jule::Int _11a093930_count_match_type(jule::Ref<_11a093930_Match> _7021_m,jule::Ref<_11a3c2e70_TypeKind> _7032_t) {
	jule::Int _7113_n = 0LL;
	jule::Str _729_kind = _7032_t->_method_to_str();
	_julec_label_loop:;
	{
		auto &__julec_range_expr = _7021_m->_field_cases;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11a093930_Case> _11a093930_c = *__julec_range_begin;
			_iter_begin_4763394144:;
			{
				if ((!(jule::real(_11a093930_c)))) {
					goto _iter_next_4763394144;
				}
				{
					auto &__julec_range_expr = _11a093930_c->_field_exprs;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Any _11a093930_expr = *__julec_range_begin;
						_iter_begin_4763397168:;
						{
							if (_11a093930_expr == nullptr) {
								goto _iter_end_4763394144;
							}
							if (_729_kind == _11a093930_expr.operator jule::Ref<_11a3c2e70_TypeKind>()->_method_to_str()) {
								(_7113_n)++;
							}
						}
						_iter_next_4763397168:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { _11a093930_expr = *__julec_range_begin; goto _iter_begin_4763397168; }
						_iter_end_4763397168:;
					}
				}
			}
			_iter_next_4763394144:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a093930_c = *__julec_range_begin; goto _iter_begin_4763394144; }
			_iter_end_4763394144:;
		}
	}
	return _7113_n;
}



inline jule::Slice<jule::Ref<_11a53f4f0_Data>> _11a093930_get_datas_from_tuple_data(jule::Ref<_11a53f4f0_Data> _9434_d) {
	if (jule::real(_9434_d->_field_kind->_method_tup())) {
		{
			auto &_match_expr{ _9434_d->_field_model };
			if (!(_match_expr.type_is<jule::Ref<_119748ec0_TupleExprModel>>())) { goto _case_end_4763415440; }
			_case_begin_4763415440:;
			{
				return _9434_d->_field_model.operator jule::Ref<_119748ec0_TupleExprModel>()->_field_datas;
			}
			goto _match_end_4763403248;
			_case_end_4763415440:;
			_case_begin_4763404048:;
			{
				jule::Ref<_11a3c2e70_Tuple> _10121_t = _9434_d->_field_kind->_method_tup();
				jule::Slice<jule::Ref<_11a53f4f0_Data>> _10221_r = jule::Slice<jule::Ref<_11a53f4f0_Data>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_10121_t->_field_types.len())));
				{
					auto &__julec_range_expr = _10121_t->_field_types;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Int _11a093930_i = 0;
						jule::Ref<_11a3c2e70_TypeKind> _11a093930_kind = *__julec_range_begin;
						_iter_begin_4763412624:;
						{
							_10221_r[static_cast<jule::Int>(_11a093930_i)]=jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(_11a093930_kind,jule::Ref<_11a3c2e70_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_11ab854f0_Const>()));
						}
						_iter_next_4763412624:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { ++_11a093930_i; _11a093930_kind = *__julec_range_begin; goto _iter_begin_4763412624; }
						_iter_end_4763412624:;
					}
				}
				return _10221_r;
			}
			goto _match_end_4763403248;
			_case_end_4763404048:;
			_match_end_4763403248:;
		}
	} else {
		return jule::Slice<jule::Ref<_11a53f4f0_Data>>({_9434_d});
	}
}



inline jule::Slice<jule::Any> _11a093930_get_expr_models(jule::Any _11624_m) {
	{
		auto &_match_expr{ _11624_m };
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_TupleExpr>>())) { goto _case_end_4763422272; }
		_case_begin_4763422272:;
		{
			return _11624_m.operator jule::Ref<_118d9a790_TupleExpr>()->_field_expr;
		}
		goto _match_end_4763420384;
		_case_end_4763422272:;
		_case_begin_4763421200:;
		{
			return jule::Slice<jule::Any>({_11624_m});
		}
		goto _match_end_4763420384;
		_case_end_4763421200:;
		_match_end_4763420384:;
	}
}



inline jule::Bool _11a093930_check_mut(jule::Ref<_11a096220_Sema> _12318_s,jule::Ref<_11a53f4f0_Data> _12328_left,jule::Ref<_11a53f4f0_Data> _12345_right,_11911a8a0_Token _12359_error_token) {
	jule::Bool _12381_ok = jule::Bool();
	{
		if (!(((!(_12328_left->_field_mutable))))) { goto _case_end_4763427584; }
		_case_begin_4763427584:;
		{
			_12318_s->_method_push_err(_12359_error_token,jule::Str("assignment_to_non_mut", 21),jule::Slice<jule::Any>({}));
			_12381_ok = false;
			return _12381_ok;
		}
		goto _match_end_4763426304;
		_case_end_4763427584:;
		if (!(((jule::real(_12345_right) && (!(_12345_right->_field_mutable))) && _11a3c2e70_is_mut(_12345_right->_field_kind)))) { goto _case_end_4763427696; }
		_case_begin_4763427696:;
		{
			_12318_s->_method_push_err(_12359_error_token,jule::Str("assignment_non_mut_to_mut", 25),jule::Slice<jule::Any>({}));
			_12381_ok = false;
			return _12381_ok;
		}
		goto _match_end_4763426304;
		_case_end_4763427696:;
		_case_begin_4763426496:;
		{
			_12381_ok = true;
			return _12381_ok;
		}
		goto _match_end_4763426304;
		_case_end_4763426496:;
		_match_end_4763426304:;
	}
}



inline jule::Bool _11a093930_check_assign(jule::Ref<_11a096220_Sema> _13821_s,jule::Ref<_11a53f4f0_Data> _13835_left,jule::Ref<_11a53f4f0_Data> _13852_right,_11911a8a0_Token _13866_error_token) {
	jule::Bool _13888_ok = jule::Bool();
	jule::Ref<_119099250_FnIns> _1399_f = _13835_left->_field_kind->_method_fnc();
	if ((jule::real(_1399_f) && jule::real(_1399_f->_field_decl)) && _1399_f->_field_decl->_field_global) {
		_13821_s->_method_push_err(_13866_error_token,jule::Str("assign_type_not_support_value", 29),jule::Slice<jule::Any>({}));
		_13888_ok = false;
		return _13888_ok;
	}
	{
		if (!(((!(_13835_left->_field_lvalue))))) { goto _case_end_4763446640; }
		_case_begin_4763446640:;
		{
			_13821_s->_method_push_err(_13866_error_token,jule::Str("assign_require_lvalue", 21),jule::Slice<jule::Any>({}));
			_13888_ok = false;
			return _13888_ok;
		}
		goto _match_end_4763441264;
		_case_end_4763446640:;
		if (!((_13835_left->_method_is_const()))) { goto _case_end_4763446752; }
		_case_begin_4763446752:;
		{
			_13821_s->_method_push_err(_13866_error_token,jule::Str("assign_const", 12),jule::Slice<jule::Any>({}));
			_13888_ok = false;
			return _13888_ok;
		}
		goto _match_end_4763441264;
		_case_end_4763446752:;
		if (!(((!(_11a093930_check_mut(_13821_s,_13835_left,_13852_right,_13866_error_token)))))) { goto _case_end_4763447664; }
		_case_begin_4763447664:;
		{
			_13888_ok = false;
			return _13888_ok;
		}
		goto _match_end_4763441264;
		_case_end_4763447664:;
		_case_begin_4763445488:;
		{
			_13888_ok = true;
			return _13888_ok;
		}
		goto _match_end_4763441264;
		_case_end_4763445488:;
		_match_end_4763441264:;
	}
}



inline jule::Bool _11a093930_is_valid_ast_st_for_next_st(jule::Any _16236_n) {
	{
		auto &_match_expr{ _16236_n };
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_AssignSt>>())) { goto _case_end_4763456032; }
		_case_begin_4763456032:;
		{
			return (!(_16236_n.operator jule::Ref<_118d9a790_AssignSt>()->_field_declarative));
		}
		goto _match_end_4763455376;
		_case_end_4763456032:;
		if (!(_match_expr.type_is<jule::Ref<_118d9a790_FnCallExpr>>() || _match_expr.type_is<jule::Ref<_118d9a790_Expr>>())) { goto _case_end_4763456144; }
		_case_begin_4763456144:;
		{
			return true;
		}
		goto _match_end_4763455376;
		_case_end_4763456144:;
		_case_begin_4763455584:;
		{
			return false;
		}
		goto _match_end_4763455376;
		_case_end_4763455584:;
		_match_end_4763455376:;
	}
}



inline jule::Bool _11a093930_is_valid_st_for_next_st(jule::Any _17628_st) {
	{
		auto &_match_expr{ _17628_st };
		if (!(_match_expr.type_is<jule::Ref<_119748ec0_FnCallExprModel>>() || _match_expr.type_is<jule::Ref<_11a093930_Postfix>>() || _match_expr.type_is<jule::Ref<_11a093930_Assign>>() || _match_expr.type_is<jule::Ref<_11a093930_MultiAssign>>())) { goto _case_end_4763461920; }
		_case_begin_4763461920:;
		{
			return true;
		}
		goto _match_end_4763457440;
		_case_end_4763461920:;
		if (!(_match_expr.type_is<jule::Ref<_11a53f4f0_Data>>())) { goto _case_end_4763462032; }
		_case_begin_4763462032:;
		{
			{
				auto &_match_expr{ _17628_st.operator jule::Ref<_11a53f4f0_Data>()->_field_model };
				if (!(_match_expr.type_is<jule::Ref<_119748ec0_FnCallExprModel>>())) { goto _case_end_4763470352; }
				_case_begin_4763470352:;
				{
					return true;
				}
				goto _match_end_4763468496;
				_case_end_4763470352:;
				_case_begin_4763469360:;
				{
					return false;
				}
				goto _match_end_4763468496;
				_case_end_4763469360:;
				_match_end_4763468496:;
			}
		}
		goto _match_end_4763457440;
		_case_end_4763462032:;
		_case_begin_4763459408:;
		{
			return false;
		}
		goto _match_end_4763457440;
		_case_end_4763459408:;
		_match_end_4763457440:;
	}
}



inline jule::Bool _11a093930_st_is_def(jule::Any _19514_st) {
	{
		auto &_match_expr{ _19514_st };
		if (!(_match_expr.type_is<jule::Ref<_11a245f20_Var>>())) { goto _case_end_4763471952; }
		_case_begin_4763471952:;
		{
			return true;
		}
		goto _match_end_4763472512;
		_case_end_4763471952:;
		_case_begin_4763469696:;
		{
			return false;
		}
		goto _match_end_4763472512;
		_case_end_4763469696:;
		_match_end_4763472512:;
	}
}



inline jule::Ref<_11a245f20_Var> _11a0945e0_find_var_in_package(jule::Slice<jule::Ref<_11a3c2dc0_SymbolTable>> _2728_files,jule::Str _2751_ident,jule::Bool _2763_cpp_linked) {
	{
		auto &__julec_range_expr = _2728_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11a3c2dc0_SymbolTable> _11a0945e0_f = *__julec_range_begin;
			_iter_begin_4763475648:;
			{
				jule::Ref<_11a245f20_Var> _2917_v = _11a0945e0_f->_method_find_var(_2751_ident,_2763_cpp_linked);
				if (jule::real(_2917_v)) {
					return _2917_v;
				}
			}
			_iter_next_4763475648:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a0945e0_f = *__julec_range_begin; goto _iter_begin_4763475648; }
			_iter_end_4763475648:;
		}
	}
	return jule::new_ref<_11a245f20_Var>();
}



inline jule::Ref<_11a3c2e70_TypeAlias> _11a0945e0_find_type_alias_in_package(jule::Slice<jule::Ref<_11a3c2dc0_SymbolTable>> _3935_files,jule::Str _3958_ident,jule::Bool _3970_cpp_linked) {
	{
		auto &__julec_range_expr = _3935_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11a3c2dc0_SymbolTable> _11a0945e0_f = *__julec_range_begin;
			_iter_begin_4763476432:;
			{
				jule::Ref<_11a3c2e70_TypeAlias> _4117_ta = _11a0945e0_f->_method_find_type_alias(_3958_ident,_3970_cpp_linked);
				if (jule::real(_4117_ta)) {
					return _4117_ta;
				}
			}
			_iter_next_4763476432:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a0945e0_f = *__julec_range_begin; goto _iter_begin_4763476432; }
			_iter_end_4763476432:;
		}
	}
	return jule::new_ref<_11a3c2e70_TypeAlias>();
}



inline jule::Ref<_118bb7d70_Struct> _11a0945e0_find_struct_in_package(jule::Slice<jule::Ref<_11a3c2dc0_SymbolTable>> _5131_files,jule::Str _5154_ident,jule::Bool _5166_cpp_linked) {
	{
		auto &__julec_range_expr = _5131_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11a3c2dc0_SymbolTable> _11a0945e0_f = *__julec_range_begin;
			_iter_begin_4763483808:;
			{
				jule::Ref<_118bb7d70_Struct> _5317_s = _11a0945e0_f->_method_find_struct(_5154_ident,_5166_cpp_linked);
				if (jule::real(_5317_s)) {
					return _5317_s;
				}
			}
			_iter_next_4763483808:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a0945e0_f = *__julec_range_begin; goto _iter_begin_4763483808; }
			_iter_end_4763483808:;
		}
	}
	return jule::new_ref<_118bb7d70_Struct>();
}



inline jule::Ref<_119099250_Fn> _11a0945e0_find_fn_in_package(jule::Slice<jule::Ref<_11a3c2dc0_SymbolTable>> _6327_files,jule::Str _6350_ident,jule::Bool _6362_cpp_linked) {
	{
		auto &__julec_range_expr = _6327_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11a3c2dc0_SymbolTable> _11a0945e0_file = *__julec_range_begin;
			_iter_begin_4763491168:;
			{
				jule::Ref<_119099250_Fn> _6517_f = _11a0945e0_file->_method_find_fn(_6350_ident,_6362_cpp_linked);
				if (jule::real(_6517_f)) {
					return _6517_f;
				}
			}
			_iter_next_4763491168:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a0945e0_file = *__julec_range_begin; goto _iter_begin_4763491168; }
			_iter_end_4763491168:;
		}
	}
	return jule::new_ref<_119099250_Fn>();
}



inline jule::Ref<_118e2b060_Trait> _11a0945e0_find_trait_in_package(jule::Slice<jule::Ref<_11a3c2dc0_SymbolTable>> _7530_files,jule::Str _7553_ident) {
	{
		auto &__julec_range_expr = _7530_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11a3c2dc0_SymbolTable> _11a0945e0_f = *__julec_range_begin;
			_iter_begin_4763498624:;
			{
				jule::Ref<_118e2b060_Trait> _7717_t = _11a0945e0_f->_method_find_trait(_7553_ident);
				if (jule::real(_7717_t)) {
					return _7717_t;
				}
			}
			_iter_next_4763498624:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a0945e0_f = *__julec_range_begin; goto _iter_begin_4763498624; }
			_iter_end_4763498624:;
		}
	}
	return jule::new_ref<_118e2b060_Trait>();
}



inline jule::Ref<_11a089b40_Enum> _11a0945e0_find_enum_in_package(jule::Slice<jule::Ref<_11a3c2dc0_SymbolTable>> _8729_files,jule::Str _8752_ident) {
	{
		auto &__julec_range_expr = _8729_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11a3c2dc0_SymbolTable> _11a0945e0_f = *__julec_range_begin;
			_iter_begin_4763505376:;
			{
				jule::Ref<_11a089b40_Enum> _8917_e = _11a0945e0_f->_method_find_enum(_8752_ident);
				if (jule::real(_8917_e)) {
					return _8917_e;
				}
			}
			_iter_next_4763505376:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a0945e0_f = *__julec_range_begin; goto _iter_begin_4763505376; }
			_iter_end_4763505376:;
		}
	}
	return jule::new_ref<_11a089b40_Enum>();
}



inline _13fe81720_Log _11a096220_compiler_err(_11911a8a0_Token _1617_token,jule::Str _1631_key,jule::Slice<jule::Any> _1641_args) {
	return _13fe81720_Log(1LLU,_1617_token._field_row,_1617_token._field_column,_1617_token._field_file->_method_path(),_13fe9efa0_errorf(_1631_key,_1641_args));
}



inline jule::Bool _11a096220_imp_is_lookupable(jule::Ref<_11a0945e0_ImportInfo> _2622_i,jule::Str _2638_ident) {
	if (_2622_i->_field_cpp_linked) {
		return false;
	}
	if ((!(_2622_i->_field_import_all))) {
		if (_2622_i->_field_selected.len() > 0LL) {
			return _2622_i->_method_exist_ident(_2638_ident);
		}
	}
	return _2622_i->_field_import_all;
}



inline jule::Slice<jule::Ref<_11a245f20_Var>> _11a096220_build_ret_vars(jule::Ref<_119099250_FnIns> _3923_f) {
	if (_3923_f->_field_decl->_method_is_void() || (!(jule::real(_3923_f->_field_result)))) {
		return nullptr;
	}
	jule::Slice<jule::Ref<_11a245f20_Var>> _4413_vars = nullptr;
	jule::Slice<jule::Ref<_11a3c2e70_TypeKind>> _4513_types = _11a21f8a0_get_fn_result_types(_3923_f);
	{
		auto &__julec_range_expr = _3923_f->_field_decl->_field_result->_field_idents;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _11a096220_i = 0;
			_11911a8a0_Token _11a096220_ident = *__julec_range_begin;
			_iter_begin_4763535840:;
			{
				if (_11911a8a0_is_ignore_ident(_11a096220_ident._field_kind)) {
					goto _iter_next_4763535840;
				}
				jule::Ref<_11a245f20_Var> _5117_v = jule::new_struct<_11a245f20_Var>(new( std::nothrow ) _11a245f20_Var(_3923_f->_field_scope,_11a096220_ident,_11a096220_ident._field_kind,jule::Bool(),jule::Bool(),true,jule::Bool(),true,jule::Bool(),jule::Bool(),jule::Str(),jule::new_struct<_11a3c2e70_TypeSymbol>(new( std::nothrow ) _11a3c2e70_TypeSymbol(jule::Ref<_118d9a790_TypeDecl>(),_4513_types[static_cast<jule::Int>(_11a096220_i)])),jule::new_struct<_11a53f4f0_Value>(new( std::nothrow ) _11a53f4f0_Value(jule::Ref<_118d9a790_Expr>(),jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data()))),jule::Ref<_13feceeb0_ReferenceStack>(),jule::Slice<jule::Ref<_11a245f20_Var>>()));
				_4413_vars=append(_4413_vars,jule::Slice<jule::Ref<_11a245f20_Var>>({_5117_v}));
			}
			_iter_next_4763535840:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_11a096220_i; _11a096220_ident = *__julec_range_begin; goto _iter_begin_4763535840; }
			_iter_end_4763535840:;
		}
	}
	return _4413_vars;
}



inline jule::Slice<jule::Ref<_11a245f20_Var>> _11a096220_build_param_vars(jule::Ref<_119099250_FnIns> _6825_f) {
	if (_6825_f->_field_params.len() == 0LL) {
		return nullptr;
	}
	jule::Slice<jule::Ref<_11a245f20_Var>> _7313_vars = jule::Slice<jule::Ref<_11a245f20_Var>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_6825_f->_field_params.len())));
	{
		auto &__julec_range_expr = _6825_f->_field_params;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _11a096220_i = 0;
			jule::Ref<_119099250_ParamIns> _11a096220_p = *__julec_range_begin;
			_iter_begin_4763553184:;
			{
				jule::Ref<_11a245f20_Var> _7517_v = jule::new_struct<_11a245f20_Var>(new( std::nothrow ) _11a245f20_Var(_6825_f->_field_scope,_11a096220_p->_field_decl->_field_token,_11a096220_p->_field_decl->_field_ident,jule::Bool(),jule::Bool(),_11a096220_p->_field_decl->_field_mutable,jule::Bool(),true,jule::Bool(),jule::Bool(),jule::Str(),jule::new_struct<_11a3c2e70_TypeSymbol>(new( std::nothrow ) _11a3c2e70_TypeSymbol()),jule::new_struct<_11a53f4f0_Value>(new( std::nothrow ) _11a53f4f0_Value(jule::Ref<_118d9a790_Expr>(),jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data()))),jule::Ref<_13feceeb0_ReferenceStack>(),jule::Slice<jule::Ref<_11a245f20_Var>>()));
				{
					if (!((_11a096220_p->_field_decl->_method_is_self()))) { goto _case_end_4763562224; }
					_case_begin_4763562224:;
					{
						_7517_v->_field_kind->_field_kind=jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_6825_f->_field_owner));
						_7517_v->_field_reference=true;
						if (_11a096220_p->_field_decl->_method_is_ref()) {
							_7517_v->_field_ident=_7517_v->_field_ident.slice(static_cast<jule::Int>(1LL));
							_7517_v->_field_kind->_field_kind->_field_kind=jule::new_struct<_11a3c2e70_Ref>(new( std::nothrow ) _11a3c2e70_Ref(_7517_v->_field_kind->_field_kind->_method_clone()));
						}
					}
					goto _match_end_4763560768;
					_case_end_4763562224:;
					if (!((_11a096220_p->_field_decl->_field_variadic))) { goto _case_end_4763563216; }
					_case_begin_4763563216:;
					{
						_7517_v->_field_kind->_field_kind=jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),jule::new_struct<_11a3c2e70_Slc>(new( std::nothrow ) _11a3c2e70_Slc(_11a096220_p->_field_kind->_method_clone()))));
					}
					goto _match_end_4763560768;
					_case_end_4763563216:;
					_case_begin_4763561040:;
					{
						_7517_v->_field_kind->_field_kind=_11a096220_p->_field_kind->_method_clone();
					}
					goto _match_end_4763560768;
					_case_end_4763561040:;
					_match_end_4763560768:;
				}
				_7313_vars[static_cast<jule::Int>(_11a096220_i)]=_7517_v;
			}
			_iter_next_4763553184:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_11a096220_i; _11a096220_p = *__julec_range_begin; goto _iter_begin_4763553184; }
			_iter_end_4763553184:;
		}
	}
	return _7313_vars;
}



inline jule::Slice<jule::Ref<_11a3c2e70_TypeAlias>> _11a096220_build_generic_type_aliases(jule::Ref<_119099250_FnIns> _11635_f) {
	jule::I64 _11713_size = _11635_f->_field_generics.len();
	if (jule::real(_11635_f->_field_decl->_field_owner)) {
		_11713_size+=static_cast<jule::I64>(_11635_f->_field_decl->_field_owner->_field_generics.len());
	}
	if (_11713_size == 0LL) {
		return nullptr;
	}
	jule::Slice<jule::Ref<_11a3c2e70_TypeAlias>> _12613_aliases = jule::Slice<jule::Ref<_11a3c2e70_TypeAlias>>::alloc(static_cast<jule::Int>(_11713_size));
	{
		auto &__julec_range_expr = _11635_f->_field_generics;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _11a096220_i = 0;
			jule::Ref<_11a3c2e70_TypeKind> _11a096220_g = *__julec_range_begin;
			_iter_begin_4763590080:;
			{
				jule::Ref<_118d9a790_GenericDecl> _12917_decl = _11635_f->_field_decl->_field_generics[static_cast<jule::Int>(_11a096220_i)];
				_12613_aliases[static_cast<jule::Int>(_11a096220_i)]=jule::new_struct<_11a3c2e70_TypeAlias>(new( std::nothrow ) _11a3c2e70_TypeAlias(_11635_f->_field_decl->_field_scope,jule::Bool(),jule::Bool(),true,_12917_decl->_field_token,_12917_decl->_field_ident,jule::new_struct<_11a3c2e70_TypeSymbol>(new( std::nothrow ) _11a3c2e70_TypeSymbol(jule::Ref<_118d9a790_TypeDecl>(),_11a096220_g)),jule::Str(),jule::Slice<jule::Any>()));
			}
			_iter_next_4763590080:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_11a096220_i; _11a096220_g = *__julec_range_begin; goto _iter_begin_4763590080; }
			_iter_end_4763590080:;
		}
	}
	if (jule::real(_11635_f->_field_decl->_field_owner)) {
		jule::Ref<_118bb7d70_StructIns> _14017_owner = _11635_f->_field_owner;
		{
			auto &__julec_range_expr = _14017_owner->_field_generics;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Int _11a096220_i = 0;
				jule::Ref<_11a3c2e70_TypeKind> _11a096220_g = *__julec_range_begin;
				_iter_begin_4763600192:;
				{
					jule::Ref<_118d9a790_GenericDecl> _14221_decl = _14017_owner->_field_decl->_field_generics[static_cast<jule::Int>(_11a096220_i)];
					_12613_aliases[static_cast<jule::Int>(_11635_f->_field_generics.len() + _11a096220_i)]=jule::new_struct<_11a3c2e70_TypeAlias>(new( std::nothrow ) _11a3c2e70_TypeAlias(_11635_f->_field_decl->_field_scope,jule::Bool(),jule::Bool(),true,_14221_decl->_field_token,_14221_decl->_field_ident,jule::new_struct<_11a3c2e70_TypeSymbol>(new( std::nothrow ) _11a3c2e70_TypeSymbol(jule::Ref<_118d9a790_TypeDecl>(),_11a096220_g)),jule::Str(),jule::Slice<jule::Any>()));
				}
				_iter_next_4763600192:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { ++_11a096220_i; _11a096220_g = *__julec_range_begin; goto _iter_begin_4763600192; }
				_iter_end_4763600192:;
			}
		}
	}
	return _12613_aliases;
}



inline jule::Ref<_11a3c2dc0_SymbolTable> _11a096220_find_file(jule::Slice<jule::Ref<_11a3c2dc0_SymbolTable>> _15618_files,jule::Ref<_118d9a520_File> _15641_handler) {
	{
		auto &__julec_range_expr = _15618_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11a3c2dc0_SymbolTable> _11a096220_fl = *__julec_range_begin;
			_iter_begin_4763609920:;
			{
				if ((_11a096220_fl->_field_file).alloc == (_15641_handler).alloc) {
					return _11a096220_fl;
				}
			}
			_iter_next_4763609920:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a096220_fl = *__julec_range_begin; goto _iter_begin_4763609920; }
			_iter_end_4763609920:;
		}
	}
	return jule::new_ref<_11a3c2dc0_SymbolTable>();
}



inline std::tuple<jule::Bool,jule::Bool> _11a096220_conditional_has_ret(jule::Ref<_11a093930_Conditional> _16528_c) {
	jule::Bool _16557_breaking = jule::Bool();
	jule::Bool _16547_ok = jule::Bool();
	jule::Bool _16613_breaked = false;
	{
		auto &__julec_range_expr = _16528_c->_field_elifs;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11a093930_If> _11a096220_elif = *__julec_range_begin;
			_iter_begin_4763616256:;
			{
				if ((!(jule::real(_11a096220_elif)))) {
					_16547_ok = false;
					_16557_breaking = false;
					return std::make_tuple(_16547_ok,_16557_breaking);
				}
				std::tie(_16547_ok,std::ignore,_16557_breaking) = _11a096220___has_ret(_11a096220_elif->_field_scope);
				_16613_breaked=_16613_breaked || _16557_breaking;
				if ((!(_16547_ok))) {
					_16547_ok = false;
					_16557_breaking = _16613_breaked;
					return std::make_tuple(_16547_ok,_16557_breaking);
				}
			}
			_iter_next_4763616256:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a096220_elif = *__julec_range_begin; goto _iter_begin_4763616256; }
			_iter_end_4763616256:;
		}
	}
	if ((!(jule::real(_16528_c->_field_default)))) {
		_16547_ok = false;
		_16557_breaking = _16613_breaked;
		return std::make_tuple(_16547_ok,_16557_breaking);
	}
	std::tie(_16547_ok,std::ignore,_16557_breaking) = _11a096220___has_ret(_16528_c->_field_default->_field_scope);
	_16613_breaked=_16613_breaked || _16557_breaking;
	_16547_ok = _16547_ok;
	_16557_breaking = _16613_breaked;
	return std::make_tuple(_16547_ok,_16557_breaking);
}



inline jule::Bool _11a096220_match_has_ret(jule::Ref<_11a093930_Match> _18722_m) {
	if ((!(jule::real(_18722_m->_field_default)))) {
		return false;
	}
	jule::Bool _19213_ok = true;
	jule::Bool _19313_falled = false;
	jule::Bool _19413_breaked = false;
	{
		auto &__julec_range_expr = _18722_m->_field_cases;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11a093930_Case> _11a096220_c = *__julec_range_begin;
			_iter_begin_4763633728:;
			{
				if ((!(jule::real(_11a096220_c)))) {
					return false;
				}
				std::tie(_19213_ok,_19313_falled,_19413_breaked) = _11a096220___has_ret(_11a096220_c->_field_scope);
				if (((!(_19213_ok)) && (!(_19313_falled))) || _19413_breaked) {
					return false;
				}
				{
					if (!(((!(_19213_ok))))) { goto _case_end_4763639696; }
					_case_begin_4763639696:;
					{
						if ((!(_19313_falled))) {
							return false;
						}
						goto _case_begin_4763640384;
					}
					goto _match_end_4763640192;
					_case_end_4763639696:;
					if (!((_19313_falled))) { goto _case_end_4763640384; }
					_case_begin_4763640384:;
					{
						if ((!(jule::real(_11a096220_c->_field_next)))) {
							return false;
						}
						goto _iter_next_4763633728;
					}
					goto _match_end_4763640192;
					_case_end_4763640384:;
					_match_end_4763640192:;
				}
				_19313_falled=false;
			}
			_iter_next_4763633728:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a096220_c = *__julec_range_begin; goto _iter_begin_4763633728; }
			_iter_end_4763633728:;
		}
	}
	return _11a096220_has_ret(_18722_m->_field_default->_field_scope);
}



inline std::tuple<jule::Bool,jule::Bool,jule::Bool> _11a096220___has_ret(jule::Ref<_11a093930_Scope> _22318_s) {
	jule::Bool _22355_breaked = jule::Bool();
	jule::Bool _22341_falled = jule::Bool();
	jule::Bool _22331_ok = jule::Bool();
	if ((!(jule::real(_22318_s)))) {
		_22331_ok = false;
		_22341_falled = false;
		_22355_breaked = false;
		return std::make_tuple(_22331_ok,_22341_falled,_22355_breaked);
	}
	jule::Int _22813_i = 0LL;
	_iter_begin_4763648448:;
	if (!(_22813_i < _22318_s->_field_stmts._method_len())) { goto _iter_end_4763648448; }
	{
		jule::Any _23017_st = _22318_s->_field_stmts._method_at(_22813_i);
		{
			auto &_match_expr{ _23017_st };
			if (!(_match_expr.type_is<jule::Ref<_11a093930_FallSt>>())) { goto _case_end_4763655760; }
			_case_begin_4763655760:;
			{
				_22341_falled=true;
			}
			goto _match_end_4763654496;
			_case_end_4763655760:;
			if (!(_match_expr.type_is<jule::Ref<_11a093930_BreakSt>>())) { goto _case_end_4763655872; }
			_case_begin_4763655872:;
			{
				_22331_ok = false;
				_22341_falled = false;
				_22355_breaked = true;
				return std::make_tuple(_22331_ok,_22341_falled,_22355_breaked);
			}
			goto _match_end_4763654496;
			_case_end_4763655872:;
			if (!(_match_expr.type_is<jule::Ref<_11a093930_RetSt>>())) { goto _case_end_4763655984; }
			_case_begin_4763655984:;
			{
				_22331_ok = true;
				_22341_falled = _22341_falled;
				_22355_breaked = _22355_breaked;
				return std::make_tuple(_22331_ok,_22341_falled,_22355_breaked);
			}
			goto _match_end_4763654496;
			_case_end_4763655984:;
			if (!(_match_expr.type_is<jule::Ref<_11a093930_Scope>>())) { goto _case_end_4763656096; }
			_case_begin_4763656096:;
			{
				jule::Bool _24217_ok = _11a096220_has_ret(_23017_st.operator jule::Ref<_11a093930_Scope>());
				if (_24217_ok) {
					_22331_ok = true;
					_22341_falled = false;
					_22355_breaked = false;
					return std::make_tuple(_22331_ok,_22341_falled,_22355_breaked);
				}
			}
			goto _match_end_4763654496;
			_case_end_4763656096:;
			if (!(_match_expr.type_is<jule::Ref<_11a093930_Recover>>())) { goto _case_end_4763656208; }
			_case_begin_4763656208:;
			{
				jule::Bool _24818_ok;
				jule::Bool _24822_falled;
				jule::Bool _24830_breaked;
				std::tie(_24818_ok,_24822_falled,_24830_breaked) = _11a096220___has_ret(_23017_st.operator jule::Ref<_11a093930_Recover>()->_field_scope);
				if (_24818_ok) {
					_22331_ok = true;
					_22341_falled = _24822_falled;
					_22355_breaked = _24830_breaked;
					return std::make_tuple(_22331_ok,_22341_falled,_22355_breaked);
				}
			}
			goto _match_end_4763654496;
			_case_end_4763656208:;
			if (!(_match_expr.type_is<jule::Ref<_11a093930_Conditional>>())) { goto _case_end_4763656320; }
			_case_begin_4763656320:;
			{
				jule::Bool _25418_ok;
				jule::Bool _25422_breaking;
				std::tie(_25418_ok,_25422_breaking) = _11a096220_conditional_has_ret(_23017_st.operator jule::Ref<_11a093930_Conditional>());
				if (_25418_ok) {
					_22331_ok = true;
					_22341_falled = false;
					_22355_breaked = false;
					return std::make_tuple(_22331_ok,_22341_falled,_22355_breaked);
				}
				if (_25422_breaking) {
					_22331_ok = false;
					_22341_falled = false;
					_22355_breaked = _22355_breaked;
					return std::make_tuple(_22331_ok,_22341_falled,_22355_breaked);
				}
			}
			goto _match_end_4763654496;
			_case_end_4763656320:;
			if (!(_match_expr.type_is<jule::Ref<_11a093930_Match>>())) { goto _case_end_4763656432; }
			_case_begin_4763656432:;
			{
				jule::Bool _26417_ok = _11a096220_match_has_ret(_23017_st.operator jule::Ref<_11a093930_Match>());
				if (_26417_ok) {
					_22331_ok = true;
					_22341_falled = false;
					_22355_breaked = false;
					return std::make_tuple(_22331_ok,_22341_falled,_22355_breaked);
				}
			}
			goto _match_end_4763654496;
			_case_end_4763656432:;
			_match_end_4763654496:;
		}
	}
	_iter_next_4763648448:;
	(_22813_i)++;
	goto _iter_begin_4763648448;
	_iter_end_4763648448:;
	_22331_ok = false;
	_22341_falled = _22341_falled;
	_22355_breaked = _22355_breaked;
	return std::make_tuple(_22331_ok,_22341_falled,_22355_breaked);
}



inline jule::Bool _11a096220_has_ret(jule::Ref<_11a093930_Scope> _27416_s) {
	jule::Bool _27510_ok;
	std::tie(_27510_ok,std::ignore,std::ignore) = _11a096220___has_ret(_27416_s);
	return _27510_ok;
}



inline jule::Slice<jule::Ref<_11a3c2e70_TypeKind>> _11a21f8a0_get_fn_result_types(jule::Ref<_119099250_FnIns> _3628_f) {
	{
		if (!((_3628_f->_field_decl->_method_is_void() || (!(jule::real(_3628_f->_field_result)))))) { goto _case_end_4763713760; }
		_case_begin_4763713760:;
		{
			return nullptr;
		}
		goto _match_end_4763711168;
		_case_end_4763713760:;
		if (!(((!(jule::real(_3628_f->_field_result->_method_tup())))))) { goto _case_end_4763714576; }
		_case_begin_4763714576:;
		{
			return jule::Slice<jule::Ref<_11a3c2e70_TypeKind>>({_3628_f->_field_result});
		}
		goto _match_end_4763711168;
		_case_end_4763714576:;
		_case_begin_4763711456:;
		{
			return _3628_f->_field_result->_method_tup()->_field_types;
		}
		goto _match_end_4763711168;
		_case_end_4763711456:;
		_match_end_4763711168:;
	}
}



inline jule::Bool _11a21f8a0_trait_has_reference_receiver(jule::Ref<_118e2b060_Trait> _4933_t) {
	{
		auto &__julec_range_expr = _4933_t->_field_methods;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_119099250_Fn> _11a21f8a0_f = *__julec_range_begin;
			_iter_begin_4763717344:;
			{
				if (_11a21f8a0_f->_field_statically) {
					goto _iter_next_4763717344;
				}
				jule::Ref<_119099250_Param> _5613_p = _11a21f8a0_f->_field_params[static_cast<jule::Int>(0LL)];
				if (_5613_p->_method_is_ref() && _5613_p->_method_is_self()) {
					return true;
				}
			}
			_iter_next_4763717344:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a21f8a0_f = *__julec_range_begin; goto _iter_begin_4763717344; }
			_iter_end_4763717344:;
		}
	}
	return false;
}



inline jule::Bool _11a21f8a0_float_assignable(jule::Str _6421_kind,jule::Ref<_11a53f4f0_Data> _6432_d) {
	jule::Str _659_value = _141082340_fmt_float(static_cast<jule::F64>(_6432_d->_field_constant->_method_read_f64()),'e',-1LL,64LL);
	return _11abc8da0_check_bit_float(_659_value,static_cast<jule::Int>(_11abc8da0_bitsize_of(_6421_kind)));
}



inline jule::Bool _11a21f8a0_sig_assignable(jule::Str _6919_kind,jule::Ref<_11a53f4f0_Data> _6930_d) {
	jule::F64 _709_min = _11ab89af0_min_of(_6919_kind);
	jule::F64 _719_max = _11ab89af0_max_of(_6919_kind);
	{
		if (!((_6930_d->_field_constant->_method_is_f64()))) { goto _case_end_4763735968; }
		_case_begin_4763735968:;
		{
			jule::F64 _7513_x = static_cast<jule::F64>(_6930_d->_field_constant->_method_read_f64());
			jule::F64 _7614_i;
			jule::F64 _7617_frac;
			std::tie(_7614_i,_7617_frac) = _10ffc0250_modf(_7513_x);
			if (_7617_frac != 0LL) {
				return false;
			}
			return (_7614_i >= _709_min) && (_7614_i <= _719_max);
		}
		goto _match_end_4763735696;
		_case_end_4763735968:;
		if (!((_6930_d->_field_constant->_method_is_u64()))) { goto _case_end_4763736080; }
		_case_begin_4763736080:;
		{
			jule::F64 _8313_x = static_cast<jule::F64>(_6930_d->_field_constant->_method_read_u64());
			if (_8313_x <= _719_max) {
				return true;
			}
		}
		goto _match_end_4763735696;
		_case_end_4763736080:;
		if (!((_6930_d->_field_constant->_method_is_i64()))) { goto _case_end_4763736192; }
		_case_begin_4763736192:;
		{
			jule::F64 _8913_x = static_cast<jule::F64>(_6930_d->_field_constant->_method_read_i64());
			return (_709_min <= _8913_x) && (_8913_x <= _719_max);
		}
		goto _match_end_4763735696;
		_case_end_4763736192:;
		_match_end_4763735696:;
	}
	return false;
}



inline jule::Bool _11a21f8a0_unsig_assignable(jule::Str _9621_kind,jule::Ref<_11a53f4f0_Data> _9632_d) {
	jule::F64 _979_max = _11ab89af0_max_of(_9621_kind);
	{
		if (!((_9632_d->_field_constant->_method_is_f64()))) { goto _case_end_4763755440; }
		_case_begin_4763755440:;
		{
			jule::F64 _10113_x = _9632_d->_field_constant->_method_read_f64();
			if (_10113_x < 0LL) {
				return false;
			}
			jule::F64 _10614_i;
			jule::F64 _10617_frac;
			std::tie(_10614_i,_10617_frac) = _10ffc0250_modf(_10113_x);
			if (_10617_frac != 0LL) {
				return false;
			}
			return _10614_i <= _979_max;
		}
		goto _match_end_4763755088;
		_case_end_4763755440:;
		if (!((_9632_d->_field_constant->_method_is_u64()))) { goto _case_end_4763755552; }
		_case_begin_4763755552:;
		{
			jule::F64 _11313_x = static_cast<jule::F64>(_9632_d->_field_constant->_method_read_u64());
			if (_11313_x <= _979_max) {
				return true;
			}
		}
		goto _match_end_4763755088;
		_case_end_4763755552:;
		if (!((_9632_d->_field_constant->_method_is_i64()))) { goto _case_end_4763755664; }
		_case_begin_4763755664:;
		{
			jule::F64 _11913_x = static_cast<jule::F64>(_9632_d->_field_constant->_method_read_i64());
			return (0LL <= _11913_x) && (_11913_x <= _979_max);
		}
		goto _match_end_4763755088;
		_case_end_4763755664:;
		_match_end_4763755088:;
	}
	return false;
}



inline jule::Bool _11a21f8a0_int_assignable(jule::Str _12619_kind,jule::Ref<_11a53f4f0_Data> _12630_d) {
	{
		if (!((_11ab8b300_is_sig_int(_12619_kind)))) { goto _case_end_4763774480; }
		_case_begin_4763774480:;
		{
			return _11a21f8a0_sig_assignable(_12619_kind,_12630_d);
		}
		goto _match_end_4763771104;
		_case_end_4763774480:;
		if (!((_11ab8b300_is_unsig_int(_12619_kind)))) { goto _case_end_4763774592; }
		_case_begin_4763774592:;
		{
			return _11a21f8a0_unsig_assignable(_12619_kind,_12630_d);
		}
		goto _match_end_4763771104;
		_case_end_4763774592:;
		_case_begin_4763771312:;
		{
			return false;
		}
		goto _match_end_4763771104;
		_case_end_4763771312:;
		_match_end_4763771104:;
	}
}



inline jule::Any _11a53f4f0_find_builtins_import(jule::Str _8625_ident,jule::Ref<_11a0945e0_ImportInfo> _8637_imp) {
	return _11aa913b0_find_package_builtin_def(_8637_imp->_field_link_path,_8625_ident);
}



inline jule::Any _11a53f4f0_find_builtins_sema(jule::Str _9023_ident,jule::Ref<_11a096220_Sema> _9039_s) {
	jule::Int _9113_i = 0LL;
	_iter_begin_4763779872:;
	if (!(_9113_i < _9039_s->_field_file->_field_imports._method_len())) { goto _iter_end_4763779872; }
	{
		jule::Ref<_11a0945e0_ImportInfo> _9317_imp = _9039_s->_field_file->_field_imports._method_at(_9113_i);
		if (_9317_imp->_field_import_all || _9317_imp->_method_exist_ident(_9023_ident)) {
			jule::Any _9521_def = _11a53f4f0_find_builtins_import(_9023_ident,_9317_imp);
			if (_9521_def != nullptr) {
				return _9521_def;
			}
		}
	}
	_iter_next_4763779872:;
	(_9113_i)++;
	goto _iter_begin_4763779872;
	_iter_end_4763779872:;
	return jule::Any(nullptr);
}



inline jule::Bool _11a53f4f0_is_ok_for_shifting(jule::Ref<_11a53f4f0_Data> _10427_d) {
	jule::Ref<_11a3c2e70_Prim> _1059_prim = _10427_d->_field_kind->_method_prim();
	if ((!(jule::real(_1059_prim))) || (!(_11ab8b300_is_int(_1059_prim->_method_to_str())))) {
		return false;
	}
	if ((!(_10427_d->_method_is_const()))) {
		return true;
	}
	{
		if (!((_10427_d->_field_constant->_method_is_i64()))) { goto _case_end_4763799760; }
		_case_begin_4763799760:;
		{
			return _10427_d->_field_constant->_method_read_i64() >= 0LL;
		}
		goto _match_end_4763796880;
		_case_end_4763799760:;
		if (!((_10427_d->_field_constant->_method_is_u64()))) { goto _case_end_4763799872; }
		_case_begin_4763799872:;
		{
			return true;
		}
		goto _match_end_4763796880;
		_case_end_4763799872:;
		_case_begin_4763797328:;
		{
			return false;
		}
		goto _match_end_4763796880;
		_case_end_4763797328:;
		_match_end_4763796880:;
	}
}



inline jule::Bool _11a53f4f0_is_instanced_struct(jule::Ref<_118bb7d70_StructIns> _12124_s) {
	return _12124_s->_field_decl->_field_generics.len() == _12124_s->_field_generics.len();
}



inline void _11a53f4f0_normalize_bitsize(jule::Ref<_11a53f4f0_Data> _12526_d) {
	if ((!(_12526_d->_method_is_const()))) {
		return;
	}
	jule::Str _13013_kind = jule::Str("", 0);
	{
		if (!((_12526_d->_field_constant->_method_is_f64()))) { goto _case_end_4763810496; }
		_case_begin_4763810496:;
		{
			jule::F64 _13313_x = _12526_d->_field_constant->_method_read_f64();
			_13013_kind=_11abc8da0_float_from_bits(static_cast<jule::U64>(_11abc8da0_bitsize_of_float(_13313_x)));
		}
		goto _match_end_4763809184;
		_case_end_4763810496:;
		if (!((_12526_d->_field_constant->_method_is_i64()))) { goto _case_end_4763810608; }
		_case_begin_4763810608:;
		{
			jule::I64 _13713_x = _12526_d->_field_constant->_method_read_i64();
			_13013_kind=_11abc8da0_int_from_bits(static_cast<jule::U64>(_11abc8da0_bitsize_of_int(_13713_x)));
		}
		goto _match_end_4763809184;
		_case_end_4763810608:;
		if (!((_12526_d->_field_constant->_method_is_u64()))) { goto _case_end_4763809648; }
		_case_begin_4763809648:;
		{
			jule::U64 _14113_x = _12526_d->_field_constant->_method_read_u64();
			_13013_kind=_11abc8da0_uint_from_bits(static_cast<jule::U64>(_11abc8da0_bitsize_of_uint(_14113_x)));
		}
		goto _match_end_4763809184;
		_case_end_4763809648:;
		_case_begin_4763809344:;
		{
			return;
		}
		goto _match_end_4763809184;
		_case_end_4763809344:;
		_match_end_4763809184:;
	}
	if (jule::real(_12526_d->_field_kind->_method_enm())) {
		return;
	}
	_12526_d->_field_kind->_field_kind=_11a3c2e70_build_prim_type(_13013_kind);
}



inline void _11a53f4f0_normalize_type(jule::Ref<_11a53f4f0_Data> _15623_d) {
	{
		if (!((_11a21f8a0_int_assignable(jule::Str("int", 3),_15623_d)))) { goto _case_end_4763827344; }
		_case_begin_4763827344:;
		{
			_15623_d->_field_kind->_field_kind=_11a3c2e70_build_prim_type(jule::Str("int", 3));
			_15623_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_15623_d->_field_constant->_method_as_f64()));
		}
		goto _match_end_4763827088;
		_case_end_4763827344:;
		if (!((_11a21f8a0_int_assignable(jule::Str("uint", 4),_15623_d)))) { goto _case_end_4763827456; }
		_case_begin_4763827456:;
		{
			_15623_d->_field_kind->_field_kind=_11a3c2e70_build_prim_type(jule::Str("uint", 4));
			_15623_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_15623_d->_field_constant->_method_as_f64()));
		}
		goto _match_end_4763827088;
		_case_end_4763827456:;
		_match_end_4763827088:;
	}
}



inline void _11a53f4f0_apply_cast_kind_model(jule::Ref<_11a53f4f0_Data> _16830_d) {
	_16830_d->_field_model=jule::Any(jule::new_struct<_119748ec0_CastingExprModel>(new( std::nothrow ) _119748ec0_CastingExprModel(_16830_d->_field_model,_16830_d->_field_cast_kind,_16830_d->_field_kind)));
}



inline void _11a53f4f0_apply_cast_kind(jule::Ref<_11a53f4f0_Data> _17624_d) {
	if ((!(jule::real(_17624_d->_field_cast_kind)))) {
		return;
	}
	_11a53f4f0_apply_cast_kind_model(_17624_d);
	_17624_d->_field_kind=_17624_d->_field_cast_kind;
	jule::drop(_17624_d->_field_cast_kind);
}



inline jule::Ref<_11a53f4f0_Data> _11a53f4f0_build_void_data(void) {
	return jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_11a3c2e70_build_prim_type(jule::Str("void", 4)))),jule::Ref<_11a3c2e70_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),false,jule::Ref<_11ab854f0_Const>()));
}



inline jule::Str _11a53f4f0_kind_by_bitsize(jule::Any _19720_expr) {
	{
		auto &_match_expr{ _19720_expr };
		if (!(_match_expr.type_is<jule::F64>())) { goto _case_end_4763852032; }
		_case_begin_4763852032:;
		{
			jule::F64 _20013_x = _19720_expr.operator jule::F64();
			return _11abc8da0_float_from_bits(static_cast<jule::U64>(_11abc8da0_bitsize_of_float(_20013_x)));
		}
		goto _match_end_4763848560;
		_case_end_4763852032:;
		if (!(_match_expr.type_is<jule::I64>())) { goto _case_end_4763852144; }
		_case_begin_4763852144:;
		{
			jule::I64 _20413_x = _19720_expr.operator jule::I64();
			return _11abc8da0_int_from_bits(static_cast<jule::U64>(_11abc8da0_bitsize_of_int(_20413_x)));
		}
		goto _match_end_4763848560;
		_case_end_4763852144:;
		if (!(_match_expr.type_is<jule::U64>())) { goto _case_end_4763850544; }
		_case_begin_4763850544:;
		{
			jule::U64 _20813_x = _19720_expr.operator jule::U64();
			return _11abc8da0_uint_from_bits(static_cast<jule::U64>(_11abc8da0_bitsize_of_uint(_20813_x)));
		}
		goto _match_end_4763848560;
		_case_end_4763850544:;
		_case_begin_4763850352:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4763848560;
		_case_end_4763850352:;
		_match_end_4763848560:;
	}
}



inline jule::Str _11a53f4f0_check_data_for_integer_indexing(jule::Ref<_11a53f4f0_Data> _21640_d) {
	jule::Str _21652_err_key = jule::Str();
	if ((!(jule::real(_21640_d)))) {
		_21652_err_key = jule::Str("", 0);
		return _21652_err_key;
	}
	jule::Ref<_11a3c2e70_TypeKind> _22113_kind = _21640_d->_field_kind;
	if (jule::real(_22113_kind->_method_ref())) {
		_22113_kind=_22113_kind->_method_ref()->_field_elem;
	}
	{
		if (!(((!(jule::real(_22113_kind->_method_prim())))))) { goto _case_end_4763867392; }
		_case_begin_4763867392:;
		{
			_21652_err_key = jule::Str("invalid_expr", 12);
			return _21652_err_key;
		}
		goto _match_end_4763864736;
		_case_end_4763867392:;
		if (!(((!(_11ab8b300_is_int(_22113_kind->_method_prim()->_method_to_str())))))) { goto _case_end_4763867504; }
		_case_begin_4763867504:;
		{
			_21652_err_key = jule::Str("invalid_expr", 12);
			return _21652_err_key;
		}
		goto _match_end_4763864736;
		_case_end_4763867504:;
		if (!((_21640_d->_method_is_const() && (_21640_d->_field_constant->_method_as_i64() < 0LL)))) { goto _case_end_4763867616; }
		_case_begin_4763867616:;
		{
			_21652_err_key = jule::Str("overflow_limits", 15);
			return _21652_err_key;
		}
		goto _match_end_4763864736;
		_case_end_4763867616:;
		_case_begin_4763867088:;
		{
			_21640_d->_field_cast_kind=jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_11a3c2e70_build_prim_type(jule::Str("int", 3))));
			_11a53f4f0_apply_cast_kind(_21640_d);
			_21652_err_key = jule::Str("", 0);
			return _21652_err_key;
		}
		goto _match_end_4763864736;
		_case_end_4763867088:;
		_match_end_4763864736:;
	}
}



inline jule::Bool _11a3c2e70_can_get_ptr(jule::Ref<_11a53f4f0_Data> _44520_d) {
	if ((!(_44520_d->_field_lvalue)) || _44520_d->_method_is_const()) {
		return false;
	}
	{
		if (!((jule::real(_44520_d->_field_kind->_method_fnc()) || jule::real(_44520_d->_field_kind->_method_enm())))) { goto _case_end_4763880736; }
		_case_begin_4763880736:;
		{
			return false;
		}
		goto _match_end_4763878064;
		_case_end_4763880736:;
		_case_begin_4763879728:;
		{
			return true;
		}
		goto _match_end_4763878064;
		_case_end_4763879728:;
		_match_end_4763878064:;
	}
}



inline jule::Bool _11a3c2e70_is_lvalue(jule::Ref<_11a3c2e70_TypeKind> _45918_t) {
	return ((jule::real(_45918_t->_method_ref()) || jule::real(_45918_t->_method_ptr())) || jule::real(_45918_t->_method_slc())) || jule::real(_45918_t->_method_map());
}



inline jule::Bool _11a3c2e70_is_mut(jule::Ref<_11a3c2e70_TypeKind> _46315_t) {
	if (jule::real(_46315_t->_method_strct())) {
		return _46315_t->_method_strct()->_field_has_mut;
	}
	if (jule::real(_46315_t->_method_prim())) {
		jule::Ref<_11a3c2e70_Prim> _46813_p = _46315_t->_method_prim();
		return _46813_p->_method_is_any();
	}
	return (jule::real(_46315_t->_method_slc()) || jule::real(_46315_t->_method_ptr())) || jule::real(_46315_t->_method_ref());
}



inline jule::Bool _11a3c2e70_supports_cloning(jule::Ref<_11a3c2e70_TypeKind> _47425_k) {
	{
		if (!((jule::real(_47425_k->_method_prim())))) { goto _case_end_4763906256; }
		_case_begin_4763906256:;
		{
			return (!(_47425_k->_method_prim()->_method_is_any()));
		}
		goto _match_end_4763899840;
		_case_end_4763906256:;
		if (!((jule::real(_47425_k->_method_enm())))) { goto _case_end_4763907136; }
		_case_begin_4763907136:;
		{
			return true;
		}
		goto _match_end_4763899840;
		_case_end_4763907136:;
		if (!((jule::real(_47425_k->_method_fnc())))) { goto _case_end_4763907248; }
		_case_begin_4763907248:;
		{
			return true;
		}
		goto _match_end_4763899840;
		_case_end_4763907248:;
		if (!((jule::real(_47425_k->_method_ptr())))) { goto _case_end_4763907360; }
		_case_begin_4763907360:;
		{
			return true;
		}
		goto _match_end_4763899840;
		_case_end_4763907360:;
		if (!((jule::real(_47425_k->_method_slc())))) { goto _case_end_4763905328; }
		_case_begin_4763905328:;
		{
			return _11a3c2e70_supports_cloning(_47425_k->_method_slc()->_field_elem);
		}
		goto _match_end_4763899840;
		_case_end_4763905328:;
		if (!((jule::real(_47425_k->_method_map())))) { goto _case_end_4763905440; }
		_case_begin_4763905440:;
		{
			return _11a3c2e70_supports_cloning(_47425_k->_method_map()->_field_key) && _11a3c2e70_supports_cloning(_47425_k->_method_map()->_field_val);
		}
		goto _match_end_4763899840;
		_case_end_4763905440:;
		if (!((jule::real(_47425_k->_method_arr())))) { goto _case_end_4763905552; }
		_case_begin_4763905552:;
		{
			return _11a3c2e70_supports_cloning(_47425_k->_method_arr()->_field_elem);
		}
		goto _match_end_4763899840;
		_case_end_4763905552:;
		if (!((jule::real(_47425_k->_method_ref())))) { goto _case_end_4763906448; }
		_case_begin_4763906448:;
		{
			return _11a3c2e70_supports_cloning(_47425_k->_method_ref()->_field_elem);
		}
		goto _match_end_4763899840;
		_case_end_4763906448:;
		if (!((jule::real(_47425_k->_method_strct())))) { goto _case_end_4763906560; }
		_case_begin_4763906560:;
		{
			jule::Ref<_118bb7d70_StructIns> _50117_s = _47425_k->_method_strct();
			if ((!(_50117_s->_field_has_mut))) {
				return true;
			}
			if (((!(jule::real(_50117_s->_field_decl))) || _50117_s->_field_decl->_field_cpp_linked) || (!(_50117_s->_field_decl->_method_is_derives(jule::Str("Clone", 5))))) {
				return false;
			}
			return true;
		}
		goto _match_end_4763899840;
		_case_end_4763906560:;
		_case_begin_4763899984:;
		{
			return false;
		}
		goto _match_end_4763899840;
		_case_end_4763899984:;
		_match_end_4763899840:;
	}
}



inline jule::Bool _11a3c2e70_is_nil_compatible(jule::Ref<_11a3c2e70_TypeKind> _51526_t) {
	jule::Ref<_11a3c2e70_Prim> _5169_prim = _51526_t->_method_prim();
	if (jule::real(_5169_prim) && _5169_prim->_method_is_any()) {
		return true;
	}
	return ((((_51526_t->_method_is_nil() || jule::real(_51526_t->_method_fnc())) || jule::real(_51526_t->_method_ptr())) || jule::real(_51526_t->_method_trt())) || jule::real(_51526_t->_method_slc())) || jule::real(_51526_t->_method_map());
}



inline jule::Bool _11a3c2e70_is_valid_for_ref(jule::Ref<_11a3c2e70_TypeKind> _53125_t) {
	jule::Ref<_118bb7d70_StructIns> _53213_s = _53125_t->_method_strct();
	if ((jule::real(_53213_s) && jule::real(_53213_s->_field_decl)) && _53213_s->_field_decl->_field_cpp_linked) {
		return false;
	}
	return (!(((jule::real(_53125_t->_method_enm()) || jule::real(_53125_t->_method_ptr())) || jule::real(_53125_t->_method_ref())) || jule::real(_53125_t->_method_arr())));
}



inline jule::Bool _11a3c2e70_is_variadicable(jule::Ref<_11a3c2e70_TypeKind> _53924_tk) {
	return jule::real(_53924_tk->_method_slc());
}



inline jule::Str _11a3c2e70_build_link_path_by_tokens(jule::Slice<_11911a8a0_Token> _54130_tokens) {
	jule::Str _54213_s = _54130_tokens[static_cast<jule::Int>(0LL)]._field_kind;
	{
		auto __julec_range_expr = _54130_tokens.slice(static_cast<jule::Int>(1LL));
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			_11911a8a0_Token _11a3c2e70_token = *__julec_range_begin;
			_iter_begin_4763953952:;
			{
				_54213_s+=jule::Str("::", 2);
				_54213_s+=_11a3c2e70_token._field_kind;
			}
			_iter_next_4763953952:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a3c2e70_token = *__julec_range_begin; goto _iter_begin_4763953952; }
			_iter_end_4763953952:;
		}
	}
	return _54213_s;
}



inline jule::Ref<_11a3c2e70_Prim> _11a3c2e70_build_prim_type(jule::Str _55020_kind) {
	return jule::new_struct<_11a3c2e70_Prim>(new( std::nothrow ) _11a3c2e70_Prim(_55020_kind));
}



inline jule::Ref<_118bb7d70_Struct> _11a3c2e70_get_struct_from_kind(jule::Ref<_11a3c2e70_TypeKind> _55629_k) {
	{
		if (!(((!(jule::real(_55629_k)))))) { goto _case_end_4763961888; }
		_case_begin_4763961888:;
		{
			return jule::new_ref<_118bb7d70_Struct>();
		}
		goto _match_end_4763959744;
		_case_end_4763961888:;
		if (!((jule::real(_55629_k->_method_strct())))) { goto _case_end_4763961520; }
		_case_begin_4763961520:;
		{
			return _55629_k->_method_strct()->_field_decl;
		}
		goto _match_end_4763959744;
		_case_end_4763961520:;
		if (!((jule::real(_55629_k->_method_ref())))) { goto _case_end_4763961632; }
		_case_begin_4763961632:;
		{
			return _11a3c2e70_get_struct_from_kind(_55629_k->_method_ref()->_field_elem);
		}
		goto _match_end_4763959744;
		_case_end_4763961632:;
		if (!((jule::real(_55629_k->_method_slc())))) { goto _case_end_4763962096; }
		_case_begin_4763962096:;
		{
			return _11a3c2e70_get_struct_from_kind(_55629_k->_method_slc()->_field_elem);
		}
		goto _match_end_4763959744;
		_case_end_4763962096:;
		if (!((jule::real(_55629_k->_method_arr())))) { goto _case_end_4763962208; }
		_case_begin_4763962208:;
		{
			return _11a3c2e70_get_struct_from_kind(_55629_k->_method_arr()->_field_elem);
		}
		goto _match_end_4763959744;
		_case_end_4763962208:;
		if (!((jule::real(_55629_k->_method_ptr())))) { goto _case_end_4763960528; }
		_case_begin_4763960528:;
		{
			return jule::new_ref<_118bb7d70_Struct>();
		}
		goto _match_end_4763959744;
		_case_end_4763960528:;
		_case_begin_4763958064:;
		{
			return jule::new_ref<_118bb7d70_Struct>();
		}
		goto _match_end_4763959744;
		_case_end_4763958064:;
		_match_end_4763959744:;
	}
}



inline jule::Bool _11a3c2e70_is_prim(jule::Str _58512_kind) {
	return (((((((((((((((_58512_kind == jule::Str("i8", 2)) || (_58512_kind == jule::Str("i16", 3))) || (_58512_kind == jule::Str("i32", 3))) || (_58512_kind == jule::Str("i64", 3))) || (_58512_kind == jule::Str("u8", 2))) || (_58512_kind == jule::Str("u16", 3))) || (_58512_kind == jule::Str("u32", 3))) || (_58512_kind == jule::Str("u64", 3))) || (_58512_kind == jule::Str("f32", 3))) || (_58512_kind == jule::Str("f64", 3))) || (_58512_kind == jule::Str("int", 3))) || (_58512_kind == jule::Str("uint", 4))) || (_58512_kind == jule::Str("uintptr", 7))) || (_58512_kind == jule::Str("bool", 4))) || (_58512_kind == jule::Str("str", 3))) || (_58512_kind == jule::Str("any", 3));
}



inline std::tuple<jule::Ref<_11a3c2dc0_SymbolTable>,jule::Slice<_13fe81720_Log>> _11a3c6730_build_symbols(jule::Ref<_118d8a140_Ast> _922_ast,jule::Trait<_11a0945e0_Importer> _937_importer,jule::Ref<_13feceeb0_SymbolBuilder> _961_owner) {
	jule::Ref<_13feceeb0_SymbolBuilder> _1013_sb = jule::new_struct<_13feceeb0_SymbolBuilder>(new( std::nothrow ) _13feceeb0_SymbolBuilder(_961_owner,_937_importer,jule::Slice<_13fe81720_Log>(),_922_ast,jule::Ref<_11a3c2dc0_SymbolTable>()));
	_1013_sb->_method_build();
	if (_1013_sb->_field_errors.len() == 0LL) {
		return std::make_tuple(_1013_sb->_field_table,nullptr);
	}
	return std::make_tuple(jule::new_ref<_11a3c2dc0_SymbolTable>(),_1013_sb->_field_errors);
}



inline std::tuple<jule::Ref<_11a0945e0_Package>,jule::Slice<_13fe81720_Log>> _11a3c6730___analyze_package(jule::Slice<jule::Ref<_118d8a140_Ast>> _2326_files,jule::Trait<_11a0945e0_Importer> _2345_importer) {
	jule::Slice<jule::Ref<_11a3c2dc0_SymbolTable>> _2513_tables = jule::Slice<jule::Ref<_11a3c2dc0_SymbolTable>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_2326_files.len())));
	{
		auto &__julec_range_expr = _2326_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _11a3c6730_i = 0;
			jule::Ref<_118d8a140_Ast> _11a3c6730_f = *__julec_range_begin;
			_iter_begin_4763994208:;
			{
				jule::Ref<_11a3c2dc0_SymbolTable> _2718_table;
				jule::Slice<_13fe81720_Log> _2729_errors;
				std::tie(_2718_table,_2729_errors) = _11a3c6730_build_symbols(_11a3c6730_f,_2345_importer,jule::new_ref<_13feceeb0_SymbolBuilder>());
				if (_2729_errors.len() > 0LL) {
					return std::make_tuple(jule::new_ref<_11a0945e0_Package>(),_2729_errors);
				}
				_2513_tables[static_cast<jule::Int>(_11a3c6730_i)]=_2718_table;
			}
			_iter_next_4763994208:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_11a3c6730_i; _11a3c6730_f = *__julec_range_begin; goto _iter_begin_4763994208; }
			_iter_end_4763994208:;
		}
	}
	jule::Ref<_11a096220_Sema> _3413_sema = jule::new_struct<_11a096220_Sema>(new( std::nothrow ) _11a096220_Sema());
	_3413_sema->_method_check(_2513_tables);
	if (_3413_sema->_field_errors.len() > 0LL) {
		return std::make_tuple(jule::new_ref<_11a0945e0_Package>(),_3413_sema->_field_errors);
	}
	jule::Ref<_11a0945e0_Package> _4013_pkg = jule::new_struct<_11a0945e0_Package>(new( std::nothrow ) _11a0945e0_Package(_3413_sema->_field_files));
	return std::make_tuple(_4013_pkg,nullptr);
}



inline std::tuple<jule::Ref<_11a0945e0_Package>,jule::Slice<_13fe81720_Log>> _11a3c6730_analyze_package(jule::Slice<jule::Ref<_118d8a140_Ast>> _6428_files,jule::Trait<_11a0945e0_Importer> _6447_importer) {
	if (_6428_files.len() == 0LL) {
		return std::make_tuple(jule::new_ref<_11a0945e0_Package>(),nullptr);
	}
	jule::Ref<_11a0945e0_Package> _6914_package;
	jule::Slice<_13fe81720_Log> _6927_logs;
	std::tie(_6914_package,_6927_logs) = _11a3c6730___analyze_package(_6428_files,_6447_importer);
	return std::make_tuple(_6914_package,_6927_logs);
}



inline void _11aa913b0_init(void) {
	_11aa913b0_BUILTIN_FN_OUT->_field_caller=_11aa913b0_builtin_caller_out;
	_11aa913b0_BUILTIN_FN_OUTLN->_field_caller=_11aa913b0_builtin_caller_outln;
	_11aa913b0_BUILTIN_FN_NEW->_field_caller=_11aa913b0_builtin_caller_new;
	_11aa913b0_BUILTIN_FN_REAL->_field_caller=_11aa913b0_builtin_caller_real;
	_11aa913b0_BUILTIN_FN_DROP->_field_caller=_11aa913b0_builtin_caller_drop;
	_11aa913b0_BUILTIN_FN_PANIC->_field_caller=_11aa913b0_builtin_caller_panic;
	_11aa913b0_BUILTIN_FN_MAKE->_field_caller=_11aa913b0_builtin_caller_make;
	_11aa913b0_BUILTIN_FN_APPEND->_field_caller=_11aa913b0_builtin_caller_append;
	_11aa913b0_BUILTIN_FN_COPY->_field_caller=_11aa913b0_builtin_caller_copy;
	_11aa913b0_BUILTIN_FN_RECOVER->_field_caller=_11aa913b0_builtin_caller_recover;
	_11aa913b0_BUILTIN_FN_CLONE->_field_caller=_11aa913b0_builtin_caller_clone;
	_11aa913b0_BUILTIN_FN_STD_MEM_SIZE_OF->_field_caller=_11aa913b0_builtin_caller_std_mem_size_of;
	_11aa913b0_BUILTIN_FN_STD_MEM_ALIGN_OF->_field_caller=_11aa913b0_builtin_caller_std_mem_align_of;
	jule::Ref<_119099250_Fn> _9113_error_method = _11aa913b0_BUILTIN_TRAIT_ERROR->_method_find_method(jule::Str("error", 5));
	jule::Ref<_119099250_FnIns> _9213_error_method_ins = _9113_error_method->_method_instance();
	_9213_error_method_ins->_field_result=jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_11a3c2e70_build_prim_type(jule::Str("str", 3))));
	_9213_error_method_ins->_field_caller=_11aa913b0_builtin_caller_common;
	_9113_error_method->_method_append_instance(_9213_error_method_ins);
}



inline jule::Ref<_119099250_FnIns> _11aa913b0_find_builtin_fn(jule::Str _9820_ident) {
	{
		auto &_match_expr{ _9820_ident };
		if (!((jule::Str("out", 3)) == _match_expr)) { goto _case_end_4764051664; }
		_case_begin_4764051664:;
		{
			return _11aa913b0_BUILTIN_FN_OUT;
		}
		goto _match_end_4764048848;
		_case_end_4764051664:;
		if (!((jule::Str("outln", 5)) == _match_expr)) { goto _case_end_4764051776; }
		_case_begin_4764051776:;
		{
			return _11aa913b0_BUILTIN_FN_OUTLN;
		}
		goto _match_end_4764048848;
		_case_end_4764051776:;
		if (!((jule::Str("new", 3)) == _match_expr)) { goto _case_end_4764051408; }
		_case_begin_4764051408:;
		{
			return _11aa913b0_BUILTIN_FN_NEW;
		}
		goto _match_end_4764048848;
		_case_end_4764051408:;
		if (!((jule::Str("real", 4)) == _match_expr)) { goto _case_end_4764051520; }
		_case_begin_4764051520:;
		{
			return _11aa913b0_BUILTIN_FN_REAL;
		}
		goto _match_end_4764048848;
		_case_end_4764051520:;
		if (!((jule::Str("drop", 4)) == _match_expr)) { goto _case_end_4764051984; }
		_case_begin_4764051984:;
		{
			return _11aa913b0_BUILTIN_FN_DROP;
		}
		goto _match_end_4764048848;
		_case_end_4764051984:;
		if (!((jule::Str("panic", 5)) == _match_expr)) { goto _case_end_4764052096; }
		_case_begin_4764052096:;
		{
			return _11aa913b0_BUILTIN_FN_PANIC;
		}
		goto _match_end_4764048848;
		_case_end_4764052096:;
		if (!((jule::Str("make", 4)) == _match_expr)) { goto _case_end_4764050416; }
		_case_begin_4764050416:;
		{
			return _11aa913b0_BUILTIN_FN_MAKE;
		}
		goto _match_end_4764048848;
		_case_end_4764050416:;
		if (!((jule::Str("append", 6)) == _match_expr)) { goto _case_end_4764050528; }
		_case_begin_4764050528:;
		{
			return _11aa913b0_BUILTIN_FN_APPEND;
		}
		goto _match_end_4764048848;
		_case_end_4764050528:;
		if (!((jule::Str("copy", 4)) == _match_expr)) { goto _case_end_4764049776; }
		_case_begin_4764049776:;
		{
			return _11aa913b0_BUILTIN_FN_COPY;
		}
		goto _match_end_4764048848;
		_case_end_4764049776:;
		if (!((jule::Str("recover", 7)) == _match_expr)) { goto _case_end_4764049888; }
		_case_begin_4764049888:;
		{
			return _11aa913b0_BUILTIN_FN_RECOVER;
		}
		goto _match_end_4764048848;
		_case_end_4764049888:;
		if (!((jule::Str("clone", 5)) == _match_expr)) { goto _case_end_4764050000; }
		_case_begin_4764050000:;
		{
			return _11aa913b0_BUILTIN_FN_CLONE;
		}
		goto _match_end_4764048848;
		_case_end_4764050000:;
		_case_begin_4764048944:;
		{
			return jule::new_ref<_119099250_FnIns>();
		}
		goto _match_end_4764048848;
		_case_end_4764048944:;
		_match_end_4764048848:;
	}
}



inline jule::Ref<_11a3c2e70_TypeAlias> _11aa913b0_find_builtin_type_alias(jule::Str _11528_ident) {
	{
		auto &_match_expr{ _11528_ident };
		if (!((jule::Str("byte", 4)) == _match_expr)) { goto _case_end_4764062496; }
		_case_begin_4764062496:;
		{
			return _11aa913b0_BUILTIN_TYPE_ALIAS_BYTE;
		}
		goto _match_end_4764060432;
		_case_end_4764062496:;
		if (!((jule::Str("rune", 4)) == _match_expr)) { goto _case_end_4764062608; }
		_case_begin_4764062608:;
		{
			return _11aa913b0_BUILTIN_TYPE_ALIAS_RUNE;
		}
		goto _match_end_4764060432;
		_case_end_4764062608:;
		_case_begin_4764052880:;
		{
			return jule::new_ref<_11a3c2e70_TypeAlias>();
		}
		goto _match_end_4764060432;
		_case_end_4764052880:;
		_match_end_4764060432:;
	}
}



inline jule::Ref<_118e2b060_Trait> _11aa913b0_find_builtin_trait(jule::Str _12323_ident) {
	{
		auto &_match_expr{ _12323_ident };
		if (!((jule::Str("Error", 5)) == _match_expr)) { goto _case_end_4764065984; }
		_case_begin_4764065984:;
		{
			return _11aa913b0_BUILTIN_TRAIT_ERROR;
		}
		goto _match_end_4764064560;
		_case_end_4764065984:;
		_case_begin_4764061248:;
		{
			return jule::new_ref<_118e2b060_Trait>();
		}
		goto _match_end_4764064560;
		_case_end_4764061248:;
		_match_end_4764064560:;
	}
}



inline jule::Any _11aa913b0_find_builtin_def(jule::Str _13021_ident) {
	jule::Ref<_119099250_FnIns> _13113_f = _11aa913b0_find_builtin_fn(_13021_ident);
	if (jule::real(_13113_f)) {
		return jule::Any(_13113_f);
	}
	jule::Ref<_11a3c2e70_TypeAlias> _13613_ta = _11aa913b0_find_builtin_type_alias(_13021_ident);
	if (jule::real(_13613_ta)) {
		return jule::Any(_13613_ta);
	}
	jule::Ref<_118e2b060_Trait> _14113_t = _11aa913b0_find_builtin_trait(_13021_ident);
	if (jule::real(_14113_t)) {
		return jule::Any(_14113_t);
	}
	return jule::Any(nullptr);
}



inline jule::Any _11aa913b0_find_builtin_def_std_mem(jule::Str _14929_ident) {
	{
		auto &_match_expr{ _14929_ident };
		if (!((jule::Str("size_of", 7)) == _match_expr)) { goto _case_end_4764076592; }
		_case_begin_4764076592:;
		{
			return jule::Any(_11aa913b0_BUILTIN_FN_STD_MEM_SIZE_OF);
		}
		goto _match_end_4764072176;
		_case_end_4764076592:;
		if (!((jule::Str("align_of", 8)) == _match_expr)) { goto _case_end_4764076816; }
		_case_begin_4764076816:;
		{
			return jule::Any(_11aa913b0_BUILTIN_FN_STD_MEM_ALIGN_OF);
		}
		goto _match_end_4764072176;
		_case_end_4764076816:;
		_case_begin_4764073648:;
		{
			return jule::Any(nullptr);
		}
		goto _match_end_4764072176;
		_case_end_4764073648:;
		_match_end_4764072176:;
	}
}



inline jule::Any _11aa913b0_find_package_builtin_def(jule::Str _15729_link_path,jule::Str _15745_ident) {
	{
		auto &_match_expr{ _15729_link_path };
		if (!((jule::Str("std::mem", 8)) == _match_expr)) { goto _case_end_4764081424; }
		_case_begin_4764081424:;
		{
			return _11aa913b0_find_builtin_def_std_mem(_15745_ident);
		}
		goto _match_end_4764076272;
		_case_end_4764081424:;
		_case_begin_4764077456:;
		{
			return jule::Any(nullptr);
		}
		goto _match_end_4764076272;
		_case_end_4764077456:;
		_match_end_4764076272:;
	}
}



inline jule::Ref<_11a53f4f0_Data> _11aa913b0_builtin_caller_common_plain(jule::Ref<_11a53f4f0_Eval> _16436_e,jule::Ref<_118d9a790_FnCallExpr> _16450_fc,jule::Ref<_11a53f4f0_Data> _16471_d) {
	jule::Ref<_119099250_FnIns> _16513_f = _16471_d->_field_kind->_method_fnc();
	_11a21f8a0_FnCallArgChecker _16713_fcac = _11a21f8a0_FnCallArgChecker(_16436_e,_16450_fc->_field_args,_16450_fc->_field_token,_16513_f,false,jule::Slice<jule::Any>());
	_16713_fcac._method_check();
	jule::Ref<_119748ec0_FnCallExprModel> _17613_model = jule::new_struct<_119748ec0_FnCallExprModel>(new( std::nothrow ) _119748ec0_FnCallExprModel(_16513_f,_16450_fc->_field_concurrent,_16471_d->_field_model,_16713_fcac._field_arg_models));
	if ((!(jule::real(_16513_f->_field_result)))) {
		_16471_d=_11a53f4f0_build_void_data();
	} else {
		_16471_d=jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(_16513_f->_field_result,jule::Ref<_11a3c2e70_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_11ab854f0_Const>()));
	}
	_16471_d->_field_model=jule::Any(_17613_model);
	return _16471_d;
}



inline jule::Ref<_11a53f4f0_Data> _11aa913b0_builtin_caller_common(jule::Ref<_11a53f4f0_Eval> _19530_e,jule::Ref<_118d9a790_FnCallExpr> _19544_fc,jule::Ref<_11a53f4f0_Data> _19565_d) {
	if (_19544_fc->_field_generics.len() > 0LL) {
		_19530_e->_method_push_err(_19544_fc->_field_token,jule::Str("not_has_generics", 16),jule::Slice<jule::Any>({}));
	}
	return _11aa913b0_builtin_caller_common_plain(_19530_e,_19544_fc,_19565_d);
}



inline jule::Ref<_11a53f4f0_Data> _11aa913b0_builtin_caller_common_mut(jule::Ref<_11a53f4f0_Eval> _20334_e,jule::Ref<_118d9a790_FnCallExpr> _20348_fc,jule::Ref<_11a53f4f0_Data> _20369_d) {
	if ((!(_20369_d->_field_mutable))) {
		_20334_e->_method_push_err(_20348_fc->_field_token,jule::Str("mutable_operation_on_immutable", 30),jule::Slice<jule::Any>({}));
	}
	return _11aa913b0_builtin_caller_common(_20334_e,_20348_fc,_20369_d);
}



inline jule::Ref<_11a53f4f0_Data> _11aa913b0_builtin_caller_out(jule::Ref<_11a53f4f0_Eval> _21027_e,jule::Ref<_118d9a790_FnCallExpr> _21041_fc,jule::Ref<_11a53f4f0_Data> ) {
	if (_21041_fc->_field_generics.len() > 0LL) {
		_21027_e->_method_push_err(_21041_fc->_field_token,jule::Str("not_has_generics", 16),jule::Slice<jule::Any>({}));
	}
	if (_21041_fc->_field_args.len() < 1LL) {
		_21027_e->_method_push_err(_21041_fc->_field_token,jule::Str("missing_expr_for", 16),jule::Slice<jule::Any>({jule::Any(jule::Str("v", 1))}));
		return jule::new_ref<_11a53f4f0_Data>();
	}
	if (_21041_fc->_field_args.len() > 1LL) {
		_21027_e->_method_push_err(_21041_fc->_field_args[static_cast<jule::Int>(1LL)]->_field_token,jule::Str("argument_overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_11a53f4f0_Data> _22213_expr = _21027_e->_method_eval_expr(_21041_fc->_field_args[static_cast<jule::Int>(0LL)]);
	if ((!(jule::real(_22213_expr)))) {
		return jule::new_ref<_11a53f4f0_Data>();
	}
	if (_22213_expr->_method_is_void() || jule::real(_22213_expr->_field_kind->_method_fnc())) {
		_21027_e->_method_push_err(_21041_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_token,jule::Str("invalid_expr", 12),jule::Slice<jule::Any>({}));
		return jule::new_ref<_11a53f4f0_Data>();
	}
	jule::Ref<_11a53f4f0_Data> _23213_d = _11a53f4f0_build_void_data();
	_23213_d->_field_model=jule::Any(jule::new_struct<_119748ec0_BuiltinOutCallExprModel>(new( std::nothrow ) _119748ec0_BuiltinOutCallExprModel(_22213_expr->_field_model)));
	return _23213_d;
}



inline jule::Ref<_11a53f4f0_Data> _11aa913b0_builtin_caller_outln(jule::Ref<_11a53f4f0_Eval> _23729_e,jule::Ref<_118d9a790_FnCallExpr> _23743_fc,jule::Ref<_11a53f4f0_Data> ) {
	jule::Ref<_11a53f4f0_Data> _23813_d = _11aa913b0_builtin_caller_out(_23729_e,_23743_fc,jule::new_ref<_11a53f4f0_Data>());
	if ((!(jule::real(_23813_d)))) {
		return jule::new_ref<_11a53f4f0_Data>();
	}
	_23813_d->_field_model=jule::Any(jule::new_struct<_119748ec0_BuiltinOutlnCallExprModel>(new( std::nothrow ) _119748ec0_BuiltinOutlnCallExprModel(_23813_d->_field_model.operator jule::Ref<_119748ec0_BuiltinOutCallExprModel>()->_field_expr)));
	return _23813_d;
}



inline jule::Ref<_11a53f4f0_Data> _11aa913b0_builtin_caller_new(jule::Ref<_11a53f4f0_Eval> _24927_e,jule::Ref<_118d9a790_FnCallExpr> _24941_fc,jule::Ref<_11a53f4f0_Data> _24962_d) {
	if (_24941_fc->_field_generics.len() > 0LL) {
		_24927_e->_method_push_err(_24941_fc->_field_token,jule::Str("not_has_generics", 16),jule::Slice<jule::Any>({}));
	}
	if (_24941_fc->_field_args.len() < 1LL) {
		_24927_e->_method_push_err(_24941_fc->_field_token,jule::Str("missing_expr_for", 16),jule::Slice<jule::Any>({jule::Any(jule::Str("type", 4))}));
		return jule::new_ref<_11a53f4f0_Data>();
	}
	if (_24941_fc->_field_args.len() > 2LL) {
		_24927_e->_method_push_err(_24941_fc->_field_args[static_cast<jule::Int>(2LL)]->_field_token,jule::Str("argument_overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_11a53f4f0_Data> _26113_t = _24927_e->_method_eval_expr_kind(_24941_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_kind);
	if ((!(jule::real(_26113_t)))) {
		return jule::new_ref<_11a53f4f0_Data>();
	}
	if ((!(_26113_t->_field_decl))) {
		_24927_e->_method_push_err(_24941_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_token,jule::Str("invalid_type", 12),jule::Slice<jule::Any>({}));
		return jule::new_ref<_11a53f4f0_Data>();
	}
	if ((!(_11a3c2e70_is_valid_for_ref(_26113_t->_field_kind)))) {
		jule::Ref<_118bb7d70_StructIns> _27217_s = _26113_t->_field_kind->_method_strct();
		if ((jule::real(_27217_s) && jule::real(_27217_s->_field_decl)) && _27217_s->_field_decl->_field_cpp_linked) {
			_24927_e->_method_push_err(_24941_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_token,jule::Str("cpp_linked_struct_for_ref", 25),jule::Slice<jule::Any>({}));
		} else {
			_24927_e->_method_push_err(_24941_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_token,jule::Str("invalid_type", 12),jule::Slice<jule::Any>({}));
		}
		return jule::new_ref<_11a53f4f0_Data>();
	}
	_24962_d->_field_kind=jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),jule::new_struct<_11a3c2e70_Ref>(new( std::nothrow ) _11a3c2e70_Ref(_26113_t->_field_kind->_method_clone()))));
	if (_24941_fc->_field_args.len() == 2LL) {
		jule::Ref<_11a53f4f0_Data> _28417_init = _24927_e->_field_s->_method_evalp(_24941_fc->_field_args[static_cast<jule::Int>(1LL)],_24927_e->_field_lookup,_26113_t->_field_kind);
		if (jule::real(_28417_init)) {
			_26113_t->_field_mutable=true;
			_11a093930_check_mut(_24927_e->_field_s,_26113_t,_28417_init,_24941_fc->_field_args[static_cast<jule::Int>(1LL)]->_field_token);
			_24927_e->_field_s->_method_check_assign_type(_26113_t->_field_kind,_28417_init,_24941_fc->_field_args[static_cast<jule::Int>(1LL)]->_field_token,false);
			if (jule::real(_28417_init->_field_kind->_method_ref())) {
				_28417_init->_field_model=jule::Any(jule::new_struct<_119748ec0_ExplicitDerefExprModel>(new( std::nothrow ) _119748ec0_ExplicitDerefExprModel(_28417_init->_field_model)));
			}
			_24962_d->_field_model=jule::Any(jule::new_struct<_119748ec0_BuiltinNewCallExprModel>(new( std::nothrow ) _119748ec0_BuiltinNewCallExprModel(_26113_t->_field_kind,_28417_init->_field_model)));
		}
	} else {
		_24962_d->_field_model=jule::Any(jule::new_struct<_119748ec0_BuiltinNewCallExprModel>(new( std::nothrow ) _119748ec0_BuiltinNewCallExprModel(_26113_t->_field_kind,jule::Any())));
	}
	return _24962_d;
}



inline jule::Ref<_11a53f4f0_Data> _11aa913b0_builtin_caller_real(jule::Ref<_11a53f4f0_Eval> _30828_e,jule::Ref<_118d9a790_FnCallExpr> _30842_fc,jule::Ref<_11a53f4f0_Data> _30863_d) {
	if (_30842_fc->_field_generics.len() > 0LL) {
		_30828_e->_method_push_err(_30842_fc->_field_token,jule::Str("not_has_generics", 16),jule::Slice<jule::Any>({}));
	}
	if (_30842_fc->_field_args.len() < 1LL) {
		_30828_e->_method_push_err(_30842_fc->_field_token,jule::Str("missing_expr_for", 16),jule::Slice<jule::Any>({jule::Any(jule::Str("ref", 3))}));
		return jule::new_ref<_11a53f4f0_Data>();
	}
	if (_30842_fc->_field_args.len() > 1LL) {
		_30828_e->_method_push_err(_30842_fc->_field_args[static_cast<jule::Int>(1LL)]->_field_token,jule::Str("argument_overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_11a53f4f0_Data> _32013_ref = _30828_e->_method_eval_expr(_30842_fc->_field_args[static_cast<jule::Int>(0LL)]);
	if ((!(jule::real(_32013_ref)))) {
		return jule::new_ref<_11a53f4f0_Data>();
	}
	if ((!(jule::real(_32013_ref->_field_kind->_method_ref())))) {
		_30828_e->_method_push_err(_30842_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_token,jule::Str("invalid_expr", 12),jule::Slice<jule::Any>({}));
		return jule::new_ref<_11a53f4f0_Data>();
	}
	_30863_d->_field_kind=_11aa913b0_BUILTIN_FN_REAL->_field_result;
	_30863_d->_field_model=jule::Any(jule::new_struct<_119748ec0_BuiltinRealCallExprModel>(new( std::nothrow ) _119748ec0_BuiltinRealCallExprModel(_32013_ref->_field_model)));
	return _30863_d;
}



inline jule::Ref<_11a53f4f0_Data> _11aa913b0_builtin_caller_drop(jule::Ref<_11a53f4f0_Eval> _33528_e,jule::Ref<_118d9a790_FnCallExpr> _33542_fc,jule::Ref<_11a53f4f0_Data> ) {
	if (_33542_fc->_field_generics.len() > 0LL) {
		_33528_e->_method_push_err(_33542_fc->_field_token,jule::Str("not_has_generics", 16),jule::Slice<jule::Any>({}));
	}
	if (_33542_fc->_field_args.len() < 1LL) {
		_33528_e->_method_push_err(_33542_fc->_field_token,jule::Str("missing_expr_for", 16),jule::Slice<jule::Any>({jule::Any(jule::Str("ref", 3))}));
		return jule::new_ref<_11a53f4f0_Data>();
	}
	if (_33542_fc->_field_args.len() > 1LL) {
		_33528_e->_method_push_err(_33542_fc->_field_args[static_cast<jule::Int>(2LL)]->_field_token,jule::Str("argument_overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_11a53f4f0_Data> _34713_ref = _33528_e->_method_eval_expr(_33542_fc->_field_args[static_cast<jule::Int>(0LL)]);
	if ((!(jule::real(_34713_ref)))) {
		return jule::new_ref<_11a53f4f0_Data>();
	}
	if ((!(jule::real(_34713_ref->_field_kind->_method_ref())))) {
		_33528_e->_method_push_err(_33542_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_token,jule::Str("invalid_expr", 12),jule::Slice<jule::Any>({}));
		return jule::new_ref<_11a53f4f0_Data>();
	}
	_11a093930_check_mut(_33528_e->_field_s,_34713_ref,jule::new_ref<_11a53f4f0_Data>(),_33542_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_token);
	jule::Ref<_11a53f4f0_Data> _35913_d = _11a53f4f0_build_void_data();
	_35913_d->_field_model=jule::Any(jule::new_struct<_119748ec0_BuiltinDropCallExprModel>(new( std::nothrow ) _119748ec0_BuiltinDropCallExprModel(_34713_ref->_field_model)));
	return _35913_d;
}



inline jule::Ref<_11a53f4f0_Data> _11aa913b0_builtin_caller_panic(jule::Ref<_11a53f4f0_Eval> _36429_e,jule::Ref<_118d9a790_FnCallExpr> _36443_fc,jule::Ref<_11a53f4f0_Data> ) {
	if (_36443_fc->_field_generics.len() > 0LL) {
		_36429_e->_method_push_err(_36443_fc->_field_token,jule::Str("not_has_generics", 16),jule::Slice<jule::Any>({}));
	}
	if (_36443_fc->_field_args.len() < 1LL) {
		_36429_e->_method_push_err(_36443_fc->_field_token,jule::Str("missing_expr_for", 16),jule::Slice<jule::Any>({jule::Any(jule::Str("error", 5))}));
		return jule::new_ref<_11a53f4f0_Data>();
	}
	if (_36443_fc->_field_args.len() > 1LL) {
		_36429_e->_method_push_err(_36443_fc->_field_args[static_cast<jule::Int>(2LL)]->_field_token,jule::Str("argument_overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_11a53f4f0_Data> _37613_expr = _36429_e->_method_eval_expr(_36443_fc->_field_args[static_cast<jule::Int>(0LL)]);
	if ((!(jule::real(_37613_expr)))) {
		return jule::new_ref<_11a53f4f0_Data>();
	}
	if (jule::real(_37613_expr->_field_kind->_method_strct())) {
		jule::Ref<_118bb7d70_StructIns> _38213_s = _37613_expr->_field_kind->_method_strct();
		if (_38213_s->_field_decl->_method_is_implements(_11aa913b0_BUILTIN_TRAIT_ERROR)) {
			_37613_expr->_field_cast_kind=jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_11aa913b0_BUILTIN_TRAIT_ERROR));
			_11a53f4f0_apply_cast_kind(_37613_expr);
		}
	}
	jule::Ref<_11a53f4f0_Data> _39113_d = _11a53f4f0_build_void_data();
	_39113_d->_field_model=jule::Any(jule::new_struct<_119748ec0_BuiltinPanicCallExprModel>(new( std::nothrow ) _119748ec0_BuiltinPanicCallExprModel(_37613_expr->_field_model)));
	return _39113_d;
}



inline jule::Ref<_11a53f4f0_Data> _11aa913b0_builtin_caller_make(jule::Ref<_11a53f4f0_Eval> _39628_e,jule::Ref<_118d9a790_FnCallExpr> _39642_fc,jule::Ref<_11a53f4f0_Data> _39663_d) {
	if (_39642_fc->_field_generics.len() > 0LL) {
		_39628_e->_method_push_err(_39642_fc->_field_token,jule::Str("not_has_generics", 16),jule::Slice<jule::Any>({}));
	}
	if (_39642_fc->_field_args.len() < 2LL) {
		if (_39642_fc->_field_args.len() == 1LL) {
			_39628_e->_method_push_err(_39642_fc->_field_token,jule::Str("missing_expr_for", 16),jule::Slice<jule::Any>({jule::Any(jule::Str("size", 4))}));
			return jule::new_ref<_11a53f4f0_Data>();
		}
		_39628_e->_method_push_err(_39642_fc->_field_token,jule::Str("missing_expr_for", 16),jule::Slice<jule::Any>({jule::Any(jule::Str("type, size", 10))}));
		return jule::new_ref<_11a53f4f0_Data>();
	}
	if (_39642_fc->_field_args.len() > 3LL) {
		_39628_e->_method_push_err(_39642_fc->_field_args[static_cast<jule::Int>(3LL)]->_field_token,jule::Str("argument_overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_11a53f4f0_Data> _41213_t = _39628_e->_method_eval_expr_kind(_39642_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_kind);
	if ((!(jule::real(_41213_t)))) {
		return jule::new_ref<_11a53f4f0_Data>();
	}
	if ((!(_41213_t->_field_decl)) || (!(jule::real(_41213_t->_field_kind->_method_slc())))) {
		_39628_e->_method_push_err(_39642_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_token,jule::Str("invalid_type", 12),jule::Slice<jule::Any>({}));
		return jule::new_ref<_11a53f4f0_Data>();
	}
	_39663_d->_field_kind=_41213_t->_field_kind;
	jule::Ref<_11a53f4f0_Data> _42413_len = _39628_e->_field_s->_method_evalp(_39642_fc->_field_args[static_cast<jule::Int>(1LL)],_39628_e->_field_lookup,_41213_t->_field_kind);
	if ((!(jule::real(_42413_len)))) {
		return _39663_d;
	}
	_39628_e->_method_check_integer_indexing_by_data(_42413_len,_39642_fc->_field_args[static_cast<jule::Int>(1LL)]->_field_token);
	if (_39642_fc->_field_args.len() == 3LL) {
		jule::Ref<_11a53f4f0_Data> _43217_cap = _39628_e->_field_s->_method_evalp(_39642_fc->_field_args[static_cast<jule::Int>(2LL)],_39628_e->_field_lookup,_41213_t->_field_kind);
		if ((!(jule::real(_43217_cap)))) {
			return _39663_d;
		}
		_39628_e->_method_check_integer_indexing_by_data(_43217_cap,_39642_fc->_field_args[static_cast<jule::Int>(2LL)]->_field_token);
		_39663_d->_field_model=jule::Any(jule::new_struct<_119748ec0_BuiltinMakeCallExprModel>(new( std::nothrow ) _119748ec0_BuiltinMakeCallExprModel(_41213_t->_field_kind,_42413_len->_field_model,_43217_cap->_field_model)));
	} else {
		_39663_d->_field_model=jule::Any(jule::new_struct<_119748ec0_BuiltinMakeCallExprModel>(new( std::nothrow ) _119748ec0_BuiltinMakeCallExprModel(_41213_t->_field_kind,_42413_len->_field_model,jule::Any())));
	}
	return _39663_d;
}



inline jule::Ref<_11a53f4f0_Data> _11aa913b0_builtin_caller_append(jule::Ref<_11a53f4f0_Eval> _45330_e,jule::Ref<_118d9a790_FnCallExpr> _45344_fc,jule::Ref<_11a53f4f0_Data> _45365_d) {
	if (_45344_fc->_field_generics.len() > 0LL) {
		_45330_e->_method_push_err(_45344_fc->_field_token,jule::Str("not_has_generics", 16),jule::Slice<jule::Any>({}));
	}
	if (_45344_fc->_field_args.len() < 2LL) {
		if (_45344_fc->_field_args.len() == 1LL) {
			_45330_e->_method_push_err(_45344_fc->_field_token,jule::Str("missing_expr_for", 16),jule::Slice<jule::Any>({jule::Any(jule::Str("src", 3))}));
			return jule::new_ref<_11a53f4f0_Data>();
		}
		_45330_e->_method_push_err(_45344_fc->_field_token,jule::Str("missing_expr_for", 16),jule::Slice<jule::Any>({jule::Any(jule::Str("src, values", 11))}));
		return jule::new_ref<_11a53f4f0_Data>();
	}
	jule::Ref<_11a53f4f0_Data> _46613_t = _45330_e->_method_eval_expr(_45344_fc->_field_args[static_cast<jule::Int>(0LL)]);
	if ((!(jule::real(_46613_t)))) {
		return jule::new_ref<_11a53f4f0_Data>();
	}
	jule::Bool _47113_ref = false;
	if (jule::real(_46613_t->_field_kind->_method_ref())) {
		_46613_t->_field_kind=_46613_t->_field_kind->_method_ref()->_field_elem;
		_47113_ref=true;
	}
	if ((!(jule::real(_46613_t->_field_kind->_method_slc())))) {
		_45330_e->_method_push_err(_45344_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_token,jule::Str("invalid_expr", 12),jule::Slice<jule::Any>({}));
		return jule::new_ref<_11a53f4f0_Data>();
	}
	jule::Ref<_119099250_FnIns> _48213_f = jule::new_struct<_119099250_FnIns>(new( std::nothrow ) _119099250_FnIns(jule::Ref<_118bb7d70_StructIns>(),jule::Ref<_119099250_Fn>(),jule::Slice<jule::Ref<_11a3c2e70_TypeKind>>(),jule::Slice<jule::Ref<_119099250_ParamIns>>({jule::new_struct<_119099250_ParamIns>(new( std::nothrow ) _119099250_ParamIns(jule::new_struct<_119099250_Param>(new( std::nothrow ) _119099250_Param(_11911a8a0_Token(),true,jule::Bool(),jule::Bool(),jule::Ref<_11a3c2e70_TypeSymbol>(),jule::Str())),_46613_t->_field_kind->_method_clone())),jule::new_struct<_119099250_ParamIns>(new( std::nothrow ) _119099250_ParamIns(jule::new_struct<_119099250_Param>(new( std::nothrow ) _119099250_Param(_11911a8a0_Token(),true,true,jule::Bool(),jule::Ref<_11a3c2e70_TypeSymbol>(),jule::Str())),_46613_t->_field_kind->_method_slc()->_field_elem->_method_clone()))}),_46613_t->_field_kind->_method_clone(),jule::Ref<_11a093930_Scope>(),_11aa913b0_builtin_caller_common_plain,jule::Bool(),jule::Bool()));
	_45365_d->_field_kind=jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_48213_f));
	_45365_d->_field_model=jule::Any(jule::new_struct<_119748ec0_CommonIdentExprModel>(new( std::nothrow ) _119748ec0_CommonIdentExprModel(jule::Str("append", 6))));
	_45365_d=_11aa913b0_builtin_caller_common_plain(_45330_e,_45344_fc,_45365_d);
	if (jule::real(_45365_d) && _47113_ref) {
		_45365_d->_field_model.operator jule::Ref<_119748ec0_FnCallExprModel>()->_field_args[static_cast<jule::Int>(0LL)]=jule::Any(jule::new_struct<_119748ec0_ExplicitDerefExprModel>(new( std::nothrow ) _119748ec0_ExplicitDerefExprModel(_46613_t->_field_model)));
	}
	return _45365_d;
}



inline jule::Ref<_11a53f4f0_Data> _11aa913b0_builtin_caller_copy(jule::Ref<_11a53f4f0_Eval> _51328_e,jule::Ref<_118d9a790_FnCallExpr> _51342_fc,jule::Ref<_11a53f4f0_Data> _51363_d) {
	if (_51342_fc->_field_generics.len() > 0LL) {
		_51328_e->_method_push_err(_51342_fc->_field_token,jule::Str("not_has_generics", 16),jule::Slice<jule::Any>({}));
	}
	if (_51342_fc->_field_args.len() < 2LL) {
		if (_51342_fc->_field_args.len() == 1LL) {
			_51328_e->_method_push_err(_51342_fc->_field_token,jule::Str("missing_expr_for", 16),jule::Slice<jule::Any>({jule::Any(jule::Str("src", 3))}));
			return jule::new_ref<_11a53f4f0_Data>();
		}
		_51328_e->_method_push_err(_51342_fc->_field_token,jule::Str("missing_expr_for", 16),jule::Slice<jule::Any>({jule::Any(jule::Str("src, values", 11))}));
		return jule::new_ref<_11a53f4f0_Data>();
	}
	if (_51342_fc->_field_args.len() > 2LL) {
		_51328_e->_method_push_err(_51342_fc->_field_args[static_cast<jule::Int>(2LL)]->_field_token,jule::Str("argument_overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_11a53f4f0_Data> _52913_t = _51328_e->_method_eval_expr(_51342_fc->_field_args[static_cast<jule::Int>(0LL)]);
	if ((!(jule::real(_52913_t)))) {
		return jule::new_ref<_11a53f4f0_Data>();
	}
	jule::Bool _53413_ref = false;
	if (jule::real(_52913_t->_field_kind->_method_ref())) {
		_52913_t->_field_kind=_52913_t->_field_kind->_method_ref()->_field_elem;
		_53413_ref=false;
	}
	if ((!(jule::real(_52913_t->_field_kind->_method_slc())))) {
		_51328_e->_method_push_err(_51342_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_token,jule::Str("invalid_expr", 12),jule::Slice<jule::Any>({}));
		return jule::new_ref<_11a53f4f0_Data>();
	}
	if ((!(_52913_t->_field_mutable))) {
		_51328_e->_method_push_err(_51342_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_token,jule::Str("mutable_operation_on_immutable", 30),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_119099250_FnIns> _54913_f = jule::new_struct<_119099250_FnIns>(new( std::nothrow ) _119099250_FnIns(jule::Ref<_118bb7d70_StructIns>(),jule::Ref<_119099250_Fn>(),jule::Slice<jule::Ref<_11a3c2e70_TypeKind>>(),jule::Slice<jule::Ref<_119099250_ParamIns>>({jule::new_struct<_119099250_ParamIns>(new( std::nothrow ) _119099250_ParamIns(jule::new_struct<_119099250_Param>(new( std::nothrow ) _119099250_Param()),_52913_t->_field_kind->_method_clone())),jule::new_struct<_119099250_ParamIns>(new( std::nothrow ) _119099250_ParamIns(jule::new_struct<_119099250_Param>(new( std::nothrow ) _119099250_Param(_11911a8a0_Token(),true,jule::Bool(),jule::Bool(),jule::Ref<_11a3c2e70_TypeSymbol>(),jule::Str())),_52913_t->_field_kind->_method_clone()))}),_11aa913b0_BUILTIN_FN_COPY->_field_result,jule::Ref<_11a093930_Scope>(),_11aa913b0_builtin_caller_common_plain,jule::Bool(),jule::Bool()));
	_51363_d->_field_kind=jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_54913_f));
	_51363_d->_field_model=jule::Any(jule::new_struct<_119748ec0_CommonIdentExprModel>(new( std::nothrow ) _119748ec0_CommonIdentExprModel(jule::Str("copy", 4))));
	_51363_d=_11aa913b0_builtin_caller_common_plain(_51328_e,_51342_fc,_51363_d);
	if (jule::real(_51363_d) && _53413_ref) {
		_51363_d->_field_model.operator jule::Ref<_119748ec0_FnCallExprModel>()->_field_args[static_cast<jule::Int>(0LL)]=jule::Any(jule::new_struct<_119748ec0_ExplicitDerefExprModel>(new( std::nothrow ) _119748ec0_ExplicitDerefExprModel(_52913_t->_field_model)));
	}
	return _51363_d;
}



inline jule::Ref<_11a53f4f0_Data> _11aa913b0_builtin_caller_recover(jule::Ref<_11a53f4f0_Eval> _57831_e,jule::Ref<_118d9a790_FnCallExpr> _57845_fc,jule::Ref<_11a53f4f0_Data> ) {
	if (_57845_fc->_field_generics.len() > 0LL) {
		_57831_e->_method_push_err(_57845_fc->_field_token,jule::Str("not_has_generics", 16),jule::Slice<jule::Any>({}));
	}
	
	if (_57845_fc->_field_args.len() < 1LL) {
		_57831_e->_method_push_err(_57845_fc->_field_token,jule::Str("missing_expr_for", 16),jule::Slice<jule::Any>({jule::Any(jule::Str("handler", 7))}));
		return jule::new_ref<_11a53f4f0_Data>();
	}
	if (_57845_fc->_field_args.len() > 1LL) {
		_57831_e->_method_push_err(_57845_fc->_field_args[static_cast<jule::Int>(1LL)]->_field_token,jule::Str("argument_overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_11a53f4f0_Data> _59213_t = _57831_e->_method_eval_expr(_57845_fc->_field_args[static_cast<jule::Int>(0LL)]);
	if ((!(jule::real(_59213_t)))) {
		return jule::new_ref<_11a53f4f0_Data>();
	}
	if ((!(jule::real(_59213_t->_field_kind->_method_fnc())))) {
		_57831_e->_method_push_err(_57845_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_token,jule::Str("invalid_expr", 12),jule::Slice<jule::Any>({}));
		return jule::new_ref<_11a53f4f0_Data>();
	}
	jule::Str _6029_tkind = _59213_t->_field_kind->_method_fnc()->_method_to_str();
	if (_6029_tkind != jule::Str("fn(Error)", 9)) {
		_57831_e->_method_push_err(_57845_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_token,jule::Str("incompatible_types", 18),jule::Slice<jule::Any>({jule::Any(_6029_tkind),jule::Any(jule::Str("fn(Error)", 9))}));
	}
	jule::Ref<_11a53f4f0_Data> _60713_d = _11a53f4f0_build_void_data();
	_60713_d->_field_kind=_59213_t->_field_kind->_method_clone();
	_60713_d->_field_model=jule::Any(jule::new_struct<_11a093930_Recover>(new( std::nothrow ) _11a093930_Recover(jule::Ref<_119099250_FnIns>(),_59213_t->_field_model,jule::Ref<_11a093930_Scope>())));
	return _60713_d;
}



inline jule::Ref<_11a53f4f0_Data> _11aa913b0_builtin_caller_clone(jule::Ref<_11a53f4f0_Eval> _61529_e,jule::Ref<_118d9a790_FnCallExpr> _61543_fc,jule::Ref<_11a53f4f0_Data> ) {
	if (_61543_fc->_field_generics.len() > 0LL) {
		_61529_e->_method_push_err(_61543_fc->_field_token,jule::Str("not_has_generics", 16),jule::Slice<jule::Any>({}));
	}
	if (_61543_fc->_field_args.len() < 1LL) {
		_61529_e->_method_push_err(_61543_fc->_field_token,jule::Str("missing_expr_for", 16),jule::Slice<jule::Any>({jule::Any(jule::Str("expr", 4))}));
		return jule::new_ref<_11a53f4f0_Data>();
	}
	if (_61543_fc->_field_args.len() > 1LL) {
		_61529_e->_method_push_err(_61543_fc->_field_args[static_cast<jule::Int>(1LL)]->_field_token,jule::Str("argument_overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_11a53f4f0_Data> _62813_d = _61529_e->_method_eval_expr_kind(_61543_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_kind);
	if ((!(jule::real(_62813_d)))) {
		return jule::new_ref<_11a53f4f0_Data>();
	}
	jule::Fn<void(jule::Ref<_11a3c2e70_TypeKind>)> _6339_check_kind = jule::Fn<void(jule::Ref<_11a3c2e70_TypeKind>)>([=](jule::Ref<_11a3c2e70_TypeKind> _63329_k) mutable -> void {
		{
			if (!((jule::real(_63329_k->_method_slc())))) { goto _case_end_4764488320; }
			_case_begin_4764488320:;
			{
				if ((!(_11a3c2e70_supports_cloning(_63329_k->_method_slc()->_field_elem)))) {
					_61529_e->_method_push_err(_61543_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_token,jule::Str("internal_type_not_supports_clone", 32),jule::Slice<jule::Any>({jule::Any(_63329_k->_method_to_str())}));
				}
			}
			goto _match_end_4764486560;
			_case_end_4764488320:;
			if (!((jule::real(_63329_k->_method_map())))) { goto _case_end_4764487584; }
			_case_begin_4764487584:;
			{
				if ((!(_11a3c2e70_supports_cloning(_63329_k->_method_map()->_field_key))) || _11a3c2e70_supports_cloning(_63329_k->_method_map()->_field_val)) {
					_61529_e->_method_push_err(_61543_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_token,jule::Str("internal_type_not_supports_clone", 32),jule::Slice<jule::Any>({jule::Any(_63329_k->_method_to_str())}));
				}
			}
			goto _match_end_4764486560;
			_case_end_4764487584:;
			if (!((jule::real(_63329_k->_method_arr())))) { goto _case_end_4764487072; }
			_case_begin_4764487072:;
			{
				if ((!(_11a3c2e70_supports_cloning(_63329_k->_method_arr()->_field_elem)))) {
					_61529_e->_method_push_err(_61543_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_token,jule::Str("internal_type_not_supports_clone", 32),jule::Slice<jule::Any>({jule::Any(_63329_k->_method_to_str())}));
				}
			}
			goto _match_end_4764486560;
			_case_end_4764487072:;
			if (!((jule::real(_63329_k->_method_ref())))) { goto _case_end_4764487184; }
			_case_begin_4764487184:;
			{
				if ((!(_11a3c2e70_supports_cloning(_63329_k->_method_ref()->_field_elem)))) {
					_61529_e->_method_push_err(_61543_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_token,jule::Str("internal_type_not_supports_clone", 32),jule::Slice<jule::Any>({jule::Any(_63329_k->_method_to_str())}));
				}
			}
			goto _match_end_4764486560;
			_case_end_4764487184:;
			if (!((jule::real(_63329_k->_method_strct())))) { goto _case_end_4764487296; }
			_case_begin_4764487296:;
			{
				jule::Ref<_118bb7d70_StructIns> _65617_s = _62813_d->_field_kind->_method_strct();
				if ((!(_65617_s->_field_has_mut))) {
					_61529_e->_method_push_err(_61543_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_token,jule::Str("clone_immut_struct", 18),jule::Slice<jule::Any>({jule::Any(_62813_d->_field_kind->_method_to_str())}));
				}
				if (((!(jule::real(_65617_s->_field_decl))) || _65617_s->_field_decl->_field_cpp_linked) || (!(_65617_s->_field_decl->_method_is_derives(jule::Str("Clone", 5))))) {
					_61529_e->_method_push_err(_61543_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_token,jule::Str("type_is_not_derives", 19),jule::Slice<jule::Any>({jule::Any(_62813_d->_field_kind->_method_to_str()),jule::Any(jule::Str("Clone", 5))}));
				}
			}
			goto _match_end_4764486560;
			_case_end_4764487296:;
			_case_begin_4764486768:;
			{
				_61529_e->_method_push_err(_61543_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_token,jule::Str("type_is_not_derives", 19),jule::Slice<jule::Any>({jule::Any(_62813_d->_field_kind->_method_to_str()),jule::Any(jule::Str("Clone", 5))}));
			}
			goto _match_end_4764486560;
			_case_end_4764486768:;
			_match_end_4764486560:;
		}
	});
	{
		if (!(((!(_62813_d->_field_lvalue))))) { goto _case_end_4764533008; }
		_case_begin_4764533008:;
		{
			_61529_e->_method_push_err(_61543_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_token,jule::Str("clone_non_lvalue", 16),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4764533504;
		_case_end_4764533008:;
		if (!(((!(_11a3c2e70_supports_cloning(_62813_d->_field_kind)))))) { goto _case_end_4764533120; }
		_case_begin_4764533120:;
		{
			_6339_check_kind(_62813_d->_field_kind);
		}
		goto _match_end_4764533504;
		_case_end_4764533120:;
		_match_end_4764533504:;
	}
	_62813_d->_field_mutable=true;
	_62813_d->_field_model=jule::Any(jule::new_struct<_119748ec0_BuiltinCloneCallExprModel>(new( std::nothrow ) _119748ec0_BuiltinCloneCallExprModel(_62813_d->_field_model)));
	return _62813_d;
}



inline jule::Ref<_11a53f4f0_Data> _11aa913b0_builtin_caller_std_mem_size_of(jule::Ref<_11a53f4f0_Eval> _68239_e,jule::Ref<_118d9a790_FnCallExpr> _68253_fc,jule::Ref<_11a53f4f0_Data> ) {
	if (_68253_fc->_field_generics.len() > 0LL) {
		_68239_e->_method_push_err(_68253_fc->_field_token,jule::Str("not_has_generics", 16),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_11a53f4f0_Data> _68613_result = jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_11a3c2e70_build_prim_type(jule::Str("uint", 4)))),jule::Ref<_11a3c2e70_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_11ab854f0_Const>()));
	if (_68253_fc->_field_args.len() < 1LL) {
		_68239_e->_method_push_err(_68253_fc->_field_token,jule::Str("missing_expr_for", 16),jule::Slice<jule::Any>({jule::Any(jule::Str("type|expr", 9))}));
		return _68613_result;
	}
	if (_68253_fc->_field_args.len() > 1LL) {
		_68239_e->_method_push_err(_68253_fc->_field_args[static_cast<jule::Int>(1LL)]->_field_token,jule::Str("argument_overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_11a53f4f0_Data> _69813_d = _68239_e->_method_eval_expr_kind(_68253_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_kind);
	if ((!(jule::real(_69813_d)))) {
		return _68613_result;
	}
	_68613_result->_field_model=jule::Any(jule::new_struct<_119748ec0_SizeofExprModel>(new( std::nothrow ) _119748ec0_SizeofExprModel(_69813_d->_field_model)));
	return _68613_result;
}



inline jule::Ref<_11a53f4f0_Data> _11aa913b0_builtin_caller_std_mem_align_of(jule::Ref<_11a53f4f0_Eval> _70740_e,jule::Ref<_118d9a790_FnCallExpr> _70754_fc,jule::Ref<_11a53f4f0_Data> ) {
	if (_70754_fc->_field_generics.len() > 0LL) {
		_70740_e->_method_push_err(_70754_fc->_field_token,jule::Str("not_has_generics", 16),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_11a53f4f0_Data> _71113_result = jule::new_struct<_11a53f4f0_Data>(new( std::nothrow ) _11a53f4f0_Data(jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_11a3c2e70_build_prim_type(jule::Str("uint", 4)))),jule::Ref<_11a3c2e70_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_11ab854f0_Const>()));
	if (_70754_fc->_field_args.len() < 1LL) {
		_70740_e->_method_push_err(_70754_fc->_field_token,jule::Str("missing_expr_for", 16),jule::Slice<jule::Any>({jule::Any(jule::Str("type|expr", 9))}));
		return _71113_result;
	}
	if (_70754_fc->_field_args.len() > 1LL) {
		_70740_e->_method_push_err(_70754_fc->_field_args[static_cast<jule::Int>(1LL)]->_field_token,jule::Str("argument_overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_11a53f4f0_Data> _72313_d = _70740_e->_method_eval_expr_kind(_70754_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_kind);
	if ((!(jule::real(_72313_d)))) {
		return _71113_result;
	}
	_71113_result->_field_model=jule::Any(jule::new_struct<_119748ec0_AlignofExprModel>(new( std::nothrow ) _119748ec0_AlignofExprModel(_72313_d->_field_model)));
	return _71113_result;
}



inline jule::Bool _118d3e580_eval_directive_ident(jule::Str _525_ident) {
	if (_525_ident == jule::Str("", 0)) {
		return false;
	}
	{
		auto &__julec_range_expr = _118d5bd10_FLAGS;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _118d3e580_flag = *__julec_range_begin;
			_iter_begin_4770450912:;
			{
				if (_118d3e580_flag == _525_ident) {
					return true;
				}
			}
			_iter_next_4770450912:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _118d3e580_flag = *__julec_range_begin; goto _iter_begin_4770450912; }
			_iter_end_4770450912:;
		}
	}
	return false;
}



inline jule::Bool _118d3e580_eval_directive_part(jule::Str _1928_part) {
	jule::Bool _209_logical_not = _1928_part[static_cast<jule::Int>(0LL)] == '!';
	if (_209_logical_not) {
		_1928_part=_1928_part.slice(static_cast<jule::Int>(1LL));
	}
	jule::Bool _2513_result = _118d3e580_eval_directive_ident(_1928_part);
	if (_209_logical_not) {
		_2513_result=(!(_2513_result));
	}
	return _2513_result;
}



inline jule::Slice<jule::Str> _118d3e580_split_operans(jule::Str _3218_op,jule::Str _3227_expr) {
	jule::Slice<jule::Str> _3313_parts = jule::Slice<jule::Str>::alloc(static_cast<jule::Int>(0LL),static_cast<jule::Int>(10LL));
	jule::Int _3513_range_n = 0LL;
	jule::Int _3613_i = 0LL;
	jule::Int _3713_last = 0LL;
	_iter_begin_4770463712:;
	if (!(_3613_i < (_3227_expr.len() - 1LL))) { goto _iter_end_4770463712; }
	{
		jule::U8 _3913_b = _3227_expr[static_cast<jule::Int>(_3613_i)];
		if (_3913_b == '(') {
			(_3513_range_n)++;
			goto _iter_next_4770463712;
		} else if (_3913_b == ')') {
			(_3513_range_n)--;
		}
		if (_3513_range_n > 0LL) {
			goto _iter_next_4770463712;
		}
		{
			auto &_match_expr{ _3218_op };
			if (!((jule::Str("||", 2)) == _match_expr)) { goto _case_end_4770470336; }
			_case_begin_4770470336:;
			{
				if ((_3913_b == '|') && (_3227_expr[static_cast<jule::Int>(_3613_i + 1LL)] == '|')) {
					_3313_parts=append(_3313_parts,jule::Slice<jule::Str>({_3227_expr.slice(static_cast<jule::Int>(_3713_last),static_cast<jule::Int>(_3613_i))}));
					_3713_last=_3613_i + 2LL;
				}
			}
			goto _match_end_4770474000;
			_case_end_4770470336:;
			if (!((jule::Str("&&", 2)) == _match_expr)) { goto _case_end_4770472608; }
			_case_begin_4770472608:;
			{
				if ((_3913_b == '&') && (_3227_expr[static_cast<jule::Int>(_3613_i + 1LL)] == '&')) {
					_3313_parts=append(_3313_parts,jule::Slice<jule::Str>({_3227_expr.slice(static_cast<jule::Int>(_3713_last),static_cast<jule::Int>(_3613_i))}));
					_3713_last=_3613_i + 2LL;
				}
			}
			goto _match_end_4770474000;
			_case_end_4770472608:;
			_match_end_4770474000:;
		}
	}
	_iter_next_4770463712:;
	(_3613_i)++;
	goto _iter_begin_4770463712;
	_iter_end_4770463712:;
	if (_3713_last < _3227_expr.len()) {
		_3313_parts=append(_3313_parts,jule::Slice<jule::Str>({_3227_expr.slice(static_cast<jule::Int>(_3713_last))}));
	} else {
		_3313_parts=append(_3313_parts,jule::Slice<jule::Str>({jule::Str("", 0)}));
	}
	return _3313_parts;
}



inline jule::Bool _118d3e580_eval_directive_expr(jule::Str _7624_expr) {
	if (_7624_expr == jule::Str("", 0)) {
		return false;
	}
	jule::Bool _8113_result = false;
	jule::Slice<jule::Str> _839_logical_or_parts = _118d3e580_split_operans(jule::Str("||", 2),_7624_expr);
	{
		auto &__julec_range_expr = _839_logical_or_parts;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _118d3e580_part = *__julec_range_begin;
			_iter_begin_4770499520:;
			{
				if (_118d3e580_part == jule::Str("", 0)) {
					return false;
				}
				jule::Bool _8917_and = true;
				jule::Slice<jule::Str> _9013_logical_and_parts = _118d3e580_split_operans(jule::Str("&&", 2),_118d3e580_part);
				{
					auto &__julec_range_expr = _9013_logical_and_parts;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Str _118d3e580_and_part = *__julec_range_begin;
						_iter_begin_4770504944:;
						{
							if (_118d3e580_and_part.find(jule::Str("(", 1)) != -1LL) {
								if (_118d3e580_and_part[static_cast<jule::Int>(_118d3e580_and_part.len() - 1LL)] != ')') {
									return false;
								}
								jule::Str _9621_expr = _118d3e580_and_part.slice(static_cast<jule::Int>(1LL),static_cast<jule::Int>(_118d3e580_and_part.len() - 1LL));
								_8917_and=_8917_and && _118d3e580_eval_directive_expr(_9621_expr);
							} else {
								_8917_and=_8917_and && _118d3e580_eval_directive_part(_118d3e580_and_part);
							}
						}
						_iter_next_4770504944:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { _118d3e580_and_part = *__julec_range_begin; goto _iter_begin_4770504944; }
						_iter_end_4770504944:;
					}
				}
				_8113_result=_8113_result || _8917_and;
			}
			_iter_next_4770499520:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _118d3e580_part = *__julec_range_begin; goto _iter_begin_4770499520; }
			_iter_end_4770499520:;
		}
	}
	return _8113_result;
}



inline void _118d5bd10_set_os_flags(void) {
	{
		if (!((jule::Str("windows", 7)) == jule::Str("darwin", 6))) { goto _case_end_4770505872; }
		_case_begin_4770505872:;
		{
			_118d5bd10_FLAGS=append(_118d5bd10_FLAGS,jule::Slice<jule::Str>({jule::Str("windows", 7)}));
		}
		goto _match_end_4770498336;
		_case_end_4770505872:;
		if (!((jule::Str("linux", 5)) == jule::Str("darwin", 6))) { goto _case_end_4770505984; }
		_case_begin_4770505984:;
		{
			_118d5bd10_FLAGS=append(_118d5bd10_FLAGS,jule::Slice<jule::Str>({jule::Str("linux", 5)}));
		}
		goto _match_end_4770498336;
		_case_end_4770505984:;
		if (!((jule::Str("darwin", 6)) == jule::Str("darwin", 6))) { goto _case_end_4770506096; }
		_case_begin_4770506096:;
		{
			_118d5bd10_FLAGS=append(_118d5bd10_FLAGS,jule::Slice<jule::Str>({jule::Str("darwin", 6)}));
		}
		goto _match_end_4770498336;
		_case_end_4770506096:;
		_match_end_4770498336:;
	}
	if (_1410149e0_is_unix(jule::Str("darwin", 6))) {
		_118d5bd10_FLAGS=append(_118d5bd10_FLAGS,jule::Slice<jule::Str>({jule::Str("unix", 4)}));
	}
}



inline void _118d5bd10_set_arch_flags(void) {
	{
		if (!((jule::Str("i386", 4)) == jule::Str("amd64", 5))) { goto _case_end_4770500432; }
		_case_begin_4770500432:;
		{
			_118d5bd10_FLAGS=append(_118d5bd10_FLAGS,jule::Slice<jule::Str>({jule::Str("i386", 4)}));
		}
		goto _match_end_4770523632;
		_case_end_4770500432:;
		if (!((jule::Str("amd64", 5)) == jule::Str("amd64", 5))) { goto _case_end_4770500544; }
		_case_begin_4770500544:;
		{
			_118d5bd10_FLAGS=append(_118d5bd10_FLAGS,jule::Slice<jule::Str>({jule::Str("amd64", 5)}));
		}
		goto _match_end_4770523632;
		_case_end_4770500544:;
		if (!((jule::Str("arm64", 5)) == jule::Str("amd64", 5))) { goto _case_end_4770500656; }
		_case_begin_4770500656:;
		{
			_118d5bd10_FLAGS=append(_118d5bd10_FLAGS,jule::Slice<jule::Str>({jule::Str("arm64", 5)}));
		}
		goto _match_end_4770523632;
		_case_end_4770500656:;
		_match_end_4770523632:;
	}
	if (_1410149e0_is_64bit(jule::Str("amd64", 5))) {
		_118d5bd10_FLAGS=append(_118d5bd10_FLAGS,jule::Slice<jule::Str>({jule::Str("64bit", 5)}));
	}
	if (_1410149e0_is_32bit(jule::Str("amd64", 5))) {
		_118d5bd10_FLAGS=append(_118d5bd10_FLAGS,jule::Slice<jule::Str>({jule::Str("32bit", 5)}));
	}
}



inline void _118d5bd10_init(void) {
	_118d5bd10_set_os_flags();
	_118d5bd10_set_arch_flags();
}



inline void _118d6ac90_exit_err(jule::Str _2313_msg) {
	
	jule::outln(_2313_msg);
	_118e57f00_exit(1LL);
}



inline jule::Slice<jule::U8> _118d6ac90_read_buff(jule::Str _3014_path) {
	jule::Slice<jule::U8> _3114_buffer;
	jule::Int _3122_err;
	std::tie(_3114_buffer,_3122_err) = _118da2050_read_file(_3014_path);
	if (_3122_err != 0LLU) {
		_118d6ac90_exit_err(jule::Str("error: file cannot read", 23));
	}
	return _3114_buffer;
}



inline _13fe81720_Log _118d6ac90_flat_compiler_err(jule::Str _3822_text) {
	return _13fe81720_Log(1LLU,jule::Int(),jule::Int(),jule::Str(),_3822_text);
}



inline std::tuple<jule::Slice<jule::Ref<_118d9e870_DirEntry>>,jule::Str> _118d6ac90_read_package_dirents(jule::Str _4525_path) {
	jule::Str _4551_err_msg = jule::Str();
	jule::Slice<jule::Ref<_118d9e870_DirEntry>> _4614_dirents;
	jule::Int _4623_err;
	std::tie(_4614_dirents,_4623_err) = _118da0200_read_dir(_4525_path);
	if (_4623_err != 0LLU) {
		_4551_err_msg = jule::Str("connot read package directory: ", 31) + _4525_path;
		return std::make_tuple(nullptr,_4551_err_msg);
	}
	jule::Slice<jule::Ref<_118d9e870_DirEntry>> _5113_passed_dirents = nullptr;
	{
		auto &__julec_range_expr = _4614_dirents;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_118d9e870_DirEntry> _118d6ac90_dirent = *__julec_range_begin;
			_iter_begin_4770561904:;
			{
				jule::Str _5313_name = _118d6ac90_dirent->_field_name;
				if ((_118d6ac90_dirent->_field_stat->_method_is_dir() || (!(_5313_name.has_suffix(jule::Str(".jule", 5))))) || (!(_13fe82e00_is_pass_file_annotation(_5313_name)))) {
					goto _iter_next_4770561904;
				}
				_5113_passed_dirents=append(_5113_passed_dirents,jule::Slice<jule::Ref<_118d9e870_DirEntry>>({_118d6ac90_dirent}));
			}
			_iter_next_4770561904:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _118d6ac90_dirent = *__julec_range_begin; goto _iter_begin_4770561904; }
			_iter_end_4770561904:;
		}
	}
	_4551_err_msg = jule::Str("", 0);
	return std::make_tuple(_5113_passed_dirents,_4551_err_msg);
}



inline jule::Str _118d6ac90_concat_all_parts(jule::Slice<jule::Str> _6821_parts) {
	jule::Str _6913_s = jule::Str("", 0);
	{
		auto &__julec_range_expr = _6821_parts;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _118d6ac90_part = *__julec_range_begin;
			_iter_begin_4770576048:;
			{
				_6913_s+=_118d6ac90_part;
			}
			_iter_next_4770576048:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _118d6ac90_part = *__julec_range_begin; goto _iter_begin_4770576048; }
			_iter_end_4770576048:;
		}
	}
	return _6913_s;
}



inline jule::Bool _118d6ac90_is_pass_build_directives(jule::Ref<_118d8a140_Ast>& _7634_file) {
	jule::Int _7713_i = 0LL;
	_iter_begin_4770577232:;
	if (!(_7713_i < _7634_file->_field_top_directives._method_len())) { goto _iter_end_4770577232; }
	{
		jule::Ref<_118d9a790_Directive> _7917_td = _7634_file->_field_top_directives._method_at(_7713_i);
		if (_7917_td->_field_tag != jule::Str("build", 5)) {
			goto _iter_next_4770577232;
		}
		jule::Str _8413_expr = _118d6ac90_concat_all_parts(_7917_td->_field_args);
		jule::Bool _8513_result = _118d3e580_eval_directive_expr(_8413_expr);
		if ((!(_8513_result))) {
			return false;
		}
	}
	_iter_next_4770577232:;
	(_7713_i)++;
	goto _iter_begin_4770577232;
	_iter_end_4770577232:;
	return true;
}



inline void _10fee6360_push_passes(jule::Ref<_11a0945e0_Package> _8120_p,jule::Slice<jule::Str>& _8138_passes) {
	{
		auto &__julec_range_expr = _8120_p->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11a3c2dc0_SymbolTable> _10fee6360_f = *__julec_range_begin;
			_iter_begin_5099655808:;
			{
				jule::Int _8317_i = 0LL;
				_julec_label_push:;
				_iter_begin_5099659248:;
				if (!(_8317_i < _10fee6360_f->_field_passes._method_len())) { goto _iter_end_5099659248; }
				{
					_13feceeb0_Pass _8621_pass = _10fee6360_f->_field_passes._method_at(_8317_i);
					if (_8621_pass._field_text == jule::Str("", 0)) {
						goto _iter_next_5099659248;
					}
					{
						auto &__julec_range_expr = _8138_passes;
						if (__julec_range_expr.begin() != __julec_range_expr.end()) {
							auto __julec_range_begin = __julec_range_expr.begin();
							const auto __julec_range_end = __julec_range_expr.end();
							jule::Str _10fee6360_cpass = *__julec_range_begin;
							_iter_begin_5099663936:;
							{
								if (_10fee6360_cpass == _8621_pass._field_text) {
									goto _iter_next_5099659248;
								}
							}
							_iter_next_5099663936:;
							++__julec_range_begin;
							if (__julec_range_begin != __julec_range_end) { _10fee6360_cpass = *__julec_range_begin; goto _iter_begin_5099663936; }
							_iter_end_5099663936:;
						}
					}
					_8138_passes=append(_8138_passes,jule::Slice<jule::Str>({_8621_pass._field_text}));
				}
				_iter_next_5099659248:;
				(_8317_i)++;
				goto _iter_begin_5099659248;
				_iter_end_5099659248:;
			}
			_iter_next_5099655808:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10fee6360_f = *__julec_range_begin; goto _iter_begin_5099655808; }
			_iter_end_5099655808:;
		}
	}
}



inline jule::Slice<jule::Str> _10fee6360_get_all_unique_passes(jule::Ref<_11a0945e0_Package> _10030_pkg,jule::Slice<jule::Ref<_11a0945e0_ImportInfo>> _10049_uses) {
	jule::Slice<jule::Str> _10113_passes = nullptr;
	_10fee6360_push_passes(_10030_pkg,_10113_passes);
	{
		auto &__julec_range_expr = _10049_uses;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11a0945e0_ImportInfo> _10fee6360_u = *__julec_range_begin;
			_iter_begin_5099672976:;
			{
				if ((!(_10fee6360_u->_field_cpp_linked))) {
					_10fee6360_push_passes(_10fee6360_u->_field_package,_10113_passes);
				}
			}
			_iter_next_5099672976:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10fee6360_u = *__julec_range_begin; goto _iter_begin_5099672976; }
			_iter_end_5099672976:;
		}
	}
	return _10113_passes;
}



inline std::tuple<jule::Ref<_10fee6360_IR>,jule::Slice<_13fe81720_Log>> _10fee6360_build_ir(jule::Str _11917_path) {
	jule::Ref<_118d6ac90_PlainImporter> _12013_importer = jule::new_struct<_118d6ac90_PlainImporter>(new( std::nothrow ) _118d6ac90_PlainImporter());
	jule::Slice<jule::Ref<_118d8a140_Ast>> _12114_files;
	jule::Slice<_13fe81720_Log> _12125_logs;
	std::tie(_12114_files,_12125_logs) = _12013_importer->_method_import_package(_11917_path);
	if (_12125_logs.len() > 0LL) {
		return std::make_tuple(jule::new_ref<_10fee6360_IR>(),_12125_logs);
	}
	if (_12114_files.len() == 0LL) {
		return std::make_tuple(jule::new_ref<_10fee6360_IR>(),nullptr);
	}
	jule::Ref<_11a0945e0_Package> _13014_pkg;
	std::tie(_13014_pkg,_12125_logs) = _11a3c6730_analyze_package(_12114_files,_12013_importer);
	if (_12125_logs.len() > 0LL) {
		return std::make_tuple(jule::new_ref<_10fee6360_IR>(),_12125_logs);
	}
	jule::Ref<_10fee6360_IR> _13513_ir = jule::new_struct<_10fee6360_IR>(new( std::nothrow ) _10fee6360_IR(jule::Slice<jule::Str>(),_13014_pkg,_12013_importer->_field_all_packages));
	_13513_ir->_field_passes=_10fee6360_get_all_unique_passes(_13513_ir->_field_main,_13513_ir->_field_used);
	return std::make_tuple(_13513_ir,nullptr);
}



inline jule::Bool _13fe7c170_is_exist_0(jule::Slice<jule::Any> _2616_arr,jule::Ref<_119099250_Fn> _2628_t) {
	{
		auto &__julec_range_expr = _2616_arr;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Any _13fe7c170_ref = *__julec_range_begin;
			_iter_begin_5099773712:;
			{
				{
					auto &_match_expr{ _13fe7c170_ref };
					if (!(_match_expr.type_is<jule::Ref<_119099250_Fn>>())) { goto _case_end_5099775424; }
					_case_begin_5099775424:;
					{
						if ((_13fe7c170_ref.operator jule::Ref<_119099250_Fn>()).alloc == (_2628_t).alloc) {
							return true;
						}
					}
					goto _match_end_5099775328;
					_case_end_5099775424:;
					_match_end_5099775328:;
				}
			}
			_iter_next_5099773712:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _13fe7c170_ref = *__julec_range_begin; goto _iter_begin_5099773712; }
			_iter_end_5099773712:;
		}
	}
	return false;
}

inline jule::Bool _13fe7c170_is_exist_1(jule::Slice<jule::Any> _2616_arr,jule::Ref<_11a245f20_Var> _2628_t) {
	{
		auto &__julec_range_expr = _2616_arr;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Any _13fe7c170_ref = *__julec_range_begin;
			_iter_begin_5099782656:;
			{
				{
					auto &_match_expr{ _13fe7c170_ref };
					if (!(_match_expr.type_is<jule::Ref<_11a245f20_Var>>())) { goto _case_end_5099784368; }
					_case_begin_5099784368:;
					{
						if ((_13fe7c170_ref.operator jule::Ref<_11a245f20_Var>()).alloc == (_2628_t).alloc) {
							return true;
						}
					}
					goto _match_end_5099784272;
					_case_end_5099784368:;
					_match_end_5099784272:;
				}
			}
			_iter_next_5099782656:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _13fe7c170_ref = *__julec_range_begin; goto _iter_begin_5099782656; }
			_iter_end_5099782656:;
		}
	}
	return false;
}

inline jule::Bool _13fe7c170_is_exist_2(jule::Slice<jule::Any> _2616_arr,jule::Ref<_118bb7d70_Struct> _2628_t) {
	{
		auto &__julec_range_expr = _2616_arr;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Any _13fe7c170_ref = *__julec_range_begin;
			_iter_begin_5099791664:;
			{
				{
					auto &_match_expr{ _13fe7c170_ref };
					if (!(_match_expr.type_is<jule::Ref<_118bb7d70_Struct>>())) { goto _case_end_5099793376; }
					_case_begin_5099793376:;
					{
						if ((_13fe7c170_ref.operator jule::Ref<_118bb7d70_Struct>()).alloc == (_2628_t).alloc) {
							return true;
						}
					}
					goto _match_end_5099793280;
					_case_end_5099793376:;
					_match_end_5099793280:;
				}
			}
			_iter_next_5099791664:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _13fe7c170_ref = *__julec_range_begin; goto _iter_begin_5099791664; }
			_iter_end_5099791664:;
		}
	}
	return false;
}

inline jule::Bool _13fe7c170_is_exist_3(jule::Slice<jule::Any> _2616_arr,jule::Ref<_118e2b060_Trait> _2628_t) {
	{
		auto &__julec_range_expr = _2616_arr;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Any _13fe7c170_ref = *__julec_range_begin;
			_iter_begin_5099800608:;
			{
				{
					auto &_match_expr{ _13fe7c170_ref };
					if (!(_match_expr.type_is<jule::Ref<_118e2b060_Trait>>())) { goto _case_end_5099802320; }
					_case_begin_5099802320:;
					{
						if ((_13fe7c170_ref.operator jule::Ref<_118e2b060_Trait>()).alloc == (_2628_t).alloc) {
							return true;
						}
					}
					goto _match_end_5099802224;
					_case_end_5099802320:;
					_match_end_5099802224:;
				}
			}
			_iter_next_5099800608:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _13fe7c170_ref = *__julec_range_begin; goto _iter_begin_5099800608; }
			_iter_end_5099800608:;
		}
	}
	return false;
}



inline jule::Bool _13fe7c170_is_exist_ref(jule::Slice<jule::Any> _3821_refs,jule::Any _3834_ref) {
	{
		auto &_match_expr{ _3834_ref };
		if (!(_match_expr.type_is<jule::Ref<_119099250_Fn>>())) { goto _case_end_5099766944; }
		_case_begin_5099766944:;
		{
			return _13fe7c170_is_exist_0(_3821_refs,_3834_ref.operator jule::Ref<_119099250_Fn>());
		}
		goto _match_end_5099763968;
		_case_end_5099766944:;
		if (!(_match_expr.type_is<jule::Ref<_11a245f20_Var>>())) { goto _case_end_5099767056; }
		_case_begin_5099767056:;
		{
			return _13fe7c170_is_exist_1(_3821_refs,_3834_ref.operator jule::Ref<_11a245f20_Var>());
		}
		goto _match_end_5099763968;
		_case_end_5099767056:;
		if (!(_match_expr.type_is<jule::Ref<_118bb7d70_Struct>>())) { goto _case_end_5099766176; }
		_case_begin_5099766176:;
		{
			return _13fe7c170_is_exist_2(_3821_refs,_3834_ref.operator jule::Ref<_118bb7d70_Struct>());
		}
		goto _match_end_5099763968;
		_case_end_5099766176:;
		if (!(_match_expr.type_is<jule::Ref<_118e2b060_Trait>>())) { goto _case_end_5099766288; }
		_case_begin_5099766288:;
		{
			return _13fe7c170_is_exist_3(_3821_refs,_3834_ref.operator jule::Ref<_118e2b060_Trait>());
		}
		goto _match_end_5099763968;
		_case_end_5099766288:;
		_case_begin_5099764128:;
		{
			return false;
		}
		goto _match_end_5099763968;
		_case_end_5099764128:;
		_match_end_5099763968:;
	}
}



inline jule::Bool _13fe7c170_is_dead(jule::Any _4816_ref) {
	jule::Bool _4828_dead = jule::Bool();
	if (_13fe7c170_is_exist_ref(_13fe7c170_deads,_4816_ref)) {
		_4828_dead = true;
		return _4828_dead;
	}
	if (_13fe7c170_is_exist_ref(_13fe7c170_checking,_4816_ref)) {
		_4828_dead = false;
		return _4828_dead;
	}
	jule::Any _5813_old = _13fe7c170_current;
	_13fe7c170_current=_4816_ref;
	jule::I64 _609_len = _13fe7c170_checking.len();
	_13fe7c170_checking=append(_13fe7c170_checking,jule::Slice<jule::Any>({_4816_ref}));
	__JULE_DEFER({
		_13fe7c170_current=_5813_old;
		_13fe7c170_drop_ref(_13fe7c170_checking,_609_len);
		if (_4828_dead) {
			_13fe7c170_deads=append(_13fe7c170_deads,jule::Slice<jule::Any>({_4816_ref}));
		}
	});
	{
		auto &_match_expr{ _4816_ref };
		if (!(_match_expr.type_is<jule::Ref<_119099250_Fn>>())) { goto _case_end_5099807824; }
		_case_begin_5099807824:;
		{
			_4828_dead = _13fe7c170_is_fn_dead(_4816_ref.operator jule::Ref<_119099250_Fn>());
			return _4828_dead;
		}
		goto _match_end_5099814352;
		_case_end_5099807824:;
		if (!(_match_expr.type_is<jule::Ref<_11a245f20_Var>>())) { goto _case_end_5099807936; }
		_case_begin_5099807936:;
		{
			_4828_dead = _13fe7c170_is_var_dead(_4816_ref.operator jule::Ref<_11a245f20_Var>());
			return _4828_dead;
		}
		goto _match_end_5099814352;
		_case_end_5099807936:;
		if (!(_match_expr.type_is<jule::Ref<_118bb7d70_Struct>>())) { goto _case_end_5099816848; }
		_case_begin_5099816848:;
		{
			_4828_dead = _13fe7c170_is_struct_dead(_4816_ref.operator jule::Ref<_118bb7d70_Struct>());
			return _4828_dead;
		}
		goto _match_end_5099814352;
		_case_end_5099816848:;
		if (!(_match_expr.type_is<jule::Ref<_118e2b060_Trait>>())) { goto _case_end_5099816960; }
		_case_begin_5099816960:;
		{
			_4828_dead = _13fe7c170_is_trait_dead(_4816_ref.operator jule::Ref<_118e2b060_Trait>());
			return _4828_dead;
		}
		goto _match_end_5099814352;
		_case_end_5099816960:;
		_case_begin_5099816640:;
		{
			_4828_dead = false;
			return _4828_dead;
		}
		goto _match_end_5099814352;
		_case_end_5099816640:;
		_match_end_5099814352:;
	}
}



inline void _13fe7c170_drop_ref(jule::Slice<jule::Any>& _7918_refs,jule::Int _7931_pos) {
	_7918_refs=_7918_refs.slice(0LL,static_cast<jule::Int>(_7931_pos));
}



inline jule::Bool _13fe7c170_is_all_references_are_dead_0(jule::Ref<_13feceeb0_ReferenceStack> _8838_references) {
	jule::Int _8913_i = 0LL;
	_iter_begin_5099838672:;
	if (!(_8913_i < _8838_references->_method_len())) { goto _iter_end_5099838672; }
	{
		jule::Any _9117_ref = _8838_references->_method_at(_8913_i);
		{
			auto &_match_expr{ _13fe7c170_current };
			if (!(_match_expr.type_is<jule::Ref<_119099250_Fn>>())) { goto _case_end_5099842704; }
			_case_begin_5099842704:;
			{
				{
					auto &_match_expr{ _9117_ref };
					if (!(_match_expr.type_is<jule::Ref<_119099250_Fn>>())) { goto _case_end_5099844384; }
					_case_begin_5099844384:;
					{
						if ((_13fe7c170_current.operator jule::Ref<_119099250_Fn>()).alloc == (_9117_ref.operator jule::Ref<_119099250_Fn>()).alloc) {
							goto _iter_next_5099838672;
						}
					}
					goto _match_end_5099842816;
					_case_end_5099844384:;
					_match_end_5099842816:;
				}
			}
			goto _match_end_5099841792;
			_case_end_5099842704:;
			_match_end_5099841792:;
		}
		if ((!(_13fe7c170_is_dead(_9117_ref)))) {
			return false;
		}
	}
	_iter_next_5099838672:;
	(_8913_i)++;
	goto _iter_begin_5099838672;
	_iter_end_5099838672:;
	return true;
}

inline jule::Bool _13fe7c170_is_all_references_are_dead_1(jule::Ref<_13feceeb0_ReferenceStack> _8838_references) {
	jule::Int _8913_i = 0LL;
	_iter_begin_5099856368:;
	if (!(_8913_i < _8838_references->_method_len())) { goto _iter_end_5099856368; }
	{
		jule::Any _9117_ref = _8838_references->_method_at(_8913_i);
		{
			auto &_match_expr{ _13fe7c170_current };
			if (!(_match_expr.type_is<jule::Ref<_11a245f20_Var>>())) { goto _case_end_5099860016; }
			_case_begin_5099860016:;
			{
				{
					auto &_match_expr{ _9117_ref };
					if (!(_match_expr.type_is<jule::Ref<_11a245f20_Var>>())) { goto _case_end_5099861856; }
					_case_begin_5099861856:;
					{
						if ((_13fe7c170_current.operator jule::Ref<_11a245f20_Var>()).alloc == (_9117_ref.operator jule::Ref<_11a245f20_Var>()).alloc) {
							goto _iter_next_5099856368;
						}
					}
					goto _match_end_5099860256;
					_case_end_5099861856:;
					_match_end_5099860256:;
				}
			}
			goto _match_end_5099858976;
			_case_end_5099860016:;
			_match_end_5099858976:;
		}
		if ((!(_13fe7c170_is_dead(_9117_ref)))) {
			return false;
		}
	}
	_iter_next_5099856368:;
	(_8913_i)++;
	goto _iter_begin_5099856368;
	_iter_end_5099856368:;
	return true;
}

inline jule::Bool _13fe7c170_is_all_references_are_dead_2(jule::Ref<_13feceeb0_ReferenceStack> _8838_references) {
	jule::Int _8913_i = 0LL;
	_iter_begin_5099874848:;
	if (!(_8913_i < _8838_references->_method_len())) { goto _iter_end_5099874848; }
	{
		jule::Any _9117_ref = _8838_references->_method_at(_8913_i);
		{
			auto &_match_expr{ _13fe7c170_current };
			if (!(_match_expr.type_is<jule::Ref<_118bb7d70_Struct>>())) { goto _case_end_5099878496; }
			_case_begin_5099878496:;
			{
				{
					auto &_match_expr{ _9117_ref };
					if (!(_match_expr.type_is<jule::Ref<_118bb7d70_Struct>>())) { goto _case_end_5099880336; }
					_case_begin_5099880336:;
					{
						if ((_13fe7c170_current.operator jule::Ref<_118bb7d70_Struct>()).alloc == (_9117_ref.operator jule::Ref<_118bb7d70_Struct>()).alloc) {
							goto _iter_next_5099874848;
						}
					}
					goto _match_end_5099878736;
					_case_end_5099880336:;
					_match_end_5099878736:;
				}
			}
			goto _match_end_5099877456;
			_case_end_5099878496:;
			_match_end_5099877456:;
		}
		if ((!(_13fe7c170_is_dead(_9117_ref)))) {
			return false;
		}
	}
	_iter_next_5099874848:;
	(_8913_i)++;
	goto _iter_begin_5099874848;
	_iter_end_5099874848:;
	return true;
}



inline jule::Bool _13fe7c170_is_fn_dead(jule::Ref<_119099250_Fn> _10819_f) {
	if (((((!(_10819_f->_field_global)) || _10819_f->_field_cpp_linked) || _10819_f->_method_is_entry_point()) || _10819_f->_method_is_init()) || _10819_f->_method_is_anon()) {
		return false;
	}
	if (_10819_f->_field_generics.len() > 0LL) {
		return _10819_f->_field_instances.len() == 0LL;
	}
	return _13fe7c170_is_all_references_are_dead_0(_10819_f->_field_references);
}



inline jule::Bool _13fe7c170_is_var_dead(jule::Ref<_11a245f20_Var> _12220_v) {
	if (_12220_v->_field_constant) {
		return true;
	}
	if (_12220_v->_field_cpp_linked) {
		return false;
	}
	return _13fe7c170_is_all_references_are_dead_1(_12220_v->_field_references);
}



inline jule::Bool _13fe7c170_is_struct_dead(jule::Ref<_118bb7d70_Struct> _13423_s) {
	if (_13423_s->_field_cpp_linked) {
		return false;
	}
	if (_13423_s->_field_generics.len() > 0LL) {
		return _13423_s->_field_instances.len() == 0LL;
	}
	return _13fe7c170_is_all_references_are_dead_2(_13423_s->_field_references);
}



inline jule::Bool _13fe7c170_is_trait_dead(jule::Ref<_118e2b060_Trait> _14822_t) {
	{
		auto &__julec_range_expr = _14822_t->_field_implemented;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_118bb7d70_Struct> _13fe7c170_imp = *__julec_range_begin;
			_iter_begin_5099868112:;
			{
				if ((!(_13fe7c170_is_struct_dead(_13fe7c170_imp)))) {
					return false;
				}
			}
			_iter_next_5099868112:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _13fe7c170_imp = *__julec_range_begin; goto _iter_begin_5099868112; }
			_iter_end_5099868112:;
		}
	}
	return true;
}



inline void _13fe7c170_eliminate_dead_functions(_1192e4e90_Vector_11& _15734_funcs) {
	jule::Int _15813_i = 0LL;
	_iter_begin_5099886992:;
	if (!(_15813_i < _15734_funcs._method_len())) { goto _iter_end_5099886992; }
	{
		jule::Ref<_119099250_Fn> _16017_f = _15734_funcs._method_at(_15813_i);
		if (_13fe7c170_is_fn_dead(_16017_f)) {
			_15734_funcs._method_remove_range(_15813_i,1LL);
		} else {
			{
				auto &__julec_range_expr = _16017_f->_field_instances;
				if (__julec_range_expr.begin() != __julec_range_expr.end()) {
					auto __julec_range_begin = __julec_range_expr.begin();
					const auto __julec_range_end = __julec_range_expr.end();
					jule::Ref<_119099250_FnIns> _13fe7c170_ins = *__julec_range_begin;
					_iter_begin_5099895664:;
					{
						_10fea5860_eliminate_dead_code_of_scope(_13fe7c170_ins->_field_scope);
					}
					_iter_next_5099895664:;
					++__julec_range_begin;
					if (__julec_range_begin != __julec_range_end) { _13fe7c170_ins = *__julec_range_begin; goto _iter_begin_5099895664; }
					_iter_end_5099895664:;
				}
			}
			(_15813_i)++;
		}
	}
	_iter_next_5099886992:;
	goto _iter_begin_5099886992;
	_iter_end_5099886992:;
}



inline void _13fe7c170_eliminate_dead_globals(jule::Ref<_11a0945e0_Package> _17231_pkg) {
	{
		auto &__julec_range_expr = _17231_pkg->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11a3c2dc0_SymbolTable> _13fe7c170_f = *__julec_range_begin;
			_iter_begin_5099896960:;
			{
				jule::Int _17417_i = 0LL;
				_iter_begin_5099900240:;
				if (!(_17417_i < _13fe7c170_f->_field_vars._method_len())) { goto _iter_end_5099900240; }
				{
					if (_13fe7c170_is_var_dead(_13fe7c170_f->_field_vars._method_at(_17417_i))) {
						_13fe7c170_f->_field_vars._method_remove_range(_17417_i,1LL);
					} else {
						(_17417_i)++;
					}
				}
				_iter_next_5099900240:;
				goto _iter_begin_5099900240;
				_iter_end_5099900240:;
			}
			_iter_next_5099896960:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _13fe7c170_f = *__julec_range_begin; goto _iter_begin_5099896960; }
			_iter_end_5099896960:;
		}
	}
}



inline void _13fe7c170_eliminate_dead_functions_package(jule::Ref<_11a0945e0_Package> _18541_pkg) {
	{
		auto &__julec_range_expr = _18541_pkg->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11a3c2dc0_SymbolTable> _13fe7c170_f = *__julec_range_begin;
			_iter_begin_5099899456:;
			{
				_13fe7c170_eliminate_dead_functions(_13fe7c170_f->_field_funcs);
			}
			_iter_next_5099899456:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _13fe7c170_f = *__julec_range_begin; goto _iter_begin_5099899456; }
			_iter_end_5099899456:;
		}
	}
}



inline void _13fe7c170_eliminate_dead_structs(jule::Ref<_11a0945e0_Package> _19131_pkg) {
	{
		auto &__julec_range_expr = _19131_pkg->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11a3c2dc0_SymbolTable> _13fe7c170_f = *__julec_range_begin;
			_iter_begin_5099909984:;
			{
				jule::Int _19317_i = 0LL;
				_iter_begin_5099911728:;
				if (!(_19317_i < _13fe7c170_f->_field_structs._method_len())) { goto _iter_end_5099911728; }
				{
					jule::Ref<_118bb7d70_Struct> _19521_s = _13fe7c170_f->_field_structs._method_at(_19317_i);
					if (_13fe7c170_is_struct_dead(_19521_s)) {
						_13fe7c170_f->_field_structs._method_remove_range(_19317_i,1LL);
					} else {
						_13fe7c170_eliminate_dead_functions(_19521_s->_field_methods);
						(_19317_i)++;
					}
				}
				_iter_next_5099911728:;
				goto _iter_begin_5099911728;
				_iter_end_5099911728:;
			}
			_iter_next_5099909984:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _13fe7c170_f = *__julec_range_begin; goto _iter_begin_5099909984; }
			_iter_end_5099909984:;
		}
	}
}



inline void _13fe7c170_eliminate_dead_traits(jule::Ref<_11a0945e0_Package> _21030_pkg) {
	{
		auto &__julec_range_expr = _21030_pkg->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11a3c2dc0_SymbolTable> _13fe7c170_f = *__julec_range_begin;
			_iter_begin_5099910960:;
			{
				jule::Int _21217_i = 0LL;
				_iter_begin_5099922064:;
				if (!(_21217_i < _13fe7c170_f->_field_traits._method_len())) { goto _iter_end_5099922064; }
				{
					if (_13fe7c170_is_trait_dead(_13fe7c170_f->_field_traits._method_at(_21217_i))) {
						_13fe7c170_f->_field_traits._method_remove_range(_21217_i,1LL);
					} else {
						(_21217_i)++;
					}
				}
				_iter_next_5099922064:;
				goto _iter_begin_5099922064;
				_iter_end_5099922064:;
			}
			_iter_next_5099910960:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _13fe7c170_f = *__julec_range_begin; goto _iter_begin_5099910960; }
			_iter_end_5099910960:;
		}
	}
}



inline void _13fe7c170_eliminate_dead_code_package(jule::Ref<_11a0945e0_Package> _22336_pkg) {
	_13fe7c170_eliminate_dead_globals(_22336_pkg);
	_13fe7c170_eliminate_dead_functions_package(_22336_pkg);
	_13fe7c170_eliminate_dead_structs(_22336_pkg);
	_13fe7c170_eliminate_dead_traits(_22336_pkg);
}



inline void _13fe7c170_eliminate_dead_code(jule::Ref<_10fee6360_IR> _23032_ir) {
	{
		auto &__julec_range_expr = _23032_ir->_field_used;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11a0945e0_ImportInfo> _13fe7c170_u = *__julec_range_begin;
			_iter_begin_5099932784:;
			{
				if ((!(_13fe7c170_u->_field_cpp_linked))) {
					_13fe7c170_eliminate_dead_code_package(_13fe7c170_u->_field_package);
				}
			}
			_iter_next_5099932784:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _13fe7c170_u = *__julec_range_begin; goto _iter_begin_5099932784; }
			_iter_end_5099932784:;
		}
	}
	_13fe7c170_eliminate_dead_code_package(_23032_ir->_field_main);
	_13fe7c170_deads=nullptr;
	_13fe7c170_checking=nullptr;
	_13fe7c170_current=jule::Any(nullptr);
}



inline void _10fea5860_eliminate_dead_code_of_scope(jule::Ref<_11a093930_Scope> _6437_s) {
	jule::Ref<_10fea5860_ScopeDeadCode> _6513_sdc = jule::new_struct<_10fea5860_ScopeDeadCode>(new( std::nothrow ) _10fea5860_ScopeDeadCode(jule::Ref<_10fea5860_ScopeDeadCode>(),_6437_s,(&(_6437_s->_field_stmts)),jule::Int()));
	{
		_6513_sdc->_method_optimize_stmts();
	}
}



inline void _119083710_push_opt_level(jule::Int _2623_level) {
	{
		auto &_match_expr{ _2623_level };
		if (!((0LLU) == _match_expr)) { goto _case_end_5099984784; }
		_case_begin_5099984784:;
		{
			_119083710_OPTIMIZATIONS=nullptr;
		}
		goto _match_end_5099983184;
		_case_end_5099984784:;
		if (!((1LLU) == _match_expr)) { goto _case_end_5099984896; }
		_case_begin_5099984896:;
		{
			_119083710_OPTIMIZATIONS=append(_119083710_OPTIMIZATIONS,jule::Slice<jule::Str>({jule::Str("--opt-copy", 10),jule::Str("--opt-deadcode", 14)}));
		}
		goto _match_end_5099983184;
		_case_end_5099984896:;
		_case_begin_5099983280:;
		{
			return;
		}
		goto _match_end_5099983184;
		_case_end_5099983280:;
		_match_end_5099983184:;
	}
}



inline jule::Bool _119083710_is_opt_enabled(jule::Str _4223_opt) {
	{
		auto &__julec_range_expr = _119083710_OPTIMIZATIONS;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _119083710_oopt = *__julec_range_begin;
			_iter_begin_5099985456:;
			{
				if (_4223_opt == _119083710_oopt) {
					return true;
				}
			}
			_iter_next_5099985456:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _119083710_oopt = *__julec_range_begin; goto _iter_begin_5099985456; }
			_iter_end_5099985456:;
		}
	}
	return false;
}



inline jule::Str _11909cfa0_gen_if(jule::Ref<_11a093930_If> _12615_i) {
	jule::Str _12713_obj = jule::Str("if (", 4);
	_12713_obj+=_11ad8ca40_gen_expr(_12615_i->_field_expr);
	_12713_obj+=jule::Str(") ", 2);
	_12713_obj+=_11909cfa0_gen_scope(_12615_i->_field_scope);
	return _12713_obj;
}



inline jule::Str _11909cfa0_gen_conditional(jule::Ref<_11a093930_Conditional> _13424_c) {
	jule::Str _13513_obj = _11909cfa0_gen_if(_13424_c->_field_elifs[static_cast<jule::Int>(0LL)]);
	{
		auto __julec_range_expr = _13424_c->_field_elifs.slice(static_cast<jule::Int>(1LL));
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11a093930_If> _11909cfa0_elif = *__julec_range_begin;
			_iter_begin_4774188544:;
			{
				_13513_obj+=jule::Str(" else ", 6);
				_13513_obj+=_11909cfa0_gen_if(_11909cfa0_elif);
			}
			_iter_next_4774188544:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11909cfa0_elif = *__julec_range_begin; goto _iter_begin_4774188544; }
			_iter_end_4774188544:;
		}
	}
	if (jule::real(_13424_c->_field_default)) {
		_13513_obj+=jule::Str(" else ", 6);
		_13513_obj+=_11909cfa0_gen_scope(_13424_c->_field_default->_field_scope);
	}
	return _13513_obj;
}



inline jule::Str _11909cfa0_gen_inf_iter(jule::Ref<_11a093930_InfIter> _15021_it) {
	jule::Str _1519_begin = _11ae60410_iter_begin_label_ident(((jule::Uintptr)((_15021_it).alloc)));
	jule::Str _1529_end = _11ae60410_iter_end_label_ident(((jule::Uintptr)((_15021_it).alloc)));
	jule::Str _1539_next = _11ae60410_iter_next_label_ident(((jule::Uintptr)((_15021_it).alloc)));
	jule::Str _1549_indent = _11a1c3f00_indent();
	jule::Str _15613_obj = _1519_begin + jule::Str(":;\n", 3);
	_15613_obj+=_1549_indent;
	_15613_obj+=_11909cfa0_gen_scope(_15021_it->_field_scope);
	_15613_obj+=jule::Str("\n", 1);
	_15613_obj+=_1549_indent;
	_15613_obj+=_1539_next + jule::Str(":;\n", 3);
	_15613_obj+=_1549_indent;
	_15613_obj+=(jule::Str("goto ", 5) + _1519_begin) + jule::Str(";\n", 2);
	_15613_obj+=_1549_indent;
	_15613_obj+=_1529_end + jule::Str(":;", 2);
	return _15613_obj;
}



inline jule::Str _11909cfa0_gen_while_iter(jule::Ref<_11a093930_WhileIter> _17023_it) {
	jule::Str _1719_begin = _11ae60410_iter_begin_label_ident(((jule::Uintptr)((_17023_it).alloc)));
	jule::Str _1729_end = _11ae60410_iter_end_label_ident(((jule::Uintptr)((_17023_it).alloc)));
	jule::Str _1739_next = _11ae60410_iter_next_label_ident(((jule::Uintptr)((_17023_it).alloc)));
	jule::Str _1749_indent = _11a1c3f00_indent();
	jule::Str _17613_obj = _1719_begin + jule::Str(":;\n", 3);
	_17613_obj+=_1749_indent;
	if (_17023_it->_field_expr != nullptr) {
		_17613_obj+=jule::Str("if (!(", 6);
		_17613_obj+=_11ad8ca40_gen_expr(_17023_it->_field_expr);
		_17613_obj+=jule::Str(")) { goto ", 10);
		_17613_obj+=_1729_end;
		_17613_obj+=jule::Str("; }\n", 4);
		_17613_obj+=_1749_indent;
	}
	_17613_obj+=_11909cfa0_gen_scope(_17023_it->_field_scope);
	_17613_obj+=jule::Str("\n", 1);
	_17613_obj+=_1749_indent;
	_17613_obj+=_1739_next + jule::Str(":;\n", 3);
	_17613_obj+=_1749_indent;
	if (_17023_it->_field_next != nullptr) {
		_17613_obj+=_11909cfa0_gen_st(_17023_it->_field_next);
		_17613_obj+=jule::Str("\n", 1);
		_17613_obj+=_1749_indent;
	}
	_17613_obj+=(jule::Str("goto ", 5) + _1719_begin) + jule::Str(";\n", 2);
	_17613_obj+=_1749_indent;
	_17613_obj+=_1729_end + jule::Str(":;", 2);
	return _17613_obj;
}



inline jule::Trait<_11909cfa0_RangeSetter> _11909cfa0_get_range_setter(jule::Ref<_11a093930_RangeIter> _20325_it) {
	{
		if (!((jule::real(_20325_it->_field_expr->_field_kind->_method_slc())))) { goto _case_end_4774234000; }
		_case_begin_4774234000:;
		{
			return jule::new_struct<_11909cfa0_IndexRangeSetter>(new( std::nothrow ) _11909cfa0_IndexRangeSetter());
		}
		goto _match_end_4774227216;
		_case_end_4774234000:;
		if (!((jule::real(_20325_it->_field_expr->_field_kind->_method_arr())))) { goto _case_end_4774234112; }
		_case_begin_4774234112:;
		{
			return jule::new_struct<_11909cfa0_IndexRangeSetter>(new( std::nothrow ) _11909cfa0_IndexRangeSetter());
		}
		goto _match_end_4774227216;
		_case_end_4774234112:;
		if (!((jule::real(_20325_it->_field_expr->_field_kind->_method_map())))) { goto _case_end_4774231104; }
		_case_begin_4774231104:;
		{
			return jule::new_struct<_11909cfa0_MapRangeSetter>(new( std::nothrow ) _11909cfa0_MapRangeSetter());
		}
		goto _match_end_4774227216;
		_case_end_4774231104:;
		_case_begin_4774222624:;
		{
			return jule::new_struct<_11909cfa0_IndexRangeSetter>(new( std::nothrow ) _11909cfa0_IndexRangeSetter());
		}
		goto _match_end_4774227216;
		_case_end_4774222624:;
		_match_end_4774227216:;
	}
}



inline jule::Str _11909cfa0_gen_range_iter(jule::Ref<_11a093930_RangeIter> _21223_it) {
	_11a1c3f00_add_indent();
	jule::Str _2159_begin = _11ae60410_iter_begin_label_ident(((jule::Uintptr)((_21223_it).alloc)));
	jule::Str _2169_end = _11ae60410_iter_end_label_ident(((jule::Uintptr)((_21223_it).alloc)));
	jule::Str _2179_next = _11ae60410_iter_next_label_ident(((jule::Uintptr)((_21223_it).alloc)));
	jule::Str _21813__indent = _11a1c3f00_indent();
	jule::Trait<_11909cfa0_RangeSetter> _2199_setter = _11909cfa0_get_range_setter(_21223_it);
	jule::Str _22113_obj = jule::Str("{\n", 2);
	_22113_obj+=_21813__indent;
	if (_21223_it->_field_expr->_field_lvalue && _119083710_is_opt_enabled(jule::Str("--opt-copy", 10))) {
		_22113_obj+=jule::Str("auto &__julec_range_expr = ", 27);
	} else {
		_22113_obj+=jule::Str("auto __julec_range_expr = ", 26);
	}
	_22113_obj+=_11ad8ca40_gen_expr(_21223_it->_field_expr->_field_model) + jule::Str(";\n", 2);
	_22113_obj+=_21813__indent;
	_22113_obj+=jule::Str("if (__julec_range_expr.begin() != __julec_range_expr.end()) {\n", 62);
	_11a1c3f00_add_indent();
	_21813__indent=_11a1c3f00_indent();
	_22113_obj+=_21813__indent;
	_22113_obj+=jule::Str("auto __julec_range_begin = __julec_range_expr.begin();\n", 55);
	_22113_obj+=_21813__indent;
	_22113_obj+=jule::Str("const auto __julec_range_end = __julec_range_expr.end();\n", 57);
	_22113_obj+=_21813__indent;
	_22113_obj+=_2199_setter.get()._method_setup_vars(_21223_it->_field_key_a,_21223_it->_field_key_b);
	_22113_obj+=_2159_begin + jule::Str(":;\n", 3);
	_22113_obj+=_21813__indent;
	_22113_obj+=_11909cfa0_gen_scope(_21223_it->_field_scope);
	_22113_obj+=jule::Str("\n", 1);
	_22113_obj+=_21813__indent;
	_22113_obj+=_2179_next + jule::Str(":;\n", 3);
	_22113_obj+=_21813__indent;
	_22113_obj+=_2199_setter.get()._method_next_steps(_21223_it->_field_key_a,_21223_it->_field_key_b,_2159_begin);
	_22113_obj+=_21813__indent;
	_22113_obj+=_2169_end + jule::Str(":;\n", 3);
	_11a1c3f00_done_indent();
	_21813__indent=_11a1c3f00_indent();
	_22113_obj+=_21813__indent;
	_22113_obj+=jule::Str("}\n", 2);
	_11a1c3f00_done_indent();
	_21813__indent=_11a1c3f00_indent();
	_22113_obj+=_21813__indent;
	_22113_obj+=jule::Str("}", 1);
	return _22113_obj;
}



inline jule::Str _11909cfa0_gen_cont(jule::Ref<_11a093930_ContSt> _26713_c) {
	return (jule::Str("goto ", 5) + _11ae60410_iter_next_label_ident(_26713_c->_field_it)) + jule::Str(";", 1);
}



inline jule::Str _11909cfa0_gen_label(jule::Ref<_11a093930_Label> _27114_l) {
	return _11ae60410_label_ident(_27114_l->_field_ident) + jule::Str(":;", 2);
}



inline jule::Str _11909cfa0_gen_goto(jule::Ref<_11a093930_GotoSt> _27513_gt) {
	return (jule::Str("goto ", 5) + _11ae60410_label_ident(_27513_gt->_field_ident)) + jule::Str(";", 1);
}



inline jule::Str _11909cfa0_gen_postfix(jule::Ref<_11a093930_Postfix> _27920_p) {
	return (((jule::Str("(", 1) + _11ad8ca40_gen_expr(_27920_p->_field_expr)) + jule::Str(")", 1)) + _27920_p->_field_op) + jule::Str(";", 1);
}



inline jule::Str _11909cfa0_gen_assign(jule::Ref<_11a093930_Assign> _28319_a) {
	jule::Str _28413_obj = _11ad8ca40_gen_expr(_28319_a->_field_l);
	_28413_obj+=_28319_a->_field_op;
	_28413_obj+=_11ad8ca40_gen_expr(_28319_a->_field_r);
	_28413_obj+=jule::Str(";", 1);
	return _28413_obj;
}



inline jule::Str _11909cfa0_gen_multi_assign(jule::Ref<_11a093930_MultiAssign> _29125_a) {
	jule::Str _29213_obj = jule::Str("std::tie(", 9);
	{
		auto &__julec_range_expr = _29125_a->_field_l;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Any _11909cfa0_l = *__julec_range_begin;
			_iter_begin_4772128736:;
			{
				if (_11909cfa0_l == nullptr) {
					_29213_obj+=jule::Str("std::ignore,", 12);
				} else {
					_29213_obj+=_11ad8ca40_gen_expr(_11909cfa0_l) + jule::Str(",", 1);
				}
			}
			_iter_next_4772128736:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11909cfa0_l = *__julec_range_begin; goto _iter_begin_4772128736; }
			_iter_end_4772128736:;
		}
	}
	_29213_obj=_29213_obj.slice(0LL,static_cast<jule::Int>(_29213_obj.len() - 1LL));
	_29213_obj+=jule::Str(") = ", 4);
	_29213_obj+=_11ad8ca40_gen_expr(_29125_a->_field_r);
	_29213_obj+=jule::Str(";", 1);
	return _29213_obj;
}



inline jule::Str _11909cfa0_gen_case(jule::Ref<_11a093930_Match> _30917_m,jule::Ref<_11a093930_Case> _30932_c) {
	
	jule::Str _3129_end = _11ae60410_case_end_label_ident(((jule::Uintptr)((_30932_c).alloc)));
	jule::Str _31313_obj = jule::Str("", 0);
	if (_30932_c->_field_exprs.len() > 0LL) {
		_31313_obj+=jule::Str("if (!(", 6);
		{
			auto &__julec_range_expr = _30932_c->_field_exprs;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Int _11909cfa0_i = 0;
				jule::Any _11909cfa0_expr = *__julec_range_begin;
				_iter_begin_4772142496:;
				{
					{
						if (!(((!(_30917_m->_field_type_match))))) { goto _case_end_4772148048; }
						_case_begin_4772148048:;
						{
							_31313_obj+=jule::Str("(", 1);
							_31313_obj+=_11ad8ca40_gen_expr(_11909cfa0_expr);
							_31313_obj+=jule::Str(")", 1);
							if (_30917_m->_field_expr->_method_is_const()) {
								if ((!(_30917_m->_field_expr->_field_constant->_method_is_bool())) || (!(_30917_m->_field_expr->_field_constant->_method_read_bool()))) {
									_31313_obj+=jule::Str(" == ", 4);
									_31313_obj+=_11ad8ca40_gen_expr_model(_30917_m->_field_expr->_field_model);
								}
							} else {
								_31313_obj+=jule::Str(" == ", 4);
								_31313_obj+=jule::Str("_match_expr", 11);
							}
						}
						goto _match_end_4772145984;
						_case_end_4772148048:;
						_case_begin_4772146176:;
						{
							_31313_obj+=jule::Str("_match_expr", 11);
							_31313_obj+=(jule::Str(".type_is<", 9) + _11ad8ca40_gen_expr(_11909cfa0_expr)) + jule::Str(">()", 3);
						}
						goto _match_end_4772145984;
						_case_end_4772146176:;
						_match_end_4772145984:;
					}
					if ((_11909cfa0_i + 1LL) < _30932_c->_field_exprs.len()) {
						_31313_obj+=jule::Str(" || ", 4);
					}
				}
				_iter_next_4772142496:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { ++_11909cfa0_i; _11909cfa0_expr = *__julec_range_begin; goto _iter_begin_4772142496; }
				_iter_end_4772142496:;
			}
		}
		_31313_obj+=jule::Str(")) { goto ", 10);
		_31313_obj+=_3129_end + jule::Str("; }\n", 4);
	}
	if (_30932_c->_field_scope->_field_stmts._method_len() > 0LL) {
		_31313_obj+=_11a1c3f00_indent();
		_31313_obj+=_11ae60410_case_begin_label_ident(((jule::Uintptr)((_30932_c).alloc))) + jule::Str(":;\n", 3);
		_31313_obj+=_11a1c3f00_indent();
		_31313_obj+=_11909cfa0_gen_scope(_30932_c->_field_scope);
		_31313_obj+=jule::Str("\n", 1);
	}
	_31313_obj+=_11a1c3f00_indent();
	_31313_obj+=jule::Str("goto ", 5);
	_31313_obj+=_11ae60410_match_end_label_ident(((jule::Uintptr)((_30917_m).alloc))) + jule::Str(";", 1);
	_31313_obj+=jule::Str("\n", 1);
	_31313_obj+=_11a1c3f00_indent();
	_31313_obj+=_3129_end + jule::Str(":;", 2);
	return _31313_obj;
}



inline jule::Str _11909cfa0_gen_match(jule::Ref<_11a093930_Match> _36418_m) {
	jule::Str _36513_obj = jule::Str("{\n", 2);
	_11a1c3f00_add_indent();
	_36513_obj+=_11a1c3f00_indent();
	if ((!(_36418_m->_field_expr->_method_is_const()))) {
		if (_36418_m->_field_expr->_field_lvalue && _119083710_is_opt_enabled(jule::Str("--opt-copy", 10))) {
			_36513_obj+=jule::Str("auto &_match_expr{ ", 19);
		} else {
			_36513_obj+=jule::Str("auto _match_expr{ ", 18);
		}
		_36513_obj+=_11ad8ca40_gen_expr(_36418_m->_field_expr->_field_model);
		_36513_obj+=jule::Str(" };\n", 4);
		_36513_obj+=_11a1c3f00_indent();
	}
	if (_36418_m->_field_cases.len() > 0LL) {
		_36513_obj+=_11909cfa0_gen_case(_36418_m,_36418_m->_field_cases[static_cast<jule::Int>(0LL)]);
		{
			auto __julec_range_expr = _36418_m->_field_cases.slice(static_cast<jule::Int>(1LL));
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_11a093930_Case> _11909cfa0_c = *__julec_range_begin;
				_iter_begin_4772184592:;
				{
					_36513_obj+=jule::Str("\n", 1);
					_36513_obj+=_11a1c3f00_indent();
					_36513_obj+=_11909cfa0_gen_case(_36418_m,_11909cfa0_c);
				}
				_iter_next_4772184592:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _11909cfa0_c = *__julec_range_begin; goto _iter_begin_4772184592; }
				_iter_end_4772184592:;
			}
		}
	}
	if (jule::real(_36418_m->_field_default)) {
		_36513_obj+=jule::Str("\n", 1);
		_36513_obj+=_11909cfa0_gen_case(_36418_m,_36418_m->_field_default);
	}
	_36513_obj+=jule::Str("\n", 1);
	_36513_obj+=_11a1c3f00_indent();
	_36513_obj+=_11ae60410_match_end_label_ident(((jule::Uintptr)((_36418_m).alloc))) + jule::Str(":;", 2);
	_36513_obj+=jule::Str("\n", 1);
	_11a1c3f00_done_indent();
	_36513_obj+=_11a1c3f00_indent();
	_36513_obj+=jule::Str("}", 1);
	return _36513_obj;
}



inline jule::Str _11909cfa0_gen_fall_st(jule::Ref<_11a093930_FallSt> _41016_f) {
	return (jule::Str("goto ", 5) + _11ae60410_case_begin_label_ident(_41016_f->_field_dest_case)) + jule::Str(";", 1);
}



inline jule::Str _11909cfa0_gen_break_st(jule::Ref<_11a093930_BreakSt> _41417_b) {
	jule::Str _41513_obj = jule::Str("goto ", 5);
	if (_41417_b->_field_it != 0LL) {
		_41513_obj+=_11ae60410_iter_end_label_ident(_41417_b->_field_it);
	} else {
		_41513_obj+=_11ae60410_match_end_label_ident(_41417_b->_field_mtch);
	}
	_41513_obj+=jule::Str(";", 1);
	return _41513_obj;
}



inline jule::Str _11909cfa0_gen_ret_vars(jule::Ref<_11a093930_RetSt> _42621_r) {
	jule::Str _42713_obj = jule::Str("", 0);
	{
		auto &__julec_range_expr = _42621_r->_field_vars;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11a245f20_Var> _11909cfa0_v = *__julec_range_begin;
			_iter_begin_4772205872:;
			{
				if (_11911a8a0_is_ignore_ident(_11909cfa0_v->_field_ident)) {
					_42713_obj+=_11ad8ca40_get_init_expr(_11909cfa0_v->_field_kind->_field_kind);
				} else {
					_42713_obj+=_11ae60410_var_out_ident(_11909cfa0_v);
				}
				_42713_obj+=jule::Str(",", 1);
			}
			_iter_next_4772205872:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11909cfa0_v = *__julec_range_begin; goto _iter_begin_4772205872; }
			_iter_end_4772205872:;
		}
	}
	_42713_obj=_42713_obj.slice(0LL,static_cast<jule::Int>(_42713_obj.len() - 1LL));
	if (_42621_r->_field_vars.len() > 1LL) {
		_42713_obj=(jule::Str("return std::make_tuple(", 23) + _42713_obj) + jule::Str(")", 1);
	} else {
		_42713_obj=jule::Str("return ", 7) + _42713_obj;
	}
	_42713_obj+=jule::Str(";", 1);
	return _42713_obj;
}



inline jule::Str _11909cfa0_gen_ret_expr_tuple(jule::Ref<_11a093930_RetSt> _45027_r) {
	{
		auto &_match_expr{ _45027_r->_field_expr };
		if (!(_match_expr.type_is<jule::Ref<_119748ec0_FnCallExprModel>>())) { goto _case_end_4772217360; }
		_case_begin_4772217360:;
		{
			return (jule::Str("return ", 7) + _11ad8ca40_gen_expr_model(_45027_r->_field_expr)) + jule::Str(";", 1);
		}
		goto _match_end_4772213472;
		_case_end_4772217360:;
		_match_end_4772213472:;
	}
	jule::Slice<jule::Ref<_11a53f4f0_Data>> _45613_datas = _45027_r->_field_expr.operator jule::Ref<_119748ec0_TupleExprModel>()->_field_datas;
	jule::Str _45713_obj = jule::Str("", 0);
	{
		auto &__julec_range_expr = _45027_r->_field_vars;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _11909cfa0_i = 0;
			jule::Ref<_11a245f20_Var> _11909cfa0_v = *__julec_range_begin;
			_iter_begin_4772223408:;
			{
				if ((!(_11911a8a0_is_ignore_ident(_11909cfa0_v->_field_ident)))) {
					jule::Str _46117_ident = _11ae60410_var_out_ident(_11909cfa0_v);
					_45713_obj+=((_46117_ident + jule::Str(" = ", 3)) + _11ad8ca40_gen_expr(_45613_datas[static_cast<jule::Int>(_11909cfa0_i)]->_field_model)) + jule::Str(";\n", 2);
					_45713_obj+=_11a1c3f00_indent();
				}
			}
			_iter_next_4772223408:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_11909cfa0_i; _11909cfa0_v = *__julec_range_begin; goto _iter_begin_4772223408; }
			_iter_end_4772223408:;
		}
	}
	_45713_obj+=jule::Str("return std::make_tuple(", 23);
	{
		auto &__julec_range_expr = _45613_datas;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _11909cfa0_i = 0;
			jule::Ref<_11a53f4f0_Data> _11909cfa0_d = *__julec_range_begin;
			_iter_begin_4772224880:;
			{
				jule::Ref<_11a245f20_Var> _46917_v = _45027_r->_field_vars[static_cast<jule::Int>(_11909cfa0_i)];
				if (_11911a8a0_is_ignore_ident(_46917_v->_field_ident)) {
					_45713_obj+=_11ad8ca40_gen_expr(_11909cfa0_d->_field_model);
				} else {
					_45713_obj+=_11ae60410_var_out_ident(_46917_v);
				}
				_45713_obj+=jule::Str(",", 1);
			}
			_iter_next_4772224880:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_11909cfa0_i; _11909cfa0_d = *__julec_range_begin; goto _iter_begin_4772224880; }
			_iter_end_4772224880:;
		}
	}
	_45713_obj=_45713_obj.slice(0LL,static_cast<jule::Int>(_45713_obj.len() - 1LL));
	_45713_obj+=jule::Str(");", 2);
	return _45713_obj;
}



inline jule::Str _11909cfa0_gen_ret_expr(jule::Ref<_11a093930_RetSt> _48421_r) {
	if (_48421_r->_field_vars.len() == 0LL) {
		return (jule::Str("return ", 7) + _11ad8ca40_gen_expr(_48421_r->_field_expr)) + jule::Str(";", 1);
	}
	if (_48421_r->_field_vars.len() > 1LL) {
		return _11909cfa0_gen_ret_expr_tuple(_48421_r);
	}
	if ((!(_11911a8a0_is_ignore_ident(_48421_r->_field_vars[static_cast<jule::Int>(0LL)]->_field_ident)))) {
		jule::Str _49413_ident = _11ae60410_var_out_ident(_48421_r->_field_vars[static_cast<jule::Int>(0LL)]);
		jule::Str _49517_obj = ((_49413_ident + jule::Str(" = ", 3)) + _11ad8ca40_gen_expr(_48421_r->_field_expr)) + jule::Str(";\n", 2);
		_49517_obj+=_11a1c3f00_indent();
		_49517_obj+=(jule::Str("return ", 7) + _49413_ident) + jule::Str(";", 1);
		return _49517_obj;
	}
	return (jule::Str("return ", 7) + _11ad8ca40_gen_expr(_48421_r->_field_expr)) + jule::Str(";", 1);
}



inline jule::Str _11909cfa0_gen_ret_st(jule::Ref<_11a093930_RetSt> _50419_r) {
	if ((_50419_r->_field_expr == nullptr) && (_50419_r->_field_vars.len() == 0LL)) {
		return jule::Str("return;", 7);
	}
	if (_50419_r->_field_expr == nullptr) {
		return _11909cfa0_gen_ret_vars(_50419_r);
	}
	return _11909cfa0_gen_ret_expr(_50419_r);
}



inline jule::Str _11909cfa0_gen_recover(jule::Ref<_11a093930_Recover> _51620_r) {
	jule::Str _51713_obj = jule::Str("try ", 4);
	_51713_obj+=_11909cfa0_gen_scope(_51620_r->_field_scope);
	_51713_obj+=jule::Str(" catch(jule::Exception e) ", 26);
	if (_51620_r->_field_handler->_method_is_anon()) {
		jule::Ref<_119099250_Param> _52813_handler_param = _51620_r->_field_handler->_field_decl->_field_params[static_cast<jule::Int>(0LL)];
		if ((!(_11911a8a0_is_ignore_ident(_52813_handler_param->_field_ident))) && (!(_11911a8a0_is_anon_ident(_52813_handler_param->_field_ident)))) {
			_11a1c3f00_add_indent();
			_51713_obj+=jule::Str("{\n", 2);
			_51713_obj+=_11a1c3f00_indent();
			_51713_obj+=jule::Str("jule::Trait<jule::Error> ", 25);
			_51713_obj+=_11ae60410_param_out_ident(_52813_handler_param);
			_51713_obj+=jule::Str("{ jule::exception_to_error(e) };\n", 33);
			_51713_obj+=_11a1c3f00_indent();
			_51713_obj+=_11909cfa0_gen_scope(_51620_r->_field_handler->_field_scope);
			_11a1c3f00_done_indent();
			_51713_obj+=jule::Str("\n", 1);
			_51713_obj+=_11a1c3f00_indent();
			_51713_obj+=jule::Str("}", 1);
		} else {
			_51713_obj+=_11909cfa0_gen_scope(_51620_r->_field_handler->_field_scope);
		}
	} else {
		_51713_obj+=jule::Str("{ ", 2);
		_51713_obj+=_11ad8ca40_gen_expr(_51620_r->_field_handler_expr);
		_51713_obj+=jule::Str("(jule::exception_to_error(e)); }", 32);
	}
	return _51713_obj;
}



inline jule::Str _11909cfa0_gen_data_expr(jule::Ref<_11a53f4f0_Data> _55722_d) {
	return _11ad8ca40_gen_expr(_55722_d->_field_model) + jule::Str(";", 1);
}



inline jule::Str _11909cfa0_gen_st(jule::Any _56215_st) {
	{
		auto &_match_expr{ _56215_st };
		if (!(_match_expr.type_is<jule::Ref<_11a093930_Scope>>())) { goto _case_end_4772284960; }
		_case_begin_4772284960:;
		{
			return _11909cfa0_gen_scope(_56215_st.operator jule::Ref<_11a093930_Scope>());
		}
		goto _match_end_4772283424;
		_case_end_4772284960:;
		if (!(_match_expr.type_is<jule::Ref<_11a245f20_Var>>())) { goto _case_end_4772285072; }
		_case_begin_4772285072:;
		{
			return _11a1c3f00_gen_var(_56215_st.operator jule::Ref<_11a245f20_Var>());
		}
		goto _match_end_4772283424;
		_case_end_4772285072:;
		if (!(_match_expr.type_is<jule::Ref<_11a53f4f0_Data>>())) { goto _case_end_4772285184; }
		_case_begin_4772285184:;
		{
			return _11909cfa0_gen_data_expr(_56215_st.operator jule::Ref<_11a53f4f0_Data>());
		}
		goto _match_end_4772283424;
		_case_end_4772285184:;
		if (!(_match_expr.type_is<jule::Ref<_11a093930_Conditional>>())) { goto _case_end_4772286592; }
		_case_begin_4772286592:;
		{
			return _11909cfa0_gen_conditional(_56215_st.operator jule::Ref<_11a093930_Conditional>());
		}
		goto _match_end_4772283424;
		_case_end_4772286592:;
		if (!(_match_expr.type_is<jule::Ref<_11a093930_InfIter>>())) { goto _case_end_4772286704; }
		_case_begin_4772286704:;
		{
			return _11909cfa0_gen_inf_iter(_56215_st.operator jule::Ref<_11a093930_InfIter>());
		}
		goto _match_end_4772283424;
		_case_end_4772286704:;
		if (!(_match_expr.type_is<jule::Ref<_11a093930_WhileIter>>())) { goto _case_end_4772286816; }
		_case_begin_4772286816:;
		{
			return _11909cfa0_gen_while_iter(_56215_st.operator jule::Ref<_11a093930_WhileIter>());
		}
		goto _match_end_4772283424;
		_case_end_4772286816:;
		if (!(_match_expr.type_is<jule::Ref<_11a093930_RangeIter>>())) { goto _case_end_4772286928; }
		_case_begin_4772286928:;
		{
			return _11909cfa0_gen_range_iter(_56215_st.operator jule::Ref<_11a093930_RangeIter>());
		}
		goto _match_end_4772283424;
		_case_end_4772286928:;
		if (!(_match_expr.type_is<jule::Ref<_11a093930_ContSt>>())) { goto _case_end_4772285856; }
		_case_begin_4772285856:;
		{
			return _11909cfa0_gen_cont(_56215_st.operator jule::Ref<_11a093930_ContSt>());
		}
		goto _match_end_4772283424;
		_case_end_4772285856:;
		if (!(_match_expr.type_is<jule::Ref<_11a093930_Label>>())) { goto _case_end_4772285968; }
		_case_begin_4772285968:;
		{
			return _11909cfa0_gen_label(_56215_st.operator jule::Ref<_11a093930_Label>());
		}
		goto _match_end_4772283424;
		_case_end_4772285968:;
		if (!(_match_expr.type_is<jule::Ref<_11a093930_GotoSt>>())) { goto _case_end_4772286080; }
		_case_begin_4772286080:;
		{
			return _11909cfa0_gen_goto(_56215_st.operator jule::Ref<_11a093930_GotoSt>());
		}
		goto _match_end_4772283424;
		_case_end_4772286080:;
		if (!(_match_expr.type_is<jule::Ref<_11a093930_Postfix>>())) { goto _case_end_4772286192; }
		_case_begin_4772286192:;
		{
			return _11909cfa0_gen_postfix(_56215_st.operator jule::Ref<_11a093930_Postfix>());
		}
		goto _match_end_4772283424;
		_case_end_4772286192:;
		if (!(_match_expr.type_is<jule::Ref<_11a093930_Assign>>())) { goto _case_end_4772286304; }
		_case_begin_4772286304:;
		{
			return _11909cfa0_gen_assign(_56215_st.operator jule::Ref<_11a093930_Assign>());
		}
		goto _match_end_4772283424;
		_case_end_4772286304:;
		if (!(_match_expr.type_is<jule::Ref<_11a093930_MultiAssign>>())) { goto _case_end_4772287104; }
		_case_begin_4772287104:;
		{
			return _11909cfa0_gen_multi_assign(_56215_st.operator jule::Ref<_11a093930_MultiAssign>());
		}
		goto _match_end_4772283424;
		_case_end_4772287104:;
		if (!(_match_expr.type_is<jule::Ref<_11a093930_Match>>())) { goto _case_end_4772287216; }
		_case_begin_4772287216:;
		{
			return _11909cfa0_gen_match(_56215_st.operator jule::Ref<_11a093930_Match>());
		}
		goto _match_end_4772283424;
		_case_end_4772287216:;
		if (!(_match_expr.type_is<jule::Ref<_11a093930_FallSt>>())) { goto _case_end_4772287328; }
		_case_begin_4772287328:;
		{
			return _11909cfa0_gen_fall_st(_56215_st.operator jule::Ref<_11a093930_FallSt>());
		}
		goto _match_end_4772283424;
		_case_end_4772287328:;
		if (!(_match_expr.type_is<jule::Ref<_11a093930_BreakSt>>())) { goto _case_end_4772287440; }
		_case_begin_4772287440:;
		{
			return _11909cfa0_gen_break_st(_56215_st.operator jule::Ref<_11a093930_BreakSt>());
		}
		goto _match_end_4772283424;
		_case_end_4772287440:;
		if (!(_match_expr.type_is<jule::Ref<_11a093930_RetSt>>())) { goto _case_end_4772287552; }
		_case_begin_4772287552:;
		{
			return _11909cfa0_gen_ret_st(_56215_st.operator jule::Ref<_11a093930_RetSt>());
		}
		goto _match_end_4772283424;
		_case_end_4772287552:;
		if (!(_match_expr.type_is<jule::Ref<_11a093930_Recover>>())) { goto _case_end_4772287664; }
		_case_begin_4772287664:;
		{
			return _11909cfa0_gen_recover(_56215_st.operator jule::Ref<_11a093930_Recover>());
		}
		goto _match_end_4772283424;
		_case_end_4772287664:;
		_case_begin_4772278528:;
		{
			return jule::Str("<unimplemented_stmt>", 20);
		}
		goto _match_end_4772283424;
		_case_end_4772278528:;
		_match_end_4772283424:;
	}
}



inline jule::Str _11909cfa0_gen_scope(jule::Ref<_11a093930_Scope> _58718_s) {
	jule::Str _58813_obj = jule::Str("{\n", 2);
	_11a1c3f00_add_indent();
	jule::Int _59113_i = 0LL;
	_iter_begin_4772323264:;
	if (!(_59113_i < _58718_s->_field_stmts._method_len())) { goto _iter_end_4772323264; }
	{
		jule::Any _59317_st = _58718_s->_field_stmts._method_at(_59113_i);
		_58813_obj+=_11a1c3f00_indent();
		_58813_obj+=_11909cfa0_gen_st(_59317_st);
		_58813_obj+=jule::Str("\n", 1);
	}
	_iter_next_4772323264:;
	(_59113_i)++;
	goto _iter_begin_4772323264;
	_iter_end_4772323264:;
	_11a1c3f00_done_indent();
	_58813_obj+=_11a1c3f00_indent();
	_58813_obj+=jule::Str("}", 1);
	if (_58718_s->_field_deferred) {
		_58813_obj=(jule::Str("__JULE_DEFER(", 13) + _58813_obj) + jule::Str(");", 2);
	}
	return _58813_obj;
}



inline jule::Str _11909cfa0_gen_fn_scope(jule::Ref<_119099250_FnIns> _61121_f) {
	if (jule::real(_61121_f->_field_owner)) {
		return _11909cfa0_gen_method_scope(_61121_f);
	}
	return _11909cfa0_gen_scope(_61121_f->_field_scope);
}



inline jule::Str _11909cfa0_gen_method_scope(jule::Ref<_119099250_FnIns> _62025_f) {
	return _11909cfa0_gen_scope(_62025_f->_field_scope);
}



inline jule::Str _11ad8ca40_get_accessor(jule::Ref<_11a3c2e70_TypeKind> _7321_t) {
	if (jule::real(_7321_t->_method_ref()) || jule::real(_7321_t->_method_ptr())) {
		return jule::Str("->", 2);
	}
	return jule::Str(".", 1);
}



inline jule::Str _11ad8ca40_decompose_common_esq(jule::U8 _8025_b) {
	{
		auto &_match_expr{ _8025_b };
		if (!(('\\') == _match_expr)) { goto _case_end_4772345456; }
		_case_begin_4772345456:;
		{
			return jule::Str("\\\\", 2);
		}
		goto _match_end_4772342976;
		_case_end_4772345456:;
		if (!(('\'') == _match_expr)) { goto _case_end_4772346352; }
		_case_begin_4772346352:;
		{
			return jule::Str("'", 1);
		}
		goto _match_end_4772342976;
		_case_end_4772346352:;
		if (!(('\"') == _match_expr)) { goto _case_end_4772346464; }
		_case_begin_4772346464:;
		{
			return jule::Str("\\\"", 2);
		}
		goto _match_end_4772342976;
		_case_end_4772346464:;
		if (!(('\a') == _match_expr)) { goto _case_end_4772346576; }
		_case_begin_4772346576:;
		{
			return jule::Str("\\a", 2);
		}
		goto _match_end_4772342976;
		_case_end_4772346576:;
		if (!(('\b') == _match_expr)) { goto _case_end_4772344848; }
		_case_begin_4772344848:;
		{
			return jule::Str("\\b", 2);
		}
		goto _match_end_4772342976;
		_case_end_4772344848:;
		if (!(('\f') == _match_expr)) { goto _case_end_4772344960; }
		_case_begin_4772344960:;
		{
			return jule::Str("\\f", 2);
		}
		goto _match_end_4772342976;
		_case_end_4772344960:;
		if (!(('\n') == _match_expr)) { goto _case_end_4772345072; }
		_case_begin_4772345072:;
		{
			return jule::Str("\\n", 2);
		}
		goto _match_end_4772342976;
		_case_end_4772345072:;
		if (!(('\r') == _match_expr)) { goto _case_end_4772345632; }
		_case_begin_4772345632:;
		{
			return jule::Str("\\r", 2);
		}
		goto _match_end_4772342976;
		_case_end_4772345632:;
		if (!(('\t') == _match_expr)) { goto _case_end_4772345744; }
		_case_begin_4772345744:;
		{
			return jule::Str("\\t", 2);
		}
		goto _match_end_4772342976;
		_case_end_4772345744:;
		if (!(('\v') == _match_expr)) { goto _case_end_4772345856; }
		_case_begin_4772345856:;
		{
			return jule::Str("\\v", 2);
		}
		goto _match_end_4772342976;
		_case_end_4772345856:;
		_case_begin_4772343072:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4772342976;
		_case_end_4772343072:;
		_match_end_4772342976:;
	}
}



inline jule::Str _11ad8ca40_sbtoa(jule::U8 _9610_b) {
	if (_9610_b == 0LL) {
		return jule::Str("\\x00", 4);
	}
	if (_9610_b <= 127LL) {
		jule::Str _10213_seq = _11ad8ca40_decompose_common_esq(_9610_b);
		if (_10213_seq != jule::Str("", 0)) {
			return _10213_seq;
		}
		if ((32LL <= _9610_b) && (_9610_b <= 126LL)) {
			return static_cast<jule::Str>(_9610_b);
		}
	}
	jule::Str _1129_seq = _10ff65780_fmt_uint(static_cast<jule::U64>(_9610_b),8LL);
	if (_1129_seq.len() == 2LL) {
		return jule::Str("\\0", 2) + _1129_seq;
	}
	return jule::Str("\\", 1) + _1129_seq;
}



inline jule::Str _11ad8ca40_get_str_model(jule::Ref<_11ab854f0_Const> _11918_c) {
	jule::Str _1209_content = _11918_c->_method_read_str();
	jule::Slice<jule::U8> _1219_bytes = static_cast<jule::Slice<jule::U8>>(_1209_content);
	jule::Str _1229_len = _10ff65780_fmt_int(static_cast<jule::I64>(_1219_bytes.len()),10LL);
	jule::Str _12413_lit = jule::Str("", 0);
	{
		auto &__julec_range_expr = _1219_bytes;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::U8 _11ad8ca40_b = *__julec_range_begin;
			_iter_begin_4772370960:;
			{
				_12413_lit+=_11ad8ca40_sbtoa(_11ad8ca40_b);
			}
			_iter_next_4772370960:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11ad8ca40_b = *__julec_range_begin; goto _iter_begin_4772370960; }
			_iter_end_4772370960:;
		}
	}
	return ((((_11ae60410_as_jt(jule::Str("str", 3)) + jule::Str("(\"", 2)) + _12413_lit) + jule::Str("\", ", 3)) + _1229_len) + jule::Str(")", 1);
}



inline jule::Str _11ad8ca40_get_bool_model(jule::Ref<_11ab854f0_Const> _13219_c) {
	if (_13219_c->_method_read_bool()) {
		return jule::Str("true", 4);
	}
	return jule::Str("false", 5);
}



inline jule::Str _11ad8ca40_get_nil_model(void) {
	return jule::Str("nullptr", 7);
}



inline jule::Str _11ad8ca40_gen_float_special_cases(jule::F64 _14128_x) {
	{
		if (!((_1189bef30_is_nan(_14128_x)))) { goto _case_end_4772379792; }
		_case_begin_4772379792:;
		{
			return jule::Str("NAN", 3);
		}
		goto _match_end_4772378480;
		_case_end_4772379792:;
		if (!((_1189bef30_is_inf(_14128_x,1LL)))) { goto _case_end_4772379904; }
		_case_begin_4772379904:;
		{
			return jule::Str("INFINITY", 8);
		}
		goto _match_end_4772378480;
		_case_end_4772379904:;
		if (!((_1189bef30_is_inf(_14128_x,-1LL)))) { goto _case_end_4772380800; }
		_case_begin_4772380800:;
		{
			return jule::Str("-INFINITY", 9);
		}
		goto _match_end_4772378480;
		_case_end_4772380800:;
		_case_begin_4772378640:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4772378480;
		_case_end_4772378640:;
		_match_end_4772378480:;
	}
}



inline jule::Str _11ad8ca40_get_f32_model(jule::Ref<_11ab854f0_Const> _15018_c) {
	jule::F64 _1519_x = _15018_c->_method_as_f64();
	jule::Str _1549_f = _11ad8ca40_gen_float_special_cases(_1519_x);
	if (_1549_f != jule::Str("", 0)) {
		return _1549_f;
	}
	{
		if (!((_1519_x == 3.4028234663852886e+38))) { goto _case_end_4772386992; }
		_case_begin_4772386992:;
		{
			return jule::Str("jule::MAX_F32", 13);
		}
		goto _match_end_4772386848;
		_case_end_4772386992:;
		if (!((_1519_x == -3.4028234663852886e+38))) { goto _case_end_4772387840; }
		_case_begin_4772387840:;
		{
			return jule::Str("jule::MIN_F32", 13);
		}
		goto _match_end_4772386848;
		_case_end_4772387840:;
		_match_end_4772386848:;
	}
	return _141082340_fmt_float(_1519_x,'e',-1LL,32LL) + jule::Str("f", 1);
}



inline jule::Str _11ad8ca40_get_f64_model(jule::Ref<_11ab854f0_Const> _16718_c) {
	jule::F64 _1689_x = _16718_c->_method_as_f64();
	jule::Str _1719_f = _11ad8ca40_gen_float_special_cases(_1689_x);
	if (_1719_f != jule::Str("", 0)) {
		return _1719_f;
	}
	{
		if (!((_1689_x == jule::MAX_F64))) { goto _case_end_4772397952; }
		_case_begin_4772397952:;
		{
			return jule::Str("jule::MAX_F64", 13);
		}
		goto _match_end_4772397808;
		_case_end_4772397952:;
		if (!((_1689_x == jule::MIN_F64))) { goto _case_end_4772398784; }
		_case_begin_4772398784:;
		{
			return jule::Str("jule::MIN_F64", 13);
		}
		goto _match_end_4772397808;
		_case_end_4772398784:;
		_match_end_4772397808:;
	}
	return _141082340_fmt_float(_1689_x,'e',-1LL,64LL);
}



inline jule::Str _11ad8ca40_get_float_model(jule::Ref<_11a53f4f0_Data> _18424_d) {
	{
		if (!((_18424_d->_field_kind->_method_prim()->_method_is_f32()))) { goto _case_end_4772406512; }
		_case_begin_4772406512:;
		{
			return _11ad8ca40_get_f32_model(_18424_d->_field_constant);
		}
		goto _match_end_4772400416;
		_case_end_4772406512:;
		_case_begin_4772401264:;
		{
			return _11ad8ca40_get_f64_model(_18424_d->_field_constant);
		}
		goto _match_end_4772400416;
		_case_end_4772401264:;
		_match_end_4772400416:;
	}
}



inline jule::Str _11ad8ca40_i64toa(jule::I64 _19111_x) {
	{
		if (!((_19111_x == jule::MAX_I64))) { goto _case_end_4772407104; }
		_case_begin_4772407104:;
		{
			return jule::Str("jule::MAX_I64", 13);
		}
		goto _match_end_4772408560;
		_case_end_4772407104:;
		if (!((_19111_x == jule::MIN_I64))) { goto _case_end_4772407216; }
		_case_begin_4772407216:;
		{
			return jule::Str("jule::MIN_I64", 13);
		}
		goto _match_end_4772408560;
		_case_end_4772407216:;
		_match_end_4772408560:;
	}
	jule::Str _1979_fmt = _10ff65780_fmt_int(_19111_x,10LL);
	if (_1410149e0_is_64bit(jule::Str("amd64", 5))) {
		return _1979_fmt + jule::Str("LL", 2);
	}
	return _1979_fmt + jule::Str("L", 1);
}



inline jule::Str _11ad8ca40_get_i64_model(jule::Ref<_11ab854f0_Const> _20418_c) {
	return _11ad8ca40_i64toa(static_cast<jule::I64>(_20418_c->_method_read_i64()));
}



inline jule::Str _11ad8ca40_get_u64_model(jule::Ref<_11ab854f0_Const> _20818_c) {
	jule::U64 _2099_x = _20818_c->_method_read_u64();
	{
		if (!((_2099_x == jule::MAX_U64))) { goto _case_end_4772419136; }
		_case_begin_4772419136:;
		{
			return jule::Str("jule::MAX_U64", 13);
		}
		goto _match_end_4772418880;
		_case_end_4772419136:;
		_match_end_4772418880:;
	}
	jule::Str _2169_fmt = _10ff65780_fmt_uint(_2099_x,10LL);
	if (_1410149e0_is_64bit(jule::Str("amd64", 5))) {
		return _2169_fmt + jule::Str("LLU", 3);
	}
	return _2169_fmt + jule::Str("LU", 2);
}



inline jule::Str _11ad8ca40_gen_const_expr(jule::Ref<_11a53f4f0_Data> _22323_d) {
	{
		if (!((_22323_d->_field_constant->_method_is_str()))) { goto _case_end_4772426976; }
		_case_begin_4772426976:;
		{
			return _11ad8ca40_get_str_model(_22323_d->_field_constant);
		}
		goto _match_end_4772423328;
		_case_end_4772426976:;
		if (!((_22323_d->_field_constant->_method_is_bool()))) { goto _case_end_4772427936; }
		_case_begin_4772427936:;
		{
			return _11ad8ca40_get_bool_model(_22323_d->_field_constant);
		}
		goto _match_end_4772423328;
		_case_end_4772427936:;
		if (!((_22323_d->_field_constant->_method_is_f64()))) { goto _case_end_4772428048; }
		_case_begin_4772428048:;
		{
			return _11ad8ca40_get_float_model(_22323_d);
		}
		goto _match_end_4772423328;
		_case_end_4772428048:;
		if (!((_22323_d->_field_constant->_method_is_i64()))) { goto _case_end_4772428160; }
		_case_begin_4772428160:;
		{
			return _11ad8ca40_get_i64_model(_22323_d->_field_constant);
		}
		goto _match_end_4772423328;
		_case_end_4772428160:;
		if (!((_22323_d->_field_constant->_method_is_u64()))) { goto _case_end_4772426096; }
		_case_begin_4772426096:;
		{
			return _11ad8ca40_get_u64_model(_22323_d->_field_constant);
		}
		goto _match_end_4772423328;
		_case_end_4772426096:;
		if (!((_22323_d->_field_constant->_method_is_nil()))) { goto _case_end_4772426208; }
		_case_begin_4772426208:;
		{
			return _11ad8ca40_get_nil_model();
		}
		goto _match_end_4772423328;
		_case_end_4772426208:;
		_case_begin_4772423536:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4772423328;
		_case_end_4772423536:;
		_match_end_4772423328:;
	}
}



inline jule::Str _11ad8ca40_gen_const_expr_model(jule::Ref<_11ab854f0_Const> _23525_m) {
	{
		if (!((_23525_m->_method_is_str()))) { goto _case_end_4772442992; }
		_case_begin_4772442992:;
		{
			return _11ad8ca40_get_str_model(_23525_m);
		}
		goto _match_end_4772437376;
		_case_end_4772442992:;
		if (!((_23525_m->_method_is_bool()))) { goto _case_end_4772443952; }
		_case_begin_4772443952:;
		{
			return _11ad8ca40_get_bool_model(_23525_m);
		}
		goto _match_end_4772437376;
		_case_end_4772443952:;
		if (!((_23525_m->_method_is_f64()))) { goto _case_end_4772444064; }
		_case_begin_4772444064:;
		{
			return _11ad8ca40_get_f64_model(_23525_m);
		}
		goto _match_end_4772437376;
		_case_end_4772444064:;
		if (!((_23525_m->_method_is_i64()))) { goto _case_end_4772444176; }
		_case_begin_4772444176:;
		{
			return _11ad8ca40_get_i64_model(_23525_m);
		}
		goto _match_end_4772437376;
		_case_end_4772444176:;
		if (!((_23525_m->_method_is_u64()))) { goto _case_end_4772442352; }
		_case_begin_4772442352:;
		{
			return _11ad8ca40_get_u64_model(_23525_m);
		}
		goto _match_end_4772437376;
		_case_end_4772442352:;
		if (!((_23525_m->_method_is_nil()))) { goto _case_end_4772442464; }
		_case_begin_4772442464:;
		{
			return _11ad8ca40_get_nil_model();
		}
		goto _match_end_4772437376;
		_case_end_4772442464:;
		_case_begin_4772437584:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4772437376;
		_case_end_4772437584:;
		_match_end_4772437376:;
	}
}



inline jule::Str _11ad8ca40_gen_binop_expr_model(jule::Ref<_119748ec0_BinopExprModel> _24729_m) {
	{
		auto &_match_expr{ _24729_m->_field_op };
		if (!((jule::Str("/", 1)) == _match_expr)) { goto _case_end_4772459312; }
		_case_begin_4772459312:;
		{
			jule::Str _25017_obj = jule::Str("jule::div(", 10);
			_25017_obj+=_11ad8ca40_gen_expr(_24729_m->_field_left);
			_25017_obj+=jule::Str(",", 1);
			_25017_obj+=_11ad8ca40_gen_expr(_24729_m->_field_right);
			_25017_obj+=jule::Str(")", 1);
			return _25017_obj;
		}
		goto _match_end_4772453488;
		_case_end_4772459312:;
		_case_begin_4772444864:;
		{
			jule::Str _25817_obj = jule::Str("(", 1);
			_25817_obj+=_11ad8ca40_gen_expr_model(_24729_m->_field_left);
			_25817_obj+=jule::Str(" ", 1);
			_25817_obj+=_24729_m->_field_op;
			_25817_obj+=jule::Str(" ", 1);
			_25817_obj+=_11ad8ca40_gen_expr_model(_24729_m->_field_right);
			_25817_obj+=jule::Str(")", 1);
			return _25817_obj;
		}
		goto _match_end_4772453488;
		_case_end_4772444864:;
		_match_end_4772453488:;
	}
}



inline jule::Str _11ad8ca40_gen_var_expr_model(jule::Ref<_11a245f20_Var> _26927_m) {
	return _11ae60410_var_out_ident(_26927_m);
}



inline jule::Str _11ad8ca40_gen_struct_expr_model(jule::Ref<_118bb7d70_Struct> _27326_m) {
	return _11a1932e0_gen_struct_kind(_27326_m);
}



inline jule::Str _11ad8ca40_gen_struct_ins_expr_model(jule::Ref<_118bb7d70_StructIns> _27734_m) {
	return _11a1932e0_gen_struct_kind_ins(_27734_m);
}



inline jule::Str _11ad8ca40_gen_unary_expr_model(jule::Ref<_119748ec0_UnaryExprModel> _28129_m) {
	{
		auto &_match_expr{ _28129_m->_field_op };
		if (!((jule::Str("^", 1)) == _match_expr)) { goto _case_end_4772472224; }
		_case_begin_4772472224:;
		{
			return (jule::Str("(~(", 3) + _11ad8ca40_gen_expr(_28129_m->_field_expr)) + jule::Str("))", 2);
		}
		goto _match_end_4772468128;
		_case_end_4772472224:;
		_case_begin_4772465760:;
		{
			return (((jule::Str("(", 1) + _28129_m->_field_op) + jule::Str("(", 1)) + _11ad8ca40_gen_expr(_28129_m->_field_expr)) + jule::Str("))", 2);
		}
		goto _match_end_4772468128;
		_case_end_4772465760:;
		_match_end_4772468128:;
	}
}



inline jule::Str _11ad8ca40_gen_get_ref_ptr_expr_model(jule::Ref<_119748ec0_GetRefPtrExprModel> _28835_m) {
	return (jule::Str("(", 1) + _11ad8ca40_gen_expr(_28835_m->_field_expr)) + jule::Str(").alloc", 7);
}



inline jule::Str _11ad8ca40_gen_cpp_struct_lit_expr_model(jule::Ref<_119748ec0_StructLitExprModel> _29238_m) {
	jule::Str _29313_obj = jule::Str("(", 1) + _11ae60410_struct_ins_out_ident(_29238_m->_field_strct);
	_29313_obj+=jule::Str("){", 2);
	if (_29238_m->_field_args.len() > 0LL) {
		_julec_label_iter:;
		{
			auto &__julec_range_expr = _29238_m->_field_strct->_field_fields;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_118bb7d70_FieldIns> _11ad8ca40_f = *__julec_range_begin;
				_iter_begin_4772480720:;
				{
					if (_29238_m->_field_strct->_field_decl->_field_cpp_linked) {
						{
							auto &__julec_range_expr = _29238_m->_field_args;
							if (__julec_range_expr.begin() != __julec_range_expr.end()) {
								auto __julec_range_begin = __julec_range_expr.begin();
								const auto __julec_range_end = __julec_range_expr.end();
								jule::Ref<_119748ec0_StructArgExprModel> _11ad8ca40_arg = *__julec_range_begin;
								_iter_begin_4772483776:;
								{
									if (_11ad8ca40_arg->_field_field == _11ad8ca40_f) {
										_29313_obj+=jule::Str(".", 1);
										_29313_obj+=_11ae60410_field_out_ident(_11ad8ca40_f->_field_decl);
										_29313_obj+=jule::Str("=", 1);
										_29313_obj+=_11ad8ca40_gen_expr(_11ad8ca40_arg->_field_expr) + jule::Str(",", 1);
										goto _iter_next_4772480720;
									}
								}
								_iter_next_4772483776:;
								++__julec_range_begin;
								if (__julec_range_begin != __julec_range_end) { _11ad8ca40_arg = *__julec_range_begin; goto _iter_begin_4772483776; }
								_iter_end_4772483776:;
							}
						}
						goto _iter_next_4772480720;
					}
					_29313_obj+=_11ae60410_field_out_ident(_11ad8ca40_f->_field_decl) + jule::Str(": ", 2);
					{
						auto &__julec_range_expr = _29238_m->_field_args;
						if (__julec_range_expr.begin() != __julec_range_expr.end()) {
							auto __julec_range_begin = __julec_range_expr.begin();
							const auto __julec_range_end = __julec_range_expr.end();
							jule::Ref<_119748ec0_StructArgExprModel> _11ad8ca40_arg = *__julec_range_begin;
							_iter_begin_4772491488:;
							{
								if (_11ad8ca40_arg->_field_field == _11ad8ca40_f) {
									_29313_obj+=_11ad8ca40_gen_expr(_11ad8ca40_arg->_field_expr) + jule::Str(",", 1);
									goto _iter_next_4772480720;
								}
							}
							_iter_next_4772491488:;
							++__julec_range_begin;
							if (__julec_range_begin != __julec_range_end) { _11ad8ca40_arg = *__julec_range_begin; goto _iter_begin_4772491488; }
							_iter_end_4772491488:;
						}
					}
					_29313_obj+=_11ad8ca40_get_init_expr(_11ad8ca40_f->_field_kind) + jule::Str(",", 1);
				}
				_iter_next_4772480720:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _11ad8ca40_f = *__julec_range_begin; goto _iter_begin_4772480720; }
				_iter_end_4772480720:;
			}
		}
		_29313_obj=_29313_obj.slice(0LL,static_cast<jule::Int>(_29313_obj.len() - 1LL));
	}
	_29313_obj+=jule::Str("}", 1);
	return _29313_obj;
}



inline jule::Str _11ad8ca40_gen_struct_lit_expr_model(jule::Ref<_119748ec0_StructLitExprModel> _32634_m) {
	if (_32634_m->_field_strct->_field_decl->_field_cpp_linked) {
		return _11ad8ca40_gen_cpp_struct_lit_expr_model(_32634_m);
	}
	jule::Str _33113_obj = _11ae60410_struct_ins_out_ident(_32634_m->_field_strct);
	_33113_obj+=jule::Str("(", 1);
	if (_32634_m->_field_args.len() > 0LL) {
		_julec_label_iter:;
		{
			auto &__julec_range_expr = _32634_m->_field_strct->_field_fields;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_118bb7d70_FieldIns> _11ad8ca40_f = *__julec_range_begin;
				_iter_begin_4772506816:;
				{
					{
						auto &__julec_range_expr = _32634_m->_field_args;
						if (__julec_range_expr.begin() != __julec_range_expr.end()) {
							auto __julec_range_begin = __julec_range_expr.begin();
							const auto __julec_range_end = __julec_range_expr.end();
							jule::Ref<_119748ec0_StructArgExprModel> _11ad8ca40_arg = *__julec_range_begin;
							_iter_begin_4772508864:;
							{
								if (_11ad8ca40_arg->_field_field == _11ad8ca40_f) {
									_33113_obj+=_11ad8ca40_gen_expr(_11ad8ca40_arg->_field_expr) + jule::Str(",", 1);
									goto _iter_next_4772506816;
								}
							}
							_iter_next_4772508864:;
							++__julec_range_begin;
							if (__julec_range_begin != __julec_range_end) { _11ad8ca40_arg = *__julec_range_begin; goto _iter_begin_4772508864; }
							_iter_end_4772508864:;
						}
					}
					_33113_obj+=_11ad8ca40_get_init_expr(_11ad8ca40_f->_field_kind) + jule::Str(",", 1);
				}
				_iter_next_4772506816:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _11ad8ca40_f = *__julec_range_begin; goto _iter_begin_4772506816; }
				_iter_end_4772506816:;
			}
		}
		_33113_obj=_33113_obj.slice(0LL,static_cast<jule::Int>(_33113_obj.len() - 1LL));
	}
	_33113_obj+=jule::Str(")", 1);
	return _33113_obj;
}



inline jule::Str _11ad8ca40_gen_alloc_struct_lit_expr_model(jule::Ref<_119748ec0_AllocStructLitExprModel> _35040_m) {
	jule::Str _35113_obj = jule::Str("jule::new_struct<", 17);
	_35113_obj+=_11ae60410_struct_out_ident(_35040_m->_field_lit->_field_strct->_field_decl);
	_35113_obj+=jule::Str(">(new( std::nothrow ) ", 22);
	_35113_obj+=_11ad8ca40_gen_struct_lit_expr_model(_35040_m->_field_lit);
	_35113_obj+=jule::Str(")", 1);
	return _35113_obj;
}



inline jule::Str _11ad8ca40_gen_casting_expr_model(jule::Ref<_119748ec0_CastingExprModel> _35931_m) {
	jule::Str _36013_obj = jule::Str("", 0);
	{
		if (!((jule::real(_35931_m->_field_kind->_method_prim()) && _35931_m->_field_kind->_method_prim()->_method_is_any()))) { goto _case_end_4772527584; }
		_case_begin_4772527584:;
		{
			_36013_obj+=_11a1932e0_gen_type_kind(_35931_m->_field_kind);
			_36013_obj+=jule::Str("(", 1);
			_36013_obj+=_11ad8ca40_gen_expr_model(_35931_m->_field_expr);
			_36013_obj+=jule::Str(")", 1);
		}
		goto _match_end_4772524192;
		_case_end_4772527584:;
		if (!((jule::real(_35931_m->_field_expr_kind->_method_ptr())) || (jule::real(_35931_m->_field_kind->_method_ptr())))) { goto _case_end_4772529328; }
		_case_begin_4772529328:;
		{
			_36013_obj+=jule::Str("((", 2);
			_36013_obj+=_11a1932e0_gen_type_kind(_35931_m->_field_kind);
			_36013_obj+=jule::Str(")(", 2);
			_36013_obj+=_11ad8ca40_gen_expr(_35931_m->_field_expr);
			_36013_obj+=jule::Str("))", 2);
		}
		goto _match_end_4772524192;
		_case_end_4772529328:;
		if (!((jule::real(_35931_m->_field_expr_kind->_method_trt())) || (jule::real(_35931_m->_field_expr_kind->_method_prim()) && _35931_m->_field_expr_kind->_method_prim()->_method_is_any()))) { goto _case_end_4772526560; }
		_case_begin_4772526560:;
		{
			_36013_obj+=_11ad8ca40_gen_expr_model(_35931_m->_field_expr);
			_36013_obj+=_11ad8ca40_get_accessor(_35931_m->_field_expr_kind);
			_36013_obj+=jule::Str("operator ", 9);
			_36013_obj+=_11a1932e0_gen_type_kind(_35931_m->_field_kind);
			_36013_obj+=jule::Str("()", 2);
		}
		goto _match_end_4772524192;
		_case_end_4772526560:;
		_case_begin_4772524448:;
		{
			_36013_obj+=jule::Str("static_cast<", 12);
			_36013_obj+=_11a1932e0_gen_type_kind(_35931_m->_field_kind);
			_36013_obj+=jule::Str(">(", 2);
			_36013_obj+=_11ad8ca40_gen_expr(_35931_m->_field_expr);
			_36013_obj+=jule::Str(")", 1);
		}
		goto _match_end_4772524192;
		_case_end_4772524448:;
		_match_end_4772524192:;
	}
	return _36013_obj;
}



inline jule::Str _11ad8ca40_gen_arg_expr_models(jule::Slice<jule::Any> _39428_models) {
	if (_39428_models.len() == 0LL) {
		return jule::Str("", 0);
	}
	jule::Str _39913_obj = jule::Str("", 0);
	{
		auto &__julec_range_expr = _39428_models;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Any _11ad8ca40_m = *__julec_range_begin;
			_iter_begin_4772549424:;
			{
				_39913_obj+=_11ad8ca40_gen_expr(_11ad8ca40_m) + jule::Str(",", 1);
			}
			_iter_next_4772549424:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11ad8ca40_m = *__julec_range_begin; goto _iter_begin_4772549424; }
			_iter_end_4772549424:;
		}
	}
	_39913_obj=_39913_obj.slice(0LL,static_cast<jule::Int>(_39913_obj.len() - 1LL));
	return _39913_obj;
}



inline jule::Str _11ad8ca40_gen_fn_call_expr_model(jule::Ref<_119748ec0_FnCallExprModel> _40731_m) {
	jule::Str _40813_obj = _11ad8ca40_gen_expr_model(_40731_m->_field_expr);
	if ((!(_40731_m->_field_func->_method_is_builtin()))) {
		if (_40731_m->_field_func->_field_decl->_field_cpp_linked && (_40731_m->_field_func->_field_generics.len() > 0LL)) {
			if ((!(_11a1932e0_has_directive(_40731_m->_field_func->_field_decl->_field_directives,jule::Str("cdef", 4))))) {
				_40813_obj+=jule::Str("<", 1);
				{
					auto &__julec_range_expr = _40731_m->_field_func->_field_generics;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Ref<_11a3c2e70_TypeKind> _11ad8ca40_g = *__julec_range_begin;
						_iter_begin_4772559088:;
						{
							_40813_obj+=_11a1932e0_gen_type_kind(_11ad8ca40_g) + jule::Str(",", 1);
						}
						_iter_next_4772559088:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { _11ad8ca40_g = *__julec_range_begin; goto _iter_begin_4772559088; }
						_iter_end_4772559088:;
					}
				}
				_40813_obj=_40813_obj.slice(0LL,static_cast<jule::Int>(_40813_obj.len() - 1LL));
				_40813_obj+=jule::Str(">", 1);
			}
		}
	}
	_40813_obj+=jule::Str("(", 1);
	_40813_obj+=_11ad8ca40_gen_arg_expr_models(_40731_m->_field_args);
	_40813_obj+=jule::Str(")", 1);
	if (_40731_m->_field_is_co) {
		_40813_obj=(jule::Str("__JULE_CO(", 10) + _40813_obj) + jule::Str(")", 1);
	}
	return _40813_obj;
}



inline jule::Str _11ad8ca40_gen_slice_expr_model(jule::Ref<_119748ec0_SliceExprModel> _43229_m) {
	jule::Str _43313_obj = _11a1932e0_as_slice_kind(_43229_m->_field_elem_kind);
	_43313_obj+=jule::Str("({", 2);
	_43313_obj+=_11ad8ca40_gen_arg_expr_models(_43229_m->_field_elems);
	_43313_obj+=jule::Str("})", 2);
	return _43313_obj;
}



inline jule::Str _11ad8ca40_gen_indexing_expr_model(jule::Ref<_119748ec0_IndexigExprModel> _44032_m) {
	jule::Str _44113_obj = _11ad8ca40_gen_expr_model(_44032_m->_field_expr);
	_44113_obj+=jule::Str("[", 1);
	_44113_obj+=_11ad8ca40_gen_expr(_44032_m->_field_index);
	_44113_obj+=jule::Str("]", 1);
	return _44113_obj;
}



inline jule::Str _11ad8ca40_gen_anon_fn_expr_model(jule::Ref<_119748ec0_AnonFnExprModel> _44831_m) {
	jule::Str _44913_obj = _11a1932e0_gen_fn_kind(_44831_m->_field_func);
	_44913_obj+=jule::Str("([=]", 4);
	_44913_obj+=_11a1c3f00_gen_params_ins(_44831_m->_field_func->_field_params);
	_44913_obj+=jule::Str(" mutable -> ", 12);
	_44913_obj+=_11a1c3f00_gen_fn_ins_result(_44831_m->_field_func);
	_44913_obj+=jule::Str(" ", 1);
	_44913_obj+=_11909cfa0_gen_fn_scope(_44831_m->_field_func);
	_44913_obj+=jule::Str(")", 1);
	return _44913_obj;
}



inline jule::Str _11ad8ca40_gen_map_expr_model(jule::Ref<_119748ec0_MapExprModel> _46527_m) {
	jule::Str _46613_obj = _11ae60410_as_jt(jule::Str("map", 3));
	_46613_obj+=jule::Str("<", 1);
	_46613_obj+=_11a1932e0_gen_type_kind(_46527_m->_field_key_kind);
	_46613_obj+=jule::Str(",", 1);
	_46613_obj+=_11a1932e0_gen_type_kind(_46527_m->_field_val_kind);
	_46613_obj+=jule::Str(">({", 3);
	if (_46527_m->_field_entries.len() > 0LL) {
		{
			auto &__julec_range_expr = _46527_m->_field_entries;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_119748ec0_KeyValPairExprModel> _11ad8ca40_pair = *__julec_range_begin;
				_iter_begin_4772592656:;
				{
					jule::Str _47421_pair_obj = jule::Str("{", 1);
					_47421_pair_obj+=_11ad8ca40_gen_expr(_11ad8ca40_pair->_field_key);
					_47421_pair_obj+=jule::Str(",", 1);
					_47421_pair_obj+=_11ad8ca40_gen_expr(_11ad8ca40_pair->_field_val);
					_47421_pair_obj+=jule::Str("}", 1);
					_46613_obj+=_47421_pair_obj;
					_46613_obj+=jule::Str(",", 1);
				}
				_iter_next_4772592656:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _11ad8ca40_pair = *__julec_range_begin; goto _iter_begin_4772592656; }
				_iter_end_4772592656:;
			}
		}
		_46613_obj=_46613_obj.slice(0LL,static_cast<jule::Int>(_46613_obj.len() - 1LL));
	}
	_46613_obj+=jule::Str("})", 2);
	return _46613_obj;
}



inline jule::Str _11ad8ca40_gen_slicing_expr_model(jule::Ref<_119748ec0_SlicingExprModel> _48831_m) {
	jule::Str _48913_obj = _11ad8ca40_gen_expr_model(_48831_m->_field_expr);
	_48913_obj+=jule::Str(".slice(", 7);
	_48913_obj+=_11ad8ca40_gen_expr(_48831_m->_field_left);
	if (_48831_m->_field_right != nullptr) {
		_48913_obj+=jule::Str(",", 1);
		_48913_obj+=_11ad8ca40_gen_expr(_48831_m->_field_right);
	}
	_48913_obj+=jule::Str(")", 1);
	return _48913_obj;
}



inline jule::Str _11ad8ca40_gen_trait_sub_ident_expr_model(jule::Ref<_119748ec0_TraitSubIdentExprModel> _50039_m) {
	jule::Str _50113_obj = _11ad8ca40_gen_expr_model(_50039_m->_field_expr);
	_50113_obj+=jule::Str(".get()._method_", 15);
	_50113_obj+=_50039_m->_field_ident;
	return _50113_obj;
}



inline jule::Str _11ad8ca40_gen_struct_sub_ident_expr_model(jule::Ref<_119748ec0_StructSubIdentExprModel> _50740_m) {
	jule::Str _50813_obj = _11ad8ca40_gen_expr_model(_50740_m->_field_expr);
	_50813_obj+=_11ad8ca40_get_accessor(_50740_m->_field_expr_kind);
	if (jule::real(_50740_m->_field_field)) {
		_50813_obj+=_11ae60410_field_out_ident(_50740_m->_field_field->_field_decl);
	} else {
		_50813_obj+=_11ae60410_fn_ins_out_ident(_50740_m->_field_method);
	}
	return _50813_obj;
}



inline jule::Str _11ad8ca40_gen_common_ident_expr_model(jule::Ref<_119748ec0_CommonIdentExprModel> _51832_m) {
	return _51832_m->_field_ident;
}



inline jule::Str _11ad8ca40_gen_common_sub_ident_expr_model(jule::Ref<_119748ec0_CommonSubIdentExprModel> _52240_m) {
	jule::Str _52313_obj = _11ad8ca40_gen_expr_model(_52240_m->_field_expr);
	_52313_obj+=_11ad8ca40_get_accessor(_52240_m->_field_expr_kind);
	_52313_obj+=_52240_m->_field_ident;
	return _52313_obj;
}



inline jule::Str _11ad8ca40_gen_array_expr_model(jule::Ref<_119748ec0_ArrayExprModel> _52929_m) {
	jule::Str _53013_obj = _11a1932e0_gen_array_kind(_52929_m->_field_kind);
	_53013_obj+=jule::Str("({", 2);
	_53013_obj+=_11ad8ca40_gen_arg_expr_models(_52929_m->_field_elems);
	_53013_obj+=jule::Str("})", 2);
	return _53013_obj;
}



inline jule::Str _11ad8ca40_gen_fn_ins_expr_model(jule::Ref<_119099250_FnIns> _53726_m) {
	return _11ae60410_fn_ins_out_ident(_53726_m);
}



inline jule::Str _11ad8ca40_gen_tuple_expr_model(jule::Ref<_119748ec0_TupleExprModel> _54129_m) {
	jule::Str _54213_obj = jule::Str("std::make_tuple(", 16);
	{
		auto &__julec_range_expr = _54129_m->_field_datas;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11a53f4f0_Data> _11ad8ca40_d = *__julec_range_begin;
			_iter_begin_4772630928:;
			{
				_54213_obj+=_11ad8ca40_gen_expr(_11ad8ca40_d->_field_model) + jule::Str(",", 1);
			}
			_iter_next_4772630928:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11ad8ca40_d = *__julec_range_begin; goto _iter_begin_4772630928; }
			_iter_end_4772630928:;
		}
	}
	_54213_obj=_54213_obj.slice(0LL,static_cast<jule::Int>(_54213_obj.len() - 1LL));
	_54213_obj+=jule::Str(")", 1);
	return _54213_obj;
}



inline jule::Str _11ad8ca40_gen_builtin_new_call_expr_model(jule::Ref<_119748ec0_BuiltinNewCallExprModel> _55140_m) {
	jule::Str _55213_obj = jule::Str("jule::new_ref<", 14);
	_55213_obj+=_11a1932e0_gen_type_kind(_55140_m->_field_kind);
	_55213_obj+=jule::Str(">(", 2);
	if (_55140_m->_field_init != nullptr) {
		_55213_obj+=_11ad8ca40_gen_expr(_55140_m->_field_init);
	}
	_55213_obj+=jule::Str(")", 1);
	return _55213_obj;
}



inline jule::Str _11ad8ca40_gen_builtin_out_call_expr_model(jule::Ref<_119748ec0_BuiltinOutCallExprModel> _56240_m) {
	jule::Str _56313_obj = jule::Str("jule::out(", 10);
	_56313_obj+=_11ad8ca40_gen_expr(_56240_m->_field_expr);
	_56313_obj+=jule::Str(")", 1);
	return _56313_obj;
}



inline jule::Str _11ad8ca40_gen_builtin_outln_call_expr_model(jule::Ref<_119748ec0_BuiltinOutlnCallExprModel> _56942_m) {
	jule::Str _57013_obj = jule::Str("jule::outln(", 12);
	_57013_obj+=_11ad8ca40_gen_expr(_56942_m->_field_expr);
	_57013_obj+=jule::Str(")", 1);
	return _57013_obj;
}



inline jule::Str _11ad8ca40_gen_builtin_real_call_expr_model(jule::Ref<_119748ec0_BuiltinRealCallExprModel> _57641_m) {
	jule::Str _57713_obj = jule::Str("jule::real(", 11);
	_57713_obj+=_11ad8ca40_gen_expr(_57641_m->_field_expr);
	_57713_obj+=jule::Str(")", 1);
	return _57713_obj;
}



inline jule::Str _11ad8ca40_gen_builtin_drop_call_expr_model(jule::Ref<_119748ec0_BuiltinDropCallExprModel> _58341_m) {
	jule::Str _58413_obj = jule::Str("jule::drop(", 11);
	_58413_obj+=_11ad8ca40_gen_expr(_58341_m->_field_expr);
	_58413_obj+=jule::Str(")", 1);
	return _58413_obj;
}



inline jule::Str _11ad8ca40_gen_builtin_panic_call_expr_model(jule::Ref<_119748ec0_BuiltinPanicCallExprModel> _59042_m) {
	jule::Str _59113_obj = jule::Str("jule::panic(", 12);
	_59113_obj+=_11ad8ca40_gen_expr(_59042_m->_field_expr);
	_59113_obj+=jule::Str(")", 1);
	return _59113_obj;
}



inline jule::Str _11ad8ca40_gen_builtin_make_call_expr_model(jule::Ref<_119748ec0_BuiltinMakeCallExprModel> _59741_m) {
	jule::Str _59813_obj = jule::Str("", 0);
	if (_59741_m->_field_len != nullptr) {
		_59813_obj+=_11ad8ca40_gen_expr(_59741_m->_field_len);
	} else {
		_59813_obj+=jule::Str("0", 1);
	}
	if (_59741_m->_field_cap != nullptr) {
		_59813_obj+=jule::Str(",", 1) + _11ad8ca40_gen_expr(_59741_m->_field_cap);
	}
	if (jule::real(_59741_m->_field_kind->_method_slc()->_field_elem->_method_enm())) {
		_59813_obj+=jule::Str(",", 1);
		_59813_obj+=_11ad8ca40_get_init_expr(_59741_m->_field_kind->_method_slc()->_field_elem);
		if (_59741_m->_field_cap != nullptr) {
			_59813_obj=(_11a1932e0_gen_type_kind(_59741_m->_field_kind) + jule::Str("::alloc(", 8)) + _59813_obj;
		} else {
			_59813_obj=(_11a1932e0_gen_type_kind(_59741_m->_field_kind) + jule::Str("::alloc_def(", 12)) + _59813_obj;
		}
	} else {
		_59813_obj=(_11a1932e0_gen_type_kind(_59741_m->_field_kind) + jule::Str("::alloc(", 8)) + _59813_obj;
	}
	_59813_obj+=jule::Str(")", 1);
	return _59813_obj;
}



inline jule::Str _11ad8ca40_gen_builtin_clone_call_expr_model(jule::Ref<_119748ec0_BuiltinCloneCallExprModel> _62442_m) {
	jule::Str _62513_obj = jule::Str("jule::clone(", 12);
	_62513_obj+=_11ad8ca40_gen_expr_model(_62442_m->_field_expr);
	_62513_obj+=jule::Str(")", 1);
	return _62513_obj;
}



inline jule::Str _11ad8ca40_gen_sizeof_expr_model(jule::Ref<_119748ec0_SizeofExprModel> _63130_m) {
	jule::Str _63213_obj = jule::Str("sizeof(", 7);
	_63213_obj+=_11ad8ca40_gen_expr(_63130_m->_field_expr);
	_63213_obj+=jule::Str(")", 1);
	return _63213_obj;
}



inline jule::Str _11ad8ca40_gen_alignof_expr_model(jule::Ref<_119748ec0_AlignofExprModel> _63831_m) {
	jule::Str _63913_obj = jule::Str("alignof(", 8);
	_63913_obj+=_11ad8ca40_gen_expr(_63831_m->_field_expr);
	_63913_obj+=jule::Str(")", 1);
	return _63913_obj;
}



inline jule::Str _11ad8ca40_gen_rune_expr_model(jule::Ref<_119748ec0_RuneExprModel> _64524_m) {
	if (_64524_m->_field_code <= 127LL) {
		jule::Str _64717_b = _11ad8ca40_sbtoa(static_cast<jule::U8>(_64524_m->_field_code));
		if (_64717_b == jule::Str("'", 1)) {
			_64717_b=jule::Str("\\'", 2);
		}
		return (jule::Str("'", 1) + _64717_b) + jule::Str("'", 1);
	}
	return _11ad8ca40_i64toa(static_cast<jule::I64>(_64524_m->_field_code));
}



inline jule::Str _11ad8ca40_gen_builtin_error_trait_sub_ident_expr_model(jule::Ref<_119748ec0_BuiltinErrorTraitSubIdentExprModel> _65653_m) {
	jule::Str _65713_obj = _11ad8ca40_gen_expr_model(_65653_m->_field_expr);
	_65713_obj+=jule::Str(".get().", 7);
	_65713_obj+=_65653_m->_field_ident;
	return _65713_obj;
}



inline jule::Str _11ad8ca40_gen_explicit_deref_expr_model(jule::Ref<_119748ec0_ExplicitDerefExprModel> _66338_m) {
	jule::Str _66413_obj = _11ad8ca40_gen_expr_model(_66338_m->_field_expr);
	_66413_obj+=jule::Str(".get()", 6);
	return _66413_obj;
}



inline jule::Str _11ad8ca40_gen_struct_static_ident_expr_model(jule::Ref<_119748ec0_StructStaticIdentExprModel> _66943_m) {
	jule::Str _67013_obj = _11ae60410_struct_ins_out_ident(_66943_m->_field_structure);
	_67013_obj+=jule::Str("::", 2);
	_67013_obj+=_11ae60410_fn_ins_out_ident(_66943_m->_field_method);
	return _67013_obj;
}



inline jule::Str _11ad8ca40_gen_expr_model(jule::Any _67623_m) {
	{
		auto &_match_expr{ _67623_m };
		if (!(_match_expr.type_is<jule::Ref<_11a3c2e70_TypeKind>>())) { goto _case_end_4773572224; }
		_case_begin_4773572224:;
		{
			return _11a1932e0_gen_type_kind(_67623_m.operator jule::Ref<_11a3c2e70_TypeKind>());
		}
		goto _match_end_4773569456;
		_case_end_4773572224:;
		if (!(_match_expr.type_is<jule::Ref<_11ab854f0_Const>>())) { goto _case_end_4773572336; }
		_case_begin_4773572336:;
		{
			return _11ad8ca40_gen_const_expr_model(_67623_m.operator jule::Ref<_11ab854f0_Const>());
		}
		goto _match_end_4773569456;
		_case_end_4773572336:;
		if (!(_match_expr.type_is<jule::Ref<_11a245f20_Var>>())) { goto _case_end_4773570960; }
		_case_begin_4773570960:;
		{
			return _11ad8ca40_gen_var_expr_model(_67623_m.operator jule::Ref<_11a245f20_Var>());
		}
		goto _match_end_4773569456;
		_case_end_4773570960:;
		if (!(_match_expr.type_is<jule::Ref<_118e2b060_Trait>>())) { goto _case_end_4773571072; }
		_case_begin_4773571072:;
		{
			return _11ae60410_trait_out_ident(_67623_m.operator jule::Ref<_118e2b060_Trait>());
		}
		goto _match_end_4773569456;
		_case_end_4773571072:;
		if (!(_match_expr.type_is<jule::Ref<_118bb7d70_Struct>>())) { goto _case_end_4773570384; }
		_case_begin_4773570384:;
		{
			return _11ad8ca40_gen_struct_expr_model(_67623_m.operator jule::Ref<_118bb7d70_Struct>());
		}
		goto _match_end_4773569456;
		_case_end_4773570384:;
		if (!(_match_expr.type_is<jule::Ref<_118bb7d70_StructIns>>())) { goto _case_end_4773570496; }
		_case_begin_4773570496:;
		{
			return _11ad8ca40_gen_struct_ins_expr_model(_67623_m.operator jule::Ref<_118bb7d70_StructIns>());
		}
		goto _match_end_4773569456;
		_case_end_4773570496:;
		if (!(_match_expr.type_is<jule::Ref<_119099250_FnIns>>())) { goto _case_end_4773570608; }
		_case_begin_4773570608:;
		{
			return _11ad8ca40_gen_fn_ins_expr_model(_67623_m.operator jule::Ref<_119099250_FnIns>());
		}
		goto _match_end_4773569456;
		_case_end_4773570608:;
		if (!(_match_expr.type_is<jule::Ref<_119748ec0_BinopExprModel>>())) { goto _case_end_4773572528; }
		_case_begin_4773572528:;
		{
			return _11ad8ca40_gen_binop_expr_model(_67623_m.operator jule::Ref<_119748ec0_BinopExprModel>());
		}
		goto _match_end_4773569456;
		_case_end_4773572528:;
		if (!(_match_expr.type_is<jule::Ref<_119748ec0_UnaryExprModel>>())) { goto _case_end_4773572640; }
		_case_begin_4773572640:;
		{
			return _11ad8ca40_gen_unary_expr_model(_67623_m.operator jule::Ref<_119748ec0_UnaryExprModel>());
		}
		goto _match_end_4773569456;
		_case_end_4773572640:;
		if (!(_match_expr.type_is<jule::Ref<_119748ec0_GetRefPtrExprModel>>())) { goto _case_end_4773572752; }
		_case_begin_4773572752:;
		{
			return _11ad8ca40_gen_get_ref_ptr_expr_model(_67623_m.operator jule::Ref<_119748ec0_GetRefPtrExprModel>());
		}
		goto _match_end_4773569456;
		_case_end_4773572752:;
		if (!(_match_expr.type_is<jule::Ref<_119748ec0_StructLitExprModel>>())) { goto _case_end_4773572864; }
		_case_begin_4773572864:;
		{
			return _11ad8ca40_gen_struct_lit_expr_model(_67623_m.operator jule::Ref<_119748ec0_StructLitExprModel>());
		}
		goto _match_end_4773569456;
		_case_end_4773572864:;
		if (!(_match_expr.type_is<jule::Ref<_119748ec0_AllocStructLitExprModel>>())) { goto _case_end_4773572976; }
		_case_begin_4773572976:;
		{
			return _11ad8ca40_gen_alloc_struct_lit_expr_model(_67623_m.operator jule::Ref<_119748ec0_AllocStructLitExprModel>());
		}
		goto _match_end_4773569456;
		_case_end_4773572976:;
		if (!(_match_expr.type_is<jule::Ref<_119748ec0_CastingExprModel>>())) { goto _case_end_4773573088; }
		_case_begin_4773573088:;
		{
			return _11ad8ca40_gen_casting_expr_model(_67623_m.operator jule::Ref<_119748ec0_CastingExprModel>());
		}
		goto _match_end_4773569456;
		_case_end_4773573088:;
		if (!(_match_expr.type_is<jule::Ref<_119748ec0_FnCallExprModel>>())) { goto _case_end_4773573200; }
		_case_begin_4773573200:;
		{
			return _11ad8ca40_gen_fn_call_expr_model(_67623_m.operator jule::Ref<_119748ec0_FnCallExprModel>());
		}
		goto _match_end_4773569456;
		_case_end_4773573200:;
		if (!(_match_expr.type_is<jule::Ref<_119748ec0_SliceExprModel>>())) { goto _case_end_4773573312; }
		_case_begin_4773573312:;
		{
			return _11ad8ca40_gen_slice_expr_model(_67623_m.operator jule::Ref<_119748ec0_SliceExprModel>());
		}
		goto _match_end_4773569456;
		_case_end_4773573312:;
		if (!(_match_expr.type_is<jule::Ref<_119748ec0_ArrayExprModel>>())) { goto _case_end_4773573424; }
		_case_begin_4773573424:;
		{
			return _11ad8ca40_gen_array_expr_model(_67623_m.operator jule::Ref<_119748ec0_ArrayExprModel>());
		}
		goto _match_end_4773569456;
		_case_end_4773573424:;
		if (!(_match_expr.type_is<jule::Ref<_119748ec0_IndexigExprModel>>())) { goto _case_end_4773573536; }
		_case_begin_4773573536:;
		{
			return _11ad8ca40_gen_indexing_expr_model(_67623_m.operator jule::Ref<_119748ec0_IndexigExprModel>());
		}
		goto _match_end_4773569456;
		_case_end_4773573536:;
		if (!(_match_expr.type_is<jule::Ref<_119748ec0_AnonFnExprModel>>())) { goto _case_end_4773573648; }
		_case_begin_4773573648:;
		{
			return _11ad8ca40_gen_anon_fn_expr_model(_67623_m.operator jule::Ref<_119748ec0_AnonFnExprModel>());
		}
		goto _match_end_4773569456;
		_case_end_4773573648:;
		if (!(_match_expr.type_is<jule::Ref<_119748ec0_MapExprModel>>())) { goto _case_end_4773573760; }
		_case_begin_4773573760:;
		{
			return _11ad8ca40_gen_map_expr_model(_67623_m.operator jule::Ref<_119748ec0_MapExprModel>());
		}
		goto _match_end_4773569456;
		_case_end_4773573760:;
		if (!(_match_expr.type_is<jule::Ref<_119748ec0_SlicingExprModel>>())) { goto _case_end_4773573872; }
		_case_begin_4773573872:;
		{
			return _11ad8ca40_gen_slicing_expr_model(_67623_m.operator jule::Ref<_119748ec0_SlicingExprModel>());
		}
		goto _match_end_4773569456;
		_case_end_4773573872:;
		if (!(_match_expr.type_is<jule::Ref<_119748ec0_TraitSubIdentExprModel>>())) { goto _case_end_4773573984; }
		_case_begin_4773573984:;
		{
			return _11ad8ca40_gen_trait_sub_ident_expr_model(_67623_m.operator jule::Ref<_119748ec0_TraitSubIdentExprModel>());
		}
		goto _match_end_4773569456;
		_case_end_4773573984:;
		if (!(_match_expr.type_is<jule::Ref<_119748ec0_StructSubIdentExprModel>>())) { goto _case_end_4773574096; }
		_case_begin_4773574096:;
		{
			return _11ad8ca40_gen_struct_sub_ident_expr_model(_67623_m.operator jule::Ref<_119748ec0_StructSubIdentExprModel>());
		}
		goto _match_end_4773569456;
		_case_end_4773574096:;
		if (!(_match_expr.type_is<jule::Ref<_119748ec0_CommonIdentExprModel>>())) { goto _case_end_4773574208; }
		_case_begin_4773574208:;
		{
			return _11ad8ca40_gen_common_ident_expr_model(_67623_m.operator jule::Ref<_119748ec0_CommonIdentExprModel>());
		}
		goto _match_end_4773569456;
		_case_end_4773574208:;
		if (!(_match_expr.type_is<jule::Ref<_119748ec0_CommonSubIdentExprModel>>())) { goto _case_end_4773574320; }
		_case_begin_4773574320:;
		{
			return _11ad8ca40_gen_common_sub_ident_expr_model(_67623_m.operator jule::Ref<_119748ec0_CommonSubIdentExprModel>());
		}
		goto _match_end_4773569456;
		_case_end_4773574320:;
		if (!(_match_expr.type_is<jule::Ref<_119748ec0_TupleExprModel>>())) { goto _case_end_4773574432; }
		_case_begin_4773574432:;
		{
			return _11ad8ca40_gen_tuple_expr_model(_67623_m.operator jule::Ref<_119748ec0_TupleExprModel>());
		}
		goto _match_end_4773569456;
		_case_end_4773574432:;
		if (!(_match_expr.type_is<jule::Ref<_119748ec0_BuiltinOutCallExprModel>>())) { goto _case_end_4773574544; }
		_case_begin_4773574544:;
		{
			return _11ad8ca40_gen_builtin_out_call_expr_model(_67623_m.operator jule::Ref<_119748ec0_BuiltinOutCallExprModel>());
		}
		goto _match_end_4773569456;
		_case_end_4773574544:;
		if (!(_match_expr.type_is<jule::Ref<_119748ec0_BuiltinOutlnCallExprModel>>())) { goto _case_end_4773574656; }
		_case_begin_4773574656:;
		{
			return _11ad8ca40_gen_builtin_outln_call_expr_model(_67623_m.operator jule::Ref<_119748ec0_BuiltinOutlnCallExprModel>());
		}
		goto _match_end_4773569456;
		_case_end_4773574656:;
		if (!(_match_expr.type_is<jule::Ref<_119748ec0_BuiltinNewCallExprModel>>())) { goto _case_end_4773574768; }
		_case_begin_4773574768:;
		{
			return _11ad8ca40_gen_builtin_new_call_expr_model(_67623_m.operator jule::Ref<_119748ec0_BuiltinNewCallExprModel>());
		}
		goto _match_end_4773569456;
		_case_end_4773574768:;
		if (!(_match_expr.type_is<jule::Ref<_119748ec0_BuiltinRealCallExprModel>>())) { goto _case_end_4773574896; }
		_case_begin_4773574896:;
		{
			return _11ad8ca40_gen_builtin_real_call_expr_model(_67623_m.operator jule::Ref<_119748ec0_BuiltinRealCallExprModel>());
		}
		goto _match_end_4773569456;
		_case_end_4773574896:;
		if (!(_match_expr.type_is<jule::Ref<_119748ec0_BuiltinDropCallExprModel>>())) { goto _case_end_4773575024; }
		_case_begin_4773575024:;
		{
			return _11ad8ca40_gen_builtin_drop_call_expr_model(_67623_m.operator jule::Ref<_119748ec0_BuiltinDropCallExprModel>());
		}
		goto _match_end_4773569456;
		_case_end_4773575024:;
		if (!(_match_expr.type_is<jule::Ref<_119748ec0_BuiltinPanicCallExprModel>>())) { goto _case_end_4773575152; }
		_case_begin_4773575152:;
		{
			return _11ad8ca40_gen_builtin_panic_call_expr_model(_67623_m.operator jule::Ref<_119748ec0_BuiltinPanicCallExprModel>());
		}
		goto _match_end_4773569456;
		_case_end_4773575152:;
		if (!(_match_expr.type_is<jule::Ref<_119748ec0_BuiltinMakeCallExprModel>>())) { goto _case_end_4773575280; }
		_case_begin_4773575280:;
		{
			return _11ad8ca40_gen_builtin_make_call_expr_model(_67623_m.operator jule::Ref<_119748ec0_BuiltinMakeCallExprModel>());
		}
		goto _match_end_4773569456;
		_case_end_4773575280:;
		if (!(_match_expr.type_is<jule::Ref<_119748ec0_BuiltinCloneCallExprModel>>())) { goto _case_end_4773575408; }
		_case_begin_4773575408:;
		{
			return _11ad8ca40_gen_builtin_clone_call_expr_model(_67623_m.operator jule::Ref<_119748ec0_BuiltinCloneCallExprModel>());
		}
		goto _match_end_4773569456;
		_case_end_4773575408:;
		if (!(_match_expr.type_is<jule::Ref<_119748ec0_SizeofExprModel>>())) { goto _case_end_4773575536; }
		_case_begin_4773575536:;
		{
			return _11ad8ca40_gen_sizeof_expr_model(_67623_m.operator jule::Ref<_119748ec0_SizeofExprModel>());
		}
		goto _match_end_4773569456;
		_case_end_4773575536:;
		if (!(_match_expr.type_is<jule::Ref<_119748ec0_AlignofExprModel>>())) { goto _case_end_4773575664; }
		_case_begin_4773575664:;
		{
			return _11ad8ca40_gen_alignof_expr_model(_67623_m.operator jule::Ref<_119748ec0_AlignofExprModel>());
		}
		goto _match_end_4773569456;
		_case_end_4773575664:;
		if (!(_match_expr.type_is<jule::Ref<_119748ec0_RuneExprModel>>())) { goto _case_end_4773575792; }
		_case_begin_4773575792:;
		{
			return _11ad8ca40_gen_rune_expr_model(_67623_m.operator jule::Ref<_119748ec0_RuneExprModel>());
		}
		goto _match_end_4773569456;
		_case_end_4773575792:;
		if (!(_match_expr.type_is<jule::Ref<_119748ec0_BuiltinErrorTraitSubIdentExprModel>>())) { goto _case_end_4773575920; }
		_case_begin_4773575920:;
		{
			return _11ad8ca40_gen_builtin_error_trait_sub_ident_expr_model(_67623_m.operator jule::Ref<_119748ec0_BuiltinErrorTraitSubIdentExprModel>());
		}
		goto _match_end_4773569456;
		_case_end_4773575920:;
		if (!(_match_expr.type_is<jule::Ref<_119748ec0_ExplicitDerefExprModel>>())) { goto _case_end_4773576048; }
		_case_begin_4773576048:;
		{
			return _11ad8ca40_gen_explicit_deref_expr_model(_67623_m.operator jule::Ref<_119748ec0_ExplicitDerefExprModel>());
		}
		goto _match_end_4773569456;
		_case_end_4773576048:;
		if (!(_match_expr.type_is<jule::Ref<_119748ec0_StructStaticIdentExprModel>>())) { goto _case_end_4773576176; }
		_case_begin_4773576176:;
		{
			return _11ad8ca40_gen_struct_static_ident_expr_model(_67623_m.operator jule::Ref<_119748ec0_StructStaticIdentExprModel>());
		}
		goto _match_end_4773569456;
		_case_end_4773576176:;
		_case_begin_4773569984:;
		{
			return jule::Str("<unimplemented_expression_model>", 32);
		}
		goto _match_end_4773569456;
		_case_end_4773569984:;
		_match_end_4773569456:;
	}
}



inline jule::Str _11ad8ca40_gen_expr(jule::Any _80017_e) {
	jule::Str _80113_obj = _11ad8ca40_gen_expr_model(_80017_e);
	if (_80113_obj[static_cast<jule::Int>(0LL)] != '(') {
		return _80113_obj;
	}
	{
		auto &_match_expr{ _80017_e };
		if (!(_match_expr.type_is<jule::Ref<_119748ec0_BinopExprModel>>())) { goto _case_end_4772675776; }
		_case_begin_4772675776:;
		{
			_80113_obj=_80113_obj.slice(static_cast<jule::Int>(1LL),static_cast<jule::Int>(_80113_obj.len() - 1LL));
		}
		goto _match_end_4772676896;
		_case_end_4772675776:;
		_match_end_4772676896:;
	}
	return _80113_obj;
}



inline jule::Str _11ad8ca40_gen_val(jule::Ref<_11a53f4f0_Value> _81316_v) {
	if (_81316_v->_field_data->_method_is_const()) {
		return _11ad8ca40_gen_const_expr(_81316_v->_field_data);
	}
	return _11ad8ca40_gen_expr(_81316_v->_field_data->_field_model);
}



inline jule::Str _11ad8ca40_get_init_expr(jule::Ref<_11a3c2e70_TypeKind> _82022_t) {
	if (jule::real(_82022_t->_method_ptr())) {
		return jule::Str("nullptr", 7);
	}
	jule::Ref<_11a089b40_Enum> _82513_enm = _82022_t->_method_enm();
	if ((!(jule::real(_82513_enm)))) {
		return _11a1932e0_gen_type_kind(_82022_t) + jule::Str("()", 2);
	}
	return _11ad8ca40_gen_val(_82513_enm->_field_items[static_cast<jule::Int>(0LL)]->_field_value);
}



inline jule::Str _11ae5dd20_get_derive_fn_decl_clone(jule::Ref<_118bb7d70_Struct> _729_s) {
	jule::Str _813_obj = _11a1932e0_gen_struct_kind(_729_s);
	_813_obj+=jule::Str(" clone(void) const ", 19);
	return _813_obj;
}



inline jule::Str _11ae5dd20_get_derive_fn_def_clone(jule::Ref<_118bb7d70_Struct> _1328_s) {
	jule::Str _1413_obj = _11a1932e0_gen_struct_kind(_1328_s);
	_1413_obj+=(jule::Str(" ", 1) + _1413_obj) + jule::Str("::clone(void) const ", 20);
	return _1413_obj;
}



inline jule::Str _11ae60410_as_ident(jule::Str _2513_ident) {
	return jule::Str("_", 1) + _2513_ident;
}



inline jule::Str _11ae60410_as_jt(jule::Str _2810_id) {
	jule::Slice<jule::I32> _2913_ident = static_cast<jule::Slice<jule::I32>>(_2810_id);
	if ((97LL <= _2913_ident[static_cast<jule::Int>(0LL)]) && (_2913_ident[static_cast<jule::Int>(0LL)] <= 122LL)) {
		_2913_ident[static_cast<jule::Int>(0LL)]-=32LL;
	}
	return jule::Str("jule::", 6) + static_cast<jule::Str>(_2913_ident);
}



inline jule::Str _11ae60410_get_ptr_as_ident(jule::Uintptr _3721_ptr) {
	jule::Str _3813_addr = jule::Str("_", 1) + _10ff65780_fmt_uint(static_cast<jule::U64>(_3721_ptr),16LL);
	{
		auto &__julec_range_expr = _3813_addr;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _11ae60410_i = 0;
			jule::U8 _11ae60410_r = *__julec_range_begin;
			_iter_begin_4772709808:;
			{
				if (_11ae60410_r != '0') {
					_3813_addr=_3813_addr.slice(static_cast<jule::Int>(_11ae60410_i));
					goto _iter_end_4772709808;
				}
			}
			_iter_next_4772709808:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_11ae60410_i; _11ae60410_r = *__julec_range_begin; goto _iter_begin_4772709808; }
			_iter_end_4772709808:;
		}
	}
	return _3813_addr;
}



inline jule::Str _11ae60410_as_out_ident(jule::Str _5317_ident,jule::Uintptr _5329_ptr) {
	if (_5329_ptr != 0LL) {
		return (_11ae60410_get_ptr_as_ident(_5329_ptr) + jule::Str("_", 1)) + _5317_ident;
	}
	return _11ae60410_as_ident(_5317_ident);
}



inline jule::Str _11ae60410_as_local_ident(jule::Int _6619_row,jule::Int _6629_col,jule::Str _6643_ident) {
	_6643_ident=((_10ff65780_itoa(_6619_row) + _10ff65780_itoa(_6629_col)) + jule::Str("_", 1)) + _6643_ident;
	return _11ae60410_as_ident(_6643_ident);
}



inline jule::Str _11ae60410_fn_out_ident(jule::Ref<_119099250_Fn> _7217_f) {
	{
		if (!((_7217_f->_field_cpp_linked))) { goto _case_end_4772725200; }
		_case_begin_4772725200:;
		{
			return _7217_f->_field_ident;
		}
		goto _match_end_4772721904;
		_case_end_4772725200:;
		if (!((_7217_f->_field_ident == jule::Str("main", 4)))) { goto _case_end_4772727504; }
		_case_begin_4772727504:;
		{
			return jule::Str("entry_point", 11);
		}
		goto _match_end_4772721904;
		_case_end_4772727504:;
		if (!((_7217_f->_method_is_method()))) { goto _case_end_4772727616; }
		_case_begin_4772727616:;
		{
			if (_7217_f->_field_statically) {
				return jule::Str("_static_method_", 15) + _7217_f->_field_ident;
			}
			return jule::Str("_method_", 8) + _7217_f->_field_ident;
		}
		goto _match_end_4772721904;
		_case_end_4772727616:;
		_case_begin_4772723168:;
		{
			return _11ae60410_as_out_ident(_7217_f->_field_ident,static_cast<jule::Uintptr>(_7217_f->_field_token._field_file->_method_addr()));
		}
		goto _match_end_4772721904;
		_case_end_4772723168:;
		_match_end_4772721904:;
	}
}



inline jule::Str _11ae60410_fn_ins_out_ident(jule::Ref<_119099250_FnIns> _9221_f) {
	if (_9221_f->_method_is_builtin()) {
		return jule::Str("jule::", 6) + _9221_f->_field_decl->_field_ident;
	}
	if (_9221_f->_field_decl->_field_cpp_linked || (_9221_f->_field_generics.len() == 0LL)) {
		return _11ae60410_fn_out_ident(_9221_f->_field_decl);
	}
	{
		auto &__julec_range_expr = _9221_f->_field_decl->_field_instances;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _11ae60410_i = 0;
			jule::Ref<_119099250_FnIns> _11ae60410_ins = *__julec_range_begin;
			_iter_begin_4772736336:;
			{
				jule::Ref<_11a3c2e70_TypeKind> _10213_kind = jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_11ae60410_ins));
				if (_9221_f->_method_equals(_10213_kind)) {
					return (_11ae60410_fn_out_ident(_9221_f->_field_decl) + jule::Str("_", 1)) + _10ff65780_itoa(_11ae60410_i);
				}
			}
			_iter_next_4772736336:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_11ae60410_i; _11ae60410_ins = *__julec_range_begin; goto _iter_begin_4772736336; }
			_iter_end_4772736336:;
		}
	}
	return jule::Str("__?__", 5);
}



inline jule::Str _11ae60410_trait_out_ident(jule::Ref<_118e2b060_Trait> _11220_t) {
	if (_11220_t->_method_is_builtin()) {
		return jule::Str("jule::", 6) + _11220_t->_field_ident;
	}
	return _11ae60410_as_out_ident(_11220_t->_field_ident,static_cast<jule::Uintptr>(_11220_t->_field_token._field_file->_method_addr()));
}



inline jule::Str _11ae60410_param_out_ident(jule::Ref<_119099250_Param> _12020_p) {
	if (_11911a8a0_is_anon_ident(_12020_p->_field_ident) || _11911a8a0_is_ignore_ident(_12020_p->_field_ident)) {
		return jule::Str("", 0);
	}
	return _11ae60410_as_local_ident(_12020_p->_field_token._field_row,_12020_p->_field_token._field_column,_12020_p->_field_ident);
}



inline jule::Str _11ae60410_struct_out_ident(jule::Ref<_118bb7d70_Struct> _12821_s) {
	if (_12821_s->_field_cpp_linked) {
		if (_11a1932e0_has_directive(_12821_s->_field_directives,jule::Str("typedef", 7))) {
			return _12821_s->_field_ident;
		}
		return jule::Str("struct ", 7) + _12821_s->_field_ident;
	}
	return _11ae60410_as_out_ident(_12821_s->_field_ident,static_cast<jule::Uintptr>(_12821_s->_field_token._field_file->_method_addr()));
}



inline jule::Str _11ae60410_struct_ins_out_ident(jule::Ref<_118bb7d70_StructIns> _13925_s) {
	if (_13925_s->_field_decl->_field_cpp_linked || (_13925_s->_field_generics.len() == 0LL)) {
		return _11ae60410_struct_out_ident(_13925_s->_field_decl);
	}
	{
		auto &__julec_range_expr = _13925_s->_field_decl->_field_instances;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _11ae60410_i = 0;
			jule::Ref<_118bb7d70_StructIns> _11ae60410_ins = *__julec_range_begin;
			_iter_begin_4772762912:;
			{
				jule::Ref<_11a3c2e70_TypeKind> _14513_kind = jule::new_struct<_11a3c2e70_TypeKind>(new( std::nothrow ) _11a3c2e70_TypeKind(jule::Bool(),jule::Str(),_11ae60410_ins));
				if (_13925_s->_method_equals(_14513_kind)) {
					return (_11ae60410_struct_out_ident(_13925_s->_field_decl) + jule::Str("_", 1)) + _10ff65780_itoa(_11ae60410_i);
				}
			}
			_iter_next_4772762912:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_11ae60410_i; _11ae60410_ins = *__julec_range_begin; goto _iter_begin_4772762912; }
			_iter_end_4772762912:;
		}
	}
	return jule::Str("__?__", 5);
}



inline jule::Str _11ae60410_field_out_ident(jule::Ref<_118bb7d70_Field> _15520_f) {
	if (_15520_f->_field_owner->_field_cpp_linked) {
		return _15520_f->_field_ident;
	}
	return jule::Str("_field_", 7) + _15520_f->_field_ident;
}



inline jule::Str _11ae60410_var_out_ident(jule::Ref<_11a245f20_Var> _16322_v) {
	{
		if (!((_16322_v->_field_cpp_linked))) { goto _case_end_4772778880; }
		_case_begin_4772778880:;
		{
			return _16322_v->_field_ident;
		}
		goto _match_end_4772770448;
		_case_end_4772778880:;
		if (!((_16322_v->_field_ident == jule::Str("self", 4)))) { goto _case_end_4772780736; }
		_case_begin_4772780736:;
		{
			if (jule::real(_16322_v->_field_kind->_field_kind->_method_ref())) {
				return jule::Str("this->self", 10);
			}
			return jule::Str("(*this)", 7);
		}
		goto _match_end_4772770448;
		_case_end_4772780736:;
		if (!((jule::real(_16322_v->_field_scope)))) { goto _case_end_4772780848; }
		_case_begin_4772780848:;
		{
			return _11ae60410_as_local_ident(_16322_v->_field_token._field_row,_16322_v->_field_token._field_column,_16322_v->_field_ident);
		}
		goto _match_end_4772770448;
		_case_end_4772780848:;
		_case_begin_4772770656:;
		{
			return _11ae60410_as_out_ident(_16322_v->_field_ident,static_cast<jule::Uintptr>(_16322_v->_field_token._field_file->_method_addr()));
		}
		goto _match_end_4772770448;
		_case_end_4772770656:;
		_match_end_4772770448:;
	}
}



inline jule::Str _11ae60410_iter_begin_label_ident(jule::Uintptr _18327_it) {
	return jule::Str("_iter_begin_", 12) + _10ff65780_itoa(static_cast<jule::Int>(_18327_it));
}



inline jule::Str _11ae60410_iter_end_label_ident(jule::Uintptr _18825_it) {
	return jule::Str("_iter_end_", 10) + _10ff65780_itoa(static_cast<jule::Int>(_18825_it));
}



inline jule::Str _11ae60410_iter_next_label_ident(jule::Uintptr _19326_it) {
	return jule::Str("_iter_next_", 11) + _10ff65780_itoa(static_cast<jule::Int>(_19326_it));
}



inline jule::Str _11ae60410_label_ident(jule::Str _19816_ident) {
	return jule::Str("_julec_label_", 13) + _19816_ident;
}



inline jule::Str _11ae60410_match_end_label_ident(jule::Uintptr _20326_m) {
	return jule::Str("_match_end_", 11) + _10ff65780_itoa(static_cast<jule::Int>(_20326_m));
}



inline jule::Str _11ae60410_case_begin_label_ident(jule::Uintptr _20827_c) {
	return jule::Str("_case_begin_", 12) + _10ff65780_itoa(static_cast<jule::Int>(_20827_c));
}



inline jule::Str _11ae60410_case_end_label_ident(jule::Uintptr _21325_c) {
	return jule::Str("_case_end_", 10) + _10ff65780_itoa(static_cast<jule::Int>(_21325_c));
}



inline jule::Bool _11a1932e0_has_directive(jule::Slice<jule::Ref<_118d9a790_Directive>> _2518_directives,jule::Str _2560_tag) {
	{
		auto &__julec_range_expr = _2518_directives;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_118d9a790_Directive> _11a1932e0_dr = *__julec_range_begin;
			_iter_begin_4772800128:;
			{
				if (_11a1932e0_dr->_field_tag == _2560_tag) {
					return true;
				}
			}
			_iter_next_4772800128:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a1932e0_dr = *__julec_range_begin; goto _iter_begin_4772800128; }
			_iter_end_4772800128:;
		}
	}
	return false;
}



inline jule::Str _11a1932e0_gen_prim_kind(jule::Ref<_11a3c2e70_Prim> _3518_p) {
	return _11ae60410_as_jt(_3518_p->_method_to_str());
}



inline jule::Str _11a1932e0_gen_tuple_kind(jule::Ref<_11a3c2e70_Tuple> _4023_t) {
	jule::Str _4113_obj = jule::Str("std::tuple<", 11);
	{
		auto &__julec_range_expr = _4023_t->_field_types;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11a3c2e70_TypeKind> _11a1932e0_t = *__julec_range_begin;
			_iter_begin_4772809856:;
			{
				_4113_obj+=_11a1932e0_gen_type_kind(_11a1932e0_t) + jule::Str(",", 1);
			}
			_iter_next_4772809856:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a1932e0_t = *__julec_range_begin; goto _iter_begin_4772809856; }
			_iter_end_4772809856:;
		}
	}
	_4113_obj=_4113_obj.slice(0LL,static_cast<jule::Int>(_4113_obj.len() - 1LL));
	return _4113_obj + jule::Str(">", 1);
}



inline jule::Str _11a1932e0_as_ref_kind(jule::Str _5016_elem) {
	jule::Str _519_ref = _11ae60410_as_jt(jule::Str("ref", 3));
	return ((_519_ref + jule::Str("<", 1)) + _5016_elem) + jule::Str(">", 1);
}



inline jule::Str _11a1932e0_gen_ref_kind(jule::Ref<_11a3c2e70_Ref> _5621_r) {
	jule::Str _579_elem = _11a1932e0_gen_type_kind(_5621_r->_field_elem);
	return _11a1932e0_as_ref_kind(_579_elem);
}



inline jule::Str _11a1932e0_gen_ptr_kind(jule::Ref<_11a3c2e70_Ptr> _6221_p) {
	
	if (_6221_p->_method_is_unsafe()) {
		return jule::Str("void*", 5);
	}
	jule::Str _689_elem = _11a1932e0_gen_type_kind(_6221_p->_field_elem);
	return _689_elem + jule::Str("*", 1);
}



inline jule::Str _11a1932e0_gen_enum_kind(jule::Ref<_11a089b40_Enum> _7322_e) {
	return _11a1932e0_gen_type_kind(_7322_e->_field_kind->_field_kind);
}



inline jule::Str _11a1932e0_as_slice_kind(jule::Ref<_11a3c2e70_TypeKind> _7722_elem) {
	jule::Str _789_elem_s = _11a1932e0_gen_type_kind(_7722_elem);
	jule::Str _799_slc = _11ae60410_as_jt(jule::Str("slice", 5));
	return ((_799_slc + jule::Str("<", 1)) + _789_elem_s) + jule::Str(">", 1);
}



inline jule::Str _11a1932e0_gen_slice_kind(jule::Ref<_11a3c2e70_Slc> _8423_s) {
	return _11a1932e0_as_slice_kind(_8423_s->_field_elem);
}



inline jule::Str _11a1932e0_gen_map_kind(jule::Ref<_11a3c2e70_Map> _8921_m) {
	jule::Str _909_key = _11a1932e0_gen_type_kind(_8921_m->_field_key);
	jule::Str _919_val = _11a1932e0_gen_type_kind(_8921_m->_field_val);
	jule::Str _929__map = _11ae60410_as_jt(jule::Str("map", 3));
	return ((((_929__map + jule::Str("<", 1)) + _909_key) + jule::Str(",", 1)) + _919_val) + jule::Str(">", 1);
}



inline jule::Str _11a1932e0_gen_trait_kind_from_ident(jule::Str _9630_ident) {
	jule::Str _979_trt = _11ae60410_as_jt(jule::Str("trait", 5));
	return ((_979_trt + jule::Str("<", 1)) + _9630_ident) + jule::Str(">", 1);
}



inline jule::Str _11a1932e0_gen_trait_kind(jule::Ref<_118e2b060_Trait> _10219_t) {
	jule::Str _1039_ident = _11ae60410_trait_out_ident(_10219_t);
	return _11a1932e0_gen_trait_kind_from_ident(_1039_ident);
}



inline jule::Str _11a1932e0_gen_struct_kind(jule::Ref<_118bb7d70_Struct> _10820_s) {
	jule::Str _10913_rep = jule::Str("", 0);
	if (_10820_s->_field_cpp_linked && (!(_11a1932e0_has_directive(_10820_s->_field_directives,jule::Str("typedef", 7))))) {
		_10913_rep+=jule::Str("struct ", 7);
	}
	_10913_rep+=_11ae60410_struct_out_ident(_10820_s);
	return _10913_rep;
}



inline jule::Str _11a1932e0_gen_struct_kind_ins(jule::Ref<_118bb7d70_StructIns> _11928_s) {
	if (_11928_s->_field_decl->_field_cpp_linked) {
		jule::Str _12117_ident = _11ae60410_struct_ins_out_ident(_11928_s);
		if (_11928_s->_field_generics.len() > 0LL) {
			_12117_ident+=jule::Str("<", 1);
			{
				auto &__julec_range_expr = _11928_s->_field_generics;
				if (__julec_range_expr.begin() != __julec_range_expr.end()) {
					auto __julec_range_begin = __julec_range_expr.begin();
					const auto __julec_range_end = __julec_range_expr.end();
					jule::Ref<_11a3c2e70_TypeKind> _11a1932e0_g = *__julec_range_begin;
					_iter_begin_4772855968:;
					{
						_12117_ident+=_11a1932e0_gen_type_kind(_11a1932e0_g) + jule::Str(",", 1);
					}
					_iter_next_4772855968:;
					++__julec_range_begin;
					if (__julec_range_begin != __julec_range_end) { _11a1932e0_g = *__julec_range_begin; goto _iter_begin_4772855968; }
					_iter_end_4772855968:;
				}
			}
			_12117_ident=_12117_ident.slice(0LL,static_cast<jule::Int>(_12117_ident.len() - 1LL));
			_12117_ident+=jule::Str(">", 1);
		}
		return _12117_ident;
	}
	return _11ae60410_struct_ins_out_ident(_11928_s);
}



inline jule::Str _11a1932e0_gen_array_kind(jule::Ref<_11a3c2e70_Arr> _13623_a) {
	jule::Str _1379_arr = _11ae60410_as_jt(jule::Str("array", 5));
	jule::Str _1389_elem = _11a1932e0_gen_type_kind(_13623_a->_field_elem);
	jule::Str _1399_size = _10ff65780_itoa(_13623_a->_field_n);
	return ((((_1379_arr + jule::Str("<", 1)) + _1389_elem) + jule::Str(",", 1)) + _1399_size) + jule::Str(">", 1);
}



inline jule::Str _11a1932e0_gen_fn_anon_decl(jule::Ref<_119099250_FnIns> _14325_f) {
	jule::Str _14413_decl = _11a1c3f00_gen_fn_ins_result(_14325_f);
	_14413_decl+=jule::Str("(", 1);
	if (_14325_f->_field_params.len() > 0LL) {
		{
			auto &__julec_range_expr = _14325_f->_field_params;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_119099250_ParamIns> _11a1932e0_param = *__julec_range_begin;
				_iter_begin_4772871360:;
				{
					if (_11a1932e0_param->_field_decl->_method_is_self()) {
						goto _iter_next_4772871360;
					}
					_14413_decl+=_11a1c3f00_gen_param_ins_prototype(_11a1932e0_param);
					_14413_decl+=jule::Str(",", 1);
				}
				_iter_next_4772871360:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _11a1932e0_param = *__julec_range_begin; goto _iter_begin_4772871360; }
				_iter_end_4772871360:;
			}
		}
		_14413_decl=_14413_decl.slice(0LL,static_cast<jule::Int>(_14413_decl.len() - 1LL));
	} else {
		_14413_decl+=jule::Str("void", 4);
	}
	_14413_decl+=jule::Str(")", 1);
	return _14413_decl;
}



inline jule::Str _11a1932e0_gen_fn_kind(jule::Ref<_119099250_FnIns> _16620_f) {
	jule::Str _1679_fnc = _11ae60410_as_jt(jule::Str("fn", 2));
	jule::Str _1689_decl = _11a1932e0_gen_fn_anon_decl(_16620_f);
	return ((_1679_fnc + jule::Str("<", 1)) + _1689_decl) + jule::Str(">", 1);
}



inline jule::Str _11a1932e0_gen_type_kind(jule::Ref<_11a3c2e70_TypeKind> _17322_k) {
	{
		if (!((_17322_k->_field_cpp_linked))) { goto _case_end_4772887872; }
		_case_begin_4772887872:;
		{
			return _17322_k->_field_cpp_ident;
		}
		goto _match_end_4772884576;
		_case_end_4772887872:;
		if (!((jule::real(_17322_k->_method_prim())))) { goto _case_end_4772886896; }
		_case_begin_4772886896:;
		{
			return _11a1932e0_gen_prim_kind(_17322_k->_method_prim());
		}
		goto _match_end_4772884576;
		_case_end_4772886896:;
		if (!((jule::real(_17322_k->_method_tup())))) { goto _case_end_4772887008; }
		_case_begin_4772887008:;
		{
			return _11a1932e0_gen_tuple_kind(_17322_k->_method_tup());
		}
		goto _match_end_4772884576;
		_case_end_4772887008:;
		if (!((jule::real(_17322_k->_method_ref())))) { goto _case_end_4772887120; }
		_case_begin_4772887120:;
		{
			return _11a1932e0_gen_ref_kind(_17322_k->_method_ref());
		}
		goto _match_end_4772884576;
		_case_end_4772887120:;
		if (!((jule::real(_17322_k->_method_ptr())))) { goto _case_end_4772888912; }
		_case_begin_4772888912:;
		{
			return _11a1932e0_gen_ptr_kind(_17322_k->_method_ptr());
		}
		goto _match_end_4772884576;
		_case_end_4772888912:;
		if (!((jule::real(_17322_k->_method_enm())))) { goto _case_end_4772889024; }
		_case_begin_4772889024:;
		{
			return _11a1932e0_gen_enum_kind(_17322_k->_method_enm());
		}
		goto _match_end_4772884576;
		_case_end_4772889024:;
		if (!((jule::real(_17322_k->_method_slc())))) { goto _case_end_4772889136; }
		_case_begin_4772889136:;
		{
			return _11a1932e0_gen_slice_kind(_17322_k->_method_slc());
		}
		goto _match_end_4772884576;
		_case_end_4772889136:;
		if (!((jule::real(_17322_k->_method_map())))) { goto _case_end_4772889248; }
		_case_begin_4772889248:;
		{
			return _11a1932e0_gen_map_kind(_17322_k->_method_map());
		}
		goto _match_end_4772884576;
		_case_end_4772889248:;
		if (!((jule::real(_17322_k->_method_trt())))) { goto _case_end_4772888000; }
		_case_begin_4772888000:;
		{
			return _11a1932e0_gen_trait_kind(_17322_k->_method_trt());
		}
		goto _match_end_4772884576;
		_case_end_4772888000:;
		if (!((jule::real(_17322_k->_method_strct())))) { goto _case_end_4772888112; }
		_case_begin_4772888112:;
		{
			return _11a1932e0_gen_struct_kind_ins(_17322_k->_method_strct());
		}
		goto _match_end_4772884576;
		_case_end_4772888112:;
		if (!((jule::real(_17322_k->_method_arr())))) { goto _case_end_4772888224; }
		_case_begin_4772888224:;
		{
			return _11a1932e0_gen_array_kind(_17322_k->_method_arr());
		}
		goto _match_end_4772884576;
		_case_end_4772888224:;
		if (!((jule::real(_17322_k->_method_fnc())))) { goto _case_end_4772888336; }
		_case_begin_4772888336:;
		{
			return _11a1932e0_gen_fn_kind(_17322_k->_method_fnc());
		}
		goto _match_end_4772884576;
		_case_end_4772888336:;
		_case_begin_4772884720:;
		{
			return jule::Str("[<unimplemented_type_kind>]", 27);
		}
		goto _match_end_4772884576;
		_case_end_4772884720:;
		_match_end_4772884576:;
	}
}



inline void _11a1c3f00_add_indent(void) {
	(_11a1c3f00_INDENT)++;
}



inline void _11a1c3f00_done_indent(void) {
	(_11a1c3f00_INDENT)--;
}



inline jule::Str _11a1c3f00_indent(void) {
	
	if (_11a1c3f00_INDENT == 0LL) {
		return jule::Str("", 0);
	}
	jule::Str _7913_s = jule::Str("", 0);
	jule::Int _8013_i = 0LL;
	_iter_begin_4772894784:;
	if (!(_8013_i < _11a1c3f00_INDENT)) { goto _iter_end_4772894784; }
	{
		_7913_s+=jule::Str("\t", 1);
	}
	_iter_next_4772894784:;
	(_8013_i)++;
	goto _iter_begin_4772894784;
	_iter_end_4772894784:;
	return _7913_s;
}



inline jule::Bool _11a1c3f00_is_cpp_header_file(jule::Str _8723_path) {
	jule::Int _889_offset = _8723_path.rfind(jule::Str(".", 1));
	if (_889_offset == -1LL) {
		return false;
	}
	return _13fe20550_is_valid_header_ext(_8723_path.slice(static_cast<jule::Int>(_889_offset)));
}



inline jule::Str _11a1c3f00_gen_links(jule::Ref<_10fee6360_IR> _9618_ir) {
	jule::Str _9713_obj = jule::Str("", 0);
	{
		auto &__julec_range_expr = _9618_ir->_field_used;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11a0945e0_ImportInfo> _11a1c3f00_pkg = *__julec_range_begin;
			_iter_begin_4772926880:;
			{
				{
					if (!(((!(_11a1c3f00_pkg->_field_cpp_linked))))) { goto _case_end_4772928848; }
					_case_begin_4772928848:;
					{
						goto _iter_next_4772926880;
					}
					goto _match_end_4772928608;
					_case_end_4772928848:;
					if (!((_13fe20550_is_std_header_path(_11a1c3f00_pkg->_field_path)))) { goto _case_end_4772928960; }
					_case_begin_4772928960:;
					{
						_9713_obj+=(jule::Str("#include ", 9) + _11a1c3f00_pkg->_field_path) + jule::Str("\n", 1);
					}
					goto _match_end_4772928608;
					_case_end_4772928960:;
					_match_end_4772928608:;
				}
			}
			_iter_next_4772926880:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a1c3f00_pkg = *__julec_range_begin; goto _iter_begin_4772926880; }
			_iter_end_4772926880:;
		}
	}
	{
		auto &__julec_range_expr = _9618_ir->_field_used;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11a0945e0_ImportInfo> _11a1c3f00_pkg = *__julec_range_begin;
			_iter_begin_4772931920:;
			{
				{
					if (!(((!(_11a1c3f00_pkg->_field_cpp_linked))))) { goto _case_end_4772935168; }
					_case_begin_4772935168:;
					{
						goto _iter_next_4772931920;
					}
					goto _match_end_4772934928;
					_case_end_4772935168:;
					if (!((_11a1c3f00_is_cpp_header_file(_11a1c3f00_pkg->_field_path)))) { goto _case_end_4772935280; }
					_case_begin_4772935280:;
					{
						_9713_obj+=(jule::Str("#include \"", 10) + _11a1c3f00_pkg->_field_path) + jule::Str("\"\n", 2);
					}
					goto _match_end_4772934928;
					_case_end_4772935280:;
					_match_end_4772934928:;
				}
			}
			_iter_next_4772931920:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a1c3f00_pkg = *__julec_range_begin; goto _iter_begin_4772931920; }
			_iter_end_4772931920:;
		}
	}
	return _9713_obj;
}



inline jule::Str _11a1c3f00_gen_fn_result(jule::Ref<_119099250_Fn> _12122_f) {
	if (_12122_f->_method_is_void()) {
		return jule::Str("void", 4);
	}
	return _11a1932e0_gen_type_kind(_12122_f->_field_result->_field_kind->_field_kind);
}



inline jule::Str _11a1c3f00_gen_fn_ins_result(jule::Ref<_119099250_FnIns> _12926_f) {
	if (_12926_f->_field_decl->_method_is_void()) {
		return jule::Str("void", 4);
	}
	return _11a1932e0_gen_type_kind(_12926_f->_field_result);
}



inline jule::Str _11a1c3f00_gen_param_prototype(jule::Ref<_119099250_Param> _13728_p) {
	jule::Str _13813_obj = jule::Str("", 0);
	if (_13728_p->_field_variadic) {
		_13813_obj+=_11ae60410_as_jt(jule::Str("slice", 5));
		_13813_obj+=jule::Str("<", 1);
		_13813_obj+=_11a1932e0_gen_type_kind(_13728_p->_field_kind->_field_kind);
		_13813_obj+=jule::Str(">", 1);
	} else {
		_13813_obj+=_11a1932e0_gen_type_kind(_13728_p->_field_kind->_field_kind);
	}
	return _13813_obj;
}



inline jule::Str _11a1c3f00_gen_param_ins(jule::Ref<_119099250_ParamIns> _15122_p) {
	jule::Str _15213_obj = _11a1c3f00_gen_param_ins_prototype(_15122_p);
	_15213_obj+=jule::Str(" ", 1);
	_15213_obj+=_11ae60410_param_out_ident(_15122_p->_field_decl);
	return _15213_obj;
}



inline jule::Str _11a1c3f00_gen_param_ins_prototype(jule::Ref<_119099250_ParamIns> _15932_p) {
	jule::Str _16013_obj = jule::Str("", 0);
	if (_15932_p->_field_decl->_field_variadic) {
		_16013_obj+=_11ae60410_as_jt(jule::Str("slice", 5));
		_16013_obj+=jule::Str("<", 1);
		_16013_obj+=_11a1932e0_gen_type_kind(_15932_p->_field_kind);
		_16013_obj+=jule::Str(">", 1);
	} else {
		_16013_obj+=_11a1932e0_gen_type_kind(_15932_p->_field_kind);
	}
	if (_15932_p->_field_decl->_field_reference) {
		_16013_obj+=jule::Str("&", 1);
	}
	return _16013_obj;
}



inline jule::Str _11a1c3f00_gen_param(jule::Ref<_119099250_Param> _17818_p) {
	jule::Str _17913_obj = _11a1c3f00_gen_param_prototype(_17818_p);
	if (((_17818_p->_field_ident != jule::Str("", 0)) && (!(_11911a8a0_is_ignore_ident(_17818_p->_field_ident)))) && (!(_11911a8a0_is_anon_ident(_17818_p->_field_ident)))) {
		_17913_obj+=jule::Str(" ", 1) + _11ae60410_param_out_ident(_17818_p);
	}
	return _17913_obj;
}



inline jule::Str _11a1c3f00_gen_params(jule::Slice<jule::Ref<_119099250_Param>> _18719_params) {
	{
		if (!((_18719_params.len() == 0LL))) { goto _case_end_4772975536; }
		_case_begin_4772975536:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_4772975248;
		_case_end_4772975536:;
		if (!(((_18719_params.len() == 1LL) && _18719_params[static_cast<jule::Int>(0LL)]->_method_is_self()))) { goto _case_end_4772975648; }
		_case_begin_4772975648:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_4772975248;
		_case_end_4772975648:;
		_match_end_4772975248:;
	}
	jule::Str _19613_obj = jule::Str("(", 1);
	{
		auto &__julec_range_expr = _18719_params;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_119099250_Param> _11a1c3f00_p = *__julec_range_begin;
			_iter_begin_4772980320:;
			{
				if ((!(_11a1c3f00_p->_method_is_self()))) {
					_19613_obj+=_11a1c3f00_gen_param(_11a1c3f00_p) + jule::Str(",", 1);
				}
			}
			_iter_next_4772980320:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a1c3f00_p = *__julec_range_begin; goto _iter_begin_4772980320; }
			_iter_end_4772980320:;
		}
	}
	_19613_obj=_19613_obj.slice(0LL,static_cast<jule::Int>(_19613_obj.len() - 1LL));
	return _19613_obj + jule::Str(")", 1);
}



inline jule::Str _11a1c3f00_gen_params_ins(jule::Slice<jule::Ref<_119099250_ParamIns>> _20823_params) {
	{
		if (!((_20823_params.len() == 0LL))) { goto _case_end_4772987552; }
		_case_begin_4772987552:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_4772982096;
		_case_end_4772987552:;
		if (!(((_20823_params.len() == 1LL) && _20823_params[static_cast<jule::Int>(0LL)]->_field_decl->_method_is_self()))) { goto _case_end_4772987664; }
		_case_begin_4772987664:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_4772982096;
		_case_end_4772987664:;
		_match_end_4772982096:;
	}
	jule::Str _21713_obj = jule::Str("(", 1);
	{
		auto &__julec_range_expr = _20823_params;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_119099250_ParamIns> _11a1c3f00_p = *__julec_range_begin;
			_iter_begin_4772992848:;
			{
				if ((!(_11a1c3f00_p->_field_decl->_method_is_self()))) {
					_21713_obj+=_11a1c3f00_gen_param_ins(_11a1c3f00_p) + jule::Str(",", 1);
				}
			}
			_iter_next_4772992848:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a1c3f00_p = *__julec_range_begin; goto _iter_begin_4772992848; }
			_iter_end_4772992848:;
		}
	}
	_21713_obj=_21713_obj.slice(0LL,static_cast<jule::Int>(_21713_obj.len() - 1LL));
	return _21713_obj + jule::Str(")", 1);
}



inline jule::Str _11a1c3f00_gen_params_prototypes(jule::Slice<jule::Ref<_119099250_ParamIns>> _23030_params) {
	{
		if (!((_23030_params.len() == 0LL))) { goto _case_end_4773000000; }
		_case_begin_4773000000:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_4772999744;
		_case_end_4773000000:;
		if (!(((_23030_params.len() == 1LL) && _23030_params[static_cast<jule::Int>(0LL)]->_field_decl->_method_is_self()))) { goto _case_end_4773000112; }
		_case_begin_4773000112:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_4772999744;
		_case_end_4773000112:;
		_match_end_4772999744:;
	}
	jule::Str _23913_obj = jule::Str("(", 1);
	{
		auto &__julec_range_expr = _23030_params;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_119099250_ParamIns> _11a1c3f00_p = *__julec_range_begin;
			_iter_begin_4773005696:;
			{
				if ((!(_11a1c3f00_p->_field_decl->_method_is_self()))) {
					_23913_obj+=_11a1c3f00_gen_param_ins_prototype(_11a1c3f00_p) + jule::Str(",", 1);
				}
			}
			_iter_next_4773005696:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a1c3f00_p = *__julec_range_begin; goto _iter_begin_4773005696; }
			_iter_end_4773005696:;
		}
	}
	_23913_obj=_23913_obj.slice(0LL,static_cast<jule::Int>(_23913_obj.len() - 1LL));
	return _23913_obj + jule::Str(")", 1);
}



inline jule::Str _11a1c3f00_gen_trait(jule::Ref<_118e2b060_Trait> _25218_t) {
	
	jule::Str _2549_outid = _11ae60410_trait_out_ident(_25218_t);
	jule::Str _25613_obj = jule::Str("struct ", 7);
	_25613_obj+=_2549_outid;
	_25613_obj+=jule::Str(" {\n", 3);
	_25613_obj+=jule::Str("\t", 1);
	_25613_obj+=jule::Str("virtual ~", 9);
	_25613_obj+=_2549_outid;
	_25613_obj+=jule::Str("(void) {}\n\n", 11);
	{
		auto &__julec_range_expr = _25218_t->_field_methods;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_119099250_Fn> _11a1c3f00_f = *__julec_range_begin;
			_iter_begin_4773018816:;
			{
				_25613_obj+=jule::Str("\t", 1);
				_25613_obj+=jule::Str("virtual ", 8);
				_25613_obj+=_11a1c3f00_gen_fn_result(_11a1c3f00_f);
				_25613_obj+=jule::Str(" _method_", 9);
				_25613_obj+=_11a1c3f00_f->_field_ident;
				_25613_obj+=_11a1c3f00_gen_params(_11a1c3f00_f->_field_params);
				_25613_obj+=jule::Str(" {", 2);
				if ((!(_11a1c3f00_f->_method_is_void()))) {
					_25613_obj+=jule::Str(" return {}; ", 12);
				}
				_25613_obj+=jule::Str("}\n", 2);
			}
			_iter_next_4773018816:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a1c3f00_f = *__julec_range_begin; goto _iter_begin_4773018816; }
			_iter_end_4773018816:;
		}
	}
	_25613_obj+=jule::Str("};", 2);
	return _25613_obj;
}



inline jule::Str _11a1c3f00_gen_traits_tbl(jule::Ref<_11a3c2dc0_SymbolTable> _28123_tbl) {
	jule::Str _28213_obj = jule::Str("", 0);
	jule::Int _28313_i = 0LL;
	_iter_begin_4773029632:;
	if (!(_28313_i < _28123_tbl->_field_traits._method_len())) { goto _iter_end_4773029632; }
	{
		jule::Ref<_118e2b060_Trait> _28517_t = _28123_tbl->_field_traits._method_at(_28313_i);
		_28213_obj+=_11a1c3f00_gen_trait(_28517_t) + jule::Str("\n\n", 2);
	}
	_iter_next_4773029632:;
	(_28313_i)++;
	goto _iter_begin_4773029632;
	_iter_end_4773029632:;
	return _28213_obj;
}



inline jule::Str _11a1c3f00_gen_traits_pkg(jule::Ref<_11a0945e0_Package> _29223_pkg) {
	jule::Str _29313_obj = jule::Str("", 0);
	{
		auto &__julec_range_expr = _29223_pkg->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11a3c2dc0_SymbolTable> _11a1c3f00_tbl = *__julec_range_begin;
			_iter_begin_4773036752:;
			{
				_29313_obj+=_11a1c3f00_gen_traits_tbl(_11a1c3f00_tbl);
			}
			_iter_next_4773036752:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a1c3f00_tbl = *__julec_range_begin; goto _iter_begin_4773036752; }
			_iter_end_4773036752:;
		}
	}
	return _29313_obj;
}



inline jule::Str _11a1c3f00_gen_traits(jule::Ref<_10fee6360_IR> _30119_ir) {
	jule::Str _30213_obj = jule::Str("", 0);
	{
		auto &__julec_range_expr = _30119_ir->_field_used;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11a0945e0_ImportInfo> _11a1c3f00_u = *__julec_range_begin;
			_iter_begin_4773040944:;
			{
				if ((!(_11a1c3f00_u->_field_cpp_linked))) {
					_30213_obj+=_11a1c3f00_gen_traits_pkg(_11a1c3f00_u->_field_package);
				}
			}
			_iter_next_4773040944:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a1c3f00_u = *__julec_range_begin; goto _iter_begin_4773040944; }
			_iter_end_4773040944:;
		}
	}
	_30213_obj+=_11a1c3f00_gen_traits_pkg(_30119_ir->_field_main);
	return _30213_obj;
}



inline jule::Str _11a1c3f00_gen_trait_prototype(jule::Ref<_118e2b060_Trait> _31324_t) {
	return (jule::Str("struct ", 7) + _11ae60410_trait_out_ident(_31324_t)) + jule::Str(";", 1);
}



inline jule::Str _11a1c3f00_gen_trait_prototypes(jule::Ref<_11a0945e0_Package> _31829_p) {
	jule::Str _31913_obj = jule::Str("", 0);
	{
		auto &__julec_range_expr = _31829_p->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11a3c2dc0_SymbolTable> _11a1c3f00_f = *__julec_range_begin;
			_iter_begin_4773049296:;
			{
				jule::Int _32117_i = 0LL;
				_iter_begin_4773050944:;
				if (!(_32117_i < _11a1c3f00_f->_field_traits._method_len())) { goto _iter_end_4773050944; }
				{
					jule::Ref<_118e2b060_Trait> _32317_t = _11a1c3f00_f->_field_traits._method_at(_32117_i);
					if (_32317_t->_field_token._field_id != 0LLU) {
						_31913_obj+=_11a1c3f00_gen_trait_prototype(_32317_t) + jule::Str("\n", 1);
					}
				}
				_iter_next_4773050944:;
				(_32117_i)++;
				goto _iter_begin_4773050944;
				_iter_end_4773050944:;
			}
			_iter_next_4773049296:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a1c3f00_f = *__julec_range_begin; goto _iter_begin_4773049296; }
			_iter_end_4773049296:;
		}
	}
	return _31913_obj;
}



inline jule::Str _11a1c3f00_gen_struct_plain_prototype(jule::Ref<_118bb7d70_Struct> _33331_s) {
	jule::Str _33413_obj = jule::Str("", 0);
	{
		auto &__julec_range_expr = _33331_s->_field_instances;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_118bb7d70_StructIns> _11a1c3f00_ins = *__julec_range_begin;
			_iter_begin_4773059664:;
			{
				_33413_obj+=jule::Str("\nstruct ", 8);
				_33413_obj+=_11ae60410_struct_ins_out_ident(_11a1c3f00_ins);
				_33413_obj+=jule::Str(";", 1);
				_33413_obj+=jule::Str("\n", 1);
			}
			_iter_next_4773059664:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a1c3f00_ins = *__julec_range_begin; goto _iter_begin_4773059664; }
			_iter_end_4773059664:;
		}
	}
	return _33413_obj;
}



inline jule::Str _11a1c3f00_gen_struct_plain_prototypes(jule::Slice<jule::Ref<_118bb7d70_Struct>> _34536_structs) {
	jule::Str _34613_obj = jule::Str("", 0);
	{
		auto &__julec_range_expr = _34536_structs;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_118bb7d70_Struct> _11a1c3f00_s = *__julec_range_begin;
			_iter_begin_4773064576:;
			{
				if ((!(_11a1c3f00_s->_field_cpp_linked)) && (_11a1c3f00_s->_field_token._field_id != 0LLU)) {
					_34613_obj+=_11a1c3f00_gen_struct_plain_prototype(_11a1c3f00_s) + jule::Str("\n", 1);
				}
			}
			_iter_next_4773064576:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a1c3f00_s = *__julec_range_begin; goto _iter_begin_4773064576; }
			_iter_end_4773064576:;
		}
	}
	return _34613_obj;
}



inline jule::Str _11a1c3f00_gen_struct_traits(jule::Ref<_118bb7d70_Struct> _35622_s) {
	if (_35622_s->_field_implements.len() == 0LL) {
		return jule::Str("", 0);
	}
	jule::Str _36113_obj = jule::Str(": ", 2);
	{
		auto &__julec_range_expr = _35622_s->_field_implements;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_118e2b060_Trait> _11a1c3f00_i = *__julec_range_begin;
			_iter_begin_4773072576:;
			{
				_36113_obj+=jule::Str("public ", 7);
				_36113_obj+=_11ae60410_trait_out_ident(_11a1c3f00_i);
				_36113_obj+=jule::Str(",", 1);
			}
			_iter_next_4773072576:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a1c3f00_i = *__julec_range_begin; goto _iter_begin_4773072576; }
			_iter_end_4773072576:;
		}
	}
	_36113_obj=_36113_obj.slice(0LL,static_cast<jule::Int>(_36113_obj.len() - 1LL));
	return _36113_obj;
}



inline jule::Str _11a1c3f00_gen_field_decl(jule::Ref<_118bb7d70_FieldIns> _37223_f) {
	jule::Str _37313_obj = _11a1932e0_gen_type_kind(_37223_f->_field_kind) + jule::Str(" ", 1);
	_37313_obj+=_11ae60410_field_out_ident(_37223_f->_field_decl);
	_37313_obj+=(jule::Str("{", 1) + _11ad8ca40_get_init_expr(_37223_f->_field_kind)) + jule::Str("}", 1);
	_37313_obj+=jule::Str(";", 1);
	return _37313_obj;
}



inline jule::Str _11a1c3f00_gen_struct_self_field_type_kind(jule::Ref<_118bb7d70_StructIns> _38140_s) {
	return _11a1932e0_as_ref_kind(_11a1932e0_gen_struct_kind_ins(_38140_s));
}



inline jule::Str _11a1c3f00_gen_struct_self_field(jule::Ref<_118bb7d70_StructIns> _38630_s) {
	jule::Str _38713_obj = _11a1c3f00_gen_struct_self_field_type_kind(_38630_s);
	_38713_obj+=jule::Str(" self{};", 8);
	return _38713_obj;
}



inline jule::Str _11a1c3f00_gen_struct_self_field_init_st(jule::Ref<_118bb7d70_StructIns> _39238_s) {
	jule::Str _39313_obj = jule::Str("this->self = ", 13);
	_39313_obj+=_11a1c3f00_gen_struct_self_field_type_kind(_39238_s);
	_39313_obj+=jule::Str("::make(this, nullptr);", 22);
	return _39313_obj;
}



inline jule::Str _11a1c3f00_gen_struct_constructor(jule::Ref<_118bb7d70_StructIns> _39931_s) {
	jule::Str _40013_obj = _11ae60410_struct_ins_out_ident(_39931_s);
	_40013_obj+=jule::Str("(", 1);
	if (_39931_s->_field_fields.len() > 0LL) {
		{
			auto &__julec_range_expr = _39931_s->_field_fields;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_118bb7d70_FieldIns> _11a1c3f00_f = *__julec_range_begin;
				_iter_begin_4773094544:;
				{
					_40013_obj+=_11a1932e0_gen_type_kind(_11a1c3f00_f->_field_kind);
					_40013_obj+=(jule::Str(" __param_", 9) + _11a1c3f00_f->_field_decl->_field_ident) + jule::Str(", ", 2);
				}
				_iter_next_4773094544:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _11a1c3f00_f = *__julec_range_begin; goto _iter_begin_4773094544; }
				_iter_end_4773094544:;
			}
		}
		_40013_obj=_40013_obj.slice(0LL,static_cast<jule::Int>(_40013_obj.len() - 2LL));
	} else {
		_40013_obj+=jule::Str("void", 4);
	}
	_40013_obj+=jule::Str(") {\n", 4);
	_11a1c3f00_add_indent();
	_40013_obj+=_11a1c3f00_indent();
	_40013_obj+=_11a1c3f00_gen_struct_self_field_init_st(_39931_s);
	_40013_obj+=jule::Str("\n", 1);
	if (_39931_s->_field_fields.len() > 0LL) {
		{
			auto &__julec_range_expr = _39931_s->_field_fields;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_118bb7d70_FieldIns> _11a1c3f00_f = *__julec_range_begin;
				_iter_begin_4773104912:;
				{
					_40013_obj+=jule::Str("\n", 1);
					_40013_obj+=_11a1c3f00_indent();
					_40013_obj+=jule::Str("this->", 6);
					_40013_obj+=_11ae60410_field_out_ident(_11a1c3f00_f->_field_decl);
					_40013_obj+=jule::Str(" = ", 3);
					_40013_obj+=jule::Str("__param_", 8) + _11a1c3f00_f->_field_decl->_field_ident;
					_40013_obj+=jule::Str(";", 1);
				}
				_iter_next_4773104912:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _11a1c3f00_f = *__julec_range_begin; goto _iter_begin_4773104912; }
				_iter_end_4773104912:;
			}
		}
	}
	_11a1c3f00_done_indent();
	_40013_obj+=(jule::Str("\n", 1) + _11a1c3f00_indent()) + jule::Str("}", 1);
	return _40013_obj;
}



inline jule::Str _11a1c3f00_gen_struct_destructor(jule::Ref<_118bb7d70_StructIns> _43626_s) {
	jule::Str _43713_obj = jule::Str("~", 1);
	_43713_obj+=_11ae60410_struct_ins_out_ident(_43626_s);
	_43713_obj+=jule::Str("(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }", 91);
	return _43713_obj;
}



inline jule::Str _11a1c3f00_gen_struct_operators(jule::Ref<_118bb7d70_StructIns> _44329_s) {
	jule::Str _4449_out_ident = _11ae60410_struct_ins_out_ident(_44329_s);
	jule::Str _44513_obj = jule::Str("", 0);
	_44513_obj+=_11a1c3f00_indent();
	_44513_obj+=jule::Str("inline bool operator==(const ", 29);
	_44513_obj+=_4449_out_ident;
	_44513_obj+=jule::Str(" &_Src) {", 9);
	if (_44329_s->_field_fields.len() > 0LL) {
		_11a1c3f00_add_indent();
		_44513_obj+=jule::Str("\n", 1);
		_44513_obj+=_11a1c3f00_indent();
		_44513_obj+=jule::Str("return ", 7);
		_11a1c3f00_add_indent();
		jule::Int _45717_n = 0LL;
		{
			auto &__julec_range_expr = _44329_s->_field_fields;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_118bb7d70_FieldIns> _11a1c3f00_f = *__julec_range_begin;
				_iter_begin_4775239872:;
				{
					jule::Ref<_118bb7d70_StructIns> _46017_strct = _11a1c3f00_f->_field_kind->_method_strct();
					if ((jule::real(_46017_strct) && jule::real(_46017_strct->_field_decl)) && _46017_strct->_field_decl->_field_cpp_linked) {
						goto _iter_next_4775239872;
					}
					(_45717_n)++;
					_44513_obj+=jule::Str("\n", 1);
					_44513_obj+=_11a1c3f00_indent();
					_44513_obj+=jule::Str("this->", 6);
					jule::Str _46917_f_ident = _11ae60410_field_out_ident(_11a1c3f00_f->_field_decl);
					_44513_obj+=_46917_f_ident;
					_44513_obj+=jule::Str(" == _Src.", 9);
					_44513_obj+=_46917_f_ident;
					_44513_obj+=jule::Str(" &&", 3);
				}
				_iter_next_4775239872:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _11a1c3f00_f = *__julec_range_begin; goto _iter_begin_4775239872; }
				_iter_end_4775239872:;
			}
		}
		_11a1c3f00_done_indent();
		if (_45717_n > 0LL) {
			_44513_obj=_44513_obj.slice(0LL,static_cast<jule::Int>(_44513_obj.len() - 3LL));
		} else {
			_44513_obj+=jule::Str("true", 4);
		}
		_44513_obj+=jule::Str(";\n", 2);
		_11a1c3f00_done_indent();
		_44513_obj+=_11a1c3f00_indent();
		_44513_obj+=jule::Str("}", 1);
	} else {
		_44513_obj+=jule::Str(" return true; }", 15);
	}
	_44513_obj+=jule::Str("\n\n", 2);
	_44513_obj+=_11a1c3f00_indent();
	_44513_obj+=jule::Str("inline bool operator!=(const ", 29);
	_44513_obj+=_4449_out_ident;
	_44513_obj+=jule::Str(" &_Src) { return !this->operator==(_Src); }", 43);
	return _44513_obj;
}



inline jule::Str _11a1c3f00_gen_struct_derive_defs_prototypes(jule::Ref<_118bb7d70_StructIns> _49638_s) {
	jule::Str _49713_obj = jule::Str("", 0);
	if (_49638_s->_field_decl->_method_is_derives(jule::Str("Clone", 5))) {
		_49713_obj+=_11a1c3f00_indent();
		_49713_obj+=_11ae5dd20_get_derive_fn_decl_clone(_49638_s->_field_decl);
		_49713_obj+=jule::Str(";\n\n", 3);
	}
	return _49713_obj;
}



inline jule::Str _11a1c3f00_gen_struct_ins_prototype(jule::Ref<_118bb7d70_StructIns> _50833_s) {
	jule::Str _50913_obj = jule::Str("struct ", 7);
	jule::Str _5109_out_ident = _11ae60410_struct_ins_out_ident(_50833_s);
	_50913_obj+=_5109_out_ident;
	_50913_obj+=_11a1c3f00_gen_struct_traits(_50833_s->_field_decl);
	_50913_obj+=jule::Str(" {\n", 3);
	_11a1c3f00_add_indent();
	_50913_obj+=_11a1c3f00_indent();
	_50913_obj+=_11a1c3f00_gen_struct_self_field(_50833_s);
	_50913_obj+=jule::Str("\n\n", 2);
	if (_50833_s->_field_fields.len() > 0LL) {
		{
			auto &__julec_range_expr = _50833_s->_field_fields;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_118bb7d70_FieldIns> _11a1c3f00_f = *__julec_range_begin;
				_iter_begin_4775273664:;
				{
					_50913_obj+=_11a1c3f00_indent();
					_50913_obj+=_11a1c3f00_gen_field_decl(_11a1c3f00_f);
					_50913_obj+=jule::Str("\n", 1);
				}
				_iter_next_4775273664:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _11a1c3f00_f = *__julec_range_begin; goto _iter_begin_4775273664; }
				_iter_end_4775273664:;
			}
		}
		_50913_obj+=jule::Str("\n\n", 2);
		_50913_obj+=_11a1c3f00_indent();
		_50913_obj+=_11a1c3f00_gen_struct_constructor(_50833_s);
		_50913_obj+=jule::Str("\n\n", 2);
	}
	_50913_obj+=_11a1c3f00_indent();
	_50913_obj+=_11a1c3f00_gen_struct_destructor(_50833_s);
	_50913_obj+=jule::Str("\n\n", 2);
	_50913_obj+=_11a1c3f00_indent();
	_50913_obj+=_5109_out_ident;
	_50913_obj+=jule::Str("(void) { ", 9);
	_50913_obj+=_11a1c3f00_gen_struct_self_field_init_st(_50833_s);
	_50913_obj+=jule::Str(" }\n\n", 4);
	{
		auto &__julec_range_expr = _50833_s->_field_methods;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_119099250_Fn> _11a1c3f00_f = *__julec_range_begin;
			_iter_begin_4775282176:;
			{
				jule::Str _54317_proto = _11a1c3f00_gen_fn_prototype(_11a1c3f00_f,true);
				if (_11a1c3f00_f->_field_statically) {
					_54317_proto=(_11a1c3f00_indent() + jule::Str("static ", 7)) + _54317_proto.trim(jule::Str("\t ", 2));
				}
				_50913_obj+=_54317_proto;
				_50913_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_4775282176:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a1c3f00_f = *__julec_range_begin; goto _iter_begin_4775282176; }
			_iter_end_4775282176:;
		}
	}
	_50913_obj+=_11a1c3f00_gen_struct_derive_defs_prototypes(_50833_s);
	_50913_obj+=_11a1c3f00_gen_struct_operators(_50833_s);
	_50913_obj+=jule::Str("\n", 1);
	_11a1c3f00_done_indent();
	_50913_obj+=_11a1c3f00_indent() + jule::Str("};", 2);
	return _50913_obj;
}



inline jule::Str _11a1c3f00_gen_struct_prototype(jule::Ref<_118bb7d70_Struct> _56229_s) {
	jule::Str _56313_obj = jule::Str("", 0);
	{
		auto &__julec_range_expr = _56229_s->_field_instances;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_118bb7d70_StructIns> _11a1c3f00_ins = *__julec_range_begin;
			_iter_begin_4773630608:;
			{
				_56313_obj+=_11a1c3f00_gen_struct_ins_prototype(_11a1c3f00_ins) + jule::Str("\n\n", 2);
			}
			_iter_next_4773630608:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a1c3f00_ins = *__julec_range_begin; goto _iter_begin_4773630608; }
			_iter_end_4773630608:;
		}
	}
	return _56313_obj;
}



inline jule::Str _11a1c3f00_gen_struct_prototypes(jule::Slice<jule::Ref<_118bb7d70_Struct>> _57130_structs) {
	jule::Str _57213_obj = jule::Str("", 0);
	{
		auto &__julec_range_expr = _57130_structs;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_118bb7d70_Struct> _11a1c3f00_s = *__julec_range_begin;
			_iter_begin_4773636928:;
			{
				if ((!(_11a1c3f00_s->_field_cpp_linked)) && (_11a1c3f00_s->_field_token._field_id != 0LLU)) {
					_57213_obj+=_11a1c3f00_gen_struct_prototype(_11a1c3f00_s) + jule::Str("\n", 1);
				}
			}
			_iter_next_4773636928:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a1c3f00_s = *__julec_range_begin; goto _iter_begin_4773636928; }
			_iter_end_4773636928:;
		}
	}
	return _57213_obj;
}



inline jule::Str _11a1c3f00_gen_fn_decl_head(jule::Ref<_119099250_FnIns> _58125_f,jule::Bool _58136_method) {
	jule::Str _58213_obj = jule::Str("", 0);
	if ((!(_58125_f->_field_decl->_method_is_entry_point()))) {
		_58213_obj+=jule::Str("inline ", 7);
	}
	_58213_obj+=_11a1c3f00_gen_fn_ins_result(_58125_f) + jule::Str(" ", 1);
	if ((!(_58136_method)) && jule::real(_58125_f->_field_decl->_field_owner)) {
		_58213_obj+=_11ae60410_struct_ins_out_ident(_58125_f->_field_owner) + jule::Str("::", 2);
	}
	_58213_obj+=_11ae60410_fn_ins_out_ident(_58125_f);
	return _58213_obj;
}



inline jule::Str _11a1c3f00_gen_fn_prototype(jule::Ref<_119099250_Fn> _59825_f,jule::Bool _59833_method) {
	jule::Str _59913_obj = jule::Str("", 0);
	{
		auto &__julec_range_expr = _59825_f->_field_instances;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_119099250_FnIns> _11a1c3f00_c = *__julec_range_begin;
			_iter_begin_4773653792:;
			{
				_59913_obj+=_11a1c3f00_indent();
				_59913_obj+=_11a1c3f00_gen_fn_decl_head(_11a1c3f00_c,_59833_method);
				_59913_obj+=_11a1c3f00_gen_params_prototypes(_11a1c3f00_c->_field_params);
				_59913_obj+=jule::Str(";\n", 2);
			}
			_iter_next_4773653792:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a1c3f00_c = *__julec_range_begin; goto _iter_begin_4773653792; }
			_iter_end_4773653792:;
		}
	}
	return _59913_obj;
}



inline jule::Str _11a1c3f00_gen_fn_prototypes(jule::Ref<_11a0945e0_Package> _61026_pkg) {
	jule::Str _61113_obj = jule::Str("", 0);
	{
		auto &__julec_range_expr = _61026_pkg->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11a3c2dc0_SymbolTable> _11a1c3f00_file = *__julec_range_begin;
			_iter_begin_4773660144:;
			{
				jule::Int _61317_i = 0LL;
				_iter_begin_4773661792:;
				if (!(_61317_i < _11a1c3f00_file->_field_funcs._method_len())) { goto _iter_end_4773661792; }
				{
					jule::Ref<_119099250_Fn> _61521_f = _11a1c3f00_file->_field_funcs._method_at(_61317_i);
					if ((!(_61521_f->_field_cpp_linked)) && (_61521_f->_field_token._field_id != 0LLU)) {
						_61113_obj+=_11a1c3f00_gen_fn_prototype(_61521_f,false);
					}
				}
				_iter_next_4773661792:;
				(_61317_i)++;
				goto _iter_begin_4773661792;
				_iter_end_4773661792:;
			}
			_iter_next_4773660144:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a1c3f00_file = *__julec_range_begin; goto _iter_begin_4773660144; }
			_iter_end_4773660144:;
		}
	}
	return _61113_obj;
}



inline jule::Str _11a1c3f00_gen_prototypes(jule::Ref<_10fee6360_IR> _62523_ir,jule::Slice<jule::Ref<_118bb7d70_Struct>> _62536_structs) {
	jule::Str _62613_obj = jule::Str("", 0);
	{
		auto &__julec_range_expr = _62523_ir->_field_used;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11a0945e0_ImportInfo> _11a1c3f00_u = *__julec_range_begin;
			_iter_begin_4773671824:;
			{
				if ((!(_11a1c3f00_u->_field_cpp_linked))) {
					_62613_obj+=_11a1c3f00_gen_trait_prototypes(_11a1c3f00_u->_field_package);
				}
			}
			_iter_next_4773671824:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a1c3f00_u = *__julec_range_begin; goto _iter_begin_4773671824; }
			_iter_end_4773671824:;
		}
	}
	_62613_obj+=_11a1c3f00_gen_trait_prototypes(_62523_ir->_field_main);
	_62613_obj+=_11a1c3f00_gen_struct_plain_prototypes(_62536_structs);
	_62613_obj+=_11a1c3f00_gen_traits(_62523_ir) + jule::Str("\n", 1);
	_62613_obj+=_11a1c3f00_gen_struct_prototypes(_62536_structs);
	{
		auto &__julec_range_expr = _62523_ir->_field_used;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11a0945e0_ImportInfo> _11a1c3f00_u = *__julec_range_begin;
			_iter_begin_4773678560:;
			{
				if ((!(_11a1c3f00_u->_field_cpp_linked))) {
					_62613_obj+=_11a1c3f00_gen_fn_prototypes(_11a1c3f00_u->_field_package);
				}
			}
			_iter_next_4773678560:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a1c3f00_u = *__julec_range_begin; goto _iter_begin_4773678560; }
			_iter_end_4773678560:;
		}
	}
	_62613_obj+=_11a1c3f00_gen_fn_prototypes(_62523_ir->_field_main);
	return _62613_obj;
}



inline jule::Str _11a1c3f00_gen_var_init_expr(jule::Ref<_11a245f20_Var> _65326_v,jule::Str _65335_init) {
	jule::Str _65413_obj = jule::Str("", 0);
	if (_65326_v->_field_statically) {
		_65413_obj+=jule::Str("static ", 7);
	}
	_65413_obj+=_11a1932e0_gen_type_kind(_65326_v->_field_kind->_field_kind) + jule::Str(" ", 1);
	if (_65326_v->_field_reference) {
		_65413_obj+=jule::Str("&", 1);
	}
	_65413_obj+=_11ae60410_var_out_ident(_65326_v);
	if (_65335_init != jule::Str("", 0)) {
		_65413_obj+=jule::Str(" = ", 3) + _65335_init;
	}
	_65413_obj+=jule::Str(";", 1);
	return _65413_obj;
}



inline jule::Str _11a1c3f00_gen_var(jule::Ref<_11a245f20_Var> _67216_v) {
	if (_11911a8a0_is_ignore_ident(_67216_v->_field_ident)) {
		return jule::Str("", 0);
	}
	if (_67216_v->_field_constant) {
		return jule::Str("", 0);
	}
	if (jule::real(_67216_v->_field_value) && jule::real(_67216_v->_field_value->_field_expr)) {
		if (_67216_v->_field_value->_field_data->_field_model != nullptr) {
			return _11a1c3f00_gen_var_init_expr(_67216_v,_11ad8ca40_gen_val(_67216_v->_field_value));
		}
		return _11a1c3f00_gen_var_init_expr(_67216_v,jule::Str("", 0));
	}
	return _11a1c3f00_gen_var_init_expr(_67216_v,_11ad8ca40_get_init_expr(_67216_v->_field_kind->_field_kind));
}



inline jule::Str _11a1c3f00_gen_globals(jule::Slice<jule::Ref<_11a245f20_Var>> _69020_globals) {
	jule::Str _69113_obj = jule::Str("", 0);
	{
		auto &__julec_range_expr = _69020_globals;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11a245f20_Var> _11a1c3f00_v = *__julec_range_begin;
			_iter_begin_4773703760:;
			{
				if ((!(_11a1c3f00_v->_field_constant)) && (_11a1c3f00_v->_field_token._field_id != 0LLU)) {
					_69113_obj+=_11a1c3f00_gen_var(_11a1c3f00_v) + jule::Str("\n", 1);
				}
			}
			_iter_next_4773703760:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a1c3f00_v = *__julec_range_begin; goto _iter_begin_4773703760; }
			_iter_end_4773703760:;
		}
	}
	return _69113_obj;
}



inline jule::Str _11a1c3f00_gen_fn(jule::Ref<_119099250_Fn> _70315_f) {
	jule::Str _70413_obj = jule::Str("", 0);
	{
		auto &__julec_range_expr = _70315_f->_field_instances;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_119099250_FnIns> _11a1c3f00_ins = *__julec_range_begin;
			_iter_begin_4773710608:;
			{
				_70413_obj+=_11a1c3f00_gen_fn_decl_head(_11a1c3f00_ins,false);
				_70413_obj+=_11a1c3f00_gen_params_ins(_11a1c3f00_ins->_field_params) + jule::Str(" ", 1);
				_70413_obj+=_11909cfa0_gen_fn_scope(_11a1c3f00_ins);
				_70413_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_4773710608:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a1c3f00_ins = *__julec_range_begin; goto _iter_begin_4773710608; }
			_iter_end_4773710608:;
		}
	}
	return _70413_obj;
}



inline jule::Str _11a1c3f00_gen_pkg_fns(jule::Ref<_11a0945e0_Package> _71520_p) {
	jule::Str _71613_obj = jule::Str("", 0);
	{
		auto &__julec_range_expr = _71520_p->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11a3c2dc0_SymbolTable> _11a1c3f00_f = *__julec_range_begin;
			_iter_begin_4773717632:;
			{
				jule::Int _71817_i = 0LL;
				_iter_begin_4773719280:;
				if (!(_71817_i < _11a1c3f00_f->_field_funcs._method_len())) { goto _iter_end_4773719280; }
				{
					jule::Ref<_119099250_Fn> _72021_f = _11a1c3f00_f->_field_funcs._method_at(_71817_i);
					if ((!(_72021_f->_field_cpp_linked)) && (_72021_f->_field_token._field_id != 0LLU)) {
						_71613_obj+=_11a1c3f00_gen_fn(_72021_f) + jule::Str("\n\n", 2);
					}
				}
				_iter_next_4773719280:;
				(_71817_i)++;
				goto _iter_begin_4773719280;
				_iter_end_4773719280:;
			}
			_iter_next_4773717632:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a1c3f00_f = *__julec_range_begin; goto _iter_begin_4773717632; }
			_iter_end_4773717632:;
		}
	}
	return _71613_obj;
}



inline jule::Str _11a1c3f00_gen_struct_method_defs(jule::Ref<_118bb7d70_StructIns> _73031_s) {
	jule::Str _73113_obj = jule::Str("", 0);
	{
		auto &__julec_range_expr = _73031_s->_field_methods;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_119099250_Fn> _11a1c3f00_f = *__julec_range_begin;
			_iter_begin_4773728624:;
			{
				_73113_obj+=_11a1c3f00_indent();
				_73113_obj+=_11a1c3f00_gen_fn(_11a1c3f00_f);
				_73113_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_4773728624:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a1c3f00_f = *__julec_range_begin; goto _iter_begin_4773728624; }
			_iter_end_4773728624:;
		}
	}
	return _73113_obj;
}



inline jule::Str _11a1c3f00_gen_struct_ostream(jule::Ref<_118bb7d70_StructIns> _74127_s) {
	jule::Str _74213_obj = jule::Str("", 0);
	_74213_obj+=_11a1c3f00_indent();
	_74213_obj+=jule::Str("std::ostream &operator<<(std::ostream &_Stream, const ", 54);
	_74213_obj+=_11ae60410_struct_ins_out_ident(_74127_s);
	_74213_obj+=jule::Str(" &_Src) {\n", 10);
	_11a1c3f00_add_indent();
	_74213_obj+=_11a1c3f00_indent();
	_74213_obj+=jule::Str("_Stream << \"", 12);
	_74213_obj+=_74127_s->_field_decl->_field_ident;
	_74213_obj+=jule::Str("{\";\n", 4);
	{
		auto &__julec_range_expr = _74127_s->_field_fields;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _11a1c3f00_i = 0;
			jule::Ref<_118bb7d70_FieldIns> _11a1c3f00_f = *__julec_range_begin;
			_iter_begin_4773740544:;
			{
				_74213_obj+=_11a1c3f00_indent();
				_74213_obj+=jule::Str("_Stream << \"", 12);
				_74213_obj+=_11a1c3f00_f->_field_decl->_field_ident;
				_74213_obj+=jule::Str(":", 1);
				jule::Ref<_118bb7d70_StructIns> _76013_strct = _11a1c3f00_f->_field_kind->_method_strct();
				if ((jule::real(_76013_strct) && jule::real(_76013_strct->_field_decl)) && _76013_strct->_field_decl->_field_cpp_linked) {
					_74213_obj+=(jule::Str(" cpp.", 5) + _11ae60410_field_out_ident(_11a1c3f00_f->_field_decl)) + jule::Str("\"", 1);
				} else {
					_74213_obj+=jule::Str("\" << _Src.", 10);
					_74213_obj+=_11ae60410_field_out_ident(_11a1c3f00_f->_field_decl);
				}
				if ((_11a1c3f00_i + 1LL) < _74127_s->_field_fields.len()) {
					_74213_obj+=jule::Str(" << \", \"", 8);
				}
				_74213_obj+=jule::Str(";\n", 2);
			}
			_iter_next_4773740544:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_11a1c3f00_i; _11a1c3f00_f = *__julec_range_begin; goto _iter_begin_4773740544; }
			_iter_end_4773740544:;
		}
	}
	_74213_obj+=_11a1c3f00_indent();
	_74213_obj+=jule::Str("_Stream << \"}\";\n", 16);
	_74213_obj+=_11a1c3f00_indent();
	_74213_obj+=jule::Str("return _Stream;\n", 16);
	_11a1c3f00_done_indent();
	_74213_obj+=_11a1c3f00_indent();
	_74213_obj+=jule::Str("}", 1);
	return _74213_obj;
}



inline jule::Str _11a1c3f00_gen_struct_derive_defs(jule::Ref<_118bb7d70_StructIns> _78331_s) {
	jule::Str _78413_obj = jule::Str("", 0);
	if (_78331_s->_field_decl->_method_is_derives(jule::Str("Clone", 5))) {
		_78413_obj+=_11a1c3f00_indent();
		_78413_obj+=_11ae5dd20_get_derive_fn_def_clone(_78331_s->_field_decl);
		_78413_obj+=jule::Str("{\n", 2);
		_11a1c3f00_add_indent();
		_78413_obj+=_11a1c3f00_indent();
		_78413_obj+=_11a1932e0_gen_struct_kind_ins(_78331_s);
		_78413_obj+=jule::Str(" clone;\n", 8);
		{
			auto &__julec_range_expr = _78331_s->_field_fields;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_118bb7d70_FieldIns> _11a1c3f00_f = *__julec_range_begin;
				_iter_begin_4773765504:;
				{
					jule::Str _79517_ident = _11ae60410_field_out_ident(_11a1c3f00_f->_field_decl);
					_78413_obj+=_11a1c3f00_indent();
					_78413_obj+=jule::Str("clone.", 6);
					_78413_obj+=_79517_ident;
					_78413_obj+=jule::Str(" = jule::clone(this->", 21);
					_78413_obj+=_79517_ident;
					_78413_obj+=jule::Str(");\n", 3);
				}
				_iter_next_4773765504:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _11a1c3f00_f = *__julec_range_begin; goto _iter_begin_4773765504; }
				_iter_end_4773765504:;
			}
		}
		_78413_obj+=_11a1c3f00_indent();
		_78413_obj+=jule::Str("return clone;\n", 14);
		_11a1c3f00_done_indent();
		_78413_obj+=_11a1c3f00_indent();
		_78413_obj+=jule::Str("}", 1);
	}
	return _78413_obj;
}



inline jule::Str _11a1c3f00_gen_struct_ins(jule::Ref<_118bb7d70_StructIns> _81523_s) {
	jule::Str _81613_obj = _11a1c3f00_gen_struct_method_defs(_81523_s);
	_81613_obj+=jule::Str("\n\n", 2);
	_81613_obj+=_11a1c3f00_gen_struct_derive_defs(_81523_s);
	_81613_obj+=jule::Str("\n\n", 2);
	_81613_obj+=_11a1c3f00_gen_struct_ostream(_81523_s);
	return _81613_obj;
}



inline jule::Str _11a1c3f00_gen_struct(jule::Ref<_118bb7d70_Struct> _82519_s) {
	jule::Str _82613_obj = jule::Str("", 0);
	{
		auto &__julec_range_expr = _82519_s->_field_instances;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_118bb7d70_StructIns> _11a1c3f00_ins = *__julec_range_begin;
			_iter_begin_4773780352:;
			{
				_82613_obj+=_11a1c3f00_gen_struct_ins(_11a1c3f00_ins) + jule::Str("\n\n", 2);
			}
			_iter_next_4773780352:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a1c3f00_ins = *__julec_range_begin; goto _iter_begin_4773780352; }
			_iter_end_4773780352:;
		}
	}
	return _82613_obj;
}



inline jule::Str _11a1c3f00_gen_structs(jule::Slice<jule::Ref<_118bb7d70_Struct>> _83420_structs) {
	jule::Str _83513_obj = jule::Str("", 0);
	{
		auto &__julec_range_expr = _83420_structs;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_118bb7d70_Struct> _11a1c3f00_s = *__julec_range_begin;
			_iter_begin_4773784208:;
			{
				if ((!(_11a1c3f00_s->_field_cpp_linked)) && (_11a1c3f00_s->_field_token._field_id != 0LLU)) {
					_83513_obj+=_11a1c3f00_gen_struct(_11a1c3f00_s);
					_83513_obj+=jule::Str("\n\n", 2);
				}
			}
			_iter_next_4773784208:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a1c3f00_s = *__julec_range_begin; goto _iter_begin_4773784208; }
			_iter_end_4773784208:;
		}
	}
	return _83513_obj;
}



inline jule::Str _11a1c3f00_gen_fns(jule::Ref<_10fee6360_IR> _84616_ir) {
	jule::Str _84713_obj = jule::Str("", 0);
	{
		auto &__julec_range_expr = _84616_ir->_field_used;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11a0945e0_ImportInfo> _11a1c3f00_u = *__julec_range_begin;
			_iter_begin_4773791184:;
			{
				if ((!(_11a1c3f00_u->_field_cpp_linked))) {
					_84713_obj+=_11a1c3f00_gen_pkg_fns(_11a1c3f00_u->_field_package);
				}
			}
			_iter_next_4773791184:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a1c3f00_u = *__julec_range_begin; goto _iter_begin_4773791184; }
			_iter_end_4773791184:;
		}
	}
	_84713_obj+=_11a1c3f00_gen_pkg_fns(_84616_ir->_field_main);
	return _84713_obj;
}



inline void _11a1c3f00_push_init(jule::Ref<_11a0945e0_Package> _85918_pkg,jule::Str& _85938_obj) {
	
	
	jule::Ref<_119099250_Fn> _8639_f = _85918_pkg->_method_find_fn(jule::Str("init", 4),false);
	if ((!(jule::real(_8639_f)))) {
		return;
	}
	_85938_obj+=(jule::Str("\n\t", 2) + _11ae60410_fn_out_ident(_8639_f)) + jule::Str("();", 3);
}



inline jule::Str _11a1c3f00_gen_init_caller(jule::Ref<_10fee6360_IR> _87224_ir) {
	jule::Str _87313_obj = jule::Str("void ", 5);
	_87313_obj+=jule::Str("__jule_call_initializers", 24);
	_87313_obj+=jule::Str("(void) {", 8);
	{
		auto &__julec_range_expr = _87224_ir->_field_used;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11a0945e0_ImportInfo> _11a1c3f00_u = *__julec_range_begin;
			_iter_begin_4773806816:;
			{
				if ((!(_11a1c3f00_u->_field_cpp_linked))) {
					_11a1c3f00_push_init(_11a1c3f00_u->_field_package,_87313_obj);
				}
			}
			_iter_next_4773806816:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a1c3f00_u = *__julec_range_begin; goto _iter_begin_4773806816; }
			_iter_end_4773806816:;
		}
	}
	_11a1c3f00_push_init(_87224_ir->_field_main,_87313_obj);
	_87313_obj+=jule::Str("\n}", 2);
	return _87313_obj;
}



inline void _11a1c3f00_append_standard(jule::Str& _88829_obj_code,jule::Str _88844_compiler,jule::Str _88859_compiler_cmd) {
	struct JuleCompileTime _8899_time = time_now();
	jule::Str _89113_time_str = jule::Str("", 0);
	_89113_time_str+=_10ff65780_itoa(_8899_time.day);
	_89113_time_str+=jule::Str("/", 1);
	_89113_time_str+=_10ff65780_itoa(_8899_time.month);
	_89113_time_str+=jule::Str("/", 1);
	_89113_time_str+=_10ff65780_itoa(_8899_time.year);
	_89113_time_str+=jule::Str(" ", 1);
	_89113_time_str+=_10ff65780_itoa(_8899_time.hour);
	_89113_time_str+=jule::Str(".", 1);
	_89113_time_str+=_10ff65780_itoa(_8899_time.minute);
	_89113_time_str+=jule::Str(" (DD/MM/YYYY) (HH.MM)", 21);
	jule::Str _90313_s = jule::Str("", 0);
	_90313_s+=jule::Str("// Auto generated by JuleC.\n", 28);
	_90313_s+=jule::Str("// JuleC version: ", 18);
	_90313_s+=jule::Str("beta 0.0.3 @master", 18);
	_90313_s+=jule::Str("\n", 1);
	_90313_s+=jule::Str("// Date: ", 9);
	_90313_s+=_89113_time_str;
	_90313_s+=jule::Str("\n//\n// Recommended Compile Command;\n// ", 39);
	_90313_s+=_88844_compiler;
	_90313_s+=jule::Str(" ", 1);
	_90313_s+=_88859_compiler_cmd;
	_90313_s+=jule::Str("\n\n#include \"", 12);
	_90313_s+=_1410197f0_PATH_API;
	_90313_s+=jule::Str("\"\n\n", 3);
	_90313_s+=_88829_obj_code;
	_90313_s+=jule::Str("\nint main(int argc, char *argv[], char *envp[]) {\n\tstd::set_terminate(&jule::terminate_handler);\n\tjule::set_sig_handler(jule::signal_handler);\n\tjule::setup_command_line_args(argc, argv);\n\tjule::setup_environment_variables(envp);\n\n\t__jule_call_initializers();\n\tentry_point();\n\n\treturn EXIT_SUCCESS;\n}", 299);
	_88829_obj_code=_90313_s;
}



inline jule::Str _11a1c3f00_gen(jule::Ref<_10fee6360_IR> _93716_ir) {
	jule::Ref<_11a1c3f00_OrderedDecls> _93813_od = jule::new_struct<_11a1c3f00_OrderedDecls>(new( std::nothrow ) _11a1c3f00_OrderedDecls());
	_93813_od->_field_structs=_93716_ir->_method_get_all_structures();
	_11a1c4520_order_structures(_93813_od->_field_structs);
	_93813_od->_field_globals=_93716_ir->_method_get_all_variables();
	_11a1c4520_order_variables(_93813_od->_field_globals);
	jule::Str _94513_obj = jule::Str("", 0);
	_94513_obj+=_11a1c3f00_gen_links(_93716_ir) + jule::Str("\n", 1);
	_94513_obj+=_11a1c3f00_gen_prototypes(_93716_ir,_93813_od->_field_structs) + jule::Str("\n\n", 2);
	_94513_obj+=_11a1c3f00_gen_globals(_93813_od->_field_globals) + jule::Str("\n", 1);
	_94513_obj+=_11a1c3f00_gen_structs(_93813_od->_field_structs);
	_94513_obj+=_11a1c3f00_gen_fns(_93716_ir) + jule::Str("\n", 1);
	_94513_obj+=_11a1c3f00_gen_init_caller(_93716_ir) + jule::Str("\n", 1);
	return _94513_obj;
}



inline jule::Bool _11a1c4520_is_struct_ordered(jule::Slice<jule::Ref<_118bb7d70_Struct>> _822_structs,jule::Ref<_118bb7d70_Struct> _842_s) {
	{
		auto &__julec_range_expr = _842_s->_field_depends;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_118bb7d70_Struct> _11a1c4520_d = *__julec_range_begin;
			_iter_begin_4766990320:;
			{
				{
					auto &__julec_range_expr = _822_structs;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Ref<_118bb7d70_Struct> _11a1c4520_ss = *__julec_range_begin;
						_iter_begin_4770583824:;
						{
							if ((_11a1c4520_ss).alloc == (_842_s).alloc) {
								return false;
							} else if ((_11a1c4520_ss).alloc == (_11a1c4520_d).alloc) {
								goto _iter_end_4770583824;
							}
						}
						_iter_next_4770583824:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { _11a1c4520_ss = *__julec_range_begin; goto _iter_begin_4770583824; }
						_iter_end_4770583824:;
					}
				}
			}
			_iter_next_4766990320:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a1c4520_d = *__julec_range_begin; goto _iter_begin_4766990320; }
			_iter_end_4766990320:;
		}
	}
	return true;
}



inline void _11a1c4520_order_structures(jule::Slice<jule::Ref<_118bb7d70_Struct>> _2425_structs) {
	jule::I64 _259_n = _2425_structs.len();
	jule::Int _2613_i = 0LL;
	_iter_begin_4770586976:;
	if (!(_2613_i < _259_n)) { goto _iter_end_4770586976; }
	{
		jule::Bool _2817_swapped = false;
		jule::Int _3017_j = 0LL;
		_iter_begin_4770589984:;
		if (!(_3017_j < ((_259_n - _2613_i) - 1LL))) { goto _iter_end_4770589984; }
		{
			if (_2425_structs[static_cast<jule::Int>(_3017_j)]->_field_depends.len() > 1LL) {
				std::tie(_2425_structs[static_cast<jule::Int>(_3017_j)],_2425_structs[static_cast<jule::Int>(_3017_j + 1LL)]) = std::make_tuple(_2425_structs[static_cast<jule::Int>(_3017_j + 1LL)],_2425_structs[static_cast<jule::Int>(_3017_j)]);
				_2817_swapped=true;
			}
		}
		_iter_next_4770589984:;
		(_3017_j)++;
		goto _iter_begin_4770589984;
		_iter_end_4770589984:;
		if ((!(_2817_swapped))) {
			goto _iter_end_4770586976;
		}
	}
	_iter_next_4770586976:;
	(_2613_i)++;
	goto _iter_begin_4770586976;
	_iter_end_4770586976:;
	_2613_i=0LL;
	_iter_begin_4770590176:;
	if (!(_2613_i < _259_n)) { goto _iter_end_4770590176; }
	{
		jule::Bool _4517_swapped = false;
		jule::Int _4717_j = 0LL;
		_iter_begin_4770602352:;
		if (!(_4717_j < ((_259_n - _2613_i) - 1LL))) { goto _iter_end_4770602352; }
		{
			if ((!(_11a1c4520_is_struct_ordered(_2425_structs,_2425_structs[static_cast<jule::Int>(_4717_j)])))) {
				std::tie(_2425_structs[static_cast<jule::Int>(_4717_j)],_2425_structs[static_cast<jule::Int>(_4717_j + 1LL)]) = std::make_tuple(_2425_structs[static_cast<jule::Int>(_4717_j + 1LL)],_2425_structs[static_cast<jule::Int>(_4717_j)]);
				_4517_swapped=true;
			}
		}
		_iter_next_4770602352:;
		(_4717_j)++;
		goto _iter_begin_4770602352;
		_iter_end_4770602352:;
		if ((!(_4517_swapped))) {
			goto _iter_end_4770590176;
		}
	}
	_iter_next_4770590176:;
	(_2613_i)++;
	goto _iter_begin_4770590176;
	_iter_end_4770590176:;
}



inline jule::Bool _11a1c4520_is_var_ordered(jule::Slice<jule::Ref<_11a245f20_Var>> _6219_vars,jule::Ref<_11a245f20_Var> _6233_v) {
	{
		auto &__julec_range_expr = _6233_v->_field_depends;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11a245f20_Var> _11a1c4520_d = *__julec_range_begin;
			_iter_begin_4770612784:;
			{
				{
					auto &__julec_range_expr = _6219_vars;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Ref<_11a245f20_Var> _11a1c4520_vv = *__julec_range_begin;
						_iter_begin_4770614208:;
						{
							if ((_11a1c4520_vv).alloc == (_6233_v).alloc) {
								return false;
							} else if ((_11a1c4520_vv).alloc == (_11a1c4520_d).alloc) {
								goto _iter_end_4770614208;
							}
						}
						_iter_next_4770614208:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { _11a1c4520_vv = *__julec_range_begin; goto _iter_begin_4770614208; }
						_iter_end_4770614208:;
					}
				}
			}
			_iter_next_4770612784:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11a1c4520_d = *__julec_range_begin; goto _iter_begin_4770612784; }
			_iter_end_4770612784:;
		}
	}
	return true;
}



inline void _11a1c4520_order_variables(jule::Slice<jule::Ref<_11a245f20_Var>> _7824_vars) {
	jule::I64 _799_n = _7824_vars.len();
	jule::Int _8013_i = 0LL;
	_iter_begin_4770620144:;
	if (!(_8013_i < _799_n)) { goto _iter_end_4770620144; }
	{
		jule::Bool _8217_swapped = false;
		jule::Int _8417_j = 0LL;
		_iter_begin_4770623152:;
		if (!(_8417_j < ((_799_n - _8013_i) - 1LL))) { goto _iter_end_4770623152; }
		{
			if ((!(_11a1c4520_is_var_ordered(_7824_vars,_7824_vars[static_cast<jule::Int>(_8417_j)])))) {
				std::tie(_7824_vars[static_cast<jule::Int>(_8417_j)],_7824_vars[static_cast<jule::Int>(_8417_j + 1LL)]) = std::make_tuple(_7824_vars[static_cast<jule::Int>(_8417_j + 1LL)],_7824_vars[static_cast<jule::Int>(_8417_j)]);
				_8217_swapped=true;
			}
		}
		_iter_next_4770623152:;
		(_8417_j)++;
		goto _iter_begin_4770623152;
		_iter_end_4770623152:;
		if ((!(_8217_swapped))) {
			goto _iter_end_4770620144;
		}
	}
	_iter_next_4770620144:;
	(_8013_i)++;
	goto _iter_begin_4770620144;
	_iter_end_4770620144:;
}



inline jule::Str _141006360_str_repeat(jule::Str _2515_sub,jule::Int _2529_n) {
	if (_2529_n == 0LL) {
		return jule::Str("", 0);
	}
	jule::Str _3013_s = jule::Str("", 0);
	_iter_begin_4770727856:;
	if (!(_2529_n > 0LL)) { goto _iter_end_4770727856; }
	{
		_3013_s+=_2515_sub;
	}
	_iter_next_4770727856:;
	(_2529_n)--;
	goto _iter_begin_4770727856;
	_iter_end_4770727856:;
	return _3013_s;
}



inline void _141006360_print_error_message(jule::Str _3724_msg) {
	jule::outln(_3724_msg);
}



inline void _141006360_help(void) {
	if (_14107c570_ARGS.len() > 2LL) {
		_141006360_print_error_message(jule::Str("invalid command: ", 17) + _14107c570_ARGS[static_cast<jule::Int>(2LL)]);
		return;
	}
	jule::I64 _4513_max = _141006360_HELP_MAP[static_cast<jule::Int>(0LL)][static_cast<jule::Int>(0LL)].len();
	{
		auto &__julec_range_expr = _141006360_HELP_MAP;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Array<jule::Str,2> _141006360_k = *__julec_range_begin;
			_iter_begin_4770738016:;
			{
				jule::I64 _4713_n = _141006360_k[static_cast<jule::Int>(0LL)].len();
				if (_4713_n > _4513_max) {
					_4513_max=_4713_n;
				}
			}
			_iter_next_4770738016:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _141006360_k = *__julec_range_begin; goto _iter_begin_4770738016; }
			_iter_end_4770738016:;
		}
	}
	jule::Str _5313_s = jule::Str("", 0);
	
	{
		auto &__julec_range_expr = _141006360_HELP_MAP;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _141006360_i = 0;
			jule::Array<jule::Str,2> _141006360_part = *__julec_range_begin;
			_iter_begin_4770744160:;
			{
				_5313_s+=_141006360_part[static_cast<jule::Int>(0LL)];
				_5313_s+=_141006360_str_repeat(jule::Str(" ", 1),(_4513_max - _141006360_part[static_cast<jule::Int>(0LL)].len()) + 5LL);
				_5313_s+=_141006360_part[static_cast<jule::Int>(1LL)];
				if ((_141006360_i + 1LL) < 3LL) {
					_5313_s+=jule::Str("\n", 1);
				}
			}
			_iter_next_4770744160:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_141006360_i; _141006360_part = *__julec_range_begin; goto _iter_begin_4770744160; }
			_iter_end_4770744160:;
		}
	}
	jule::outln(_5313_s);
}



inline void _141006360_version(void) {
	if (_14107c570_ARGS.len() > 2LL) {
		_141006360_print_error_message(jule::Str("invalid command: ", 17) + _14107c570_ARGS[static_cast<jule::Int>(2LL)]);
		return;
	}
	jule::out(jule::Str("julec version ", 14));
	jule::outln(jule::Str("beta 0.0.3 @master", 18));
}



inline void _141006360_tool_distos(void) {
	jule::out(jule::Str("supported operating systems:\n ", 30));
	{
		auto &__julec_range_expr = _1410149e0_DISTOS;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _141006360_os = *__julec_range_begin;
			_iter_begin_4770758656:;
			{
				jule::out(_141006360_os);
				jule::out(jule::Str(" ", 1));
			}
			_iter_next_4770758656:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _141006360_os = *__julec_range_begin; goto _iter_begin_4770758656; }
			_iter_end_4770758656:;
		}
	}
	jule::outln(jule::Str("", 0));
}



inline void _141006360_tool_distarch(void) {
	jule::out(jule::Str("supported architects:\n ", 23));
	{
		auto &__julec_range_expr = _1410149e0_DISTARCH;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _141006360_arch = *__julec_range_begin;
			_iter_begin_4770762560:;
			{
				jule::out(_141006360_arch);
				jule::out(jule::Str(" ", 1));
			}
			_iter_next_4770762560:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _141006360_arch = *__julec_range_begin; goto _iter_begin_4770762560; }
			_iter_end_4770762560:;
		}
	}
	jule::outln(jule::Str("", 0));
}



inline void _141006360_tool(void) {
	if (_14107c570_ARGS.len() == 2LL) {
		jule::outln(jule::Str("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;
	} else if (_14107c570_ARGS.len() > 3LL) {
		_141006360_print_error_message(jule::Str("invalid command: ", 17) + _14107c570_ARGS[static_cast<jule::Int>(3LL)]);
		return;
	}
	jule::Str _1049_cmd = _14107c570_ARGS[static_cast<jule::Int>(2LL)];
	{
		auto &_match_expr{ _1049_cmd };
		if (!((jule::Str("distos", 6)) == _match_expr)) { goto _case_end_4770774688; }
		_case_begin_4770774688:;
		{
			_141006360_tool_distos();
		}
		goto _match_end_4770769104;
		_case_end_4770774688:;
		if (!((jule::Str("distarch", 8)) == _match_expr)) { goto _case_end_4770774112; }
		_case_begin_4770774112:;
		{
			_141006360_tool_distarch();
		}
		goto _match_end_4770769104;
		_case_end_4770774112:;
		_case_begin_4770773040:;
		{
			_141006360_print_error_message(jule::Str("Undefined command: ", 19) + _1049_cmd);
		}
		goto _match_end_4770769104;
		_case_end_4770773040:;
		_match_end_4770769104:;
	}
}



inline jule::Bool _141006360_process_command(void) {
	{
		auto &_match_expr{ _14107c570_ARGS[static_cast<jule::Int>(1LL)] };
		if (!((jule::Str("help", 4)) == _match_expr)) { goto _case_end_4770779264; }
		_case_begin_4770779264:;
		{
			_141006360_help();
		}
		goto _match_end_4770777264;
		_case_end_4770779264:;
		if (!((jule::Str("version", 7)) == _match_expr)) { goto _case_end_4770779376; }
		_case_begin_4770779376:;
		{
			_141006360_version();
		}
		goto _match_end_4770777264;
		_case_end_4770779376:;
		if (!((jule::Str("tool", 4)) == _match_expr)) { goto _case_end_4770780240; }
		_case_begin_4770780240:;
		{
			_141006360_tool();
		}
		goto _match_end_4770777264;
		_case_end_4770780240:;
		_case_begin_4770776816:;
		{
			return false;
		}
		goto _match_end_4770777264;
		_case_end_4770776816:;
		_match_end_4770777264:;
	}
	return true;
}



inline void _141006360_init(void) {
	if (false) {
		_13fe1e4a0_COMPILER=jule::Str("gcc", 3);
		_13fe1e4a0_COMPILER_PATH=jule::Str("g++", 3);
	} else {
		_13fe1e4a0_COMPILER=jule::Str("clang", 5);
		_13fe1e4a0_COMPILER_PATH=jule::Str("clang++", 7);
	}
}



inline void _141006360_exit_err(jule::Str _13413_msg) {
	jule::outln(_13413_msg);
	_118e57f00_exit(1LL);
}



void entry_point(void) {
	if (_14107c570_ARGS.len() < 2LL) {
		_118e57f00_exit(0LL);
	}
	if (_141006360_process_command()) {
		return;
	}
	_13fe1e4a0_compile_command();
}



inline std::tuple<jule::Str,jule::Str> _13fe1e4a0_get_option(jule::Slice<jule::Str> _6215_args,jule::Int& _6233_i) {
	jule::Str _6253_content = jule::Str();
	jule::Str _6243_arg = jule::Str();
	_iter_begin_4770794896:;
	if (!(_6233_i < _6215_args.len())) { goto _iter_end_4770794896; }
	{
		_6243_arg=_6215_args[static_cast<jule::Int>(_6233_i)];
		jule::Int _6517_j = 0LL;
		jule::Slice<jule::I32> _6617_runes = static_cast<jule::Slice<jule::I32>>(_6243_arg);
		jule::I32 _6717_r = _6617_runes[static_cast<jule::Int>(_6517_j)];
		if (_6717_r != '-') {
			_6253_content+=_6243_arg;
			_6243_arg=jule::Str("", 0);
			goto _iter_next_4770794896;
		}
		(_6517_j)++;
		if (_6517_j >= _6617_runes.len()) {
			_141006360_exit_err(jule::Str("undefined syntax: ", 18) + _6243_arg);
		}
		_6717_r=_6617_runes[static_cast<jule::Int>(_6517_j)];
		if (_6717_r == '-') {
			(_6517_j)++;
			if (_6517_j >= _6617_runes.len()) {
				_141006360_exit_err(jule::Str("undefined syntax: ", 18) + _6243_arg);
			}
			_6717_r=_6617_runes[static_cast<jule::Int>(_6517_j)];
		}
		if ((!(_11911a8a0_is_ident_rune(static_cast<jule::Str>(_6717_r))))) {
			_141006360_exit_err(jule::Str("undefined syntax: ", 18) + _6243_arg);
		}
		(_6517_j)++;
		_iter_begin_4770807600:;
		if (!(_6517_j < _6617_runes.len())) { goto _iter_end_4770807600; }
		{
			_6717_r=_6617_runes[static_cast<jule::Int>(_6517_j)];
			if (((((!(_11911a8a0_is_space(_6717_r))) && (!(_11911a8a0_is_letter(_6717_r)))) && (!(_11911a8a0_is_decimal(static_cast<jule::U8>(_6717_r))))) && (_6717_r != '_')) && (_6717_r != '-')) {
				_141006360_exit_err(jule::Str("undefined syntax: ", 18) + static_cast<jule::Str>(_6617_runes.slice(static_cast<jule::Int>(_6517_j))));
			}
		}
		_iter_next_4770807600:;
		(_6517_j)++;
		goto _iter_begin_4770807600;
		_iter_end_4770807600:;
		goto _iter_end_4770794896;
	}
	_iter_next_4770794896:;
	(_6233_i)++;
	goto _iter_begin_4770794896;
	_iter_end_4770794896:;
	return std::make_tuple(_6243_arg,_6253_content);
}



inline jule::Str _13fe1e4a0_get_option_value(jule::Slice<jule::Str> _10621_args,jule::Int& _10639_i) {
	(_10639_i)++;
	if (_10639_i < _10621_args.len()) {
		jule::Str _10913_arg = _10621_args[static_cast<jule::Int>(_10639_i)];
		return _10913_arg;
	}
	return jule::Str("", 0);
}



inline void _13fe1e4a0_parse_out_option(jule::Slice<jule::Str> _11521_args,jule::Int& _11539_i) {
	jule::Str _1169_value = _13fe1e4a0_get_option_value(_11521_args,_11539_i);
	if (_1169_value == jule::Str("", 0)) {
		_141006360_exit_err(jule::Str("missing option value: -o --out", 30));
	}
	_13fe1e4a0_OUT=_1169_value;
}



inline void _13fe1e4a0_parse_opt_option(jule::Slice<jule::Str> _12321_args,jule::Int& _12339_i) {
	jule::Str _1249_value = _13fe1e4a0_get_option_value(_12321_args,_12339_i);
	if (_1249_value == jule::Str("", 0)) {
		_141006360_exit_err(jule::Str("missing option value: --opt", 27));
	}
	{
		auto &_match_expr{ _1249_value };
		if (!((jule::Str("L0", 2)) == _match_expr)) { goto _case_end_4770838240; }
		_case_begin_4770838240:;
		{
			_119083710_push_opt_level(0LLU);
		}
		goto _match_end_4770837648;
		_case_end_4770838240:;
		if (!((jule::Str("L1", 2)) == _match_expr)) { goto _case_end_4770838352; }
		_case_begin_4770838352:;
		{
			_119083710_push_opt_level(1LLU);
		}
		goto _match_end_4770837648;
		_case_end_4770838352:;
		_case_begin_4770835552:;
		{
			_141006360_exit_err(jule::Str("invalid optimization level: ", 28) + _1249_value);
		}
		goto _match_end_4770837648;
		_case_end_4770835552:;
		_match_end_4770837648:;
	}
}



inline void _13fe1e4a0_check_target_arch(jule::Str _13622_arch) {
	{
		auto &__julec_range_expr = _1410149e0_DISTARCH;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _13fe1e4a0_distarch = *__julec_range_begin;
			_iter_begin_4770842432:;
			{
				if (_13622_arch == _13fe1e4a0_distarch) {
					return;
				}
			}
			_iter_next_4770842432:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _13fe1e4a0_distarch = *__julec_range_begin; goto _iter_begin_4770842432; }
			_iter_end_4770842432:;
		}
	}
	_141006360_exit_err(jule::Str("unsupported/undefined architecture: ", 36) + _13622_arch);
}



inline void _13fe1e4a0_check_target_os(jule::Str _14620_os) {
	{
		auto &__julec_range_expr = _1410149e0_DISTOS;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _13fe1e4a0_distos = *__julec_range_begin;
			_iter_begin_4770839856:;
			{
				if (_14620_os == _13fe1e4a0_distos) {
					return;
				}
			}
			_iter_next_4770839856:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _13fe1e4a0_distos = *__julec_range_begin; goto _iter_begin_4770839856; }
			_iter_end_4770839856:;
		}
	}
	_141006360_exit_err(jule::Str("unsupported/undefined operating system: ", 40) + _14620_os);
}



inline void _13fe1e4a0_parse_target_option(jule::Slice<jule::Str> _15624_args,jule::Int& _15642_i) {
	jule::Str _1579_value = _13fe1e4a0_get_option_value(_15624_args,_15642_i);
	if (_1579_value == jule::Str("", 0)) {
		_141006360_exit_err(jule::Str("missing option value: --target", 30));
	}
	jule::Slice<jule::Str> _1629_parts = _1579_value.split(jule::Str("-", 1),-1LL);
	if (_1629_parts.len() != 2LL) {
		_141006360_exit_err(jule::Str("undefined platform target format: ", 34) + _1579_value);
	}
	jule::Str _16710_os = _1629_parts[static_cast<jule::Int>(0LL)];
	jule::Str _16714_arch = _1629_parts[static_cast<jule::Int>(1LL)];
	std::tie(_16710_os,_16714_arch) = std::make_tuple(_1629_parts[static_cast<jule::Int>(0LL)],_1629_parts[static_cast<jule::Int>(1LL)]);
	if (_16710_os != jule::Str("native", 6)) {
		_13fe1e4a0_check_target_os(_16710_os);
		_1410197f0_OS=_16710_os;
	}
	if (_16714_arch != jule::Str("native", 6)) {
		_13fe1e4a0_check_target_arch(_16714_arch);
		_1410197f0_ARCH=_16714_arch;
	}
}



inline void _13fe1e4a0_parse_compiler_option(jule::Slice<jule::Str> _18026_args,jule::Int& _18044_i) {
	jule::Str _1819_value = _13fe1e4a0_get_option_value(_18026_args,_18044_i);
	{
		auto &_match_expr{ _1819_value };
		if (!((jule::Str("", 0)) == _match_expr)) { goto _case_end_4770871040; }
		_case_begin_4770871040:;
		{
			_141006360_exit_err(jule::Str("missing option value: --compiler", 32));
		}
		goto _match_end_4770868736;
		_case_end_4770871040:;
		if (!((jule::Str("clang", 5)) == _match_expr)) { goto _case_end_4770871504; }
		_case_begin_4770871504:;
		{
			_13fe1e4a0_COMPILER=jule::Str("clang", 5);
			_13fe1e4a0_COMPILER_PATH=jule::Str("clang++", 7);
		}
		goto _match_end_4770868736;
		_case_end_4770871504:;
		if (!((jule::Str("gcc", 3)) == _match_expr)) { goto _case_end_4770871616; }
		_case_begin_4770871616:;
		{
			_13fe1e4a0_COMPILER=jule::Str("gcc", 3);
			_13fe1e4a0_COMPILER_PATH=jule::Str("g++", 3);
		}
		goto _match_end_4770868736;
		_case_end_4770871616:;
		_case_begin_4770870240:;
		{
			_141006360_exit_err(jule::Str("invalid option value for --compiler: ", 37) + _1819_value);
		}
		goto _match_end_4770868736;
		_case_end_4770870240:;
		_match_end_4770868736:;
	}
}



inline jule::Str _13fe1e4a0_parse_options(jule::Slice<jule::Str> _19918_args) {
	jule::Str _20013_cmd = jule::Str("", 0);
	jule::Int _20413_i = 1LL;
	_iter_begin_4770879056:;
	if (!(_20413_i < _19918_args.len())) { goto _iter_end_4770879056; }
	{
		jule::Str _20614_arg;
		jule::Str _20619_content;
		std::tie(_20614_arg,_20619_content) = _13fe1e4a0_get_option(_19918_args,_20413_i);
		_20013_cmd+=_20619_content;
		{
			auto &_match_expr{ _20614_arg };
			if (!((jule::Str("", 0)) == _match_expr)) { goto _case_end_4770844192; }
			goto _match_end_4770883376;
			_case_end_4770844192:;
			if (!((jule::Str("-o", 2)) == _match_expr || (jule::Str("--out", 5)) == _match_expr)) { goto _case_end_4770883504; }
			_case_begin_4770883504:;
			{
				_13fe1e4a0_parse_out_option(_19918_args,_20413_i);
			}
			goto _match_end_4770883376;
			_case_end_4770883504:;
			if (!((jule::Str("-t", 2)) == _match_expr || (jule::Str("--transpile", 11)) == _match_expr)) { goto _case_end_4770883616; }
			_case_begin_4770883616:;
			{
				_13fe1e4a0_MODE=1LLU;
			}
			goto _match_end_4770883376;
			_case_end_4770883616:;
			if (!((jule::Str("-c", 2)) == _match_expr || (jule::Str("--compile", 9)) == _match_expr)) { goto _case_end_4770883728; }
			_case_begin_4770883728:;
			{
				_13fe1e4a0_MODE=0LLU;
			}
			goto _match_end_4770883376;
			_case_end_4770883728:;
			if (!((jule::Str("--compiler", 10)) == _match_expr)) { goto _case_end_4770883840; }
			_case_begin_4770883840:;
			{
				_13fe1e4a0_parse_compiler_option(_19918_args,_20413_i);
			}
			goto _match_end_4770883376;
			_case_end_4770883840:;
			if (!((jule::Str("--opt-copy", 10)) == _match_expr)) { goto _case_end_4770885856; }
			_case_begin_4770885856:;
			{
				_119083710_OPTIMIZATIONS=append(_119083710_OPTIMIZATIONS,jule::Slice<jule::Str>({jule::Str("--opt-copy", 10)}));
			}
			goto _match_end_4770883376;
			_case_end_4770885856:;
			if (!((jule::Str("--opt-deadcode", 14)) == _match_expr)) { goto _case_end_4770885968; }
			_case_begin_4770885968:;
			{
				_119083710_OPTIMIZATIONS=append(_119083710_OPTIMIZATIONS,jule::Slice<jule::Str>({jule::Str("--opt-deadcode", 14)}));
			}
			goto _match_end_4770883376;
			_case_end_4770885968:;
			if (!((jule::Str("--opt", 5)) == _match_expr)) { goto _case_end_4770886080; }
			_case_begin_4770886080:;
			{
				_13fe1e4a0_parse_opt_option(_19918_args,_20413_i);
			}
			goto _match_end_4770883376;
			_case_end_4770886080:;
			if (!((jule::Str("--target", 8)) == _match_expr)) { goto _case_end_4770886192; }
			_case_begin_4770886192:;
			{
				_13fe1e4a0_parse_target_option(_19918_args,_20413_i);
			}
			goto _match_end_4770883376;
			_case_end_4770886192:;
			_case_begin_4770882592:;
			{
				_141006360_exit_err(jule::Str("undefined option: ", 18) + _20614_arg);
			}
			goto _match_end_4770883376;
			_case_end_4770882592:;
			_match_end_4770883376:;
		}
	}
	_iter_next_4770879056:;
	(_20413_i)++;
	goto _iter_begin_4770879056;
	_iter_end_4770879056:;
	_20013_cmd=_20013_cmd.trim(jule::Str(" \t\r\n\v", 5));
	return _20013_cmd;
}



inline void _13fe1e4a0_write_output(jule::Str _24317_path,jule::Str _24328_content) {
	jule::Str _2449_dir = _1410391e0_dir(_24317_path);
	jule::Int _24617_err;
	std::tie(std::ignore,_24617_err) = _118d9e780_stat(_2449_dir);
	if (_24617_err != 0LLU) {
		jule::Int _24813_err = _118da0200_create_dir(_2449_dir);
		if (_24813_err != 0LLU) {
			_141006360_exit_err(jule::Str("a problem occurs when code generation", 37));
		}
	}
	jule::Ref<_118da2050_File> _25414_f;
	std::tie(_25414_f,_24617_err) = _118d89bd0_open(_24317_path,1538LL,438LL);
	if (_24617_err != 0LLU) {
		_141006360_exit_err(jule::Str("a problem occurs when code generation", 37));
	}
	std::tie(std::ignore,_24617_err) = _25414_f->_method_write(static_cast<jule::Slice<jule::U8>>(_24328_content));
	if (_24617_err != 0LLU) {
		_141006360_exit_err(jule::Str("a problem occurs when code generation", 37));
	}
	_25414_f->_method_close();
}



inline void _13fe1e4a0_clear_objects(void) {
	if (_118d89bd0_remove_file(_13fe1e4a0_get_compile_path()) != 0LLU) {
		jule::outln(jule::Str("a problem occurs when object cleaning", 37));
		return;
	}
	_118da0200_remove_dir(_13fe1e4a0_OUT_DIR);
}



inline void _13fe1e4a0_compile_ir(jule::Str _27815_compiler,jule::Str _27830_compiler_cmd) {
	jule::Int _2799_status = system((_27815_compiler + jule::Str(" ", 1)) + _27830_compiler_cmd);
	if (_2799_status != 0LL) {
		jule::out(jule::Str("external compiler failed with status code: ", 43));
		jule::outln(_2799_status);
		_141006360_exit_err(jule::Str("", 0));
	}
	_13fe1e4a0_clear_objects();
}



inline void _13fe1e4a0_do_spell(jule::Str _28913_obj,jule::Str _28923_compiler,jule::Str _28938_compiler_cmd) {
	jule::Str _2909_path = _13fe1e4a0_get_compile_path();
	_13fe1e4a0_write_output(_2909_path,_28913_obj);
	{
		auto &_match_expr{ _13fe1e4a0_MODE };
		if (!((0LLU) == _match_expr)) { goto _case_end_4770932144; }
		_case_begin_4770932144:;
		{
			_13fe1e4a0_compile_ir(_28923_compiler,_28938_compiler_cmd);
		}
		goto _match_end_4770931856;
		_case_end_4770932144:;
		_match_end_4770931856:;
	}
}



inline void _13fe1e4a0_check_mode(void) {
	if ((_13fe1e4a0_MODE != 1LLU) && (_13fe1e4a0_MODE != 0LLU)) {
		jule::outln(_13fe9efa0_errorf(jule::Str("invalid_value_for_key", 21),jule::Slice<jule::Any>({jule::Any(_13fe1e4a0_MODE),jule::Any(jule::Str("mode", 4))})));
		_141006360_exit_err(jule::Str("", 0));
	}
}



inline void _13fe1e4a0_check_compiler(void) {
	if ((_13fe1e4a0_COMPILER != jule::Str("gcc", 3)) && (_13fe1e4a0_COMPILER != jule::Str("clang", 5))) {
		jule::outln(_13fe9efa0_errorf(jule::Str("invalid_value_for_key", 21),jule::Slice<jule::Any>({jule::Any(_13fe1e4a0_COMPILER),jule::Any(jule::Str("compiler", 8))})));
		_141006360_exit_err(jule::Str("", 0));
	}
}



inline void _13fe1e4a0_set(void) {
	_13fe1e4a0_check_mode();
	_13fe1e4a0_check_compiler();
}



inline void _13fe1e4a0_print_logs(jule::Slice<_13fe81720_Log> _31915_logs) {
	jule::Str _32013_s = jule::Str("", 0);
	{
		auto &__julec_range_expr = _31915_logs;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			_13fe81720_Log _13fe1e4a0_l = *__julec_range_begin;
			_iter_begin_4770945600:;
			{
				_32013_s+=_13fe1e4a0_l._method_to_str() + jule::Str("\n", 1);
			}
			_iter_next_4770945600:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _13fe1e4a0_l = *__julec_range_begin; goto _iter_begin_4770945600; }
			_iter_end_4770945600:;
		}
	}
	jule::out(_32013_s);
}



inline jule::Bool _13fe1e4a0_is_cpp_source_file(jule::Str _32723_path) {
	jule::Int _3289_offset = _32723_path.rfind(jule::Str(".", 1));
	if (_3289_offset == -1LL) {
		return false;
	}
	return _13fe20550_is_valid_cpp_ext(_32723_path.slice(static_cast<jule::Int>(_3289_offset)));
}



inline std::tuple<jule::Str,jule::Str> _13fe1e4a0_gen_compile_cmd(jule::Str _33520_source_path,jule::Ref<_10fee6360_IR> _33538_ir) {
	jule::Str _3369_compiler = _13fe1e4a0_COMPILER_PATH;
	
	
	
	
	jule::Str _34313_cmd = jule::Str("-O0 ", 4);
	{
		auto &_match_expr{ _13fe1e4a0_COMPILER };
		if (!((jule::Str("gcc", 3)) == _match_expr)) { goto _case_end_4770963040; }
		_case_begin_4770963040:;
		{
			_34313_cmd+=jule::Str("-w ", 3);
		}
		goto _match_end_4770962400;
		_case_end_4770963040:;
		if (!((jule::Str("clang", 5)) == _match_expr)) { goto _case_end_4770963152; }
		_case_begin_4770963152:;
		{
			_34313_cmd+=jule::Str("-Wno-everything ", 16);
		}
		goto _match_end_4770962400;
		_case_end_4770963152:;
		_match_end_4770962400:;
	}
	_34313_cmd+=jule::Str("--std=c++14 ", 12);
	{
		auto &__julec_range_expr = _33538_ir->_field_passes;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _13fe1e4a0_pass = *__julec_range_begin;
			_iter_begin_4770960192:;
			{
				_34313_cmd+=_13fe1e4a0_pass + jule::Str(" ", 1);
			}
			_iter_next_4770960192:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _13fe1e4a0_pass = *__julec_range_begin; goto _iter_begin_4770960192; }
			_iter_end_4770960192:;
		}
	}
	{
		auto &__julec_range_expr = _33538_ir->_field_used;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11a0945e0_ImportInfo> _13fe1e4a0_u = *__julec_range_begin;
			_iter_begin_4770967776:;
			{
				if (_13fe1e4a0_u->_field_cpp_linked && _13fe1e4a0_is_cpp_source_file(_13fe1e4a0_u->_field_path)) {
					_34313_cmd+=_13fe1e4a0_u->_field_path + jule::Str(" ", 1);
				}
			}
			_iter_next_4770967776:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _13fe1e4a0_u = *__julec_range_begin; goto _iter_begin_4770967776; }
			_iter_end_4770967776:;
		}
	}
	if (_13fe1e4a0_OUT != jule::Str("", 0)) {
		_34313_cmd+=(jule::Str("-o ", 3) + _13fe1e4a0_OUT) + jule::Str(" ", 1);
	}
	_34313_cmd+=_33520_source_path;
	return std::make_tuple(_3369_compiler,_34313_cmd);
}



inline jule::Str _13fe1e4a0_get_compile_path(void) {
	return _1410391e0_join(jule::Slice<jule::Str>({_13fe1e4a0_OUT_DIR,_13fe1e4a0_OUT_NAME}));
}



inline void _13fe1e4a0_apply_target_independent_optimizations(jule::Ref<_10fee6360_IR> _38447_ir) {
	if (_119083710_is_opt_enabled(jule::Str("--opt-deadcode", 14))) {
		_13fe7c170_eliminate_dead_code(_38447_ir);
	}
}



inline void _13fe1e4a0_compile_command(void) {
	jule::Str _3919_path = _13fe1e4a0_parse_options(_14107c570_ARGS);
	if (_3919_path == jule::Str("", 0)) {
		_141006360_exit_err(_13fe9efa0_errorf(jule::Str("missing_compile_path", 20),jule::Slice<jule::Any>({})));
	}
	jule::Ref<_118db5e40_Status> _39710_inf;
	jule::Int _39715_err;
	std::tie(_39710_inf,_39715_err) = _118d9e780_stat(_1410197f0_PATH_STDLIB);
	if ((_39715_err != 0LLU) || (!(_39710_inf->_method_is_dir()))) {
		_141006360_exit_err(_13fe9efa0_errorf(jule::Str("stdlib_not_exist", 16),jule::Slice<jule::Any>({})));
	}
	_13fe1e4a0_set();
	jule::Ref<_10fee6360_IR> _40414_ir;
	jule::Slice<_13fe81720_Log> _40418_logs;
	std::tie(_40414_ir,_40418_logs) = _10fee6360_build_ir(_3919_path);
	if ((!(jule::real(_40414_ir))) && (_40418_logs == nullptr)) {
		_141006360_exit_err(_13fe9efa0_errorf(jule::Str("no_file_in_entry_package", 24),jule::Slice<jule::Any>({jule::Any(_3919_path)})));
	}
	if (_40418_logs != nullptr) {
		_13fe1e4a0_print_logs(_40418_logs);
		_141006360_exit_err(jule::Str("", 0));
	}
	
	jule::Ref<_119099250_Fn> _4169_f = _40414_ir->_field_main->_method_find_fn(jule::Str("main", 4),false);
	if ((!(jule::real(_4169_f)))) {
		_141006360_exit_err(_13fe9efa0_errorf(jule::Str("no_entry_point", 14),jule::Slice<jule::Any>({})));
	}
	_13fe1e4a0_apply_target_independent_optimizations(_40414_ir);
	jule::Str _42310_compiler;
	jule::Str _42320_compiler_cmd;
	std::tie(_42310_compiler,_42320_compiler_cmd) = _13fe1e4a0_gen_compile_cmd(_13fe1e4a0_get_compile_path(),_40414_ir);
	jule::Str _42513_obj = _11a1c3f00_gen(_40414_ir);
	_11a1c3f00_append_standard(_42513_obj,_42310_compiler,_42320_compiler_cmd);
	_13fe1e4a0_do_spell(_42513_obj,_42310_compiler,_42320_compiler_cmd);
}




void __jule_call_initializers(void) {
	_14107c570_init();
	_1410197f0_init();
	_11aa913b0_init();
	_118d5bd10_init();
	_141006360_init();
}

int main(int argc, char *argv[], char *envp[]) {
	std::set_terminate(&jule::terminate_handler);
	jule::set_sig_handler(jule::signal_handler);
	jule::setup_command_line_args(argc, argv);
	jule::setup_environment_variables(envp);

	__jule_call_initializers();
	entry_point();

	return EXIT_SUCCESS;
}