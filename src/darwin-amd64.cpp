// Auto generated by JuleC.
// JuleC version: beta 0.0.5 @master
// Date: 22/9/2023 10.28 (DD/MM/YYYY) (HH.MM) UTC
//
// Recommended Compile Command;
// clang++ -O0 -Wno-everything --std=c++17 dist/ir.cpp

#include "api/jule.hpp"                                   

#include <dirent.h>
#include <fcntl.h>
#include <unistd.h>
#include <cstdio>
#include <sys/stat.h>
#include <time.h>
#include "std/jule/integrated/integrated.hpp"                                   
#include "std/sys/syscall_unix.hpp"                                   

struct _1b8e0c01d_Importer;
struct _1b951b088_Kind;
struct _1b9a5b012_Lookup;
struct _1d173d293_RangeSetter;

struct _1d0518e60_AnsiEscape;


struct _1d0518e60_Logger;


struct _1d0680a33_LazyBuff;


struct _1d0557e9e_Log;


struct _1d203ade2_bits_error;


struct _1d061d5e7_FloatInfo;


struct _1d061d5e7_DecimalSlice;


struct _1d159c685_LeftCheat;


struct _1d159c685_Decimal;


struct _1d1e19221_DirEntry;


struct _1d1ee0946_File;


struct _1d2151920_Status;


struct _1d2375913_FoldPair;


struct _1d2375913_CaseRange;


struct _1d2375913_Range16;


struct _1d2375913_Range32;


struct _1d2375913_RangeTable;


struct _1b818a2be_accept_range;


struct _1d1da4277_Token;


struct _1d1ee01b5_File;


struct _1d215b155_KindPair;


struct _1d215b155_Lex;


struct _1d21640e7_Ast;


struct _1d1e5192e_CommentGroup;


struct _1d1e5192e_NamespaceTypeDecl;


struct _1d1e5192e_RefTypeDecl;


struct _1d1e5192e_SlcTypeDecl;


struct _1d1e5192e_TupleTypeDecl;


struct _1d1e5192e_PtrTypeDecl;


struct _1d1e5192e_ArrTypeDecl;


struct _1d1e5192e_MapTypeDecl;


struct _1d1e5192e_RetTypeDecl;


struct _1d1e5192e_TupleExpr;


struct _1d1e5192e_CastExpr;


struct _1d1e5192e_StructLit;


struct _1d1e5192e_ScopeTree;


struct _1d1e5192e_Conditional;


struct _1d1ee1617_FileInfo;


struct _1d1ee1617_PackageInfo;


struct _1d21a4698_Stmt;


struct _1d21a4698_ScopeParser;


struct _1d21b6e08_CallData;


struct _1d21b6e08_Precedencer;


struct _1d21b6e08_ExprBuilder;


struct _1d21abb45_Parser;


struct _1b87d0ddc_TypeBuilder;


struct _1b9d678e5_Const;


struct _1d21c0b59_FieldIns;


struct _1d21c0b59_StructIns;


struct _1d21d97ee_RetType;


struct _1d21d97ee_ParamIns;


struct _1d21d97ee_FnIns;


struct _1b8b10cbb_ReferenceStack;


struct _1b8b10cbb_SymbolBuilder;


struct _1b8cd2c4b_Scope;


struct _1b8cd2c4b_If;


struct _1b8cd2c4b_Else;


struct _1b8cd2c4b_Conditional;


struct _1b8cd2c4b_InfIter;


struct _1b8cd2c4b_WhileIter;


struct _1b8cd2c4b_RangeIter;


struct _1b8cd2c4b_ContSt;


struct _1b8cd2c4b_BreakSt;


struct _1b8cd2c4b_Label;


struct _1b8cd2c4b_GotoSt;


struct _1b8cd2c4b_Postfix;


struct _1b8cd2c4b_Assign;


struct _1b8cd2c4b_MultiAssign;


struct _1b8cd2c4b_Match;


struct _1b8cd2c4b_Case;


struct _1b8cd2c4b_FallSt;


struct _1b8cd2c4b_RetSt;


struct _1b8cd2c4b_Recover;


struct _1b8cd2c4b_ScopeGoto;


struct _1b8cd2c4b_ScopeChecker;


struct _1b8dbae99_BinopExprModel;


struct _1b8dbae99_UnaryExprModel;


struct _1b8dbae99_GetRefPtrExprModel;


struct _1b8dbae99_StructArgExprModel;


struct _1b8dbae99_StructLitExprModel;


struct _1b8dbae99_AllocStructLitExprModel;


struct _1b8dbae99_CastingExprModel;


struct _1b8dbae99_FnCallExprModel;


struct _1b8dbae99_SliceExprModel;


struct _1b8dbae99_IndexigExprModel;


struct _1b8dbae99_AnonFnExprModel;


struct _1b8dbae99_KeyValPairExprModel;


struct _1b8dbae99_MapExprModel;


struct _1b8dbae99_SlicingExprModel;


struct _1b8dbae99_TraitSubIdentExprModel;


struct _1b8dbae99_StructSubIdentExprModel;


struct _1b8dbae99_StructStaticIdentExprModel;


struct _1b8dbae99_ArrayExprModel;


struct _1b8dbae99_CommonIdentExprModel;


struct _1b8dbae99_CommonSubIdentExprModel;


struct _1b8dbae99_TupleExprModel;


struct _1b8dbae99_BuiltinOutCallExprModel;


struct _1b8dbae99_BuiltinOutlnCallExprModel;


struct _1b8dbae99_BuiltinCloneCallExprModel;


struct _1b8dbae99_BuiltinNewCallExprModel;


struct _1b8dbae99_BuiltinRealCallExprModel;


struct _1b8dbae99_BuiltinDropCallExprModel;


struct _1b8dbae99_BuiltinPanicCallExprModel;


struct _1b8dbae99_BuiltinMakeCallExprModel;


struct _1b8dbae99_BuiltinAppendCallExprModel;


struct _1b8dbae99_BuiltinErrorTraitSubIdentExprModel;


struct _1b8dbae99_SizeofExprModel;


struct _1b8dbae99_AlignofExprModel;


struct _1b8dbae99_RuneExprModel;


struct _1b8dbae99_ExplicitDerefExprModel;


struct _1b8dbae99_IntegratedToStrExprModel;


struct _1b8dbae99_TernaryExprModel;


struct _1b8e0c01d_Package;


struct _1b912748b_Sema;


struct _1b9176ba0_RangeChecker;


struct _1b9390d86_SymbolTable;


struct _1b9523799_Data;


struct _1b9523799_Value;


struct _1b9523799_Eval;


struct _1b951b088_TypeKind;


struct _1b951b088_TypeSymbol;


struct _1b951b088_Prim;


struct _1b951b088_Ref;


struct _1b951b088_Slc;


struct _1b951b088_Tuple;


struct _1b951b088_Map;


struct _1b951b088_Arr;


struct _1b951b088_Ptr;


struct _1b951b088_Referencer;


struct _1d1c2a7b3_PlainImporter;


struct _1d162b2a2_OrderedDefines;


struct _1d162b2a2_DefineOrderer;


struct _1d063d21b_ScopeDeadCode;


struct _1ba3a81dd_AbsTime;


struct _1ba3a81dd_Time;


struct _1ba3a81dd_Duration;


struct _1d173d293_IndexRangeSetter;


struct _1d173d293_MapRangeSetter;


struct _1d1e5192e_MatchCase;


struct _1d1e5192e_LitExpr;


struct _1d1e5192e_UnsafeExpr;


struct _1d1e5192e_IdentExpr;


struct _1d1e5192e_UnaryExpr;


struct _1d1e5192e_VariadicExpr;


struct _1d1e5192e_NsSelectionExpr;


struct _1d1e5192e_SubIdentExpr;


struct _1d1e5192e_BinopExpr;


struct _1d1e5192e_FieldExprPair;


struct _1d1e5192e_BraceLit;


struct _1d1e5192e_KeyValPair;


struct _1d1e5192e_SliceExpr;


struct _1d1e5192e_IndexingExpr;


struct _1b9176ba0_DynamicTypeAnnotation;


struct _1b9176ba0_StructLitChecker;


struct _1d1e5192e_SlicingExpr;


struct _1d1e5192e_TernaryExpr;


struct _1d1e5192e_LabelSt;


struct _1d1e5192e_FallSt;


struct _1d1e5192e_AssignSt;


struct _1d1e5192e_RetSt;


struct _1d1e5192e_Iter;


struct _1d1e5192e_WhileKind;


struct _1d1e5192e_RangeKind;


struct _1b9176ba0_AssignTypeChecker;


struct _1b9176ba0_FnCallArgChecker;


struct _1b9176ba0_RetTypeChecker;


struct _1d1e5192e_GenericDecl;


struct _1d1e5192e_GotoSt;


struct _1b9523799_BinopSolver;


struct _1b951b088_TypeAlias;


struct _1d1e5192e_AssignLeft;


struct _1d1e5192e_Comment;


struct _1d1e5192e_ParamDecl;


struct _1d1e5192e_FnDecl;


struct _1d1e5192e_VarDecl;


struct _1b951b088_TypeChecker;


struct _1d1818549_IR;


struct _1d1e5192e_BreakSt;


struct _1d1e5192e_ContSt;


struct _1b8cd2c4b_ScopeLabel;


struct _1d1e5192e_If;


struct _1d1e5192e_Else;


struct _1d1e5192e_Directive;


struct _1d1e5192e_TypeAliasDecl;


struct _1d1e5192e_Case;


struct _1d1e5192e_UseDecl;


struct _1d1e5192e_EnumItemDecl;


struct _1d1e5192e_EnumDecl;


struct _1d1e5192e_FieldDecl;


struct _1d1e5192e_StructDecl;


struct _1d1e5192e_TraitDecl;


struct _1d1e5192e_Impl;


struct _1d1e5192e_Expr;


struct _1d1e5192e_TypeDecl;


struct _1d21bd937_AssignInfo;


struct _1d1e5192e_IdentTypeDecl;


struct _1d21c0b59_Field;


struct _1d21c0b59_Struct;


struct _1d1e5192e_FnCallExpr;


struct _1d21d97ee_Param;


struct _1d21d97ee_Fn;


struct _1d1e5192e_Node;


struct _1b8b10cbb_Pass;


struct _1b8cd2894_Trait;


struct _1b8dae520_EnumItem;


struct _1b8dae520_Enum;


struct _1b8e0c01d_ImportInfo;


struct _1b8dacd8c_Impl;


struct _1b919cb2c_Var;


struct _1b9176ba0_TypeCompatibilityChecker;

struct _1b8e0c01d_Importer {
	virtual ~_1b8e0c01d_Importer(void) {}

	virtual jule::Ref<_1b8e0c01d_ImportInfo> _method_get_import(jule::Str _1633_path) { return {}; }
	virtual std::tuple<jule::Slice<jule::Ref<_1d21640e7_Ast>>,jule::Slice<_1d0557e9e_Log>> _method_import_package(jule::Str _2037_path) { return {}; }
	virtual void _method_imported(jule::Ref<_1b8e0c01d_ImportInfo>) {}
};

struct _1b951b088_Kind {
	virtual ~_1b951b088_Kind(void) {}

	virtual jule::Str _method_to_str(void) { return {}; }
	virtual jule::Bool _method_equals(jule::Ref<_1b951b088_TypeKind> _4621_other) { return {}; }
};

struct _1b9a5b012_Lookup {
	virtual ~_1b9a5b012_Lookup(void) {}

	virtual jule::Ref<_1b8e0c01d_ImportInfo> _method_find_package(jule::Str _935_ident) { return {}; }
	virtual jule::Ref<_1b8e0c01d_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ref<_1b8e0c01d_ImportInfo>)> _1337_selector) { return {}; }
	virtual jule::Ref<_1b919cb2c_Var> _method_find_var(jule::Str _1731_ident,jule::Bool _1743_cpp_linked) { return {}; }
	virtual jule::Ref<_1b951b088_TypeAlias> _method_find_type_alias(jule::Str _2138_ident,jule::Bool _2150_cpp_linked) { return {}; }
	virtual jule::Ref<_1d21c0b59_Struct> _method_find_struct(jule::Str _2534_ident,jule::Bool _2546_cpp_linked) { return {}; }
	virtual jule::Ref<_1d21d97ee_Fn> _method_find_fn(jule::Str _2930_ident,jule::Bool _2942_cpp_linked) { return {}; }
	virtual jule::Ref<_1b8cd2894_Trait> _method_find_trait(jule::Str _3333_ident) { return {}; }
	virtual jule::Ref<_1b8dae520_Enum> _method_find_enum(jule::Str _3732_ident) { return {}; }
};

struct _1d173d293_RangeSetter {
	virtual ~_1d173d293_RangeSetter(void) {}

	virtual jule::Str _method_setup_vars(jule::Ref<_1b919cb2c_Var> _4029_key_a,jule::Ref<_1b919cb2c_Var> _4046_key_b) { return {}; }
	virtual jule::Str _method_next_steps(jule::Ref<_1b919cb2c_Var> _4129_key_a,jule::Ref<_1b919cb2c_Var> _4146_key_b,jule::Str _4159_begin) { return {}; }
};


struct _1d0518e60_AnsiEscape {
	jule::Ref<_1d0518e60_AnsiEscape> self{};

	~_1d0518e60_AnsiEscape(void) { this->self.ref = nullptr; }

	_1d0518e60_AnsiEscape(void) { this->self = jule::Ref<_1d0518e60_AnsiEscape>::make(this, nullptr); }

	static inline void _static_method_reset(void);


	static inline void _static_method_print(jule::Str,jule::Str);


	inline bool operator==(const _1d0518e60_AnsiEscape &_Src) const { return true; }

	inline bool operator!=(const _1d0518e60_AnsiEscape &_Src) const { return !this->operator==(_Src); }
};


struct _1d0518e60_Logger {
	jule::Ref<_1d0518e60_Logger> self{};

	~_1d0518e60_Logger(void) { this->self.ref = nullptr; }

	_1d0518e60_Logger(void) { this->self = jule::Ref<_1d0518e60_Logger>::make(this, nullptr); }

	static inline void _static_method_log_flat(_1d0557e9e_Log&);


	static inline void _static_method_log_error(_1d0557e9e_Log&);


	static inline void _static_method_log(_1d0557e9e_Log&);


	static inline void _static_method_print_logs(jule::Slice<_1d0557e9e_Log>&);


	inline bool operator==(const _1d0518e60_Logger &_Src) const { return true; }

	inline bool operator!=(const _1d0518e60_Logger &_Src) const { return !this->operator==(_Src); }
};


struct _1d0680a33_LazyBuff {
	jule::Ref<_1d0680a33_LazyBuff> self{};

	jule::Str _field_path{jule::Str()};
	jule::Slice<jule::U8> _field_buff{jule::Slice<jule::U8>()};
	jule::Int _field_w{jule::Int()};
	jule::Str _field_vol_and_path{jule::Str()};
	jule::Int _field_vol_len{jule::Int()};


	_1d0680a33_LazyBuff(jule::Str __param_path, jule::Slice<jule::U8> __param_buff, jule::Int __param_w, jule::Str __param_vol_and_path, jule::Int __param_vol_len) {
		this->self = jule::Ref<_1d0680a33_LazyBuff>::make(this, nullptr);

		this->_field_path = __param_path;
		this->_field_buff = __param_buff;
		this->_field_w = __param_w;
		this->_field_vol_and_path = __param_vol_and_path;
		this->_field_vol_len = __param_vol_len;
	}

	~_1d0680a33_LazyBuff(void) { this->self.ref = nullptr; }

	_1d0680a33_LazyBuff(void) { this->self = jule::Ref<_1d0680a33_LazyBuff>::make(this, nullptr); }

	inline jule::U8 _method_index(jule::Int);


	inline void _method_append(jule::U8);


	inline jule::Str _method_string(void);


	inline bool operator==(const _1d0680a33_LazyBuff &_Src) const {
		return 
			this->_field_path == _Src._field_path &&
			this->_field_buff == _Src._field_buff &&
			this->_field_w == _Src._field_w &&
			this->_field_vol_and_path == _Src._field_vol_and_path &&
			this->_field_vol_len == _Src._field_vol_len;
	}

	inline bool operator!=(const _1d0680a33_LazyBuff &_Src) const { return !this->operator==(_Src); }
};


struct _1d0557e9e_Log {
	jule::Ref<_1d0557e9e_Log> self{};

	jule::Int _field_kind{0LLU};
	jule::Int _field_row{jule::Int()};
	jule::Int _field_column{jule::Int()};
	jule::Str _field_path{jule::Str()};
	jule::Str _field_text{jule::Str()};
	jule::Str _field_line{jule::Str()};
	jule::Str _field_suggestion{jule::Str()};


	_1d0557e9e_Log(jule::Int __param_kind, jule::Int __param_row, jule::Int __param_column, jule::Str __param_path, jule::Str __param_text, jule::Str __param_line, jule::Str __param_suggestion) {
		this->self = jule::Ref<_1d0557e9e_Log>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_row = __param_row;
		this->_field_column = __param_column;
		this->_field_path = __param_path;
		this->_field_text = __param_text;
		this->_field_line = __param_line;
		this->_field_suggestion = __param_suggestion;
	}

	~_1d0557e9e_Log(void) { this->self.ref = nullptr; }

	_1d0557e9e_Log(void) { this->self = jule::Ref<_1d0557e9e_Log>::make(this, nullptr); }

	inline bool operator==(const _1d0557e9e_Log &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_row == _Src._field_row &&
			this->_field_column == _Src._field_column &&
			this->_field_path == _Src._field_path &&
			this->_field_text == _Src._field_text &&
			this->_field_line == _Src._field_line &&
			this->_field_suggestion == _Src._field_suggestion;
	}

	inline bool operator!=(const _1d0557e9e_Log &_Src) const { return !this->operator==(_Src); }
};


struct _1d203ade2_bits_error: public jule::Error {
	jule::Ref<_1d203ade2_bits_error> self{};

	jule::Str _field_message{jule::Str()};


	_1d203ade2_bits_error(jule::Str __param_message) {
		this->self = jule::Ref<_1d203ade2_bits_error>::make(this, nullptr);

		this->_field_message = __param_message;
	}

	~_1d203ade2_bits_error(void) { this->self.ref = nullptr; }

	_1d203ade2_bits_error(void) { this->self = jule::Ref<_1d203ade2_bits_error>::make(this, nullptr); }

	inline jule::Str _method_error(void);


	inline bool operator==(const _1d203ade2_bits_error &_Src) const {
		return 
			this->_field_message == _Src._field_message;
	}

	inline bool operator!=(const _1d203ade2_bits_error &_Src) const { return !this->operator==(_Src); }
};


struct _1d061d5e7_FloatInfo {
	jule::Ref<_1d061d5e7_FloatInfo> self{};

	jule::Uint _field_mantbits{jule::Uint()};
	jule::Uint _field_expbits{jule::Uint()};
	jule::Int _field_bias{jule::Int()};


	_1d061d5e7_FloatInfo(jule::Uint __param_mantbits, jule::Uint __param_expbits, jule::Int __param_bias) {
		this->self = jule::Ref<_1d061d5e7_FloatInfo>::make(this, nullptr);

		this->_field_mantbits = __param_mantbits;
		this->_field_expbits = __param_expbits;
		this->_field_bias = __param_bias;
	}

	~_1d061d5e7_FloatInfo(void) { this->self.ref = nullptr; }

	_1d061d5e7_FloatInfo(void) { this->self = jule::Ref<_1d061d5e7_FloatInfo>::make(this, nullptr); }

	inline bool operator==(const _1d061d5e7_FloatInfo &_Src) const {
		return 
			this->_field_mantbits == _Src._field_mantbits &&
			this->_field_expbits == _Src._field_expbits &&
			this->_field_bias == _Src._field_bias;
	}

	inline bool operator!=(const _1d061d5e7_FloatInfo &_Src) const { return !this->operator==(_Src); }
};


struct _1d061d5e7_DecimalSlice {
	jule::Ref<_1d061d5e7_DecimalSlice> self{};

	jule::Slice<jule::U8> _field_d{jule::Slice<jule::U8>()};
	jule::Int _field_nd{jule::Int()};
	jule::Int _field_dp{jule::Int()};
	jule::Bool _field_neg{jule::Bool()};


	_1d061d5e7_DecimalSlice(jule::Slice<jule::U8> __param_d, jule::Int __param_nd, jule::Int __param_dp, jule::Bool __param_neg) {
		this->self = jule::Ref<_1d061d5e7_DecimalSlice>::make(this, nullptr);

		this->_field_d = __param_d;
		this->_field_nd = __param_nd;
		this->_field_dp = __param_dp;
		this->_field_neg = __param_neg;
	}

	~_1d061d5e7_DecimalSlice(void) { this->self.ref = nullptr; }

	_1d061d5e7_DecimalSlice(void) { this->self = jule::Ref<_1d061d5e7_DecimalSlice>::make(this, nullptr); }

	inline bool operator==(const _1d061d5e7_DecimalSlice &_Src) const {
		return 
			this->_field_d == _Src._field_d &&
			this->_field_nd == _Src._field_nd &&
			this->_field_dp == _Src._field_dp &&
			this->_field_neg == _Src._field_neg;
	}

	inline bool operator!=(const _1d061d5e7_DecimalSlice &_Src) const { return !this->operator==(_Src); }
};


struct _1d159c685_LeftCheat {
	jule::Ref<_1d159c685_LeftCheat> self{};

	jule::Int _field_delta{jule::Int()};
	jule::Str _field_cutoff{jule::Str()};


	_1d159c685_LeftCheat(jule::Int __param_delta, jule::Str __param_cutoff) {
		this->self = jule::Ref<_1d159c685_LeftCheat>::make(this, nullptr);

		this->_field_delta = __param_delta;
		this->_field_cutoff = __param_cutoff;
	}

	~_1d159c685_LeftCheat(void) { this->self.ref = nullptr; }

	_1d159c685_LeftCheat(void) { this->self = jule::Ref<_1d159c685_LeftCheat>::make(this, nullptr); }

	inline bool operator==(const _1d159c685_LeftCheat &_Src) const {
		return 
			this->_field_delta == _Src._field_delta &&
			this->_field_cutoff == _Src._field_cutoff;
	}

	inline bool operator!=(const _1d159c685_LeftCheat &_Src) const { return !this->operator==(_Src); }
};


struct _1d159c685_Decimal {
	jule::Ref<_1d159c685_Decimal> self{};

	jule::Array<jule::U8,800> _field_d{jule::Array<jule::U8,800>()};
	jule::Int _field_nd{jule::Int()};
	jule::Int _field_dp{jule::Int()};
	jule::Bool _field_neg{jule::Bool()};
	jule::Bool _field_trunc{jule::Bool()};


	_1d159c685_Decimal(jule::Array<jule::U8,800> __param_d, jule::Int __param_nd, jule::Int __param_dp, jule::Bool __param_neg, jule::Bool __param_trunc) {
		this->self = jule::Ref<_1d159c685_Decimal>::make(this, nullptr);

		this->_field_d = __param_d;
		this->_field_nd = __param_nd;
		this->_field_dp = __param_dp;
		this->_field_neg = __param_neg;
		this->_field_trunc = __param_trunc;
	}

	~_1d159c685_Decimal(void) { this->self.ref = nullptr; }

	_1d159c685_Decimal(void) { this->self = jule::Ref<_1d159c685_Decimal>::make(this, nullptr); }

	inline jule::Bool _method_set(jule::Str);


	inline std::tuple<jule::U64,jule::Bool> _method_float_bits(_1d061d5e7_FloatInfo&);


	inline void _method_assign(jule::U64);


	inline void _method_shift(jule::Int);


	inline void _method_round_down(jule::Int);


	inline void _method_round_up(jule::Int);


	inline void _method_round(jule::Int);


	inline jule::U64 _method_rounded_integer(void);


	inline bool operator==(const _1d159c685_Decimal &_Src) const {
		return 
			this->_field_d == _Src._field_d &&
			this->_field_nd == _Src._field_nd &&
			this->_field_dp == _Src._field_dp &&
			this->_field_neg == _Src._field_neg &&
			this->_field_trunc == _Src._field_trunc;
	}

	inline bool operator!=(const _1d159c685_Decimal &_Src) const { return !this->operator==(_Src); }
};


struct _1d1e19221_DirEntry {
	jule::Ref<_1d1e19221_DirEntry> self{};

	jule::Str _field_name{jule::Str()};
	jule::Ref<_1d2151920_Status> _field_stat{jule::Ref<_1d2151920_Status>()};


	_1d1e19221_DirEntry(jule::Str __param_name, jule::Ref<_1d2151920_Status> __param_stat) {
		this->self = jule::Ref<_1d1e19221_DirEntry>::make(this, nullptr);

		this->_field_name = __param_name;
		this->_field_stat = __param_stat;
	}

	~_1d1e19221_DirEntry(void) { this->self.ref = nullptr; }

	_1d1e19221_DirEntry(void) { this->self = jule::Ref<_1d1e19221_DirEntry>::make(this, nullptr); }

	inline bool operator==(const _1d1e19221_DirEntry &_Src) const {
		return 
			this->_field_name == _Src._field_name &&
			this->_field_stat == _Src._field_stat;
	}

	inline bool operator!=(const _1d1e19221_DirEntry &_Src) const { return !this->operator==(_Src); }
};


struct _1d1ee0946_File {
	jule::Ref<_1d1ee0946_File> self{};

	jule::Uintptr _field_handle{jule::Uintptr()};


	_1d1ee0946_File(jule::Uintptr __param_handle) {
		this->self = jule::Ref<_1d1ee0946_File>::make(this, nullptr);

		this->_field_handle = __param_handle;
	}

	~_1d1ee0946_File(void) { this->self.ref = nullptr; }

	_1d1ee0946_File(void) { this->self = jule::Ref<_1d1ee0946_File>::make(this, nullptr); }

	inline std::tuple<jule::Int,jule::Int> _method_write(jule::Slice<jule::U8>);


	inline std::tuple<jule::Int,jule::Int> _method_read(jule::Slice<jule::U8>);


	static inline jule::Ref<_1d1ee0946_File> _static_method_new(jule::Uintptr);


	inline std::tuple<jule::I64,jule::Int> _method_seek(jule::I64,jule::Int);


	inline jule::Int _method_close(void);


	inline bool operator==(const _1d1ee0946_File &_Src) const {
		return 
			this->_field_handle == _Src._field_handle;
	}

	inline bool operator!=(const _1d1ee0946_File &_Src) const { return !this->operator==(_Src); }
};


struct _1d2151920_Status {
	jule::Ref<_1d2151920_Status> self{};

	jule::Uint _field_mode{jule::Uint()};
	jule::Uint _field_size{jule::Uint()};


	_1d2151920_Status(jule::Uint __param_mode, jule::Uint __param_size) {
		this->self = jule::Ref<_1d2151920_Status>::make(this, nullptr);

		this->_field_mode = __param_mode;
		this->_field_size = __param_size;
	}

	~_1d2151920_Status(void) { this->self.ref = nullptr; }

	_1d2151920_Status(void) { this->self = jule::Ref<_1d2151920_Status>::make(this, nullptr); }

	inline jule::Bool _method_is_dir(void);


	inline jule::Bool _method_is_reg(void);


	inline bool operator==(const _1d2151920_Status &_Src) const {
		return 
			this->_field_mode == _Src._field_mode &&
			this->_field_size == _Src._field_size;
	}

	inline bool operator!=(const _1d2151920_Status &_Src) const { return !this->operator==(_Src); }
};


struct _1d2375913_FoldPair {
	jule::Ref<_1d2375913_FoldPair> self{};

	jule::U16 _field_from{jule::U16()};
	jule::U16 _field_to{jule::U16()};


	_1d2375913_FoldPair(jule::U16 __param_from, jule::U16 __param_to) {
		this->self = jule::Ref<_1d2375913_FoldPair>::make(this, nullptr);

		this->_field_from = __param_from;
		this->_field_to = __param_to;
	}

	~_1d2375913_FoldPair(void) { this->self.ref = nullptr; }

	_1d2375913_FoldPair(void) { this->self = jule::Ref<_1d2375913_FoldPair>::make(this, nullptr); }

	inline bool operator==(const _1d2375913_FoldPair &_Src) const {
		return 
			this->_field_from == _Src._field_from &&
			this->_field_to == _Src._field_to;
	}

	inline bool operator!=(const _1d2375913_FoldPair &_Src) const { return !this->operator==(_Src); }
};


struct _1d2375913_CaseRange {
	jule::Ref<_1d2375913_CaseRange> self{};

	jule::U32 _field_lo{jule::U32()};
	jule::U32 _field_hi{jule::U32()};
	jule::Array<jule::I32,3> _field_delta{jule::Array<jule::I32,3>()};


	_1d2375913_CaseRange(jule::U32 __param_lo, jule::U32 __param_hi, jule::Array<jule::I32,3> __param_delta) {
		this->self = jule::Ref<_1d2375913_CaseRange>::make(this, nullptr);

		this->_field_lo = __param_lo;
		this->_field_hi = __param_hi;
		this->_field_delta = __param_delta;
	}

	~_1d2375913_CaseRange(void) { this->self.ref = nullptr; }

	_1d2375913_CaseRange(void) { this->self = jule::Ref<_1d2375913_CaseRange>::make(this, nullptr); }

	inline bool operator==(const _1d2375913_CaseRange &_Src) const {
		return 
			this->_field_lo == _Src._field_lo &&
			this->_field_hi == _Src._field_hi &&
			this->_field_delta == _Src._field_delta;
	}

	inline bool operator!=(const _1d2375913_CaseRange &_Src) const { return !this->operator==(_Src); }
};


struct _1d2375913_Range16 {
	jule::Ref<_1d2375913_Range16> self{};

	jule::U16 _field_lo{jule::U16()};
	jule::U16 _field_hi{jule::U16()};
	jule::U16 _field_stride{jule::U16()};


	_1d2375913_Range16(jule::U16 __param_lo, jule::U16 __param_hi, jule::U16 __param_stride) {
		this->self = jule::Ref<_1d2375913_Range16>::make(this, nullptr);

		this->_field_lo = __param_lo;
		this->_field_hi = __param_hi;
		this->_field_stride = __param_stride;
	}

	~_1d2375913_Range16(void) { this->self.ref = nullptr; }

	_1d2375913_Range16(void) { this->self = jule::Ref<_1d2375913_Range16>::make(this, nullptr); }

	inline bool operator==(const _1d2375913_Range16 &_Src) const {
		return 
			this->_field_lo == _Src._field_lo &&
			this->_field_hi == _Src._field_hi &&
			this->_field_stride == _Src._field_stride;
	}

	inline bool operator!=(const _1d2375913_Range16 &_Src) const { return !this->operator==(_Src); }
};


struct _1d2375913_Range32 {
	jule::Ref<_1d2375913_Range32> self{};

	jule::U32 _field_lo{jule::U32()};
	jule::U32 _field_hi{jule::U32()};
	jule::U32 _field_stride{jule::U32()};


	_1d2375913_Range32(jule::U32 __param_lo, jule::U32 __param_hi, jule::U32 __param_stride) {
		this->self = jule::Ref<_1d2375913_Range32>::make(this, nullptr);

		this->_field_lo = __param_lo;
		this->_field_hi = __param_hi;
		this->_field_stride = __param_stride;
	}

	~_1d2375913_Range32(void) { this->self.ref = nullptr; }

	_1d2375913_Range32(void) { this->self = jule::Ref<_1d2375913_Range32>::make(this, nullptr); }

	inline bool operator==(const _1d2375913_Range32 &_Src) const {
		return 
			this->_field_lo == _Src._field_lo &&
			this->_field_hi == _Src._field_hi &&
			this->_field_stride == _Src._field_stride;
	}

	inline bool operator!=(const _1d2375913_Range32 &_Src) const { return !this->operator==(_Src); }
};


struct _1d2375913_RangeTable {
	jule::Ref<_1d2375913_RangeTable> self{};

	jule::Slice<_1d2375913_Range16> _field_r16{jule::Slice<_1d2375913_Range16>()};
	jule::Slice<_1d2375913_Range32> _field_r32{jule::Slice<_1d2375913_Range32>()};
	jule::Int _field_latin_offset{jule::Int()};


	_1d2375913_RangeTable(jule::Slice<_1d2375913_Range16> __param_r16, jule::Slice<_1d2375913_Range32> __param_r32, jule::Int __param_latin_offset) {
		this->self = jule::Ref<_1d2375913_RangeTable>::make(this, nullptr);

		this->_field_r16 = __param_r16;
		this->_field_r32 = __param_r32;
		this->_field_latin_offset = __param_latin_offset;
	}

	~_1d2375913_RangeTable(void) { this->self.ref = nullptr; }

	_1d2375913_RangeTable(void) { this->self = jule::Ref<_1d2375913_RangeTable>::make(this, nullptr); }

	inline bool operator==(const _1d2375913_RangeTable &_Src) const {
		return 
			this->_field_r16 == _Src._field_r16 &&
			this->_field_r32 == _Src._field_r32 &&
			this->_field_latin_offset == _Src._field_latin_offset;
	}

	inline bool operator!=(const _1d2375913_RangeTable &_Src) const { return !this->operator==(_Src); }
};


struct _1b818a2be_accept_range {
	jule::Ref<_1b818a2be_accept_range> self{};

	jule::U8 _field_lo{jule::U8()};
	jule::U8 _field_hi{jule::U8()};


	_1b818a2be_accept_range(jule::U8 __param_lo, jule::U8 __param_hi) {
		this->self = jule::Ref<_1b818a2be_accept_range>::make(this, nullptr);

		this->_field_lo = __param_lo;
		this->_field_hi = __param_hi;
	}

	~_1b818a2be_accept_range(void) { this->self.ref = nullptr; }

	_1b818a2be_accept_range(void) { this->self = jule::Ref<_1b818a2be_accept_range>::make(this, nullptr); }

	inline bool operator==(const _1b818a2be_accept_range &_Src) const {
		return 
			this->_field_lo == _Src._field_lo &&
			this->_field_hi == _Src._field_hi;
	}

	inline bool operator!=(const _1b818a2be_accept_range &_Src) const { return !this->operator==(_Src); }
};


struct _1d1da4277_Token {
	jule::Ref<_1d1da4277_Token> self{};

	jule::Ref<_1d1ee01b5_File> _field_file{jule::Ref<_1d1ee01b5_File>()};
	jule::Int _field_row{jule::Int()};
	jule::Int _field_column{jule::Int()};
	jule::Str _field_kind{jule::Str()};
	jule::Uint _field_id{0LLU};


	_1d1da4277_Token(jule::Ref<_1d1ee01b5_File> __param_file, jule::Int __param_row, jule::Int __param_column, jule::Str __param_kind, jule::Uint __param_id) {
		this->self = jule::Ref<_1d1da4277_Token>::make(this, nullptr);

		this->_field_file = __param_file;
		this->_field_row = __param_row;
		this->_field_column = __param_column;
		this->_field_kind = __param_kind;
		this->_field_id = __param_id;
	}

	~_1d1da4277_Token(void) { this->self.ref = nullptr; }

	_1d1da4277_Token(void) { this->self = jule::Ref<_1d1da4277_Token>::make(this, nullptr); }

	inline jule::Int _method_prec(void);


	inline bool operator==(const _1d1da4277_Token &_Src) const {
		return 
			this->_field_file == _Src._field_file &&
			this->_field_row == _Src._field_row &&
			this->_field_column == _Src._field_column &&
			this->_field_kind == _Src._field_kind &&
			this->_field_id == _Src._field_id;
	}

	inline bool operator!=(const _1d1da4277_Token &_Src) const { return !this->operator==(_Src); }
};


struct _1d1ee01b5_File {
	jule::Ref<_1d1ee01b5_File> self{};

	jule::Slice<jule::U8> _field_data{jule::Slice<jule::U8>()};
	jule::Str _field__path{jule::Str()};
	jule::Slice<_1d1da4277_Token> _field__tokens{jule::Slice<_1d1da4277_Token>()};


	_1d1ee01b5_File(jule::Slice<jule::U8> __param_data, jule::Str __param__path, jule::Slice<_1d1da4277_Token> __param__tokens) {
		this->self = jule::Ref<_1d1ee01b5_File>::make(this, nullptr);

		this->_field_data = __param_data;
		this->_field__path = __param__path;
		this->_field__tokens = __param__tokens;
	}

	~_1d1ee01b5_File(void) { this->self.ref = nullptr; }

	_1d1ee01b5_File(void) { this->self = jule::Ref<_1d1ee01b5_File>::make(this, nullptr); }

	inline jule::Bool _method_is_ok(void);


	inline void _method_fill(jule::Slice<jule::U8>);


	inline jule::Str _method_path(void);


	inline jule::Str _method_dir(void);


	inline jule::Str _method_name(void);


	inline jule::Uintptr _method_addr(void);


	inline jule::Slice<_1d1da4277_Token> _method_tokens(void);


	inline jule::Str _method_get_row(jule::Int);


	inline bool operator==(const _1d1ee01b5_File &_Src) const {
		return 
			this->_field_data == _Src._field_data &&
			this->_field__path == _Src._field__path &&
			this->_field__tokens == _Src._field__tokens;
	}

	inline bool operator!=(const _1d1ee01b5_File &_Src) const { return !this->operator==(_Src); }
};


struct _1d215b155_KindPair {
	jule::Ref<_1d215b155_KindPair> self{};

	jule::Str _field_kind{jule::Str("::", 2)};
	jule::Uint _field_id{0LLU};


	_1d215b155_KindPair(jule::Str __param_kind, jule::Uint __param_id) {
		this->self = jule::Ref<_1d215b155_KindPair>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_id = __param_id;
	}

	~_1d215b155_KindPair(void) { this->self.ref = nullptr; }

	_1d215b155_KindPair(void) { this->self = jule::Ref<_1d215b155_KindPair>::make(this, nullptr); }

	inline bool operator==(const _1d215b155_KindPair &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_id == _Src._field_id;
	}

	inline bool operator!=(const _1d215b155_KindPair &_Src) const { return !this->operator==(_Src); }
};


struct _1d215b155_Lex {
	jule::Ref<_1d215b155_Lex> self{};

	jule::Slice<_1d1da4277_Token> _field_tokens{jule::Slice<_1d1da4277_Token>()};
	jule::Ref<_1d1ee01b5_File> _field_file{jule::Ref<_1d1ee01b5_File>()};
	jule::Int _field_pos{jule::Int()};
	jule::Int _field_column{jule::Int()};
	jule::Int _field_row{jule::Int()};
	jule::Slice<_1d0557e9e_Log> _field_errors{jule::Slice<_1d0557e9e_Log>()};


	_1d215b155_Lex(jule::Slice<_1d1da4277_Token> __param_tokens, jule::Ref<_1d1ee01b5_File> __param_file, jule::Int __param_pos, jule::Int __param_column, jule::Int __param_row, jule::Slice<_1d0557e9e_Log> __param_errors) {
		this->self = jule::Ref<_1d215b155_Lex>::make(this, nullptr);

		this->_field_tokens = __param_tokens;
		this->_field_file = __param_file;
		this->_field_pos = __param_pos;
		this->_field_column = __param_column;
		this->_field_row = __param_row;
		this->_field_errors = __param_errors;
	}

	~_1d215b155_Lex(void) { this->self.ref = nullptr; }

	_1d215b155_Lex(void) { this->self = jule::Ref<_1d215b155_Lex>::make(this, nullptr); }

	inline void _method_push_err(jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_err_tok(_1d1da4277_Token&,jule::Str);


	inline void _method_lex(void);


	inline jule::Str _method_id(jule::Slice<jule::U8>&);


	inline jule::Slice<jule::U8> _method_resume(void);


	inline void _method_lex_line_comment(_1d1da4277_Token&);


	inline void _method_lex_range_comment(void);


	inline jule::Str _method_num(jule::Slice<jule::U8>&);


	inline jule::Str _method_escape_seq(jule::Slice<jule::U8>&);


	inline jule::Str _method_get_rune(jule::Slice<jule::U8>&,jule::Bool);


	inline jule::Str _method_lex_rune(jule::Slice<jule::U8>&);


	inline jule::Str _method_lex_str(void);


	inline jule::Bool _method_is_first_token_of_line(void);


	inline void _method_new_line(void);


	inline jule::Bool _method_is_op(jule::Slice<jule::U8>&,jule::Str,jule::Uint,_1d1da4277_Token&);


	inline jule::Bool _method_lex_basic_ops(jule::Slice<jule::U8>,_1d1da4277_Token&);


	inline jule::Bool _method_lex_id(jule::Slice<jule::U8>&,_1d1da4277_Token&);


	inline jule::Bool _method_lex_num(jule::Slice<jule::U8>&,_1d1da4277_Token&);


	inline _1d1da4277_Token _method_token(void);


	inline bool operator==(const _1d215b155_Lex &_Src) const {
		return 
			this->_field_tokens == _Src._field_tokens &&
			this->_field_file == _Src._field_file &&
			this->_field_pos == _Src._field_pos &&
			this->_field_column == _Src._field_column &&
			this->_field_row == _Src._field_row &&
			this->_field_errors == _Src._field_errors;
	}

	inline bool operator!=(const _1d215b155_Lex &_Src) const { return !this->operator==(_Src); }
};


struct _1d21640e7_Ast {
	jule::Ref<_1d21640e7_Ast> self{};

	jule::Ref<_1d1ee01b5_File> _field_file{jule::Ref<_1d1ee01b5_File>()};
	jule::Slice<jule::Ref<_1d1e5192e_Directive>> _field_top_directives{jule::Slice<jule::Ref<_1d1e5192e_Directive>>()};
	jule::Slice<jule::Ref<_1d1e5192e_UseDecl>> _field_use_decls{jule::Slice<jule::Ref<_1d1e5192e_UseDecl>>()};
	jule::Slice<jule::Ref<_1d1e5192e_Impl>> _field_impls{jule::Slice<jule::Ref<_1d1e5192e_Impl>>()};
	jule::Slice<jule::Ref<_1d1e5192e_Comment>> _field_comments{jule::Slice<jule::Ref<_1d1e5192e_Comment>>()};
	jule::Slice<_1d1e5192e_Node> _field_decls{jule::Slice<_1d1e5192e_Node>()};


	_1d21640e7_Ast(jule::Ref<_1d1ee01b5_File> __param_file, jule::Slice<jule::Ref<_1d1e5192e_Directive>> __param_top_directives, jule::Slice<jule::Ref<_1d1e5192e_UseDecl>> __param_use_decls, jule::Slice<jule::Ref<_1d1e5192e_Impl>> __param_impls, jule::Slice<jule::Ref<_1d1e5192e_Comment>> __param_comments, jule::Slice<_1d1e5192e_Node> __param_decls) {
		this->self = jule::Ref<_1d21640e7_Ast>::make(this, nullptr);

		this->_field_file = __param_file;
		this->_field_top_directives = __param_top_directives;
		this->_field_use_decls = __param_use_decls;
		this->_field_impls = __param_impls;
		this->_field_comments = __param_comments;
		this->_field_decls = __param_decls;
	}

	~_1d21640e7_Ast(void) { this->self.ref = nullptr; }

	_1d21640e7_Ast(void) { this->self = jule::Ref<_1d21640e7_Ast>::make(this, nullptr); }

	inline bool operator==(const _1d21640e7_Ast &_Src) const {
		return 
			this->_field_file == _Src._field_file &&
			this->_field_top_directives == _Src._field_top_directives &&
			this->_field_use_decls == _Src._field_use_decls &&
			this->_field_impls == _Src._field_impls &&
			this->_field_comments == _Src._field_comments &&
			this->_field_decls == _Src._field_decls;
	}

	inline bool operator!=(const _1d21640e7_Ast &_Src) const { return !this->operator==(_Src); }
};


struct _1d1e5192e_CommentGroup {
	jule::Ref<_1d1e5192e_CommentGroup> self{};

	jule::Slice<jule::Ref<_1d1e5192e_Comment>> _field_comments{jule::Slice<jule::Ref<_1d1e5192e_Comment>>()};


	_1d1e5192e_CommentGroup(jule::Slice<jule::Ref<_1d1e5192e_Comment>> __param_comments) {
		this->self = jule::Ref<_1d1e5192e_CommentGroup>::make(this, nullptr);

		this->_field_comments = __param_comments;
	}

	~_1d1e5192e_CommentGroup(void) { this->self.ref = nullptr; }

	_1d1e5192e_CommentGroup(void) { this->self = jule::Ref<_1d1e5192e_CommentGroup>::make(this, nullptr); }

	inline bool operator==(const _1d1e5192e_CommentGroup &_Src) const {
		return 
			this->_field_comments == _Src._field_comments;
	}

	inline bool operator!=(const _1d1e5192e_CommentGroup &_Src) const { return !this->operator==(_Src); }
};


struct _1d1e5192e_NamespaceTypeDecl {
	jule::Ref<_1d1e5192e_NamespaceTypeDecl> self{};

	jule::Slice<_1d1da4277_Token> _field_idents{jule::Slice<_1d1da4277_Token>()};
	jule::Ref<_1d1e5192e_IdentTypeDecl> _field_kind{jule::Ref<_1d1e5192e_IdentTypeDecl>()};


	_1d1e5192e_NamespaceTypeDecl(jule::Slice<_1d1da4277_Token> __param_idents, jule::Ref<_1d1e5192e_IdentTypeDecl> __param_kind) {
		this->self = jule::Ref<_1d1e5192e_NamespaceTypeDecl>::make(this, nullptr);

		this->_field_idents = __param_idents;
		this->_field_kind = __param_kind;
	}

	~_1d1e5192e_NamespaceTypeDecl(void) { this->self.ref = nullptr; }

	_1d1e5192e_NamespaceTypeDecl(void) { this->self = jule::Ref<_1d1e5192e_NamespaceTypeDecl>::make(this, nullptr); }

	inline bool operator==(const _1d1e5192e_NamespaceTypeDecl &_Src) const {
		return 
			this->_field_idents == _Src._field_idents &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1d1e5192e_NamespaceTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1d1e5192e_RefTypeDecl {
	jule::Ref<_1d1e5192e_RefTypeDecl> self{};

	jule::Ref<_1d1e5192e_TypeDecl> _field_elem{jule::Ref<_1d1e5192e_TypeDecl>()};


	_1d1e5192e_RefTypeDecl(jule::Ref<_1d1e5192e_TypeDecl> __param_elem) {
		this->self = jule::Ref<_1d1e5192e_RefTypeDecl>::make(this, nullptr);

		this->_field_elem = __param_elem;
	}

	~_1d1e5192e_RefTypeDecl(void) { this->self.ref = nullptr; }

	_1d1e5192e_RefTypeDecl(void) { this->self = jule::Ref<_1d1e5192e_RefTypeDecl>::make(this, nullptr); }

	inline bool operator==(const _1d1e5192e_RefTypeDecl &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _1d1e5192e_RefTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1d1e5192e_SlcTypeDecl {
	jule::Ref<_1d1e5192e_SlcTypeDecl> self{};

	jule::Ref<_1d1e5192e_TypeDecl> _field_elem{jule::Ref<_1d1e5192e_TypeDecl>()};


	_1d1e5192e_SlcTypeDecl(jule::Ref<_1d1e5192e_TypeDecl> __param_elem) {
		this->self = jule::Ref<_1d1e5192e_SlcTypeDecl>::make(this, nullptr);

		this->_field_elem = __param_elem;
	}

	~_1d1e5192e_SlcTypeDecl(void) { this->self.ref = nullptr; }

	_1d1e5192e_SlcTypeDecl(void) { this->self = jule::Ref<_1d1e5192e_SlcTypeDecl>::make(this, nullptr); }

	inline bool operator==(const _1d1e5192e_SlcTypeDecl &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _1d1e5192e_SlcTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1d1e5192e_TupleTypeDecl {
	jule::Ref<_1d1e5192e_TupleTypeDecl> self{};

	jule::Slice<jule::Ref<_1d1e5192e_TypeDecl>> _field_types{jule::Slice<jule::Ref<_1d1e5192e_TypeDecl>>()};


	_1d1e5192e_TupleTypeDecl(jule::Slice<jule::Ref<_1d1e5192e_TypeDecl>> __param_types) {
		this->self = jule::Ref<_1d1e5192e_TupleTypeDecl>::make(this, nullptr);

		this->_field_types = __param_types;
	}

	~_1d1e5192e_TupleTypeDecl(void) { this->self.ref = nullptr; }

	_1d1e5192e_TupleTypeDecl(void) { this->self = jule::Ref<_1d1e5192e_TupleTypeDecl>::make(this, nullptr); }

	inline bool operator==(const _1d1e5192e_TupleTypeDecl &_Src) const {
		return 
			this->_field_types == _Src._field_types;
	}

	inline bool operator!=(const _1d1e5192e_TupleTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1d1e5192e_PtrTypeDecl {
	jule::Ref<_1d1e5192e_PtrTypeDecl> self{};

	jule::Ref<_1d1e5192e_TypeDecl> _field_elem{jule::Ref<_1d1e5192e_TypeDecl>()};


	_1d1e5192e_PtrTypeDecl(jule::Ref<_1d1e5192e_TypeDecl> __param_elem) {
		this->self = jule::Ref<_1d1e5192e_PtrTypeDecl>::make(this, nullptr);

		this->_field_elem = __param_elem;
	}

	~_1d1e5192e_PtrTypeDecl(void) { this->self.ref = nullptr; }

	_1d1e5192e_PtrTypeDecl(void) { this->self = jule::Ref<_1d1e5192e_PtrTypeDecl>::make(this, nullptr); }

	inline jule::Bool _method_is_unsafe(void);


	inline bool operator==(const _1d1e5192e_PtrTypeDecl &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _1d1e5192e_PtrTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1d1e5192e_ArrTypeDecl {
	jule::Ref<_1d1e5192e_ArrTypeDecl> self{};

	jule::Ref<_1d1e5192e_TypeDecl> _field_elem{jule::Ref<_1d1e5192e_TypeDecl>()};
	jule::Ref<_1d1e5192e_Expr> _field_size{jule::Ref<_1d1e5192e_Expr>()};


	_1d1e5192e_ArrTypeDecl(jule::Ref<_1d1e5192e_TypeDecl> __param_elem, jule::Ref<_1d1e5192e_Expr> __param_size) {
		this->self = jule::Ref<_1d1e5192e_ArrTypeDecl>::make(this, nullptr);

		this->_field_elem = __param_elem;
		this->_field_size = __param_size;
	}

	~_1d1e5192e_ArrTypeDecl(void) { this->self.ref = nullptr; }

	_1d1e5192e_ArrTypeDecl(void) { this->self = jule::Ref<_1d1e5192e_ArrTypeDecl>::make(this, nullptr); }

	inline jule::Bool _method_auto_sized(void);


	inline bool operator==(const _1d1e5192e_ArrTypeDecl &_Src) const {
		return 
			this->_field_elem == _Src._field_elem &&
			this->_field_size == _Src._field_size;
	}

	inline bool operator!=(const _1d1e5192e_ArrTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1d1e5192e_MapTypeDecl {
	jule::Ref<_1d1e5192e_MapTypeDecl> self{};

	jule::Ref<_1d1e5192e_TypeDecl> _field_key{jule::Ref<_1d1e5192e_TypeDecl>()};
	jule::Ref<_1d1e5192e_TypeDecl> _field_val{jule::Ref<_1d1e5192e_TypeDecl>()};


	_1d1e5192e_MapTypeDecl(jule::Ref<_1d1e5192e_TypeDecl> __param_key, jule::Ref<_1d1e5192e_TypeDecl> __param_val) {
		this->self = jule::Ref<_1d1e5192e_MapTypeDecl>::make(this, nullptr);

		this->_field_key = __param_key;
		this->_field_val = __param_val;
	}

	~_1d1e5192e_MapTypeDecl(void) { this->self.ref = nullptr; }

	_1d1e5192e_MapTypeDecl(void) { this->self = jule::Ref<_1d1e5192e_MapTypeDecl>::make(this, nullptr); }

	inline bool operator==(const _1d1e5192e_MapTypeDecl &_Src) const {
		return 
			this->_field_key == _Src._field_key &&
			this->_field_val == _Src._field_val;
	}

	inline bool operator!=(const _1d1e5192e_MapTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1d1e5192e_RetTypeDecl {
	jule::Ref<_1d1e5192e_RetTypeDecl> self{};

	jule::Ref<_1d1e5192e_TypeDecl> _field_kind{jule::Ref<_1d1e5192e_TypeDecl>()};
	jule::Slice<_1d1da4277_Token> _field_idents{jule::Slice<_1d1da4277_Token>()};


	_1d1e5192e_RetTypeDecl(jule::Ref<_1d1e5192e_TypeDecl> __param_kind, jule::Slice<_1d1da4277_Token> __param_idents) {
		this->self = jule::Ref<_1d1e5192e_RetTypeDecl>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_idents = __param_idents;
	}

	~_1d1e5192e_RetTypeDecl(void) { this->self.ref = nullptr; }

	_1d1e5192e_RetTypeDecl(void) { this->self = jule::Ref<_1d1e5192e_RetTypeDecl>::make(this, nullptr); }

	inline bool operator==(const _1d1e5192e_RetTypeDecl &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_idents == _Src._field_idents;
	}

	inline bool operator!=(const _1d1e5192e_RetTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1d1e5192e_TupleExpr {
	jule::Ref<_1d1e5192e_TupleExpr> self{};

	jule::Slice<jule::Ref<_1d1e5192e_Expr>> _field_expr{jule::Slice<jule::Ref<_1d1e5192e_Expr>>()};


	_1d1e5192e_TupleExpr(jule::Slice<jule::Ref<_1d1e5192e_Expr>> __param_expr) {
		this->self = jule::Ref<_1d1e5192e_TupleExpr>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_1d1e5192e_TupleExpr(void) { this->self.ref = nullptr; }

	_1d1e5192e_TupleExpr(void) { this->self = jule::Ref<_1d1e5192e_TupleExpr>::make(this, nullptr); }

	inline bool operator==(const _1d1e5192e_TupleExpr &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1d1e5192e_TupleExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1d1e5192e_CastExpr {
	jule::Ref<_1d1e5192e_CastExpr> self{};

	jule::Ref<_1d1e5192e_TypeDecl> _field_kind{jule::Ref<_1d1e5192e_TypeDecl>()};
	jule::Any _field_expr{jule::Any()};


	_1d1e5192e_CastExpr(jule::Ref<_1d1e5192e_TypeDecl> __param_kind, jule::Any __param_expr) {
		this->self = jule::Ref<_1d1e5192e_CastExpr>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_expr = __param_expr;
	}

	~_1d1e5192e_CastExpr(void) { this->self.ref = nullptr; }

	_1d1e5192e_CastExpr(void) { this->self = jule::Ref<_1d1e5192e_CastExpr>::make(this, nullptr); }

	inline bool operator==(const _1d1e5192e_CastExpr &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1d1e5192e_CastExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1d1e5192e_StructLit {
	jule::Ref<_1d1e5192e_StructLit> self{};

	jule::Ref<_1d1e5192e_TypeDecl> _field_kind{jule::Ref<_1d1e5192e_TypeDecl>()};
	jule::Slice<jule::Any> _field_exprs{jule::Slice<jule::Any>()};


	_1d1e5192e_StructLit(jule::Ref<_1d1e5192e_TypeDecl> __param_kind, jule::Slice<jule::Any> __param_exprs) {
		this->self = jule::Ref<_1d1e5192e_StructLit>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_exprs = __param_exprs;
	}

	~_1d1e5192e_StructLit(void) { this->self.ref = nullptr; }

	_1d1e5192e_StructLit(void) { this->self = jule::Ref<_1d1e5192e_StructLit>::make(this, nullptr); }

	inline bool operator==(const _1d1e5192e_StructLit &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_exprs == _Src._field_exprs;
	}

	inline bool operator!=(const _1d1e5192e_StructLit &_Src) const { return !this->operator==(_Src); }
};


struct _1d1e5192e_ScopeTree {
	jule::Ref<_1d1e5192e_ScopeTree> self{};

	jule::Ref<_1d1e5192e_ScopeTree> _field_parent{jule::Ref<_1d1e5192e_ScopeTree>()};
	jule::Bool _field_unsafety{jule::Bool()};
	jule::Bool _field_deferred{jule::Bool()};
	jule::Slice<jule::Any> _field_stmts{jule::Slice<jule::Any>()};


	_1d1e5192e_ScopeTree(jule::Ref<_1d1e5192e_ScopeTree> __param_parent, jule::Bool __param_unsafety, jule::Bool __param_deferred, jule::Slice<jule::Any> __param_stmts) {
		this->self = jule::Ref<_1d1e5192e_ScopeTree>::make(this, nullptr);

		this->_field_parent = __param_parent;
		this->_field_unsafety = __param_unsafety;
		this->_field_deferred = __param_deferred;
		this->_field_stmts = __param_stmts;
	}

	~_1d1e5192e_ScopeTree(void) { this->self.ref = nullptr; }

	_1d1e5192e_ScopeTree(void) { this->self = jule::Ref<_1d1e5192e_ScopeTree>::make(this, nullptr); }

	inline bool operator==(const _1d1e5192e_ScopeTree &_Src) const {
		return 
			this->_field_parent == _Src._field_parent &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_deferred == _Src._field_deferred &&
			this->_field_stmts == _Src._field_stmts;
	}

	inline bool operator!=(const _1d1e5192e_ScopeTree &_Src) const { return !this->operator==(_Src); }
};


struct _1d1e5192e_Conditional {
	jule::Ref<_1d1e5192e_Conditional> self{};

	jule::Ref<_1d1e5192e_If> _field_head{jule::Ref<_1d1e5192e_If>()};
	jule::Slice<jule::Ref<_1d1e5192e_If>> _field_tail{jule::Slice<jule::Ref<_1d1e5192e_If>>()};
	jule::Ref<_1d1e5192e_Else> _field_default{jule::Ref<_1d1e5192e_Else>()};


	_1d1e5192e_Conditional(jule::Ref<_1d1e5192e_If> __param_head, jule::Slice<jule::Ref<_1d1e5192e_If>> __param_tail, jule::Ref<_1d1e5192e_Else> __param_default) {
		this->self = jule::Ref<_1d1e5192e_Conditional>::make(this, nullptr);

		this->_field_head = __param_head;
		this->_field_tail = __param_tail;
		this->_field_default = __param_default;
	}

	~_1d1e5192e_Conditional(void) { this->self.ref = nullptr; }

	_1d1e5192e_Conditional(void) { this->self = jule::Ref<_1d1e5192e_Conditional>::make(this, nullptr); }

	inline bool operator==(const _1d1e5192e_Conditional &_Src) const {
		return 
			this->_field_head == _Src._field_head &&
			this->_field_tail == _Src._field_tail &&
			this->_field_default == _Src._field_default;
	}

	inline bool operator!=(const _1d1e5192e_Conditional &_Src) const { return !this->operator==(_Src); }
};


struct _1d1ee1617_FileInfo {
	jule::Ref<_1d1ee1617_FileInfo> self{};

	jule::Ref<_1d21640e7_Ast> _field_ast{jule::Ref<_1d21640e7_Ast>()};
	jule::Slice<_1d0557e9e_Log> _field_errors{jule::Slice<_1d0557e9e_Log>()};


	_1d1ee1617_FileInfo(jule::Ref<_1d21640e7_Ast> __param_ast, jule::Slice<_1d0557e9e_Log> __param_errors) {
		this->self = jule::Ref<_1d1ee1617_FileInfo>::make(this, nullptr);

		this->_field_ast = __param_ast;
		this->_field_errors = __param_errors;
	}

	~_1d1ee1617_FileInfo(void) { this->self.ref = nullptr; }

	_1d1ee1617_FileInfo(void) { this->self = jule::Ref<_1d1ee1617_FileInfo>::make(this, nullptr); }

	inline bool operator==(const _1d1ee1617_FileInfo &_Src) const {
		return 
			this->_field_ast == _Src._field_ast &&
			this->_field_errors == _Src._field_errors;
	}

	inline bool operator!=(const _1d1ee1617_FileInfo &_Src) const { return !this->operator==(_Src); }
};


struct _1d1ee1617_PackageInfo {
	jule::Ref<_1d1ee1617_PackageInfo> self{};

	jule::Slice<jule::Ref<_1d1ee1617_FileInfo>> _field_files{jule::Slice<jule::Ref<_1d1ee1617_FileInfo>>()};


	_1d1ee1617_PackageInfo(jule::Slice<jule::Ref<_1d1ee1617_FileInfo>> __param_files) {
		this->self = jule::Ref<_1d1ee1617_PackageInfo>::make(this, nullptr);

		this->_field_files = __param_files;
	}

	~_1d1ee1617_PackageInfo(void) { this->self.ref = nullptr; }

	_1d1ee1617_PackageInfo(void) { this->self = jule::Ref<_1d1ee1617_PackageInfo>::make(this, nullptr); }

	inline bool operator==(const _1d1ee1617_PackageInfo &_Src) const {
		return 
			this->_field_files == _Src._field_files;
	}

	inline bool operator!=(const _1d1ee1617_PackageInfo &_Src) const { return !this->operator==(_Src); }
};


struct _1d21a4698_Stmt {
	jule::Ref<_1d21a4698_Stmt> self{};

	jule::Slice<_1d1da4277_Token> _field_tokens{jule::Slice<_1d1da4277_Token>()};
	jule::Bool _field_terminated{jule::Bool()};


	_1d21a4698_Stmt(jule::Slice<_1d1da4277_Token> __param_tokens, jule::Bool __param_terminated) {
		this->self = jule::Ref<_1d21a4698_Stmt>::make(this, nullptr);

		this->_field_tokens = __param_tokens;
		this->_field_terminated = __param_terminated;
	}

	~_1d21a4698_Stmt(void) { this->self.ref = nullptr; }

	_1d21a4698_Stmt(void) { this->self = jule::Ref<_1d21a4698_Stmt>::make(this, nullptr); }

	inline bool operator==(const _1d21a4698_Stmt &_Src) const {
		return 
			this->_field_tokens == _Src._field_tokens &&
			this->_field_terminated == _Src._field_terminated;
	}

	inline bool operator!=(const _1d21a4698_Stmt &_Src) const { return !this->operator==(_Src); }
};


struct _1d21a4698_ScopeParser {
	jule::Ref<_1d21a4698_ScopeParser> self{};

	jule::Ref<_1d21abb45_Parser> _field_p{jule::Ref<_1d21abb45_Parser>()};
	jule::Ref<_1d1e5192e_ScopeTree> _field_s{jule::Ref<_1d1e5192e_ScopeTree>()};
	jule::Slice<jule::Ref<_1d21a4698_Stmt>> _field_stms{jule::Slice<jule::Ref<_1d21a4698_Stmt>>()};
	jule::Int _field_pos{jule::Int()};


	_1d21a4698_ScopeParser(jule::Ref<_1d21abb45_Parser> __param_p, jule::Ref<_1d1e5192e_ScopeTree> __param_s, jule::Slice<jule::Ref<_1d21a4698_Stmt>> __param_stms, jule::Int __param_pos) {
		this->self = jule::Ref<_1d21a4698_ScopeParser>::make(this, nullptr);

		this->_field_p = __param_p;
		this->_field_s = __param_s;
		this->_field_stms = __param_stms;
		this->_field_pos = __param_pos;
	}

	~_1d21a4698_ScopeParser(void) { this->self.ref = nullptr; }

	_1d21a4698_ScopeParser(void) { this->self = jule::Ref<_1d21a4698_ScopeParser>::make(this, nullptr); }

	inline void _method_stop(void);


	inline jule::Bool _method_stopped(void);


	inline jule::Bool _method_finished(void);


	inline jule::Bool _method_is_last_st(void);


	inline void _method_push_err(_1d1da4277_Token,jule::Str);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline void _method_insert_as_next(jule::Slice<_1d1da4277_Token>&);


	inline jule::Ref<_1d21a4698_Stmt> _method_next(void);


	inline jule::Ref<_1d1e5192e_ScopeTree> _method_build_scope(jule::Slice<_1d1da4277_Token>&);


	inline jule::Any _method_build_var_st(jule::Slice<_1d1da4277_Token>&);


	inline jule::Any _method_build_ret_st(jule::Slice<_1d1da4277_Token>);


	inline jule::Any _method_build_while_next_iter(jule::Ref<_1d21a4698_Stmt>&);


	inline jule::Ref<_1d1e5192e_WhileKind> _method_build_while_iter_kind(jule::Slice<_1d1da4277_Token>&);


	inline jule::Slice<jule::Slice<_1d1da4277_Token>> _method_get_range_kind_keys_tokens(jule::Slice<_1d1da4277_Token>&);


	inline jule::Ref<_1d1e5192e_VarDecl> _method_build_range_kind_key(jule::Slice<_1d1da4277_Token>&);


	inline jule::Slice<jule::Ref<_1d1e5192e_VarDecl>> _method_build_range_kind_keys(jule::Slice<jule::Slice<_1d1da4277_Token>>&);


	inline void _method_setup_range_kind_keys_plain(jule::Ref<_1d1e5192e_RangeKind>&,jule::Slice<_1d1da4277_Token>&);


	inline void _method_setup_range_kind_keys_explicit(jule::Ref<_1d1e5192e_RangeKind>&,jule::Slice<_1d1da4277_Token>&);


	inline void _method_setup_range_kind_keys(jule::Ref<_1d1e5192e_RangeKind>&,jule::Slice<_1d1da4277_Token>&);


	inline jule::Ref<_1d1e5192e_RangeKind> _method_build_range_iter_kind(jule::Slice<_1d1da4277_Token>&,jule::Slice<_1d1da4277_Token>&,_1d1da4277_Token&);


	inline jule::Any _method_build_common_iter_kind(jule::Slice<_1d1da4277_Token>&,_1d1da4277_Token&);


	inline jule::Any _method_build_common_iter(jule::Slice<_1d1da4277_Token>);


	inline jule::Any _method_buid_iter_st(jule::Ref<_1d21a4698_Stmt>&);


	inline jule::Any _method_build_break_st(jule::Slice<_1d1da4277_Token>&);


	inline jule::Any _method_build_cont_st(jule::Slice<_1d1da4277_Token>&);


	inline jule::Ref<_1d1e5192e_If> _method_build_if(jule::Slice<_1d1da4277_Token>&);


	inline jule::Ref<_1d1e5192e_Else> _method_build_else(jule::Slice<_1d1da4277_Token>&);


	inline jule::Any _method_build_if_else_chain(jule::Slice<_1d1da4277_Token>);


	inline jule::Any _method_build_comment_st(_1d1da4277_Token&);


	inline jule::Any _method_build_call_st(jule::Slice<_1d1da4277_Token>&);


	inline jule::Any _method_build_co_call_st(jule::Slice<_1d1da4277_Token>);


	inline jule::Any _method_build_goto_st(jule::Slice<_1d1da4277_Token>&);


	inline jule::Any _method_build_fall_st(jule::Slice<_1d1da4277_Token>&);


	inline jule::Any _method_build_type_alias_st(jule::Slice<_1d1da4277_Token>&);


	inline void _method_push_case_expr(jule::Slice<_1d1da4277_Token>,_1d1da4277_Token,jule::Bool,jule::Slice<jule::Ref<_1d1e5192e_Expr>>&);


	inline jule::Slice<jule::Ref<_1d1e5192e_Expr>> _method_build_case_exprs(jule::Slice<_1d1da4277_Token>&,jule::Bool);


	inline jule::Ref<_1d1e5192e_ScopeTree> _method_build_case_scope(jule::Slice<_1d1da4277_Token>&);


	inline std::tuple<jule::Ref<_1d1e5192e_Case>,jule::Bool> _method_build_case(jule::Slice<_1d1da4277_Token>&,jule::Bool);


	inline std::tuple<jule::Slice<jule::Ref<_1d1e5192e_Case>>,jule::Ref<_1d1e5192e_Else>> _method_build_cases(jule::Slice<_1d1da4277_Token>,jule::Bool);


	inline jule::Ref<_1d1e5192e_MatchCase> _method_build_match_case(jule::Slice<_1d1da4277_Token>);


	inline jule::Ref<_1d1e5192e_ScopeTree> _method_build_scope_st(jule::Slice<_1d1da4277_Token>);


	inline jule::Ref<_1d1e5192e_LabelSt> _method_build_label_st(jule::Slice<_1d1da4277_Token>&);


	inline std::tuple<jule::Any,jule::Bool> _method_build_id_st(jule::Slice<_1d1da4277_Token>&);


	inline jule::Ref<_1d21bd937_AssignInfo> _method_build_assign_info(jule::Slice<_1d1da4277_Token>&);


	inline jule::Ref<_1d1e5192e_AssignLeft> _method_build_assign_l(jule::Slice<_1d1da4277_Token>&);


	inline jule::Slice<jule::Ref<_1d1e5192e_AssignLeft>> _method_build_assign_ls(jule::Slice<jule::Slice<_1d1da4277_Token>>&);


	inline std::tuple<jule::Ref<_1d1e5192e_AssignSt>,jule::Bool> _method_build_plain_assign(jule::Slice<_1d1da4277_Token>&);


	inline std::tuple<jule::Ref<_1d1e5192e_AssignSt>,jule::Bool> _method_build_decl_assign(jule::Slice<_1d1da4277_Token>);


	inline std::tuple<jule::Ref<_1d1e5192e_AssignSt>,jule::Bool> _method_build_assign_st(jule::Slice<_1d1da4277_Token>&);


	inline jule::Any _method_build_st(jule::Ref<_1d21a4698_Stmt>&);


	inline void _method_build(jule::Slice<_1d1da4277_Token>&,jule::Ref<_1d1e5192e_ScopeTree>&);


	inline bool operator==(const _1d21a4698_ScopeParser &_Src) const {
		return 
			this->_field_p == _Src._field_p &&
			this->_field_s == _Src._field_s &&
			this->_field_stms == _Src._field_stms &&
			this->_field_pos == _Src._field_pos;
	}

	inline bool operator!=(const _1d21a4698_ScopeParser &_Src) const { return !this->operator==(_Src); }
};


struct _1d21b6e08_CallData {
	jule::Ref<_1d21b6e08_CallData> self{};

	jule::Slice<_1d1da4277_Token> _field_expr_tokens{jule::Slice<_1d1da4277_Token>()};
	jule::Slice<_1d1da4277_Token> _field_args_tokens{jule::Slice<_1d1da4277_Token>()};
	jule::Slice<_1d1da4277_Token> _field_generics_tokens{jule::Slice<_1d1da4277_Token>()};


	_1d21b6e08_CallData(jule::Slice<_1d1da4277_Token> __param_expr_tokens, jule::Slice<_1d1da4277_Token> __param_args_tokens, jule::Slice<_1d1da4277_Token> __param_generics_tokens) {
		this->self = jule::Ref<_1d21b6e08_CallData>::make(this, nullptr);

		this->_field_expr_tokens = __param_expr_tokens;
		this->_field_args_tokens = __param_args_tokens;
		this->_field_generics_tokens = __param_generics_tokens;
	}

	~_1d21b6e08_CallData(void) { this->self.ref = nullptr; }

	_1d21b6e08_CallData(void) { this->self = jule::Ref<_1d21b6e08_CallData>::make(this, nullptr); }

	inline bool operator==(const _1d21b6e08_CallData &_Src) const {
		return 
			this->_field_expr_tokens == _Src._field_expr_tokens &&
			this->_field_args_tokens == _Src._field_args_tokens &&
			this->_field_generics_tokens == _Src._field_generics_tokens;
	}

	inline bool operator!=(const _1d21b6e08_CallData &_Src) const { return !this->operator==(_Src); }
};


struct _1d21b6e08_Precedencer {
	jule::Ref<_1d21b6e08_Precedencer> self{};

	jule::Slice<jule::Slice<jule::Any>> _field_pairs{jule::Slice<jule::Slice<jule::Any>>()};


	_1d21b6e08_Precedencer(jule::Slice<jule::Slice<jule::Any>> __param_pairs) {
		this->self = jule::Ref<_1d21b6e08_Precedencer>::make(this, nullptr);

		this->_field_pairs = __param_pairs;
	}

	~_1d21b6e08_Precedencer(void) { this->self.ref = nullptr; }

	_1d21b6e08_Precedencer(void) { this->self = jule::Ref<_1d21b6e08_Precedencer>::make(this, nullptr); }

	inline void _method_set(jule::Int,jule::Any);


	inline jule::Any _method_get_lower(void);


	inline bool operator==(const _1d21b6e08_Precedencer &_Src) const {
		return 
			this->_field_pairs == _Src._field_pairs;
	}

	inline bool operator!=(const _1d21b6e08_Precedencer &_Src) const { return !this->operator==(_Src); }
};


struct _1d21b6e08_ExprBuilder {
	jule::Ref<_1d21b6e08_ExprBuilder> self{};

	jule::Ref<_1d21abb45_Parser> _field_p{jule::Ref<_1d21abb45_Parser>()};


	_1d21b6e08_ExprBuilder(jule::Ref<_1d21abb45_Parser> __param_p) {
		this->self = jule::Ref<_1d21b6e08_ExprBuilder>::make(this, nullptr);

		this->_field_p = __param_p;
	}

	~_1d21b6e08_ExprBuilder(void) { this->self.ref = nullptr; }

	_1d21b6e08_ExprBuilder(void) { this->self = jule::Ref<_1d21b6e08_ExprBuilder>::make(this, nullptr); }

	inline void _method_push_err(_1d1da4277_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline jule::Ref<_1d1e5192e_TupleExpr> _method_build_tuple(jule::Slice<jule::Slice<_1d1da4277_Token>>&);


	inline jule::Ref<_1d1e5192e_LitExpr> _method_build_lit(_1d1da4277_Token);


	inline jule::Ref<_1d1e5192e_TypeDecl> _method_build_primitive_type(_1d1da4277_Token&);


	inline jule::Any _method_build_single(_1d1da4277_Token);


	inline jule::Ref<_1d1e5192e_IdentExpr> _method_build_cpp_linked_ident(jule::Slice<_1d1da4277_Token>&);


	inline jule::Ref<_1d1e5192e_UnaryExpr> _method_build_unary(jule::Slice<_1d1da4277_Token>);


	inline jule::Ref<_1d1e5192e_SubIdentExpr> _method_build_obj_sub_ident(jule::Slice<_1d1da4277_Token>);


	inline jule::Ref<_1d1e5192e_NsSelectionExpr> _method_build_ns_sub_ident(jule::Slice<_1d1da4277_Token>&);


	inline jule::Ref<_1d1e5192e_TypeDecl> _method_build_type(jule::Slice<_1d1da4277_Token>&);


	inline jule::Any _method_build_sub_ident(jule::Slice<_1d1da4277_Token>&);


	inline jule::Ref<_1d1e5192e_VariadicExpr> _method_build_variadic(jule::Slice<_1d1da4277_Token>);


	inline jule::Any _method_build_op_right(jule::Slice<_1d1da4277_Token>&);


	inline jule::Any _method_build_between_parentheses(jule::Slice<_1d1da4277_Token>);


	inline jule::Ref<_1d1e5192e_CastExpr> _method_try_build_cast(jule::Slice<_1d1da4277_Token>&);


	inline void _method_push_arg(jule::Slice<jule::Ref<_1d1e5192e_Expr>>&,jule::Slice<_1d1da4277_Token>,_1d1da4277_Token);


	inline jule::Slice<jule::Ref<_1d1e5192e_Expr>> _method_build_args(jule::Slice<_1d1da4277_Token>);


	inline jule::Slice<jule::Ref<_1d1e5192e_TypeDecl>> _method_build_call_generics(jule::Slice<_1d1da4277_Token>);


	inline jule::Ref<_1d1e5192e_FnCallExpr> _method_build_fn_call(_1d1da4277_Token&,jule::Ref<_1d21b6e08_CallData>&);


	inline jule::Any _method_build_parentheses_range(jule::Slice<_1d1da4277_Token>&);


	inline jule::Ref<_1d1e5192e_UnsafeExpr> _method_build_unsafe_expr(jule::Slice<_1d1da4277_Token>);


	inline jule::Ref<_1d1e5192e_FnDecl> _method_build_anon_fn(jule::Slice<_1d1da4277_Token>&);


	inline jule::Any _method_build_unsafe(jule::Slice<_1d1da4277_Token>&);


	inline void _method_push_range_lit_part(jule::Slice<_1d1da4277_Token>,_1d1da4277_Token,jule::Slice<jule::Slice<_1d1da4277_Token>>&);


	inline jule::Slice<jule::Slice<_1d1da4277_Token>> _method_get_brace_range_lit_expr_parts(jule::Slice<_1d1da4277_Token>);


	inline jule::Ref<_1d1e5192e_FieldExprPair> _method_build_field_expr_pair(jule::Slice<_1d1da4277_Token>);


	inline jule::Any _method_build_struct_lit_expr(jule::Slice<_1d1da4277_Token>&);


	inline jule::Slice<jule::Any> _method_build_struct_lit_exprs(jule::Slice<_1d1da4277_Token>&);


	inline jule::Ref<_1d1e5192e_StructLit> _method_build_typed_struct_literal(jule::Slice<_1d1da4277_Token>);


	inline jule::Any _method_build_brace_lit_part(jule::Slice<_1d1da4277_Token>&);


	inline jule::Ref<_1d1e5192e_BraceLit> _method_build_brace_lit(jule::Slice<_1d1da4277_Token>&);


	inline jule::Any _method_build_brace_range(jule::Slice<_1d1da4277_Token>&);


	inline jule::Slice<jule::Slice<_1d1da4277_Token>> _method_get_enumerable_parts(jule::Slice<_1d1da4277_Token>);


	inline jule::Ref<_1d1e5192e_SliceExpr> _method_build_slice(jule::Slice<_1d1da4277_Token>);


	inline jule::Ref<_1d1e5192e_IndexingExpr> _method_build_indexing(jule::Slice<_1d1da4277_Token>,jule::Slice<_1d1da4277_Token>,_1d1da4277_Token);


	inline jule::Ref<_1d1e5192e_SlicingExpr> _method_build_slicing(jule::Slice<_1d1da4277_Token>&,jule::Slice<_1d1da4277_Token>&,jule::Int&,_1d1da4277_Token&);


	inline jule::Any _method_build_bracket_range(jule::Slice<_1d1da4277_Token>);


	inline jule::Any _method_build_ternary(jule::Slice<_1d1da4277_Token>);


	inline jule::Any _method_build_data(jule::Slice<_1d1da4277_Token>&);


	inline jule::Ref<_1d1e5192e_BinopExpr> _method_build_binop(jule::Slice<_1d1da4277_Token>&,jule::Int);


	inline jule::Any _method_build(jule::Slice<_1d1da4277_Token>&);


	inline jule::Any _method_build_kind(jule::Slice<_1d1da4277_Token>&);


	inline jule::Ref<_1d1e5192e_Expr> _method_build_from_tokens(jule::Slice<_1d1da4277_Token>);


	inline bool operator==(const _1d21b6e08_ExprBuilder &_Src) const {
		return 
			this->_field_p == _Src._field_p;
	}

	inline bool operator!=(const _1d21b6e08_ExprBuilder &_Src) const { return !this->operator==(_Src); }
};


struct _1d21abb45_Parser {
	jule::Ref<_1d21abb45_Parser> self{};

	jule::Ref<_1d21640e7_Ast> _field_ast{jule::Ref<_1d21640e7_Ast>()};
	jule::Slice<jule::Ref<_1d1e5192e_Directive>> _field_directives{jule::Slice<jule::Ref<_1d1e5192e_Directive>>()};
	jule::Ref<_1d1e5192e_CommentGroup> _field_comment_group{jule::Ref<_1d1e5192e_CommentGroup>()};
	jule::Slice<_1d0557e9e_Log> _field_errors{jule::Slice<_1d0557e9e_Log>()};


	_1d21abb45_Parser(jule::Ref<_1d21640e7_Ast> __param_ast, jule::Slice<jule::Ref<_1d1e5192e_Directive>> __param_directives, jule::Ref<_1d1e5192e_CommentGroup> __param_comment_group, jule::Slice<_1d0557e9e_Log> __param_errors) {
		this->self = jule::Ref<_1d21abb45_Parser>::make(this, nullptr);

		this->_field_ast = __param_ast;
		this->_field_directives = __param_directives;
		this->_field_comment_group = __param_comment_group;
		this->_field_errors = __param_errors;
	}

	~_1d21abb45_Parser(void) { this->self.ref = nullptr; }

	_1d21abb45_Parser(void) { this->self = jule::Ref<_1d21abb45_Parser>::make(this, nullptr); }

	inline void _method_stop(void);


	inline jule::Bool _method_stopped(void);


	inline void _method_push_err(_1d1da4277_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline jule::Ref<_1d1e5192e_Expr> _method_build_expr(jule::Slice<_1d1da4277_Token>&);


	inline jule::Ref<_1d1e5192e_Directive> _method_get_directive(jule::Ref<_1d1e5192e_Comment>);


	inline void _method_push_directive(jule::Ref<_1d1e5192e_Comment>&);


	inline void _method_process_comment(jule::Ref<_1d1e5192e_Comment>&);


	inline jule::Ref<_1d1e5192e_ScopeTree> _method_build_scope(jule::Slice<_1d1da4277_Token>&);


	inline std::tuple<jule::Ref<_1d1e5192e_TypeDecl>,jule::Bool> _method___build_type(jule::Slice<_1d1da4277_Token>&,jule::Int*,jule::Bool);


	inline std::tuple<jule::Ref<_1d1e5192e_TypeDecl>,jule::Bool> _method_build_type(jule::Slice<_1d1da4277_Token>&,jule::Int*,jule::Bool);


	inline jule::Ref<_1d1e5192e_TypeAliasDecl> _method_build_type_alias_decl(jule::Slice<_1d1da4277_Token>&);


	inline void _method_build_var_type_and_expr(jule::Ref<_1d1e5192e_VarDecl>&,jule::Slice<_1d1da4277_Token>&);


	inline void _method_build_var_common(jule::Ref<_1d1e5192e_VarDecl>&,jule::Slice<_1d1da4277_Token>);


	inline void _method_build_var_begin(jule::Ref<_1d1e5192e_VarDecl>&,jule::Ref<jule::Int>,jule::Slice<_1d1da4277_Token>&);


	inline jule::Ref<_1d1e5192e_VarDecl> _method_build_var(jule::Slice<_1d1da4277_Token>);


	inline jule::Ref<_1d1e5192e_GenericDecl> _method_build_generic(jule::Slice<_1d1da4277_Token>&);


	inline jule::Slice<jule::Ref<_1d1e5192e_GenericDecl>> _method_build_generics(jule::Slice<_1d1da4277_Token>&,_1d1da4277_Token&);


	inline jule::Ref<_1d1e5192e_ParamDecl> _method_build_self_param(jule::Slice<_1d1da4277_Token>);


	inline void _method_param_type_begin(jule::Ref<_1d1e5192e_ParamDecl>&,jule::Int&,jule::Slice<_1d1da4277_Token>&);


	inline void _method_build_param_type(jule::Ref<_1d1e5192e_ParamDecl>&,jule::Slice<_1d1da4277_Token>&);


	inline void _method_param_body_id(jule::Ref<_1d1e5192e_ParamDecl>,_1d1da4277_Token);


	inline void _method_build_param_body(jule::Ref<_1d1e5192e_ParamDecl>&,jule::Ref<jule::Int>,jule::Slice<_1d1da4277_Token>);


	inline jule::Ref<_1d1e5192e_ParamDecl> _method_build_param(jule::Slice<_1d1da4277_Token>);


	inline void _method_check_params(jule::Slice<jule::Ref<_1d1e5192e_ParamDecl>>&);


	inline jule::Slice<jule::Ref<_1d1e5192e_ParamDecl>> _method_build_params(jule::Slice<_1d1da4277_Token>&,jule::Bool);


	inline std::tuple<jule::Ref<_1d1e5192e_RetTypeDecl>,jule::Bool> _method_build_multi_ret_type(jule::Slice<_1d1da4277_Token>&,jule::Int&);


	inline std::tuple<jule::Ref<_1d1e5192e_RetTypeDecl>,jule::Bool> _method_build_ret_type(jule::Slice<_1d1da4277_Token>&,jule::Int&);


	inline jule::Ref<_1d1e5192e_FnDecl> _method_build_fn_prototype(jule::Slice<_1d1da4277_Token>&,jule::Int&,jule::Bool);


	inline jule::Ref<_1d1e5192e_FnDecl> _method_build_fn(jule::Slice<_1d1da4277_Token>&,jule::Bool,jule::Bool);


	inline jule::Slice<_1d1da4277_Token> _method_get_use_decl_selectors(jule::Slice<_1d1da4277_Token>);


	inline void _method_build_cpp_use_decl(jule::Ref<_1d1e5192e_UseDecl>&,jule::Slice<_1d1da4277_Token>&);


	inline void _method_build_std_use_decl(jule::Ref<_1d1e5192e_UseDecl>&,jule::Slice<_1d1da4277_Token>);


	inline void _method_build_ident_use_decl(jule::Ref<_1d1e5192e_UseDecl>&,jule::Slice<_1d1da4277_Token>);


	inline void _method_parse_use_decl(jule::Ref<_1d1e5192e_UseDecl>&,jule::Slice<_1d1da4277_Token>);


	inline jule::Ref<_1d1e5192e_UseDecl> _method_build_use_decl(jule::Slice<_1d1da4277_Token>,jule::Bool);


	inline jule::Ref<_1d1e5192e_Expr> _method_build_enum_item_expr(jule::Ref<jule::Int>,jule::Slice<_1d1da4277_Token>&);


	inline jule::Slice<jule::Ref<_1d1e5192e_EnumItemDecl>> _method_build_enum_items(jule::Slice<_1d1da4277_Token>&);


	inline jule::Ref<_1d1e5192e_EnumDecl> _method_build_enum_decl(jule::Slice<_1d1da4277_Token>&);


	inline jule::Ref<_1d1e5192e_FieldDecl> _method_build_field(jule::Slice<_1d1da4277_Token>);


	inline jule::Slice<jule::Ref<_1d1e5192e_FieldDecl>> _method_build_struct_decl_fields(jule::Slice<_1d1da4277_Token>);


	inline jule::Ref<_1d1e5192e_StructDecl> _method_build_struct_decl(jule::Slice<_1d1da4277_Token>&);


	inline void _method_check_method_receiver(jule::Ref<_1d1e5192e_FnDecl>&);


	inline jule::Slice<jule::Ref<_1d1e5192e_FnDecl>> _method_build_trait_methods(jule::Slice<_1d1da4277_Token>);


	inline jule::Ref<_1d1e5192e_TraitDecl> _method_build_trait_decl(jule::Slice<_1d1da4277_Token>&);


	inline jule::Ref<_1d1e5192e_FnDecl> _method_build_cpp_link_fn(jule::Slice<_1d1da4277_Token>);


	inline jule::Ref<_1d1e5192e_VarDecl> _method_build_cpp_link_var(jule::Slice<_1d1da4277_Token>);


	inline jule::Ref<_1d1e5192e_StructDecl> _method_build_cpp_link_struct(jule::Slice<_1d1da4277_Token>);


	inline jule::Ref<_1d1e5192e_TypeAliasDecl> _method_build_cpp_link_type_alias(jule::Slice<_1d1da4277_Token>);


	inline jule::Ref<_1d1e5192e_UseDecl> _method_build_cpp_link_use(jule::Slice<_1d1da4277_Token>);


	inline jule::Any _method_build_cpp_link(jule::Slice<_1d1da4277_Token>&);


	inline jule::Ref<_1d1e5192e_FnDecl> _method_get_method(jule::Slice<_1d1da4277_Token>&);


	inline void _method_parse_impl_body(jule::Ref<_1d1e5192e_Impl>&,jule::Slice<_1d1da4277_Token>&);


	inline jule::Ref<_1d1e5192e_Impl> _method_build_impl(jule::Slice<_1d1da4277_Token>);


	inline jule::Any _method_build_node_data(jule::Slice<_1d1da4277_Token>&);


	inline void _method_check_comment_group(_1d1e5192e_Node&);


	inline void _method_check_directive(_1d1e5192e_Node&);


	inline void _method_apply_meta(_1d1e5192e_Node&,jule::Bool);


	inline void _method_check_use_decl(_1d1e5192e_Node&);


	inline std::tuple<jule::Bool,jule::Any> _method_build_general_scope_node_data(jule::Slice<_1d1da4277_Token>);


	inline _1d1e5192e_Node _method_parse_node(jule::Slice<_1d1da4277_Token>&);


	inline void _method_append_node(jule::Slice<_1d1da4277_Token>&);


	inline void _method_remove_range(jule::Int,jule::Str,jule::Slice<_1d1da4277_Token>&,jule::Slice<jule::Int>&);


	inline void _method_push_wrong_order_close_err(_1d1da4277_Token&,jule::Slice<_1d1da4277_Token>&,jule::Slice<jule::Int>&);


	inline void _method_push_range_close(_1d1da4277_Token,jule::Str,jule::Slice<_1d1da4277_Token>&,jule::Slice<jule::Int>&);


	inline void _method_check_ranges(jule::Slice<_1d1da4277_Token>&);


	inline void _method_parse(jule::Ref<_1d1ee01b5_File>&);


	inline bool operator==(const _1d21abb45_Parser &_Src) const {
		return 
			this->_field_ast == _Src._field_ast &&
			this->_field_directives == _Src._field_directives &&
			this->_field_comment_group == _Src._field_comment_group &&
			this->_field_errors == _Src._field_errors;
	}

	inline bool operator!=(const _1d21abb45_Parser &_Src) const { return !this->operator==(_Src); }
};


struct _1b87d0ddc_TypeBuilder {
	jule::Ref<_1b87d0ddc_TypeBuilder> self{};

	jule::Ref<_1d21abb45_Parser> _field_p{jule::Ref<_1d21abb45_Parser>()};
	jule::Slice<_1d1da4277_Token> _field_tokens{jule::Slice<_1d1da4277_Token>()};
	jule::Int* _field_i{nullptr};
	jule::Bool _field_err{jule::Bool()};


	_1b87d0ddc_TypeBuilder(jule::Ref<_1d21abb45_Parser> __param_p, jule::Slice<_1d1da4277_Token> __param_tokens, jule::Int* __param_i, jule::Bool __param_err) {
		this->self = jule::Ref<_1b87d0ddc_TypeBuilder>::make(this, nullptr);

		this->_field_p = __param_p;
		this->_field_tokens = __param_tokens;
		this->_field_i = __param_i;
		this->_field_err = __param_err;
	}

	~_1b87d0ddc_TypeBuilder(void) { this->self.ref = nullptr; }

	_1b87d0ddc_TypeBuilder(void) { this->self = jule::Ref<_1b87d0ddc_TypeBuilder>::make(this, nullptr); }

	inline void _method_push_err(_1d1da4277_Token,jule::Str);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline jule::Ref<_1d1e5192e_TypeDecl> _method_build_prim(void);


	inline jule::Ref<_1d1e5192e_TypeDecl> _method_build_namespace(void);


	inline jule::Slice<jule::Ref<_1d1e5192e_TypeDecl>> _method_build_generics(void);


	inline jule::Slice<jule::Slice<_1d1da4277_Token>> _method_ident_generics(void);


	inline jule::Ref<_1d1e5192e_TypeDecl> _method_build_ident(void);


	inline jule::Ref<_1d1e5192e_TypeDecl> _method_build_cpp_link(void);


	inline jule::Ref<_1d1e5192e_TypeDecl> _method_build_fn(void);


	inline jule::Ref<_1d1e5192e_TypeDecl> _method_build_ptr(void);


	inline jule::Ref<_1d1e5192e_TypeDecl> _method_build_ref(void);


	inline jule::Ref<_1d1e5192e_TypeDecl> _method_build_op(void);


	inline jule::Ref<_1d1e5192e_TypeDecl> _method_build_slc(void);


	inline jule::Ref<_1d1e5192e_TypeDecl> _method_build_arr(void);


	inline jule::Ref<_1d1e5192e_TypeDecl> _method_build_map(jule::Int,jule::Slice<_1d1da4277_Token>&);


	inline jule::Ref<_1d1e5192e_TypeDecl> _method_build_enumerable(void);


	inline jule::Ref<_1d1e5192e_TypeDecl> _method_step(void);


	inline std::tuple<jule::Ref<_1d1e5192e_TypeDecl>,jule::Bool> _method_build(void);


	inline bool operator==(const _1b87d0ddc_TypeBuilder &_Src) const {
		return 
			this->_field_p == _Src._field_p &&
			this->_field_tokens == _Src._field_tokens &&
			this->_field_i == _Src._field_i &&
			this->_field_err == _Src._field_err;
	}

	inline bool operator!=(const _1b87d0ddc_TypeBuilder &_Src) const { return !this->operator==(_Src); }
};


struct _1b9d678e5_Const {
	jule::Ref<_1b9d678e5_Const> self{};

	jule::Any _field_data{jule::Any()};


	_1b9d678e5_Const(jule::Any __param_data) {
		this->self = jule::Ref<_1b9d678e5_Const>::make(this, nullptr);

		this->_field_data = __param_data;
	}

	~_1b9d678e5_Const(void) { this->self.ref = nullptr; }

	_1b9d678e5_Const(void) { this->self = jule::Ref<_1b9d678e5_Const>::make(this, nullptr); }

	static inline jule::Ref<_1b9d678e5_Const> _static_method_new_i64(jule::I64);


	static inline jule::Ref<_1b9d678e5_Const> _static_method_new_u64(jule::U64);


	static inline jule::Ref<_1b9d678e5_Const> _static_method_new_bool(jule::Bool);


	static inline jule::Ref<_1b9d678e5_Const> _static_method_new_str(jule::Str);


	static inline jule::Ref<_1b9d678e5_Const> _static_method_new_f64(jule::F64);


	static inline jule::Ref<_1b9d678e5_Const> _static_method_new_nil(void);


	inline jule::I64 _method_read_i64(void);


	inline jule::U64 _method_read_u64(void);


	inline jule::Bool _method_read_bool(void);


	inline jule::Str _method_read_str(void);


	inline jule::F64 _method_read_f64(void);


	inline jule::I64 _method_as_i64(void);


	inline jule::U64 _method_as_u64(void);


	inline jule::F64 _method_as_f64(void);


	inline void _method_set_i64(jule::I64);


	inline void _method_set_u64(jule::U64);


	inline void _method_set_bool(jule::Bool);


	inline void _method_set_str(jule::Str);


	inline void _method_set_f64(jule::F64);


	inline void _method_set_nil(void);


	inline jule::Bool _method_is_i64(void);


	inline jule::Bool _method_is_u64(void);


	inline jule::Bool _method_is_bool(void);


	inline jule::Bool _method_is_str(void);


	inline jule::Bool _method_is_f64(void);


	inline jule::Bool _method_is_nil(void);


	inline jule::Bool _method_are_same_types(_1b9d678e5_Const);


	inline jule::Bool _method_and(_1b9d678e5_Const);


	inline jule::Bool _method_or(_1b9d678e5_Const);


	inline jule::Bool _method_eqs(_1b9d678e5_Const);


	inline jule::Bool _method_lt(_1b9d678e5_Const);


	inline jule::Bool _method_gt(_1b9d678e5_Const);


	inline jule::Bool _method_add(_1b9d678e5_Const);


	inline jule::Bool _method_sub(_1b9d678e5_Const);


	inline jule::Bool _method_mul(_1b9d678e5_Const);


	inline jule::Bool _method_div(_1b9d678e5_Const);


	inline jule::Bool _method_mod(_1b9d678e5_Const);


	inline jule::Bool _method_bitwise_and(_1b9d678e5_Const);


	inline jule::Bool _method_bitwise_or(_1b9d678e5_Const);


	inline jule::Bool _method_xor(_1b9d678e5_Const);


	inline jule::Bool _method_lshift(_1b9d678e5_Const);


	inline jule::Bool _method_rshift(_1b9d678e5_Const);


	inline bool operator==(const _1b9d678e5_Const &_Src) const {
		return 
			this->_field_data == _Src._field_data;
	}

	inline bool operator!=(const _1b9d678e5_Const &_Src) const { return !this->operator==(_Src); }
};


struct _1d21c0b59_FieldIns {
	jule::Ref<_1d21c0b59_FieldIns> self{};

	jule::Ref<_1d21c0b59_Field> _field_decl{jule::Ref<_1d21c0b59_Field>()};
	jule::Ref<_1b951b088_TypeKind> _field_kind{jule::Ref<_1b951b088_TypeKind>()};


	_1d21c0b59_FieldIns(jule::Ref<_1d21c0b59_Field> __param_decl, jule::Ref<_1b951b088_TypeKind> __param_kind) {
		this->self = jule::Ref<_1d21c0b59_FieldIns>::make(this, nullptr);

		this->_field_decl = __param_decl;
		this->_field_kind = __param_kind;
	}

	~_1d21c0b59_FieldIns(void) { this->self.ref = nullptr; }

	_1d21c0b59_FieldIns(void) { this->self = jule::Ref<_1d21c0b59_FieldIns>::make(this, nullptr); }

	inline bool operator==(const _1d21c0b59_FieldIns &_Src) const {
		return 
			this->_field_decl == _Src._field_decl &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1d21c0b59_FieldIns &_Src) const { return !this->operator==(_Src); }
};


struct _1d21c0b59_StructIns: public _1b951b088_Kind {
	jule::Ref<_1d21c0b59_StructIns> self{};

	jule::Bool _field_checked{jule::Bool()};
	jule::Ref<_1d21c0b59_Struct> _field_decl{jule::Ref<_1d21c0b59_Struct>()};
	jule::Slice<jule::Ref<_1b951b088_TypeKind>> _field_generics{jule::Slice<jule::Ref<_1b951b088_TypeKind>>()};
	jule::Slice<jule::Ref<_1d21c0b59_FieldIns>> _field_fields{jule::Slice<jule::Ref<_1d21c0b59_FieldIns>>()};
	jule::Slice<jule::Ref<_1d21d97ee_Fn>> _field_methods{jule::Slice<jule::Ref<_1d21d97ee_Fn>>()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Ref<_1b8b10cbb_ReferenceStack> _field_references{jule::Ref<_1b8b10cbb_ReferenceStack>()};


	_1d21c0b59_StructIns(jule::Bool __param_checked, jule::Ref<_1d21c0b59_Struct> __param_decl, jule::Slice<jule::Ref<_1b951b088_TypeKind>> __param_generics, jule::Slice<jule::Ref<_1d21c0b59_FieldIns>> __param_fields, jule::Slice<jule::Ref<_1d21d97ee_Fn>> __param_methods, jule::Bool __param_mutable, jule::Ref<_1b8b10cbb_ReferenceStack> __param_references) {
		this->self = jule::Ref<_1d21c0b59_StructIns>::make(this, nullptr);

		this->_field_checked = __param_checked;
		this->_field_decl = __param_decl;
		this->_field_generics = __param_generics;
		this->_field_fields = __param_fields;
		this->_field_methods = __param_methods;
		this->_field_mutable = __param_mutable;
		this->_field_references = __param_references;
	}

	~_1d21c0b59_StructIns(void) { this->self.ref = nullptr; }

	_1d21c0b59_StructIns(void) { this->self = jule::Ref<_1d21c0b59_StructIns>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1b951b088_TypeKind>);


	inline jule::Ref<_1d21d97ee_Fn> _method_find_method(jule::Str,jule::Bool);


	inline jule::Ref<_1d21c0b59_FieldIns> _method_find_field(jule::Str);


	inline bool operator==(const _1d21c0b59_StructIns &_Src) const {
		return 
			this->_field_checked == _Src._field_checked &&
			this->_field_decl == _Src._field_decl &&
			this->_field_generics == _Src._field_generics &&
			this->_field_fields == _Src._field_fields &&
			this->_field_methods == _Src._field_methods &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_references == _Src._field_references;
	}

	inline bool operator!=(const _1d21c0b59_StructIns &_Src) const { return !this->operator==(_Src); }
};


struct _1d21d97ee_RetType {
	jule::Ref<_1d21d97ee_RetType> self{};

	jule::Ref<_1b951b088_TypeSymbol> _field_kind{jule::Ref<_1b951b088_TypeSymbol>()};
	jule::Slice<_1d1da4277_Token> _field_idents{jule::Slice<_1d1da4277_Token>()};


	_1d21d97ee_RetType(jule::Ref<_1b951b088_TypeSymbol> __param_kind, jule::Slice<_1d1da4277_Token> __param_idents) {
		this->self = jule::Ref<_1d21d97ee_RetType>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_idents = __param_idents;
	}

	~_1d21d97ee_RetType(void) { this->self.ref = nullptr; }

	_1d21d97ee_RetType(void) { this->self = jule::Ref<_1d21d97ee_RetType>::make(this, nullptr); }

	inline bool operator==(const _1d21d97ee_RetType &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_idents == _Src._field_idents;
	}

	inline bool operator!=(const _1d21d97ee_RetType &_Src) const { return !this->operator==(_Src); }
};


struct _1d21d97ee_ParamIns {
	jule::Ref<_1d21d97ee_ParamIns> self{};

	jule::Ref<_1d21d97ee_Param> _field_decl{jule::Ref<_1d21d97ee_Param>()};
	jule::Ref<_1b951b088_TypeKind> _field_kind{jule::Ref<_1b951b088_TypeKind>()};


	_1d21d97ee_ParamIns(jule::Ref<_1d21d97ee_Param> __param_decl, jule::Ref<_1b951b088_TypeKind> __param_kind) {
		this->self = jule::Ref<_1d21d97ee_ParamIns>::make(this, nullptr);

		this->_field_decl = __param_decl;
		this->_field_kind = __param_kind;
	}

	~_1d21d97ee_ParamIns(void) { this->self.ref = nullptr; }

	_1d21d97ee_ParamIns(void) { this->self = jule::Ref<_1d21d97ee_ParamIns>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline bool operator==(const _1d21d97ee_ParamIns &_Src) const {
		return 
			this->_field_decl == _Src._field_decl &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1d21d97ee_ParamIns &_Src) const { return !this->operator==(_Src); }
};


struct _1d21d97ee_FnIns: public _1b951b088_Kind {
	jule::Ref<_1d21d97ee_FnIns> self{};

	jule::Ref<_1d21c0b59_StructIns> _field_owner{jule::Ref<_1d21c0b59_StructIns>()};
	jule::Ref<_1d21d97ee_Fn> _field_decl{jule::Ref<_1d21d97ee_Fn>()};
	jule::Slice<jule::Ref<_1b951b088_TypeKind>> _field_generics{jule::Slice<jule::Ref<_1b951b088_TypeKind>>()};
	jule::Slice<jule::Ref<_1d21d97ee_ParamIns>> _field_params{jule::Slice<jule::Ref<_1d21d97ee_ParamIns>>()};
	jule::Ref<_1b951b088_TypeKind> _field_result{jule::Ref<_1b951b088_TypeKind>()};
	jule::Ref<_1b8cd2c4b_Scope> _field_scope{jule::Ref<_1b8cd2c4b_Scope>()};
	jule::Ref<_1b8b10cbb_ReferenceStack> _field_references{jule::Ref<_1b8b10cbb_ReferenceStack>()};
	jule::Ref<_1b8b10cbb_ReferenceStack> _field_refers{jule::Ref<_1b8b10cbb_ReferenceStack>()};
	jule::Fn<jule::Ref<_1b9523799_Data>(jule::Ref<_1b9523799_Eval>&,jule::Ref<_1d1e5192e_FnCallExpr>&,jule::Ref<_1b9523799_Data>&)> _field_caller{jule::Fn<jule::Ref<_1b9523799_Data>(jule::Ref<_1b9523799_Eval>&,jule::Ref<_1d1e5192e_FnCallExpr>&,jule::Ref<_1b9523799_Data>&)>()};
	jule::Bool _field_reloaded{jule::Bool()};
	jule::Bool _field_anon{jule::Bool()};


	_1d21d97ee_FnIns(jule::Ref<_1d21c0b59_StructIns> __param_owner, jule::Ref<_1d21d97ee_Fn> __param_decl, jule::Slice<jule::Ref<_1b951b088_TypeKind>> __param_generics, jule::Slice<jule::Ref<_1d21d97ee_ParamIns>> __param_params, jule::Ref<_1b951b088_TypeKind> __param_result, jule::Ref<_1b8cd2c4b_Scope> __param_scope, jule::Ref<_1b8b10cbb_ReferenceStack> __param_references, jule::Ref<_1b8b10cbb_ReferenceStack> __param_refers, jule::Fn<jule::Ref<_1b9523799_Data>(jule::Ref<_1b9523799_Eval>&,jule::Ref<_1d1e5192e_FnCallExpr>&,jule::Ref<_1b9523799_Data>&)> __param_caller, jule::Bool __param_reloaded, jule::Bool __param_anon) {
		this->self = jule::Ref<_1d21d97ee_FnIns>::make(this, nullptr);

		this->_field_owner = __param_owner;
		this->_field_decl = __param_decl;
		this->_field_generics = __param_generics;
		this->_field_params = __param_params;
		this->_field_result = __param_result;
		this->_field_scope = __param_scope;
		this->_field_references = __param_references;
		this->_field_refers = __param_refers;
		this->_field_caller = __param_caller;
		this->_field_reloaded = __param_reloaded;
		this->_field_anon = __param_anon;
	}

	~_1d21d97ee_FnIns(void) { this->self.ref = nullptr; }

	_1d21d97ee_FnIns(void) { this->self = jule::Ref<_1d21d97ee_FnIns>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1b951b088_TypeKind>);


	inline jule::Bool _method_is_builtin(void);


	inline jule::Bool _method_is_anon(void);


	inline jule::Str _method_get_kind_str(jule::Bool);


	inline bool operator==(const _1d21d97ee_FnIns &_Src) const {
		return 
			this->_field_owner == _Src._field_owner &&
			this->_field_decl == _Src._field_decl &&
			this->_field_generics == _Src._field_generics &&
			this->_field_params == _Src._field_params &&
			this->_field_result == _Src._field_result &&
			this->_field_scope == _Src._field_scope &&
			this->_field_references == _Src._field_references &&
			this->_field_refers == _Src._field_refers &&
			this->_field_caller == _Src._field_caller &&
			this->_field_reloaded == _Src._field_reloaded &&
			this->_field_anon == _Src._field_anon;
	}

	inline bool operator!=(const _1d21d97ee_FnIns &_Src) const { return !this->operator==(_Src); }
};


struct _1b8b10cbb_ReferenceStack {
	jule::Ref<_1b8b10cbb_ReferenceStack> self{};

	jule::Slice<jule::Any> _field_buffer{jule::Slice<jule::Any>()};


	_1b8b10cbb_ReferenceStack(jule::Slice<jule::Any> __param_buffer) {
		this->self = jule::Ref<_1b8b10cbb_ReferenceStack>::make(this, nullptr);

		this->_field_buffer = __param_buffer;
	}

	~_1b8b10cbb_ReferenceStack(void) { this->self.ref = nullptr; }

	_1b8b10cbb_ReferenceStack(void) { this->self = jule::Ref<_1b8b10cbb_ReferenceStack>::make(this, nullptr); }

	static inline jule::Ref<_1b8b10cbb_ReferenceStack> _static_method_new(void);


	inline jule::Int _method_len(void);


	inline jule::Any _method_at(jule::Int);


	inline void _method_push(jule::Any);


	inline jule::Bool _method_exist_0(jule::Ref<_1b919cb2c_Var>);
	inline jule::Bool _method_exist_1(jule::Ref<_1d21d97ee_FnIns>);
	inline jule::Bool _method_exist_2(jule::Ref<_1d21c0b59_StructIns>);


	inline bool operator==(const _1b8b10cbb_ReferenceStack &_Src) const {
		return 
			this->_field_buffer == _Src._field_buffer;
	}

	inline bool operator!=(const _1b8b10cbb_ReferenceStack &_Src) const { return !this->operator==(_Src); }
};


struct _1b8b10cbb_SymbolBuilder {
	jule::Ref<_1b8b10cbb_SymbolBuilder> self{};

	jule::Ref<_1b8b10cbb_SymbolBuilder> _field_owner{jule::Ref<_1b8b10cbb_SymbolBuilder>()};
	jule::Trait<_1b8e0c01d_Importer> _field_importer{jule::Trait<_1b8e0c01d_Importer>()};
	jule::Slice<_1d0557e9e_Log> _field_errors{jule::Slice<_1d0557e9e_Log>()};
	jule::Ref<_1d21640e7_Ast> _field_ast{jule::Ref<_1d21640e7_Ast>()};
	jule::Ref<_1b9390d86_SymbolTable> _field_table{jule::Ref<_1b9390d86_SymbolTable>()};


	_1b8b10cbb_SymbolBuilder(jule::Ref<_1b8b10cbb_SymbolBuilder> __param_owner, jule::Trait<_1b8e0c01d_Importer> __param_importer, jule::Slice<_1d0557e9e_Log> __param_errors, jule::Ref<_1d21640e7_Ast> __param_ast, jule::Ref<_1b9390d86_SymbolTable> __param_table) {
		this->self = jule::Ref<_1b8b10cbb_SymbolBuilder>::make(this, nullptr);

		this->_field_owner = __param_owner;
		this->_field_importer = __param_importer;
		this->_field_errors = __param_errors;
		this->_field_ast = __param_ast;
		this->_field_table = __param_table;
	}

	~_1b8b10cbb_SymbolBuilder(void) { this->self.ref = nullptr; }

	_1b8b10cbb_SymbolBuilder(void) { this->self = jule::Ref<_1b8b10cbb_SymbolBuilder>::make(this, nullptr); }

	inline jule::Ref<_1b8b10cbb_SymbolBuilder> _method_get_root(void);


	inline void _method_push_err(_1d1da4277_Token&,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_err_text(_1d1da4277_Token&,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline jule::Bool _method_check_cpp_use_decl_path(jule::Ref<_1d1e5192e_UseDecl>&);


	inline jule::Ref<_1b8e0c01d_ImportInfo> _method_build_cpp_header_import(jule::Ref<_1d1e5192e_UseDecl>&);


	inline jule::Ref<_1b8e0c01d_ImportInfo> _method_build_std_import(jule::Ref<_1d1e5192e_UseDecl>&);


	inline jule::Ref<_1b8e0c01d_ImportInfo> _method_build_ident_import(jule::Ref<_1d1e5192e_UseDecl>&);


	inline jule::Ref<_1b8e0c01d_ImportInfo> _method_build_import(jule::Ref<_1d1e5192e_UseDecl>&);


	inline jule::Bool _method_check_duplicate_use_decl(jule::Ref<_1b8e0c01d_ImportInfo>&);


	inline void _method_impl_import_selections(jule::Ref<_1b8e0c01d_ImportInfo>&,jule::Ref<_1d1e5192e_UseDecl>&);


	inline jule::Str _method_get_as_link_path(jule::Str);


	inline void _method_push_cycle_error(jule::Ref<_1b8b10cbb_SymbolBuilder>&,jule::Str,jule::Str&);


	inline void _method_push_cross_cycle_error(jule::Ref<_1b8b10cbb_SymbolBuilder>&,jule::Ref<_1b8e0c01d_ImportInfo>&,_1d1da4277_Token&);


	inline jule::Bool _method_check_import_cycles(jule::Ref<_1b8e0c01d_ImportInfo>,jule::Ref<_1d1e5192e_UseDecl>&);


	inline jule::Bool _method_import_package(jule::Ref<_1b8e0c01d_ImportInfo>&,jule::Ref<_1d1e5192e_UseDecl>&);


	inline jule::Ref<_1b8e0c01d_ImportInfo> _method_import_use_decl(jule::Ref<_1d1e5192e_UseDecl>&);


	inline void _method_import_use_decls(void);


	inline void _method_append_decl(_1d1e5192e_Node&);


	inline void _method_append_decls(void);


	inline void _method_append_impls(void);


	inline void _method_push_directive_pass(jule::Ref<_1d1e5192e_Directive>&);


	inline void _method_append_top_directives(void);


	inline void _method_build(void);


	inline bool operator==(const _1b8b10cbb_SymbolBuilder &_Src) const {
		return 
			this->_field_owner == _Src._field_owner &&
			this->_field_importer == _Src._field_importer &&
			this->_field_errors == _Src._field_errors &&
			this->_field_ast == _Src._field_ast &&
			this->_field_table == _Src._field_table;
	}

	inline bool operator!=(const _1b8b10cbb_SymbolBuilder &_Src) const { return !this->operator==(_Src); }
};


struct _1b8cd2c4b_Scope {
	jule::Ref<_1b8cd2c4b_Scope> self{};

	jule::Ref<_1b8cd2c4b_Scope> _field_parent{jule::Ref<_1b8cd2c4b_Scope>()};
	jule::Bool _field_unsafety{jule::Bool()};
	jule::Bool _field_deferred{jule::Bool()};
	jule::Slice<jule::Any> _field_stmts{jule::Slice<jule::Any>()};


	_1b8cd2c4b_Scope(jule::Ref<_1b8cd2c4b_Scope> __param_parent, jule::Bool __param_unsafety, jule::Bool __param_deferred, jule::Slice<jule::Any> __param_stmts) {
		this->self = jule::Ref<_1b8cd2c4b_Scope>::make(this, nullptr);

		this->_field_parent = __param_parent;
		this->_field_unsafety = __param_unsafety;
		this->_field_deferred = __param_deferred;
		this->_field_stmts = __param_stmts;
	}

	~_1b8cd2c4b_Scope(void) { this->self.ref = nullptr; }

	_1b8cd2c4b_Scope(void) { this->self = jule::Ref<_1b8cd2c4b_Scope>::make(this, nullptr); }

	inline bool operator==(const _1b8cd2c4b_Scope &_Src) const {
		return 
			this->_field_parent == _Src._field_parent &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_deferred == _Src._field_deferred &&
			this->_field_stmts == _Src._field_stmts;
	}

	inline bool operator!=(const _1b8cd2c4b_Scope &_Src) const { return !this->operator==(_Src); }
};


struct _1b8cd2c4b_If {
	jule::Ref<_1b8cd2c4b_If> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Ref<_1b8cd2c4b_Scope> _field_scope{jule::Ref<_1b8cd2c4b_Scope>()};


	_1b8cd2c4b_If(jule::Any __param_expr, jule::Ref<_1b8cd2c4b_Scope> __param_scope) {
		this->self = jule::Ref<_1b8cd2c4b_If>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_scope = __param_scope;
	}

	~_1b8cd2c4b_If(void) { this->self.ref = nullptr; }

	_1b8cd2c4b_If(void) { this->self = jule::Ref<_1b8cd2c4b_If>::make(this, nullptr); }

	inline bool operator==(const _1b8cd2c4b_If &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _1b8cd2c4b_If &_Src) const { return !this->operator==(_Src); }
};


struct _1b8cd2c4b_Else {
	jule::Ref<_1b8cd2c4b_Else> self{};

	jule::Ref<_1b8cd2c4b_Scope> _field_scope{jule::Ref<_1b8cd2c4b_Scope>()};


	_1b8cd2c4b_Else(jule::Ref<_1b8cd2c4b_Scope> __param_scope) {
		this->self = jule::Ref<_1b8cd2c4b_Else>::make(this, nullptr);

		this->_field_scope = __param_scope;
	}

	~_1b8cd2c4b_Else(void) { this->self.ref = nullptr; }

	_1b8cd2c4b_Else(void) { this->self = jule::Ref<_1b8cd2c4b_Else>::make(this, nullptr); }

	inline bool operator==(const _1b8cd2c4b_Else &_Src) const {
		return 
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _1b8cd2c4b_Else &_Src) const { return !this->operator==(_Src); }
};


struct _1b8cd2c4b_Conditional {
	jule::Ref<_1b8cd2c4b_Conditional> self{};

	jule::Slice<jule::Ref<_1b8cd2c4b_If>> _field_elifs{jule::Slice<jule::Ref<_1b8cd2c4b_If>>()};
	jule::Ref<_1b8cd2c4b_Else> _field_default{jule::Ref<_1b8cd2c4b_Else>()};


	_1b8cd2c4b_Conditional(jule::Slice<jule::Ref<_1b8cd2c4b_If>> __param_elifs, jule::Ref<_1b8cd2c4b_Else> __param_default) {
		this->self = jule::Ref<_1b8cd2c4b_Conditional>::make(this, nullptr);

		this->_field_elifs = __param_elifs;
		this->_field_default = __param_default;
	}

	~_1b8cd2c4b_Conditional(void) { this->self.ref = nullptr; }

	_1b8cd2c4b_Conditional(void) { this->self = jule::Ref<_1b8cd2c4b_Conditional>::make(this, nullptr); }

	inline bool operator==(const _1b8cd2c4b_Conditional &_Src) const {
		return 
			this->_field_elifs == _Src._field_elifs &&
			this->_field_default == _Src._field_default;
	}

	inline bool operator!=(const _1b8cd2c4b_Conditional &_Src) const { return !this->operator==(_Src); }
};


struct _1b8cd2c4b_InfIter {
	jule::Ref<_1b8cd2c4b_InfIter> self{};

	jule::Ref<_1b8cd2c4b_Scope> _field_scope{jule::Ref<_1b8cd2c4b_Scope>()};


	_1b8cd2c4b_InfIter(jule::Ref<_1b8cd2c4b_Scope> __param_scope) {
		this->self = jule::Ref<_1b8cd2c4b_InfIter>::make(this, nullptr);

		this->_field_scope = __param_scope;
	}

	~_1b8cd2c4b_InfIter(void) { this->self.ref = nullptr; }

	_1b8cd2c4b_InfIter(void) { this->self = jule::Ref<_1b8cd2c4b_InfIter>::make(this, nullptr); }

	inline bool operator==(const _1b8cd2c4b_InfIter &_Src) const {
		return 
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _1b8cd2c4b_InfIter &_Src) const { return !this->operator==(_Src); }
};


struct _1b8cd2c4b_WhileIter {
	jule::Ref<_1b8cd2c4b_WhileIter> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Any _field_next{jule::Any()};
	jule::Ref<_1b8cd2c4b_Scope> _field_scope{jule::Ref<_1b8cd2c4b_Scope>()};


	_1b8cd2c4b_WhileIter(jule::Any __param_expr, jule::Any __param_next, jule::Ref<_1b8cd2c4b_Scope> __param_scope) {
		this->self = jule::Ref<_1b8cd2c4b_WhileIter>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_next = __param_next;
		this->_field_scope = __param_scope;
	}

	~_1b8cd2c4b_WhileIter(void) { this->self.ref = nullptr; }

	_1b8cd2c4b_WhileIter(void) { this->self = jule::Ref<_1b8cd2c4b_WhileIter>::make(this, nullptr); }

	inline jule::Bool _method_is_while_next(void);


	inline bool operator==(const _1b8cd2c4b_WhileIter &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_next == _Src._field_next &&
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _1b8cd2c4b_WhileIter &_Src) const { return !this->operator==(_Src); }
};


struct _1b8cd2c4b_RangeIter {
	jule::Ref<_1b8cd2c4b_RangeIter> self{};

	jule::Ref<_1b9523799_Data> _field_expr{jule::Ref<_1b9523799_Data>()};
	jule::Ref<_1b8cd2c4b_Scope> _field_scope{jule::Ref<_1b8cd2c4b_Scope>()};
	jule::Ref<_1b919cb2c_Var> _field_key_a{jule::Ref<_1b919cb2c_Var>()};
	jule::Ref<_1b919cb2c_Var> _field_key_b{jule::Ref<_1b919cb2c_Var>()};


	_1b8cd2c4b_RangeIter(jule::Ref<_1b9523799_Data> __param_expr, jule::Ref<_1b8cd2c4b_Scope> __param_scope, jule::Ref<_1b919cb2c_Var> __param_key_a, jule::Ref<_1b919cb2c_Var> __param_key_b) {
		this->self = jule::Ref<_1b8cd2c4b_RangeIter>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_scope = __param_scope;
		this->_field_key_a = __param_key_a;
		this->_field_key_b = __param_key_b;
	}

	~_1b8cd2c4b_RangeIter(void) { this->self.ref = nullptr; }

	_1b8cd2c4b_RangeIter(void) { this->self = jule::Ref<_1b8cd2c4b_RangeIter>::make(this, nullptr); }

	inline bool operator==(const _1b8cd2c4b_RangeIter &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_scope == _Src._field_scope &&
			this->_field_key_a == _Src._field_key_a &&
			this->_field_key_b == _Src._field_key_b;
	}

	inline bool operator!=(const _1b8cd2c4b_RangeIter &_Src) const { return !this->operator==(_Src); }
};


struct _1b8cd2c4b_ContSt {
	jule::Ref<_1b8cd2c4b_ContSt> self{};

	jule::Uintptr _field_it{jule::Uintptr()};


	_1b8cd2c4b_ContSt(jule::Uintptr __param_it) {
		this->self = jule::Ref<_1b8cd2c4b_ContSt>::make(this, nullptr);

		this->_field_it = __param_it;
	}

	~_1b8cd2c4b_ContSt(void) { this->self.ref = nullptr; }

	_1b8cd2c4b_ContSt(void) { this->self = jule::Ref<_1b8cd2c4b_ContSt>::make(this, nullptr); }

	inline bool operator==(const _1b8cd2c4b_ContSt &_Src) const {
		return 
			this->_field_it == _Src._field_it;
	}

	inline bool operator!=(const _1b8cd2c4b_ContSt &_Src) const { return !this->operator==(_Src); }
};


struct _1b8cd2c4b_BreakSt {
	jule::Ref<_1b8cd2c4b_BreakSt> self{};

	jule::Uintptr _field_it{jule::Uintptr()};
	jule::Uintptr _field_mtch{jule::Uintptr()};


	_1b8cd2c4b_BreakSt(jule::Uintptr __param_it, jule::Uintptr __param_mtch) {
		this->self = jule::Ref<_1b8cd2c4b_BreakSt>::make(this, nullptr);

		this->_field_it = __param_it;
		this->_field_mtch = __param_mtch;
	}

	~_1b8cd2c4b_BreakSt(void) { this->self.ref = nullptr; }

	_1b8cd2c4b_BreakSt(void) { this->self = jule::Ref<_1b8cd2c4b_BreakSt>::make(this, nullptr); }

	inline bool operator==(const _1b8cd2c4b_BreakSt &_Src) const {
		return 
			this->_field_it == _Src._field_it &&
			this->_field_mtch == _Src._field_mtch;
	}

	inline bool operator!=(const _1b8cd2c4b_BreakSt &_Src) const { return !this->operator==(_Src); }
};


struct _1b8cd2c4b_Label {
	jule::Ref<_1b8cd2c4b_Label> self{};

	jule::Str _field_ident{jule::Str()};


	_1b8cd2c4b_Label(jule::Str __param_ident) {
		this->self = jule::Ref<_1b8cd2c4b_Label>::make(this, nullptr);

		this->_field_ident = __param_ident;
	}

	~_1b8cd2c4b_Label(void) { this->self.ref = nullptr; }

	_1b8cd2c4b_Label(void) { this->self = jule::Ref<_1b8cd2c4b_Label>::make(this, nullptr); }

	inline bool operator==(const _1b8cd2c4b_Label &_Src) const {
		return 
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1b8cd2c4b_Label &_Src) const { return !this->operator==(_Src); }
};


struct _1b8cd2c4b_GotoSt {
	jule::Ref<_1b8cd2c4b_GotoSt> self{};

	jule::Str _field_ident{jule::Str()};


	_1b8cd2c4b_GotoSt(jule::Str __param_ident) {
		this->self = jule::Ref<_1b8cd2c4b_GotoSt>::make(this, nullptr);

		this->_field_ident = __param_ident;
	}

	~_1b8cd2c4b_GotoSt(void) { this->self.ref = nullptr; }

	_1b8cd2c4b_GotoSt(void) { this->self = jule::Ref<_1b8cd2c4b_GotoSt>::make(this, nullptr); }

	inline bool operator==(const _1b8cd2c4b_GotoSt &_Src) const {
		return 
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1b8cd2c4b_GotoSt &_Src) const { return !this->operator==(_Src); }
};


struct _1b8cd2c4b_Postfix {
	jule::Ref<_1b8cd2c4b_Postfix> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Str _field_op{jule::Str()};


	_1b8cd2c4b_Postfix(jule::Any __param_expr, jule::Str __param_op) {
		this->self = jule::Ref<_1b8cd2c4b_Postfix>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_op = __param_op;
	}

	~_1b8cd2c4b_Postfix(void) { this->self.ref = nullptr; }

	_1b8cd2c4b_Postfix(void) { this->self = jule::Ref<_1b8cd2c4b_Postfix>::make(this, nullptr); }

	inline bool operator==(const _1b8cd2c4b_Postfix &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _1b8cd2c4b_Postfix &_Src) const { return !this->operator==(_Src); }
};


struct _1b8cd2c4b_Assign {
	jule::Ref<_1b8cd2c4b_Assign> self{};

	jule::Any _field_l{jule::Any()};
	jule::Any _field_r{jule::Any()};
	jule::Str _field_op{jule::Str()};


	_1b8cd2c4b_Assign(jule::Any __param_l, jule::Any __param_r, jule::Str __param_op) {
		this->self = jule::Ref<_1b8cd2c4b_Assign>::make(this, nullptr);

		this->_field_l = __param_l;
		this->_field_r = __param_r;
		this->_field_op = __param_op;
	}

	~_1b8cd2c4b_Assign(void) { this->self.ref = nullptr; }

	_1b8cd2c4b_Assign(void) { this->self = jule::Ref<_1b8cd2c4b_Assign>::make(this, nullptr); }

	inline bool operator==(const _1b8cd2c4b_Assign &_Src) const {
		return 
			this->_field_l == _Src._field_l &&
			this->_field_r == _Src._field_r &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _1b8cd2c4b_Assign &_Src) const { return !this->operator==(_Src); }
};


struct _1b8cd2c4b_MultiAssign {
	jule::Ref<_1b8cd2c4b_MultiAssign> self{};

	jule::Slice<jule::Any> _field_l{jule::Slice<jule::Any>()};
	jule::Any _field_r{jule::Any()};


	_1b8cd2c4b_MultiAssign(jule::Slice<jule::Any> __param_l, jule::Any __param_r) {
		this->self = jule::Ref<_1b8cd2c4b_MultiAssign>::make(this, nullptr);

		this->_field_l = __param_l;
		this->_field_r = __param_r;
	}

	~_1b8cd2c4b_MultiAssign(void) { this->self.ref = nullptr; }

	_1b8cd2c4b_MultiAssign(void) { this->self = jule::Ref<_1b8cd2c4b_MultiAssign>::make(this, nullptr); }

	inline bool operator==(const _1b8cd2c4b_MultiAssign &_Src) const {
		return 
			this->_field_l == _Src._field_l &&
			this->_field_r == _Src._field_r;
	}

	inline bool operator!=(const _1b8cd2c4b_MultiAssign &_Src) const { return !this->operator==(_Src); }
};


struct _1b8cd2c4b_Match {
	jule::Ref<_1b8cd2c4b_Match> self{};

	jule::Ref<_1b9523799_Data> _field_expr{jule::Ref<_1b9523799_Data>()};
	jule::Bool _field_type_match{jule::Bool()};
	jule::Slice<jule::Ref<_1b8cd2c4b_Case>> _field_cases{jule::Slice<jule::Ref<_1b8cd2c4b_Case>>()};
	jule::Ref<_1b8cd2c4b_Case> _field_default{jule::Ref<_1b8cd2c4b_Case>()};


	_1b8cd2c4b_Match(jule::Ref<_1b9523799_Data> __param_expr, jule::Bool __param_type_match, jule::Slice<jule::Ref<_1b8cd2c4b_Case>> __param_cases, jule::Ref<_1b8cd2c4b_Case> __param_default) {
		this->self = jule::Ref<_1b8cd2c4b_Match>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_type_match = __param_type_match;
		this->_field_cases = __param_cases;
		this->_field_default = __param_default;
	}

	~_1b8cd2c4b_Match(void) { this->self.ref = nullptr; }

	_1b8cd2c4b_Match(void) { this->self = jule::Ref<_1b8cd2c4b_Match>::make(this, nullptr); }

	inline bool operator==(const _1b8cd2c4b_Match &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_type_match == _Src._field_type_match &&
			this->_field_cases == _Src._field_cases &&
			this->_field_default == _Src._field_default;
	}

	inline bool operator!=(const _1b8cd2c4b_Match &_Src) const { return !this->operator==(_Src); }
};


struct _1b8cd2c4b_Case {
	jule::Ref<_1b8cd2c4b_Case> self{};

	jule::Ref<_1b8cd2c4b_Match> _field_owner{jule::Ref<_1b8cd2c4b_Match>()};
	jule::Ref<_1b8cd2c4b_Scope> _field_scope{jule::Ref<_1b8cd2c4b_Scope>()};
	jule::Slice<jule::Any> _field_exprs{jule::Slice<jule::Any>()};
	jule::Ref<_1b8cd2c4b_Case> _field_next{jule::Ref<_1b8cd2c4b_Case>()};


	_1b8cd2c4b_Case(jule::Ref<_1b8cd2c4b_Match> __param_owner, jule::Ref<_1b8cd2c4b_Scope> __param_scope, jule::Slice<jule::Any> __param_exprs, jule::Ref<_1b8cd2c4b_Case> __param_next) {
		this->self = jule::Ref<_1b8cd2c4b_Case>::make(this, nullptr);

		this->_field_owner = __param_owner;
		this->_field_scope = __param_scope;
		this->_field_exprs = __param_exprs;
		this->_field_next = __param_next;
	}

	~_1b8cd2c4b_Case(void) { this->self.ref = nullptr; }

	_1b8cd2c4b_Case(void) { this->self = jule::Ref<_1b8cd2c4b_Case>::make(this, nullptr); }

	inline jule::Bool _method_is_default(void);


	inline bool operator==(const _1b8cd2c4b_Case &_Src) const {
		return 
			this->_field_owner == _Src._field_owner &&
			this->_field_scope == _Src._field_scope &&
			this->_field_exprs == _Src._field_exprs &&
			this->_field_next == _Src._field_next;
	}

	inline bool operator!=(const _1b8cd2c4b_Case &_Src) const { return !this->operator==(_Src); }
};


struct _1b8cd2c4b_FallSt {
	jule::Ref<_1b8cd2c4b_FallSt> self{};

	jule::Uintptr _field_dest_case{jule::Uintptr()};


	_1b8cd2c4b_FallSt(jule::Uintptr __param_dest_case) {
		this->self = jule::Ref<_1b8cd2c4b_FallSt>::make(this, nullptr);

		this->_field_dest_case = __param_dest_case;
	}

	~_1b8cd2c4b_FallSt(void) { this->self.ref = nullptr; }

	_1b8cd2c4b_FallSt(void) { this->self = jule::Ref<_1b8cd2c4b_FallSt>::make(this, nullptr); }

	inline bool operator==(const _1b8cd2c4b_FallSt &_Src) const {
		return 
			this->_field_dest_case == _Src._field_dest_case;
	}

	inline bool operator!=(const _1b8cd2c4b_FallSt &_Src) const { return !this->operator==(_Src); }
};


struct _1b8cd2c4b_RetSt {
	jule::Ref<_1b8cd2c4b_RetSt> self{};

	jule::Slice<jule::Ref<_1b919cb2c_Var>> _field_vars{jule::Slice<jule::Ref<_1b919cb2c_Var>>()};
	jule::Any _field_expr{jule::Any()};


	_1b8cd2c4b_RetSt(jule::Slice<jule::Ref<_1b919cb2c_Var>> __param_vars, jule::Any __param_expr) {
		this->self = jule::Ref<_1b8cd2c4b_RetSt>::make(this, nullptr);

		this->_field_vars = __param_vars;
		this->_field_expr = __param_expr;
	}

	~_1b8cd2c4b_RetSt(void) { this->self.ref = nullptr; }

	_1b8cd2c4b_RetSt(void) { this->self = jule::Ref<_1b8cd2c4b_RetSt>::make(this, nullptr); }

	inline bool operator==(const _1b8cd2c4b_RetSt &_Src) const {
		return 
			this->_field_vars == _Src._field_vars &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1b8cd2c4b_RetSt &_Src) const { return !this->operator==(_Src); }
};


struct _1b8cd2c4b_Recover {
	jule::Ref<_1b8cd2c4b_Recover> self{};

	jule::Ref<_1d21d97ee_FnIns> _field_handler{jule::Ref<_1d21d97ee_FnIns>()};
	jule::Any _field_handler_expr{jule::Any()};
	jule::Ref<_1b8cd2c4b_Scope> _field_scope{jule::Ref<_1b8cd2c4b_Scope>()};
	jule::Ref<_1d21d97ee_FnIns> _field_scope_owner{jule::Ref<_1d21d97ee_FnIns>()};


	_1b8cd2c4b_Recover(jule::Ref<_1d21d97ee_FnIns> __param_handler, jule::Any __param_handler_expr, jule::Ref<_1b8cd2c4b_Scope> __param_scope, jule::Ref<_1d21d97ee_FnIns> __param_scope_owner) {
		this->self = jule::Ref<_1b8cd2c4b_Recover>::make(this, nullptr);

		this->_field_handler = __param_handler;
		this->_field_handler_expr = __param_handler_expr;
		this->_field_scope = __param_scope;
		this->_field_scope_owner = __param_scope_owner;
	}

	~_1b8cd2c4b_Recover(void) { this->self.ref = nullptr; }

	_1b8cd2c4b_Recover(void) { this->self = jule::Ref<_1b8cd2c4b_Recover>::make(this, nullptr); }

	inline bool operator==(const _1b8cd2c4b_Recover &_Src) const {
		return 
			this->_field_handler == _Src._field_handler &&
			this->_field_handler_expr == _Src._field_handler_expr &&
			this->_field_scope == _Src._field_scope &&
			this->_field_scope_owner == _Src._field_scope_owner;
	}

	inline bool operator!=(const _1b8cd2c4b_Recover &_Src) const { return !this->operator==(_Src); }
};


struct _1b8cd2c4b_ScopeGoto {
	jule::Ref<_1b8cd2c4b_ScopeGoto> self{};

	jule::Ref<_1d1e5192e_GotoSt> _field_gt{jule::Ref<_1d1e5192e_GotoSt>()};
	jule::Ref<_1b8cd2c4b_ScopeChecker> _field_scope{jule::Ref<_1b8cd2c4b_ScopeChecker>()};
	jule::Int _field_pos{jule::Int()};


	_1b8cd2c4b_ScopeGoto(jule::Ref<_1d1e5192e_GotoSt> __param_gt, jule::Ref<_1b8cd2c4b_ScopeChecker> __param_scope, jule::Int __param_pos) {
		this->self = jule::Ref<_1b8cd2c4b_ScopeGoto>::make(this, nullptr);

		this->_field_gt = __param_gt;
		this->_field_scope = __param_scope;
		this->_field_pos = __param_pos;
	}

	~_1b8cd2c4b_ScopeGoto(void) { this->self.ref = nullptr; }

	_1b8cd2c4b_ScopeGoto(void) { this->self = jule::Ref<_1b8cd2c4b_ScopeGoto>::make(this, nullptr); }

	inline bool operator==(const _1b8cd2c4b_ScopeGoto &_Src) const {
		return 
			this->_field_gt == _Src._field_gt &&
			this->_field_scope == _Src._field_scope &&
			this->_field_pos == _Src._field_pos;
	}

	inline bool operator!=(const _1b8cd2c4b_ScopeGoto &_Src) const { return !this->operator==(_Src); }
};


struct _1b8cd2c4b_ScopeChecker: public _1b9a5b012_Lookup {
	jule::Ref<_1b8cd2c4b_ScopeChecker> self{};

	jule::Ref<_1b912748b_Sema> _field_s{jule::Ref<_1b912748b_Sema>()};
	jule::Ref<_1d21d97ee_FnIns> _field_owner{jule::Ref<_1d21d97ee_FnIns>()};
	jule::Ref<_1b8cd2c4b_ScopeChecker> _field_parent{jule::Ref<_1b8cd2c4b_ScopeChecker>()};
	jule::Int _field_child_index{jule::Int()};
	jule::Ref<_1b9390d86_SymbolTable> _field_table{jule::Ref<_1b9390d86_SymbolTable>()};
	jule::Ref<_1b8cd2c4b_Scope> _field_scope{jule::Ref<_1b8cd2c4b_Scope>()};
	jule::Ref<_1d1e5192e_ScopeTree> _field_tree{jule::Ref<_1d1e5192e_ScopeTree>()};
	jule::Uintptr _field_it{jule::Uintptr()};
	jule::Uintptr _field_cse{jule::Uintptr()};
	jule::Ref<jule::Slice<jule::Ref<_1b8cd2c4b_ScopeLabel>>> _field_labels{jule::Ref<jule::Slice<jule::Ref<_1b8cd2c4b_ScopeLabel>>>()};
	jule::Ref<jule::Slice<jule::Ref<_1b8cd2c4b_ScopeGoto>>> _field_gotos{jule::Ref<jule::Slice<jule::Ref<_1b8cd2c4b_ScopeGoto>>>()};
	jule::Int _field_i{jule::Int()};


	_1b8cd2c4b_ScopeChecker(jule::Ref<_1b912748b_Sema> __param_s, jule::Ref<_1d21d97ee_FnIns> __param_owner, jule::Ref<_1b8cd2c4b_ScopeChecker> __param_parent, jule::Int __param_child_index, jule::Ref<_1b9390d86_SymbolTable> __param_table, jule::Ref<_1b8cd2c4b_Scope> __param_scope, jule::Ref<_1d1e5192e_ScopeTree> __param_tree, jule::Uintptr __param_it, jule::Uintptr __param_cse, jule::Ref<jule::Slice<jule::Ref<_1b8cd2c4b_ScopeLabel>>> __param_labels, jule::Ref<jule::Slice<jule::Ref<_1b8cd2c4b_ScopeGoto>>> __param_gotos, jule::Int __param_i) {
		this->self = jule::Ref<_1b8cd2c4b_ScopeChecker>::make(this, nullptr);

		this->_field_s = __param_s;
		this->_field_owner = __param_owner;
		this->_field_parent = __param_parent;
		this->_field_child_index = __param_child_index;
		this->_field_table = __param_table;
		this->_field_scope = __param_scope;
		this->_field_tree = __param_tree;
		this->_field_it = __param_it;
		this->_field_cse = __param_cse;
		this->_field_labels = __param_labels;
		this->_field_gotos = __param_gotos;
		this->_field_i = __param_i;
	}

	~_1b8cd2c4b_ScopeChecker(void) { this->self.ref = nullptr; }

	_1b8cd2c4b_ScopeChecker(void) { this->self = jule::Ref<_1b8cd2c4b_ScopeChecker>::make(this, nullptr); }

	inline jule::Ref<_1b8e0c01d_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ref<_1b8e0c01d_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ref<_1b8e0c01d_ImportInfo>)>);


	inline jule::Ref<_1b919cb2c_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ref<_1b951b088_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ref<_1d21c0b59_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ref<_1d21d97ee_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ref<_1b8cd2894_Trait> _method_find_trait(jule::Str);


	inline jule::Ref<_1b8dae520_Enum> _method_find_enum(jule::Str);


	inline jule::Bool _method_is_unsafe(void);


	inline jule::Bool _method_is_root(void);


	inline jule::Ref<_1b8cd2c4b_ScopeChecker> _method_get_root(void);


	inline jule::Ref<_1b8cd2c4b_Label> _method_find_label(jule::Str);


	inline jule::Ref<_1b8cd2c4b_ScopeLabel> _method_find_label_scope(jule::Str);


	inline jule::Ref<_1b8cd2c4b_ScopeLabel> _method_find_label_all(jule::Str);


	inline jule::Bool _method_is_duplicated_ident(jule::Uintptr,jule::Str);


	inline void _method_check_var_decl(jule::Ref<_1d1e5192e_VarDecl>);


	inline void _method_check_type_alias_decl(jule::Ref<_1d1e5192e_TypeAliasDecl>);


	inline jule::Ref<_1b8cd2c4b_Scope> _method_get_child(void);


	inline void _method_check_child_ssc(jule::Ref<_1d1e5192e_ScopeTree>,jule::Ref<_1b8cd2c4b_Scope>,jule::Ref<_1b8cd2c4b_ScopeChecker>);


	inline jule::Ref<_1b8cd2c4b_Scope> _method_check_child_sc(jule::Ref<_1d1e5192e_ScopeTree>,jule::Ref<_1b8cd2c4b_ScopeChecker>);


	inline jule::Ref<_1b8cd2c4b_Scope> _method_check_child(jule::Ref<_1d1e5192e_ScopeTree>);


	inline void _method_check_anon_scope(jule::Ref<_1d1e5192e_ScopeTree>);


	inline jule::Bool _method_try_call_recover(jule::Ref<_1b9523799_Data>);


	inline void _method_check_expr(jule::Ref<_1d1e5192e_Expr>);


	inline jule::Ref<_1b8cd2c4b_If> _method_check_if(jule::Ref<_1d1e5192e_If>);


	inline jule::Ref<_1b8cd2c4b_Else> _method_check_else(jule::Ref<_1d1e5192e_Else>);


	inline void _method_check_conditional(jule::Ref<_1d1e5192e_Conditional>);


	inline jule::Ref<_1b8cd2c4b_Scope> _method_check_iter_scope_sc(jule::Uintptr,jule::Ref<_1d1e5192e_ScopeTree>,jule::Ref<_1b8cd2c4b_ScopeChecker>);


	inline jule::Ref<_1b8cd2c4b_Scope> _method_check_iter_scope(jule::Uintptr,jule::Ref<_1d1e5192e_ScopeTree>);


	inline void _method_check_inf_iter(jule::Ref<_1d1e5192e_Iter>);


	inline void _method_check_while_iter(jule::Ref<_1d1e5192e_Iter>);


	inline void _method_check_range_iter(jule::Ref<_1d1e5192e_Iter>);


	inline void _method_check_iter(jule::Ref<_1d1e5192e_Iter>);


	inline jule::Bool _method_check_valid_cont_label(jule::Uintptr);


	inline jule::Bool _method_check_valid_break_label(jule::Uintptr);


	inline jule::Ref<_1b8cd2c4b_ContSt> _method_check_cont_valid_scope(jule::Ref<_1d1e5192e_ContSt>);


	inline void _method_check_cont(jule::Ref<_1d1e5192e_ContSt>);


	inline void _method_check_label(jule::Ref<_1d1e5192e_LabelSt>);


	inline void _method_push_goto(jule::Ref<_1d1e5192e_GotoSt>);


	inline void _method_check_postfix(jule::Ref<_1d1e5192e_AssignSt>);


	inline jule::Bool _method_is_new_assign_ident(jule::Str);


	inline void _method_check_single_assign(jule::Ref<_1d1e5192e_AssignSt>);


	inline void _method___process_end_part_of_multi_assign(jule::Ref<_1b8cd2c4b_MultiAssign>,jule::Ref<_1d1e5192e_AssignSt>,jule::Ref<_1d1e5192e_AssignLeft>,jule::Ref<_1b9523799_Data>,jule::Ref<_1b9523799_Data>);


	inline void _method_check_ret_multi_assign(jule::Ref<_1d1e5192e_AssignSt>);


	inline void _method_check_multi_assign(jule::Ref<_1d1e5192e_AssignSt>);


	inline void _method_check_assign_st(jule::Ref<_1d1e5192e_AssignSt>);


	inline jule::Ref<_1b8cd2c4b_Scope> _method_check_case_scope(jule::Ref<_1b8cd2c4b_Case>,jule::Ref<_1d1e5192e_ScopeTree>);


	inline jule::Ref<_1b8cd2c4b_Case> _method_check_case(jule::Ref<_1b8cd2c4b_Match>,jule::Int,jule::Ref<_1d1e5192e_Case>,jule::Ref<_1b9523799_Data>);


	inline void _method_check_cases(jule::Ref<_1d1e5192e_MatchCase>,jule::Ref<_1b8cd2c4b_Match>,jule::Ref<_1b9523799_Data>);


	inline jule::Ref<_1b8cd2c4b_Case> _method_check_default(jule::Ref<_1b8cd2c4b_Match>,jule::Ref<_1d1e5192e_Else>);


	inline void _method_check_type_match(jule::Ref<_1d1e5192e_MatchCase>);


	inline void _method_check_common_match(jule::Ref<_1d1e5192e_MatchCase>);


	inline void _method_check_match(jule::Ref<_1d1e5192e_MatchCase>);


	inline void _method_check_fall(jule::Ref<_1d1e5192e_FallSt>);


	inline jule::Ref<_1b8cd2c4b_BreakSt> _method_check_break_with_label(jule::Ref<_1d1e5192e_BreakSt>);


	inline jule::Ref<_1b8cd2c4b_BreakSt> _method_check_plain_break(jule::Ref<_1d1e5192e_BreakSt>);


	inline void _method_check_break(jule::Ref<_1d1e5192e_BreakSt>);


	inline void _method_check_ret(jule::Ref<_1d1e5192e_RetSt>);


	inline void _method_check_node(jule::Any);


	inline void _method_check_tree(void);


	inline void _method_check_same_scope_goto(jule::Ref<_1b8cd2c4b_ScopeGoto>,jule::Ref<_1b8cd2c4b_ScopeLabel>);


	inline jule::Bool _method_check_label_parents(jule::Ref<_1b8cd2c4b_ScopeGoto>,jule::Ref<_1b8cd2c4b_ScopeLabel>);


	inline void _method_check_goto_scope(jule::Ref<_1b8cd2c4b_ScopeGoto>,jule::Ref<_1b8cd2c4b_ScopeLabel>);


	inline void _method_check_diff_scope_goto(jule::Ref<_1b8cd2c4b_ScopeGoto>,jule::Ref<_1b8cd2c4b_ScopeLabel>);


	inline void _method_check_goto(jule::Ref<_1b8cd2c4b_ScopeGoto>,jule::Ref<_1b8cd2c4b_ScopeLabel>);


	inline void _method_check_gotos(void);


	inline void _method_check_labels(void);


	inline void _method_check_vars(void);


	inline void _method_check_aliases(void);


	inline void _method_check(jule::Ref<_1d1e5192e_ScopeTree>,jule::Ref<_1b8cd2c4b_Scope>);


	inline jule::Ref<_1b8cd2c4b_ScopeChecker> _method_new_child_checker(void);


	inline bool operator==(const _1b8cd2c4b_ScopeChecker &_Src) const {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_owner == _Src._field_owner &&
			this->_field_parent == _Src._field_parent &&
			this->_field_child_index == _Src._field_child_index &&
			this->_field_table == _Src._field_table &&
			this->_field_scope == _Src._field_scope &&
			this->_field_tree == _Src._field_tree &&
			this->_field_it == _Src._field_it &&
			this->_field_cse == _Src._field_cse &&
			this->_field_labels == _Src._field_labels &&
			this->_field_gotos == _Src._field_gotos &&
			this->_field_i == _Src._field_i;
	}

	inline bool operator!=(const _1b8cd2c4b_ScopeChecker &_Src) const { return !this->operator==(_Src); }
};


struct _1b8dbae99_BinopExprModel {
	jule::Ref<_1b8dbae99_BinopExprModel> self{};

	jule::Any _field_left{jule::Any()};
	jule::Any _field_right{jule::Any()};
	jule::Str _field_op{jule::Str()};


	_1b8dbae99_BinopExprModel(jule::Any __param_left, jule::Any __param_right, jule::Str __param_op) {
		this->self = jule::Ref<_1b8dbae99_BinopExprModel>::make(this, nullptr);

		this->_field_left = __param_left;
		this->_field_right = __param_right;
		this->_field_op = __param_op;
	}

	~_1b8dbae99_BinopExprModel(void) { this->self.ref = nullptr; }

	_1b8dbae99_BinopExprModel(void) { this->self = jule::Ref<_1b8dbae99_BinopExprModel>::make(this, nullptr); }

	inline bool operator==(const _1b8dbae99_BinopExprModel &_Src) const {
		return 
			this->_field_left == _Src._field_left &&
			this->_field_right == _Src._field_right &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _1b8dbae99_BinopExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b8dbae99_UnaryExprModel {
	jule::Ref<_1b8dbae99_UnaryExprModel> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Str _field_op{jule::Str()};


	_1b8dbae99_UnaryExprModel(jule::Any __param_expr, jule::Str __param_op) {
		this->self = jule::Ref<_1b8dbae99_UnaryExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_op = __param_op;
	}

	~_1b8dbae99_UnaryExprModel(void) { this->self.ref = nullptr; }

	_1b8dbae99_UnaryExprModel(void) { this->self = jule::Ref<_1b8dbae99_UnaryExprModel>::make(this, nullptr); }

	inline bool operator==(const _1b8dbae99_UnaryExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _1b8dbae99_UnaryExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b8dbae99_GetRefPtrExprModel {
	jule::Ref<_1b8dbae99_GetRefPtrExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_1b8dbae99_GetRefPtrExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_1b8dbae99_GetRefPtrExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_1b8dbae99_GetRefPtrExprModel(void) { this->self.ref = nullptr; }

	_1b8dbae99_GetRefPtrExprModel(void) { this->self = jule::Ref<_1b8dbae99_GetRefPtrExprModel>::make(this, nullptr); }

	inline bool operator==(const _1b8dbae99_GetRefPtrExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1b8dbae99_GetRefPtrExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b8dbae99_StructArgExprModel {
	jule::Ref<_1b8dbae99_StructArgExprModel> self{};

	jule::Ref<_1d21c0b59_FieldIns> _field_field{jule::Ref<_1d21c0b59_FieldIns>()};
	jule::Any _field_expr{jule::Any()};


	_1b8dbae99_StructArgExprModel(jule::Ref<_1d21c0b59_FieldIns> __param_field, jule::Any __param_expr) {
		this->self = jule::Ref<_1b8dbae99_StructArgExprModel>::make(this, nullptr);

		this->_field_field = __param_field;
		this->_field_expr = __param_expr;
	}

	~_1b8dbae99_StructArgExprModel(void) { this->self.ref = nullptr; }

	_1b8dbae99_StructArgExprModel(void) { this->self = jule::Ref<_1b8dbae99_StructArgExprModel>::make(this, nullptr); }

	inline bool operator==(const _1b8dbae99_StructArgExprModel &_Src) const {
		return 
			this->_field_field == _Src._field_field &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1b8dbae99_StructArgExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b8dbae99_StructLitExprModel {
	jule::Ref<_1b8dbae99_StructLitExprModel> self{};

	jule::Ref<_1d21c0b59_StructIns> _field_strct{jule::Ref<_1d21c0b59_StructIns>()};
	jule::Slice<jule::Ref<_1b8dbae99_StructArgExprModel>> _field_args{jule::Slice<jule::Ref<_1b8dbae99_StructArgExprModel>>()};


	_1b8dbae99_StructLitExprModel(jule::Ref<_1d21c0b59_StructIns> __param_strct, jule::Slice<jule::Ref<_1b8dbae99_StructArgExprModel>> __param_args) {
		this->self = jule::Ref<_1b8dbae99_StructLitExprModel>::make(this, nullptr);

		this->_field_strct = __param_strct;
		this->_field_args = __param_args;
	}

	~_1b8dbae99_StructLitExprModel(void) { this->self.ref = nullptr; }

	_1b8dbae99_StructLitExprModel(void) { this->self = jule::Ref<_1b8dbae99_StructLitExprModel>::make(this, nullptr); }

	inline bool operator==(const _1b8dbae99_StructLitExprModel &_Src) const {
		return 
			this->_field_strct == _Src._field_strct &&
			this->_field_args == _Src._field_args;
	}

	inline bool operator!=(const _1b8dbae99_StructLitExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b8dbae99_AllocStructLitExprModel {
	jule::Ref<_1b8dbae99_AllocStructLitExprModel> self{};

	jule::Ref<_1b8dbae99_StructLitExprModel> _field_lit{jule::Ref<_1b8dbae99_StructLitExprModel>()};


	_1b8dbae99_AllocStructLitExprModel(jule::Ref<_1b8dbae99_StructLitExprModel> __param_lit) {
		this->self = jule::Ref<_1b8dbae99_AllocStructLitExprModel>::make(this, nullptr);

		this->_field_lit = __param_lit;
	}

	~_1b8dbae99_AllocStructLitExprModel(void) { this->self.ref = nullptr; }

	_1b8dbae99_AllocStructLitExprModel(void) { this->self = jule::Ref<_1b8dbae99_AllocStructLitExprModel>::make(this, nullptr); }

	inline bool operator==(const _1b8dbae99_AllocStructLitExprModel &_Src) const {
		return 
			this->_field_lit == _Src._field_lit;
	}

	inline bool operator!=(const _1b8dbae99_AllocStructLitExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b8dbae99_CastingExprModel {
	jule::Ref<_1b8dbae99_CastingExprModel> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Ref<_1b951b088_TypeKind> _field_kind{jule::Ref<_1b951b088_TypeKind>()};
	jule::Ref<_1b951b088_TypeKind> _field_expr_kind{jule::Ref<_1b951b088_TypeKind>()};


	_1b8dbae99_CastingExprModel(jule::Any __param_expr, jule::Ref<_1b951b088_TypeKind> __param_kind, jule::Ref<_1b951b088_TypeKind> __param_expr_kind) {
		this->self = jule::Ref<_1b8dbae99_CastingExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_kind = __param_kind;
		this->_field_expr_kind = __param_expr_kind;
	}

	~_1b8dbae99_CastingExprModel(void) { this->self.ref = nullptr; }

	_1b8dbae99_CastingExprModel(void) { this->self = jule::Ref<_1b8dbae99_CastingExprModel>::make(this, nullptr); }

	inline bool operator==(const _1b8dbae99_CastingExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_kind == _Src._field_kind &&
			this->_field_expr_kind == _Src._field_expr_kind;
	}

	inline bool operator!=(const _1b8dbae99_CastingExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b8dbae99_FnCallExprModel {
	jule::Ref<_1b8dbae99_FnCallExprModel> self{};

	jule::Ref<_1d21d97ee_FnIns> _field_func{jule::Ref<_1d21d97ee_FnIns>()};
	jule::Bool _field_is_co{jule::Bool()};
	jule::Any _field_expr{jule::Any()};
	jule::Slice<jule::Any> _field_args{jule::Slice<jule::Any>()};


	_1b8dbae99_FnCallExprModel(jule::Ref<_1d21d97ee_FnIns> __param_func, jule::Bool __param_is_co, jule::Any __param_expr, jule::Slice<jule::Any> __param_args) {
		this->self = jule::Ref<_1b8dbae99_FnCallExprModel>::make(this, nullptr);

		this->_field_func = __param_func;
		this->_field_is_co = __param_is_co;
		this->_field_expr = __param_expr;
		this->_field_args = __param_args;
	}

	~_1b8dbae99_FnCallExprModel(void) { this->self.ref = nullptr; }

	_1b8dbae99_FnCallExprModel(void) { this->self = jule::Ref<_1b8dbae99_FnCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _1b8dbae99_FnCallExprModel &_Src) const {
		return 
			this->_field_func == _Src._field_func &&
			this->_field_is_co == _Src._field_is_co &&
			this->_field_expr == _Src._field_expr &&
			this->_field_args == _Src._field_args;
	}

	inline bool operator!=(const _1b8dbae99_FnCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b8dbae99_SliceExprModel {
	jule::Ref<_1b8dbae99_SliceExprModel> self{};

	jule::Ref<_1b951b088_TypeKind> _field_elem_kind{jule::Ref<_1b951b088_TypeKind>()};
	jule::Slice<jule::Any> _field_elems{jule::Slice<jule::Any>()};


	_1b8dbae99_SliceExprModel(jule::Ref<_1b951b088_TypeKind> __param_elem_kind, jule::Slice<jule::Any> __param_elems) {
		this->self = jule::Ref<_1b8dbae99_SliceExprModel>::make(this, nullptr);

		this->_field_elem_kind = __param_elem_kind;
		this->_field_elems = __param_elems;
	}

	~_1b8dbae99_SliceExprModel(void) { this->self.ref = nullptr; }

	_1b8dbae99_SliceExprModel(void) { this->self = jule::Ref<_1b8dbae99_SliceExprModel>::make(this, nullptr); }

	inline bool operator==(const _1b8dbae99_SliceExprModel &_Src) const {
		return 
			this->_field_elem_kind == _Src._field_elem_kind &&
			this->_field_elems == _Src._field_elems;
	}

	inline bool operator!=(const _1b8dbae99_SliceExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b8dbae99_IndexigExprModel {
	jule::Ref<_1b8dbae99_IndexigExprModel> self{};

	jule::Ref<_1b9523799_Data> _field_expr{jule::Ref<_1b9523799_Data>()};
	jule::Ref<_1b9523799_Data> _field_index{jule::Ref<_1b9523799_Data>()};


	_1b8dbae99_IndexigExprModel(jule::Ref<_1b9523799_Data> __param_expr, jule::Ref<_1b9523799_Data> __param_index) {
		this->self = jule::Ref<_1b8dbae99_IndexigExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_index = __param_index;
	}

	~_1b8dbae99_IndexigExprModel(void) { this->self.ref = nullptr; }

	_1b8dbae99_IndexigExprModel(void) { this->self = jule::Ref<_1b8dbae99_IndexigExprModel>::make(this, nullptr); }

	inline bool operator==(const _1b8dbae99_IndexigExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_index == _Src._field_index;
	}

	inline bool operator!=(const _1b8dbae99_IndexigExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b8dbae99_AnonFnExprModel {
	jule::Ref<_1b8dbae99_AnonFnExprModel> self{};

	jule::Ref<_1d21d97ee_FnIns> _field_func{jule::Ref<_1d21d97ee_FnIns>()};
	jule::Bool _field_global{jule::Bool()};


	_1b8dbae99_AnonFnExprModel(jule::Ref<_1d21d97ee_FnIns> __param_func, jule::Bool __param_global) {
		this->self = jule::Ref<_1b8dbae99_AnonFnExprModel>::make(this, nullptr);

		this->_field_func = __param_func;
		this->_field_global = __param_global;
	}

	~_1b8dbae99_AnonFnExprModel(void) { this->self.ref = nullptr; }

	_1b8dbae99_AnonFnExprModel(void) { this->self = jule::Ref<_1b8dbae99_AnonFnExprModel>::make(this, nullptr); }

	inline bool operator==(const _1b8dbae99_AnonFnExprModel &_Src) const {
		return 
			this->_field_func == _Src._field_func &&
			this->_field_global == _Src._field_global;
	}

	inline bool operator!=(const _1b8dbae99_AnonFnExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b8dbae99_KeyValPairExprModel {
	jule::Ref<_1b8dbae99_KeyValPairExprModel> self{};

	jule::Any _field_key{jule::Any()};
	jule::Any _field_val{jule::Any()};


	_1b8dbae99_KeyValPairExprModel(jule::Any __param_key, jule::Any __param_val) {
		this->self = jule::Ref<_1b8dbae99_KeyValPairExprModel>::make(this, nullptr);

		this->_field_key = __param_key;
		this->_field_val = __param_val;
	}

	~_1b8dbae99_KeyValPairExprModel(void) { this->self.ref = nullptr; }

	_1b8dbae99_KeyValPairExprModel(void) { this->self = jule::Ref<_1b8dbae99_KeyValPairExprModel>::make(this, nullptr); }

	inline bool operator==(const _1b8dbae99_KeyValPairExprModel &_Src) const {
		return 
			this->_field_key == _Src._field_key &&
			this->_field_val == _Src._field_val;
	}

	inline bool operator!=(const _1b8dbae99_KeyValPairExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b8dbae99_MapExprModel {
	jule::Ref<_1b8dbae99_MapExprModel> self{};

	jule::Ref<_1b951b088_TypeKind> _field_key_kind{jule::Ref<_1b951b088_TypeKind>()};
	jule::Ref<_1b951b088_TypeKind> _field_val_kind{jule::Ref<_1b951b088_TypeKind>()};
	jule::Slice<jule::Ref<_1b8dbae99_KeyValPairExprModel>> _field_entries{jule::Slice<jule::Ref<_1b8dbae99_KeyValPairExprModel>>()};


	_1b8dbae99_MapExprModel(jule::Ref<_1b951b088_TypeKind> __param_key_kind, jule::Ref<_1b951b088_TypeKind> __param_val_kind, jule::Slice<jule::Ref<_1b8dbae99_KeyValPairExprModel>> __param_entries) {
		this->self = jule::Ref<_1b8dbae99_MapExprModel>::make(this, nullptr);

		this->_field_key_kind = __param_key_kind;
		this->_field_val_kind = __param_val_kind;
		this->_field_entries = __param_entries;
	}

	~_1b8dbae99_MapExprModel(void) { this->self.ref = nullptr; }

	_1b8dbae99_MapExprModel(void) { this->self = jule::Ref<_1b8dbae99_MapExprModel>::make(this, nullptr); }

	inline bool operator==(const _1b8dbae99_MapExprModel &_Src) const {
		return 
			this->_field_key_kind == _Src._field_key_kind &&
			this->_field_val_kind == _Src._field_val_kind &&
			this->_field_entries == _Src._field_entries;
	}

	inline bool operator!=(const _1b8dbae99_MapExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b8dbae99_SlicingExprModel {
	jule::Ref<_1b8dbae99_SlicingExprModel> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Any _field_left{jule::Any()};
	jule::Any _field_right{jule::Any()};


	_1b8dbae99_SlicingExprModel(jule::Any __param_expr, jule::Any __param_left, jule::Any __param_right) {
		this->self = jule::Ref<_1b8dbae99_SlicingExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_left = __param_left;
		this->_field_right = __param_right;
	}

	~_1b8dbae99_SlicingExprModel(void) { this->self.ref = nullptr; }

	_1b8dbae99_SlicingExprModel(void) { this->self = jule::Ref<_1b8dbae99_SlicingExprModel>::make(this, nullptr); }

	inline bool operator==(const _1b8dbae99_SlicingExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_left == _Src._field_left &&
			this->_field_right == _Src._field_right;
	}

	inline bool operator!=(const _1b8dbae99_SlicingExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b8dbae99_TraitSubIdentExprModel {
	jule::Ref<_1b8dbae99_TraitSubIdentExprModel> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Str _field_ident{jule::Str()};


	_1b8dbae99_TraitSubIdentExprModel(jule::Any __param_expr, jule::Str __param_ident) {
		this->self = jule::Ref<_1b8dbae99_TraitSubIdentExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_ident = __param_ident;
	}

	~_1b8dbae99_TraitSubIdentExprModel(void) { this->self.ref = nullptr; }

	_1b8dbae99_TraitSubIdentExprModel(void) { this->self = jule::Ref<_1b8dbae99_TraitSubIdentExprModel>::make(this, nullptr); }

	inline bool operator==(const _1b8dbae99_TraitSubIdentExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1b8dbae99_TraitSubIdentExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b8dbae99_StructSubIdentExprModel {
	jule::Ref<_1b8dbae99_StructSubIdentExprModel> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Ref<_1b951b088_TypeKind> _field_expr_kind{jule::Ref<_1b951b088_TypeKind>()};
	jule::Ref<_1d21d97ee_FnIns> _field_method{jule::Ref<_1d21d97ee_FnIns>()};
	jule::Ref<_1d21c0b59_FieldIns> _field_field{jule::Ref<_1d21c0b59_FieldIns>()};


	_1b8dbae99_StructSubIdentExprModel(jule::Any __param_expr, jule::Ref<_1b951b088_TypeKind> __param_expr_kind, jule::Ref<_1d21d97ee_FnIns> __param_method, jule::Ref<_1d21c0b59_FieldIns> __param_field) {
		this->self = jule::Ref<_1b8dbae99_StructSubIdentExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_expr_kind = __param_expr_kind;
		this->_field_method = __param_method;
		this->_field_field = __param_field;
	}

	~_1b8dbae99_StructSubIdentExprModel(void) { this->self.ref = nullptr; }

	_1b8dbae99_StructSubIdentExprModel(void) { this->self = jule::Ref<_1b8dbae99_StructSubIdentExprModel>::make(this, nullptr); }

	inline bool operator==(const _1b8dbae99_StructSubIdentExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_expr_kind == _Src._field_expr_kind &&
			this->_field_method == _Src._field_method &&
			this->_field_field == _Src._field_field;
	}

	inline bool operator!=(const _1b8dbae99_StructSubIdentExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b8dbae99_StructStaticIdentExprModel {
	jule::Ref<_1b8dbae99_StructStaticIdentExprModel> self{};

	jule::Ref<_1d21c0b59_StructIns> _field_structure{jule::Ref<_1d21c0b59_StructIns>()};
	jule::Any _field_expr{jule::Any()};
	jule::Ref<_1d21d97ee_FnIns> _field_method{jule::Ref<_1d21d97ee_FnIns>()};


	_1b8dbae99_StructStaticIdentExprModel(jule::Ref<_1d21c0b59_StructIns> __param_structure, jule::Any __param_expr, jule::Ref<_1d21d97ee_FnIns> __param_method) {
		this->self = jule::Ref<_1b8dbae99_StructStaticIdentExprModel>::make(this, nullptr);

		this->_field_structure = __param_structure;
		this->_field_expr = __param_expr;
		this->_field_method = __param_method;
	}

	~_1b8dbae99_StructStaticIdentExprModel(void) { this->self.ref = nullptr; }

	_1b8dbae99_StructStaticIdentExprModel(void) { this->self = jule::Ref<_1b8dbae99_StructStaticIdentExprModel>::make(this, nullptr); }

	inline bool operator==(const _1b8dbae99_StructStaticIdentExprModel &_Src) const {
		return 
			this->_field_structure == _Src._field_structure &&
			this->_field_expr == _Src._field_expr &&
			this->_field_method == _Src._field_method;
	}

	inline bool operator!=(const _1b8dbae99_StructStaticIdentExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b8dbae99_ArrayExprModel {
	jule::Ref<_1b8dbae99_ArrayExprModel> self{};

	jule::Ref<_1b951b088_Arr> _field_kind{jule::Ref<_1b951b088_Arr>()};
	jule::Slice<jule::Any> _field_elems{jule::Slice<jule::Any>()};


	_1b8dbae99_ArrayExprModel(jule::Ref<_1b951b088_Arr> __param_kind, jule::Slice<jule::Any> __param_elems) {
		this->self = jule::Ref<_1b8dbae99_ArrayExprModel>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_elems = __param_elems;
	}

	~_1b8dbae99_ArrayExprModel(void) { this->self.ref = nullptr; }

	_1b8dbae99_ArrayExprModel(void) { this->self = jule::Ref<_1b8dbae99_ArrayExprModel>::make(this, nullptr); }

	inline bool operator==(const _1b8dbae99_ArrayExprModel &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_elems == _Src._field_elems;
	}

	inline bool operator!=(const _1b8dbae99_ArrayExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b8dbae99_CommonIdentExprModel {
	jule::Ref<_1b8dbae99_CommonIdentExprModel> self{};

	jule::Str _field_ident{jule::Str()};


	_1b8dbae99_CommonIdentExprModel(jule::Str __param_ident) {
		this->self = jule::Ref<_1b8dbae99_CommonIdentExprModel>::make(this, nullptr);

		this->_field_ident = __param_ident;
	}

	~_1b8dbae99_CommonIdentExprModel(void) { this->self.ref = nullptr; }

	_1b8dbae99_CommonIdentExprModel(void) { this->self = jule::Ref<_1b8dbae99_CommonIdentExprModel>::make(this, nullptr); }

	inline bool operator==(const _1b8dbae99_CommonIdentExprModel &_Src) const {
		return 
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1b8dbae99_CommonIdentExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b8dbae99_CommonSubIdentExprModel {
	jule::Ref<_1b8dbae99_CommonSubIdentExprModel> self{};

	jule::Ref<_1b951b088_TypeKind> _field_expr_kind{jule::Ref<_1b951b088_TypeKind>()};
	jule::Any _field_expr{jule::Any()};
	jule::Str _field_ident{jule::Str()};


	_1b8dbae99_CommonSubIdentExprModel(jule::Ref<_1b951b088_TypeKind> __param_expr_kind, jule::Any __param_expr, jule::Str __param_ident) {
		this->self = jule::Ref<_1b8dbae99_CommonSubIdentExprModel>::make(this, nullptr);

		this->_field_expr_kind = __param_expr_kind;
		this->_field_expr = __param_expr;
		this->_field_ident = __param_ident;
	}

	~_1b8dbae99_CommonSubIdentExprModel(void) { this->self.ref = nullptr; }

	_1b8dbae99_CommonSubIdentExprModel(void) { this->self = jule::Ref<_1b8dbae99_CommonSubIdentExprModel>::make(this, nullptr); }

	inline bool operator==(const _1b8dbae99_CommonSubIdentExprModel &_Src) const {
		return 
			this->_field_expr_kind == _Src._field_expr_kind &&
			this->_field_expr == _Src._field_expr &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1b8dbae99_CommonSubIdentExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b8dbae99_TupleExprModel {
	jule::Ref<_1b8dbae99_TupleExprModel> self{};

	jule::Slice<jule::Ref<_1b9523799_Data>> _field_datas{jule::Slice<jule::Ref<_1b9523799_Data>>()};


	_1b8dbae99_TupleExprModel(jule::Slice<jule::Ref<_1b9523799_Data>> __param_datas) {
		this->self = jule::Ref<_1b8dbae99_TupleExprModel>::make(this, nullptr);

		this->_field_datas = __param_datas;
	}

	~_1b8dbae99_TupleExprModel(void) { this->self.ref = nullptr; }

	_1b8dbae99_TupleExprModel(void) { this->self = jule::Ref<_1b8dbae99_TupleExprModel>::make(this, nullptr); }

	inline bool operator==(const _1b8dbae99_TupleExprModel &_Src) const {
		return 
			this->_field_datas == _Src._field_datas;
	}

	inline bool operator!=(const _1b8dbae99_TupleExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b8dbae99_BuiltinOutCallExprModel {
	jule::Ref<_1b8dbae99_BuiltinOutCallExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_1b8dbae99_BuiltinOutCallExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_1b8dbae99_BuiltinOutCallExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_1b8dbae99_BuiltinOutCallExprModel(void) { this->self.ref = nullptr; }

	_1b8dbae99_BuiltinOutCallExprModel(void) { this->self = jule::Ref<_1b8dbae99_BuiltinOutCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _1b8dbae99_BuiltinOutCallExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1b8dbae99_BuiltinOutCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b8dbae99_BuiltinOutlnCallExprModel {
	jule::Ref<_1b8dbae99_BuiltinOutlnCallExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_1b8dbae99_BuiltinOutlnCallExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_1b8dbae99_BuiltinOutlnCallExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_1b8dbae99_BuiltinOutlnCallExprModel(void) { this->self.ref = nullptr; }

	_1b8dbae99_BuiltinOutlnCallExprModel(void) { this->self = jule::Ref<_1b8dbae99_BuiltinOutlnCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _1b8dbae99_BuiltinOutlnCallExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1b8dbae99_BuiltinOutlnCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b8dbae99_BuiltinCloneCallExprModel {
	jule::Ref<_1b8dbae99_BuiltinCloneCallExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_1b8dbae99_BuiltinCloneCallExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_1b8dbae99_BuiltinCloneCallExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_1b8dbae99_BuiltinCloneCallExprModel(void) { this->self.ref = nullptr; }

	_1b8dbae99_BuiltinCloneCallExprModel(void) { this->self = jule::Ref<_1b8dbae99_BuiltinCloneCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _1b8dbae99_BuiltinCloneCallExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1b8dbae99_BuiltinCloneCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b8dbae99_BuiltinNewCallExprModel {
	jule::Ref<_1b8dbae99_BuiltinNewCallExprModel> self{};

	jule::Ref<_1b951b088_TypeKind> _field_kind{jule::Ref<_1b951b088_TypeKind>()};
	jule::Any _field_init{jule::Any()};


	_1b8dbae99_BuiltinNewCallExprModel(jule::Ref<_1b951b088_TypeKind> __param_kind, jule::Any __param_init) {
		this->self = jule::Ref<_1b8dbae99_BuiltinNewCallExprModel>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_init = __param_init;
	}

	~_1b8dbae99_BuiltinNewCallExprModel(void) { this->self.ref = nullptr; }

	_1b8dbae99_BuiltinNewCallExprModel(void) { this->self = jule::Ref<_1b8dbae99_BuiltinNewCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _1b8dbae99_BuiltinNewCallExprModel &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_init == _Src._field_init;
	}

	inline bool operator!=(const _1b8dbae99_BuiltinNewCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b8dbae99_BuiltinRealCallExprModel {
	jule::Ref<_1b8dbae99_BuiltinRealCallExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_1b8dbae99_BuiltinRealCallExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_1b8dbae99_BuiltinRealCallExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_1b8dbae99_BuiltinRealCallExprModel(void) { this->self.ref = nullptr; }

	_1b8dbae99_BuiltinRealCallExprModel(void) { this->self = jule::Ref<_1b8dbae99_BuiltinRealCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _1b8dbae99_BuiltinRealCallExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1b8dbae99_BuiltinRealCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b8dbae99_BuiltinDropCallExprModel {
	jule::Ref<_1b8dbae99_BuiltinDropCallExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_1b8dbae99_BuiltinDropCallExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_1b8dbae99_BuiltinDropCallExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_1b8dbae99_BuiltinDropCallExprModel(void) { this->self.ref = nullptr; }

	_1b8dbae99_BuiltinDropCallExprModel(void) { this->self = jule::Ref<_1b8dbae99_BuiltinDropCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _1b8dbae99_BuiltinDropCallExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1b8dbae99_BuiltinDropCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b8dbae99_BuiltinPanicCallExprModel {
	jule::Ref<_1b8dbae99_BuiltinPanicCallExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_1b8dbae99_BuiltinPanicCallExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_1b8dbae99_BuiltinPanicCallExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_1b8dbae99_BuiltinPanicCallExprModel(void) { this->self.ref = nullptr; }

	_1b8dbae99_BuiltinPanicCallExprModel(void) { this->self = jule::Ref<_1b8dbae99_BuiltinPanicCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _1b8dbae99_BuiltinPanicCallExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1b8dbae99_BuiltinPanicCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b8dbae99_BuiltinMakeCallExprModel {
	jule::Ref<_1b8dbae99_BuiltinMakeCallExprModel> self{};

	jule::Ref<_1b951b088_TypeKind> _field_kind{jule::Ref<_1b951b088_TypeKind>()};
	jule::Any _field_len{jule::Any()};
	jule::Any _field_cap{jule::Any()};


	_1b8dbae99_BuiltinMakeCallExprModel(jule::Ref<_1b951b088_TypeKind> __param_kind, jule::Any __param_len, jule::Any __param_cap) {
		this->self = jule::Ref<_1b8dbae99_BuiltinMakeCallExprModel>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_len = __param_len;
		this->_field_cap = __param_cap;
	}

	~_1b8dbae99_BuiltinMakeCallExprModel(void) { this->self.ref = nullptr; }

	_1b8dbae99_BuiltinMakeCallExprModel(void) { this->self = jule::Ref<_1b8dbae99_BuiltinMakeCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _1b8dbae99_BuiltinMakeCallExprModel &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_len == _Src._field_len &&
			this->_field_cap == _Src._field_cap;
	}

	inline bool operator!=(const _1b8dbae99_BuiltinMakeCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b8dbae99_BuiltinAppendCallExprModel {
	jule::Ref<_1b8dbae99_BuiltinAppendCallExprModel> self{};

	jule::Any _field_dest{jule::Any()};
	jule::Any _field_elements{jule::Any()};


	_1b8dbae99_BuiltinAppendCallExprModel(jule::Any __param_dest, jule::Any __param_elements) {
		this->self = jule::Ref<_1b8dbae99_BuiltinAppendCallExprModel>::make(this, nullptr);

		this->_field_dest = __param_dest;
		this->_field_elements = __param_elements;
	}

	~_1b8dbae99_BuiltinAppendCallExprModel(void) { this->self.ref = nullptr; }

	_1b8dbae99_BuiltinAppendCallExprModel(void) { this->self = jule::Ref<_1b8dbae99_BuiltinAppendCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _1b8dbae99_BuiltinAppendCallExprModel &_Src) const {
		return 
			this->_field_dest == _Src._field_dest &&
			this->_field_elements == _Src._field_elements;
	}

	inline bool operator!=(const _1b8dbae99_BuiltinAppendCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b8dbae99_BuiltinErrorTraitSubIdentExprModel {
	jule::Ref<_1b8dbae99_BuiltinErrorTraitSubIdentExprModel> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Str _field_ident{jule::Str()};


	_1b8dbae99_BuiltinErrorTraitSubIdentExprModel(jule::Any __param_expr, jule::Str __param_ident) {
		this->self = jule::Ref<_1b8dbae99_BuiltinErrorTraitSubIdentExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_ident = __param_ident;
	}

	~_1b8dbae99_BuiltinErrorTraitSubIdentExprModel(void) { this->self.ref = nullptr; }

	_1b8dbae99_BuiltinErrorTraitSubIdentExprModel(void) { this->self = jule::Ref<_1b8dbae99_BuiltinErrorTraitSubIdentExprModel>::make(this, nullptr); }

	inline bool operator==(const _1b8dbae99_BuiltinErrorTraitSubIdentExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1b8dbae99_BuiltinErrorTraitSubIdentExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b8dbae99_SizeofExprModel {
	jule::Ref<_1b8dbae99_SizeofExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_1b8dbae99_SizeofExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_1b8dbae99_SizeofExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_1b8dbae99_SizeofExprModel(void) { this->self.ref = nullptr; }

	_1b8dbae99_SizeofExprModel(void) { this->self = jule::Ref<_1b8dbae99_SizeofExprModel>::make(this, nullptr); }

	inline bool operator==(const _1b8dbae99_SizeofExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1b8dbae99_SizeofExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b8dbae99_AlignofExprModel {
	jule::Ref<_1b8dbae99_AlignofExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_1b8dbae99_AlignofExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_1b8dbae99_AlignofExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_1b8dbae99_AlignofExprModel(void) { this->self.ref = nullptr; }

	_1b8dbae99_AlignofExprModel(void) { this->self = jule::Ref<_1b8dbae99_AlignofExprModel>::make(this, nullptr); }

	inline bool operator==(const _1b8dbae99_AlignofExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1b8dbae99_AlignofExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b8dbae99_RuneExprModel {
	jule::Ref<_1b8dbae99_RuneExprModel> self{};

	jule::I32 _field_code{jule::I32()};


	_1b8dbae99_RuneExprModel(jule::I32 __param_code) {
		this->self = jule::Ref<_1b8dbae99_RuneExprModel>::make(this, nullptr);

		this->_field_code = __param_code;
	}

	~_1b8dbae99_RuneExprModel(void) { this->self.ref = nullptr; }

	_1b8dbae99_RuneExprModel(void) { this->self = jule::Ref<_1b8dbae99_RuneExprModel>::make(this, nullptr); }

	inline bool operator==(const _1b8dbae99_RuneExprModel &_Src) const {
		return 
			this->_field_code == _Src._field_code;
	}

	inline bool operator!=(const _1b8dbae99_RuneExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b8dbae99_ExplicitDerefExprModel {
	jule::Ref<_1b8dbae99_ExplicitDerefExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_1b8dbae99_ExplicitDerefExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_1b8dbae99_ExplicitDerefExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_1b8dbae99_ExplicitDerefExprModel(void) { this->self.ref = nullptr; }

	_1b8dbae99_ExplicitDerefExprModel(void) { this->self = jule::Ref<_1b8dbae99_ExplicitDerefExprModel>::make(this, nullptr); }

	inline bool operator==(const _1b8dbae99_ExplicitDerefExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1b8dbae99_ExplicitDerefExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b8dbae99_IntegratedToStrExprModel {
	jule::Ref<_1b8dbae99_IntegratedToStrExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_1b8dbae99_IntegratedToStrExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_1b8dbae99_IntegratedToStrExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_1b8dbae99_IntegratedToStrExprModel(void) { this->self.ref = nullptr; }

	_1b8dbae99_IntegratedToStrExprModel(void) { this->self = jule::Ref<_1b8dbae99_IntegratedToStrExprModel>::make(this, nullptr); }

	inline bool operator==(const _1b8dbae99_IntegratedToStrExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1b8dbae99_IntegratedToStrExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b8dbae99_TernaryExprModel {
	jule::Ref<_1b8dbae99_TernaryExprModel> self{};

	jule::Any _field_condition{jule::Any()};
	jule::Any _field_true_expr{jule::Any()};
	jule::Any _field_false_expr{jule::Any()};


	_1b8dbae99_TernaryExprModel(jule::Any __param_condition, jule::Any __param_true_expr, jule::Any __param_false_expr) {
		this->self = jule::Ref<_1b8dbae99_TernaryExprModel>::make(this, nullptr);

		this->_field_condition = __param_condition;
		this->_field_true_expr = __param_true_expr;
		this->_field_false_expr = __param_false_expr;
	}

	~_1b8dbae99_TernaryExprModel(void) { this->self.ref = nullptr; }

	_1b8dbae99_TernaryExprModel(void) { this->self = jule::Ref<_1b8dbae99_TernaryExprModel>::make(this, nullptr); }

	inline bool operator==(const _1b8dbae99_TernaryExprModel &_Src) const {
		return 
			this->_field_condition == _Src._field_condition &&
			this->_field_true_expr == _Src._field_true_expr &&
			this->_field_false_expr == _Src._field_false_expr;
	}

	inline bool operator!=(const _1b8dbae99_TernaryExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _1b8e0c01d_Package: public _1b9a5b012_Lookup {
	jule::Ref<_1b8e0c01d_Package> self{};

	jule::Slice<jule::Ref<_1b9390d86_SymbolTable>> _field_files{jule::Slice<jule::Ref<_1b9390d86_SymbolTable>>()};


	_1b8e0c01d_Package(jule::Slice<jule::Ref<_1b9390d86_SymbolTable>> __param_files) {
		this->self = jule::Ref<_1b8e0c01d_Package>::make(this, nullptr);

		this->_field_files = __param_files;
	}

	~_1b8e0c01d_Package(void) { this->self.ref = nullptr; }

	_1b8e0c01d_Package(void) { this->self = jule::Ref<_1b8e0c01d_Package>::make(this, nullptr); }

	inline jule::Ref<_1b8e0c01d_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ref<_1b8e0c01d_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ref<_1b8e0c01d_ImportInfo>)>);


	inline jule::Ref<_1b919cb2c_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ref<_1b951b088_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ref<_1d21c0b59_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ref<_1d21d97ee_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ref<_1b8cd2894_Trait> _method_find_trait(jule::Str);


	inline jule::Ref<_1b8dae520_Enum> _method_find_enum(jule::Str);


	inline bool operator==(const _1b8e0c01d_Package &_Src) const {
		return 
			this->_field_files == _Src._field_files;
	}

	inline bool operator!=(const _1b8e0c01d_Package &_Src) const { return !this->operator==(_Src); }
};


struct _1b912748b_Sema: public _1b9a5b012_Lookup {
	jule::Ref<_1b912748b_Sema> self{};

	jule::Slice<_1d0557e9e_Log> _field_errors{jule::Slice<_1d0557e9e_Log>()};
	jule::Slice<jule::Ref<_1b9390d86_SymbolTable>> _field_files{jule::Slice<jule::Ref<_1b9390d86_SymbolTable>>()};
	jule::Ref<_1b9390d86_SymbolTable> _field_file{jule::Ref<_1b9390d86_SymbolTable>()};
	jule::Int _field_flags{0LL};


	_1b912748b_Sema(jule::Slice<_1d0557e9e_Log> __param_errors, jule::Slice<jule::Ref<_1b9390d86_SymbolTable>> __param_files, jule::Ref<_1b9390d86_SymbolTable> __param_file, jule::Int __param_flags) {
		this->self = jule::Ref<_1b912748b_Sema>::make(this, nullptr);

		this->_field_errors = __param_errors;
		this->_field_files = __param_files;
		this->_field_file = __param_file;
		this->_field_flags = __param_flags;
	}

	~_1b912748b_Sema(void) { this->self.ref = nullptr; }

	_1b912748b_Sema(void) { this->self = jule::Ref<_1b912748b_Sema>::make(this, nullptr); }

	inline jule::Ref<_1b8e0c01d_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ref<_1b8e0c01d_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ref<_1b8e0c01d_ImportInfo>)>);


	inline jule::Ref<_1b919cb2c_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ref<_1b951b088_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ref<_1d21c0b59_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ref<_1d21d97ee_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ref<_1b8cd2894_Trait> _method_find_trait(jule::Str);


	inline jule::Ref<_1b8dae520_Enum> _method_find_enum(jule::Str);


	inline jule::Bool _method_is_flag(jule::Int);


	inline void _method_set_current_file(jule::Ref<_1b9390d86_SymbolTable>);


	inline void _method_push_err(_1d1da4277_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline jule::Bool _method_is_accessible_define(jule::Bool,_1d1da4277_Token);


	inline jule::Bool _method_is_duplicated_ident(jule::Uintptr,jule::Str,jule::Bool);


	inline jule::Bool _method_check_generic_quantity(jule::Int,jule::Int,_1d1da4277_Token);


	inline jule::Bool _method_is_duplicated_import_selection(jule::Uintptr,jule::Str);


	inline jule::Any _method_get_import_def(jule::Str,jule::Ref<_1b8e0c01d_ImportInfo>&);


	inline void _method_check_import_selections(jule::Ref<_1b8e0c01d_ImportInfo>&);


	inline jule::Bool _method_is_use_alias_duplication(jule::Ref<_1b8e0c01d_ImportInfo>&);


	inline jule::Bool _method_check_import(jule::Ref<_1b8e0c01d_ImportInfo>&);


	inline void _method_check_imports(void);


	inline void _method_impl_file_impls(void);


	inline void _method_impl_impls(void);


	inline void _method_check_enums(void);


	inline jule::Bool _method_check_type_with_refers(jule::Ref<_1b951b088_TypeSymbol>&,jule::Trait<_1b9a5b012_Lookup>,jule::Ref<_1b951b088_Referencer>);


	inline jule::Bool _method_check_type(jule::Ref<_1b951b088_TypeSymbol>&,jule::Trait<_1b9a5b012_Lookup>);


	inline jule::Ref<_1b951b088_TypeKind> _method_build_type_with_generics(jule::Ref<_1d1e5192e_TypeDecl>&,jule::Slice<jule::Ref<_1b951b088_TypeAlias>>);


	inline jule::Ref<_1b951b088_TypeKind> _method_build_type(jule::Ref<_1d1e5192e_TypeDecl>&);


	inline jule::Ref<_1b9523799_Data> _method_evalpd(jule::Ref<_1d1e5192e_Expr>&,jule::Trait<_1b9a5b012_Lookup>,jule::Ref<_1b951b088_TypeKind>,jule::Ref<_1b919cb2c_Var>);


	inline jule::Ref<_1b9523799_Data> _method_evalp(jule::Ref<_1d1e5192e_Expr>,jule::Trait<_1b9a5b012_Lookup>,jule::Ref<_1b951b088_TypeKind>);


	inline jule::Ref<_1b9523799_Data> _method_eval(jule::Ref<_1d1e5192e_Expr>&,jule::Trait<_1b9a5b012_Lookup>);


	inline void _method_check_assign_type(jule::Bool,jule::Ref<_1b951b088_TypeKind>&,jule::Ref<_1b9523799_Data>&,_1d1da4277_Token,jule::Bool);


	inline jule::Bool _method_check_type_compatibility(jule::Ref<_1b951b088_TypeKind>&,jule::Ref<_1b951b088_TypeKind>&,_1d1da4277_Token&,jule::Bool);


	inline jule::Ref<_1b951b088_TypeKind> _method_build_non_generic_type_kind(jule::Ref<_1d1e5192e_TypeDecl>&,jule::Slice<jule::Ref<_1d1e5192e_GenericDecl>>&);


	inline void _method_build_fn_non_generic_type_kinds(jule::Ref<_1d21d97ee_FnIns>&);


	inline jule::Ref<_1d21d97ee_FnIns> _method_get_trait_check_fn_kind(jule::Ref<_1d21d97ee_Fn>&);


	inline jule::Bool _method_reload_fn_ins_types(jule::Ref<_1d21d97ee_FnIns>&);


	inline void _method_check_ref_validity_for_init_expr(jule::Bool,jule::Ref<_1b9523799_Data>&,_1d1da4277_Token&);


	inline void _method_check_validity_for_init_expr(jule::Bool,jule::Bool,jule::Ref<_1b951b088_TypeKind>&,jule::Ref<_1b9523799_Data>&,_1d1da4277_Token&);


	inline jule::Bool _method_check_type_alias_decl_kind(jule::Ref<_1b951b088_TypeAlias>&,jule::Trait<_1b9a5b012_Lookup>);


	inline void _method_check_type_alias_decl(jule::Ref<_1b951b088_TypeAlias>&,jule::Trait<_1b9a5b012_Lookup>);


	inline void _method_check_type_alias_decl_dup(jule::Ref<_1b951b088_TypeAlias>&);


	inline jule::Bool _method_check_type_alias_decls(void);


	inline void _method_check_enum_items_dup(jule::Ref<_1b8dae520_Enum>);


	inline void _method_check_enum_items_str(jule::Ref<_1b8dae520_Enum>&);


	inline void _method_check_enum_items_int(jule::Ref<_1b8dae520_Enum>&);


	inline void _method_check_enum_decl(jule::Ref<_1b8dae520_Enum>&);


	inline jule::Bool _method_check_enum_decls(void);


	inline jule::Bool _method_check_decl_generics(jule::Slice<jule::Ref<_1d1e5192e_GenericDecl>>&);


	inline jule::Bool _method_check_fn_decl_params_dup(jule::Ref<_1d21d97ee_Fn>&);


	inline jule::Bool _method_check_fn_decl_result_dup(jule::Ref<_1d21d97ee_Fn>&);


	inline jule::Bool _method_check_fn_decl_types(jule::Ref<_1d21d97ee_Fn>&);


	inline jule::Bool _method_check_fn_decl_prototype(jule::Ref<_1d21d97ee_Fn>&);


	inline void _method_check_trait_decl_method(jule::Ref<_1d21d97ee_Fn>&);


	inline void _method_check_trait_decl_methods(jule::Ref<_1b8cd2894_Trait>&);


	inline void _method_check_trait_decl(jule::Ref<_1b8cd2894_Trait>&);


	inline jule::Bool _method_check_trait_decls(void);


	inline jule::Bool _method_check_trait_impl_methods(jule::Ref<_1b8cd2894_Trait>&,jule::Ref<_1b8dacd8c_Impl>&);


	inline jule::Bool _method_impl_to_struct(jule::Ref<_1d21c0b59_Struct>&,jule::Ref<_1b8dacd8c_Impl>&);


	inline void _method_impl_trait(jule::Ref<_1b8dacd8c_Impl>&);


	inline void _method_impl_struct(jule::Ref<_1b8dacd8c_Impl>&);


	inline void _method_impl_impl(jule::Ref<_1b8dacd8c_Impl>&);


	inline void _method_check_var_decl(jule::Ref<_1b919cb2c_Var>&,jule::Trait<_1b9a5b012_Lookup>);


	inline void _method_check_global_var_decl(jule::Ref<_1b919cb2c_Var>&);


	inline jule::Bool _method_check_global_decls(void);


	inline jule::Bool _method_check_struct_trait_impl(jule::Ref<_1d21c0b59_Struct>&,jule::Ref<_1b8cd2894_Trait>&);


	inline jule::Bool _method_check_struct_impls(jule::Ref<_1d21c0b59_Struct>&);


	inline jule::Bool _method_check_struct_fields(jule::Ref<_1d21c0b59_Struct>&);


	inline jule::Bool _method_check_struct_decl_methods(jule::Ref<_1d21c0b59_Struct>&);


	inline void _method_check_struct_decl(jule::Ref<_1d21c0b59_Struct>&);


	inline jule::Bool _method_check_struct_decls(void);


	inline void _method_check_fn_decl(jule::Ref<_1d21d97ee_Fn>&);


	inline jule::Bool _method_check_fn_decls(void);


	inline jule::Bool _method_check_directive_pass(_1b8b10cbb_Pass&);


	inline jule::Bool _method_check_passes(void);


	inline void _method_push_cycle_error(jule::Ref<_1d21c0b59_Struct>&,jule::Ref<_1d21c0b59_Struct>&,jule::Str&);


	inline jule::Bool _method_check_cross_cycle(jule::Ref<_1d21c0b59_Struct>&,jule::Ref<_1d21c0b59_Struct>&,jule::Str&);


	inline jule::Bool _method_check_struct_derive_illegal_cycles(jule::Str,jule::Ref<_1d21c0b59_Struct>&,jule::Ref<_1b951b088_TypeKind>&);


	inline jule::Bool _method_check_struct_ins_derive_clone(jule::Ref<_1d21c0b59_StructIns>);


	inline jule::Bool _method_check_struct_derive_clone(jule::Ref<_1d21c0b59_Struct>&);


	inline jule::Bool _method_check_file_derives(void);


	inline void _method_check_package_derives(void);


	inline void _method_check_package_decls(void);


	inline void _method_check_data_for_type_inference(jule::Ref<_1b9523799_Data>&,_1d1da4277_Token&);


	inline void _method_check_var(jule::Ref<_1b919cb2c_Var>&);


	inline void _method_check_type_var(jule::Ref<_1b919cb2c_Var>&,jule::Trait<_1b9a5b012_Lookup>);


	inline void _method_check_global_types(void);


	inline void _method_check_type_method(jule::Ref<_1d21c0b59_StructIns>&,jule::Ref<_1d21d97ee_Fn>&);


	inline void _method_check_type_struct(jule::Ref<_1d21c0b59_Struct>&);


	inline void _method_check_struct_types(void);


	inline void _method_check_rets(jule::Ref<_1d21d97ee_FnIns>&);


	inline void _method_check_fn_ins_sc(jule::Ref<_1d21d97ee_FnIns>&,jule::Ref<_1b8cd2c4b_ScopeChecker>&);


	inline void _method_check_fn_ins(jule::Ref<_1d21d97ee_FnIns>&);


	inline void _method_check_type_fn(jule::Ref<_1d21d97ee_Fn>&);


	inline void _method_precheck_type_fn(jule::Ref<_1d21d97ee_Fn>&);


	inline jule::Bool _method_precheck_fn_types(void);


	inline jule::Bool _method_check_fn_types(void);


	inline void _method_check_package_types(void);


	inline void _method_set_file_sema_fields(void);


	inline void _method_set_sema_fields(void);


	inline void _method_check(jule::Slice<jule::Ref<_1b9390d86_SymbolTable>>&);


	inline bool operator==(const _1b912748b_Sema &_Src) const {
		return 
			this->_field_errors == _Src._field_errors &&
			this->_field_files == _Src._field_files &&
			this->_field_file == _Src._field_file &&
			this->_field_flags == _Src._field_flags;
	}

	inline bool operator!=(const _1b912748b_Sema &_Src) const { return !this->operator==(_Src); }
};


struct _1b9176ba0_RangeChecker {
	jule::Ref<_1b9176ba0_RangeChecker> self{};

	jule::Ref<_1b8cd2c4b_ScopeChecker> _field_sc{jule::Ref<_1b8cd2c4b_ScopeChecker>()};
	jule::Ref<_1d1e5192e_RangeKind> _field_rang{jule::Ref<_1d1e5192e_RangeKind>()};
	jule::Ref<_1b8cd2c4b_RangeIter> _field_kind{jule::Ref<_1b8cd2c4b_RangeIter>()};
	jule::Ref<_1b9523799_Data> _field_d{jule::Ref<_1b9523799_Data>()};


	_1b9176ba0_RangeChecker(jule::Ref<_1b8cd2c4b_ScopeChecker> __param_sc, jule::Ref<_1d1e5192e_RangeKind> __param_rang, jule::Ref<_1b8cd2c4b_RangeIter> __param_kind, jule::Ref<_1b9523799_Data> __param_d) {
		this->self = jule::Ref<_1b9176ba0_RangeChecker>::make(this, nullptr);

		this->_field_sc = __param_sc;
		this->_field_rang = __param_rang;
		this->_field_kind = __param_kind;
		this->_field_d = __param_d;
	}

	~_1b9176ba0_RangeChecker(void) { this->self.ref = nullptr; }

	_1b9176ba0_RangeChecker(void) { this->self = jule::Ref<_1b9176ba0_RangeChecker>::make(this, nullptr); }

	inline jule::Ref<_1b919cb2c_Var> _method_build_var(jule::Ref<_1d1e5192e_VarDecl>&);


	inline void _method_set_size_key(void);


	inline void _method_check_range_expr_validity(jule::Ref<_1b9523799_Data>&,jule::Ref<_1b919cb2c_Var>&,jule::Ref<_1b951b088_TypeKind>&);


	inline void _method_check_slice(void);


	inline void _method_check_array(void);


	inline void _method_check_map_key_a(void);


	inline void _method_check_map_key_b(void);


	inline void _method_check_map(void);


	inline void _method_check_str(void);


	inline jule::Bool _method_check(void);


	inline bool operator==(const _1b9176ba0_RangeChecker &_Src) const {
		return 
			this->_field_sc == _Src._field_sc &&
			this->_field_rang == _Src._field_rang &&
			this->_field_kind == _Src._field_kind &&
			this->_field_d == _Src._field_d;
	}

	inline bool operator!=(const _1b9176ba0_RangeChecker &_Src) const { return !this->operator==(_Src); }
};


struct _1b9390d86_SymbolTable: public _1b9a5b012_Lookup {
	jule::Ref<_1b9390d86_SymbolTable> self{};

	jule::Ref<_1d1ee01b5_File> _field_file{jule::Ref<_1d1ee01b5_File>()};
	jule::Slice<_1b8b10cbb_Pass> _field_passes{jule::Slice<_1b8b10cbb_Pass>()};
	jule::Slice<jule::Ref<_1b8e0c01d_ImportInfo>> _field_imports{jule::Slice<jule::Ref<_1b8e0c01d_ImportInfo>>()};
	jule::Slice<jule::Ref<_1b919cb2c_Var>> _field_vars{jule::Slice<jule::Ref<_1b919cb2c_Var>>()};
	jule::Slice<jule::Ref<_1b951b088_TypeAlias>> _field_type_aliases{jule::Slice<jule::Ref<_1b951b088_TypeAlias>>()};
	jule::Slice<jule::Ref<_1d21c0b59_Struct>> _field_structs{jule::Slice<jule::Ref<_1d21c0b59_Struct>>()};
	jule::Slice<jule::Ref<_1d21d97ee_Fn>> _field_funcs{jule::Slice<jule::Ref<_1d21d97ee_Fn>>()};
	jule::Slice<jule::Ref<_1b8cd2894_Trait>> _field_traits{jule::Slice<jule::Ref<_1b8cd2894_Trait>>()};
	jule::Slice<jule::Ref<_1b8dae520_Enum>> _field_enums{jule::Slice<jule::Ref<_1b8dae520_Enum>>()};
	jule::Slice<jule::Ref<_1b8dacd8c_Impl>> _field_impls{jule::Slice<jule::Ref<_1b8dacd8c_Impl>>()};


	_1b9390d86_SymbolTable(jule::Ref<_1d1ee01b5_File> __param_file, jule::Slice<_1b8b10cbb_Pass> __param_passes, jule::Slice<jule::Ref<_1b8e0c01d_ImportInfo>> __param_imports, jule::Slice<jule::Ref<_1b919cb2c_Var>> __param_vars, jule::Slice<jule::Ref<_1b951b088_TypeAlias>> __param_type_aliases, jule::Slice<jule::Ref<_1d21c0b59_Struct>> __param_structs, jule::Slice<jule::Ref<_1d21d97ee_Fn>> __param_funcs, jule::Slice<jule::Ref<_1b8cd2894_Trait>> __param_traits, jule::Slice<jule::Ref<_1b8dae520_Enum>> __param_enums, jule::Slice<jule::Ref<_1b8dacd8c_Impl>> __param_impls) {
		this->self = jule::Ref<_1b9390d86_SymbolTable>::make(this, nullptr);

		this->_field_file = __param_file;
		this->_field_passes = __param_passes;
		this->_field_imports = __param_imports;
		this->_field_vars = __param_vars;
		this->_field_type_aliases = __param_type_aliases;
		this->_field_structs = __param_structs;
		this->_field_funcs = __param_funcs;
		this->_field_traits = __param_traits;
		this->_field_enums = __param_enums;
		this->_field_impls = __param_impls;
	}

	~_1b9390d86_SymbolTable(void) { this->self.ref = nullptr; }

	_1b9390d86_SymbolTable(void) { this->self = jule::Ref<_1b9390d86_SymbolTable>::make(this, nullptr); }

	inline jule::Ref<_1b8e0c01d_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ref<_1b8e0c01d_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ref<_1b8e0c01d_ImportInfo>)>);


	inline jule::Ref<_1b919cb2c_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ref<_1b951b088_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ref<_1d21c0b59_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ref<_1d21d97ee_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ref<_1b8cd2894_Trait> _method_find_trait(jule::Str);


	inline jule::Ref<_1b8dae520_Enum> _method_find_enum(jule::Str);


	inline jule::Ref<_1b919cb2c_Var> _method___find_var(jule::Str,jule::Bool,jule::Bool);


	inline jule::Ref<_1b951b088_TypeAlias> _method___find_type_alias(jule::Str,jule::Bool,jule::Bool);


	inline jule::Any _method_def_by_ident(jule::Str,jule::Bool);


	inline jule::Bool _method_is_duplicated_ident(jule::Uintptr,jule::Str,jule::Bool);


	inline bool operator==(const _1b9390d86_SymbolTable &_Src) const {
		return 
			this->_field_file == _Src._field_file &&
			this->_field_passes == _Src._field_passes &&
			this->_field_imports == _Src._field_imports &&
			this->_field_vars == _Src._field_vars &&
			this->_field_type_aliases == _Src._field_type_aliases &&
			this->_field_structs == _Src._field_structs &&
			this->_field_funcs == _Src._field_funcs &&
			this->_field_traits == _Src._field_traits &&
			this->_field_enums == _Src._field_enums &&
			this->_field_impls == _Src._field_impls;
	}

	inline bool operator!=(const _1b9390d86_SymbolTable &_Src) const { return !this->operator==(_Src); }
};


struct _1b9523799_Data {
	jule::Ref<_1b9523799_Data> self{};

	jule::Ref<_1b951b088_TypeKind> _field_kind{jule::Ref<_1b951b088_TypeKind>()};
	jule::Ref<_1b951b088_TypeKind> _field_cast_kind{jule::Ref<_1b951b088_TypeKind>()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Bool _field_reference{jule::Bool()};
	jule::Bool _field_lvalue{jule::Bool()};
	jule::Bool _field_variadiced{jule::Bool()};
	jule::Bool _field_is_rune{jule::Bool()};
	jule::Any _field_model{jule::Any()};
	jule::Bool _field_decl{jule::Bool()};
	jule::Ref<_1b9d678e5_Const> _field_constant{jule::Ref<_1b9d678e5_Const>()};


	_1b9523799_Data(jule::Ref<_1b951b088_TypeKind> __param_kind, jule::Ref<_1b951b088_TypeKind> __param_cast_kind, jule::Bool __param_mutable, jule::Bool __param_reference, jule::Bool __param_lvalue, jule::Bool __param_variadiced, jule::Bool __param_is_rune, jule::Any __param_model, jule::Bool __param_decl, jule::Ref<_1b9d678e5_Const> __param_constant) {
		this->self = jule::Ref<_1b9523799_Data>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_cast_kind = __param_cast_kind;
		this->_field_mutable = __param_mutable;
		this->_field_reference = __param_reference;
		this->_field_lvalue = __param_lvalue;
		this->_field_variadiced = __param_variadiced;
		this->_field_is_rune = __param_is_rune;
		this->_field_model = __param_model;
		this->_field_decl = __param_decl;
		this->_field_constant = __param_constant;
	}

	~_1b9523799_Data(void) { this->self.ref = nullptr; }

	_1b9523799_Data(void) { this->self = jule::Ref<_1b9523799_Data>::make(this, nullptr); }

	inline jule::Bool _method_is_nil(void);


	inline jule::Bool _method_is_void(void);


	inline jule::Bool _method_is_const(void);


	inline bool operator==(const _1b9523799_Data &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_cast_kind == _Src._field_cast_kind &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_reference == _Src._field_reference &&
			this->_field_lvalue == _Src._field_lvalue &&
			this->_field_variadiced == _Src._field_variadiced &&
			this->_field_is_rune == _Src._field_is_rune &&
			this->_field_model == _Src._field_model &&
			this->_field_decl == _Src._field_decl &&
			this->_field_constant == _Src._field_constant;
	}

	inline bool operator!=(const _1b9523799_Data &_Src) const { return !this->operator==(_Src); }
};


struct _1b9523799_Value {
	jule::Ref<_1b9523799_Value> self{};

	jule::Ref<_1d1e5192e_Expr> _field_expr{jule::Ref<_1d1e5192e_Expr>()};
	jule::Ref<_1b9523799_Data> _field_data{jule::Ref<_1b9523799_Data>()};


	_1b9523799_Value(jule::Ref<_1d1e5192e_Expr> __param_expr, jule::Ref<_1b9523799_Data> __param_data) {
		this->self = jule::Ref<_1b9523799_Value>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_data = __param_data;
	}

	~_1b9523799_Value(void) { this->self.ref = nullptr; }

	_1b9523799_Value(void) { this->self = jule::Ref<_1b9523799_Value>::make(this, nullptr); }

	inline bool operator==(const _1b9523799_Value &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_data == _Src._field_data;
	}

	inline bool operator!=(const _1b9523799_Value &_Src) const { return !this->operator==(_Src); }
};


struct _1b9523799_Eval {
	jule::Ref<_1b9523799_Eval> self{};

	jule::Ref<_1b912748b_Sema> _field_s{jule::Ref<_1b912748b_Sema>()};
	jule::Trait<_1b9a5b012_Lookup> _field_lookup{jule::Trait<_1b9a5b012_Lookup>()};
	jule::Ref<_1b951b088_TypeKind> _field_prefix{jule::Ref<_1b951b088_TypeKind>()};
	jule::Bool _field_unsafety{jule::Bool()};
	jule::Ref<_1b919cb2c_Var> _field_owner{jule::Ref<_1b919cb2c_Var>()};


	_1b9523799_Eval(jule::Ref<_1b912748b_Sema> __param_s, jule::Trait<_1b9a5b012_Lookup> __param_lookup, jule::Ref<_1b951b088_TypeKind> __param_prefix, jule::Bool __param_unsafety, jule::Ref<_1b919cb2c_Var> __param_owner) {
		this->self = jule::Ref<_1b9523799_Eval>::make(this, nullptr);

		this->_field_s = __param_s;
		this->_field_lookup = __param_lookup;
		this->_field_prefix = __param_prefix;
		this->_field_unsafety = __param_unsafety;
		this->_field_owner = __param_owner;
	}

	~_1b9523799_Eval(void) { this->self.ref = nullptr; }

	_1b9523799_Eval(void) { this->self = jule::Ref<_1b9523799_Eval>::make(this, nullptr); }

	inline void _method_push_err(_1d1da4277_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline jule::Bool _method_is_unsafe(void);


	inline jule::Bool _method_is_global(void);


	inline jule::Ref<_1b9523799_Data> _method_lit_nil(void);


	inline jule::Ref<_1b9523799_Data> _method_lit_str(jule::Ref<_1d1e5192e_LitExpr>);


	inline jule::Ref<_1b9523799_Data> _method_lit_bool(jule::Ref<_1d1e5192e_LitExpr>);


	inline jule::Ref<_1b9523799_Data> _method_lit_rune(jule::Ref<_1d1e5192e_LitExpr>);


	inline jule::Ref<_1b9523799_Data> _method_lit_float(jule::Ref<_1d1e5192e_LitExpr>);


	inline jule::Ref<_1b9523799_Data> _method_lit_int(jule::Ref<_1d1e5192e_LitExpr>);


	inline jule::Ref<_1b9523799_Data> _method_lit_num(jule::Ref<_1d1e5192e_LitExpr>);


	inline jule::Ref<_1b9523799_Data> _method_eval_lit(jule::Ref<_1d1e5192e_LitExpr>);


	inline jule::Any _method_find_builtins(jule::Str);


	inline jule::Any _method_get_def(jule::Str,jule::Bool);


	inline void _method_push_reference(jule::Ref<_1b8b10cbb_ReferenceStack>);


	inline void _method_push_reference_to_fn(jule::Ref<_1d21d97ee_FnIns>);


	inline void _method_push_reference_to_var(jule::Ref<_1b919cb2c_Var>);


	inline void _method_push_reference_to_struct(jule::Ref<_1d21c0b59_StructIns>);


	inline jule::Ref<_1b9523799_Data> _method___eval_enum(jule::Ref<_1b8dae520_Enum>);


	inline jule::Ref<_1b9523799_Data> _method_eval_enum(jule::Ref<_1b8dae520_Enum>,_1d1da4277_Token);


	inline jule::Ref<_1b9523799_Data> _method___eval_struct(jule::Ref<_1d21c0b59_StructIns>);


	inline jule::Ref<_1b9523799_Data> _method_eval_struct(jule::Ref<_1d21c0b59_StructIns>,_1d1da4277_Token);


	inline jule::Ref<_1b9523799_Data> _method_eval_fn_ins(jule::Ref<_1d21d97ee_FnIns>);


	inline jule::Ref<_1b9523799_Data> _method_eval_fn(jule::Ref<_1d21d97ee_Fn>,_1d1da4277_Token);


	inline void _method_push_illegal_cycle_error(jule::Ref<_1b919cb2c_Var>,jule::Ref<_1b919cb2c_Var>,jule::Str&);


	inline jule::Bool _method_check_cross_cycle(jule::Ref<_1b919cb2c_Var>,jule::Str&);


	inline jule::Bool _method_check_illegal_cycles(jule::Ref<_1b919cb2c_Var>,_1d1da4277_Token);


	inline jule::Ref<_1b9523799_Data> _method_eval_var(jule::Ref<_1b919cb2c_Var>,_1d1da4277_Token);


	inline jule::Ref<_1b9523799_Data> _method_eval_type_alias(jule::Ref<_1b951b088_TypeAlias>,_1d1da4277_Token);


	inline jule::Ref<_1b9523799_Data> _method_eval_def(jule::Any,_1d1da4277_Token);


	inline jule::Ref<_1b9523799_Data> _method_eval_ident(jule::Ref<_1d1e5192e_IdentExpr>);


	inline jule::Ref<_1b9523799_Data> _method_eval_unary_minus(jule::Ref<_1b9523799_Data>);


	inline jule::Ref<_1b9523799_Data> _method_eval_unary_plus(jule::Ref<_1b9523799_Data>);


	inline jule::Ref<_1b9523799_Data> _method_eval_unary_caret(jule::Ref<_1b9523799_Data>);


	inline jule::Ref<_1b9523799_Data> _method_eval_unary_excl(jule::Ref<_1b9523799_Data>);


	inline jule::Ref<_1b9523799_Data> _method_eval_unary_star(jule::Ref<_1b9523799_Data>,_1d1da4277_Token);


	inline jule::Ref<_1b9523799_Data> _method_eval_unary_amper(jule::Ref<_1b9523799_Data>);


	inline jule::Ref<_1b9523799_Data> _method_eval_unary_type_decl(jule::Ref<_1b9523799_Data>,jule::Ref<_1d1e5192e_UnaryExpr>);


	inline jule::Ref<_1b9523799_Data> _method_eval_unary(jule::Ref<_1d1e5192e_UnaryExpr>);


	inline jule::Ref<_1b9523799_Data> _method_eval_variadic(jule::Ref<_1d1e5192e_VariadicExpr>);


	inline jule::Ref<_1b9523799_Data> _method_eval_unsafe(jule::Ref<_1d1e5192e_UnsafeExpr>);


	inline jule::Ref<_1b9523799_Data> _method_eval_arr(jule::Ref<_1d1e5192e_SliceExpr>);


	inline jule::Ref<_1b9523799_Data> _method_eval_exp_slc(jule::Ref<_1d1e5192e_SliceExpr>,jule::Ref<_1b951b088_TypeKind>);


	inline jule::Ref<_1b9523799_Data> _method_eval_slice_expr(jule::Ref<_1d1e5192e_SliceExpr>);


	inline void _method_check_integer_indexing_by_data(jule::Ref<_1b9523799_Data>,_1d1da4277_Token);


	inline void _method_indexing_ptr(jule::Ref<_1b9523799_Data>,jule::Ref<_1b9523799_Data>,jule::Ref<_1d1e5192e_IndexingExpr>);


	inline void _method_indexing_arr(jule::Ref<_1b9523799_Data>,jule::Ref<_1b9523799_Data>,jule::Ref<_1d1e5192e_IndexingExpr>);


	inline void _method_indexing_slc(jule::Ref<_1b9523799_Data>,jule::Ref<_1b9523799_Data>,jule::Ref<_1d1e5192e_IndexingExpr>);


	inline void _method_indexing_map(jule::Ref<_1b9523799_Data>,jule::Ref<_1b9523799_Data>,jule::Ref<_1d1e5192e_IndexingExpr>);


	inline void _method_indexing_str(jule::Ref<_1b9523799_Data>,jule::Ref<_1b9523799_Data>,jule::Ref<_1d1e5192e_IndexingExpr>);


	inline void _method_to_indexing(jule::Ref<_1b9523799_Data>,jule::Ref<_1b9523799_Data>,jule::Ref<_1d1e5192e_IndexingExpr>);


	inline jule::Ref<_1b9523799_Data> _method_eval_ident_decl_from_indexing(jule::Ref<_1d1e5192e_IndexingExpr>);


	inline jule::Ref<_1b9523799_Data> _method_eval_indexing(jule::Ref<_1d1e5192e_IndexingExpr>);


	inline std::tuple<jule::Ref<_1b9523799_Data>,jule::Ref<_1b9523799_Data>> _method_eval_slicing_exprs(jule::Ref<_1d1e5192e_SlicingExpr>);


	inline void _method_slicing_arr(jule::Ref<_1b9523799_Data>);


	inline void _method_slicing_slc(jule::Ref<_1b9523799_Data>);


	inline void _method_slicing_str(jule::Ref<_1b9523799_Data>,jule::Ref<_1b9523799_Data>,jule::Ref<_1b9523799_Data>);


	inline void _method_check_slicing(jule::Ref<_1b9523799_Data>,jule::Ref<_1b9523799_Data>,jule::Ref<_1b9523799_Data>,jule::Ref<_1d1e5192e_SlicingExpr>);


	inline jule::Ref<_1b9523799_Data> _method_eval_slicing(jule::Ref<_1d1e5192e_SlicingExpr>);


	inline void _method_cast_ptr(jule::Ref<_1b951b088_TypeKind>,jule::Ref<_1b9523799_Data>,_1d1da4277_Token);


	inline void _method_cast_struct(jule::Ref<_1b951b088_TypeKind>,jule::Ref<_1b9523799_Data>,_1d1da4277_Token);


	inline void _method_cast_ref(jule::Ref<_1b951b088_TypeKind>,jule::Ref<_1b9523799_Data>,_1d1da4277_Token);


	inline void _method_cast_slc(jule::Ref<_1b951b088_TypeKind>,jule::Ref<_1b9523799_Data>,_1d1da4277_Token);


	inline void _method_cast_str(jule::Ref<_1b9523799_Data>,_1d1da4277_Token);


	inline void _method_cast_int(jule::Ref<_1b951b088_TypeKind>,jule::Ref<_1b9523799_Data>,_1d1da4277_Token);


	inline void _method_cast_num(jule::Ref<_1b951b088_TypeKind>,jule::Ref<_1b9523799_Data>,_1d1da4277_Token);


	inline void _method_cast_prim(jule::Ref<_1b951b088_TypeKind>,jule::Ref<_1b9523799_Data>,_1d1da4277_Token);


	inline void _method_cast_constant(jule::Ref<_1b951b088_TypeKind>&,jule::Ref<_1b9523799_Data>&);


	inline jule::Ref<_1b9523799_Data> _method_eval_cast_by_type_n_data(jule::Ref<_1b951b088_TypeKind>,jule::Ref<_1b9523799_Data>,_1d1da4277_Token);


	inline jule::Ref<_1b9523799_Data> _method_eval_cast(jule::Ref<_1d1e5192e_CastExpr>);


	inline jule::Ref<_1b9523799_Data> _method_eval_ns_selection(jule::Ref<_1d1e5192e_NsSelectionExpr>);


	inline jule::Ref<_1b9523799_Data> _method_eval_struct_lit_explicit(jule::Ref<_1d21c0b59_StructIns>,jule::Slice<jule::Any>,_1d1da4277_Token);


	inline jule::Ref<_1b9523799_Data> _method_eval_struct_lit(jule::Ref<_1d1e5192e_StructLit>);


	inline jule::Ref<_1b9523799_Data> _method_eval_type(jule::Ref<_1d1e5192e_TypeDecl>);


	inline jule::Ref<_1b9523799_Data> _method_call_type_fn(jule::Ref<_1d1e5192e_FnCallExpr>,jule::Ref<_1b9523799_Data>);


	inline std::tuple<jule::Bool,jule::Bool> _method_check_fn_call_generics(jule::Ref<_1d21d97ee_FnIns>,jule::Ref<_1d1e5192e_FnCallExpr>);


	inline jule::Ref<_1b9523799_Data> _method_call_builtin_fn(jule::Ref<_1d1e5192e_FnCallExpr>,jule::Ref<_1b9523799_Data>);


	inline void _method_check_fn_of_concurrent_call(jule::Ref<_1d21d97ee_FnIns>&,_1d1da4277_Token);


	inline jule::Ref<_1b9523799_Data> _method_call_fn(jule::Ref<_1d1e5192e_FnCallExpr>,jule::Ref<_1b9523799_Data>);


	inline jule::Ref<_1b9523799_Data> _method_eval_fn_call(jule::Ref<_1d1e5192e_FnCallExpr>);


	inline jule::Ref<_1b9523799_Data> _method_eval_enum_static(jule::Ref<_1b8dae520_Enum>,_1d1da4277_Token);


	inline jule::Ref<_1b9523799_Data> _method_eval_struct_static(jule::Ref<_1d21c0b59_StructIns>,_1d1da4277_Token);


	inline jule::Ref<_1b9523799_Data> _method_eval_trait_sub_ident(jule::Ref<_1b9523799_Data>,jule::Ref<_1b8cd2894_Trait>,_1d1da4277_Token);


	inline jule::Ref<_1b9523799_Data> _method_eval_struct_sub_ident(jule::Ref<_1b9523799_Data>,jule::Ref<_1d21c0b59_StructIns>,jule::Ref<_1d1e5192e_SubIdentExpr>,jule::Bool);


	inline jule::Ref<_1b9523799_Data> _method_eval_slice_sub_ident(jule::Ref<_1b9523799_Data>,_1d1da4277_Token);


	inline jule::Ref<_1b9523799_Data> _method_eval_array_sub_ident(jule::Ref<_1b9523799_Data>,_1d1da4277_Token);


	inline jule::Ref<_1b9523799_Data> _method_eval_map_sub_ident(jule::Ref<_1b9523799_Data>,_1d1da4277_Token);


	inline jule::Ref<_1b9523799_Data> _method_eval_str_sub_ident(jule::Ref<_1b9523799_Data>,_1d1da4277_Token);


	inline jule::Ref<_1b9523799_Data> _method_eval_int_type_static(_1d1da4277_Token);


	inline jule::Ref<_1b9523799_Data> _method_eval_uint_type_static(_1d1da4277_Token);


	inline jule::Ref<_1b9523799_Data> _method_eval_i8_type_static(_1d1da4277_Token);


	inline jule::Ref<_1b9523799_Data> _method_eval_i16_type_static(_1d1da4277_Token);


	inline jule::Ref<_1b9523799_Data> _method_eval_i32_type_static(_1d1da4277_Token);


	inline jule::Ref<_1b9523799_Data> _method_eval_i64_type_static(_1d1da4277_Token);


	inline jule::Ref<_1b9523799_Data> _method_eval_u8_type_static(_1d1da4277_Token);


	inline jule::Ref<_1b9523799_Data> _method_eval_u16_type_static(_1d1da4277_Token);


	inline jule::Ref<_1b9523799_Data> _method_eval_u32_type_static(_1d1da4277_Token);


	inline jule::Ref<_1b9523799_Data> _method_eval_u64_type_static(_1d1da4277_Token);


	inline jule::Ref<_1b9523799_Data> _method_eval_f32_type_tatic(_1d1da4277_Token);


	inline jule::Ref<_1b9523799_Data> _method_eval_f64_type_static(_1d1da4277_Token);


	inline jule::Ref<_1b9523799_Data> _method_eval_prim_static(jule::Str,_1d1da4277_Token);


	inline jule::Ref<_1b9523799_Data> _method_eval_type_static(jule::Ref<_1b9523799_Data>,jule::Ref<_1d1e5192e_SubIdentExpr>);


	inline jule::Ref<_1b9523799_Data> _method_eval_obj_sub_ident(jule::Ref<_1b9523799_Data>,jule::Ref<_1d1e5192e_SubIdentExpr>);


	inline jule::Ref<_1b9523799_Data> _method_eval_sub_ident(jule::Ref<_1d1e5192e_SubIdentExpr>);


	inline jule::Ref<_1b9523799_Data> _method_eval_tuple(jule::Ref<_1d1e5192e_TupleExpr>);


	inline jule::Ref<_1b9523799_Data> _method_eval_map(jule::Ref<_1b951b088_Map>,jule::Ref<_1d1e5192e_BraceLit>);


	inline jule::Ref<_1b9523799_Data> _method_eval_brace_lit(jule::Ref<_1d1e5192e_BraceLit>);


	inline jule::Ref<_1b9523799_Data> _method_eval_anon_fn(jule::Ref<_1d1e5192e_FnDecl>);


	inline jule::Ref<_1b9523799_Data> _method_eval_binop(jule::Ref<_1d1e5192e_BinopExpr>);


	inline jule::Ref<_1b9523799_Data> _method_eval_ternary(jule::Ref<_1d1e5192e_TernaryExpr>);


	inline jule::Ref<_1b9523799_Data> _method_eval_expr_kind(jule::Any);


	inline jule::Ref<_1b9523799_Data> _method_eval(jule::Ref<_1d1e5192e_Expr>);


	inline jule::Ref<_1b9523799_Data> _method_eval_expr(jule::Ref<_1d1e5192e_Expr>);


	inline bool operator==(const _1b9523799_Eval &_Src) const {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_lookup == _Src._field_lookup &&
			this->_field_prefix == _Src._field_prefix &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_owner == _Src._field_owner;
	}

	inline bool operator!=(const _1b9523799_Eval &_Src) const { return !this->operator==(_Src); }
};


struct _1b951b088_TypeKind: public _1b951b088_Kind {
	jule::Ref<_1b951b088_TypeKind> self{};

	jule::Str _field_cpp_ident{jule::Str()};
	jule::Bool _field_variadic{jule::Bool()};
	jule::Trait<_1b951b088_Kind> _field_kind{jule::Trait<_1b951b088_Kind>()};


	_1b951b088_TypeKind(jule::Str __param_cpp_ident, jule::Bool __param_variadic, jule::Trait<_1b951b088_Kind> __param_kind) {
		this->self = jule::Ref<_1b951b088_TypeKind>::make(this, nullptr);

		this->_field_cpp_ident = __param_cpp_ident;
		this->_field_variadic = __param_variadic;
		this->_field_kind = __param_kind;
	}

	~_1b951b088_TypeKind(void) { this->self.ref = nullptr; }

	_1b951b088_TypeKind(void) { this->self = jule::Ref<_1b951b088_TypeKind>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1b951b088_TypeKind>);


	inline jule::Ref<_1b951b088_TypeKind> _method_clone(void);


	inline jule::Bool _method_cpp_linked(void);


	inline jule::Bool _method_is_nil(void);


	inline jule::Bool _method_void(void);


	inline jule::Bool _method_lvalue(void);


	inline jule::Bool _method_mutable(void);


	inline jule::Bool _method_nil_compatible(void);


	inline jule::Bool _method_supports_cloning(void);


	inline jule::Bool _method_variadicable(void);


	inline jule::Ref<_1b951b088_Prim> _method_prim(void);


	inline jule::Ref<_1b951b088_Ref> _method_ref(void);


	inline jule::Ref<_1b951b088_Ptr> _method_ptr(void);


	inline jule::Ref<_1b8dae520_Enum> _method_enm(void);


	inline jule::Ref<_1b951b088_Arr> _method_arr(void);


	inline jule::Ref<_1b951b088_Slc> _method_slc(void);


	inline jule::Ref<_1d21d97ee_FnIns> _method_fnc(void);


	inline jule::Ref<_1d21c0b59_StructIns> _method_strct(void);


	inline jule::Ref<_1b8cd2894_Trait> _method_trt(void);


	inline jule::Ref<_1b951b088_Map> _method_map(void);


	inline jule::Ref<_1b951b088_Tuple> _method_tup(void);


	inline bool operator==(const _1b951b088_TypeKind &_Src) const {
		return 
			this->_field_cpp_ident == _Src._field_cpp_ident &&
			this->_field_variadic == _Src._field_variadic &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1b951b088_TypeKind &_Src) const { return !this->operator==(_Src); }
};


struct _1b951b088_TypeSymbol {
	jule::Ref<_1b951b088_TypeSymbol> self{};

	jule::Ref<_1d1e5192e_TypeDecl> _field_decl{jule::Ref<_1d1e5192e_TypeDecl>()};
	jule::Ref<_1b951b088_TypeKind> _field_kind{jule::Ref<_1b951b088_TypeKind>()};


	_1b951b088_TypeSymbol(jule::Ref<_1d1e5192e_TypeDecl> __param_decl, jule::Ref<_1b951b088_TypeKind> __param_kind) {
		this->self = jule::Ref<_1b951b088_TypeSymbol>::make(this, nullptr);

		this->_field_decl = __param_decl;
		this->_field_kind = __param_kind;
	}

	~_1b951b088_TypeSymbol(void) { this->self.ref = nullptr; }

	_1b951b088_TypeSymbol(void) { this->self = jule::Ref<_1b951b088_TypeSymbol>::make(this, nullptr); }

	inline jule::Bool _method_checked(void);


	inline void _method_remove_kind(void);


	inline bool operator==(const _1b951b088_TypeSymbol &_Src) const {
		return 
			this->_field_decl == _Src._field_decl &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1b951b088_TypeSymbol &_Src) const { return !this->operator==(_Src); }
};


struct _1b951b088_Prim: public _1b951b088_Kind {
	jule::Ref<_1b951b088_Prim> self{};

	jule::Str _field_kind{jule::Str()};


	_1b951b088_Prim(jule::Str __param_kind) {
		this->self = jule::Ref<_1b951b088_Prim>::make(this, nullptr);

		this->_field_kind = __param_kind;
	}

	~_1b951b088_Prim(void) { this->self.ref = nullptr; }

	_1b951b088_Prim(void) { this->self = jule::Ref<_1b951b088_Prim>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1b951b088_TypeKind>);


	inline jule::Bool _method_is_i8(void);


	inline jule::Bool _method_is_i16(void);


	inline jule::Bool _method_is_i32(void);


	inline jule::Bool _method_is_i64(void);


	inline jule::Bool _method_is_u8(void);


	inline jule::Bool _method_is_u16(void);


	inline jule::Bool _method_is_u32(void);


	inline jule::Bool _method_is_u64(void);


	inline jule::Bool _method_is_f32(void);


	inline jule::Bool _method_is_f64(void);


	inline jule::Bool _method_is_int(void);


	inline jule::Bool _method_is_uint(void);


	inline jule::Bool _method_is_uintptr(void);


	inline jule::Bool _method_is_bool(void);


	inline jule::Bool _method_is_str(void);


	inline jule::Bool _method_is_any(void);


	inline bool operator==(const _1b951b088_Prim &_Src) const {
		return 
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1b951b088_Prim &_Src) const { return !this->operator==(_Src); }
};


struct _1b951b088_Ref: public _1b951b088_Kind {
	jule::Ref<_1b951b088_Ref> self{};

	jule::Ref<_1b951b088_TypeKind> _field_elem{jule::Ref<_1b951b088_TypeKind>()};


	_1b951b088_Ref(jule::Ref<_1b951b088_TypeKind> __param_elem) {
		this->self = jule::Ref<_1b951b088_Ref>::make(this, nullptr);

		this->_field_elem = __param_elem;
	}

	~_1b951b088_Ref(void) { this->self.ref = nullptr; }

	_1b951b088_Ref(void) { this->self = jule::Ref<_1b951b088_Ref>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1b951b088_TypeKind>);


	inline bool operator==(const _1b951b088_Ref &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _1b951b088_Ref &_Src) const { return !this->operator==(_Src); }
};


struct _1b951b088_Slc: public _1b951b088_Kind {
	jule::Ref<_1b951b088_Slc> self{};

	jule::Ref<_1b951b088_TypeKind> _field_elem{jule::Ref<_1b951b088_TypeKind>()};


	_1b951b088_Slc(jule::Ref<_1b951b088_TypeKind> __param_elem) {
		this->self = jule::Ref<_1b951b088_Slc>::make(this, nullptr);

		this->_field_elem = __param_elem;
	}

	~_1b951b088_Slc(void) { this->self.ref = nullptr; }

	_1b951b088_Slc(void) { this->self = jule::Ref<_1b951b088_Slc>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1b951b088_TypeKind>);


	inline bool operator==(const _1b951b088_Slc &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _1b951b088_Slc &_Src) const { return !this->operator==(_Src); }
};


struct _1b951b088_Tuple: public _1b951b088_Kind {
	jule::Ref<_1b951b088_Tuple> self{};

	jule::Slice<jule::Ref<_1b951b088_TypeKind>> _field_types{jule::Slice<jule::Ref<_1b951b088_TypeKind>>()};


	_1b951b088_Tuple(jule::Slice<jule::Ref<_1b951b088_TypeKind>> __param_types) {
		this->self = jule::Ref<_1b951b088_Tuple>::make(this, nullptr);

		this->_field_types = __param_types;
	}

	~_1b951b088_Tuple(void) { this->self.ref = nullptr; }

	_1b951b088_Tuple(void) { this->self = jule::Ref<_1b951b088_Tuple>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1b951b088_TypeKind>);


	inline bool operator==(const _1b951b088_Tuple &_Src) const {
		return 
			this->_field_types == _Src._field_types;
	}

	inline bool operator!=(const _1b951b088_Tuple &_Src) const { return !this->operator==(_Src); }
};


struct _1b951b088_Map: public _1b951b088_Kind {
	jule::Ref<_1b951b088_Map> self{};

	jule::Ref<_1b951b088_TypeKind> _field_key{jule::Ref<_1b951b088_TypeKind>()};
	jule::Ref<_1b951b088_TypeKind> _field_val{jule::Ref<_1b951b088_TypeKind>()};


	_1b951b088_Map(jule::Ref<_1b951b088_TypeKind> __param_key, jule::Ref<_1b951b088_TypeKind> __param_val) {
		this->self = jule::Ref<_1b951b088_Map>::make(this, nullptr);

		this->_field_key = __param_key;
		this->_field_val = __param_val;
	}

	~_1b951b088_Map(void) { this->self.ref = nullptr; }

	_1b951b088_Map(void) { this->self = jule::Ref<_1b951b088_Map>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1b951b088_TypeKind>);


	inline bool operator==(const _1b951b088_Map &_Src) const {
		return 
			this->_field_key == _Src._field_key &&
			this->_field_val == _Src._field_val;
	}

	inline bool operator!=(const _1b951b088_Map &_Src) const { return !this->operator==(_Src); }
};


struct _1b951b088_Arr: public _1b951b088_Kind {
	jule::Ref<_1b951b088_Arr> self{};

	jule::Bool _field_auto{jule::Bool()};
	jule::Int _field_n{jule::Int()};
	jule::Ref<_1b951b088_TypeKind> _field_elem{jule::Ref<_1b951b088_TypeKind>()};


	_1b951b088_Arr(jule::Bool __param_auto, jule::Int __param_n, jule::Ref<_1b951b088_TypeKind> __param_elem) {
		this->self = jule::Ref<_1b951b088_Arr>::make(this, nullptr);

		this->_field_auto = __param_auto;
		this->_field_n = __param_n;
		this->_field_elem = __param_elem;
	}

	~_1b951b088_Arr(void) { this->self.ref = nullptr; }

	_1b951b088_Arr(void) { this->self = jule::Ref<_1b951b088_Arr>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1b951b088_TypeKind>);


	inline bool operator==(const _1b951b088_Arr &_Src) const {
		return 
			this->_field_auto == _Src._field_auto &&
			this->_field_n == _Src._field_n &&
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _1b951b088_Arr &_Src) const { return !this->operator==(_Src); }
};


struct _1b951b088_Ptr: public _1b951b088_Kind {
	jule::Ref<_1b951b088_Ptr> self{};

	jule::Ref<_1b951b088_TypeKind> _field_elem{jule::Ref<_1b951b088_TypeKind>()};


	_1b951b088_Ptr(jule::Ref<_1b951b088_TypeKind> __param_elem) {
		this->self = jule::Ref<_1b951b088_Ptr>::make(this, nullptr);

		this->_field_elem = __param_elem;
	}

	~_1b951b088_Ptr(void) { this->self.ref = nullptr; }

	_1b951b088_Ptr(void) { this->self = jule::Ref<_1b951b088_Ptr>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1b951b088_TypeKind>);


	inline jule::Bool _method_is_unsafe(void);


	inline bool operator==(const _1b951b088_Ptr &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _1b951b088_Ptr &_Src) const { return !this->operator==(_Src); }
};


struct _1b951b088_Referencer {
	jule::Ref<_1b951b088_Referencer> self{};

	jule::Str _field_ident{jule::Str()};
	jule::Any _field_owner{jule::Any()};
	jule::Slice<jule::Any>* _field_refs{nullptr};


	_1b951b088_Referencer(jule::Str __param_ident, jule::Any __param_owner, jule::Slice<jule::Any>* __param_refs) {
		this->self = jule::Ref<_1b951b088_Referencer>::make(this, nullptr);

		this->_field_ident = __param_ident;
		this->_field_owner = __param_owner;
		this->_field_refs = __param_refs;
	}

	~_1b951b088_Referencer(void) { this->self.ref = nullptr; }

	_1b951b088_Referencer(void) { this->self = jule::Ref<_1b951b088_Referencer>::make(this, nullptr); }

	inline bool operator==(const _1b951b088_Referencer &_Src) const {
		return 
			this->_field_ident == _Src._field_ident &&
			this->_field_owner == _Src._field_owner &&
			this->_field_refs == _Src._field_refs;
	}

	inline bool operator!=(const _1b951b088_Referencer &_Src) const { return !this->operator==(_Src); }
};


struct _1d1c2a7b3_PlainImporter: public _1b8e0c01d_Importer {
	jule::Ref<_1d1c2a7b3_PlainImporter> self{};

	jule::Slice<jule::Ref<_1b8e0c01d_ImportInfo>> _field_all_packages{jule::Slice<jule::Ref<_1b8e0c01d_ImportInfo>>()};


	_1d1c2a7b3_PlainImporter(jule::Slice<jule::Ref<_1b8e0c01d_ImportInfo>> __param_all_packages) {
		this->self = jule::Ref<_1d1c2a7b3_PlainImporter>::make(this, nullptr);

		this->_field_all_packages = __param_all_packages;
	}

	~_1d1c2a7b3_PlainImporter(void) { this->self.ref = nullptr; }

	_1d1c2a7b3_PlainImporter(void) { this->self = jule::Ref<_1d1c2a7b3_PlainImporter>::make(this, nullptr); }

	inline jule::Ref<_1b8e0c01d_ImportInfo> _method_get_import(jule::Str);


	inline std::tuple<jule::Slice<jule::Ref<_1d21640e7_Ast>>,jule::Slice<_1d0557e9e_Log>> _method_import_package(jule::Str);


	inline void _method_imported(jule::Ref<_1b8e0c01d_ImportInfo>);


	inline bool operator==(const _1d1c2a7b3_PlainImporter &_Src) const {
		return 
			this->_field_all_packages == _Src._field_all_packages;
	}

	inline bool operator!=(const _1d1c2a7b3_PlainImporter &_Src) const { return !this->operator==(_Src); }
};


struct _1d162b2a2_OrderedDefines {
	jule::Ref<_1d162b2a2_OrderedDefines> self{};

	jule::Slice<jule::Ref<_1d21c0b59_Struct>> _field_structs{jule::Slice<jule::Ref<_1d21c0b59_Struct>>()};
	jule::Slice<jule::Ref<_1b919cb2c_Var>> _field_globals{jule::Slice<jule::Ref<_1b919cb2c_Var>>()};


	_1d162b2a2_OrderedDefines(jule::Slice<jule::Ref<_1d21c0b59_Struct>> __param_structs, jule::Slice<jule::Ref<_1b919cb2c_Var>> __param_globals) {
		this->self = jule::Ref<_1d162b2a2_OrderedDefines>::make(this, nullptr);

		this->_field_structs = __param_structs;
		this->_field_globals = __param_globals;
	}

	~_1d162b2a2_OrderedDefines(void) { this->self.ref = nullptr; }

	_1d162b2a2_OrderedDefines(void) { this->self = jule::Ref<_1d162b2a2_OrderedDefines>::make(this, nullptr); }

	inline bool operator==(const _1d162b2a2_OrderedDefines &_Src) const {
		return 
			this->_field_structs == _Src._field_structs &&
			this->_field_globals == _Src._field_globals;
	}

	inline bool operator!=(const _1d162b2a2_OrderedDefines &_Src) const { return !this->operator==(_Src); }
};


struct _1d162b2a2_DefineOrderer {
	jule::Ref<_1d162b2a2_DefineOrderer> self{};

	~_1d162b2a2_DefineOrderer(void) { this->self.ref = nullptr; }

	_1d162b2a2_DefineOrderer(void) { this->self = jule::Ref<_1d162b2a2_DefineOrderer>::make(this, nullptr); }

	static inline jule::Bool _static_method_is_common_ordered_0(jule::Slice<jule::Ref<_1b919cb2c_Var>>&,jule::Ref<_1b919cb2c_Var>);
	static inline jule::Bool _static_method_is_common_ordered_1(jule::Slice<jule::Ref<_1d21c0b59_Struct>>&,jule::Ref<_1d21c0b59_Struct>);


	static inline void _static_method_order_common_0(jule::Slice<jule::Ref<_1b919cb2c_Var>>&);
	static inline void _static_method_order_common_1(jule::Slice<jule::Ref<_1d21c0b59_Struct>>&);


	static inline void _static_method_order_variables(jule::Slice<jule::Ref<_1b919cb2c_Var>>&);


	static inline void _static_method_order_structures(jule::Slice<jule::Ref<_1d21c0b59_Struct>>&);


	inline bool operator==(const _1d162b2a2_DefineOrderer &_Src) const { return true; }

	inline bool operator!=(const _1d162b2a2_DefineOrderer &_Src) const { return !this->operator==(_Src); }
};


struct _1d063d21b_ScopeDeadCode {
	jule::Ref<_1d063d21b_ScopeDeadCode> self{};

	jule::Ref<_1d063d21b_ScopeDeadCode> _field_parent{jule::Ref<_1d063d21b_ScopeDeadCode>()};
	jule::Ref<_1b8cd2c4b_Scope> _field_s{jule::Ref<_1b8cd2c4b_Scope>()};
	jule::Slice<jule::Any>* _field_stmts{nullptr};
	jule::Int _field_i{jule::Int()};


	_1d063d21b_ScopeDeadCode(jule::Ref<_1d063d21b_ScopeDeadCode> __param_parent, jule::Ref<_1b8cd2c4b_Scope> __param_s, jule::Slice<jule::Any>* __param_stmts, jule::Int __param_i) {
		this->self = jule::Ref<_1d063d21b_ScopeDeadCode>::make(this, nullptr);

		this->_field_parent = __param_parent;
		this->_field_s = __param_s;
		this->_field_stmts = __param_stmts;
		this->_field_i = __param_i;
	}

	~_1d063d21b_ScopeDeadCode(void) { this->self.ref = nullptr; }

	_1d063d21b_ScopeDeadCode(void) { this->self = jule::Ref<_1d063d21b_ScopeDeadCode>::make(this, nullptr); }

	inline void _method_optimize_child(jule::Ref<_1b8cd2c4b_Scope>&);


	inline void _method_eliminate_followed(void);


	inline void _method_optimize_stmt(jule::Any);


	inline void _method_optimize_stmts(void);


	inline bool operator==(const _1d063d21b_ScopeDeadCode &_Src) const {
		return 
			this->_field_parent == _Src._field_parent &&
			this->_field_s == _Src._field_s &&
			this->_field_stmts == _Src._field_stmts &&
			this->_field_i == _Src._field_i;
	}

	inline bool operator!=(const _1d063d21b_ScopeDeadCode &_Src) const { return !this->operator==(_Src); }
};


struct _1ba3a81dd_AbsTime {
	jule::Ref<_1ba3a81dd_AbsTime> self{};

	jule::Uint _field_day{jule::Uint()};
	jule::Uint _field_week_day{jule::Uint()};
	jule::Uint _field_year_day{jule::Uint()};
	jule::Uint _field_month{jule::Uint()};
	jule::Uint _field_year{jule::Uint()};
	jule::Uint _field_second{jule::Uint()};
	jule::Uint _field_minute{jule::Uint()};
	jule::Uint _field_hour{jule::Uint()};


	_1ba3a81dd_AbsTime(jule::Uint __param_day, jule::Uint __param_week_day, jule::Uint __param_year_day, jule::Uint __param_month, jule::Uint __param_year, jule::Uint __param_second, jule::Uint __param_minute, jule::Uint __param_hour) {
		this->self = jule::Ref<_1ba3a81dd_AbsTime>::make(this, nullptr);

		this->_field_day = __param_day;
		this->_field_week_day = __param_week_day;
		this->_field_year_day = __param_year_day;
		this->_field_month = __param_month;
		this->_field_year = __param_year;
		this->_field_second = __param_second;
		this->_field_minute = __param_minute;
		this->_field_hour = __param_hour;
	}

	~_1ba3a81dd_AbsTime(void) { this->self.ref = nullptr; }

	_1ba3a81dd_AbsTime(void) { this->self = jule::Ref<_1ba3a81dd_AbsTime>::make(this, nullptr); }

	inline jule::U64 _method_unix(void);


	inline bool operator==(const _1ba3a81dd_AbsTime &_Src) const {
		return 
			this->_field_day == _Src._field_day &&
			this->_field_week_day == _Src._field_week_day &&
			this->_field_year_day == _Src._field_year_day &&
			this->_field_month == _Src._field_month &&
			this->_field_year == _Src._field_year &&
			this->_field_second == _Src._field_second &&
			this->_field_minute == _Src._field_minute &&
			this->_field_hour == _Src._field_hour;
	}

	inline bool operator!=(const _1ba3a81dd_AbsTime &_Src) const { return !this->operator==(_Src); }
};


struct _1ba3a81dd_Time {
	jule::Ref<_1ba3a81dd_Time> self{};

	jule::U64 _field_sec{jule::U64()};


	_1ba3a81dd_Time(jule::U64 __param_sec) {
		this->self = jule::Ref<_1ba3a81dd_Time>::make(this, nullptr);

		this->_field_sec = __param_sec;
	}

	~_1ba3a81dd_Time(void) { this->self.ref = nullptr; }

	_1ba3a81dd_Time(void) { this->self = jule::Ref<_1ba3a81dd_Time>::make(this, nullptr); }

	static inline _1ba3a81dd_Time _static_method_unix(jule::U64);


	static inline _1ba3a81dd_Time _static_method_now(void);


	inline jule::U64 _method_unix(void);


	inline jule::Uint _method_day(void);


	inline jule::Uint _method_month(void);


	inline jule::Uint _method_year(void);


	inline jule::Uint _method_second(void);


	inline jule::Uint _method_minute(void);


	inline jule::Uint _method_hour(void);


	inline _1ba3a81dd_AbsTime _method_abs(void);


	inline bool operator==(const _1ba3a81dd_Time &_Src) const {
		return 
			this->_field_sec == _Src._field_sec;
	}

	inline bool operator!=(const _1ba3a81dd_Time &_Src) const { return !this->operator==(_Src); }
};


struct _1ba3a81dd_Duration {
	jule::Ref<_1ba3a81dd_Duration> self{};

	~_1ba3a81dd_Duration(void) { this->self.ref = nullptr; }

	_1ba3a81dd_Duration(void) { this->self = jule::Ref<_1ba3a81dd_Duration>::make(this, nullptr); }

	static inline jule::I64 _static_method_nanoseconds(jule::I64);


	static inline jule::I64 _static_method_microseconds(jule::I64);


	static inline jule::I64 _static_method_milliseconds(jule::I64);


	static inline jule::I64 _static_method_seconds(jule::I64);


	static inline jule::I64 _static_method_minutes(jule::I64);


	static inline jule::I64 _static_method_hours(jule::I64);


	inline bool operator==(const _1ba3a81dd_Duration &_Src) const { return true; }

	inline bool operator!=(const _1ba3a81dd_Duration &_Src) const { return !this->operator==(_Src); }
};


struct _1d173d293_IndexRangeSetter: public _1d173d293_RangeSetter {
	jule::Ref<_1d173d293_IndexRangeSetter> self{};

	~_1d173d293_IndexRangeSetter(void) { this->self.ref = nullptr; }

	_1d173d293_IndexRangeSetter(void) { this->self = jule::Ref<_1d173d293_IndexRangeSetter>::make(this, nullptr); }

	inline jule::Str _method_setup_vars(jule::Ref<_1b919cb2c_Var>,jule::Ref<_1b919cb2c_Var>);


	inline jule::Str _method_next_steps(jule::Ref<_1b919cb2c_Var>,jule::Ref<_1b919cb2c_Var>,jule::Str);


	inline bool operator==(const _1d173d293_IndexRangeSetter &_Src) const { return true; }

	inline bool operator!=(const _1d173d293_IndexRangeSetter &_Src) const { return !this->operator==(_Src); }
};


struct _1d173d293_MapRangeSetter: public _1d173d293_RangeSetter {
	jule::Ref<_1d173d293_MapRangeSetter> self{};

	~_1d173d293_MapRangeSetter(void) { this->self.ref = nullptr; }

	_1d173d293_MapRangeSetter(void) { this->self = jule::Ref<_1d173d293_MapRangeSetter>::make(this, nullptr); }

	inline jule::Str _method_setup_vars(jule::Ref<_1b919cb2c_Var>,jule::Ref<_1b919cb2c_Var>);


	inline jule::Str _method_next_steps(jule::Ref<_1b919cb2c_Var>,jule::Ref<_1b919cb2c_Var>,jule::Str);


	inline bool operator==(const _1d173d293_MapRangeSetter &_Src) const { return true; }

	inline bool operator!=(const _1d173d293_MapRangeSetter &_Src) const { return !this->operator==(_Src); }
};


struct _1d1e5192e_MatchCase {
	jule::Ref<_1d1e5192e_MatchCase> self{};

	_1d1da4277_Token _field_token{_1d1da4277_Token()};
	jule::Bool _field_type_match{jule::Bool()};
	jule::Ref<_1d1e5192e_Expr> _field_expr{jule::Ref<_1d1e5192e_Expr>()};
	jule::Slice<jule::Ref<_1d1e5192e_Case>> _field_cases{jule::Slice<jule::Ref<_1d1e5192e_Case>>()};
	jule::Ref<_1d1e5192e_Else> _field_default{jule::Ref<_1d1e5192e_Else>()};


	_1d1e5192e_MatchCase(_1d1da4277_Token __param_token, jule::Bool __param_type_match, jule::Ref<_1d1e5192e_Expr> __param_expr, jule::Slice<jule::Ref<_1d1e5192e_Case>> __param_cases, jule::Ref<_1d1e5192e_Else> __param_default) {
		this->self = jule::Ref<_1d1e5192e_MatchCase>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_type_match = __param_type_match;
		this->_field_expr = __param_expr;
		this->_field_cases = __param_cases;
		this->_field_default = __param_default;
	}

	~_1d1e5192e_MatchCase(void) { this->self.ref = nullptr; }

	_1d1e5192e_MatchCase(void) { this->self = jule::Ref<_1d1e5192e_MatchCase>::make(this, nullptr); }

	inline bool operator==(const _1d1e5192e_MatchCase &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_type_match == _Src._field_type_match &&
			this->_field_expr == _Src._field_expr &&
			this->_field_cases == _Src._field_cases &&
			this->_field_default == _Src._field_default;
	}

	inline bool operator!=(const _1d1e5192e_MatchCase &_Src) const { return !this->operator==(_Src); }
};


struct _1d1e5192e_LitExpr {
	jule::Ref<_1d1e5192e_LitExpr> self{};

	_1d1da4277_Token _field_token{_1d1da4277_Token()};
	jule::Str _field_value{jule::Str()};


	_1d1e5192e_LitExpr(_1d1da4277_Token __param_token, jule::Str __param_value) {
		this->self = jule::Ref<_1d1e5192e_LitExpr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_value = __param_value;
	}

	~_1d1e5192e_LitExpr(void) { this->self.ref = nullptr; }

	_1d1e5192e_LitExpr(void) { this->self = jule::Ref<_1d1e5192e_LitExpr>::make(this, nullptr); }

	inline jule::Bool _method_is_nil(void);


	inline bool operator==(const _1d1e5192e_LitExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_value == _Src._field_value;
	}

	inline bool operator!=(const _1d1e5192e_LitExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1d1e5192e_UnsafeExpr {
	jule::Ref<_1d1e5192e_UnsafeExpr> self{};

	_1d1da4277_Token _field_token{_1d1da4277_Token()};
	jule::Any _field_expr{jule::Any()};


	_1d1e5192e_UnsafeExpr(_1d1da4277_Token __param_token, jule::Any __param_expr) {
		this->self = jule::Ref<_1d1e5192e_UnsafeExpr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_expr = __param_expr;
	}

	~_1d1e5192e_UnsafeExpr(void) { this->self.ref = nullptr; }

	_1d1e5192e_UnsafeExpr(void) { this->self = jule::Ref<_1d1e5192e_UnsafeExpr>::make(this, nullptr); }

	inline bool operator==(const _1d1e5192e_UnsafeExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1d1e5192e_UnsafeExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1d1e5192e_IdentExpr {
	jule::Ref<_1d1e5192e_IdentExpr> self{};

	_1d1da4277_Token _field_token{_1d1da4277_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_cpp_linked{jule::Bool()};


	_1d1e5192e_IdentExpr(_1d1da4277_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked) {
		this->self = jule::Ref<_1d1e5192e_IdentExpr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_cpp_linked = __param_cpp_linked;
	}

	~_1d1e5192e_IdentExpr(void) { this->self.ref = nullptr; }

	_1d1e5192e_IdentExpr(void) { this->self = jule::Ref<_1d1e5192e_IdentExpr>::make(this, nullptr); }

	inline jule::Bool _method_is_self(void);


	inline bool operator==(const _1d1e5192e_IdentExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_cpp_linked == _Src._field_cpp_linked;
	}

	inline bool operator!=(const _1d1e5192e_IdentExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1d1e5192e_UnaryExpr {
	jule::Ref<_1d1e5192e_UnaryExpr> self{};

	_1d1da4277_Token _field_op{_1d1da4277_Token()};
	jule::Any _field_expr{jule::Any()};


	_1d1e5192e_UnaryExpr(_1d1da4277_Token __param_op, jule::Any __param_expr) {
		this->self = jule::Ref<_1d1e5192e_UnaryExpr>::make(this, nullptr);

		this->_field_op = __param_op;
		this->_field_expr = __param_expr;
	}

	~_1d1e5192e_UnaryExpr(void) { this->self.ref = nullptr; }

	_1d1e5192e_UnaryExpr(void) { this->self = jule::Ref<_1d1e5192e_UnaryExpr>::make(this, nullptr); }

	inline bool operator==(const _1d1e5192e_UnaryExpr &_Src) const {
		return 
			this->_field_op == _Src._field_op &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1d1e5192e_UnaryExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1d1e5192e_VariadicExpr {
	jule::Ref<_1d1e5192e_VariadicExpr> self{};

	_1d1da4277_Token _field_token{_1d1da4277_Token()};
	jule::Any _field_expr{jule::Any()};


	_1d1e5192e_VariadicExpr(_1d1da4277_Token __param_token, jule::Any __param_expr) {
		this->self = jule::Ref<_1d1e5192e_VariadicExpr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_expr = __param_expr;
	}

	~_1d1e5192e_VariadicExpr(void) { this->self.ref = nullptr; }

	_1d1e5192e_VariadicExpr(void) { this->self = jule::Ref<_1d1e5192e_VariadicExpr>::make(this, nullptr); }

	inline bool operator==(const _1d1e5192e_VariadicExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1d1e5192e_VariadicExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1d1e5192e_NsSelectionExpr {
	jule::Ref<_1d1e5192e_NsSelectionExpr> self{};

	jule::Slice<_1d1da4277_Token> _field_ns{jule::Slice<_1d1da4277_Token>()};
	_1d1da4277_Token _field_ident{_1d1da4277_Token()};


	_1d1e5192e_NsSelectionExpr(jule::Slice<_1d1da4277_Token> __param_ns, _1d1da4277_Token __param_ident) {
		this->self = jule::Ref<_1d1e5192e_NsSelectionExpr>::make(this, nullptr);

		this->_field_ns = __param_ns;
		this->_field_ident = __param_ident;
	}

	~_1d1e5192e_NsSelectionExpr(void) { this->self.ref = nullptr; }

	_1d1e5192e_NsSelectionExpr(void) { this->self = jule::Ref<_1d1e5192e_NsSelectionExpr>::make(this, nullptr); }

	inline bool operator==(const _1d1e5192e_NsSelectionExpr &_Src) const {
		return 
			this->_field_ns == _Src._field_ns &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1d1e5192e_NsSelectionExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1d1e5192e_SubIdentExpr {
	jule::Ref<_1d1e5192e_SubIdentExpr> self{};

	jule::Bool _field_is_self{jule::Bool()};
	jule::Any _field_expr{jule::Any()};
	_1d1da4277_Token _field_ident{_1d1da4277_Token()};


	_1d1e5192e_SubIdentExpr(jule::Bool __param_is_self, jule::Any __param_expr, _1d1da4277_Token __param_ident) {
		this->self = jule::Ref<_1d1e5192e_SubIdentExpr>::make(this, nullptr);

		this->_field_is_self = __param_is_self;
		this->_field_expr = __param_expr;
		this->_field_ident = __param_ident;
	}

	~_1d1e5192e_SubIdentExpr(void) { this->self.ref = nullptr; }

	_1d1e5192e_SubIdentExpr(void) { this->self = jule::Ref<_1d1e5192e_SubIdentExpr>::make(this, nullptr); }

	inline bool operator==(const _1d1e5192e_SubIdentExpr &_Src) const {
		return 
			this->_field_is_self == _Src._field_is_self &&
			this->_field_expr == _Src._field_expr &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1d1e5192e_SubIdentExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1d1e5192e_BinopExpr {
	jule::Ref<_1d1e5192e_BinopExpr> self{};

	jule::Any _field_left{jule::Any()};
	jule::Any _field_right{jule::Any()};
	_1d1da4277_Token _field_op{_1d1da4277_Token()};


	_1d1e5192e_BinopExpr(jule::Any __param_left, jule::Any __param_right, _1d1da4277_Token __param_op) {
		this->self = jule::Ref<_1d1e5192e_BinopExpr>::make(this, nullptr);

		this->_field_left = __param_left;
		this->_field_right = __param_right;
		this->_field_op = __param_op;
	}

	~_1d1e5192e_BinopExpr(void) { this->self.ref = nullptr; }

	_1d1e5192e_BinopExpr(void) { this->self = jule::Ref<_1d1e5192e_BinopExpr>::make(this, nullptr); }

	inline bool operator==(const _1d1e5192e_BinopExpr &_Src) const {
		return 
			this->_field_left == _Src._field_left &&
			this->_field_right == _Src._field_right &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _1d1e5192e_BinopExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1d1e5192e_FieldExprPair {
	jule::Ref<_1d1e5192e_FieldExprPair> self{};

	_1d1da4277_Token _field_field{_1d1da4277_Token()};
	jule::Any _field_expr{jule::Any()};


	_1d1e5192e_FieldExprPair(_1d1da4277_Token __param_field, jule::Any __param_expr) {
		this->self = jule::Ref<_1d1e5192e_FieldExprPair>::make(this, nullptr);

		this->_field_field = __param_field;
		this->_field_expr = __param_expr;
	}

	~_1d1e5192e_FieldExprPair(void) { this->self.ref = nullptr; }

	_1d1e5192e_FieldExprPair(void) { this->self = jule::Ref<_1d1e5192e_FieldExprPair>::make(this, nullptr); }

	inline jule::Bool _method_is_targeted(void);


	inline bool operator==(const _1d1e5192e_FieldExprPair &_Src) const {
		return 
			this->_field_field == _Src._field_field &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1d1e5192e_FieldExprPair &_Src) const { return !this->operator==(_Src); }
};


struct _1d1e5192e_BraceLit {
	jule::Ref<_1d1e5192e_BraceLit> self{};

	_1d1da4277_Token _field_token{_1d1da4277_Token()};
	jule::Slice<jule::Any> _field_exprs{jule::Slice<jule::Any>()};


	_1d1e5192e_BraceLit(_1d1da4277_Token __param_token, jule::Slice<jule::Any> __param_exprs) {
		this->self = jule::Ref<_1d1e5192e_BraceLit>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_exprs = __param_exprs;
	}

	~_1d1e5192e_BraceLit(void) { this->self.ref = nullptr; }

	_1d1e5192e_BraceLit(void) { this->self = jule::Ref<_1d1e5192e_BraceLit>::make(this, nullptr); }

	inline jule::Bool _method_is_empty(void);


	inline bool operator==(const _1d1e5192e_BraceLit &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_exprs == _Src._field_exprs;
	}

	inline bool operator!=(const _1d1e5192e_BraceLit &_Src) const { return !this->operator==(_Src); }
};


struct _1d1e5192e_KeyValPair {
	jule::Ref<_1d1e5192e_KeyValPair> self{};

	jule::Any _field_key{jule::Any()};
	jule::Any _field_val{jule::Any()};
	_1d1da4277_Token _field_colon{_1d1da4277_Token()};


	_1d1e5192e_KeyValPair(jule::Any __param_key, jule::Any __param_val, _1d1da4277_Token __param_colon) {
		this->self = jule::Ref<_1d1e5192e_KeyValPair>::make(this, nullptr);

		this->_field_key = __param_key;
		this->_field_val = __param_val;
		this->_field_colon = __param_colon;
	}

	~_1d1e5192e_KeyValPair(void) { this->self.ref = nullptr; }

	_1d1e5192e_KeyValPair(void) { this->self = jule::Ref<_1d1e5192e_KeyValPair>::make(this, nullptr); }

	inline bool operator==(const _1d1e5192e_KeyValPair &_Src) const {
		return 
			this->_field_key == _Src._field_key &&
			this->_field_val == _Src._field_val &&
			this->_field_colon == _Src._field_colon;
	}

	inline bool operator!=(const _1d1e5192e_KeyValPair &_Src) const { return !this->operator==(_Src); }
};


struct _1d1e5192e_SliceExpr {
	jule::Ref<_1d1e5192e_SliceExpr> self{};

	_1d1da4277_Token _field_token{_1d1da4277_Token()};
	jule::Slice<jule::Any> _field_elems{jule::Slice<jule::Any>()};


	_1d1e5192e_SliceExpr(_1d1da4277_Token __param_token, jule::Slice<jule::Any> __param_elems) {
		this->self = jule::Ref<_1d1e5192e_SliceExpr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_elems = __param_elems;
	}

	~_1d1e5192e_SliceExpr(void) { this->self.ref = nullptr; }

	_1d1e5192e_SliceExpr(void) { this->self = jule::Ref<_1d1e5192e_SliceExpr>::make(this, nullptr); }

	inline jule::Bool _method_is_empty(void);


	inline bool operator==(const _1d1e5192e_SliceExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_elems == _Src._field_elems;
	}

	inline bool operator!=(const _1d1e5192e_SliceExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1d1e5192e_IndexingExpr {
	jule::Ref<_1d1e5192e_IndexingExpr> self{};

	_1d1da4277_Token _field_token{_1d1da4277_Token()};
	jule::Any _field_expr{jule::Any()};
	jule::Any _field_index{jule::Any()};


	_1d1e5192e_IndexingExpr(_1d1da4277_Token __param_token, jule::Any __param_expr, jule::Any __param_index) {
		this->self = jule::Ref<_1d1e5192e_IndexingExpr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_expr = __param_expr;
		this->_field_index = __param_index;
	}

	~_1d1e5192e_IndexingExpr(void) { this->self.ref = nullptr; }

	_1d1e5192e_IndexingExpr(void) { this->self = jule::Ref<_1d1e5192e_IndexingExpr>::make(this, nullptr); }

	inline bool operator==(const _1d1e5192e_IndexingExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_index == _Src._field_index;
	}

	inline bool operator!=(const _1d1e5192e_IndexingExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1b9176ba0_DynamicTypeAnnotation {
	jule::Ref<_1b9176ba0_DynamicTypeAnnotation> self{};

	jule::Ref<_1b9523799_Eval> _field_e{jule::Ref<_1b9523799_Eval>()};
	jule::Ref<_1d21d97ee_FnIns> _field_f{jule::Ref<_1d21d97ee_FnIns>()};
	jule::Ref<_1d21d97ee_ParamIns> _field_p{jule::Ref<_1d21d97ee_ParamIns>()};
	jule::Ref<_1b9523799_Data> _field_a{jule::Ref<_1b9523799_Data>()};
	_1d1da4277_Token _field_error_token{_1d1da4277_Token()};
	_1b951b088_TypeKind** _field_k{nullptr};


	_1b9176ba0_DynamicTypeAnnotation(jule::Ref<_1b9523799_Eval> __param_e, jule::Ref<_1d21d97ee_FnIns> __param_f, jule::Ref<_1d21d97ee_ParamIns> __param_p, jule::Ref<_1b9523799_Data> __param_a, _1d1da4277_Token __param_error_token, _1b951b088_TypeKind** __param_k) {
		this->self = jule::Ref<_1b9176ba0_DynamicTypeAnnotation>::make(this, nullptr);

		this->_field_e = __param_e;
		this->_field_f = __param_f;
		this->_field_p = __param_p;
		this->_field_a = __param_a;
		this->_field_error_token = __param_error_token;
		this->_field_k = __param_k;
	}

	~_1b9176ba0_DynamicTypeAnnotation(void) { this->self.ref = nullptr; }

	_1b9176ba0_DynamicTypeAnnotation(void) { this->self = jule::Ref<_1b9176ba0_DynamicTypeAnnotation>::make(this, nullptr); }

	inline void _method_push_generic(jule::Ref<_1b951b088_TypeKind>&,jule::Int);


	inline jule::Bool _method_annotate_prim(jule::Ref<_1b951b088_TypeKind>&);


	inline jule::Bool _method_annotate_slc(jule::Ref<_1b951b088_TypeKind>&);


	inline jule::Bool _method_check_map_key(_1b951b088_TypeKind**,jule::Ref<_1b951b088_TypeKind>&);


	inline jule::Bool _method_annotate_map(jule::Ref<_1b951b088_TypeKind>&);


	inline jule::Bool _method_annotate_fn(jule::Ref<_1b951b088_TypeKind>&);


	inline jule::Bool _method_annotate_ptr(jule::Ref<_1b951b088_TypeKind>&);


	inline jule::Bool _method_annotate_ref(jule::Ref<_1b951b088_TypeKind>&);


	inline jule::Bool _method_annotate_any(jule::Ref<_1b951b088_TypeKind>&);


	inline jule::Bool _method_annotate_kind(jule::Ref<_1b951b088_TypeKind>&);


	inline jule::Bool _method_annotate(void);


	inline bool operator==(const _1b9176ba0_DynamicTypeAnnotation &_Src) const {
		return 
			this->_field_e == _Src._field_e &&
			this->_field_f == _Src._field_f &&
			this->_field_p == _Src._field_p &&
			this->_field_a == _Src._field_a &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_k == _Src._field_k;
	}

	inline bool operator!=(const _1b9176ba0_DynamicTypeAnnotation &_Src) const { return !this->operator==(_Src); }
};


struct _1b9176ba0_StructLitChecker {
	jule::Ref<_1b9176ba0_StructLitChecker> self{};

	jule::Ref<_1b9523799_Eval> _field_e{jule::Ref<_1b9523799_Eval>()};
	_1d1da4277_Token _field_error_token{_1d1da4277_Token()};
	jule::Ref<_1d21c0b59_StructIns> _field_s{jule::Ref<_1d21c0b59_StructIns>()};
	jule::Slice<jule::Ref<_1b8dbae99_StructArgExprModel>> _field_args{jule::Slice<jule::Ref<_1b8dbae99_StructArgExprModel>>()};


	_1b9176ba0_StructLitChecker(jule::Ref<_1b9523799_Eval> __param_e, _1d1da4277_Token __param_error_token, jule::Ref<_1d21c0b59_StructIns> __param_s, jule::Slice<jule::Ref<_1b8dbae99_StructArgExprModel>> __param_args) {
		this->self = jule::Ref<_1b9176ba0_StructLitChecker>::make(this, nullptr);

		this->_field_e = __param_e;
		this->_field_error_token = __param_error_token;
		this->_field_s = __param_s;
		this->_field_args = __param_args;
	}

	~_1b9176ba0_StructLitChecker(void) { this->self.ref = nullptr; }

	_1b9176ba0_StructLitChecker(void) { this->self = jule::Ref<_1b9176ba0_StructLitChecker>::make(this, nullptr); }

	inline void _method_push_err(_1d1da4277_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_match(jule::Ref<_1d21c0b59_FieldIns>&,jule::Ref<_1b9523799_Data>&,_1d1da4277_Token&);


	inline void _method_check_pair(jule::Ref<_1d1e5192e_FieldExprPair>&,jule::Slice<jule::Any>&);


	inline jule::Bool _method_ready_exprs(jule::Slice<jule::Any>&);


	inline void _method_check(jule::Slice<jule::Any>&);


	inline bool operator==(const _1b9176ba0_StructLitChecker &_Src) const {
		return 
			this->_field_e == _Src._field_e &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_s == _Src._field_s &&
			this->_field_args == _Src._field_args;
	}

	inline bool operator!=(const _1b9176ba0_StructLitChecker &_Src) const { return !this->operator==(_Src); }
};


struct _1d1e5192e_SlicingExpr {
	jule::Ref<_1d1e5192e_SlicingExpr> self{};

	_1d1da4277_Token _field_token{_1d1da4277_Token()};
	jule::Any _field_expr{jule::Any()};
	jule::Any _field_start{jule::Any()};
	jule::Any _field_to{jule::Any()};


	_1d1e5192e_SlicingExpr(_1d1da4277_Token __param_token, jule::Any __param_expr, jule::Any __param_start, jule::Any __param_to) {
		this->self = jule::Ref<_1d1e5192e_SlicingExpr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_expr = __param_expr;
		this->_field_start = __param_start;
		this->_field_to = __param_to;
	}

	~_1d1e5192e_SlicingExpr(void) { this->self.ref = nullptr; }

	_1d1e5192e_SlicingExpr(void) { this->self = jule::Ref<_1d1e5192e_SlicingExpr>::make(this, nullptr); }

	inline bool operator==(const _1d1e5192e_SlicingExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_start == _Src._field_start &&
			this->_field_to == _Src._field_to;
	}

	inline bool operator!=(const _1d1e5192e_SlicingExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1d1e5192e_TernaryExpr {
	jule::Ref<_1d1e5192e_TernaryExpr> self{};

	_1d1da4277_Token _field_token{_1d1da4277_Token()};
	jule::Any _field_condition{jule::Any()};
	jule::Any _field_true_expr{jule::Any()};
	jule::Any _field_false_expr{jule::Any()};


	_1d1e5192e_TernaryExpr(_1d1da4277_Token __param_token, jule::Any __param_condition, jule::Any __param_true_expr, jule::Any __param_false_expr) {
		this->self = jule::Ref<_1d1e5192e_TernaryExpr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_condition = __param_condition;
		this->_field_true_expr = __param_true_expr;
		this->_field_false_expr = __param_false_expr;
	}

	~_1d1e5192e_TernaryExpr(void) { this->self.ref = nullptr; }

	_1d1e5192e_TernaryExpr(void) { this->self = jule::Ref<_1d1e5192e_TernaryExpr>::make(this, nullptr); }

	inline bool operator==(const _1d1e5192e_TernaryExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_condition == _Src._field_condition &&
			this->_field_true_expr == _Src._field_true_expr &&
			this->_field_false_expr == _Src._field_false_expr;
	}

	inline bool operator!=(const _1d1e5192e_TernaryExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1d1e5192e_LabelSt {
	jule::Ref<_1d1e5192e_LabelSt> self{};

	_1d1da4277_Token _field_token{_1d1da4277_Token()};
	jule::Str _field_ident{jule::Str()};


	_1d1e5192e_LabelSt(_1d1da4277_Token __param_token, jule::Str __param_ident) {
		this->self = jule::Ref<_1d1e5192e_LabelSt>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
	}

	~_1d1e5192e_LabelSt(void) { this->self.ref = nullptr; }

	_1d1e5192e_LabelSt(void) { this->self = jule::Ref<_1d1e5192e_LabelSt>::make(this, nullptr); }

	inline bool operator==(const _1d1e5192e_LabelSt &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1d1e5192e_LabelSt &_Src) const { return !this->operator==(_Src); }
};


struct _1d1e5192e_FallSt {
	jule::Ref<_1d1e5192e_FallSt> self{};

	_1d1da4277_Token _field_token{_1d1da4277_Token()};


	_1d1e5192e_FallSt(_1d1da4277_Token __param_token) {
		this->self = jule::Ref<_1d1e5192e_FallSt>::make(this, nullptr);

		this->_field_token = __param_token;
	}

	~_1d1e5192e_FallSt(void) { this->self.ref = nullptr; }

	_1d1e5192e_FallSt(void) { this->self = jule::Ref<_1d1e5192e_FallSt>::make(this, nullptr); }

	inline bool operator==(const _1d1e5192e_FallSt &_Src) const {
		return 
			this->_field_token == _Src._field_token;
	}

	inline bool operator!=(const _1d1e5192e_FallSt &_Src) const { return !this->operator==(_Src); }
};


struct _1d1e5192e_AssignSt {
	jule::Ref<_1d1e5192e_AssignSt> self{};

	jule::Bool _field_declarative{jule::Bool()};
	_1d1da4277_Token _field_setter{_1d1da4277_Token()};
	jule::Slice<jule::Ref<_1d1e5192e_AssignLeft>> _field_left{jule::Slice<jule::Ref<_1d1e5192e_AssignLeft>>()};
	jule::Ref<_1d1e5192e_Expr> _field_right{jule::Ref<_1d1e5192e_Expr>()};


	_1d1e5192e_AssignSt(jule::Bool __param_declarative, _1d1da4277_Token __param_setter, jule::Slice<jule::Ref<_1d1e5192e_AssignLeft>> __param_left, jule::Ref<_1d1e5192e_Expr> __param_right) {
		this->self = jule::Ref<_1d1e5192e_AssignSt>::make(this, nullptr);

		this->_field_declarative = __param_declarative;
		this->_field_setter = __param_setter;
		this->_field_left = __param_left;
		this->_field_right = __param_right;
	}

	~_1d1e5192e_AssignSt(void) { this->self.ref = nullptr; }

	_1d1e5192e_AssignSt(void) { this->self = jule::Ref<_1d1e5192e_AssignSt>::make(this, nullptr); }

	inline bool operator==(const _1d1e5192e_AssignSt &_Src) const {
		return 
			this->_field_declarative == _Src._field_declarative &&
			this->_field_setter == _Src._field_setter &&
			this->_field_left == _Src._field_left &&
			this->_field_right == _Src._field_right;
	}

	inline bool operator!=(const _1d1e5192e_AssignSt &_Src) const { return !this->operator==(_Src); }
};


struct _1d1e5192e_RetSt {
	jule::Ref<_1d1e5192e_RetSt> self{};

	_1d1da4277_Token _field_token{_1d1da4277_Token()};
	jule::Ref<_1d1e5192e_Expr> _field_expr{jule::Ref<_1d1e5192e_Expr>()};


	_1d1e5192e_RetSt(_1d1da4277_Token __param_token, jule::Ref<_1d1e5192e_Expr> __param_expr) {
		this->self = jule::Ref<_1d1e5192e_RetSt>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_expr = __param_expr;
	}

	~_1d1e5192e_RetSt(void) { this->self.ref = nullptr; }

	_1d1e5192e_RetSt(void) { this->self = jule::Ref<_1d1e5192e_RetSt>::make(this, nullptr); }

	inline bool operator==(const _1d1e5192e_RetSt &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1d1e5192e_RetSt &_Src) const { return !this->operator==(_Src); }
};


struct _1d1e5192e_Iter {
	jule::Ref<_1d1e5192e_Iter> self{};

	_1d1da4277_Token _field_token{_1d1da4277_Token()};
	jule::Any _field_kind{jule::Any()};
	jule::Ref<_1d1e5192e_ScopeTree> _field_scope{jule::Ref<_1d1e5192e_ScopeTree>()};


	_1d1e5192e_Iter(_1d1da4277_Token __param_token, jule::Any __param_kind, jule::Ref<_1d1e5192e_ScopeTree> __param_scope) {
		this->self = jule::Ref<_1d1e5192e_Iter>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_kind = __param_kind;
		this->_field_scope = __param_scope;
	}

	~_1d1e5192e_Iter(void) { this->self.ref = nullptr; }

	_1d1e5192e_Iter(void) { this->self = jule::Ref<_1d1e5192e_Iter>::make(this, nullptr); }

	inline jule::Bool _method_is_inf(void);


	inline bool operator==(const _1d1e5192e_Iter &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_kind == _Src._field_kind &&
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _1d1e5192e_Iter &_Src) const { return !this->operator==(_Src); }
};


struct _1d1e5192e_WhileKind {
	jule::Ref<_1d1e5192e_WhileKind> self{};

	jule::Ref<_1d1e5192e_Expr> _field_expr{jule::Ref<_1d1e5192e_Expr>()};
	jule::Any _field_next{jule::Any()};
	_1d1da4277_Token _field_next_token{_1d1da4277_Token()};


	_1d1e5192e_WhileKind(jule::Ref<_1d1e5192e_Expr> __param_expr, jule::Any __param_next, _1d1da4277_Token __param_next_token) {
		this->self = jule::Ref<_1d1e5192e_WhileKind>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_next = __param_next;
		this->_field_next_token = __param_next_token;
	}

	~_1d1e5192e_WhileKind(void) { this->self.ref = nullptr; }

	_1d1e5192e_WhileKind(void) { this->self = jule::Ref<_1d1e5192e_WhileKind>::make(this, nullptr); }

	inline jule::Bool _method_is_while_next(void);


	inline bool operator==(const _1d1e5192e_WhileKind &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_next == _Src._field_next &&
			this->_field_next_token == _Src._field_next_token;
	}

	inline bool operator!=(const _1d1e5192e_WhileKind &_Src) const { return !this->operator==(_Src); }
};


struct _1d1e5192e_RangeKind {
	jule::Ref<_1d1e5192e_RangeKind> self{};

	_1d1da4277_Token _field_in_token{_1d1da4277_Token()};
	jule::Ref<_1d1e5192e_Expr> _field_expr{jule::Ref<_1d1e5192e_Expr>()};
	jule::Ref<_1d1e5192e_VarDecl> _field_key_a{jule::Ref<_1d1e5192e_VarDecl>()};
	jule::Ref<_1d1e5192e_VarDecl> _field_key_b{jule::Ref<_1d1e5192e_VarDecl>()};


	_1d1e5192e_RangeKind(_1d1da4277_Token __param_in_token, jule::Ref<_1d1e5192e_Expr> __param_expr, jule::Ref<_1d1e5192e_VarDecl> __param_key_a, jule::Ref<_1d1e5192e_VarDecl> __param_key_b) {
		this->self = jule::Ref<_1d1e5192e_RangeKind>::make(this, nullptr);

		this->_field_in_token = __param_in_token;
		this->_field_expr = __param_expr;
		this->_field_key_a = __param_key_a;
		this->_field_key_b = __param_key_b;
	}

	~_1d1e5192e_RangeKind(void) { this->self.ref = nullptr; }

	_1d1e5192e_RangeKind(void) { this->self = jule::Ref<_1d1e5192e_RangeKind>::make(this, nullptr); }

	inline bool operator==(const _1d1e5192e_RangeKind &_Src) const {
		return 
			this->_field_in_token == _Src._field_in_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_key_a == _Src._field_key_a &&
			this->_field_key_b == _Src._field_key_b;
	}

	inline bool operator!=(const _1d1e5192e_RangeKind &_Src) const { return !this->operator==(_Src); }
};


struct _1b9176ba0_AssignTypeChecker {
	jule::Ref<_1b9176ba0_AssignTypeChecker> self{};

	jule::Ref<_1b912748b_Sema> _field_s{jule::Ref<_1b912748b_Sema>()};
	jule::Ref<_1b951b088_TypeKind> _field_dest{jule::Ref<_1b951b088_TypeKind>()};
	jule::Ref<_1b9523799_Data> _field_d{jule::Ref<_1b9523799_Data>()};
	_1d1da4277_Token _field_error_token{_1d1da4277_Token()};
	jule::Bool _field_deref{jule::Bool()};


	_1b9176ba0_AssignTypeChecker(jule::Ref<_1b912748b_Sema> __param_s, jule::Ref<_1b951b088_TypeKind> __param_dest, jule::Ref<_1b9523799_Data> __param_d, _1d1da4277_Token __param_error_token, jule::Bool __param_deref) {
		this->self = jule::Ref<_1b9176ba0_AssignTypeChecker>::make(this, nullptr);

		this->_field_s = __param_s;
		this->_field_dest = __param_dest;
		this->_field_d = __param_d;
		this->_field_error_token = __param_error_token;
		this->_field_deref = __param_deref;
	}

	~_1b9176ba0_AssignTypeChecker(void) { this->self.ref = nullptr; }

	_1b9176ba0_AssignTypeChecker(void) { this->self = jule::Ref<_1b9176ba0_AssignTypeChecker>::make(this, nullptr); }

	inline void _method_push_err(jule::Str,jule::Slice<jule::Any>);


	inline jule::Bool _method_check_validity(void);


	inline jule::Bool _method_check_const(void);


	inline jule::Bool _method_check(void);


	inline bool operator==(const _1b9176ba0_AssignTypeChecker &_Src) const {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_dest == _Src._field_dest &&
			this->_field_d == _Src._field_d &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_deref == _Src._field_deref;
	}

	inline bool operator!=(const _1b9176ba0_AssignTypeChecker &_Src) const { return !this->operator==(_Src); }
};


struct _1b9176ba0_FnCallArgChecker {
	jule::Ref<_1b9176ba0_FnCallArgChecker> self{};

	jule::Ref<_1b9523799_Eval> _field_e{jule::Ref<_1b9523799_Eval>()};
	jule::Slice<jule::Ref<_1d1e5192e_Expr>> _field_args{jule::Slice<jule::Ref<_1d1e5192e_Expr>>()};
	_1d1da4277_Token _field_error_token{_1d1da4277_Token()};
	jule::Ref<_1d21d97ee_FnIns> _field_f{jule::Ref<_1d21d97ee_FnIns>()};
	jule::Bool _field_dynamic_annotation{jule::Bool()};
	jule::Slice<jule::Any> _field_arg_models{jule::Slice<jule::Any>()};


	_1b9176ba0_FnCallArgChecker(jule::Ref<_1b9523799_Eval> __param_e, jule::Slice<jule::Ref<_1d1e5192e_Expr>> __param_args, _1d1da4277_Token __param_error_token, jule::Ref<_1d21d97ee_FnIns> __param_f, jule::Bool __param_dynamic_annotation, jule::Slice<jule::Any> __param_arg_models) {
		this->self = jule::Ref<_1b9176ba0_FnCallArgChecker>::make(this, nullptr);

		this->_field_e = __param_e;
		this->_field_args = __param_args;
		this->_field_error_token = __param_error_token;
		this->_field_f = __param_f;
		this->_field_dynamic_annotation = __param_dynamic_annotation;
		this->_field_arg_models = __param_arg_models;
	}

	~_1b9176ba0_FnCallArgChecker(void) { this->self.ref = nullptr; }

	_1b9176ba0_FnCallArgChecker(void) { this->self = jule::Ref<_1b9176ba0_FnCallArgChecker>::make(this, nullptr); }

	inline void _method_push_err_token(_1d1da4277_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_err(jule::Str,jule::Slice<jule::Any>);


	inline jule::Slice<jule::Ref<_1d21d97ee_ParamIns>> _method_get_params(void);


	inline jule::Bool _method_check_counts(jule::Slice<jule::Ref<_1d21d97ee_ParamIns>>&);


	inline jule::Bool _method_check_arg(jule::Ref<_1d21d97ee_ParamIns>&,jule::Ref<_1b9523799_Data>&,_1d1da4277_Token&);


	inline jule::Bool _method_push(jule::Ref<_1d21d97ee_ParamIns>&,jule::Ref<_1d1e5192e_Expr>);


	inline jule::Bool _method_push_variadic(jule::Ref<_1d21d97ee_ParamIns>&,jule::Int);


	inline jule::Bool _method_check_args(jule::Slice<jule::Ref<_1d21d97ee_ParamIns>>&);


	inline jule::Bool _method_check_dynamic_type_annotation(void);


	inline jule::Bool _method_check(void);


	inline bool operator==(const _1b9176ba0_FnCallArgChecker &_Src) const {
		return 
			this->_field_e == _Src._field_e &&
			this->_field_args == _Src._field_args &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_f == _Src._field_f &&
			this->_field_dynamic_annotation == _Src._field_dynamic_annotation &&
			this->_field_arg_models == _Src._field_arg_models;
	}

	inline bool operator!=(const _1b9176ba0_FnCallArgChecker &_Src) const { return !this->operator==(_Src); }
};


struct _1b9176ba0_RetTypeChecker {
	jule::Ref<_1b9176ba0_RetTypeChecker> self{};

	jule::Ref<_1b8cd2c4b_ScopeChecker> _field_sc{jule::Ref<_1b8cd2c4b_ScopeChecker>()};
	jule::Ref<_1d21d97ee_FnIns> _field_f{jule::Ref<_1d21d97ee_FnIns>()};
	jule::Slice<jule::Ref<_1b951b088_TypeKind>> _field_types{jule::Slice<jule::Ref<_1b951b088_TypeKind>>()};
	jule::Slice<jule::Ref<_1d1e5192e_Expr>> _field_exprs{jule::Slice<jule::Ref<_1d1e5192e_Expr>>()};
	jule::Slice<jule::Ref<_1b919cb2c_Var>> _field_vars{jule::Slice<jule::Ref<_1b919cb2c_Var>>()};
	_1d1da4277_Token _field_error_token{_1d1da4277_Token()};
	jule::Any _field_model{jule::Any()};


	_1b9176ba0_RetTypeChecker(jule::Ref<_1b8cd2c4b_ScopeChecker> __param_sc, jule::Ref<_1d21d97ee_FnIns> __param_f, jule::Slice<jule::Ref<_1b951b088_TypeKind>> __param_types, jule::Slice<jule::Ref<_1d1e5192e_Expr>> __param_exprs, jule::Slice<jule::Ref<_1b919cb2c_Var>> __param_vars, _1d1da4277_Token __param_error_token, jule::Any __param_model) {
		this->self = jule::Ref<_1b9176ba0_RetTypeChecker>::make(this, nullptr);

		this->_field_sc = __param_sc;
		this->_field_f = __param_f;
		this->_field_types = __param_types;
		this->_field_exprs = __param_exprs;
		this->_field_vars = __param_vars;
		this->_field_error_token = __param_error_token;
		this->_field_model = __param_model;
	}

	~_1b9176ba0_RetTypeChecker(void) { this->self.ref = nullptr; }

	_1b9176ba0_RetTypeChecker(void) { this->self = jule::Ref<_1b9176ba0_RetTypeChecker>::make(this, nullptr); }

	inline void _method_prepare_types(void);


	inline void _method_prepare_exprs(jule::Ref<_1d1e5192e_Expr>&);


	inline void _method_ret_vars(void);


	inline void _method_check_exprs(void);


	inline jule::Bool _method_check(jule::Ref<_1d1e5192e_Expr>&);


	inline bool operator==(const _1b9176ba0_RetTypeChecker &_Src) const {
		return 
			this->_field_sc == _Src._field_sc &&
			this->_field_f == _Src._field_f &&
			this->_field_types == _Src._field_types &&
			this->_field_exprs == _Src._field_exprs &&
			this->_field_vars == _Src._field_vars &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_model == _Src._field_model;
	}

	inline bool operator!=(const _1b9176ba0_RetTypeChecker &_Src) const { return !this->operator==(_Src); }
};


struct _1d1e5192e_GenericDecl {
	jule::Ref<_1d1e5192e_GenericDecl> self{};

	_1d1da4277_Token _field_token{_1d1da4277_Token()};
	jule::Str _field_ident{jule::Str()};


	_1d1e5192e_GenericDecl(_1d1da4277_Token __param_token, jule::Str __param_ident) {
		this->self = jule::Ref<_1d1e5192e_GenericDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
	}

	~_1d1e5192e_GenericDecl(void) { this->self.ref = nullptr; }

	_1d1e5192e_GenericDecl(void) { this->self = jule::Ref<_1d1e5192e_GenericDecl>::make(this, nullptr); }

	inline bool operator==(const _1d1e5192e_GenericDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1d1e5192e_GenericDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1d1e5192e_GotoSt {
	jule::Ref<_1d1e5192e_GotoSt> self{};

	_1d1da4277_Token _field_token{_1d1da4277_Token()};
	_1d1da4277_Token _field_label{_1d1da4277_Token()};


	_1d1e5192e_GotoSt(_1d1da4277_Token __param_token, _1d1da4277_Token __param_label) {
		this->self = jule::Ref<_1d1e5192e_GotoSt>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_label = __param_label;
	}

	~_1d1e5192e_GotoSt(void) { this->self.ref = nullptr; }

	_1d1e5192e_GotoSt(void) { this->self = jule::Ref<_1d1e5192e_GotoSt>::make(this, nullptr); }

	inline bool operator==(const _1d1e5192e_GotoSt &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_label == _Src._field_label;
	}

	inline bool operator!=(const _1d1e5192e_GotoSt &_Src) const { return !this->operator==(_Src); }
};


struct _1b9523799_BinopSolver {
	jule::Ref<_1b9523799_BinopSolver> self{};

	jule::Ref<_1b9523799_Eval> _field_e{jule::Ref<_1b9523799_Eval>()};
	jule::Ref<_1b9523799_Data> _field_l{jule::Ref<_1b9523799_Data>()};
	jule::Ref<_1b9523799_Data> _field_r{jule::Ref<_1b9523799_Data>()};
	_1d1da4277_Token _field_op{_1d1da4277_Token()};


	_1b9523799_BinopSolver(jule::Ref<_1b9523799_Eval> __param_e, jule::Ref<_1b9523799_Data> __param_l, jule::Ref<_1b9523799_Data> __param_r, _1d1da4277_Token __param_op) {
		this->self = jule::Ref<_1b9523799_BinopSolver>::make(this, nullptr);

		this->_field_e = __param_e;
		this->_field_l = __param_l;
		this->_field_r = __param_r;
		this->_field_op = __param_op;
	}

	~_1b9523799_BinopSolver(void) { this->self.ref = nullptr; }

	_1b9523799_BinopSolver(void) { this->self = jule::Ref<_1b9523799_BinopSolver>::make(this, nullptr); }

	inline jule::Bool _method_check_type_compatibility(void);


	inline jule::Ref<_1b9523799_Data> _method_eval_nil(void);


	inline jule::Ref<_1b9523799_Data> _method_eval_enum(void);


	inline jule::Ref<_1b9523799_Data> _method_eval_ptr(void);


	inline jule::Ref<_1b9523799_Data> _method_eval_arr(void);


	inline jule::Ref<_1b9523799_Data> _method_eval_slc(void);


	inline jule::Ref<_1b9523799_Data> _method_eval_fn(void);


	inline jule::Ref<_1b9523799_Data> _method_eval_struct(void);


	inline jule::Ref<_1b9523799_Data> _method_eval_trait(void);


	inline jule::Ref<_1b9523799_Data> _method_eval_any(void);


	inline jule::Ref<_1b9523799_Data> _method_eval_bool(void);


	inline jule::Ref<_1b9523799_Data> _method_eval_str(void);


	inline void _method_set_type_to_greater(void);


	inline void _method_check_mod_data(jule::Ref<_1b9523799_Data>);


	inline void _method_mod(void);


	inline jule::Bool _method_numbers_are_compatibile(jule::Str&,jule::Str&);


	inline jule::Ref<_1b9523799_Data> _method_eval_float(void);


	inline jule::Ref<_1b9523799_Data> _method_eval_unsig_int(void);


	inline jule::Ref<_1b9523799_Data> _method_eval_sig_int(void);


	inline jule::Ref<_1b9523799_Data> _method_eval_prim(void);


	inline jule::Ref<_1b9523799_Data> _method_eval(void);


	inline void _method_solve_const(jule::Ref<_1b9523799_Data>);


	inline void _method_post_const(jule::Ref<_1b9523799_Data>);


	inline void _method_prepare_data(jule::Ref<_1b9523799_Data>);


	inline void _method_prepare_eval(void);


	inline void _method_check_data(jule::Ref<_1b9523799_Data>);


	inline void _method_check_datas(void);


	inline jule::Ref<_1b9523799_Data> _method_solve_explicit(jule::Ref<_1b9523799_Data>,jule::Ref<_1b9523799_Data>);


	inline jule::Ref<_1b9523799_Data> _method_solve(jule::Ref<_1d1e5192e_BinopExpr>);


	inline bool operator==(const _1b9523799_BinopSolver &_Src) const {
		return 
			this->_field_e == _Src._field_e &&
			this->_field_l == _Src._field_l &&
			this->_field_r == _Src._field_r &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _1b9523799_BinopSolver &_Src) const { return !this->operator==(_Src); }
};


struct _1b951b088_TypeAlias {
	jule::Ref<_1b951b088_TypeAlias> self{};

	jule::Ref<_1d1e5192e_ScopeTree> _field_scope{jule::Ref<_1d1e5192e_ScopeTree>()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_used{jule::Bool()};
	_1d1da4277_Token _field_token{_1d1da4277_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_1b951b088_TypeSymbol> _field_kind{jule::Ref<_1b951b088_TypeSymbol>()};
	jule::Str _field_doc{jule::Str()};
	jule::Slice<jule::Any> _field_refers{jule::Slice<jule::Any>()};


	_1b951b088_TypeAlias(jule::Ref<_1d1e5192e_ScopeTree> __param_scope, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Bool __param_used, _1d1da4277_Token __param_token, jule::Str __param_ident, jule::Ref<_1b951b088_TypeSymbol> __param_kind, jule::Str __param_doc, jule::Slice<jule::Any> __param_refers) {
		this->self = jule::Ref<_1b951b088_TypeAlias>::make(this, nullptr);

		this->_field_scope = __param_scope;
		this->_field_public = __param_public;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_used = __param_used;
		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_kind = __param_kind;
		this->_field_doc = __param_doc;
		this->_field_refers = __param_refers;
	}

	~_1b951b088_TypeAlias(void) { this->self.ref = nullptr; }

	_1b951b088_TypeAlias(void) { this->self = jule::Ref<_1b951b088_TypeAlias>::make(this, nullptr); }

	inline bool operator==(const _1b951b088_TypeAlias &_Src) const {
		return 
			this->_field_scope == _Src._field_scope &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_used == _Src._field_used &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind &&
			this->_field_doc == _Src._field_doc &&
			this->_field_refers == _Src._field_refers;
	}

	inline bool operator!=(const _1b951b088_TypeAlias &_Src) const { return !this->operator==(_Src); }
};


struct _1d1e5192e_AssignLeft {
	jule::Ref<_1d1e5192e_AssignLeft> self{};

	_1d1da4277_Token _field_token{_1d1da4277_Token()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Bool _field_reference{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_1d1e5192e_Expr> _field_expr{jule::Ref<_1d1e5192e_Expr>()};


	_1d1e5192e_AssignLeft(_1d1da4277_Token __param_token, jule::Bool __param_mutable, jule::Bool __param_reference, jule::Str __param_ident, jule::Ref<_1d1e5192e_Expr> __param_expr) {
		this->self = jule::Ref<_1d1e5192e_AssignLeft>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_mutable = __param_mutable;
		this->_field_reference = __param_reference;
		this->_field_ident = __param_ident;
		this->_field_expr = __param_expr;
	}

	~_1d1e5192e_AssignLeft(void) { this->self.ref = nullptr; }

	_1d1e5192e_AssignLeft(void) { this->self = jule::Ref<_1d1e5192e_AssignLeft>::make(this, nullptr); }

	inline bool operator==(const _1d1e5192e_AssignLeft &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_reference == _Src._field_reference &&
			this->_field_ident == _Src._field_ident &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1d1e5192e_AssignLeft &_Src) const { return !this->operator==(_Src); }
};


struct _1d1e5192e_Comment {
	jule::Ref<_1d1e5192e_Comment> self{};

	_1d1da4277_Token _field_token{_1d1da4277_Token()};
	jule::Str _field_text{jule::Str()};


	_1d1e5192e_Comment(_1d1da4277_Token __param_token, jule::Str __param_text) {
		this->self = jule::Ref<_1d1e5192e_Comment>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_text = __param_text;
	}

	~_1d1e5192e_Comment(void) { this->self.ref = nullptr; }

	_1d1e5192e_Comment(void) { this->self = jule::Ref<_1d1e5192e_Comment>::make(this, nullptr); }

	inline jule::Bool _method_is_directive(void);


	inline bool operator==(const _1d1e5192e_Comment &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_text == _Src._field_text;
	}

	inline bool operator!=(const _1d1e5192e_Comment &_Src) const { return !this->operator==(_Src); }
};


struct _1d1e5192e_ParamDecl {
	jule::Ref<_1d1e5192e_ParamDecl> self{};

	_1d1da4277_Token _field_token{_1d1da4277_Token()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Bool _field_variadic{jule::Bool()};
	jule::Bool _field_reference{jule::Bool()};
	jule::Ref<_1d1e5192e_TypeDecl> _field_kind{jule::Ref<_1d1e5192e_TypeDecl>()};
	jule::Str _field_ident{jule::Str()};


	_1d1e5192e_ParamDecl(_1d1da4277_Token __param_token, jule::Bool __param_mutable, jule::Bool __param_variadic, jule::Bool __param_reference, jule::Ref<_1d1e5192e_TypeDecl> __param_kind, jule::Str __param_ident) {
		this->self = jule::Ref<_1d1e5192e_ParamDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_mutable = __param_mutable;
		this->_field_variadic = __param_variadic;
		this->_field_reference = __param_reference;
		this->_field_kind = __param_kind;
		this->_field_ident = __param_ident;
	}

	~_1d1e5192e_ParamDecl(void) { this->self.ref = nullptr; }

	_1d1e5192e_ParamDecl(void) { this->self = jule::Ref<_1d1e5192e_ParamDecl>::make(this, nullptr); }

	inline jule::Bool _method_is_self(void);


	inline jule::Bool _method_is_ref(void);


	inline bool operator==(const _1d1e5192e_ParamDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_variadic == _Src._field_variadic &&
			this->_field_reference == _Src._field_reference &&
			this->_field_kind == _Src._field_kind &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1d1e5192e_ParamDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1d1e5192e_FnDecl {
	jule::Ref<_1d1e5192e_FnDecl> self{};

	_1d1da4277_Token _field_token{_1d1da4277_Token()};
	jule::Bool _field_global{jule::Bool()};
	jule::Bool _field_unsafety{jule::Bool()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_statically{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Slice<jule::Ref<_1d1e5192e_Directive>> _field_directives{jule::Slice<jule::Ref<_1d1e5192e_Directive>>()};
	jule::Ref<_1d1e5192e_CommentGroup> _field_doc_comments{jule::Ref<_1d1e5192e_CommentGroup>()};
	jule::Ref<_1d1e5192e_ScopeTree> _field_scope{jule::Ref<_1d1e5192e_ScopeTree>()};
	jule::Slice<jule::Ref<_1d1e5192e_GenericDecl>> _field_generics{jule::Slice<jule::Ref<_1d1e5192e_GenericDecl>>()};
	jule::Ref<_1d1e5192e_RetTypeDecl> _field_result{jule::Ref<_1d1e5192e_RetTypeDecl>()};
	jule::Slice<jule::Ref<_1d1e5192e_ParamDecl>> _field_params{jule::Slice<jule::Ref<_1d1e5192e_ParamDecl>>()};


	_1d1e5192e_FnDecl(_1d1da4277_Token __param_token, jule::Bool __param_global, jule::Bool __param_unsafety, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Bool __param_statically, jule::Str __param_ident, jule::Slice<jule::Ref<_1d1e5192e_Directive>> __param_directives, jule::Ref<_1d1e5192e_CommentGroup> __param_doc_comments, jule::Ref<_1d1e5192e_ScopeTree> __param_scope, jule::Slice<jule::Ref<_1d1e5192e_GenericDecl>> __param_generics, jule::Ref<_1d1e5192e_RetTypeDecl> __param_result, jule::Slice<jule::Ref<_1d1e5192e_ParamDecl>> __param_params) {
		this->self = jule::Ref<_1d1e5192e_FnDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_global = __param_global;
		this->_field_unsafety = __param_unsafety;
		this->_field_public = __param_public;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_statically = __param_statically;
		this->_field_ident = __param_ident;
		this->_field_directives = __param_directives;
		this->_field_doc_comments = __param_doc_comments;
		this->_field_scope = __param_scope;
		this->_field_generics = __param_generics;
		this->_field_result = __param_result;
		this->_field_params = __param_params;
	}

	~_1d1e5192e_FnDecl(void) { this->self.ref = nullptr; }

	_1d1e5192e_FnDecl(void) { this->self = jule::Ref<_1d1e5192e_FnDecl>::make(this, nullptr); }

	inline jule::Bool _method_is_anon(void);


	inline bool operator==(const _1d1e5192e_FnDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_global == _Src._field_global &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_statically == _Src._field_statically &&
			this->_field_ident == _Src._field_ident &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc_comments == _Src._field_doc_comments &&
			this->_field_scope == _Src._field_scope &&
			this->_field_generics == _Src._field_generics &&
			this->_field_result == _Src._field_result &&
			this->_field_params == _Src._field_params;
	}

	inline bool operator!=(const _1d1e5192e_FnDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1d1e5192e_VarDecl {
	jule::Ref<_1d1e5192e_VarDecl> self{};

	jule::Ref<_1d1e5192e_ScopeTree> _field_scope{jule::Ref<_1d1e5192e_ScopeTree>()};
	_1d1da4277_Token _field_token{_1d1da4277_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Bool _field_constant{jule::Bool()};
	jule::Bool _field_statically{jule::Bool()};
	jule::Bool _field_reference{jule::Bool()};
	jule::Slice<jule::Ref<_1d1e5192e_Directive>> _field_directives{jule::Slice<jule::Ref<_1d1e5192e_Directive>>()};
	jule::Ref<_1d1e5192e_CommentGroup> _field_doc_comments{jule::Ref<_1d1e5192e_CommentGroup>()};
	jule::Ref<_1d1e5192e_TypeDecl> _field_kind{jule::Ref<_1d1e5192e_TypeDecl>()};
	jule::Ref<_1d1e5192e_Expr> _field_expr{jule::Ref<_1d1e5192e_Expr>()};


	_1d1e5192e_VarDecl(jule::Ref<_1d1e5192e_ScopeTree> __param_scope, _1d1da4277_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked, jule::Bool __param_public, jule::Bool __param_mutable, jule::Bool __param_constant, jule::Bool __param_statically, jule::Bool __param_reference, jule::Slice<jule::Ref<_1d1e5192e_Directive>> __param_directives, jule::Ref<_1d1e5192e_CommentGroup> __param_doc_comments, jule::Ref<_1d1e5192e_TypeDecl> __param_kind, jule::Ref<_1d1e5192e_Expr> __param_expr) {
		this->self = jule::Ref<_1d1e5192e_VarDecl>::make(this, nullptr);

		this->_field_scope = __param_scope;
		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_public = __param_public;
		this->_field_mutable = __param_mutable;
		this->_field_constant = __param_constant;
		this->_field_statically = __param_statically;
		this->_field_reference = __param_reference;
		this->_field_directives = __param_directives;
		this->_field_doc_comments = __param_doc_comments;
		this->_field_kind = __param_kind;
		this->_field_expr = __param_expr;
	}

	~_1d1e5192e_VarDecl(void) { this->self.ref = nullptr; }

	_1d1e5192e_VarDecl(void) { this->self = jule::Ref<_1d1e5192e_VarDecl>::make(this, nullptr); }

	inline bool operator==(const _1d1e5192e_VarDecl &_Src) const {
		return 
			this->_field_scope == _Src._field_scope &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_public == _Src._field_public &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_constant == _Src._field_constant &&
			this->_field_statically == _Src._field_statically &&
			this->_field_reference == _Src._field_reference &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc_comments == _Src._field_doc_comments &&
			this->_field_kind == _Src._field_kind &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1d1e5192e_VarDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1b951b088_TypeChecker {
	jule::Ref<_1b951b088_TypeChecker> self{};

	jule::Ref<_1b912748b_Sema> _field_s{jule::Ref<_1b912748b_Sema>()};
	jule::Trait<_1b9a5b012_Lookup> _field_lookup{jule::Trait<_1b9a5b012_Lookup>()};
	jule::Ref<_1b951b088_Referencer> _field_referencer{jule::Ref<_1b951b088_Referencer>()};
	_1d1da4277_Token _field_error_token{_1d1da4277_Token()};
	jule::Slice<jule::Ref<_1d1e5192e_GenericDecl>> _field_ignore_generics{jule::Slice<jule::Ref<_1d1e5192e_GenericDecl>>()};
	jule::Slice<jule::Ref<_1b951b088_TypeAlias>> _field_use_generics{jule::Slice<jule::Ref<_1b951b088_TypeAlias>>()};
	jule::Bool _field_not_plain{jule::Bool()};


	_1b951b088_TypeChecker(jule::Ref<_1b912748b_Sema> __param_s, jule::Trait<_1b9a5b012_Lookup> __param_lookup, jule::Ref<_1b951b088_Referencer> __param_referencer, _1d1da4277_Token __param_error_token, jule::Slice<jule::Ref<_1d1e5192e_GenericDecl>> __param_ignore_generics, jule::Slice<jule::Ref<_1b951b088_TypeAlias>> __param_use_generics, jule::Bool __param_not_plain) {
		this->self = jule::Ref<_1b951b088_TypeChecker>::make(this, nullptr);

		this->_field_s = __param_s;
		this->_field_lookup = __param_lookup;
		this->_field_referencer = __param_referencer;
		this->_field_error_token = __param_error_token;
		this->_field_ignore_generics = __param_ignore_generics;
		this->_field_use_generics = __param_use_generics;
		this->_field_not_plain = __param_not_plain;
	}

	~_1b951b088_TypeChecker(void) { this->self.ref = nullptr; }

	_1b951b088_TypeChecker(void) { this->self = jule::Ref<_1b951b088_TypeChecker>::make(this, nullptr); }

	inline void _method_push_err(_1d1da4277_Token,jule::Str,jule::Slice<jule::Any>);


	inline jule::Ref<_1b951b088_Prim> _method_build_prim(jule::Ref<_1d1e5192e_IdentTypeDecl>&);


	inline void _method_push_cycle_error(jule::Any,jule::Any,jule::Str&);


	inline jule::Bool _method_are_equals_cross_cycle_data_0(jule::Any,jule::Any);
	inline jule::Bool _method_are_equals_cross_cycle_data_1(jule::Any,jule::Any);


	inline jule::Bool _method_check_cross_cycle(jule::Any,jule::Str&);


	inline jule::Bool _method_check_illegal_cycles(jule::Ref<_1d1e5192e_IdentTypeDecl>&,jule::Any);


	inline jule::Trait<_1b951b088_Kind> _method_from_type_alias(jule::Ref<_1d1e5192e_IdentTypeDecl>&,jule::Ref<_1b951b088_TypeAlias>&);


	inline jule::Ref<_1b8dae520_Enum> _method_from_enum(jule::Ref<_1d1e5192e_IdentTypeDecl>&,jule::Ref<_1b8dae520_Enum>&);


	inline jule::Bool _method_check_struct_ins(jule::Ref<_1d21c0b59_StructIns>&,_1d1da4277_Token&);


	inline void _method_append_used_struct_reference(jule::Ref<_1d21c0b59_Struct>&);


	inline jule::Ref<_1d21c0b59_StructIns> _method_from_struct(jule::Ref<_1d1e5192e_IdentTypeDecl>&,jule::Ref<_1d21c0b59_Struct>&);


	inline jule::Trait<_1b951b088_Kind> _method_get_def(jule::Ref<_1d1e5192e_IdentTypeDecl>&);


	inline jule::Trait<_1b951b088_Kind> _method_build_ident(jule::Ref<_1d1e5192e_IdentTypeDecl>);


	inline jule::Ref<_1b951b088_Ref> _method_build_ref_from_type(jule::Ref<_1b951b088_TypeKind>&);


	inline jule::Ref<_1b951b088_Ref> _method_build_ref(jule::Ref<_1d1e5192e_RefTypeDecl>);


	inline jule::Ref<_1b951b088_Ptr> _method_build_ptr_from_type(jule::Ref<_1b951b088_TypeKind>&);


	inline jule::Ref<_1b951b088_Ptr> _method_build_ptr(jule::Ref<_1d1e5192e_PtrTypeDecl>);


	inline jule::Ref<_1b951b088_Slc> _method_build_slc(jule::Ref<_1d1e5192e_SlcTypeDecl>);


	inline jule::Ref<_1b951b088_Arr> _method_build_arr(jule::Ref<_1d1e5192e_ArrTypeDecl>);


	inline jule::Ref<_1b951b088_Map> _method_build_map(jule::Ref<_1d1e5192e_MapTypeDecl>);


	inline jule::Ref<_1b951b088_Tuple> _method_build_tuple(jule::Ref<_1d1e5192e_TupleTypeDecl>);


	inline jule::Bool _method_check_fn_types(jule::Ref<_1d21d97ee_FnIns>&);


	inline jule::Ref<_1d21d97ee_FnIns> _method_build_fn(jule::Ref<_1d1e5192e_FnDecl>);


	inline jule::Trait<_1b951b088_Kind> _method_build_by_namespace(jule::Ref<_1d1e5192e_NamespaceTypeDecl>);


	inline jule::Ref<_1b951b088_TypeKind> _method_build(jule::Any&);


	inline jule::Ref<_1b951b088_TypeKind> _method_check_decl(jule::Ref<_1d1e5192e_TypeDecl>&);


	inline void _method_check(jule::Ref<_1b951b088_TypeSymbol>&);


	inline bool operator==(const _1b951b088_TypeChecker &_Src) const {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_lookup == _Src._field_lookup &&
			this->_field_referencer == _Src._field_referencer &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_ignore_generics == _Src._field_ignore_generics &&
			this->_field_use_generics == _Src._field_use_generics &&
			this->_field_not_plain == _Src._field_not_plain;
	}

	inline bool operator!=(const _1b951b088_TypeChecker &_Src) const { return !this->operator==(_Src); }
};


struct _1d1818549_IR {
	jule::Ref<_1d1818549_IR> self{};

	jule::Slice<jule::Str> _field_passes{jule::Slice<jule::Str>()};
	jule::Ref<_1b8e0c01d_Package> _field_main{jule::Ref<_1b8e0c01d_Package>()};
	jule::Slice<jule::Ref<_1b8e0c01d_ImportInfo>> _field_used{jule::Slice<jule::Ref<_1b8e0c01d_ImportInfo>>()};
	_1d162b2a2_OrderedDefines _field_ordered{_1d162b2a2_OrderedDefines()};


	_1d1818549_IR(jule::Slice<jule::Str> __param_passes, jule::Ref<_1b8e0c01d_Package> __param_main, jule::Slice<jule::Ref<_1b8e0c01d_ImportInfo>> __param_used, _1d162b2a2_OrderedDefines __param_ordered) {
		this->self = jule::Ref<_1d1818549_IR>::make(this, nullptr);

		this->_field_passes = __param_passes;
		this->_field_main = __param_main;
		this->_field_used = __param_used;
		this->_field_ordered = __param_ordered;
	}

	~_1d1818549_IR(void) { this->self.ref = nullptr; }

	_1d1818549_IR(void) { this->self = jule::Ref<_1d1818549_IR>::make(this, nullptr); }

	static inline std::tuple<jule::Ref<_1d1818549_IR>,jule::Slice<_1d0557e9e_Log>> _static_method_build(jule::Str,jule::Int);


	inline void _method_append_structs(jule::Ref<_1b8e0c01d_Package>&,jule::Slice<jule::Ref<_1d21c0b59_Struct>>&);


	inline jule::Slice<jule::Ref<_1d21c0b59_Struct>> _method_get_all_structures(void);


	inline void _method_append_vars(jule::Ref<_1b8e0c01d_Package>&,jule::Slice<jule::Ref<_1b919cb2c_Var>>&);


	inline jule::Slice<jule::Ref<_1b919cb2c_Var>> _method_get_all_variables(void);


	inline void _method_order(void);


	inline bool operator==(const _1d1818549_IR &_Src) const {
		return 
			this->_field_passes == _Src._field_passes &&
			this->_field_main == _Src._field_main &&
			this->_field_used == _Src._field_used &&
			this->_field_ordered == _Src._field_ordered;
	}

	inline bool operator!=(const _1d1818549_IR &_Src) const { return !this->operator==(_Src); }
};


struct _1d1e5192e_BreakSt {
	jule::Ref<_1d1e5192e_BreakSt> self{};

	_1d1da4277_Token _field_token{_1d1da4277_Token()};
	_1d1da4277_Token _field_label{_1d1da4277_Token()};


	_1d1e5192e_BreakSt(_1d1da4277_Token __param_token, _1d1da4277_Token __param_label) {
		this->self = jule::Ref<_1d1e5192e_BreakSt>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_label = __param_label;
	}

	~_1d1e5192e_BreakSt(void) { this->self.ref = nullptr; }

	_1d1e5192e_BreakSt(void) { this->self = jule::Ref<_1d1e5192e_BreakSt>::make(this, nullptr); }

	inline bool operator==(const _1d1e5192e_BreakSt &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_label == _Src._field_label;
	}

	inline bool operator!=(const _1d1e5192e_BreakSt &_Src) const { return !this->operator==(_Src); }
};


struct _1d1e5192e_ContSt {
	jule::Ref<_1d1e5192e_ContSt> self{};

	_1d1da4277_Token _field_token{_1d1da4277_Token()};
	_1d1da4277_Token _field_label{_1d1da4277_Token()};


	_1d1e5192e_ContSt(_1d1da4277_Token __param_token, _1d1da4277_Token __param_label) {
		this->self = jule::Ref<_1d1e5192e_ContSt>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_label = __param_label;
	}

	~_1d1e5192e_ContSt(void) { this->self.ref = nullptr; }

	_1d1e5192e_ContSt(void) { this->self = jule::Ref<_1d1e5192e_ContSt>::make(this, nullptr); }

	inline bool operator==(const _1d1e5192e_ContSt &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_label == _Src._field_label;
	}

	inline bool operator!=(const _1d1e5192e_ContSt &_Src) const { return !this->operator==(_Src); }
};


struct _1b8cd2c4b_ScopeLabel {
	jule::Ref<_1b8cd2c4b_ScopeLabel> self{};

	_1d1da4277_Token _field_token{_1d1da4277_Token()};
	jule::Ref<_1b8cd2c4b_Label> _field_label{jule::Ref<_1b8cd2c4b_Label>()};
	jule::Int _field_pos{jule::Int()};
	jule::Ref<_1b8cd2c4b_ScopeChecker> _field_scope{jule::Ref<_1b8cd2c4b_ScopeChecker>()};
	jule::Bool _field_used{jule::Bool()};


	_1b8cd2c4b_ScopeLabel(_1d1da4277_Token __param_token, jule::Ref<_1b8cd2c4b_Label> __param_label, jule::Int __param_pos, jule::Ref<_1b8cd2c4b_ScopeChecker> __param_scope, jule::Bool __param_used) {
		this->self = jule::Ref<_1b8cd2c4b_ScopeLabel>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_label = __param_label;
		this->_field_pos = __param_pos;
		this->_field_scope = __param_scope;
		this->_field_used = __param_used;
	}

	~_1b8cd2c4b_ScopeLabel(void) { this->self.ref = nullptr; }

	_1b8cd2c4b_ScopeLabel(void) { this->self = jule::Ref<_1b8cd2c4b_ScopeLabel>::make(this, nullptr); }

	inline bool operator==(const _1b8cd2c4b_ScopeLabel &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_label == _Src._field_label &&
			this->_field_pos == _Src._field_pos &&
			this->_field_scope == _Src._field_scope &&
			this->_field_used == _Src._field_used;
	}

	inline bool operator!=(const _1b8cd2c4b_ScopeLabel &_Src) const { return !this->operator==(_Src); }
};


struct _1d1e5192e_If {
	jule::Ref<_1d1e5192e_If> self{};

	_1d1da4277_Token _field_token{_1d1da4277_Token()};
	jule::Ref<_1d1e5192e_Expr> _field_expr{jule::Ref<_1d1e5192e_Expr>()};
	jule::Ref<_1d1e5192e_ScopeTree> _field_scope{jule::Ref<_1d1e5192e_ScopeTree>()};


	_1d1e5192e_If(_1d1da4277_Token __param_token, jule::Ref<_1d1e5192e_Expr> __param_expr, jule::Ref<_1d1e5192e_ScopeTree> __param_scope) {
		this->self = jule::Ref<_1d1e5192e_If>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_expr = __param_expr;
		this->_field_scope = __param_scope;
	}

	~_1d1e5192e_If(void) { this->self.ref = nullptr; }

	_1d1e5192e_If(void) { this->self = jule::Ref<_1d1e5192e_If>::make(this, nullptr); }

	inline bool operator==(const _1d1e5192e_If &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _1d1e5192e_If &_Src) const { return !this->operator==(_Src); }
};


struct _1d1e5192e_Else {
	jule::Ref<_1d1e5192e_Else> self{};

	_1d1da4277_Token _field_token{_1d1da4277_Token()};
	jule::Ref<_1d1e5192e_ScopeTree> _field_scope{jule::Ref<_1d1e5192e_ScopeTree>()};


	_1d1e5192e_Else(_1d1da4277_Token __param_token, jule::Ref<_1d1e5192e_ScopeTree> __param_scope) {
		this->self = jule::Ref<_1d1e5192e_Else>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_scope = __param_scope;
	}

	~_1d1e5192e_Else(void) { this->self.ref = nullptr; }

	_1d1e5192e_Else(void) { this->self = jule::Ref<_1d1e5192e_Else>::make(this, nullptr); }

	inline bool operator==(const _1d1e5192e_Else &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _1d1e5192e_Else &_Src) const { return !this->operator==(_Src); }
};


struct _1d1e5192e_Directive {
	jule::Ref<_1d1e5192e_Directive> self{};

	_1d1da4277_Token _field_token{_1d1da4277_Token()};
	jule::Str _field_tag{jule::Str()};
	jule::Slice<jule::Str> _field_args{jule::Slice<jule::Str>()};


	_1d1e5192e_Directive(_1d1da4277_Token __param_token, jule::Str __param_tag, jule::Slice<jule::Str> __param_args) {
		this->self = jule::Ref<_1d1e5192e_Directive>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_tag = __param_tag;
		this->_field_args = __param_args;
	}

	~_1d1e5192e_Directive(void) { this->self.ref = nullptr; }

	_1d1e5192e_Directive(void) { this->self = jule::Ref<_1d1e5192e_Directive>::make(this, nullptr); }

	inline bool operator==(const _1d1e5192e_Directive &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_tag == _Src._field_tag &&
			this->_field_args == _Src._field_args;
	}

	inline bool operator!=(const _1d1e5192e_Directive &_Src) const { return !this->operator==(_Src); }
};


struct _1d1e5192e_TypeAliasDecl {
	jule::Ref<_1d1e5192e_TypeAliasDecl> self{};

	jule::Ref<_1d1e5192e_ScopeTree> _field_scope{jule::Ref<_1d1e5192e_ScopeTree>()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	_1d1da4277_Token _field_token{_1d1da4277_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_1d1e5192e_TypeDecl> _field_kind{jule::Ref<_1d1e5192e_TypeDecl>()};
	jule::Ref<_1d1e5192e_CommentGroup> _field_doc_comments{jule::Ref<_1d1e5192e_CommentGroup>()};


	_1d1e5192e_TypeAliasDecl(jule::Ref<_1d1e5192e_ScopeTree> __param_scope, jule::Bool __param_public, jule::Bool __param_cpp_linked, _1d1da4277_Token __param_token, jule::Str __param_ident, jule::Ref<_1d1e5192e_TypeDecl> __param_kind, jule::Ref<_1d1e5192e_CommentGroup> __param_doc_comments) {
		this->self = jule::Ref<_1d1e5192e_TypeAliasDecl>::make(this, nullptr);

		this->_field_scope = __param_scope;
		this->_field_public = __param_public;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_kind = __param_kind;
		this->_field_doc_comments = __param_doc_comments;
	}

	~_1d1e5192e_TypeAliasDecl(void) { this->self.ref = nullptr; }

	_1d1e5192e_TypeAliasDecl(void) { this->self = jule::Ref<_1d1e5192e_TypeAliasDecl>::make(this, nullptr); }

	inline bool operator==(const _1d1e5192e_TypeAliasDecl &_Src) const {
		return 
			this->_field_scope == _Src._field_scope &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind &&
			this->_field_doc_comments == _Src._field_doc_comments;
	}

	inline bool operator!=(const _1d1e5192e_TypeAliasDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1d1e5192e_Case {
	jule::Ref<_1d1e5192e_Case> self{};

	_1d1da4277_Token _field_token{_1d1da4277_Token()};
	jule::Ref<_1d1e5192e_ScopeTree> _field_scope{jule::Ref<_1d1e5192e_ScopeTree>()};
	jule::Slice<jule::Ref<_1d1e5192e_Expr>> _field_exprs{jule::Slice<jule::Ref<_1d1e5192e_Expr>>()};


	_1d1e5192e_Case(_1d1da4277_Token __param_token, jule::Ref<_1d1e5192e_ScopeTree> __param_scope, jule::Slice<jule::Ref<_1d1e5192e_Expr>> __param_exprs) {
		this->self = jule::Ref<_1d1e5192e_Case>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_scope = __param_scope;
		this->_field_exprs = __param_exprs;
	}

	~_1d1e5192e_Case(void) { this->self.ref = nullptr; }

	_1d1e5192e_Case(void) { this->self = jule::Ref<_1d1e5192e_Case>::make(this, nullptr); }

	inline bool operator==(const _1d1e5192e_Case &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_scope == _Src._field_scope &&
			this->_field_exprs == _Src._field_exprs;
	}

	inline bool operator!=(const _1d1e5192e_Case &_Src) const { return !this->operator==(_Src); }
};


struct _1d1e5192e_UseDecl {
	jule::Ref<_1d1e5192e_UseDecl> self{};

	_1d1da4277_Token _field_token{_1d1da4277_Token()};
	jule::Str _field_link_path{jule::Str()};
	jule::Str _field_alias{jule::Str()};
	jule::Bool _field_full{jule::Bool()};
	jule::Slice<_1d1da4277_Token> _field_selected{jule::Slice<_1d1da4277_Token>()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_std{jule::Bool()};


	_1d1e5192e_UseDecl(_1d1da4277_Token __param_token, jule::Str __param_link_path, jule::Str __param_alias, jule::Bool __param_full, jule::Slice<_1d1da4277_Token> __param_selected, jule::Bool __param_cpp_linked, jule::Bool __param_std) {
		this->self = jule::Ref<_1d1e5192e_UseDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_link_path = __param_link_path;
		this->_field_alias = __param_alias;
		this->_field_full = __param_full;
		this->_field_selected = __param_selected;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_std = __param_std;
	}

	~_1d1e5192e_UseDecl(void) { this->self.ref = nullptr; }

	_1d1e5192e_UseDecl(void) { this->self = jule::Ref<_1d1e5192e_UseDecl>::make(this, nullptr); }

	inline bool operator==(const _1d1e5192e_UseDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_link_path == _Src._field_link_path &&
			this->_field_alias == _Src._field_alias &&
			this->_field_full == _Src._field_full &&
			this->_field_selected == _Src._field_selected &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_std == _Src._field_std;
	}

	inline bool operator!=(const _1d1e5192e_UseDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1d1e5192e_EnumItemDecl {
	jule::Ref<_1d1e5192e_EnumItemDecl> self{};

	_1d1da4277_Token _field_token{_1d1da4277_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_1d1e5192e_Expr> _field_expr{jule::Ref<_1d1e5192e_Expr>()};


	_1d1e5192e_EnumItemDecl(_1d1da4277_Token __param_token, jule::Str __param_ident, jule::Ref<_1d1e5192e_Expr> __param_expr) {
		this->self = jule::Ref<_1d1e5192e_EnumItemDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_expr = __param_expr;
	}

	~_1d1e5192e_EnumItemDecl(void) { this->self.ref = nullptr; }

	_1d1e5192e_EnumItemDecl(void) { this->self = jule::Ref<_1d1e5192e_EnumItemDecl>::make(this, nullptr); }

	inline jule::Bool _method_auto_expr(void);


	inline bool operator==(const _1d1e5192e_EnumItemDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1d1e5192e_EnumItemDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1d1e5192e_EnumDecl {
	jule::Ref<_1d1e5192e_EnumDecl> self{};

	_1d1da4277_Token _field_token{_1d1da4277_Token()};
	jule::Bool _field_public{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_1d1e5192e_TypeDecl> _field_kind{jule::Ref<_1d1e5192e_TypeDecl>()};
	jule::Slice<jule::Ref<_1d1e5192e_EnumItemDecl>> _field_items{jule::Slice<jule::Ref<_1d1e5192e_EnumItemDecl>>()};
	jule::Ref<_1d1e5192e_CommentGroup> _field_doc_comments{jule::Ref<_1d1e5192e_CommentGroup>()};


	_1d1e5192e_EnumDecl(_1d1da4277_Token __param_token, jule::Bool __param_public, jule::Str __param_ident, jule::Ref<_1d1e5192e_TypeDecl> __param_kind, jule::Slice<jule::Ref<_1d1e5192e_EnumItemDecl>> __param_items, jule::Ref<_1d1e5192e_CommentGroup> __param_doc_comments) {
		this->self = jule::Ref<_1d1e5192e_EnumDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_public = __param_public;
		this->_field_ident = __param_ident;
		this->_field_kind = __param_kind;
		this->_field_items = __param_items;
		this->_field_doc_comments = __param_doc_comments;
	}

	~_1d1e5192e_EnumDecl(void) { this->self.ref = nullptr; }

	_1d1e5192e_EnumDecl(void) { this->self = jule::Ref<_1d1e5192e_EnumDecl>::make(this, nullptr); }

	inline jule::Bool _method_default_typed(void);


	inline bool operator==(const _1d1e5192e_EnumDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_public == _Src._field_public &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind &&
			this->_field_items == _Src._field_items &&
			this->_field_doc_comments == _Src._field_doc_comments;
	}

	inline bool operator!=(const _1d1e5192e_EnumDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1d1e5192e_FieldDecl {
	jule::Ref<_1d1e5192e_FieldDecl> self{};

	_1d1da4277_Token _field_token{_1d1da4277_Token()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_1d1e5192e_TypeDecl> _field_kind{jule::Ref<_1d1e5192e_TypeDecl>()};


	_1d1e5192e_FieldDecl(_1d1da4277_Token __param_token, jule::Bool __param_public, jule::Bool __param_mutable, jule::Str __param_ident, jule::Ref<_1d1e5192e_TypeDecl> __param_kind) {
		this->self = jule::Ref<_1d1e5192e_FieldDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_public = __param_public;
		this->_field_mutable = __param_mutable;
		this->_field_ident = __param_ident;
		this->_field_kind = __param_kind;
	}

	~_1d1e5192e_FieldDecl(void) { this->self.ref = nullptr; }

	_1d1e5192e_FieldDecl(void) { this->self = jule::Ref<_1d1e5192e_FieldDecl>::make(this, nullptr); }

	inline bool operator==(const _1d1e5192e_FieldDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_public == _Src._field_public &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1d1e5192e_FieldDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1d1e5192e_StructDecl {
	jule::Ref<_1d1e5192e_StructDecl> self{};

	_1d1da4277_Token _field_token{_1d1da4277_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Slice<jule::Ref<_1d1e5192e_FieldDecl>> _field_fields{jule::Slice<jule::Ref<_1d1e5192e_FieldDecl>>()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Slice<jule::Ref<_1d1e5192e_Directive>> _field_directives{jule::Slice<jule::Ref<_1d1e5192e_Directive>>()};
	jule::Ref<_1d1e5192e_CommentGroup> _field_doc_comments{jule::Ref<_1d1e5192e_CommentGroup>()};
	jule::Slice<jule::Ref<_1d1e5192e_GenericDecl>> _field_generics{jule::Slice<jule::Ref<_1d1e5192e_GenericDecl>>()};


	_1d1e5192e_StructDecl(_1d1da4277_Token __param_token, jule::Str __param_ident, jule::Slice<jule::Ref<_1d1e5192e_FieldDecl>> __param_fields, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Slice<jule::Ref<_1d1e5192e_Directive>> __param_directives, jule::Ref<_1d1e5192e_CommentGroup> __param_doc_comments, jule::Slice<jule::Ref<_1d1e5192e_GenericDecl>> __param_generics) {
		this->self = jule::Ref<_1d1e5192e_StructDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_fields = __param_fields;
		this->_field_public = __param_public;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_directives = __param_directives;
		this->_field_doc_comments = __param_doc_comments;
		this->_field_generics = __param_generics;
	}

	~_1d1e5192e_StructDecl(void) { this->self.ref = nullptr; }

	_1d1e5192e_StructDecl(void) { this->self = jule::Ref<_1d1e5192e_StructDecl>::make(this, nullptr); }

	inline bool operator==(const _1d1e5192e_StructDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_fields == _Src._field_fields &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc_comments == _Src._field_doc_comments &&
			this->_field_generics == _Src._field_generics;
	}

	inline bool operator!=(const _1d1e5192e_StructDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1d1e5192e_TraitDecl {
	jule::Ref<_1d1e5192e_TraitDecl> self{};

	_1d1da4277_Token _field_token{_1d1da4277_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_public{jule::Bool()};
	jule::Ref<_1d1e5192e_CommentGroup> _field_doc_comments{jule::Ref<_1d1e5192e_CommentGroup>()};
	jule::Slice<jule::Ref<_1d1e5192e_FnDecl>> _field_methods{jule::Slice<jule::Ref<_1d1e5192e_FnDecl>>()};


	_1d1e5192e_TraitDecl(_1d1da4277_Token __param_token, jule::Str __param_ident, jule::Bool __param_public, jule::Ref<_1d1e5192e_CommentGroup> __param_doc_comments, jule::Slice<jule::Ref<_1d1e5192e_FnDecl>> __param_methods) {
		this->self = jule::Ref<_1d1e5192e_TraitDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_public = __param_public;
		this->_field_doc_comments = __param_doc_comments;
		this->_field_methods = __param_methods;
	}

	~_1d1e5192e_TraitDecl(void) { this->self.ref = nullptr; }

	_1d1e5192e_TraitDecl(void) { this->self = jule::Ref<_1d1e5192e_TraitDecl>::make(this, nullptr); }

	inline bool operator==(const _1d1e5192e_TraitDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_public == _Src._field_public &&
			this->_field_doc_comments == _Src._field_doc_comments &&
			this->_field_methods == _Src._field_methods;
	}

	inline bool operator!=(const _1d1e5192e_TraitDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1d1e5192e_Impl {
	jule::Ref<_1d1e5192e_Impl> self{};

	_1d1da4277_Token _field_base{_1d1da4277_Token()};
	_1d1da4277_Token _field_dest{_1d1da4277_Token()};
	jule::Slice<jule::Ref<_1d1e5192e_FnDecl>> _field_methods{jule::Slice<jule::Ref<_1d1e5192e_FnDecl>>()};
	jule::Slice<jule::Ref<_1d1e5192e_VarDecl>> _field_statics{jule::Slice<jule::Ref<_1d1e5192e_VarDecl>>()};


	_1d1e5192e_Impl(_1d1da4277_Token __param_base, _1d1da4277_Token __param_dest, jule::Slice<jule::Ref<_1d1e5192e_FnDecl>> __param_methods, jule::Slice<jule::Ref<_1d1e5192e_VarDecl>> __param_statics) {
		this->self = jule::Ref<_1d1e5192e_Impl>::make(this, nullptr);

		this->_field_base = __param_base;
		this->_field_dest = __param_dest;
		this->_field_methods = __param_methods;
		this->_field_statics = __param_statics;
	}

	~_1d1e5192e_Impl(void) { this->self.ref = nullptr; }

	_1d1e5192e_Impl(void) { this->self = jule::Ref<_1d1e5192e_Impl>::make(this, nullptr); }

	inline jule::Bool _method_is_trait_impl(void);


	inline jule::Bool _method_is_struct_impl(void);


	inline bool operator==(const _1d1e5192e_Impl &_Src) const {
		return 
			this->_field_base == _Src._field_base &&
			this->_field_dest == _Src._field_dest &&
			this->_field_methods == _Src._field_methods &&
			this->_field_statics == _Src._field_statics;
	}

	inline bool operator!=(const _1d1e5192e_Impl &_Src) const { return !this->operator==(_Src); }
};


struct _1d1e5192e_Expr {
	jule::Ref<_1d1e5192e_Expr> self{};

	_1d1da4277_Token _field_token{_1d1da4277_Token()};
	jule::Any _field_kind{jule::Any()};


	_1d1e5192e_Expr(_1d1da4277_Token __param_token, jule::Any __param_kind) {
		this->self = jule::Ref<_1d1e5192e_Expr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_kind = __param_kind;
	}

	~_1d1e5192e_Expr(void) { this->self.ref = nullptr; }

	_1d1e5192e_Expr(void) { this->self = jule::Ref<_1d1e5192e_Expr>::make(this, nullptr); }

	inline jule::Bool _method_is_fn_call(void);


	inline bool operator==(const _1d1e5192e_Expr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1d1e5192e_Expr &_Src) const { return !this->operator==(_Src); }
};


struct _1d1e5192e_TypeDecl {
	jule::Ref<_1d1e5192e_TypeDecl> self{};

	_1d1da4277_Token _field_token{_1d1da4277_Token()};
	jule::Any _field_kind{jule::Any()};


	_1d1e5192e_TypeDecl(_1d1da4277_Token __param_token, jule::Any __param_kind) {
		this->self = jule::Ref<_1d1e5192e_TypeDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_kind = __param_kind;
	}

	~_1d1e5192e_TypeDecl(void) { this->self.ref = nullptr; }

	_1d1e5192e_TypeDecl(void) { this->self = jule::Ref<_1d1e5192e_TypeDecl>::make(this, nullptr); }

	inline bool operator==(const _1d1e5192e_TypeDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1d1e5192e_TypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1d21bd937_AssignInfo {
	jule::Ref<_1d21bd937_AssignInfo> self{};

	jule::Slice<_1d1da4277_Token> _field_l{jule::Slice<_1d1da4277_Token>()};
	jule::Slice<_1d1da4277_Token> _field_r{jule::Slice<_1d1da4277_Token>()};
	_1d1da4277_Token _field_setter{_1d1da4277_Token()};
	jule::Bool _field_ok{jule::Bool()};


	_1d21bd937_AssignInfo(jule::Slice<_1d1da4277_Token> __param_l, jule::Slice<_1d1da4277_Token> __param_r, _1d1da4277_Token __param_setter, jule::Bool __param_ok) {
		this->self = jule::Ref<_1d21bd937_AssignInfo>::make(this, nullptr);

		this->_field_l = __param_l;
		this->_field_r = __param_r;
		this->_field_setter = __param_setter;
		this->_field_ok = __param_ok;
	}

	~_1d21bd937_AssignInfo(void) { this->self.ref = nullptr; }

	_1d21bd937_AssignInfo(void) { this->self = jule::Ref<_1d21bd937_AssignInfo>::make(this, nullptr); }

	inline bool operator==(const _1d21bd937_AssignInfo &_Src) const {
		return 
			this->_field_l == _Src._field_l &&
			this->_field_r == _Src._field_r &&
			this->_field_setter == _Src._field_setter &&
			this->_field_ok == _Src._field_ok;
	}

	inline bool operator!=(const _1d21bd937_AssignInfo &_Src) const { return !this->operator==(_Src); }
};


struct _1d1e5192e_IdentTypeDecl {
	jule::Ref<_1d1e5192e_IdentTypeDecl> self{};

	_1d1da4277_Token _field_token{_1d1da4277_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Slice<jule::Ref<_1d1e5192e_TypeDecl>> _field_generics{jule::Slice<jule::Ref<_1d1e5192e_TypeDecl>>()};


	_1d1e5192e_IdentTypeDecl(_1d1da4277_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked, jule::Slice<jule::Ref<_1d1e5192e_TypeDecl>> __param_generics) {
		this->self = jule::Ref<_1d1e5192e_IdentTypeDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_generics = __param_generics;
	}

	~_1d1e5192e_IdentTypeDecl(void) { this->self.ref = nullptr; }

	_1d1e5192e_IdentTypeDecl(void) { this->self = jule::Ref<_1d1e5192e_IdentTypeDecl>::make(this, nullptr); }

	inline jule::Bool _method_is_prim(void);


	inline bool operator==(const _1d1e5192e_IdentTypeDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_generics == _Src._field_generics;
	}

	inline bool operator!=(const _1d1e5192e_IdentTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _1d21c0b59_Field {
	jule::Ref<_1d21c0b59_Field> self{};

	jule::Ref<_1d21c0b59_Struct> _field_owner{jule::Ref<_1d21c0b59_Struct>()};
	_1d1da4277_Token _field_token{_1d1da4277_Token()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_1b951b088_TypeSymbol> _field_kind{jule::Ref<_1b951b088_TypeSymbol>()};


	_1d21c0b59_Field(jule::Ref<_1d21c0b59_Struct> __param_owner, _1d1da4277_Token __param_token, jule::Bool __param_public, jule::Bool __param_mutable, jule::Str __param_ident, jule::Ref<_1b951b088_TypeSymbol> __param_kind) {
		this->self = jule::Ref<_1d21c0b59_Field>::make(this, nullptr);

		this->_field_owner = __param_owner;
		this->_field_token = __param_token;
		this->_field_public = __param_public;
		this->_field_mutable = __param_mutable;
		this->_field_ident = __param_ident;
		this->_field_kind = __param_kind;
	}

	~_1d21c0b59_Field(void) { this->self.ref = nullptr; }

	_1d21c0b59_Field(void) { this->self = jule::Ref<_1d21c0b59_Field>::make(this, nullptr); }

	inline jule::Ref<_1d21c0b59_FieldIns> _method_instance(void);


	inline bool operator==(const _1d21c0b59_Field &_Src) const {
		return 
			this->_field_owner == _Src._field_owner &&
			this->_field_token == _Src._field_token &&
			this->_field_public == _Src._field_public &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1d21c0b59_Field &_Src) const { return !this->operator==(_Src); }
};


struct _1d21c0b59_Struct {
	jule::Ref<_1d21c0b59_Struct> self{};

	jule::Ref<_1b912748b_Sema> _field_sema{jule::Ref<_1b912748b_Sema>()};
	jule::Slice<jule::Ref<_1d21c0b59_Struct>> _field_depends{jule::Slice<jule::Ref<_1d21c0b59_Struct>>()};
	jule::Slice<jule::Ref<_1d21c0b59_Struct>> _field_uses{jule::Slice<jule::Ref<_1d21c0b59_Struct>>()};
	_1d1da4277_Token _field_token{_1d1da4277_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Slice<jule::Ref<_1d21c0b59_Field>> _field_fields{jule::Slice<jule::Ref<_1d21c0b59_Field>>()};
	jule::Slice<jule::Ref<_1d21d97ee_Fn>> _field_methods{jule::Slice<jule::Ref<_1d21d97ee_Fn>>()};
	jule::Slice<jule::Ref<_1b919cb2c_Var>> _field_statics{jule::Slice<jule::Ref<_1b919cb2c_Var>>()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Slice<jule::Ref<_1d1e5192e_Directive>> _field_directives{jule::Slice<jule::Ref<_1d1e5192e_Directive>>()};
	jule::Str _field_doc{jule::Str()};
	jule::Slice<jule::Ref<_1d1e5192e_GenericDecl>> _field_generics{jule::Slice<jule::Ref<_1d1e5192e_GenericDecl>>()};
	jule::Slice<jule::Ref<_1b8cd2894_Trait>> _field_implements{jule::Slice<jule::Ref<_1b8cd2894_Trait>>()};
	jule::Slice<jule::Ref<_1d21c0b59_StructIns>> _field_instances{jule::Slice<jule::Ref<_1d21c0b59_StructIns>>()};


	_1d21c0b59_Struct(jule::Ref<_1b912748b_Sema> __param_sema, jule::Slice<jule::Ref<_1d21c0b59_Struct>> __param_depends, jule::Slice<jule::Ref<_1d21c0b59_Struct>> __param_uses, _1d1da4277_Token __param_token, jule::Str __param_ident, jule::Slice<jule::Ref<_1d21c0b59_Field>> __param_fields, jule::Slice<jule::Ref<_1d21d97ee_Fn>> __param_methods, jule::Slice<jule::Ref<_1b919cb2c_Var>> __param_statics, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Slice<jule::Ref<_1d1e5192e_Directive>> __param_directives, jule::Str __param_doc, jule::Slice<jule::Ref<_1d1e5192e_GenericDecl>> __param_generics, jule::Slice<jule::Ref<_1b8cd2894_Trait>> __param_implements, jule::Slice<jule::Ref<_1d21c0b59_StructIns>> __param_instances) {
		this->self = jule::Ref<_1d21c0b59_Struct>::make(this, nullptr);

		this->_field_sema = __param_sema;
		this->_field_depends = __param_depends;
		this->_field_uses = __param_uses;
		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_fields = __param_fields;
		this->_field_methods = __param_methods;
		this->_field_statics = __param_statics;
		this->_field_public = __param_public;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_directives = __param_directives;
		this->_field_doc = __param_doc;
		this->_field_generics = __param_generics;
		this->_field_implements = __param_implements;
		this->_field_instances = __param_instances;
	}

	~_1d21c0b59_Struct(void) { this->self.ref = nullptr; }

	_1d21c0b59_Struct(void) { this->self = jule::Ref<_1d21c0b59_Struct>::make(this, nullptr); }

	inline jule::Ref<_1d21c0b59_StructIns> _method_instance(void);


	inline jule::Ref<_1d21c0b59_StructIns> _method_append_instance(jule::Ref<_1d21c0b59_StructIns>&);


	inline jule::Ref<_1d21d97ee_Fn> _method_find_method(jule::Str,jule::Bool);


	inline jule::Ref<_1b919cb2c_Var> _method_find_static(jule::Str);


	inline jule::Ref<_1d21c0b59_Field> _method_find_field(jule::Str);


	inline jule::Bool _method_is_implements(jule::Ref<_1b8cd2894_Trait>);


	inline jule::Bool _method_is_derives(jule::Str);


	inline jule::Bool _method_is_uses(jule::Ref<_1d21c0b59_Struct>);


	inline bool operator==(const _1d21c0b59_Struct &_Src) const {
		return 
			this->_field_sema == _Src._field_sema &&
			this->_field_depends == _Src._field_depends &&
			this->_field_uses == _Src._field_uses &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_fields == _Src._field_fields &&
			this->_field_methods == _Src._field_methods &&
			this->_field_statics == _Src._field_statics &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc == _Src._field_doc &&
			this->_field_generics == _Src._field_generics &&
			this->_field_implements == _Src._field_implements &&
			this->_field_instances == _Src._field_instances;
	}

	inline bool operator!=(const _1d21c0b59_Struct &_Src) const { return !this->operator==(_Src); }
};


struct _1d1e5192e_FnCallExpr {
	jule::Ref<_1d1e5192e_FnCallExpr> self{};

	_1d1da4277_Token _field_token{_1d1da4277_Token()};
	jule::Ref<_1d1e5192e_Expr> _field_expr{jule::Ref<_1d1e5192e_Expr>()};
	jule::Slice<jule::Ref<_1d1e5192e_TypeDecl>> _field_generics{jule::Slice<jule::Ref<_1d1e5192e_TypeDecl>>()};
	jule::Slice<jule::Ref<_1d1e5192e_Expr>> _field_args{jule::Slice<jule::Ref<_1d1e5192e_Expr>>()};
	jule::Bool _field_concurrent{jule::Bool()};


	_1d1e5192e_FnCallExpr(_1d1da4277_Token __param_token, jule::Ref<_1d1e5192e_Expr> __param_expr, jule::Slice<jule::Ref<_1d1e5192e_TypeDecl>> __param_generics, jule::Slice<jule::Ref<_1d1e5192e_Expr>> __param_args, jule::Bool __param_concurrent) {
		this->self = jule::Ref<_1d1e5192e_FnCallExpr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_expr = __param_expr;
		this->_field_generics = __param_generics;
		this->_field_args = __param_args;
		this->_field_concurrent = __param_concurrent;
	}

	~_1d1e5192e_FnCallExpr(void) { this->self.ref = nullptr; }

	_1d1e5192e_FnCallExpr(void) { this->self = jule::Ref<_1d1e5192e_FnCallExpr>::make(this, nullptr); }

	inline bool operator==(const _1d1e5192e_FnCallExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_generics == _Src._field_generics &&
			this->_field_args == _Src._field_args &&
			this->_field_concurrent == _Src._field_concurrent;
	}

	inline bool operator!=(const _1d1e5192e_FnCallExpr &_Src) const { return !this->operator==(_Src); }
};


struct _1d21d97ee_Param {
	jule::Ref<_1d21d97ee_Param> self{};

	_1d1da4277_Token _field_token{_1d1da4277_Token()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Bool _field_variadic{jule::Bool()};
	jule::Bool _field_reference{jule::Bool()};
	jule::Ref<_1b951b088_TypeSymbol> _field_kind{jule::Ref<_1b951b088_TypeSymbol>()};
	jule::Str _field_ident{jule::Str()};


	_1d21d97ee_Param(_1d1da4277_Token __param_token, jule::Bool __param_mutable, jule::Bool __param_variadic, jule::Bool __param_reference, jule::Ref<_1b951b088_TypeSymbol> __param_kind, jule::Str __param_ident) {
		this->self = jule::Ref<_1d21d97ee_Param>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_mutable = __param_mutable;
		this->_field_variadic = __param_variadic;
		this->_field_reference = __param_reference;
		this->_field_kind = __param_kind;
		this->_field_ident = __param_ident;
	}

	~_1d21d97ee_Param(void) { this->self.ref = nullptr; }

	_1d21d97ee_Param(void) { this->self = jule::Ref<_1d21d97ee_Param>::make(this, nullptr); }

	inline jule::Ref<_1d21d97ee_ParamIns> _method_instance(void);


	inline jule::Bool _method_is_self(void);


	inline jule::Bool _method_is_ref(void);


	inline bool operator==(const _1d21d97ee_Param &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_variadic == _Src._field_variadic &&
			this->_field_reference == _Src._field_reference &&
			this->_field_kind == _Src._field_kind &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1d21d97ee_Param &_Src) const { return !this->operator==(_Src); }
};


struct _1d21d97ee_Fn {
	jule::Ref<_1d21d97ee_Fn> self{};

	jule::Ref<_1b912748b_Sema> _field_sema{jule::Ref<_1b912748b_Sema>()};
	_1d1da4277_Token _field_token{_1d1da4277_Token()};
	jule::Bool _field_global{jule::Bool()};
	jule::Bool _field_unsafety{jule::Bool()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_statically{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Slice<jule::Ref<_1d1e5192e_Directive>> _field_directives{jule::Slice<jule::Ref<_1d1e5192e_Directive>>()};
	jule::Str _field_doc{jule::Str()};
	jule::Ref<_1d1e5192e_ScopeTree> _field_scope{jule::Ref<_1d1e5192e_ScopeTree>()};
	jule::Slice<jule::Ref<_1d1e5192e_GenericDecl>> _field_generics{jule::Slice<jule::Ref<_1d1e5192e_GenericDecl>>()};
	jule::Ref<_1d21d97ee_RetType> _field_result{jule::Ref<_1d21d97ee_RetType>()};
	jule::Slice<jule::Ref<_1d21d97ee_Param>> _field_params{jule::Slice<jule::Ref<_1d21d97ee_Param>>()};
	jule::Ref<_1d21c0b59_Struct> _field_owner{jule::Ref<_1d21c0b59_Struct>()};
	jule::Slice<jule::Ref<_1d21d97ee_FnIns>> _field_instances{jule::Slice<jule::Ref<_1d21d97ee_FnIns>>()};


	_1d21d97ee_Fn(jule::Ref<_1b912748b_Sema> __param_sema, _1d1da4277_Token __param_token, jule::Bool __param_global, jule::Bool __param_unsafety, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Bool __param_statically, jule::Str __param_ident, jule::Slice<jule::Ref<_1d1e5192e_Directive>> __param_directives, jule::Str __param_doc, jule::Ref<_1d1e5192e_ScopeTree> __param_scope, jule::Slice<jule::Ref<_1d1e5192e_GenericDecl>> __param_generics, jule::Ref<_1d21d97ee_RetType> __param_result, jule::Slice<jule::Ref<_1d21d97ee_Param>> __param_params, jule::Ref<_1d21c0b59_Struct> __param_owner, jule::Slice<jule::Ref<_1d21d97ee_FnIns>> __param_instances) {
		this->self = jule::Ref<_1d21d97ee_Fn>::make(this, nullptr);

		this->_field_sema = __param_sema;
		this->_field_token = __param_token;
		this->_field_global = __param_global;
		this->_field_unsafety = __param_unsafety;
		this->_field_public = __param_public;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_statically = __param_statically;
		this->_field_ident = __param_ident;
		this->_field_directives = __param_directives;
		this->_field_doc = __param_doc;
		this->_field_scope = __param_scope;
		this->_field_generics = __param_generics;
		this->_field_result = __param_result;
		this->_field_params = __param_params;
		this->_field_owner = __param_owner;
		this->_field_instances = __param_instances;
	}

	~_1d21d97ee_Fn(void) { this->self.ref = nullptr; }

	_1d21d97ee_Fn(void) { this->self = jule::Ref<_1d21d97ee_Fn>::make(this, nullptr); }

	inline jule::Bool _method_is_void(void);


	inline jule::Bool _method_is_method(void);


	inline jule::Bool _method_is_entry_point(void);


	inline jule::Bool _method_is_init(void);


	inline jule::Bool _method_is_anon(void);


	inline jule::Bool _method_any_var(void);


	inline jule::Bool _method_parameters_uses_generics(void);


	inline jule::Bool _method_result_uses_generics(void);


	inline jule::Ref<_1d21d97ee_FnIns> _method_instance_force(void);


	inline jule::Ref<_1d21d97ee_FnIns> _method_instance(void);


	inline std::tuple<jule::Bool,jule::Int> _method_append_instance(jule::Ref<_1d21d97ee_FnIns>&);


	inline bool operator==(const _1d21d97ee_Fn &_Src) const {
		return 
			this->_field_sema == _Src._field_sema &&
			this->_field_token == _Src._field_token &&
			this->_field_global == _Src._field_global &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_statically == _Src._field_statically &&
			this->_field_ident == _Src._field_ident &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc == _Src._field_doc &&
			this->_field_scope == _Src._field_scope &&
			this->_field_generics == _Src._field_generics &&
			this->_field_result == _Src._field_result &&
			this->_field_params == _Src._field_params &&
			this->_field_owner == _Src._field_owner &&
			this->_field_instances == _Src._field_instances;
	}

	inline bool operator!=(const _1d21d97ee_Fn &_Src) const { return !this->operator==(_Src); }
};


struct _1d1e5192e_Node {
	jule::Ref<_1d1e5192e_Node> self{};

	_1d1da4277_Token _field_token{_1d1da4277_Token()};
	jule::Any _field_data{jule::Any()};


	_1d1e5192e_Node(_1d1da4277_Token __param_token, jule::Any __param_data) {
		this->self = jule::Ref<_1d1e5192e_Node>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_data = __param_data;
	}

	~_1d1e5192e_Node(void) { this->self.ref = nullptr; }

	_1d1e5192e_Node(void) { this->self = jule::Ref<_1d1e5192e_Node>::make(this, nullptr); }

	inline jule::Bool _method_is_decl(void);


	inline jule::Bool _method_is_comment(void);


	inline jule::Bool _method_is_impl(void);


	inline jule::Bool _method_is_use_decl(void);


	inline bool operator==(const _1d1e5192e_Node &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_data == _Src._field_data;
	}

	inline bool operator!=(const _1d1e5192e_Node &_Src) const { return !this->operator==(_Src); }
};


struct _1b8b10cbb_Pass {
	jule::Ref<_1b8b10cbb_Pass> self{};

	_1d1da4277_Token _field_token{_1d1da4277_Token()};
	jule::Str _field_text{jule::Str()};


	_1b8b10cbb_Pass(_1d1da4277_Token __param_token, jule::Str __param_text) {
		this->self = jule::Ref<_1b8b10cbb_Pass>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_text = __param_text;
	}

	~_1b8b10cbb_Pass(void) { this->self.ref = nullptr; }

	_1b8b10cbb_Pass(void) { this->self = jule::Ref<_1b8b10cbb_Pass>::make(this, nullptr); }

	inline bool operator==(const _1b8b10cbb_Pass &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_text == _Src._field_text;
	}

	inline bool operator!=(const _1b8b10cbb_Pass &_Src) const { return !this->operator==(_Src); }
};


struct _1b8cd2894_Trait: public _1b951b088_Kind {
	jule::Ref<_1b8cd2894_Trait> self{};

	_1d1da4277_Token _field_token{_1d1da4277_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Str _field_doc{jule::Str()};
	jule::Slice<jule::Ref<_1d21d97ee_Fn>> _field_methods{jule::Slice<jule::Ref<_1d21d97ee_Fn>>()};
	jule::Slice<jule::Ref<_1d21c0b59_Struct>> _field_implemented{jule::Slice<jule::Ref<_1d21c0b59_Struct>>()};


	_1b8cd2894_Trait(_1d1da4277_Token __param_token, jule::Str __param_ident, jule::Bool __param_public, jule::Bool __param_mutable, jule::Str __param_doc, jule::Slice<jule::Ref<_1d21d97ee_Fn>> __param_methods, jule::Slice<jule::Ref<_1d21c0b59_Struct>> __param_implemented) {
		this->self = jule::Ref<_1b8cd2894_Trait>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_public = __param_public;
		this->_field_mutable = __param_mutable;
		this->_field_doc = __param_doc;
		this->_field_methods = __param_methods;
		this->_field_implemented = __param_implemented;
	}

	~_1b8cd2894_Trait(void) { this->self.ref = nullptr; }

	_1b8cd2894_Trait(void) { this->self = jule::Ref<_1b8cd2894_Trait>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1b951b088_TypeKind>);


	inline jule::Bool _method_is_builtin(void);


	inline jule::Ref<_1d21d97ee_Fn> _method_find_method(jule::Str);


	inline bool operator==(const _1b8cd2894_Trait &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_public == _Src._field_public &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_doc == _Src._field_doc &&
			this->_field_methods == _Src._field_methods &&
			this->_field_implemented == _Src._field_implemented;
	}

	inline bool operator!=(const _1b8cd2894_Trait &_Src) const { return !this->operator==(_Src); }
};


struct _1b8dae520_EnumItem {
	jule::Ref<_1b8dae520_EnumItem> self{};

	_1d1da4277_Token _field_token{_1d1da4277_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_1b9523799_Value> _field_value{jule::Ref<_1b9523799_Value>()};


	_1b8dae520_EnumItem(_1d1da4277_Token __param_token, jule::Str __param_ident, jule::Ref<_1b9523799_Value> __param_value) {
		this->self = jule::Ref<_1b8dae520_EnumItem>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_value = __param_value;
	}

	~_1b8dae520_EnumItem(void) { this->self.ref = nullptr; }

	_1b8dae520_EnumItem(void) { this->self = jule::Ref<_1b8dae520_EnumItem>::make(this, nullptr); }

	inline jule::Bool _method_auto_expr(void);


	inline bool operator==(const _1b8dae520_EnumItem &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_value == _Src._field_value;
	}

	inline bool operator!=(const _1b8dae520_EnumItem &_Src) const { return !this->operator==(_Src); }
};


struct _1b8dae520_Enum: public _1b951b088_Kind {
	jule::Ref<_1b8dae520_Enum> self{};

	_1d1da4277_Token _field_token{_1d1da4277_Token()};
	jule::Bool _field_public{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_1b951b088_TypeSymbol> _field_kind{jule::Ref<_1b951b088_TypeSymbol>()};
	jule::Slice<jule::Ref<_1b8dae520_EnumItem>> _field_items{jule::Slice<jule::Ref<_1b8dae520_EnumItem>>()};
	jule::Str _field_doc{jule::Str()};


	_1b8dae520_Enum(_1d1da4277_Token __param_token, jule::Bool __param_public, jule::Str __param_ident, jule::Ref<_1b951b088_TypeSymbol> __param_kind, jule::Slice<jule::Ref<_1b8dae520_EnumItem>> __param_items, jule::Str __param_doc) {
		this->self = jule::Ref<_1b8dae520_Enum>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_public = __param_public;
		this->_field_ident = __param_ident;
		this->_field_kind = __param_kind;
		this->_field_items = __param_items;
		this->_field_doc = __param_doc;
	}

	~_1b8dae520_Enum(void) { this->self.ref = nullptr; }

	_1b8dae520_Enum(void) { this->self = jule::Ref<_1b8dae520_Enum>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1b951b088_TypeKind>);


	inline jule::Ref<_1b8dae520_EnumItem> _method_find_item(jule::Str);


	inline bool operator==(const _1b8dae520_Enum &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_public == _Src._field_public &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind &&
			this->_field_items == _Src._field_items &&
			this->_field_doc == _Src._field_doc;
	}

	inline bool operator!=(const _1b8dae520_Enum &_Src) const { return !this->operator==(_Src); }
};


struct _1b8e0c01d_ImportInfo: public _1b9a5b012_Lookup {
	jule::Ref<_1b8e0c01d_ImportInfo> self{};

	_1d1da4277_Token _field_token{_1d1da4277_Token()};
	jule::Str _field_path{jule::Str()};
	jule::Str _field_link_path{jule::Str()};
	jule::Str _field_ident{jule::Str()};
	jule::Str _field_alias{jule::Str()};
	jule::Bool _field_duplicate{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_std{jule::Bool()};
	jule::Bool _field_import_all{jule::Bool()};
	jule::Slice<_1d1da4277_Token> _field_selected{jule::Slice<_1d1da4277_Token>()};
	jule::Ref<_1b8e0c01d_Package> _field_package{jule::Ref<_1b8e0c01d_Package>()};


	_1b8e0c01d_ImportInfo(_1d1da4277_Token __param_token, jule::Str __param_path, jule::Str __param_link_path, jule::Str __param_ident, jule::Str __param_alias, jule::Bool __param_duplicate, jule::Bool __param_cpp_linked, jule::Bool __param_std, jule::Bool __param_import_all, jule::Slice<_1d1da4277_Token> __param_selected, jule::Ref<_1b8e0c01d_Package> __param_package) {
		this->self = jule::Ref<_1b8e0c01d_ImportInfo>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_path = __param_path;
		this->_field_link_path = __param_link_path;
		this->_field_ident = __param_ident;
		this->_field_alias = __param_alias;
		this->_field_duplicate = __param_duplicate;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_std = __param_std;
		this->_field_import_all = __param_import_all;
		this->_field_selected = __param_selected;
		this->_field_package = __param_package;
	}

	~_1b8e0c01d_ImportInfo(void) { this->self.ref = nullptr; }

	_1b8e0c01d_ImportInfo(void) { this->self = jule::Ref<_1b8e0c01d_ImportInfo>::make(this, nullptr); }

	inline jule::Ref<_1b8e0c01d_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ref<_1b8e0c01d_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ref<_1b8e0c01d_ImportInfo>)>);


	inline jule::Ref<_1b919cb2c_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ref<_1b951b088_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ref<_1d21c0b59_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ref<_1d21d97ee_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ref<_1b8cd2894_Trait> _method_find_trait(jule::Str);


	inline jule::Ref<_1b8dae520_Enum> _method_find_enum(jule::Str);


	inline jule::Bool _method_is_lookupable(jule::Str);


	inline jule::Bool _method_exist_ident(jule::Str);


	inline bool operator==(const _1b8e0c01d_ImportInfo &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_path == _Src._field_path &&
			this->_field_link_path == _Src._field_link_path &&
			this->_field_ident == _Src._field_ident &&
			this->_field_alias == _Src._field_alias &&
			this->_field_duplicate == _Src._field_duplicate &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_std == _Src._field_std &&
			this->_field_import_all == _Src._field_import_all &&
			this->_field_selected == _Src._field_selected &&
			this->_field_package == _Src._field_package;
	}

	inline bool operator!=(const _1b8e0c01d_ImportInfo &_Src) const { return !this->operator==(_Src); }
};


struct _1b8dacd8c_Impl {
	jule::Ref<_1b8dacd8c_Impl> self{};

	_1d1da4277_Token _field_base{_1d1da4277_Token()};
	_1d1da4277_Token _field_dest{_1d1da4277_Token()};
	jule::Slice<jule::Ref<_1d21d97ee_Fn>> _field_methods{jule::Slice<jule::Ref<_1d21d97ee_Fn>>()};
	jule::Slice<jule::Ref<_1b919cb2c_Var>> _field_statics{jule::Slice<jule::Ref<_1b919cb2c_Var>>()};


	_1b8dacd8c_Impl(_1d1da4277_Token __param_base, _1d1da4277_Token __param_dest, jule::Slice<jule::Ref<_1d21d97ee_Fn>> __param_methods, jule::Slice<jule::Ref<_1b919cb2c_Var>> __param_statics) {
		this->self = jule::Ref<_1b8dacd8c_Impl>::make(this, nullptr);

		this->_field_base = __param_base;
		this->_field_dest = __param_dest;
		this->_field_methods = __param_methods;
		this->_field_statics = __param_statics;
	}

	~_1b8dacd8c_Impl(void) { this->self.ref = nullptr; }

	_1b8dacd8c_Impl(void) { this->self = jule::Ref<_1b8dacd8c_Impl>::make(this, nullptr); }

	inline jule::Bool _method_is_trait_impl(void);


	inline jule::Bool _method_is_struct_impl(void);


	inline bool operator==(const _1b8dacd8c_Impl &_Src) const {
		return 
			this->_field_base == _Src._field_base &&
			this->_field_dest == _Src._field_dest &&
			this->_field_methods == _Src._field_methods &&
			this->_field_statics == _Src._field_statics;
	}

	inline bool operator!=(const _1b8dacd8c_Impl &_Src) const { return !this->operator==(_Src); }
};


struct _1b919cb2c_Var {
	jule::Ref<_1b919cb2c_Var> self{};

	jule::Ref<_1b8cd2c4b_Scope> _field_scope{jule::Ref<_1b8cd2c4b_Scope>()};
	_1d1da4277_Token _field_token{_1d1da4277_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_constant{jule::Bool()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_used{jule::Bool()};
	jule::Bool _field_statically{jule::Bool()};
	jule::Bool _field_reference{jule::Bool()};
	jule::Str _field_doc{jule::Str()};
	jule::Ref<_1b951b088_TypeSymbol> _field_kind{jule::Ref<_1b951b088_TypeSymbol>()};
	jule::Ref<_1b9523799_Value> _field_value{jule::Ref<_1b9523799_Value>()};
	jule::Ref<_1b8b10cbb_ReferenceStack> _field_references{jule::Ref<_1b8b10cbb_ReferenceStack>()};
	jule::Slice<jule::Ref<_1d1e5192e_Directive>> _field_directives{jule::Slice<jule::Ref<_1d1e5192e_Directive>>()};
	jule::Slice<jule::Ref<_1b919cb2c_Var>> _field_depends{jule::Slice<jule::Ref<_1b919cb2c_Var>>()};


	_1b919cb2c_Var(jule::Ref<_1b8cd2c4b_Scope> __param_scope, _1d1da4277_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked, jule::Bool __param_constant, jule::Bool __param_mutable, jule::Bool __param_public, jule::Bool __param_used, jule::Bool __param_statically, jule::Bool __param_reference, jule::Str __param_doc, jule::Ref<_1b951b088_TypeSymbol> __param_kind, jule::Ref<_1b9523799_Value> __param_value, jule::Ref<_1b8b10cbb_ReferenceStack> __param_references, jule::Slice<jule::Ref<_1d1e5192e_Directive>> __param_directives, jule::Slice<jule::Ref<_1b919cb2c_Var>> __param_depends) {
		this->self = jule::Ref<_1b919cb2c_Var>::make(this, nullptr);

		this->_field_scope = __param_scope;
		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_constant = __param_constant;
		this->_field_mutable = __param_mutable;
		this->_field_public = __param_public;
		this->_field_used = __param_used;
		this->_field_statically = __param_statically;
		this->_field_reference = __param_reference;
		this->_field_doc = __param_doc;
		this->_field_kind = __param_kind;
		this->_field_value = __param_value;
		this->_field_references = __param_references;
		this->_field_directives = __param_directives;
		this->_field_depends = __param_depends;
	}

	~_1b919cb2c_Var(void) { this->self.ref = nullptr; }

	_1b919cb2c_Var(void) { this->self = jule::Ref<_1b919cb2c_Var>::make(this, nullptr); }

	inline jule::Bool _method_is_initialized(void);


	inline jule::Bool _method_is_type_inferred(void);


	inline bool operator==(const _1b919cb2c_Var &_Src) const {
		return 
			this->_field_scope == _Src._field_scope &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_constant == _Src._field_constant &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_public == _Src._field_public &&
			this->_field_used == _Src._field_used &&
			this->_field_statically == _Src._field_statically &&
			this->_field_reference == _Src._field_reference &&
			this->_field_doc == _Src._field_doc &&
			this->_field_kind == _Src._field_kind &&
			this->_field_value == _Src._field_value &&
			this->_field_references == _Src._field_references &&
			this->_field_directives == _Src._field_directives &&
			this->_field_depends == _Src._field_depends;
	}

	inline bool operator!=(const _1b919cb2c_Var &_Src) const { return !this->operator==(_Src); }
};


struct _1b9176ba0_TypeCompatibilityChecker {
	jule::Ref<_1b9176ba0_TypeCompatibilityChecker> self{};

	jule::Ref<_1b912748b_Sema> _field_s{jule::Ref<_1b912748b_Sema>()};
	jule::Ref<_1b951b088_TypeKind> _field_dest{jule::Ref<_1b951b088_TypeKind>()};
	jule::Ref<_1b951b088_TypeKind> _field_src{jule::Ref<_1b951b088_TypeKind>()};
	_1d1da4277_Token _field_error_token{_1d1da4277_Token()};
	jule::Bool _field_ignore_any{jule::Bool()};
	jule::Bool _field_deref{jule::Bool()};
	jule::Bool _field_sub_check{jule::Bool()};


	_1b9176ba0_TypeCompatibilityChecker(jule::Ref<_1b912748b_Sema> __param_s, jule::Ref<_1b951b088_TypeKind> __param_dest, jule::Ref<_1b951b088_TypeKind> __param_src, _1d1da4277_Token __param_error_token, jule::Bool __param_ignore_any, jule::Bool __param_deref, jule::Bool __param_sub_check) {
		this->self = jule::Ref<_1b9176ba0_TypeCompatibilityChecker>::make(this, nullptr);

		this->_field_s = __param_s;
		this->_field_dest = __param_dest;
		this->_field_src = __param_src;
		this->_field_error_token = __param_error_token;
		this->_field_ignore_any = __param_ignore_any;
		this->_field_deref = __param_deref;
		this->_field_sub_check = __param_sub_check;
	}

	~_1b9176ba0_TypeCompatibilityChecker(void) { this->self.ref = nullptr; }

	_1b9176ba0_TypeCompatibilityChecker(void) { this->self = jule::Ref<_1b9176ba0_TypeCompatibilityChecker>::make(this, nullptr); }

	inline void _method_push_err(jule::Str,jule::Slice<jule::Any>);


	inline jule::Bool _method_check_trait(void);


	inline jule::Bool _method_check_ref(void);


	inline jule::Bool _method_check_ptr(void);


	inline jule::Bool _method_check_slc(void);


	inline jule::Bool _method_check_arr(void);


	inline jule::Bool _method_check_map(void);


	inline jule::Bool _method_check_struct(void);


	inline jule::Bool _method_check_fn(void);


	inline jule::Bool _method_check_enum(void);


	inline jule::Bool _method_check_prim(void);


	inline jule::Bool _method_check_cpp_linked(void);


	inline jule::Bool _method_check(void);


	inline bool operator==(const _1b9176ba0_TypeCompatibilityChecker &_Src) const {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_dest == _Src._field_dest &&
			this->_field_src == _Src._field_src &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_ignore_any == _Src._field_ignore_any &&
			this->_field_deref == _Src._field_deref &&
			this->_field_sub_check == _Src._field_sub_check;
	}

	inline bool operator!=(const _1b9176ba0_TypeCompatibilityChecker &_Src) const { return !this->operator==(_Src); }
};


inline jule::Bool _1d13e19b3_is_surrogate(jule::I32);
inline jule::I32 _1d13e19b3_decode_rune(jule::I32,jule::I32);
inline std::tuple<jule::I32,jule::I32> _1d13e19b3_encode_rune(jule::I32);
inline jule::Slice<jule::U16> _1d13e19b3_encode(jule::Slice<jule::I32>);
inline jule::Slice<jule::I32> _1d13e19b3_decode(jule::Slice<jule::U16>);
inline jule::Slice<jule::U16> _1d13e19b3_append_rune(jule::Slice<jule::U16>,jule::I32);
inline void* _1d078495b_malloc(jule::Uint);
inline void* _1d078495b_calloc(jule::Uint,jule::Uint);
inline void* _1d078495b_realloc(void*,jule::Uint);
inline void _1d078495b_free(void*);
inline jule::Str _1d07849e4_type_id(jule::Any);
inline jule::Slice<jule::U16> _1d07854c8_utf16_from_str(jule::Str);
inline jule::Str _1d07854c8_utf16_to_str(jule::Slice<jule::U16>);
inline jule::Str _1d07854c8_u16_ptr_to_str(jule::U16*);
inline jule::Str _1d07854c8_byte_ptr_to_str(jule::U8*);
inline jule::Int _1d13c2598_puts(jule::Str);
inline jule::Int _1d0707505_get_last_errno(void);
inline jule::Int _1d071ec7b_stat(jule::U8*,struct stat*);
inline jule::Int _1d071ec7b_open(jule::U8*,jule::Int,jule::Int);
inline jule::U8* _1d071ec7b_getcwd(jule::U8*,jule::Uint);
inline DIR* _1d071ec7b_opendir(jule::U8*);
inline struct dirent* _1d071ec7b_readdir(DIR*);
inline jule::Int _1d071ec7b_closedir(DIR*);
inline jule::Int _1d071ec7b_chdir(jule::U8*);
inline jule::Int _1d071ec7b_remove(jule::U8*);
inline jule::Int _1d071ec7b_mkdir(jule::U8*,jule::Int);
inline jule::Int _1d071ec7b_rmdir(jule::U8*);
inline jule::Int _1d071ec7b_unlink(jule::U8*);
inline jule::I64 _1d073d085_seek(jule::Int,jule::I64,jule::Int);
inline jule::Int _1d073d085_read(jule::Int,void*,jule::Uint);
inline jule::Int _1d073d085_close(jule::Int);
inline jule::Int _1d073d085_write(jule::Int,void*,jule::Uint);
inline void _1d073d085_exit(jule::Int);
inline jule::Int _1d0701521_get_last_os_error(void);
inline std::tuple<jule::Str,jule::Int> _1d070a5e6_working_dir(void);
inline jule::Int _1d070a5e6_set_working_dir(jule::Str);
inline void _1d070a5e6_init(void);
inline std::tuple<jule::Str,jule::Int> _1d0702225___getwd(void);
inline jule::Int _1d0702225___chdir(jule::Str);
inline jule::Str _1d0680a33_clean(jule::Str);
inline jule::Str _1d0680a33_to_slash(jule::Str);
inline jule::Str _1d0680a33_from_slash(jule::Str);
inline jule::Str _1d0680a33_join(jule::Slice<jule::Str>);
inline jule::Str _1d0680a33_ext(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _1d0680a33_abs(jule::Str);
inline jule::Str _1d0680a33_base(jule::Str);
inline jule::Str _1d0680a33_dir(jule::Str);
inline jule::Str _1d0680a33_volume_name(jule::Str);
inline jule::Bool _1d0699e7b_is_path_sep(jule::U8);
inline jule::Bool _1d0699e7b_is_abs(jule::Str);
inline jule::Int _1d0699e7b_volume_name_len(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _1d0699e7b___abs(jule::Str);
inline jule::Str _1d0699e7b_str_join(jule::Slice<jule::Str>,jule::Str);
inline jule::Str _1d0699e7b___join(jule::Slice<jule::Str>);
inline void _1d06d0d80_exit(jule::Int);
inline jule::Str _1d06d0d80_executable(void);
inline jule::Bool _1d05571bd_is_std_header_path(jule::Str);
inline jule::Bool _1d05571bd_is_valid_header_ext(jule::Str);
inline jule::Bool _1d05571bd_is_valid_cpp_ext(jule::Str);
inline jule::Str _1d0557e9e_logf(jule::Str,jule::Slice<jule::Any>);
inline jule::Str _1d0557e9e_arg_to_str(jule::Any);
inline jule::Int _1d0557e9e_find_next_fmt(jule::Str);
inline jule::Str _1d0557e9e_apply_fmt(jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _1d05c05aa_is_top_directive(jule::Str);
inline jule::Bool _1d0626eb3_is_windows(jule::Str);
inline jule::Bool _1d0626eb3_is_darwin(jule::Str);
inline jule::Bool _1d0626eb3_is_linux(jule::Str);
inline jule::Bool _1d0626eb3_is_i386(jule::Str);
inline jule::Bool _1d0626eb3_is_amd64(jule::Str);
inline jule::Bool _1d0626eb3_is_arm64(jule::Str);
inline jule::Bool _1d0626eb3_is_unix(jule::Str);
inline jule::Bool _1d0626eb3_is_32bit(jule::Str);
inline jule::Bool _1d0626eb3_is_64bit(jule::Str);
inline void _1d062ea48_exit_err(jule::Str);
inline void _1d062ea48_init(void);
inline jule::Bool _1d062ec13_is_jule(jule::Str);
inline jule::Int _1d2038890_leading_zeros(jule::Uint);
inline jule::Int _1d2038890_leading_zeros8(jule::U8);
inline jule::Int _1d2038890_leading_zeros16(jule::U16);
inline jule::Int _1d2038890_leading_zeros32(jule::U32);
inline jule::Int _1d2038890_leading_zeros64(jule::U64);
inline jule::Int _1d2038890_trailing_zeros(jule::Uint);
inline jule::Int _1d2038890_trailing_zeros8(jule::U8);
inline jule::Int _1d2038890_trailing_zeros16(jule::U16);
inline jule::Int _1d2038890_trailing_zeros32(jule::U32);
inline jule::Int _1d2038890_trailing_zeros64(jule::U64);
inline jule::Int _1d2038890_ones_count(jule::Uint);
inline jule::Int _1d2038890_ones_count8(jule::U8);
inline jule::Int _1d2038890_ones_count16(jule::U16);
inline jule::Int _1d2038890_ones_count32(jule::U32);
inline jule::Int _1d2038890_ones_count64(jule::U64);
inline jule::Uint _1d2038890_rotate_left(jule::Uint,jule::Int);
inline jule::U8 _1d2038890_rotate_left8(jule::U8,jule::Int);
inline jule::U16 _1d2038890_rotate_left16(jule::U16,jule::Int);
inline jule::U32 _1d2038890_rotate_left32(jule::U32,jule::Int);
inline jule::U64 _1d2038890_rotate_left64(jule::U64,jule::Int);
inline jule::Uint _1d2038890_reverse(jule::Uint);
inline jule::U8 _1d2038890_reverse8(jule::U8);
inline jule::U16 _1d2038890_reverse16(jule::U16);
inline jule::U32 _1d2038890_reverse32(jule::U32);
inline jule::U64 _1d2038890_reverse64(jule::U64);
inline jule::Uint _1d2038890_reverse_bytes(jule::Uint);
inline jule::U16 _1d2038890_reverse_bytes16(jule::U16);
inline jule::U32 _1d2038890_reverse_bytes32(jule::U32);
inline jule::U64 _1d2038890_reverse_bytes64(jule::U64);
inline jule::Int _1d2038890_len(jule::Uint);
inline jule::Int _1d2038890_len8(jule::U8);
inline jule::Int _1d2038890_len16(jule::U16);
inline jule::Int _1d2038890_len32(jule::U32);
inline jule::Int _1d2038890_len64(jule::U64);
inline std::tuple<jule::Uint,jule::Uint> _1d2038890_add(jule::Uint,jule::Uint,jule::Uint);
inline std::tuple<jule::U32,jule::U32> _1d2038890_add32(jule::U32,jule::U32,jule::U32);
inline std::tuple<jule::U64,jule::U64> _1d2038890_add64(jule::U64,jule::U64,jule::U64);
inline std::tuple<jule::Uint,jule::Uint> _1d2038890_sub(jule::Uint,jule::Uint,jule::Uint);
inline std::tuple<jule::U32,jule::U32> _1d2038890_sub32(jule::U32,jule::U32,jule::U32);
inline std::tuple<jule::U64,jule::U64> _1d2038890_sub64(jule::U64,jule::U64,jule::U64);
inline std::tuple<jule::Uint,jule::Uint> _1d2038890_mul(jule::Uint,jule::Uint);
inline std::tuple<jule::U32,jule::U32> _1d2038890_mul32(jule::U32,jule::U32);
inline std::tuple<jule::U64,jule::U64> _1d2038890_mul64(jule::U64,jule::U64);
inline std::tuple<jule::Uint,jule::Uint> _1d2038890_div(jule::Uint,jule::Uint,jule::Uint);
inline std::tuple<jule::U32,jule::U32> _1d2038890_div32(jule::U32,jule::U32,jule::U32);
inline std::tuple<jule::U64,jule::U64> _1d2038890_div64(jule::U64,jule::U64,jule::U64);
inline jule::Uint _1d2038890_rem(jule::Uint,jule::Uint,jule::Uint);
inline jule::U32 _1d2038890_rem32(jule::U32,jule::U32,jule::U32);
inline jule::U64 _1d2038890_rem64(jule::U64,jule::U64,jule::U64);
inline jule::F64 _1d17cc013_atanh(jule::F64);
inline jule::U32 _1d17de7ea_f32_bits(jule::F32);
inline jule::F32 _1d17de7ea_f32_from_bits(jule::U32);
inline jule::U64 _1d17de7ea_f64_bits(jule::F64);
inline jule::F64 _1d17de7ea_f64_from_bits(jule::U64);
inline jule::F64 _1d180b88e_cos(jule::F64);
inline jule::F64 _1d180b88e_sin(jule::F64);
inline jule::F64 _1d17d5ed9_tan(jule::F64);
inline jule::F64 _1d184a504_mod(jule::F64,jule::F64);
inline std::tuple<jule::F64,jule::Int> _1d184849c_frexp(jule::F64);
inline jule::F32 _1d180e353_nextafter32(jule::F32,jule::F32);
inline jule::F64 _1d180e353_nextafter(jule::F64,jule::F64);
inline jule::F64 _1d180ed26_copysign(jule::F64,jule::F64);
inline std::tuple<jule::U64,jule::F64> _1d188230a_trig_reduce(jule::F64);
inline jule::F64 _1d186ddeb_atan2(jule::F64,jule::F64);
inline jule::F64 _1d186e803_floor(jule::F64);
inline jule::F64 _1d186e803_ceil(jule::F64);
inline jule::F64 _1d186e803_trunc(jule::F64);
inline jule::F64 _1d186e803_round(jule::F64);
inline jule::F64 _1d186e803_round_even(jule::F64);
inline jule::F64 _1d186ec98_nan(void);
inline jule::Bool _1d186ec98_is_nan(jule::F64);
inline jule::F64 _1d186ec98_inf(jule::Int);
inline jule::Bool _1d186ec98_is_inf(jule::F64,jule::Int);
inline std::tuple<jule::F64,jule::Int> _1d186ec98_normalize(jule::F64);
inline std::tuple<jule::F64,jule::F64> _1d191d583_sincos(jule::F64);
inline jule::F64 _1d18e0ee5_dim(jule::F64,jule::F64);
inline jule::F64 _1d18e0ee5_max(jule::F64,jule::F64);
inline jule::F64 _1d18e0ee5_min(jule::F64,jule::F64);
inline jule::F64 _1d1911125_log(jule::F64);
inline jule::F64 _1d198bc83_expm1(jule::F64);
inline jule::F64 _1d19740ab_abs(jule::F64);
inline jule::F64 _1d199d15c_j1(jule::F64);
inline jule::F64 _1d199d15c_y1(jule::F64);
inline jule::F64 _1d199d15c_pone(jule::F64);
inline jule::F64 _1d199d15c_qone(jule::F64);
inline jule::U64 _1d1a6e34e_zero(jule::U64);
inline jule::U64 _1d1a6e34e_nonzero(jule::U64);
inline std::tuple<jule::U64,jule::U64> _1d1a6e34e_shl(jule::U64,jule::U64,jule::Uint);
inline std::tuple<jule::U64,jule::U64> _1d1a6e34e_shr(jule::U64,jule::U64,jule::Uint);
inline std::tuple<jule::U64,jule::U64> _1d1a6e34e_shrcompress(jule::U64,jule::U64,jule::Uint);
inline jule::I32 _1d1a6e34e_lz(jule::U64,jule::U64);
inline std::tuple<jule::U32,jule::I32,jule::U64> _1d1a6e34e_split(jule::U64);
inline jule::F64 _1d1a6e34e_fma(jule::F64,jule::F64,jule::F64);
inline std::tuple<jule::F64,jule::F64> _1d19edad6_modf(jule::F64);
inline jule::F64 _1d1969975_log10(jule::F64);
inline jule::F64 _1d1969975_log2(jule::F64);
inline jule::F64 _1d1a8acb6_hypot(jule::F64,jule::F64);
inline jule::F64 _1d1acb9a5_j0(jule::F64);
inline jule::F64 _1d1acb9a5_y0(jule::F64);
inline jule::F64 _1d1acb9a5_pzero(jule::F64);
inline jule::F64 _1d1acb9a5_qzero(jule::F64);
inline jule::F64 _1d1b65511_ldexp(jule::F64,jule::Int);
inline jule::Bool _1d1b685be_signbit(jule::F64);
inline jule::F64 _1d1b68800_sinh(jule::F64);
inline jule::F64 _1d1b68800_cosh(jule::F64);
inline std::tuple<jule::F64,jule::Int> _1d1b837a4_lgamma(jule::F64);
inline jule::F64 _1d1b837a4_sin_pi(jule::F64);
inline jule::F64 _1d1bb770b_acosh(jule::F64);
inline jule::F64 _1d1bb782c_tanh(jule::F64);
inline jule::F64 _1d1c3a41b_cbrt(jule::F64);
inline jule::F64 _1d1ba0cdd_pow(jule::F64,jule::F64);
inline jule::Bool _1d1ba0cdd_is_odd_int(jule::F64);
inline jule::F64 _1d1c9ec33_exp(jule::F64);
inline jule::F64 _1d1c9ec33_exp2(jule::F64);
inline jule::F64 _1d1c9ec33_expmulti(jule::F64,jule::F64,jule::Int);
inline jule::F64 _1d1cc27c2_log1p(jule::F64);
inline std::tuple<jule::F64,jule::F64> _1d1d32689_stirling(jule::F64);
inline jule::F64 _1d1d32689_gamma(jule::F64);
inline jule::Bool _1d1d32689_is_neg_int(jule::F64);
inline jule::F64 _1d1d4963a_erfinv(jule::F64);
inline jule::F64 _1d1d4963a_erfcinv(jule::F64);
inline jule::F64 _1d1d96467_erf(jule::F64);
inline jule::F64 _1d1d96467_erfc(jule::F64);
inline jule::F64 _1d1dd5808_pow10(jule::Int);
inline jule::F64 _1d1d96b60_sqrt(jule::F64);
inline jule::F64 _1d1e1b850_logb(jule::F64);
inline jule::Int _1d1e1b850_ilogb(jule::F64);
inline jule::Int _1d1e1b850__ilogb(jule::F64);
inline jule::F64 _1d1d6e52d_jn(jule::Int,jule::F64);
inline jule::F64 _1d1d6e52d_yn(jule::Int,jule::F64);
inline jule::F64 _1d1e10899_remainder(jule::F64,jule::F64);
inline jule::F64 _1d1ea4630_xatan(jule::F64);
inline jule::F64 _1d1ea4630_satan(jule::F64);
inline jule::F64 _1d1ea4630_atan(jule::F64);
inline jule::F64 _1d1edc426_asin(jule::F64);
inline jule::F64 _1d1edc426_acos(jule::F64);
inline jule::F64 _1d2018d8c_asinh(jule::F64);
inline std::tuple<jule::Bool,jule::Int> _1d05ce773_conv_bool(jule::Str);
inline jule::Str _1d05ce773_fmt_bool(jule::Bool);
inline jule::Str _1d061d5e7_fmt_float(jule::F64,jule::U8,jule::Int,jule::Int);
inline jule::Slice<jule::U8> _1d061d5e7_generic_ftoa(jule::Slice<jule::U8>,jule::F64,jule::U8,jule::Int,jule::Int);
inline jule::Slice<jule::U8> _1d061d5e7_big_ftoa(jule::Slice<jule::U8>,jule::Int,jule::U8,jule::Bool,jule::U64,jule::Int,_1d061d5e7_FloatInfo&);
inline jule::Slice<jule::U8> _1d061d5e7_fmt_digits(jule::Slice<jule::U8>,jule::Bool,jule::Bool,_1d061d5e7_DecimalSlice,jule::Int,jule::U8);
inline void _1d061d5e7_round_shortest(_1d159c685_Decimal&,jule::U64,jule::Int,_1d061d5e7_FloatInfo&);
inline jule::Slice<jule::U8> _1d061d5e7_fmt_e(jule::Slice<jule::U8>,jule::Bool,_1d061d5e7_DecimalSlice,jule::Int,jule::U8);
inline jule::Slice<jule::U8> _1d061d5e7_fmt_f(jule::Slice<jule::U8>,jule::Bool,_1d061d5e7_DecimalSlice,jule::Int);
inline jule::Slice<jule::U8> _1d061d5e7_fmt_b(jule::Slice<jule::U8>,jule::Bool,jule::U64,jule::Int,_1d061d5e7_FloatInfo&);
inline jule::Slice<jule::U8> _1d061d5e7_fmt_x(jule::Slice<jule::U8>,jule::Int,jule::U8,jule::Bool,jule::U64,jule::Int,_1d061d5e7_FloatInfo&);
inline jule::Int _1d061d5e7_min(jule::Int,jule::Int);
inline jule::Int _1d061d5e7_max(jule::Int,jule::Int);
inline jule::U8 _1d0632de2_lower(jule::U8);
inline std::tuple<jule::U64,jule::Int> _1d0632de2_parse_uint(jule::Str,jule::Int,jule::Int);
inline std::tuple<jule::I64,jule::Int> _1d0632de2_parse_int(jule::Str,jule::Int,jule::Int);
inline std::tuple<jule::F64,jule::Bool> _1d05ec7a2_eisel_lemire64(jule::U64,jule::Int,jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _1d05ec7a2_eisel_lemire32(jule::U64,jule::Int,jule::Bool);
inline jule::Int _1d05eae54_common_prefix_len_ignore_case(jule::Str,jule::Str);
inline std::tuple<jule::F64,jule::Int,jule::Bool> _1d05eae54_special(jule::Str);
inline std::tuple<jule::U64,jule::Int,jule::Bool,jule::Bool,jule::Bool,jule::Int,jule::Bool> _1d05eae54_read_float(jule::Str);
inline std::tuple<jule::F64,jule::Bool> _1d05eae54_atof64_exact(jule::U64,jule::Int,jule::Bool);
inline std::tuple<jule::F64,jule::Bool> _1d05eae54_atof64exact(jule::U64,jule::Int,jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _1d05eae54_atof32exact(jule::U64,jule::Int,jule::Bool);
inline std::tuple<jule::F64,jule::Int> _1d05eae54_atof_hex(jule::Str,_1d061d5e7_FloatInfo&,jule::U64,jule::Int,jule::Bool,jule::Bool);
inline std::tuple<jule::F32,jule::Int,jule::Int> _1d05eae54_atof32(jule::Str);
inline std::tuple<jule::F64,jule::Int,jule::Int> _1d05eae54_atof64(jule::Str);
inline std::tuple<jule::F64,jule::Int,jule::Int> _1d05eae54_parse_float_prefix(jule::Str,jule::Int);
inline std::tuple<jule::F64,jule::Int> _1d05eae54_parse_float(jule::Str,jule::Int);
inline void _1d14d25dc_ryu_ftoa_fixed32(_1d061d5e7_DecimalSlice&,jule::U32,jule::Int,jule::Int);
inline void _1d14d25dc_ryu_ftoa_fixed64(_1d061d5e7_DecimalSlice&,jule::U64,jule::Int,jule::Int);
inline void _1d14d25dc_format_decimal(_1d061d5e7_DecimalSlice&,jule::U64,jule::Bool,jule::Bool,jule::Int);
inline void _1d14d25dc_ryu_ftoa_shortest(_1d061d5e7_DecimalSlice&,jule::U64,jule::Int,_1d061d5e7_FloatInfo&);
inline jule::Int _1d14d25dc_mul_by_log2_log10(jule::Int);
inline jule::Int _1d14d25dc_mul_by_log10_log2(jule::Int);
inline std::tuple<jule::U64,jule::U64,jule::U64,jule::Int> _1d14d25dc_compute_bounds(jule::U64,jule::Int,_1d061d5e7_FloatInfo&);
inline void _1d14d25dc_ryu_digits(_1d061d5e7_DecimalSlice&,jule::U64,jule::U64,jule::U64,jule::Bool,jule::Bool);
inline void _1d14d25dc_ryu_digits32(_1d061d5e7_DecimalSlice&,jule::U32,jule::U32,jule::U32,jule::Bool,jule::Bool,jule::Int);
inline std::tuple<jule::U32,jule::Int,jule::Bool> _1d14d25dc_mult64bit_pow10(jule::U32,jule::Int,jule::Int);
inline std::tuple<jule::U64,jule::Int,jule::Bool> _1d14d25dc_mult128bit_pow10(jule::U64,jule::Int,jule::Int);
inline jule::Bool _1d14d25dc_divisible_by_pow5(jule::U64,jule::Int);
inline std::tuple<jule::U32,jule::U32> _1d14d25dc_divmod1e9(jule::U64);
inline jule::Int _1d159c685_digit_zero(jule::Slice<jule::U8>);
inline void _1d159c685_trim(_1d159c685_Decimal&);
inline void _1d159c685_right_shift(_1d159c685_Decimal&,jule::Uint);
inline jule::Bool _1d159c685_prefix_is_less_than(jule::Slice<jule::U8>,jule::Str);
inline void _1d159c685_left_shift(_1d159c685_Decimal&,jule::Uint);
inline jule::Bool _1d159c685_should_round_up(_1d159c685_Decimal&,jule::Int);
inline jule::Str _1d17893cc_fmt_uint(jule::U64,jule::Int);
inline jule::Str _1d17893cc_fmt_int(jule::I64,jule::Int);
inline jule::Str _1d17893cc_itoa(jule::Int);
inline jule::Str _1d17893cc_small(jule::Int);
inline jule::Bool _1d17893cc_is_power_of_two(jule::Int);
inline std::tuple<jule::Slice<jule::U8>,jule::Str> _1d17893cc_fmt_bits(jule::Slice<jule::U8>,jule::U64,jule::Int,jule::Bool,jule::Bool);
inline void _1d1d36270_push_opt_level(jule::Int);
inline jule::Bool _1d1d36270_is_opt_enabled(jule::Str);
inline jule::Int _1d1da0a6a_get_last_fs_error(void);
inline std::tuple<jule::Ref<_1d1ee0946_File>,jule::Int> _1d1da163c_open(jule::Str,jule::Int,jule::Int);
inline jule::Int _1d1da163c_remove_file(jule::Str);
inline std::tuple<jule::Ref<_1d2151920_Status>,jule::Int> _1d1edea66_stat(jule::Str);
inline std::tuple<jule::Slice<jule::U8>,jule::Int> _1d1ee0946_read_file(jule::Str);
inline std::tuple<jule::Slice<jule::Ref<_1d1e19221_DirEntry>>,jule::Int> _1d2177c10_read_dir(jule::Str);
inline jule::Int _1d2177c10_create_dir(jule::Str);
inline jule::Int _1d2177c10_remove_dir(jule::Str);
inline jule::Bool _1d2264b43_is_graphic(jule::I32);
inline jule::Bool _1d2264b43_is_in(jule::I32,jule::Slice<jule::Ref<_1d2375913_RangeTable>>);
inline jule::Bool _1d2264b43_is_letter(jule::I32);
inline jule::Bool _1d2264b43_is_number(jule::I32);
inline jule::Bool _1d2264b43_is_punct(jule::I32);
inline jule::Bool _1d2264b43_is_space(jule::I32);
inline jule::Bool _1b8542038_is_digit(jule::I32);
inline std::tuple<jule::I32,jule::Bool> _1d2375913___to(jule::Int,jule::I32,jule::Slice<_1d2375913_CaseRange>);
inline jule::I32 _1d2375913_to(jule::Int,jule::I32);
inline jule::I32 _1d2375913_to_upper(jule::I32);
inline jule::I32 _1d2375913_to_lower(jule::I32);
inline jule::Bool _1d2375913_is16(jule::Slice<_1d2375913_Range16>,jule::U16);
inline jule::Bool _1d2375913_is32(jule::Slice<_1d2375913_Range32>,jule::U32);
inline jule::Bool _1d2375913_is(jule::Ref<_1d2375913_RangeTable>,jule::I32);
inline jule::Bool _1d2375913_is_excluding_latin(jule::Ref<_1d2375913_RangeTable>,jule::I32);
inline jule::Bool _1d2375913_is_upper(jule::I32);
inline jule::Bool _1d2375913_is_lower(jule::I32);
inline jule::Bool _1b818a2be_full_rune(jule::Slice<jule::U8>);
inline jule::Bool _1b818a2be_full_rune_str(jule::Str);
inline std::tuple<jule::I32,jule::Int> _1b818a2be_decode_rune(jule::Slice<jule::U8>);
inline std::tuple<jule::I32,jule::Int> _1b818a2be_decode_rune_str(jule::Str);
inline std::tuple<jule::I32,jule::Int> _1b818a2be_decode_last_rune(jule::Slice<jule::U8>);
inline std::tuple<jule::I32,jule::Int> _1b818a2be_decode_last_rune_str(jule::Str);
inline jule::Int _1b818a2be_rune_len(jule::I32);
inline jule::Int _1b818a2be_encode_rune(jule::Slice<jule::U8>,jule::I32);
inline jule::Slice<jule::U8> _1b818a2be_append_rune(jule::Slice<jule::U8>,jule::I32);
inline jule::Slice<jule::U8> _1b818a2be_append_rune_non_ascii(jule::Slice<jule::U8>,jule::I32);
inline jule::Int _1b818a2be_rune_count(jule::Slice<jule::U8>);
inline jule::Int _1b818a2be_rune_count_str(jule::Str);
inline jule::Bool _1b818a2be_rune_start(jule::U8);
inline jule::Bool _1b818a2be_valid(jule::Slice<jule::U8>);
inline jule::Bool _1b818a2be_valid_str(jule::Str);
inline jule::Bool _1b818a2be_valid_rune(jule::I32);
inline jule::Bool _1d1da4277_is_unary_op(jule::Str);
inline jule::Bool _1d1da4277_is_bin_op(jule::Str);
inline jule::Bool _1d1da4277_is_weak_op(jule::Str);
inline jule::Bool _1d1da4277_is_str(jule::Str);
inline jule::Bool _1d1da4277_is_raw_str(jule::Str);
inline jule::Bool _1d1da4277_is_rune(jule::Str);
inline jule::Bool _1d1da4277_is_nil(jule::Str);
inline jule::Bool _1d1da4277_is_bool(jule::Str);
inline jule::Bool _1d1da4277_contains_any(jule::Str,jule::Str);
inline jule::Bool _1d1da4277_is_float(jule::Str);
inline jule::Bool _1d1da4277_is_num(jule::Str);
inline jule::Bool _1d1da4277_is_lit(jule::Str);
inline jule::Bool _1d1da4277_is_ignore_ident(jule::Str);
inline jule::Bool _1d1da4277_is_anon_ident(jule::Str);
inline jule::Bool _1d1da4277_is_punct(jule::I32);
inline jule::Bool _1d1da4277_is_space(jule::I32);
inline jule::Bool _1d1da4277_is_letter(jule::I32);
inline jule::Bool _1d1da4277_is_ident_rune(jule::Str);
inline jule::Bool _1d1da4277_is_decimal(jule::U8);
inline jule::Bool _1d1da4277_is_binary(jule::U8);
inline jule::Bool _1d1da4277_is_octal(jule::U8);
inline jule::Bool _1d1da4277_is_hex(jule::U8);
inline jule::Bool _1d1da4277_is_assign(jule::Uint);
inline jule::Bool _1d1da4277_is_postfix_op(jule::Str);
inline jule::Bool _1d1da4277_is_assign_op(jule::Str);
inline jule::Ref<_1d1ee01b5_File> _1d1ee01b5_new_file_set(jule::Str);
inline _1d0557e9e_Log _1d215b155_make_err(jule::Int,jule::Int,jule::Ref<_1d1ee01b5_File>&,jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _1d215b155_bytes_has_prefix(jule::Slice<jule::U8>&,jule::Str);
inline jule::Str _1d215b155_float_fmt_e(jule::Slice<jule::U8>&,jule::Int);
inline jule::Str _1d215b155_float_fmt_p(jule::Slice<jule::U8>&,jule::Int);
inline jule::Str _1d215b155_float_fmt_dotnp(jule::Slice<jule::U8>&,jule::Int);
inline jule::Str _1d215b155_float_fmt_dotfp(jule::Slice<jule::U8>&,jule::Int);
inline jule::Str _1d215b155_float_fmt_dotp(jule::Slice<jule::U8>&,jule::Int);
inline jule::Str _1d215b155_float_num(jule::Slice<jule::U8>&,jule::Int);
inline jule::Str _1d215b155_common_num(jule::Slice<jule::U8>&);
inline jule::Str _1d215b155_binary_num(jule::Slice<jule::U8>&);
inline jule::Bool _1d215b155_is_float_fmt_e(jule::U8,jule::Int);
inline jule::Bool _1d215b155_is_float_fmt_p(jule::U8,jule::Int);
inline jule::Bool _1d215b155_is_float_fmt_dotnp(jule::Slice<jule::U8>&,jule::Int);
inline jule::Bool _1d215b155_is_float_fmt_dotp(jule::Slice<jule::U8>&,jule::Int);
inline jule::Bool _1d215b155_is_float_fmt_dotfp(jule::Slice<jule::U8>&,jule::Int);
inline jule::Str _1d215b155_octal_num(jule::Slice<jule::U8>&);
inline jule::Str _1d215b155_hex_num(jule::Slice<jule::U8>&);
inline jule::Str _1d215b155_hex_escape(jule::Slice<jule::U8>&,jule::Int);
inline jule::Str _1d215b155_big_unicode_point_escape(jule::Slice<jule::U8>&);
inline jule::Str _1d215b155_little_unicode_point_escape(jule::Slice<jule::U8>&);
inline jule::Str _1d215b155_hex_byte_escape(jule::Slice<jule::U8>&);
inline jule::Str _1d215b155_byte_escape(jule::Slice<jule::U8>&);
inline jule::Slice<_1d0557e9e_Log> _1d215b155_lex(jule::Ref<_1d1ee01b5_File>);
inline jule::Ref<_1d1ee1617_FileInfo> _1d1ee1617_parse_file(jule::Ref<_1d1ee01b5_File>);
inline jule::Ref<_1d1ee1617_PackageInfo> _1d1ee1617_parse_package(jule::Slice<jule::Ref<_1d1ee01b5_File>>);
inline std::tuple<jule::Ref<_1d21640e7_Ast>,jule::Slice<_1d0557e9e_Log>> _1d1ee1617_parse_fileset(jule::Ref<_1d1ee01b5_File>);
inline jule::Ref<_1d1e5192e_ScopeTree> _1d21a4698_new_scope(void);
inline std::tuple<jule::Bool,jule::Bool> _1d21a4698_is_st(_1d1da4277_Token,_1d1da4277_Token);
inline jule::Bool _1d21a4698_prev_is_incomplete_binary_expr(jule::Slice<_1d1da4277_Token>&,jule::Int&);
inline std::tuple<jule::Int,jule::Bool> _1d21a4698_next_st_pos(jule::Slice<_1d1da4277_Token>&,jule::Int);
inline std::tuple<jule::Slice<_1d1da4277_Token>,jule::Bool> _1d21a4698_skip_st(jule::Int&,jule::Slice<_1d1da4277_Token>);
inline jule::Slice<jule::Ref<_1d21a4698_Stmt>> _1d21a4698_split_stms(jule::Slice<_1d1da4277_Token>&);
inline jule::Slice<_1d1da4277_Token> _1d21b6e08_is_fn_call(jule::Slice<_1d1da4277_Token>&);
inline jule::Ref<_1d21b6e08_CallData> _1d21b6e08_get_call_data(jule::Slice<_1d1da4277_Token>&);
inline jule::Slice<_1d1da4277_Token> _1d21b6e08_get_block_expr(jule::Slice<_1d1da4277_Token>&);
inline std::tuple<jule::Slice<_1d1da4277_Token>,jule::Slice<_1d1da4277_Token>> _1d21b6e08_split_colon(jule::Slice<_1d1da4277_Token>&);
inline jule::Slice<_1d1da4277_Token> _1d21b6e08_eliminate_comments(jule::Slice<_1d1da4277_Token>&);
inline jule::Int _1d21b6e08_find_lowest_prec_op(jule::Slice<_1d1da4277_Token>&);
inline jule::Ref<_1d1e5192e_IdentExpr> _1d21b6e08_build_ident_expr(_1d1da4277_Token&);
inline std::tuple<jule::Slice<_1d1da4277_Token>,jule::Int> _1d21b6e08_get_range_expr_tokens(jule::Slice<_1d1da4277_Token>&);
inline jule::Bool _1d21bd937_check_assign_tokens(jule::Slice<_1d1da4277_Token>&);
inline _1d0557e9e_Log _1d21abb45_make_err(jule::Int,jule::Int,jule::Ref<_1d1ee01b5_File>&,jule::Str,jule::Slice<jule::Any>);
inline jule::Slice<_1d1da4277_Token> _1d21abb45_range(jule::Int&,jule::Str,jule::Str,jule::Slice<_1d1da4277_Token>&);
inline std::tuple<jule::Slice<_1d1da4277_Token>,jule::Slice<_1d1da4277_Token>> _1d21abb45_range_last(jule::Slice<_1d1da4277_Token>&);
inline std::tuple<jule::Slice<jule::Slice<_1d1da4277_Token>>,jule::Slice<_1d0557e9e_Log>> _1d21abb45_parts(jule::Slice<_1d1da4277_Token>&,jule::Uint,jule::Bool);
inline jule::Str _1d21abb45_get_close_kind_of_brace(jule::Str);
inline _1d0557e9e_Log _1d21abb45_compiler_err(_1d1da4277_Token&,jule::Str&,jule::Slice<jule::Any>);
inline void _1d21abb45_push_suggestion(_1d0557e9e_Log*,jule::Str,jule::Slice<jule::Any>);
inline jule::Ref<_1d1e5192e_Comment> _1d21abb45_build_comment(_1d1da4277_Token&);
inline jule::Str _1d21abb45_tokstoa(jule::Slice<_1d1da4277_Token>&);
inline jule::Ref<_1d1e5192e_TypeDecl> _1b87d0ddc_build_void_type(void);
inline jule::Ref<_1d1e5192e_TypeDecl> _1b87d0ddc_build_prim_type(_1d1da4277_Token);
inline std::tuple<jule::Slice<_1d1da4277_Token>,jule::Int> _1b87d0ddc_split_map_range(jule::Slice<_1d1da4277_Token>&,jule::Int&);
inline void _1b9d678e5_lshift_unsig(_1b9d678e5_Const&,_1b9d678e5_Const&);
inline void _1b9d678e5_rshift_unsig(_1b9d678e5_Const&,_1b9d678e5_Const&);
inline jule::Bool _1b9d698d6_check_bit(jule::Str,jule::Int,jule::Fn<jule::Bool(jule::Str,jule::Int,jule::Int)>);
inline jule::Str _1b9d698d6_real_kind_of(jule::Str);
inline jule::Int _1b9d698d6_bitsize_of(jule::Str);
inline jule::Str _1b9d698d6_int_from_bits(jule::U64);
inline jule::Str _1b9d698d6_uint_from_bits(jule::U64);
inline jule::Str _1b9d698d6_float_from_bits(jule::U64);
inline jule::Bool _1b9d698d6_check_bit_int(jule::Str,jule::Int);
inline jule::Bool _1b9d698d6_check_bit_uint(jule::Str,jule::Int);
inline jule::Bool _1b9d698d6_check_bit_float(jule::Str,jule::Int);
inline jule::U64 _1b9d698d6_bitsize_of_float(jule::F64);
inline jule::U64 _1b9d698d6_bitsize_of_int(jule::I64);
inline jule::U64 _1b9d698d6_bitsize_of_uint(jule::U64);
inline jule::F64 _1b9d841c5_min(jule::Str);
inline jule::F64 _1b9d841c5_max(jule::Str);
inline jule::Bool _1b9e404b2_is_i8_compatible(jule::Str);
inline jule::Bool _1b9e404b2_is_i16_compatible(jule::Str);
inline jule::Bool _1b9e404b2_is_i32_compatible(jule::Str);
inline jule::Bool _1b9e404b2_is_i64_compatible(jule::Str);
inline jule::Bool _1b9e404b2_is_u8_compatible(jule::Str);
inline jule::Bool _1b9e404b2_is_u16_compatible(jule::Str);
inline jule::Bool _1b9e404b2_is_u32_compatible(jule::Str);
inline jule::Bool _1b9e404b2_is_u64_compatible(jule::Str);
inline jule::Bool _1b9e404b2_is_f32_compatible(jule::Str);
inline jule::Bool _1b9e404b2_is_f64_compatible(jule::Str);
inline jule::Bool _1b9e404b2_types_are_compatible(jule::Str,jule::Str);
inline jule::Bool _1b9e404b2_is_i16_greater(jule::Str);
inline jule::Bool _1b9e404b2_is_i32_greater(jule::Str);
inline jule::Bool _1b9e404b2_is_i64_greater(jule::Str);
inline jule::Bool _1b9e404b2_is_u8_greater(jule::Str);
inline jule::Bool _1b9e404b2_is_u16_greater(jule::Str);
inline jule::Bool _1b9e404b2_is_u32_greater(jule::Str);
inline jule::Bool _1b9e404b2_is_u64_greater(jule::Str);
inline jule::Bool _1b9e404b2_is_f32_greater(jule::Str);
inline jule::Bool _1b9e404b2_is_f64_greater(jule::Str);
inline jule::Bool _1b9e404b2_is_greater(jule::Str,jule::Str);
inline jule::Bool _1b9e28c5e_is_sig_int(jule::Str);
inline jule::Bool _1b9e28c5e_is_unsig_int(jule::Str);
inline jule::Bool _1b9e28c5e_is_int(jule::Str);
inline jule::Bool _1b9e28c5e_is_float(jule::Str);
inline jule::Bool _1b9e28c5e_is_num(jule::Str);
inline jule::Bool _1b9e28c5e_is_sig_num(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _1ba0423e9_is_byte_lit(jule::Str);
inline jule::I32 _1ba0423e9_to_rune(jule::Slice<jule::U8>);
inline jule::Str _1ba0423e9_to_raw_str(jule::Slice<jule::U8>);
inline jule::Str _1ba0423e9_to_str(jule::Slice<jule::U8>);
inline std::tuple<jule::U8,jule::Bool> _1ba0423e9_try_btoa_common_esq(jule::Slice<jule::U8>);
inline jule::I32 _1ba0423e9_rune_from_esq_seq(jule::Slice<jule::U8>,jule::Int&);
inline jule::Str _1ba0423e9_str_esq_seq(jule::Slice<jule::U8>,jule::Int&);
inline jule::Bool _1d21d97ee_kind_uses_generics(jule::Ref<_1b951b088_TypeKind>,jule::Slice<jule::Ref<_1d1e5192e_GenericDecl>>&);
inline jule::Bool _1d21d97ee_parameter_uses_generics(jule::Ref<_1d21d97ee_Param>&,jule::Slice<jule::Ref<_1d1e5192e_GenericDecl>>&);
inline jule::Str _1b8b10cbb_str_repeat(jule::Str,jule::Int);
inline jule::Str _1b8b10cbb_build_doc(jule::Ref<_1d1e5192e_CommentGroup>);
inline jule::Ref<_1b951b088_TypeSymbol> _1b8b10cbb_build_type(jule::Ref<_1d1e5192e_TypeDecl>);
inline jule::Ref<_1b9523799_Value> _1b8b10cbb_build_expr(jule::Ref<_1d1e5192e_Expr>);
inline jule::Ref<_1b951b088_TypeAlias> _1b8b10cbb_build_type_alias(jule::Ref<_1d1e5192e_TypeAliasDecl>);
inline jule::Ref<_1d21c0b59_Field> _1b8b10cbb_build_field(jule::Ref<_1d1e5192e_FieldDecl>);
inline jule::Slice<jule::Ref<_1d21c0b59_Field>> _1b8b10cbb_build_fields(jule::Slice<jule::Ref<_1d1e5192e_FieldDecl>>&);
inline jule::Ref<_1d21c0b59_Struct> _1b8b10cbb_build_struct(jule::Ref<_1d1e5192e_StructDecl>);
inline jule::Ref<_1d21d97ee_Param> _1b8b10cbb_build_param(jule::Ref<_1d1e5192e_ParamDecl>);
inline jule::Slice<jule::Ref<_1d21d97ee_Param>> _1b8b10cbb_build_params(jule::Slice<jule::Ref<_1d1e5192e_ParamDecl>>&);
inline jule::Ref<_1d21d97ee_RetType> _1b8b10cbb_build_ret_type(jule::Ref<_1d1e5192e_RetTypeDecl>);
inline jule::Ref<_1d21d97ee_Fn> _1b8b10cbb_build_fn(jule::Ref<_1d1e5192e_FnDecl>);
inline jule::Slice<jule::Ref<_1d21d97ee_Fn>> _1b8b10cbb_build_methods(jule::Slice<jule::Ref<_1d1e5192e_FnDecl>>&);
inline jule::Ref<_1b8cd2894_Trait> _1b8b10cbb_build_trait(jule::Ref<_1d1e5192e_TraitDecl>);
inline jule::Ref<_1b8dae520_EnumItem> _1b8b10cbb_build_enum_item(jule::Ref<_1d1e5192e_EnumItemDecl>);
inline jule::Slice<jule::Ref<_1b8dae520_EnumItem>> _1b8b10cbb_build_enum_items(jule::Slice<jule::Ref<_1d1e5192e_EnumItemDecl>>&);
inline jule::Ref<_1b8dae520_Enum> _1b8b10cbb_build_enum(jule::Ref<_1d1e5192e_EnumDecl>);
inline jule::Ref<_1b919cb2c_Var> _1b8b10cbb_build_var(jule::Ref<_1d1e5192e_VarDecl>);
inline jule::Slice<jule::Ref<_1b919cb2c_Var>> _1b8b10cbb_build_vars(jule::Slice<jule::Ref<_1d1e5192e_VarDecl>>);
inline jule::Ref<_1b8dacd8c_Impl> _1b8b10cbb_build_impl(jule::Ref<_1d1e5192e_Impl>);
inline jule::Ref<_1b8cd2c4b_ScopeChecker> _1b8cd2c4b_new_scope_checker_base(jule::Ref<_1b912748b_Sema>,jule::Ref<_1d21d97ee_FnIns>);
inline jule::Ref<_1b8cd2c4b_ScopeChecker> _1b8cd2c4b_new_scope_checker(jule::Ref<_1b912748b_Sema>,jule::Ref<_1d21d97ee_FnIns>);
inline jule::Ref<_1b8cd2c4b_ScopeLabel> _1b8cd2c4b_find_label_parent(jule::Str,jule::Ref<_1b8cd2c4b_ScopeChecker>);
inline jule::Int _1b8cd2c4b_count_match_type(jule::Ref<_1b8cd2c4b_Match>,jule::Ref<_1b951b088_TypeKind>);
inline jule::Slice<jule::Ref<_1b9523799_Data>> _1b8cd2c4b_get_datas_from_tuple_data(jule::Ref<_1b9523799_Data>);
inline jule::Slice<jule::Any> _1b8cd2c4b_get_expr_models(jule::Any);
inline jule::Bool _1b8cd2c4b_check_mut(jule::Ref<_1b912748b_Sema>,jule::Ref<_1b9523799_Data>,jule::Ref<_1b9523799_Data>,_1d1da4277_Token);
inline jule::Bool _1b8cd2c4b_check_assign(jule::Ref<_1b912748b_Sema>,jule::Ref<_1b9523799_Data>,jule::Ref<_1b9523799_Data>,_1d1da4277_Token);
inline jule::Bool _1b8cd2c4b_is_valid_ast_st_for_next_st(jule::Any);
inline jule::Bool _1b8cd2c4b_is_valid_st_for_next_st(jule::Any);
inline jule::Bool _1b8cd2c4b_st_is_def(jule::Any);
inline jule::Ref<_1b919cb2c_Var> _1b8e0c01d_find_var_in_package(jule::Slice<jule::Ref<_1b9390d86_SymbolTable>>&,jule::Str,jule::Bool);
inline jule::Ref<_1b951b088_TypeAlias> _1b8e0c01d_find_type_alias_in_package(jule::Slice<jule::Ref<_1b9390d86_SymbolTable>>&,jule::Str,jule::Bool);
inline jule::Ref<_1d21c0b59_Struct> _1b8e0c01d_find_struct_in_package(jule::Slice<jule::Ref<_1b9390d86_SymbolTable>>&,jule::Str,jule::Bool);
inline jule::Ref<_1d21d97ee_Fn> _1b8e0c01d_find_fn_in_package(jule::Slice<jule::Ref<_1b9390d86_SymbolTable>>&,jule::Str,jule::Bool);
inline jule::Ref<_1b8cd2894_Trait> _1b8e0c01d_find_trait_in_package(jule::Slice<jule::Ref<_1b9390d86_SymbolTable>>&,jule::Str);
inline jule::Ref<_1b8dae520_Enum> _1b8e0c01d_find_enum_in_package(jule::Slice<jule::Ref<_1b9390d86_SymbolTable>>&,jule::Str);
inline jule::Bool _1b912748b_is_valid_model_for_ref(jule::Any);
inline _1d0557e9e_Log _1b912748b_compiler_err(_1d1da4277_Token&,jule::Bool,jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _1b912748b_imp_is_lookupable(jule::Ref<_1b8e0c01d_ImportInfo>&,jule::Str);
inline jule::Slice<jule::Ref<_1b919cb2c_Var>> _1b912748b_build_ret_vars(jule::Ref<_1d21d97ee_FnIns>&);
inline jule::Slice<jule::Ref<_1b919cb2c_Var>> _1b912748b_build_param_vars(jule::Ref<_1d21d97ee_FnIns>&);
inline jule::Slice<jule::Ref<_1b951b088_TypeAlias>> _1b912748b_build_generic_type_aliases(jule::Ref<_1d21d97ee_FnIns>&);
inline jule::Ref<_1b9390d86_SymbolTable> _1b912748b_find_file(jule::Slice<jule::Ref<_1b9390d86_SymbolTable>>&,jule::Ref<_1d1ee01b5_File>&);
inline std::tuple<jule::Bool,jule::Bool> _1b912748b_conditional_has_ret(jule::Ref<_1b8cd2c4b_Conditional>);
inline jule::Bool _1b912748b_match_has_ret(jule::Ref<_1b8cd2c4b_Match>);
inline std::tuple<jule::Bool,jule::Bool,jule::Bool> _1b912748b___has_ret(jule::Ref<_1b8cd2c4b_Scope>);
inline jule::Bool _1b912748b_has_ret(jule::Ref<_1b8cd2c4b_Scope>);
inline void _1b912748b_push_suggestion(_1d0557e9e_Log*,jule::Str,jule::Slice<jule::Any>);
inline jule::Slice<jule::Ref<_1b951b088_TypeKind>> _1b9176ba0_get_fn_result_types(jule::Ref<_1d21d97ee_FnIns>&);
inline jule::Bool _1b9176ba0_trait_has_reference_receiver(jule::Ref<_1b8cd2894_Trait>&);
inline jule::Bool _1b9176ba0_float_assignable(jule::Str,jule::Ref<_1b9523799_Data>&);
inline jule::Bool _1b9176ba0_sig_assignable(jule::Str,jule::Ref<_1b9523799_Data>&);
inline jule::Bool _1b9176ba0_unsig_assignable(jule::Str,jule::Ref<_1b9523799_Data>&);
inline jule::Bool _1b9176ba0_int_assignable(jule::Str,jule::Ref<_1b9523799_Data>&);
inline jule::Any _1b9523799_find_builtins_import(jule::Str,jule::Ref<_1b8e0c01d_ImportInfo>);
inline jule::Any _1b9523799_find_builtins_sema(jule::Str,jule::Ref<_1b912748b_Sema>);
inline jule::Bool _1b9523799_is_ok_for_shifting(jule::Ref<_1b9523799_Data>);
inline jule::Bool _1b9523799_is_instanced_struct(jule::Ref<_1d21c0b59_StructIns>);
inline void _1b9523799_normalize_bitsize(jule::Ref<_1b9523799_Data>);
inline void _1b9523799_normalize_type(jule::Ref<_1b9523799_Data>);
inline void _1b9523799_apply_cast_kind_model(jule::Ref<_1b9523799_Data>);
inline void _1b9523799_apply_cast_kind(jule::Ref<_1b9523799_Data>);
inline jule::Ref<_1b9523799_Data> _1b9523799_build_void_data(void);
inline jule::Str _1b9523799_kind_by_bitsize(jule::Any);
inline jule::Str _1b9523799_check_data_for_integer_indexing(jule::Ref<_1b9523799_Data>);
inline jule::Bool _1b951b088_can_get_ptr(jule::Ref<_1b9523799_Data>&);
inline jule::Bool _1b951b088_is_valid_for_ref_type(jule::Ref<_1b951b088_TypeKind>&);
inline jule::Bool _1b951b088_is_valid_for_ref(jule::Ref<_1b951b088_TypeKind>&);
inline jule::Str _1b951b088_build_link_path_by_tokens(jule::Slice<_1d1da4277_Token>&);
inline jule::Ref<_1b951b088_Prim> _1b951b088_build_prim_type(jule::Str);
inline jule::Ref<_1d21c0b59_Struct> _1b951b088_get_struct_from_kind(jule::Ref<_1b951b088_TypeKind>);
inline jule::Bool _1b951b088_is_prim(jule::Str);
inline std::tuple<jule::Ref<_1b9390d86_SymbolTable>,jule::Slice<_1d0557e9e_Log>> _1b9960323_build_symbols(jule::Ref<_1d21640e7_Ast>&,jule::Trait<_1b8e0c01d_Importer>&,jule::Ref<_1b8b10cbb_SymbolBuilder>);
inline std::tuple<jule::Ref<_1b8e0c01d_Package>,jule::Slice<_1d0557e9e_Log>> _1b9960323___analyze_package(jule::Slice<jule::Ref<_1d21640e7_Ast>>&,jule::Trait<_1b8e0c01d_Importer>&,jule::Int&);
inline std::tuple<jule::Ref<_1b8e0c01d_Package>,jule::Slice<_1d0557e9e_Log>> _1b9960323_analyze_package(jule::Slice<jule::Ref<_1d21640e7_Ast>>,jule::Trait<_1b8e0c01d_Importer>,jule::Int);
inline std::tuple<jule::Ref<_1b9390d86_SymbolTable>,jule::Slice<_1d0557e9e_Log>> _1b9960323_analyze_file(jule::Ref<_1d21640e7_Ast>,jule::Trait<_1b8e0c01d_Importer>,jule::Int);
inline void _1b9c0b525_init(void);
inline jule::Ref<_1d21d97ee_FnIns> _1b9c0b525_find_builtin_fn(jule::Str);
inline jule::Ref<_1b951b088_TypeAlias> _1b9c0b525_find_builtin_type_alias(jule::Str);
inline jule::Ref<_1b8cd2894_Trait> _1b9c0b525_find_builtin_trait(jule::Str);
inline jule::Any _1b9c0b525_find_builtin_def(jule::Str);
inline jule::Any _1b9c0b525_find_builtin_def_std_mem(jule::Str);
inline jule::Any _1b9c0b525_find_builtin_def_std_jule_integrated(jule::Str);
inline jule::Any _1b9c0b525_find_package_builtin_def(jule::Str,jule::Str);
inline jule::Ref<_1b9523799_Data> _1b9c0b525_builtin_caller_common_plain(jule::Ref<_1b9523799_Eval>&,jule::Ref<_1d1e5192e_FnCallExpr>&,jule::Ref<_1b9523799_Data>&);
inline jule::Ref<_1b9523799_Data> _1b9c0b525_builtin_caller_common(jule::Ref<_1b9523799_Eval>&,jule::Ref<_1d1e5192e_FnCallExpr>&,jule::Ref<_1b9523799_Data>&);
inline jule::Ref<_1b9523799_Data> _1b9c0b525_builtin_caller_common_mut(jule::Ref<_1b9523799_Eval>&,jule::Ref<_1d1e5192e_FnCallExpr>&,jule::Ref<_1b9523799_Data>&);
inline jule::Ref<_1b9523799_Data> _1b9c0b525_builtin_caller_out(jule::Ref<_1b9523799_Eval>&,jule::Ref<_1d1e5192e_FnCallExpr>&,jule::Ref<_1b9523799_Data>&);
inline jule::Ref<_1b9523799_Data> _1b9c0b525_builtin_caller_outln(jule::Ref<_1b9523799_Eval>&,jule::Ref<_1d1e5192e_FnCallExpr>&,jule::Ref<_1b9523799_Data>&);
inline jule::Ref<_1b9523799_Data> _1b9c0b525_builtin_caller_new(jule::Ref<_1b9523799_Eval>&,jule::Ref<_1d1e5192e_FnCallExpr>&,jule::Ref<_1b9523799_Data>&);
inline jule::Ref<_1b9523799_Data> _1b9c0b525_builtin_caller_real(jule::Ref<_1b9523799_Eval>&,jule::Ref<_1d1e5192e_FnCallExpr>&,jule::Ref<_1b9523799_Data>&);
inline jule::Ref<_1b9523799_Data> _1b9c0b525_builtin_caller_drop(jule::Ref<_1b9523799_Eval>&,jule::Ref<_1d1e5192e_FnCallExpr>&,jule::Ref<_1b9523799_Data>&);
inline jule::Ref<_1b9523799_Data> _1b9c0b525_builtin_caller_panic(jule::Ref<_1b9523799_Eval>&,jule::Ref<_1d1e5192e_FnCallExpr>&,jule::Ref<_1b9523799_Data>&);
inline jule::Ref<_1b9523799_Data> _1b9c0b525_builtin_caller_make(jule::Ref<_1b9523799_Eval>&,jule::Ref<_1d1e5192e_FnCallExpr>&,jule::Ref<_1b9523799_Data>&);
inline jule::Ref<_1b9523799_Data> _1b9c0b525_builtin_caller_append(jule::Ref<_1b9523799_Eval>&,jule::Ref<_1d1e5192e_FnCallExpr>&,jule::Ref<_1b9523799_Data>&);
inline jule::Ref<_1b9523799_Data> _1b9c0b525_builtin_caller_copy(jule::Ref<_1b9523799_Eval>&,jule::Ref<_1d1e5192e_FnCallExpr>&,jule::Ref<_1b9523799_Data>&);
inline jule::Ref<_1b9523799_Data> _1b9c0b525_builtin_caller_recover(jule::Ref<_1b9523799_Eval>&,jule::Ref<_1d1e5192e_FnCallExpr>&,jule::Ref<_1b9523799_Data>&);
inline jule::Ref<_1b9523799_Data> _1b9c0b525_builtin_caller_clone(jule::Ref<_1b9523799_Eval>&,jule::Ref<_1d1e5192e_FnCallExpr>&,jule::Ref<_1b9523799_Data>&);
inline jule::Ref<_1b9523799_Data> _1b9c0b525_builtin_caller_std_mem_size_of(jule::Ref<_1b9523799_Eval>&,jule::Ref<_1d1e5192e_FnCallExpr>&,jule::Ref<_1b9523799_Data>&);
inline jule::Ref<_1b9523799_Data> _1b9c0b525_builtin_caller_std_mem_align_of(jule::Ref<_1b9523799_Eval>&,jule::Ref<_1d1e5192e_FnCallExpr>&,jule::Ref<_1b9523799_Data>&);
inline jule::Ref<_1b9523799_Data> _1b9c0b525_builtin_caller_std_jule_integrated_to_str(jule::Ref<_1b9523799_Eval>&,jule::Ref<_1d1e5192e_FnCallExpr>&,jule::Ref<_1b9523799_Data>&);
inline std::tuple<jule::Bool,jule::Bool> _1d1958e4d_check_os(jule::Str);
inline std::tuple<jule::Bool,jule::Bool> _1d1958e4d_check_arch(jule::Str);
inline jule::Bool _1d1958e4d_is_pass_file_annotation(jule::Str);
inline jule::Bool _1d1996397_eval_directive_ident(jule::Str);
inline jule::Bool _1d1996397_eval_directive_part(jule::Str);
inline jule::Slice<jule::Str> _1d1996397_split_operans(jule::Str,jule::Str);
inline jule::Bool _1d1996397_eval_directive_expr(jule::Str);
inline void _1d1956852_set_os_flags(void);
inline void _1d1956852_set_arch_flags(void);
inline void _1d1956852_init_flags(void);
inline void _1d1c2a7b3_exit_err(jule::Str);
inline jule::Slice<jule::U8> _1d1c2a7b3_read_buff(jule::Str);
inline _1d0557e9e_Log _1d1c2a7b3_flat_compiler_err(jule::Str);
inline std::tuple<jule::Slice<jule::Ref<_1d1e19221_DirEntry>>,jule::Str> _1d1c2a7b3_read_package_dirents(jule::Str);
inline jule::Str _1d1c2a7b3_concat_all_parts(jule::Slice<jule::Str>);
inline jule::Bool _1d1c2a7b3_is_pass_build_directives(jule::Ref<_1d21640e7_Ast>&);
inline void _1d1818549_push_passes(jule::Ref<_1b8e0c01d_Package>&,jule::Slice<jule::Str>&);
inline jule::Slice<jule::Str> _1d1818549_get_all_unique_passes(jule::Ref<_1b8e0c01d_Package>&,jule::Slice<jule::Ref<_1b8e0c01d_ImportInfo>>);
inline jule::Bool _1d0616dd7_is_exist_0(jule::Slice<jule::Any>,jule::Ref<_1d21d97ee_FnIns>);
inline jule::Bool _1d0616dd7_is_exist_1(jule::Slice<jule::Any>,jule::Ref<_1b919cb2c_Var>);
inline jule::Bool _1d0616dd7_is_exist_2(jule::Slice<jule::Any>,jule::Ref<_1d21c0b59_StructIns>);
inline jule::Bool _1d0616dd7_is_exist_3(jule::Slice<jule::Any>,jule::Ref<_1b8cd2894_Trait>);
inline jule::Bool _1d0616dd7_is_exist_ref(jule::Slice<jule::Any>,jule::Any);
inline jule::Bool _1d0616dd7_is_dead(jule::Any);
inline void _1d0616dd7_drop_ref(jule::Slice<jule::Any>&,jule::Int);
inline jule::Bool _1d0616dd7_is_all_references_are_dead_0(jule::Ref<_1b8b10cbb_ReferenceStack>);
inline jule::Bool _1d0616dd7_is_all_references_are_dead_1(jule::Ref<_1b8b10cbb_ReferenceStack>);
inline jule::Bool _1d0616dd7_is_all_references_are_dead_2(jule::Ref<_1b8b10cbb_ReferenceStack>);
inline jule::Bool _1d0616dd7_is_fn_dead(jule::Ref<_1d21d97ee_FnIns>);
inline jule::Bool _1d0616dd7_is_var_dead(jule::Ref<_1b919cb2c_Var>);
inline jule::Bool _1d0616dd7_kind_is_dead(jule::Ref<_1b951b088_TypeKind>);
inline jule::Bool _1d0616dd7_is_any_generic_is_dead(jule::Slice<jule::Ref<_1b951b088_TypeKind>>&);
inline jule::Bool _1d0616dd7_is_struct_dead(jule::Ref<_1d21c0b59_StructIns>);
inline jule::Bool _1d0616dd7_is_trait_dead(jule::Ref<_1b8cd2894_Trait>);
inline void _1d0616dd7_eliminate_dead_functions(jule::Slice<jule::Ref<_1d21d97ee_Fn>>&);
inline void _1d0616dd7_eliminate_dead_globals(jule::Ref<_1b8e0c01d_Package>&);
inline void _1d0616dd7_eliminate_dead_functions_package(jule::Ref<_1b8e0c01d_Package>&);
inline void _1d0616dd7_eliminate_dead_structs(jule::Ref<_1b8e0c01d_Package>&);
inline void _1d0616dd7_eliminate_dead_traits(jule::Ref<_1b8e0c01d_Package>&);
inline void _1d0616dd7_catch_alive_init(jule::Ref<_1b8e0c01d_Package>&);
inline void _1d0616dd7_eliminate_package(jule::Ref<_1b8e0c01d_Package>&);
inline void _1d0616dd7_eliminate(jule::Ref<_1d1818549_IR>&);
inline void _1d063d21b_eliminate_dead_code_of_scope(jule::Ref<_1b8cd2c4b_Scope>);
inline jule::U64 _1ba3a81dd_unix(void);
inline jule::U64 _1ba3a81dd_unix_year_to_seconds(jule::Uint,jule::Bool&);
inline jule::U64 _1ba3a81dd_unix_month_to_seconds(jule::Uint,jule::Bool);
inline jule::Str _1d173d293_gen_if(jule::Ref<_1b8cd2c4b_If>);
inline jule::Str _1d173d293_gen_conditional(jule::Ref<_1b8cd2c4b_Conditional>);
inline jule::Str _1d173d293_gen_inf_iter(jule::Ref<_1b8cd2c4b_InfIter>);
inline jule::Str _1d173d293_gen_while_iter(jule::Ref<_1b8cd2c4b_WhileIter>);
inline jule::Trait<_1d173d293_RangeSetter> _1d173d293_get_range_setter(jule::Ref<_1b8cd2c4b_RangeIter>);
inline jule::Str _1d173d293_gen_range_iter(jule::Ref<_1b8cd2c4b_RangeIter>);
inline jule::Str _1d173d293_gen_cont(jule::Ref<_1b8cd2c4b_ContSt>);
inline jule::Str _1d173d293_gen_label(jule::Ref<_1b8cd2c4b_Label>);
inline jule::Str _1d173d293_gen_goto(jule::Ref<_1b8cd2c4b_GotoSt>);
inline jule::Str _1d173d293_gen_postfix(jule::Ref<_1b8cd2c4b_Postfix>);
inline jule::Str _1d173d293_gen_div_by_zero_assign(jule::Ref<_1b8cd2c4b_Assign>);
inline jule::Str _1d173d293_gen_assign(jule::Ref<_1b8cd2c4b_Assign>);
inline jule::Str _1d173d293_gen_multi_assign(jule::Ref<_1b8cd2c4b_MultiAssign>);
inline jule::Str _1d173d293_gen_case(jule::Ref<_1b8cd2c4b_Match>,jule::Ref<_1b8cd2c4b_Case>);
inline jule::Str _1d173d293_gen_match(jule::Ref<_1b8cd2c4b_Match>);
inline jule::Str _1d173d293_gen_fall_st(jule::Ref<_1b8cd2c4b_FallSt>);
inline jule::Str _1d173d293_gen_break_st(jule::Ref<_1b8cd2c4b_BreakSt>);
inline jule::Str _1d173d293_gen_ret_vars(jule::Ref<_1b8cd2c4b_RetSt>);
inline jule::Str _1d173d293_gen_ret_expr_tuple(jule::Ref<_1b8cd2c4b_RetSt>);
inline jule::Str _1d173d293_gen_ret_expr(jule::Ref<_1b8cd2c4b_RetSt>);
inline jule::Str _1d173d293_gen_ret_st(jule::Ref<_1b8cd2c4b_RetSt>);
inline jule::Str _1d173d293_gen_ret_st_with_defaults(jule::Ref<_1b951b088_TypeKind>);
inline jule::Str _1d173d293_gen_recover(jule::Ref<_1b8cd2c4b_Recover>);
inline jule::Str _1d173d293_gen_data_expr(jule::Ref<_1b9523799_Data>);
inline jule::Str _1d173d293_gen_scope_var(jule::Ref<_1b919cb2c_Var>);
inline jule::Str _1d173d293_gen_st(jule::Any);
inline jule::Str _1d173d293_gen_scope(jule::Ref<_1b8cd2c4b_Scope>);
inline jule::Str _1d173d293_gen_fn_scope(jule::Ref<_1d21d97ee_FnIns>);
inline jule::Str _1d173d293_gen_method_scope(jule::Ref<_1d21d97ee_FnIns>);
inline jule::Str _1d1921d28_concat_all_parts(jule::Slice<jule::Str>);
inline jule::Str _1d1921d28_get_accessor(jule::Ref<_1b951b088_TypeKind>);
inline jule::Str _1d1921d28_decompose_common_esq(jule::U8);
inline jule::Str _1d1921d28_sbtoa(jule::U8);
inline jule::Str _1d1921d28_get_str_model(jule::Ref<_1b9d678e5_Const>);
inline jule::Str _1d1921d28_get_bool_model(jule::Ref<_1b9d678e5_Const>);
inline jule::Str _1d1921d28_get_nil_model(void);
inline jule::Str _1d1921d28_gen_float_special_cases(jule::F64);
inline jule::Str _1d1921d28_ftoa(jule::F64,jule::Int);
inline jule::Str _1d1921d28_get_f32_model(jule::Ref<_1b9d678e5_Const>);
inline jule::Str _1d1921d28_get_f64_model(jule::Ref<_1b9d678e5_Const>);
inline jule::Str _1d1921d28_get_float_model(jule::Ref<_1b9523799_Data>);
inline jule::Str _1d1921d28_i64toa(jule::I64);
inline jule::Str _1d1921d28_get_i64_model(jule::Ref<_1b9d678e5_Const>);
inline jule::Str _1d1921d28_u64toa(jule::U64);
inline jule::Str _1d1921d28_get_u64_model(jule::Ref<_1b9d678e5_Const>);
inline jule::Str _1d1921d28_gen_const_expr(jule::Ref<_1b9523799_Data>);
inline jule::Str _1d1921d28_gen_const_expr_model(jule::Ref<_1b9d678e5_Const>);
inline jule::Str _1d1921d28_gen_div_by_zero_binop_expr_model(jule::Str,jule::Any,jule::Any);
inline jule::Str _1d1921d28_gen_binop_expr_model(jule::Ref<_1b8dbae99_BinopExprModel>);
inline jule::Str _1d1921d28_gen_var_expr_model(jule::Ref<_1b919cb2c_Var>);
inline jule::Str _1d1921d28_gen_struct_expr_model(jule::Ref<_1d21c0b59_Struct>);
inline jule::Str _1d1921d28_gen_struct_ins_expr_model(jule::Ref<_1d21c0b59_StructIns>);
inline jule::Str _1d1921d28_gen_unary_expr_model(jule::Ref<_1b8dbae99_UnaryExprModel>);
inline jule::Str _1d1921d28_gen_get_ref_ptr_expr_model(jule::Ref<_1b8dbae99_GetRefPtrExprModel>);
inline jule::Str _1d1921d28_gen_cpp_struct_lit_expr_model(jule::Ref<_1b8dbae99_StructLitExprModel>);
inline jule::Str _1d1921d28_gen_struct_lit_expr_model(jule::Ref<_1b8dbae99_StructLitExprModel>);
inline jule::Str _1d1921d28_gen_alloc_struct_lit_expr_model(jule::Ref<_1b8dbae99_AllocStructLitExprModel>);
inline jule::Str _1d1921d28_gen_casting_expr_model(jule::Ref<_1b8dbae99_CastingExprModel>);
inline jule::Str _1d1921d28_gen_arg_expr_models(jule::Slice<jule::Any>);
inline jule::Str _1d1921d28_gen_expr_model_for_call(jule::Any);
inline jule::Str _1d1921d28_gen_fn_call_expr_model(jule::Ref<_1b8dbae99_FnCallExprModel>);
inline jule::Str _1d1921d28_gen_slice_expr_model(jule::Ref<_1b8dbae99_SliceExprModel>);
inline jule::Str _1d1921d28_gen_indexing_expr_model(jule::Ref<_1b8dbae99_IndexigExprModel>);
inline jule::Str _1d1921d28_gen_anon_fn_expr_model(jule::Ref<_1b8dbae99_AnonFnExprModel>);
inline jule::Str _1d1921d28_gen_map_expr_model(jule::Ref<_1b8dbae99_MapExprModel>);
inline jule::Str _1d1921d28_gen_slicing_expr_model(jule::Ref<_1b8dbae99_SlicingExprModel>);
inline jule::Str _1d1921d28_gen_trait_sub_ident_expr_model(jule::Ref<_1b8dbae99_TraitSubIdentExprModel>);
inline jule::Str _1d1921d28_gen_struct_sub_ident_expr_model(jule::Ref<_1b8dbae99_StructSubIdentExprModel>);
inline jule::Str _1d1921d28_gen_common_ident_expr_model(jule::Ref<_1b8dbae99_CommonIdentExprModel>);
inline jule::Str _1d1921d28_gen_common_sub_ident_expr_model(jule::Ref<_1b8dbae99_CommonSubIdentExprModel>);
inline jule::Str _1d1921d28_gen_array_expr_model(jule::Ref<_1b8dbae99_ArrayExprModel>);
inline jule::Str _1d1921d28_gen_fn_ins_expr_model_common(jule::Ref<_1d21d97ee_FnIns>);
inline jule::Str _1d1921d28_gen_fn_ins_expr_model(jule::Ref<_1d21d97ee_FnIns>);
inline jule::Str _1d1921d28_gen_tuple_expr_model(jule::Ref<_1b8dbae99_TupleExprModel>);
inline jule::Str _1d1921d28_gen_builtin_new_call_expr_model(jule::Ref<_1b8dbae99_BuiltinNewCallExprModel>);
inline jule::Str _1d1921d28_gen_builtin_out_call_expr_model(jule::Ref<_1b8dbae99_BuiltinOutCallExprModel>);
inline jule::Str _1d1921d28_gen_builtin_outln_call_expr_model(jule::Ref<_1b8dbae99_BuiltinOutlnCallExprModel>);
inline jule::Str _1d1921d28_gen_builtin_real_call_expr_model(jule::Ref<_1b8dbae99_BuiltinRealCallExprModel>);
inline jule::Str _1d1921d28_gen_builtin_drop_call_expr_model(jule::Ref<_1b8dbae99_BuiltinDropCallExprModel>);
inline jule::Str _1d1921d28_gen_builtin_panic_call_expr_model(jule::Ref<_1b8dbae99_BuiltinPanicCallExprModel>);
inline jule::Str _1d1921d28_gen_builtin_make_call_expr_model(jule::Ref<_1b8dbae99_BuiltinMakeCallExprModel>);
inline jule::Str _1d1921d28_gen_builtin_append_call_expr_model_assign_opt(jule::Bool,jule::Str&,jule::Ref<_1b951b088_TypeKind>&,jule::Ref<_1b8dbae99_SliceExprModel>&,jule::Ref<_1b8dbae99_BuiltinAppendCallExprModel>&);
inline std::tuple<jule::Str,jule::Bool> _1d1921d28_gen_builtin_append_call_expr_model_assign(jule::Any,jule::Ref<_1b8dbae99_BuiltinAppendCallExprModel>);
inline jule::Str _1d1921d28_gen_builtin_append_call_expr_model(jule::Ref<_1b8dbae99_BuiltinAppendCallExprModel>);
inline jule::Str _1d1921d28_gen_builtin_clone_call_expr_model(jule::Ref<_1b8dbae99_BuiltinCloneCallExprModel>);
inline jule::Str _1d1921d28_gen_sizeof_expr_model(jule::Ref<_1b8dbae99_SizeofExprModel>);
inline jule::Str _1d1921d28_gen_alignof_expr_model(jule::Ref<_1b8dbae99_AlignofExprModel>);
inline jule::Str _1d1921d28_gen_rune_expr_model(jule::Ref<_1b8dbae99_RuneExprModel>);
inline jule::Str _1d1921d28_gen_builtin_error_trait_sub_ident_expr_model(jule::Ref<_1b8dbae99_BuiltinErrorTraitSubIdentExprModel>);
inline jule::Str _1d1921d28_gen_explicit_deref_expr_model(jule::Ref<_1b8dbae99_ExplicitDerefExprModel>);
inline jule::Str _1d1921d28_gen_struct_static_ident_expr_model(jule::Ref<_1b8dbae99_StructStaticIdentExprModel>);
inline jule::Str _1d1921d28_gen_integrated_to_str_expr_model(jule::Ref<_1b8dbae99_IntegratedToStrExprModel>);
inline jule::Str _1d1921d28_gen_ternary_expr_model(jule::Ref<_1b8dbae99_TernaryExprModel>);
inline jule::Str _1d1921d28_gen_expr_model(jule::Any);
inline jule::Str _1d1921d28_gen_expr(jule::Any);
inline jule::Str _1d1921d28_gen_val(jule::Ref<_1b9523799_Value>);
inline jule::Str _1d1921d28_get_init_expr(jule::Ref<_1b951b088_TypeKind>);
inline jule::Str _1ba1e01ce_get_derive_fn_decl_clone(jule::Ref<_1d21c0b59_Struct>&);
inline jule::Str _1ba1e01ce_get_derive_fn_def_clone(jule::Ref<_1d21c0b59_Struct>&);
inline jule::Str _1ba1de70b_as_ident(jule::Str);
inline jule::Str _1ba1de70b_as_jt(jule::Str);
inline jule::Str _1ba1de70b_get_addr_as_ident(jule::Uintptr);
inline jule::Str _1ba1de70b_as_out_ident(jule::Str,jule::Uintptr);
inline jule::Str _1ba1de70b_as_local_ident(jule::Int,jule::Int,jule::Str);
inline jule::Str _1ba1de70b_fn_out_ident(jule::Ref<_1d21d97ee_Fn>&);
inline jule::Str _1ba1de70b_fn_ins_out_ident(jule::Ref<_1d21d97ee_FnIns>&);
inline jule::Str _1ba1de70b_trait_out_ident(jule::Ref<_1b8cd2894_Trait>);
inline jule::Str _1ba1de70b_param_out_ident(jule::Ref<_1d21d97ee_Param>&);
inline jule::Str _1ba1de70b_struct_out_ident(jule::Ref<_1d21c0b59_Struct>&);
inline jule::Str _1ba1de70b_struct_ins_out_ident(jule::Ref<_1d21c0b59_StructIns>&);
inline jule::Str _1ba1de70b_field_out_ident(jule::Ref<_1d21c0b59_Field>&);
inline jule::Str _1ba1de70b_var_out_ident(jule::Ref<_1b919cb2c_Var>);
inline jule::Str _1ba1de70b_iter_begin_label_ident(jule::Uintptr);
inline jule::Str _1ba1de70b_iter_end_label_ident(jule::Uintptr);
inline jule::Str _1ba1de70b_iter_next_label_ident(jule::Uintptr);
inline jule::Str _1ba1de70b_label_ident(jule::Str);
inline jule::Str _1ba1de70b_match_end_label_ident(jule::Uintptr);
inline jule::Str _1ba1de70b_case_begin_label_ident(jule::Uintptr);
inline jule::Str _1ba1de70b_case_end_label_ident(jule::Uintptr);
inline jule::Bool _1ba1e2b3d_any_equals_0(jule::Ref<_1b919cb2c_Var>&,jule::Any&);
inline jule::Bool _1ba1e2b3d_any_equals_1(jule::Ref<_1d21c0b59_FieldIns>&,jule::Any&);
inline jule::Ref<_1d1e5192e_Directive> _1ba1e2b3d_find_directive(jule::Slice<jule::Ref<_1d1e5192e_Directive>>&,jule::Str);
inline jule::Bool _1ba1e2b3d_has_directive(jule::Slice<jule::Ref<_1d1e5192e_Directive>>&,jule::Str);
inline jule::Str _1ba1e2b3d_gen_prim_kind(jule::Ref<_1b951b088_Prim>);
inline jule::Str _1ba1e2b3d_gen_tuple_kind(jule::Ref<_1b951b088_Tuple>);
inline jule::Str _1ba1e2b3d_as_ref_kind(jule::Str);
inline jule::Str _1ba1e2b3d_gen_ref_kind(jule::Ref<_1b951b088_Ref>);
inline jule::Str _1ba1e2b3d_gen_ptr_kind(jule::Ref<_1b951b088_Ptr>);
inline jule::Str _1ba1e2b3d_gen_enum_kind(jule::Ref<_1b8dae520_Enum>);
inline jule::Str _1ba1e2b3d_as_slice_kind(jule::Ref<_1b951b088_TypeKind>);
inline jule::Str _1ba1e2b3d_gen_slice_kind(jule::Ref<_1b951b088_Slc>);
inline jule::Str _1ba1e2b3d_gen_map_kind(jule::Ref<_1b951b088_Map>);
inline jule::Str _1ba1e2b3d_gen_trait_kind_from_ident(jule::Str);
inline jule::Str _1ba1e2b3d_gen_trait_kind(jule::Ref<_1b8cd2894_Trait>);
inline jule::Str _1ba1e2b3d_gen_struct_kind(jule::Ref<_1d21c0b59_Struct>);
inline jule::Str _1ba1e2b3d_gen_struct_kind_ins(jule::Ref<_1d21c0b59_StructIns>);
inline jule::Str _1ba1e2b3d_gen_array_kind(jule::Ref<_1b951b088_Arr>);
inline jule::Str _1ba1e2b3d_gen_fn_anon_decl(jule::Ref<_1d21d97ee_FnIns>);
inline jule::Str _1ba1e2b3d_gen_fn_kind(jule::Ref<_1d21d97ee_FnIns>);
inline jule::Str _1ba1e2b3d_gen_type_kind(jule::Ref<_1b951b088_TypeKind>);
inline void _1ba263eab_add_indent(void);
inline void _1ba263eab_done_indent(void);
inline jule::Str _1ba263eab_indent(void);
inline jule::Bool _1ba263eab_is_cpp_header_file(jule::Str);
inline jule::Str _1ba263eab_gen_links(jule::Ref<_1d1818549_IR>&);
inline jule::Str _1ba263eab_gen_fn_result(jule::Ref<_1d21d97ee_Fn>&);
inline jule::Str _1ba263eab_gen_fn_ins_result(jule::Ref<_1d21d97ee_FnIns>&);
inline jule::Str _1ba263eab_gen_param_prototype(jule::Ref<_1d21d97ee_Param>&);
inline jule::Str _1ba263eab_gen_param_ins(jule::Ref<_1d21d97ee_ParamIns>&);
inline jule::Str _1ba263eab_gen_param_ins_prototype(jule::Ref<_1d21d97ee_ParamIns>&);
inline jule::Str _1ba263eab_gen_param(jule::Ref<_1d21d97ee_Param>&);
inline jule::Str _1ba263eab_gen_params(jule::Slice<jule::Ref<_1d21d97ee_Param>>&);
inline jule::Str _1ba263eab_gen_params_ins(jule::Slice<jule::Ref<_1d21d97ee_ParamIns>>&);
inline jule::Str _1ba263eab_gen_params_prototypes(jule::Slice<jule::Ref<_1d21d97ee_ParamIns>>&);
inline jule::Str _1ba263eab_gen_trait(jule::Ref<_1b8cd2894_Trait>&);
inline jule::Str _1ba263eab_gen_traits_tbl(jule::Ref<_1b9390d86_SymbolTable>&);
inline jule::Str _1ba263eab_gen_traits_pkg(jule::Ref<_1b8e0c01d_Package>&);
inline jule::Str _1ba263eab_gen_traits(jule::Ref<_1d1818549_IR>&);
inline jule::Str _1ba263eab_gen_trait_prototype(jule::Ref<_1b8cd2894_Trait>&);
inline jule::Str _1ba263eab_gen_trait_prototypes(jule::Ref<_1b8e0c01d_Package>&);
inline jule::Str _1ba263eab_gen_struct_plain_prototype(jule::Ref<_1d21c0b59_Struct>&);
inline jule::Str _1ba263eab_gen_struct_plain_prototypes(jule::Slice<jule::Ref<_1d21c0b59_Struct>>&);
inline jule::Str _1ba263eab_gen_struct_traits(jule::Ref<_1d21c0b59_Struct>&);
inline jule::Str _1ba263eab_gen_field_decl(jule::Ref<_1d21c0b59_FieldIns>&);
inline jule::Str _1ba263eab_gen_struct_self_field_type_kind(jule::Ref<_1d21c0b59_StructIns>&);
inline jule::Str _1ba263eab_gen_struct_self_field(jule::Ref<_1d21c0b59_StructIns>&);
inline jule::Str _1ba263eab_gen_struct_self_field_init_st(jule::Ref<_1d21c0b59_StructIns>&);
inline jule::Str _1ba263eab_gen_struct_constructor(jule::Ref<_1d21c0b59_StructIns>&);
inline jule::Str _1ba263eab_gen_struct_destructor(jule::Ref<_1d21c0b59_StructIns>&);
inline jule::Str _1ba263eab_gen_struct_operators(jule::Ref<_1d21c0b59_StructIns>&);
inline jule::Str _1ba263eab_gen_struct_derive_defs_prototypes(jule::Ref<_1d21c0b59_StructIns>&);
inline jule::Str _1ba263eab_gen_struct_ins_prototype(jule::Ref<_1d21c0b59_StructIns>&);
inline jule::Str _1ba263eab_gen_struct_prototype(jule::Ref<_1d21c0b59_Struct>&);
inline jule::Str _1ba263eab_gen_struct_prototypes(jule::Slice<jule::Ref<_1d21c0b59_Struct>>&);
inline jule::Str _1ba263eab_gen_fn_decl_head(jule::Ref<_1d21d97ee_FnIns>&,jule::Bool);
inline jule::Str _1ba263eab_gen_fn_prototype(jule::Ref<_1d21d97ee_Fn>&,jule::Bool);
inline jule::Str _1ba263eab_gen_fn_prototypes(jule::Ref<_1b8e0c01d_Package>&);
inline jule::Str _1ba263eab_gen_prototypes(jule::Ref<_1d1818549_IR>&);
inline jule::Str _1ba263eab_gen_var_init_expr(jule::Ref<_1b919cb2c_Var>&,jule::Str);
inline jule::Str _1ba263eab_gen_var(jule::Ref<_1b919cb2c_Var>);
inline jule::Str _1ba263eab_gen_globals(jule::Slice<jule::Ref<_1b919cb2c_Var>>&);
inline jule::Str _1ba263eab_gen_fn(jule::Ref<_1d21d97ee_Fn>&);
inline jule::Str _1ba263eab_gen_pkg_fns(jule::Ref<_1b8e0c01d_Package>&);
inline jule::Str _1ba263eab_gen_struct_method_defs(jule::Ref<_1d21c0b59_StructIns>&);
inline jule::Str _1ba263eab_gen_struct_ostream(jule::Ref<_1d21c0b59_StructIns>&);
inline jule::Str _1ba263eab_gen_struct_derive_defs(jule::Ref<_1d21c0b59_StructIns>&);
inline jule::Str _1ba263eab_gen_struct_ins(jule::Ref<_1d21c0b59_StructIns>&);
inline jule::Str _1ba263eab_gen_struct(jule::Ref<_1d21c0b59_Struct>&);
inline jule::Str _1ba263eab_gen_structs(jule::Slice<jule::Ref<_1d21c0b59_Struct>>&);
inline jule::Str _1ba263eab_gen_fns(jule::Ref<_1d1818549_IR>&);
inline void _1ba263eab_push_init(jule::Ref<_1b8e0c01d_Package>&,jule::Str&);
inline jule::Str _1ba263eab_gen_init_caller(jule::Ref<_1d1818549_IR>&);
inline void _1ba263eab_append_standard(jule::Str&,jule::Str,jule::Str);
inline jule::Str _1ba263eab_gen(jule::Ref<_1d1818549_IR>&);
inline jule::Str _1d051806e_str_repeat(jule::Str,jule::Int);
inline void _1d051806e_print_error_message(jule::Str);
inline void _1d051806e_help(void);
inline void _1d051806e_version(void);
inline void _1d051806e_tool_distos(void);
inline void _1d051806e_tool_distarch(void);
inline void _1d051806e_tool(void);
inline void _1d051806e_julenv(void);
inline jule::Bool _1d051806e_process_command(void);
inline void _1d051806e_exit_err(jule::Str);
void entry_point(void);
inline void _1d0539b0c___init_common(void);
inline void _1d0556222_init(void);
inline jule::Int _1d055b656_system(jule::Str);
inline std::tuple<jule::Str,jule::Str> _1d055b656_get_option(jule::Slice<jule::Str>&,jule::Int&);
inline jule::Str _1d055b656_get_option_value(jule::Slice<jule::Str>&,jule::Int&);
inline void _1d055b656_parse_out_option(jule::Slice<jule::Str>&,jule::Int&);
inline void _1d055b656_parse_opt_option(jule::Slice<jule::Str>&,jule::Int&);
inline void _1d055b656_check_target_arch(jule::Str);
inline void _1d055b656_check_target_os(jule::Str);
inline void _1d055b656_parse_target_option(jule::Slice<jule::Str>&,jule::Int&);
inline void _1d055b656_parse_compiler_option(jule::Slice<jule::Str>&,jule::Int&);
inline jule::Str _1d055b656_parse_options(jule::Slice<jule::Str>&);
inline void _1d055b656_write_output(jule::Str,jule::Str);
inline void _1d055b656_clear_objects(void);
inline void _1d055b656_compile_ir(jule::Str,jule::Str);
inline void _1d055b656_do_spell(jule::Str,jule::Str,jule::Str);
inline void _1d055b656_check_mode(void);
inline void _1d055b656_check_compiler(void);
inline void _1d055b656_set(void);
inline jule::Bool _1d055b656_is_cpp_source_file(jule::Str);
inline std::tuple<jule::Str,jule::Str> _1d055b656_gen_compile_cmd(jule::Str,jule::Ref<_1d1818549_IR>&);
inline jule::Str _1d055b656_get_compile_path(void);
inline void _1d055b656_apply_target_independent_optimizations(jule::Ref<_1d1818549_IR>&);
inline void _1d055b656_compile_command(void);


static jule::Str _1d055b656_COMPILER = jule::Str("", 0);
static jule::Str _1d055b656_COMPILER_PATH = jule::Str("", 0);
static jule::Str _1d055b656_OUT_DIR = jule::Str("dist", 4);
static jule::Int _1d055b656_MODE = 0LLU;
static jule::Str _1d055b656_OUT_NAME = jule::Str("ir.cpp", 6);
static jule::Str _1d055b656_OUT = jule::Str("", 0);
static jule::Str _1d055b656_CPP_STD = jule::Str("c++17", 5);
static jule::Int _1d055b656_SEMA_FLAGS = 0LL;
static jule::Uintptr _1d071ec7b_STDIN = 0LLU;
static jule::Uintptr _1d071ec7b_STDOUT = 1LLU;
static jule::Uintptr _1d071ec7b_STDERR = 2LLU;
static jule::Slice<jule::Str> _1d070a5e6_ARGS = nullptr;
static jule::Slice<jule::Str> _1d070a5e6_ENV = nullptr;
static jule::Array<jule::Str,4> _1d05571bd_CPP_HEADER_EXTS = jule::Array<jule::Str,4>({jule::Str(".h", 2),jule::Str(".hpp", 4),jule::Str(".hxx", 4),jule::Str(".hh", 3)});
static jule::Array<jule::Str,3> _1d05571bd_CPP_EXTS = jule::Array<jule::Str,3>({jule::Str(".cpp", 4),jule::Str(".cc", 3),jule::Str(".cxx", 4)});
static jule::Array<jule::Str,1> _1d05571bd_OBJECTIVE_CPP_EXTS = jule::Array<jule::Str,1>({jule::Str(".mm", 3)});
static jule::Array<jule::Str,6> _1d05c05aa_DIRECTIVES = jule::Array<jule::Str,6>({jule::Str("cdef", 4),jule::Str("typedef", 7),jule::Str("derive", 6),jule::Str("pass", 4),jule::Str("build", 5),jule::Str("namespace", 9)});
static jule::Array<jule::Str,3> _1d0626eb3_DISTOS = jule::Array<jule::Str,3>({jule::Str("windows", 7),jule::Str("linux", 5),jule::Str("darwin", 6)});
static jule::Array<jule::Str,3> _1d0626eb3_DISTARCH = jule::Array<jule::Str,3>({jule::Str("arm64", 5),jule::Str("amd64", 5),jule::Str("i386", 4)});
static jule::Str _1d062ea48_PATH_STDLIB = jule::Str("", 0);
static jule::Str _1d062ea48_PATH_EXEC = jule::Str("", 0);
static jule::Str _1d062ea48_PATH_WD = jule::Str("", 0);
static jule::Str _1d062ea48_PATH_API = jule::Str("", 0);
static jule::Array<jule::U8,32> _1d2038890_DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
static jule::Array<jule::U8,64> _1d2038890_DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
static jule::Trait<jule::Error> _1d203ade2_OVERFLOW_ERROR = jule::new_struct<_1d203ade2_bits_error>(new( std::nothrow ) _1d203ade2_bits_error(jule::Str("integer overflow", 16)));
static jule::Trait<jule::Error> _1d203ade2_DIVIDE_ERROR = jule::new_struct<_1d203ade2_bits_error>(new( std::nothrow ) _1d203ade2_bits_error(jule::Str("integer divide by zero", 22)));
static jule::Array<jule::F64,6> _1d180b88e__SIN = jule::Array<jule::F64,6>({0.00000000015896230157654656,-0.000000025050747762857807,0.0000027557313621385722,-0.0001984126982958954,0.008333333333322118,-0.1666666666666663});
static jule::Array<jule::F64,6> _1d180b88e__COS = jule::Array<jule::F64,6>({-0.000000000011358536521387682,0.000000002087570084197473,-0.0000002755731417929674,0.000024801587288851704,-0.0013888888888873056,0.041666666666666595});
static jule::Array<jule::F64,3> _1d17d5ed9__TAN_P = jule::Array<jule::F64,3>({-13093.693918138379,1153516.6483858742,-17956525.197648488});
static jule::Array<jule::F64,5> _1d17d5ed9__TAN_Q = jule::Array<jule::F64,5>({1LL,13681.296347069296,-1320892.3444021097,25008380.18233579,-53869575.592945464});
static jule::Array<jule::U64,20> _1d188230a_M_PI4 = jule::Array<jule::U64,20>({1LLU,5040379952546458195LLU,17892431488136887169LLU,13169980181085364355LLU,18204331823439776451LLU,7946843935494350272LLU,905889640498799673LLU,18175356263134875261LLU,15061281708168349961LLU,15220161563773041794LLU,8296664548579374057LLU,4109744767560208502LLU,4607516669194743839LLU,16023283104648321598LLU,15739233654134936430LLU,11424645774684705882LLU,16883842788696515318LLU,8795094592981902804LLU,15561835991111744016LLU,12395701187267450711LLU});
static jule::Array<jule::F64,6> _1d199d15c_P_1R8 = jule::Array<jule::F64,6>({0LL,0.11718749999998865,13.239480659307358,412.05185430737856,3874.7453891396053,7914.479540318917});
static jule::Array<jule::F64,5> _1d199d15c_P_1S8 = jule::Array<jule::F64,5>({114.20737037567841,3650.9308342085346,36956.206026903346,97602.79359349508,30804.27206278888});
static jule::Array<jule::F64,6> _1d199d15c_P_1R5 = jule::Array<jule::F64,6>({0.000000000013199051955624352,0.1171874931906141,6.802751278684329,108.30818299018911,517.6361395331998,528.7152013633375});
static jule::Array<jule::F64,5> _1d199d15c_P_1S5 = jule::Array<jule::F64,5>({59.28059872211313,991.4014187336144,5353.26695291488,7844.690317495512,1504.0468881036106});
static jule::Array<jule::F64,6> _1d199d15c_P_1R3 = jule::Array<jule::F64,6>({0.000000003025039161373736,0.11718686556725359,3.9329775003331564,35.11940355916369,91.05501107507813,48.55906851973649});
static jule::Array<jule::F64,5> _1d199d15c_P_1S3 = jule::Array<jule::F64,5>({34.79130950012515,336.76245874782575,1046.8713997577513,890.8113463982564,103.78793243963928});
static jule::Array<jule::F64,6> _1d199d15c_P_1R2 = jule::Array<jule::F64,6>({0.00000010771083010687374,0.11717621946268335,2.368514966676088,12.242610914826123,17.693971127168773,5.073523125888185});
static jule::Array<jule::F64,5> _1d199d15c_P_1S2 = jule::Array<jule::F64,5>({21.43648593638214,125.29022716840275,232.2764690571628,117.6793732871471,8.364638933716183});
static jule::Array<jule::F64,6> _1d199d15c_Q_1R8 = jule::Array<jule::F64,6>({0LL,-0.10253906249999271,-16.271753454459,-759.6017225139501,-11849.806670242959,-48438.512428575035});
static jule::Array<jule::F64,6> _1d199d15c_Q_1S8 = jule::Array<jule::F64,6>({161.3953697007229,7825.385999233485,133875.33628724958,719657.7236832409,666601.2326177764,-294490.26430383464});
static jule::Array<jule::F64,6> _1d199d15c_Q_1R5 = jule::Array<jule::F64,6>({-0.00000000002089799311417641,-0.10253905024137543,-8.05644828123936,-183.66960747488838,-1373.1937606550816,-2612.4444045321566});
static jule::Array<jule::F64,6> _1d199d15c_Q_1S5 = jule::Array<jule::F64,6>({81.27655013843358,1991.7987346048596,17468.48519249089,49851.42709103523,27948.075163891812,-4719.183547951285});
static jule::Array<jule::F64,6> _1d199d15c_Q_1R3 = jule::Array<jule::F64,6>({-0.000000005078312264617666,-0.10253782982083709,-4.610115811394734,-57.847221656278364,-228.2445407376317,-219.21012847890933});
static jule::Array<jule::F64,6> _1d199d15c_Q_1S3 = jule::Array<jule::F64,6>({47.66515503237295,673.8651126766997,3380.1528667952634,5547.729097207228,1903.119193388108,-135.20119144430734});
static jule::Array<jule::F64,6> _1d199d15c_Q_1R2 = jule::Array<jule::F64,6>({-0.00000017838172751095887,-0.10251704260798555,-2.7522056827818746,-19.663616264370372,-42.32531333728305,-21.371921170370406});
static jule::Array<jule::F64,6> _1d199d15c_Q_1S2 = jule::Array<jule::F64,6>({29.533362906052385,252.98154998219053,757.5028348686454,739.3932053204672,155.94900333666612,-4.959498988226282});
static jule::Array<jule::F64,6> _1d1acb9a5_P_0R8 = jule::Array<jule::F64,6>({0LL,-0.07031249999999004,-8.081670412753498,-257.06310567970485,-2485.216410094288,-5253.043804907295});
static jule::Array<jule::F64,5> _1d1acb9a5_P_0S8 = jule::Array<jule::F64,5>({116.53436461966818,3833.7447536412183,40597.857264847255,116752.97256437592,47627.728414673096});
static jule::Array<jule::F64,6> _1d1acb9a5_P_0R5 = jule::Array<jule::F64,6>({-0.00000000001141254646918945,-0.07031249408735993,-4.159610644705878,-67.67476522651673,-331.23129964917297,-346.4333883656049});
static jule::Array<jule::F64,5> _1d1acb9a5_P_0S5 = jule::Array<jule::F64,5>({60.753938269230034,1051.2523059570458,5978.970943338558,9625.445143577745,2406.058159229391});
static jule::Array<jule::F64,6> _1d1acb9a5_P_0R3 = jule::Array<jule::F64,6>({-0.000000002547046017719519,-0.07031196163814817,-2.409032215495296,-21.96597747348831,-58.07917047017376,-31.44794705948885});
static jule::Array<jule::F64,5> _1d1acb9a5_P_0S3 = jule::Array<jule::F64,5>({35.85603380552097,361.51398305030386,1193.6078379211153,1127.9967985690741,173.58093081333575});
static jule::Array<jule::F64,6> _1d1acb9a5_P_0R2 = jule::Array<jule::F64,6>({-0.00000008875343330325264,-0.07030309954836247,-1.4507384678095299,-7.635696138235278,-11.193166886035675,-3.2336457935133534});
static jule::Array<jule::F64,5> _1d1acb9a5_P_0S2 = jule::Array<jule::F64,5>({22.22029975320888,136.2067942182152,270.4702786580835,153.87539420832033,14.65761769482562});
static jule::Array<jule::F64,6> _1d1acb9a5_Q_0R8 = jule::Array<jule::F64,6>({0LL,0.0732421874999935,11.76820646822527,557.6733802564019,8859.197207564686,37014.62677768878});
static jule::Array<jule::F64,6> _1d1acb9a5_Q_0S8 = jule::Array<jule::F64,6>({163.77602689568982,8098.344946564498,142538.29141912048,803309.2571195144,840501.5798190605,-343899.2935378666});
static jule::Array<jule::F64,6> _1d1acb9a5_Q_0R5 = jule::Array<jule::F64,6>({0.000000000018408596359451553,0.07324217666126848,5.8356350896205695,135.11157728644983,1027.243765961641,1989.9778586460538});
static jule::Array<jule::F64,6> _1d1acb9a5_Q_0S5 = jule::Array<jule::F64,6>({82.77661022365378,2077.81416421393,18847.28877857181,56751.11228949473,35976.75384251145,-5354.342756019448});
static jule::Array<jule::F64,6> _1d1acb9a5_Q_0R3 = jule::Array<jule::F64,6>({0.000000004377410140897386,0.07324111800429114,3.344231375161707,42.621844074541265,170.8080913405656,166.73394869665117});
static jule::Array<jule::F64,6> _1d1acb9a5_Q_0S3 = jule::Array<jule::F64,6>({48.75887297245872,709.689221056606,3704.1482262011136,6460.425167525689,2516.3336892036896,-149.2474518361564});
static jule::Array<jule::F64,6> _1d1acb9a5_Q_0R2 = jule::Array<jule::F64,6>({0.00000015044444488698327,0.07322342659630793,1.99819174093816,14.495602934788574,31.666231750478154,16.252707571092927});
static jule::Array<jule::F64,6> _1d1acb9a5_Q_0S2 = jule::Array<jule::F64,6>({30.36558483552192,269.34811860804984,844.7837575953201,882.9358451124886,212.66638851179883,-5.3109549388266695});
static jule::Array<jule::F64,12> _1d1b837a4__LGAM_A = jule::Array<jule::F64,12>({0.07721566490153287,0.3224670334241136,0.06735230105312927,0.020580808432516733,0.007385550860814029,0.0028905138367341563,0.0011927076318336207,0.0005100697921535113,0.00022086279071390839,0.00010801156724758394,0.000025214456545125733,0.000044864094961891516});
static jule::Array<jule::F64,7> _1d1b837a4__LGAM_R = jule::Array<jule::F64,7>({1LL,1.3920053346762105,0.7219355475671381,0.17193386563280308,0.01864591917156529,0.0007779424963818936,0.000007326684307446256});
static jule::Array<jule::F64,7> _1d1b837a4__LGAM_S = jule::Array<jule::F64,7>({-0.07721566490153287,0.21498241596060885,0.325778796408931,0.14635047265246445,0.02664227030336386,0.0018402845140733772,0.00003194753265841009});
static jule::Array<jule::F64,15> _1d1b837a4__LGAM_T = jule::Array<jule::F64,15>({0.48383612272381005,-0.1475877229945939,0.06462494023913339,-0.032788541075985965,0.01797067508118204,-0.010314224129834144,0.006100538702462913,-0.0036845201678113826,0.0022596478090061247,-0.0014034646998923284,0.000881081882437654,-0.0005385953053567405,0.00031563207090362595,-0.00031275416837512086,0.0003355291926355191});
static jule::Array<jule::F64,6> _1d1b837a4__LGAM_U = jule::Array<jule::F64,6>({-0.07721566490153287,0.6328270640250934,1.4549225013723477,0.9777175279633727,0.22896372806469245,0.013381091853678766});
static jule::Array<jule::F64,6> _1d1b837a4__LGAM_V = jule::Array<jule::F64,6>({1LL,2.4559779371304113,2.128489763798934,0.7692851504566728,0.10422264559336913,0.003217092422824239});
static jule::Array<jule::F64,7> _1d1b837a4__LGAM_W = jule::Array<jule::F64,7>({0.4189385332046727,0.08333333333333297,-0.0027777777772877554,0.0007936505586430196,-0.00059518755745034,0.0008363399189962821,-0.0016309293409657527});
static jule::Array<jule::F64,3> _1d1bb782c_TANH_P = jule::Array<jule::F64,3>({-0.9643991794250523,-99.28772310019185,-1614.6876844170845});
static jule::Array<jule::F64,3> _1d1bb782c_TANH_Q = jule::Array<jule::F64,3>({112.81167849163293,2235.4883906010045,4844.063053251255});
static jule::Array<jule::F64,7> _1d1d32689__GAM_P = jule::Array<jule::F64,7>({0.00016011952247675185,0.0011913514700658638,0.010421379756176158,0.04763678004571372,0.20744822764843598,0.4942148268014971,1LL});
static jule::Array<jule::F64,8> _1d1d32689__GAM_Q = jule::Array<jule::F64,8>({-0.000023158187332412014,0.0005396055804933034,-0.004456419138517973,0.011813978522206043,0.035823639860549865,-0.23459179571824335,0.0714304917030273,1LL});
static jule::Array<jule::F64,5> _1d1d32689__GAM_S = jule::Array<jule::F64,5>({0.0007873113957930937,-0.00022954996161337813,-0.0026813261780578124,0.0034722222160545866,0.08333333333334822});
static jule::Array<jule::F64,32> _1d1dd5808_POW10_TAB = jule::Array<jule::F64,32>({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0,100000000000000000000000.0,1000000000000000000000000.0,10000000000000000000000000.0,100000000000000000000000000.0,1000000000000000000000000000.0,10000000000000000000000000000.0,100000000000000000000000000000.0,1000000000000000000000000000000.0,10000000000000000000000000000000.0});
static jule::Array<jule::F64,10> _1d1dd5808_POW10_POSTAB32 = jule::Array<jule::F64,10>({1LL,100000000000000000000000000000000.0,10000000000000000000000000000000000000000000000000000000000000000.0,1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0,100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0,10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0,1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0,100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0,10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0,1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0});
static jule::Array<jule::F64,11> _1d1dd5808_POW10_NEGTAB32 = jule::Array<jule::F64,11>({1LL,0.00000000000000000000000000000001,0.0000000000000000000000000000000000000000000000000000000000000001,0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001,0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001,0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001,0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001,0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001,0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001,0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001,0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001});
static _1d061d5e7_FloatInfo _1d061d5e7_F32_INFO = _1d061d5e7_FloatInfo(23LLU,8LLU,-127LL);
static _1d061d5e7_FloatInfo _1d061d5e7_F64_INFO = _1d061d5e7_FloatInfo(52LLU,11LLU,-1023LL);
static jule::Array<jule::Array<jule::U64,2>,696> _1d05ec7a2_DETAILED_POWS_OF_TEN = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
static jule::Slice<jule::Int> _1d05eae54_POWTAB = jule::Slice<jule::Int>({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
static jule::Slice<jule::F64> _1d05eae54_F64_POW10 = jule::Slice<jule::F64>({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
static jule::Slice<jule::F32> _1d05eae54_F32_POW10 = jule::Slice<jule::F32>({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL});
static jule::Array<jule::U64,20> _1d14d25dc_U64_POW10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
static jule::Slice<_1d159c685_LeftCheat> _1d159c685_LEFTCHEATS = jule::Slice<_1d159c685_LeftCheat>({_1d159c685_LeftCheat(0LL,jule::Str("", 0)),_1d159c685_LeftCheat(1LL,jule::Str("5", 1)),_1d159c685_LeftCheat(1LL,jule::Str("25", 2)),_1d159c685_LeftCheat(1LL,jule::Str("125", 3)),_1d159c685_LeftCheat(2LL,jule::Str("625", 3)),_1d159c685_LeftCheat(2LL,jule::Str("3125", 4)),_1d159c685_LeftCheat(2LL,jule::Str("15625", 5)),_1d159c685_LeftCheat(3LL,jule::Str("78125", 5)),_1d159c685_LeftCheat(3LL,jule::Str("390625", 6)),_1d159c685_LeftCheat(3LL,jule::Str("1953125", 7)),_1d159c685_LeftCheat(4LL,jule::Str("9765625", 7)),_1d159c685_LeftCheat(4LL,jule::Str("48828125", 8)),_1d159c685_LeftCheat(4LL,jule::Str("244140625", 9)),_1d159c685_LeftCheat(4LL,jule::Str("1220703125", 10)),_1d159c685_LeftCheat(5LL,jule::Str("6103515625", 10)),_1d159c685_LeftCheat(5LL,jule::Str("30517578125", 11)),_1d159c685_LeftCheat(5LL,jule::Str("152587890625", 12)),_1d159c685_LeftCheat(6LL,jule::Str("762939453125", 12)),_1d159c685_LeftCheat(6LL,jule::Str("3814697265625", 13)),_1d159c685_LeftCheat(6LL,jule::Str("19073486328125", 14)),_1d159c685_LeftCheat(7LL,jule::Str("95367431640625", 14)),_1d159c685_LeftCheat(7LL,jule::Str("476837158203125", 15)),_1d159c685_LeftCheat(7LL,jule::Str("2384185791015625", 16)),_1d159c685_LeftCheat(7LL,jule::Str("11920928955078125", 17)),_1d159c685_LeftCheat(8LL,jule::Str("59604644775390625", 17)),_1d159c685_LeftCheat(8LL,jule::Str("298023223876953125", 18)),_1d159c685_LeftCheat(8LL,jule::Str("1490116119384765625", 19)),_1d159c685_LeftCheat(9LL,jule::Str("7450580596923828125", 19)),_1d159c685_LeftCheat(9LL,jule::Str("37252902984619140625", 20)),_1d159c685_LeftCheat(9LL,jule::Str("186264514923095703125", 21)),_1d159c685_LeftCheat(10LL,jule::Str("931322574615478515625", 21)),_1d159c685_LeftCheat(10LL,jule::Str("4656612873077392578125", 22)),_1d159c685_LeftCheat(10LL,jule::Str("23283064365386962890625", 23)),_1d159c685_LeftCheat(10LL,jule::Str("116415321826934814453125", 24)),_1d159c685_LeftCheat(11LL,jule::Str("582076609134674072265625", 24)),_1d159c685_LeftCheat(11LL,jule::Str("2910383045673370361328125", 25)),_1d159c685_LeftCheat(11LL,jule::Str("14551915228366851806640625", 26)),_1d159c685_LeftCheat(12LL,jule::Str("72759576141834259033203125", 26)),_1d159c685_LeftCheat(12LL,jule::Str("363797880709171295166015625", 27)),_1d159c685_LeftCheat(12LL,jule::Str("1818989403545856475830078125", 28)),_1d159c685_LeftCheat(13LL,jule::Str("9094947017729282379150390625", 28)),_1d159c685_LeftCheat(13LL,jule::Str("45474735088646411895751953125", 29)),_1d159c685_LeftCheat(13LL,jule::Str("227373675443232059478759765625", 30)),_1d159c685_LeftCheat(13LL,jule::Str("1136868377216160297393798828125", 31)),_1d159c685_LeftCheat(14LL,jule::Str("5684341886080801486968994140625", 31)),_1d159c685_LeftCheat(14LL,jule::Str("28421709430404007434844970703125", 32)),_1d159c685_LeftCheat(14LL,jule::Str("142108547152020037174224853515625", 33)),_1d159c685_LeftCheat(15LL,jule::Str("710542735760100185871124267578125", 33)),_1d159c685_LeftCheat(15LL,jule::Str("3552713678800500929355621337890625", 34)),_1d159c685_LeftCheat(15LL,jule::Str("17763568394002504646778106689453125", 35)),_1d159c685_LeftCheat(16LL,jule::Str("88817841970012523233890533447265625", 35)),_1d159c685_LeftCheat(16LL,jule::Str("444089209850062616169452667236328125", 36)),_1d159c685_LeftCheat(16LL,jule::Str("2220446049250313080847263336181640625", 37)),_1d159c685_LeftCheat(16LL,jule::Str("11102230246251565404236316680908203125", 38)),_1d159c685_LeftCheat(17LL,jule::Str("55511151231257827021181583404541015625", 38)),_1d159c685_LeftCheat(17LL,jule::Str("277555756156289135105907917022705078125", 39)),_1d159c685_LeftCheat(17LL,jule::Str("1387778780781445675529539585113525390625", 40)),_1d159c685_LeftCheat(18LL,jule::Str("6938893903907228377647697925567626953125", 40)),_1d159c685_LeftCheat(18LL,jule::Str("34694469519536141888238489627838134765625", 41)),_1d159c685_LeftCheat(18LL,jule::Str("173472347597680709441192448139190673828125", 42)),_1d159c685_LeftCheat(19LL,jule::Str("867361737988403547205962240695953369140625", 42))});
static jule::Slice<jule::Str> _1d1d36270_OPTIMIZATIONS = nullptr;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__C = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(0LLU,31LLU,1LLU),_1d2375913_Range16(127LLU,159LLU,1LLU),_1d2375913_Range16(173LLU,1536LLU,1363LLU),_1d2375913_Range16(1537LLU,1541LLU,1LLU),_1d2375913_Range16(1564LLU,1757LLU,193LLU),_1d2375913_Range16(1807LLU,2192LLU,385LLU),_1d2375913_Range16(2193LLU,2274LLU,81LLU),_1d2375913_Range16(6158LLU,8203LLU,2045LLU),_1d2375913_Range16(8204LLU,8207LLU,1LLU),_1d2375913_Range16(8234LLU,8238LLU,1LLU),_1d2375913_Range16(8288LLU,8292LLU,1LLU),_1d2375913_Range16(8294LLU,8303LLU,1LLU),_1d2375913_Range16(55296LLU,63743LLU,1LLU),_1d2375913_Range16(65279LLU,65529LLU,250LLU),_1d2375913_Range16(65530LLU,65531LLU,1LLU)}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(69821LLU,69837LLU,16LLU),_1d2375913_Range32(78896LLU,78911LLU,1LLU),_1d2375913_Range32(113824LLU,113827LLU,1LLU),_1d2375913_Range32(119155LLU,119162LLU,1LLU),_1d2375913_Range32(917505LLU,917536LLU,31LLU),_1d2375913_Range32(917537LLU,917631LLU,1LLU),_1d2375913_Range32(983040LLU,1048573LLU,1LLU),_1d2375913_Range32(1048576LLU,1114109LLU,1LLU)}),2LL));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__CC = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(0LLU,31LLU,1LLU),_1d2375913_Range16(127LLU,159LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),2LL));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__CF = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(173LLU,1536LLU,1363LLU),_1d2375913_Range16(1537LLU,1541LLU,1LLU),_1d2375913_Range16(1564LLU,1757LLU,193LLU),_1d2375913_Range16(1807LLU,2192LLU,385LLU),_1d2375913_Range16(2193LLU,2274LLU,81LLU),_1d2375913_Range16(6158LLU,8203LLU,2045LLU),_1d2375913_Range16(8204LLU,8207LLU,1LLU),_1d2375913_Range16(8234LLU,8238LLU,1LLU),_1d2375913_Range16(8288LLU,8292LLU,1LLU),_1d2375913_Range16(8294LLU,8303LLU,1LLU),_1d2375913_Range16(65279LLU,65529LLU,250LLU),_1d2375913_Range16(65530LLU,65531LLU,1LLU)}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(69821LLU,69837LLU,16LLU),_1d2375913_Range32(78896LLU,78911LLU,1LLU),_1d2375913_Range32(113824LLU,113827LLU,1LLU),_1d2375913_Range32(119155LLU,119162LLU,1LLU),_1d2375913_Range32(917505LLU,917536LLU,31LLU),_1d2375913_Range32(917537LLU,917631LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__CO = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(57344LLU,63743LLU,1LLU)}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(983040LLU,1048573LLU,1LLU),_1d2375913_Range32(1048576LLU,1114109LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__CS = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(55296LLU,57343LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__L = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(65LLU,90LLU,1LLU),_1d2375913_Range16(97LLU,122LLU,1LLU),_1d2375913_Range16(170LLU,181LLU,11LLU),_1d2375913_Range16(186LLU,192LLU,6LLU),_1d2375913_Range16(193LLU,214LLU,1LLU),_1d2375913_Range16(216LLU,246LLU,1LLU),_1d2375913_Range16(248LLU,705LLU,1LLU),_1d2375913_Range16(710LLU,721LLU,1LLU),_1d2375913_Range16(736LLU,740LLU,1LLU),_1d2375913_Range16(748LLU,750LLU,2LLU),_1d2375913_Range16(880LLU,884LLU,1LLU),_1d2375913_Range16(886LLU,887LLU,1LLU),_1d2375913_Range16(890LLU,893LLU,1LLU),_1d2375913_Range16(895LLU,902LLU,7LLU),_1d2375913_Range16(904LLU,906LLU,1LLU),_1d2375913_Range16(908LLU,910LLU,2LLU),_1d2375913_Range16(911LLU,929LLU,1LLU),_1d2375913_Range16(931LLU,1013LLU,1LLU),_1d2375913_Range16(1015LLU,1153LLU,1LLU),_1d2375913_Range16(1162LLU,1327LLU,1LLU),_1d2375913_Range16(1329LLU,1366LLU,1LLU),_1d2375913_Range16(1369LLU,1376LLU,7LLU),_1d2375913_Range16(1377LLU,1416LLU,1LLU),_1d2375913_Range16(1488LLU,1514LLU,1LLU),_1d2375913_Range16(1519LLU,1522LLU,1LLU),_1d2375913_Range16(1568LLU,1610LLU,1LLU),_1d2375913_Range16(1646LLU,1647LLU,1LLU),_1d2375913_Range16(1649LLU,1747LLU,1LLU),_1d2375913_Range16(1749LLU,1765LLU,16LLU),_1d2375913_Range16(1766LLU,1774LLU,8LLU),_1d2375913_Range16(1775LLU,1786LLU,11LLU),_1d2375913_Range16(1787LLU,1788LLU,1LLU),_1d2375913_Range16(1791LLU,1808LLU,17LLU),_1d2375913_Range16(1810LLU,1839LLU,1LLU),_1d2375913_Range16(1869LLU,1957LLU,1LLU),_1d2375913_Range16(1969LLU,1994LLU,25LLU),_1d2375913_Range16(1995LLU,2026LLU,1LLU),_1d2375913_Range16(2036LLU,2037LLU,1LLU),_1d2375913_Range16(2042LLU,2048LLU,6LLU),_1d2375913_Range16(2049LLU,2069LLU,1LLU),_1d2375913_Range16(2074LLU,2084LLU,10LLU),_1d2375913_Range16(2088LLU,2112LLU,24LLU),_1d2375913_Range16(2113LLU,2136LLU,1LLU),_1d2375913_Range16(2144LLU,2154LLU,1LLU),_1d2375913_Range16(2160LLU,2183LLU,1LLU),_1d2375913_Range16(2185LLU,2190LLU,1LLU),_1d2375913_Range16(2208LLU,2249LLU,1LLU),_1d2375913_Range16(2308LLU,2361LLU,1LLU),_1d2375913_Range16(2365LLU,2384LLU,19LLU),_1d2375913_Range16(2392LLU,2401LLU,1LLU),_1d2375913_Range16(2417LLU,2432LLU,1LLU),_1d2375913_Range16(2437LLU,2444LLU,1LLU),_1d2375913_Range16(2447LLU,2448LLU,1LLU),_1d2375913_Range16(2451LLU,2472LLU,1LLU),_1d2375913_Range16(2474LLU,2480LLU,1LLU),_1d2375913_Range16(2482LLU,2486LLU,4LLU),_1d2375913_Range16(2487LLU,2489LLU,1LLU),_1d2375913_Range16(2493LLU,2510LLU,17LLU),_1d2375913_Range16(2524LLU,2525LLU,1LLU),_1d2375913_Range16(2527LLU,2529LLU,1LLU),_1d2375913_Range16(2544LLU,2545LLU,1LLU),_1d2375913_Range16(2556LLU,2565LLU,9LLU),_1d2375913_Range16(2566LLU,2570LLU,1LLU),_1d2375913_Range16(2575LLU,2576LLU,1LLU),_1d2375913_Range16(2579LLU,2600LLU,1LLU),_1d2375913_Range16(2602LLU,2608LLU,1LLU),_1d2375913_Range16(2610LLU,2611LLU,1LLU),_1d2375913_Range16(2613LLU,2614LLU,1LLU),_1d2375913_Range16(2616LLU,2617LLU,1LLU),_1d2375913_Range16(2649LLU,2652LLU,1LLU),_1d2375913_Range16(2654LLU,2674LLU,20LLU),_1d2375913_Range16(2675LLU,2676LLU,1LLU),_1d2375913_Range16(2693LLU,2701LLU,1LLU),_1d2375913_Range16(2703LLU,2705LLU,1LLU),_1d2375913_Range16(2707LLU,2728LLU,1LLU),_1d2375913_Range16(2730LLU,2736LLU,1LLU),_1d2375913_Range16(2738LLU,2739LLU,1LLU),_1d2375913_Range16(2741LLU,2745LLU,1LLU),_1d2375913_Range16(2749LLU,2768LLU,19LLU),_1d2375913_Range16(2784LLU,2785LLU,1LLU),_1d2375913_Range16(2809LLU,2821LLU,12LLU),_1d2375913_Range16(2822LLU,2828LLU,1LLU),_1d2375913_Range16(2831LLU,2832LLU,1LLU),_1d2375913_Range16(2835LLU,2856LLU,1LLU),_1d2375913_Range16(2858LLU,2864LLU,1LLU),_1d2375913_Range16(2866LLU,2867LLU,1LLU),_1d2375913_Range16(2869LLU,2873LLU,1LLU),_1d2375913_Range16(2877LLU,2908LLU,31LLU),_1d2375913_Range16(2909LLU,2911LLU,2LLU),_1d2375913_Range16(2912LLU,2913LLU,1LLU),_1d2375913_Range16(2929LLU,2947LLU,18LLU),_1d2375913_Range16(2949LLU,2954LLU,1LLU),_1d2375913_Range16(2958LLU,2960LLU,1LLU),_1d2375913_Range16(2962LLU,2965LLU,1LLU),_1d2375913_Range16(2969LLU,2970LLU,1LLU),_1d2375913_Range16(2972LLU,2974LLU,2LLU),_1d2375913_Range16(2975LLU,2979LLU,4LLU),_1d2375913_Range16(2980LLU,2984LLU,4LLU),_1d2375913_Range16(2985LLU,2986LLU,1LLU),_1d2375913_Range16(2990LLU,3001LLU,1LLU),_1d2375913_Range16(3024LLU,3077LLU,53LLU),_1d2375913_Range16(3078LLU,3084LLU,1LLU),_1d2375913_Range16(3086LLU,3088LLU,1LLU),_1d2375913_Range16(3090LLU,3112LLU,1LLU),_1d2375913_Range16(3114LLU,3129LLU,1LLU),_1d2375913_Range16(3133LLU,3160LLU,27LLU),_1d2375913_Range16(3161LLU,3162LLU,1LLU),_1d2375913_Range16(3165LLU,3168LLU,3LLU),_1d2375913_Range16(3169LLU,3200LLU,31LLU),_1d2375913_Range16(3205LLU,3212LLU,1LLU),_1d2375913_Range16(3214LLU,3216LLU,1LLU),_1d2375913_Range16(3218LLU,3240LLU,1LLU),_1d2375913_Range16(3242LLU,3251LLU,1LLU),_1d2375913_Range16(3253LLU,3257LLU,1LLU),_1d2375913_Range16(3261LLU,3293LLU,32LLU),_1d2375913_Range16(3294LLU,3296LLU,2LLU),_1d2375913_Range16(3297LLU,3313LLU,16LLU),_1d2375913_Range16(3314LLU,3332LLU,18LLU),_1d2375913_Range16(3333LLU,3340LLU,1LLU),_1d2375913_Range16(3342LLU,3344LLU,1LLU),_1d2375913_Range16(3346LLU,3386LLU,1LLU),_1d2375913_Range16(3389LLU,3406LLU,17LLU),_1d2375913_Range16(3412LLU,3414LLU,1LLU),_1d2375913_Range16(3423LLU,3425LLU,1LLU),_1d2375913_Range16(3450LLU,3455LLU,1LLU),_1d2375913_Range16(3461LLU,3478LLU,1LLU),_1d2375913_Range16(3482LLU,3505LLU,1LLU),_1d2375913_Range16(3507LLU,3515LLU,1LLU),_1d2375913_Range16(3517LLU,3520LLU,3LLU),_1d2375913_Range16(3521LLU,3526LLU,1LLU),_1d2375913_Range16(3585LLU,3632LLU,1LLU),_1d2375913_Range16(3634LLU,3635LLU,1LLU),_1d2375913_Range16(3648LLU,3654LLU,1LLU),_1d2375913_Range16(3713LLU,3714LLU,1LLU),_1d2375913_Range16(3716LLU,3718LLU,2LLU),_1d2375913_Range16(3719LLU,3722LLU,1LLU),_1d2375913_Range16(3724LLU,3747LLU,1LLU),_1d2375913_Range16(3749LLU,3751LLU,2LLU),_1d2375913_Range16(3752LLU,3760LLU,1LLU),_1d2375913_Range16(3762LLU,3763LLU,1LLU),_1d2375913_Range16(3773LLU,3776LLU,3LLU),_1d2375913_Range16(3777LLU,3780LLU,1LLU),_1d2375913_Range16(3782LLU,3804LLU,22LLU),_1d2375913_Range16(3805LLU,3807LLU,1LLU),_1d2375913_Range16(3840LLU,3904LLU,64LLU),_1d2375913_Range16(3905LLU,3911LLU,1LLU),_1d2375913_Range16(3913LLU,3948LLU,1LLU),_1d2375913_Range16(3976LLU,3980LLU,1LLU),_1d2375913_Range16(4096LLU,4138LLU,1LLU),_1d2375913_Range16(4159LLU,4176LLU,17LLU),_1d2375913_Range16(4177LLU,4181LLU,1LLU),_1d2375913_Range16(4186LLU,4189LLU,1LLU),_1d2375913_Range16(4193LLU,4197LLU,4LLU),_1d2375913_Range16(4198LLU,4206LLU,8LLU),_1d2375913_Range16(4207LLU,4208LLU,1LLU),_1d2375913_Range16(4213LLU,4225LLU,1LLU),_1d2375913_Range16(4238LLU,4256LLU,18LLU),_1d2375913_Range16(4257LLU,4293LLU,1LLU),_1d2375913_Range16(4295LLU,4301LLU,6LLU),_1d2375913_Range16(4304LLU,4346LLU,1LLU),_1d2375913_Range16(4348LLU,4680LLU,1LLU),_1d2375913_Range16(4682LLU,4685LLU,1LLU),_1d2375913_Range16(4688LLU,4694LLU,1LLU),_1d2375913_Range16(4696LLU,4698LLU,2LLU),_1d2375913_Range16(4699LLU,4701LLU,1LLU),_1d2375913_Range16(4704LLU,4744LLU,1LLU),_1d2375913_Range16(4746LLU,4749LLU,1LLU),_1d2375913_Range16(4752LLU,4784LLU,1LLU),_1d2375913_Range16(4786LLU,4789LLU,1LLU),_1d2375913_Range16(4792LLU,4798LLU,1LLU),_1d2375913_Range16(4800LLU,4802LLU,2LLU),_1d2375913_Range16(4803LLU,4805LLU,1LLU),_1d2375913_Range16(4808LLU,4822LLU,1LLU),_1d2375913_Range16(4824LLU,4880LLU,1LLU),_1d2375913_Range16(4882LLU,4885LLU,1LLU),_1d2375913_Range16(4888LLU,4954LLU,1LLU),_1d2375913_Range16(4992LLU,5007LLU,1LLU),_1d2375913_Range16(5024LLU,5109LLU,1LLU),_1d2375913_Range16(5112LLU,5117LLU,1LLU),_1d2375913_Range16(5121LLU,5740LLU,1LLU),_1d2375913_Range16(5743LLU,5759LLU,1LLU),_1d2375913_Range16(5761LLU,5786LLU,1LLU),_1d2375913_Range16(5792LLU,5866LLU,1LLU),_1d2375913_Range16(5873LLU,5880LLU,1LLU),_1d2375913_Range16(5888LLU,5905LLU,1LLU),_1d2375913_Range16(5919LLU,5937LLU,1LLU),_1d2375913_Range16(5952LLU,5969LLU,1LLU),_1d2375913_Range16(5984LLU,5996LLU,1LLU),_1d2375913_Range16(5998LLU,6000LLU,1LLU),_1d2375913_Range16(6016LLU,6067LLU,1LLU),_1d2375913_Range16(6103LLU,6108LLU,5LLU),_1d2375913_Range16(6176LLU,6264LLU,1LLU),_1d2375913_Range16(6272LLU,6276LLU,1LLU),_1d2375913_Range16(6279LLU,6312LLU,1LLU),_1d2375913_Range16(6314LLU,6320LLU,6LLU),_1d2375913_Range16(6321LLU,6389LLU,1LLU),_1d2375913_Range16(6400LLU,6430LLU,1LLU),_1d2375913_Range16(6480LLU,6509LLU,1LLU),_1d2375913_Range16(6512LLU,6516LLU,1LLU),_1d2375913_Range16(6528LLU,6571LLU,1LLU),_1d2375913_Range16(6576LLU,6601LLU,1LLU),_1d2375913_Range16(6656LLU,6678LLU,1LLU),_1d2375913_Range16(6688LLU,6740LLU,1LLU),_1d2375913_Range16(6823LLU,6917LLU,94LLU),_1d2375913_Range16(6918LLU,6963LLU,1LLU),_1d2375913_Range16(6981LLU,6988LLU,1LLU),_1d2375913_Range16(7043LLU,7072LLU,1LLU),_1d2375913_Range16(7086LLU,7087LLU,1LLU),_1d2375913_Range16(7098LLU,7141LLU,1LLU),_1d2375913_Range16(7168LLU,7203LLU,1LLU),_1d2375913_Range16(7245LLU,7247LLU,1LLU),_1d2375913_Range16(7258LLU,7293LLU,1LLU),_1d2375913_Range16(7296LLU,7304LLU,1LLU),_1d2375913_Range16(7312LLU,7354LLU,1LLU),_1d2375913_Range16(7357LLU,7359LLU,1LLU),_1d2375913_Range16(7401LLU,7404LLU,1LLU),_1d2375913_Range16(7406LLU,7411LLU,1LLU),_1d2375913_Range16(7413LLU,7414LLU,1LLU),_1d2375913_Range16(7418LLU,7424LLU,6LLU),_1d2375913_Range16(7425LLU,7615LLU,1LLU),_1d2375913_Range16(7680LLU,7957LLU,1LLU),_1d2375913_Range16(7960LLU,7965LLU,1LLU),_1d2375913_Range16(7968LLU,8005LLU,1LLU),_1d2375913_Range16(8008LLU,8013LLU,1LLU),_1d2375913_Range16(8016LLU,8023LLU,1LLU),_1d2375913_Range16(8025LLU,8031LLU,2LLU),_1d2375913_Range16(8032LLU,8061LLU,1LLU),_1d2375913_Range16(8064LLU,8116LLU,1LLU),_1d2375913_Range16(8118LLU,8124LLU,1LLU),_1d2375913_Range16(8126LLU,8130LLU,4LLU),_1d2375913_Range16(8131LLU,8132LLU,1LLU),_1d2375913_Range16(8134LLU,8140LLU,1LLU),_1d2375913_Range16(8144LLU,8147LLU,1LLU),_1d2375913_Range16(8150LLU,8155LLU,1LLU),_1d2375913_Range16(8160LLU,8172LLU,1LLU),_1d2375913_Range16(8178LLU,8180LLU,1LLU),_1d2375913_Range16(8182LLU,8188LLU,1LLU),_1d2375913_Range16(8305LLU,8319LLU,14LLU),_1d2375913_Range16(8336LLU,8348LLU,1LLU),_1d2375913_Range16(8450LLU,8455LLU,5LLU),_1d2375913_Range16(8458LLU,8467LLU,1LLU),_1d2375913_Range16(8469LLU,8473LLU,4LLU),_1d2375913_Range16(8474LLU,8477LLU,1LLU),_1d2375913_Range16(8484LLU,8490LLU,2LLU),_1d2375913_Range16(8491LLU,8493LLU,1LLU),_1d2375913_Range16(8495LLU,8505LLU,1LLU),_1d2375913_Range16(8508LLU,8511LLU,1LLU),_1d2375913_Range16(8517LLU,8521LLU,1LLU),_1d2375913_Range16(8526LLU,8579LLU,53LLU),_1d2375913_Range16(8580LLU,11264LLU,2684LLU),_1d2375913_Range16(11265LLU,11492LLU,1LLU),_1d2375913_Range16(11499LLU,11502LLU,1LLU),_1d2375913_Range16(11506LLU,11507LLU,1LLU),_1d2375913_Range16(11520LLU,11557LLU,1LLU),_1d2375913_Range16(11559LLU,11565LLU,6LLU),_1d2375913_Range16(11568LLU,11623LLU,1LLU),_1d2375913_Range16(11631LLU,11648LLU,17LLU),_1d2375913_Range16(11649LLU,11670LLU,1LLU),_1d2375913_Range16(11680LLU,11686LLU,1LLU),_1d2375913_Range16(11688LLU,11694LLU,1LLU),_1d2375913_Range16(11696LLU,11702LLU,1LLU),_1d2375913_Range16(11704LLU,11710LLU,1LLU),_1d2375913_Range16(11712LLU,11718LLU,1LLU),_1d2375913_Range16(11720LLU,11726LLU,1LLU),_1d2375913_Range16(11728LLU,11734LLU,1LLU),_1d2375913_Range16(11736LLU,11742LLU,1LLU),_1d2375913_Range16(11823LLU,12293LLU,470LLU),_1d2375913_Range16(12294LLU,12337LLU,43LLU),_1d2375913_Range16(12338LLU,12341LLU,1LLU),_1d2375913_Range16(12347LLU,12348LLU,1LLU),_1d2375913_Range16(12353LLU,12438LLU,1LLU),_1d2375913_Range16(12445LLU,12447LLU,1LLU),_1d2375913_Range16(12449LLU,12538LLU,1LLU),_1d2375913_Range16(12540LLU,12543LLU,1LLU),_1d2375913_Range16(12549LLU,12591LLU,1LLU),_1d2375913_Range16(12593LLU,12686LLU,1LLU),_1d2375913_Range16(12704LLU,12735LLU,1LLU),_1d2375913_Range16(12784LLU,12799LLU,1LLU),_1d2375913_Range16(13312LLU,19903LLU,1LLU),_1d2375913_Range16(19968LLU,42124LLU,1LLU),_1d2375913_Range16(42192LLU,42237LLU,1LLU),_1d2375913_Range16(42240LLU,42508LLU,1LLU),_1d2375913_Range16(42512LLU,42527LLU,1LLU),_1d2375913_Range16(42538LLU,42539LLU,1LLU),_1d2375913_Range16(42560LLU,42606LLU,1LLU),_1d2375913_Range16(42623LLU,42653LLU,1LLU),_1d2375913_Range16(42656LLU,42725LLU,1LLU),_1d2375913_Range16(42775LLU,42783LLU,1LLU),_1d2375913_Range16(42786LLU,42888LLU,1LLU),_1d2375913_Range16(42891LLU,42954LLU,1LLU),_1d2375913_Range16(42960LLU,42961LLU,1LLU),_1d2375913_Range16(42963LLU,42965LLU,2LLU),_1d2375913_Range16(42966LLU,42969LLU,1LLU),_1d2375913_Range16(42994LLU,43009LLU,1LLU),_1d2375913_Range16(43011LLU,43013LLU,1LLU),_1d2375913_Range16(43015LLU,43018LLU,1LLU),_1d2375913_Range16(43020LLU,43042LLU,1LLU),_1d2375913_Range16(43072LLU,43123LLU,1LLU),_1d2375913_Range16(43138LLU,43187LLU,1LLU),_1d2375913_Range16(43250LLU,43255LLU,1LLU),_1d2375913_Range16(43259LLU,43261LLU,2LLU),_1d2375913_Range16(43262LLU,43274LLU,12LLU),_1d2375913_Range16(43275LLU,43301LLU,1LLU),_1d2375913_Range16(43312LLU,43334LLU,1LLU),_1d2375913_Range16(43360LLU,43388LLU,1LLU),_1d2375913_Range16(43396LLU,43442LLU,1LLU),_1d2375913_Range16(43471LLU,43488LLU,17LLU),_1d2375913_Range16(43489LLU,43492LLU,1LLU),_1d2375913_Range16(43494LLU,43503LLU,1LLU),_1d2375913_Range16(43514LLU,43518LLU,1LLU),_1d2375913_Range16(43520LLU,43560LLU,1LLU),_1d2375913_Range16(43584LLU,43586LLU,1LLU),_1d2375913_Range16(43588LLU,43595LLU,1LLU),_1d2375913_Range16(43616LLU,43638LLU,1LLU),_1d2375913_Range16(43642LLU,43646LLU,4LLU),_1d2375913_Range16(43647LLU,43695LLU,1LLU),_1d2375913_Range16(43697LLU,43701LLU,4LLU),_1d2375913_Range16(43702LLU,43705LLU,3LLU),_1d2375913_Range16(43706LLU,43709LLU,1LLU),_1d2375913_Range16(43712LLU,43714LLU,2LLU),_1d2375913_Range16(43739LLU,43741LLU,1LLU),_1d2375913_Range16(43744LLU,43754LLU,1LLU),_1d2375913_Range16(43762LLU,43764LLU,1LLU),_1d2375913_Range16(43777LLU,43782LLU,1LLU),_1d2375913_Range16(43785LLU,43790LLU,1LLU),_1d2375913_Range16(43793LLU,43798LLU,1LLU),_1d2375913_Range16(43808LLU,43814LLU,1LLU),_1d2375913_Range16(43816LLU,43822LLU,1LLU),_1d2375913_Range16(43824LLU,43866LLU,1LLU),_1d2375913_Range16(43868LLU,43881LLU,1LLU),_1d2375913_Range16(43888LLU,44002LLU,1LLU),_1d2375913_Range16(44032LLU,55203LLU,1LLU),_1d2375913_Range16(55216LLU,55238LLU,1LLU),_1d2375913_Range16(55243LLU,55291LLU,1LLU),_1d2375913_Range16(63744LLU,64109LLU,1LLU),_1d2375913_Range16(64112LLU,64217LLU,1LLU),_1d2375913_Range16(64256LLU,64262LLU,1LLU),_1d2375913_Range16(64275LLU,64279LLU,1LLU),_1d2375913_Range16(64285LLU,64287LLU,2LLU),_1d2375913_Range16(64288LLU,64296LLU,1LLU),_1d2375913_Range16(64298LLU,64310LLU,1LLU),_1d2375913_Range16(64312LLU,64316LLU,1LLU),_1d2375913_Range16(64318LLU,64320LLU,2LLU),_1d2375913_Range16(64321LLU,64323LLU,2LLU),_1d2375913_Range16(64324LLU,64326LLU,2LLU),_1d2375913_Range16(64327LLU,64433LLU,1LLU),_1d2375913_Range16(64467LLU,64829LLU,1LLU),_1d2375913_Range16(64848LLU,64911LLU,1LLU),_1d2375913_Range16(64914LLU,64967LLU,1LLU),_1d2375913_Range16(65008LLU,65019LLU,1LLU),_1d2375913_Range16(65136LLU,65140LLU,1LLU),_1d2375913_Range16(65142LLU,65276LLU,1LLU),_1d2375913_Range16(65313LLU,65338LLU,1LLU),_1d2375913_Range16(65345LLU,65370LLU,1LLU),_1d2375913_Range16(65382LLU,65470LLU,1LLU),_1d2375913_Range16(65474LLU,65479LLU,1LLU),_1d2375913_Range16(65482LLU,65487LLU,1LLU),_1d2375913_Range16(65490LLU,65495LLU,1LLU),_1d2375913_Range16(65498LLU,65500LLU,1LLU)}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(65536LLU,65547LLU,1LLU),_1d2375913_Range32(65549LLU,65574LLU,1LLU),_1d2375913_Range32(65576LLU,65594LLU,1LLU),_1d2375913_Range32(65596LLU,65597LLU,1LLU),_1d2375913_Range32(65599LLU,65613LLU,1LLU),_1d2375913_Range32(65616LLU,65629LLU,1LLU),_1d2375913_Range32(65664LLU,65786LLU,1LLU),_1d2375913_Range32(66176LLU,66204LLU,1LLU),_1d2375913_Range32(66208LLU,66256LLU,1LLU),_1d2375913_Range32(66304LLU,66335LLU,1LLU),_1d2375913_Range32(66349LLU,66368LLU,1LLU),_1d2375913_Range32(66370LLU,66377LLU,1LLU),_1d2375913_Range32(66384LLU,66421LLU,1LLU),_1d2375913_Range32(66432LLU,66461LLU,1LLU),_1d2375913_Range32(66464LLU,66499LLU,1LLU),_1d2375913_Range32(66504LLU,66511LLU,1LLU),_1d2375913_Range32(66560LLU,66717LLU,1LLU),_1d2375913_Range32(66736LLU,66771LLU,1LLU),_1d2375913_Range32(66776LLU,66811LLU,1LLU),_1d2375913_Range32(66816LLU,66855LLU,1LLU),_1d2375913_Range32(66864LLU,66915LLU,1LLU),_1d2375913_Range32(66928LLU,66938LLU,1LLU),_1d2375913_Range32(66940LLU,66954LLU,1LLU),_1d2375913_Range32(66956LLU,66962LLU,1LLU),_1d2375913_Range32(66964LLU,66965LLU,1LLU),_1d2375913_Range32(66967LLU,66977LLU,1LLU),_1d2375913_Range32(66979LLU,66993LLU,1LLU),_1d2375913_Range32(66995LLU,67001LLU,1LLU),_1d2375913_Range32(67003LLU,67004LLU,1LLU),_1d2375913_Range32(67072LLU,67382LLU,1LLU),_1d2375913_Range32(67392LLU,67413LLU,1LLU),_1d2375913_Range32(67424LLU,67431LLU,1LLU),_1d2375913_Range32(67456LLU,67461LLU,1LLU),_1d2375913_Range32(67463LLU,67504LLU,1LLU),_1d2375913_Range32(67506LLU,67514LLU,1LLU),_1d2375913_Range32(67584LLU,67589LLU,1LLU),_1d2375913_Range32(67592LLU,67594LLU,2LLU),_1d2375913_Range32(67595LLU,67637LLU,1LLU),_1d2375913_Range32(67639LLU,67640LLU,1LLU),_1d2375913_Range32(67644LLU,67647LLU,3LLU),_1d2375913_Range32(67648LLU,67669LLU,1LLU),_1d2375913_Range32(67680LLU,67702LLU,1LLU),_1d2375913_Range32(67712LLU,67742LLU,1LLU),_1d2375913_Range32(67808LLU,67826LLU,1LLU),_1d2375913_Range32(67828LLU,67829LLU,1LLU),_1d2375913_Range32(67840LLU,67861LLU,1LLU),_1d2375913_Range32(67872LLU,67897LLU,1LLU),_1d2375913_Range32(67968LLU,68023LLU,1LLU),_1d2375913_Range32(68030LLU,68031LLU,1LLU),_1d2375913_Range32(68096LLU,68112LLU,16LLU),_1d2375913_Range32(68113LLU,68115LLU,1LLU),_1d2375913_Range32(68117LLU,68119LLU,1LLU),_1d2375913_Range32(68121LLU,68149LLU,1LLU),_1d2375913_Range32(68192LLU,68220LLU,1LLU),_1d2375913_Range32(68224LLU,68252LLU,1LLU),_1d2375913_Range32(68288LLU,68295LLU,1LLU),_1d2375913_Range32(68297LLU,68324LLU,1LLU),_1d2375913_Range32(68352LLU,68405LLU,1LLU),_1d2375913_Range32(68416LLU,68437LLU,1LLU),_1d2375913_Range32(68448LLU,68466LLU,1LLU),_1d2375913_Range32(68480LLU,68497LLU,1LLU),_1d2375913_Range32(68608LLU,68680LLU,1LLU),_1d2375913_Range32(68736LLU,68786LLU,1LLU),_1d2375913_Range32(68800LLU,68850LLU,1LLU),_1d2375913_Range32(68864LLU,68899LLU,1LLU),_1d2375913_Range32(69248LLU,69289LLU,1LLU),_1d2375913_Range32(69296LLU,69297LLU,1LLU),_1d2375913_Range32(69376LLU,69404LLU,1LLU),_1d2375913_Range32(69415LLU,69424LLU,9LLU),_1d2375913_Range32(69425LLU,69445LLU,1LLU),_1d2375913_Range32(69488LLU,69505LLU,1LLU),_1d2375913_Range32(69552LLU,69572LLU,1LLU),_1d2375913_Range32(69600LLU,69622LLU,1LLU),_1d2375913_Range32(69635LLU,69687LLU,1LLU),_1d2375913_Range32(69745LLU,69746LLU,1LLU),_1d2375913_Range32(69749LLU,69763LLU,14LLU),_1d2375913_Range32(69764LLU,69807LLU,1LLU),_1d2375913_Range32(69840LLU,69864LLU,1LLU),_1d2375913_Range32(69891LLU,69926LLU,1LLU),_1d2375913_Range32(69956LLU,69959LLU,3LLU),_1d2375913_Range32(69968LLU,70002LLU,1LLU),_1d2375913_Range32(70006LLU,70019LLU,13LLU),_1d2375913_Range32(70020LLU,70066LLU,1LLU),_1d2375913_Range32(70081LLU,70084LLU,1LLU),_1d2375913_Range32(70106LLU,70108LLU,2LLU),_1d2375913_Range32(70144LLU,70161LLU,1LLU),_1d2375913_Range32(70163LLU,70187LLU,1LLU),_1d2375913_Range32(70207LLU,70208LLU,1LLU),_1d2375913_Range32(70272LLU,70278LLU,1LLU),_1d2375913_Range32(70280LLU,70282LLU,2LLU),_1d2375913_Range32(70283LLU,70285LLU,1LLU),_1d2375913_Range32(70287LLU,70301LLU,1LLU),_1d2375913_Range32(70303LLU,70312LLU,1LLU),_1d2375913_Range32(70320LLU,70366LLU,1LLU),_1d2375913_Range32(70405LLU,70412LLU,1LLU),_1d2375913_Range32(70415LLU,70416LLU,1LLU),_1d2375913_Range32(70419LLU,70440LLU,1LLU),_1d2375913_Range32(70442LLU,70448LLU,1LLU),_1d2375913_Range32(70450LLU,70451LLU,1LLU),_1d2375913_Range32(70453LLU,70457LLU,1LLU),_1d2375913_Range32(70461LLU,70480LLU,19LLU),_1d2375913_Range32(70493LLU,70497LLU,1LLU),_1d2375913_Range32(70656LLU,70708LLU,1LLU),_1d2375913_Range32(70727LLU,70730LLU,1LLU),_1d2375913_Range32(70751LLU,70753LLU,1LLU),_1d2375913_Range32(70784LLU,70831LLU,1LLU),_1d2375913_Range32(70852LLU,70853LLU,1LLU),_1d2375913_Range32(70855LLU,71040LLU,185LLU),_1d2375913_Range32(71041LLU,71086LLU,1LLU),_1d2375913_Range32(71128LLU,71131LLU,1LLU),_1d2375913_Range32(71168LLU,71215LLU,1LLU),_1d2375913_Range32(71236LLU,71296LLU,60LLU),_1d2375913_Range32(71297LLU,71338LLU,1LLU),_1d2375913_Range32(71352LLU,71424LLU,72LLU),_1d2375913_Range32(71425LLU,71450LLU,1LLU),_1d2375913_Range32(71488LLU,71494LLU,1LLU),_1d2375913_Range32(71680LLU,71723LLU,1LLU),_1d2375913_Range32(71840LLU,71903LLU,1LLU),_1d2375913_Range32(71935LLU,71942LLU,1LLU),_1d2375913_Range32(71945LLU,71948LLU,3LLU),_1d2375913_Range32(71949LLU,71955LLU,1LLU),_1d2375913_Range32(71957LLU,71958LLU,1LLU),_1d2375913_Range32(71960LLU,71983LLU,1LLU),_1d2375913_Range32(71999LLU,72001LLU,2LLU),_1d2375913_Range32(72096LLU,72103LLU,1LLU),_1d2375913_Range32(72106LLU,72144LLU,1LLU),_1d2375913_Range32(72161LLU,72163LLU,2LLU),_1d2375913_Range32(72192LLU,72203LLU,11LLU),_1d2375913_Range32(72204LLU,72242LLU,1LLU),_1d2375913_Range32(72250LLU,72272LLU,22LLU),_1d2375913_Range32(72284LLU,72329LLU,1LLU),_1d2375913_Range32(72349LLU,72368LLU,19LLU),_1d2375913_Range32(72369LLU,72440LLU,1LLU),_1d2375913_Range32(72704LLU,72712LLU,1LLU),_1d2375913_Range32(72714LLU,72750LLU,1LLU),_1d2375913_Range32(72768LLU,72818LLU,50LLU),_1d2375913_Range32(72819LLU,72847LLU,1LLU),_1d2375913_Range32(72960LLU,72966LLU,1LLU),_1d2375913_Range32(72968LLU,72969LLU,1LLU),_1d2375913_Range32(72971LLU,73008LLU,1LLU),_1d2375913_Range32(73030LLU,73056LLU,26LLU),_1d2375913_Range32(73057LLU,73061LLU,1LLU),_1d2375913_Range32(73063LLU,73064LLU,1LLU),_1d2375913_Range32(73066LLU,73097LLU,1LLU),_1d2375913_Range32(73112LLU,73440LLU,328LLU),_1d2375913_Range32(73441LLU,73458LLU,1LLU),_1d2375913_Range32(73474LLU,73476LLU,2LLU),_1d2375913_Range32(73477LLU,73488LLU,1LLU),_1d2375913_Range32(73490LLU,73523LLU,1LLU),_1d2375913_Range32(73648LLU,73728LLU,80LLU),_1d2375913_Range32(73729LLU,74649LLU,1LLU),_1d2375913_Range32(74880LLU,75075LLU,1LLU),_1d2375913_Range32(77712LLU,77808LLU,1LLU),_1d2375913_Range32(77824LLU,78895LLU,1LLU),_1d2375913_Range32(78913LLU,78918LLU,1LLU),_1d2375913_Range32(82944LLU,83526LLU,1LLU),_1d2375913_Range32(92160LLU,92728LLU,1LLU),_1d2375913_Range32(92736LLU,92766LLU,1LLU),_1d2375913_Range32(92784LLU,92862LLU,1LLU),_1d2375913_Range32(92880LLU,92909LLU,1LLU),_1d2375913_Range32(92928LLU,92975LLU,1LLU),_1d2375913_Range32(92992LLU,92995LLU,1LLU),_1d2375913_Range32(93027LLU,93047LLU,1LLU),_1d2375913_Range32(93053LLU,93071LLU,1LLU),_1d2375913_Range32(93760LLU,93823LLU,1LLU),_1d2375913_Range32(93952LLU,94026LLU,1LLU),_1d2375913_Range32(94032LLU,94099LLU,67LLU),_1d2375913_Range32(94100LLU,94111LLU,1LLU),_1d2375913_Range32(94176LLU,94177LLU,1LLU),_1d2375913_Range32(94179LLU,94208LLU,29LLU),_1d2375913_Range32(94209LLU,100343LLU,1LLU),_1d2375913_Range32(100352LLU,101589LLU,1LLU),_1d2375913_Range32(101632LLU,101640LLU,1LLU),_1d2375913_Range32(110576LLU,110579LLU,1LLU),_1d2375913_Range32(110581LLU,110587LLU,1LLU),_1d2375913_Range32(110589LLU,110590LLU,1LLU),_1d2375913_Range32(110592LLU,110882LLU,1LLU),_1d2375913_Range32(110898LLU,110928LLU,30LLU),_1d2375913_Range32(110929LLU,110930LLU,1LLU),_1d2375913_Range32(110933LLU,110948LLU,15LLU),_1d2375913_Range32(110949LLU,110951LLU,1LLU),_1d2375913_Range32(110960LLU,111355LLU,1LLU),_1d2375913_Range32(113664LLU,113770LLU,1LLU),_1d2375913_Range32(113776LLU,113788LLU,1LLU),_1d2375913_Range32(113792LLU,113800LLU,1LLU),_1d2375913_Range32(113808LLU,113817LLU,1LLU),_1d2375913_Range32(119808LLU,119892LLU,1LLU),_1d2375913_Range32(119894LLU,119964LLU,1LLU),_1d2375913_Range32(119966LLU,119967LLU,1LLU),_1d2375913_Range32(119970LLU,119973LLU,3LLU),_1d2375913_Range32(119974LLU,119977LLU,3LLU),_1d2375913_Range32(119978LLU,119980LLU,1LLU),_1d2375913_Range32(119982LLU,119993LLU,1LLU),_1d2375913_Range32(119995LLU,119997LLU,2LLU),_1d2375913_Range32(119998LLU,120003LLU,1LLU),_1d2375913_Range32(120005LLU,120069LLU,1LLU),_1d2375913_Range32(120071LLU,120074LLU,1LLU),_1d2375913_Range32(120077LLU,120084LLU,1LLU),_1d2375913_Range32(120086LLU,120092LLU,1LLU),_1d2375913_Range32(120094LLU,120121LLU,1LLU),_1d2375913_Range32(120123LLU,120126LLU,1LLU),_1d2375913_Range32(120128LLU,120132LLU,1LLU),_1d2375913_Range32(120134LLU,120138LLU,4LLU),_1d2375913_Range32(120139LLU,120144LLU,1LLU),_1d2375913_Range32(120146LLU,120485LLU,1LLU),_1d2375913_Range32(120488LLU,120512LLU,1LLU),_1d2375913_Range32(120514LLU,120538LLU,1LLU),_1d2375913_Range32(120540LLU,120570LLU,1LLU),_1d2375913_Range32(120572LLU,120596LLU,1LLU),_1d2375913_Range32(120598LLU,120628LLU,1LLU),_1d2375913_Range32(120630LLU,120654LLU,1LLU),_1d2375913_Range32(120656LLU,120686LLU,1LLU),_1d2375913_Range32(120688LLU,120712LLU,1LLU),_1d2375913_Range32(120714LLU,120744LLU,1LLU),_1d2375913_Range32(120746LLU,120770LLU,1LLU),_1d2375913_Range32(120772LLU,120779LLU,1LLU),_1d2375913_Range32(122624LLU,122654LLU,1LLU),_1d2375913_Range32(122661LLU,122666LLU,1LLU),_1d2375913_Range32(122928LLU,122989LLU,1LLU),_1d2375913_Range32(123136LLU,123180LLU,1LLU),_1d2375913_Range32(123191LLU,123197LLU,1LLU),_1d2375913_Range32(123214LLU,123536LLU,322LLU),_1d2375913_Range32(123537LLU,123565LLU,1LLU),_1d2375913_Range32(123584LLU,123627LLU,1LLU),_1d2375913_Range32(124112LLU,124139LLU,1LLU),_1d2375913_Range32(124896LLU,124902LLU,1LLU),_1d2375913_Range32(124904LLU,124907LLU,1LLU),_1d2375913_Range32(124909LLU,124910LLU,1LLU),_1d2375913_Range32(124912LLU,124926LLU,1LLU),_1d2375913_Range32(124928LLU,125124LLU,1LLU),_1d2375913_Range32(125184LLU,125251LLU,1LLU),_1d2375913_Range32(125259LLU,126464LLU,1205LLU),_1d2375913_Range32(126465LLU,126467LLU,1LLU),_1d2375913_Range32(126469LLU,126495LLU,1LLU),_1d2375913_Range32(126497LLU,126498LLU,1LLU),_1d2375913_Range32(126500LLU,126503LLU,3LLU),_1d2375913_Range32(126505LLU,126514LLU,1LLU),_1d2375913_Range32(126516LLU,126519LLU,1LLU),_1d2375913_Range32(126521LLU,126523LLU,2LLU),_1d2375913_Range32(126530LLU,126535LLU,5LLU),_1d2375913_Range32(126537LLU,126541LLU,2LLU),_1d2375913_Range32(126542LLU,126543LLU,1LLU),_1d2375913_Range32(126545LLU,126546LLU,1LLU),_1d2375913_Range32(126548LLU,126551LLU,3LLU),_1d2375913_Range32(126553LLU,126561LLU,2LLU),_1d2375913_Range32(126562LLU,126564LLU,2LLU),_1d2375913_Range32(126567LLU,126570LLU,1LLU),_1d2375913_Range32(126572LLU,126578LLU,1LLU),_1d2375913_Range32(126580LLU,126583LLU,1LLU),_1d2375913_Range32(126585LLU,126588LLU,1LLU),_1d2375913_Range32(126590LLU,126592LLU,2LLU),_1d2375913_Range32(126593LLU,126601LLU,1LLU),_1d2375913_Range32(126603LLU,126619LLU,1LLU),_1d2375913_Range32(126625LLU,126627LLU,1LLU),_1d2375913_Range32(126629LLU,126633LLU,1LLU),_1d2375913_Range32(126635LLU,126651LLU,1LLU),_1d2375913_Range32(131072LLU,173791LLU,1LLU),_1d2375913_Range32(173824LLU,177977LLU,1LLU),_1d2375913_Range32(177984LLU,178205LLU,1LLU),_1d2375913_Range32(178208LLU,183969LLU,1LLU),_1d2375913_Range32(183984LLU,191456LLU,1LLU),_1d2375913_Range32(194560LLU,195101LLU,1LLU),_1d2375913_Range32(196608LLU,201546LLU,1LLU),_1d2375913_Range32(201552LLU,205743LLU,1LLU)}),6LL));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__LL = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(97LLU,122LLU,1LLU),_1d2375913_Range16(181LLU,223LLU,42LLU),_1d2375913_Range16(224LLU,246LLU,1LLU),_1d2375913_Range16(248LLU,255LLU,1LLU),_1d2375913_Range16(257LLU,311LLU,2LLU),_1d2375913_Range16(312LLU,328LLU,2LLU),_1d2375913_Range16(329LLU,375LLU,2LLU),_1d2375913_Range16(378LLU,382LLU,2LLU),_1d2375913_Range16(383LLU,384LLU,1LLU),_1d2375913_Range16(387LLU,389LLU,2LLU),_1d2375913_Range16(392LLU,396LLU,4LLU),_1d2375913_Range16(397LLU,402LLU,5LLU),_1d2375913_Range16(405LLU,409LLU,4LLU),_1d2375913_Range16(410LLU,411LLU,1LLU),_1d2375913_Range16(414LLU,417LLU,3LLU),_1d2375913_Range16(419LLU,421LLU,2LLU),_1d2375913_Range16(424LLU,426LLU,2LLU),_1d2375913_Range16(427LLU,429LLU,2LLU),_1d2375913_Range16(432LLU,436LLU,4LLU),_1d2375913_Range16(438LLU,441LLU,3LLU),_1d2375913_Range16(442LLU,445LLU,3LLU),_1d2375913_Range16(446LLU,447LLU,1LLU),_1d2375913_Range16(454LLU,460LLU,3LLU),_1d2375913_Range16(462LLU,476LLU,2LLU),_1d2375913_Range16(477LLU,495LLU,2LLU),_1d2375913_Range16(496LLU,499LLU,3LLU),_1d2375913_Range16(501LLU,505LLU,4LLU),_1d2375913_Range16(507LLU,563LLU,2LLU),_1d2375913_Range16(564LLU,569LLU,1LLU),_1d2375913_Range16(572LLU,575LLU,3LLU),_1d2375913_Range16(576LLU,578LLU,2LLU),_1d2375913_Range16(583LLU,591LLU,2LLU),_1d2375913_Range16(592LLU,659LLU,1LLU),_1d2375913_Range16(661LLU,687LLU,1LLU),_1d2375913_Range16(881LLU,883LLU,2LLU),_1d2375913_Range16(887LLU,891LLU,4LLU),_1d2375913_Range16(892LLU,893LLU,1LLU),_1d2375913_Range16(912LLU,940LLU,28LLU),_1d2375913_Range16(941LLU,974LLU,1LLU),_1d2375913_Range16(976LLU,977LLU,1LLU),_1d2375913_Range16(981LLU,983LLU,1LLU),_1d2375913_Range16(985LLU,1007LLU,2LLU),_1d2375913_Range16(1008LLU,1011LLU,1LLU),_1d2375913_Range16(1013LLU,1019LLU,3LLU),_1d2375913_Range16(1020LLU,1072LLU,52LLU),_1d2375913_Range16(1073LLU,1119LLU,1LLU),_1d2375913_Range16(1121LLU,1153LLU,2LLU),_1d2375913_Range16(1163LLU,1215LLU,2LLU),_1d2375913_Range16(1218LLU,1230LLU,2LLU),_1d2375913_Range16(1231LLU,1327LLU,2LLU),_1d2375913_Range16(1376LLU,1416LLU,1LLU),_1d2375913_Range16(4304LLU,4346LLU,1LLU),_1d2375913_Range16(4349LLU,4351LLU,1LLU),_1d2375913_Range16(5112LLU,5117LLU,1LLU),_1d2375913_Range16(7296LLU,7304LLU,1LLU),_1d2375913_Range16(7424LLU,7467LLU,1LLU),_1d2375913_Range16(7531LLU,7543LLU,1LLU),_1d2375913_Range16(7545LLU,7578LLU,1LLU),_1d2375913_Range16(7681LLU,7829LLU,2LLU),_1d2375913_Range16(7830LLU,7837LLU,1LLU),_1d2375913_Range16(7839LLU,7935LLU,2LLU),_1d2375913_Range16(7936LLU,7943LLU,1LLU),_1d2375913_Range16(7952LLU,7957LLU,1LLU),_1d2375913_Range16(7968LLU,7975LLU,1LLU),_1d2375913_Range16(7984LLU,7991LLU,1LLU),_1d2375913_Range16(8000LLU,8005LLU,1LLU),_1d2375913_Range16(8016LLU,8023LLU,1LLU),_1d2375913_Range16(8032LLU,8039LLU,1LLU),_1d2375913_Range16(8048LLU,8061LLU,1LLU),_1d2375913_Range16(8064LLU,8071LLU,1LLU),_1d2375913_Range16(8080LLU,8087LLU,1LLU),_1d2375913_Range16(8096LLU,8103LLU,1LLU),_1d2375913_Range16(8112LLU,8116LLU,1LLU),_1d2375913_Range16(8118LLU,8119LLU,1LLU),_1d2375913_Range16(8126LLU,8130LLU,4LLU),_1d2375913_Range16(8131LLU,8132LLU,1LLU),_1d2375913_Range16(8134LLU,8135LLU,1LLU),_1d2375913_Range16(8144LLU,8147LLU,1LLU),_1d2375913_Range16(8150LLU,8151LLU,1LLU),_1d2375913_Range16(8160LLU,8167LLU,1LLU),_1d2375913_Range16(8178LLU,8180LLU,1LLU),_1d2375913_Range16(8182LLU,8183LLU,1LLU),_1d2375913_Range16(8458LLU,8462LLU,4LLU),_1d2375913_Range16(8463LLU,8467LLU,4LLU),_1d2375913_Range16(8495LLU,8505LLU,5LLU),_1d2375913_Range16(8508LLU,8509LLU,1LLU),_1d2375913_Range16(8518LLU,8521LLU,1LLU),_1d2375913_Range16(8526LLU,8580LLU,54LLU),_1d2375913_Range16(11312LLU,11359LLU,1LLU),_1d2375913_Range16(11361LLU,11365LLU,4LLU),_1d2375913_Range16(11366LLU,11372LLU,2LLU),_1d2375913_Range16(11377LLU,11379LLU,2LLU),_1d2375913_Range16(11380LLU,11382LLU,2LLU),_1d2375913_Range16(11383LLU,11387LLU,1LLU),_1d2375913_Range16(11393LLU,11491LLU,2LLU),_1d2375913_Range16(11492LLU,11500LLU,8LLU),_1d2375913_Range16(11502LLU,11507LLU,5LLU),_1d2375913_Range16(11520LLU,11557LLU,1LLU),_1d2375913_Range16(11559LLU,11565LLU,6LLU),_1d2375913_Range16(42561LLU,42605LLU,2LLU),_1d2375913_Range16(42625LLU,42651LLU,2LLU),_1d2375913_Range16(42787LLU,42799LLU,2LLU),_1d2375913_Range16(42800LLU,42801LLU,1LLU),_1d2375913_Range16(42803LLU,42865LLU,2LLU),_1d2375913_Range16(42866LLU,42872LLU,1LLU),_1d2375913_Range16(42874LLU,42876LLU,2LLU),_1d2375913_Range16(42879LLU,42887LLU,2LLU),_1d2375913_Range16(42892LLU,42894LLU,2LLU),_1d2375913_Range16(42897LLU,42899LLU,2LLU),_1d2375913_Range16(42900LLU,42901LLU,1LLU),_1d2375913_Range16(42903LLU,42921LLU,2LLU),_1d2375913_Range16(42927LLU,42933LLU,6LLU),_1d2375913_Range16(42935LLU,42947LLU,2LLU),_1d2375913_Range16(42952LLU,42954LLU,2LLU),_1d2375913_Range16(42961LLU,42969LLU,2LLU),_1d2375913_Range16(42998LLU,43002LLU,4LLU),_1d2375913_Range16(43824LLU,43866LLU,1LLU),_1d2375913_Range16(43872LLU,43880LLU,1LLU),_1d2375913_Range16(43888LLU,43967LLU,1LLU),_1d2375913_Range16(64256LLU,64262LLU,1LLU),_1d2375913_Range16(64275LLU,64279LLU,1LLU),_1d2375913_Range16(65345LLU,65370LLU,1LLU)}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(66600LLU,66639LLU,1LLU),_1d2375913_Range32(66776LLU,66811LLU,1LLU),_1d2375913_Range32(66967LLU,66977LLU,1LLU),_1d2375913_Range32(66979LLU,66993LLU,1LLU),_1d2375913_Range32(66995LLU,67001LLU,1LLU),_1d2375913_Range32(67003LLU,67004LLU,1LLU),_1d2375913_Range32(68800LLU,68850LLU,1LLU),_1d2375913_Range32(71872LLU,71903LLU,1LLU),_1d2375913_Range32(93792LLU,93823LLU,1LLU),_1d2375913_Range32(119834LLU,119859LLU,1LLU),_1d2375913_Range32(119886LLU,119892LLU,1LLU),_1d2375913_Range32(119894LLU,119911LLU,1LLU),_1d2375913_Range32(119938LLU,119963LLU,1LLU),_1d2375913_Range32(119990LLU,119993LLU,1LLU),_1d2375913_Range32(119995LLU,119997LLU,2LLU),_1d2375913_Range32(119998LLU,120003LLU,1LLU),_1d2375913_Range32(120005LLU,120015LLU,1LLU),_1d2375913_Range32(120042LLU,120067LLU,1LLU),_1d2375913_Range32(120094LLU,120119LLU,1LLU),_1d2375913_Range32(120146LLU,120171LLU,1LLU),_1d2375913_Range32(120198LLU,120223LLU,1LLU),_1d2375913_Range32(120250LLU,120275LLU,1LLU),_1d2375913_Range32(120302LLU,120327LLU,1LLU),_1d2375913_Range32(120354LLU,120379LLU,1LLU),_1d2375913_Range32(120406LLU,120431LLU,1LLU),_1d2375913_Range32(120458LLU,120485LLU,1LLU),_1d2375913_Range32(120514LLU,120538LLU,1LLU),_1d2375913_Range32(120540LLU,120545LLU,1LLU),_1d2375913_Range32(120572LLU,120596LLU,1LLU),_1d2375913_Range32(120598LLU,120603LLU,1LLU),_1d2375913_Range32(120630LLU,120654LLU,1LLU),_1d2375913_Range32(120656LLU,120661LLU,1LLU),_1d2375913_Range32(120688LLU,120712LLU,1LLU),_1d2375913_Range32(120714LLU,120719LLU,1LLU),_1d2375913_Range32(120746LLU,120770LLU,1LLU),_1d2375913_Range32(120772LLU,120777LLU,1LLU),_1d2375913_Range32(120779LLU,122624LLU,1845LLU),_1d2375913_Range32(122625LLU,122633LLU,1LLU),_1d2375913_Range32(122635LLU,122654LLU,1LLU),_1d2375913_Range32(122661LLU,122666LLU,1LLU),_1d2375913_Range32(125218LLU,125251LLU,1LLU)}),4LL));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__LM = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(688LLU,705LLU,1LLU),_1d2375913_Range16(710LLU,721LLU,1LLU),_1d2375913_Range16(736LLU,740LLU,1LLU),_1d2375913_Range16(748LLU,750LLU,2LLU),_1d2375913_Range16(884LLU,890LLU,6LLU),_1d2375913_Range16(1369LLU,1600LLU,231LLU),_1d2375913_Range16(1765LLU,1766LLU,1LLU),_1d2375913_Range16(2036LLU,2037LLU,1LLU),_1d2375913_Range16(2042LLU,2074LLU,32LLU),_1d2375913_Range16(2084LLU,2088LLU,4LLU),_1d2375913_Range16(2249LLU,2417LLU,168LLU),_1d2375913_Range16(3654LLU,3782LLU,128LLU),_1d2375913_Range16(4348LLU,6103LLU,1755LLU),_1d2375913_Range16(6211LLU,6823LLU,612LLU),_1d2375913_Range16(7288LLU,7293LLU,1LLU),_1d2375913_Range16(7468LLU,7530LLU,1LLU),_1d2375913_Range16(7544LLU,7579LLU,35LLU),_1d2375913_Range16(7580LLU,7615LLU,1LLU),_1d2375913_Range16(8305LLU,8319LLU,14LLU),_1d2375913_Range16(8336LLU,8348LLU,1LLU),_1d2375913_Range16(11388LLU,11389LLU,1LLU),_1d2375913_Range16(11631LLU,11823LLU,192LLU),_1d2375913_Range16(12293LLU,12337LLU,44LLU),_1d2375913_Range16(12338LLU,12341LLU,1LLU),_1d2375913_Range16(12347LLU,12445LLU,98LLU),_1d2375913_Range16(12446LLU,12540LLU,94LLU),_1d2375913_Range16(12541LLU,12542LLU,1LLU),_1d2375913_Range16(40981LLU,42232LLU,1251LLU),_1d2375913_Range16(42233LLU,42237LLU,1LLU),_1d2375913_Range16(42508LLU,42623LLU,115LLU),_1d2375913_Range16(42652LLU,42653LLU,1LLU),_1d2375913_Range16(42775LLU,42783LLU,1LLU),_1d2375913_Range16(42864LLU,42888LLU,24LLU),_1d2375913_Range16(42994LLU,42996LLU,1LLU),_1d2375913_Range16(43000LLU,43001LLU,1LLU),_1d2375913_Range16(43471LLU,43494LLU,23LLU),_1d2375913_Range16(43632LLU,43741LLU,109LLU),_1d2375913_Range16(43763LLU,43764LLU,1LLU),_1d2375913_Range16(43868LLU,43871LLU,1LLU),_1d2375913_Range16(43881LLU,65392LLU,21511LLU),_1d2375913_Range16(65438LLU,65439LLU,1LLU)}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(67456LLU,67461LLU,1LLU),_1d2375913_Range32(67463LLU,67504LLU,1LLU),_1d2375913_Range32(67506LLU,67514LLU,1LLU),_1d2375913_Range32(92992LLU,92995LLU,1LLU),_1d2375913_Range32(94099LLU,94111LLU,1LLU),_1d2375913_Range32(94176LLU,94177LLU,1LLU),_1d2375913_Range32(94179LLU,110576LLU,16397LLU),_1d2375913_Range32(110577LLU,110579LLU,1LLU),_1d2375913_Range32(110581LLU,110587LLU,1LLU),_1d2375913_Range32(110589LLU,110590LLU,1LLU),_1d2375913_Range32(122928LLU,122989LLU,1LLU),_1d2375913_Range32(123191LLU,123197LLU,1LLU),_1d2375913_Range32(124139LLU,125259LLU,1120LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__LO = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(170LLU,186LLU,16LLU),_1d2375913_Range16(443LLU,448LLU,5LLU),_1d2375913_Range16(449LLU,451LLU,1LLU),_1d2375913_Range16(660LLU,1488LLU,828LLU),_1d2375913_Range16(1489LLU,1514LLU,1LLU),_1d2375913_Range16(1519LLU,1522LLU,1LLU),_1d2375913_Range16(1568LLU,1599LLU,1LLU),_1d2375913_Range16(1601LLU,1610LLU,1LLU),_1d2375913_Range16(1646LLU,1647LLU,1LLU),_1d2375913_Range16(1649LLU,1747LLU,1LLU),_1d2375913_Range16(1749LLU,1774LLU,25LLU),_1d2375913_Range16(1775LLU,1786LLU,11LLU),_1d2375913_Range16(1787LLU,1788LLU,1LLU),_1d2375913_Range16(1791LLU,1808LLU,17LLU),_1d2375913_Range16(1810LLU,1839LLU,1LLU),_1d2375913_Range16(1869LLU,1957LLU,1LLU),_1d2375913_Range16(1969LLU,1994LLU,25LLU),_1d2375913_Range16(1995LLU,2026LLU,1LLU),_1d2375913_Range16(2048LLU,2069LLU,1LLU),_1d2375913_Range16(2112LLU,2136LLU,1LLU),_1d2375913_Range16(2144LLU,2154LLU,1LLU),_1d2375913_Range16(2160LLU,2183LLU,1LLU),_1d2375913_Range16(2185LLU,2190LLU,1LLU),_1d2375913_Range16(2208LLU,2248LLU,1LLU),_1d2375913_Range16(2308LLU,2361LLU,1LLU),_1d2375913_Range16(2365LLU,2384LLU,19LLU),_1d2375913_Range16(2392LLU,2401LLU,1LLU),_1d2375913_Range16(2418LLU,2432LLU,1LLU),_1d2375913_Range16(2437LLU,2444LLU,1LLU),_1d2375913_Range16(2447LLU,2448LLU,1LLU),_1d2375913_Range16(2451LLU,2472LLU,1LLU),_1d2375913_Range16(2474LLU,2480LLU,1LLU),_1d2375913_Range16(2482LLU,2486LLU,4LLU),_1d2375913_Range16(2487LLU,2489LLU,1LLU),_1d2375913_Range16(2493LLU,2510LLU,17LLU),_1d2375913_Range16(2524LLU,2525LLU,1LLU),_1d2375913_Range16(2527LLU,2529LLU,1LLU),_1d2375913_Range16(2544LLU,2545LLU,1LLU),_1d2375913_Range16(2556LLU,2565LLU,9LLU),_1d2375913_Range16(2566LLU,2570LLU,1LLU),_1d2375913_Range16(2575LLU,2576LLU,1LLU),_1d2375913_Range16(2579LLU,2600LLU,1LLU),_1d2375913_Range16(2602LLU,2608LLU,1LLU),_1d2375913_Range16(2610LLU,2611LLU,1LLU),_1d2375913_Range16(2613LLU,2614LLU,1LLU),_1d2375913_Range16(2616LLU,2617LLU,1LLU),_1d2375913_Range16(2649LLU,2652LLU,1LLU),_1d2375913_Range16(2654LLU,2674LLU,20LLU),_1d2375913_Range16(2675LLU,2676LLU,1LLU),_1d2375913_Range16(2693LLU,2701LLU,1LLU),_1d2375913_Range16(2703LLU,2705LLU,1LLU),_1d2375913_Range16(2707LLU,2728LLU,1LLU),_1d2375913_Range16(2730LLU,2736LLU,1LLU),_1d2375913_Range16(2738LLU,2739LLU,1LLU),_1d2375913_Range16(2741LLU,2745LLU,1LLU),_1d2375913_Range16(2749LLU,2768LLU,19LLU),_1d2375913_Range16(2784LLU,2785LLU,1LLU),_1d2375913_Range16(2809LLU,2821LLU,12LLU),_1d2375913_Range16(2822LLU,2828LLU,1LLU),_1d2375913_Range16(2831LLU,2832LLU,1LLU),_1d2375913_Range16(2835LLU,2856LLU,1LLU),_1d2375913_Range16(2858LLU,2864LLU,1LLU),_1d2375913_Range16(2866LLU,2867LLU,1LLU),_1d2375913_Range16(2869LLU,2873LLU,1LLU),_1d2375913_Range16(2877LLU,2908LLU,31LLU),_1d2375913_Range16(2909LLU,2911LLU,2LLU),_1d2375913_Range16(2912LLU,2913LLU,1LLU),_1d2375913_Range16(2929LLU,2947LLU,18LLU),_1d2375913_Range16(2949LLU,2954LLU,1LLU),_1d2375913_Range16(2958LLU,2960LLU,1LLU),_1d2375913_Range16(2962LLU,2965LLU,1LLU),_1d2375913_Range16(2969LLU,2970LLU,1LLU),_1d2375913_Range16(2972LLU,2974LLU,2LLU),_1d2375913_Range16(2975LLU,2979LLU,4LLU),_1d2375913_Range16(2980LLU,2984LLU,4LLU),_1d2375913_Range16(2985LLU,2986LLU,1LLU),_1d2375913_Range16(2990LLU,3001LLU,1LLU),_1d2375913_Range16(3024LLU,3077LLU,53LLU),_1d2375913_Range16(3078LLU,3084LLU,1LLU),_1d2375913_Range16(3086LLU,3088LLU,1LLU),_1d2375913_Range16(3090LLU,3112LLU,1LLU),_1d2375913_Range16(3114LLU,3129LLU,1LLU),_1d2375913_Range16(3133LLU,3160LLU,27LLU),_1d2375913_Range16(3161LLU,3162LLU,1LLU),_1d2375913_Range16(3165LLU,3168LLU,3LLU),_1d2375913_Range16(3169LLU,3200LLU,31LLU),_1d2375913_Range16(3205LLU,3212LLU,1LLU),_1d2375913_Range16(3214LLU,3216LLU,1LLU),_1d2375913_Range16(3218LLU,3240LLU,1LLU),_1d2375913_Range16(3242LLU,3251LLU,1LLU),_1d2375913_Range16(3253LLU,3257LLU,1LLU),_1d2375913_Range16(3261LLU,3293LLU,32LLU),_1d2375913_Range16(3294LLU,3296LLU,2LLU),_1d2375913_Range16(3297LLU,3313LLU,16LLU),_1d2375913_Range16(3314LLU,3332LLU,18LLU),_1d2375913_Range16(3333LLU,3340LLU,1LLU),_1d2375913_Range16(3342LLU,3344LLU,1LLU),_1d2375913_Range16(3346LLU,3386LLU,1LLU),_1d2375913_Range16(3389LLU,3406LLU,17LLU),_1d2375913_Range16(3412LLU,3414LLU,1LLU),_1d2375913_Range16(3423LLU,3425LLU,1LLU),_1d2375913_Range16(3450LLU,3455LLU,1LLU),_1d2375913_Range16(3461LLU,3478LLU,1LLU),_1d2375913_Range16(3482LLU,3505LLU,1LLU),_1d2375913_Range16(3507LLU,3515LLU,1LLU),_1d2375913_Range16(3517LLU,3520LLU,3LLU),_1d2375913_Range16(3521LLU,3526LLU,1LLU),_1d2375913_Range16(3585LLU,3632LLU,1LLU),_1d2375913_Range16(3634LLU,3635LLU,1LLU),_1d2375913_Range16(3648LLU,3653LLU,1LLU),_1d2375913_Range16(3713LLU,3714LLU,1LLU),_1d2375913_Range16(3716LLU,3718LLU,2LLU),_1d2375913_Range16(3719LLU,3722LLU,1LLU),_1d2375913_Range16(3724LLU,3747LLU,1LLU),_1d2375913_Range16(3749LLU,3751LLU,2LLU),_1d2375913_Range16(3752LLU,3760LLU,1LLU),_1d2375913_Range16(3762LLU,3763LLU,1LLU),_1d2375913_Range16(3773LLU,3776LLU,3LLU),_1d2375913_Range16(3777LLU,3780LLU,1LLU),_1d2375913_Range16(3804LLU,3807LLU,1LLU),_1d2375913_Range16(3840LLU,3904LLU,64LLU),_1d2375913_Range16(3905LLU,3911LLU,1LLU),_1d2375913_Range16(3913LLU,3948LLU,1LLU),_1d2375913_Range16(3976LLU,3980LLU,1LLU),_1d2375913_Range16(4096LLU,4138LLU,1LLU),_1d2375913_Range16(4159LLU,4176LLU,17LLU),_1d2375913_Range16(4177LLU,4181LLU,1LLU),_1d2375913_Range16(4186LLU,4189LLU,1LLU),_1d2375913_Range16(4193LLU,4197LLU,4LLU),_1d2375913_Range16(4198LLU,4206LLU,8LLU),_1d2375913_Range16(4207LLU,4208LLU,1LLU),_1d2375913_Range16(4213LLU,4225LLU,1LLU),_1d2375913_Range16(4238LLU,4352LLU,114LLU),_1d2375913_Range16(4353LLU,4680LLU,1LLU),_1d2375913_Range16(4682LLU,4685LLU,1LLU),_1d2375913_Range16(4688LLU,4694LLU,1LLU),_1d2375913_Range16(4696LLU,4698LLU,2LLU),_1d2375913_Range16(4699LLU,4701LLU,1LLU),_1d2375913_Range16(4704LLU,4744LLU,1LLU),_1d2375913_Range16(4746LLU,4749LLU,1LLU),_1d2375913_Range16(4752LLU,4784LLU,1LLU),_1d2375913_Range16(4786LLU,4789LLU,1LLU),_1d2375913_Range16(4792LLU,4798LLU,1LLU),_1d2375913_Range16(4800LLU,4802LLU,2LLU),_1d2375913_Range16(4803LLU,4805LLU,1LLU),_1d2375913_Range16(4808LLU,4822LLU,1LLU),_1d2375913_Range16(4824LLU,4880LLU,1LLU),_1d2375913_Range16(4882LLU,4885LLU,1LLU),_1d2375913_Range16(4888LLU,4954LLU,1LLU),_1d2375913_Range16(4992LLU,5007LLU,1LLU),_1d2375913_Range16(5121LLU,5740LLU,1LLU),_1d2375913_Range16(5743LLU,5759LLU,1LLU),_1d2375913_Range16(5761LLU,5786LLU,1LLU),_1d2375913_Range16(5792LLU,5866LLU,1LLU),_1d2375913_Range16(5873LLU,5880LLU,1LLU),_1d2375913_Range16(5888LLU,5905LLU,1LLU),_1d2375913_Range16(5919LLU,5937LLU,1LLU),_1d2375913_Range16(5952LLU,5969LLU,1LLU),_1d2375913_Range16(5984LLU,5996LLU,1LLU),_1d2375913_Range16(5998LLU,6000LLU,1LLU),_1d2375913_Range16(6016LLU,6067LLU,1LLU),_1d2375913_Range16(6108LLU,6176LLU,68LLU),_1d2375913_Range16(6177LLU,6210LLU,1LLU),_1d2375913_Range16(6212LLU,6264LLU,1LLU),_1d2375913_Range16(6272LLU,6276LLU,1LLU),_1d2375913_Range16(6279LLU,6312LLU,1LLU),_1d2375913_Range16(6314LLU,6320LLU,6LLU),_1d2375913_Range16(6321LLU,6389LLU,1LLU),_1d2375913_Range16(6400LLU,6430LLU,1LLU),_1d2375913_Range16(6480LLU,6509LLU,1LLU),_1d2375913_Range16(6512LLU,6516LLU,1LLU),_1d2375913_Range16(6528LLU,6571LLU,1LLU),_1d2375913_Range16(6576LLU,6601LLU,1LLU),_1d2375913_Range16(6656LLU,6678LLU,1LLU),_1d2375913_Range16(6688LLU,6740LLU,1LLU),_1d2375913_Range16(6917LLU,6963LLU,1LLU),_1d2375913_Range16(6981LLU,6988LLU,1LLU),_1d2375913_Range16(7043LLU,7072LLU,1LLU),_1d2375913_Range16(7086LLU,7087LLU,1LLU),_1d2375913_Range16(7098LLU,7141LLU,1LLU),_1d2375913_Range16(7168LLU,7203LLU,1LLU),_1d2375913_Range16(7245LLU,7247LLU,1LLU),_1d2375913_Range16(7258LLU,7287LLU,1LLU),_1d2375913_Range16(7401LLU,7404LLU,1LLU),_1d2375913_Range16(7406LLU,7411LLU,1LLU),_1d2375913_Range16(7413LLU,7414LLU,1LLU),_1d2375913_Range16(7418LLU,8501LLU,1083LLU),_1d2375913_Range16(8502LLU,8504LLU,1LLU),_1d2375913_Range16(11568LLU,11623LLU,1LLU),_1d2375913_Range16(11648LLU,11670LLU,1LLU),_1d2375913_Range16(11680LLU,11686LLU,1LLU),_1d2375913_Range16(11688LLU,11694LLU,1LLU),_1d2375913_Range16(11696LLU,11702LLU,1LLU),_1d2375913_Range16(11704LLU,11710LLU,1LLU),_1d2375913_Range16(11712LLU,11718LLU,1LLU),_1d2375913_Range16(11720LLU,11726LLU,1LLU),_1d2375913_Range16(11728LLU,11734LLU,1LLU),_1d2375913_Range16(11736LLU,11742LLU,1LLU),_1d2375913_Range16(12294LLU,12348LLU,54LLU),_1d2375913_Range16(12353LLU,12438LLU,1LLU),_1d2375913_Range16(12447LLU,12449LLU,2LLU),_1d2375913_Range16(12450LLU,12538LLU,1LLU),_1d2375913_Range16(12543LLU,12549LLU,6LLU),_1d2375913_Range16(12550LLU,12591LLU,1LLU),_1d2375913_Range16(12593LLU,12686LLU,1LLU),_1d2375913_Range16(12704LLU,12735LLU,1LLU),_1d2375913_Range16(12784LLU,12799LLU,1LLU),_1d2375913_Range16(13312LLU,19903LLU,1LLU),_1d2375913_Range16(19968LLU,40980LLU,1LLU),_1d2375913_Range16(40982LLU,42124LLU,1LLU),_1d2375913_Range16(42192LLU,42231LLU,1LLU),_1d2375913_Range16(42240LLU,42507LLU,1LLU),_1d2375913_Range16(42512LLU,42527LLU,1LLU),_1d2375913_Range16(42538LLU,42539LLU,1LLU),_1d2375913_Range16(42606LLU,42656LLU,50LLU),_1d2375913_Range16(42657LLU,42725LLU,1LLU),_1d2375913_Range16(42895LLU,42999LLU,104LLU),_1d2375913_Range16(43003LLU,43009LLU,1LLU),_1d2375913_Range16(43011LLU,43013LLU,1LLU),_1d2375913_Range16(43015LLU,43018LLU,1LLU),_1d2375913_Range16(43020LLU,43042LLU,1LLU),_1d2375913_Range16(43072LLU,43123LLU,1LLU),_1d2375913_Range16(43138LLU,43187LLU,1LLU),_1d2375913_Range16(43250LLU,43255LLU,1LLU),_1d2375913_Range16(43259LLU,43261LLU,2LLU),_1d2375913_Range16(43262LLU,43274LLU,12LLU),_1d2375913_Range16(43275LLU,43301LLU,1LLU),_1d2375913_Range16(43312LLU,43334LLU,1LLU),_1d2375913_Range16(43360LLU,43388LLU,1LLU),_1d2375913_Range16(43396LLU,43442LLU,1LLU),_1d2375913_Range16(43488LLU,43492LLU,1LLU),_1d2375913_Range16(43495LLU,43503LLU,1LLU),_1d2375913_Range16(43514LLU,43518LLU,1LLU),_1d2375913_Range16(43520LLU,43560LLU,1LLU),_1d2375913_Range16(43584LLU,43586LLU,1LLU),_1d2375913_Range16(43588LLU,43595LLU,1LLU),_1d2375913_Range16(43616LLU,43631LLU,1LLU),_1d2375913_Range16(43633LLU,43638LLU,1LLU),_1d2375913_Range16(43642LLU,43646LLU,4LLU),_1d2375913_Range16(43647LLU,43695LLU,1LLU),_1d2375913_Range16(43697LLU,43701LLU,4LLU),_1d2375913_Range16(43702LLU,43705LLU,3LLU),_1d2375913_Range16(43706LLU,43709LLU,1LLU),_1d2375913_Range16(43712LLU,43714LLU,2LLU),_1d2375913_Range16(43739LLU,43740LLU,1LLU),_1d2375913_Range16(43744LLU,43754LLU,1LLU),_1d2375913_Range16(43762LLU,43777LLU,15LLU),_1d2375913_Range16(43778LLU,43782LLU,1LLU),_1d2375913_Range16(43785LLU,43790LLU,1LLU),_1d2375913_Range16(43793LLU,43798LLU,1LLU),_1d2375913_Range16(43808LLU,43814LLU,1LLU),_1d2375913_Range16(43816LLU,43822LLU,1LLU),_1d2375913_Range16(43968LLU,44002LLU,1LLU),_1d2375913_Range16(44032LLU,55203LLU,1LLU),_1d2375913_Range16(55216LLU,55238LLU,1LLU),_1d2375913_Range16(55243LLU,55291LLU,1LLU),_1d2375913_Range16(63744LLU,64109LLU,1LLU),_1d2375913_Range16(64112LLU,64217LLU,1LLU),_1d2375913_Range16(64285LLU,64287LLU,2LLU),_1d2375913_Range16(64288LLU,64296LLU,1LLU),_1d2375913_Range16(64298LLU,64310LLU,1LLU),_1d2375913_Range16(64312LLU,64316LLU,1LLU),_1d2375913_Range16(64318LLU,64320LLU,2LLU),_1d2375913_Range16(64321LLU,64323LLU,2LLU),_1d2375913_Range16(64324LLU,64326LLU,2LLU),_1d2375913_Range16(64327LLU,64433LLU,1LLU),_1d2375913_Range16(64467LLU,64829LLU,1LLU),_1d2375913_Range16(64848LLU,64911LLU,1LLU),_1d2375913_Range16(64914LLU,64967LLU,1LLU),_1d2375913_Range16(65008LLU,65019LLU,1LLU),_1d2375913_Range16(65136LLU,65140LLU,1LLU),_1d2375913_Range16(65142LLU,65276LLU,1LLU),_1d2375913_Range16(65382LLU,65391LLU,1LLU),_1d2375913_Range16(65393LLU,65437LLU,1LLU),_1d2375913_Range16(65440LLU,65470LLU,1LLU),_1d2375913_Range16(65474LLU,65479LLU,1LLU),_1d2375913_Range16(65482LLU,65487LLU,1LLU),_1d2375913_Range16(65490LLU,65495LLU,1LLU),_1d2375913_Range16(65498LLU,65500LLU,1LLU)}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(65536LLU,65547LLU,1LLU),_1d2375913_Range32(65549LLU,65574LLU,1LLU),_1d2375913_Range32(65576LLU,65594LLU,1LLU),_1d2375913_Range32(65596LLU,65597LLU,1LLU),_1d2375913_Range32(65599LLU,65613LLU,1LLU),_1d2375913_Range32(65616LLU,65629LLU,1LLU),_1d2375913_Range32(65664LLU,65786LLU,1LLU),_1d2375913_Range32(66176LLU,66204LLU,1LLU),_1d2375913_Range32(66208LLU,66256LLU,1LLU),_1d2375913_Range32(66304LLU,66335LLU,1LLU),_1d2375913_Range32(66349LLU,66368LLU,1LLU),_1d2375913_Range32(66370LLU,66377LLU,1LLU),_1d2375913_Range32(66384LLU,66421LLU,1LLU),_1d2375913_Range32(66432LLU,66461LLU,1LLU),_1d2375913_Range32(66464LLU,66499LLU,1LLU),_1d2375913_Range32(66504LLU,66511LLU,1LLU),_1d2375913_Range32(66640LLU,66717LLU,1LLU),_1d2375913_Range32(66816LLU,66855LLU,1LLU),_1d2375913_Range32(66864LLU,66915LLU,1LLU),_1d2375913_Range32(67072LLU,67382LLU,1LLU),_1d2375913_Range32(67392LLU,67413LLU,1LLU),_1d2375913_Range32(67424LLU,67431LLU,1LLU),_1d2375913_Range32(67584LLU,67589LLU,1LLU),_1d2375913_Range32(67592LLU,67594LLU,2LLU),_1d2375913_Range32(67595LLU,67637LLU,1LLU),_1d2375913_Range32(67639LLU,67640LLU,1LLU),_1d2375913_Range32(67644LLU,67647LLU,3LLU),_1d2375913_Range32(67648LLU,67669LLU,1LLU),_1d2375913_Range32(67680LLU,67702LLU,1LLU),_1d2375913_Range32(67712LLU,67742LLU,1LLU),_1d2375913_Range32(67808LLU,67826LLU,1LLU),_1d2375913_Range32(67828LLU,67829LLU,1LLU),_1d2375913_Range32(67840LLU,67861LLU,1LLU),_1d2375913_Range32(67872LLU,67897LLU,1LLU),_1d2375913_Range32(67968LLU,68023LLU,1LLU),_1d2375913_Range32(68030LLU,68031LLU,1LLU),_1d2375913_Range32(68096LLU,68112LLU,16LLU),_1d2375913_Range32(68113LLU,68115LLU,1LLU),_1d2375913_Range32(68117LLU,68119LLU,1LLU),_1d2375913_Range32(68121LLU,68149LLU,1LLU),_1d2375913_Range32(68192LLU,68220LLU,1LLU),_1d2375913_Range32(68224LLU,68252LLU,1LLU),_1d2375913_Range32(68288LLU,68295LLU,1LLU),_1d2375913_Range32(68297LLU,68324LLU,1LLU),_1d2375913_Range32(68352LLU,68405LLU,1LLU),_1d2375913_Range32(68416LLU,68437LLU,1LLU),_1d2375913_Range32(68448LLU,68466LLU,1LLU),_1d2375913_Range32(68480LLU,68497LLU,1LLU),_1d2375913_Range32(68608LLU,68680LLU,1LLU),_1d2375913_Range32(68864LLU,68899LLU,1LLU),_1d2375913_Range32(69248LLU,69289LLU,1LLU),_1d2375913_Range32(69296LLU,69297LLU,1LLU),_1d2375913_Range32(69376LLU,69404LLU,1LLU),_1d2375913_Range32(69415LLU,69424LLU,9LLU),_1d2375913_Range32(69425LLU,69445LLU,1LLU),_1d2375913_Range32(69488LLU,69505LLU,1LLU),_1d2375913_Range32(69552LLU,69572LLU,1LLU),_1d2375913_Range32(69600LLU,69622LLU,1LLU),_1d2375913_Range32(69635LLU,69687LLU,1LLU),_1d2375913_Range32(69745LLU,69746LLU,1LLU),_1d2375913_Range32(69749LLU,69763LLU,14LLU),_1d2375913_Range32(69764LLU,69807LLU,1LLU),_1d2375913_Range32(69840LLU,69864LLU,1LLU),_1d2375913_Range32(69891LLU,69926LLU,1LLU),_1d2375913_Range32(69956LLU,69959LLU,3LLU),_1d2375913_Range32(69968LLU,70002LLU,1LLU),_1d2375913_Range32(70006LLU,70019LLU,13LLU),_1d2375913_Range32(70020LLU,70066LLU,1LLU),_1d2375913_Range32(70081LLU,70084LLU,1LLU),_1d2375913_Range32(70106LLU,70108LLU,2LLU),_1d2375913_Range32(70144LLU,70161LLU,1LLU),_1d2375913_Range32(70163LLU,70187LLU,1LLU),_1d2375913_Range32(70207LLU,70208LLU,1LLU),_1d2375913_Range32(70272LLU,70278LLU,1LLU),_1d2375913_Range32(70280LLU,70282LLU,2LLU),_1d2375913_Range32(70283LLU,70285LLU,1LLU),_1d2375913_Range32(70287LLU,70301LLU,1LLU),_1d2375913_Range32(70303LLU,70312LLU,1LLU),_1d2375913_Range32(70320LLU,70366LLU,1LLU),_1d2375913_Range32(70405LLU,70412LLU,1LLU),_1d2375913_Range32(70415LLU,70416LLU,1LLU),_1d2375913_Range32(70419LLU,70440LLU,1LLU),_1d2375913_Range32(70442LLU,70448LLU,1LLU),_1d2375913_Range32(70450LLU,70451LLU,1LLU),_1d2375913_Range32(70453LLU,70457LLU,1LLU),_1d2375913_Range32(70461LLU,70480LLU,19LLU),_1d2375913_Range32(70493LLU,70497LLU,1LLU),_1d2375913_Range32(70656LLU,70708LLU,1LLU),_1d2375913_Range32(70727LLU,70730LLU,1LLU),_1d2375913_Range32(70751LLU,70753LLU,1LLU),_1d2375913_Range32(70784LLU,70831LLU,1LLU),_1d2375913_Range32(70852LLU,70853LLU,1LLU),_1d2375913_Range32(70855LLU,71040LLU,185LLU),_1d2375913_Range32(71041LLU,71086LLU,1LLU),_1d2375913_Range32(71128LLU,71131LLU,1LLU),_1d2375913_Range32(71168LLU,71215LLU,1LLU),_1d2375913_Range32(71236LLU,71296LLU,60LLU),_1d2375913_Range32(71297LLU,71338LLU,1LLU),_1d2375913_Range32(71352LLU,71424LLU,72LLU),_1d2375913_Range32(71425LLU,71450LLU,1LLU),_1d2375913_Range32(71488LLU,71494LLU,1LLU),_1d2375913_Range32(71680LLU,71723LLU,1LLU),_1d2375913_Range32(71935LLU,71942LLU,1LLU),_1d2375913_Range32(71945LLU,71948LLU,3LLU),_1d2375913_Range32(71949LLU,71955LLU,1LLU),_1d2375913_Range32(71957LLU,71958LLU,1LLU),_1d2375913_Range32(71960LLU,71983LLU,1LLU),_1d2375913_Range32(71999LLU,72001LLU,2LLU),_1d2375913_Range32(72096LLU,72103LLU,1LLU),_1d2375913_Range32(72106LLU,72144LLU,1LLU),_1d2375913_Range32(72161LLU,72163LLU,2LLU),_1d2375913_Range32(72192LLU,72203LLU,11LLU),_1d2375913_Range32(72204LLU,72242LLU,1LLU),_1d2375913_Range32(72250LLU,72272LLU,22LLU),_1d2375913_Range32(72284LLU,72329LLU,1LLU),_1d2375913_Range32(72349LLU,72368LLU,19LLU),_1d2375913_Range32(72369LLU,72440LLU,1LLU),_1d2375913_Range32(72704LLU,72712LLU,1LLU),_1d2375913_Range32(72714LLU,72750LLU,1LLU),_1d2375913_Range32(72768LLU,72818LLU,50LLU),_1d2375913_Range32(72819LLU,72847LLU,1LLU),_1d2375913_Range32(72960LLU,72966LLU,1LLU),_1d2375913_Range32(72968LLU,72969LLU,1LLU),_1d2375913_Range32(72971LLU,73008LLU,1LLU),_1d2375913_Range32(73030LLU,73056LLU,26LLU),_1d2375913_Range32(73057LLU,73061LLU,1LLU),_1d2375913_Range32(73063LLU,73064LLU,1LLU),_1d2375913_Range32(73066LLU,73097LLU,1LLU),_1d2375913_Range32(73112LLU,73440LLU,328LLU),_1d2375913_Range32(73441LLU,73458LLU,1LLU),_1d2375913_Range32(73474LLU,73476LLU,2LLU),_1d2375913_Range32(73477LLU,73488LLU,1LLU),_1d2375913_Range32(73490LLU,73523LLU,1LLU),_1d2375913_Range32(73648LLU,73728LLU,80LLU),_1d2375913_Range32(73729LLU,74649LLU,1LLU),_1d2375913_Range32(74880LLU,75075LLU,1LLU),_1d2375913_Range32(77712LLU,77808LLU,1LLU),_1d2375913_Range32(77824LLU,78895LLU,1LLU),_1d2375913_Range32(78913LLU,78918LLU,1LLU),_1d2375913_Range32(82944LLU,83526LLU,1LLU),_1d2375913_Range32(92160LLU,92728LLU,1LLU),_1d2375913_Range32(92736LLU,92766LLU,1LLU),_1d2375913_Range32(92784LLU,92862LLU,1LLU),_1d2375913_Range32(92880LLU,92909LLU,1LLU),_1d2375913_Range32(92928LLU,92975LLU,1LLU),_1d2375913_Range32(93027LLU,93047LLU,1LLU),_1d2375913_Range32(93053LLU,93071LLU,1LLU),_1d2375913_Range32(93952LLU,94026LLU,1LLU),_1d2375913_Range32(94032LLU,94208LLU,176LLU),_1d2375913_Range32(94209LLU,100343LLU,1LLU),_1d2375913_Range32(100352LLU,101589LLU,1LLU),_1d2375913_Range32(101632LLU,101640LLU,1LLU),_1d2375913_Range32(110592LLU,110882LLU,1LLU),_1d2375913_Range32(110898LLU,110928LLU,30LLU),_1d2375913_Range32(110929LLU,110930LLU,1LLU),_1d2375913_Range32(110933LLU,110948LLU,15LLU),_1d2375913_Range32(110949LLU,110951LLU,1LLU),_1d2375913_Range32(110960LLU,111355LLU,1LLU),_1d2375913_Range32(113664LLU,113770LLU,1LLU),_1d2375913_Range32(113776LLU,113788LLU,1LLU),_1d2375913_Range32(113792LLU,113800LLU,1LLU),_1d2375913_Range32(113808LLU,113817LLU,1LLU),_1d2375913_Range32(122634LLU,123136LLU,502LLU),_1d2375913_Range32(123137LLU,123180LLU,1LLU),_1d2375913_Range32(123214LLU,123536LLU,322LLU),_1d2375913_Range32(123537LLU,123565LLU,1LLU),_1d2375913_Range32(123584LLU,123627LLU,1LLU),_1d2375913_Range32(124112LLU,124138LLU,1LLU),_1d2375913_Range32(124896LLU,124902LLU,1LLU),_1d2375913_Range32(124904LLU,124907LLU,1LLU),_1d2375913_Range32(124909LLU,124910LLU,1LLU),_1d2375913_Range32(124912LLU,124926LLU,1LLU),_1d2375913_Range32(124928LLU,125124LLU,1LLU),_1d2375913_Range32(126464LLU,126467LLU,1LLU),_1d2375913_Range32(126469LLU,126495LLU,1LLU),_1d2375913_Range32(126497LLU,126498LLU,1LLU),_1d2375913_Range32(126500LLU,126503LLU,3LLU),_1d2375913_Range32(126505LLU,126514LLU,1LLU),_1d2375913_Range32(126516LLU,126519LLU,1LLU),_1d2375913_Range32(126521LLU,126523LLU,2LLU),_1d2375913_Range32(126530LLU,126535LLU,5LLU),_1d2375913_Range32(126537LLU,126541LLU,2LLU),_1d2375913_Range32(126542LLU,126543LLU,1LLU),_1d2375913_Range32(126545LLU,126546LLU,1LLU),_1d2375913_Range32(126548LLU,126551LLU,3LLU),_1d2375913_Range32(126553LLU,126561LLU,2LLU),_1d2375913_Range32(126562LLU,126564LLU,2LLU),_1d2375913_Range32(126567LLU,126570LLU,1LLU),_1d2375913_Range32(126572LLU,126578LLU,1LLU),_1d2375913_Range32(126580LLU,126583LLU,1LLU),_1d2375913_Range32(126585LLU,126588LLU,1LLU),_1d2375913_Range32(126590LLU,126592LLU,2LLU),_1d2375913_Range32(126593LLU,126601LLU,1LLU),_1d2375913_Range32(126603LLU,126619LLU,1LLU),_1d2375913_Range32(126625LLU,126627LLU,1LLU),_1d2375913_Range32(126629LLU,126633LLU,1LLU),_1d2375913_Range32(126635LLU,126651LLU,1LLU),_1d2375913_Range32(131072LLU,173791LLU,1LLU),_1d2375913_Range32(173824LLU,177977LLU,1LLU),_1d2375913_Range32(177984LLU,178205LLU,1LLU),_1d2375913_Range32(178208LLU,183969LLU,1LLU),_1d2375913_Range32(183984LLU,191456LLU,1LLU),_1d2375913_Range32(194560LLU,195101LLU,1LLU),_1d2375913_Range32(196608LLU,201546LLU,1LLU),_1d2375913_Range32(201552LLU,205743LLU,1LLU)}),1LL));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__LT = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(453LLU,459LLU,3LLU),_1d2375913_Range16(498LLU,8072LLU,7574LLU),_1d2375913_Range16(8073LLU,8079LLU,1LLU),_1d2375913_Range16(8088LLU,8095LLU,1LLU),_1d2375913_Range16(8104LLU,8111LLU,1LLU),_1d2375913_Range16(8124LLU,8140LLU,16LLU),_1d2375913_Range16(8188LLU,8188LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__LU = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(65LLU,90LLU,1LLU),_1d2375913_Range16(192LLU,214LLU,1LLU),_1d2375913_Range16(216LLU,222LLU,1LLU),_1d2375913_Range16(256LLU,310LLU,2LLU),_1d2375913_Range16(313LLU,327LLU,2LLU),_1d2375913_Range16(330LLU,376LLU,2LLU),_1d2375913_Range16(377LLU,381LLU,2LLU),_1d2375913_Range16(385LLU,386LLU,1LLU),_1d2375913_Range16(388LLU,390LLU,2LLU),_1d2375913_Range16(391LLU,393LLU,2LLU),_1d2375913_Range16(394LLU,395LLU,1LLU),_1d2375913_Range16(398LLU,401LLU,1LLU),_1d2375913_Range16(403LLU,404LLU,1LLU),_1d2375913_Range16(406LLU,408LLU,1LLU),_1d2375913_Range16(412LLU,413LLU,1LLU),_1d2375913_Range16(415LLU,416LLU,1LLU),_1d2375913_Range16(418LLU,422LLU,2LLU),_1d2375913_Range16(423LLU,425LLU,2LLU),_1d2375913_Range16(428LLU,430LLU,2LLU),_1d2375913_Range16(431LLU,433LLU,2LLU),_1d2375913_Range16(434LLU,435LLU,1LLU),_1d2375913_Range16(437LLU,439LLU,2LLU),_1d2375913_Range16(440LLU,444LLU,4LLU),_1d2375913_Range16(452LLU,461LLU,3LLU),_1d2375913_Range16(463LLU,475LLU,2LLU),_1d2375913_Range16(478LLU,494LLU,2LLU),_1d2375913_Range16(497LLU,500LLU,3LLU),_1d2375913_Range16(502LLU,504LLU,1LLU),_1d2375913_Range16(506LLU,562LLU,2LLU),_1d2375913_Range16(570LLU,571LLU,1LLU),_1d2375913_Range16(573LLU,574LLU,1LLU),_1d2375913_Range16(577LLU,579LLU,2LLU),_1d2375913_Range16(580LLU,582LLU,1LLU),_1d2375913_Range16(584LLU,590LLU,2LLU),_1d2375913_Range16(880LLU,882LLU,2LLU),_1d2375913_Range16(886LLU,895LLU,9LLU),_1d2375913_Range16(902LLU,904LLU,2LLU),_1d2375913_Range16(905LLU,906LLU,1LLU),_1d2375913_Range16(908LLU,910LLU,2LLU),_1d2375913_Range16(911LLU,913LLU,2LLU),_1d2375913_Range16(914LLU,929LLU,1LLU),_1d2375913_Range16(931LLU,939LLU,1LLU),_1d2375913_Range16(975LLU,978LLU,3LLU),_1d2375913_Range16(979LLU,980LLU,1LLU),_1d2375913_Range16(984LLU,1006LLU,2LLU),_1d2375913_Range16(1012LLU,1015LLU,3LLU),_1d2375913_Range16(1017LLU,1018LLU,1LLU),_1d2375913_Range16(1021LLU,1071LLU,1LLU),_1d2375913_Range16(1120LLU,1152LLU,2LLU),_1d2375913_Range16(1162LLU,1216LLU,2LLU),_1d2375913_Range16(1217LLU,1229LLU,2LLU),_1d2375913_Range16(1232LLU,1326LLU,2LLU),_1d2375913_Range16(1329LLU,1366LLU,1LLU),_1d2375913_Range16(4256LLU,4293LLU,1LLU),_1d2375913_Range16(4295LLU,4301LLU,6LLU),_1d2375913_Range16(5024LLU,5109LLU,1LLU),_1d2375913_Range16(7312LLU,7354LLU,1LLU),_1d2375913_Range16(7357LLU,7359LLU,1LLU),_1d2375913_Range16(7680LLU,7828LLU,2LLU),_1d2375913_Range16(7838LLU,7934LLU,2LLU),_1d2375913_Range16(7944LLU,7951LLU,1LLU),_1d2375913_Range16(7960LLU,7965LLU,1LLU),_1d2375913_Range16(7976LLU,7983LLU,1LLU),_1d2375913_Range16(7992LLU,7999LLU,1LLU),_1d2375913_Range16(8008LLU,8013LLU,1LLU),_1d2375913_Range16(8025LLU,8031LLU,2LLU),_1d2375913_Range16(8040LLU,8047LLU,1LLU),_1d2375913_Range16(8120LLU,8123LLU,1LLU),_1d2375913_Range16(8136LLU,8139LLU,1LLU),_1d2375913_Range16(8152LLU,8155LLU,1LLU),_1d2375913_Range16(8168LLU,8172LLU,1LLU),_1d2375913_Range16(8184LLU,8187LLU,1LLU),_1d2375913_Range16(8450LLU,8455LLU,5LLU),_1d2375913_Range16(8459LLU,8461LLU,1LLU),_1d2375913_Range16(8464LLU,8466LLU,1LLU),_1d2375913_Range16(8469LLU,8473LLU,4LLU),_1d2375913_Range16(8474LLU,8477LLU,1LLU),_1d2375913_Range16(8484LLU,8490LLU,2LLU),_1d2375913_Range16(8491LLU,8493LLU,1LLU),_1d2375913_Range16(8496LLU,8499LLU,1LLU),_1d2375913_Range16(8510LLU,8511LLU,1LLU),_1d2375913_Range16(8517LLU,8579LLU,62LLU),_1d2375913_Range16(11264LLU,11311LLU,1LLU),_1d2375913_Range16(11360LLU,11362LLU,2LLU),_1d2375913_Range16(11363LLU,11364LLU,1LLU),_1d2375913_Range16(11367LLU,11373LLU,2LLU),_1d2375913_Range16(11374LLU,11376LLU,1LLU),_1d2375913_Range16(11378LLU,11381LLU,3LLU),_1d2375913_Range16(11390LLU,11392LLU,1LLU),_1d2375913_Range16(11394LLU,11490LLU,2LLU),_1d2375913_Range16(11499LLU,11501LLU,2LLU),_1d2375913_Range16(11506LLU,42560LLU,31054LLU),_1d2375913_Range16(42562LLU,42604LLU,2LLU),_1d2375913_Range16(42624LLU,42650LLU,2LLU),_1d2375913_Range16(42786LLU,42798LLU,2LLU),_1d2375913_Range16(42802LLU,42862LLU,2LLU),_1d2375913_Range16(42873LLU,42877LLU,2LLU),_1d2375913_Range16(42878LLU,42886LLU,2LLU),_1d2375913_Range16(42891LLU,42893LLU,2LLU),_1d2375913_Range16(42896LLU,42898LLU,2LLU),_1d2375913_Range16(42902LLU,42922LLU,2LLU),_1d2375913_Range16(42923LLU,42926LLU,1LLU),_1d2375913_Range16(42928LLU,42932LLU,1LLU),_1d2375913_Range16(42934LLU,42948LLU,2LLU),_1d2375913_Range16(42949LLU,42951LLU,1LLU),_1d2375913_Range16(42953LLU,42960LLU,7LLU),_1d2375913_Range16(42966LLU,42968LLU,2LLU),_1d2375913_Range16(42997LLU,65313LLU,22316LLU),_1d2375913_Range16(65314LLU,65338LLU,1LLU)}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(66560LLU,66599LLU,1LLU),_1d2375913_Range32(66736LLU,66771LLU,1LLU),_1d2375913_Range32(66928LLU,66938LLU,1LLU),_1d2375913_Range32(66940LLU,66954LLU,1LLU),_1d2375913_Range32(66956LLU,66962LLU,1LLU),_1d2375913_Range32(66964LLU,66965LLU,1LLU),_1d2375913_Range32(68736LLU,68786LLU,1LLU),_1d2375913_Range32(71840LLU,71871LLU,1LLU),_1d2375913_Range32(93760LLU,93791LLU,1LLU),_1d2375913_Range32(119808LLU,119833LLU,1LLU),_1d2375913_Range32(119860LLU,119885LLU,1LLU),_1d2375913_Range32(119912LLU,119937LLU,1LLU),_1d2375913_Range32(119964LLU,119966LLU,2LLU),_1d2375913_Range32(119967LLU,119973LLU,3LLU),_1d2375913_Range32(119974LLU,119977LLU,3LLU),_1d2375913_Range32(119978LLU,119980LLU,1LLU),_1d2375913_Range32(119982LLU,119989LLU,1LLU),_1d2375913_Range32(120016LLU,120041LLU,1LLU),_1d2375913_Range32(120068LLU,120069LLU,1LLU),_1d2375913_Range32(120071LLU,120074LLU,1LLU),_1d2375913_Range32(120077LLU,120084LLU,1LLU),_1d2375913_Range32(120086LLU,120092LLU,1LLU),_1d2375913_Range32(120120LLU,120121LLU,1LLU),_1d2375913_Range32(120123LLU,120126LLU,1LLU),_1d2375913_Range32(120128LLU,120132LLU,1LLU),_1d2375913_Range32(120134LLU,120138LLU,4LLU),_1d2375913_Range32(120139LLU,120144LLU,1LLU),_1d2375913_Range32(120172LLU,120197LLU,1LLU),_1d2375913_Range32(120224LLU,120249LLU,1LLU),_1d2375913_Range32(120276LLU,120301LLU,1LLU),_1d2375913_Range32(120328LLU,120353LLU,1LLU),_1d2375913_Range32(120380LLU,120405LLU,1LLU),_1d2375913_Range32(120432LLU,120457LLU,1LLU),_1d2375913_Range32(120488LLU,120512LLU,1LLU),_1d2375913_Range32(120546LLU,120570LLU,1LLU),_1d2375913_Range32(120604LLU,120628LLU,1LLU),_1d2375913_Range32(120662LLU,120686LLU,1LLU),_1d2375913_Range32(120720LLU,120744LLU,1LLU),_1d2375913_Range32(120778LLU,125184LLU,4406LLU),_1d2375913_Range32(125185LLU,125217LLU,1LLU)}),3LL));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__M = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(768LLU,879LLU,1LLU),_1d2375913_Range16(1155LLU,1161LLU,1LLU),_1d2375913_Range16(1425LLU,1469LLU,1LLU),_1d2375913_Range16(1471LLU,1473LLU,2LLU),_1d2375913_Range16(1474LLU,1476LLU,2LLU),_1d2375913_Range16(1477LLU,1479LLU,2LLU),_1d2375913_Range16(1552LLU,1562LLU,1LLU),_1d2375913_Range16(1611LLU,1631LLU,1LLU),_1d2375913_Range16(1648LLU,1750LLU,102LLU),_1d2375913_Range16(1751LLU,1756LLU,1LLU),_1d2375913_Range16(1759LLU,1764LLU,1LLU),_1d2375913_Range16(1767LLU,1768LLU,1LLU),_1d2375913_Range16(1770LLU,1773LLU,1LLU),_1d2375913_Range16(1809LLU,1840LLU,31LLU),_1d2375913_Range16(1841LLU,1866LLU,1LLU),_1d2375913_Range16(1958LLU,1968LLU,1LLU),_1d2375913_Range16(2027LLU,2035LLU,1LLU),_1d2375913_Range16(2045LLU,2070LLU,25LLU),_1d2375913_Range16(2071LLU,2073LLU,1LLU),_1d2375913_Range16(2075LLU,2083LLU,1LLU),_1d2375913_Range16(2085LLU,2087LLU,1LLU),_1d2375913_Range16(2089LLU,2093LLU,1LLU),_1d2375913_Range16(2137LLU,2139LLU,1LLU),_1d2375913_Range16(2200LLU,2207LLU,1LLU),_1d2375913_Range16(2250LLU,2273LLU,1LLU),_1d2375913_Range16(2275LLU,2307LLU,1LLU),_1d2375913_Range16(2362LLU,2364LLU,1LLU),_1d2375913_Range16(2366LLU,2383LLU,1LLU),_1d2375913_Range16(2385LLU,2391LLU,1LLU),_1d2375913_Range16(2402LLU,2403LLU,1LLU),_1d2375913_Range16(2433LLU,2435LLU,1LLU),_1d2375913_Range16(2492LLU,2494LLU,2LLU),_1d2375913_Range16(2495LLU,2500LLU,1LLU),_1d2375913_Range16(2503LLU,2504LLU,1LLU),_1d2375913_Range16(2507LLU,2509LLU,1LLU),_1d2375913_Range16(2519LLU,2530LLU,11LLU),_1d2375913_Range16(2531LLU,2558LLU,27LLU),_1d2375913_Range16(2561LLU,2563LLU,1LLU),_1d2375913_Range16(2620LLU,2622LLU,2LLU),_1d2375913_Range16(2623LLU,2626LLU,1LLU),_1d2375913_Range16(2631LLU,2632LLU,1LLU),_1d2375913_Range16(2635LLU,2637LLU,1LLU),_1d2375913_Range16(2641LLU,2672LLU,31LLU),_1d2375913_Range16(2673LLU,2677LLU,4LLU),_1d2375913_Range16(2689LLU,2691LLU,1LLU),_1d2375913_Range16(2748LLU,2750LLU,2LLU),_1d2375913_Range16(2751LLU,2757LLU,1LLU),_1d2375913_Range16(2759LLU,2761LLU,1LLU),_1d2375913_Range16(2763LLU,2765LLU,1LLU),_1d2375913_Range16(2786LLU,2787LLU,1LLU),_1d2375913_Range16(2810LLU,2815LLU,1LLU),_1d2375913_Range16(2817LLU,2819LLU,1LLU),_1d2375913_Range16(2876LLU,2878LLU,2LLU),_1d2375913_Range16(2879LLU,2884LLU,1LLU),_1d2375913_Range16(2887LLU,2888LLU,1LLU),_1d2375913_Range16(2891LLU,2893LLU,1LLU),_1d2375913_Range16(2901LLU,2903LLU,1LLU),_1d2375913_Range16(2914LLU,2915LLU,1LLU),_1d2375913_Range16(2946LLU,3006LLU,60LLU),_1d2375913_Range16(3007LLU,3010LLU,1LLU),_1d2375913_Range16(3014LLU,3016LLU,1LLU),_1d2375913_Range16(3018LLU,3021LLU,1LLU),_1d2375913_Range16(3031LLU,3072LLU,41LLU),_1d2375913_Range16(3073LLU,3076LLU,1LLU),_1d2375913_Range16(3132LLU,3134LLU,2LLU),_1d2375913_Range16(3135LLU,3140LLU,1LLU),_1d2375913_Range16(3142LLU,3144LLU,1LLU),_1d2375913_Range16(3146LLU,3149LLU,1LLU),_1d2375913_Range16(3157LLU,3158LLU,1LLU),_1d2375913_Range16(3170LLU,3171LLU,1LLU),_1d2375913_Range16(3201LLU,3203LLU,1LLU),_1d2375913_Range16(3260LLU,3262LLU,2LLU),_1d2375913_Range16(3263LLU,3268LLU,1LLU),_1d2375913_Range16(3270LLU,3272LLU,1LLU),_1d2375913_Range16(3274LLU,3277LLU,1LLU),_1d2375913_Range16(3285LLU,3286LLU,1LLU),_1d2375913_Range16(3298LLU,3299LLU,1LLU),_1d2375913_Range16(3315LLU,3328LLU,13LLU),_1d2375913_Range16(3329LLU,3331LLU,1LLU),_1d2375913_Range16(3387LLU,3388LLU,1LLU),_1d2375913_Range16(3390LLU,3396LLU,1LLU),_1d2375913_Range16(3398LLU,3400LLU,1LLU),_1d2375913_Range16(3402LLU,3405LLU,1LLU),_1d2375913_Range16(3415LLU,3426LLU,11LLU),_1d2375913_Range16(3427LLU,3457LLU,30LLU),_1d2375913_Range16(3458LLU,3459LLU,1LLU),_1d2375913_Range16(3530LLU,3535LLU,5LLU),_1d2375913_Range16(3536LLU,3540LLU,1LLU),_1d2375913_Range16(3542LLU,3544LLU,2LLU),_1d2375913_Range16(3545LLU,3551LLU,1LLU),_1d2375913_Range16(3570LLU,3571LLU,1LLU),_1d2375913_Range16(3633LLU,3636LLU,3LLU),_1d2375913_Range16(3637LLU,3642LLU,1LLU),_1d2375913_Range16(3655LLU,3662LLU,1LLU),_1d2375913_Range16(3761LLU,3764LLU,3LLU),_1d2375913_Range16(3765LLU,3772LLU,1LLU),_1d2375913_Range16(3784LLU,3790LLU,1LLU),_1d2375913_Range16(3864LLU,3865LLU,1LLU),_1d2375913_Range16(3893LLU,3897LLU,2LLU),_1d2375913_Range16(3902LLU,3903LLU,1LLU),_1d2375913_Range16(3953LLU,3972LLU,1LLU),_1d2375913_Range16(3974LLU,3975LLU,1LLU),_1d2375913_Range16(3981LLU,3991LLU,1LLU),_1d2375913_Range16(3993LLU,4028LLU,1LLU),_1d2375913_Range16(4038LLU,4139LLU,101LLU),_1d2375913_Range16(4140LLU,4158LLU,1LLU),_1d2375913_Range16(4182LLU,4185LLU,1LLU),_1d2375913_Range16(4190LLU,4192LLU,1LLU),_1d2375913_Range16(4194LLU,4196LLU,1LLU),_1d2375913_Range16(4199LLU,4205LLU,1LLU),_1d2375913_Range16(4209LLU,4212LLU,1LLU),_1d2375913_Range16(4226LLU,4237LLU,1LLU),_1d2375913_Range16(4239LLU,4250LLU,11LLU),_1d2375913_Range16(4251LLU,4253LLU,1LLU),_1d2375913_Range16(4957LLU,4959LLU,1LLU),_1d2375913_Range16(5906LLU,5909LLU,1LLU),_1d2375913_Range16(5938LLU,5940LLU,1LLU),_1d2375913_Range16(5970LLU,5971LLU,1LLU),_1d2375913_Range16(6002LLU,6003LLU,1LLU),_1d2375913_Range16(6068LLU,6099LLU,1LLU),_1d2375913_Range16(6109LLU,6155LLU,46LLU),_1d2375913_Range16(6156LLU,6157LLU,1LLU),_1d2375913_Range16(6159LLU,6277LLU,118LLU),_1d2375913_Range16(6278LLU,6313LLU,35LLU),_1d2375913_Range16(6432LLU,6443LLU,1LLU),_1d2375913_Range16(6448LLU,6459LLU,1LLU),_1d2375913_Range16(6679LLU,6683LLU,1LLU),_1d2375913_Range16(6741LLU,6750LLU,1LLU),_1d2375913_Range16(6752LLU,6780LLU,1LLU),_1d2375913_Range16(6783LLU,6832LLU,49LLU),_1d2375913_Range16(6833LLU,6862LLU,1LLU),_1d2375913_Range16(6912LLU,6916LLU,1LLU),_1d2375913_Range16(6964LLU,6980LLU,1LLU),_1d2375913_Range16(7019LLU,7027LLU,1LLU),_1d2375913_Range16(7040LLU,7042LLU,1LLU),_1d2375913_Range16(7073LLU,7085LLU,1LLU),_1d2375913_Range16(7142LLU,7155LLU,1LLU),_1d2375913_Range16(7204LLU,7223LLU,1LLU),_1d2375913_Range16(7376LLU,7378LLU,1LLU),_1d2375913_Range16(7380LLU,7400LLU,1LLU),_1d2375913_Range16(7405LLU,7412LLU,7LLU),_1d2375913_Range16(7415LLU,7417LLU,1LLU),_1d2375913_Range16(7616LLU,7679LLU,1LLU),_1d2375913_Range16(8400LLU,8432LLU,1LLU),_1d2375913_Range16(11503LLU,11505LLU,1LLU),_1d2375913_Range16(11647LLU,11744LLU,97LLU),_1d2375913_Range16(11745LLU,11775LLU,1LLU),_1d2375913_Range16(12330LLU,12335LLU,1LLU),_1d2375913_Range16(12441LLU,12442LLU,1LLU),_1d2375913_Range16(42607LLU,42610LLU,1LLU),_1d2375913_Range16(42612LLU,42621LLU,1LLU),_1d2375913_Range16(42654LLU,42655LLU,1LLU),_1d2375913_Range16(42736LLU,42737LLU,1LLU),_1d2375913_Range16(43010LLU,43014LLU,4LLU),_1d2375913_Range16(43019LLU,43043LLU,24LLU),_1d2375913_Range16(43044LLU,43047LLU,1LLU),_1d2375913_Range16(43052LLU,43136LLU,84LLU),_1d2375913_Range16(43137LLU,43188LLU,51LLU),_1d2375913_Range16(43189LLU,43205LLU,1LLU),_1d2375913_Range16(43232LLU,43249LLU,1LLU),_1d2375913_Range16(43263LLU,43302LLU,39LLU),_1d2375913_Range16(43303LLU,43309LLU,1LLU),_1d2375913_Range16(43335LLU,43347LLU,1LLU),_1d2375913_Range16(43392LLU,43395LLU,1LLU),_1d2375913_Range16(43443LLU,43456LLU,1LLU),_1d2375913_Range16(43493LLU,43561LLU,68LLU),_1d2375913_Range16(43562LLU,43574LLU,1LLU),_1d2375913_Range16(43587LLU,43596LLU,9LLU),_1d2375913_Range16(43597LLU,43643LLU,46LLU),_1d2375913_Range16(43644LLU,43645LLU,1LLU),_1d2375913_Range16(43696LLU,43698LLU,2LLU),_1d2375913_Range16(43699LLU,43700LLU,1LLU),_1d2375913_Range16(43703LLU,43704LLU,1LLU),_1d2375913_Range16(43710LLU,43711LLU,1LLU),_1d2375913_Range16(43713LLU,43755LLU,42LLU),_1d2375913_Range16(43756LLU,43759LLU,1LLU),_1d2375913_Range16(43765LLU,43766LLU,1LLU),_1d2375913_Range16(44003LLU,44010LLU,1LLU),_1d2375913_Range16(44012LLU,44013LLU,1LLU),_1d2375913_Range16(64286LLU,65024LLU,738LLU),_1d2375913_Range16(65025LLU,65039LLU,1LLU),_1d2375913_Range16(65056LLU,65071LLU,1LLU)}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(66045LLU,66272LLU,227LLU),_1d2375913_Range32(66422LLU,66426LLU,1LLU),_1d2375913_Range32(68097LLU,68099LLU,1LLU),_1d2375913_Range32(68101LLU,68102LLU,1LLU),_1d2375913_Range32(68108LLU,68111LLU,1LLU),_1d2375913_Range32(68152LLU,68154LLU,1LLU),_1d2375913_Range32(68159LLU,68325LLU,166LLU),_1d2375913_Range32(68326LLU,68900LLU,574LLU),_1d2375913_Range32(68901LLU,68903LLU,1LLU),_1d2375913_Range32(69291LLU,69292LLU,1LLU),_1d2375913_Range32(69373LLU,69375LLU,1LLU),_1d2375913_Range32(69446LLU,69456LLU,1LLU),_1d2375913_Range32(69506LLU,69509LLU,1LLU),_1d2375913_Range32(69632LLU,69634LLU,1LLU),_1d2375913_Range32(69688LLU,69702LLU,1LLU),_1d2375913_Range32(69744LLU,69747LLU,3LLU),_1d2375913_Range32(69748LLU,69759LLU,11LLU),_1d2375913_Range32(69760LLU,69762LLU,1LLU),_1d2375913_Range32(69808LLU,69818LLU,1LLU),_1d2375913_Range32(69826LLU,69888LLU,62LLU),_1d2375913_Range32(69889LLU,69890LLU,1LLU),_1d2375913_Range32(69927LLU,69940LLU,1LLU),_1d2375913_Range32(69957LLU,69958LLU,1LLU),_1d2375913_Range32(70003LLU,70016LLU,13LLU),_1d2375913_Range32(70017LLU,70018LLU,1LLU),_1d2375913_Range32(70067LLU,70080LLU,1LLU),_1d2375913_Range32(70089LLU,70092LLU,1LLU),_1d2375913_Range32(70094LLU,70095LLU,1LLU),_1d2375913_Range32(70188LLU,70199LLU,1LLU),_1d2375913_Range32(70206LLU,70209LLU,3LLU),_1d2375913_Range32(70367LLU,70378LLU,1LLU),_1d2375913_Range32(70400LLU,70403LLU,1LLU),_1d2375913_Range32(70459LLU,70460LLU,1LLU),_1d2375913_Range32(70462LLU,70468LLU,1LLU),_1d2375913_Range32(70471LLU,70472LLU,1LLU),_1d2375913_Range32(70475LLU,70477LLU,1LLU),_1d2375913_Range32(70487LLU,70498LLU,11LLU),_1d2375913_Range32(70499LLU,70502LLU,3LLU),_1d2375913_Range32(70503LLU,70508LLU,1LLU),_1d2375913_Range32(70512LLU,70516LLU,1LLU),_1d2375913_Range32(70709LLU,70726LLU,1LLU),_1d2375913_Range32(70750LLU,70832LLU,82LLU),_1d2375913_Range32(70833LLU,70851LLU,1LLU),_1d2375913_Range32(71087LLU,71093LLU,1LLU),_1d2375913_Range32(71096LLU,71104LLU,1LLU),_1d2375913_Range32(71132LLU,71133LLU,1LLU),_1d2375913_Range32(71216LLU,71232LLU,1LLU),_1d2375913_Range32(71339LLU,71351LLU,1LLU),_1d2375913_Range32(71453LLU,71467LLU,1LLU),_1d2375913_Range32(71724LLU,71738LLU,1LLU),_1d2375913_Range32(71984LLU,71989LLU,1LLU),_1d2375913_Range32(71991LLU,71992LLU,1LLU),_1d2375913_Range32(71995LLU,71998LLU,1LLU),_1d2375913_Range32(72000LLU,72002LLU,2LLU),_1d2375913_Range32(72003LLU,72145LLU,142LLU),_1d2375913_Range32(72146LLU,72151LLU,1LLU),_1d2375913_Range32(72154LLU,72160LLU,1LLU),_1d2375913_Range32(72164LLU,72193LLU,29LLU),_1d2375913_Range32(72194LLU,72202LLU,1LLU),_1d2375913_Range32(72243LLU,72249LLU,1LLU),_1d2375913_Range32(72251LLU,72254LLU,1LLU),_1d2375913_Range32(72263LLU,72273LLU,10LLU),_1d2375913_Range32(72274LLU,72283LLU,1LLU),_1d2375913_Range32(72330LLU,72345LLU,1LLU),_1d2375913_Range32(72751LLU,72758LLU,1LLU),_1d2375913_Range32(72760LLU,72767LLU,1LLU),_1d2375913_Range32(72850LLU,72871LLU,1LLU),_1d2375913_Range32(72873LLU,72886LLU,1LLU),_1d2375913_Range32(73009LLU,73014LLU,1LLU),_1d2375913_Range32(73018LLU,73020LLU,2LLU),_1d2375913_Range32(73021LLU,73023LLU,2LLU),_1d2375913_Range32(73024LLU,73029LLU,1LLU),_1d2375913_Range32(73031LLU,73098LLU,67LLU),_1d2375913_Range32(73099LLU,73102LLU,1LLU),_1d2375913_Range32(73104LLU,73105LLU,1LLU),_1d2375913_Range32(73107LLU,73111LLU,1LLU),_1d2375913_Range32(73459LLU,73462LLU,1LLU),_1d2375913_Range32(73472LLU,73473LLU,1LLU),_1d2375913_Range32(73475LLU,73524LLU,49LLU),_1d2375913_Range32(73525LLU,73530LLU,1LLU),_1d2375913_Range32(73534LLU,73538LLU,1LLU),_1d2375913_Range32(78912LLU,78919LLU,7LLU),_1d2375913_Range32(78920LLU,78933LLU,1LLU),_1d2375913_Range32(92912LLU,92916LLU,1LLU),_1d2375913_Range32(92976LLU,92982LLU,1LLU),_1d2375913_Range32(94031LLU,94033LLU,2LLU),_1d2375913_Range32(94034LLU,94087LLU,1LLU),_1d2375913_Range32(94095LLU,94098LLU,1LLU),_1d2375913_Range32(94180LLU,94192LLU,12LLU),_1d2375913_Range32(94193LLU,113821LLU,19628LLU),_1d2375913_Range32(113822LLU,118528LLU,4706LLU),_1d2375913_Range32(118529LLU,118573LLU,1LLU),_1d2375913_Range32(118576LLU,118598LLU,1LLU),_1d2375913_Range32(119141LLU,119145LLU,1LLU),_1d2375913_Range32(119149LLU,119154LLU,1LLU),_1d2375913_Range32(119163LLU,119170LLU,1LLU),_1d2375913_Range32(119173LLU,119179LLU,1LLU),_1d2375913_Range32(119210LLU,119213LLU,1LLU),_1d2375913_Range32(119362LLU,119364LLU,1LLU),_1d2375913_Range32(121344LLU,121398LLU,1LLU),_1d2375913_Range32(121403LLU,121452LLU,1LLU),_1d2375913_Range32(121461LLU,121476LLU,15LLU),_1d2375913_Range32(121499LLU,121503LLU,1LLU),_1d2375913_Range32(121505LLU,121519LLU,1LLU),_1d2375913_Range32(122880LLU,122886LLU,1LLU),_1d2375913_Range32(122888LLU,122904LLU,1LLU),_1d2375913_Range32(122907LLU,122913LLU,1LLU),_1d2375913_Range32(122915LLU,122916LLU,1LLU),_1d2375913_Range32(122918LLU,122922LLU,1LLU),_1d2375913_Range32(123023LLU,123184LLU,161LLU),_1d2375913_Range32(123185LLU,123190LLU,1LLU),_1d2375913_Range32(123566LLU,123628LLU,62LLU),_1d2375913_Range32(123629LLU,123631LLU,1LLU),_1d2375913_Range32(124140LLU,124143LLU,1LLU),_1d2375913_Range32(125136LLU,125142LLU,1LLU),_1d2375913_Range32(125252LLU,125258LLU,1LLU),_1d2375913_Range32(917760LLU,917999LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__MC = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(2307LLU,2363LLU,56LLU),_1d2375913_Range16(2366LLU,2368LLU,1LLU),_1d2375913_Range16(2377LLU,2380LLU,1LLU),_1d2375913_Range16(2382LLU,2383LLU,1LLU),_1d2375913_Range16(2434LLU,2435LLU,1LLU),_1d2375913_Range16(2494LLU,2496LLU,1LLU),_1d2375913_Range16(2503LLU,2504LLU,1LLU),_1d2375913_Range16(2507LLU,2508LLU,1LLU),_1d2375913_Range16(2519LLU,2563LLU,44LLU),_1d2375913_Range16(2622LLU,2624LLU,1LLU),_1d2375913_Range16(2691LLU,2750LLU,59LLU),_1d2375913_Range16(2751LLU,2752LLU,1LLU),_1d2375913_Range16(2761LLU,2763LLU,2LLU),_1d2375913_Range16(2764LLU,2818LLU,54LLU),_1d2375913_Range16(2819LLU,2878LLU,59LLU),_1d2375913_Range16(2880LLU,2887LLU,7LLU),_1d2375913_Range16(2888LLU,2891LLU,3LLU),_1d2375913_Range16(2892LLU,2903LLU,11LLU),_1d2375913_Range16(3006LLU,3007LLU,1LLU),_1d2375913_Range16(3009LLU,3010LLU,1LLU),_1d2375913_Range16(3014LLU,3016LLU,1LLU),_1d2375913_Range16(3018LLU,3020LLU,1LLU),_1d2375913_Range16(3031LLU,3073LLU,42LLU),_1d2375913_Range16(3074LLU,3075LLU,1LLU),_1d2375913_Range16(3137LLU,3140LLU,1LLU),_1d2375913_Range16(3202LLU,3203LLU,1LLU),_1d2375913_Range16(3262LLU,3264LLU,2LLU),_1d2375913_Range16(3265LLU,3268LLU,1LLU),_1d2375913_Range16(3271LLU,3272LLU,1LLU),_1d2375913_Range16(3274LLU,3275LLU,1LLU),_1d2375913_Range16(3285LLU,3286LLU,1LLU),_1d2375913_Range16(3315LLU,3330LLU,15LLU),_1d2375913_Range16(3331LLU,3390LLU,59LLU),_1d2375913_Range16(3391LLU,3392LLU,1LLU),_1d2375913_Range16(3398LLU,3400LLU,1LLU),_1d2375913_Range16(3402LLU,3404LLU,1LLU),_1d2375913_Range16(3415LLU,3458LLU,43LLU),_1d2375913_Range16(3459LLU,3535LLU,76LLU),_1d2375913_Range16(3536LLU,3537LLU,1LLU),_1d2375913_Range16(3544LLU,3551LLU,1LLU),_1d2375913_Range16(3570LLU,3571LLU,1LLU),_1d2375913_Range16(3902LLU,3903LLU,1LLU),_1d2375913_Range16(3967LLU,4139LLU,172LLU),_1d2375913_Range16(4140LLU,4145LLU,5LLU),_1d2375913_Range16(4152LLU,4155LLU,3LLU),_1d2375913_Range16(4156LLU,4182LLU,26LLU),_1d2375913_Range16(4183LLU,4194LLU,11LLU),_1d2375913_Range16(4195LLU,4196LLU,1LLU),_1d2375913_Range16(4199LLU,4205LLU,1LLU),_1d2375913_Range16(4227LLU,4228LLU,1LLU),_1d2375913_Range16(4231LLU,4236LLU,1LLU),_1d2375913_Range16(4239LLU,4250LLU,11LLU),_1d2375913_Range16(4251LLU,4252LLU,1LLU),_1d2375913_Range16(5909LLU,5940LLU,31LLU),_1d2375913_Range16(6070LLU,6078LLU,8LLU),_1d2375913_Range16(6079LLU,6085LLU,1LLU),_1d2375913_Range16(6087LLU,6088LLU,1LLU),_1d2375913_Range16(6435LLU,6438LLU,1LLU),_1d2375913_Range16(6441LLU,6443LLU,1LLU),_1d2375913_Range16(6448LLU,6449LLU,1LLU),_1d2375913_Range16(6451LLU,6456LLU,1LLU),_1d2375913_Range16(6681LLU,6682LLU,1LLU),_1d2375913_Range16(6741LLU,6743LLU,2LLU),_1d2375913_Range16(6753LLU,6755LLU,2LLU),_1d2375913_Range16(6756LLU,6765LLU,9LLU),_1d2375913_Range16(6766LLU,6770LLU,1LLU),_1d2375913_Range16(6916LLU,6965LLU,49LLU),_1d2375913_Range16(6971LLU,6973LLU,2LLU),_1d2375913_Range16(6974LLU,6977LLU,1LLU),_1d2375913_Range16(6979LLU,6980LLU,1LLU),_1d2375913_Range16(7042LLU,7073LLU,31LLU),_1d2375913_Range16(7078LLU,7079LLU,1LLU),_1d2375913_Range16(7082LLU,7143LLU,61LLU),_1d2375913_Range16(7146LLU,7148LLU,1LLU),_1d2375913_Range16(7150LLU,7154LLU,4LLU),_1d2375913_Range16(7155LLU,7204LLU,49LLU),_1d2375913_Range16(7205LLU,7211LLU,1LLU),_1d2375913_Range16(7220LLU,7221LLU,1LLU),_1d2375913_Range16(7393LLU,7415LLU,22LLU),_1d2375913_Range16(12334LLU,12335LLU,1LLU),_1d2375913_Range16(43043LLU,43044LLU,1LLU),_1d2375913_Range16(43047LLU,43136LLU,89LLU),_1d2375913_Range16(43137LLU,43188LLU,51LLU),_1d2375913_Range16(43189LLU,43203LLU,1LLU),_1d2375913_Range16(43346LLU,43347LLU,1LLU),_1d2375913_Range16(43395LLU,43444LLU,49LLU),_1d2375913_Range16(43445LLU,43450LLU,5LLU),_1d2375913_Range16(43451LLU,43454LLU,3LLU),_1d2375913_Range16(43455LLU,43456LLU,1LLU),_1d2375913_Range16(43567LLU,43568LLU,1LLU),_1d2375913_Range16(43571LLU,43572LLU,1LLU),_1d2375913_Range16(43597LLU,43643LLU,46LLU),_1d2375913_Range16(43645LLU,43755LLU,110LLU),_1d2375913_Range16(43758LLU,43759LLU,1LLU),_1d2375913_Range16(43765LLU,44003LLU,238LLU),_1d2375913_Range16(44004LLU,44006LLU,2LLU),_1d2375913_Range16(44007LLU,44009LLU,2LLU),_1d2375913_Range16(44010LLU,44012LLU,2LLU)}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(69632LLU,69634LLU,2LLU),_1d2375913_Range32(69762LLU,69808LLU,46LLU),_1d2375913_Range32(69809LLU,69810LLU,1LLU),_1d2375913_Range32(69815LLU,69816LLU,1LLU),_1d2375913_Range32(69932LLU,69957LLU,25LLU),_1d2375913_Range32(69958LLU,70018LLU,60LLU),_1d2375913_Range32(70067LLU,70069LLU,1LLU),_1d2375913_Range32(70079LLU,70080LLU,1LLU),_1d2375913_Range32(70094LLU,70188LLU,94LLU),_1d2375913_Range32(70189LLU,70190LLU,1LLU),_1d2375913_Range32(70194LLU,70195LLU,1LLU),_1d2375913_Range32(70197LLU,70368LLU,171LLU),_1d2375913_Range32(70369LLU,70370LLU,1LLU),_1d2375913_Range32(70402LLU,70403LLU,1LLU),_1d2375913_Range32(70462LLU,70463LLU,1LLU),_1d2375913_Range32(70465LLU,70468LLU,1LLU),_1d2375913_Range32(70471LLU,70472LLU,1LLU),_1d2375913_Range32(70475LLU,70477LLU,1LLU),_1d2375913_Range32(70487LLU,70498LLU,11LLU),_1d2375913_Range32(70499LLU,70709LLU,210LLU),_1d2375913_Range32(70710LLU,70711LLU,1LLU),_1d2375913_Range32(70720LLU,70721LLU,1LLU),_1d2375913_Range32(70725LLU,70832LLU,107LLU),_1d2375913_Range32(70833LLU,70834LLU,1LLU),_1d2375913_Range32(70841LLU,70843LLU,2LLU),_1d2375913_Range32(70844LLU,70846LLU,1LLU),_1d2375913_Range32(70849LLU,71087LLU,238LLU),_1d2375913_Range32(71088LLU,71089LLU,1LLU),_1d2375913_Range32(71096LLU,71099LLU,1LLU),_1d2375913_Range32(71102LLU,71216LLU,114LLU),_1d2375913_Range32(71217LLU,71218LLU,1LLU),_1d2375913_Range32(71227LLU,71228LLU,1LLU),_1d2375913_Range32(71230LLU,71340LLU,110LLU),_1d2375913_Range32(71342LLU,71343LLU,1LLU),_1d2375913_Range32(71350LLU,71456LLU,106LLU),_1d2375913_Range32(71457LLU,71462LLU,5LLU),_1d2375913_Range32(71724LLU,71726LLU,1LLU),_1d2375913_Range32(71736LLU,71984LLU,248LLU),_1d2375913_Range32(71985LLU,71989LLU,1LLU),_1d2375913_Range32(71991LLU,71992LLU,1LLU),_1d2375913_Range32(71997LLU,72000LLU,3LLU),_1d2375913_Range32(72002LLU,72145LLU,143LLU),_1d2375913_Range32(72146LLU,72147LLU,1LLU),_1d2375913_Range32(72156LLU,72159LLU,1LLU),_1d2375913_Range32(72164LLU,72249LLU,85LLU),_1d2375913_Range32(72279LLU,72280LLU,1LLU),_1d2375913_Range32(72343LLU,72751LLU,408LLU),_1d2375913_Range32(72766LLU,72873LLU,107LLU),_1d2375913_Range32(72881LLU,72884LLU,3LLU),_1d2375913_Range32(73098LLU,73102LLU,1LLU),_1d2375913_Range32(73107LLU,73108LLU,1LLU),_1d2375913_Range32(73110LLU,73461LLU,351LLU),_1d2375913_Range32(73462LLU,73475LLU,13LLU),_1d2375913_Range32(73524LLU,73525LLU,1LLU),_1d2375913_Range32(73534LLU,73535LLU,1LLU),_1d2375913_Range32(73537LLU,94033LLU,20496LLU),_1d2375913_Range32(94034LLU,94087LLU,1LLU),_1d2375913_Range32(94192LLU,94193LLU,1LLU),_1d2375913_Range32(119141LLU,119142LLU,1LLU),_1d2375913_Range32(119149LLU,119154LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__ME = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(1160LLU,1161LLU,1LLU),_1d2375913_Range16(6846LLU,8413LLU,1567LLU),_1d2375913_Range16(8414LLU,8416LLU,1LLU),_1d2375913_Range16(8418LLU,8420LLU,1LLU),_1d2375913_Range16(42608LLU,42610LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__MN = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(768LLU,879LLU,1LLU),_1d2375913_Range16(1155LLU,1159LLU,1LLU),_1d2375913_Range16(1425LLU,1469LLU,1LLU),_1d2375913_Range16(1471LLU,1473LLU,2LLU),_1d2375913_Range16(1474LLU,1476LLU,2LLU),_1d2375913_Range16(1477LLU,1479LLU,2LLU),_1d2375913_Range16(1552LLU,1562LLU,1LLU),_1d2375913_Range16(1611LLU,1631LLU,1LLU),_1d2375913_Range16(1648LLU,1750LLU,102LLU),_1d2375913_Range16(1751LLU,1756LLU,1LLU),_1d2375913_Range16(1759LLU,1764LLU,1LLU),_1d2375913_Range16(1767LLU,1768LLU,1LLU),_1d2375913_Range16(1770LLU,1773LLU,1LLU),_1d2375913_Range16(1809LLU,1840LLU,31LLU),_1d2375913_Range16(1841LLU,1866LLU,1LLU),_1d2375913_Range16(1958LLU,1968LLU,1LLU),_1d2375913_Range16(2027LLU,2035LLU,1LLU),_1d2375913_Range16(2045LLU,2070LLU,25LLU),_1d2375913_Range16(2071LLU,2073LLU,1LLU),_1d2375913_Range16(2075LLU,2083LLU,1LLU),_1d2375913_Range16(2085LLU,2087LLU,1LLU),_1d2375913_Range16(2089LLU,2093LLU,1LLU),_1d2375913_Range16(2137LLU,2139LLU,1LLU),_1d2375913_Range16(2200LLU,2207LLU,1LLU),_1d2375913_Range16(2250LLU,2273LLU,1LLU),_1d2375913_Range16(2275LLU,2306LLU,1LLU),_1d2375913_Range16(2362LLU,2364LLU,2LLU),_1d2375913_Range16(2369LLU,2376LLU,1LLU),_1d2375913_Range16(2381LLU,2385LLU,4LLU),_1d2375913_Range16(2386LLU,2391LLU,1LLU),_1d2375913_Range16(2402LLU,2403LLU,1LLU),_1d2375913_Range16(2433LLU,2492LLU,59LLU),_1d2375913_Range16(2497LLU,2500LLU,1LLU),_1d2375913_Range16(2509LLU,2530LLU,21LLU),_1d2375913_Range16(2531LLU,2558LLU,27LLU),_1d2375913_Range16(2561LLU,2562LLU,1LLU),_1d2375913_Range16(2620LLU,2625LLU,5LLU),_1d2375913_Range16(2626LLU,2631LLU,5LLU),_1d2375913_Range16(2632LLU,2635LLU,3LLU),_1d2375913_Range16(2636LLU,2637LLU,1LLU),_1d2375913_Range16(2641LLU,2672LLU,31LLU),_1d2375913_Range16(2673LLU,2677LLU,4LLU),_1d2375913_Range16(2689LLU,2690LLU,1LLU),_1d2375913_Range16(2748LLU,2753LLU,5LLU),_1d2375913_Range16(2754LLU,2757LLU,1LLU),_1d2375913_Range16(2759LLU,2760LLU,1LLU),_1d2375913_Range16(2765LLU,2786LLU,21LLU),_1d2375913_Range16(2787LLU,2810LLU,23LLU),_1d2375913_Range16(2811LLU,2815LLU,1LLU),_1d2375913_Range16(2817LLU,2876LLU,59LLU),_1d2375913_Range16(2879LLU,2881LLU,2LLU),_1d2375913_Range16(2882LLU,2884LLU,1LLU),_1d2375913_Range16(2893LLU,2901LLU,8LLU),_1d2375913_Range16(2902LLU,2914LLU,12LLU),_1d2375913_Range16(2915LLU,2946LLU,31LLU),_1d2375913_Range16(3008LLU,3021LLU,13LLU),_1d2375913_Range16(3072LLU,3076LLU,4LLU),_1d2375913_Range16(3132LLU,3134LLU,2LLU),_1d2375913_Range16(3135LLU,3136LLU,1LLU),_1d2375913_Range16(3142LLU,3144LLU,1LLU),_1d2375913_Range16(3146LLU,3149LLU,1LLU),_1d2375913_Range16(3157LLU,3158LLU,1LLU),_1d2375913_Range16(3170LLU,3171LLU,1LLU),_1d2375913_Range16(3201LLU,3260LLU,59LLU),_1d2375913_Range16(3263LLU,3270LLU,7LLU),_1d2375913_Range16(3276LLU,3277LLU,1LLU),_1d2375913_Range16(3298LLU,3299LLU,1LLU),_1d2375913_Range16(3328LLU,3329LLU,1LLU),_1d2375913_Range16(3387LLU,3388LLU,1LLU),_1d2375913_Range16(3393LLU,3396LLU,1LLU),_1d2375913_Range16(3405LLU,3426LLU,21LLU),_1d2375913_Range16(3427LLU,3457LLU,30LLU),_1d2375913_Range16(3530LLU,3538LLU,8LLU),_1d2375913_Range16(3539LLU,3540LLU,1LLU),_1d2375913_Range16(3542LLU,3633LLU,91LLU),_1d2375913_Range16(3636LLU,3642LLU,1LLU),_1d2375913_Range16(3655LLU,3662LLU,1LLU),_1d2375913_Range16(3761LLU,3764LLU,3LLU),_1d2375913_Range16(3765LLU,3772LLU,1LLU),_1d2375913_Range16(3784LLU,3790LLU,1LLU),_1d2375913_Range16(3864LLU,3865LLU,1LLU),_1d2375913_Range16(3893LLU,3897LLU,2LLU),_1d2375913_Range16(3953LLU,3966LLU,1LLU),_1d2375913_Range16(3968LLU,3972LLU,1LLU),_1d2375913_Range16(3974LLU,3975LLU,1LLU),_1d2375913_Range16(3981LLU,3991LLU,1LLU),_1d2375913_Range16(3993LLU,4028LLU,1LLU),_1d2375913_Range16(4038LLU,4141LLU,103LLU),_1d2375913_Range16(4142LLU,4144LLU,1LLU),_1d2375913_Range16(4146LLU,4151LLU,1LLU),_1d2375913_Range16(4153LLU,4154LLU,1LLU),_1d2375913_Range16(4157LLU,4158LLU,1LLU),_1d2375913_Range16(4184LLU,4185LLU,1LLU),_1d2375913_Range16(4190LLU,4192LLU,1LLU),_1d2375913_Range16(4209LLU,4212LLU,1LLU),_1d2375913_Range16(4226LLU,4229LLU,3LLU),_1d2375913_Range16(4230LLU,4237LLU,7LLU),_1d2375913_Range16(4253LLU,4957LLU,704LLU),_1d2375913_Range16(4958LLU,4959LLU,1LLU),_1d2375913_Range16(5906LLU,5908LLU,1LLU),_1d2375913_Range16(5938LLU,5939LLU,1LLU),_1d2375913_Range16(5970LLU,5971LLU,1LLU),_1d2375913_Range16(6002LLU,6003LLU,1LLU),_1d2375913_Range16(6068LLU,6069LLU,1LLU),_1d2375913_Range16(6071LLU,6077LLU,1LLU),_1d2375913_Range16(6086LLU,6089LLU,3LLU),_1d2375913_Range16(6090LLU,6099LLU,1LLU),_1d2375913_Range16(6109LLU,6155LLU,46LLU),_1d2375913_Range16(6156LLU,6157LLU,1LLU),_1d2375913_Range16(6159LLU,6277LLU,118LLU),_1d2375913_Range16(6278LLU,6313LLU,35LLU),_1d2375913_Range16(6432LLU,6434LLU,1LLU),_1d2375913_Range16(6439LLU,6440LLU,1LLU),_1d2375913_Range16(6450LLU,6457LLU,7LLU),_1d2375913_Range16(6458LLU,6459LLU,1LLU),_1d2375913_Range16(6679LLU,6680LLU,1LLU),_1d2375913_Range16(6683LLU,6742LLU,59LLU),_1d2375913_Range16(6744LLU,6750LLU,1LLU),_1d2375913_Range16(6752LLU,6754LLU,2LLU),_1d2375913_Range16(6757LLU,6764LLU,1LLU),_1d2375913_Range16(6771LLU,6780LLU,1LLU),_1d2375913_Range16(6783LLU,6832LLU,49LLU),_1d2375913_Range16(6833LLU,6845LLU,1LLU),_1d2375913_Range16(6847LLU,6862LLU,1LLU),_1d2375913_Range16(6912LLU,6915LLU,1LLU),_1d2375913_Range16(6964LLU,6966LLU,2LLU),_1d2375913_Range16(6967LLU,6970LLU,1LLU),_1d2375913_Range16(6972LLU,6978LLU,6LLU),_1d2375913_Range16(7019LLU,7027LLU,1LLU),_1d2375913_Range16(7040LLU,7041LLU,1LLU),_1d2375913_Range16(7074LLU,7077LLU,1LLU),_1d2375913_Range16(7080LLU,7081LLU,1LLU),_1d2375913_Range16(7083LLU,7085LLU,1LLU),_1d2375913_Range16(7142LLU,7144LLU,2LLU),_1d2375913_Range16(7145LLU,7149LLU,4LLU),_1d2375913_Range16(7151LLU,7153LLU,1LLU),_1d2375913_Range16(7212LLU,7219LLU,1LLU),_1d2375913_Range16(7222LLU,7223LLU,1LLU),_1d2375913_Range16(7376LLU,7378LLU,1LLU),_1d2375913_Range16(7380LLU,7392LLU,1LLU),_1d2375913_Range16(7394LLU,7400LLU,1LLU),_1d2375913_Range16(7405LLU,7412LLU,7LLU),_1d2375913_Range16(7416LLU,7417LLU,1LLU),_1d2375913_Range16(7616LLU,7679LLU,1LLU),_1d2375913_Range16(8400LLU,8412LLU,1LLU),_1d2375913_Range16(8417LLU,8421LLU,4LLU),_1d2375913_Range16(8422LLU,8432LLU,1LLU),_1d2375913_Range16(11503LLU,11505LLU,1LLU),_1d2375913_Range16(11647LLU,11744LLU,97LLU),_1d2375913_Range16(11745LLU,11775LLU,1LLU),_1d2375913_Range16(12330LLU,12333LLU,1LLU),_1d2375913_Range16(12441LLU,12442LLU,1LLU),_1d2375913_Range16(42607LLU,42612LLU,5LLU),_1d2375913_Range16(42613LLU,42621LLU,1LLU),_1d2375913_Range16(42654LLU,42655LLU,1LLU),_1d2375913_Range16(42736LLU,42737LLU,1LLU),_1d2375913_Range16(43010LLU,43014LLU,4LLU),_1d2375913_Range16(43019LLU,43045LLU,26LLU),_1d2375913_Range16(43046LLU,43052LLU,6LLU),_1d2375913_Range16(43204LLU,43205LLU,1LLU),_1d2375913_Range16(43232LLU,43249LLU,1LLU),_1d2375913_Range16(43263LLU,43302LLU,39LLU),_1d2375913_Range16(43303LLU,43309LLU,1LLU),_1d2375913_Range16(43335LLU,43345LLU,1LLU),_1d2375913_Range16(43392LLU,43394LLU,1LLU),_1d2375913_Range16(43443LLU,43446LLU,3LLU),_1d2375913_Range16(43447LLU,43449LLU,1LLU),_1d2375913_Range16(43452LLU,43453LLU,1LLU),_1d2375913_Range16(43493LLU,43561LLU,68LLU),_1d2375913_Range16(43562LLU,43566LLU,1LLU),_1d2375913_Range16(43569LLU,43570LLU,1LLU),_1d2375913_Range16(43573LLU,43574LLU,1LLU),_1d2375913_Range16(43587LLU,43596LLU,9LLU),_1d2375913_Range16(43644LLU,43696LLU,52LLU),_1d2375913_Range16(43698LLU,43700LLU,1LLU),_1d2375913_Range16(43703LLU,43704LLU,1LLU),_1d2375913_Range16(43710LLU,43711LLU,1LLU),_1d2375913_Range16(43713LLU,43756LLU,43LLU),_1d2375913_Range16(43757LLU,43766LLU,9LLU),_1d2375913_Range16(44005LLU,44008LLU,3LLU),_1d2375913_Range16(44013LLU,64286LLU,20273LLU),_1d2375913_Range16(65024LLU,65039LLU,1LLU),_1d2375913_Range16(65056LLU,65071LLU,1LLU)}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(66045LLU,66272LLU,227LLU),_1d2375913_Range32(66422LLU,66426LLU,1LLU),_1d2375913_Range32(68097LLU,68099LLU,1LLU),_1d2375913_Range32(68101LLU,68102LLU,1LLU),_1d2375913_Range32(68108LLU,68111LLU,1LLU),_1d2375913_Range32(68152LLU,68154LLU,1LLU),_1d2375913_Range32(68159LLU,68325LLU,166LLU),_1d2375913_Range32(68326LLU,68900LLU,574LLU),_1d2375913_Range32(68901LLU,68903LLU,1LLU),_1d2375913_Range32(69291LLU,69292LLU,1LLU),_1d2375913_Range32(69373LLU,69375LLU,1LLU),_1d2375913_Range32(69446LLU,69456LLU,1LLU),_1d2375913_Range32(69506LLU,69509LLU,1LLU),_1d2375913_Range32(69633LLU,69688LLU,55LLU),_1d2375913_Range32(69689LLU,69702LLU,1LLU),_1d2375913_Range32(69744LLU,69747LLU,3LLU),_1d2375913_Range32(69748LLU,69759LLU,11LLU),_1d2375913_Range32(69760LLU,69761LLU,1LLU),_1d2375913_Range32(69811LLU,69814LLU,1LLU),_1d2375913_Range32(69817LLU,69818LLU,1LLU),_1d2375913_Range32(69826LLU,69888LLU,62LLU),_1d2375913_Range32(69889LLU,69890LLU,1LLU),_1d2375913_Range32(69927LLU,69931LLU,1LLU),_1d2375913_Range32(69933LLU,69940LLU,1LLU),_1d2375913_Range32(70003LLU,70016LLU,13LLU),_1d2375913_Range32(70017LLU,70070LLU,53LLU),_1d2375913_Range32(70071LLU,70078LLU,1LLU),_1d2375913_Range32(70089LLU,70092LLU,1LLU),_1d2375913_Range32(70095LLU,70191LLU,96LLU),_1d2375913_Range32(70192LLU,70193LLU,1LLU),_1d2375913_Range32(70196LLU,70198LLU,2LLU),_1d2375913_Range32(70199LLU,70206LLU,7LLU),_1d2375913_Range32(70209LLU,70367LLU,158LLU),_1d2375913_Range32(70371LLU,70378LLU,1LLU),_1d2375913_Range32(70400LLU,70401LLU,1LLU),_1d2375913_Range32(70459LLU,70460LLU,1LLU),_1d2375913_Range32(70464LLU,70502LLU,38LLU),_1d2375913_Range32(70503LLU,70508LLU,1LLU),_1d2375913_Range32(70512LLU,70516LLU,1LLU),_1d2375913_Range32(70712LLU,70719LLU,1LLU),_1d2375913_Range32(70722LLU,70724LLU,1LLU),_1d2375913_Range32(70726LLU,70750LLU,24LLU),_1d2375913_Range32(70835LLU,70840LLU,1LLU),_1d2375913_Range32(70842LLU,70847LLU,5LLU),_1d2375913_Range32(70848LLU,70850LLU,2LLU),_1d2375913_Range32(70851LLU,71090LLU,239LLU),_1d2375913_Range32(71091LLU,71093LLU,1LLU),_1d2375913_Range32(71100LLU,71101LLU,1LLU),_1d2375913_Range32(71103LLU,71104LLU,1LLU),_1d2375913_Range32(71132LLU,71133LLU,1LLU),_1d2375913_Range32(71219LLU,71226LLU,1LLU),_1d2375913_Range32(71229LLU,71231LLU,2LLU),_1d2375913_Range32(71232LLU,71339LLU,107LLU),_1d2375913_Range32(71341LLU,71344LLU,3LLU),_1d2375913_Range32(71345LLU,71349LLU,1LLU),_1d2375913_Range32(71351LLU,71453LLU,102LLU),_1d2375913_Range32(71454LLU,71455LLU,1LLU),_1d2375913_Range32(71458LLU,71461LLU,1LLU),_1d2375913_Range32(71463LLU,71467LLU,1LLU),_1d2375913_Range32(71727LLU,71735LLU,1LLU),_1d2375913_Range32(71737LLU,71738LLU,1LLU),_1d2375913_Range32(71995LLU,71996LLU,1LLU),_1d2375913_Range32(71998LLU,72003LLU,5LLU),_1d2375913_Range32(72148LLU,72151LLU,1LLU),_1d2375913_Range32(72154LLU,72155LLU,1LLU),_1d2375913_Range32(72160LLU,72193LLU,33LLU),_1d2375913_Range32(72194LLU,72202LLU,1LLU),_1d2375913_Range32(72243LLU,72248LLU,1LLU),_1d2375913_Range32(72251LLU,72254LLU,1LLU),_1d2375913_Range32(72263LLU,72273LLU,10LLU),_1d2375913_Range32(72274LLU,72278LLU,1LLU),_1d2375913_Range32(72281LLU,72283LLU,1LLU),_1d2375913_Range32(72330LLU,72342LLU,1LLU),_1d2375913_Range32(72344LLU,72345LLU,1LLU),_1d2375913_Range32(72752LLU,72758LLU,1LLU),_1d2375913_Range32(72760LLU,72765LLU,1LLU),_1d2375913_Range32(72767LLU,72850LLU,83LLU),_1d2375913_Range32(72851LLU,72871LLU,1LLU),_1d2375913_Range32(72874LLU,72880LLU,1LLU),_1d2375913_Range32(72882LLU,72883LLU,1LLU),_1d2375913_Range32(72885LLU,72886LLU,1LLU),_1d2375913_Range32(73009LLU,73014LLU,1LLU),_1d2375913_Range32(73018LLU,73020LLU,2LLU),_1d2375913_Range32(73021LLU,73023LLU,2LLU),_1d2375913_Range32(73024LLU,73029LLU,1LLU),_1d2375913_Range32(73031LLU,73104LLU,73LLU),_1d2375913_Range32(73105LLU,73109LLU,4LLU),_1d2375913_Range32(73111LLU,73459LLU,348LLU),_1d2375913_Range32(73460LLU,73472LLU,12LLU),_1d2375913_Range32(73473LLU,73526LLU,53LLU),_1d2375913_Range32(73527LLU,73530LLU,1LLU),_1d2375913_Range32(73536LLU,73538LLU,2LLU),_1d2375913_Range32(78912LLU,78919LLU,7LLU),_1d2375913_Range32(78920LLU,78933LLU,1LLU),_1d2375913_Range32(92912LLU,92916LLU,1LLU),_1d2375913_Range32(92976LLU,92982LLU,1LLU),_1d2375913_Range32(94031LLU,94095LLU,64LLU),_1d2375913_Range32(94096LLU,94098LLU,1LLU),_1d2375913_Range32(94180LLU,113821LLU,19641LLU),_1d2375913_Range32(113822LLU,118528LLU,4706LLU),_1d2375913_Range32(118529LLU,118573LLU,1LLU),_1d2375913_Range32(118576LLU,118598LLU,1LLU),_1d2375913_Range32(119143LLU,119145LLU,1LLU),_1d2375913_Range32(119163LLU,119170LLU,1LLU),_1d2375913_Range32(119173LLU,119179LLU,1LLU),_1d2375913_Range32(119210LLU,119213LLU,1LLU),_1d2375913_Range32(119362LLU,119364LLU,1LLU),_1d2375913_Range32(121344LLU,121398LLU,1LLU),_1d2375913_Range32(121403LLU,121452LLU,1LLU),_1d2375913_Range32(121461LLU,121476LLU,15LLU),_1d2375913_Range32(121499LLU,121503LLU,1LLU),_1d2375913_Range32(121505LLU,121519LLU,1LLU),_1d2375913_Range32(122880LLU,122886LLU,1LLU),_1d2375913_Range32(122888LLU,122904LLU,1LLU),_1d2375913_Range32(122907LLU,122913LLU,1LLU),_1d2375913_Range32(122915LLU,122916LLU,1LLU),_1d2375913_Range32(122918LLU,122922LLU,1LLU),_1d2375913_Range32(123023LLU,123184LLU,161LLU),_1d2375913_Range32(123185LLU,123190LLU,1LLU),_1d2375913_Range32(123566LLU,123628LLU,62LLU),_1d2375913_Range32(123629LLU,123631LLU,1LLU),_1d2375913_Range32(124140LLU,124143LLU,1LLU),_1d2375913_Range32(125136LLU,125142LLU,1LLU),_1d2375913_Range32(125252LLU,125258LLU,1LLU),_1d2375913_Range32(917760LLU,917999LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__N = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(48LLU,57LLU,1LLU),_1d2375913_Range16(178LLU,179LLU,1LLU),_1d2375913_Range16(185LLU,188LLU,3LLU),_1d2375913_Range16(189LLU,190LLU,1LLU),_1d2375913_Range16(1632LLU,1641LLU,1LLU),_1d2375913_Range16(1776LLU,1785LLU,1LLU),_1d2375913_Range16(1984LLU,1993LLU,1LLU),_1d2375913_Range16(2406LLU,2415LLU,1LLU),_1d2375913_Range16(2534LLU,2543LLU,1LLU),_1d2375913_Range16(2548LLU,2553LLU,1LLU),_1d2375913_Range16(2662LLU,2671LLU,1LLU),_1d2375913_Range16(2790LLU,2799LLU,1LLU),_1d2375913_Range16(2918LLU,2927LLU,1LLU),_1d2375913_Range16(2930LLU,2935LLU,1LLU),_1d2375913_Range16(3046LLU,3058LLU,1LLU),_1d2375913_Range16(3174LLU,3183LLU,1LLU),_1d2375913_Range16(3192LLU,3198LLU,1LLU),_1d2375913_Range16(3302LLU,3311LLU,1LLU),_1d2375913_Range16(3416LLU,3422LLU,1LLU),_1d2375913_Range16(3430LLU,3448LLU,1LLU),_1d2375913_Range16(3558LLU,3567LLU,1LLU),_1d2375913_Range16(3664LLU,3673LLU,1LLU),_1d2375913_Range16(3792LLU,3801LLU,1LLU),_1d2375913_Range16(3872LLU,3891LLU,1LLU),_1d2375913_Range16(4160LLU,4169LLU,1LLU),_1d2375913_Range16(4240LLU,4249LLU,1LLU),_1d2375913_Range16(4969LLU,4988LLU,1LLU),_1d2375913_Range16(5870LLU,5872LLU,1LLU),_1d2375913_Range16(6112LLU,6121LLU,1LLU),_1d2375913_Range16(6128LLU,6137LLU,1LLU),_1d2375913_Range16(6160LLU,6169LLU,1LLU),_1d2375913_Range16(6470LLU,6479LLU,1LLU),_1d2375913_Range16(6608LLU,6618LLU,1LLU),_1d2375913_Range16(6784LLU,6793LLU,1LLU),_1d2375913_Range16(6800LLU,6809LLU,1LLU),_1d2375913_Range16(6992LLU,7001LLU,1LLU),_1d2375913_Range16(7088LLU,7097LLU,1LLU),_1d2375913_Range16(7232LLU,7241LLU,1LLU),_1d2375913_Range16(7248LLU,7257LLU,1LLU),_1d2375913_Range16(8304LLU,8308LLU,4LLU),_1d2375913_Range16(8309LLU,8313LLU,1LLU),_1d2375913_Range16(8320LLU,8329LLU,1LLU),_1d2375913_Range16(8528LLU,8578LLU,1LLU),_1d2375913_Range16(8581LLU,8585LLU,1LLU),_1d2375913_Range16(9312LLU,9371LLU,1LLU),_1d2375913_Range16(9450LLU,9471LLU,1LLU),_1d2375913_Range16(10102LLU,10131LLU,1LLU),_1d2375913_Range16(11517LLU,12295LLU,778LLU),_1d2375913_Range16(12321LLU,12329LLU,1LLU),_1d2375913_Range16(12344LLU,12346LLU,1LLU),_1d2375913_Range16(12690LLU,12693LLU,1LLU),_1d2375913_Range16(12832LLU,12841LLU,1LLU),_1d2375913_Range16(12872LLU,12879LLU,1LLU),_1d2375913_Range16(12881LLU,12895LLU,1LLU),_1d2375913_Range16(12928LLU,12937LLU,1LLU),_1d2375913_Range16(12977LLU,12991LLU,1LLU),_1d2375913_Range16(42528LLU,42537LLU,1LLU),_1d2375913_Range16(42726LLU,42735LLU,1LLU),_1d2375913_Range16(43056LLU,43061LLU,1LLU),_1d2375913_Range16(43216LLU,43225LLU,1LLU),_1d2375913_Range16(43264LLU,43273LLU,1LLU),_1d2375913_Range16(43472LLU,43481LLU,1LLU),_1d2375913_Range16(43504LLU,43513LLU,1LLU),_1d2375913_Range16(43600LLU,43609LLU,1LLU),_1d2375913_Range16(44016LLU,44025LLU,1LLU),_1d2375913_Range16(65296LLU,65305LLU,1LLU)}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(65799LLU,65843LLU,1LLU),_1d2375913_Range32(65856LLU,65912LLU,1LLU),_1d2375913_Range32(65930LLU,65931LLU,1LLU),_1d2375913_Range32(66273LLU,66299LLU,1LLU),_1d2375913_Range32(66336LLU,66339LLU,1LLU),_1d2375913_Range32(66369LLU,66378LLU,9LLU),_1d2375913_Range32(66513LLU,66517LLU,1LLU),_1d2375913_Range32(66720LLU,66729LLU,1LLU),_1d2375913_Range32(67672LLU,67679LLU,1LLU),_1d2375913_Range32(67705LLU,67711LLU,1LLU),_1d2375913_Range32(67751LLU,67759LLU,1LLU),_1d2375913_Range32(67835LLU,67839LLU,1LLU),_1d2375913_Range32(67862LLU,67867LLU,1LLU),_1d2375913_Range32(68028LLU,68029LLU,1LLU),_1d2375913_Range32(68032LLU,68047LLU,1LLU),_1d2375913_Range32(68050LLU,68095LLU,1LLU),_1d2375913_Range32(68160LLU,68168LLU,1LLU),_1d2375913_Range32(68221LLU,68222LLU,1LLU),_1d2375913_Range32(68253LLU,68255LLU,1LLU),_1d2375913_Range32(68331LLU,68335LLU,1LLU),_1d2375913_Range32(68440LLU,68447LLU,1LLU),_1d2375913_Range32(68472LLU,68479LLU,1LLU),_1d2375913_Range32(68521LLU,68527LLU,1LLU),_1d2375913_Range32(68858LLU,68863LLU,1LLU),_1d2375913_Range32(68912LLU,68921LLU,1LLU),_1d2375913_Range32(69216LLU,69246LLU,1LLU),_1d2375913_Range32(69405LLU,69414LLU,1LLU),_1d2375913_Range32(69457LLU,69460LLU,1LLU),_1d2375913_Range32(69573LLU,69579LLU,1LLU),_1d2375913_Range32(69714LLU,69743LLU,1LLU),_1d2375913_Range32(69872LLU,69881LLU,1LLU),_1d2375913_Range32(69942LLU,69951LLU,1LLU),_1d2375913_Range32(70096LLU,70105LLU,1LLU),_1d2375913_Range32(70113LLU,70132LLU,1LLU),_1d2375913_Range32(70384LLU,70393LLU,1LLU),_1d2375913_Range32(70736LLU,70745LLU,1LLU),_1d2375913_Range32(70864LLU,70873LLU,1LLU),_1d2375913_Range32(71248LLU,71257LLU,1LLU),_1d2375913_Range32(71360LLU,71369LLU,1LLU),_1d2375913_Range32(71472LLU,71483LLU,1LLU),_1d2375913_Range32(71904LLU,71922LLU,1LLU),_1d2375913_Range32(72016LLU,72025LLU,1LLU),_1d2375913_Range32(72784LLU,72812LLU,1LLU),_1d2375913_Range32(73040LLU,73049LLU,1LLU),_1d2375913_Range32(73120LLU,73129LLU,1LLU),_1d2375913_Range32(73552LLU,73561LLU,1LLU),_1d2375913_Range32(73664LLU,73684LLU,1LLU),_1d2375913_Range32(74752LLU,74862LLU,1LLU),_1d2375913_Range32(92768LLU,92777LLU,1LLU),_1d2375913_Range32(92864LLU,92873LLU,1LLU),_1d2375913_Range32(93008LLU,93017LLU,1LLU),_1d2375913_Range32(93019LLU,93025LLU,1LLU),_1d2375913_Range32(93824LLU,93846LLU,1LLU),_1d2375913_Range32(119488LLU,119507LLU,1LLU),_1d2375913_Range32(119520LLU,119539LLU,1LLU),_1d2375913_Range32(119648LLU,119672LLU,1LLU),_1d2375913_Range32(120782LLU,120831LLU,1LLU),_1d2375913_Range32(123200LLU,123209LLU,1LLU),_1d2375913_Range32(123632LLU,123641LLU,1LLU),_1d2375913_Range32(124144LLU,124153LLU,1LLU),_1d2375913_Range32(125127LLU,125135LLU,1LLU),_1d2375913_Range32(125264LLU,125273LLU,1LLU),_1d2375913_Range32(126065LLU,126123LLU,1LLU),_1d2375913_Range32(126125LLU,126127LLU,1LLU),_1d2375913_Range32(126129LLU,126132LLU,1LLU),_1d2375913_Range32(126209LLU,126253LLU,1LLU),_1d2375913_Range32(126255LLU,126269LLU,1LLU),_1d2375913_Range32(127232LLU,127244LLU,1LLU),_1d2375913_Range32(130032LLU,130041LLU,1LLU)}),4LL));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__ND = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(48LLU,57LLU,1LLU),_1d2375913_Range16(1632LLU,1641LLU,1LLU),_1d2375913_Range16(1776LLU,1785LLU,1LLU),_1d2375913_Range16(1984LLU,1993LLU,1LLU),_1d2375913_Range16(2406LLU,2415LLU,1LLU),_1d2375913_Range16(2534LLU,2543LLU,1LLU),_1d2375913_Range16(2662LLU,2671LLU,1LLU),_1d2375913_Range16(2790LLU,2799LLU,1LLU),_1d2375913_Range16(2918LLU,2927LLU,1LLU),_1d2375913_Range16(3046LLU,3055LLU,1LLU),_1d2375913_Range16(3174LLU,3183LLU,1LLU),_1d2375913_Range16(3302LLU,3311LLU,1LLU),_1d2375913_Range16(3430LLU,3439LLU,1LLU),_1d2375913_Range16(3558LLU,3567LLU,1LLU),_1d2375913_Range16(3664LLU,3673LLU,1LLU),_1d2375913_Range16(3792LLU,3801LLU,1LLU),_1d2375913_Range16(3872LLU,3881LLU,1LLU),_1d2375913_Range16(4160LLU,4169LLU,1LLU),_1d2375913_Range16(4240LLU,4249LLU,1LLU),_1d2375913_Range16(6112LLU,6121LLU,1LLU),_1d2375913_Range16(6160LLU,6169LLU,1LLU),_1d2375913_Range16(6470LLU,6479LLU,1LLU),_1d2375913_Range16(6608LLU,6617LLU,1LLU),_1d2375913_Range16(6784LLU,6793LLU,1LLU),_1d2375913_Range16(6800LLU,6809LLU,1LLU),_1d2375913_Range16(6992LLU,7001LLU,1LLU),_1d2375913_Range16(7088LLU,7097LLU,1LLU),_1d2375913_Range16(7232LLU,7241LLU,1LLU),_1d2375913_Range16(7248LLU,7257LLU,1LLU),_1d2375913_Range16(42528LLU,42537LLU,1LLU),_1d2375913_Range16(43216LLU,43225LLU,1LLU),_1d2375913_Range16(43264LLU,43273LLU,1LLU),_1d2375913_Range16(43472LLU,43481LLU,1LLU),_1d2375913_Range16(43504LLU,43513LLU,1LLU),_1d2375913_Range16(43600LLU,43609LLU,1LLU),_1d2375913_Range16(44016LLU,44025LLU,1LLU),_1d2375913_Range16(65296LLU,65305LLU,1LLU)}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(66720LLU,66729LLU,1LLU),_1d2375913_Range32(68912LLU,68921LLU,1LLU),_1d2375913_Range32(69734LLU,69743LLU,1LLU),_1d2375913_Range32(69872LLU,69881LLU,1LLU),_1d2375913_Range32(69942LLU,69951LLU,1LLU),_1d2375913_Range32(70096LLU,70105LLU,1LLU),_1d2375913_Range32(70384LLU,70393LLU,1LLU),_1d2375913_Range32(70736LLU,70745LLU,1LLU),_1d2375913_Range32(70864LLU,70873LLU,1LLU),_1d2375913_Range32(71248LLU,71257LLU,1LLU),_1d2375913_Range32(71360LLU,71369LLU,1LLU),_1d2375913_Range32(71472LLU,71481LLU,1LLU),_1d2375913_Range32(71904LLU,71913LLU,1LLU),_1d2375913_Range32(72016LLU,72025LLU,1LLU),_1d2375913_Range32(72784LLU,72793LLU,1LLU),_1d2375913_Range32(73040LLU,73049LLU,1LLU),_1d2375913_Range32(73120LLU,73129LLU,1LLU),_1d2375913_Range32(73552LLU,73561LLU,1LLU),_1d2375913_Range32(92768LLU,92777LLU,1LLU),_1d2375913_Range32(92864LLU,92873LLU,1LLU),_1d2375913_Range32(93008LLU,93017LLU,1LLU),_1d2375913_Range32(120782LLU,120831LLU,1LLU),_1d2375913_Range32(123200LLU,123209LLU,1LLU),_1d2375913_Range32(123632LLU,123641LLU,1LLU),_1d2375913_Range32(124144LLU,124153LLU,1LLU),_1d2375913_Range32(125264LLU,125273LLU,1LLU),_1d2375913_Range32(130032LLU,130041LLU,1LLU)}),1LL));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__NL = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(5870LLU,5872LLU,1LLU),_1d2375913_Range16(8544LLU,8578LLU,1LLU),_1d2375913_Range16(8581LLU,8584LLU,1LLU),_1d2375913_Range16(12295LLU,12321LLU,26LLU),_1d2375913_Range16(12322LLU,12329LLU,1LLU),_1d2375913_Range16(12344LLU,12346LLU,1LLU),_1d2375913_Range16(42726LLU,42735LLU,1LLU)}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(65856LLU,65908LLU,1LLU),_1d2375913_Range32(66369LLU,66378LLU,9LLU),_1d2375913_Range32(66513LLU,66517LLU,1LLU),_1d2375913_Range32(74752LLU,74862LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__NO = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(178LLU,179LLU,1LLU),_1d2375913_Range16(185LLU,188LLU,3LLU),_1d2375913_Range16(189LLU,190LLU,1LLU),_1d2375913_Range16(2548LLU,2553LLU,1LLU),_1d2375913_Range16(2930LLU,2935LLU,1LLU),_1d2375913_Range16(3056LLU,3058LLU,1LLU),_1d2375913_Range16(3192LLU,3198LLU,1LLU),_1d2375913_Range16(3416LLU,3422LLU,1LLU),_1d2375913_Range16(3440LLU,3448LLU,1LLU),_1d2375913_Range16(3882LLU,3891LLU,1LLU),_1d2375913_Range16(4969LLU,4988LLU,1LLU),_1d2375913_Range16(6128LLU,6137LLU,1LLU),_1d2375913_Range16(6618LLU,8304LLU,1686LLU),_1d2375913_Range16(8308LLU,8313LLU,1LLU),_1d2375913_Range16(8320LLU,8329LLU,1LLU),_1d2375913_Range16(8528LLU,8543LLU,1LLU),_1d2375913_Range16(8585LLU,9312LLU,727LLU),_1d2375913_Range16(9313LLU,9371LLU,1LLU),_1d2375913_Range16(9450LLU,9471LLU,1LLU),_1d2375913_Range16(10102LLU,10131LLU,1LLU),_1d2375913_Range16(11517LLU,12690LLU,1173LLU),_1d2375913_Range16(12691LLU,12693LLU,1LLU),_1d2375913_Range16(12832LLU,12841LLU,1LLU),_1d2375913_Range16(12872LLU,12879LLU,1LLU),_1d2375913_Range16(12881LLU,12895LLU,1LLU),_1d2375913_Range16(12928LLU,12937LLU,1LLU),_1d2375913_Range16(12977LLU,12991LLU,1LLU),_1d2375913_Range16(43056LLU,43061LLU,1LLU)}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(65799LLU,65843LLU,1LLU),_1d2375913_Range32(65909LLU,65912LLU,1LLU),_1d2375913_Range32(65930LLU,65931LLU,1LLU),_1d2375913_Range32(66273LLU,66299LLU,1LLU),_1d2375913_Range32(66336LLU,66339LLU,1LLU),_1d2375913_Range32(67672LLU,67679LLU,1LLU),_1d2375913_Range32(67705LLU,67711LLU,1LLU),_1d2375913_Range32(67751LLU,67759LLU,1LLU),_1d2375913_Range32(67835LLU,67839LLU,1LLU),_1d2375913_Range32(67862LLU,67867LLU,1LLU),_1d2375913_Range32(68028LLU,68029LLU,1LLU),_1d2375913_Range32(68032LLU,68047LLU,1LLU),_1d2375913_Range32(68050LLU,68095LLU,1LLU),_1d2375913_Range32(68160LLU,68168LLU,1LLU),_1d2375913_Range32(68221LLU,68222LLU,1LLU),_1d2375913_Range32(68253LLU,68255LLU,1LLU),_1d2375913_Range32(68331LLU,68335LLU,1LLU),_1d2375913_Range32(68440LLU,68447LLU,1LLU),_1d2375913_Range32(68472LLU,68479LLU,1LLU),_1d2375913_Range32(68521LLU,68527LLU,1LLU),_1d2375913_Range32(68858LLU,68863LLU,1LLU),_1d2375913_Range32(69216LLU,69246LLU,1LLU),_1d2375913_Range32(69405LLU,69414LLU,1LLU),_1d2375913_Range32(69457LLU,69460LLU,1LLU),_1d2375913_Range32(69573LLU,69579LLU,1LLU),_1d2375913_Range32(69714LLU,69733LLU,1LLU),_1d2375913_Range32(70113LLU,70132LLU,1LLU),_1d2375913_Range32(71482LLU,71483LLU,1LLU),_1d2375913_Range32(71914LLU,71922LLU,1LLU),_1d2375913_Range32(72794LLU,72812LLU,1LLU),_1d2375913_Range32(73664LLU,73684LLU,1LLU),_1d2375913_Range32(93019LLU,93025LLU,1LLU),_1d2375913_Range32(93824LLU,93846LLU,1LLU),_1d2375913_Range32(119488LLU,119507LLU,1LLU),_1d2375913_Range32(119520LLU,119539LLU,1LLU),_1d2375913_Range32(119648LLU,119672LLU,1LLU),_1d2375913_Range32(125127LLU,125135LLU,1LLU),_1d2375913_Range32(126065LLU,126123LLU,1LLU),_1d2375913_Range32(126125LLU,126127LLU,1LLU),_1d2375913_Range32(126129LLU,126132LLU,1LLU),_1d2375913_Range32(126209LLU,126253LLU,1LLU),_1d2375913_Range32(126255LLU,126269LLU,1LLU),_1d2375913_Range32(127232LLU,127244LLU,1LLU)}),3LL));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__P = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(33LLU,35LLU,1LLU),_1d2375913_Range16(37LLU,42LLU,1LLU),_1d2375913_Range16(44LLU,47LLU,1LLU),_1d2375913_Range16(58LLU,59LLU,1LLU),_1d2375913_Range16(63LLU,64LLU,1LLU),_1d2375913_Range16(91LLU,93LLU,1LLU),_1d2375913_Range16(95LLU,123LLU,28LLU),_1d2375913_Range16(125LLU,161LLU,36LLU),_1d2375913_Range16(167LLU,171LLU,4LLU),_1d2375913_Range16(182LLU,183LLU,1LLU),_1d2375913_Range16(187LLU,191LLU,4LLU),_1d2375913_Range16(894LLU,903LLU,9LLU),_1d2375913_Range16(1370LLU,1375LLU,1LLU),_1d2375913_Range16(1417LLU,1418LLU,1LLU),_1d2375913_Range16(1470LLU,1472LLU,2LLU),_1d2375913_Range16(1475LLU,1478LLU,3LLU),_1d2375913_Range16(1523LLU,1524LLU,1LLU),_1d2375913_Range16(1545LLU,1546LLU,1LLU),_1d2375913_Range16(1548LLU,1549LLU,1LLU),_1d2375913_Range16(1563LLU,1565LLU,2LLU),_1d2375913_Range16(1566LLU,1567LLU,1LLU),_1d2375913_Range16(1642LLU,1645LLU,1LLU),_1d2375913_Range16(1748LLU,1792LLU,44LLU),_1d2375913_Range16(1793LLU,1805LLU,1LLU),_1d2375913_Range16(2039LLU,2041LLU,1LLU),_1d2375913_Range16(2096LLU,2110LLU,1LLU),_1d2375913_Range16(2142LLU,2404LLU,262LLU),_1d2375913_Range16(2405LLU,2416LLU,11LLU),_1d2375913_Range16(2557LLU,2678LLU,121LLU),_1d2375913_Range16(2800LLU,3191LLU,391LLU),_1d2375913_Range16(3204LLU,3572LLU,368LLU),_1d2375913_Range16(3663LLU,3674LLU,11LLU),_1d2375913_Range16(3675LLU,3844LLU,169LLU),_1d2375913_Range16(3845LLU,3858LLU,1LLU),_1d2375913_Range16(3860LLU,3898LLU,38LLU),_1d2375913_Range16(3899LLU,3901LLU,1LLU),_1d2375913_Range16(3973LLU,4048LLU,75LLU),_1d2375913_Range16(4049LLU,4052LLU,1LLU),_1d2375913_Range16(4057LLU,4058LLU,1LLU),_1d2375913_Range16(4170LLU,4175LLU,1LLU),_1d2375913_Range16(4347LLU,4960LLU,613LLU),_1d2375913_Range16(4961LLU,4968LLU,1LLU),_1d2375913_Range16(5120LLU,5742LLU,622LLU),_1d2375913_Range16(5787LLU,5788LLU,1LLU),_1d2375913_Range16(5867LLU,5869LLU,1LLU),_1d2375913_Range16(5941LLU,5942LLU,1LLU),_1d2375913_Range16(6100LLU,6102LLU,1LLU),_1d2375913_Range16(6104LLU,6106LLU,1LLU),_1d2375913_Range16(6144LLU,6154LLU,1LLU),_1d2375913_Range16(6468LLU,6469LLU,1LLU),_1d2375913_Range16(6686LLU,6687LLU,1LLU),_1d2375913_Range16(6816LLU,6822LLU,1LLU),_1d2375913_Range16(6824LLU,6829LLU,1LLU),_1d2375913_Range16(7002LLU,7008LLU,1LLU),_1d2375913_Range16(7037LLU,7038LLU,1LLU),_1d2375913_Range16(7164LLU,7167LLU,1LLU),_1d2375913_Range16(7227LLU,7231LLU,1LLU),_1d2375913_Range16(7294LLU,7295LLU,1LLU),_1d2375913_Range16(7360LLU,7367LLU,1LLU),_1d2375913_Range16(7379LLU,8208LLU,829LLU),_1d2375913_Range16(8209LLU,8231LLU,1LLU),_1d2375913_Range16(8240LLU,8259LLU,1LLU),_1d2375913_Range16(8261LLU,8273LLU,1LLU),_1d2375913_Range16(8275LLU,8286LLU,1LLU),_1d2375913_Range16(8317LLU,8318LLU,1LLU),_1d2375913_Range16(8333LLU,8334LLU,1LLU),_1d2375913_Range16(8968LLU,8971LLU,1LLU),_1d2375913_Range16(9001LLU,9002LLU,1LLU),_1d2375913_Range16(10088LLU,10101LLU,1LLU),_1d2375913_Range16(10181LLU,10182LLU,1LLU),_1d2375913_Range16(10214LLU,10223LLU,1LLU),_1d2375913_Range16(10627LLU,10648LLU,1LLU),_1d2375913_Range16(10712LLU,10715LLU,1LLU),_1d2375913_Range16(10748LLU,10749LLU,1LLU),_1d2375913_Range16(11513LLU,11516LLU,1LLU),_1d2375913_Range16(11518LLU,11519LLU,1LLU),_1d2375913_Range16(11632LLU,11776LLU,144LLU),_1d2375913_Range16(11777LLU,11822LLU,1LLU),_1d2375913_Range16(11824LLU,11855LLU,1LLU),_1d2375913_Range16(11858LLU,11869LLU,1LLU),_1d2375913_Range16(12289LLU,12291LLU,1LLU),_1d2375913_Range16(12296LLU,12305LLU,1LLU),_1d2375913_Range16(12308LLU,12319LLU,1LLU),_1d2375913_Range16(12336LLU,12349LLU,13LLU),_1d2375913_Range16(12448LLU,12539LLU,91LLU),_1d2375913_Range16(42238LLU,42239LLU,1LLU),_1d2375913_Range16(42509LLU,42511LLU,1LLU),_1d2375913_Range16(42611LLU,42622LLU,11LLU),_1d2375913_Range16(42738LLU,42743LLU,1LLU),_1d2375913_Range16(43124LLU,43127LLU,1LLU),_1d2375913_Range16(43214LLU,43215LLU,1LLU),_1d2375913_Range16(43256LLU,43258LLU,1LLU),_1d2375913_Range16(43260LLU,43310LLU,50LLU),_1d2375913_Range16(43311LLU,43359LLU,48LLU),_1d2375913_Range16(43457LLU,43469LLU,1LLU),_1d2375913_Range16(43486LLU,43487LLU,1LLU),_1d2375913_Range16(43612LLU,43615LLU,1LLU),_1d2375913_Range16(43742LLU,43743LLU,1LLU),_1d2375913_Range16(43760LLU,43761LLU,1LLU),_1d2375913_Range16(44011LLU,64830LLU,20819LLU),_1d2375913_Range16(64831LLU,65040LLU,209LLU),_1d2375913_Range16(65041LLU,65049LLU,1LLU),_1d2375913_Range16(65072LLU,65106LLU,1LLU),_1d2375913_Range16(65108LLU,65121LLU,1LLU),_1d2375913_Range16(65123LLU,65128LLU,5LLU),_1d2375913_Range16(65130LLU,65131LLU,1LLU),_1d2375913_Range16(65281LLU,65283LLU,1LLU),_1d2375913_Range16(65285LLU,65290LLU,1LLU),_1d2375913_Range16(65292LLU,65295LLU,1LLU),_1d2375913_Range16(65306LLU,65307LLU,1LLU),_1d2375913_Range16(65311LLU,65312LLU,1LLU),_1d2375913_Range16(65339LLU,65341LLU,1LLU),_1d2375913_Range16(65343LLU,65371LLU,28LLU),_1d2375913_Range16(65373LLU,65375LLU,2LLU),_1d2375913_Range16(65376LLU,65381LLU,1LLU)}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(65792LLU,65794LLU,1LLU),_1d2375913_Range32(66463LLU,66512LLU,49LLU),_1d2375913_Range32(66927LLU,67671LLU,744LLU),_1d2375913_Range32(67871LLU,67903LLU,32LLU),_1d2375913_Range32(68176LLU,68184LLU,1LLU),_1d2375913_Range32(68223LLU,68336LLU,113LLU),_1d2375913_Range32(68337LLU,68342LLU,1LLU),_1d2375913_Range32(68409LLU,68415LLU,1LLU),_1d2375913_Range32(68505LLU,68508LLU,1LLU),_1d2375913_Range32(69293LLU,69461LLU,168LLU),_1d2375913_Range32(69462LLU,69465LLU,1LLU),_1d2375913_Range32(69510LLU,69513LLU,1LLU),_1d2375913_Range32(69703LLU,69709LLU,1LLU),_1d2375913_Range32(69819LLU,69820LLU,1LLU),_1d2375913_Range32(69822LLU,69825LLU,1LLU),_1d2375913_Range32(69952LLU,69955LLU,1LLU),_1d2375913_Range32(70004LLU,70005LLU,1LLU),_1d2375913_Range32(70085LLU,70088LLU,1LLU),_1d2375913_Range32(70093LLU,70107LLU,14LLU),_1d2375913_Range32(70109LLU,70111LLU,1LLU),_1d2375913_Range32(70200LLU,70205LLU,1LLU),_1d2375913_Range32(70313LLU,70731LLU,418LLU),_1d2375913_Range32(70732LLU,70735LLU,1LLU),_1d2375913_Range32(70746LLU,70747LLU,1LLU),_1d2375913_Range32(70749LLU,70854LLU,105LLU),_1d2375913_Range32(71105LLU,71127LLU,1LLU),_1d2375913_Range32(71233LLU,71235LLU,1LLU),_1d2375913_Range32(71264LLU,71276LLU,1LLU),_1d2375913_Range32(71353LLU,71484LLU,131LLU),_1d2375913_Range32(71485LLU,71486LLU,1LLU),_1d2375913_Range32(71739LLU,72004LLU,265LLU),_1d2375913_Range32(72005LLU,72006LLU,1LLU),_1d2375913_Range32(72162LLU,72255LLU,93LLU),_1d2375913_Range32(72256LLU,72262LLU,1LLU),_1d2375913_Range32(72346LLU,72348LLU,1LLU),_1d2375913_Range32(72350LLU,72354LLU,1LLU),_1d2375913_Range32(72448LLU,72457LLU,1LLU),_1d2375913_Range32(72769LLU,72773LLU,1LLU),_1d2375913_Range32(72816LLU,72817LLU,1LLU),_1d2375913_Range32(73463LLU,73464LLU,1LLU),_1d2375913_Range32(73539LLU,73551LLU,1LLU),_1d2375913_Range32(73727LLU,74864LLU,1137LLU),_1d2375913_Range32(74865LLU,74868LLU,1LLU),_1d2375913_Range32(77809LLU,77810LLU,1LLU),_1d2375913_Range32(92782LLU,92783LLU,1LLU),_1d2375913_Range32(92917LLU,92983LLU,66LLU),_1d2375913_Range32(92984LLU,92987LLU,1LLU),_1d2375913_Range32(92996LLU,93847LLU,851LLU),_1d2375913_Range32(93848LLU,93850LLU,1LLU),_1d2375913_Range32(94178LLU,113823LLU,19645LLU),_1d2375913_Range32(121479LLU,121483LLU,1LLU),_1d2375913_Range32(125278LLU,125279LLU,1LLU)}),11LL));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__PC = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(95LLU,8255LLU,8160LLU),_1d2375913_Range16(8256LLU,8276LLU,20LLU),_1d2375913_Range16(65075LLU,65076LLU,1LLU),_1d2375913_Range16(65101LLU,65103LLU,1LLU),_1d2375913_Range16(65343LLU,65343LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__PD = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(45LLU,1418LLU,1373LLU),_1d2375913_Range16(1470LLU,5120LLU,3650LLU),_1d2375913_Range16(6150LLU,8208LLU,2058LLU),_1d2375913_Range16(8209LLU,8213LLU,1LLU),_1d2375913_Range16(11799LLU,11802LLU,3LLU),_1d2375913_Range16(11834LLU,11835LLU,1LLU),_1d2375913_Range16(11840LLU,11869LLU,29LLU),_1d2375913_Range16(12316LLU,12336LLU,20LLU),_1d2375913_Range16(12448LLU,65073LLU,52625LLU),_1d2375913_Range16(65074LLU,65112LLU,38LLU),_1d2375913_Range16(65123LLU,65293LLU,170LLU)}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(69293LLU,69293LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__PE = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(41LLU,93LLU,52LLU),_1d2375913_Range16(125LLU,3899LLU,3774LLU),_1d2375913_Range16(3901LLU,5788LLU,1887LLU),_1d2375913_Range16(8262LLU,8318LLU,56LLU),_1d2375913_Range16(8334LLU,8969LLU,635LLU),_1d2375913_Range16(8971LLU,9002LLU,31LLU),_1d2375913_Range16(10089LLU,10101LLU,2LLU),_1d2375913_Range16(10182LLU,10215LLU,33LLU),_1d2375913_Range16(10217LLU,10223LLU,2LLU),_1d2375913_Range16(10628LLU,10648LLU,2LLU),_1d2375913_Range16(10713LLU,10715LLU,2LLU),_1d2375913_Range16(10749LLU,11811LLU,1062LLU),_1d2375913_Range16(11813LLU,11817LLU,2LLU),_1d2375913_Range16(11862LLU,11868LLU,2LLU),_1d2375913_Range16(12297LLU,12305LLU,2LLU),_1d2375913_Range16(12309LLU,12315LLU,2LLU),_1d2375913_Range16(12318LLU,12319LLU,1LLU),_1d2375913_Range16(64830LLU,65048LLU,218LLU),_1d2375913_Range16(65078LLU,65092LLU,2LLU),_1d2375913_Range16(65096LLU,65114LLU,18LLU),_1d2375913_Range16(65116LLU,65118LLU,2LLU),_1d2375913_Range16(65289LLU,65341LLU,52LLU),_1d2375913_Range16(65373LLU,65379LLU,3LLU)}),jule::Slice<_1d2375913_Range32>(),1LL));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__PF = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(187LLU,8217LLU,8030LLU),_1d2375913_Range16(8221LLU,8250LLU,29LLU),_1d2375913_Range16(11779LLU,11781LLU,2LLU),_1d2375913_Range16(11786LLU,11789LLU,3LLU),_1d2375913_Range16(11805LLU,11809LLU,4LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__PI = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(171LLU,8216LLU,8045LLU),_1d2375913_Range16(8219LLU,8220LLU,1LLU),_1d2375913_Range16(8223LLU,8249LLU,26LLU),_1d2375913_Range16(11778LLU,11780LLU,2LLU),_1d2375913_Range16(11785LLU,11788LLU,3LLU),_1d2375913_Range16(11804LLU,11808LLU,4LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__PO = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(33LLU,35LLU,1LLU),_1d2375913_Range16(37LLU,39LLU,1LLU),_1d2375913_Range16(42LLU,46LLU,2LLU),_1d2375913_Range16(47LLU,58LLU,11LLU),_1d2375913_Range16(59LLU,63LLU,4LLU),_1d2375913_Range16(64LLU,92LLU,28LLU),_1d2375913_Range16(161LLU,167LLU,6LLU),_1d2375913_Range16(182LLU,183LLU,1LLU),_1d2375913_Range16(191LLU,894LLU,703LLU),_1d2375913_Range16(903LLU,1370LLU,467LLU),_1d2375913_Range16(1371LLU,1375LLU,1LLU),_1d2375913_Range16(1417LLU,1472LLU,55LLU),_1d2375913_Range16(1475LLU,1478LLU,3LLU),_1d2375913_Range16(1523LLU,1524LLU,1LLU),_1d2375913_Range16(1545LLU,1546LLU,1LLU),_1d2375913_Range16(1548LLU,1549LLU,1LLU),_1d2375913_Range16(1563LLU,1565LLU,2LLU),_1d2375913_Range16(1566LLU,1567LLU,1LLU),_1d2375913_Range16(1642LLU,1645LLU,1LLU),_1d2375913_Range16(1748LLU,1792LLU,44LLU),_1d2375913_Range16(1793LLU,1805LLU,1LLU),_1d2375913_Range16(2039LLU,2041LLU,1LLU),_1d2375913_Range16(2096LLU,2110LLU,1LLU),_1d2375913_Range16(2142LLU,2404LLU,262LLU),_1d2375913_Range16(2405LLU,2416LLU,11LLU),_1d2375913_Range16(2557LLU,2678LLU,121LLU),_1d2375913_Range16(2800LLU,3191LLU,391LLU),_1d2375913_Range16(3204LLU,3572LLU,368LLU),_1d2375913_Range16(3663LLU,3674LLU,11LLU),_1d2375913_Range16(3675LLU,3844LLU,169LLU),_1d2375913_Range16(3845LLU,3858LLU,1LLU),_1d2375913_Range16(3860LLU,3973LLU,113LLU),_1d2375913_Range16(4048LLU,4052LLU,1LLU),_1d2375913_Range16(4057LLU,4058LLU,1LLU),_1d2375913_Range16(4170LLU,4175LLU,1LLU),_1d2375913_Range16(4347LLU,4960LLU,613LLU),_1d2375913_Range16(4961LLU,4968LLU,1LLU),_1d2375913_Range16(5742LLU,5867LLU,125LLU),_1d2375913_Range16(5868LLU,5869LLU,1LLU),_1d2375913_Range16(5941LLU,5942LLU,1LLU),_1d2375913_Range16(6100LLU,6102LLU,1LLU),_1d2375913_Range16(6104LLU,6106LLU,1LLU),_1d2375913_Range16(6144LLU,6149LLU,1LLU),_1d2375913_Range16(6151LLU,6154LLU,1LLU),_1d2375913_Range16(6468LLU,6469LLU,1LLU),_1d2375913_Range16(6686LLU,6687LLU,1LLU),_1d2375913_Range16(6816LLU,6822LLU,1LLU),_1d2375913_Range16(6824LLU,6829LLU,1LLU),_1d2375913_Range16(7002LLU,7008LLU,1LLU),_1d2375913_Range16(7037LLU,7038LLU,1LLU),_1d2375913_Range16(7164LLU,7167LLU,1LLU),_1d2375913_Range16(7227LLU,7231LLU,1LLU),_1d2375913_Range16(7294LLU,7295LLU,1LLU),_1d2375913_Range16(7360LLU,7367LLU,1LLU),_1d2375913_Range16(7379LLU,8214LLU,835LLU),_1d2375913_Range16(8215LLU,8224LLU,9LLU),_1d2375913_Range16(8225LLU,8231LLU,1LLU),_1d2375913_Range16(8240LLU,8248LLU,1LLU),_1d2375913_Range16(8251LLU,8254LLU,1LLU),_1d2375913_Range16(8257LLU,8259LLU,1LLU),_1d2375913_Range16(8263LLU,8273LLU,1LLU),_1d2375913_Range16(8275LLU,8277LLU,2LLU),_1d2375913_Range16(8278LLU,8286LLU,1LLU),_1d2375913_Range16(11513LLU,11516LLU,1LLU),_1d2375913_Range16(11518LLU,11519LLU,1LLU),_1d2375913_Range16(11632LLU,11776LLU,144LLU),_1d2375913_Range16(11777LLU,11782LLU,5LLU),_1d2375913_Range16(11783LLU,11784LLU,1LLU),_1d2375913_Range16(11787LLU,11790LLU,3LLU),_1d2375913_Range16(11791LLU,11798LLU,1LLU),_1d2375913_Range16(11800LLU,11801LLU,1LLU),_1d2375913_Range16(11803LLU,11806LLU,3LLU),_1d2375913_Range16(11807LLU,11818LLU,11LLU),_1d2375913_Range16(11819LLU,11822LLU,1LLU),_1d2375913_Range16(11824LLU,11833LLU,1LLU),_1d2375913_Range16(11836LLU,11839LLU,1LLU),_1d2375913_Range16(11841LLU,11843LLU,2LLU),_1d2375913_Range16(11844LLU,11855LLU,1LLU),_1d2375913_Range16(11858LLU,11860LLU,1LLU),_1d2375913_Range16(12289LLU,12291LLU,1LLU),_1d2375913_Range16(12349LLU,12539LLU,190LLU),_1d2375913_Range16(42238LLU,42239LLU,1LLU),_1d2375913_Range16(42509LLU,42511LLU,1LLU),_1d2375913_Range16(42611LLU,42622LLU,11LLU),_1d2375913_Range16(42738LLU,42743LLU,1LLU),_1d2375913_Range16(43124LLU,43127LLU,1LLU),_1d2375913_Range16(43214LLU,43215LLU,1LLU),_1d2375913_Range16(43256LLU,43258LLU,1LLU),_1d2375913_Range16(43260LLU,43310LLU,50LLU),_1d2375913_Range16(43311LLU,43359LLU,48LLU),_1d2375913_Range16(43457LLU,43469LLU,1LLU),_1d2375913_Range16(43486LLU,43487LLU,1LLU),_1d2375913_Range16(43612LLU,43615LLU,1LLU),_1d2375913_Range16(43742LLU,43743LLU,1LLU),_1d2375913_Range16(43760LLU,43761LLU,1LLU),_1d2375913_Range16(44011LLU,65040LLU,21029LLU),_1d2375913_Range16(65041LLU,65046LLU,1LLU),_1d2375913_Range16(65049LLU,65072LLU,23LLU),_1d2375913_Range16(65093LLU,65094LLU,1LLU),_1d2375913_Range16(65097LLU,65100LLU,1LLU),_1d2375913_Range16(65104LLU,65106LLU,1LLU),_1d2375913_Range16(65108LLU,65111LLU,1LLU),_1d2375913_Range16(65119LLU,65121LLU,1LLU),_1d2375913_Range16(65128LLU,65130LLU,2LLU),_1d2375913_Range16(65131LLU,65281LLU,150LLU),_1d2375913_Range16(65282LLU,65283LLU,1LLU),_1d2375913_Range16(65285LLU,65287LLU,1LLU),_1d2375913_Range16(65290LLU,65294LLU,2LLU),_1d2375913_Range16(65295LLU,65306LLU,11LLU),_1d2375913_Range16(65307LLU,65311LLU,4LLU),_1d2375913_Range16(65312LLU,65340LLU,28LLU),_1d2375913_Range16(65377LLU,65380LLU,3LLU),_1d2375913_Range16(65381LLU,65381LLU,1LLU)}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(65792LLU,65794LLU,1LLU),_1d2375913_Range32(66463LLU,66512LLU,49LLU),_1d2375913_Range32(66927LLU,67671LLU,744LLU),_1d2375913_Range32(67871LLU,67903LLU,32LLU),_1d2375913_Range32(68176LLU,68184LLU,1LLU),_1d2375913_Range32(68223LLU,68336LLU,113LLU),_1d2375913_Range32(68337LLU,68342LLU,1LLU),_1d2375913_Range32(68409LLU,68415LLU,1LLU),_1d2375913_Range32(68505LLU,68508LLU,1LLU),_1d2375913_Range32(69461LLU,69465LLU,1LLU),_1d2375913_Range32(69510LLU,69513LLU,1LLU),_1d2375913_Range32(69703LLU,69709LLU,1LLU),_1d2375913_Range32(69819LLU,69820LLU,1LLU),_1d2375913_Range32(69822LLU,69825LLU,1LLU),_1d2375913_Range32(69952LLU,69955LLU,1LLU),_1d2375913_Range32(70004LLU,70005LLU,1LLU),_1d2375913_Range32(70085LLU,70088LLU,1LLU),_1d2375913_Range32(70093LLU,70107LLU,14LLU),_1d2375913_Range32(70109LLU,70111LLU,1LLU),_1d2375913_Range32(70200LLU,70205LLU,1LLU),_1d2375913_Range32(70313LLU,70731LLU,418LLU),_1d2375913_Range32(70732LLU,70735LLU,1LLU),_1d2375913_Range32(70746LLU,70747LLU,1LLU),_1d2375913_Range32(70749LLU,70854LLU,105LLU),_1d2375913_Range32(71105LLU,71127LLU,1LLU),_1d2375913_Range32(71233LLU,71235LLU,1LLU),_1d2375913_Range32(71264LLU,71276LLU,1LLU),_1d2375913_Range32(71353LLU,71484LLU,131LLU),_1d2375913_Range32(71485LLU,71486LLU,1LLU),_1d2375913_Range32(71739LLU,72004LLU,265LLU),_1d2375913_Range32(72005LLU,72006LLU,1LLU),_1d2375913_Range32(72162LLU,72255LLU,93LLU),_1d2375913_Range32(72256LLU,72262LLU,1LLU),_1d2375913_Range32(72346LLU,72348LLU,1LLU),_1d2375913_Range32(72350LLU,72354LLU,1LLU),_1d2375913_Range32(72448LLU,72457LLU,1LLU),_1d2375913_Range32(72769LLU,72773LLU,1LLU),_1d2375913_Range32(72816LLU,72817LLU,1LLU),_1d2375913_Range32(73463LLU,73464LLU,1LLU),_1d2375913_Range32(73539LLU,73551LLU,1LLU),_1d2375913_Range32(73727LLU,74864LLU,1137LLU),_1d2375913_Range32(74865LLU,74868LLU,1LLU),_1d2375913_Range32(77809LLU,77810LLU,1LLU),_1d2375913_Range32(92782LLU,92783LLU,1LLU),_1d2375913_Range32(92917LLU,92983LLU,66LLU),_1d2375913_Range32(92984LLU,92987LLU,1LLU),_1d2375913_Range32(92996LLU,93847LLU,851LLU),_1d2375913_Range32(93848LLU,93850LLU,1LLU),_1d2375913_Range32(94178LLU,113823LLU,19645LLU),_1d2375913_Range32(121479LLU,121483LLU,1LLU),_1d2375913_Range32(125278LLU,125279LLU,1LLU)}),8LL));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__PS = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(40LLU,91LLU,51LLU),_1d2375913_Range16(123LLU,3898LLU,3775LLU),_1d2375913_Range16(3900LLU,5787LLU,1887LLU),_1d2375913_Range16(8218LLU,8222LLU,4LLU),_1d2375913_Range16(8261LLU,8317LLU,56LLU),_1d2375913_Range16(8333LLU,8968LLU,635LLU),_1d2375913_Range16(8970LLU,9001LLU,31LLU),_1d2375913_Range16(10088LLU,10100LLU,2LLU),_1d2375913_Range16(10181LLU,10214LLU,33LLU),_1d2375913_Range16(10216LLU,10222LLU,2LLU),_1d2375913_Range16(10627LLU,10647LLU,2LLU),_1d2375913_Range16(10712LLU,10714LLU,2LLU),_1d2375913_Range16(10748LLU,11810LLU,1062LLU),_1d2375913_Range16(11812LLU,11816LLU,2LLU),_1d2375913_Range16(11842LLU,11861LLU,19LLU),_1d2375913_Range16(11863LLU,11867LLU,2LLU),_1d2375913_Range16(12296LLU,12304LLU,2LLU),_1d2375913_Range16(12308LLU,12314LLU,2LLU),_1d2375913_Range16(12317LLU,64831LLU,52514LLU),_1d2375913_Range16(65047LLU,65077LLU,30LLU),_1d2375913_Range16(65079LLU,65091LLU,2LLU),_1d2375913_Range16(65095LLU,65113LLU,18LLU),_1d2375913_Range16(65115LLU,65117LLU,2LLU),_1d2375913_Range16(65288LLU,65339LLU,51LLU),_1d2375913_Range16(65371LLU,65375LLU,4LLU),_1d2375913_Range16(65378LLU,65378LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),1LL));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__S = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(36LLU,43LLU,7LLU),_1d2375913_Range16(60LLU,62LLU,1LLU),_1d2375913_Range16(94LLU,96LLU,2LLU),_1d2375913_Range16(124LLU,126LLU,2LLU),_1d2375913_Range16(162LLU,166LLU,1LLU),_1d2375913_Range16(168LLU,169LLU,1LLU),_1d2375913_Range16(172LLU,174LLU,2LLU),_1d2375913_Range16(175LLU,177LLU,1LLU),_1d2375913_Range16(180LLU,184LLU,4LLU),_1d2375913_Range16(215LLU,247LLU,32LLU),_1d2375913_Range16(706LLU,709LLU,1LLU),_1d2375913_Range16(722LLU,735LLU,1LLU),_1d2375913_Range16(741LLU,747LLU,1LLU),_1d2375913_Range16(749LLU,751LLU,2LLU),_1d2375913_Range16(752LLU,767LLU,1LLU),_1d2375913_Range16(885LLU,900LLU,15LLU),_1d2375913_Range16(901LLU,1014LLU,113LLU),_1d2375913_Range16(1154LLU,1421LLU,267LLU),_1d2375913_Range16(1422LLU,1423LLU,1LLU),_1d2375913_Range16(1542LLU,1544LLU,1LLU),_1d2375913_Range16(1547LLU,1550LLU,3LLU),_1d2375913_Range16(1551LLU,1758LLU,207LLU),_1d2375913_Range16(1769LLU,1789LLU,20LLU),_1d2375913_Range16(1790LLU,2038LLU,248LLU),_1d2375913_Range16(2046LLU,2047LLU,1LLU),_1d2375913_Range16(2184LLU,2546LLU,362LLU),_1d2375913_Range16(2547LLU,2554LLU,7LLU),_1d2375913_Range16(2555LLU,2801LLU,246LLU),_1d2375913_Range16(2928LLU,3059LLU,131LLU),_1d2375913_Range16(3060LLU,3066LLU,1LLU),_1d2375913_Range16(3199LLU,3407LLU,208LLU),_1d2375913_Range16(3449LLU,3647LLU,198LLU),_1d2375913_Range16(3841LLU,3843LLU,1LLU),_1d2375913_Range16(3859LLU,3861LLU,2LLU),_1d2375913_Range16(3862LLU,3863LLU,1LLU),_1d2375913_Range16(3866LLU,3871LLU,1LLU),_1d2375913_Range16(3892LLU,3896LLU,2LLU),_1d2375913_Range16(4030LLU,4037LLU,1LLU),_1d2375913_Range16(4039LLU,4044LLU,1LLU),_1d2375913_Range16(4046LLU,4047LLU,1LLU),_1d2375913_Range16(4053LLU,4056LLU,1LLU),_1d2375913_Range16(4254LLU,4255LLU,1LLU),_1d2375913_Range16(5008LLU,5017LLU,1LLU),_1d2375913_Range16(5741LLU,6107LLU,366LLU),_1d2375913_Range16(6464LLU,6622LLU,158LLU),_1d2375913_Range16(6623LLU,6655LLU,1LLU),_1d2375913_Range16(7009LLU,7018LLU,1LLU),_1d2375913_Range16(7028LLU,7036LLU,1LLU),_1d2375913_Range16(8125LLU,8127LLU,2LLU),_1d2375913_Range16(8128LLU,8129LLU,1LLU),_1d2375913_Range16(8141LLU,8143LLU,1LLU),_1d2375913_Range16(8157LLU,8159LLU,1LLU),_1d2375913_Range16(8173LLU,8175LLU,1LLU),_1d2375913_Range16(8189LLU,8190LLU,1LLU),_1d2375913_Range16(8260LLU,8274LLU,14LLU),_1d2375913_Range16(8314LLU,8316LLU,1LLU),_1d2375913_Range16(8330LLU,8332LLU,1LLU),_1d2375913_Range16(8352LLU,8384LLU,1LLU),_1d2375913_Range16(8448LLU,8449LLU,1LLU),_1d2375913_Range16(8451LLU,8454LLU,1LLU),_1d2375913_Range16(8456LLU,8457LLU,1LLU),_1d2375913_Range16(8468LLU,8470LLU,2LLU),_1d2375913_Range16(8471LLU,8472LLU,1LLU),_1d2375913_Range16(8478LLU,8483LLU,1LLU),_1d2375913_Range16(8485LLU,8489LLU,2LLU),_1d2375913_Range16(8494LLU,8506LLU,12LLU),_1d2375913_Range16(8507LLU,8512LLU,5LLU),_1d2375913_Range16(8513LLU,8516LLU,1LLU),_1d2375913_Range16(8522LLU,8525LLU,1LLU),_1d2375913_Range16(8527LLU,8586LLU,59LLU),_1d2375913_Range16(8587LLU,8592LLU,5LLU),_1d2375913_Range16(8593LLU,8967LLU,1LLU),_1d2375913_Range16(8972LLU,9000LLU,1LLU),_1d2375913_Range16(9003LLU,9254LLU,1LLU),_1d2375913_Range16(9280LLU,9290LLU,1LLU),_1d2375913_Range16(9372LLU,9449LLU,1LLU),_1d2375913_Range16(9472LLU,10087LLU,1LLU),_1d2375913_Range16(10132LLU,10180LLU,1LLU),_1d2375913_Range16(10183LLU,10213LLU,1LLU),_1d2375913_Range16(10224LLU,10626LLU,1LLU),_1d2375913_Range16(10649LLU,10711LLU,1LLU),_1d2375913_Range16(10716LLU,10747LLU,1LLU),_1d2375913_Range16(10750LLU,11123LLU,1LLU),_1d2375913_Range16(11126LLU,11157LLU,1LLU),_1d2375913_Range16(11159LLU,11263LLU,1LLU),_1d2375913_Range16(11493LLU,11498LLU,1LLU),_1d2375913_Range16(11856LLU,11857LLU,1LLU),_1d2375913_Range16(11904LLU,11929LLU,1LLU),_1d2375913_Range16(11931LLU,12019LLU,1LLU),_1d2375913_Range16(12032LLU,12245LLU,1LLU),_1d2375913_Range16(12272LLU,12283LLU,1LLU),_1d2375913_Range16(12292LLU,12306LLU,14LLU),_1d2375913_Range16(12307LLU,12320LLU,13LLU),_1d2375913_Range16(12342LLU,12343LLU,1LLU),_1d2375913_Range16(12350LLU,12351LLU,1LLU),_1d2375913_Range16(12443LLU,12444LLU,1LLU),_1d2375913_Range16(12688LLU,12689LLU,1LLU),_1d2375913_Range16(12694LLU,12703LLU,1LLU),_1d2375913_Range16(12736LLU,12771LLU,1LLU),_1d2375913_Range16(12800LLU,12830LLU,1LLU),_1d2375913_Range16(12842LLU,12871LLU,1LLU),_1d2375913_Range16(12880LLU,12896LLU,16LLU),_1d2375913_Range16(12897LLU,12927LLU,1LLU),_1d2375913_Range16(12938LLU,12976LLU,1LLU),_1d2375913_Range16(12992LLU,13311LLU,1LLU),_1d2375913_Range16(19904LLU,19967LLU,1LLU),_1d2375913_Range16(42128LLU,42182LLU,1LLU),_1d2375913_Range16(42752LLU,42774LLU,1LLU),_1d2375913_Range16(42784LLU,42785LLU,1LLU),_1d2375913_Range16(42889LLU,42890LLU,1LLU),_1d2375913_Range16(43048LLU,43051LLU,1LLU),_1d2375913_Range16(43062LLU,43065LLU,1LLU),_1d2375913_Range16(43639LLU,43641LLU,1LLU),_1d2375913_Range16(43867LLU,43882LLU,15LLU),_1d2375913_Range16(43883LLU,64297LLU,20414LLU),_1d2375913_Range16(64434LLU,64450LLU,1LLU),_1d2375913_Range16(64832LLU,64847LLU,1LLU),_1d2375913_Range16(64975LLU,65020LLU,45LLU),_1d2375913_Range16(65021LLU,65023LLU,1LLU),_1d2375913_Range16(65122LLU,65124LLU,2LLU),_1d2375913_Range16(65125LLU,65126LLU,1LLU),_1d2375913_Range16(65129LLU,65284LLU,155LLU),_1d2375913_Range16(65291LLU,65308LLU,17LLU),_1d2375913_Range16(65309LLU,65310LLU,1LLU),_1d2375913_Range16(65342LLU,65344LLU,2LLU),_1d2375913_Range16(65372LLU,65374LLU,2LLU),_1d2375913_Range16(65504LLU,65510LLU,1LLU),_1d2375913_Range16(65512LLU,65518LLU,1LLU),_1d2375913_Range16(65532LLU,65533LLU,1LLU)}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(65847LLU,65855LLU,1LLU),_1d2375913_Range32(65913LLU,65929LLU,1LLU),_1d2375913_Range32(65932LLU,65934LLU,1LLU),_1d2375913_Range32(65936LLU,65948LLU,1LLU),_1d2375913_Range32(65952LLU,66000LLU,48LLU),_1d2375913_Range32(66001LLU,66044LLU,1LLU),_1d2375913_Range32(67703LLU,67704LLU,1LLU),_1d2375913_Range32(68296LLU,71487LLU,3191LLU),_1d2375913_Range32(73685LLU,73713LLU,1LLU),_1d2375913_Range32(92988LLU,92991LLU,1LLU),_1d2375913_Range32(92997LLU,113820LLU,20823LLU),_1d2375913_Range32(118608LLU,118723LLU,1LLU),_1d2375913_Range32(118784LLU,119029LLU,1LLU),_1d2375913_Range32(119040LLU,119078LLU,1LLU),_1d2375913_Range32(119081LLU,119140LLU,1LLU),_1d2375913_Range32(119146LLU,119148LLU,1LLU),_1d2375913_Range32(119171LLU,119172LLU,1LLU),_1d2375913_Range32(119180LLU,119209LLU,1LLU),_1d2375913_Range32(119214LLU,119274LLU,1LLU),_1d2375913_Range32(119296LLU,119361LLU,1LLU),_1d2375913_Range32(119365LLU,119552LLU,187LLU),_1d2375913_Range32(119553LLU,119638LLU,1LLU),_1d2375913_Range32(120513LLU,120539LLU,26LLU),_1d2375913_Range32(120571LLU,120597LLU,26LLU),_1d2375913_Range32(120629LLU,120655LLU,26LLU),_1d2375913_Range32(120687LLU,120713LLU,26LLU),_1d2375913_Range32(120745LLU,120771LLU,26LLU),_1d2375913_Range32(120832LLU,121343LLU,1LLU),_1d2375913_Range32(121399LLU,121402LLU,1LLU),_1d2375913_Range32(121453LLU,121460LLU,1LLU),_1d2375913_Range32(121462LLU,121475LLU,1LLU),_1d2375913_Range32(121477LLU,121478LLU,1LLU),_1d2375913_Range32(123215LLU,123647LLU,432LLU),_1d2375913_Range32(126124LLU,126128LLU,4LLU),_1d2375913_Range32(126254LLU,126704LLU,450LLU),_1d2375913_Range32(126705LLU,126976LLU,271LLU),_1d2375913_Range32(126977LLU,127019LLU,1LLU),_1d2375913_Range32(127024LLU,127123LLU,1LLU),_1d2375913_Range32(127136LLU,127150LLU,1LLU),_1d2375913_Range32(127153LLU,127167LLU,1LLU),_1d2375913_Range32(127169LLU,127183LLU,1LLU),_1d2375913_Range32(127185LLU,127221LLU,1LLU),_1d2375913_Range32(127245LLU,127405LLU,1LLU),_1d2375913_Range32(127462LLU,127490LLU,1LLU),_1d2375913_Range32(127504LLU,127547LLU,1LLU),_1d2375913_Range32(127552LLU,127560LLU,1LLU),_1d2375913_Range32(127568LLU,127569LLU,1LLU),_1d2375913_Range32(127584LLU,127589LLU,1LLU),_1d2375913_Range32(127744LLU,128727LLU,1LLU),_1d2375913_Range32(128732LLU,128748LLU,1LLU),_1d2375913_Range32(128752LLU,128764LLU,1LLU),_1d2375913_Range32(128768LLU,128886LLU,1LLU),_1d2375913_Range32(128891LLU,128985LLU,1LLU),_1d2375913_Range32(128992LLU,129003LLU,1LLU),_1d2375913_Range32(129008LLU,129024LLU,16LLU),_1d2375913_Range32(129025LLU,129035LLU,1LLU),_1d2375913_Range32(129040LLU,129095LLU,1LLU),_1d2375913_Range32(129104LLU,129113LLU,1LLU),_1d2375913_Range32(129120LLU,129159LLU,1LLU),_1d2375913_Range32(129168LLU,129197LLU,1LLU),_1d2375913_Range32(129200LLU,129201LLU,1LLU),_1d2375913_Range32(129280LLU,129619LLU,1LLU),_1d2375913_Range32(129632LLU,129645LLU,1LLU),_1d2375913_Range32(129648LLU,129660LLU,1LLU),_1d2375913_Range32(129664LLU,129672LLU,1LLU),_1d2375913_Range32(129680LLU,129725LLU,1LLU),_1d2375913_Range32(129727LLU,129733LLU,1LLU),_1d2375913_Range32(129742LLU,129755LLU,1LLU),_1d2375913_Range32(129760LLU,129768LLU,1LLU),_1d2375913_Range32(129776LLU,129784LLU,1LLU),_1d2375913_Range32(129792LLU,129938LLU,1LLU),_1d2375913_Range32(129940LLU,129994LLU,1LLU)}),10LL));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__SC = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(36LLU,162LLU,126LLU),_1d2375913_Range16(163LLU,165LLU,1LLU),_1d2375913_Range16(1423LLU,1547LLU,124LLU),_1d2375913_Range16(2046LLU,2047LLU,1LLU),_1d2375913_Range16(2546LLU,2547LLU,1LLU),_1d2375913_Range16(2555LLU,2801LLU,246LLU),_1d2375913_Range16(3065LLU,3647LLU,582LLU),_1d2375913_Range16(6107LLU,8352LLU,2245LLU),_1d2375913_Range16(8353LLU,8384LLU,1LLU),_1d2375913_Range16(43064LLU,65020LLU,21956LLU),_1d2375913_Range16(65129LLU,65284LLU,155LLU),_1d2375913_Range16(65504LLU,65505LLU,1LLU),_1d2375913_Range16(65509LLU,65510LLU,1LLU)}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(73693LLU,73696LLU,1LLU),_1d2375913_Range32(123647LLU,126128LLU,2481LLU)}),2LL));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__SK = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(94LLU,96LLU,2LLU),_1d2375913_Range16(168LLU,175LLU,7LLU),_1d2375913_Range16(180LLU,184LLU,4LLU),_1d2375913_Range16(706LLU,709LLU,1LLU),_1d2375913_Range16(722LLU,735LLU,1LLU),_1d2375913_Range16(741LLU,747LLU,1LLU),_1d2375913_Range16(749LLU,751LLU,2LLU),_1d2375913_Range16(752LLU,767LLU,1LLU),_1d2375913_Range16(885LLU,900LLU,15LLU),_1d2375913_Range16(901LLU,2184LLU,1283LLU),_1d2375913_Range16(8125LLU,8127LLU,2LLU),_1d2375913_Range16(8128LLU,8129LLU,1LLU),_1d2375913_Range16(8141LLU,8143LLU,1LLU),_1d2375913_Range16(8157LLU,8159LLU,1LLU),_1d2375913_Range16(8173LLU,8175LLU,1LLU),_1d2375913_Range16(8189LLU,8190LLU,1LLU),_1d2375913_Range16(12443LLU,12444LLU,1LLU),_1d2375913_Range16(42752LLU,42774LLU,1LLU),_1d2375913_Range16(42784LLU,42785LLU,1LLU),_1d2375913_Range16(42889LLU,42890LLU,1LLU),_1d2375913_Range16(43867LLU,43882LLU,15LLU),_1d2375913_Range16(43883LLU,64434LLU,20551LLU),_1d2375913_Range16(64435LLU,64450LLU,1LLU),_1d2375913_Range16(65342LLU,65344LLU,2LLU),_1d2375913_Range16(65507LLU,65507LLU,1LLU)}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(127995LLU,127999LLU,1LLU)}),3LL));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__SM = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(43LLU,60LLU,17LLU),_1d2375913_Range16(61LLU,62LLU,1LLU),_1d2375913_Range16(124LLU,126LLU,2LLU),_1d2375913_Range16(172LLU,177LLU,5LLU),_1d2375913_Range16(215LLU,247LLU,32LLU),_1d2375913_Range16(1014LLU,1542LLU,528LLU),_1d2375913_Range16(1543LLU,1544LLU,1LLU),_1d2375913_Range16(8260LLU,8274LLU,14LLU),_1d2375913_Range16(8314LLU,8316LLU,1LLU),_1d2375913_Range16(8330LLU,8332LLU,1LLU),_1d2375913_Range16(8472LLU,8512LLU,40LLU),_1d2375913_Range16(8513LLU,8516LLU,1LLU),_1d2375913_Range16(8523LLU,8592LLU,69LLU),_1d2375913_Range16(8593LLU,8596LLU,1LLU),_1d2375913_Range16(8602LLU,8603LLU,1LLU),_1d2375913_Range16(8608LLU,8614LLU,3LLU),_1d2375913_Range16(8622LLU,8654LLU,32LLU),_1d2375913_Range16(8655LLU,8658LLU,3LLU),_1d2375913_Range16(8660LLU,8692LLU,32LLU),_1d2375913_Range16(8693LLU,8959LLU,1LLU),_1d2375913_Range16(8992LLU,8993LLU,1LLU),_1d2375913_Range16(9084LLU,9115LLU,31LLU),_1d2375913_Range16(9116LLU,9139LLU,1LLU),_1d2375913_Range16(9180LLU,9185LLU,1LLU),_1d2375913_Range16(9655LLU,9665LLU,10LLU),_1d2375913_Range16(9720LLU,9727LLU,1LLU),_1d2375913_Range16(9839LLU,10176LLU,337LLU),_1d2375913_Range16(10177LLU,10180LLU,1LLU),_1d2375913_Range16(10183LLU,10213LLU,1LLU),_1d2375913_Range16(10224LLU,10239LLU,1LLU),_1d2375913_Range16(10496LLU,10626LLU,1LLU),_1d2375913_Range16(10649LLU,10711LLU,1LLU),_1d2375913_Range16(10716LLU,10747LLU,1LLU),_1d2375913_Range16(10750LLU,11007LLU,1LLU),_1d2375913_Range16(11056LLU,11076LLU,1LLU),_1d2375913_Range16(11079LLU,11084LLU,1LLU),_1d2375913_Range16(64297LLU,65122LLU,825LLU),_1d2375913_Range16(65124LLU,65126LLU,1LLU),_1d2375913_Range16(65291LLU,65308LLU,17LLU),_1d2375913_Range16(65309LLU,65310LLU,1LLU),_1d2375913_Range16(65372LLU,65374LLU,2LLU),_1d2375913_Range16(65506LLU,65513LLU,7LLU),_1d2375913_Range16(65514LLU,65516LLU,1LLU)}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(120513LLU,120539LLU,26LLU),_1d2375913_Range32(120571LLU,120597LLU,26LLU),_1d2375913_Range32(120629LLU,120655LLU,26LLU),_1d2375913_Range32(120687LLU,120713LLU,26LLU),_1d2375913_Range32(120745LLU,120771LLU,26LLU),_1d2375913_Range32(126704LLU,126705LLU,1LLU)}),5LL));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__SO = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(166LLU,169LLU,3LLU),_1d2375913_Range16(174LLU,176LLU,2LLU),_1d2375913_Range16(1154LLU,1421LLU,267LLU),_1d2375913_Range16(1422LLU,1550LLU,128LLU),_1d2375913_Range16(1551LLU,1758LLU,207LLU),_1d2375913_Range16(1769LLU,1789LLU,20LLU),_1d2375913_Range16(1790LLU,2038LLU,248LLU),_1d2375913_Range16(2554LLU,2928LLU,374LLU),_1d2375913_Range16(3059LLU,3064LLU,1LLU),_1d2375913_Range16(3066LLU,3199LLU,133LLU),_1d2375913_Range16(3407LLU,3449LLU,42LLU),_1d2375913_Range16(3841LLU,3843LLU,1LLU),_1d2375913_Range16(3859LLU,3861LLU,2LLU),_1d2375913_Range16(3862LLU,3863LLU,1LLU),_1d2375913_Range16(3866LLU,3871LLU,1LLU),_1d2375913_Range16(3892LLU,3896LLU,2LLU),_1d2375913_Range16(4030LLU,4037LLU,1LLU),_1d2375913_Range16(4039LLU,4044LLU,1LLU),_1d2375913_Range16(4046LLU,4047LLU,1LLU),_1d2375913_Range16(4053LLU,4056LLU,1LLU),_1d2375913_Range16(4254LLU,4255LLU,1LLU),_1d2375913_Range16(5008LLU,5017LLU,1LLU),_1d2375913_Range16(5741LLU,6464LLU,723LLU),_1d2375913_Range16(6622LLU,6655LLU,1LLU),_1d2375913_Range16(7009LLU,7018LLU,1LLU),_1d2375913_Range16(7028LLU,7036LLU,1LLU),_1d2375913_Range16(8448LLU,8449LLU,1LLU),_1d2375913_Range16(8451LLU,8454LLU,1LLU),_1d2375913_Range16(8456LLU,8457LLU,1LLU),_1d2375913_Range16(8468LLU,8470LLU,2LLU),_1d2375913_Range16(8471LLU,8478LLU,7LLU),_1d2375913_Range16(8479LLU,8483LLU,1LLU),_1d2375913_Range16(8485LLU,8489LLU,2LLU),_1d2375913_Range16(8494LLU,8506LLU,12LLU),_1d2375913_Range16(8507LLU,8522LLU,15LLU),_1d2375913_Range16(8524LLU,8525LLU,1LLU),_1d2375913_Range16(8527LLU,8586LLU,59LLU),_1d2375913_Range16(8587LLU,8597LLU,10LLU),_1d2375913_Range16(8598LLU,8601LLU,1LLU),_1d2375913_Range16(8604LLU,8607LLU,1LLU),_1d2375913_Range16(8609LLU,8610LLU,1LLU),_1d2375913_Range16(8612LLU,8613LLU,1LLU),_1d2375913_Range16(8615LLU,8621LLU,1LLU),_1d2375913_Range16(8623LLU,8653LLU,1LLU),_1d2375913_Range16(8656LLU,8657LLU,1LLU),_1d2375913_Range16(8659LLU,8661LLU,2LLU),_1d2375913_Range16(8662LLU,8691LLU,1LLU),_1d2375913_Range16(8960LLU,8967LLU,1LLU),_1d2375913_Range16(8972LLU,8991LLU,1LLU),_1d2375913_Range16(8994LLU,9000LLU,1LLU),_1d2375913_Range16(9003LLU,9083LLU,1LLU),_1d2375913_Range16(9085LLU,9114LLU,1LLU),_1d2375913_Range16(9140LLU,9179LLU,1LLU),_1d2375913_Range16(9186LLU,9254LLU,1LLU),_1d2375913_Range16(9280LLU,9290LLU,1LLU),_1d2375913_Range16(9372LLU,9449LLU,1LLU),_1d2375913_Range16(9472LLU,9654LLU,1LLU),_1d2375913_Range16(9656LLU,9664LLU,1LLU),_1d2375913_Range16(9666LLU,9719LLU,1LLU),_1d2375913_Range16(9728LLU,9838LLU,1LLU),_1d2375913_Range16(9840LLU,10087LLU,1LLU),_1d2375913_Range16(10132LLU,10175LLU,1LLU),_1d2375913_Range16(10240LLU,10495LLU,1LLU),_1d2375913_Range16(11008LLU,11055LLU,1LLU),_1d2375913_Range16(11077LLU,11078LLU,1LLU),_1d2375913_Range16(11085LLU,11123LLU,1LLU),_1d2375913_Range16(11126LLU,11157LLU,1LLU),_1d2375913_Range16(11159LLU,11263LLU,1LLU),_1d2375913_Range16(11493LLU,11498LLU,1LLU),_1d2375913_Range16(11856LLU,11857LLU,1LLU),_1d2375913_Range16(11904LLU,11929LLU,1LLU),_1d2375913_Range16(11931LLU,12019LLU,1LLU),_1d2375913_Range16(12032LLU,12245LLU,1LLU),_1d2375913_Range16(12272LLU,12283LLU,1LLU),_1d2375913_Range16(12292LLU,12306LLU,14LLU),_1d2375913_Range16(12307LLU,12320LLU,13LLU),_1d2375913_Range16(12342LLU,12343LLU,1LLU),_1d2375913_Range16(12350LLU,12351LLU,1LLU),_1d2375913_Range16(12688LLU,12689LLU,1LLU),_1d2375913_Range16(12694LLU,12703LLU,1LLU),_1d2375913_Range16(12736LLU,12771LLU,1LLU),_1d2375913_Range16(12800LLU,12830LLU,1LLU),_1d2375913_Range16(12842LLU,12871LLU,1LLU),_1d2375913_Range16(12880LLU,12896LLU,16LLU),_1d2375913_Range16(12897LLU,12927LLU,1LLU),_1d2375913_Range16(12938LLU,12976LLU,1LLU),_1d2375913_Range16(12992LLU,13311LLU,1LLU),_1d2375913_Range16(19904LLU,19967LLU,1LLU),_1d2375913_Range16(42128LLU,42182LLU,1LLU),_1d2375913_Range16(43048LLU,43051LLU,1LLU),_1d2375913_Range16(43062LLU,43063LLU,1LLU),_1d2375913_Range16(43065LLU,43639LLU,574LLU),_1d2375913_Range16(43640LLU,43641LLU,1LLU),_1d2375913_Range16(64832LLU,64847LLU,1LLU),_1d2375913_Range16(64975LLU,65021LLU,46LLU),_1d2375913_Range16(65022LLU,65023LLU,1LLU),_1d2375913_Range16(65508LLU,65512LLU,4LLU),_1d2375913_Range16(65517LLU,65518LLU,1LLU),_1d2375913_Range16(65532LLU,65533LLU,1LLU)}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(65847LLU,65855LLU,1LLU),_1d2375913_Range32(65913LLU,65929LLU,1LLU),_1d2375913_Range32(65932LLU,65934LLU,1LLU),_1d2375913_Range32(65936LLU,65948LLU,1LLU),_1d2375913_Range32(65952LLU,66000LLU,48LLU),_1d2375913_Range32(66001LLU,66044LLU,1LLU),_1d2375913_Range32(67703LLU,67704LLU,1LLU),_1d2375913_Range32(68296LLU,71487LLU,3191LLU),_1d2375913_Range32(73685LLU,73692LLU,1LLU),_1d2375913_Range32(73697LLU,73713LLU,1LLU),_1d2375913_Range32(92988LLU,92991LLU,1LLU),_1d2375913_Range32(92997LLU,113820LLU,20823LLU),_1d2375913_Range32(118608LLU,118723LLU,1LLU),_1d2375913_Range32(118784LLU,119029LLU,1LLU),_1d2375913_Range32(119040LLU,119078LLU,1LLU),_1d2375913_Range32(119081LLU,119140LLU,1LLU),_1d2375913_Range32(119146LLU,119148LLU,1LLU),_1d2375913_Range32(119171LLU,119172LLU,1LLU),_1d2375913_Range32(119180LLU,119209LLU,1LLU),_1d2375913_Range32(119214LLU,119274LLU,1LLU),_1d2375913_Range32(119296LLU,119361LLU,1LLU),_1d2375913_Range32(119365LLU,119552LLU,187LLU),_1d2375913_Range32(119553LLU,119638LLU,1LLU),_1d2375913_Range32(120832LLU,121343LLU,1LLU),_1d2375913_Range32(121399LLU,121402LLU,1LLU),_1d2375913_Range32(121453LLU,121460LLU,1LLU),_1d2375913_Range32(121462LLU,121475LLU,1LLU),_1d2375913_Range32(121477LLU,121478LLU,1LLU),_1d2375913_Range32(123215LLU,126124LLU,2909LLU),_1d2375913_Range32(126254LLU,126976LLU,722LLU),_1d2375913_Range32(126977LLU,127019LLU,1LLU),_1d2375913_Range32(127024LLU,127123LLU,1LLU),_1d2375913_Range32(127136LLU,127150LLU,1LLU),_1d2375913_Range32(127153LLU,127167LLU,1LLU),_1d2375913_Range32(127169LLU,127183LLU,1LLU),_1d2375913_Range32(127185LLU,127221LLU,1LLU),_1d2375913_Range32(127245LLU,127405LLU,1LLU),_1d2375913_Range32(127462LLU,127490LLU,1LLU),_1d2375913_Range32(127504LLU,127547LLU,1LLU),_1d2375913_Range32(127552LLU,127560LLU,1LLU),_1d2375913_Range32(127568LLU,127569LLU,1LLU),_1d2375913_Range32(127584LLU,127589LLU,1LLU),_1d2375913_Range32(127744LLU,127994LLU,1LLU),_1d2375913_Range32(128000LLU,128727LLU,1LLU),_1d2375913_Range32(128732LLU,128748LLU,1LLU),_1d2375913_Range32(128752LLU,128764LLU,1LLU),_1d2375913_Range32(128768LLU,128886LLU,1LLU),_1d2375913_Range32(128891LLU,128985LLU,1LLU),_1d2375913_Range32(128992LLU,129003LLU,1LLU),_1d2375913_Range32(129008LLU,129024LLU,16LLU),_1d2375913_Range32(129025LLU,129035LLU,1LLU),_1d2375913_Range32(129040LLU,129095LLU,1LLU),_1d2375913_Range32(129104LLU,129113LLU,1LLU),_1d2375913_Range32(129120LLU,129159LLU,1LLU),_1d2375913_Range32(129168LLU,129197LLU,1LLU),_1d2375913_Range32(129200LLU,129201LLU,1LLU),_1d2375913_Range32(129280LLU,129619LLU,1LLU),_1d2375913_Range32(129632LLU,129645LLU,1LLU),_1d2375913_Range32(129648LLU,129660LLU,1LLU),_1d2375913_Range32(129664LLU,129672LLU,1LLU),_1d2375913_Range32(129680LLU,129725LLU,1LLU),_1d2375913_Range32(129727LLU,129733LLU,1LLU),_1d2375913_Range32(129742LLU,129755LLU,1LLU),_1d2375913_Range32(129760LLU,129768LLU,1LLU),_1d2375913_Range32(129776LLU,129784LLU,1LLU),_1d2375913_Range32(129792LLU,129938LLU,1LLU),_1d2375913_Range32(129940LLU,129994LLU,1LLU)}),2LL));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__Z = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(32LLU,160LLU,128LLU),_1d2375913_Range16(5760LLU,8192LLU,2432LLU),_1d2375913_Range16(8193LLU,8202LLU,1LLU),_1d2375913_Range16(8232LLU,8233LLU,1LLU),_1d2375913_Range16(8239LLU,8287LLU,48LLU),_1d2375913_Range16(12288LLU,12288LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),1LL));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__ZL = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(8232LLU,8232LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__ZP = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(8233LLU,8233LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__ZS = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(32LLU,160LLU,128LLU),_1d2375913_Range16(5760LLU,8192LLU,2432LLU),_1d2375913_Range16(8193LLU,8202LLU,1LLU),_1d2375913_Range16(8239LLU,8287LLU,48LLU),_1d2375913_Range16(12288LLU,12288LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),1LL));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__ADLAM = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(125184LLU,125259LLU,1LLU),_1d2375913_Range32(125264LLU,125273LLU,1LLU),_1d2375913_Range32(125278LLU,125279LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__AHOM = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(71424LLU,71450LLU,1LLU),_1d2375913_Range32(71453LLU,71467LLU,1LLU),_1d2375913_Range32(71472LLU,71494LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__ANATOLIAN_HIEROGLYPHS = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(82944LLU,83526LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__ARABIC = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(1536LLU,1540LLU,1LLU),_1d2375913_Range16(1542LLU,1547LLU,1LLU),_1d2375913_Range16(1549LLU,1562LLU,1LLU),_1d2375913_Range16(1564LLU,1566LLU,1LLU),_1d2375913_Range16(1568LLU,1599LLU,1LLU),_1d2375913_Range16(1601LLU,1610LLU,1LLU),_1d2375913_Range16(1622LLU,1647LLU,1LLU),_1d2375913_Range16(1649LLU,1756LLU,1LLU),_1d2375913_Range16(1758LLU,1791LLU,1LLU),_1d2375913_Range16(1872LLU,1919LLU,1LLU),_1d2375913_Range16(2160LLU,2190LLU,1LLU),_1d2375913_Range16(2192LLU,2193LLU,1LLU),_1d2375913_Range16(2200LLU,2273LLU,1LLU),_1d2375913_Range16(2275LLU,2303LLU,1LLU),_1d2375913_Range16(64336LLU,64450LLU,1LLU),_1d2375913_Range16(64467LLU,64829LLU,1LLU),_1d2375913_Range16(64832LLU,64911LLU,1LLU),_1d2375913_Range16(64914LLU,64967LLU,1LLU),_1d2375913_Range16(64975LLU,65008LLU,33LLU),_1d2375913_Range16(65009LLU,65023LLU,1LLU),_1d2375913_Range16(65136LLU,65140LLU,1LLU),_1d2375913_Range16(65142LLU,65276LLU,1LLU)}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(69216LLU,69246LLU,1LLU),_1d2375913_Range32(69373LLU,69375LLU,1LLU),_1d2375913_Range32(126464LLU,126467LLU,1LLU),_1d2375913_Range32(126469LLU,126495LLU,1LLU),_1d2375913_Range32(126497LLU,126498LLU,1LLU),_1d2375913_Range32(126500LLU,126503LLU,3LLU),_1d2375913_Range32(126505LLU,126514LLU,1LLU),_1d2375913_Range32(126516LLU,126519LLU,1LLU),_1d2375913_Range32(126521LLU,126523LLU,2LLU),_1d2375913_Range32(126530LLU,126535LLU,5LLU),_1d2375913_Range32(126537LLU,126541LLU,2LLU),_1d2375913_Range32(126542LLU,126543LLU,1LLU),_1d2375913_Range32(126545LLU,126546LLU,1LLU),_1d2375913_Range32(126548LLU,126551LLU,3LLU),_1d2375913_Range32(126553LLU,126561LLU,2LLU),_1d2375913_Range32(126562LLU,126564LLU,2LLU),_1d2375913_Range32(126567LLU,126570LLU,1LLU),_1d2375913_Range32(126572LLU,126578LLU,1LLU),_1d2375913_Range32(126580LLU,126583LLU,1LLU),_1d2375913_Range32(126585LLU,126588LLU,1LLU),_1d2375913_Range32(126590LLU,126592LLU,2LLU),_1d2375913_Range32(126593LLU,126601LLU,1LLU),_1d2375913_Range32(126603LLU,126619LLU,1LLU),_1d2375913_Range32(126625LLU,126627LLU,1LLU),_1d2375913_Range32(126629LLU,126633LLU,1LLU),_1d2375913_Range32(126635LLU,126651LLU,1LLU),_1d2375913_Range32(126704LLU,126705LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__ARMENIAN = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(1329LLU,1366LLU,1LLU),_1d2375913_Range16(1369LLU,1418LLU,1LLU),_1d2375913_Range16(1421LLU,1423LLU,1LLU),_1d2375913_Range16(64275LLU,64279LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__AVESTAN = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(68352LLU,68405LLU,1LLU),_1d2375913_Range32(68409LLU,68415LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__BALINESE = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(6912LLU,6988LLU,1LLU),_1d2375913_Range16(6992LLU,7038LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__BAMUM = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(42656LLU,42743LLU,1LLU)}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(92160LLU,92728LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__BASSA_VAH = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(92880LLU,92909LLU,1LLU),_1d2375913_Range32(92912LLU,92917LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__BATAK = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(7104LLU,7155LLU,1LLU),_1d2375913_Range16(7164LLU,7167LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__BENGALI = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(2432LLU,2435LLU,1LLU),_1d2375913_Range16(2437LLU,2444LLU,1LLU),_1d2375913_Range16(2447LLU,2448LLU,1LLU),_1d2375913_Range16(2451LLU,2472LLU,1LLU),_1d2375913_Range16(2474LLU,2480LLU,1LLU),_1d2375913_Range16(2482LLU,2486LLU,4LLU),_1d2375913_Range16(2487LLU,2489LLU,1LLU),_1d2375913_Range16(2492LLU,2500LLU,1LLU),_1d2375913_Range16(2503LLU,2504LLU,1LLU),_1d2375913_Range16(2507LLU,2510LLU,1LLU),_1d2375913_Range16(2519LLU,2524LLU,5LLU),_1d2375913_Range16(2525LLU,2527LLU,2LLU),_1d2375913_Range16(2528LLU,2531LLU,1LLU),_1d2375913_Range16(2534LLU,2558LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__BHAIKSUKI = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(72704LLU,72712LLU,1LLU),_1d2375913_Range32(72714LLU,72758LLU,1LLU),_1d2375913_Range32(72760LLU,72773LLU,1LLU),_1d2375913_Range32(72784LLU,72812LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__BOPOMOFO = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(746LLU,747LLU,1LLU),_1d2375913_Range16(12549LLU,12591LLU,1LLU),_1d2375913_Range16(12704LLU,12735LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__BRAHMI = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(69632LLU,69709LLU,1LLU),_1d2375913_Range32(69714LLU,69749LLU,1LLU),_1d2375913_Range32(69759LLU,69759LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__BRAILLE = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(10240LLU,10495LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__BUGINESE = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(6656LLU,6683LLU,1LLU),_1d2375913_Range16(6686LLU,6687LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__BUHID = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(5952LLU,5971LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__CANADIAN_ABORIGINAL = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(5120LLU,5759LLU,1LLU),_1d2375913_Range16(6320LLU,6389LLU,1LLU)}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(72368LLU,72383LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__CARIAN = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(66208LLU,66256LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__CAUCASIAN_ALBANIAN = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(66864LLU,66915LLU,1LLU),_1d2375913_Range32(66927LLU,66927LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__CHAKMA = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(69888LLU,69940LLU,1LLU),_1d2375913_Range32(69942LLU,69959LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__CHAM = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(43520LLU,43574LLU,1LLU),_1d2375913_Range16(43584LLU,43597LLU,1LLU),_1d2375913_Range16(43600LLU,43609LLU,1LLU),_1d2375913_Range16(43612LLU,43615LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__CHEROKEE = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(5024LLU,5109LLU,1LLU),_1d2375913_Range16(5112LLU,5117LLU,1LLU),_1d2375913_Range16(43888LLU,43967LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__CHORASMIAN = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(69552LLU,69579LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__COMMON = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(0LLU,64LLU,1LLU),_1d2375913_Range16(91LLU,96LLU,1LLU),_1d2375913_Range16(123LLU,169LLU,1LLU),_1d2375913_Range16(171LLU,185LLU,1LLU),_1d2375913_Range16(187LLU,191LLU,1LLU),_1d2375913_Range16(215LLU,247LLU,32LLU),_1d2375913_Range16(697LLU,735LLU,1LLU),_1d2375913_Range16(741LLU,745LLU,1LLU),_1d2375913_Range16(748LLU,767LLU,1LLU),_1d2375913_Range16(884LLU,894LLU,10LLU),_1d2375913_Range16(901LLU,903LLU,2LLU),_1d2375913_Range16(1541LLU,1548LLU,7LLU),_1d2375913_Range16(1563LLU,1567LLU,4LLU),_1d2375913_Range16(1600LLU,1757LLU,157LLU),_1d2375913_Range16(2274LLU,2404LLU,130LLU),_1d2375913_Range16(2405LLU,3647LLU,1242LLU),_1d2375913_Range16(4053LLU,4056LLU,1LLU),_1d2375913_Range16(4347LLU,5867LLU,1520LLU),_1d2375913_Range16(5868LLU,5869LLU,1LLU),_1d2375913_Range16(5941LLU,5942LLU,1LLU),_1d2375913_Range16(6146LLU,6147LLU,1LLU),_1d2375913_Range16(6149LLU,7379LLU,1230LLU),_1d2375913_Range16(7393LLU,7401LLU,8LLU),_1d2375913_Range16(7402LLU,7404LLU,1LLU),_1d2375913_Range16(7406LLU,7411LLU,1LLU),_1d2375913_Range16(7413LLU,7415LLU,1LLU),_1d2375913_Range16(7418LLU,8192LLU,774LLU),_1d2375913_Range16(8193LLU,8203LLU,1LLU),_1d2375913_Range16(8206LLU,8292LLU,1LLU),_1d2375913_Range16(8294LLU,8304LLU,1LLU),_1d2375913_Range16(8308LLU,8318LLU,1LLU),_1d2375913_Range16(8320LLU,8334LLU,1LLU),_1d2375913_Range16(8352LLU,8384LLU,1LLU),_1d2375913_Range16(8448LLU,8485LLU,1LLU),_1d2375913_Range16(8487LLU,8489LLU,1LLU),_1d2375913_Range16(8492LLU,8497LLU,1LLU),_1d2375913_Range16(8499LLU,8525LLU,1LLU),_1d2375913_Range16(8527LLU,8543LLU,1LLU),_1d2375913_Range16(8585LLU,8587LLU,1LLU),_1d2375913_Range16(8592LLU,9254LLU,1LLU),_1d2375913_Range16(9280LLU,9290LLU,1LLU),_1d2375913_Range16(9312LLU,10239LLU,1LLU),_1d2375913_Range16(10496LLU,11123LLU,1LLU),_1d2375913_Range16(11126LLU,11157LLU,1LLU),_1d2375913_Range16(11159LLU,11263LLU,1LLU),_1d2375913_Range16(11776LLU,11869LLU,1LLU),_1d2375913_Range16(12272LLU,12283LLU,1LLU),_1d2375913_Range16(12288LLU,12292LLU,1LLU),_1d2375913_Range16(12294LLU,12296LLU,2LLU),_1d2375913_Range16(12297LLU,12320LLU,1LLU),_1d2375913_Range16(12336LLU,12343LLU,1LLU),_1d2375913_Range16(12348LLU,12351LLU,1LLU),_1d2375913_Range16(12443LLU,12444LLU,1LLU),_1d2375913_Range16(12448LLU,12539LLU,91LLU),_1d2375913_Range16(12540LLU,12688LLU,148LLU),_1d2375913_Range16(12689LLU,12703LLU,1LLU),_1d2375913_Range16(12736LLU,12771LLU,1LLU),_1d2375913_Range16(12832LLU,12895LLU,1LLU),_1d2375913_Range16(12927LLU,13007LLU,1LLU),_1d2375913_Range16(13055LLU,13144LLU,89LLU),_1d2375913_Range16(13145LLU,13311LLU,1LLU),_1d2375913_Range16(19904LLU,19967LLU,1LLU),_1d2375913_Range16(42752LLU,42785LLU,1LLU),_1d2375913_Range16(42888LLU,42890LLU,1LLU),_1d2375913_Range16(43056LLU,43065LLU,1LLU),_1d2375913_Range16(43310LLU,43471LLU,161LLU),_1d2375913_Range16(43867LLU,43882LLU,15LLU),_1d2375913_Range16(43883LLU,64830LLU,20947LLU),_1d2375913_Range16(64831LLU,65040LLU,209LLU),_1d2375913_Range16(65041LLU,65049LLU,1LLU),_1d2375913_Range16(65072LLU,65106LLU,1LLU),_1d2375913_Range16(65108LLU,65126LLU,1LLU),_1d2375913_Range16(65128LLU,65131LLU,1LLU),_1d2375913_Range16(65279LLU,65281LLU,2LLU),_1d2375913_Range16(65282LLU,65312LLU,1LLU),_1d2375913_Range16(65339LLU,65344LLU,1LLU),_1d2375913_Range16(65371LLU,65381LLU,1LLU),_1d2375913_Range16(65392LLU,65438LLU,46LLU),_1d2375913_Range16(65439LLU,65504LLU,65LLU),_1d2375913_Range16(65505LLU,65510LLU,1LLU),_1d2375913_Range16(65512LLU,65518LLU,1LLU),_1d2375913_Range16(65529LLU,65533LLU,1LLU)}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(65792LLU,65794LLU,1LLU),_1d2375913_Range32(65799LLU,65843LLU,1LLU),_1d2375913_Range32(65847LLU,65855LLU,1LLU),_1d2375913_Range32(65936LLU,65948LLU,1LLU),_1d2375913_Range32(66000LLU,66044LLU,1LLU),_1d2375913_Range32(66273LLU,66299LLU,1LLU),_1d2375913_Range32(113824LLU,113827LLU,1LLU),_1d2375913_Range32(118608LLU,118723LLU,1LLU),_1d2375913_Range32(118784LLU,119029LLU,1LLU),_1d2375913_Range32(119040LLU,119078LLU,1LLU),_1d2375913_Range32(119081LLU,119142LLU,1LLU),_1d2375913_Range32(119146LLU,119162LLU,1LLU),_1d2375913_Range32(119171LLU,119172LLU,1LLU),_1d2375913_Range32(119180LLU,119209LLU,1LLU),_1d2375913_Range32(119214LLU,119274LLU,1LLU),_1d2375913_Range32(119488LLU,119507LLU,1LLU),_1d2375913_Range32(119520LLU,119539LLU,1LLU),_1d2375913_Range32(119552LLU,119638LLU,1LLU),_1d2375913_Range32(119648LLU,119672LLU,1LLU),_1d2375913_Range32(119808LLU,119892LLU,1LLU),_1d2375913_Range32(119894LLU,119964LLU,1LLU),_1d2375913_Range32(119966LLU,119967LLU,1LLU),_1d2375913_Range32(119970LLU,119973LLU,3LLU),_1d2375913_Range32(119974LLU,119977LLU,3LLU),_1d2375913_Range32(119978LLU,119980LLU,1LLU),_1d2375913_Range32(119982LLU,119993LLU,1LLU),_1d2375913_Range32(119995LLU,119997LLU,2LLU),_1d2375913_Range32(119998LLU,120003LLU,1LLU),_1d2375913_Range32(120005LLU,120069LLU,1LLU),_1d2375913_Range32(120071LLU,120074LLU,1LLU),_1d2375913_Range32(120077LLU,120084LLU,1LLU),_1d2375913_Range32(120086LLU,120092LLU,1LLU),_1d2375913_Range32(120094LLU,120121LLU,1LLU),_1d2375913_Range32(120123LLU,120126LLU,1LLU),_1d2375913_Range32(120128LLU,120132LLU,1LLU),_1d2375913_Range32(120134LLU,120138LLU,4LLU),_1d2375913_Range32(120139LLU,120144LLU,1LLU),_1d2375913_Range32(120146LLU,120485LLU,1LLU),_1d2375913_Range32(120488LLU,120779LLU,1LLU),_1d2375913_Range32(120782LLU,120831LLU,1LLU),_1d2375913_Range32(126065LLU,126132LLU,1LLU),_1d2375913_Range32(126209LLU,126269LLU,1LLU),_1d2375913_Range32(126976LLU,127019LLU,1LLU),_1d2375913_Range32(127024LLU,127123LLU,1LLU),_1d2375913_Range32(127136LLU,127150LLU,1LLU),_1d2375913_Range32(127153LLU,127167LLU,1LLU),_1d2375913_Range32(127169LLU,127183LLU,1LLU),_1d2375913_Range32(127185LLU,127221LLU,1LLU),_1d2375913_Range32(127232LLU,127405LLU,1LLU),_1d2375913_Range32(127462LLU,127487LLU,1LLU),_1d2375913_Range32(127489LLU,127490LLU,1LLU),_1d2375913_Range32(127504LLU,127547LLU,1LLU),_1d2375913_Range32(127552LLU,127560LLU,1LLU),_1d2375913_Range32(127568LLU,127569LLU,1LLU),_1d2375913_Range32(127584LLU,127589LLU,1LLU),_1d2375913_Range32(127744LLU,128727LLU,1LLU),_1d2375913_Range32(128732LLU,128748LLU,1LLU),_1d2375913_Range32(128752LLU,128764LLU,1LLU),_1d2375913_Range32(128768LLU,128886LLU,1LLU),_1d2375913_Range32(128891LLU,128985LLU,1LLU),_1d2375913_Range32(128992LLU,129003LLU,1LLU),_1d2375913_Range32(129008LLU,129024LLU,16LLU),_1d2375913_Range32(129025LLU,129035LLU,1LLU),_1d2375913_Range32(129040LLU,129095LLU,1LLU),_1d2375913_Range32(129104LLU,129113LLU,1LLU),_1d2375913_Range32(129120LLU,129159LLU,1LLU),_1d2375913_Range32(129168LLU,129197LLU,1LLU),_1d2375913_Range32(129200LLU,129201LLU,1LLU),_1d2375913_Range32(129280LLU,129619LLU,1LLU),_1d2375913_Range32(129632LLU,129645LLU,1LLU),_1d2375913_Range32(129648LLU,129660LLU,1LLU),_1d2375913_Range32(129664LLU,129672LLU,1LLU),_1d2375913_Range32(129680LLU,129725LLU,1LLU),_1d2375913_Range32(129727LLU,129733LLU,1LLU),_1d2375913_Range32(129742LLU,129755LLU,1LLU),_1d2375913_Range32(129760LLU,129768LLU,1LLU),_1d2375913_Range32(129776LLU,129784LLU,1LLU),_1d2375913_Range32(129792LLU,129938LLU,1LLU),_1d2375913_Range32(129940LLU,129994LLU,1LLU),_1d2375913_Range32(130032LLU,130041LLU,1LLU),_1d2375913_Range32(917505LLU,917536LLU,31LLU),_1d2375913_Range32(917537LLU,917631LLU,1LLU)}),6LL));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__COPTIC = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(994LLU,1007LLU,1LLU),_1d2375913_Range16(11392LLU,11507LLU,1LLU),_1d2375913_Range16(11513LLU,11519LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__CUNEIFORM = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(73728LLU,74649LLU,1LLU),_1d2375913_Range32(74752LLU,74862LLU,1LLU),_1d2375913_Range32(74864LLU,74868LLU,1LLU),_1d2375913_Range32(74880LLU,75075LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__CYPRIOT = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(67584LLU,67589LLU,1LLU),_1d2375913_Range32(67592LLU,67594LLU,2LLU),_1d2375913_Range32(67595LLU,67637LLU,1LLU),_1d2375913_Range32(67639LLU,67640LLU,1LLU),_1d2375913_Range32(67644LLU,67647LLU,3LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__CYPRO_MINOAN = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(77712LLU,77810LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__CYRILLIC = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(1024LLU,1156LLU,1LLU),_1d2375913_Range16(1159LLU,1327LLU,1LLU),_1d2375913_Range16(7296LLU,7304LLU,1LLU),_1d2375913_Range16(7467LLU,7544LLU,77LLU),_1d2375913_Range16(11744LLU,11775LLU,1LLU),_1d2375913_Range16(42560LLU,42655LLU,1LLU),_1d2375913_Range16(65070LLU,65071LLU,1LLU)}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(122928LLU,122989LLU,1LLU),_1d2375913_Range32(123023LLU,123023LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__DESERET = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(66560LLU,66639LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__DEVANAGARI = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(2304LLU,2384LLU,1LLU),_1d2375913_Range16(2389LLU,2403LLU,1LLU),_1d2375913_Range16(2406LLU,2431LLU,1LLU),_1d2375913_Range16(43232LLU,43263LLU,1LLU)}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(72448LLU,72457LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__DIVES_AKURU = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(71936LLU,71942LLU,1LLU),_1d2375913_Range32(71945LLU,71948LLU,3LLU),_1d2375913_Range32(71949LLU,71955LLU,1LLU),_1d2375913_Range32(71957LLU,71958LLU,1LLU),_1d2375913_Range32(71960LLU,71989LLU,1LLU),_1d2375913_Range32(71991LLU,71992LLU,1LLU),_1d2375913_Range32(71995LLU,72006LLU,1LLU),_1d2375913_Range32(72016LLU,72025LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__DOGRA = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(71680LLU,71739LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__DUPLOYAN = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(113664LLU,113770LLU,1LLU),_1d2375913_Range32(113776LLU,113788LLU,1LLU),_1d2375913_Range32(113792LLU,113800LLU,1LLU),_1d2375913_Range32(113808LLU,113817LLU,1LLU),_1d2375913_Range32(113820LLU,113823LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__EGYPTIAN_HIEROGLYPHS = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(77824LLU,78933LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__ELBASAN = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(66816LLU,66855LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__ELYMAIC = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(69600LLU,69622LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__ETHIOPIC = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(4608LLU,4680LLU,1LLU),_1d2375913_Range16(4682LLU,4685LLU,1LLU),_1d2375913_Range16(4688LLU,4694LLU,1LLU),_1d2375913_Range16(4696LLU,4698LLU,2LLU),_1d2375913_Range16(4699LLU,4701LLU,1LLU),_1d2375913_Range16(4704LLU,4744LLU,1LLU),_1d2375913_Range16(4746LLU,4749LLU,1LLU),_1d2375913_Range16(4752LLU,4784LLU,1LLU),_1d2375913_Range16(4786LLU,4789LLU,1LLU),_1d2375913_Range16(4792LLU,4798LLU,1LLU),_1d2375913_Range16(4800LLU,4802LLU,2LLU),_1d2375913_Range16(4803LLU,4805LLU,1LLU),_1d2375913_Range16(4808LLU,4822LLU,1LLU),_1d2375913_Range16(4824LLU,4880LLU,1LLU),_1d2375913_Range16(4882LLU,4885LLU,1LLU),_1d2375913_Range16(4888LLU,4954LLU,1LLU),_1d2375913_Range16(4957LLU,4988LLU,1LLU),_1d2375913_Range16(4992LLU,5017LLU,1LLU),_1d2375913_Range16(11648LLU,11670LLU,1LLU),_1d2375913_Range16(11680LLU,11686LLU,1LLU),_1d2375913_Range16(11688LLU,11694LLU,1LLU),_1d2375913_Range16(11696LLU,11702LLU,1LLU),_1d2375913_Range16(11704LLU,11710LLU,1LLU),_1d2375913_Range16(11712LLU,11718LLU,1LLU),_1d2375913_Range16(11720LLU,11726LLU,1LLU),_1d2375913_Range16(11728LLU,11734LLU,1LLU),_1d2375913_Range16(11736LLU,11742LLU,1LLU),_1d2375913_Range16(43777LLU,43782LLU,1LLU),_1d2375913_Range16(43785LLU,43790LLU,1LLU),_1d2375913_Range16(43793LLU,43798LLU,1LLU),_1d2375913_Range16(43808LLU,43814LLU,1LLU),_1d2375913_Range16(43816LLU,43822LLU,1LLU)}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(124896LLU,124902LLU,1LLU),_1d2375913_Range32(124904LLU,124907LLU,1LLU),_1d2375913_Range32(124909LLU,124910LLU,1LLU),_1d2375913_Range32(124912LLU,124926LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__GEORGIAN = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(4256LLU,4293LLU,1LLU),_1d2375913_Range16(4295LLU,4301LLU,6LLU),_1d2375913_Range16(4304LLU,4346LLU,1LLU),_1d2375913_Range16(4348LLU,4351LLU,1LLU),_1d2375913_Range16(7312LLU,7354LLU,1LLU),_1d2375913_Range16(7357LLU,7359LLU,1LLU),_1d2375913_Range16(11520LLU,11557LLU,1LLU),_1d2375913_Range16(11559LLU,11565LLU,6LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__GLAGOLITIC = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(11264LLU,11359LLU,1LLU)}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(122880LLU,122886LLU,1LLU),_1d2375913_Range32(122888LLU,122904LLU,1LLU),_1d2375913_Range32(122907LLU,122913LLU,1LLU),_1d2375913_Range32(122915LLU,122916LLU,1LLU),_1d2375913_Range32(122918LLU,122922LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__GOTHIC = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(66352LLU,66378LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__GRANTHA = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(70400LLU,70403LLU,1LLU),_1d2375913_Range32(70405LLU,70412LLU,1LLU),_1d2375913_Range32(70415LLU,70416LLU,1LLU),_1d2375913_Range32(70419LLU,70440LLU,1LLU),_1d2375913_Range32(70442LLU,70448LLU,1LLU),_1d2375913_Range32(70450LLU,70451LLU,1LLU),_1d2375913_Range32(70453LLU,70457LLU,1LLU),_1d2375913_Range32(70460LLU,70468LLU,1LLU),_1d2375913_Range32(70471LLU,70472LLU,1LLU),_1d2375913_Range32(70475LLU,70477LLU,1LLU),_1d2375913_Range32(70480LLU,70487LLU,7LLU),_1d2375913_Range32(70493LLU,70499LLU,1LLU),_1d2375913_Range32(70502LLU,70508LLU,1LLU),_1d2375913_Range32(70512LLU,70516LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__GREEK = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(880LLU,883LLU,1LLU),_1d2375913_Range16(885LLU,887LLU,1LLU),_1d2375913_Range16(890LLU,893LLU,1LLU),_1d2375913_Range16(895LLU,900LLU,5LLU),_1d2375913_Range16(902LLU,904LLU,2LLU),_1d2375913_Range16(905LLU,906LLU,1LLU),_1d2375913_Range16(908LLU,910LLU,2LLU),_1d2375913_Range16(911LLU,929LLU,1LLU),_1d2375913_Range16(931LLU,993LLU,1LLU),_1d2375913_Range16(1008LLU,1023LLU,1LLU),_1d2375913_Range16(7462LLU,7466LLU,1LLU),_1d2375913_Range16(7517LLU,7521LLU,1LLU),_1d2375913_Range16(7526LLU,7530LLU,1LLU),_1d2375913_Range16(7615LLU,7936LLU,321LLU),_1d2375913_Range16(7937LLU,7957LLU,1LLU),_1d2375913_Range16(7960LLU,7965LLU,1LLU),_1d2375913_Range16(7968LLU,8005LLU,1LLU),_1d2375913_Range16(8008LLU,8013LLU,1LLU),_1d2375913_Range16(8016LLU,8023LLU,1LLU),_1d2375913_Range16(8025LLU,8031LLU,2LLU),_1d2375913_Range16(8032LLU,8061LLU,1LLU),_1d2375913_Range16(8064LLU,8116LLU,1LLU),_1d2375913_Range16(8118LLU,8132LLU,1LLU),_1d2375913_Range16(8134LLU,8147LLU,1LLU),_1d2375913_Range16(8150LLU,8155LLU,1LLU),_1d2375913_Range16(8157LLU,8175LLU,1LLU),_1d2375913_Range16(8178LLU,8180LLU,1LLU),_1d2375913_Range16(8182LLU,8190LLU,1LLU),_1d2375913_Range16(8486LLU,43877LLU,35391LLU)}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(65856LLU,65934LLU,1LLU),_1d2375913_Range32(65952LLU,119296LLU,53344LLU),_1d2375913_Range32(119297LLU,119365LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__GUJARATI = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(2689LLU,2691LLU,1LLU),_1d2375913_Range16(2693LLU,2701LLU,1LLU),_1d2375913_Range16(2703LLU,2705LLU,1LLU),_1d2375913_Range16(2707LLU,2728LLU,1LLU),_1d2375913_Range16(2730LLU,2736LLU,1LLU),_1d2375913_Range16(2738LLU,2739LLU,1LLU),_1d2375913_Range16(2741LLU,2745LLU,1LLU),_1d2375913_Range16(2748LLU,2757LLU,1LLU),_1d2375913_Range16(2759LLU,2761LLU,1LLU),_1d2375913_Range16(2763LLU,2765LLU,1LLU),_1d2375913_Range16(2768LLU,2784LLU,16LLU),_1d2375913_Range16(2785LLU,2787LLU,1LLU),_1d2375913_Range16(2790LLU,2801LLU,1LLU),_1d2375913_Range16(2809LLU,2815LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__GUNJALA_GONDI = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(73056LLU,73061LLU,1LLU),_1d2375913_Range32(73063LLU,73064LLU,1LLU),_1d2375913_Range32(73066LLU,73102LLU,1LLU),_1d2375913_Range32(73104LLU,73105LLU,1LLU),_1d2375913_Range32(73107LLU,73112LLU,1LLU),_1d2375913_Range32(73120LLU,73129LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__GURMUKHI = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(2561LLU,2563LLU,1LLU),_1d2375913_Range16(2565LLU,2570LLU,1LLU),_1d2375913_Range16(2575LLU,2576LLU,1LLU),_1d2375913_Range16(2579LLU,2600LLU,1LLU),_1d2375913_Range16(2602LLU,2608LLU,1LLU),_1d2375913_Range16(2610LLU,2611LLU,1LLU),_1d2375913_Range16(2613LLU,2614LLU,1LLU),_1d2375913_Range16(2616LLU,2617LLU,1LLU),_1d2375913_Range16(2620LLU,2622LLU,2LLU),_1d2375913_Range16(2623LLU,2626LLU,1LLU),_1d2375913_Range16(2631LLU,2632LLU,1LLU),_1d2375913_Range16(2635LLU,2637LLU,1LLU),_1d2375913_Range16(2641LLU,2649LLU,8LLU),_1d2375913_Range16(2650LLU,2652LLU,1LLU),_1d2375913_Range16(2654LLU,2662LLU,8LLU),_1d2375913_Range16(2663LLU,2678LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__HAN = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(11904LLU,11929LLU,1LLU),_1d2375913_Range16(11931LLU,12019LLU,1LLU),_1d2375913_Range16(12032LLU,12245LLU,1LLU),_1d2375913_Range16(12293LLU,12295LLU,2LLU),_1d2375913_Range16(12321LLU,12329LLU,1LLU),_1d2375913_Range16(12344LLU,12347LLU,1LLU),_1d2375913_Range16(13312LLU,19903LLU,1LLU),_1d2375913_Range16(19968LLU,40959LLU,1LLU),_1d2375913_Range16(63744LLU,64109LLU,1LLU),_1d2375913_Range16(64112LLU,64217LLU,1LLU)}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(94178LLU,94179LLU,1LLU),_1d2375913_Range32(94192LLU,94193LLU,1LLU),_1d2375913_Range32(131072LLU,173791LLU,1LLU),_1d2375913_Range32(173824LLU,177977LLU,1LLU),_1d2375913_Range32(177984LLU,178205LLU,1LLU),_1d2375913_Range32(178208LLU,183969LLU,1LLU),_1d2375913_Range32(183984LLU,191456LLU,1LLU),_1d2375913_Range32(194560LLU,195101LLU,1LLU),_1d2375913_Range32(196608LLU,201546LLU,1LLU),_1d2375913_Range32(201552LLU,205743LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__HANGUL = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(4352LLU,4607LLU,1LLU),_1d2375913_Range16(12334LLU,12335LLU,1LLU),_1d2375913_Range16(12593LLU,12686LLU,1LLU),_1d2375913_Range16(12800LLU,12830LLU,1LLU),_1d2375913_Range16(12896LLU,12926LLU,1LLU),_1d2375913_Range16(43360LLU,43388LLU,1LLU),_1d2375913_Range16(44032LLU,55203LLU,1LLU),_1d2375913_Range16(55216LLU,55238LLU,1LLU),_1d2375913_Range16(55243LLU,55291LLU,1LLU),_1d2375913_Range16(65440LLU,65470LLU,1LLU),_1d2375913_Range16(65474LLU,65479LLU,1LLU),_1d2375913_Range16(65482LLU,65487LLU,1LLU),_1d2375913_Range16(65490LLU,65495LLU,1LLU),_1d2375913_Range16(65498LLU,65500LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__HANIFI_ROHINGYA = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(68864LLU,68903LLU,1LLU),_1d2375913_Range32(68912LLU,68921LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__HANUNOO = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(5920LLU,5940LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__HATRAN = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(67808LLU,67826LLU,1LLU),_1d2375913_Range32(67828LLU,67829LLU,1LLU),_1d2375913_Range32(67835LLU,67839LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__HEBREW = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(1425LLU,1479LLU,1LLU),_1d2375913_Range16(1488LLU,1514LLU,1LLU),_1d2375913_Range16(1519LLU,1524LLU,1LLU),_1d2375913_Range16(64285LLU,64310LLU,1LLU),_1d2375913_Range16(64312LLU,64316LLU,1LLU),_1d2375913_Range16(64318LLU,64320LLU,2LLU),_1d2375913_Range16(64321LLU,64323LLU,2LLU),_1d2375913_Range16(64324LLU,64326LLU,2LLU),_1d2375913_Range16(64327LLU,64335LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__HIRAGANA = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(12353LLU,12438LLU,1LLU),_1d2375913_Range16(12445LLU,12447LLU,1LLU)}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(110593LLU,110879LLU,1LLU),_1d2375913_Range32(110898LLU,110928LLU,30LLU),_1d2375913_Range32(110929LLU,110930LLU,1LLU),_1d2375913_Range32(127488LLU,127488LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__IMPERIAL_ARAMAIC = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(67648LLU,67669LLU,1LLU),_1d2375913_Range32(67671LLU,67679LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__INHERITED = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(768LLU,879LLU,1LLU),_1d2375913_Range16(1157LLU,1158LLU,1LLU),_1d2375913_Range16(1611LLU,1621LLU,1LLU),_1d2375913_Range16(1648LLU,2385LLU,737LLU),_1d2375913_Range16(2386LLU,2388LLU,1LLU),_1d2375913_Range16(6832LLU,6862LLU,1LLU),_1d2375913_Range16(7376LLU,7378LLU,1LLU),_1d2375913_Range16(7380LLU,7392LLU,1LLU),_1d2375913_Range16(7394LLU,7400LLU,1LLU),_1d2375913_Range16(7405LLU,7412LLU,7LLU),_1d2375913_Range16(7416LLU,7417LLU,1LLU),_1d2375913_Range16(7616LLU,7679LLU,1LLU),_1d2375913_Range16(8204LLU,8205LLU,1LLU),_1d2375913_Range16(8400LLU,8432LLU,1LLU),_1d2375913_Range16(12330LLU,12333LLU,1LLU),_1d2375913_Range16(12441LLU,12442LLU,1LLU),_1d2375913_Range16(65024LLU,65039LLU,1LLU),_1d2375913_Range16(65056LLU,65069LLU,1LLU)}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(66045LLU,66272LLU,227LLU),_1d2375913_Range32(70459LLU,118528LLU,48069LLU),_1d2375913_Range32(118529LLU,118573LLU,1LLU),_1d2375913_Range32(118576LLU,118598LLU,1LLU),_1d2375913_Range32(119143LLU,119145LLU,1LLU),_1d2375913_Range32(119163LLU,119170LLU,1LLU),_1d2375913_Range32(119173LLU,119179LLU,1LLU),_1d2375913_Range32(119210LLU,119213LLU,1LLU),_1d2375913_Range32(917760LLU,917999LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__INSCRIPTIONAL_PAHLAVI = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(68448LLU,68466LLU,1LLU),_1d2375913_Range32(68472LLU,68479LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__INSCRIPTIONAL_PARTHIAN = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(68416LLU,68437LLU,1LLU),_1d2375913_Range32(68440LLU,68447LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__JAVANESE = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(43392LLU,43469LLU,1LLU),_1d2375913_Range16(43472LLU,43481LLU,1LLU),_1d2375913_Range16(43486LLU,43487LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__KAITHI = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(69760LLU,69826LLU,1LLU),_1d2375913_Range32(69837LLU,69837LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__KANNADA = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(3200LLU,3212LLU,1LLU),_1d2375913_Range16(3214LLU,3216LLU,1LLU),_1d2375913_Range16(3218LLU,3240LLU,1LLU),_1d2375913_Range16(3242LLU,3251LLU,1LLU),_1d2375913_Range16(3253LLU,3257LLU,1LLU),_1d2375913_Range16(3260LLU,3268LLU,1LLU),_1d2375913_Range16(3270LLU,3272LLU,1LLU),_1d2375913_Range16(3274LLU,3277LLU,1LLU),_1d2375913_Range16(3285LLU,3286LLU,1LLU),_1d2375913_Range16(3293LLU,3294LLU,1LLU),_1d2375913_Range16(3296LLU,3299LLU,1LLU),_1d2375913_Range16(3302LLU,3311LLU,1LLU),_1d2375913_Range16(3313LLU,3315LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__KATAKANA = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(12449LLU,12538LLU,1LLU),_1d2375913_Range16(12541LLU,12543LLU,1LLU),_1d2375913_Range16(12784LLU,12799LLU,1LLU),_1d2375913_Range16(13008LLU,13054LLU,1LLU),_1d2375913_Range16(13056LLU,13143LLU,1LLU),_1d2375913_Range16(65382LLU,65391LLU,1LLU),_1d2375913_Range16(65393LLU,65437LLU,1LLU)}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(110576LLU,110579LLU,1LLU),_1d2375913_Range32(110581LLU,110587LLU,1LLU),_1d2375913_Range32(110589LLU,110590LLU,1LLU),_1d2375913_Range32(110592LLU,110880LLU,288LLU),_1d2375913_Range32(110881LLU,110882LLU,1LLU),_1d2375913_Range32(110933LLU,110948LLU,15LLU),_1d2375913_Range32(110949LLU,110951LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__KAWI = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(73472LLU,73488LLU,1LLU),_1d2375913_Range32(73490LLU,73530LLU,1LLU),_1d2375913_Range32(73534LLU,73561LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__KAYAH_LI = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(43264LLU,43309LLU,1LLU),_1d2375913_Range16(43311LLU,43311LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__KHAROSHTHI = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(68096LLU,68099LLU,1LLU),_1d2375913_Range32(68101LLU,68102LLU,1LLU),_1d2375913_Range32(68108LLU,68115LLU,1LLU),_1d2375913_Range32(68117LLU,68119LLU,1LLU),_1d2375913_Range32(68121LLU,68149LLU,1LLU),_1d2375913_Range32(68152LLU,68154LLU,1LLU),_1d2375913_Range32(68159LLU,68168LLU,1LLU),_1d2375913_Range32(68176LLU,68184LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__KHITAN_SMALL_SCRIPT = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(94180LLU,101120LLU,6940LLU),_1d2375913_Range32(101121LLU,101589LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__KHMER = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(6016LLU,6109LLU,1LLU),_1d2375913_Range16(6112LLU,6121LLU,1LLU),_1d2375913_Range16(6128LLU,6137LLU,1LLU),_1d2375913_Range16(6624LLU,6655LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__KHOJKI = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(70144LLU,70161LLU,1LLU),_1d2375913_Range32(70163LLU,70209LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__KHUDAWADI = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(70320LLU,70378LLU,1LLU),_1d2375913_Range32(70384LLU,70393LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__LAO = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(3713LLU,3714LLU,1LLU),_1d2375913_Range16(3716LLU,3718LLU,2LLU),_1d2375913_Range16(3719LLU,3722LLU,1LLU),_1d2375913_Range16(3724LLU,3747LLU,1LLU),_1d2375913_Range16(3749LLU,3751LLU,2LLU),_1d2375913_Range16(3752LLU,3773LLU,1LLU),_1d2375913_Range16(3776LLU,3780LLU,1LLU),_1d2375913_Range16(3782LLU,3784LLU,2LLU),_1d2375913_Range16(3785LLU,3790LLU,1LLU),_1d2375913_Range16(3792LLU,3801LLU,1LLU),_1d2375913_Range16(3804LLU,3807LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__LATIN = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(65LLU,90LLU,1LLU),_1d2375913_Range16(97LLU,122LLU,1LLU),_1d2375913_Range16(170LLU,186LLU,16LLU),_1d2375913_Range16(192LLU,214LLU,1LLU),_1d2375913_Range16(216LLU,246LLU,1LLU),_1d2375913_Range16(248LLU,696LLU,1LLU),_1d2375913_Range16(736LLU,740LLU,1LLU),_1d2375913_Range16(7424LLU,7461LLU,1LLU),_1d2375913_Range16(7468LLU,7516LLU,1LLU),_1d2375913_Range16(7522LLU,7525LLU,1LLU),_1d2375913_Range16(7531LLU,7543LLU,1LLU),_1d2375913_Range16(7545LLU,7614LLU,1LLU),_1d2375913_Range16(7680LLU,7935LLU,1LLU),_1d2375913_Range16(8305LLU,8319LLU,14LLU),_1d2375913_Range16(8336LLU,8348LLU,1LLU),_1d2375913_Range16(8490LLU,8491LLU,1LLU),_1d2375913_Range16(8498LLU,8526LLU,28LLU),_1d2375913_Range16(8544LLU,8584LLU,1LLU),_1d2375913_Range16(11360LLU,11391LLU,1LLU),_1d2375913_Range16(42786LLU,42887LLU,1LLU),_1d2375913_Range16(42891LLU,42954LLU,1LLU),_1d2375913_Range16(42960LLU,42961LLU,1LLU),_1d2375913_Range16(42963LLU,42965LLU,2LLU),_1d2375913_Range16(42966LLU,42969LLU,1LLU),_1d2375913_Range16(42994LLU,43007LLU,1LLU),_1d2375913_Range16(43824LLU,43866LLU,1LLU),_1d2375913_Range16(43868LLU,43876LLU,1LLU),_1d2375913_Range16(43878LLU,43881LLU,1LLU),_1d2375913_Range16(64256LLU,64262LLU,1LLU),_1d2375913_Range16(65313LLU,65338LLU,1LLU),_1d2375913_Range16(65345LLU,65370LLU,1LLU)}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(67456LLU,67461LLU,1LLU),_1d2375913_Range32(67463LLU,67504LLU,1LLU),_1d2375913_Range32(67506LLU,67514LLU,1LLU),_1d2375913_Range32(122624LLU,122654LLU,1LLU),_1d2375913_Range32(122661LLU,122666LLU,1LLU)}),5LL));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__LEPCHA = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(7168LLU,7223LLU,1LLU),_1d2375913_Range16(7227LLU,7241LLU,1LLU),_1d2375913_Range16(7245LLU,7247LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__LIMBU = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(6400LLU,6430LLU,1LLU),_1d2375913_Range16(6432LLU,6443LLU,1LLU),_1d2375913_Range16(6448LLU,6459LLU,1LLU),_1d2375913_Range16(6464LLU,6468LLU,4LLU),_1d2375913_Range16(6469LLU,6479LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__LINEAR_A = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(67072LLU,67382LLU,1LLU),_1d2375913_Range32(67392LLU,67413LLU,1LLU),_1d2375913_Range32(67424LLU,67431LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__LINEAR_B = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(65536LLU,65547LLU,1LLU),_1d2375913_Range32(65549LLU,65574LLU,1LLU),_1d2375913_Range32(65576LLU,65594LLU,1LLU),_1d2375913_Range32(65596LLU,65597LLU,1LLU),_1d2375913_Range32(65599LLU,65613LLU,1LLU),_1d2375913_Range32(65616LLU,65629LLU,1LLU),_1d2375913_Range32(65664LLU,65786LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__LISU = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(42192LLU,42239LLU,1LLU)}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(73648LLU,73648LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__LYCIAN = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(66176LLU,66204LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__LYDIAN = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(67872LLU,67897LLU,1LLU),_1d2375913_Range32(67903LLU,67903LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__MAHAJANI = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(69968LLU,70006LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__MAKASAR = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(73440LLU,73464LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__MALAYALAM = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(3328LLU,3340LLU,1LLU),_1d2375913_Range16(3342LLU,3344LLU,1LLU),_1d2375913_Range16(3346LLU,3396LLU,1LLU),_1d2375913_Range16(3398LLU,3400LLU,1LLU),_1d2375913_Range16(3402LLU,3407LLU,1LLU),_1d2375913_Range16(3412LLU,3427LLU,1LLU),_1d2375913_Range16(3430LLU,3455LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__MANDAIC = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(2112LLU,2139LLU,1LLU),_1d2375913_Range16(2142LLU,2142LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__MANICHAEAN = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(68288LLU,68326LLU,1LLU),_1d2375913_Range32(68331LLU,68342LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__MARCHEN = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(72816LLU,72847LLU,1LLU),_1d2375913_Range32(72850LLU,72871LLU,1LLU),_1d2375913_Range32(72873LLU,72886LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__MASARAM_GONDI = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(72960LLU,72966LLU,1LLU),_1d2375913_Range32(72968LLU,72969LLU,1LLU),_1d2375913_Range32(72971LLU,73014LLU,1LLU),_1d2375913_Range32(73018LLU,73020LLU,2LLU),_1d2375913_Range32(73021LLU,73023LLU,2LLU),_1d2375913_Range32(73024LLU,73031LLU,1LLU),_1d2375913_Range32(73040LLU,73049LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__MEDEFAIDRIN = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(93760LLU,93850LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__MEETEI_MAYEK = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(43744LLU,43766LLU,1LLU),_1d2375913_Range16(43968LLU,44013LLU,1LLU),_1d2375913_Range16(44016LLU,44025LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__MENDE_KIKAKUI = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(124928LLU,125124LLU,1LLU),_1d2375913_Range32(125127LLU,125142LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__MEROITIC_CURSIVE = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(68000LLU,68023LLU,1LLU),_1d2375913_Range32(68028LLU,68047LLU,1LLU),_1d2375913_Range32(68050LLU,68095LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__MEROITIC_HIEROGLYPHS = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(67968LLU,67999LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__MIAO = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(93952LLU,94026LLU,1LLU),_1d2375913_Range32(94031LLU,94087LLU,1LLU),_1d2375913_Range32(94095LLU,94111LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__MODI = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(71168LLU,71236LLU,1LLU),_1d2375913_Range32(71248LLU,71257LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__MONGOLIAN = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(6144LLU,6145LLU,1LLU),_1d2375913_Range16(6148LLU,6150LLU,2LLU),_1d2375913_Range16(6151LLU,6169LLU,1LLU),_1d2375913_Range16(6176LLU,6264LLU,1LLU),_1d2375913_Range16(6272LLU,6314LLU,1LLU)}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(71264LLU,71276LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__MRO = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(92736LLU,92766LLU,1LLU),_1d2375913_Range32(92768LLU,92777LLU,1LLU),_1d2375913_Range32(92782LLU,92783LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__MULTANI = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(70272LLU,70278LLU,1LLU),_1d2375913_Range32(70280LLU,70282LLU,2LLU),_1d2375913_Range32(70283LLU,70285LLU,1LLU),_1d2375913_Range32(70287LLU,70301LLU,1LLU),_1d2375913_Range32(70303LLU,70313LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__MYANMAR = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(4096LLU,4255LLU,1LLU),_1d2375913_Range16(43488LLU,43518LLU,1LLU),_1d2375913_Range16(43616LLU,43647LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__NABATAEAN = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(67712LLU,67742LLU,1LLU),_1d2375913_Range32(67751LLU,67759LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__NAG_MUNDARI = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(124112LLU,124153LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__NANDINAGARI = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(72096LLU,72103LLU,1LLU),_1d2375913_Range32(72106LLU,72151LLU,1LLU),_1d2375913_Range32(72154LLU,72164LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__NEW_TAI_LUE = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(6528LLU,6571LLU,1LLU),_1d2375913_Range16(6576LLU,6601LLU,1LLU),_1d2375913_Range16(6608LLU,6618LLU,1LLU),_1d2375913_Range16(6622LLU,6623LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__NEWA = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(70656LLU,70747LLU,1LLU),_1d2375913_Range32(70749LLU,70753LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__NKO = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(1984LLU,2042LLU,1LLU),_1d2375913_Range16(2045LLU,2047LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__NUSHU = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(94177LLU,110960LLU,16783LLU),_1d2375913_Range32(110961LLU,111355LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__NYIAKENG_PUACHUE_HMONG = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(123136LLU,123180LLU,1LLU),_1d2375913_Range32(123184LLU,123197LLU,1LLU),_1d2375913_Range32(123200LLU,123209LLU,1LLU),_1d2375913_Range32(123214LLU,123215LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__OGHAM = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(5760LLU,5788LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__OL_CHIKI = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(7248LLU,7295LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__OLD_HUNGARIAN = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(68736LLU,68786LLU,1LLU),_1d2375913_Range32(68800LLU,68850LLU,1LLU),_1d2375913_Range32(68858LLU,68863LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__OLD_ITALIC = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(66304LLU,66339LLU,1LLU),_1d2375913_Range32(66349LLU,66351LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__OLD_NORTH_ARABIAN = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(68224LLU,68255LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__OLD_PERMIC = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(66384LLU,66426LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__OLD_PERSIAN = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(66464LLU,66499LLU,1LLU),_1d2375913_Range32(66504LLU,66517LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__OLD_SOGDIAN = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(69376LLU,69415LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__OLD_SOUTH_ARABIAN = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(68192LLU,68223LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__OLD_TURKIC = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(68608LLU,68680LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__OLD_UYGHUR = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(69488LLU,69513LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__ORIYA = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(2817LLU,2819LLU,1LLU),_1d2375913_Range16(2821LLU,2828LLU,1LLU),_1d2375913_Range16(2831LLU,2832LLU,1LLU),_1d2375913_Range16(2835LLU,2856LLU,1LLU),_1d2375913_Range16(2858LLU,2864LLU,1LLU),_1d2375913_Range16(2866LLU,2867LLU,1LLU),_1d2375913_Range16(2869LLU,2873LLU,1LLU),_1d2375913_Range16(2876LLU,2884LLU,1LLU),_1d2375913_Range16(2887LLU,2888LLU,1LLU),_1d2375913_Range16(2891LLU,2893LLU,1LLU),_1d2375913_Range16(2901LLU,2903LLU,1LLU),_1d2375913_Range16(2908LLU,2909LLU,1LLU),_1d2375913_Range16(2911LLU,2915LLU,1LLU),_1d2375913_Range16(2918LLU,2935LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__OSAGE = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(66736LLU,66771LLU,1LLU),_1d2375913_Range32(66776LLU,66811LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__OSMANYA = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(66688LLU,66717LLU,1LLU),_1d2375913_Range32(66720LLU,66729LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__PAHAWH_HMONG = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(92928LLU,92997LLU,1LLU),_1d2375913_Range32(93008LLU,93017LLU,1LLU),_1d2375913_Range32(93019LLU,93025LLU,1LLU),_1d2375913_Range32(93027LLU,93047LLU,1LLU),_1d2375913_Range32(93053LLU,93071LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__PALMYRENE = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(67680LLU,67711LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__PAU_CIN_HAU = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(72384LLU,72440LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__PHAGS_PA = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(43072LLU,43127LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__PHOENICIAN = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(67840LLU,67867LLU,1LLU),_1d2375913_Range32(67871LLU,67871LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__PSALTER_PAHLAVI = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(68480LLU,68497LLU,1LLU),_1d2375913_Range32(68505LLU,68508LLU,1LLU),_1d2375913_Range32(68521LLU,68527LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__REJANG = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(43312LLU,43347LLU,1LLU),_1d2375913_Range16(43359LLU,43359LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__RUNIC = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(5792LLU,5866LLU,1LLU),_1d2375913_Range16(5870LLU,5880LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__SAMARITAN = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(2048LLU,2093LLU,1LLU),_1d2375913_Range16(2096LLU,2110LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__SAURASHTRA = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(43136LLU,43205LLU,1LLU),_1d2375913_Range16(43214LLU,43225LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__SHARADA = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(70016LLU,70111LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__SHAVIAN = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(66640LLU,66687LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__SIDDHAM = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(71040LLU,71093LLU,1LLU),_1d2375913_Range32(71096LLU,71133LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__SIGN_WRITING = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(120832LLU,121483LLU,1LLU),_1d2375913_Range32(121499LLU,121503LLU,1LLU),_1d2375913_Range32(121505LLU,121519LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__SINHALA = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(3457LLU,3459LLU,1LLU),_1d2375913_Range16(3461LLU,3478LLU,1LLU),_1d2375913_Range16(3482LLU,3505LLU,1LLU),_1d2375913_Range16(3507LLU,3515LLU,1LLU),_1d2375913_Range16(3517LLU,3520LLU,3LLU),_1d2375913_Range16(3521LLU,3526LLU,1LLU),_1d2375913_Range16(3530LLU,3535LLU,5LLU),_1d2375913_Range16(3536LLU,3540LLU,1LLU),_1d2375913_Range16(3542LLU,3544LLU,2LLU),_1d2375913_Range16(3545LLU,3551LLU,1LLU),_1d2375913_Range16(3558LLU,3567LLU,1LLU),_1d2375913_Range16(3570LLU,3572LLU,1LLU)}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(70113LLU,70132LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__SOGDIAN = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(69424LLU,69465LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__SORA_SOMPENG = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(69840LLU,69864LLU,1LLU),_1d2375913_Range32(69872LLU,69881LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__SOYOMBO = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(72272LLU,72354LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__SUNDANESE = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(7040LLU,7103LLU,1LLU),_1d2375913_Range16(7360LLU,7367LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__SYLOTI_NAGRI = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(43008LLU,43052LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__SYRIAC = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(1792LLU,1805LLU,1LLU),_1d2375913_Range16(1807LLU,1866LLU,1LLU),_1d2375913_Range16(1869LLU,1871LLU,1LLU),_1d2375913_Range16(2144LLU,2154LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__TAGALOG = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(5888LLU,5909LLU,1LLU),_1d2375913_Range16(5919LLU,5919LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__TAGBANWA = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(5984LLU,5996LLU,1LLU),_1d2375913_Range16(5998LLU,6000LLU,1LLU),_1d2375913_Range16(6002LLU,6003LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__TAI_LE = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(6480LLU,6509LLU,1LLU),_1d2375913_Range16(6512LLU,6516LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__TAI_THAM = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(6688LLU,6750LLU,1LLU),_1d2375913_Range16(6752LLU,6780LLU,1LLU),_1d2375913_Range16(6783LLU,6793LLU,1LLU),_1d2375913_Range16(6800LLU,6809LLU,1LLU),_1d2375913_Range16(6816LLU,6829LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__TAI_VIET = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(43648LLU,43714LLU,1LLU),_1d2375913_Range16(43739LLU,43743LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__TAKRI = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(71296LLU,71353LLU,1LLU),_1d2375913_Range32(71360LLU,71369LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__TAMIL = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(2946LLU,2947LLU,1LLU),_1d2375913_Range16(2949LLU,2954LLU,1LLU),_1d2375913_Range16(2958LLU,2960LLU,1LLU),_1d2375913_Range16(2962LLU,2965LLU,1LLU),_1d2375913_Range16(2969LLU,2970LLU,1LLU),_1d2375913_Range16(2972LLU,2974LLU,2LLU),_1d2375913_Range16(2975LLU,2979LLU,4LLU),_1d2375913_Range16(2980LLU,2984LLU,4LLU),_1d2375913_Range16(2985LLU,2986LLU,1LLU),_1d2375913_Range16(2990LLU,3001LLU,1LLU),_1d2375913_Range16(3006LLU,3010LLU,1LLU),_1d2375913_Range16(3014LLU,3016LLU,1LLU),_1d2375913_Range16(3018LLU,3021LLU,1LLU),_1d2375913_Range16(3024LLU,3031LLU,7LLU),_1d2375913_Range16(3046LLU,3066LLU,1LLU)}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(73664LLU,73713LLU,1LLU),_1d2375913_Range32(73727LLU,73727LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__TANGSA = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(92784LLU,92862LLU,1LLU),_1d2375913_Range32(92864LLU,92873LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__TANGUT = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(94176LLU,94208LLU,32LLU),_1d2375913_Range32(94209LLU,100343LLU,1LLU),_1d2375913_Range32(100352LLU,101119LLU,1LLU),_1d2375913_Range32(101632LLU,101640LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__TELUGU = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(3072LLU,3084LLU,1LLU),_1d2375913_Range16(3086LLU,3088LLU,1LLU),_1d2375913_Range16(3090LLU,3112LLU,1LLU),_1d2375913_Range16(3114LLU,3129LLU,1LLU),_1d2375913_Range16(3132LLU,3140LLU,1LLU),_1d2375913_Range16(3142LLU,3144LLU,1LLU),_1d2375913_Range16(3146LLU,3149LLU,1LLU),_1d2375913_Range16(3157LLU,3158LLU,1LLU),_1d2375913_Range16(3160LLU,3162LLU,1LLU),_1d2375913_Range16(3165LLU,3168LLU,3LLU),_1d2375913_Range16(3169LLU,3171LLU,1LLU),_1d2375913_Range16(3174LLU,3183LLU,1LLU),_1d2375913_Range16(3191LLU,3199LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__THAANA = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(1920LLU,1969LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__THAI = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(3585LLU,3642LLU,1LLU),_1d2375913_Range16(3648LLU,3675LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__TIBETAN = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(3840LLU,3911LLU,1LLU),_1d2375913_Range16(3913LLU,3948LLU,1LLU),_1d2375913_Range16(3953LLU,3991LLU,1LLU),_1d2375913_Range16(3993LLU,4028LLU,1LLU),_1d2375913_Range16(4030LLU,4044LLU,1LLU),_1d2375913_Range16(4046LLU,4052LLU,1LLU),_1d2375913_Range16(4057LLU,4058LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__TIFINAGH = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(11568LLU,11623LLU,1LLU),_1d2375913_Range16(11631LLU,11632LLU,1LLU),_1d2375913_Range16(11647LLU,11647LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__TIRHUTA = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(70784LLU,70855LLU,1LLU),_1d2375913_Range32(70864LLU,70873LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__TOTO = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(123536LLU,123566LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__UGARITIC = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(66432LLU,66461LLU,1LLU),_1d2375913_Range32(66463LLU,66463LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__VAI = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(42240LLU,42539LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__VITHKUQI = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(66928LLU,66938LLU,1LLU),_1d2375913_Range32(66940LLU,66954LLU,1LLU),_1d2375913_Range32(66956LLU,66962LLU,1LLU),_1d2375913_Range32(66964LLU,66965LLU,1LLU),_1d2375913_Range32(66967LLU,66977LLU,1LLU),_1d2375913_Range32(66979LLU,66993LLU,1LLU),_1d2375913_Range32(66995LLU,67001LLU,1LLU),_1d2375913_Range32(67003LLU,67004LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__WANCHO = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(123584LLU,123641LLU,1LLU),_1d2375913_Range32(123647LLU,123647LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__WARANG_CITI = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(71840LLU,71922LLU,1LLU),_1d2375913_Range32(71935LLU,71935LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__YEZIDI = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(69248LLU,69289LLU,1LLU),_1d2375913_Range32(69291LLU,69293LLU,1LLU),_1d2375913_Range32(69296LLU,69297LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__YI = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(40960LLU,42124LLU,1LLU),_1d2375913_Range16(42128LLU,42182LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__ZANABAZAR_SQUARE = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(72192LLU,72263LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__ASCII_HEX_DIGIT = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(48LLU,57LLU,1LLU),_1d2375913_Range16(65LLU,70LLU,1LLU),_1d2375913_Range16(97LLU,102LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),3LL));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__BIDI_CONTROL = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(1564LLU,8206LLU,6642LLU),_1d2375913_Range16(8207LLU,8234LLU,27LLU),_1d2375913_Range16(8235LLU,8238LLU,1LLU),_1d2375913_Range16(8294LLU,8297LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__DASH = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(45LLU,1418LLU,1373LLU),_1d2375913_Range16(1470LLU,5120LLU,3650LLU),_1d2375913_Range16(6150LLU,8208LLU,2058LLU),_1d2375913_Range16(8209LLU,8213LLU,1LLU),_1d2375913_Range16(8275LLU,8315LLU,40LLU),_1d2375913_Range16(8331LLU,8722LLU,391LLU),_1d2375913_Range16(11799LLU,11802LLU,3LLU),_1d2375913_Range16(11834LLU,11835LLU,1LLU),_1d2375913_Range16(11840LLU,11869LLU,29LLU),_1d2375913_Range16(12316LLU,12336LLU,20LLU),_1d2375913_Range16(12448LLU,65073LLU,52625LLU),_1d2375913_Range16(65074LLU,65112LLU,38LLU),_1d2375913_Range16(65123LLU,65293LLU,170LLU)}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(69293LLU,69293LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__DEPRECATED = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(329LLU,1651LLU,1322LLU),_1d2375913_Range16(3959LLU,3961LLU,2LLU),_1d2375913_Range16(6051LLU,6052LLU,1LLU),_1d2375913_Range16(8298LLU,8303LLU,1LLU),_1d2375913_Range16(9001LLU,9002LLU,1LLU)}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(917505LLU,917505LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__DIACRITIC = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(94LLU,96LLU,2LLU),_1d2375913_Range16(168LLU,175LLU,7LLU),_1d2375913_Range16(180LLU,183LLU,3LLU),_1d2375913_Range16(184LLU,688LLU,504LLU),_1d2375913_Range16(689LLU,846LLU,1LLU),_1d2375913_Range16(848LLU,855LLU,1LLU),_1d2375913_Range16(861LLU,866LLU,1LLU),_1d2375913_Range16(884LLU,885LLU,1LLU),_1d2375913_Range16(890LLU,900LLU,10LLU),_1d2375913_Range16(901LLU,1155LLU,254LLU),_1d2375913_Range16(1156LLU,1159LLU,1LLU),_1d2375913_Range16(1369LLU,1425LLU,56LLU),_1d2375913_Range16(1426LLU,1441LLU,1LLU),_1d2375913_Range16(1443LLU,1469LLU,1LLU),_1d2375913_Range16(1471LLU,1473LLU,2LLU),_1d2375913_Range16(1474LLU,1476LLU,2LLU),_1d2375913_Range16(1611LLU,1618LLU,1LLU),_1d2375913_Range16(1623LLU,1624LLU,1LLU),_1d2375913_Range16(1759LLU,1760LLU,1LLU),_1d2375913_Range16(1765LLU,1766LLU,1LLU),_1d2375913_Range16(1770LLU,1772LLU,1LLU),_1d2375913_Range16(1840LLU,1866LLU,1LLU),_1d2375913_Range16(1958LLU,1968LLU,1LLU),_1d2375913_Range16(2027LLU,2037LLU,1LLU),_1d2375913_Range16(2072LLU,2073LLU,1LLU),_1d2375913_Range16(2200LLU,2207LLU,1LLU),_1d2375913_Range16(2249LLU,2258LLU,1LLU),_1d2375913_Range16(2275LLU,2302LLU,1LLU),_1d2375913_Range16(2364LLU,2381LLU,17LLU),_1d2375913_Range16(2385LLU,2388LLU,1LLU),_1d2375913_Range16(2417LLU,2492LLU,75LLU),_1d2375913_Range16(2509LLU,2620LLU,111LLU),_1d2375913_Range16(2637LLU,2748LLU,111LLU),_1d2375913_Range16(2765LLU,2813LLU,48LLU),_1d2375913_Range16(2814LLU,2815LLU,1LLU),_1d2375913_Range16(2876LLU,2893LLU,17LLU),_1d2375913_Range16(2901LLU,3021LLU,120LLU),_1d2375913_Range16(3132LLU,3149LLU,17LLU),_1d2375913_Range16(3260LLU,3277LLU,17LLU),_1d2375913_Range16(3387LLU,3388LLU,1LLU),_1d2375913_Range16(3405LLU,3655LLU,125LLU),_1d2375913_Range16(3656LLU,3660LLU,1LLU),_1d2375913_Range16(3662LLU,3770LLU,108LLU),_1d2375913_Range16(3784LLU,3788LLU,1LLU),_1d2375913_Range16(3864LLU,3865LLU,1LLU),_1d2375913_Range16(3893LLU,3897LLU,2LLU),_1d2375913_Range16(3902LLU,3903LLU,1LLU),_1d2375913_Range16(3970LLU,3972LLU,1LLU),_1d2375913_Range16(3974LLU,3975LLU,1LLU),_1d2375913_Range16(4038LLU,4151LLU,113LLU),_1d2375913_Range16(4153LLU,4154LLU,1LLU),_1d2375913_Range16(4195LLU,4196LLU,1LLU),_1d2375913_Range16(4201LLU,4205LLU,1LLU),_1d2375913_Range16(4231LLU,4237LLU,1LLU),_1d2375913_Range16(4239LLU,4250LLU,11LLU),_1d2375913_Range16(4251LLU,4957LLU,706LLU),_1d2375913_Range16(4958LLU,4959LLU,1LLU),_1d2375913_Range16(5908LLU,5909LLU,1LLU),_1d2375913_Range16(6089LLU,6099LLU,1LLU),_1d2375913_Range16(6109LLU,6457LLU,348LLU),_1d2375913_Range16(6458LLU,6459LLU,1LLU),_1d2375913_Range16(6773LLU,6780LLU,1LLU),_1d2375913_Range16(6783LLU,6832LLU,49LLU),_1d2375913_Range16(6833LLU,6846LLU,1LLU),_1d2375913_Range16(6849LLU,6859LLU,1LLU),_1d2375913_Range16(6964LLU,6980LLU,16LLU),_1d2375913_Range16(7019LLU,7027LLU,1LLU),_1d2375913_Range16(7082LLU,7083LLU,1LLU),_1d2375913_Range16(7222LLU,7223LLU,1LLU),_1d2375913_Range16(7288LLU,7293LLU,1LLU),_1d2375913_Range16(7376LLU,7400LLU,1LLU),_1d2375913_Range16(7405LLU,7412LLU,7LLU),_1d2375913_Range16(7415LLU,7417LLU,1LLU),_1d2375913_Range16(7468LLU,7530LLU,1LLU),_1d2375913_Range16(7620LLU,7631LLU,1LLU),_1d2375913_Range16(7669LLU,7679LLU,1LLU),_1d2375913_Range16(8125LLU,8127LLU,2LLU),_1d2375913_Range16(8128LLU,8129LLU,1LLU),_1d2375913_Range16(8141LLU,8143LLU,1LLU),_1d2375913_Range16(8157LLU,8159LLU,1LLU),_1d2375913_Range16(8173LLU,8175LLU,1LLU),_1d2375913_Range16(8189LLU,8190LLU,1LLU),_1d2375913_Range16(11503LLU,11505LLU,1LLU),_1d2375913_Range16(11823LLU,12330LLU,507LLU),_1d2375913_Range16(12331LLU,12335LLU,1LLU),_1d2375913_Range16(12441LLU,12444LLU,1LLU),_1d2375913_Range16(12540LLU,42607LLU,30067LLU),_1d2375913_Range16(42620LLU,42621LLU,1LLU),_1d2375913_Range16(42623LLU,42652LLU,29LLU),_1d2375913_Range16(42653LLU,42736LLU,83LLU),_1d2375913_Range16(42737LLU,42752LLU,15LLU),_1d2375913_Range16(42753LLU,42785LLU,1LLU),_1d2375913_Range16(42888LLU,42890LLU,1LLU),_1d2375913_Range16(43000LLU,43001LLU,1LLU),_1d2375913_Range16(43204LLU,43232LLU,28LLU),_1d2375913_Range16(43233LLU,43249LLU,1LLU),_1d2375913_Range16(43307LLU,43310LLU,1LLU),_1d2375913_Range16(43347LLU,43443LLU,96LLU),_1d2375913_Range16(43456LLU,43493LLU,37LLU),_1d2375913_Range16(43643LLU,43645LLU,1LLU),_1d2375913_Range16(43711LLU,43714LLU,1LLU),_1d2375913_Range16(43766LLU,43867LLU,101LLU),_1d2375913_Range16(43868LLU,43871LLU,1LLU),_1d2375913_Range16(43881LLU,43883LLU,1LLU),_1d2375913_Range16(44012LLU,44013LLU,1LLU),_1d2375913_Range16(64286LLU,65056LLU,770LLU),_1d2375913_Range16(65057LLU,65071LLU,1LLU),_1d2375913_Range16(65342LLU,65344LLU,2LLU),_1d2375913_Range16(65392LLU,65438LLU,46LLU),_1d2375913_Range16(65439LLU,65507LLU,68LLU)}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(66272LLU,67456LLU,1184LLU),_1d2375913_Range32(67457LLU,67461LLU,1LLU),_1d2375913_Range32(67463LLU,67504LLU,1LLU),_1d2375913_Range32(67506LLU,67514LLU,1LLU),_1d2375913_Range32(68325LLU,68326LLU,1LLU),_1d2375913_Range32(68898LLU,68903LLU,1LLU),_1d2375913_Range32(69373LLU,69375LLU,1LLU),_1d2375913_Range32(69446LLU,69456LLU,1LLU),_1d2375913_Range32(69506LLU,69509LLU,1LLU),_1d2375913_Range32(69702LLU,69744LLU,42LLU),_1d2375913_Range32(69817LLU,69818LLU,1LLU),_1d2375913_Range32(69939LLU,69940LLU,1LLU),_1d2375913_Range32(70003LLU,70080LLU,77LLU),_1d2375913_Range32(70090LLU,70092LLU,1LLU),_1d2375913_Range32(70197LLU,70198LLU,1LLU),_1d2375913_Range32(70377LLU,70378LLU,1LLU),_1d2375913_Range32(70460LLU,70477LLU,17LLU),_1d2375913_Range32(70502LLU,70508LLU,1LLU),_1d2375913_Range32(70512LLU,70516LLU,1LLU),_1d2375913_Range32(70722LLU,70726LLU,4LLU),_1d2375913_Range32(70850LLU,70851LLU,1LLU),_1d2375913_Range32(71103LLU,71104LLU,1LLU),_1d2375913_Range32(71231LLU,71350LLU,119LLU),_1d2375913_Range32(71351LLU,71467LLU,116LLU),_1d2375913_Range32(71737LLU,71738LLU,1LLU),_1d2375913_Range32(71997LLU,71998LLU,1LLU),_1d2375913_Range32(72003LLU,72160LLU,157LLU),_1d2375913_Range32(72244LLU,72263LLU,19LLU),_1d2375913_Range32(72345LLU,72767LLU,422LLU),_1d2375913_Range32(73026LLU,73028LLU,2LLU),_1d2375913_Range32(73029LLU,73111LLU,82LLU),_1d2375913_Range32(78919LLU,78933LLU,1LLU),_1d2375913_Range32(92912LLU,92916LLU,1LLU),_1d2375913_Range32(92976LLU,92982LLU,1LLU),_1d2375913_Range32(94095LLU,94111LLU,1LLU),_1d2375913_Range32(94192LLU,94193LLU,1LLU),_1d2375913_Range32(110576LLU,110579LLU,1LLU),_1d2375913_Range32(110581LLU,110587LLU,1LLU),_1d2375913_Range32(110589LLU,110590LLU,1LLU),_1d2375913_Range32(118528LLU,118573LLU,1LLU),_1d2375913_Range32(118576LLU,118598LLU,1LLU),_1d2375913_Range32(119143LLU,119145LLU,1LLU),_1d2375913_Range32(119149LLU,119154LLU,1LLU),_1d2375913_Range32(119163LLU,119170LLU,1LLU),_1d2375913_Range32(119173LLU,119179LLU,1LLU),_1d2375913_Range32(119210LLU,119213LLU,1LLU),_1d2375913_Range32(122928LLU,122989LLU,1LLU),_1d2375913_Range32(123184LLU,123190LLU,1LLU),_1d2375913_Range32(123566LLU,123628LLU,62LLU),_1d2375913_Range32(123629LLU,123631LLU,1LLU),_1d2375913_Range32(125136LLU,125142LLU,1LLU),_1d2375913_Range32(125252LLU,125254LLU,1LLU),_1d2375913_Range32(125256LLU,125258LLU,1LLU)}),3LL));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__EXTENDER = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(183LLU,720LLU,537LLU),_1d2375913_Range16(721LLU,1600LLU,879LLU),_1d2375913_Range16(2042LLU,2901LLU,859LLU),_1d2375913_Range16(3654LLU,3782LLU,128LLU),_1d2375913_Range16(6154LLU,6211LLU,57LLU),_1d2375913_Range16(6823LLU,7222LLU,399LLU),_1d2375913_Range16(7291LLU,12293LLU,5002LLU),_1d2375913_Range16(12337LLU,12341LLU,1LLU),_1d2375913_Range16(12445LLU,12446LLU,1LLU),_1d2375913_Range16(12540LLU,12542LLU,1LLU),_1d2375913_Range16(40981LLU,42508LLU,1527LLU),_1d2375913_Range16(43471LLU,43494LLU,23LLU),_1d2375913_Range16(43632LLU,43741LLU,109LLU),_1d2375913_Range16(43763LLU,43764LLU,1LLU),_1d2375913_Range16(65392LLU,65392LLU,1LLU)}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(67457LLU,67458LLU,1LLU),_1d2375913_Range32(70493LLU,71110LLU,617LLU),_1d2375913_Range32(71111LLU,71112LLU,1LLU),_1d2375913_Range32(72344LLU,92994LLU,20650LLU),_1d2375913_Range32(92995LLU,94176LLU,1181LLU),_1d2375913_Range32(94177LLU,94179LLU,2LLU),_1d2375913_Range32(123196LLU,123197LLU,1LLU),_1d2375913_Range32(125252LLU,125254LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__HEX_DIGIT = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(48LLU,57LLU,1LLU),_1d2375913_Range16(65LLU,70LLU,1LLU),_1d2375913_Range16(97LLU,102LLU,1LLU),_1d2375913_Range16(65296LLU,65305LLU,1LLU),_1d2375913_Range16(65313LLU,65318LLU,1LLU),_1d2375913_Range16(65345LLU,65350LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),3LL));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__HYPHEN = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(45LLU,173LLU,128LLU),_1d2375913_Range16(1418LLU,6150LLU,4732LLU),_1d2375913_Range16(8208LLU,8209LLU,1LLU),_1d2375913_Range16(11799LLU,12539LLU,740LLU),_1d2375913_Range16(65123LLU,65293LLU,170LLU),_1d2375913_Range16(65381LLU,65381LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),1LL));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__IDS_BINARY_OPERATOR = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(12272LLU,12273LLU,1LLU),_1d2375913_Range16(12276LLU,12283LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__IDS_TRINARY_OPERATOR = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(12274LLU,12275LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__IDEOGRAPHIC = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(12294LLU,12295LLU,1LLU),_1d2375913_Range16(12321LLU,12329LLU,1LLU),_1d2375913_Range16(12344LLU,12346LLU,1LLU),_1d2375913_Range16(13312LLU,19903LLU,1LLU),_1d2375913_Range16(19968LLU,40959LLU,1LLU),_1d2375913_Range16(63744LLU,64109LLU,1LLU),_1d2375913_Range16(64112LLU,64217LLU,1LLU)}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(94180LLU,94208LLU,28LLU),_1d2375913_Range32(94209LLU,100343LLU,1LLU),_1d2375913_Range32(100352LLU,101589LLU,1LLU),_1d2375913_Range32(101632LLU,101640LLU,1LLU),_1d2375913_Range32(110960LLU,111355LLU,1LLU),_1d2375913_Range32(131072LLU,173791LLU,1LLU),_1d2375913_Range32(173824LLU,177977LLU,1LLU),_1d2375913_Range32(177984LLU,178205LLU,1LLU),_1d2375913_Range32(178208LLU,183969LLU,1LLU),_1d2375913_Range32(183984LLU,191456LLU,1LLU),_1d2375913_Range32(194560LLU,195101LLU,1LLU),_1d2375913_Range32(196608LLU,201546LLU,1LLU),_1d2375913_Range32(201552LLU,205743LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__JOIN_CONTROL = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(8204LLU,8205LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__LOGICAL_ORDER_EXCEPTION = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(3648LLU,3652LLU,1LLU),_1d2375913_Range16(3776LLU,3780LLU,1LLU),_1d2375913_Range16(6581LLU,6583LLU,1LLU),_1d2375913_Range16(6586LLU,43701LLU,37115LLU),_1d2375913_Range16(43702LLU,43705LLU,3LLU),_1d2375913_Range16(43707LLU,43708LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__NONCHARACTER_CODE_POINT = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(64976LLU,65007LLU,1LLU),_1d2375913_Range16(65534LLU,65535LLU,1LLU)}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(131070LLU,131071LLU,1LLU),_1d2375913_Range32(196606LLU,196607LLU,1LLU),_1d2375913_Range32(262142LLU,262143LLU,1LLU),_1d2375913_Range32(327678LLU,327679LLU,1LLU),_1d2375913_Range32(393214LLU,393215LLU,1LLU),_1d2375913_Range32(458750LLU,458751LLU,1LLU),_1d2375913_Range32(524286LLU,524287LLU,1LLU),_1d2375913_Range32(589822LLU,589823LLU,1LLU),_1d2375913_Range32(655358LLU,655359LLU,1LLU),_1d2375913_Range32(720894LLU,720895LLU,1LLU),_1d2375913_Range32(786430LLU,786431LLU,1LLU),_1d2375913_Range32(851966LLU,851967LLU,1LLU),_1d2375913_Range32(917502LLU,917503LLU,1LLU),_1d2375913_Range32(983038LLU,983039LLU,1LLU),_1d2375913_Range32(1048574LLU,1048575LLU,1LLU),_1d2375913_Range32(1114110LLU,1114111LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__OTHER_ALPHABETIC = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(837LLU,1456LLU,619LLU),_1d2375913_Range16(1457LLU,1469LLU,1LLU),_1d2375913_Range16(1471LLU,1473LLU,2LLU),_1d2375913_Range16(1474LLU,1476LLU,2LLU),_1d2375913_Range16(1477LLU,1479LLU,2LLU),_1d2375913_Range16(1552LLU,1562LLU,1LLU),_1d2375913_Range16(1611LLU,1623LLU,1LLU),_1d2375913_Range16(1625LLU,1631LLU,1LLU),_1d2375913_Range16(1648LLU,1750LLU,102LLU),_1d2375913_Range16(1751LLU,1756LLU,1LLU),_1d2375913_Range16(1761LLU,1764LLU,1LLU),_1d2375913_Range16(1767LLU,1768LLU,1LLU),_1d2375913_Range16(1773LLU,1809LLU,36LLU),_1d2375913_Range16(1840LLU,1855LLU,1LLU),_1d2375913_Range16(1958LLU,1968LLU,1LLU),_1d2375913_Range16(2070LLU,2071LLU,1LLU),_1d2375913_Range16(2075LLU,2083LLU,1LLU),_1d2375913_Range16(2085LLU,2087LLU,1LLU),_1d2375913_Range16(2089LLU,2092LLU,1LLU),_1d2375913_Range16(2260LLU,2271LLU,1LLU),_1d2375913_Range16(2275LLU,2281LLU,1LLU),_1d2375913_Range16(2288LLU,2307LLU,1LLU),_1d2375913_Range16(2362LLU,2363LLU,1LLU),_1d2375913_Range16(2366LLU,2380LLU,1LLU),_1d2375913_Range16(2382LLU,2383LLU,1LLU),_1d2375913_Range16(2389LLU,2391LLU,1LLU),_1d2375913_Range16(2402LLU,2403LLU,1LLU),_1d2375913_Range16(2433LLU,2435LLU,1LLU),_1d2375913_Range16(2494LLU,2500LLU,1LLU),_1d2375913_Range16(2503LLU,2504LLU,1LLU),_1d2375913_Range16(2507LLU,2508LLU,1LLU),_1d2375913_Range16(2519LLU,2530LLU,11LLU),_1d2375913_Range16(2531LLU,2561LLU,30LLU),_1d2375913_Range16(2562LLU,2563LLU,1LLU),_1d2375913_Range16(2622LLU,2626LLU,1LLU),_1d2375913_Range16(2631LLU,2632LLU,1LLU),_1d2375913_Range16(2635LLU,2636LLU,1LLU),_1d2375913_Range16(2641LLU,2672LLU,31LLU),_1d2375913_Range16(2673LLU,2677LLU,4LLU),_1d2375913_Range16(2689LLU,2691LLU,1LLU),_1d2375913_Range16(2750LLU,2757LLU,1LLU),_1d2375913_Range16(2759LLU,2761LLU,1LLU),_1d2375913_Range16(2763LLU,2764LLU,1LLU),_1d2375913_Range16(2786LLU,2787LLU,1LLU),_1d2375913_Range16(2810LLU,2812LLU,1LLU),_1d2375913_Range16(2817LLU,2819LLU,1LLU),_1d2375913_Range16(2878LLU,2884LLU,1LLU),_1d2375913_Range16(2887LLU,2888LLU,1LLU),_1d2375913_Range16(2891LLU,2892LLU,1LLU),_1d2375913_Range16(2902LLU,2903LLU,1LLU),_1d2375913_Range16(2914LLU,2915LLU,1LLU),_1d2375913_Range16(2946LLU,3006LLU,60LLU),_1d2375913_Range16(3007LLU,3010LLU,1LLU),_1d2375913_Range16(3014LLU,3016LLU,1LLU),_1d2375913_Range16(3018LLU,3020LLU,1LLU),_1d2375913_Range16(3031LLU,3072LLU,41LLU),_1d2375913_Range16(3073LLU,3076LLU,1LLU),_1d2375913_Range16(3134LLU,3140LLU,1LLU),_1d2375913_Range16(3142LLU,3144LLU,1LLU),_1d2375913_Range16(3146LLU,3148LLU,1LLU),_1d2375913_Range16(3157LLU,3158LLU,1LLU),_1d2375913_Range16(3170LLU,3171LLU,1LLU),_1d2375913_Range16(3201LLU,3203LLU,1LLU),_1d2375913_Range16(3262LLU,3268LLU,1LLU),_1d2375913_Range16(3270LLU,3272LLU,1LLU),_1d2375913_Range16(3274LLU,3276LLU,1LLU),_1d2375913_Range16(3285LLU,3286LLU,1LLU),_1d2375913_Range16(3298LLU,3299LLU,1LLU),_1d2375913_Range16(3315LLU,3328LLU,13LLU),_1d2375913_Range16(3329LLU,3331LLU,1LLU),_1d2375913_Range16(3390LLU,3396LLU,1LLU),_1d2375913_Range16(3398LLU,3400LLU,1LLU),_1d2375913_Range16(3402LLU,3404LLU,1LLU),_1d2375913_Range16(3415LLU,3426LLU,11LLU),_1d2375913_Range16(3427LLU,3457LLU,30LLU),_1d2375913_Range16(3458LLU,3459LLU,1LLU),_1d2375913_Range16(3535LLU,3540LLU,1LLU),_1d2375913_Range16(3542LLU,3544LLU,2LLU),_1d2375913_Range16(3545LLU,3551LLU,1LLU),_1d2375913_Range16(3570LLU,3571LLU,1LLU),_1d2375913_Range16(3633LLU,3636LLU,3LLU),_1d2375913_Range16(3637LLU,3642LLU,1LLU),_1d2375913_Range16(3661LLU,3761LLU,100LLU),_1d2375913_Range16(3764LLU,3769LLU,1LLU),_1d2375913_Range16(3771LLU,3772LLU,1LLU),_1d2375913_Range16(3789LLU,3953LLU,164LLU),_1d2375913_Range16(3954LLU,3971LLU,1LLU),_1d2375913_Range16(3981LLU,3991LLU,1LLU),_1d2375913_Range16(3993LLU,4028LLU,1LLU),_1d2375913_Range16(4139LLU,4150LLU,1LLU),_1d2375913_Range16(4152LLU,4155LLU,3LLU),_1d2375913_Range16(4156LLU,4158LLU,1LLU),_1d2375913_Range16(4182LLU,4185LLU,1LLU),_1d2375913_Range16(4190LLU,4192LLU,1LLU),_1d2375913_Range16(4194LLU,4196LLU,1LLU),_1d2375913_Range16(4199LLU,4205LLU,1LLU),_1d2375913_Range16(4209LLU,4212LLU,1LLU),_1d2375913_Range16(4226LLU,4237LLU,1LLU),_1d2375913_Range16(4239LLU,4250LLU,11LLU),_1d2375913_Range16(4251LLU,4253LLU,1LLU),_1d2375913_Range16(5906LLU,5907LLU,1LLU),_1d2375913_Range16(5938LLU,5939LLU,1LLU),_1d2375913_Range16(5970LLU,5971LLU,1LLU),_1d2375913_Range16(6002LLU,6003LLU,1LLU),_1d2375913_Range16(6070LLU,6088LLU,1LLU),_1d2375913_Range16(6277LLU,6278LLU,1LLU),_1d2375913_Range16(6313LLU,6432LLU,119LLU),_1d2375913_Range16(6433LLU,6443LLU,1LLU),_1d2375913_Range16(6448LLU,6456LLU,1LLU),_1d2375913_Range16(6679LLU,6683LLU,1LLU),_1d2375913_Range16(6741LLU,6750LLU,1LLU),_1d2375913_Range16(6753LLU,6772LLU,1LLU),_1d2375913_Range16(6847LLU,6848LLU,1LLU),_1d2375913_Range16(6860LLU,6862LLU,1LLU),_1d2375913_Range16(6912LLU,6916LLU,1LLU),_1d2375913_Range16(6965LLU,6979LLU,1LLU),_1d2375913_Range16(7040LLU,7042LLU,1LLU),_1d2375913_Range16(7073LLU,7081LLU,1LLU),_1d2375913_Range16(7084LLU,7085LLU,1LLU),_1d2375913_Range16(7143LLU,7153LLU,1LLU),_1d2375913_Range16(7204LLU,7222LLU,1LLU),_1d2375913_Range16(7655LLU,7668LLU,1LLU),_1d2375913_Range16(9398LLU,9449LLU,1LLU),_1d2375913_Range16(11744LLU,11775LLU,1LLU),_1d2375913_Range16(42612LLU,42619LLU,1LLU),_1d2375913_Range16(42654LLU,42655LLU,1LLU),_1d2375913_Range16(43010LLU,43019LLU,9LLU),_1d2375913_Range16(43043LLU,43047LLU,1LLU),_1d2375913_Range16(43136LLU,43137LLU,1LLU),_1d2375913_Range16(43188LLU,43203LLU,1LLU),_1d2375913_Range16(43205LLU,43263LLU,58LLU),_1d2375913_Range16(43302LLU,43306LLU,1LLU),_1d2375913_Range16(43335LLU,43346LLU,1LLU),_1d2375913_Range16(43392LLU,43395LLU,1LLU),_1d2375913_Range16(43444LLU,43455LLU,1LLU),_1d2375913_Range16(43493LLU,43561LLU,68LLU),_1d2375913_Range16(43562LLU,43574LLU,1LLU),_1d2375913_Range16(43587LLU,43596LLU,9LLU),_1d2375913_Range16(43597LLU,43643LLU,46LLU),_1d2375913_Range16(43644LLU,43645LLU,1LLU),_1d2375913_Range16(43696LLU,43698LLU,2LLU),_1d2375913_Range16(43699LLU,43700LLU,1LLU),_1d2375913_Range16(43703LLU,43704LLU,1LLU),_1d2375913_Range16(43710LLU,43755LLU,45LLU),_1d2375913_Range16(43756LLU,43759LLU,1LLU),_1d2375913_Range16(43765LLU,44003LLU,238LLU),_1d2375913_Range16(44004LLU,44010LLU,1LLU),_1d2375913_Range16(64286LLU,64286LLU,1LLU)}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(66422LLU,66426LLU,1LLU),_1d2375913_Range32(68097LLU,68099LLU,1LLU),_1d2375913_Range32(68101LLU,68102LLU,1LLU),_1d2375913_Range32(68108LLU,68111LLU,1LLU),_1d2375913_Range32(68900LLU,68903LLU,1LLU),_1d2375913_Range32(69291LLU,69292LLU,1LLU),_1d2375913_Range32(69632LLU,69634LLU,1LLU),_1d2375913_Range32(69688LLU,69701LLU,1LLU),_1d2375913_Range32(69747LLU,69748LLU,1LLU),_1d2375913_Range32(69760LLU,69762LLU,1LLU),_1d2375913_Range32(69808LLU,69816LLU,1LLU),_1d2375913_Range32(69826LLU,69888LLU,62LLU),_1d2375913_Range32(69889LLU,69890LLU,1LLU),_1d2375913_Range32(69927LLU,69938LLU,1LLU),_1d2375913_Range32(69957LLU,69958LLU,1LLU),_1d2375913_Range32(70016LLU,70018LLU,1LLU),_1d2375913_Range32(70067LLU,70079LLU,1LLU),_1d2375913_Range32(70094LLU,70095LLU,1LLU),_1d2375913_Range32(70188LLU,70196LLU,1LLU),_1d2375913_Range32(70199LLU,70206LLU,7LLU),_1d2375913_Range32(70209LLU,70367LLU,158LLU),_1d2375913_Range32(70368LLU,70376LLU,1LLU),_1d2375913_Range32(70400LLU,70403LLU,1LLU),_1d2375913_Range32(70462LLU,70468LLU,1LLU),_1d2375913_Range32(70471LLU,70472LLU,1LLU),_1d2375913_Range32(70475LLU,70476LLU,1LLU),_1d2375913_Range32(70487LLU,70498LLU,11LLU),_1d2375913_Range32(70499LLU,70709LLU,210LLU),_1d2375913_Range32(70710LLU,70721LLU,1LLU),_1d2375913_Range32(70723LLU,70725LLU,1LLU),_1d2375913_Range32(70832LLU,70849LLU,1LLU),_1d2375913_Range32(71087LLU,71093LLU,1LLU),_1d2375913_Range32(71096LLU,71102LLU,1LLU),_1d2375913_Range32(71132LLU,71133LLU,1LLU),_1d2375913_Range32(71216LLU,71230LLU,1LLU),_1d2375913_Range32(71232LLU,71339LLU,107LLU),_1d2375913_Range32(71340LLU,71349LLU,1LLU),_1d2375913_Range32(71453LLU,71466LLU,1LLU),_1d2375913_Range32(71724LLU,71736LLU,1LLU),_1d2375913_Range32(71984LLU,71989LLU,1LLU),_1d2375913_Range32(71991LLU,71992LLU,1LLU),_1d2375913_Range32(71995LLU,71996LLU,1LLU),_1d2375913_Range32(72000LLU,72002LLU,2LLU),_1d2375913_Range32(72145LLU,72151LLU,1LLU),_1d2375913_Range32(72154LLU,72159LLU,1LLU),_1d2375913_Range32(72164LLU,72193LLU,29LLU),_1d2375913_Range32(72194LLU,72202LLU,1LLU),_1d2375913_Range32(72245LLU,72249LLU,1LLU),_1d2375913_Range32(72251LLU,72254LLU,1LLU),_1d2375913_Range32(72273LLU,72283LLU,1LLU),_1d2375913_Range32(72330LLU,72343LLU,1LLU),_1d2375913_Range32(72751LLU,72758LLU,1LLU),_1d2375913_Range32(72760LLU,72766LLU,1LLU),_1d2375913_Range32(72850LLU,72871LLU,1LLU),_1d2375913_Range32(72873LLU,72886LLU,1LLU),_1d2375913_Range32(73009LLU,73014LLU,1LLU),_1d2375913_Range32(73018LLU,73020LLU,2LLU),_1d2375913_Range32(73021LLU,73023LLU,2LLU),_1d2375913_Range32(73024LLU,73025LLU,1LLU),_1d2375913_Range32(73027LLU,73031LLU,4LLU),_1d2375913_Range32(73098LLU,73102LLU,1LLU),_1d2375913_Range32(73104LLU,73105LLU,1LLU),_1d2375913_Range32(73107LLU,73110LLU,1LLU),_1d2375913_Range32(73459LLU,73462LLU,1LLU),_1d2375913_Range32(73472LLU,73473LLU,1LLU),_1d2375913_Range32(73475LLU,73524LLU,49LLU),_1d2375913_Range32(73525LLU,73530LLU,1LLU),_1d2375913_Range32(73534LLU,73536LLU,1LLU),_1d2375913_Range32(94031LLU,94033LLU,2LLU),_1d2375913_Range32(94034LLU,94087LLU,1LLU),_1d2375913_Range32(94095LLU,94098LLU,1LLU),_1d2375913_Range32(94192LLU,94193LLU,1LLU),_1d2375913_Range32(113822LLU,122880LLU,9058LLU),_1d2375913_Range32(122881LLU,122886LLU,1LLU),_1d2375913_Range32(122888LLU,122904LLU,1LLU),_1d2375913_Range32(122907LLU,122913LLU,1LLU),_1d2375913_Range32(122915LLU,122916LLU,1LLU),_1d2375913_Range32(122918LLU,122922LLU,1LLU),_1d2375913_Range32(123023LLU,125255LLU,2232LLU),_1d2375913_Range32(127280LLU,127305LLU,1LLU),_1d2375913_Range32(127312LLU,127337LLU,1LLU),_1d2375913_Range32(127344LLU,127369LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__OTHER_DEFAULT_IGNORABLE_CODE_POINT = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(847LLU,4447LLU,3600LLU),_1d2375913_Range16(4448LLU,6068LLU,1620LLU),_1d2375913_Range16(6069LLU,8293LLU,2224LLU),_1d2375913_Range16(12644LLU,65440LLU,52796LLU),_1d2375913_Range16(65520LLU,65528LLU,1LLU)}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(917504LLU,917506LLU,2LLU),_1d2375913_Range32(917507LLU,917535LLU,1LLU),_1d2375913_Range32(917632LLU,917759LLU,1LLU),_1d2375913_Range32(918000LLU,921599LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__OTHER_GRAPHEME_EXTEND = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(2494LLU,2519LLU,25LLU),_1d2375913_Range16(2878LLU,2903LLU,25LLU),_1d2375913_Range16(3006LLU,3031LLU,25LLU),_1d2375913_Range16(3266LLU,3285LLU,19LLU),_1d2375913_Range16(3286LLU,3390LLU,104LLU),_1d2375913_Range16(3415LLU,3535LLU,120LLU),_1d2375913_Range16(3551LLU,6965LLU,3414LLU),_1d2375913_Range16(8204LLU,12334LLU,4130LLU),_1d2375913_Range16(12335LLU,65438LLU,53103LLU),_1d2375913_Range16(65439LLU,65439LLU,1LLU)}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(70462LLU,70487LLU,25LLU),_1d2375913_Range32(70832LLU,70845LLU,13LLU),_1d2375913_Range32(71087LLU,71984LLU,897LLU),_1d2375913_Range32(119141LLU,119150LLU,9LLU),_1d2375913_Range32(119151LLU,119154LLU,1LLU),_1d2375913_Range32(917536LLU,917631LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__OTHER_ID_CONTINUE = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(183LLU,903LLU,720LLU),_1d2375913_Range16(4969LLU,4977LLU,1LLU),_1d2375913_Range16(6618LLU,6618LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__OTHER_ID_START = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(6277LLU,6278LLU,1LLU),_1d2375913_Range16(8472LLU,8494LLU,22LLU),_1d2375913_Range16(12443LLU,12444LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__OTHER_LOWERCASE = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(170LLU,186LLU,16LLU),_1d2375913_Range16(688LLU,696LLU,1LLU),_1d2375913_Range16(704LLU,705LLU,1LLU),_1d2375913_Range16(736LLU,740LLU,1LLU),_1d2375913_Range16(837LLU,890LLU,53LLU),_1d2375913_Range16(4348LLU,7468LLU,3120LLU),_1d2375913_Range16(7469LLU,7530LLU,1LLU),_1d2375913_Range16(7544LLU,7579LLU,35LLU),_1d2375913_Range16(7580LLU,7615LLU,1LLU),_1d2375913_Range16(8305LLU,8319LLU,14LLU),_1d2375913_Range16(8336LLU,8348LLU,1LLU),_1d2375913_Range16(8560LLU,8575LLU,1LLU),_1d2375913_Range16(9424LLU,9449LLU,1LLU),_1d2375913_Range16(11388LLU,11389LLU,1LLU),_1d2375913_Range16(42652LLU,42653LLU,1LLU),_1d2375913_Range16(42864LLU,42994LLU,130LLU),_1d2375913_Range16(42995LLU,42996LLU,1LLU),_1d2375913_Range16(43000LLU,43001LLU,1LLU),_1d2375913_Range16(43868LLU,43871LLU,1LLU),_1d2375913_Range16(43881LLU,43881LLU,1LLU)}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(67456LLU,67459LLU,3LLU),_1d2375913_Range32(67460LLU,67461LLU,1LLU),_1d2375913_Range32(67463LLU,67504LLU,1LLU),_1d2375913_Range32(67506LLU,67514LLU,1LLU),_1d2375913_Range32(122928LLU,122989LLU,1LLU)}),1LL));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__OTHER_MATH = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(94LLU,976LLU,882LLU),_1d2375913_Range16(977LLU,978LLU,1LLU),_1d2375913_Range16(981LLU,1008LLU,27LLU),_1d2375913_Range16(1009LLU,1012LLU,3LLU),_1d2375913_Range16(1013LLU,8214LLU,7201LLU),_1d2375913_Range16(8242LLU,8244LLU,1LLU),_1d2375913_Range16(8256LLU,8289LLU,33LLU),_1d2375913_Range16(8290LLU,8292LLU,1LLU),_1d2375913_Range16(8317LLU,8318LLU,1LLU),_1d2375913_Range16(8333LLU,8334LLU,1LLU),_1d2375913_Range16(8400LLU,8412LLU,1LLU),_1d2375913_Range16(8417LLU,8421LLU,4LLU),_1d2375913_Range16(8422LLU,8427LLU,5LLU),_1d2375913_Range16(8428LLU,8431LLU,1LLU),_1d2375913_Range16(8450LLU,8455LLU,5LLU),_1d2375913_Range16(8458LLU,8467LLU,1LLU),_1d2375913_Range16(8469LLU,8473LLU,4LLU),_1d2375913_Range16(8474LLU,8477LLU,1LLU),_1d2375913_Range16(8484LLU,8488LLU,4LLU),_1d2375913_Range16(8489LLU,8492LLU,3LLU),_1d2375913_Range16(8493LLU,8495LLU,2LLU),_1d2375913_Range16(8496LLU,8497LLU,1LLU),_1d2375913_Range16(8499LLU,8504LLU,1LLU),_1d2375913_Range16(8508LLU,8511LLU,1LLU),_1d2375913_Range16(8517LLU,8521LLU,1LLU),_1d2375913_Range16(8597LLU,8601LLU,1LLU),_1d2375913_Range16(8604LLU,8607LLU,1LLU),_1d2375913_Range16(8609LLU,8610LLU,1LLU),_1d2375913_Range16(8612LLU,8613LLU,1LLU),_1d2375913_Range16(8615LLU,8617LLU,2LLU),_1d2375913_Range16(8618LLU,8621LLU,1LLU),_1d2375913_Range16(8624LLU,8625LLU,1LLU),_1d2375913_Range16(8630LLU,8631LLU,1LLU),_1d2375913_Range16(8636LLU,8653LLU,1LLU),_1d2375913_Range16(8656LLU,8657LLU,1LLU),_1d2375913_Range16(8659LLU,8661LLU,2LLU),_1d2375913_Range16(8662LLU,8667LLU,1LLU),_1d2375913_Range16(8669LLU,8676LLU,7LLU),_1d2375913_Range16(8677LLU,8968LLU,291LLU),_1d2375913_Range16(8969LLU,8971LLU,1LLU),_1d2375913_Range16(9140LLU,9141LLU,1LLU),_1d2375913_Range16(9143LLU,9168LLU,25LLU),_1d2375913_Range16(9186LLU,9632LLU,446LLU),_1d2375913_Range16(9633LLU,9646LLU,13LLU),_1d2375913_Range16(9647LLU,9654LLU,1LLU),_1d2375913_Range16(9660LLU,9664LLU,1LLU),_1d2375913_Range16(9670LLU,9671LLU,1LLU),_1d2375913_Range16(9674LLU,9675LLU,1LLU),_1d2375913_Range16(9679LLU,9683LLU,1LLU),_1d2375913_Range16(9698LLU,9700LLU,2LLU),_1d2375913_Range16(9703LLU,9708LLU,1LLU),_1d2375913_Range16(9733LLU,9734LLU,1LLU),_1d2375913_Range16(9792LLU,9794LLU,2LLU),_1d2375913_Range16(9824LLU,9827LLU,1LLU),_1d2375913_Range16(9837LLU,9838LLU,1LLU),_1d2375913_Range16(10181LLU,10182LLU,1LLU),_1d2375913_Range16(10214LLU,10223LLU,1LLU),_1d2375913_Range16(10627LLU,10648LLU,1LLU),_1d2375913_Range16(10712LLU,10715LLU,1LLU),_1d2375913_Range16(10748LLU,10749LLU,1LLU),_1d2375913_Range16(65121LLU,65123LLU,2LLU),_1d2375913_Range16(65128LLU,65340LLU,212LLU),_1d2375913_Range16(65342LLU,65342LLU,1LLU)}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(119808LLU,119892LLU,1LLU),_1d2375913_Range32(119894LLU,119964LLU,1LLU),_1d2375913_Range32(119966LLU,119967LLU,1LLU),_1d2375913_Range32(119970LLU,119973LLU,3LLU),_1d2375913_Range32(119974LLU,119977LLU,3LLU),_1d2375913_Range32(119978LLU,119980LLU,1LLU),_1d2375913_Range32(119982LLU,119993LLU,1LLU),_1d2375913_Range32(119995LLU,119997LLU,2LLU),_1d2375913_Range32(119998LLU,120003LLU,1LLU),_1d2375913_Range32(120005LLU,120069LLU,1LLU),_1d2375913_Range32(120071LLU,120074LLU,1LLU),_1d2375913_Range32(120077LLU,120084LLU,1LLU),_1d2375913_Range32(120086LLU,120092LLU,1LLU),_1d2375913_Range32(120094LLU,120121LLU,1LLU),_1d2375913_Range32(120123LLU,120126LLU,1LLU),_1d2375913_Range32(120128LLU,120132LLU,1LLU),_1d2375913_Range32(120134LLU,120138LLU,4LLU),_1d2375913_Range32(120139LLU,120144LLU,1LLU),_1d2375913_Range32(120146LLU,120485LLU,1LLU),_1d2375913_Range32(120488LLU,120512LLU,1LLU),_1d2375913_Range32(120514LLU,120538LLU,1LLU),_1d2375913_Range32(120540LLU,120570LLU,1LLU),_1d2375913_Range32(120572LLU,120596LLU,1LLU),_1d2375913_Range32(120598LLU,120628LLU,1LLU),_1d2375913_Range32(120630LLU,120654LLU,1LLU),_1d2375913_Range32(120656LLU,120686LLU,1LLU),_1d2375913_Range32(120688LLU,120712LLU,1LLU),_1d2375913_Range32(120714LLU,120744LLU,1LLU),_1d2375913_Range32(120746LLU,120770LLU,1LLU),_1d2375913_Range32(120772LLU,120779LLU,1LLU),_1d2375913_Range32(120782LLU,120831LLU,1LLU),_1d2375913_Range32(126464LLU,126467LLU,1LLU),_1d2375913_Range32(126469LLU,126495LLU,1LLU),_1d2375913_Range32(126497LLU,126498LLU,1LLU),_1d2375913_Range32(126500LLU,126503LLU,3LLU),_1d2375913_Range32(126505LLU,126514LLU,1LLU),_1d2375913_Range32(126516LLU,126519LLU,1LLU),_1d2375913_Range32(126521LLU,126523LLU,2LLU),_1d2375913_Range32(126530LLU,126535LLU,5LLU),_1d2375913_Range32(126537LLU,126541LLU,2LLU),_1d2375913_Range32(126542LLU,126543LLU,1LLU),_1d2375913_Range32(126545LLU,126546LLU,1LLU),_1d2375913_Range32(126548LLU,126551LLU,3LLU),_1d2375913_Range32(126553LLU,126561LLU,2LLU),_1d2375913_Range32(126562LLU,126564LLU,2LLU),_1d2375913_Range32(126567LLU,126570LLU,1LLU),_1d2375913_Range32(126572LLU,126578LLU,1LLU),_1d2375913_Range32(126580LLU,126583LLU,1LLU),_1d2375913_Range32(126585LLU,126588LLU,1LLU),_1d2375913_Range32(126590LLU,126592LLU,2LLU),_1d2375913_Range32(126593LLU,126601LLU,1LLU),_1d2375913_Range32(126603LLU,126619LLU,1LLU),_1d2375913_Range32(126625LLU,126627LLU,1LLU),_1d2375913_Range32(126629LLU,126633LLU,1LLU),_1d2375913_Range32(126635LLU,126651LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__OTHER_UPPERCASE = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(8544LLU,8559LLU,1LLU),_1d2375913_Range16(9398LLU,9423LLU,1LLU)}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(127280LLU,127305LLU,1LLU),_1d2375913_Range32(127312LLU,127337LLU,1LLU),_1d2375913_Range32(127344LLU,127369LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__PATTERN_SYNTAX = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(33LLU,47LLU,1LLU),_1d2375913_Range16(58LLU,64LLU,1LLU),_1d2375913_Range16(91LLU,94LLU,1LLU),_1d2375913_Range16(96LLU,123LLU,27LLU),_1d2375913_Range16(124LLU,126LLU,1LLU),_1d2375913_Range16(161LLU,167LLU,1LLU),_1d2375913_Range16(169LLU,171LLU,2LLU),_1d2375913_Range16(172LLU,176LLU,2LLU),_1d2375913_Range16(177LLU,187LLU,5LLU),_1d2375913_Range16(191LLU,215LLU,24LLU),_1d2375913_Range16(247LLU,8208LLU,7961LLU),_1d2375913_Range16(8209LLU,8231LLU,1LLU),_1d2375913_Range16(8240LLU,8254LLU,1LLU),_1d2375913_Range16(8257LLU,8275LLU,1LLU),_1d2375913_Range16(8277LLU,8286LLU,1LLU),_1d2375913_Range16(8592LLU,9311LLU,1LLU),_1d2375913_Range16(9472LLU,10101LLU,1LLU),_1d2375913_Range16(10132LLU,11263LLU,1LLU),_1d2375913_Range16(11776LLU,11903LLU,1LLU),_1d2375913_Range16(12289LLU,12291LLU,1LLU),_1d2375913_Range16(12296LLU,12320LLU,1LLU),_1d2375913_Range16(12336LLU,64830LLU,52494LLU),_1d2375913_Range16(64831LLU,65093LLU,262LLU),_1d2375913_Range16(65094LLU,65094LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),10LL));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__PATTERN_WHITE_SPACE = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(9LLU,13LLU,1LLU),_1d2375913_Range16(32LLU,133LLU,101LLU),_1d2375913_Range16(8206LLU,8207LLU,1LLU),_1d2375913_Range16(8232LLU,8233LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),2LL));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__PREPENDED_CONCATENATION_MARK = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(1536LLU,1541LLU,1LLU),_1d2375913_Range16(1757LLU,1807LLU,50LLU),_1d2375913_Range16(2192LLU,2193LLU,1LLU),_1d2375913_Range16(2274LLU,2274LLU,1LLU)}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(69821LLU,69837LLU,16LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__QUOTATION_MARK = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(34LLU,39LLU,5LLU),_1d2375913_Range16(171LLU,187LLU,16LLU),_1d2375913_Range16(8216LLU,8223LLU,1LLU),_1d2375913_Range16(8249LLU,8250LLU,1LLU),_1d2375913_Range16(11842LLU,12300LLU,458LLU),_1d2375913_Range16(12301LLU,12303LLU,1LLU),_1d2375913_Range16(12317LLU,12319LLU,1LLU),_1d2375913_Range16(65089LLU,65092LLU,1LLU),_1d2375913_Range16(65282LLU,65287LLU,5LLU),_1d2375913_Range16(65378LLU,65379LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),2LL));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__RADICAL = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(11904LLU,11929LLU,1LLU),_1d2375913_Range16(11931LLU,12019LLU,1LLU),_1d2375913_Range16(12032LLU,12245LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__REGIONAL_INDICATOR = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(127462LLU,127487LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__SENTENCE_TERMINAL = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(33LLU,46LLU,13LLU),_1d2375913_Range16(63LLU,1417LLU,1354LLU),_1d2375913_Range16(1565LLU,1567LLU,1LLU),_1d2375913_Range16(1748LLU,1792LLU,44LLU),_1d2375913_Range16(1793LLU,1794LLU,1LLU),_1d2375913_Range16(2041LLU,2103LLU,62LLU),_1d2375913_Range16(2105LLU,2109LLU,4LLU),_1d2375913_Range16(2110LLU,2404LLU,294LLU),_1d2375913_Range16(2405LLU,4170LLU,1765LLU),_1d2375913_Range16(4171LLU,4962LLU,791LLU),_1d2375913_Range16(4967LLU,4968LLU,1LLU),_1d2375913_Range16(5742LLU,5941LLU,199LLU),_1d2375913_Range16(5942LLU,6147LLU,205LLU),_1d2375913_Range16(6153LLU,6468LLU,315LLU),_1d2375913_Range16(6469LLU,6824LLU,355LLU),_1d2375913_Range16(6825LLU,6827LLU,1LLU),_1d2375913_Range16(7002LLU,7003LLU,1LLU),_1d2375913_Range16(7006LLU,7007LLU,1LLU),_1d2375913_Range16(7037LLU,7038LLU,1LLU),_1d2375913_Range16(7227LLU,7228LLU,1LLU),_1d2375913_Range16(7294LLU,7295LLU,1LLU),_1d2375913_Range16(8252LLU,8253LLU,1LLU),_1d2375913_Range16(8263LLU,8265LLU,1LLU),_1d2375913_Range16(11822LLU,11836LLU,14LLU),_1d2375913_Range16(11859LLU,11860LLU,1LLU),_1d2375913_Range16(12290LLU,42239LLU,29949LLU),_1d2375913_Range16(42510LLU,42511LLU,1LLU),_1d2375913_Range16(42739LLU,42743LLU,4LLU),_1d2375913_Range16(43126LLU,43127LLU,1LLU),_1d2375913_Range16(43214LLU,43215LLU,1LLU),_1d2375913_Range16(43311LLU,43464LLU,153LLU),_1d2375913_Range16(43465LLU,43613LLU,148LLU),_1d2375913_Range16(43614LLU,43615LLU,1LLU),_1d2375913_Range16(43760LLU,43761LLU,1LLU),_1d2375913_Range16(44011LLU,65106LLU,21095LLU),_1d2375913_Range16(65110LLU,65111LLU,1LLU),_1d2375913_Range16(65281LLU,65294LLU,13LLU),_1d2375913_Range16(65311LLU,65377LLU,66LLU)}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(68182LLU,68183LLU,1LLU),_1d2375913_Range32(69461LLU,69465LLU,1LLU),_1d2375913_Range32(69510LLU,69513LLU,1LLU),_1d2375913_Range32(69703LLU,69704LLU,1LLU),_1d2375913_Range32(69822LLU,69825LLU,1LLU),_1d2375913_Range32(69953LLU,69955LLU,1LLU),_1d2375913_Range32(70085LLU,70086LLU,1LLU),_1d2375913_Range32(70093LLU,70110LLU,17LLU),_1d2375913_Range32(70111LLU,70200LLU,89LLU),_1d2375913_Range32(70201LLU,70203LLU,2LLU),_1d2375913_Range32(70204LLU,70313LLU,109LLU),_1d2375913_Range32(70731LLU,70732LLU,1LLU),_1d2375913_Range32(71106LLU,71107LLU,1LLU),_1d2375913_Range32(71113LLU,71127LLU,1LLU),_1d2375913_Range32(71233LLU,71234LLU,1LLU),_1d2375913_Range32(71484LLU,71486LLU,1LLU),_1d2375913_Range32(72004LLU,72006LLU,2LLU),_1d2375913_Range32(72258LLU,72259LLU,1LLU),_1d2375913_Range32(72347LLU,72348LLU,1LLU),_1d2375913_Range32(72769LLU,72770LLU,1LLU),_1d2375913_Range32(73463LLU,73464LLU,1LLU),_1d2375913_Range32(73539LLU,73540LLU,1LLU),_1d2375913_Range32(92782LLU,92783LLU,1LLU),_1d2375913_Range32(92917LLU,92983LLU,66LLU),_1d2375913_Range32(92984LLU,92996LLU,12LLU),_1d2375913_Range32(93848LLU,113823LLU,19975LLU),_1d2375913_Range32(121480LLU,121480LLU,1LLU)}),1LL));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__SOFT_DOTTED = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(105LLU,106LLU,1LLU),_1d2375913_Range16(303LLU,585LLU,282LLU),_1d2375913_Range16(616LLU,669LLU,53LLU),_1d2375913_Range16(690LLU,1011LLU,321LLU),_1d2375913_Range16(1110LLU,1112LLU,2LLU),_1d2375913_Range16(7522LLU,7574LLU,52LLU),_1d2375913_Range16(7588LLU,7592LLU,4LLU),_1d2375913_Range16(7725LLU,7883LLU,158LLU),_1d2375913_Range16(8305LLU,8520LLU,215LLU),_1d2375913_Range16(8521LLU,11388LLU,2867LLU)}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(119842LLU,119843LLU,1LLU),_1d2375913_Range32(119894LLU,119895LLU,1LLU),_1d2375913_Range32(119946LLU,119947LLU,1LLU),_1d2375913_Range32(119998LLU,119999LLU,1LLU),_1d2375913_Range32(120050LLU,120051LLU,1LLU),_1d2375913_Range32(120102LLU,120103LLU,1LLU),_1d2375913_Range32(120154LLU,120155LLU,1LLU),_1d2375913_Range32(120206LLU,120207LLU,1LLU),_1d2375913_Range32(120258LLU,120259LLU,1LLU),_1d2375913_Range32(120310LLU,120311LLU,1LLU),_1d2375913_Range32(120362LLU,120363LLU,1LLU),_1d2375913_Range32(120414LLU,120415LLU,1LLU),_1d2375913_Range32(120466LLU,120467LLU,1LLU),_1d2375913_Range32(122650LLU,122956LLU,306LLU),_1d2375913_Range32(122957LLU,122984LLU,27LLU)}),1LL));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__TERMINAL_PUNCTUATION = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(33LLU,44LLU,11LLU),_1d2375913_Range16(46LLU,58LLU,12LLU),_1d2375913_Range16(59LLU,63LLU,4LLU),_1d2375913_Range16(894LLU,903LLU,9LLU),_1d2375913_Range16(1417LLU,1475LLU,58LLU),_1d2375913_Range16(1548LLU,1563LLU,15LLU),_1d2375913_Range16(1565LLU,1567LLU,1LLU),_1d2375913_Range16(1748LLU,1792LLU,44LLU),_1d2375913_Range16(1793LLU,1802LLU,1LLU),_1d2375913_Range16(1804LLU,2040LLU,236LLU),_1d2375913_Range16(2041LLU,2096LLU,55LLU),_1d2375913_Range16(2097LLU,2110LLU,1LLU),_1d2375913_Range16(2142LLU,2404LLU,262LLU),_1d2375913_Range16(2405LLU,3674LLU,1269LLU),_1d2375913_Range16(3675LLU,3848LLU,173LLU),_1d2375913_Range16(3853LLU,3858LLU,1LLU),_1d2375913_Range16(4170LLU,4171LLU,1LLU),_1d2375913_Range16(4961LLU,4968LLU,1LLU),_1d2375913_Range16(5742LLU,5867LLU,125LLU),_1d2375913_Range16(5868LLU,5869LLU,1LLU),_1d2375913_Range16(5941LLU,5942LLU,1LLU),_1d2375913_Range16(6100LLU,6102LLU,1LLU),_1d2375913_Range16(6106LLU,6146LLU,40LLU),_1d2375913_Range16(6147LLU,6149LLU,1LLU),_1d2375913_Range16(6152LLU,6153LLU,1LLU),_1d2375913_Range16(6468LLU,6469LLU,1LLU),_1d2375913_Range16(6824LLU,6827LLU,1LLU),_1d2375913_Range16(7002LLU,7003LLU,1LLU),_1d2375913_Range16(7005LLU,7007LLU,1LLU),_1d2375913_Range16(7037LLU,7038LLU,1LLU),_1d2375913_Range16(7227LLU,7231LLU,1LLU),_1d2375913_Range16(7294LLU,7295LLU,1LLU),_1d2375913_Range16(8252LLU,8253LLU,1LLU),_1d2375913_Range16(8263LLU,8265LLU,1LLU),_1d2375913_Range16(11822LLU,11836LLU,14LLU),_1d2375913_Range16(11841LLU,11852LLU,11LLU),_1d2375913_Range16(11854LLU,11855LLU,1LLU),_1d2375913_Range16(11859LLU,11860LLU,1LLU),_1d2375913_Range16(12289LLU,12290LLU,1LLU),_1d2375913_Range16(42238LLU,42239LLU,1LLU),_1d2375913_Range16(42509LLU,42511LLU,1LLU),_1d2375913_Range16(42739LLU,42743LLU,1LLU),_1d2375913_Range16(43126LLU,43127LLU,1LLU),_1d2375913_Range16(43214LLU,43215LLU,1LLU),_1d2375913_Range16(43311LLU,43463LLU,152LLU),_1d2375913_Range16(43464LLU,43465LLU,1LLU),_1d2375913_Range16(43613LLU,43615LLU,1LLU),_1d2375913_Range16(43743LLU,43760LLU,17LLU),_1d2375913_Range16(43761LLU,44011LLU,250LLU),_1d2375913_Range16(65104LLU,65106LLU,1LLU),_1d2375913_Range16(65108LLU,65111LLU,1LLU),_1d2375913_Range16(65281LLU,65292LLU,11LLU),_1d2375913_Range16(65294LLU,65306LLU,12LLU),_1d2375913_Range16(65307LLU,65311LLU,4LLU),_1d2375913_Range16(65377LLU,65380LLU,3LLU)}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(66463LLU,66512LLU,49LLU),_1d2375913_Range32(67671LLU,67871LLU,200LLU),_1d2375913_Range32(68182LLU,68183LLU,1LLU),_1d2375913_Range32(68336LLU,68341LLU,1LLU),_1d2375913_Range32(68410LLU,68415LLU,1LLU),_1d2375913_Range32(68505LLU,68508LLU,1LLU),_1d2375913_Range32(69461LLU,69465LLU,1LLU),_1d2375913_Range32(69510LLU,69513LLU,1LLU),_1d2375913_Range32(69703LLU,69709LLU,1LLU),_1d2375913_Range32(69822LLU,69825LLU,1LLU),_1d2375913_Range32(69953LLU,69955LLU,1LLU),_1d2375913_Range32(70085LLU,70086LLU,1LLU),_1d2375913_Range32(70093LLU,70110LLU,17LLU),_1d2375913_Range32(70111LLU,70200LLU,89LLU),_1d2375913_Range32(70201LLU,70204LLU,1LLU),_1d2375913_Range32(70313LLU,70731LLU,418LLU),_1d2375913_Range32(70732LLU,70733LLU,1LLU),_1d2375913_Range32(70746LLU,70747LLU,1LLU),_1d2375913_Range32(71106LLU,71109LLU,1LLU),_1d2375913_Range32(71113LLU,71127LLU,1LLU),_1d2375913_Range32(71233LLU,71234LLU,1LLU),_1d2375913_Range32(71484LLU,71486LLU,1LLU),_1d2375913_Range32(72004LLU,72006LLU,2LLU),_1d2375913_Range32(72258LLU,72259LLU,1LLU),_1d2375913_Range32(72347LLU,72348LLU,1LLU),_1d2375913_Range32(72353LLU,72354LLU,1LLU),_1d2375913_Range32(72769LLU,72771LLU,1LLU),_1d2375913_Range32(72817LLU,73463LLU,646LLU),_1d2375913_Range32(73464LLU,73539LLU,75LLU),_1d2375913_Range32(73540LLU,74864LLU,1324LLU),_1d2375913_Range32(74865LLU,74868LLU,1LLU),_1d2375913_Range32(92782LLU,92783LLU,1LLU),_1d2375913_Range32(92917LLU,92983LLU,66LLU),_1d2375913_Range32(92984LLU,92985LLU,1LLU),_1d2375913_Range32(92996LLU,93847LLU,851LLU),_1d2375913_Range32(93848LLU,113823LLU,19975LLU),_1d2375913_Range32(121479LLU,121482LLU,1LLU)}),3LL));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__UNIFIED_IDEOGRAPH = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(13312LLU,19903LLU,1LLU),_1d2375913_Range16(19968LLU,40959LLU,1LLU),_1d2375913_Range16(64014LLU,64015LLU,1LLU),_1d2375913_Range16(64017LLU,64019LLU,2LLU),_1d2375913_Range16(64020LLU,64031LLU,11LLU),_1d2375913_Range16(64033LLU,64035LLU,2LLU),_1d2375913_Range16(64036LLU,64039LLU,3LLU),_1d2375913_Range16(64040LLU,64041LLU,1LLU)}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(131072LLU,173791LLU,1LLU),_1d2375913_Range32(173824LLU,177977LLU,1LLU),_1d2375913_Range32(177984LLU,178205LLU,1LLU),_1d2375913_Range32(178208LLU,183969LLU,1LLU),_1d2375913_Range32(183984LLU,191456LLU,1LLU),_1d2375913_Range32(196608LLU,201546LLU,1LLU),_1d2375913_Range32(201552LLU,205743LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__VARIATION_SELECTOR = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(6155LLU,6157LLU,1LLU),_1d2375913_Range16(6159LLU,65024LLU,58865LLU),_1d2375913_Range16(65025LLU,65039LLU,1LLU)}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(917760LLU,917999LLU,1LLU)}),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31__WHITE_SPACE = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(9LLU,13LLU,1LLU),_1d2375913_Range16(32LLU,133LLU,101LLU),_1d2375913_Range16(160LLU,5760LLU,5600LLU),_1d2375913_Range16(8192LLU,8202LLU,1LLU),_1d2375913_Range16(8232LLU,8233LLU,1LLU),_1d2375913_Range16(8239LLU,8287LLU,48LLU),_1d2375913_Range16(12288LLU,12288LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),2LL));
static jule::Array<jule::U16,128> _1d2264c31_ASCII_FOLD = jule::Array<jule::U16,128>({0LLU,1LLU,2LLU,3LLU,4LLU,5LLU,6LLU,7LLU,8LLU,9LLU,10LLU,11LLU,12LLU,13LLU,14LLU,15LLU,16LLU,17LLU,18LLU,19LLU,20LLU,21LLU,22LLU,23LLU,24LLU,25LLU,26LLU,27LLU,28LLU,29LLU,30LLU,31LLU,32LLU,33LLU,34LLU,35LLU,36LLU,37LLU,38LLU,39LLU,40LLU,41LLU,42LLU,43LLU,44LLU,45LLU,46LLU,47LLU,48LLU,49LLU,50LLU,51LLU,52LLU,53LLU,54LLU,55LLU,56LLU,57LLU,58LLU,59LLU,60LLU,61LLU,62LLU,63LLU,64LLU,97LLU,98LLU,99LLU,100LLU,101LLU,102LLU,103LLU,104LLU,105LLU,106LLU,107LLU,108LLU,109LLU,110LLU,111LLU,112LLU,113LLU,114LLU,115LLU,116LLU,117LLU,118LLU,119LLU,120LLU,121LLU,122LLU,91LLU,92LLU,93LLU,94LLU,95LLU,96LLU,65LLU,66LLU,67LLU,68LLU,69LLU,70LLU,71LLU,72LLU,73LLU,74LLU,8490LLU,76LLU,77LLU,78LLU,79LLU,80LLU,81LLU,82LLU,383LLU,84LLU,85LLU,86LLU,87LLU,88LLU,89LLU,90LLU,123LLU,124LLU,125LLU,126LLU,127LLU});
static jule::Slice<_1d2375913_FoldPair> _1d2264c31_CASE_ORBIT = jule::Slice<_1d2375913_FoldPair>({_1d2375913_FoldPair(75LLU,107LLU),_1d2375913_FoldPair(83LLU,115LLU),_1d2375913_FoldPair(107LLU,8490LLU),_1d2375913_FoldPair(115LLU,383LLU),_1d2375913_FoldPair(181LLU,924LLU),_1d2375913_FoldPair(197LLU,229LLU),_1d2375913_FoldPair(223LLU,7838LLU),_1d2375913_FoldPair(229LLU,8491LLU),_1d2375913_FoldPair(304LLU,304LLU),_1d2375913_FoldPair(305LLU,305LLU),_1d2375913_FoldPair(383LLU,83LLU),_1d2375913_FoldPair(452LLU,453LLU),_1d2375913_FoldPair(453LLU,454LLU),_1d2375913_FoldPair(454LLU,452LLU),_1d2375913_FoldPair(455LLU,456LLU),_1d2375913_FoldPair(456LLU,457LLU),_1d2375913_FoldPair(457LLU,455LLU),_1d2375913_FoldPair(458LLU,459LLU),_1d2375913_FoldPair(459LLU,460LLU),_1d2375913_FoldPair(460LLU,458LLU),_1d2375913_FoldPair(497LLU,498LLU),_1d2375913_FoldPair(498LLU,499LLU),_1d2375913_FoldPair(499LLU,497LLU),_1d2375913_FoldPair(837LLU,921LLU),_1d2375913_FoldPair(914LLU,946LLU),_1d2375913_FoldPair(917LLU,949LLU),_1d2375913_FoldPair(920LLU,952LLU),_1d2375913_FoldPair(921LLU,953LLU),_1d2375913_FoldPair(922LLU,954LLU),_1d2375913_FoldPair(924LLU,956LLU),_1d2375913_FoldPair(928LLU,960LLU),_1d2375913_FoldPair(929LLU,961LLU),_1d2375913_FoldPair(931LLU,962LLU),_1d2375913_FoldPair(934LLU,966LLU),_1d2375913_FoldPair(937LLU,969LLU),_1d2375913_FoldPair(946LLU,976LLU),_1d2375913_FoldPair(949LLU,1013LLU),_1d2375913_FoldPair(952LLU,977LLU),_1d2375913_FoldPair(953LLU,8126LLU),_1d2375913_FoldPair(954LLU,1008LLU),_1d2375913_FoldPair(956LLU,181LLU),_1d2375913_FoldPair(960LLU,982LLU),_1d2375913_FoldPair(961LLU,1009LLU),_1d2375913_FoldPair(962LLU,963LLU),_1d2375913_FoldPair(963LLU,931LLU),_1d2375913_FoldPair(966LLU,981LLU),_1d2375913_FoldPair(969LLU,8486LLU),_1d2375913_FoldPair(976LLU,914LLU),_1d2375913_FoldPair(977LLU,1012LLU),_1d2375913_FoldPair(981LLU,934LLU),_1d2375913_FoldPair(982LLU,928LLU),_1d2375913_FoldPair(1008LLU,922LLU),_1d2375913_FoldPair(1009LLU,929LLU),_1d2375913_FoldPair(1012LLU,920LLU),_1d2375913_FoldPair(1013LLU,917LLU),_1d2375913_FoldPair(1042LLU,1074LLU),_1d2375913_FoldPair(1044LLU,1076LLU),_1d2375913_FoldPair(1054LLU,1086LLU),_1d2375913_FoldPair(1057LLU,1089LLU),_1d2375913_FoldPair(1058LLU,1090LLU),_1d2375913_FoldPair(1066LLU,1098LLU),_1d2375913_FoldPair(1074LLU,7296LLU),_1d2375913_FoldPair(1076LLU,7297LLU),_1d2375913_FoldPair(1086LLU,7298LLU),_1d2375913_FoldPair(1089LLU,7299LLU),_1d2375913_FoldPair(1090LLU,7300LLU),_1d2375913_FoldPair(1098LLU,7302LLU),_1d2375913_FoldPair(1122LLU,1123LLU),_1d2375913_FoldPair(1123LLU,7303LLU),_1d2375913_FoldPair(7296LLU,1042LLU),_1d2375913_FoldPair(7297LLU,1044LLU),_1d2375913_FoldPair(7298LLU,1054LLU),_1d2375913_FoldPair(7299LLU,1057LLU),_1d2375913_FoldPair(7300LLU,7301LLU),_1d2375913_FoldPair(7301LLU,1058LLU),_1d2375913_FoldPair(7302LLU,1066LLU),_1d2375913_FoldPair(7303LLU,1122LLU),_1d2375913_FoldPair(7304LLU,42570LLU),_1d2375913_FoldPair(7776LLU,7777LLU),_1d2375913_FoldPair(7777LLU,7835LLU),_1d2375913_FoldPair(7835LLU,7776LLU),_1d2375913_FoldPair(7838LLU,223LLU),_1d2375913_FoldPair(8126LLU,837LLU),_1d2375913_FoldPair(8486LLU,937LLU),_1d2375913_FoldPair(8490LLU,75LLU),_1d2375913_FoldPair(8491LLU,197LLU),_1d2375913_FoldPair(42570LLU,42571LLU),_1d2375913_FoldPair(42571LLU,7304LLU)});
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_FOLD_L = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(837LLU,837LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_FOLD_LL = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(65LLU,90LLU,1LLU),_1d2375913_Range16(192LLU,214LLU,1LLU),_1d2375913_Range16(216LLU,222LLU,1LLU),_1d2375913_Range16(256LLU,302LLU,2LLU),_1d2375913_Range16(306LLU,310LLU,2LLU),_1d2375913_Range16(313LLU,327LLU,2LLU),_1d2375913_Range16(330LLU,376LLU,2LLU),_1d2375913_Range16(377LLU,381LLU,2LLU),_1d2375913_Range16(385LLU,386LLU,1LLU),_1d2375913_Range16(388LLU,390LLU,2LLU),_1d2375913_Range16(391LLU,393LLU,2LLU),_1d2375913_Range16(394LLU,395LLU,1LLU),_1d2375913_Range16(398LLU,401LLU,1LLU),_1d2375913_Range16(403LLU,404LLU,1LLU),_1d2375913_Range16(406LLU,408LLU,1LLU),_1d2375913_Range16(412LLU,413LLU,1LLU),_1d2375913_Range16(415LLU,416LLU,1LLU),_1d2375913_Range16(418LLU,422LLU,2LLU),_1d2375913_Range16(423LLU,425LLU,2LLU),_1d2375913_Range16(428LLU,430LLU,2LLU),_1d2375913_Range16(431LLU,433LLU,2LLU),_1d2375913_Range16(434LLU,435LLU,1LLU),_1d2375913_Range16(437LLU,439LLU,2LLU),_1d2375913_Range16(440LLU,444LLU,4LLU),_1d2375913_Range16(452LLU,453LLU,1LLU),_1d2375913_Range16(455LLU,456LLU,1LLU),_1d2375913_Range16(458LLU,459LLU,1LLU),_1d2375913_Range16(461LLU,475LLU,2LLU),_1d2375913_Range16(478LLU,494LLU,2LLU),_1d2375913_Range16(497LLU,498LLU,1LLU),_1d2375913_Range16(500LLU,502LLU,2LLU),_1d2375913_Range16(503LLU,504LLU,1LLU),_1d2375913_Range16(506LLU,562LLU,2LLU),_1d2375913_Range16(570LLU,571LLU,1LLU),_1d2375913_Range16(573LLU,574LLU,1LLU),_1d2375913_Range16(577LLU,579LLU,2LLU),_1d2375913_Range16(580LLU,582LLU,1LLU),_1d2375913_Range16(584LLU,590LLU,2LLU),_1d2375913_Range16(837LLU,880LLU,43LLU),_1d2375913_Range16(882LLU,886LLU,4LLU),_1d2375913_Range16(895LLU,902LLU,7LLU),_1d2375913_Range16(904LLU,906LLU,1LLU),_1d2375913_Range16(908LLU,910LLU,2LLU),_1d2375913_Range16(911LLU,913LLU,2LLU),_1d2375913_Range16(914LLU,929LLU,1LLU),_1d2375913_Range16(931LLU,939LLU,1LLU),_1d2375913_Range16(975LLU,984LLU,9LLU),_1d2375913_Range16(986LLU,1006LLU,2LLU),_1d2375913_Range16(1012LLU,1015LLU,3LLU),_1d2375913_Range16(1017LLU,1018LLU,1LLU),_1d2375913_Range16(1021LLU,1071LLU,1LLU),_1d2375913_Range16(1120LLU,1152LLU,2LLU),_1d2375913_Range16(1162LLU,1216LLU,2LLU),_1d2375913_Range16(1217LLU,1229LLU,2LLU),_1d2375913_Range16(1232LLU,1326LLU,2LLU),_1d2375913_Range16(1329LLU,1366LLU,1LLU),_1d2375913_Range16(4256LLU,4293LLU,1LLU),_1d2375913_Range16(4295LLU,4301LLU,6LLU),_1d2375913_Range16(5024LLU,5109LLU,1LLU),_1d2375913_Range16(7312LLU,7354LLU,1LLU),_1d2375913_Range16(7357LLU,7359LLU,1LLU),_1d2375913_Range16(7680LLU,7828LLU,2LLU),_1d2375913_Range16(7838LLU,7934LLU,2LLU),_1d2375913_Range16(7944LLU,7951LLU,1LLU),_1d2375913_Range16(7960LLU,7965LLU,1LLU),_1d2375913_Range16(7976LLU,7983LLU,1LLU),_1d2375913_Range16(7992LLU,7999LLU,1LLU),_1d2375913_Range16(8008LLU,8013LLU,1LLU),_1d2375913_Range16(8025LLU,8031LLU,2LLU),_1d2375913_Range16(8040LLU,8047LLU,1LLU),_1d2375913_Range16(8072LLU,8079LLU,1LLU),_1d2375913_Range16(8088LLU,8095LLU,1LLU),_1d2375913_Range16(8104LLU,8111LLU,1LLU),_1d2375913_Range16(8120LLU,8124LLU,1LLU),_1d2375913_Range16(8136LLU,8140LLU,1LLU),_1d2375913_Range16(8152LLU,8155LLU,1LLU),_1d2375913_Range16(8168LLU,8172LLU,1LLU),_1d2375913_Range16(8184LLU,8188LLU,1LLU),_1d2375913_Range16(8486LLU,8490LLU,4LLU),_1d2375913_Range16(8491LLU,8498LLU,7LLU),_1d2375913_Range16(8579LLU,11264LLU,2685LLU),_1d2375913_Range16(11265LLU,11311LLU,1LLU),_1d2375913_Range16(11360LLU,11362LLU,2LLU),_1d2375913_Range16(11363LLU,11364LLU,1LLU),_1d2375913_Range16(11367LLU,11373LLU,2LLU),_1d2375913_Range16(11374LLU,11376LLU,1LLU),_1d2375913_Range16(11378LLU,11381LLU,3LLU),_1d2375913_Range16(11390LLU,11392LLU,1LLU),_1d2375913_Range16(11394LLU,11490LLU,2LLU),_1d2375913_Range16(11499LLU,11501LLU,2LLU),_1d2375913_Range16(11506LLU,42560LLU,31054LLU),_1d2375913_Range16(42562LLU,42604LLU,2LLU),_1d2375913_Range16(42624LLU,42650LLU,2LLU),_1d2375913_Range16(42786LLU,42798LLU,2LLU),_1d2375913_Range16(42802LLU,42862LLU,2LLU),_1d2375913_Range16(42873LLU,42877LLU,2LLU),_1d2375913_Range16(42878LLU,42886LLU,2LLU),_1d2375913_Range16(42891LLU,42893LLU,2LLU),_1d2375913_Range16(42896LLU,42898LLU,2LLU),_1d2375913_Range16(42902LLU,42922LLU,2LLU),_1d2375913_Range16(42923LLU,42926LLU,1LLU),_1d2375913_Range16(42928LLU,42932LLU,1LLU),_1d2375913_Range16(42934LLU,42948LLU,2LLU),_1d2375913_Range16(42949LLU,42951LLU,1LLU),_1d2375913_Range16(42953LLU,42960LLU,7LLU),_1d2375913_Range16(42966LLU,42968LLU,2LLU),_1d2375913_Range16(42997LLU,65313LLU,22316LLU),_1d2375913_Range16(65314LLU,65338LLU,1LLU)}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(66560LLU,66599LLU,1LLU),_1d2375913_Range32(66736LLU,66771LLU,1LLU),_1d2375913_Range32(66928LLU,66938LLU,1LLU),_1d2375913_Range32(66940LLU,66954LLU,1LLU),_1d2375913_Range32(66956LLU,66962LLU,1LLU),_1d2375913_Range32(66964LLU,66965LLU,1LLU),_1d2375913_Range32(68736LLU,68786LLU,1LLU),_1d2375913_Range32(71840LLU,71871LLU,1LLU),_1d2375913_Range32(93760LLU,93791LLU,1LLU),_1d2375913_Range32(125184LLU,125217LLU,1LLU)}),3LL));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_FOLD_LT = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(452LLU,454LLU,2LLU),_1d2375913_Range16(455LLU,457LLU,2LLU),_1d2375913_Range16(458LLU,460LLU,2LLU),_1d2375913_Range16(497LLU,499LLU,2LLU),_1d2375913_Range16(8064LLU,8071LLU,1LLU),_1d2375913_Range16(8080LLU,8087LLU,1LLU),_1d2375913_Range16(8096LLU,8103LLU,1LLU),_1d2375913_Range16(8115LLU,8131LLU,16LLU),_1d2375913_Range16(8179LLU,8179LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_FOLD_LU = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(97LLU,122LLU,1LLU),_1d2375913_Range16(181LLU,223LLU,42LLU),_1d2375913_Range16(224LLU,246LLU,1LLU),_1d2375913_Range16(248LLU,255LLU,1LLU),_1d2375913_Range16(257LLU,303LLU,2LLU),_1d2375913_Range16(307LLU,311LLU,2LLU),_1d2375913_Range16(314LLU,328LLU,2LLU),_1d2375913_Range16(331LLU,375LLU,2LLU),_1d2375913_Range16(378LLU,382LLU,2LLU),_1d2375913_Range16(383LLU,384LLU,1LLU),_1d2375913_Range16(387LLU,389LLU,2LLU),_1d2375913_Range16(392LLU,396LLU,4LLU),_1d2375913_Range16(402LLU,405LLU,3LLU),_1d2375913_Range16(409LLU,410LLU,1LLU),_1d2375913_Range16(414LLU,417LLU,3LLU),_1d2375913_Range16(419LLU,421LLU,2LLU),_1d2375913_Range16(424LLU,429LLU,5LLU),_1d2375913_Range16(432LLU,436LLU,4LLU),_1d2375913_Range16(438LLU,441LLU,3LLU),_1d2375913_Range16(445LLU,447LLU,2LLU),_1d2375913_Range16(453LLU,454LLU,1LLU),_1d2375913_Range16(456LLU,457LLU,1LLU),_1d2375913_Range16(459LLU,460LLU,1LLU),_1d2375913_Range16(462LLU,476LLU,2LLU),_1d2375913_Range16(477LLU,495LLU,2LLU),_1d2375913_Range16(498LLU,499LLU,1LLU),_1d2375913_Range16(501LLU,505LLU,4LLU),_1d2375913_Range16(507LLU,543LLU,2LLU),_1d2375913_Range16(547LLU,563LLU,2LLU),_1d2375913_Range16(572LLU,575LLU,3LLU),_1d2375913_Range16(576LLU,578LLU,2LLU),_1d2375913_Range16(583LLU,591LLU,2LLU),_1d2375913_Range16(592LLU,596LLU,1LLU),_1d2375913_Range16(598LLU,599LLU,1LLU),_1d2375913_Range16(601LLU,603LLU,2LLU),_1d2375913_Range16(604LLU,608LLU,4LLU),_1d2375913_Range16(609LLU,613LLU,2LLU),_1d2375913_Range16(614LLU,616LLU,2LLU),_1d2375913_Range16(617LLU,620LLU,1LLU),_1d2375913_Range16(623LLU,625LLU,2LLU),_1d2375913_Range16(626LLU,629LLU,3LLU),_1d2375913_Range16(637LLU,640LLU,3LLU),_1d2375913_Range16(642LLU,643LLU,1LLU),_1d2375913_Range16(647LLU,652LLU,1LLU),_1d2375913_Range16(658LLU,669LLU,11LLU),_1d2375913_Range16(670LLU,837LLU,167LLU),_1d2375913_Range16(881LLU,883LLU,2LLU),_1d2375913_Range16(887LLU,891LLU,4LLU),_1d2375913_Range16(892LLU,893LLU,1LLU),_1d2375913_Range16(940LLU,943LLU,1LLU),_1d2375913_Range16(945LLU,974LLU,1LLU),_1d2375913_Range16(976LLU,977LLU,1LLU),_1d2375913_Range16(981LLU,983LLU,1LLU),_1d2375913_Range16(985LLU,1007LLU,2LLU),_1d2375913_Range16(1008LLU,1011LLU,1LLU),_1d2375913_Range16(1013LLU,1019LLU,3LLU),_1d2375913_Range16(1072LLU,1119LLU,1LLU),_1d2375913_Range16(1121LLU,1153LLU,2LLU),_1d2375913_Range16(1163LLU,1215LLU,2LLU),_1d2375913_Range16(1218LLU,1230LLU,2LLU),_1d2375913_Range16(1231LLU,1327LLU,2LLU),_1d2375913_Range16(1377LLU,1414LLU,1LLU),_1d2375913_Range16(4304LLU,4346LLU,1LLU),_1d2375913_Range16(4349LLU,4351LLU,1LLU),_1d2375913_Range16(5112LLU,5117LLU,1LLU),_1d2375913_Range16(7296LLU,7304LLU,1LLU),_1d2375913_Range16(7545LLU,7549LLU,4LLU),_1d2375913_Range16(7566LLU,7681LLU,115LLU),_1d2375913_Range16(7683LLU,7829LLU,2LLU),_1d2375913_Range16(7835LLU,7841LLU,6LLU),_1d2375913_Range16(7843LLU,7935LLU,2LLU),_1d2375913_Range16(7936LLU,7943LLU,1LLU),_1d2375913_Range16(7952LLU,7957LLU,1LLU),_1d2375913_Range16(7968LLU,7975LLU,1LLU),_1d2375913_Range16(7984LLU,7991LLU,1LLU),_1d2375913_Range16(8000LLU,8005LLU,1LLU),_1d2375913_Range16(8017LLU,8023LLU,2LLU),_1d2375913_Range16(8032LLU,8039LLU,1LLU),_1d2375913_Range16(8048LLU,8061LLU,1LLU),_1d2375913_Range16(8112LLU,8113LLU,1LLU),_1d2375913_Range16(8126LLU,8144LLU,18LLU),_1d2375913_Range16(8145LLU,8160LLU,15LLU),_1d2375913_Range16(8161LLU,8165LLU,4LLU),_1d2375913_Range16(8526LLU,8580LLU,54LLU),_1d2375913_Range16(11312LLU,11359LLU,1LLU),_1d2375913_Range16(11361LLU,11365LLU,4LLU),_1d2375913_Range16(11366LLU,11372LLU,2LLU),_1d2375913_Range16(11379LLU,11382LLU,3LLU),_1d2375913_Range16(11393LLU,11491LLU,2LLU),_1d2375913_Range16(11500LLU,11502LLU,2LLU),_1d2375913_Range16(11507LLU,11520LLU,13LLU),_1d2375913_Range16(11521LLU,11557LLU,1LLU),_1d2375913_Range16(11559LLU,11565LLU,6LLU),_1d2375913_Range16(42561LLU,42605LLU,2LLU),_1d2375913_Range16(42625LLU,42651LLU,2LLU),_1d2375913_Range16(42787LLU,42799LLU,2LLU),_1d2375913_Range16(42803LLU,42863LLU,2LLU),_1d2375913_Range16(42874LLU,42876LLU,2LLU),_1d2375913_Range16(42879LLU,42887LLU,2LLU),_1d2375913_Range16(42892LLU,42897LLU,5LLU),_1d2375913_Range16(42899LLU,42900LLU,1LLU),_1d2375913_Range16(42903LLU,42921LLU,2LLU),_1d2375913_Range16(42933LLU,42947LLU,2LLU),_1d2375913_Range16(42952LLU,42954LLU,2LLU),_1d2375913_Range16(42961LLU,42967LLU,6LLU),_1d2375913_Range16(42969LLU,42998LLU,29LLU),_1d2375913_Range16(43859LLU,43888LLU,29LLU),_1d2375913_Range16(43889LLU,43967LLU,1LLU),_1d2375913_Range16(65345LLU,65370LLU,1LLU)}),jule::Slice<_1d2375913_Range32>({_1d2375913_Range32(66600LLU,66639LLU,1LLU),_1d2375913_Range32(66776LLU,66811LLU,1LLU),_1d2375913_Range32(66967LLU,66977LLU,1LLU),_1d2375913_Range32(66979LLU,66993LLU,1LLU),_1d2375913_Range32(66995LLU,67001LLU,1LLU),_1d2375913_Range32(67003LLU,67004LLU,1LLU),_1d2375913_Range32(68800LLU,68850LLU,1LLU),_1d2375913_Range32(71872LLU,71903LLU,1LLU),_1d2375913_Range32(93792LLU,93823LLU,1LLU),_1d2375913_Range32(125218LLU,125251LLU,1LLU)}),4LL));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_FOLD_M = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(921LLU,953LLU,32LLU),_1d2375913_Range16(8126LLU,8126LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_FOLD_MN = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(921LLU,953LLU,32LLU),_1d2375913_Range16(8126LLU,8126LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_FOLD_COMMON = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(924LLU,956LLU,32LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_FOLD_GREEK = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(181LLU,837LLU,656LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_FOLD_INHERITED = jule::new_struct<_1d2375913_RangeTable>(new( std::nothrow ) _1d2375913_RangeTable(jule::Slice<_1d2375913_Range16>({_1d2375913_Range16(921LLU,953LLU,32LLU),_1d2375913_Range16(8126LLU,8126LLU,1LLU)}),jule::Slice<_1d2375913_Range32>(),jule::Int()));
static jule::Array<jule::I32,33> _1d1da4277_PUNCTS = jule::Array<jule::I32,33>({'!','#','$',',','.','\'','\"',':',';','<','>','=','?','-','+','*','(',')','[',']','{','}','%','&','/','\\','@','^','_','`','|','~',166LL});
static jule::Array<jule::I32,5> _1d1da4277_SPACES = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
static jule::Array<jule::Str,6> _1d1da4277_UNARY_OPS = jule::Array<jule::Str,6>({jule::Str("-", 1),jule::Str("+", 1),jule::Str("^", 1),jule::Str("!", 1),jule::Str("*", 1),jule::Str("&", 1)});
static jule::Array<jule::Str,13> _1d1da4277_BIN_OPS = jule::Array<jule::Str,13>({jule::Str("+", 1),jule::Str("-", 1),jule::Str("*", 1),jule::Str("/", 1),jule::Str("%", 1),jule::Str("&", 1),jule::Str("|", 1),jule::Str("^", 1),jule::Str("<", 1),jule::Str(">", 1),jule::Str("!", 1),jule::Str("&&", 2),jule::Str("||", 2)});
static jule::Array<jule::Str,2> _1d1da4277_WEAK_OPS = jule::Array<jule::Str,2>({jule::Str("...", 3),jule::Str(":", 1)});
static jule::Array<jule::Str,2> _1d1da4277_POSTFIX_OPS = jule::Array<jule::Str,2>({jule::Str("++", 2),jule::Str("--", 2)});
static jule::Array<jule::Str,11> _1d1da4277_ASSING_OPS = jule::Array<jule::Str,11>({jule::Str("=", 1),jule::Str("+=", 2),jule::Str("-=", 2),jule::Str("/=", 2),jule::Str("*=", 2),jule::Str("%=", 2),jule::Str(">>=", 3),jule::Str("<<=", 3),jule::Str("|=", 2),jule::Str("&=", 2),jule::Str("^=", 2)});
static jule::Array<_1d215b155_KindPair,46> _1d215b155_KEYWORDS = jule::Array<_1d215b155_KindPair,46>({_1d215b155_KindPair(jule::Str("i8", 2),1LLU),_1d215b155_KindPair(jule::Str("i16", 3),1LLU),_1d215b155_KindPair(jule::Str("i32", 3),1LLU),_1d215b155_KindPair(jule::Str("i64", 3),1LLU),_1d215b155_KindPair(jule::Str("u8", 2),1LLU),_1d215b155_KindPair(jule::Str("u16", 3),1LLU),_1d215b155_KindPair(jule::Str("u32", 3),1LLU),_1d215b155_KindPair(jule::Str("u64", 3),1LLU),_1d215b155_KindPair(jule::Str("f32", 3),1LLU),_1d215b155_KindPair(jule::Str("f64", 3),1LLU),_1d215b155_KindPair(jule::Str("uint", 4),1LLU),_1d215b155_KindPair(jule::Str("int", 3),1LLU),_1d215b155_KindPair(jule::Str("uintptr", 7),1LLU),_1d215b155_KindPair(jule::Str("bool", 4),1LLU),_1d215b155_KindPair(jule::Str("str", 3),1LLU),_1d215b155_KindPair(jule::Str("any", 3),1LLU),_1d215b155_KindPair(jule::Str("true", 4),6LLU),_1d215b155_KindPair(jule::Str("false", 5),6LLU),_1d215b155_KindPair(jule::Str("nil", 3),6LLU),_1d215b155_KindPair(jule::Str("const", 5),9LLU),_1d215b155_KindPair(jule::Str("ret", 3),4LLU),_1d215b155_KindPair(jule::Str("type", 4),10LLU),_1d215b155_KindPair(jule::Str("for", 3),12LLU),_1d215b155_KindPair(jule::Str("break", 5),13LLU),_1d215b155_KindPair(jule::Str("continue", 8),14LLU),_1d215b155_KindPair(jule::Str("in", 2),15LLU),_1d215b155_KindPair(jule::Str("if", 2),16LLU),_1d215b155_KindPair(jule::Str("else", 4),17LLU),_1d215b155_KindPair(jule::Str("use", 3),19LLU),_1d215b155_KindPair(jule::Str("pub", 3),21LLU),_1d215b155_KindPair(jule::Str("goto", 4),22LLU),_1d215b155_KindPair(jule::Str("enum", 4),24LLU),_1d215b155_KindPair(jule::Str("struct", 6),25LLU),_1d215b155_KindPair(jule::Str("co", 2),26LLU),_1d215b155_KindPair(jule::Str("match", 5),27LLU),_1d215b155_KindPair(jule::Str("self", 4),28LLU),_1d215b155_KindPair(jule::Str("trait", 5),29LLU),_1d215b155_KindPair(jule::Str("impl", 4),30LLU),_1d215b155_KindPair(jule::Str("cpp", 3),31LLU),_1d215b155_KindPair(jule::Str("fall", 4),32LLU),_1d215b155_KindPair(jule::Str("fn", 2),33LLU),_1d215b155_KindPair(jule::Str("let", 3),34LLU),_1d215b155_KindPair(jule::Str("unsafe", 6),35LLU),_1d215b155_KindPair(jule::Str("mut", 3),36LLU),_1d215b155_KindPair(jule::Str("defer", 5),37LLU),_1d215b155_KindPair(jule::Str("static", 6),38LLU)});
static jule::Array<_1d215b155_KindPair,38> _1d215b155_BASIC_OPS = jule::Array<_1d215b155_KindPair,38>({_1d215b155_KindPair(jule::Str("::", 2),23LLU),_1d215b155_KindPair(jule::Str(":", 1),11LLU),_1d215b155_KindPair(jule::Str(";", 1),5LLU),_1d215b155_KindPair(jule::Str(",", 1),8LLU),_1d215b155_KindPair(jule::Str("...", 3),7LLU),_1d215b155_KindPair(jule::Str(".", 1),20LLU),_1d215b155_KindPair(jule::Str("+=", 2),7LLU),_1d215b155_KindPair(jule::Str("-=", 2),7LLU),_1d215b155_KindPair(jule::Str("*=", 2),7LLU),_1d215b155_KindPair(jule::Str("/=", 2),7LLU),_1d215b155_KindPair(jule::Str("%=", 2),7LLU),_1d215b155_KindPair(jule::Str("<<=", 3),7LLU),_1d215b155_KindPair(jule::Str(">>=", 3),7LLU),_1d215b155_KindPair(jule::Str("^=", 2),7LLU),_1d215b155_KindPair(jule::Str("&=", 2),7LLU),_1d215b155_KindPair(jule::Str("|=", 2),7LLU),_1d215b155_KindPair(jule::Str("==", 2),7LLU),_1d215b155_KindPair(jule::Str("!=", 2),7LLU),_1d215b155_KindPair(jule::Str(">=", 2),7LLU),_1d215b155_KindPair(jule::Str("<=", 2),7LLU),_1d215b155_KindPair(jule::Str("&&", 2),7LLU),_1d215b155_KindPair(jule::Str("||", 2),7LLU),_1d215b155_KindPair(jule::Str("<<", 2),7LLU),_1d215b155_KindPair(jule::Str(">>", 2),7LLU),_1d215b155_KindPair(jule::Str("++", 2),7LLU),_1d215b155_KindPair(jule::Str("--", 2),7LLU),_1d215b155_KindPair(jule::Str("+", 1),7LLU),_1d215b155_KindPair(jule::Str("-", 1),7LLU),_1d215b155_KindPair(jule::Str("*", 1),7LLU),_1d215b155_KindPair(jule::Str("/", 1),7LLU),_1d215b155_KindPair(jule::Str("%", 1),7LLU),_1d215b155_KindPair(jule::Str("&", 1),7LLU),_1d215b155_KindPair(jule::Str("|", 1),7LLU),_1d215b155_KindPair(jule::Str("^", 1),7LLU),_1d215b155_KindPair(jule::Str("!", 1),7LLU),_1d215b155_KindPair(jule::Str("<", 1),7LLU),_1d215b155_KindPair(jule::Str(">", 1),7LLU),_1d215b155_KindPair(jule::Str("=", 1),7LLU)});
static jule::Ref<_1d21d97ee_FnIns> _1b9c0b525_BUILTIN_FN_OUT = jule::new_struct<_1d21d97ee_FnIns>(new( std::nothrow ) _1d21d97ee_FnIns());
static jule::Ref<_1d21d97ee_FnIns> _1b9c0b525_BUILTIN_FN_OUTLN = jule::new_struct<_1d21d97ee_FnIns>(new( std::nothrow ) _1d21d97ee_FnIns());
static jule::Ref<_1d21d97ee_FnIns> _1b9c0b525_BUILTIN_FN_NEW = jule::new_struct<_1d21d97ee_FnIns>(new( std::nothrow ) _1d21d97ee_FnIns());
static jule::Ref<_1d21d97ee_FnIns> _1b9c0b525_BUILTIN_FN_DROP = jule::new_struct<_1d21d97ee_FnIns>(new( std::nothrow ) _1d21d97ee_FnIns());
static jule::Ref<_1d21d97ee_FnIns> _1b9c0b525_BUILTIN_FN_PANIC = jule::new_struct<_1d21d97ee_FnIns>(new( std::nothrow ) _1d21d97ee_FnIns());
static jule::Ref<_1d21d97ee_FnIns> _1b9c0b525_BUILTIN_FN_MAKE = jule::new_struct<_1d21d97ee_FnIns>(new( std::nothrow ) _1d21d97ee_FnIns());
static jule::Ref<_1d21d97ee_FnIns> _1b9c0b525_BUILTIN_FN_APPEND = jule::new_struct<_1d21d97ee_FnIns>(new( std::nothrow ) _1d21d97ee_FnIns());
static jule::Ref<_1d21d97ee_FnIns> _1b9c0b525_BUILTIN_FN_RECOVER = jule::new_struct<_1d21d97ee_FnIns>(new( std::nothrow ) _1d21d97ee_FnIns());
static jule::Ref<_1d21d97ee_FnIns> _1b9c0b525_BUILTIN_FN_CLONE = jule::new_struct<_1d21d97ee_FnIns>(new( std::nothrow ) _1d21d97ee_FnIns());
static jule::Ref<_1d21d97ee_FnIns> _1b9c0b525_BUILTIN_FN_STD_MEM_SIZE_OF = jule::new_struct<_1d21d97ee_FnIns>(new( std::nothrow ) _1d21d97ee_FnIns());
static jule::Ref<_1d21d97ee_FnIns> _1b9c0b525_BUILTIN_FN_STD_MEM_ALIGN_OF = jule::new_struct<_1d21d97ee_FnIns>(new( std::nothrow ) _1d21d97ee_FnIns());
static jule::Ref<_1d21d97ee_FnIns> _1b9c0b525_BUILTIN_FN_STD_JULE_INTEGRATED_TO_STR = jule::new_struct<_1d21d97ee_FnIns>(new( std::nothrow ) _1d21d97ee_FnIns());
static jule::Ref<_1d21d97ee_FnIns> _1b9c0b525_BUILTIN_FN_REAL = jule::new_struct<_1d21d97ee_FnIns>(new( std::nothrow ) _1d21d97ee_FnIns(jule::Ref<_1d21c0b59_StructIns>(),jule::Ref<_1d21d97ee_Fn>(),jule::Slice<jule::Ref<_1b951b088_TypeKind>>(),jule::Slice<jule::Ref<_1d21d97ee_ParamIns>>(),jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_1b951b088_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1b8cd2c4b_Scope>(),jule::Ref<_1b8b10cbb_ReferenceStack>(),jule::Ref<_1b8b10cbb_ReferenceStack>(),jule::Fn<jule::Ref<_1b9523799_Data>(jule::Ref<_1b9523799_Eval>&,jule::Ref<_1d1e5192e_FnCallExpr>&,jule::Ref<_1b9523799_Data>&)>(),jule::Bool(),jule::Bool()));
static jule::Ref<_1d21d97ee_FnIns> _1b9c0b525_BUILTIN_FN_COPY = jule::new_struct<_1d21d97ee_FnIns>(new( std::nothrow ) _1d21d97ee_FnIns(jule::Ref<_1d21c0b59_StructIns>(),jule::Ref<_1d21d97ee_Fn>(),jule::Slice<jule::Ref<_1b951b088_TypeKind>>(),jule::Slice<jule::Ref<_1d21d97ee_ParamIns>>(),jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_1b951b088_build_prim_type(jule::Str("int", 3)))),jule::Ref<_1b8cd2c4b_Scope>(),jule::Ref<_1b8b10cbb_ReferenceStack>(),jule::Ref<_1b8b10cbb_ReferenceStack>(),jule::Fn<jule::Ref<_1b9523799_Data>(jule::Ref<_1b9523799_Eval>&,jule::Ref<_1d1e5192e_FnCallExpr>&,jule::Ref<_1b9523799_Data>&)>(),jule::Bool(),jule::Bool()));
static jule::Ref<_1b951b088_TypeAlias> _1b9c0b525_BUILTIN_TYPE_ALIAS_BYTE = jule::new_struct<_1b951b088_TypeAlias>(new( std::nothrow ) _1b951b088_TypeAlias(jule::Ref<_1d1e5192e_ScopeTree>(),true,jule::Bool(),jule::Bool(),_1d1da4277_Token(),jule::Str(),jule::new_struct<_1b951b088_TypeSymbol>(new( std::nothrow ) _1b951b088_TypeSymbol(jule::Ref<_1d1e5192e_TypeDecl>(),jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_1b951b088_build_prim_type(jule::Str("u8", 2)))))),jule::Str(),jule::Slice<jule::Any>()));
static jule::Ref<_1b951b088_TypeAlias> _1b9c0b525_BUILTIN_TYPE_ALIAS_RUNE = jule::new_struct<_1b951b088_TypeAlias>(new( std::nothrow ) _1b951b088_TypeAlias(jule::Ref<_1d1e5192e_ScopeTree>(),true,jule::Bool(),jule::Bool(),_1d1da4277_Token(),jule::Str(),jule::new_struct<_1b951b088_TypeSymbol>(new( std::nothrow ) _1b951b088_TypeSymbol(jule::Ref<_1d1e5192e_TypeDecl>(),jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_1b951b088_build_prim_type(jule::Str("i32", 3)))))),jule::Str(),jule::Slice<jule::Any>()));
static jule::Ref<_1b8cd2894_Trait> _1b9c0b525_BUILTIN_TRAIT_ERROR = jule::new_struct<_1b8cd2894_Trait>(new( std::nothrow ) _1b8cd2894_Trait(_1d1da4277_Token(),jule::Str("Error", 5),true,jule::Bool(),jule::Str(),jule::Slice<jule::Ref<_1d21d97ee_Fn>>({jule::new_struct<_1d21d97ee_Fn>(new( std::nothrow ) _1d21d97ee_Fn(jule::Ref<_1b912748b_Sema>(),_1d1da4277_Token(),jule::Bool(),jule::Bool(),true,jule::Bool(),jule::Bool(),jule::Str("error", 5),jule::Slice<jule::Ref<_1d1e5192e_Directive>>(),jule::Str(),jule::Ref<_1d1e5192e_ScopeTree>(),jule::Slice<jule::Ref<_1d1e5192e_GenericDecl>>(),jule::new_struct<_1d21d97ee_RetType>(new( std::nothrow ) _1d21d97ee_RetType(jule::new_struct<_1b951b088_TypeSymbol>(new( std::nothrow ) _1b951b088_TypeSymbol(jule::new_struct<_1d1e5192e_TypeDecl>(new( std::nothrow ) _1d1e5192e_TypeDecl(_1d1da4277_Token(),jule::Any(jule::new_struct<_1d1e5192e_IdentTypeDecl>(new( std::nothrow ) _1d1e5192e_IdentTypeDecl(_1d1da4277_Token(),jule::Str("str", 3),jule::Bool(),jule::Slice<jule::Ref<_1d1e5192e_TypeDecl>>()))))),jule::Ref<_1b951b088_TypeKind>())),jule::Slice<_1d1da4277_Token>())),jule::Slice<jule::Ref<_1d21d97ee_Param>>({jule::new_struct<_1d21d97ee_Param>(new( std::nothrow ) _1d21d97ee_Param(_1d1da4277_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1b951b088_TypeSymbol>(),jule::Str("self", 4)))}),jule::Ref<_1d21c0b59_Struct>(),jule::Slice<jule::Ref<_1d21d97ee_FnIns>>()))}),jule::Slice<jule::Ref<_1d21c0b59_Struct>>()));
static jule::Ref<_1b8cd2894_Trait> _1b9c0b525_BUILTIN_TRAIT_DISPOSE = jule::new_struct<_1b8cd2894_Trait>(new( std::nothrow ) _1b8cd2894_Trait(_1d1da4277_Token(),jule::Str("Dispose", 7),true,jule::Bool(),jule::Str(),jule::Slice<jule::Ref<_1d21d97ee_Fn>>({jule::new_struct<_1d21d97ee_Fn>(new( std::nothrow ) _1d21d97ee_Fn(jule::Ref<_1b912748b_Sema>(),_1d1da4277_Token(),jule::Bool(),jule::Bool(),true,jule::Bool(),jule::Bool(),jule::Str("dispose", 7),jule::Slice<jule::Ref<_1d1e5192e_Directive>>(),jule::Str(),jule::Ref<_1d1e5192e_ScopeTree>(),jule::Slice<jule::Ref<_1d1e5192e_GenericDecl>>(),jule::Ref<_1d21d97ee_RetType>(),jule::Slice<jule::Ref<_1d21d97ee_Param>>({jule::new_struct<_1d21d97ee_Param>(new( std::nothrow ) _1d21d97ee_Param(_1d1da4277_Token(),true,jule::Bool(),jule::Bool(),jule::Ref<_1b951b088_TypeSymbol>(),jule::Str("self", 4)))}),jule::Ref<_1d21c0b59_Struct>(),jule::Slice<jule::Ref<_1d21d97ee_FnIns>>()))}),jule::Slice<jule::Ref<_1d21c0b59_Struct>>()));
static jule::Slice<jule::Str> _1d1956852_FLAGS = nullptr;
static jule::Slice<jule::Any> _1d0616dd7_deads = nullptr;
static jule::Slice<jule::Any> _1d0616dd7_checking = nullptr;
static jule::Any _1d0616dd7_current = jule::Any(nullptr);
static jule::Any _1d0616dd7_main_current = jule::Any(nullptr);
static jule::Array<jule::Int,12> _1ba3a81dd_MDAYS = jule::Array<jule::Int,12>({31LL,30LL,31LL,30LL,31LL,31LL,30LL,31LL,30LL,31LL,31LL,29LL});
static jule::U64 _1ba263eab_INDENT = 0LLU;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_CUNEIFORM = _1d2264c31__CUNEIFORM;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_CYPRIOT = _1d2264c31__CYPRIOT;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_CYPRO_MINOAN = _1d2264c31__CYPRO_MINOAN;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_CYRILLIC = _1d2264c31__CYRILLIC;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_DESERET = _1d2264c31__DESERET;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_DEVANAGARI = _1d2264c31__DEVANAGARI;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_DIVES_AKURU = _1d2264c31__DIVES_AKURU;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_DOGRA = _1d2264c31__DOGRA;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_DUPLOYAN = _1d2264c31__DUPLOYAN;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_EGYPTIAN_HIEROGLYPHS = _1d2264c31__EGYPTIAN_HIEROGLYPHS;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_ELBASAN = _1d2264c31__ELBASAN;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_ELYMAIC = _1d2264c31__ELYMAIC;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_ETHIOPIC = _1d2264c31__ETHIOPIC;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_GEORGIAN = _1d2264c31__GEORGIAN;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_GLAGOLITIC = _1d2264c31__GLAGOLITIC;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_GOTHIC = _1d2264c31__GOTHIC;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_GRANTHA = _1d2264c31__GRANTHA;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_GREEK = _1d2264c31__GREEK;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_GUJARATI = _1d2264c31__GUJARATI;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_GUNJALA_GONDI = _1d2264c31__GUNJALA_GONDI;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_GURMUKHI = _1d2264c31__GURMUKHI;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_HAN = _1d2264c31__HAN;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_HANGUL = _1d2264c31__HANGUL;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_HANIFI_ROHINGYA = _1d2264c31__HANIFI_ROHINGYA;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_HANUNOO = _1d2264c31__HANUNOO;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_HATRAN = _1d2264c31__HATRAN;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_HEBREW = _1d2264c31__HEBREW;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_HIRAGANA = _1d2264c31__HIRAGANA;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_IMPERIAL_ARAMAIC = _1d2264c31__IMPERIAL_ARAMAIC;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_INHERITED = _1d2264c31__INHERITED;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_INSCRIPTIONAL_PAHLAVI = _1d2264c31__INSCRIPTIONAL_PAHLAVI;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_INSCRIPTIONAL_PARTHIAN = _1d2264c31__INSCRIPTIONAL_PARTHIAN;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_JAVANESE = _1d2264c31__JAVANESE;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_KAITHI = _1d2264c31__KAITHI;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_KANNADA = _1d2264c31__KANNADA;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_KATAKANA = _1d2264c31__KATAKANA;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_KAWI = _1d2264c31__KAWI;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_KAYAH_LI = _1d2264c31__KAYAH_LI;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_KHAROSHTHI = _1d2264c31__KHAROSHTHI;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_KHITAN_SMALL_SCRIPT = _1d2264c31__KHITAN_SMALL_SCRIPT;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_KHMER = _1d2264c31__KHMER;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_KHOJKI = _1d2264c31__KHOJKI;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_KHUDAWADI = _1d2264c31__KHUDAWADI;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_LAO = _1d2264c31__LAO;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_LATIN = _1d2264c31__LATIN;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_LEPCHA = _1d2264c31__LEPCHA;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_LIMBU = _1d2264c31__LIMBU;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_LINEAR_A = _1d2264c31__LINEAR_A;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_LINEAR_B = _1d2264c31__LINEAR_B;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_LISU = _1d2264c31__LISU;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_LYCIAN = _1d2264c31__LYCIAN;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_LYDIAN = _1d2264c31__LYDIAN;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_MAHAJANI = _1d2264c31__MAHAJANI;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_MAKASAR = _1d2264c31__MAKASAR;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_MALAYALAM = _1d2264c31__MALAYALAM;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_MANDAIC = _1d2264c31__MANDAIC;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_MANICHAEAN = _1d2264c31__MANICHAEAN;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_MARCHEN = _1d2264c31__MARCHEN;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_MASARAM_GONDI = _1d2264c31__MASARAM_GONDI;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_MEDEFAIDRIN = _1d2264c31__MEDEFAIDRIN;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_MEETEI_MAYEK = _1d2264c31__MEETEI_MAYEK;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_MENDE_KIKAKUI = _1d2264c31__MENDE_KIKAKUI;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_MEROITIC_CURSIVE = _1d2264c31__MEROITIC_CURSIVE;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_MEROITIC_HIEROGLYPHS = _1d2264c31__MEROITIC_HIEROGLYPHS;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_MIAO = _1d2264c31__MIAO;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_MODI = _1d2264c31__MODI;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_MONGOLIAN = _1d2264c31__MONGOLIAN;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_MRO = _1d2264c31__MRO;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_MULTANI = _1d2264c31__MULTANI;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_MYANMAR = _1d2264c31__MYANMAR;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_NABATAEAN = _1d2264c31__NABATAEAN;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_NAG_MUNDARI = _1d2264c31__NAG_MUNDARI;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_NANDINAGARI = _1d2264c31__NANDINAGARI;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_NEW_TAI_LUE = _1d2264c31__NEW_TAI_LUE;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_NEWA = _1d2264c31__NEWA;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_NKO = _1d2264c31__NKO;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_NUSHU = _1d2264c31__NUSHU;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_NYIAKENG_PUACHUE_HMONG = _1d2264c31__NYIAKENG_PUACHUE_HMONG;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_OGHAM = _1d2264c31__OGHAM;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_OL_CHIKI = _1d2264c31__OL_CHIKI;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_OLD_HUNGARIAN = _1d2264c31__OLD_HUNGARIAN;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_OLD_ITALIC = _1d2264c31__OLD_ITALIC;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_OLD_NORTH_ARABIAN = _1d2264c31__OLD_NORTH_ARABIAN;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_OLD_PERMIC = _1d2264c31__OLD_PERMIC;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_OLD_PERSIAN = _1d2264c31__OLD_PERSIAN;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_OLD_SOGDIAN = _1d2264c31__OLD_SOGDIAN;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_OLD_SOUTH_ARABIAN = _1d2264c31__OLD_SOUTH_ARABIAN;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_OLD_TURKIC = _1d2264c31__OLD_TURKIC;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_OLD_UYGHUR = _1d2264c31__OLD_UYGHUR;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_ORIYA = _1d2264c31__ORIYA;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_OSAGE = _1d2264c31__OSAGE;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_OSMANYA = _1d2264c31__OSMANYA;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_PAHAWH_HMONG = _1d2264c31__PAHAWH_HMONG;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_PALMYRENE = _1d2264c31__PALMYRENE;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_PAU_CIN_HAU = _1d2264c31__PAU_CIN_HAU;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_PHAGS_PA = _1d2264c31__PHAGS_PA;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_PHOENICIAN = _1d2264c31__PHOENICIAN;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_PSALTER_PAHLAVI = _1d2264c31__PSALTER_PAHLAVI;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_REJANG = _1d2264c31__REJANG;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_RUNIC = _1d2264c31__RUNIC;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_SAMARITAN = _1d2264c31__SAMARITAN;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_SAURASHTRA = _1d2264c31__SAURASHTRA;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_SHARADA = _1d2264c31__SHARADA;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_SHAVIAN = _1d2264c31__SHAVIAN;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_SIDDHAM = _1d2264c31__SIDDHAM;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_SIGN_WRITING = _1d2264c31__SIGN_WRITING;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_SINHALA = _1d2264c31__SINHALA;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_SOGDIAN = _1d2264c31__SOGDIAN;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_SORA_SOMPENG = _1d2264c31__SORA_SOMPENG;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_SOYOMBO = _1d2264c31__SOYOMBO;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_SUNDANESE = _1d2264c31__SUNDANESE;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_SYLOTI_NAGRI = _1d2264c31__SYLOTI_NAGRI;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_SYRIAC = _1d2264c31__SYRIAC;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_TAGALOG = _1d2264c31__TAGALOG;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_TAGBANWA = _1d2264c31__TAGBANWA;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_TAI_LE = _1d2264c31__TAI_LE;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_TAI_THAM = _1d2264c31__TAI_THAM;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_TAI_VIET = _1d2264c31__TAI_VIET;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_TAKRI = _1d2264c31__TAKRI;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_TAMIL = _1d2264c31__TAMIL;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_TANGSA = _1d2264c31__TANGSA;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_TANGUT = _1d2264c31__TANGUT;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_TELUGU = _1d2264c31__TELUGU;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_THAANA = _1d2264c31__THAANA;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_THAI = _1d2264c31__THAI;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_TIBETAN = _1d2264c31__TIBETAN;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_TIFINAGH = _1d2264c31__TIFINAGH;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_TIRHUTA = _1d2264c31__TIRHUTA;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_TOTO = _1d2264c31__TOTO;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_UGARITIC = _1d2264c31__UGARITIC;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_VAI = _1d2264c31__VAI;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_VITHKUQI = _1d2264c31__VITHKUQI;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_WANCHO = _1d2264c31__WANCHO;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_WARANG_CITI = _1d2264c31__WARANG_CITI;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_YEZIDI = _1d2264c31__YEZIDI;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_YI = _1d2264c31__YI;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_ZANABAZAR_SQUARE = _1d2264c31__ZANABAZAR_SQUARE;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_CC = _1d2264c31__CC;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_CF = _1d2264c31__CF;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_CO = _1d2264c31__CO;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_CS = _1d2264c31__CS;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_DIGIT = _1d2264c31__ND;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_ND = _1d2264c31__ND;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_LETTER = _1d2264c31__L;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_L = _1d2264c31__L;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_LM = _1d2264c31__LM;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_LO = _1d2264c31__LO;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_LOWER = _1d2264c31__LL;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_LL = _1d2264c31__LL;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_MARK = _1d2264c31__M;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_M = _1d2264c31__M;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_MC = _1d2264c31__MC;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_ME = _1d2264c31__ME;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_MN = _1d2264c31__MN;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_NL = _1d2264c31__NL;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_NO = _1d2264c31__NO;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_NUMBER = _1d2264c31__N;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_N = _1d2264c31__N;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_OTHER = _1d2264c31__C;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_C = _1d2264c31__C;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_PC = _1d2264c31__PC;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_PD = _1d2264c31__PD;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_PE = _1d2264c31__PE;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_PF = _1d2264c31__PF;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_PI = _1d2264c31__PI;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_PO = _1d2264c31__PO;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_PS = _1d2264c31__PS;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_PUNCT = _1d2264c31__P;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_P = _1d2264c31__P;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_SC = _1d2264c31__SC;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_ASCII_HEX_DIGIT = _1d2264c31__ASCII_HEX_DIGIT;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_BIDI_CONTROL = _1d2264c31__BIDI_CONTROL;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_DASH = _1d2264c31__DASH;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_DEPRECATED = _1d2264c31__DEPRECATED;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_DIACRITIC = _1d2264c31__DIACRITIC;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_EXTENDER = _1d2264c31__EXTENDER;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_HEX_DIGIT = _1d2264c31__HEX_DIGIT;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_HYPHEN = _1d2264c31__HYPHEN;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_IDS_BINARY_OPERATOR = _1d2264c31__IDS_BINARY_OPERATOR;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_IDS_TRINARY_OPERATOR = _1d2264c31__IDS_TRINARY_OPERATOR;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_IDEOGRAPHIC = _1d2264c31__IDEOGRAPHIC;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_JOIN_CONTROL = _1d2264c31__JOIN_CONTROL;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_LOGICAL_ORDER_EXCEPTION = _1d2264c31__LOGICAL_ORDER_EXCEPTION;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_NONCHARACTER_CODE_POINT = _1d2264c31__NONCHARACTER_CODE_POINT;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_OTHER_ALPHABETIC = _1d2264c31__OTHER_ALPHABETIC;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_OTHER_DEFAULT_IGNORABLE_CODE_POINT = _1d2264c31__OTHER_DEFAULT_IGNORABLE_CODE_POINT;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_OTHER_GRAPHEME_EXTEND = _1d2264c31__OTHER_GRAPHEME_EXTEND;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_OTHER_ID_CONTINUE = _1d2264c31__OTHER_ID_CONTINUE;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_OTHER_ID_START = _1d2264c31__OTHER_ID_START;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_OTHER_LOWERCASE = _1d2264c31__OTHER_LOWERCASE;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_OTHER_MATH = _1d2264c31__OTHER_MATH;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_OTHER_UPPERCASE = _1d2264c31__OTHER_UPPERCASE;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_PATTERN_SYNTAX = _1d2264c31__PATTERN_SYNTAX;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_PATTERN_WHITE_SPACE = _1d2264c31__PATTERN_WHITE_SPACE;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_PREPENDED_CONCATENATION_MARK = _1d2264c31__PREPENDED_CONCATENATION_MARK;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_QUOTATION_MARK = _1d2264c31__QUOTATION_MARK;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_RADICAL = _1d2264c31__RADICAL;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_REGIONAL_INDICATOR = _1d2264c31__REGIONAL_INDICATOR;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_SENTENCE_TERMINAL = _1d2264c31__SENTENCE_TERMINAL;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_SOFT_DOTTED = _1d2264c31__SOFT_DOTTED;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_TERMINAL_PUNCTUATION = _1d2264c31__TERMINAL_PUNCTUATION;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_UNIFIED_IDEOGRAPH = _1d2264c31__UNIFIED_IDEOGRAPH;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_VARIATION_SELECTOR = _1d2264c31__VARIATION_SELECTOR;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_WHITE_SPACE = _1d2264c31__WHITE_SPACE;
static jule::Map<jule::Str,jule::Ref<_1d2375913_RangeTable>> _1d2264c31_PROPERTIES = jule::Map<jule::Str,jule::Ref<_1d2375913_RangeTable>>({{jule::Str("ASCII_HEX_DIGIT", 15),_1d2264c31_ASCII_HEX_DIGIT},{jule::Str("BIDI_CONTROL", 12),_1d2264c31_BIDI_CONTROL},{jule::Str("DASH", 4),_1d2264c31_DASH},{jule::Str("DEPRECATED", 10),_1d2264c31_DEPRECATED},{jule::Str("DIACRITIC", 9),_1d2264c31_DIACRITIC},{jule::Str("EXTENDER", 8),_1d2264c31_EXTENDER},{jule::Str("HEX_DIGIT", 9),_1d2264c31_HEX_DIGIT},{jule::Str("HYPHEN", 6),_1d2264c31_HYPHEN},{jule::Str("IDS_BINARY_OPERATOR", 19),_1d2264c31_IDS_BINARY_OPERATOR},{jule::Str("IDS_TRINARY_OPERATOR", 20),_1d2264c31_IDS_TRINARY_OPERATOR},{jule::Str("IDEOGRAPHIC", 11),_1d2264c31_IDEOGRAPHIC},{jule::Str("JOIN_CONTROL", 12),_1d2264c31_JOIN_CONTROL},{jule::Str("LOGICAL_ORDER_EXCEPTION", 23),_1d2264c31_LOGICAL_ORDER_EXCEPTION},{jule::Str("NONCHARACTER_CODE_POINT", 23),_1d2264c31_NONCHARACTER_CODE_POINT},{jule::Str("OTHER_ALPHABETIC", 16),_1d2264c31_OTHER_ALPHABETIC},{jule::Str("OTHER_DEFAULT_IGNORABLE_CODE_POINT", 34),_1d2264c31_OTHER_DEFAULT_IGNORABLE_CODE_POINT},{jule::Str("OTHER_GRAPHEME_EXTEND", 21),_1d2264c31_OTHER_GRAPHEME_EXTEND},{jule::Str("OTHER_ID_CONTINUE", 17),_1d2264c31_OTHER_ID_CONTINUE},{jule::Str("OTHER_ID_START", 14),_1d2264c31_OTHER_ID_START},{jule::Str("OTHER_LOWERCASE", 15),_1d2264c31_OTHER_LOWERCASE},{jule::Str("OTHER_MATH", 10),_1d2264c31_OTHER_MATH},{jule::Str("OTHER_UPPERCASE", 15),_1d2264c31_OTHER_UPPERCASE},{jule::Str("PATTERN_SYNTAX", 14),_1d2264c31_PATTERN_SYNTAX},{jule::Str("PATTERN_WHITE_SPACE", 19),_1d2264c31_PATTERN_WHITE_SPACE},{jule::Str("PREPENDED_CONCATENATION_MARK", 28),_1d2264c31_PREPENDED_CONCATENATION_MARK},{jule::Str("QUOTATION_MARK", 14),_1d2264c31_QUOTATION_MARK},{jule::Str("RADICAL", 7),_1d2264c31_RADICAL},{jule::Str("REGIONAL_INDICATOR", 18),_1d2264c31_REGIONAL_INDICATOR},{jule::Str("SENTENCE_TERMINAL", 17),_1d2264c31_SENTENCE_TERMINAL},{jule::Str("SOFT_DOTTED", 11),_1d2264c31_SOFT_DOTTED},{jule::Str("TERMINAL_PUNCTUATION", 20),_1d2264c31_TERMINAL_PUNCTUATION},{jule::Str("UNIFIED_IDEOGRAPH", 17),_1d2264c31_UNIFIED_IDEOGRAPH},{jule::Str("VARIATION_SELECTOR", 18),_1d2264c31_VARIATION_SELECTOR},{jule::Str("WHITE_SPACE", 11),_1d2264c31_WHITE_SPACE}});
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_SK = _1d2264c31__SK;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_SM = _1d2264c31__SM;
static jule::Map<jule::Str,jule::Ref<_1d2375913_RangeTable>> _1d2264c31_FOLD_CATEGORY = jule::Map<jule::Str,jule::Ref<_1d2375913_RangeTable>>({{jule::Str("L", 1),_1d2264c31_FOLD_L},{jule::Str("LL", 2),_1d2264c31_FOLD_LL},{jule::Str("LT", 2),_1d2264c31_FOLD_LT},{jule::Str("LU", 2),_1d2264c31_FOLD_LU},{jule::Str("M", 1),_1d2264c31_FOLD_M},{jule::Str("MN", 2),_1d2264c31_FOLD_MN}});
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_SO = _1d2264c31__SO;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_SPACE = _1d2264c31__Z;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_Z = _1d2264c31__Z;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_SYMBOL = _1d2264c31__S;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_S = _1d2264c31__S;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_TITLE = _1d2264c31__LT;
static jule::Map<jule::Str,jule::Ref<_1d2375913_RangeTable>> _1d2264c31_FOLD_SCRIPT = jule::Map<jule::Str,jule::Ref<_1d2375913_RangeTable>>({{jule::Str("Common", 6),_1d2264c31_FOLD_COMMON},{jule::Str("Greek", 5),_1d2264c31_FOLD_GREEK},{jule::Str("Inherited", 9),_1d2264c31_FOLD_INHERITED}});
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_LT = _1d2264c31__LT;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_UPPER = _1d2264c31__LU;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_LU = _1d2264c31__LU;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_ZL = _1d2264c31__ZL;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_ZP = _1d2264c31__ZP;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_ZS = _1d2264c31__ZS;
static jule::Slice<jule::Ref<_1d2375913_RangeTable>> _1d2264b43_GRAPHIC_RANGES = jule::Slice<jule::Ref<_1d2375913_RangeTable>>({_1d2264c31_L,_1d2264c31_M,_1d2264c31_N,_1d2264c31_P,_1d2264c31_S,_1d2264c31_ZS});
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_ADLAM = _1d2264c31__ADLAM;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_AHOM = _1d2264c31__AHOM;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_ANATOLIAN_HIEROGLYPHS = _1d2264c31__ANATOLIAN_HIEROGLYPHS;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_ARABIC = _1d2264c31__ARABIC;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_ARMENIAN = _1d2264c31__ARMENIAN;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_AVESTAN = _1d2264c31__AVESTAN;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_BALINESE = _1d2264c31__BALINESE;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_BAMUM = _1d2264c31__BAMUM;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_BASSA_VAH = _1d2264c31__BASSA_VAH;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_BATAK = _1d2264c31__BATAK;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_BENGALI = _1d2264c31__BENGALI;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_BHAIKSUKI = _1d2264c31__BHAIKSUKI;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_BOPOMOFO = _1d2264c31__BOPOMOFO;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_BRAHMI = _1d2264c31__BRAHMI;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_BRAILLE = _1d2264c31__BRAILLE;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_BUGINESE = _1d2264c31__BUGINESE;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_BUHID = _1d2264c31__BUHID;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_CANADIAN_ABORIGINAL = _1d2264c31__CANADIAN_ABORIGINAL;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_CARIAN = _1d2264c31__CARIAN;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_CAUCASIAN_ALBANIAN = _1d2264c31__CAUCASIAN_ALBANIAN;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_CHAKMA = _1d2264c31__CHAKMA;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_CHAM = _1d2264c31__CHAM;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_CHEROKEE = _1d2264c31__CHEROKEE;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_CHORASMIAN = _1d2264c31__CHORASMIAN;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_COMMON = _1d2264c31__COMMON;
static jule::Ref<_1d2375913_RangeTable> _1d2264c31_COPTIC = _1d2264c31__COPTIC;
static jule::Array<jule::Array<jule::Str,2>,4> _1d051806e_HELP_MAP = jule::Array<jule::Array<jule::Str,2>,4>({jule::Array<jule::Str,2>({jule::Str("help", 4),jule::Str("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str("version", 7),jule::Str("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str("tool", 4),jule::Str("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str("julenv", 6),jule::Str("Show information about native jule environment", 46)})});
static jule::Map<jule::Str,jule::Ref<_1d2375913_RangeTable>> _1d2264c31_CATEGORIES = jule::Map<jule::Str,jule::Ref<_1d2375913_RangeTable>>({{jule::Str("C", 1),_1d2264c31_C},{jule::Str("CC", 2),_1d2264c31_CC},{jule::Str("CF", 2),_1d2264c31_CF},{jule::Str("CO", 2),_1d2264c31_CO},{jule::Str("CS", 2),_1d2264c31_CS},{jule::Str("L", 1),_1d2264c31_L},{jule::Str("LL", 2),_1d2264c31_LL},{jule::Str("LM", 2),_1d2264c31_LM},{jule::Str("LO", 2),_1d2264c31_LO},{jule::Str("LT", 2),_1d2264c31_LT},{jule::Str("LU", 2),_1d2264c31_LU},{jule::Str("M", 1),_1d2264c31_M},{jule::Str("MC", 2),_1d2264c31_MC},{jule::Str("ME", 2),_1d2264c31_ME},{jule::Str("MN", 2),_1d2264c31_MN},{jule::Str("N", 1),_1d2264c31_N},{jule::Str("ND", 2),_1d2264c31_ND},{jule::Str("NL", 2),_1d2264c31_NL},{jule::Str("NO", 2),_1d2264c31_NO},{jule::Str("P", 1),_1d2264c31_P},{jule::Str("PC", 2),_1d2264c31_PC},{jule::Str("PD", 2),_1d2264c31_PD},{jule::Str("PE", 2),_1d2264c31_PE},{jule::Str("PF", 2),_1d2264c31_PF},{jule::Str("PI", 2),_1d2264c31_PI},{jule::Str("PO", 2),_1d2264c31_PO},{jule::Str("PS", 2),_1d2264c31_PS},{jule::Str("S", 1),_1d2264c31_S},{jule::Str("SC", 2),_1d2264c31_SC},{jule::Str("SK", 2),_1d2264c31_SK},{jule::Str("SM", 2),_1d2264c31_SM},{jule::Str("SO", 2),_1d2264c31_SO},{jule::Str("Z", 1),_1d2264c31_Z},{jule::Str("ZL", 2),_1d2264c31_ZL},{jule::Str("ZP", 2),_1d2264c31_ZP},{jule::Str("ZS", 2),_1d2264c31_ZS}});
static jule::Array<jule::U8,256> _1d2264c31__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});
static jule::Str _1d1c2a4b6_OS = jule::Str("darwin", 6);
static jule::Slice<_1d2375913_CaseRange> _1d2264c31__CASE_RANGES = jule::Slice<_1d2375913_CaseRange>({_1d2375913_CaseRange(65LLU,90LLU,jule::Array<jule::I32,3>({0LL,32LL,0LL})),_1d2375913_CaseRange(97LLU,122LLU,jule::Array<jule::I32,3>({-32LL,0LL,-32LL})),_1d2375913_CaseRange(181LLU,181LLU,jule::Array<jule::I32,3>({743LL,0LL,743LL})),_1d2375913_CaseRange(192LLU,214LLU,jule::Array<jule::I32,3>({0LL,32LL,0LL})),_1d2375913_CaseRange(216LLU,222LLU,jule::Array<jule::I32,3>({0LL,32LL,0LL})),_1d2375913_CaseRange(224LLU,246LLU,jule::Array<jule::I32,3>({-32LL,0LL,-32LL})),_1d2375913_CaseRange(248LLU,254LLU,jule::Array<jule::I32,3>({-32LL,0LL,-32LL})),_1d2375913_CaseRange(255LLU,255LLU,jule::Array<jule::I32,3>({121LL,0LL,121LL})),_1d2375913_CaseRange(256LLU,303LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1d2375913_CaseRange(304LLU,304LLU,jule::Array<jule::I32,3>({0LL,-199LL,0LL})),_1d2375913_CaseRange(305LLU,305LLU,jule::Array<jule::I32,3>({-232LL,0LL,-232LL})),_1d2375913_CaseRange(306LLU,311LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1d2375913_CaseRange(313LLU,328LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1d2375913_CaseRange(330LLU,375LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1d2375913_CaseRange(376LLU,376LLU,jule::Array<jule::I32,3>({0LL,-121LL,0LL})),_1d2375913_CaseRange(377LLU,382LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1d2375913_CaseRange(383LLU,383LLU,jule::Array<jule::I32,3>({-300LL,0LL,-300LL})),_1d2375913_CaseRange(384LLU,384LLU,jule::Array<jule::I32,3>({195LL,0LL,195LL})),_1d2375913_CaseRange(385LLU,385LLU,jule::Array<jule::I32,3>({0LL,210LL,0LL})),_1d2375913_CaseRange(386LLU,389LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1d2375913_CaseRange(390LLU,390LLU,jule::Array<jule::I32,3>({0LL,206LL,0LL})),_1d2375913_CaseRange(391LLU,392LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1d2375913_CaseRange(393LLU,394LLU,jule::Array<jule::I32,3>({0LL,205LL,0LL})),_1d2375913_CaseRange(395LLU,396LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1d2375913_CaseRange(398LLU,398LLU,jule::Array<jule::I32,3>({0LL,79LL,0LL})),_1d2375913_CaseRange(399LLU,399LLU,jule::Array<jule::I32,3>({0LL,202LL,0LL})),_1d2375913_CaseRange(400LLU,400LLU,jule::Array<jule::I32,3>({0LL,203LL,0LL})),_1d2375913_CaseRange(401LLU,402LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1d2375913_CaseRange(403LLU,403LLU,jule::Array<jule::I32,3>({0LL,205LL,0LL})),_1d2375913_CaseRange(404LLU,404LLU,jule::Array<jule::I32,3>({0LL,207LL,0LL})),_1d2375913_CaseRange(405LLU,405LLU,jule::Array<jule::I32,3>({97LL,0LL,97LL})),_1d2375913_CaseRange(406LLU,406LLU,jule::Array<jule::I32,3>({0LL,211LL,0LL})),_1d2375913_CaseRange(407LLU,407LLU,jule::Array<jule::I32,3>({0LL,209LL,0LL})),_1d2375913_CaseRange(408LLU,409LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1d2375913_CaseRange(410LLU,410LLU,jule::Array<jule::I32,3>({163LL,0LL,163LL})),_1d2375913_CaseRange(412LLU,412LLU,jule::Array<jule::I32,3>({0LL,211LL,0LL})),_1d2375913_CaseRange(413LLU,413LLU,jule::Array<jule::I32,3>({0LL,213LL,0LL})),_1d2375913_CaseRange(414LLU,414LLU,jule::Array<jule::I32,3>({130LL,0LL,130LL})),_1d2375913_CaseRange(415LLU,415LLU,jule::Array<jule::I32,3>({0LL,214LL,0LL})),_1d2375913_CaseRange(416LLU,421LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1d2375913_CaseRange(422LLU,422LLU,jule::Array<jule::I32,3>({0LL,218LL,0LL})),_1d2375913_CaseRange(423LLU,424LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1d2375913_CaseRange(425LLU,425LLU,jule::Array<jule::I32,3>({0LL,218LL,0LL})),_1d2375913_CaseRange(428LLU,429LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1d2375913_CaseRange(430LLU,430LLU,jule::Array<jule::I32,3>({0LL,218LL,0LL})),_1d2375913_CaseRange(431LLU,432LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1d2375913_CaseRange(433LLU,434LLU,jule::Array<jule::I32,3>({0LL,217LL,0LL})),_1d2375913_CaseRange(435LLU,438LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1d2375913_CaseRange(439LLU,439LLU,jule::Array<jule::I32,3>({0LL,219LL,0LL})),_1d2375913_CaseRange(440LLU,441LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1d2375913_CaseRange(444LLU,445LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1d2375913_CaseRange(447LLU,447LLU,jule::Array<jule::I32,3>({56LL,0LL,56LL})),_1d2375913_CaseRange(452LLU,452LLU,jule::Array<jule::I32,3>({0LL,2LL,1LL})),_1d2375913_CaseRange(453LLU,453LLU,jule::Array<jule::I32,3>({-1LL,1LL,0LL})),_1d2375913_CaseRange(454LLU,454LLU,jule::Array<jule::I32,3>({-2LL,0LL,-1LL})),_1d2375913_CaseRange(455LLU,455LLU,jule::Array<jule::I32,3>({0LL,2LL,1LL})),_1d2375913_CaseRange(456LLU,456LLU,jule::Array<jule::I32,3>({-1LL,1LL,0LL})),_1d2375913_CaseRange(457LLU,457LLU,jule::Array<jule::I32,3>({-2LL,0LL,-1LL})),_1d2375913_CaseRange(458LLU,458LLU,jule::Array<jule::I32,3>({0LL,2LL,1LL})),_1d2375913_CaseRange(459LLU,459LLU,jule::Array<jule::I32,3>({-1LL,1LL,0LL})),_1d2375913_CaseRange(460LLU,460LLU,jule::Array<jule::I32,3>({-2LL,0LL,-1LL})),_1d2375913_CaseRange(461LLU,476LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1d2375913_CaseRange(477LLU,477LLU,jule::Array<jule::I32,3>({-79LL,0LL,-79LL})),_1d2375913_CaseRange(478LLU,495LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1d2375913_CaseRange(497LLU,497LLU,jule::Array<jule::I32,3>({0LL,2LL,1LL})),_1d2375913_CaseRange(498LLU,498LLU,jule::Array<jule::I32,3>({-1LL,1LL,0LL})),_1d2375913_CaseRange(499LLU,499LLU,jule::Array<jule::I32,3>({-2LL,0LL,-1LL})),_1d2375913_CaseRange(500LLU,501LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1d2375913_CaseRange(502LLU,502LLU,jule::Array<jule::I32,3>({0LL,-97LL,0LL})),_1d2375913_CaseRange(503LLU,503LLU,jule::Array<jule::I32,3>({0LL,-56LL,0LL})),_1d2375913_CaseRange(504LLU,543LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1d2375913_CaseRange(544LLU,544LLU,jule::Array<jule::I32,3>({0LL,-130LL,0LL})),_1d2375913_CaseRange(546LLU,563LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1d2375913_CaseRange(570LLU,570LLU,jule::Array<jule::I32,3>({0LL,10795LL,0LL})),_1d2375913_CaseRange(571LLU,572LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1d2375913_CaseRange(573LLU,573LLU,jule::Array<jule::I32,3>({0LL,-163LL,0LL})),_1d2375913_CaseRange(574LLU,574LLU,jule::Array<jule::I32,3>({0LL,10792LL,0LL})),_1d2375913_CaseRange(575LLU,576LLU,jule::Array<jule::I32,3>({10815LL,0LL,10815LL})),_1d2375913_CaseRange(577LLU,578LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1d2375913_CaseRange(579LLU,579LLU,jule::Array<jule::I32,3>({0LL,-195LL,0LL})),_1d2375913_CaseRange(580LLU,580LLU,jule::Array<jule::I32,3>({0LL,69LL,0LL})),_1d2375913_CaseRange(581LLU,581LLU,jule::Array<jule::I32,3>({0LL,71LL,0LL})),_1d2375913_CaseRange(582LLU,591LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1d2375913_CaseRange(592LLU,592LLU,jule::Array<jule::I32,3>({10783LL,0LL,10783LL})),_1d2375913_CaseRange(593LLU,593LLU,jule::Array<jule::I32,3>({10780LL,0LL,10780LL})),_1d2375913_CaseRange(594LLU,594LLU,jule::Array<jule::I32,3>({10782LL,0LL,10782LL})),_1d2375913_CaseRange(595LLU,595LLU,jule::Array<jule::I32,3>({-210LL,0LL,-210LL})),_1d2375913_CaseRange(596LLU,596LLU,jule::Array<jule::I32,3>({-206LL,0LL,-206LL})),_1d2375913_CaseRange(598LLU,599LLU,jule::Array<jule::I32,3>({-205LL,0LL,-205LL})),_1d2375913_CaseRange(601LLU,601LLU,jule::Array<jule::I32,3>({-202LL,0LL,-202LL})),_1d2375913_CaseRange(603LLU,603LLU,jule::Array<jule::I32,3>({-203LL,0LL,-203LL})),_1d2375913_CaseRange(604LLU,604LLU,jule::Array<jule::I32,3>({42319LL,0LL,42319LL})),_1d2375913_CaseRange(608LLU,608LLU,jule::Array<jule::I32,3>({-205LL,0LL,-205LL})),_1d2375913_CaseRange(609LLU,609LLU,jule::Array<jule::I32,3>({42315LL,0LL,42315LL})),_1d2375913_CaseRange(611LLU,611LLU,jule::Array<jule::I32,3>({-207LL,0LL,-207LL})),_1d2375913_CaseRange(613LLU,613LLU,jule::Array<jule::I32,3>({42280LL,0LL,42280LL})),_1d2375913_CaseRange(614LLU,614LLU,jule::Array<jule::I32,3>({42308LL,0LL,42308LL})),_1d2375913_CaseRange(616LLU,616LLU,jule::Array<jule::I32,3>({-209LL,0LL,-209LL})),_1d2375913_CaseRange(617LLU,617LLU,jule::Array<jule::I32,3>({-211LL,0LL,-211LL})),_1d2375913_CaseRange(618LLU,618LLU,jule::Array<jule::I32,3>({42308LL,0LL,42308LL})),_1d2375913_CaseRange(619LLU,619LLU,jule::Array<jule::I32,3>({10743LL,0LL,10743LL})),_1d2375913_CaseRange(620LLU,620LLU,jule::Array<jule::I32,3>({42305LL,0LL,42305LL})),_1d2375913_CaseRange(623LLU,623LLU,jule::Array<jule::I32,3>({-211LL,0LL,-211LL})),_1d2375913_CaseRange(625LLU,625LLU,jule::Array<jule::I32,3>({10749LL,0LL,10749LL})),_1d2375913_CaseRange(626LLU,626LLU,jule::Array<jule::I32,3>({-213LL,0LL,-213LL})),_1d2375913_CaseRange(629LLU,629LLU,jule::Array<jule::I32,3>({-214LL,0LL,-214LL})),_1d2375913_CaseRange(637LLU,637LLU,jule::Array<jule::I32,3>({10727LL,0LL,10727LL})),_1d2375913_CaseRange(640LLU,640LLU,jule::Array<jule::I32,3>({-218LL,0LL,-218LL})),_1d2375913_CaseRange(642LLU,642LLU,jule::Array<jule::I32,3>({42307LL,0LL,42307LL})),_1d2375913_CaseRange(643LLU,643LLU,jule::Array<jule::I32,3>({-218LL,0LL,-218LL})),_1d2375913_CaseRange(647LLU,647LLU,jule::Array<jule::I32,3>({42282LL,0LL,42282LL})),_1d2375913_CaseRange(648LLU,648LLU,jule::Array<jule::I32,3>({-218LL,0LL,-218LL})),_1d2375913_CaseRange(649LLU,649LLU,jule::Array<jule::I32,3>({-69LL,0LL,-69LL})),_1d2375913_CaseRange(650LLU,651LLU,jule::Array<jule::I32,3>({-217LL,0LL,-217LL})),_1d2375913_CaseRange(652LLU,652LLU,jule::Array<jule::I32,3>({-71LL,0LL,-71LL})),_1d2375913_CaseRange(658LLU,658LLU,jule::Array<jule::I32,3>({-219LL,0LL,-219LL})),_1d2375913_CaseRange(669LLU,669LLU,jule::Array<jule::I32,3>({42261LL,0LL,42261LL})),_1d2375913_CaseRange(670LLU,670LLU,jule::Array<jule::I32,3>({42258LL,0LL,42258LL})),_1d2375913_CaseRange(837LLU,837LLU,jule::Array<jule::I32,3>({84LL,0LL,84LL})),_1d2375913_CaseRange(880LLU,883LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1d2375913_CaseRange(886LLU,887LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1d2375913_CaseRange(891LLU,893LLU,jule::Array<jule::I32,3>({130LL,0LL,130LL})),_1d2375913_CaseRange(895LLU,895LLU,jule::Array<jule::I32,3>({0LL,116LL,0LL})),_1d2375913_CaseRange(902LLU,902LLU,jule::Array<jule::I32,3>({0LL,38LL,0LL})),_1d2375913_CaseRange(904LLU,906LLU,jule::Array<jule::I32,3>({0LL,37LL,0LL})),_1d2375913_CaseRange(908LLU,908LLU,jule::Array<jule::I32,3>({0LL,64LL,0LL})),_1d2375913_CaseRange(910LLU,911LLU,jule::Array<jule::I32,3>({0LL,63LL,0LL})),_1d2375913_CaseRange(913LLU,929LLU,jule::Array<jule::I32,3>({0LL,32LL,0LL})),_1d2375913_CaseRange(931LLU,939LLU,jule::Array<jule::I32,3>({0LL,32LL,0LL})),_1d2375913_CaseRange(940LLU,940LLU,jule::Array<jule::I32,3>({-38LL,0LL,-38LL})),_1d2375913_CaseRange(941LLU,943LLU,jule::Array<jule::I32,3>({-37LL,0LL,-37LL})),_1d2375913_CaseRange(945LLU,961LLU,jule::Array<jule::I32,3>({-32LL,0LL,-32LL})),_1d2375913_CaseRange(962LLU,962LLU,jule::Array<jule::I32,3>({-31LL,0LL,-31LL})),_1d2375913_CaseRange(963LLU,971LLU,jule::Array<jule::I32,3>({-32LL,0LL,-32LL})),_1d2375913_CaseRange(972LLU,972LLU,jule::Array<jule::I32,3>({-64LL,0LL,-64LL})),_1d2375913_CaseRange(973LLU,974LLU,jule::Array<jule::I32,3>({-63LL,0LL,-63LL})),_1d2375913_CaseRange(975LLU,975LLU,jule::Array<jule::I32,3>({0LL,8LL,0LL})),_1d2375913_CaseRange(976LLU,976LLU,jule::Array<jule::I32,3>({-62LL,0LL,-62LL})),_1d2375913_CaseRange(977LLU,977LLU,jule::Array<jule::I32,3>({-57LL,0LL,-57LL})),_1d2375913_CaseRange(981LLU,981LLU,jule::Array<jule::I32,3>({-47LL,0LL,-47LL})),_1d2375913_CaseRange(982LLU,982LLU,jule::Array<jule::I32,3>({-54LL,0LL,-54LL})),_1d2375913_CaseRange(983LLU,983LLU,jule::Array<jule::I32,3>({-8LL,0LL,-8LL})),_1d2375913_CaseRange(984LLU,1007LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1d2375913_CaseRange(1008LLU,1008LLU,jule::Array<jule::I32,3>({-86LL,0LL,-86LL})),_1d2375913_CaseRange(1009LLU,1009LLU,jule::Array<jule::I32,3>({-80LL,0LL,-80LL})),_1d2375913_CaseRange(1010LLU,1010LLU,jule::Array<jule::I32,3>({7LL,0LL,7LL})),_1d2375913_CaseRange(1011LLU,1011LLU,jule::Array<jule::I32,3>({-116LL,0LL,-116LL})),_1d2375913_CaseRange(1012LLU,1012LLU,jule::Array<jule::I32,3>({0LL,-60LL,0LL})),_1d2375913_CaseRange(1013LLU,1013LLU,jule::Array<jule::I32,3>({-96LL,0LL,-96LL})),_1d2375913_CaseRange(1015LLU,1016LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1d2375913_CaseRange(1017LLU,1017LLU,jule::Array<jule::I32,3>({0LL,-7LL,0LL})),_1d2375913_CaseRange(1018LLU,1019LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1d2375913_CaseRange(1021LLU,1023LLU,jule::Array<jule::I32,3>({0LL,-130LL,0LL})),_1d2375913_CaseRange(1024LLU,1039LLU,jule::Array<jule::I32,3>({0LL,80LL,0LL})),_1d2375913_CaseRange(1040LLU,1071LLU,jule::Array<jule::I32,3>({0LL,32LL,0LL})),_1d2375913_CaseRange(1072LLU,1103LLU,jule::Array<jule::I32,3>({-32LL,0LL,-32LL})),_1d2375913_CaseRange(1104LLU,1119LLU,jule::Array<jule::I32,3>({-80LL,0LL,-80LL})),_1d2375913_CaseRange(1120LLU,1153LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1d2375913_CaseRange(1162LLU,1215LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1d2375913_CaseRange(1216LLU,1216LLU,jule::Array<jule::I32,3>({0LL,15LL,0LL})),_1d2375913_CaseRange(1217LLU,1230LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1d2375913_CaseRange(1231LLU,1231LLU,jule::Array<jule::I32,3>({-15LL,0LL,-15LL})),_1d2375913_CaseRange(1232LLU,1327LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1d2375913_CaseRange(1329LLU,1366LLU,jule::Array<jule::I32,3>({0LL,48LL,0LL})),_1d2375913_CaseRange(1377LLU,1414LLU,jule::Array<jule::I32,3>({-48LL,0LL,-48LL})),_1d2375913_CaseRange(4256LLU,4293LLU,jule::Array<jule::I32,3>({0LL,7264LL,0LL})),_1d2375913_CaseRange(4295LLU,4295LLU,jule::Array<jule::I32,3>({0LL,7264LL,0LL})),_1d2375913_CaseRange(4301LLU,4301LLU,jule::Array<jule::I32,3>({0LL,7264LL,0LL})),_1d2375913_CaseRange(4304LLU,4346LLU,jule::Array<jule::I32,3>({3008LL,0LL,0LL})),_1d2375913_CaseRange(4349LLU,4351LLU,jule::Array<jule::I32,3>({3008LL,0LL,0LL})),_1d2375913_CaseRange(5024LLU,5103LLU,jule::Array<jule::I32,3>({0LL,38864LL,0LL})),_1d2375913_CaseRange(5104LLU,5109LLU,jule::Array<jule::I32,3>({0LL,8LL,0LL})),_1d2375913_CaseRange(5112LLU,5117LLU,jule::Array<jule::I32,3>({-8LL,0LL,-8LL})),_1d2375913_CaseRange(7296LLU,7296LLU,jule::Array<jule::I32,3>({-6254LL,0LL,-6254LL})),_1d2375913_CaseRange(7297LLU,7297LLU,jule::Array<jule::I32,3>({-6253LL,0LL,-6253LL})),_1d2375913_CaseRange(7298LLU,7298LLU,jule::Array<jule::I32,3>({-6244LL,0LL,-6244LL})),_1d2375913_CaseRange(7299LLU,7300LLU,jule::Array<jule::I32,3>({-6242LL,0LL,-6242LL})),_1d2375913_CaseRange(7301LLU,7301LLU,jule::Array<jule::I32,3>({-6243LL,0LL,-6243LL})),_1d2375913_CaseRange(7302LLU,7302LLU,jule::Array<jule::I32,3>({-6236LL,0LL,-6236LL})),_1d2375913_CaseRange(7303LLU,7303LLU,jule::Array<jule::I32,3>({-6181LL,0LL,-6181LL})),_1d2375913_CaseRange(7304LLU,7304LLU,jule::Array<jule::I32,3>({35266LL,0LL,35266LL})),_1d2375913_CaseRange(7312LLU,7354LLU,jule::Array<jule::I32,3>({0LL,-3008LL,0LL})),_1d2375913_CaseRange(7357LLU,7359LLU,jule::Array<jule::I32,3>({0LL,-3008LL,0LL})),_1d2375913_CaseRange(7545LLU,7545LLU,jule::Array<jule::I32,3>({35332LL,0LL,35332LL})),_1d2375913_CaseRange(7549LLU,7549LLU,jule::Array<jule::I32,3>({3814LL,0LL,3814LL})),_1d2375913_CaseRange(7566LLU,7566LLU,jule::Array<jule::I32,3>({35384LL,0LL,35384LL})),_1d2375913_CaseRange(7680LLU,7829LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1d2375913_CaseRange(7835LLU,7835LLU,jule::Array<jule::I32,3>({-59LL,0LL,-59LL})),_1d2375913_CaseRange(7838LLU,7838LLU,jule::Array<jule::I32,3>({0LL,-7615LL,0LL})),_1d2375913_CaseRange(7840LLU,7935LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1d2375913_CaseRange(7936LLU,7943LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1d2375913_CaseRange(7944LLU,7951LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1d2375913_CaseRange(7952LLU,7957LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1d2375913_CaseRange(7960LLU,7965LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1d2375913_CaseRange(7968LLU,7975LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1d2375913_CaseRange(7976LLU,7983LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1d2375913_CaseRange(7984LLU,7991LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1d2375913_CaseRange(7992LLU,7999LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1d2375913_CaseRange(8000LLU,8005LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1d2375913_CaseRange(8008LLU,8013LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1d2375913_CaseRange(8017LLU,8017LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1d2375913_CaseRange(8019LLU,8019LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1d2375913_CaseRange(8021LLU,8021LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1d2375913_CaseRange(8023LLU,8023LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1d2375913_CaseRange(8025LLU,8025LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1d2375913_CaseRange(8027LLU,8027LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1d2375913_CaseRange(8029LLU,8029LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1d2375913_CaseRange(8031LLU,8031LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1d2375913_CaseRange(8032LLU,8039LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1d2375913_CaseRange(8040LLU,8047LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1d2375913_CaseRange(8048LLU,8049LLU,jule::Array<jule::I32,3>({74LL,0LL,74LL})),_1d2375913_CaseRange(8050LLU,8053LLU,jule::Array<jule::I32,3>({86LL,0LL,86LL})),_1d2375913_CaseRange(8054LLU,8055LLU,jule::Array<jule::I32,3>({100LL,0LL,100LL})),_1d2375913_CaseRange(8056LLU,8057LLU,jule::Array<jule::I32,3>({128LL,0LL,128LL})),_1d2375913_CaseRange(8058LLU,8059LLU,jule::Array<jule::I32,3>({112LL,0LL,112LL})),_1d2375913_CaseRange(8060LLU,8061LLU,jule::Array<jule::I32,3>({126LL,0LL,126LL})),_1d2375913_CaseRange(8064LLU,8071LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1d2375913_CaseRange(8072LLU,8079LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1d2375913_CaseRange(8080LLU,8087LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1d2375913_CaseRange(8088LLU,8095LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1d2375913_CaseRange(8096LLU,8103LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1d2375913_CaseRange(8104LLU,8111LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1d2375913_CaseRange(8112LLU,8113LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1d2375913_CaseRange(8115LLU,8115LLU,jule::Array<jule::I32,3>({9LL,0LL,9LL})),_1d2375913_CaseRange(8120LLU,8121LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1d2375913_CaseRange(8122LLU,8123LLU,jule::Array<jule::I32,3>({0LL,-74LL,0LL})),_1d2375913_CaseRange(8124LLU,8124LLU,jule::Array<jule::I32,3>({0LL,-9LL,0LL})),_1d2375913_CaseRange(8126LLU,8126LLU,jule::Array<jule::I32,3>({-7205LL,0LL,-7205LL})),_1d2375913_CaseRange(8131LLU,8131LLU,jule::Array<jule::I32,3>({9LL,0LL,9LL})),_1d2375913_CaseRange(8136LLU,8139LLU,jule::Array<jule::I32,3>({0LL,-86LL,0LL})),_1d2375913_CaseRange(8140LLU,8140LLU,jule::Array<jule::I32,3>({0LL,-9LL,0LL})),_1d2375913_CaseRange(8144LLU,8145LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1d2375913_CaseRange(8152LLU,8153LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1d2375913_CaseRange(8154LLU,8155LLU,jule::Array<jule::I32,3>({0LL,-100LL,0LL})),_1d2375913_CaseRange(8160LLU,8161LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_1d2375913_CaseRange(8165LLU,8165LLU,jule::Array<jule::I32,3>({7LL,0LL,7LL})),_1d2375913_CaseRange(8168LLU,8169LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_1d2375913_CaseRange(8170LLU,8171LLU,jule::Array<jule::I32,3>({0LL,-112LL,0LL})),_1d2375913_CaseRange(8172LLU,8172LLU,jule::Array<jule::I32,3>({0LL,-7LL,0LL})),_1d2375913_CaseRange(8179LLU,8179LLU,jule::Array<jule::I32,3>({9LL,0LL,9LL})),_1d2375913_CaseRange(8184LLU,8185LLU,jule::Array<jule::I32,3>({0LL,-128LL,0LL})),_1d2375913_CaseRange(8186LLU,8187LLU,jule::Array<jule::I32,3>({0LL,-126LL,0LL})),_1d2375913_CaseRange(8188LLU,8188LLU,jule::Array<jule::I32,3>({0LL,-9LL,0LL})),_1d2375913_CaseRange(8486LLU,8486LLU,jule::Array<jule::I32,3>({0LL,-7517LL,0LL})),_1d2375913_CaseRange(8490LLU,8490LLU,jule::Array<jule::I32,3>({0LL,-8383LL,0LL})),_1d2375913_CaseRange(8491LLU,8491LLU,jule::Array<jule::I32,3>({0LL,-8262LL,0LL})),_1d2375913_CaseRange(8498LLU,8498LLU,jule::Array<jule::I32,3>({0LL,28LL,0LL})),_1d2375913_CaseRange(8526LLU,8526LLU,jule::Array<jule::I32,3>({-28LL,0LL,-28LL})),_1d2375913_CaseRange(8544LLU,8559LLU,jule::Array<jule::I32,3>({0LL,16LL,0LL})),_1d2375913_CaseRange(8560LLU,8575LLU,jule::Array<jule::I32,3>({-16LL,0LL,-16LL})),_1d2375913_CaseRange(8579LLU,8580LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1d2375913_CaseRange(9398LLU,9423LLU,jule::Array<jule::I32,3>({0LL,26LL,0LL})),_1d2375913_CaseRange(9424LLU,9449LLU,jule::Array<jule::I32,3>({-26LL,0LL,-26LL})),_1d2375913_CaseRange(11264LLU,11311LLU,jule::Array<jule::I32,3>({0LL,48LL,0LL})),_1d2375913_CaseRange(11312LLU,11359LLU,jule::Array<jule::I32,3>({-48LL,0LL,-48LL})),_1d2375913_CaseRange(11360LLU,11361LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1d2375913_CaseRange(11362LLU,11362LLU,jule::Array<jule::I32,3>({0LL,-10743LL,0LL})),_1d2375913_CaseRange(11363LLU,11363LLU,jule::Array<jule::I32,3>({0LL,-3814LL,0LL})),_1d2375913_CaseRange(11364LLU,11364LLU,jule::Array<jule::I32,3>({0LL,-10727LL,0LL})),_1d2375913_CaseRange(11365LLU,11365LLU,jule::Array<jule::I32,3>({-10795LL,0LL,-10795LL})),_1d2375913_CaseRange(11366LLU,11366LLU,jule::Array<jule::I32,3>({-10792LL,0LL,-10792LL})),_1d2375913_CaseRange(11367LLU,11372LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1d2375913_CaseRange(11373LLU,11373LLU,jule::Array<jule::I32,3>({0LL,-10780LL,0LL})),_1d2375913_CaseRange(11374LLU,11374LLU,jule::Array<jule::I32,3>({0LL,-10749LL,0LL})),_1d2375913_CaseRange(11375LLU,11375LLU,jule::Array<jule::I32,3>({0LL,-10783LL,0LL})),_1d2375913_CaseRange(11376LLU,11376LLU,jule::Array<jule::I32,3>({0LL,-10782LL,0LL})),_1d2375913_CaseRange(11378LLU,11379LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1d2375913_CaseRange(11381LLU,11382LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1d2375913_CaseRange(11390LLU,11391LLU,jule::Array<jule::I32,3>({0LL,-10815LL,0LL})),_1d2375913_CaseRange(11392LLU,11491LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1d2375913_CaseRange(11499LLU,11502LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1d2375913_CaseRange(11506LLU,11507LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1d2375913_CaseRange(11520LLU,11557LLU,jule::Array<jule::I32,3>({-7264LL,0LL,-7264LL})),_1d2375913_CaseRange(11559LLU,11559LLU,jule::Array<jule::I32,3>({-7264LL,0LL,-7264LL})),_1d2375913_CaseRange(11565LLU,11565LLU,jule::Array<jule::I32,3>({-7264LL,0LL,-7264LL})),_1d2375913_CaseRange(42560LLU,42605LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1d2375913_CaseRange(42624LLU,42651LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1d2375913_CaseRange(42786LLU,42799LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1d2375913_CaseRange(42802LLU,42863LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1d2375913_CaseRange(42873LLU,42876LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1d2375913_CaseRange(42877LLU,42877LLU,jule::Array<jule::I32,3>({0LL,-35332LL,0LL})),_1d2375913_CaseRange(42878LLU,42887LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1d2375913_CaseRange(42891LLU,42892LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1d2375913_CaseRange(42893LLU,42893LLU,jule::Array<jule::I32,3>({0LL,-42280LL,0LL})),_1d2375913_CaseRange(42896LLU,42899LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1d2375913_CaseRange(42900LLU,42900LLU,jule::Array<jule::I32,3>({48LL,0LL,48LL})),_1d2375913_CaseRange(42902LLU,42921LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1d2375913_CaseRange(42922LLU,42922LLU,jule::Array<jule::I32,3>({0LL,-42308LL,0LL})),_1d2375913_CaseRange(42923LLU,42923LLU,jule::Array<jule::I32,3>({0LL,-42319LL,0LL})),_1d2375913_CaseRange(42924LLU,42924LLU,jule::Array<jule::I32,3>({0LL,-42315LL,0LL})),_1d2375913_CaseRange(42925LLU,42925LLU,jule::Array<jule::I32,3>({0LL,-42305LL,0LL})),_1d2375913_CaseRange(42926LLU,42926LLU,jule::Array<jule::I32,3>({0LL,-42308LL,0LL})),_1d2375913_CaseRange(42928LLU,42928LLU,jule::Array<jule::I32,3>({0LL,-42258LL,0LL})),_1d2375913_CaseRange(42929LLU,42929LLU,jule::Array<jule::I32,3>({0LL,-42282LL,0LL})),_1d2375913_CaseRange(42930LLU,42930LLU,jule::Array<jule::I32,3>({0LL,-42261LL,0LL})),_1d2375913_CaseRange(42931LLU,42931LLU,jule::Array<jule::I32,3>({0LL,928LL,0LL})),_1d2375913_CaseRange(42932LLU,42947LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1d2375913_CaseRange(42948LLU,42948LLU,jule::Array<jule::I32,3>({0LL,-48LL,0LL})),_1d2375913_CaseRange(42949LLU,42949LLU,jule::Array<jule::I32,3>({0LL,-42307LL,0LL})),_1d2375913_CaseRange(42950LLU,42950LLU,jule::Array<jule::I32,3>({0LL,-35384LL,0LL})),_1d2375913_CaseRange(42951LLU,42954LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1d2375913_CaseRange(42960LLU,42961LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1d2375913_CaseRange(42966LLU,42969LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1d2375913_CaseRange(42997LLU,42998LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_1d2375913_CaseRange(43859LLU,43859LLU,jule::Array<jule::I32,3>({-928LL,0LL,-928LL})),_1d2375913_CaseRange(43888LLU,43967LLU,jule::Array<jule::I32,3>({-38864LL,0LL,-38864LL})),_1d2375913_CaseRange(65313LLU,65338LLU,jule::Array<jule::I32,3>({0LL,32LL,0LL})),_1d2375913_CaseRange(65345LLU,65370LLU,jule::Array<jule::I32,3>({-32LL,0LL,-32LL})),_1d2375913_CaseRange(66560LLU,66599LLU,jule::Array<jule::I32,3>({0LL,40LL,0LL})),_1d2375913_CaseRange(66600LLU,66639LLU,jule::Array<jule::I32,3>({-40LL,0LL,-40LL})),_1d2375913_CaseRange(66736LLU,66771LLU,jule::Array<jule::I32,3>({0LL,40LL,0LL})),_1d2375913_CaseRange(66776LLU,66811LLU,jule::Array<jule::I32,3>({-40LL,0LL,-40LL})),_1d2375913_CaseRange(66928LLU,66938LLU,jule::Array<jule::I32,3>({0LL,39LL,0LL})),_1d2375913_CaseRange(66940LLU,66954LLU,jule::Array<jule::I32,3>({0LL,39LL,0LL})),_1d2375913_CaseRange(66956LLU,66962LLU,jule::Array<jule::I32,3>({0LL,39LL,0LL})),_1d2375913_CaseRange(66964LLU,66965LLU,jule::Array<jule::I32,3>({0LL,39LL,0LL})),_1d2375913_CaseRange(66967LLU,66977LLU,jule::Array<jule::I32,3>({-39LL,0LL,-39LL})),_1d2375913_CaseRange(66979LLU,66993LLU,jule::Array<jule::I32,3>({-39LL,0LL,-39LL})),_1d2375913_CaseRange(66995LLU,67001LLU,jule::Array<jule::I32,3>({-39LL,0LL,-39LL})),_1d2375913_CaseRange(67003LLU,67004LLU,jule::Array<jule::I32,3>({-39LL,0LL,-39LL})),_1d2375913_CaseRange(68736LLU,68786LLU,jule::Array<jule::I32,3>({0LL,64LL,0LL})),_1d2375913_CaseRange(68800LLU,68850LLU,jule::Array<jule::I32,3>({-64LL,0LL,-64LL})),_1d2375913_CaseRange(71840LLU,71871LLU,jule::Array<jule::I32,3>({0LL,32LL,0LL})),_1d2375913_CaseRange(71872LLU,71903LLU,jule::Array<jule::I32,3>({-32LL,0LL,-32LL})),_1d2375913_CaseRange(93760LLU,93791LLU,jule::Array<jule::I32,3>({0LL,32LL,0LL})),_1d2375913_CaseRange(93792LLU,93823LLU,jule::Array<jule::I32,3>({-32LL,0LL,-32LL})),_1d2375913_CaseRange(125184LLU,125217LLU,jule::Array<jule::I32,3>({0LL,34LL,0LL})),_1d2375913_CaseRange(125218LLU,125251LLU,jule::Array<jule::I32,3>({-34LL,0LL,-34LL}))});
static jule::Slice<_1d2375913_CaseRange> _1d2264c31_CASE_RANGES = _1d2264c31__CASE_RANGES;
static jule::Array<jule::U8,256> _1b818a2be_FIRST = jule::Array<jule::U8,256>({});
static jule::Array<_1b818a2be_accept_range,16> _1b818a2be_ACCEPT_RANGES = jule::Array<_1b818a2be_accept_range,16>({_1b818a2be_accept_range(128LLU,191LLU),_1b818a2be_accept_range(160LLU,191LLU),_1b818a2be_accept_range(128LLU,159LLU),_1b818a2be_accept_range(144LLU,191LLU),_1b818a2be_accept_range(128LLU,143LLU)});
static jule::Map<jule::Str,jule::Ref<_1d2375913_RangeTable>> _1d2264c31_SCRIPTS = jule::Map<jule::Str,jule::Ref<_1d2375913_RangeTable>>({{jule::Str("Adlam", 5),_1d2264c31_ADLAM},{jule::Str("Ahom", 4),_1d2264c31_AHOM},{jule::Str("Anatolian_Hieroglyphs", 21),_1d2264c31_ANATOLIAN_HIEROGLYPHS},{jule::Str("Arabic", 6),_1d2264c31_ARABIC},{jule::Str("Armenian", 8),_1d2264c31_ARMENIAN},{jule::Str("Avestan", 7),_1d2264c31_AVESTAN},{jule::Str("Balinese", 8),_1d2264c31_BALINESE},{jule::Str("Bamum", 5),_1d2264c31_BAMUM},{jule::Str("Bassa_Vah", 9),_1d2264c31_BASSA_VAH},{jule::Str("Batak", 5),_1d2264c31_BATAK},{jule::Str("Bengali", 7),_1d2264c31_BENGALI},{jule::Str("Bhaiksuki", 9),_1d2264c31_BHAIKSUKI},{jule::Str("Bopomofo", 8),_1d2264c31_BOPOMOFO},{jule::Str("Brahmi", 6),_1d2264c31_BRAHMI},{jule::Str("Braille", 7),_1d2264c31_BRAILLE},{jule::Str("Buginese", 8),_1d2264c31_BUGINESE},{jule::Str("Buhid", 5),_1d2264c31_BUHID},{jule::Str("Canadian_Aboriginal", 19),_1d2264c31_CANADIAN_ABORIGINAL},{jule::Str("Carian", 6),_1d2264c31_CARIAN},{jule::Str("Caucasian_Albanian", 18),_1d2264c31_CAUCASIAN_ALBANIAN},{jule::Str("Chakma", 6),_1d2264c31_CHAKMA},{jule::Str("Cham", 4),_1d2264c31_CHAM},{jule::Str("Cherokee", 8),_1d2264c31_CHEROKEE},{jule::Str("Chorasmian", 10),_1d2264c31_CHORASMIAN},{jule::Str("Common", 6),_1d2264c31_COMMON},{jule::Str("Coptic", 6),_1d2264c31_COPTIC},{jule::Str("Cuneiform", 9),_1d2264c31_CUNEIFORM},{jule::Str("Cypriot", 7),_1d2264c31_CYPRIOT},{jule::Str("Cypro_Minoan", 12),_1d2264c31_CYPRO_MINOAN},{jule::Str("Cyrillic", 8),_1d2264c31_CYRILLIC},{jule::Str("Deseret", 7),_1d2264c31_DESERET},{jule::Str("Devanagari", 10),_1d2264c31_DEVANAGARI},{jule::Str("Dives_Akuru", 11),_1d2264c31_DIVES_AKURU},{jule::Str("Dogra", 5),_1d2264c31_DOGRA},{jule::Str("Duployan", 8),_1d2264c31_DUPLOYAN},{jule::Str("Egyptian_Hieroglyphs", 20),_1d2264c31_EGYPTIAN_HIEROGLYPHS},{jule::Str("Elbasan", 7),_1d2264c31_ELBASAN},{jule::Str("Elymaic", 7),_1d2264c31_ELYMAIC},{jule::Str("Ethiopic", 8),_1d2264c31_ETHIOPIC},{jule::Str("Georgian", 8),_1d2264c31_GEORGIAN},{jule::Str("Glagolitic", 10),_1d2264c31_GLAGOLITIC},{jule::Str("Gothic", 6),_1d2264c31_GOTHIC},{jule::Str("Grantha", 7),_1d2264c31_GRANTHA},{jule::Str("Greek", 5),_1d2264c31_GREEK},{jule::Str("Gujarati", 8),_1d2264c31_GUJARATI},{jule::Str("Gunjala_Gondi", 13),_1d2264c31_GUNJALA_GONDI},{jule::Str("Gurmukhi", 8),_1d2264c31_GURMUKHI},{jule::Str("Han", 3),_1d2264c31_HAN},{jule::Str("Hangul", 6),_1d2264c31_HANGUL},{jule::Str("Hanifi_Rohingya", 15),_1d2264c31_HANIFI_ROHINGYA},{jule::Str("Hanunoo", 7),_1d2264c31_HANUNOO},{jule::Str("Hatran", 6),_1d2264c31_HATRAN},{jule::Str("Hebrew", 6),_1d2264c31_HEBREW},{jule::Str("Hiragana", 8),_1d2264c31_HIRAGANA},{jule::Str("Imperial_Aramaic", 16),_1d2264c31_IMPERIAL_ARAMAIC},{jule::Str("Inherited", 9),_1d2264c31_INHERITED},{jule::Str("Inscriptional_Pahlavi", 21),_1d2264c31_INSCRIPTIONAL_PAHLAVI},{jule::Str("Inscriptional_Parthian", 22),_1d2264c31_INSCRIPTIONAL_PARTHIAN},{jule::Str("Javanese", 8),_1d2264c31_JAVANESE},{jule::Str("Kaithi", 6),_1d2264c31_KAITHI},{jule::Str("Kannada", 7),_1d2264c31_KANNADA},{jule::Str("Katakana", 8),_1d2264c31_KATAKANA},{jule::Str("Kawi", 4),_1d2264c31_KAWI},{jule::Str("Kayah_Li", 8),_1d2264c31_KAYAH_LI},{jule::Str("Kharoshthi", 10),_1d2264c31_KHAROSHTHI},{jule::Str("Khitan_Small_Script", 19),_1d2264c31_KHITAN_SMALL_SCRIPT},{jule::Str("Khmer", 5),_1d2264c31_KHMER},{jule::Str("Khojki", 6),_1d2264c31_KHOJKI},{jule::Str("Khudawadi", 9),_1d2264c31_KHUDAWADI},{jule::Str("Lao", 3),_1d2264c31_LAO},{jule::Str("Latin", 5),_1d2264c31_LATIN},{jule::Str("Lepcha", 6),_1d2264c31_LEPCHA},{jule::Str("Limbu", 5),_1d2264c31_LIMBU},{jule::Str("Linear_A", 8),_1d2264c31_LINEAR_A},{jule::Str("Linear_B", 8),_1d2264c31_LINEAR_B},{jule::Str("Lisu", 4),_1d2264c31_LISU},{jule::Str("Lycian", 6),_1d2264c31_LYCIAN},{jule::Str("Lydian", 6),_1d2264c31_LYDIAN},{jule::Str("Mahajani", 8),_1d2264c31_MAHAJANI},{jule::Str("Makasar", 7),_1d2264c31_MAKASAR},{jule::Str("Malayalam", 9),_1d2264c31_MALAYALAM},{jule::Str("Mandaic", 7),_1d2264c31_MANDAIC},{jule::Str("Manichaean", 10),_1d2264c31_MANICHAEAN},{jule::Str("Marchen", 7),_1d2264c31_MARCHEN},{jule::Str("Masaram_Gondi", 13),_1d2264c31_MASARAM_GONDI},{jule::Str("Medefaidrin", 11),_1d2264c31_MEDEFAIDRIN},{jule::Str("Meetei_Mayek", 12),_1d2264c31_MEETEI_MAYEK},{jule::Str("Mende_Kikakui", 13),_1d2264c31_MENDE_KIKAKUI},{jule::Str("Meroitic_Cursive", 16),_1d2264c31_MEROITIC_CURSIVE},{jule::Str("Meroitic_Hieroglyphs", 20),_1d2264c31_MEROITIC_HIEROGLYPHS},{jule::Str("Miao", 4),_1d2264c31_MIAO},{jule::Str("Modi", 4),_1d2264c31_MODI},{jule::Str("Mongolian", 9),_1d2264c31_MONGOLIAN},{jule::Str("Mro", 3),_1d2264c31_MRO},{jule::Str("Multani", 7),_1d2264c31_MULTANI},{jule::Str("Myanmar", 7),_1d2264c31_MYANMAR},{jule::Str("Nabataean", 9),_1d2264c31_NABATAEAN},{jule::Str("Nag_Mundari", 11),_1d2264c31_NAG_MUNDARI},{jule::Str("Nandinagari", 11),_1d2264c31_NANDINAGARI},{jule::Str("New_Tai_Lue", 11),_1d2264c31_NEW_TAI_LUE},{jule::Str("Newa", 4),_1d2264c31_NEWA},{jule::Str("Nko", 3),_1d2264c31_NKO},{jule::Str("Nushu", 5),_1d2264c31_NUSHU},{jule::Str("Nyiakeng_Puachue_Hmong", 22),_1d2264c31_NYIAKENG_PUACHUE_HMONG},{jule::Str("Ogham", 5),_1d2264c31_OGHAM},{jule::Str("Ol_Chiki", 8),_1d2264c31_OL_CHIKI},{jule::Str("Old_Hungarian", 13),_1d2264c31_OLD_HUNGARIAN},{jule::Str("Old_Italic", 10),_1d2264c31_OLD_ITALIC},{jule::Str("Old_North_Arabian", 17),_1d2264c31_OLD_NORTH_ARABIAN},{jule::Str("Old_Permic", 10),_1d2264c31_OLD_PERMIC},{jule::Str("Old_Persian", 11),_1d2264c31_OLD_PERSIAN},{jule::Str("Old_Sogdian", 11),_1d2264c31_OLD_SOGDIAN},{jule::Str("Old_South_Arabian", 17),_1d2264c31_OLD_SOUTH_ARABIAN},{jule::Str("Old_Turkic", 10),_1d2264c31_OLD_TURKIC},{jule::Str("Old_Uyghur", 10),_1d2264c31_OLD_UYGHUR},{jule::Str("Oriya", 5),_1d2264c31_ORIYA},{jule::Str("Osage", 5),_1d2264c31_OSAGE},{jule::Str("Osmanya", 7),_1d2264c31_OSMANYA},{jule::Str("Pahawh_Hmong", 12),_1d2264c31_PAHAWH_HMONG},{jule::Str("Palmyrene", 9),_1d2264c31_PALMYRENE},{jule::Str("Pau_Cin_Hau", 11),_1d2264c31_PAU_CIN_HAU},{jule::Str("Phags_Pa", 8),_1d2264c31_PHAGS_PA},{jule::Str("Phoenician", 10),_1d2264c31_PHOENICIAN},{jule::Str("Psalter_Pahlavi", 15),_1d2264c31_PSALTER_PAHLAVI},{jule::Str("Rejang", 6),_1d2264c31_REJANG},{jule::Str("Runic", 5),_1d2264c31_RUNIC},{jule::Str("Samaritan", 9),_1d2264c31_SAMARITAN},{jule::Str("Saurashtra", 10),_1d2264c31_SAURASHTRA},{jule::Str("Sharada", 7),_1d2264c31_SHARADA},{jule::Str("Shavian", 7),_1d2264c31_SHAVIAN},{jule::Str("Siddham", 7),_1d2264c31_SIDDHAM},{jule::Str("SignWriting", 11),_1d2264c31_SIGN_WRITING},{jule::Str("Sinhala", 7),_1d2264c31_SINHALA},{jule::Str("Sogdian", 7),_1d2264c31_SOGDIAN},{jule::Str("Sora_Sompeng", 12),_1d2264c31_SORA_SOMPENG},{jule::Str("Soyombo", 7),_1d2264c31_SOYOMBO},{jule::Str("Sundanese", 9),_1d2264c31_SUNDANESE},{jule::Str("Syloti_Nagri", 12),_1d2264c31_SYLOTI_NAGRI},{jule::Str("Syriac", 6),_1d2264c31_SYRIAC},{jule::Str("Tagalog", 7),_1d2264c31_TAGALOG},{jule::Str("Tagbanwa", 8),_1d2264c31_TAGBANWA},{jule::Str("Tai_Le", 6),_1d2264c31_TAI_LE},{jule::Str("Tai_Tham", 8),_1d2264c31_TAI_THAM},{jule::Str("Tai_Viet", 8),_1d2264c31_TAI_VIET},{jule::Str("Takri", 5),_1d2264c31_TAKRI},{jule::Str("Tamil", 5),_1d2264c31_TAMIL},{jule::Str("Tangsa", 6),_1d2264c31_TANGSA},{jule::Str("Tangut", 6),_1d2264c31_TANGUT},{jule::Str("Telugu", 6),_1d2264c31_TELUGU},{jule::Str("Thaana", 6),_1d2264c31_THAANA},{jule::Str("Thai", 4),_1d2264c31_THAI},{jule::Str("Tibetan", 7),_1d2264c31_TIBETAN},{jule::Str("Tifinagh", 8),_1d2264c31_TIFINAGH},{jule::Str("Tirhuta", 7),_1d2264c31_TIRHUTA},{jule::Str("Toto", 4),_1d2264c31_TOTO},{jule::Str("Ugaritic", 8),_1d2264c31_UGARITIC},{jule::Str("Vai", 3),_1d2264c31_VAI},{jule::Str("Vithkuqi", 8),_1d2264c31_VITHKUQI},{jule::Str("Wancho", 6),_1d2264c31_WANCHO},{jule::Str("Warang_Citi", 11),_1d2264c31_WARANG_CITI},{jule::Str("Yezidi", 6),_1d2264c31_YEZIDI},{jule::Str("Yi", 2),_1d2264c31_YI},{jule::Str("Zanabazar_Square", 16),_1d2264c31_ZANABAZAR_SQUARE}});
static jule::Str _1d1c2a4b6_ARCH = jule::Str("amd64", 5);

inline void _1d0518e60_AnsiEscape::_static_method_reset(void) {
	jule::out(jule::Str("\033[0m", 4));
}



inline void _1d0518e60_AnsiEscape::_static_method_print(jule::Str _2021_escape,jule::Str _2034_text) {
	jule::out(_2021_escape);
	jule::out(_2034_text);
	_1d0518e60_AnsiEscape::_static_method_reset();
}







std::ostream &operator<<(std::ostream &_Stream, const _1d0518e60_AnsiEscape &_Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void _1d0518e60_Logger::_static_method_log_flat(_1d0557e9e_Log& _3125_l) {
	jule::outln(_3125_l._field_text);
}



inline void _1d0518e60_Logger::_static_method_log_error(_1d0557e9e_Log& _3426_l) {
	jule::out(jule::Str("\033[31m", 5));
	jule::out(jule::Str("error: ", 7));
	jule::out(_3426_l._field_text);
	_1d0518e60_AnsiEscape::_static_method_reset();
	jule::out(jule::Str("\n  --> ", 7));
	jule::out(_3426_l._field_path);
	jule::out(jule::Str(":", 1));
	jule::out(_1d17893cc_itoa(_3426_l._field_row));
	jule::out(jule::Str(":", 1));
	jule::out(_1d17893cc_itoa(_3426_l._field_column));
	if (_3426_l._field_line.len() != 0LL) {
		jule::Str _4721_line = _3426_l._field_line.ltrim(jule::Str("\r\n\v\b ", 5));
		jule::I64 _4821_offset = (_3426_l._field_line.len() - _4721_line.len()) + 1LL;
		jule::I64 _4921_old_len = _4721_line.len();
		_4721_line=_4721_line.ltrim(jule::Str("\t", 1));
		if (_4921_old_len != _4721_line.len()) {
			_4821_offset+=static_cast<jule::I64>((_4921_old_len - _4721_line.len()) * 8LL);
		}
		jule::out(jule::Str("\n  ", 3));
		jule::Str _5517_row = _1d17893cc_itoa(_3426_l._field_row);
		jule::out(_5517_row);
		jule::out(jule::Str(" | ", 3));
		jule::out(_4721_line);
		jule::out(jule::Str("\n  ", 3));
		jule::out(_1d051806e_str_repeat(jule::Str(" ", 1),static_cast<jule::I64>(_5517_row.len())));
		jule::out(jule::Str(" | ", 3));
		jule::out(_1d051806e_str_repeat(jule::Str(" ", 1),static_cast<jule::Int>(_3426_l._field_column - _4821_offset)));
		jule::out(jule::Str("^", 1));
		if (_3426_l._field_suggestion.len() != 0LL) {
			jule::out(jule::Str("\n  ", 3));
			jule::out(_1d051806e_str_repeat(jule::Str(" ", 1),static_cast<jule::I64>(_5517_row.len())));
			jule::out(jule::Str(" | ", 3));
			_1d0518e60_AnsiEscape::_static_method_print(jule::Str("\033[95m", 5),jule::Str("suggestion: ", 12));
			jule::out(_3426_l._field_suggestion);
		}
	}
	jule::outln(jule::Str("\n", 1));
}



inline void _1d0518e60_Logger::_static_method_log(_1d0557e9e_Log& _7620_l) {
	{
		auto _match_expr{ _7620_l._field_kind };
		if (!((0LLU) == _match_expr)) { goto _case_end_4720780912; }
		_case_begin_4720780912:;
		{
			_1d0518e60_Logger::_static_method_log_flat(_7620_l);
		}
		goto _match_end_4720779488;
		_case_end_4720780912:;
		if (!((1LLU) == _match_expr)) { goto _case_end_4720781024; }
		_case_begin_4720781024:;
		{
			_1d0518e60_Logger::_static_method_log_error(_7620_l);
		}
		goto _match_end_4720779488;
		_case_end_4720781024:;
		_match_end_4720779488:;
	}
}



inline void _1d0518e60_Logger::_static_method_print_logs(jule::Slice<_1d0557e9e_Log>& _8427_logs) {
	{
		auto _range_expr = _8427_logs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			_1d0557e9e_Log _1d0518e60_l = *_range_begin;
			_iter_begin_4720785248:;
			{
				_1d0518e60_Logger::_static_method_log(_1d0518e60_l);
			}
			_iter_next_4720785248:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d0518e60_l = *_range_begin; goto _iter_begin_4720785248; }
			_iter_end_4720785248:;
		}
	}
	jule::out(jule::Str("=== ", 4));
	jule::out(_1d17893cc_itoa(static_cast<jule::I64>(_8427_logs.len())));
	jule::outln(jule::Str(" error generated ===", 20));
}







std::ostream &operator<<(std::ostream &_Stream, const _1d0518e60_Logger &_Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1d0680a33_LazyBuff::_method_index(jule::Int _5324_i) {
	if ((*this)._field_buff != nullptr) {
		return (*this)._field_buff[static_cast<jule::Int>(_5324_i)];
	}
	return (*this)._field_path[static_cast<jule::Int>(_5324_i)];
}



inline void _1d0680a33_LazyBuff::_method_append(jule::U8 _6025_c) {
	if ((*this)._field_buff == nullptr) {
		if (((*this)._field_w < (*this)._field_path.len()) && ((*this)._field_path[static_cast<jule::Int>((*this)._field_w)] == _6025_c)) {
			((*this)._field_w)++;
			return;
		}
		(*this)._field_buff=jule::Slice<jule::U8>::alloc(static_cast<jule::Int>(static_cast<jule::I64>((*this)._field_path.len())));
		copy((*this)._field_buff,static_cast<jule::Slice<jule::U8>>((*this)._field_path.slice(0LL,static_cast<jule::Int>((*this)._field_w))));
	}
	(*this)._field_buff[static_cast<jule::Int>((*this)._field_w)]=_6025_c;
	((*this)._field_w)++;
}



inline jule::Str _1d0680a33_LazyBuff::_method_string(void) {
	if ((*this)._field_buff == nullptr) {
		return (*this)._field_vol_and_path.slice(0LL,static_cast<jule::Int>((*this)._field_vol_len + (*this)._field_w));
	}
	return (*this)._field_vol_and_path.slice(0LL,static_cast<jule::Int>((*this)._field_vol_len)) + static_cast<jule::Str>((*this)._field_buff.slice(0LL,static_cast<jule::Int>((*this)._field_w)));
}







std::ostream &operator<<(std::ostream &_Stream, const _1d0680a33_LazyBuff &_Src) {
	_Stream << "LazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "vol_and_path:" << _Src._field_vol_and_path << ", ";
	_Stream << "vol_len:" << _Src._field_vol_len;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d0557e9e_Log &_Src) {
	_Stream << "Log{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "text:" << _Src._field_text << ", ";
	_Stream << "line:" << _Src._field_line << ", ";
	_Stream << "suggestion:" << _Src._field_suggestion;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1d203ade2_bits_error::_method_error(void) {
	return jule::Str("runtime error: ", 15) + (*this)._field_message;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d203ade2_bits_error &_Src) {
	_Stream << "bits_error{";
	_Stream << "message:" << _Src._field_message;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d061d5e7_FloatInfo &_Src) {
	_Stream << "FloatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d061d5e7_DecimalSlice &_Src) {
	_Stream << "DecimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d159c685_LeftCheat &_Src) {
	_Stream << "LeftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d159c685_Decimal::_method_set(jule::Str _22922_s) {
	jule::Bool _22932_ok = jule::Bool();
	jule::Int _23017_i = 0LL;
	(*this)._field_neg=false;
	(*this)._field_trunc=false;
	if (_23017_i >= _22922_s.len()) {
		return _22932_ok;
	}
	{
		if (!((_22922_s[static_cast<jule::Int>(_23017_i)] == '+'))) { goto _case_end_4698357680; }
		_case_begin_4698357680:;
		{
			(_23017_i)++;
		}
		goto _match_end_4698358512;
		_case_end_4698357680:;
		if (!((_22922_s[static_cast<jule::Int>(_23017_i)] == '-'))) { goto _case_end_4698358128; }
		_case_begin_4698358128:;
		{
			(*this)._field_neg=true;
			(_23017_i)++;
		}
		goto _match_end_4698358512;
		_case_end_4698358128:;
		_match_end_4698358512:;
	}
	jule::Bool _24717_sawdot = false;
	jule::Bool _24817_sawdigits = false;
	_iter_begin_4698357328:;
	if (!(_23017_i < _22922_s.len())) { goto _iter_end_4698357328; }
	{
		{
			if (!((_22922_s[static_cast<jule::Int>(_23017_i)] == '.'))) { goto _case_end_4698365696; }
			_case_begin_4698365696:;
			{
				if (_24717_sawdot) {
					return _22932_ok;
				}
				_24717_sawdot=true;
				(*this)._field_dp=(*this)._field_nd;
				goto _iter_next_4698357328;
			}
			goto _match_end_4698365456;
			_case_end_4698365696:;
			if (!((('0' <= _22922_s[static_cast<jule::Int>(_23017_i)]) && (_22922_s[static_cast<jule::Int>(_23017_i)] <= '9')))) { goto _case_end_4698365824; }
			_case_begin_4698365824:;
			{
				_24817_sawdigits=true;
				if ((_22922_s[static_cast<jule::Int>(_23017_i)] == '0') && ((*this)._field_nd == 0LL)) {
					((*this)._field_dp)--;
					goto _iter_next_4698357328;
				}
				if ((*this)._field_nd < 800LL) {
					(*this)._field_d[static_cast<jule::Int>((*this)._field_nd)]=_22922_s[static_cast<jule::Int>(_23017_i)];
					((*this)._field_nd)++;
				} else if (_22922_s[static_cast<jule::Int>(_23017_i)] != '0') {
					(*this)._field_trunc=true;
				}
				goto _iter_next_4698357328;
			}
			goto _match_end_4698365456;
			_case_end_4698365824:;
			_match_end_4698365456:;
		}
		goto _iter_end_4698357328;
	}
	_iter_next_4698357328:;
	(_23017_i)++;
	goto _iter_begin_4698357328;
	_iter_end_4698357328:;
	if ((!(_24817_sawdigits))) {
		return _22932_ok;
	}
	if ((!(_24717_sawdot))) {
		(*this)._field_dp=(*this)._field_nd;
	}
	if ((_23017_i < _22922_s.len()) && (_1d0632de2_lower(_22922_s[static_cast<jule::Int>(_23017_i)]) == 'e')) {
		(_23017_i)++;
		if (_23017_i >= _22922_s.len()) {
			return _22932_ok;
		}
		jule::Int _29121_esign = 1LL;
		if (_22922_s[static_cast<jule::Int>(_23017_i)] == '+') {
			(_23017_i)++;
		} else if (_22922_s[static_cast<jule::Int>(_23017_i)] == '-') {
			(_23017_i)++;
			_29121_esign=-1LL;
		}
		if (((_23017_i >= _22922_s.len()) || (_22922_s[static_cast<jule::Int>(_23017_i)] < '0')) || (_22922_s[static_cast<jule::Int>(_23017_i)] > '9')) {
			return _22932_ok;
		}
		jule::Int _30121_e = 0LL;
		_iter_begin_4698391024:;
		if (!((_23017_i < _22922_s.len()) && (('0' <= _22922_s[static_cast<jule::Int>(_23017_i)]) && (_22922_s[static_cast<jule::Int>(_23017_i)] <= '9')))) { goto _iter_end_4698391024; }
		{
			if (_30121_e < 10000LL) {
				_30121_e=static_cast<jule::Int>(((_30121_e * 10LL) + static_cast<jule::Int>(_22922_s[static_cast<jule::Int>(_23017_i)])) - '0');
			}
		}
		_iter_next_4698391024:;
		(_23017_i)++;
		goto _iter_begin_4698391024;
		_iter_end_4698391024:;
		(*this)._field_dp+=static_cast<jule::Int>(_30121_e * _29121_esign);
	}
	if (_23017_i != _22922_s.len()) {
		return _22932_ok;
	}
	_22932_ok=true;
	return _22932_ok;
}



inline std::tuple<jule::U64,jule::Bool> _1d159c685_Decimal::_method_float_bits(_1d061d5e7_FloatInfo& _31830_flt) {
	jule::U64 _31848_b = jule::U64();
	jule::Bool _31856_overflow = jule::Bool();
	jule::Int _31917_exp = 0LL;
	jule::U64 _32017_mant = 0LLU;
	if ((*this)._field_nd == 0LL) {
		_32017_mant=0LL;
		_31917_exp=_31830_flt._field_bias;
		goto _julec_label_out;
	}
	if ((*this)._field_dp > 310LL) {
		goto _julec_label_overflow;
	}
	if ((*this)._field_dp < -330LL) {
		_32017_mant=0LL;
		_31917_exp=_31830_flt._field_bias;
		goto _julec_label_out;
	}
	_31917_exp=0LL;
	_iter_begin_4698416224:;
	if (!((*this)._field_dp > 0LL)) { goto _iter_end_4698416224; }
	{
		jule::Int _34521_n = 0LL;
		if ((*this)._field_dp >= _1d05eae54_POWTAB.len()) {
			_34521_n=27LL;
		} else {
			_34521_n=_1d05eae54_POWTAB[static_cast<jule::Int>((*this)._field_dp)];
		}
		(*this)._method_shift(static_cast<jule::Int>((-(_34521_n))));
		_31917_exp+=_34521_n;
	}
	_iter_next_4698416224:;
	goto _iter_begin_4698416224;
	_iter_end_4698416224:;
	_iter_begin_4698418336:;
	if (!(((*this)._field_dp < 0LL) || (((*this)._field_dp == 0LL) && ((*this)._field_d[0LL] < '5')))) { goto _iter_end_4698418336; }
	{
		jule::Int _35521_n = 0LL;
		if ((-((*this)._field_dp)) >= _1d05eae54_POWTAB.len()) {
			_35521_n=27LL;
		} else {
			_35521_n=_1d05eae54_POWTAB[static_cast<jule::Int>((-((*this)._field_dp)))];
		}
		(*this)._method_shift(_35521_n);
		_31917_exp-=_35521_n;
	}
	_iter_next_4698418336:;
	goto _iter_begin_4698418336;
	_iter_end_4698418336:;
	(_31917_exp)--;
	if (_31917_exp < (_31830_flt._field_bias + 1LL)) {
		jule::Int _37217_n = (_31830_flt._field_bias + 1LL) - _31917_exp;
		(*this)._method_shift(static_cast<jule::Int>((-(_37217_n))));
		_31917_exp+=_37217_n;
	}
	if ((_31917_exp - _31830_flt._field_bias) >= ((1LL << _31830_flt._field_expbits) - 1LL)) {
		goto _julec_label_overflow;
	}
	(*this)._method_shift(static_cast<jule::Int>(1LL + _31830_flt._field_mantbits));
	_32017_mant=static_cast<jule::U64>((*this)._method_rounded_integer());
	if (_32017_mant == (2LL << _31830_flt._field_mantbits)) {
		_32017_mant>>=1LL;
		(_31917_exp)++;
		if ((_31917_exp - _31830_flt._field_bias) >= ((1LL << _31830_flt._field_expbits) - 1LL)) {
			goto _julec_label_overflow;
		}
	}
	if ((_32017_mant & (1LL << _31830_flt._field_mantbits)) == 0LL) {
		_31917_exp=_31830_flt._field_bias;
	}
	goto _julec_label_out;
	_julec_label_overflow:;
	_32017_mant=0LL;
	_31917_exp=static_cast<jule::Int>(((1LL << _31830_flt._field_expbits) - 1LL) + _31830_flt._field_bias);
	_31856_overflow=true;
	_julec_label_out:;
	jule::U64 _40817_bits = _32017_mant & ((static_cast<jule::U64>(1LLU) << _31830_flt._field_mantbits) - 1LL);
	_40817_bits|=static_cast<jule::U64>(static_cast<jule::U64>((_31917_exp - _31830_flt._field_bias) & ((1LL << _31830_flt._field_expbits) - 1LL)) << _31830_flt._field_mantbits);
	if ((*this)._field_neg) {
		_40817_bits|=static_cast<jule::Int>((1LL << _31830_flt._field_mantbits) << _31830_flt._field_expbits);
	}
	_31848_b = _40817_bits;
	_31856_overflow = _31856_overflow;
	return std::make_tuple(_31848_b,_31856_overflow);
}



inline void _1d159c685_Decimal::_method_assign(jule::U64 _15229_v) {
	jule::Array<jule::U8,24> _15317_buf = jule::Array<jule::U8,24>({});
	jule::Int _15617_n = 0LL;
	_iter_begin_4698458784:;
	if (!(_15229_v > 0LL)) { goto _iter_end_4698458784; }
	{
		jule::U64 _15817_v1 = jule::div(_15229_v,10LL);
		_15229_v-=static_cast<jule::U64>(10LL * _15817_v1);
		_15317_buf[static_cast<jule::Int>(_15617_n)]=static_cast<jule::U8>(_15229_v + '0');
		(_15617_n)++;
		_15229_v=_15817_v1;
	}
	_iter_next_4698458784:;
	goto _iter_begin_4698458784;
	_iter_end_4698458784:;
	(*this)._field_nd=0LL;
	(_15617_n)--;
	_iter_begin_4698459552:;
	if (!(_15617_n >= 0LL)) { goto _iter_end_4698459552; }
	{
		(*this)._field_d[static_cast<jule::Int>((*this)._field_nd)]=_15317_buf[static_cast<jule::Int>(_15617_n)];
		((*this)._field_nd)++;
	}
	_iter_next_4698459552:;
	(_15617_n)--;
	goto _iter_begin_4698459552;
	_iter_end_4698459552:;
	(*this)._field_dp=(*this)._field_nd;
	_1d159c685_trim((*this));
}



inline void _1d159c685_Decimal::_method_shift(jule::Int _17728_k) {
	{
		if (!(((*this)._field_nd == 0LL))) { goto _case_end_4698471152; }
		goto _match_end_4698470912;
		_case_end_4698471152:;
		if (!((_17728_k > 0LL))) { goto _case_end_4698471280; }
		_case_begin_4698471280:;
		{
			_iter_begin_4698472592:;
			if (!(_17728_k > 60LLU)) { goto _iter_end_4698472592; }
			{
				_1d159c685_left_shift((*this),60LLU);
				_17728_k-=60LLU;
			}
			_iter_next_4698472592:;
			goto _iter_begin_4698472592;
			_iter_end_4698472592:;
			_1d159c685_left_shift((*this),static_cast<jule::Uint>(_17728_k));
		}
		goto _match_end_4698470912;
		_case_end_4698471280:;
		if (!((_17728_k < 0LL))) { goto _case_end_4698471408; }
		_case_begin_4698471408:;
		{
			_iter_begin_4698471584:;
			if (!(_17728_k < -60LL)) { goto _iter_end_4698471584; }
			{
				_1d159c685_right_shift((*this),60LLU);
				_17728_k+=60LLU;
			}
			_iter_next_4698471584:;
			goto _iter_begin_4698471584;
			_iter_end_4698471584:;
			_1d159c685_right_shift((*this),static_cast<jule::Uint>((-(_17728_k))));
		}
		goto _match_end_4698470912;
		_case_end_4698471408:;
		_match_end_4698470912:;
	}
}



inline void _1d159c685_Decimal::_method_round_down(jule::Int _19729_nd) {
	if ((_19729_nd < 0LL) || (_19729_nd >= (*this)._field_nd)) {
		return;
	}
	(*this)._field_nd=_19729_nd;
	_1d159c685_trim((*this));
}



inline void _1d159c685_Decimal::_method_round_up(jule::Int _20627_nd) {
	if ((_20627_nd < 0LL) || (_20627_nd >= (*this)._field_nd)) {
		return;
	}
	jule::Int _21217_i = _20627_nd - 1LL;
	_iter_begin_4698484384:;
	if (!(_21217_i >= 0LL)) { goto _iter_end_4698484384; }
	{
		jule::U8 _21417_c = (*this)._field_d[static_cast<jule::Int>(_21217_i)];
		if (_21417_c < '9') {
			((*this)._field_d[static_cast<jule::Int>(_21217_i)])++;
			(*this)._field_nd=static_cast<jule::Int>(_21217_i + 1LL);
			return;
		}
	}
	_iter_next_4698484384:;
	(_21217_i)--;
	goto _iter_begin_4698484384;
	_iter_end_4698484384:;
	(*this)._field_d[0LL]='1';
	(*this)._field_nd=1LL;
	((*this)._field_dp)++;
}



inline void _1d159c685_Decimal::_method_round(jule::Int _23324_nd) {
	if ((_23324_nd < 0LL) || (_23324_nd >= (*this)._field_nd)) {
		return;
	}
	if (_1d159c685_should_round_up((*this),_23324_nd)) {
		(*this)._method_round_up(_23324_nd);
	} else {
		(*this)._method_round_down(_23324_nd);
	}
}



inline jule::U64 _1d159c685_Decimal::_method_rounded_integer(void) {
	if ((*this)._field_dp > 20LL) {
		return jule::MAX_U64;
	}
	jule::Int _25017_i = 0LL;
	jule::U64 _25117_n = 0LLU;
	_iter_begin_4698502048:;
	if (!((_25017_i < (*this)._field_dp) && (_25017_i < (*this)._field_nd))) { goto _iter_end_4698502048; }
	{
		_25117_n=static_cast<jule::U64>((_25117_n * 10LL) + static_cast<jule::U64>((*this)._field_d[static_cast<jule::Int>(_25017_i)] - '0'));
	}
	_iter_next_4698502048:;
	(_25017_i)++;
	goto _iter_begin_4698502048;
	_iter_end_4698502048:;
	_iter_begin_4698503440:;
	if (!(_25017_i < (*this)._field_dp)) { goto _iter_end_4698503440; }
	{
		_25117_n*=10LL;
	}
	_iter_next_4698503440:;
	(_25017_i)++;
	goto _iter_begin_4698503440;
	_iter_end_4698503440:;
	if (_1d159c685_should_round_up((*this),(*this)._field_dp)) {
		(_25117_n)++;
	}
	return _25117_n;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d159c685_Decimal &_Src) {
	_Stream << "Decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1e19221_DirEntry &_Src) {
	_Stream << "DirEntry{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "stat:" << _Src._field_stat;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::Int,jule::Int> _1d1ee0946_File::_method_write(jule::Slice<jule::U8> _1528_buff) {
	jule::Int _1544_n = jule::Int();
	if (_1528_buff.len() == 0LL) {
		_1544_n = 0LL;
		return std::make_tuple(_1544_n,0LLU);
	}
	_1544_n=static_cast<jule::Int>(static_cast<jule::Int>(_1d073d085_write(static_cast<jule::Int>((*this)._field_handle),(&(_1528_buff[0LL])),static_cast<jule::Uint>(_1528_buff.len()))));
	if (_1544_n == -1LL) {
		_1544_n = 0LL;
		return std::make_tuple(_1544_n,_1d1da0a6a_get_last_fs_error());
	}
	_1544_n = _1544_n;
	return std::make_tuple(_1544_n,0LLU);
}



inline std::tuple<jule::Int,jule::Int> _1d1ee0946_File::_method_read(jule::Slice<jule::U8> _3731_buff) {
	jule::Int _3747_n = jule::Int();
	if (_3731_buff.len() == 0LL) {
		_3747_n = 0LL;
		return std::make_tuple(_3747_n,0LLU);
	}
	_3747_n=static_cast<jule::Int>(static_cast<jule::Int>(_1d073d085_read(static_cast<jule::Int>((*this)._field_handle),(&(_3731_buff[0LL])),static_cast<jule::Uint>(_3731_buff.len()))));
	if (_3747_n == -1LL) {
		_3747_n=0LL;
		_3747_n = _3747_n;
		return std::make_tuple(_3747_n,_1d1da0a6a_get_last_fs_error());
	}
	_3747_n = _3747_n;
	return std::make_tuple(_3747_n,0LLU);
}



inline jule::Ref<_1d1ee0946_File> _1d1ee0946_File::_static_method_new(jule::Uintptr _4523_handle) {
	return jule::new_struct<_1d1ee0946_File>(new( std::nothrow ) _1d1ee0946_File(_4523_handle));
}



inline std::tuple<jule::I64,jule::Int> _1d1ee0946_File::_method_seek(jule::I64 _6027_offset,jule::Int _6040_origin) {
	jule::I64 _6113_pos = _1d073d085_seek(static_cast<jule::Int>((*this)._field_handle),_6027_offset,static_cast<jule::Int>(_6040_origin));
	return std::make_tuple(_6113_pos,0LLU);
}



inline jule::Int _1d1ee0946_File::_method_close(void) {
	if (_1d073d085_close(static_cast<jule::Int>((*this)._field_handle)) == -1LL) {
		return _1d1da0a6a_get_last_fs_error();
	}
	return 0LLU;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1ee0946_File &_Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d2151920_Status::_method_is_dir(void) {
	return ((*this)._field_mode & 16384LL) == 16384LL;
}



inline jule::Bool _1d2151920_Status::_method_is_reg(void) {
	return ((*this)._field_mode & 32768LL) == 32768LL;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d2151920_Status &_Src) {
	_Stream << "Status{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d2375913_FoldPair &_Src) {
	_Stream << "FoldPair{";
	_Stream << "from:" << _Src._field_from << ", ";
	_Stream << "to:" << _Src._field_to;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d2375913_CaseRange &_Src) {
	_Stream << "CaseRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "delta:" << _Src._field_delta;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d2375913_Range16 &_Src) {
	_Stream << "Range16{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "stride:" << _Src._field_stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d2375913_Range32 &_Src) {
	_Stream << "Range32{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "stride:" << _Src._field_stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d2375913_RangeTable &_Src) {
	_Stream << "RangeTable{";
	_Stream << "r16:" << _Src._field_r16 << ", ";
	_Stream << "r32:" << _Src._field_r32 << ", ";
	_Stream << "latin_offset:" << _Src._field_latin_offset;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b818a2be_accept_range &_Src) {
	_Stream << "accept_range{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}



inline jule::Int _1d1da4277_Token::_method_prec(void) {
	if ((*this)._field_id != 7LLU) {
		return -1LL;
	}
	{
		auto _match_expr{ (*this)._field_kind };
		if (!((jule::Str("*", 1)) == _match_expr || (jule::Str("%", 1)) == _match_expr || (jule::Str("/", 1)) == _match_expr || (jule::Str(">>", 2)) == _match_expr || (jule::Str("<<", 2)) == _match_expr || (jule::Str("&", 1)) == _match_expr)) { goto _case_end_4704584848; }
		_case_begin_4704584848:;
		{
			return 5LL;
		}
		goto _match_end_4704581840;
		_case_end_4704584848:;
		if (!((jule::Str("+", 1)) == _match_expr || (jule::Str("-", 1)) == _match_expr || (jule::Str("|", 1)) == _match_expr || (jule::Str("^", 1)) == _match_expr)) { goto _case_end_4704584960; }
		_case_begin_4704584960:;
		{
			return 4LL;
		}
		goto _match_end_4704581840;
		_case_end_4704584960:;
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr || (jule::Str("=", 1)) == _match_expr || (jule::Str("<", 1)) == _match_expr || (jule::Str("<=", 2)) == _match_expr || (jule::Str(">", 1)) == _match_expr || (jule::Str(">=", 2)) == _match_expr)) { goto _case_end_4704585136; }
		_case_begin_4704585136:;
		{
			return 3LL;
		}
		goto _match_end_4704581840;
		_case_end_4704585136:;
		if (!((jule::Str("&&", 2)) == _match_expr)) { goto _case_end_4704585248; }
		_case_begin_4704585248:;
		{
			return 2LL;
		}
		goto _match_end_4704581840;
		_case_end_4704585248:;
		if (!((jule::Str("||", 2)) == _match_expr)) { goto _case_end_4704585360; }
		_case_begin_4704585360:;
		{
			return 1LL;
		}
		goto _match_end_4704581840;
		_case_end_4704585360:;
		_case_begin_4704582960:;
		{
			return -1LL;
		}
		goto _match_end_4704581840;
		_case_end_4704582960:;
		_match_end_4704581840:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1da4277_Token &_Src) {
	_Stream << "Token{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d1ee01b5_File::_method_is_ok(void) {
	jule::Int _1917_err;
	std::tie(std::ignore,_1917_err) = _1d1edea66_stat((*this)._field__path);
	return _1917_err == 0LLU;
}



inline void _1d1ee01b5_File::_method_fill(jule::Slice<jule::U8> _2431_data) {
	(*this)._field_data=_2431_data;
}



inline jule::Str _1d1ee01b5_File::_method_path(void) {
	return (*this)._field__path;
}



inline jule::Str _1d1ee01b5_File::_method_dir(void) {
	return _1d0680a33_dir((*this)._field__path);
}



inline jule::Str _1d1ee01b5_File::_method_name(void) {
	return _1d0680a33_base((*this)._field__path);
}



inline jule::Uintptr _1d1ee01b5_File::_method_addr(void) {
	return ((jule::Uintptr)((&((*this)))));
}



inline jule::Slice<_1d1da4277_Token> _1d1ee01b5_File::_method_tokens(void) {
	return (*this)._field__tokens;
}



inline jule::Str _1d1ee01b5_File::_method_get_row(jule::Int _4426_row) {
	jule::Int _4517_n = 0LL;
	jule::Int _4617_line_start = 0LL;
	jule::Int _4717_i = 0LL;
	_iter_begin_4704607472:;
	if (!(_4717_i < (*this)._field_data.len())) { goto _iter_end_4704607472; }
	{
		if ((*this)._field_data[static_cast<jule::Int>(_4717_i)] != '\n') {
			goto _iter_next_4704607472;
		}
		(_4517_n)++;
		if (_4517_n == _4426_row) {
			return static_cast<jule::Str>((*this)._field_data.slice(static_cast<jule::Int>(_4617_line_start),static_cast<jule::Int>(_4717_i)));
		}
		_4617_line_start=static_cast<jule::Int>(_4717_i + 1LL);
	}
	_iter_next_4704607472:;
	(_4717_i)++;
	goto _iter_begin_4704607472;
	_iter_end_4704607472:;
	return jule::Str("", 0);
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1ee01b5_File &_Src) {
	_Stream << "File{";
	_Stream << "data:" << _Src._field_data << ", ";
	_Stream << "_path:" << _Src._field__path << ", ";
	_Stream << "_tokens:" << _Src._field__tokens;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d215b155_KindPair &_Src) {
	_Stream << "KindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _1d215b155_Lex::_method_push_err(jule::Str _40227_fmt,jule::Slice<jule::Any> _40240_args) {
	(*this)._field_errors=jule::append((*this)._field_errors,jule::Slice<_1d0557e9e_Log>({_1d215b155_make_err((*this)._field_row,(*this)._field_column,(*this)._field_file,_40227_fmt,_40240_args)}));
}



inline void _1d215b155_Lex::_method_push_err_tok(_1d1da4277_Token& _40732_token,jule::Str _40746_fmt) {
	(*this)._field_errors=jule::append((*this)._field_errors,jule::Slice<_1d0557e9e_Log>({_1d215b155_make_err(_40732_token._field_row,_40732_token._field_column,(*this)._field_file,_40746_fmt,jule::Slice<jule::Any>({}))}));
}



inline void _1d215b155_Lex::_method_lex(void) {
	(*this)._field_errors=nullptr;
	(*this)._method_new_line();
	_iter_begin_4704627232:;
	if (!((*this)._field_pos < (*this)._field_file->_field_data.len())) { goto _iter_end_4704627232; }
	{
		_1d1da4277_Token _41721_token = (*this)._method_token();
		if (_41721_token._field_id != 0LLU) {
			(*this)._field_tokens=jule::append((*this)._field_tokens,jule::Slice<_1d1da4277_Token>({_41721_token}));
		}
	}
	_iter_next_4704627232:;
	goto _iter_begin_4704627232;
	_iter_end_4704627232:;
}



inline jule::Str _1d215b155_Lex::_method_id(jule::Slice<jule::U8>& _42622_ln) {
	if (_42622_ln.len() == 0LL) {
		return jule::Str("", 0);
	}
	jule::I32 _43014_r;
	jule::Int _43021_i;
	std::tie(_43014_r,_43021_i) = _1b818a2be_decode_rune(_42622_ln);
	if ((_43014_r != '_') && (!(_1d1da4277_is_letter(_43014_r)))) {
		return jule::Str("", 0);
	}
	_iter_begin_4704641392:;
	if (!(_43021_i < _42622_ln.len())) { goto _iter_end_4704641392; }
	{
		jule::I32 _43618_r;
		jule::Int _43621_n;
		std::tie(_43618_r,_43621_n) = _1b818a2be_decode_rune(_42622_ln.slice(static_cast<jule::Int>(_43021_i)));
		if (((_43618_r != '_') && (!(_1d1da4277_is_decimal(static_cast<jule::U8>(_43618_r))))) && (!(_1d1da4277_is_letter(_43618_r)))) {
			(*this)._field_pos+=_43021_i;
			return static_cast<jule::Str>(_42622_ln.slice(0LL,static_cast<jule::Int>(_43021_i)));
		}
		_43021_i+=_43621_n;
	}
	_iter_next_4704641392:;
	goto _iter_begin_4704641392;
	_iter_end_4704641392:;
	(*this)._field_pos+=static_cast<jule::I64>(_42622_ln.len());
	return static_cast<jule::Str>(_42622_ln);
}



inline jule::Slice<jule::U8> _1d215b155_Lex::_method_resume(void) {
	jule::Int _45117_i = (*this)._field_pos;
	_iter_begin_4704652544:;
	if (!(_45117_i < (*this)._field_file->_field_data.len())) { goto _iter_end_4704652544; }
	{
		jule::I32 _45317_r = static_cast<jule::I32>((*this)._field_file->_field_data[static_cast<jule::Int>(_45117_i)]);
		if (_1d1da4277_is_space(_45317_r)) {
			((*this)._field_pos)++;
			{
				auto _match_expr{ _45317_r };
				if (!(('\n') == _match_expr)) { goto _case_end_4704659248; }
				_case_begin_4704659248:;
				{
					(*this)._method_new_line();
				}
				goto _match_end_4704656736;
				_case_end_4704659248:;
				if (!(('\t') == _match_expr)) { goto _case_end_4704659360; }
				_case_begin_4704659360:;
				{
					(*this)._field_column+=8LL;
				}
				goto _match_end_4704656736;
				_case_end_4704659360:;
				_case_begin_4704657648:;
				{
					((*this)._field_column)++;
				}
				goto _match_end_4704656736;
				_case_end_4704657648:;
				_match_end_4704656736:;
			}
			goto _iter_next_4704652544;
		}
		jule::Int _46421_j = _45117_i;
		_iter_begin_4704660608:;
		if (!(_46421_j < (*this)._field_file->_field_data.len())) { goto _iter_end_4704660608; }
		{
			if ((*this)._field_file->_field_data[static_cast<jule::Int>(_46421_j)] == '\n') {
				goto _iter_end_4704660608;
			}
		}
		_iter_next_4704660608:;
		(_46421_j)++;
		goto _iter_begin_4704660608;
		_iter_end_4704660608:;
		return (*this)._field_file->_field_data.slice(static_cast<jule::Int>(_45117_i),static_cast<jule::Int>(_46421_j));
	}
	_iter_next_4704652544:;
	(_45117_i)++;
	goto _iter_begin_4704652544;
	_iter_end_4704652544:;
	return nullptr;
}



inline void _1d215b155_Lex::_method_lex_line_comment(_1d1da4277_Token& _47640_token) {
	jule::Int _47713_start = (*this)._field_pos;
	(*this)._field_pos+=2LL;
	_iter_begin_4704672016:;
	if (!((*this)._field_pos < (*this)._field_file->_field_data.len())) { goto _iter_end_4704672016; }
	{
		jule::U8 _48117_r = (*this)._field_file->_field_data[static_cast<jule::Int>((*this)._field_pos)];
		if ((_48117_r == '\n') || (_48117_r == '\r')) {
			if ((*this)._method_is_first_token_of_line()) {
				_47640_token._field_id=18LLU;
				_47640_token._field_kind=static_cast<jule::Str>((*this)._field_file->_field_data.slice(static_cast<jule::Int>(_47713_start),static_cast<jule::Int>((*this)._field_pos)));
			}
			return;
		}
	}
	_iter_next_4704672016:;
	((*this)._field_pos)++;
	goto _iter_begin_4704672016;
	_iter_end_4704672016:;
	if ((*this)._method_is_first_token_of_line()) {
		_47640_token._field_id=18LLU;
		_47640_token._field_kind=static_cast<jule::Str>((*this)._field_file->_field_data.slice(static_cast<jule::Int>(_47713_start)));
	}
}



inline void _1d215b155_Lex::_method_lex_range_comment(void) {
	(*this)._field_pos+=2LL;
	_iter_begin_4704685664:;
	if (!((*this)._field_pos < (*this)._field_file->_field_data.len())) { goto _iter_end_4704685664; }
	{
		jule::U8 _50017_r = (*this)._field_file->_field_data[static_cast<jule::Int>((*this)._field_pos)];
		if (_50017_r == '\r') {
			goto _iter_next_4704685664;
		}
		if (_50017_r == '\n') {
			(*this)._method_new_line();
			goto _iter_next_4704685664;
		}
		(*this)._field_column+=1LL;
		if (((((*this)._field_pos + 1LL) < (*this)._field_file->_field_data.len()) && (_50017_r == '*')) && ((*this)._field_file->_field_data[static_cast<jule::Int>((*this)._field_pos + 1LL)] == '/')) {
			(*this)._field_column+=2LL;
			(*this)._field_pos+=2LL;
			return;
		}
	}
	_iter_next_4704685664:;
	((*this)._field_pos)++;
	goto _iter_begin_4704685664;
	_iter_end_4704685664:;
	(*this)._method_push_err(jule::Str("missing block comment close", 27),jule::Slice<jule::Any>({}));
}



inline jule::Str _1d215b155_Lex::_method_num(jule::Slice<jule::U8>& _52123_txt) {
	jule::Str _52138_lit = jule::Str();
	_52138_lit=_1d215b155_hex_num(_52123_txt);
	if (_52138_lit != jule::Str("", 0)) {
		goto _julec_label_end;
	}
	_52138_lit=_1d215b155_octal_num(_52123_txt);
	if (_52138_lit != jule::Str("", 0)) {
		goto _julec_label_end;
	}
	_52138_lit=_1d215b155_binary_num(_52123_txt);
	if (_52138_lit != jule::Str("", 0)) {
		goto _julec_label_end;
	}
	_52138_lit=_1d215b155_common_num(_52123_txt);
	_julec_label_end:;
	(*this)._field_pos+=static_cast<jule::I64>(_52138_lit.len());
	return _52138_lit;
}



inline jule::Str _1d215b155_Lex::_method_escape_seq(jule::Slice<jule::U8>& _54030_txt) {
	jule::Str _54117_seq = jule::Str("", 0);
	if (_54030_txt.len() < 2LL) {
		goto _julec_label_end;
	}
	{
		auto _match_expr{ _54030_txt[1LL] };
		if (!(('\\') == _match_expr || ('\'') == _match_expr || ('\"') == _match_expr || ('a') == _match_expr || ('b') == _match_expr || ('f') == _match_expr || ('n') == _match_expr || ('r') == _match_expr || ('t') == _match_expr || ('v') == _match_expr)) { goto _case_end_4704719600; }
		_case_begin_4704719600:;
		{
			(*this)._field_pos+=2LL;
			return static_cast<jule::Str>(_54030_txt.slice(0LL,2LL));
		}
		goto _match_end_4704716928;
		_case_end_4704719600:;
		if (!(('U') == _match_expr)) { goto _case_end_4704720528; }
		_case_begin_4704720528:;
		{
			_54117_seq=_1d215b155_big_unicode_point_escape(_54030_txt);
		}
		goto _match_end_4704716928;
		_case_end_4704720528:;
		if (!(('u') == _match_expr)) { goto _case_end_4704720640; }
		_case_begin_4704720640:;
		{
			_54117_seq=_1d215b155_little_unicode_point_escape(_54030_txt);
		}
		goto _match_end_4704716928;
		_case_end_4704720640:;
		if (!(('x') == _match_expr)) { goto _case_end_4704718960; }
		_case_begin_4704718960:;
		{
			_54117_seq=_1d215b155_hex_byte_escape(_54030_txt);
		}
		goto _match_end_4704716928;
		_case_end_4704718960:;
		_case_begin_4704718656:;
		{
			_54117_seq=_1d215b155_byte_escape(_54030_txt);
		}
		goto _match_end_4704716928;
		_case_end_4704718656:;
		_match_end_4704716928:;
	}
	_julec_label_end:;
	if (_54117_seq == jule::Str("", 0)) {
		((*this)._field_pos)++;
		(*this)._method_push_err(jule::Str("invalid escape sequence", 23),jule::Slice<jule::Any>({}));
		return jule::Str("", 0);
	}
	(*this)._field_pos+=static_cast<jule::I64>(_54117_seq.len());
	return _54117_seq;
}



inline jule::Str _1d215b155_Lex::_method_get_rune(jule::Slice<jule::U8>& _57428_txt,jule::Bool _57441_raw) {
	if ((!(_57441_raw)) && (_57428_txt[0LL] == '\\')) {
		return (*this)._method_escape_seq(_57428_txt);
	}
	jule::I32 _57914_r;
	jule::Int _57917_n;
	std::tie(_57914_r,_57917_n) = _1b818a2be_decode_rune(_57428_txt);
	(*this)._field_pos+=_57917_n;
	return static_cast<jule::Str>(_57914_r);
}



inline jule::Str _1d215b155_Lex::_method_lex_rune(jule::Slice<jule::U8>& _58428_txt) {
	jule::Str _58517_run = jule::Str("'", 1);
	((*this)._field_column)++;
	jule::Int _58717_n = 0LL;
	jule::Int _58817_i = 1LL;
	_iter_begin_4704740080:;
	if (!(_58817_i < _58428_txt.len())) { goto _iter_end_4704740080; }
	{
		if (_58428_txt[static_cast<jule::Int>(_58817_i)] == '\r') {
			goto _iter_next_4704740080;
		}
		if (_58428_txt[static_cast<jule::Int>(_58817_i)] == '\n') {
			(*this)._method_push_err(jule::Str("rune is not finished", 20),jule::Slice<jule::Any>({}));
			((*this)._field_pos)++;
			(*this)._method_new_line();
			return jule::Str("", 0);
		}
		jule::Slice<jule::U8> _60017_part = _58428_txt.slice(static_cast<jule::Int>(_58817_i));
		jule::Str _60117_r = (*this)._method_get_rune(_60017_part,false);
		_58517_run+=_60117_r;
		jule::I64 _60317_length = _60117_r.len();
		(*this)._field_column+=_60317_length;
		if (_60117_r == jule::Str("'", 1)) {
			((*this)._field_pos)++;
			goto _iter_end_4704740080;
		}
		if (_60317_length > 1LL) {
			_58817_i+=static_cast<jule::I64>(_60317_length - 1LL);
		}
		(_58717_n)++;
	}
	_iter_next_4704740080:;
	(_58817_i)++;
	goto _iter_begin_4704740080;
	_iter_end_4704740080:;
	if (_58717_n == 0LL) {
		(*this)._method_push_err(jule::Str("rune is cannot empty", 20),jule::Slice<jule::Any>({}));
	} else if (_58717_n > 1LL) {
		(*this)._method_push_err(jule::Str("rune is should be single", 24),jule::Slice<jule::Any>({}));
	}
	return _58517_run;
}



inline jule::Str _1d215b155_Lex::_method_lex_str(void) {
	jule::Str _62517_s = jule::Str("", 0);
	jule::U8 _62613_mark = (*this)._field_file->_field_data[static_cast<jule::Int>((*this)._field_pos)];
	((*this)._field_pos)++;
	jule::Bool _62813_raw = _62613_mark == '`';
	_62517_s+=static_cast<jule::Str>(_62613_mark);
	((*this)._field_column)++;
	_iter_begin_4704769264:;
	if (!((*this)._field_pos < (*this)._field_file->_field_data.len())) { goto _iter_end_4704769264; }
	{
		jule::U8 _63317_ch = (*this)._field_file->_field_data[static_cast<jule::Int>((*this)._field_pos)];
		if (_63317_ch == '\r') {
			goto _iter_next_4704769264;
		}
		if (_63317_ch == '\n') {
			(*this)._method_new_line();
			if ((!(_62813_raw))) {
				(*this)._method_push_err(jule::Str("string is not finished", 22),jule::Slice<jule::Any>({}));
				((*this)._field_pos)++;
				return jule::Str("", 0);
			}
		}
		jule::Slice<jule::U8> _64521_part = (*this)._field_file->_field_data.slice(static_cast<jule::Int>((*this)._field_pos));
		jule::Str _64617_r = (*this)._method_get_rune(_64521_part,_62813_raw);
		_62517_s+=_64617_r;
		(*this)._field_column+=static_cast<jule::I64>(_64617_r.len());
		if (_63317_ch == _62613_mark) {
			goto _iter_end_4704769264;
		}
	}
	_iter_next_4704769264:;
	goto _iter_begin_4704769264;
	_iter_end_4704769264:;
	return _62517_s;
}



inline jule::Bool _1d215b155_Lex::_method_is_first_token_of_line(void) {
	return (*this)._field_column == 1LL;
}



inline void _1d215b155_Lex::_method_new_line(void) {
	((*this)._field_row)++;
	(*this)._field_column=1LL;
}



inline jule::Bool _1d215b155_Lex::_method_is_op(jule::Slice<jule::U8>& _66625_txt,jule::Str _66638_kind,jule::Uint _66649_id,_1d1da4277_Token& _66667_t) {
	if ((!(_1d215b155_bytes_has_prefix(_66625_txt,_66638_kind)))) {
		return false;
	}
	_66667_t._field_kind=_66638_kind;
	_66667_t._field_id=_66649_id;
	(*this)._field_pos+=static_cast<jule::I64>(_66638_kind.len());
	return true;
}



inline jule::Bool _1d215b155_Lex::_method_lex_basic_ops(jule::Slice<jule::U8> _67732_txt,_1d1da4277_Token& _67750_tok) {
	{
		auto _range_expr = _1d215b155_BASIC_OPS;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			_1d215b155_KindPair _1d215b155_pair = *_range_begin;
			_iter_begin_4704799056:;
			{
				if ((*this)._method_is_op(_67732_txt,_1d215b155_pair._field_kind,_1d215b155_pair._field_id,_67750_tok)) {
					return true;
				}
			}
			_iter_next_4704799056:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d215b155_pair = *_range_begin; goto _iter_begin_4704799056; }
			_iter_end_4704799056:;
		}
	}
	return false;
}



inline jule::Bool _1d215b155_Lex::_method_lex_id(jule::Slice<jule::U8>& _68726_txt,_1d1da4277_Token& _68744_t) {
	jule::Str _68813_lex = (*this)._method_id(_68726_txt);
	if (_68813_lex == jule::Str("", 0)) {
		return false;
	}
	_68744_t._field_kind=_68813_lex;
	_68744_t._field_id=2LLU;
	return true;
}



inline jule::Bool _1d215b155_Lex::_method_lex_num(jule::Slice<jule::U8>& _69827_txt,_1d1da4277_Token& _69845_t) {
	jule::Str _69913_lex = (*this)._method_num(_69827_txt);
	if (_69913_lex == jule::Str("", 0)) {
		return false;
	}
	_69845_t._field_kind=_69913_lex;
	_69845_t._field_id=6LLU;
	return true;
}



inline _1d1da4277_Token _1d215b155_Lex::_method_token(void) {
	_1d1da4277_Token _71117_t = _1d1da4277_Token((*this)._field_file,jule::Int(),jule::Int(),jule::Str(),0LLU);
	jule::Slice<jule::U8> _71313_txt = (*this)._method_resume();
	if (_71313_txt == nullptr) {
		return _71117_t;
	}
	_71117_t._field_column=(*this)._field_column;
	_71117_t._field_row=(*this)._field_row;
	{
		if (!(((*this)._method_lex_num(_71313_txt,_71117_t)))) { goto _case_end_4704825888; }
		goto _match_end_4704819520;
		_case_end_4704825888:;
		if (!((_71313_txt[0LL] == '\''))) { goto _case_end_4704826000; }
		_case_begin_4704826000:;
		{
			_71117_t._field_kind=(*this)._method_lex_rune(_71313_txt);
			_71117_t._field_id=6LLU;
			return _71117_t;
		}
		goto _match_end_4704819520;
		_case_end_4704826000:;
		if (!(((_71313_txt[0LL] == '\"') || (_71313_txt[0LL] == '`')))) { goto _case_end_4704821536; }
		_case_begin_4704821536:;
		{
			_71117_t._field_kind=(*this)._method_lex_str();
			_71117_t._field_id=6LLU;
			return _71117_t;
		}
		goto _match_end_4704819520;
		_case_end_4704821536:;
		if (!((_1d215b155_bytes_has_prefix(_71313_txt,jule::Str("//", 2))))) { goto _case_end_4704821648; }
		_case_begin_4704821648:;
		{
			(*this)._method_lex_line_comment(_71117_t);
			return _71117_t;
		}
		goto _match_end_4704819520;
		_case_end_4704821648:;
		if (!((_1d215b155_bytes_has_prefix(_71313_txt,jule::Str("/*", 2))))) { goto _case_end_4704821760; }
		_case_begin_4704821760:;
		{
			(*this)._method_lex_range_comment();
			return _71117_t;
		}
		goto _match_end_4704819520;
		_case_end_4704821760:;
		if (!(((*this)._method_is_op(_71313_txt,jule::Str("(", 1),3LLU,_71117_t)) || ((*this)._method_is_op(_71313_txt,jule::Str(")", 1),3LLU,_71117_t)) || ((*this)._method_is_op(_71313_txt,jule::Str("{", 1),3LLU,_71117_t)) || ((*this)._method_is_op(_71313_txt,jule::Str("}", 1),3LLU,_71117_t)) || ((*this)._method_is_op(_71313_txt,jule::Str("[", 1),3LLU,_71117_t)) || ((*this)._method_is_op(_71313_txt,jule::Str("]", 1),3LLU,_71117_t)) || ((*this)._method_lex_basic_ops(_71313_txt,_71117_t)))) { goto _case_end_4704826560; }
		goto _match_end_4704819520;
		_case_end_4704826560:;
		if (!(((*this)._method_lex_id(_71313_txt,_71117_t)))) { goto _case_end_4704826672; }
		_case_begin_4704826672:;
		{
			{
				auto _range_expr = _1d215b155_KEYWORDS;
				if (_range_expr.begin() != _range_expr.end()) {
					auto _range_begin = _range_expr.begin();
					const auto _range_end = _range_expr.end();
					_1d215b155_KindPair _1d215b155_pair = *_range_begin;
					_iter_begin_4704843104:;
					{
						if (_1d215b155_pair._field_kind == _71117_t._field_kind) {
							_71117_t._field_id=_1d215b155_pair._field_id;
							goto _iter_end_4704843104;
						}
					}
					_iter_next_4704843104:;
					++_range_begin;
					if (_range_begin != _range_end) { _1d215b155_pair = *_range_begin; goto _iter_begin_4704843104; }
					_iter_end_4704843104:;
				}
			}
		}
		goto _match_end_4704819520;
		_case_end_4704826672:;
		_case_begin_4704821088:;
		{
			jule::I32 _76318_r;
			jule::Int _76321_sz;
			std::tie(_76318_r,_76321_sz) = _1b818a2be_decode_rune(_71313_txt);
			(*this)._method_push_err(jule::Str("undefined code content: @", 25),jule::Slice<jule::Any>({jule::Any(_76318_r)}));
			((*this)._field_column)++;
			(*this)._field_pos+=_76321_sz;
			return _71117_t;
		}
		goto _match_end_4704819520;
		_case_end_4704821088:;
		_match_end_4704819520:;
	}
	(*this)._field_column+=static_cast<jule::I64>(_71117_t._field_kind.len());
	return _71117_t;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d215b155_Lex &_Src) {
	_Stream << "Lex{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d21640e7_Ast &_Src) {
	_Stream << "Ast{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "top_directives:" << _Src._field_top_directives << ", ";
	_Stream << "use_decls:" << _Src._field_use_decls << ", ";
	_Stream << "impls:" << _Src._field_impls << ", ";
	_Stream << "comments:" << _Src._field_comments << ", ";
	_Stream << "decls:" << _Src._field_decls;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1e5192e_CommentGroup &_Src) {
	_Stream << "CommentGroup{";
	_Stream << "comments:" << _Src._field_comments;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1e5192e_NamespaceTypeDecl &_Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "idents:" << _Src._field_idents << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1e5192e_RefTypeDecl &_Src) {
	_Stream << "RefTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1e5192e_SlcTypeDecl &_Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1e5192e_TupleTypeDecl &_Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "types:" << _Src._field_types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d1e5192e_PtrTypeDecl::_method_is_unsafe(void) {
	return (!(jule::real((*this)._field_elem)));
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1e5192e_PtrTypeDecl &_Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d1e5192e_ArrTypeDecl::_method_auto_sized(void) {
	return (!(jule::real((*this)._field_size)));
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1e5192e_ArrTypeDecl &_Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1e5192e_MapTypeDecl &_Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1e5192e_RetTypeDecl &_Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "idents:" << _Src._field_idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1e5192e_TupleExpr &_Src) {
	_Stream << "TupleExpr{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1e5192e_CastExpr &_Src) {
	_Stream << "CastExpr{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1e5192e_StructLit &_Src) {
	_Stream << "StructLit{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1e5192e_ScopeTree &_Src) {
	_Stream << "ScopeTree{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "deferred:" << _Src._field_deferred << ", ";
	_Stream << "stmts:" << _Src._field_stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1e5192e_Conditional &_Src) {
	_Stream << "Conditional{";
	_Stream << "head:" << _Src._field_head << ", ";
	_Stream << "tail:" << _Src._field_tail << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1ee1617_FileInfo &_Src) {
	_Stream << "FileInfo{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1ee1617_PackageInfo &_Src) {
	_Stream << "PackageInfo{";
	_Stream << "files:" << _Src._field_files;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d21a4698_Stmt &_Src) {
	_Stream << "Stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _1d21a4698_ScopeParser::_method_stop(void) {
	(*this)._field_pos=-1LL;
}



inline jule::Bool _1d21a4698_ScopeParser::_method_stopped(void) {
	return (*this)._field_pos == -1LL;
}



inline jule::Bool _1d21a4698_ScopeParser::_method_finished(void) {
	return (*this)._field_pos >= (*this)._field_stms.len();
}



inline jule::Bool _1d21a4698_ScopeParser::_method_is_last_st(void) {
	return ((*this)._field_pos + 1LL) >= (*this)._field_stms.len();
}



inline void _1d21a4698_ScopeParser::_method_push_err(_1d1da4277_Token _17527_token,jule::Str _17541_fmt) {
	(*this)._field_p->_method_push_err(_17527_token,_17541_fmt,jule::Slice<jule::Any>({}));
}



inline void _1d21a4698_ScopeParser::_method_push_suggestion(jule::Str _17834_fmt,jule::Slice<jule::Any> _17847_args) {
	(*this)._field_p->_method_push_suggestion(_17834_fmt,_17847_args);
}



inline void _1d21a4698_ScopeParser::_method_insert_as_next(jule::Slice<_1d1da4277_Token>& _18238_tokens) {
	(*this)._field_stms=jule::append((*this)._field_stms.slice(0LL,static_cast<jule::Int>((*this)._field_pos + 1LL)),(*this)._field_stms.slice(static_cast<jule::Int>((*this)._field_pos)));
	(*this)._field_stms[static_cast<jule::Int>((*this)._field_pos + 1LL)]=jule::new_struct<_1d21a4698_Stmt>(new( std::nothrow ) _1d21a4698_Stmt(_18238_tokens,jule::Bool()));
}



inline jule::Ref<_1d21a4698_Stmt> _1d21a4698_ScopeParser::_method_next(void) {
	((*this)._field_pos)++;
	return (*this)._field_stms[static_cast<jule::Int>((*this)._field_pos)];
}



inline jule::Ref<_1d1e5192e_ScopeTree> _1d21a4698_ScopeParser::_method_build_scope(jule::Slice<_1d1da4277_Token>& _19235_tokens) {
	jule::Ref<_1d1e5192e_ScopeTree> _19317_s = _1d21a4698_new_scope();
	_19317_s->_field_parent=(*this)._field_s;
	_1d21a4698_ScopeParser _19517_ssp = _1d21a4698_ScopeParser((*this)._field_p,jule::Ref<_1d1e5192e_ScopeTree>(),jule::Slice<jule::Ref<_1d21a4698_Stmt>>(),jule::Int());
	_19517_ssp._method_build(_19235_tokens,_19317_s);
	return _19317_s;
}



inline jule::Any _1d21a4698_ScopeParser::_method_build_var_st(jule::Slice<_1d1da4277_Token>& _20236_tokens) {
	jule::Ref<_1d1e5192e_VarDecl> _20317_v = (*this)._field_p->_method_build_var(_20236_tokens);
	_20317_v->_field_scope=(*this)._field_s;
	return jule::Any(_20317_v);
}



inline jule::Any _1d21a4698_ScopeParser::_method_build_ret_st(jule::Slice<_1d1da4277_Token> _20835_tokens) {
	jule::Ref<_1d1e5192e_RetSt> _20917_st = jule::new_struct<_1d1e5192e_RetSt>(new( std::nothrow ) _1d1e5192e_RetSt(_20835_tokens[0LL],jule::Ref<_1d1e5192e_Expr>()));
	if (_20835_tokens.len() > 1LL) {
		_20835_tokens=_20835_tokens.slice(1LL);
		_20917_st->_field_expr=(*this)._field_p->_method_build_expr(_20835_tokens);
	}
	return jule::Any(_20917_st);
}



inline jule::Any _1d21a4698_ScopeParser::_method_build_while_next_iter(jule::Ref<_1d21a4698_Stmt>& _21945_s) {
	jule::Ref<_1d1e5192e_Iter> _22017_it = jule::new_struct<_1d1e5192e_Iter>(new( std::nothrow ) _1d1e5192e_Iter(_21945_s->_field_tokens[0LL],jule::Any(),jule::Ref<_1d1e5192e_ScopeTree>()));
	jule::Slice<_1d1da4277_Token> _22317_tokens = _21945_s->_field_tokens.slice(1LL);
	jule::Ref<_1d1e5192e_WhileKind> _22417_kind = jule::new_struct<_1d1e5192e_WhileKind>(new( std::nothrow ) _1d1e5192e_WhileKind());
	if (_22317_tokens.len() > 0LL) {
		_22417_kind->_field_expr=(*this)._field_p->_method_build_expr(_22317_tokens);
	}
	if ((*this)._method_is_last_st()) {
		(*this)._method_push_err(_22017_it->_field_token,jule::Str("invalid syntax", 14));
		return jule::Any(nullptr);
	}
	_22317_tokens=(*this)._method_next()->_field_tokens;
	jule::Slice<_1d1da4277_Token> _23617_st_tokens = _1d21b6e08_get_block_expr(_22317_tokens);
	if (_23617_st_tokens.len() > 0LL) {
		jule::Ref<_1d21a4698_Stmt> _23821_stmt = jule::new_struct<_1d21a4698_Stmt>(new( std::nothrow ) _1d21a4698_Stmt(_23617_st_tokens,_21945_s->_field_terminated));
		_22417_kind->_field_next_token=_23617_st_tokens[0LL];
		_22417_kind->_field_next=(*this)._method_build_st(_23821_stmt);
	}
	jule::I64 _24617_i = _23617_st_tokens.len();
	jule::Slice<_1d1da4277_Token> _24717_block_tokens = _1d21abb45_range(_24617_i,jule::Str("{", 1),jule::Str("}", 1),_22317_tokens);
	if (_24717_block_tokens == nullptr) {
		(*this)._method_stop();
		(*this)._method_push_err(_22017_it->_field_token,jule::Str("body is not exist", 17));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::Any(nullptr);
	}
	if (_24617_i < _22317_tokens.len()) {
		(*this)._method_push_err(_22317_tokens[static_cast<jule::Int>(_24617_i)],jule::Str("invalid syntax", 14));
	}
	_22017_it->_field_scope=(*this)._method_build_scope(_24717_block_tokens);
	_22017_it->_field_kind=jule::Any(_22417_kind);
	return jule::Any(_22017_it);
}



inline jule::Ref<_1d1e5192e_WhileKind> _1d21a4698_ScopeParser::_method_build_while_iter_kind(jule::Slice<_1d1da4277_Token>& _26445_tokens) {
	return jule::new_struct<_1d1e5192e_WhileKind>(new( std::nothrow ) _1d1e5192e_WhileKind((*this)._field_p->_method_build_expr(_26445_tokens),jule::Any(),_1d1da4277_Token()));
}



inline jule::Slice<jule::Slice<_1d1da4277_Token>> _1d21a4698_ScopeParser::_method_get_range_kind_keys_tokens(jule::Slice<_1d1da4277_Token>& _27050_toks) {
	jule::Slice<jule::Slice<_1d1da4277_Token>> _27118_vars;
	jule::Slice<_1d0557e9e_Log> _27124_errs;
	std::tie(_27118_vars,_27124_errs) = _1d21abb45_parts(_27050_toks,8LLU,true);
	(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_27124_errs);
	return _27118_vars;
}



inline jule::Ref<_1d1e5192e_VarDecl> _1d21a4698_ScopeParser::_method_build_range_kind_key(jule::Slice<_1d1da4277_Token>& _27644_tokens) {
	if (_27644_tokens.len() == 0LL) {
		return jule::new_ref<_1d1e5192e_VarDecl>();
	}
	jule::Ref<_1d1e5192e_VarDecl> _28017_key = jule::new_struct<_1d1e5192e_VarDecl>(new( std::nothrow ) _1d1e5192e_VarDecl(jule::Ref<_1d1e5192e_ScopeTree>(),_27644_tokens[0LL],jule::Str(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Slice<jule::Ref<_1d1e5192e_Directive>>(),jule::Ref<_1d1e5192e_CommentGroup>(),jule::Ref<_1d1e5192e_TypeDecl>(),jule::Ref<_1d1e5192e_Expr>()));
	if (_28017_key->_field_token._field_id == 36LLU) {
		_28017_key->_field_mutable=true;
		if (_27644_tokens.len() == 1LL) {
			(*this)._method_push_err(_28017_key->_field_token,jule::Str("invalid syntax", 14));
		}
		_28017_key->_field_token=_27644_tokens[1LL];
	} else if (_27644_tokens.len() > 1LL) {
		(*this)._method_push_err(_27644_tokens[1LL],jule::Str("invalid syntax", 14));
	}
	if (_28017_key->_field_token._field_id != 2LLU) {
		(*this)._method_push_err(_28017_key->_field_token,jule::Str("invalid syntax", 14));
		(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1d1e5192e_VarDecl>();
	}
	_28017_key->_field_ident=_28017_key->_field_token._field_kind;
	return _28017_key;
}



inline jule::Slice<jule::Ref<_1d1e5192e_VarDecl>> _1d21a4698_ScopeParser::_method_build_range_kind_keys(jule::Slice<jule::Slice<_1d1da4277_Token>>& _30145_parts) {
	jule::Slice<jule::Ref<_1d1e5192e_VarDecl>> _30217_keys = nullptr;
	{
		auto _range_expr = _30145_parts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Slice<_1d1da4277_Token> _1d21a4698_tokens = *_range_begin;
			_iter_begin_4705729968:;
			{
				_30217_keys=jule::append(_30217_keys,jule::Slice<jule::Ref<_1d1e5192e_VarDecl>>({(*this)._method_build_range_kind_key(_1d21a4698_tokens)}));
			}
			_iter_next_4705729968:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d21a4698_tokens = *_range_begin; goto _iter_begin_4705729968; }
			_iter_end_4705729968:;
		}
	}
	return _30217_keys;
}



inline void _1d21a4698_ScopeParser::_method_setup_range_kind_keys_plain(jule::Ref<_1d1e5192e_RangeKind>& _30951_rng,jule::Slice<_1d1da4277_Token>& _30973_tokens) {
	jule::Slice<jule::Slice<_1d1da4277_Token>> _31017_key_tokens = (*this)._method_get_range_kind_keys_tokens(_30973_tokens);
	if (_31017_key_tokens.len() == 0LL) {
		return;
	}
	if (_31017_key_tokens.len() > 2LL) {
		(*this)._method_push_err(_30951_rng->_field_in_token,jule::Str("range variables can be maximum two", 34));
	}
	jule::Slice<jule::Ref<_1d1e5192e_VarDecl>> _31717_keys = (*this)._method_build_range_kind_keys(_31017_key_tokens);
	_30951_rng->_field_key_a=_31717_keys[0LL];
	if (_31717_keys.len() > 1LL) {
		_30951_rng->_field_key_b=_31717_keys[1LL];
	}
}



inline void _1d21a4698_ScopeParser::_method_setup_range_kind_keys_explicit(jule::Ref<_1d1e5192e_RangeKind>& _32454_rng,jule::Slice<_1d1da4277_Token>& _32476_tokens) {
	jule::Int _32517_i = 0LL;
	jule::Slice<_1d1da4277_Token> _32617_rang = _1d21abb45_range(_32517_i,jule::Str("(", 1),jule::Str(")", 1),_32476_tokens);
	if (_32517_i < _32476_tokens.len()) {
		(*this)._method_push_err(_32454_rng->_field_in_token,jule::Str("invalid syntax", 14));
	}
	(*this)._method_setup_range_kind_keys_plain(_32454_rng,_32617_rang);
}



inline void _1d21a4698_ScopeParser::_method_setup_range_kind_keys(jule::Ref<_1d1e5192e_RangeKind>& _33345_rng,jule::Slice<_1d1da4277_Token>& _33367_tokens) {
	if (_33367_tokens[0LL]._field_id == 3LLU) {
		if (_33367_tokens[0LL]._field_kind != jule::Str("(", 1)) {
			(*this)._method_push_err(_33367_tokens[0LL],jule::Str("invalid syntax", 14));
			return;
		}
		(*this)._method_setup_range_kind_keys_explicit(_33345_rng,_33367_tokens);
		return;
	}
	(*this)._method_setup_range_kind_keys_plain(_33345_rng,_33367_tokens);
}



inline jule::Ref<_1d1e5192e_RangeKind> _1d21a4698_ScopeParser::_method_build_range_iter_kind(jule::Slice<_1d1da4277_Token>& _34545_var_tokens,jule::Slice<_1d1da4277_Token>& _34614_expr_tokens,_1d1da4277_Token& _34641_in_token) {
	jule::Ref<_1d1e5192e_RangeKind> _34717_rng = jule::new_struct<_1d1e5192e_RangeKind>(new( std::nothrow ) _1d1e5192e_RangeKind(_34641_in_token,jule::Ref<_1d1e5192e_Expr>(),jule::Ref<_1d1e5192e_VarDecl>(),jule::Ref<_1d1e5192e_VarDecl>()));
	if (_34614_expr_tokens.len() == 0LL) {
		(*this)._method_push_err(_34717_rng->_field_in_token,jule::Str("expression missing", 18));
		return _34717_rng;
	}
	_34717_rng->_field_expr=(*this)._field_p->_method_build_expr(_34614_expr_tokens);
	if (_34545_var_tokens.len() > 0LL) {
		(*this)._method_setup_range_kind_keys(_34717_rng,_34545_var_tokens);
	}
	return _34717_rng;
}



inline jule::Any _1d21a4698_ScopeParser::_method_build_common_iter_kind(jule::Slice<_1d1da4277_Token>& _36146_tokens,_1d1da4277_Token& _36164_err_tok) {
	jule::Int _36217_brace_n = 0LL;
	{
		auto _range_expr = _36146_tokens;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1d21a4698_i = 0;
			_1d1da4277_Token _1d21a4698_tok = *_range_begin;
			_iter_begin_4705779824:;
			{
				if (_1d21a4698_tok._field_id == 3LLU) {
					{
						auto _match_expr{ _1d21a4698_tok._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4705784176; }
						_case_begin_4705784176:;
						{
							(_36217_brace_n)++;
							goto _iter_next_4705779824;
						}
						goto _match_end_4705782592;
						_case_end_4705784176:;
						_case_begin_4705783376:;
						{
							(_36217_brace_n)--;
						}
						goto _match_end_4705782592;
						_case_end_4705783376:;
						_match_end_4705782592:;
					}
				}
				if (_36217_brace_n != 0LL) {
					goto _iter_next_4705779824;
				}
				{
					auto _match_expr{ _1d21a4698_tok._field_id };
					if (!((15LLU) == _match_expr)) { goto _case_end_4705785360; }
					_case_begin_4705785360:;
					{
						jule::Slice<_1d1da4277_Token> _38125_decl_tokens = _36146_tokens.slice(0LL,static_cast<jule::Int>(_1d21a4698_i));
						jule::Slice<_1d1da4277_Token> _38225_expr_tokens = _36146_tokens.slice(static_cast<jule::Int>(_1d21a4698_i + 1LL));
						return jule::Any((*this)._method_build_range_iter_kind(_38125_decl_tokens,_38225_expr_tokens,_1d21a4698_tok));
					}
					goto _match_end_4705782016;
					_case_end_4705785360:;
					_match_end_4705782016:;
				}
			}
			_iter_next_4705779824:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1d21a4698_i; _1d21a4698_tok = *_range_begin; goto _iter_begin_4705779824; }
			_iter_end_4705779824:;
		}
	}
	return jule::Any((*this)._method_build_while_iter_kind(_36146_tokens));
}



inline jule::Any _1d21a4698_ScopeParser::_method_build_common_iter(jule::Slice<_1d1da4277_Token> _38940_tokens) {
	jule::Ref<_1d1e5192e_Iter> _39017_it = jule::new_struct<_1d1e5192e_Iter>(new( std::nothrow ) _1d1e5192e_Iter(_38940_tokens[0LL],jule::Any(),jule::Ref<_1d1e5192e_ScopeTree>()));
	_38940_tokens=_38940_tokens.slice(1LL);
	if (_38940_tokens.len() == 0LL) {
		(*this)._method_stop();
		(*this)._method_push_err(_39017_it->_field_token,jule::Str("body is not exist", 17));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::Any(nullptr);
	}
	jule::Slice<_1d1da4277_Token> _40017_expr_tokens = _1d21b6e08_get_block_expr(_38940_tokens);
	if (_40017_expr_tokens.len() > 0LL) {
		_39017_it->_field_kind=(*this)._method_build_common_iter_kind(_40017_expr_tokens,_39017_it->_field_token);
	}
	jule::I64 _40417_i = _40017_expr_tokens.len();
	jule::Slice<_1d1da4277_Token> _40517_scope_tokens = _1d21abb45_range(_40417_i,jule::Str("{", 1),jule::Str("}", 1),_38940_tokens);
	if (_40517_scope_tokens == nullptr) {
		(*this)._method_stop();
		(*this)._method_push_err(_39017_it->_field_token,jule::Str("body is not exist", 17));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::Any(nullptr);
	}
	if (_40417_i < _38940_tokens.len()) {
		(*this)._method_push_err(_38940_tokens[static_cast<jule::Int>(_40417_i)],jule::Str("invalid syntax", 14));
	}
	_39017_it->_field_scope=(*this)._method_build_scope(_40517_scope_tokens);
	return jule::Any(_39017_it);
}



inline jule::Any _1d21a4698_ScopeParser::_method_buid_iter_st(jule::Ref<_1d21a4698_Stmt>& _41936_st) {
	if (_41936_st->_field_terminated) {
		return (*this)._method_build_while_next_iter(_41936_st);
	}
	return (*this)._method_build_common_iter(_41936_st->_field_tokens);
}



inline jule::Any _1d21a4698_ScopeParser::_method_build_break_st(jule::Slice<_1d1da4277_Token>& _42638_tokens) {
	jule::Ref<_1d1e5192e_BreakSt> _42717_brk = jule::new_struct<_1d1e5192e_BreakSt>(new( std::nothrow ) _1d1e5192e_BreakSt(_42638_tokens[0LL],_1d1da4277_Token()));
	if (_42638_tokens.len() > 1LL) {
		if (_42638_tokens[1LL]._field_id != 2LLU) {
			(*this)._method_push_err(_42638_tokens[1LL],jule::Str("invalid syntax", 14));
			(*this)._method_push_suggestion(jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>({}));
		} else {
			_42717_brk->_field_label=_42638_tokens[1LL];
			if (_42638_tokens.len() > 2LL) {
				(*this)._method_push_err(_42638_tokens[1LL],jule::Str("invalid syntax", 14));
			}
		}
	}
	return jule::Any(_42717_brk);
}



inline jule::Any _1d21a4698_ScopeParser::_method_build_cont_st(jule::Slice<_1d1da4277_Token>& _44437_tokens) {
	jule::Ref<_1d1e5192e_ContSt> _44517_cont = jule::new_struct<_1d1e5192e_ContSt>(new( std::nothrow ) _1d1e5192e_ContSt(_44437_tokens[0LL],_1d1da4277_Token()));
	if (_44437_tokens.len() > 1LL) {
		if (_44437_tokens[1LL]._field_id != 2LLU) {
			(*this)._method_push_err(_44437_tokens[1LL],jule::Str("invalid syntax", 14));
			(*this)._method_push_suggestion(jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>({}));
		} else {
			_44517_cont->_field_label=_44437_tokens[1LL];
			if (_44437_tokens.len() > 2LL) {
				(*this)._method_push_err(_44437_tokens[1LL],jule::Str("invalid syntax", 14));
			}
		}
	}
	return jule::Any(_44517_cont);
}



inline jule::Ref<_1d1e5192e_If> _1d21a4698_ScopeParser::_method_build_if(jule::Slice<_1d1da4277_Token>& _46232_tokens) {
	jule::Ref<_1d1e5192e_If> _46317_model = jule::new_struct<_1d1e5192e_If>(new( std::nothrow ) _1d1e5192e_If(_46232_tokens[0LL],jule::Ref<_1d1e5192e_Expr>(),jule::Ref<_1d1e5192e_ScopeTree>()));
	_46232_tokens=_46232_tokens.slice(1LL);
	jule::Slice<_1d1da4277_Token> _46717_expr_tokens = _1d21b6e08_get_block_expr(_46232_tokens);
	jule::Int _46817_i = 0LL;
	if (_46717_expr_tokens.len() == 0LL) {
		(*this)._method_push_err(_46317_model->_field_token,jule::Str("expression missing", 18));
	} else {
		_46817_i=static_cast<jule::I64>(_46717_expr_tokens.len());
	}
	jule::Slice<_1d1da4277_Token> _47417_scope_tokens = _1d21abb45_range(_46817_i,jule::Str("{", 1),jule::Str("}", 1),_46232_tokens);
	if (_47417_scope_tokens == nullptr) {
		(*this)._method_stop();
		(*this)._method_push_err(_46317_model->_field_token,jule::Str("body is not exist", 17));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1d1e5192e_If>();
	}
	if (_46817_i < _46232_tokens.len()) {
		if (_46232_tokens[static_cast<jule::Int>(_46817_i)]._field_id == 17LLU) {
			_46232_tokens=_46232_tokens.slice(static_cast<jule::Int>(_46817_i));
		} else {
			(*this)._method_push_err(_46232_tokens[static_cast<jule::Int>(_46817_i)],jule::Str("invalid syntax", 14));
			_46232_tokens=nullptr;
		}
	}
	_46317_model->_field_expr=(*this)._field_p->_method_build_expr(_46717_expr_tokens);
	_46317_model->_field_scope=(*this)._method_build_scope(_47417_scope_tokens);
	return _46317_model;
}



inline jule::Ref<_1d1e5192e_Else> _1d21a4698_ScopeParser::_method_build_else(jule::Slice<_1d1da4277_Token>& _49434_tokens) {
	jule::Ref<_1d1e5192e_Else> _49517_els = jule::new_struct<_1d1e5192e_Else>(new( std::nothrow ) _1d1e5192e_Else(_49434_tokens[0LL],jule::Ref<_1d1e5192e_ScopeTree>()));
	_49434_tokens=_49434_tokens.slice(1LL);
	jule::Int _49917_i = 0LL;
	jule::Slice<_1d1da4277_Token> _50017_scope_tokens = _1d21abb45_range(_49917_i,jule::Str("{", 1),jule::Str("}", 1),_49434_tokens);
	if (_50017_scope_tokens == nullptr) {
		if (_49917_i < _49434_tokens.len()) {
			(*this)._method_push_err(_49517_els->_field_token,jule::Str("else's cannot have any expression", 33));
		} else {
			(*this)._method_stop();
			(*this)._method_push_err(_49517_els->_field_token,jule::Str("body is not exist", 17));
			(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		}
		return jule::new_ref<_1d1e5192e_Else>();
	}
	if (_49917_i < _49434_tokens.len()) {
		(*this)._method_push_err(_49434_tokens[static_cast<jule::Int>(_49917_i)],jule::Str("invalid syntax", 14));
	}
	_49517_els->_field_scope=(*this)._method_build_scope(_50017_scope_tokens);
	return _49517_els;
}



inline jule::Any _1d21a4698_ScopeParser::_method_build_if_else_chain(jule::Slice<_1d1da4277_Token> _51842_tokens) {
	jule::Ref<_1d1e5192e_Conditional> _51917_chain = jule::new_struct<_1d1e5192e_Conditional>(new( std::nothrow ) _1d1e5192e_Conditional((*this)._method_build_if(_51842_tokens),jule::Slice<jule::Ref<_1d1e5192e_If>>(),jule::Ref<_1d1e5192e_Else>()));
	if ((!(jule::real(_51917_chain->_field_head)))) {
		return jule::Any(nullptr);
	}
	_iter_begin_4705896320:;
	if (!(_51842_tokens != nullptr)) { goto _iter_end_4705896320; }
	{
		if (_51842_tokens[0LL]._field_id != 17LLU) {
			goto _iter_end_4705896320;
		}
		if ((_51842_tokens.len() > 1LL) && (_51842_tokens[1LL]._field_id == 16LLU)) {
			_51842_tokens=_51842_tokens.slice(1LL);
			jule::Ref<_1d1e5192e_If> _53125_elif = (*this)._method_build_if(_51842_tokens);
			_51917_chain->_field_tail=jule::append(_51917_chain->_field_tail,jule::Slice<jule::Ref<_1d1e5192e_If>>({_53125_elif}));
			goto _iter_next_4705896320;
		}
		_51917_chain->_field_default=(*this)._method_build_else(_51842_tokens);
		goto _iter_end_4705896320;
	}
	_iter_next_4705896320:;
	goto _iter_begin_4705896320;
	_iter_end_4705896320:;
	return jule::Any(_51917_chain);
}



inline jule::Any _1d21a4698_ScopeParser::_method_build_comment_st(_1d1da4277_Token& _54136_token) {
	return jule::Any(_1d21abb45_build_comment(_54136_token));
}



inline jule::Any _1d21a4698_ScopeParser::_method_build_call_st(jule::Slice<_1d1da4277_Token>& _54537_tokens) {
	_1d1da4277_Token _54613_token = _54537_tokens[0LL];
	if (_1d21b6e08_is_fn_call(_54537_tokens) == nullptr) {
		(*this)._method_push_err(_54613_token,jule::Str("statement must have function call expression", 44));
	}
	jule::Ref<_1d1e5192e_Expr> _55017_expr = (*this)._field_p->_method_build_expr(_54537_tokens);
	if (jule::real(_55017_expr) && (!(_55017_expr->_method_is_fn_call()))) {
		(*this)._method_push_err(_54613_token,jule::Str("invalid syntax", 14));
	}
	return jule::Any(_55017_expr);
}



inline jule::Any _1d21a4698_ScopeParser::_method_build_co_call_st(jule::Slice<_1d1da4277_Token> _55739_tokens) {
	_55739_tokens=_55739_tokens.slice(1LL);
	jule::Any _55917_cc = (*this)._method_build_call_st(_55739_tokens);
	_55917_cc.operator jule::Ref<_1d1e5192e_Expr>()->_field_kind.operator jule::Ref<_1d1e5192e_FnCallExpr>()->_field_concurrent=true;
	return _55917_cc;
}



inline jule::Any _1d21a4698_ScopeParser::_method_build_goto_st(jule::Slice<_1d1da4277_Token>& _56437_tokens) {
	jule::Ref<_1d1e5192e_GotoSt> _56517_gt = jule::new_struct<_1d1e5192e_GotoSt>(new( std::nothrow ) _1d1e5192e_GotoSt(_56437_tokens[0LL],_1d1da4277_Token()));
	if (_56437_tokens.len() == 1LL) {
		(*this)._method_push_err(_56517_gt->_field_token,jule::Str("missing label identifier for goto statement", 43));
		return jule::Any(nullptr);
	} else if (_56437_tokens.len() > 2LL) {
		(*this)._method_push_err(_56437_tokens[2LL],jule::Str("invalid syntax", 14));
	}
	_1d1da4277_Token _57417_ident_token = _56437_tokens[1LL];
	if (_57417_ident_token._field_id != 2LLU) {
		(*this)._method_push_err(_57417_ident_token,jule::Str("invalid syntax", 14));
		(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
		return jule::Any(_56517_gt);
	}
	_56517_gt->_field_label=_57417_ident_token;
	return jule::Any(_56517_gt);
}



inline jule::Any _1d21a4698_ScopeParser::_method_build_fall_st(jule::Slice<_1d1da4277_Token>& _58437_tokens) {
	jule::Ref<_1d1e5192e_FallSt> _58517_fll = jule::new_struct<_1d1e5192e_FallSt>(new( std::nothrow ) _1d1e5192e_FallSt(_58437_tokens[0LL]));
	if (_58437_tokens.len() > 1LL) {
		(*this)._method_push_err(_58437_tokens[1LL],jule::Str("invalid syntax", 14));
	}
	return jule::Any(_58517_fll);
}



inline jule::Any _1d21a4698_ScopeParser::_method_build_type_alias_st(jule::Slice<_1d1da4277_Token>& _59443_tokens) {
	jule::Ref<_1d1e5192e_TypeAliasDecl> _59517_tad = (*this)._field_p->_method_build_type_alias_decl(_59443_tokens);
	_59517_tad->_field_scope=(*this)._field_s;
	return jule::Any(_59517_tad);
}



inline void _1d21a4698_ScopeParser::_method_push_case_expr(jule::Slice<_1d1da4277_Token> _60037_tokens,_1d1da4277_Token _60058_token,jule::Bool _6019_type_match,jule::Slice<jule::Ref<_1d1e5192e_Expr>>& _60132_exprs) {
	if (_60037_tokens.len() == 0LL) {
		return;
	}
	if (_6019_type_match) {
		jule::Int _60721_i = 0LL;
		jule::Ref<_1d1e5192e_TypeDecl> _60822_t;
		jule::Bool _60825_ok;
		std::tie(_60822_t,_60825_ok) = (*this)._field_p->_method_build_type(_60037_tokens,(&(_60721_i)),true);
		if (_60825_ok) {
			_60132_exprs=jule::append(_60132_exprs,jule::Slice<jule::Ref<_1d1e5192e_Expr>>({jule::new_struct<_1d1e5192e_Expr>(new( std::nothrow ) _1d1e5192e_Expr(_60058_token,jule::Any(_60822_t)))}));
		}
		if (_60721_i < _60037_tokens.len()) {
			(*this)._method_push_err(_60037_tokens[static_cast<jule::Int>(_60721_i)],jule::Str("invalid syntax", 14));
		}
		return;
	}
	_60132_exprs=jule::append(_60132_exprs,jule::Slice<jule::Ref<_1d1e5192e_Expr>>({(*this)._field_p->_method_build_expr(_60037_tokens)}));
}



inline jule::Slice<jule::Ref<_1d1e5192e_Expr>> _1d21a4698_ScopeParser::_method_build_case_exprs(jule::Slice<_1d1da4277_Token>& _62340_tokens,jule::Bool _62357_type_match) {
	jule::Slice<jule::Ref<_1d1e5192e_Expr>> _62417_exprs = jule::Slice<jule::Ref<_1d1e5192e_Expr>>::alloc(0LL,1LL);
	jule::Int _62617_brace_n = 0LL;
	jule::Int _62717_j = 0LL;
	{
		auto _range_expr = _62340_tokens;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1d21a4698_i = 0;
			_1d1da4277_Token _1d21a4698_tok = *_range_begin;
			_iter_begin_4705979664:;
			{
				if (_1d21a4698_tok._field_id == 3LLU) {
					{
						auto _match_expr{ _1d21a4698_tok._field_kind };
						if (!((jule::Str("(", 1)) == _match_expr || (jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr)) { goto _case_end_4705984336; }
						_case_begin_4705984336:;
						{
							(_62617_brace_n)++;
						}
						goto _match_end_4705982752;
						_case_end_4705984336:;
						_case_begin_4705983536:;
						{
							(_62617_brace_n)--;
						}
						goto _match_end_4705982752;
						_case_end_4705983536:;
						_match_end_4705982752:;
					}
					goto _iter_next_4705979664;
				} else if (_62617_brace_n != 0LL) {
					goto _iter_next_4705979664;
				}
				{
					if (!(((_1d21a4698_tok._field_id == 7LLU) && (_1d21a4698_tok._field_kind == jule::Str("|", 1))))) { goto _case_end_4705982224; }
					_case_begin_4705982224:;
					{
						jule::Slice<_1d1da4277_Token> _64521_expr_tokens = _62340_tokens.slice(static_cast<jule::Int>(_62717_j),static_cast<jule::Int>(_1d21a4698_i));
						if (_64521_expr_tokens.len() == 0LL) {
							(*this)._method_push_err(_1d21a4698_tok,jule::Str("expression missing", 18));
						} else {
							(*this)._method_push_case_expr(_62340_tokens.slice(static_cast<jule::Int>(_62717_j),static_cast<jule::Int>(_1d21a4698_i)),_1d21a4698_tok,_62357_type_match,_62417_exprs);
						}
						_62717_j=static_cast<jule::Int>(_1d21a4698_i + 1LL);
					}
					goto _match_end_4705985568;
					_case_end_4705982224:;
					if (!((_1d21a4698_tok._field_id == 11LLU))) { goto _case_end_4705982336; }
					_case_begin_4705982336:;
					{
						(*this)._method_push_case_expr(_62340_tokens.slice(static_cast<jule::Int>(_62717_j),static_cast<jule::Int>(_1d21a4698_i)),_1d21a4698_tok,_62357_type_match,_62417_exprs);
						_62340_tokens=_62340_tokens.slice(static_cast<jule::Int>(_1d21a4698_i + 1LL));
						return _62417_exprs;
					}
					goto _match_end_4705985568;
					_case_end_4705982336:;
					_match_end_4705985568:;
				}
			}
			_iter_next_4705979664:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1d21a4698_i; _1d21a4698_tok = *_range_begin; goto _iter_begin_4705979664; }
			_iter_end_4705979664:;
		}
	}
	(*this)._method_push_err(_62340_tokens[0LL],jule::Str("invalid syntax", 14));
	_62340_tokens=nullptr;
	return nullptr;
}



inline jule::Ref<_1d1e5192e_ScopeTree> _1d21a4698_ScopeParser::_method_build_case_scope(jule::Slice<_1d1da4277_Token>& _66440_tokens) {
	jule::Int _66517_n = 0LL;
	_iter_begin_4706003488:;
	{
		jule::Int _66721_i = 0LL;
		jule::Slice<_1d1da4277_Token> _66822_next;
		std::tie(_66822_next,std::ignore) = _1d21a4698_skip_st(_66721_i,_66440_tokens.slice(static_cast<jule::Int>(_66517_n)));
		if (_66822_next.len() == 0LL) {
			goto _iter_end_4706003488;
		}
		_1d1da4277_Token _67217_tok = _66822_next[0LL];
		if ((_67217_tok._field_id != 7LLU) || (_67217_tok._field_kind != jule::Str("|", 1))) {
			_66517_n+=_66721_i;
			goto _iter_next_4706003488;
		}
		jule::Slice<_1d1da4277_Token> _67721_scope_tokens = _66440_tokens.slice(0LL,static_cast<jule::Int>(_66517_n));
		jule::Ref<_1d1e5192e_ScopeTree> _67821_scope = (*this)._method_build_scope(_67721_scope_tokens);
		_66440_tokens=_66440_tokens.slice(static_cast<jule::Int>(_66517_n));
		return _67821_scope;
	}
	_iter_next_4706003488:;
	goto _iter_begin_4706003488;
	_iter_end_4706003488:;
	jule::Ref<_1d1e5192e_ScopeTree> _68217_scope = (*this)._method_build_scope(_66440_tokens);
	_66440_tokens=nullptr;
	return _68217_scope;
}



inline std::tuple<jule::Ref<_1d1e5192e_Case>,jule::Bool> _1d21a4698_ScopeParser::_method_build_case(jule::Slice<_1d1da4277_Token>& _68734_tokens,jule::Bool _68751_type_match) {
	jule::Ref<_1d1e5192e_Case> _68817_c = jule::new_struct<_1d1e5192e_Case>(new( std::nothrow ) _1d1e5192e_Case(_68734_tokens[0LL],jule::Ref<_1d1e5192e_ScopeTree>(),jule::Slice<jule::Ref<_1d1e5192e_Expr>>()));
	_68734_tokens=_68734_tokens.slice(1LL);
	_68817_c->_field_exprs=(*this)._method_build_case_exprs(_68734_tokens,_68751_type_match);
	_68817_c->_field_scope=(*this)._method_build_case_scope(_68734_tokens);
	jule::Bool _69413_is_default = _68817_c->_field_exprs.len() == 0LL;
	return std::make_tuple(_68817_c,_69413_is_default);
}



inline std::tuple<jule::Slice<jule::Ref<_1d1e5192e_Case>>,jule::Ref<_1d1e5192e_Else>> _1d21a4698_ScopeParser::_method_build_cases(jule::Slice<_1d1da4277_Token> _69834_tokens,jule::Bool _69851_type_match) {
	jule::Slice<jule::Ref<_1d1e5192e_Case>> _69917_cases = nullptr;
	jule::Ref<_1d1e5192e_Else> _70017_def = jule::new_ref<_1d1e5192e_Else>();
	jule::Bool _70117_def_not_last = false;
	_iter_begin_4706053584:;
	if (!(_69834_tokens.len() > 0LL)) { goto _iter_end_4706053584; }
	{
		_1d1da4277_Token _70321_tok = _69834_tokens[0LL];
		if (_70321_tok._field_id == 18LLU) {
			_69834_tokens=_69834_tokens.slice(1LL);
			goto _iter_next_4706053584;
		}
		if ((_70321_tok._field_id != 7LLU) || (_70321_tok._field_kind != jule::Str("|", 1))) {
			(*this)._method_push_err(_70321_tok,jule::Str("invalid syntax", 14));
			goto _iter_end_4706053584;
		}
		jule::Ref<_1d1e5192e_Case> _71422_c;
		jule::Bool _71425_is_default;
		std::tie(_71422_c,_71425_is_default) = (*this)._method_build_case(_69834_tokens,_69851_type_match);
		if (_71425_is_default) {
			_71422_c->_field_token=_70321_tok;
			if ((!(jule::real(_70017_def)))) {
				_70017_def=jule::new_struct<_1d1e5192e_Else>(new( std::nothrow ) _1d1e5192e_Else(_71422_c->_field_token,_71422_c->_field_scope));
			} else {
				(*this)._method_push_err(_70321_tok,jule::Str("invalid syntax", 14));
			}
		} else {
			_70117_def_not_last=_70117_def_not_last || jule::real(_70017_def);
			_69917_cases=jule::append(_69917_cases,jule::Slice<jule::Ref<_1d1e5192e_Case>>({_71422_c}));
		}
	}
	_iter_next_4706053584:;
	goto _iter_begin_4706053584;
	_iter_end_4706053584:;
	if (_70117_def_not_last) {
		(*this)._method_push_err(_70017_def->_field_token,jule::Str("default case should be last case", 32));
	}
	return std::make_tuple(_69917_cases,_70017_def);
}



inline jule::Ref<_1d1e5192e_MatchCase> _1d21a4698_ScopeParser::_method_build_match_case(jule::Slice<_1d1da4277_Token> _73839_tokens) {
	jule::Ref<_1d1e5192e_MatchCase> _73917_m = jule::new_struct<_1d1e5192e_MatchCase>(new( std::nothrow ) _1d1e5192e_MatchCase(_73839_tokens[0LL],jule::Bool(),jule::Ref<_1d1e5192e_Expr>(),jule::Slice<jule::Ref<_1d1e5192e_Case>>(),jule::Ref<_1d1e5192e_Else>()));
	_73839_tokens=_73839_tokens.slice(1LL);
	if ((_73839_tokens.len() > 0LL) && (_73839_tokens[0LL]._field_id == 10LLU)) {
		_73917_m->_field_type_match=true;
		_73839_tokens=_73839_tokens.slice(1LL);
	}
	jule::Slice<_1d1da4277_Token> _74917_expr_tokens = _1d21b6e08_get_block_expr(_73839_tokens);
	if (_74917_expr_tokens.len() > 0LL) {
		_73917_m->_field_expr=(*this)._field_p->_method_build_expr(_74917_expr_tokens);
	} else if (_73917_m->_field_type_match) {
		(*this)._method_push_err(_73917_m->_field_token,jule::Str("expression missing", 18));
	}
	jule::I64 _75617_i = _74917_expr_tokens.len();
	jule::Slice<_1d1da4277_Token> _75717_block_toks = _1d21abb45_range(_75617_i,jule::Str("{", 1),jule::Str("}", 1),_73839_tokens);
	if (_75717_block_toks == nullptr) {
		(*this)._method_stop();
		(*this)._method_push_err(_73917_m->_field_token,jule::Str("body is not exist", 17));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1d1e5192e_MatchCase>();
	}
	std::tie(_73917_m->_field_cases,_73917_m->_field_default) = (*this)._method_build_cases(_75717_block_toks,_73917_m->_field_type_match);
	return _73917_m;
}



inline jule::Ref<_1d1e5192e_ScopeTree> _1d21a4698_ScopeParser::_method_build_scope_st(jule::Slice<_1d1da4277_Token> _76937_tokens) {
	jule::Bool _77017_is_unsafe = false;
	jule::Bool _77117_is_deferred = false;
	_1d1da4277_Token _77217_token = _76937_tokens[0LL];
	if (_77217_token._field_id == 35LLU) {
		_77017_is_unsafe=true;
		_76937_tokens=_76937_tokens.slice(1LL);
		if (_76937_tokens.len() == 0LL) {
			(*this)._method_push_err(_77217_token,jule::Str("invalid syntax", 14));
			return jule::new_ref<_1d1e5192e_ScopeTree>();
		}
		_77217_token=_76937_tokens[0LL];
		if (_77217_token._field_id == 37LLU) {
			_77117_is_deferred=true;
			_76937_tokens=_76937_tokens.slice(1LL);
			if (_76937_tokens.len() == 0LL) {
				(*this)._method_push_err(_77217_token,jule::Str("invalid syntax", 14));
				return jule::new_ref<_1d1e5192e_ScopeTree>();
			}
		}
	} else if (_77217_token._field_id == 37LLU) {
		_77117_is_deferred=true;
		_76937_tokens=_76937_tokens.slice(1LL);
		if (_76937_tokens.len() == 0LL) {
			(*this)._method_push_err(_77217_token,jule::Str("invalid syntax", 14));
			return jule::new_ref<_1d1e5192e_ScopeTree>();
		}
	}
	jule::Int _79817_i = 0LL;
	jule::Slice<_1d1da4277_Token> _79917_scope_tokens = _1d21abb45_range(_79817_i,jule::Str("{", 1),jule::Str("}", 1),_76937_tokens);
	if (_79917_scope_tokens == nullptr) {
		(*this)._method_push_err(_77217_token,jule::Str("invalid syntax", 14));
		return jule::new_ref<_1d1e5192e_ScopeTree>();
	} else if (_79817_i < _76937_tokens.len()) {
		(*this)._method_push_err(_76937_tokens[static_cast<jule::Int>(_79817_i)],jule::Str("invalid syntax", 14));
	}
	jule::Ref<_1d1e5192e_ScopeTree> _80617_scope = (*this)._method_build_scope(_79917_scope_tokens);
	_80617_scope->_field_unsafety=_77017_is_unsafe;
	_80617_scope->_field_deferred=_77117_is_deferred;
	return _80617_scope;
}



inline jule::Ref<_1d1e5192e_LabelSt> _1d21a4698_ScopeParser::_method_build_label_st(jule::Slice<_1d1da4277_Token>& _81238_tokens) {
	jule::Ref<_1d1e5192e_LabelSt> _81317_lbl = jule::new_struct<_1d1e5192e_LabelSt>(new( std::nothrow ) _1d1e5192e_LabelSt(_81238_tokens[0LL],_81238_tokens[0LL]._field_kind));
	if (_81238_tokens.len() > 2LL) {
		_81238_tokens=_81238_tokens.slice(2LL);
		(*this)._method_insert_as_next(_81238_tokens);
	}
	return _81317_lbl;
}



inline std::tuple<jule::Any,jule::Bool> _1d21a4698_ScopeParser::_method_build_id_st(jule::Slice<_1d1da4277_Token>& _82735_tokens) {
	jule::Bool _82764_ok = jule::Bool();
	if (_82735_tokens.len() == 1LL) {
		return std::make_tuple(jule::Any(),_82764_ok);
	}
	_1d1da4277_Token _83217_token = _82735_tokens[1LL];
	{
		auto _match_expr{ _83217_token._field_id };
		if (!((11LLU) == _match_expr)) { goto _case_end_4706133296; }
		_case_begin_4706133296:;
		{
			_82764_ok = true;
			return std::make_tuple(jule::Any((*this)._method_build_label_st(_82735_tokens)),_82764_ok);
		}
		goto _match_end_4706129728;
		_case_end_4706133296:;
		_match_end_4706129728:;
	}
	return std::make_tuple(jule::Any(),_82764_ok);
}



inline jule::Ref<_1d21bd937_AssignInfo> _1d21a4698_ScopeParser::_method_build_assign_info(jule::Slice<_1d1da4277_Token>& _84141_tokens) {
	jule::Ref<_1d21bd937_AssignInfo> _84217_info = jule::new_struct<_1d21bd937_AssignInfo>(new( std::nothrow ) _1d21bd937_AssignInfo(jule::Slice<_1d1da4277_Token>(),jule::Slice<_1d1da4277_Token>(),_1d1da4277_Token(),true));
	jule::Int _84517_brace_n = 0LL;
	{
		auto _range_expr = _84141_tokens;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1d21a4698_i = 0;
			_1d1da4277_Token _1d21a4698_token = *_range_begin;
			_iter_begin_4706141568:;
			{
				if (_1d21a4698_token._field_id == 3LLU) {
					{
						auto _match_expr{ _1d21a4698_token._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4706146032; }
						_case_begin_4706146032:;
						{
							(_84517_brace_n)++;
						}
						goto _match_end_4706144448;
						_case_end_4706146032:;
						_case_begin_4706145232:;
						{
							(_84517_brace_n)--;
						}
						goto _match_end_4706144448;
						_case_end_4706145232:;
						_match_end_4706144448:;
					}
				}
				{
					if (!((_84517_brace_n > 0LL))) { goto _case_end_4706147104; }
					_case_begin_4706147104:;
					{
						goto _iter_next_4706141568;
					}
					goto _match_end_4706147328;
					_case_end_4706147104:;
					if (!((_1d21a4698_token._field_id != 7LLU))) { goto _case_end_4706143808; }
					_case_begin_4706143808:;
					{
						goto _iter_next_4706141568;
					}
					goto _match_end_4706147328;
					_case_end_4706143808:;
					if (!(((!(_1d1da4277_is_assign_op(_1d21a4698_token._field_kind)))))) { goto _case_end_4706143920; }
					_case_begin_4706143920:;
					{
						goto _iter_next_4706141568;
					}
					goto _match_end_4706147328;
					_case_end_4706143920:;
					_match_end_4706147328:;
				}
				_84217_info->_field_l=_84141_tokens.slice(0LL,static_cast<jule::Int>(_1d21a4698_i));
				if (_84217_info->_field_l.len() == 0LL) {
					_84217_info->_field_ok=false;
				}
				_84217_info->_field_setter=_1d21a4698_token;
				if ((_1d21a4698_i + 1LL) >= _84141_tokens.len()) {
					_84217_info->_field_r=nullptr;
					_84217_info->_field_ok=_1d1da4277_is_postfix_op(_84217_info->_field_setter._field_kind);
					goto _iter_end_4706141568;
				}
				_84217_info->_field_r=_84141_tokens.slice(static_cast<jule::Int>(_1d21a4698_i + 1LL));
				if (_1d1da4277_is_postfix_op(_84217_info->_field_setter._field_kind)) {
					if (_84217_info->_field_r.len() > 0LL) {
						(*this)._method_push_err(_84217_info->_field_r[0LL],jule::Str("invalid syntax", 14));
						_84217_info->_field_r=nullptr;
					}
				}
				goto _iter_end_4706141568;
			}
			_iter_next_4706141568:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1d21a4698_i; _1d21a4698_token = *_range_begin; goto _iter_begin_4706141568; }
			_iter_end_4706141568:;
		}
	}
	return _84217_info;
}



inline jule::Ref<_1d1e5192e_AssignLeft> _1d21a4698_ScopeParser::_method_build_assign_l(jule::Slice<_1d1da4277_Token>& _88838_tokens) {
	jule::Ref<_1d1e5192e_AssignLeft> _88917_l = jule::new_struct<_1d1e5192e_AssignLeft>(new( std::nothrow ) _1d1e5192e_AssignLeft(_88838_tokens[0LL],jule::Bool(),jule::Bool(),jule::Str(),jule::Ref<_1d1e5192e_Expr>()));
	if (_88838_tokens[0LL]._field_id == 2LLU) {
		_88917_l->_field_ident=_88917_l->_field_token._field_kind;
	}
	_88917_l->_field_expr=(*this)._field_p->_method_build_expr(_88838_tokens);
	return _88917_l;
}



inline jule::Slice<jule::Ref<_1d1e5192e_AssignLeft>> _1d21a4698_ScopeParser::_method_build_assign_ls(jule::Slice<jule::Slice<_1d1da4277_Token>>& _90139_parts) {
	jule::Slice<jule::Ref<_1d1e5192e_AssignLeft>> _90217_lefts = nullptr;
	{
		auto _range_expr = _90139_parts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Slice<_1d1da4277_Token> _1d21a4698_part = *_range_begin;
			_iter_begin_4706175344:;
			{
				jule::Ref<_1d1e5192e_AssignLeft> _90421_l = (*this)._method_build_assign_l(_1d21a4698_part);
				_90217_lefts=jule::append(_90217_lefts,jule::Slice<jule::Ref<_1d1e5192e_AssignLeft>>({_90421_l}));
			}
			_iter_next_4706175344:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d21a4698_part = *_range_begin; goto _iter_begin_4706175344; }
			_iter_end_4706175344:;
		}
	}
	return _90217_lefts;
}



inline std::tuple<jule::Ref<_1d1e5192e_AssignSt>,jule::Bool> _1d21a4698_ScopeParser::_method_build_plain_assign(jule::Slice<_1d1da4277_Token>& _91142_tokens) {
	jule::Ref<_1d21bd937_AssignInfo> _91217_info = (*this)._method_build_assign_info(_91142_tokens);
	if ((!(_91217_info->_field_ok))) {
		return std::make_tuple(jule::new_ref<_1d1e5192e_AssignSt>(),false);
	}
	jule::Ref<_1d1e5192e_AssignSt> _91717_assign = jule::new_struct<_1d1e5192e_AssignSt>(new( std::nothrow ) _1d1e5192e_AssignSt(jule::Bool(),_91217_info->_field_setter,jule::Slice<jule::Ref<_1d1e5192e_AssignLeft>>(),jule::Ref<_1d1e5192e_Expr>()));
	jule::Slice<jule::Slice<_1d1da4277_Token>> _92118_parts;
	jule::Slice<_1d0557e9e_Log> _92125_errs;
	std::tie(_92118_parts,_92125_errs) = _1d21abb45_parts(_91217_info->_field_l,8LLU,true);
	if (_92125_errs.len() > 0LL) {
		(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_92125_errs);
		return std::make_tuple(jule::new_ref<_1d1e5192e_AssignSt>(),false);
	}
	_91717_assign->_field_left=(*this)._method_build_assign_ls(_92118_parts);
	if (_91217_info->_field_r != nullptr) {
		_91717_assign->_field_right=(*this)._field_p->_method_build_expr(_91217_info->_field_r);
	}
	return std::make_tuple(_91717_assign,true);
}



inline std::tuple<jule::Ref<_1d1e5192e_AssignSt>,jule::Bool> _1d21a4698_ScopeParser::_method_build_decl_assign(jule::Slice<_1d1da4277_Token> _93540_tokens) {
	if (_93540_tokens.len() < 1LL) {
		return std::make_tuple(jule::new_ref<_1d1e5192e_AssignSt>(),false);
	}
	_93540_tokens=_93540_tokens.slice(1LL);
	_1d1da4277_Token _94117_token = _93540_tokens[0LL];
	if ((_94117_token._field_id != 3LLU) || (_94117_token._field_kind != jule::Str("(", 1))) {
		return std::make_tuple(jule::new_ref<_1d1e5192e_AssignSt>(),false);
	}
	jule::Ref<_1d1e5192e_AssignSt> _94617_assign = jule::new_struct<_1d1e5192e_AssignSt>(new( std::nothrow ) _1d1e5192e_AssignSt(true,_1d1da4277_Token(),jule::Slice<jule::Ref<_1d1e5192e_AssignLeft>>(),jule::Ref<_1d1e5192e_Expr>()));
	jule::Int _95017_i = 0LL;
	jule::Slice<_1d1da4277_Token> _95117_rang = _1d21abb45_range(_95017_i,jule::Str("(", 1),jule::Str(")", 1),_93540_tokens);
	if (_95117_rang == nullptr) {
		(*this)._method_push_err(_94117_token,jule::Str("invalid syntax", 14));
		return std::make_tuple(jule::new_ref<_1d1e5192e_AssignSt>(),false);
	} else if ((_95017_i + 1LL) < _93540_tokens.len()) {
		_94617_assign->_field_setter=_93540_tokens[static_cast<jule::Int>(_95017_i)];
		(_95017_i)++;
		jule::Slice<_1d1da4277_Token> _95821_expr_tokens = _93540_tokens.slice(static_cast<jule::Int>(_95017_i));
		_94617_assign->_field_right=(*this)._field_p->_method_build_expr(_95821_expr_tokens);
	}
	jule::Slice<jule::Slice<_1d1da4277_Token>> _96318_parts;
	jule::Slice<_1d0557e9e_Log> _96325_errs;
	std::tie(_96318_parts,_96325_errs) = _1d21abb45_parts(_95117_rang,8LLU,true);
	if (_96325_errs.len() > 0LL) {
		(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_96325_errs);
		return std::make_tuple(jule::new_ref<_1d1e5192e_AssignSt>(),false);
	}
	{
		auto _range_expr = _96318_parts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Slice<_1d1da4277_Token> _1d21a4698_part = *_range_begin;
			_iter_begin_4706219040:;
			{
				jule::Bool _97021_is_mut = false;
				jule::Bool _97121_is_ref = false;
				_94117_token=_1d21a4698_part[0LL];
				if (_94117_token._field_id == 36LLU) {
					_97021_is_mut=true;
					_1d21a4698_part=_1d21a4698_part.slice(1LL);
					if (_1d21a4698_part.len() == 0LL) {
						(*this)._method_push_err(_94117_token,jule::Str("invalid syntax", 14));
						goto _iter_next_4706219040;
					}
				}
				if ((_1d21a4698_part[0LL]._field_id == 7LLU) && (_1d21a4698_part[0LL]._field_kind == jule::Str("&", 1))) {
					_97121_is_ref=true;
					_1d21a4698_part=_1d21a4698_part.slice(1LL);
					if (_1d21a4698_part.len() == 0LL) {
						(*this)._method_push_err(_94117_token,jule::Str("invalid syntax", 14));
						goto _iter_next_4706219040;
					}
				}
				if (((_1d21a4698_part[0LL]._field_id != 2LLU) && (_1d21a4698_part[0LL]._field_id != 3LLU)) && (_1d21a4698_part[0LL]._field_kind != jule::Str("(", 1))) {
					(*this)._method_push_err(_94117_token,jule::Str("invalid syntax", 14));
					goto _iter_next_4706219040;
				}
				jule::Ref<_1d1e5192e_AssignLeft> _99921_l = (*this)._method_build_assign_l(_1d21a4698_part);
				_99921_l->_field_mutable=_97021_is_mut;
				_99921_l->_field_reference=_97121_is_ref;
				_94617_assign->_field_left=jule::append(_94617_assign->_field_left,jule::Slice<jule::Ref<_1d1e5192e_AssignLeft>>({_99921_l}));
			}
			_iter_next_4706219040:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d21a4698_part = *_range_begin; goto _iter_begin_4706219040; }
			_iter_end_4706219040:;
		}
	}
	return std::make_tuple(_94617_assign,true);
}



inline std::tuple<jule::Ref<_1d1e5192e_AssignSt>,jule::Bool> _1d21a4698_ScopeParser::_method_build_assign_st(jule::Slice<_1d1da4277_Token>& _100839_tokens) {
	jule::Ref<_1d1e5192e_AssignSt> _100858_st = jule::Ref<_1d1e5192e_AssignSt>();
	jule::Bool _100873_ok = jule::Bool();
	if ((!(_1d21bd937_check_assign_tokens(_100839_tokens)))) {
		_100858_st = jule::new_ref<_1d1e5192e_AssignSt>();
		_100873_ok = false;
		return std::make_tuple(_100858_st,_100873_ok);
	}
	{
		auto _match_expr{ _100839_tokens[0LL]._field_id };
		if (!((34LLU) == _match_expr)) { goto _case_end_4706256624; }
		_case_begin_4706256624:;
		{
			std::tie(_100858_st,_100873_ok) = (*this)._method_build_decl_assign(_100839_tokens);
		}
		goto _match_end_4706251648;
		_case_end_4706256624:;
		_case_begin_4706253872:;
		{
			std::tie(_100858_st,_100873_ok) = (*this)._method_build_plain_assign(_100839_tokens);
		}
		goto _match_end_4706251648;
		_case_end_4706253872:;
		_match_end_4706251648:;
	}
	return std::make_tuple(_100858_st,_100873_ok);
}



inline jule::Any _1d21a4698_ScopeParser::_method_build_st(jule::Ref<_1d21a4698_Stmt>& _102132_st) {
	_1d1da4277_Token _102217_token = _102132_st->_field_tokens[0LL];
	if (_102217_token._field_id == 2LLU) {
		jule::Any _102422_s;
		jule::Bool _102425_ok;
		std::tie(_102422_s,_102425_ok) = (*this)._method_build_id_st(_102132_st->_field_tokens);
		if (_102425_ok) {
			return _102422_s;
		}
	}
	jule::Ref<_1d1e5192e_AssignSt> _103018_s;
	jule::Bool _103021_ok;
	std::tie(_103018_s,_103021_ok) = (*this)._method_build_assign_st(_102132_st->_field_tokens);
	if (_103021_ok) {
		return jule::Any(_103018_s);
	}
	{
		auto _match_expr{ _102217_token._field_id };
		if (!((38LLU) == _match_expr || (9LLU) == _match_expr || (34LLU) == _match_expr || (36LLU) == _match_expr)) { goto _case_end_4706270720; }
		_case_begin_4706270720:;
		{
			return (*this)._method_build_var_st(_102132_st->_field_tokens);
		}
		goto _match_end_4706267312;
		_case_end_4706270720:;
		if (!((4LLU) == _match_expr)) { goto _case_end_4706268256; }
		_case_begin_4706268256:;
		{
			return (*this)._method_build_ret_st(_102132_st->_field_tokens);
		}
		goto _match_end_4706267312;
		_case_end_4706268256:;
		if (!((12LLU) == _match_expr)) { goto _case_end_4706268368; }
		_case_begin_4706268368:;
		{
			return (*this)._method_buid_iter_st(_102132_st);
		}
		goto _match_end_4706267312;
		_case_end_4706268368:;
		if (!((13LLU) == _match_expr)) { goto _case_end_4706268480; }
		_case_begin_4706268480:;
		{
			return (*this)._method_build_break_st(_102132_st->_field_tokens);
		}
		goto _match_end_4706267312;
		_case_end_4706268480:;
		if (!((14LLU) == _match_expr)) { goto _case_end_4706267696; }
		_case_begin_4706267696:;
		{
			return (*this)._method_build_cont_st(_102132_st->_field_tokens);
		}
		goto _match_end_4706267312;
		_case_end_4706267696:;
		if (!((16LLU) == _match_expr)) { goto _case_end_4706267808; }
		_case_begin_4706267808:;
		{
			return (*this)._method_build_if_else_chain(_102132_st->_field_tokens);
		}
		goto _match_end_4706267312;
		_case_end_4706267808:;
		if (!((18LLU) == _match_expr)) { goto _case_end_4706267920; }
		_case_begin_4706267920:;
		{
			return (*this)._method_build_comment_st(_102217_token);
		}
		goto _match_end_4706267312;
		_case_end_4706267920:;
		if (!((26LLU) == _match_expr)) { goto _case_end_4706268032; }
		_case_begin_4706268032:;
		{
			return (*this)._method_build_co_call_st(_102132_st->_field_tokens);
		}
		goto _match_end_4706267312;
		_case_end_4706268032:;
		if (!((22LLU) == _match_expr)) { goto _case_end_4706270896; }
		_case_begin_4706270896:;
		{
			return (*this)._method_build_goto_st(_102132_st->_field_tokens);
		}
		goto _match_end_4706267312;
		_case_end_4706270896:;
		if (!((32LLU) == _match_expr)) { goto _case_end_4706271008; }
		_case_begin_4706271008:;
		{
			return (*this)._method_build_fall_st(_102132_st->_field_tokens);
		}
		goto _match_end_4706267312;
		_case_end_4706271008:;
		if (!((10LLU) == _match_expr)) { goto _case_end_4706271120; }
		_case_begin_4706271120:;
		{
			return (*this)._method_build_type_alias_st(_102132_st->_field_tokens);
		}
		goto _match_end_4706267312;
		_case_end_4706271120:;
		if (!((27LLU) == _match_expr)) { goto _case_end_4706271232; }
		_case_begin_4706271232:;
		{
			return jule::Any((*this)._method_build_match_case(_102132_st->_field_tokens));
		}
		goto _match_end_4706267312;
		_case_end_4706271232:;
		if (!((35LLU) == _match_expr || (37LLU) == _match_expr)) { goto _case_end_4706271344; }
		_case_begin_4706271344:;
		{
			return jule::Any((*this)._method_build_scope_st(_102132_st->_field_tokens));
		}
		goto _match_end_4706267312;
		_case_end_4706271344:;
		if (!((3LLU) == _match_expr)) { goto _case_end_4706271456; }
		_case_begin_4706271456:;
		{
			if (_102217_token._field_kind == jule::Str("{", 1)) {
				return jule::Any((*this)._method_build_scope_st(_102132_st->_field_tokens));
			}
		}
		goto _match_end_4706267312;
		_case_end_4706271456:;
		_case_begin_4706264976:;
		{
			if (_1d21b6e08_is_fn_call(_102132_st->_field_tokens) != nullptr) {
				return (*this)._method_build_call_st(_102132_st->_field_tokens);
			}
		}
		goto _match_end_4706267312;
		_case_end_4706264976:;
		_match_end_4706267312:;
	}
	(*this)._method_push_err(_102217_token,jule::Str("invalid syntax", 14));
	return jule::Any(nullptr);
}



inline void _1d21a4698_ScopeParser::_method_build(jule::Slice<_1d1da4277_Token>& _109729_tokens,jule::Ref<_1d1e5192e_ScopeTree>& _109751_s) {
	if ((!(jule::real(_109751_s)))) {
		return;
	}
	(*this)._field_stms=_1d21a4698_split_stms(_109729_tokens);
	(*this)._field_pos=-1LL;
	(*this)._field_s=_109751_s;
	_iter_begin_4706294128:;
	if (!((!((*this)._method_is_last_st())) && (!((*this)._method_finished())))) { goto _iter_end_4706294128; }
	{
		jule::Ref<_1d21a4698_Stmt> _110621_st = (*this)._method_next();
		jule::Any _110721_data = (*this)._method_build_st(_110621_st);
		if (_110721_data != nullptr) {
			(*this)._field_s->_field_stmts=jule::append((*this)._field_s->_field_stmts,jule::Slice<jule::Any>({_110721_data}));
		}
		if ((*this)._method_stopped()) {
			goto _iter_end_4706294128;
		}
	}
	_iter_next_4706294128:;
	goto _iter_begin_4706294128;
	_iter_end_4706294128:;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d21a4698_ScopeParser &_Src) {
	_Stream << "ScopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stms:" << _Src._field_stms << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d21b6e08_CallData &_Src) {
	_Stream << "CallData{";
	_Stream << "expr_tokens:" << _Src._field_expr_tokens << ", ";
	_Stream << "args_tokens:" << _Src._field_args_tokens << ", ";
	_Stream << "generics_tokens:" << _Src._field_generics_tokens;
	_Stream << "}";
	return _Stream;
}



inline void _1d21b6e08_Precedencer::_method_set(jule::Int _15622_level,jule::Any _15634_expr) {
	{
		auto _range_expr = (*this)._field_pairs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1d21b6e08_i = 0;
			jule::Slice<jule::Any> _1d21b6e08_pair = *_range_begin;
			_iter_begin_4706303600:;
			{
				jule::Int _15817_pair_level = _1d21b6e08_pair[0LL].operator jule::Int();
				if (_15622_level > _15817_pair_level) {
					jule::Slice<jule::Slice<jule::Any>> _16025_first = (*this)._field_pairs.slice(0LL,static_cast<jule::Int>(_1d21b6e08_i));
					jule::Slice<jule::Slice<jule::Any>> _16125_buffer = jule::Slice<jule::Slice<jule::Any>>({jule::Slice<jule::Any>({jule::Any(_15622_level),_15634_expr})});
					jule::Slice<jule::Slice<jule::Any>> _16225_appended = jule::append(_16125_buffer,(*this)._field_pairs.slice(static_cast<jule::Int>(_1d21b6e08_i)));
					(*this)._field_pairs=jule::append(_16025_first,_16225_appended);
					return;
				}
			}
			_iter_next_4706303600:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1d21b6e08_i; _1d21b6e08_pair = *_range_begin; goto _iter_begin_4706303600; }
			_iter_end_4706303600:;
		}
	}
	(*this)._field_pairs=jule::append((*this)._field_pairs,jule::Slice<jule::Slice<jule::Any>>({jule::Slice<jule::Any>({jule::Any(_15622_level),_15634_expr})}));
}



inline jule::Any _1d21b6e08_Precedencer::_method_get_lower(void) {
	jule::I64 _17117_i = (*this)._field_pairs.len() - 1LL;
	_iter_begin_4706302992:;
	if (!(_17117_i >= 0LL)) { goto _iter_end_4706302992; }
	{
		jule::Any _17321_data = (*this)._field_pairs[static_cast<jule::Int>(_17117_i)][1LL];
		if (_17321_data != nullptr) {
			return _17321_data;
		}
	}
	_iter_next_4706302992:;
	(_17117_i)--;
	goto _iter_begin_4706302992;
	_iter_end_4706302992:;
	return jule::Any(nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, const _1d21b6e08_Precedencer &_Src) {
	_Stream << "Precedencer{";
	_Stream << "pairs:" << _Src._field_pairs;
	_Stream << "}";
	return _Stream;
}



inline void _1d21b6e08_ExprBuilder::_method_push_err(_1d1da4277_Token _28827_token,jule::Str _28841_fmt,jule::Slice<jule::Any> _28854_args) {
	(*this)._field_p->_method_push_err(_28827_token,_28841_fmt,_28854_args);
}



inline void _1d21b6e08_ExprBuilder::_method_push_suggestion(jule::Str _29334_fmt,jule::Slice<jule::Any> _29347_args) {
	(*this)._field_p->_method_push_suggestion(_29334_fmt,_29347_args);
}



inline jule::Ref<_1d1e5192e_TupleExpr> _1d21b6e08_ExprBuilder::_method_build_tuple(jule::Slice<jule::Slice<_1d1da4277_Token>>& _29735_parts) {
	jule::Ref<_1d1e5192e_TupleExpr> _29817_tuple = jule::new_struct<_1d1e5192e_TupleExpr>(new( std::nothrow ) _1d1e5192e_TupleExpr(jule::Slice<jule::Ref<_1d1e5192e_Expr>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_29735_parts.len())))));
	{
		auto _range_expr = _29735_parts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1d21b6e08_i = 0;
			jule::Slice<_1d1da4277_Token> _1d21b6e08_part = *_range_begin;
			_iter_begin_4706356960:;
			{
				_29817_tuple->_field_expr[static_cast<jule::Int>(_1d21b6e08_i)]=(*this)._method_build_from_tokens(_1d21b6e08_part);
			}
			_iter_next_4706356960:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1d21b6e08_i; _1d21b6e08_part = *_range_begin; goto _iter_begin_4706356960; }
			_iter_end_4706356960:;
		}
	}
	return _29817_tuple;
}



inline jule::Ref<_1d1e5192e_LitExpr> _1d21b6e08_ExprBuilder::_method_build_lit(_1d1da4277_Token _30728_token) {
	return jule::new_struct<_1d1e5192e_LitExpr>(new( std::nothrow ) _1d1e5192e_LitExpr(_30728_token,_30728_token._field_kind));
}



inline jule::Ref<_1d1e5192e_TypeDecl> _1d21b6e08_ExprBuilder::_method_build_primitive_type(_1d1da4277_Token& _31440_token) {
	return _1b87d0ddc_build_prim_type(_31440_token);
}



inline jule::Any _1d21b6e08_ExprBuilder::_method_build_single(_1d1da4277_Token _31835_token) {
	{
		auto _match_expr{ _31835_token._field_id };
		if (!((6LLU) == _match_expr)) { goto _case_end_4706373200; }
		_case_begin_4706373200:;
		{
			return jule::Any((*this)._method_build_lit(_31835_token));
		}
		goto _match_end_4706369424;
		_case_end_4706373200:;
		if (!((2LLU) == _match_expr || (28LLU) == _match_expr)) { goto _case_end_4706370400; }
		_case_begin_4706370400:;
		{
			return jule::Any(_1d21b6e08_build_ident_expr(_31835_token));
		}
		goto _match_end_4706369424;
		_case_end_4706370400:;
		if (!((1LLU) == _match_expr)) { goto _case_end_4706370512; }
		_case_begin_4706370512:;
		{
			return jule::Any((*this)._method_build_primitive_type(_31835_token));
		}
		goto _match_end_4706369424;
		_case_end_4706370512:;
		_case_begin_4706370096:;
		{
			(*this)._method_push_err(_31835_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::Any(nullptr);
		}
		goto _match_end_4706369424;
		_case_end_4706370096:;
		_match_end_4706369424:;
	}
}



inline jule::Ref<_1d1e5192e_IdentExpr> _1d21b6e08_ExprBuilder::_method_build_cpp_linked_ident(jule::Slice<_1d1da4277_Token>& _33646_tokens) {
	if (_33646_tokens[0LL]._field_id != 31LLU) {
		return jule::new_ref<_1d1e5192e_IdentExpr>();
	} else if (_33646_tokens[1LL]._field_id != 20LLU) {
		(*this)._method_push_err(_33646_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("use dot (.) to access cpp-linked defines", 40),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1d1e5192e_IdentExpr>();
	}
	_1d1da4277_Token _34417_token = _33646_tokens[2LL];
	if (_34417_token._field_id != 2LLU) {
		(*this)._method_push_err(_33646_tokens[2LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1d1e5192e_IdentExpr>();
	}
	jule::Ref<_1d1e5192e_IdentExpr> _35017_expr = _1d21b6e08_build_ident_expr(_34417_token);
	_35017_expr->_field_cpp_linked=true;
	return _35017_expr;
}



inline jule::Ref<_1d1e5192e_UnaryExpr> _1d21b6e08_ExprBuilder::_method_build_unary(jule::Slice<_1d1da4277_Token> _35534_tokens) {
	_1d1da4277_Token _35617_op = _35534_tokens[0LL];
	if (_35534_tokens.len() == 1LL) {
		(*this)._method_push_err(_35617_op,jule::Str("missing expression for unary operator", 37),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1d1e5192e_UnaryExpr>();
	} else if ((!(_1d1da4277_is_unary_op(_35617_op._field_kind)))) {
		(*this)._method_push_err(_35617_op,jule::Str("invalid_operator_for_unary: @", 29),jule::Slice<jule::Any>({jule::Any(_35617_op._field_kind)}));
		return jule::new_ref<_1d1e5192e_UnaryExpr>();
	}
	_35534_tokens=_35534_tokens.slice(1LL);
	return jule::new_struct<_1d1e5192e_UnaryExpr>(new( std::nothrow ) _1d1e5192e_UnaryExpr(_35617_op,(*this)._method_build(_35534_tokens)));
}



inline jule::Ref<_1d1e5192e_SubIdentExpr> _1d21b6e08_ExprBuilder::_method_build_obj_sub_ident(jule::Slice<_1d1da4277_Token> _37642_tokens) {
	jule::I64 _37717_i = _37642_tokens.len() - 1LL;
	_1d1da4277_Token _37817_ident_token = _37642_tokens[static_cast<jule::Int>(_37717_i)];
	(_37717_i)--;
	_37642_tokens=_37642_tokens.slice(0LL,static_cast<jule::Int>(_37717_i));
	if (_37642_tokens.len() == 0LL) {
		(*this)._method_push_err(_37817_ident_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1d1e5192e_SubIdentExpr>();
	}
	return jule::new_struct<_1d1e5192e_SubIdentExpr>(new( std::nothrow ) _1d1e5192e_SubIdentExpr(jule::Bool(),(*this)._method_build(_37642_tokens),_37817_ident_token));
}



inline jule::Ref<_1d1e5192e_NsSelectionExpr> _1d21b6e08_ExprBuilder::_method_build_ns_sub_ident(jule::Slice<_1d1da4277_Token>& _39142_tokens) {
	jule::Ref<_1d1e5192e_NsSelectionExpr> _39217_ns = jule::new_struct<_1d1e5192e_NsSelectionExpr>(new( std::nothrow ) _1d1e5192e_NsSelectionExpr());
	{
		auto _range_expr = _39142_tokens;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1d21b6e08_i = 0;
			_1d1da4277_Token _1d21b6e08_token = *_range_begin;
			_iter_begin_4706418896:;
			{
				if (jule::mod(_1d21b6e08_i,2LL) == 0LL) {
					if (_1d21b6e08_token._field_id != 2LLU) {
						(*this)._method_push_err(_1d21b6e08_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
						(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
					}
					_39217_ns->_field_ns=jule::append(_39217_ns->_field_ns,jule::Slice<_1d1da4277_Token>({_1d21b6e08_token}));
				} else if (_1d21b6e08_token._field_id != 23LLU) {
					(*this)._method_push_err(_1d21b6e08_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
					(*this)._method_push_suggestion(jule::Str("expected double colon \"::\"", 26),jule::Slice<jule::Any>({}));
				}
			}
			_iter_next_4706418896:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1d21b6e08_i; _1d21b6e08_token = *_range_begin; goto _iter_begin_4706418896; }
			_iter_end_4706418896:;
		}
	}
	_39217_ns->_field_ident=_39217_ns->_field_ns[static_cast<jule::Int>(_39217_ns->_field_ns.len() - 1LL)];
	_39217_ns->_field_ns=_39217_ns->_field_ns.slice(0LL,static_cast<jule::Int>(_39217_ns->_field_ns.len() - 1LL));
	return _39217_ns;
}



inline jule::Ref<_1d1e5192e_TypeDecl> _1d21b6e08_ExprBuilder::_method_build_type(jule::Slice<_1d1da4277_Token>& _41034_tokens) {
	jule::Int _41117_i = 0LL;
	jule::Ref<_1d1e5192e_TypeDecl> _41218_t;
	jule::Bool _41221_ok;
	std::tie(_41218_t,_41221_ok) = (*this)._field_p->_method_build_type(_41034_tokens,(&(_41117_i)),false);
	if ((!(_41221_ok))) {
		(*this)._method_push_err(_41034_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1d1e5192e_TypeDecl>();
	}
	if (_41117_i < _41034_tokens.len()) {
		(*this)._method_push_err(_41034_tokens[static_cast<jule::Int>(_41117_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	return _41218_t;
}



inline jule::Any _1d21b6e08_ExprBuilder::_method_build_sub_ident(jule::Slice<_1d1da4277_Token>& _42439_tokens) {
	jule::I64 _42513_i = _42439_tokens.len() - 2LL;
	_1d1da4277_Token _42613_token = _42439_tokens[static_cast<jule::Int>(_42513_i)];
	{
		auto _match_expr{ _42613_token._field_id };
		if (!((20LLU) == _match_expr)) { goto _case_end_4706450624; }
		_case_begin_4706450624:;
		{
			return jule::Any((*this)._method_build_obj_sub_ident(_42439_tokens));
		}
		goto _match_end_4706448192;
		_case_end_4706450624:;
		if (!((23LLU) == _match_expr)) { goto _case_end_4706450736; }
		_case_begin_4706450736:;
		{
			return jule::Any((*this)._method_build_ns_sub_ident(_42439_tokens));
		}
		goto _match_end_4706448192;
		_case_end_4706450736:;
		if (!((3LLU) == _match_expr)) { goto _case_end_4706450848; }
		_case_begin_4706450848:;
		{
			if (_42613_token._field_kind == jule::Str("]", 1)) {
				return jule::Any((*this)._method_build_type(_42439_tokens));
			}
		}
		goto _match_end_4706448192;
		_case_end_4706450848:;
		_match_end_4706448192:;
	}
	(*this)._method_push_err(_42613_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	return jule::Any(nullptr);
}



inline jule::Ref<_1d1e5192e_VariadicExpr> _1d21b6e08_ExprBuilder::_method_build_variadic(jule::Slice<_1d1da4277_Token> _44537_tokens) {
	_1d1da4277_Token _44617_token = _44537_tokens[static_cast<jule::Int>(_44537_tokens.len() - 1LL)];
	_44537_tokens=_44537_tokens.slice(0LL,static_cast<jule::Int>(_44537_tokens.len() - 1LL));
	return jule::new_struct<_1d1e5192e_VariadicExpr>(new( std::nothrow ) _1d1e5192e_VariadicExpr(_44617_token,(*this)._method_build(_44537_tokens)));
}



inline jule::Any _1d21b6e08_ExprBuilder::_method_build_op_right(jule::Slice<_1d1da4277_Token>& _45438_tokens) {
	_1d1da4277_Token _45517_token = _45438_tokens[static_cast<jule::Int>(_45438_tokens.len() - 1LL)];
	{
		auto _match_expr{ _45517_token._field_kind };
		if (!((jule::Str("...", 3)) == _match_expr)) { goto _case_end_4706469984; }
		_case_begin_4706469984:;
		{
			return jule::Any((*this)._method_build_variadic(_45438_tokens));
		}
		goto _match_end_4706468480;
		_case_end_4706469984:;
		_case_begin_4706469168:;
		{
			(*this)._method_push_err(_45517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::Any(nullptr);
		}
		goto _match_end_4706468480;
		_case_end_4706469168:;
		_match_end_4706468480:;
	}
}



inline jule::Any _1d21b6e08_ExprBuilder::_method_build_between_parentheses(jule::Slice<_1d1da4277_Token> _46648_tokens) {
	_1d1da4277_Token _46713_token = _46648_tokens[0LL];
	_46648_tokens=_46648_tokens.slice(1LL,static_cast<jule::Int>(_46648_tokens.len() - 1LL));
	if (_46648_tokens.len() == 0LL) {
		(*this)._method_push_err(_46713_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("empty parentheses are not valid expression, must include an expression in range", 79),jule::Slice<jule::Any>({}));
		return jule::Any(nullptr);
	}
	return (*this)._method_build(_46648_tokens);
}



inline jule::Ref<_1d1e5192e_CastExpr> _1d21b6e08_ExprBuilder::_method_try_build_cast(jule::Slice<_1d1da4277_Token>& _47738_tokens) {
	jule::Int _47817_range_n = 0LL;
	{
		auto _range_expr = _47738_tokens;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1d21b6e08_i = 0;
			_1d1da4277_Token _1d21b6e08_token = *_range_begin;
			_iter_begin_4706485728:;
			{
				if (_1d21b6e08_token._field_id == 3LLU) {
					{
						auto _match_expr{ _1d21b6e08_token._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4706490080; }
						_case_begin_4706490080:;
						{
							(_47817_range_n)++;
							goto _iter_next_4706485728;
						}
						goto _match_end_4706488496;
						_case_end_4706490080:;
						_case_begin_4706489280:;
						{
							(_47817_range_n)--;
						}
						goto _match_end_4706488496;
						_case_end_4706489280:;
						_match_end_4706488496:;
					}
				}
				if (_47817_range_n > 0LL) {
					goto _iter_next_4706485728;
				} else if ((_1d21b6e08_i + 1LL) == _47738_tokens.len()) {
					return jule::new_ref<_1d1e5192e_CastExpr>();
				}
				jule::Slice<_1d1da4277_Token> _49921_type_tokens = _47738_tokens.slice(0LL,static_cast<jule::Int>(_1d21b6e08_i + 1LL));
				jule::Slice<_1d1da4277_Token> _50021_expr_tokens = _47738_tokens.slice(static_cast<jule::Int>(_1d21b6e08_i + 1LL));
				if (_50021_expr_tokens.len() == 0LL) {
					return jule::new_ref<_1d1e5192e_CastExpr>();
				}
				_1d1da4277_Token _50717_tok = _50021_expr_tokens[0LL];
				if ((_50717_tok._field_id != 3LLU) || (_50717_tok._field_kind != jule::Str("(", 1))) {
					return jule::new_ref<_1d1e5192e_CastExpr>();
				}
				jule::Ref<_1d1e5192e_CastExpr> _51221_cast = jule::new_struct<_1d1e5192e_CastExpr>(new( std::nothrow ) _1d1e5192e_CastExpr());
				if (_50021_expr_tokens.len() == 2LL) {
					(*this)._method_push_err(_50021_expr_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
					(*this)._method_push_suggestion(jule::Str("give an expression for casting", 30),jule::Slice<jule::Any>({}));
				}
				if (_49921_type_tokens.len() == 2LL) {
					(*this)._method_push_err(_49921_type_tokens[0LL],jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
					(*this)._method_push_suggestion(jule::Str("type declaration expected for casting", 37),jule::Slice<jule::Any>({}));
				} else {
					_49921_type_tokens=_49921_type_tokens.slice(1LL,static_cast<jule::Int>(_49921_type_tokens.len() - 1LL));
					jule::Int _52625_type_index = 0LL;
					jule::Ref<_1d1e5192e_TypeDecl> _52726_t;
					jule::Bool _52729_ok;
					std::tie(_52726_t,_52729_ok) = (*this)._field_p->_method_build_type(_49921_type_tokens,(&(_52625_type_index)),true);
					if (_52729_ok && (_52625_type_index < _49921_type_tokens.len())) {
						(*this)._method_push_err(_49921_type_tokens[static_cast<jule::Int>(_52625_type_index)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
					} else if ((!(_52729_ok))) {
						return _51221_cast;
					}
					_51221_cast->_field_kind=_52726_t;
					if (_50021_expr_tokens.len() > 2LL) {
						jule::Int _53729_j = 0LL;
						_1d21abb45_range(_53729_j,jule::Str("(", 1),jule::Str(")", 1),_50021_expr_tokens);
						if (_53729_j < _50021_expr_tokens.len()) {
							return jule::new_ref<_1d1e5192e_CastExpr>();
						}
						_50021_expr_tokens=_50021_expr_tokens.slice(0LL,static_cast<jule::Int>(_53729_j));
						_51221_cast->_field_expr=(*this)._method_build(_50021_expr_tokens);
					}
				}
				return _51221_cast;
			}
			_iter_next_4706485728:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1d21b6e08_i; _1d21b6e08_token = *_range_begin; goto _iter_begin_4706485728; }
			_iter_end_4706485728:;
		}
	}
	return jule::new_ref<_1d1e5192e_CastExpr>();
}



inline void _1d21b6e08_ExprBuilder::_method_push_arg(jule::Slice<jule::Ref<_1d1e5192e_Expr>>& _55232_args,jule::Slice<_1d1da4277_Token> _55251_tokens,_1d1da4277_Token _55268_err_token) {
	if (_55251_tokens.len() == 0LL) {
		(*this)._method_push_err(_55268_err_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("an expression expected", 22),jule::Slice<jule::Any>({}));
		return;
	}
	_55232_args=jule::append(_55232_args,jule::Slice<jule::Ref<_1d1e5192e_Expr>>({(*this)._method_build_from_tokens(_55251_tokens)}));
}



inline jule::Slice<jule::Ref<_1d1e5192e_Expr>> _1d21b6e08_ExprBuilder::_method_build_args(jule::Slice<_1d1da4277_Token> _56133_tokens) {
	if (_56133_tokens.len() < 2LL) {
		return nullptr;
	}
	jule::Slice<jule::Ref<_1d1e5192e_Expr>> _56717_args = nullptr;
	jule::Int _56817_last = 0LL;
	jule::Int _56917_range_n = 0LL;
	_56133_tokens=_56133_tokens.slice(1LL,static_cast<jule::Int>(_56133_tokens.len() - 1LL));
	{
		auto _range_expr = _56133_tokens;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1d21b6e08_i = 0;
			_1d1da4277_Token _1d21b6e08_token = *_range_begin;
			_iter_begin_4706540736:;
			{
				if (_1d21b6e08_token._field_id == 3LLU) {
					{
						auto _match_expr{ _1d21b6e08_token._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4706546304; }
						_case_begin_4706546304:;
						{
							(_56917_range_n)++;
						}
						goto _match_end_4706544720;
						_case_end_4706546304:;
						_case_begin_4706545504:;
						{
							(_56917_range_n)--;
						}
						goto _match_end_4706544720;
						_case_end_4706545504:;
						_match_end_4706544720:;
					}
				}
				if ((_56917_range_n > 0LL) || (_1d21b6e08_token._field_id != 8LLU)) {
					goto _iter_next_4706540736;
				}
				(*this)._method_push_arg(_56717_args,_56133_tokens.slice(static_cast<jule::Int>(_56817_last),static_cast<jule::Int>(_1d21b6e08_i)),_1d21b6e08_token);
				_56817_last=static_cast<jule::Int>(_1d21b6e08_i + 1LL);
			}
			_iter_next_4706540736:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1d21b6e08_i; _1d21b6e08_token = *_range_begin; goto _iter_begin_4706540736; }
			_iter_end_4706540736:;
		}
	}
	if (_56817_last < _56133_tokens.len()) {
		if (_56817_last == 0LL) {
			if (_56133_tokens.len() > 0LL) {
				(*this)._method_push_arg(_56717_args,_56133_tokens.slice(static_cast<jule::Int>(_56817_last)),_56133_tokens[static_cast<jule::Int>(_56817_last)]);
			}
		} else {
			(*this)._method_push_arg(_56717_args,_56133_tokens.slice(static_cast<jule::Int>(_56817_last)),_56133_tokens[static_cast<jule::Int>(_56817_last - 1LL)]);
		}
	}
	return _56717_args;
}



inline jule::Slice<jule::Ref<_1d1e5192e_TypeDecl>> _1d21b6e08_ExprBuilder::_method_build_call_generics(jule::Slice<_1d1da4277_Token> _60442_tokens) {
	if (_60442_tokens.len() == 0LL) {
		return nullptr;
	}
	_60442_tokens=_60442_tokens.slice(1LL,static_cast<jule::Int>(_60442_tokens.len() - 1LL));
	jule::Slice<jule::Slice<_1d1da4277_Token>> _61018_parts;
	jule::Slice<_1d0557e9e_Log> _61025_errs;
	std::tie(_61018_parts,_61025_errs) = _1d21abb45_parts(_60442_tokens,8LLU,true);
	jule::Slice<jule::Ref<_1d1e5192e_TypeDecl>> _61117_generics = jule::Slice<jule::Ref<_1d1e5192e_TypeDecl>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_61018_parts.len())));
	(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_61025_errs);
	{
		auto _range_expr = _61018_parts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1d21b6e08_i = 0;
			jule::Slice<_1d1da4277_Token> _1d21b6e08_part = *_range_begin;
			_iter_begin_4706566256:;
			{
				if (_1d21b6e08_part.len() == 0LL) {
					goto _iter_next_4706566256;
				}
				jule::Int _61721_j = 0LL;
				jule::Ref<_1d1e5192e_TypeDecl> _61822_generic;
				std::tie(_61822_generic,std::ignore) = (*this)._field_p->_method_build_type(_1d21b6e08_part,(&(_61721_j)),true);
				if (_61721_j < _1d21b6e08_part.len()) {
					(*this)._method_push_err(_1d21b6e08_part[static_cast<jule::Int>(_61721_j)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				}
				_61117_generics[static_cast<jule::Int>(_1d21b6e08_i)]=_61822_generic;
			}
			_iter_next_4706566256:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1d21b6e08_i; _1d21b6e08_part = *_range_begin; goto _iter_begin_4706566256; }
			_iter_end_4706566256:;
		}
	}
	return _61117_generics;
}



inline jule::Ref<_1d1e5192e_FnCallExpr> _1d21b6e08_ExprBuilder::_method_build_fn_call(_1d1da4277_Token& _62837_token,jule::Ref<_1d21b6e08_CallData>& _62856_data) {
	return jule::new_struct<_1d1e5192e_FnCallExpr>(new( std::nothrow ) _1d1e5192e_FnCallExpr(_62837_token,(*this)._method_build_from_tokens(_62856_data->_field_expr_tokens),(*this)._method_build_call_generics(_62856_data->_field_generics_tokens),(*this)._method_build_args(_62856_data->_field_args_tokens),jule::Bool()));
}



inline jule::Any _1d21b6e08_ExprBuilder::_method_build_parentheses_range(jule::Slice<_1d1da4277_Token>& _63747_tokens) {
	_1d1da4277_Token _63817_token = _63747_tokens[0LL];
	{
		auto _match_expr{ _63817_token._field_id };
		if (!((3LLU) == _match_expr)) { goto _case_end_4706592384; }
		_case_begin_4706592384:;
		{
			{
				auto _match_expr{ _63817_token._field_kind };
				if (!((jule::Str("(", 1)) == _match_expr)) { goto _case_end_4706594096; }
				_case_begin_4706594096:;
				{
					jule::Ref<_1d1e5192e_CastExpr> _64325_expr = (*this)._method_try_build_cast(_63747_tokens);
					if (jule::real(_64325_expr)) {
						return jule::Any(_64325_expr);
					}
				}
				goto _match_end_4706592944;
				_case_end_4706594096:;
				_match_end_4706592944:;
			}
		}
		goto _match_end_4706591664;
		_case_end_4706592384:;
		_match_end_4706591664:;
	}
	jule::Ref<_1d21b6e08_CallData> _65017_data = _1d21b6e08_get_call_data(_63747_tokens);
	if (_65017_data->_field_expr_tokens.len() == 0LL) {
		return (*this)._method_build_between_parentheses(_65017_data->_field_args_tokens);
	}
	return jule::Any((*this)._method_build_fn_call(_63817_token,_65017_data));
}



inline jule::Ref<_1d1e5192e_UnsafeExpr> _1d21b6e08_ExprBuilder::_method_build_unsafe_expr(jule::Slice<_1d1da4277_Token> _66140_tokens) {
	_1d1da4277_Token _66217_token = _66140_tokens[0LL];
	_66140_tokens=_66140_tokens.slice(1LL);
	jule::Int _66417_i = 0LL;
	jule::Slice<_1d1da4277_Token> _66517_range_tokens = _1d21abb45_range(_66417_i,jule::Str("{", 1),jule::Str("}", 1),_66140_tokens);
	if (_66517_range_tokens.len() == 0LL) {
		(*this)._method_push_err(_66140_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1d1e5192e_UnsafeExpr>();
	}
	return jule::new_struct<_1d1e5192e_UnsafeExpr>(new( std::nothrow ) _1d1e5192e_UnsafeExpr(_66217_token,(*this)._method_build_from_tokens(_66517_range_tokens)->_field_kind));
}



inline jule::Ref<_1d1e5192e_FnDecl> _1d21b6e08_ExprBuilder::_method_build_anon_fn(jule::Slice<_1d1da4277_Token>& _67637_tokens) {
	jule::Ref<_1d1e5192e_FnDecl> _67717_f = (*this)._field_p->_method_build_fn(_67637_tokens,false,false);
	if ((!(_67717_f->_method_is_anon()))) {
		(*this)._method_push_err(_67717_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("anonymous function expected, remove identifier of function", 58),jule::Slice<jule::Any>({}));
	}
	return _67717_f;
}



inline jule::Any _1d21b6e08_ExprBuilder::_method_build_unsafe(jule::Slice<_1d1da4277_Token>& _68536_tokens) {
	{
		auto _match_expr{ _68536_tokens[1LL]._field_id };
		if (!((33LLU) == _match_expr)) { goto _case_end_4706626112; }
		_case_begin_4706626112:;
		{
			return jule::Any((*this)._method_build_anon_fn(_68536_tokens));
		}
		goto _match_end_4706623360;
		_case_end_4706626112:;
		_case_begin_4706624656:;
		{
			return jule::Any((*this)._method_build_unsafe_expr(_68536_tokens));
		}
		goto _match_end_4706623360;
		_case_end_4706624656:;
		_match_end_4706623360:;
	}
}



inline void _1d21b6e08_ExprBuilder::_method_push_range_lit_part(jule::Slice<_1d1da4277_Token> _69642_part,_1d1da4277_Token _6979_error_token,jule::Slice<jule::Slice<_1d1da4277_Token>>& _69734_parts) {
	if (_69642_part.len() == 0LL) {
		(*this)._method_push_err(_6979_error_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("an expression expected", 22),jule::Slice<jule::Any>({}));
		return;
	}
	_69734_parts=jule::append(_69734_parts,jule::Slice<jule::Slice<_1d1da4277_Token>>({_69642_part}));
}



inline jule::Slice<jule::Slice<_1d1da4277_Token>> _1d21b6e08_ExprBuilder::_method_get_brace_range_lit_expr_parts(jule::Slice<_1d1da4277_Token> _70753_tokens) {
	if (_70753_tokens.len() < 2LL) {
		return nullptr;
	}
	jule::Slice<jule::Slice<_1d1da4277_Token>> _71317_parts = nullptr;
	jule::Int _71517_last = 0LL;
	jule::Int _71617_range_n = 0LL;
	_70753_tokens=_70753_tokens.slice(1LL,static_cast<jule::Int>(_70753_tokens.len() - 1LL));
	{
		auto _range_expr = _70753_tokens;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1d21b6e08_i = 0;
			_1d1da4277_Token _1d21b6e08_token = *_range_begin;
			_iter_begin_4706643200:;
			{
				if (_1d21b6e08_token._field_id == 3LLU) {
					{
						auto _match_expr{ _1d21b6e08_token._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4706648768; }
						_case_begin_4706648768:;
						{
							(_71617_range_n)++;
						}
						goto _match_end_4706647184;
						_case_end_4706648768:;
						_case_begin_4706647968:;
						{
							(_71617_range_n)--;
						}
						goto _match_end_4706647184;
						_case_end_4706647968:;
						_match_end_4706647184:;
					}
				}
				if ((_71617_range_n > 0LL) || (_1d21b6e08_token._field_id != 8LLU)) {
					goto _iter_next_4706643200;
				}
				(*this)._method_push_range_lit_part(_70753_tokens.slice(static_cast<jule::Int>(_71517_last),static_cast<jule::Int>(_1d21b6e08_i)),_1d21b6e08_token,_71317_parts);
				_71517_last=static_cast<jule::Int>(_1d21b6e08_i + 1LL);
			}
			_iter_next_4706643200:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1d21b6e08_i; _1d21b6e08_token = *_range_begin; goto _iter_begin_4706643200; }
			_iter_end_4706643200:;
		}
	}
	if (_71517_last < _70753_tokens.len()) {
		if (_71517_last == 0LL) {
			if (_70753_tokens.len() > 0LL) {
				(*this)._method_push_range_lit_part(_70753_tokens.slice(static_cast<jule::Int>(_71517_last)),_70753_tokens[static_cast<jule::Int>(_71517_last)],_71317_parts);
			}
		} else {
			(*this)._method_push_range_lit_part(_70753_tokens.slice(static_cast<jule::Int>(_71517_last)),_70753_tokens[static_cast<jule::Int>(_71517_last - 1LL)],_71317_parts);
		}
	}
	return _71317_parts;
}



inline jule::Ref<_1d1e5192e_FieldExprPair> _1d21b6e08_ExprBuilder::_method_build_field_expr_pair(jule::Slice<_1d1da4277_Token> _75044_tokens) {
	jule::Ref<_1d1e5192e_FieldExprPair> _75117_pair = jule::new_struct<_1d1e5192e_FieldExprPair>(new( std::nothrow ) _1d1e5192e_FieldExprPair(_75044_tokens[0LL],jule::Any()));
	_75044_tokens=_75044_tokens.slice(2LL);
	_75117_pair->_field_expr=(*this)._method_build_from_tokens(_75044_tokens)->_field_kind;
	return _75117_pair;
}



inline jule::Any _1d21b6e08_ExprBuilder::_method_build_struct_lit_expr(jule::Slice<_1d1da4277_Token>& _75945_tokens) {
	_1d1da4277_Token _76017_token = _75945_tokens[0LL];
	if (_76017_token._field_id == 2LLU) {
		if (_75945_tokens.len() > 1LL) {
			_76017_token=_75945_tokens[1LL];
			if (_76017_token._field_id == 11LLU) {
				return jule::Any((*this)._method_build_field_expr_pair(_75945_tokens));
			}
		}
	}
	return jule::Any((*this)._method_build_from_tokens(_75945_tokens));
}



inline jule::Slice<jule::Any> _1d21b6e08_ExprBuilder::_method_build_struct_lit_exprs(jule::Slice<_1d1da4277_Token>& _77246_tokens) {
	jule::Slice<jule::Slice<_1d1da4277_Token>> _77317_parts = (*this)._method_get_brace_range_lit_expr_parts(_77246_tokens);
	if (_77317_parts.len() == 0LL) {
		return nullptr;
	}
	jule::Slice<jule::Any> _77817_pairs = jule::Slice<jule::Any>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_77317_parts.len())));
	{
		auto _range_expr = _77317_parts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1d21b6e08_i = 0;
			jule::Slice<_1d1da4277_Token> _1d21b6e08_part = *_range_begin;
			_iter_begin_4706684496:;
			{
				_77817_pairs[static_cast<jule::Int>(_1d21b6e08_i)]=(*this)._method_build_struct_lit_expr(_1d21b6e08_part);
			}
			_iter_next_4706684496:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1d21b6e08_i; _1d21b6e08_part = *_range_begin; goto _iter_begin_4706684496; }
			_iter_end_4706684496:;
		}
	}
	return _77817_pairs;
}



inline jule::Ref<_1d1e5192e_StructLit> _1d21b6e08_ExprBuilder::_method_build_typed_struct_literal(jule::Slice<_1d1da4277_Token> _78549_tokens) {
	jule::Int _78617_i = 0LL;
	jule::Ref<_1d1e5192e_TypeDecl> _78718_t;
	jule::Bool _78721_ok;
	std::tie(_78718_t,_78721_ok) = (*this)._field_p->_method_build_type(_78549_tokens,(&(_78617_i)),true);
	if ((!(_78721_ok))) {
		return jule::new_ref<_1d1e5192e_StructLit>();
	} else if (_78617_i >= _78549_tokens.len()) {
		(*this)._method_push_err(_78549_tokens[static_cast<jule::Int>(_78617_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1d1e5192e_StructLit>();
	}
	_78549_tokens=_78549_tokens.slice(static_cast<jule::Int>(_78617_i));
	_1d1da4277_Token _79613_token = _78549_tokens[0LL];
	if ((_79613_token._field_id != 3LLU) || (_79613_token._field_kind != jule::Str("{", 1))) {
		(*this)._method_push_err(_79613_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1d1e5192e_StructLit>();
	}
	return jule::new_struct<_1d1e5192e_StructLit>(new( std::nothrow ) _1d1e5192e_StructLit(_78718_t,(*this)._method_build_struct_lit_exprs(_78549_tokens)));
}



inline jule::Any _1d21b6e08_ExprBuilder::_method_build_brace_lit_part(jule::Slice<_1d1da4277_Token>& _80844_tokens) {
	jule::Slice<_1d1da4277_Token> _80918_l;
	jule::Slice<_1d1da4277_Token> _80925_r;
	std::tie(_80918_l,_80925_r) = _1d21b6e08_split_colon(_80844_tokens);
	if (_80918_l != nullptr) {
		return jule::Any(jule::new_struct<_1d1e5192e_KeyValPair>(new( std::nothrow ) _1d1e5192e_KeyValPair((*this)._method_build_from_tokens(_80918_l)->_field_kind,(*this)._method_build_from_tokens(_80925_r)->_field_kind,_80844_tokens[static_cast<jule::Int>(_80918_l.len())])));
	}
	return jule::Any((*this)._method_build_from_tokens(_80844_tokens));
}



inline jule::Ref<_1d1e5192e_BraceLit> _1d21b6e08_ExprBuilder::_method_build_brace_lit(jule::Slice<_1d1da4277_Token>& _82139_tokens) {
	jule::Ref<_1d1e5192e_BraceLit> _82217_lit = jule::new_struct<_1d1e5192e_BraceLit>(new( std::nothrow ) _1d1e5192e_BraceLit(_82139_tokens[0LL],jule::Slice<jule::Any>()));
	jule::Slice<jule::Slice<_1d1da4277_Token>> _82617_parts = (*this)._method_get_brace_range_lit_expr_parts(_82139_tokens);
	if (_82617_parts == nullptr) {
		return _82217_lit;
	}
	_82217_lit->_field_exprs=jule::Slice<jule::Any>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_82617_parts.len())));
	{
		auto _range_expr = _82617_parts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1d21b6e08_i = 0;
			jule::Slice<_1d1da4277_Token> _1d21b6e08_part = *_range_begin;
			_iter_begin_4706721472:;
			{
				_82217_lit->_field_exprs[static_cast<jule::Int>(_1d21b6e08_i)]=(*this)._method_build_brace_lit_part(_1d21b6e08_part);
			}
			_iter_next_4706721472:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1d21b6e08_i; _1d21b6e08_part = *_range_begin; goto _iter_begin_4706721472; }
			_iter_end_4706721472:;
		}
	}
	return _82217_lit;
}



inline jule::Any _1d21b6e08_ExprBuilder::_method_build_brace_range(jule::Slice<_1d1da4277_Token>& _83941_tokens) {
	jule::Slice<_1d1da4277_Token> _84014_expr_tokens;
	jule::Int _84027_range_n;
	std::tie(_84014_expr_tokens,_84027_range_n) = _1d21b6e08_get_range_expr_tokens(_83941_tokens);
	{
		if (!((_84014_expr_tokens.len() == 0LL))) { goto _case_end_4706730880; }
		_case_begin_4706730880:;
		{
			return jule::Any((*this)._method_build_brace_lit(_83941_tokens));
		}
		goto _match_end_4706730736;
		_case_end_4706730880:;
		if (!((_84027_range_n > 0LL))) { goto _case_end_4706731008; }
		_case_begin_4706731008:;
		{
			(*this)._method_push_err(_83941_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::Any(nullptr);
		}
		goto _match_end_4706730736;
		_case_end_4706731008:;
		_match_end_4706730736:;
	}
	{
		auto _match_expr{ _84014_expr_tokens[0LL]._field_id };
		if (!((35LLU) == _match_expr)) { goto _case_end_4706740608; }
		_case_begin_4706740608:;
		{
			return (*this)._method_build_unsafe(_83941_tokens);
		}
		goto _match_end_4706736336;
		_case_end_4706740608:;
		if (!((33LLU) == _match_expr)) { goto _case_end_4706739856; }
		_case_begin_4706739856:;
		{
			return jule::Any((*this)._method_build_anon_fn(_83941_tokens));
		}
		goto _match_end_4706736336;
		_case_end_4706739856:;
		if (!((2LLU) == _match_expr || (31LLU) == _match_expr)) { goto _case_end_4706739968; }
		_case_begin_4706739968:;
		{
			return jule::Any((*this)._method_build_typed_struct_literal(_83941_tokens));
		}
		goto _match_end_4706736336;
		_case_end_4706739968:;
		_case_begin_4706733104:;
		{
			(*this)._method_push_err(_84014_expr_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::Any(nullptr);
		}
		goto _match_end_4706736336;
		_case_end_4706733104:;
		_match_end_4706736336:;
	}
}



inline jule::Slice<jule::Slice<_1d1da4277_Token>> _1d21b6e08_ExprBuilder::_method_get_enumerable_parts(jule::Slice<_1d1da4277_Token> _86943_tokens) {
	_86943_tokens=_86943_tokens.slice(1LL,static_cast<jule::Int>(_86943_tokens.len() - 1LL));
	jule::Slice<jule::Slice<_1d1da4277_Token>> _87118_parts;
	jule::Slice<_1d0557e9e_Log> _87125_errors;
	std::tie(_87118_parts,_87125_errors) = _1d21abb45_parts(_86943_tokens,8LLU,true);
	(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_87125_errors);
	return _87118_parts;
}



inline jule::Ref<_1d1e5192e_SliceExpr> _1d21b6e08_ExprBuilder::_method_build_slice(jule::Slice<_1d1da4277_Token> _87634_tokens) {
	jule::Ref<_1d1e5192e_SliceExpr> _87717_slc = jule::new_struct<_1d1e5192e_SliceExpr>(new( std::nothrow ) _1d1e5192e_SliceExpr(_87634_tokens[0LL],jule::Slice<jule::Any>()));
	jule::Slice<jule::Slice<_1d1da4277_Token>> _88117_parts = (*this)._method_get_enumerable_parts(_87634_tokens);
	if (_88117_parts.len() == 0LL) {
		return _87717_slc;
	}
	_87717_slc->_field_elems=jule::Slice<jule::Any>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_88117_parts.len())));
	{
		auto _range_expr = _88117_parts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1d21b6e08_i = 0;
			jule::Slice<_1d1da4277_Token> _1d21b6e08_p = *_range_begin;
			_iter_begin_4706757088:;
			{
				_87717_slc->_field_elems[static_cast<jule::Int>(_1d21b6e08_i)]=(*this)._method_build_from_tokens(_1d21b6e08_p)->_field_kind;
			}
			_iter_next_4706757088:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1d21b6e08_i; _1d21b6e08_p = *_range_begin; goto _iter_begin_4706757088; }
			_iter_end_4706757088:;
		}
	}
	return _87717_slc;
}



inline jule::Ref<_1d1e5192e_IndexingExpr> _1d21b6e08_ExprBuilder::_method_build_indexing(jule::Slice<_1d1da4277_Token> _89437_expr_tokens,jule::Slice<_1d1da4277_Token> _89513_tokens,_1d1da4277_Token _89534_error_token) {
	_89513_tokens=_89513_tokens.slice(1LL,static_cast<jule::Int>(_89513_tokens.len() - 1LL));
	return jule::new_struct<_1d1e5192e_IndexingExpr>(new( std::nothrow ) _1d1e5192e_IndexingExpr(_89534_error_token,(*this)._method_build_from_tokens(_89437_expr_tokens)->_field_kind,(*this)._method_build_from_tokens(_89513_tokens)->_field_kind));
}



inline jule::Ref<_1d1e5192e_SlicingExpr> _1d21b6e08_ExprBuilder::_method_build_slicing(jule::Slice<_1d1da4277_Token>& _90437_expr_tokens,jule::Slice<_1d1da4277_Token>& _90464_slicing_tokens,jule::Int& _90510_colon,_1d1da4277_Token& _90527_error_token) {
	jule::Ref<_1d1e5192e_SlicingExpr> _90617_slc = jule::new_struct<_1d1e5192e_SlicingExpr>(new( std::nothrow ) _1d1e5192e_SlicingExpr(_90527_error_token,(*this)._method_build_from_tokens(_90437_expr_tokens)->_field_kind,jule::Any(),jule::Any()));
	jule::Slice<_1d1da4277_Token> _91117_start_expr_tokens = _90464_slicing_tokens.slice(0LL,static_cast<jule::Int>(_90510_colon));
	if (_91117_start_expr_tokens.len() > 0LL) {
		_90617_slc->_field_start=(*this)._method_build_from_tokens(_91117_start_expr_tokens)->_field_kind;
	}
	jule::Slice<_1d1da4277_Token> _91617_to_expr_tokens = _90464_slicing_tokens.slice(static_cast<jule::Int>(_90510_colon + 1LL));
	if (_91617_to_expr_tokens.len() > 0LL) {
		_90617_slc->_field_to=(*this)._method_build_from_tokens(_91617_to_expr_tokens)->_field_kind;
	}
	return _90617_slc;
}



inline jule::Any _1d21b6e08_ExprBuilder::_method_build_bracket_range(jule::Slice<_1d1da4277_Token> _92442_tokens) {
	_1d1da4277_Token _92517_error_token = _92442_tokens[0LL];
	jule::Slice<_1d1da4277_Token> _92618_expr_tokens;
	jule::Int _92631_range_n;
	std::tie(_92618_expr_tokens,_92631_range_n) = _1d21b6e08_get_range_expr_tokens(_92442_tokens);
	{
		if (!((_92618_expr_tokens.len() == 0LL))) { goto _case_end_4706791504; }
		_case_begin_4706791504:;
		{
			return jule::Any((*this)._method_build_slice(_92442_tokens));
		}
		goto _match_end_4706791360;
		_case_end_4706791504:;
		if (!(((_92618_expr_tokens.len() == 0LL) || (_92631_range_n > 0LL)))) { goto _case_end_4706791616; }
		_case_begin_4706791616:;
		{
			(*this)._method_push_err(_92517_error_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::Any(nullptr);
		}
		goto _match_end_4706791360;
		_case_end_4706791616:;
		_match_end_4706791360:;
	}
	_92442_tokens=_92442_tokens.slice(static_cast<jule::Int>(_92618_expr_tokens.len()));
	jule::Int _94517_i = 0LL;
	jule::Slice<_1d1da4277_Token> _94618_slicing_tokens;
	jule::Int _94634_colon;
	std::tie(_94618_slicing_tokens,_94634_colon) = _1b87d0ddc_split_map_range(_92442_tokens,_94517_i);
	if (_94634_colon != -1LL) {
		return jule::Any((*this)._method_build_slicing(_92618_expr_tokens,_94618_slicing_tokens,_94634_colon,_92517_error_token));
	}
	return jule::Any((*this)._method_build_indexing(_92618_expr_tokens,_92442_tokens,_92517_error_token));
}



inline jule::Any _1d21b6e08_ExprBuilder::_method_build_ternary(jule::Slice<_1d1da4277_Token> _95336_tokens) {
	jule::Ref<_1d1e5192e_TernaryExpr> _95417_ter = jule::new_struct<_1d1e5192e_TernaryExpr>(new( std::nothrow ) _1d1e5192e_TernaryExpr());
	_95417_ter->_field_token=_95336_tokens[0LL];
	_95336_tokens=_95336_tokens.slice(1LL);
	jule::Slice<_1d1da4277_Token> _95817_expr_tokens = _1d21b6e08_get_block_expr(_95336_tokens);
	if (_95817_expr_tokens.len() == 0LL) {
		(*this)._method_push_err(_95417_ter->_field_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
	}
	_95417_ter->_field_condition=(*this)._method_build_kind(_95817_expr_tokens);
	jule::I64 _96517_i = _95817_expr_tokens.len();
	jule::Slice<_1d1da4277_Token> _96617_true_expr = _1d21abb45_range(_96517_i,jule::Str("{", 1),jule::Str("}", 1),_95336_tokens);
	if (_96617_true_expr == nullptr) {
		(*this)._method_push_err(_95417_ter->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::Any(_95417_ter);
	} else if (_96617_true_expr.len() == 0LL) {
		(*this)._method_push_err(_95336_tokens[static_cast<jule::Int>(_95817_expr_tokens.len())],jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
	}
	if (_96517_i >= _95336_tokens.len()) {
		(*this)._method_push_err(_95417_ter->_field_token,jule::Str("else block missed for ternary operator", 38),jule::Slice<jule::Any>({}));
		return jule::Any(_95417_ter);
	}
	_1d1da4277_Token _98013_else_token = _95336_tokens[static_cast<jule::Int>(_96517_i)];
	if (_98013_else_token._field_id != 17LLU) {
		(*this)._method_push_err(_98013_else_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("else keyword expected for else block of ternary operator", 56),jule::Slice<jule::Any>({}));
		return jule::Any(_95417_ter);
	}
	(_96517_i)++;
	jule::I64 _98813_j = _96517_i;
	jule::Slice<_1d1da4277_Token> _98917_false_expr = _1d21abb45_range(_96517_i,jule::Str("{", 1),jule::Str("}", 1),_95336_tokens);
	if (_98917_false_expr == nullptr) {
		(*this)._method_push_err(_98013_else_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::Any(_95417_ter);
	} else if (_98917_false_expr.len() == 0LL) {
		(*this)._method_push_err(_95336_tokens[static_cast<jule::Int>(_98813_j)],jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
	}
	if (_96517_i < _95336_tokens.len()) {
		(*this)._method_push_err(_95336_tokens[static_cast<jule::Int>(_96517_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	_95417_ter->_field_true_expr=(*this)._method_build_kind(_96617_true_expr);
	_95417_ter->_field_false_expr=(*this)._method_build_kind(_98917_false_expr);
	return jule::Any(_95417_ter);
}



inline jule::Any _1d21b6e08_ExprBuilder::_method_build_data(jule::Slice<_1d1da4277_Token>& _100834_tokens) {
	{
		auto _match_expr{ _100834_tokens.len() };
		if (!((0LL) == _match_expr)) { goto _case_end_4706845296; }
		_case_begin_4706845296:;
		{
			return jule::Any(nullptr);
		}
		goto _match_end_4706844464;
		_case_end_4706845296:;
		if (!((1LL) == _match_expr)) { goto _case_end_4706845408; }
		_case_begin_4706845408:;
		{
			return (*this)._method_build_single(_100834_tokens[0LL]);
		}
		goto _match_end_4706844464;
		_case_end_4706845408:;
		if (!((3LL) == _match_expr)) { goto _case_end_4706845520; }
		_case_begin_4706845520:;
		{
			if (_100834_tokens[0LL]._field_id == 31LLU) {
				return jule::Any((*this)._method_build_cpp_linked_ident(_100834_tokens));
			}
		}
		goto _match_end_4706844464;
		_case_end_4706845520:;
		_match_end_4706844464:;
	}
	_1d1da4277_Token _102217_token = _100834_tokens[0LL];
	{
		auto _match_expr{ _102217_token._field_id };
		if (!((7LLU) == _match_expr)) { goto _case_end_4706853296; }
		_case_begin_4706853296:;
		{
			if ((_100834_tokens.len() > 1LL) && (_102217_token._field_kind == jule::Str("*", 1))) {
				_102217_token=_100834_tokens[1LL];
				if ((_102217_token._field_id == 1LLU) || (_102217_token._field_id == 35LLU)) {
					return jule::Any((*this)._method_build_type(_100834_tokens));
				}
			}
			return jule::Any((*this)._method_build_unary(_100834_tokens));
		}
		goto _match_end_4706850960;
		_case_end_4706853296:;
		if (!((3LLU) == _match_expr)) { goto _case_end_4706853408; }
		_case_begin_4706853408:;
		{
			if ((_102217_token._field_kind != jule::Str("[", 1)) || (_100834_tokens.len() < 3LL)) {
				goto _match_end_4706850960;
			}
			_1d1da4277_Token _104017_next = _100834_tokens[1LL];
			if ((_104017_next._field_id != 3LLU) || (_104017_next._field_kind != jule::Str("]", 1))) {
				goto _match_end_4706850960;
			}
			return jule::Any((*this)._method_build_type(_100834_tokens));
		}
		goto _match_end_4706850960;
		_case_end_4706853408:;
		_match_end_4706850960:;
	}
	_102217_token=_100834_tokens[static_cast<jule::Int>(_100834_tokens.len() - 1LL)];
	{
		auto _match_expr{ _102217_token._field_id };
		if (!((2LLU) == _match_expr)) { goto _case_end_4706866896; }
		_case_begin_4706866896:;
		{
			return (*this)._method_build_sub_ident(_100834_tokens);
		}
		goto _match_end_4706865744;
		_case_end_4706866896:;
		if (!((1LLU) == _match_expr)) { goto _case_end_4706867024; }
		_case_begin_4706867024:;
		{
			return jule::Any((*this)._method_build_type(_100834_tokens));
		}
		goto _match_end_4706865744;
		_case_end_4706867024:;
		if (!((7LLU) == _match_expr)) { goto _case_end_4706867152; }
		_case_begin_4706867152:;
		{
			return (*this)._method_build_op_right(_100834_tokens);
		}
		goto _match_end_4706865744;
		_case_end_4706867152:;
		if (!((3LLU) == _match_expr)) { goto _case_end_4706867280; }
		_case_begin_4706867280:;
		{
			{
				auto _match_expr{ _102217_token._field_kind };
				if (!((jule::Str(")", 1)) == _match_expr)) { goto _case_end_4706871904; }
				_case_begin_4706871904:;
				{
					return (*this)._method_build_parentheses_range(_100834_tokens);
				}
				goto _match_end_4706869792;
				_case_end_4706871904:;
				if (!((jule::Str("}", 1)) == _match_expr)) { goto _case_end_4706872080; }
				_case_begin_4706872080:;
				{
					return (*this)._method_build_brace_range(_100834_tokens);
				}
				goto _match_end_4706869792;
				_case_end_4706872080:;
				if (!((jule::Str("]", 1)) == _match_expr)) { goto _case_end_4706872192; }
				_case_begin_4706872192:;
				{
					return (*this)._method_build_bracket_range(_100834_tokens);
				}
				goto _match_end_4706869792;
				_case_end_4706872192:;
				_match_end_4706869792:;
			}
		}
		goto _match_end_4706865744;
		_case_end_4706867280:;
		_match_end_4706865744:;
	}
	(*this)._method_push_err(_102217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	return jule::Any(nullptr);
}



inline jule::Ref<_1d1e5192e_BinopExpr> _1d21b6e08_ExprBuilder::_method_build_binop(jule::Slice<_1d1da4277_Token>& _107735_tokens,jule::Int _107752_i) {
	jule::Slice<_1d1da4277_Token> _107817_left_tokens = _107735_tokens.slice(0LL,static_cast<jule::Int>(_107752_i));
	jule::Slice<_1d1da4277_Token> _107917_right_tokens = _107735_tokens.slice(static_cast<jule::Int>(_107752_i + 1LL));
	if (_107817_left_tokens.len() == 0LL) {
		(*this)._method_push_err(_107735_tokens[static_cast<jule::Int>(_107752_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("left operand expected for binary operator", 41),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1d1e5192e_BinopExpr>();
	}
	if (_107917_right_tokens.len() == 0LL) {
		(*this)._method_push_err(_107735_tokens[static_cast<jule::Int>(_107752_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("right operand expected for binary operator", 42),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1d1e5192e_BinopExpr>();
	}
	return jule::new_struct<_1d1e5192e_BinopExpr>(new( std::nothrow ) _1d1e5192e_BinopExpr((*this)._method_build(_107817_left_tokens),(*this)._method_build(_107917_right_tokens),_107735_tokens[static_cast<jule::Int>(_107752_i)]));
}



inline jule::Any _1d21b6e08_ExprBuilder::_method_build(jule::Slice<_1d1da4277_Token>& _110029_tokens) {
	_1d1da4277_Token _110117_token = _110029_tokens[0LL];
	{
		auto _match_expr{ _110117_token._field_id };
		if (!((16LLU) == _match_expr)) { goto _case_end_4706897888; }
		_case_begin_4706897888:;
		{
			return (*this)._method_build_ternary(_110029_tokens);
		}
		goto _match_end_4706897216;
		_case_end_4706897888:;
		_match_end_4706897216:;
	}
	jule::Int _110713_i = _1d21b6e08_find_lowest_prec_op(_110029_tokens);
	if (_110713_i == -1LL) {
		return (*this)._method_build_data(_110029_tokens);
	}
	return jule::Any((*this)._method_build_binop(_110029_tokens,_110713_i));
}



inline jule::Any _1d21b6e08_ExprBuilder::_method_build_kind(jule::Slice<_1d1da4277_Token>& _111434_tokens) {
	jule::Slice<jule::Slice<_1d1da4277_Token>> _111518_parts;
	jule::Slice<_1d0557e9e_Log> _111525_errors;
	std::tie(_111518_parts,_111525_errors) = _1d21abb45_parts(_111434_tokens,8LLU,true);
	if (_111525_errors != nullptr) {
		(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_111525_errors);
		return jule::Any(nullptr);
	} else if (_111518_parts.len() > 1LL) {
		return jule::Any((*this)._method_build_tuple(_111518_parts));
	}
	return (*this)._method_build(_111434_tokens);
}



inline jule::Ref<_1d1e5192e_Expr> _1d21b6e08_ExprBuilder::_method_build_from_tokens(jule::Slice<_1d1da4277_Token> _112540_tokens) {
	_112540_tokens=_1d21b6e08_eliminate_comments(_112540_tokens);
	if (_112540_tokens.len() == 0LL) {
		return jule::new_ref<_1d1e5192e_Expr>();
	}
	return jule::new_struct<_1d1e5192e_Expr>(new( std::nothrow ) _1d1e5192e_Expr(_112540_tokens[0LL],(*this)._method_build_kind(_112540_tokens)));
}







std::ostream &operator<<(std::ostream &_Stream, const _1d21b6e08_ExprBuilder &_Src) {
	_Stream << "ExprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}



inline void _1d21abb45_Parser::_method_stop(void) {
	jule::drop((*this)._field_ast);
}



inline jule::Bool _1d21abb45_Parser::_method_stopped(void) {
	return (!(jule::real((*this)._field_ast)));
}



inline void _1d21abb45_Parser::_method_push_err(_1d1da4277_Token _24027_token,jule::Str _24041_fmt,jule::Slice<jule::Any> _24054_args) {
	(*this)._field_errors=jule::append((*this)._field_errors,jule::Slice<_1d0557e9e_Log>({_1d21abb45_compiler_err(_24027_token,_24041_fmt,_24054_args)}));
}



inline void _1d21abb45_Parser::_method_push_suggestion(jule::Str _24534_fmt,jule::Slice<jule::Any> _24547_args) {
	{
		_1d21abb45_push_suggestion((&((*this)._field_errors[static_cast<jule::Int>((*this)._field_errors.len() - 1LL)])),_24534_fmt,_24547_args);
	}
}



inline jule::Ref<_1d1e5192e_Expr> _1d21abb45_Parser::_method_build_expr(jule::Slice<_1d1da4277_Token>& _24935_tokens) {
	jule::Ref<_1d21b6e08_ExprBuilder> _25017_ep = jule::new_struct<_1d21b6e08_ExprBuilder>(new( std::nothrow ) _1d21b6e08_ExprBuilder(this->self));
	jule::Ref<_1d1e5192e_Expr> _25117_expr = _25017_ep->_method_build_from_tokens(_24935_tokens);
	return _25117_expr;
}



inline jule::Ref<_1d1e5192e_Directive> _1d21abb45_Parser::_method_get_directive(jule::Ref<_1d1e5192e_Comment> _25532_c) {
	if (_25532_c->_field_text.len() <= jule::Str("jule:", 5).len()) {
		return jule::new_ref<_1d1e5192e_Directive>();
	}
	jule::Ref<_1d1e5192e_Directive> _26017_d = jule::new_struct<_1d1e5192e_Directive>(new( std::nothrow ) _1d1e5192e_Directive(_25532_c->_field_token,jule::Str(),jule::Slice<jule::Str>()));
	jule::Str _26413_pragma = _25532_c->_field_token._field_kind.slice(static_cast<jule::Int>(jule::Str("jule:", 5).len()));
	jule::Slice<jule::Str> _26517_parts = _26413_pragma.split(jule::Str(" ", 1),-1LL);
	_26017_d->_field_tag=_26517_parts[0LL];
	_26017_d->_field_args=_26517_parts.slice(1LL);
	jule::Bool _27117_ok = false;
	{
		auto _range_expr = _1d05c05aa_DIRECTIVES;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _1d21abb45_kind = *_range_begin;
			_iter_begin_4706947568:;
			{
				if (_26017_d->_field_tag == _1d21abb45_kind) {
					_27117_ok=true;
					goto _iter_end_4706947568;
				}
			}
			_iter_next_4706947568:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d21abb45_kind = *_range_begin; goto _iter_begin_4706947568; }
			_iter_end_4706947568:;
		}
	}
	if ((!(_27117_ok))) {
		return jule::new_ref<_1d1e5192e_Directive>();
	}
	return _26017_d;
}



inline void _1d21abb45_Parser::_method_push_directive(jule::Ref<_1d1e5192e_Comment>& _28538_c) {
	jule::Ref<_1d1e5192e_Directive> _28617_d = (*this)._method_get_directive(_28538_c);
	if ((!(jule::real(_28617_d)))) {
		return;
	}
	{
		auto _range_expr = (*this)._field_directives;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d1e5192e_Directive> _1d21abb45_pd = *_range_begin;
			_iter_begin_4706954560:;
			{
				if (_28617_d->_field_tag == _1d21abb45_pd->_field_tag) {
					return;
				}
			}
			_iter_next_4706954560:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d21abb45_pd = *_range_begin; goto _iter_begin_4706954560; }
			_iter_end_4706954560:;
		}
	}
	(*this)._field_directives=jule::append((*this)._field_directives,jule::Slice<jule::Ref<_1d1e5192e_Directive>>({_28617_d}));
}



inline void _1d21abb45_Parser::_method_process_comment(jule::Ref<_1d1e5192e_Comment>& _30139_c) {
	if (_30139_c->_method_is_directive()) {
		(*this)._method_push_directive(_30139_c);
		return;
	}
	if ((!(jule::real((*this)._field_comment_group)))) {
		(*this)._field_comment_group=jule::new_struct<_1d1e5192e_CommentGroup>(new( std::nothrow ) _1d1e5192e_CommentGroup());
	}
	(*this)._field_comment_group->_field_comments=jule::append((*this)._field_comment_group->_field_comments,jule::Slice<jule::Ref<_1d1e5192e_Comment>>({_30139_c}));
}



inline jule::Ref<_1d1e5192e_ScopeTree> _1d21abb45_Parser::_method_build_scope(jule::Slice<_1d1da4277_Token>& _31236_tokens) {
	jule::Ref<_1d1e5192e_ScopeTree> _31317_s = _1d21a4698_new_scope();
	_1d21a4698_ScopeParser _31417_sp = _1d21a4698_ScopeParser(this->self,jule::Ref<_1d1e5192e_ScopeTree>(),jule::Slice<jule::Ref<_1d21a4698_Stmt>>(),jule::Int());
	_31417_sp._method_build(_31236_tokens,_31317_s);
	return _31317_s;
}



inline std::tuple<jule::Ref<_1d1e5192e_TypeDecl>,jule::Bool> _1d21abb45_Parser::_method___build_type(jule::Slice<_1d1da4277_Token>& _32144_tokens,jule::Int* _32213_i,jule::Bool _32222_err) {
	_1b87d0ddc_TypeBuilder _32317_tb = _1b87d0ddc_TypeBuilder(this->self,_32144_tokens,_32213_i,_32222_err);
	jule::Ref<_1d1e5192e_TypeDecl> _32918_decl;
	jule::Bool _32924_ok;
	std::tie(_32918_decl,_32924_ok) = _32317_tb._method_build();
	return std::make_tuple(_32918_decl,_32924_ok);
}



inline std::tuple<jule::Ref<_1d1e5192e_TypeDecl>,jule::Bool> _1d21abb45_Parser::_method_build_type(jule::Slice<_1d1da4277_Token>& _33442_tokens,jule::Int* _33513_i,jule::Bool _33522_err) {
	_1d1da4277_Token _33613_token = _33442_tokens[static_cast<jule::Int>((*(_33513_i)))];
	jule::Ref<_1d1e5192e_TypeDecl> _33718_t;
	jule::Bool _33721_ok;
	std::tie(_33718_t,_33721_ok) = this->self->_method___build_type(_33442_tokens,_33513_i,_33522_err);
	if (_33522_err && (!(_33721_ok))) {
		this->self->_method_push_err(_33613_token,jule::Str("invalid data-type", 17),jule::Slice<jule::Any>({}));
	}
	return std::make_tuple(_33718_t,_33721_ok);
}



inline jule::Ref<_1d1e5192e_TypeAliasDecl> _1d21abb45_Parser::_method_build_type_alias_decl(jule::Slice<_1d1da4277_Token>& _34446_tokens) {
	jule::Int _34517_i = 1LL;
	if (_34517_i >= _34446_tokens.len()) {
		this->self->_method_push_err(_34446_tokens[static_cast<jule::Int>(_34517_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1d1e5192e_TypeAliasDecl>();
	}
	jule::Ref<_1d1e5192e_TypeAliasDecl> _35017_tad = jule::new_struct<_1d1e5192e_TypeAliasDecl>(new( std::nothrow ) _1d1e5192e_TypeAliasDecl(jule::Ref<_1d1e5192e_ScopeTree>(),jule::Bool(),jule::Bool(),_34446_tokens[1LL],_34446_tokens[1LL]._field_kind,jule::Ref<_1d1e5192e_TypeDecl>(),jule::Ref<_1d1e5192e_CommentGroup>()));
	_1d1da4277_Token _35417_token = _34446_tokens[static_cast<jule::Int>(_34517_i)];
	if (_35417_token._field_id != 2LLU) {
		this->self->_method_push_err(_35417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
	}
	(_34517_i)++;
	if (_34517_i >= _34446_tokens.len()) {
		this->self->_method_push_err(_34446_tokens[static_cast<jule::Int>(_34517_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return _35017_tad;
	}
	_35417_token=_34446_tokens[static_cast<jule::Int>(_34517_i)];
	if (_35417_token._field_id != 11LLU) {
		this->self->_method_push_err(_34446_tokens[static_cast<jule::Int>(_34517_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("expected colon \":\"", 18),jule::Slice<jule::Any>({}));
		return _35017_tad;
	}
	(_34517_i)++;
	if (_34517_i >= _34446_tokens.len()) {
		this->self->_method_push_err(_34446_tokens[static_cast<jule::Int>(_34517_i - 1LL)],jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
		return _35017_tad;
	}
	jule::Ref<_1d1e5192e_TypeDecl> _37518_t;
	jule::Bool _37521_ok;
	std::tie(_37518_t,_37521_ok) = this->self->_method_build_type(_34446_tokens,(&(_34517_i)),true);
	_35017_tad->_field_kind=_37518_t;
	if (_37521_ok && (_34517_i < _34446_tokens.len())) {
		this->self->_method_push_err(_34446_tokens[static_cast<jule::Int>(_34517_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	return _35017_tad;
}



inline void _1d21abb45_Parser::_method_build_var_type_and_expr(jule::Ref<_1d1e5192e_VarDecl>& _38348_v,jule::Slice<_1d1da4277_Token>& _38366_tokens) {
	jule::Int _38417_i = 0LL;
	_1d1da4277_Token _38517_tok = _38366_tokens[static_cast<jule::Int>(_38417_i)];
	if (_38517_tok._field_id == 11LLU) {
		(_38417_i)++;
		if ((_38417_i >= _38366_tokens.len()) || ((_38366_tokens[static_cast<jule::Int>(_38417_i)]._field_id == 7LLU) && (_38366_tokens[static_cast<jule::Int>(_38417_i)]._field_kind == jule::Str("=", 1)))) {
			this->self->_method_push_err(_38517_tok,jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
			return;
		}
		jule::Ref<_1d1e5192e_TypeDecl> _39322_t;
		jule::Bool _39325_ok;
		std::tie(_39322_t,_39325_ok) = this->self->_method_build_type(_38366_tokens,(&(_38417_i)),true);
		if (_39325_ok) {
			_38348_v->_field_kind=_39322_t;
			if (_38417_i >= _38366_tokens.len()) {
				return;
			}
			_38517_tok=_38366_tokens[static_cast<jule::Int>(_38417_i)];
		}
	}
	if (_38517_tok._field_id == 7LLU) {
		if (_38517_tok._field_kind != jule::Str("=", 1)) {
			this->self->_method_push_err(_38517_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return;
		}
		jule::Slice<_1d1da4277_Token> _40821_expr_tokens = _38366_tokens.slice(static_cast<jule::Int>(_38417_i + 1LL));
		if (_40821_expr_tokens.len() == 0LL) {
			this->self->_method_push_err(_38517_tok,jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
			return;
		}
		_38348_v->_field_expr=this->self->_method_build_expr(_40821_expr_tokens);
	} else {
		this->self->_method_push_err(_38517_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
}



inline void _1d21abb45_Parser::_method_build_var_common(jule::Ref<_1d1e5192e_VarDecl>& _41941_v,jule::Slice<_1d1da4277_Token> _41958_tokens) {
	_41941_v->_field_token=_41958_tokens[0LL];
	if (_41941_v->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_41941_v->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
		return;
	}
	_41941_v->_field_ident=_41941_v->_field_token._field_kind;
	jule::drop(_41941_v->_field_kind);
	if (_41958_tokens.len() > 1LL) {
		_41958_tokens=_41958_tokens.slice(1LL);
		this->self->_method_build_var_type_and_expr(_41941_v,_41958_tokens);
	}
}



inline void _1d21abb45_Parser::_method_build_var_begin(jule::Ref<_1d1e5192e_VarDecl>& _43439_v,jule::Ref<jule::Int> _43456_i,jule::Slice<_1d1da4277_Token>& _43466_tokens) {
	_1d1da4277_Token _43513_tok = _43466_tokens[static_cast<jule::Int>(_43456_i)];
	{
		auto _match_expr{ _43513_tok._field_id };
		if (!((38LLU) == _match_expr)) { goto _case_end_4707096928; }
		_case_begin_4707096928:;
		{
			_43439_v->_field_statically=true;
			goto _case_begin_4707097040;
		}
		goto _match_end_4707093808;
		_case_end_4707096928:;
		if (!((34LLU) == _match_expr)) { goto _case_end_4707097040; }
		_case_begin_4707097040:;
		{
			(_43456_i)++;
			if (_43456_i >= _43466_tokens.len()) {
				(*this)._method_push_err(_43513_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			if (_43466_tokens[static_cast<jule::Int>(_43456_i)]._field_id == 36LLU) {
				_43439_v->_field_mutable=true;
				(_43456_i)++;
			}
		}
		goto _match_end_4707093808;
		_case_end_4707097040:;
		if (!((9LLU) == _match_expr)) { goto _case_end_4707097152; }
		_case_begin_4707097152:;
		{
			(_43456_i)++;
			_43439_v->_field_constant=true;
		}
		goto _match_end_4707093808;
		_case_end_4707097152:;
		_case_begin_4707094496:;
		{
			(*this)._method_push_err(_43513_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4707093808;
		_case_end_4707094496:;
		_match_end_4707093808:;
	}
	if (_43456_i >= _43466_tokens.len()) {
		(*this)._method_push_err(_43513_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
}



inline jule::Ref<_1d1e5192e_VarDecl> _1d21abb45_Parser::_method_build_var(jule::Slice<_1d1da4277_Token> _46833_tokens) {
	jule::Ref<jule::Int> _46917_i = jule::new_ref<jule::Int>(0LL);
	jule::Ref<_1d1e5192e_VarDecl> _47017_v = jule::new_struct<_1d1e5192e_VarDecl>(new( std::nothrow ) _1d1e5192e_VarDecl(jule::Ref<_1d1e5192e_ScopeTree>(),_46833_tokens[static_cast<jule::Int>(_46917_i)],jule::Str(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Slice<jule::Ref<_1d1e5192e_Directive>>(),jule::Ref<_1d1e5192e_CommentGroup>(),jule::Ref<_1d1e5192e_TypeDecl>(),jule::Ref<_1d1e5192e_Expr>()));
	this->self->_method_build_var_begin(_47017_v,_46917_i,_46833_tokens);
	if (_46917_i >= _46833_tokens.len()) {
		return jule::new_ref<_1d1e5192e_VarDecl>();
	}
	_46833_tokens=_46833_tokens.slice(static_cast<jule::Int>(_46917_i));
	if ((_46833_tokens[0LL]._field_id == 7LLU) && (_46833_tokens[0LL]._field_kind == jule::Str("&", 1))) {
		_47017_v->_field_reference=true;
		if (_46833_tokens.len() == 1LL) {
			return jule::new_ref<_1d1e5192e_VarDecl>();
		}
		_46833_tokens=_46833_tokens.slice(1LL);
	}
	this->self->_method_build_var_common(_47017_v,_46833_tokens);
	return _47017_v;
}



inline jule::Ref<_1d1e5192e_GenericDecl> _1d21abb45_Parser::_method_build_generic(jule::Slice<_1d1da4277_Token>& _49037_tokens) {
	if (_49037_tokens.len() > 1LL) {
		(*this)._method_push_err(_49037_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1d1e5192e_GenericDecl> _49417_g = jule::new_struct<_1d1e5192e_GenericDecl>(new( std::nothrow ) _1d1e5192e_GenericDecl(_49037_tokens[0LL],jule::Str()));
	if (_49417_g->_field_token._field_id != 2LLU) {
		(*this)._method_push_err(_49417_g->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
	}
	_49417_g->_field_ident=_49417_g->_field_token._field_kind;
	return _49417_g;
}



inline jule::Slice<jule::Ref<_1d1e5192e_GenericDecl>> _1d21abb45_Parser::_method_build_generics(jule::Slice<_1d1da4277_Token>& _50538_tokens,_1d1da4277_Token& _50556_error_token) {
	if (_50538_tokens.len() == 0LL) {
		(*this)._method_push_err(_50556_error_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	jule::Slice<jule::Slice<_1d1da4277_Token>> _51118_parts;
	jule::Slice<_1d0557e9e_Log> _51125_errors;
	std::tie(_51118_parts,_51125_errors) = _1d21abb45_parts(_50538_tokens,8LLU,true);
	(*this)._field_errors=jule::append((*this)._field_errors,_51125_errors);
	jule::Slice<jule::Ref<_1d1e5192e_GenericDecl>> _51417_generics = jule::Slice<jule::Ref<_1d1e5192e_GenericDecl>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_51118_parts.len())));
	{
		auto _range_expr = _51118_parts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1d21abb45_i = 0;
			jule::Slice<_1d1da4277_Token> _1d21abb45_part = *_range_begin;
			_iter_begin_4707141376:;
			{
				if (_51118_parts.len() > 0LL) {
					_51417_generics[static_cast<jule::Int>(_1d21abb45_i)]=(*this)._method_build_generic(_1d21abb45_part);
				}
			}
			_iter_next_4707141376:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1d21abb45_i; _1d21abb45_part = *_range_begin; goto _iter_begin_4707141376; }
			_iter_end_4707141376:;
		}
	}
	return _51417_generics;
}



inline jule::Ref<_1d1e5192e_ParamDecl> _1d21abb45_Parser::_method_build_self_param(jule::Slice<_1d1da4277_Token> _52439_tokens) {
	if (_52439_tokens.len() == 0LL) {
		return jule::new_ref<_1d1e5192e_ParamDecl>();
	}
	jule::Ref<_1d1e5192e_ParamDecl> _52917_param = jule::new_struct<_1d1e5192e_ParamDecl>(new( std::nothrow ) _1d1e5192e_ParamDecl());
	jule::Int _53217_i = 0LL;
	if (_52439_tokens[static_cast<jule::Int>(_53217_i)]._field_id == 36LLU) {
		_52917_param->_field_mutable=true;
		(_53217_i)++;
		if (_53217_i >= _52439_tokens.len()) {
			(*this)._method_push_err(_52439_tokens[static_cast<jule::Int>(_53217_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1d1e5192e_ParamDecl>();
		}
	}
	if (_52439_tokens[static_cast<jule::Int>(_53217_i)]._field_kind == jule::Str("&", 1)) {
		_52917_param->_field_ident=jule::Str("&", 1);
		(_53217_i)++;
		if (_53217_i >= _52439_tokens.len()) {
			(*this)._method_push_err(_52439_tokens[static_cast<jule::Int>(_53217_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1d1e5192e_ParamDecl>();
		}
	}
	if (_52439_tokens[static_cast<jule::Int>(_53217_i)]._field_id == 28LLU) {
		_52917_param->_field_ident+=jule::Str("self", 4);
		_52917_param->_field_token=_52439_tokens[static_cast<jule::Int>(_53217_i)];
		(_53217_i)++;
		if (_53217_i < _52439_tokens.len()) {
			(*this)._method_push_err(_52439_tokens[static_cast<jule::Int>(_53217_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		}
	}
	return _52917_param;
}



inline void _1d21abb45_Parser::_method_param_type_begin(jule::Ref<_1d1e5192e_ParamDecl>& _56340_param,jule::Int& _56364_i,jule::Slice<_1d1da4277_Token>& _56373_tokens) {
	_iter_begin_4707176352:;
	if (!(_56364_i < _56373_tokens.len())) { goto _iter_end_4707176352; }
	{
		_1d1da4277_Token _56517_token = _56373_tokens[static_cast<jule::Int>(_56364_i)];
		if (_56517_token._field_id != 7LLU) {
			return;
		} else if (_56517_token._field_kind != jule::Str("...", 3)) {
			return;
		}
		if (_56340_param->_field_variadic) {
			(*this)._method_push_err(_56517_token,jule::Str("define is already variadic", 26),jule::Slice<jule::Any>({}));
			goto _iter_next_4707176352;
		}
		_56340_param->_field_variadic=true;
	}
	_iter_next_4707176352:;
	(_56364_i)++;
	goto _iter_begin_4707176352;
	_iter_end_4707176352:;
}



inline void _1d21abb45_Parser::_method_build_param_type(jule::Ref<_1d1e5192e_ParamDecl>& _58041_param,jule::Slice<_1d1da4277_Token>& _58065_tokens) {
	jule::Int _58117_i = 0LL;
	this->self->_method_param_type_begin(_58041_param,_58117_i,_58065_tokens);
	if (_58117_i >= _58065_tokens.len()) {
		return;
	}
	std::tie(_58041_param->_field_kind,std::ignore) = this->self->_method_build_type(_58065_tokens,(&(_58117_i)),true);
	if (_58117_i < _58065_tokens.len()) {
		this->self->_method_push_err(_58065_tokens[static_cast<jule::Int>(_58117_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
}



inline void _1d21abb45_Parser::_method_param_body_id(jule::Ref<_1d1e5192e_ParamDecl> _59332_param,_1d1da4277_Token _59351_token) {
	if (_1d1da4277_is_ignore_ident(_59351_token._field_kind)) {
		_59332_param->_field_ident=jule::Str("<anonymous>", 11);
		return;
	}
	_59332_param->_field_ident=_59351_token._field_kind;
}



inline void _1d21abb45_Parser::_method_build_param_body(jule::Ref<_1d1e5192e_ParamDecl>& _60141_param,jule::Ref<jule::Int> _60164_i,jule::Slice<_1d1da4277_Token> _60177_tokens) {
	this->self->_method_param_body_id(_60141_param,_60177_tokens[static_cast<jule::Int>(_60164_i)]);
	_1d1da4277_Token _60317_tok = _60177_tokens[static_cast<jule::Int>(_60164_i)];
	if ((_60164_i + 1LL) >= _60177_tokens.len()) {
		return;
	} else if (((_60177_tokens.len() - _60164_i) - 1LL) < 2LL) {
		this->self->_method_push_err(_60317_tok,jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
		return;
	}
	_60317_tok=_60177_tokens[static_cast<jule::Int>(_60164_i + 1LL)];
	if (_60317_tok._field_id != 11LLU) {
		this->self->_method_build_param_type(_60141_param,_60177_tokens);
		return;
	}
	_60177_tokens=_60177_tokens.slice(static_cast<jule::Int>(_60164_i + 2LL));
	this->self->_method_build_param_type(_60141_param,_60177_tokens);
}



inline jule::Ref<_1d1e5192e_ParamDecl> _1d21abb45_Parser::_method_build_param(jule::Slice<_1d1da4277_Token> _62235_tokens) {
	jule::Ref<_1d1e5192e_ParamDecl> _62317_param = jule::new_struct<_1d1e5192e_ParamDecl>(new( std::nothrow ) _1d1e5192e_ParamDecl(_62235_tokens[0LL],jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1d1e5192e_TypeDecl>(),jule::Str()));
	if (_62317_param->_field_token._field_id == 36LLU) {
		_62317_param->_field_mutable=true;
		if (_62235_tokens.len() == 1LL) {
			this->self->_method_push_err(_62235_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1d1e5192e_ParamDecl>();
		}
		_62235_tokens=_62235_tokens.slice(1LL);
		_62317_param->_field_token=_62235_tokens[0LL];
	}
	if (_62235_tokens.len() >= 3LL) {
		if ((_62317_param->_field_token._field_id == 7LLU) && (_62317_param->_field_token._field_kind == jule::Str("&", 1))) {
			if (_62235_tokens.len() == 1LL) {
				this->self->_method_push_err(_62235_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return jule::new_ref<_1d1e5192e_ParamDecl>();
			}
			if ((_62235_tokens[1LL]._field_id == 2LLU) && (_62235_tokens[2LL]._field_id == 11LLU)) {
				_62317_param->_field_reference=true;
				_62235_tokens=_62235_tokens.slice(1LL);
				_62317_param->_field_token=_62235_tokens[0LL];
			}
		}
	}
	if (_62317_param->_field_token._field_id != 2LLU) {
		_62317_param->_field_ident=jule::Str("<anonymous>", 11);
		this->self->_method_build_param_type(_62317_param,_62235_tokens);
	} else {
		jule::Ref<jule::Int> _65921_i = jule::new_ref<jule::Int>(0LL);
		this->self->_method_build_param_body(_62317_param,_65921_i,_62235_tokens);
	}
	return _62317_param;
}



inline void _1d21abb45_Parser::_method_check_params(jule::Slice<jule::Ref<_1d1e5192e_ParamDecl>>& _66636_params) {
	{
		auto _range_expr = _66636_params;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d1e5192e_ParamDecl> _1d21abb45_param = *_range_begin;
			_iter_begin_4707246528:;
			{
				if (_1d21abb45_param->_method_is_self() || jule::real(_1d21abb45_param->_field_kind)) {
					goto _iter_next_4707246528;
				}
				if (_1d21abb45_param->_field_token._field_id == 0LLU) {
					(*this)._method_push_err(_1d21abb45_param->_field_token,jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
				} else {
					_1d21abb45_param->_field_kind=jule::new_struct<_1d1e5192e_TypeDecl>(new( std::nothrow ) _1d1e5192e_TypeDecl(_1d21abb45_param->_field_token,jule::Any(jule::new_struct<_1d1e5192e_IdentTypeDecl>(new( std::nothrow ) _1d1e5192e_IdentTypeDecl(_1d21abb45_param->_field_token,_1d21abb45_param->_field_token._field_kind,jule::Bool(),jule::Slice<jule::Ref<_1d1e5192e_TypeDecl>>())))));
					_1d21abb45_param->_field_ident=jule::Str("<anonymous>", 11);
					_1d21abb45_param->_field_token=_1d1da4277_Token();
				}
			}
			_iter_next_4707246528:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d21abb45_param = *_range_begin; goto _iter_begin_4707246528; }
			_iter_end_4707246528:;
		}
	}
}



inline jule::Slice<jule::Ref<_1d1e5192e_ParamDecl>> _1d21abb45_Parser::_method_build_params(jule::Slice<_1d1da4277_Token>& _68737_tokens,jule::Bool _68754_method) {
	jule::Slice<jule::Slice<_1d1da4277_Token>> _68818_parts;
	jule::Slice<_1d0557e9e_Log> _68825_errs;
	std::tie(_68818_parts,_68825_errs) = _1d21abb45_parts(_68737_tokens,8LLU,true);
	this->self->_field_errors=jule::append(this->self->_field_errors,_68825_errs);
	if (_68818_parts.len() == 0LL) {
		return nullptr;
	}
	jule::Slice<jule::Ref<_1d1e5192e_ParamDecl>> _69417_params = nullptr;
	if (_68754_method && (_68818_parts.len() > 0LL)) {
		jule::Ref<_1d1e5192e_ParamDecl> _69621_param = this->self->_method_build_self_param(_68818_parts[0LL]);
		if (jule::real(_69621_param) && _69621_param->_method_is_self()) {
			_69417_params=jule::append(_69417_params,jule::Slice<jule::Ref<_1d1e5192e_ParamDecl>>({_69621_param}));
			_68818_parts=_68818_parts.slice(1LL);
		}
	}
	{
		auto _range_expr = _68818_parts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Slice<_1d1da4277_Token> _1d21abb45_part = *_range_begin;
			_iter_begin_4707264816:;
			{
				jule::Ref<_1d1e5192e_ParamDecl> _70421_param = this->self->_method_build_param(_1d21abb45_part);
				if (jule::real(_70421_param)) {
					_69417_params=jule::append(_69417_params,jule::Slice<jule::Ref<_1d1e5192e_ParamDecl>>({_70421_param}));
				}
			}
			_iter_next_4707264816:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d21abb45_part = *_range_begin; goto _iter_begin_4707264816; }
			_iter_end_4707264816:;
		}
	}
	this->self->_method_check_params(_69417_params);
	return _69417_params;
}



inline std::tuple<jule::Ref<_1d1e5192e_RetTypeDecl>,jule::Bool> _1d21abb45_Parser::_method_build_multi_ret_type(jule::Slice<_1d1da4277_Token>& _71445_tokens,jule::Int& _71467_i) {
	jule::Ref<_1d1e5192e_RetTypeDecl> _71477_t = jule::Ref<_1d1e5192e_RetTypeDecl>();
	jule::Bool _71494_ok = jule::Bool();
	_71477_t=jule::new_struct<_1d1e5192e_RetTypeDecl>(new( std::nothrow ) _1d1e5192e_RetTypeDecl());
	(_71467_i)++;
	if (_71467_i >= _71445_tokens.len()) {
		(_71467_i)--;
		std::tie(_71477_t->_field_kind,_71494_ok) = this->self->_method_build_type(_71445_tokens,(&(_71467_i)),false);
		return std::make_tuple(_71477_t,_71494_ok);
	}
	(_71467_i)--;
	jule::Slice<_1d1da4277_Token> _72417_range_tokens = _1d21abb45_range(_71467_i,jule::Str("(", 1),jule::Str(")", 1),_71445_tokens);
	jule::Slice<jule::Slice<_1d1da4277_Token>> _72618_parts;
	jule::Slice<_1d0557e9e_Log> _72625_errs;
	std::tie(_72618_parts,_72625_errs) = _1d21abb45_parts(_72417_range_tokens,8LLU,true);
	this->self->_field_errors=jule::append(this->self->_field_errors,_72625_errs);
	if (_72618_parts.len() == 0LL) {
		return std::make_tuple(_71477_t,_71494_ok);
	}
	jule::Slice<jule::Ref<_1d1e5192e_TypeDecl>> _73217_types = jule::Slice<jule::Ref<_1d1e5192e_TypeDecl>>::alloc(0LL,static_cast<jule::Int>(static_cast<jule::I64>(_72618_parts.len())));
	_71477_t->_field_idents=jule::Slice<_1d1da4277_Token>::alloc(0LL,static_cast<jule::Int>(static_cast<jule::I64>(_72618_parts.len())));
	{
		auto _range_expr = _72618_parts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Slice<_1d1da4277_Token> _1d21abb45_part = *_range_begin;
			_iter_begin_4707290896:;
			{
				_1d1da4277_Token _73521_token = _1d21abb45_part[0LL];
				jule::Int _73621_offset = 0LL;
				if (_1d21abb45_part.len() > 1LL) {
					_73521_token=_1d21abb45_part[1LL];
					if (_73521_token._field_id == 11LLU) {
						_73621_offset=2LL;
						if (_1d21abb45_part.len() < 3LL) {
							this->self->_method_push_err(_73521_token,jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
							goto _iter_next_4707290896;
						}
					}
				}
				_73521_token=_1d21abb45_part[0LL];
				if (_73621_offset == 2LL) {
					if (_73521_token._field_id != 2LLU) {
					}
					_71477_t->_field_idents=jule::append(_71477_t->_field_idents,jule::Slice<_1d1da4277_Token>({_73521_token}));
				} else {
					_73521_token._field_kind=jule::Str("_", 1);
					_71477_t->_field_idents=jule::append(_71477_t->_field_idents,jule::Slice<_1d1da4277_Token>({_73521_token}));
				}
				jule::Ref<_1d1e5192e_TypeDecl> _76122_t;
				std::tie(_76122_t,std::ignore) = this->self->_method_build_type(_1d21abb45_part,(&(_73621_offset)),true);
				if (_73621_offset < _1d21abb45_part.len()) {
					this->self->_method_push_err(_1d21abb45_part[static_cast<jule::Int>(_73621_offset)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				}
				_73217_types=jule::append(_73217_types,jule::Slice<jule::Ref<_1d1e5192e_TypeDecl>>({_76122_t}));
			}
			_iter_next_4707290896:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d21abb45_part = *_range_begin; goto _iter_begin_4707290896; }
			_iter_end_4707290896:;
		}
	}
	if (_73217_types.len() > 1LL) {
		_71477_t->_field_kind=jule::new_struct<_1d1e5192e_TypeDecl>(new( std::nothrow ) _1d1e5192e_TypeDecl(_71445_tokens[0LL],jule::Any(jule::new_struct<_1d1e5192e_TupleTypeDecl>(new( std::nothrow ) _1d1e5192e_TupleTypeDecl(_73217_types)))));
	} else {
		_71477_t->_field_kind=_73217_types[0LL];
	}
	_71494_ok=true;
	return std::make_tuple(_71477_t,_71494_ok);
}



inline std::tuple<jule::Ref<_1d1e5192e_RetTypeDecl>,jule::Bool> _1d21abb45_Parser::_method_build_ret_type(jule::Slice<_1d1da4277_Token>& _78439_tokens,jule::Int& _78461_i) {
	jule::Ref<_1d1e5192e_RetTypeDecl> _78471_t = jule::Ref<_1d1e5192e_RetTypeDecl>();
	jule::Bool _78488_ok = jule::Bool();
	_78471_t=jule::new_struct<_1d1e5192e_RetTypeDecl>(new( std::nothrow ) _1d1e5192e_RetTypeDecl());
	if (_78461_i >= _78439_tokens.len()) {
		return std::make_tuple(_78471_t,_78488_ok);
	}
	_1d1da4277_Token _79017_token = _78439_tokens[static_cast<jule::Int>(_78461_i)];
	{
		auto _match_expr{ _79017_token._field_id };
		if (!((3LLU) == _match_expr)) { goto _case_end_4707327136; }
		_case_begin_4707327136:;
		{
			if (_79017_token._field_kind == jule::Str("{", 1)) {
				return std::make_tuple(_78471_t,_78488_ok);
			}
		}
		goto _match_end_4707325424;
		_case_end_4707327136:;
		if (!((7LLU) == _match_expr)) { goto _case_end_4707327248; }
		_case_begin_4707327248:;
		{
			if (_79017_token._field_kind == jule::Str("=", 1)) {
				return std::make_tuple(_78471_t,_78488_ok);
			}
		}
		goto _match_end_4707325424;
		_case_end_4707327248:;
		if (!((11LLU) == _match_expr)) { goto _case_end_4707327360; }
		_case_begin_4707327360:;
		{
			if ((_78461_i + 1LL) >= _78439_tokens.len()) {
				this->self->_method_push_err(_79017_token,jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
				return std::make_tuple(_78471_t,_78488_ok);
			}
			(_78461_i)++;
			_79017_token=_78439_tokens[static_cast<jule::Int>(_78461_i)];
			if (_79017_token._field_id == 3LLU) {
				{
					auto _match_expr{ _79017_token._field_kind };
					if (!((jule::Str("(", 1)) == _match_expr)) { goto _case_end_4707336240; }
					_case_begin_4707336240:;
					{
						jule::Ref<_1d1e5192e_RetTypeDecl> _81330_decl;
						jule::Bool _81336_ok;
						std::tie(_81330_decl,_81336_ok) = this->self->_method_build_multi_ret_type(_78439_tokens,_78461_i);
						_78471_t = _81330_decl;
						_78488_ok = _81336_ok;
						return std::make_tuple(_78471_t,_78488_ok);
					}
					goto _match_end_4707334928;
					_case_end_4707336240:;
					if (!((jule::Str("{", 1)) == _match_expr)) { goto _case_end_4707336352; }
					_case_begin_4707336352:;
					{
						this->self->_method_push_err(_79017_token,jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
						return std::make_tuple(_78471_t,_78488_ok);
					}
					goto _match_end_4707334928;
					_case_end_4707336352:;
					_match_end_4707334928:;
				}
			}
			std::tie(_78471_t->_field_kind,_78488_ok) = this->self->_method_build_type(_78439_tokens,(&(_78461_i)),true);
			return std::make_tuple(_78471_t,_78488_ok);
		}
		goto _match_end_4707325424;
		_case_end_4707327360:;
		_match_end_4707325424:;
	}
	(_78461_i)++;
	this->self->_method_push_err(_79017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	return std::make_tuple(_78471_t,_78488_ok);
}



inline jule::Ref<_1d1e5192e_FnDecl> _1d21abb45_Parser::_method_build_fn_prototype(jule::Slice<_1d1da4277_Token>& _83243_tokens,jule::Int& _83265_i,jule::Bool _83273_method) {
	jule::Ref<_1d1e5192e_FnDecl> _83317_f = jule::new_struct<_1d1e5192e_FnDecl>(new( std::nothrow ) _1d1e5192e_FnDecl(_83243_tokens[static_cast<jule::Int>(_83265_i)],jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Str(),jule::Slice<jule::Ref<_1d1e5192e_Directive>>(),jule::Ref<_1d1e5192e_CommentGroup>(),jule::Ref<_1d1e5192e_ScopeTree>(),jule::Slice<jule::Ref<_1d1e5192e_GenericDecl>>(),jule::Ref<_1d1e5192e_RetTypeDecl>(),jule::Slice<jule::Ref<_1d1e5192e_ParamDecl>>()));
	if (_83317_f->_field_token._field_id == 38LLU) {
		_83317_f->_field_statically=true;
		(_83265_i)++;
		if (_83265_i >= _83243_tokens.len()) {
			this->self->_method_push_err(_83317_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1d1e5192e_FnDecl>();
		}
		_83317_f->_field_token=_83243_tokens[static_cast<jule::Int>(_83265_i)];
	}
	if (_83317_f->_field_token._field_id == 35LLU) {
		_83317_f->_field_unsafety=true;
		(_83265_i)++;
		if (_83265_i >= _83243_tokens.len()) {
			this->self->_method_push_err(_83317_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1d1e5192e_FnDecl>();
		}
		_83317_f->_field_token=_83243_tokens[static_cast<jule::Int>(_83265_i)];
	}
	(_83265_i)++;
	if (_83265_i >= _83243_tokens.len()) {
		this->self->_method_push_err(_83317_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1d1e5192e_FnDecl>();
	}
	_1d1da4277_Token _86613_tok = _83243_tokens[static_cast<jule::Int>(_83265_i)];
	if (_86613_tok._field_id == 2LLU) {
		(_83265_i)++;
		if (_83265_i >= _83243_tokens.len()) {
			this->self->_method_push_err(_83317_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1d1e5192e_FnDecl>();
		}
		_83317_f->_field_ident=_86613_tok._field_kind;
	} else {
		_83317_f->_field_ident=jule::Str("<anonymous>", 11);
	}
	_1d1da4277_Token _87813_error_token = _83243_tokens[static_cast<jule::Int>(_83265_i)];
	jule::Slice<_1d1da4277_Token> _87917_generics_tokens = _1d21abb45_range(_83265_i,jule::Str("[", 1),jule::Str("]", 1),_83243_tokens);
	if (_87917_generics_tokens != nullptr) {
		_83317_f->_field_generics=this->self->_method_build_generics(_87917_generics_tokens,_87813_error_token);
	}
	if (_83243_tokens[static_cast<jule::Int>(_83265_i)]._field_kind != jule::Str("(", 1)) {
		this->self->_method_push_err(_83243_tokens[static_cast<jule::Int>(_83265_i)],jule::Str("missing function parentheses", 28),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1d1e5192e_FnDecl>();
	}
	jule::Slice<_1d1da4277_Token> _88917_params_toks = _1d21abb45_range(_83265_i,jule::Str("(", 1),jule::Str(")", 1),_83243_tokens);
	if (_88917_params_toks.len() > 0LL) {
		_83317_f->_field_params=this->self->_method_build_params(_88917_params_toks,_83273_method);
	}
	std::tie(_83317_f->_field_result,std::ignore) = this->self->_method_build_ret_type(_83243_tokens,_83265_i);
	return _83317_f;
}



inline jule::Ref<_1d1e5192e_FnDecl> _1d21abb45_Parser::_method_build_fn(jule::Slice<_1d1da4277_Token>& _90033_tokens,jule::Bool _90050_method,jule::Bool _90064_prototype) {
	jule::Int _90117_i = 0LL;
	jule::Ref<_1d1e5192e_FnDecl> _90217_f = this->self->_method_build_fn_prototype(_90033_tokens,_90117_i,_90050_method);
	if (_90064_prototype) {
		if (_90117_i < _90033_tokens.len()) {
			this->self->_method_push_err(_90033_tokens[static_cast<jule::Int>(_90117_i + 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		}
		return _90217_f;
	} else if ((!(jule::real(_90217_f)))) {
		return _90217_f;
	}
	if (_90117_i >= _90033_tokens.len()) {
		this->self->_method_stop();
		this->self->_method_push_err(_90217_f->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1d1e5192e_FnDecl>();
	}
	jule::Slice<_1d1da4277_Token> _91817_block_tokens = _1d21abb45_range(_90117_i,jule::Str("{", 1),jule::Str("}", 1),_90033_tokens);
	if (_91817_block_tokens != nullptr) {
		_90217_f->_field_scope=this->self->_method_build_scope(_91817_block_tokens);
		_90217_f->_field_scope->_field_unsafety=_90217_f->_field_unsafety;
		if (_90117_i < _90033_tokens.len()) {
			this->self->_method_push_err(_90033_tokens[static_cast<jule::Int>(_90117_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		}
	} else {
		this->self->_method_stop();
		this->self->_method_push_err(_90217_f->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1d1e5192e_FnDecl>();
	}
	return _90217_f;
}



inline jule::Slice<_1d1da4277_Token> _1d21abb45_Parser::_method_get_use_decl_selectors(jule::Slice<_1d1da4277_Token> _93445_tokens) {
	jule::Int _93517_i = 0LL;
	_93445_tokens=_1d21abb45_range(_93517_i,jule::Str("{", 1),jule::Str("}", 1),_93445_tokens);
	jule::Slice<jule::Slice<_1d1da4277_Token>> _93718_parts;
	jule::Slice<_1d0557e9e_Log> _93725_errs;
	std::tie(_93718_parts,_93725_errs) = _1d21abb45_parts(_93445_tokens,8LLU,true);
	if (_93725_errs.len() > 0LL) {
		(*this)._field_errors=jule::append((*this)._field_errors,_93725_errs);
		return nullptr;
	}
	jule::Slice<_1d1da4277_Token> _94317_selectors = jule::Slice<_1d1da4277_Token>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_93718_parts.len())));
	{
		auto _range_expr = _93718_parts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1d21abb45_j = 0;
			jule::Slice<_1d1da4277_Token> _1d21abb45_part = *_range_begin;
			_iter_begin_4707414784:;
			{
				if (_1d21abb45_part.len() > 1LL) {
					(*this)._method_push_err(_1d21abb45_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				}
				_1d1da4277_Token _94821_tok = _1d21abb45_part[0LL];
				if ((_94821_tok._field_id != 2LLU) && (_94821_tok._field_id != 28LLU)) {
					(*this)._method_push_err(_94821_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
					(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
					goto _iter_next_4707414784;
				}
				_94317_selectors[static_cast<jule::Int>(_1d21abb45_j)]=_94821_tok;
			}
			_iter_next_4707414784:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1d21abb45_j; _1d21abb45_part = *_range_begin; goto _iter_begin_4707414784; }
			_iter_end_4707414784:;
		}
	}
	return _94317_selectors;
}



inline void _1d21abb45_Parser::_method_build_cpp_use_decl(jule::Ref<_1d1e5192e_UseDecl>& _95942_decl,jule::Slice<_1d1da4277_Token>& _95959_tokens) {
	if (_95959_tokens.len() > 1LL) {
		(*this)._method_push_err(_95959_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	_1d1da4277_Token _96313_token = _95959_tokens[0LL];
	if ((_96313_token._field_id != 6LLU) || ((_96313_token._field_kind[0LL] != '`') && (_96313_token._field_kind[0LL] != '\"'))) {
		(*this)._method_push_err(_96313_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		return;
	}
	_95942_decl->_field_cpp_linked=true;
	_95942_decl->_field_link_path=_96313_token._field_kind.slice(1LL,static_cast<jule::Int>(_96313_token._field_kind.len() - 1LL));
	if ((!(_1d05571bd_is_std_header_path(_95942_decl->_field_link_path)))) {
		_95942_decl->_field_link_path=_1d0680a33_join(jule::Slice<jule::Str>({_96313_token._field_file->_method_dir(),_95942_decl->_field_link_path}));
	}
}



inline void _1d21abb45_Parser::_method_build_std_use_decl(jule::Ref<_1d1e5192e_UseDecl>& _97542_decl,jule::Slice<_1d1da4277_Token> _97562_tokens) {
	_97542_decl->_field_std=true;
	_1d1da4277_Token _97817_token = _97562_tokens[0LL];
	if (_97562_tokens.len() < 3LL) {
		(*this)._method_push_err(_97817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return;
	}
	_97562_tokens=_97562_tokens.slice(2LL);
	_97817_token=_97562_tokens[static_cast<jule::Int>(_97562_tokens.len() - 1LL)];
	{
		auto _match_expr{ _97817_token._field_id };
		if (!((23LLU) == _match_expr)) { goto _case_end_4707458864; }
		_case_begin_4707458864:;
		{
			(*this)._method_push_err(_97817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4707456544;
		_case_end_4707458864:;
		if (!((3LLU) == _match_expr)) { goto _case_end_4707458992; }
		_case_begin_4707458992:;
		{
			if (_97817_token._field_kind != jule::Str("}", 1)) {
				(*this)._method_push_err(_97817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			jule::Slice<_1d1da4277_Token> _99621_selectors = nullptr;
			std::tie(_97562_tokens,_99621_selectors) = _1d21abb45_range_last(_97562_tokens);
			_97542_decl->_field_selected=(*this)._method_get_use_decl_selectors(_99621_selectors);
			if (_97562_tokens.len() == 0LL) {
				(*this)._method_push_err(_97817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_97817_token=_97562_tokens[static_cast<jule::Int>(_97562_tokens.len() - 1LL)];
			if (_97817_token._field_id != 23LLU) {
				(*this)._method_push_err(_97817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_97562_tokens=_97562_tokens.slice(0LL,static_cast<jule::Int>(_97562_tokens.len() - 1LL));
			if (_97562_tokens.len() == 0LL) {
				(*this)._method_push_err(_97817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
		}
		goto _match_end_4707456544;
		_case_end_4707458992:;
		if (!((7LLU) == _match_expr)) { goto _case_end_4707459120; }
		_case_begin_4707459120:;
		{
			if (_97817_token._field_kind != jule::Str("*", 1)) {
				(*this)._method_push_err(_97817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_97562_tokens=_97562_tokens.slice(0LL,static_cast<jule::Int>(_97562_tokens.len() - 1LL));
			if (_97562_tokens.len() == 0LL) {
				(*this)._method_push_err(_97817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_97817_token=_97562_tokens[static_cast<jule::Int>(_97562_tokens.len() - 1LL)];
			if (_97817_token._field_id != 23LLU) {
				(*this)._method_push_err(_97817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_97562_tokens=_97562_tokens.slice(0LL,static_cast<jule::Int>(_97562_tokens.len() - 1LL));
			if (_97562_tokens.len() == 0LL) {
				(*this)._method_push_err(_97817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_97542_decl->_field_full=true;
		}
		goto _match_end_4707456544;
		_case_end_4707459120:;
		_match_end_4707456544:;
	}
	_97542_decl->_field_link_path=jule::Str("std::", 5) + _1d21abb45_tokstoa(_97562_tokens);
}



inline void _1d21abb45_Parser::_method_build_ident_use_decl(jule::Ref<_1d1e5192e_UseDecl>& _103944_decl,jule::Slice<_1d1da4277_Token> _103964_tokens) {
	_103944_decl->_field_std=false;
	_1d1da4277_Token _104217_token = _103964_tokens[static_cast<jule::Int>(_103964_tokens.len() - 1LL)];
	{
		auto _match_expr{ _104217_token._field_id };
		if (!((23LLU) == _match_expr)) { goto _case_end_4707495536; }
		_case_begin_4707495536:;
		{
			(*this)._method_push_err(_104217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4707492048;
		_case_end_4707495536:;
		if (!((3LLU) == _match_expr)) { goto _case_end_4707495648; }
		_case_begin_4707495648:;
		{
			if (_104217_token._field_kind != jule::Str("}", 1)) {
				(*this)._method_push_err(_104217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			jule::Slice<_1d1da4277_Token> _105421_selectors = nullptr;
			std::tie(_103964_tokens,_105421_selectors) = _1d21abb45_range_last(_103964_tokens);
			_103944_decl->_field_selected=(*this)._method_get_use_decl_selectors(_105421_selectors);
			if (_103964_tokens.len() == 0LL) {
				(*this)._method_push_err(_104217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_104217_token=_103964_tokens[static_cast<jule::Int>(_103964_tokens.len() - 1LL)];
			if (_104217_token._field_id != 23LLU) {
				(*this)._method_push_err(_104217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_103964_tokens=_103964_tokens.slice(0LL,static_cast<jule::Int>(_103964_tokens.len() - 1LL));
			if (_103964_tokens.len() == 0LL) {
				(*this)._method_push_err(_104217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
		}
		goto _match_end_4707492048;
		_case_end_4707495648:;
		if (!((7LLU) == _match_expr)) { goto _case_end_4707495760; }
		_case_begin_4707495760:;
		{
			if (_104217_token._field_kind != jule::Str("*", 1)) {
				(*this)._method_push_err(_104217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_103964_tokens=_103964_tokens.slice(0LL,static_cast<jule::Int>(_103964_tokens.len() - 1LL));
			if (_103964_tokens.len() == 0LL) {
				(*this)._method_push_err(_104217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_104217_token=_103964_tokens[static_cast<jule::Int>(_103964_tokens.len() - 1LL)];
			if (_104217_token._field_id != 23LLU) {
				(*this)._method_push_err(_104217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_103964_tokens=_103964_tokens.slice(0LL,static_cast<jule::Int>(_103964_tokens.len() - 1LL));
			if (_103964_tokens.len() == 0LL) {
				(*this)._method_push_err(_104217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_103944_decl->_field_full=true;
		}
		goto _match_end_4707492048;
		_case_end_4707495760:;
		_match_end_4707492048:;
	}
	_103944_decl->_field_link_path=_1d21abb45_tokstoa(_103964_tokens);
}



inline void _1d21abb45_Parser::_method_parse_use_decl(jule::Ref<_1d1e5192e_UseDecl>& _110438_decl,jule::Slice<_1d1da4277_Token> _110458_tokens) {
	if (_110438_decl->_field_cpp_linked) {
		(*this)._method_build_cpp_use_decl(_110438_decl,_110458_tokens);
		return;
	}
	_1d1da4277_Token _111017_token = _110458_tokens[0LL];
	if (_111017_token._field_id != 2LLU) {
		(*this)._method_push_err(_111017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
		return;
	}
	if ((_110458_tokens.len() > 2LL) && (_110458_tokens[1LL]._field_id == 12LLU)) {
		_110438_decl->_field_alias=_111017_token._field_kind;
		if (_110458_tokens[2LL]._field_id != 2LLU) {
			(*this)._method_push_err(_111017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
			return;
		}
		_110458_tokens=_110458_tokens.slice(2LL);
		_111017_token=_110458_tokens[0LL];
	}
	
	{
		if (!((_111017_token._field_kind == jule::Str("std", 3)))) { goto _case_end_4707545152; }
		_case_begin_4707545152:;
		{
			(*this)._method_build_std_use_decl(_110438_decl,_110458_tokens);
		}
		goto _match_end_4707544192;
		_case_end_4707545152:;
		_case_begin_4707544320:;
		{
			(*this)._method_build_ident_use_decl(_110438_decl,_110458_tokens);
		}
		goto _match_end_4707544192;
		_case_end_4707544320:;
		_match_end_4707544192:;
	}
}



inline jule::Ref<_1d1e5192e_UseDecl> _1d21abb45_Parser::_method_build_use_decl(jule::Slice<_1d1da4277_Token> _113937_tokens,jule::Bool _113954_cpp_linked) {
	jule::Ref<_1d1e5192e_UseDecl> _114017_decl = jule::new_struct<_1d1e5192e_UseDecl>(new( std::nothrow ) _1d1e5192e_UseDecl(_113937_tokens[0LL],jule::Str(),jule::Str(),jule::Bool(),jule::Slice<_1d1da4277_Token>(),_113954_cpp_linked,jule::Bool()));
	if (_113937_tokens.len() < 2LL) {
		(*this)._method_push_err(_114017_decl->_field_token,jule::Str("missing path of use statement", 29),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1d1e5192e_UseDecl>();
	}
	_113937_tokens=_113937_tokens.slice(1LL);
	(*this)._method_parse_use_decl(_114017_decl,_113937_tokens);
	return _114017_decl;
}



inline jule::Ref<_1d1e5192e_Expr> _1d21abb45_Parser::_method_build_enum_item_expr(jule::Ref<jule::Int> _115344_i,jule::Slice<_1d1da4277_Token>& _115358_tokens) {
	jule::Int _115417_brace_n = 0LL;
	jule::Int _115513_expr_start = _115344_i;
	_iter_begin_4707562976:;
	if (!(_115344_i < _115358_tokens.len())) { goto _iter_end_4707562976; }
	{
		_1d1da4277_Token _115717_t = _115358_tokens[static_cast<jule::Int>(_115344_i)];
		if (_115717_t._field_id == 3LLU) {
			{
				auto _match_expr{ _115717_t._field_kind };
				if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4707568400; }
				_case_begin_4707568400:;
				{
					(_115417_brace_n)++;
					goto _iter_next_4707562976;
				}
				goto _match_end_4707566816;
				_case_end_4707568400:;
				_case_begin_4707567600:;
				{
					(_115417_brace_n)--;
				}
				goto _match_end_4707566816;
				_case_end_4707567600:;
				_match_end_4707566816:;
			}
		}
		if (_115417_brace_n > 0LL) {
			goto _iter_next_4707562976;
		}
		if ((_115717_t._field_id == 8LLU) || ((_115344_i + 1LL) >= _115358_tokens.len())) {
			jule::Slice<_1d1da4277_Token> _117625_expr_tokens = nullptr;
			if (_115717_t._field_id == 8LLU) {
				_117625_expr_tokens=_115358_tokens.slice(static_cast<jule::Int>(_115513_expr_start),static_cast<jule::Int>(_115344_i));
			} else {
				_117625_expr_tokens=_115358_tokens.slice(static_cast<jule::Int>(_115513_expr_start));
			}
			return this->self->_method_build_expr(_117625_expr_tokens);
		}
	}
	_iter_next_4707562976:;
	(_115344_i)++;
	goto _iter_begin_4707562976;
	_iter_end_4707562976:;
	return jule::new_ref<_1d1e5192e_Expr>();
}



inline jule::Slice<jule::Ref<_1d1e5192e_EnumItemDecl>> _1d21abb45_Parser::_method_build_enum_items(jule::Slice<_1d1da4277_Token>& _118841_tokens) {
	jule::Slice<jule::Ref<_1d1e5192e_EnumItemDecl>> _118917_items = jule::Slice<jule::Ref<_1d1e5192e_EnumItemDecl>>::alloc(0LL);
	jule::Ref<jule::Int> _119017_i = jule::new_ref<jule::Int>(0LL);
	_iter_begin_4707581024:;
	if (!(_119017_i < _118841_tokens.len())) { goto _iter_end_4707581024; }
	{
		_1d1da4277_Token _119221_t = _118841_tokens[static_cast<jule::Int>(_119017_i)];
		if (_119221_t._field_id == 18LLU) {
			goto _iter_next_4707581024;
		}
		jule::Ref<_1d1e5192e_EnumItemDecl> _119721_item = jule::new_struct<_1d1e5192e_EnumItemDecl>(new( std::nothrow ) _1d1e5192e_EnumItemDecl());
		_119721_item->_field_token=_119221_t;
		if (_119721_item->_field_token._field_id != 2LLU) {
			this->self->_method_push_err(_119721_item->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
		}
		_119721_item->_field_ident=_119721_item->_field_token._field_kind;
		if (((_119017_i + 1LL) >= _118841_tokens.len()) || (_118841_tokens[static_cast<jule::Int>(_119017_i + 1LL)]._field_id == 8LLU)) {
			if ((_119017_i + 1LL) < _118841_tokens.len()) {
				(_119017_i)++;
			}
			_118917_items=jule::append(_118917_items,jule::Slice<jule::Ref<_1d1e5192e_EnumItemDecl>>({_119721_item}));
			goto _iter_next_4707581024;
		}
		(_119017_i)++;
		_119221_t=_118841_tokens[static_cast<jule::Int>(_119017_i)];
		(_119017_i)++;
		if ((_119221_t._field_id != 7LLU) || (_119221_t._field_kind != jule::Str("=", 1))) {
			this->self->_method_push_err(_119221_t,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			this->self->_method_push_suggestion(jule::Str("expected equals \"=\" for assignment", 34),jule::Slice<jule::Any>({}));
			goto _iter_next_4707581024;
		}
		if ((_119017_i >= _118841_tokens.len()) || (_118841_tokens[static_cast<jule::Int>(_119017_i)]._field_id == 8LLU)) {
			this->self->_method_push_err(_119221_t,jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
			goto _iter_next_4707581024;
		}
		_119721_item->_field_expr=this->self->_method_build_enum_item_expr(_119017_i,_118841_tokens);
		_118917_items=jule::append(_118917_items,jule::Slice<jule::Ref<_1d1e5192e_EnumItemDecl>>({_119721_item}));
	}
	_iter_next_4707581024:;
	(_119017_i)++;
	goto _iter_begin_4707581024;
	_iter_end_4707581024:;
	return _118917_items;
}



inline jule::Ref<_1d1e5192e_EnumDecl> _1d21abb45_Parser::_method_build_enum_decl(jule::Slice<_1d1da4277_Token>& _122940_tokens) {
	if ((_122940_tokens.len() < 2LL) || (_122940_tokens.len() < 3LL)) {
		this->self->_method_push_err(_122940_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1d1e5192e_EnumDecl>();
	}
	jule::Ref<_1d1e5192e_EnumDecl> _123417_e = jule::new_struct<_1d1e5192e_EnumDecl>(new( std::nothrow ) _1d1e5192e_EnumDecl(_122940_tokens[1LL],jule::Bool(),jule::Str(),jule::Ref<_1d1e5192e_TypeDecl>(),jule::Slice<jule::Ref<_1d1e5192e_EnumItemDecl>>(),jule::Ref<_1d1e5192e_CommentGroup>()));
	if (_123417_e->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_123417_e->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
	}
	_123417_e->_field_ident=_123417_e->_field_token._field_kind;
	jule::Int _124217_i = 2LL;
	if (_122940_tokens[static_cast<jule::Int>(_124217_i)]._field_id == 11LLU) {
		(_124217_i)++;
		if (_124217_i >= _122940_tokens.len()) {
			this->self->_method_push_err(_122940_tokens[static_cast<jule::Int>(_124217_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return _123417_e;
		}
		std::tie(_123417_e->_field_kind,std::ignore) = this->self->_method_build_type(_122940_tokens,(&(_124217_i)),true);
		if (_124217_i >= _122940_tokens.len()) {
			this->self->_method_stop();
			this->self->_method_push_err(_123417_e->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>({}));
			this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
			return _123417_e;
		}
	} else {
		jule::drop(_123417_e->_field_kind);
	}
	jule::Slice<_1d1da4277_Token> _125917_item_tokens = _1d21abb45_range(_124217_i,jule::Str("{", 1),jule::Str("}", 1),_122940_tokens);
	if (_125917_item_tokens == nullptr) {
		this->self->_method_stop();
		this->self->_method_push_err(_123417_e->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return _123417_e;
	} else if (_124217_i < _122940_tokens.len()) {
		this->self->_method_push_err(_122940_tokens[static_cast<jule::Int>(_124217_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	_123417_e->_field_items=this->self->_method_build_enum_items(_125917_item_tokens);
	return _123417_e;
}



inline jule::Ref<_1d1e5192e_FieldDecl> _1d21abb45_Parser::_method_build_field(jule::Slice<_1d1da4277_Token> _127235_tokens) {
	jule::Ref<_1d1e5192e_FieldDecl> _127317_f = jule::new_struct<_1d1e5192e_FieldDecl>(new( std::nothrow ) _1d1e5192e_FieldDecl());
	_127317_f->_field_public=_127235_tokens[0LL]._field_id == 21LLU;
	if (_127317_f->_field_public) {
		if (_127235_tokens.len() == 1LL) {
			this->self->_method_push_err(_127235_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1d1e5192e_FieldDecl>();
		}
		_127235_tokens=_127235_tokens.slice(1LL);
	}
	_127317_f->_field_mutable=_127235_tokens[0LL]._field_id == 36LLU;
	if (_127317_f->_field_mutable) {
		if (_127235_tokens.len() == 1LL) {
			this->self->_method_push_err(_127235_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1d1e5192e_FieldDecl>();
		}
		_127235_tokens=_127235_tokens.slice(1LL);
	}
	_127317_f->_field_token=_127235_tokens[0LL];
	if (_127317_f->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_127317_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1d1e5192e_FieldDecl>();
	}
	_127317_f->_field_ident=_127317_f->_field_token._field_kind;
	if (_127235_tokens.len() == 1LL) {
		this->self->_method_push_err(_127235_tokens[0LL],jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1d1e5192e_FieldDecl>();
	} else if (_127235_tokens[1LL]._field_id != 11LLU) {
		this->self->_method_push_err(_127235_tokens[1LL],jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1d1e5192e_FieldDecl>();
	}
	_127235_tokens=_127235_tokens.slice(2LL);
	jule::Int _131017_i = 0LL;
	std::tie(_127317_f->_field_kind,std::ignore) = this->self->_method_build_type(_127235_tokens,(&(_131017_i)),true);
	if (_131017_i < _127235_tokens.len()) {
		this->self->_method_push_err(_127235_tokens[static_cast<jule::Int>(_131017_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1d1e5192e_FieldDecl>();
	}
	return _127317_f;
}



inline jule::Slice<jule::Ref<_1d1e5192e_FieldDecl>> _1d21abb45_Parser::_method_build_struct_decl_fields(jule::Slice<_1d1da4277_Token> _132048_tokens) {
	jule::Slice<jule::Ref<_1d1e5192e_FieldDecl>> _132117_fields = nullptr;
	jule::Slice<jule::Ref<_1d21a4698_Stmt>> _132217_stms = _1d21a4698_split_stms(_132048_tokens);
	{
		auto _range_expr = _132217_stms;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d21a4698_Stmt> _1d21abb45_st = *_range_begin;
			_iter_begin_4707682928:;
			{
				_132048_tokens=_1d21abb45_st->_field_tokens;
				if (_132048_tokens[0LL]._field_id == 18LLU) {
					goto _iter_next_4707682928;
				}
				jule::Ref<_1d1e5192e_FieldDecl> _132821_f = this->self->_method_build_field(_132048_tokens);
				_132117_fields=jule::append(_132117_fields,jule::Slice<jule::Ref<_1d1e5192e_FieldDecl>>({_132821_f}));
			}
			_iter_next_4707682928:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d21abb45_st = *_range_begin; goto _iter_begin_4707682928; }
			_iter_end_4707682928:;
		}
	}
	return _132117_fields;
}



inline jule::Ref<_1d1e5192e_StructDecl> _1d21abb45_Parser::_method_build_struct_decl(jule::Slice<_1d1da4277_Token>& _133442_tokens) {
	if (_133442_tokens.len() < 3LL) {
		this->self->_method_push_err(_133442_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1d1e5192e_StructDecl>();
	}
	jule::Int _134017_i = 1LL;
	jule::Ref<_1d1e5192e_StructDecl> _134117_s = jule::new_struct<_1d1e5192e_StructDecl>(new( std::nothrow ) _1d1e5192e_StructDecl(_133442_tokens[static_cast<jule::Int>(_134017_i)],jule::Str(),jule::Slice<jule::Ref<_1d1e5192e_FieldDecl>>(),jule::Bool(),jule::Bool(),jule::Slice<jule::Ref<_1d1e5192e_Directive>>(),jule::Ref<_1d1e5192e_CommentGroup>(),jule::Slice<jule::Ref<_1d1e5192e_GenericDecl>>()));
	if (_134117_s->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_134117_s->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
	}
	(_134017_i)++;
	if (_134017_i >= _133442_tokens.len()) {
		this->self->_method_push_err(_133442_tokens[static_cast<jule::Int>(_134017_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return _134117_s;
	}
	_134117_s->_field_ident=_134117_s->_field_token._field_kind;
	_1d1da4277_Token _135513_error_token = _133442_tokens[static_cast<jule::Int>(_134017_i)];
	jule::Slice<_1d1da4277_Token> _135617_generics_tokens = _1d21abb45_range(_134017_i,jule::Str("[", 1),jule::Str("]", 1),_133442_tokens);
	if (_135617_generics_tokens != nullptr) {
		_134117_s->_field_generics=this->self->_method_build_generics(_135617_generics_tokens,_135513_error_token);
	}
	if (_134017_i >= _133442_tokens.len()) {
		this->self->_method_push_err(_133442_tokens[static_cast<jule::Int>(_134017_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return _134117_s;
	}
	jule::Slice<_1d1da4277_Token> _136517_body_tokens = _1d21abb45_range(_134017_i,jule::Str("{", 1),jule::Str("}", 1),_133442_tokens);
	if (_136517_body_tokens == nullptr) {
		this->self->_method_stop();
		this->self->_method_push_err(_134117_s->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return _134117_s;
	}
	if (_134017_i < _133442_tokens.len()) {
		this->self->_method_push_err(_133442_tokens[static_cast<jule::Int>(_134017_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	_134117_s->_field_fields=this->self->_method_build_struct_decl_fields(_136517_body_tokens);
	return _134117_s;
}



inline void _1d21abb45_Parser::_method_check_method_receiver(jule::Ref<_1d1e5192e_FnDecl>& _137941_f) {
	if (_137941_f->_field_statically) {
		if ((_137941_f->_field_params.len() > 0LL) && _137941_f->_field_params[0LL]->_method_is_self()) {
			(*this)._method_push_err(_137941_f->_field_token,jule::Str("static functions cannot have receiver parameter", 47),jule::Slice<jule::Any>({}));
		}
		return;
	}
	if (_137941_f->_field_params.len() == 0LL) {
		(*this)._method_push_err(_137941_f->_field_token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>({}));
		return;
	}
	jule::Ref<_1d1e5192e_ParamDecl> _139213_param = _137941_f->_field_params[0LL];
	if ((!(_139213_param->_method_is_self()))) {
		(*this)._method_push_err(_137941_f->_field_token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>({}));
		return;
	}
}



inline jule::Slice<jule::Ref<_1d1e5192e_FnDecl>> _1d21abb45_Parser::_method_build_trait_methods(jule::Slice<_1d1da4277_Token> _139943_tokens) {
	jule::Slice<jule::Ref<_1d1e5192e_FnDecl>> _140017_methods = nullptr;
	jule::Slice<jule::Ref<_1d21a4698_Stmt>> _140117_stms = _1d21a4698_split_stms(_139943_tokens);
	{
		auto _range_expr = _140117_stms;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d21a4698_Stmt> _1d21abb45_st = *_range_begin;
			_iter_begin_4707742672:;
			{
				_139943_tokens=_1d21b6e08_eliminate_comments(_1d21abb45_st->_field_tokens);
				if (_139943_tokens.len() == 0LL) {
					goto _iter_next_4707742672;
				}
				jule::Bool _140821_is_pub = false;
				if (_139943_tokens[0LL]._field_id == 21LLU) {
					_140821_is_pub=true;
					if (_139943_tokens.len() == 1LL) {
						this->self->_method_push_err(_139943_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
						goto _iter_next_4707742672;
					}
					_139943_tokens=_139943_tokens.slice(1LL);
				}
				jule::Ref<_1d1e5192e_FnDecl> _141821_f = this->self->_method_build_fn(_139943_tokens,true,true);
				if (jule::real(_141821_f)) {
					if (_141821_f->_method_is_anon()) {
						this->self->_method_push_err(_141821_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
					}
					this->self->_method_check_method_receiver(_141821_f);
					if (_141821_f->_field_generics.len() > 0LL) {
						this->self->_method_push_err(_141821_f->_field_token,jule::Str("trait methods cannot have generics", 34),jule::Slice<jule::Any>({}));
					}
					_141821_f->_field_public=_140821_is_pub;
					_140017_methods=jule::append(_140017_methods,jule::Slice<jule::Ref<_1d1e5192e_FnDecl>>({_141821_f}));
				}
			}
			_iter_next_4707742672:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d21abb45_st = *_range_begin; goto _iter_begin_4707742672; }
			_iter_end_4707742672:;
		}
	}
	return _140017_methods;
}



inline jule::Ref<_1d1e5192e_TraitDecl> _1d21abb45_Parser::_method_build_trait_decl(jule::Slice<_1d1da4277_Token>& _143441_tokens) {
	if (_143441_tokens.len() < 3LL) {
		this->self->_method_push_err(_143441_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1d1e5192e_TraitDecl>();
	}
	jule::Ref<_1d1e5192e_TraitDecl> _143917_t = jule::new_struct<_1d1e5192e_TraitDecl>(new( std::nothrow ) _1d1e5192e_TraitDecl(_143441_tokens[1LL],jule::Str(),jule::Bool(),jule::Ref<_1d1e5192e_CommentGroup>(),jule::Slice<jule::Ref<_1d1e5192e_FnDecl>>()));
	if (_143917_t->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_143917_t->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
	}
	_143917_t->_field_ident=_143917_t->_field_token._field_kind;
	jule::Int _144717_i = 2LL;
	jule::Slice<_1d1da4277_Token> _144817_body_tokens = _1d21abb45_range(_144717_i,jule::Str("{", 1),jule::Str("}", 1),_143441_tokens);
	if (_144817_body_tokens == nullptr) {
		this->self->_method_stop();
		this->self->_method_push_err(_143917_t->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1d1e5192e_TraitDecl>();
	}
	if (_144717_i < _143441_tokens.len()) {
		this->self->_method_push_err(_143441_tokens[static_cast<jule::Int>(_144717_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	_143917_t->_field_methods=this->self->_method_build_trait_methods(_144817_body_tokens);
	return _143917_t;
}



inline jule::Ref<_1d1e5192e_FnDecl> _1d21abb45_Parser::_method_build_cpp_link_fn(jule::Slice<_1d1da4277_Token> _146241_tokens) {
	_146241_tokens=_146241_tokens.slice(1LL);
	jule::Ref<_1d1e5192e_FnDecl> _146417_f = this->self->_method_build_fn(_146241_tokens,false,true);
	if (jule::real(_146417_f)) {
		if (_146417_f->_method_is_anon()) {
			this->self->_method_push_err(_146417_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		}
		_146417_f->_field_cpp_linked=true;
	}
	return _146417_f;
}



inline jule::Ref<_1d1e5192e_VarDecl> _1d21abb45_Parser::_method_build_cpp_link_var(jule::Slice<_1d1da4277_Token> _147442_tokens) {
	_147442_tokens=_147442_tokens.slice(1LL);
	jule::Ref<_1d1e5192e_VarDecl> _147617_v = this->self->_method_build_var(_147442_tokens);
	if (jule::real(_147617_v)) {
		_147617_v->_field_cpp_linked=true;
		if (jule::real(_147617_v->_field_expr)) {
			this->self->_method_push_err(_147617_v->_field_token,jule::Str("cpp linked variables cannot have expression", 43),jule::Slice<jule::Any>({}));
		}
	}
	return _147617_v;
}



inline jule::Ref<_1d1e5192e_StructDecl> _1d21abb45_Parser::_method_build_cpp_link_struct(jule::Slice<_1d1da4277_Token> _148645_tokens) {
	_148645_tokens=_148645_tokens.slice(1LL);
	jule::Ref<_1d1e5192e_StructDecl> _148817_s = this->self->_method_build_struct_decl(_148645_tokens);
	if (jule::real(_148817_s)) {
		_148817_s->_field_cpp_linked=true;
	}
	return _148817_s;
}



inline jule::Ref<_1d1e5192e_TypeAliasDecl> _1d21abb45_Parser::_method_build_cpp_link_type_alias(jule::Slice<_1d1da4277_Token> _149549_tokens) {
	_149549_tokens=_149549_tokens.slice(1LL);
	jule::Ref<_1d1e5192e_TypeAliasDecl> _149717_t = this->self->_method_build_type_alias_decl(_149549_tokens);
	if (jule::real(_149717_t)) {
		_149717_t->_field_cpp_linked=true;
	}
	return _149717_t;
}



inline jule::Ref<_1d1e5192e_UseDecl> _1d21abb45_Parser::_method_build_cpp_link_use(jule::Slice<_1d1da4277_Token> _150442_tokens) {
	if (_150442_tokens.len() == 1LL) {
		this->self->_method_push_err(_150442_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1d1e5192e_UseDecl>();
	}
	_150442_tokens=_150442_tokens.slice(1LL);
	
	return this->self->_method_build_use_decl(_150442_tokens,true);
}



inline jule::Any _1d21abb45_Parser::_method_build_cpp_link(jule::Slice<_1d1da4277_Token>& _151539_tokens) {
	_1d1da4277_Token _151617_token = _151539_tokens[0LL];
	if (_151539_tokens.len() == 1LL) {
		this->self->_method_push_err(_151617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::Any(nullptr);
	}
	_151617_token=_151539_tokens[1LL];
	{
		auto _match_expr{ _151617_token._field_id };
		if (!((19LLU) == _match_expr)) { goto _case_end_4707828368; }
		_case_begin_4707828368:;
		{
			return jule::Any(this->self->_method_build_cpp_link_use(_151539_tokens));
		}
		goto _match_end_4707826608;
		_case_end_4707828368:;
		if (!((33LLU) == _match_expr || (35LLU) == _match_expr)) { goto _case_end_4707827888; }
		_case_begin_4707827888:;
		{
			return jule::Any(this->self->_method_build_cpp_link_fn(_151539_tokens));
		}
		goto _match_end_4707826608;
		_case_end_4707827888:;
		if (!((9LLU) == _match_expr || (34LLU) == _match_expr)) { goto _case_end_4707828000; }
		_case_begin_4707828000:;
		{
			return jule::Any(this->self->_method_build_cpp_link_var(_151539_tokens));
		}
		goto _match_end_4707826608;
		_case_end_4707828000:;
		if (!((25LLU) == _match_expr)) { goto _case_end_4707828112; }
		_case_begin_4707828112:;
		{
			return jule::Any(this->self->_method_build_cpp_link_struct(_151539_tokens));
		}
		goto _match_end_4707826608;
		_case_end_4707828112:;
		if (!((10LLU) == _match_expr)) { goto _case_end_4707829824; }
		_case_begin_4707829824:;
		{
			return jule::Any(this->self->_method_build_cpp_link_type_alias(_151539_tokens));
		}
		goto _match_end_4707826608;
		_case_end_4707829824:;
		_case_begin_4707827488:;
		{
			this->self->_method_push_err(_151617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4707826608;
		_case_end_4707827488:;
		_match_end_4707826608:;
	}
	return jule::Any(nullptr);
}



inline jule::Ref<_1d1e5192e_FnDecl> _1d21abb45_Parser::_method_get_method(jule::Slice<_1d1da4277_Token>& _154635_tokens) {
	jule::Int _154717_i = 0LL;
	_1d1da4277_Token _154817_token = _154635_tokens[static_cast<jule::Int>(_154717_i)];
	if (_154817_token._field_id == 38LLU) {
		if ((_154717_i + 1LL) >= _154635_tokens.len()) {
			this->self->_method_push_err(_154817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1d1e5192e_FnDecl>();
		}
		(_154717_i)++;
		_154817_token=_154635_tokens[static_cast<jule::Int>(_154717_i)];
	}
	if (_154817_token._field_id == 35LLU) {
		if ((_154717_i + 1LL) >= _154635_tokens.len()) {
			this->self->_method_push_err(_154817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1d1e5192e_FnDecl>();
		}
		(_154717_i)++;
		_154817_token=_154635_tokens[static_cast<jule::Int>(_154717_i)];
	}
	if (_154817_token._field_id != 33LLU) {
		this->self->_method_push_err(_154817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1d1e5192e_FnDecl>();
	}
	jule::Ref<_1d1e5192e_FnDecl> _157217_f = this->self->_method_build_fn(_154635_tokens,true,false);
	if (jule::real(_157217_f) && _157217_f->_method_is_anon()) {
		this->self->_method_push_err(_157217_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	return _157217_f;
}



inline void _1d21abb45_Parser::_method_parse_impl_body(jule::Ref<_1d1e5192e_Impl>& _157940_ipl,jule::Slice<_1d1da4277_Token>& _157957_tokens) {
	jule::Slice<jule::Ref<_1d21a4698_Stmt>> _158017_stms = _1d21a4698_split_stms(_157957_tokens);
	{
		auto _range_expr = _158017_stms;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d21a4698_Stmt> _1d21abb45_st = *_range_begin;
			_iter_begin_4707861296:;
			{
				_157957_tokens=_1d21abb45_st->_field_tokens;
				_1d1da4277_Token _158321_token = _157957_tokens[0LL];
				jule::Bool _158421_is_pub = false;
				{
					auto _match_expr{ _158321_token._field_id };
					if (!((18LLU) == _match_expr)) { goto _case_end_4707866368; }
					_case_begin_4707866368:;
					{
						goto _iter_next_4707861296;
					}
					goto _match_end_4707864720;
					_case_end_4707866368:;
					if (!((21LLU) == _match_expr)) { goto _case_end_4707866480; }
					_case_begin_4707866480:;
					{
						_158421_is_pub=true;
						if (_157957_tokens.len() == 1LL) {
							this->self->_method_push_err(_157957_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
							goto _iter_next_4707861296;
						}
						_157957_tokens=_157957_tokens.slice(1LL);
						if (_157957_tokens.len() > 0LL) {
							_158321_token=_157957_tokens[0LL];
						}
					}
					goto _match_end_4707864720;
					_case_end_4707866480:;
					_match_end_4707864720:;
				}
				{
					auto _match_expr{ _158321_token._field_id };
					if (!((9LLU) == _match_expr)) { goto _case_end_4707875568; }
					_case_begin_4707875568:;
					{
						jule::Ref<_1d1e5192e_VarDecl> _160425_v = this->self->_method_build_var(_157957_tokens);
						if (jule::real(_160425_v)) {
							_160425_v->_field_public=_158421_is_pub;
							_157940_ipl->_field_statics=jule::append(_157940_ipl->_field_statics,jule::Slice<jule::Ref<_1d1e5192e_VarDecl>>({_160425_v}));
						}
					}
					goto _match_end_4707871472;
					_case_end_4707875568:;
					if (!((38LLU) == _match_expr || (33LLU) == _match_expr || (35LLU) == _match_expr)) { goto _case_end_4707875680; }
					_case_begin_4707875680:;
					{
						jule::Ref<_1d1e5192e_FnDecl> _161325_f = this->self->_method_get_method(_157957_tokens);
						if (jule::real(_161325_f)) {
							_161325_f->_field_public=_158421_is_pub;
							this->self->_method_check_method_receiver(_161325_f);
							_157940_ipl->_field_methods=jule::append(_157940_ipl->_field_methods,jule::Slice<jule::Ref<_1d1e5192e_FnDecl>>({_161325_f}));
						}
					}
					goto _match_end_4707871472;
					_case_end_4707875680:;
					_case_begin_4707867456:;
					{
						this->self->_method_push_err(_158321_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
						goto _iter_next_4707861296;
					}
					goto _match_end_4707871472;
					_case_end_4707867456:;
					_match_end_4707871472:;
				}
			}
			_iter_next_4707861296:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d21abb45_st = *_range_begin; goto _iter_begin_4707861296; }
			_iter_end_4707861296:;
		}
	}
}



inline jule::Ref<_1d1e5192e_Impl> _1d21abb45_Parser::_method_build_impl(jule::Slice<_1d1da4277_Token> _162734_tokens) {
	_1d1da4277_Token _162817_token = _162734_tokens[0LL];
	if (_162734_tokens.len() < 2LL) {
		this->self->_method_push_err(_162817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1d1e5192e_Impl>();
	}
	_162817_token=_162734_tokens[1LL];
	if (_162817_token._field_id != 2LLU) {
		this->self->_method_push_err(_162817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1d1e5192e_Impl>();
	}
	if (_162734_tokens.len() < 3LL) {
		this->self->_method_push_err(_162817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1d1e5192e_Impl>();
	}
	jule::Ref<_1d1e5192e_Impl> _164317_ipl = jule::new_struct<_1d1e5192e_Impl>(new( std::nothrow ) _1d1e5192e_Impl(_162817_token,_1d1da4277_Token(),jule::Slice<jule::Ref<_1d1e5192e_FnDecl>>(),jule::Slice<jule::Ref<_1d1e5192e_VarDecl>>()));
	_162817_token=_162734_tokens[2LL];
	if (_162817_token._field_id != 12LLU) {
		if ((_162817_token._field_id == 3LLU) && (_162817_token._field_kind == jule::Str("{", 1))) {
			std::tie(_164317_ipl->_field_base,_164317_ipl->_field_dest) = std::make_tuple(_164317_ipl->_field_dest,_164317_ipl->_field_base);
			_162734_tokens=_162734_tokens.slice(2LL);
			goto _julec_label_body;
		}
		this->self->_method_push_err(_162817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1d1e5192e_Impl>();
	}
	if (_162734_tokens.len() < 4LL) {
		this->self->_method_push_err(_162817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1d1e5192e_Impl>();
	}
	_162817_token=_162734_tokens[3LL];
	if (_162817_token._field_id != 2LLU) {
		this->self->_method_push_err(_162817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1d1e5192e_Impl>();
	}
	_164317_ipl->_field_dest=_162817_token;
	_162734_tokens=_162734_tokens.slice(4LL);
	_julec_label_body:;
	jule::Int _167317_i = 0LL;
	jule::Slice<_1d1da4277_Token> _167417_body_tokens = _1d21abb45_range(_167317_i,jule::Str("{", 1),jule::Str("}", 1),_162734_tokens);
	if (_167417_body_tokens == nullptr) {
		this->self->_method_stop();
		this->self->_method_push_err(_164317_ipl->_field_base,jule::Str("body is not exist", 17),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1d1e5192e_Impl>();
	}
	if (_167317_i < _162734_tokens.len()) {
		this->self->_method_push_err(_162734_tokens[static_cast<jule::Int>(_167317_i)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	this->self->_method_parse_impl_body(_164317_ipl,_167417_body_tokens);
	return _164317_ipl;
}



inline jule::Any _1d21abb45_Parser::_method_build_node_data(jule::Slice<_1d1da4277_Token>& _168840_tokens) {
	_1d1da4277_Token _168917_token = _168840_tokens[0LL];
	{
		auto _match_expr{ _168917_token._field_id };
		if (!((19LLU) == _match_expr)) { goto _case_end_4707931168; }
		_case_begin_4707931168:;
		{
			
			return jule::Any(this->self->_method_build_use_decl(_168840_tokens,false));
		}
		goto _match_end_4707929664;
		_case_end_4707931168:;
		if (!((33LLU) == _match_expr || (35LLU) == _match_expr)) { goto _case_end_4707932720; }
		_case_begin_4707932720:;
		{
			jule::Ref<_1d1e5192e_FnDecl> _169721_f = this->self->_method_build_fn(_168840_tokens,false,false);
			if (jule::real(_169721_f)) {
				_169721_f->_field_global=true;
				if (_169721_f->_method_is_anon()) {
					this->self->_method_push_err(_169721_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				}
			}
			return jule::Any(_169721_f);
		}
		goto _match_end_4707929664;
		_case_end_4707932720:;
		if (!((34LLU) == _match_expr || (9LLU) == _match_expr || (36LLU) == _match_expr || (38LLU) == _match_expr)) { goto _case_end_4707932832; }
		_case_begin_4707932832:;
		{
			return jule::Any(this->self->_method_build_var(_168840_tokens));
		}
		goto _match_end_4707929664;
		_case_end_4707932832:;
		if (!((10LLU) == _match_expr)) { goto _case_end_4707930656; }
		_case_begin_4707930656:;
		{
			return jule::Any(this->self->_method_build_type_alias_decl(_168840_tokens));
		}
		goto _match_end_4707929664;
		_case_end_4707930656:;
		if (!((24LLU) == _match_expr)) { goto _case_end_4707930768; }
		_case_begin_4707930768:;
		{
			return jule::Any(this->self->_method_build_enum_decl(_168840_tokens));
		}
		goto _match_end_4707929664;
		_case_end_4707930768:;
		if (!((25LLU) == _match_expr)) { goto _case_end_4707930880; }
		_case_begin_4707930880:;
		{
			return jule::Any(this->self->_method_build_struct_decl(_168840_tokens));
		}
		goto _match_end_4707929664;
		_case_end_4707930880:;
		if (!((29LLU) == _match_expr)) { goto _case_end_4707933584; }
		_case_begin_4707933584:;
		{
			return jule::Any(this->self->_method_build_trait_decl(_168840_tokens));
		}
		goto _match_end_4707929664;
		_case_end_4707933584:;
		if (!((30LLU) == _match_expr)) { goto _case_end_4707933696; }
		_case_begin_4707933696:;
		{
			return jule::Any(this->self->_method_build_impl(_168840_tokens));
		}
		goto _match_end_4707929664;
		_case_end_4707933696:;
		if (!((31LLU) == _match_expr)) { goto _case_end_4707933808; }
		_case_begin_4707933808:;
		{
			return this->self->_method_build_cpp_link(_168840_tokens);
		}
		goto _match_end_4707929664;
		_case_end_4707933808:;
		if (!((18LLU) == _match_expr)) { goto _case_end_4707933920; }
		_case_begin_4707933920:;
		{
			jule::Ref<_1d1e5192e_Comment> _173421_c = _1d21abb45_build_comment(_168917_token);
			this->self->_method_process_comment(_173421_c);
			return jule::Any(_173421_c);
		}
		goto _match_end_4707929664;
		_case_end_4707933920:;
		_case_begin_4707930352:;
		{
			this->self->_method_push_err(_168917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::Any(nullptr);
		}
		goto _match_end_4707929664;
		_case_end_4707930352:;
		_match_end_4707929664:;
	}
}



inline void _1d21abb45_Parser::_method_check_comment_group(_1d1e5192e_Node& _174439_node) {
	if ((!(jule::real((*this)._field_comment_group)))) {
		return;
	}
	{
		auto _match_expr{ _174439_node._field_data };
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_Comment>>() || _match_expr.type_is<jule::Ref<_1d1e5192e_Directive>>())) { goto _case_end_4707955456; }
		goto _match_end_4707954016;
		_case_end_4707955456:;
		_case_begin_4707954480:;
		{
			jule::drop((*this)._field_comment_group);
		}
		goto _match_end_4707954016;
		_case_end_4707954480:;
		_match_end_4707954016:;
	}
}



inline void _1d21abb45_Parser::_method_check_directive(_1d1e5192e_Node& _175835_node) {
	if ((*this)._field_directives == nullptr) {
		return;
	}
	{
		auto _match_expr{ _175835_node._field_data };
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_Directive>>() || _match_expr.type_is<jule::Ref<_1d1e5192e_Comment>>())) { goto _case_end_4707962000; }
		goto _match_end_4707959616;
		_case_end_4707962000:;
		_case_begin_4707959072:;
		{
			(*this)._field_directives=nullptr;
		}
		goto _match_end_4707959616;
		_case_end_4707959072:;
		_match_end_4707959616:;
	}
}



inline void _1d21abb45_Parser::_method_apply_meta(_1d1e5192e_Node& _177334_node,jule::Bool _177350_is_pub) {
	{
		auto _match_expr{ _177334_node._field_data };
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_VarDecl>>())) { goto _case_end_4707965648; }
		_case_begin_4707965648:;
		{
			jule::Ref<_1d1e5192e_VarDecl> _177621_v = _177334_node._field_data.operator jule::Ref<_1d1e5192e_VarDecl>();
			if ((!(jule::real(_177621_v)))) {
				return;
			}
			_177621_v->_field_public=_177350_is_pub;
			_177350_is_pub=false;
			_177621_v->_field_doc_comments=(*this)._field_comment_group;
			jule::drop((*this)._field_comment_group);
			_177621_v->_field_directives=(*this)._field_directives;
			(*this)._field_directives=nullptr;
		}
		goto _match_end_4707964912;
		_case_end_4707965648:;
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_FnDecl>>())) { goto _case_end_4707965760; }
		_case_begin_4707965760:;
		{
			jule::Ref<_1d1e5192e_FnDecl> _179021_f = _177334_node._field_data.operator jule::Ref<_1d1e5192e_FnDecl>();
			if ((!(jule::real(_179021_f)))) {
				return;
			}
			_179021_f->_field_public=_177350_is_pub;
			_177350_is_pub=false;
			_179021_f->_field_directives=(*this)._field_directives;
			(*this)._field_directives=nullptr;
			_179021_f->_field_doc_comments=(*this)._field_comment_group;
			jule::drop((*this)._field_comment_group);
		}
		goto _match_end_4707964912;
		_case_end_4707965760:;
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_TypeAliasDecl>>())) { goto _case_end_4707965888; }
		_case_begin_4707965888:;
		{
			jule::Ref<_1d1e5192e_TypeAliasDecl> _180321_tad = _177334_node._field_data.operator jule::Ref<_1d1e5192e_TypeAliasDecl>();
			if ((!(jule::real(_180321_tad)))) {
				return;
			}
			_180321_tad->_field_public=_177350_is_pub;
			_177350_is_pub=false;
			_180321_tad->_field_doc_comments=(*this)._field_comment_group;
			jule::drop((*this)._field_comment_group);
		}
		goto _match_end_4707964912;
		_case_end_4707965888:;
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_EnumDecl>>())) { goto _case_end_4707966016; }
		_case_begin_4707966016:;
		{
			jule::Ref<_1d1e5192e_EnumDecl> _181321_ed = _177334_node._field_data.operator jule::Ref<_1d1e5192e_EnumDecl>();
			if ((!(jule::real(_181321_ed)))) {
				return;
			}
			_181321_ed->_field_doc_comments=(*this)._field_comment_group;
			jule::drop((*this)._field_comment_group);
			_181321_ed->_field_public=_177350_is_pub;
			_177350_is_pub=false;
		}
		goto _match_end_4707964912;
		_case_end_4707966016:;
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_StructDecl>>())) { goto _case_end_4707966144; }
		_case_begin_4707966144:;
		{
			jule::Ref<_1d1e5192e_StructDecl> _182321_sd = _177334_node._field_data.operator jule::Ref<_1d1e5192e_StructDecl>();
			if ((!(jule::real(_182321_sd)))) {
				return;
			}
			_182321_sd->_field_directives=(*this)._field_directives;
			(*this)._field_directives=nullptr;
			_182321_sd->_field_doc_comments=(*this)._field_comment_group;
			jule::drop((*this)._field_comment_group);
			_182321_sd->_field_public=_177350_is_pub;
			_177350_is_pub=false;
		}
		goto _match_end_4707964912;
		_case_end_4707966144:;
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_TraitDecl>>())) { goto _case_end_4707966272; }
		_case_begin_4707966272:;
		{
			jule::Ref<_1d1e5192e_TraitDecl> _183521_td = _177334_node._field_data.operator jule::Ref<_1d1e5192e_TraitDecl>();
			if ((!(jule::real(_183521_td)))) {
				return;
			}
			_183521_td->_field_doc_comments=(*this)._field_comment_group;
			jule::drop((*this)._field_comment_group);
			_183521_td->_field_public=_177350_is_pub;
			_177350_is_pub=false;
		}
		goto _match_end_4707964912;
		_case_end_4707966272:;
		_match_end_4707964912:;
	}
	if (_177350_is_pub) {
		(*this)._method_push_err(_177334_node._field_token,jule::Str("define is not supports pub modifier", 35),jule::Slice<jule::Any>({}));
	}
}



inline void _1d21abb45_Parser::_method_check_use_decl(_1d1e5192e_Node& _184934_node) {
	{
		auto _match_expr{ _184934_node._field_data };
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_UseDecl>>())) { goto _case_end_4708002624; }
		goto _match_end_4708000944;
		_case_end_4708002624:;
		_case_begin_4708001600:;
		{
			return;
		}
		goto _match_end_4708000944;
		_case_end_4708001600:;
		_match_end_4708000944:;
	}
	if ((*this)._field_ast->_field_decls.len() > 0LL) {
		(*this)._method_push_err(_184934_node._field_token,jule::Str("use declarations must declared before other declarations", 56),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("move this use declaration to top of source file", 47),jule::Slice<jule::Any>({}));
	}
}



inline std::tuple<jule::Bool,jule::Any> _1d21abb45_Parser::_method_build_general_scope_node_data(jule::Slice<_1d1da4277_Token> _186453_st) {
	jule::Bool _186468_is_pub = jule::Bool();
	jule::Any _186482_data = jule::Any();
	if (_186453_st[0LL]._field_id == 21LLU) {
		_186468_is_pub=true;
		_186453_st=_186453_st.slice(1LL);
		if (_186453_st.len() == 0LL) {
			this->self->_method_push_err(_186453_st[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return std::make_tuple(_186468_is_pub,_186482_data);
		}
	}
	_186482_data=this->self->_method_build_node_data(_186453_st);
	_186468_is_pub = _186468_is_pub;
	_186482_data = _186482_data;
	return std::make_tuple(_186468_is_pub,_186482_data);
}



inline _1d1e5192e_Node _1d21abb45_Parser::_method_parse_node(jule::Slice<_1d1da4277_Token>& _187935_st) {
	_1d1e5192e_Node _188017_node = _1d1e5192e_Node(_187935_st[0LL],jule::Any());
	jule::Bool _188414_is_pub;
	jule::Any _188426_data;
	std::tie(_188414_is_pub,_188426_data) = this->self->_method_build_general_scope_node_data(_187935_st);
	if (_188426_data == nullptr) {
		return _188017_node;
	}
	_188017_node._field_data=_188426_data;
	this->self->_method_apply_meta(_188017_node,_188414_is_pub);
	this->self->_method_check_comment_group(_188017_node);
	this->self->_method_check_directive(_188017_node);
	this->self->_method_check_use_decl(_188017_node);
	return _188017_node;
}



inline void _1d21abb45_Parser::_method_append_node(jule::Slice<_1d1da4277_Token>& _189836_st) {
	if (_189836_st.len() == 0LL) {
		return;
	}
	_1d1e5192e_Node _190317_node = this->self->_method_parse_node(_189836_st);
	if ((_190317_node._field_data == nullptr) || this->self->_method_stopped()) {
		return;
	}
	{
		if (!((_190317_node._method_is_use_decl()))) { goto _case_end_4708037152; }
		_case_begin_4708037152:;
		{
			this->self->_field_ast->_field_use_decls=jule::append(this->self->_field_ast->_field_use_decls,jule::Slice<jule::Ref<_1d1e5192e_UseDecl>>({_190317_node._field_data.operator jule::Ref<_1d1e5192e_UseDecl>()}));
		}
		goto _match_end_4708035808;
		_case_end_4708037152:;
		if (!((_190317_node._method_is_decl()))) { goto _case_end_4708038864; }
		_case_begin_4708038864:;
		{
			this->self->_field_ast->_field_decls=jule::append(this->self->_field_ast->_field_decls,jule::Slice<_1d1e5192e_Node>({_190317_node}));
		}
		goto _match_end_4708035808;
		_case_end_4708038864:;
		if (!((_190317_node._method_is_comment()))) { goto _case_end_4708036640; }
		_case_begin_4708036640:;
		{
			jule::Ref<_1d1e5192e_Comment> _191821_c = _190317_node._field_data.operator jule::Ref<_1d1e5192e_Comment>();
			this->self->_field_ast->_field_comments=jule::append(this->self->_field_ast->_field_comments,jule::Slice<jule::Ref<_1d1e5192e_Comment>>({_191821_c}));
		}
		goto _match_end_4708035808;
		_case_end_4708036640:;
		if (!((_190317_node._method_is_impl()))) { goto _case_end_4708036752; }
		_case_begin_4708036752:;
		{
			this->self->_field_ast->_field_impls=jule::append(this->self->_field_ast->_field_impls,jule::Slice<jule::Ref<_1d1e5192e_Impl>>({_190317_node._field_data.operator jule::Ref<_1d1e5192e_Impl>()}));
		}
		goto _match_end_4708035808;
		_case_end_4708036752:;
		_case_begin_4708036336:;
		{
			this->self->_method_push_err(_190317_node._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4708035808;
		_case_end_4708036336:;
		_match_end_4708035808:;
	}
}



inline void _1d21abb45_Parser::_method_remove_range(jule::Int _192931_i,jule::Str _192939_kind,jule::Slice<_1d1da4277_Token>& _192951_tokens,jule::Slice<jule::Int>& _192973_ranges) {
	jule::Str _193013_close = _1d21abb45_get_close_kind_of_brace(_192939_kind);
	_iter_begin_4708056544:;
	if (!(_192931_i >= 0LL)) { goto _iter_end_4708056544; }
	{
		_1d1da4277_Token _193217_tok = _192951_tokens[static_cast<jule::Int>(_192973_ranges[static_cast<jule::Int>(_192931_i)])];
		if (_193217_tok._field_kind != _193013_close) {
			goto _iter_next_4708056544;
		}
		_192973_ranges=jule::append(_192973_ranges.slice(0LL,static_cast<jule::Int>(_192931_i)),_192973_ranges.slice(static_cast<jule::Int>(_192931_i + 1LL)));
		goto _iter_end_4708056544;
	}
	_iter_next_4708056544:;
	(_192931_i)--;
	goto _iter_begin_4708056544;
	_iter_end_4708056544:;
}



inline void _1d21abb45_Parser::_method_push_wrong_order_close_err(_1d1da4277_Token& _194246_t,jule::Slice<_1d1da4277_Token>& _194257_tokens,jule::Slice<jule::Int>& _194275_ranges) {
	{
		auto _match_expr{ _194257_tokens[static_cast<jule::Int>(_194275_ranges[static_cast<jule::Int>(_194275_ranges.len() - 1LL)])]._field_kind };
		if (!((jule::Str("(", 1)) == _match_expr)) { goto _case_end_4708071088; }
		_case_begin_4708071088:;
		{
			(*this)._method_push_err(_194246_t,jule::Str("was expected parentheses close", 30),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4708068272;
		_case_end_4708071088:;
		if (!((jule::Str("{", 1)) == _match_expr)) { goto _case_end_4708071216; }
		_case_begin_4708071216:;
		{
			(*this)._method_push_err(_194246_t,jule::Str("was expected brace close", 24),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4708068272;
		_case_end_4708071216:;
		if (!((jule::Str("[", 1)) == _match_expr)) { goto _case_end_4708071344; }
		_case_begin_4708071344:;
		{
			(*this)._method_push_err(_194246_t,jule::Str("was expected bracket close", 26),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4708068272;
		_case_end_4708071344:;
		_match_end_4708068272:;
	}
}



inline void _1d21abb45_Parser::_method_push_range_close(_1d1da4277_Token _195035_t,jule::Str _195045_left,jule::Slice<_1d1da4277_Token>& _195057_tokens,jule::Slice<jule::Int>& _195079_ranges) {
	jule::I64 _195113_n = _195079_ranges.len();
	if (_195113_n == 0LL) {
		{
			auto _match_expr{ _195035_t._field_kind };
			if (!((jule::Str("]", 1)) == _match_expr)) { goto _case_end_4708083888; }
			_case_begin_4708083888:;
			{
				(*this)._method_push_err(_195035_t,jule::Str("extra closed brackets", 21),jule::Slice<jule::Any>({}));
			}
			goto _match_end_4708083136;
			_case_end_4708083888:;
			if (!((jule::Str("}", 1)) == _match_expr)) { goto _case_end_4708084000; }
			_case_begin_4708084000:;
			{
				(*this)._method_push_err(_195035_t,jule::Str("extra closed braces", 19),jule::Slice<jule::Any>({}));
			}
			goto _match_end_4708083136;
			_case_end_4708084000:;
			if (!((jule::Str(")", 1)) == _match_expr)) { goto _case_end_4708084128; }
			_case_begin_4708084128:;
			{
				(*this)._method_push_err(_195035_t,jule::Str("extra closed parentheses", 24),jule::Slice<jule::Any>({}));
			}
			goto _match_end_4708083136;
			_case_end_4708084128:;
			_match_end_4708083136:;
		}
		return;
	} else if (_195057_tokens[static_cast<jule::Int>(_195079_ranges[static_cast<jule::Int>(_195113_n - 1LL)])]._field_kind != _195045_left) {
		(*this)._method_push_wrong_order_close_err(_195035_t,_195057_tokens,_195079_ranges);
	}
	(*this)._method_remove_range(static_cast<jule::I64>(_195113_n - 1LL),_195035_t._field_kind,_195057_tokens,_195079_ranges);
}



inline void _1d21abb45_Parser::_method_check_ranges(jule::Slice<_1d1da4277_Token>& _196532_tokens) {
	jule::Slice<jule::Int> _196617_ranges = nullptr;
	{
		auto _range_expr = _196532_tokens;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1d21abb45_i = 0;
			_1d1da4277_Token _1d21abb45_token = *_range_begin;
			_iter_begin_4708097536:;
			{
				if (_1d21abb45_token._field_id != 3LLU) {
					goto _iter_next_4708097536;
				}
				{
					auto _match_expr{ _1d21abb45_token._field_kind };
					if (!((jule::Str("(", 1)) == _match_expr || (jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr)) { goto _case_end_4708100800; }
					_case_begin_4708100800:;
					{
						_196617_ranges=jule::append(_196617_ranges,jule::Slice<jule::Int>({_1d21abb45_i}));
					}
					goto _match_end_4708101024;
					_case_end_4708100800:;
					if (!((jule::Str(")", 1)) == _match_expr)) { goto _case_end_4708101296; }
					_case_begin_4708101296:;
					{
						(*this)._method_push_range_close(_1d21abb45_token,jule::Str("(", 1),_196532_tokens,_196617_ranges);
					}
					goto _match_end_4708101024;
					_case_end_4708101296:;
					if (!((jule::Str("}", 1)) == _match_expr)) { goto _case_end_4708101408; }
					_case_begin_4708101408:;
					{
						(*this)._method_push_range_close(_1d21abb45_token,jule::Str("{", 1),_196532_tokens,_196617_ranges);
					}
					goto _match_end_4708101024;
					_case_end_4708101408:;
					if (!((jule::Str("]", 1)) == _match_expr)) { goto _case_end_4708101520; }
					_case_begin_4708101520:;
					{
						(*this)._method_push_range_close(_1d21abb45_token,jule::Str("[", 1),_196532_tokens,_196617_ranges);
					}
					goto _match_end_4708101024;
					_case_end_4708101520:;
					_match_end_4708101024:;
				}
			}
			_iter_next_4708097536:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1d21abb45_i; _1d21abb45_token = *_range_begin; goto _iter_begin_4708097536; }
			_iter_end_4708097536:;
		}
	}
	{
		auto _range_expr = _196617_ranges;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1d21abb45_i = *_range_begin;
			_iter_begin_4708123152:;
			{
				_1d1da4277_Token _199117_token = _196532_tokens[static_cast<jule::Int>(_1d21abb45_i)];
				{
					auto _match_expr{ _199117_token._field_kind };
					if (!((jule::Str("(", 1)) == _match_expr)) { goto _case_end_4708127488; }
					_case_begin_4708127488:;
					{
						(*this)._method_push_err(_199117_token,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>({}));
					}
					goto _match_end_4708126752;
					_case_end_4708127488:;
					if (!((jule::Str("{", 1)) == _match_expr)) { goto _case_end_4708127600; }
					_case_begin_4708127600:;
					{
						(*this)._method_push_err(_199117_token,jule::Str("brace waiting to close", 22),jule::Slice<jule::Any>({}));
					}
					goto _match_end_4708126752;
					_case_end_4708127600:;
					if (!((jule::Str("[", 1)) == _match_expr)) { goto _case_end_4708127712; }
					_case_begin_4708127712:;
					{
						(*this)._method_push_err(_199117_token,jule::Str("bracket are waiting to close", 28),jule::Slice<jule::Any>({}));
					}
					goto _match_end_4708126752;
					_case_end_4708127712:;
					_match_end_4708126752:;
				}
			}
			_iter_next_4708123152:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d21abb45_i = *_range_begin; goto _iter_begin_4708123152; }
			_iter_end_4708123152:;
		}
	}
}



inline void _1d21abb45_Parser::_method_parse(jule::Ref<_1d1ee01b5_File>& _200030_f) {
	this->self->_field_ast=jule::new_struct<_1d21640e7_Ast>(new( std::nothrow ) _1d21640e7_Ast(_200030_f,jule::Slice<jule::Ref<_1d1e5192e_Directive>>(),jule::Slice<jule::Ref<_1d1e5192e_UseDecl>>(),jule::Slice<jule::Ref<_1d1e5192e_Impl>>(),jule::Slice<jule::Ref<_1d1e5192e_Comment>>(),jule::Slice<_1d1e5192e_Node>()));
	jule::Slice<_1d1da4277_Token> _200517_tokens = _200030_f->_method_tokens();
	this->self->_method_check_ranges(_200517_tokens);
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	jule::Slice<jule::Ref<_1d21a4698_Stmt>> _201117_stms = _1d21a4698_split_stms(_200517_tokens);
	jule::Int _201417_i = 0LL;
	_iter_begin_4708133648:;
	if (!(_201417_i < _201117_stms.len())) { goto _iter_end_4708133648; }
	{
		jule::Ref<_1d21a4698_Stmt> _201621_st = _201117_stms[static_cast<jule::Int>(_201417_i)];
		if (_201621_st->_field_tokens.len() == 0LL) {
			return;
		}
		jule::Any _202125_data;
		std::tie(std::ignore,_202125_data) = this->self->_method_build_general_scope_node_data(_201621_st->_field_tokens);
		if (_202125_data == nullptr) {
			goto _iter_end_4708133648;
		}
		if (this->self->_method_stopped()) {
			return;
		}
		_1d1e5192e_Node _203021_node = _1d1e5192e_Node(_1d1da4277_Token(),_202125_data);
		if (_203021_node._method_is_comment()) {
			jule::Ref<_1d1e5192e_Directive> _203225_d = this->self->_method_get_directive(_203021_node._field_data.operator jule::Ref<_1d1e5192e_Comment>());
			if (jule::real(_203225_d) && _1d05c05aa_is_top_directive(_203225_d->_field_tag)) {
				this->self->_field_ast->_field_top_directives=jule::append(this->self->_field_ast->_field_top_directives,jule::Slice<jule::Ref<_1d1e5192e_Directive>>({_203225_d}));
			}
		} else {
			goto _iter_end_4708133648;
		}
	}
	_iter_next_4708133648:;
	(_201417_i)++;
	goto _iter_begin_4708133648;
	_iter_end_4708133648:;
	this->self->_field_errors=nullptr;
	_iter_begin_4708147488:;
	if (!(_201417_i < _201117_stms.len())) { goto _iter_end_4708147488; }
	{
		jule::Ref<_1d21a4698_Stmt> _204521_st = _201117_stms[static_cast<jule::Int>(_201417_i)];
		this->self->_method_append_node(_204521_st->_field_tokens);
		if (this->self->_method_stopped()) {
			goto _iter_end_4708147488;
		}
	}
	_iter_next_4708147488:;
	(_201417_i)++;
	goto _iter_begin_4708147488;
	_iter_end_4708147488:;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d21abb45_Parser &_Src) {
	_Stream << "Parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "comment_group:" << _Src._field_comment_group << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}



inline void _1b87d0ddc_TypeBuilder::_method_push_err(_1d1da4277_Token _7827_token,jule::Str _7841_fmt) {
	if ((*this)._field_err) {
		(*this)._field_p->_method_push_err(_7827_token,_7841_fmt,jule::Slice<jule::Any>({}));
	}
}



inline void _1b87d0ddc_TypeBuilder::_method_push_suggestion(jule::Str _8534_fmt,jule::Slice<jule::Any> _8547_args) {
	if ((*this)._field_err) {
		(*this)._field_p->_method_push_suggestion(_8534_fmt,_8547_args);
	}
}



inline jule::Ref<_1d1e5192e_TypeDecl> _1b87d0ddc_TypeBuilder::_method_build_prim(void) {
	jule::Ref<_1d1e5192e_TypeDecl> _9217_t = _1b87d0ddc_build_prim_type((*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))]);
	((*((*this)._field_i)))++;
	return _9217_t;
}



inline jule::Ref<_1d1e5192e_TypeDecl> _1b87d0ddc_TypeBuilder::_method_build_namespace(void) {
	jule::Ref<_1d1e5192e_TypeDecl> _9817_t = jule::new_struct<_1d1e5192e_TypeDecl>(new( std::nothrow ) _1d1e5192e_TypeDecl((*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))],jule::Any()));
	jule::Ref<_1d1e5192e_NamespaceTypeDecl> _10217_nst = jule::new_struct<_1d1e5192e_NamespaceTypeDecl>(new( std::nothrow ) _1d1e5192e_NamespaceTypeDecl());
	jule::Int _10317_n = 0LL;
	_iter_begin_4708179824:;
	if (!((*((*this)._field_i)) < (*this)._field_tokens.len())) { goto _iter_end_4708179824; }
	{
		_1d1da4277_Token _10521_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
		if (jule::mod(_10317_n,2LL) == 0LL) {
			if (_10521_token._field_id != 2LLU) {
				(*this)._method_push_err(_10521_token,jule::Str("invalid syntax", 14));
				(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
			}
			_10217_nst->_field_idents=jule::append(_10217_nst->_field_idents,jule::Slice<_1d1da4277_Token>({_10521_token}));
		} else if (_10521_token._field_id != 23LLU) {
			goto _iter_end_4708179824;
		}
		(_10317_n)++;
	}
	_iter_next_4708179824:;
	((*((*this)._field_i)))++;
	goto _iter_begin_4708179824;
	_iter_end_4708179824:;
	_10217_nst->_field_idents=_10217_nst->_field_idents.slice(0LL,static_cast<jule::Int>(_10217_nst->_field_idents.len() - 1LL));
	((*((*this)._field_i)))--;
	_10217_nst->_field_kind=(*this)._method_build_ident()->_field_kind.operator jule::Ref<_1d1e5192e_IdentTypeDecl>();
	_9817_t->_field_kind=jule::Any(_10217_nst);
	return _9817_t;
}



inline jule::Slice<jule::Ref<_1d1e5192e_TypeDecl>> _1b87d0ddc_TypeBuilder::_method_build_generics(void) {
	if ((*((*this)._field_i)) >= (*this)._field_tokens.len()) {
		return nullptr;
	}
	_1d1da4277_Token _13113_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	if ((_13113_token._field_id != 3LLU) || (_13113_token._field_kind != jule::Str("[", 1))) {
		return nullptr;
	}
	jule::Slice<jule::Slice<_1d1da4277_Token>> _13617_parts = (*this)._method_ident_generics();
	if (_13617_parts.len() == 0LL) {
		(*this)._method_push_err(_13113_token,jule::Str("invalid syntax", 14));
		return nullptr;
	}
	jule::Slice<jule::Ref<_1d1e5192e_TypeDecl>> _14217_types = jule::Slice<jule::Ref<_1d1e5192e_TypeDecl>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_13617_parts.len())));
	{
		auto _range_expr = _13617_parts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1b87d0ddc_i = 0;
			jule::Slice<_1d1da4277_Token> _1b87d0ddc_part = *_range_begin;
			_iter_begin_4708207680:;
			{
				jule::Int _14421_j = 0LL;
				jule::Ref<_1d1e5192e_TypeDecl> _14522_t;
				std::tie(_14522_t,std::ignore) = (*this)._field_p->_method_build_type(_1b87d0ddc_part,(&(_14421_j)),true);
				if (_14421_j < _1b87d0ddc_part.len()) {
					(*this)._method_push_err(_1b87d0ddc_part[static_cast<jule::Int>(_14421_j)],jule::Str("invalid syntax", 14));
				}
				_14217_types[static_cast<jule::Int>(_1b87d0ddc_i)]=_14522_t;
			}
			_iter_next_4708207680:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1b87d0ddc_i; _1b87d0ddc_part = *_range_begin; goto _iter_begin_4708207680; }
			_iter_end_4708207680:;
		}
	}
	return _14217_types;
}



inline jule::Slice<jule::Slice<_1d1da4277_Token>> _1b87d0ddc_TypeBuilder::_method_ident_generics(void) {
	jule::Int _15513_first = (*((*this)._field_i));
	jule::Int _15617_range_n = 0LL;
	_iter_begin_4708203904:;
	if (!((*((*this)._field_i)) < (*this)._field_tokens.len())) { goto _iter_end_4708203904; }
	{
		_1d1da4277_Token _15817_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
		if (_15817_token._field_id == 3LLU) {
			{
				auto _match_expr{ _15817_token._field_kind };
				if (!((jule::Str("[", 1)) == _match_expr)) { goto _case_end_4708224688; }
				_case_begin_4708224688:;
				{
					(_15617_range_n)++;
				}
				goto _match_end_4708223856;
				_case_end_4708224688:;
				if (!((jule::Str("]", 1)) == _match_expr)) { goto _case_end_4708224800; }
				_case_begin_4708224800:;
				{
					(_15617_range_n)--;
				}
				goto _match_end_4708223856;
				_case_end_4708224800:;
				_match_end_4708223856:;
			}
		}
		if (_15617_range_n == 0LL) {
			((*((*this)._field_i)))++;
			goto _iter_end_4708203904;
		}
	}
	_iter_next_4708203904:;
	((*((*this)._field_i)))++;
	goto _iter_begin_4708203904;
	_iter_end_4708203904:;
	jule::Slice<_1d1da4277_Token> _17017_tokens = (*this)._field_tokens.slice(static_cast<jule::Int>(_15513_first + 1LL),static_cast<jule::Int>((*((*this)._field_i)) - 1LL));
	jule::Slice<jule::Slice<_1d1da4277_Token>> _17118_parts;
	jule::Slice<_1d0557e9e_Log> _17125_errors;
	std::tie(_17118_parts,_17125_errors) = _1d21abb45_parts(_17017_tokens,8LLU,true);
	if ((*this)._field_err) {
		(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_17125_errors);
	}
	return _17118_parts;
}



inline jule::Ref<_1d1e5192e_TypeDecl> _1b87d0ddc_TypeBuilder::_method_build_ident(void) {
	if ((((*((*this)._field_i)) + 1LL) < (*this)._field_tokens.len()) && ((*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)) + 1LL)]._field_id == 23LLU)) {
		return (*this)._method_build_namespace();
	}
	_1d1da4277_Token _18217_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	jule::Ref<_1d1e5192e_IdentTypeDecl> _18317_it = jule::new_struct<_1d1e5192e_IdentTypeDecl>(new( std::nothrow ) _1d1e5192e_IdentTypeDecl(_18217_token,_18217_token._field_kind,false,jule::Slice<jule::Ref<_1d1e5192e_TypeDecl>>()));
	((*((*this)._field_i)))++;
	_18317_it->_field_generics=(*this)._method_build_generics();
	return jule::new_struct<_1d1e5192e_TypeDecl>(new( std::nothrow ) _1d1e5192e_TypeDecl(_18217_token,jule::Any(_18317_it)));
}



inline jule::Ref<_1d1e5192e_TypeDecl> _1b87d0ddc_TypeBuilder::_method_build_cpp_link(void) {
	if ((((*((*this)._field_i)) + 1LL) >= (*this)._field_tokens.len()) || ((*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)) + 1LL)]._field_id != 20LLU)) {
		(*this)._method_push_err((*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))],jule::Str("invalid syntax", 14));
		return jule::new_ref<_1d1e5192e_TypeDecl>();
	}
	(*((*this)._field_i))+=2LL;
	jule::Ref<_1d1e5192e_TypeDecl> _20217_t = (*this)._method_build_ident();
	_20217_t->_field_kind.operator jule::Ref<_1d1e5192e_IdentTypeDecl>()->_field_cpp_linked=true;
	return _20217_t;
}



inline jule::Ref<_1d1e5192e_TypeDecl> _1b87d0ddc_TypeBuilder::_method_build_fn(void) {
	_1d1da4277_Token _20817_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	jule::Ref<_1d1e5192e_FnDecl> _20917_f = (*this)._field_p->_method_build_fn_prototype((*this)._field_tokens,(*((*this)._field_i)),false);
	if ((!(jule::real(_20917_f)))) {
		return jule::new_ref<_1d1e5192e_TypeDecl>();
	}
	if ((!(_20917_f->_method_is_anon()))) {
		(*this)._method_push_err(_20917_f->_field_token,jule::Str("invalid syntax", 14));
	}
	return jule::new_struct<_1d1e5192e_TypeDecl>(new( std::nothrow ) _1d1e5192e_TypeDecl(_20817_token,jule::Any(_20917_f)));
}



inline jule::Ref<_1d1e5192e_TypeDecl> _1b87d0ddc_TypeBuilder::_method_build_ptr(void) {
	_1d1da4277_Token _22317_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	if (((*((*this)._field_i)) + 1LL) >= (*this)._field_tokens.len()) {
		(*this)._method_push_err(_22317_token,jule::Str("invalid syntax", 14));
		return jule::new_ref<_1d1e5192e_TypeDecl>();
	}
	((*((*this)._field_i)))++;
	if ((*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))]._field_id == 35LLU) {
		((*((*this)._field_i)))++;
		return jule::new_struct<_1d1e5192e_TypeDecl>(new( std::nothrow ) _1d1e5192e_TypeDecl(_22317_token,jule::Any(jule::new_struct<_1d1e5192e_PtrTypeDecl>(new( std::nothrow ) _1d1e5192e_PtrTypeDecl(jule::new_ref<_1d1e5192e_TypeDecl>())))));
	}
	jule::Ref<_1d1e5192e_TypeDecl> _24017_elem = (*this)._method_step();
	if ((!(jule::real(_24017_elem)))) {
		return jule::new_ref<_1d1e5192e_TypeDecl>();
	}
	return jule::new_struct<_1d1e5192e_TypeDecl>(new( std::nothrow ) _1d1e5192e_TypeDecl(_22317_token,jule::Any(jule::new_struct<_1d1e5192e_PtrTypeDecl>(new( std::nothrow ) _1d1e5192e_PtrTypeDecl(_24017_elem)))));
}



inline jule::Ref<_1d1e5192e_TypeDecl> _1b87d0ddc_TypeBuilder::_method_build_ref(void) {
	_1d1da4277_Token _25417_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	if (((*((*this)._field_i)) + 1LL) >= (*this)._field_tokens.len()) {
		(*this)._method_push_err(_25417_token,jule::Str("invalid syntax", 14));
		return jule::new_ref<_1d1e5192e_TypeDecl>();
	}
	((*((*this)._field_i)))++;
	jule::Ref<_1d1e5192e_TypeDecl> _26117_elem = (*this)._method_step();
	if ((!(jule::real(_26117_elem)))) {
		return jule::new_ref<_1d1e5192e_TypeDecl>();
	}
	return jule::new_struct<_1d1e5192e_TypeDecl>(new( std::nothrow ) _1d1e5192e_TypeDecl(_25417_token,jule::Any(jule::new_struct<_1d1e5192e_RefTypeDecl>(new( std::nothrow ) _1d1e5192e_RefTypeDecl(_26117_elem)))));
}



inline jule::Ref<_1d1e5192e_TypeDecl> _1b87d0ddc_TypeBuilder::_method_build_op(void) {
	_1d1da4277_Token _27517_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	{
		auto _match_expr{ _27517_token._field_kind };
		if (!((jule::Str("*", 1)) == _match_expr)) { goto _case_end_4708298960; }
		_case_begin_4708298960:;
		{
			return (*this)._method_build_ptr();
		}
		goto _match_end_4708295408;
		_case_end_4708298960:;
		if (!((jule::Str("&", 1)) == _match_expr)) { goto _case_end_4708299536; }
		_case_begin_4708299536:;
		{
			return (*this)._method_build_ref();
		}
		goto _match_end_4708295408;
		_case_end_4708299536:;
		if (!((jule::Str("&&", 2)) == _match_expr)) { goto _case_end_4708299200; }
		_case_begin_4708299200:;
		{
			(*this)._method_push_err(_27517_token,jule::Str("references cannot reference to another reference", 48));
			return (*this)._method_build_ref();
		}
		goto _match_end_4708295408;
		_case_end_4708299200:;
		_case_begin_4708296096:;
		{
			(*this)._method_push_err(_27517_token,jule::Str("invalid syntax", 14));
			return jule::new_ref<_1d1e5192e_TypeDecl>();
		}
		goto _match_end_4708295408;
		_case_end_4708296096:;
		_match_end_4708295408:;
	}
}



inline jule::Ref<_1d1e5192e_TypeDecl> _1b87d0ddc_TypeBuilder::_method_build_slc(void) {
	_1d1da4277_Token _29417_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	((*((*this)._field_i)))++;
	jule::Ref<_1d1e5192e_TypeDecl> _29617_elem = (*this)._method_step();
	if ((!(jule::real(_29617_elem)))) {
		return jule::new_ref<_1d1e5192e_TypeDecl>();
	}
	return jule::new_struct<_1d1e5192e_TypeDecl>(new( std::nothrow ) _1d1e5192e_TypeDecl(_29417_token,jule::Any(jule::new_struct<_1d1e5192e_SlcTypeDecl>(new( std::nothrow ) _1d1e5192e_SlcTypeDecl(_29617_elem)))));
}



inline jule::Ref<_1d1e5192e_TypeDecl> _1b87d0ddc_TypeBuilder::_method_build_arr(void) {
	if ((*((*this)._field_i)) >= (*this)._field_tokens.len()) {
		(*this)._method_push_err((*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)) - 1LL)],jule::Str("data-type missing", 17));
		return jule::new_ref<_1d1e5192e_TypeDecl>();
	}
	jule::Int _31713_expr_delta = (*((*this)._field_i));
	jule::Ref<_1d1e5192e_TypeDecl> _31917_elem = (*this)._method_step();
	if ((!(jule::real(_31917_elem)))) {
		return jule::new_ref<_1d1e5192e_TypeDecl>();
	}
	jule::Ref<_1d1e5192e_ArrTypeDecl> _32417_arrt = jule::new_struct<_1d1e5192e_ArrTypeDecl>(new( std::nothrow ) _1d1e5192e_ArrTypeDecl(_31917_elem,jule::Ref<_1d1e5192e_Expr>()));
	jule::Slice<_1d1da4277_Token> _32817_expr_tokens = (*this)._field_tokens.slice(0LL,static_cast<jule::Int>(_31713_expr_delta));
	std::tie(std::ignore,_32817_expr_tokens) = _1d21abb45_range_last(_32817_expr_tokens);
	_32817_expr_tokens=_32817_expr_tokens.slice(1LL,static_cast<jule::Int>(_32817_expr_tokens.len() - 1LL));
	_1d1da4277_Token _33117_token = _32817_expr_tokens[0LL];
	if (((_32817_expr_tokens.len() == 1LL) && (_33117_token._field_id == 7LLU)) && (_33117_token._field_kind == jule::Str("...", 3))) {
	} else {
		_32417_arrt->_field_size=(*this)._field_p->_method_build_expr(_32817_expr_tokens);
	}
	return jule::new_struct<_1d1e5192e_TypeDecl>(new( std::nothrow ) _1d1e5192e_TypeDecl(_33117_token,jule::Any(_32417_arrt)));
}



inline jule::Ref<_1d1e5192e_TypeDecl> _1b87d0ddc_TypeBuilder::_method_build_map(jule::Int _34428_colon,jule::Slice<_1d1da4277_Token>& _34445_tokens) {
	_1d1da4277_Token _34517_colon_token = (*this)._field_tokens[static_cast<jule::Int>(_34428_colon)];
	if ((_34428_colon == 0LL) || ((_34428_colon + 1LL) >= _34445_tokens.len())) {
		(*this)._method_push_err(_34517_colon_token,jule::Str("data-type missing", 17));
		return jule::new_ref<_1d1e5192e_TypeDecl>();
	}
	jule::Slice<_1d1da4277_Token> _35017_key_tokens = _34445_tokens.slice(0LL,static_cast<jule::Int>(_34428_colon));
	jule::Slice<_1d1da4277_Token> _35117_val_tokens = _34445_tokens.slice(static_cast<jule::Int>(_34428_colon + 1LL));
	jule::Ref<_1d1e5192e_MapTypeDecl> _35217_mapt = jule::new_struct<_1d1e5192e_MapTypeDecl>(new( std::nothrow ) _1d1e5192e_MapTypeDecl());
	jule::Int _35417_j = 0LL;
	jule::Ref<_1d1e5192e_TypeDecl> _35518_keyt;
	jule::Bool _35528_ok;
	std::tie(_35518_keyt,_35528_ok) = (*this)._field_p->_method_build_type(_35017_key_tokens,(&(_35417_j)),(*this)._field_err);
	if ((!(_35528_ok))) {
		return jule::new_ref<_1d1e5192e_TypeDecl>();
	} else if (_35417_j < _35017_key_tokens.len()) {
		(*this)._method_push_err(_35017_key_tokens[static_cast<jule::Int>(_35417_j)],jule::Str("invalid syntax", 14));
	}
	_35217_mapt->_field_key=_35518_keyt;
	_35417_j=0LL;
	jule::Ref<_1d1e5192e_TypeDecl> _36418_valt;
	std::tie(_36418_valt,_35528_ok) = (*this)._field_p->_method_build_type(_35117_val_tokens,(&(_35417_j)),(*this)._field_err);
	if ((!(_35528_ok))) {
		return jule::new_ref<_1d1e5192e_TypeDecl>();
	} else if (_35417_j < _35117_val_tokens.len()) {
		(*this)._method_push_err(_35117_val_tokens[static_cast<jule::Int>(_35417_j)],jule::Str("invalid syntax", 14));
	}
	_35217_mapt->_field_val=_36418_valt;
	return jule::new_struct<_1d1e5192e_TypeDecl>(new( std::nothrow ) _1d1e5192e_TypeDecl(_34517_colon_token,jule::Any(_35217_mapt)));
}



inline jule::Ref<_1d1e5192e_TypeDecl> _1b87d0ddc_TypeBuilder::_method_build_enumerable(void) {
	_1d1da4277_Token _37917_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	if (((((*((*this)._field_i)) + 2LL) >= (*this)._field_tokens.len()) || (_37917_token._field_id != 3LLU)) || (_37917_token._field_kind != jule::Str("[", 1))) {
		(*this)._method_push_err(_37917_token,jule::Str("invalid syntax", 14));
		return jule::new_ref<_1d1e5192e_TypeDecl>();
	}
	((*((*this)._field_i)))++;
	_37917_token=(*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	if ((_37917_token._field_id == 3LLU) && (_37917_token._field_kind == jule::Str("]", 1))) {
		return (*this)._method_build_slc();
	}
	((*((*this)._field_i)))--;
	jule::Slice<_1d1da4277_Token> _39318_map_tokens;
	jule::Int _39330_colon;
	std::tie(_39318_map_tokens,_39330_colon) = _1b87d0ddc_split_map_range((*this)._field_tokens,(*((*this)._field_i)));
	((*((*this)._field_i)))++;
	if (_39330_colon == -1LL) {
		return (*this)._method_build_arr();
	}
	return (*this)._method_build_map(_39330_colon,_39318_map_tokens);
}



inline jule::Ref<_1d1e5192e_TypeDecl> _1b87d0ddc_TypeBuilder::_method_step(void) {
	_1d1da4277_Token _40213_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	{
		auto _match_expr{ _40213_token._field_id };
		if (!((1LLU) == _match_expr)) { goto _case_end_4708379136; }
		_case_begin_4708379136:;
		{
			return (*this)._method_build_prim();
		}
		goto _match_end_4708374896;
		_case_end_4708379136:;
		if (!((2LLU) == _match_expr)) { goto _case_end_4708375872; }
		_case_begin_4708375872:;
		{
			return (*this)._method_build_ident();
		}
		goto _match_end_4708374896;
		_case_end_4708375872:;
		if (!((31LLU) == _match_expr)) { goto _case_end_4708375984; }
		_case_begin_4708375984:;
		{
			return (*this)._method_build_cpp_link();
		}
		goto _match_end_4708374896;
		_case_end_4708375984:;
		if (!((33LLU) == _match_expr)) { goto _case_end_4708376096; }
		_case_begin_4708376096:;
		{
			return (*this)._method_build_fn();
		}
		goto _match_end_4708374896;
		_case_end_4708376096:;
		if (!((7LLU) == _match_expr)) { goto _case_end_4708378288; }
		_case_begin_4708378288:;
		{
			return (*this)._method_build_op();
		}
		goto _match_end_4708374896;
		_case_end_4708378288:;
		if (!((3LLU) == _match_expr)) { goto _case_end_4708378400; }
		_case_begin_4708378400:;
		{
			return (*this)._method_build_enumerable();
		}
		goto _match_end_4708374896;
		_case_end_4708378400:;
		_case_begin_4708375568:;
		{
			((*((*this)._field_i)))++;
			(*this)._method_push_err(_40213_token,jule::Str("invalid syntax", 14));
			return jule::new_ref<_1d1e5192e_TypeDecl>();
		}
		goto _match_end_4708374896;
		_case_end_4708375568:;
		_match_end_4708374896:;
	}
}



inline std::tuple<jule::Ref<_1d1e5192e_TypeDecl>,jule::Bool> _1b87d0ddc_TypeBuilder::_method_build(void) {
	jule::Bool _43144_ok = jule::Bool();
	jule::Ref<_1d1e5192e_TypeDecl> _43217_root = (*this)._method_step();
	if ((!(jule::real(_43217_root)))) {
		_43144_ok = false;
		return std::make_tuple(_1b87d0ddc_build_void_type(),_43144_ok);
	}
	_43144_ok = true;
	return std::make_tuple(_43217_root,_43144_ok);
}







std::ostream &operator<<(std::ostream &_Stream, const _1b87d0ddc_TypeBuilder &_Src) {
	_Stream << "TypeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_1b9d678e5_Const> _1b9d678e5_Const::_static_method_new_i64(jule::I64 _1327_x) {
	return jule::new_struct<_1b9d678e5_Const>(new( std::nothrow ) _1b9d678e5_Const(jule::Any(_1327_x)));
}



inline jule::Ref<_1b9d678e5_Const> _1b9d678e5_Const::_static_method_new_u64(jule::U64 _1527_x) {
	return jule::new_struct<_1b9d678e5_Const>(new( std::nothrow ) _1b9d678e5_Const(jule::Any(_1527_x)));
}



inline jule::Ref<_1b9d678e5_Const> _1b9d678e5_Const::_static_method_new_bool(jule::Bool _1728_x) {
	return jule::new_struct<_1b9d678e5_Const>(new( std::nothrow ) _1b9d678e5_Const(jule::Any(_1728_x)));
}



inline jule::Ref<_1b9d678e5_Const> _1b9d678e5_Const::_static_method_new_str(jule::Str _1927_x) {
	return jule::new_struct<_1b9d678e5_Const>(new( std::nothrow ) _1b9d678e5_Const(jule::Any(_1927_x)));
}



inline jule::Ref<_1b9d678e5_Const> _1b9d678e5_Const::_static_method_new_f64(jule::F64 _2127_x) {
	return jule::new_struct<_1b9d678e5_Const>(new( std::nothrow ) _1b9d678e5_Const(jule::Any(_2127_x)));
}



inline jule::Ref<_1b9d678e5_Const> _1b9d678e5_Const::_static_method_new_nil(void) {
	return jule::new_struct<_1b9d678e5_Const>(new( std::nothrow ) _1b9d678e5_Const(jule::Any(nullptr)));
}



inline jule::I64 _1b9d678e5_Const::_method_read_i64(void) {
	if ((!((*this)._method_is_i64()))) {
		return 0LL;
	}
	return (*this)._field_data.operator jule::I64();
}



inline jule::U64 _1b9d678e5_Const::_method_read_u64(void) {
	if ((!((*this)._method_is_u64()))) {
		return 0LL;
	}
	return (*this)._field_data.operator jule::U64();
}



inline jule::Bool _1b9d678e5_Const::_method_read_bool(void) {
	if ((!((*this)._method_is_bool()))) {
		return false;
	}
	return (*this)._field_data.operator jule::Bool();
}



inline jule::Str _1b9d678e5_Const::_method_read_str(void) {
	if ((!((*this)._method_is_str()))) {
		return jule::Str("", 0);
	}
	return (*this)._field_data.operator jule::Str();
}



inline jule::F64 _1b9d678e5_Const::_method_read_f64(void) {
	if ((!((*this)._method_is_f64()))) {
		return 0LL;
	}
	return (*this)._field_data.operator jule::F64();
}



inline jule::I64 _1b9d678e5_Const::_method_as_i64(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::I64>())) { goto _case_end_4708474784; }
		_case_begin_4708474784:;
		{
			return (*this)._field_data.operator jule::I64();
		}
		goto _match_end_4708472256;
		_case_end_4708474784:;
		if (!(_match_expr.type_is<jule::U64>())) { goto _case_end_4708474352; }
		_case_begin_4708474352:;
		{
			return static_cast<jule::I64>((*this)._field_data.operator jule::U64());
		}
		goto _match_end_4708472256;
		_case_end_4708474352:;
		if (!(_match_expr.type_is<jule::F64>())) { goto _case_end_4708474464; }
		_case_begin_4708474464:;
		{
			return static_cast<jule::I64>((*this)._field_data.operator jule::F64());
		}
		goto _match_end_4708472256;
		_case_end_4708474464:;
		_case_begin_4708472896:;
		{
			return 0LL;
		}
		goto _match_end_4708472256;
		_case_end_4708472896:;
		_match_end_4708472256:;
	}
}



inline jule::U64 _1b9d678e5_Const::_method_as_u64(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::U64>())) { goto _case_end_4708481152; }
		_case_begin_4708481152:;
		{
			return (*this)._field_data.operator jule::U64();
		}
		goto _match_end_4708475168;
		_case_end_4708481152:;
		if (!(_match_expr.type_is<jule::I64>())) { goto _case_end_4708480720; }
		_case_begin_4708480720:;
		{
			return static_cast<jule::U64>((*this)._field_data.operator jule::I64());
		}
		goto _match_end_4708475168;
		_case_end_4708480720:;
		if (!(_match_expr.type_is<jule::F64>())) { goto _case_end_4708480832; }
		_case_begin_4708480832:;
		{
			return static_cast<jule::U64>((*this)._field_data.operator jule::F64());
		}
		goto _match_end_4708475168;
		_case_end_4708480832:;
		_case_begin_4708473008:;
		{
			return 0LL;
		}
		goto _match_end_4708475168;
		_case_end_4708473008:;
		_match_end_4708475168:;
	}
}



inline jule::F64 _1b9d678e5_Const::_method_as_f64(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::F64>())) { goto _case_end_4708488336; }
		_case_begin_4708488336:;
		{
			return (*this)._field_data.operator jule::F64();
		}
		goto _match_end_4708482848;
		_case_end_4708488336:;
		if (!(_match_expr.type_is<jule::I64>())) { goto _case_end_4708487904; }
		_case_begin_4708487904:;
		{
			return static_cast<jule::F64>((*this)._field_data.operator jule::I64());
		}
		goto _match_end_4708482848;
		_case_end_4708487904:;
		if (!(_match_expr.type_is<jule::U64>())) { goto _case_end_4708488016; }
		_case_begin_4708488016:;
		{
			return static_cast<jule::F64>((*this)._field_data.operator jule::U64());
		}
		goto _match_end_4708482848;
		_case_end_4708488016:;
		_case_begin_4708486512:;
		{
			return 0LL;
		}
		goto _match_end_4708482848;
		_case_end_4708486512:;
		_match_end_4708482848:;
	}
}



inline void _1b9d678e5_Const::_method_set_i64(jule::I64 _13930_x) {
	(*this)._field_data=jule::Any(_13930_x);
}



inline void _1b9d678e5_Const::_method_set_u64(jule::U64 _14130_x) {
	(*this)._field_data=jule::Any(_14130_x);
}



inline void _1b9d678e5_Const::_method_set_bool(jule::Bool _14331_x) {
	(*this)._field_data=jule::Any(_14331_x);
}



inline void _1b9d678e5_Const::_method_set_str(jule::Str _14530_x) {
	(*this)._field_data=jule::Any(_14530_x);
}



inline void _1b9d678e5_Const::_method_set_f64(jule::F64 _14730_x) {
	(*this)._field_data=jule::Any(_14730_x);
}



inline void _1b9d678e5_Const::_method_set_nil(void) {
	(*this)._field_data=jule::Any(nullptr);
}



inline jule::Bool _1b9d678e5_Const::_method_is_i64(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::I64>())) { goto _case_end_4708509456; }
		_case_begin_4708509456:;
		{
			return true;
		}
		goto _match_end_4708508192;
		_case_end_4708509456:;
		_case_begin_4708509152:;
		{
			return false;
		}
		goto _match_end_4708508192;
		_case_end_4708509152:;
		_match_end_4708508192:;
	}
}



inline jule::Bool _1b9d678e5_Const::_method_is_u64(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::U64>())) { goto _case_end_4708512304; }
		_case_begin_4708512304:;
		{
			return true;
		}
		goto _match_end_4708511088;
		_case_end_4708512304:;
		_case_begin_4708511872:;
		{
			return false;
		}
		goto _match_end_4708511088;
		_case_end_4708511872:;
		_match_end_4708511088:;
	}
}



inline jule::Bool _1b9d678e5_Const::_method_is_bool(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Bool>())) { goto _case_end_4708514912; }
		_case_begin_4708514912:;
		{
			return true;
		}
		goto _match_end_4708513696;
		_case_end_4708514912:;
		_case_begin_4708514480:;
		{
			return false;
		}
		goto _match_end_4708513696;
		_case_end_4708514480:;
		_match_end_4708513696:;
	}
}



inline jule::Bool _1b9d678e5_Const::_method_is_str(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Str>())) { goto _case_end_4708517520; }
		_case_begin_4708517520:;
		{
			return true;
		}
		goto _match_end_4708516304;
		_case_end_4708517520:;
		_case_begin_4708517088:;
		{
			return false;
		}
		goto _match_end_4708516304;
		_case_end_4708517088:;
		_match_end_4708516304:;
	}
}



inline jule::Bool _1b9d678e5_Const::_method_is_f64(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::F64>())) { goto _case_end_4708520128; }
		_case_begin_4708520128:;
		{
			return true;
		}
		goto _match_end_4708518912;
		_case_end_4708520128:;
		_case_begin_4708519696:;
		{
			return false;
		}
		goto _match_end_4708518912;
		_case_end_4708519696:;
		_match_end_4708518912:;
	}
}



inline jule::Bool _1b9d678e5_Const::_method_is_nil(void) {
	return (*this)._field_data == nullptr;
}



inline jule::Bool _1b9d678e5_Const::_method_are_same_types(_1b9d678e5_Const _19933_x) {
	{
		if (!(((*this)._method_is_i64() == _19933_x._method_is_i64()))) { goto _case_end_4708526352; }
		_case_begin_4708526352:;
		{
			return true;
		}
		goto _match_end_4708525760;
		_case_end_4708526352:;
		if (!(((*this)._method_is_u64() == _19933_x._method_is_u64()))) { goto _case_end_4708526464; }
		_case_begin_4708526464:;
		{
			return true;
		}
		goto _match_end_4708525760;
		_case_end_4708526464:;
		if (!(((*this)._method_is_f64() == _19933_x._method_is_f64()))) { goto _case_end_4708527632; }
		_case_begin_4708527632:;
		{
			return true;
		}
		goto _match_end_4708525760;
		_case_end_4708527632:;
		if (!(((*this)._method_is_bool() == _19933_x._method_is_bool()))) { goto _case_end_4708527744; }
		_case_begin_4708527744:;
		{
			return true;
		}
		goto _match_end_4708525760;
		_case_end_4708527744:;
		if (!(((*this)._method_is_str() == _19933_x._method_is_str()))) { goto _case_end_4708527856; }
		_case_begin_4708527856:;
		{
			return true;
		}
		goto _match_end_4708525760;
		_case_end_4708527856:;
		if (!(((*this)._method_is_nil() == _19933_x._method_is_nil()))) { goto _case_end_4708527968; }
		_case_begin_4708527968:;
		{
			return true;
		}
		goto _match_end_4708525760;
		_case_end_4708527968:;
		_case_begin_4708525936:;
		{
			return false;
		}
		goto _match_end_4708525760;
		_case_end_4708525936:;
		_match_end_4708525760:;
	}
}



inline jule::Bool _1b9d678e5_Const::_method_and(_1b9d678e5_Const _21722_x) {
	{
		if (!(((*this)._method_is_bool() && _21722_x._method_is_bool()))) { goto _case_end_4708538256; }
		_case_begin_4708538256:;
		{
			return (*this)._method_read_bool() && _21722_x._method_read_bool();
		}
		goto _match_end_4708537776;
		_case_end_4708538256:;
		_case_begin_4708537952:;
		{
			return false;
		}
		goto _match_end_4708537776;
		_case_end_4708537952:;
		_match_end_4708537776:;
	}
}



inline jule::Bool _1b9d678e5_Const::_method_or(_1b9d678e5_Const _22921_x) {
	{
		if (!(((*this)._method_is_bool() && _22921_x._method_is_bool()))) { goto _case_end_4708544080; }
		_case_begin_4708544080:;
		{
			return (*this)._method_read_bool() || _22921_x._method_read_bool();
		}
		goto _match_end_4708543600;
		_case_end_4708544080:;
		_case_begin_4708543776:;
		{
			return false;
		}
		goto _match_end_4708543600;
		_case_end_4708543776:;
		_match_end_4708543600:;
	}
}



inline jule::Bool _1b9d678e5_Const::_method_eqs(_1b9d678e5_Const _24122_x) {
	{
		if (!(((*this)._method_is_nil()))) { goto _case_end_4708549856; }
		_case_begin_4708549856:;
		{
			return _24122_x._method_is_nil();
		}
		goto _match_end_4708549264;
		_case_end_4708549856:;
		if (!(((*this)._method_is_bool()))) { goto _case_end_4708549968; }
		_case_begin_4708549968:;
		{
			return _24122_x._method_is_bool() && ((*this)._method_read_bool() == _24122_x._method_read_bool());
		}
		goto _match_end_4708549264;
		_case_end_4708549968:;
		if (!(((*this)._method_is_str()))) { goto _case_end_4708551136; }
		_case_begin_4708551136:;
		{
			return _24122_x._method_is_str() && ((*this)._method_read_str() == _24122_x._method_read_str());
		}
		goto _match_end_4708549264;
		_case_end_4708551136:;
		if (!(((*this)._method_is_i64()))) { goto _case_end_4708551248; }
		_case_begin_4708551248:;
		{
			return (*this)._method_read_i64() == _24122_x._method_as_i64();
		}
		goto _match_end_4708549264;
		_case_end_4708551248:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4708551360; }
		_case_begin_4708551360:;
		{
			return (*this)._method_read_u64() == _24122_x._method_as_u64();
		}
		goto _match_end_4708549264;
		_case_end_4708551360:;
		if (!(((*this)._method_is_f64()))) { goto _case_end_4708551472; }
		_case_begin_4708551472:;
		{
			return (*this)._method_read_f64() == _24122_x._method_as_f64();
		}
		goto _match_end_4708549264;
		_case_end_4708551472:;
		_case_begin_4708549440:;
		{
			return false;
		}
		goto _match_end_4708549264;
		_case_end_4708549440:;
		_match_end_4708549264:;
	}
}



inline jule::Bool _1b9d678e5_Const::_method_lt(_1b9d678e5_Const _27321_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4708565024; }
		_case_begin_4708565024:;
		{
			return (*this)._method_read_i64() < _27321_x._method_as_i64();
		}
		goto _match_end_4708564480;
		_case_end_4708565024:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4708565136; }
		_case_begin_4708565136:;
		{
			return (*this)._method_read_u64() < _27321_x._method_as_u64();
		}
		goto _match_end_4708564480;
		_case_end_4708565136:;
		if (!(((*this)._method_is_f64()))) { goto _case_end_4708565248; }
		_case_begin_4708565248:;
		{
			return (*this)._method_read_f64() < _27321_x._method_as_f64();
		}
		goto _match_end_4708564480;
		_case_end_4708565248:;
		_case_begin_4708564656:;
		{
			return false;
		}
		goto _match_end_4708564480;
		_case_end_4708564656:;
		_match_end_4708564480:;
	}
}



inline jule::Bool _1b9d678e5_Const::_method_gt(_1b9d678e5_Const _29621_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4708573680; }
		_case_begin_4708573680:;
		{
			return (*this)._method_read_i64() > _29621_x._method_as_i64();
		}
		goto _match_end_4708573136;
		_case_end_4708573680:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4708573792; }
		_case_begin_4708573792:;
		{
			return (*this)._method_read_u64() > _29621_x._method_as_u64();
		}
		goto _match_end_4708573136;
		_case_end_4708573792:;
		if (!(((*this)._method_is_f64()))) { goto _case_end_4708573904; }
		_case_begin_4708573904:;
		{
			return (*this)._method_read_f64() > _29621_x._method_as_f64();
		}
		goto _match_end_4708573136;
		_case_end_4708573904:;
		_case_begin_4708573312:;
		{
			return false;
		}
		goto _match_end_4708573136;
		_case_end_4708573312:;
		_match_end_4708573136:;
	}
}



inline jule::Bool _1b9d678e5_Const::_method_add(_1b9d678e5_Const _31826_x) {
	{
		if (!(((*this)._method_is_str()))) { goto _case_end_4708582672; }
		_case_begin_4708582672:;
		{
			if ((!(_31826_x._method_is_str()))) {
				return false;
			}
			(*this)._method_set_str((*this)._method_read_str() + _31826_x._method_read_str());
		}
		goto _match_end_4708582112;
		_case_end_4708582672:;
		if (!(((*this)._method_is_f64()))) { goto _case_end_4708582784; }
		_case_begin_4708582784:;
		{
			(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_read_f64() + _31826_x._method_as_f64()));
		}
		goto _match_end_4708582112;
		_case_end_4708582784:;
		if (!(((*this)._method_is_i64()))) { goto _case_end_4708582896; }
		_case_begin_4708582896:;
		{
			if (_31826_x._method_is_f64()) {
				(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_as_f64() + _31826_x._method_read_f64()));
			} else {
				(*this)._method_set_i64(static_cast<jule::I64>((*this)._method_read_i64() + _31826_x._method_as_i64()));
			}
		}
		goto _match_end_4708582112;
		_case_end_4708582896:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4708583984; }
		_case_begin_4708583984:;
		{
			if (_31826_x._method_is_f64()) {
				(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_as_f64() + _31826_x._method_read_f64()));
			} else {
				(*this)._method_set_u64(static_cast<jule::U64>((*this)._method_read_u64() + _31826_x._method_as_u64()));
			}
		}
		goto _match_end_4708582112;
		_case_end_4708583984:;
		_case_begin_4708582288:;
		{
			return false;
		}
		goto _match_end_4708582112;
		_case_end_4708582288:;
		_match_end_4708582112:;
	}
	return true;
}



inline jule::Bool _1b9d678e5_Const::_method_sub(_1b9d678e5_Const _35126_x) {
	{
		if (!(((*this)._method_is_f64()))) { goto _case_end_4708602832; }
		_case_begin_4708602832:;
		{
			(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_read_f64() - _35126_x._method_as_f64()));
		}
		goto _match_end_4708602288;
		_case_end_4708602832:;
		if (!(((*this)._method_is_i64()))) { goto _case_end_4708602944; }
		_case_begin_4708602944:;
		{
			if (_35126_x._method_is_f64()) {
				(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_as_f64() - _35126_x._method_read_f64()));
			} else {
				(*this)._method_set_i64(static_cast<jule::I64>((*this)._method_read_i64() - _35126_x._method_as_i64()));
			}
		}
		goto _match_end_4708602288;
		_case_end_4708602944:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4708603056; }
		_case_begin_4708603056:;
		{
			if (_35126_x._method_is_f64()) {
				(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_as_f64() - _35126_x._method_read_f64()));
			} else {
				(*this)._method_set_u64(static_cast<jule::U64>((*this)._method_read_u64() - _35126_x._method_as_u64()));
			}
		}
		goto _match_end_4708602288;
		_case_end_4708603056:;
		_case_begin_4708602464:;
		{
			return false;
		}
		goto _match_end_4708602288;
		_case_end_4708602464:;
		_match_end_4708602288:;
	}
	return true;
}



inline jule::Bool _1b9d678e5_Const::_method_mul(_1b9d678e5_Const _37826_x) {
	{
		if (!(((*this)._method_is_f64()))) { goto _case_end_4708619760; }
		_case_begin_4708619760:;
		{
			(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_read_f64() * _37826_x._method_as_f64()));
		}
		goto _match_end_4708619216;
		_case_end_4708619760:;
		if (!(((*this)._method_is_i64()))) { goto _case_end_4708619872; }
		_case_begin_4708619872:;
		{
			if (_37826_x._method_is_f64()) {
				(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_as_f64() * _37826_x._method_read_f64()));
			} else {
				(*this)._method_set_i64(static_cast<jule::I64>((*this)._method_read_i64() * _37826_x._method_as_i64()));
			}
		}
		goto _match_end_4708619216;
		_case_end_4708619872:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4708619984; }
		_case_begin_4708619984:;
		{
			if (_37826_x._method_is_f64()) {
				(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_as_f64() * _37826_x._method_read_f64()));
			} else {
				(*this)._method_set_u64(static_cast<jule::U64>((*this)._method_read_u64() * _37826_x._method_as_u64()));
			}
		}
		goto _match_end_4708619216;
		_case_end_4708619984:;
		_case_begin_4708619392:;
		{
			return false;
		}
		goto _match_end_4708619216;
		_case_end_4708619392:;
		_match_end_4708619216:;
	}
	return true;
}



inline jule::Bool _1b9d678e5_Const::_method_div(_1b9d678e5_Const _40926_x) {
	{
		if (!(((*this)._method_is_f64()))) { goto _case_end_4708636304; }
		_case_begin_4708636304:;
		{
			jule::F64 _41217_l = _40926_x._method_as_f64();
			if (_41217_l == 0LL) {
				return false;
			}
			(*this)._method_set_f64(static_cast<jule::F64>(jule::div((*this)._method_read_f64(),_41217_l)));
		}
		goto _match_end_4708635760;
		_case_end_4708636304:;
		if (!(((*this)._method_is_i64()))) { goto _case_end_4708636416; }
		_case_begin_4708636416:;
		{
			jule::F64 _41917_l = _40926_x._method_as_f64();
			if (_41917_l == 0LL) {
				return false;
			}
			(*this)._method_set_f64(static_cast<jule::F64>(jule::div((*this)._method_as_f64(),_41917_l)));
		}
		goto _match_end_4708635760;
		_case_end_4708636416:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4708636528; }
		_case_begin_4708636528:;
		{
			jule::F64 _42617_l = _40926_x._method_as_f64();
			if (_42617_l == 0LL) {
				return false;
			}
			(*this)._method_set_f64(static_cast<jule::F64>(jule::div((*this)._method_as_f64(),_42617_l)));
		}
		goto _match_end_4708635760;
		_case_end_4708636528:;
		_case_begin_4708635936:;
		{
			return false;
		}
		goto _match_end_4708635760;
		_case_end_4708635936:;
		_match_end_4708635760:;
	}
	return true;
}



inline jule::Bool _1b9d678e5_Const::_method_mod(_1b9d678e5_Const _44126_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4708652736; }
		_case_begin_4708652736:;
		{
			jule::I64 _44417_l = _44126_x._method_as_i64();
			if (_44417_l == 0LL) {
				return false;
			}
			(*this)._method_set_i64(static_cast<jule::I64>(jule::mod((*this)._method_read_i64(),_44417_l)));
		}
		goto _match_end_4708652208;
		_case_end_4708652736:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4708652848; }
		_case_begin_4708652848:;
		{
			jule::U64 _45117_l = _44126_x._method_as_u64();
			if (_45117_l == 0LL) {
				return false;
			}
			(*this)._method_set_u64(static_cast<jule::U64>(jule::mod((*this)._method_read_u64(),_45117_l)));
		}
		goto _match_end_4708652208;
		_case_end_4708652848:;
		_case_begin_4708652384:;
		{
			return false;
		}
		goto _match_end_4708652208;
		_case_end_4708652384:;
		_match_end_4708652208:;
	}
	return true;
}



inline jule::Bool _1b9d678e5_Const::_method_bitwise_and(_1b9d678e5_Const _46534_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4708664976; }
		_case_begin_4708664976:;
		{
			(*this)._method_set_i64(static_cast<jule::I64>((*this)._method_read_i64() & _46534_x._method_as_i64()));
		}
		goto _match_end_4708664448;
		_case_end_4708664976:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4708665088; }
		_case_begin_4708665088:;
		{
			(*this)._method_set_u64(static_cast<jule::U64>((*this)._method_read_u64() & _46534_x._method_as_u64()));
		}
		goto _match_end_4708664448;
		_case_end_4708665088:;
		_case_begin_4708664624:;
		{
			return false;
		}
		goto _match_end_4708664448;
		_case_end_4708664624:;
		_match_end_4708664448:;
	}
	return true;
}



inline jule::Bool _1b9d678e5_Const::_method_bitwise_or(_1b9d678e5_Const _48133_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4708673728; }
		_case_begin_4708673728:;
		{
			(*this)._method_set_i64(static_cast<jule::I64>((*this)._method_read_i64() | _48133_x._method_as_i64()));
		}
		goto _match_end_4708673200;
		_case_end_4708673728:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4708673840; }
		_case_begin_4708673840:;
		{
			(*this)._method_set_u64(static_cast<jule::U64>((*this)._method_read_u64() | _48133_x._method_as_u64()));
		}
		goto _match_end_4708673200;
		_case_end_4708673840:;
		_case_begin_4708673376:;
		{
			return false;
		}
		goto _match_end_4708673200;
		_case_end_4708673376:;
		_match_end_4708673200:;
	}
	return true;
}



inline jule::Bool _1b9d678e5_Const::_method_xor(_1b9d678e5_Const _49726_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4708682352; }
		_case_begin_4708682352:;
		{
			(*this)._method_set_i64(static_cast<jule::I64>((*this)._method_read_i64() ^ _49726_x._method_as_i64()));
		}
		goto _match_end_4708681824;
		_case_end_4708682352:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4708682464; }
		_case_begin_4708682464:;
		{
			(*this)._method_set_u64(static_cast<jule::U64>((*this)._method_read_u64() ^ _49726_x._method_as_u64()));
		}
		goto _match_end_4708681824;
		_case_end_4708682464:;
		_case_begin_4708682000:;
		{
			return false;
		}
		goto _match_end_4708681824;
		_case_end_4708682000:;
		_match_end_4708681824:;
	}
	return true;
}



inline jule::Bool _1b9d678e5_Const::_method_lshift(_1b9d678e5_Const _51329_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4708691104; }
		_case_begin_4708691104:;
		{
			jule::I64 _51617_l = (*this)._method_as_i64();
			if (_51617_l < 0LL) {
				jule::U64 _51821_r = _51329_x._method_as_u64();
				(*this)._method_set_i64(static_cast<jule::I64>(_51617_l << _51821_r));
			} else {
				_1b9d678e5_lshift_unsig((*this),_51329_x);
			}
		}
		goto _match_end_4708690576;
		_case_end_4708691104:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4708691216; }
		_case_begin_4708691216:;
		{
			_1b9d678e5_lshift_unsig((*this),_51329_x);
		}
		goto _match_end_4708690576;
		_case_end_4708691216:;
		_case_begin_4708690752:;
		{
			return false;
		}
		goto _match_end_4708690576;
		_case_end_4708690752:;
		_match_end_4708690576:;
	}
	return true;
}



inline jule::Bool _1b9d678e5_Const::_method_rshift(_1b9d678e5_Const _53629_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4708701664; }
		_case_begin_4708701664:;
		{
			jule::I64 _53917_l = (*this)._method_as_i64();
			if (_53917_l < 0LL) {
				jule::U64 _54121_r = _53629_x._method_as_u64();
				(*this)._method_set_i64(static_cast<jule::I64>(_53917_l >> _54121_r));
			} else {
				_1b9d678e5_rshift_unsig((*this),_53629_x);
			}
		}
		goto _match_end_4708701136;
		_case_end_4708701664:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4708701776; }
		_case_begin_4708701776:;
		{
			_1b9d678e5_rshift_unsig((*this),_53629_x);
		}
		goto _match_end_4708701136;
		_case_end_4708701776:;
		_case_begin_4708701312:;
		{
			return false;
		}
		goto _match_end_4708701136;
		_case_end_4708701312:;
		_match_end_4708701136:;
	}
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b9d678e5_Const &_Src) {
	_Stream << "Const{";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d21c0b59_FieldIns &_Src) {
	_Stream << "FieldIns{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1d21c0b59_StructIns::_method_to_str(void) {
	jule::Str _21417_kind = jule::Str("", 0);
	_21417_kind+=(*this)._field_decl->_field_ident;
	if ((*this)._field_generics.len() > 0LL) {
		_21417_kind+=jule::Str("[", 1);
		{
			auto _range_expr = (*this)._field_generics;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_1b951b088_TypeKind> _1d21c0b59_g = *_range_begin;
				_iter_begin_4711209232:;
				{
					_21417_kind+=_1d21c0b59_g->_method_to_str();
					_21417_kind+=jule::Str(",", 1);
				}
				_iter_next_4711209232:;
				++_range_begin;
				if (_range_begin != _range_end) { _1d21c0b59_g = *_range_begin; goto _iter_begin_4711209232; }
				_iter_end_4711209232:;
			}
		}
		_21417_kind=_21417_kind.slice(0LL,static_cast<jule::Int>(_21417_kind.len() - 1LL));
		_21417_kind+=jule::Str("]", 1);
	}
	return _21417_kind;
}



inline jule::Bool _1d21c0b59_StructIns::_method_equals(jule::Ref<_1b951b088_TypeKind> _22921_other) {
	jule::Ref<_1d21c0b59_StructIns> _23013_s = (_22921_other).alloc->_method_strct();
	if ((!(jule::real(_23013_s)))) {
		return false;
	}
	if (((*this)._field_decl).alloc != (_23013_s->_field_decl).alloc) {
		return false;
	}
	if ((*this)._field_generics.len() != _23013_s->_field_generics.len()) {
		return false;
	}
	jule::Int _24317_i = 0LL;
	_iter_begin_4711218640:;
	if (!(_24317_i < (*this)._field_generics.len())) { goto _iter_end_4711218640; }
	{
		if ((!((*this)._field_generics[static_cast<jule::Int>(_24317_i)]->_method_equals(_23013_s->_field_generics[static_cast<jule::Int>(_24317_i)])))) {
			return false;
		}
	}
	_iter_next_4711218640:;
	(_24317_i)++;
	goto _iter_begin_4711218640;
	_iter_end_4711218640:;
	return true;
}



inline jule::Ref<_1d21d97ee_Fn> _1d21c0b59_StructIns::_method_find_method(jule::Str _25734_ident,jule::Bool _25746_statically) {
	{
		auto _range_expr = (*this)._field_methods;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d21d97ee_Fn> _1d21c0b59_f = *_range_begin;
			_iter_begin_4711230512:;
			{
				if ((_1d21c0b59_f->_field_statically == _25746_statically) && (_1d21c0b59_f->_field_ident == _25734_ident)) {
					return _1d21c0b59_f;
				}
			}
			_iter_next_4711230512:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d21c0b59_f = *_range_begin; goto _iter_begin_4711230512; }
			_iter_end_4711230512:;
		}
	}
	return jule::new_ref<_1d21d97ee_Fn>();
}



inline jule::Ref<_1d21c0b59_FieldIns> _1d21c0b59_StructIns::_method_find_field(jule::Str _26833_ident) {
	{
		auto _range_expr = (*this)._field_fields;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d21c0b59_FieldIns> _1d21c0b59_f = *_range_begin;
			_iter_begin_4711236112:;
			{
				if (_1d21c0b59_f->_field_decl->_field_ident == _26833_ident) {
					return _1d21c0b59_f;
				}
			}
			_iter_next_4711236112:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d21c0b59_f = *_range_begin; goto _iter_begin_4711236112; }
			_iter_end_4711236112:;
		}
	}
	return jule::new_ref<_1d21c0b59_FieldIns>();
}







std::ostream &operator<<(std::ostream &_Stream, const _1d21c0b59_StructIns &_Src) {
	_Stream << "StructIns{";
	_Stream << "checked:" << _Src._field_checked << ", ";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "references:" << _Src._field_references;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d21d97ee_RetType &_Src) {
	_Stream << "RetType{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "idents:" << _Src._field_idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1d21d97ee_ParamIns::_method_to_str(void) {
	jule::Str _18117_s = jule::Str("", 0);
	if ((*this)._field_decl->_field_mutable) {
		_18117_s+=jule::Str("mut ", 4);
	}
	if ((*this)._field_decl->_field_reference) {
		_18117_s+=jule::Str("&_:", 3);
	}
	if ((*this)._field_decl->_method_is_self()) {
		if ((*this)._field_decl->_method_is_ref()) {
			_18117_s+=jule::Str("&", 1);
		}
		_18117_s+=jule::Str("self", 4);
		return _18117_s;
	}
	if ((*this)._field_decl->_field_variadic) {
		_18117_s+=jule::Str("...", 3);
	}
	if (jule::real((*this)._field_kind)) {
		_18117_s+=(*this)._field_kind->_method_to_str();
	}
	return _18117_s;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d21d97ee_ParamIns &_Src) {
	_Stream << "ParamIns{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1d21d97ee_FnIns::_method_to_str(void) {
	
	return (*this)._method_get_kind_str(false);
}



inline jule::Bool _1d21d97ee_FnIns::_method_equals(jule::Ref<_1b951b088_TypeKind> _23621_other) {
	jule::Ref<_1d21d97ee_FnIns> _23713_f = (_23621_other).alloc->_method_fnc();
	if ((!(jule::real(_23713_f)))) {
		return false;
	}
	if ((*this)._field_decl->_field_statically != _23713_f->_field_decl->_field_statically) {
		return false;
	}
	if ((*this)._field_decl->_field_unsafety != _23713_f->_field_decl->_field_unsafety) {
		return false;
	}
	if ((*this)._field_generics.len() != _23713_f->_field_generics.len()) {
		return false;
	}
	if ((*this)._field_decl->_method_is_void() != _23713_f->_field_decl->_method_is_void()) {
		return false;
	}
	jule::Int _25817_i = 0LL;
	_iter_begin_4711341888:;
	if (!(_25817_i < (*this)._field_generics.len())) { goto _iter_end_4711341888; }
	{
		if ((!((*this)._field_generics[static_cast<jule::Int>(_25817_i)]->_method_equals(_23713_f->_field_generics[static_cast<jule::Int>(_25817_i)])))) {
			return false;
		}
	}
	_iter_next_4711341888:;
	(_25817_i)++;
	goto _iter_begin_4711341888;
	_iter_end_4711341888:;
	jule::Fn<jule::Bool(jule::Ref<_1d21d97ee_ParamIns>,jule::Ref<_1d21d97ee_ParamIns>)> _26513_check_params = jule::Fn<jule::Bool(jule::Ref<_1d21d97ee_ParamIns>,jule::Ref<_1d21d97ee_ParamIns>)>([=](jule::Ref<_1d21d97ee_ParamIns> _26531_p1,jule::Ref<_1d21d97ee_ParamIns> _26546_p2) mutable -> jule::Bool {
		if (_26531_p1->_field_decl->_field_mutable != _26546_p2->_field_decl->_field_mutable) {
			return false;
		}
		if (_26531_p1->_field_decl->_method_is_self()) {
			if ((!(_26546_p2->_field_decl->_method_is_self()))) {
				return false;
			}
			if (_26531_p1->_field_decl->_method_is_ref() != _26546_p2->_field_decl->_method_is_ref()) {
				return false;
			}
			return true;
		}
		if (_26531_p1->_field_decl->_field_reference != _26546_p2->_field_decl->_field_reference) {
			return false;
		}
		if (_26531_p1->_field_decl->_field_variadic != _26546_p2->_field_decl->_field_variadic) {
			return false;
		}
		return _26531_p1->_field_kind->_method_equals(_26546_p2->_field_kind);
	});
	_25817_i=0LL;
	_iter_begin_4711351136:;
	if (!(_25817_i < (*this)._field_params.len())) { goto _iter_end_4711351136; }
	{
		if ((!(_26513_check_params((*this)._field_params[static_cast<jule::Int>(_25817_i)],_23713_f->_field_params[static_cast<jule::Int>(_25817_i)])))) {
			return false;
		}
	}
	_iter_next_4711351136:;
	(_25817_i)++;
	goto _iter_begin_4711351136;
	_iter_end_4711351136:;
	if ((!((*this)._field_decl->_method_is_void()))) {
		if ((!((*this)._field_result->_method_equals(_23713_f->_field_result)))) {
			return false;
		}
	}
	return true;
}



inline jule::Bool _1d21d97ee_FnIns::_method_is_builtin(void) {
	return (*this)._field_caller != nullptr;
}



inline jule::Bool _1d21d97ee_FnIns::_method_is_anon(void) {
	return (*this)._field_anon || (jule::real((*this)._field_decl) && (*this)._field_decl->_method_is_anon());
}



inline jule::Str _1d21d97ee_FnIns::_method_get_kind_str(jule::Bool _32031_ident) {
	jule::Str _32117_s = jule::Str("", 0);
	if ((*this)._field_decl->_field_statically) {
		_32117_s+=jule::Str("static ", 7);
	}
	if ((*this)._field_decl->_field_unsafety) {
		_32117_s+=jule::Str("unsafe ", 7);
	}
	_32117_s+=jule::Str("fn", 2);
	if (_32031_ident && jule::real((*this)._field_decl)) {
		_32117_s+=jule::Str(" ", 1) + (*this)._field_decl->_field_ident;
	}
	if ((*this)._field_generics.len() > 0LL) {
		_32117_s+=jule::Str("[", 1);
		{
			auto _range_expr = (*this)._field_generics;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Int _1d21d97ee_i = 0;
				jule::Ref<_1b951b088_TypeKind> _1d21d97ee_t = *_range_begin;
				_iter_begin_4711388976:;
				{
					_32117_s+=_1d21d97ee_t->_method_to_str();
					if ((_1d21d97ee_i + 1LL) < (*this)._field_generics.len()) {
						_32117_s+=jule::Str(",", 1);
					}
				}
				_iter_next_4711388976:;
				++_range_begin;
				if (_range_begin != _range_end) { ++_1d21d97ee_i; _1d21d97ee_t = *_range_begin; goto _iter_begin_4711388976; }
				_iter_end_4711388976:;
			}
		}
		_32117_s+=jule::Str("]", 1);
	} else if ((*this)._field_decl->_field_generics.len() > 0LL) {
		_32117_s+=jule::Str("[", 1);
		{
			auto _range_expr = (*this)._field_decl->_field_generics;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Int _1d21d97ee_i = 0;
				jule::Ref<_1d1e5192e_GenericDecl> _1d21d97ee_g = *_range_begin;
				_iter_begin_4711396576:;
				{
					_32117_s+=_1d21d97ee_g->_field_ident;
					if ((_1d21d97ee_i + 1LL) < (*this)._field_decl->_field_generics.len()) {
						_32117_s+=jule::Str(",", 1);
					}
				}
				_iter_next_4711396576:;
				++_range_begin;
				if (_range_begin != _range_end) { ++_1d21d97ee_i; _1d21d97ee_g = *_range_begin; goto _iter_begin_4711396576; }
				_iter_end_4711396576:;
			}
		}
		_32117_s+=jule::Str("]", 1);
	}
	_32117_s+=jule::Str("(", 1);
	jule::I64 _35813_n = (*this)._field_params.len();
	if (_35813_n > 0LL) {
		{
			auto _range_expr = (*this)._field_params;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_1d21d97ee_ParamIns> _1d21d97ee_p = *_range_begin;
				_iter_begin_4711403824:;
				{
					_32117_s+=_1d21d97ee_p->_method_to_str();
					_32117_s+=jule::Str(",", 1);
				}
				_iter_next_4711403824:;
				++_range_begin;
				if (_range_begin != _range_end) { _1d21d97ee_p = *_range_begin; goto _iter_begin_4711403824; }
				_iter_end_4711403824:;
			}
		}
		_32117_s=_32117_s.slice(0LL,static_cast<jule::Int>(_32117_s.len() - 1LL));
	}
	_32117_s+=jule::Str(")", 1);
	if ((!((*this)._field_decl->_method_is_void()))) {
		_32117_s+=jule::Str(":", 1);
		_32117_s+=(*this)._field_result->_method_to_str();
	}
	return _32117_s;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d21d97ee_FnIns &_Src) {
	_Stream << "FnIns{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "params:" << _Src._field_params << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "references:" << _Src._field_references << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "caller:" << _Src._field_caller << ", ";
	_Stream << "reloaded:" << _Src._field_reloaded << ", ";
	_Stream << "anon:" << _Src._field_anon;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_1b8b10cbb_ReferenceStack> _1b8b10cbb_ReferenceStack::_static_method_new(void) {
	return jule::new_struct<_1b8b10cbb_ReferenceStack>(new( std::nothrow ) _1b8b10cbb_ReferenceStack());
}



inline jule::Int _1b8b10cbb_ReferenceStack::_method_len(void) {
	return static_cast<jule::I64>((*this)._field_buffer.len());
}



inline jule::Any _1b8b10cbb_ReferenceStack::_method_at(jule::Int _5825_i) {
	return (*this)._field_buffer[static_cast<jule::Int>(_5825_i)];
}



inline void _1b8b10cbb_ReferenceStack::_method_push(jule::Any _6331_ref) {
	(*this)._field_buffer=jule::append((*this)._field_buffer,jule::Slice<jule::Any>({_6331_ref}));
}



inline jule::Bool _1b8b10cbb_ReferenceStack::_method_exist_0(jule::Ref<_1b919cb2c_Var> _6827_t) {
	{
		auto _range_expr = (*this)._field_buffer;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Any _1b8b10cbb_ref = *_range_begin;
			_iter_begin_4715106928:;
			{
				{
					auto _match_expr{ _1b8b10cbb_ref };
					if (!(_match_expr.type_is<jule::Ref<_1b919cb2c_Var>>())) { goto _case_end_4715108800; }
					_case_begin_4715108800:;
					{
						if ((_1b8b10cbb_ref.operator jule::Ref<_1b919cb2c_Var>()).alloc == (_6827_t).alloc) {
							return true;
						}
					}
					goto _match_end_4715108240;
					_case_end_4715108800:;
					_match_end_4715108240:;
				}
			}
			_iter_next_4715106928:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b8b10cbb_ref = *_range_begin; goto _iter_begin_4715106928; }
			_iter_end_4715106928:;
		}
	}
	return false;
}

inline jule::Bool _1b8b10cbb_ReferenceStack::_method_exist_1(jule::Ref<_1d21d97ee_FnIns> _6827_t) {
	{
		auto _range_expr = (*this)._field_buffer;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Any _1b8b10cbb_ref = *_range_begin;
			_iter_begin_4715118464:;
			{
				{
					auto _match_expr{ _1b8b10cbb_ref };
					if (!(_match_expr.type_is<jule::Ref<_1d21d97ee_FnIns>>())) { goto _case_end_4715120336; }
					_case_begin_4715120336:;
					{
						if ((_1b8b10cbb_ref.operator jule::Ref<_1d21d97ee_FnIns>()).alloc == (_6827_t).alloc) {
							return true;
						}
					}
					goto _match_end_4715119776;
					_case_end_4715120336:;
					_match_end_4715119776:;
				}
			}
			_iter_next_4715118464:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b8b10cbb_ref = *_range_begin; goto _iter_begin_4715118464; }
			_iter_end_4715118464:;
		}
	}
	return false;
}

inline jule::Bool _1b8b10cbb_ReferenceStack::_method_exist_2(jule::Ref<_1d21c0b59_StructIns> _6827_t) {
	{
		auto _range_expr = (*this)._field_buffer;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Any _1b8b10cbb_ref = *_range_begin;
			_iter_begin_4715159104:;
			{
				{
					auto _match_expr{ _1b8b10cbb_ref };
					if (!(_match_expr.type_is<jule::Ref<_1d21c0b59_StructIns>>())) { goto _case_end_4715160976; }
					_case_begin_4715160976:;
					{
						if ((_1b8b10cbb_ref.operator jule::Ref<_1d21c0b59_StructIns>()).alloc == (_6827_t).alloc) {
							return true;
						}
					}
					goto _match_end_4715160416;
					_case_end_4715160976:;
					_match_end_4715160416:;
				}
			}
			_iter_next_4715159104:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b8b10cbb_ref = *_range_begin; goto _iter_begin_4715159104; }
			_iter_end_4715159104:;
		}
	}
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b8b10cbb_ReferenceStack &_Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_1b8b10cbb_SymbolBuilder> _1b8b10cbb_SymbolBuilder::_method_get_root(void) {
	jule::Ref<_1b8b10cbb_SymbolBuilder> _31417_root = this->self;
	_iter_begin_4711419456:;
	if (!(jule::real(_31417_root->_field_owner))) { goto _iter_end_4711419456; }
	{
		_31417_root=_31417_root->_field_owner;
	}
	_iter_next_4711419456:;
	goto _iter_begin_4711419456;
	_iter_end_4711419456:;
	return _31417_root;
}



inline void _1b8b10cbb_SymbolBuilder::_method_push_err(_1d1da4277_Token& _32128_token,jule::Str _32142_fmt,jule::Slice<jule::Any> _32155_args) {
	(*this)._field_errors=jule::append((*this)._field_errors,jule::Slice<_1d0557e9e_Log>({_1b912748b_compiler_err(_32128_token,true,_32142_fmt,_32155_args)}));
}



inline void _1b8b10cbb_SymbolBuilder::_method_push_err_text(_1d1da4277_Token& _32533_token,jule::Str _32547_fmt,jule::Slice<jule::Any> _32560_args) {
	(*this)._field_errors=jule::append((*this)._field_errors,jule::Slice<_1d0557e9e_Log>({_1b912748b_compiler_err(_32533_token,false,_32547_fmt,_32560_args)}));
}



inline void _1b8b10cbb_SymbolBuilder::_method_push_suggestion(jule::Str _33034_fmt,jule::Slice<jule::Any> _33047_args) {
	{
		_1b912748b_push_suggestion((&((*this)._field_errors[static_cast<jule::Int>((*this)._field_errors.len() - 1LL)])),_33034_fmt,_33047_args);
	}
}



inline jule::Bool _1b8b10cbb_SymbolBuilder::_method_check_cpp_use_decl_path(jule::Ref<_1d1e5192e_UseDecl>& _33443_decl) {
	jule::Bool _33461_ok = jule::Bool();
	if (_1d05571bd_is_std_header_path(_33443_decl->_field_link_path)) {
		_33461_ok = true;
		return _33461_ok;
	}
	jule::Str _33913_ext = _1d0680a33_ext(_33443_decl->_field_link_path);
	if ((!(_1d05571bd_is_valid_header_ext(_33913_ext))) && (!(_1d05571bd_is_valid_cpp_ext(_33913_ext)))) {
		(*this)._method_push_err(_33443_decl->_field_token,jule::Str("invalid C++ extension: @", 24),jule::Slice<jule::Any>({jule::Any(_33913_ext)}));
		_33461_ok = false;
		return _33461_ok;
	}
	jule::Ref<_1d2151920_Status> _34514_info;
	jule::Int _34520_err;
	std::tie(_34514_info,_34520_err) = _1d1edea66_stat(_33443_decl->_field_link_path);
	if ((_34520_err != 0LLU) || _34514_info->_method_is_dir()) {
		(*this)._method_push_err(_33443_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_33443_decl->_field_link_path)}));
		_33461_ok = false;
		return _33461_ok;
	}
	_33461_ok = true;
	return _33461_ok;
}



inline jule::Ref<_1b8e0c01d_ImportInfo> _1b8b10cbb_SymbolBuilder::_method_build_cpp_header_import(jule::Ref<_1d1e5192e_UseDecl>& _35547_decl) {
	jule::Str _35617_path = _35547_decl->_field_link_path;
	if ((!(_1d05571bd_is_std_header_path(_35547_decl->_field_link_path)))) {
		jule::Bool _35921_ok = (*this)._method_check_cpp_use_decl_path(_35547_decl);
		if ((!(_35921_ok))) {
			return jule::new_ref<_1b8e0c01d_ImportInfo>();
		}
		std::tie(_35617_path,_35921_ok) = _1d0680a33_abs(_35547_decl->_field_link_path);
		if ((!(_35921_ok))) {
			(*this)._method_push_err(_35547_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_35547_decl->_field_link_path)}));
		}
	}
	return jule::new_struct<_1b8e0c01d_ImportInfo>(new( std::nothrow ) _1b8e0c01d_ImportInfo(_35547_decl->_field_token,_35617_path,_35547_decl->_field_link_path,jule::Str("", 0),jule::Str(),jule::Bool(),true,false,jule::Bool(),jule::Slice<_1d1da4277_Token>(),jule::new_ref<_1b8e0c01d_Package>()));
}



inline jule::Ref<_1b8e0c01d_ImportInfo> _1b8b10cbb_SymbolBuilder::_method_build_std_import(jule::Ref<_1d1e5192e_UseDecl>& _38240_decl) {
	jule::Str _38317_path = _38240_decl->_field_link_path.slice(static_cast<jule::Int>(jule::Str("std::", 5).len()));
	_38317_path=_38317_path.replace(jule::Str("::", 2),static_cast<jule::Str>(47LL),-1LL);
	_38317_path=_1d0680a33_join(jule::Slice<jule::Str>({_1d062ea48_PATH_STDLIB,_38317_path}));
	jule::Bool _38620_ok;
	std::tie(_38317_path,_38620_ok) = _1d0680a33_abs(_38317_path);
	if ((!(_38620_ok))) {
		(*this)._method_push_err(_38240_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_38240_decl->_field_link_path)}));
		return jule::new_ref<_1b8e0c01d_ImportInfo>();
	}
	jule::Ref<_1d2151920_Status> _39214_info;
	jule::Int _39220_err;
	std::tie(_39214_info,_39220_err) = _1d1edea66_stat(_38317_path);
	if ((_39220_err != 0LLU) || (!(_39214_info->_method_is_dir()))) {
		(*this)._method_push_err(_38240_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_38240_decl->_field_link_path)}));
		return jule::new_ref<_1b8e0c01d_ImportInfo>();
	}
	jule::Str _40013_ident = _38240_decl->_field_link_path.slice(static_cast<jule::Int>(_38240_decl->_field_link_path.rfind(jule::Str("::", 2)) + 1LL));
	return jule::new_struct<_1b8e0c01d_ImportInfo>(new( std::nothrow ) _1b8e0c01d_ImportInfo(_38240_decl->_field_token,_38317_path,_38240_decl->_field_link_path,_40013_ident,_38240_decl->_field_alias,jule::Bool(),false,true,_38240_decl->_field_full,jule::Slice<_1d1da4277_Token>(),jule::new_struct<_1b8e0c01d_Package>(new( std::nothrow ) _1b8e0c01d_Package(nullptr))));
}



inline jule::Ref<_1b8e0c01d_ImportInfo> _1b8b10cbb_SymbolBuilder::_method_build_ident_import(jule::Ref<_1d1e5192e_UseDecl>& _41743_decl) {
	jule::Str _41817_path = _41743_decl->_field_link_path;
	_41817_path=_41817_path.replace(jule::Str("::", 2),static_cast<jule::Str>(47LL),-1LL);
	_41817_path=_1d0680a33_join(jule::Slice<jule::Str>({this->self->_method_get_root()->_field_ast->_field_file->_method_dir(),_41817_path}));
	jule::Bool _42220_ok;
	std::tie(_41817_path,_42220_ok) = _1d0680a33_abs(_41817_path);
	if ((!(_42220_ok))) {
		this->self->_method_push_err(_41743_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_41743_decl->_field_link_path)}));
		return jule::new_ref<_1b8e0c01d_ImportInfo>();
	}
	jule::Ref<_1d2151920_Status> _42814_info;
	jule::Int _42820_err;
	std::tie(_42814_info,_42820_err) = _1d1edea66_stat(_41817_path);
	if ((_42820_err != 0LLU) || (!(_42814_info->_method_is_dir()))) {
		this->self->_method_push_err(_41743_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_41743_decl->_field_link_path)}));
		return jule::new_ref<_1b8e0c01d_ImportInfo>();
	}
	jule::Str _43613_ident = _41743_decl->_field_link_path.slice(static_cast<jule::Int>(_41743_decl->_field_link_path.rfind(jule::Str("::", 2)) + 1LL));
	return jule::new_struct<_1b8e0c01d_ImportInfo>(new( std::nothrow ) _1b8e0c01d_ImportInfo(_41743_decl->_field_token,_41817_path,_41743_decl->_field_link_path,_43613_ident,_41743_decl->_field_alias,jule::Bool(),false,false,_41743_decl->_field_full,jule::Slice<_1d1da4277_Token>(),jule::new_struct<_1b8e0c01d_Package>(new( std::nothrow ) _1b8e0c01d_Package(nullptr))));
}



inline jule::Ref<_1b8e0c01d_ImportInfo> _1b8b10cbb_SymbolBuilder::_method_build_import(jule::Ref<_1d1e5192e_UseDecl>& _45337_decl) {
	{
		if (!((_45337_decl->_field_cpp_linked))) { goto _case_end_4711517888; }
		_case_begin_4711517888:;
		{
			return this->self->_method_build_cpp_header_import(_45337_decl);
		}
		goto _match_end_4711516256;
		_case_end_4711517888:;
		if (!((_45337_decl->_field_std))) { goto _case_end_4711517488; }
		_case_begin_4711517488:;
		{
			return this->self->_method_build_std_import(_45337_decl);
		}
		goto _match_end_4711516256;
		_case_end_4711517488:;
		_case_begin_4711516432:;
		{
			return this->self->_method_build_ident_import(_45337_decl);
		}
		goto _match_end_4711516256;
		_case_end_4711516432:;
		_match_end_4711516256:;
	}
}



inline jule::Bool _1b8b10cbb_SymbolBuilder::_method_check_duplicate_use_decl(jule::Ref<_1b8e0c01d_ImportInfo>& _46144_pkg) {
	jule::Bool _46164_ok = jule::Bool();
	jule::Ref<_1b8e0c01d_ImportInfo> _46313_lpkg = (*this)._field_table->_method_select_package(jule::Fn<jule::Bool(jule::Ref<_1b8e0c01d_ImportInfo>)>([=](jule::Ref<_1b8e0c01d_ImportInfo> _46349_spkg) mutable -> jule::Bool {
		return _46144_pkg->_field_path == _46349_spkg->_field_path;
	}));
	if ((!(jule::real(_46313_lpkg)))) {
		_46164_ok = true;
		return _46164_ok;
	}
	(*this)._method_push_err(_46144_pkg->_field_token,jule::Str("duplicate use declaration: @", 28),jule::Slice<jule::Any>({jule::Any(_46144_pkg->_field_link_path)}));
	(*this)._method_push_suggestion(jule::Str("remove this use declaration, already used, it is safe", 53),jule::Slice<jule::Any>({}));
	_46164_ok = false;
	return _46164_ok;
}



inline void _1b8b10cbb_SymbolBuilder::_method_impl_import_selections(jule::Ref<_1b8e0c01d_ImportInfo>& _47546_imp,jule::Ref<_1d1e5192e_UseDecl>& _47569_decl) {
	{
		auto _range_expr = _47569_decl->_field_selected;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			_1d1da4277_Token _1b8b10cbb_ident = *_range_begin;
			_iter_begin_4711539248:;
			{
				if (_47546_imp->_method_exist_ident(_1b8b10cbb_ident._field_kind)) {
					(*this)._method_push_err(_1b8b10cbb_ident,jule::Str("duplicated identifier selection: @", 34),jule::Slice<jule::Any>({jule::Any(_1b8b10cbb_ident._field_kind)}));
					(*this)._method_push_suggestion(jule::Str("remove this use selection, already selected, it is safe", 55),jule::Slice<jule::Any>({}));
					goto _iter_next_4711539248;
				}
				_47546_imp->_field_selected=jule::append(_47546_imp->_field_selected,jule::Slice<_1d1da4277_Token>({_1b8b10cbb_ident}));
			}
			_iter_next_4711539248:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b8b10cbb_ident = *_range_begin; goto _iter_begin_4711539248; }
			_iter_end_4711539248:;
		}
	}
}



inline jule::Str _1b8b10cbb_SymbolBuilder::_method_get_as_link_path(jule::Str _48740_path) {
	if (_48740_path.has_prefix(_1d062ea48_PATH_STDLIB)) {
		_48740_path=_48740_path.slice(static_cast<jule::Int>(_1d062ea48_PATH_STDLIB.len()));
		return jule::Str("std", 3) + _48740_path.replace(static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL);
	}
	jule::Str _49314_root;
	std::tie(_49314_root,std::ignore) = _1d0680a33_abs(this->self->_method_get_root()->_field_ast->_field_file->_method_dir());
	_48740_path=_48740_path.slice(static_cast<jule::Int>(_49314_root.len()));
	if (_48740_path[0LL] == 47LL) {
		_48740_path=_48740_path.slice(1LL);
	}
	return _48740_path.replace(static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL);
}



inline void _1b8b10cbb_SymbolBuilder::_method_push_cycle_error(jule::Ref<_1b8b10cbb_SymbolBuilder>& _50137_sb,jule::Str _50157_path,jule::Str& _50173_message) {
	
	jule::Str _50413_refers_to = _1d0557e9e_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(this->self->_method_get_as_link_path(_50137_sb->_field_table->_field_file->_method_dir())),jule::Any(this->self->_method_get_as_link_path(_50157_path))}));
	_50173_message=((_1b8b10cbb_str_repeat(jule::Str(" ", 1),4LL) + _50413_refers_to) + jule::Str("\n", 1)) + _50173_message;
}



inline void _1b8b10cbb_SymbolBuilder::_method_push_cross_cycle_error(jule::Ref<_1b8b10cbb_SymbolBuilder>& _51143_target,jule::Ref<_1b8e0c01d_ImportInfo>& _51168_imp,_1d1da4277_Token& _51187_error_token) {
	jule::Str _51217_message = jule::Str("", 0);
	this->self->_method_push_cycle_error(this->self,_51168_imp->_field_path,_51217_message);
	jule::Ref<_1b8b10cbb_SymbolBuilder> _51617_owner = this->self->_field_owner;
	jule::Ref<_1b8b10cbb_SymbolBuilder> _51717_old = this->self;
	_iter_begin_4711580160:;
	if (!(jule::real(_51617_owner->_field_owner))) { goto _iter_end_4711580160; }
	{
		this->self->_method_push_cycle_error(_51717_old->_field_owner,_51717_old->_field_table->_field_file->_method_dir(),_51217_message);
		if ((_51617_owner->_field_owner).alloc == (_51143_target).alloc) {
			this->self->_method_push_cycle_error(_51143_target,_51617_owner->_field_table->_field_file->_method_dir(),_51217_message);
			goto _iter_end_4711580160;
		}
		_51717_old=_51617_owner;
		_51617_owner=_51617_owner->_field_owner;
	}
	_iter_next_4711580160:;
	goto _iter_begin_4711580160;
	_iter_end_4711580160:;
	this->self->_method_push_err(_51187_error_token,jule::Str("illegal cross cycle in use declarations;\n@", 42),jule::Slice<jule::Any>({jule::Any(_51217_message)}));
}



inline jule::Bool _1b8b10cbb_SymbolBuilder::_method_check_import_cycles(jule::Ref<_1b8e0c01d_ImportInfo> _53439_imp,jule::Ref<_1d1e5192e_UseDecl>& _53458_decl) {
	if (_53439_imp->_field_path == this->self->_field_table->_field_file->_method_dir()) {
		this->self->_method_push_err(_53458_decl->_field_token,jule::Str("illegal cycle in use declaration, package @ refers to itself", 60),jule::Slice<jule::Any>({jule::Any(this->self->_method_get_as_link_path(_53439_imp->_field_path))}));
		return false;
	}
	if ((!(jule::real(this->self->_field_owner)))) {
		return true;
	}
	if (this->self->_field_owner->_field_table->_field_file->_method_dir() == _53439_imp->_field_path) {
		this->self->_method_push_cross_cycle_error(this->self->_field_owner,_53439_imp,_53458_decl->_field_token);
		return false;
	}
	jule::Ref<_1b8b10cbb_SymbolBuilder> _54917_owner = this->self->_field_owner;
	_julec_label_iter:;
	if (_54917_owner->_field_table->_field_file->_method_dir() == _53439_imp->_field_path) {
		this->self->_method_push_cross_cycle_error(_54917_owner,_53439_imp,_53458_decl->_field_token);
		return false;
	}
	if (jule::real(_54917_owner->_field_owner)) {
		_54917_owner=_54917_owner->_field_owner;
		goto _julec_label_iter;
	}
	return true;
}



inline jule::Bool _1b8b10cbb_SymbolBuilder::_method_import_package(jule::Ref<_1b8e0c01d_ImportInfo>& _56439_imp,jule::Ref<_1d1e5192e_UseDecl>& _56462_decl) {
	jule::Bool _56480_ok = jule::Bool();
	if (_56439_imp->_field_cpp_linked) {
		_56480_ok = true;
		return _56480_ok;
	}
	jule::Ref<_1b8e0c01d_ImportInfo> _56917_port = this->self->_field_importer.get()._method_get_import(_56439_imp->_field_path);
	if (jule::real(_56917_port)) {
		_56439_imp->_field_package=_56917_port->_field_package;
		_56439_imp->_field_duplicate=true;
	} else {
		if ((!(this->self->_method_check_import_cycles(_56439_imp,_56462_decl)))) {
			_56480_ok = false;
			return _56480_ok;
		}
		jule::Slice<jule::Ref<_1d21640e7_Ast>> _57822_asts;
		jule::Slice<_1d0557e9e_Log> _57828_errors;
		std::tie(_57822_asts,_57828_errors) = this->self->_field_importer.get()._method_import_package(_56439_imp->_field_path);
		if (_57828_errors.len() > 0LL) {
			this->self->_field_errors=jule::append(this->self->_field_errors,_57828_errors);
			_56480_ok = false;
			return _56480_ok;
		}
		{
			auto _range_expr = _57822_asts;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_1d21640e7_Ast> _1b8b10cbb_ast = *_range_begin;
				_iter_begin_4711628112:;
				{
					jule::Ref<_1b9390d86_SymbolTable> _58526_table;
					jule::Slice<_1d0557e9e_Log> _58533_errors;
					std::tie(_58526_table,_58533_errors) = _1b9960323_build_symbols(_1b8b10cbb_ast,this->self->_field_importer,this->self);
					if (_58533_errors.len() > 0LL) {
						this->self->_field_errors=jule::append(this->self->_field_errors,_58533_errors);
						this->self->_method_push_err_text(_56439_imp->_field_token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>({jule::Any(_56439_imp->_field_link_path)}));
						_56480_ok = false;
						return _56480_ok;
					}
					_56439_imp->_field_package->_field_files=jule::append(_56439_imp->_field_package->_field_files,jule::Slice<jule::Ref<_1b9390d86_SymbolTable>>({_58526_table}));
				}
				_iter_next_4711628112:;
				++_range_begin;
				if (_range_begin != _range_end) { _1b8b10cbb_ast = *_range_begin; goto _iter_begin_4711628112; }
				_iter_end_4711628112:;
			}
		}
	}
	this->self->_method_impl_import_selections(_56439_imp,_56462_decl);
	_56480_ok = true;
	return _56480_ok;
}



inline jule::Ref<_1b8e0c01d_ImportInfo> _1b8b10cbb_SymbolBuilder::_method_import_use_decl(jule::Ref<_1d1e5192e_UseDecl>& _60340_decl) {
	jule::Ref<_1b8e0c01d_ImportInfo> _60417_imp = this->self->_method_build_import(_60340_decl);
	if ((!(jule::real(_60417_imp)))) {
		return jule::new_ref<_1b8e0c01d_ImportInfo>();
	}
	jule::Bool _61017_ok = this->self->_method_check_duplicate_use_decl(_60417_imp);
	if ((!(_61017_ok))) {
		return jule::new_ref<_1b8e0c01d_ImportInfo>();
	}
	if ((_60417_imp->_field_alias.len() != 0LL) && (_60340_decl->_field_selected.len() > 0LL)) {
		this->self->_method_push_err(_60340_decl->_field_token,jule::Str("use aliases cannot useable for selected package defines", 55),jule::Slice<jule::Any>({}));
	}
	_61017_ok=this->self->_method_import_package(_60417_imp,_60340_decl);
	this->self->_field_table->_field_imports=jule::append(this->self->_field_table->_field_imports,jule::Slice<jule::Ref<_1b8e0c01d_ImportInfo>>({_60417_imp}));
	if (_61017_ok) {
		this->self->_field_importer.get()._method_imported(_60417_imp);
		return _60417_imp;
	}
	return jule::new_ref<_1b8e0c01d_ImportInfo>();
}



inline void _1b8b10cbb_SymbolBuilder::_method_import_use_decls(void) {
	{
		auto _range_expr = this->self->_field_ast->_field_use_decls;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d1e5192e_UseDecl> _1b8b10cbb_decl = *_range_begin;
			_iter_begin_4711651792:;
			{
				this->self->_method_import_use_decl(_1b8b10cbb_decl);
				if (this->self->_field_errors.len() > 0LL) {
					goto _iter_end_4711651792;
				}
			}
			_iter_next_4711651792:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b8b10cbb_decl = *_range_begin; goto _iter_begin_4711651792; }
			_iter_end_4711651792:;
		}
	}
}



inline void _1b8b10cbb_SymbolBuilder::_method_append_decl(_1d1e5192e_Node& _63935_decl) {
	{
		auto _match_expr{ _63935_decl._field_data };
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_TypeAliasDecl>>())) { goto _case_end_4711658096; }
		_case_begin_4711658096:;
		{
			jule::Ref<_1b951b088_TypeAlias> _64221_ta = _1b8b10cbb_build_type_alias(_63935_decl._field_data.operator jule::Ref<_1d1e5192e_TypeAliasDecl>());
			(*this)._field_table->_field_type_aliases=jule::append((*this)._field_table->_field_type_aliases,jule::Slice<jule::Ref<_1b951b088_TypeAlias>>({_64221_ta}));
		}
		goto _match_end_4711656624;
		_case_end_4711658096:;
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_StructDecl>>())) { goto _case_end_4711657616; }
		_case_begin_4711657616:;
		{
			jule::Ref<_1d21c0b59_Struct> _64621_srct = _1b8b10cbb_build_struct(_63935_decl._field_data.operator jule::Ref<_1d1e5192e_StructDecl>());
			(*this)._field_table->_field_structs=jule::append((*this)._field_table->_field_structs,jule::Slice<jule::Ref<_1d21c0b59_Struct>>({_64621_srct}));
		}
		goto _match_end_4711656624;
		_case_end_4711657616:;
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_FnDecl>>())) { goto _case_end_4711657728; }
		_case_begin_4711657728:;
		{
			jule::Ref<_1d21d97ee_Fn> _65021_f = _1b8b10cbb_build_fn(_63935_decl._field_data.operator jule::Ref<_1d1e5192e_FnDecl>());
			(*this)._field_table->_field_funcs=jule::append((*this)._field_table->_field_funcs,jule::Slice<jule::Ref<_1d21d97ee_Fn>>({_65021_f}));
		}
		goto _match_end_4711656624;
		_case_end_4711657728:;
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_TraitDecl>>())) { goto _case_end_4711657840; }
		_case_begin_4711657840:;
		{
			jule::Ref<_1b8cd2894_Trait> _65421_t = _1b8b10cbb_build_trait(_63935_decl._field_data.operator jule::Ref<_1d1e5192e_TraitDecl>());
			(*this)._field_table->_field_traits=jule::append((*this)._field_table->_field_traits,jule::Slice<jule::Ref<_1b8cd2894_Trait>>({_65421_t}));
		}
		goto _match_end_4711656624;
		_case_end_4711657840:;
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_VarDecl>>())) { goto _case_end_4711659920; }
		_case_begin_4711659920:;
		{
			jule::Ref<_1b919cb2c_Var> _65821_v = _1b8b10cbb_build_var(_63935_decl._field_data.operator jule::Ref<_1d1e5192e_VarDecl>());
			(*this)._field_table->_field_vars=jule::append((*this)._field_table->_field_vars,jule::Slice<jule::Ref<_1b919cb2c_Var>>({_65821_v}));
		}
		goto _match_end_4711656624;
		_case_end_4711659920:;
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_EnumDecl>>())) { goto _case_end_4711660032; }
		_case_begin_4711660032:;
		{
			jule::Ref<_1b8dae520_Enum> _66221_e = _1b8b10cbb_build_enum(_63935_decl._field_data.operator jule::Ref<_1d1e5192e_EnumDecl>());
			(*this)._field_table->_field_enums=jule::append((*this)._field_table->_field_enums,jule::Slice<jule::Ref<_1b8dae520_Enum>>({_66221_e}));
		}
		goto _match_end_4711656624;
		_case_end_4711660032:;
		_case_begin_4711657312:;
		{
			(*this)._method_push_err(_63935_decl._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4711656624;
		_case_end_4711657312:;
		_match_end_4711656624:;
	}
}



inline void _1b8b10cbb_SymbolBuilder::_method_append_decls(void) {
	{
		auto _range_expr = (*this)._field_ast->_field_decls;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			_1d1e5192e_Node _1b8b10cbb_decl = *_range_begin;
			_iter_begin_4711682336:;
			{
				(*this)._method_append_decl(_1b8b10cbb_decl);
			}
			_iter_next_4711682336:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b8b10cbb_decl = *_range_begin; goto _iter_begin_4711682336; }
			_iter_end_4711682336:;
		}
	}
}



inline void _1b8b10cbb_SymbolBuilder::_method_append_impls(void) {
	(*this)._field_table->_field_impls=jule::Slice<jule::Ref<_1b8dacd8c_Impl>>::alloc(0LL,static_cast<jule::Int>(static_cast<jule::I64>((*this)._field_ast->_field_impls.len())));
	{
		auto _range_expr = (*this)._field_ast->_field_impls;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d1e5192e_Impl> _1b8b10cbb_decl = *_range_begin;
			_iter_begin_4711688976:;
			{
				(*this)._field_table->_field_impls=jule::append((*this)._field_table->_field_impls,jule::Slice<jule::Ref<_1b8dacd8c_Impl>>({_1b8b10cbb_build_impl(_1b8b10cbb_decl)}));
			}
			_iter_next_4711688976:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b8b10cbb_decl = *_range_begin; goto _iter_begin_4711688976; }
			_iter_end_4711688976:;
		}
	}
}



inline void _1b8b10cbb_SymbolBuilder::_method_push_directive_pass(jule::Ref<_1d1e5192e_Directive>& _68343_d) {
	_1b8b10cbb_Pass _68417_pass = _1b8b10cbb_Pass(_68343_d->_field_token,jule::Str());
	{
		auto _range_expr = _68343_d->_field_args;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _1b8b10cbb_arg = *_range_begin;
			_iter_begin_4711697328:;
			{
				if (_1b8b10cbb_arg != jule::Str("", 0)) {
					_68417_pass._field_text+=_1b8b10cbb_arg + jule::Str(" ", 1);
				}
			}
			_iter_next_4711697328:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b8b10cbb_arg = *_range_begin; goto _iter_begin_4711697328; }
			_iter_end_4711697328:;
		}
	}
	_68417_pass._field_text=_68417_pass._field_text.trim(jule::Str(" \n\r\t\v", 5));
	(*this)._field_table->_field_passes=jule::append((*this)._field_table->_field_passes,jule::Slice<_1b8b10cbb_Pass>({_68417_pass}));
}



inline void _1b8b10cbb_SymbolBuilder::_method_append_top_directives(void) {
	{
		auto _range_expr = (*this)._field_ast->_field_top_directives;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d1e5192e_Directive> _1b8b10cbb_d = *_range_begin;
			_iter_begin_4711702640:;
			{
				{
					auto _match_expr{ _1b8b10cbb_d->_field_tag };
					if (!((jule::Str("pass", 4)) == _match_expr)) { goto _case_end_4711706576; }
					_case_begin_4711706576:;
					{
						(*this)._method_push_directive_pass(_1b8b10cbb_d);
					}
					goto _match_end_4711705792;
					_case_end_4711706576:;
					_match_end_4711705792:;
				}
			}
			_iter_next_4711702640:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b8b10cbb_d = *_range_begin; goto _iter_begin_4711702640; }
			_iter_end_4711702640:;
		}
	}
}



inline void _1b8b10cbb_SymbolBuilder::_method_build(void) {
	this->self->_field_table=jule::new_struct<_1b9390d86_SymbolTable>(new( std::nothrow ) _1b9390d86_SymbolTable(this->self->_field_ast->_field_file,jule::Slice<_1b8b10cbb_Pass>(),jule::Slice<jule::Ref<_1b8e0c01d_ImportInfo>>(),jule::Slice<jule::Ref<_1b919cb2c_Var>>(),jule::Slice<jule::Ref<_1b951b088_TypeAlias>>(),jule::Slice<jule::Ref<_1d21c0b59_Struct>>(),jule::Slice<jule::Ref<_1d21d97ee_Fn>>(),jule::Slice<jule::Ref<_1b8cd2894_Trait>>(),jule::Slice<jule::Ref<_1b8dae520_Enum>>(),jule::Slice<jule::Ref<_1b8dacd8c_Impl>>()));
	this->self->_method_append_top_directives();
	this->self->_method_import_use_decls();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_append_decls();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_append_impls();
}







std::ostream &operator<<(std::ostream &_Stream, const _1b8b10cbb_SymbolBuilder &_Src) {
	_Stream << "SymbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b8cd2c4b_Scope &_Src) {
	_Stream << "Scope{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "deferred:" << _Src._field_deferred << ", ";
	_Stream << "stmts:" << _Src._field_stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b8cd2c4b_If &_Src) {
	_Stream << "If{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b8cd2c4b_Else &_Src) {
	_Stream << "Else{";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b8cd2c4b_Conditional &_Src) {
	_Stream << "Conditional{";
	_Stream << "elifs:" << _Src._field_elifs << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b8cd2c4b_InfIter &_Src) {
	_Stream << "InfIter{";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b8cd2c4b_WhileIter::_method_is_while_next(void) {
	return (*this)._field_next != nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b8cd2c4b_WhileIter &_Src) {
	_Stream << "WhileIter{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "next:" << _Src._field_next << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b8cd2c4b_RangeIter &_Src) {
	_Stream << "RangeIter{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "key_a:" << _Src._field_key_a << ", ";
	_Stream << "key_b:" << _Src._field_key_b;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b8cd2c4b_ContSt &_Src) {
	_Stream << "ContSt{";
	_Stream << "it:" << _Src._field_it;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b8cd2c4b_BreakSt &_Src) {
	_Stream << "BreakSt{";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "mtch:" << _Src._field_mtch;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b8cd2c4b_Label &_Src) {
	_Stream << "Label{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b8cd2c4b_GotoSt &_Src) {
	_Stream << "GotoSt{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b8cd2c4b_Postfix &_Src) {
	_Stream << "Postfix{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b8cd2c4b_Assign &_Src) {
	_Stream << "Assign{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b8cd2c4b_MultiAssign &_Src) {
	_Stream << "MultiAssign{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b8cd2c4b_Match &_Src) {
	_Stream << "Match{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "type_match:" << _Src._field_type_match << ", ";
	_Stream << "cases:" << _Src._field_cases << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b8cd2c4b_Case::_method_is_default(void) {
	return (*this)._field_exprs == nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b8cd2c4b_Case &_Src) {
	_Stream << "Case{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "next:" << _Src._field_next;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b8cd2c4b_FallSt &_Src) {
	_Stream << "FallSt{";
	_Stream << "dest_case:" << _Src._field_dest_case;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b8cd2c4b_RetSt &_Src) {
	_Stream << "RetSt{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b8cd2c4b_Recover &_Src) {
	_Stream << "Recover{";
	_Stream << "handler:" << _Src._field_handler << ", ";
	_Stream << "handler_expr:" << _Src._field_handler_expr << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "scope_owner:" << _Src._field_scope_owner;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b8cd2c4b_ScopeGoto &_Src) {
	_Stream << "ScopeGoto{";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_1b8e0c01d_ImportInfo> _1b8cd2c4b_ScopeChecker::_method_find_package(jule::Str _37735_ident) {
	return (*this)._field_s->_method_find_package(_37735_ident);
}



inline jule::Ref<_1b8e0c01d_ImportInfo> _1b8cd2c4b_ScopeChecker::_method_select_package(jule::Fn<jule::Bool(jule::Ref<_1b8e0c01d_ImportInfo>)> _38737_selector) {
	return (*this)._field_s->_method_select_package(_38737_selector);
}



inline jule::Ref<_1b919cb2c_Var> _1b8cd2c4b_ScopeChecker::_method_find_var(jule::Str _39831_ident,jule::Bool _39843_cpp_linked) {
	
	jule::Ref<_1b919cb2c_Var> _40117_v = (*this)._field_table->_method___find_var(_39831_ident,_39843_cpp_linked,true);
	if (jule::real(_40117_v)) {
		return _40117_v;
	}
	jule::Ref<_1b8cd2c4b_ScopeChecker> _40617_parent = (*this)._field_parent;
	_iter_begin_4711775472:;
	if (!(jule::real(_40617_parent))) { goto _iter_end_4711775472; }
	{
		_40117_v=_40617_parent->_field_table->_method___find_var(_39831_ident,_39843_cpp_linked,true);
		if (jule::real(_40117_v)) {
			return _40117_v;
		}
		_40617_parent=_40617_parent->_field_parent;
	}
	_iter_next_4711775472:;
	goto _iter_begin_4711775472;
	_iter_end_4711775472:;
	return (*this)._field_s->_method_find_var(_39831_ident,_39843_cpp_linked);
}



inline jule::Ref<_1b951b088_TypeAlias> _1b8cd2c4b_ScopeChecker::_method_find_type_alias(jule::Str _42538_ident,jule::Bool _42550_cpp_linked) {
	
	jule::Ref<_1b951b088_TypeAlias> _42817_ta = (*this)._field_table->_method___find_type_alias(_42538_ident,_42550_cpp_linked,true);
	if (jule::real(_42817_ta)) {
		return _42817_ta;
	}
	jule::Ref<_1b8cd2c4b_ScopeChecker> _43317_parent = (*this)._field_parent;
	_iter_begin_4711789952:;
	if (!(jule::real(_43317_parent))) { goto _iter_end_4711789952; }
	{
		_42817_ta=_43317_parent->_field_table->_method___find_type_alias(_42538_ident,_42550_cpp_linked,true);
		if (jule::real(_42817_ta)) {
			return _42817_ta;
		}
		_43317_parent=_43317_parent->_field_parent;
	}
	_iter_next_4711789952:;
	goto _iter_begin_4711789952;
	_iter_end_4711789952:;
	return (*this)._field_s->_method_find_type_alias(_42538_ident,_42550_cpp_linked);
}



inline jule::Ref<_1d21c0b59_Struct> _1b8cd2c4b_ScopeChecker::_method_find_struct(jule::Str _45034_ident,jule::Bool _45046_cpp_linked) {
	return (*this)._field_s->_method_find_struct(_45034_ident,_45046_cpp_linked);
}



inline jule::Ref<_1d21d97ee_Fn> _1b8cd2c4b_ScopeChecker::_method_find_fn(jule::Str _45930_ident,jule::Bool _45942_cpp_linked) {
	return (*this)._field_s->_method_find_fn(_45930_ident,_45942_cpp_linked);
}



inline jule::Ref<_1b8cd2894_Trait> _1b8cd2c4b_ScopeChecker::_method_find_trait(jule::Str _46833_ident) {
	return (*this)._field_s->_method_find_trait(_46833_ident);
}



inline jule::Ref<_1b8dae520_Enum> _1b8cd2c4b_ScopeChecker::_method_find_enum(jule::Str _47732_ident) {
	return (*this)._field_s->_method_find_enum(_47732_ident);
}



inline jule::Bool _1b8cd2c4b_ScopeChecker::_method_is_unsafe(void) {
	jule::Ref<_1b8cd2c4b_ScopeChecker> _48517_scope = this->self;
	_julec_label_iter:;
	if (_48517_scope->_field_scope->_field_unsafety) {
		return true;
	}
	if (jule::real(_48517_scope->_field_parent)) {
		_48517_scope=_48517_scope->_field_parent;
		goto _julec_label_iter;
	}
	return false;
}



inline jule::Bool _1b8cd2c4b_ScopeChecker::_method_is_root(void) {
	return (!(jule::real((*this)._field_parent))) || jule::real((*this)._field_owner);
}



inline jule::Ref<_1b8cd2c4b_ScopeChecker> _1b8cd2c4b_ScopeChecker::_method_get_root(void) {
	jule::Ref<_1b8cd2c4b_ScopeChecker> _50717_root = this->self;
	_iter_begin_4711829376:;
	if (!(jule::real(_50717_root->_field_parent) && (!(jule::real(_50717_root->_field_owner))))) { goto _iter_end_4711829376; }
	{
		_50717_root=_50717_root->_field_parent;
	}
	_iter_next_4711829376:;
	goto _iter_begin_4711829376;
	_iter_end_4711829376:;
	return _50717_root;
}



inline jule::Ref<_1b8cd2c4b_Label> _1b8cd2c4b_ScopeChecker::_method_find_label(jule::Str _51729_ident) {
	{
		auto _range_expr = (*this)._field_scope->_field_stmts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Any _1b8cd2c4b_st = *_range_begin;
			_iter_begin_4711834672:;
			{
				{
					auto _match_expr{ _1b8cd2c4b_st };
					if (!(_match_expr.type_is<jule::Ref<_1b8cd2c4b_Label>>())) { goto _case_end_4711836560; }
					_case_begin_4711836560:;
					{
						jule::Ref<_1b8cd2c4b_Label> _52125_label = _1b8cd2c4b_st.operator jule::Ref<_1b8cd2c4b_Label>();
						if (_52125_label->_field_ident == _51729_ident) {
							return _52125_label;
						}
					}
					goto _match_end_4711836000;
					_case_end_4711836560:;
					_match_end_4711836000:;
				}
			}
			_iter_next_4711834672:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b8cd2c4b_st = *_range_begin; goto _iter_begin_4711834672; }
			_iter_end_4711834672:;
		}
	}
	return jule::new_ref<_1b8cd2c4b_Label>();
}



inline jule::Ref<_1b8cd2c4b_ScopeLabel> _1b8cd2c4b_ScopeChecker::_method_find_label_scope(jule::Str _53336_ident) {
	jule::Ref<_1b8cd2c4b_ScopeLabel> _53417_label = this->self->_method_find_label_all(_53336_ident);
	if (jule::real(_53417_label) && ((_53417_label->_field_scope).alloc == (this->self).alloc)) {
		return _53417_label;
	}
	return jule::new_ref<_1b8cd2c4b_ScopeLabel>();
}



inline jule::Ref<_1b8cd2c4b_ScopeLabel> _1b8cd2c4b_ScopeChecker::_method_find_label_all(jule::Str _54533_ident) {
	{
		auto _range_expr = (*this)._field_labels.get();
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b8cd2c4b_ScopeLabel> _1b8cd2c4b_lbl = *_range_begin;
			_iter_begin_4711846624:;
			{
				if (_1b8cd2c4b_lbl->_field_label->_field_ident == _54533_ident) {
					return _1b8cd2c4b_lbl;
				}
			}
			_iter_next_4711846624:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b8cd2c4b_lbl = *_range_begin; goto _iter_begin_4711846624; }
			_iter_end_4711846624:;
		}
	}
	return jule::new_ref<_1b8cd2c4b_ScopeLabel>();
}



inline jule::Bool _1b8cd2c4b_ScopeChecker::_method_is_duplicated_ident(jule::Uintptr _55738_itself,jule::Str _55755_ident) {
	jule::Ref<_1b919cb2c_Var> _55813_v = (*this)._method_find_var(_55755_ident,false);
	if (jule::real(_55813_v) && (((jule::Uintptr)((_55813_v).alloc)) != _55738_itself)) {
		if ((!(jule::real(_55813_v->_field_scope)))) {
			return false;
		}
		return ((_55813_v->_field_scope).alloc == ((*this)._field_scope).alloc) || (!((*this)._field_s->_method_is_flag(1LL)));
	}
	jule::Ref<_1b951b088_TypeAlias> _56613_ta = (*this)._method_find_type_alias(_55755_ident,false);
	if (jule::real(_56613_ta) && (((jule::Uintptr)((_56613_ta).alloc)) != _55738_itself)) {
		if ((!(jule::real(_56613_ta->_field_scope)))) {
			return false;
		}
		return ((_56613_ta->_field_scope).alloc == ((*this)._field_tree).alloc) || (!((*this)._field_s->_method_is_flag(1LL)));
	}
	return false;
}



inline void _1b8cd2c4b_ScopeChecker::_method_check_var_decl(jule::Ref<_1d1e5192e_VarDecl> _57738_decl) {
	jule::Ref<_1b919cb2c_Var> _57817_v = _1b8b10cbb_build_var(_57738_decl);
	_57817_v->_field_scope=this->self->_field_scope;
	__JULE_DEFER({
		this->self->_field_table->_field_vars=jule::append(this->self->_field_table->_field_vars,jule::Slice<jule::Ref<_1b919cb2c_Var>>({_57817_v}));
		this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_57817_v)}));
	});
	if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_57817_v).alloc)),_57817_v->_field_ident)) {
		this->self->_field_s->_method_push_err(_57817_v->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_57817_v->_field_ident)}));
		this->self->_field_s->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	this->self->_field_s->_method_check_var_decl(_57817_v,this->self);
	if ((!(_57817_v->_method_is_type_inferred())) && ((!(jule::real(_57817_v->_field_kind))) || (!(jule::real(_57817_v->_field_kind->_field_kind))))) {
		return;
	}
	this->self->_field_s->_method_check_type_var(_57817_v,this->self);
}



inline void _1b8cd2c4b_ScopeChecker::_method_check_type_alias_decl(jule::Ref<_1d1e5192e_TypeAliasDecl> _59945_decl) {
	jule::Ref<_1b951b088_TypeAlias> _60017_ta = _1b8b10cbb_build_type_alias(_59945_decl);
	if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_60017_ta).alloc)),_60017_ta->_field_ident)) {
		this->self->_field_s->_method_push_err(_60017_ta->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_60017_ta->_field_ident)}));
		this->self->_field_s->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	this->self->_field_s->_method_check_type_alias_decl(_60017_ta,this->self);
	this->self->_field_table->_field_type_aliases=jule::append(this->self->_field_table->_field_type_aliases,jule::Slice<jule::Ref<_1b951b088_TypeAlias>>({_60017_ta}));
}



inline jule::Ref<_1b8cd2c4b_Scope> _1b8cd2c4b_ScopeChecker::_method_get_child(void) {
	return jule::new_struct<_1b8cd2c4b_Scope>(new( std::nothrow ) _1b8cd2c4b_Scope((*this)._field_scope,jule::Bool(),jule::Bool(),jule::Slice<jule::Any>()));
}



inline void _1b8cd2c4b_ScopeChecker::_method_check_child_ssc(jule::Ref<_1d1e5192e_ScopeTree> _61639_tree,jule::Ref<_1b8cd2c4b_Scope> _61661_s,jule::Ref<_1b8cd2c4b_ScopeChecker> _61676_ssc) {
	_61676_ssc->_field_parent=this->self;
	_61676_ssc->_method_check(_61639_tree,_61661_s);
}



inline jule::Ref<_1b8cd2c4b_Scope> _1b8cd2c4b_ScopeChecker::_method_check_child_sc(jule::Ref<_1d1e5192e_ScopeTree> _62138_tree,jule::Ref<_1b8cd2c4b_ScopeChecker> _62160_ssc) {
	jule::Ref<_1b8cd2c4b_Scope> _62217_s = this->self->_method_get_child();
	this->self->_method_check_child_ssc(_62138_tree,_62217_s,_62160_ssc);
	return _62217_s;
}



inline jule::Ref<_1b8cd2c4b_Scope> _1b8cd2c4b_ScopeChecker::_method_check_child(jule::Ref<_1d1e5192e_ScopeTree> _62735_tree) {
	jule::Ref<_1b8cd2c4b_ScopeChecker> _62817_ssc = this->self->_method_new_child_checker();
	return this->self->_method_check_child_sc(_62735_tree,_62817_ssc);
}



inline void _1b8cd2c4b_ScopeChecker::_method_check_anon_scope(jule::Ref<_1d1e5192e_ScopeTree> _63240_tree) {
	jule::Ref<_1b8cd2c4b_Scope> _63317_s = this->self->_method_check_child(_63240_tree);
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_63317_s)}));
}



inline jule::Bool _1b8cd2c4b_ScopeChecker::_method_try_call_recover(jule::Ref<_1b9523799_Data> _63740_d) {
	{
		auto _match_expr{ _63740_d->_field_model };
		if (!(_match_expr.type_is<jule::Ref<_1b8cd2c4b_Recover>>())) { goto _case_end_4711928832; }
		goto _match_end_4711927856;
		_case_end_4711928832:;
		_case_begin_4711928496:;
		{
			return false;
		}
		goto _match_end_4711927856;
		_case_end_4711928496:;
		_match_end_4711927856:;
	}
	jule::Ref<_1b8cd2c4b_Recover> _64317_rec = _63740_d->_field_model.operator jule::Ref<_1b8cd2c4b_Recover>();
	_64317_rec->_field_handler=_63740_d->_field_kind->_method_fnc();
	_64317_rec->_field_scope=jule::new_struct<_1b8cd2c4b_Scope>(new( std::nothrow ) _1b8cd2c4b_Scope());
	_64317_rec->_field_scope_owner=this->self->_method_get_root()->_field_owner;
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_64317_rec)}));
	this->self->_field_tree->_field_stmts=this->self->_field_tree->_field_stmts.slice(static_cast<jule::Int>(this->self->_field_i + 1LL));
	this->self->_field_scope=_64317_rec->_field_scope;
	this->self->_method_check_tree();
	return true;
}



inline void _1b8cd2c4b_ScopeChecker::_method_check_expr(jule::Ref<_1d1e5192e_Expr> _65634_expr) {
	jule::Ref<_1b9523799_Data> _65717_d = this->self->_field_s->_method_eval(_65634_expr,this->self);
	if ((!(jule::real(_65717_d)))) {
		return;
	}
	if (_65634_expr->_method_is_fn_call()) {
		jule::Bool _66317_ok = this->self->_method_try_call_recover(_65717_d);
		if (_66317_ok) {
			return;
		}
	}
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_65717_d)}));
}



inline jule::Ref<_1b8cd2c4b_If> _1b8cd2c4b_ScopeChecker::_method_check_if(jule::Ref<_1d1e5192e_If> _67232_i) {
	jule::Ref<_1b8cd2c4b_Scope> _67317_s = this->self->_method_check_child(_67232_i->_field_scope);
	jule::Ref<_1b9523799_Data> _67517_d = this->self->_field_s->_method_eval(_67232_i->_field_expr,this->self);
	if ((!(jule::real(_67517_d)))) {
		return jule::new_ref<_1b8cd2c4b_If>();
	}
	jule::Ref<_1b951b088_Prim> _68013_prim = _67517_d->_field_kind->_method_prim();
	if ((!(jule::real(_68013_prim)))) {
		this->self->_field_s->_method_push_err(_67232_i->_field_expr->_field_token,jule::Str("if conditions must be have boolean expression", 45),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b8cd2c4b_If>();
	}
	if ((!(_68013_prim->_method_is_bool()))) {
		this->self->_field_s->_method_push_err(_67232_i->_field_expr->_field_token,jule::Str("if conditions must be have boolean expression", 45),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b8cd2c4b_If>();
	}
	return jule::new_struct<_1b8cd2c4b_If>(new( std::nothrow ) _1b8cd2c4b_If(_67517_d->_field_model,_67317_s));
}



inline jule::Ref<_1b8cd2c4b_Else> _1b8cd2c4b_ScopeChecker::_method_check_else(jule::Ref<_1d1e5192e_Else> _69734_e) {
	jule::Ref<_1b8cd2c4b_Scope> _69817_s = this->self->_method_check_child(_69734_e->_field_scope);
	return jule::new_struct<_1b8cd2c4b_Else>(new( std::nothrow ) _1b8cd2c4b_Else(_69817_s));
}



inline void _1b8cd2c4b_ScopeChecker::_method_check_conditional(jule::Ref<_1d1e5192e_Conditional> _70441_conditional) {
	jule::Ref<_1b8cd2c4b_Conditional> _70517_c = jule::new_struct<_1b8cd2c4b_Conditional>(new( std::nothrow ) _1b8cd2c4b_Conditional());
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_70517_c)}));
	_70517_c->_field_elifs=jule::Slice<jule::Ref<_1b8cd2c4b_If>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_70441_conditional->_field_tail.len() + 1LL)));
	_70517_c->_field_elifs[0LL]=this->self->_method_check_if(_70441_conditional->_field_head);
	{
		auto _range_expr = _70441_conditional->_field_tail;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1b8cd2c4b_i = 0;
			jule::Ref<_1d1e5192e_If> _1b8cd2c4b_elif = *_range_begin;
			_iter_begin_4711981232:;
			{
				_70517_c->_field_elifs[static_cast<jule::Int>(_1b8cd2c4b_i + 1LL)]=this->self->_method_check_if(_1b8cd2c4b_elif);
			}
			_iter_next_4711981232:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1b8cd2c4b_i; _1b8cd2c4b_elif = *_range_begin; goto _iter_begin_4711981232; }
			_iter_end_4711981232:;
		}
	}
	if (jule::real(_70441_conditional->_field_default)) {
		_70517_c->_field_default=this->self->_method_check_else(_70441_conditional->_field_default);
	}
}



inline jule::Ref<_1b8cd2c4b_Scope> _1b8cd2c4b_ScopeChecker::_method_check_iter_scope_sc(jule::Uintptr _72039_it,jule::Ref<_1d1e5192e_ScopeTree> _72056_tree,jule::Ref<_1b8cd2c4b_ScopeChecker> _72078_ssc) {
	_72078_ssc->_field_it=_72039_it;
	return this->self->_method_check_child_sc(_72056_tree,_72078_ssc);
}



inline jule::Ref<_1b8cd2c4b_Scope> _1b8cd2c4b_ScopeChecker::_method_check_iter_scope(jule::Uintptr _72536_it,jule::Ref<_1d1e5192e_ScopeTree> _72553_tree) {
	jule::Ref<_1b8cd2c4b_ScopeChecker> _72617_ssc = this->self->_method_new_child_checker();
	return this->self->_method_check_iter_scope_sc(_72536_it,_72553_tree,_72617_ssc);
}



inline void _1b8cd2c4b_ScopeChecker::_method_check_inf_iter(jule::Ref<_1d1e5192e_Iter> _73038_it) {
	jule::Ref<_1b8cd2c4b_InfIter> _73117_kind = jule::new_struct<_1b8cd2c4b_InfIter>(new( std::nothrow ) _1b8cd2c4b_InfIter());
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_73117_kind)}));
	_73117_kind->_field_scope=this->self->_method_check_iter_scope(((jule::Uintptr)((_73117_kind).alloc)),_73038_it->_field_scope);
}



inline void _1b8cd2c4b_ScopeChecker::_method_check_while_iter(jule::Ref<_1d1e5192e_Iter> _73840_it) {
	jule::Ref<_1d1e5192e_WhileKind> _73917_wh = _73840_it->_field_kind.operator jule::Ref<_1d1e5192e_WhileKind>();
	if ((!(jule::real(_73917_wh->_field_expr))) && (_73917_wh->_field_next == nullptr)) {
		this->self->_method_check_inf_iter(_73840_it);
		return;
	}
	jule::Ref<_1b8cd2c4b_WhileIter> _74517_kind = jule::new_struct<_1b8cd2c4b_WhileIter>(new( std::nothrow ) _1b8cd2c4b_WhileIter());
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_74517_kind)}));
	_74517_kind->_field_scope=this->self->_method_check_iter_scope(((jule::Uintptr)((_74517_kind).alloc)),_73840_it->_field_scope);
	if (jule::real(_73917_wh->_field_expr)) {
		jule::Ref<_1b9523799_Data> _75221_d = this->self->_field_s->_method_eval(_73917_wh->_field_expr,this->self);
		if ((!(jule::real(_75221_d)))) {
			return;
		}
		jule::Ref<_1b951b088_Prim> _75717_prim = _75221_d->_field_kind->_method_prim();
		if ((!(jule::real(_75717_prim)))) {
			this->self->_field_s->_method_push_err(_73840_it->_field_token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>({}));
			return;
		}
		if ((!(_75717_prim->_method_is_bool()))) {
			this->self->_field_s->_method_push_err(_73840_it->_field_token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>({}));
			return;
		}
		_74517_kind->_field_expr=_75221_d->_field_model;
	}
	if (_73917_wh->_method_is_while_next()) {
		if ((!(_1b8cd2c4b_is_valid_ast_st_for_next_st(_73917_wh->_field_next)))) {
			this->self->_field_s->_method_push_err(_73917_wh->_field_next_token,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>({}));
			return;
		}
		jule::I64 _77717_n = this->self->_field_scope->_field_stmts.len();
		this->self->_method_check_node(_73917_wh->_field_next);
		if (_77717_n < this->self->_field_scope->_field_stmts.len()) {
			jule::Any _78025_st = this->self->_field_scope->_field_stmts[static_cast<jule::Int>(_77717_n)];
			this->self->_field_scope->_field_stmts=this->self->_field_scope->_field_stmts.slice(0LL,static_cast<jule::Int>(_77717_n));
			if ((!(_1b8cd2c4b_is_valid_st_for_next_st(_78025_st)))) {
				this->self->_field_s->_method_push_err(_73917_wh->_field_next_token,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>({}));
			}
			_74517_kind->_field_next=_78025_st;
		}
	}
}



inline void _1b8cd2c4b_ScopeChecker::_method_check_range_iter(jule::Ref<_1d1e5192e_Iter> _79140_it) {
	jule::Ref<_1d1e5192e_RangeKind> _79217_rang = _79140_it->_field_kind.operator jule::Ref<_1d1e5192e_RangeKind>();
	jule::Ref<_1b9523799_Data> _79417_d = this->self->_field_s->_method_eval(_79217_rang->_field_expr,this->self);
	if ((!(jule::real(_79417_d)))) {
		return;
	}
	jule::Ref<_1b8cd2c4b_RangeIter> _79917_kind = jule::new_struct<_1b8cd2c4b_RangeIter>(new( std::nothrow ) _1b8cd2c4b_RangeIter(_79417_d,jule::Ref<_1b8cd2c4b_Scope>(),jule::Ref<_1b919cb2c_Var>(),jule::Ref<_1b919cb2c_Var>()));
	_1b9176ba0_RangeChecker _80317_rc = _1b9176ba0_RangeChecker(this->self,_79217_rang,_79917_kind,_79417_d);
	jule::Bool _80913_ok = _80317_rc._method_check();
	if ((!(_80913_ok))) {
		return;
	}
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_79917_kind)}));
	jule::Ref<_1b8cd2c4b_ScopeChecker> _81617_ssc = this->self->_method_new_child_checker();
	if (jule::real(_79917_kind->_field_key_a)) {
		if ((!(this->self->_field_s->_method_is_flag(1LL))) && this->self->_method_is_duplicated_ident(0LLU,_79917_kind->_field_key_a->_field_ident)) {
			this->self->_field_s->_method_push_err(_79917_kind->_field_key_a->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_79917_kind->_field_key_a->_field_ident)}));
			this->self->_field_s->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
		}
		_81617_ssc->_field_table->_field_vars=jule::append(_81617_ssc->_field_table->_field_vars,jule::Slice<jule::Ref<_1b919cb2c_Var>>({_79917_kind->_field_key_a}));
	}
	if (jule::real(_79917_kind->_field_key_b)) {
		if ((!(this->self->_field_s->_method_is_flag(1LL))) && this->self->_method_is_duplicated_ident(0LLU,_79917_kind->_field_key_b->_field_ident)) {
			this->self->_field_s->_method_push_err(_79917_kind->_field_key_b->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_79917_kind->_field_key_b->_field_ident)}));
			this->self->_field_s->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
		}
		_81617_ssc->_field_table->_field_vars=jule::append(_81617_ssc->_field_table->_field_vars,jule::Slice<jule::Ref<_1b919cb2c_Var>>({_79917_kind->_field_key_b}));
	}
	_79917_kind->_field_scope=this->self->_method_check_iter_scope_sc(((jule::Uintptr)((_79917_kind).alloc)),_79140_it->_field_scope,_81617_ssc);
}



inline void _1b8cd2c4b_ScopeChecker::_method_check_iter(jule::Ref<_1d1e5192e_Iter> _83734_it) {
	if (_83734_it->_method_is_inf()) {
		this->self->_method_check_inf_iter(_83734_it);
		return;
	}
	{
		auto _match_expr{ _83734_it->_field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_WhileKind>>())) { goto _case_end_4712087728; }
		_case_begin_4712087728:;
		{
			this->self->_method_check_while_iter(_83734_it);
		}
		goto _match_end_4712086416;
		_case_end_4712087728:;
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_RangeKind>>())) { goto _case_end_4712087840; }
		_case_begin_4712087840:;
		{
			this->self->_method_check_range_iter(_83734_it);
		}
		goto _match_end_4712086416;
		_case_end_4712087840:;
		_case_begin_4712084976:;
		{
			jule::outln(jule::Str("error <unimplemented iteration kind>", 36));
		}
		goto _match_end_4712086416;
		_case_end_4712084976:;
		_match_end_4712086416:;
	}
}



inline jule::Bool _1b8cd2c4b_ScopeChecker::_method_check_valid_cont_label(jule::Uintptr _85042_it) {
	jule::Ref<_1b8cd2c4b_ScopeChecker> _85117_scope = this->self;
	_julec_label_iter:;
	if (_85117_scope->_field_it == _85042_it) {
		return true;
	}
	if (jule::real(_85117_scope->_field_parent)) {
		_85117_scope=_85117_scope->_field_parent;
		goto _julec_label_iter;
	}
	return false;
}



inline jule::Bool _1b8cd2c4b_ScopeChecker::_method_check_valid_break_label(jule::Uintptr _86643_ptr) {
	jule::Ref<_1b8cd2c4b_ScopeChecker> _86717_scope = this->self;
	_julec_label_iter:;
	if (_86717_scope->_field_it == _86643_ptr) {
		return true;
	}
	if (_86717_scope->_field_cse != 0LL) {
		jule::Uintptr _87517_mtch = ((jule::Uintptr)((((_1b8cd2c4b_Case*)(_86717_scope->_field_cse))->_field_owner).alloc));
		if (_87517_mtch == _86643_ptr) {
			return true;
		}
	}
	if (jule::real(_86717_scope->_field_parent)) {
		_86717_scope=_86717_scope->_field_parent;
		goto _julec_label_iter;
	}
	return false;
}



inline jule::Ref<_1b8cd2c4b_ContSt> _1b8cd2c4b_ScopeChecker::_method_check_cont_valid_scope(jule::Ref<_1d1e5192e_ContSt> _88941_c) {
	if (_88941_c->_field_label._field_id != 0LLU) {
		return jule::new_struct<_1b8cd2c4b_ContSt>(new( std::nothrow ) _1b8cd2c4b_ContSt());
	}
	_1b8cd2c4b_ScopeChecker _89417_scope = (*this);
	_julec_label_iter:;
	{
		if (!((((_89417_scope._field_it == 0LL) && jule::real(_89417_scope._field_parent)) && (!(jule::real(_89417_scope._field_owner)))))) { goto _case_end_4712115952; }
		_case_begin_4712115952:;
		{
			_89417_scope=_89417_scope._field_parent;
			goto _julec_label_iter;
		}
		goto _match_end_4712115776;
		_case_end_4712115952:;
		if (!((_89417_scope._field_it != 0LL))) { goto _case_end_4712116080; }
		_case_begin_4712116080:;
		{
			return jule::new_struct<_1b8cd2c4b_ContSt>(new( std::nothrow ) _1b8cd2c4b_ContSt(_89417_scope._field_it));
		}
		goto _match_end_4712115776;
		_case_end_4712116080:;
		_match_end_4712115776:;
	}
	(*this)._field_s->_method_push_err(_88941_c->_field_token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>({}));
	return jule::new_ref<_1b8cd2c4b_ContSt>();
}



inline void _1b8cd2c4b_ScopeChecker::_method_check_cont(jule::Ref<_1d1e5192e_ContSt> _90930_c) {
	jule::Ref<_1b8cd2c4b_ContSt> _91017_cont = this->self->_method_check_cont_valid_scope(_90930_c);
	if ((!(jule::real(_91017_cont)))) {
		return;
	}
	if (_90930_c->_field_label._field_id != 0LLU) {
		jule::Ref<_1b8cd2c4b_ScopeLabel> _91621_label = _1b8cd2c4b_find_label_parent(_90930_c->_field_label._field_kind,this->self->_field_parent);
		if ((!(jule::real(_91621_label)))) {
			this->self->_field_s->_method_push_err(_90930_c->_field_label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>({jule::Any(_90930_c->_field_label._field_kind)}));
			return;
		}
		_91621_label->_field_used=true;
		if ((_91621_label->_field_pos + 1LL) >= _91621_label->_field_scope->_field_scope->_field_stmts.len()) {
			this->self->_field_s->_method_push_err(_90930_c->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
			return;
		}
		jule::Int _92917_i = _91621_label->_field_pos + 1LL;
		if (_92917_i >= _91621_label->_field_scope->_field_scope->_field_stmts.len()) {
			this->self->_field_s->_method_push_err(_90930_c->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
		} else {
			jule::Any _93325_st = _91621_label->_field_scope->_field_scope->_field_stmts[static_cast<jule::Int>(_92917_i)];
			{
				auto _match_expr{ _93325_st };
				if (!(_match_expr.type_is<jule::Ref<_1b8cd2c4b_InfIter>>())) { goto _case_end_4712148048; }
				_case_begin_4712148048:;
				{
					_91017_cont->_field_it=((jule::Uintptr)((_93325_st.operator jule::Ref<_1b8cd2c4b_InfIter>()).alloc));
				}
				goto _match_end_4712144832;
				_case_end_4712148048:;
				if (!(_match_expr.type_is<jule::Ref<_1b8cd2c4b_RangeIter>>())) { goto _case_end_4712145712; }
				_case_begin_4712145712:;
				{
					_91017_cont->_field_it=((jule::Uintptr)((_93325_st.operator jule::Ref<_1b8cd2c4b_RangeIter>()).alloc));
				}
				goto _match_end_4712144832;
				_case_end_4712145712:;
				if (!(_match_expr.type_is<jule::Ref<_1b8cd2c4b_WhileIter>>())) { goto _case_end_4712145824; }
				_case_begin_4712145824:;
				{
					_91017_cont->_field_it=((jule::Uintptr)((_93325_st.operator jule::Ref<_1b8cd2c4b_WhileIter>()).alloc));
				}
				goto _match_end_4712144832;
				_case_end_4712145824:;
				_case_begin_4712145344:;
				{
					this->self->_field_s->_method_push_err(_90930_c->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
				}
				goto _match_end_4712144832;
				_case_end_4712145344:;
				_match_end_4712144832:;
			}
		}
	}
	if (_91017_cont->_field_it != 0LL) {
		if ((!(this->self->_method_check_valid_cont_label(_91017_cont->_field_it)))) {
			this->self->_field_s->_method_push_err(_90930_c->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
		}
	}
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_91017_cont)}));
}



inline void _1b8cd2c4b_ScopeChecker::_method_check_label(jule::Ref<_1d1e5192e_LabelSt> _95235_l) {
	if (jule::real(this->self->_method_find_label(_95235_l->_field_ident))) {
		this->self->_field_s->_method_push_err(_95235_l->_field_token,jule::Str("label is already exist in this identifier: @", 44),jule::Slice<jule::Any>({jule::Any(_95235_l->_field_ident)}));
		return;
	}
	jule::Ref<_1b8cd2c4b_Label> _95817_label = jule::new_struct<_1b8cd2c4b_Label>(new( std::nothrow ) _1b8cd2c4b_Label(_95235_l->_field_ident));
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_95817_label)}));
	this->self->_field_labels=jule::append(this->self->_field_labels.get(),jule::Slice<jule::Ref<_1b8cd2c4b_ScopeLabel>>({jule::new_struct<_1b8cd2c4b_ScopeLabel>(new( std::nothrow ) _1b8cd2c4b_ScopeLabel(_95235_l->_field_token,_95817_label,static_cast<jule::I64>(this->self->_field_scope->_field_stmts.len() - 1LL),this->self,jule::Bool()))}));
}



inline void _1b8cd2c4b_ScopeChecker::_method_push_goto(jule::Ref<_1d1e5192e_GotoSt> _97133_gt) {
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(jule::new_struct<_1b8cd2c4b_GotoSt>(new( std::nothrow ) _1b8cd2c4b_GotoSt(_97133_gt->_field_label._field_kind)))}));
	this->self->_field_gotos=jule::append(this->self->_field_gotos.get(),jule::Slice<jule::Ref<_1b8cd2c4b_ScopeGoto>>({jule::new_struct<_1b8cd2c4b_ScopeGoto>(new( std::nothrow ) _1b8cd2c4b_ScopeGoto(_97133_gt,this->self,static_cast<jule::I64>(this->self->_field_scope->_field_stmts.len() - 1LL)))}));
}



inline void _1b8cd2c4b_ScopeChecker::_method_check_postfix(jule::Ref<_1d1e5192e_AssignSt> _98337_a) {
	if (_98337_a->_field_left.len() > 1LL) {
		this->self->_field_s->_method_push_err(_98337_a->_field_setter,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return;
	}
	jule::Ref<_1d1e5192e_Expr> _98917_expr = _98337_a->_field_left[0LL]->_field_expr;
	jule::Ref<_1b9523799_Data> _99017_d = this->self->_field_s->_method_eval(_98917_expr,this->self);
	if ((!(jule::real(_99017_d)))) {
		return;
	}
	_1b8cd2c4b_check_assign(this->self->_field_s,_99017_d,jule::new_ref<_1b9523799_Data>(),_98337_a->_field_setter);
	if (jule::real(_99017_d->_field_kind->_method_ptr())) {
		jule::Ref<_1b951b088_Ptr> _99821_ptr = _99017_d->_field_kind->_method_ptr();
		if ((!(_99821_ptr->_method_is_unsafe())) && (!(this->self->_method_is_unsafe()))) {
			this->self->_field_s->_method_push_err(_98337_a->_field_left[0LL]->_field_expr->_field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>({}));
			return;
		}
	}
	jule::Ref<_1b951b088_TypeKind> _100517_check_t = _99017_d->_field_kind;
	if (jule::real(_99017_d->_field_kind->_method_ref())) {
		_100517_check_t=_99017_d->_field_kind->_method_ref()->_field_elem;
	}
	if ((!(jule::real(_100517_check_t->_method_prim()))) || (!(_1b9e28c5e_is_num(_100517_check_t->_method_prim()->_field_kind)))) {
		this->self->_field_s->_method_push_err(_98337_a->_field_setter,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any(_98337_a->_field_setter._field_kind),jule::Any(_99017_d->_field_kind->_method_to_str())}));
		return;
	}
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(jule::new_struct<_1b8cd2c4b_Postfix>(new( std::nothrow ) _1b8cd2c4b_Postfix(_99017_d->_field_model,_98337_a->_field_setter._field_kind)))}));
}



inline jule::Bool _1b8cd2c4b_ScopeChecker::_method_is_new_assign_ident(jule::Str _102138_ident) {
	if (_1d1da4277_is_ignore_ident(_102138_ident) || (_102138_ident == jule::Str("", 0))) {
		return false;
	}
	return (*this)._field_table->_method_def_by_ident(_102138_ident,false) == nullptr;
}



inline void _1b8cd2c4b_ScopeChecker::_method_check_single_assign(jule::Ref<_1d1e5192e_AssignSt> _102943_a) {
	jule::Ref<_1b9523799_Data> _103017_l = jule::new_ref<_1b9523799_Data>();
	jule::Ref<_1b9523799_Data> _103117_r = jule::new_ref<_1b9523799_Data>();
	if ((!(_1d1da4277_is_ignore_ident(_102943_a->_field_left[0LL]->_field_ident)))) {
		jule::Ref<_1d1e5192e_Expr> _103421_expr = _102943_a->_field_left[0LL]->_field_expr;
		_103017_l=this->self->_field_s->_method_eval(_103421_expr,this->self);
		if ((!(jule::real(_103017_l)))) {
			return;
		}
	}
	if (jule::real(_103017_l)) {
		_103117_r=this->self->_field_s->_method_evalp(_102943_a->_field_right,this->self,_103017_l->_field_kind);
	} else {
		_103117_r=this->self->_field_s->_method_eval(_102943_a->_field_right,this->self);
	}
	if ((!(jule::real(_103117_r)))) {
		return;
	}
	if ((!(jule::real(_103017_l)))) {
		if (_103117_r->_field_kind->_method_void()) {
			this->self->_field_s->_method_push_err(_102943_a->_field_right->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		}
		this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_103117_r)}));
		return;
	}
	if ((!(_1b8cd2c4b_check_assign(this->self->_field_s,_103017_l,_103117_r,_102943_a->_field_setter)))) {
		return;
	}
	if (jule::real(_103117_r->_field_kind->_method_tup())) {
		this->self->_field_s->_method_push_err(_102943_a->_field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>({}));
		return;
	}
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(jule::new_struct<_1b8cd2c4b_Assign>(new( std::nothrow ) _1b8cd2c4b_Assign(_103017_l->_field_model,_103117_r->_field_model,_102943_a->_field_setter._field_kind)))}));
	if ((_102943_a->_field_setter._field_kind != jule::Str("=", 1)) && (!(_103117_r->_method_is_const()))) {
		_102943_a->_field_setter._field_kind=_102943_a->_field_setter._field_kind.slice(0LL,static_cast<jule::Int>(_102943_a->_field_setter._field_kind.len() - 1LL));
		_1b9523799_BinopSolver _107721_solver = _1b9523799_BinopSolver(jule::new_struct<_1b9523799_Eval>(new( std::nothrow ) _1b9523799_Eval(this->self->_field_s,this->self,jule::Ref<_1b951b088_TypeKind>(),this->self->_method_is_unsafe(),jule::Ref<_1b919cb2c_Var>())),jule::Ref<_1b9523799_Data>(),jule::Ref<_1b9523799_Data>(),_102943_a->_field_setter);
		_103117_r=_107721_solver._method_solve_explicit(_103017_l,_103117_r);
		if ((!(jule::real(_103117_r)))) {
			return;
		}
		_102943_a->_field_setter._field_kind+=jule::Str("=", 1);
	}
	_1b9176ba0_AssignTypeChecker _109317_checker = _1b9176ba0_AssignTypeChecker(this->self->_field_s,_103017_l->_field_kind,_103117_r,_102943_a->_field_setter,true);
	_109317_checker._method_check();
}



inline void _1b8cd2c4b_ScopeChecker::_method___process_end_part_of_multi_assign(jule::Ref<_1b8cd2c4b_MultiAssign> _110357_st,jule::Ref<_1d1e5192e_AssignSt> _110413_a,jule::Ref<_1d1e5192e_AssignLeft> _110431_lexpr,jule::Ref<_1b9523799_Data> _110455_l,jule::Ref<_1b9523799_Data> _110469_r) {
	if (_1d1da4277_is_ignore_ident(_110431_lexpr->_field_ident)) {
		if (_110469_r->_field_kind->_method_void()) {
			(*this)._field_s->_method_push_err(_110413_a->_field_right->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		}
		_110357_st->_field_l=jule::append(_110357_st->_field_l,jule::Slice<jule::Any>({jule::Any(nullptr)}));
		return;
	}
	if (_110413_a->_field_declarative && (*this)._method_is_new_assign_ident(_110431_lexpr->_field_ident)) {
		jule::Ref<_1b919cb2c_Var> _111621_v = jule::new_struct<_1b919cb2c_Var>(new( std::nothrow ) _1b919cb2c_Var((*this)._field_scope,_110431_lexpr->_field_token,_110431_lexpr->_field_ident,jule::Bool(),jule::Bool(),_110431_lexpr->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),_110431_lexpr->_field_reference,jule::Str(),jule::Ref<_1b951b088_TypeSymbol>(),jule::new_struct<_1b9523799_Value>(new( std::nothrow ) _1b9523799_Value(_110413_a->_field_right,_110469_r)),jule::Ref<_1b8b10cbb_ReferenceStack>(),jule::Slice<jule::Ref<_1d1e5192e_Directive>>(),jule::Slice<jule::Ref<_1b919cb2c_Var>>()));
		(*this)._field_s->_method_check_var(_111621_v);
		_110357_st->_field_l=jule::append(_110357_st->_field_l,jule::Slice<jule::Any>({jule::Any(_111621_v)}));
		(*this)._field_table->_field_vars=jule::append((*this)._field_table->_field_vars,jule::Slice<jule::Ref<_1b919cb2c_Var>>({_111621_v}));
		(*this)._field_scope->_field_stmts=jule::append((*this)._field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_111621_v)}));
		return;
	}
	if (_110431_lexpr->_field_mutable || _110431_lexpr->_field_reference) {
		(*this)._field_s->_method_push_err(_110431_lexpr->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_110431_lexpr->_field_ident)}));
		(*this)._field_s->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	if ((!(_1b8cd2c4b_check_assign((*this)._field_s,_110455_l,_110469_r,_110413_a->_field_setter)))) {
		return;
	}
	
	(*this)._field_s->_method_check_validity_for_init_expr(_110455_l->_field_mutable,false,_110455_l->_field_kind,_110469_r,_110413_a->_field_setter);
	_1b9176ba0_AssignTypeChecker _115117_checker = _1b9176ba0_AssignTypeChecker((*this)._field_s,_110455_l->_field_kind,_110469_r,_110413_a->_field_setter,true);
	_115117_checker._method_check();
	_110357_st->_field_l=jule::append(_110357_st->_field_l,jule::Slice<jule::Any>({_110455_l->_field_model}));
}



inline void _1b8cd2c4b_ScopeChecker::_method_check_ret_multi_assign(jule::Ref<_1d1e5192e_AssignSt> _116346_a) {
	jule::Ref<_1b9523799_Data> _116417_rd = this->self->_field_s->_method_eval(_116346_a->_field_right,this->self);
	if ((!(jule::real(_116417_rd)))) {
		return;
	}
	jule::Slice<jule::Ref<_1b9523799_Data>> _116917_r = _1b8cd2c4b_get_datas_from_tuple_data(_116417_rd);
	{
		if (!((_116346_a->_field_left.len() > _116917_r.len()))) { goto _case_end_4712336816; }
		_case_begin_4712336816:;
		{
			this->self->_field_s->_method_push_err(_116346_a->_field_setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4712336640;
		_case_end_4712336816:;
		if (!((_116346_a->_field_left.len() < _116917_r.len()))) { goto _case_end_4712336960; }
		_case_begin_4712336960:;
		{
			this->self->_field_s->_method_push_err(_116346_a->_field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4712336640;
		_case_end_4712336960:;
		_match_end_4712336640:;
	}
	jule::Ref<_1b8cd2c4b_MultiAssign> _118117_st = jule::new_struct<_1b8cd2c4b_MultiAssign>(new( std::nothrow ) _1b8cd2c4b_MultiAssign(jule::Slice<jule::Any>(),_116417_rd->_field_model));
	if ((!(jule::real(_116417_rd->_field_kind->_method_tup())))) {
		_118117_st->_field_r=jule::Any(jule::new_struct<_1b8dbae99_TupleExprModel>(new( std::nothrow ) _1b8dbae99_TupleExprModel(_116917_r)));
	}
	{
		auto _range_expr = _116346_a->_field_left;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1b8cd2c4b_i = 0;
			_iter_begin_4712347248:;
			{
				jule::Ref<_1d1e5192e_AssignLeft> _119021_lexpr = _116346_a->_field_left[static_cast<jule::Int>(_1b8cd2c4b_i)];
				jule::Ref<_1b9523799_Data> _119121_l = jule::new_ref<_1b9523799_Data>();
				if ((!(_1d1da4277_is_ignore_ident(_119021_lexpr->_field_ident))) && ((!(_116346_a->_field_declarative)) || (!(this->self->_method_is_new_assign_ident(_119021_lexpr->_field_ident))))) {
					_119121_l=this->self->_field_s->_method_eval(_119021_lexpr->_field_expr,this->self);
					if ((!(jule::real(_119121_l)))) {
						goto _iter_next_4712347248;
					}
				}
				this->self->_method___process_end_part_of_multi_assign(_118117_st,_116346_a,_119021_lexpr,_119121_l,_116917_r[static_cast<jule::Int>(_1b8cd2c4b_i)]);
			}
			_iter_next_4712347248:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1b8cd2c4b_i; goto _iter_begin_4712347248; }
			_iter_end_4712347248:;
		}
	}
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_118117_st)}));
}



inline void _1b8cd2c4b_ScopeChecker::_method_check_multi_assign(jule::Ref<_1d1e5192e_AssignSt> _120642_a) {
	{
		auto _match_expr{ _120642_a->_field_right->_field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_FnCallExpr>>())) { goto _case_end_4712364240; }
		_case_begin_4712364240:;
		{
			this->self->_method_check_ret_multi_assign(_120642_a);
			return;
		}
		goto _match_end_4712363344;
		_case_end_4712364240:;
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_UnsafeExpr>>())) { goto _case_end_4712364368; }
		_case_begin_4712364368:;
		{
			{
				auto _match_expr{ _120642_a->_field_right->_field_kind.operator jule::Ref<_1d1e5192e_UnsafeExpr>()->_field_expr };
				if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_FnCallExpr>>())) { goto _case_end_4712368640; }
				_case_begin_4712368640:;
				{
					this->self->_method_check_ret_multi_assign(_120642_a);
					return;
				}
				goto _match_end_4712366192;
				_case_end_4712368640:;
				_match_end_4712366192:;
			}
		}
		goto _match_end_4712363344;
		_case_end_4712364368:;
		_match_end_4712363344:;
	}
	jule::Slice<jule::Any> _122017_right = _1b8cd2c4b_get_expr_models(_120642_a->_field_right->_field_kind);
	{
		if (!((_120642_a->_field_left.len() > _122017_right.len()))) { goto _case_end_4712371616; }
		_case_begin_4712371616:;
		{
			this->self->_field_s->_method_push_err(_120642_a->_field_setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4712371360;
		_case_end_4712371616:;
		if (!((_120642_a->_field_left.len() < _122017_right.len()))) { goto _case_end_4712371728; }
		_case_begin_4712371728:;
		{
			this->self->_field_s->_method_push_err(_120642_a->_field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4712371360;
		_case_end_4712371728:;
		_match_end_4712371360:;
	}
	jule::Ref<_1b8dbae99_TupleExprModel> _123217_right_tuple = jule::new_struct<_1b8dbae99_TupleExprModel>(new( std::nothrow ) _1b8dbae99_TupleExprModel());
	jule::Ref<_1b8cd2c4b_MultiAssign> _123417_st = jule::new_struct<_1b8cd2c4b_MultiAssign>(new( std::nothrow ) _1b8cd2c4b_MultiAssign(jule::Slice<jule::Any>(),jule::Any(_123217_right_tuple)));
	{
		auto _range_expr = _120642_a->_field_left;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1b8cd2c4b_i = 0;
			_iter_begin_4712381088:;
			{
				jule::Ref<_1d1e5192e_AssignLeft> _123921_lexpr = _120642_a->_field_left[static_cast<jule::Int>(_1b8cd2c4b_i)];
				jule::Ref<_1b9523799_Data> _124021_l = jule::new_ref<_1b9523799_Data>();
				jule::Ref<_1b9523799_Data> _124121_r = jule::new_ref<_1b9523799_Data>();
				if ((!(_1d1da4277_is_ignore_ident(_123921_lexpr->_field_ident))) && ((!(_120642_a->_field_declarative)) || (!(this->self->_method_is_new_assign_ident(_123921_lexpr->_field_ident))))) {
					_124021_l=this->self->_field_s->_method_eval(_123921_lexpr->_field_expr,this->self);
					if ((!(jule::real(_124021_l)))) {
						goto _iter_next_4712381088;
					}
				}
				if (jule::real(_124021_l)) {
					jule::Ref<_1d1e5192e_Expr> _125125_expr = jule::new_struct<_1d1e5192e_Expr>(new( std::nothrow ) _1d1e5192e_Expr(_120642_a->_field_right->_field_token,_122017_right[static_cast<jule::Int>(_1b8cd2c4b_i)]));
					_124121_r=this->self->_field_s->_method_evalp(_125125_expr,this->self,_124021_l->_field_kind);
				} else {
					jule::Ref<_1d1e5192e_Expr> _125425_expr = jule::new_struct<_1d1e5192e_Expr>(new( std::nothrow ) _1d1e5192e_Expr(_120642_a->_field_right->_field_token,_122017_right[static_cast<jule::Int>(_1b8cd2c4b_i)]));
					_124121_r=this->self->_field_s->_method_eval(_125425_expr,this->self);
				}
				if ((!(jule::real(_124121_r)))) {
					goto _iter_next_4712381088;
				}
				_123217_right_tuple->_field_datas=jule::append(_123217_right_tuple->_field_datas,jule::Slice<jule::Ref<_1b9523799_Data>>({_124121_r}));
				this->self->_method___process_end_part_of_multi_assign(_123417_st,_120642_a,_123921_lexpr,_124021_l,_124121_r);
			}
			_iter_next_4712381088:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1b8cd2c4b_i; goto _iter_begin_4712381088; }
			_iter_end_4712381088:;
		}
	}
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_123417_st)}));
}



inline void _1b8cd2c4b_ScopeChecker::_method_check_assign_st(jule::Ref<_1d1e5192e_AssignSt> _126939_a) {
	if (_1d1da4277_is_postfix_op(_126939_a->_field_setter._field_kind)) {
		this->self->_method_check_postfix(_126939_a);
		return;
	}
	if ((_126939_a->_field_left.len() == 1LL) && (!(_126939_a->_field_declarative))) {
		this->self->_method_check_single_assign(_126939_a);
		return;
	}
	this->self->_method_check_multi_assign(_126939_a);
}



inline jule::Ref<_1b8cd2c4b_Scope> _1b8cd2c4b_ScopeChecker::_method_check_case_scope(jule::Ref<_1b8cd2c4b_Case> _128336_c,jule::Ref<_1d1e5192e_ScopeTree> _128350_tree) {
	jule::Ref<_1b8cd2c4b_ScopeChecker> _128417_ssc = this->self->_method_new_child_checker();
	_128417_ssc->_field_cse=((jule::Uintptr)((_128336_c).alloc));
	return this->self->_method_check_child_sc(_128350_tree,_128417_ssc);
}



inline jule::Ref<_1b8cd2c4b_Case> _1b8cd2c4b_ScopeChecker::_method_check_case(jule::Ref<_1b8cd2c4b_Match> _128934_m,jule::Int _128945_i,jule::Ref<_1d1e5192e_Case> _128957_c,jule::Ref<_1b9523799_Data> _128987_expr) {
	jule::Ref<_1b8cd2c4b_Case> _129017__case = _128934_m->_field_cases[static_cast<jule::Int>(_128945_i)];
	_129017__case->_field_exprs=jule::Slice<jule::Any>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_128957_c->_field_exprs.len())));
	{
		auto _range_expr = _128957_c->_field_exprs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1b8cd2c4b_j = 0;
			jule::Ref<_1d1e5192e_Expr> _1b8cd2c4b_e = *_range_begin;
			_iter_begin_4712430624:;
			{
				if (_128934_m->_field_type_match) {
					jule::Ref<_1b9523799_Eval> _129525_eval = jule::new_struct<_1b9523799_Eval>(new( std::nothrow ) _1b9523799_Eval(this->self->_field_s,this->self,jule::Ref<_1b951b088_TypeKind>(),jule::Bool(),jule::Ref<_1b919cb2c_Var>()));
					jule::Ref<_1b9523799_Data> _130025_d = _129525_eval->_method_eval(_1b8cd2c4b_e);
					if (jule::real(_130025_d)) {
						_129017__case->_field_exprs[static_cast<jule::Int>(_1b8cd2c4b_j)]=jule::Any(_130025_d->_field_kind);
						if (_1b8cd2c4b_count_match_type(_128934_m,_130025_d->_field_kind) > 1LL) {
							this->self->_field_s->_method_push_err(_1b8cd2c4b_e->_field_token,jule::Str("type is already checked: @", 26),jule::Slice<jule::Any>({jule::Any(_130025_d->_field_kind->_method_to_str())}));
						}
					}
					jule::Ref<_1b8cd2894_Trait> _130821_trt = _128987_expr->_field_kind->_method_trt();
					if (jule::real(_130821_trt)) {
						this->self->_field_s->_method_check_type_compatibility(_128987_expr->_field_kind,_130025_d->_field_kind,_1b8cd2c4b_e->_field_token,false);
					}
					goto _iter_next_4712430624;
				}
				jule::Ref<_1b9523799_Data> _131621_d = this->self->_field_s->_method_eval(_1b8cd2c4b_e,this->self);
				if ((!(jule::real(_131621_d)))) {
					goto _iter_next_4712430624;
				}
				_129017__case->_field_exprs[static_cast<jule::Int>(_1b8cd2c4b_j)]=_131621_d->_field_model;
				_1b9176ba0_AssignTypeChecker _132321_checker = _1b9176ba0_AssignTypeChecker(this->self->_field_s,_128987_expr->_field_kind,_131621_d,_1b8cd2c4b_e->_field_token,true);
				_132321_checker._method_check();
			}
			_iter_next_4712430624:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1b8cd2c4b_j; _1b8cd2c4b_e = *_range_begin; goto _iter_begin_4712430624; }
			_iter_end_4712430624:;
		}
	}
	_129017__case->_field_scope=this->self->_method_check_case_scope(_129017__case,_128957_c->_field_scope);
	return _129017__case;
}



inline void _1b8cd2c4b_ScopeChecker::_method_check_cases(jule::Ref<_1d1e5192e_MatchCase> _133735_m,jule::Ref<_1b8cd2c4b_Match> _133770_rm,jule::Ref<_1b9523799_Data> _133786_expr) {
	_133770_rm->_field_cases=jule::Slice<jule::Ref<_1b8cd2c4b_Case>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_133735_m->_field_cases.len())));
	{
		auto _range_expr = _133735_m->_field_cases;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1b8cd2c4b_i = 0;
			_iter_begin_4712465408:;
			{
				jule::Ref<_1b8cd2c4b_Case> _134021__case = jule::new_struct<_1b8cd2c4b_Case>(new( std::nothrow ) _1b8cd2c4b_Case(_133770_rm,jule::Ref<_1b8cd2c4b_Scope>(),jule::Slice<jule::Any>(),jule::Ref<_1b8cd2c4b_Case>()));
				if (_1b8cd2c4b_i > 0LL) {
					_133770_rm->_field_cases[static_cast<jule::Int>(_1b8cd2c4b_i - 1LL)]->_field_next=_134021__case;
				}
				_133770_rm->_field_cases[static_cast<jule::Int>(_1b8cd2c4b_i)]=_134021__case;
			}
			_iter_next_4712465408:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1b8cd2c4b_i; goto _iter_begin_4712465408; }
			_iter_end_4712465408:;
		}
	}
	if (jule::real(_133770_rm->_field_default) && (_133735_m->_field_cases.len() > 0LL)) {
		_133770_rm->_field_cases[static_cast<jule::Int>(_133770_rm->_field_cases.len() - 1LL)]->_field_next=_133770_rm->_field_default;
	}
	{
		auto _range_expr = _133735_m->_field_cases;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1b8cd2c4b_i = 0;
			jule::Ref<_1d1e5192e_Case> _1b8cd2c4b_c = *_range_begin;
			_iter_begin_4712472736:;
			{
				this->self->_method_check_case(_133770_rm,_1b8cd2c4b_i,_1b8cd2c4b_c,_133786_expr);
			}
			_iter_next_4712472736:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1b8cd2c4b_i; _1b8cd2c4b_c = *_range_begin; goto _iter_begin_4712472736; }
			_iter_end_4712472736:;
		}
	}
}



inline jule::Ref<_1b8cd2c4b_Case> _1b8cd2c4b_ScopeChecker::_method_check_default(jule::Ref<_1b8cd2c4b_Match> _136037_m,jule::Ref<_1d1e5192e_Else> _136052_d) {
	jule::Ref<_1b8cd2c4b_Case> _136117_def = jule::new_struct<_1b8cd2c4b_Case>(new( std::nothrow ) _1b8cd2c4b_Case(_136037_m,jule::Ref<_1b8cd2c4b_Scope>(),jule::Slice<jule::Any>(),jule::Ref<_1b8cd2c4b_Case>()));
	_136117_def->_field_scope=this->self->_method_check_case_scope(_136117_def,_136052_d->_field_scope);
	return _136117_def;
}



inline void _1b8cd2c4b_ScopeChecker::_method_check_type_match(jule::Ref<_1d1e5192e_MatchCase> _136840_m) {
	jule::Ref<_1b9523799_Data> _136917_d = this->self->_field_s->_method_eval(_136840_m->_field_expr,this->self);
	if ((!(jule::real(_136917_d)))) {
		return;
	}
	if ((!((jule::real(_136917_d->_field_kind->_method_prim()) && _136917_d->_field_kind->_method_prim()->_method_is_any()) || jule::real(_136917_d->_field_kind->_method_trt())))) {
		this->self->_field_s->_method_push_err(_136840_m->_field_expr->_field_token,jule::Str("type-case must be have <any> or trait typed expression", 54),jule::Slice<jule::Any>({}));
		return;
	}
	jule::Ref<_1b8cd2c4b_Match> _137917_tm = jule::new_struct<_1b8cd2c4b_Match>(new( std::nothrow ) _1b8cd2c4b_Match(_136917_d,true,jule::Slice<jule::Ref<_1b8cd2c4b_Case>>(),jule::Ref<_1b8cd2c4b_Case>()));
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_137917_tm)}));
	if (jule::real(_136840_m->_field_default)) {
		_137917_tm->_field_default=this->self->_method_check_default(_137917_tm,_136840_m->_field_default);
	}
	this->self->_method_check_cases(_136840_m,_137917_tm,_136917_d);
}



inline void _1b8cd2c4b_ScopeChecker::_method_check_common_match(jule::Ref<_1d1e5192e_MatchCase> _139242_m) {
	jule::Ref<_1b9523799_Data> _139317_d = jule::new_ref<_1b9523799_Data>();
	if ((!(jule::real(_139242_m->_field_expr)))) {
		_139317_d=jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_1b951b088_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1b951b088_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),_1b9d678e5_Const::_static_method_new_bool(true)));
		_139317_d->_field_model=jule::Any(_139317_d->_field_constant);
	} else {
		_139317_d=this->self->_field_s->_method_eval(_139242_m->_field_expr,this->self);
		if ((!(jule::real(_139317_d)))) {
			return;
		}
	}
	jule::Ref<_1b8cd2c4b_Match> _140717_mc = jule::new_struct<_1b8cd2c4b_Match>(new( std::nothrow ) _1b8cd2c4b_Match(_139317_d,jule::Bool(),jule::Slice<jule::Ref<_1b8cd2c4b_Case>>(),jule::Ref<_1b8cd2c4b_Case>()));
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_140717_mc)}));
	if (jule::real(_139242_m->_field_default)) {
		_140717_mc->_field_default=this->self->_method_check_default(_140717_mc,_139242_m->_field_default);
	}
	this->self->_method_check_cases(_139242_m,_140717_mc,_139317_d);
}



inline void _1b8cd2c4b_ScopeChecker::_method_check_match(jule::Ref<_1d1e5192e_MatchCase> _141935_m) {
	if (_141935_m->_field_type_match) {
		this->self->_method_check_type_match(_141935_m);
		return;
	}
	this->self->_method_check_common_match(_141935_m);
}



inline void _1b8cd2c4b_ScopeChecker::_method_check_fall(jule::Ref<_1d1e5192e_FallSt> _142729_f) {
	if (((*this)._field_cse == 0LL) || (((*this)._field_scope->_field_stmts.len() + 1LL) < (*this)._field_scope->_field_stmts.len())) {
		(*this)._field_s->_method_push_err(_142729_f->_field_token,jule::Str("fallthrough keyword can only useable at end of the case scopes", 62),jule::Slice<jule::Any>({}));
		return;
	}
	_1b8cd2c4b_Case* _143317__case = ((_1b8cd2c4b_Case*)((*this)._field_cse));
	if ((!(jule::real(_143317__case->_field_next)))) {
		(*this)._field_s->_method_push_err(_142729_f->_field_token,jule::Str("fallthrough cannot useable at final case", 40),jule::Slice<jule::Any>({}));
		(*this)._field_s->_method_push_suggestion(jule::Str("remove \"fall\" keyword", 21),jule::Slice<jule::Any>({}));
		return;
	}
	(*this)._field_scope->_field_stmts=jule::append((*this)._field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(jule::new_struct<_1b8cd2c4b_FallSt>(new( std::nothrow ) _1b8cd2c4b_FallSt(static_cast<jule::Uintptr>(((jule::Uintptr)((_143317__case->_field_next).alloc))))))}));
}



inline jule::Ref<_1b8cd2c4b_BreakSt> _1b8cd2c4b_ScopeChecker::_method_check_break_with_label(jule::Ref<_1d1e5192e_BreakSt> _144542_b) {
	jule::Ref<_1b8cd2c4b_BreakSt> _144617_brk = this->self->_method_check_plain_break(_144542_b);
	if ((!(jule::real(_144617_brk)))) {
		return jule::new_ref<_1b8cd2c4b_BreakSt>();
	}
	_144617_brk->_field_it=0LL;
	_144617_brk->_field_mtch=0LL;
	jule::Ref<_1b8cd2c4b_ScopeLabel> _145617_label = _1b8cd2c4b_find_label_parent(_144542_b->_field_label._field_kind,this->self->_field_parent);
	if ((!(jule::real(_145617_label)))) {
		this->self->_field_s->_method_push_err(_144542_b->_field_label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>({jule::Any(_144542_b->_field_label._field_kind)}));
		return jule::new_ref<_1b8cd2c4b_BreakSt>();
	}
	_145617_label->_field_used=true;
	if ((_145617_label->_field_pos + 1LL) >= _145617_label->_field_scope->_field_scope->_field_stmts.len()) {
		this->self->_field_s->_method_push_err(_144542_b->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b8cd2c4b_BreakSt>();
	}
	jule::Int _146913_i = _145617_label->_field_pos + 1LL;
	if (_146913_i >= _145617_label->_field_scope->_field_scope->_field_stmts.len()) {
		this->self->_field_s->_method_push_err(_144542_b->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
	} else {
		jule::Any _147321_st = _145617_label->_field_scope->_field_scope->_field_stmts[static_cast<jule::Int>(_146913_i)];
		{
			auto _match_expr{ _147321_st };
			if (!(_match_expr.type_is<jule::Ref<_1b8cd2c4b_InfIter>>())) { goto _case_end_4712563984; }
			_case_begin_4712563984:;
			{
				_144617_brk->_field_it=((jule::Uintptr)((_147321_st.operator jule::Ref<_1b8cd2c4b_InfIter>()).alloc));
			}
			goto _match_end_4712560768;
			_case_end_4712563984:;
			if (!(_match_expr.type_is<jule::Ref<_1b8cd2c4b_RangeIter>>())) { goto _case_end_4712561648; }
			_case_begin_4712561648:;
			{
				_144617_brk->_field_it=((jule::Uintptr)((_147321_st.operator jule::Ref<_1b8cd2c4b_RangeIter>()).alloc));
			}
			goto _match_end_4712560768;
			_case_end_4712561648:;
			if (!(_match_expr.type_is<jule::Ref<_1b8cd2c4b_WhileIter>>())) { goto _case_end_4712561760; }
			_case_begin_4712561760:;
			{
				_144617_brk->_field_it=((jule::Uintptr)((_147321_st.operator jule::Ref<_1b8cd2c4b_WhileIter>()).alloc));
			}
			goto _match_end_4712560768;
			_case_end_4712561760:;
			if (!(_match_expr.type_is<jule::Ref<_1b8cd2c4b_Match>>())) { goto _case_end_4712561872; }
			_case_begin_4712561872:;
			{
				_144617_brk->_field_mtch=((jule::Uintptr)((_147321_st.operator jule::Ref<_1b8cd2c4b_Match>()).alloc));
			}
			goto _match_end_4712560768;
			_case_end_4712561872:;
			_case_begin_4712561280:;
			{
				this->self->_field_s->_method_push_err(_144542_b->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
			}
			goto _match_end_4712560768;
			_case_end_4712561280:;
			_match_end_4712560768:;
		}
	}
	if (_144617_brk->_field_it != 0LL) {
		if ((!(this->self->_method_check_valid_break_label(_144617_brk->_field_it)))) {
			this->self->_field_s->_method_push_err(_144542_b->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
		}
	}
	if (_144617_brk->_field_mtch != 0LL) {
		if ((!(this->self->_method_check_valid_break_label(_144617_brk->_field_mtch)))) {
			this->self->_field_s->_method_push_err(_144542_b->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
		}
	}
	return _144617_brk;
}



inline jule::Ref<_1b8cd2c4b_BreakSt> _1b8cd2c4b_ScopeChecker::_method_check_plain_break(jule::Ref<_1d1e5192e_BreakSt> _149837_b) {
	jule::Ref<_1b8cd2c4b_ScopeChecker> _149917_scope = this->self;
	_julec_label_iter:;
	{
		if (!(((((_149917_scope->_field_it == 0LL) && (_149917_scope->_field_cse == 0LL)) && jule::real(_149917_scope->_field_parent)) && (!(jule::real(_149917_scope->_field_owner)))))) { goto _case_end_4712581440; }
		_case_begin_4712581440:;
		{
			_149917_scope=_149917_scope->_field_parent;
			goto _julec_label_iter;
		}
		goto _match_end_4712581184;
		_case_end_4712581440:;
		if (!((_149917_scope->_field_it != 0LL))) { goto _case_end_4712581568; }
		_case_begin_4712581568:;
		{
			return jule::new_struct<_1b8cd2c4b_BreakSt>(new( std::nothrow ) _1b8cd2c4b_BreakSt(_149917_scope->_field_it,jule::Uintptr()));
		}
		goto _match_end_4712581184;
		_case_end_4712581568:;
		if (!((_149917_scope->_field_cse != 0LL))) { goto _case_end_4712581696; }
		_case_begin_4712581696:;
		{
			return jule::new_struct<_1b8cd2c4b_BreakSt>(new( std::nothrow ) _1b8cd2c4b_BreakSt(jule::Uintptr(),static_cast<jule::Uintptr>(((jule::Uintptr)((((_1b8cd2c4b_Case*)(_149917_scope->_field_cse))->_field_owner).alloc)))));
		}
		goto _match_end_4712581184;
		_case_end_4712581696:;
		_match_end_4712581184:;
	}
	this->self->_field_s->_method_push_err(_149837_b->_field_token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>({}));
	return jule::new_ref<_1b8cd2c4b_BreakSt>();
}



inline void _1b8cd2c4b_ScopeChecker::_method_check_break(jule::Ref<_1d1e5192e_BreakSt> _151731_b) {
	if (_151731_b->_field_label._field_id != 0LLU) {
		jule::Ref<_1b8cd2c4b_BreakSt> _151921_brk = this->self->_method_check_break_with_label(_151731_b);
		this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_151921_brk)}));
		return;
	}
	jule::Ref<_1b8cd2c4b_BreakSt> _152417_brk = this->self->_method_check_plain_break(_151731_b);
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_152417_brk)}));
}



inline void _1b8cd2c4b_ScopeChecker::_method_check_ret(jule::Ref<_1d1e5192e_RetSt> _152833_r) {
	jule::Ref<_1b8cd2c4b_RetSt> _152917_rt = jule::new_struct<_1b8cd2c4b_RetSt>(new( std::nothrow ) _1b8cd2c4b_RetSt());
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_152917_rt)}));
	jule::Ref<_1b9176ba0_RetTypeChecker> _153217_rtc = jule::new_struct<_1b9176ba0_RetTypeChecker>(new( std::nothrow ) _1b9176ba0_RetTypeChecker(this->self,this->self->_method_get_root()->_field_owner,jule::Slice<jule::Ref<_1b951b088_TypeKind>>(),jule::Slice<jule::Ref<_1d1e5192e_Expr>>(),jule::Slice<jule::Ref<_1b919cb2c_Var>>(),_152833_r->_field_token,jule::Any()));
	jule::Bool _153713_ok = _153217_rtc->_method_check(_152833_r->_field_expr);
	if ((!(_153713_ok))) {
		return;
	}
	if ((!(jule::real(_152833_r->_field_expr))) && (_153217_rtc->_field_vars.len() == 0LL)) {
		return;
	}
	_152917_rt->_field_vars=_153217_rtc->_field_vars;
	if (jule::real(_152833_r->_field_expr)) {
		_152917_rt->_field_expr=_153217_rtc->_field_model;
	}
}



inline void _1b8cd2c4b_ScopeChecker::_method_check_node(jule::Any _155334_node) {
	{
		auto _match_expr{ _155334_node };
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_Comment>>())) { goto _case_end_4712624960; }
		_case_begin_4712624960:;
		{
			goto _match_end_4712623536;
		}
		goto _match_end_4712623536;
		_case_end_4712624960:;
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_ScopeTree>>())) { goto _case_end_4712625472; }
		_case_begin_4712625472:;
		{
			this->self->_method_check_anon_scope(_155334_node.operator jule::Ref<_1d1e5192e_ScopeTree>());
		}
		goto _match_end_4712623536;
		_case_end_4712625472:;
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_VarDecl>>())) { goto _case_end_4712624640; }
		_case_begin_4712624640:;
		{
			this->self->_method_check_var_decl(_155334_node.operator jule::Ref<_1d1e5192e_VarDecl>());
		}
		goto _match_end_4712623536;
		_case_end_4712624640:;
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_TypeAliasDecl>>())) { goto _case_end_4712624752; }
		_case_begin_4712624752:;
		{
			this->self->_method_check_type_alias_decl(_155334_node.operator jule::Ref<_1d1e5192e_TypeAliasDecl>());
		}
		goto _match_end_4712623536;
		_case_end_4712624752:;
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_Expr>>())) { goto _case_end_4712626016; }
		_case_begin_4712626016:;
		{
			this->self->_method_check_expr(_155334_node.operator jule::Ref<_1d1e5192e_Expr>());
		}
		goto _match_end_4712623536;
		_case_end_4712626016:;
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_Conditional>>())) { goto _case_end_4712626128; }
		_case_begin_4712626128:;
		{
			this->self->_method_check_conditional(_155334_node.operator jule::Ref<_1d1e5192e_Conditional>());
		}
		goto _match_end_4712623536;
		_case_end_4712626128:;
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_Iter>>())) { goto _case_end_4712626240; }
		_case_begin_4712626240:;
		{
			this->self->_method_check_iter(_155334_node.operator jule::Ref<_1d1e5192e_Iter>());
		}
		goto _match_end_4712623536;
		_case_end_4712626240:;
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_ContSt>>())) { goto _case_end_4712626352; }
		_case_begin_4712626352:;
		{
			this->self->_method_check_cont(_155334_node.operator jule::Ref<_1d1e5192e_ContSt>());
		}
		goto _match_end_4712623536;
		_case_end_4712626352:;
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_LabelSt>>())) { goto _case_end_4712626464; }
		_case_begin_4712626464:;
		{
			this->self->_method_check_label(_155334_node.operator jule::Ref<_1d1e5192e_LabelSt>());
		}
		goto _match_end_4712623536;
		_case_end_4712626464:;
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_GotoSt>>())) { goto _case_end_4712626576; }
		_case_begin_4712626576:;
		{
			this->self->_method_push_goto(_155334_node.operator jule::Ref<_1d1e5192e_GotoSt>());
		}
		goto _match_end_4712623536;
		_case_end_4712626576:;
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_AssignSt>>())) { goto _case_end_4712626688; }
		_case_begin_4712626688:;
		{
			this->self->_method_check_assign_st(_155334_node.operator jule::Ref<_1d1e5192e_AssignSt>());
		}
		goto _match_end_4712623536;
		_case_end_4712626688:;
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_MatchCase>>())) { goto _case_end_4712626800; }
		_case_begin_4712626800:;
		{
			this->self->_method_check_match(_155334_node.operator jule::Ref<_1d1e5192e_MatchCase>());
		}
		goto _match_end_4712623536;
		_case_end_4712626800:;
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_FallSt>>())) { goto _case_end_4712626912; }
		_case_begin_4712626912:;
		{
			this->self->_method_check_fall(_155334_node.operator jule::Ref<_1d1e5192e_FallSt>());
		}
		goto _match_end_4712623536;
		_case_end_4712626912:;
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_BreakSt>>())) { goto _case_end_4712627024; }
		_case_begin_4712627024:;
		{
			this->self->_method_check_break(_155334_node.operator jule::Ref<_1d1e5192e_BreakSt>());
		}
		goto _match_end_4712623536;
		_case_end_4712627024:;
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_RetSt>>())) { goto _case_end_4712627136; }
		_case_begin_4712627136:;
		{
			this->self->_method_check_ret(_155334_node.operator jule::Ref<_1d1e5192e_RetSt>());
		}
		goto _match_end_4712623536;
		_case_end_4712627136:;
		_case_begin_4712624000:;
		{
			jule::outln(jule::Str("error <unimplemented scope node>", 32));
		}
		goto _match_end_4712623536;
		_case_end_4712624000:;
		_match_end_4712623536:;
	}
}



inline void _1b8cd2c4b_ScopeChecker::_method_check_tree(void) {
	{
		auto _range_expr = this->self->_field_tree->_field_stmts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Any _1b8cd2c4b_stmt = *_range_begin;
			_iter_begin_4712655568:;
			{
				this->self->_method_check_node(_1b8cd2c4b_stmt);
			}
			_iter_next_4712655568:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b8cd2c4b_stmt = *_range_begin; goto _iter_begin_4712655568; }
			_iter_end_4712655568:;
		}
	}
}



inline void _1b8cd2c4b_ScopeChecker::_method_check_same_scope_goto(jule::Ref<_1b8cd2c4b_ScopeGoto> _158040_gt,jule::Ref<_1b8cd2c4b_ScopeLabel> _158060_label) {
	if (_158060_label->_field_pos < _158040_gt->_field_pos) {
		return;
	}
	jule::Int _158517_i = _158060_label->_field_pos;
	_iter_begin_4712661216:;
	if (!(_158517_i > _158040_gt->_field_pos)) { goto _iter_end_4712661216; }
	{
		jule::Any _158717_stmt = _158060_label->_field_scope->_field_scope->_field_stmts[static_cast<jule::Int>(_158517_i)];
		if (_1b8cd2c4b_st_is_def(_158717_stmt)) {
			(*this)._field_s->_method_push_err(_158040_gt->_field_gt->_field_token,jule::Str("goto @ jumps over declaration(s)", 32),jule::Slice<jule::Any>({jule::Any(_158040_gt->_field_gt->_field_label._field_kind)}));
			goto _iter_end_4712661216;
		}
	}
	_iter_next_4712661216:;
	(_158517_i)--;
	goto _iter_begin_4712661216;
	_iter_end_4712661216:;
}



inline jule::Bool _1b8cd2c4b_ScopeChecker::_method_check_label_parents(jule::Ref<_1b8cd2c4b_ScopeGoto> _159538_gt,jule::Ref<_1b8cd2c4b_ScopeLabel> _159558_label) {
	jule::Ref<_1b8cd2c4b_ScopeChecker> _159617_scope = _159558_label->_field_scope;
	_julec_label_parent_scopes:;
	if (jule::real(_159617_scope->_field_parent) && ((_159617_scope->_field_parent).alloc != (_159538_gt->_field_scope).alloc)) {
		_159617_scope=_159617_scope->_field_parent;
		{
			auto _range_expr = _159617_scope->_field_scope->_field_stmts;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Int _1b8cd2c4b_i = 0;
				jule::Any _1b8cd2c4b_stmt = *_range_begin;
				_iter_begin_4712677008:;
				{
					{
						if (!((_1b8cd2c4b_i >= _159558_label->_field_pos))) { goto _case_end_4712679504; }
						_case_begin_4712679504:;
						{
							return true;
						}
						goto _match_end_4712679264;
						_case_end_4712679504:;
						if (!((_1b8cd2c4b_st_is_def(_1b8cd2c4b_stmt)))) { goto _case_end_4712679632; }
						_case_begin_4712679632:;
						{
							(*this)._field_s->_method_push_err(_159538_gt->_field_gt->_field_token,jule::Str("goto @ jumps over declaration(s)", 32),jule::Slice<jule::Any>({jule::Any(_159538_gt->_field_gt->_field_label._field_kind)}));
							return false;
						}
						goto _match_end_4712679264;
						_case_end_4712679632:;
						_match_end_4712679264:;
					}
				}
				_iter_next_4712677008:;
				++_range_begin;
				if (_range_begin != _range_end) { ++_1b8cd2c4b_i; _1b8cd2c4b_stmt = *_range_begin; goto _iter_begin_4712677008; }
				_iter_end_4712677008:;
			}
		}
		goto _julec_label_parent_scopes;
	}
	return true;
}



inline void _1b8cd2c4b_ScopeChecker::_method_check_goto_scope(jule::Ref<_1b8cd2c4b_ScopeGoto> _161839_gt,jule::Ref<_1b8cd2c4b_ScopeLabel> _161855_label) {
	jule::Int _161917_i = _161839_gt->_field_pos;
	_iter_begin_4712689776:;
	if (!(_161917_i < _161839_gt->_field_scope->_field_scope->_field_stmts.len())) { goto _iter_end_4712689776; }
	{
		{
			if (!((_161917_i >= _161855_label->_field_pos))) { goto _case_end_4712691872; }
			_case_begin_4712691872:;
			{
				return;
			}
			goto _match_end_4712691632;
			_case_end_4712691872:;
			if (!((_1b8cd2c4b_st_is_def(_161839_gt->_field_scope->_field_scope->_field_stmts[static_cast<jule::Int>(_161917_i)])))) { goto _case_end_4712692000; }
			_case_begin_4712692000:;
			{
				(*this)._field_s->_method_push_err(_161839_gt->_field_gt->_field_token,jule::Str("goto @ jumps over declaration(s)", 32),jule::Slice<jule::Any>({jule::Any(_161839_gt->_field_gt->_field_label._field_kind)}));
				return;
			}
			goto _match_end_4712691632;
			_case_end_4712692000:;
			_match_end_4712691632:;
		}
	}
	_iter_next_4712689776:;
	(_161917_i)++;
	goto _iter_begin_4712689776;
	_iter_end_4712689776:;
}



inline void _1b8cd2c4b_ScopeChecker::_method_check_diff_scope_goto(jule::Ref<_1b8cd2c4b_ScopeGoto> _163244_gt,jule::Ref<_1b8cd2c4b_ScopeLabel> _163264_label) {
	{
		if (!(((_163264_label->_field_scope->_field_child_index > 0LL) && (_163244_gt->_field_scope->_field_child_index == 0LL)))) { goto _case_end_4712702640; }
		_case_begin_4712702640:;
		{
			if ((!((*this)._method_check_label_parents(_163244_gt,_163264_label)))) {
				return;
			}
		}
		goto _match_end_4712702400;
		_case_end_4712702640:;
		if (!((_163264_label->_field_scope->_field_child_index < _163244_gt->_field_scope->_field_child_index))) { goto _case_end_4712702768; }
		_case_begin_4712702768:;
		{
			return;
		}
		goto _match_end_4712702400;
		_case_end_4712702768:;
		_match_end_4712702400:;
	}
	jule::Ref<_1b8cd2c4b_ScopeChecker> _164317_scope = _163264_label->_field_scope;
	jule::Int _164417_i = _163264_label->_field_pos - 1LL;
	_iter_begin_4712702496:;
	if (!(_164417_i >= 0LL)) { goto _iter_end_4712702496; }
	{
		jule::Any _164617_s = _164317_scope->_field_scope->_field_stmts[static_cast<jule::Int>(_164417_i)];
		{
			auto _match_expr{ _164617_s };
			if (!(_match_expr.type_is<jule::Ref<_1b8cd2c4b_Scope>>())) { goto _case_end_4712713088; }
			_case_begin_4712713088:;
			{
				if (_164417_i <= _163244_gt->_field_pos) {
					return;
				}
			}
			goto _match_end_4712712576;
			_case_end_4712713088:;
			_match_end_4712712576:;
		}
		if (_1b8cd2c4b_st_is_def(_164617_s)) {
			(*this)._field_s->_method_push_err(_163244_gt->_field_gt->_field_token,jule::Str("goto @ jumps over declaration(s)", 32),jule::Slice<jule::Any>({jule::Any(_163244_gt->_field_gt->_field_label._field_kind)}));
			goto _iter_end_4712702496;
		}
	}
	_iter_next_4712702496:;
	(_164417_i)--;
	goto _iter_begin_4712702496;
	_iter_end_4712702496:;
	if (jule::real(_164317_scope->_field_parent) && ((_164317_scope->_field_parent).alloc != (_163244_gt->_field_scope).alloc)) {
		(*this)._method_check_label_parents(_163244_gt,_163264_label);
	} else {
		(*this)._method_check_goto_scope(_163244_gt,_163264_label);
	}
}



inline void _1b8cd2c4b_ScopeChecker::_method_check_goto(jule::Ref<_1b8cd2c4b_ScopeGoto> _166833_gt,jule::Ref<_1b8cd2c4b_ScopeLabel> _166853_label) {
	{
		if (!(((_166833_gt->_field_scope).alloc == (_166853_label->_field_scope).alloc))) { goto _case_end_4712724944; }
		_case_begin_4712724944:;
		{
			(*this)._method_check_same_scope_goto(_166833_gt,_166853_label);
		}
		goto _match_end_4712724704;
		_case_end_4712724944:;
		if (!((_166853_label->_field_scope->_field_child_index > 0LL))) { goto _case_end_4712725072; }
		_case_begin_4712725072:;
		{
			(*this)._method_check_diff_scope_goto(_166833_gt,_166853_label);
		}
		goto _match_end_4712724704;
		_case_end_4712725072:;
		_match_end_4712724704:;
	}
}



inline void _1b8cd2c4b_ScopeChecker::_method_check_gotos(void) {
	{
		auto _range_expr = (*this)._field_gotos.get();
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b8cd2c4b_ScopeGoto> _1b8cd2c4b_gt = *_range_begin;
			_iter_begin_4712730656:;
			{
				jule::Ref<_1b8cd2c4b_ScopeLabel> _168021_label = (*this)._method_find_label_all(_1b8cd2c4b_gt->_field_gt->_field_label._field_kind);
				if ((!(jule::real(_168021_label)))) {
					(*this)._field_s->_method_push_err(_1b8cd2c4b_gt->_field_gt->_field_token,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>({jule::Any(_1b8cd2c4b_gt->_field_gt->_field_label._field_kind)}));
					goto _iter_next_4712730656;
				}
				_168021_label->_field_used=true;
				(*this)._method_check_goto(_1b8cd2c4b_gt,_168021_label);
			}
			_iter_next_4712730656:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b8cd2c4b_gt = *_range_begin; goto _iter_begin_4712730656; }
			_iter_end_4712730656:;
		}
	}
}



inline void _1b8cd2c4b_ScopeChecker::_method_check_labels(void) {
	{
		auto _range_expr = (*this)._field_labels.get();
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b8cd2c4b_ScopeLabel> _1b8cd2c4b_l = *_range_begin;
			_iter_begin_4712741424:;
			{
				if ((!(_1b8cd2c4b_l->_field_used))) {
					(*this)._field_s->_method_push_err(_1b8cd2c4b_l->_field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>({jule::Any(_1b8cd2c4b_l->_field_label->_field_ident)}));
				}
			}
			_iter_next_4712741424:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b8cd2c4b_l = *_range_begin; goto _iter_begin_4712741424; }
			_iter_end_4712741424:;
		}
	}
}



inline void _1b8cd2c4b_ScopeChecker::_method_check_vars(void) {
	{
		auto _range_expr = (*this)._field_table->_field_vars;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b919cb2c_Var> _1b8cd2c4b_v = *_range_begin;
			_iter_begin_4712747392:;
			{
				if ((((!(_1b8cd2c4b_v->_field_used)) && (!(_1d1da4277_is_ignore_ident(_1b8cd2c4b_v->_field_ident)))) && (!(_1d1da4277_is_anon_ident(_1b8cd2c4b_v->_field_ident)))) && (_1b8cd2c4b_v->_field_ident != jule::Str("self", 4))) {
					(*this)._field_s->_method_push_err(_1b8cd2c4b_v->_field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>({jule::Any(_1b8cd2c4b_v->_field_ident)}));
				}
			}
			_iter_next_4712747392:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b8cd2c4b_v = *_range_begin; goto _iter_begin_4712747392; }
			_iter_end_4712747392:;
		}
	}
}



inline void _1b8cd2c4b_ScopeChecker::_method_check_aliases(void) {
	{
		auto _range_expr = (*this)._field_table->_field_type_aliases;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b951b088_TypeAlias> _1b8cd2c4b_a = *_range_begin;
			_iter_begin_4712754912:;
			{
				if (((!(_1b8cd2c4b_a->_field_used)) && (!(_1d1da4277_is_ignore_ident(_1b8cd2c4b_a->_field_ident)))) && (!(_1d1da4277_is_anon_ident(_1b8cd2c4b_a->_field_ident)))) {
					(*this)._field_s->_method_push_err(_1b8cd2c4b_a->_field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>({jule::Any(_1b8cd2c4b_a->_field_ident)}));
				}
			}
			_iter_next_4712754912:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b8cd2c4b_a = *_range_begin; goto _iter_begin_4712754912; }
			_iter_end_4712754912:;
		}
	}
}



inline void _1b8cd2c4b_ScopeChecker::_method_check(jule::Ref<_1d1e5192e_ScopeTree> _171629_tree,jule::Ref<_1b8cd2c4b_Scope> _171651_s) {
	_171651_s->_field_deferred=_171629_tree->_field_deferred;
	_171651_s->_field_unsafety=_171629_tree->_field_unsafety;
	jule::I64 _172013_errors = this->self->_field_s->_field_errors.len();
	this->self->_field_tree=_171629_tree;
	this->self->_field_scope=_171651_s;
	this->self->_method_check_tree();
	if (_172013_errors == this->self->_field_s->_field_errors.len()) {
		this->self->_method_check_vars();
		this->self->_method_check_aliases();
	}
	if (this->self->_method_is_root()) {
		this->self->_method_check_gotos();
		this->self->_method_check_labels();
	}
}



inline jule::Ref<_1b8cd2c4b_ScopeChecker> _1b8cd2c4b_ScopeChecker::_method_new_child_checker(void) {
	jule::Ref<_1b8cd2c4b_ScopeChecker> _174017_base = _1b8cd2c4b_new_scope_checker_base(this->self->_field_s,jule::new_ref<_1d21d97ee_FnIns>());
	_174017_base->_field_parent=this->self;
	_174017_base->_field_labels=this->self->_field_labels;
	_174017_base->_field_gotos=this->self->_field_gotos;
	_174017_base->_field_child_index=static_cast<jule::Int>(this->self->_field_child_index + 1LL);
	return _174017_base;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b8cd2c4b_ScopeChecker &_Src) {
	_Stream << "ScopeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "child_index:" << _Src._field_child_index << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b8dbae99_BinopExprModel &_Src) {
	_Stream << "BinopExprModel{";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b8dbae99_UnaryExprModel &_Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b8dbae99_GetRefPtrExprModel &_Src) {
	_Stream << "GetRefPtrExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b8dbae99_StructArgExprModel &_Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b8dbae99_StructLitExprModel &_Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "strct:" << _Src._field_strct << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b8dbae99_AllocStructLitExprModel &_Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "lit:" << _Src._field_lit;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b8dbae99_CastingExprModel &_Src) {
	_Stream << "CastingExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr_kind:" << _Src._field_expr_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b8dbae99_FnCallExprModel &_Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "is_co:" << _Src._field_is_co << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b8dbae99_SliceExprModel &_Src) {
	_Stream << "SliceExprModel{";
	_Stream << "elem_kind:" << _Src._field_elem_kind << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b8dbae99_IndexigExprModel &_Src) {
	_Stream << "IndexigExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "index:" << _Src._field_index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b8dbae99_AnonFnExprModel &_Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "global:" << _Src._field_global;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b8dbae99_KeyValPairExprModel &_Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b8dbae99_MapExprModel &_Src) {
	_Stream << "MapExprModel{";
	_Stream << "key_kind:" << _Src._field_key_kind << ", ";
	_Stream << "val_kind:" << _Src._field_val_kind << ", ";
	_Stream << "entries:" << _Src._field_entries;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b8dbae99_SlicingExprModel &_Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b8dbae99_TraitSubIdentExprModel &_Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b8dbae99_StructSubIdentExprModel &_Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "expr_kind:" << _Src._field_expr_kind << ", ";
	_Stream << "method:" << _Src._field_method << ", ";
	_Stream << "field:" << _Src._field_field;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b8dbae99_StructStaticIdentExprModel &_Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "structure:" << _Src._field_structure << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "method:" << _Src._field_method;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b8dbae99_ArrayExprModel &_Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b8dbae99_CommonIdentExprModel &_Src) {
	_Stream << "CommonIdentExprModel{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b8dbae99_CommonSubIdentExprModel &_Src) {
	_Stream << "CommonSubIdentExprModel{";
	_Stream << "expr_kind:" << _Src._field_expr_kind << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b8dbae99_TupleExprModel &_Src) {
	_Stream << "TupleExprModel{";
	_Stream << "datas:" << _Src._field_datas;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b8dbae99_BuiltinOutCallExprModel &_Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b8dbae99_BuiltinOutlnCallExprModel &_Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b8dbae99_BuiltinCloneCallExprModel &_Src) {
	_Stream << "BuiltinCloneCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b8dbae99_BuiltinNewCallExprModel &_Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "init:" << _Src._field_init;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b8dbae99_BuiltinRealCallExprModel &_Src) {
	_Stream << "BuiltinRealCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b8dbae99_BuiltinDropCallExprModel &_Src) {
	_Stream << "BuiltinDropCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b8dbae99_BuiltinPanicCallExprModel &_Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b8dbae99_BuiltinMakeCallExprModel &_Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "len:" << _Src._field_len << ", ";
	_Stream << "cap:" << _Src._field_cap;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b8dbae99_BuiltinAppendCallExprModel &_Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "elements:" << _Src._field_elements;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b8dbae99_BuiltinErrorTraitSubIdentExprModel &_Src) {
	_Stream << "BuiltinErrorTraitSubIdentExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b8dbae99_SizeofExprModel &_Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b8dbae99_AlignofExprModel &_Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b8dbae99_RuneExprModel &_Src) {
	_Stream << "RuneExprModel{";
	_Stream << "code:" << _Src._field_code;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b8dbae99_ExplicitDerefExprModel &_Src) {
	_Stream << "ExplicitDerefExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b8dbae99_IntegratedToStrExprModel &_Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b8dbae99_TernaryExprModel &_Src) {
	_Stream << "TernaryExprModel{";
	_Stream << "condition:" << _Src._field_condition << ", ";
	_Stream << "true_expr:" << _Src._field_true_expr << ", ";
	_Stream << "false_expr:" << _Src._field_false_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_1b8e0c01d_ImportInfo> _1b8e0c01d_Package::_method_find_package(jule::Str ) {
	return jule::new_ref<_1b8e0c01d_ImportInfo>();
}



inline jule::Ref<_1b8e0c01d_ImportInfo> _1b8e0c01d_Package::_method_select_package(jule::Fn<jule::Bool(jule::Ref<_1b8e0c01d_ImportInfo>)> ) {
	return jule::new_ref<_1b8e0c01d_ImportInfo>();
}



inline jule::Ref<_1b919cb2c_Var> _1b8e0c01d_Package::_method_find_var(jule::Str _26631_ident,jule::Bool _26643_cpp_linked) {
	return _1b8e0c01d_find_var_in_package((*this)._field_files,_26631_ident,_26643_cpp_linked);
}



inline jule::Ref<_1b951b088_TypeAlias> _1b8e0c01d_Package::_method_find_type_alias(jule::Str _27238_ident,jule::Bool _27250_cpp_linked) {
	return _1b8e0c01d_find_type_alias_in_package((*this)._field_files,_27238_ident,_27250_cpp_linked);
}



inline jule::Ref<_1d21c0b59_Struct> _1b8e0c01d_Package::_method_find_struct(jule::Str _27834_ident,jule::Bool _27846_cpp_linked) {
	return _1b8e0c01d_find_struct_in_package((*this)._field_files,_27834_ident,_27846_cpp_linked);
}



inline jule::Ref<_1d21d97ee_Fn> _1b8e0c01d_Package::_method_find_fn(jule::Str _28430_ident,jule::Bool _28442_cpp_linked) {
	return _1b8e0c01d_find_fn_in_package((*this)._field_files,_28430_ident,_28442_cpp_linked);
}



inline jule::Ref<_1b8cd2894_Trait> _1b8e0c01d_Package::_method_find_trait(jule::Str _29033_ident) {
	return _1b8e0c01d_find_trait_in_package((*this)._field_files,_29033_ident);
}



inline jule::Ref<_1b8dae520_Enum> _1b8e0c01d_Package::_method_find_enum(jule::Str _29632_ident) {
	return _1b8e0c01d_find_enum_in_package((*this)._field_files,_29632_ident);
}







std::ostream &operator<<(std::ostream &_Stream, const _1b8e0c01d_Package &_Src) {
	_Stream << "Package{";
	_Stream << "files:" << _Src._field_files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_1b8e0c01d_ImportInfo> _1b912748b_Sema::_method_find_package(jule::Str _33235_ident) {
	return (*this)._field_file->_method_find_package(_33235_ident);
}



inline jule::Ref<_1b8e0c01d_ImportInfo> _1b912748b_Sema::_method_select_package(jule::Fn<jule::Bool(jule::Ref<_1b8e0c01d_ImportInfo>)> _34237_selector) {
	return (*this)._field_file->_method_select_package(_34237_selector);
}



inline jule::Ref<_1b919cb2c_Var> _1b912748b_Sema::_method_find_var(jule::Str _35231_ident,jule::Bool _35243_cpp_linked) {
	jule::Ref<_1b919cb2c_Var> _35417_v = _1b8e0c01d_find_var_in_package((*this)._field_files,_35231_ident,_35243_cpp_linked);
	if (jule::real(_35417_v)) {
		return _35417_v;
	}
	{
		auto _range_expr = (*this)._field_file->_field_imports;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b8e0c01d_ImportInfo> _1b912748b_imp = *_range_begin;
			_iter_begin_4712871424:;
			{
				if ((!(_1b912748b_imp_is_lookupable(_1b912748b_imp,_35231_ident)))) {
					goto _iter_next_4712871424;
				}
				_35417_v=_1b912748b_imp->_method_find_var(_35231_ident,_35243_cpp_linked);
				if (jule::real(_35417_v) && (*this)._method_is_accessible_define(_35417_v->_field_public,_35417_v->_field_token)) {
					return _35417_v;
				}
			}
			_iter_next_4712871424:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b912748b_imp = *_range_begin; goto _iter_begin_4712871424; }
			_iter_end_4712871424:;
		}
	}
	return jule::new_ref<_1b919cb2c_Var>();
}



inline jule::Ref<_1b951b088_TypeAlias> _1b912748b_Sema::_method_find_type_alias(jule::Str _37938_ident,jule::Bool _37950_cpp_linked) {
	jule::Ref<_1b951b088_TypeAlias> _38117_ta = _1b8e0c01d_find_type_alias_in_package((*this)._field_files,_37938_ident,_37950_cpp_linked);
	if (jule::real(_38117_ta)) {
		return _38117_ta;
	}
	{
		auto _range_expr = (*this)._field_file->_field_imports;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b8e0c01d_ImportInfo> _1b912748b_imp = *_range_begin;
			_iter_begin_4712883344:;
			{
				if ((!(_1b912748b_imp_is_lookupable(_1b912748b_imp,_37938_ident)))) {
					goto _iter_next_4712883344;
				}
				_38117_ta=_1b912748b_imp->_method_find_type_alias(_37938_ident,_37950_cpp_linked);
				if (jule::real(_38117_ta) && (*this)._method_is_accessible_define(_38117_ta->_field_public,_38117_ta->_field_token)) {
					return _38117_ta;
				}
			}
			_iter_next_4712883344:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b912748b_imp = *_range_begin; goto _iter_begin_4712883344; }
			_iter_end_4712883344:;
		}
	}
	return jule::new_ref<_1b951b088_TypeAlias>();
}



inline jule::Ref<_1d21c0b59_Struct> _1b912748b_Sema::_method_find_struct(jule::Str _40634_ident,jule::Bool _40646_cpp_linked) {
	jule::Ref<_1d21c0b59_Struct> _40817_s = _1b8e0c01d_find_struct_in_package((*this)._field_files,_40634_ident,_40646_cpp_linked);
	if (jule::real(_40817_s)) {
		return _40817_s;
	}
	{
		auto _range_expr = (*this)._field_file->_field_imports;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b8e0c01d_ImportInfo> _1b912748b_imp = *_range_begin;
			_iter_begin_4712894400:;
			{
				if ((!(_1b912748b_imp_is_lookupable(_1b912748b_imp,_40634_ident)))) {
					goto _iter_next_4712894400;
				}
				_40817_s=_1b912748b_imp->_method_find_struct(_40634_ident,_40646_cpp_linked);
				if (jule::real(_40817_s) && (*this)._method_is_accessible_define(_40817_s->_field_public,_40817_s->_field_token)) {
					return _40817_s;
				}
			}
			_iter_next_4712894400:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b912748b_imp = *_range_begin; goto _iter_begin_4712894400; }
			_iter_end_4712894400:;
		}
	}
	return jule::new_ref<_1d21c0b59_Struct>();
}



inline jule::Ref<_1d21d97ee_Fn> _1b912748b_Sema::_method_find_fn(jule::Str _43330_ident,jule::Bool _43342_cpp_linked) {
	jule::Ref<_1d21d97ee_Fn> _43517_f = _1b8e0c01d_find_fn_in_package((*this)._field_files,_43330_ident,_43342_cpp_linked);
	if (jule::real(_43517_f)) {
		return _43517_f;
	}
	{
		auto _range_expr = (*this)._field_file->_field_imports;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b8e0c01d_ImportInfo> _1b912748b_imp = *_range_begin;
			_iter_begin_4712905280:;
			{
				if ((!(_1b912748b_imp_is_lookupable(_1b912748b_imp,_43330_ident)))) {
					goto _iter_next_4712905280;
				}
				_43517_f=_1b912748b_imp->_method_find_fn(_43330_ident,_43342_cpp_linked);
				if (jule::real(_43517_f) && (*this)._method_is_accessible_define(_43517_f->_field_public,_43517_f->_field_token)) {
					return _43517_f;
				}
			}
			_iter_next_4712905280:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b912748b_imp = *_range_begin; goto _iter_begin_4712905280; }
			_iter_end_4712905280:;
		}
	}
	return jule::new_ref<_1d21d97ee_Fn>();
}



inline jule::Ref<_1b8cd2894_Trait> _1b912748b_Sema::_method_find_trait(jule::Str _46033_ident) {
	jule::Ref<_1b8cd2894_Trait> _46217_t = _1b8e0c01d_find_trait_in_package((*this)._field_files,_46033_ident);
	if (jule::real(_46217_t)) {
		return _46217_t;
	}
	{
		auto _range_expr = (*this)._field_file->_field_imports;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b8e0c01d_ImportInfo> _1b912748b_imp = *_range_begin;
			_iter_begin_4712914928:;
			{
				if ((!(_1b912748b_imp_is_lookupable(_1b912748b_imp,_46033_ident)))) {
					goto _iter_next_4712914928;
				}
				_46217_t=_1b912748b_imp->_method_find_trait(_46033_ident);
				if (jule::real(_46217_t) && (*this)._method_is_accessible_define(_46217_t->_field_public,_46217_t->_field_token)) {
					return _46217_t;
				}
			}
			_iter_next_4712914928:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b912748b_imp = *_range_begin; goto _iter_begin_4712914928; }
			_iter_end_4712914928:;
		}
	}
	return jule::new_ref<_1b8cd2894_Trait>();
}



inline jule::Ref<_1b8dae520_Enum> _1b912748b_Sema::_method_find_enum(jule::Str _48732_ident) {
	jule::Ref<_1b8dae520_Enum> _48917_e = _1b8e0c01d_find_enum_in_package((*this)._field_files,_48732_ident);
	if (jule::real(_48917_e)) {
		return _48917_e;
	}
	{
		auto _range_expr = (*this)._field_file->_field_imports;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b8e0c01d_ImportInfo> _1b912748b_imp = *_range_begin;
			_iter_begin_4712924864:;
			{
				if ((!(_1b912748b_imp_is_lookupable(_1b912748b_imp,_48732_ident)))) {
					goto _iter_next_4712924864;
				}
				_48917_e=_1b912748b_imp->_method_find_enum(_48732_ident);
				if (jule::real(_48917_e) && (*this)._method_is_accessible_define(_48917_e->_field_public,_48917_e->_field_token)) {
					return _48917_e;
				}
			}
			_iter_next_4712924864:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b912748b_imp = *_range_begin; goto _iter_begin_4712924864; }
			_iter_end_4712924864:;
		}
	}
	return jule::new_ref<_1b8dae520_Enum>();
}



inline jule::Bool _1b912748b_Sema::_method_is_flag(jule::Int _51122_flags) {
	return ((*this)._field_flags & _51122_flags) == _51122_flags;
}



inline void _1b912748b_Sema::_method_set_current_file(jule::Ref<_1b9390d86_SymbolTable> _51339_f) {
	(*this)._field_file=_51339_f;
}



inline void _1b912748b_Sema::_method_push_err(_1d1da4277_Token _51527_token,jule::Str _51541_fmt,jule::Slice<jule::Any> _51554_args) {
	(*this)._field_errors=jule::append((*this)._field_errors,jule::Slice<_1d0557e9e_Log>({_1b912748b_compiler_err(_51527_token,true,_51541_fmt,_51554_args)}));
}



inline void _1b912748b_Sema::_method_push_suggestion(jule::Str _52034_fmt,jule::Slice<jule::Any> _52047_args) {
	{
		_1b912748b_push_suggestion((&((*this)._field_errors[static_cast<jule::Int>((*this)._field_errors.len() - 1LL)])),_52034_fmt,_52047_args);
	}
}



inline jule::Bool _1b912748b_Sema::_method_is_accessible_define(jule::Bool _52535_public,_1d1da4277_Token _52549_token) {
	return (_52535_public || (!(jule::real(_52549_token._field_file)))) || ((*this)._field_file->_field_file->_method_dir() == _52549_token._field_file->_method_dir());
}



inline jule::Bool _1b912748b_Sema::_method_is_duplicated_ident(jule::Uintptr _53234_itself,jule::Str _53251_ident,jule::Bool _53263_cpp_linked) {
	{
		auto _range_expr = (*this)._field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b9390d86_SymbolTable> _1b912748b_f = *_range_begin;
			_iter_begin_4712955712:;
			{
				if (_1b912748b_f->_method_is_duplicated_ident(_53234_itself,_53251_ident,_53263_cpp_linked)) {
					return true;
				}
				{
					auto _range_expr = _1b912748b_f->_field_imports;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Ref<_1b8e0c01d_ImportInfo> _1b912748b_imp = *_range_begin;
						_iter_begin_4712960624:;
						{
							{
								auto _range_expr = _1b912748b_imp->_field_selected;
								if (_range_expr.begin() != _range_expr.end()) {
									auto _range_begin = _range_expr.begin();
									const auto _range_end = _range_expr.end();
									_1d1da4277_Token _1b912748b_selected = *_range_begin;
									_iter_begin_4712962464:;
									{
										if (_1b912748b_selected._field_kind == _53251_ident) {
											return true;
										}
									}
									_iter_next_4712962464:;
									++_range_begin;
									if (_range_begin != _range_end) { _1b912748b_selected = *_range_begin; goto _iter_begin_4712962464; }
									_iter_end_4712962464:;
								}
							}
						}
						_iter_next_4712960624:;
						++_range_begin;
						if (_range_begin != _range_end) { _1b912748b_imp = *_range_begin; goto _iter_begin_4712960624; }
						_iter_end_4712960624:;
					}
				}
			}
			_iter_next_4712955712:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b912748b_f = *_range_begin; goto _iter_begin_4712955712; }
			_iter_end_4712955712:;
		}
	}
	return false;
}



inline jule::Bool _1b912748b_Sema::_method_check_generic_quantity(jule::Int _54941_required,jule::Int _54956_given,_1d1da4277_Token _54968_error_token) {
	jule::Bool _54990_ok = jule::Bool();
	{
		if (!(((_54941_required == 0LL) && (_54956_given > 0LL)))) { goto _case_end_4712969616; }
		_case_begin_4712969616:;
		{
			(*this)._method_push_err(_54968_error_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
			_54990_ok = false;
			return _54990_ok;
		}
		goto _match_end_4712968416;
		_case_end_4712969616:;
		if (!(((_54941_required > 0LL) && (_54956_given == 0LL)))) { goto _case_end_4712969728; }
		_case_begin_4712969728:;
		{
			(*this)._method_push_err(_54968_error_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>({}));
			_54990_ok = false;
			return _54990_ok;
		}
		goto _match_end_4712968416;
		_case_end_4712969728:;
		if (!((_54941_required < _54956_given))) { goto _case_end_4712969840; }
		_case_begin_4712969840:;
		{
			(*this)._method_push_err(_54968_error_token,jule::Str("overflow generics", 17),jule::Slice<jule::Any>({}));
			_54990_ok = false;
			return _54990_ok;
		}
		goto _match_end_4712968416;
		_case_end_4712969840:;
		if (!((_54941_required > _54956_given))) { goto _case_end_4712968864; }
		_case_begin_4712968864:;
		{
			(*this)._method_push_err(_54968_error_token,jule::Str("missing generics", 16),jule::Slice<jule::Any>({}));
			_54990_ok = false;
			return _54990_ok;
		}
		goto _match_end_4712968416;
		_case_end_4712968864:;
		_case_begin_4712968560:;
		{
			_54990_ok = true;
			return _54990_ok;
		}
		goto _match_end_4712968416;
		_case_end_4712968560:;
		_match_end_4712968416:;
	}
}



inline jule::Bool _1b912748b_Sema::_method_is_duplicated_import_selection(jule::Uintptr _57245_itself,jule::Str _57262_ident) {
	{
		auto _range_expr = (*this)._field_file->_field_imports;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b8e0c01d_ImportInfo> _1b912748b_imp = *_range_begin;
			_iter_begin_4712981168:;
			{
				if (((jule::Uintptr)((_1b912748b_imp).alloc)) == _57245_itself) {
					goto _iter_end_4712981168;
				}
				if (_1b912748b_imp->_method_exist_ident(_57262_ident)) {
					return true;
				}
			}
			_iter_next_4712981168:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b912748b_imp = *_range_begin; goto _iter_begin_4712981168; }
			_iter_end_4712981168:;
		}
	}
	return false;
}



inline jule::Any _1b912748b_Sema::_method_get_import_def(jule::Str _58729_ident,jule::Ref<_1b8e0c01d_ImportInfo>& _58746_imp) {
	if (_1b9c0b525_find_package_builtin_def(_58746_imp->_field_link_path,_58729_ident) != nullptr) {
		return jule::Any(true);
	}
	{
		auto _range_expr = _58746_imp->_field_package->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b9390d86_SymbolTable> _1b912748b_f = *_range_begin;
			_iter_begin_4712990560:;
			{
				
				jule::Any _59421_def = _1b912748b_f->_method_def_by_ident(_58729_ident,false);
				if (_59421_def != nullptr) {
					return _59421_def;
				}
			}
			_iter_next_4712990560:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b912748b_f = *_range_begin; goto _iter_begin_4712990560; }
			_iter_end_4712990560:;
		}
	}
	return jule::Any(nullptr);
}



inline void _1b912748b_Sema::_method_check_import_selections(jule::Ref<_1b8e0c01d_ImportInfo>& _60347_imp) {
	{
		auto _range_expr = _60347_imp->_field_selected;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			_1d1da4277_Token _1b912748b_ident = *_range_begin;
			_iter_begin_4712996848:;
			{
				if (_1b912748b_ident._field_kind == jule::Str("self", 4)) {
					goto _iter_next_4712996848;
				}
				if ((*this)._method_is_duplicated_import_selection(((jule::Uintptr)((_60347_imp).alloc)),_1b912748b_ident._field_kind)) {
					(*this)._method_push_err(_1b912748b_ident,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1b912748b_ident._field_kind)}));
					(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
					goto _iter_next_4712996848;
				}
				jule::Any _61521_def = (*this)._method_get_import_def(_1b912748b_ident._field_kind,_60347_imp);
				{
					auto _match_expr{ _61521_def };
					if (!(_match_expr.type_is<jule::Bool>())) { goto _case_end_4713006576; }
					_case_begin_4713006576:;
					{
						goto _iter_next_4712996848;
					}
					goto _match_end_4713000672;
					_case_end_4713006576:;
					if (!(_match_expr.type_is<jule::Ref<_1b919cb2c_Var>>())) { goto _case_end_4713006688; }
					_case_begin_4713006688:;
					{
						jule::Ref<_1b919cb2c_Var> _62225_v = _61521_def.operator jule::Ref<_1b919cb2c_Var>();
						if ((*this)._method_is_accessible_define(_62225_v->_field_public,_62225_v->_field_token)) {
							goto _iter_next_4712996848;
						}
					}
					goto _match_end_4713000672;
					_case_end_4713006688:;
					if (!(_match_expr.type_is<jule::Ref<_1b951b088_TypeAlias>>())) { goto _case_end_4713006800; }
					_case_begin_4713006800:;
					{
						jule::Ref<_1b951b088_TypeAlias> _62825_ta = _61521_def.operator jule::Ref<_1b951b088_TypeAlias>();
						if ((*this)._method_is_accessible_define(_62825_ta->_field_public,_62825_ta->_field_token)) {
							goto _iter_next_4712996848;
						}
					}
					goto _match_end_4713000672;
					_case_end_4713006800:;
					if (!(_match_expr.type_is<jule::Ref<_1d21c0b59_Struct>>())) { goto _case_end_4713008784; }
					_case_begin_4713008784:;
					{
						jule::Ref<_1d21c0b59_Struct> _63425_strct = _61521_def.operator jule::Ref<_1d21c0b59_Struct>();
						if ((*this)._method_is_accessible_define(_63425_strct->_field_public,_63425_strct->_field_token)) {
							goto _iter_next_4712996848;
						}
					}
					goto _match_end_4713000672;
					_case_end_4713008784:;
					if (!(_match_expr.type_is<jule::Ref<_1b8cd2894_Trait>>())) { goto _case_end_4713008896; }
					_case_begin_4713008896:;
					{
						jule::Ref<_1b8cd2894_Trait> _64025_t = _61521_def.operator jule::Ref<_1b8cd2894_Trait>();
						if ((*this)._method_is_accessible_define(_64025_t->_field_public,_64025_t->_field_token)) {
							goto _iter_next_4712996848;
						}
					}
					goto _match_end_4713000672;
					_case_end_4713008896:;
					if (!(_match_expr.type_is<jule::Ref<_1b8dae520_Enum>>())) { goto _case_end_4713009008; }
					_case_begin_4713009008:;
					{
						jule::Ref<_1b8dae520_Enum> _64625_e = _61521_def.operator jule::Ref<_1b8dae520_Enum>();
						if ((*this)._method_is_accessible_define(_64625_e->_field_public,_64625_e->_field_token)) {
							goto _iter_next_4712996848;
						}
					}
					goto _match_end_4713000672;
					_case_end_4713009008:;
					if (!(_match_expr.type_is<jule::Ref<_1d21d97ee_Fn>>())) { goto _case_end_4713009120; }
					_case_begin_4713009120:;
					{
						jule::Ref<_1d21d97ee_Fn> _65225_f = _61521_def.operator jule::Ref<_1d21d97ee_Fn>();
						if ((*this)._method_is_accessible_define(_65225_f->_field_public,_65225_f->_field_token)) {
							goto _iter_next_4712996848;
						}
					}
					goto _match_end_4713000672;
					_case_end_4713009120:;
					_case_begin_4713006016:;
					{
						(*this)._method_push_err(_1b912748b_ident,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_1b912748b_ident._field_kind)}));
						goto _iter_next_4712996848;
					}
					goto _match_end_4713000672;
					_case_end_4713006016:;
					_match_end_4713000672:;
				}
				(*this)._method_push_err(_1b912748b_ident,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_1b912748b_ident._field_kind)}));
				(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>({}));
			}
			_iter_next_4712996848:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b912748b_ident = *_range_begin; goto _iter_begin_4712996848; }
			_iter_end_4712996848:;
		}
	}
}



inline jule::Bool _1b912748b_Sema::_method_is_use_alias_duplication(jule::Ref<_1b8e0c01d_ImportInfo>& _66744_imp) {
	if (_66744_imp->_field_alias.len() == 0LL) {
		return false;
	}
	{
		auto _range_expr = (*this)._field_file->_field_imports;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b8e0c01d_ImportInfo> _1b912748b_imp2 = *_range_begin;
			_iter_begin_4713035840:;
			{
				if ((_1b912748b_imp2).alloc == (_66744_imp).alloc) {
					goto _iter_end_4713035840;
				}
				if (_1b912748b_imp2->_field_alias == _66744_imp->_field_alias) {
					return true;
				}
			}
			_iter_next_4713035840:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b912748b_imp2 = *_range_begin; goto _iter_begin_4713035840; }
			_iter_end_4713035840:;
		}
	}
	return false;
}



inline jule::Bool _1b912748b_Sema::_method_check_import(jule::Ref<_1b8e0c01d_ImportInfo>& _68336_imp) {
	if (_68336_imp->_field_cpp_linked || (_68336_imp->_field_package->_field_files.len() == 0LL)) {
		return true;
	}
	if ((*this)._method_is_use_alias_duplication(_68336_imp)) {
		(*this)._method_push_err(_68336_imp->_field_token,jule::Str("identifier \"@\" is already used for another use declaration", 58),jule::Slice<jule::Any>({jule::Any(_68336_imp->_field_alias)}));
		(*this)._method_push_suggestion(jule::Str("rename alias for this use declaration to avoid duplication", 58),jule::Slice<jule::Any>({}));
	}
	if (_68336_imp->_field_duplicate) {
		return true;
	}
	jule::Ref<_1b912748b_Sema> _69717_sema = jule::new_struct<_1b912748b_Sema>(new( std::nothrow ) _1b912748b_Sema(jule::Slice<_1d0557e9e_Log>(),jule::Slice<jule::Ref<_1b9390d86_SymbolTable>>(),jule::Ref<_1b9390d86_SymbolTable>(),(*this)._field_flags));
	_69717_sema->_method_check(_68336_imp->_field_package->_field_files);
	if (_69717_sema->_field_errors.len() > 0LL) {
		(*this)._field_errors=jule::append((*this)._field_errors,_69717_sema->_field_errors);
		return false;
	}
	(*this)._method_check_import_selections(_68336_imp);
	return true;
}



inline void _1b912748b_Sema::_method_check_imports(void) {
	{
		auto _range_expr = (*this)._field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b9390d86_SymbolTable> _1b912748b_file = *_range_begin;
			_iter_begin_4713055168:;
			{
				(*this)._method_set_current_file(_1b912748b_file);
				{
					auto _range_expr = _1b912748b_file->_field_imports;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Ref<_1b8e0c01d_ImportInfo> _1b912748b_imp = *_range_begin;
						_iter_begin_4713059952:;
						{
							jule::Bool _71521_ok = (*this)._method_check_import(_1b912748b_imp);
							if ((!(_71521_ok))) {
								(*this)._method_push_err(_1b912748b_imp->_field_token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>({jule::Any(_1b912748b_imp->_field_link_path)}));
								return;
							}
						}
						_iter_next_4713059952:;
						++_range_begin;
						if (_range_begin != _range_end) { _1b912748b_imp = *_range_begin; goto _iter_begin_4713059952; }
						_iter_end_4713059952:;
					}
				}
			}
			_iter_next_4713055168:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b912748b_file = *_range_begin; goto _iter_begin_4713055168; }
			_iter_end_4713055168:;
		}
	}
}



inline void _1b912748b_Sema::_method_impl_file_impls(void) {
	{
		auto _range_expr = this->self->_field_file->_field_impls;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b8dacd8c_Impl> _1b912748b_imp = *_range_begin;
			_iter_begin_4713061056:;
			{
				this->self->_method_impl_impl(_1b912748b_imp);
			}
			_iter_next_4713061056:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b912748b_imp = *_range_begin; goto _iter_begin_4713061056; }
			_iter_end_4713061056:;
		}
	}
}



inline void _1b912748b_Sema::_method_impl_impls(void) {
	{
		auto _range_expr = this->self->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b9390d86_SymbolTable> _1b912748b_file = *_range_begin;
			_iter_begin_4713070736:;
			{
				this->self->_method_set_current_file(_1b912748b_file);
				this->self->_method_impl_file_impls();
			}
			_iter_next_4713070736:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b912748b_file = *_range_begin; goto _iter_begin_4713070736; }
			_iter_end_4713070736:;
		}
	}
}



inline void _1b912748b_Sema::_method_check_enums(void) {
	{
		auto _range_expr = this->self->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b9390d86_SymbolTable> _1b912748b_file = *_range_begin;
			_iter_begin_4713075168:;
			{
				this->self->_method_set_current_file(_1b912748b_file);
				this->self->_method_check_enum_decls();
			}
			_iter_next_4713075168:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b912748b_file = *_range_begin; goto _iter_begin_4713075168; }
			_iter_end_4713075168:;
		}
	}
}



inline jule::Bool _1b912748b_Sema::_method_check_type_with_refers(jule::Ref<_1b951b088_TypeSymbol>& _74847_t,jule::Trait<_1b9a5b012_Lookup> _74913_l,jule::Ref<_1b951b088_Referencer> _74928_referencer) {
	jule::Bool _74955_ok = jule::Bool();
	if (_74847_t->_method_checked()) {
		_74955_ok = true;
		return _74955_ok;
	}
	_1b951b088_TypeChecker _75317_tc = _1b951b088_TypeChecker(this->self,_74913_l,_74928_referencer,_1d1da4277_Token(),jule::Slice<jule::Ref<_1d1e5192e_GenericDecl>>(),jule::Slice<jule::Ref<_1b951b088_TypeAlias>>(),jule::Bool());
	_75317_tc._method_check(_74847_t);
	_74955_ok = _74847_t->_method_checked();
	return _74955_ok;
}



inline jule::Bool _1b912748b_Sema::_method_check_type(jule::Ref<_1b951b088_TypeSymbol>& _76435_t,jule::Trait<_1b9a5b012_Lookup> _76455_l) {
	jule::Bool _76468_ok = jule::Bool();
	_76468_ok = this->self->_method_check_type_with_refers(_76435_t,_76455_l,jule::new_ref<_1b951b088_Referencer>());
	return _76468_ok;
}



inline jule::Ref<_1b951b088_TypeKind> _1b912748b_Sema::_method_build_type_with_generics(jule::Ref<_1d1e5192e_TypeDecl>& _77049_t,jule::Slice<jule::Ref<_1b951b088_TypeAlias>> _77113_generics) {
	jule::Ref<_1b951b088_TypeChecker> _77217_tc = jule::new_struct<_1b951b088_TypeChecker>(new( std::nothrow ) _1b951b088_TypeChecker(this->self,this->self,jule::Ref<_1b951b088_Referencer>(),_1d1da4277_Token(),jule::Slice<jule::Ref<_1d1e5192e_GenericDecl>>(),_77113_generics,jule::Bool()));
	return _77217_tc->_method_check_decl(_77049_t);
}



inline jule::Ref<_1b951b088_TypeKind> _1b912748b_Sema::_method_build_type(jule::Ref<_1d1e5192e_TypeDecl>& _78135_t) {
	return this->self->_method_build_type_with_generics(_78135_t,nullptr);
}



inline jule::Ref<_1b9523799_Data> _1b912748b_Sema::_method_evalpd(jule::Ref<_1d1e5192e_Expr>& _78731_expr,jule::Trait<_1b9a5b012_Lookup> _78748_l,jule::Ref<_1b951b088_TypeKind> _78813_p,jule::Ref<_1b919cb2c_Var> _78831_owner) {
	jule::Ref<_1b9523799_Eval> _78917_e = jule::new_struct<_1b9523799_Eval>(new( std::nothrow ) _1b9523799_Eval(this->self,_78748_l,jule::Ref<_1b951b088_TypeKind>(),jule::Bool(),_78831_owner));
	{
		auto _match_expr{ _78748_l };
		if (!(_match_expr.type_is<jule::Ref<_1b8cd2c4b_ScopeChecker>>())) { goto _case_end_4713128640; }
		_case_begin_4713128640:;
		{
			_78917_e->_field_unsafety=_78748_l.operator jule::Ref<_1b8cd2c4b_ScopeChecker>()->_method_is_unsafe();
		}
		goto _match_end_4713128224;
		_case_end_4713128640:;
		_match_end_4713128224:;
	}
	_78917_e->_field_prefix=_78813_p;
	return _78917_e->_method_eval_expr(_78731_expr);
}



inline jule::Ref<_1b9523799_Data> _1b912748b_Sema::_method_evalp(jule::Ref<_1d1e5192e_Expr> _80629_expr,jule::Trait<_1b9a5b012_Lookup> _80646_l,jule::Ref<_1b951b088_TypeKind> _80661_p) {
	return this->self->_method_evalpd(_80629_expr,_80646_l,_80661_p,jule::new_ref<_1b919cb2c_Var>());
}



inline jule::Ref<_1b9523799_Data> _1b912748b_Sema::_method_eval(jule::Ref<_1d1e5192e_Expr>& _81129_expr,jule::Trait<_1b9a5b012_Lookup> _81146_l) {
	return this->self->_method_evalp(_81129_expr,_81146_l,jule::new_ref<_1b951b088_TypeKind>());
}



inline void _1b912748b_Sema::_method_check_assign_type(jule::Bool _81537_dest_is_ref,jule::Ref<_1b951b088_TypeKind>& _81561_dest,jule::Ref<_1b9523799_Data>& _81614_d,_1d1da4277_Token _81628_error_token,jule::Bool _81648_deref) {
	if (_81537_dest_is_ref) {
		if ((!(_81561_dest->_method_equals(_81614_d->_field_kind)))) {
			this->self->_method_push_err(_81628_error_token,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_81561_dest->_method_to_str()),jule::Any(_81614_d->_field_kind->_method_to_str())}));
		}
	} else {
		jule::Ref<_1b9176ba0_AssignTypeChecker> _82221_atc = jule::new_struct<_1b9176ba0_AssignTypeChecker>(new( std::nothrow ) _1b9176ba0_AssignTypeChecker(this->self,_81561_dest,_81614_d,_81628_error_token,_81648_deref));
		jule::Bool _82917_ok = _82221_atc->_method_check();
		if ((!(_82917_ok))) {
			return;
		}
	}
	if ((!(_81614_d->_method_is_const())) || (!(jule::real(_81561_dest->_method_prim())))) {
		return;
	}
	jule::Str _83917_kind = _81561_dest->_method_prim()->_field_kind;
	{
		if (!((_1b9e28c5e_is_sig_int(_83917_kind)))) { goto _case_end_4713154448; }
		_case_begin_4713154448:;
		{
			_81614_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_81614_d->_field_constant->_method_as_i64()));
		}
		goto _match_end_4713154256;
		_case_end_4713154448:;
		if (!((_1b9e28c5e_is_unsig_int(_83917_kind)))) { goto _case_end_4713154576; }
		_case_begin_4713154576:;
		{
			_81614_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_81614_d->_field_constant->_method_as_u64()));
		}
		goto _match_end_4713154256;
		_case_end_4713154576:;
		if (!((_1b9e28c5e_is_float(_83917_kind)))) { goto _case_end_4713154704; }
		_case_begin_4713154704:;
		{
			_81614_d->_field_constant->_method_set_f64(static_cast<jule::F64>(_81614_d->_field_constant->_method_as_f64()));
		}
		goto _match_end_4713154256;
		_case_end_4713154704:;
		_match_end_4713154256:;
	}
}



inline jule::Bool _1b912748b_Sema::_method_check_type_compatibility(jule::Ref<_1b951b088_TypeKind>& _84849_dest,jule::Ref<_1b951b088_TypeKind>& _84914_src,_1d1da4277_Token& _84935_error_token,jule::Bool _84955_deref) {
	if (jule::real(_84914_src->_method_tup())) {
		this->self->_method_push_err(_84935_error_token,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_84849_dest->_method_to_str()),jule::Any(_84914_src->_method_to_str())}));
		return false;
	}
	jule::Ref<_1b9176ba0_TypeCompatibilityChecker> _85717_tcc = jule::new_struct<_1b9176ba0_TypeCompatibilityChecker>(new( std::nothrow ) _1b9176ba0_TypeCompatibilityChecker(this->self,_84849_dest,_84914_src,_84935_error_token,jule::Bool(),_84955_deref,jule::Bool()));
	jule::Bool _86413_ok = _85717_tcc->_method_check();
	if ((!(_86413_ok))) {
		this->self->_method_push_err(_84935_error_token,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_84849_dest->_method_to_str()),jule::Any(_84914_src->_method_to_str())}));
	}
	return _86413_ok;
}



inline jule::Ref<_1b951b088_TypeKind> _1b912748b_Sema::_method_build_non_generic_type_kind(jule::Ref<_1d1e5192e_TypeDecl>& _87852_ast,jule::Slice<jule::Ref<_1d1e5192e_GenericDecl>>& _87914_generics) {
	jule::Ref<_1b951b088_TypeChecker> _88017_tc = jule::new_struct<_1b951b088_TypeChecker>(new( std::nothrow ) _1b951b088_TypeChecker(this->self,this->self,jule::Ref<_1b951b088_Referencer>(),_1d1da4277_Token(),_87914_generics,jule::Slice<jule::Ref<_1b951b088_TypeAlias>>(),jule::Bool()));
	return _88017_tc->_method_check_decl(_87852_ast);
}



inline void _1b912748b_Sema::_method_build_fn_non_generic_type_kinds(jule::Ref<_1d21d97ee_FnIns>& _88856_f) {
	jule::Slice<jule::Ref<_1d1e5192e_GenericDecl>> _88917_generics = nullptr;
	if (_88856_f->_field_decl->_method_is_method()) {
		_88917_generics=jule::append(_88856_f->_field_decl->_field_generics,_88856_f->_field_decl->_field_owner->_field_generics);
	} else {
		_88917_generics=_88856_f->_field_decl->_field_generics;
	}
	{
		auto _range_expr = _88856_f->_field_params;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d21d97ee_ParamIns> _1b912748b_p = *_range_begin;
			_iter_begin_4713193664:;
			{
				if ((!(_1b912748b_p->_field_decl->_method_is_self()))) {
					_1b912748b_p->_field_kind=this->self->_method_build_non_generic_type_kind(_1b912748b_p->_field_decl->_field_kind->_field_decl,_88917_generics);
				}
			}
			_iter_next_4713193664:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b912748b_p = *_range_begin; goto _iter_begin_4713193664; }
			_iter_end_4713193664:;
		}
	}
	if ((!(_88856_f->_field_decl->_method_is_void()))) {
		_88856_f->_field_result=this->self->_method_build_non_generic_type_kind(_88856_f->_field_decl->_field_result->_field_kind->_field_decl,_88917_generics);
	}
}



inline jule::Ref<_1d21d97ee_FnIns> _1b912748b_Sema::_method_get_trait_check_fn_kind(jule::Ref<_1d21d97ee_Fn>& _90648_f) {
	jule::Ref<_1d21d97ee_FnIns> _90717_ins = _90648_f->_method_instance_force();
	this->self->_method_build_fn_non_generic_type_kinds(_90717_ins);
	return _90717_ins;
}



inline jule::Bool _1b912748b_Sema::_method_reload_fn_ins_types(jule::Ref<_1d21d97ee_FnIns>& _91244_f) {
	jule::Bool _91257_ok = jule::Bool();
	if (_91244_f->_method_is_builtin() || _91244_f->_method_is_anon()) {
		_91257_ok = true;
		return _91257_ok;
	}
	jule::Ref<_1b912748b_Sema> _91717_sema = _91244_f->_field_decl->_field_sema;
	jule::Ref<_1b9390d86_SymbolTable> _91917_old = _91244_f->_field_decl->_field_sema->_field_file;
	__JULE_DEFER({
		_91244_f->_field_decl->_field_sema->_method_set_current_file(_91917_old);
	});
	jule::Ref<_1b9390d86_SymbolTable> _92117_file = _1b912748b_find_file(_91244_f->_field_decl->_field_sema->_field_files,_91244_f->_field_decl->_field_token._field_file);
	if (jule::real(_92117_file)) {
		_91244_f->_field_decl->_field_sema->_method_set_current_file(_92117_file);
	}
	jule::I64 _92617_size = _91244_f->_field_generics.len();
	if (jule::real(_91244_f->_field_decl) && jule::real(_91244_f->_field_decl->_field_owner)) {
		_92617_size+=static_cast<jule::I64>(_91244_f->_field_decl->_field_owner->_field_generics.len());
	}
	jule::Slice<jule::Ref<_1b951b088_TypeAlias>> _93117_generics = jule::Slice<jule::Ref<_1b951b088_TypeAlias>>::alloc(0LL,static_cast<jule::Int>(_92617_size));
	{
		auto _range_expr = _91244_f->_field_generics;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1b912748b_i = 0;
			jule::Ref<_1b951b088_TypeKind> _1b912748b_g = *_range_begin;
			_iter_begin_4713229184:;
			{
				_93117_generics=jule::append(_93117_generics,jule::Slice<jule::Ref<_1b951b088_TypeAlias>>({jule::new_struct<_1b951b088_TypeAlias>(new( std::nothrow ) _1b951b088_TypeAlias(jule::Ref<_1d1e5192e_ScopeTree>(),jule::Bool(),jule::Bool(),jule::Bool(),_1d1da4277_Token(),_91244_f->_field_decl->_field_generics[static_cast<jule::Int>(_1b912748b_i)]->_field_ident,jule::new_struct<_1b951b088_TypeSymbol>(new( std::nothrow ) _1b951b088_TypeSymbol(jule::Ref<_1d1e5192e_TypeDecl>(),_1b912748b_g)),jule::Str(),jule::Slice<jule::Any>()))}));
			}
			_iter_next_4713229184:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1b912748b_i; _1b912748b_g = *_range_begin; goto _iter_begin_4713229184; }
			_iter_end_4713229184:;
		}
	}
	if (jule::real(_91244_f->_field_decl) && jule::real(_91244_f->_field_decl->_field_owner)) {
		jule::Ref<_1d21c0b59_StructIns> _94321_owner = _91244_f->_field_owner;
		{
			auto _range_expr = _94321_owner->_field_generics;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Int _1b912748b_i = 0;
				jule::Ref<_1b951b088_TypeKind> _1b912748b_g = *_range_begin;
				_iter_begin_4713230384:;
				{
					_93117_generics=jule::append(_93117_generics,jule::Slice<jule::Ref<_1b951b088_TypeAlias>>({jule::new_struct<_1b951b088_TypeAlias>(new( std::nothrow ) _1b951b088_TypeAlias(jule::Ref<_1d1e5192e_ScopeTree>(),jule::Bool(),jule::Bool(),jule::Bool(),_1d1da4277_Token(),_94321_owner->_field_decl->_field_generics[static_cast<jule::Int>(_1b912748b_i)]->_field_ident,jule::new_struct<_1b951b088_TypeSymbol>(new( std::nothrow ) _1b951b088_TypeSymbol(jule::Ref<_1d1e5192e_TypeDecl>(),_1b912748b_g)),jule::Str(),jule::Slice<jule::Any>()))}));
				}
				_iter_next_4713230384:;
				++_range_begin;
				if (_range_begin != _range_end) { ++_1b912748b_i; _1b912748b_g = *_range_begin; goto _iter_begin_4713230384; }
				_iter_end_4713230384:;
			}
		}
	}
	_91257_ok=true;
	{
		auto _range_expr = _91244_f->_field_params;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d21d97ee_ParamIns> _1b912748b_p = *_range_begin;
			_iter_begin_4713243600:;
			{
				if ((!(_1b912748b_p->_field_decl->_method_is_self()))) {
					_1b912748b_p->_field_kind=_91717_sema->_method_build_type_with_generics(_1b912748b_p->_field_decl->_field_kind->_field_decl,_93117_generics);
					if (jule::real(_1b912748b_p->_field_kind)) {
						if (_1b912748b_p->_field_decl->_field_reference && (!(_1b951b088_is_valid_for_ref(_1b912748b_p->_field_kind)))) {
							this->self->_method_push_err(_1b912748b_p->_field_decl->_field_token,jule::Str("references cannot points to \"@\" type", 36),jule::Slice<jule::Any>({jule::Any(_1b912748b_p->_field_kind->_method_to_str())}));
						}
					} else {
						_91257_ok=false;
					}
				}
			}
			_iter_next_4713243600:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b912748b_p = *_range_begin; goto _iter_begin_4713243600; }
			_iter_end_4713243600:;
		}
	}
	if ((!(_91244_f->_field_decl->_method_is_void()))) {
		_91244_f->_field_result=_91717_sema->_method_build_type_with_generics(_91244_f->_field_decl->_field_result->_field_kind->_field_decl,_93117_generics);
		_91257_ok=jule::real(_91244_f->_field_result) && _91257_ok;
	}
	if ((_91717_sema).alloc != (this->self).alloc) {
		this->self->_field_errors=jule::append(this->self->_field_errors,_91717_sema->_field_errors);
		_91717_sema->_field_errors=nullptr;
	}
	_91257_ok = _91257_ok;
	return _91257_ok;
}



inline void _1b912748b_Sema::_method_check_ref_validity_for_init_expr(jule::Bool _98152_left_mut,jule::Ref<_1b9523799_Data>& _98169_d,_1d1da4277_Token& _98184_error_token) {
	{
		auto _match_expr{ _98169_d->_field_model };
		if (!(_match_expr.type_is<jule::Ref<_1b919cb2c_Var>>())) { goto _case_end_4713261664; }
		goto _match_end_4713260240;
		_case_end_4713261664:;
		if (!(_match_expr.type_is<jule::Ref<_1b8dbae99_TraitSubIdentExprModel>>())) { goto _case_end_4713261168; }
		_case_begin_4713261168:;
		{
			jule::Ref<_1b8dbae99_TraitSubIdentExprModel> _98717_model = _98169_d->_field_model.operator jule::Ref<_1b8dbae99_TraitSubIdentExprModel>();
			if ((!(_1b912748b_is_valid_model_for_ref(_98717_model->_field_expr)))) {
				this->self->_method_push_err(_98184_error_token,jule::Str("you cannot use \"@\" reference variable, because reference is dangling", 68),jule::Slice<jule::Any>({jule::Any(_98717_model->_field_ident)}));
			}
		}
		goto _match_end_4713260240;
		_case_end_4713261168:;
		if (!(_match_expr.type_is<jule::Ref<_1b8dbae99_StructSubIdentExprModel>>())) { goto _case_end_4713261280; }
		_case_begin_4713261280:;
		{
			jule::Ref<_1b8dbae99_StructSubIdentExprModel> _99317_model = _98169_d->_field_model.operator jule::Ref<_1b8dbae99_StructSubIdentExprModel>();
			if ((!(_1b912748b_is_valid_model_for_ref(_99317_model->_field_expr)))) {
				this->self->_method_push_err(_98184_error_token,jule::Str("you cannot use \"@\" reference variable, because reference is dangling", 68),jule::Slice<jule::Any>({jule::Any(_99317_model->_field_field->_field_decl->_field_ident)}));
			}
		}
		goto _match_end_4713260240;
		_case_end_4713261280:;
		if (!(_match_expr.type_is<jule::Ref<_1b8dbae99_CommonIdentExprModel>>() || _match_expr.type_is<jule::Ref<_1b8dbae99_CommonSubIdentExprModel>>())) { goto _case_end_4713261392; }
		_case_begin_4713261392:;
		{
			this->self->_method_push_err(_98184_error_token,jule::Str("built-in defines cannot pass to references", 42),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4713260240;
		_case_end_4713261392:;
		if (!(_match_expr.type_is<jule::Ref<_1b8dbae99_UnaryExprModel>>())) { goto _case_end_4713263232; }
		_case_begin_4713263232:;
		{
			jule::Ref<_1b8dbae99_UnaryExprModel> _100317_unary = _98169_d->_field_model.operator jule::Ref<_1b8dbae99_UnaryExprModel>();
			if (_100317_unary->_field_op == jule::Str("*", 1)) {
				goto _match_end_4713260240;
			}
			goto _case_begin_4713260864;
		}
		goto _match_end_4713260240;
		_case_end_4713263232:;
		_case_begin_4713260864:;
		{
			this->self->_method_push_err(_98184_error_token,jule::Str("references requires variable for assignment", 43),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4713260240;
		_case_end_4713260864:;
		_match_end_4713260240:;
	}
	if (_98152_left_mut && (!(_98169_d->_field_mutable))) {
		this->self->_method_push_err(_98184_error_token,jule::Str("mutable reference cannot point to immutable data", 48),jule::Slice<jule::Any>({}));
	}
}



inline void _1b912748b_Sema::_method_check_validity_for_init_expr(jule::Bool _101948_left_mut,jule::Bool _101964_left_ref,jule::Ref<_1b951b088_TypeKind>& _102010_left_kind,jule::Ref<_1b9523799_Data>& _102037_d,_1d1da4277_Token& _102052_error_token) {
	if ((_101948_left_mut && (!(_102037_d->_field_mutable))) && _102037_d->_field_kind->_method_mutable()) {
		this->self->_method_push_err(_102052_error_token,jule::Str("cannot assign mutable type used immutable define to mutable define", 66),jule::Slice<jule::Any>({}));
	}
	if (_101964_left_ref) {
		this->self->_method_check_ref_validity_for_init_expr(_101948_left_mut,_102037_d,_102052_error_token);
	}
	jule::Ref<_1b9176ba0_AssignTypeChecker> _102817_atc = jule::new_struct<_1b9176ba0_AssignTypeChecker>(new( std::nothrow ) _1b9176ba0_AssignTypeChecker(this->self,jule::Ref<_1b951b088_TypeKind>(),_102037_d,_102052_error_token,jule::Bool()));
	_102817_atc->_method_check_validity();
}



inline jule::Bool _1b912748b_Sema::_method_check_type_alias_decl_kind(jule::Ref<_1b951b088_TypeAlias>& _103651_ta,jule::Trait<_1b9a5b012_Lookup> _103671_l) {
	jule::Bool _103684_ok = jule::Bool();
	jule::Ref<_1b9390d86_SymbolTable> _103717_old = this->self->_field_file;
	__JULE_DEFER({
		this->self->_method_set_current_file(_103717_old);
	});
	jule::Ref<_1b9390d86_SymbolTable> _103917_file = _1b912748b_find_file(this->self->_field_files,_103651_ta->_field_token._field_file);
	if (jule::real(_103917_file)) {
		this->self->_method_set_current_file(_103917_file);
	}
	_103684_ok=this->self->_method_check_type_with_refers(_103651_ta->_field_kind,_103671_l,jule::new_struct<_1b951b088_Referencer>(new( std::nothrow ) _1b951b088_Referencer(_103651_ta->_field_ident,jule::Any(_103651_ta),(&(_103651_ta->_field_refers)))));
	if ((_103684_ok && jule::real(_103651_ta->_field_kind->_field_kind->_method_arr())) && _103651_ta->_field_kind->_field_kind->_method_arr()->_field_auto) {
		this->self->_method_push_err(_103651_ta->_field_kind->_field_decl->_field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>({}));
		_103684_ok=false;
	}
	return _103684_ok;
}



inline void _1b912748b_Sema::_method_check_type_alias_decl(jule::Ref<_1b951b088_TypeAlias>& _105646_ta,jule::Trait<_1b9a5b012_Lookup> _105666_l) {
	if (_1d1da4277_is_ignore_ident(_105646_ta->_field_ident)) {
		this->self->_method_push_err(_105646_ta->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
	}
	this->self->_method_check_type_alias_decl_kind(_105646_ta,_105666_l);
}



inline void _1b912748b_Sema::_method_check_type_alias_decl_dup(jule::Ref<_1b951b088_TypeAlias>& _106450_ta) {
	if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_106450_ta).alloc)),_106450_ta->_field_ident,_106450_ta->_field_cpp_linked)) {
		this->self->_method_push_err(_106450_ta->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_106450_ta->_field_ident)}));
		this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	this->self->_method_check_type_alias_decl_kind(_106450_ta,this->self);
}



inline jule::Bool _1b912748b_Sema::_method_check_type_alias_decls(void) {
	jule::Bool _107344_ok = jule::Bool();
	{
		auto _range_expr = this->self->_field_file->_field_type_aliases;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b951b088_TypeAlias> _1b912748b_ta = *_range_begin;
			_iter_begin_4713323504:;
			{
				this->self->_method_check_type_alias_decl_dup(_1b912748b_ta);
				if (this->self->_field_errors.len() > 0LL) {
					_107344_ok = false;
					return _107344_ok;
				}
			}
			_iter_next_4713323504:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b912748b_ta = *_range_begin; goto _iter_begin_4713323504; }
			_iter_end_4713323504:;
		}
	}
	_107344_ok = true;
	return _107344_ok;
}



inline void _1b912748b_Sema::_method_check_enum_items_dup(jule::Ref<_1b8dae520_Enum> _108539_e) {
	{
		auto _range_expr = _108539_e->_field_items;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b8dae520_EnumItem> _1b912748b_item = *_range_begin;
			_iter_begin_4713329680:;
			{
				if (_1d1da4277_is_ignore_ident(_1b912748b_item->_field_ident)) {
					(*this)._method_push_err(_1b912748b_item->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
				} else {
					{
						auto _range_expr = _108539_e->_field_items;
						if (_range_expr.begin() != _range_expr.end()) {
							auto _range_begin = _range_expr.begin();
							const auto _range_end = _range_expr.end();
							jule::Ref<_1b8dae520_EnumItem> _1b912748b_citem = *_range_begin;
							_iter_begin_4713331744:;
							{
								if (_1b912748b_item == _1b912748b_citem) {
									goto _iter_end_4713331744;
								} else if (_1b912748b_item->_field_ident == _1b912748b_citem->_field_ident) {
									(*this)._method_push_err(_1b912748b_item->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1b912748b_item->_field_ident)}));
									(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
									goto _iter_end_4713331744;
								}
							}
							_iter_next_4713331744:;
							++_range_begin;
							if (_range_begin != _range_end) { _1b912748b_citem = *_range_begin; goto _iter_begin_4713331744; }
							_iter_end_4713331744:;
						}
					}
				}
			}
			_iter_next_4713329680:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b912748b_item = *_range_begin; goto _iter_begin_4713329680; }
			_iter_end_4713329680:;
		}
	}
}



inline void _1b912748b_Sema::_method_check_enum_items_str(jule::Ref<_1b8dae520_Enum>& _110345_e) {
	{
		auto _range_expr = _110345_e->_field_items;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b8dae520_EnumItem> _1b912748b_item = *_range_begin;
			_iter_begin_4713341680:;
			{
				if (_1b912748b_item->_method_auto_expr()) {
					_1b912748b_item->_field_value=jule::new_struct<_1b9523799_Value>(new( std::nothrow ) _1b9523799_Value(jule::Ref<_1d1e5192e_Expr>(),jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::Ref<_1b951b088_TypeKind>(),jule::Ref<_1b951b088_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),_1b9d678e5_Const::_static_method_new_str(_1b912748b_item->_field_ident)))));
					_1b912748b_item->_field_value->_field_data->_field_model=jule::Any(_1b912748b_item->_field_value->_field_data->_field_constant);
				} else {
					jule::Ref<_1b9523799_Data> _111325_d = this->self->_method_eval(_1b912748b_item->_field_value->_field_expr,this->self);
					if ((!(jule::real(_111325_d)))) {
						goto _iter_next_4713341680;
					}
					if ((!(_111325_d->_method_is_const()))) {
						this->self->_method_push_err(_1b912748b_item->_field_value->_field_expr->_field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>({}));
					}
					this->self->_method_check_assign_type(false,_110345_e->_field_kind->_field_kind,_111325_d,_1b912748b_item->_field_token,false);
					_1b912748b_item->_field_value->_field_data=_111325_d;
				}
			}
			_iter_next_4713341680:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b912748b_item = *_range_begin; goto _iter_begin_4713341680; }
			_iter_end_4713341680:;
		}
	}
}



inline void _1b912748b_Sema::_method_check_enum_items_int(jule::Ref<_1b8dae520_Enum>& _112845_e) {
	jule::U64 _112917_max = static_cast<jule::U64>(_1b9d841c5_max(_112845_e->_field_kind->_field_kind->_method_prim()->_method_to_str()));
	{
		auto _range_expr = _112845_e->_field_items;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1b912748b_i = 0;
			jule::Ref<_1b8dae520_EnumItem> _1b912748b_item = *_range_begin;
			_iter_begin_4713377952:;
			{
				if (_112917_max == 0LL) {
					this->self->_method_push_err(_1b912748b_item->_field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>({}));
				} else {
					(_112917_max)--;
				}
				if (_1b912748b_item->_method_auto_expr()) {
					_1b912748b_item->_field_value=jule::new_struct<_1b9523799_Value>(new( std::nothrow ) _1b9523799_Value(jule::Ref<_1d1e5192e_Expr>(),jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::Ref<_1b951b088_TypeKind>(),jule::Ref<_1b951b088_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),_1b9d678e5_Const::_static_method_new_u64(static_cast<jule::U64>(_112917_max - (_112917_max - static_cast<jule::U64>(_1b912748b_i))))))));
					_1b912748b_item->_field_value->_field_data->_field_model=jule::Any(_1b912748b_item->_field_value->_field_data->_field_constant);
				} else {
					jule::Ref<_1b9523799_Data> _114525_d = this->self->_method_eval(_1b912748b_item->_field_value->_field_expr,this->self);
					if ((!(jule::real(_114525_d)))) {
						goto _iter_next_4713377952;
					}
					if ((!(_114525_d->_method_is_const()))) {
						this->self->_method_push_err(_1b912748b_item->_field_value->_field_expr->_field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>({}));
					}
					this->self->_method_check_assign_type(false,_112845_e->_field_kind->_field_kind,_114525_d,_1b912748b_item->_field_token,false);
					_1b912748b_item->_field_value->_field_data=_114525_d;
				}
			}
			_iter_next_4713377952:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1b912748b_i; _1b912748b_item = *_range_begin; goto _iter_begin_4713377952; }
			_iter_end_4713377952:;
		}
	}
}



inline void _1b912748b_Sema::_method_check_enum_decl(jule::Ref<_1b8dae520_Enum>& _116040_e) {
	if (_1d1da4277_is_ignore_ident(_116040_e->_field_ident)) {
		this->self->_method_push_err(_116040_e->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
	} else if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_116040_e).alloc)),_116040_e->_field_ident,false)) {
		this->self->_method_push_err(_116040_e->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_116040_e->_field_ident)}));
		this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	if (_116040_e->_field_items.len() == 0LL) {
		this->self->_method_push_err(_116040_e->_field_token,jule::Str("there is no member for enum: @", 30),jule::Slice<jule::Any>({jule::Any(_116040_e->_field_ident)}));
	}
	this->self->_method_check_enum_items_dup(_116040_e);
	if (jule::real(_116040_e->_field_kind)) {
		if ((!(this->self->_method_check_type(_116040_e->_field_kind,this->self)))) {
			return;
		}
	} else {
		_116040_e->_field_kind=jule::new_struct<_1b951b088_TypeSymbol>(new( std::nothrow ) _1b951b088_TypeSymbol(jule::Ref<_1d1e5192e_TypeDecl>(),jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_1b951b088_build_prim_type(jule::Str("int", 3))))));
	}
	jule::Ref<_1b951b088_Prim> _118717_t = _116040_e->_field_kind->_field_kind->_method_prim();
	if ((!(jule::real(_118717_t)))) {
		this->self->_method_push_err(_116040_e->_field_token,jule::Str("invalid data-type source", 24),jule::Slice<jule::Any>({}));
		return;
	}
	{
		if (!((_118717_t->_method_is_str()))) { goto _case_end_4713419120; }
		_case_begin_4713419120:;
		{
			this->self->_method_check_enum_items_str(_116040_e);
		}
		goto _match_end_4713416720;
		_case_end_4713419120:;
		if (!((_1b9e28c5e_is_int(_118717_t->_method_to_str())))) { goto _case_end_4713417056; }
		_case_begin_4713417056:;
		{
			this->self->_method_check_enum_items_int(_116040_e);
		}
		goto _match_end_4713416720;
		_case_end_4713417056:;
		_case_begin_4713406128:;
		{
			this->self->_method_push_err(_116040_e->_field_token,jule::Str("invalid data-type source", 24),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4713416720;
		_case_end_4713406128:;
		_match_end_4713416720:;
	}
}



inline jule::Bool _1b912748b_Sema::_method_check_enum_decls(void) {
	jule::Bool _120738_ok = jule::Bool();
	{
		auto _range_expr = this->self->_field_file->_field_enums;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b8dae520_Enum> _1b912748b_e = *_range_begin;
			_iter_begin_4713424816:;
			{
				this->self->_method_check_enum_decl(_1b912748b_e);
				if (this->self->_field_errors.len() > 0LL) {
					_120738_ok = false;
					return _120738_ok;
				}
			}
			_iter_next_4713424816:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b912748b_e = *_range_begin; goto _iter_begin_4713424816; }
			_iter_end_4713424816:;
		}
	}
	_120738_ok = true;
	return _120738_ok;
}



inline jule::Bool _1b912748b_Sema::_method_check_decl_generics(jule::Slice<jule::Ref<_1d1e5192e_GenericDecl>>& _121939_generics) {
	jule::Bool _121967_ok = jule::Bool();
	_121967_ok=true;
	{
		auto _range_expr = _121939_generics;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1b912748b_i = 0;
			jule::Ref<_1d1e5192e_GenericDecl> _1b912748b_g = *_range_begin;
			_iter_begin_4713431648:;
			{
				if (_1d1da4277_is_ignore_ident(_1b912748b_g->_field_ident)) {
					(*this)._method_push_err(_1b912748b_g->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
					_121967_ok=false;
					goto _iter_next_4713431648;
				}
				_julec_label_duplication_lookup:;
				{
					auto _range_expr = _121939_generics;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Int _1b912748b_j = 0;
						jule::Ref<_1d1e5192e_GenericDecl> _1b912748b_ct = *_range_begin;
						_iter_begin_4713434480:;
						{
							{
								if (!((_1b912748b_j >= _1b912748b_i))) { goto _case_end_4713440000; }
								_case_begin_4713440000:;
								{
									goto _iter_end_4713434480;
								}
								goto _match_end_4713439760;
								_case_end_4713440000:;
								if (!((_1b912748b_g->_field_ident == _1b912748b_ct->_field_ident))) { goto _case_end_4713440128; }
								_case_begin_4713440128:;
								{
									(*this)._method_push_err(_1b912748b_g->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1b912748b_g->_field_ident)}));
									(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
									_121967_ok=false;
									goto _iter_end_4713434480;
								}
								goto _match_end_4713439760;
								_case_end_4713440128:;
								_match_end_4713439760:;
							}
						}
						_iter_next_4713434480:;
						++_range_begin;
						if (_range_begin != _range_end) { ++_1b912748b_j; _1b912748b_ct = *_range_begin; goto _iter_begin_4713434480; }
						_iter_end_4713434480:;
					}
				}
			}
			_iter_next_4713431648:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1b912748b_i; _1b912748b_g = *_range_begin; goto _iter_begin_4713431648; }
			_iter_end_4713431648:;
		}
	}
	return _121967_ok;
}



inline jule::Bool _1b912748b_Sema::_method_check_fn_decl_params_dup(jule::Ref<_1d21d97ee_Fn>& _124744_f) {
	jule::Bool _124754_ok = jule::Bool();
	_124754_ok=true;
	_julec_label_check:;
	{
		auto _range_expr = _124744_f->_field_params;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1b912748b_i = 0;
			jule::Ref<_1d21d97ee_Param> _1b912748b_p = *_range_begin;
			_iter_begin_4713449024:;
			{
				{
					auto _range_expr = _124744_f->_field_generics;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Ref<_1d1e5192e_GenericDecl> _1b912748b_g = *_range_begin;
						_iter_begin_4713452272:;
						{
							if (_1b912748b_p->_field_ident == _1b912748b_g->_field_ident) {
								_124754_ok=false;
								(*this)._method_push_err(_1b912748b_p->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1b912748b_p->_field_ident)}));
								(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
								goto _iter_next_4713449024;
							}
						}
						_iter_next_4713452272:;
						++_range_begin;
						if (_range_begin != _range_end) { _1b912748b_g = *_range_begin; goto _iter_begin_4713452272; }
						_iter_end_4713452272:;
					}
				}
				_julec_label_params_lookup:;
				{
					auto _range_expr = _124744_f->_field_params;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Int _1b912748b_j = 0;
						jule::Ref<_1d21d97ee_Param> _1b912748b_jp = *_range_begin;
						_iter_begin_4713452896:;
						{
							{
								if (!((_1b912748b_j >= _1b912748b_i))) { goto _case_end_4713460736; }
								_case_begin_4713460736:;
								{
									goto _iter_end_4713452896;
								}
								goto _match_end_4713460480;
								_case_end_4713460736:;
								if (!((_1d1da4277_is_anon_ident(_1b912748b_p->_field_ident) || _1d1da4277_is_anon_ident(_1b912748b_jp->_field_ident)))) { goto _case_end_4713460864; }
								_case_begin_4713460864:;
								{
									goto _iter_end_4713452896;
								}
								goto _match_end_4713460480;
								_case_end_4713460864:;
								if (!((_1b912748b_p->_field_ident == _1b912748b_jp->_field_ident))) { goto _case_end_4713460992; }
								_case_begin_4713460992:;
								{
									_124754_ok=false;
									(*this)._method_push_err(_1b912748b_p->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1b912748b_p->_field_ident)}));
									(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
									goto _iter_next_4713449024;
								}
								goto _match_end_4713460480;
								_case_end_4713460992:;
								_match_end_4713460480:;
							}
						}
						_iter_next_4713452896:;
						++_range_begin;
						if (_range_begin != _range_end) { ++_1b912748b_j; _1b912748b_jp = *_range_begin; goto _iter_begin_4713452896; }
						_iter_end_4713452896:;
					}
				}
			}
			_iter_next_4713449024:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1b912748b_i; _1b912748b_p = *_range_begin; goto _iter_begin_4713449024; }
			_iter_end_4713449024:;
		}
	}
	return _124754_ok;
}



inline jule::Bool _1b912748b_Sema::_method_check_fn_decl_result_dup(jule::Ref<_1d21d97ee_Fn>& _128344_f) {
	jule::Bool _128354_ok = jule::Bool();
	_128354_ok=true;
	if (_128344_f->_method_is_void()) {
		return _128354_ok;
	}
	{
		auto _range_expr = _128344_f->_field_result->_field_idents;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1b912748b_i = 0;
			_1d1da4277_Token _1b912748b_v = *_range_begin;
			_iter_begin_4713472576:;
			{
				if (_1d1da4277_is_ignore_ident(_1b912748b_v._field_kind)) {
					goto _iter_next_4713472576;
				}
				{
					auto _range_expr = _128344_f->_field_generics;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Ref<_1d1e5192e_GenericDecl> _1b912748b_g = *_range_begin;
						_iter_begin_4713476320:;
						{
							if (_1b912748b_v._field_kind == _1b912748b_g->_field_ident) {
								goto _julec_label_exist;
							}
						}
						_iter_next_4713476320:;
						++_range_begin;
						if (_range_begin != _range_end) { _1b912748b_g = *_range_begin; goto _iter_begin_4713476320; }
						_iter_end_4713476320:;
					}
				}
				{
					auto _range_expr = _128344_f->_field_params;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Ref<_1d21d97ee_Param> _1b912748b_p = *_range_begin;
						_iter_begin_4713479936:;
						{
							if (_1b912748b_v._field_kind == _1b912748b_p->_field_ident) {
								goto _julec_label_exist;
							}
						}
						_iter_next_4713479936:;
						++_range_begin;
						if (_range_begin != _range_end) { _1b912748b_p = *_range_begin; goto _iter_begin_4713479936; }
						_iter_end_4713479936:;
					}
				}
				_julec_label_itself_lookup:;
				{
					auto _range_expr = _128344_f->_field_result->_field_idents;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Int _1b912748b_j = 0;
						_1d1da4277_Token _1b912748b_jv = *_range_begin;
						_iter_begin_4713484400:;
						{
							{
								if (!((_1b912748b_j >= _1b912748b_i))) { goto _case_end_4713486912; }
								_case_begin_4713486912:;
								{
									goto _iter_end_4713484400;
								}
								goto _match_end_4713486672;
								_case_end_4713486912:;
								if (!((_1b912748b_jv._field_kind == _1b912748b_v._field_kind))) { goto _case_end_4713487040; }
								_case_begin_4713487040:;
								{
									goto _julec_label_exist;
								}
								goto _match_end_4713486672;
								_case_end_4713487040:;
								_match_end_4713486672:;
							}
						}
						_iter_next_4713484400:;
						++_range_begin;
						if (_range_begin != _range_end) { ++_1b912748b_j; _1b912748b_jv = *_range_begin; goto _iter_begin_4713484400; }
						_iter_end_4713484400:;
					}
				}
				goto _iter_next_4713472576;
				_julec_label_exist:;
				(*this)._method_push_err(_1b912748b_v,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1b912748b_v._field_kind)}));
				(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
				_128354_ok=false;
			}
			_iter_next_4713472576:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1b912748b_i; _1b912748b_v = *_range_begin; goto _iter_begin_4713472576; }
			_iter_end_4713472576:;
		}
	}
	return _128354_ok;
}



inline jule::Bool _1b912748b_Sema::_method_check_fn_decl_types(jule::Ref<_1d21d97ee_Fn>& _133244_f) {
	jule::Bool _133254_ok = jule::Bool();
	_133254_ok=true;
	jule::Slice<jule::Ref<_1d1e5192e_GenericDecl>> _133517_generics = _133244_f->_field_generics;
	if (jule::real(_133244_f->_field_owner)) {
		_133517_generics=jule::append(_133517_generics,_133244_f->_field_owner->_field_generics);
	}
	{
		auto _range_expr = _133244_f->_field_params;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d21d97ee_Param> _1b912748b_p = *_range_begin;
			_iter_begin_4713499120:;
			{
				if ((!(_1b912748b_p->_method_is_self()))) {
					jule::Ref<_1b951b088_TypeKind> _134225_kind = this->self->_method_build_non_generic_type_kind(_1b912748b_p->_field_kind->_field_decl,_133517_generics);
					_133254_ok=jule::real(_134225_kind) && _133254_ok;
					_1b912748b_p->_field_kind->_field_kind=_134225_kind;
				}
			}
			_iter_next_4713499120:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b912748b_p = *_range_begin; goto _iter_begin_4713499120; }
			_iter_end_4713499120:;
		}
	}
	if ((!(_133244_f->_method_is_void()))) {
		jule::Ref<_1b951b088_TypeKind> _134921_kind = this->self->_method_build_non_generic_type_kind(_133244_f->_field_result->_field_kind->_field_decl,_133517_generics);
		_133254_ok=jule::real(_134921_kind) && _133254_ok;
		_133244_f->_field_result->_field_kind->_field_kind=_134921_kind;
	}
	_133254_ok = _133254_ok;
	return _133254_ok;
}



inline jule::Bool _1b912748b_Sema::_method_check_fn_decl_prototype(jule::Ref<_1d21d97ee_Fn>& _135948_f) {
	jule::Bool _135958_ok = jule::Bool();
	{
		if (!(((!(this->self->_method_check_decl_generics(_135948_f->_field_generics)))))) { goto _case_end_4713513856; }
		_case_begin_4713513856:;
		{
			_135958_ok = false;
			return _135958_ok;
		}
		goto _match_end_4713512624;
		_case_end_4713513856:;
		if (!(((!(this->self->_method_check_fn_decl_params_dup(_135948_f)))))) { goto _case_end_4713513968; }
		_case_begin_4713513968:;
		{
			_135958_ok = false;
			return _135958_ok;
		}
		goto _match_end_4713512624;
		_case_end_4713513968:;
		if (!(((!(this->self->_method_check_fn_decl_result_dup(_135948_f)))))) { goto _case_end_4713514080; }
		_case_begin_4713514080:;
		{
			_135958_ok = false;
			return _135958_ok;
		}
		goto _match_end_4713512624;
		_case_end_4713514080:;
		if (!(((!(this->self->_method_check_fn_decl_types(_135948_f)))))) { goto _case_end_4713513104; }
		_case_begin_4713513104:;
		{
			_135958_ok = false;
			return _135958_ok;
		}
		goto _match_end_4713512624;
		_case_end_4713513104:;
		_case_begin_4713512800:;
		{
			_135958_ok = true;
			return _135958_ok;
		}
		goto _match_end_4713512624;
		_case_end_4713512800:;
		_match_end_4713512624:;
	}
}



inline void _1b912748b_Sema::_method_check_trait_decl_method(jule::Ref<_1d21d97ee_Fn>& _136948_f) {
	if (_1d1da4277_is_ignore_ident(_136948_f->_field_ident)) {
		this->self->_method_push_err(_136948_f->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
	}
	this->self->_method_check_fn_decl_prototype(_136948_f);
	_136948_f->_field_sema=this->self;
}



inline void _1b912748b_Sema::_method_check_trait_decl_methods(jule::Ref<_1b8cd2894_Trait>& _137849_t) {
	{
		auto _range_expr = _137849_t->_field_methods;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1b912748b_i = 0;
			jule::Ref<_1d21d97ee_Fn> _1b912748b_f = *_range_begin;
			_iter_begin_4713527840:;
			{
				this->self->_method_check_trait_decl_method(_1b912748b_f);
				_137849_t->_field_mutable=_137849_t->_field_mutable || _1b912748b_f->_field_params[0LL]->_field_mutable;
				if (this->self->_field_errors.len() > 0LL) {
					return;
				}
				_julec_label_duplicate_lookup:;
				{
					auto _range_expr = _137849_t->_field_methods;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Int _1b912748b_j = 0;
						jule::Ref<_1d21d97ee_Fn> _1b912748b_jf = *_range_begin;
						_iter_begin_4713534864:;
						{
							{
								if (!((_1b912748b_j >= _1b912748b_i))) { goto _case_end_4713537648; }
								_case_begin_4713537648:;
								{
									goto _iter_end_4713534864;
								}
								goto _match_end_4713537408;
								_case_end_4713537648:;
								if (!((_1b912748b_f->_field_ident == _1b912748b_jf->_field_ident))) { goto _case_end_4713537776; }
								_case_begin_4713537776:;
								{
									this->self->_method_push_err(_1b912748b_f->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1b912748b_f->_field_ident)}));
									this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
									goto _iter_end_4713534864;
								}
								goto _match_end_4713537408;
								_case_end_4713537776:;
								_match_end_4713537408:;
							}
						}
						_iter_next_4713534864:;
						++_range_begin;
						if (_range_begin != _range_end) { ++_1b912748b_j; _1b912748b_jf = *_range_begin; goto _iter_begin_4713534864; }
						_iter_end_4713534864:;
					}
				}
			}
			_iter_next_4713527840:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1b912748b_i; _1b912748b_f = *_range_begin; goto _iter_begin_4713527840; }
			_iter_end_4713527840:;
		}
	}
}



inline void _1b912748b_Sema::_method_check_trait_decl(jule::Ref<_1b8cd2894_Trait>& _141041_t) {
	if (_1d1da4277_is_ignore_ident(_141041_t->_field_ident)) {
		this->self->_method_push_err(_141041_t->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
	} else if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_141041_t).alloc)),_141041_t->_field_ident,false)) {
		this->self->_method_push_err(_141041_t->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_141041_t->_field_ident)}));
		this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	this->self->_method_check_trait_decl_methods(_141041_t);
}



inline jule::Bool _1b912748b_Sema::_method_check_trait_decls(void) {
	jule::Bool _142239_ok = jule::Bool();
	{
		auto _range_expr = this->self->_field_file->_field_traits;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b8cd2894_Trait> _1b912748b_t = *_range_begin;
			_iter_begin_4713556160:;
			{
				this->self->_method_check_trait_decl(_1b912748b_t);
				if (this->self->_field_errors.len() > 0LL) {
					_142239_ok = false;
					return _142239_ok;
				}
			}
			_iter_next_4713556160:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b912748b_t = *_range_begin; goto _iter_begin_4713556160; }
			_iter_end_4713556160:;
		}
	}
	_142239_ok = true;
	return _142239_ok;
}



inline jule::Bool _1b912748b_Sema::_method_check_trait_impl_methods(jule::Ref<_1b8cd2894_Trait>& _143448_base,jule::Ref<_1b8dacd8c_Impl>& _143463_ipl) {
	jule::Bool _143477_ok = jule::Bool();
	_143477_ok=true;
	{
		auto _range_expr = _143463_ipl->_field_methods;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d21d97ee_Fn> _1b912748b_f = *_range_begin;
			_iter_begin_4713564224:;
			{
				if ((!(jule::real(_143448_base->_method_find_method(_1b912748b_f->_field_ident))))) {
					(*this)._method_push_err(_1b912748b_f->_field_token,jule::Str("trait @ have not any define in this identifier: @", 49),jule::Slice<jule::Any>({jule::Any(_143448_base->_field_ident),jule::Any(_1b912748b_f->_field_ident)}));
					_143477_ok=false;
				}
			}
			_iter_next_4713564224:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b912748b_f = *_range_begin; goto _iter_begin_4713564224; }
			_iter_end_4713564224:;
		}
	}
	return _143477_ok;
}



inline jule::Bool _1b912748b_Sema::_method_impl_to_struct(jule::Ref<_1d21c0b59_Struct>& _144539_dest,jule::Ref<_1b8dacd8c_Impl>& _144559_ipl) {
	jule::Bool _144573_ok = jule::Bool();
	_144573_ok=true;
	{
		auto _range_expr = _144559_ipl->_field_methods;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d21d97ee_Fn> _1b912748b_f = *_range_begin;
			_iter_begin_4713574112:;
			{
				if (jule::real(_144539_dest->_method_find_method(_1b912748b_f->_field_ident,_1b912748b_f->_field_statically)) || jule::real(_144539_dest->_method_find_field(_1b912748b_f->_field_ident))) {
					this->self->_method_push_err(_1b912748b_f->_field_token,jule::Str("struct @ already have a define in this identifier: @", 52),jule::Slice<jule::Any>({jule::Any(_144539_dest->_field_ident),jule::Any(_1b912748b_f->_field_ident)}));
					_144573_ok=false;
					goto _iter_next_4713574112;
				}
				if ((_144539_dest->_field_generics.len() > 0LL) && (_1b912748b_f->_field_generics.len() > 0LL)) {
					{
						auto _range_expr = _1b912748b_f->_field_generics;
						if (_range_expr.begin() != _range_expr.end()) {
							auto _range_begin = _range_expr.begin();
							const auto _range_end = _range_expr.end();
							jule::Ref<_1d1e5192e_GenericDecl> _1b912748b_fg = *_range_begin;
							_iter_begin_4713582448:;
							{
								{
									auto _range_expr = _144539_dest->_field_generics;
									if (_range_expr.begin() != _range_expr.end()) {
										auto _range_begin = _range_expr.begin();
										const auto _range_end = _range_expr.end();
										jule::Ref<_1d1e5192e_GenericDecl> _1b912748b_dg = *_range_begin;
										_iter_begin_4713584432:;
										{
											if (_1b912748b_fg->_field_ident == _1b912748b_dg->_field_ident) {
												this->self->_method_push_err(_1b912748b_fg->_field_token,jule::Str("methods cannot have same generic identifier with owner same time", 64),jule::Slice<jule::Any>({}));
												_144573_ok=false;
											}
										}
										_iter_next_4713584432:;
										++_range_begin;
										if (_range_begin != _range_end) { _1b912748b_dg = *_range_begin; goto _iter_begin_4713584432; }
										_iter_end_4713584432:;
									}
								}
							}
							_iter_next_4713582448:;
							++_range_begin;
							if (_range_begin != _range_end) { _1b912748b_fg = *_range_begin; goto _iter_begin_4713582448; }
							_iter_end_4713582448:;
						}
					}
				}
				_1b912748b_f->_field_sema=this->self;
				_1b912748b_f->_field_owner=_144539_dest;
				_144539_dest->_field_methods=jule::append(_144539_dest->_field_methods,jule::Slice<jule::Ref<_1d21d97ee_Fn>>({_1b912748b_f}));
			}
			_iter_next_4713574112:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b912748b_f = *_range_begin; goto _iter_begin_4713574112; }
			_iter_end_4713574112:;
		}
	}
	{
		auto _range_expr = _144559_ipl->_field_statics;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b919cb2c_Var> _1b912748b_v = *_range_begin;
			_iter_begin_4713591664:;
			{
				
				if (jule::real(_144539_dest->_method_find_method(_1b912748b_v->_field_ident,true)) || jule::real(_144539_dest->_method_find_static(_1b912748b_v->_field_ident))) {
					this->self->_method_push_err(_1b912748b_v->_field_token,jule::Str("struct @ already have a define in this identifier: @", 52),jule::Slice<jule::Any>({jule::Any(_144539_dest->_field_ident),jule::Any(_1b912748b_v->_field_ident)}));
					_144573_ok=false;
					goto _iter_next_4713591664;
				}
				this->self->_method_check_var_decl(_1b912748b_v,this->self);
				this->self->_method_check_type_var(_1b912748b_v,this->self);
				_144539_dest->_field_statics=jule::append(_144539_dest->_field_statics,jule::Slice<jule::Ref<_1b919cb2c_Var>>({_1b912748b_v}));
			}
			_iter_next_4713591664:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b912748b_v = *_range_begin; goto _iter_begin_4713591664; }
			_iter_end_4713591664:;
		}
	}
	return _144573_ok;
}



inline void _1b912748b_Sema::_method_impl_trait(jule::Ref<_1b8dacd8c_Impl>& _148835_decl) {
	jule::Ref<_1b8cd2894_Trait> _148917_base = this->self->_method_find_trait(_148835_decl->_field_base._field_kind);
	if ((!(jule::real(_148917_base)))) {
		_148917_base=_1b9c0b525_find_builtin_trait(_148835_decl->_field_base._field_kind);
	}
	if ((!(jule::real(_148917_base)))) {
		this->self->_method_push_err(_148835_decl->_field_base,jule::Str("any valid base definition is not exist in this identifier: @", 60),jule::Slice<jule::Any>({jule::Any(_148835_decl->_field_base._field_kind)}));
		return;
	}
	
	jule::Ref<_1d21c0b59_Struct> _150217_dest = this->self->_method_find_struct(_148835_decl->_field_dest._field_kind,false);
	if ((!(jule::real(_150217_dest)))) {
		this->self->_method_push_err(_148835_decl->_field_dest,jule::Str("any valid destination definition is not exist in this identifier: @", 67),jule::Slice<jule::Any>({jule::Any(_148835_decl->_field_dest._field_kind)}));
		return;
	}
	if (_150217_dest->_field_token._field_file->_method_dir() != this->self->_field_file->_field_file->_method_dir()) {
		this->self->_method_push_err(_148835_decl->_field_dest,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>({}));
		return;
	}
	_148917_base->_field_implemented=jule::append(_148917_base->_field_implemented,jule::Slice<jule::Ref<_1d21c0b59_Struct>>({_150217_dest}));
	_150217_dest->_field_implements=jule::append(_150217_dest->_field_implements,jule::Slice<jule::Ref<_1b8cd2894_Trait>>({_148917_base}));
	if (_148835_decl->_field_statics.len() > 0LL) {
		this->self->_method_push_err(_148835_decl->_field_statics[0LL]->_field_token,jule::Str("trait implementations cannot implement static field", 51),jule::Slice<jule::Any>({}));
	}
	{
		if (!(((!(this->self->_method_check_trait_impl_methods(_148917_base,_148835_decl)))))) { goto _case_end_4713624672; }
		_case_begin_4713624672:;
		{
			return;
		}
		goto _match_end_4713621376;
		_case_end_4713624672:;
		if (!(((!(this->self->_method_impl_to_struct(_150217_dest,_148835_decl)))))) { goto _case_end_4713624784; }
		_case_begin_4713624784:;
		{
			return;
		}
		goto _match_end_4713621376;
		_case_end_4713624784:;
		_match_end_4713621376:;
	}
}



inline void _1b912748b_Sema::_method_impl_struct(jule::Ref<_1b8dacd8c_Impl>& _152636_decl) {
	
	jule::Ref<_1d21c0b59_Struct> _153117_dest = this->self->_method_find_struct(_152636_decl->_field_dest._field_kind,false);
	if ((!(jule::real(_153117_dest)))) {
		this->self->_method_push_err(_152636_decl->_field_dest,jule::Str("any valid destination definition is not exist in this identifier: @", 67),jule::Slice<jule::Any>({jule::Any(_152636_decl->_field_dest._field_kind)}));
		return;
	}
	if (_153117_dest->_field_token._field_file->_method_dir() != this->self->_field_file->_field_file->_method_dir()) {
		this->self->_method_push_err(_152636_decl->_field_dest,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>({}));
		return;
	}
	{
		if (!(((!(this->self->_method_impl_to_struct(_153117_dest,_152636_decl)))))) { goto _case_end_4713639520; }
		_case_begin_4713639520:;
		{
			return;
		}
		goto _match_end_4713638240;
		_case_end_4713639520:;
		_match_end_4713638240:;
	}
}



inline void _1b912748b_Sema::_method_impl_impl(jule::Ref<_1b8dacd8c_Impl>& _154934_decl) {
	{
		if (!((_154934_decl->_method_is_trait_impl()))) { goto _case_end_4713642624; }
		_case_begin_4713642624:;
		{
			this->self->_method_impl_trait(_154934_decl);
		}
		goto _match_end_4713642400;
		_case_end_4713642624:;
		if (!((_154934_decl->_method_is_struct_impl()))) { goto _case_end_4713642752; }
		_case_begin_4713642752:;
		{
			this->self->_method_impl_struct(_154934_decl);
		}
		goto _match_end_4713642400;
		_case_end_4713642752:;
		_match_end_4713642400:;
	}
}



inline void _1b912748b_Sema::_method_check_var_decl(jule::Ref<_1b919cb2c_Var>& _155839_decl,jule::Trait<_1b9a5b012_Lookup> _155855_l) {
	if (_1d1da4277_is_ignore_ident(_155839_decl->_field_ident)) {
		this->self->_method_push_err(_155839_decl->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
	}
	if (_155839_decl->_method_is_type_inferred()) {
		if (_155839_decl->_field_statically) {
			this->self->_method_push_err(_155839_decl->_field_token,jule::Str("static variables must be have type annotation", 45),jule::Slice<jule::Any>({}));
		}
		if ((!(_155839_decl->_method_is_initialized()))) {
			this->self->_method_push_err(_155839_decl->_field_token,jule::Str("type inference declarations should have a initializer", 53),jule::Slice<jule::Any>({}));
		}
	} else {
		this->self->_method_check_type(_155839_decl->_field_kind,_155855_l);
	}
	if (_155839_decl->_field_constant && _155839_decl->_field_reference) {
		this->self->_method_push_err(_155839_decl->_field_token,jule::Str("references cannot be constant", 29),jule::Slice<jule::Any>({}));
	}
	if ((!(_155839_decl->_method_is_initialized()))) {
		if (_155839_decl->_field_constant) {
			this->self->_method_push_err(_155839_decl->_field_token,jule::Str("constant variable must have initialize expression", 49),jule::Slice<jule::Any>({}));
		}
		if (_155839_decl->_field_statically) {
			this->self->_method_push_err(_155839_decl->_field_token,jule::Str("static variables must be have initialize expression", 51),jule::Slice<jule::Any>({}));
		}
		if (_155839_decl->_field_reference) {
			this->self->_method_push_err(_155839_decl->_field_token,jule::Str("reference variables must be have lvalue initialize expression", 61),jule::Slice<jule::Any>({}));
		}
	}
}



inline void _1b912748b_Sema::_method_check_global_var_decl(jule::Ref<_1b919cb2c_Var>& _159546_decl) {
	if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_159546_decl).alloc)),_159546_decl->_field_ident,_159546_decl->_field_cpp_linked)) {
		this->self->_method_push_err(_159546_decl->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_159546_decl->_field_ident)}));
		this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	if (_159546_decl->_field_cpp_linked && _159546_decl->_field_constant) {
		this->self->_method_push_err(_159546_decl->_field_token,jule::Str("cpp linked variables cannot constant", 36),jule::Slice<jule::Any>({}));
	}
	if (((!(_159546_decl->_field_cpp_linked)) && (!(_159546_decl->_field_constant))) && (!(_159546_decl->_field_statically))) {
		this->self->_method_push_err(_159546_decl->_field_token,jule::Str("global variables must be static", 31),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("use \"static\" keyword to define", 30),jule::Slice<jule::Any>({}));
	}
	this->self->_method_check_var_decl(_159546_decl,this->self);
}



inline jule::Bool _1b912748b_Sema::_method_check_global_decls(void) {
	jule::Bool _161240_ok = jule::Bool();
	{
		auto _range_expr = this->self->_field_file->_field_vars;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b919cb2c_Var> _1b912748b_decl = *_range_begin;
			_iter_begin_4713684256:;
			{
				this->self->_method_check_global_var_decl(_1b912748b_decl);
				if (this->self->_field_errors.len() > 0LL) {
					_161240_ok = false;
					return _161240_ok;
				}
			}
			_iter_next_4713684256:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b912748b_decl = *_range_begin; goto _iter_begin_4713684256; }
			_iter_end_4713684256:;
		}
	}
	_161240_ok = true;
	return _161240_ok;
}



inline jule::Bool _1b912748b_Sema::_method_check_struct_trait_impl(jule::Ref<_1d21c0b59_Struct>& _162448_strct,jule::Ref<_1b8cd2894_Trait>& _162469_trt) {
	jule::Bool _162484_ok = jule::Bool();
	{
		auto _range_expr = _162469_trt->_field_methods;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d21d97ee_Fn> _1b912748b_tf = *_range_begin;
			_iter_begin_4713692608:;
			{
				jule::Bool _162621_exist = false;
				jule::Ref<_1d21d97ee_Fn> _162721_sf = _162448_strct->_method_find_method(_1b912748b_tf->_field_ident,_1b912748b_tf->_field_statically);
				jule::Ref<_1d21d97ee_FnIns> _162817_tf_k = this->self->_method_get_trait_check_fn_kind(_1b912748b_tf);
				if (jule::real(_162721_sf)) {
					jule::Ref<_1d21d97ee_FnIns> _163025_sf_k = this->self->_method_get_trait_check_fn_kind(_162721_sf);
					_162621_exist=((_162817_tf_k->_field_decl->_field_public == _163025_sf_k->_field_decl->_field_public) && (_162817_tf_k->_field_decl->_field_ident == _163025_sf_k->_field_decl->_field_ident)) && _162817_tf_k->_method_equals(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_163025_sf_k)));
				}
				if ((!(_162621_exist))) {
					
					jule::Str _163925_s = _162817_tf_k->_method_get_kind_str(true);
					if (_1b912748b_tf->_field_public) {
						_163925_s=jule::Str("pub ", 4) + _163925_s;
					}
					this->self->_method_push_err(_162448_strct->_field_token,jule::Str("trait @ derived but not implemented trait's \"@\" define", 54),jule::Slice<jule::Any>({jule::Any(_162469_trt->_field_ident),jule::Any(_163925_s)}));
					_162484_ok=false;
				}
			}
			_iter_next_4713692608:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b912748b_tf = *_range_begin; goto _iter_begin_4713692608; }
			_iter_end_4713692608:;
		}
	}
	return _162484_ok;
}



inline jule::Bool _1b912748b_Sema::_method_check_struct_impls(jule::Ref<_1d21c0b59_Struct>& _165043_s) {
	jule::Bool _165057_ok = jule::Bool();
	_165057_ok=true;
	{
		auto _range_expr = _165043_s->_field_implements;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b8cd2894_Trait> _1b912748b_trt = *_range_begin;
			_iter_begin_4713712496:;
			{
				_165057_ok=this->self->_method_check_struct_trait_impl(_165043_s,_1b912748b_trt) && _165057_ok;
			}
			_iter_next_4713712496:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b912748b_trt = *_range_begin; goto _iter_begin_4713712496; }
			_iter_end_4713712496:;
		}
	}
	_165057_ok = _165057_ok;
	return _165057_ok;
}



inline jule::Bool _1b912748b_Sema::_method_check_struct_fields(jule::Ref<_1d21c0b59_Struct>& _165844_st) {
	jule::Bool _165859_ok = jule::Bool();
	_165859_ok=true;
	jule::Ref<_1b951b088_TypeChecker> _166117_tc = jule::new_struct<_1b951b088_TypeChecker>(new( std::nothrow ) _1b951b088_TypeChecker(this->self,this->self,jule::new_struct<_1b951b088_Referencer>(new( std::nothrow ) _1b951b088_Referencer(_165844_st->_field_ident,jule::Any(_165844_st),nullptr)),_1d1da4277_Token(),_165844_st->_field_generics,jule::Slice<jule::Ref<_1b951b088_TypeAlias>>(),jule::Bool()));
	jule::I64 _167113_n = _165844_st->_field_instances.len();
	{
		auto _range_expr = _165844_st->_field_fields;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d21c0b59_Field> _1b912748b_f = *_range_begin;
			_iter_begin_4713722944:;
			{
				_1b912748b_f->_field_owner=_165844_st;
				_1b912748b_f->_field_kind->_field_kind=_166117_tc->_method_check_decl(_1b912748b_f->_field_kind->_field_decl);
				_165859_ok=jule::real(_1b912748b_f->_field_kind->_field_kind) && _165859_ok;
				{
					auto _range_expr = _165844_st->_field_fields;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Ref<_1d21c0b59_Field> _1b912748b_cf = *_range_begin;
						_iter_begin_4713727568:;
						{
							if (_1b912748b_f == _1b912748b_cf) {
								goto _iter_end_4713727568;
							} else if (_1b912748b_f->_field_ident == _1b912748b_cf->_field_ident) {
								this->self->_method_push_err(_1b912748b_f->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1b912748b_f->_field_ident)}));
								this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
								_165859_ok=false;
							}
						}
						_iter_next_4713727568:;
						++_range_begin;
						if (_range_begin != _range_end) { _1b912748b_cf = *_range_begin; goto _iter_begin_4713727568; }
						_iter_end_4713727568:;
					}
				}
			}
			_iter_next_4713722944:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b912748b_f = *_range_begin; goto _iter_begin_4713722944; }
			_iter_end_4713722944:;
		}
	}
	if (_165859_ok && (_167113_n != _165844_st->_field_instances.len())) {
		jule::drop(_166117_tc->_field_referencer);
		_165844_st->_field_instances=_165844_st->_field_instances.slice(0LL,static_cast<jule::Int>(_167113_n));
		{
			auto _range_expr = _165844_st->_field_fields;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_1d21c0b59_Field> _1b912748b_f = *_range_begin;
				_iter_begin_4713734928:;
				{
					_1b912748b_f->_field_kind->_field_kind=_166117_tc->_method_check_decl(_1b912748b_f->_field_kind->_field_decl);
				}
				_iter_next_4713734928:;
				++_range_begin;
				if (_range_begin != _range_end) { _1b912748b_f = *_range_begin; goto _iter_begin_4713734928; }
				_iter_end_4713734928:;
			}
		}
	}
	_165859_ok = _165859_ok;
	return _165859_ok;
}



inline jule::Bool _1b912748b_Sema::_method_check_struct_decl_methods(jule::Ref<_1d21c0b59_Struct>& _170050_s) {
	jule::Bool _170064_ok = jule::Bool();
	{
		auto _range_expr = _170050_s->_field_methods;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d21d97ee_Fn> _1b912748b_m = *_range_begin;
			_iter_begin_4713742144:;
			{
				if ((!(this->self->_method_check_fn_decl_types(_1b912748b_m)))) {
					_170064_ok = false;
					return _170064_ok;
				}
			}
			_iter_next_4713742144:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b912748b_m = *_range_begin; goto _iter_begin_4713742144; }
			_iter_end_4713742144:;
		}
	}
	_170064_ok = true;
	return _170064_ok;
}



inline void _1b912748b_Sema::_method_check_struct_decl(jule::Ref<_1d21c0b59_Struct>& _170942_s) {
	if (_1d1da4277_is_ignore_ident(_170942_s->_field_ident)) {
		this->self->_method_push_err(_170942_s->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
	} else if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_170942_s).alloc)),_170942_s->_field_ident,_170942_s->_field_cpp_linked)) {
		this->self->_method_push_err(_170942_s->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_170942_s->_field_ident)}));
		this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	_170942_s->_field_sema=this->self;
	{
		if (!(((!(this->self->_method_check_decl_generics(_170942_s->_field_generics)))))) { goto _case_end_4713754528; }
		_case_begin_4713754528:;
		{
			return;
		}
		goto _match_end_4713754896;
		_case_end_4713754528:;
		if (!(((!(this->self->_method_check_struct_fields(_170942_s)))))) { goto _case_end_4713754640; }
		_case_begin_4713754640:;
		{
			return;
		}
		goto _match_end_4713754896;
		_case_end_4713754640:;
		if (!(((!(this->self->_method_check_struct_decl_methods(_170942_s)))))) { goto _case_end_4713755120; }
		_case_begin_4713755120:;
		{
			return;
		}
		goto _match_end_4713754896;
		_case_end_4713755120:;
		if (!(((!(this->self->_method_check_struct_impls(_170942_s)))))) { goto _case_end_4713755232; }
		_case_begin_4713755232:;
		{
			return;
		}
		goto _match_end_4713754896;
		_case_end_4713755232:;
		_match_end_4713754896:;
	}
}



inline jule::Bool _1b912748b_Sema::_method_check_struct_decls(void) {
	jule::Bool _172740_ok = jule::Bool();
	{
		auto _range_expr = this->self->_field_file->_field_structs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d21c0b59_Struct> _1b912748b_s = *_range_begin;
			_iter_begin_4713762464:;
			{
				this->self->_method_check_struct_decl(_1b912748b_s);
				if (this->self->_field_errors.len() > 0LL) {
					_172740_ok = false;
					return _172740_ok;
				}
			}
			_iter_next_4713762464:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b912748b_s = *_range_begin; goto _iter_begin_4713762464; }
			_iter_end_4713762464:;
		}
	}
	_172740_ok = true;
	return _172740_ok;
}



inline void _1b912748b_Sema::_method_check_fn_decl(jule::Ref<_1d21d97ee_Fn>& _174038_f) {
	if (_1d1da4277_is_ignore_ident(_174038_f->_field_ident)) {
		this->self->_method_push_err(_174038_f->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
	} else if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_174038_f).alloc)),_174038_f->_field_ident,_174038_f->_field_cpp_linked)) {
		this->self->_method_push_err(_174038_f->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_174038_f->_field_ident)}));
		this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	_174038_f->_field_sema=this->self;
	this->self->_method_check_fn_decl_prototype(_174038_f);
}



inline jule::Bool _1b912748b_Sema::_method_check_fn_decls(void) {
	jule::Bool _175336_ok = jule::Bool();
	{
		auto _range_expr = this->self->_field_file->_field_funcs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d21d97ee_Fn> _1b912748b_f = *_range_begin;
			_iter_begin_4713779312:;
			{
				this->self->_method_check_fn_decl(_1b912748b_f);
				if (this->self->_field_errors.len() > 0LL) {
					_175336_ok = false;
					return _175336_ok;
				}
			}
			_iter_next_4713779312:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b912748b_f = *_range_begin; goto _iter_begin_4713779312; }
			_iter_end_4713779312:;
		}
	}
	_175336_ok = true;
	return _175336_ok;
}



inline jule::Bool _1b912748b_Sema::_method_check_directive_pass(_1b8b10cbb_Pass& _176540_pass) {
	jule::Bool _176554_ok = jule::Bool();
	if (_176540_pass._field_text == jule::Str("", 0)) {
		_176554_ok = true;
		return _176554_ok;
	}
	if (_176540_pass._field_text[0LL] != '-') {
		(*this)._method_push_err(_176540_pass._field_token,jule::Str("the pass directive must be start with dash", 42),jule::Slice<jule::Any>({}));
		_176554_ok = false;
		return _176554_ok;
	}
	_176554_ok = true;
	return _176554_ok;
}



inline jule::Bool _1b912748b_Sema::_method_check_passes(void) {
	jule::Bool _177833_ok = jule::Bool();
	_177833_ok=true;
	{
		auto _range_expr = (*this)._field_file->_field_passes;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			_1b8b10cbb_Pass _1b912748b_pass = *_range_begin;
			_iter_begin_4713792896:;
			{
				_177833_ok=(*this)._method_check_directive_pass(_1b912748b_pass) && _177833_ok;
			}
			_iter_next_4713792896:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b912748b_pass = *_range_begin; goto _iter_begin_4713792896; }
			_iter_end_4713792896:;
		}
	}
	return _177833_ok;
}



inline void _1b912748b_Sema::_method_push_cycle_error(jule::Ref<_1d21c0b59_Struct>& _178632_st1,jule::Ref<_1d21c0b59_Struct>& _178647_st2,jule::Str& _178666_message) {
	
	jule::Str _178913_refers_to = _1d0557e9e_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(_178632_st1->_field_ident),jule::Any(_178647_st2->_field_ident)}));
	_178666_message=((_1b8b10cbb_str_repeat(jule::Str(" ", 1),4LL) + _178913_refers_to) + jule::Str("\n", 1)) + _178666_message;
}



inline jule::Bool _1b912748b_Sema::_method_check_cross_cycle(jule::Ref<_1d21c0b59_Struct>& _179333_st1,jule::Ref<_1d21c0b59_Struct>& _179348_st2,jule::Str& _179367_message) {
	{
		auto _range_expr = _179348_st2->_field_uses;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d21c0b59_Struct> _1b912748b_u = *_range_begin;
			_iter_begin_4713808352:;
			{
				if ((_1b912748b_u).alloc == (_179333_st1).alloc) {
					(*this)._method_push_cycle_error(_179348_st2,_1b912748b_u,_179367_message);
					return false;
				}
				if ((!((*this)._method_check_cross_cycle(_179333_st1,_1b912748b_u,_179367_message)))) {
					(*this)._method_push_cycle_error(_179348_st2,_1b912748b_u,_179367_message);
					return false;
				}
			}
			_iter_next_4713808352:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b912748b_u = *_range_begin; goto _iter_begin_4713808352; }
			_iter_end_4713808352:;
		}
	}
	return true;
}



inline jule::Bool _1b912748b_Sema::_method_check_struct_derive_illegal_cycles(jule::Str _180953_derive,jule::Ref<_1d21c0b59_Struct>& _180967_st1,jule::Ref<_1b951b088_TypeKind>& _180986_k) {
	jule::Bool _1809102_ok = jule::Bool();
	jule::Ref<_1d21c0b59_Struct> _181017_st2 = _1b951b088_get_struct_from_kind(_180986_k);
	if ((!(jule::real(_181017_st2)))) {
		_1809102_ok = true;
		return _1809102_ok;
	}
	if ((_180967_st1).alloc == (_181017_st2).alloc) {
		(*this)._method_push_err(_180967_st1->_field_token,jule::Str("illegal cycle for \"@\" derive, struct \"@\" refers to itself", 57),jule::Slice<jule::Any>({jule::Any(_180953_derive),jule::Any(_180967_st1->_field_ident)}));
		_1809102_ok = false;
		return _1809102_ok;
	}
	jule::Str _182217_message = jule::Str("", 0);
	if ((!((*this)._method_check_cross_cycle(_180967_st1,_181017_st2,_182217_message)))) {
		jule::Str _182521_err_msg = _182217_message;
		_182217_message=jule::Str("", 0);
		(*this)._method_push_cycle_error(_180967_st1,_181017_st2,_182217_message);
		_182521_err_msg=_182521_err_msg + _182217_message;
		(*this)._method_push_err(_180967_st1->_field_token,jule::Str("illegal cross cycle for \"@\" derive;\n@", 37),jule::Slice<jule::Any>({jule::Any(_180953_derive),jule::Any(_182521_err_msg)}));
		_1809102_ok = false;
		return _1809102_ok;
	}
	_1809102_ok = true;
	return _1809102_ok;
}



inline jule::Bool _1b912748b_Sema::_method_check_struct_ins_derive_clone(jule::Ref<_1d21c0b59_StructIns> _183652_st) {
	jule::Bool _183670_ok = jule::Bool();
	if ((!(_183652_st->_field_decl->_method_is_derives(jule::Str("Clone", 5))))) {
		_183670_ok = true;
		return _183670_ok;
	}
	{
		auto _range_expr = _183652_st->_field_fields;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d21c0b59_FieldIns> _1b912748b_f = *_range_begin;
			_iter_begin_4713833680:;
			{
				if ((!(jule::real(_1b912748b_f->_field_kind))) || (!(_1b912748b_f->_field_kind->_method_mutable()))) {
					goto _iter_next_4713833680;
				}
				if ((!(_1b912748b_f->_field_kind->_method_supports_cloning()))) {
					(*this)._method_push_err(_183652_st->_field_decl->_field_token,jule::Str("type \"@\" is not compatible to derive \"@\"", 40),jule::Slice<jule::Any>({jule::Any(_1b912748b_f->_field_kind->_method_to_str()),jule::Any(jule::Str("Clone", 5))}));
					_183670_ok = false;
					return _183670_ok;
				}
				if ((!((*this)._method_check_struct_derive_illegal_cycles(jule::Str("Clone", 5),_183652_st->_field_decl,_1b912748b_f->_field_kind)))) {
					_183670_ok = false;
					return _183670_ok;
				}
			}
			_iter_next_4713833680:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b912748b_f = *_range_begin; goto _iter_begin_4713833680; }
			_iter_end_4713833680:;
		}
	}
	_183670_ok = true;
	return _183670_ok;
}



inline jule::Bool _1b912748b_Sema::_method_check_struct_derive_clone(jule::Ref<_1d21c0b59_Struct>& _185949_st) {
	jule::Bool _185964_ok = jule::Bool();
	_185964_ok = (*this)._method_check_struct_ins_derive_clone(_185949_st->_method_instance());
	return _185964_ok;
}



inline jule::Bool _1b912748b_Sema::_method_check_file_derives(void) {
	jule::Bool _186339_ok = jule::Bool();
	{
		auto _range_expr = (*this)._field_file->_field_structs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d21c0b59_Struct> _1b912748b_st = *_range_begin;
			_iter_begin_4713851824:;
			{
				_186339_ok=(*this)._method_check_struct_derive_clone(_1b912748b_st);
				if ((!(_186339_ok))) {
					goto _iter_end_4713851824;
				}
			}
			_iter_next_4713851824:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b912748b_st = *_range_begin; goto _iter_begin_4713851824; }
			_iter_end_4713851824:;
		}
	}
	_186339_ok = _186339_ok;
	return _186339_ok;
}



inline void _1b912748b_Sema::_method_check_package_derives(void) {
	{
		auto _range_expr = (*this)._field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b9390d86_SymbolTable> _1b912748b_f = *_range_begin;
			_iter_begin_4713855920:;
			{
				(*this)._method_set_current_file(_1b912748b_f);
				jule::Bool _187817_ok = (*this)._method_check_file_derives();
				if ((!(_187817_ok))) {
					return;
				}
			}
			_iter_next_4713855920:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b912748b_f = *_range_begin; goto _iter_begin_4713855920; }
			_iter_end_4713855920:;
		}
	}
}



inline void _1b912748b_Sema::_method_check_package_decls(void) {
	{
		auto _range_expr = this->self->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b9390d86_SymbolTable> _1b912748b_f = *_range_begin;
			_iter_begin_4713861456:;
			{
				this->self->_method_set_current_file(_1b912748b_f);
				if ((!(this->self->_method_check_passes()))) {
					return;
				}
			}
			_iter_next_4713861456:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b912748b_f = *_range_begin; goto _iter_begin_4713861456; }
			_iter_end_4713861456:;
		}
	}
	{
		auto _range_expr = this->self->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b9390d86_SymbolTable> _1b912748b_f = *_range_begin;
			_iter_begin_4713862480:;
			{
				this->self->_method_set_current_file(_1b912748b_f);
				if ((!(this->self->_method_check_type_alias_decls()))) {
					return;
				}
			}
			_iter_next_4713862480:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b912748b_f = *_range_begin; goto _iter_begin_4713862480; }
			_iter_end_4713862480:;
		}
	}
	{
		auto _range_expr = this->self->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b9390d86_SymbolTable> _1b912748b_f = *_range_begin;
			_iter_begin_4713865856:;
			{
				this->self->_method_set_current_file(_1b912748b_f);
				if ((!(this->self->_method_check_trait_decls()))) {
					return;
				}
			}
			_iter_next_4713865856:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b912748b_f = *_range_begin; goto _iter_begin_4713865856; }
			_iter_end_4713865856:;
		}
	}
	{
		auto _range_expr = this->self->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b9390d86_SymbolTable> _1b912748b_f = *_range_begin;
			_iter_begin_4713869104:;
			{
				this->self->_method_set_current_file(_1b912748b_f);
				if ((!(this->self->_method_check_global_decls()))) {
					return;
				}
			}
			_iter_next_4713869104:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b912748b_f = *_range_begin; goto _iter_begin_4713869104; }
			_iter_end_4713869104:;
		}
	}
	{
		auto _range_expr = this->self->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b9390d86_SymbolTable> _1b912748b_f = *_range_begin;
			_iter_begin_4713872192:;
			{
				this->self->_method_set_current_file(_1b912748b_f);
				if ((!(this->self->_method_check_fn_decls()))) {
					return;
				}
			}
			_iter_next_4713872192:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b912748b_f = *_range_begin; goto _iter_begin_4713872192; }
			_iter_end_4713872192:;
		}
	}
	{
		auto _range_expr = this->self->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b9390d86_SymbolTable> _1b912748b_f = *_range_begin;
			_iter_begin_4713875328:;
			{
				this->self->_method_set_current_file(_1b912748b_f);
				if ((!(this->self->_method_check_struct_decls()))) {
					return;
				}
			}
			_iter_next_4713875328:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b912748b_f = *_range_begin; goto _iter_begin_4713875328; }
			_iter_end_4713875328:;
		}
	}
	this->self->_method_check_package_derives();
}



inline void _1b912748b_Sema::_method_check_data_for_type_inference(jule::Ref<_1b9523799_Data>& _193349_d,_1d1da4277_Token& _193360_err_token) {
	{
		if (!((_193349_d->_method_is_nil()))) { goto _case_end_4713884816; }
		_case_begin_4713884816:;
		{
			(*this)._method_push_err(_193360_err_token,jule::Str("nil is cannot use with type inferred definitions", 48),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4713884560;
		_case_end_4713884816:;
		if (!((_193349_d->_method_is_void()))) { goto _case_end_4713884944; }
		_case_begin_4713884944:;
		{
			(*this)._method_push_err(_193360_err_token,jule::Str("void data is cannot use for type inferred definitions", 53),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4713884560;
		_case_end_4713884944:;
		if (!((_193349_d->_field_kind->_field_variadic))) { goto _case_end_4713885072; }
		_case_begin_4713885072:;
		{
			(*this)._method_push_err(_193360_err_token,jule::Str("invalid expression for type inference", 37),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4713884560;
		_case_end_4713885072:;
		_match_end_4713884560:;
	}
}



inline void _1b912748b_Sema::_method_check_var(jule::Ref<_1b919cb2c_Var>& _194634_v) {
	if (_194634_v->_field_cpp_linked) {
		return;
	}
	if (_194634_v->_method_is_type_inferred()) {
		_194634_v->_field_kind=jule::new_struct<_1b951b088_TypeSymbol>(new( std::nothrow ) _1b951b088_TypeSymbol(jule::Ref<_1d1e5192e_TypeDecl>(),_194634_v->_field_value->_field_data->_field_kind));
		this->self->_method_check_data_for_type_inference(_194634_v->_field_value->_field_data,_194634_v->_field_value->_field_expr->_field_token);
	} else {
		jule::Ref<_1b951b088_Arr> _195821_arr = _194634_v->_field_kind->_field_kind->_method_arr();
		if (jule::real(_195821_arr)) {
			if (_195821_arr->_field_auto) {
				jule::Ref<_1b951b088_Arr> _196125_data_arr = _194634_v->_field_value->_field_data->_field_kind->_method_arr();
				if (jule::real(_196125_data_arr)) {
					_195821_arr->_field_n=_196125_data_arr->_field_n;
				}
			}
		}
		this->self->_method_check_assign_type(_194634_v->_field_reference,_194634_v->_field_kind->_field_kind,_194634_v->_field_value->_field_data,_194634_v->_field_value->_field_expr->_field_token,false);
	}
	if (_194634_v->_field_reference && (!(_1b951b088_is_valid_for_ref(_194634_v->_field_kind->_field_kind)))) {
		this->self->_method_push_err(_194634_v->_field_token,jule::Str("references cannot points to \"@\" type", 36),jule::Slice<jule::Any>({jule::Any(_194634_v->_field_kind->_field_kind->_method_to_str())}));
	}
	this->self->_method_check_validity_for_init_expr(_194634_v->_field_mutable,_194634_v->_field_reference,_194634_v->_field_kind->_field_kind,_194634_v->_field_value->_field_data,_194634_v->_field_value->_field_expr->_field_token);
	if (_194634_v->_field_constant) {
		if ((!(_194634_v->_field_value->_field_data->_method_is_const()))) {
			this->self->_method_push_err(_194634_v->_field_value->_field_expr->_field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>({}));
		}
	} else {
		jule::drop(_194634_v->_field_value->_field_data->_field_constant);
	}
	if (jule::real(_194634_v->_field_kind->_field_kind->_method_tup())) {
		jule::drop(_194634_v->_field_kind->_field_kind);
	}
}



inline void _1b912748b_Sema::_method_check_type_var(jule::Ref<_1b919cb2c_Var>& _199639_decl,jule::Trait<_1b9a5b012_Lookup> _199655_l) {
	if (_199639_decl->_field_cpp_linked || (!(_199639_decl->_method_is_initialized()))) {
		return;
	}
	if (jule::real(_199639_decl->_field_kind)) {
		_199639_decl->_field_value->_field_data=this->self->_method_evalpd(_199639_decl->_field_value->_field_expr,_199655_l,_199639_decl->_field_kind->_field_kind,_199639_decl);
	} else {
		_199639_decl->_field_value->_field_data=this->self->_method_evalpd(_199639_decl->_field_value->_field_expr,_199655_l,jule::new_ref<_1b951b088_TypeKind>(),_199639_decl);
	}
	if ((!(jule::real(_199639_decl->_field_value->_field_data)))) {
		return;
	}
	this->self->_method_check_var(_199639_decl);
}



inline void _1b912748b_Sema::_method_check_global_types(void) {
	{
		auto _range_expr = this->self->_field_file->_field_vars;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b919cb2c_Var> _1b912748b_decl = *_range_begin;
			_iter_begin_4713932992:;
			{
				this->self->_method_check_type_var(_1b912748b_decl,this->self);
			}
			_iter_next_4713932992:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b912748b_decl = *_range_begin; goto _iter_begin_4713932992; }
			_iter_end_4713932992:;
		}
	}
}



inline void _1b912748b_Sema::_method_check_type_method(jule::Ref<_1d21c0b59_StructIns>& _202242_strct,jule::Ref<_1d21d97ee_Fn>& _202266_f) {
	if (_202266_f->_field_cpp_linked) {
		return;
	}
	if (_202266_f->_field_generics.len() > 0LL) {
		return;
	}
	if (_202266_f->_field_instances.len() == 0LL) {
		jule::Ref<_1d21d97ee_FnIns> _203321_ins = _202266_f->_method_instance();
		_203321_ins->_field_owner=_202242_strct;
		_202266_f->_method_append_instance(_203321_ins);
		this->self->_method_reload_fn_ins_types(_203321_ins);
		_203321_ins->_field_reloaded=true;
	}
	{
		auto _range_expr = _202266_f->_field_instances;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d21d97ee_FnIns> _1b912748b_ins = *_range_begin;
			_iter_begin_4713940736:;
			{
				if (_1b912748b_ins->_field_scope->_field_stmts.len() > 0LL) {
					goto _iter_next_4713940736;
				}
				this->self->_method_check_fn_ins(_1b912748b_ins);
			}
			_iter_next_4713940736:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b912748b_ins = *_range_begin; goto _iter_begin_4713940736; }
			_iter_end_4713940736:;
		}
	}
}



inline void _1b912748b_Sema::_method_check_type_struct(jule::Ref<_1d21c0b59_Struct>& _204942_strct) {
	if (_204942_strct->_field_cpp_linked) {
		return;
	}
	if (_204942_strct->_field_generics.len() > 0LL) {
		return;
	}
	if (_204942_strct->_field_instances.len() == 0LL) {
		jule::Ref<_1d21c0b59_StructIns> _206021_ins = _204942_strct->_method_instance();
		_206021_ins->_field_checked=true;
		_204942_strct->_method_append_instance(_206021_ins);
	}
	{
		auto _range_expr = _204942_strct->_field_instances;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d21c0b59_StructIns> _1b912748b_ins = *_range_begin;
			_iter_begin_4713959152:;
			{
				{
					auto _range_expr = _1b912748b_ins->_field_methods;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Ref<_1d21d97ee_Fn> _1b912748b_f = *_range_begin;
						_iter_begin_4713961056:;
						{
							this->self->_method_check_type_method(_1b912748b_ins,_1b912748b_f);
						}
						_iter_next_4713961056:;
						++_range_begin;
						if (_range_begin != _range_end) { _1b912748b_f = *_range_begin; goto _iter_begin_4713961056; }
						_iter_end_4713961056:;
					}
				}
			}
			_iter_next_4713959152:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b912748b_ins = *_range_begin; goto _iter_begin_4713959152; }
			_iter_end_4713959152:;
		}
	}
}



inline void _1b912748b_Sema::_method_check_struct_types(void) {
	{
		auto _range_expr = this->self->_field_file->_field_structs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d21c0b59_Struct> _1b912748b_s = *_range_begin;
			_iter_begin_4713964496:;
			{
				this->self->_method_check_type_struct(_1b912748b_s);
			}
			_iter_next_4713964496:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b912748b_s = *_range_begin; goto _iter_begin_4713964496; }
			_iter_end_4713964496:;
		}
	}
}



inline void _1b912748b_Sema::_method_check_rets(jule::Ref<_1d21d97ee_FnIns>& _207834_f) {
	if (_207834_f->_field_decl->_method_is_void()) {
		return;
	}
	jule::Bool _208313_ok = _1b912748b_has_ret(_207834_f->_field_scope);
	if ((!(_208313_ok))) {
		(*this)._method_push_err(_207834_f->_field_decl->_field_token,jule::Str("missing return at end of function", 33),jule::Slice<jule::Any>({}));
	}
}



inline void _1b912748b_Sema::_method_check_fn_ins_sc(jule::Ref<_1d21d97ee_FnIns>& _208939_f,jule::Ref<_1b8cd2c4b_ScopeChecker>& _208955_sc) {
	if (_208939_f->_field_decl->_field_cpp_linked) {
		return;
	}
	jule::Slice<jule::Ref<_1b919cb2c_Var>> _209417_vars = _1b912748b_build_ret_vars(_208939_f);
	_208955_sc->_field_table->_field_vars=jule::append(_208955_sc->_field_table->_field_vars,_209417_vars);
	_208955_sc->_field_table->_field_vars=jule::append(_208955_sc->_field_table->_field_vars,_1b912748b_build_param_vars(_208939_f));
	_208955_sc->_field_table->_field_type_aliases=jule::append(_208955_sc->_field_table->_field_type_aliases,_1b912748b_build_generic_type_aliases(_208939_f));
	_208955_sc->_method_check(_208939_f->_field_decl->_field_scope,_208939_f->_field_scope);
	if (_209417_vars.len() > 0LL) {
		jule::Slice<jule::Any> _210421_stmts = jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::Int>(static_cast<jule::I64>(_208939_f->_field_scope->_field_stmts.len() + _209417_vars.len())));
		{
			auto _range_expr = _209417_vars;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_1b919cb2c_Var> _1b912748b_v = *_range_begin;
				_iter_begin_4713988576:;
				{
					_210421_stmts=jule::append(_210421_stmts,jule::Slice<jule::Any>({jule::Any(_1b912748b_v)}));
				}
				_iter_next_4713988576:;
				++_range_begin;
				if (_range_begin != _range_end) { _1b912748b_v = *_range_begin; goto _iter_begin_4713988576; }
				_iter_end_4713988576:;
			}
		}
		_210421_stmts=jule::append(_210421_stmts,_208939_f->_field_scope->_field_stmts);
		_208939_f->_field_scope->_field_stmts=_210421_stmts;
	}
	(*this)._method_check_rets(_208939_f);
}



inline void _1b912748b_Sema::_method_check_fn_ins(jule::Ref<_1d21d97ee_FnIns>& _211636_f) {
	if (_211636_f->_field_decl->_field_cpp_linked) {
		return;
	}
	jule::Ref<_1b9390d86_SymbolTable> _212117_old = _211636_f->_field_decl->_field_sema->_field_file;
	__JULE_DEFER({
		_211636_f->_field_decl->_field_sema->_method_set_current_file(_212117_old);
	});
	jule::Ref<_1b9390d86_SymbolTable> _212317_file = _1b912748b_find_file(_211636_f->_field_decl->_field_sema->_field_files,_211636_f->_field_decl->_field_token._field_file);
	if (jule::real(_212317_file)) {
		_211636_f->_field_decl->_field_sema->_method_set_current_file(_212317_file);
	}
	jule::Ref<_1b8cd2c4b_ScopeChecker> _212817_sc = _1b8cd2c4b_new_scope_checker(_211636_f->_field_decl->_field_sema,_211636_f);
	(*this)._method_check_fn_ins_sc(_211636_f,_212817_sc);
	if ((_211636_f->_field_decl->_field_sema).alloc != (&((*this)))) {
		(*this)._field_errors=jule::append((*this)._field_errors,_211636_f->_field_decl->_field_sema->_field_errors);
		_211636_f->_field_decl->_field_sema->_field_errors=nullptr;
	}
}



inline void _1b912748b_Sema::_method_check_type_fn(jule::Ref<_1d21d97ee_Fn>& _213738_f) {
	if (_213738_f->_field_cpp_linked) {
		return;
	}
	if (_213738_f->_field_generics.len() > 0LL) {
		return;
	}
	{
		auto _range_expr = _213738_f->_field_instances;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d21d97ee_FnIns> _1b912748b_ins = *_range_begin;
			_iter_begin_4714011632:;
			{
				this->self->_method_check_fn_ins(_1b912748b_ins);
			}
			_iter_next_4714011632:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b912748b_ins = *_range_begin; goto _iter_begin_4714011632; }
			_iter_end_4714011632:;
		}
	}
}



inline void _1b912748b_Sema::_method_precheck_type_fn(jule::Ref<_1d21d97ee_Fn>& _215241_f) {
	if (_215241_f->_field_cpp_linked) {
		return;
	}
	if (_215241_f->_field_generics.len() > 0LL) {
		return;
	}
	if (_215241_f->_field_instances.len() == 0LL) {
		jule::Ref<_1d21d97ee_FnIns> _216321_ins = _215241_f->_method_instance();
		_215241_f->_field_instances=jule::append(_215241_f->_field_instances,jule::Slice<jule::Ref<_1d21d97ee_FnIns>>({_216321_ins}));
		this->self->_method_reload_fn_ins_types(_216321_ins);
		_216321_ins->_field_reloaded=true;
	}
}



inline jule::Bool _1b912748b_Sema::_method_precheck_fn_types(void) {
	jule::Bool _217139_ok = jule::Bool();
	{
		auto _range_expr = this->self->_field_file->_field_funcs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d21d97ee_Fn> _1b912748b_decl = *_range_begin;
			_iter_begin_4714025936:;
			{
				this->self->_method_precheck_type_fn(_1b912748b_decl);
			}
			_iter_next_4714025936:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b912748b_decl = *_range_begin; goto _iter_begin_4714025936; }
			_iter_end_4714025936:;
		}
	}
	_217139_ok = true;
	return _217139_ok;
}



inline jule::Bool _1b912748b_Sema::_method_check_fn_types(void) {
	jule::Bool _217936_ok = jule::Bool();
	{
		auto _range_expr = this->self->_field_file->_field_funcs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d21d97ee_Fn> _1b912748b_decl = *_range_begin;
			_iter_begin_4714030928:;
			{
				this->self->_method_check_type_fn(_1b912748b_decl);
			}
			_iter_next_4714030928:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b912748b_decl = *_range_begin; goto _iter_begin_4714030928; }
			_iter_end_4714030928:;
		}
	}
	_217936_ok = true;
	return _217936_ok;
}



inline void _1b912748b_Sema::_method_check_package_types(void) {
	{
		auto _range_expr = this->self->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b9390d86_SymbolTable> _1b912748b_f = *_range_begin;
			_iter_begin_4714034896:;
			{
				this->self->_method_set_current_file(_1b912748b_f);
				this->self->_method_check_global_types();
			}
			_iter_next_4714034896:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b912748b_f = *_range_begin; goto _iter_begin_4714034896; }
			_iter_end_4714034896:;
		}
	}
	{
		auto _range_expr = this->self->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b9390d86_SymbolTable> _1b912748b_f = *_range_begin;
			_iter_begin_4714035824:;
			{
				this->self->_method_set_current_file(_1b912748b_f);
				this->self->_method_precheck_fn_types();
			}
			_iter_next_4714035824:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b912748b_f = *_range_begin; goto _iter_begin_4714035824; }
			_iter_end_4714035824:;
		}
	}
	{
		auto _range_expr = this->self->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b9390d86_SymbolTable> _1b912748b_f = *_range_begin;
			_iter_begin_4714038848:;
			{
				this->self->_method_set_current_file(_1b912748b_f);
				this->self->_method_check_fn_types();
			}
			_iter_next_4714038848:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b912748b_f = *_range_begin; goto _iter_begin_4714038848; }
			_iter_end_4714038848:;
		}
	}
	{
		auto _range_expr = this->self->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b9390d86_SymbolTable> _1b912748b_f = *_range_begin;
			_iter_begin_4714041696:;
			{
				this->self->_method_set_current_file(_1b912748b_f);
				this->self->_method_check_struct_types();
			}
			_iter_next_4714041696:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b912748b_f = *_range_begin; goto _iter_begin_4714041696; }
			_iter_end_4714041696:;
		}
	}
}



inline void _1b912748b_Sema::_method_set_file_sema_fields(void) {
	{
		auto _range_expr = this->self->_field_file->_field_funcs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d21d97ee_Fn> _1b912748b_f = *_range_begin;
			_iter_begin_4714047792:;
			{
				_1b912748b_f->_field_sema=this->self;
			}
			_iter_next_4714047792:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b912748b_f = *_range_begin; goto _iter_begin_4714047792; }
			_iter_end_4714047792:;
		}
	}
	{
		auto _range_expr = this->self->_field_file->_field_structs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d21c0b59_Struct> _1b912748b_st = *_range_begin;
			_iter_begin_4714048608:;
			{
				_1b912748b_st->_field_sema=this->self;
			}
			_iter_next_4714048608:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b912748b_st = *_range_begin; goto _iter_begin_4714048608; }
			_iter_end_4714048608:;
		}
	}
}



inline void _1b912748b_Sema::_method_set_sema_fields(void) {
	{
		auto _range_expr = this->self->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b9390d86_SymbolTable> _1b912748b_file = *_range_begin;
			_iter_begin_4714052928:;
			{
				this->self->_method_set_current_file(_1b912748b_file);
				this->self->_method_set_file_sema_fields();
			}
			_iter_next_4714052928:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b912748b_file = *_range_begin; goto _iter_begin_4714052928; }
			_iter_end_4714052928:;
		}
	}
}



inline void _1b912748b_Sema::_method_check(jule::Slice<jule::Ref<_1b9390d86_SymbolTable>>& _222730_files) {
	this->self->_field_files=_222730_files;
	this->self->_method_check_imports();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_check_enums();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_set_sema_fields();
	this->self->_method_impl_impls();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_check_package_decls();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_check_package_types();
}







std::ostream &operator<<(std::ostream &_Stream, const _1b912748b_Sema &_Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_1b919cb2c_Var> _1b9176ba0_RangeChecker::_method_build_var(jule::Ref<_1d1e5192e_VarDecl>& _109129_decl) {
	jule::Ref<_1b919cb2c_Var> _109217_v = _1b8b10cbb_build_var(_109129_decl);
	return _109217_v;
}



inline void _1b9176ba0_RangeChecker::_method_set_size_key(void) {
	if ((!(jule::real((*this)._field_rang->_field_key_a))) || _1d1da4277_is_ignore_ident((*this)._field_rang->_field_key_a->_field_ident)) {
		return;
	}
	(*this)._field_kind->_field_key_a=(*this)._method_build_var((*this)._field_rang->_field_key_a);
	(*this)._field_kind->_field_key_a->_field_kind=jule::new_struct<_1b951b088_TypeSymbol>(new( std::nothrow ) _1b951b088_TypeSymbol(jule::Ref<_1d1e5192e_TypeDecl>(),jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_1b951b088_build_prim_type(jule::Str("int", 3))))));
}



inline void _1b9176ba0_RangeChecker::_method_check_range_expr_validity(jule::Ref<_1b9523799_Data>& _111549_d,jule::Ref<_1b919cb2c_Var>& _111560_key,jule::Ref<_1b951b088_TypeKind>& _111576_k) {
	jule::Bool _111617__mut = _111560_key->_field_mutable;
	if (_111617__mut && (!(_111576_k->_method_mutable()))) {
		_111617__mut=false;
	}
	(*this)._field_sc->_field_s->_method_check_validity_for_init_expr(_111617__mut,_111560_key->_field_reference,_111560_key->_field_kind->_field_kind,_111549_d,(*this)._field_rang->_field_in_token);
}



inline void _1b9176ba0_RangeChecker::_method_check_slice(void) {
	(*this)._method_set_size_key();
	if ((!(jule::real((*this)._field_rang->_field_key_b))) || _1d1da4277_is_ignore_ident((*this)._field_rang->_field_key_b->_field_ident)) {
		return;
	}
	jule::Ref<_1b951b088_Slc> _113417_slc = (*this)._field_d->_field_kind->_method_slc();
	(*this)._field_kind->_field_key_b=(*this)._method_build_var((*this)._field_rang->_field_key_b);
	(*this)._field_kind->_field_key_b->_field_kind=jule::new_struct<_1b951b088_TypeSymbol>(new( std::nothrow ) _1b951b088_TypeSymbol(jule::Ref<_1d1e5192e_TypeDecl>(),_113417_slc->_field_elem));
	(*this)._method_check_range_expr_validity((*this)._field_d,(*this)._field_kind->_field_key_b,_113417_slc->_field_elem);
}



inline void _1b9176ba0_RangeChecker::_method_check_array(void) {
	(*this)._method_set_size_key();
	if ((!(jule::real((*this)._field_rang->_field_key_b))) || _1d1da4277_is_ignore_ident((*this)._field_rang->_field_key_b->_field_ident)) {
		return;
	}
	jule::Ref<_1b951b088_Arr> _114717_arr = (*this)._field_d->_field_kind->_method_arr();
	(*this)._field_kind->_field_key_b=(*this)._method_build_var((*this)._field_rang->_field_key_b);
	(*this)._field_kind->_field_key_b->_field_kind=jule::new_struct<_1b951b088_TypeSymbol>(new( std::nothrow ) _1b951b088_TypeSymbol(jule::Ref<_1d1e5192e_TypeDecl>(),_114717_arr->_field_elem));
	(*this)._method_check_range_expr_validity((*this)._field_d,(*this)._field_kind->_field_key_b,_114717_arr->_field_elem);
}



inline void _1b9176ba0_RangeChecker::_method_check_map_key_a(void) {
	if ((!(jule::real((*this)._field_rang->_field_key_a))) || _1d1da4277_is_ignore_ident((*this)._field_rang->_field_key_a->_field_ident)) {
		return;
	}
	jule::Ref<_1b951b088_Map> _115917_m = (*this)._field_d->_field_kind->_method_map();
	(*this)._field_kind->_field_key_a=(*this)._method_build_var((*this)._field_rang->_field_key_a);
	(*this)._field_kind->_field_key_a->_field_kind=jule::new_struct<_1b951b088_TypeSymbol>(new( std::nothrow ) _1b951b088_TypeSymbol(jule::Ref<_1d1e5192e_TypeDecl>(),_115917_m->_field_key));
	jule::Ref<_1b9523799_Data> _116317_d = jule::new_ref<_1b9523799_Data>((*this)._field_d.get());
	_116317_d->_field_kind=_115917_m->_field_key;
	(*this)._method_check_range_expr_validity(_116317_d,(*this)._field_kind->_field_key_a,_115917_m->_field_key);
}



inline void _1b9176ba0_RangeChecker::_method_check_map_key_b(void) {
	if ((!(jule::real((*this)._field_rang->_field_key_b))) || _1d1da4277_is_ignore_ident((*this)._field_rang->_field_key_b->_field_ident)) {
		return;
	}
	jule::Ref<_1b951b088_Map> _117417_m = (*this)._field_d->_field_kind->_method_map();
	(*this)._field_kind->_field_key_b=(*this)._method_build_var((*this)._field_rang->_field_key_b);
	(*this)._field_kind->_field_key_b->_field_kind=jule::new_struct<_1b951b088_TypeSymbol>(new( std::nothrow ) _1b951b088_TypeSymbol(jule::Ref<_1d1e5192e_TypeDecl>(),_117417_m->_field_val));
	jule::Ref<_1b9523799_Data> _117817_d = jule::new_ref<_1b9523799_Data>((*this)._field_d.get());
	_117817_d->_field_kind=_117417_m->_field_val;
	(*this)._method_check_range_expr_validity(_117817_d,(*this)._field_kind->_field_key_b,_117417_m->_field_val);
}



inline void _1b9176ba0_RangeChecker::_method_check_map(void) {
	(*this)._method_check_map_key_a();
	(*this)._method_check_map_key_b();
}



inline void _1b9176ba0_RangeChecker::_method_check_str(void) {
	(*this)._method_set_size_key();
	if ((!(jule::real((*this)._field_rang->_field_key_b))) || _1d1da4277_is_ignore_ident((*this)._field_rang->_field_key_b->_field_ident)) {
		return;
	}
	(*this)._field_kind->_field_key_b=(*this)._method_build_var((*this)._field_rang->_field_key_b);
	(*this)._field_kind->_field_key_b->_field_kind=jule::new_struct<_1b951b088_TypeSymbol>(new( std::nothrow ) _1b951b088_TypeSymbol(jule::Ref<_1d1e5192e_TypeDecl>(),jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_1b951b088_build_prim_type(jule::Str("u8", 2))))));
}



inline jule::Bool _1b9176ba0_RangeChecker::_method_check(void) {
	if (jule::real((*this)._field_d->_field_kind->_method_ref())) {
		(*this)._field_d->_field_model=jule::Any(jule::new_struct<_1b8dbae99_ExplicitDerefExprModel>(new( std::nothrow ) _1b8dbae99_ExplicitDerefExprModel((*this)._field_d->_field_model)));
		(*this)._field_d->_field_kind=(*this)._field_d->_field_kind->_method_ref()->_field_elem;
	}
	{
		if (!((jule::real((*this)._field_d->_field_kind->_method_slc())))) { goto _case_end_4714762480; }
		_case_begin_4714762480:;
		{
			(*this)._method_check_slice();
			return true;
		}
		goto _match_end_4714761984;
		_case_end_4714762480:;
		if (!((jule::real((*this)._field_d->_field_kind->_method_arr())))) { goto _case_end_4714762608; }
		_case_begin_4714762608:;
		{
			(*this)._method_check_array();
			return true;
		}
		goto _match_end_4714761984;
		_case_end_4714762608:;
		if (!((jule::real((*this)._field_d->_field_kind->_method_map())))) { goto _case_end_4714762736; }
		_case_begin_4714762736:;
		{
			(*this)._method_check_map();
			return true;
		}
		goto _match_end_4714761984;
		_case_end_4714762736:;
		_match_end_4714761984:;
	}
	jule::Ref<_1b951b088_Prim> _122513_prim = (*this)._field_d->_field_kind->_method_prim();
	if (jule::real(_122513_prim) && _122513_prim->_method_is_str()) {
		(*this)._method_check_str();
		return true;
	}
	(*this)._field_sc->_field_s->_method_push_err((*this)._field_rang->_field_in_token,jule::Str("range iterations must be have enumerable expression", 51),jule::Slice<jule::Any>({}));
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b9176ba0_RangeChecker &_Src) {
	_Stream << "RangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_1b8e0c01d_ImportInfo> _1b9390d86_SymbolTable::_method_find_package(jule::Str _2535_ident) {
	{
		auto _range_expr = (*this)._field_imports;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b8e0c01d_ImportInfo> _1b9390d86_pkg = *_range_begin;
			_iter_begin_4714851040:;
			{
				if (_1b9390d86_pkg->_field_ident == _2535_ident) {
					return _1b9390d86_pkg;
				}
			}
			_iter_next_4714851040:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b9390d86_pkg = *_range_begin; goto _iter_begin_4714851040; }
			_iter_end_4714851040:;
		}
	}
	return jule::new_ref<_1b8e0c01d_ImportInfo>();
}



inline jule::Ref<_1b8e0c01d_ImportInfo> _1b9390d86_SymbolTable::_method_select_package(jule::Fn<jule::Bool(jule::Ref<_1b8e0c01d_ImportInfo>)> _3737_selector) {
	if (_3737_selector == nullptr) {
		return jule::new_ref<_1b8e0c01d_ImportInfo>();
	}
	{
		auto _range_expr = (*this)._field_imports;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b8e0c01d_ImportInfo> _1b9390d86_pkg = *_range_begin;
			_iter_begin_4714856096:;
			{
				if (_3737_selector(_1b9390d86_pkg)) {
					return _1b9390d86_pkg;
				}
			}
			_iter_next_4714856096:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b9390d86_pkg = *_range_begin; goto _iter_begin_4714856096; }
			_iter_end_4714856096:;
		}
	}
	return jule::new_ref<_1b8e0c01d_ImportInfo>();
}



inline jule::Ref<_1b919cb2c_Var> _1b9390d86_SymbolTable::_method_find_var(jule::Str _5231_ident,jule::Bool _5243_cpp_linked) {
	return (*this)._method___find_var(_5231_ident,_5243_cpp_linked,false);
}



inline jule::Ref<_1b951b088_TypeAlias> _1b9390d86_SymbolTable::_method_find_type_alias(jule::Str _5838_ident,jule::Bool _5850_cpp_linked) {
	return (*this)._method___find_type_alias(_5838_ident,_5850_cpp_linked,false);
}



inline jule::Ref<_1d21c0b59_Struct> _1b9390d86_SymbolTable::_method_find_struct(jule::Str _6434_ident,jule::Bool _6446_cpp_linked) {
	{
		auto _range_expr = (*this)._field_structs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d21c0b59_Struct> _1b9390d86_s = *_range_begin;
			_iter_begin_4714866176:;
			{
				if ((_1b9390d86_s->_field_ident == _6434_ident) && (_1b9390d86_s->_field_cpp_linked == _6446_cpp_linked)) {
					return _1b9390d86_s;
				}
			}
			_iter_next_4714866176:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b9390d86_s = *_range_begin; goto _iter_begin_4714866176; }
			_iter_end_4714866176:;
		}
	}
	return jule::new_ref<_1d21c0b59_Struct>();
}



inline jule::Ref<_1d21d97ee_Fn> _1b9390d86_SymbolTable::_method_find_fn(jule::Str _7530_ident,jule::Bool _7542_cpp_linked) {
	{
		auto _range_expr = (*this)._field_funcs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d21d97ee_Fn> _1b9390d86_f = *_range_begin;
			_iter_begin_4714871376:;
			{
				if ((_1b9390d86_f->_field_ident == _7530_ident) && (_1b9390d86_f->_field_cpp_linked == _7542_cpp_linked)) {
					return _1b9390d86_f;
				}
			}
			_iter_next_4714871376:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b9390d86_f = *_range_begin; goto _iter_begin_4714871376; }
			_iter_end_4714871376:;
		}
	}
	return jule::new_ref<_1d21d97ee_Fn>();
}



inline jule::Ref<_1b8cd2894_Trait> _1b9390d86_SymbolTable::_method_find_trait(jule::Str _8633_ident) {
	{
		auto _range_expr = (*this)._field_traits;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b8cd2894_Trait> _1b9390d86_t = *_range_begin;
			_iter_begin_4714875744:;
			{
				if (_1b9390d86_t->_field_ident == _8633_ident) {
					return _1b9390d86_t;
				}
			}
			_iter_next_4714875744:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b9390d86_t = *_range_begin; goto _iter_begin_4714875744; }
			_iter_end_4714875744:;
		}
	}
	return jule::new_ref<_1b8cd2894_Trait>();
}



inline jule::Ref<_1b8dae520_Enum> _1b9390d86_SymbolTable::_method_find_enum(jule::Str _9732_ident) {
	{
		auto _range_expr = (*this)._field_enums;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b8dae520_Enum> _1b9390d86_e = *_range_begin;
			_iter_begin_4714879728:;
			{
				if (_1b9390d86_e->_field_ident == _9732_ident) {
					return _1b9390d86_e;
				}
			}
			_iter_next_4714879728:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b9390d86_e = *_range_begin; goto _iter_begin_4714879728; }
			_iter_end_4714879728:;
		}
	}
	return jule::new_ref<_1b8dae520_Enum>();
}



inline jule::Ref<_1b919cb2c_Var> _1b9390d86_SymbolTable::_method___find_var(jule::Str _10829_ident,jule::Bool _10841_cpp_linked,jule::Bool _10859_reverse) {
	if (_10859_reverse) {
		jule::I64 _11021_i = (*this)._field_vars.len() - 1LL;
		_iter_begin_4714885776:;
		if (!(_11021_i >= 0LL)) { goto _iter_end_4714885776; }
		{
			jule::Ref<_1b919cb2c_Var> _11225_v = (*this)._field_vars[static_cast<jule::Int>(_11021_i)];
			if ((_11225_v->_field_ident == _10829_ident) && (_11225_v->_field_cpp_linked == _10841_cpp_linked)) {
				return _11225_v;
			}
		}
		_iter_next_4714885776:;
		(_11021_i)--;
		goto _iter_begin_4714885776;
		_iter_end_4714885776:;
	} else {
		{
			auto _range_expr = (*this)._field_vars;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_1b919cb2c_Var> _1b9390d86_v = *_range_begin;
				_iter_begin_4714884640:;
				{
					if ((_1b9390d86_v->_field_ident == _10829_ident) && (_1b9390d86_v->_field_cpp_linked == _10841_cpp_linked)) {
						return _1b9390d86_v;
					}
				}
				_iter_next_4714884640:;
				++_range_begin;
				if (_range_begin != _range_end) { _1b9390d86_v = *_range_begin; goto _iter_begin_4714884640; }
				_iter_end_4714884640:;
			}
		}
	}
	return jule::new_ref<_1b919cb2c_Var>();
}



inline jule::Ref<_1b951b088_TypeAlias> _1b9390d86_SymbolTable::_method___find_type_alias(jule::Str _12736_ident,jule::Bool _12748_cpp_linked,jule::Bool _12766_reverse) {
	if (_12766_reverse) {
		jule::I64 _12921_i = (*this)._field_type_aliases.len() - 1LL;
		_iter_begin_4714897712:;
		if (!(_12921_i >= 0LL)) { goto _iter_end_4714897712; }
		{
			jule::Ref<_1b951b088_TypeAlias> _13125_ta = (*this)._field_type_aliases[static_cast<jule::Int>(_12921_i)];
			if ((_13125_ta->_field_ident == _12736_ident) && (_13125_ta->_field_cpp_linked == _12748_cpp_linked)) {
				return _13125_ta;
			}
		}
		_iter_next_4714897712:;
		(_12921_i)--;
		goto _iter_begin_4714897712;
		_iter_end_4714897712:;
	} else {
		{
			auto _range_expr = (*this)._field_type_aliases;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_1b951b088_TypeAlias> _1b9390d86_ta = *_range_begin;
				_iter_begin_4714896576:;
				{
					if ((_1b9390d86_ta->_field_ident == _12736_ident) && (_1b9390d86_ta->_field_cpp_linked == _12748_cpp_linked)) {
						return _1b9390d86_ta;
					}
				}
				_iter_next_4714896576:;
				++_range_begin;
				if (_range_begin != _range_end) { _1b9390d86_ta = *_range_begin; goto _iter_begin_4714896576; }
				_iter_end_4714896576:;
			}
		}
	}
	return jule::new_ref<_1b951b088_TypeAlias>();
}



inline jule::Any _1b9390d86_SymbolTable::_method_def_by_ident(jule::Str _14831_ident,jule::Bool _14843_cpp_linked) {
	{
		auto _range_expr = (*this)._field_vars;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b919cb2c_Var> _1b9390d86_v = *_range_begin;
			_iter_begin_4714908192:;
			{
				if ((_1b9390d86_v->_field_ident == _14831_ident) && (_1b9390d86_v->_field_cpp_linked == _14843_cpp_linked)) {
					return jule::Any(_1b9390d86_v);
				}
			}
			_iter_next_4714908192:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b9390d86_v = *_range_begin; goto _iter_begin_4714908192; }
			_iter_end_4714908192:;
		}
	}
	{
		auto _range_expr = (*this)._field_type_aliases;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b951b088_TypeAlias> _1b9390d86_ta = *_range_begin;
			_iter_begin_4714909728:;
			{
				if ((_1b9390d86_ta->_field_ident == _14831_ident) && (_1b9390d86_ta->_field_cpp_linked == _14843_cpp_linked)) {
					return jule::Any(_1b9390d86_ta);
				}
			}
			_iter_next_4714909728:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b9390d86_ta = *_range_begin; goto _iter_begin_4714909728; }
			_iter_end_4714909728:;
		}
	}
	{
		auto _range_expr = (*this)._field_structs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d21c0b59_Struct> _1b9390d86_s = *_range_begin;
			_iter_begin_4714909200:;
			{
				if ((_1b9390d86_s->_field_ident == _14831_ident) && (_1b9390d86_s->_field_cpp_linked == _14843_cpp_linked)) {
					return jule::Any(_1b9390d86_s);
				}
			}
			_iter_next_4714909200:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b9390d86_s = *_range_begin; goto _iter_begin_4714909200; }
			_iter_end_4714909200:;
		}
	}
	{
		auto _range_expr = (*this)._field_funcs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d21d97ee_Fn> _1b9390d86_f = *_range_begin;
			_iter_begin_4714917728:;
			{
				if ((_1b9390d86_f->_field_ident == _14831_ident) && (_1b9390d86_f->_field_cpp_linked == _14843_cpp_linked)) {
					return jule::Any(_1b9390d86_f);
				}
			}
			_iter_next_4714917728:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b9390d86_f = *_range_begin; goto _iter_begin_4714917728; }
			_iter_end_4714917728:;
		}
	}
	if (_14843_cpp_linked) {
		return jule::Any(nullptr);
	}
	{
		auto _range_expr = (*this)._field_traits;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b8cd2894_Trait> _1b9390d86_t = *_range_begin;
			_iter_begin_4714920800:;
			{
				if (_1b9390d86_t->_field_ident == _14831_ident) {
					return jule::Any(_1b9390d86_t);
				}
			}
			_iter_next_4714920800:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b9390d86_t = *_range_begin; goto _iter_begin_4714920800; }
			_iter_end_4714920800:;
		}
	}
	{
		auto _range_expr = (*this)._field_enums;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b8dae520_Enum> _1b9390d86_e = *_range_begin;
			_iter_begin_4714922032:;
			{
				if (_1b9390d86_e->_field_ident == _14831_ident) {
					return jule::Any(_1b9390d86_e);
				}
			}
			_iter_next_4714922032:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b9390d86_e = *_range_begin; goto _iter_begin_4714922032; }
			_iter_end_4714922032:;
		}
	}
	return jule::Any(nullptr);
}



inline jule::Bool _1b9390d86_SymbolTable::_method_is_duplicated_ident(jule::Uintptr _19534_itself,jule::Str _19551_ident,jule::Bool _19563_cpp_linked) {
	{
		auto _range_expr = (*this)._field_vars;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b919cb2c_Var> _1b9390d86_v = *_range_begin;
			_iter_begin_4714928608:;
			{
				if (((((jule::Uintptr)((_1b9390d86_v).alloc)) != _19534_itself) && (_1b9390d86_v->_field_ident == _19551_ident)) && (_1b9390d86_v->_field_cpp_linked == _19563_cpp_linked)) {
					return true;
				}
			}
			_iter_next_4714928608:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b9390d86_v = *_range_begin; goto _iter_begin_4714928608; }
			_iter_end_4714928608:;
		}
	}
	{
		auto _range_expr = (*this)._field_type_aliases;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b951b088_TypeAlias> _1b9390d86_ta = *_range_begin;
			_iter_begin_4714931232:;
			{
				if (((((jule::Uintptr)((_1b9390d86_ta).alloc)) != _19534_itself) && (_1b9390d86_ta->_field_ident == _19551_ident)) && (_1b9390d86_ta->_field_cpp_linked == _19563_cpp_linked)) {
					return true;
				}
			}
			_iter_next_4714931232:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b9390d86_ta = *_range_begin; goto _iter_begin_4714931232; }
			_iter_end_4714931232:;
		}
	}
	{
		auto _range_expr = (*this)._field_structs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d21c0b59_Struct> _1b9390d86_s = *_range_begin;
			_iter_begin_4714934848:;
			{
				if (((((jule::Uintptr)((_1b9390d86_s).alloc)) != _19534_itself) && (_1b9390d86_s->_field_ident == _19551_ident)) && (_1b9390d86_s->_field_cpp_linked == _19563_cpp_linked)) {
					return true;
				}
			}
			_iter_next_4714934848:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b9390d86_s = *_range_begin; goto _iter_begin_4714934848; }
			_iter_end_4714934848:;
		}
	}
	{
		auto _range_expr = (*this)._field_funcs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d21d97ee_Fn> _1b9390d86_f = *_range_begin;
			_iter_begin_4714938528:;
			{
				if (((((jule::Uintptr)((_1b9390d86_f).alloc)) != _19534_itself) && (_1b9390d86_f->_field_ident == _19551_ident)) && (_1b9390d86_f->_field_cpp_linked == _19563_cpp_linked)) {
					return true;
				}
			}
			_iter_next_4714938528:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b9390d86_f = *_range_begin; goto _iter_begin_4714938528; }
			_iter_end_4714938528:;
		}
	}
	if (_19563_cpp_linked) {
		return false;
	}
	{
		auto _range_expr = (*this)._field_traits;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b8cd2894_Trait> _1b9390d86_t = *_range_begin;
			_iter_begin_4714940752:;
			{
				if ((((jule::Uintptr)((_1b9390d86_t).alloc)) != _19534_itself) && (_1b9390d86_t->_field_ident == _19551_ident)) {
					return true;
				}
			}
			_iter_next_4714940752:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b9390d86_t = *_range_begin; goto _iter_begin_4714940752; }
			_iter_end_4714940752:;
		}
	}
	{
		auto _range_expr = (*this)._field_enums;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b8dae520_Enum> _1b9390d86_e = *_range_begin;
			_iter_begin_4714944448:;
			{
				if ((((jule::Uintptr)((_1b9390d86_e).alloc)) != _19534_itself) && (_1b9390d86_e->_field_ident == _19551_ident)) {
					return true;
				}
			}
			_iter_next_4714944448:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b9390d86_e = *_range_begin; goto _iter_begin_4714944448; }
			_iter_end_4714944448:;
		}
	}
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b9390d86_SymbolTable &_Src) {
	_Stream << "SymbolTable{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "passes:" << _Src._field_passes << ", ";
	_Stream << "imports:" << _Src._field_imports << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "type_aliases:" << _Src._field_type_aliases << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "funcs:" << _Src._field_funcs << ", ";
	_Stream << "traits:" << _Src._field_traits << ", ";
	_Stream << "enums:" << _Src._field_enums << ", ";
	_Stream << "impls:" << _Src._field_impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b9523799_Data::_method_is_nil(void) {
	return (*this)._field_kind->_method_is_nil();
}



inline jule::Bool _1b9523799_Data::_method_is_void(void) {
	return (*this)._field_kind->_method_void();
}



inline jule::Bool _1b9523799_Data::_method_is_const(void) {
	return jule::real((*this)._field_constant);
}







std::ostream &operator<<(std::ostream &_Stream, const _1b9523799_Data &_Src) {
	_Stream << "Data{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "cast_kind:" << _Src._field_cast_kind << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "lvalue:" << _Src._field_lvalue << ", ";
	_Stream << "variadiced:" << _Src._field_variadiced << ", ";
	_Stream << "is_rune:" << _Src._field_is_rune << ", ";
	_Stream << "model:" << _Src._field_model << ", ";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "constant:" << _Src._field_constant;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b9523799_Value &_Src) {
	_Stream << "Value{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline void _1b9523799_Eval::_method_push_err(_1d1da4277_Token _24827_token,jule::Str _24841_fmt,jule::Slice<jule::Any> _24854_args) {
	(*this)._field_s->_method_push_err(_24827_token,_24841_fmt,_24854_args);
}



inline void _1b9523799_Eval::_method_push_suggestion(jule::Str _25334_fmt,jule::Slice<jule::Any> _25347_args) {
	(*this)._field_s->_method_push_suggestion(_25334_fmt,_25347_args);
}



inline jule::Bool _1b9523799_Eval::_method_is_unsafe(void) {
	return (*this)._field_unsafety;
}



inline jule::Bool _1b9523799_Eval::_method_is_global(void) {
	{
		auto _match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_1b912748b_Sema>>())) { goto _case_end_4714965712; }
		_case_begin_4714965712:;
		{
			return true;
		}
		goto _match_end_4714964768;
		_case_end_4714965712:;
		_case_begin_4714965408:;
		{
			return false;
		}
		goto _match_end_4714964768;
		_case_end_4714965408:;
		_match_end_4714964768:;
	}
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_lit_nil(void) {
	jule::Ref<_1b9d678e5_Const> _27217_constant = _1b9d678e5_Const::_static_method_new_nil();
	return jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),nullptr)),jule::Ref<_1b951b088_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(_27217_constant),false,_27217_constant));
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_lit_str(jule::Ref<_1d1e5192e_LitExpr> _28322_lt) {
	jule::Str _28417_s = _28322_lt->_field_value.slice(1LL,static_cast<jule::Int>(_28322_lt->_field_value.len() - 1LL));
	if (_1d1da4277_is_raw_str(_28322_lt->_field_value)) {
		_28417_s=_1ba0423e9_to_raw_str(static_cast<jule::Slice<jule::U8>>(_28417_s));
	} else {
		_28417_s=_1ba0423e9_to_str(static_cast<jule::Slice<jule::U8>>(_28417_s));
	}
	jule::Ref<_1b9d678e5_Const> _29017_constant = _1b9d678e5_Const::_static_method_new_str(_28417_s);
	return jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_1b951b088_build_prim_type(jule::Str("str", 3)))),jule::Ref<_1b951b088_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(_29017_constant),false,_29017_constant));
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_lit_bool(jule::Ref<_1d1e5192e_LitExpr> _30423_lit) {
	jule::Ref<_1b9d678e5_Const> _30517_constant = _1b9d678e5_Const::_static_method_new_bool(_30423_lit->_field_value == jule::Str("true", 4));
	return jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_1b951b088_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1b951b088_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(_30517_constant),false,_30517_constant));
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_lit_rune(jule::Ref<_1d1e5192e_LitExpr> _31823_l) {
	
	
	jule::Str _32213_lt = _31823_l->_field_value.slice(1LL,static_cast<jule::Int>(_31823_l->_field_value.len() - 1LL));
	jule::I32 _32313_r = _1ba0423e9_to_rune(static_cast<jule::Slice<jule::U8>>(_32213_lt));
	jule::Ref<_1b9523799_Data> _32417_data = jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::Ref<_1b951b088_TypeKind>(),jule::Ref<_1b951b088_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),false,_1b9d678e5_Const::_static_method_new_i64(static_cast<jule::I64>(_32313_r))));
	jule::Bool _33117_is_byte;
	std::tie(std::ignore,_33117_is_byte) = _1ba0423e9_is_byte_lit(_31823_l->_field_value);
	if (_33117_is_byte) {
		_32417_data->_field_kind=jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_1b951b088_build_prim_type(jule::Str("u8", 2))));
	} else {
		_32417_data->_field_kind=jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_1b951b088_build_prim_type(jule::Str("i32", 3))));
	}
	_32417_data->_field_model=jule::Any(jule::new_struct<_1b8dbae99_RuneExprModel>(new( std::nothrow ) _1b8dbae99_RuneExprModel(_32313_r)));
	_32417_data->_field_is_rune=true;
	return _32417_data;
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_lit_float(jule::Ref<_1d1e5192e_LitExpr> _34724_l) {
	
	jule::F64 _35014_f;
	std::tie(_35014_f,std::ignore) = _1d05eae54_parse_float(_34724_l->_field_value,64LL);
	jule::Ref<_1b9d678e5_Const> _35117_constant = _1b9d678e5_Const::_static_method_new_f64(_35014_f);
	return jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_1b951b088_build_prim_type(jule::Str("f64", 3)))),jule::Ref<_1b951b088_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(_35117_constant),false,_35117_constant));
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_lit_int(jule::Ref<_1d1e5192e_LitExpr> _36526_l) {
	
	jule::Str _36817_lit = _36526_l->_field_value;
	jule::Int _36917_base = 0LL;
	{
		if (!((_36817_lit.has_prefix(jule::Str("0x", 2))))) { goto _case_end_4715018608; }
		_case_begin_4715018608:;
		{
			_36817_lit=_36817_lit.slice(2LL);
			_36917_base=16LL;
		}
		goto _match_end_4715016960;
		_case_end_4715018608:;
		if (!((_36817_lit.has_prefix(jule::Str("0b", 2))))) { goto _case_end_4715018256; }
		_case_begin_4715018256:;
		{
			_36817_lit=_36817_lit.slice(2LL);
			_36917_base=2LL;
		}
		goto _match_end_4715016960;
		_case_end_4715018256:;
		if (!((_36817_lit.has_prefix(jule::Str("0o", 2))))) { goto _case_end_4715018368; }
		_case_begin_4715018368:;
		{
			_36817_lit=_36817_lit.slice(2LL);
			_36917_base=8LL;
		}
		goto _match_end_4715016960;
		_case_end_4715018368:;
		if (!(((_36817_lit[0LL] == '0') && (_36817_lit.len() > 1LL)))) { goto _case_end_4715017376; }
		_case_begin_4715017376:;
		{
			_36817_lit=_36817_lit.slice(1LL);
			_36917_base=8LL;
		}
		goto _match_end_4715016960;
		_case_end_4715017376:;
		_case_begin_4715017072:;
		{
			_36917_base=10LL;
		}
		goto _match_end_4715016960;
		_case_end_4715017072:;
		_match_end_4715016960:;
	}
	jule::Ref<_1b9523799_Data> _39217_d = jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::Ref<_1b951b088_TypeKind>(),jule::Ref<_1b951b088_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),false,jule::Ref<_1b9d678e5_Const>()));
	jule::Any _39817_value = jule::Any(nullptr);
	jule::I64 _39914_sig;
	jule::Int _39919_err;
	std::tie(_39914_sig,_39919_err) = _1d0632de2_parse_int(_36817_lit,_36917_base,64LL);
	if (_39919_err == 0LLU) {
		_39817_value=jule::Any(_39914_sig);
		_39217_d->_field_constant=_1b9d678e5_Const::_static_method_new_i64(_39914_sig);
	} else {
		jule::U64 _40418_unsig;
		jule::Int _40425_err;
		std::tie(_40418_unsig,_40425_err) = _1d0632de2_parse_uint(_36817_lit,_36917_base,64LL);
		if (_40425_err != 0LLU) {
			(*this)._method_push_err(_36526_l->_field_token,jule::Str("arithmetic value overflow", 25),jule::Slice<jule::Any>({}));
			(*this)._method_push_suggestion(jule::Str("floating-point literals may solve your problem", 46),jule::Slice<jule::Any>({}));
		}
		_39217_d->_field_constant=_1b9d678e5_Const::_static_method_new_u64(_40418_unsig);
		_39817_value=jule::Any(_40418_unsig);
	}
	_39217_d->_field_kind=jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_1b951b088_build_prim_type(_1b9523799_kind_by_bitsize(_39817_value))));
	_1b9523799_normalize_bitsize(_39217_d);
	_39217_d->_field_model=jule::Any(_39217_d->_field_constant);
	return _39217_d;
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_lit_num(jule::Ref<_1d1e5192e_LitExpr> _42326_l) {
	{
		if (!((_1d1da4277_is_float(_42326_l->_field_value)))) { goto _case_end_4715047120; }
		_case_begin_4715047120:;
		{
			return (*this)._method_lit_float(_42326_l);
		}
		goto _match_end_4715045488;
		_case_end_4715047120:;
		_case_begin_4715045664:;
		{
			return (*this)._method_lit_int(_42326_l);
		}
		goto _match_end_4715045488;
		_case_end_4715045664:;
		_match_end_4715045488:;
	}
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_eval_lit(jule::Ref<_1d1e5192e_LitExpr> _43027_lit) {
	{
		if (!((_43027_lit->_method_is_nil()))) { goto _case_end_4715053920; }
		_case_begin_4715053920:;
		{
			return (*this)._method_lit_nil();
		}
		goto _match_end_4715051296;
		_case_end_4715053920:;
		if (!((_1d1da4277_is_str(_43027_lit->_field_value)))) { goto _case_end_4715052928; }
		_case_begin_4715052928:;
		{
			return (*this)._method_lit_str(_43027_lit);
		}
		goto _match_end_4715051296;
		_case_end_4715052928:;
		if (!((_1d1da4277_is_bool(_43027_lit->_field_value)))) { goto _case_end_4715053136; }
		_case_begin_4715053136:;
		{
			return (*this)._method_lit_bool(_43027_lit);
		}
		goto _match_end_4715051296;
		_case_end_4715053136:;
		if (!((_1d1da4277_is_rune(_43027_lit->_field_value)))) { goto _case_end_4715053584; }
		_case_begin_4715053584:;
		{
			return (*this)._method_lit_rune(_43027_lit);
		}
		goto _match_end_4715051296;
		_case_end_4715053584:;
		if (!((_1d1da4277_is_num(_43027_lit->_field_value)))) { goto _case_end_4715053696; }
		_case_begin_4715053696:;
		{
			return (*this)._method_lit_num(_43027_lit);
		}
		goto _match_end_4715051296;
		_case_end_4715053696:;
		_case_begin_4715051472:;
		{
			return jule::new_ref<_1b9523799_Data>();
		}
		goto _match_end_4715051296;
		_case_end_4715051472:;
		_match_end_4715051296:;
	}
}



inline jule::Any _1b9523799_Eval::_method_find_builtins(jule::Str _44132_ident) {
	{
		auto _match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_1b8e0c01d_ImportInfo>>())) { goto _case_end_4715062656; }
		_case_begin_4715062656:;
		{
			jule::Any _44421_def = _1b9523799_find_builtins_import(_44132_ident,(*this)._field_lookup.operator jule::Ref<_1b8e0c01d_ImportInfo>());
			if (_44421_def != nullptr) {
				return _44421_def;
			}
		}
		goto _match_end_4715061984;
		_case_end_4715062656:;
		if (!(_match_expr.type_is<jule::Ref<_1b912748b_Sema>>())) { goto _case_end_4715062784; }
		_case_begin_4715062784:;
		{
			jule::Any _45021_def = _1b9523799_find_builtins_sema(_44132_ident,(*this)._field_lookup.operator jule::Ref<_1b912748b_Sema>());
			if (_45021_def != nullptr) {
				return _45021_def;
			}
		}
		goto _match_end_4715061984;
		_case_end_4715062784:;
		if (!(_match_expr.type_is<jule::Ref<_1b8cd2c4b_ScopeChecker>>())) { goto _case_end_4715062912; }
		_case_begin_4715062912:;
		{
			jule::Any _45621_def = _1b9523799_find_builtins_sema(_44132_ident,(*this)._field_lookup.operator jule::Ref<_1b8cd2c4b_ScopeChecker>()->_field_s);
			if (_45621_def != nullptr) {
				return _45621_def;
			}
		}
		goto _match_end_4715061984;
		_case_end_4715062912:;
		_match_end_4715061984:;
	}
	return _1b9c0b525_find_builtin_def(_44132_ident);
}



inline jule::Any _1b9523799_Eval::_method_get_def(jule::Str _46526_ident,jule::Bool _46538_cpp_linked) {
	if ((!(_46538_cpp_linked))) {
		jule::Ref<_1b8dae520_Enum> _46721_enm = (*this)._field_lookup.get()._method_find_enum(_46526_ident);
		if (jule::real(_46721_enm)) {
			return jule::Any(_46721_enm);
		}
	}
	jule::Ref<_1b919cb2c_Var> _47317_v = (*this)._field_lookup.get()._method_find_var(_46526_ident,_46538_cpp_linked);
	if (jule::real(_47317_v)) {
		return jule::Any(_47317_v);
	}
	jule::Ref<_1d21d97ee_Fn> _47817_f = (*this)._field_lookup.get()._method_find_fn(_46526_ident,_46538_cpp_linked);
	if (jule::real(_47817_f)) {
		return jule::Any(_47817_f);
	}
	jule::Ref<_1d21c0b59_Struct> _48317_s = (*this)._field_lookup.get()._method_find_struct(_46526_ident,_46538_cpp_linked);
	if (jule::real(_48317_s)) {
		return jule::Any(_48317_s);
	}
	jule::Ref<_1b951b088_TypeAlias> _48817_ta = (*this)._field_lookup.get()._method_find_type_alias(_46526_ident,_46538_cpp_linked);
	if (jule::real(_48817_ta)) {
		return jule::Any(_48817_ta);
	}
	return (*this)._method_find_builtins(_46526_ident);
}



inline void _1b9523799_Eval::_method_push_reference(jule::Ref<_1b8b10cbb_ReferenceStack> _49637_references) {
	{
		auto _match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_1b8cd2c4b_ScopeChecker>>())) { goto _case_end_4715112320; }
		_case_begin_4715112320:;
		{
			jule::Ref<_1b8cd2c4b_ScopeChecker> _49921_sc = (*this)._field_lookup.operator jule::Ref<_1b8cd2c4b_ScopeChecker>()->_method_get_root();
			if ((!(_49637_references->_method_exist_1(_49921_sc->_field_owner)))) {
				_49637_references->_method_push(jule::Any(_49921_sc->_field_owner));
			}
		}
		goto _match_end_4715097664;
		_case_end_4715112320:;
		_case_begin_4715098288:;
		{
			if (jule::real((*this)._field_owner) && (!(_49637_references->_method_exist_0((*this)._field_owner)))) {
				_49637_references->_method_push(jule::Any((*this)._field_owner));
			}
		}
		goto _match_end_4715097664;
		_case_end_4715098288:;
		_match_end_4715097664:;
	}
}



inline void _1b9523799_Eval::_method_push_reference_to_fn(jule::Ref<_1d21d97ee_FnIns> _51143_f) {
	{
		auto _match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_1b8cd2c4b_ScopeChecker>>())) { goto _case_end_4715123008; }
		_case_begin_4715123008:;
		{
			jule::Ref<_1b8cd2c4b_ScopeChecker> _51421_sc = (*this)._field_lookup.operator jule::Ref<_1b8cd2c4b_ScopeChecker>()->_method_get_root();
			if (_51421_sc->_field_owner->_field_decl->_method_is_init() && (!(_51421_sc->_field_owner->_field_references->_method_exist_1(_51143_f)))) {
				_51421_sc->_field_owner->_field_refers->_method_push(jule::Any(_51143_f));
			}
		}
		goto _match_end_4715117488;
		_case_end_4715123008:;
		_match_end_4715117488:;
	}
	(*this)._method_push_reference(_51143_f->_field_references);
}



inline void _1b9523799_Eval::_method_push_reference_to_var(jule::Ref<_1b919cb2c_Var> _52244_v) {
	if ((!(jule::real(_52244_v->_field_references)))) {
		return;
	}
	{
		auto _match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_1b8cd2c4b_ScopeChecker>>())) { goto _case_end_4715135344; }
		_case_begin_4715135344:;
		{
			jule::Ref<_1b8cd2c4b_ScopeChecker> _52921_sc = (*this)._field_lookup.operator jule::Ref<_1b8cd2c4b_ScopeChecker>()->_method_get_root();
			if (_52921_sc->_field_owner->_field_decl->_method_is_init() && (!(_52921_sc->_field_owner->_field_references->_method_exist_0(_52244_v)))) {
				_52921_sc->_field_owner->_field_refers->_method_push(jule::Any(_52244_v));
			}
		}
		goto _match_end_4715134912;
		_case_end_4715135344:;
		_match_end_4715134912:;
	}
	(*this)._method_push_reference(_52244_v->_field_references);
}



inline void _1b9523799_Eval::_method_push_reference_to_struct(jule::Ref<_1d21c0b59_StructIns> _53847_s) {
	{
		auto _match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_1b8cd2c4b_ScopeChecker>>())) { goto _case_end_4715147136; }
		_case_begin_4715147136:;
		{
			jule::Ref<_1b8cd2c4b_ScopeChecker> _54121_sc = (*this)._field_lookup.operator jule::Ref<_1b8cd2c4b_ScopeChecker>()->_method_get_root();
			if (_54121_sc->_field_owner->_field_decl->_method_is_init() && (!(_54121_sc->_field_owner->_field_references->_method_exist_2(_53847_s)))) {
				_54121_sc->_field_owner->_field_refers->_method_push(jule::Any(_53847_s));
			}
		}
		goto _match_end_4715146480;
		_case_end_4715147136:;
		_match_end_4715146480:;
	}
	(*this)._method_push_reference(_53847_s->_field_references);
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method___eval_enum(jule::Ref<_1b8dae520_Enum> _54930_enm) {
	return jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_54930_enm)),jule::Ref<_1b951b088_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),true,jule::new_ref<_1b9d678e5_Const>()));
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_eval_enum(jule::Ref<_1b8dae520_Enum> _56132_enm,_1d1da4277_Token _56144_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_56132_enm->_field_public,_56132_enm->_field_token)))) {
		(*this)._method_push_err(_56144_error_token,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_56132_enm->_field_ident)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b9523799_Data>();
	}
	return (*this)._method___eval_enum(_56132_enm);
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method___eval_struct(jule::Ref<_1d21c0b59_StructIns> _57132_s) {
	return jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_57132_s)),jule::Ref<_1b951b088_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(_57132_s),true,jule::new_ref<_1b9d678e5_Const>()));
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_eval_struct(jule::Ref<_1d21c0b59_StructIns> _58434_s,_1d1da4277_Token _58449_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_58434_s->_field_decl->_field_public,_58434_s->_field_decl->_field_token)))) {
		(*this)._method_push_err(_58449_error_token,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_58434_s->_field_decl->_field_ident)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b9523799_Data>();
	}
	return (*this)._method___eval_struct(_58434_s);
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_eval_fn_ins(jule::Ref<_1d21d97ee_FnIns> _59430_f) {
	return jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_59430_f)),jule::Ref<_1b951b088_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(_59430_f),false,jule::new_ref<_1b9d678e5_Const>()));
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_eval_fn(jule::Ref<_1d21d97ee_Fn> _60730_f,_1d1da4277_Token _60738_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_60730_f->_field_public,_60730_f->_field_token)))) {
		(*this)._method_push_err(_60738_error_token,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_60730_f->_field_ident)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b9523799_Data>();
	}
	jule::Ref<_1d21d97ee_FnIns> _61417_ins = _60730_f->_method_instance();
	(*this)._method_push_reference_to_fn(_61417_ins);
	return (*this)._method_eval_fn_ins(_61417_ins);
}



inline void _1b9523799_Eval::_method_push_illegal_cycle_error(jule::Ref<_1b919cb2c_Var> _61943_v1,jule::Ref<_1b919cb2c_Var> _61953_v2,jule::Str& _61968_message) {
	
	jule::Str _62213_refers_to = _1d0557e9e_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(_61943_v1->_field_ident),jule::Any(_61953_v2->_field_ident)}));
	_61968_message=((_1b8b10cbb_str_repeat(jule::Str(" ", 1),4LL) + _62213_refers_to) + jule::Str("\n", 1)) + _61968_message;
}



inline jule::Bool _1b9523799_Eval::_method_check_cross_cycle(jule::Ref<_1b919cb2c_Var> _62636_v,jule::Str& _62650_message) {
	{
		auto _range_expr = _62636_v->_field_depends;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b919cb2c_Var> _1b9523799_d = *_range_begin;
			_iter_begin_4715214320:;
			{
				if ((_1b9523799_d).alloc == ((*this)._field_owner).alloc) {
					(*this)._method_push_illegal_cycle_error(_62636_v,_1b9523799_d,_62650_message);
					return false;
				}
				if ((!((*this)._method_check_cross_cycle(_1b9523799_d,_62650_message)))) {
					(*this)._method_push_illegal_cycle_error(_62636_v,_1b9523799_d,_62650_message);
					return false;
				}
			}
			_iter_next_4715214320:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b9523799_d = *_range_begin; goto _iter_begin_4715214320; }
			_iter_end_4715214320:;
		}
	}
	return true;
}



inline jule::Bool _1b9523799_Eval::_method_check_illegal_cycles(jule::Ref<_1b919cb2c_Var> _64543_v,_1d1da4277_Token _64552_decl_token) {
	jule::Bool _64573_ok = jule::Bool();
	if ((!(jule::real((*this)._field_owner)))) {
		_64573_ok = true;
		return _64573_ok;
	}
	if (((*this)._field_owner).alloc == (_64543_v).alloc) {
		(*this)._method_push_err((*this)._field_owner->_field_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>({jule::Any((*this)._field_owner->_field_ident)}));
		_64573_ok = false;
		return _64573_ok;
	}
	jule::Str _65717_message = jule::Str("", 0);
	if ((!((*this)._method_check_cross_cycle(_64543_v,_65717_message)))) {
		jule::Str _66021_err_msg = _65717_message;
		_65717_message=jule::Str("", 0);
		(*this)._method_push_illegal_cycle_error((*this)._field_owner,_64543_v,_65717_message);
		_66021_err_msg=_66021_err_msg + _65717_message;
		(*this)._method_push_err(_64552_decl_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>({jule::Any(_66021_err_msg)}));
		_64573_ok = false;
		return _64573_ok;
	}
	(*this)._field_owner->_field_depends=jule::append((*this)._field_owner->_field_depends,jule::Slice<jule::Ref<_1b919cb2c_Var>>({_64543_v}));
	_64573_ok = true;
	return _64573_ok;
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_eval_var(jule::Ref<_1b919cb2c_Var> _67231_v,_1d1da4277_Token _67240_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_67231_v->_field_public,_67231_v->_field_token)))) {
		(*this)._method_push_err(_67240_error_token,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_67231_v->_field_ident)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b9523799_Data>();
	}
	_67231_v->_field_used=true;
	{
		auto _match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_1b912748b_Sema>>())) { goto _case_end_4715245552; }
		_case_begin_4715245552:;
		{
			jule::Bool _68417_ok = (*this)._method_check_illegal_cycles(_67231_v,_67240_error_token);
			if ((!(_68417_ok))) {
				return jule::new_ref<_1b9523799_Data>();
			}
		}
		goto _match_end_4715242640;
		_case_end_4715245552:;
		if (!(_match_expr.type_is<jule::Ref<_1b8cd2c4b_ScopeChecker>>())) { goto _case_end_4715245664; }
		_case_begin_4715245664:;
		{
			if ((!(_67231_v->_field_reference)) || (*this)._method_is_unsafe()) {
				goto _match_end_4715242640;
			}
			jule::Ref<_1b8cd2c4b_ScopeChecker> _69421_s = (*this)._field_lookup.operator jule::Ref<_1b8cd2c4b_ScopeChecker>();
			_iter_begin_4715248768:;
			if (!((!(jule::real(_69421_s->_field_owner))) && jule::real(_69421_s->_field_parent))) { goto _iter_end_4715248768; }
			{
				_69421_s=_69421_s->_field_parent;
			}
			_iter_next_4715248768:;
			goto _iter_begin_4715248768;
			_iter_end_4715248768:;
			if ((jule::real(_69421_s->_field_owner) && _69421_s->_field_owner->_field_anon) && ((_67231_v->_field_scope).alloc != (_69421_s->_field_owner->_field_scope).alloc)) {
				(*this)._method_push_err(_67240_error_token,jule::Str("anonymous functions cannot access to reference \"@\" definition of parent scope", 77),jule::Slice<jule::Any>({jule::Any(_67231_v->_field_ident)}));
			}
		}
		goto _match_end_4715242640;
		_case_end_4715245664:;
		_match_end_4715242640:;
	}
	(*this)._method_push_reference_to_var(_67231_v);
	if ((!(_67231_v->_field_cpp_linked)) && ((!(jule::real(_67231_v->_field_value))) || (!(jule::real(_67231_v->_field_value->_field_data))))) {
		if (_67231_v->_field_constant) {
			(*this)._field_s->_method_check_type_var(_67231_v,(*this)._field_s);
			if ((!(jule::real(_67231_v->_field_value->_field_data)))) {
				return jule::new_ref<_1b9523799_Data>();
			}
		}
	}
	if ((!(jule::real(_67231_v->_field_kind))) || (!(jule::real(_67231_v->_field_kind->_field_kind)))) {
		return jule::new_ref<_1b9523799_Data>();
	}
	jule::Ref<_1b9523799_Data> _72017_d = jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(_67231_v->_field_kind->_field_kind->_method_clone(),jule::Ref<_1b951b088_TypeKind>(),_67231_v->_field_mutable,_67231_v->_field_reference,(!(_67231_v->_field_constant)),jule::Bool(),jule::Bool(),jule::Any(_67231_v),false,jule::Ref<_1b9d678e5_Const>()));
	if (((!(_67231_v->_field_cpp_linked)) && _67231_v->_method_is_initialized()) && jule::real(_67231_v->_field_value->_field_data)) {
		_72017_d->_field_is_rune=_67231_v->_field_value->_field_data->_field_is_rune;
	}
	if (_67231_v->_field_constant && jule::real(_67231_v->_field_value->_field_data->_field_constant)) {
		_72017_d->_field_constant=jule::new_ref<_1b9d678e5_Const>(_67231_v->_field_value->_field_data->_field_constant.get());
		_72017_d->_field_model=jule::Any(_72017_d->_field_constant);
	}
	if (jule::real(_72017_d->_field_kind->_method_fnc())) {
		jule::Ref<_1d21d97ee_FnIns> _73921_f = _72017_d->_field_kind->_method_fnc();
		if (jule::real(_73921_f->_field_decl)) {
			_73921_f->_field_decl->_field_ident=_67231_v->_field_ident;
		}
	}
	return _72017_d;
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_eval_type_alias(jule::Ref<_1b951b088_TypeAlias> _75038_ta,_1d1da4277_Token _75054_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_75038_ta->_field_public,_75038_ta->_field_token)))) {
		(*this)._method_push_err(_75054_error_token,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_75038_ta->_field_ident)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b9523799_Data>();
	}
	_75038_ta->_field_used=true;
	jule::Trait<_1b951b088_Kind> _75917_kind = _75038_ta->_field_kind->_field_kind->_field_kind;
	{
		auto _match_expr{ _75917_kind };
		if (!(_match_expr.type_is<jule::Ref<_1d21c0b59_StructIns>>())) { goto _case_end_4715290448; }
		_case_begin_4715290448:;
		{
			return (*this)._method___eval_struct(_75917_kind.operator jule::Ref<_1d21c0b59_StructIns>());
		}
		goto _match_end_4715289712;
		_case_end_4715290448:;
		if (!(_match_expr.type_is<jule::Ref<_1b8dae520_Enum>>())) { goto _case_end_4715290560; }
		_case_begin_4715290560:;
		{
			return (*this)._method___eval_enum(_75917_kind.operator jule::Ref<_1b8dae520_Enum>());
		}
		goto _match_end_4715289712;
		_case_end_4715290560:;
		_case_begin_4715290096:;
		{
			jule::Ref<_1b9523799_Data> _76821_d = jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(_75038_ta->_field_kind->_field_kind->_method_clone(),jule::Ref<_1b951b088_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),true,jule::Ref<_1b9d678e5_Const>()));
			if (_75038_ta->_field_cpp_linked) {
				_76821_d->_field_kind->_field_cpp_ident=_75038_ta->_field_ident;
			}
			_76821_d->_field_model=jule::Any(_76821_d->_field_kind);
			return _76821_d;
		}
		goto _match_end_4715289712;
		_case_end_4715290096:;
		_match_end_4715289712:;
	}
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_eval_def(jule::Any _78331_def,_1d1da4277_Token _78341_ident) {
	{
		auto _match_expr{ _78331_def };
		if (!(_match_expr.type_is<jule::Ref<_1b919cb2c_Var>>())) { goto _case_end_4715306784; }
		_case_begin_4715306784:;
		{
			return (*this)._method_eval_var(_78331_def.operator jule::Ref<_1b919cb2c_Var>(),_78341_ident);
		}
		goto _match_end_4715302352;
		_case_end_4715306784:;
		if (!(_match_expr.type_is<jule::Ref<_1b8dae520_Enum>>())) { goto _case_end_4715306000; }
		_case_begin_4715306000:;
		{
			return (*this)._method_eval_enum(_78331_def.operator jule::Ref<_1b8dae520_Enum>(),_78341_ident);
		}
		goto _match_end_4715302352;
		_case_end_4715306000:;
		if (!(_match_expr.type_is<jule::Ref<_1d21c0b59_Struct>>())) { goto _case_end_4715306448; }
		_case_begin_4715306448:;
		{
			return (*this)._method_eval_struct(_78331_def.operator jule::Ref<_1d21c0b59_Struct>()->_method_instance(),_78341_ident);
		}
		goto _match_end_4715302352;
		_case_end_4715306448:;
		if (!(_match_expr.type_is<jule::Ref<_1d21d97ee_Fn>>())) { goto _case_end_4715306560; }
		_case_begin_4715306560:;
		{
			return (*this)._method_eval_fn(_78331_def.operator jule::Ref<_1d21d97ee_Fn>(),_78341_ident);
		}
		goto _match_end_4715302352;
		_case_end_4715306560:;
		if (!(_match_expr.type_is<jule::Ref<_1d21d97ee_FnIns>>())) { goto _case_end_4715305600; }
		_case_begin_4715305600:;
		{
			return (*this)._method_eval_fn_ins(_78331_def.operator jule::Ref<_1d21d97ee_FnIns>());
		}
		goto _match_end_4715302352;
		_case_end_4715305600:;
		if (!(_match_expr.type_is<jule::Ref<_1b951b088_TypeAlias>>())) { goto _case_end_4715305712; }
		_case_begin_4715305712:;
		{
			return (*this)._method_eval_type_alias(_78331_def.operator jule::Ref<_1b951b088_TypeAlias>(),_78341_ident);
		}
		goto _match_end_4715302352;
		_case_end_4715305712:;
		_case_begin_4715302752:;
		{
			(*this)._method_push_err(_78341_ident,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_78341_ident._field_kind)}));
			return jule::new_ref<_1b9523799_Data>();
		}
		goto _match_end_4715302352;
		_case_end_4715302752:;
		_match_end_4715302352:;
	}
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_eval_ident(jule::Ref<_1d1e5192e_IdentExpr> _80929_ident) {
	jule::Any _81017_def = (*this)._method_get_def(_80929_ident->_field_ident,_80929_ident->_field_cpp_linked);
	return (*this)._method_eval_def(_81017_def,_80929_ident->_field_token);
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_eval_unary_minus(jule::Ref<_1b9523799_Data> _81435_d) {
	jule::Ref<_1b951b088_Prim> _81513_t = _81435_d->_field_kind->_method_prim();
	if ((!(jule::real(_81513_t))) || (!(_1b9e28c5e_is_num(_81513_t->_method_to_str())))) {
		return jule::new_ref<_1b9523799_Data>();
	}
	if (_81435_d->_method_is_const()) {
		{
			if (!((_81435_d->_field_constant->_method_is_f64()))) { goto _case_end_4715329280; }
			_case_begin_4715329280:;
			{
				_81435_d->_field_constant->_method_set_f64(static_cast<jule::F64>((-(_81435_d->_field_constant->_method_read_f64()))));
			}
			goto _match_end_4715329024;
			_case_end_4715329280:;
			if (!((_81435_d->_field_constant->_method_is_i64()))) { goto _case_end_4715329408; }
			_case_begin_4715329408:;
			{
				_81435_d->_field_constant->_method_set_f64(static_cast<jule::F64>((-(_81435_d->_field_constant->_method_as_f64()))));
			}
			goto _match_end_4715329024;
			_case_end_4715329408:;
			if (!((_81435_d->_field_constant->_method_is_u64()))) { goto _case_end_4715329536; }
			_case_begin_4715329536:;
			{
				_81435_d->_field_constant->_method_set_f64(static_cast<jule::F64>((-(_81435_d->_field_constant->_method_as_f64()))));
			}
			goto _match_end_4715329024;
			_case_end_4715329536:;
			_match_end_4715329024:;
		}
		_1b9523799_normalize_type(_81435_d);
	}
	_81435_d->_field_lvalue=false;
	_81435_d->_field_model=jule::Any(jule::new_struct<_1b8dbae99_UnaryExprModel>(new( std::nothrow ) _1b8dbae99_UnaryExprModel(_81435_d->_field_model,jule::Str("-", 1))));
	return _81435_d;
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_eval_unary_plus(jule::Ref<_1b9523799_Data> _83734_d) {
	jule::Ref<_1b951b088_Prim> _83813_t = _83734_d->_field_kind->_method_prim();
	if ((!(jule::real(_83813_t))) || (!(_1b9e28c5e_is_num(_83813_t->_method_to_str())))) {
		return jule::new_ref<_1b9523799_Data>();
	}
	if (_83734_d->_method_is_const()) {
		{
			if (!((_83734_d->_field_constant->_method_is_f64()))) { goto _case_end_4715346896; }
			_case_begin_4715346896:;
			{
				_83734_d->_field_constant->_method_set_f64(static_cast<jule::F64>((+(_83734_d->_field_constant->_method_read_f64()))));
			}
			goto _match_end_4715346640;
			_case_end_4715346896:;
			if (!((_83734_d->_field_constant->_method_is_i64()))) { goto _case_end_4715347024; }
			_case_begin_4715347024:;
			{
				_83734_d->_field_constant->_method_set_f64(static_cast<jule::F64>((+(_83734_d->_field_constant->_method_as_f64()))));
			}
			goto _match_end_4715346640;
			_case_end_4715347024:;
			if (!((_83734_d->_field_constant->_method_is_u64()))) { goto _case_end_4715347152; }
			_case_begin_4715347152:;
			{
				_83734_d->_field_constant->_method_set_f64(static_cast<jule::F64>((+(_83734_d->_field_constant->_method_as_f64()))));
			}
			goto _match_end_4715346640;
			_case_end_4715347152:;
			_match_end_4715346640:;
		}
		_1b9523799_normalize_type(_83734_d);
	}
	_83734_d->_field_lvalue=false;
	_83734_d->_field_model=jule::Any(jule::new_struct<_1b8dbae99_UnaryExprModel>(new( std::nothrow ) _1b8dbae99_UnaryExprModel(_83734_d->_field_model,jule::Str("+", 1))));
	return _83734_d;
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_eval_unary_caret(jule::Ref<_1b9523799_Data> _86035_d) {
	jule::Ref<_1b951b088_Prim> _86113_t = _86035_d->_field_kind->_method_prim();
	if ((!(jule::real(_86113_t))) || (!(_1b9e28c5e_is_int(_86113_t->_method_to_str())))) {
		return jule::new_ref<_1b9523799_Data>();
	}
	if (_86035_d->_method_is_const()) {
		{
			if (!((_86035_d->_field_constant->_method_is_i64()))) { goto _case_end_4715364336; }
			_case_begin_4715364336:;
			{
				_86035_d->_field_constant->_method_set_i64(static_cast<jule::I64>((~(_86035_d->_field_constant->_method_read_i64()))));
			}
			goto _match_end_4715364096;
			_case_end_4715364336:;
			if (!((_86035_d->_field_constant->_method_is_u64()))) { goto _case_end_4715364464; }
			_case_begin_4715364464:;
			{
				_86035_d->_field_constant->_method_set_u64(static_cast<jule::U64>((~(_86035_d->_field_constant->_method_read_u64()))));
			}
			goto _match_end_4715364096;
			_case_end_4715364464:;
			_match_end_4715364096:;
		}
	}
	_86035_d->_field_lvalue=false;
	_86035_d->_field_model=jule::Any(jule::new_struct<_1b8dbae99_UnaryExprModel>(new( std::nothrow ) _1b8dbae99_UnaryExprModel(_86035_d->_field_model,jule::Str("^", 1))));
	return _86035_d;
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_eval_unary_excl(jule::Ref<_1b9523799_Data> _88434_d) {
	jule::Ref<_1b951b088_Prim> _88513_t = _88434_d->_field_kind->_method_prim();
	if ((!(jule::real(_88513_t))) || (!(_88513_t->_method_is_bool()))) {
		return jule::new_ref<_1b9523799_Data>();
	}
	if (_88434_d->_method_is_const()) {
		{
			if (!((_88434_d->_field_constant->_method_is_bool()))) { goto _case_end_4715378544; }
			_case_begin_4715378544:;
			{
				_88434_d->_field_constant->_method_set_bool((!(_88434_d->_field_constant->_method_read_bool())));
			}
			goto _match_end_4715378400;
			_case_end_4715378544:;
			_match_end_4715378400:;
		}
	}
	_88434_d->_field_lvalue=false;
	_88434_d->_field_model=jule::Any(jule::new_struct<_1b8dbae99_UnaryExprModel>(new( std::nothrow ) _1b8dbae99_UnaryExprModel(_88434_d->_field_model,jule::Str("!", 1))));
	return _88434_d;
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_eval_unary_star(jule::Ref<_1b9523799_Data> _90538_d,_1d1da4277_Token _90548_op) {
	if ((!((*this)._method_is_unsafe()))) {
		(*this)._method_push_err(_90548_op,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1b951b088_Ptr> _91017_t = _90538_d->_field_kind->_method_ptr();
	if ((!(jule::real(_91017_t))) || _91017_t->_method_is_unsafe()) {
		return jule::new_ref<_1b9523799_Data>();
	}
	jule::drop(_90538_d->_field_constant);
	_90538_d->_field_lvalue=true;
	_90538_d->_field_kind=_91017_t->_field_elem;
	_90538_d->_field_model=jule::Any(jule::new_struct<_1b8dbae99_UnaryExprModel>(new( std::nothrow ) _1b8dbae99_UnaryExprModel(_90538_d->_field_model,jule::Str("*", 1))));
	return _90538_d;
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_eval_unary_amper(jule::Ref<_1b9523799_Data> _92435_d) {
	{
		auto _match_expr{ _92435_d->_field_model };
		if (!(_match_expr.type_is<jule::Ref<_1b8dbae99_StructLitExprModel>>())) { goto _case_end_4715401888; }
		_case_begin_4715401888:;
		{
			jule::Ref<_1b8dbae99_StructLitExprModel> _92721_lit = _92435_d->_field_model.operator jule::Ref<_1b8dbae99_StructLitExprModel>();
			_92435_d->_field_kind=jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1b951b088_Ref>(new( std::nothrow ) _1b951b088_Ref(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_92721_lit->_field_strct))))));
			_92435_d->_field_model=jule::Any(jule::new_struct<_1b8dbae99_AllocStructLitExprModel>(new( std::nothrow ) _1b8dbae99_AllocStructLitExprModel(_92721_lit)));
		}
		goto _match_end_4715397360;
		_case_end_4715401888:;
		_case_begin_4715398032:;
		{
			{
				if (!((jule::real(_92435_d->_field_kind->_method_ref())))) { goto _case_end_4715400896; }
				_case_begin_4715400896:;
				{
					_92435_d->_field_kind=jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1b951b088_Ptr>(new( std::nothrow ) _1b951b088_Ptr(_92435_d->_field_kind->_method_ref()->_field_elem->_method_clone()))));
					_92435_d->_field_model=jule::Any(jule::new_struct<_1b8dbae99_GetRefPtrExprModel>(new( std::nothrow ) _1b8dbae99_GetRefPtrExprModel(_92435_d->_field_model)));
				}
				goto _match_end_4715399232;
				_case_end_4715400896:;
				if (!((_1b951b088_can_get_ptr(_92435_d)))) { goto _case_end_4715400432; }
				_case_begin_4715400432:;
				{
					_92435_d->_field_kind=jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1b951b088_Ptr>(new( std::nothrow ) _1b951b088_Ptr(_92435_d->_field_kind->_method_clone()))));
					_92435_d->_field_model=jule::Any(jule::new_struct<_1b8dbae99_UnaryExprModel>(new( std::nothrow ) _1b8dbae99_UnaryExprModel(_92435_d->_field_model,jule::Str("&", 1))));
				}
				goto _match_end_4715399232;
				_case_end_4715400432:;
				_case_begin_4715399424:;
				{
					jule::drop(_92435_d);
				}
				goto _match_end_4715399232;
				_case_end_4715399424:;
				_match_end_4715399232:;
			}
		}
		goto _match_end_4715397360;
		_case_end_4715398032:;
		_match_end_4715397360:;
	}
	if (jule::real(_92435_d)) {
		jule::drop(_92435_d->_field_constant);
		_92435_d->_field_lvalue=true;
		_92435_d->_field_mutable=true;
	}
	return _92435_d;
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_eval_unary_type_decl(jule::Ref<_1b9523799_Data> _97143_d,jule::Ref<_1d1e5192e_UnaryExpr> _97157_u) {
	_1b951b088_TypeChecker _97217_tc = _1b951b088_TypeChecker((*this)._field_s,(*this)._field_lookup,jule::Ref<_1b951b088_Referencer>(),_97157_u->_field_op,jule::Slice<jule::Ref<_1d1e5192e_GenericDecl>>(),jule::Slice<jule::Ref<_1b951b088_TypeAlias>>(),jule::Bool());
	{
		auto _match_expr{ _97157_u->_field_op._field_kind };
		if (!((jule::Str("*", 1)) == _match_expr)) { goto _case_end_4715425440; }
		_case_begin_4715425440:;
		{
			_97143_d->_field_kind=jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_97217_tc._method_build_ptr_from_type(_97143_d->_field_kind)));
		}
		goto _match_end_4715419136;
		_case_end_4715425440:;
		if (!((jule::Str("&", 1)) == _match_expr)) { goto _case_end_4715426016; }
		_case_begin_4715426016:;
		{
			_97143_d->_field_kind=jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_97217_tc._method_build_ref_from_type(_97143_d->_field_kind)));
		}
		goto _match_end_4715419136;
		_case_end_4715426016:;
		_case_begin_4715421536:;
		{
			(*this)._method_push_err(_97157_u->_field_op,jule::Str("invalid expression for unary @ operator", 39),jule::Slice<jule::Any>({jule::Any(_97157_u->_field_op._field_kind)}));
			return jule::new_ref<_1b9523799_Data>();
		}
		goto _match_end_4715419136;
		_case_end_4715421536:;
		_match_end_4715419136:;
	}
	_97143_d->_field_decl=true;
	return _97143_d;
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_eval_unary(jule::Ref<_1d1e5192e_UnaryExpr> _99434_u) {
	jule::Ref<_1b951b088_TypeKind> _99517_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_99517_prefix;
	});
	jule::Ref<_1b9523799_Data> _99917_d = this->self->_method_eval_expr_kind(_99434_u->_field_expr);
	if ((!(jule::real(_99917_d)))) {
		return jule::new_ref<_1b9523799_Data>();
	}
	if (_99917_d->_field_decl) {
		return this->self->_method_eval_unary_type_decl(_99917_d,_99434_u);
	}
	jule::Ref<_1b951b088_TypeKind> _100817_cast_kind = _99917_d->_field_cast_kind;
	{
		auto _match_expr{ _99434_u->_field_op._field_kind };
		if (!((jule::Str("-", 1)) == _match_expr)) { goto _case_end_4715443408; }
		_case_begin_4715443408:;
		{
			_99917_d=this->self->_method_eval_unary_minus(_99917_d);
		}
		goto _match_end_4715437600;
		_case_end_4715443408:;
		if (!((jule::Str("+", 1)) == _match_expr)) { goto _case_end_4715443104; }
		_case_begin_4715443104:;
		{
			_99917_d=this->self->_method_eval_unary_plus(_99917_d);
		}
		goto _match_end_4715437600;
		_case_end_4715443104:;
		if (!((jule::Str("^", 1)) == _match_expr)) { goto _case_end_4715443216; }
		_case_begin_4715443216:;
		{
			_99917_d=this->self->_method_eval_unary_caret(_99917_d);
		}
		goto _match_end_4715437600;
		_case_end_4715443216:;
		if (!((jule::Str("!", 1)) == _match_expr)) { goto _case_end_4715442464; }
		_case_begin_4715442464:;
		{
			_99917_d=this->self->_method_eval_unary_excl(_99917_d);
		}
		goto _match_end_4715437600;
		_case_end_4715442464:;
		if (!((jule::Str("*", 1)) == _match_expr)) { goto _case_end_4715442576; }
		_case_begin_4715442576:;
		{
			_99917_d=this->self->_method_eval_unary_star(_99917_d,_99434_u->_field_op);
		}
		goto _match_end_4715437600;
		_case_end_4715442576:;
		if (!((jule::Str("&", 1)) == _match_expr)) { goto _case_end_4715442688; }
		_case_begin_4715442688:;
		{
			_99917_d=this->self->_method_eval_unary_amper(_99917_d);
		}
		goto _match_end_4715437600;
		_case_end_4715442688:;
		_case_begin_4715442160:;
		{
			jule::drop(_99917_d);
		}
		goto _match_end_4715437600;
		_case_end_4715442160:;
		_match_end_4715437600:;
	}
	if ((!(jule::real(_99917_d)))) {
		this->self->_method_push_err(_99434_u->_field_op,jule::Str("invalid expression for unary @ operator", 39),jule::Slice<jule::Any>({jule::Any(_99434_u->_field_op._field_kind)}));
	} else if (_99917_d->_method_is_const()) {
		_99917_d->_field_model=jule::Any(_99917_d->_field_constant);
	} else if (jule::real(_100817_cast_kind)) {
		_99917_d->_field_cast_kind=_100817_cast_kind;
		_1b9523799_apply_cast_kind(_99917_d);
	}
	return _99917_d;
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_eval_variadic(jule::Ref<_1d1e5192e_VariadicExpr> _103137_v) {
	jule::Ref<_1b951b088_TypeKind> _103217_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_103217_prefix;
	});
	jule::Ref<_1b9523799_Data> _103617_d = this->self->_method_eval_expr_kind(_103137_v->_field_expr);
	if ((!(jule::real(_103617_d)))) {
		return jule::new_ref<_1b9523799_Data>();
	}
	if (jule::real(_103617_d->_field_kind->_method_ref())) {
		_103617_d->_field_kind=_103617_d->_field_kind->_method_ref()->_field_elem;
		_103617_d->_field_model=jule::Any(jule::new_struct<_1b8dbae99_ExplicitDerefExprModel>(new( std::nothrow ) _1b8dbae99_ExplicitDerefExprModel(_103617_d->_field_model)));
	}
	if ((!(_103617_d->_field_kind->_method_variadicable()))) {
		this->self->_method_push_err(_103137_v->_field_token,jule::Str("@ data-type is not variadicable", 31),jule::Slice<jule::Any>({jule::Any(_103617_d->_field_kind->_method_to_str())}));
		return jule::new_ref<_1b9523799_Data>();
	}
	_103617_d->_field_variadiced=true;
	_103617_d->_field_kind=_103617_d->_field_kind->_method_slc()->_field_elem;
	_103617_d->_field_kind->_field_variadic=true;
	return _103617_d;
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_eval_unsafe(jule::Ref<_1d1e5192e_UnsafeExpr> _105935_u) {
	jule::Bool _106013_unsafety = this->self->_field_unsafety;
	this->self->_field_unsafety=true;
	jule::Ref<_1b9523799_Data> _106317_d = this->self->_method_eval_expr_kind(_105935_u->_field_expr);
	this->self->_field_unsafety=_106013_unsafety;
	return _106317_d;
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_eval_arr(jule::Ref<_1d1e5192e_SliceExpr> _107032_s) {
	jule::Ref<_1b951b088_Arr> _107217_pt = this->self->_field_prefix->_method_arr();
	jule::Ref<_1b951b088_Arr> _107417_arr = jule::new_struct<_1b951b088_Arr>(new( std::nothrow ) _1b951b088_Arr(false,0LL,_107217_pt->_field_elem));
	if (_107217_pt->_field_auto) {
		_107417_arr->_field_n=static_cast<jule::I64>(_107032_s->_field_elems.len());
	} else {
		_107417_arr->_field_n=static_cast<jule::I64>(_107032_s->_field_elems.len());
		if (_107417_arr->_field_n > _107217_pt->_field_n) {
			this->self->_method_push_err(_107032_s->_field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>({}));
		} else if (_107417_arr->_field_n < _107217_pt->_field_n) {
			_107417_arr->_field_n=_107217_pt->_field_n;
		}
	}
	jule::Ref<_1b8dbae99_ArrayExprModel> _109117_model = jule::new_struct<_1b8dbae99_ArrayExprModel>(new( std::nothrow ) _1b8dbae99_ArrayExprModel(_107417_arr,jule::Slice<jule::Any>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_107032_s->_field_elems.len())))));
	jule::Ref<_1b951b088_TypeKind> _109617_prefix = this->self->_field_prefix;
	this->self->_field_prefix=_107417_arr->_field_elem;
	{
		auto _range_expr = _107032_s->_field_elems;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1b9523799_i = 0;
			jule::Any _1b9523799_elem = *_range_begin;
			_iter_begin_4715514048:;
			{
				jule::Ref<_1b9523799_Data> _109921_d = this->self->_method_eval_expr_kind(_1b9523799_elem);
				if ((!(jule::real(_109921_d)))) {
					goto _iter_next_4715514048;
				}
				this->self->_field_s->_method_check_assign_type(false,_107417_arr->_field_elem,_109921_d,_107032_s->_field_token,true);
				_109117_model->_field_elems[static_cast<jule::Int>(_1b9523799_i)]=_109921_d->_field_model;
			}
			_iter_next_4715514048:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1b9523799_i; _1b9523799_elem = *_range_begin; goto _iter_begin_4715514048; }
			_iter_end_4715514048:;
		}
	}
	this->self->_field_prefix=_109617_prefix;
	return jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_107417_arr)),jule::Ref<_1b951b088_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_109117_model),jule::Bool(),jule::Ref<_1b9d678e5_Const>()));
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_eval_exp_slc(jule::Ref<_1d1e5192e_SliceExpr> _111636_s,jule::Ref<_1b951b088_TypeKind> _111655_elem_type) {
	jule::Ref<_1b951b088_Slc> _111717_slc = jule::new_struct<_1b951b088_Slc>(new( std::nothrow ) _1b951b088_Slc(_111655_elem_type));
	jule::Ref<_1b8dbae99_SliceExprModel> _112117_model = jule::new_struct<_1b8dbae99_SliceExprModel>(new( std::nothrow ) _1b8dbae99_SliceExprModel(_111655_elem_type,jule::Slice<jule::Any>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_111636_s->_field_elems.len())))));
	jule::Ref<_1b951b088_TypeKind> _112617_prefix = this->self->_field_prefix;
	this->self->_field_prefix=_111717_slc->_field_elem;
	{
		auto _range_expr = _111636_s->_field_elems;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1b9523799_i = 0;
			jule::Any _1b9523799_elem = *_range_begin;
			_iter_begin_4715535328:;
			{
				jule::Ref<_1b9523799_Data> _112921_d = this->self->_method_eval_expr_kind(_1b9523799_elem);
				if ((!(jule::real(_112921_d)))) {
					goto _iter_next_4715535328;
				}
				this->self->_field_s->_method_check_assign_type(false,_111717_slc->_field_elem,_112921_d,_111636_s->_field_token,true);
				_112117_model->_field_elems[static_cast<jule::Int>(_1b9523799_i)]=_112921_d->_field_model;
			}
			_iter_next_4715535328:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1b9523799_i; _1b9523799_elem = *_range_begin; goto _iter_begin_4715535328; }
			_iter_end_4715535328:;
		}
	}
	this->self->_field_prefix=_112617_prefix;
	return jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_111717_slc)),jule::Ref<_1b951b088_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_112117_model),jule::Bool(),jule::Ref<_1b9d678e5_Const>()));
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_eval_slice_expr(jule::Ref<_1d1e5192e_SliceExpr> _114639_s) {
	if (jule::real(this->self->_field_prefix)) {
		{
			if (!((jule::real(this->self->_field_prefix->_method_arr())))) { goto _case_end_4715550224; }
			_case_begin_4715550224:;
			{
				return this->self->_method_eval_arr(_114639_s);
			}
			goto _match_end_4715549984;
			_case_end_4715550224:;
			if (!((jule::real(this->self->_field_prefix->_method_slc())))) { goto _case_end_4715550352; }
			_case_begin_4715550352:;
			{
				jule::Ref<_1b951b088_Slc> _115325_pt = this->self->_field_prefix->_method_slc();
				return this->self->_method_eval_exp_slc(_114639_s,_115325_pt->_field_elem);
			}
			goto _match_end_4715549984;
			_case_end_4715550352:;
			_match_end_4715549984:;
		}
	}
	jule::Ref<_1b951b088_TypeKind> _115817_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	if (_114639_s->_field_elems.len() == 0LL) {
		this->self->_method_push_err(_114639_s->_field_token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b9523799_Data>();
	}
	jule::Ref<_1b9523799_Data> _116617_first_elem = this->self->_method_eval_expr_kind(_114639_s->_field_elems[0LL]);
	if ((!(jule::real(_116617_first_elem)))) {
		return jule::new_ref<_1b9523799_Data>();
	}
	jule::Ref<_1b9523799_Data> _117117_d = this->self->_method_eval_exp_slc(_114639_s,_116617_first_elem->_field_kind);
	this->self->_field_prefix=_115817_prefix;
	return _117117_d;
}



inline void _1b9523799_Eval::_method_check_integer_indexing_by_data(jule::Ref<_1b9523799_Data> _117753_d,_1d1da4277_Token _117763_token) {
	jule::Str _117813_err_key = _1b9523799_check_data_for_integer_indexing(_117753_d);
	if (_117813_err_key != jule::Str("", 0)) {
		(*this)._method_push_err(_117763_token,_117813_err_key,jule::Slice<jule::Any>({}));
	}
}



inline void _1b9523799_Eval::_method_indexing_ptr(jule::Ref<_1b9523799_Data> _118435_d,jule::Ref<_1b9523799_Data> _118449_index,jule::Ref<_1d1e5192e_IndexingExpr> _118463_i) {
	(*this)._method_check_integer_indexing_by_data(_118449_index,_118463_i->_field_token);
	jule::Ref<_1b951b088_Ptr> _118717_ptr = _118435_d->_field_kind->_method_ptr();
	{
		if (!((_118717_ptr->_method_is_unsafe()))) { goto _case_end_4715577520; }
		_case_begin_4715577520:;
		{
			(*this)._method_push_err(_118463_i->_field_token,jule::Str("unsafe pointers not supports indexing", 37),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4715577264;
		_case_end_4715577520:;
		if (!(((!((*this)._method_is_unsafe()))))) { goto _case_end_4715577632; }
		_case_begin_4715577632:;
		{
			(*this)._method_push_err(_118463_i->_field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4715577264;
		_case_end_4715577632:;
		_match_end_4715577264:;
	}
	_118435_d->_field_kind=_118717_ptr->_field_elem->_method_clone();
}



inline void _1b9523799_Eval::_method_indexing_arr(jule::Ref<_1b9523799_Data> _120035_d,jule::Ref<_1b9523799_Data> _120049_index,jule::Ref<_1d1e5192e_IndexingExpr> _120063_i) {
	jule::Ref<_1b951b088_Arr> _120117_arr = _120035_d->_field_kind->_method_arr();
	_120035_d->_field_kind=_120117_arr->_field_elem->_method_clone();
	(*this)._method_check_integer_indexing_by_data(_120049_index,_120063_i->_field_token);
	if (_120049_index->_method_is_const() && (_120049_index->_field_constant->_method_as_f64() >= static_cast<jule::F64>(_120117_arr->_field_n))) {
		(*this)._method_push_err(_120063_i->_field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>({}));
	}
}



inline void _1b9523799_Eval::_method_indexing_slc(jule::Ref<_1b9523799_Data> _120935_d,jule::Ref<_1b9523799_Data> _120948_index,jule::Ref<_1d1e5192e_IndexingExpr> _120962_i) {
	jule::Ref<_1b951b088_Slc> _121017_slc = _120935_d->_field_kind->_method_slc();
	_120935_d->_field_kind=_121017_slc->_field_elem->_method_clone();
	(*this)._method_check_integer_indexing_by_data(_120948_index,_120962_i->_field_token);
}



inline void _1b9523799_Eval::_method_indexing_map(jule::Ref<_1b9523799_Data> _121535_d,jule::Ref<_1b9523799_Data> _121549_index,jule::Ref<_1d1e5192e_IndexingExpr> _121567_i) {
	if ((!(jule::real(_121549_index)))) {
		return;
	}
	jule::Ref<_1b951b088_Map> _122017_m = _121535_d->_field_kind->_method_map();
	_1b9176ba0_AssignTypeChecker _122117_atc = _1b9176ba0_AssignTypeChecker((*this)._field_s,_122017_m->_field_key,_121549_index,_121567_i->_field_token,true);
	_122117_atc._method_check();
	_121535_d->_field_kind=_122017_m->_field_val->_method_clone();
}



inline void _1b9523799_Eval::_method_indexing_str(jule::Ref<_1b9523799_Data> _123335_d,jule::Ref<_1b9523799_Data> _123349_index,jule::Ref<_1d1e5192e_IndexingExpr> _123363_i) {
	
	_123335_d->_field_kind->_field_kind=_1b951b088_build_prim_type(jule::Str("u8", 2));
	if ((!(jule::real(_123349_index)))) {
		return;
	}
	(*this)._method_check_integer_indexing_by_data(_123349_index,_123363_i->_field_token);
	if ((!(_123349_index->_method_is_const()))) {
		jule::drop(_123335_d->_field_constant);
		return;
	}
	if (_123335_d->_method_is_const()) {
		_1d1da4277_Token _124917_error_token = _123363_i->_field_token;
		jule::I64 _125017_j = _123349_index->_field_constant->_method_as_i64();
		jule::Str _125117_s = _123335_d->_field_constant->_method_read_str();
		if (static_cast<jule::Int>(_125017_j) >= _125117_s.len()) {
			(*this)._method_push_err(_124917_error_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>({}));
		} else {
			_123335_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_125117_s[static_cast<jule::Int>(_125017_j)]));
		}
	}
}



inline void _1b9523799_Eval::_method_to_indexing(jule::Ref<_1b9523799_Data> _126034_d,jule::Ref<_1b9523799_Data> _126048_index,jule::Ref<_1d1e5192e_IndexingExpr> _126066_i) {
	{
		if (!((jule::real(_126034_d->_field_kind->_method_ptr())))) { goto _case_end_4715637456; }
		_case_begin_4715637456:;
		{
			(*this)._method_indexing_ptr(_126034_d,_126048_index,_126066_i);
			return;
		}
		goto _match_end_4715637216;
		_case_end_4715637456:;
		if (!((jule::real(_126034_d->_field_kind->_method_arr())))) { goto _case_end_4715637584; }
		_case_begin_4715637584:;
		{
			(*this)._method_indexing_arr(_126034_d,_126048_index,_126066_i);
			return;
		}
		goto _match_end_4715637216;
		_case_end_4715637584:;
		if (!((jule::real(_126034_d->_field_kind->_method_slc())))) { goto _case_end_4715637712; }
		_case_begin_4715637712:;
		{
			(*this)._method_indexing_slc(_126034_d,_126048_index,_126066_i);
			return;
		}
		goto _match_end_4715637216;
		_case_end_4715637712:;
		if (!((jule::real(_126034_d->_field_kind->_method_map())))) { goto _case_end_4715637840; }
		_case_begin_4715637840:;
		{
			(*this)._method_indexing_map(_126034_d,_126048_index,_126066_i);
			return;
		}
		goto _match_end_4715637216;
		_case_end_4715637840:;
		if (!((jule::real(_126034_d->_field_kind->_method_prim())))) { goto _case_end_4715637968; }
		_case_begin_4715637968:;
		{
			jule::Ref<_1b951b088_Prim> _127917_prim = _126034_d->_field_kind->_method_prim();
			{
				if (!((_127917_prim->_method_is_str()))) { goto _case_end_4715649648; }
				_case_begin_4715649648:;
				{
					(*this)._method_indexing_str(_126034_d,_126048_index,_126066_i);
					return;
				}
				goto _match_end_4715649488;
				_case_end_4715649648:;
				_match_end_4715649488:;
			}
		}
		goto _match_end_4715637216;
		_case_end_4715637968:;
		_match_end_4715637216:;
	}
	(*this)._method_push_err(_126066_i->_field_token,jule::Str("@ data type is not support indexing", 35),jule::Slice<jule::Any>({jule::Any(_126034_d->_field_kind->_method_to_str())}));
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_eval_ident_decl_from_indexing(jule::Ref<_1d1e5192e_IndexingExpr> _129053_i) {
	{
		auto _match_expr{ _129053_i->_field_expr };
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_IdentExpr>>())) { goto _case_end_4715658960; }
		goto _match_end_4715655808;
		_case_end_4715658960:;
		_case_begin_4715656480:;
		{
			this->self->_method_push_err(_129053_i->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1b9523799_Data>();
		}
		goto _match_end_4715655808;
		_case_end_4715656480:;
		_match_end_4715655808:;
	}
	jule::Ref<_1d1e5192e_IdentTypeDecl> _129817_decl = jule::new_struct<_1d1e5192e_IdentTypeDecl>(new( std::nothrow ) _1d1e5192e_IdentTypeDecl(_1d1da4277_Token(),_129053_i->_field_expr.operator jule::Ref<_1d1e5192e_IdentExpr>()->_field_ident,jule::Bool(),jule::Slice<jule::Ref<_1d1e5192e_TypeDecl>>()));
	{
		auto _match_expr{ _129053_i->_field_index };
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_UnaryExpr>>())) { goto _case_end_4715664208; }
		_case_begin_4715664208:;
		{
			jule::Ref<_1b9523799_Data> _130621_d = this->self->_method_eval_unary(_129053_i->_field_index.operator jule::Ref<_1d1e5192e_UnaryExpr>());
			if ((!(_130621_d->_field_decl))) {
				this->self->_method_push_err(_129053_i->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return jule::new_ref<_1b9523799_Data>();
			}
			_129817_decl->_field_generics=jule::append(_129817_decl->_field_generics,jule::Slice<jule::Ref<_1d1e5192e_TypeDecl>>({jule::new_struct<_1d1e5192e_TypeDecl>(new( std::nothrow ) _1d1e5192e_TypeDecl(_1d1da4277_Token(),jule::Any(_130621_d->_field_kind)))}));
		}
		goto _match_end_4715656912;
		_case_end_4715664208:;
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_TypeDecl>>())) { goto _case_end_4715665056; }
		_case_begin_4715665056:;
		{
			_129817_decl->_field_generics=jule::append(_129817_decl->_field_generics,jule::Slice<jule::Ref<_1d1e5192e_TypeDecl>>({_129053_i->_field_index.operator jule::Ref<_1d1e5192e_TypeDecl>()}));
		}
		goto _match_end_4715656912;
		_case_end_4715665056:;
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_IdentExpr>>())) { goto _case_end_4715665168; }
		_case_begin_4715665168:;
		{
			_129817_decl->_field_generics=jule::append(_129817_decl->_field_generics,jule::Slice<jule::Ref<_1d1e5192e_TypeDecl>>({jule::new_struct<_1d1e5192e_TypeDecl>(new( std::nothrow ) _1d1e5192e_TypeDecl(_1d1da4277_Token(),jule::Any(jule::new_struct<_1d1e5192e_IdentTypeDecl>(new( std::nothrow ) _1d1e5192e_IdentTypeDecl(_1d1da4277_Token(),_129053_i->_field_index.operator jule::Ref<_1d1e5192e_IdentExpr>()->_field_ident,jule::Bool(),jule::Slice<jule::Ref<_1d1e5192e_TypeDecl>>())))))}));
		}
		goto _match_end_4715656912;
		_case_end_4715665168:;
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_TupleExpr>>())) { goto _case_end_4715662128; }
		_case_begin_4715662128:;
		{
			{
				auto _range_expr = _129053_i->_field_index.operator jule::Ref<_1d1e5192e_TupleExpr>()->_field_expr;
				if (_range_expr.begin() != _range_expr.end()) {
					auto _range_begin = _range_expr.begin();
					const auto _range_end = _range_expr.end();
					jule::Ref<_1d1e5192e_Expr> _1b9523799_expr = *_range_begin;
					_iter_begin_4715664448:;
					{
						{
							auto _match_expr{ _1b9523799_expr->_field_kind };
							if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_TypeDecl>>())) { goto _case_end_4715680784; }
							_case_begin_4715680784:;
							{
								_129817_decl->_field_generics=jule::append(_129817_decl->_field_generics,jule::Slice<jule::Ref<_1d1e5192e_TypeDecl>>({_1b9523799_expr->_field_kind.operator jule::Ref<_1d1e5192e_TypeDecl>()}));
							}
							goto _match_end_4715671488;
							_case_end_4715680784:;
							if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_IdentExpr>>())) { goto _case_end_4715680896; }
							_case_begin_4715680896:;
							{
								_129817_decl->_field_generics=jule::append(_129817_decl->_field_generics,jule::Slice<jule::Ref<_1d1e5192e_TypeDecl>>({jule::new_struct<_1d1e5192e_TypeDecl>(new( std::nothrow ) _1d1e5192e_TypeDecl(_1d1da4277_Token(),jule::Any(jule::new_struct<_1d1e5192e_IdentTypeDecl>(new( std::nothrow ) _1d1e5192e_IdentTypeDecl(_1d1da4277_Token(),_1b9523799_expr->_field_kind.operator jule::Ref<_1d1e5192e_IdentExpr>()->_field_ident,jule::Bool(),jule::Slice<jule::Ref<_1d1e5192e_TypeDecl>>())))))}));
							}
							goto _match_end_4715671488;
							_case_end_4715680896:;
							_match_end_4715671488:;
						}
					}
					_iter_next_4715664448:;
					++_range_begin;
					if (_range_begin != _range_end) { _1b9523799_expr = *_range_begin; goto _iter_begin_4715664448; }
					_iter_end_4715664448:;
				}
			}
		}
		goto _match_end_4715656912;
		_case_end_4715662128:;
		_case_begin_4715661824:;
		{
			this->self->_method_push_err(_129053_i->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1b9523799_Data>();
		}
		goto _match_end_4715656912;
		_case_end_4715661824:;
		_match_end_4715656912:;
	}
	return this->self->_method_eval_type(jule::new_struct<_1d1e5192e_TypeDecl>(new( std::nothrow ) _1d1e5192e_TypeDecl(_1d1da4277_Token(),jule::Any(_129817_decl))));
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_eval_indexing(jule::Ref<_1d1e5192e_IndexingExpr> _134237_i) {
	jule::Ref<_1b951b088_TypeKind> _134317_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_134317_prefix;
	});
	jule::Ref<_1b9523799_Data> _134717_d = this->self->_method_eval_expr_kind(_134237_i->_field_expr);
	if ((!(jule::real(_134717_d)))) {
		return jule::new_ref<_1b9523799_Data>();
	}
	if (_134717_d->_field_decl) {
		return this->self->_method_eval_ident_decl_from_indexing(_134237_i);
	}
	_1b9523799_Data _135717_old_d = _134717_d;
	jule::Ref<_1b9523799_Data> _135917_index = this->self->_method_eval_expr_kind(_134237_i->_field_index);
	if ((!(jule::real(_135917_index)))) {
		return jule::new_ref<_1b9523799_Data>();
	}
	this->self->_method_to_indexing(_134717_d,_135917_index,_134237_i);
	if (_134717_d->_method_is_const()) {
		_134717_d->_field_model=jule::Any(_134717_d->_field_constant);
	} else {
		_134717_d->_field_model=jule::Any(jule::new_struct<_1b8dbae99_IndexigExprModel>(new( std::nothrow ) _1b8dbae99_IndexigExprModel(jule::new_ref<_1b9523799_Data>(_135717_old_d),_135917_index)));
	}
	return _134717_d;
}



inline std::tuple<jule::Ref<_1b9523799_Data>,jule::Ref<_1b9523799_Data>> _1b9523799_Eval::_method_eval_slicing_exprs(jule::Ref<_1d1e5192e_SlicingExpr> _138142_s) {
	jule::Ref<_1b951b088_TypeKind> _138217_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_138217_prefix;
	});
	jule::Ref<_1b9523799_Data> _138617_l = jule::new_ref<_1b9523799_Data>();
	jule::Ref<_1b9523799_Data> _138717_r = jule::new_ref<_1b9523799_Data>();
	if (_138142_s->_field_start != nullptr) {
		_138617_l=this->self->_method_eval_expr_kind(_138142_s->_field_start);
		if (jule::real(_138617_l)) {
			this->self->_method_check_integer_indexing_by_data(_138617_l,_138142_s->_field_token);
		} else {
			return std::make_tuple(jule::new_ref<_1b9523799_Data>(),jule::new_ref<_1b9523799_Data>());
		}
	} else {
		_138617_l=jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_1b951b088_build_prim_type(jule::Str("i64", 3)))),jule::Ref<_1b951b088_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),_1b9d678e5_Const::_static_method_new_i64(0LL)));
		_138617_l->_field_model=jule::Any(_138617_l->_field_constant);
	}
	if (_138142_s->_field_to != nullptr) {
		_138717_r=this->self->_method_eval_expr_kind(_138142_s->_field_to);
		if (jule::real(_138717_r)) {
			this->self->_method_check_integer_indexing_by_data(_138717_r,_138142_s->_field_token);
		} else {
			return std::make_tuple(jule::new_ref<_1b9523799_Data>(),jule::new_ref<_1b9523799_Data>());
		}
	}
	return std::make_tuple(_138617_l,_138717_r);
}



inline void _1b9523799_Eval::_method_slicing_arr(jule::Ref<_1b9523799_Data> _141630_d) {
	jule::Ref<_1b951b088_TypeKind> _141717_elem_type = _141630_d->_field_kind->_method_arr()->_field_elem->_method_clone();
	_141630_d->_field_kind->_field_kind=jule::new_struct<_1b951b088_Slc>(new( std::nothrow ) _1b951b088_Slc(_141717_elem_type));
	_141630_d->_field_lvalue=false;
	_141630_d->_field_mutable=_141630_d->_field_mutable || (!(_141717_elem_type->_method_mutable()));
}



inline void _1b9523799_Eval::_method_slicing_slc(jule::Ref<_1b9523799_Data> _142730_d) {
	_142730_d->_field_lvalue=false;
}



inline void _1b9523799_Eval::_method_slicing_str(jule::Ref<_1b9523799_Data> _143130_d,jule::Ref<_1b9523799_Data> _143140_l,jule::Ref<_1b9523799_Data> _143150_r) {
	_143130_d->_field_lvalue=false;
	_143130_d->_field_mutable=true;
	if ((!(_143130_d->_method_is_const()))) {
		return;
	}
	if ((!(jule::real(_143140_l))) || (!(jule::real(_143150_r)))) {
		jule::drop(_143130_d->_field_constant);
		return;
	}
	if (_143140_l->_method_is_const() && _143150_r->_method_is_const()) {
		jule::I64 _144417_left = _143140_l->_field_constant->_method_as_i64();
		if (_144417_left < 0LL) {
			return;
		}
		jule::Str _144917_s = _143130_d->_field_constant->_method_read_str();
		jule::I64 _145021_right = 0LL;
		if ((!(jule::real(_143150_r)))) {
			_145021_right=static_cast<jule::I64>(_144917_s.len());
		} else {
			_145021_right=static_cast<jule::I64>(_143150_r->_field_constant->_method_as_i64());
		}
		if (_144417_left > _145021_right) {
			return;
		}
		_143130_d->_field_constant->_method_set_str(_144917_s.slice(static_cast<jule::Int>(_144417_left),static_cast<jule::Int>(_145021_right)));
	} else {
		jule::drop(_143130_d->_field_constant);
	}
}



inline void _1b9523799_Eval::_method_check_slicing(jule::Ref<_1b9523799_Data> _146636_d,jule::Ref<_1b9523799_Data> _146646_l,jule::Ref<_1b9523799_Data> _146656_r,jule::Ref<_1d1e5192e_SlicingExpr> _146666_s) {
	{
		if (!((jule::real(_146636_d->_field_kind->_method_arr())))) { goto _case_end_4715759920; }
		_case_begin_4715759920:;
		{
			(*this)._method_slicing_arr(_146636_d);
			return;
		}
		goto _match_end_4715759664;
		_case_end_4715759920:;
		if (!((jule::real(_146636_d->_field_kind->_method_slc())))) { goto _case_end_4715760048; }
		_case_begin_4715760048:;
		{
			(*this)._method_slicing_slc(_146636_d);
			return;
		}
		goto _match_end_4715759664;
		_case_end_4715760048:;
		if (!((jule::real(_146636_d->_field_kind->_method_prim())))) { goto _case_end_4715760176; }
		_case_begin_4715760176:;
		{
			jule::Ref<_1b951b088_Prim> _147717_prim = _146636_d->_field_kind->_method_prim();
			{
				if (!((_147717_prim->_method_is_str()))) { goto _case_end_4715767728; }
				_case_begin_4715767728:;
				{
					(*this)._method_slicing_str(_146636_d,_146646_l,_146656_r);
					return;
				}
				goto _match_end_4715767568;
				_case_end_4715767728:;
				_match_end_4715767568:;
			}
		}
		goto _match_end_4715759664;
		_case_end_4715760176:;
		_match_end_4715759664:;
	}
	(*this)._method_push_err(_146666_s->_field_token,jule::Str("@ data type is not support slicing", 34),jule::Slice<jule::Any>({jule::Any(_146636_d->_field_kind->_method_to_str())}));
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_eval_slicing(jule::Ref<_1d1e5192e_SlicingExpr> _148836_s) {
	jule::Ref<_1b9523799_Data> _148917_d = this->self->_method_eval_expr_kind(_148836_s->_field_expr);
	if ((!(jule::real(_148917_d)))) {
		return jule::new_ref<_1b9523799_Data>();
	}
	jule::Ref<_1b9523799_Data> _149418_l;
	jule::Ref<_1b9523799_Data> _149425_r;
	std::tie(_149418_l,_149425_r) = this->self->_method_eval_slicing_exprs(_148836_s);
	if ((!(jule::real(_149418_l)))) {
		return _148917_d;
	}
	this->self->_method_check_slicing(_148917_d,_149418_l,_149425_r,_148836_s);
	jule::drop(_148917_d->_field_cast_kind);
	jule::Ref<_1b8dbae99_SlicingExprModel> _150217_model = jule::new_struct<_1b8dbae99_SlicingExprModel>(new( std::nothrow ) _1b8dbae99_SlicingExprModel(_148917_d->_field_model,_149418_l->_field_model,jule::Any()));
	if (jule::real(_149425_r)) {
		_150217_model->_field_right=_149425_r->_field_model;
	}
	_148917_d->_field_model=jule::Any(_150217_model);
	return _148917_d;
}



inline void _1b9523799_Eval::_method_cast_ptr(jule::Ref<_1b951b088_TypeKind> _151527_t,jule::Ref<_1b9523799_Data> _151545_d,_1d1da4277_Token _151555_error_token) {
	if ((!((*this)._method_is_unsafe()))) {
		(*this)._method_push_err(_151555_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>({}));
		return;
	}
	jule::Ref<_1b951b088_Prim> _152113_prim = _151545_d->_field_kind->_method_prim();
	if ((!(jule::real(_151545_d->_field_kind->_method_ptr()))) && ((!(jule::real(_152113_prim))) || (!(_1b9e28c5e_is_int(_152113_prim->_method_to_str()))))) {
		(*this)._method_push_err(_151555_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_151545_d->_field_kind->_method_to_str()),jule::Any(_151527_t->_method_to_str())}));
	}
	jule::drop(_151545_d->_field_constant);
}



inline void _1b9523799_Eval::_method_cast_struct(jule::Ref<_1b951b088_TypeKind> _152934_t,jule::Ref<_1b9523799_Data> _152952_d,_1d1da4277_Token _152962_error_token) {
	jule::Ref<_1b8cd2894_Trait> _153017_tr = _152952_d->_field_kind->_method_trt();
	if ((!(jule::real(_153017_tr)))) {
		(*this)._method_push_err(_152962_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_152952_d->_field_kind->_method_to_str()),jule::Any(_152934_t->_method_to_str())}));
		return;
	}
	jule::Ref<_1d21c0b59_StructIns> _153617_s = jule::new_ref<_1d21c0b59_StructIns>();
	if (jule::real(_152934_t->_method_ref())) {
		_153617_s=_152934_t->_method_ref()->_field_elem->_method_strct();
	} else {
		_153617_s=_152934_t->_method_strct();
	}
	(*this)._method_push_reference_to_struct(_153617_s);
	if ((!(_153617_s->_field_decl->_method_is_implements(_153017_tr)))) {
		(*this)._method_push_err(_152962_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_152952_d->_field_kind->_method_to_str()),jule::Any(_152934_t->_method_to_str())}));
	}
}



inline void _1b9523799_Eval::_method_cast_ref(jule::Ref<_1b951b088_TypeKind> _155031_t,jule::Ref<_1b9523799_Data> _155049_d,_1d1da4277_Token _155059_error_token) {
	jule::Ref<_1b951b088_Ref> _155117_ref = _155031_t->_method_ref();
	if (jule::real(_155117_ref->_field_elem->_method_strct())) {
		(*this)._method_cast_struct(_155031_t,_155049_d,_155059_error_token);
		return;
	}
	(*this)._method_push_err(_155059_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_155049_d->_field_kind->_method_to_str()),jule::Any(_155031_t->_method_to_str())}));
}



inline void _1b9523799_Eval::_method_cast_slc(jule::Ref<_1b951b088_TypeKind> _156031_t,jule::Ref<_1b9523799_Data> _156049_d,_1d1da4277_Token _156059_error_token) {
	if (jule::real(_156049_d->_field_kind->_method_enm())) {
		if ((!(jule::real(_156049_d->_field_kind->_method_enm()->_field_kind->_field_kind->_method_prim()))) || (!(_156049_d->_field_kind->_method_enm()->_field_kind->_field_kind->_method_prim()->_method_is_str()))) {
			(*this)._method_push_err(_156059_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_156049_d->_field_kind->_method_to_str()),jule::Any(_156031_t->_method_to_str())}));
			return;
		}
	} else if ((!(jule::real(_156049_d->_field_kind->_method_prim()))) || (!(_156049_d->_field_kind->_method_prim()->_method_is_str()))) {
		(*this)._method_push_err(_156059_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_156049_d->_field_kind->_method_to_str()),jule::Any(_156031_t->_method_to_str())}));
		return;
	}
	_156031_t=_156031_t->_method_slc()->_field_elem;
	jule::Ref<_1b951b088_Prim> _157213_prim = _156031_t->_method_prim();
	if ((!(jule::real(_157213_prim))) || ((!(_157213_prim->_method_is_u8())) && (!(_157213_prim->_method_is_i32())))) {
		(*this)._method_push_err(_156059_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_156049_d->_field_kind->_method_to_str()),jule::Any(_156031_t->_method_to_str())}));
	}
}



inline void _1b9523799_Eval::_method_cast_str(jule::Ref<_1b9523799_Data> _157831_d,_1d1da4277_Token _157841_error_token) {
	if (jule::real(_157831_d->_field_kind->_method_enm())) {
		jule::Ref<_1b8dae520_Enum> _158021_e = _157831_d->_field_kind->_method_enm();
		if (jule::real(_158021_e->_field_kind->_field_kind->_method_prim()) && _158021_e->_field_kind->_field_kind->_method_prim()->_method_is_str()) {
			return;
		}
	}
	if (jule::real(_157831_d->_field_kind->_method_prim())) {
		jule::Ref<_1b951b088_Prim> _158717_prim = _157831_d->_field_kind->_method_prim();
		if ((!(_158717_prim->_method_is_u8())) && (!(_158717_prim->_method_is_i32()))) {
			(*this)._method_push_err(_157841_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_157831_d->_field_kind->_method_to_str())}));
		}
		return;
	}
	if ((!(jule::real(_157831_d->_field_kind->_method_slc())))) {
		(*this)._method_push_err(_157841_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_157831_d->_field_kind->_method_to_str())}));
		return;
	}
	jule::Ref<_1b951b088_TypeKind> _159917_t = _157831_d->_field_kind->_method_slc()->_field_elem;
	jule::Ref<_1b951b088_Prim> _160013_prim = _159917_t->_method_prim();
	if ((!(jule::real(_160013_prim))) || ((!(_160013_prim->_method_is_u8())) && (!(_160013_prim->_method_is_i32())))) {
		(*this)._method_push_err(_157841_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_157831_d->_field_kind->_method_to_str())}));
	}
}



inline void _1b9523799_Eval::_method_cast_int(jule::Ref<_1b951b088_TypeKind> _160631_t,jule::Ref<_1b9523799_Data> _160649_d,_1d1da4277_Token _160659_error_token) {
	if (_160649_d->_method_is_const()) {
		jule::Ref<_1b951b088_Prim> _160817_prim = _160631_t->_method_prim();
		{
			if (!((_1b9e28c5e_is_sig_int(_160817_prim->_field_kind)))) { goto _case_end_4715880176; }
			_case_begin_4715880176:;
			{
				_160649_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_160649_d->_field_constant->_method_as_i64()));
			}
			goto _match_end_4715880000;
			_case_end_4715880176:;
			if (!((_1b9e28c5e_is_unsig_int(_160817_prim->_field_kind)))) { goto _case_end_4715880304; }
			_case_begin_4715880304:;
			{
				_160649_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_160649_d->_field_constant->_method_as_u64()));
			}
			goto _match_end_4715880000;
			_case_end_4715880304:;
			_match_end_4715880000:;
		}
	}
	if (jule::real(_160649_d->_field_kind->_method_enm())) {
		jule::Ref<_1b8dae520_Enum> _161917_e = _160649_d->_field_kind->_method_enm();
		if (_1b9e28c5e_is_num(_161917_e->_field_kind->_field_kind->_method_to_str())) {
			return;
		}
	}
	if (jule::real(_160649_d->_field_kind->_method_ptr())) {
		jule::Ref<_1b951b088_Prim> _162617_prim = _160631_t->_method_prim();
		if (_162617_prim->_method_is_uintptr()) {
		} else if ((!((*this)._method_is_unsafe()))) {
			(*this)._method_push_err(_160659_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>({}));
		} else if (((((!(_162617_prim->_method_is_i32())) && (!(_162617_prim->_method_is_i64()))) && (!(_162617_prim->_method_is_u16()))) && (!(_162617_prim->_method_is_u32()))) && (!(_162617_prim->_method_is_u64()))) {
			(*this)._method_push_err(_160659_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_160649_d->_field_kind->_method_to_str()),jule::Any(_160631_t->_method_to_str())}));
		}
		return;
	}
	jule::Ref<_1b951b088_Prim> _163713_prim = _160649_d->_field_kind->_method_prim();
	if (jule::real(_163713_prim) && _1b9e28c5e_is_num(_163713_prim->_method_to_str())) {
		return;
	}
	(*this)._method_push_err(_160659_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_160649_d->_field_kind->_method_to_str()),jule::Any(_160631_t->_method_to_str())}));
}



inline void _1b9523799_Eval::_method_cast_num(jule::Ref<_1b951b088_TypeKind> _164531_t,jule::Ref<_1b9523799_Data> _164549_d,_1d1da4277_Token _164559_error_token) {
	if (_164549_d->_method_is_const()) {
		jule::Ref<_1b951b088_Prim> _164717_prim = _164531_t->_method_prim();
		{
			if (!((_1b9e28c5e_is_float(_164717_prim->_field_kind)))) { goto _case_end_4715915888; }
			_case_begin_4715915888:;
			{
				_164549_d->_field_constant->_method_set_f64(static_cast<jule::F64>(_164549_d->_field_constant->_method_as_f64()));
			}
			goto _match_end_4715915696;
			_case_end_4715915888:;
			if (!((_1b9e28c5e_is_sig_int(_164717_prim->_field_kind)))) { goto _case_end_4715916016; }
			_case_begin_4715916016:;
			{
				_164549_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_164549_d->_field_constant->_method_as_i64()));
			}
			goto _match_end_4715915696;
			_case_end_4715916016:;
			if (!((_1b9e28c5e_is_unsig_int(_164717_prim->_field_kind)))) { goto _case_end_4715916144; }
			_case_begin_4715916144:;
			{
				_164549_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_164549_d->_field_constant->_method_as_u64()));
			}
			goto _match_end_4715915696;
			_case_end_4715916144:;
			_match_end_4715915696:;
		}
	}
	if (jule::real(_164549_d->_field_kind->_method_enm())) {
		jule::Ref<_1b8dae520_Enum> _166117_e = _164549_d->_field_kind->_method_enm();
		if (_1b9e28c5e_is_num(_166117_e->_field_kind->_field_kind->_method_to_str())) {
			return;
		}
	}
	jule::Ref<_1b951b088_Prim> _166713_prim = _164549_d->_field_kind->_method_prim();
	if (jule::real(_166713_prim) && _1b9e28c5e_is_num(_166713_prim->_method_to_str())) {
		return;
	}
	(*this)._method_push_err(_164559_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_164549_d->_field_kind->_method_to_str()),jule::Any(_164531_t->_method_to_str())}));
}



inline void _1b9523799_Eval::_method_cast_prim(jule::Ref<_1b951b088_TypeKind> _167532_t,jule::Ref<_1b9523799_Data> _167550_d,_1d1da4277_Token _167560_error_token) {
	jule::Ref<_1b951b088_Prim> _167613_prim = _167532_t->_method_prim();
	{
		if (!((_167613_prim->_method_is_any()))) { goto _case_end_4715939440; }
		goto _match_end_4715938480;
		_case_end_4715939440:;
		if (!((_167613_prim->_method_is_str()))) { goto _case_end_4715938912; }
		_case_begin_4715938912:;
		{
			(*this)._method_cast_str(_167550_d,_167560_error_token);
		}
		goto _match_end_4715938480;
		_case_end_4715938912:;
		if (!((_1b9e28c5e_is_int(_167613_prim->_method_to_str())))) { goto _case_end_4715939024; }
		_case_begin_4715939024:;
		{
			(*this)._method_cast_int(_167532_t,_167550_d,_167560_error_token);
		}
		goto _match_end_4715938480;
		_case_end_4715939024:;
		if (!((_1b9e28c5e_is_num(_167613_prim->_method_to_str())))) { goto _case_end_4715939136; }
		_case_begin_4715939136:;
		{
			(*this)._method_cast_num(_167532_t,_167550_d,_167560_error_token);
		}
		goto _match_end_4715938480;
		_case_end_4715939136:;
		_case_begin_4715938608:;
		{
			(*this)._method_push_err(_167560_error_token,jule::Str("@ data-type not supports casting", 32),jule::Slice<jule::Any>({jule::Any(_167532_t->_method_to_str())}));
		}
		goto _match_end_4715938480;
		_case_end_4715938608:;
		_match_end_4715938480:;
	}
}



inline void _1b9523799_Eval::_method_cast_constant(jule::Ref<_1b951b088_TypeKind>& _169537_t,jule::Ref<_1b9523799_Data>& _169556_d) {
	jule::Ref<_1b951b088_Prim> _169613_prim = _169537_t->_method_prim();
	if ((!(jule::real(_169613_prim))) || (!(_169556_d->_method_is_const()))) {
		return;
	}
	{
		if (!((_1b9e28c5e_is_sig_int(_169613_prim->_field_kind)))) { goto _case_end_4715953696; }
		_case_begin_4715953696:;
		{
			_169556_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_169556_d->_field_constant->_method_as_i64()));
		}
		goto _match_end_4715953376;
		_case_end_4715953696:;
		if (!((_1b9e28c5e_is_unsig_int(_169613_prim->_field_kind)))) { goto _case_end_4715953808; }
		_case_begin_4715953808:;
		{
			_169556_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_169556_d->_field_constant->_method_as_u64()));
		}
		goto _match_end_4715953376;
		_case_end_4715953808:;
		if (!((_1b9e28c5e_is_float(_169613_prim->_field_kind)))) { goto _case_end_4715953920; }
		_case_begin_4715953920:;
		{
			_169556_d->_field_constant->_method_set_f64(static_cast<jule::F64>(_169556_d->_field_constant->_method_as_f64()));
		}
		goto _match_end_4715953376;
		_case_end_4715953920:;
		_match_end_4715953376:;
	}
	_169556_d->_field_model=jule::Any(_169556_d->_field_constant);
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_eval_cast_by_type_n_data(jule::Ref<_1b951b088_TypeKind> _171547_t,jule::Ref<_1b9523799_Data> _171565_d,_1d1da4277_Token _171575_error_token) {
	{
		if (!((jule::real(_171565_d->_field_kind->_method_prim()) && _171565_d->_field_kind->_method_prim()->_method_is_any()))) { goto _case_end_4715970080; }
		_case_begin_4715970080:;
		{
			if (jule::real(_171547_t->_method_enm())) {
				(*this)._method_push_err(_171575_error_token,jule::Str("enum cannot casted from any type", 32),jule::Slice<jule::Any>({}));
				(*this)._method_push_suggestion(jule::Str("try cast to type of enum fields instead of enum", 47),jule::Slice<jule::Any>({}));
			}
		}
		goto _match_end_4715966800;
		_case_end_4715970080:;
		if (!((jule::real(_171547_t->_method_ptr())))) { goto _case_end_4715967248; }
		_case_begin_4715967248:;
		{
			(*this)._method_cast_ptr(_171547_t,_171565_d,_171575_error_token);
		}
		goto _match_end_4715966800;
		_case_end_4715967248:;
		if (!((jule::real(_171547_t->_method_ref())))) { goto _case_end_4715967360; }
		_case_begin_4715967360:;
		{
			(*this)._method_cast_ref(_171547_t,_171565_d,_171575_error_token);
		}
		goto _match_end_4715966800;
		_case_end_4715967360:;
		if (!((jule::real(_171547_t->_method_slc())))) { goto _case_end_4715967472; }
		_case_begin_4715967472:;
		{
			(*this)._method_cast_slc(_171547_t,_171565_d,_171575_error_token);
		}
		goto _match_end_4715966800;
		_case_end_4715967472:;
		if (!((jule::real(_171547_t->_method_strct())))) { goto _case_end_4715970544; }
		_case_begin_4715970544:;
		{
			(*this)._method_cast_struct(_171547_t,_171565_d,_171575_error_token);
		}
		goto _match_end_4715966800;
		_case_end_4715970544:;
		if (!((jule::real(_171547_t->_method_prim())))) { goto _case_end_4715970656; }
		_case_begin_4715970656:;
		{
			(*this)._method_cast_prim(_171547_t,_171565_d,_171575_error_token);
		}
		goto _match_end_4715966800;
		_case_end_4715970656:;
		_case_begin_4715966944:;
		{
			(*this)._method_push_err(_171575_error_token,jule::Str("@ data-type not supports casting", 32),jule::Slice<jule::Any>({jule::Any(_171547_t->_method_to_str())}));
			jule::drop(_171565_d);
		}
		goto _match_end_4715966800;
		_case_end_4715966944:;
		_match_end_4715966800:;
	}
	if ((!(jule::real(_171565_d)))) {
		return jule::new_ref<_1b9523799_Data>();
	}
	_171565_d->_field_mutable=_171565_d->_field_mutable || ((!(_171565_d->_field_kind->_method_mutable())) && _171547_t->_method_mutable());
	_171565_d->_field_lvalue=_171547_t->_method_lvalue();
	_171565_d->_field_decl=false;
	(*this)._method_cast_constant(_171547_t,_171565_d);
	if ((!(jule::real(_171565_d->_field_kind->_method_enm()))) || (_171565_d->_field_kind->_method_enm()->_field_kind->_field_kind->_method_to_str() != _171547_t->_method_to_str())) {
		_171565_d->_field_cast_kind=_171547_t;
	} else {
		_171565_d->_field_kind=_171547_t;
	}
	return _171565_d;
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_eval_cast(jule::Ref<_1d1e5192e_CastExpr> _176533_c) {
	jule::Ref<_1b951b088_TypeSymbol> _176617_t = _1b8b10cbb_build_type(_176533_c->_field_kind);
	jule::Bool _176713_ok = this->self->_field_s->_method_check_type(_176617_t,this->self->_field_lookup);
	if ((!(_176713_ok))) {
		return jule::new_ref<_1b9523799_Data>();
	}
	jule::Ref<_1b951b088_TypeKind> _177217_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_177217_prefix;
	});
	jule::Ref<_1b9523799_Data> _177617_d = this->self->_method_eval_expr_kind(_176533_c->_field_expr);
	if ((!(jule::real(_177617_d)))) {
		return jule::new_ref<_1b9523799_Data>();
	}
	_177617_d=this->self->_method_eval_cast_by_type_n_data(_176617_t->_field_kind,_177617_d,_176533_c->_field_kind->_field_token);
	return _177617_d;
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_eval_ns_selection(jule::Ref<_1d1e5192e_NsSelectionExpr> _178636_s) {
	jule::Str _178713_path = _1b951b088_build_link_path_by_tokens(_178636_s->_field_ns);
	jule::Ref<_1b8e0c01d_ImportInfo> _178817_imp = (*this)._field_lookup.get()._method_select_package(jule::Fn<jule::Bool(jule::Ref<_1b8e0c01d_ImportInfo>)>([=](jule::Ref<_1b8e0c01d_ImportInfo> _178853_p) mutable -> jule::Bool {
		if ((_178636_s->_field_ns.len() == 1LL) && (_178853_p->_field_alias == _178713_path)) {
			return true;
		}
		return _178853_p->_field_link_path == _178713_path;
	}));
	if ((!(jule::real(_178817_imp))) || (!(_178817_imp->_method_is_lookupable(jule::Str("self", 4))))) {
		(*this)._method_push_err(_178636_s->_field_ident,jule::Str("namespace not exist: @", 22),jule::Slice<jule::Any>({jule::Any(_178713_path)}));
		return jule::new_ref<_1b9523799_Data>();
	}
	jule::Trait<_1b9a5b012_Lookup> _180017_lookup = (*this)._field_lookup;
	(*this)._field_lookup=_178817_imp;
	
	jule::Any _180417_def = (*this)._method_get_def(_178636_s->_field_ident._field_kind,false);
	(*this)._field_lookup=_180017_lookup;
	jule::Ref<_1b9523799_Data> _180717_d = (*this)._method_eval_def(_180417_def,_178636_s->_field_ident);
	return _180717_d;
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_eval_struct_lit_explicit(jule::Ref<_1d21c0b59_StructIns> _181248_s,jule::Slice<jule::Any> _181313_exprs,_1d1da4277_Token _181336_error_token) {
	jule::Bool _181413_ok = this->self->_field_s->_method_check_generic_quantity(static_cast<jule::I64>(_181248_s->_field_decl->_field_generics.len()),static_cast<jule::I64>(_181248_s->_field_generics.len()),_181336_error_token);
	if ((!(_181413_ok))) {
		return jule::new_ref<_1b9523799_Data>();
	}
	this->self->_method_push_reference_to_struct(_181248_s);
	_1b9176ba0_StructLitChecker _182217_slc = _1b9176ba0_StructLitChecker(this->self,_181336_error_token,_181248_s,jule::Slice<jule::Ref<_1b8dbae99_StructArgExprModel>>());
	_182217_slc._method_check(_181313_exprs);
	return jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_181248_s)),jule::Ref<_1b951b088_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1b8dbae99_StructLitExprModel>(new( std::nothrow ) _1b8dbae99_StructLitExprModel(_181248_s,_182217_slc._field_args))),jule::Bool(),jule::Ref<_1b9d678e5_Const>()));
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_eval_struct_lit(jule::Ref<_1d1e5192e_StructLit> _183939_lit) {
	jule::Ref<_1b951b088_TypeSymbol> _184017_t = _1b8b10cbb_build_type(_183939_lit->_field_kind);
	jule::Bool _184113_ok = this->self->_field_s->_method_check_type(_184017_t,this->self->_field_lookup);
	if ((!(_184113_ok))) {
		return jule::new_ref<_1b9523799_Data>();
	}
	jule::Ref<_1d21c0b59_StructIns> _184617_s = _184017_t->_field_kind->_method_strct();
	if ((!(jule::real(_184617_s)))) {
		this->self->_method_push_err(_183939_lit->_field_kind->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b9523799_Data>();
	}
	return this->self->_method_eval_struct_lit_explicit(_184617_s,_183939_lit->_field_exprs,_183939_lit->_field_kind->_field_token);
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_eval_type(jule::Ref<_1d1e5192e_TypeDecl> _185532_t) {
	jule::Ref<_1b951b088_TypeSymbol> _185617_tk = _1b8b10cbb_build_type(_185532_t);
	jule::Bool _185713_ok = (*this)._field_s->_method_check_type(_185617_tk,(*this)._field_lookup);
	if ((!(_185713_ok))) {
		return jule::new_ref<_1b9523799_Data>();
	}
	return jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(_185617_tk->_field_kind,jule::Ref<_1b951b088_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_185617_tk->_field_kind),true,jule::Ref<_1b9d678e5_Const>()));
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_call_type_fn(jule::Ref<_1d1e5192e_FnCallExpr> _186936_fc,jule::Ref<_1b9523799_Data> _186957_d) {
	if (_186936_fc->_field_generics.len() > 0LL) {
		this->self->_method_push_err(_186936_fc->_field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_186957_d->_field_kind->_method_to_str())}));
	} else if (_186936_fc->_field_args.len() < 1LL) {
		this->self->_method_push_err(_186936_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("v", 1))}));
	} else if (_186936_fc->_field_args.len() > 1LL) {
		this->self->_method_push_err(_186936_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	if (_186936_fc->_field_args.len() > 0LL) {
		jule::Ref<_1b9523799_Data> _187921_arg = this->self->_method_eval_expr_kind(_186936_fc->_field_args[0LL]->_field_kind);
		if (jule::real(_187921_arg)) {
			_186957_d=this->self->_method_eval_cast_by_type_n_data(_186957_d->_field_kind,_187921_arg,_186936_fc->_field_args[0LL]->_field_token);
		}
	}
	_186957_d->_field_decl=false;
	return _186957_d;
}



inline std::tuple<jule::Bool,jule::Bool> _1b9523799_Eval::_method_check_fn_call_generics(jule::Ref<_1d21d97ee_FnIns> _189045_f,jule::Ref<_1d1e5192e_FnCallExpr> _189113_fc) {
	jule::Bool _189132_ok = jule::Bool();
	jule::Bool _189142_dynamic_annotation = jule::Bool();
	{
		if (!((((_189045_f->_field_decl->_field_generics.len() > 0LL) && (_189113_fc->_field_generics.len() == 0LL)) && (_189045_f->_field_params.len() > 0LL)))) { goto _case_end_4716099568; }
		_case_begin_4716099568:;
		{
			_189142_dynamic_annotation=true;
			_189045_f->_field_generics=jule::Slice<jule::Ref<_1b951b088_TypeKind>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_189045_f->_field_decl->_field_generics.len())));
			_189132_ok = true;
			_189142_dynamic_annotation = true;
			return std::make_tuple(_189132_ok,_189142_dynamic_annotation);
		}
		goto _match_end_4716087296;
		_case_end_4716099568:;
		if (!(((!((*this)._field_s->_method_check_generic_quantity(static_cast<jule::I64>(_189045_f->_field_decl->_field_generics.len()),static_cast<jule::I64>(_189113_fc->_field_generics.len()),_189113_fc->_field_token)))))) { goto _case_end_4716092480; }
		_case_begin_4716092480:;
		{
			_189132_ok = false;
			_189142_dynamic_annotation = false;
			return std::make_tuple(_189132_ok,_189142_dynamic_annotation);
		}
		goto _match_end_4716087296;
		_case_end_4716092480:;
		_case_begin_4716087488:;
		{
			_189045_f->_field_generics=jule::Slice<jule::Ref<_1b951b088_TypeKind>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_189045_f->_field_decl->_field_generics.len())));
			{
				auto _range_expr = _189113_fc->_field_generics;
				if (_range_expr.begin() != _range_expr.end()) {
					auto _range_begin = _range_expr.begin();
					const auto _range_end = _range_expr.end();
					jule::Int _1b9523799_i = 0;
					jule::Ref<_1d1e5192e_TypeDecl> _1b9523799_g = *_range_begin;
					_iter_begin_4716091264:;
					{
						jule::Ref<_1b951b088_TypeSymbol> _190625_k = _1b8b10cbb_build_type(_1b9523799_g);
						_189132_ok=(*this)._field_s->_method_check_type(_190625_k,(*this)._field_lookup);
						if ((!(_189132_ok))) {
							_189132_ok = false;
							_189142_dynamic_annotation = false;
							return std::make_tuple(_189132_ok,_189142_dynamic_annotation);
						}
						_189045_f->_field_generics[static_cast<jule::Int>(_1b9523799_i)]=_190625_k->_field_kind;
					}
					_iter_next_4716091264:;
					++_range_begin;
					if (_range_begin != _range_end) { ++_1b9523799_i; _1b9523799_g = *_range_begin; goto _iter_begin_4716091264; }
					_iter_end_4716091264:;
				}
			}
			_189132_ok = true;
			_189142_dynamic_annotation = false;
			return std::make_tuple(_189132_ok,_189142_dynamic_annotation);
		}
		goto _match_end_4716087296;
		_case_end_4716087488:;
		_match_end_4716087296:;
	}
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_call_builtin_fn(jule::Ref<_1d1e5192e_FnCallExpr> _191839_fc,jule::Ref<_1b9523799_Data> _191860_d) {
	jule::Ref<_1d21d97ee_FnIns> _191917_f = _191860_d->_field_kind->_method_fnc();
	_191860_d=_191917_f->_field_caller(this->self,_191839_fc,_191860_d);
	if ((!(jule::real(_191860_d)))) {
		return jule::new_ref<_1b9523799_Data>();
	}
	_191860_d->_field_mutable=true;
	return _191860_d;
}



inline void _1b9523799_Eval::_method_check_fn_of_concurrent_call(jule::Ref<_1d21d97ee_FnIns>& _193047_f,_1d1da4277_Token _193058_error_token) {
	if ((*this)._method_is_unsafe()) {
		return;
	}
	{
		auto _range_expr = _193047_f->_field_params;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d21d97ee_ParamIns> _1b9523799_p = *_range_begin;
			_iter_begin_4716121712:;
			{
				if (_1b9523799_p->_field_decl->_field_reference) {
					(*this)._method_push_err(_193058_error_token,jule::Str("concurrent calls does not support functions which is has reference parameter(s)", 79),jule::Slice<jule::Any>({}));
					return;
				}
			}
			_iter_next_4716121712:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b9523799_p = *_range_begin; goto _iter_begin_4716121712; }
			_iter_end_4716121712:;
		}
	}
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_call_fn(jule::Ref<_1d1e5192e_FnCallExpr> _194331_fc,jule::Ref<_1b9523799_Data> _194352_d) {
	jule::Ref<_1d21d97ee_FnIns> _194417_f = _194352_d->_field_kind->_method_fnc();
	if (_194417_f->_method_is_builtin()) {
		return this->self->_method_call_builtin_fn(_194331_fc,_194352_d);
	}
	if (_194331_fc->_field_concurrent) {
		this->self->_method_check_fn_of_concurrent_call(_194417_f,_194331_fc->_field_token);
	}
	if ((((!(_194352_d->_field_mutable)) && _194417_f->_field_decl->_method_is_method()) && (!(_194417_f->_field_decl->_field_statically))) && _194417_f->_field_decl->_field_params[0LL]->_field_mutable) {
		this->self->_method_push_err(_194331_fc->_field_token,jule::Str("mutable operation cannot used with immutable define", 51),jule::Slice<jule::Any>({}));
	} else if ((!(this->self->_method_is_unsafe())) && _194417_f->_field_decl->_field_unsafety) {
		this->self->_method_push_err(_194331_fc->_field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>({}));
	}
	jule::Bool _195918_ok;
	jule::Bool _195922_dynamic_annotation;
	std::tie(_195918_ok,_195922_dynamic_annotation) = this->self->_method_check_fn_call_generics(_194417_f,_194331_fc);
	if ((!(_195918_ok))) {
		return jule::new_ref<_1b9523799_Data>();
	}
	jule::Ref<_1b912748b_Sema> _196417_old = this->self->_field_s;
	if (jule::real(_194417_f->_field_decl->_field_owner)) {
		this->self->_field_s=_194417_f->_field_decl->_field_owner->_field_sema;
	}
	__JULE_DEFER({
		if ((_196417_old).alloc != (this->self->_field_s).alloc) {
			_196417_old->_field_errors=jule::append(_196417_old->_field_errors,this->self->_field_s->_field_errors);
			this->self->_field_s->_field_errors=nullptr;
		}
		this->self->_field_s=_196417_old;
	});
	if ((!(_195922_dynamic_annotation))) {
		if ((!(_194417_f->_field_reloaded))) {
			_195918_ok=this->self->_field_s->_method_reload_fn_ins_types(_194417_f);
			if ((!(_195918_ok))) {
				return jule::new_ref<_1b9523799_Data>();
			}
			_194417_f->_field_reloaded=true;
		}
	} else {
		this->self->_field_s->_method_build_fn_non_generic_type_kinds(_194417_f);
	}
	_1b9176ba0_FnCallArgChecker _198917_fcac = _1b9176ba0_FnCallArgChecker(this->self,_194331_fc->_field_args,_194331_fc->_field_token,_194417_f,_195922_dynamic_annotation,jule::Slice<jule::Any>());
	if (jule::real(_194417_f->_field_decl->_field_owner)) {
		std::tie(_196417_old,this->self->_field_s) = std::make_tuple(this->self->_field_s,_196417_old);
		_195918_ok=_198917_fcac._method_check();
		std::tie(_196417_old,this->self->_field_s) = std::make_tuple(this->self->_field_s,_196417_old);
	} else {
		_195918_ok=_198917_fcac._method_check();
	}
	if ((!(_195918_ok)) && _195922_dynamic_annotation) {
		return jule::new_ref<_1b9523799_Data>();
	}
	jule::Bool _200814_is_unique_ins;
	jule::Int _200829_pos;
	std::tie(_200814_is_unique_ins,_200829_pos) = _194417_f->_field_decl->_method_append_instance(_194417_f);
	if ((!(_200814_is_unique_ins))) {
		_194417_f=_194417_f->_field_decl->_field_instances[static_cast<jule::Int>(_200829_pos)];
	}
	jule::Any _201317_call_model = _194352_d->_field_model;
	if (_194417_f->_field_decl->_method_is_void()) {
		_194352_d=_1b9523799_build_void_data();
	} else {
		if (_195922_dynamic_annotation) {
			_195918_ok=this->self->_field_s->_method_reload_fn_ins_types(_194417_f);
			if ((!(_195918_ok))) {
				return jule::new_ref<_1b9523799_Data>();
			}
			_194417_f->_field_reloaded=true;
		}
		_194352_d->_field_kind=_194417_f->_field_result;
		_194352_d->_field_lvalue=_194417_f->_field_result->_method_lvalue();
	}
	_194352_d->_field_mutable=true;
	_194352_d->_field_model=jule::Any(jule::new_struct<_1b8dbae99_FnCallExprModel>(new( std::nothrow ) _1b8dbae99_FnCallExprModel(_194417_f,_194331_fc->_field_concurrent,_201317_call_model,_198917_fcac._field_arg_models)));
	if ((_194417_f->_field_generics.len() > 0LL) && _200814_is_unique_ins) {
		this->self->_field_s->_method_check_fn_ins(_194417_f);
	}
	return _194352_d;
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_eval_fn_call(jule::Ref<_1d1e5192e_FnCallExpr> _204636_fc) {
	jule::Ref<_1b951b088_TypeKind> _204717_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_204717_prefix;
	});
	jule::Ref<_1b9523799_Data> _205117_d = this->self->_method_eval_expr_kind(_204636_fc->_field_expr->_field_kind);
	if ((!(jule::real(_205117_d)))) {
		return jule::new_ref<_1b9523799_Data>();
	}
	if (_205117_d->_field_decl) {
		return this->self->_method_call_type_fn(_204636_fc,_205117_d);
	}
	if ((!(jule::real(_205117_d->_field_kind->_method_fnc())))) {
		this->self->_method_push_err(_204636_fc->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b9523799_Data>();
	}
	return this->self->_method_call_fn(_204636_fc,_205117_d);
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_eval_enum_static(jule::Ref<_1b8dae520_Enum> _206839_enm,_1d1da4277_Token _206851_ident) {
	jule::Ref<_1b9523799_Data> _206917_d = jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_206839_enm)),jule::Ref<_1b951b088_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),false,jule::Ref<_1b9d678e5_Const>()));
	jule::Ref<_1b8dae520_EnumItem> _207617_item = _206839_enm->_method_find_item(_206851_ident._field_kind);
	if ((!(jule::real(_207617_item)))) {
		(*this)._method_push_err(_206851_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_206851_ident._field_kind)}));
	} else {
		_206917_d->_field_constant=jule::new_ref<_1b9d678e5_Const>(_207617_item->_field_value->_field_data->_field_constant.get());
		_206917_d->_field_model=jule::Any(_206917_d->_field_constant);
	}
	return _206917_d;
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_eval_struct_static(jule::Ref<_1d21c0b59_StructIns> _208741_s,_1d1da4277_Token _208756_ident) {
	jule::Ref<_1b9523799_Data> _208817_d = jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::Ref<_1b951b088_TypeKind>(),jule::Ref<_1b951b088_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),false,jule::Ref<_1b9d678e5_Const>()));
	
	jule::Ref<_1d21d97ee_Fn> _209617_method = _208741_s->_method_find_method(_208756_ident._field_kind,true);
	if (jule::real(_209617_method)) {
		jule::Ref<_1d21d97ee_FnIns> _209821_ins = _209617_method->_method_instance();
		_209821_ins->_field_owner=_208741_s;
		(*this)._method_push_reference_to_fn(_209821_ins);
		_208817_d->_field_model=jule::Any(jule::new_struct<_1b8dbae99_StructStaticIdentExprModel>(new( std::nothrow ) _1b8dbae99_StructStaticIdentExprModel(_208741_s,_208817_d->_field_model,_209821_ins)));
		_208817_d->_field_kind=jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_209821_ins));
		return _208817_d;
	}
	jule::Ref<_1b919cb2c_Var> _211017_sttc = _208741_s->_field_decl->_method_find_static(_208756_ident._field_kind);
	if (jule::real(_211017_sttc)) {
		return (*this)._method_eval_var(_211017_sttc,_208756_ident);
	}
	(*this)._method_push_err(_208756_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_208756_ident._field_kind)}));
	return jule::new_ref<_1b9523799_Data>();
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_eval_trait_sub_ident(jule::Ref<_1b9523799_Data> _211943_d,jule::Ref<_1b8cd2894_Trait> _211957_trt,_1d1da4277_Token _211970_ident) {
	jule::Ref<_1d21d97ee_Fn> _212017_f = _211957_trt->_method_find_method(_211970_ident._field_kind);
	if ((!(jule::real(_212017_f)))) {
		(*this)._method_push_err(_211970_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_211970_ident._field_kind)}));
		return jule::new_ref<_1b9523799_Data>();
	}
	jule::Any _212617_model = jule::Any(nullptr);
	if ((_211957_trt).alloc == (_1b9c0b525_BUILTIN_TRAIT_ERROR).alloc) {
		_212617_model=jule::Any(jule::new_struct<_1b8dbae99_BuiltinErrorTraitSubIdentExprModel>(new( std::nothrow ) _1b8dbae99_BuiltinErrorTraitSubIdentExprModel(_211943_d->_field_model,_211970_ident._field_kind)));
	} else {
		_212617_model=jule::Any(jule::new_struct<_1b8dbae99_TraitSubIdentExprModel>(new( std::nothrow ) _1b8dbae99_TraitSubIdentExprModel(_211943_d->_field_model,_211970_ident._field_kind)));
	}
	return jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_212017_f->_method_instance())),jule::Ref<_1b951b088_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),_212617_model,false,jule::Ref<_1b9d678e5_Const>()));
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_eval_struct_sub_ident(jule::Ref<_1b9523799_Data> _214844_d,jule::Ref<_1d21c0b59_StructIns> _214858_s,jule::Ref<_1d1e5192e_SubIdentExpr> _214873_si,jule::Bool _214892_ref) {
	jule::Ref<_1d21c0b59_FieldIns> _214917_f = _214858_s->_method_find_field(_214873_si->_field_ident._field_kind);
	if (jule::real(_214917_f)) {
		if ((!((*this)._field_s->_method_is_accessible_define(_214917_f->_field_decl->_field_public,_214917_f->_field_decl->_field_token)))) {
			(*this)._method_push_err(_214873_si->_field_ident,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_214917_f->_field_decl->_field_ident)}));
			(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>({}));
		}
		jule::Ref<_1b8dbae99_StructSubIdentExprModel> _215621_model = jule::new_struct<_1b8dbae99_StructSubIdentExprModel>(new( std::nothrow ) _1b8dbae99_StructSubIdentExprModel(_214844_d->_field_model,_214844_d->_field_kind,jule::Ref<_1d21d97ee_FnIns>(),_214917_f));
		_214844_d->_field_model=jule::Any(_215621_model);
		_214844_d->_field_kind=_214917_f->_field_kind->_method_clone();
		if (_214917_f->_field_decl->_field_mutable && (!(_214844_d->_field_mutable))) {
			{
				auto _match_expr{ (*this)._field_lookup };
				if (!(_match_expr.type_is<jule::Ref<_1b8cd2c4b_ScopeChecker>>())) { goto _case_end_4716256192; }
				_case_begin_4716256192:;
				{
					jule::Ref<_1b8cd2c4b_ScopeChecker> _216825_scope = (*this)._field_lookup.operator jule::Ref<_1b8cd2c4b_ScopeChecker>()->_method_get_root();
					_214844_d->_field_mutable=jule::real(_216825_scope->_field_owner) && ((_216825_scope->_field_owner->_field_owner).alloc == (_214858_s).alloc);
					if (_214844_d->_field_mutable) {
						jule::Ref<_1b919cb2c_Var> _217133_field = _215621_model->_field_expr.operator jule::Ref<_1b919cb2c_Var>();
						jule::Ref<_1b919cb2c_Var> _217233_v = jule::new_struct<_1b919cb2c_Var>(new( std::nothrow ) _1b919cb2c_Var(_217133_field->_field_scope,_217133_field->_field_token,_217133_field->_field_ident,_217133_field->_field_cpp_linked,_217133_field->_field_constant,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Str(),_217133_field->_field_kind,_217133_field->_field_value,jule::Ref<_1b8b10cbb_ReferenceStack>(),jule::Slice<jule::Ref<_1d1e5192e_Directive>>(),jule::Slice<jule::Ref<_1b919cb2c_Var>>()));
						_217233_v->_field_mutable=true;
						_215621_model->_field_expr=jule::Any(_217233_v);
					}
				}
				goto _match_end_4716254304;
				_case_end_4716256192:;
				_match_end_4716254304:;
			}
		}
		return _214844_d;
	}
	
	jule::Ref<_1d21d97ee_Fn> _219117_m = _214858_s->_method_find_method(_214873_si->_field_ident._field_kind,false);
	if ((!(jule::real(_219117_m)))) {
		(*this)._method_push_err(_214873_si->_field_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_214873_si->_field_ident._field_kind)}));
		return jule::new_ref<_1b9523799_Data>();
	}
	if (_219117_m->_field_params[0LL]->_method_is_ref() && (!(_214892_ref))) {
		(*this)._method_push_err(_214873_si->_field_ident,jule::Str("reference method cannot use with non-reference instance", 55),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1d21d97ee_FnIns> _220217_ins = _219117_m->_method_instance();
	_220217_ins->_field_owner=_214858_s;
	(*this)._method_push_reference_to_fn(_220217_ins);
	_214844_d->_field_model=jule::Any(jule::new_struct<_1b8dbae99_StructSubIdentExprModel>(new( std::nothrow ) _1b8dbae99_StructSubIdentExprModel(_214844_d->_field_model,_214844_d->_field_kind,_220217_ins,jule::Ref<_1d21c0b59_FieldIns>())));
	_214844_d->_field_kind=jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_220217_ins));
	return _214844_d;
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_eval_slice_sub_ident(jule::Ref<_1b9523799_Data> _221443_d,_1d1da4277_Token _221453_ident) {
	{
		auto _match_expr{ _221453_ident._field_kind };
		if (!((jule::Str("len", 3)) == _match_expr)) { goto _case_end_4716288912; }
		_case_begin_4716288912:;
		{
			return jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_1b951b088_build_prim_type(jule::Str("i64", 3)))),jule::Ref<_1b951b088_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1b8dbae99_CommonSubIdentExprModel>(new( std::nothrow ) _1b8dbae99_CommonSubIdentExprModel(_221443_d->_field_kind,_221443_d->_field_model,jule::Str("len()", 5)))),jule::Bool(),jule::Ref<_1b9d678e5_Const>()));
		}
		goto _match_end_4716284816;
		_case_end_4716288912:;
		if (!((jule::Str("cap", 3)) == _match_expr)) { goto _case_end_4716289488; }
		_case_begin_4716289488:;
		{
			return jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_1b951b088_build_prim_type(jule::Str("i64", 3)))),jule::Ref<_1b951b088_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1b8dbae99_CommonSubIdentExprModel>(new( std::nothrow ) _1b8dbae99_CommonSubIdentExprModel(_221443_d->_field_kind,_221443_d->_field_model,jule::Str("cap()", 5)))),jule::Bool(),jule::Ref<_1b9d678e5_Const>()));
		}
		goto _match_end_4716284816;
		_case_end_4716289488:;
		_case_begin_4716285424:;
		{
			(*this)._method_push_err(_221453_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_221453_ident._field_kind)}));
			return jule::new_ref<_1b9523799_Data>();
		}
		goto _match_end_4716284816;
		_case_end_4716285424:;
		_match_end_4716284816:;
	}
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_eval_array_sub_ident(jule::Ref<_1b9523799_Data> _224443_d,_1d1da4277_Token _224453_ident) {
	{
		auto _match_expr{ _224453_ident._field_kind };
		if (!((jule::Str("len", 3)) == _match_expr)) { goto _case_end_4716302384; }
		_case_begin_4716302384:;
		{
			jule::Ref<_1b9d678e5_Const> _224721_c = _1b9d678e5_Const::_static_method_new_i64(static_cast<jule::I64>(_224443_d->_field_kind->_method_arr()->_field_n));
			return jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_1b951b088_build_prim_type(jule::Str("i64", 3)))),jule::Ref<_1b951b088_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_224721_c),jule::Bool(),_224721_c));
		}
		goto _match_end_4716298288;
		_case_end_4716302384:;
		_case_begin_4716298896:;
		{
			(*this)._method_push_err(_224453_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_224453_ident._field_kind)}));
			return jule::new_ref<_1b9523799_Data>();
		}
		goto _match_end_4716298288;
		_case_end_4716298896:;
		_match_end_4716298288:;
	}
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_eval_map_sub_ident(jule::Ref<_1b9523799_Data> _226141_d,_1d1da4277_Token _226151_ident) {
	{
		auto _match_expr{ _226151_ident._field_kind };
		if (!((jule::Str("len", 3)) == _match_expr)) { goto _case_end_4716313664; }
		_case_begin_4716313664:;
		{
			return jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_1b951b088_build_prim_type(jule::Str("i64", 3)))),jule::Ref<_1b951b088_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1b8dbae99_CommonSubIdentExprModel>(new( std::nothrow ) _1b8dbae99_CommonSubIdentExprModel(_226141_d->_field_kind,_226141_d->_field_model,jule::Str("len()", 5)))),jule::Bool(),jule::Ref<_1b9d678e5_Const>()));
		}
		goto _match_end_4716308992;
		_case_end_4716313664:;
		if (!((jule::Str("clear", 5)) == _match_expr)) { goto _case_end_4716312880; }
		_case_begin_4716312880:;
		{
			return jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1d21d97ee_FnIns>(new( std::nothrow ) _1d21d97ee_FnIns(jule::Ref<_1d21c0b59_StructIns>(),jule::Ref<_1d21d97ee_Fn>(),jule::Slice<jule::Ref<_1b951b088_TypeKind>>(),jule::Slice<jule::Ref<_1d21d97ee_ParamIns>>(),jule::Ref<_1b951b088_TypeKind>(),jule::Ref<_1b8cd2c4b_Scope>(),jule::Ref<_1b8b10cbb_ReferenceStack>(),jule::Ref<_1b8b10cbb_ReferenceStack>(),jule::Fn<jule::Ref<_1b9523799_Data>(jule::Ref<_1b9523799_Eval>&,jule::Ref<_1d1e5192e_FnCallExpr>&,jule::Ref<_1b9523799_Data>&)>(_1b9c0b525_builtin_caller_common_mut),jule::Bool(),jule::Bool())))),jule::Ref<_1b951b088_TypeKind>(),_226141_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1b8dbae99_CommonSubIdentExprModel>(new( std::nothrow ) _1b8dbae99_CommonSubIdentExprModel(_226141_d->_field_kind,_226141_d->_field_model,jule::Str("clear", 5)))),jule::Bool(),jule::Ref<_1b9d678e5_Const>()));
		}
		goto _match_end_4716308992;
		_case_end_4716312880:;
		if (!((jule::Str("keys", 4)) == _match_expr)) { goto _case_end_4716313328; }
		_case_begin_4716313328:;
		{
			jule::Ref<_1b951b088_Map> _229021_m = _226141_d->_field_kind->_method_map();
			return jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1d21d97ee_FnIns>(new( std::nothrow ) _1d21d97ee_FnIns(jule::Ref<_1d21c0b59_StructIns>(),jule::Ref<_1d21d97ee_Fn>(),jule::Slice<jule::Ref<_1b951b088_TypeKind>>(),jule::Slice<jule::Ref<_1d21d97ee_ParamIns>>(),jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1b951b088_Slc>(new( std::nothrow ) _1b951b088_Slc(_229021_m->_field_key)))),jule::Ref<_1b8cd2c4b_Scope>(),jule::Ref<_1b8b10cbb_ReferenceStack>(),jule::Ref<_1b8b10cbb_ReferenceStack>(),jule::Fn<jule::Ref<_1b9523799_Data>(jule::Ref<_1b9523799_Eval>&,jule::Ref<_1d1e5192e_FnCallExpr>&,jule::Ref<_1b9523799_Data>&)>(_1b9c0b525_builtin_caller_common_mut),jule::Bool(),jule::Bool())))),jule::Ref<_1b951b088_TypeKind>(),_226141_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1b8dbae99_CommonSubIdentExprModel>(new( std::nothrow ) _1b8dbae99_CommonSubIdentExprModel(_226141_d->_field_kind,_226141_d->_field_model,jule::Str("keys", 4)))),jule::Bool(),jule::Ref<_1b9d678e5_Const>()));
		}
		goto _match_end_4716308992;
		_case_end_4716313328:;
		if (!((jule::Str("values", 6)) == _match_expr)) { goto _case_end_4716313440; }
		_case_begin_4716313440:;
		{
			jule::Ref<_1b951b088_Map> _231121_m = _226141_d->_field_kind->_method_map();
			return jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1d21d97ee_FnIns>(new( std::nothrow ) _1d21d97ee_FnIns(jule::Ref<_1d21c0b59_StructIns>(),jule::Ref<_1d21d97ee_Fn>(),jule::Slice<jule::Ref<_1b951b088_TypeKind>>(),jule::Slice<jule::Ref<_1d21d97ee_ParamIns>>(),jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1b951b088_Slc>(new( std::nothrow ) _1b951b088_Slc(_231121_m->_field_val)))),jule::Ref<_1b8cd2c4b_Scope>(),jule::Ref<_1b8b10cbb_ReferenceStack>(),jule::Ref<_1b8b10cbb_ReferenceStack>(),jule::Fn<jule::Ref<_1b9523799_Data>(jule::Ref<_1b9523799_Eval>&,jule::Ref<_1d1e5192e_FnCallExpr>&,jule::Ref<_1b9523799_Data>&)>(_1b9c0b525_builtin_caller_common_mut),jule::Bool(),jule::Bool())))),jule::Ref<_1b951b088_TypeKind>(),_226141_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1b8dbae99_CommonSubIdentExprModel>(new( std::nothrow ) _1b8dbae99_CommonSubIdentExprModel(_226141_d->_field_kind,_226141_d->_field_model,jule::Str("values", 6)))),jule::Bool(),jule::Ref<_1b9d678e5_Const>()));
		}
		goto _match_end_4716308992;
		_case_end_4716313440:;
		if (!((jule::Str("has", 3)) == _match_expr)) { goto _case_end_4716312480; }
		_case_begin_4716312480:;
		{
			jule::Ref<_1b951b088_Map> _233221_m = _226141_d->_field_kind->_method_map();
			return jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1d21d97ee_FnIns>(new( std::nothrow ) _1d21d97ee_FnIns(jule::Ref<_1d21c0b59_StructIns>(),jule::Ref<_1d21d97ee_Fn>(),jule::Slice<jule::Ref<_1b951b088_TypeKind>>(),jule::Slice<jule::Ref<_1d21d97ee_ParamIns>>({jule::new_struct<_1d21d97ee_ParamIns>(new( std::nothrow ) _1d21d97ee_ParamIns(jule::new_struct<_1d21d97ee_Param>(new( std::nothrow ) _1d21d97ee_Param(_1d1da4277_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1b951b088_TypeSymbol>(),jule::Str("key", 3))),_233221_m->_field_key))}),jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_1b951b088_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1b8cd2c4b_Scope>(),jule::Ref<_1b8b10cbb_ReferenceStack>(),jule::Ref<_1b8b10cbb_ReferenceStack>(),jule::Fn<jule::Ref<_1b9523799_Data>(jule::Ref<_1b9523799_Eval>&,jule::Ref<_1d1e5192e_FnCallExpr>&,jule::Ref<_1b9523799_Data>&)>(_1b9c0b525_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ref<_1b951b088_TypeKind>(),_226141_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1b8dbae99_CommonSubIdentExprModel>(new( std::nothrow ) _1b8dbae99_CommonSubIdentExprModel(_226141_d->_field_kind,_226141_d->_field_model,jule::Str("has", 3)))),jule::Bool(),jule::Ref<_1b9d678e5_Const>()));
		}
		goto _match_end_4716308992;
		_case_end_4716312480:;
		if (!((jule::Str("del", 3)) == _match_expr)) { goto _case_end_4716312592; }
		_case_begin_4716312592:;
		{
			jule::Ref<_1b951b088_Map> _235721_m = _226141_d->_field_kind->_method_map();
			return jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1d21d97ee_FnIns>(new( std::nothrow ) _1d21d97ee_FnIns(jule::Ref<_1d21c0b59_StructIns>(),jule::Ref<_1d21d97ee_Fn>(),jule::Slice<jule::Ref<_1b951b088_TypeKind>>(),jule::Slice<jule::Ref<_1d21d97ee_ParamIns>>({jule::new_struct<_1d21d97ee_ParamIns>(new( std::nothrow ) _1d21d97ee_ParamIns(jule::new_struct<_1d21d97ee_Param>(new( std::nothrow ) _1d21d97ee_Param(_1d1da4277_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1b951b088_TypeSymbol>(),jule::Str("key", 3))),_235721_m->_field_key))}),jule::Ref<_1b951b088_TypeKind>(),jule::Ref<_1b8cd2c4b_Scope>(),jule::Ref<_1b8b10cbb_ReferenceStack>(),jule::Ref<_1b8b10cbb_ReferenceStack>(),jule::Fn<jule::Ref<_1b9523799_Data>(jule::Ref<_1b9523799_Eval>&,jule::Ref<_1d1e5192e_FnCallExpr>&,jule::Ref<_1b9523799_Data>&)>(_1b9c0b525_builtin_caller_common_mut),jule::Bool(),jule::Bool())))),jule::Ref<_1b951b088_TypeKind>(),_226141_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1b8dbae99_CommonSubIdentExprModel>(new( std::nothrow ) _1b8dbae99_CommonSubIdentExprModel(_226141_d->_field_kind,_226141_d->_field_model,jule::Str("del", 3)))),jule::Bool(),jule::Ref<_1b9d678e5_Const>()));
		}
		goto _match_end_4716308992;
		_case_end_4716312592:;
		_case_begin_4716309600:;
		{
			(*this)._method_push_err(_226151_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_226151_ident._field_kind)}));
			return jule::new_ref<_1b9523799_Data>();
		}
		goto _match_end_4716308992;
		_case_end_4716309600:;
		_match_end_4716308992:;
	}
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_eval_str_sub_ident(jule::Ref<_1b9523799_Data> _238641_d,_1d1da4277_Token _238651_ident) {
	{
		auto _match_expr{ _238651_ident._field_kind };
		if (!((jule::Str("len", 3)) == _match_expr)) { goto _case_end_4716349824; }
		_case_begin_4716349824:;
		{
			return jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_1b951b088_build_prim_type(jule::Str("i64", 3)))),jule::Ref<_1b951b088_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1b8dbae99_CommonSubIdentExprModel>(new( std::nothrow ) _1b8dbae99_CommonSubIdentExprModel(_238641_d->_field_kind,_238641_d->_field_model,jule::Str("len()", 5)))),jule::Bool(),jule::Ref<_1b9d678e5_Const>()));
		}
		goto _match_end_4716345728;
		_case_end_4716349824:;
		if (!((jule::Str("has_prefix", 10)) == _match_expr)) { goto _case_end_4716350400; }
		_case_begin_4716350400:;
		{
			return jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1d21d97ee_FnIns>(new( std::nothrow ) _1d21d97ee_FnIns(jule::Ref<_1d21c0b59_StructIns>(),jule::Ref<_1d21d97ee_Fn>(),jule::Slice<jule::Ref<_1b951b088_TypeKind>>(),jule::Slice<jule::Ref<_1d21d97ee_ParamIns>>({jule::new_struct<_1d21d97ee_ParamIns>(new( std::nothrow ) _1d21d97ee_ParamIns(jule::new_struct<_1d21d97ee_Param>(new( std::nothrow ) _1d21d97ee_Param(_1d1da4277_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1b951b088_TypeSymbol>(),jule::Str("sub", 3))),_238641_d->_field_kind))}),jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_1b951b088_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1b8cd2c4b_Scope>(),jule::Ref<_1b8b10cbb_ReferenceStack>(),jule::Ref<_1b8b10cbb_ReferenceStack>(),jule::Fn<jule::Ref<_1b9523799_Data>(jule::Ref<_1b9523799_Eval>&,jule::Ref<_1d1e5192e_FnCallExpr>&,jule::Ref<_1b9523799_Data>&)>(_1b9c0b525_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ref<_1b951b088_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1b8dbae99_CommonSubIdentExprModel>(new( std::nothrow ) _1b8dbae99_CommonSubIdentExprModel(_238641_d->_field_kind,_238641_d->_field_model,jule::Str("has_prefix", 10)))),jule::Bool(),jule::Ref<_1b9d678e5_Const>()));
		}
		goto _match_end_4716345728;
		_case_end_4716350400:;
		if (!((jule::Str("has_suffix", 10)) == _match_expr)) { goto _case_end_4716350064; }
		_case_begin_4716350064:;
		{
			return jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1d21d97ee_FnIns>(new( std::nothrow ) _1d21d97ee_FnIns(jule::Ref<_1d21c0b59_StructIns>(),jule::Ref<_1d21d97ee_Fn>(),jule::Slice<jule::Ref<_1b951b088_TypeKind>>(),jule::Slice<jule::Ref<_1d21d97ee_ParamIns>>({jule::new_struct<_1d21d97ee_ParamIns>(new( std::nothrow ) _1d21d97ee_ParamIns(jule::new_struct<_1d21d97ee_Param>(new( std::nothrow ) _1d21d97ee_Param(_1d1da4277_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1b951b088_TypeSymbol>(),jule::Str("sub", 3))),_238641_d->_field_kind))}),jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_1b951b088_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1b8cd2c4b_Scope>(),jule::Ref<_1b8b10cbb_ReferenceStack>(),jule::Ref<_1b8b10cbb_ReferenceStack>(),jule::Fn<jule::Ref<_1b9523799_Data>(jule::Ref<_1b9523799_Eval>&,jule::Ref<_1d1e5192e_FnCallExpr>&,jule::Ref<_1b9523799_Data>&)>(_1b9c0b525_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ref<_1b951b088_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1b8dbae99_CommonSubIdentExprModel>(new( std::nothrow ) _1b8dbae99_CommonSubIdentExprModel(_238641_d->_field_kind,_238641_d->_field_model,jule::Str("has_suffix", 10)))),jule::Bool(),jule::Ref<_1b9d678e5_Const>()));
		}
		goto _match_end_4716345728;
		_case_end_4716350064:;
		if (!((jule::Str("find", 4)) == _match_expr)) { goto _case_end_4716350176; }
		_case_begin_4716350176:;
		{
			return jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1d21d97ee_FnIns>(new( std::nothrow ) _1d21d97ee_FnIns(jule::Ref<_1d21c0b59_StructIns>(),jule::Ref<_1d21d97ee_Fn>(),jule::Slice<jule::Ref<_1b951b088_TypeKind>>(),jule::Slice<jule::Ref<_1d21d97ee_ParamIns>>({jule::new_struct<_1d21d97ee_ParamIns>(new( std::nothrow ) _1d21d97ee_ParamIns(jule::new_struct<_1d21d97ee_Param>(new( std::nothrow ) _1d21d97ee_Param(_1d1da4277_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1b951b088_TypeSymbol>(),jule::Str("sub", 3))),_238641_d->_field_kind))}),jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_1b951b088_build_prim_type(jule::Str("int", 3)))),jule::Ref<_1b8cd2c4b_Scope>(),jule::Ref<_1b8b10cbb_ReferenceStack>(),jule::Ref<_1b8b10cbb_ReferenceStack>(),jule::Fn<jule::Ref<_1b9523799_Data>(jule::Ref<_1b9523799_Eval>&,jule::Ref<_1d1e5192e_FnCallExpr>&,jule::Ref<_1b9523799_Data>&)>(_1b9c0b525_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ref<_1b951b088_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1b8dbae99_CommonSubIdentExprModel>(new( std::nothrow ) _1b8dbae99_CommonSubIdentExprModel(_238641_d->_field_kind,_238641_d->_field_model,jule::Str("find", 4)))),jule::Bool(),jule::Ref<_1b9d678e5_Const>()));
		}
		goto _match_end_4716345728;
		_case_end_4716350176:;
		if (!((jule::Str("rfind", 5)) == _match_expr)) { goto _case_end_4716349216; }
		_case_begin_4716349216:;
		{
			return jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1d21d97ee_FnIns>(new( std::nothrow ) _1d21d97ee_FnIns(jule::Ref<_1d21c0b59_StructIns>(),jule::Ref<_1d21d97ee_Fn>(),jule::Slice<jule::Ref<_1b951b088_TypeKind>>(),jule::Slice<jule::Ref<_1d21d97ee_ParamIns>>({jule::new_struct<_1d21d97ee_ParamIns>(new( std::nothrow ) _1d21d97ee_ParamIns(jule::new_struct<_1d21d97ee_Param>(new( std::nothrow ) _1d21d97ee_Param(_1d1da4277_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1b951b088_TypeSymbol>(),jule::Str("sub", 3))),_238641_d->_field_kind))}),jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_1b951b088_build_prim_type(jule::Str("int", 3)))),jule::Ref<_1b8cd2c4b_Scope>(),jule::Ref<_1b8b10cbb_ReferenceStack>(),jule::Ref<_1b8b10cbb_ReferenceStack>(),jule::Fn<jule::Ref<_1b9523799_Data>(jule::Ref<_1b9523799_Eval>&,jule::Ref<_1d1e5192e_FnCallExpr>&,jule::Ref<_1b9523799_Data>&)>(_1b9c0b525_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ref<_1b951b088_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1b8dbae99_CommonSubIdentExprModel>(new( std::nothrow ) _1b8dbae99_CommonSubIdentExprModel(_238641_d->_field_kind,_238641_d->_field_model,jule::Str("rfind", 5)))),jule::Bool(),jule::Ref<_1b9d678e5_Const>()));
		}
		goto _match_end_4716345728;
		_case_end_4716349216:;
		if (!((jule::Str("trim", 4)) == _match_expr)) { goto _case_end_4716349328; }
		_case_begin_4716349328:;
		{
			return jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1d21d97ee_FnIns>(new( std::nothrow ) _1d21d97ee_FnIns(jule::Ref<_1d21c0b59_StructIns>(),jule::Ref<_1d21d97ee_Fn>(),jule::Slice<jule::Ref<_1b951b088_TypeKind>>(),jule::Slice<jule::Ref<_1d21d97ee_ParamIns>>({jule::new_struct<_1d21d97ee_ParamIns>(new( std::nothrow ) _1d21d97ee_ParamIns(jule::new_struct<_1d21d97ee_Param>(new( std::nothrow ) _1d21d97ee_Param(_1d1da4277_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1b951b088_TypeSymbol>(),jule::Str("bytes", 5))),_238641_d->_field_kind))}),_238641_d->_field_kind,jule::Ref<_1b8cd2c4b_Scope>(),jule::Ref<_1b8b10cbb_ReferenceStack>(),jule::Ref<_1b8b10cbb_ReferenceStack>(),jule::Fn<jule::Ref<_1b9523799_Data>(jule::Ref<_1b9523799_Eval>&,jule::Ref<_1d1e5192e_FnCallExpr>&,jule::Ref<_1b9523799_Data>&)>(_1b9c0b525_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ref<_1b951b088_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1b8dbae99_CommonSubIdentExprModel>(new( std::nothrow ) _1b8dbae99_CommonSubIdentExprModel(_238641_d->_field_kind,_238641_d->_field_model,jule::Str("trim", 4)))),jule::Bool(),jule::Ref<_1b9d678e5_Const>()));
		}
		goto _match_end_4716345728;
		_case_end_4716349328:;
		if (!((jule::Str("ltrim", 5)) == _match_expr)) { goto _case_end_4716349440; }
		_case_begin_4716349440:;
		{
			return jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1d21d97ee_FnIns>(new( std::nothrow ) _1d21d97ee_FnIns(jule::Ref<_1d21c0b59_StructIns>(),jule::Ref<_1d21d97ee_Fn>(),jule::Slice<jule::Ref<_1b951b088_TypeKind>>(),jule::Slice<jule::Ref<_1d21d97ee_ParamIns>>({jule::new_struct<_1d21d97ee_ParamIns>(new( std::nothrow ) _1d21d97ee_ParamIns(jule::new_struct<_1d21d97ee_Param>(new( std::nothrow ) _1d21d97ee_Param(_1d1da4277_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1b951b088_TypeSymbol>(),jule::Str("bytes", 5))),_238641_d->_field_kind))}),_238641_d->_field_kind,jule::Ref<_1b8cd2c4b_Scope>(),jule::Ref<_1b8b10cbb_ReferenceStack>(),jule::Ref<_1b8b10cbb_ReferenceStack>(),jule::Fn<jule::Ref<_1b9523799_Data>(jule::Ref<_1b9523799_Eval>&,jule::Ref<_1d1e5192e_FnCallExpr>&,jule::Ref<_1b9523799_Data>&)>(_1b9c0b525_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ref<_1b951b088_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1b8dbae99_CommonSubIdentExprModel>(new( std::nothrow ) _1b8dbae99_CommonSubIdentExprModel(_238641_d->_field_kind,_238641_d->_field_model,jule::Str("ltrim", 5)))),jule::Bool(),jule::Ref<_1b9d678e5_Const>()));
		}
		goto _match_end_4716345728;
		_case_end_4716349440:;
		if (!((jule::Str("rtrim", 5)) == _match_expr)) { goto _case_end_4716346640; }
		_case_begin_4716346640:;
		{
			return jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1d21d97ee_FnIns>(new( std::nothrow ) _1d21d97ee_FnIns(jule::Ref<_1d21c0b59_StructIns>(),jule::Ref<_1d21d97ee_Fn>(),jule::Slice<jule::Ref<_1b951b088_TypeKind>>(),jule::Slice<jule::Ref<_1d21d97ee_ParamIns>>({jule::new_struct<_1d21d97ee_ParamIns>(new( std::nothrow ) _1d21d97ee_ParamIns(jule::new_struct<_1d21d97ee_Param>(new( std::nothrow ) _1d21d97ee_Param(_1d1da4277_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1b951b088_TypeSymbol>(),jule::Str("bytes", 5))),_238641_d->_field_kind))}),_238641_d->_field_kind,jule::Ref<_1b8cd2c4b_Scope>(),jule::Ref<_1b8b10cbb_ReferenceStack>(),jule::Ref<_1b8b10cbb_ReferenceStack>(),jule::Fn<jule::Ref<_1b9523799_Data>(jule::Ref<_1b9523799_Eval>&,jule::Ref<_1d1e5192e_FnCallExpr>&,jule::Ref<_1b9523799_Data>&)>(_1b9c0b525_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ref<_1b951b088_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1b8dbae99_CommonSubIdentExprModel>(new( std::nothrow ) _1b8dbae99_CommonSubIdentExprModel(_238641_d->_field_kind,_238641_d->_field_model,jule::Str("rtrim", 5)))),jule::Bool(),jule::Ref<_1b9d678e5_Const>()));
		}
		goto _match_end_4716345728;
		_case_end_4716346640:;
		if (!((jule::Str("split", 5)) == _match_expr)) { goto _case_end_4716346752; }
		_case_begin_4716346752:;
		{
			return jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1d21d97ee_FnIns>(new( std::nothrow ) _1d21d97ee_FnIns(jule::Ref<_1d21c0b59_StructIns>(),jule::Ref<_1d21d97ee_Fn>(),jule::Slice<jule::Ref<_1b951b088_TypeKind>>(),jule::Slice<jule::Ref<_1d21d97ee_ParamIns>>({jule::new_struct<_1d21d97ee_ParamIns>(new( std::nothrow ) _1d21d97ee_ParamIns(jule::new_struct<_1d21d97ee_Param>(new( std::nothrow ) _1d21d97ee_Param(_1d1da4277_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1b951b088_TypeSymbol>(),jule::Str("sub", 3))),_238641_d->_field_kind)),jule::new_struct<_1d21d97ee_ParamIns>(new( std::nothrow ) _1d21d97ee_ParamIns(jule::new_struct<_1d21d97ee_Param>(new( std::nothrow ) _1d21d97ee_Param(_1d1da4277_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1b951b088_TypeSymbol>(),jule::Str("n", 1))),jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_1b951b088_build_prim_type(jule::Str("int", 3))))))}),jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1b951b088_Slc>(new( std::nothrow ) _1b951b088_Slc(_238641_d->_field_kind)))),jule::Ref<_1b8cd2c4b_Scope>(),jule::Ref<_1b8b10cbb_ReferenceStack>(),jule::Ref<_1b8b10cbb_ReferenceStack>(),jule::Fn<jule::Ref<_1b9523799_Data>(jule::Ref<_1b9523799_Eval>&,jule::Ref<_1d1e5192e_FnCallExpr>&,jule::Ref<_1b9523799_Data>&)>(_1b9c0b525_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ref<_1b951b088_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1b8dbae99_CommonSubIdentExprModel>(new( std::nothrow ) _1b8dbae99_CommonSubIdentExprModel(_238641_d->_field_kind,_238641_d->_field_model,jule::Str("split", 5)))),jule::Bool(),jule::Ref<_1b9d678e5_Const>()));
		}
		goto _match_end_4716345728;
		_case_end_4716346752:;
		if (!((jule::Str("replace", 7)) == _match_expr)) { goto _case_end_4716346864; }
		_case_begin_4716346864:;
		{
			return jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1d21d97ee_FnIns>(new( std::nothrow ) _1d21d97ee_FnIns(jule::Ref<_1d21c0b59_StructIns>(),jule::Ref<_1d21d97ee_Fn>(),jule::Slice<jule::Ref<_1b951b088_TypeKind>>(),jule::Slice<jule::Ref<_1d21d97ee_ParamIns>>({jule::new_struct<_1d21d97ee_ParamIns>(new( std::nothrow ) _1d21d97ee_ParamIns(jule::new_struct<_1d21d97ee_Param>(new( std::nothrow ) _1d21d97ee_Param(_1d1da4277_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1b951b088_TypeSymbol>(),jule::Str("sub", 3))),_238641_d->_field_kind)),jule::new_struct<_1d21d97ee_ParamIns>(new( std::nothrow ) _1d21d97ee_ParamIns(jule::new_struct<_1d21d97ee_Param>(new( std::nothrow ) _1d21d97ee_Param(_1d1da4277_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1b951b088_TypeSymbol>(),jule::Str("new", 3))),_238641_d->_field_kind)),jule::new_struct<_1d21d97ee_ParamIns>(new( std::nothrow ) _1d21d97ee_ParamIns(jule::new_struct<_1d21d97ee_Param>(new( std::nothrow ) _1d21d97ee_Param(_1d1da4277_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1b951b088_TypeSymbol>(),jule::Str("n", 1))),jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_1b951b088_build_prim_type(jule::Str("int", 3))))))}),_238641_d->_field_kind,jule::Ref<_1b8cd2c4b_Scope>(),jule::Ref<_1b8b10cbb_ReferenceStack>(),jule::Ref<_1b8b10cbb_ReferenceStack>(),jule::Fn<jule::Ref<_1b9523799_Data>(jule::Ref<_1b9523799_Eval>&,jule::Ref<_1d1e5192e_FnCallExpr>&,jule::Ref<_1b9523799_Data>&)>(_1b9c0b525_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ref<_1b951b088_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1b8dbae99_CommonSubIdentExprModel>(new( std::nothrow ) _1b8dbae99_CommonSubIdentExprModel(_238641_d->_field_kind,_238641_d->_field_model,jule::Str("replace", 7)))),jule::Bool(),jule::Ref<_1b9d678e5_Const>()));
		}
		goto _match_end_4716345728;
		_case_end_4716346864:;
		_case_begin_4716346336:;
		{
			(*this)._method_push_err(_238651_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_238651_ident._field_kind)}));
			return jule::new_ref<_1b9523799_Data>();
		}
		goto _match_end_4716345728;
		_case_end_4716346336:;
		_match_end_4716345728:;
	}
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_eval_int_type_static(_1d1da4277_Token _263439_ident) {
	
	{
		auto _match_expr{ _263439_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4716406304; }
		_case_begin_4716406304:;
		{
			jule::Ref<_1b9d678e5_Const> _263921_c = _1b9d678e5_Const::_static_method_new_i64(static_cast<jule::I64>(_1b9d841c5_max(jule::Str("int", 3))));
			return jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_1b951b088_build_prim_type(jule::Str("int", 3)))),jule::Ref<_1b951b088_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_263921_c),jule::Bool(),_263921_c));
		}
		goto _match_end_4716401664;
		_case_end_4716406304:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_4716406880; }
		_case_begin_4716406880:;
		{
			jule::Ref<_1b9d678e5_Const> _264721_c = _1b9d678e5_Const::_static_method_new_i64(static_cast<jule::I64>(_1b9d841c5_min(jule::Str("int", 3))));
			return jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_1b951b088_build_prim_type(jule::Str("int", 3)))),jule::Ref<_1b951b088_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_264721_c),jule::Bool(),_264721_c));
		}
		goto _match_end_4716401664;
		_case_end_4716406880:;
		_case_begin_4716402576:;
		{
			(*this)._method_push_err(_263439_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("int", 3)),jule::Any(_263439_ident._field_kind)}));
			return jule::new_ref<_1b9523799_Data>();
		}
		goto _match_end_4716401664;
		_case_end_4716402576:;
		_match_end_4716401664:;
	}
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_eval_uint_type_static(_1d1da4277_Token _266040_ident) {
	
	{
		auto _match_expr{ _266040_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4716419440; }
		_case_begin_4716419440:;
		{
			jule::Ref<_1b9d678e5_Const> _266521_c = _1b9d678e5_Const::_static_method_new_u64(static_cast<jule::U64>(_1b9d841c5_max(jule::Str("uint", 4))));
			return jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_1b951b088_build_prim_type(jule::Str("uint", 4)))),jule::Ref<_1b951b088_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_266521_c),jule::Bool(),_266521_c));
		}
		goto _match_end_4716415504;
		_case_end_4716419440:;
		_case_begin_4716416416:;
		{
			(*this)._method_push_err(_266040_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("uint", 4)),jule::Any(_266040_ident._field_kind)}));
			return jule::new_ref<_1b9523799_Data>();
		}
		goto _match_end_4716415504;
		_case_end_4716416416:;
		_match_end_4716415504:;
	}
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_eval_i8_type_static(_1d1da4277_Token _267838_ident) {
	
	
	
	{
		auto _match_expr{ _267838_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4716431728; }
		_case_begin_4716431728:;
		{
			jule::Ref<_1b9d678e5_Const> _268521_c = _1b9d678e5_Const::_static_method_new_i64(127LL);
			return jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_1b951b088_build_prim_type(jule::Str("i8", 2)))),jule::Ref<_1b951b088_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_268521_c),jule::Bool(),_268521_c));
		}
		goto _match_end_4716426224;
		_case_end_4716431728:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_4716432304; }
		_case_begin_4716432304:;
		{
			jule::Ref<_1b9d678e5_Const> _269321_c = _1b9d678e5_Const::_static_method_new_i64(-128LL);
			return jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_1b951b088_build_prim_type(jule::Str("i8", 2)))),jule::Ref<_1b951b088_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_269321_c),jule::Bool(),_269321_c));
		}
		goto _match_end_4716426224;
		_case_end_4716432304:;
		_case_begin_4716428000:;
		{
			(*this)._method_push_err(_267838_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("i8", 2)),jule::Any(_267838_ident._field_kind)}));
			return jule::new_ref<_1b9523799_Data>();
		}
		goto _match_end_4716426224;
		_case_end_4716428000:;
		_match_end_4716426224:;
	}
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_eval_i16_type_static(_1d1da4277_Token _270639_ident) {
	
	
	
	{
		auto _match_expr{ _270639_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4716446784; }
		_case_begin_4716446784:;
		{
			jule::Ref<_1b9d678e5_Const> _271321_c = _1b9d678e5_Const::_static_method_new_i64(32767LL);
			return jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_1b951b088_build_prim_type(jule::Str("i16", 3)))),jule::Ref<_1b951b088_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_271321_c),jule::Bool(),_271321_c));
		}
		goto _match_end_4716441280;
		_case_end_4716446784:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_4716447360; }
		_case_begin_4716447360:;
		{
			jule::Ref<_1b9d678e5_Const> _272121_c = _1b9d678e5_Const::_static_method_new_i64(-32768LL);
			return jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_1b951b088_build_prim_type(jule::Str("i16", 3)))),jule::Ref<_1b951b088_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_272121_c),jule::Bool(),_272121_c));
		}
		goto _match_end_4716441280;
		_case_end_4716447360:;
		_case_begin_4716443056:;
		{
			(*this)._method_push_err(_270639_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("i16", 3)),jule::Any(_270639_ident._field_kind)}));
			return jule::new_ref<_1b9523799_Data>();
		}
		goto _match_end_4716441280;
		_case_end_4716443056:;
		_match_end_4716441280:;
	}
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_eval_i32_type_static(_1d1da4277_Token _273439_ident) {
	
	
	
	{
		auto _match_expr{ _273439_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4716462480; }
		_case_begin_4716462480:;
		{
			jule::Ref<_1b9d678e5_Const> _274121_c = _1b9d678e5_Const::_static_method_new_i64(2147483647LL);
			return jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_1b951b088_build_prim_type(jule::Str("i32", 3)))),jule::Ref<_1b951b088_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_274121_c),jule::Bool(),_274121_c));
		}
		goto _match_end_4716456976;
		_case_end_4716462480:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_4716463056; }
		_case_begin_4716463056:;
		{
			jule::Ref<_1b9d678e5_Const> _274921_c = _1b9d678e5_Const::_static_method_new_i64(-2147483648LL);
			return jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_1b951b088_build_prim_type(jule::Str("i32", 3)))),jule::Ref<_1b951b088_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_274921_c),jule::Bool(),_274921_c));
		}
		goto _match_end_4716456976;
		_case_end_4716463056:;
		_case_begin_4716458752:;
		{
			(*this)._method_push_err(_273439_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("i32", 3)),jule::Any(_273439_ident._field_kind)}));
			return jule::new_ref<_1b9523799_Data>();
		}
		goto _match_end_4716456976;
		_case_end_4716458752:;
		_match_end_4716456976:;
	}
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_eval_i64_type_static(_1d1da4277_Token _276239_ident) {
	
	
	
	{
		auto _match_expr{ _276239_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4716477408; }
		_case_begin_4716477408:;
		{
			jule::Ref<_1b9d678e5_Const> _276921_c = _1b9d678e5_Const::_static_method_new_i64(jule::MAX_I64);
			return jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_1b951b088_build_prim_type(jule::Str("i64", 3)))),jule::Ref<_1b951b088_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_276921_c),jule::Bool(),_276921_c));
		}
		goto _match_end_4716471984;
		_case_end_4716477408:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_4716477984; }
		_case_begin_4716477984:;
		{
			jule::Ref<_1b9d678e5_Const> _277721_c = _1b9d678e5_Const::_static_method_new_i64(jule::MIN_I64);
			return jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_1b951b088_build_prim_type(jule::Str("i64", 3)))),jule::Ref<_1b951b088_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_277721_c),jule::Bool(),_277721_c));
		}
		goto _match_end_4716471984;
		_case_end_4716477984:;
		_case_begin_4716473664:;
		{
			(*this)._method_push_err(_276239_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("i64", 3)),jule::Any(_276239_ident._field_kind)}));
			return jule::new_ref<_1b9523799_Data>();
		}
		goto _match_end_4716471984;
		_case_end_4716473664:;
		_match_end_4716471984:;
	}
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_eval_u8_type_static(_1d1da4277_Token _279038_ident) {
	
	
	{
		auto _match_expr{ _279038_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4716491344; }
		_case_begin_4716491344:;
		{
			jule::Ref<_1b9d678e5_Const> _279621_c = _1b9d678e5_Const::_static_method_new_u64(255LLU);
			return jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_1b951b088_build_prim_type(jule::Str("u8", 2)))),jule::Ref<_1b951b088_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_279621_c),jule::Bool(),_279621_c));
		}
		goto _match_end_4716485888;
		_case_end_4716491344:;
		_case_begin_4716487520:;
		{
			(*this)._method_push_err(_279038_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("u8", 2)),jule::Any(_279038_ident._field_kind)}));
			return jule::new_ref<_1b9523799_Data>();
		}
		goto _match_end_4716485888;
		_case_end_4716487520:;
		_match_end_4716485888:;
	}
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_eval_u16_type_static(_1d1da4277_Token _280939_ident) {
	
	
	{
		auto _match_expr{ _280939_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4716518816; }
		_case_begin_4716518816:;
		{
			jule::Ref<_1b9d678e5_Const> _281521_c = _1b9d678e5_Const::_static_method_new_u64(65535LLU);
			return jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_1b951b088_build_prim_type(jule::Str("u16", 3)))),jule::Ref<_1b951b088_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_281521_c),jule::Bool(),_281521_c));
		}
		goto _match_end_4716513360;
		_case_end_4716518816:;
		_case_begin_4716514992:;
		{
			(*this)._method_push_err(_280939_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("u16", 3)),jule::Any(_280939_ident._field_kind)}));
			return jule::new_ref<_1b9523799_Data>();
		}
		goto _match_end_4716513360;
		_case_end_4716514992:;
		_match_end_4716513360:;
	}
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_eval_u32_type_static(_1d1da4277_Token _282839_ident) {
	
	
	{
		auto _match_expr{ _282839_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4716529776; }
		_case_begin_4716529776:;
		{
			jule::Ref<_1b9d678e5_Const> _283421_c = _1b9d678e5_Const::_static_method_new_u64(4294967295LLU);
			return jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_1b951b088_build_prim_type(jule::Str("u32", 3)))),jule::Ref<_1b951b088_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_283421_c),jule::Bool(),_283421_c));
		}
		goto _match_end_4716524320;
		_case_end_4716529776:;
		_case_begin_4716525952:;
		{
			(*this)._method_push_err(_282839_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("u32", 3)),jule::Any(_282839_ident._field_kind)}));
			return jule::new_ref<_1b9523799_Data>();
		}
		goto _match_end_4716524320;
		_case_end_4716525952:;
		_match_end_4716524320:;
	}
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_eval_u64_type_static(_1d1da4277_Token _284739_ident) {
	
	
	{
		auto _match_expr{ _284739_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4716540672; }
		_case_begin_4716540672:;
		{
			jule::Ref<_1b9d678e5_Const> _285321_c = _1b9d678e5_Const::_static_method_new_u64(jule::MAX_U64);
			return jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_1b951b088_build_prim_type(jule::Str("u64", 3)))),jule::Ref<_1b951b088_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_285321_c),jule::Bool(),_285321_c));
		}
		goto _match_end_4716535280;
		_case_end_4716540672:;
		_case_begin_4716536960:;
		{
			(*this)._method_push_err(_284739_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("u64", 3)),jule::Any(_284739_ident._field_kind)}));
			return jule::new_ref<_1b9523799_Data>();
		}
		goto _match_end_4716535280;
		_case_end_4716536960:;
		_match_end_4716535280:;
	}
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_eval_f32_type_tatic(_1d1da4277_Token _286638_ident) {
	
	
	
	{
		auto _match_expr{ _286638_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4716552720; }
		_case_begin_4716552720:;
		{
			jule::Ref<_1b9d678e5_Const> _287321_c = _1b9d678e5_Const::_static_method_new_f64(340282346638528860000000000000000000000.0);
			return jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_1b951b088_build_prim_type(jule::Str("f32", 3)))),jule::Ref<_1b951b088_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_287321_c),jule::Bool(),_287321_c));
		}
		goto _match_end_4716547328;
		_case_end_4716552720:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_4716553296; }
		_case_begin_4716553296:;
		{
			jule::Ref<_1b9d678e5_Const> _288121_c = _1b9d678e5_Const::_static_method_new_f64(-340282346638528860000000000000000000000.0);
			return jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_1b951b088_build_prim_type(jule::Str("f32", 3)))),jule::Ref<_1b951b088_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_288121_c),jule::Bool(),_288121_c));
		}
		goto _match_end_4716547328;
		_case_end_4716553296:;
		_case_begin_4716548976:;
		{
			(*this)._method_push_err(_286638_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("f32", 3)),jule::Any(_286638_ident._field_kind)}));
			return jule::new_ref<_1b9523799_Data>();
		}
		goto _match_end_4716547328;
		_case_end_4716548976:;
		_match_end_4716547328:;
	}
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_eval_f64_type_static(_1d1da4277_Token _289439_ident) {
	
	
	
	{
		auto _match_expr{ _289439_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4716567488; }
		_case_begin_4716567488:;
		{
			jule::Ref<_1b9d678e5_Const> _290121_c = _1b9d678e5_Const::_static_method_new_f64(jule::MAX_F64);
			return jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_1b951b088_build_prim_type(jule::Str("f64", 3)))),jule::Ref<_1b951b088_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_290121_c),jule::Bool(),_290121_c));
		}
		goto _match_end_4716562112;
		_case_end_4716567488:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_4716568064; }
		_case_begin_4716568064:;
		{
			jule::Ref<_1b9d678e5_Const> _290921_c = _1b9d678e5_Const::_static_method_new_f64(jule::MIN_F64);
			return jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_1b951b088_build_prim_type(jule::Str("f64", 3)))),jule::Ref<_1b951b088_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_290921_c),jule::Bool(),_290921_c));
		}
		goto _match_end_4716562112;
		_case_end_4716568064:;
		_case_begin_4716563760:;
		{
			(*this)._method_push_err(_289439_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("f64", 3)),jule::Any(_289439_ident._field_kind)}));
			return jule::new_ref<_1b9523799_Data>();
		}
		goto _match_end_4716562112;
		_case_end_4716563760:;
		_match_end_4716562112:;
	}
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_eval_prim_static(jule::Str _292235_kind,_1d1da4277_Token _292246_ident) {
	{
		auto _match_expr{ _292235_kind };
		if (!((jule::Str("int", 3)) == _match_expr)) { goto _case_end_4716580048; }
		_case_begin_4716580048:;
		{
			return (*this)._method_eval_int_type_static(_292246_ident);
		}
		goto _match_end_4716575952;
		_case_end_4716580048:;
		if (!((jule::Str("uint", 4)) == _match_expr)) { goto _case_end_4716580624; }
		_case_begin_4716580624:;
		{
			return (*this)._method_eval_uint_type_static(_292246_ident);
		}
		goto _match_end_4716575952;
		_case_end_4716580624:;
		if (!((jule::Str("i8", 2)) == _match_expr)) { goto _case_end_4716579840; }
		_case_begin_4716579840:;
		{
			return (*this)._method_eval_i8_type_static(_292246_ident);
		}
		goto _match_end_4716575952;
		_case_end_4716579840:;
		if (!((jule::Str("i16", 3)) == _match_expr)) { goto _case_end_4716579440; }
		_case_begin_4716579440:;
		{
			return (*this)._method_eval_i16_type_static(_292246_ident);
		}
		goto _match_end_4716575952;
		_case_end_4716579440:;
		if (!((jule::Str("i32", 3)) == _match_expr)) { goto _case_end_4716579552; }
		_case_begin_4716579552:;
		{
			return (*this)._method_eval_i32_type_static(_292246_ident);
		}
		goto _match_end_4716575952;
		_case_end_4716579552:;
		if (!((jule::Str("i64", 3)) == _match_expr)) { goto _case_end_4716579664; }
		_case_begin_4716579664:;
		{
			return (*this)._method_eval_i64_type_static(_292246_ident);
		}
		goto _match_end_4716575952;
		_case_end_4716579664:;
		if (!((jule::Str("u8", 2)) == _match_expr)) { goto _case_end_4716576736; }
		_case_begin_4716576736:;
		{
			return (*this)._method_eval_u8_type_static(_292246_ident);
		}
		goto _match_end_4716575952;
		_case_end_4716576736:;
		if (!((jule::Str("u16", 3)) == _match_expr)) { goto _case_end_4716576848; }
		_case_begin_4716576848:;
		{
			return (*this)._method_eval_u16_type_static(_292246_ident);
		}
		goto _match_end_4716575952;
		_case_end_4716576848:;
		if (!((jule::Str("u32", 3)) == _match_expr)) { goto _case_end_4716576960; }
		_case_begin_4716576960:;
		{
			return (*this)._method_eval_u32_type_static(_292246_ident);
		}
		goto _match_end_4716575952;
		_case_end_4716576960:;
		if (!((jule::Str("u64", 3)) == _match_expr)) { goto _case_end_4716580784; }
		_case_begin_4716580784:;
		{
			return (*this)._method_eval_u64_type_static(_292246_ident);
		}
		goto _match_end_4716575952;
		_case_end_4716580784:;
		if (!((jule::Str("f32", 3)) == _match_expr)) { goto _case_end_4716580896; }
		_case_begin_4716580896:;
		{
			return (*this)._method_eval_f32_type_tatic(_292246_ident);
		}
		goto _match_end_4716575952;
		_case_end_4716580896:;
		if (!((jule::Str("f64", 3)) == _match_expr)) { goto _case_end_4716581008; }
		_case_begin_4716581008:;
		{
			return (*this)._method_eval_f64_type_static(_292246_ident);
		}
		goto _match_end_4716575952;
		_case_end_4716581008:;
		_case_begin_4716576352:;
		{
			(*this)._method_push_err(_292246_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_292235_kind),jule::Any(_292246_ident._field_kind)}));
			return jule::new_ref<_1b9523799_Data>();
		}
		goto _match_end_4716575952;
		_case_end_4716576352:;
		_match_end_4716575952:;
	}
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_eval_type_static(jule::Ref<_1b9523799_Data> _294239_d,jule::Ref<_1d1e5192e_SubIdentExpr> _294253_si) {
	{
		if (!((jule::real(_294239_d->_field_kind->_method_prim())))) { goto _case_end_4716600496; }
		_case_begin_4716600496:;
		{
			return (*this)._method_eval_prim_static(_294239_d->_field_kind->_method_prim()->_method_to_str(),_294253_si->_field_ident);
		}
		goto _match_end_4716596336;
		_case_end_4716600496:;
		if (!((jule::real(_294239_d->_field_kind->_method_enm())))) { goto _case_end_4716601072; }
		_case_begin_4716601072:;
		{
			return (*this)._method_eval_enum_static(_294239_d->_field_kind->_method_enm(),_294253_si->_field_ident);
		}
		goto _match_end_4716596336;
		_case_end_4716601072:;
		if (!((jule::real(_294239_d->_field_kind->_method_strct())))) { goto _case_end_4716600288; }
		_case_begin_4716600288:;
		{
			return (*this)._method_eval_struct_static(_294239_d->_field_kind->_method_strct(),_294253_si->_field_ident);
		}
		goto _match_end_4716596336;
		_case_end_4716600288:;
		_case_begin_4716596528:;
		{
			(*this)._method_push_err(_294253_si->_field_ident,jule::Str("type @ is not supports sub fields", 33),jule::Slice<jule::Any>({jule::Any(_294239_d->_field_kind->_method_to_str())}));
			return jule::new_ref<_1b9523799_Data>();
		}
		goto _match_end_4716596336;
		_case_end_4716596528:;
		_match_end_4716596336:;
	}
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_eval_obj_sub_ident(jule::Ref<_1b9523799_Data> _295941_d,jule::Ref<_1d1e5192e_SubIdentExpr> _295955_si) {
	jule::Ref<_1b951b088_TypeKind> _296017_kind = _295941_d->_field_kind;
	if (jule::real(_295941_d->_field_kind->_method_ptr())) {
		jule::Ref<_1b951b088_Ptr> _296217_ptr = _295941_d->_field_kind->_method_ptr();
		if ((!(_296217_ptr->_method_is_unsafe()))) {
			if ((!(_295955_si->_field_is_self)) && (!((*this)._method_is_unsafe()))) {
				(*this)._method_push_err(_295955_si->_field_ident,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>({}));
			}
			_296017_kind=_295941_d->_field_kind->_method_ptr()->_field_elem;
		}
	} else if (jule::real(_295941_d->_field_kind->_method_ref())) {
		_296017_kind=_295941_d->_field_kind->_method_ref()->_field_elem;
	}
	{
		if (!((jule::real(_295941_d->_field_kind->_method_trt())))) { goto _case_end_4716621232; }
		_case_begin_4716621232:;
		{
			return (*this)._method_eval_trait_sub_ident(_295941_d,_295941_d->_field_kind->_method_trt(),_295955_si->_field_ident);
		}
		goto _match_end_4716619616;
		_case_end_4716621232:;
		if (!((jule::real(_296017_kind->_method_strct())))) { goto _case_end_4716621344; }
		_case_begin_4716621344:;
		{
			jule::Ref<_1d21c0b59_StructIns> _297817_s = _296017_kind->_method_strct();
			if (_1b9523799_is_instanced_struct(_297817_s)) {
				jule::Bool _298025_used_reference_elem = jule::real(_295941_d->_field_kind->_method_ref());
				return (*this)._method_eval_struct_sub_ident(_295941_d,_296017_kind->_method_strct(),_295955_si,_298025_used_reference_elem);
			}
		}
		goto _match_end_4716619616;
		_case_end_4716621344:;
		if (!((jule::real(_296017_kind->_method_slc())))) { goto _case_end_4716621456; }
		_case_begin_4716621456:;
		{
			return (*this)._method_eval_slice_sub_ident(_295941_d,_295955_si->_field_ident);
		}
		goto _match_end_4716619616;
		_case_end_4716621456:;
		if (!((jule::real(_296017_kind->_method_arr())))) { goto _case_end_4716621568; }
		_case_begin_4716621568:;
		{
			return (*this)._method_eval_array_sub_ident(_295941_d,_295955_si->_field_ident);
		}
		goto _match_end_4716619616;
		_case_end_4716621568:;
		if (!((jule::real(_296017_kind->_method_map())))) { goto _case_end_4716621680; }
		_case_begin_4716621680:;
		{
			return (*this)._method_eval_map_sub_ident(_295941_d,_295955_si->_field_ident);
		}
		goto _match_end_4716619616;
		_case_end_4716621680:;
		if (!((jule::real(_296017_kind->_method_prim())))) { goto _case_end_4716621792; }
		_case_begin_4716621792:;
		{
			jule::Ref<_1b951b088_Prim> _299417_p = _296017_kind->_method_prim();
			{
				auto _match_expr{ _299417_p->_field_kind };
				if (!((jule::Str("str", 3)) == _match_expr)) { goto _case_end_4716637584; }
				_case_begin_4716637584:;
				{
					return (*this)._method_eval_str_sub_ident(_295941_d,_295955_si->_field_ident);
				}
				goto _match_end_4716636912;
				_case_end_4716637584:;
				_match_end_4716636912:;
			}
		}
		goto _match_end_4716619616;
		_case_end_4716621792:;
		_match_end_4716619616:;
	}
	(*this)._method_push_err(_295955_si->_field_ident,jule::Str("object @ is not supports sub fields", 35),jule::Slice<jule::Any>({jule::Any(_295941_d->_field_kind->_method_to_str())}));
	return jule::new_ref<_1b9523799_Data>();
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_eval_sub_ident(jule::Ref<_1d1e5192e_SubIdentExpr> _300538_si) {
	jule::Ref<_1b951b088_TypeKind> _300617_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_300617_prefix;
	});
	jule::Ref<_1b9523799_Data> _301017_d = this->self->_method_eval_expr_kind(_300538_si->_field_expr);
	if ((!(jule::real(_301017_d)))) {
		return jule::new_ref<_1b9523799_Data>();
	}
	if (_301017_d->_field_decl) {
		return this->self->_method_eval_type_static(_301017_d,_300538_si);
	}
	return this->self->_method_eval_obj_sub_ident(_301017_d,_300538_si);
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_eval_tuple(jule::Ref<_1d1e5192e_TupleExpr> _302234_tup) {
	jule::Ref<_1b951b088_Tuple> _302317_tup_t = jule::new_struct<_1b951b088_Tuple>(new( std::nothrow ) _1b951b088_Tuple());
	_302317_tup_t->_field_types=jule::Slice<jule::Ref<_1b951b088_TypeKind>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_302234_tup->_field_expr.len())));
	jule::Ref<_1b8dbae99_TupleExprModel> _302617_model = jule::new_struct<_1b8dbae99_TupleExprModel>(new( std::nothrow ) _1b8dbae99_TupleExprModel(jule::Slice<jule::Ref<_1b9523799_Data>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_302234_tup->_field_expr.len())))));
	jule::Bool _303017_ok = true;
	{
		auto _range_expr = _302234_tup->_field_expr;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1b9523799_i = 0;
			jule::Ref<_1d1e5192e_Expr> _1b9523799_expr = *_range_begin;
			_iter_begin_4716661568:;
			{
				jule::Ref<_1b9523799_Data> _303221_d = this->self->_method_eval_expr_kind(_1b9523799_expr->_field_kind);
				if ((!(jule::real(_303221_d)))) {
					_303017_ok=false;
					goto _iter_next_4716661568;
				}
				_302317_tup_t->_field_types[static_cast<jule::Int>(_1b9523799_i)]=_303221_d->_field_kind;
				_302617_model->_field_datas[static_cast<jule::Int>(_1b9523799_i)]=_303221_d;
			}
			_iter_next_4716661568:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1b9523799_i; _1b9523799_expr = *_range_begin; goto _iter_begin_4716661568; }
			_iter_end_4716661568:;
		}
	}
	if ((!(_303017_ok))) {
		return jule::new_ref<_1b9523799_Data>();
	}
	return jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_302317_tup_t)),jule::Ref<_1b951b088_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_302617_model),jule::Bool(),jule::Ref<_1b9d678e5_Const>()));
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_eval_map(jule::Ref<_1b951b088_Map> _305132_m,jule::Ref<_1d1e5192e_BraceLit> _305145_lit) {
	jule::Ref<_1b8dbae99_MapExprModel> _305217_model = jule::new_struct<_1b8dbae99_MapExprModel>(new( std::nothrow ) _1b8dbae99_MapExprModel(_305132_m->_field_key,_305132_m->_field_val,jule::Slice<jule::Ref<_1b8dbae99_KeyValPairExprModel>>()));
	{
		auto _range_expr = _305145_lit->_field_exprs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Any _1b9523799_expr = *_range_begin;
			_iter_begin_4716678608:;
			{
				{
					auto _match_expr{ _1b9523799_expr };
					if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_KeyValPair>>())) { goto _case_end_4716682864; }
					goto _match_end_4716679824;
					_case_end_4716682864:;
					_case_begin_4716680352:;
					{
						this->self->_method_push_err(_305145_lit->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
						return jule::new_ref<_1b9523799_Data>();
					}
					goto _match_end_4716679824;
					_case_end_4716680352:;
					_match_end_4716679824:;
				}
				jule::Ref<_1d1e5192e_KeyValPair> _306721_pair = _1b9523799_expr.operator jule::Ref<_1d1e5192e_KeyValPair>();
				jule::Ref<_1b9523799_Data> _306921_key = this->self->_method_eval_expr_kind(_306721_pair->_field_key);
				if ((!(jule::real(_306921_key)))) {
					return jule::new_ref<_1b9523799_Data>();
				}
				jule::Ref<_1b9523799_Data> _307421_val = this->self->_method_eval_expr_kind(_306721_pair->_field_val);
				if ((!(jule::real(_307421_val)))) {
					return jule::new_ref<_1b9523799_Data>();
				}
				this->self->_field_s->_method_check_assign_type(false,_305132_m->_field_key,_306921_key,_306721_pair->_field_colon,true);
				this->self->_field_s->_method_check_assign_type(false,_305132_m->_field_val,_307421_val,_306721_pair->_field_colon,true);
				_305217_model->_field_entries=jule::append(_305217_model->_field_entries,jule::Slice<jule::Ref<_1b8dbae99_KeyValPairExprModel>>({jule::new_struct<_1b8dbae99_KeyValPairExprModel>(new( std::nothrow ) _1b8dbae99_KeyValPairExprModel(_306921_key->_field_model,_307421_val->_field_model))}));
			}
			_iter_next_4716678608:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b9523799_expr = *_range_begin; goto _iter_begin_4716678608; }
			_iter_end_4716678608:;
		}
	}
	return jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_305132_m)),jule::Ref<_1b951b088_TypeKind>(),true,jule::Bool(),false,false,jule::Bool(),jule::Any(_305217_model),false,jule::Ref<_1b9d678e5_Const>()));
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_eval_brace_lit(jule::Ref<_1d1e5192e_BraceLit> _309838_lit) {
	{
		if (!(((!(jule::real(this->self->_field_prefix)))))) { goto _case_end_4716701152; }
		_case_begin_4716701152:;
		{
			this->self->_method_push_err(_309838_lit->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1b9523799_Data>();
		}
		goto _match_end_4716698432;
		_case_end_4716701152:;
		if (!((jule::real(this->self->_field_prefix->_method_map())))) { goto _case_end_4716702336; }
		_case_begin_4716702336:;
		{
			return this->self->_method_eval_map(this->self->_field_prefix->_method_map(),_309838_lit);
		}
		goto _match_end_4716698432;
		_case_end_4716702336:;
		if (!((jule::real(this->self->_field_prefix->_method_strct())))) { goto _case_end_4716702000; }
		_case_begin_4716702000:;
		{
			return this->self->_method_eval_struct_lit_explicit(this->self->_field_prefix->_method_strct(),_309838_lit->_field_exprs,_309838_lit->_field_token);
		}
		goto _match_end_4716698432;
		_case_end_4716702000:;
		_case_begin_4716698608:;
		{
			this->self->_method_push_err(_309838_lit->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1b9523799_Data>();
		}
		goto _match_end_4716698432;
		_case_end_4716698608:;
		_match_end_4716698432:;
	}
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_eval_anon_fn(jule::Ref<_1d1e5192e_FnDecl> _311635_decl) {
	_1b951b088_TypeChecker _311717_tc = _1b951b088_TypeChecker((*this)._field_s,(*this)._field_lookup,jule::Ref<_1b951b088_Referencer>(),_1d1da4277_Token(),jule::Slice<jule::Ref<_1d1e5192e_GenericDecl>>(),jule::Slice<jule::Ref<_1b951b088_TypeAlias>>(),jule::Bool());
	jule::Ref<_1d21d97ee_FnIns> _312117_ins = _311717_tc._method_build_fn(_311635_decl);
	_312117_ins->_field_anon=true;
	{
		auto _match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_1b8cd2c4b_ScopeChecker>>())) { goto _case_end_4716716160; }
		_case_begin_4716716160:;
		{
			jule::Ref<_1b8cd2c4b_ScopeChecker> _312621_sc = (*this)._field_lookup.operator jule::Ref<_1b8cd2c4b_ScopeChecker>();
			jule::Ref<_1b8cd2c4b_ScopeChecker> _312721_scc = _312621_sc->_method_new_child_checker();
			_312721_scc->_field_labels=jule::new_ref<jule::Slice<jule::Ref<_1b8cd2c4b_ScopeLabel>>>(nullptr);
			_312721_scc->_field_gotos=jule::new_ref<jule::Slice<jule::Ref<_1b8cd2c4b_ScopeGoto>>>(nullptr);
			jule::drop(_312721_scc->_field_owner);
			_312721_scc->_field_child_index=0LL;
			_312721_scc->_field_it=0LL;
			_312721_scc->_field_cse=0LL;
			_312721_scc->_field_owner=_312117_ins;
			(*this)._field_s->_method_check_fn_ins_sc(_312117_ins,_312721_scc);
		}
		goto _match_end_4716715056;
		_case_end_4716716160:;
		_case_begin_4716716048:;
		{
			(*this)._field_s->_method_check_fn_ins(_312117_ins);
		}
		goto _match_end_4716715056;
		_case_end_4716716048:;
		_match_end_4716715056:;
	}
	return jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_312117_ins)),jule::Ref<_1b951b088_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1b8dbae99_AnonFnExprModel>(new( std::nothrow ) _1b8dbae99_AnonFnExprModel(_312117_ins,(*this)._method_is_global()))),jule::Bool(),jule::Ref<_1b9d678e5_Const>()));
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_eval_binop(jule::Ref<_1d1e5192e_BinopExpr> _315034_op) {
	jule::Ref<_1b951b088_TypeKind> _315117_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_315117_prefix;
	});
	_1b9523799_BinopSolver _315517_bs = _1b9523799_BinopSolver(this->self,jule::Ref<_1b9523799_Data>(),jule::Ref<_1b9523799_Data>(),_1d1da4277_Token());
	return _315517_bs._method_solve(_315034_op);
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_eval_ternary(jule::Ref<_1d1e5192e_TernaryExpr> _316136_ter) {
	jule::Ref<_1b9523799_Data> _316217_d = this->self->_method_eval_expr_kind(_316136_ter->_field_condition);
	if ((!(jule::real(_316217_d)))) {
		return jule::new_ref<_1b9523799_Data>();
	}
	jule::Ref<_1b951b088_Prim> _316713_prim = _316217_d->_field_kind->_method_prim();
	if ((!(jule::real(_316713_prim))) || (!(_316713_prim->_method_is_bool()))) {
		this->self->_method_push_err(_316136_ter->_field_token,jule::Str("if conditions must be have boolean expression", 45),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b9523799_Data>();
	}
	jule::Ref<_1b9523799_Data> _317317_td = this->self->_method_eval_expr_kind(_316136_ter->_field_true_expr);
	if ((!(jule::real(_317317_td)))) {
		return jule::new_ref<_1b9523799_Data>();
	}
	if (_317317_td->_field_kind->_method_void()) {
		this->self->_method_push_err(_316136_ter->_field_token,jule::Str("void type cannot used for ternary operator", 42),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b9523799_Data>();
	}
	jule::Ref<_1b951b088_TypeKind> _318317_prefix = this->self->_field_prefix;
	this->self->_field_prefix=_317317_td->_field_kind;
	jule::Ref<_1b9523799_Data> _318617_fd = this->self->_method_eval_expr_kind(_316136_ter->_field_false_expr);
	this->self->_field_prefix=_318317_prefix;
	if ((!(jule::real(_318617_fd)))) {
		return jule::new_ref<_1b9523799_Data>();
	}
	_1b9176ba0_AssignTypeChecker _319317_ac = _1b9176ba0_AssignTypeChecker(this->self->_field_s,_317317_td->_field_kind,_318617_fd,_316136_ter->_field_token,jule::Bool());
	if ((!(_319317_ac._method_check()))) {
		this->self->_method_push_suggestion(jule::Str("use same or compatible values for ternary expressions", 53),jule::Slice<jule::Any>({}));
	}
	if (_316217_d->_method_is_const()) {
		if (_316217_d->_field_constant->_method_read_bool()) {
			return _317317_td;
		}
		return _318617_fd;
	}
	jule::Ref<_1b9523799_Data> _321017_r = jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data());
	_321017_r->_field_kind=_317317_td->_field_kind;
	_321017_r->_field_lvalue=_321017_r->_field_kind->_method_lvalue();
	_321017_r->_field_mutable=_321017_r->_field_kind->_method_mutable();
	_321017_r->_field_model=jule::Any(jule::new_struct<_1b8dbae99_TernaryExprModel>(new( std::nothrow ) _1b8dbae99_TernaryExprModel(_316217_d->_field_model,_317317_td->_field_model,_318617_fd->_field_model)));
	return _321017_r;
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_eval_expr_kind(jule::Any _322238_kind) {
	jule::Ref<_1b9523799_Data> _322317_d = jule::new_ref<_1b9523799_Data>();
	{
		auto _match_expr{ _322238_kind };
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_LitExpr>>())) { goto _case_end_4716772832; }
		_case_begin_4716772832:;
		{
			_322317_d=this->self->_method_eval_lit(_322238_kind.operator jule::Ref<_1d1e5192e_LitExpr>());
		}
		goto _match_end_4716770656;
		_case_end_4716772832:;
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_IdentExpr>>())) { goto _case_end_4716772176; }
		_case_begin_4716772176:;
		{
			_322317_d=this->self->_method_eval_ident(_322238_kind.operator jule::Ref<_1d1e5192e_IdentExpr>());
		}
		goto _match_end_4716770656;
		_case_end_4716772176:;
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_UnaryExpr>>())) { goto _case_end_4716772288; }
		_case_begin_4716772288:;
		{
			_322317_d=this->self->_method_eval_unary(_322238_kind.operator jule::Ref<_1d1e5192e_UnaryExpr>());
		}
		goto _match_end_4716770656;
		_case_end_4716772288:;
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_VariadicExpr>>())) { goto _case_end_4716772400; }
		_case_begin_4716772400:;
		{
			_322317_d=this->self->_method_eval_variadic(_322238_kind.operator jule::Ref<_1d1e5192e_VariadicExpr>());
		}
		goto _match_end_4716770656;
		_case_end_4716772400:;
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_UnsafeExpr>>())) { goto _case_end_4716773312; }
		_case_begin_4716773312:;
		{
			_322317_d=this->self->_method_eval_unsafe(_322238_kind.operator jule::Ref<_1d1e5192e_UnsafeExpr>());
		}
		goto _match_end_4716770656;
		_case_end_4716773312:;
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_SliceExpr>>())) { goto _case_end_4716773424; }
		_case_begin_4716773424:;
		{
			_322317_d=this->self->_method_eval_slice_expr(_322238_kind.operator jule::Ref<_1d1e5192e_SliceExpr>());
		}
		goto _match_end_4716770656;
		_case_end_4716773424:;
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_IndexingExpr>>())) { goto _case_end_4716773536; }
		_case_begin_4716773536:;
		{
			_322317_d=this->self->_method_eval_indexing(_322238_kind.operator jule::Ref<_1d1e5192e_IndexingExpr>());
		}
		goto _match_end_4716770656;
		_case_end_4716773536:;
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_SlicingExpr>>())) { goto _case_end_4716773648; }
		_case_begin_4716773648:;
		{
			_322317_d=this->self->_method_eval_slicing(_322238_kind.operator jule::Ref<_1d1e5192e_SlicingExpr>());
		}
		goto _match_end_4716770656;
		_case_end_4716773648:;
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_CastExpr>>())) { goto _case_end_4716773760; }
		_case_begin_4716773760:;
		{
			_322317_d=this->self->_method_eval_cast(_322238_kind.operator jule::Ref<_1d1e5192e_CastExpr>());
		}
		goto _match_end_4716770656;
		_case_end_4716773760:;
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_NsSelectionExpr>>())) { goto _case_end_4716773872; }
		_case_begin_4716773872:;
		{
			_322317_d=this->self->_method_eval_ns_selection(_322238_kind.operator jule::Ref<_1d1e5192e_NsSelectionExpr>());
		}
		goto _match_end_4716770656;
		_case_end_4716773872:;
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_StructLit>>())) { goto _case_end_4716773984; }
		_case_begin_4716773984:;
		{
			_322317_d=this->self->_method_eval_struct_lit(_322238_kind.operator jule::Ref<_1d1e5192e_StructLit>());
		}
		goto _match_end_4716770656;
		_case_end_4716773984:;
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_TypeDecl>>())) { goto _case_end_4716774096; }
		_case_begin_4716774096:;
		{
			_322317_d=this->self->_method_eval_type(_322238_kind.operator jule::Ref<_1d1e5192e_TypeDecl>());
		}
		goto _match_end_4716770656;
		_case_end_4716774096:;
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_FnCallExpr>>())) { goto _case_end_4716774208; }
		_case_begin_4716774208:;
		{
			_322317_d=this->self->_method_eval_fn_call(_322238_kind.operator jule::Ref<_1d1e5192e_FnCallExpr>());
		}
		goto _match_end_4716770656;
		_case_end_4716774208:;
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_SubIdentExpr>>())) { goto _case_end_4716774320; }
		_case_begin_4716774320:;
		{
			_322317_d=this->self->_method_eval_sub_ident(_322238_kind.operator jule::Ref<_1d1e5192e_SubIdentExpr>());
		}
		goto _match_end_4716770656;
		_case_end_4716774320:;
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_TupleExpr>>())) { goto _case_end_4716774432; }
		_case_begin_4716774432:;
		{
			_322317_d=this->self->_method_eval_tuple(_322238_kind.operator jule::Ref<_1d1e5192e_TupleExpr>());
		}
		goto _match_end_4716770656;
		_case_end_4716774432:;
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_BraceLit>>())) { goto _case_end_4716774544; }
		_case_begin_4716774544:;
		{
			_322317_d=this->self->_method_eval_brace_lit(_322238_kind.operator jule::Ref<_1d1e5192e_BraceLit>());
		}
		goto _match_end_4716770656;
		_case_end_4716774544:;
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_FnDecl>>())) { goto _case_end_4716774672; }
		_case_begin_4716774672:;
		{
			_322317_d=this->self->_method_eval_anon_fn(_322238_kind.operator jule::Ref<_1d1e5192e_FnDecl>());
		}
		goto _match_end_4716770656;
		_case_end_4716774672:;
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_BinopExpr>>())) { goto _case_end_4716774800; }
		_case_begin_4716774800:;
		{
			_322317_d=this->self->_method_eval_binop(_322238_kind.operator jule::Ref<_1d1e5192e_BinopExpr>());
		}
		goto _match_end_4716770656;
		_case_end_4716774800:;
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_TernaryExpr>>())) { goto _case_end_4716774928; }
		_case_begin_4716774928:;
		{
			_322317_d=this->self->_method_eval_ternary(_322238_kind.operator jule::Ref<_1d1e5192e_TernaryExpr>());
		}
		goto _match_end_4716770656;
		_case_end_4716774928:;
		_case_begin_4716771440:;
		{
			jule::drop(_322317_d);
		}
		goto _match_end_4716770656;
		_case_end_4716771440:;
		_match_end_4716770656:;
	}
	if ((!(jule::real(_322317_d)))) {
		return jule::new_ref<_1b9523799_Data>();
	}
	if ((!(jule::real(_322317_d->_field_kind)))) {
		return _322317_d;
	}
	if ((((!(jule::real(_322317_d->_field_cast_kind))) && _322317_d->_method_is_const()) && (!(_322317_d->_field_is_rune))) && jule::real(_322317_d->_field_kind->_method_prim())) {
		{
			if (!((_322317_d->_field_constant->_method_is_i64()))) { goto _case_end_4716810288; }
			_case_begin_4716810288:;
			{
				if (_1b9176ba0_int_assignable(jule::Str("int", 3),_322317_d)) {
					_322317_d->_field_kind->_field_kind=_1b951b088_build_prim_type(jule::Str("int", 3));
					_322317_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_322317_d->_field_constant->_method_as_i64()));
				}
			}
			goto _match_end_4716810064;
			_case_end_4716810288:;
			if (!((_322317_d->_field_constant->_method_is_u64()))) { goto _case_end_4716810416; }
			_case_begin_4716810416:;
			{
				if (_1b9176ba0_int_assignable(jule::Str("uint", 4),_322317_d)) {
					_322317_d->_field_kind->_field_kind=_1b951b088_build_prim_type(jule::Str("uint", 4));
					_322317_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_322317_d->_field_constant->_method_as_u64()));
				}
			}
			goto _match_end_4716810064;
			_case_end_4716810416:;
			_match_end_4716810064:;
		}
	}
	if ((!(_322317_d->_field_decl))) {
		if ((((((((!(_322317_d->_field_kind->_method_cpp_linked())) && jule::real(this->self->_field_prefix)) && (!(jule::real(_322317_d->_field_cast_kind)))) && (!(_322317_d->_field_variadiced))) && (!(_322317_d->_field_lvalue))) && (!(_322317_d->_method_is_const()))) && jule::real(_322317_d->_field_kind->_method_prim())) && _1b9e28c5e_is_num(_322317_d->_field_kind->_method_prim()->_field_kind)) {
			_322317_d->_field_cast_kind=_322317_d->_field_kind;
		}
		_1b9523799_apply_cast_kind(_322317_d);
		if ((!(jule::real(_322317_d->_field_kind->_method_prim()))) || (!(_322317_d->_field_kind->_method_prim()->_method_is_any()))) {
			if ((jule::real(this->self->_field_prefix) && jule::real(this->self->_field_prefix->_method_prim())) && this->self->_field_prefix->_method_prim()->_method_is_any()) {
				_322317_d->_field_cast_kind=this->self->_field_prefix;
				_1b9523799_apply_cast_kind_model(_322317_d);
				jule::drop(_322317_d->_field_cast_kind);
			}
		}
	}
	return _322317_d;
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_eval(jule::Ref<_1d1e5192e_Expr> _330028_expr) {
	jule::Ref<_1b9523799_Data> _330117_d = this->self->_method_eval_expr_kind(_330028_expr->_field_kind);
	if ((!(jule::real(_330117_d))) || (!(jule::real(_330117_d->_field_kind)))) {
		return jule::new_ref<_1b9523799_Data>();
	}
	{
		if (!((jule::real(_330117_d->_field_kind->_method_fnc())))) { goto _case_end_4716838672; }
		_case_begin_4716838672:;
		{
			jule::Ref<_1d21d97ee_FnIns> _330821_f = _330117_d->_field_kind->_method_fnc();
			if (_330821_f->_method_is_builtin()) {
				goto _match_end_4716838432;
			}
			if (_330821_f->_field_generics.len() != _330821_f->_field_decl->_field_generics.len()) {
				this->self->_field_s->_method_push_err(_330028_expr->_field_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>({}));
			}
			if (_330821_f->_field_decl->_method_is_method()) {
				this->self->_field_s->_method_push_err(_330028_expr->_field_token,jule::Str("methods should be invoked", 25),jule::Slice<jule::Any>({}));
			}
		}
		goto _match_end_4716838432;
		_case_end_4716838672:;
		_match_end_4716838432:;
	}
	return _330117_d;
}



inline jule::Ref<_1b9523799_Data> _1b9523799_Eval::_method_eval_expr(jule::Ref<_1d1e5192e_Expr> _332833_expr) {
	jule::Ref<_1b9523799_Data> _332917_d = this->self->_method_eval(_332833_expr);
	{
		if (!(((!(jule::real(_332917_d)))))) { goto _case_end_4716853200; }
		_case_begin_4716853200:;
		{
			return jule::new_ref<_1b9523799_Data>();
		}
		goto _match_end_4716851616;
		_case_end_4716853200:;
		if (!((_332917_d->_field_decl))) { goto _case_end_4716853552; }
		_case_begin_4716853552:;
		{
			this->self->_method_push_err(_332833_expr->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1b9523799_Data>();
		}
		goto _match_end_4716851616;
		_case_end_4716853552:;
		_case_begin_4716851744:;
		{
			return _332917_d;
		}
		goto _match_end_4716851616;
		_case_end_4716851744:;
		_match_end_4716851616:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1b9523799_Eval &_Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "owner:" << _Src._field_owner;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b951b088_TypeKind::_method_to_str(void) {
	if ((*this)._method_is_nil()) {
		return jule::Str("nil", 3);
	}
	jule::Str _6317_kind = jule::Str("", 0);
	if ((*this)._field_variadic) {
		_6317_kind+=jule::Str("...", 3);
	}
	if ((*this)._method_cpp_linked()) {
		_6317_kind+=jule::Str("cpp.", 4) + (*this)._field_cpp_ident;
	} else {
		_6317_kind+=(*this)._field_kind.get()._method_to_str();
	}
	return _6317_kind;
}



inline jule::Bool _1b951b088_TypeKind::_method_equals(jule::Ref<_1b951b088_TypeKind> _7821_other) {
	if ((*this)._method_is_nil()) {
		return _7821_other->_method_is_nil();
	}
	if ((*this)._method_cpp_linked()) {
		if ((!(_7821_other->_method_cpp_linked()))) {
			return false;
		}
		return (*this)._field_cpp_ident == _7821_other->_field_cpp_ident;
	}
	return (*this)._field_kind.get()._method_equals(_7821_other);
}



inline jule::Ref<_1b951b088_TypeKind> _1b951b088_TypeKind::_method_clone(void) {
	if ((!(jule::real(this->self)))) {
		return jule::new_ref<_1b951b088_TypeKind>();
	}
	jule::Ref<_1b951b088_TypeKind> _10117_kind = jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(this->self->_field_cpp_ident,jule::Bool(),this->self->_field_kind));
	return _10117_kind;
}



inline jule::Bool _1b951b088_TypeKind::_method_cpp_linked(void) {
	return (*this)._field_cpp_ident.len() != 0LL;
}



inline jule::Bool _1b951b088_TypeKind::_method_is_nil(void) {
	return (*this)._field_kind == nullptr;
}



inline jule::Bool _1b951b088_TypeKind::_method_void(void) {
	jule::Ref<_1b951b088_Prim> _11613_prim = (*((&((*this)))))._method_prim();
	return jule::real(_11613_prim) && (_11613_prim->_method_to_str() == jule::Str("void", 4));
}



inline jule::Bool _1b951b088_TypeKind::_method_lvalue(void) {
	{
		_1b951b088_TypeKind* _12321__self = (&((*this)));
		return ((jule::real(_12321__self->_method_ref()) || jule::real(_12321__self->_method_ptr())) || jule::real(_12321__self->_method_slc())) || jule::real(_12321__self->_method_map());
	}
}



inline jule::Bool _1b951b088_TypeKind::_method_mutable(void) {
	{
		_1b951b088_TypeKind* _13521__self = (&((*this)));
		if (jule::real(_13521__self->_method_strct())) {
			return _13521__self->_method_strct()->_field_mutable;
		}
		if (jule::real(_13521__self->_method_trt())) {
			return _13521__self->_method_trt()->_field_mutable;
		}
		if (jule::real(_13521__self->_method_prim())) {
			jule::Ref<_1b951b088_Prim> _14421_p = _13521__self->_method_prim();
			return _14421_p->_method_is_any();
		}
		if (jule::real(_13521__self->_method_arr())) {
			return _13521__self->_method_arr()->_field_elem->_method_mutable();
		}
		return (jule::real(_13521__self->_method_slc()) || jule::real(_13521__self->_method_ptr())) || jule::real(_13521__self->_method_ref());
	}
}



inline jule::Bool _1b951b088_TypeKind::_method_nil_compatible(void) {
	{
		_1b951b088_TypeKind* _15921__self = (&((*this)));
		jule::Ref<_1b951b088_Prim> _16117_prim = _15921__self->_method_prim();
		if (jule::real(_16117_prim) && _16117_prim->_method_is_any()) {
			return true;
		}
		return ((((_15921__self->_method_is_nil() || jule::real(_15921__self->_method_fnc())) || jule::real(_15921__self->_method_ptr())) || jule::real(_15921__self->_method_trt())) || jule::real(_15921__self->_method_slc())) || jule::real(_15921__self->_method_map());
	}
}



inline jule::Bool _1b951b088_TypeKind::_method_supports_cloning(void) {
	{
		_1b951b088_TypeKind* _17821__self = (&((*this)));
		{
			if (!((jule::real(_17821__self->_method_prim())))) { goto _case_end_4717328416; }
			_case_begin_4717328416:;
			{
				return (!(_17821__self->_method_prim()->_method_is_any()));
			}
			goto _match_end_4717327824;
			_case_end_4717328416:;
			if (!((jule::real(_17821__self->_method_enm())))) { goto _case_end_4717328528; }
			_case_begin_4717328528:;
			{
				return true;
			}
			goto _match_end_4717327824;
			_case_end_4717328528:;
			if (!((jule::real(_17821__self->_method_fnc())))) { goto _case_end_4717329648; }
			_case_begin_4717329648:;
			{
				return true;
			}
			goto _match_end_4717327824;
			_case_end_4717329648:;
			if (!((jule::real(_17821__self->_method_ptr())))) { goto _case_end_4717329760; }
			_case_begin_4717329760:;
			{
				return true;
			}
			goto _match_end_4717327824;
			_case_end_4717329760:;
			if (!((jule::real(_17821__self->_method_slc())))) { goto _case_end_4717329872; }
			_case_begin_4717329872:;
			{
				return _17821__self->_method_slc()->_field_elem->_method_supports_cloning();
			}
			goto _match_end_4717327824;
			_case_end_4717329872:;
			if (!((jule::real(_17821__self->_method_map())))) { goto _case_end_4717329984; }
			_case_begin_4717329984:;
			{
				jule::Ref<_1b951b088_Map> _19221_m = _17821__self->_method_map();
				return _19221_m->_field_key->_method_supports_cloning() && _19221_m->_field_val->_method_supports_cloning();
			}
			goto _match_end_4717327824;
			_case_end_4717329984:;
			if (!((jule::real(_17821__self->_method_arr())))) { goto _case_end_4717329008; }
			_case_begin_4717329008:;
			{
				return _17821__self->_method_arr()->_field_elem->_method_supports_cloning();
			}
			goto _match_end_4717327824;
			_case_end_4717329008:;
			if (!((jule::real(_17821__self->_method_ref())))) { goto _case_end_4717329120; }
			_case_begin_4717329120:;
			{
				return _17821__self->_method_ref()->_field_elem->_method_supports_cloning();
			}
			goto _match_end_4717327824;
			_case_end_4717329120:;
			if (!((jule::real(_17821__self->_method_strct())))) { goto _case_end_4717329248; }
			_case_begin_4717329248:;
			{
				jule::Ref<_1d21c0b59_StructIns> _20225_s = _17821__self->_method_strct();
				if ((!(_20225_s->_field_mutable))) {
					return true;
				}
				if (((!(jule::real(_20225_s->_field_decl))) || _20225_s->_field_decl->_field_cpp_linked) || (!(_20225_s->_field_decl->_method_is_derives(jule::Str("Clone", 5))))) {
					return false;
				}
				return true;
			}
			goto _match_end_4717327824;
			_case_end_4717329248:;
			_case_begin_4717327952:;
			{
				return false;
			}
			goto _match_end_4717327824;
			_case_end_4717327952:;
			_match_end_4717327824:;
		}
	}
}



inline jule::Bool _1b951b088_TypeKind::_method_variadicable(void) {
	{
		_1b951b088_TypeKind* _22021__self = (&((*this)));
		return jule::real(_22021__self->_method_slc());
	}
}



inline jule::Ref<_1b951b088_Prim> _1b951b088_TypeKind::_method_prim(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1b951b088_Prim>>())) { goto _case_end_4717352880; }
		_case_begin_4717352880:;
		{
			return (*this)._field_kind.operator jule::Ref<_1b951b088_Prim>();
		}
		goto _match_end_4717342192;
		_case_end_4717352880:;
		_case_begin_4717349952:;
		{
			return jule::new_ref<_1b951b088_Prim>();
		}
		goto _match_end_4717342192;
		_case_end_4717349952:;
		_match_end_4717342192:;
	}
}



inline jule::Ref<_1b951b088_Ref> _1b951b088_TypeKind::_method_ref(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1b951b088_Ref>>())) { goto _case_end_4717356368; }
		_case_begin_4717356368:;
		{
			return (*this)._field_kind.operator jule::Ref<_1b951b088_Ref>();
		}
		goto _match_end_4717354544;
		_case_end_4717356368:;
		_case_begin_4717351600:;
		{
			return jule::new_ref<_1b951b088_Ref>();
		}
		goto _match_end_4717354544;
		_case_end_4717351600:;
		_match_end_4717354544:;
	}
}



inline jule::Ref<_1b951b088_Ptr> _1b951b088_TypeKind::_method_ptr(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1b951b088_Ptr>>())) { goto _case_end_4717359856; }
		_case_begin_4717359856:;
		{
			return (*this)._field_kind.operator jule::Ref<_1b951b088_Ptr>();
		}
		goto _match_end_4717358032;
		_case_end_4717359856:;
		_case_begin_4717354912:;
		{
			return jule::new_ref<_1b951b088_Ptr>();
		}
		goto _match_end_4717358032;
		_case_end_4717354912:;
		_match_end_4717358032:;
	}
}



inline jule::Ref<_1b8dae520_Enum> _1b951b088_TypeKind::_method_enm(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1b8dae520_Enum>>())) { goto _case_end_4717363344; }
		_case_begin_4717363344:;
		{
			return (*this)._field_kind.operator jule::Ref<_1b8dae520_Enum>();
		}
		goto _match_end_4717361520;
		_case_end_4717363344:;
		_case_begin_4717358400:;
		{
			return jule::new_ref<_1b8dae520_Enum>();
		}
		goto _match_end_4717361520;
		_case_end_4717358400:;
		_match_end_4717361520:;
	}
}



inline jule::Ref<_1b951b088_Arr> _1b951b088_TypeKind::_method_arr(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1b951b088_Arr>>())) { goto _case_end_4717366896; }
		_case_begin_4717366896:;
		{
			return (*this)._field_kind.operator jule::Ref<_1b951b088_Arr>();
		}
		goto _match_end_4717365120;
		_case_end_4717366896:;
		_case_begin_4717361872:;
		{
			return jule::new_ref<_1b951b088_Arr>();
		}
		goto _match_end_4717365120;
		_case_end_4717361872:;
		_match_end_4717365120:;
	}
}



inline jule::Ref<_1b951b088_Slc> _1b951b088_TypeKind::_method_slc(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1b951b088_Slc>>())) { goto _case_end_4717370384; }
		_case_begin_4717370384:;
		{
			return (*this)._field_kind.operator jule::Ref<_1b951b088_Slc>();
		}
		goto _match_end_4717368560;
		_case_end_4717370384:;
		_case_begin_4717365472:;
		{
			return jule::new_ref<_1b951b088_Slc>();
		}
		goto _match_end_4717368560;
		_case_end_4717365472:;
		_match_end_4717368560:;
	}
}



inline jule::Ref<_1d21d97ee_FnIns> _1b951b088_TypeKind::_method_fnc(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1d21d97ee_FnIns>>())) { goto _case_end_4717374000; }
		_case_begin_4717374000:;
		{
			return (*this)._field_kind.operator jule::Ref<_1d21d97ee_FnIns>();
		}
		goto _match_end_4717370960;
		_case_end_4717374000:;
		_case_begin_4717368832:;
		{
			return jule::new_ref<_1d21d97ee_FnIns>();
		}
		goto _match_end_4717370960;
		_case_end_4717368832:;
		_match_end_4717370960:;
	}
}



inline jule::Ref<_1d21c0b59_StructIns> _1b951b088_TypeKind::_method_strct(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1d21c0b59_StructIns>>())) { goto _case_end_4717377488; }
		_case_begin_4717377488:;
		{
			return (*this)._field_kind.operator jule::Ref<_1d21c0b59_StructIns>();
		}
		goto _match_end_4717375664;
		_case_end_4717377488:;
		_case_begin_4717372656:;
		{
			return jule::new_ref<_1d21c0b59_StructIns>();
		}
		goto _match_end_4717375664;
		_case_end_4717372656:;
		_match_end_4717375664:;
	}
}



inline jule::Ref<_1b8cd2894_Trait> _1b951b088_TypeKind::_method_trt(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1b8cd2894_Trait>>())) { goto _case_end_4717381040; }
		_case_begin_4717381040:;
		{
			return (*this)._field_kind.operator jule::Ref<_1b8cd2894_Trait>();
		}
		goto _match_end_4717379264;
		_case_end_4717381040:;
		_case_begin_4717376016:;
		{
			return jule::new_ref<_1b8cd2894_Trait>();
		}
		goto _match_end_4717379264;
		_case_end_4717376016:;
		_match_end_4717379264:;
	}
}



inline jule::Ref<_1b951b088_Map> _1b951b088_TypeKind::_method_map(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1b951b088_Map>>())) { goto _case_end_4717384528; }
		_case_begin_4717384528:;
		{
			return (*this)._field_kind.operator jule::Ref<_1b951b088_Map>();
		}
		goto _match_end_4717382704;
		_case_end_4717384528:;
		_case_begin_4717379616:;
		{
			return jule::new_ref<_1b951b088_Map>();
		}
		goto _match_end_4717382704;
		_case_end_4717379616:;
		_match_end_4717382704:;
	}
}



inline jule::Ref<_1b951b088_Tuple> _1b951b088_TypeKind::_method_tup(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1b951b088_Tuple>>())) { goto _case_end_4717388080; }
		_case_begin_4717388080:;
		{
			return (*this)._field_kind.operator jule::Ref<_1b951b088_Tuple>();
		}
		goto _match_end_4717386256;
		_case_end_4717388080:;
		_case_begin_4717383072:;
		{
			return jule::new_ref<_1b951b088_Tuple>();
		}
		goto _match_end_4717386256;
		_case_end_4717383072:;
		_match_end_4717386256:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1b951b088_TypeKind &_Src) {
	_Stream << "TypeKind{";
	_Stream << "cpp_ident:" << _Src._field_cpp_ident << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b951b088_TypeSymbol::_method_checked(void) {
	return jule::real((*this)._field_kind);
}



inline void _1b951b088_TypeSymbol::_method_remove_kind(void) {
	jule::drop((*this)._field_kind);
}







std::ostream &operator<<(std::ostream &_Stream, const _1b951b088_TypeSymbol &_Src) {
	_Stream << "TypeSymbol{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b951b088_Prim::_method_to_str(void) {
	return (*this)._field_kind;
}



inline jule::Bool _1b951b088_Prim::_method_equals(jule::Ref<_1b951b088_TypeKind> _33921_other) {
	jule::Ref<_1b951b088_Prim> _34013_prim = (_33921_other).alloc->_method_prim();
	if ((!(jule::real(_34013_prim)))) {
		return false;
	}
	return _1b9d698d6_real_kind_of((*this)._field_kind) == _1b9d698d6_real_kind_of(_34013_prim->_field_kind);
}



inline jule::Bool _1b951b088_Prim::_method_is_i8(void) {
	return (*this)._field_kind == jule::Str("i8", 2);
}



inline jule::Bool _1b951b088_Prim::_method_is_i16(void) {
	return (*this)._field_kind == jule::Str("i16", 3);
}



inline jule::Bool _1b951b088_Prim::_method_is_i32(void) {
	return (*this)._field_kind == jule::Str("i32", 3);
}



inline jule::Bool _1b951b088_Prim::_method_is_i64(void) {
	return (*this)._field_kind == jule::Str("i64", 3);
}



inline jule::Bool _1b951b088_Prim::_method_is_u8(void) {
	return (*this)._field_kind == jule::Str("u8", 2);
}



inline jule::Bool _1b951b088_Prim::_method_is_u16(void) {
	return (*this)._field_kind == jule::Str("u16", 3);
}



inline jule::Bool _1b951b088_Prim::_method_is_u32(void) {
	return (*this)._field_kind == jule::Str("u32", 3);
}



inline jule::Bool _1b951b088_Prim::_method_is_u64(void) {
	return (*this)._field_kind == jule::Str("u64", 3);
}



inline jule::Bool _1b951b088_Prim::_method_is_f32(void) {
	return (*this)._field_kind == jule::Str("f32", 3);
}



inline jule::Bool _1b951b088_Prim::_method_is_f64(void) {
	return (*this)._field_kind == jule::Str("f64", 3);
}



inline jule::Bool _1b951b088_Prim::_method_is_int(void) {
	return (*this)._field_kind == jule::Str("int", 3);
}



inline jule::Bool _1b951b088_Prim::_method_is_uint(void) {
	return (*this)._field_kind == jule::Str("uint", 4);
}



inline jule::Bool _1b951b088_Prim::_method_is_uintptr(void) {
	return (*this)._field_kind == jule::Str("uintptr", 7);
}



inline jule::Bool _1b951b088_Prim::_method_is_bool(void) {
	return (*this)._field_kind == jule::Str("bool", 4);
}



inline jule::Bool _1b951b088_Prim::_method_is_str(void) {
	return (*this)._field_kind == jule::Str("str", 3);
}



inline jule::Bool _1b951b088_Prim::_method_is_any(void) {
	return (*this)._field_kind == jule::Str("any", 3);
}







std::ostream &operator<<(std::ostream &_Stream, const _1b951b088_Prim &_Src) {
	_Stream << "Prim{";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b951b088_Ref::_method_to_str(void) {
	return jule::Str("&", 1) + (*this)._field_elem->_method_to_str();
}



inline jule::Bool _1b951b088_Ref::_method_equals(jule::Ref<_1b951b088_TypeKind> _40821_other) {
	jule::Ref<_1b951b088_Ref> _40913_ref = (_40821_other).alloc->_method_ref();
	if ((!(jule::real(_40913_ref)))) {
		return false;
	}
	return (*this)._field_elem->_method_equals(_40913_ref->_field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, const _1b951b088_Ref &_Src) {
	_Stream << "Ref{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b951b088_Slc::_method_to_str(void) {
	return jule::Str("[]", 2) + (*this)._field_elem->_method_to_str();
}



inline jule::Bool _1b951b088_Slc::_method_equals(jule::Ref<_1b951b088_TypeKind> _42721_other) {
	jule::Ref<_1b951b088_Slc> _42813_slc = (_42721_other).alloc->_method_slc();
	if ((!(jule::real(_42813_slc)))) {
		return false;
	}
	return (*this)._field_elem->_method_equals(_42813_slc->_field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, const _1b951b088_Slc &_Src) {
	_Stream << "Slc{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b951b088_Tuple::_method_to_str(void) {
	jule::Str _44417_s = jule::Str("(", 1);
	_44417_s+=(*this)._field_types[0LL]->_method_to_str();
	{
		auto _range_expr = (*this)._field_types.slice(1LL);
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b951b088_TypeKind> _1b951b088_t = *_range_begin;
			_iter_begin_4717446016:;
			{
				_44417_s+=jule::Str(",", 1);
				_44417_s+=_1b951b088_t->_method_to_str();
			}
			_iter_next_4717446016:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b951b088_t = *_range_begin; goto _iter_begin_4717446016; }
			_iter_end_4717446016:;
		}
	}
	_44417_s+=jule::Str(")", 1);
	return _44417_s;
}



inline jule::Bool _1b951b088_Tuple::_method_equals(jule::Ref<_1b951b088_TypeKind> _45521_other) {
	jule::Ref<_1b951b088_Tuple> _45613_tup = (_45521_other).alloc->_method_tup();
	if ((!(jule::real(_45613_tup)))) {
		return false;
	}
	if ((*this)._field_types.len() != _45613_tup->_field_types.len()) {
		return false;
	}
	jule::Int _46517_i = 0LL;
	_iter_begin_4717452944:;
	if (!(_46517_i < (*this)._field_types.len())) { goto _iter_end_4717452944; }
	{
		if ((!((*this)._field_types[static_cast<jule::Int>(_46517_i)]->_method_equals(_45613_tup->_field_types[static_cast<jule::Int>(_46517_i)])))) {
			return false;
		}
	}
	_iter_next_4717452944:;
	(_46517_i)++;
	goto _iter_begin_4717452944;
	_iter_end_4717452944:;
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b951b088_Tuple &_Src) {
	_Stream << "Tuple{";
	_Stream << "types:" << _Src._field_types;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b951b088_Map::_method_to_str(void) {
	jule::Str _48517_s = jule::Str("[", 1);
	_48517_s+=(*this)._field_key->_method_to_str();
	_48517_s+=jule::Str(":", 1);
	_48517_s+=(*this)._field_val->_method_to_str();
	_48517_s+=jule::Str("]", 1);
	return _48517_s;
}



inline jule::Bool _1b951b088_Map::_method_equals(jule::Ref<_1b951b088_TypeKind> _49421_other) {
	jule::Ref<_1b951b088_Map> _49513_map = (_49421_other).alloc->_method_map();
	if ((!(jule::real(_49513_map)))) {
		return false;
	}
	return (*this)._field_key->_method_equals(_49513_map->_field_key) && (*this)._field_val->_method_equals(_49513_map->_field_val);
}







std::ostream &operator<<(std::ostream &_Stream, const _1b951b088_Map &_Src) {
	_Stream << "Map{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b951b088_Arr::_method_to_str(void) {
	jule::Str _51317_s = jule::Str("[", 1);
	_51317_s+=_1d17893cc_itoa((*this)._field_n);
	_51317_s+=jule::Str("]", 1);
	_51317_s+=(*this)._field_elem->_method_to_str();
	return _51317_s;
}



inline jule::Bool _1b951b088_Arr::_method_equals(jule::Ref<_1b951b088_TypeKind> _52121_other) {
	jule::Ref<_1b951b088_Arr> _52213_arr = (_52121_other).alloc->_method_arr();
	if ((!(jule::real(_52213_arr)))) {
		return false;
	}
	return ((*this)._field_n == _52213_arr->_field_n) && (*this)._field_elem->_method_equals(_52213_arr->_field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, const _1b951b088_Arr &_Src) {
	_Stream << "Arr{";
	_Stream << "auto:" << _Src._field_auto << ", ";
	_Stream << "n:" << _Src._field_n << ", ";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b951b088_Ptr::_method_to_str(void) {
	if ((*this)._method_is_unsafe()) {
		return jule::Str("*unsafe", 7);
	}
	return jule::Str("*", 1) + (*this)._field_elem->_method_to_str();
}



inline jule::Bool _1b951b088_Ptr::_method_equals(jule::Ref<_1b951b088_TypeKind> _54521_other) {
	jule::Ref<_1b951b088_Ptr> _54613_ptr = (_54521_other).alloc->_method_ptr();
	if ((!(jule::real(_54613_ptr)))) {
		return false;
	}
	return (*this)._field_elem->_method_equals(_54613_ptr->_field_elem);
}



inline jule::Bool _1b951b088_Ptr::_method_is_unsafe(void) {
	return (!(jule::real((*this)._field_elem)));
}







std::ostream &operator<<(std::ostream &_Stream, const _1b951b088_Ptr &_Src) {
	_Stream << "Ptr{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b951b088_Referencer &_Src) {
	_Stream << "Referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_1b8e0c01d_ImportInfo> _1d1c2a7b3_PlainImporter::_method_get_import(jule::Str _10033_path) {
	{
		auto _range_expr = (*this)._field_all_packages;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b8e0c01d_ImportInfo> _1d1c2a7b3_p = *_range_begin;
			_iter_begin_4718128576:;
			{
				if (_1d1c2a7b3_p->_field_path == _10033_path) {
					return _1d1c2a7b3_p;
				}
			}
			_iter_next_4718128576:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d1c2a7b3_p = *_range_begin; goto _iter_begin_4718128576; }
			_iter_end_4718128576:;
		}
	}
	return jule::new_ref<_1b8e0c01d_ImportInfo>();
}



inline std::tuple<jule::Slice<jule::Ref<_1d21640e7_Ast>>,jule::Slice<_1d0557e9e_Log>> _1d1c2a7b3_PlainImporter::_method_import_package(jule::Str _11037_path) {
	jule::Slice<jule::Ref<_1d1e19221_DirEntry>> _11114_dirents;
	jule::Str _11123_err_msg;
	std::tie(_11114_dirents,_11123_err_msg) = _1d1c2a7b3_read_package_dirents(_11037_path);
	if (_11123_err_msg != jule::Str("", 0)) {
		jule::Slice<_1d0557e9e_Log> _11321_errors = jule::Slice<_1d0557e9e_Log>({_1d1c2a7b3_flat_compiler_err(_11123_err_msg)});
		return std::make_tuple(nullptr,_11321_errors);
	}
	jule::Slice<jule::Ref<_1d21640e7_Ast>> _11717_asts = jule::Slice<jule::Ref<_1d21640e7_Ast>>::alloc(0LL,static_cast<jule::Int>(static_cast<jule::I64>(_11114_dirents.len())));
	{
		auto _range_expr = _11114_dirents;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d1e19221_DirEntry> _1d1c2a7b3_dirent = *_range_begin;
			_iter_begin_4718133856:;
			{
				jule::Str _11917__path = _1d0680a33_join(jule::Slice<jule::Str>({_11037_path,_1d1c2a7b3_dirent->_field_name}));
				jule::Ref<_1d1ee01b5_File> _12021_file = _1d1ee01b5_new_file_set(_11917__path);
				_12021_file->_method_fill(_1d1c2a7b3_read_buff(_12021_file->_method_path()));
				jule::Slice<_1d0557e9e_Log> _12221_errors = _1d215b155_lex(_12021_file);
				if (_12221_errors.len() > 0LL) {
					return std::make_tuple(nullptr,_12221_errors);
				}
				jule::Ref<_1d1ee1617_FileInfo> _12721_finfo = _1d1ee1617_parse_file(_12021_file);
				if (_12721_finfo->_field_errors.len() > 0LL) {
					return std::make_tuple(nullptr,_12721_finfo->_field_errors);
				}
				if ((!(_1d1958e4d_is_pass_file_annotation(_1d1c2a7b3_dirent->_field_name)))) {
					goto _iter_next_4718133856;
				}
				if ((!(_1d1c2a7b3_is_pass_build_directives(_12721_finfo->_field_ast)))) {
					goto _iter_next_4718133856;
				}
				_11717_asts=jule::append(_11717_asts,jule::Slice<jule::Ref<_1d21640e7_Ast>>({_12721_finfo->_field_ast}));
			}
			_iter_next_4718133856:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d1c2a7b3_dirent = *_range_begin; goto _iter_begin_4718133856; }
			_iter_end_4718133856:;
		}
	}
	return std::make_tuple(_11717_asts,nullptr);
}



inline void _1d1c2a7b3_PlainImporter::_method_imported(jule::Ref<_1b8e0c01d_ImportInfo> _14835_imp) {
	{
		auto _range_expr = (*this)._field_all_packages;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b8e0c01d_ImportInfo> _1d1c2a7b3_p = *_range_begin;
			_iter_begin_4718160336:;
			{
				if ((_1d1c2a7b3_p->_field_cpp_linked == _14835_imp->_field_cpp_linked) && (_1d1c2a7b3_p->_field_link_path == _14835_imp->_field_link_path)) {
					return;
				}
			}
			_iter_next_4718160336:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d1c2a7b3_p = *_range_begin; goto _iter_begin_4718160336; }
			_iter_end_4718160336:;
		}
	}
	(*this)._field_all_packages=jule::append((*this)._field_all_packages,jule::Slice<jule::Ref<_1b8e0c01d_ImportInfo>>({_14835_imp}));
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1c2a7b3_PlainImporter &_Src) {
	_Stream << "PlainImporter{";
	_Stream << "all_packages:" << _Src._field_all_packages;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d162b2a2_OrderedDefines &_Src) {
	_Stream << "OrderedDefines{";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "globals:" << _Src._field_globals;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d162b2a2_DefineOrderer::_static_method_is_common_ordered_0(jule::Slice<jule::Ref<_1b919cb2c_Var>>& _1837_s,jule::Ref<_1b919cb2c_Var> _1846_t) {
	jule::Int _1917_j = 0LL;
	{
		auto _range_expr = _1837_s;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b919cb2c_Var> _1d162b2a2_tt = *_range_begin;
			_iter_begin_4718291888:;
			{
				if ((_1d162b2a2_tt).alloc == (_1846_t).alloc) {
					goto _iter_end_4718291888;
				}
				if ((_1d162b2a2_tt).alloc == (_1846_t->_field_depends[static_cast<jule::Int>(_1917_j)]).alloc) {
					(_1917_j)++;
					if (_1917_j >= _1846_t->_field_depends.len()) {
						return true;
					}
				}
			}
			_iter_next_4718291888:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d162b2a2_tt = *_range_begin; goto _iter_begin_4718291888; }
			_iter_end_4718291888:;
		}
	}
	return false;
}

inline jule::Bool _1d162b2a2_DefineOrderer::_static_method_is_common_ordered_1(jule::Slice<jule::Ref<_1d21c0b59_Struct>>& _1837_s,jule::Ref<_1d21c0b59_Struct> _1846_t) {
	jule::Int _1917_j = 0LL;
	{
		auto _range_expr = _1837_s;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d21c0b59_Struct> _1d162b2a2_tt = *_range_begin;
			_iter_begin_4718324432:;
			{
				if ((_1d162b2a2_tt).alloc == (_1846_t).alloc) {
					goto _iter_end_4718324432;
				}
				if ((_1d162b2a2_tt).alloc == (_1846_t->_field_depends[static_cast<jule::Int>(_1917_j)]).alloc) {
					(_1917_j)++;
					if (_1917_j >= _1846_t->_field_depends.len()) {
						return true;
					}
				}
			}
			_iter_next_4718324432:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d162b2a2_tt = *_range_begin; goto _iter_begin_4718324432; }
			_iter_end_4718324432:;
		}
	}
	return false;
}



inline void _1d162b2a2_DefineOrderer::_static_method_order_common_0(jule::Slice<jule::Ref<_1b919cb2c_Var>>& _3640_s) {
	jule::Int _3717_i = 0LL;
	{
		auto _range_expr = _3640_s;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1d162b2a2_j = 0;
			jule::Ref<_1b919cb2c_Var> _1d162b2a2_t = *_range_begin;
			_iter_begin_4718268736:;
			{
				if (_1d162b2a2_t->_field_depends.len() == 0LL) {
					std::tie(_3640_s[static_cast<jule::Int>(_3717_i)],_3640_s[static_cast<jule::Int>(_1d162b2a2_j)]) = std::make_tuple(_1d162b2a2_t,_3640_s[static_cast<jule::Int>(_3717_i)]);
					(_3717_i)++;
				}
			}
			_iter_next_4718268736:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1d162b2a2_j; _1d162b2a2_t = *_range_begin; goto _iter_begin_4718268736; }
			_iter_end_4718268736:;
		}
	}
	jule::Int _4517_j = _3717_i;
	_iter_begin_4718267712:;
	if (!(_4517_j < _3640_s.len())) { goto _iter_end_4718267712; }
	{
		jule::Int _4721_k = _3717_i;
		_iter_begin_4718277968:;
		if (!(_4721_k < (_3640_s.len() - 1LL))) { goto _iter_end_4718277968; }
		{
			if ((!(_1d162b2a2_DefineOrderer::_static_method_is_common_ordered_0(_3640_s,_3640_s[static_cast<jule::Int>(_4721_k)])))) {
				std::tie(_3640_s[static_cast<jule::Int>(_4721_k)],_3640_s[static_cast<jule::Int>(_4721_k + 1LL)]) = std::make_tuple(_3640_s[static_cast<jule::Int>(_4721_k + 1LL)],_3640_s[static_cast<jule::Int>(_4721_k)]);
			}
		}
		_iter_next_4718277968:;
		(_4721_k)++;
		goto _iter_begin_4718277968;
		_iter_end_4718277968:;
	}
	_iter_next_4718267712:;
	(_4517_j)++;
	goto _iter_begin_4718267712;
	_iter_end_4718267712:;
}

inline void _1d162b2a2_DefineOrderer::_static_method_order_common_1(jule::Slice<jule::Ref<_1d21c0b59_Struct>>& _3640_s) {
	jule::Int _3717_i = 0LL;
	{
		auto _range_expr = _3640_s;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1d162b2a2_j = 0;
			jule::Ref<_1d21c0b59_Struct> _1d162b2a2_t = *_range_begin;
			_iter_begin_4718301344:;
			{
				if (_1d162b2a2_t->_field_depends.len() == 0LL) {
					std::tie(_3640_s[static_cast<jule::Int>(_3717_i)],_3640_s[static_cast<jule::Int>(_1d162b2a2_j)]) = std::make_tuple(_1d162b2a2_t,_3640_s[static_cast<jule::Int>(_3717_i)]);
					(_3717_i)++;
				}
			}
			_iter_next_4718301344:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1d162b2a2_j; _1d162b2a2_t = *_range_begin; goto _iter_begin_4718301344; }
			_iter_end_4718301344:;
		}
	}
	jule::Int _4517_j = _3717_i;
	_iter_begin_4718300320:;
	if (!(_4517_j < _3640_s.len())) { goto _iter_end_4718300320; }
	{
		jule::Int _4721_k = _3717_i;
		_iter_begin_4718310576:;
		if (!(_4721_k < (_3640_s.len() - 1LL))) { goto _iter_end_4718310576; }
		{
			if ((!(_1d162b2a2_DefineOrderer::_static_method_is_common_ordered_1(_3640_s,_3640_s[static_cast<jule::Int>(_4721_k)])))) {
				std::tie(_3640_s[static_cast<jule::Int>(_4721_k)],_3640_s[static_cast<jule::Int>(_4721_k + 1LL)]) = std::make_tuple(_3640_s[static_cast<jule::Int>(_4721_k + 1LL)],_3640_s[static_cast<jule::Int>(_4721_k)]);
			}
		}
		_iter_next_4718310576:;
		(_4721_k)++;
		goto _iter_begin_4718310576;
		_iter_end_4718310576:;
	}
	_iter_next_4718300320:;
	(_4517_j)++;
	goto _iter_begin_4718300320;
	_iter_end_4718300320:;
}



inline void _1d162b2a2_DefineOrderer::_static_method_order_variables(jule::Slice<jule::Ref<_1b919cb2c_Var>>& _5840_vars) {
	_1d162b2a2_DefineOrderer::_static_method_order_common_0(_5840_vars);
}



inline void _1d162b2a2_DefineOrderer::_static_method_order_structures(jule::Slice<jule::Ref<_1d21c0b59_Struct>>& _6441_structs) {
	_1d162b2a2_DefineOrderer::_static_method_order_common_1(_6441_structs);
}







std::ostream &operator<<(std::ostream &_Stream, const _1d162b2a2_DefineOrderer &_Src) {
	_Stream << "DefineOrderer{";
	_Stream << "}";
	return _Stream;
}



inline void _1d063d21b_ScopeDeadCode::_method_optimize_child(jule::Ref<_1b8cd2c4b_Scope>& _2239_s) {
	jule::Ref<_1d063d21b_ScopeDeadCode> _2317_sdc = jule::new_struct<_1d063d21b_ScopeDeadCode>(new( std::nothrow ) _1d063d21b_ScopeDeadCode(this->self,_2239_s,(&(_2239_s->_field_stmts)),jule::Int()));
	{
		_2317_sdc->_method_optimize_stmts();
	}
}



inline void _1d063d21b_ScopeDeadCode::_method_eliminate_followed(void) {
	(*((*this)._field_stmts))=(*((*this)._field_stmts)).slice(0LL,static_cast<jule::Int>((*this)._field_i + 1LL));
	jule::Ref<_1d063d21b_ScopeDeadCode> _3317_parent = (*this)._field_parent;
	_iter_begin_4718621504:;
	if (!(jule::real(_3317_parent))) { goto _iter_end_4718621504; }
	{
		(*(_3317_parent->_field_stmts))=(*(_3317_parent->_field_stmts)).slice(0LL,static_cast<jule::Int>(_3317_parent->_field_i + 1LL));
		_3317_parent=_3317_parent->_field_parent;
	}
	_iter_next_4718621504:;
	goto _iter_begin_4718621504;
	_iter_end_4718621504:;
}



inline void _1d063d21b_ScopeDeadCode::_method_optimize_stmt(jule::Any _4044_st) {
	{
		auto _match_expr{ _4044_st };
		if (!(_match_expr.type_is<jule::Ref<_1b8cd2c4b_Scope>>())) { goto _case_end_4718628688; }
		_case_begin_4718628688:;
		{
			jule::Ref<_1b8cd2c4b_Scope> _4321_scope = _4044_st.operator jule::Ref<_1b8cd2c4b_Scope>();
			if (_4321_scope->_field_deferred) {
				_1d063d21b_eliminate_dead_code_of_scope(_4321_scope);
			} else {
				this->self->_method_optimize_child(_4321_scope);
			}
		}
		goto _match_end_4718628352;
		_case_end_4718628688:;
		if (!(_match_expr.type_is<jule::Ref<_1b9523799_Data>>())) { goto _case_end_4718628816; }
		_case_begin_4718628816:;
		{
			{
				auto _match_expr{ _4044_st.operator jule::Ref<_1b9523799_Data>()->_field_model };
				if (!(_match_expr.type_is<jule::Ref<_1b8dbae99_BuiltinPanicCallExprModel>>())) { goto _case_end_4718635504; }
				_case_begin_4718635504:;
				{
					this->self->_method_eliminate_followed();
				}
				goto _match_end_4718632832;
				_case_end_4718635504:;
				_match_end_4718632832:;
			}
		}
		goto _match_end_4718628352;
		_case_end_4718628816:;
		if (!(_match_expr.type_is<jule::Ref<_1b8cd2c4b_RetSt>>())) { goto _case_end_4718629072; }
		_case_begin_4718629072:;
		{
			this->self->_method_eliminate_followed();
		}
		goto _match_end_4718628352;
		_case_end_4718629072:;
		_match_end_4718628352:;
	}
}



inline void _1d063d21b_ScopeDeadCode::_method_optimize_stmts(void) {
	this->self->_field_i=0LL;
	_iter_begin_4718633840:;
	if (!(this->self->_field_i < this->self->_field_stmts->len())) { goto _iter_end_4718633840; }
	{
		this->self->_method_optimize_stmt((*(this->self->_field_stmts))[static_cast<jule::Int>(this->self->_field_i)]);
	}
	_iter_next_4718633840:;
	(this->self->_field_i)++;
	goto _iter_begin_4718633840;
	_iter_end_4718633840:;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d063d21b_ScopeDeadCode &_Src) {
	_Stream << "ScopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::U64 _1ba3a81dd_AbsTime::_method_unix(void) {
	jule::Bool _5417_leap = false;
	jule::Uint _5517_y = (*this)._field_year - 1900LL;
	jule::Uint _5617_m = (*this)._field_month - 1LL;
	if ((_5617_m >= 12LL) || (_5617_m < 0LL)) {
		jule::Uint _5821_adj = jule::div(_5617_m,12LL);
		_5617_m = jule::mod(_5617_m,12LL);
		if (_5617_m < 0LL) {
			(_5821_adj)--;
			_5617_m+=12LL;
		}
		_5517_y+=_5821_adj;
	}
	jule::U64 _6617_t = _1ba3a81dd_unix_year_to_seconds(_5517_y,_5417_leap);
	_6617_t+=static_cast<jule::U64>(_1ba3a81dd_unix_month_to_seconds(_5617_m,_5417_leap));
	_6617_t+=static_cast<jule::Uint>(86400LL * ((*this)._field_day - 1LL));
	_6617_t+=static_cast<jule::Uint>(3600LL * (*this)._field_hour);
	_6617_t+=static_cast<jule::Uint>(60LL * (*this)._field_minute);
	_6617_t+=(*this)._field_second;
	return _6617_t;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ba3a81dd_AbsTime &_Src) {
	_Stream << "AbsTime{";
	_Stream << "day:" << _Src._field_day << ", ";
	_Stream << "week_day:" << _Src._field_week_day << ", ";
	_Stream << "year_day:" << _Src._field_year_day << ", ";
	_Stream << "month:" << _Src._field_month << ", ";
	_Stream << "year:" << _Src._field_year << ", ";
	_Stream << "second:" << _Src._field_second << ", ";
	_Stream << "minute:" << _Src._field_minute << ", ";
	_Stream << "hour:" << _Src._field_hour;
	_Stream << "}";
	return _Stream;
}



inline _1ba3a81dd_Time _1ba3a81dd_Time::_static_method_unix(jule::U64 _8924_sec) {
	return _1ba3a81dd_Time(_8924_sec);
}



inline _1ba3a81dd_Time _1ba3a81dd_Time::_static_method_now(void) {
	return _1ba3a81dd_Time::_static_method_unix(static_cast<jule::U64>(_1ba3a81dd_unix()));
}



inline jule::U64 _1ba3a81dd_Time::_method_unix(void) {
	return (*this)._field_sec;
}



inline jule::Uint _1ba3a81dd_Time::_method_day(void) {
	return static_cast<jule::Uint>((*this)._method_abs()._field_day);
}



inline jule::Uint _1ba3a81dd_Time::_method_month(void) {
	return static_cast<jule::Uint>((*this)._method_abs()._field_month);
}



inline jule::Uint _1ba3a81dd_Time::_method_year(void) {
	return static_cast<jule::Uint>((*this)._method_abs()._field_year);
}



inline jule::Uint _1ba3a81dd_Time::_method_second(void) {
	return static_cast<jule::Uint>((*this)._method_abs()._field_second);
}



inline jule::Uint _1ba3a81dd_Time::_method_minute(void) {
	return static_cast<jule::Uint>((*this)._method_abs()._field_minute);
}



inline jule::Uint _1ba3a81dd_Time::_method_hour(void) {
	return static_cast<jule::Uint>((*this)._method_abs()._field_hour);
}



inline _1ba3a81dd_AbsTime _1ba3a81dd_Time::_method_abs(void) {
	jule::U64 _12513_secs = (*this)._field_sec - 951868800LL;
	jule::U64 _12617_days = jule::div(_12513_secs,86400LL);
	jule::U64 _12717_rem_secs = jule::mod(_12513_secs,86400LL);
	if (_12717_rem_secs < 0LL) {
		_12717_rem_secs+=86400LL;
		(_12617_days)--;
	}
	jule::U64 _13317_qc_cycles = jule::div(_12617_days,146097LL);
	jule::U64 _13417_rem_days = jule::mod(_12617_days,146097LL);
	if (_13417_rem_days < 0LL) {
		_13417_rem_days+=146097LL;
		(_13317_qc_cycles)--;
	}
	jule::U64 _14017_c_cycles = jule::div(_13417_rem_days,36524LL);
	if (_14017_c_cycles == 4LL) {
		(_14017_c_cycles)--;
	}
	_13417_rem_days-=static_cast<jule::U64>(_14017_c_cycles * 36524LL);
	jule::U64 _14617_q_cycles = jule::div(_13417_rem_days,1461LL);
	if (_14617_q_cycles == 25LL) {
		(_14617_q_cycles)--;
	}
	_13417_rem_days-=static_cast<jule::U64>(_14617_q_cycles * 1461LL);
	jule::U64 _15217_rem_years = jule::div(_13417_rem_days,365LL);
	if (_15217_rem_years == 4LL) {
		(_15217_rem_years)--;
	}
	_13417_rem_days-=static_cast<jule::U64>(_15217_rem_years * 365LL);
	jule::Int _15813_leap = (((_15217_rem_years == 0LL) && ((_14617_q_cycles > 0LL) || (_14017_c_cycles == 0LL)))) ? (1LL) : (0LL);
	jule::U64 _15917_y_day = ((_13417_rem_days + 31LL) + 28LL) + _15813_leap;
	if (_15917_y_day >= (365LL + _15813_leap)) {
		_15917_y_day-=static_cast<jule::Int>(365LL + _15813_leap);
	}
	jule::Int _16417_months = 0LL;
	_iter_begin_4718761712:;
	if (!(_1ba3a81dd_MDAYS[static_cast<jule::Int>(_16417_months)] <= _13417_rem_days)) { goto _iter_end_4718761712; }
	{
		_13417_rem_days-=_1ba3a81dd_MDAYS[static_cast<jule::Int>(_16417_months)];
	}
	_iter_next_4718761712:;
	(_16417_months)++;
	goto _iter_begin_4718761712;
	_iter_end_4718761712:;
	_1ba3a81dd_AbsTime _16917_t = _1ba3a81dd_AbsTime();
	_16917_t._field_year=static_cast<jule::U64>((((_15217_rem_years + (4LL * _14617_q_cycles)) + (100LL * _14017_c_cycles)) + (400LL * _13317_qc_cycles)) + 100LL);
	_16917_t._field_month=static_cast<jule::Uint>(_16417_months + 2LL);
	if (_16917_t._field_month >= 12LL) {
		_16917_t._field_month-=12LL;
		(_16917_t._field_year)++;
	}
	_16917_t._field_month+=1LL;
	_16917_t._field_year+=1900LL;
	_16917_t._field_day=static_cast<jule::U64>(_13417_rem_days + 1LL);
	_16917_t._field_week_day=static_cast<jule::U64>(jule::mod(3LL + _12617_days,7LL));
	if (_16917_t._field_week_day < 0LL) {
		_16917_t._field_week_day+=7LL;
	}
	_16917_t._field_year_day=_15917_y_day;
	_16917_t._field_hour=static_cast<jule::U64>(jule::div(_12717_rem_secs,3600LL));
	_16917_t._field_minute=static_cast<jule::U64>(jule::mod(jule::div(_12717_rem_secs,60LL),60LL));
	_16917_t._field_second=static_cast<jule::U64>(jule::mod(_12717_rem_secs,60LL));
	return _16917_t;
}







std::ostream &operator<<(std::ostream &_Stream, const _1ba3a81dd_Time &_Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::I64 _1ba3a81dd_Duration::_static_method_nanoseconds(jule::I64 _22231_d) {
	return static_cast<jule::I64>(_22231_d * 1LL);
}



inline jule::I64 _1ba3a81dd_Duration::_static_method_microseconds(jule::I64 _22732_d) {
	return static_cast<jule::I64>(_22732_d * 1000LL);
}



inline jule::I64 _1ba3a81dd_Duration::_static_method_milliseconds(jule::I64 _23232_d) {
	return static_cast<jule::I64>(_23232_d * 1000000LL);
}



inline jule::I64 _1ba3a81dd_Duration::_static_method_seconds(jule::I64 _23727_d) {
	return static_cast<jule::I64>(_23727_d * 1000000000LL);
}



inline jule::I64 _1ba3a81dd_Duration::_static_method_minutes(jule::I64 _24227_d) {
	return static_cast<jule::I64>(_24227_d * 60000000000LL);
}



inline jule::I64 _1ba3a81dd_Duration::_static_method_hours(jule::I64 _24725_d) {
	return static_cast<jule::I64>(_24725_d * 3600000000000LL);
}







std::ostream &operator<<(std::ostream &_Stream, const _1ba3a81dd_Duration &_Src) {
	_Stream << "Duration{";
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1d173d293_IndexRangeSetter::_method_setup_vars(jule::Ref<_1b919cb2c_Var> _4729_key_a,jule::Ref<_1b919cb2c_Var> _4746_key_b) {
	jule::Str _4813_indent = _1ba263eab_indent();
	jule::Str _5017_obj = jule::Str("", 0);
	if (jule::real(_4729_key_a)) {
		_5017_obj+=_1ba263eab_gen_var_init_expr(_4729_key_a,jule::Str("0", 1));
		_5017_obj+=jule::Str("\n", 1);
		_5017_obj+=_4813_indent;
	}
	if (jule::real(_4746_key_b)) {
		_5017_obj+=_1ba263eab_gen_var_init_expr(_4746_key_b,jule::Str("*_range_begin", 13));
		_5017_obj+=jule::Str("\n", 1);
		_5017_obj+=_4813_indent;
	}
	return _5017_obj;
}



inline jule::Str _1d173d293_IndexRangeSetter::_method_next_steps(jule::Ref<_1b919cb2c_Var> _6629_key_a,jule::Ref<_1b919cb2c_Var> _6646_key_b,jule::Str _6659_begin) {
	jule::Str _6713_indent = _1ba263eab_indent();
	jule::Str _6917_obj = jule::Str("++_range_begin;\n", 16);
	_6917_obj+=_6713_indent;
	_6917_obj+=jule::Str("if (_range_begin != _range_end) { ", 34);
	if (jule::real(_6629_key_a)) {
		_6917_obj+=(jule::Str("++", 2) + _1ba1de70b_var_out_ident(_6629_key_a)) + jule::Str("; ", 2);
	}
	if (jule::real(_6646_key_b)) {
		_6917_obj+=_1ba1de70b_var_out_ident(_6646_key_b) + jule::Str(" = *_range_begin; ", 18);
	}
	_6917_obj+=(jule::Str("goto ", 5) + _6659_begin) + jule::Str("; }\n", 4);
	return _6917_obj;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d173d293_IndexRangeSetter &_Src) {
	_Stream << "IndexRangeSetter{";
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1d173d293_MapRangeSetter::_method_setup_vars(jule::Ref<_1b919cb2c_Var> _8829_key_a,jule::Ref<_1b919cb2c_Var> _8846_key_b) {
	jule::Str _8913_indent = _1ba263eab_indent();
	jule::Str _9017_obj = jule::Str("", 0);
	if (jule::real(_8829_key_a)) {
		_9017_obj+=_1ba263eab_gen_var_init_expr(_8829_key_a,jule::Str("_range_begin->first", 19));
		_9017_obj+=jule::Str("\n", 1);
		_9017_obj+=_8913_indent;
	}
	if (jule::real(_8846_key_b)) {
		_9017_obj+=_1ba263eab_gen_var_init_expr(_8846_key_b,jule::Str("_range_begin->second", 20));
		_9017_obj+=jule::Str("\n", 1);
		_9017_obj+=_8913_indent;
	}
	return _9017_obj;
}



inline jule::Str _1d173d293_MapRangeSetter::_method_next_steps(jule::Ref<_1b919cb2c_Var> _10729_key_a,jule::Ref<_1b919cb2c_Var> _10746_key_b,jule::Str _10759_begin) {
	jule::Str _10813_indent = _1ba263eab_indent();
	jule::Str _11017_obj = jule::Str("++_range_begin;\n", 16);
	_11017_obj+=_10813_indent;
	_11017_obj+=jule::Str("if (_range_begin != _range_end) { ", 34);
	if (jule::real(_10729_key_a)) {
		_11017_obj+=_1ba1de70b_var_out_ident(_10729_key_a);
		_11017_obj+=jule::Str(" = _range_begin->first; ", 24);
	}
	if (jule::real(_10746_key_b)) {
		_11017_obj+=_1ba1de70b_var_out_ident(_10746_key_b);
		_11017_obj+=jule::Str(" = _range_begin->second; ", 25);
	}
	_11017_obj+=(jule::Str("goto ", 5) + _10759_begin) + jule::Str("; }\n", 4);
	return _11017_obj;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d173d293_MapRangeSetter &_Src) {
	_Stream << "MapRangeSetter{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1e5192e_MatchCase &_Src) {
	_Stream << "MatchCase{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "type_match:" << _Src._field_type_match << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "cases:" << _Src._field_cases << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d1e5192e_LitExpr::_method_is_nil(void) {
	return (*this)._field_value == jule::Str("nil", 3);
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1e5192e_LitExpr &_Src) {
	_Stream << "LitExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "value:" << _Src._field_value;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1e5192e_UnsafeExpr &_Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d1e5192e_IdentExpr::_method_is_self(void) {
	return (*this)._field_ident == jule::Str("self", 4);
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1e5192e_IdentExpr &_Src) {
	_Stream << "IdentExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1e5192e_UnaryExpr &_Src) {
	_Stream << "UnaryExpr{";
	_Stream << "op:" << _Src._field_op << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1e5192e_VariadicExpr &_Src) {
	_Stream << "VariadicExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1e5192e_NsSelectionExpr &_Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "ns:" << _Src._field_ns << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1e5192e_SubIdentExpr &_Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "is_self:" << _Src._field_is_self << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1e5192e_BinopExpr &_Src) {
	_Stream << "BinopExpr{";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d1e5192e_FieldExprPair::_method_is_targeted(void) {
	return (*this)._field_field._field_id != 0LLU;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1e5192e_FieldExprPair &_Src) {
	_Stream << "FieldExprPair{";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d1e5192e_BraceLit::_method_is_empty(void) {
	return (*this)._field_exprs.len() == 0LL;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1e5192e_BraceLit &_Src) {
	_Stream << "BraceLit{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1e5192e_KeyValPair &_Src) {
	_Stream << "KeyValPair{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val << ", ";
	_Stream << "colon:" << _Src._field_colon;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d1e5192e_SliceExpr::_method_is_empty(void) {
	return (*this)._field_elems.len() == 0LL;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1e5192e_SliceExpr &_Src) {
	_Stream << "SliceExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1e5192e_IndexingExpr &_Src) {
	_Stream << "IndexingExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "index:" << _Src._field_index;
	_Stream << "}";
	return _Stream;
}



inline void _1b9176ba0_DynamicTypeAnnotation::_method_push_generic(jule::Ref<_1b951b088_TypeKind>& _54136_k,jule::Int _54150_i) {
	(*this)._field_f->_field_generics[static_cast<jule::Int>(_54150_i)]=_54136_k;
}



inline jule::Bool _1b9176ba0_DynamicTypeAnnotation::_method_annotate_prim(jule::Ref<_1b951b088_TypeKind>& _54544_k) {
	jule::Bool _54560_ok = jule::Bool();
	jule::Str _54613_kind = (*((*this)._field_k))->_method_to_str();
	{
		auto _range_expr = (*this)._field_f->_field_decl->_field_generics;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1b9176ba0_i = 0;
			jule::Ref<_1d1e5192e_GenericDecl> _1b9176ba0_g = *_range_begin;
			_iter_begin_4714298944:;
			{
				if (_54613_kind != _1b9176ba0_g->_field_ident) {
					goto _iter_next_4714298944;
				}
				jule::Ref<_1b951b088_TypeKind> _55217_t = (*this)._field_f->_field_generics[static_cast<jule::Int>(_1b9176ba0_i)];
				{
					if (!(((!(jule::real(_55217_t)))))) { goto _case_end_4714304912; }
					_case_begin_4714304912:;
					{
						(*this)._method_push_generic(_54544_k,_1b9176ba0_i);
					}
					goto _match_end_4714304656;
					_case_end_4714304912:;
					if (!(((!(_55217_t->_method_equals(_54544_k)))))) { goto _case_end_4714305024; }
					_case_begin_4714305024:;
					{
						_54560_ok = false;
						return _54560_ok;
					}
					goto _match_end_4714304656;
					_case_end_4714305024:;
					_match_end_4714304656:;
				}
				(*((*this)._field_k))->_field_kind=_54544_k->_field_kind;
				_54560_ok = true;
				return _54560_ok;
			}
			_iter_next_4714298944:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1b9176ba0_i; _1b9176ba0_g = *_range_begin; goto _iter_begin_4714298944; }
			_iter_end_4714298944:;
		}
	}
	_54560_ok = false;
	return _54560_ok;
}



inline jule::Bool _1b9176ba0_DynamicTypeAnnotation::_method_annotate_slc(jule::Ref<_1b951b088_TypeKind>& _56943_k) {
	jule::Bool _56959_ok = jule::Bool();
	jule::Ref<_1b951b088_Slc> _57017_pslc = (*((*this)._field_k))->_method_slc();
	if ((!(jule::real(_57017_pslc)))) {
		_56959_ok = false;
		return _56959_ok;
	}
	jule::Ref<_1b951b088_Slc> _57517_slc = _56943_k->_method_slc();
	_1b951b088_TypeKind* _57617_kk = (_57017_pslc->_field_elem).alloc;
	(*this)._field_k=(&(_57617_kk));
	_56959_ok = (*this)._method_annotate_kind(_57517_slc->_field_elem);
	return _56959_ok;
}



inline jule::Bool _1b9176ba0_DynamicTypeAnnotation::_method_check_map_key(_1b951b088_TypeKind** _58143_k,jule::Ref<_1b951b088_TypeKind>& _58163_ck) {
	jule::Bool _58180_ok = jule::Bool();
	_1b951b088_TypeKind** _58217_old = (*this)._field_k;
	(*this)._field_k=_58143_k;
	_58180_ok=(*this)._method_annotate_kind(_58163_ck);
	(*this)._field_k=_58217_old;
	_58180_ok = _58180_ok;
	return _58180_ok;
}



inline jule::Bool _1b9176ba0_DynamicTypeAnnotation::_method_annotate_map(jule::Ref<_1b951b088_TypeKind>& _58943_k) {
	jule::Bool _58959_ok = jule::Bool();
	jule::Ref<_1b951b088_Map> _59017_pmap = (*((*this)._field_k))->_method_map();
	if ((!(jule::real(_59017_pmap)))) {
		_58959_ok = false;
		return _58959_ok;
	}
	jule::Ref<_1b951b088_Map> _59517_m = _58943_k->_method_map();
	_1b951b088_TypeKind* _59717_key = (_59017_pmap->_field_key).alloc;
	_1b951b088_TypeKind* _59817_val = (_59017_pmap->_field_val).alloc;
	_58959_ok = (*this)._method_check_map_key((&(_59717_key)),_59517_m->_field_key) && (*this)._method_check_map_key((&(_59817_val)),_59517_m->_field_val);
	return _58959_ok;
}



inline jule::Bool _1b9176ba0_DynamicTypeAnnotation::_method_annotate_fn(jule::Ref<_1b951b088_TypeKind>& _60242_k) {
	jule::Bool _60258_ok = jule::Bool();
	jule::Ref<_1d21d97ee_FnIns> _60317_pf = (*((*this)._field_k))->_method_fnc();
	if ((!(jule::real(_60317_pf)))) {
		_60258_ok = false;
		return _60258_ok;
	}
	jule::Ref<_1d21d97ee_FnIns> _60717_f = _60242_k->_method_fnc();
	{
		if (!((_60317_pf->_field_params.len() != _60717_f->_field_params.len()))) { goto _case_end_4714345664; }
		_case_begin_4714345664:;
		{
			_60258_ok = false;
			return _60258_ok;
		}
		goto _match_end_4714345488;
		_case_end_4714345664:;
		if (!((_60317_pf->_field_decl->_method_is_void() != _60717_f->_field_decl->_method_is_void()))) { goto _case_end_4714345792; }
		_case_begin_4714345792:;
		{
			_60258_ok = false;
			return _60258_ok;
		}
		goto _match_end_4714345488;
		_case_end_4714345792:;
		_match_end_4714345488:;
	}
	_60258_ok=true;
	_1b951b088_TypeKind** _61717_old = (*this)._field_k;
	{
		auto _range_expr = _60717_f->_field_params;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1b9176ba0_i = 0;
			jule::Ref<_1d21d97ee_ParamIns> _1b9176ba0_fp = *_range_begin;
			_iter_begin_4714350288:;
			{
				_1b951b088_TypeKind* _61921_pfp = (_60317_pf->_field_params[static_cast<jule::Int>(_1b9176ba0_i)]->_field_kind).alloc;
				(*this)._field_k=(&(_61921_pfp));
				_60258_ok=(*this)._method_annotate_kind(_1b9176ba0_fp->_field_kind) && _60258_ok;
			}
			_iter_next_4714350288:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1b9176ba0_i; _1b9176ba0_fp = *_range_begin; goto _iter_begin_4714350288; }
			_iter_end_4714350288:;
		}
	}
	if ((!(_60317_pf->_field_decl->_method_is_void()))) {
		_1b951b088_TypeKind* _62521_result = (_60317_pf->_field_result).alloc;
		(*this)._field_k=(&(_62521_result));
		_60258_ok=(*this)._method_annotate_kind(_60717_f->_field_result) && _60258_ok;
	}
	(*this)._field_k=_61717_old;
	_60258_ok = _60258_ok;
	return _60258_ok;
}



inline jule::Bool _1b9176ba0_DynamicTypeAnnotation::_method_annotate_ptr(jule::Ref<_1b951b088_TypeKind>& _63443_k) {
	jule::Bool _63459_ok = jule::Bool();
	jule::Ref<_1b951b088_Ptr> _63517_pptr = (*((*this)._field_k))->_method_ptr();
	if ((!(jule::real(_63517_pptr)))) {
		_63459_ok = false;
		return _63459_ok;
	}
	jule::Ref<_1b951b088_Ptr> _64017_ptr = _63443_k->_method_ptr();
	_1b951b088_TypeKind* _64117_cpptr = (_63517_pptr->_field_elem).alloc;
	(*this)._field_k=(&(_64117_cpptr));
	_63459_ok = (*this)._method_annotate_kind(_64017_ptr->_field_elem);
	return _63459_ok;
}



inline jule::Bool _1b9176ba0_DynamicTypeAnnotation::_method_annotate_ref(jule::Ref<_1b951b088_TypeKind>& _64643_k) {
	jule::Bool _64659_ok = jule::Bool();
	jule::Ref<_1b951b088_Ref> _64717_rref = (*((*this)._field_k))->_method_ref();
	if ((!(jule::real(_64717_rref)))) {
		_64659_ok = false;
		return _64659_ok;
	}
	jule::Ref<_1b951b088_Ref> _65217_ref = _64643_k->_method_ref();
	_1b951b088_TypeKind* _65317_crref = (_64717_rref->_field_elem).alloc;
	(*this)._field_k=(&(_65317_crref));
	_64659_ok = (*this)._method_annotate_kind(_65217_ref->_field_elem);
	return _64659_ok;
}



inline jule::Bool _1b9176ba0_DynamicTypeAnnotation::_method_annotate_any(jule::Ref<_1b951b088_TypeKind>& _65843_k) {
	jule::Bool _65859_ok = jule::Bool();
	jule::Str _65913_kind = (*((*this)._field_k))->_method_to_str();
	{
		auto _range_expr = (*this)._field_f->_field_decl->_field_generics;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1b9176ba0_i = 0;
			jule::Ref<_1d1e5192e_GenericDecl> _1b9176ba0_g = *_range_begin;
			_iter_begin_4714385056:;
			{
				if (_65913_kind != _1b9176ba0_g->_field_ident) {
					goto _iter_next_4714385056;
				}
				jule::Ref<_1b951b088_TypeKind> _66517_t = (*this)._field_f->_field_generics[static_cast<jule::Int>(_1b9176ba0_i)];
				{
					if (!(((!(jule::real(_66517_t)))))) { goto _case_end_4714390864; }
					_case_begin_4714390864:;
					{
						(*this)._method_push_generic(_65843_k,_1b9176ba0_i);
					}
					goto _match_end_4714390608;
					_case_end_4714390864:;
					if (!(((!(_66517_t->_method_equals(_65843_k)))))) { goto _case_end_4714390976; }
					_case_begin_4714390976:;
					{
						_65859_ok = false;
						return _65859_ok;
					}
					goto _match_end_4714390608;
					_case_end_4714390976:;
					_match_end_4714390608:;
				}
				(*((*this)._field_k))->_field_kind=_65843_k->_field_kind;
				_65859_ok = true;
				return _65859_ok;
			}
			_iter_next_4714385056:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1b9176ba0_i; _1b9176ba0_g = *_range_begin; goto _iter_begin_4714385056; }
			_iter_end_4714385056:;
		}
	}
	_65859_ok = false;
	return _65859_ok;
}



inline jule::Bool _1b9176ba0_DynamicTypeAnnotation::_method_annotate_kind(jule::Ref<_1b951b088_TypeKind>& _68244_k) {
	jule::Bool _68260_ok = jule::Bool();
	if (((*this)._field_k == nullptr) || ((*((*this)._field_k)) == nullptr)) {
		return _68260_ok;
	}
	{
		if (!(((*this)._method_annotate_any(_68244_k)))) { goto _case_end_4714417248; }
		_case_begin_4714417248:;
		{
			_68260_ok = true;
			return _68260_ok;
		}
		goto _match_end_4714415648;
		_case_end_4714417248:;
		if (!((jule::real(_68244_k->_method_prim())))) { goto _case_end_4714417360; }
		_case_begin_4714417360:;
		{
			_68260_ok = (*this)._method_annotate_prim(_68244_k);
			return _68260_ok;
		}
		goto _match_end_4714415648;
		_case_end_4714417360:;
		if (!((jule::real(_68244_k->_method_slc())))) { goto _case_end_4714417472; }
		_case_begin_4714417472:;
		{
			_68260_ok = (*this)._method_annotate_slc(_68244_k);
			return _68260_ok;
		}
		goto _match_end_4714415648;
		_case_end_4714417472:;
		if (!((jule::real(_68244_k->_method_map())))) { goto _case_end_4714416656; }
		_case_begin_4714416656:;
		{
			_68260_ok = (*this)._method_annotate_map(_68244_k);
			return _68260_ok;
		}
		goto _match_end_4714415648;
		_case_end_4714416656:;
		if (!((jule::real(_68244_k->_method_fnc())))) { goto _case_end_4714416768; }
		_case_begin_4714416768:;
		{
			_68260_ok = (*this)._method_annotate_fn(_68244_k);
			return _68260_ok;
		}
		goto _match_end_4714415648;
		_case_end_4714416768:;
		if (!((jule::real(_68244_k->_method_ptr())))) { goto _case_end_4714416880; }
		_case_begin_4714416880:;
		{
			_68260_ok = (*this)._method_annotate_ptr(_68244_k);
			return _68260_ok;
		}
		goto _match_end_4714415648;
		_case_end_4714416880:;
		if (!((jule::real(_68244_k->_method_ref())))) { goto _case_end_4714417936; }
		_case_begin_4714417936:;
		{
			_68260_ok = (*this)._method_annotate_ref(_68244_k);
			return _68260_ok;
		}
		goto _match_end_4714415648;
		_case_end_4714417936:;
		_case_begin_4714416064:;
		{
			_68260_ok = false;
			return _68260_ok;
		}
		goto _match_end_4714415648;
		_case_end_4714416064:;
		_match_end_4714415648:;
	}
}



inline jule::Bool _1b9176ba0_DynamicTypeAnnotation::_method_annotate(void) {
	jule::Bool _69936_ok = jule::Bool();
	_1b951b088_TypeKind* _70017_pk = ((*this)._field_p->_field_kind).alloc;
	(*this)._field_k=(&(_70017_pk));
	_69936_ok = (*this)._method_annotate_kind((*this)._field_a->_field_kind);
	return _69936_ok;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b9176ba0_DynamicTypeAnnotation &_Src) {
	_Stream << "DynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "k:" << _Src._field_k;
	_Stream << "}";
	return _Stream;
}



inline void _1b9176ba0_StructLitChecker::_method_push_err(_1d1da4277_Token _93027_token,jule::Str _93041_fmt,jule::Slice<jule::Any> _93054_args) {
	(*this)._field_e->_method_push_err(_93027_token,_93041_fmt,_93054_args);
}



inline void _1b9176ba0_StructLitChecker::_method_push_suggestion(jule::Str _93534_fmt,jule::Slice<jule::Any> _93547_args) {
	(*this)._field_e->_method_push_suggestion(_93534_fmt,_93547_args);
}



inline void _1b9176ba0_StructLitChecker::_method_push_match(jule::Ref<_1d21c0b59_FieldIns>& _93934_f,jule::Ref<_1b9523799_Data>& _93953_d,_1d1da4277_Token& _93968_error_token) {
	(*this)._field_args=jule::append((*this)._field_args,jule::Slice<jule::Ref<_1b8dbae99_StructArgExprModel>>({jule::new_struct<_1b8dbae99_StructArgExprModel>(new( std::nothrow ) _1b8dbae99_StructArgExprModel(_93934_f,_93953_d->_field_model))}));
	
	
	(*this)._field_e->_field_s->_method_check_validity_for_init_expr(true,false,_93934_f->_field_kind,_93953_d,_93968_error_token);
	(*this)._field_e->_field_s->_method_check_assign_type(false,_93934_f->_field_kind,_93953_d,_93968_error_token,false);
}



inline void _1b9176ba0_StructLitChecker::_method_check_pair(jule::Ref<_1d1e5192e_FieldExprPair>& _95134_pair,jule::Slice<jule::Any>& _95161_exprs) {
	jule::Ref<_1d21c0b59_FieldIns> _95317_f = (*this)._field_s->_method_find_field(_95134_pair->_field_field._field_kind);
	if ((!(jule::real(_95317_f)))) {
		(*this)._method_push_err(_95134_pair->_field_field,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_95134_pair->_field_field._field_kind)}));
		return;
	}
	if ((!((*this)._field_e->_field_s->_method_is_accessible_define(_95317_f->_field_decl->_field_public,_95317_f->_field_decl->_field_token)))) {
		(*this)._method_push_err(_95134_pair->_field_field,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_95134_pair->_field_field._field_kind)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>({}));
	}
	_julec_label_dup_lookup:;
	{
		auto _range_expr = _95161_exprs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Any _1b9176ba0_expr = *_range_begin;
			_iter_begin_4714610160:;
			{
				{
					auto _match_expr{ _1b9176ba0_expr };
					if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_FieldExprPair>>())) { goto _case_end_4714611888; }
					_case_begin_4714611888:;
					{
						jule::Ref<_1d1e5192e_FieldExprPair> _96925_dpair = _1b9176ba0_expr.operator jule::Ref<_1d1e5192e_FieldExprPair>();
						{
							if (!((_95134_pair == _96925_dpair))) { goto _case_end_4714615008; }
							_case_begin_4714615008:;
							{
								goto _iter_end_4714610160;
							}
							goto _match_end_4714614832;
							_case_end_4714615008:;
							if (!((_95134_pair->_field_field._field_kind == _96925_dpair->_field_field._field_kind))) { goto _case_end_4714615136; }
							_case_begin_4714615136:;
							{
								(*this)._method_push_err(_95134_pair->_field_field,jule::Str("@ already has expression", 24),jule::Slice<jule::Any>({jule::Any(_95134_pair->_field_field._field_kind)}));
								goto _iter_end_4714610160;
							}
							goto _match_end_4714614832;
							_case_end_4714615136:;
							_match_end_4714614832:;
						}
					}
					goto _match_end_4714610736;
					_case_end_4714611888:;
					_match_end_4714610736:;
				}
			}
			_iter_next_4714610160:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b9176ba0_expr = *_range_begin; goto _iter_begin_4714610160; }
			_iter_end_4714610160:;
		}
	}
	jule::Ref<_1b951b088_TypeKind> _98117_prefix = (*this)._field_e->_field_prefix;
	__JULE_DEFER({
		(*this)._field_e->_field_prefix=_98117_prefix;
	});
	(*this)._field_e->_field_prefix=_95317_f->_field_kind;
	jule::Ref<_1b9523799_Data> _98517_d = (*this)._field_e->_method_eval_expr_kind(_95134_pair->_field_expr);
	if ((!(jule::real(_98517_d)))) {
		return;
	}
	(*this)._method_push_match(_95317_f,_98517_d,_95134_pair->_field_field);
}



inline jule::Bool _1b9176ba0_StructLitChecker::_method_ready_exprs(jule::Slice<jule::Any>& _99235_exprs) {
	jule::Bool _99317_ok = true;
	{
		auto _range_expr = _99235_exprs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1b9176ba0_i = 0;
			jule::Any _1b9176ba0_expr = *_range_begin;
			_iter_begin_4714629152:;
			{
				{
					auto _match_expr{ _1b9176ba0_expr };
					if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_KeyValPair>>())) { goto _case_end_4714631552; }
					_case_begin_4714631552:;
					{
						jule::Ref<_1d1e5192e_KeyValPair> _99725_pair = _1b9176ba0_expr.operator jule::Ref<_1d1e5192e_KeyValPair>();
						{
							auto _match_expr{ _99725_pair->_field_key };
							if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_IdentExpr>>())) { goto _case_end_4714635120; }
							goto _match_end_4714634112;
							_case_end_4714635120:;
							_case_begin_4714634816:;
							{
								(*this)._method_push_err(_99725_pair->_field_colon,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
								_99317_ok=false;
								goto _iter_next_4714629152;
							}
							goto _match_end_4714634112;
							_case_end_4714634816:;
							_match_end_4714634112:;
						}
						_99235_exprs[static_cast<jule::Int>(_1b9176ba0_i)]=jule::Any(jule::new_struct<_1d1e5192e_FieldExprPair>(new( std::nothrow ) _1d1e5192e_FieldExprPair(_99725_pair->_field_key.operator jule::Ref<_1d1e5192e_IdentExpr>()->_field_token,_99725_pair->_field_val)));
					}
					goto _match_end_4714630992;
					_case_end_4714631552:;
					_match_end_4714630992:;
				}
			}
			_iter_next_4714629152:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1b9176ba0_i; _1b9176ba0_expr = *_range_begin; goto _iter_begin_4714629152; }
			_iter_end_4714629152:;
		}
	}
	return _99317_ok;
}



inline void _1b9176ba0_StructLitChecker::_method_check(jule::Slice<jule::Any>& _101829_exprs) {
	if (_101829_exprs.len() == 0LL) {
		return;
	}
	if ((!((*this)._method_ready_exprs(_101829_exprs)))) {
		return;
	}
	jule::Bool _102717_paired = false;
	{
		auto _range_expr = _101829_exprs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1b9176ba0_i = 0;
			jule::Any _1b9176ba0_expr = *_range_begin;
			_iter_begin_4714646864:;
			{
				{
					auto _match_expr{ _1b9176ba0_expr };
					if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_FieldExprPair>>())) { goto _case_end_4714649360; }
					_case_begin_4714649360:;
					{
						jule::Ref<_1d1e5192e_FieldExprPair> _103125_pair = _1b9176ba0_expr.operator jule::Ref<_1d1e5192e_FieldExprPair>();
						if ((_1b9176ba0_i > 0LL) && (!(_102717_paired))) {
							(*this)._method_push_err(_103125_pair->_field_field,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
						}
						_102717_paired=true;
						(*this)._method_check_pair(_103125_pair,_101829_exprs);
					}
					goto _match_end_4714648688;
					_case_end_4714649360:;
					if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_Expr>>())) { goto _case_end_4714649472; }
					_case_begin_4714649472:;
					{
						jule::Ref<_1d1e5192e_Expr> _103925_e = _1b9176ba0_expr.operator jule::Ref<_1d1e5192e_Expr>();
						if (_102717_paired) {
							(*this)._method_push_err(_103925_e->_field_token,jule::Str("argument must target to field", 29),jule::Slice<jule::Any>({}));
						}
						if (_1b9176ba0_i >= (*this)._field_s->_field_fields.len()) {
							(*this)._method_push_err(_103925_e->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
							goto _iter_next_4714646864;
						}
						jule::Ref<_1d21c0b59_FieldIns> _104825_field = (*this)._field_s->_field_fields[static_cast<jule::Int>(_1b9176ba0_i)];
						jule::Ref<_1b951b088_TypeKind> _105025_prefix = (*this)._field_e->_field_prefix;
						__JULE_DEFER({
							(*this)._field_e->_field_prefix=_105025_prefix;
						});
						(*this)._field_e->_field_prefix=_104825_field->_field_kind;
						jule::Ref<_1b9523799_Data> _105425_d = (*this)._field_e->_method_eval_expr_kind(_103925_e->_field_kind);
						if ((!(jule::real(_105425_d)))) {
							goto _iter_next_4714646864;
						}
						(*this)._method_push_match(_104825_field,_105425_d,_103925_e->_field_token);
					}
					goto _match_end_4714648688;
					_case_end_4714649472:;
					_match_end_4714648688:;
				}
			}
			_iter_next_4714646864:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1b9176ba0_i; _1b9176ba0_expr = *_range_begin; goto _iter_begin_4714646864; }
			_iter_end_4714646864:;
		}
	}
	if ((!(_102717_paired))) {
		jule::I64 _106517_n = (*this)._field_s->_field_fields.len();
		jule::I64 _106621_diff = _106517_n - _101829_exprs.len();
		{
			if (!((_106621_diff <= 0LL))) { goto _case_end_4714673904; }
			_case_begin_4714673904:;
			{
				return;
			}
			goto _match_end_4714673664;
			_case_end_4714673904:;
			_match_end_4714673664:;
		}
		jule::Str _107221_idents = jule::Str("", 0);
		_iter_begin_4714674608:;
		if (!(_106621_diff > 0LL)) { goto _iter_end_4714674608; }
		{
			_107221_idents+=jule::Str(", ", 2) + (*this)._field_s->_field_fields[static_cast<jule::Int>(_106517_n - _106621_diff)]->_field_decl->_field_ident;
		}
		_iter_next_4714674608:;
		(_106621_diff)--;
		goto _iter_begin_4714674608;
		_iter_end_4714674608:;
		_107221_idents=_107221_idents.slice(2LL);
		(*this)._method_push_err((*this)._field_error_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(_107221_idents)}));
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1b9176ba0_StructLitChecker &_Src) {
	_Stream << "StructLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1e5192e_SlicingExpr &_Src) {
	_Stream << "SlicingExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "start:" << _Src._field_start << ", ";
	_Stream << "to:" << _Src._field_to;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1e5192e_TernaryExpr &_Src) {
	_Stream << "TernaryExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "condition:" << _Src._field_condition << ", ";
	_Stream << "true_expr:" << _Src._field_true_expr << ", ";
	_Stream << "false_expr:" << _Src._field_false_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1e5192e_LabelSt &_Src) {
	_Stream << "LabelSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1e5192e_FallSt &_Src) {
	_Stream << "FallSt{";
	_Stream << "token:" << _Src._field_token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1e5192e_AssignSt &_Src) {
	_Stream << "AssignSt{";
	_Stream << "declarative:" << _Src._field_declarative << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1e5192e_RetSt &_Src) {
	_Stream << "RetSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d1e5192e_Iter::_method_is_inf(void) {
	return (*this)._field_kind == nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1e5192e_Iter &_Src) {
	_Stream << "Iter{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d1e5192e_WhileKind::_method_is_while_next(void) {
	return (*this)._field_next != nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1e5192e_WhileKind &_Src) {
	_Stream << "WhileKind{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "next:" << _Src._field_next << ", ";
	_Stream << "next_token:" << _Src._field_next_token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1e5192e_RangeKind &_Src) {
	_Stream << "RangeKind{";
	_Stream << "in_token:" << _Src._field_in_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "key_a:" << _Src._field_key_a << ", ";
	_Stream << "key_b:" << _Src._field_key_b;
	_Stream << "}";
	return _Stream;
}



inline void _1b9176ba0_AssignTypeChecker::_method_push_err(jule::Str _44727_fmt,jule::Slice<jule::Any> _44740_args) {
	(*this)._field_s->_method_push_err((*this)._field_error_token,_44727_fmt,_44740_args);
}



inline jule::Bool _1b9176ba0_AssignTypeChecker::_method_check_validity(void) {
	jule::Bool _45217_valid = true;
	{
		if (!((jule::real((*this)._field_d->_field_kind->_method_fnc())))) { goto _case_end_4714246352; }
		_case_begin_4714246352:;
		{
			jule::Ref<_1d21d97ee_FnIns> _45617_f = (*this)._field_d->_field_kind->_method_fnc();
			{
				if (!((_45617_f->_method_is_builtin()))) { goto _case_end_4714250528; }
				_case_begin_4714250528:;
				{
					(*this)._method_push_err(jule::Str("built-in define cannot use as anonymous function", 48),jule::Slice<jule::Any>({}));
					_45217_valid=false;
				}
				goto _match_end_4714250320;
				_case_end_4714250528:;
				if (!((_45617_f->_field_decl->_field_cpp_linked))) { goto _case_end_4714250656; }
				_case_begin_4714250656:;
				{
					(*this)._method_push_err(jule::Str("cpp-linked functions cannot use as anonymous function", 53),jule::Slice<jule::Any>({}));
					_45217_valid=false;
				}
				goto _match_end_4714250320;
				_case_end_4714250656:;
				if (!((_45617_f->_field_decl->_method_is_method()))) { goto _case_end_4714250784; }
				_case_begin_4714250784:;
				{
					(*this)._method_push_err(jule::Str("methods cannot use as anonymous function", 40),jule::Slice<jule::Any>({}));
					_45217_valid=false;
				}
				goto _match_end_4714250320;
				_case_end_4714250784:;
				if (!((_45617_f->_field_decl->_field_generics.len() > 0LL))) { goto _case_end_4714250912; }
				_case_begin_4714250912:;
				{
					(*this)._method_push_err(jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>({}));
					_45217_valid=false;
				}
				goto _match_end_4714250320;
				_case_end_4714250912:;
				_match_end_4714250320:;
			}
		}
		goto _match_end_4714246176;
		_case_end_4714246352:;
		if (!((jule::real((*this)._field_d->_field_kind->_method_tup())))) { goto _case_end_4714246480; }
		_case_begin_4714246480:;
		{
			(*this)._method_push_err(jule::Str("tuples cannot assign to single define in same time", 50),jule::Slice<jule::Any>({}));
			_45217_valid=false;
		}
		goto _match_end_4714246176;
		_case_end_4714246480:;
		_match_end_4714246176:;
	}
	return _45217_valid;
}



inline jule::Bool _1b9176ba0_AssignTypeChecker::_method_check_const(void) {
	if ((((!((*this)._field_d->_method_is_const())) || (!(jule::real((*this)._field_dest->_method_prim())))) || (!(jule::real((*this)._field_d->_field_kind->_method_prim())))) || (!(_1b9e28c5e_is_num((*this)._field_d->_field_kind->_method_prim()->_field_kind)))) {
		return false;
	}
	jule::Str _49113_kind = (*this)._field_dest->_method_prim()->_field_kind;
	{
		if (!((_1b9e28c5e_is_float(_49113_kind)))) { goto _case_end_4714269872; }
		_case_begin_4714269872:;
		{
			if ((!(_1b9176ba0_float_assignable(_49113_kind,(*this)._field_d)))) {
				(*this)._method_push_err(jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>({}));
				return false;
			}
		}
		goto _match_end_4714269264;
		_case_end_4714269872:;
		if (!((_1b9e28c5e_is_int(_49113_kind)))) { goto _case_end_4714269984; }
		_case_begin_4714269984:;
		{
			if ((!(_1b9176ba0_int_assignable(_49113_kind,(*this)._field_d)))) {
				(*this)._method_push_err(jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>({}));
				return false;
			}
		}
		goto _match_end_4714269264;
		_case_end_4714269984:;
		_case_begin_4714269520:;
		{
			return false;
		}
		goto _match_end_4714269264;
		_case_end_4714269520:;
		_match_end_4714269264:;
	}
	return true;
}



inline jule::Bool _1b9176ba0_AssignTypeChecker::_method_check(void) {
	{
		if (!(((!(jule::real((*this)._field_d)))))) { goto _case_end_4714278576; }
		_case_begin_4714278576:;
		{
			return false;
		}
		goto _match_end_4714276928;
		_case_end_4714278576:;
		if (!(((!((*this)._method_check_validity()))))) { goto _case_end_4714278176; }
		_case_begin_4714278176:;
		{
			return false;
		}
		goto _match_end_4714276928;
		_case_end_4714278176:;
		if (!(((*this)._method_check_const()))) { goto _case_end_4714278288; }
		_case_begin_4714278288:;
		{
			return true;
		}
		goto _match_end_4714276928;
		_case_end_4714278288:;
		_case_begin_4714277120:;
		{
			return (*this)._field_s->_method_check_type_compatibility((*this)._field_dest,(*this)._field_d->_field_kind,(*this)._field_error_token,(*this)._field_deref);
		}
		goto _match_end_4714276928;
		_case_end_4714277120:;
		_match_end_4714276928:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1b9176ba0_AssignTypeChecker &_Src) {
	_Stream << "AssignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "deref:" << _Src._field_deref;
	_Stream << "}";
	return _Stream;
}



inline void _1b9176ba0_FnCallArgChecker::_method_push_err_token(_1d1da4277_Token _71733_token,jule::Str _71747_fmt,jule::Slice<jule::Any> _71760_args) {
	(*this)._field_e->_field_s->_method_push_err(_71733_token,_71747_fmt,_71760_args);
}



inline void _1b9176ba0_FnCallArgChecker::_method_push_err(jule::Str _72127_fmt,jule::Slice<jule::Any> _72140_args) {
	(*this)._method_push_err_token((*this)._field_error_token,_72127_fmt,_72140_args);
}



inline jule::Slice<jule::Ref<_1d21d97ee_ParamIns>> _1b9176ba0_FnCallArgChecker::_method_get_params(void) {
	if ((((*this)._field_f->_field_params.len() > 0LL) && jule::real((*this)._field_f->_field_params[0LL]->_field_decl)) && (*this)._field_f->_field_params[0LL]->_field_decl->_method_is_self()) {
		return (*this)._field_f->_field_params.slice(1LL);
	}
	return (*this)._field_f->_field_params;
}



inline jule::Bool _1b9176ba0_FnCallArgChecker::_method_check_counts(jule::Slice<jule::Ref<_1d21d97ee_ParamIns>>& _73232_params) {
	jule::Bool _73255_ok = jule::Bool();
	jule::I64 _73317_n = _73232_params.len();
	if ((_73317_n > 0LL) && _73232_params[0LL]->_field_decl->_method_is_self()) {
		(_73317_n)--;
	}
	jule::I64 _73817_diff = _73317_n - (*this)._field_args.len();
	{
		if (!((_73817_diff == 0LL))) { goto _case_end_4714459952; }
		_case_begin_4714459952:;
		{
			_73255_ok = true;
			return _73255_ok;
		}
		goto _match_end_4714459568;
		_case_end_4714459952:;
		if (!(((_73317_n > 0LL) && _73232_params[static_cast<jule::Int>(_73317_n - 1LL)]->_field_decl->_field_variadic))) { goto _case_end_4714460080; }
		_case_begin_4714460080:;
		{
			_73255_ok = true;
			return _73255_ok;
		}
		goto _match_end_4714459568;
		_case_end_4714460080:;
		if (!(((_73817_diff < 0LL) || (_73817_diff > _73232_params.len())))) { goto _case_end_4714460208; }
		_case_begin_4714460208:;
		{
			(*this)._method_push_err(jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
			_73255_ok = false;
			return _73255_ok;
		}
		goto _match_end_4714459568;
		_case_end_4714460208:;
		_match_end_4714459568:;
	}
	jule::Str _75117_idents = jule::Str("", 0);
	_iter_begin_4714464464:;
	if (!(_73817_diff > 0LL)) { goto _iter_end_4714464464; }
	{
		_75117_idents+=jule::Str(", ", 2) + _73232_params[static_cast<jule::Int>(_73317_n - _73817_diff)]->_field_decl->_field_ident;
	}
	_iter_next_4714464464:;
	(_73817_diff)--;
	goto _iter_begin_4714464464;
	_iter_end_4714464464:;
	_75117_idents=_75117_idents.slice(2LL);
	(*this)._method_push_err(jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(_75117_idents)}));
	_73255_ok = false;
	return _73255_ok;
}



inline jule::Bool _1b9176ba0_FnCallArgChecker::_method_check_arg(jule::Ref<_1d21d97ee_ParamIns>& _76133_p,jule::Ref<_1b9523799_Data>& _76152_arg,_1d1da4277_Token& _76169_error_token) {
	jule::Bool _76191_ok = jule::Bool();
	if ((*this)._field_dynamic_annotation && _1d21d97ee_parameter_uses_generics(_76133_p->_field_decl,(*this)._field_f->_field_decl->_field_generics)) {
		_1b9176ba0_DynamicTypeAnnotation _76321_dta = _1b9176ba0_DynamicTypeAnnotation((*this)._field_e,(*this)._field_f,_76133_p,_76152_arg,_76169_error_token,nullptr);
		_76191_ok=_76321_dta._method_annotate();
		if ((!(_76191_ok))) {
			(*this)._method_push_err_token(_76169_error_token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>({}));
			_76191_ok = false;
			return _76191_ok;
		}
	}
	(*this)._field_e->_field_s->_method_check_validity_for_init_expr(_76133_p->_field_decl->_field_mutable,_76133_p->_field_decl->_field_reference,_76133_p->_field_kind,_76152_arg,_76169_error_token);
	(*this)._field_e->_field_s->_method_check_assign_type(_76133_p->_field_decl->_field_reference,_76133_p->_field_kind,_76152_arg,_76169_error_token,false);
	_76191_ok = true;
	return _76191_ok;
}



inline jule::Bool _1b9176ba0_FnCallArgChecker::_method_push(jule::Ref<_1d21d97ee_ParamIns>& _78328_p,jule::Ref<_1d1e5192e_Expr> _78346_arg) {
	jule::Bool _78360_ok = jule::Bool();
	jule::Ref<_1b9523799_Data> _78417_d = jule::new_ref<_1b9523799_Data>();
	if ((!((*this)._field_dynamic_annotation)) && (!(_78328_p->_field_decl->_field_variadic))) {
		jule::Ref<_1b951b088_TypeKind> _78621_old = (*this)._field_e->_field_prefix;
		(*this)._field_e->_field_prefix=_78328_p->_field_kind;
		_78417_d=(*this)._field_e->_method_eval_expr_kind(_78346_arg->_field_kind);
		(*this)._field_e->_field_prefix=_78621_old;
	} else {
		jule::Ref<_1b951b088_TypeKind> _79121_old = (*this)._field_e->_field_prefix;
		jule::drop((*this)._field_e->_field_prefix);
		_78417_d=(*this)._field_e->_method_eval_expr_kind(_78346_arg->_field_kind);
		(*this)._field_e->_field_prefix=_79121_old;
	}
	if ((!(jule::real(_78417_d)))) {
		_78360_ok = false;
		return _78360_ok;
	}
	(*this)._field_arg_models=jule::append((*this)._field_arg_models,jule::Slice<jule::Any>({_78417_d->_field_model}));
	_78360_ok = (*this)._method_check_arg(_78328_p,_78417_d,_78346_arg->_field_token);
	return _78360_ok;
}



inline jule::Bool _1b9176ba0_FnCallArgChecker::_method_push_variadic(jule::Ref<_1d21d97ee_ParamIns>& _80337_p,jule::Int _80355_i) {
	jule::Bool _80365_ok = jule::Bool();
	_80365_ok=true;
	jule::Bool _80517_variadiced = false;
	jule::Bool _80613_more = (_80355_i + 1LL) < (*this)._field_args.len();
	jule::Ref<_1b8dbae99_SliceExprModel> _80717_model = jule::new_struct<_1b8dbae99_SliceExprModel>(new( std::nothrow ) _1b8dbae99_SliceExprModel(_80337_p->_field_kind,jule::Slice<jule::Any>()));
	jule::Ref<_1b951b088_TypeKind> _81117_old = (*this)._field_e->_field_prefix;
	_iter_begin_4714514720:;
	if (!(_80355_i < (*this)._field_args.len())) { goto _iter_end_4714514720; }
	{
		jule::Ref<_1d1e5192e_Expr> _81321_arg = (*this)._field_args[static_cast<jule::Int>(_80355_i)];
		{
			auto _match_expr{ _81321_arg->_field_kind };
			if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_VariadicExpr>>())) { goto _case_end_4714521168; }
			_case_begin_4714521168:;
			{
				(*this)._field_e->_field_prefix=jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1b951b088_Slc>(new( std::nothrow ) _1b951b088_Slc(_80337_p->_field_kind))));
			}
			goto _match_end_4714518592;
			_case_end_4714521168:;
			_case_begin_4714519424:;
			{
				(*this)._field_e->_field_prefix=_80337_p->_field_kind;
			}
			goto _match_end_4714518592;
			_case_end_4714519424:;
			_match_end_4714518592:;
		}
		jule::Ref<_1b9523799_Data> _82321_d = (*this)._field_e->_method_eval_expr_kind(_81321_arg->_field_kind);
		if ((!(jule::real(_82321_d)))) {
			_80365_ok=false;
			goto _iter_next_4714514720;
		}
		if (_82321_d->_field_variadiced) {
			_80517_variadiced=true;
			_82321_d->_field_variadiced=false;
			_80337_p->_field_kind->_field_variadic=true;
			_82321_d->_field_kind->_field_variadic=true;
			__JULE_DEFER({
				_82321_d->_field_kind->_field_variadic=false;
				_80337_p->_field_kind->_field_variadic=false;
			});
			{
				auto _match_expr{ _82321_d->_field_model };
				if (!(_match_expr.type_is<jule::Ref<_1b8dbae99_SliceExprModel>>())) { goto _case_end_4714529248; }
				_case_begin_4714529248:;
				{
					_80717_model=_82321_d->_field_model.operator jule::Ref<_1b8dbae99_SliceExprModel>();
					_80717_model->_field_elem_kind=_80337_p->_field_kind;
				}
				goto _match_end_4714530336;
				_case_end_4714529248:;
				_case_begin_4714530528:;
				{
					jule::drop(_80717_model);
					(*this)._field_arg_models=jule::append((*this)._field_arg_models,jule::Slice<jule::Any>({_82321_d->_field_model}));
				}
				goto _match_end_4714530336;
				_case_end_4714530528:;
				_match_end_4714530336:;
			}
			_80365_ok=(*this)._method_check_arg(_80337_p,_82321_d,_81321_arg->_field_token) && _80365_ok;
			goto _iter_next_4714514720;
		}
		_80717_model->_field_elems=jule::append(_80717_model->_field_elems,jule::Slice<jule::Any>({_82321_d->_field_model}));
		_80365_ok=(*this)._method_check_arg(_80337_p,_82321_d,_81321_arg->_field_token) && _80365_ok;
	}
	_iter_next_4714514720:;
	(_80355_i)++;
	goto _iter_begin_4714514720;
	_iter_end_4714514720:;
	(*this)._field_e->_field_prefix=_81117_old;
	if (_80517_variadiced && _80613_more) {
		(*this)._method_push_err(jule::Str("variadic argument can't use with more argument", 46),jule::Slice<jule::Any>({}));
	}
	if (jule::real(_80717_model)) {
		(*this)._field_arg_models=jule::append((*this)._field_arg_models,jule::Slice<jule::Any>({jule::Any(_80717_model)}));
	}
	_80365_ok = _80365_ok;
	return _80365_ok;
}



inline jule::Bool _1b9176ba0_FnCallArgChecker::_method_check_args(jule::Slice<jule::Ref<_1d21d97ee_ParamIns>>& _86934_params) {
	jule::Bool _86957_ok = jule::Bool();
	_86957_ok=true;
	jule::Int _87117_i = 0LL;
	_julec_label_iter:;
	_iter_begin_4714548352:;
	if (!(_87117_i < _86934_params.len())) { goto _iter_end_4714548352; }
	{
		jule::Ref<_1d21d97ee_ParamIns> _87421_p = _86934_params[static_cast<jule::Int>(_87117_i)];
		{
			if (!((_87421_p->_field_decl->_method_is_self()))) { goto _case_end_4714552320; }
			goto _match_end_4714551360;
			_case_end_4714552320:;
			if (!((_87421_p->_field_decl->_field_variadic))) { goto _case_end_4714552640; }
			_case_begin_4714552640:;
			{
				_86957_ok=(*this)._method_push_variadic(_87421_p,_87117_i) && _86957_ok;
				goto _iter_end_4714548352;
			}
			goto _match_end_4714551360;
			_case_end_4714552640:;
			if (!(((*this)._field_args.len() <= _87117_i))) { goto _case_end_4714552752; }
			_case_begin_4714552752:;
			{
				_86957_ok=false;
				goto _iter_end_4714548352;
			}
			goto _match_end_4714551360;
			_case_end_4714552752:;
			_case_begin_4714551488:;
			{
				_86957_ok=(*this)._method_push(_87421_p,(*this)._field_args[static_cast<jule::Int>(_87117_i)]) && _86957_ok;
			}
			goto _match_end_4714551360;
			_case_end_4714551488:;
			_match_end_4714551360:;
		}
		(_87117_i)++;
	}
	_iter_next_4714548352:;
	goto _iter_begin_4714548352;
	_iter_end_4714548352:;
	_86957_ok = _86957_ok;
	return _86957_ok;
}



inline jule::Bool _1b9176ba0_FnCallArgChecker::_method_check_dynamic_type_annotation(void) {
	jule::Bool _89650_ok = jule::Bool();
	{
		auto _range_expr = (*this)._field_f->_field_generics;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b951b088_TypeKind> _1b9176ba0_g = *_range_begin;
			_iter_begin_4714561552:;
			{
				if ((!(jule::real(_1b9176ba0_g)))) {
					(*this)._method_push_err(jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>({}));
					_89650_ok = false;
					return _89650_ok;
				}
			}
			_iter_next_4714561552:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b9176ba0_g = *_range_begin; goto _iter_begin_4714561552; }
			_iter_end_4714561552:;
		}
	}
	_89650_ok = true;
	return _89650_ok;
}



inline jule::Bool _1b9176ba0_FnCallArgChecker::_method_check(void) {
	jule::Bool _90626_ok = jule::Bool();
	jule::Slice<jule::Ref<_1d21d97ee_ParamIns>> _90717_params = (*this)._method_get_params();
	_90626_ok=(*this)._method_check_counts(_90717_params);
	if ((!(_90626_ok))) {
		_90626_ok = false;
		return _90626_ok;
	}
	_90626_ok=(*this)._method_check_args(_90717_params);
	if (_90626_ok && (*this)._field_dynamic_annotation) {
		_90626_ok=(*this)._method_check_dynamic_type_annotation();
	}
	_90626_ok = _90626_ok;
	return _90626_ok;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b9176ba0_FnCallArgChecker &_Src) {
	_Stream << "FnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamic_annotation:" << _Src._field_dynamic_annotation << ", ";
	_Stream << "arg_models:" << _Src._field_arg_models;
	_Stream << "}";
	return _Stream;
}



inline void _1b9176ba0_RetTypeChecker::_method_prepare_types(void) {
	(*this)._field_types=_1b9176ba0_get_fn_result_types((*this)._field_f);
}



inline void _1b9176ba0_RetTypeChecker::_method_prepare_exprs(jule::Ref<_1d1e5192e_Expr>& _125237_e) {
	if ((!(jule::real(_125237_e)))) {
		return;
	}
	{
		auto _match_expr{ _125237_e->_field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_TupleExpr>>())) { goto _case_end_4714782048; }
		_case_begin_4714782048:;
		{
			(*this)._field_exprs=_125237_e->_field_kind.operator jule::Ref<_1d1e5192e_TupleExpr>()->_field_expr;
		}
		goto _match_end_4714780864;
		_case_end_4714782048:;
		_case_begin_4714780256:;
		{
			(*this)._field_exprs=jule::append((*this)._field_exprs,jule::Slice<jule::Ref<_1d1e5192e_Expr>>({_125237_e}));
		}
		goto _match_end_4714780864;
		_case_end_4714780256:;
		_match_end_4714780864:;
	}
}



inline void _1b9176ba0_RetTypeChecker::_method_ret_vars(void) {
	if ((*this)._field_f->_field_decl->_method_is_void()) {
		return;
	}
	(*this)._field_vars=jule::Slice<jule::Ref<_1b919cb2c_Var>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>((*this)._field_f->_field_decl->_field_result->_field_idents.len())));
	jule::Ref<_1b8cd2c4b_ScopeChecker> _127217_root_scope = (*this)._field_sc->_method_get_root();
	jule::Int _127417_j = 0LL;
	{
		auto _range_expr = (*this)._field_f->_field_decl->_field_result->_field_idents;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1b9176ba0_i = 0;
			_1d1da4277_Token _1b9176ba0_ident = *_range_begin;
			_iter_begin_4714793024:;
			{
				if ((!(_1d1da4277_is_ignore_ident(_1b9176ba0_ident._field_kind)))) {
					(*this)._field_vars[static_cast<jule::Int>(_1b9176ba0_i)]=_127217_root_scope->_field_table->_field_vars[static_cast<jule::Int>(_127417_j)];
					(_127417_j)++;
				} else {
					(*this)._field_vars[static_cast<jule::Int>(_1b9176ba0_i)]=jule::new_struct<_1b919cb2c_Var>(new( std::nothrow ) _1b919cb2c_Var(jule::Ref<_1b8cd2c4b_Scope>(),_1d1da4277_Token(),jule::Str("_", 1),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Str(),jule::new_struct<_1b951b088_TypeSymbol>(new( std::nothrow ) _1b951b088_TypeSymbol(jule::Ref<_1d1e5192e_TypeDecl>(),(*this)._field_types[static_cast<jule::Int>(_1b9176ba0_i)])),jule::Ref<_1b9523799_Value>(),jule::Ref<_1b8b10cbb_ReferenceStack>(),jule::Slice<jule::Ref<_1d1e5192e_Directive>>(),jule::Slice<jule::Ref<_1b919cb2c_Var>>()));
				}
			}
			_iter_next_4714793024:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1b9176ba0_i; _1b9176ba0_ident = *_range_begin; goto _iter_begin_4714793024; }
			_iter_end_4714793024:;
		}
	}
	if (_127417_j == 0LL) {
		(*this)._field_vars=nullptr;
	}
}



inline void _1b9176ba0_RetTypeChecker::_method_check_exprs(void) {
	if ((*this)._field_exprs.len() == 0LL) {
		return;
	}
	jule::Slice<jule::Ref<_1b9523799_Data>> _129817_datas = jule::Slice<jule::Ref<_1b9523799_Data>>::alloc(0LL,static_cast<jule::Int>(static_cast<jule::I64>((*this)._field_exprs.len())));
	{
		auto _range_expr = (*this)._field_exprs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1b9176ba0_i = 0;
			jule::Ref<_1d1e5192e_Expr> _1b9176ba0_expr = *_range_begin;
			_iter_begin_4714808912:;
			{
				if (_1b9176ba0_i >= (*this)._field_types.len()) {
					goto _iter_end_4714808912;
				}
				jule::Ref<_1b951b088_TypeKind> _130521_t = (*this)._field_types[static_cast<jule::Int>(_1b9176ba0_i)];
				jule::Ref<_1b9523799_Data> _130721_d = (*this)._field_sc->_field_s->_method_evalp(_1b9176ba0_expr,(*this)._field_sc,_130521_t);
				if ((!(jule::real(_130721_d)))) {
					goto _iter_next_4714808912;
				}
				_129817_datas=jule::append(_129817_datas,jule::Slice<jule::Ref<_1b9523799_Data>>({_130721_d}));
				if ((!(_130721_d->_field_mutable)) && _130721_d->_field_kind->_method_mutable()) {
					(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("mutable typed return expressions should be mutable", 50),jule::Slice<jule::Any>({}));
					return;
				}
				_1b9176ba0_AssignTypeChecker _131921_ac = _1b9176ba0_AssignTypeChecker((*this)._field_sc->_field_s,_130521_t,_130721_d,(*this)._field_error_token,jule::Bool());
				_131921_ac._method_check();
			}
			_iter_next_4714808912:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1b9176ba0_i; _1b9176ba0_expr = *_range_begin; goto _iter_begin_4714808912; }
			_iter_end_4714808912:;
		}
	}
	if (_129817_datas.len() > 1LL) {
		(*this)._field_model=jule::Any(jule::new_struct<_1b8dbae99_TupleExprModel>(new( std::nothrow ) _1b8dbae99_TupleExprModel(_129817_datas)));
	} else if (_129817_datas.len() == 1LL) {
		(*this)._field_model=_129817_datas[0LL]->_field_model;
	}
}



inline jule::Bool _1b9176ba0_RetTypeChecker::_method_check(jule::Ref<_1d1e5192e_Expr>& _133829_e) {
	(*this)._method_prepare_types();
	(*this)._method_prepare_exprs(_133829_e);
	(*this)._method_ret_vars();
	jule::I64 _134313_n = (*this)._field_exprs.len();
	if ((_134313_n == 0LL) && (!((*this)._field_f->_field_decl->_method_is_void()))) {
		if ((!((*this)._field_f->_field_decl->_method_any_var()))) {
			(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("return statements of non-void functions should have return expression", 69),jule::Slice<jule::Any>({}));
			return false;
		}
		return true;
	}
	if ((_134313_n > 0LL) && (*this)._field_f->_field_decl->_method_is_void()) {
		(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("void functions is cannot returns any value", 42),jule::Slice<jule::Any>({}));
		return false;
	}
	if (_134313_n > (*this)._field_types.len()) {
		(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("overflow return expressions", 27),jule::Slice<jule::Any>({}));
	} else if (_134313_n < (*this)._field_types.len()) {
		(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("missing return expressions for multi return", 43),jule::Slice<jule::Any>({}));
	}
	(*this)._method_check_exprs();
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b9176ba0_RetTypeChecker &_Src) {
	_Stream << "RetTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1e5192e_GenericDecl &_Src) {
	_Stream << "GenericDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1e5192e_GotoSt &_Src) {
	_Stream << "GotoSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b9523799_BinopSolver::_method_check_type_compatibility(void) {
	_1b9176ba0_TypeCompatibilityChecker _335317_tcc = _1b9176ba0_TypeCompatibilityChecker((*this)._field_e->_field_s,(*this)._field_l->_field_kind,(*this)._field_r->_field_kind,(*this)._field_op,jule::Bool(),true,jule::Bool());
	return _335317_tcc._method_check();
}



inline jule::Ref<_1b9523799_Data> _1b9523799_BinopSolver::_method_eval_nil(void) {
	if ((!((*this)._field_r->_field_kind->_method_nil_compatible()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(jule::Str("nil", 3)),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_1b9523799_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4716871104; }
		_case_begin_4716871104:;
		{
			return jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_1b951b088_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1b951b088_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1b9d678e5_Const>()));
		}
		goto _match_end_4716867536;
		_case_end_4716871104:;
		_case_begin_4716862784:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(jule::Str("nil", 3))}));
			return jule::new_ref<_1b9523799_Data>();
		}
		goto _match_end_4716867536;
		_case_end_4716862784:;
		_match_end_4716867536:;
	}
}



inline jule::Ref<_1b9523799_Data> _1b9523799_BinopSolver::_method_eval_enum(void) {
	jule::Ref<_1b8dae520_Enum> _338517_enm = (*this)._field_l->_field_kind->_method_enm();
	if ((!(jule::real((*this)._field_r->_field_kind->_method_enm()))) || ((_338517_enm).alloc != ((*this)._field_r->_field_kind->_method_enm()).alloc)) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_338517_enm->_field_ident),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_1b9523799_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4716886928; }
		_case_begin_4716886928:;
		{
			return jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_1b951b088_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1b951b088_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1b9d678e5_Const>()));
		}
		goto _match_end_4716880512;
		_case_end_4716886928:;
		if (!((jule::Str("&", 1)) == _match_expr || (jule::Str("|", 1)) == _match_expr)) { goto _case_end_4716887504; }
		_case_begin_4716887504:;
		{
			if ((!(jule::real(_338517_enm->_field_kind->_field_kind->_method_prim()))) || (!(_1b9e28c5e_is_int(_338517_enm->_field_kind->_field_kind->_method_prim()->_method_to_str())))) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(_338517_enm->_field_ident)}));
			}
			return (*this)._field_l;
		}
		goto _match_end_4716880512;
		_case_end_4716887504:;
		_case_begin_4716875952:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(_338517_enm->_field_ident)}));
			return jule::new_ref<_1b9523799_Data>();
		}
		goto _match_end_4716880512;
		_case_end_4716875952:;
		_match_end_4716880512:;
	}
}



inline jule::Ref<_1b9523799_Data> _1b9523799_BinopSolver::_method_eval_ptr(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_1b9523799_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr || (jule::Str("<", 1)) == _match_expr || (jule::Str(">", 1)) == _match_expr || (jule::Str("<=", 2)) == _match_expr || (jule::Str(">=", 2)) == _match_expr)) { goto _case_end_4716906064; }
		_case_begin_4716906064:;
		{
			return jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_1b951b088_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1b951b088_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1b9d678e5_Const>()));
		}
		goto _match_end_4716901392;
		_case_end_4716906064:;
		_case_begin_4716895808:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_1b9523799_Data>();
		}
		goto _match_end_4716901392;
		_case_end_4716895808:;
		_match_end_4716901392:;
	}
}



inline jule::Ref<_1b9523799_Data> _1b9523799_BinopSolver::_method_eval_arr(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_1b9523799_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4716919024; }
		_case_begin_4716919024:;
		{
			return jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_1b951b088_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1b951b088_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1b9d678e5_Const>()));
		}
		goto _match_end_4716914448;
		_case_end_4716919024:;
		_case_begin_4716913280:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_1b9523799_Data>();
		}
		goto _match_end_4716914448;
		_case_end_4716913280:;
		_match_end_4716914448:;
	}
}



inline jule::Ref<_1b9523799_Data> _1b9523799_BinopSolver::_method_eval_slc(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_1b9523799_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4716930592; }
		_case_begin_4716930592:;
		{
			return jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_1b951b088_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1b951b088_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1b9d678e5_Const>()));
		}
		goto _match_end_4716925952;
		_case_end_4716930592:;
		_case_begin_4715403056:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_1b9523799_Data>();
		}
		goto _match_end_4716925952;
		_case_end_4715403056:;
		_match_end_4716925952:;
	}
}



inline jule::Ref<_1b9523799_Data> _1b9523799_BinopSolver::_method_eval_fn(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_1b9523799_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4716943104; }
		_case_begin_4716943104:;
		{
			return jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_1b951b088_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1b951b088_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1b9d678e5_Const>()));
		}
		goto _match_end_4716938528;
		_case_end_4716943104:;
		_case_begin_4716937360:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_1b9523799_Data>();
		}
		goto _match_end_4716938528;
		_case_end_4716937360:;
		_match_end_4716938528:;
	}
}



inline jule::Ref<_1b9523799_Data> _1b9523799_BinopSolver::_method_eval_struct(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_1b9523799_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4716955616; }
		_case_begin_4716955616:;
		{
			return jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_1b951b088_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1b951b088_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1b9d678e5_Const>()));
		}
		goto _match_end_4716951040;
		_case_end_4716955616:;
		_case_begin_4716949872:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_1b9523799_Data>();
		}
		goto _match_end_4716951040;
		_case_end_4716949872:;
		_match_end_4716951040:;
	}
}



inline jule::Ref<_1b9523799_Data> _1b9523799_BinopSolver::_method_eval_trait(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_1b9523799_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4716968128; }
		_case_begin_4716968128:;
		{
			return jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_1b951b088_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1b951b088_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1b9d678e5_Const>()));
		}
		goto _match_end_4716963552;
		_case_end_4716968128:;
		_case_begin_4716962384:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_1b9523799_Data>();
		}
		goto _match_end_4716963552;
		_case_end_4716962384:;
		_match_end_4716963552:;
	}
}



inline jule::Ref<_1b9523799_Data> _1b9523799_BinopSolver::_method_eval_any(void) {
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4716975488; }
		_case_begin_4716975488:;
		{
			return jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_1b951b088_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1b951b088_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1b9d678e5_Const>()));
		}
		goto _match_end_4716970128;
		_case_end_4716975488:;
		_case_begin_4716970944:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(jule::Str("any", 3))}));
			return jule::new_ref<_1b9523799_Data>();
		}
		goto _match_end_4716970128;
		_case_end_4716970944:;
		_match_end_4716970128:;
	}
}



inline jule::Ref<_1b9523799_Data> _1b9523799_BinopSolver::_method_eval_bool(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_1b9523799_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr || (jule::Str("&&", 2)) == _match_expr || (jule::Str("||", 2)) == _match_expr)) { goto _case_end_4716988144; }
		_case_begin_4716988144:;
		{
			return (*this)._field_l;
		}
		goto _match_end_4716983440;
		_case_end_4716988144:;
		_case_begin_4716982368:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_1b9523799_Data>();
		}
		goto _match_end_4716983440;
		_case_end_4716982368:;
		_match_end_4716983440:;
	}
}



inline jule::Ref<_1b9523799_Data> _1b9523799_BinopSolver::_method_eval_str(void) {
	jule::Str _357917_rk = (*this)._field_r->_field_kind->_method_to_str();
	if (_357917_rk != jule::Str("str", 3)) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any(_357917_rk)}));
		return jule::new_ref<_1b9523799_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("+", 1)) == _match_expr)) { goto _case_end_4717000352; }
		_case_begin_4717000352:;
		{
			return (*this)._field_l;
		}
		goto _match_end_4716996304;
		_case_end_4717000352:;
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4717000912; }
		_case_begin_4717000912:;
		{
			return jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_1b951b088_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1b951b088_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1b9d678e5_Const>()));
		}
		goto _match_end_4716996304;
		_case_end_4717000912:;
		_case_begin_4716995552:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(jule::Str("any", 3))}));
			return jule::new_ref<_1b9523799_Data>();
		}
		goto _match_end_4716996304;
		_case_end_4716995552:;
		_match_end_4716996304:;
	}
}



inline void _1b9523799_BinopSolver::_method_set_type_to_greater(void) {
	if (((*this)._field_l->_method_is_const() && (*this)._field_r->_method_is_const()) || ((!((*this)._field_l->_method_is_const())) && (!((*this)._field_r->_method_is_const())))) {
		jule::Str _360517_lk = (*this)._field_l->_field_kind->_method_to_str();
		jule::Str _360617_rk = (*this)._field_r->_field_kind->_method_to_str();
		if (_1b9e404b2_is_greater(_360617_rk,_360517_lk)) {
			(*this)._field_l->_field_kind=(*this)._field_r->_field_kind;
		}
		return;
	}
	if ((*this)._field_l->_method_is_const()) {
		(*this)._field_l->_field_kind=(*this)._field_r->_field_kind;
		return;
	}
	(*this)._field_r->_field_kind=(*this)._field_l->_field_kind;
}



inline void _1b9523799_BinopSolver::_method_check_mod_data(jule::Ref<_1b9523799_Data> _362137_d) {
	if ((!(_362137_d->_method_is_const()))) {
		if ((!(jule::real(_362137_d->_field_kind->_method_prim()))) || (!(_1b9e28c5e_is_int(_362137_d->_field_kind->_method_prim()->_field_kind)))) {
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>({}));
		}
		return;
	}
	{
		if (!((_1b9176ba0_sig_assignable(jule::Str("i64", 3),_362137_d)))) { goto _case_end_4717025088; }
		_case_begin_4717025088:;
		{
			_362137_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_362137_d->_field_constant->_method_as_i64()));
		}
		goto _match_end_4717017328;
		_case_end_4717025088:;
		if (!((_1b9176ba0_unsig_assignable(jule::Str("u64", 3),_362137_d)))) { goto _case_end_4717025200; }
		_case_begin_4717025200:;
		{
			_362137_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_362137_d->_field_constant->_method_as_u64()));
		}
		goto _match_end_4717017328;
		_case_end_4717025200:;
		_case_begin_4717017456:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4717017328;
		_case_end_4717017456:;
		_match_end_4717017328:;
	}
}



inline void _1b9523799_BinopSolver::_method_mod(void) {
	(*this)._method_check_mod_data((*this)._field_l);
	(*this)._method_check_mod_data((*this)._field_r);
}



inline jule::Bool _1b9523799_BinopSolver::_method_numbers_are_compatibile(jule::Str& _364639_lk,jule::Str& _364649_rk) {
	if ((*this)._field_l->_method_is_const()) {
		return true;
	}
	if (_364639_lk == jule::Str("f32", 3)) {
		if ((*this)._field_r->_method_is_const()) {
			return true;
		}
		return _364649_rk == jule::Str("f32", 3);
	}
	if (_364639_lk == jule::Str("f64", 3)) {
		if ((*this)._field_r->_method_is_const()) {
			return true;
		}
		return _364649_rk == jule::Str("f64", 3);
	}
	if ((*this)._field_r->_method_is_const()) {
		if ((!((*this)._field_r->_field_constant->_method_is_f64()))) {
			return true;
		}
		{
			auto _match_expr{ (*this)._field_r->_field_model };
			if (!(_match_expr.type_is<jule::Ref<_1b9d678e5_Const>>())) { goto _case_end_4717045120; }
			_case_begin_4717045120:;
			{
				return _1b9176ba0_int_assignable(jule::Str("int", 3),(*this)._field_r) || _1b9176ba0_int_assignable(jule::Str("uint", 4),(*this)._field_r);
			}
			goto _match_end_4717041392;
			_case_end_4717045120:;
			_case_begin_4717044816:;
			{
				return false;
			}
			goto _match_end_4717041392;
			_case_end_4717044816:;
			_match_end_4717041392:;
		}
	}
	return (!(_1b9e28c5e_is_float(_364649_rk)));
}



inline jule::Ref<_1b9523799_Data> _1b9523799_BinopSolver::_method_eval_float(void) {
	jule::Str _368513_lk = (*this)._field_l->_field_kind->_method_to_str();
	jule::Str _368613_rk = (*this)._field_r->_field_kind->_method_to_str();
	if ((!((*this)._method_numbers_are_compatibile(_368513_lk,_368613_rk)))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_368513_lk),jule::Any(_368613_rk)}));
		return jule::new_ref<_1b9523799_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr || (jule::Str("<", 1)) == _match_expr || (jule::Str(">", 1)) == _match_expr || (jule::Str(">=", 2)) == _match_expr || (jule::Str("<=", 2)) == _match_expr)) { goto _case_end_4717052928; }
		_case_begin_4717052928:;
		{
			return jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_1b951b088_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1b951b088_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1b9d678e5_Const>()));
		}
		goto _match_end_4717057168;
		_case_end_4717052928:;
		_match_end_4717057168:;
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("+", 1)) == _match_expr || (jule::Str("-", 1)) == _match_expr || (jule::Str("*", 1)) == _match_expr || (jule::Str("/", 1)) == _match_expr)) { goto _case_end_4717063920; }
		_case_begin_4717063920:;
		{
			(*this)._method_set_type_to_greater();
			return (*this)._field_l;
		}
		goto _match_end_4717057536;
		_case_end_4717063920:;
		if (!((jule::Str("%", 1)) == _match_expr)) { goto _case_end_4717064496; }
		_case_begin_4717064496:;
		{
			if ((!(_1b9e28c5e_is_int(_368613_rk)))) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_368513_lk),jule::Any(_368613_rk)}));
				return jule::new_ref<_1b9523799_Data>();
			}
			(*this)._method_mod();
			return (*this)._field_r;
		}
		goto _match_end_4717057536;
		_case_end_4717064496:;
		_case_begin_4717060704:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for floating-point type(s)", 52),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind)}));
			return jule::new_ref<_1b9523799_Data>();
		}
		goto _match_end_4717057536;
		_case_end_4717060704:;
		_match_end_4717057536:;
	}
}



inline jule::Ref<_1b9523799_Data> _1b9523799_BinopSolver::_method_eval_unsig_int(void) {
	jule::Str _373113_lk = (*this)._field_l->_field_kind->_method_to_str();
	jule::Str _373213_rk = (*this)._field_r->_field_kind->_method_to_str();
	if ((!((*this)._method_numbers_are_compatibile(_373113_lk,_373213_rk)))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_373113_lk),jule::Any(_373213_rk)}));
		return jule::new_ref<_1b9523799_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr || (jule::Str("<", 1)) == _match_expr || (jule::Str(">", 1)) == _match_expr || (jule::Str(">=", 2)) == _match_expr || (jule::Str("<=", 2)) == _match_expr)) { goto _case_end_4717074448; }
		_case_begin_4717074448:;
		{
			return jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_1b951b088_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1b951b088_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1b9d678e5_Const>()));
		}
		goto _match_end_4717078768;
		_case_end_4717074448:;
		_match_end_4717078768:;
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("+", 1)) == _match_expr || (jule::Str("-", 1)) == _match_expr || (jule::Str("*", 1)) == _match_expr || (jule::Str("/", 1)) == _match_expr || (jule::Str("&", 1)) == _match_expr || (jule::Str("|", 1)) == _match_expr || (jule::Str("^", 1)) == _match_expr)) { goto _case_end_4717085424; }
		_case_begin_4717085424:;
		{
			(*this)._method_set_type_to_greater();
			return (*this)._field_l;
		}
		goto _match_end_4717081296;
		_case_end_4717085424:;
		if (!((jule::Str("%", 1)) == _match_expr)) { goto _case_end_4717086000; }
		_case_begin_4717086000:;
		{
			(*this)._method_mod();
			(*this)._method_set_type_to_greater();
			return (*this)._field_l;
		}
		goto _match_end_4717081296;
		_case_end_4717086000:;
		if (!((jule::Str("<<", 2)) == _match_expr || (jule::Str(">>", 2)) == _match_expr)) { goto _case_end_4717085216; }
		_case_begin_4717085216:;
		{
			if ((!(_1b9523799_is_ok_for_shifting((*this)._field_r)))) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>({}));
				return jule::new_ref<_1b9523799_Data>();
			}
			if ((*this)._field_l->_method_is_const()) {
				(*this)._field_l->_field_kind=(*this)._field_r->_field_kind;
			}
			return (*this)._field_l;
		}
		goto _match_end_4717081296;
		_case_end_4717085216:;
		_case_begin_4717082208:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for unsigned integer type(s)", 54),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind)}));
			return jule::new_ref<_1b9523799_Data>();
		}
		goto _match_end_4717081296;
		_case_end_4717082208:;
		_match_end_4717081296:;
	}
}



inline jule::Ref<_1b9523799_Data> _1b9523799_BinopSolver::_method_eval_sig_int(void) {
	jule::Str _379013_lk = (*this)._field_l->_field_kind->_method_to_str();
	jule::Str _379113_rk = (*this)._field_r->_field_kind->_method_to_str();
	if ((!((*this)._method_numbers_are_compatibile(_379013_lk,_379113_rk)))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_379013_lk),jule::Any(_379113_rk)}));
		return jule::new_ref<_1b9523799_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr || (jule::Str("<", 1)) == _match_expr || (jule::Str(">", 1)) == _match_expr || (jule::Str(">=", 2)) == _match_expr || (jule::Str("<=", 2)) == _match_expr)) { goto _case_end_4717099776; }
		_case_begin_4717099776:;
		{
			return jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_1b951b088_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1b951b088_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1b9d678e5_Const>()));
		}
		goto _match_end_4717103920;
		_case_end_4717099776:;
		_match_end_4717103920:;
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("+", 1)) == _match_expr || (jule::Str("-", 1)) == _match_expr || (jule::Str("*", 1)) == _match_expr || (jule::Str("/", 1)) == _match_expr || (jule::Str("&", 1)) == _match_expr || (jule::Str("|", 1)) == _match_expr || (jule::Str("^", 1)) == _match_expr)) { goto _case_end_4717109616; }
		_case_begin_4717109616:;
		{
			(*this)._method_set_type_to_greater();
			return (*this)._field_l;
		}
		goto _match_end_4717106064;
		_case_end_4717109616:;
		if (!((jule::Str("%", 1)) == _match_expr)) { goto _case_end_4717110192; }
		_case_begin_4717110192:;
		{
			(*this)._method_mod();
			(*this)._method_set_type_to_greater();
			return (*this)._field_l;
		}
		goto _match_end_4717106064;
		_case_end_4717110192:;
		if (!((jule::Str("<<", 2)) == _match_expr || (jule::Str(">>", 2)) == _match_expr)) { goto _case_end_4717109408; }
		_case_begin_4717109408:;
		{
			if ((!(_1b9523799_is_ok_for_shifting((*this)._field_r)))) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>({}));
				return jule::new_ref<_1b9523799_Data>();
			}
			return (*this)._field_l;
		}
		goto _match_end_4717106064;
		_case_end_4717109408:;
		_case_begin_4717104496:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for integer type(s)", 45),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind)}));
			return jule::new_ref<_1b9523799_Data>();
		}
		goto _match_end_4717106064;
		_case_end_4717104496:;
		_match_end_4717106064:;
	}
}



inline jule::Ref<_1b9523799_Data> _1b9523799_BinopSolver::_method_eval_prim(void) {
	jule::Ref<_1b951b088_Prim> _384513_prim = (*this)._field_l->_field_kind->_method_prim();
	{
		if (!((_384513_prim->_method_is_any()))) { goto _case_end_4717120304; }
		_case_begin_4717120304:;
		{
			return (*this)._method_eval_any();
		}
		goto _match_end_4717120112;
		_case_end_4717120304:;
		if (!((_384513_prim->_method_is_bool()))) { goto _case_end_4717120432; }
		_case_begin_4717120432:;
		{
			return (*this)._method_eval_bool();
		}
		goto _match_end_4717120112;
		_case_end_4717120432:;
		if (!((_384513_prim->_method_is_str()))) { goto _case_end_4717120560; }
		_case_begin_4717120560:;
		{
			return (*this)._method_eval_str();
		}
		goto _match_end_4717120112;
		_case_end_4717120560:;
		_match_end_4717120112:;
	}
	jule::Ref<_1b951b088_Prim> _385213_rprim = (*this)._field_r->_field_kind->_method_prim();
	if ((!(jule::real(_385213_rprim)))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_384513_prim->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_1b9523799_Data>();
	}
	jule::Str _385813_lk = _384513_prim->_method_to_str();
	{
		if (!((_1b9e28c5e_is_float(_385813_lk)))) { goto _case_end_4717134176; }
		_case_begin_4717134176:;
		{
			return (*this)._method_eval_float();
		}
		goto _match_end_4717126560;
		_case_end_4717134176:;
		if (!((_1b9e28c5e_is_unsig_int(_385813_lk)))) { goto _case_end_4717133184; }
		_case_begin_4717133184:;
		{
			return (*this)._method_eval_unsig_int();
		}
		goto _match_end_4717126560;
		_case_end_4717133184:;
		if (!((_1b9e28c5e_is_sig_int(_385813_lk)))) { goto _case_end_4717133392; }
		_case_begin_4717133392:;
		{
			return (*this)._method_eval_sig_int();
		}
		goto _match_end_4717126560;
		_case_end_4717133392:;
		_case_begin_4717126688:;
		{
			return jule::new_ref<_1b9523799_Data>();
		}
		goto _match_end_4717126560;
		_case_end_4717126688:;
		_match_end_4717126560:;
	}
}



inline jule::Ref<_1b9523799_Data> _1b9523799_BinopSolver::_method_eval(void) {
	{
		if (!(((*this)._field_l->_field_kind->_method_void()))) { goto _case_end_4717140096; }
		_case_begin_4717140096:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(jule::Str("void", 4))}));
			return jule::new_ref<_1b9523799_Data>();
		}
		goto _match_end_4717138032;
		_case_end_4717140096:;
		if (!(((*this)._field_l->_field_kind->_method_is_nil()))) { goto _case_end_4717140672; }
		_case_begin_4717140672:;
		{
			return (*this)._method_eval_nil();
		}
		goto _match_end_4717138032;
		_case_end_4717140672:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_enm())))) { goto _case_end_4717139888; }
		_case_begin_4717139888:;
		{
			return (*this)._method_eval_enum();
		}
		goto _match_end_4717138032;
		_case_end_4717139888:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_ptr())))) { goto _case_end_4717140336; }
		_case_begin_4717140336:;
		{
			return (*this)._method_eval_ptr();
		}
		goto _match_end_4717138032;
		_case_end_4717140336:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_arr())))) { goto _case_end_4717140448; }
		_case_begin_4717140448:;
		{
			return (*this)._method_eval_arr();
		}
		goto _match_end_4717138032;
		_case_end_4717140448:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_slc())))) { goto _case_end_4717139280; }
		_case_begin_4717139280:;
		{
			return (*this)._method_eval_slc();
		}
		goto _match_end_4717138032;
		_case_end_4717139280:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_fnc())))) { goto _case_end_4717139392; }
		_case_begin_4717139392:;
		{
			return (*this)._method_eval_fn();
		}
		goto _match_end_4717138032;
		_case_end_4717139392:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_trt()) || jule::real((*this)._field_r->_field_kind->_method_trt())))) { goto _case_end_4717139504; }
		_case_begin_4717139504:;
		{
			if (jule::real((*this)._field_r->_field_kind->_method_trt())) {
				std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple((*this)._field_r,(*this)._field_l);
			}
			return (*this)._method_eval_trait();
		}
		goto _match_end_4717138032;
		_case_end_4717139504:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_strct())))) { goto _case_end_4717138528; }
		_case_begin_4717138528:;
		{
			return (*this)._method_eval_struct();
		}
		goto _match_end_4717138032;
		_case_end_4717138528:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_prim())))) { goto _case_end_4717138640; }
		_case_begin_4717138640:;
		{
			return (*this)._method_eval_prim();
		}
		goto _match_end_4717138032;
		_case_end_4717138640:;
		_case_begin_4717138224:;
		{
			return jule::new_ref<_1b9523799_Data>();
		}
		goto _match_end_4717138032;
		_case_end_4717138224:;
		_match_end_4717138032:;
	}
}



inline void _1b9523799_BinopSolver::_method_solve_const(jule::Ref<_1b9523799_Data> _390834_d) {
	{
		if (!(((!(jule::real(_390834_d)))))) { goto _case_end_4717166784; }
		_case_begin_4717166784:;
		{
			return;
		}
		goto _match_end_4717166560;
		_case_end_4717166784:;
		if (!(((!((*this)._field_l->_method_is_const()))) || ((!((*this)._field_r->_method_is_const()))))) { goto _case_end_4717166912; }
		_case_begin_4717166912:;
		{
			jule::drop(_390834_d->_field_constant);
			return;
		}
		goto _match_end_4717166560;
		_case_end_4717166912:;
		_match_end_4717166560:;
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr)) { goto _case_end_4717169936; }
		_case_begin_4717169936:;
		{
			_390834_d->_field_constant=_1b9d678e5_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_eqs((*this)._field_r->_field_constant));
		}
		goto _match_end_4717170576;
		_case_end_4717169936:;
		if (!((jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4717170064; }
		_case_begin_4717170064:;
		{
			_390834_d->_field_constant=_1b9d678e5_Const::_static_method_new_bool((!((*this)._field_l->_field_constant->_method_eqs((*this)._field_r->_field_constant))));
		}
		goto _match_end_4717170576;
		_case_end_4717170064:;
		if (!((jule::Str("::", 2)) == _match_expr)) { goto _case_end_4717171280; }
		_case_begin_4717171280:;
		{
			_390834_d->_field_constant=_1b9d678e5_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_or((*this)._field_r->_field_constant));
		}
		goto _match_end_4717170576;
		_case_end_4717171280:;
		if (!((jule::Str("&&", 2)) == _match_expr)) { goto _case_end_4717171408; }
		_case_begin_4717171408:;
		{
			_390834_d->_field_constant=_1b9d678e5_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_and((*this)._field_r->_field_constant));
		}
		goto _match_end_4717170576;
		_case_end_4717171408:;
		if (!((jule::Str(">", 1)) == _match_expr)) { goto _case_end_4717171536; }
		_case_begin_4717171536:;
		{
			_390834_d->_field_constant=_1b9d678e5_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_gt((*this)._field_r->_field_constant));
		}
		goto _match_end_4717170576;
		_case_end_4717171536:;
		if (!((jule::Str("<", 1)) == _match_expr)) { goto _case_end_4717171664; }
		_case_begin_4717171664:;
		{
			_390834_d->_field_constant=_1b9d678e5_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_lt((*this)._field_r->_field_constant));
		}
		goto _match_end_4717170576;
		_case_end_4717171664:;
		if (!((jule::Str(">=", 2)) == _match_expr)) { goto _case_end_4717171792; }
		_case_begin_4717171792:;
		{
			_390834_d->_field_constant=_1b9d678e5_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_gt((*this)._field_r->_field_constant) || (*this)._field_l->_field_constant->_method_eqs((*this)._field_r->_field_constant));
		}
		goto _match_end_4717170576;
		_case_end_4717171792:;
		if (!((jule::Str("<=", 2)) == _match_expr)) { goto _case_end_4717171920; }
		_case_begin_4717171920:;
		{
			_390834_d->_field_constant=_1b9d678e5_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_lt((*this)._field_r->_field_constant) || (*this)._field_l->_field_constant->_method_eqs((*this)._field_r->_field_constant));
		}
		goto _match_end_4717170576;
		_case_end_4717171920:;
		if (!((jule::Str("+", 1)) == _match_expr)) { goto _case_end_4717172048; }
		_case_begin_4717172048:;
		{
			(*this)._field_l->_field_constant->_method_add((*this)._field_r->_field_constant);
			_390834_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4717170576;
		_case_end_4717172048:;
		if (!((jule::Str("-", 1)) == _match_expr)) { goto _case_end_4717172176; }
		_case_begin_4717172176:;
		{
			(*this)._field_l->_field_constant->_method_sub((*this)._field_r->_field_constant);
			_390834_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4717170576;
		_case_end_4717172176:;
		if (!((jule::Str("*", 1)) == _match_expr)) { goto _case_end_4717172304; }
		_case_begin_4717172304:;
		{
			(*this)._field_l->_field_constant->_method_mul((*this)._field_r->_field_constant);
			_390834_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4717170576;
		_case_end_4717172304:;
		if (!((jule::Str("/", 1)) == _match_expr)) { goto _case_end_4717172432; }
		_case_begin_4717172432:;
		{
			jule::Bool _395717_ok = (*this)._field_l->_field_constant->_method_div((*this)._field_r->_field_constant);
			if ((!(_395717_ok)) && ((*this)._field_r->_field_constant->_method_as_f64() == 0LL)) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>({}));
			}
			_390834_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4717170576;
		_case_end_4717172432:;
		if (!((jule::Str("%", 1)) == _match_expr)) { goto _case_end_4717172560; }
		_case_begin_4717172560:;
		{
			jule::Bool _396417_ok = (*this)._field_l->_field_constant->_method_mod((*this)._field_r->_field_constant);
			if ((!(_396417_ok)) && ((*this)._field_r->_field_constant->_method_as_f64() == 0LL)) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>({}));
			}
			_390834_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4717170576;
		_case_end_4717172560:;
		if (!((jule::Str("|", 1)) == _match_expr)) { goto _case_end_4717172688; }
		_case_begin_4717172688:;
		{
			(*this)._field_l->_field_constant->_method_bitwise_or((*this)._field_r->_field_constant);
			_390834_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4717170576;
		_case_end_4717172688:;
		if (!((jule::Str("&", 1)) == _match_expr)) { goto _case_end_4717172816; }
		_case_begin_4717172816:;
		{
			(*this)._field_l->_field_constant->_method_bitwise_and((*this)._field_r->_field_constant);
			_390834_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4717170576;
		_case_end_4717172816:;
		if (!((jule::Str("^", 1)) == _match_expr)) { goto _case_end_4717172944; }
		_case_begin_4717172944:;
		{
			(*this)._field_l->_field_constant->_method_xor((*this)._field_r->_field_constant);
			_390834_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4717170576;
		_case_end_4717172944:;
		if (!((jule::Str("<<", 2)) == _match_expr)) { goto _case_end_4717173072; }
		_case_begin_4717173072:;
		{
			(*this)._field_l->_field_constant->_method_lshift((*this)._field_r->_field_constant);
			_390834_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4717170576;
		_case_end_4717173072:;
		if (!((jule::Str(">>", 2)) == _match_expr)) { goto _case_end_4717173200; }
		_case_begin_4717173200:;
		{
			(*this)._field_l->_field_constant->_method_rshift((*this)._field_r->_field_constant);
			_390834_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4717170576;
		_case_end_4717173200:;
		_match_end_4717170576:;
	}
	_390834_d->_field_model=jule::Any(_390834_d->_field_constant);
}



inline void _1b9523799_BinopSolver::_method_post_const(jule::Ref<_1b9523799_Data> _399429_d) {
	if ((!(jule::real(_399429_d)))) {
		return;
	}
	_1b9523799_normalize_bitsize(_399429_d);
}



inline void _1b9523799_BinopSolver::_method_prepare_data(jule::Ref<_1b9523799_Data> _400231_d) {
	if (jule::real(_400231_d) && jule::real(_400231_d->_field_kind->_method_ref())) {
		_400231_d->_field_kind=_400231_d->_field_kind->_method_ref()->_field_elem;
	}
}



inline void _1b9523799_BinopSolver::_method_prepare_eval(void) {
	(*this)._method_prepare_data((*this)._field_r);
	(*this)._method_prepare_data((*this)._field_l);
}



inline void _1b9523799_BinopSolver::_method_check_data(jule::Ref<_1b9523799_Data> _401333_d) {
	jule::Ref<_1d21d97ee_FnIns> _401413_f = _401333_d->_field_kind->_method_fnc();
	if ((jule::real(_401413_f) && jule::real(_401413_f->_field_decl)) && _401413_f->_field_decl->_method_is_method()) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("invalid expression used for binary operation", 44),jule::Slice<jule::Any>({}));
	}
}



inline void _1b9523799_BinopSolver::_method_check_datas(void) {
	(*this)._method_check_data((*this)._field_l);
	(*this)._method_check_data((*this)._field_r);
}



inline jule::Ref<_1b9523799_Data> _1b9523799_BinopSolver::_method_solve_explicit(jule::Ref<_1b9523799_Data> _402537_l,jule::Ref<_1b9523799_Data> _402551_r) {
	std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple(_402537_l,_402551_r);
	(*this)._method_prepare_eval();
	(*this)._method_check_datas();
	jule::Ref<_1b9523799_Data> _403117_d = (*this)._method_eval();
	std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple(_402537_l,_402551_r);
	(*this)._method_solve_const(_403117_d);
	(*this)._method_post_const(_403117_d);
	if (jule::real(_403117_d)) {
		_403117_d->_field_lvalue=_403117_d->_field_kind->_method_lvalue();
		if ((!(_403117_d->_method_is_const()))) {
			_403117_d->_field_model=jule::Any(jule::new_struct<_1b8dbae99_BinopExprModel>(new( std::nothrow ) _1b8dbae99_BinopExprModel(_402537_l->_field_model,_402551_r->_field_model,(*this)._field_op._field_kind)));
		}
	}
	return _403117_d;
}



inline jule::Ref<_1b9523799_Data> _1b9523799_BinopSolver::_method_solve(jule::Ref<_1d1e5192e_BinopExpr> _405128_op) {
	jule::Ref<_1b9523799_Data> _405217_l = (*this)._field_e->_method_eval_expr_kind(_405128_op->_field_left);
	if ((!(jule::real(_405217_l))) || (!(jule::real(_405217_l->_field_kind)))) {
		return jule::new_ref<_1b9523799_Data>();
	}
	jule::Ref<_1b9523799_Data> _405717_r = (*this)._field_e->_method_eval_expr_kind(_405128_op->_field_right);
	if ((!(jule::real(_405717_r))) || (!(jule::real(_405717_r->_field_kind)))) {
		return jule::new_ref<_1b9523799_Data>();
	}
	(*this)._field_op=_405128_op->_field_op;
	jule::Ref<_1b9523799_Data> _406417_d = (*this)._method_solve_explicit(_405217_l,_405717_r);
	if ((jule::real(_406417_d) && _405217_l->_field_is_rune) && _405717_r->_field_is_rune) {
		_406417_d->_field_is_rune=true;
	}
	return _406417_d;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b9523799_BinopSolver &_Src) {
	_Stream << "BinopSolver{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b951b088_TypeAlias &_Src) {
	_Stream << "TypeAlias{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "refers:" << _Src._field_refers;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1e5192e_AssignLeft &_Src) {
	_Stream << "AssignLeft{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d1e5192e_Comment::_method_is_directive(void) {
	return (*this)._field_text.has_prefix(jule::Str("jule:", 5));
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1e5192e_Comment &_Src) {
	_Stream << "Comment{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "text:" << _Src._field_text;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d1e5192e_ParamDecl::_method_is_self(void) {
	return (*this)._field_ident.has_suffix(jule::Str("self", 4));
}



inline jule::Bool _1d1e5192e_ParamDecl::_method_is_ref(void) {
	return ((*this)._field_ident != jule::Str("", 0)) && ((*this)._field_ident[0LL] == '&');
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1e5192e_ParamDecl &_Src) {
	_Stream << "ParamDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d1e5192e_FnDecl::_method_is_anon(void) {
	return (*this)._field_ident == jule::Str("<anonymous>", 11);
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1e5192e_FnDecl &_Src) {
	_Stream << "FnDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "global:" << _Src._field_global << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "params:" << _Src._field_params;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1e5192e_VarDecl &_Src) {
	_Stream << "VarDecl{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "constant:" << _Src._field_constant << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline void _1b951b088_TypeChecker::_method_push_err(_1d1da4277_Token _68927_token,jule::Str _68941_fmt,jule::Slice<jule::Any> _68954_args) {
	(*this)._field_s->_method_push_err(_68927_token,_68941_fmt,_68954_args);
}



inline jule::Ref<_1b951b088_Prim> _1b951b088_TypeChecker::_method_build_prim(jule::Ref<_1d1e5192e_IdentTypeDecl>& _69330_decl) {
	if ((!(_1b951b088_is_prim(_69330_decl->_field_ident)))) {
		(*this)._method_push_err((*this)._field_error_token,jule::Str("invalid data-type", 17),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b951b088_Prim>();
	}
	if (_69330_decl->_field_generics.len() > 0LL) {
		(*this)._method_push_err(_69330_decl->_field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_69330_decl->_field_ident)}));
		return jule::new_ref<_1b951b088_Prim>();
	}
	return _1b951b088_build_prim_type(_69330_decl->_field_ident);
}



inline void _1b951b088_TypeChecker::_method_push_cycle_error(jule::Any _70731_def1,jule::Any _70742_def2,jule::Str& _70758_message) {
	
	jule::Fn<jule::Str(jule::Any&)> _71013_get_ident = jule::Fn<jule::Str(jule::Any&)>([=](jule::Any& _71029_def) mutable -> jule::Str {
		{
			auto _match_expr{ _71029_def };
			if (!(_match_expr.type_is<jule::Ref<_1b951b088_TypeAlias>>())) { goto _case_end_4717518064; }
			_case_begin_4717518064:;
			{
				return _71029_def.operator jule::Ref<_1b951b088_TypeAlias>()->_field_ident;
			}
			goto _match_end_4717517136;
			_case_end_4717518064:;
			if (!(_match_expr.type_is<jule::Ref<_1d21c0b59_Struct>>())) { goto _case_end_4717518176; }
			_case_begin_4717518176:;
			{
				return _71029_def.operator jule::Ref<_1d21c0b59_Struct>()->_field_ident;
			}
			goto _match_end_4717517136;
			_case_end_4717518176:;
			if (!(_match_expr.type_is<jule::Ref<_1b8dae520_Enum>>())) { goto _case_end_4717518288; }
			_case_begin_4717518288:;
			{
				return _71029_def.operator jule::Ref<_1b8dae520_Enum>()->_field_ident;
			}
			goto _match_end_4717517136;
			_case_end_4717518288:;
			_case_begin_4717517616:;
			{
				return jule::Str("", 0);
			}
			goto _match_end_4717517136;
			_case_end_4717517616:;
			_match_end_4717517136:;
		}
	});
	jule::Str _71913_def1_ident = _71013_get_ident(_70731_def1);
	jule::Str _72013_def2_ident = _71013_get_ident(_70742_def2);
	jule::Str _72113_refers_to = _1d0557e9e_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(_71913_def1_ident),jule::Any(_72013_def2_ident)}));
	_70758_message=((_1b8b10cbb_str_repeat(jule::Str(" ", 1),4LL) + _72113_refers_to) + jule::Str("\n", 1)) + _70758_message;
}



inline jule::Bool _1b951b088_TypeChecker::_method_are_equals_cross_cycle_data_0(jule::Any _72545_a,jule::Any _72553_b) {
	{
		auto _match_expr{ _72545_a };
		if (!(_match_expr.type_is<jule::Ref<_1b951b088_TypeAlias>>())) { goto _case_end_4717561536; }
		_case_begin_4717561536:;
		{
			{
				auto _match_expr{ _72553_b };
				if (!(_match_expr.type_is<jule::Ref<_1b951b088_TypeAlias>>())) { goto _case_end_4717563712; }
				_case_begin_4717563712:;
				{
					return (_72545_a.operator jule::Ref<_1b951b088_TypeAlias>()).alloc == (_72553_b.operator jule::Ref<_1b951b088_TypeAlias>()).alloc;
				}
				goto _match_end_4717561696;
				_case_end_4717563712:;
				_case_begin_4717563328:;
				{
					return false;
				}
				goto _match_end_4717561696;
				_case_end_4717563328:;
				_match_end_4717561696:;
			}
		}
		goto _match_end_4717560720;
		_case_end_4717561536:;
		_case_begin_4717561152:;
		{
			return false;
		}
		goto _match_end_4717560720;
		_case_end_4717561152:;
		_match_end_4717560720:;
	}
}

inline jule::Bool _1b951b088_TypeChecker::_method_are_equals_cross_cycle_data_1(jule::Any _72545_a,jule::Any _72553_b) {
	{
		auto _match_expr{ _72545_a };
		if (!(_match_expr.type_is<jule::Ref<_1d21c0b59_Struct>>())) { goto _case_end_4717576672; }
		_case_begin_4717576672:;
		{
			{
				auto _match_expr{ _72553_b };
				if (!(_match_expr.type_is<jule::Ref<_1d21c0b59_Struct>>())) { goto _case_end_4717578848; }
				_case_begin_4717578848:;
				{
					return (_72545_a.operator jule::Ref<_1d21c0b59_Struct>()).alloc == (_72553_b.operator jule::Ref<_1d21c0b59_Struct>()).alloc;
				}
				goto _match_end_4717576832;
				_case_end_4717578848:;
				_case_begin_4717578464:;
				{
					return false;
				}
				goto _match_end_4717576832;
				_case_end_4717578464:;
				_match_end_4717576832:;
			}
		}
		goto _match_end_4717575856;
		_case_end_4717576672:;
		_case_begin_4717576288:;
		{
			return false;
		}
		goto _match_end_4717575856;
		_case_end_4717576288:;
		_match_end_4717575856:;
	}
}



inline jule::Bool _1b951b088_TypeChecker::_method_check_cross_cycle(jule::Any _73832_decl,jule::Str& _73848_message) {
	{
		auto _match_expr{ _73832_decl };
		if (!(_match_expr.type_is<jule::Ref<_1b951b088_TypeAlias>>())) { goto _case_end_4717529840; }
		_case_begin_4717529840:;
		{
			jule::Ref<_1b951b088_TypeAlias> _74117_ta = _73832_decl.operator jule::Ref<_1b951b088_TypeAlias>();
			{
				auto _range_expr = _74117_ta->_field_refers;
				if (_range_expr.begin() != _range_expr.end()) {
					auto _range_begin = _range_expr.begin();
					const auto _range_end = _range_expr.end();
					jule::Any _1b951b088_d = *_range_begin;
					_iter_begin_4717533200:;
					{
						{
							auto _match_expr{ _1b951b088_d };
							if (!(_match_expr.type_is<jule::Ref<_1b951b088_TypeAlias>>())) { goto _case_end_4717534992; }
							_case_begin_4717534992:;
							{
								if ((*this)._method_are_equals_cross_cycle_data_0(_1b951b088_d,(*this)._field_referencer->_field_owner)) {
									(*this)._method_push_cycle_error(jule::Any(_74117_ta),_1b951b088_d,_73848_message);
									return false;
								}
							}
							goto _match_end_4717534464;
							_case_end_4717534992:;
							_match_end_4717534464:;
						}
						if ((!((*this)._method_check_cross_cycle(_1b951b088_d,_73848_message)))) {
							(*this)._method_push_cycle_error(jule::Any(_74117_ta),_1b951b088_d,_73848_message);
							return false;
						}
					}
					_iter_next_4717533200:;
					++_range_begin;
					if (_range_begin != _range_end) { _1b951b088_d = *_range_begin; goto _iter_begin_4717533200; }
					_iter_end_4717533200:;
				}
			}
		}
		goto _match_end_4717529392;
		_case_end_4717529840:;
		if (!(_match_expr.type_is<jule::Ref<_1d21c0b59_Struct>>())) { goto _case_end_4717529984; }
		_case_begin_4717529984:;
		{
			jule::Ref<_1d21c0b59_Struct> _75817_s = _73832_decl.operator jule::Ref<_1d21c0b59_Struct>();
			{
				auto _range_expr = _75817_s->_field_depends;
				if (_range_expr.begin() != _range_expr.end()) {
					auto _range_begin = _range_expr.begin();
					const auto _range_end = _range_expr.end();
					jule::Ref<_1d21c0b59_Struct> _1b951b088_d = *_range_begin;
					_iter_begin_4717534240:;
					{
						if ((*this)._method_are_equals_cross_cycle_data_1(jule::Any(_1b951b088_d),(*this)._field_referencer->_field_owner)) {
							(*this)._method_push_cycle_error(jule::Any(_75817_s),jule::Any(_1b951b088_d),_73848_message);
							return false;
						}
						if ((!((*this)._method_check_cross_cycle(jule::Any(_1b951b088_d),_73848_message)))) {
							(*this)._method_push_cycle_error(jule::Any(_75817_s),jule::Any(_1b951b088_d),_73848_message);
							return false;
						}
					}
					_iter_next_4717534240:;
					++_range_begin;
					if (_range_begin != _range_end) { _1b951b088_d = *_range_begin; goto _iter_begin_4717534240; }
					_iter_end_4717534240:;
				}
			}
		}
		goto _match_end_4717529392;
		_case_end_4717529984:;
		_match_end_4717529392:;
	}
	return true;
}



inline jule::Bool _1b951b088_TypeChecker::_method_check_illegal_cycles(jule::Ref<_1d1e5192e_IdentTypeDecl>& _78040_ident,jule::Any _78067_decl) {
	jule::Bool _78080_ok = jule::Bool();
	if ((!(jule::real((*this)._field_referencer)))) {
		_78080_ok = true;
		return _78080_ok;
	}
	{
		auto _match_expr{ _78067_decl };
		if (!(_match_expr.type_is<jule::Ref<_1d21c0b59_Struct>>())) { goto _case_end_4717585888; }
		_case_begin_4717585888:;
		{
			if ((*this)._field_not_plain) {
				_78080_ok = true;
				return _78080_ok;
			}
		}
		goto _match_end_4717584832;
		_case_end_4717585888:;
		_match_end_4717584832:;
	}
	if ((*this)._field_referencer->_field_owner == _78067_decl) {
		(*this)._method_push_err(_78040_ident->_field_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>({jule::Any((*this)._field_referencer->_field_ident)}));
		_78080_ok = false;
		return _78080_ok;
	}
	jule::Str _79917_message = jule::Str("", 0);
	if ((!((*this)._method_check_cross_cycle(_78067_decl,_79917_message)))) {
		jule::Str _80221_err_msg = _79917_message;
		_79917_message=jule::Str("", 0);
		(*this)._method_push_cycle_error((*this)._field_referencer->_field_owner,_78067_decl,_79917_message);
		_80221_err_msg=_80221_err_msg + _79917_message;
		(*this)._method_push_err(_78040_ident->_field_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>({jule::Any(_80221_err_msg)}));
		_78080_ok = false;
		return _78080_ok;
	}
	{
		auto _match_expr{ (*this)._field_referencer->_field_owner };
		if (!(_match_expr.type_is<jule::Ref<_1b951b088_TypeAlias>>())) { goto _case_end_4717591712; }
		_case_begin_4717591712:;
		{
			{
				(*((*this)._field_referencer->_field_refs))=jule::append((*((*this)._field_referencer->_field_refs)),jule::Slice<jule::Any>({_78067_decl}));
			}
		}
		goto _match_end_4717597040;
		_case_end_4717591712:;
		if (!(_match_expr.type_is<jule::Ref<_1d21c0b59_Struct>>())) { goto _case_end_4717597840; }
		_case_begin_4717597840:;
		{
			{
				auto _match_expr{ _78067_decl };
				if (!(_match_expr.type_is<jule::Ref<_1d21c0b59_Struct>>())) { goto _case_end_4717598848; }
				_case_begin_4717598848:;
				{
					jule::Ref<_1d21c0b59_Struct> _81725_s = (*this)._field_referencer->_field_owner.operator jule::Ref<_1d21c0b59_Struct>();
					_81725_s->_field_depends=jule::append(_81725_s->_field_depends,jule::Slice<jule::Ref<_1d21c0b59_Struct>>({_78067_decl.operator jule::Ref<_1d21c0b59_Struct>()}));
				}
				goto _match_end_4717597952;
				_case_end_4717598848:;
				_match_end_4717597952:;
			}
		}
		goto _match_end_4717597040;
		_case_end_4717597840:;
		_match_end_4717597040:;
	}
	_78080_ok = true;
	return _78080_ok;
}



inline jule::Trait<_1b951b088_Kind> _1b951b088_TypeChecker::_method_from_type_alias(jule::Ref<_1d1e5192e_IdentTypeDecl>& _82535_decl,jule::Ref<_1b951b088_TypeAlias>& _82562_ta) {
	if ((!((*this)._field_s->_method_is_accessible_define(_82562_ta->_field_public,_82562_ta->_field_token)))) {
		(*this)._method_push_err(_82535_decl->_field_token,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_82535_decl->_field_ident)}));
		return nullptr;
	}
	_82562_ta->_field_used=true;
	if (_82535_decl->_field_generics.len() > 0LL) {
		(*this)._method_push_err(_82535_decl->_field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_82535_decl->_field_ident)}));
		return nullptr;
	}
	jule::Bool _83817_ok = (*this)._method_check_illegal_cycles(_82535_decl,jule::Any(_82562_ta));
	if ((!(_83817_ok))) {
		return nullptr;
	}
	_83817_ok=(*this)._field_s->_method_check_type_alias_decl_kind(_82562_ta,(*this)._field_lookup);
	if ((!(_83817_ok))) {
		return nullptr;
	}
	jule::Ref<_1b951b088_TypeKind> _84917_kind = _82562_ta->_field_kind->_field_kind->_method_clone();
	if (_82562_ta->_field_cpp_linked) {
		_84917_kind->_field_cpp_ident=_82562_ta->_field_ident;
	}
	return _84917_kind;
}



inline jule::Ref<_1b8dae520_Enum> _1b951b088_TypeChecker::_method_from_enum(jule::Ref<_1d1e5192e_IdentTypeDecl>& _85829_decl,jule::Ref<_1b8dae520_Enum>& _85856_e) {
	if ((!((*this)._field_s->_method_is_accessible_define(_85856_e->_field_public,_85856_e->_field_token)))) {
		(*this)._method_push_err(_85829_decl->_field_token,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_85829_decl->_field_ident)}));
		return jule::new_ref<_1b8dae520_Enum>();
	}
	if (_85829_decl->_field_generics.len() > 0LL) {
		(*this)._method_push_err(_85829_decl->_field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_85829_decl->_field_ident)}));
		return jule::new_ref<_1b8dae520_Enum>();
	}
	return _85856_e;
}



inline jule::Bool _1b951b088_TypeChecker::_method_check_struct_ins(jule::Ref<_1d21c0b59_StructIns>& _87240_ins,_1d1da4277_Token& _87258_error_token) {
	jule::Bool _87280_ok = jule::Bool();
	if (_87240_ins->_field_checked) {
		_87280_ok = true;
		return _87280_ok;
	}
	_87240_ins->_field_checked=true;
	if (jule::real((*this)._field_referencer) && ((*this)._field_referencer->_field_owner == _87240_ins->_field_decl)) {
		_87280_ok = true;
		return _87280_ok;
	}
	jule::Ref<_1b9390d86_SymbolTable> _88617_old_file = (*this)._field_s->_field_file;
	__JULE_DEFER({
		(*this)._field_s->_method_set_current_file(_88617_old_file);
	});
	jule::Ref<_1b9390d86_SymbolTable> _88917_file = _1b912748b_find_file((*this)._field_s->_field_files,_87240_ins->_field_decl->_field_token._field_file);
	if (jule::real(_88917_file)) {
		(*this)._field_s->_method_set_current_file(_88917_file);
	}
	jule::Ref<_1b951b088_Referencer> _89417_referencer = jule::new_struct<_1b951b088_Referencer>(new( std::nothrow ) _1b951b088_Referencer(_87240_ins->_field_decl->_field_ident,jule::Any(_87240_ins->_field_decl),nullptr));
	jule::Slice<jule::Ref<_1b951b088_TypeAlias>> _89917_generics = jule::Slice<jule::Ref<_1b951b088_TypeAlias>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_87240_ins->_field_generics.len())));
	{
		auto _range_expr = _87240_ins->_field_generics;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1b951b088_i = 0;
			jule::Ref<_1b951b088_TypeKind> _1b951b088_g = *_range_begin;
			_iter_begin_4717653216:;
			{
				_89917_generics[static_cast<jule::Int>(_1b951b088_i)]=jule::new_struct<_1b951b088_TypeAlias>(new( std::nothrow ) _1b951b088_TypeAlias(jule::Ref<_1d1e5192e_ScopeTree>(),jule::Bool(),jule::Bool(),jule::Bool(),_1d1da4277_Token(),_87240_ins->_field_decl->_field_generics[static_cast<jule::Int>(_1b951b088_i)]->_field_ident,jule::new_struct<_1b951b088_TypeSymbol>(new( std::nothrow ) _1b951b088_TypeSymbol(jule::Ref<_1d1e5192e_TypeDecl>(),_1b951b088_g)),jule::Str(),jule::Slice<jule::Any>()));
			}
			_iter_next_4717653216:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1b951b088_i; _1b951b088_g = *_range_begin; goto _iter_begin_4717653216; }
			_iter_end_4717653216:;
		}
	}
	jule::Ref<_1b9390d86_SymbolTable> _90917_old_sema_file = _87240_ins->_field_decl->_field_sema->_field_file;
	__JULE_DEFER({
		_87240_ins->_field_decl->_field_sema->_method_set_current_file(_90917_old_sema_file);
	});
	_1b951b088_TypeChecker _91217_tc = _1b951b088_TypeChecker(_87240_ins->_field_decl->_field_sema,_87240_ins->_field_decl->_field_sema,_89417_referencer,_1d1da4277_Token(),jule::Slice<jule::Ref<_1d1e5192e_GenericDecl>>(),_89917_generics,jule::Bool());
	{
		auto _range_expr = _87240_ins->_field_fields;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d21c0b59_FieldIns> _1b951b088_field = *_range_begin;
			_iter_begin_4717664608:;
			{
				jule::Ref<_1b951b088_TypeKind> _92121_kind = _91217_tc._method_check_decl(_1b951b088_field->_field_decl->_field_kind->_field_decl);
				_87280_ok=jule::real(_92121_kind);
				if ((jule::real(_87240_ins->_field_decl->_field_sema) && ((*this)._field_s != _87240_ins->_field_decl->_field_sema)) && (_87240_ins->_field_decl->_field_sema->_field_errors.len() > 0LL)) {
					(*this)._field_s->_field_errors=jule::append((*this)._field_s->_field_errors,_87240_ins->_field_decl->_field_sema->_field_errors);
				}
				if ((!(_87280_ok))) {
					_87280_ok = false;
					return _87280_ok;
				}
				_1b951b088_field->_field_kind=_92121_kind;
				if (_1b951b088_field->_field_kind->_method_mutable()) {
					_87240_ins->_field_mutable=true;
					(*this)._field_s->_method_check_struct_ins_derive_clone(_87240_ins);
				}
			}
			_iter_next_4717664608:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b951b088_field = *_range_begin; goto _iter_begin_4717664608; }
			_iter_end_4717664608:;
		}
	}
	if (_87240_ins->_field_generics.len() > 0LL) {
		{
			auto _range_expr = _87240_ins->_field_methods;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_1d21d97ee_Fn> _1b951b088_m = *_range_begin;
				_iter_begin_4717677568:;
				{
					(*this)._field_s->_method_check_type_method(_87240_ins,_1b951b088_m);
				}
				_iter_next_4717677568:;
				++_range_begin;
				if (_range_begin != _range_end) { _1b951b088_m = *_range_begin; goto _iter_begin_4717677568; }
				_iter_end_4717677568:;
			}
		}
	}
	_87280_ok = true;
	return _87280_ok;
}



inline void _1b951b088_TypeChecker::_method_append_used_struct_reference(jule::Ref<_1d21c0b59_Struct>& _94852_s) {
	if ((!(jule::real((*this)._field_referencer)))) {
		return;
	}
	{
		auto _match_expr{ (*this)._field_referencer->_field_owner };
		if (!(_match_expr.type_is<jule::Ref<_1d21c0b59_Struct>>())) { goto _case_end_4717682512; }
		_case_begin_4717682512:;
		{
			jule::Ref<_1d21c0b59_Struct> _95521_ref_s = (*this)._field_referencer->_field_owner.operator jule::Ref<_1d21c0b59_Struct>();
			if ((!(_95521_ref_s->_method_is_uses(_94852_s)))) {
				_95521_ref_s->_field_uses=jule::append(_95521_ref_s->_field_uses,jule::Slice<jule::Ref<_1d21c0b59_Struct>>({_94852_s}));
			}
		}
		goto _match_end_4717681856;
		_case_end_4717682512:;
		_match_end_4717681856:;
	}
}



inline jule::Ref<_1d21c0b59_StructIns> _1b951b088_TypeChecker::_method_from_struct(jule::Ref<_1d1e5192e_IdentTypeDecl>& _96235_decl,jule::Ref<_1d21c0b59_Struct>& _96262_s) {
	if ((!((*this)._field_s->_method_is_accessible_define(_96262_s->_field_public,_96262_s->_field_token)))) {
		(*this)._method_push_err(_96235_decl->_field_token,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_96235_decl->_field_ident)}));
		return jule::new_ref<_1d21c0b59_StructIns>();
	}
	if ((*this)._field_ignore_generics.len() > 0LL) {
		return jule::new_ref<_1d21c0b59_StructIns>();
	}
	jule::Bool _97317_ok = (*this)._field_not_plain || (*this)._method_check_illegal_cycles(_96235_decl,jule::Any(_96262_s));
	if ((!(_97317_ok))) {
		return jule::new_ref<_1d21c0b59_StructIns>();
	}
	(*this)._method_append_used_struct_reference(_96262_s);
	jule::Ref<_1d21c0b59_StructIns> _97917_ins = _96262_s->_method_instance();
	_97917_ins->_field_generics=jule::Slice<jule::Ref<_1b951b088_TypeKind>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_96235_decl->_field_generics.len())));
	jule::Ref<_1b951b088_Referencer> _98117_referencer = (*this)._field_referencer;
	jule::drop((*this)._field_referencer);
	{
		auto _range_expr = _96235_decl->_field_generics;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1b951b088_i = 0;
			jule::Ref<_1d1e5192e_TypeDecl> _1b951b088_g = *_range_begin;
			_iter_begin_4717705104:;
			{
				jule::Ref<_1b951b088_TypeKind> _98421_kind = (*this)._method_build(_1b951b088_g->_field_kind);
				if ((!(jule::real(_98421_kind)))) {
					_97317_ok=false;
					goto _iter_next_4717705104;
				}
				_97917_ins->_field_generics[static_cast<jule::Int>(_1b951b088_i)]=_98421_kind;
			}
			_iter_next_4717705104:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1b951b088_i; _1b951b088_g = *_range_begin; goto _iter_begin_4717705104; }
			_iter_end_4717705104:;
		}
	}
	(*this)._field_referencer=_98117_referencer;
	if ((!(_97317_ok))) {
		return jule::new_ref<_1d21c0b59_StructIns>();
	}
	_97317_ok=(*this)._field_s->_method_check_generic_quantity(static_cast<jule::I64>(_97917_ins->_field_decl->_field_generics.len()),static_cast<jule::I64>(_97917_ins->_field_generics.len()),_96235_decl->_field_token);
	if ((!(_97317_ok))) {
		return jule::new_ref<_1d21c0b59_StructIns>();
	}
	jule::Ref<_1d21c0b59_StructIns> _100317_exist_instance = _96262_s->_method_append_instance(_97917_ins);
	if (jule::real(_100317_exist_instance)) {
		return _100317_exist_instance;
	}
	_97317_ok=(*this)._method_check_struct_ins(_97917_ins,_96235_decl->_field_token);
	if ((!(_97317_ok))) {
		return jule::new_ref<_1d21c0b59_StructIns>();
	}
	return _97917_ins;
}



inline jule::Trait<_1b951b088_Kind> _1b951b088_TypeChecker::_method_get_def(jule::Ref<_1d1e5192e_IdentTypeDecl>& _101831_decl) {
	{
		auto _range_expr = (*this)._field_ignore_generics;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d1e5192e_GenericDecl> _1b951b088_g = *_range_begin;
			_iter_begin_4717725056:;
			{
				if (_1b951b088_g->_field_ident == _101831_decl->_field_ident) {
					return _1b951b088_build_prim_type(_1b951b088_g->_field_ident);
				}
			}
			_iter_next_4717725056:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b951b088_g = *_range_begin; goto _iter_begin_4717725056; }
			_iter_end_4717725056:;
		}
	}
	{
		auto _range_expr = (*this)._field_use_generics;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b951b088_TypeAlias> _1b951b088_g = *_range_begin;
			_iter_begin_4717728000:;
			{
				if (_1b951b088_g->_field_ident == _101831_decl->_field_ident) {
					jule::Ref<_1d21c0b59_StructIns> _102725_st = _1b951b088_g->_field_kind->_field_kind->_method_strct();
					if (jule::real(_102725_st)) {
						jule::Bool _102925_ok = (*this)._method_check_illegal_cycles(_101831_decl,jule::Any(_102725_st->_field_decl));
						if ((!(_102925_ok))) {
							return nullptr;
						}
					}
					return _1b951b088_g->_field_kind->_field_kind->_field_kind;
				}
			}
			_iter_next_4717728000:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b951b088_g = *_range_begin; goto _iter_begin_4717728000; }
			_iter_end_4717728000:;
		}
	}
	if ((!(_101831_decl->_field_cpp_linked))) {
		jule::Ref<_1b8dae520_Enum> _103921_e = (*this)._field_lookup.get()._method_find_enum(_101831_decl->_field_ident);
		if (jule::real(_103921_e)) {
			return (*this)._method_from_enum(_101831_decl,_103921_e);
		}
		jule::Ref<_1b8cd2894_Trait> _104421_t = (*this)._field_lookup.get()._method_find_trait(_101831_decl->_field_ident);
		if ((!(jule::real(_104421_t)))) {
			_104421_t=_1b9c0b525_find_builtin_trait(_101831_decl->_field_ident);
		}
		if (jule::real(_104421_t)) {
			if ((!((*this)._field_s->_method_is_accessible_define(_104421_t->_field_public,_104421_t->_field_token)))) {
				(*this)._method_push_err(_101831_decl->_field_token,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_101831_decl->_field_ident)}));
				return nullptr;
			}
			if (_101831_decl->_field_generics.len() > 0LL) {
				(*this)._method_push_err(_101831_decl->_field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_101831_decl->_field_ident)}));
				return nullptr;
			}
			return _104421_t;
		}
	}
	jule::Ref<_1d21c0b59_Struct> _106217_s = (*this)._field_lookup.get()._method_find_struct(_101831_decl->_field_ident,_101831_decl->_field_cpp_linked);
	if (jule::real(_106217_s)) {
		return (*this)._method_from_struct(_101831_decl,_106217_s);
	}
	jule::Ref<_1b951b088_TypeAlias> _106717_ta = (*this)._field_lookup.get()._method_find_type_alias(_101831_decl->_field_ident,_101831_decl->_field_cpp_linked);
	if ((!(jule::real(_106717_ta)))) {
		_106717_ta=_1b9c0b525_find_builtin_type_alias(_101831_decl->_field_ident);
	}
	if (jule::real(_106717_ta)) {
		return (*this)._method_from_type_alias(_101831_decl,_106717_ta);
	}
	(*this)._method_push_err(_101831_decl->_field_token,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_101831_decl->_field_ident)}));
	return nullptr;
}



inline jule::Trait<_1b951b088_Kind> _1b951b088_TypeChecker::_method_build_ident(jule::Ref<_1d1e5192e_IdentTypeDecl> _107934_decl) {
	{
		if (!((_1b951b088_is_prim(_107934_decl->_field_ident)))) { goto _case_end_4717763360; }
		_case_begin_4717763360:;
		{
			return (*this)._method_build_prim(_107934_decl);
		}
		goto _match_end_4717761728;
		_case_end_4717763360:;
		_case_begin_4717761904:;
		{
			return (*this)._method_get_def(_107934_decl);
		}
		goto _match_end_4717761728;
		_case_end_4717761904:;
		_match_end_4717761728:;
	}
}



inline jule::Ref<_1b951b088_Ref> _1b951b088_TypeChecker::_method_build_ref_from_type(jule::Ref<_1b951b088_TypeKind>& _108643_elem) {
	{
		if (!(((!(jule::real(_108643_elem)))))) { goto _case_end_4717766448; }
		_case_begin_4717766448:;
		{
			return jule::new_ref<_1b951b088_Ref>();
		}
		goto _match_end_4717766176;
		_case_end_4717766448:;
		if (!((jule::real(_108643_elem->_method_strct())))) { goto _case_end_4717766576; }
		_case_begin_4717766576:;
		{
			jule::Ref<_1d21c0b59_StructIns> _109317_s = _108643_elem->_method_strct();
			if (jule::real(_109317_s->_field_decl) && _109317_s->_field_decl->_field_cpp_linked) {
				(*this)._method_push_err((*this)._field_error_token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>({}));
				return jule::new_ref<_1b951b088_Ref>();
			}
		}
		goto _match_end_4717766176;
		_case_end_4717766576:;
		if (!((jule::real(_108643_elem->_method_ref())))) { goto _case_end_4717766704; }
		_case_begin_4717766704:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("references cannot reference to another reference", 48),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1b951b088_Ref>();
		}
		goto _match_end_4717766176;
		_case_end_4717766704:;
		if (!((jule::real(_108643_elem->_method_ptr())))) { goto _case_end_4717766832; }
		_case_begin_4717766832:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("references cannot reference to pointer", 38),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1b951b088_Ref>();
		}
		goto _match_end_4717766176;
		_case_end_4717766832:;
		if (!((jule::real(_108643_elem->_method_enm())))) { goto _case_end_4717766960; }
		_case_begin_4717766960:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("references cannot reference to enum", 35),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1b951b088_Ref>();
		}
		goto _match_end_4717766176;
		_case_end_4717766960:;
		if (!((jule::real(_108643_elem->_method_arr())))) { goto _case_end_4717767088; }
		_case_begin_4717767088:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("references cannot reference to array", 36),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1b951b088_Ref>();
		}
		goto _match_end_4717766176;
		_case_end_4717767088:;
		_match_end_4717766176:;
	}
	return jule::new_struct<_1b951b088_Ref>(new( std::nothrow ) _1b951b088_Ref(_108643_elem));
}



inline jule::Ref<_1b951b088_Ref> _1b951b088_TypeChecker::_method_build_ref(jule::Ref<_1d1e5192e_RefTypeDecl> _112132_decl) {
	jule::Bool _112213_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_112213_not_plain;
	});
	jule::Ref<_1b951b088_TypeKind> _112617_elem = (*this)._method_check_decl(_112132_decl->_field_elem);
	return (*this)._method_build_ref_from_type(_112617_elem);
}



inline jule::Ref<_1b951b088_Ptr> _1b951b088_TypeChecker::_method_build_ptr_from_type(jule::Ref<_1b951b088_TypeKind>& _113043_elem) {
	{
		if (!(((!(jule::real(_113043_elem)))))) { goto _case_end_4717791184; }
		_case_begin_4717791184:;
		{
			return jule::new_ref<_1b951b088_Ptr>();
		}
		goto _match_end_4717791008;
		_case_end_4717791184:;
		if (!((jule::real(_113043_elem->_method_ref())))) { goto _case_end_4717791312; }
		_case_begin_4717791312:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("pointers cannot point to reference", 34),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1b951b088_Ptr>();
		}
		goto _match_end_4717791008;
		_case_end_4717791312:;
		if (!((jule::real(_113043_elem->_method_enm())))) { goto _case_end_4717791440; }
		_case_begin_4717791440:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("pointers cannot point to enum", 29),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1b951b088_Ptr>();
		}
		goto _match_end_4717791008;
		_case_end_4717791440:;
		if (!((jule::real(_113043_elem->_method_arr()) && _113043_elem->_method_arr()->_field_auto))) { goto _case_end_4717791568; }
		_case_begin_4717791568:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1b951b088_Ptr>();
		}
		goto _match_end_4717791008;
		_case_end_4717791568:;
		_match_end_4717791008:;
	}
	return jule::new_struct<_1b951b088_Ptr>(new( std::nothrow ) _1b951b088_Ptr(_113043_elem));
}



inline jule::Ref<_1b951b088_Ptr> _1b951b088_TypeChecker::_method_build_ptr(jule::Ref<_1d1e5192e_PtrTypeDecl> _115432_decl) {
	jule::Bool _115513_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_115513_not_plain;
	});
	jule::Ref<_1b951b088_TypeKind> _115917_elem = jule::new_ref<_1b951b088_TypeKind>();
	if ((!(_115432_decl->_method_is_unsafe()))) {
		_115917_elem=(*this)._method_check_decl(_115432_decl->_field_elem);
		return (*this)._method_build_ptr_from_type(_115917_elem);
	}
	return jule::new_struct<_1b951b088_Ptr>(new( std::nothrow ) _1b951b088_Ptr(_115917_elem));
}



inline jule::Ref<_1b951b088_Slc> _1b951b088_TypeChecker::_method_build_slc(jule::Ref<_1d1e5192e_SlcTypeDecl> _117132_decl) {
	jule::Bool _117213_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_117213_not_plain;
	});
	jule::Ref<_1b951b088_TypeKind> _117617_elem = (*this)._method_check_decl(_117132_decl->_field_elem);
	{
		if (!(((!(jule::real(_117617_elem)))))) { goto _case_end_4717816144; }
		_case_begin_4717816144:;
		{
			return jule::new_ref<_1b951b088_Slc>();
		}
		goto _match_end_4717815936;
		_case_end_4717816144:;
		if (!((jule::real(_117617_elem->_method_arr()) && _117617_elem->_method_arr()->_field_auto))) { goto _case_end_4717816256; }
		_case_begin_4717816256:;
		{
			(*this)._method_push_err(_117132_decl->_field_elem->_field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1b951b088_Slc>();
		}
		goto _match_end_4717815936;
		_case_end_4717816256:;
		_match_end_4717815936:;
	}
	return jule::new_struct<_1b951b088_Slc>(new( std::nothrow ) _1b951b088_Slc(_117617_elem));
}



inline jule::Ref<_1b951b088_Arr> _1b951b088_TypeChecker::_method_build_arr(jule::Ref<_1d1e5192e_ArrTypeDecl> _119332_decl) {
	jule::Bool _119413_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_119413_not_plain;
	});
	jule::Int _119817_n = 0LL;
	if ((!(_119332_decl->_method_auto_sized()))) {
		jule::Ref<_1b9523799_Data> _120121_size = (*this)._field_s->_method_eval(_119332_decl->_field_size,(*this)._field_lookup);
		if ((!(jule::real(_120121_size)))) {
			return jule::new_ref<_1b951b088_Arr>();
		}
		if ((!(_120121_size->_method_is_const()))) {
			(*this)._method_push_err(_119332_decl->_field_size->_field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1b951b088_Arr>();
		} else if ((!(jule::real(_120121_size->_field_kind->_method_prim()))) || (!(_1b9e28c5e_is_int(_120121_size->_field_kind->_method_prim()->_field_kind)))) {
			(*this)._method_push_err(_119332_decl->_field_size->_field_token,jule::Str("array size must be integer", 26),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1b951b088_Arr>();
		}
		_119817_n=static_cast<jule::Int>(_120121_size->_field_constant->_method_as_i64());
		if (_119817_n < 0LL) {
			(*this)._method_push_err(_119332_decl->_field_elem->_field_token,jule::Str("array size must be positive integer", 35),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1b951b088_Arr>();
		}
	}
	jule::Ref<_1b951b088_TypeKind> _122117_elem = (*this)._method_check_decl(_119332_decl->_field_elem);
	{
		if (!(((!(jule::real(_122117_elem)))))) { goto _case_end_4717842816; }
		_case_begin_4717842816:;
		{
			return jule::new_ref<_1b951b088_Arr>();
		}
		goto _match_end_4717827200;
		_case_end_4717842816:;
		if (!((jule::real(_122117_elem->_method_arr()) && _122117_elem->_method_arr()->_field_auto))) { goto _case_end_4717842928; }
		_case_begin_4717842928:;
		{
			(*this)._method_push_err(_119332_decl->_field_elem->_field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1b951b088_Arr>();
		}
		goto _match_end_4717827200;
		_case_end_4717842928:;
		_match_end_4717827200:;
	}
	return jule::new_struct<_1b951b088_Arr>(new( std::nothrow ) _1b951b088_Arr(_119332_decl->_method_auto_sized(),_119817_n,_122117_elem));
}



inline jule::Ref<_1b951b088_Map> _1b951b088_TypeChecker::_method_build_map(jule::Ref<_1d1e5192e_MapTypeDecl> _124032_decl) {
	jule::Bool _124113_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_124113_not_plain;
	});
	jule::Ref<_1b951b088_TypeKind> _124517_key = (*this)._method_check_decl(_124032_decl->_field_key);
	if ((!(jule::real(_124517_key)))) {
		return jule::new_ref<_1b951b088_Map>();
	}
	jule::Ref<_1b951b088_TypeKind> _125017_val = (*this)._method_check_decl(_124032_decl->_field_val);
	if ((!(jule::real(_125017_val)))) {
		return jule::new_ref<_1b951b088_Map>();
	}
	if (jule::real(_125017_val->_method_enm())) {
		(*this)._method_push_err(_124032_decl->_field_val->_field_token,jule::Str("maps do not support enums as map key type", 41),jule::Slice<jule::Any>({}));
	}
	return jule::new_struct<_1b951b088_Map>(new( std::nothrow ) _1b951b088_Map(_124517_key,_125017_val));
}



inline jule::Ref<_1b951b088_Tuple> _1b951b088_TypeChecker::_method_build_tuple(jule::Ref<_1d1e5192e_TupleTypeDecl> _126434_decl) {
	jule::Slice<jule::Ref<_1b951b088_TypeKind>> _126517_types = jule::Slice<jule::Ref<_1b951b088_TypeKind>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_126434_decl->_field_types.len())));
	{
		auto _range_expr = _126434_decl->_field_types;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1b951b088_i = 0;
			jule::Ref<_1d1e5192e_TypeDecl> _1b951b088_t = *_range_begin;
			_iter_begin_4717865904:;
			{
				jule::Ref<_1b951b088_TypeKind> _126721_kind = (*this)._method_check_decl(_1b951b088_t);
				if ((!(jule::real(_126721_kind)))) {
					return jule::new_ref<_1b951b088_Tuple>();
				}
				_126517_types[static_cast<jule::Int>(_1b951b088_i)]=_126721_kind;
			}
			_iter_next_4717865904:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1b951b088_i; _1b951b088_t = *_range_begin; goto _iter_begin_4717865904; }
			_iter_end_4717865904:;
		}
	}
	return jule::new_struct<_1b951b088_Tuple>(new( std::nothrow ) _1b951b088_Tuple(_126517_types));
}



inline jule::Bool _1b951b088_TypeChecker::_method_check_fn_types(jule::Ref<_1d21d97ee_FnIns>& _127738_f) {
	jule::Bool _127751_ok = jule::Bool();
	{
		auto _range_expr = _127738_f->_field_params;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d21d97ee_ParamIns> _1b951b088_p = *_range_begin;
			_iter_begin_4717875152:;
			{
				_1b951b088_p->_field_kind=(*this)._method_build(_1b951b088_p->_field_decl->_field_kind->_field_decl->_field_kind);
				_127751_ok=jule::real(_1b951b088_p->_field_kind);
				if ((!(_127751_ok))) {
					_127751_ok = false;
					return _127751_ok;
				}
			}
			_iter_next_4717875152:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b951b088_p = *_range_begin; goto _iter_begin_4717875152; }
			_iter_end_4717875152:;
		}
	}
	if ((!(_127738_f->_field_decl->_method_is_void()))) {
		_127738_f->_field_result=(*this)._method_build(_127738_f->_field_decl->_field_result->_field_kind->_field_decl->_field_kind);
		_127751_ok = jule::real(_127738_f->_field_result);
		return _127751_ok;
	}
	_127751_ok = true;
	return _127751_ok;
}



inline jule::Ref<_1d21d97ee_FnIns> _1b951b088_TypeChecker::_method_build_fn(jule::Ref<_1d1e5192e_FnDecl> _129431_decl) {
	if (_129431_decl->_field_generics.len() > 0LL) {
		(*this)._method_push_err(_129431_decl->_field_token,jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1d21d97ee_FnIns>();
	}
	jule::Ref<_1d21d97ee_Fn> _130017_f = _1b8b10cbb_build_fn(_129431_decl);
	jule::Ref<_1d21d97ee_FnIns> _130117_ins = _130017_f->_method_instance_force();
	_130117_ins->_field_anon=true;
	jule::Bool _130413_ok = (*this)._method_check_fn_types(_130117_ins);
	if ((!(_130413_ok))) {
		return jule::new_ref<_1d21d97ee_FnIns>();
	}
	return _130117_ins;
}



inline jule::Trait<_1b951b088_Kind> _1b951b088_TypeChecker::_method_build_by_namespace(jule::Ref<_1d1e5192e_NamespaceTypeDecl> _131241_decl) {
	jule::Str _131313_path = _1b951b088_build_link_path_by_tokens(_131241_decl->_field_idents);
	jule::Ref<_1b8e0c01d_ImportInfo> _131417_imp = (*this)._field_lookup.get()._method_select_package(jule::Fn<jule::Bool(jule::Ref<_1b8e0c01d_ImportInfo>)>([=](jule::Ref<_1b8e0c01d_ImportInfo> _131453_imp) mutable -> jule::Bool {
		if ((_131241_decl->_field_idents.len() == 1LL) && (_131453_imp->_field_alias == _131313_path)) {
			return true;
		}
		return _131453_imp->_field_link_path == _131313_path;
	}));
	if ((!(jule::real(_131417_imp))) || (!(_131417_imp->_method_is_lookupable(jule::Str("self", 4))))) {
		(*this)._method_push_err(_131241_decl->_field_idents[0LL],jule::Str("namespace not exist: @", 22),jule::Slice<jule::Any>({jule::Any(_131313_path)}));
		return nullptr;
	}
	jule::Trait<_1b9a5b012_Lookup> _132617_lookup = (*this)._field_lookup;
	(*this)._field_lookup=_131417_imp;
	jule::Trait<_1b951b088_Kind> _132917_kind = (*this)._method_build_ident(_131241_decl->_field_kind);
	(*this)._field_lookup=_132617_lookup;
	return _132917_kind;
}



inline jule::Ref<_1b951b088_TypeKind> _1b951b088_TypeChecker::_method_build(jule::Any& _133629_decl_kind) {
	jule::Trait<_1b951b088_Kind> _133717_kind = nullptr;
	{
		auto _match_expr{ _133629_decl_kind };
		if (!(_match_expr.type_is<jule::Ref<_1b951b088_TypeKind>>())) { goto _case_end_4717915584; }
		_case_begin_4717915584:;
		{
			_133717_kind=_133629_decl_kind.operator jule::Ref<_1b951b088_TypeKind>();
		}
		goto _match_end_4717911824;
		_case_end_4717915584:;
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_IdentTypeDecl>>())) { goto _case_end_4717916160; }
		_case_begin_4717916160:;
		{
			jule::Trait<_1b951b088_Kind> _134421_t = (*this)._method_build_ident(_133629_decl_kind.operator jule::Ref<_1d1e5192e_IdentTypeDecl>());
			if (_134421_t != nullptr) {
				_133717_kind=_134421_t;
			}
		}
		goto _match_end_4717911824;
		_case_end_4717916160:;
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_RefTypeDecl>>())) { goto _case_end_4717915824; }
		_case_begin_4717915824:;
		{
			jule::Ref<_1b951b088_Ref> _135021_t = (*this)._method_build_ref(_133629_decl_kind.operator jule::Ref<_1d1e5192e_RefTypeDecl>());
			if (jule::real(_135021_t)) {
				_133717_kind=_135021_t;
			}
		}
		goto _match_end_4717911824;
		_case_end_4717915824:;
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_PtrTypeDecl>>())) { goto _case_end_4717915936; }
		_case_begin_4717915936:;
		{
			jule::Ref<_1b951b088_Ptr> _135621_t = (*this)._method_build_ptr(_133629_decl_kind.operator jule::Ref<_1d1e5192e_PtrTypeDecl>());
			if (jule::real(_135621_t)) {
				_133717_kind=_135621_t;
			}
		}
		goto _match_end_4717911824;
		_case_end_4717915936:;
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_SlcTypeDecl>>())) { goto _case_end_4717914976; }
		_case_begin_4717914976:;
		{
			jule::Ref<_1b951b088_Slc> _136221_t = (*this)._method_build_slc(_133629_decl_kind.operator jule::Ref<_1d1e5192e_SlcTypeDecl>());
			if (jule::real(_136221_t)) {
				_133717_kind=_136221_t;
			}
		}
		goto _match_end_4717911824;
		_case_end_4717914976:;
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_ArrTypeDecl>>())) { goto _case_end_4717915088; }
		_case_begin_4717915088:;
		{
			jule::Ref<_1b951b088_Arr> _136821_t = (*this)._method_build_arr(_133629_decl_kind.operator jule::Ref<_1d1e5192e_ArrTypeDecl>());
			if (jule::real(_136821_t)) {
				_133717_kind=_136821_t;
			}
		}
		goto _match_end_4717911824;
		_case_end_4717915088:;
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_MapTypeDecl>>())) { goto _case_end_4717915200; }
		_case_begin_4717915200:;
		{
			jule::Ref<_1b951b088_Map> _137421_t = (*this)._method_build_map(_133629_decl_kind.operator jule::Ref<_1d1e5192e_MapTypeDecl>());
			if (jule::real(_137421_t)) {
				_133717_kind=_137421_t;
			}
		}
		goto _match_end_4717911824;
		_case_end_4717915200:;
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_TupleTypeDecl>>())) { goto _case_end_4717912944; }
		_case_begin_4717912944:;
		{
			jule::Ref<_1b951b088_Tuple> _138021_t = (*this)._method_build_tuple(_133629_decl_kind.operator jule::Ref<_1d1e5192e_TupleTypeDecl>());
			if (jule::real(_138021_t)) {
				_133717_kind=_138021_t;
			}
		}
		goto _match_end_4717911824;
		_case_end_4717912944:;
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_FnDecl>>())) { goto _case_end_4717913056; }
		_case_begin_4717913056:;
		{
			jule::Ref<_1d21d97ee_FnIns> _138621_t = (*this)._method_build_fn(_133629_decl_kind.operator jule::Ref<_1d1e5192e_FnDecl>());
			if (jule::real(_138621_t)) {
				_133717_kind=_138621_t;
			}
		}
		goto _match_end_4717911824;
		_case_end_4717913056:;
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_NamespaceTypeDecl>>())) { goto _case_end_4717913168; }
		_case_begin_4717913168:;
		{
			jule::Trait<_1b951b088_Kind> _139221_t = (*this)._method_build_by_namespace(_133629_decl_kind.operator jule::Ref<_1d1e5192e_NamespaceTypeDecl>());
			if (_139221_t != nullptr) {
				_133717_kind=_139221_t;
			}
		}
		goto _match_end_4717911824;
		_case_end_4717913168:;
		_case_begin_4717912528:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("invalid data-type", 17),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1b951b088_TypeKind>();
		}
		goto _match_end_4717911824;
		_case_end_4717912528:;
		_match_end_4717911824:;
	}
	if (_133717_kind == nullptr) {
		return jule::new_ref<_1b951b088_TypeKind>();
	}
	{
		auto _match_expr{ _133717_kind };
		if (!(_match_expr.type_is<jule::Ref<_1b951b088_TypeKind>>())) { goto _case_end_4717946592; }
		_case_begin_4717946592:;
		{
			return _133717_kind.operator jule::Ref<_1b951b088_TypeKind>();
		}
		goto _match_end_4717943536;
		_case_end_4717946592:;
		_case_begin_4717945296:;
		{
			return jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_133717_kind));
		}
		goto _match_end_4717943536;
		_case_end_4717945296:;
		_match_end_4717943536:;
	}
}



inline jule::Ref<_1b951b088_TypeKind> _1b951b088_TypeChecker::_method_check_decl(jule::Ref<_1d1e5192e_TypeDecl>& _141734_decl) {
	_1d1da4277_Token _141917_error_token = (*this)._field_error_token;
	(*this)._field_error_token=_141734_decl->_field_token;
	jule::Ref<_1b951b088_TypeKind> _142217_kind = (*this)._method_build(_141734_decl->_field_kind);
	(*this)._field_error_token=_141917_error_token;
	return _142217_kind;
}



inline void _1b951b088_TypeChecker::_method_check(jule::Ref<_1b951b088_TypeSymbol>& _142829_t) {
	if ((!(jule::real(_142829_t->_field_decl)))) {
		return;
	}
	jule::Ref<_1b951b088_TypeKind> _143317_kind = (*this)._method_check_decl(_142829_t->_field_decl);
	if ((!(jule::real(_143317_kind)))) {
		_142829_t->_method_remove_kind();
		return;
	}
	_142829_t->_field_kind=_143317_kind;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b951b088_TypeChecker &_Src) {
	_Stream << "TypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "ignore_generics:" << _Src._field_ignore_generics << ", ";
	_Stream << "use_generics:" << _Src._field_use_generics << ", ";
	_Stream << "not_plain:" << _Src._field_not_plain;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::Ref<_1d1818549_IR>,jule::Slice<_1d0557e9e_Log>> _1d1818549_IR::_static_method_build(jule::Str _2525_path,jule::Int _2536_flags) {
	jule::Ref<_1d1c2a7b3_PlainImporter> _2617_importer = jule::new_struct<_1d1c2a7b3_PlainImporter>(new( std::nothrow ) _1d1c2a7b3_PlainImporter());
	jule::Slice<jule::Ref<_1d21640e7_Ast>> _2718_files;
	jule::Slice<_1d0557e9e_Log> _2729_logs;
	std::tie(_2718_files,_2729_logs) = _2617_importer->_method_import_package(_2525_path);
	if (_2729_logs.len() > 0LL) {
		return std::make_tuple(jule::new_ref<_1d1818549_IR>(),_2729_logs);
	}
	if (_2718_files.len() == 0LL) {
		return std::make_tuple(jule::new_ref<_1d1818549_IR>(),nullptr);
	}
	jule::Ref<_1b8e0c01d_Package> _3618_pkg;
	std::tie(_3618_pkg,_2729_logs) = _1b9960323_analyze_package(_2718_files,_2617_importer,_2536_flags);
	if (_2729_logs.len() > 0LL) {
		return std::make_tuple(jule::new_ref<_1d1818549_IR>(),_2729_logs);
	}
	jule::Ref<_1d1818549_IR> _4117_ir = jule::new_struct<_1d1818549_IR>(new( std::nothrow ) _1d1818549_IR(jule::Slice<jule::Str>(),_3618_pkg,_2617_importer->_field_all_packages,_1d162b2a2_OrderedDefines()));
	_4117_ir->_field_passes=_1d1818549_get_all_unique_passes(_4117_ir->_field_main,_4117_ir->_field_used);
	return std::make_tuple(_4117_ir,nullptr);
}



inline void _1d1818549_IR::_method_append_structs(jule::Ref<_1b8e0c01d_Package>& _5234_p,jule::Slice<jule::Ref<_1d21c0b59_Struct>>& _5258_buffer) {
	{
		auto _range_expr = _5234_p->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b9390d86_SymbolTable> _1d1818549_f = *_range_begin;
			_iter_begin_4718221808:;
			{
				{
					auto _range_expr = _1d1818549_f->_field_structs;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Ref<_1d21c0b59_Struct> _1d1818549_s = *_range_begin;
						_iter_begin_4718223760:;
						{
							if ((!(_1d1818549_s->_field_cpp_linked))) {
								_5258_buffer=jule::append(_5258_buffer,jule::Slice<jule::Ref<_1d21c0b59_Struct>>({_1d1818549_s}));
							}
						}
						_iter_next_4718223760:;
						++_range_begin;
						if (_range_begin != _range_end) { _1d1818549_s = *_range_begin; goto _iter_begin_4718223760; }
						_iter_end_4718223760:;
					}
				}
			}
			_iter_next_4718221808:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d1818549_f = *_range_begin; goto _iter_begin_4718221808; }
			_iter_end_4718221808:;
		}
	}
}



inline jule::Slice<jule::Ref<_1d21c0b59_Struct>> _1d1818549_IR::_method_get_all_structures(void) {
	jule::Slice<jule::Ref<_1d21c0b59_Struct>> _6517_buffer = nullptr;
	(*this)._method_append_structs((*this)._field_main,_6517_buffer);
	{
		auto _range_expr = (*this)._field_used;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b8e0c01d_ImportInfo> _1d1818549_u = *_range_begin;
			_iter_begin_4718229328:;
			{
				if ((!(_1d1818549_u->_field_cpp_linked))) {
					(*this)._method_append_structs(_1d1818549_u->_field_package,_6517_buffer);
				}
			}
			_iter_next_4718229328:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d1818549_u = *_range_begin; goto _iter_begin_4718229328; }
			_iter_end_4718229328:;
		}
	}
	return _6517_buffer;
}



inline void _1d1818549_IR::_method_append_vars(jule::Ref<_1b8e0c01d_Package>& _7831_p,jule::Slice<jule::Ref<_1b919cb2c_Var>>& _7855_buffer) {
	{
		auto _range_expr = _7831_p->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b9390d86_SymbolTable> _1d1818549_f = *_range_begin;
			_iter_begin_4718236192:;
			{
				{
					auto _range_expr = _1d1818549_f->_field_vars;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Ref<_1b919cb2c_Var> _1d1818549_v = *_range_begin;
						_iter_begin_4718238144:;
						{
							if ((!(_1d1818549_v->_field_cpp_linked)) && (!(_1d1818549_v->_field_constant))) {
								_7855_buffer=jule::append(_7855_buffer,jule::Slice<jule::Ref<_1b919cb2c_Var>>({_1d1818549_v}));
							}
						}
						_iter_next_4718238144:;
						++_range_begin;
						if (_range_begin != _range_end) { _1d1818549_v = *_range_begin; goto _iter_begin_4718238144; }
						_iter_end_4718238144:;
					}
				}
			}
			_iter_next_4718236192:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d1818549_f = *_range_begin; goto _iter_begin_4718236192; }
			_iter_end_4718236192:;
		}
	}
}



inline jule::Slice<jule::Ref<_1b919cb2c_Var>> _1d1818549_IR::_method_get_all_variables(void) {
	jule::Slice<jule::Ref<_1b919cb2c_Var>> _9117_buffer = nullptr;
	(*this)._method_append_vars((*this)._field_main,_9117_buffer);
	{
		auto _range_expr = (*this)._field_used;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b8e0c01d_ImportInfo> _1d1818549_u = *_range_begin;
			_iter_begin_4718244160:;
			{
				if ((!(_1d1818549_u->_field_cpp_linked))) {
					(*this)._method_append_vars(_1d1818549_u->_field_package,_9117_buffer);
				}
			}
			_iter_next_4718244160:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d1818549_u = *_range_begin; goto _iter_begin_4718244160; }
			_iter_end_4718244160:;
		}
	}
	return _9117_buffer;
}



inline void _1d1818549_IR::_method_order(void) {
	(*this)._field_ordered._field_structs=(*this)._method_get_all_structures();
	(*this)._field_ordered._field_globals=(*this)._method_get_all_variables();
	_1d162b2a2_DefineOrderer::_static_method_order_variables((*this)._field_ordered._field_globals);
	_1d162b2a2_DefineOrderer::_static_method_order_structures((*this)._field_ordered._field_structs);
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1818549_IR &_Src) {
	_Stream << "IR{";
	_Stream << "passes:" << _Src._field_passes << ", ";
	_Stream << "main:" << _Src._field_main << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "ordered:" << _Src._field_ordered;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1e5192e_BreakSt &_Src) {
	_Stream << "BreakSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1e5192e_ContSt &_Src) {
	_Stream << "ContSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b8cd2c4b_ScopeLabel &_Src) {
	_Stream << "ScopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1e5192e_If &_Src) {
	_Stream << "If{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1e5192e_Else &_Src) {
	_Stream << "Else{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1e5192e_Directive &_Src) {
	_Stream << "Directive{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "tag:" << _Src._field_tag << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1e5192e_TypeAliasDecl &_Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1e5192e_Case &_Src) {
	_Stream << "Case{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1e5192e_UseDecl &_Src) {
	_Stream << "UseDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "link_path:" << _Src._field_link_path << ", ";
	_Stream << "alias:" << _Src._field_alias << ", ";
	_Stream << "full:" << _Src._field_full << ", ";
	_Stream << "selected:" << _Src._field_selected << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "std:" << _Src._field_std;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d1e5192e_EnumItemDecl::_method_auto_expr(void) {
	return (!(jule::real((*this)._field_expr)));
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1e5192e_EnumItemDecl &_Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d1e5192e_EnumDecl::_method_default_typed(void) {
	return (!(jule::real((*this)._field_kind)));
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1e5192e_EnumDecl &_Src) {
	_Stream << "EnumDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "items:" << _Src._field_items << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1e5192e_FieldDecl &_Src) {
	_Stream << "FieldDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1e5192e_StructDecl &_Src) {
	_Stream << "StructDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1e5192e_TraitDecl &_Src) {
	_Stream << "TraitDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments << ", ";
	_Stream << "methods:" << _Src._field_methods;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d1e5192e_Impl::_method_is_trait_impl(void) {
	return (*this)._field_base._field_id != 0LLU;
}



inline jule::Bool _1d1e5192e_Impl::_method_is_struct_impl(void) {
	return (*this)._field_base._field_id == 0LLU;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1e5192e_Impl &_Src) {
	_Stream << "Impl{";
	_Stream << "base:" << _Src._field_base << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d1e5192e_Expr::_method_is_fn_call(void) {
	if ((*this)._field_kind == nullptr) {
		return false;
	}
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_FnCallExpr>>())) { goto _case_end_4705013808; }
		_case_begin_4705013808:;
		{
			return true;
		}
		goto _match_end_4705011840;
		_case_end_4705013808:;
		_case_begin_4705013328:;
		{
			return false;
		}
		goto _match_end_4705011840;
		_case_end_4705013328:;
		_match_end_4705011840:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1e5192e_Expr &_Src) {
	_Stream << "Expr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1e5192e_TypeDecl &_Src) {
	_Stream << "TypeDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d21bd937_AssignInfo &_Src) {
	_Stream << "AssignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d1e5192e_IdentTypeDecl::_method_is_prim(void) {
	return (*this)._field_token._field_id == 1LLU;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1e5192e_IdentTypeDecl &_Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_1d21c0b59_FieldIns> _1d21c0b59_Field::_method_instance(void) {
	return jule::new_struct<_1d21c0b59_FieldIns>(new( std::nothrow ) _1d21c0b59_FieldIns(this->self,this->self->_field_kind->_field_kind));
}







std::ostream &operator<<(std::ostream &_Stream, const _1d21c0b59_Field &_Src) {
	_Stream << "Field{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_1d21c0b59_StructIns> _1d21c0b59_Struct::_method_instance(void) {
	if ((this->self->_field_generics.len() == 0LL) && (this->self->_field_instances.len() == 1LL)) {
		return this->self->_field_instances[0LL];
	}
	jule::Ref<_1d21c0b59_StructIns> _6717_ins = jule::new_struct<_1d21c0b59_StructIns>(new( std::nothrow ) _1d21c0b59_StructIns(jule::Bool(),this->self,jule::Slice<jule::Ref<_1b951b088_TypeKind>>(),jule::Slice<jule::Ref<_1d21c0b59_FieldIns>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(this->self->_field_fields.len()))),jule::Slice<jule::Ref<_1d21d97ee_Fn>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(this->self->_field_methods.len()))),jule::Bool(),_1b8b10cbb_ReferenceStack::_static_method_new()));
	{
		auto _range_expr = this->self->_field_fields;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1d21c0b59_i = 0;
			jule::Ref<_1d21c0b59_Field> _1d21c0b59_f = *_range_begin;
			_iter_begin_4711142992:;
			{
				_6717_ins->_field_fields[static_cast<jule::Int>(_1d21c0b59_i)]=_1d21c0b59_f->_method_instance();
				if (jule::real(_1d21c0b59_f->_field_kind->_field_kind) && _1d21c0b59_f->_field_kind->_field_kind->_method_mutable()) {
					_6717_ins->_field_mutable=true;
				}
			}
			_iter_next_4711142992:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1d21c0b59_i; _1d21c0b59_f = *_range_begin; goto _iter_begin_4711142992; }
			_iter_end_4711142992:;
		}
	}
	{
		auto _range_expr = this->self->_field_methods;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1d21c0b59_i = 0;
			jule::Ref<_1d21d97ee_Fn> _1d21c0b59_f = *_range_begin;
			_iter_begin_4711144608:;
			{
				jule::Ref<_1d21d97ee_Fn> _8221_fins = jule::new_struct<_1d21d97ee_Fn>(new( std::nothrow ) _1d21d97ee_Fn(_1d21c0b59_f->_field_sema,_1d21c0b59_f->_field_token,_1d21c0b59_f->_field_global,_1d21c0b59_f->_field_unsafety,_1d21c0b59_f->_field_public,_1d21c0b59_f->_field_cpp_linked,_1d21c0b59_f->_field_statically,_1d21c0b59_f->_field_ident,_1d21c0b59_f->_field_directives,_1d21c0b59_f->_field_doc,_1d21c0b59_f->_field_scope,_1d21c0b59_f->_field_generics,_1d21c0b59_f->_field_result,_1d21c0b59_f->_field_params,_1d21c0b59_f->_field_owner,nullptr));
				_6717_ins->_field_methods[static_cast<jule::Int>(_1d21c0b59_i)]=_8221_fins;
			}
			_iter_next_4711144608:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1d21c0b59_i; _1d21c0b59_f = *_range_begin; goto _iter_begin_4711144608; }
			_iter_end_4711144608:;
		}
	}
	return _6717_ins;
}



inline jule::Ref<_1d21c0b59_StructIns> _1d21c0b59_Struct::_method_append_instance(jule::Ref<_1d21c0b59_StructIns>& _10839_ins) {
	if (((*this)._field_generics.len() == 0LL) && ((*this)._field_instances.len() == 1LL)) {
		return (*this)._field_instances[0LL];
	}
	{
		auto _range_expr = (*this)._field_instances;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d21c0b59_StructIns> _1d21c0b59_ains = *_range_begin;
			_iter_begin_4711165072:;
			{
				{
					auto _range_expr = _1d21c0b59_ains->_field_generics;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Int _1d21c0b59_i = 0;
						jule::Ref<_1b951b088_TypeKind> _1d21c0b59_ag = *_range_begin;
						_iter_begin_4711166992:;
						{
							if (_1d21c0b59_ag->_method_equals(_10839_ins->_field_generics[static_cast<jule::Int>(_1d21c0b59_i)])) {
								return _1d21c0b59_ains;
							}
						}
						_iter_next_4711166992:;
						++_range_begin;
						if (_range_begin != _range_end) { ++_1d21c0b59_i; _1d21c0b59_ag = *_range_begin; goto _iter_begin_4711166992; }
						_iter_end_4711166992:;
					}
				}
			}
			_iter_next_4711165072:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d21c0b59_ains = *_range_begin; goto _iter_begin_4711165072; }
			_iter_end_4711165072:;
		}
	}
	(*this)._field_instances=jule::append((*this)._field_instances,jule::Slice<jule::Ref<_1d21c0b59_StructIns>>({_10839_ins}));
	return jule::new_ref<_1d21c0b59_StructIns>();
}



inline jule::Ref<_1d21d97ee_Fn> _1d21c0b59_Struct::_method_find_method(jule::Str _12934_ident,jule::Bool _12946_statically) {
	{
		auto _range_expr = (*this)._field_methods;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d21d97ee_Fn> _1d21c0b59_f = *_range_begin;
			_iter_begin_4711176896:;
			{
				if ((_1d21c0b59_f->_field_statically == _12946_statically) && (_1d21c0b59_f->_field_ident == _12934_ident)) {
					return _1d21c0b59_f;
				}
			}
			_iter_next_4711176896:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d21c0b59_f = *_range_begin; goto _iter_begin_4711176896; }
			_iter_end_4711176896:;
		}
	}
	return jule::new_ref<_1d21d97ee_Fn>();
}



inline jule::Ref<_1b919cb2c_Var> _1d21c0b59_Struct::_method_find_static(jule::Str _14034_ident) {
	{
		auto _range_expr = (*this)._field_statics;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b919cb2c_Var> _1d21c0b59_v = *_range_begin;
			_iter_begin_4711182496:;
			{
				if (_1d21c0b59_v->_field_ident == _14034_ident) {
					return _1d21c0b59_v;
				}
			}
			_iter_next_4711182496:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d21c0b59_v = *_range_begin; goto _iter_begin_4711182496; }
			_iter_end_4711182496:;
		}
	}
	return jule::new_ref<_1b919cb2c_Var>();
}



inline jule::Ref<_1d21c0b59_Field> _1d21c0b59_Struct::_method_find_field(jule::Str _15133_ident) {
	{
		auto _range_expr = (*this)._field_fields;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d21c0b59_Field> _1d21c0b59_f = *_range_begin;
			_iter_begin_4711187600:;
			{
				if (_1d21c0b59_f->_field_ident == _15133_ident) {
					return _1d21c0b59_f;
				}
			}
			_iter_next_4711187600:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d21c0b59_f = *_range_begin; goto _iter_begin_4711187600; }
			_iter_end_4711187600:;
		}
	}
	return jule::new_ref<_1d21c0b59_Field>();
}



inline jule::Bool _1d21c0b59_Struct::_method_is_implements(jule::Ref<_1b8cd2894_Trait> _16132_t) {
	{
		auto _range_expr = (*this)._field_implements;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b8cd2894_Trait> _1d21c0b59_it = *_range_begin;
			_iter_begin_4711191616:;
			{
				if ((_16132_t).alloc == (_1d21c0b59_it).alloc) {
					return true;
				}
			}
			_iter_next_4711191616:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d21c0b59_it = *_range_begin; goto _iter_begin_4711191616; }
			_iter_end_4711191616:;
		}
	}
	return false;
}



inline jule::Bool _1d21c0b59_Struct::_method_is_derives(jule::Str _17129_ident) {
	{
		auto _range_expr = (*this)._field_directives;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d1e5192e_Directive> _1d21c0b59_d = *_range_begin;
			_iter_begin_4711195296:;
			{
				if (_1d21c0b59_d->_field_tag == jule::Str("derive", 6)) {
					if ((_1d21c0b59_d->_field_args.len() == 1LL) && (_1d21c0b59_d->_field_args[0LL] == _17129_ident)) {
						return true;
					}
				}
			}
			_iter_next_4711195296:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d21c0b59_d = *_range_begin; goto _iter_begin_4711195296; }
			_iter_end_4711195296:;
		}
	}
	return false;
}



inline jule::Bool _1d21c0b59_Struct::_method_is_uses(jule::Ref<_1d21c0b59_Struct> _18326_s) {
	{
		auto _range_expr = (*this)._field_uses;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d21c0b59_Struct> _1d21c0b59_u = *_range_begin;
			_iter_begin_4711202880:;
			{
				_iter_begin_4711204176:;
				if (!((_18326_s).alloc == (_1d21c0b59_u).alloc)) { goto _iter_end_4711204176; }
				{
					return true;
				}
				_iter_next_4711204176:;
				goto _iter_begin_4711204176;
				_iter_end_4711204176:;
			}
			_iter_next_4711202880:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d21c0b59_u = *_range_begin; goto _iter_begin_4711202880; }
			_iter_end_4711202880:;
		}
	}
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d21c0b59_Struct &_Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "depends:" << _Src._field_depends << ", ";
	_Stream << "uses:" << _Src._field_uses << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "implements:" << _Src._field_implements << ", ";
	_Stream << "instances:" << _Src._field_instances;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1e5192e_FnCallExpr &_Src) {
	_Stream << "FnCallExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "concurrent:" << _Src._field_concurrent;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_1d21d97ee_ParamIns> _1d21d97ee_Param::_method_instance(void) {
	return jule::new_struct<_1d21d97ee_ParamIns>(new( std::nothrow ) _1d21d97ee_ParamIns(this->self,jule::Ref<_1b951b088_TypeKind>()));
}



inline jule::Bool _1d21d97ee_Param::_method_is_self(void) {
	return ((*this)._field_ident == jule::Str("&self", 5)) || ((*this)._field_ident == jule::Str("self", 4));
}



inline jule::Bool _1d21d97ee_Param::_method_is_ref(void) {
	return ((*this)._field_ident != jule::Str("", 0)) && ((*this)._field_ident[0LL] == '&');
}







std::ostream &operator<<(std::ostream &_Stream, const _1d21d97ee_Param &_Src) {
	_Stream << "Param{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d21d97ee_Fn::_method_is_void(void) {
	return (!(jule::real((*this)._field_result)));
}



inline jule::Bool _1d21d97ee_Fn::_method_is_method(void) {
	return jule::real((*this)._field_owner);
}



inline jule::Bool _1d21d97ee_Fn::_method_is_entry_point(void) {
	return (*this)._field_ident == jule::Str("main", 4);
}



inline jule::Bool _1d21d97ee_Fn::_method_is_init(void) {
	return (*this)._field_ident == jule::Str("init", 4);
}



inline jule::Bool _1d21d97ee_Fn::_method_is_anon(void) {
	return _1d1da4277_is_anon_ident((*this)._field_ident);
}



inline jule::Bool _1d21d97ee_Fn::_method_any_var(void) {
	return jule::real((*this)._field_result) && ((*this)._field_result->_field_idents.len() > 0LL);
}



inline jule::Bool _1d21d97ee_Fn::_method_parameters_uses_generics(void) {
	if ((*this)._field_generics.len() == 0LL) {
		return false;
	}
	{
		auto _range_expr = (*this)._field_params;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d21d97ee_Param> _1d21d97ee_p = *_range_begin;
			_iter_begin_4711277392:;
			{
				if (_1d21d97ee_parameter_uses_generics(_1d21d97ee_p,(*this)._field_generics)) {
					return true;
				}
			}
			_iter_next_4711277392:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d21d97ee_p = *_range_begin; goto _iter_begin_4711277392; }
			_iter_end_4711277392:;
		}
	}
	return false;
}



inline jule::Bool _1d21d97ee_Fn::_method_result_uses_generics(void) {
	if ((*this)._method_is_void()) {
		return false;
	} else if ((!(jule::real((*this)._field_result->_field_kind))) || (!(jule::real((*this)._field_result->_field_kind->_field_kind)))) {
		return false;
	}
	return _1d21d97ee_kind_uses_generics((*this)._field_result->_field_kind->_field_kind,(*this)._field_generics);
}



inline jule::Ref<_1d21d97ee_FnIns> _1d21d97ee_Fn::_method_instance_force(void) {
	jule::Ref<_1d21d97ee_FnIns> _11017_ins = jule::new_struct<_1d21d97ee_FnIns>(new( std::nothrow ) _1d21d97ee_FnIns(jule::Ref<_1d21c0b59_StructIns>(),this->self,jule::Slice<jule::Ref<_1b951b088_TypeKind>>(),jule::Slice<jule::Ref<_1d21d97ee_ParamIns>>(),jule::Ref<_1b951b088_TypeKind>(),jule::new_struct<_1b8cd2c4b_Scope>(new( std::nothrow ) _1b8cd2c4b_Scope()),_1b8b10cbb_ReferenceStack::_static_method_new(),jule::Ref<_1b8b10cbb_ReferenceStack>(),jule::Fn<jule::Ref<_1b9523799_Data>(jule::Ref<_1b9523799_Eval>&,jule::Ref<_1d1e5192e_FnCallExpr>&,jule::Ref<_1b9523799_Data>&)>(),jule::Bool(),jule::Bool()));
	if (this->self->_method_is_init()) {
		_11017_ins->_field_refers=_1b8b10cbb_ReferenceStack::_static_method_new();
	}
	_11017_ins->_field_params=jule::Slice<jule::Ref<_1d21d97ee_ParamIns>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(this->self->_field_params.len())));
	{
		auto _range_expr = this->self->_field_params;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1d21d97ee_i = 0;
			jule::Ref<_1d21d97ee_Param> _1d21d97ee_p = *_range_begin;
			_iter_begin_4711294096:;
			{
				_11017_ins->_field_params[static_cast<jule::Int>(_1d21d97ee_i)]=_1d21d97ee_p->_method_instance();
			}
			_iter_next_4711294096:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1d21d97ee_i; _1d21d97ee_p = *_range_begin; goto _iter_begin_4711294096; }
			_iter_end_4711294096:;
		}
	}
	if (jule::real(_11017_ins->_field_decl->_field_result)) {
		_11017_ins->_field_result=_11017_ins->_field_decl->_field_result->_field_kind->_field_kind;
	}
	return _11017_ins;
}



inline jule::Ref<_1d21d97ee_FnIns> _1d21d97ee_Fn::_method_instance(void) {
	if ((this->self->_field_generics.len() == 0LL) && (this->self->_field_instances.len() == 1LL)) {
		return this->self->_field_instances[0LL];
	}
	return this->self->_method_instance_force();
}



inline std::tuple<jule::Bool,jule::Int> _1d21d97ee_Fn::_method_append_instance(jule::Ref<_1d21d97ee_FnIns>& _14139_ins) {
	if ((*this)._field_generics.len() == 0LL) {
		if ((*this)._field_instances.len() == 1LL) {
			return std::make_tuple(false,0LL);
		}
		(*this)._field_instances=jule::append((*this)._field_instances,jule::Slice<jule::Ref<_1d21d97ee_FnIns>>({_14139_ins}));
		return std::make_tuple(true,-1LL);
	}
	if ((*this)._field_instances.len() == 0LL) {
		(*this)._field_instances=jule::append((*this)._field_instances,jule::Slice<jule::Ref<_1d21d97ee_FnIns>>({_14139_ins}));
		return std::make_tuple(true,-1LL);
	}
	{
		auto _range_expr = (*this)._field_instances;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1d21d97ee_j = 0;
			jule::Ref<_1d21d97ee_FnIns> _1d21d97ee_ains = *_range_begin;
			_iter_begin_4711312800:;
			{
				{
					auto _range_expr = _1d21d97ee_ains->_field_generics;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Int _1d21d97ee_i = 0;
						jule::Ref<_1b951b088_TypeKind> _1d21d97ee_ag = *_range_begin;
						_iter_begin_4711317120:;
						{
							if (_1d21d97ee_ag->_method_equals(_14139_ins->_field_generics[static_cast<jule::Int>(_1d21d97ee_i)])) {
								return std::make_tuple(false,_1d21d97ee_j);
							}
						}
						_iter_next_4711317120:;
						++_range_begin;
						if (_range_begin != _range_end) { ++_1d21d97ee_i; _1d21d97ee_ag = *_range_begin; goto _iter_begin_4711317120; }
						_iter_end_4711317120:;
					}
				}
			}
			_iter_next_4711312800:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1d21d97ee_j; _1d21d97ee_ains = *_range_begin; goto _iter_begin_4711312800; }
			_iter_end_4711312800:;
		}
	}
	(*this)._field_instances=jule::append((*this)._field_instances,jule::Slice<jule::Ref<_1d21d97ee_FnIns>>({_14139_ins}));
	return std::make_tuple(true,-1LL);
}







std::ostream &operator<<(std::ostream &_Stream, const _1d21d97ee_Fn &_Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "global:" << _Src._field_global << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "params:" << _Src._field_params << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "instances:" << _Src._field_instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d1e5192e_Node::_method_is_decl(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_EnumDecl>>() || _match_expr.type_is<jule::Ref<_1d1e5192e_FnDecl>>() || _match_expr.type_is<jule::Ref<_1d1e5192e_StructDecl>>() || _match_expr.type_is<jule::Ref<_1d1e5192e_TraitDecl>>() || _match_expr.type_is<jule::Ref<_1d1e5192e_TypeAliasDecl>>() || _match_expr.type_is<jule::Ref<_1d1e5192e_FieldDecl>>() || _match_expr.type_is<jule::Ref<_1d1e5192e_UseDecl>>() || _match_expr.type_is<jule::Ref<_1d1e5192e_VarDecl>>() || _match_expr.type_is<jule::Ref<_1d1e5192e_TypeDecl>>())) { goto _case_end_4704953776; }
		_case_begin_4704953776:;
		{
			return true;
		}
		goto _match_end_4704952736;
		_case_end_4704953776:;
		_case_begin_4704953472:;
		{
			return false;
		}
		goto _match_end_4704952736;
		_case_end_4704953472:;
		_match_end_4704952736:;
	}
}



inline jule::Bool _1d1e5192e_Node::_method_is_comment(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_Comment>>() || _match_expr.type_is<jule::Ref<_1d1e5192e_CommentGroup>>())) { goto _case_end_4704987376; }
		_case_begin_4704987376:;
		{
			return true;
		}
		goto _match_end_4704985184;
		_case_end_4704987376:;
		_case_begin_4704987072:;
		{
			return false;
		}
		goto _match_end_4704985184;
		_case_end_4704987072:;
		_match_end_4704985184:;
	}
}



inline jule::Bool _1d1e5192e_Node::_method_is_impl(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_Impl>>())) { goto _case_end_4704991216; }
		_case_begin_4704991216:;
		{
			return true;
		}
		goto _match_end_4704989648;
		_case_end_4704991216:;
		_case_begin_4704990912:;
		{
			return false;
		}
		goto _match_end_4704989648;
		_case_end_4704990912:;
		_match_end_4704989648:;
	}
}



inline jule::Bool _1d1e5192e_Node::_method_is_use_decl(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_UseDecl>>())) { goto _case_end_4704994736; }
		_case_begin_4704994736:;
		{
			return true;
		}
		goto _match_end_4704991952;
		_case_end_4704994736:;
		_case_begin_4704994432:;
		{
			return false;
		}
		goto _match_end_4704991952;
		_case_end_4704994432:;
		_match_end_4704991952:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1d1e5192e_Node &_Src) {
	_Stream << "Node{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b8b10cbb_Pass &_Src) {
	_Stream << "Pass{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "text:" << _Src._field_text;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b8cd2894_Trait::_method_to_str(void) {
	return (*this)._field_ident;
}



inline jule::Bool _1b8cd2894_Trait::_method_equals(jule::Ref<_1b951b088_TypeKind> _2521_other) {
	jule::Ref<_1b8cd2894_Trait> _2613_trt = (_2521_other).alloc->_method_trt();
	if ((!(jule::real(_2613_trt)))) {
		return false;
	}
	return (&((*this))) == (_2613_trt).alloc;
}



inline jule::Bool _1b8cd2894_Trait::_method_is_builtin(void) {
	return (*this)._field_token._field_id == 0LLU;
}



inline jule::Ref<_1d21d97ee_Fn> _1b8cd2894_Trait::_method_find_method(jule::Str _4034_ident) {
	{
		auto _range_expr = (*this)._field_methods;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d21d97ee_Fn> _1b8cd2894_f = *_range_begin;
			_iter_begin_4711727488:;
			{
				if (_1b8cd2894_f->_field_ident == _4034_ident) {
					return _1b8cd2894_f;
				}
			}
			_iter_next_4711727488:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b8cd2894_f = *_range_begin; goto _iter_begin_4711727488; }
			_iter_end_4711727488:;
		}
	}
	return jule::new_ref<_1d21d97ee_Fn>();
}







std::ostream &operator<<(std::ostream &_Stream, const _1b8cd2894_Trait &_Src) {
	_Stream << "Trait{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "implemented:" << _Src._field_implemented;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b8dae520_EnumItem::_method_auto_expr(void) {
	return (!(jule::real((*this)._field_value)));
}







std::ostream &operator<<(std::ostream &_Stream, const _1b8dae520_EnumItem &_Src) {
	_Stream << "EnumItem{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "value:" << _Src._field_value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b8dae520_Enum::_method_to_str(void) {
	return (*this)._field_ident;
}



inline jule::Bool _1b8dae520_Enum::_method_equals(jule::Ref<_1b951b088_TypeKind> _3521_other) {
	jule::Ref<_1b8dae520_Enum> _3613_enm = (_3521_other).alloc->_method_enm();
	if ((!(jule::real(_3613_enm)))) {
		return false;
	}
	return (&((*this))) == (_3613_enm).alloc;
}



inline jule::Ref<_1b8dae520_EnumItem> _1b8dae520_Enum::_method_find_item(jule::Str _4732_ident) {
	{
		auto _range_expr = (*this)._field_items;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b8dae520_EnumItem> _1b8dae520_item = *_range_begin;
			_iter_begin_4711741792:;
			{
				if (_1b8dae520_item->_field_ident == _4732_ident) {
					return _1b8dae520_item;
				}
			}
			_iter_next_4711741792:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b8dae520_item = *_range_begin; goto _iter_begin_4711741792; }
			_iter_end_4711741792:;
		}
	}
	return jule::new_ref<_1b8dae520_EnumItem>();
}







std::ostream &operator<<(std::ostream &_Stream, const _1b8dae520_Enum &_Src) {
	_Stream << "Enum{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "items:" << _Src._field_items << ", ";
	_Stream << "doc:" << _Src._field_doc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_1b8e0c01d_ImportInfo> _1b8e0c01d_ImportInfo::_method_find_package(jule::Str ) {
	return jule::new_ref<_1b8e0c01d_ImportInfo>();
}



inline jule::Ref<_1b8e0c01d_ImportInfo> _1b8e0c01d_ImportInfo::_method_select_package(jule::Fn<jule::Bool(jule::Ref<_1b8e0c01d_ImportInfo>)> ) {
	return jule::new_ref<_1b8e0c01d_ImportInfo>();
}



inline jule::Ref<_1b919cb2c_Var> _1b8e0c01d_ImportInfo::_method_find_var(jule::Str _14731_ident,jule::Bool _14743_cpp_linked) {
	if ((!((*this)._method_is_lookupable(_14731_ident)))) {
		return jule::new_ref<_1b919cb2c_Var>();
	}
	return _1b8e0c01d_find_var_in_package((*this)._field_package->_field_files,_14731_ident,false);
}



inline jule::Ref<_1b951b088_TypeAlias> _1b8e0c01d_ImportInfo::_method_find_type_alias(jule::Str _16038_ident,jule::Bool _16050_cpp_linked) {
	if ((!((*this)._method_is_lookupable(_16038_ident)))) {
		return jule::new_ref<_1b951b088_TypeAlias>();
	}
	return _1b8e0c01d_find_type_alias_in_package((*this)._field_package->_field_files,_16038_ident,false);
}



inline jule::Ref<_1d21c0b59_Struct> _1b8e0c01d_ImportInfo::_method_find_struct(jule::Str _17334_ident,jule::Bool _17346_cpp_linked) {
	if ((!((*this)._method_is_lookupable(_17334_ident)))) {
		return jule::new_ref<_1d21c0b59_Struct>();
	}
	return _1b8e0c01d_find_struct_in_package((*this)._field_package->_field_files,_17334_ident,false);
}



inline jule::Ref<_1d21d97ee_Fn> _1b8e0c01d_ImportInfo::_method_find_fn(jule::Str _18630_ident,jule::Bool _18642_cpp_linked) {
	if ((!((*this)._method_is_lookupable(_18630_ident)))) {
		return jule::new_ref<_1d21d97ee_Fn>();
	}
	return _1b8e0c01d_find_fn_in_package((*this)._field_package->_field_files,_18630_ident,false);
}



inline jule::Ref<_1b8cd2894_Trait> _1b8e0c01d_ImportInfo::_method_find_trait(jule::Str _19833_ident) {
	if ((!((*this)._method_is_lookupable(_19833_ident)))) {
		return jule::new_ref<_1b8cd2894_Trait>();
	}
	return _1b8e0c01d_find_trait_in_package((*this)._field_package->_field_files,_19833_ident);
}



inline jule::Ref<_1b8dae520_Enum> _1b8e0c01d_ImportInfo::_method_find_enum(jule::Str _21032_ident) {
	if ((!((*this)._method_is_lookupable(_21032_ident)))) {
		return jule::new_ref<_1b8dae520_Enum>();
	}
	return _1b8e0c01d_find_enum_in_package((*this)._field_package->_field_files,_21032_ident);
}



inline jule::Bool _1b8e0c01d_ImportInfo::_method_is_lookupable(jule::Str _22028_ident) {
	if ((*this)._field_cpp_linked) {
		return false;
	}
	if ((!((*this)._field_import_all))) {
		if ((*this)._method_exist_ident(jule::Str("self", 4))) {
			return true;
		}
		if ((*this)._field_selected.len() > 0LL) {
			if ((!((*this)._method_exist_ident(_22028_ident)))) {
				return false;
			}
		}
	}
	return true;
}



inline jule::Bool _1b8e0c01d_ImportInfo::_method_exist_ident(jule::Str _24026_ident) {
	{
		auto _range_expr = (*this)._field_selected;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			_1d1da4277_Token _1b8e0c01d_sident = *_range_begin;
			_iter_begin_4712830864:;
			{
				if (_1b8e0c01d_sident._field_kind == _24026_ident) {
					return true;
				}
			}
			_iter_next_4712830864:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b8e0c01d_sident = *_range_begin; goto _iter_begin_4712830864; }
			_iter_end_4712830864:;
		}
	}
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b8e0c01d_ImportInfo &_Src) {
	_Stream << "ImportInfo{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "link_path:" << _Src._field_link_path << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "alias:" << _Src._field_alias << ", ";
	_Stream << "duplicate:" << _Src._field_duplicate << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "std:" << _Src._field_std << ", ";
	_Stream << "import_all:" << _Src._field_import_all << ", ";
	_Stream << "selected:" << _Src._field_selected << ", ";
	_Stream << "package:" << _Src._field_package;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b8dacd8c_Impl::_method_is_trait_impl(void) {
	return (*this)._field_base._field_id != 0LLU;
}



inline jule::Bool _1b8dacd8c_Impl::_method_is_struct_impl(void) {
	return (*this)._field_base._field_id == 0LLU;
}







std::ostream &operator<<(std::ostream &_Stream, const _1b8dacd8c_Impl &_Src) {
	_Stream << "Impl{";
	_Stream << "base:" << _Src._field_base << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b919cb2c_Var::_method_is_initialized(void) {
	return jule::real((*this)._field_value);
}



inline jule::Bool _1b919cb2c_Var::_method_is_type_inferred(void) {
	return (!(jule::real((*this)._field_kind))) || (!(jule::real((*this)._field_kind->_field_decl)));
}







std::ostream &operator<<(std::ostream &_Stream, const _1b919cb2c_Var &_Src) {
	_Stream << "Var{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "constant:" << _Src._field_constant << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "value:" << _Src._field_value << ", ";
	_Stream << "references:" << _Src._field_references << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "depends:" << _Src._field_depends;
	_Stream << "}";
	return _Stream;
}



inline void _1b9176ba0_TypeCompatibilityChecker::_method_push_err(jule::Str _13927_fmt,jule::Slice<jule::Any> _13940_args) {
	(*this)._field_s->_method_push_err((*this)._field_error_token,_13927_fmt,_13940_args);
}



inline jule::Bool _1b9176ba0_TypeCompatibilityChecker::_method_check_trait(void) {
	jule::Bool _14332_ok = jule::Bool();
	if ((*this)._field_src->_method_is_nil()) {
		_14332_ok = true;
		return _14332_ok;
	}
	jule::Ref<_1b8cd2894_Trait> _14813_trt = (*this)._field_dest->_method_trt();
	jule::Bool _14917_ref = false;
	{
		if (!((jule::real((*this)._field_src->_method_ref())))) { goto _case_end_4714083504; }
		_case_begin_4714083504:;
		{
			_14917_ref=true;
			(*this)._field_src=(*this)._field_src->_method_ref()->_field_elem;
			if (jule::real((*this)._field_src->_method_strct())) {
				_14332_ok = false;
				return _14332_ok;
			}
			goto _case_begin_4714083008;
		}
		goto _match_end_4714081824;
		_case_end_4714083504:;
		if (!((jule::real((*this)._field_src->_method_strct())))) { goto _case_end_4714083008; }
		_case_begin_4714083008:;
		{
			jule::Ref<_1d21c0b59_StructIns> _16017_s = (*this)._field_src->_method_strct();
			if ((!(_16017_s->_field_decl->_method_is_implements(_14813_trt)))) {
				_14332_ok = false;
				return _14332_ok;
			}
			if (_1b9176ba0_trait_has_reference_receiver(_14813_trt) && (!(_14917_ref))) {
				(*this)._method_push_err(jule::Str("trait has reference receiver parameter used method, cannot assign non-reference instance", 88),jule::Slice<jule::Any>({}));
				_14332_ok = false;
				return _14332_ok;
			}
			_14332_ok = true;
			return _14332_ok;
		}
		goto _match_end_4714081824;
		_case_end_4714083008:;
		if (!((jule::real((*this)._field_src->_method_trt())))) { goto _case_end_4714083120; }
		_case_begin_4714083120:;
		{
			_14332_ok = _14813_trt == (*this)._field_src->_method_trt();
			return _14332_ok;
		}
		goto _match_end_4714081824;
		_case_end_4714083120:;
		_case_begin_4714081952:;
		{
			_14332_ok = false;
			return _14332_ok;
		}
		goto _match_end_4714081824;
		_case_end_4714081952:;
		_match_end_4714081824:;
	}
}



inline jule::Bool _1b9176ba0_TypeCompatibilityChecker::_method_check_ref(void) {
	jule::Bool _18030_ok = jule::Bool();
	if ((*this)._field_dest->_method_to_str() == (*this)._field_src->_method_to_str()) {
		_18030_ok = true;
		return _18030_ok;
	} else if ((!((*this)._field_deref))) {
		_18030_ok = false;
		return _18030_ok;
	} else if ((!(jule::real((*this)._field_src->_method_ref())))) {
		(*this)._field_dest=(*this)._field_dest->_method_ref()->_field_elem;
		_18030_ok = (*this)._method_check();
		return _18030_ok;
	}
	(*this)._field_src=(*this)._field_src->_method_ref()->_field_elem;
	_18030_ok = (*this)._method_check();
	return _18030_ok;
}



inline jule::Bool _1b9176ba0_TypeCompatibilityChecker::_method_check_ptr(void) {
	jule::Bool _19430_ok = jule::Bool();
	if ((*this)._field_src->_method_is_nil()) {
		_19430_ok = true;
		return _19430_ok;
	}
	jule::Ref<_1b951b088_Ptr> _19917_src = (*this)._field_src->_method_ptr();
	if ((!(jule::real(_19917_src)))) {
		_19430_ok = false;
		return _19430_ok;
	}
	jule::Ref<_1b951b088_Ptr> _20417_dest = (*this)._field_dest->_method_ptr();
	if (_20417_dest->_method_is_unsafe()) {
		_19430_ok = true;
		return _19430_ok;
	}
	_1b9176ba0_TypeCompatibilityChecker _21017_sub = _1b9176ba0_TypeCompatibilityChecker((*this)._field_s,_20417_dest->_field_elem,_19917_src->_field_elem,(*this)._field_error_token,true,jule::Bool(),true);
	_19430_ok = _21017_sub._method_check();
	return _19430_ok;
}



inline jule::Bool _1b9176ba0_TypeCompatibilityChecker::_method_check_slc(void) {
	jule::Bool _22130_ok = jule::Bool();
	if ((*this)._field_src->_method_is_nil()) {
		_22130_ok = true;
		return _22130_ok;
	}
	jule::Ref<_1b951b088_Slc> _22617_src = (*this)._field_src->_method_slc();
	if ((!(jule::real(_22617_src)))) {
		_22130_ok = false;
		return _22130_ok;
	}
	jule::Ref<_1b951b088_Slc> _23017_dest = (*this)._field_dest->_method_slc();
	_1b9176ba0_TypeCompatibilityChecker _23217_sub = _1b9176ba0_TypeCompatibilityChecker((*this)._field_s,_23017_dest->_field_elem,_22617_src->_field_elem,(*this)._field_error_token,true,jule::Bool(),true);
	_22130_ok = _23217_sub._method_check();
	return _22130_ok;
}



inline jule::Bool _1b9176ba0_TypeCompatibilityChecker::_method_check_arr(void) {
	jule::Bool _24330_ok = jule::Bool();
	jule::Ref<_1b951b088_Arr> _24417_src = (*this)._field_src->_method_arr();
	if ((!(jule::real(_24417_src)))) {
		_24330_ok = false;
		return _24330_ok;
	}
	jule::Ref<_1b951b088_Arr> _24817_dest = (*this)._field_dest->_method_arr();
	if (_24817_dest->_field_n != _24417_src->_field_n) {
		_24330_ok = false;
		return _24330_ok;
	}
	_1b9176ba0_TypeCompatibilityChecker _25317_sub = _1b9176ba0_TypeCompatibilityChecker((*this)._field_s,_24817_dest->_field_elem,_24417_src->_field_elem,(*this)._field_error_token,true,jule::Bool(),true);
	_24330_ok = _25317_sub._method_check();
	return _24330_ok;
}



inline jule::Bool _1b9176ba0_TypeCompatibilityChecker::_method_check_map(void) {
	jule::Bool _26430_ok = jule::Bool();
	if ((*this)._field_src->_method_is_nil()) {
		_26430_ok = true;
		return _26430_ok;
	}
	jule::Ref<_1b951b088_Map> _26917_src = (*this)._field_src->_method_map();
	if ((!(jule::real(_26917_src)))) {
		_26430_ok = false;
		return _26430_ok;
	}
	jule::Ref<_1b951b088_Map> _27417_dest = (*this)._field_dest->_method_map();
	_1b9176ba0_TypeCompatibilityChecker _27617_sub = _1b9176ba0_TypeCompatibilityChecker((*this)._field_s,_27417_dest->_field_key,_26917_src->_field_key,(*this)._field_error_token,jule::Bool(),jule::Bool(),true);
	if ((!(_27617_sub._method_check()))) {
		_26430_ok = false;
		return _26430_ok;
	}
	_27617_sub._field_src=_26917_src->_field_val;
	_27617_sub._field_dest=_27417_dest->_field_val;
	_26430_ok = _27617_sub._method_check();
	return _26430_ok;
}



inline jule::Bool _1b9176ba0_TypeCompatibilityChecker::_method_check_struct(void) {
	jule::Bool _29233_ok = jule::Bool();
	jule::Ref<_1d21c0b59_StructIns> _29317_src = (*this)._field_src->_method_strct();
	if ((!(jule::real(_29317_src)))) {
		_29233_ok = false;
		return _29233_ok;
	}
	jule::Ref<_1d21c0b59_StructIns> _29717_dest = (*this)._field_dest->_method_strct();
	{
		if (!(((_29717_dest->_field_decl).alloc != (_29317_src->_field_decl).alloc))) { goto _case_end_4714154128; }
		_case_begin_4714154128:;
		{
			_29233_ok = false;
			return _29233_ok;
		}
		goto _match_end_4714153984;
		_case_end_4714154128:;
		if (!((_29717_dest->_field_generics.len() == 0LL))) { goto _case_end_4714154240; }
		_case_begin_4714154240:;
		{
			_29233_ok = true;
			return _29233_ok;
		}
		goto _match_end_4714153984;
		_case_end_4714154240:;
		_match_end_4714153984:;
	}
	{
		auto _range_expr = _29717_dest->_field_generics;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1b9176ba0_i = 0;
			jule::Ref<_1b951b088_TypeKind> _1b9176ba0_dg = *_range_begin;
			_iter_begin_4714157504:;
			{
				jule::Ref<_1b951b088_TypeKind> _30721_sg = _29317_src->_field_generics[static_cast<jule::Int>(_1b9176ba0_i)];
				_1b9176ba0_TypeCompatibilityChecker _30821_sub = _1b9176ba0_TypeCompatibilityChecker((*this)._field_s,_1b9176ba0_dg,_30721_sg,(*this)._field_error_token,jule::Bool(),jule::Bool(),jule::Bool());
				if ((!(_30821_sub._method_check()))) {
					_29233_ok = false;
					return _29233_ok;
				}
			}
			_iter_next_4714157504:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1b9176ba0_i; _1b9176ba0_dg = *_range_begin; goto _iter_begin_4714157504; }
			_iter_end_4714157504:;
		}
	}
	_29233_ok = true;
	return _29233_ok;
}



inline jule::Bool _1b9176ba0_TypeCompatibilityChecker::_method_check_fn(void) {
	jule::Bool _32129_ok = jule::Bool();
	if ((*this)._field_src->_method_is_nil()) {
		_32129_ok = true;
		return _32129_ok;
	}
	jule::Ref<_1d21d97ee_FnIns> _32617_src = (*this)._field_src->_method_fnc();
	if ((!(jule::real(_32617_src)))) {
		_32129_ok = false;
		return _32129_ok;
	}
	jule::Ref<_1d21d97ee_FnIns> _33117_dest = (*this)._field_dest->_method_fnc();
	if (jule::real(_32617_src->_field_result) != jule::real(_33117_dest->_field_result)) {
		_32129_ok = false;
		return _32129_ok;
	}
	if (_32617_src->_field_params.len() != _33117_dest->_field_params.len()) {
		_32129_ok = false;
		return _32129_ok;
	}
	{
		auto _range_expr = _32617_src->_field_params;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1b9176ba0_i = 0;
			_iter_begin_4714174880:;
			{
				jule::Ref<_1d21d97ee_ParamIns> _34021_srcp = _32617_src->_field_params[static_cast<jule::Int>(_1b9176ba0_i)];
				jule::Ref<_1d21d97ee_ParamIns> _34121_destp = _33117_dest->_field_params[static_cast<jule::Int>(_1b9176ba0_i)];
				if (jule::real(_34021_srcp) != jule::real(_34121_destp)) {
					_32129_ok = false;
					return _32129_ok;
				}
				if (_34021_srcp->_field_decl->_field_reference != _34121_destp->_field_decl->_field_reference) {
					_32129_ok = false;
					return _32129_ok;
				}
				_1b9176ba0_TypeCompatibilityChecker _35021_sub = _1b9176ba0_TypeCompatibilityChecker((*this)._field_s,_34121_destp->_field_kind,_34021_srcp->_field_kind,(*this)._field_error_token,jule::Bool(),jule::Bool(),jule::Bool());
				if ((!(_35021_sub._method_check()))) {
					_32129_ok = false;
					return _32129_ok;
				}
			}
			_iter_next_4714174880:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1b9176ba0_i; goto _iter_begin_4714174880; }
			_iter_end_4714174880:;
		}
	}
	if (jule::real(_32617_src->_field_result)) {
		_1b9176ba0_TypeCompatibilityChecker _36221_sub = _1b9176ba0_TypeCompatibilityChecker((*this)._field_s,_33117_dest->_field_result,_32617_src->_field_result,(*this)._field_error_token,jule::Bool(),jule::Bool(),jule::Bool());
		if ((!(_36221_sub._method_check()))) {
			_32129_ok = false;
			return _32129_ok;
		}
	}
	_32129_ok = true;
	return _32129_ok;
}



inline jule::Bool _1b9176ba0_TypeCompatibilityChecker::_method_check_enum(void) {
	jule::Bool _37631_ok = jule::Bool();
	jule::Ref<_1b8dae520_Enum> _37713_r = (*this)._field_src->_method_enm();
	if ((!(jule::real(_37713_r)))) {
		_37631_ok = false;
		return _37631_ok;
	}
	_37631_ok = ((*this)._field_dest->_method_enm()).alloc == (_37713_r).alloc;
	return _37631_ok;
}



inline jule::Bool _1b9176ba0_TypeCompatibilityChecker::_method_check_prim(void) {
	jule::Bool _38431_ok = jule::Bool();
	jule::Ref<_1b951b088_Prim> _38513_dest = (*this)._field_dest->_method_prim();
	jule::Ref<_1b951b088_Prim> _38617_src = (*this)._field_src->_method_prim();
	if ((!(jule::real(_38617_src)))) {
		_38431_ok = _38513_dest->_method_is_any();
		return _38431_ok;
	}
	if (_38513_dest->_method_is_any()) {
		_38431_ok = (!((*this)._field_ignore_any)) || _38617_src->_method_is_any();
		return _38431_ok;
	}
	_38431_ok = _1b9e404b2_types_are_compatible(_38513_dest->_method_to_str(),_38617_src->_method_to_str());
	return _38431_ok;
}



inline jule::Bool _1b9176ba0_TypeCompatibilityChecker::_method_check_cpp_linked(void) {
	jule::Bool _39637_ok = jule::Bool();
	_39637_ok = (*this)._field_src->_method_cpp_linked() && ((*this)._field_dest->_field_cpp_ident == (*this)._field_src->_field_cpp_ident);
	return _39637_ok;
}



inline jule::Bool _1b9176ba0_TypeCompatibilityChecker::_method_check(void) {
	jule::Bool _40126_ok = jule::Bool();
	if ((!(jule::real((*this)._field_src)))) {
		_40126_ok = false;
		return _40126_ok;
	}
	if ((*this)._field_dest->_field_variadic != (*this)._field_src->_field_variadic) {
		_40126_ok = false;
		return _40126_ok;
	} else if ((*this)._field_dest->_field_variadic) {
		(*this)._field_ignore_any=true;
	}
	if (jule::real((*this)._field_dest->_method_ref())) {
		_40126_ok = (*this)._method_check_ref();
		return _40126_ok;
	}
	if ((!((*this)._field_sub_check)) && jule::real((*this)._field_src->_method_ref())) {
		(*this)._field_src=(*this)._field_src->_method_ref()->_field_elem;
	}
	{
		if (!(((*this)._field_dest->_method_cpp_linked()))) { goto _case_end_4714220816; }
		_case_begin_4714220816:;
		{
			_40126_ok = (*this)._method_check_cpp_linked();
			return _40126_ok;
		}
		goto _match_end_4714219408;
		_case_end_4714220816:;
		if (!((jule::real((*this)._field_dest->_method_prim())))) { goto _case_end_4714220384; }
		_case_begin_4714220384:;
		{
			_40126_ok = (*this)._method_check_prim();
			return _40126_ok;
		}
		goto _match_end_4714219408;
		_case_end_4714220384:;
		if (!((jule::real((*this)._field_dest->_method_trt())))) { goto _case_end_4714220496; }
		_case_begin_4714220496:;
		{
			_40126_ok = (*this)._method_check_trait();
			return _40126_ok;
		}
		goto _match_end_4714219408;
		_case_end_4714220496:;
		if (!((jule::real((*this)._field_dest->_method_ptr())))) { goto _case_end_4714220608; }
		_case_begin_4714220608:;
		{
			_40126_ok = (*this)._method_check_ptr();
			return _40126_ok;
		}
		goto _match_end_4714219408;
		_case_end_4714220608:;
		if (!((jule::real((*this)._field_dest->_method_slc())))) { goto _case_end_4714219712; }
		_case_begin_4714219712:;
		{
			_40126_ok = (*this)._method_check_slc();
			return _40126_ok;
		}
		goto _match_end_4714219408;
		_case_end_4714219712:;
		if (!((jule::real((*this)._field_dest->_method_arr())))) { goto _case_end_4714219824; }
		_case_begin_4714219824:;
		{
			_40126_ok = (*this)._method_check_arr();
			return _40126_ok;
		}
		goto _match_end_4714219408;
		_case_end_4714219824:;
		if (!((jule::real((*this)._field_dest->_method_map())))) { goto _case_end_4714219936; }
		_case_begin_4714219936:;
		{
			_40126_ok = (*this)._method_check_map();
			return _40126_ok;
		}
		goto _match_end_4714219408;
		_case_end_4714219936:;
		if (!((jule::real((*this)._field_dest->_method_enm())))) { goto _case_end_4714221072; }
		_case_begin_4714221072:;
		{
			_40126_ok = (*this)._method_check_enum();
			return _40126_ok;
		}
		goto _match_end_4714219408;
		_case_end_4714221072:;
		if (!((jule::real((*this)._field_dest->_method_strct())))) { goto _case_end_4714221184; }
		_case_begin_4714221184:;
		{
			_40126_ok = (*this)._method_check_struct();
			return _40126_ok;
		}
		goto _match_end_4714219408;
		_case_end_4714221184:;
		if (!((jule::real((*this)._field_dest->_method_fnc())))) { goto _case_end_4714221296; }
		_case_begin_4714221296:;
		{
			_40126_ok = (*this)._method_check_fn();
			return _40126_ok;
		}
		goto _match_end_4714219408;
		_case_end_4714221296:;
		if (!(((*this)._field_dest->_method_nil_compatible()))) { goto _case_end_4714221408; }
		_case_begin_4714221408:;
		{
			_40126_ok = (*this)._field_src->_method_is_nil();
			return _40126_ok;
		}
		goto _match_end_4714219408;
		_case_end_4714221408:;
		_case_begin_4714214320:;
		{
			_40126_ok = false;
			return _40126_ok;
		}
		goto _match_end_4714219408;
		_case_end_4714214320:;
		_match_end_4714219408:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1b9176ba0_TypeCompatibilityChecker &_Src) {
	_Stream << "TypeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "ignore_any:" << _Src._field_ignore_any << ", ";
	_Stream << "deref:" << _Src._field_deref << ", ";
	_Stream << "sub_check:" << _Src._field_sub_check;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d13e19b3_is_surrogate(jule::I32 _6021_r) {
	return (55296LL <= _6021_r) && (_6021_r < 57344LL);
}



inline jule::I32 _1d13e19b3_decode_rune(jule::I32 _6720_r1,jule::I32 _6730_r2) {
	if ((((55296LL <= _6720_r1) && (_6720_r1 < 56320LL)) && (56320LL <= _6730_r2)) && (_6730_r2 < 57344LL)) {
		return static_cast<jule::I32>((((_6720_r1 - 55296LL) << 10LL) | (_6730_r2 - 56320LL)) + 65536LL);
	}
	return 65533LL;
}



inline std::tuple<jule::I32,jule::I32> _1d13e19b3_encode_rune(jule::I32 _7724_r) {
	jule::I32 _7735_r1 = jule::I32();
	jule::I32 _7745_r2 = jule::I32();
	if ((_7724_r < 65536LL) || (_7724_r > 1114111LL)) {
		_7735_r1 = 65533LL;
		_7745_r2 = 65533LL;
		return std::make_tuple(_7735_r1,_7745_r2);
	}
	_7724_r-=65536LL;
	_7735_r1 = static_cast<jule::I32>(55296LL + ((_7724_r >> 10LL) & 1023LL));
	_7745_r2 = static_cast<jule::I32>(56320LL + (_7724_r & 1023LL));
	return std::make_tuple(_7735_r1,_7745_r2);
}



inline jule::Slice<jule::U16> _1d13e19b3_encode(jule::Slice<jule::I32> _8615_s) {
	jule::I64 _8713_n = _8615_s.len();
	{
		auto _range_expr = _8615_s;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::I32 _1d13e19b3_v = *_range_begin;
			_iter_begin_4547876496:;
			{
				if (_1d13e19b3_v >= 65536LL) {
					(_8713_n)++;
				}
			}
			_iter_next_4547876496:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d13e19b3_v = *_range_begin; goto _iter_begin_4547876496; }
			_iter_end_4547876496:;
		}
	}
	jule::Slice<jule::U16> _9413_a = jule::Slice<jule::U16>::alloc(static_cast<jule::Int>(_8713_n));
	_8713_n=0LL;
	{
		auto _range_expr = _8615_s;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::I32 _1d13e19b3_v = *_range_begin;
			_iter_begin_4549158272:;
			{
				{
					if (!(((0LL <= _1d13e19b3_v) && (_1d13e19b3_v < 55296LL)) || ((57344LL <= _1d13e19b3_v) && (_1d13e19b3_v < 65536LL)))) { goto _case_end_4557934448; }
					_case_begin_4557934448:;
					{
						_9413_a[static_cast<jule::Int>(_8713_n)]=static_cast<jule::U16>(_1d13e19b3_v);
						(_8713_n)++;
					}
					goto _match_end_4557929904;
					_case_end_4557934448:;
					if (!(((65536LL <= _1d13e19b3_v) && (_1d13e19b3_v <= 1114111LL)))) { goto _case_end_4558588288; }
					_case_begin_4558588288:;
					{
						jule::I32 _10418_r1;
						jule::I32 _10422_r2;
						std::tie(_10418_r1,_10422_r2) = _1d13e19b3_encode_rune(_1d13e19b3_v);
						_9413_a[static_cast<jule::Int>(_8713_n)]=static_cast<jule::U16>(_10418_r1);
						_9413_a[static_cast<jule::Int>(_8713_n + 1LL)]=static_cast<jule::U16>(_10422_r2);
						_8713_n+=2LL;
					}
					goto _match_end_4557929904;
					_case_end_4558588288:;
					_case_begin_4557987536:;
					{
						_9413_a[static_cast<jule::Int>(_8713_n)]=static_cast<jule::U16>(65533LLU);
						(_8713_n)++;
					}
					goto _match_end_4557929904;
					_case_end_4557987536:;
					_match_end_4557929904:;
				}
			}
			_iter_next_4549158272:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d13e19b3_v = *_range_begin; goto _iter_begin_4549158272; }
			_iter_end_4549158272:;
		}
	}
	return _9413_a.slice(0LL,static_cast<jule::Int>(_8713_n));
}



inline jule::Slice<jule::I32> _1d13e19b3_decode(jule::Slice<jule::U16> _11815_s) {
	jule::Slice<jule::I32> _11913_a = jule::Slice<jule::I32>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_11815_s.len())));
	jule::Int _12013_n = 0LL;
	jule::Int _12113_i = 0LL;
	_iter_begin_4545508944:;
	if (!(_12113_i < _11815_s.len())) { goto _iter_end_4545508944; }
	{
		jule::U16 _12313_r = _11815_s[static_cast<jule::Int>(_12113_i)];
		{
			if (!((_12313_r < 55296LL) || (57344LL <= _12313_r))) { goto _case_end_4547788848; }
			_case_begin_4547788848:;
			{
				_11913_a[static_cast<jule::Int>(_12013_n)]=static_cast<jule::I32>(_12313_r);
			}
			goto _match_end_4556990672;
			_case_end_4547788848:;
			if (!((((((55296LL <= _12313_r) && (_12313_r < 56320LL)) && ((_12113_i + 1LL) < _11815_s.len())) && (56320LL <= _11815_s[static_cast<jule::Int>(_12113_i + 1LL)])) && (_11815_s[static_cast<jule::Int>(_12113_i + 1LL)] < 57344LL)))) { goto _case_end_4557007408; }
			_case_begin_4557007408:;
			{
				_11913_a[static_cast<jule::Int>(_12013_n)]=static_cast<jule::I32>(_1d13e19b3_decode_rune(static_cast<jule::I32>(_12313_r),static_cast<jule::I32>(_11815_s[static_cast<jule::Int>(_12113_i + 1LL)])));
				(_12113_i)++;
			}
			goto _match_end_4556990672;
			_case_end_4557007408:;
			_case_begin_4556991152:;
			{
				_11913_a[static_cast<jule::Int>(_12013_n)]=65533LL;
			}
			goto _match_end_4556990672;
			_case_end_4556991152:;
			_match_end_4556990672:;
		}
		(_12013_n)++;
	}
	_iter_next_4545508944:;
	(_12113_i)++;
	goto _iter_begin_4545508944;
	_iter_end_4545508944:;
	return _11913_a.slice(0LL,static_cast<jule::Int>(_12013_n));
}



inline jule::Slice<jule::U16> _1d13e19b3_append_rune(jule::Slice<jule::U16> _14524_a,jule::I32 _14534_r) {
	{
		if (!(((0LL <= _14534_r) && (_14534_r < 55296LL)) || ((57344LL <= _14534_r) && (_14534_r < 65536LL)))) { goto _case_end_4558120384; }
		_case_begin_4558120384:;
		{
			return jule::append(_14524_a,jule::Slice<jule::U16>({static_cast<jule::U16>(_14534_r)}));
		}
		goto _match_end_4558104224;
		_case_end_4558120384:;
		if (!(((65536LL <= _14534_r) && (_14534_r <= 1114111LL)))) { goto _case_end_4558572912; }
		_case_begin_4558572912:;
		{
			jule::I32 _15214_r1;
			jule::I32 _15218_r2;
			std::tie(_15214_r1,_15218_r2) = _1d13e19b3_encode_rune(_14534_r);
			return jule::append(_14524_a,jule::Slice<jule::U16>({static_cast<jule::U16>(_15214_r1),static_cast<jule::U16>(_15218_r2)}));
		}
		goto _match_end_4558104224;
		_case_end_4558572912:;
		_match_end_4558104224:;
	}
	return jule::append(_14524_a,jule::Slice<jule::U16>({65533LLU}));
}



inline void* _1d078495b_malloc(jule::Uint _2215_size) {
	return malloc(_2215_size);
}



inline void* _1d078495b_calloc(jule::Uint _2915_size,jule::Uint _2927_n) {
	return calloc(_2915_size,_2927_n);
}



inline void* _1d078495b_realloc(void* _3727_ptr,jule::Uint _3741_size) {
	return realloc(_3727_ptr,_3741_size);
}



inline void _1d078495b_free(void* _4524_ptr) {
	free(_4524_ptr);
}























inline jule::Str _1d07849e4_type_id(jule::Any _11316_a) {
	if (_11316_a == nullptr) {
		return jule::Str("", 0);
	}
	return __jule_type_id_of_any(_11316_a);
}



inline jule::Slice<jule::U16> _1d07854c8_utf16_from_str(jule::Str _1523_s) {
	
	jule::Slice<jule::I32> _219_runes = static_cast<jule::Slice<jule::I32>>(_1523_s);
	jule::Slice<jule::U16> _2213_buff = jule::Slice<jule::U16>::alloc(0LL,static_cast<jule::Int>(static_cast<jule::I64>(_219_runes.len())));
	{
		auto _range_expr = _219_runes;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::I32 _1d07854c8_r = *_range_begin;
			_iter_begin_4558248352:;
			{
				if (_1d07854c8_r == 0LL) {
					goto _iter_end_4558248352;
				}
				_2213_buff=_1d13e19b3_append_rune(_2213_buff,_1d07854c8_r);
			}
			_iter_next_4558248352:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d07854c8_r = *_range_begin; goto _iter_begin_4558248352; }
			_iter_end_4558248352:;
		}
	}
	return _1d13e19b3_append_rune(_2213_buff,0LL);
}



inline jule::Str _1d07854c8_utf16_to_str(jule::Slice<jule::U16> _3521_s) {
	if (_3521_s == nullptr) {
		return jule::Str("", 0);
	}
	jule::Slice<jule::U16> _3913_code_page = (*((&(_3521_s))));
	{
		auto _range_expr = _3521_s;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1d07854c8_i = 0;
			jule::U16 _1d07854c8_v = *_range_begin;
			_iter_begin_4553998368:;
			{
				if (_1d07854c8_v == 0LL) {
					_3913_code_page=_3913_code_page.slice(0LL,static_cast<jule::Int>(_1d07854c8_i));
					goto _iter_end_4553998368;
				}
			}
			_iter_next_4553998368:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1d07854c8_i; _1d07854c8_v = *_range_begin; goto _iter_begin_4553998368; }
			_iter_end_4553998368:;
		}
	}
	return static_cast<jule::Str>(_1d13e19b3_decode(_3913_code_page));
}



inline jule::Str _1d07854c8_u16_ptr_to_str(jule::U16* _5130_s) {
	if (_5130_s == nullptr) {
		return jule::Str("", 0);
	}
	jule::Slice<jule::U16> _5613_code_page = nullptr;
	jule::Int _5713_i = 0LL;
	_iter_begin_4557542288:;
	{
		jule::U16 _5913_r = _5130_s[static_cast<jule::Int>(_5713_i)];
		if (_5913_r == 0LL) {
			return static_cast<jule::Str>(_1d13e19b3_decode(_5613_code_page));
		}
		_5613_code_page=jule::append(_5613_code_page,jule::Slice<jule::U16>({_5913_r}));
	}
	_iter_next_4557542288:;
	(_5713_i)++;
	goto _iter_begin_4557542288;
	_iter_end_4557542288:;
	return jule::Str("", 0);
}



inline jule::Str _1d07854c8_byte_ptr_to_str(jule::U8* _7031_s) {
	if (_7031_s == nullptr) {
		return jule::Str("", 0);
	}
	return __jule_str_from_byte_ptr(_7031_s);
}



inline jule::Int _1d13c2598_puts(jule::Str _913_s) {
	return puts(((char*)((&(_913_s[0LL])))));
}



inline jule::Int _1d0707505_get_last_errno(void) {
	return errno;
}



inline jule::Int _1d071ec7b_stat(jule::U8* _4620_path,struct stat* _4637_stat) {
	return static_cast<jule::Int>(__jule_stat(((char*)(_4620_path)),_4637_stat));
}



inline jule::Int _1d071ec7b_open(jule::U8* _5120_path,jule::Int _5133_flag,jule::Int _5144_mode) {
	return static_cast<jule::Int>(open(((char*)(_5120_path)),_5133_flag,_5144_mode));
}



inline jule::U8* _1d071ec7b_getcwd(jule::U8* _5722_buff,jule::Uint _5735_bufflen) {
	return ((jule::U8*)(getcwd(((char*)(_5722_buff)),_5735_bufflen)));
}



inline DIR* _1d071ec7b_opendir(jule::U8* _6223_path) {
	return opendir(((char*)(_6223_path)));
}



inline struct dirent* _1d071ec7b_readdir(DIR* _6527_dir) {
	return readdir(_6527_dir);
}



inline jule::Int _1d071ec7b_closedir(DIR* _6828_dir) {
	return static_cast<jule::Int>(closedir(_6828_dir));
}



inline jule::Int _1d071ec7b_chdir(jule::U8* _7121_path) {
	return static_cast<jule::Int>(chdir(((char*)(_7121_path))));
}



inline jule::Int _1d071ec7b_remove(jule::U8* _7422_path) {
	return static_cast<jule::Int>(remove(((char*)(_7422_path))));
}



inline jule::Int _1d071ec7b_mkdir(jule::U8* _7721_path,jule::Int _7734_mode) {
	return static_cast<jule::Int>(mkdir(((char*)(_7721_path)),_7734_mode));
}



inline jule::Int _1d071ec7b_rmdir(jule::U8* _8221_path) {
	return static_cast<jule::Int>(rmdir(((char*)(_8221_path))));
}



inline jule::Int _1d071ec7b_unlink(jule::U8* _8522_path) {
	return static_cast<jule::Int>(unlink(((char*)(_8522_path))));
}



inline jule::I64 _1d073d085_seek(jule::Int _2613_handle,jule::I64 _2626_offset,jule::Int _2639_origin) {
	return static_cast<jule::I64>(lseek(_2613_handle,_2626_offset,_2639_origin));
}



inline jule::Int _1d073d085_read(jule::Int _3120_handle,void* _3137_buff,jule::Uint _3152_n) {
	return static_cast<jule::Int>(read(_3120_handle,_3137_buff,_3152_n));
}



inline jule::Int _1d073d085_close(jule::Int _3614_handle) {
	return static_cast<jule::Int>(close(_3614_handle));
}



inline jule::Int _1d073d085_write(jule::Int _3921_handle,void* _3934_buff,jule::Uint _3949_n) {
	return static_cast<jule::Int>(write(_3921_handle,_3934_buff,_3949_n));
}



inline void _1d073d085_exit(jule::Int _4413_code) {
	exit(_4413_code);
}



inline jule::Int _1d0701521_get_last_os_error(void) {
	jule::Int _319_err = _1d0707505_get_last_errno();
	{
		auto _match_expr{ _319_err };
		if (!((13LL) == _match_expr)) { goto _case_end_4559572016; }
		_case_begin_4559572016:;
		{
			return 1LLU;
		}
		goto _match_end_4559570512;
		_case_end_4559572016:;
		if (!((5LL) == _match_expr)) { goto _case_end_4559572128; }
		_case_begin_4559572128:;
		{
			return 2LLU;
		}
		goto _match_end_4559570512;
		_case_end_4559572128:;
		if (!((62LL) == _match_expr)) { goto _case_end_4559572240; }
		_case_begin_4559572240:;
		{
			return 3LLU;
		}
		goto _match_end_4559570512;
		_case_end_4559572240:;
		if (!((63LL) == _match_expr)) { goto _case_end_4559571296; }
		_case_begin_4559571296:;
		{
			return 4LLU;
		}
		goto _match_end_4559570512;
		_case_end_4559571296:;
		if (!((2LL) == _match_expr)) { goto _case_end_4559571408; }
		_case_begin_4559571408:;
		{
			return 5LLU;
		}
		goto _match_end_4559570512;
		_case_end_4559571408:;
		if (!((20LL) == _match_expr)) { goto _case_end_4559571520; }
		_case_begin_4559571520:;
		{
			return 6LLU;
		}
		goto _match_end_4559570512;
		_case_end_4559571520:;
		if (!((12LL) == _match_expr)) { goto _case_end_4559572624; }
		_case_begin_4559572624:;
		{
			return 7LLU;
		}
		goto _match_end_4559570512;
		_case_end_4559572624:;
		_case_begin_4559570848:;
		{
			return 0LLU;
		}
		goto _match_end_4559570512;
		_case_end_4559570848:;
		_match_end_4559570512:;
	}
}



inline std::tuple<jule::Str,jule::Int> _1d070a5e6_working_dir(void) {
	jule::Str _3410_p;
	jule::Int _3413_err;
	std::tie(_3410_p,_3413_err) = _1d0702225___getwd();
	return std::make_tuple(_3410_p,_3413_err);
}



inline jule::Int _1d070a5e6_set_working_dir(jule::Str _4324_path) {
	if (_4324_path == jule::Str("", 0)) {
		return 6LLU;
	}
	return _1d0702225___chdir(_4324_path);
}



inline void _1d070a5e6_init(void) {
	{
		(*((&(_1d070a5e6_ARGS))))=jule::command_line_args;
		(*((&(_1d070a5e6_ENV))))=jule::environment_variables;
	}
}



inline std::tuple<jule::Str,jule::Int> _1d0702225___getwd(void) {
	jule::U8* _1113_buff = _1d071ec7b_getcwd(nullptr,0LLU);
	if (_1113_buff == nullptr) {
		return std::make_tuple(jule::Str("", 0),_1d0701521_get_last_os_error());
	}
	jule::Str _159_pwd = _1d07854c8_byte_ptr_to_str(_1113_buff);
	{
		_1d078495b_free(_1113_buff);
	}
	return std::make_tuple(_159_pwd,0LLU);
}



inline jule::Int _1d0702225___chdir(jule::Str _2212_path) {
	if (_1d071ec7b_chdir((&(_2212_path[0LL]))) == 0LL) {
		return 0LLU;
	}
	return _1d0701521_get_last_os_error();
}



inline jule::Str _1d0680a33_clean(jule::Str _10718_path) {
	jule::Str _1089_original_path = _10718_path;
	jule::Int _1099_vol_len = _1d0699e7b_volume_name_len(_10718_path);
	_10718_path=_10718_path.slice(static_cast<jule::Int>(_1099_vol_len));
	if (_10718_path == jule::Str("", 0)) {
		if (((_1099_vol_len > 1LL) && _1d0699e7b_is_path_sep(_1089_original_path[0LL])) && _1d0699e7b_is_path_sep(_1089_original_path[1LL])) {
			return _1d0680a33_from_slash(_1089_original_path);
		}
		return _1089_original_path + jule::Str(".", 1);
	}
	jule::Bool _1189_rooted = _1d0699e7b_is_path_sep(_10718_path[0LL]);
	jule::I64 _1259_n = _10718_path.len();
	_1d0680a33_LazyBuff _12613_out = _1d0680a33_LazyBuff(_10718_path,jule::Slice<jule::U8>(),jule::Int(),_1089_original_path,_1099_vol_len);
	jule::Int _13114_r = 0LL;
	jule::Int _13121_dotdot = 0LL;
	std::tie(_13114_r,_13121_dotdot) = std::make_tuple(0LL,0LL);
	if (_1189_rooted) {
		_12613_out._method_append(47LLU);
		std::tie(_13114_r,_13121_dotdot) = std::make_tuple(1LL,1LL);
	}
	_iter_begin_4559639248:;
	if (!(_13114_r < _1259_n)) { goto _iter_end_4559639248; }
	{
		{
			if (!((_1d0699e7b_is_path_sep(_10718_path[static_cast<jule::Int>(_13114_r)])))) { goto _case_end_4559656800; }
			_case_begin_4559656800:;
			{
				(_13114_r)++;
			}
			goto _match_end_4559640352;
			_case_end_4559656800:;
			if (!(((_10718_path[static_cast<jule::Int>(_13114_r)] == '.') && (((_13114_r + 1LL) == _1259_n) || _1d0699e7b_is_path_sep(_10718_path[static_cast<jule::Int>(_13114_r + 1LL)]))))) { goto _case_end_4559653712; }
			_case_begin_4559653712:;
			{
				(_13114_r)++;
			}
			goto _match_end_4559640352;
			_case_end_4559653712:;
			if (!((((_10718_path[static_cast<jule::Int>(_13114_r)] == '.') && (_10718_path[static_cast<jule::Int>(_13114_r + 1LL)] == '.')) && (((_13114_r + 2LL) == _1259_n) || _1d0699e7b_is_path_sep(_10718_path[static_cast<jule::Int>(_13114_r + 2LL)]))))) { goto _case_end_4559640848; }
			_case_begin_4559640848:;
			{
				_13114_r+=2LL;
				{
					if (!((_12613_out._field_w > _13121_dotdot))) { goto _case_end_4559665408; }
					_case_begin_4559665408:;
					{
						(_12613_out._field_w)--;
						_iter_begin_4559669120:;
						if (!((_12613_out._field_w > _13121_dotdot) && (!(_1d0699e7b_is_path_sep(static_cast<jule::U8>(_12613_out._method_index(_12613_out._field_w))))))) { goto _iter_end_4559669120; }
						{
							(_12613_out._field_w)--;
						}
						_iter_next_4559669120:;
						goto _iter_begin_4559669120;
						_iter_end_4559669120:;
					}
					goto _match_end_4559665312;
					_case_end_4559665408:;
					if (!(((!(_1189_rooted))))) { goto _case_end_4559667856; }
					_case_begin_4559667856:;
					{
						if (_12613_out._field_w > 0LL) {
							_12613_out._method_append(47LLU);
						}
						_12613_out._method_append('.');
						_12613_out._method_append('.');
						_13121_dotdot=_12613_out._field_w;
					}
					goto _match_end_4559665312;
					_case_end_4559667856:;
					_match_end_4559665312:;
				}
			}
			goto _match_end_4559640352;
			_case_end_4559640848:;
			_case_begin_4559640544:;
			{
				if ((_1189_rooted && (_12613_out._field_w != 1LL)) || ((!(_1189_rooted)) && (_12613_out._field_w != 0LL))) {
					_12613_out._method_append(47LLU);
				}
				if (((false && (_12613_out._field_w == 0LL)) && (_12613_out._field_vol_len == 0LL)) && (_13114_r != 0LL)) {
					jule::Int _17425_i = _13114_r;
					_iter_begin_4559645792:;
					if (!((_17425_i < _1259_n) && (!(_1d0699e7b_is_path_sep(_10718_path[static_cast<jule::Int>(_17425_i)]))))) { goto _iter_end_4559645792; }
					{
						if (_10718_path[static_cast<jule::Int>(_17425_i)] == ':') {
							_12613_out._method_append('.');
							_12613_out._method_append(47LLU);
							goto _iter_end_4559645792;
						}
					}
					_iter_next_4559645792:;
					(_17425_i)++;
					goto _iter_begin_4559645792;
					_iter_end_4559645792:;
				}
				_iter_begin_4559651984:;
				if (!((_13114_r < _1259_n) && (!(_1d0699e7b_is_path_sep(_10718_path[static_cast<jule::Int>(_13114_r)]))))) { goto _iter_end_4559651984; }
				{
					_12613_out._method_append(_10718_path[static_cast<jule::Int>(_13114_r)]);
				}
				_iter_next_4559651984:;
				(_13114_r)++;
				goto _iter_begin_4559651984;
				_iter_end_4559651984:;
			}
			goto _match_end_4559640352;
			_case_end_4559640544:;
			_match_end_4559640352:;
		}
	}
	_iter_next_4559639248:;
	goto _iter_begin_4559639248;
	_iter_end_4559639248:;
	if (_12613_out._field_w == 0LL) {
		_12613_out._method_append('.');
	}
	return _1d0680a33_from_slash(_12613_out._method_string());
}



inline jule::Str _1d0680a33_to_slash(jule::Str _20017_path) {
	if (true) {
		return _20017_path;
	}
	return _20017_path.replace(static_cast<jule::Str>(47LL),jule::Str("/", 1),-1LL);
}



inline jule::Str _1d0680a33_from_slash(jule::Str _21019_path) {
	if (true) {
		return _21019_path;
	}
	return _21019_path.replace(jule::Str("/", 1),static_cast<jule::Str>(47LL),-1LL);
}



inline jule::Str _1d0680a33_join(jule::Slice<jule::Str> _22413_elem) {
	return _1d0699e7b___join(_22413_elem);
}



inline jule::Str _1d0680a33_ext(jule::Str _22912_path) {
	jule::I64 _23013_i = _22912_path.len() - 1LL;
	_iter_begin_4559683184:;
	if (!((_23013_i >= 0LL) && (!(_1d0699e7b_is_path_sep(_22912_path[static_cast<jule::Int>(_23013_i)]))))) { goto _iter_end_4559683184; }
	{
		if (_22912_path[static_cast<jule::Int>(_23013_i)] == '.') {
			return _22912_path.slice(static_cast<jule::Int>(_23013_i));
		}
	}
	_iter_next_4559683184:;
	(_23013_i)--;
	goto _iter_begin_4559683184;
	_iter_end_4559683184:;
	return jule::Str("", 0);
}



inline std::tuple<jule::Str,jule::Bool> _1d0680a33_abs(jule::Str _24412_path) {
	jule::Str _24510_abs_path;
	jule::Bool _24520_ok;
	std::tie(_24510_abs_path,_24520_ok) = _1d0699e7b___abs(_24412_path);
	return std::make_tuple(_24510_abs_path,_24520_ok);
}



inline jule::Str _1d0680a33_base(jule::Str _25317_path) {
	if (_25317_path == jule::Str("", 0)) {
		return jule::Str(".", 1);
	}
	_iter_begin_4559699696:;
	if (!((_25317_path.len() > 0LL) && _1d0699e7b_is_path_sep(_25317_path[static_cast<jule::Int>(_25317_path.len() - 1LL)]))) { goto _iter_end_4559699696; }
	{
		_25317_path=_25317_path.slice(0LL,static_cast<jule::Int>(_25317_path.len() - 1LL));
	}
	_iter_next_4559699696:;
	goto _iter_begin_4559699696;
	_iter_end_4559699696:;
	_25317_path=_25317_path.slice(static_cast<jule::Int>(_1d0680a33_volume_name(_25317_path).len()));
	jule::I64 _26413_i = _25317_path.len() - 1LL;
	_iter_begin_4559698480:;
	if (!((_26413_i >= 0LL) && (!(_1d0699e7b_is_path_sep(_25317_path[static_cast<jule::Int>(_26413_i)]))))) { goto _iter_end_4559698480; }
	{
		(_26413_i)--;
	}
	_iter_next_4559698480:;
	goto _iter_begin_4559698480;
	_iter_end_4559698480:;
	if (_26413_i >= 0LL) {
		_25317_path=_25317_path.slice(static_cast<jule::Int>(_26413_i + 1LL));
	}
	if (_25317_path == jule::Str("", 0)) {
		return static_cast<jule::Str>(47LL);
	}
	return _25317_path;
}



inline jule::Str _1d0680a33_dir(jule::Str _28412_path) {
	jule::Str _2859_vol = _1d0680a33_volume_name(_28412_path);
	jule::I64 _28613_i = _28412_path.len() - 1LL;
	_iter_begin_4559711216:;
	if (!((_28613_i >= _2859_vol.len()) && (!(_1d0699e7b_is_path_sep(_28412_path[static_cast<jule::Int>(_28613_i)]))))) { goto _iter_end_4559711216; }
	{
		(_28613_i)--;
	}
	_iter_next_4559711216:;
	goto _iter_begin_4559711216;
	_iter_end_4559711216:;
	jule::Str _2909_dir = _1d0680a33_clean(_28412_path.slice(static_cast<jule::Int>(_2859_vol.len()),static_cast<jule::Int>(_28613_i + 1LL)));
	if ((_2909_dir == jule::Str(".", 1)) && (_2859_vol.len() > 2LL)) {
		return _2859_vol;
	}
	return _2859_vol + _2909_dir;
}



inline jule::Str _1d0680a33_volume_name(jule::Str _30220_path) {
	return _1d0680a33_from_slash(_30220_path.slice(0LL,static_cast<jule::Int>(_1d0699e7b_volume_name_len(_30220_path))));
}



inline jule::Bool _1d0699e7b_is_path_sep(jule::U8 _4720_c) {
	return 47LL == _4720_c;
}



inline jule::Bool _1d0699e7b_is_abs(jule::Str _5215_path) {
	return _5215_path.has_prefix(jule::Str("/", 1));
}



inline jule::Int _1d0699e7b_volume_name_len(jule::Str _5620_path) {
	return 0LL;
}



inline std::tuple<jule::Str,jule::Bool> _1d0699e7b___abs(jule::Str _5810_path) {
	jule::Bool _5828_ok = jule::Bool();
	if (_1d0699e7b_is_abs(_5810_path)) {
		_5828_ok = true;
		return std::make_tuple(_1d0680a33_clean(_5810_path),_5828_ok);
	}
	jule::Str _6210_wd;
	jule::Int _6214_err;
	std::tie(_6210_wd,_6214_err) = _1d070a5e6_working_dir();
	if (_6214_err != 0LLU) {
		_5828_ok = false;
		return std::make_tuple(jule::Str("", 0),_5828_ok);
	}
	_5828_ok = true;
	return std::make_tuple(_1d0699e7b___join(jule::Slice<jule::Str>({_6210_wd,_5810_path})),_5828_ok);
}



inline jule::Str _1d0699e7b_str_join(jule::Slice<jule::Str> _6913_elems,jule::Str _6927_sep) {
	{
		auto _match_expr{ _6913_elems.len() };
		if (!((0LL) == _match_expr)) { goto _case_end_4559736496; }
		_case_begin_4559736496:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4559735728;
		_case_end_4559736496:;
		if (!((1LL) == _match_expr)) { goto _case_end_4559736608; }
		_case_begin_4559736608:;
		{
			return _6913_elems[0LL];
		}
		goto _match_end_4559735728;
		_case_end_4559736608:;
		_match_end_4559735728:;
	}
	jule::Str _7513_s = _6913_elems[0LL];
	{
		auto _range_expr = _6913_elems.slice(1LL);
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _1d0699e7b_elem = *_range_begin;
			_iter_begin_4559740512:;
			{
				_7513_s+=_6927_sep + _1d0699e7b_elem;
			}
			_iter_next_4559740512:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d0699e7b_elem = *_range_begin; goto _iter_begin_4559740512; }
			_iter_end_4559740512:;
		}
	}
	return _7513_s;
}



inline jule::Str _1d0699e7b___join(jule::Slice<jule::Str> _8211_elem) {
	{
		auto _range_expr = _8211_elem;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1d0699e7b_i = 0;
			jule::Str _1d0699e7b_e = *_range_begin;
			_iter_begin_4559741920:;
			{
				if (_1d0699e7b_e != jule::Str("", 0)) {
					return _1d0680a33_clean(_1d0699e7b_str_join(_8211_elem.slice(static_cast<jule::Int>(_1d0699e7b_i)),static_cast<jule::Str>(47LL)));
				}
			}
			_iter_next_4559741920:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1d0699e7b_i; _1d0699e7b_e = *_range_begin; goto _iter_begin_4559741920; }
			_iter_end_4559741920:;
		}
	}
	return jule::Str("", 0);
}



inline void _1d06d0d80_exit(jule::Int _1213_code) {
	_1d073d085_exit(_1213_code);
}



inline jule::Str _1d06d0d80_executable(void) {
	return jule::executable();
}



inline jule::Bool _1d05571bd_is_std_header_path(jule::Str _2627_p) {
	return (_2627_p[0LL] == '<') && (_2627_p[static_cast<jule::Int>(_2627_p.len() - 1LL)] == '>');
}



inline jule::Bool _1d05571bd_is_valid_header_ext(jule::Str _3128_ext) {
	{
		auto _range_expr = _1d05571bd_CPP_HEADER_EXTS;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _1d05571bd_valid_ext = *_range_begin;
			_iter_begin_4559935104:;
			{
				if (_3128_ext == _1d05571bd_valid_ext) {
					return true;
				}
			}
			_iter_next_4559935104:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d05571bd_valid_ext = *_range_begin; goto _iter_begin_4559935104; }
			_iter_end_4559935104:;
		}
	}
	return false;
}



inline jule::Bool _1d05571bd_is_valid_cpp_ext(jule::Str _4225_ext) {
	{
		auto _range_expr = _1d05571bd_CPP_EXTS;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _1d05571bd_e = *_range_begin;
			_iter_begin_4559938144:;
			{
				if (_4225_ext == _1d05571bd_e) {
					return true;
				}
			}
			_iter_next_4559938144:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d05571bd_e = *_range_begin; goto _iter_begin_4559938144; }
			_iter_end_4559938144:;
		}
	}
	{
		auto _range_expr = _1d05571bd_OBJECTIVE_CPP_EXTS;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _1d05571bd_e = *_range_begin;
			_iter_begin_4559941232:;
			{
				if (_4225_ext == _1d05571bd_e) {
					return true;
				}
			}
			_iter_next_4559941232:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d05571bd_e = *_range_begin; goto _iter_begin_4559941232; }
			_iter_end_4559941232:;
		}
	}
	return false;
}



inline jule::Str _1d0557e9e_logf(jule::Str _25913_fmt,jule::Slice<jule::Any> _25926_args) {
	return _1d0557e9e_apply_fmt(_25913_fmt,_25926_args);
}



inline jule::Str _1d0557e9e_arg_to_str(jule::Any _26315_arg) {
	{
		auto _match_expr{ _26315_arg };
		if (!(_match_expr.type_is<jule::Str>())) { goto _case_end_4559945920; }
		_case_begin_4559945920:;
		{
			return _26315_arg.operator jule::Str();
		}
		goto _match_end_4559943824;
		_case_end_4559945920:;
		if (!(_match_expr.type_is<jule::U8>())) { goto _case_end_4559946032; }
		_case_begin_4559946032:;
		{
			return static_cast<jule::Str>(_26315_arg.operator jule::U8());
		}
		goto _match_end_4559943824;
		_case_end_4559946032:;
		if (!(_match_expr.type_is<jule::I32>())) { goto _case_end_4559946144; }
		_case_begin_4559946144:;
		{
			return static_cast<jule::Str>(_26315_arg.operator jule::I32());
		}
		goto _match_end_4559943824;
		_case_end_4559946144:;
		_case_begin_4559943632:;
		{
			return jule::Str("<fmt?>", 6);
		}
		goto _match_end_4559943824;
		_case_end_4559943632:;
		_match_end_4559943824:;
	}
}



inline jule::Int _1d0557e9e_find_next_fmt(jule::Str _27218_fmt) {
	{
		auto _range_expr = _27218_fmt;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1d0557e9e_i = 0;
			jule::U8 _1d0557e9e_b = *_range_begin;
			_iter_begin_4559950384:;
			{
				if (_1d0557e9e_b == '@') {
					return _1d0557e9e_i;
				}
			}
			_iter_next_4559950384:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1d0557e9e_i; _1d0557e9e_b = *_range_begin; goto _iter_begin_4559950384; }
			_iter_end_4559950384:;
		}
	}
	return -1LL;
}



inline jule::Str _1d0557e9e_apply_fmt(jule::Str _28118_fmt,jule::Slice<jule::Any> _28128_args) {
	jule::Str _28213_s = jule::Str("", 0);
	{
		auto _range_expr = _28128_args;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Any _1d0557e9e_arg = *_range_begin;
			_iter_begin_4559955392:;
			{
				jule::Int _28513_i = _1d0557e9e_find_next_fmt(_28118_fmt);
				if (_28513_i == -1LL) {
					goto _iter_end_4559955392;
				}
				_28213_s+=_28118_fmt.slice(0LL,static_cast<jule::Int>(_28513_i));
				_28213_s+=_1d0557e9e_arg_to_str(_1d0557e9e_arg);
				_28118_fmt=_28118_fmt.slice(static_cast<jule::Int>(_28513_i + 1LL));
			}
			_iter_next_4559955392:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d0557e9e_arg = *_range_begin; goto _iter_begin_4559955392; }
			_iter_end_4559955392:;
		}
	}
	_28213_s+=_28118_fmt;
	return _28213_s;
}



inline jule::Bool _1d05c05aa_is_top_directive(jule::Str _3625_directive) {
	return (_3625_directive == jule::Str("pass", 4)) || (_3625_directive == jule::Str("build", 5));
}



inline jule::Bool _1d0626eb3_is_windows(jule::Str _5119_os) {
	return _5119_os == jule::Str("windows", 7);
}



inline jule::Bool _1d0626eb3_is_darwin(jule::Str _5318_os) {
	return _5318_os == jule::Str("darwin", 6);
}



inline jule::Bool _1d0626eb3_is_linux(jule::Str _5517_os) {
	return _5517_os == jule::Str("linux", 5);
}



inline jule::Bool _1d0626eb3_is_i386(jule::Str _5716_arch) {
	return _5716_arch == jule::Str("i386", 4);
}



inline jule::Bool _1d0626eb3_is_amd64(jule::Str _5917_arch) {
	return _5917_arch == jule::Str("amd64", 5);
}



inline jule::Bool _1d0626eb3_is_arm64(jule::Str _6117_arch) {
	return _6117_arch == jule::Str("arm64", 5);
}



inline jule::Bool _1d0626eb3_is_unix(jule::Str _6316_os) {
	return _1d0626eb3_is_darwin(_6316_os) || _1d0626eb3_is_linux(_6316_os);
}



inline jule::Bool _1d0626eb3_is_32bit(jule::Str _6517_arch) {
	return _1d0626eb3_is_i386(_6517_arch);
}



inline jule::Bool _1d0626eb3_is_64bit(jule::Str _6717_arch) {
	return _1d0626eb3_is_amd64(_6717_arch) || _1d0626eb3_is_arm64(_6717_arch);
}



inline void _1d062ea48_exit_err(jule::Str _1613_msg) {
	
	jule::outln(_1613_msg);
	_1d06d0d80_exit(1LL);
}



inline void _1d062ea48_init(void) {
	jule::Str _2413_path = _1d06d0d80_executable();
	if (_2413_path == jule::Str("", 0)) {
		_1d062ea48_exit_err(jule::Str("std::jule::build: executable file cannot found", 46));
	}
	jule::Str _2910_pwd;
	jule::Int _2915_err;
	std::tie(_2910_pwd,_2915_err) = _1d070a5e6_working_dir();
	if (_2915_err != 0LLU) {
		_1d062ea48_exit_err(jule::Str("std::jule::build: working directory path cannot found", 53));
	}
	jule::Str _349_path_exec = _1d0680a33_dir(_2413_path);
	_2413_path=_1d0680a33_join(jule::Slice<jule::Str>({_349_path_exec,jule::Str("..", 2)}));
	{
		(*((&(_1d062ea48_PATH_WD))))=_2910_pwd;
		(*((&(_1d062ea48_PATH_EXEC))))=_349_path_exec;
		(*((&(_1d062ea48_PATH_STDLIB))))=_1d0680a33_join(jule::Slice<jule::Str>({_2413_path,jule::Str("std", 3)}));
		(*((&(_1d062ea48_PATH_API))))=_1d0680a33_join(jule::Slice<jule::Str>({_1d062ea48_PATH_EXEC,jule::Str("..", 2)}));
		(*((&(_1d062ea48_PATH_API))))=_1d0680a33_join(jule::Slice<jule::Str>({_1d062ea48_PATH_API,jule::Str("api", 3)}));
		(*((&(_1d062ea48_PATH_API))))=_1d0680a33_join(jule::Slice<jule::Str>({_1d062ea48_PATH_API,jule::Str("jule.hpp", 8)}));
	}
}



inline jule::Bool _1d062ec13_is_jule(jule::Str _2316_path) {
	return _1d0680a33_ext(_2316_path) == jule::Str(".jule", 5);
}



inline jule::Int _1d2038890_leading_zeros(jule::Uint _4922_x) {
	return static_cast<jule::Int>(64LLU - _1d2038890_len(_4922_x));
}



inline jule::Int _1d2038890_leading_zeros8(jule::U8 _5223_x) {
	return static_cast<jule::Int>(8LL - _1d2038890_len8(_5223_x));
}



inline jule::Int _1d2038890_leading_zeros16(jule::U16 _5524_x) {
	return static_cast<jule::Int>(16LL - _1d2038890_len16(_5524_x));
}



inline jule::Int _1d2038890_leading_zeros32(jule::U32 _5824_x) {
	return static_cast<jule::Int>(32LL - _1d2038890_len32(_5824_x));
}



inline jule::Int _1d2038890_leading_zeros64(jule::U64 _6124_x) {
	return static_cast<jule::Int>(64LL - _1d2038890_len64(_6124_x));
}



inline jule::Int _1d2038890_trailing_zeros(jule::Uint _8323_x) {
	if (false) {
		return static_cast<jule::Int>(_1d2038890_trailing_zeros32(static_cast<jule::U32>(_8323_x)));
	}
	return static_cast<jule::Int>(_1d2038890_trailing_zeros64(static_cast<jule::U64>(_8323_x)));
}



inline jule::Int _1d2038890_trailing_zeros8(jule::U8 _9124_x) {
	return static_cast<jule::Int>(jule::Str("\b\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\4\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\5\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\4\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\6\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\4\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\5\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\4\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\a\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\4\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\5\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\4\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\6\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\4\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\5\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\4\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00", 256)[static_cast<jule::Int>(_9124_x)]);
}



inline jule::Int _1d2038890_trailing_zeros16(jule::U16 _9625_x) {
	if (_9625_x == 0LL) {
		return 16LL;
	}
	return static_cast<jule::Int>(_1d2038890_DE_BRUIJN32_TAB[static_cast<jule::Int>((static_cast<jule::U32>(_9625_x & (-(_9625_x))) * 125613361LL) >> 27LL)]);
}



inline jule::Int _1d2038890_trailing_zeros32(jule::U32 _10525_x) {
	if (_10525_x == 0LL) {
		return 32LL;
	}
	return static_cast<jule::Int>(_1d2038890_DE_BRUIJN32_TAB[static_cast<jule::Int>(((_10525_x & (-(_10525_x))) * 125613361LL) >> 27LL)]);
}



inline jule::Int _1d2038890_trailing_zeros64(jule::U64 _11425_x) {
	if (_11425_x == 0LL) {
		return 64LL;
	}
	return static_cast<jule::Int>(_1d2038890_DE_BRUIJN64_TAB[static_cast<jule::Int>(((_11425_x & (-(_11425_x))) * 285870213051353865LL) >> 58LL)]);
}



inline jule::Int _1d2038890_ones_count(jule::Uint _14119_x) {
	if (false) {
		return static_cast<jule::Int>(_1d2038890_ones_count32(static_cast<jule::U32>(_14119_x)));
	}
	return static_cast<jule::Int>(_1d2038890_ones_count64(static_cast<jule::U64>(_14119_x)));
}



inline jule::Int _1d2038890_ones_count8(jule::U8 _14920_x) {
	return static_cast<jule::Int>(jule::Str("\x00\1\1\2\1\2\2\3\1\2\2\3\2\3\3\4\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\4\5\5\6\5\6\6\a\5\6\6\a\6\a\a\b", 256)[static_cast<jule::Int>(_14920_x)]);
}



inline jule::Int _1d2038890_ones_count16(jule::U16 _15421_x) {
	return static_cast<jule::Int>(jule::Str("\x00\1\1\2\1\2\2\3\1\2\2\3\2\3\3\4\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\4\5\5\6\5\6\6\a\5\6\6\a\6\a\a\b", 256)[static_cast<jule::Int>(_15421_x >> 8LL)] + jule::Str("\x00\1\1\2\1\2\2\3\1\2\2\3\2\3\3\4\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\4\5\5\6\5\6\6\a\5\6\6\a\6\a\a\b", 256)[static_cast<jule::Int>(_15421_x & 255LL)]);
}



inline jule::Int _1d2038890_ones_count32(jule::U32 _15921_x) {
	return static_cast<jule::Int>(((jule::Str("\x00\1\1\2\1\2\2\3\1\2\2\3\2\3\3\4\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\4\5\5\6\5\6\6\a\5\6\6\a\6\a\a\b", 256)[static_cast<jule::Int>(_15921_x >> 24LL)] + jule::Str("\x00\1\1\2\1\2\2\3\1\2\2\3\2\3\3\4\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\4\5\5\6\5\6\6\a\5\6\6\a\6\a\a\b", 256)[static_cast<jule::Int>((_15921_x >> 16LL) & 255LL)]) + jule::Str("\x00\1\1\2\1\2\2\3\1\2\2\3\2\3\3\4\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\4\5\5\6\5\6\6\a\5\6\6\a\6\a\a\b", 256)[static_cast<jule::Int>((_15921_x >> 8LL) & 255LL)]) + jule::Str("\x00\1\1\2\1\2\2\3\1\2\2\3\2\3\3\4\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\4\5\5\6\5\6\6\a\5\6\6\a\6\a\a\b", 256)[static_cast<jule::Int>(_15921_x & 255LL)]);
}



inline jule::Int _1d2038890_ones_count64(jule::U64 _16425_x) {
	
	_16425_x=static_cast<jule::U64>(((_16425_x >> 1LL) & 6148914691236517205LL) + (_16425_x & 6148914691236517205LL));
	_16425_x=static_cast<jule::U64>(((_16425_x >> 2LL) & 3689348814741910323LL) + (_16425_x & 3689348814741910323LL));
	_16425_x=static_cast<jule::U64>(((_16425_x >> 4LL) + _16425_x) & 1085102592571150095LL);
	_16425_x+=static_cast<jule::U64>(_16425_x >> 8LL);
	_16425_x+=static_cast<jule::U64>(_16425_x >> 16LL);
	_16425_x+=static_cast<jule::U64>(_16425_x >> 32LL);
	return static_cast<jule::Int>(static_cast<jule::Int>(_16425_x) & 127LLU);
}



inline jule::Uint _1d2038890_rotate_left(jule::Uint _20020_x,jule::Int _20029_k) {
	if (false) {
		return static_cast<jule::Uint>(_1d2038890_rotate_left32(static_cast<jule::U32>(_20020_x),_20029_k));
	}
	return static_cast<jule::Uint>(_1d2038890_rotate_left64(static_cast<jule::U64>(_20020_x),_20029_k));
}



inline jule::U8 _1d2038890_rotate_left8(jule::U8 _21121_x,jule::Int _21128_k) {
	
	jule::Uint _2139_s = static_cast<jule::Uint>(_21128_k) & 7LL;
	return static_cast<jule::U8>((_21121_x << _2139_s) | (_21121_x >> (8LL - _2139_s)));
}



inline jule::U16 _1d2038890_rotate_left16(jule::U16 _22122_x,jule::Int _22130_k) {
	
	jule::Uint _2239_s = static_cast<jule::Uint>(_22130_k) & 15LL;
	return static_cast<jule::U16>((_22122_x << _2239_s) | (_22122_x >> (16LL - _2239_s)));
}



inline jule::U32 _1d2038890_rotate_left32(jule::U32 _23122_x,jule::Int _23130_k) {
	
	jule::Uint _2339_s = static_cast<jule::Uint>(_23130_k) & 31LL;
	return static_cast<jule::U32>((_23122_x << _2339_s) | (_23122_x >> (32LL - _2339_s)));
}



inline jule::U64 _1d2038890_rotate_left64(jule::U64 _24122_x,jule::Int _24130_k) {
	
	jule::Uint _2439_s = static_cast<jule::Uint>(_24130_k) & 63LL;
	return static_cast<jule::U64>((_24122_x << _2439_s) | (_24122_x >> (64LL - _2439_s)));
}



inline jule::Uint _1d2038890_reverse(jule::Uint _25016_x) {
	if (false) {
		return static_cast<jule::Uint>(_1d2038890_reverse32(static_cast<jule::U32>(_25016_x)));
	}
	return static_cast<jule::Uint>(_1d2038890_reverse64(static_cast<jule::U64>(_25016_x)));
}



inline jule::U8 _1d2038890_reverse8(jule::U8 _25817_x) {
	return static_cast<jule::U8>(jule::Str("\x00\302\200@\303\200 \302\240`\303\240\020\302\220P\303\2200\302\260p\303\260\b\302\210H\303\210(\302\250h\303\250\030\302\230X\303\2308\302\270x\303\270\4\302\204D\303\204$\302\244d\303\244\024\302\224T\303\2244\302\264t\303\264\f\302\214L\303\214,\302\254l\303\254\034\302\234\\\303\234<\302\274|\303\274\2\302\202B\303\202\"\302\242b\303\242\022\302\222R\303\2222\302\262r\303\262\n\302\212J\303\212*\302\252j\303\252\032\302\232Z\303\232:\302\272z\303\272\6\302\206F\303\206&\302\246f\303\246\026\302\226V\303\2266\302\266v\303\266\016\302\216N\303\216.\302\256n\303\256\036\302\236^\303\236>\302\276~\303\276\1\302\201A\303\201!\302\241a\303\241\021\302\221Q\303\2211\302\261q\303\261\t\302\211I\303\211)\302\251i\303\251\031\302\231Y\303\2319\302\271y\303\271\5\302\205E\303\205%\302\245e\303\245\025\302\225U\303\2255\302\265u\303\265\r\302\215M\303\215-\302\255m\303\255\035\302\235]\303\235=\302\275}\303\275\3\302\203C\303\203#\302\243c\303\243\023\302\223S\303\2233\302\263s\303\263\v\302\213K\303\213+\302\253k\303\253\033\302\233[\303\233;\302\273{\303\273\a\302\207G\303\207'\302\247g\303\247\027\302\227W\303\2277\302\267w\303\267\017\302\217O\303\217/\302\257o\303\257\037\302\237_\303\237?\302\277\177\303\277", 384)[static_cast<jule::Int>(_25817_x)]);
}



inline jule::U16 _1d2038890_reverse16(jule::U16 _26318_x) {
	return static_cast<jule::U16>(static_cast<jule::U16>(jule::Str("\x00\302\200@\303\200 \302\240`\303\240\020\302\220P\303\2200\302\260p\303\260\b\302\210H\303\210(\302\250h\303\250\030\302\230X\303\2308\302\270x\303\270\4\302\204D\303\204$\302\244d\303\244\024\302\224T\303\2244\302\264t\303\264\f\302\214L\303\214,\302\254l\303\254\034\302\234\\\303\234<\302\274|\303\274\2\302\202B\303\202\"\302\242b\303\242\022\302\222R\303\2222\302\262r\303\262\n\302\212J\303\212*\302\252j\303\252\032\302\232Z\303\232:\302\272z\303\272\6\302\206F\303\206&\302\246f\303\246\026\302\226V\303\2266\302\266v\303\266\016\302\216N\303\216.\302\256n\303\256\036\302\236^\303\236>\302\276~\303\276\1\302\201A\303\201!\302\241a\303\241\021\302\221Q\303\2211\302\261q\303\261\t\302\211I\303\211)\302\251i\303\251\031\302\231Y\303\2319\302\271y\303\271\5\302\205E\303\205%\302\245e\303\245\025\302\225U\303\2255\302\265u\303\265\r\302\215M\303\215-\302\255m\303\255\035\302\235]\303\235=\302\275}\303\275\3\302\203C\303\203#\302\243c\303\243\023\302\223S\303\2233\302\263s\303\263\v\302\213K\303\213+\302\253k\303\253\033\302\233[\303\233;\302\273{\303\273\a\302\207G\303\207'\302\247g\303\247\027\302\227W\303\2277\302\267w\303\267\017\302\217O\303\217/\302\257o\303\257\037\302\237_\303\237?\302\277\177\303\277", 384)[static_cast<jule::Int>(_26318_x >> 8LL)]) | (static_cast<jule::U16>(jule::Str("\x00\302\200@\303\200 \302\240`\303\240\020\302\220P\303\2200\302\260p\303\260\b\302\210H\303\210(\302\250h\303\250\030\302\230X\303\2308\302\270x\303\270\4\302\204D\303\204$\302\244d\303\244\024\302\224T\303\2244\302\264t\303\264\f\302\214L\303\214,\302\254l\303\254\034\302\234\\\303\234<\302\274|\303\274\2\302\202B\303\202\"\302\242b\303\242\022\302\222R\303\2222\302\262r\303\262\n\302\212J\303\212*\302\252j\303\252\032\302\232Z\303\232:\302\272z\303\272\6\302\206F\303\206&\302\246f\303\246\026\302\226V\303\2266\302\266v\303\266\016\302\216N\303\216.\302\256n\303\256\036\302\236^\303\236>\302\276~\303\276\1\302\201A\303\201!\302\241a\303\241\021\302\221Q\303\2211\302\261q\303\261\t\302\211I\303\211)\302\251i\303\251\031\302\231Y\303\2319\302\271y\303\271\5\302\205E\303\205%\302\245e\303\245\025\302\225U\303\2255\302\265u\303\265\r\302\215M\303\215-\302\255m\303\255\035\302\235]\303\235=\302\275}\303\275\3\302\203C\303\203#\302\243c\303\243\023\302\223S\303\2233\302\263s\303\263\v\302\213K\303\213+\302\253k\303\253\033\302\233[\303\233;\302\273{\303\273\a\302\207G\303\207'\302\247g\303\247\027\302\227W\303\2277\302\267w\303\267\017\302\217O\303\217/\302\257o\303\257\037\302\237_\303\237?\302\277\177\303\277", 384)[static_cast<jule::Int>(_26318_x & 255LL)]) << 8LL));
}



inline jule::U32 _1d2038890_reverse32(jule::U32 _26822_x) {
	
	_26822_x=static_cast<jule::U32>(((_26822_x >> 1LL) & 1431655765LL) | ((_26822_x & 1431655765LL) << 1LL));
	_26822_x=static_cast<jule::U32>(((_26822_x >> 2LL) & 858993459LL) | ((_26822_x & 858993459LL) << 2LL));
	_26822_x=static_cast<jule::U32>(((_26822_x >> 4LL) & 252645135LL) | ((_26822_x & 252645135LL) << 4LL));
	return static_cast<jule::U32>(_1d2038890_reverse_bytes32(_26822_x));
}



inline jule::U64 _1d2038890_reverse64(jule::U64 _27722_x) {
	
	_27722_x=static_cast<jule::U64>(((_27722_x >> 1LL) & 6148914691236517205LL) | ((_27722_x & 6148914691236517205LL) << 1LL));
	_27722_x=static_cast<jule::U64>(((_27722_x >> 2LL) & 3689348814741910323LL) | ((_27722_x & 3689348814741910323LL) << 2LL));
	_27722_x=static_cast<jule::U64>(((_27722_x >> 4LL) & 1085102592571150095LL) | ((_27722_x & 1085102592571150095LL) << 4LL));
	return static_cast<jule::U64>(_1d2038890_reverse_bytes64(_27722_x));
}



inline jule::Uint _1d2038890_reverse_bytes(jule::Uint _29022_x) {
	if (false) {
		return static_cast<jule::Uint>(_1d2038890_reverse_bytes32(static_cast<jule::U32>(_29022_x)));
	}
	return static_cast<jule::Uint>(_1d2038890_reverse_bytes64(static_cast<jule::U64>(_29022_x)));
}



inline jule::U16 _1d2038890_reverse_bytes16(jule::U16 _30024_x) {
	return static_cast<jule::U16>((_30024_x >> 8LL) | (_30024_x << 8LL));
}



inline jule::U32 _1d2038890_reverse_bytes32(jule::U32 _30728_x) {
	
	_30728_x=static_cast<jule::U32>(((_30728_x >> 8LL) & 16711935LL) | ((_30728_x & 16711935LL) << 8LL));
	return static_cast<jule::U32>((_30728_x >> 16LL) | (_30728_x << 16LL));
}



inline jule::U64 _1d2038890_reverse_bytes64(jule::U64 _31628_x) {
	
	_31628_x=static_cast<jule::U64>(((_31628_x >> 8LL) & 71777214294589695LL) | ((_31628_x & 71777214294589695LL) << 8LL));
	_31628_x=static_cast<jule::U64>(((_31628_x >> 16LL) & 281470681808895LL) | ((_31628_x & 281470681808895LL) << 16LL));
	return static_cast<jule::U64>((_31628_x >> 32LL) | (_31628_x << 32LL));
}



inline jule::Int _1d2038890_len(jule::Uint _32712_x) {
	if (false) {
		return static_cast<jule::Int>(_1d2038890_len32(static_cast<jule::U32>(_32712_x)));
	}
	return static_cast<jule::Int>(_1d2038890_len64(static_cast<jule::U64>(_32712_x)));
}



inline jule::Int _1d2038890_len8(jule::U8 _33613_x) {
	return static_cast<jule::Int>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::Int>(_33613_x)]);
}



inline jule::Int _1d2038890_len16(jule::U16 _34218_x) {
	jule::Int _34228_n = jule::Int();
	if (_34218_x >= 256LLU) {
		_34218_x>>=8LL;
		_34228_n=8LL;
	}
	_34228_n = static_cast<jule::Int>(_34228_n + static_cast<jule::Int>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::Int>(_34218_x)]));
	return _34228_n;
}



inline jule::Int _1d2038890_len32(jule::U32 _35218_x) {
	jule::Int _35228_n = jule::Int();
	if (_35218_x >= 65536LLU) {
		_35218_x>>=16LL;
		_35228_n=16LL;
	}
	if (_35218_x >= 256LLU) {
		_35218_x>>=8LL;
		_35228_n+=8LL;
	}
	_35228_n = static_cast<jule::Int>(_35228_n + static_cast<jule::Int>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::Int>(_35218_x)]));
	return _35228_n;
}



inline jule::Int _1d2038890_len64(jule::U64 _36618_x) {
	jule::Int _36628_n = jule::Int();
	if (_36618_x >= 4294967296LLU) {
		_36618_x>>=32LL;
		_36628_n=32LL;
	}
	if (_36618_x >= 65536LLU) {
		_36618_x>>=16LL;
		_36628_n+=16LL;
	}
	if (_36618_x >= 256LLU) {
		_36618_x>>=8LL;
		_36628_n+=8LL;
	}
	_36628_n = static_cast<jule::Int>(_36628_n + static_cast<jule::Int>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::Int>(_36618_x)]));
	return _36628_n;
}



inline std::tuple<jule::Uint,jule::Uint> _1d2038890_add(jule::Uint _38912_x,jule::Uint _38921_y,jule::Uint _38930_carry) {
	jule::Uint _38945_sum = jule::Uint();
	jule::Uint _38956_carry_out = jule::Uint();
	if (false) {
		jule::U32 _39114_s32;
		jule::U32 _39119_c32;
		std::tie(_39114_s32,_39119_c32) = _1d2038890_add32(static_cast<jule::U32>(_38912_x),static_cast<jule::U32>(_38921_y),static_cast<jule::U32>(_38930_carry));
		_38945_sum = static_cast<jule::Uint>(_39114_s32);
		_38956_carry_out = static_cast<jule::Uint>(_39119_c32);
		return std::make_tuple(_38945_sum,_38956_carry_out);
	}
	jule::U64 _39410_s64;
	jule::U64 _39415_c64;
	std::tie(_39410_s64,_39415_c64) = _1d2038890_add64(static_cast<jule::U64>(_38912_x),static_cast<jule::U64>(_38921_y),static_cast<jule::U64>(_38930_carry));
	_38945_sum = static_cast<jule::Uint>(_39410_s64);
	_38956_carry_out = static_cast<jule::Uint>(_39415_c64);
	return std::make_tuple(_38945_sum,_38956_carry_out);
}



inline std::tuple<jule::U32,jule::U32> _1d2038890_add32(jule::U32 _40314_x,jule::U32 _40322_y,jule::U32 _40330_carry) {
	jule::U32 _40344_sum = jule::U32();
	jule::U32 _40354_carryout = jule::U32();
	jule::U64 _4049_sum64 = (static_cast<jule::U64>(_40314_x) + static_cast<jule::U64>(_40322_y)) + static_cast<jule::U64>(_40330_carry);
	_40344_sum=static_cast<jule::U32>(_4049_sum64);
	_40354_carryout=static_cast<jule::U32>(_4049_sum64 >> 32LL);
	return std::make_tuple(_40344_sum,_40354_carryout);
}



inline std::tuple<jule::U64,jule::U64> _1d2038890_add64(jule::U64 _41514_x,jule::U64 _41522_y,jule::U64 _41530_carry) {
	jule::U64 _41544_sum = jule::U64();
	jule::U64 _41554_carryout = jule::U64();
	_41544_sum=static_cast<jule::U64>((_41514_x + _41522_y) + _41530_carry);
	_41554_carryout=static_cast<jule::U64>(((_41514_x & _41522_y) | ((_41514_x | _41522_y) & (~(_41544_sum)))) >> 63LL);
	return std::make_tuple(_41544_sum,_41554_carryout);
}



inline std::tuple<jule::Uint,jule::Uint> _1d2038890_sub(jule::Uint _43112_x,jule::Uint _43121_y,jule::Uint _43130_borrow) {
	jule::Uint _43146_diff = jule::Uint();
	jule::Uint _43158_borrow_out = jule::Uint();
	if (false) {
		jule::U32 _43314_d32;
		jule::U32 _43319_b32;
		std::tie(_43314_d32,_43319_b32) = _1d2038890_sub32(static_cast<jule::U32>(_43112_x),static_cast<jule::U32>(_43121_y),static_cast<jule::U32>(_43130_borrow));
		_43146_diff = static_cast<jule::Uint>(_43314_d32);
		_43158_borrow_out = static_cast<jule::Uint>(_43319_b32);
		return std::make_tuple(_43146_diff,_43158_borrow_out);
	}
	jule::U64 _43610_d64;
	jule::U64 _43615_b64;
	std::tie(_43610_d64,_43615_b64) = _1d2038890_sub64(static_cast<jule::U64>(_43112_x),static_cast<jule::U64>(_43121_y),static_cast<jule::U64>(_43130_borrow));
	_43146_diff = static_cast<jule::Uint>(_43610_d64);
	_43158_borrow_out = static_cast<jule::Uint>(_43615_b64);
	return std::make_tuple(_43146_diff,_43158_borrow_out);
}



inline std::tuple<jule::U32,jule::U32> _1d2038890_sub32(jule::U32 _44514_x,jule::U32 _44522_y,jule::U32 _44530_borrow) {
	jule::U32 _44545_diff = jule::U32();
	jule::U32 _44556_borrowout = jule::U32();
	_44545_diff=static_cast<jule::U32>((_44514_x - _44522_y) - _44530_borrow);
	_44556_borrowout=static_cast<jule::U32>((((~(_44514_x)) & _44522_y) | ((~(_44514_x ^ _44522_y)) & _44545_diff)) >> 31LL);
	return std::make_tuple(_44545_diff,_44556_borrowout);
}



inline std::tuple<jule::U64,jule::U64> _1d2038890_sub64(jule::U64 _46014_x,jule::U64 _46022_y,jule::U64 _46030_borrow) {
	jule::U64 _46045_diff = jule::U64();
	jule::U64 _46056_borrowout = jule::U64();
	_46045_diff=static_cast<jule::U64>((_46014_x - _46022_y) - _46030_borrow);
	_46056_borrowout=static_cast<jule::U64>((((~(_46014_x)) & _46022_y) | ((~(_46014_x ^ _46022_y)) & _46045_diff)) >> 63LL);
	return std::make_tuple(_46045_diff,_46056_borrowout);
}



inline std::tuple<jule::Uint,jule::Uint> _1d2038890_mul(jule::Uint _47412_x,jule::Uint _47421_y) {
	jule::Uint _47432_hi = jule::Uint();
	jule::Uint _47442_lo = jule::Uint();
	if (false) {
		jule::U32 _47614_h;
		jule::U32 _47617_l;
		std::tie(_47614_h,_47617_l) = _1d2038890_mul32(static_cast<jule::U32>(_47412_x),static_cast<jule::U32>(_47421_y));
		_47432_hi = static_cast<jule::Uint>(_47614_h);
		_47442_lo = static_cast<jule::Uint>(_47617_l);
		return std::make_tuple(_47432_hi,_47442_lo);
	}
	jule::U64 _47910_h;
	jule::U64 _47913_l;
	std::tie(_47910_h,_47913_l) = _1d2038890_mul64(static_cast<jule::U64>(_47412_x),static_cast<jule::U64>(_47421_y));
	_47432_hi = static_cast<jule::Uint>(_47910_h);
	_47442_lo = static_cast<jule::Uint>(_47913_l);
	return std::make_tuple(_47432_hi,_47442_lo);
}



inline std::tuple<jule::U32,jule::U32> _1d2038890_mul32(jule::U32 _48814_x,jule::U32 _48822_y) {
	jule::U32 _48832_hi = jule::U32();
	jule::U32 _48841_lo = jule::U32();
	jule::U64 _4899_tmp = static_cast<jule::U64>(_48814_x) * static_cast<jule::U64>(_48822_y);
	std::tie(_48832_hi,_48841_lo) = std::make_tuple(static_cast<jule::U32>(_4899_tmp >> 32LL),static_cast<jule::U32>(_4899_tmp));
	return std::make_tuple(_48832_hi,_48841_lo);
}



inline std::tuple<jule::U64,jule::U64> _1d2038890_mul64(jule::U64 _49914_x,jule::U64 _49922_y) {
	jule::U64 _49932_hi = jule::U64();
	jule::U64 _49941_lo = jule::U64();
	
	jule::U64 _5019_x0 = _49914_x & 4294967295LLU;
	jule::U64 _5029_x1 = _49914_x >> 32LL;
	jule::U64 _5039_y0 = _49922_y & 4294967295LLU;
	jule::U64 _5049_y1 = _49922_y >> 32LL;
	jule::U64 _5059_w0 = _5019_x0 * _5039_y0;
	jule::U64 _5069_t = (_5029_x1 * _5039_y0) + (_5059_w0 >> 32LL);
	jule::U64 _50713_w1 = _5069_t & 4294967295LLU;
	jule::U64 _5089_w2 = _5069_t >> 32LL;
	_50713_w1+=static_cast<jule::U64>(_5019_x0 * _5049_y1);
	_49932_hi=static_cast<jule::U64>(((_5029_x1 * _5049_y1) + _5089_w2) + (_50713_w1 >> 32LL));
	_49941_lo=static_cast<jule::U64>(_49914_x * _49922_y);
	return std::make_tuple(_49932_hi,_49941_lo);
}



inline std::tuple<jule::Uint,jule::Uint> _1d2038890_div(jule::Uint _52112_hi,jule::Uint _52122_lo,jule::Uint _52132_y) {
	jule::Uint _52143_quo = jule::Uint();
	jule::Uint _52154_rem = jule::Uint();
	if (false) {
		jule::U32 _52314_q;
		jule::U32 _52317_r;
		std::tie(_52314_q,_52317_r) = _1d2038890_div32(static_cast<jule::U32>(_52112_hi),static_cast<jule::U32>(_52122_lo),static_cast<jule::U32>(_52132_y));
		_52143_quo = static_cast<jule::Uint>(_52314_q);
		_52154_rem = static_cast<jule::Uint>(_52317_r);
		return std::make_tuple(_52143_quo,_52154_rem);
	}
	jule::U64 _52610_q;
	jule::U64 _52613_r;
	std::tie(_52610_q,_52613_r) = _1d2038890_div64(static_cast<jule::U64>(_52112_hi),static_cast<jule::U64>(_52122_lo),static_cast<jule::U64>(_52132_y));
	_52143_quo = static_cast<jule::Uint>(_52610_q);
	_52154_rem = static_cast<jule::Uint>(_52613_r);
	return std::make_tuple(_52143_quo,_52154_rem);
}



inline std::tuple<jule::U32,jule::U32> _1d2038890_div32(jule::U32 _53414_hi,jule::U32 _53423_lo,jule::U32 _53432_y) {
	jule::U32 _53442_quo = jule::U32();
	jule::U32 _53452_rem = jule::U32();
	if (_53432_y == 0LL) {
		jule::panic(_1d203ade2_DIVIDE_ERROR);
	}
	if ((_53432_y != 0LL) && (_53432_y <= _53414_hi)) {
		jule::panic(_1d203ade2_OVERFLOW_ERROR);
	}
	jule::U64 _5419_z = (static_cast<jule::U64>(_53414_hi) << 32LL) | static_cast<jule::U64>(_53423_lo);
	std::tie(_53442_quo,_53452_rem) = std::make_tuple(static_cast<jule::U32>(jule::div(_5419_z,static_cast<jule::U64>(_53432_y))),static_cast<jule::U32>(jule::mod(_5419_z,static_cast<jule::U64>(_53432_y))));
	return std::make_tuple(_53442_quo,_53452_rem);
}



inline std::tuple<jule::U64,jule::U64> _1d2038890_div64(jule::U64 _55014_hi,jule::U64 _55023_lo,jule::U64 _55036_y) {
	jule::U64 _55046_quo = jule::U64();
	jule::U64 _55056_rem = jule::U64();
	
	
	if (_55036_y == 0LL) {
		jule::panic(_1d203ade2_DIVIDE_ERROR);
	}
	if (_55036_y <= _55014_hi) {
		jule::panic(_1d203ade2_OVERFLOW_ERROR);
	}
	jule::Uint _5609_s = static_cast<jule::Uint>(_1d2038890_leading_zeros64(_55036_y));
	_55036_y<<=_5609_s;
	jule::U64 _5639_yn1 = _55036_y >> 32LL;
	jule::U64 _5649_yn0 = _55036_y & 4294967295LLU;
	jule::U64 _5659_un32 = (_55014_hi << _5609_s) | (_55023_lo >> (64LL - _5609_s));
	jule::U64 _5669_un10 = _55023_lo << _5609_s;
	jule::U64 _5679_un1 = _5669_un10 >> 32LL;
	jule::U64 _5689_un0 = _5669_un10 & 4294967295LLU;
	jule::U64 _56913_q1 = jule::div(_5659_un32,_5639_yn1);
	jule::U64 _57013_rhat = _5659_un32 - (_56913_q1 * _5639_yn1);
	_iter_begin_4560387392:;
	if (!((_56913_q1 >= 4294967296LLU) || ((_56913_q1 * _5649_yn0) > ((4294967296LLU * _57013_rhat) + _5679_un1)))) { goto _iter_end_4560387392; }
	{
		(_56913_q1)--;
		_57013_rhat+=_5639_yn1;
		if (_57013_rhat >= 4294967296LLU) {
			goto _iter_end_4560387392;
		}
	}
	_iter_next_4560387392:;
	goto _iter_begin_4560387392;
	_iter_end_4560387392:;
	jule::U64 _5809_un21 = ((_5659_un32 * 4294967296LLU) + _5679_un1) - (_56913_q1 * _55036_y);
	jule::U64 _58113_q0 = jule::div(_5809_un21,_5639_yn1);
	_57013_rhat=static_cast<jule::U64>(_5809_un21 - (_58113_q0 * _5639_yn1));
	_iter_begin_4560392208:;
	if (!((_58113_q0 >= 4294967296LLU) || ((_58113_q0 * _5649_yn0) > ((4294967296LLU * _57013_rhat) + _5689_un0)))) { goto _iter_end_4560392208; }
	{
		(_58113_q0)--;
		_57013_rhat+=_5639_yn1;
		if (_57013_rhat >= 4294967296LLU) {
			goto _iter_end_4560392208;
		}
	}
	_iter_next_4560392208:;
	goto _iter_begin_4560392208;
	_iter_end_4560392208:;
	_55046_quo = static_cast<jule::U64>((_56913_q1 * 4294967296LLU) + _58113_q0);
	_55056_rem = static_cast<jule::U64>((((_5809_un21 * 4294967296LLU) + _5689_un0) - (_58113_q0 * _55036_y)) >> _5609_s);
	return std::make_tuple(_55046_quo,_55056_rem);
}



inline jule::Uint _1d2038890_rem(jule::Uint _59812_hi,jule::Uint _59822_lo,jule::Uint _59832_y) {
	if (false) {
		return static_cast<jule::Uint>(_1d2038890_rem32(static_cast<jule::U32>(_59812_hi),static_cast<jule::U32>(_59822_lo),static_cast<jule::U32>(_59832_y)));
	}
	return static_cast<jule::Uint>(_1d2038890_rem64(static_cast<jule::U64>(_59812_hi),static_cast<jule::U64>(_59822_lo),static_cast<jule::U64>(_59832_y)));
}



inline jule::U32 _1d2038890_rem32(jule::U32 _60814_hi,jule::U32 _60823_lo,jule::U32 _60832_y) {
	return static_cast<jule::U32>(jule::mod((static_cast<jule::U64>(_60814_hi) << 32LL) | static_cast<jule::U64>(_60823_lo),static_cast<jule::U64>(_60832_y)));
}



inline jule::U64 _1d2038890_rem64(jule::U64 _61514_hi,jule::U64 _61523_lo,jule::U64 _61532_y) {
	jule::U64 _62213_rem;
	std::tie(std::ignore,_62213_rem) = _1d2038890_div64(static_cast<jule::U64>(jule::mod(_61514_hi,_61532_y)),_61523_lo,_61532_y);
	return _62213_rem;
}



inline jule::F64 _1d17cc013_atanh(jule::F64 _7818_x) {
	
	{
		if (!((_7818_x < -1LL) || (_7818_x > 1LL) || (_1d186ec98_is_nan(_7818_x)))) { goto _case_end_4560695008; }
		_case_begin_4560695008:;
		{
			return static_cast<jule::F64>(_1d186ec98_nan());
		}
		goto _match_end_4560694848;
		_case_end_4560695008:;
		if (!((_7818_x == 1LL))) { goto _case_end_4560695120; }
		_case_begin_4560695120:;
		{
			return static_cast<jule::F64>(_1d186ec98_inf(1LL));
		}
		goto _match_end_4560694848;
		_case_end_4560695120:;
		if (!((_7818_x == -1LL))) { goto _case_end_4560695232; }
		_case_begin_4560695232:;
		{
			return static_cast<jule::F64>(_1d186ec98_inf(-1LL));
		}
		goto _match_end_4560694848;
		_case_end_4560695232:;
		_match_end_4560694848:;
	}
	jule::Bool _8913_sign = false;
	if (_7818_x < 0LL) {
		_7818_x=static_cast<jule::F64>((-(_7818_x)));
		_8913_sign=true;
	}
	jule::F64 _9413_temp = 0LL;
	{
		if (!((_7818_x < 0.000000003725290298461914))) { goto _case_end_4560705360; }
		_case_begin_4560705360:;
		{
			_9413_temp=_7818_x;
		}
		goto _match_end_4560702704;
		_case_end_4560705360:;
		if (!((_7818_x < 0.5))) { goto _case_end_4560703632; }
		_case_begin_4560703632:;
		{
			_9413_temp=static_cast<jule::F64>(_7818_x + _7818_x);
			_9413_temp=static_cast<jule::F64>(0.5 * _1d1cc27c2_log1p(static_cast<jule::F64>(_9413_temp + jule::div(_9413_temp * _7818_x,1LL - _7818_x))));
		}
		goto _match_end_4560702704;
		_case_end_4560703632:;
		_case_begin_4560702800:;
		{
			_9413_temp=static_cast<jule::F64>(0.5 * _1d1cc27c2_log1p(static_cast<jule::F64>(jule::div(_7818_x + _7818_x,1LL - _7818_x))));
		}
		goto _match_end_4560702704;
		_case_end_4560702800:;
		_match_end_4560702704:;
	}
	if (_8913_sign) {
		_9413_temp=static_cast<jule::F64>((-(_9413_temp)));
	}
	return _9413_temp;
}



inline jule::U32 _1d17de7ea_f32_bits(jule::F32 _4117_f) {
	return (*(((jule::U32*)((&(_4117_f))))));
}



inline jule::F32 _1d17de7ea_f32_from_bits(jule::U32 _4722_b) {
	return (*(((jule::F32*)((&(_4722_b))))));
}



inline jule::U64 _1d17de7ea_f64_bits(jule::F64 _5217_f) {
	return (*(((jule::U64*)((&(_5217_f))))));
}



inline jule::F64 _1d17de7ea_f64_from_bits(jule::U64 _5822_b) {
	return (*(((jule::F64*)((&(_5822_b))))));
}



inline jule::F64 _1d180b88e_cos(jule::F64 _14816_x) {
	
	
	
	if (_1d186ec98_is_nan(_14816_x) || _1d186ec98_is_inf(_14816_x,0LL)) {
		return static_cast<jule::F64>(_1d186ec98_nan());
	}
	jule::Bool _15813_sign = false;
	_14816_x=static_cast<jule::F64>(_1d19740ab_abs(_14816_x));
	jule::U64 _16113_j = 0LLU;
	jule::F64 _16213_y = 0LL;
	jule::F64 _16313_z = 0LL;
	if (_14816_x >= 536870912LLU) {
		std::tie(_16113_j,_16313_z) = _1d188230a_trig_reduce(_14816_x);
	} else {
		_16113_j=static_cast<jule::U64>(_14816_x * 1.2732395447351628);
		_16213_y=static_cast<jule::F64>(_16113_j);
		if ((_16113_j & 1LL) == 1LL) {
			(_16113_j)++;
			(_16213_y)++;
		}
		_16113_j&=7LL;
		_16313_z=static_cast<jule::F64>(((_14816_x - (_16213_y * 0.7853981256484985)) - (_16213_y * 0.00000003774894707930798)) - (_16213_y * 0.0000000000000026951514290790595));
	}
	if (_16113_j > 3LL) {
		_16113_j-=4LL;
		_15813_sign=(!(_15813_sign));
	}
	if (_16113_j > 1LL) {
		_15813_sign=(!(_15813_sign));
	}
	jule::F64 _1879_zz = _16313_z * _16313_z;
	if ((_16113_j == 1LL) || (_16113_j == 2LL)) {
		_16213_y=static_cast<jule::F64>(_16313_z + ((_16313_z * _1879_zz) * ((((((((((_1d180b88e__SIN[0LL] * _1879_zz) + _1d180b88e__SIN[1LL]) * _1879_zz) + _1d180b88e__SIN[2LL]) * _1879_zz) + _1d180b88e__SIN[3LL]) * _1879_zz) + _1d180b88e__SIN[4LL]) * _1879_zz) + _1d180b88e__SIN[5LL])));
	} else {
		_16213_y=static_cast<jule::F64>((1LL - (0.5 * _1879_zz)) + ((_1879_zz * _1879_zz) * ((((((((((_1d180b88e__COS[0LL] * _1879_zz) + _1d180b88e__COS[1LL]) * _1879_zz) + _1d180b88e__COS[2LL]) * _1879_zz) + _1d180b88e__COS[3LL]) * _1879_zz) + _1d180b88e__COS[4LL]) * _1879_zz) + _1d180b88e__COS[5LL])));
	}
	if (_15813_sign) {
		_16213_y=static_cast<jule::F64>((-(_16213_y)));
	}
	return _16213_y;
}



inline jule::F64 _1d180b88e_sin(jule::F64 _20516_x) {
	
	
	
	{
		if (!((_20516_x == 0LL) || (_1d186ec98_is_nan(_20516_x)))) { goto _case_end_4560757104; }
		_case_begin_4560757104:;
		{
			return _20516_x;
		}
		goto _match_end_4560756928;
		_case_end_4560757104:;
		if (!((_1d186ec98_is_inf(_20516_x,0LL)))) { goto _case_end_4560757232; }
		_case_begin_4560757232:;
		{
			return static_cast<jule::F64>(_1d186ec98_nan());
		}
		goto _match_end_4560756928;
		_case_end_4560757232:;
		_match_end_4560756928:;
	}
	jule::Bool _21813_sign = false;
	if (_20516_x < 0LL) {
		_20516_x=static_cast<jule::F64>((-(_20516_x)));
		_21813_sign=true;
	}
	jule::U64 _22413_j = 0LLU;
	jule::F64 _22513_y = 0LL;
	jule::F64 _22613_z = 0LL;
	if (_20516_x >= 536870912LLU) {
		std::tie(_22413_j,_22613_z) = _1d188230a_trig_reduce(_20516_x);
	} else {
		_22413_j=static_cast<jule::U64>(_20516_x * 1.2732395447351628);
		_22513_y=static_cast<jule::F64>(_22413_j);
		if ((_22413_j & 1LL) == 1LL) {
			(_22413_j)++;
			(_22513_y)++;
		}
		_22413_j&=7LL;
		_22613_z=static_cast<jule::F64>(((_20516_x - (_22513_y * 0.7853981256484985)) - (_22513_y * 0.00000003774894707930798)) - (_22513_y * 0.0000000000000026951514290790595));
	}
	if (_22413_j > 3LL) {
		_21813_sign=(!(_21813_sign));
		_22413_j-=4LL;
	}
	jule::F64 _2469_zz = _22613_z * _22613_z;
	if ((_22413_j == 1LL) || (_22413_j == 2LL)) {
		_22513_y=static_cast<jule::F64>((1LL - (0.5 * _2469_zz)) + ((_2469_zz * _2469_zz) * ((((((((((_1d180b88e__COS[0LL] * _2469_zz) + _1d180b88e__COS[1LL]) * _2469_zz) + _1d180b88e__COS[2LL]) * _2469_zz) + _1d180b88e__COS[3LL]) * _2469_zz) + _1d180b88e__COS[4LL]) * _2469_zz) + _1d180b88e__COS[5LL])));
	} else {
		_22513_y=static_cast<jule::F64>(_22613_z + ((_22613_z * _2469_zz) * ((((((((((_1d180b88e__SIN[0LL] * _2469_zz) + _1d180b88e__SIN[1LL]) * _2469_zz) + _1d180b88e__SIN[2LL]) * _2469_zz) + _1d180b88e__SIN[3LL]) * _2469_zz) + _1d180b88e__SIN[4LL]) * _2469_zz) + _1d180b88e__SIN[5LL])));
	}
	if (_21813_sign) {
		_22513_y=static_cast<jule::F64>((-(_22513_y)));
	}
	return _22513_y;
}



inline jule::F64 _1d17d5ed9_tan(jule::F64 _11316_x) {
	
	
	
	{
		if (!((_11316_x == 0LL) || (_1d186ec98_is_nan(_11316_x)))) { goto _case_end_4560794384; }
		_case_begin_4560794384:;
		{
			return _11316_x;
		}
		goto _match_end_4560794208;
		_case_end_4560794384:;
		if (!((_1d186ec98_is_inf(_11316_x,0LL)))) { goto _case_end_4560794512; }
		_case_begin_4560794512:;
		{
			return static_cast<jule::F64>(_1d186ec98_nan());
		}
		goto _match_end_4560794208;
		_case_end_4560794512:;
		_match_end_4560794208:;
	}
	jule::Bool _12613_sign = false;
	if (_11316_x < 0LL) {
		_11316_x=static_cast<jule::F64>((-(_11316_x)));
		_12613_sign=true;
	}
	jule::U64 _13113_j = 0LLU;
	jule::F64 _13213_y = 0LL;
	jule::F64 _13313_z = 0LL;
	if (_11316_x >= 536870912LLU) {
		std::tie(_13113_j,_13313_z) = _1d188230a_trig_reduce(_11316_x);
	} else {
		_13113_j=static_cast<jule::U64>(_11316_x * 1.2732395447351628);
		_13213_y=static_cast<jule::F64>(_13113_j);
		if ((_13113_j & 1LL) == 1LL) {
			(_13113_j)++;
			(_13213_y)++;
		}
		_13313_z=static_cast<jule::F64>(((_11316_x - (_13213_y * 0.7853981256484985)) - (_13213_y * 0.00000003774894707930798)) - (_13213_y * 0.0000000000000026951514290790595));
	}
	jule::F64 _1489_zz = _13313_z * _13313_z;
	if (_1489_zz > 0.00000000000001) {
		_13213_y=static_cast<jule::F64>(_13313_z + (_13313_z * jule::div(_1489_zz * ((((_1d17d5ed9__TAN_P[0LL] * _1489_zz) + _1d17d5ed9__TAN_P[1LL]) * _1489_zz) + _1d17d5ed9__TAN_P[2LL]),((((((_1489_zz + _1d17d5ed9__TAN_Q[1LL]) * _1489_zz) + _1d17d5ed9__TAN_Q[2LL]) * _1489_zz) + _1d17d5ed9__TAN_Q[3LL]) * _1489_zz) + _1d17d5ed9__TAN_Q[4LL])));
	} else {
		_13213_y=_13313_z;
	}
	if ((_13113_j & 2LL) == 2LL) {
		_13213_y=static_cast<jule::F64>(jule::div(-1LL,_13213_y));
	}
	if (_12613_sign) {
		_13213_y=static_cast<jule::F64>((-(_13213_y)));
	}
	return _13213_y;
}



inline jule::F64 _1d184a504_mod(jule::F64 _5212_x,jule::F64 _5224_y) {
	if ((((_5224_y == 0LL) || _1d186ec98_is_inf(_5212_x,0LL)) || _1d186ec98_is_nan(_5212_x)) || _1d186ec98_is_nan(_5224_y)) {
		return static_cast<jule::F64>(_1d186ec98_nan());
	}
	_5224_y=static_cast<jule::F64>(_1d19740ab_abs(_5224_y));
	jule::F64 _5810_yfr;
	jule::Int _5815_yexp;
	std::tie(_5810_yfr,_5815_yexp) = _1d184849c_frexp(_5224_y);
	jule::F64 _5913_r = _5212_x;
	if (_5212_x < 0LL) {
		_5913_r=static_cast<jule::F64>((-(_5212_x)));
	}
	_iter_begin_4560829568:;
	if (!(_5913_r >= _5224_y)) { goto _iter_end_4560829568; }
	{
		jule::F64 _6514_rfr;
		jule::Int _6523_rexp;
		std::tie(_6514_rfr,_6523_rexp) = _1d184849c_frexp(_5913_r);
		if (_6514_rfr < _5810_yfr) {
			_6523_rexp=static_cast<jule::Int>(_6523_rexp - 1LL);
		}
		_5913_r=static_cast<jule::F64>(_5913_r - _1d1b65511_ldexp(_5224_y,static_cast<jule::Int>(_6523_rexp - _5815_yexp)));
	}
	_iter_next_4560829568:;
	goto _iter_begin_4560829568;
	_iter_end_4560829568:;
	if (_5212_x < 0LL) {
		_5913_r=static_cast<jule::F64>((-(_5913_r)));
	}
	return _5913_r;
}



inline std::tuple<jule::F64,jule::Int> _1d184849c_frexp(jule::F64 _4718_f) {
	jule::F64 _4728_frac = jule::F64();
	jule::Int _4739_exp = jule::Int();
	{
		if (!((_4718_f == 0LL))) { goto _case_end_4560836736; }
		_case_begin_4560836736:;
		{
			_4728_frac = _4718_f;
			_4739_exp = 0LL;
			return std::make_tuple(_4728_frac,_4739_exp);
		}
		goto _match_end_4560836496;
		_case_end_4560836736:;
		if (!((_1d186ec98_is_inf(_4718_f,0LL)) || (_1d186ec98_is_nan(_4718_f)))) { goto _case_end_4560836864; }
		_case_begin_4560836864:;
		{
			_4728_frac = _4718_f;
			_4739_exp = 0LL;
			return std::make_tuple(_4728_frac,_4739_exp);
		}
		goto _match_end_4560836496;
		_case_end_4560836864:;
		_match_end_4560836496:;
	}
	std::tie(_4718_f,_4739_exp) = _1d186ec98_normalize(_4718_f);
	jule::U64 _5613_x = _1d17de7ea_f64_bits(_4718_f);
	_4739_exp+=static_cast<jule::Int>((static_cast<jule::Int>((_5613_x >> 52LL) & 2047LL) - 1023LL) + 1LL);
	_5613_x=static_cast<jule::U64>(_5613_x & 9227875636482146303LLU);
	_5613_x|=4602678819172646912LLU;
	_4728_frac=static_cast<jule::F64>(_1d17de7ea_f64_from_bits(_5613_x));
	return std::make_tuple(_4728_frac,_4739_exp);
}



inline jule::F32 _1d180e353_nextafter32(jule::F32 _4420_x,jule::F32 _4428_y) {
	jule::F32 _4438_r = jule::F32();
	{
		if (!((_1d186ec98_is_nan(static_cast<jule::F64>(_4420_x))) || (_1d186ec98_is_nan(static_cast<jule::F64>(_4428_y))))) { goto _case_end_4560848384; }
		_case_begin_4560848384:;
		{
			_4438_r=static_cast<jule::F32>(_1d186ec98_nan());
		}
		goto _match_end_4560847376;
		_case_end_4560848384:;
		if (!((_4420_x == _4428_y))) { goto _case_end_4560850160; }
		_case_begin_4560850160:;
		{
			_4438_r=_4420_x;
		}
		goto _match_end_4560847376;
		_case_end_4560850160:;
		if (!((_4420_x == 0LL))) { goto _case_end_4560848912; }
		_case_begin_4560848912:;
		{
			_4438_r=static_cast<jule::F32>(_1d180ed26_copysign(static_cast<jule::F64>(_1d17de7ea_f32_from_bits(1LLU)),static_cast<jule::F64>(_4428_y)));
		}
		goto _match_end_4560847376;
		_case_end_4560848912:;
		if (!(((_4428_y > _4420_x) == (_4420_x > 0LL)))) { goto _case_end_4560847856; }
		_case_begin_4560847856:;
		{
			_4438_r=static_cast<jule::F32>(_1d17de7ea_f32_from_bits(static_cast<jule::U32>(_1d17de7ea_f32_bits(_4420_x) + 1LL)));
		}
		goto _match_end_4560847376;
		_case_end_4560847856:;
		_case_begin_4560847552:;
		{
			_4438_r=static_cast<jule::F32>(_1d17de7ea_f32_from_bits(static_cast<jule::U32>(_1d17de7ea_f32_bits(_4420_x) - 1LL)));
		}
		goto _match_end_4560847376;
		_case_end_4560847552:;
		_match_end_4560847376:;
	}
	return _4438_r;
}



inline jule::F64 _1d180e353_nextafter(jule::F64 _6618_x,jule::F64 _6626_y) {
	jule::F64 _6636_r = jule::F64();
	{
		if (!((_1d186ec98_is_nan(_6618_x)) || (_1d186ec98_is_nan(_6626_y)))) { goto _case_end_4560859808; }
		_case_begin_4560859808:;
		{
			_6636_r=static_cast<jule::F64>(_1d186ec98_nan());
		}
		goto _match_end_4560858608;
		_case_end_4560859808:;
		if (!((_6618_x == _6626_y))) { goto _case_end_4560860112; }
		_case_begin_4560860112:;
		{
			_6636_r=_6618_x;
		}
		goto _match_end_4560858608;
		_case_end_4560860112:;
		if (!((_6618_x == 0LL))) { goto _case_end_4560859616; }
		_case_begin_4560859616:;
		{
			_6636_r=static_cast<jule::F64>(_1d180ed26_copysign(static_cast<jule::F64>(_1d17de7ea_f64_from_bits(1LLU)),_6626_y));
		}
		goto _match_end_4560858608;
		_case_end_4560859616:;
		if (!(((_6626_y > _6618_x) == (_6618_x > 0LL)))) { goto _case_end_4560861200; }
		_case_begin_4560861200:;
		{
			_6636_r=static_cast<jule::F64>(_1d17de7ea_f64_from_bits(static_cast<jule::U64>(_1d17de7ea_f64_bits(_6618_x) + 1LL)));
		}
		goto _match_end_4560858608;
		_case_end_4560861200:;
		_case_begin_4560858784:;
		{
			_6636_r=static_cast<jule::F64>(_1d17de7ea_f64_from_bits(static_cast<jule::U64>(_1d17de7ea_f64_bits(_6618_x) - 1LL)));
		}
		goto _match_end_4560858608;
		_case_end_4560858784:;
		_match_end_4560858608:;
	}
	return _6636_r;
}



inline jule::F64 _1d180ed26_copysign(jule::F64 _3917_f,jule::F64 _3925_sign) {
	
	return static_cast<jule::F64>(_1d17de7ea_f64_from_bits(static_cast<jule::U64>((_1d17de7ea_f64_bits(_3917_f) & 9223372036854775807LLU) | (_1d17de7ea_f64_bits(_3925_sign) & 9223372036854775808LLU))));
}



inline std::tuple<jule::U64,jule::F64> _1d188230a_trig_reduce(jule::F64 _6020_x) {
	jule::U64 _6030_j = jule::U64();
	jule::F64 _6038_z = jule::F64();
	
	if (_6020_x < 0.7853981633974483) {
		_6030_j = 0LL;
		_6038_z = _6020_x;
		return std::make_tuple(_6030_j,_6038_z);
	}
	jule::U64 _6713_ix = _1d17de7ea_f64_bits(_6020_x);
	jule::Int _689_exp = (static_cast<jule::Int>((_6713_ix >> 52LL) & 2047LL) - 1023LL) - 52LL;
	_6713_ix=static_cast<jule::U64>(_6713_ix & 9227875636482146303LLU);
	_6713_ix|=4503599627370496LLU;
	jule::Uint _7410_digit = jule::div(static_cast<jule::Uint>(_689_exp + 61LL),64LL);
	jule::Uint _7417_bitshift = jule::mod(static_cast<jule::Uint>(_689_exp + 61LL),64LL);
	std::tie(_7410_digit,_7417_bitshift) = std::make_tuple(jule::div(static_cast<jule::Uint>(_689_exp + 61LL),64LL),jule::mod(static_cast<jule::Uint>(_689_exp + 61LL),64LL));
	jule::U64 _759_z0 = (_1d188230a_M_PI4[static_cast<jule::Int>(_7410_digit)] << _7417_bitshift) | (_1d188230a_M_PI4[static_cast<jule::Int>(_7410_digit + 1LL)] >> (64LL - _7417_bitshift));
	jule::U64 _769_z1 = (_1d188230a_M_PI4[static_cast<jule::Int>(_7410_digit + 1LL)] << _7417_bitshift) | (_1d188230a_M_PI4[static_cast<jule::Int>(_7410_digit + 2LL)] >> (64LL - _7417_bitshift));
	jule::U64 _779_z2 = (_1d188230a_M_PI4[static_cast<jule::Int>(_7410_digit + 2LL)] << _7417_bitshift) | (_1d188230a_M_PI4[static_cast<jule::Int>(_7410_digit + 3LL)] >> (64LL - _7417_bitshift));
	jule::U64 _7910_z2hi;
	std::tie(_7910_z2hi,std::ignore) = _1d2038890_mul64(_779_z2,_6713_ix);
	jule::U64 _8010_z1hi;
	jule::U64 _8016_z1lo;
	std::tie(_8010_z1hi,_8016_z1lo) = _1d2038890_mul64(_769_z1,_6713_ix);
	jule::U64 _819_z0lo = _759_z0 * _6713_ix;
	jule::U64 _8210_lo;
	jule::U64 _8214_c;
	std::tie(_8210_lo,_8214_c) = _1d2038890_add64(_8016_z1lo,_7910_z2hi,0LLU);
	jule::U64 _8314_hi;
	std::tie(_8314_hi,std::ignore) = _1d2038890_add64(_819_z0lo,_8010_z1hi,_8214_c);
	_6030_j=static_cast<jule::U64>(_8314_hi >> 61LL);
	_8314_hi=static_cast<jule::U64>((_8314_hi << 3LL) | (_8210_lo >> 61LL));
	jule::Uint _889_lz = static_cast<jule::Uint>(_1d2038890_leading_zeros64(_8314_hi));
	jule::U64 _899_e = static_cast<jule::U64>(1023LL - (_889_lz + 1LL));
	_8314_hi=static_cast<jule::U64>((_8314_hi << (_889_lz + 1LL)) | (_8210_lo >> (64LL - (_889_lz + 1LL))));
	_8314_hi>>=12LL;
	_8314_hi|=static_cast<jule::U64>(_899_e << 52LL);
	_6038_z=static_cast<jule::F64>(_1d17de7ea_f64_from_bits(_8314_hi));
	if ((_6030_j & 1LL) == 1LL) {
		(_6030_j)++;
		_6030_j&=7LL;
		(_6038_z)--;
	}
	_6030_j = _6030_j;
	_6038_z = static_cast<jule::F64>(_6038_z * 0.7853981633974483);
	return std::make_tuple(_6030_j,_6038_z);
}



inline jule::F64 _1d186ddeb_atan2(jule::F64 _6014_y,jule::F64 _6022_x) {
	{
		if (!((_1d186ec98_is_nan(_6014_y)) || (_1d186ec98_is_nan(_6022_x)))) { goto _case_end_4560910352; }
		_case_begin_4560910352:;
		{
			return static_cast<jule::F64>(_1d186ec98_nan());
		}
		goto _match_end_4560908016;
		_case_end_4560910352:;
		if (!((_6014_y == 0LL))) { goto _case_end_4560910480; }
		_case_begin_4560910480:;
		{
			if ((_6022_x >= 0LL) && (!(_1d1b685be_signbit(_6022_x)))) {
				return static_cast<jule::F64>(_1d180ed26_copysign(0LL,_6014_y));
			}
			return static_cast<jule::F64>(_1d180ed26_copysign(3.141592653589793,_6014_y));
		}
		goto _match_end_4560908016;
		_case_end_4560910480:;
		if (!((_6022_x == 0LL))) { goto _case_end_4560910608; }
		_case_begin_4560910608:;
		{
			return static_cast<jule::F64>(_1d180ed26_copysign(1.5707963267948966,_6014_y));
		}
		goto _match_end_4560908016;
		_case_end_4560910608:;
		if (!((_1d186ec98_is_inf(_6022_x,0LL)))) { goto _case_end_4560910736; }
		_case_begin_4560910736:;
		{
			if (_1d186ec98_is_inf(_6022_x,1LL)) {
				{
					if (!((_1d186ec98_is_inf(_6014_y,0LL)))) { goto _case_end_4560919856; }
					_case_begin_4560919856:;
					{
						return static_cast<jule::F64>(_1d180ed26_copysign(0.7853981633974483,_6014_y));
					}
					goto _match_end_4560918208;
					_case_end_4560919856:;
					_case_begin_4560918400:;
					{
						return static_cast<jule::F64>(_1d180ed26_copysign(0LL,_6014_y));
					}
					goto _match_end_4560918208;
					_case_end_4560918400:;
					_match_end_4560918208:;
				}
			}
			{
				if (!((_1d186ec98_is_inf(_6014_y,0LL)))) { goto _case_end_4560922672; }
				_case_begin_4560922672:;
				{
					return static_cast<jule::F64>(_1d180ed26_copysign(2.356194490192345,_6014_y));
				}
				goto _match_end_4560921552;
				_case_end_4560922672:;
				_case_begin_4560917744:;
				{
					return static_cast<jule::F64>(_1d180ed26_copysign(3.141592653589793,_6014_y));
				}
				goto _match_end_4560921552;
				_case_end_4560917744:;
				_match_end_4560921552:;
			}
		}
		goto _match_end_4560908016;
		_case_end_4560910736:;
		if (!((_1d186ec98_is_inf(_6014_y,0LL)))) { goto _case_end_4560910864; }
		_case_begin_4560910864:;
		{
			return static_cast<jule::F64>(_1d180ed26_copysign(1.5707963267948966,_6014_y));
		}
		goto _match_end_4560908016;
		_case_end_4560910864:;
		_match_end_4560908016:;
	}
	jule::F64 _929_q = _1d1ea4630_atan(static_cast<jule::F64>(jule::div(_6014_y,_6022_x)));
	if (_6022_x < 0LL) {
		if (_929_q <= 0LL) {
			return static_cast<jule::F64>(_929_q + 3.141592653589793);
		}
		return static_cast<jule::F64>(_929_q - 3.141592653589793);
	}
	return _929_q;
}



inline jule::F64 _1d186e803_floor(jule::F64 _4414_x) {
	if (((_4414_x == 0LL) || _1d186ec98_is_nan(_4414_x)) || _1d186ec98_is_inf(_4414_x,0LL)) {
		return _4414_x;
	}
	if (_4414_x < 0LL) {
		jule::F64 _4918_d;
		jule::F64 _4921_fract;
		std::tie(_4918_d,_4921_fract) = _1d19edad6_modf(static_cast<jule::F64>((-(_4414_x))));
		if (_4921_fract != 0LL) {
			_4918_d=static_cast<jule::F64>(_4918_d + 1LL);
		}
		return static_cast<jule::F64>((-(_4918_d)));
	}
	jule::F64 _5510_d;
	std::tie(_5510_d,std::ignore) = _1d19edad6_modf(_4414_x);
	return _5510_d;
}



inline jule::F64 _1d186e803_ceil(jule::F64 _6513_x) {
	return static_cast<jule::F64>((-(_1d186e803_floor(static_cast<jule::F64>((-(_6513_x)))))));
}



inline jule::F64 _1d186e803_trunc(jule::F64 _7314_x) {
	if (((_7314_x == 0LL) || _1d186ec98_is_nan(_7314_x)) || _1d186ec98_is_inf(_7314_x,0LL)) {
		return _7314_x;
	}
	jule::F64 _7710_d;
	std::tie(_7710_d,std::ignore) = _1d19edad6_modf(_7314_x);
	return _7710_d;
}



inline jule::F64 _1d186e803_round(jule::F64 _8714_x) {
	jule::U64 _9713_bits = _1d17de7ea_f64_bits(_8714_x);
	jule::Uint _9813_e = static_cast<jule::Uint>(_9713_bits >> 52LL) & 2047LL;
	if (_9813_e < 1023LL) {
		_9713_bits&=9223372036854775808LLU;
		if (_9813_e == 1022LL) {
			_9713_bits|=4607182418800017408LL;
		}
	} else if (_9813_e < 1075LL) {
		
		_9813_e-=1023LL;
		_9713_bits+=static_cast<jule::Uint>(2251799813685248LLU >> _9813_e);
		_9713_bits&=static_cast<jule::Uint>((~(4503599627370495LLU >> _9813_e)));
	}
	return static_cast<jule::F64>(_1d17de7ea_f64_from_bits(_9713_bits));
}



inline jule::F64 _1d186e803_round_even(jule::F64 _12419_x) {
	jule::U64 _13613_bits = _1d17de7ea_f64_bits(_12419_x);
	jule::Uint _13713_e = static_cast<jule::Uint>(_13613_bits >> 52LL) & 2047LL;
	if (_13713_e >= 1023LL) {
		
		_13713_e-=1023LL;
		_13613_bits+=static_cast<jule::U64>((2251799813685247LLU + ((_13613_bits >> (52LL - _13713_e)) & 1LL)) >> _13713_e);
		_13613_bits&=static_cast<jule::Uint>((~(4503599627370495LLU >> _13713_e)));
	} else if ((_13713_e == 1022LL) && ((_13613_bits & 4503599627370495LLU) != 0LL)) {
		_13613_bits=static_cast<jule::U64>((_13613_bits & 9223372036854775808LLU) | 4607182418800017408LL);
	} else {
		_13613_bits&=9223372036854775808LLU;
	}
	return static_cast<jule::F64>(_1d17de7ea_f64_from_bits(_13613_bits));
}



inline jule::F64 _1d186ec98_nan(void) {
	return static_cast<jule::F64>(_1d17de7ea_f64_from_bits(9221120237041090561LLU));
}



inline jule::Bool _1d186ec98_is_nan(jule::F64 _5215_f) {
	return _5215_f != _5215_f;
}



inline jule::F64 _1d186ec98_inf(jule::Int _6112_sign) {
	if (_6112_sign >= 0LL) {
		return static_cast<jule::F64>(_1d17de7ea_f64_from_bits(9218868437227405312LLU));
	}
	return static_cast<jule::F64>(_1d17de7ea_f64_from_bits(18442240474082181120LLU));
}



inline jule::Bool _1d186ec98_is_inf(jule::F64 _7215_f,jule::Int _7223_sign) {
	return ((_7223_sign >= 0LL) && (_7215_f > jule::MAX_F64)) || ((_7223_sign <= 0LL) && (_7215_f < jule::MIN_F64));
}



inline std::tuple<jule::F64,jule::Int> _1d186ec98_normalize(jule::F64 _8214_x) {
	jule::F64 _8224_y = jule::F64();
	jule::Int _8232_exp = jule::Int();
	
	if (_1d19740ab_abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014) {
		_8224_y = static_cast<jule::F64>(_8214_x * 4503599627370496LLU);
		_8232_exp = -52LL;
		return std::make_tuple(_8224_y,_8232_exp);
	}
	_8224_y = _8214_x;
	_8232_exp = 0LL;
	return std::make_tuple(_8224_y,_8232_exp);
}



inline std::tuple<jule::F64,jule::F64> _1d191d583_sincos(jule::F64 _4619_x) {
	jule::F64 _4629_sin = jule::F64();
	jule::F64 _4639_cos = jule::F64();
	
	
	
	{
		if (!((_4619_x == 0LL))) { goto _case_end_4560977568; }
		_case_begin_4560977568:;
		{
			_4629_sin = _4619_x;
			_4639_cos = 1LL;
			return std::make_tuple(_4629_sin,_4639_cos);
		}
		goto _match_end_4560977424;
		_case_end_4560977568:;
		if (!((_1d186ec98_is_nan(_4619_x)) || (_1d186ec98_is_inf(_4619_x,0LL)))) { goto _case_end_4560977680; }
		_case_begin_4560977680:;
		{
			_4629_sin = static_cast<jule::F64>(_1d186ec98_nan());
			_4639_cos = static_cast<jule::F64>(_1d186ec98_nan());
			return std::make_tuple(_4629_sin,_4639_cos);
		}
		goto _match_end_4560977424;
		_case_end_4560977680:;
		_match_end_4560977424:;
	}
	jule::Bool _5914_sin_sign = false;
	jule::Bool _5928_cos_sign = false;
	std::tie(_5914_sin_sign,_5928_cos_sign) = std::make_tuple(false,false);
	if (_4619_x < 0LL) {
		_4619_x=static_cast<jule::F64>((-(_4619_x)));
		_5914_sin_sign=true;
	}
	jule::U64 _6513_j = 0LLU;
	jule::F64 _6613_y = 0LL;
	jule::F64 _6713_z = 0LL;
	if (_4619_x >= 536870912LLU) {
		std::tie(_6513_j,_6713_z) = _1d188230a_trig_reduce(_4619_x);
	} else {
		_6513_j=static_cast<jule::U64>(_4619_x * 1.2732395447351628);
		_6613_y=static_cast<jule::F64>(_6513_j);
		if ((_6513_j & 1LL) == 1LL) {
			(_6513_j)++;
			(_6613_y)++;
		}
		_6513_j&=7LL;
		_6713_z=static_cast<jule::F64>(((_4619_x - (_6613_y * 0.7853981256484985)) - (_6613_y * 0.00000003774894707930798)) - (_6613_y * 0.0000000000000026951514290790595));
	}
	if (_6513_j > 3LL) {
		_6513_j-=4LL;
		std::tie(_5914_sin_sign,_5928_cos_sign) = std::make_tuple((!(_5914_sin_sign)),(!(_5928_cos_sign)));
	}
	if (_6513_j > 1LL) {
		_5928_cos_sign=(!(_5928_cos_sign));
	}
	jule::F64 _899_zz = _6713_z * _6713_z;
	_4639_cos=static_cast<jule::F64>((1LL - (0.5 * _899_zz)) + ((_899_zz * _899_zz) * ((((((((((_1d180b88e__COS[0LL] * _899_zz) + _1d180b88e__COS[1LL]) * _899_zz) + _1d180b88e__COS[2LL]) * _899_zz) + _1d180b88e__COS[3LL]) * _899_zz) + _1d180b88e__COS[4LL]) * _899_zz) + _1d180b88e__COS[5LL])));
	_4629_sin=static_cast<jule::F64>(_6713_z + ((_6713_z * _899_zz) * ((((((((((_1d180b88e__SIN[0LL] * _899_zz) + _1d180b88e__SIN[1LL]) * _899_zz) + _1d180b88e__SIN[2LL]) * _899_zz) + _1d180b88e__SIN[3LL]) * _899_zz) + _1d180b88e__SIN[4LL]) * _899_zz) + _1d180b88e__SIN[5LL])));
	if ((_6513_j == 1LL) || (_6513_j == 2LL)) {
		std::tie(_4629_sin,_4639_cos) = std::make_tuple(_4639_cos,_4629_sin);
	}
	if (_5928_cos_sign) {
		_4639_cos=static_cast<jule::F64>((-(_4639_cos)));
	}
	if (_5914_sin_sign) {
		_4629_sin=static_cast<jule::F64>((-(_4629_sin)));
	}
	return std::make_tuple(_4629_sin,_4639_cos);
}



inline jule::F64 _1d18e0ee5_dim(jule::F64 _4412_x,jule::F64 _4420_y) {
	jule::F64 _509_v = _4412_x - _4420_y;
	if (_509_v <= 0LL) {
		return 0LL;
	}
	return _509_v;
}



inline jule::F64 _1d18e0ee5_max(jule::F64 _6612_x,jule::F64 _6620_y) {
	{
		if (!((_1d186ec98_is_inf(_6612_x,1LL)) || (_1d186ec98_is_inf(_6620_y,1LL)))) { goto _case_end_4561021584; }
		_case_begin_4561021584:;
		{
			return static_cast<jule::F64>(_1d186ec98_inf(1LL));
		}
		goto _match_end_4561021344;
		_case_end_4561021584:;
		if (!((_1d186ec98_is_nan(_6612_x)) || (_1d186ec98_is_nan(_6620_y)))) { goto _case_end_4561021712; }
		_case_begin_4561021712:;
		{
			return static_cast<jule::F64>(_1d186ec98_nan());
		}
		goto _match_end_4561021344;
		_case_end_4561021712:;
		if (!(((_6612_x == 0LL) && (_6612_x == _6620_y)))) { goto _case_end_4561021840; }
		_case_begin_4561021840:;
		{
			if (_1d1b685be_signbit(_6612_x)) {
				return _6620_y;
			}
			return _6612_x;
		}
		goto _match_end_4561021344;
		_case_end_4561021840:;
		_match_end_4561021344:;
	}
	if (_6612_x > _6620_y) {
		return _6612_x;
	}
	return _6620_y;
}



inline jule::F64 _1d18e0ee5_min(jule::F64 _9212_x,jule::F64 _9220_y) {
	{
		if (!((_1d186ec98_is_inf(_9212_x,-1LL)) || (_1d186ec98_is_inf(_9220_y,-1LL)))) { goto _case_end_4561028816; }
		_case_begin_4561028816:;
		{
			return static_cast<jule::F64>(_1d186ec98_inf(-1LL));
		}
		goto _match_end_4561028576;
		_case_end_4561028816:;
		if (!((_1d186ec98_is_nan(_9212_x)) || (_1d186ec98_is_nan(_9220_y)))) { goto _case_end_4561028944; }
		_case_begin_4561028944:;
		{
			return static_cast<jule::F64>(_1d186ec98_nan());
		}
		goto _match_end_4561028576;
		_case_end_4561028944:;
		if (!(((_9212_x == 0LL) && (_9212_x == _9220_y)))) { goto _case_end_4561029072; }
		_case_begin_4561029072:;
		{
			if (_1d1b685be_signbit(_9212_x)) {
				return _9212_x;
			}
			return _9220_y;
		}
		goto _match_end_4561028576;
		_case_end_4561029072:;
		_match_end_4561028576:;
	}
	if (_9212_x < _9220_y) {
		return _9212_x;
	}
	return _9220_y;
}



inline jule::F64 _1d1911125_log(jule::F64 _11112_x) {
	
	
	
	
	
	
	
	
	
	{
		if (!((_1d186ec98_is_nan(_11112_x)) || (_1d186ec98_is_inf(_11112_x,1LL)))) { goto _case_end_4561044336; }
		_case_begin_4561044336:;
		{
			return _11112_x;
		}
		goto _match_end_4561044144;
		_case_end_4561044336:;
		if (!((_11112_x < 0LL))) { goto _case_end_4561044464; }
		_case_begin_4561044464:;
		{
			return static_cast<jule::F64>(_1d186ec98_nan());
		}
		goto _match_end_4561044144;
		_case_end_4561044464:;
		if (!((_11112_x == 0LL))) { goto _case_end_4561044592; }
		_case_begin_4561044592:;
		{
			return static_cast<jule::F64>(_1d186ec98_inf(-1LL));
		}
		goto _match_end_4561044144;
		_case_end_4561044592:;
		_match_end_4561044144:;
	}
	jule::F64 _13314_f1;
	jule::Int _13322_ki;
	std::tie(_13314_f1,_13322_ki) = _1d184849c_frexp(_11112_x);
	if (_13314_f1 < 0.7071067811865476) {
		_13314_f1*=2LL;
		(_13322_ki)--;
	}
	jule::F64 _1389_f = _13314_f1 - 1LL;
	jule::F64 _1399_k = static_cast<jule::F64>(_13322_ki);
	jule::F64 _1429_s = jule::div(_1389_f,2LL + _1389_f);
	jule::F64 _1439_s2 = _1429_s * _1429_s;
	jule::F64 _1449_s4 = _1439_s2 * _1439_s2;
	jule::F64 _1459_t1 = _1439_s2 * (0.6666666666666735 + (_1449_s4 * (0.2857142874366239 + (_1449_s4 * (0.1818357216161805 + (_1449_s4 * 0.14798198605116586))))));
	jule::F64 _1469_t2 = _1449_s4 * (0.3999999999940942 + (_1449_s4 * (0.22222198432149784 + (_1449_s4 * 0.15313837699209373))));
	jule::F64 _1479_R = _1459_t1 + _1469_t2;
	jule::F64 _1489_hfsq = (0.5 * _1389_f) * _1389_f;
	return static_cast<jule::F64>((_1399_k * 0.6931471803691238) - ((_1489_hfsq - ((_1429_s * (_1489_hfsq + _1479_R)) + (_1399_k * 0.00000000019082149292705877))) - _1389_f));
}



inline jule::F64 _1d198bc83_expm1(jule::F64 _15618_x) {
	
	
	
	
	
	
	
	
	
	
	
	
	
	{
		if (!((_1d186ec98_is_inf(_15618_x,1LL)) || (_1d186ec98_is_nan(_15618_x)))) { goto _case_end_4561078080; }
		_case_begin_4561078080:;
		{
			return _15618_x;
		}
		goto _match_end_4561077904;
		_case_end_4561078080:;
		if (!((_1d186ec98_is_inf(_15618_x,-1LL)))) { goto _case_end_4561078208; }
		_case_begin_4561078208:;
		{
			return -1LL;
		}
		goto _match_end_4561077904;
		_case_end_4561078208:;
		_match_end_4561077904:;
	}
	jule::F64 _18013_absx = _15618_x;
	jule::Bool _18113_sign = false;
	if (_15618_x < 0LL) {
		_18013_absx=static_cast<jule::F64>((-(_18013_absx)));
		_18113_sign=true;
	}
	if (_18013_absx >= 38.816242111356935) {
		if (_18113_sign) {
			return -1LL;
		}
		if (_18013_absx >= 709.782712893384) {
			return static_cast<jule::F64>(_1d186ec98_inf(1LL));
		}
	}
	jule::F64 _19813_c = 0LL;
	jule::Int _19913_k = 0LL;
	if (_18013_absx > 0.34657359027997264) {
		jule::F64 _20117_hi = 0LL;
		jule::F64 _20217_lo = 0LL;
		if (_18013_absx < 1.0397207708399179) {
			if ((!(_18113_sign))) {
				_20117_hi=static_cast<jule::F64>(_15618_x - 0.6931471803691238);
				_20217_lo=0.00000000019082149292705877;
				_19913_k=1LL;
			} else {
				_20117_hi=static_cast<jule::F64>(_15618_x + 0.6931471803691238);
				_20217_lo=-0.00000000019082149292705877;
				_19913_k=-1LL;
			}
		} else {
			if ((!(_18113_sign))) {
				_19913_k=static_cast<jule::Int>((1.4426950408889634 * _15618_x) + 0.5);
			} else {
				_19913_k=static_cast<jule::Int>((1.4426950408889634 * _15618_x) - 0.5);
			}
			jule::F64 _21917_t = static_cast<jule::F64>(_19913_k);
			_20117_hi=static_cast<jule::F64>(_15618_x - (_21917_t * 0.6931471803691238));
			_20217_lo=static_cast<jule::F64>(_21917_t * 0.00000000019082149292705877);
		}
		_15618_x=static_cast<jule::F64>(_20117_hi - _20217_lo);
		_19813_c=static_cast<jule::F64>((_20117_hi - _15618_x) - _20217_lo);
	} else if (_18013_absx < 0.00000000000000005551115123125783) {
		return _15618_x;
	} else {
		_19913_k=0LL;
	}
	jule::F64 _2329_hfx = 0.5 * _15618_x;
	jule::F64 _2339_hxs = _15618_x * _2329_hfx;
	jule::F64 _2349_r1 = 1LL + (_2339_hxs * (-0.03333333333333313 + (_2339_hxs * (0.0015873015872548146 + (_2339_hxs * (-0.0000793650757867488 + (_2339_hxs * (0.000004008217827329362 + (_2339_hxs * -0.00000020109921818362437)))))))));
	jule::F64 _23513_t = 3LL - (_2349_r1 * _2329_hfx);
	jule::F64 _23613_e = _2339_hxs * jule::div(_2349_r1 - _23513_t,6LL - (_15618_x * _23513_t));
	if (_19913_k == 0LL) {
		return static_cast<jule::F64>(_15618_x - ((_15618_x * _23613_e) - _2339_hxs));
	}
	_23613_e=static_cast<jule::F64>((_15618_x * (_23613_e - _19813_c)) - _19813_c);
	_23613_e-=_2339_hxs;
	{
		if (!((_19913_k == -1LL))) { goto _case_end_4561112032; }
		_case_begin_4561112032:;
		{
			return static_cast<jule::F64>((0.5 * (_15618_x - _23613_e)) - 0.5);
		}
		goto _match_end_4561112496;
		_case_end_4561112032:;
		if (!((_19913_k == 1LL))) { goto _case_end_4561113472; }
		_case_begin_4561113472:;
		{
			if (_15618_x < -0.25) {
				return static_cast<jule::F64>(-2LL * (_23613_e - (_15618_x + 0.5)));
			}
			return static_cast<jule::F64>(1LL + (2LL * (_15618_x - _23613_e)));
		}
		goto _match_end_4561112496;
		_case_end_4561113472:;
		if (!((_19913_k <= -2LL) || (_19913_k > 56LL))) { goto _case_end_4561113632; }
		_case_begin_4561113632:;
		{
			jule::F64 _25117_y = 1LL - (_23613_e - _15618_x);
			_25117_y=static_cast<jule::F64>(_1d17de7ea_f64_from_bits(static_cast<jule::U64>(_1d17de7ea_f64_bits(_25117_y) + (static_cast<jule::U64>(_19913_k) << 52LL))));
			return static_cast<jule::F64>(_25117_y - 1LL);
		}
		goto _match_end_4561112496;
		_case_end_4561113632:;
		_match_end_4561112496:;
	}
	if (_19913_k < 20LL) {
		_23513_t=static_cast<jule::F64>(_1d17de7ea_f64_from_bits(static_cast<jule::U64>(4607182418800017408LL - (9007199254740992LL >> static_cast<jule::Uint>(_19913_k)))));
		jule::F64 _25717_y = _23513_t - (_23613_e - _15618_x);
		_25717_y=static_cast<jule::F64>(_1d17de7ea_f64_from_bits(static_cast<jule::U64>(_1d17de7ea_f64_bits(_25717_y) + (static_cast<jule::U64>(_19913_k) << 52LL))));
		return _25717_y;
	}
	_23513_t=static_cast<jule::F64>(_1d17de7ea_f64_from_bits(static_cast<jule::U64>(static_cast<jule::U64>(1023LL - _19913_k) << 52LL)));
	jule::F64 _26213_y = _15618_x - (_23613_e + _23513_t);
	(_26213_y)++;
	_26213_y=static_cast<jule::F64>(_1d17de7ea_f64_from_bits(static_cast<jule::U64>(_1d17de7ea_f64_bits(_26213_y) + (static_cast<jule::U64>(_19913_k) << 52LL))));
	return _26213_y;
}



inline jule::F64 _1d19740ab_abs(jule::F64 _4312_x) {
	return static_cast<jule::F64>(_1d17de7ea_f64_from_bits(static_cast<jule::U64>(_1d17de7ea_f64_bits(_4312_x) & 9223372036854775807LLU)));
}



inline jule::F64 _1d199d15c_j1(jule::F64 _10515_x) {
	
	
	
	
	
	
	
	
	
	
	
	{
		if (!((_1d186ec98_is_nan(_10515_x)))) { goto _case_end_4561145056; }
		_case_begin_4561145056:;
		{
			return _10515_x;
		}
		goto _match_end_4561144880;
		_case_end_4561145056:;
		if (!((_1d186ec98_is_inf(_10515_x,0LL)) || (_10515_x == 0LL))) { goto _case_end_4561145184; }
		_case_begin_4561145184:;
		{
			return 0LL;
		}
		goto _match_end_4561144880;
		_case_end_4561145184:;
		_match_end_4561144880:;
	}
	jule::Bool _12613_sign = false;
	if (_10515_x < 0LL) {
		_10515_x=static_cast<jule::F64>((-(_10515_x)));
		_12613_sign=true;
	}
	if (_10515_x >= 2LL) {
		jule::F64 _13214_s;
		jule::F64 _13217_c;
		std::tie(_13214_s,_13217_c) = _1d191d583_sincos(_10515_x);
		jule::F64 _13317_ss = (-(_13214_s)) - _13217_c;
		jule::F64 _13417_cc = _13214_s - _13217_c;
		if (_10515_x < 89884656743115790000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) {
			jule::F64 _13817_z = _1d180b88e_cos(static_cast<jule::F64>(_10515_x + _10515_x));
			if ((_13214_s * _13217_c) > 0LL) {
				_13417_cc=static_cast<jule::F64>(jule::div(_13817_z,_13317_ss));
			} else {
				_13317_ss=static_cast<jule::F64>(jule::div(_13817_z,_13417_cc));
			}
		}
		jule::F64 _14917_z = 0LL;
		if (_10515_x > 5188146770730811392LL) {
			_14917_z=static_cast<jule::F64>(jule::div(0.5641895835477563 * _13417_cc,_1d1d96b60_sqrt(_10515_x)));
		} else {
			jule::F64 _15317_u = _1d199d15c_pone(_10515_x);
			jule::F64 _15417_v = _1d199d15c_qone(_10515_x);
			_14917_z=static_cast<jule::F64>(jule::div(0.5641895835477563 * ((_15317_u * _13417_cc) - (_15417_v * _13317_ss)),_1d1d96b60_sqrt(_10515_x)));
		}
		if (_12613_sign) {
			return static_cast<jule::F64>((-(_14917_z)));
		}
		return _14917_z;
	}
	if (_10515_x < 0.000000007450580596923828) {
		return static_cast<jule::F64>(0.5 * _10515_x);
	}
	jule::F64 _16613_z = _10515_x * _10515_x;
	jule::F64 _16713_r = _16613_z * (-0.0625 + (_16613_z * (0.001407056669551897 + (_16613_z * (-0.00001599556310840356 + (_16613_z * 0.000000049672799960958445))))));
	jule::F64 _1689_s = 1LL + (_16613_z * (0.019153759953836346 + (_16613_z * (0.00018594678558863092 + (_16613_z * (0.0000011771846404262368 + (_16613_z * (0.0000000050463625707621704 + (_16613_z * 0.000000000012354227442613791)))))))));
	_16713_r*=_10515_x;
	_16613_z=static_cast<jule::F64>((0.5 * _10515_x) + jule::div(_16713_r,_1689_s));
	if (_12613_sign) {
		return static_cast<jule::F64>((-(_16613_z)));
	}
	return _16613_z;
}



inline jule::F64 _1d199d15c_y1(jule::F64 _18411_x) {
	
	
	
	
	
	
	
	
	
	
	
	
	{
		if (!((_18411_x < 0LL) || (_1d186ec98_is_nan(_18411_x)))) { goto _case_end_4561187760; }
		_case_begin_4561187760:;
		{
			return static_cast<jule::F64>(_1d186ec98_nan());
		}
		goto _match_end_4561187568;
		_case_end_4561187760:;
		if (!((_1d186ec98_is_inf(_18411_x,1LL)))) { goto _case_end_4561187888; }
		_case_begin_4561187888:;
		{
			return 0LL;
		}
		goto _match_end_4561187568;
		_case_end_4561187888:;
		if (!((_18411_x == 0LL))) { goto _case_end_4561188016; }
		_case_begin_4561188016:;
		{
			return static_cast<jule::F64>(_1d186ec98_inf(-1LL));
		}
		goto _match_end_4561187568;
		_case_end_4561188016:;
		_match_end_4561187568:;
	}
	if (_18411_x >= 2LL) {
		jule::F64 _20814_s;
		jule::F64 _20817_c;
		std::tie(_20814_s,_20817_c) = _1d191d583_sincos(_18411_x);
		jule::F64 _20917_ss = (-(_20814_s)) - _20817_c;
		jule::F64 _21017_cc = _20814_s - _20817_c;
		if (_18411_x < 89884656743115790000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) {
			jule::F64 _21417_z = _1d180b88e_cos(static_cast<jule::F64>(_18411_x + _18411_x));
			if ((_20814_s * _20817_c) > 0LL) {
				_21017_cc=static_cast<jule::F64>(jule::div(_21417_z,_20917_ss));
			} else {
				_20917_ss=static_cast<jule::F64>(jule::div(_21417_z,_21017_cc));
			}
		}
		jule::F64 _23217_z = 0LL;
		if (_18411_x > 5188146770730811392LL) {
			_23217_z=static_cast<jule::F64>(jule::div(0.5641895835477563 * _20917_ss,_1d1d96b60_sqrt(_18411_x)));
		} else {
			jule::F64 _23617_u = _1d199d15c_pone(_18411_x);
			jule::F64 _23717_v = _1d199d15c_qone(_18411_x);
			_23217_z=static_cast<jule::F64>(jule::div(0.5641895835477563 * ((_23617_u * _20917_ss) + (_23717_v * _21017_cc)),_1d1d96b60_sqrt(_18411_x)));
		}
		return _23217_z;
	}
	if (_18411_x <= 0.00000000000000005551115123125783) {
		return static_cast<jule::F64>(jule::div(-0.6366197723675814,_18411_x));
	}
	jule::F64 _2459_z = _18411_x * _18411_x;
	jule::F64 _2469_u = -0.19605709064623894 + (_2459_z * (0.05044387166398113 + (_2459_z * (-0.0019125689587576355 + (_2459_z * (0.00002352526005616105 + (_2459_z * -0.00000009190991580398789)))))));
	jule::F64 _2479_v = 1LL + (_2459_z * (0.01991673182366499 + (_2459_z * (0.00020255258102513517 + (_2459_z * (0.0000013560880109751623 + (_2459_z * (0.000000006227414523646215 + (_2459_z * 0.000000000016655924620799208)))))))));
	return static_cast<jule::F64>((_18411_x * jule::div(_2469_u,_2479_v)) + (0.6366197723675814 * ((_1d199d15c_j1(_18411_x) * _1d1911125_log(_18411_x)) - jule::div(1LL,_18411_x))));
}



inline jule::F64 _1d199d15c_pone(jule::F64 _3289_x) {
	jule::Array<jule::F64,6>* _32913_p = nullptr;
	jule::Array<jule::F64,5>* _33013_q = nullptr;
	if (_3289_x >= 8LL) {
		_32913_p=(&(_1d199d15c_P_1R8));
		_33013_q=(&(_1d199d15c_P_1S8));
	} else if (_3289_x >= 4.5454) {
		_32913_p=(&(_1d199d15c_P_1R5));
		_33013_q=(&(_1d199d15c_P_1S5));
	} else if (_3289_x >= 2.8571) {
		_32913_p=(&(_1d199d15c_P_1R3));
		_33013_q=(&(_1d199d15c_P_1S3));
	} else if (_3289_x >= 2LL) {
		_32913_p=(&(_1d199d15c_P_1R2));
		_33013_q=(&(_1d199d15c_P_1S2));
	}
	{
		jule::F64 _34513_z = jule::div(1LL,_3289_x * _3289_x);
		jule::F64 _34613_r = (*(_32913_p))[0LL] + (_34513_z * ((*(_32913_p))[1LL] + (_34513_z * ((*(_32913_p))[2LL] + (_34513_z * ((*(_32913_p))[3LL] + (_34513_z * ((*(_32913_p))[4LL] + (_34513_z * (*(_32913_p))[5LL])))))))));
		jule::F64 _34713_s = 1LL + (_34513_z * ((*(_33013_q))[0LL] + (_34513_z * ((*(_33013_q))[1LL] + (_34513_z * ((*(_33013_q))[2LL] + (_34513_z * ((*(_33013_q))[3LL] + (_34513_z * (*(_33013_q))[4LL])))))))));
		return static_cast<jule::F64>(1LL + jule::div(_34613_r,_34713_s));
	}
}



inline jule::F64 _1d199d15c_qone(jule::F64 _4339_x) {
	jule::Array<jule::F64,6>* _43413_p = nullptr;
	jule::Array<jule::F64,6>* _43513_q = nullptr;
	if (_4339_x >= 8LL) {
		_43413_p=(&(_1d199d15c_Q_1R8));
		_43513_q=(&(_1d199d15c_Q_1S8));
	} else if (_4339_x >= 4.5454) {
		_43413_p=(&(_1d199d15c_Q_1R5));
		_43513_q=(&(_1d199d15c_Q_1S5));
	} else if (_4339_x >= 2.8571) {
		_43413_p=(&(_1d199d15c_Q_1R3));
		_43513_q=(&(_1d199d15c_Q_1S3));
	} else if (_4339_x >= 2LL) {
		_43413_p=(&(_1d199d15c_Q_1R2));
		_43513_q=(&(_1d199d15c_Q_1S2));
	}
	{
		jule::F64 _45013_z = jule::div(1LL,_4339_x * _4339_x);
		jule::F64 _45113_r = (*(_43413_p))[0LL] + (_45013_z * ((*(_43413_p))[1LL] + (_45013_z * ((*(_43413_p))[2LL] + (_45013_z * ((*(_43413_p))[3LL] + (_45013_z * ((*(_43413_p))[4LL] + (_45013_z * (*(_43413_p))[5LL])))))))));
		jule::F64 _45213_s = 1LL + (_45013_z * ((*(_43513_q))[0LL] + (_45013_z * ((*(_43513_q))[1LL] + (_45013_z * ((*(_43513_q))[2LL] + (_45013_z * ((*(_43513_q))[3LL] + (_45013_z * ((*(_43513_q))[4LL] + (_45013_z * (*(_43513_q))[5LL])))))))))));
		return static_cast<jule::F64>(jule::div(0.375 + jule::div(_45113_r,_45213_s),_4339_x));
	}
}



inline jule::U64 _1d1a6e34e_zero(jule::U64 _409_x) {
	if (_409_x == 0LL) {
		return 1LL;
	}
	return 0LL;
}



inline jule::U64 _1d1a6e34e_nonzero(jule::U64 _4912_x) {
	if (_4912_x != 0LL) {
		return 1LL;
	}
	return 0LL;
}



inline std::tuple<jule::U64,jule::U64> _1d1a6e34e_shl(jule::U64 _588_u1,jule::U64 _5817_u2,jule::Uint _5826_n) {
	jule::U64 _5837_r1 = jule::U64();
	jule::U64 _5846_r2 = jule::U64();
	_5837_r1=static_cast<jule::U64>(((_588_u1 << _5826_n) | (_5817_u2 >> (64LL - _5826_n))) | (_5817_u2 << (_5826_n - 64LL)));
	_5846_r2=static_cast<jule::U64>(_5817_u2 << _5826_n);
	return std::make_tuple(_5837_r1,_5846_r2);
}



inline std::tuple<jule::U64,jule::U64> _1d1a6e34e_shr(jule::U64 _648_u1,jule::U64 _6417_u2,jule::Uint _6426_n) {
	jule::U64 _6437_r1 = jule::U64();
	jule::U64 _6446_r2 = jule::U64();
	jule::U64 _7113_shift = _648_u1;
	jule::Uint _7213_shift_n = _6426_n - 64LL;
	_iter_begin_4561277408:;
	if (!((_7113_shift > 0LL) && (_7213_shift_n > 0LL))) { goto _iter_end_4561277408; }
	{
		(_7213_shift_n)--;
		_7113_shift>>=1LL;
	}
	_iter_next_4561277408:;
	goto _iter_begin_4561277408;
	_iter_end_4561277408:;
	_6446_r2=static_cast<jule::U64>(((_6417_u2 >> _6426_n) | (_648_u1 << (64LL - _6426_n))) | _7113_shift);
	_6437_r1=static_cast<jule::U64>(_648_u1 >> _6426_n);
	return std::make_tuple(_6437_r1,_6446_r2);
}



inline std::tuple<jule::U64,jule::U64> _1d1a6e34e_shrcompress(jule::U64 _8716_u1,jule::U64 _8725_u2,jule::Uint _8734_n) {
	jule::U64 _8745_r1 = jule::U64();
	jule::U64 _8754_r2 = jule::U64();
	{
		if (!((_8734_n == 0LL))) { goto _case_end_4561284880; }
		_case_begin_4561284880:;
		{
			_8745_r1 = _8716_u1;
			_8754_r2 = _8725_u2;
			return std::make_tuple(_8745_r1,_8754_r2);
		}
		goto _match_end_4561284592;
		_case_end_4561284880:;
		if (!((_8734_n == 64LL))) { goto _case_end_4561285008; }
		_case_begin_4561285008:;
		{
			_8745_r1 = 0LL;
			_8754_r2 = static_cast<jule::U64>(_8716_u1 | _1d1a6e34e_nonzero(_8725_u2));
			return std::make_tuple(_8745_r1,_8754_r2);
		}
		goto _match_end_4561284592;
		_case_end_4561285008:;
		if (!((_8734_n >= 128LL))) { goto _case_end_4561285136; }
		_case_begin_4561285136:;
		{
			_8745_r1 = 0LL;
			_8754_r2 = static_cast<jule::U64>(_1d1a6e34e_nonzero(static_cast<jule::U64>(_8716_u1 | _8725_u2)));
			return std::make_tuple(_8745_r1,_8754_r2);
		}
		goto _match_end_4561284592;
		_case_end_4561285136:;
		if (!((_8734_n < 64LL))) { goto _case_end_4561285264; }
		_case_begin_4561285264:;
		{
			std::tie(_8745_r1,_8754_r2) = _1d1a6e34e_shr(_8716_u1,_8725_u2,_8734_n);
			_8754_r2|=static_cast<jule::U64>(_1d1a6e34e_nonzero(static_cast<jule::U64>(_8725_u2 & ((1LL << _8734_n) - 1LL))));
		}
		goto _match_end_4561284592;
		_case_end_4561285264:;
		if (!((_8734_n < 128LL))) { goto _case_end_4561285392; }
		_case_begin_4561285392:;
		{
			std::tie(_8745_r1,_8754_r2) = _1d1a6e34e_shr(_8716_u1,_8725_u2,_8734_n);
			_8754_r2|=static_cast<jule::U64>(_1d1a6e34e_nonzero(static_cast<jule::U64>((_8716_u1 & ((1LL << (_8734_n - 64LL)) - 1LL)) | _8725_u2)));
		}
		goto _match_end_4561284592;
		_case_end_4561285392:;
		_match_end_4561284592:;
	}
	return std::make_tuple(_8745_r1,_8754_r2);
}



inline jule::I32 _1d1a6e34e_lz(jule::U64 _1057_u1,jule::U64 _10516_u2) {
	jule::I32 _10527_l = jule::I32();
	_10527_l=static_cast<jule::I32>(_1d2038890_leading_zeros64(_1057_u1));
	if (_10527_l == 64LL) {
		_10527_l+=static_cast<jule::I32>(_1d2038890_leading_zeros64(_10516_u2));
	}
	_10527_l = _10527_l;
	return _10527_l;
}



inline std::tuple<jule::U32,jule::I32,jule::U64> _1d1a6e34e_split(jule::U64 _11610_b) {
	jule::U32 _11620_sign = jule::U32();
	jule::I32 _11631_exp = jule::I32();
	jule::U64 _11641_mantissa = jule::U64();
	_11620_sign=static_cast<jule::U32>(_11610_b >> 63LL);
	_11631_exp=static_cast<jule::I32>(static_cast<jule::I32>(_11610_b >> 52LL) & 2047LL);
	_11641_mantissa=static_cast<jule::U64>(_11610_b & 4503599627370495LLU);
	if (_11631_exp == 0LL) {
		jule::Uint _12313_shift = static_cast<jule::Uint>(_1d2038890_leading_zeros64(_11641_mantissa) - 11LL);
		_11641_mantissa<<=_12313_shift;
		_11631_exp=static_cast<jule::I32>(1LL - static_cast<jule::I32>(_12313_shift));
	} else {
		_11641_mantissa|=4503599627370496LLU;
	}
	return std::make_tuple(_11620_sign,_11631_exp,_11641_mantissa);
}



inline jule::F64 _1d1a6e34e_fma(jule::F64 _13512_x,jule::F64 _13520_y,jule::F64 _13528_z) {
	jule::U64 _13610_bx = _1d17de7ea_f64_bits(_13512_x);
	jule::U64 _13614_by = _1d17de7ea_f64_bits(_13520_y);
	jule::U64 _13618_bz = _1d17de7ea_f64_bits(_13528_z);
	std::tie(_13610_bx,_13614_by,_13618_bz) = std::make_tuple(_1d17de7ea_f64_bits(_13512_x),_1d17de7ea_f64_bits(_13520_y),_1d17de7ea_f64_bits(_13528_z));
	if (((((_13512_x == 0LL) || (_13520_y == 0LL)) || (_13528_z == 0LL)) || ((_13610_bx & 9218868437227405312LL) == 9218868437227405312LL)) || ((_13614_by & 9218868437227405312LL) == 9218868437227405312LL)) {
		return static_cast<jule::F64>((_13512_x * _13520_y) + _13528_z);
	}
	if ((_13618_bz & 9218868437227405312LL) == 9218868437227405312LL) {
		return _13528_z;
	}
	jule::U32 _15010_xs;
	jule::I32 _15014_xe;
	jule::U64 _15018_xm;
	std::tie(_15010_xs,_15014_xe,_15018_xm) = _1d1a6e34e_split(_13610_bx);
	jule::U32 _15110_ys;
	jule::I32 _15114_ye;
	jule::U64 _15118_ym;
	std::tie(_15110_ys,_15114_ye,_15118_ym) = _1d1a6e34e_split(_13614_by);
	jule::U32 _15214_zs;
	jule::I32 _15222_ze;
	jule::U64 _15226_zm;
	std::tie(_15214_zs,_15222_ze,_15226_zm) = _1d1a6e34e_split(_13618_bz);
	jule::I32 _15613_pe = ((_15014_xe + _15114_ye) - 1023LL) + 1LL;
	jule::U64 _16114_pm1;
	jule::U64 _16123_pm2;
	std::tie(_16114_pm1,_16123_pm2) = _1d2038890_mul64(static_cast<jule::U64>(_15018_xm << 10LL),static_cast<jule::U64>(_15118_ym << 11LL));
	jule::U64 _16214_zm1 = _15226_zm << 10LL;
	jule::U64 _16223_zm2 = static_cast<jule::U64>(0LLU);
	std::tie(_16214_zm1,_16223_zm2) = std::make_tuple(_15226_zm << 10LL,static_cast<jule::U64>(0LLU));
	jule::U32 _16313_ps = _15010_xs ^ _15110_ys;
	jule::Uint _1669_is62zero = static_cast<jule::Uint>(((~(_16114_pm1)) >> 62LL) & 1LL);
	std::tie(_16114_pm1,_16123_pm2) = _1d1a6e34e_shl(_16114_pm1,_16123_pm2,_1669_is62zero);
	_15613_pe-=static_cast<jule::I32>(_1669_is62zero);
	if ((_15613_pe < _15222_ze) || ((_15613_pe == _15222_ze) && (_16114_pm1 < _16214_zm1))) {
		std::tie(_16313_ps,_15613_pe,_16114_pm1,_16123_pm2,_15214_zs,_15222_ze,_16214_zm1,_16223_zm2) = std::make_tuple(_15214_zs,_15222_ze,_16214_zm1,_16223_zm2,_16313_ps,static_cast<jule::I32>(_15613_pe),_16114_pm1,_16123_pm2);
	}
	std::tie(_16214_zm1,_16223_zm2) = _1d1a6e34e_shrcompress(_16214_zm1,_16223_zm2,static_cast<jule::Uint>(_15613_pe - _15222_ze));
	jule::U64 _17913_m = 0LLU;
	jule::U64 _18013_c = 0LLU;
	if (_16313_ps == _15214_zs) {
		std::tie(_16123_pm2,_18013_c) = _1d2038890_add64(_16123_pm2,_16223_zm2,0LLU);
		std::tie(_16114_pm1,std::ignore) = _1d2038890_add64(_16114_pm1,_16214_zm1,_18013_c);
		_15613_pe-=static_cast<jule::I32>((~(_16114_pm1)) >> 63LL);
		std::tie(_16114_pm1,_17913_m) = _1d1a6e34e_shrcompress(_16114_pm1,_16123_pm2,static_cast<jule::Uint>(64LL + (_16114_pm1 >> 63LL)));
	} else {
		std::tie(_16123_pm2,_18013_c) = _1d2038890_sub64(_16123_pm2,_16223_zm2,0LLU);
		std::tie(_16114_pm1,std::ignore) = _1d2038890_sub64(_16114_pm1,_16214_zm1,_18013_c);
		jule::I32 _19113_nz = _1d1a6e34e_lz(_16114_pm1,_16123_pm2);
		_15613_pe-=_19113_nz;
		std::tie(_17913_m,_16123_pm2) = _1d1a6e34e_shl(_16114_pm1,_16123_pm2,static_cast<jule::Uint>(_19113_nz - 1LL));
		_17913_m|=static_cast<jule::U64>(_1d1a6e34e_nonzero(_16123_pm2));
	}
	if ((_15613_pe > 2045LL) || ((_15613_pe == 2045LL) && (((_17913_m + 512LLU) >> 63LL) == 1LL))) {
		return static_cast<jule::F64>(_1d17de7ea_f64_from_bits(static_cast<jule::U64>((static_cast<jule::U64>(_16313_ps) << 63LL) | 9218868437227405312LL)));
	}
	if (_15613_pe < 0LL) {
		jule::Uint _20313_n = static_cast<jule::Uint>((-(_15613_pe)));
		_17913_m=static_cast<jule::U64>((_17913_m >> _20313_n) | _1d1a6e34e_nonzero(static_cast<jule::U64>(_17913_m & ((1LL << _20313_n) - 1LL))));
		_15613_pe=0LL;
	}
	_17913_m=static_cast<jule::U64>(((_17913_m + 512LLU) >> 10LL) & (~(_1d1a6e34e_zero(static_cast<jule::U64>((_17913_m & 1023LLU) ^ 512LLU)))));
	_15613_pe&=static_cast<jule::I32>((-(static_cast<jule::I32>(_1d1a6e34e_nonzero(_17913_m)))));
	return static_cast<jule::F64>(_1d17de7ea_f64_from_bits(static_cast<jule::U64>(((static_cast<jule::U64>(_16313_ps) << 63LL) + (static_cast<jule::U64>(_15613_pe) << 52LL)) + _17913_m)));
}



inline std::tuple<jule::F64,jule::F64> _1d19edad6_modf(jule::F64 _4413_f) {
	jule::F64 _4423_integer = jule::F64();
	jule::F64 _4437_frac = jule::F64();
	
	jule::F64 _469_abs_f = _1d19740ab_abs(_4413_f);
	jule::F64 _4713_i = 0LL;
	if (_469_abs_f > 4503599627370496LL) {
		_4713_i=_4413_f;
	} else {
		_4713_i=static_cast<jule::F64>(_469_abs_f + 4503599627370496LL);
		_4713_i-=4503599627370496LL;
		_iter_begin_4561384512:;
		if (!(_4713_i > _469_abs_f)) { goto _iter_end_4561384512; }
		{
			(_4713_i)--;
		}
		_iter_next_4561384512:;
		goto _iter_begin_4561384512;
		_iter_end_4561384512:;
		if (_4413_f < 0LL) {
			_4713_i=static_cast<jule::F64>((-(_4713_i)));
		}
	}
	_4423_integer = _4713_i;
	_4437_frac = static_cast<jule::F64>(_4413_f - _4713_i);
	return std::make_tuple(_4423_integer,_4437_frac);
}



inline jule::F64 _1d1969975_log10(jule::F64 _4014_x) {
	return static_cast<jule::F64>(_1d1911125_log(_4014_x) * 0.43429448190325176);
}



inline jule::F64 _1d1969975_log2(jule::F64 _4413_x) {
	jule::F64 _4510_frac;
	jule::Int _4516_exp;
	std::tie(_4510_frac,_4516_exp) = _1d184849c_frexp(_4413_x);
	if (_4510_frac == 0.5) {
		return static_cast<jule::F64>(_4516_exp - 1LL);
	}
	return static_cast<jule::F64>((_1d1911125_log(_4510_frac) * 1.4426950408889634) + static_cast<jule::F64>(_4516_exp));
}



inline jule::F64 _1d1a8acb6_hypot(jule::F64 _5018_p,jule::F64 _5030_q) {
	{
		if (!((_1d186ec98_is_inf(_5018_p,0LL)) || (_1d186ec98_is_inf(_5030_q,0LL)))) { goto _case_end_4561397168; }
		_case_begin_4561397168:;
		{
			return static_cast<jule::F64>(_1d186ec98_inf(1LL));
		}
		goto _match_end_4561396944;
		_case_end_4561397168:;
		if (!((_1d186ec98_is_nan(_5018_p)) || (_1d186ec98_is_nan(_5030_q)))) { goto _case_end_4561397296; }
		_case_begin_4561397296:;
		{
			return static_cast<jule::F64>(_1d186ec98_nan());
		}
		goto _match_end_4561396944;
		_case_end_4561397296:;
		_match_end_4561396944:;
	}
	std::tie(_5018_p,_5030_q) = std::make_tuple(static_cast<jule::F64>(_1d19740ab_abs(_5018_p)),static_cast<jule::F64>(_1d19740ab_abs(_5030_q)));
	if (_5018_p < _5030_q) {
		std::tie(_5018_p,_5030_q) = std::make_tuple(_5030_q,_5018_p);
	}
	if (_5018_p == 0LL) {
		return 0LL;
	}
	_5030_q=static_cast<jule::F64>(jule::div(_5030_q,_5018_p));
	return static_cast<jule::F64>(_5018_p * _1d1d96b60_sqrt(static_cast<jule::F64>(1LL + (_5030_q * _5030_q))));
}



inline jule::F64 _1d1acb9a5_j0(jule::F64 _10715_x) {
	
	
	
	
	
	
	
	
	
	
	
	{
		if (!((_1d186ec98_is_nan(_10715_x)))) { goto _case_end_4561417424; }
		_case_begin_4561417424:;
		{
			return _10715_x;
		}
		goto _match_end_4561417232;
		_case_end_4561417424:;
		if (!((_1d186ec98_is_inf(_10715_x,0LL)))) { goto _case_end_4561417552; }
		_case_begin_4561417552:;
		{
			return 0LL;
		}
		goto _match_end_4561417232;
		_case_end_4561417552:;
		if (!((_10715_x == 0LL))) { goto _case_end_4561417680; }
		_case_begin_4561417680:;
		{
			return 1LL;
		}
		goto _match_end_4561417232;
		_case_end_4561417680:;
		_match_end_4561417232:;
	}
	_10715_x=static_cast<jule::F64>(_1d19740ab_abs(_10715_x));
	if (_10715_x >= 2LL) {
		jule::F64 _13214_s;
		jule::F64 _13217_c;
		std::tie(_13214_s,_13217_c) = _1d191d583_sincos(_10715_x);
		jule::F64 _13317_ss = _13214_s - _13217_c;
		jule::F64 _13417_cc = _13214_s + _13217_c;
		if (_10715_x < 89884656743115790000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) {
			jule::F64 _13817_z = (-(_1d180b88e_cos(static_cast<jule::F64>(_10715_x + _10715_x))));
			if ((_13214_s * _13217_c) < 0LL) {
				_13417_cc=static_cast<jule::F64>(jule::div(_13817_z,_13317_ss));
			} else {
				_13317_ss=static_cast<jule::F64>(jule::div(_13817_z,_13417_cc));
			}
		}
		jule::F64 _14917_z = 0LL;
		if (_10715_x > 5188146770730811392LL) {
			_14917_z=static_cast<jule::F64>(jule::div(0.5641895835477563 * _13417_cc,_1d1d96b60_sqrt(_10715_x)));
		} else {
			jule::F64 _15317_u = _1d1acb9a5_pzero(_10715_x);
			jule::F64 _15417_v = _1d1acb9a5_qzero(_10715_x);
			_14917_z=static_cast<jule::F64>(jule::div(0.5641895835477563 * ((_15317_u * _13417_cc) - (_15417_v * _13317_ss)),_1d1d96b60_sqrt(_10715_x)));
		}
		return _14917_z;
	}
	if (_10715_x < 0.0001220703125) {
		if (_10715_x < 0.000000007450580596923828) {
			return 1LL;
		}
		return static_cast<jule::F64>(1LL - ((0.25 * _10715_x) * _10715_x));
	}
	jule::F64 _1659_z = _10715_x * _10715_x;
	jule::F64 _1669_r = _1659_z * (0.015624999999999995 + (_1659_z * (-0.00018997929423885472 + (_1659_z * (0.0000018295404953270067 + (_1659_z * -0.000000004618326885321032))))));
	jule::F64 _1679_s = 1LL + (_1659_z * (0.015619102946489001 + (_1659_z * (0.00011692678466333745 + (_1659_z * (0.0000005135465502073181 + (_1659_z * 0.0000000011661400333379)))))));
	if (_10715_x < 1LL) {
		return static_cast<jule::F64>(1LL + (_1659_z * (-0.25 + jule::div(_1669_r,_1679_s))));
	}
	jule::F64 _1719_u = 0.5 * _10715_x;
	return static_cast<jule::F64>(((1LL + _1719_u) * (1LL - _1719_u)) + (_1659_z * jule::div(_1669_r,_1679_s)));
}



inline jule::F64 _1d1acb9a5_y0(jule::F64 _18211_x) {
	
	
	
	
	
	
	
	
	
	
	
	
	
	{
		if (!((_18211_x < 0LL) || (_1d186ec98_is_nan(_18211_x)))) { goto _case_end_4561461536; }
		_case_begin_4561461536:;
		{
			return static_cast<jule::F64>(_1d186ec98_nan());
		}
		goto _match_end_4561461344;
		_case_end_4561461536:;
		if (!((_1d186ec98_is_inf(_18211_x,1LL)))) { goto _case_end_4561461664; }
		_case_begin_4561461664:;
		{
			return 0LL;
		}
		goto _match_end_4561461344;
		_case_end_4561461664:;
		if (!((_18211_x == 0LL))) { goto _case_end_4561461792; }
		_case_begin_4561461792:;
		{
			return static_cast<jule::F64>(_1d186ec98_inf(-1LL));
		}
		goto _match_end_4561461344;
		_case_end_4561461792:;
		_match_end_4561461344:;
	}
	if (_18211_x >= 2LL) {
		jule::F64 _21814_s;
		jule::F64 _21817_c;
		std::tie(_21814_s,_21817_c) = _1d191d583_sincos(_18211_x);
		jule::F64 _21917_ss = _21814_s - _21817_c;
		jule::F64 _22017_cc = _21814_s + _21817_c;
		if (_18211_x < 89884656743115790000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) {
			jule::F64 _22717_z = (-(_1d180b88e_cos(static_cast<jule::F64>(_18211_x + _18211_x))));
			if ((_21814_s * _21817_c) < 0LL) {
				_22017_cc=static_cast<jule::F64>(jule::div(_22717_z,_21917_ss));
			} else {
				_21917_ss=static_cast<jule::F64>(jule::div(_22717_z,_22017_cc));
			}
		}
		jule::F64 _23417_z = 0LL;
		if (_18211_x > 5188146770730811392LL) {
			_23417_z=static_cast<jule::F64>(jule::div(0.5641895835477563 * _21917_ss,_1d1d96b60_sqrt(_18211_x)));
		} else {
			jule::F64 _23817_u = _1d1acb9a5_pzero(_18211_x);
			jule::F64 _23917_v = _1d1acb9a5_qzero(_18211_x);
			_23417_z=static_cast<jule::F64>(jule::div(0.5641895835477563 * ((_23817_u * _21917_ss) + (_23917_v * _22017_cc)),_1d1d96b60_sqrt(_18211_x)));
		}
		return _23417_z;
	}
	if (_18211_x <= 0.000000007450580596923828) {
		return static_cast<jule::F64>(-0.07380429510868723 + (0.6366197723675814 * _1d1911125_log(_18211_x)));
	}
	jule::F64 _2479_z = _18211_x * _18211_x;
	jule::F64 _2489_u = -0.07380429510868723 + (_2479_z * (0.17666645250918112 + (_2479_z * (-0.01381856719455969 + (_2479_z * (0.00034745343209368365 + (_2479_z * (-0.0000038140705372436416 + (_2479_z * (0.000000019559013703502292 + (_2479_z * -0.00000000003982051941321034)))))))))));
	jule::F64 _2499_v = 1LL + (_2479_z * (0.01273048348341237 + (_2479_z * (0.00007600686273503533 + (_2479_z * (0.0000002591508518404578 + (_2479_z * 0.00000000044111031133267547)))))));
	return static_cast<jule::F64>(jule::div(_2489_u,_2499_v) + ((0.6366197723675814 * _1d1acb9a5_j0(_18211_x)) * _1d1911125_log(_18211_x)));
}



inline jule::F64 _1d1acb9a5_pzero(jule::F64 _33010_x) {
	jule::Array<jule::F64,6>* _33113_p = nullptr;
	jule::Array<jule::F64,5>* _33213_q = nullptr;
	if (_33010_x >= 8LL) {
		_33113_p=(&(_1d1acb9a5_P_0R8));
		_33213_q=(&(_1d1acb9a5_P_0S8));
	} else if (_33010_x >= 4.5454) {
		_33113_p=(&(_1d1acb9a5_P_0R5));
		_33213_q=(&(_1d1acb9a5_P_0S5));
	} else if (_33010_x >= 2.8571) {
		_33113_p=(&(_1d1acb9a5_P_0R3));
		_33213_q=(&(_1d1acb9a5_P_0S3));
	} else if (_33010_x >= 2LL) {
		_33113_p=(&(_1d1acb9a5_P_0R2));
		_33213_q=(&(_1d1acb9a5_P_0S2));
	}
	{
		jule::F64 _34713_z = jule::div(1LL,_33010_x * _33010_x);
		jule::F64 _34813_r = (*(_33113_p))[0LL] + (_34713_z * ((*(_33113_p))[1LL] + (_34713_z * ((*(_33113_p))[2LL] + (_34713_z * ((*(_33113_p))[3LL] + (_34713_z * ((*(_33113_p))[4LL] + (_34713_z * (*(_33113_p))[5LL])))))))));
		jule::F64 _34913_s = 1LL + (_34713_z * ((*(_33213_q))[0LL] + (_34713_z * ((*(_33213_q))[1LL] + (_34713_z * ((*(_33213_q))[2LL] + (_34713_z * ((*(_33213_q))[3LL] + (_34713_z * (*(_33213_q))[4LL])))))))));
		return static_cast<jule::F64>(1LL + jule::div(_34813_r,_34913_s));
	}
}



inline jule::F64 _1d1acb9a5_qzero(jule::F64 _43510_x) {
	jule::Array<jule::F64,6>* _43613_p = nullptr;
	jule::Array<jule::F64,6>* _43713_q = nullptr;
	if (_43510_x >= 8LL) {
		_43613_p=(&(_1d1acb9a5_Q_0R8));
		_43713_q=(&(_1d1acb9a5_Q_0S8));
	} else if (_43510_x >= 4.5454) {
		_43613_p=(&(_1d1acb9a5_Q_0R5));
		_43713_q=(&(_1d1acb9a5_Q_0S5));
	} else if (_43510_x >= 2.8571) {
		_43613_p=(&(_1d1acb9a5_Q_0R3));
		_43713_q=(&(_1d1acb9a5_Q_0S3));
	} else if (_43510_x >= 2LL) {
		_43613_p=(&(_1d1acb9a5_Q_0R2));
		_43713_q=(&(_1d1acb9a5_Q_0S2));
	}
	{
		jule::F64 _45213_z = jule::div(1LL,_43510_x * _43510_x);
		jule::F64 _45313_r = (*(_43613_p))[0LL] + (_45213_z * ((*(_43613_p))[1LL] + (_45213_z * ((*(_43613_p))[2LL] + (_45213_z * ((*(_43613_p))[3LL] + (_45213_z * ((*(_43613_p))[4LL] + (_45213_z * (*(_43613_p))[5LL])))))))));
		jule::F64 _45413_s = 1LL + (_45213_z * ((*(_43713_q))[0LL] + (_45213_z * ((*(_43713_q))[1LL] + (_45213_z * ((*(_43713_q))[2LL] + (_45213_z * ((*(_43713_q))[3LL] + (_45213_z * ((*(_43713_q))[4LL] + (_45213_z * (*(_43713_q))[5LL])))))))))));
		return static_cast<jule::F64>(jule::div(-0.125 + jule::div(_45313_r,_45413_s),_43510_x));
	}
}



inline jule::F64 _1d1b65511_ldexp(jule::F64 _4518_frac,jule::Int _4533_exp) {
	{
		if (!((_4518_frac == 0LL))) { goto _case_end_4561539488; }
		_case_begin_4561539488:;
		{
			return _4518_frac;
		}
		goto _match_end_4561520560;
		_case_end_4561539488:;
		if (!((_1d186ec98_is_inf(_4518_frac,0LL)) || (_1d186ec98_is_nan(_4518_frac)))) { goto _case_end_4561539616; }
		_case_begin_4561539616:;
		{
			return _4518_frac;
		}
		goto _match_end_4561520560;
		_case_end_4561539616:;
		_match_end_4561520560:;
	}
	jule::Int _5313_e = 0LL;
	std::tie(_4518_frac,_5313_e) = _1d186ec98_normalize(_4518_frac);
	_4533_exp+=_5313_e;
	jule::U64 _5613_x = _1d17de7ea_f64_bits(_4518_frac);
	_4533_exp+=static_cast<jule::Int>((static_cast<jule::Int>(_5613_x >> 52LL) & 2047LL) - 1023LL);
	if (_4533_exp < -1075LL) {
		return static_cast<jule::F64>(_1d180ed26_copysign(0LL,_4518_frac));
	}
	if (_4533_exp > 1023LL) {
		if (_4518_frac < 0LL) {
			return static_cast<jule::F64>(_1d186ec98_inf(-1LL));
		}
		return static_cast<jule::F64>(_1d186ec98_inf(1LL));
	}
	jule::F64 _6713_m = 1LL;
	if (_4533_exp < -1022LL) {
		_4533_exp+=53LL;
		_6713_m=0.00000000000000011102230246251565;
	}
	_5613_x=static_cast<jule::U64>(_5613_x & 9227875636482146303LLU);
	_5613_x|=static_cast<jule::U64>(static_cast<jule::U64>(_4533_exp + 1023LL) << 52LL);
	return static_cast<jule::F64>(_6713_m * _1d17de7ea_f64_from_bits(_5613_x));
}



inline jule::Bool _1d1b685be_signbit(jule::F64 _3916_x) {
	return (_1d17de7ea_f64_bits(_3916_x) & 9223372036854775808LLU) != 0LL;
}



inline jule::F64 _1d1b68800_sinh(jule::F64 _5617_x) {
	
	
	
	
	
	
	
	jule::Bool _6613_sign = false;
	if (_5617_x < 0LL) {
		_5617_x=static_cast<jule::F64>((-(_5617_x)));
		_6613_sign=true;
	}
	jule::F64 _7213_temp = 0LL;
	{
		if (!((_5617_x > 21LL))) { goto _case_end_4561572688; }
		_case_begin_4561572688:;
		{
			_7213_temp=static_cast<jule::F64>(_1d1c9ec33_exp(_5617_x) * 0.5);
		}
		goto _match_end_4561566368;
		_case_end_4561572688:;
		if (!((_5617_x > 0.5))) { goto _case_end_4561568656; }
		_case_begin_4561568656:;
		{
			jule::F64 _7713_ex = _1d1c9ec33_exp(_5617_x);
			_7213_temp=static_cast<jule::F64>((_7713_ex - jule::div(1LL,_7713_ex)) * 0.5);
		}
		goto _match_end_4561566368;
		_case_end_4561568656:;
		_case_begin_4561566464:;
		{
			jule::F64 _8013_sq = _5617_x * _5617_x;
			_7213_temp=static_cast<jule::F64>(((((((-26.30563213397497 * _8013_sq) + -2894.211355989564) * _8013_sq) + -89912.72022039509) * _8013_sq) + -630767.3640497717) * _5617_x);
			_7213_temp=static_cast<jule::F64>(jule::div(_7213_temp,((((_8013_sq + -173.6789535582337) * _8013_sq) + 15215.17378790019) * _8013_sq) + -630767.3640497717));
		}
		goto _match_end_4561566368;
		_case_end_4561566464:;
		_match_end_4561566368:;
	}
	if (_6613_sign) {
		_7213_temp=static_cast<jule::F64>((-(_7213_temp)));
	}
	return _7213_temp;
}



inline jule::F64 _1d1b68800_cosh(jule::F64 _9717_x) {
	_9717_x=static_cast<jule::F64>(_1d19740ab_abs(_9717_x));
	if (_9717_x > 21LL) {
		return static_cast<jule::F64>(_1d1c9ec33_exp(_9717_x) * 0.5);
	}
	jule::F64 _1029_ex = _1d1c9ec33_exp(_9717_x);
	return static_cast<jule::F64>((_1029_ex + jule::div(1LL,_1029_ex)) * 0.5);
}



inline std::tuple<jule::F64,jule::Int> _1d1b837a4_lgamma(jule::F64 _20519_x) {
	jule::F64 _20529_lgamma = jule::F64();
	jule::Int _20542_sign = jule::Int();
	
	
	
	
	
	
	
	_20542_sign=1LL;
	{
		if (!((_1d186ec98_is_nan(_20519_x)))) { goto _case_end_4561590000; }
		_case_begin_4561590000:;
		{
			_20529_lgamma=_20519_x;
			return std::make_tuple(_20529_lgamma,_20542_sign);
		}
		goto _match_end_4561589824;
		_case_end_4561590000:;
		if (!((_1d186ec98_is_inf(_20519_x,0LL)))) { goto _case_end_4561590208; }
		_case_begin_4561590208:;
		{
			_20529_lgamma=_20519_x;
			return std::make_tuple(_20529_lgamma,_20542_sign);
		}
		goto _match_end_4561589824;
		_case_end_4561590208:;
		if (!((_20519_x == 0LL))) { goto _case_end_4561590336; }
		_case_begin_4561590336:;
		{
			_20529_lgamma=static_cast<jule::F64>(_1d186ec98_inf(1LL));
			return std::make_tuple(_20529_lgamma,_20542_sign);
		}
		goto _match_end_4561589824;
		_case_end_4561590336:;
		_match_end_4561589824:;
	}
	jule::Bool _22813_neg = false;
	if (_20519_x < 0LL) {
		_20519_x=static_cast<jule::F64>((-(_20519_x)));
		_22813_neg=true;
	}
	if (_20519_x < 0.000000000000000000000847033) {
		if (_22813_neg) {
			_20542_sign=-1LL;
		}
		_20529_lgamma=static_cast<jule::F64>((-(_1d1911125_log(_20519_x))));
		return std::make_tuple(_20529_lgamma,_20542_sign);
	}
	jule::F64 _24113_nadj = 0LL;
	if (_22813_neg) {
		if (_20519_x >= 4503599627370496LLU) {
			_20529_lgamma=static_cast<jule::F64>(_1d186ec98_inf(1LL));
			return std::make_tuple(_20529_lgamma,_20542_sign);
		}
		jule::F64 _24713_t = _1d1b837a4_sin_pi(_20519_x);
		if (_24713_t == 0LL) {
			_20529_lgamma=static_cast<jule::F64>(_1d186ec98_inf(1LL));
			return std::make_tuple(_20529_lgamma,_20542_sign);
		}
		_24113_nadj=static_cast<jule::F64>(_1d1911125_log(static_cast<jule::F64>(jule::div(3.141592653589793,_1d19740ab_abs(static_cast<jule::F64>(_24713_t * _20519_x))))));
		if (_24713_t < 0LL) {
			_20542_sign=-1LL;
		}
	}
	{
		if (!((_20519_x == 1LL) || (_20519_x == 2LL))) { goto _case_end_4561606048; }
		_case_begin_4561606048:;
		{
			_20529_lgamma=0LL;
			return std::make_tuple(_20529_lgamma,_20542_sign);
		}
		goto _match_end_4561606640;
		_case_end_4561606048:;
		if (!((_20519_x < 2LL))) { goto _case_end_4561608272; }
		_case_begin_4561608272:;
		{
			jule::F64 _26317_y = 0LL;
			jule::Int _26417_i = 0LL;
			if (_20519_x <= 0.9) {
				_20529_lgamma=static_cast<jule::F64>((-(_1d1911125_log(_20519_x))));
				{
					if (!((_20519_x >= 0.7316321449683623))) { goto _case_end_4561615072; }
					_case_begin_4561615072:;
					{
						_26317_y=static_cast<jule::F64>(1LL - _20519_x);
						_26417_i=0LL;
					}
					goto _match_end_4561613264;
					_case_end_4561615072:;
					if (!((_20519_x >= 0.19163214496836223))) { goto _case_end_4561616048; }
					_case_begin_4561616048:;
					{
						_26317_y=static_cast<jule::F64>(_20519_x - 0.46163214496836225);
						_26417_i=1LL;
					}
					goto _match_end_4561613264;
					_case_end_4561616048:;
					_case_begin_4561614240:;
					{
						_26317_y=_20519_x;
						_26417_i=2LL;
					}
					goto _match_end_4561613264;
					_case_end_4561614240:;
					_match_end_4561613264:;
				}
			} else {
				_20529_lgamma=0LL;
				{
					if (!((_20519_x >= 1.7316321449683623))) { goto _case_end_4561621312; }
					_case_begin_4561621312:;
					{
						_26317_y=static_cast<jule::F64>(2LL - _20519_x);
						_26417_i=0LL;
					}
					goto _match_end_4561616912;
					_case_end_4561621312:;
					if (!((_20519_x >= 1.1916321449683622))) { goto _case_end_4561620352; }
					_case_begin_4561620352:;
					{
						_26317_y=static_cast<jule::F64>(_20519_x - 1.4616321449683622);
						_26417_i=1LL;
					}
					goto _match_end_4561616912;
					_case_end_4561620352:;
					_case_begin_4561619184:;
					{
						_26317_y=static_cast<jule::F64>(_20519_x - 1LL);
						_26417_i=2LL;
					}
					goto _match_end_4561616912;
					_case_end_4561619184:;
					_match_end_4561616912:;
				}
			}
			{
				auto _match_expr{ _26417_i };
				if (!((0LL) == _match_expr)) { goto _case_end_4561614352; }
				_case_begin_4561614352:;
				{
					jule::F64 _29417_z = _26317_y * _26317_y;
					jule::F64 _29517_p1 = _1d1b837a4__LGAM_A[0LL] + (_29417_z * (_1d1b837a4__LGAM_A[2LL] + (_29417_z * (_1d1b837a4__LGAM_A[4LL] + (_29417_z * (_1d1b837a4__LGAM_A[6LL] + (_29417_z * (_1d1b837a4__LGAM_A[8LL] + (_29417_z * _1d1b837a4__LGAM_A[10LL])))))))));
					jule::F64 _29617_p2 = _29417_z * (_1d1b837a4__LGAM_A[1LL] + (_29417_z * ((+(_1d1b837a4__LGAM_A[3LL])) + (_29417_z * (_1d1b837a4__LGAM_A[5LL] + (_29417_z * (_1d1b837a4__LGAM_A[7LL] + (_29417_z * (_1d1b837a4__LGAM_A[9LL] + (_29417_z * _1d1b837a4__LGAM_A[11LL]))))))))));
					jule::F64 _29717_p = (_26317_y * _29517_p1) + _29617_p2;
					_20529_lgamma+=static_cast<jule::F64>(_29717_p - (0.5 * _26317_y));
				}
				goto _match_end_4561622928;
				_case_end_4561614352:;
				if (!((1LL) == _match_expr)) { goto _case_end_4561619536; }
				_case_begin_4561619536:;
				{
					jule::F64 _30017_z = _26317_y * _26317_y;
					jule::F64 _30117_w = _30017_z * _26317_y;
					jule::F64 _30217_p1 = _1d1b837a4__LGAM_T[0LL] + (_30117_w * (_1d1b837a4__LGAM_T[3LL] + (_30117_w * (_1d1b837a4__LGAM_T[6LL] + (_30117_w * (_1d1b837a4__LGAM_T[9LL] + (_30117_w * _1d1b837a4__LGAM_T[12LL])))))));
					jule::F64 _30317_p2 = _1d1b837a4__LGAM_T[1LL] + (_30117_w * (_1d1b837a4__LGAM_T[4LL] + (_30117_w * (_1d1b837a4__LGAM_T[7LL] + (_30117_w * (_1d1b837a4__LGAM_T[10LL] + (_30117_w * _1d1b837a4__LGAM_T[13LL])))))));
					jule::F64 _30417_p3 = _1d1b837a4__LGAM_T[2LL] + (_30117_w * (_1d1b837a4__LGAM_T[5LL] + (_30117_w * (_1d1b837a4__LGAM_T[8LL] + (_30117_w * (_1d1b837a4__LGAM_T[11LL] + (_30117_w * _1d1b837a4__LGAM_T[14LL])))))));
					jule::F64 _30517_p = (_30017_z * _30217_p1) - (-0.000000000000000003638676997039505 - (_30117_w * (_30317_p2 + (_26317_y * _30417_p3))));
					_20529_lgamma+=static_cast<jule::F64>(-0.12148629053584961 + _30517_p);
				}
				goto _match_end_4561622928;
				_case_end_4561619536:;
				if (!((2LL) == _match_expr)) { goto _case_end_4561612496; }
				_case_begin_4561612496:;
				{
					jule::F64 _30817_p1 = _26317_y * (_1d1b837a4__LGAM_U[0LL] + (_26317_y * (_1d1b837a4__LGAM_U[1LL] + (_26317_y * (_1d1b837a4__LGAM_U[2LL] + (_26317_y * (_1d1b837a4__LGAM_U[3LL] + (_26317_y * (_1d1b837a4__LGAM_U[4LL] + (_26317_y * _1d1b837a4__LGAM_U[5LL]))))))))));
					jule::F64 _30917_p2 = 1LL + (_26317_y * (_1d1b837a4__LGAM_V[1LL] + (_26317_y * (_1d1b837a4__LGAM_V[2LL] + (_26317_y * (_1d1b837a4__LGAM_V[3LL] + (_26317_y * (_1d1b837a4__LGAM_V[4LL] + (_26317_y * _1d1b837a4__LGAM_V[5LL])))))))));
					_20529_lgamma+=static_cast<jule::F64>((-0.5 * _26317_y) + jule::div(_30817_p1,_30917_p2));
				}
				goto _match_end_4561622928;
				_case_end_4561612496:;
				_match_end_4561622928:;
			}
		}
		goto _match_end_4561606640;
		_case_end_4561608272:;
		if (!((_20519_x < 8LL))) { goto _case_end_4561608384; }
		_case_begin_4561608384:;
		{
			jule::Int _31313_i = static_cast<jule::Int>(_20519_x);
			jule::F64 _31413_y = _20519_x - static_cast<jule::F64>(_31313_i);
			jule::F64 _31513_p = _31413_y * (_1d1b837a4__LGAM_S[0LL] + (_31413_y * (_1d1b837a4__LGAM_S[1LL] + (_31413_y * (_1d1b837a4__LGAM_S[2LL] + (_31413_y * (_1d1b837a4__LGAM_S[3LL] + (_31413_y * (_1d1b837a4__LGAM_S[4LL] + (_31413_y * (_1d1b837a4__LGAM_S[5LL] + (_31413_y * _1d1b837a4__LGAM_S[6LL]))))))))))));
			jule::F64 _31613_q = 1LL + (_31413_y * (_1d1b837a4__LGAM_R[1LL] + (_31413_y * (_1d1b837a4__LGAM_R[2LL] + (_31413_y * (_1d1b837a4__LGAM_R[3LL] + (_31413_y * (_1d1b837a4__LGAM_R[4LL] + (_31413_y * (_1d1b837a4__LGAM_R[5LL] + (_31413_y * _1d1b837a4__LGAM_R[6LL])))))))))));
			_20529_lgamma=static_cast<jule::F64>((0.5 * _31413_y) + jule::div(_31513_p,_31613_q));
			jule::F64 _31817_z = 1LL;
			{
				auto _match_expr{ _31313_i };
				if (!((7LL) == _match_expr)) { goto _case_end_4561699184; }
				_case_begin_4561699184:;
				{
					_31817_z*=static_cast<jule::F64>(_31413_y + 6LL);
					goto _case_begin_4561699568;
				}
				goto _match_end_4561686368;
				_case_end_4561699184:;
				if (!((6LL) == _match_expr)) { goto _case_end_4561699568; }
				_case_begin_4561699568:;
				{
					_31817_z*=static_cast<jule::F64>(_31413_y + 5LL);
					goto _case_begin_4561699680;
				}
				goto _match_end_4561686368;
				_case_end_4561699568:;
				if (!((5LL) == _match_expr)) { goto _case_end_4561699680; }
				_case_begin_4561699680:;
				{
					_31817_z*=static_cast<jule::F64>(_31413_y + 4LL);
					goto _case_begin_4561699792;
				}
				goto _match_end_4561686368;
				_case_end_4561699680:;
				if (!((4LL) == _match_expr)) { goto _case_end_4561699792; }
				_case_begin_4561699792:;
				{
					_31817_z*=static_cast<jule::F64>(_31413_y + 3LL);
					goto _case_begin_4561699904;
				}
				goto _match_end_4561686368;
				_case_end_4561699792:;
				if (!((3LL) == _match_expr)) { goto _case_end_4561699904; }
				_case_begin_4561699904:;
				{
					_31817_z*=static_cast<jule::F64>(_31413_y + 2LL);
					_20529_lgamma+=static_cast<jule::F64>(_1d1911125_log(_31817_z));
				}
				goto _match_end_4561686368;
				_case_end_4561699904:;
				_match_end_4561686368:;
			}
		}
		goto _match_end_4561606640;
		_case_end_4561608384:;
		if (!((_20519_x < 288230376151711744LLU))) { goto _case_end_4561608496; }
		_case_begin_4561608496:;
		{
			jule::F64 _33713_t = _1d1911125_log(_20519_x);
			jule::F64 _33813_z = jule::div(1LL,_20519_x);
			jule::F64 _33913_y = _33813_z * _33813_z;
			jule::F64 _34013_w = _1d1b837a4__LGAM_W[0LL] + (_33813_z * (_1d1b837a4__LGAM_W[1LL] + (_33913_y * (_1d1b837a4__LGAM_W[2LL] + (_33913_y * (_1d1b837a4__LGAM_W[3LL] + (_33913_y * (_1d1b837a4__LGAM_W[4LL] + (_33913_y * (_1d1b837a4__LGAM_W[5LL] + (_33913_y * _1d1b837a4__LGAM_W[6LL])))))))))));
			_20529_lgamma=static_cast<jule::F64>(((_20519_x - 0.5) * (_33713_t - 1LL)) + _34013_w);
		}
		goto _match_end_4561606640;
		_case_end_4561608496:;
		_case_begin_4561605056:;
		{
			_20529_lgamma=static_cast<jule::F64>(_20519_x * (_1d1911125_log(_20519_x) - 1LL));
		}
		goto _match_end_4561606640;
		_case_end_4561605056:;
		_match_end_4561606640:;
	}
	if (_22813_neg) {
		_20529_lgamma=static_cast<jule::F64>(_24113_nadj - _20529_lgamma);
	}
	return std::make_tuple(_20529_lgamma,_20542_sign);
}



inline jule::F64 _1d1b837a4_sin_pi(jule::F64 _35215_x) {
	
	
	if (_35215_x < 0.25) {
		return static_cast<jule::F64>((-(_1d180b88e_sin(static_cast<jule::F64>(3.141592653589793 * _35215_x)))));
	}
	jule::F64 _36013_z = _1d186e803_floor(_35215_x);
	jule::Int _36113_n = 0LL;
	if (_36013_z != _35215_x) {
		_35215_x=static_cast<jule::F64>(_1d184a504_mod(_35215_x,2LL));
		_36113_n=static_cast<jule::Int>(_35215_x * 4LL);
	} else {
		if (_35215_x >= 9007199254740992LLU) {
			_35215_x=0LL;
			_36113_n=0LL;
		} else {
			if (_35215_x < 4503599627370496LLU) {
				_36013_z=static_cast<jule::F64>(_35215_x + 4503599627370496LLU);
			}
			_36113_n=static_cast<jule::Int>(1LL & _1d17de7ea_f64_bits(_36013_z));
			_35215_x=static_cast<jule::F64>(_36113_n);
			_36113_n<<=2LL;
		}
	}
	{
		auto _match_expr{ _36113_n };
		if (!((0LL) == _match_expr)) { goto _case_end_4561727472; }
		_case_begin_4561727472:;
		{
			_35215_x=static_cast<jule::F64>(_1d180b88e_sin(static_cast<jule::F64>(3.141592653589793 * _35215_x)));
		}
		goto _match_end_4561730384;
		_case_end_4561727472:;
		if (!((1LL) == _match_expr || (2LL) == _match_expr)) { goto _case_end_4561728064; }
		_case_begin_4561728064:;
		{
			_35215_x=static_cast<jule::F64>(_1d180b88e_cos(static_cast<jule::F64>(3.141592653589793 * (0.5 - _35215_x))));
		}
		goto _match_end_4561730384;
		_case_end_4561728064:;
		if (!((3LL) == _match_expr || (4LL) == _match_expr)) { goto _case_end_4561733440; }
		_case_begin_4561733440:;
		{
			_35215_x=static_cast<jule::F64>(_1d180b88e_sin(static_cast<jule::F64>(3.141592653589793 * (1LL - _35215_x))));
		}
		goto _match_end_4561730384;
		_case_end_4561733440:;
		if (!((5LL) == _match_expr || (6LL) == _match_expr)) { goto _case_end_4561733552; }
		_case_begin_4561733552:;
		{
			_35215_x=static_cast<jule::F64>((-(_1d180b88e_cos(static_cast<jule::F64>(3.141592653589793 * (_35215_x - 1.5))))));
		}
		goto _match_end_4561730384;
		_case_end_4561733552:;
		_case_begin_4561720320:;
		{
			_35215_x=static_cast<jule::F64>(_1d180b88e_sin(static_cast<jule::F64>(3.141592653589793 * (_35215_x - 2LL))));
		}
		goto _match_end_4561730384;
		_case_end_4561720320:;
		_match_end_4561730384:;
	}
	return static_cast<jule::F64>((-(_35215_x)));
}



inline jule::F64 _1d1bb770b_acosh(jule::F64 _7314_x) {
	
	{
		if (!((_7314_x < 1LL) || (_1d186ec98_is_nan(_7314_x)))) { goto _case_end_4561741072; }
		_case_begin_4561741072:;
		{
			return static_cast<jule::F64>(_1d186ec98_nan());
		}
		goto _match_end_4561740880;
		_case_end_4561741072:;
		if (!((_7314_x == 1LL))) { goto _case_end_4561741200; }
		_case_begin_4561741200:;
		{
			return 0LL;
		}
		goto _match_end_4561740880;
		_case_end_4561741200:;
		if (!((_7314_x >= 268435456LLU))) { goto _case_end_4561741328; }
		_case_begin_4561741328:;
		{
			return static_cast<jule::F64>(_1d1911125_log(_7314_x) + 0.6931471805599453);
		}
		goto _match_end_4561740880;
		_case_end_4561741328:;
		if (!((_7314_x > 2LL))) { goto _case_end_4561741456; }
		_case_begin_4561741456:;
		{
			return static_cast<jule::F64>(_1d1911125_log(static_cast<jule::F64>((2LL * _7314_x) - jule::div(1LL,_7314_x + _1d1d96b60_sqrt(static_cast<jule::F64>((_7314_x * _7314_x) - 1LL))))));
		}
		goto _match_end_4561740880;
		_case_end_4561741456:;
		_match_end_4561740880:;
	}
	jule::F64 _869_t = _7314_x - 1LL;
	return static_cast<jule::F64>(_1d1cc27c2_log1p(static_cast<jule::F64>(_869_t + _1d1d96b60_sqrt(static_cast<jule::F64>((2LL * _869_t) + (_869_t * _869_t))))));
}



inline jule::F64 _1d1bb782c_tanh(jule::F64 _10613_x) {
	
	jule::F64 _10813_z = _1d19740ab_abs(_10613_x);
	{
		if (!((_10813_z > 44.014845965556525))) { goto _case_end_4561763712; }
		_case_begin_4561763712:;
		{
			if (_10613_x < 0LL) {
				return -1LL;
			}
			return 1LL;
		}
		goto _match_end_4561752528;
		_case_end_4561763712:;
		if (!((_10813_z >= 0.625))) { goto _case_end_4561755648; }
		_case_begin_4561755648:;
		{
			jule::F64 _11613_s = _1d1c9ec33_exp(static_cast<jule::F64>(2LL * _10813_z));
			_10813_z=static_cast<jule::F64>(1LL - jule::div(2LL,_11613_s + 1LL));
			if (_10613_x < 0LL) {
				_10813_z=static_cast<jule::F64>((-(_10813_z)));
			}
		}
		goto _match_end_4561752528;
		_case_end_4561755648:;
		_case_begin_4561752832:;
		{
			if (_10613_x == 0LL) {
				return _10613_x;
			}
			jule::F64 _12513_s = _10613_x * _10613_x;
			_10813_z=static_cast<jule::F64>(_10613_x + jule::div((_10613_x * _12513_s) * ((((_1d1bb782c_TANH_P[0LL] * _12513_s) + _1d1bb782c_TANH_P[1LL]) * _12513_s) + _1d1bb782c_TANH_P[2LL]),((((_12513_s + _1d1bb782c_TANH_Q[0LL]) * _12513_s) + _1d1bb782c_TANH_Q[1LL]) * _12513_s) + _1d1bb782c_TANH_Q[2LL]));
		}
		goto _match_end_4561752528;
		_case_end_4561752832:;
		_match_end_4561752528:;
	}
	return _10813_z;
}



inline jule::F64 _1d1c3a41b_cbrt(jule::F64 _5617_x) {
	
	
	
	
	
	
	
	
	if (((_5617_x == 0LL) || _1d186ec98_is_nan(_5617_x)) || _1d186ec98_is_inf(_5617_x,0LL)) {
		return _5617_x;
	}
	jule::Bool _7113_sign = false;
	if (_5617_x < 0LL) {
		_5617_x=static_cast<jule::F64>((-(_5617_x)));
		_7113_sign=true;
	}
	jule::F64 _7813_t = _1d17de7ea_f64_from_bits(static_cast<jule::U64>(jule::div(_1d17de7ea_f64_bits(_5617_x),3LL) + 3071306043645493248LLU));
	if (_5617_x < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014) {
		_7813_t=static_cast<jule::F64>(18014398509481984LL);
		_7813_t*=_5617_x;
		_7813_t=static_cast<jule::F64>(_1d17de7ea_f64_from_bits(static_cast<jule::U64>(jule::div(_1d17de7ea_f64_bits(_7813_t),3LL) + 2990241250352824320LLU)));
	}
	jule::F64 _8713_r = jule::div(_7813_t * _7813_t,_5617_x);
	jule::F64 _8813_s = 0.5428571428571428 + (_8713_r * _7813_t);
	_7813_t*=static_cast<jule::F64>(0.35714285714285715 + jule::div(1.6071428571428572,(_8813_s + 1.4142857142857144) + jule::div(-0.7053061224489796,_8813_s)));
	_7813_t=static_cast<jule::F64>(_1d17de7ea_f64_from_bits(static_cast<jule::U64>((_1d17de7ea_f64_bits(_7813_t) & 18446744072635809792LLU) + 1073741824LLU)));
	_8813_s=static_cast<jule::F64>(_7813_t * _7813_t);
	_8713_r=static_cast<jule::F64>(jule::div(_5617_x,_8813_s));
	jule::F64 _979_w = _7813_t + _7813_t;
	_8713_r=static_cast<jule::F64>(jule::div(_8713_r - _7813_t,_979_w + _8713_r));
	_7813_t=static_cast<jule::F64>(_7813_t + (_7813_t * _8713_r));
	if (_7113_sign) {
		_7813_t=static_cast<jule::F64>((-(_7813_t)));
	}
	return _7813_t;
}



inline jule::F64 _1d1ba0cdd_pow(jule::F64 _6412_x,jule::F64 _6420_y) {
	{
		if (!((_6420_y == 0LL) || (_6412_x == 1LL))) { goto _case_end_4561797104; }
		_case_begin_4561797104:;
		{
			return 1LL;
		}
		goto _match_end_4561796784;
		_case_end_4561797104:;
		if (!((_6420_y == 1LL))) { goto _case_end_4561797232; }
		_case_begin_4561797232:;
		{
			return _6412_x;
		}
		goto _match_end_4561796784;
		_case_end_4561797232:;
		if (!((_1d186ec98_is_nan(_6412_x)) || (_1d186ec98_is_nan(_6420_y)))) { goto _case_end_4561797360; }
		_case_begin_4561797360:;
		{
			return static_cast<jule::F64>(_1d186ec98_nan());
		}
		goto _match_end_4561796784;
		_case_end_4561797360:;
		if (!((_6412_x == 0LL))) { goto _case_end_4561797488; }
		_case_begin_4561797488:;
		{
			{
				if (!((_6420_y < 0LL))) { goto _case_end_4561801440; }
				_case_begin_4561801440:;
				{
					if (_1d1ba0cdd_is_odd_int(_6420_y)) {
						return static_cast<jule::F64>(_1d180ed26_copysign(static_cast<jule::F64>(_1d186ec98_inf(1LL)),_6412_x));
					}
					return static_cast<jule::F64>(_1d186ec98_inf(1LL));
				}
				goto _match_end_4561799824;
				_case_end_4561801440:;
				if (!((_6420_y > 0LL))) { goto _case_end_4561801552; }
				_case_begin_4561801552:;
				{
					if (_1d1ba0cdd_is_odd_int(_6420_y)) {
						return _6412_x;
					}
					return 0LL;
				}
				goto _match_end_4561799824;
				_case_end_4561801552:;
				_match_end_4561799824:;
			}
		}
		goto _match_end_4561796784;
		_case_end_4561797488:;
		if (!((_1d186ec98_is_inf(_6420_y,0LL)))) { goto _case_end_4561797616; }
		_case_begin_4561797616:;
		{
			{
				if (!((_6412_x == -1LL))) { goto _case_end_4561809680; }
				_case_begin_4561809680:;
				{
					return 1LL;
				}
				goto _match_end_4561806992;
				_case_end_4561809680:;
				if (!(((_1d19740ab_abs(_6412_x) < 1LL) == _1d186ec98_is_inf(_6420_y,1LL)))) { goto _case_end_4561809424; }
				_case_begin_4561809424:;
				{
					return 0LL;
				}
				goto _match_end_4561806992;
				_case_end_4561809424:;
				_case_begin_4561802608:;
				{
					return static_cast<jule::F64>(_1d186ec98_inf(1LL));
				}
				goto _match_end_4561806992;
				_case_end_4561802608:;
				_match_end_4561806992:;
			}
		}
		goto _match_end_4561796784;
		_case_end_4561797616:;
		if (!((_1d186ec98_is_inf(_6412_x,0LL)))) { goto _case_end_4561797744; }
		_case_begin_4561797744:;
		{
			if (_1d186ec98_is_inf(_6412_x,-1LL)) {
				return static_cast<jule::F64>(_1d1ba0cdd_pow(static_cast<jule::F64>(jule::div(1LL,_6412_x)),static_cast<jule::F64>((-(_6420_y)))));
			}
			{
				if (!((_6420_y < 0LL))) { goto _case_end_4561813792; }
				_case_begin_4561813792:;
				{
					return 0LL;
				}
				goto _match_end_4561812048;
				_case_end_4561813792:;
				if (!((_6420_y > 0LL))) { goto _case_end_4561813904; }
				_case_begin_4561813904:;
				{
					return static_cast<jule::F64>(_1d186ec98_inf(1LL));
				}
				goto _match_end_4561812048;
				_case_end_4561813904:;
				_match_end_4561812048:;
			}
		}
		goto _match_end_4561796784;
		_case_end_4561797744:;
		if (!((_6420_y == 0.5))) { goto _case_end_4561797872; }
		_case_begin_4561797872:;
		{
			return static_cast<jule::F64>(_1d1d96b60_sqrt(_6412_x));
		}
		goto _match_end_4561796784;
		_case_end_4561797872:;
		if (!((_6420_y == -0.5))) { goto _case_end_4561798000; }
		_case_begin_4561798000:;
		{
			return static_cast<jule::F64>(jule::div(1LL,_1d1d96b60_sqrt(_6412_x)));
		}
		goto _match_end_4561796784;
		_case_end_4561798000:;
		_match_end_4561796784:;
	}
	jule::F64 _10814_yi;
	jule::F64 _10822_yf;
	std::tie(_10814_yi,_10822_yf) = _1d19edad6_modf(static_cast<jule::F64>(_1d19740ab_abs(_6420_y)));
	if ((_10822_yf != 0LL) && (_6412_x < 0LL)) {
		return static_cast<jule::F64>(_1d186ec98_nan());
	}
	if (_10814_yi >= 9223372036854775808LLU) {
		{
			if (!((_6412_x == -1LL))) { goto _case_end_4561823648; }
			_case_begin_4561823648:;
			{
				return 1LL;
			}
			goto _match_end_4561819136;
			_case_end_4561823648:;
			if (!(((_1d19740ab_abs(_6412_x) < 1LL) == (_6420_y > 0LL)))) { goto _case_end_4561823392; }
			_case_begin_4561823392:;
			{
				return 0LL;
			}
			goto _match_end_4561819136;
			_case_end_4561823392:;
			_case_begin_4561821392:;
			{
				return static_cast<jule::F64>(_1d186ec98_inf(1LL));
			}
			goto _match_end_4561819136;
			_case_end_4561821392:;
			_match_end_4561819136:;
		}
	}
	jule::F64 _12613_a1 = 1LL;
	jule::Int _12713_ae = 0LL;
	if (_10822_yf != 0LL) {
		if (_10822_yf > 0.5) {
			(_10822_yf)--;
			(_10814_yi)++;
		}
		_12613_a1=static_cast<jule::F64>(_1d1c9ec33_exp(static_cast<jule::F64>(_10822_yf * _1d1911125_log(_6412_x))));
	}
	jule::F64 _14214_x1;
	jule::Int _14222_xe;
	std::tie(_14214_x1,_14222_xe) = _1d184849c_frexp(_6412_x);
	jule::I64 _14313_i = static_cast<jule::I64>(_10814_yi);
	_iter_begin_4561830288:;
	if (!(_14313_i != 0LL)) { goto _iter_end_4561830288; }
	{
		if ((_14222_xe < -4096LL) || (4096LLU < _14222_xe)) {
			_12713_ae+=_14222_xe;
			goto _iter_end_4561830288;
		}
		if ((_14313_i & 1LL) == 1LL) {
			_12613_a1*=_14214_x1;
			_12713_ae+=_14222_xe;
		}
		_14214_x1*=_14214_x1;
		_14222_xe<<=1LL;
		if (_14214_x1 < 0.5) {
			_14214_x1+=_14214_x1;
			(_14222_xe)--;
		}
	}
	_iter_next_4561830288:;
	_14313_i>>=1LL;
	goto _iter_begin_4561830288;
	_iter_end_4561830288:;
	if (_6420_y < 0LL) {
		_12613_a1=static_cast<jule::F64>(jule::div(1LL,_12613_a1));
		_12713_ae=static_cast<jule::Int>((-(_12713_ae)));
	}
	return static_cast<jule::F64>(_1d1b65511_ldexp(_12613_a1,_12713_ae));
}



inline jule::Bool _1d1ba0cdd_is_odd_int(jule::F64 _17615_x) {
	jule::F64 _17710_xi;
	jule::F64 _17714_xf;
	std::tie(_17710_xi,_17714_xf) = _1d19edad6_modf(_17615_x);
	return (_17714_xf == 0LL) && ((static_cast<jule::I64>(_17710_xi) & 1LL) == 1LL);
}



inline jule::F64 _1d1c9ec33_exp(jule::F64 _12212_x) {
	
	
	
	
	
	
	{
		if (!((_1d186ec98_is_nan(_12212_x)) || (_1d186ec98_is_inf(_12212_x,1LL)))) { goto _case_end_4561849184; }
		_case_begin_4561849184:;
		{
			return _12212_x;
		}
		goto _match_end_4561848288;
		_case_end_4561849184:;
		if (!((_1d186ec98_is_inf(_12212_x,-1LL)))) { goto _case_end_4561849296; }
		_case_begin_4561849296:;
		{
			return 0LL;
		}
		goto _match_end_4561848288;
		_case_end_4561849296:;
		if (!((_12212_x > 709.782712893384))) { goto _case_end_4561849408; }
		_case_begin_4561849408:;
		{
			return static_cast<jule::F64>(_1d186ec98_inf(1LL));
		}
		goto _match_end_4561848288;
		_case_end_4561849408:;
		if (!((_12212_x < -745.1332191019411))) { goto _case_end_4561849520; }
		_case_begin_4561849520:;
		{
			return 0LL;
		}
		goto _match_end_4561848288;
		_case_end_4561849520:;
		if (!(((-0.000000003725290298461914 < _12212_x) && (_12212_x < 0.000000003725290298461914)))) { goto _case_end_4561849632; }
		_case_begin_4561849632:;
		{
			return static_cast<jule::F64>(1LL + _12212_x);
		}
		goto _match_end_4561848288;
		_case_end_4561849632:;
		_match_end_4561848288:;
	}
	jule::Int _14613_k = 0LL;
	{
		if (!((_12212_x < 0LL))) { goto _case_end_4561856032; }
		_case_begin_4561856032:;
		{
			_14613_k=static_cast<jule::Int>((1.4426950408889634 * _12212_x) - 0.5);
		}
		goto _match_end_4561853120;
		_case_end_4561856032:;
		if (!((_12212_x > 0LL))) { goto _case_end_4561856144; }
		_case_begin_4561856144:;
		{
			_14613_k=static_cast<jule::Int>((1.4426950408889634 * _12212_x) + 0.5);
		}
		goto _match_end_4561853120;
		_case_end_4561856144:;
		_match_end_4561853120:;
	}
	jule::F64 _1519_hi = _12212_x - (static_cast<jule::F64>(_14613_k) * 0.6931471803691238);
	jule::F64 _1529_lo = static_cast<jule::F64>(_14613_k) * 0.00000000019082149292705877;
	return static_cast<jule::F64>(_1d1c9ec33_expmulti(_1519_hi,_1529_lo,_14613_k));
}



inline jule::F64 _1d1c9ec33_exp2(jule::F64 _16013_x) {
	
	
	
	
	{
		if (!((_1d186ec98_is_nan(_16013_x)) || (_1d186ec98_is_inf(_16013_x,1LL)))) { goto _case_end_4561867840; }
		_case_begin_4561867840:;
		{
			return _16013_x;
		}
		goto _match_end_4561867632;
		_case_end_4561867840:;
		if (!((_1d186ec98_is_inf(_16013_x,-1LL)))) { goto _case_end_4561867968; }
		_case_begin_4561867968:;
		{
			return 0LL;
		}
		goto _match_end_4561867632;
		_case_end_4561867968:;
		if (!((_16013_x > 1023.9999999999999))) { goto _case_end_4561868096; }
		_case_begin_4561868096:;
		{
			return static_cast<jule::F64>(_1d186ec98_inf(1LL));
		}
		goto _match_end_4561867632;
		_case_end_4561868096:;
		if (!((_16013_x < -1074LL))) { goto _case_end_4561868224; }
		_case_begin_4561868224:;
		{
			return 0LL;
		}
		goto _match_end_4561867632;
		_case_end_4561868224:;
		_match_end_4561867632:;
	}
	jule::Int _18113_k = 0LL;
	{
		if (!((_16013_x > 0LL))) { goto _case_end_4561873648; }
		_case_begin_4561873648:;
		{
			_18113_k=static_cast<jule::Int>(_16013_x + 0.5);
		}
		goto _match_end_4561872896;
		_case_end_4561873648:;
		if (!((_16013_x < 0LL))) { goto _case_end_4561873760; }
		_case_begin_4561873760:;
		{
			_18113_k=static_cast<jule::Int>(_16013_x - 0.5);
		}
		goto _match_end_4561872896;
		_case_end_4561873760:;
		_match_end_4561872896:;
	}
	jule::F64 _1869_t = _16013_x - static_cast<jule::F64>(_18113_k);
	jule::F64 _1879_hi = _1869_t * 0.6931471803691238;
	jule::F64 _1889_lo = (-(_1869_t)) * 0.00000000019082149292705877;
	return static_cast<jule::F64>(_1d1c9ec33_expmulti(_1879_hi,_1889_lo,_18113_k));
}



inline jule::F64 _1d1c9ec33_expmulti(jule::F64 _19513_hi,jule::F64 _19522_lo,jule::Int _19531_k) {
	
	
	
	
	
	jule::F64 _2029_r = _19513_hi - _19522_lo;
	jule::F64 _2039_t = _2029_r * _2029_r;
	jule::F64 _2049_c = _2029_r - (_2039_t * (0.16666666666666666 + (_2039_t * (-0.0027777777777015593 + (_2039_t * (0.00006613756321437934 + (_2039_t * (-0.0000016533902205465252 + (_2039_t * 0.000000041381367970572385)))))))));
	jule::F64 _2059_y = 1LL - ((_19522_lo - jule::div(_2029_r * _2049_c,2LL - _2049_c)) - _19513_hi);
	return static_cast<jule::F64>(_1d1b65511_ldexp(_2059_y,_19531_k));
}



inline jule::F64 _1d1cc27c2_log1p(jule::F64 _12614_x) {
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	{
		if (!((_12614_x < -1LL) || (_1d186ec98_is_nan(_12614_x)))) { goto _case_end_4561902800; }
		_case_begin_4561902800:;
		{
			return static_cast<jule::F64>(_1d186ec98_nan());
		}
		goto _match_end_4561901840;
		_case_end_4561902800:;
		if (!((_12614_x == -1LL))) { goto _case_end_4561902912; }
		_case_begin_4561902912:;
		{
			return static_cast<jule::F64>(_1d186ec98_inf(-1LL));
		}
		goto _match_end_4561901840;
		_case_end_4561902912:;
		if (!((_1d186ec98_is_inf(_12614_x,1LL)))) { goto _case_end_4561910720; }
		_case_begin_4561910720:;
		{
			return static_cast<jule::F64>(_1d186ec98_inf(1LL));
		}
		goto _match_end_4561901840;
		_case_end_4561910720:;
		_match_end_4561901840:;
	}
	jule::F64 _1529_absx = _1d19740ab_abs(_12614_x);
	jule::F64 _15413_f = 0LL;
	jule::U64 _15513_iu = 0LLU;
	jule::Int _15613_k = 1LL;
	if (_1529_absx < 0.41421356237309503) {
		if (_1529_absx < 0.000000001862645149230957) {
			if (_1529_absx < 0.00000000000000005551115123125783) {
				return _12614_x;
			}
			return static_cast<jule::F64>(_12614_x - ((_12614_x * _12614_x) * 0.5));
		}
		if (_12614_x > -0.2928932188134525) {
			_15613_k=0LL;
			_15413_f=_12614_x;
			_15513_iu=1LL;
		}
	}
	jule::F64 _17113_c = 0LL;
	if (_15613_k != 0LL) {
		jule::F64 _17317_u = 0LL;
		if (_1529_absx < 9007199254740992LLU) {
			_17317_u=static_cast<jule::F64>(1LL + _12614_x);
			_15513_iu=static_cast<jule::U64>(_1d17de7ea_f64_bits(_17317_u));
			_15613_k=static_cast<jule::Int>((_15513_iu >> 52LL) - 1023LL);
			if (_15613_k > 0LL) {
				_17113_c=static_cast<jule::F64>(1LL - (_17317_u - _12614_x));
			} else {
				_17113_c=static_cast<jule::F64>(_12614_x - (_17317_u - 1LL));
			}
			_17113_c = jule::div(_17113_c,_17317_u);
		} else {
			_17317_u=_12614_x;
			_15513_iu=static_cast<jule::U64>(_1d17de7ea_f64_bits(_17317_u));
			_15613_k=static_cast<jule::Int>((_15513_iu >> 52LL) - 1023LL);
			_17113_c=0LL;
		}
		_15513_iu&=4503599627370495LL;
		if (_15513_iu < 1865452045155277LL) {
			_17317_u=static_cast<jule::F64>(_1d17de7ea_f64_from_bits(static_cast<jule::U64>(_15513_iu | 4607182418800017408LL)));
		} else {
			(_15613_k)++;
			_17317_u=static_cast<jule::F64>(_1d17de7ea_f64_from_bits(static_cast<jule::U64>(_15513_iu | 4602678819172646912LL)));
			_15513_iu=static_cast<jule::U64>((4503599627370496LL - _15513_iu) >> 2LL);
		}
		_15413_f=static_cast<jule::F64>(_17317_u - 1LL);
	}
	jule::F64 _2029_hfsq = (0.5 * _15413_f) * _15413_f;
	jule::F64 _20313_s = 0LL;
	jule::F64 _20413_R = 0LL;
	jule::F64 _20513_z = 0LL;
	if (_15513_iu == 0LL) {
		if (_15413_f == 0LL) {
			if (_15613_k == 0LL) {
				return 0LL;
			}
			_17113_c+=static_cast<jule::F64>(static_cast<jule::F64>(_15613_k) * 0.00000000019082149292705877);
			return static_cast<jule::F64>((static_cast<jule::F64>(_15613_k) * 0.6931471803691238) + _17113_c);
		}
		_20413_R=static_cast<jule::F64>(_2029_hfsq * (1LL - (0.6666666666666666 * _15413_f)));
		if (_15613_k == 0LL) {
			return static_cast<jule::F64>(_15413_f - _20413_R);
		}
		return static_cast<jule::F64>((static_cast<jule::F64>(_15613_k) * 0.6931471803691238) - ((_20413_R - ((static_cast<jule::F64>(_15613_k) * 0.00000000019082149292705877) + _17113_c)) - _15413_f));
	}
	_20313_s=static_cast<jule::F64>(jule::div(_15413_f,2LL + _15413_f));
	_20513_z=static_cast<jule::F64>(_20313_s * _20313_s);
	_20413_R=static_cast<jule::F64>(_20513_z * (0.6666666666666735 + (_20513_z * (0.3999999999940942 + (_20513_z * (0.2857142874366239 + (_20513_z * (0.22222198432149784 + (_20513_z * (0.1818357216161805 + (_20513_z * (0.15313837699209373 + (_20513_z * 0.14798198605116586)))))))))))));
	if (_15613_k == 0LL) {
		return static_cast<jule::F64>(_15413_f - (_2029_hfsq - (_20313_s * (_2029_hfsq + _20413_R))));
	}
	return static_cast<jule::F64>((static_cast<jule::F64>(_15613_k) * 0.6931471803691238) - ((_2029_hfsq - ((_20313_s * (_2029_hfsq + _20413_R)) + ((static_cast<jule::F64>(_15613_k) * 0.00000000019082149292705877) + _17113_c))) - _15413_f));
}



inline std::tuple<jule::F64,jule::F64> _1d1d32689_stirling(jule::F64 _13113_x) {
	if (_13113_x > 200LL) {
		return std::make_tuple(static_cast<jule::F64>(_1d186ec98_inf(1LL)),1LL);
	}
	
	
	jule::F64 _13713_w = jule::div(1LL,_13113_x);
	_13713_w=static_cast<jule::F64>(1LL + (_13713_w * ((((((((_1d1d32689__GAM_S[0LL] * _13713_w) + _1d1d32689__GAM_S[1LL]) * _13713_w) + _1d1d32689__GAM_S[2LL]) * _13713_w) + _1d1d32689__GAM_S[3LL]) * _13713_w) + _1d1d32689__GAM_S[4LL])));
	jule::F64 _13913_y1 = _1d1c9ec33_exp(_13113_x);
	jule::F64 _14013_y2 = 1LL;
	if (_13113_x > 143.01608) {
		jule::F64 _14213_v = _1d1ba0cdd_pow(_13113_x,static_cast<jule::F64>((0.5 * _13113_x) - 0.25));
		std::tie(_13913_y1,_14013_y2) = std::make_tuple(_14213_v,static_cast<jule::F64>(jule::div(_14213_v,_13913_y1)));
	} else {
		_13913_y1=static_cast<jule::F64>(jule::div(_1d1ba0cdd_pow(_13113_x,static_cast<jule::F64>(_13113_x - 0.5)),_13913_y1));
	}
	return std::make_tuple(_13913_y1,static_cast<jule::F64>((2.5066282746310007 * _13713_w) * _14013_y2));
}



inline jule::F64 _1d1d32689_gamma(jule::F64 _15918_x) {
	
	{
		if (!((_1d1d32689_is_neg_int(_15918_x)) || (_1d186ec98_is_inf(_15918_x,-1LL)) || (_1d186ec98_is_nan(_15918_x)))) { goto _case_end_4561979968; }
		_case_begin_4561979968:;
		{
			return static_cast<jule::F64>(_1d186ec98_nan());
		}
		goto _match_end_4561979776;
		_case_end_4561979968:;
		if (!((_1d186ec98_is_inf(_15918_x,1LL)))) { goto _case_end_4561980096; }
		_case_begin_4561980096:;
		{
			return static_cast<jule::F64>(_1d186ec98_inf(1LL));
		}
		goto _match_end_4561979776;
		_case_end_4561980096:;
		if (!((_15918_x == 0LL))) { goto _case_end_4561980224; }
		_case_begin_4561980224:;
		{
			if (_1d1b685be_signbit(_15918_x)) {
				return static_cast<jule::F64>(_1d186ec98_inf(-1LL));
			}
			return static_cast<jule::F64>(_1d186ec98_inf(1LL));
		}
		goto _match_end_4561979776;
		_case_end_4561980224:;
		_match_end_4561979776:;
	}
	jule::F64 _17313_q = _1d19740ab_abs(_15918_x);
	jule::F64 _17413_p = _1d186e803_floor(_17313_q);
	if (_17313_q > 33LL) {
		if (_15918_x >= 0LL) {
			jule::F64 _17718_y1;
			jule::F64 _17722_y2;
			std::tie(_17718_y1,_17722_y2) = _1d1d32689_stirling(_15918_x);
			return static_cast<jule::F64>(_17718_y1 * _17722_y2);
		}
		jule::Int _18317_signgam = 1LL;
		jule::I64 _18413_ip = static_cast<jule::I64>(_17413_p);
		if ((_18413_ip & 1LL) == 0LL) {
			_18317_signgam=-1LL;
		}
		jule::F64 _18817_z = _17313_q - _17413_p;
		if (_18817_z > 0.5) {
			_17413_p=static_cast<jule::F64>(_17413_p + 1LL);
			_18817_z=static_cast<jule::F64>(_17313_q - _17413_p);
		}
		_18817_z=static_cast<jule::F64>(_17313_q * _1d180b88e_sin(static_cast<jule::F64>(3.141592653589793 * _18817_z)));
		if (_18817_z == 0LL) {
			return static_cast<jule::F64>(_1d186ec98_inf(_18317_signgam));
		}
		jule::F64 _19714_sq1;
		jule::F64 _19719_sq2;
		std::tie(_19714_sq1,_19719_sq2) = _1d1d32689_stirling(_17313_q);
		jule::F64 _19813_absz = _1d19740ab_abs(_18817_z);
		jule::F64 _19913_d = (_19813_absz * _19714_sq1) * _19719_sq2;
		if (_1d186ec98_is_inf(_19913_d,0LL)) {
			_18817_z=static_cast<jule::F64>(jule::div(jule::div(jule::div(3.141592653589793,_19813_absz),_19714_sq1),_19719_sq2));
		} else {
			_18817_z=static_cast<jule::F64>(jule::div(3.141592653589793,_19913_d));
		}
		return static_cast<jule::F64>(static_cast<jule::F64>(_18317_signgam) * _18817_z);
	}
	jule::F64 _20913_z = 1LL;
	_iter_begin_4562007104:;
	if (!(_15918_x >= 3LL)) { goto _iter_end_4562007104; }
	{
		_15918_x=static_cast<jule::F64>(_15918_x - 1LL);
		_20913_z=static_cast<jule::F64>(_20913_z * _15918_x);
	}
	_iter_next_4562007104:;
	goto _iter_begin_4562007104;
	_iter_end_4562007104:;
	_iter_begin_4561988016:;
	if (!(_15918_x < 0LL)) { goto _iter_end_4561988016; }
	{
		if (_15918_x > -0.000000001) {
			goto _julec_label_small;
		}
		_20913_z=static_cast<jule::F64>(jule::div(_20913_z,_15918_x));
		_15918_x=static_cast<jule::F64>(_15918_x + 1LL);
	}
	_iter_next_4561988016:;
	goto _iter_begin_4561988016;
	_iter_end_4561988016:;
	_iter_begin_4562010880:;
	if (!(_15918_x < 2LL)) { goto _iter_end_4562010880; }
	{
		if (_15918_x < 0.000000001) {
			goto _julec_label_small;
		}
		_20913_z=static_cast<jule::F64>(jule::div(_20913_z,_15918_x));
		_15918_x=static_cast<jule::F64>(_15918_x + 1LL);
	}
	_iter_next_4562010880:;
	goto _iter_begin_4562010880;
	_iter_end_4562010880:;
	if (_15918_x == 2LL) {
		return _20913_z;
	}
	_15918_x=static_cast<jule::F64>(_15918_x - 2LL);
	_17413_p=static_cast<jule::F64>((((((((((((_15918_x * _1d1d32689__GAM_P[0LL]) + _1d1d32689__GAM_P[1LL]) * _15918_x) + _1d1d32689__GAM_P[2LL]) * _15918_x) + _1d1d32689__GAM_P[3LL]) * _15918_x) + _1d1d32689__GAM_P[4LL]) * _15918_x) + _1d1d32689__GAM_P[5LL]) * _15918_x) + _1d1d32689__GAM_P[6LL]);
	_17313_q=static_cast<jule::F64>((((((((((((((_15918_x * _1d1d32689__GAM_Q[0LL]) + _1d1d32689__GAM_Q[1LL]) * _15918_x) + _1d1d32689__GAM_Q[2LL]) * _15918_x) + _1d1d32689__GAM_Q[3LL]) * _15918_x) + _1d1d32689__GAM_Q[4LL]) * _15918_x) + _1d1d32689__GAM_Q[5LL]) * _15918_x) + _1d1d32689__GAM_Q[6LL]) * _15918_x) + _1d1d32689__GAM_Q[7LL]);
	return static_cast<jule::F64>(jule::div(_20913_z * _17413_p,_17313_q));
	_julec_label_small:;
	if (_15918_x == 0LL) {
		return static_cast<jule::F64>(_1d186ec98_inf(1LL));
	}
	return static_cast<jule::F64>(jule::div(_20913_z,(1LL + (0.5772156649015329 * _15918_x)) * _15918_x));
}



inline jule::Bool _1d1d32689_is_neg_int(jule::F64 _24515_x) {
	if (_24515_x < 0LL) {
		jule::F64 _24717_xf;
		std::tie(std::ignore,_24717_xf) = _1d19edad6_modf(_24515_x);
		return _24717_xf == 0LL;
	}
	return false;
}



inline jule::F64 _1d1d4963a_erfinv(jule::F64 _10519_x) {
	if ((_1d186ec98_is_nan(_10519_x) || (_10519_x <= -1LL)) || (_10519_x >= 1LL)) {
		if ((_10519_x == -1LL) || (_10519_x == 1LL)) {
			return static_cast<jule::F64>(_1d186ec98_inf(static_cast<jule::Int>(_10519_x)));
		}
		return static_cast<jule::F64>(_1d186ec98_nan());
	}
	jule::Bool _11413_sign = false;
	if (_10519_x < 0LL) {
		_10519_x=static_cast<jule::F64>((-(_10519_x)));
		_11413_sign=true;
	}
	jule::F64 _12013_ans = 0LL;
	if (_10519_x <= 0.85) {
		jule::F64 _12213_r = 0.180625 - ((0.25 * _10519_x) * _10519_x);
		jule::F64 _12313_z1 = (((((((((((((887.0940696254552 * _12213_r) + 11819.493347062295) * _12213_r) + 23782.041382114385) * _12213_r) + 16235.862515167575) * _12213_r) + 4854.886889384388) * _12213_r) + 697.062665343896) * _12213_r) + 47.07268811238398) * _12213_r) + 1.1975323115670913;
		jule::F64 _12413_z2 = (((((((((((((5226.495278852854 * _12213_r) + 28729.085735721943) * _12213_r) + 39307.89580009271) * _12213_r) + 21213.794301586597) * _12213_r) + 5394.196021424751) * _12213_r) + 687.1870074920579) * _12213_r) + 42.31333070160091) * _12213_r) + 1LL;
		_12013_ans=static_cast<jule::F64>(jule::div(_10519_x * _12313_z1,_12413_z2));
	} else {
		jule::F64 _12717_z1 = 0LL;
		jule::F64 _12817_z2 = 0LL;
		jule::F64 _12917_r = _1d1d96b60_sqrt(static_cast<jule::F64>(0.6931471805599453 - _1d1911125_log(static_cast<jule::F64>(1LL - _10519_x))));
		if (_12917_r <= 5LL) {
			_12917_r-=1.6;
			_12717_z1=static_cast<jule::F64>((((((((((((((0.0007745450142783414 * _12917_r) + 0.022723844989269184) * _12917_r) + 0.2417807251774506) * _12917_r) + 1.2704582524523684) * _12917_r) + 3.6478483247632045) * _12917_r) + 5.769497221460691) * _12917_r) + 4.630337846156546) * _12917_r) + 1.4234371107496835);
			_12817_z2=static_cast<jule::F64>((((((((((((((0.0000000014859850019840355 * _12917_r) + 0.0007744145906515771) * _12917_r) + 0.021494160384252878) * _12917_r) + 0.2094506521051275) * _12917_r) + 0.9754783200178743) * _12917_r) + 2.3707661626024534) * _12917_r) + 2.9036514445419948) * _12917_r) + 1.4142135623730951);
		} else {
			_12917_r-=5LL;
			_12717_z1=static_cast<jule::F64>((((((((((((((0.00000020103343992922881 * _12917_r) + 0.000027115555687434876) * _12917_r) + 0.0012426609473880784) * _12917_r) + 0.026532189526576124) * _12917_r) + 0.29656057182850487) * _12917_r) + 1.7848265399172913) * _12917_r) + 5.463784911164114) * _12917_r) + 6.657904643501103);
			_12817_z2=static_cast<jule::F64>((((((((((((((0.0000000000000028910246058729655 * _12917_r) + 0.0000002010321207683943) * _12917_r) + 0.000026110884050805935) * _12917_r) + 0.0011128009970788597) * _12917_r) + 0.02103693768272069) * _12917_r) + 0.19364809469506591) * _12917_r) + 0.8482908416595164) * _12917_r) + 1.4142135623730951);
		}
		_12013_ans=static_cast<jule::F64>(jule::div(_12717_z1,_12817_z2));
	}
	if (_11413_sign) {
		return static_cast<jule::F64>((-(_12013_ans)));
	}
	return _12013_ans;
}



inline jule::F64 _1d1d4963a_erfcinv(jule::F64 _15516_x) {
	return static_cast<jule::F64>(_1d1d4963a_erfinv(static_cast<jule::F64>(1LL - _15516_x)));
}



inline jule::F64 _1d1d96467_erf(jule::F64 _21716_x) {
	
	
	{
		if (!((_1d186ec98_is_nan(_21716_x)))) { goto _case_end_4562086192; }
		_case_begin_4562086192:;
		{
			return static_cast<jule::F64>(_1d186ec98_nan());
		}
		goto _match_end_4562085920;
		_case_end_4562086192:;
		if (!((_1d186ec98_is_inf(_21716_x,1LL)))) { goto _case_end_4562086304; }
		_case_begin_4562086304:;
		{
			return 1LL;
		}
		goto _match_end_4562085920;
		_case_end_4562086304:;
		if (!((_1d186ec98_is_inf(_21716_x,-1LL)))) { goto _case_end_4562086416; }
		_case_begin_4562086416:;
		{
			return -1LL;
		}
		goto _match_end_4562085920;
		_case_end_4562086416:;
		_match_end_4562085920:;
	}
	jule::Bool _22913_sign = false;
	if (_21716_x < 0LL) {
		_21716_x=static_cast<jule::F64>((-(_21716_x)));
		_22913_sign=true;
	}
	if (_21716_x < 0.84375) {
		jule::F64 _23517_temp = 0LL;
		if (_21716_x < 0.000000003725290298461914) {
			if (_21716_x < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002848094538889218) {
				_23517_temp=static_cast<jule::F64>(0.125 * ((8LL * _21716_x) + (1.0270333367641007 * _21716_x)));
			} else {
				_23517_temp=static_cast<jule::F64>(_21716_x + (0.1283791670955126 * _21716_x));
			}
		} else {
			jule::F64 _24317_z = _21716_x * _21716_x;
			jule::F64 _24417_r = 0.12837916709551256 + (_24317_z * (-0.3250421072470015 + (_24317_z * (-0.02848174957559851 + (_24317_z * (-0.005770270296489442 + (_24317_z * -0.000023763016656650163)))))));
			jule::F64 _24517_s = 1LL + (_24317_z * (0.39791722395915535 + (_24317_z * (0.0650222499887673 + (_24317_z * (0.005081306281875766 + (_24317_z * (0.00013249473800432164 + (_24317_z * -0.000003960228278775368)))))))));
			jule::F64 _24617_y = jule::div(_24417_r,_24517_s);
			_23517_temp=static_cast<jule::F64>(_21716_x + (_21716_x * _24617_y));
		}
		if (_22913_sign) {
			return static_cast<jule::F64>((-(_23517_temp)));
		}
		return _23517_temp;
	}
	if (_21716_x < 1.25) {
		jule::F64 _25513_s = _21716_x - 1LL;
		jule::F64 _25613_P = -0.0023621185607526594 + (_25513_s * (0.41485611868374833 + (_25513_s * (-0.3722078760357013 + (_25513_s * (0.31834661990116175 + (_25513_s * (-0.11089469428239668 + (_25513_s * (0.035478304325618236 + (_25513_s * -0.002166375594868791)))))))))));
		jule::F64 _25713_Q = 1LL + (_25513_s * (0.10642088040084423 + (_25513_s * (0.540397917702171 + (_25513_s * (0.07182865441419627 + (_25513_s * (0.12617121980876164 + (_25513_s * (0.01363708391202905 + (_25513_s * 0.011984499846799107)))))))))));
		if (_22913_sign) {
			return static_cast<jule::F64>(-0.8450629115104675 - jule::div(_25613_P,_25713_Q));
		}
		return static_cast<jule::F64>(0.8450629115104675 + jule::div(_25613_P,_25713_Q));
	}
	if (_21716_x >= 6LL) {
		if (_22913_sign) {
			return -1LL;
		}
		return 1LL;
	}
	jule::F64 _2699_s = jule::div(1LL,_21716_x * _21716_x);
	jule::F64 _27013_R = 0LL;
	jule::F64 _27113_S = 0LL;
	if (_21716_x < 2.857142857142857) {
		_27013_R=static_cast<jule::F64>(-0.009864944034847148 + (_2699_s * (-0.6938585727071818 + (_2699_s * (-10.558626225323291 + (_2699_s * (-62.375332450326006 + (_2699_s * (-162.39666946257347 + (_2699_s * (-184.60509290671104 + (_2699_s * (-81.2874355063066 + (_2699_s * -9.814329344169145))))))))))))));
		_27113_S=static_cast<jule::F64>(1LL + (_2699_s * (19.651271667439257 + (_2699_s * (137.65775414351904 + (_2699_s * (434.56587747522923 + (_2699_s * (645.3872717332679 + (_2699_s * (429.00814002756783 + (_2699_s * (108.63500554177944 + (_2699_s * (6.570249770319282 + (_2699_s * -0.0604244152148581))))))))))))))));
	} else {
		_27013_R=static_cast<jule::F64>(-0.0098649429247001 + (_2699_s * (-0.799283237680523 + (_2699_s * (-17.757954917754752 + (_2699_s * (-160.63638485582192 + (_2699_s * (-637.5664433683896 + (_2699_s * (-1025.0951316110772 + (_2699_s * -483.5191916086514))))))))))));
		_27113_S=static_cast<jule::F64>(1LL + (_2699_s * (30.33806074348246 + (_2699_s * (325.7925129965739 + (_2699_s * (1536.729586084437 + (_2699_s * (3199.8582195085955 + (_2699_s * (2553.0504064331644 + (_2699_s * (474.52854120695537 + (_2699_s * -22.44095244658582))))))))))))));
	}
	jule::F64 _2799_z = _1d17de7ea_f64_from_bits(static_cast<jule::U64>(_1d17de7ea_f64_bits(_21716_x) & 18446744069414584320LLU));
	jule::F64 _2809_r = _1d1c9ec33_exp(static_cast<jule::F64>(((-(_2799_z)) * _2799_z) - 0.5625)) * _1d1c9ec33_exp(static_cast<jule::F64>(((_2799_z - _21716_x) * (_2799_z + _21716_x)) + jule::div(_27013_R,_27113_S)));
	if (_22913_sign) {
		return static_cast<jule::F64>(jule::div(_2809_r,_21716_x) - 1LL);
	}
	return static_cast<jule::F64>(1LL - jule::div(_2809_r,_21716_x));
}



inline jule::F64 _1d1d96467_erfc(jule::F64 _29317_x) {
	
	{
		if (!((_1d186ec98_is_nan(_29317_x)))) { goto _case_end_4562144224; }
		_case_begin_4562144224:;
		{
			return static_cast<jule::F64>(_1d186ec98_nan());
		}
		goto _match_end_4562144064;
		_case_end_4562144224:;
		if (!((_1d186ec98_is_inf(_29317_x,1LL)))) { goto _case_end_4562144336; }
		_case_begin_4562144336:;
		{
			return 0LL;
		}
		goto _match_end_4562144064;
		_case_end_4562144336:;
		if (!((_1d186ec98_is_inf(_29317_x,-1LL)))) { goto _case_end_4562144448; }
		_case_begin_4562144448:;
		{
			return 2LL;
		}
		goto _match_end_4562144064;
		_case_end_4562144448:;
		_match_end_4562144064:;
	}
	jule::Bool _30413_sign = false;
	if (_29317_x < 0LL) {
		_29317_x=static_cast<jule::F64>((-(_29317_x)));
		_30413_sign=true;
	}
	if (_29317_x < 0.84375) {
		jule::F64 _31017_temp = 0LL;
		if (_29317_x < 0.000000000000000013877787807814457) {
			_31017_temp=_29317_x;
		} else {
			jule::F64 _31417_z = _29317_x * _29317_x;
			jule::F64 _31517_r = 0.12837916709551256 + (_31417_z * (-0.3250421072470015 + (_31417_z * (-0.02848174957559851 + (_31417_z * (-0.005770270296489442 + (_31417_z * -0.000023763016656650163)))))));
			jule::F64 _31617_s = 1LL + (_31417_z * (0.39791722395915535 + (_31417_z * (0.0650222499887673 + (_31417_z * (0.005081306281875766 + (_31417_z * (0.00013249473800432164 + (_31417_z * -0.000003960228278775368)))))))));
			jule::F64 _31717_y = jule::div(_31517_r,_31617_s);
			if (_29317_x < 0.25) {
				_31017_temp=static_cast<jule::F64>(_29317_x + (_29317_x * _31717_y));
			} else {
				_31017_temp=static_cast<jule::F64>(0.5 + ((_29317_x * _31717_y) + (_29317_x - 0.5)));
			}
		}
		if (_30413_sign) {
			return static_cast<jule::F64>(1LL + _31017_temp);
		}
		return static_cast<jule::F64>(1LL - _31017_temp);
	}
	if (_29317_x < 1.25) {
		jule::F64 _33013_s = _29317_x - 1LL;
		jule::F64 _33113_P = -0.0023621185607526594 + (_33013_s * (0.41485611868374833 + (_33013_s * (-0.3722078760357013 + (_33013_s * (0.31834661990116175 + (_33013_s * (-0.11089469428239668 + (_33013_s * (0.035478304325618236 + (_33013_s * -0.002166375594868791)))))))))));
		jule::F64 _33213_Q = 1LL + (_33013_s * (0.10642088040084423 + (_33013_s * (0.540397917702171 + (_33013_s * (0.07182865441419627 + (_33013_s * (0.12617121980876164 + (_33013_s * (0.01363708391202905 + (_33013_s * 0.011984499846799107)))))))))));
		if (_30413_sign) {
			return static_cast<jule::F64>(1.8450629115104675 + jule::div(_33113_P,_33213_Q));
		}
		return static_cast<jule::F64>(0.15493708848953247 - jule::div(_33113_P,_33213_Q));
	}
	if (_29317_x < 28LL) {
		jule::F64 _34013_s = jule::div(1LL,_29317_x * _29317_x);
		jule::F64 _34117_R = 0LL;
		jule::F64 _34217_S = 0LL;
		if (_29317_x < 2.857142857142857) {
			_34117_R=static_cast<jule::F64>(-0.009864944034847148 + (_34013_s * (-0.6938585727071818 + (_34013_s * (-10.558626225323291 + (_34013_s * (-62.375332450326006 + (_34013_s * (-162.39666946257347 + (_34013_s * (-184.60509290671104 + (_34013_s * (-81.2874355063066 + (_34013_s * -9.814329344169145))))))))))))));
			_34217_S=static_cast<jule::F64>(1LL + (_34013_s * (19.651271667439257 + (_34013_s * (137.65775414351904 + (_34013_s * (434.56587747522923 + (_34013_s * (645.3872717332679 + (_34013_s * (429.00814002756783 + (_34013_s * (108.63500554177944 + (_34013_s * (6.570249770319282 + (_34013_s * -0.0604244152148581))))))))))))))));
		} else {
			if (_30413_sign && (_29317_x > 6LL)) {
				return 2LL;
			}
			_34117_R=static_cast<jule::F64>(-0.0098649429247001 + (_34013_s * (-0.799283237680523 + (_34013_s * (-17.757954917754752 + (_34013_s * (-160.63638485582192 + (_34013_s * (-637.5664433683896 + (_34013_s * (-1025.0951316110772 + (_34013_s * -483.5191916086514))))))))))));
			_34217_S=static_cast<jule::F64>(1LL + (_34013_s * (30.33806074348246 + (_34013_s * (325.7925129965739 + (_34013_s * (1536.729586084437 + (_34013_s * (3199.8582195085955 + (_34013_s * (2553.0504064331644 + (_34013_s * (474.52854120695537 + (_34013_s * -22.44095244658582))))))))))))));
		}
		jule::F64 _35313_z = _1d17de7ea_f64_from_bits(static_cast<jule::U64>(_1d17de7ea_f64_bits(_29317_x) & 18446744069414584320LLU));
		jule::F64 _35413_r = _1d1c9ec33_exp(static_cast<jule::F64>(((-(_35313_z)) * _35313_z) - 0.5625)) * _1d1c9ec33_exp(static_cast<jule::F64>(((_35313_z - _29317_x) * (_35313_z + _29317_x)) + jule::div(_34117_R,_34217_S)));
		if (_30413_sign) {
			return static_cast<jule::F64>(2LL - jule::div(_35413_r,_29317_x));
		}
		return static_cast<jule::F64>(jule::div(_35413_r,_29317_x));
	}
	if (_30413_sign) {
		return 2LL;
	}
	return 0LL;
}



inline jule::F64 _1d1dd5808_pow10(jule::Int _6114_n) {
	if ((0LL <= _6114_n) && (_6114_n <= 308LL)) {
		return static_cast<jule::F64>(_1d1dd5808_POW10_POSTAB32[static_cast<jule::Int>(jule::div(static_cast<jule::Uint>(_6114_n),32LL))] * _1d1dd5808_POW10_TAB[static_cast<jule::Int>(jule::mod(static_cast<jule::Uint>(_6114_n),32LL))]);
	}
	if ((-323LL <= _6114_n) && (_6114_n <= 0LL)) {
		return static_cast<jule::F64>(jule::div(_1d1dd5808_POW10_NEGTAB32[static_cast<jule::Int>(jule::div(static_cast<jule::Uint>((-(_6114_n))),32LL))],_1d1dd5808_POW10_TAB[static_cast<jule::Int>(jule::mod(static_cast<jule::Uint>((-(_6114_n))),32LL))]));
	}
	if (_6114_n > 0LL) {
		return static_cast<jule::F64>(_1d186ec98_inf(1LL));
	}
	return 0LL;
}



inline jule::F64 _1d1d96b60_sqrt(jule::F64 _12313_x) {
	{
		if (!((_12313_x == 0LL) || (_1d186ec98_is_nan(_12313_x)) || (_1d186ec98_is_inf(_12313_x,1LL)))) { goto _case_end_4562208896; }
		_case_begin_4562208896:;
		{
			return _12313_x;
		}
		goto _match_end_4562202944;
		_case_end_4562208896:;
		if (!((_12313_x < 0LL))) { goto _case_end_4562209024; }
		_case_begin_4562209024:;
		{
			return static_cast<jule::F64>(_1d186ec98_nan());
		}
		goto _match_end_4562202944;
		_case_end_4562209024:;
		_match_end_4562202944:;
	}
	jule::U64 _13113_ix = _1d17de7ea_f64_bits(_12313_x);
	jule::Int _13313_exp = static_cast<jule::Int>((_13113_ix >> 52LL) & 2047LL);
	if (_13313_exp == 0LL) {
		_iter_begin_4562203040:;
		if (!((_13113_ix & 4503599627370496LLU) == 0LL)) { goto _iter_end_4562203040; }
		{
			_13113_ix<<=1LL;
			(_13313_exp)--;
		}
		_iter_next_4562203040:;
		goto _iter_begin_4562203040;
		_iter_end_4562203040:;
		(_13313_exp)++;
	}
	_13313_exp-=1023LL;
	_13113_ix=static_cast<jule::U64>(_13113_ix & 9227875636482146303LLU);
	_13113_ix|=4503599627370496LLU;
	if ((_13313_exp & 1LL) == 1LL) {
		_13113_ix<<=1LL;
	}
	_13313_exp>>=1LL;
	_13113_ix<<=1LL;
	jule::U64 _15013_q = 0LLU;
	jule::U64 _15113_s = 0LLU;
	jule::U64 _15213_r = static_cast<jule::U64>(9007199254740992LLU);
	_iter_begin_4562220832:;
	if (!(_15213_r != 0LL)) { goto _iter_end_4562220832; }
	{
		jule::U64 _15413_t = _15113_s + _15213_r;
		if (_15413_t <= _13113_ix) {
			_15113_s=static_cast<jule::U64>(_15413_t + _15213_r);
			_13113_ix-=_15413_t;
			_15013_q+=_15213_r;
		}
		_13113_ix<<=1LL;
		_15213_r>>=1LL;
	}
	_iter_next_4562220832:;
	goto _iter_begin_4562220832;
	_iter_end_4562220832:;
	if (_13113_ix != 0LL) {
		_15013_q+=static_cast<jule::U64>(_15013_q & 1LL);
	}
	_13113_ix=static_cast<jule::U64>((_15013_q >> 1LL) + (static_cast<jule::U64>((_13313_exp - 1LL) + 1023LL) << 52LL));
	return static_cast<jule::F64>(_1d17de7ea_f64_from_bits(_13113_ix));
}



inline jule::F64 _1d1e1b850_logb(jule::F64 _4413_x) {
	{
		if (!((_4413_x == 0LL))) { goto _case_end_4562230272; }
		_case_begin_4562230272:;
		{
			return static_cast<jule::F64>(_1d186ec98_inf(-1LL));
		}
		goto _match_end_4562229984;
		_case_end_4562230272:;
		if (!((_1d186ec98_is_inf(_4413_x,0LL)))) { goto _case_end_4562230384; }
		_case_begin_4562230384:;
		{
			return static_cast<jule::F64>(_1d186ec98_inf(1LL));
		}
		goto _match_end_4562229984;
		_case_end_4562230384:;
		if (!((_1d186ec98_is_nan(_4413_x)))) { goto _case_end_4562230496; }
		_case_begin_4562230496:;
		{
			return _4413_x;
		}
		goto _match_end_4562229984;
		_case_end_4562230496:;
		_match_end_4562229984:;
	}
	return static_cast<jule::F64>(_1d1e1b850__ilogb(_4413_x));
}



inline jule::Int _1d1e1b850_ilogb(jule::F64 _6314_x) {
	{
		if (!((_6314_x == 0LL))) { goto _case_end_4562235312; }
		_case_begin_4562235312:;
		{
			return -2147483648LL;
		}
		goto _match_end_4562231888;
		_case_end_4562235312:;
		if (!((_1d186ec98_is_nan(_6314_x)))) { goto _case_end_4562235424; }
		_case_begin_4562235424:;
		{
			return 2147483647LL;
		}
		goto _match_end_4562231888;
		_case_end_4562235424:;
		if (!((_1d186ec98_is_inf(_6314_x,0LL)))) { goto _case_end_4562235536; }
		_case_begin_4562235536:;
		{
			return 2147483647LL;
		}
		goto _match_end_4562231888;
		_case_end_4562235536:;
		_match_end_4562231888:;
	}
	return static_cast<jule::Int>(_1d1e1b850__ilogb(_6314_x));
}



inline jule::Int _1d1e1b850__ilogb(jule::F64 _7715_x) {
	jule::Int _7813_exp = 0LL;
	std::tie(_7715_x,_7813_exp) = _1d186ec98_normalize(_7715_x);
	return static_cast<jule::Int>((static_cast<jule::Int>((_1d17de7ea_f64_bits(_7715_x) >> 52LL) & 2047LL) - 1023LL) + _7813_exp);
}



inline jule::F64 _1d1d6e52d_jn(jule::Int _8415_n,jule::F64 _8427_x) {
	
	
	{
		if (!((_1d186ec98_is_nan(_8427_x)))) { goto _case_end_4562246720; }
		_case_begin_4562246720:;
		{
			return _8427_x;
		}
		goto _match_end_4562246464;
		_case_end_4562246720:;
		if (!((_1d186ec98_is_inf(_8427_x,0LL)))) { goto _case_end_4562246832; }
		_case_begin_4562246832:;
		{
			return 0LL;
		}
		goto _match_end_4562246464;
		_case_end_4562246832:;
		_match_end_4562246464:;
	}
	if (_8415_n == 0LL) {
		return static_cast<jule::F64>(_1d1acb9a5_j0(_8427_x));
	}
	if (_8427_x == 0LL) {
		return 0LL;
	}
	if (_8415_n < 0LL) {
		std::tie(_8415_n,_8427_x) = std::make_tuple(static_cast<jule::Int>((-(_8415_n))),static_cast<jule::F64>((-(_8427_x))));
	}
	if (_8415_n == 1LL) {
		return static_cast<jule::F64>(_1d199d15c_j1(_8427_x));
	}
	jule::Bool _10913_sign = false;
	if (_8427_x < 0LL) {
		_8427_x=static_cast<jule::F64>((-(_8427_x)));
		if ((_8415_n & 1LL) == 1LL) {
			_10913_sign=true;
		}
	}
	jule::F64 _11613_b = 0LL;
	if (static_cast<jule::F64>(_8415_n) <= _8427_x) {
		if (_8427_x >= 5967269506265907200LL) {
			jule::F64 _13321_temp = 0LL;
			jule::F64 _13418_s;
			jule::F64 _13421_c;
			std::tie(_13418_s,_13421_c) = _1d191d583_sincos(_8427_x);
			{
				auto _match_expr{ _8415_n & 3LL };
				if (!((0LL) == _match_expr)) { goto _case_end_4562262992; }
				_case_begin_4562262992:;
				{
					_13321_temp=static_cast<jule::F64>(_13421_c + _13418_s);
				}
				goto _match_end_4562260752;
				_case_end_4562262992:;
				if (!((1LL) == _match_expr)) { goto _case_end_4562263136; }
				_case_begin_4562263136:;
				{
					_13321_temp=static_cast<jule::F64>((-(_13421_c)) + _13418_s);
				}
				goto _match_end_4562260752;
				_case_end_4562263136:;
				if (!((2LL) == _match_expr)) { goto _case_end_4562263248; }
				_case_begin_4562263248:;
				{
					_13321_temp=static_cast<jule::F64>((-(_13421_c)) - _13418_s);
				}
				goto _match_end_4562260752;
				_case_end_4562263248:;
				if (!((3LL) == _match_expr)) { goto _case_end_4562263360; }
				_case_begin_4562263360:;
				{
					_13321_temp=static_cast<jule::F64>(_13421_c - _13418_s);
				}
				goto _match_end_4562260752;
				_case_end_4562263360:;
				_match_end_4562260752:;
			}
			_11613_b=static_cast<jule::F64>(jule::div(0.5641895835477563 * _13321_temp,_1d1d96b60_sqrt(_8427_x)));
		} else {
			_11613_b=static_cast<jule::F64>(_1d199d15c_j1(_8427_x));
			jule::Int _14422_i = 1LL;
			jule::F64 _14429_a = _1d1acb9a5_j0(_8427_x);
			std::tie(_14422_i,_14429_a) = std::make_tuple(1LL,_1d1acb9a5_j0(_8427_x));
			_iter_begin_4562259024:;
			if (!(_14422_i < _8415_n)) { goto _iter_end_4562259024; }
			{
				std::tie(_14429_a,_11613_b) = std::make_tuple(_11613_b,static_cast<jule::F64>((_11613_b * jule::div(static_cast<jule::F64>(_14422_i + _14422_i),_8427_x)) - _14429_a));
			}
			_iter_next_4562259024:;
			(_14422_i)++;
			goto _iter_begin_4562259024;
			_iter_end_4562259024:;
		}
	} else {
		if (_8427_x < 0.000000001862645149230957) {
			if (_8415_n > 33LL) {
				_11613_b=0LL;
			} else {
				jule::F64 _15721_temp = _8427_x * 0.5;
				_11613_b=_15721_temp;
				jule::F64 _15925_a = 1LL;
				jule::Int _16025_i = 2LL;
				_iter_begin_4562279120:;
				if (!(_16025_i <= _8415_n)) { goto _iter_end_4562279120; }
				{
					_15925_a*=static_cast<jule::F64>(_16025_i);
					_11613_b*=_15721_temp;
				}
				_iter_next_4562279120:;
				(_16025_i)++;
				goto _iter_begin_4562279120;
				_iter_end_4562279120:;
				_11613_b = jule::div(_11613_b,_15925_a);
			}
		} else {
			jule::F64 _19717_w = jule::div(static_cast<jule::F64>(_8415_n + _8415_n),_8427_x);
			jule::F64 _19817_h = jule::div(2LL,_8427_x);
			jule::F64 _19921_q0 = _19717_w;
			jule::F64 _20021_z = _19717_w + _19817_h;
			jule::F64 _20121_q1 = (_19717_w * _20021_z) - 1LL;
			jule::Int _20221_k = 1LL;
			_iter_begin_4562286304:;
			if (!(_20121_q1 < 1000000000LL)) { goto _iter_end_4562286304; }
			{
				(_20221_k)++;
				_20021_z+=_19817_h;
				std::tie(_19921_q0,_20121_q1) = std::make_tuple(_20121_q1,static_cast<jule::F64>((_20021_z * _20121_q1) - _19921_q0));
			}
			_iter_next_4562286304:;
			goto _iter_begin_4562286304;
			_iter_end_4562286304:;
			jule::Int _20817_m = _8415_n + _8415_n;
			jule::F64 _20921_t = 0LL;
			jule::Int _21021_i = 2LL * (_8415_n + _20221_k);
			_iter_begin_4562291552:;
			if (!(_21021_i >= _20817_m)) { goto _iter_end_4562291552; }
			{
				_20921_t=static_cast<jule::F64>(jule::div(1LL,jule::div(static_cast<jule::F64>(_21021_i),_8427_x) - _20921_t));
			}
			_iter_next_4562291552:;
			_21021_i-=2LL;
			goto _iter_begin_4562291552;
			_iter_end_4562291552:;
			jule::F64 _21421_a = _20921_t;
			_11613_b=1LL;
			jule::F64 _22421_tmp = static_cast<jule::F64>(_8415_n);
			jule::F64 _22517_v = jule::div(2LL,_8427_x);
			_22421_tmp=static_cast<jule::F64>(_22421_tmp * _1d1911125_log(static_cast<jule::F64>(_1d19740ab_abs(static_cast<jule::F64>(_22517_v * _22421_tmp)))));
			if (_22421_tmp < 709.782712893384) {
				_21021_i=static_cast<jule::Int>(_8415_n - 1LL);
				_iter_begin_4562300944:;
				if (!(_21021_i > 0LL)) { goto _iter_end_4562300944; }
				{
					jule::F64 _23025_di = static_cast<jule::F64>(_21021_i + _21021_i);
					std::tie(_21421_a,_11613_b) = std::make_tuple(_11613_b,static_cast<jule::F64>(jule::div(_11613_b * _23025_di,_8427_x) - _21421_a));
				}
				_iter_next_4562300944:;
				(_21021_i)--;
				goto _iter_begin_4562300944;
				_iter_end_4562300944:;
			} else {
				_21021_i=static_cast<jule::Int>(_8415_n - 1LL);
				_iter_begin_4562303824:;
				if (!(_21021_i > 0LL)) { goto _iter_end_4562303824; }
				{
					jule::F64 _23625_di = static_cast<jule::F64>(_21021_i + _21021_i);
					std::tie(_21421_a,_11613_b) = std::make_tuple(_11613_b,static_cast<jule::F64>(jule::div(_11613_b * _23625_di,_8427_x) - _21421_a));
					if (_11613_b > 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) {
						_21421_a = jule::div(_21421_a,_11613_b);
						_20921_t = jule::div(_20921_t,_11613_b);
						_11613_b=1LL;
					}
				}
				_iter_next_4562303824:;
				(_21021_i)--;
				goto _iter_begin_4562303824;
				_iter_end_4562303824:;
			}
			_11613_b=static_cast<jule::F64>(jule::div(_20921_t * _1d1acb9a5_j0(_8427_x),_11613_b));
		}
	}
	if (_10913_sign) {
		return static_cast<jule::F64>((-(_11613_b)));
	}
	return _11613_b;
}



inline jule::F64 _1d1d6e52d_yn(jule::Int _26315_n,jule::F64 _26323_x) {
	
	{
		if (!((_26323_x < 0LL) || (_1d186ec98_is_nan(_26323_x)))) { goto _case_end_4562312176; }
		_case_begin_4562312176:;
		{
			return static_cast<jule::F64>(_1d186ec98_nan());
		}
		goto _match_end_4562312000;
		_case_end_4562312176:;
		if (!((_1d186ec98_is_inf(_26323_x,1LL)))) { goto _case_end_4562312304; }
		_case_begin_4562312304:;
		{
			return 0LL;
		}
		goto _match_end_4562312000;
		_case_end_4562312304:;
		_match_end_4562312000:;
	}
	if (_26315_n == 0LL) {
		return static_cast<jule::F64>(_1d1acb9a5_y0(_26323_x));
	}
	if (_26323_x == 0LL) {
		if ((_26315_n < 0LL) && ((_26315_n & 1LL) == 1LL)) {
			return static_cast<jule::F64>(_1d186ec98_inf(1LL));
		}
		return static_cast<jule::F64>(_1d186ec98_inf(-1LL));
	}
	jule::Bool _28213_sign = false;
	if (_26315_n < 0LL) {
		_26315_n=static_cast<jule::Int>((-(_26315_n)));
		if ((_26315_n & 1LL) == 1LL) {
			_28213_sign=true;
		}
	}
	if (_26315_n == 1LL) {
		if (_28213_sign) {
			return static_cast<jule::F64>((-(_1d199d15c_y1(_26323_x))));
		}
		return static_cast<jule::F64>(_1d199d15c_y1(_26323_x));
	}
	jule::F64 _29513_b = 0LL;
	if (_26323_x >= 5967269506265907200LL) {
		jule::F64 _31017_temp = 0LL;
		jule::F64 _31114_s;
		jule::F64 _31117_c;
		std::tie(_31114_s,_31117_c) = _1d191d583_sincos(_26323_x);
		{
			auto _match_expr{ _26315_n & 3LL };
			if (!((0LL) == _match_expr)) { goto _case_end_4562329232; }
			_case_begin_4562329232:;
			{
				_31017_temp=static_cast<jule::F64>(_31114_s - _31117_c);
			}
			goto _match_end_4562326992;
			_case_end_4562329232:;
			if (!((1LL) == _match_expr)) { goto _case_end_4562329376; }
			_case_begin_4562329376:;
			{
				_31017_temp=static_cast<jule::F64>((-(_31114_s)) - _31117_c);
			}
			goto _match_end_4562326992;
			_case_end_4562329376:;
			if (!((2LL) == _match_expr)) { goto _case_end_4562329488; }
			_case_begin_4562329488:;
			{
				_31017_temp=static_cast<jule::F64>((-(_31114_s)) + _31117_c);
			}
			goto _match_end_4562326992;
			_case_end_4562329488:;
			if (!((3LL) == _match_expr)) { goto _case_end_4562329600; }
			_case_begin_4562329600:;
			{
				_31017_temp=static_cast<jule::F64>(_31114_s + _31117_c);
			}
			goto _match_end_4562326992;
			_case_end_4562329600:;
			_match_end_4562326992:;
		}
		_29513_b=static_cast<jule::F64>(jule::div(0.5641895835477563 * _31017_temp,_1d1d96b60_sqrt(_26323_x)));
	} else {
		jule::F64 _32017_a = _1d1acb9a5_y0(_26323_x);
		_29513_b=static_cast<jule::F64>(_1d199d15c_y1(_26323_x));
		jule::Int _32317_i = 1LL;
		_iter_begin_4562334640:;
		if (!((_32317_i < _26315_n) && (!(_1d186ec98_is_inf(_29513_b,-1LL))))) { goto _iter_end_4562334640; }
		{
			std::tie(_32017_a,_29513_b) = std::make_tuple(_29513_b,static_cast<jule::F64>((jule::div(static_cast<jule::F64>(_32317_i + _32317_i),_26323_x) * _29513_b) - _32017_a));
		}
		_iter_next_4562334640:;
		(_32317_i)++;
		goto _iter_begin_4562334640;
		_iter_end_4562334640:;
	}
	if (_28213_sign) {
		return static_cast<jule::F64>((-(_29513_b)));
	}
	return _29513_b;
}



inline jule::F64 _1d1e10899_remainder(jule::F64 _6822_x,jule::F64 _6834_y) {
	
	
	{
		if (!((_1d186ec98_is_nan(_6822_x)) || (_1d186ec98_is_nan(_6834_y)) || (_1d186ec98_is_inf(_6822_x,0LL)) || (_6834_y == 0LL))) { goto _case_end_4562344000; }
		_case_begin_4562344000:;
		{
			return static_cast<jule::F64>(_1d186ec98_nan());
		}
		goto _match_end_4562343744;
		_case_end_4562344000:;
		if (!((_1d186ec98_is_inf(_6834_y,0LL)))) { goto _case_end_4562344112; }
		_case_begin_4562344112:;
		{
			return _6822_x;
		}
		goto _match_end_4562343744;
		_case_end_4562344112:;
		_match_end_4562343744:;
	}
	jule::Bool _7913_sign = false;
	if (_6822_x < 0LL) {
		_6822_x=static_cast<jule::F64>((-(_6822_x)));
		_7913_sign=true;
	}
	if (_6834_y < 0LL) {
		_6834_y=static_cast<jule::F64>((-(_6834_y)));
	}
	if (_6822_x == _6834_y) {
		if (_7913_sign) {
			jule::F64 _8917_zero = 0LL;
			return static_cast<jule::F64>((-(_8917_zero)));
		}
		return 0LL;
	}
	if (_6834_y <= 89884656743115790000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) {
		_6822_x=static_cast<jule::F64>(_1d184a504_mod(_6822_x,static_cast<jule::F64>(_6834_y + _6834_y)));
	}
	if (_6834_y < 0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004450147717014403) {
		if ((_6822_x + _6822_x) > _6834_y) {
			_6822_x-=_6834_y;
			if ((_6822_x + _6822_x) >= _6834_y) {
				_6822_x-=_6834_y;
			}
		}
	} else {
		jule::F64 _10513_y_half = 0.5 * _6834_y;
		if (_6822_x > _10513_y_half) {
			_6822_x-=_6834_y;
			if (_6822_x >= _10513_y_half) {
				_6822_x-=_6834_y;
			}
		}
	}
	if (_7913_sign) {
		_6822_x=static_cast<jule::F64>((-(_6822_x)));
	}
	return _6822_x;
}



inline jule::F64 _1d1ea4630_xatan(jule::F64 _8610_x) {
	
	
	
	
	
	
	
	
	
	
	jule::F64 _9813_z = _8610_x * _8610_x;
	_9813_z=static_cast<jule::F64>(jule::div(_9813_z * ((((((((-0.8750608600031904 * _9813_z) + -16.157537187333652) * _9813_z) + -75.00855792314705) * _9813_z) + -122.88666844901361) * _9813_z) + -64.85021904942025),((((((((_9813_z + 24.858464901423062) * _9813_z) + 165.02700983169885) * _9813_z) + 432.88106049129027) * _9813_z) + 485.3903996359137) * _9813_z) + 194.5506571482614));
	_9813_z=static_cast<jule::F64>((_8610_x * _9813_z) + _8610_x);
	return _9813_z;
}



inline jule::F64 _1d1ea4630_satan(jule::F64 _10610_x) {
	
	
	if (_10610_x <= 0.66) {
		return static_cast<jule::F64>(_1d1ea4630_xatan(_10610_x));
	}
	if (_10610_x > 2.414213562373095) {
		return static_cast<jule::F64>((1.5707963267948966 - _1d1ea4630_xatan(static_cast<jule::F64>(jule::div(1LL,_10610_x)))) + 0.00000000000000006123233995736766);
	}
	return static_cast<jule::F64>((0.7853981633974483 + _1d1ea4630_xatan(static_cast<jule::F64>(jule::div(_10610_x - 1LL,_10610_x + 1LL)))) + 0.00000000000000003061616997868383);
}



inline jule::F64 _1d1ea4630_atan(jule::F64 _12413_x) {
	if (_12413_x == 0LL) {
		return _12413_x;
	}
	if (_12413_x > 0LL) {
		return static_cast<jule::F64>(_1d1ea4630_satan(_12413_x));
	}
	return static_cast<jule::F64>((-(_1d1ea4630_satan(static_cast<jule::F64>((-(_12413_x)))))));
}



inline jule::F64 _1d1edc426_asin(jule::F64 _5017_x) {
	if (_5017_x == 0LL) {
		return _5017_x;
	}
	jule::Bool _5413_sign = false;
	if (_5017_x < 0LL) {
		_5017_x=static_cast<jule::F64>((-(_5017_x)));
		_5413_sign=true;
	}
	if (_5017_x > 1LL) {
		return static_cast<jule::F64>(_1d186ec98_nan());
	}
	jule::F64 _6313_temp = _1d1d96b60_sqrt(static_cast<jule::F64>(1LL - (_5017_x * _5017_x)));
	if (_5017_x > 0.7) {
		_6313_temp=static_cast<jule::F64>(1.5707963267948966 - _1d1ea4630_satan(static_cast<jule::F64>(jule::div(_6313_temp,_5017_x))));
	} else {
		_6313_temp=static_cast<jule::F64>(_1d1ea4630_satan(static_cast<jule::F64>(jule::div(_5017_x,_6313_temp))));
	}
	if (_5413_sign) {
		_6313_temp=static_cast<jule::F64>((-(_6313_temp)));
	}
	return _6313_temp;
}



inline jule::F64 _1d1edc426_acos(jule::F64 _8013_x) {
	return static_cast<jule::F64>(1.5707963267948966 - _1d1edc426_asin(_8013_x));
}



inline jule::F64 _1d2018d8c_asinh(jule::F64 _7018_x) {
	
	
	
	if (_1d186ec98_is_nan(_7018_x) || _1d186ec98_is_inf(_7018_x,0LL)) {
		return _7018_x;
	}
	jule::Bool _7913_sign = false;
	if (_7018_x < 0LL) {
		_7018_x=static_cast<jule::F64>((-(_7018_x)));
		_7913_sign=true;
	}
	jule::F64 _8413_temp = 0LL;
	{
		if (!((_7018_x > 268435456LLU))) { goto _case_end_4562425296; }
		_case_begin_4562425296:;
		{
			_8413_temp=static_cast<jule::F64>(_1d1911125_log(_7018_x) + 0.6931471805599453);
		}
		goto _match_end_4562422000;
		_case_end_4562425296:;
		if (!((_7018_x > 2LL))) { goto _case_end_4562427968; }
		_case_begin_4562427968:;
		{
			_8413_temp=static_cast<jule::F64>(_1d1911125_log(static_cast<jule::F64>((2LL * _7018_x) + jule::div(1LL,_1d1d96b60_sqrt(static_cast<jule::F64>((_7018_x * _7018_x) + 1LL)) + _7018_x))));
		}
		goto _match_end_4562422000;
		_case_end_4562427968:;
		if (!((_7018_x < 0.000000003725290298461914))) { goto _case_end_4562425488; }
		_case_begin_4562425488:;
		{
			_8413_temp=_7018_x;
		}
		goto _match_end_4562422000;
		_case_end_4562425488:;
		_case_begin_4562424480:;
		{
			_8413_temp=static_cast<jule::F64>(_1d1cc27c2_log1p(static_cast<jule::F64>(_7018_x + jule::div(_7018_x * _7018_x,1LL + _1d1d96b60_sqrt(static_cast<jule::F64>(1LL + (_7018_x * _7018_x)))))));
		}
		goto _match_end_4562422000;
		_case_end_4562424480:;
		_match_end_4562422000:;
	}
	if (_7913_sign) {
		_8413_temp=static_cast<jule::F64>((-(_8413_temp)));
	}
	return _8413_temp;
}



inline std::tuple<jule::Bool,jule::Int> _1d05ce773_conv_bool(jule::Str _4118_s) {
	{
		auto _match_expr{ _4118_s };
		if (!((jule::Str("1", 1)) == _match_expr || (jule::Str("t", 1)) == _match_expr || (jule::Str("T", 1)) == _match_expr || (jule::Str("true", 4)) == _match_expr || (jule::Str("TRUE", 4)) == _match_expr || (jule::Str("True", 4)) == _match_expr)) { goto _case_end_4562932656; }
		_case_begin_4562932656:;
		{
			return std::make_tuple(true,0LLU);
		}
		goto _match_end_4562932288;
		_case_end_4562932656:;
		if (!((jule::Str("0", 1)) == _match_expr || (jule::Str("f", 1)) == _match_expr || (jule::Str("F", 1)) == _match_expr || (jule::Str("false", 5)) == _match_expr || (jule::Str("FALSE", 5)) == _match_expr || (jule::Str("False", 5)) == _match_expr)) { goto _case_end_4562932880; }
		_case_begin_4562932880:;
		{
			return std::make_tuple(false,0LLU);
		}
		goto _match_end_4562932288;
		_case_end_4562932880:;
		_match_end_4562932288:;
	}
	return std::make_tuple(false,2LLU);
}



inline jule::Str _1d05ce773_fmt_bool(jule::Bool _5217_b) {
	if (_5217_b) {
		return jule::Str("true", 4);
	}
	return jule::Str("false", 5);
}



inline jule::Str _1d061d5e7_fmt_float(jule::F64 _7818_f,jule::U8 _7826_fmt,jule::Int _7837_prec,jule::Int _7848_bit_size) {
	return static_cast<jule::Str>(_1d061d5e7_generic_ftoa(nullptr,_7818_f,_7826_fmt,_7837_prec,_7848_bit_size));
}



inline jule::Slice<jule::U8> _1d061d5e7_generic_ftoa(jule::Slice<jule::U8> _8221_dst,jule::F64 _8234_val,jule::U8 _8244_fmt,jule::Int _8259_prec,jule::Int _8270_bit_size) {
	jule::U64 _8313_bits = 0LLU;
	_1d061d5e7_FloatInfo* _8413_flt = nullptr;
	{
		auto _match_expr{ _8270_bit_size };
		if (!((32LL) == _match_expr)) { goto _case_end_4562950880; }
		_case_begin_4562950880:;
		{
			_8313_bits=static_cast<jule::U64>(_1d17de7ea_f32_bits(static_cast<jule::F32>(_8234_val)));
			_8413_flt=(&(_1d061d5e7_F32_INFO));
		}
		goto _match_end_4562948528;
		_case_end_4562950880:;
		if (!((64LL) == _match_expr)) { goto _case_end_4562950192; }
		_case_begin_4562950192:;
		{
			_8313_bits=static_cast<jule::U64>(_1d17de7ea_f64_bits(_8234_val));
			_8413_flt=(&(_1d061d5e7_F64_INFO));
		}
		goto _match_end_4562948528;
		_case_end_4562950192:;
		_case_begin_4562949408:;
		{
			jule::panic(jule::Str("std::conv: illegal bit_size", 27));
		}
		goto _match_end_4562948528;
		_case_end_4562949408:;
		_match_end_4562948528:;
	}
	jule::Bool _969_neg = (_8313_bits >> (_8413_flt->_field_expbits + _8413_flt->_field_mantbits)) != 0LL;
	jule::Int _9713_exp = static_cast<jule::Int>(_8313_bits >> _8413_flt->_field_mantbits) & ((1LL << _8413_flt->_field_expbits) - 1LL);
	jule::U64 _9813_mant = _8313_bits & ((static_cast<jule::U64>(1LLU) << _8413_flt->_field_mantbits) - 1LL);
	{
		auto _match_expr{ _9713_exp };
		if (!(((1LL << _8413_flt->_field_expbits) - 1LL) == _match_expr)) { goto _case_end_4562960848; }
		_case_begin_4562960848:;
		{
			jule::Str _10317_s = jule::Str("", 0);
			{
				if (!((_9813_mant != 0LL))) { goto _case_end_4562966928; }
				_case_begin_4562966928:;
				{
					_10317_s=jule::Str("nan", 3);
				}
				goto _match_end_4562964864;
				_case_end_4562966928:;
				if (!((_969_neg))) { goto _case_end_4562966016; }
				_case_begin_4562966016:;
				{
					_10317_s=jule::Str("-inf", 4);
				}
				goto _match_end_4562964864;
				_case_end_4562966016:;
				_case_begin_4562964992:;
				{
					_10317_s=jule::Str("+inf", 4);
				}
				goto _match_end_4562964864;
				_case_end_4562964992:;
				_match_end_4562964864:;
			}
			return jule::append(_8221_dst,static_cast<jule::Slice<jule::U8>>(_10317_s));
		}
		goto _match_end_4562956032;
		_case_end_4562960848:;
		if (!((0LL) == _match_expr)) { goto _case_end_4562962608; }
		_case_begin_4562962608:;
		{
			(_9713_exp)++;
		}
		goto _match_end_4562956032;
		_case_end_4562962608:;
		_case_begin_4562959792:;
		{
			_9813_mant|=static_cast<jule::Uint>(static_cast<jule::U64>(1LLU) << _8413_flt->_field_mantbits);
		}
		goto _match_end_4562956032;
		_case_end_4562959792:;
		_match_end_4562956032:;
	}
	_9713_exp+=_8413_flt->_field_bias;
	if (_8244_fmt == 'b') {
		return _1d061d5e7_fmt_b(_8221_dst,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	if ((_8244_fmt == 'x') || (_8244_fmt == 'X')) {
		return _1d061d5e7_fmt_x(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	if (false) {
		return _1d061d5e7_big_ftoa(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	_1d061d5e7_DecimalSlice _13413_digs = _1d061d5e7_DecimalSlice();
	jule::Bool _13513_ok = false;
	jule::Bool _1379_shortest = _8259_prec < 0LL;
	if (_1379_shortest) {
		jule::Array<jule::U8,32> _14013_buf = jule::Array<jule::U8,32>({});
		_13413_digs._field_d=_14013_buf.slice(0LL);
		_1d14d25dc_ryu_ftoa_shortest(_13413_digs,_9813_mant,static_cast<jule::Int>(static_cast<jule::Int>(_9713_exp - static_cast<jule::Int>(_8413_flt->_field_mantbits))),(*(_8413_flt)));
		_13513_ok=true;
		{
			auto _match_expr{ _8244_fmt };
			if (!(('e') == _match_expr || ('E') == _match_expr)) { goto _case_end_4562978160; }
			_case_begin_4562978160:;
			{
				_8259_prec=static_cast<jule::Int>(_1d061d5e7_max(static_cast<jule::Int>(_13413_digs._field_nd - 1LL),0LL));
			}
			goto _match_end_4562978656;
			_case_end_4562978160:;
			if (!(('f') == _match_expr)) { goto _case_end_4562981296; }
			_case_begin_4562981296:;
			{
				_8259_prec=static_cast<jule::Int>(_1d061d5e7_max(static_cast<jule::Int>(_13413_digs._field_nd - _13413_digs._field_dp),0LL));
			}
			goto _match_end_4562978656;
			_case_end_4562981296:;
			if (!(('g') == _match_expr || ('G') == _match_expr)) { goto _case_end_4562981408; }
			_case_begin_4562981408:;
			{
				_8259_prec=_13413_digs._field_nd;
			}
			goto _match_end_4562978656;
			_case_end_4562981408:;
			_match_end_4562978656:;
		}
	} else if (_8244_fmt != 'f') {
		jule::Int _15517_digits = _8259_prec;
		{
			auto _match_expr{ _8244_fmt };
			if (!(('e') == _match_expr || ('E') == _match_expr)) { goto _case_end_4562988784; }
			_case_begin_4562988784:;
			{
				(_15517_digits)++;
			}
			goto _match_end_4562986240;
			_case_end_4562988784:;
			if (!(('g') == _match_expr || ('G') == _match_expr)) { goto _case_end_4562987696; }
			_case_begin_4562987696:;
			{
				if (_8259_prec == 0LL) {
					_8259_prec=1LL;
				}
				_15517_digits=_8259_prec;
			}
			goto _match_end_4562986240;
			_case_end_4562987696:;
			_case_begin_4562986368:;
			{
				_15517_digits=1LL;
			}
			goto _match_end_4562986240;
			_case_end_4562986368:;
			_match_end_4562986240:;
		}
		jule::Array<jule::U8,24> _16813_buf = jule::Array<jule::U8,24>({});
		if ((_8270_bit_size == 32LL) && (_15517_digits <= 9LL)) {
			_13413_digs._field_d=_16813_buf.slice(0LL);
			_1d14d25dc_ryu_ftoa_fixed32(_13413_digs,static_cast<jule::U32>(_9813_mant),static_cast<jule::Int>(static_cast<jule::Int>(_9713_exp - static_cast<jule::Int>(_8413_flt->_field_mantbits))),_15517_digits);
			_13513_ok=true;
		} else if (_15517_digits <= 18LL) {
			_13413_digs._field_d=_16813_buf.slice(0LL);
			_1d14d25dc_ryu_ftoa_fixed64(_13413_digs,_9813_mant,static_cast<jule::Int>(static_cast<jule::Int>(_9713_exp - static_cast<jule::Int>(_8413_flt->_field_mantbits))),_15517_digits);
			_13513_ok=true;
		}
	}
	if ((!(_13513_ok))) {
		return _1d061d5e7_big_ftoa(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	return _1d061d5e7_fmt_digits(_8221_dst,_1379_shortest,_969_neg,_13413_digs,_8259_prec,_8244_fmt);
}



inline jule::Slice<jule::U8> _1d061d5e7_big_ftoa(jule::Slice<jule::U8> _18617_dst,jule::Int _18634_prec,jule::U8 _18645_fmt,jule::Bool _18656_neg,jule::U64 _18713_mant,jule::Int _18724_exp,_1d061d5e7_FloatInfo& _18735_flt) {
	_1d159c685_Decimal _18813_d = _1d159c685_Decimal();
	_18813_d._method_assign(_18713_mant);
	_18813_d._method_shift(static_cast<jule::Int>(_18724_exp - static_cast<jule::Int>(_18735_flt._field_mantbits)));
	_1d061d5e7_DecimalSlice _19113_digs = _1d061d5e7_DecimalSlice();
	jule::Bool _1929_shortest = _18634_prec < 0LL;
	if (_1929_shortest) {
		_1d061d5e7_round_shortest(_18813_d,_18713_mant,_18724_exp,_18735_flt);
		_19113_digs=_1d061d5e7_DecimalSlice(_18813_d._field_d.slice(0LL),_18813_d._field_nd,_18813_d._field_dp,jule::Bool());
		{
			auto _match_expr{ _18645_fmt };
			if (!(('e') == _match_expr || ('E') == _match_expr)) { goto _case_end_4563016080; }
			_case_begin_4563016080:;
			{
				_18634_prec=static_cast<jule::Int>(_19113_digs._field_nd - 1LL);
			}
			goto _match_end_4563013264;
			_case_end_4563016080:;
			if (!(('f') == _match_expr)) { goto _case_end_4563016192; }
			_case_begin_4563016192:;
			{
				_18634_prec=static_cast<jule::Int>(_1d061d5e7_max(static_cast<jule::Int>(_19113_digs._field_nd - _19113_digs._field_dp),0LL));
			}
			goto _match_end_4563013264;
			_case_end_4563016192:;
			if (!(('g') == _match_expr || ('G') == _match_expr)) { goto _case_end_4563016304; }
			_case_begin_4563016304:;
			{
				_18634_prec=_19113_digs._field_nd;
			}
			goto _match_end_4563013264;
			_case_end_4563016304:;
			_match_end_4563013264:;
		}
	} else {
		{
			auto _match_expr{ _18645_fmt };
			if (!(('e') == _match_expr || ('E') == _match_expr)) { goto _case_end_4563021136; }
			_case_begin_4563021136:;
			{
				_18813_d._method_round(static_cast<jule::Int>(_18634_prec + 1LL));
			}
			goto _match_end_4563016592;
			_case_end_4563021136:;
			if (!(('f') == _match_expr)) { goto _case_end_4563020176; }
			_case_begin_4563020176:;
			{
				_18813_d._method_round(static_cast<jule::Int>(_18813_d._field_dp + _18634_prec));
			}
			goto _match_end_4563016592;
			_case_end_4563020176:;
			if (!(('g') == _match_expr || ('G') == _match_expr)) { goto _case_end_4563018688; }
			_case_begin_4563018688:;
			{
				if (_18634_prec == 0LL) {
					_18634_prec=1LL;
				}
				_18813_d._method_round(_18634_prec);
			}
			goto _match_end_4563016592;
			_case_end_4563018688:;
			_match_end_4563016592:;
		}
		_19113_digs=_1d061d5e7_DecimalSlice(_18813_d._field_d.slice(0LL),_18813_d._field_nd,_18813_d._field_dp,jule::Bool());
	}
	return _1d061d5e7_fmt_digits(_18617_dst,_1929_shortest,_18656_neg,_19113_digs,_18634_prec,_18645_fmt);
}



inline jule::Slice<jule::U8> _1d061d5e7_fmt_digits(jule::Slice<jule::U8> _22319_dst,jule::Bool _22332_shortest,jule::Bool _22348_neg,_1d061d5e7_DecimalSlice _22413_digs,jule::Int _22437_prec,jule::U8 _22448_fmt) {
	{
		auto _match_expr{ _22448_fmt };
		if (!(('e') == _match_expr || ('E') == _match_expr)) { goto _case_end_4563033104; }
		_case_begin_4563033104:;
		{
			return _1d061d5e7_fmt_e(_22319_dst,_22348_neg,_22413_digs,_22437_prec,_22448_fmt);
		}
		goto _match_end_4563032624;
		_case_end_4563033104:;
		if (!(('f') == _match_expr)) { goto _case_end_4563033216; }
		_case_begin_4563033216:;
		{
			return _1d061d5e7_fmt_f(_22319_dst,_22348_neg,_22413_digs,_22437_prec);
		}
		goto _match_end_4563032624;
		_case_end_4563033216:;
		if (!(('g') == _match_expr || ('G') == _match_expr)) { goto _case_end_4563033328; }
		_case_begin_4563033328:;
		{
			jule::Int _23217_eprec = _22437_prec;
			if ((_23217_eprec > _22413_digs._field_nd) && (_22413_digs._field_nd >= _22413_digs._field_dp)) {
				_23217_eprec=_22413_digs._field_nd;
			}
			if (_22332_shortest) {
				_23217_eprec=6LL;
			}
			jule::Int _24213_exp = _22413_digs._field_dp - 1LL;
			if ((_24213_exp < -4LL) || (_24213_exp >= _23217_eprec)) {
				if (_22437_prec > _22413_digs._field_nd) {
					_22437_prec=_22413_digs._field_nd;
				}
				return _1d061d5e7_fmt_e(_22319_dst,_22348_neg,_22413_digs,static_cast<jule::Int>(_22437_prec - 1LL),static_cast<jule::U8>((_22448_fmt + 'e') - 'g'));
			}
			if (_22437_prec > _22413_digs._field_dp) {
				_22437_prec=_22413_digs._field_nd;
			}
			return _1d061d5e7_fmt_f(_22319_dst,_22348_neg,_22413_digs,static_cast<jule::Int>(_1d061d5e7_max(static_cast<jule::Int>(_22437_prec - _22413_digs._field_dp),0LL)));
		}
		goto _match_end_4563032624;
		_case_end_4563033328:;
		_match_end_4563032624:;
	}
	return jule::append(_22319_dst,jule::Slice<jule::U8>({'%',_22448_fmt}));
}



inline void _1d061d5e7_round_shortest(_1d159c685_Decimal& _26124_d,jule::U64 _26136_mant,jule::Int _26147_exp,_1d061d5e7_FloatInfo& _26158_flt) {
	if (_26136_mant == 0LL) {
		_26124_d._field_nd=0LL;
		return;
	}
	jule::Int _2829_minexp = _26158_flt._field_bias + 1LL;
	if ((_26147_exp > _2829_minexp) && ((332LL * (_26124_d._field_dp - _26124_d._field_nd)) >= (100LL * (_26147_exp - static_cast<jule::Int>(_26158_flt._field_mantbits))))) {
		return;
	}
	_1d159c685_Decimal _29113_upper = _1d159c685_Decimal();
	_29113_upper._method_assign(static_cast<jule::U64>((_26136_mant * 2LL) + 1LL));
	_29113_upper._method_shift(static_cast<jule::Int>((_26147_exp - static_cast<jule::Int>(_26158_flt._field_mantbits)) - 1LL));
	jule::U64 _30113_mantlo = 0LLU;
	jule::Int _30213_explo = 0LL;
	if ((_26136_mant > (1LL << _26158_flt._field_mantbits)) || (_26147_exp == _2829_minexp)) {
		_30113_mantlo=static_cast<jule::U64>(_26136_mant - 1LL);
		_30213_explo=_26147_exp;
	} else {
		_30113_mantlo=static_cast<jule::U64>((_26136_mant * 2LL) - 1LL);
		_30213_explo=static_cast<jule::Int>(_26147_exp - 1LL);
	}
	_1d159c685_Decimal _31013_lower = _1d159c685_Decimal();
	_31013_lower._method_assign(static_cast<jule::U64>((_30113_mantlo * 2LL) + 1LL));
	_31013_lower._method_shift(static_cast<jule::Int>((_30213_explo - static_cast<jule::Int>(_26158_flt._field_mantbits)) - 1LL));
	jule::Bool _3179_inclusive = jule::mod(_26136_mant,2LL) == 0LL;
	jule::U8 _33013_upperdelta = 0LLU;
	jule::Int _33413_ui = 0LL;
	_iter_begin_4563072864:;
	{
		jule::Int _33913_mi = (_33413_ui - _29113_upper._field_dp) + _26124_d._field_dp;
		if (_33913_mi >= _26124_d._field_nd) {
			goto _iter_end_4563072864;
		}
		jule::Int _34313_li = (_33413_ui - _29113_upper._field_dp) + _31013_lower._field_dp;
		jule::U8 _34417_l = static_cast<jule::U8>(48LLU);
		if ((_34313_li >= 0LL) && (_34313_li < _31013_lower._field_nd)) {
			_34417_l=_31013_lower._field_d[static_cast<jule::Int>(_34313_li)];
		}
		jule::U8 _34817_m = static_cast<jule::U8>(48LLU);
		if (_33913_mi >= 0LL) {
			_34817_m=_26124_d._field_d[static_cast<jule::Int>(_33913_mi)];
		}
		jule::U8 _35217_u = static_cast<jule::U8>(48LLU);
		if (_33413_ui < _29113_upper._field_nd) {
			_35217_u=_29113_upper._field_d[static_cast<jule::Int>(_33413_ui)];
		}
		jule::Bool _36013_okdown = (_34417_l != _34817_m) || (_3179_inclusive && ((_34313_li + 1LL) == _31013_lower._field_nd));
		{
			if (!(((_33013_upperdelta == 0LL) && ((_34817_m + 1LL) < _35217_u)))) { goto _case_end_4563090928; }
			_case_begin_4563090928:;
			{
				_33013_upperdelta=2LL;
			}
			goto _match_end_4563090384;
			_case_end_4563090928:;
			if (!(((_33013_upperdelta == 0LL) && (_34817_m != _35217_u)))) { goto _case_end_4563091040; }
			_case_begin_4563091040:;
			{
				_33013_upperdelta=1LL;
			}
			goto _match_end_4563090384;
			_case_end_4563091040:;
			if (!(((_33013_upperdelta == 1LL) && ((_34817_m != '9') || (_35217_u != '0'))))) { goto _case_end_4563091504; }
			_case_begin_4563091504:;
			{
				_33013_upperdelta=2LL;
			}
			goto _match_end_4563090384;
			_case_end_4563091504:;
			_match_end_4563090384:;
		}
		jule::Bool _38113_okup = (_33013_upperdelta > 0LL) && ((_3179_inclusive || (_33013_upperdelta > 1LL)) || ((_33413_ui + 1LL) < _29113_upper._field_nd));
		{
			if (!((_36013_okdown && _38113_okup))) { goto _case_end_4563097328; }
			_case_begin_4563097328:;
			{
				_26124_d._method_round(static_cast<jule::Int>(_33913_mi + 1LL));
				return;
			}
			goto _match_end_4563096832;
			_case_end_4563097328:;
			if (!((_36013_okdown))) { goto _case_end_4563097440; }
			_case_begin_4563097440:;
			{
				_26124_d._method_round_down(static_cast<jule::Int>(_33913_mi + 1LL));
				return;
			}
			goto _match_end_4563096832;
			_case_end_4563097440:;
			if (!((_38113_okup))) { goto _case_end_4563097552; }
			_case_begin_4563097552:;
			{
				_26124_d._method_round_up(static_cast<jule::Int>(_33913_mi + 1LL));
				return;
			}
			goto _match_end_4563096832;
			_case_end_4563097552:;
			_match_end_4563096832:;
		}
	}
	_iter_next_4563072864:;
	(_33413_ui)++;
	goto _iter_begin_4563072864;
	_iter_end_4563072864:;
}



inline jule::Slice<jule::U8> _1d061d5e7_fmt_e(jule::Slice<jule::U8> _40014_dst,jule::Bool _40027_neg,_1d061d5e7_DecimalSlice _40038_d,jule::Int _40055_prec,jule::U8 _40066_fmt) {
	if (_40027_neg) {
		_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({'-'}));
	}
	jule::U8 _40713_ch = '0';
	if (_40038_d._field_nd != 0LL) {
		_40713_ch=_40038_d._field_d[0LL];
	}
	_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({_40713_ch}));
	if (_40055_prec > 0LL) {
		_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({'.'}));
		jule::Int _41617_i = 1LL;
		jule::Int _41713_m = _1d061d5e7_min(_40038_d._field_nd,static_cast<jule::Int>(_40055_prec + 1LL));
		if (_41617_i < _41713_m) {
			_40014_dst=jule::append(_40014_dst,_40038_d._field_d.slice(static_cast<jule::Int>(_41617_i),static_cast<jule::Int>(_41713_m)));
			_41617_i=_41713_m;
		}
		_iter_begin_4563122048:;
		if (!(_41617_i <= _40055_prec)) { goto _iter_end_4563122048; }
		{
			_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({'0'}));
		}
		_iter_next_4563122048:;
		(_41617_i)++;
		goto _iter_begin_4563122048;
		_iter_end_4563122048:;
	}
	_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({_40066_fmt}));
	jule::Int _42913_exp = _40038_d._field_dp - 1LL;
	if (_40038_d._field_nd == 0LL) {
		_42913_exp=0LL;
	}
	if (_42913_exp < 0LL) {
		_40713_ch='-';
		_42913_exp=static_cast<jule::Int>((-(_42913_exp)));
	} else {
		_40713_ch='+';
	}
	_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({_40713_ch}));
	{
		if (!((_42913_exp < 10LL))) { goto _case_end_4563125680; }
		_case_begin_4563125680:;
		{
			_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({'0',static_cast<jule::U8>(static_cast<jule::U8>(_42913_exp) + '0')}));
		}
		goto _match_end_4563123744;
		_case_end_4563125680:;
		if (!((_42913_exp < 100LL))) { goto _case_end_4563125136; }
		_case_begin_4563125136:;
		{
			_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({static_cast<jule::U8>(static_cast<jule::U8>(jule::div(_42913_exp,10LL)) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(jule::mod(_42913_exp,10LL)) + '0')}));
		}
		goto _match_end_4563123744;
		_case_end_4563125136:;
		_case_begin_4563118752:;
		{
			_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({static_cast<jule::U8>(static_cast<jule::U8>(jule::div(_42913_exp,100LL)) + '0'),static_cast<jule::U8>(jule::mod(static_cast<jule::U8>(jule::div(_42913_exp,10LL)),10LL) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(jule::mod(_42913_exp,10LL)) + '0')}));
		}
		goto _match_end_4563123744;
		_case_end_4563118752:;
		_match_end_4563123744:;
	}
	return _40014_dst;
}



inline jule::Slice<jule::U8> _1d061d5e7_fmt_f(jule::Slice<jule::U8> _45514_dst,jule::Bool _45527_neg,_1d061d5e7_DecimalSlice _45538_d,jule::Int _45555_prec) {
	if (_45527_neg) {
		_45514_dst=jule::append(_45514_dst,jule::Slice<jule::U8>({'-'}));
	}
	if (_45538_d._field_dp > 0LL) {
		jule::Int _46317_m = _1d061d5e7_min(_45538_d._field_nd,_45538_d._field_dp);
		_45514_dst=jule::append(_45514_dst,_45538_d._field_d.slice(0LL,static_cast<jule::Int>(_46317_m)));
		_iter_begin_4563142704:;
		if (!(_46317_m < _45538_d._field_dp)) { goto _iter_end_4563142704; }
		{
			_45514_dst=jule::append(_45514_dst,jule::Slice<jule::U8>({'0'}));
		}
		_iter_next_4563142704:;
		(_46317_m)++;
		goto _iter_begin_4563142704;
		_iter_end_4563142704:;
	} else {
		_45514_dst=jule::append(_45514_dst,jule::Slice<jule::U8>({'0'}));
	}
	if (_45555_prec > 0LL) {
		_45514_dst=jule::append(_45514_dst,jule::Slice<jule::U8>({'.'}));
		jule::Int _47417_i = 0LL;
		_iter_begin_4563145504:;
		if (!(_47417_i < _45555_prec)) { goto _iter_end_4563145504; }
		{
			jule::U8 _47621_ch = static_cast<jule::U8>(48LLU);
			jule::Int _47717_j = _45538_d._field_dp + _47417_i;
			if ((0LL <= _47717_j) && (_47717_j < _45538_d._field_nd)) {
				_47621_ch=_45538_d._field_d[static_cast<jule::Int>(_47717_j)];
			}
			_45514_dst=jule::append(_45514_dst,jule::Slice<jule::U8>({_47621_ch}));
		}
		_iter_next_4563145504:;
		(_47417_i)++;
		goto _iter_begin_4563145504;
		_iter_end_4563145504:;
	}
	return _45514_dst;
}



inline jule::Slice<jule::U8> _1d061d5e7_fmt_b(jule::Slice<jule::U8> _48814_dst,jule::Bool _48827_neg,jule::U64 _48838_mant,jule::Int _48853_exp,_1d061d5e7_FloatInfo& _48864_flt) {
	if (_48827_neg) {
		_48814_dst=jule::append(_48814_dst,jule::Slice<jule::U8>({'-'}));
	}
	std::tie(_48814_dst,std::ignore) = _1d17893cc_fmt_bits(_48814_dst,_48838_mant,10LL,false,true);
	_48814_dst=jule::append(_48814_dst,jule::Slice<jule::U8>({'p'}));
	_48853_exp-=static_cast<jule::Int>(_48864_flt._field_mantbits);
	if (_48853_exp >= 0LL) {
		_48814_dst=jule::append(_48814_dst,jule::Slice<jule::U8>({'+'}));
	}
	std::tie(_48814_dst,std::ignore) = _1d17893cc_fmt_bits(_48814_dst,static_cast<jule::U64>(_48853_exp),10LL,_48853_exp < 0LL,true);
	return _48814_dst;
}



inline jule::Slice<jule::U8> _1d061d5e7_fmt_x(jule::Slice<jule::U8> _51014_dst,jule::Int _51027_prec,jule::U8 _51038_fmt,jule::Bool _51049_neg,jule::U64 _51113_mant,jule::Int _51128_exp,_1d061d5e7_FloatInfo& _51139_flt) {
	if (_51113_mant == 0LL) {
		_51128_exp=0LL;
	}
	_51113_mant<<=static_cast<jule::Uint>(60LL - _51139_flt._field_mantbits);
	_iter_begin_4563166448:;
	if (!((_51113_mant != 0LL) && ((_51113_mant & 1152921504606846976LLU) == 0LL))) { goto _iter_end_4563166448; }
	{
		_51113_mant<<=1LL;
		(_51128_exp)--;
	}
	_iter_next_4563166448:;
	goto _iter_begin_4563166448;
	_iter_end_4563166448:;
	if ((_51027_prec >= 0LL) && (_51027_prec < 15LL)) {
		jule::Uint _52513_shift = static_cast<jule::Uint>(_51027_prec * 4LL);
		jule::U64 _52613_extra = (_51113_mant << _52513_shift) & 1152921504606846975LLU;
		_51113_mant>>=static_cast<jule::Uint>(60LL - _52513_shift);
		if ((_52613_extra | (_51113_mant & 1LL)) > 576460752303423488LLU) {
			(_51113_mant)++;
		}
		_51113_mant<<=static_cast<jule::Uint>(60LL - _52513_shift);
		if ((_51113_mant & 2305843009213693952LLU) != 0LL) {
			_51113_mant>>=1LL;
			(_51128_exp)++;
		}
	}
	jule::Str _53913_hex = jule::Str("0123456789abcdef", 16);
	if (_51038_fmt == 'X') {
		_53913_hex=jule::Str("0123456789ABCDEF", 16);
	}
	if (_51049_neg) {
		_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({'-'}));
	}
	_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({'0',_51038_fmt,static_cast<jule::U8>('0' + static_cast<jule::U8>((_51113_mant >> 60LL) & 1LL))}));
	_51113_mant<<=4LL;
	if ((_51027_prec < 0LL) && (_51113_mant != 0LL)) {
		_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({'.'}));
		_iter_begin_4563179984:;
		if (!(_51113_mant != 0LL)) { goto _iter_end_4563179984; }
		{
			_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({_53913_hex[static_cast<jule::Int>((_51113_mant >> 60LL) & 15LL)]}));
			_51113_mant<<=4LL;
		}
		_iter_next_4563179984:;
		goto _iter_begin_4563179984;
		_iter_end_4563179984:;
	} else if (_51027_prec > 0LL) {
		_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({'.'}));
		jule::Int _56017_i = 0LL;
		_iter_begin_4563186624:;
		if (!(_56017_i < _51027_prec)) { goto _iter_end_4563186624; }
		{
			_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({_53913_hex[static_cast<jule::Int>((_51113_mant >> 60LL) & 15LL)]}));
			_51113_mant<<=4LL;
		}
		_iter_next_4563186624:;
		(_56017_i)++;
		goto _iter_begin_4563186624;
		_iter_end_4563186624:;
	}
	jule::U8 _56813_ch = static_cast<jule::U8>(80LLU);
	if (_51038_fmt == _1d0632de2_lower(_51038_fmt)) {
		_56813_ch='p';
	}
	_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({_56813_ch}));
	if (_51128_exp < 0LL) {
		_56813_ch='-';
		_51128_exp=static_cast<jule::Int>((-(_51128_exp)));
	} else {
		_56813_ch='+';
	}
	_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({_56813_ch}));
	{
		if (!((_51128_exp < 100LL))) { goto _case_end_4563195968; }
		_case_begin_4563195968:;
		{
			_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({static_cast<jule::U8>(static_cast<jule::U8>(jule::div(_51128_exp,10LL)) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(jule::mod(_51128_exp,10LL)) + '0')}));
		}
		goto _match_end_4563193728;
		_case_end_4563195968:;
		if (!((_51128_exp < 1000LL))) { goto _case_end_4563195504; }
		_case_begin_4563195504:;
		{
			_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({static_cast<jule::U8>(static_cast<jule::U8>(jule::div(_51128_exp,100LL)) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(jule::mod(jule::div(_51128_exp,10LL),10LL)) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(jule::mod(_51128_exp,10LL)) + '0')}));
		}
		goto _match_end_4563193728;
		_case_end_4563195504:;
		_case_begin_4563192912:;
		{
			_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({static_cast<jule::U8>(static_cast<jule::U8>(jule::div(_51128_exp,1000LL)) + '0'),static_cast<jule::U8>(jule::mod(static_cast<jule::U8>(jule::div(_51128_exp,100LL)),10LL) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(jule::mod(jule::div(_51128_exp,10LL),10LL)) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(jule::mod(_51128_exp,10LL)) + '0')}));
		}
		goto _match_end_4563193728;
		_case_end_4563192912:;
		_match_end_4563193728:;
	}
	return _51014_dst;
}



inline jule::Int _1d061d5e7_min(jule::Int _5938_a,jule::Int _59316_b) {
	if (_5938_a < _59316_b) {
		return _5938_a;
	}
	return _59316_b;
}



inline jule::Int _1d061d5e7_max(jule::Int _6008_a,jule::Int _60016_b) {
	if (_6008_a > _60016_b) {
		return _6008_a;
	}
	return _60016_b;
}



inline jule::U8 _1d0632de2_lower(jule::U8 _4910_c) {
	return static_cast<jule::U8>(_4910_c | 32LL);
}



inline std::tuple<jule::U64,jule::Int> _1d0632de2_parse_uint(jule::Str _5423_s,jule::Int _5435_base,jule::Int _5450_bit_size) {
	if (_5423_s == jule::Str("", 0)) {
		return std::make_tuple(0LL,2LLU);
	}
	{
		if (!(((2LL <= _5435_base) && (_5435_base <= 36LL)))) { goto _case_end_4563217856; }
		goto _match_end_4563213904;
		_case_end_4563217856:;
		if (!((_5435_base == 0LL))) { goto _case_end_4563216864; }
		_case_begin_4563216864:;
		{
			_5435_base=10LL;
			if (_5423_s[0LL] == '0') {
				{
					if (!(((_5423_s.len() >= 3LL) && (_1d0632de2_lower(_5423_s[1LL]) == 'b')))) { goto _case_end_4563221648; }
					_case_begin_4563221648:;
					{
						_5435_base=2LL;
						_5423_s=_5423_s.slice(2LL);
					}
					goto _match_end_4563220624;
					_case_end_4563221648:;
					if (!(((_5423_s.len() >= 3LL) && (_1d0632de2_lower(_5423_s[1LL]) == 'o')))) { goto _case_end_4563221824; }
					_case_begin_4563221824:;
					{
						_5435_base=8LL;
						_5423_s=_5423_s.slice(2LL);
					}
					goto _match_end_4563220624;
					_case_end_4563221824:;
					if (!(((_5423_s.len() >= 3LL) && (_1d0632de2_lower(_5423_s[1LL]) == 'x')))) { goto _case_end_4563222784; }
					_case_begin_4563222784:;
					{
						_5435_base=16LL;
						_5423_s=_5423_s.slice(2LL);
					}
					goto _match_end_4563220624;
					_case_end_4563222784:;
					_case_begin_4563220816:;
					{
						_5435_base=8LL;
						_5423_s=_5423_s.slice(1LL);
					}
					goto _match_end_4563220624;
					_case_end_4563220816:;
					_match_end_4563220624:;
				}
			}
		}
		goto _match_end_4563213904;
		_case_end_4563216864:;
		_case_begin_4563214000:;
		{
			return std::make_tuple(0LL,3LLU);
		}
		goto _match_end_4563213904;
		_case_end_4563214000:;
		_match_end_4563213904:;
	}
	if (_5450_bit_size == 0LL) {
		_5450_bit_size=64LLU;
	} else if ((_5450_bit_size < 0LL) || (_5450_bit_size > 64LL)) {
		return std::make_tuple(0LL,4LLU);
	}
	jule::U64 _9313_cutoff = 0LLU;
	{
		auto _match_expr{ _5435_base };
		if (!((10LL) == _match_expr)) { goto _case_end_4563236480; }
		_case_begin_4563236480:;
		{
			_9313_cutoff=1844674407370955264LL;
		}
		goto _match_end_4563216432;
		_case_end_4563236480:;
		if (!((16LL) == _match_expr)) { goto _case_end_4563234880; }
		_case_begin_4563234880:;
		{
			_9313_cutoff=1152921504606846976LL;
		}
		goto _match_end_4563216432;
		_case_end_4563234880:;
		_case_begin_4563233936:;
		{
			_9313_cutoff=static_cast<jule::U64>(jule::div(jule::MAX_U64,static_cast<jule::U64>(_5435_base)) + 1LL);
		}
		goto _match_end_4563216432;
		_case_end_4563233936:;
		_match_end_4563216432:;
	}
	jule::U64 _10013_max_val = 0LLU;
	{
		auto _match_expr{ _5450_bit_size };
		if (!((32LL) == _match_expr)) { goto _case_end_4563230992; }
		_case_begin_4563230992:;
		{
			_10013_max_val=4294967295LLU;
		}
		goto _match_end_4563237072;
		_case_end_4563230992:;
		if (!((64LL) == _match_expr)) { goto _case_end_4563238848; }
		_case_begin_4563238848:;
		{
			_10013_max_val=jule::MAX_U64;
		}
		goto _match_end_4563237072;
		_case_end_4563238848:;
		_match_end_4563237072:;
	}
	jule::U64 _11213_n = 0LLU;
	{
		auto _range_expr = _5423_s;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::U8 _1d0632de2_c = *_range_begin;
			_iter_begin_4563241504:;
			{
				jule::U8 _11417_d = 0LLU;
				{
					if (!((('0' <= _1d0632de2_c) && (_1d0632de2_c <= '9')))) { goto _case_end_4563246576; }
					_case_begin_4563246576:;
					{
						_11417_d=static_cast<jule::U8>(_1d0632de2_c - '0');
					}
					goto _match_end_4563244400;
					_case_end_4563246576:;
					if (!((('a' <= _1d0632de2_lower(_1d0632de2_c)) && (_1d0632de2_lower(_1d0632de2_c) <= 'z')))) { goto _case_end_4563245584; }
					_case_begin_4563245584:;
					{
						_11417_d=static_cast<jule::U8>((_1d0632de2_lower(_1d0632de2_c) - 'a') + 10LL);
					}
					goto _match_end_4563244400;
					_case_end_4563245584:;
					_case_begin_4563244528:;
					{
						return std::make_tuple(0LL,2LLU);
					}
					goto _match_end_4563244400;
					_case_end_4563244528:;
					_match_end_4563244400:;
				}
				if (_11417_d >= static_cast<jule::U8>(_5435_base)) {
					return std::make_tuple(0LL,2LLU);
				}
				if (_11213_n >= _9313_cutoff) {
					return std::make_tuple(_10013_max_val,1LLU);
				}
				_11213_n*=static_cast<jule::U64>(_5435_base);
				jule::U64 _13413_n1 = _11213_n + static_cast<jule::U64>(_11417_d);
				if ((_13413_n1 < _11213_n) || (_13413_n1 > _10013_max_val)) {
					return std::make_tuple(_10013_max_val,1LLU);
				}
				_11213_n=_13413_n1;
			}
			_iter_next_4563241504:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d0632de2_c = *_range_begin; goto _iter_begin_4563241504; }
			_iter_end_4563241504:;
		}
	}
	return std::make_tuple(_11213_n,0LLU);
}



inline std::tuple<jule::I64,jule::Int> _1d0632de2_parse_int(jule::Str _16522_s,jule::Int _16530_base,jule::Int _16545_bit_size) {
	jule::I64 _16562_i = jule::I64();
	jule::Int _16570_err = 0LLU;
	if (_16522_s == jule::Str("", 0)) {
		_16562_i = 0LL;
		_16570_err = 2LLU;
		return std::make_tuple(_16562_i,_16570_err);
	}
	jule::Bool _17113_neg = false;
	if (_16522_s[0LL] == '+') {
		_16522_s=_16522_s.slice(1LL);
	} else if (_16522_s[0LL] == '-') {
		_17113_neg=true;
		_16522_s=_16522_s.slice(1LL);
	}
	jule::Uint _18013_un = 0LLU;
	std::tie(_18013_un,_16570_err) = _1d0632de2_parse_uint(_16522_s,_16530_base,_16545_bit_size);
	if ((_16570_err != 0LLU) && (_16570_err != 1LLU)) {
		_16562_i = 0LL;
		_16570_err = _16570_err;
		return std::make_tuple(_16562_i,_16570_err);
	}
	if (_16545_bit_size == 0LL) {
		_16545_bit_size=64LLU;
	}
	jule::U64 _1909_cutoff = static_cast<jule::U64>(1LL << static_cast<jule::Uint>(_16545_bit_size - 1LL));
	if ((!(_17113_neg)) && (_18013_un >= _1909_cutoff)) {
		_16562_i = static_cast<jule::I64>(_1909_cutoff - 1LL);
		_16570_err = 1LLU;
		return std::make_tuple(_16562_i,_16570_err);
	}
	if (_17113_neg && (_18013_un > _1909_cutoff)) {
		_16562_i = static_cast<jule::I64>((-(static_cast<jule::I64>(_1909_cutoff))));
		_16570_err = 1LLU;
		return std::make_tuple(_16562_i,_16570_err);
	}
	jule::I64 _19713_n = static_cast<jule::I64>(_18013_un);
	if (_17113_neg) {
		_19713_n=static_cast<jule::I64>((-(_19713_n)));
	}
	_16562_i = _19713_n;
	_16570_err = 0LLU;
	return std::make_tuple(_16562_i,_16570_err);
}



inline std::tuple<jule::F64,jule::Bool> _1d05ec7a2_eisel_lemire64(jule::U64 _4123_man,jule::Int _4133_exp10,jule::Bool _4145_neg) {
	jule::F64 _4158_f = jule::F64();
	jule::Bool _4166_ok = jule::Bool();
	if (_4123_man == 0LL) {
		if (_4145_neg) {
			_4158_f=static_cast<jule::F64>(_1d17de7ea_f64_from_bits(9223372036854775808LLU));
		}
		_4158_f = _4158_f;
		_4166_ok = true;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	if ((_4133_exp10 < -348LL) || (347LL < _4133_exp10)) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	jule::Int _579_clz = _1d2038890_leading_zeros64(_4123_man);
	_4123_man<<=static_cast<jule::Uint>(_579_clz);
	
	jule::U64 _6013_ret_exp2 = static_cast<jule::U64>((((217706LL * _4133_exp10) >> 16LL) + 64LL) + 1023LL) - static_cast<jule::U64>(_579_clz);
	jule::U64 _6314_x_hi;
	jule::U64 _6324_x_lo;
	std::tie(_6314_x_hi,_6324_x_lo) = _1d2038890_mul64(_4123_man,_1d05ec7a2_DETAILED_POWS_OF_TEN[static_cast<jule::Int>(_4133_exp10 - -348LL)][1LL]);
	if (((_6314_x_hi & 511LL) == 511LL) && ((_6324_x_lo + _4123_man) < _4123_man)) {
		jule::U64 _6714_y_hi;
		jule::U64 _6720_y_lo;
		std::tie(_6714_y_hi,_6720_y_lo) = _1d2038890_mul64(_4123_man,_1d05ec7a2_DETAILED_POWS_OF_TEN[static_cast<jule::Int>(_4133_exp10 - -348LL)][0LL]);
		jule::U64 _6818_merged_hi = _6314_x_hi;
		jule::U64 _6829_merged_lo = _6324_x_lo + _6714_y_hi;
		std::tie(_6818_merged_hi,_6829_merged_lo) = std::make_tuple(_6314_x_hi,_6324_x_lo + _6714_y_hi);
		if (_6829_merged_lo < _6324_x_lo) {
			(_6818_merged_hi)++;
		}
		if ((((_6818_merged_hi & 511LL) == 511LL) && ((_6829_merged_lo + 1LL) == 0LL)) && ((_6720_y_lo + _4123_man) < _4123_man)) {
			_4158_f = 0LL;
			_4166_ok = false;
			return std::make_tuple(_4158_f,_4166_ok);
		}
		std::tie(_6314_x_hi,_6324_x_lo) = std::make_tuple(_6818_merged_hi,_6829_merged_lo);
	}
	jule::U64 _799_msb = _6314_x_hi >> 63LL;
	jule::U64 _8013_ret_mantissa = _6314_x_hi >> (_799_msb + 9LL);
	_6013_ret_exp2-=static_cast<jule::U64>(1LL ^ _799_msb);
	if (((_6324_x_lo == 0LL) && ((_6314_x_hi & 511LL) == 0LL)) && ((_8013_ret_mantissa & 3LL) == 1LL)) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	_8013_ret_mantissa+=static_cast<jule::U64>(_8013_ret_mantissa & 1LL);
	_8013_ret_mantissa>>=1LL;
	if ((_8013_ret_mantissa >> 53LL) > 0LL) {
		_8013_ret_mantissa>>=1LL;
		_6013_ret_exp2+=1LL;
	}
	if ((_6013_ret_exp2 - 1LL) >= 2046LL) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	jule::U64 _10313_ret_bits = (_6013_ret_exp2 << 52LL) | (_8013_ret_mantissa & 4503599627370495LL);
	if (_4145_neg) {
		_10313_ret_bits|=9223372036854775808LLU;
	}
	_4158_f = static_cast<jule::F64>(_1d17de7ea_f64_from_bits(_10313_ret_bits));
	_4166_ok = true;
	return std::make_tuple(_4158_f,_4166_ok);
}



inline std::tuple<jule::F32,jule::Bool> _1d05ec7a2_eisel_lemire32(jule::U64 _11023_man,jule::Int _11033_exp10,jule::Bool _11045_neg) {
	jule::F32 _11058_f = jule::F32();
	jule::Bool _11066_ok = jule::Bool();
	if (_11023_man == 0LL) {
		if (_11045_neg) {
			_11058_f=static_cast<jule::F32>(_1d17de7ea_f32_from_bits(2147483648LLU));
		}
		_11058_f = _11058_f;
		_11066_ok = true;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	if ((_11033_exp10 < -348LL) || (347LL < _11033_exp10)) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	jule::Int _1329_clz = _1d2038890_leading_zeros64(_11023_man);
	_11023_man<<=static_cast<jule::Uint>(_1329_clz);
	
	jule::U64 _13513_ret_exp2 = static_cast<jule::U64>((((217706LL * _11033_exp10) >> 16LL) + 64LL) + 127LL) - static_cast<jule::U64>(_1329_clz);
	jule::U64 _13814_x_hi;
	jule::U64 _13824_x_lo;
	std::tie(_13814_x_hi,_13824_x_lo) = _1d2038890_mul64(_11023_man,_1d05ec7a2_DETAILED_POWS_OF_TEN[static_cast<jule::Int>(_11033_exp10 - -348LL)][1LL]);
	if (((_13814_x_hi & 274877906943LL) == 274877906943LL) && ((_13824_x_lo + _11023_man) < _11023_man)) {
		jule::U64 _14214_y_hi;
		jule::U64 _14220_y_lo;
		std::tie(_14214_y_hi,_14220_y_lo) = _1d2038890_mul64(_11023_man,_1d05ec7a2_DETAILED_POWS_OF_TEN[static_cast<jule::Int>(_11033_exp10 - -348LL)][0LL]);
		jule::U64 _14318_merged_hi = _13814_x_hi;
		jule::U64 _14329_merged_lo = _13824_x_lo + _14214_y_hi;
		std::tie(_14318_merged_hi,_14329_merged_lo) = std::make_tuple(_13814_x_hi,_13824_x_lo + _14214_y_hi);
		if (_14329_merged_lo < _13824_x_lo) {
			(_14318_merged_hi)++;
		}
		if ((((_14318_merged_hi & 274877906943LL) == 274877906943LL) && ((_14329_merged_lo + 1LL) == 0LL)) && ((_14220_y_lo + _11023_man) < _11023_man)) {
			_11058_f = 0LL;
			_11066_ok = false;
			return std::make_tuple(_11058_f,_11066_ok);
		}
		std::tie(_13814_x_hi,_13824_x_lo) = std::make_tuple(_14318_merged_hi,_14329_merged_lo);
	}
	jule::U64 _1549_msb = _13814_x_hi >> 63LL;
	jule::U64 _15513_ret_mantissa = _13814_x_hi >> (_1549_msb + 38LL);
	_13513_ret_exp2-=static_cast<jule::U64>(1LL ^ _1549_msb);
	if (((_13824_x_lo == 0LL) && ((_13814_x_hi & 274877906943LL) == 0LL)) && ((_15513_ret_mantissa & 3LL) == 1LL)) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	_15513_ret_mantissa+=static_cast<jule::U64>(_15513_ret_mantissa & 1LL);
	_15513_ret_mantissa>>=1LL;
	if ((_15513_ret_mantissa >> 24LL) > 0LL) {
		_15513_ret_mantissa>>=1LL;
		_13513_ret_exp2+=1LL;
	}
	if ((_13513_ret_exp2 - 1LL) >= 254LL) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	jule::U64 _17813_ret_bits = (_13513_ret_exp2 << 23LL) | (_15513_ret_mantissa & 8388607LL);
	if (_11045_neg) {
		_17813_ret_bits|=2147483648LL;
	}
	_11058_f = static_cast<jule::F32>(_1d17de7ea_f32_from_bits(static_cast<jule::U32>(_17813_ret_bits)));
	_11066_ok = true;
	return std::make_tuple(_11058_f,_11066_ok);
}



inline jule::Int _1d05eae54_common_prefix_len_ignore_case(jule::Str _4534_s,jule::Str _4542_prefix) {
	jule::I64 _4613_n = _4542_prefix.len();
	if (_4613_n > _4534_s.len()) {
		_4613_n=static_cast<jule::I64>(_4534_s.len());
	}
	jule::Int _5013_i = 0LL;
	_iter_begin_4563364096:;
	if (!(_5013_i < _4613_n)) { goto _iter_end_4563364096; }
	{
		jule::U8 _5217_c = _4534_s[static_cast<jule::Int>(_5013_i)];
		if (('A' <= _5217_c) && (_5217_c <= 'Z')) {
			_5217_c+=32LL;
		}
		if (_5217_c != _4542_prefix[static_cast<jule::Int>(_5013_i)]) {
			return _5013_i;
		}
	}
	_iter_next_4563364096:;
	(_5013_i)++;
	goto _iter_begin_4563364096;
	_iter_end_4563364096:;
	return _4613_n;
}



inline std::tuple<jule::F64,jule::Int,jule::Bool> _1d05eae54_special(jule::Str _6816_s) {
	jule::F64 _6826_f = jule::F64();
	jule::Int _6834_n = jule::Int();
	jule::Bool _6842_ok = jule::Bool();
	if (_6816_s == jule::Str("", 0)) {
		_6826_f = 0LL;
		_6834_n = 0LL;
		_6842_ok = false;
		return std::make_tuple(_6826_f,_6834_n,_6842_ok);
	}
	jule::Int _7213_sign = 1LL;
	jule::Int _7313_nsign = 0LL;
	{
		auto _match_expr{ _6816_s[0LL] };
		if (!(('+') == _match_expr || ('-') == _match_expr)) { goto _case_end_4563379920; }
		_case_begin_4563379920:;
		{
			if (_6816_s[0LL] == '-') {
				_7213_sign=-1LL;
			}
			_7313_nsign=1LL;
			_6816_s=_6816_s.slice(1LL);
			goto _case_begin_4563380032;
		}
		goto _match_end_4563378880;
		_case_end_4563379920:;
		if (!(('i') == _match_expr || ('I') == _match_expr)) { goto _case_end_4563380032; }
		_case_begin_4563380032:;
		{
			jule::Int _8317_case_n = _1d05eae54_common_prefix_len_ignore_case(_6816_s,jule::Str("infinity", 8));
			if ((3LL < _8317_case_n) && (_8317_case_n < 8LL)) {
				_8317_case_n=3LL;
			}
			if ((_8317_case_n == 3LL) || (_8317_case_n == 8LL)) {
				_6826_f = static_cast<jule::F64>(_1d186ec98_inf(_7213_sign));
				_6834_n = static_cast<jule::Int>(_7313_nsign + _6834_n);
				_6842_ok = true;
				return std::make_tuple(_6826_f,_6834_n,_6842_ok);
			}
		}
		goto _match_end_4563378880;
		_case_end_4563380032:;
		if (!(('n') == _match_expr || ('N') == _match_expr)) { goto _case_end_4563380160; }
		_case_begin_4563380160:;
		{
			if (_1d05eae54_common_prefix_len_ignore_case(_6816_s,jule::Str("nan", 3)) == 3LL) {
				_6826_f = static_cast<jule::F64>(_1d186ec98_nan());
				_6834_n = 3LL;
				_6842_ok = true;
				return std::make_tuple(_6826_f,_6834_n,_6842_ok);
			}
		}
		goto _match_end_4563378880;
		_case_end_4563380160:;
		_match_end_4563378880:;
	}
	_6826_f = 0LL;
	_6834_n = 0LL;
	_6842_ok = false;
	return std::make_tuple(_6826_f,_6834_n,_6842_ok);
}



inline std::tuple<jule::U64,jule::Int,jule::Bool,jule::Bool,jule::Bool,jule::Int,jule::Bool> _1d05eae54_read_float(jule::Str _10315_s) {
	jule::U64 _10325_mantissa = jule::U64();
	jule::Int _10340_exp = jule::Int();
	jule::Bool _10350_neg = jule::Bool();
	jule::Bool _10425_trunc = jule::Bool();
	jule::Bool _10438_hex = jule::Bool();
	jule::Int _10449_i = jule::Int();
	jule::Bool _10457_ok = jule::Bool();
	if (_10449_i >= _10315_s.len()) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
	}
	{
		if (!((_10315_s[static_cast<jule::Int>(_10449_i)] == '+'))) { goto _case_end_4563398128; }
		_case_begin_4563398128:;
		{
			(_10449_i)++;
		}
		goto _match_end_4563397984;
		_case_end_4563398128:;
		if (!((_10315_s[static_cast<jule::Int>(_10449_i)] == '-'))) { goto _case_end_4563398352; }
		_case_begin_4563398352:;
		{
			_10350_neg=true;
			(_10449_i)++;
		}
		goto _match_end_4563397984;
		_case_end_4563398352:;
		_match_end_4563397984:;
	}
	jule::U64 _11813_base = 10LLU;
	jule::Int _11913_max_mant_digits = 19LL;
	jule::U8 _12013_exp_char = 'e';
	if ((((_10449_i + 2LL) < _10315_s.len()) && (_10315_s[static_cast<jule::Int>(_10449_i)] == '0')) && (_1d0632de2_lower(_10315_s[static_cast<jule::Int>(_10449_i + 1LL)]) == 'x')) {
		_11813_base=16LL;
		_11913_max_mant_digits=16LL;
		_10449_i+=2LL;
		_12013_exp_char='p';
		_10438_hex=true;
	}
	jule::Bool _12813_sawdot = false;
	jule::Bool _12913_sawdigits = false;
	jule::Int _13013_nd = 0LL;
	jule::Int _13113_nd_mant = 0LL;
	jule::Int _13213_dp = 0LL;
	_iter_begin_4697649840:;
	if (!(_10449_i < _10315_s.len())) { goto _iter_end_4697649840; }
	{
		jule::U8 _13413_c = _10315_s[static_cast<jule::Int>(_10449_i)];
		{
			if (!((_13413_c == '.'))) { goto _case_end_4697654000; }
			_case_begin_4697654000:;
			{
				if (_12813_sawdot) {
					goto _julec_label_loop_end;
				}
				_12813_sawdot=true;
				_13213_dp=_13013_nd;
				goto _iter_next_4697649840;
			}
			goto _match_end_4697653360;
			_case_end_4697654000:;
			if (!((('0' <= _13413_c) && (_13413_c <= '9')))) { goto _case_end_4697654128; }
			_case_begin_4697654128:;
			{
				_12913_sawdigits=true;
				if ((_13413_c == '0') && (_13013_nd == 0LL)) {
					(_13213_dp)--;
					goto _iter_next_4697649840;
				}
				(_13013_nd)++;
				if (_13113_nd_mant < _11913_max_mant_digits) {
					_10325_mantissa*=_11813_base;
					_10325_mantissa+=static_cast<jule::U64>(_13413_c - '0');
					(_13113_nd_mant)++;
				} else if (_13413_c != '0') {
					_10425_trunc=true;
				}
				goto _iter_next_4697649840;
			}
			goto _match_end_4697653360;
			_case_end_4697654128:;
			if (!((((_11813_base == 16LL) && ('a' <= _1d0632de2_lower(_13413_c))) && (_1d0632de2_lower(_13413_c) <= 'f')))) { goto _case_end_4697654256; }
			_case_begin_4697654256:;
			{
				_12913_sawdigits=true;
				(_13013_nd)++;
				if (_13113_nd_mant < _11913_max_mant_digits) {
					_10325_mantissa*=16LL;
					_10325_mantissa+=static_cast<jule::U64>((_1d0632de2_lower(_13413_c) - 'a') + 10LL);
					(_13113_nd_mant)++;
				} else {
					_10425_trunc=true;
				}
				goto _iter_next_4697649840;
			}
			goto _match_end_4697653360;
			_case_end_4697654256:;
			_match_end_4697653360:;
		}
		goto _iter_end_4697649840;
	}
	_iter_next_4697649840:;
	(_10449_i)++;
	goto _iter_begin_4697649840;
	_iter_end_4697649840:;
	_julec_label_loop_end:;
	if ((!(_12913_sawdigits))) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
	}
	if ((!(_12813_sawdot))) {
		_13213_dp=_13013_nd;
	}
	if (_11813_base == 16LL) {
		_13213_dp*=4LL;
		_13113_nd_mant*=4LL;
	}
	if ((_10449_i < _10315_s.len()) && (_1d0632de2_lower(_10315_s[static_cast<jule::Int>(_10449_i)]) == _12013_exp_char)) {
		(_10449_i)++;
		if (_10449_i >= _10315_s.len()) {
			return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
		}
		jule::Int _19517_esign = 1LL;
		if (_10315_s[static_cast<jule::Int>(_10449_i)] == '+') {
			(_10449_i)++;
		} else if (_10315_s[static_cast<jule::Int>(_10449_i)] == '-') {
			(_10449_i)++;
			_19517_esign=-1LL;
		}
		if (((_10449_i >= _10315_s.len()) || (_10315_s[static_cast<jule::Int>(_10449_i)] < '0')) || (_10315_s[static_cast<jule::Int>(_10449_i)] > '9')) {
			return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
		}
		jule::Int _20517_e = 0LL;
		_iter_begin_4697678304:;
		if (!((_10449_i < _10315_s.len()) && (('0' <= _10315_s[static_cast<jule::Int>(_10449_i)]) && (_10315_s[static_cast<jule::Int>(_10449_i)] <= '9')))) { goto _iter_end_4697678304; }
		{
			if (_20517_e < 10000LL) {
				_20517_e=static_cast<jule::Int>(((_20517_e * 10LL) + static_cast<jule::Int>(_10315_s[static_cast<jule::Int>(_10449_i)])) - '0');
			}
		}
		_iter_next_4697678304:;
		(_10449_i)++;
		goto _iter_begin_4697678304;
		_iter_end_4697678304:;
		_13213_dp+=static_cast<jule::Int>(_20517_e * _19517_esign);
	} else if (_11813_base == 16LL) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
	}
	if (_10325_mantissa != 0LL) {
		_10340_exp=static_cast<jule::Int>(_13213_dp - _13113_nd_mant);
	}
	_10457_ok=true;
	return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
}



inline std::tuple<jule::F64,jule::Bool> _1d05eae54_atof64_exact(jule::U64 _43317_mantissa,jule::Int _43336_exp,jule::Bool _43346_neg) {
	jule::F64 _43359_f = jule::F64();
	jule::Bool _43367_ok = jule::Bool();
	if ((_43317_mantissa >> _1d061d5e7_F64_INFO._field_mantbits) != 0LL) {
		return std::make_tuple(_43359_f,_43367_ok);
	}
	_43359_f=static_cast<jule::F64>(_43317_mantissa);
	if (_43346_neg) {
		_43359_f=static_cast<jule::F64>((-(_43359_f)));
	}
	{
		if (!((_43336_exp == 0LL))) { goto _case_end_4697698128; }
		_case_begin_4697698128:;
		{
			_43359_f = _43359_f;
			_43367_ok = true;
			return std::make_tuple(_43359_f,_43367_ok);
		}
		goto _match_end_4697698816;
		_case_end_4697698128:;
		if (!(((_43336_exp > 0LL) && (_43336_exp <= 37LL)))) { goto _case_end_4697698240; }
		_case_begin_4697698240:;
		{
			if (_43336_exp > 22LL) {
				_43359_f*=_1d05eae54_F64_POW10[static_cast<jule::Int>(_43336_exp - 22LL)];
				_43336_exp=22LL;
			}
			if ((_43359_f > 1000000000000000LL) || (_43359_f < -1000000000000000LL)) {
				return std::make_tuple(_43359_f,_43367_ok);
			}
			_43359_f = static_cast<jule::F64>(_43359_f * _1d05eae54_F64_POW10[static_cast<jule::Int>(_43336_exp)]);
			_43367_ok = true;
			return std::make_tuple(_43359_f,_43367_ok);
		}
		goto _match_end_4697698816;
		_case_end_4697698240:;
		if (!(((_43336_exp < 0LL) && (_43336_exp >= -22LL)))) { goto _case_end_4697698368; }
		_case_begin_4697698368:;
		{
			_43359_f = static_cast<jule::F64>(jule::div(_43359_f,_1d05eae54_F64_POW10[static_cast<jule::Int>((-(_43336_exp)))]));
			_43367_ok = true;
			return std::make_tuple(_43359_f,_43367_ok);
		}
		goto _match_end_4697698816;
		_case_end_4697698368:;
		_match_end_4697698816:;
	}
	return std::make_tuple(_43359_f,_43367_ok);
}



inline std::tuple<jule::F64,jule::Bool> _1d05eae54_atof64exact(jule::U64 _47216_mantissa,jule::Int _47235_exp,jule::Bool _47245_neg) {
	jule::F64 _47258_f = jule::F64();
	jule::Bool _47266_ok = jule::Bool();
	if ((_47216_mantissa >> _1d061d5e7_F64_INFO._field_mantbits) != 0LL) {
		return std::make_tuple(_47258_f,_47266_ok);
	}
	_47258_f=static_cast<jule::F64>(_47216_mantissa);
	if (_47245_neg) {
		_47258_f=static_cast<jule::F64>((-(_47258_f)));
	}
	{
		if (!((_47235_exp == 0LL))) { goto _case_end_4697716000; }
		_case_begin_4697716000:;
		{
			_47258_f = _47258_f;
			_47266_ok = true;
			return std::make_tuple(_47258_f,_47266_ok);
		}
		goto _match_end_4697716688;
		_case_end_4697716000:;
		if (!(((_47235_exp > 0LL) && (_47235_exp <= 37LL)))) { goto _case_end_4697716112; }
		_case_begin_4697716112:;
		{
			if (_47235_exp > 22LL) {
				_47258_f*=_1d05eae54_F64_POW10[static_cast<jule::Int>(_47235_exp - 22LL)];
				_47235_exp=22LL;
			}
			if ((_47258_f > 1000000000000000LL) || (_47258_f < -1000000000000000LL)) {
				return std::make_tuple(_47258_f,_47266_ok);
			}
			_47258_f = static_cast<jule::F64>(_47258_f * _1d05eae54_F64_POW10[static_cast<jule::Int>(_47235_exp)]);
			_47266_ok = true;
			return std::make_tuple(_47258_f,_47266_ok);
		}
		goto _match_end_4697716688;
		_case_end_4697716112:;
		if (!(((_47235_exp < 0LL) && (_47235_exp >= -22LL)))) { goto _case_end_4697716224; }
		_case_begin_4697716224:;
		{
			_47258_f = static_cast<jule::F64>(jule::div(_47258_f,_1d05eae54_F64_POW10[static_cast<jule::Int>((-(_47235_exp)))]));
			_47266_ok = true;
			return std::make_tuple(_47258_f,_47266_ok);
		}
		goto _match_end_4697716688;
		_case_end_4697716224:;
		_match_end_4697716688:;
	}
	return std::make_tuple(_47258_f,_47266_ok);
}



inline std::tuple<jule::F32,jule::Bool> _1d05eae54_atof32exact(jule::U64 _50616_mantissa,jule::Int _50635_exp,jule::Bool _50649_neg) {
	jule::F32 _50662_f = jule::F32();
	jule::Bool _50670_ok = jule::Bool();
	if ((_50616_mantissa >> _1d061d5e7_F32_INFO._field_mantbits) != 0LL) {
		return std::make_tuple(_50662_f,_50670_ok);
	}
	_50662_f=static_cast<jule::F32>(_50616_mantissa);
	if (_50649_neg) {
		_50662_f=static_cast<jule::F32>((-(_50662_f)));
	}
	{
		if (!((_50635_exp == 0LL))) { goto _case_end_4697733744; }
		_case_begin_4697733744:;
		{
			_50662_f = _50662_f;
			_50670_ok = true;
			return std::make_tuple(_50662_f,_50670_ok);
		}
		goto _match_end_4697734432;
		_case_end_4697733744:;
		if (!(((_50635_exp > 0LL) && (_50635_exp <= 17LL)))) { goto _case_end_4697733856; }
		_case_begin_4697733856:;
		{
			if (_50635_exp > 10LL) {
				_50662_f*=_1d05eae54_F32_POW10[static_cast<jule::Int>(_50635_exp - 10LL)];
				_50635_exp=10LL;
			}
			if ((_50662_f > 10000000LL) || (_50662_f < -10000000LL)) {
				return std::make_tuple(_50662_f,_50670_ok);
			}
			_50662_f = static_cast<jule::F32>(_50662_f * _1d05eae54_F32_POW10[static_cast<jule::Int>(_50635_exp)]);
			_50670_ok = true;
			return std::make_tuple(_50662_f,_50670_ok);
		}
		goto _match_end_4697734432;
		_case_end_4697733856:;
		if (!(((_50635_exp < 0LL) && (_50635_exp >= -10LL)))) { goto _case_end_4697733984; }
		_case_begin_4697733984:;
		{
			_50662_f = static_cast<jule::F32>(jule::div(_50662_f,_1d05eae54_F32_POW10[static_cast<jule::Int>((-(_50635_exp)))]));
			_50670_ok = true;
			return std::make_tuple(_50662_f,_50670_ok);
		}
		goto _match_end_4697734432;
		_case_end_4697733984:;
		_match_end_4697734432:;
	}
	return std::make_tuple(_50662_f,_50670_ok);
}



inline std::tuple<jule::F64,jule::Int> _1d05eae54_atof_hex(jule::Str _54213_s,_1d061d5e7_FloatInfo& _54222_flt,jule::U64 _54242_mantissa,jule::Int _54261_exp,jule::Bool _54271_neg,jule::Bool _54282_trunc) {
	jule::Int _5439_max_exp = ((1LL << _54222_flt._field_expbits) + _54222_flt._field_bias) - 2LL;
	jule::Int _5449_min_exp = _54222_flt._field_bias + 1LL;
	_54261_exp+=static_cast<jule::Int>(_54222_flt._field_mantbits);
	_iter_begin_4697751744:;
	if (!((_54242_mantissa != 0LL) && ((_54242_mantissa >> (_54222_flt._field_mantbits + 2LL)) == 0LL))) { goto _iter_end_4697751744; }
	{
		_54242_mantissa<<=1LL;
		(_54261_exp)--;
	}
	_iter_next_4697751744:;
	goto _iter_begin_4697751744;
	_iter_end_4697751744:;
	if (_54282_trunc) {
		_54242_mantissa|=1LL;
	}
	_iter_begin_4697756800:;
	if (!((_54242_mantissa >> ((1LL + _54222_flt._field_mantbits) + 2LL)) != 0LL)) { goto _iter_end_4697756800; }
	{
		_54242_mantissa=static_cast<jule::U64>((_54242_mantissa >> 1LL) | (_54242_mantissa & 1LL));
		(_54261_exp)++;
	}
	_iter_next_4697756800:;
	goto _iter_begin_4697756800;
	_iter_end_4697756800:;
	_iter_begin_4697756208:;
	if (!((_54242_mantissa > 1LL) && (_54261_exp < (_5449_min_exp - 2LL)))) { goto _iter_end_4697756208; }
	{
		_54242_mantissa=static_cast<jule::U64>((_54242_mantissa >> 1LL) | (_54242_mantissa & 1LL));
		(_54261_exp)++;
	}
	_iter_next_4697756208:;
	goto _iter_begin_4697756208;
	_iter_end_4697756208:;
	jule::U64 _57413_round = _54242_mantissa & 3LL;
	_54242_mantissa>>=2LL;
	_57413_round|=static_cast<jule::U64>(_54242_mantissa & 1LL);
	_54261_exp+=2LL;
	if (_57413_round == 3LL) {
		(_54242_mantissa)++;
		if (_54242_mantissa == (1LL << (1LL + _54222_flt._field_mantbits))) {
			_54242_mantissa>>=1LL;
			(_54261_exp)++;
		}
	}
	if ((_54242_mantissa >> _54222_flt._field_mantbits) == 0LL) {
		_54261_exp=_54222_flt._field_bias;
	}
	jule::Int _58913_err = 0LLU;
	if (_54261_exp > _5439_max_exp) {
		_54242_mantissa=static_cast<jule::U64>(1LL << _54222_flt._field_mantbits);
		_54261_exp=static_cast<jule::Int>(_5439_max_exp + 1LL);
		_58913_err=1LLU;
	}
	jule::U64 _59613_bits = _54242_mantissa & ((1LL << _54222_flt._field_mantbits) - 1LL);
	_59613_bits|=static_cast<jule::U64>(static_cast<jule::U64>((_54261_exp - _54222_flt._field_bias) & ((1LL << _54222_flt._field_expbits) - 1LL)) << _54222_flt._field_mantbits);
	if (_54271_neg) {
		_59613_bits|=static_cast<jule::Int>((1LL << _54222_flt._field_mantbits) << _54222_flt._field_expbits);
	}
	if (_54222_flt == _1d061d5e7_F32_INFO) {
		return std::make_tuple(static_cast<jule::F64>(_1d17de7ea_f32_from_bits(static_cast<jule::U32>(_59613_bits))),_58913_err);
	}
	return std::make_tuple(static_cast<jule::F64>(_1d17de7ea_f64_from_bits(_59613_bits)),_58913_err);
}



inline std::tuple<jule::F32,jule::Int,jule::Int> _1d05eae54_atof32(jule::Str _60711_s) {
	jule::F32 _60721_f = jule::F32();
	jule::Int _60729_n = jule::Int();
	jule::Int _60737_err = 0LLU;
	{
		jule::F64 _60914_val;
		jule::Int _60919__n;
		jule::Bool _60923_ok;
		std::tie(_60914_val,_60919__n,_60923_ok) = _1d05eae54_special(_60711_s);
		if (_60923_ok) {
			_60721_f = static_cast<jule::F32>(_60914_val);
			_60729_n = _60919__n;
			_60737_err = 0LLU;
			return std::make_tuple(_60721_f,_60729_n,_60737_err);
		}
	}
	jule::U64 _61510_mantissa;
	jule::Int _61520_exp;
	jule::Bool _61525_neg;
	jule::Bool _61530_trunc;
	jule::Bool _61537_hex;
	jule::Int _61542__n;
	jule::Bool _61550_ok;
	std::tie(_61510_mantissa,_61520_exp,_61525_neg,_61530_trunc,_61537_hex,_61542__n,_61550_ok) = _1d05eae54_read_float(_60711_s);
	_60729_n=_61542__n;
	if ((!(_61550_ok))) {
		_60721_f = 0LL;
		_60729_n = _60729_n;
		_60737_err = 2LLU;
		return std::make_tuple(_60721_f,_60729_n,_60737_err);
	}
	if (_61537_hex) {
		jule::F64 _62217_ff = 0LL;
		std::tie(_62217_ff,_60737_err) = _1d05eae54_atof_hex(_60711_s.slice(0LL,static_cast<jule::Int>(_60729_n)),_1d061d5e7_F32_INFO,_61510_mantissa,_61520_exp,_61525_neg,_61530_trunc);
		_60721_f = static_cast<jule::F32>(_62217_ff);
		_60729_n = _60729_n;
		_60737_err = _60737_err;
		return std::make_tuple(_60721_f,_60729_n,_60737_err);
	}
	if (true) {
		if ((!(_61530_trunc))) {
			std::tie(_60721_f,_61550_ok) = _1d05eae54_atof32exact(_61510_mantissa,_61520_exp,_61525_neg);
			if (_61550_ok) {
				_60721_f = _60721_f;
				_60729_n = _60729_n;
				_60737_err = 0LLU;
				return std::make_tuple(_60721_f,_60729_n,_60737_err);
			}
		}
		std::tie(_60721_f,_61550_ok) = _1d05ec7a2_eisel_lemire32(_61510_mantissa,_61520_exp,_61525_neg);
		if (_61550_ok) {
			if ((!(_61530_trunc))) {
				_60721_f = _60721_f;
				_60729_n = _60729_n;
				_60737_err = 0LLU;
				return std::make_tuple(_60721_f,_60729_n,_60737_err);
			}
			jule::F32 _64421_f_up = 0LL;
			std::tie(_64421_f_up,_61550_ok) = _1d05ec7a2_eisel_lemire32(static_cast<jule::U64>(_61510_mantissa + 1LL),_61520_exp,_61525_neg);
			if (_61550_ok && (_60721_f == _64421_f_up)) {
				_60721_f = _60721_f;
				_60729_n = _60729_n;
				_60737_err = 0LLU;
				return std::make_tuple(_60721_f,_60729_n,_60737_err);
			}
		}
	}
	_1d159c685_Decimal _65313_d = _1d159c685_Decimal();
	if ((!(_65313_d._method_set(_60711_s.slice(0LL,static_cast<jule::Int>(_60729_n)))))) {
		_60721_f = 0LL;
		_60729_n = _60729_n;
		_60737_err = 2LLU;
		return std::make_tuple(_60721_f,_60729_n,_60737_err);
	}
	jule::U64 _65710_b;
	jule::Bool _65713_ovf;
	std::tie(_65710_b,_65713_ovf) = _65313_d._method_float_bits(_1d061d5e7_F32_INFO);
	_60721_f=static_cast<jule::F32>(_1d17de7ea_f32_from_bits(static_cast<jule::U32>(_65710_b)));
	if (_65713_ovf) {
		_60737_err=1LLU;
	}
	_60721_f = _60721_f;
	_60729_n = _60729_n;
	_60737_err = _60737_err;
	return std::make_tuple(_60721_f,_60729_n,_60737_err);
}



inline std::tuple<jule::F64,jule::Int,jule::Int> _1d05eae54_atof64(jule::Str _66511_s) {
	jule::F64 _66521_f = jule::F64();
	jule::Int _66529_n = jule::Int();
	jule::Int _66537_err = 0LLU;
	{
		jule::F64 _66714_val;
		jule::Int _66719__n;
		jule::Bool _66723_ok;
		std::tie(_66714_val,_66719__n,_66723_ok) = _1d05eae54_special(_66511_s);
		if (_66723_ok) {
			_66521_f = _66714_val;
			_66529_n = _66719__n;
			_66537_err = 0LLU;
			return std::make_tuple(_66521_f,_66529_n,_66537_err);
		}
	}
	jule::U64 _67310_mantissa;
	jule::Int _67320_exp;
	jule::Bool _67325_neg;
	jule::Bool _67330_trunc;
	jule::Bool _67337_hex;
	jule::Int _67342__n;
	jule::Bool _67350_ok;
	std::tie(_67310_mantissa,_67320_exp,_67325_neg,_67330_trunc,_67337_hex,_67342__n,_67350_ok) = _1d05eae54_read_float(_66511_s);
	_66529_n=_67342__n;
	if ((!(_67350_ok))) {
		_66521_f = 0LL;
		_66529_n = _66529_n;
		_66537_err = 2LLU;
		return std::make_tuple(_66521_f,_66529_n,_66537_err);
	}
	if (_67337_hex) {
		std::tie(_66521_f,_66537_err) = _1d05eae54_atof_hex(_66511_s.slice(0LL,static_cast<jule::Int>(_66529_n)),_1d061d5e7_F64_INFO,_67310_mantissa,_67320_exp,_67325_neg,_67330_trunc);
		_66521_f = _66521_f;
		_66529_n = _66529_n;
		_66537_err = _66537_err;
		return std::make_tuple(_66521_f,_66529_n,_66537_err);
	}
	if (true) {
		if ((!(_67330_trunc))) {
			std::tie(_66521_f,_67350_ok) = _1d05eae54_atof64exact(_67310_mantissa,_67320_exp,_67325_neg);
			if (_67350_ok) {
				_66521_f = _66521_f;
				_66529_n = _66529_n;
				_66537_err = 0LLU;
				return std::make_tuple(_66521_f,_66529_n,_66537_err);
			}
		}
		std::tie(_66521_f,_67350_ok) = _1d05ec7a2_eisel_lemire64(_67310_mantissa,_67320_exp,_67325_neg);
		if (_67350_ok) {
			if ((!(_67330_trunc))) {
				_66521_f = _66521_f;
				_66529_n = _66529_n;
				_66537_err = 0LLU;
				return std::make_tuple(_66521_f,_66529_n,_66537_err);
			}
			jule::F64 _70121_f_up = 0LL;
			std::tie(_70121_f_up,_67350_ok) = _1d05ec7a2_eisel_lemire64(static_cast<jule::U64>(_67310_mantissa + 1LL),_67320_exp,_67325_neg);
			if (_67350_ok && (_66521_f == _70121_f_up)) {
				_66521_f = _66521_f;
				_66529_n = _66529_n;
				_66537_err = 0LLU;
				return std::make_tuple(_66521_f,_66529_n,_66537_err);
			}
		}
	}
	_1d159c685_Decimal _71013_d = _1d159c685_Decimal();
	if ((!(_71013_d._method_set(_66511_s.slice(0LL,static_cast<jule::Int>(_66529_n)))))) {
		_66521_f = 0LL;
		_66529_n = _66529_n;
		_66537_err = 2LLU;
		return std::make_tuple(_66521_f,_66529_n,_66537_err);
	}
	jule::U64 _71410_b;
	jule::Bool _71413_ovf;
	std::tie(_71410_b,_71413_ovf) = _71013_d._method_float_bits(_1d061d5e7_F64_INFO);
	_66521_f=static_cast<jule::F64>(_1d17de7ea_f64_from_bits(_71410_b));
	if (_71413_ovf) {
		_66537_err=1LLU;
	}
	_66521_f = _66521_f;
	_66529_n = _66529_n;
	_66537_err = _66537_err;
	return std::make_tuple(_66521_f,_66529_n,_66537_err);
}



inline std::tuple<jule::F64,jule::Int,jule::Int> _1d05eae54_parse_float_prefix(jule::Str _72223_s,jule::Int _72231_bit_size) {
	if (_72231_bit_size == 32LL) {
		jule::F32 _72414_f;
		jule::Int _72417_n;
		jule::Int _72420_err;
		std::tie(_72414_f,_72417_n,_72420_err) = _1d05eae54_atof32(_72223_s);
		return std::make_tuple(static_cast<jule::F64>(_72414_f),_72417_n,_72420_err);
	}
	jule::F64 _72810_f;
	jule::Int _72813_n;
	jule::Int _72816_err;
	std::tie(_72810_f,_72813_n,_72816_err) = _1d05eae54_atof64(_72223_s);
	return std::make_tuple(_72810_f,_72813_n,_72816_err);
}



inline std::tuple<jule::F64,jule::Int> _1d05eae54_parse_float(jule::Str _75620_s,jule::Int _75628_bit_size) {
	jule::F64 _75710_f;
	jule::Int _75713_n;
	jule::Int _75716_err;
	std::tie(_75710_f,_75713_n,_75716_err) = _1d05eae54_parse_float_prefix(_75620_s,_75628_bit_size);
	if ((_75713_n != _75620_s.len()) && ((_75716_err == 0LLU) || (_75716_err != 2LLU))) {
		return std::make_tuple(0LL,2LLU);
	}
	return std::make_tuple(_75710_f,_75716_err);
}



inline void _1d14d25dc_ryu_ftoa_fixed32(_1d061d5e7_DecimalSlice& _4926_d,jule::U32 _4947_mant,jule::Int _4958_exp,jule::Int _4968_prec) {
	if (_4968_prec < 0LL) {
		jule::panic(jule::Str("ryu_ftoa_fixed32 called with negative prec", 42));
	}
	if (_4968_prec > 9LL) {
		jule::panic(jule::Str("ryu_ftoa_fixed32 called with prec > 9", 37));
	}
	if (_4947_mant == 0LL) {
		std::tie(_4926_d._field_nd,_4926_d._field_dp) = std::make_tuple(0LL,0LL);
		return;
	}
	jule::Int _6213_e2 = _4958_exp;
	jule::Int _639_b = _1d2038890_len32(_4947_mant);
	if (_639_b < 25LL) {
		_4947_mant<<=static_cast<jule::Uint>(25LL - _639_b);
		_6213_e2+=static_cast<jule::Int>(static_cast<jule::Int>(_639_b) - 25LL);
	}
	jule::Int _749_q = ((-(_1d14d25dc_mul_by_log2_log10(static_cast<jule::Int>(_6213_e2 + 24LL)))) + _4968_prec) - 1LL;
	jule::Bool _7913_exact = (_749_q <= 27LL) && (_749_q >= 0LL);
	jule::U32 _8114_di;
	jule::Int _8118_dexp2;
	jule::Bool _8129_d0;
	std::tie(_8114_di,_8118_dexp2,_8129_d0) = _1d14d25dc_mult64bit_pow10(_4947_mant,_6213_e2,_749_q);
	if (_8118_dexp2 >= 0LL) {
		jule::panic(jule::Str("not enough significant bits after mult64bit_pow10", 49));
	}
	if (((_749_q < 0LL) && (_749_q >= -10LL)) && _1d14d25dc_divisible_by_pow5(static_cast<jule::U64>(_4947_mant),static_cast<jule::Int>((-(_749_q))))) {
		_7913_exact=true;
		_8129_d0=true;
	}
	jule::Uint _949_extra = static_cast<jule::Uint>((-(_8118_dexp2)));
	jule::U32 _959_extra_mask = static_cast<jule::U32>((1LL << _949_extra) - 1LL);
	jule::U32 _9713_dfrac = 0LLU;
	std::tie(_8114_di,_9713_dfrac) = std::make_tuple(static_cast<jule::U32>(_8114_di >> _949_extra),static_cast<jule::U32>(_8114_di & _959_extra_mask));
	jule::Bool _9913_round_up = false;
	if (_7913_exact) {
		_9913_round_up=((_9713_dfrac > (1LL << (_949_extra - 1LL))) || ((_9713_dfrac == (1LL << (_949_extra - 1LL))) && (!(_8129_d0)))) || (((_9713_dfrac == (1LL << (_949_extra - 1LL))) && _8129_d0) && ((_8114_di & 1LL) == 1LL));
	} else {
		_9913_round_up=(_9713_dfrac >> (_949_extra - 1LL)) == 1LL;
	}
	if (_9713_dfrac != 0LL) {
		_8129_d0=false;
	}
	_1d14d25dc_format_decimal(_4926_d,static_cast<jule::U64>(_8114_di),(!(_8129_d0)),_9913_round_up,_4968_prec);
	_4926_d._field_dp-=_749_q;
}



inline void _1d14d25dc_ryu_ftoa_fixed64(_1d061d5e7_DecimalSlice& _12326_d,jule::U64 _12347_mant,jule::Int _12358_exp,jule::Int _12368_prec) {
	if (_12368_prec > 18LL) {
		jule::panic(jule::Str("ryu_ftoa_fixed64 called with prec > 18", 38));
	}
	if (_12347_mant == 0LL) {
		std::tie(_12326_d._field_nd,_12326_d._field_dp) = std::make_tuple(0LL,0LL);
		return;
	}
	jule::Int _13313_e2 = _12358_exp;
	jule::Int _1349_b = _1d2038890_len64(_12347_mant);
	if (_1349_b < 55LL) {
		_12347_mant=static_cast<jule::U64>(_12347_mant << static_cast<jule::Uint>(55LL - _1349_b));
		_13313_e2+=static_cast<jule::Int>(static_cast<jule::Int>(_1349_b) - 55LL);
	}
	jule::Int _1489_q = ((-(_1d14d25dc_mul_by_log2_log10(static_cast<jule::Int>(_13313_e2 + 54LL)))) + _12368_prec) - 1LL;
	jule::Bool _15313_exact = (_1489_q <= 55LL) && (_1489_q >= 0LL);
	jule::U64 _15514_di;
	jule::Int _15518_dexp2;
	jule::Bool _15529_d0;
	std::tie(_15514_di,_15518_dexp2,_15529_d0) = _1d14d25dc_mult128bit_pow10(_12347_mant,_13313_e2,_1489_q);
	if (_15518_dexp2 >= 0LL) {
		jule::panic(jule::Str("not enough significant bits after mult128bit_pow10", 50));
	}
	if (((_1489_q < 0LL) && (_1489_q >= -22LL)) && _1d14d25dc_divisible_by_pow5(_12347_mant,static_cast<jule::Int>((-(_1489_q))))) {
		_15313_exact=true;
		_15529_d0=true;
	}
	jule::Uint _1689_extra = static_cast<jule::Uint>((-(_15518_dexp2)));
	jule::U64 _1699_extra_mask = static_cast<jule::U64>((1LL << _1689_extra) - 1LL);
	jule::U64 _17113_dfrac = 0LLU;
	std::tie(_15514_di,_17113_dfrac) = std::make_tuple(static_cast<jule::U64>(_15514_di >> _1689_extra),static_cast<jule::U64>(_15514_di & _1699_extra_mask));
	jule::Bool _17313_round_up = false;
	if (_15313_exact) {
		_17313_round_up=((_17113_dfrac > (1LL << (_1689_extra - 1LL))) || ((_17113_dfrac == (1LL << (_1689_extra - 1LL))) && (!(_15529_d0)))) || (((_17113_dfrac == (1LL << (_1689_extra - 1LL))) && _15529_d0) && ((_15514_di & 1LL) == 1LL));
	} else {
		_17313_round_up=(_17113_dfrac >> (_1689_extra - 1LL)) == 1LL;
	}
	if (_17113_dfrac != 0LL) {
		_15529_d0=false;
	}
	_1d14d25dc_format_decimal(_12326_d,_15514_di,(!(_15529_d0)),_17313_round_up,_12368_prec);
	_12326_d._field_dp-=_1489_q;
}



inline void _1d14d25dc_format_decimal(_1d061d5e7_DecimalSlice& _20424_d,jule::U64 _20445_m,jule::Bool _20457_trunc,jule::Bool _20474_round_up,jule::Int _20490_prec) {
	jule::U64 _2059_max = _1d14d25dc_U64_POW10[static_cast<jule::Int>(_20490_prec)];
	jule::Int _20613_trimmed = 0LL;
	_iter_begin_4697940128:;
	if (!(_20445_m >= _2059_max)) { goto _iter_end_4697940128; }
	{
		jule::U64 _20814_a = jule::div(_20445_m,10LL);
		jule::U64 _20817_b = jule::mod(_20445_m,10LL);
		std::tie(_20814_a,_20817_b) = std::make_tuple(jule::div(_20445_m,10LL),jule::mod(_20445_m,10LL));
		_20445_m=_20814_a;
		(_20613_trimmed)++;
		if (_20817_b > 5LL) {
			_20474_round_up=true;
		} else if (_20817_b < 5LL) {
			_20474_round_up=false;
		} else {
			_20474_round_up=_20457_trunc || ((_20445_m & 1LL) == 1LL);
		}
		if (_20817_b != 0LL) {
			_20457_trunc=true;
		}
	}
	_iter_next_4697940128:;
	goto _iter_begin_4697940128;
	_iter_end_4697940128:;
	if (_20474_round_up) {
		(_20445_m)++;
	}
	if (_20445_m >= _2059_max) {
		_20445_m = jule::div(_20445_m,10LL);
		(_20613_trimmed)++;
	}
	jule::Uint _23313_n = static_cast<jule::Uint>(_20490_prec);
	_20424_d._field_nd=static_cast<jule::Int>(_20490_prec);
	jule::U64 _23513_v = _20445_m;
	_iter_begin_4697950720:;
	if (!(_23513_v >= 100LL)) { goto _iter_end_4697950720; }
	{
		jule::U64 _23717_v1 = 0LLU;
		jule::U64 _23817_v2 = 0LLU;
		if ((_23513_v >> 32LL) == 0LL) {
			std::tie(_23717_v1,_23817_v2) = std::make_tuple(static_cast<jule::U64>(jule::div(static_cast<jule::U32>(_23513_v),100LL)),static_cast<jule::U64>(jule::mod(static_cast<jule::U32>(_23513_v),100LL)));
		} else {
			std::tie(_23717_v1,_23817_v2) = std::make_tuple(static_cast<jule::U64>(jule::div(_23513_v,100LL)),static_cast<jule::U64>(jule::mod(_23513_v,100LL)));
		}
		_23313_n-=2LL;
		_20424_d._field_d[static_cast<jule::Int>(_23313_n + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _23817_v2) + 1LL)]);
		_20424_d._field_d[static_cast<jule::Int>(_23313_n + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _23817_v2) + 0LL)]);
		_23513_v=_23717_v1;
	}
	_iter_next_4697950720:;
	goto _iter_begin_4697950720;
	_iter_end_4697950720:;
	if (_23513_v > 0LL) {
		(_23313_n)--;
		_20424_d._field_d[static_cast<jule::Int>(_23313_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _23513_v) + 1LL)]);
	}
	if (_23513_v >= 10LL) {
		(_23313_n)--;
		_20424_d._field_d[static_cast<jule::Int>(_23313_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(2LL * _23513_v)]);
	}
	_iter_begin_4697974848:;
	if (!(_20424_d._field_d[static_cast<jule::Int>(_20424_d._field_nd - 1LL)] == '0')) { goto _iter_end_4697974848; }
	{
		(_20424_d._field_nd)--;
		(_20613_trimmed)++;
	}
	_iter_next_4697974848:;
	goto _iter_begin_4697974848;
	_iter_end_4697974848:;
	_20424_d._field_dp=static_cast<jule::Int>(_20424_d._field_nd + _20613_trimmed);
}



inline void _1d14d25dc_ryu_ftoa_shortest(_1d061d5e7_DecimalSlice& _26527_d,jule::U64 _26548_mant,jule::Int _26559_exp,_1d061d5e7_FloatInfo& _26570_flt) {
	if (_26548_mant == 0LL) {
		std::tie(_26527_d._field_nd,_26527_d._field_dp) = std::make_tuple(0LL,0LL);
		return;
	}
	if ((_26559_exp <= 0LL) && (_1d2038890_trailing_zeros64(_26548_mant) >= (-(_26559_exp)))) {
		_26548_mant>>=static_cast<jule::Uint>((-(_26559_exp)));
		_1d14d25dc_ryu_digits(_26527_d,_26548_mant,_26548_mant,_26548_mant,true,false);
		return;
	}
	jule::U64 _27710_ml;
	jule::U64 _27714_mc;
	jule::U64 _27718_mu;
	jule::Int _27726_e2;
	std::tie(_27710_ml,_27714_mc,_27718_mu,_27726_e2) = _1d14d25dc_compute_bounds(_26548_mant,_26559_exp,_26570_flt);
	if (_27726_e2 == 0LL) {
		_1d14d25dc_ryu_digits(_26527_d,_27710_ml,_27714_mc,_27718_mu,true,false);
		return;
	}
	jule::Int _2839_q = _1d14d25dc_mul_by_log2_log10(static_cast<jule::Int>((-(_27726_e2)))) + 1LL;
	jule::U64 _28713_dl = 0LLU;
	jule::U64 _28813_dc = 0LLU;
	jule::U64 _28913_du = 0LLU;
	jule::Bool _29013_dl0 = false;
	jule::Bool _29113_dc0 = false;
	jule::Bool _29213_du0 = false;
	if (_26570_flt == _1d061d5e7_F32_INFO) {
		jule::U32 _29417_dl32 = 0LLU;
		jule::U32 _29517_dc32 = 0LLU;
		jule::U32 _29617_du32 = 0LLU;
		std::tie(_29417_dl32,std::ignore,_29013_dl0) = _1d14d25dc_mult64bit_pow10(static_cast<jule::U32>(_27710_ml),_27726_e2,_2839_q);
		std::tie(_29517_dc32,std::ignore,_29113_dc0) = _1d14d25dc_mult64bit_pow10(static_cast<jule::U32>(_27714_mc),_27726_e2,_2839_q);
		std::tie(_29617_du32,_27726_e2,_29213_du0) = _1d14d25dc_mult64bit_pow10(static_cast<jule::U32>(_27718_mu),_27726_e2,_2839_q);
		std::tie(_28713_dl,_28813_dc,_28913_du) = std::make_tuple(static_cast<jule::U64>(_29417_dl32),static_cast<jule::U64>(_29517_dc32),static_cast<jule::U64>(_29617_du32));
	} else {
		std::tie(_28713_dl,std::ignore,_29013_dl0) = _1d14d25dc_mult128bit_pow10(_27710_ml,_27726_e2,_2839_q);
		std::tie(_28813_dc,std::ignore,_29113_dc0) = _1d14d25dc_mult128bit_pow10(_27714_mc,_27726_e2,_2839_q);
		std::tie(_28913_du,_27726_e2,_29213_du0) = _1d14d25dc_mult128bit_pow10(_27718_mu,_27726_e2,_2839_q);
	}
	if (_27726_e2 >= 0LL) {
		jule::panic(jule::Str("not enough significant bits after mult128bit_pow10", 50));
	}
	if (_2839_q > 55LL) {
		std::tie(_29013_dl0,_29113_dc0,_29213_du0) = std::make_tuple(false,false,false);
	}
	if ((_2839_q < 0LL) && (_2839_q >= -24LL)) {
		if (_1d14d25dc_divisible_by_pow5(_27710_ml,static_cast<jule::Int>((-(_2839_q))))) {
			_29013_dl0=true;
		}
		if (_1d14d25dc_divisible_by_pow5(_27714_mc,static_cast<jule::Int>((-(_2839_q))))) {
			_29113_dc0=true;
		}
		if (_1d14d25dc_divisible_by_pow5(_27718_mu,static_cast<jule::Int>((-(_2839_q))))) {
			_29213_du0=true;
		}
	}
	jule::Uint _3299_extra = static_cast<jule::Uint>((-(_27726_e2)));
	jule::U64 _3309_extra_mask = static_cast<jule::U64>((1LL << _3299_extra) - 1LL);
	jule::U64 _33213_fracl = 0LLU;
	std::tie(_28713_dl,_33213_fracl) = std::make_tuple(static_cast<jule::U64>(_28713_dl >> _3299_extra),static_cast<jule::U64>(_28713_dl & _3309_extra_mask));
	jule::U64 _33413_fracc = 0LLU;
	std::tie(_28813_dc,_33413_fracc) = std::make_tuple(static_cast<jule::U64>(_28813_dc >> _3299_extra),static_cast<jule::U64>(_28813_dc & _3309_extra_mask));
	jule::U64 _33613_fracu = 0LLU;
	std::tie(_28913_du,_33613_fracu) = std::make_tuple(static_cast<jule::U64>(_28913_du >> _3299_extra),static_cast<jule::U64>(_28913_du & _3309_extra_mask));
	jule::Bool _34213_uok = (!(_29213_du0)) || (_33613_fracu > 0LL);
	if (_29213_du0 && (_33613_fracu == 0LL)) {
		_34213_uok=(_26548_mant & 1LL) == 0LL;
	}
	if ((!(_34213_uok))) {
		(_28913_du)--;
	}
	jule::Bool _35113_cup = false;
	if (_29113_dc0) {
		_35113_cup=(_33413_fracc > (1LL << (_3299_extra - 1LL))) || ((_33413_fracc == (1LL << (_3299_extra - 1LL))) && ((_28813_dc & 1LL) == 1LL));
	} else {
		_35113_cup=(_33413_fracc >> (_3299_extra - 1LL)) == 1LL;
	}
	jule::Bool _3679_lok = (_29013_dl0 && (_33213_fracl == 0LL)) && ((_26548_mant & 1LL) == 0LL);
	if ((!(_3679_lok))) {
		(_28713_dl)++;
	}
	jule::Bool _3729_c0 = _29113_dc0 && (_33413_fracc == 0LL);
	_1d14d25dc_ryu_digits(_26527_d,_28713_dl,_28813_dc,_28913_du,_3729_c0,_35113_cup);
	_26527_d._field_dp-=_2839_q;
}



inline jule::Int _1d14d25dc_mul_by_log2_log10(jule::Int _38322_x) {
	return static_cast<jule::Int>((_38322_x * 78913LL) >> 18LL);
}



inline jule::Int _1d14d25dc_mul_by_log10_log2(jule::Int _39322_x) {
	return static_cast<jule::Int>((_39322_x * 108853LL) >> 15LL);
}



inline std::tuple<jule::U64,jule::U64,jule::U64,jule::Int> _1d14d25dc_compute_bounds(jule::U64 _40119_mant,jule::Int _40130_exp,_1d061d5e7_FloatInfo& _40218_flt) {
	jule::U64 _40236_lower = jule::U64();
	jule::U64 _40248_central = jule::U64();
	jule::U64 _40262_upper = jule::U64();
	jule::Int _40274_e2 = jule::Int();
	if ((_40119_mant != (1LL << _40218_flt._field_mantbits)) || (_40130_exp == ((_40218_flt._field_bias + 1LL) - static_cast<jule::Int>(_40218_flt._field_mantbits)))) {
		std::tie(_40236_lower,_40248_central,_40262_upper) = std::make_tuple(static_cast<jule::U64>((2LL * _40119_mant) - 1LL),static_cast<jule::U64>(2LL * _40119_mant),static_cast<jule::U64>((2LL * _40119_mant) + 1LL));
		_40274_e2=static_cast<jule::Int>(_40130_exp - 1LL);
	} else {
		std::tie(_40236_lower,_40248_central,_40262_upper) = std::make_tuple(static_cast<jule::U64>((4LL * _40119_mant) - 1LL),static_cast<jule::U64>(4LL * _40119_mant),static_cast<jule::U64>((4LL * _40119_mant) + 2LL));
		_40274_e2=static_cast<jule::Int>(_40130_exp - 2LL);
	}
	return std::make_tuple(_40236_lower,_40248_central,_40262_upper,_40274_e2);
}



inline void _1d14d25dc_ryu_digits(_1d061d5e7_DecimalSlice& _41520_d,jule::U64 _41537_lower,jule::U64 _41549_central,jule::U64 _41563_upper,jule::Bool _41579_c0,jule::Bool _41593_cup) {
	jule::U32 _41614_lhi;
	jule::U32 _41619_llo;
	std::tie(_41614_lhi,_41619_llo) = _1d14d25dc_divmod1e9(_41537_lower);
	jule::U32 _41710_chi;
	jule::U32 _41715_clo;
	std::tie(_41710_chi,_41715_clo) = _1d14d25dc_divmod1e9(_41549_central);
	jule::U32 _41810_uhi;
	jule::U32 _41815_ulo;
	std::tie(_41810_uhi,_41815_ulo) = _1d14d25dc_divmod1e9(_41563_upper);
	if (_41810_uhi == 0LL) {
		_1d14d25dc_ryu_digits32(_41520_d,_41619_llo,_41715_clo,_41815_ulo,_41579_c0,_41593_cup,8LL);
	} else if (_41614_lhi < _41810_uhi) {
		if (_41619_llo != 0LL) {
			(_41614_lhi)++;
		}
		_41579_c0=_41579_c0 && (_41715_clo == 0LL);
		_41593_cup=(_41715_clo > 500000000LL) || ((_41715_clo == 500000000LL) && _41593_cup);
		_1d14d25dc_ryu_digits32(_41520_d,_41614_lhi,_41710_chi,_41810_uhi,_41579_c0,_41593_cup,8LL);
		_41520_d._field_dp+=9LL;
	} else {
		_41520_d._field_nd=0LL;
		jule::Uint _43417_n = static_cast<jule::Uint>(9LLU);
		jule::U32 _43517_v = _41710_chi;
		_iter_begin_4698074048:;
		if (!(_43517_v > 0LL)) { goto _iter_end_4698074048; }
		{
			jule::U32 _43718_v1 = jule::div(_43517_v,10LL);
			jule::U32 _43722_v2 = jule::mod(_43517_v,10LL);
			std::tie(_43718_v1,_43722_v2) = std::make_tuple(jule::div(_43517_v,10LL),jule::mod(_43517_v,10LL));
			_43517_v=_43718_v1;
			(_43417_n)--;
			_41520_d._field_d[static_cast<jule::Int>(_43417_n)]=static_cast<jule::U8>(_43722_v2 + '0');
		}
		_iter_next_4698074048:;
		goto _iter_begin_4698074048;
		_iter_end_4698074048:;
		_41520_d._field_d=_41520_d._field_d.slice(static_cast<jule::Int>(_43417_n));
		_41520_d._field_nd=static_cast<jule::Int>(9LL - _43417_n);
		_1d14d25dc_ryu_digits32(_41520_d,_41619_llo,_41715_clo,_41815_ulo,_41579_c0,_41593_cup,static_cast<jule::Int>(_41520_d._field_nd + 8LL));
	}
	_iter_begin_4698076256:;
	if (!((_41520_d._field_nd > 0LL) && (_41520_d._field_d[static_cast<jule::Int>(_41520_d._field_nd - 1LL)] == '0'))) { goto _iter_end_4698076256; }
	{
		(_41520_d._field_nd)--;
	}
	_iter_next_4698076256:;
	goto _iter_begin_4698076256;
	_iter_end_4698076256:;
	_iter_begin_4698073760:;
	if (!((_41520_d._field_nd > 0LL) && (_41520_d._field_d[0LL] == '0'))) { goto _iter_end_4698073760; }
	{
		(_41520_d._field_nd)--;
		(_41520_d._field_dp)--;
		_41520_d._field_d=_41520_d._field_d.slice(1LL);
	}
	_iter_next_4698073760:;
	goto _iter_begin_4698073760;
	_iter_end_4698073760:;
}



inline void _1d14d25dc_ryu_digits32(_1d061d5e7_DecimalSlice& _46022_d,jule::U32 _46043_lower,jule::U32 _46059_central,jule::U32 _46121_upper,jule::Bool _46137_c0,jule::Bool _46151_cup,jule::Int _46166_endindex) {
	if (_46121_upper == 0LL) {
		_46022_d._field_dp=static_cast<jule::Int>(_46166_endindex + 1LL);
		return;
	}
	jule::Int _46613_trimmed = 0LL;
	jule::Int _46913_c_next_digit = 0LL;
	_iter_begin_4698095504:;
	if (!(_46121_upper > 0LL)) { goto _iter_end_4698095504; }
	{
		jule::U32 _47613_l = jule::div(_46043_lower + 9LL,10LL);
		jule::U32 _47718_c = jule::div(_46059_central,10LL);
		jule::U32 _47725_cdigit = jule::mod(_46059_central,10LL);
		std::tie(_47718_c,_47725_cdigit) = std::make_tuple(jule::div(_46059_central,10LL),jule::mod(_46059_central,10LL));
		jule::U32 _47813_u = jule::div(_46121_upper,10LL);
		if (_47613_l > _47813_u) {
			goto _iter_end_4698095504;
		}
		if ((_47613_l == (_47718_c + 1LL)) && (_47718_c < _47813_u)) {
			(_47718_c)++;
			_47725_cdigit=0LL;
			_46151_cup=false;
		}
		(_46613_trimmed)++;
		_46137_c0=_46137_c0 && (_46913_c_next_digit == 0LL);
		_46913_c_next_digit=static_cast<jule::Int>(_47725_cdigit);
		std::tie(_46043_lower,_46059_central,_46121_upper) = std::make_tuple(_47613_l,_47718_c,_47813_u);
	}
	_iter_next_4698095504:;
	goto _iter_begin_4698095504;
	_iter_end_4698095504:;
	if (_46613_trimmed > 0LL) {
		_46151_cup=((_46913_c_next_digit > 5LL) || ((_46913_c_next_digit == 5LL) && (!(_46137_c0)))) || (((_46913_c_next_digit == 5LL) && _46137_c0) && ((_46059_central & 1LL) == 1LL));
	}
	if ((_46059_central < _46121_upper) && _46151_cup) {
		(_46059_central)++;
	}
	_46166_endindex-=_46613_trimmed;
	jule::U32 _51713_v = _46059_central;
	jule::Int _51813_n = _46166_endindex;
	_iter_begin_4698099488:;
	if (!(_51813_n > _46022_d._field_nd)) { goto _iter_end_4698099488; }
	{
		jule::U32 _52014_v1 = jule::div(_51713_v,100LL);
		jule::U32 _52018_v2 = jule::mod(_51713_v,100LL);
		std::tie(_52014_v1,_52018_v2) = std::make_tuple(jule::div(_51713_v,100LL),jule::mod(_51713_v,100LL));
		_46022_d._field_d[static_cast<jule::Int>(_51813_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _52018_v2) + 1LL)]);
		_46022_d._field_d[static_cast<jule::Int>(_51813_n - 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _52018_v2) + 0LL)]);
		_51813_n-=2LL;
		_51713_v=_52014_v1;
	}
	_iter_next_4698099488:;
	goto _iter_begin_4698099488;
	_iter_end_4698099488:;
	if (_51813_n == _46022_d._field_nd) {
		_46022_d._field_d[static_cast<jule::Int>(_51813_n)]=static_cast<jule::U8>(_51713_v + '0');
	}
	_46022_d._field_nd=static_cast<jule::Int>(_46166_endindex + 1LL);
	_46022_d._field_dp=static_cast<jule::Int>(_46022_d._field_nd + _46613_trimmed);
}



inline std::tuple<jule::U32,jule::Int,jule::Bool> _1d14d25dc_mult64bit_pow10(jule::U32 _54220_m,jule::Int _54232_e2,jule::Int _54241_q) {
	jule::U32 _54251_resM = jule::U32();
	jule::Int _54262_resE = jule::Int();
	jule::Bool _54273_exact = jule::Bool();
	if (_54241_q == 0LL) {
		_54251_resM = static_cast<jule::U32>(_54220_m << 6LL);
		_54262_resE = static_cast<jule::Int>(_54232_e2 - 6LL);
		_54273_exact = true;
		return std::make_tuple(_54251_resM,_54262_resE,_54273_exact);
	}
	if ((_54241_q < -348LL) || (347LL < _54241_q)) {
		jule::panic(jule::Str("mult64bit_pow10: power of 10 is out of range", 44));
	}
	jule::U64 _55113_pow = _1d05ec7a2_DETAILED_POWS_OF_TEN[static_cast<jule::Int>(_54241_q - -348LL)][1LL];
	if (_54241_q < 0LL) {
		_55113_pow+=1LL;
	}
	jule::U64 _55610_hi;
	jule::U64 _55614_lo;
	std::tie(_55610_hi,_55614_lo) = _1d2038890_mul64(static_cast<jule::U64>(_54220_m),_55113_pow);
	_54232_e2+=static_cast<jule::Int>((_1d14d25dc_mul_by_log10_log2(_54241_q) - 63LL) + 57LL);
	_54251_resM = static_cast<jule::U32>((_55610_hi << 7LL) | (_55614_lo >> 57LL));
	_54262_resE = _54232_e2;
	_54273_exact = (_55614_lo << 7LL) == 0LL;
	return std::make_tuple(_54251_resM,_54262_resE,_54273_exact);
}



inline std::tuple<jule::U64,jule::Int,jule::Bool> _1d14d25dc_mult128bit_pow10(jule::U64 _57021_m,jule::Int _57033_e2,jule::Int _57042_q) {
	jule::U64 _57052_resM = jule::U64();
	jule::Int _57063_resE = jule::Int();
	jule::Bool _57074_exact = jule::Bool();
	if (_57042_q == 0LL) {
		_57052_resM = static_cast<jule::U64>(_57021_m << 8LL);
		_57063_resE = static_cast<jule::Int>(_57033_e2 - 8LL);
		_57074_exact = true;
		return std::make_tuple(_57052_resM,_57063_resE,_57074_exact);
	}
	if ((_57042_q < -348LL) || (347LL < _57042_q)) {
		jule::panic(jule::Str("mult128bit_pow10: power of 10 is out of range", 45));
	}
	jule::Array<jule::U64,2> _57913_pow = _1d05ec7a2_DETAILED_POWS_OF_TEN[static_cast<jule::Int>(_57042_q - -348LL)];
	if (_57042_q < 0LL) {
		_57913_pow[0LL]+=1LL;
	}
	_57033_e2+=static_cast<jule::Int>((_1d14d25dc_mul_by_log10_log2(_57042_q) - 127LL) + 119LL);
	jule::U64 _58710_l1;
	jule::U64 _58714_l0;
	std::tie(_58710_l1,_58714_l0) = _1d2038890_mul64(_57021_m,_57913_pow[0LL]);
	jule::U64 _58814_h1;
	jule::U64 _58818_h0;
	std::tie(_58814_h1,_58818_h0) = _1d2038890_mul64(_57021_m,_57913_pow[1LL]);
	jule::U64 _58910_mid;
	jule::U64 _58915_carry;
	std::tie(_58910_mid,_58915_carry) = _1d2038890_add64(_58710_l1,_58818_h0,0LLU);
	_58814_h1+=_58915_carry;
	_57052_resM = static_cast<jule::U64>((_58814_h1 << 9LL) | (_58910_mid >> 55LL));
	_57063_resE = _57033_e2;
	_57074_exact = ((_58910_mid << 9LL) == 0LL) && (_58714_l0 == 0LL);
	return std::make_tuple(_57052_resM,_57063_resE,_57074_exact);
}



inline jule::Bool _1d14d25dc_divisible_by_pow5(jule::U64 _59426_m,jule::Int _59434_k) {
	if (_59426_m == 0LL) {
		return true;
	}
	jule::Int _59813_i = 0LL;
	_iter_begin_4698168992:;
	if (!(_59813_i < _59434_k)) { goto _iter_end_4698168992; }
	{
		if (jule::mod(_59426_m,5LL) != 0LL) {
			return false;
		}
		_59426_m = jule::div(_59426_m,5LL);
	}
	_iter_next_4698168992:;
	(_59813_i)++;
	goto _iter_begin_4698168992;
	_iter_end_4698168992:;
	return true;
}



inline std::tuple<jule::U32,jule::U32> _1d14d25dc_divmod1e9(jule::U64 _61014_x) {
	if (true) {
		return std::make_tuple(static_cast<jule::U32>(jule::div(_61014_x,1000000000LL)),static_cast<jule::U32>(jule::mod(_61014_x,1000000000LL)));
	}
	jule::U64 _61510_hi;
	std::tie(_61510_hi,std::ignore) = _1d2038890_mul64(static_cast<jule::U64>(_61014_x >> 1LL),9903520314283042200LLU);
	jule::U64 _6169_q = _61510_hi >> 28LL;
	return std::make_tuple(static_cast<jule::U32>(_6169_q),static_cast<jule::U32>(_61014_x - (_6169_q * 1000000000LL)));
}



inline jule::Int _1d159c685_digit_zero(jule::Slice<jule::U8> _26519_dst) {
	{
		auto _range_expr = _26519_dst;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1d159c685_i = 0;
			_iter_begin_4698180592:;
			{
				_26519_dst[static_cast<jule::Int>(_1d159c685_i)]='0';
			}
			_iter_next_4698180592:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1d159c685_i; goto _iter_begin_4698180592; }
			_iter_end_4698180592:;
		}
	}
	return static_cast<jule::I64>(_26519_dst.len());
}



inline void _1d159c685_trim(_1d159c685_Decimal& _27514_a) {
	_iter_begin_4698181792:;
	if (!((_27514_a._field_nd > 0LL) && (_27514_a._field_d[static_cast<jule::Int>(_27514_a._field_nd - 1LL)] == '0'))) { goto _iter_end_4698181792; }
	{
		(_27514_a._field_nd)--;
	}
	_iter_next_4698181792:;
	goto _iter_begin_4698181792;
	_iter_end_4698181792:;
	if (_27514_a._field_nd == 0LL) {
		_27514_a._field_dp=0LL;
	}
}



inline void _1d159c685_right_shift(_1d159c685_Decimal& _28521_a,jule::Uint _28533_k) {
	jule::Int _28613_r = 0LL;
	jule::Int _28713_w = 0LL;
	jule::Uint _29013_n = 0LLU;
	_iter_begin_4698190560:;
	if (!((_29013_n >> _28533_k) == 0LL)) { goto _iter_end_4698190560; }
	{
		if (_28613_r >= _28521_a._field_nd) {
			if (_29013_n == 0LL) {
				_28521_a._field_nd=0LL;
				return;
			}
			_iter_begin_4698196608:;
			if (!((_29013_n >> _28533_k) == 0LL)) { goto _iter_end_4698196608; }
			{
				_29013_n=static_cast<jule::Uint>(_29013_n * 10LL);
				(_28613_r)++;
			}
			_iter_next_4698196608:;
			goto _iter_begin_4698196608;
			_iter_end_4698196608:;
			goto _iter_end_4698190560;
		}
		jule::Uint _30413_c = static_cast<jule::Uint>(_28521_a._field_d[static_cast<jule::Int>(_28613_r)]);
		_29013_n=static_cast<jule::Uint>(((_29013_n * 10LL) + _30413_c) - '0');
	}
	_iter_next_4698190560:;
	(_28613_r)++;
	goto _iter_begin_4698190560;
	_iter_end_4698190560:;
	_28521_a._field_dp-=static_cast<jule::Int>(_28613_r - 1LL);
	jule::Uint _3099_mask = static_cast<jule::Uint>(static_cast<jule::Uint>(1LL << _28533_k) - 1LL);
	_iter_begin_4698203344:;
	if (!(_28613_r < _28521_a._field_nd)) { goto _iter_end_4698203344; }
	{
		jule::Uint _31313_c = static_cast<jule::Uint>(_28521_a._field_d[static_cast<jule::Int>(_28613_r)]);
		jule::Uint _31413_dig = _29013_n >> _28533_k;
		_29013_n&=_3099_mask;
		_28521_a._field_d[static_cast<jule::Int>(_28713_w)]=static_cast<jule::U8>(_31413_dig + '0');
		(_28713_w)++;
		_29013_n=static_cast<jule::Uint>(((_29013_n * 10LL) + _31313_c) - '0');
	}
	_iter_next_4698203344:;
	(_28613_r)++;
	goto _iter_begin_4698203344;
	_iter_end_4698203344:;
	_iter_begin_4698210272:;
	if (!(_29013_n > 0LL)) { goto _iter_end_4698210272; }
	{
		jule::Uint _32313_dig = _29013_n >> _28533_k;
		_29013_n&=_3099_mask;
		if (_28713_w < 800LL) {
			_28521_a._field_d[static_cast<jule::Int>(_28713_w)]=static_cast<jule::U8>(_32313_dig + '0');
			(_28713_w)++;
		} else if (_32313_dig > 0LL) {
			_28521_a._field_trunc=true;
		}
		_29013_n=static_cast<jule::Uint>(_29013_n * 10LL);
	}
	_iter_next_4698210272:;
	goto _iter_begin_4698210272;
	_iter_end_4698210272:;
	_28521_a._field_nd=_28713_w;
	_1d159c685_trim(_28521_a);
}



inline jule::Bool _1d159c685_prefix_is_less_than(jule::Slice<jule::U8> _33924_b,jule::Str _33935_s) {
	jule::Int _34013_i = 0LL;
	_iter_begin_4698219152:;
	if (!(_34013_i < _33935_s.len())) { goto _iter_end_4698219152; }
	{
		if (_34013_i >= _33924_b.len()) {
			return true;
		}
		if (_33924_b[static_cast<jule::Int>(_34013_i)] != _33935_s[static_cast<jule::Int>(_34013_i)]) {
			return _33924_b[static_cast<jule::Int>(_34013_i)] < _33935_s[static_cast<jule::Int>(_34013_i)];
		}
	}
	_iter_next_4698219152:;
	(_34013_i)++;
	goto _iter_begin_4698219152;
	_iter_end_4698219152:;
	return false;
}



inline void _1d159c685_left_shift(_1d159c685_Decimal& _35320_a,jule::Uint _35332_k) {
	jule::Int _35413_delta = _1d159c685_LEFTCHEATS[static_cast<jule::Int>(_35332_k)]._field_delta;
	if (_1d159c685_prefix_is_less_than(_35320_a._field_d.slice(0LL,static_cast<jule::Int>(_35320_a._field_nd)),_1d159c685_LEFTCHEATS[static_cast<jule::Int>(_35332_k)]._field_cutoff)) {
		(_35413_delta)--;
	}
	jule::Int _35913_r = _35320_a._field_nd;
	jule::Int _36013_w = _35320_a._field_nd + _35413_delta;
	jule::Uint _36313_n = 0LLU;
	(_35913_r)--;
	_iter_begin_4698236384:;
	if (!(_35913_r >= 0LL)) { goto _iter_end_4698236384; }
	{
		_36313_n+=static_cast<jule::Uint>((static_cast<jule::Uint>(_35320_a._field_d[static_cast<jule::Int>(_35913_r)]) - '0') << _35332_k);
		jule::Uint _36713_quo = jule::div(_36313_n,10LL);
		jule::Uint _36813_rem = _36313_n - (10LL * _36713_quo);
		(_36013_w)--;
		if (_36013_w < 800LL) {
			_35320_a._field_d[static_cast<jule::Int>(_36013_w)]=static_cast<jule::U8>(_36813_rem + '0');
		} else if (_36813_rem != 0LL) {
			_35320_a._field_trunc=true;
		}
		_36313_n=_36713_quo;
	}
	_iter_next_4698236384:;
	(_35913_r)--;
	goto _iter_begin_4698236384;
	_iter_end_4698236384:;
	_iter_begin_4698246112:;
	if (!(_36313_n > 0LL)) { goto _iter_end_4698246112; }
	{
		jule::Uint _38013_quo = jule::div(_36313_n,10LL);
		jule::Uint _38113_rem = _36313_n - (10LL * _38013_quo);
		(_36013_w)--;
		if (_36013_w < 800LL) {
			_35320_a._field_d[static_cast<jule::Int>(_36013_w)]=static_cast<jule::U8>(_38113_rem + '0');
		} else if (_38113_rem != 0LL) {
			_35320_a._field_trunc=true;
		}
		_36313_n=_38013_quo;
	}
	_iter_next_4698246112:;
	goto _iter_begin_4698246112;
	_iter_end_4698246112:;
	_35320_a._field_nd+=_35413_delta;
	if (_35320_a._field_nd >= 800LL) {
		_35320_a._field_nd=800LL;
	}
	_35320_a._field_dp+=_35413_delta;
	_1d159c685_trim(_35320_a);
}



inline jule::Bool _1d159c685_should_round_up(_1d159c685_Decimal& _40021_a,jule::Int _40033_nd) {
	if ((_40033_nd < 0LL) || (_40033_nd >= _40021_a._field_nd)) {
		return false;
	}
	if ((_40021_a._field_d[static_cast<jule::Int>(_40033_nd)] == '5') && ((_40033_nd + 1LL) == _40021_a._field_nd)) {
		if (_40021_a._field_trunc) {
			return true;
		}
		return (_40033_nd > 0LL) && (jule::mod(_40021_a._field_d[static_cast<jule::Int>(_40033_nd - 1LL)] - '0',2LL) != 0LL);
	}
	return _40021_a._field_d[static_cast<jule::Int>(_40033_nd)] >= '5';
}



inline jule::Str _1d17893cc_fmt_uint(jule::U64 _6217_i,jule::Int _6225_base) {
	if ((true && (_6217_i < 100LL)) && (_6225_base == 10LL)) {
		return _1d17893cc_small(static_cast<jule::Int>(_6217_i));
	}
	jule::Str _6613_s;
	std::tie(std::ignore,_6613_s) = _1d17893cc_fmt_bits(nullptr,_6217_i,_6225_base,false,false);
	return _6613_s;
}



inline jule::Str _1d17893cc_fmt_int(jule::I64 _7316_i,jule::Int _7324_base) {
	if (((true && (0LL <= _7316_i)) && (_7316_i < 100LL)) && (_7324_base == 10LL)) {
		return _1d17893cc_small(static_cast<jule::Int>(_7316_i));
	}
	jule::Str _7713_s;
	std::tie(std::ignore,_7713_s) = _1d17893cc_fmt_bits(nullptr,static_cast<jule::U64>(_7316_i),_7324_base,_7316_i < 0LL,false);
	return _7713_s;
}



inline jule::Str _1d17893cc_itoa(jule::Int _8213_i) {
	return _1d17893cc_fmt_int(static_cast<jule::I64>(_8213_i),10LL);
}



inline jule::Str _1d17893cc_small(jule::Int _8510_i) {
	if (_8510_i < 10LL) {
		return jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).slice(static_cast<jule::Int>(_8510_i),static_cast<jule::Int>(_8510_i + 1LL));
	}
	return jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200).slice(static_cast<jule::Int>(_8510_i * 2LL),static_cast<jule::Int>((_8510_i * 2LL) + 2LL));
}



inline jule::Bool _1d17893cc_is_power_of_two(jule::Int _9220_x) {
	return (_9220_x & (_9220_x - 1LL)) == 0LL;
}



inline std::tuple<jule::Slice<jule::U8>,jule::Str> _1d17893cc_fmt_bits(jule::Slice<jule::U8> _9917_dst,jule::U64 _9934_u,jule::Int _9942_base,jule::Bool _9953_neg,jule::Bool _9964_append_) {
	jule::Slice<jule::U8> _9981_d = jule::Slice<jule::U8>();
	jule::Str _9992_s = jule::Str();
	if ((_9942_base < 2LL) || (_9942_base > jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).len())) {
		jule::panic(jule::Str("std::conv: illegal base", 23));
	}
	jule::Array<jule::U8,65> _10513_a = jule::Array<jule::U8,65>({});
	jule::Int _10613_i = 65LL;
	if (_9953_neg) {
		_9934_u=static_cast<jule::U64>((-(_9934_u)));
	}
	if (_9942_base == 10LL) {
		if (false) {
			_iter_begin_4698295632:;
			if (!(_9934_u >= 1000000000LL)) { goto _iter_end_4698295632; }
			{
				jule::U64 _12521_q = jule::div(_9934_u,1000000000LL);
				jule::Uint _12625_us = static_cast<jule::Uint>(_9934_u - (_12521_q * 1000000000LL));
				jule::Int _12725_j = 4LL;
				_iter_begin_4698297696:;
				if (!(_12725_j > 0LL)) { goto _iter_end_4698297696; }
				{
					jule::Uint _12925_is = jule::mod(_12625_us,100LL) * 2LL;
					_12625_us = jule::div(_12625_us,100LL);
					_10613_i-=2LL;
					_10513_a[static_cast<jule::Int>(_10613_i + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_12925_is + 1LL)]);
					_10513_a[static_cast<jule::Int>(_10613_i + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_12925_is + 0LL)]);
				}
				_iter_next_4698297696:;
				(_12725_j)--;
				goto _iter_begin_4698297696;
				_iter_end_4698297696:;
				(_10613_i)--;
				_10513_a[static_cast<jule::Int>(_10613_i)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((_12625_us * 2LL) + 1LL)]);
				_9934_u=_12521_q;
			}
			_iter_next_4698295632:;
			goto _iter_begin_4698295632;
			_iter_end_4698295632:;
		}
		jule::Uint _14717_us = static_cast<jule::Uint>(_9934_u);
		_iter_begin_4698300224:;
		if (!(_14717_us >= 100LL)) { goto _iter_end_4698300224; }
		{
			jule::Uint _14917_is = jule::mod(_14717_us,100LL) * 2LL;
			_14717_us = jule::div(_14717_us,100LL);
			_10613_i-=2LL;
			_10513_a[static_cast<jule::Int>(_10613_i + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_14917_is + 1LL)]);
			_10513_a[static_cast<jule::Int>(_10613_i + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_14917_is + 0LL)]);
		}
		_iter_next_4698300224:;
		goto _iter_begin_4698300224;
		_iter_end_4698300224:;
		jule::Uint _15713_is = _14717_us * 2LL;
		(_10613_i)--;
		_10513_a[static_cast<jule::Int>(_10613_i)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_15713_is + 1LL)]);
		if (_14717_us >= 10LL) {
			(_10613_i)--;
			_10513_a[static_cast<jule::Int>(_10613_i)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_15713_is)]);
		}
	} else if (_1d17893cc_is_power_of_two(_9942_base)) {
		jule::Uint _17213_shift = static_cast<jule::Uint>(_1d2038890_trailing_zeros(static_cast<jule::Uint>(_9942_base))) & 7LL;
		jule::U64 _17313_b = static_cast<jule::U64>(_9942_base);
		jule::Uint _17413_m = static_cast<jule::Uint>(_9942_base) - 1LL;
		_iter_begin_4698325712:;
		if (!(_9934_u >= _17313_b)) { goto _iter_end_4698325712; }
		{
			(_10613_i)--;
			_10513_a[static_cast<jule::Int>(_10613_i)]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::Int>(static_cast<jule::Uint>(_9934_u) & _17413_m)]);
			_9934_u>>=_17213_shift;
		}
		_iter_next_4698325712:;
		goto _iter_begin_4698325712;
		_iter_end_4698325712:;
		(_10613_i)--;
		_10513_a[static_cast<jule::Int>(_10613_i)]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::Int>(static_cast<jule::Uint>(_9934_u))]);
	} else {
		jule::U64 _18513_b = static_cast<jule::U64>(_9942_base);
		_iter_begin_4698341408:;
		if (!(_9934_u >= _18513_b)) { goto _iter_end_4698341408; }
		{
			(_10613_i)--;
			jule::U64 _19117_q = jule::div(_9934_u,_18513_b);
			_10513_a[static_cast<jule::Int>(_10613_i)]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::Int>(static_cast<jule::Uint>(_9934_u - (_19117_q * _18513_b)))]);
			_9934_u=_19117_q;
		}
		_iter_next_4698341408:;
		goto _iter_begin_4698341408;
		_iter_end_4698341408:;
		(_10613_i)--;
		_10513_a[static_cast<jule::Int>(_10613_i)]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::Int>(static_cast<jule::Uint>(_9934_u))]);
	}
	if (_9953_neg) {
		(_10613_i)--;
		_10513_a[static_cast<jule::Int>(_10613_i)]='-';
	}
	if (_9964_append_) {
		_9981_d=jule::append(_9917_dst,_10513_a.slice(static_cast<jule::Int>(_10613_i)));
		return std::make_tuple(_9981_d,_9992_s);
	}
	_9992_s=static_cast<jule::Str>(_10513_a.slice(static_cast<jule::Int>(_10613_i)));
	return std::make_tuple(_9981_d,_9992_s);
}



inline void _1d1d36270_push_opt_level(jule::Int _3223_level) {
	{
		auto _match_expr{ _3223_level };
		if (!((0LLU) == _match_expr)) { goto _case_end_4698517648; }
		_case_begin_4698517648:;
		{
			_1d1d36270_OPTIMIZATIONS=nullptr;
		}
		goto _match_end_4698516128;
		_case_end_4698517648:;
		if (!((1LLU) == _match_expr)) { goto _case_end_4698517760; }
		_case_begin_4698517760:;
		{
			_1d1d36270_OPTIMIZATIONS=jule::append(_1d1d36270_OPTIMIZATIONS,jule::Slice<jule::Str>({jule::Str("--opt-copy", 10),jule::Str("--opt-deadcode", 14),jule::Str("--opt-append", 12),jule::Str("--opt-math", 10),jule::Str("--opt-access", 12)}));
		}
		goto _match_end_4698516128;
		_case_end_4698517760:;
		_case_begin_4698516608:;
		{
			return;
		}
		goto _match_end_4698516128;
		_case_end_4698516608:;
		_match_end_4698516128:;
	}
}



inline jule::Bool _1d1d36270_is_opt_enabled(jule::Str _5123_opt) {
	{
		auto _range_expr = _1d1d36270_OPTIMIZATIONS;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _1d1d36270_oopt = *_range_begin;
			_iter_begin_4698517200:;
			{
				if (_5123_opt == _1d1d36270_oopt) {
					return true;
				}
			}
			_iter_next_4698517200:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d1d36270_oopt = *_range_begin; goto _iter_begin_4698517200; }
			_iter_end_4698517200:;
		}
	}
	return false;
}



inline jule::Int _1d1da0a6a_get_last_fs_error(void) {
	jule::Int _739_err = _1d0707505_get_last_errno();
	{
		auto _match_expr{ _739_err };
		if (!((13LL) == _match_expr)) { goto _case_end_4698562688; }
		_case_begin_4698562688:;
		{
			return 1LLU;
		}
		goto _match_end_4698560784;
		_case_end_4698562688:;
		if (!((5LL) == _match_expr)) { goto _case_end_4698562288; }
		_case_begin_4698562288:;
		{
			return 2LLU;
		}
		goto _match_end_4698560784;
		_case_end_4698562288:;
		if (!((62LL) == _match_expr)) { goto _case_end_4698562400; }
		_case_begin_4698562400:;
		{
			return 3LLU;
		}
		goto _match_end_4698560784;
		_case_end_4698562400:;
		if (!((63LL) == _match_expr)) { goto _case_end_4698562512; }
		_case_begin_4698562512:;
		{
			return 4LLU;
		}
		goto _match_end_4698560784;
		_case_end_4698562512:;
		if (!((2LL) == _match_expr)) { goto _case_end_4698561568; }
		_case_begin_4698561568:;
		{
			return 5LLU;
		}
		goto _match_end_4698560784;
		_case_end_4698561568:;
		if (!((20LL) == _match_expr)) { goto _case_end_4698561680; }
		_case_begin_4698561680:;
		{
			return 6LLU;
		}
		goto _match_end_4698560784;
		_case_end_4698561680:;
		if (!((84LL) == _match_expr)) { goto _case_end_4698561792; }
		_case_begin_4698561792:;
		{
			return 7LLU;
		}
		goto _match_end_4698560784;
		_case_end_4698561792:;
		if (!((9LL) == _match_expr)) { goto _case_end_4698562896; }
		_case_begin_4698562896:;
		{
			return 8LLU;
		}
		goto _match_end_4698560784;
		_case_end_4698562896:;
		if (!((24LL) == _match_expr)) { goto _case_end_4698563008; }
		_case_begin_4698563008:;
		{
			return 9LLU;
		}
		goto _match_end_4698560784;
		_case_end_4698563008:;
		if (!((23LL) == _match_expr)) { goto _case_end_4698563120; }
		_case_begin_4698563120:;
		{
			return 10LLU;
		}
		goto _match_end_4698560784;
		_case_end_4698563120:;
		if (!((12LL) == _match_expr)) { goto _case_end_4698563856; }
		_case_begin_4698563856:;
		{
			return 11LLU;
		}
		goto _match_end_4698560784;
		_case_end_4698563856:;
		if (!((17LL) == _match_expr)) { goto _case_end_4698563968; }
		_case_begin_4698563968:;
		{
			return 12LLU;
		}
		goto _match_end_4698560784;
		_case_end_4698563968:;
		if (!((4LL) == _match_expr)) { goto _case_end_4698564080; }
		_case_begin_4698564080:;
		{
			return 13LLU;
		}
		goto _match_end_4698560784;
		_case_end_4698564080:;
		if (!((22LL) == _match_expr)) { goto _case_end_4698564192; }
		_case_begin_4698564192:;
		{
			return 14LLU;
		}
		goto _match_end_4698560784;
		_case_end_4698564192:;
		if (!((21LL) == _match_expr)) { goto _case_end_4698564304; }
		_case_begin_4698564304:;
		{
			return 15LLU;
		}
		goto _match_end_4698560784;
		_case_end_4698564304:;
		if (!((98LL) == _match_expr)) { goto _case_end_4698564416; }
		_case_begin_4698564416:;
		{
			return 16LLU;
		}
		goto _match_end_4698560784;
		_case_end_4698564416:;
		if (!((28LL) == _match_expr)) { goto _case_end_4698564528; }
		_case_begin_4698564528:;
		{
			return 17LLU;
		}
		goto _match_end_4698560784;
		_case_end_4698564528:;
		if (!((6LL) == _match_expr)) { goto _case_end_4698564640; }
		_case_begin_4698564640:;
		{
			return 18LLU;
		}
		goto _match_end_4698560784;
		_case_end_4698564640:;
		if (!((30LL) == _match_expr)) { goto _case_end_4698564752; }
		_case_begin_4698564752:;
		{
			return 19LLU;
		}
		goto _match_end_4698560784;
		_case_end_4698564752:;
		if (!((35LL) == _match_expr)) { goto _case_end_4698564864; }
		_case_begin_4698564864:;
		{
			return 20LLU;
		}
		goto _match_end_4698560784;
		_case_end_4698564864:;
		if (!((26LL) == _match_expr || (16LL) == _match_expr)) { goto _case_end_4698564976; }
		_case_begin_4698564976:;
		{
			return 21LLU;
		}
		goto _match_end_4698560784;
		_case_end_4698564976:;
		if (!((27LL) == _match_expr)) { goto _case_end_4698565088; }
		_case_begin_4698565088:;
		{
			return 22LLU;
		}
		goto _match_end_4698560784;
		_case_end_4698565088:;
		if (!((32LL) == _match_expr)) { goto _case_end_4698565200; }
		_case_begin_4698565200:;
		{
			return 23LLU;
		}
		goto _match_end_4698560784;
		_case_end_4698565200:;
		if (!((34LL) == _match_expr)) { goto _case_end_4698565312; }
		_case_begin_4698565312:;
		{
			return 24LLU;
		}
		goto _match_end_4698560784;
		_case_end_4698565312:;
		if (!((29LL) == _match_expr)) { goto _case_end_4698565440; }
		_case_begin_4698565440:;
		{
			return 25LLU;
		}
		goto _match_end_4698560784;
		_case_end_4698565440:;
		if (!((55LL) == _match_expr)) { goto _case_end_4698565568; }
		_case_begin_4698565568:;
		{
			return 26LLU;
		}
		goto _match_end_4698560784;
		_case_end_4698565568:;
		if (!((94LL) == _match_expr)) { goto _case_end_4698565696; }
		_case_begin_4698565696:;
		{
			return 27LLU;
		}
		goto _match_end_4698560784;
		_case_end_4698565696:;
		if (!((66LL) == _match_expr)) { goto _case_end_4698565824; }
		_case_begin_4698565824:;
		{
			return 28LLU;
		}
		goto _match_end_4698560784;
		_case_end_4698565824:;
		_case_begin_4698561120:;
		{
			return 0LLU;
		}
		goto _match_end_4698560784;
		_case_end_4698561120:;
		_match_end_4698560784:;
	}
}



inline std::tuple<jule::Ref<_1d1ee0946_File>,jule::Int> _1d1da163c_open(jule::Str _6113_path,jule::Int _6124_flag,jule::Int _6137_mode) {
	jule::Int _629_handle = _1d071ec7b_open((&(_6113_path[0LL])),static_cast<jule::Int>(_6124_flag),_6137_mode);
	if (_629_handle == -1LL) {
		return std::make_tuple(_1d1ee0946_File::_static_method_new(0LLU),_1d1da0a6a_get_last_fs_error());
	}
	return std::make_tuple(_1d1ee0946_File::_static_method_new(static_cast<jule::Uintptr>(_629_handle)),0LLU);
}



inline jule::Int _1d1da163c_remove_file(jule::Str _7320_path) {
	if (_1d071ec7b_unlink((&(_7320_path[0LL]))) == 0LL) {
		return 0LLU;
	}
	return _1d1da0a6a_get_last_fs_error();
}



inline std::tuple<jule::Ref<_1d2151920_Status>,jule::Int> _1d1edea66_stat(jule::Str _1113_path) {
	jule::Ref<_1d2151920_Status> _1126_s = jule::Ref<_1d2151920_Status>();
	jule::Int _1138_err = 0LLU;
	struct stat _1213_handle = (struct stat){};
	jule::Int _139_code = _1d071ec7b_stat((&(_1113_path[0LL])),(&(_1213_handle)));
	if (_139_code != -1LL) {
		_1138_err=0LLU;
		_1126_s=jule::new_struct<_1d2151920_Status>(new( std::nothrow ) _1d2151920_Status(static_cast<jule::Uint>(_1213_handle.st_mode),static_cast<jule::Uint>(_1213_handle.st_size)));
	} else {
		_1138_err=_1d1da0a6a_get_last_fs_error();
	}
	return std::make_tuple(_1126_s,_1138_err);
}



inline std::tuple<jule::Slice<jule::U8>,jule::Int> _1d1ee0946_read_file(jule::Str _8518_path) {
	jule::Ref<_1d2151920_Status> _8610_s;
	jule::Int _8617_err;
	std::tie(_8610_s,_8617_err) = _1d1edea66_stat(_8518_path);
	if (_8617_err != 0LLU) {
		return std::make_tuple(nullptr,_8617_err);
	}
	if ((!(_8610_s->_method_is_reg()))) {
		return std::make_tuple(nullptr,15LLU);
	}
	if (_8610_s->_field_size == 0LL) {
		return std::make_tuple(jule::Slice<jule::U8>::alloc(0LL),0LLU);
	}
	jule::Ref<_1d1ee0946_File> _9914_f;
	std::tie(_9914_f,_8617_err) = _1d1da163c_open(_8518_path,0LL,0LL);
	if (_8617_err != 0LLU) {
		return std::make_tuple(nullptr,_8617_err);
	}
	__JULE_DEFER({
		_9914_f->_method_close();
	});
	jule::Slice<jule::U8> _10513_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::Int>(_8610_s->_field_size));
	jule::Int _10610_n;
	std::tie(_10610_n,_8617_err) = _9914_f->_method_read(_10513_buff);
	if (_8617_err != 0LLU) {
		return std::make_tuple(nullptr,_8617_err);
	}
	return std::make_tuple(_10513_buff.slice(0LL,static_cast<jule::Int>(_10610_n)),0LLU);
}



inline std::tuple<jule::Slice<jule::Ref<_1d1e19221_DirEntry>>,jule::Int> _1d2177c10_read_dir(jule::Str _1517_path) {
	jule::Slice<jule::Ref<_1d1e19221_DirEntry>> _1530_dirents = jule::Slice<jule::Ref<_1d1e19221_DirEntry>>();
	jule::Int _1552_err = 0LLU;
	DIR* _1613_dir = _1d071ec7b_opendir((&(_1517_path[0LL])));
	if (_1613_dir == nullptr) {
		_1552_err=_1d1da0a6a_get_last_fs_error();
		return std::make_tuple(_1530_dirents,_1552_err);
	}
	_iter_begin_4698627888:;
	{
		struct dirent* _2213_dirent = _1d071ec7b_readdir(_1613_dir);
		if (_2213_dirent == nullptr) {
			goto _iter_end_4698627888;
		}
		jule::Str _2613_name = _1d07854c8_byte_ptr_to_str(((jule::U8*)(_2213_dirent->d_name)));
		jule::Ref<_1d2151920_Status> _2718_stat;
		jule::Int _2724_serr;
		std::tie(_2718_stat,_2724_serr) = _1d1edea66_stat(_1d0680a33_join(jule::Slice<jule::Str>({_1517_path,_2613_name})));
		if (_2724_serr != 0LLU) {
			_1552_err=_2724_serr;
			_1530_dirents=nullptr;
			goto _iter_end_4698627888;
		}
		_1530_dirents=jule::append(_1530_dirents,jule::Slice<jule::Ref<_1d1e19221_DirEntry>>({jule::new_struct<_1d1e19221_DirEntry>(new( std::nothrow ) _1d1e19221_DirEntry(_2613_name,_2718_stat))}));
	}
	_iter_next_4698627888:;
	goto _iter_begin_4698627888;
	_iter_end_4698627888:;
	_1d071ec7b_closedir(_1613_dir);
	return std::make_tuple(_1530_dirents,_1552_err);
}



inline jule::Int _1d2177c10_create_dir(jule::Str _4519_path) {
	if (_1d071ec7b_mkdir((&(_4519_path[0LL])),448LL) == 0LL) {
		return 0LLU;
	}
	return _1d1da0a6a_get_last_fs_error();
}



inline jule::Int _1d2177c10_remove_dir(jule::Str _5819_path) {
	if (_1d071ec7b_rmdir((&(_5819_path[0LL]))) == 0LL) {
		return 0LLU;
	}
	return _1d1da0a6a_get_last_fs_error();
}



inline jule::Bool _1d2264b43_is_graphic(jule::I32 _5619_r) {
	if (static_cast<jule::U32>(_5619_r) <= 255LL) {
		return (_1d2264c31__PROPERTIES[static_cast<jule::Int>(static_cast<jule::U8>(_5619_r))] & 144LL) != 0LL;
	}
	return _1d2264b43_is_in(_5619_r,_1d2264b43_GRAPHIC_RANGES);
}



inline jule::Bool _1d2264b43_is_in(jule::I32 _6614_r,jule::Slice<jule::Ref<_1d2375913_RangeTable>> _6623_ranges) {
	{
		auto _range_expr = _6623_ranges;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d2375913_RangeTable> _1d2264b43_inside = *_range_begin;
			_iter_begin_4703583760:;
			{
				if (_1d2375913_is(_1d2264b43_inside,_6614_r)) {
					return true;
				}
			}
			_iter_next_4703583760:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d2264b43_inside = *_range_begin; goto _iter_begin_4703583760; }
			_iter_end_4703583760:;
		}
	}
	return false;
}



inline jule::Bool _1d2264b43_is_letter(jule::I32 _7618_r) {
	if (static_cast<jule::U32>(_7618_r) <= 255LL) {
		return (_1d2264c31__PROPERTIES[static_cast<jule::Int>(static_cast<jule::U8>(_7618_r))] & 96LL) != 0LL;
	}
	return _1d2375913_is_excluding_latin(_1d2264c31_LETTER,_7618_r);
}



inline jule::Bool _1d2264b43_is_number(jule::I32 _8418_r) {
	if (static_cast<jule::U32>(_8418_r) <= 255LL) {
		return (_1d2264c31__PROPERTIES[static_cast<jule::Int>(static_cast<jule::U8>(_8418_r))] & 4LL) != 0LL;
	}
	return _1d2375913_is_excluding_latin(_1d2264c31_NUMBER,_8418_r);
}



inline jule::Bool _1d2264b43_is_punct(jule::I32 _9217_r) {
	if (static_cast<jule::U32>(_9217_r) <= 255LL) {
		return (_1d2264c31__PROPERTIES[static_cast<jule::Int>(static_cast<jule::U8>(_9217_r))] & 2LL) != 0LL;
	}
	return _1d2375913_is(_1d2264c31_PUNCT,_9217_r);
}



inline jule::Bool _1d2264b43_is_space(jule::I32 _10717_r) {
	if (static_cast<jule::U32>(_10717_r) <= 255LL) {
		{
			auto _match_expr{ _10717_r };
			if (!(('\t') == _match_expr || ('\n') == _match_expr || ('\v') == _match_expr || ('\f') == _match_expr || ('\r') == _match_expr || (' ') == _match_expr || (133LL) == _match_expr || (160LL) == _match_expr)) { goto _case_end_4703600192; }
			_case_begin_4703600192:;
			{
				return true;
			}
			goto _match_end_4703599408;
			_case_end_4703600192:;
			_match_end_4703599408:;
		}
		return false;
	}
	return _1d2375913_is_excluding_latin(_1d2264c31_WHITE_SPACE,_10717_r);
}



inline jule::Bool _1b8542038_is_digit(jule::I32 _3917_r) {
	if (_3917_r <= 255LL) {
		return ('0' <= _3917_r) && (_3917_r <= '9');
	}
	return _1d2375913_is_excluding_latin(_1d2264c31_DIGIT,_3917_r);
}



inline std::tuple<jule::I32,jule::Bool> _1d2375913___to(jule::Int _1259_case,jule::I32 _12520_r,jule::Slice<_1d2375913_CaseRange> _12529_case_range) {
	jule::I32 _12556_mapped_rune = jule::I32();
	jule::Bool _12575_found_mapping = jule::Bool();
	if ((_1259_case < 0LL) || (3LL <= _1259_case)) {
		_12556_mapped_rune = 65533LL;
		_12575_found_mapping = false;
		return std::make_tuple(_12556_mapped_rune,_12575_found_mapping);
	}
	jule::Int _13113_lo = 0LL;
	jule::I64 _13213_hi = _12529_case_range.len();
	_iter_begin_4703608128:;
	if (!(_13113_lo < _13213_hi)) { goto _iter_end_4703608128; }
	{
		jule::Int _13413_m = _13113_lo + jule::div(_13213_hi - _13113_lo,2LL);
		_1d2375913_CaseRange _13513_cr = _12529_case_range[static_cast<jule::Int>(_13413_m)];
		if ((static_cast<jule::I32>(_13513_cr._field_lo) <= _12520_r) && (_12520_r <= static_cast<jule::I32>(_13513_cr._field_hi))) {
			jule::I32 _13717_delta = _13513_cr._field_delta[static_cast<jule::Int>(_1259_case)];
			if (_13717_delta > 1114111LL) {
				_12556_mapped_rune = static_cast<jule::I32>(static_cast<jule::I32>(_13513_cr._field_lo) + (((_12520_r - static_cast<jule::I32>(_13513_cr._field_lo)) & -2LL) | static_cast<jule::I32>(_1259_case & 1LL)));
				_12575_found_mapping = true;
				return std::make_tuple(_12556_mapped_rune,_12575_found_mapping);
			}
			_12556_mapped_rune = static_cast<jule::I32>(_12520_r + _13717_delta);
			_12575_found_mapping = true;
			return std::make_tuple(_12556_mapped_rune,_12575_found_mapping);
		}
		if (_12520_r < static_cast<jule::I32>(_13513_cr._field_lo)) {
			_13213_hi=_13413_m;
		} else {
			_13113_lo=static_cast<jule::Int>(_13413_m + 1LL);
		}
	}
	_iter_next_4703608128:;
	goto _iter_begin_4703608128;
	_iter_end_4703608128:;
	_12556_mapped_rune = _12520_r;
	_12575_found_mapping = false;
	return std::make_tuple(_12556_mapped_rune,_12575_found_mapping);
}



inline jule::I32 _1d2375913_to(jule::Int _16311_case,jule::I32 _16326_r) {
	std::tie(_16326_r,std::ignore) = _1d2375913___to(_16311_case,_16326_r,_1d2264c31_CASE_RANGES);
	return _16326_r;
}



inline jule::I32 _1d2375913_to_upper(jule::I32 _16921_r) {
	if (_16921_r <= 127LL) {
		if (('a' <= _16921_r) && (_16921_r <= 'z')) {
			_16921_r-=32LL;
		}
		return _16921_r;
	}
	return static_cast<jule::I32>(_1d2375913_to(0LL,_16921_r));
}



inline jule::I32 _1d2375913_to_lower(jule::I32 _18021_r) {
	if (_18021_r <= 127LL) {
		if (('A' <= _18021_r) && (_18021_r <= 'Z')) {
			_18021_r+=32LL;
		}
		return _18021_r;
	}
	return static_cast<jule::I32>(_1d2375913_to(1LL,_18021_r));
}



inline jule::Bool _1d2375913_is16(jule::Slice<_1d2375913_Range16> _1919_ranges,jule::U16 _19128_r) {
	if ((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LL)) {
		{
			auto _range_expr = _1919_ranges;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Int _1d2375913_i = 0;
				_iter_begin_4703639104:;
				{
					_1d2375913_Range16* _19417_range = (&(_1919_ranges[static_cast<jule::Int>(_1d2375913_i)]));
					{
						if (_19128_r < _19417_range->_field_lo) {
							return false;
						}
						if (_19128_r <= _19417_range->_field_hi) {
							return (_19417_range->_field_stride == 1LL) || (jule::mod(_19128_r - _19417_range->_field_lo,_19417_range->_field_stride) == 0LL);
						}
					}
				}
				_iter_next_4703639104:;
				++_range_begin;
				if (_range_begin != _range_end) { ++_1d2375913_i; goto _iter_begin_4703639104; }
				_iter_end_4703639104:;
			}
		}
		return false;
	}
	jule::Int _20813_lo = 0LL;
	jule::I64 _20913_hi = _1919_ranges.len();
	_iter_begin_4703638144:;
	if (!(_20813_lo < _20913_hi)) { goto _iter_end_4703638144; }
	{
		jule::Int _21113_m = _20813_lo + jule::div(_20913_hi - _20813_lo,2LL);
		_1d2375913_Range16* _21213_range = (&(_1919_ranges[static_cast<jule::Int>(_21113_m)]));
		{
			if ((_21213_range->_field_lo <= _19128_r) && (_19128_r <= _21213_range->_field_hi)) {
				return (_21213_range->_field_stride == 1LL) || (jule::mod(_19128_r - _21213_range->_field_lo,_21213_range->_field_stride) == 0LL);
			}
			if (_19128_r < _21213_range->_field_lo) {
				_20913_hi=_21113_m;
			} else {
				_20813_lo=static_cast<jule::Int>(_21113_m + 1LL);
			}
		}
	}
	_iter_next_4703638144:;
	goto _iter_begin_4703638144;
	_iter_end_4703638144:;
	return false;
}



inline jule::Bool _1d2375913_is32(jule::Slice<_1d2375913_Range32> _2289_ranges,jule::U32 _22828_r) {
	if (_2289_ranges.len() <= 18LL) {
		{
			auto _range_expr = _2289_ranges;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Int _1d2375913_i = 0;
				_iter_begin_4703659648:;
				{
					_1d2375913_Range32* _23117_range = (&(_2289_ranges[static_cast<jule::Int>(_1d2375913_i)]));
					{
						if (_22828_r < _23117_range->_field_lo) {
							return false;
						}
						if (_22828_r <= _23117_range->_field_hi) {
							return (_23117_range->_field_stride == 1LL) || (jule::mod(_22828_r - _23117_range->_field_lo,_23117_range->_field_stride) == 0LL);
						}
					}
				}
				_iter_next_4703659648:;
				++_range_begin;
				if (_range_begin != _range_end) { ++_1d2375913_i; goto _iter_begin_4703659648; }
				_iter_end_4703659648:;
			}
		}
		return false;
	}
	jule::Int _24513_lo = 0LL;
	jule::I64 _24613_hi = _2289_ranges.len();
	_iter_begin_4703667264:;
	if (!(_24513_lo < _24613_hi)) { goto _iter_end_4703667264; }
	{
		jule::Int _24813_m = _24513_lo + jule::div(_24613_hi - _24513_lo,2LL);
		_1d2375913_Range32* _24913_range = (&(_2289_ranges[static_cast<jule::Int>(_24813_m)]));
		{
			if ((_24913_range->_field_lo <= _22828_r) && (_22828_r <= _24913_range->_field_hi)) {
				return (_24913_range->_field_stride == 1LL) || (jule::mod(_22828_r - _24913_range->_field_lo,_24913_range->_field_stride) == 0LL);
			}
			if (_22828_r < _24913_range->_field_lo) {
				_24613_hi=_24813_m;
			} else {
				_24513_lo=static_cast<jule::Int>(_24813_m + 1LL);
			}
		}
	}
	_iter_next_4703667264:;
	goto _iter_begin_4703667264;
	_iter_end_4703667264:;
	return false;
}



inline jule::Bool _1d2375913_is(jule::Ref<_1d2375913_RangeTable> _26511_range_tab,jule::I32 _26535_r) {
	jule::Slice<_1d2375913_Range16> &_26610_r16 = _26511_range_tab->_field_r16;
	if ((_26610_r16.len() > 0LL) && (static_cast<jule::U32>(_26535_r) <= static_cast<jule::U32>(_26610_r16[static_cast<jule::Int>(_26610_r16.len() - 1LL)]._field_hi))) {
		return _1d2375913_is16(_26610_r16,static_cast<jule::U16>(_26535_r));
	}
	jule::Slice<_1d2375913_Range32> &_27110_r32 = _26511_range_tab->_field_r32;
	if ((_27110_r32.len() > 0LL) && (_26535_r >= static_cast<jule::I32>(_27110_r32[0LL]._field_lo))) {
		return _1d2375913_is32(_27110_r32,static_cast<jule::U32>(_26535_r));
	}
	return false;
}



inline jule::Bool _1d2375913_is_excluding_latin(jule::Ref<_1d2375913_RangeTable> _27823_range_tab,jule::I32 _27847_r) {
	{
		jule::Slice<_1d2375913_Range16> &_28014_r16 = _27823_range_tab->_field_r16;
		jule::Int _28213_off = _27823_range_tab->_field_latin_offset;
		if ((_28014_r16.len() > _28213_off) && (static_cast<jule::U32>(_27847_r) <= static_cast<jule::U32>(_28014_r16[static_cast<jule::Int>(_28014_r16.len() - 1LL)]._field_hi))) {
			return _1d2375913_is16(_28014_r16.slice(static_cast<jule::Int>(_28213_off)),static_cast<jule::U16>(_27847_r));
		}
	}
	jule::Slice<_1d2375913_Range32> &_28710_r32 = _27823_range_tab->_field_r32;
	if ((_28710_r32.len() > 0LL) && (_27847_r >= static_cast<jule::I32>(_28710_r32[0LL]._field_lo))) {
		return _1d2375913_is32(_28710_r32,static_cast<jule::U32>(_27847_r));
	}
	return false;
}



inline jule::Bool _1d2375913_is_upper(jule::I32 _29517_r) {
	if (static_cast<jule::U32>(_29517_r) <= 255LL) {
		return (_1d2264c31__PROPERTIES[static_cast<jule::Int>(static_cast<jule::U8>(_29517_r))] & 96LL) == 32LL;
	}
	return _1d2375913_is_excluding_latin(_1d2264c31_UPPER,_29517_r);
}



inline jule::Bool _1d2375913_is_lower(jule::I32 _30417_r) {
	if (static_cast<jule::U32>(_30417_r) <= 255LL) {
		return (_1d2264c31__PROPERTIES[static_cast<jule::Int>(static_cast<jule::U8>(_30417_r))] & 96LL) == 64LL;
	}
	return _1d2375913_is_excluding_latin(_1d2264c31_LOWER,_30417_r);
}



inline jule::Bool _1b818a2be_full_rune(jule::Slice<jule::U8> _13718_p) {
	if (_13718_p.len() == 0LL) {
		return false;
	}
	jule::U8 _1419_x = _1b818a2be_FIRST[static_cast<jule::Int>(_13718_p[0LL])];
	if (_13718_p.len() >= static_cast<jule::Int>(_1419_x & 7LL)) {
		return true;
	}
	_1b818a2be_accept_range _1469_accept = _1b818a2be_ACCEPT_RANGES[static_cast<jule::Int>(_1419_x >> 4LL)];
	if ((_13718_p.len() > 1LL) && ((_13718_p[1LL] < _1469_accept._field_lo) || (_1469_accept._field_hi < _13718_p[1LL]))) {
		return true;
	} else if ((_13718_p.len() > 2LL) && ((_13718_p[2LL] < 128LL) || (191LL < _13718_p[2LL]))) {
		return true;
	}
	return false;
}



inline jule::Bool _1b818a2be_full_rune_str(jule::Str _15622_s) {
	if (_15622_s.len() == 0LL) {
		return false;
	}
	jule::U8 _1609_x = _1b818a2be_FIRST[static_cast<jule::Int>(_15622_s[0LL])];
	if (_15622_s.len() >= static_cast<jule::Int>(_1609_x & 7LL)) {
		return true;
	}
	_1b818a2be_accept_range _1659_accept = _1b818a2be_ACCEPT_RANGES[static_cast<jule::Int>(_1609_x >> 4LL)];
	if ((_15622_s.len() > 1LL) && ((_15622_s[1LL] < _1659_accept._field_lo) || (_1659_accept._field_hi < _15622_s[1LL]))) {
		return true;
	} else if ((_15622_s.len() > 2LL) && ((_15622_s[2LL] < 128LL) || (191LL < _15622_s[2LL]))) {
		return true;
	}
	return false;
}



inline std::tuple<jule::I32,jule::Int> _1b818a2be_decode_rune(jule::Slice<jule::U8> _18220_p) {
	jule::I32 _18233_r = jule::I32();
	jule::Int _18242_size = jule::Int();
	if (_18220_p.len() < 1LL) {
		_18233_r = 65533LL;
		_18242_size = 0LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _1869_p0 = _18220_p[0LL];
	jule::U8 _1879_x = _1b818a2be_FIRST[static_cast<jule::Int>(_1869_p0)];
	if (_1879_x >= 240LL) {
		jule::I32 _19213_mask = static_cast<jule::U8>((_1879_x << 31LL) >> 31LL);
		_18233_r = static_cast<jule::I32>((static_cast<jule::I32>(_18220_p[0LL]) & (~(_19213_mask))) | (65533LL & _19213_mask));
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::Int _1959_sz = static_cast<jule::Int>(_1879_x & 7LL);
	_1b818a2be_accept_range _1969_accept = _1b818a2be_ACCEPT_RANGES[static_cast<jule::Int>(_1879_x >> 4LL)];
	if (_18220_p.len() < _1959_sz) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _2009_b1 = _18220_p[1LL];
	if ((_2009_b1 < _1969_accept._field_lo) || (_1969_accept._field_hi < _2009_b1)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	if (_1959_sz <= 2LL) {
		_18233_r = static_cast<jule::I32>((static_cast<jule::I32>(_1869_p0 & 31LL) << 6LL) | static_cast<jule::I32>(_2009_b1 & 63LL));
		_18242_size = 2LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _2079_b2 = _18220_p[2LL];
	if ((_2079_b2 < 128LL) || (191LL < _2079_b2)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	if (_1959_sz <= 3LL) {
		_18233_r = static_cast<jule::I32>(((static_cast<jule::I32>(_1869_p0 & 15LL) << 12LL) | (static_cast<jule::I32>(_2009_b1 & 63LL) << 6LL)) | static_cast<jule::I32>(_2079_b2 & 63LL));
		_18242_size = 3LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _2149_b3 = _18220_p[3LL];
	if ((_2149_b3 < 128LL) || (191LL < _2149_b3)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	_18233_r = static_cast<jule::I32>((((static_cast<jule::I32>(_1869_p0 & 7LL) << 18LL) | (static_cast<jule::I32>(_2009_b1 & 63LL) << 12LL)) | (static_cast<jule::I32>(_2079_b2 & 63LL) << 6LL)) | static_cast<jule::I32>(_2149_b3 & 63LL));
	_18242_size = 4LL;
	return std::make_tuple(_18233_r,_18242_size);
}



inline std::tuple<jule::I32,jule::Int> _1b818a2be_decode_rune_str(jule::Str _22924_s) {
	jule::I32 _22934_r = jule::I32();
	jule::Int _22943_size = jule::Int();
	if (_22924_s.len() < 1LL) {
		_22934_r = 65533LL;
		_22943_size = 0LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	jule::U8 _2339_s0 = _22924_s[0LL];
	jule::U8 _2349_x = _1b818a2be_FIRST[static_cast<jule::Int>(_2339_s0)];
	if (_2349_x >= 240LL) {
		jule::I32 _23913_mask = static_cast<jule::U8>((_2349_x << 31LL) >> 31LL);
		_22934_r = static_cast<jule::I32>((static_cast<jule::I32>(_22924_s[0LL]) & (~(_23913_mask))) | (65533LL & _23913_mask));
		_22943_size = 1LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	jule::Int _2429_sz = static_cast<jule::Int>(_2349_x & 7LL);
	_1b818a2be_accept_range _2439_accept = _1b818a2be_ACCEPT_RANGES[static_cast<jule::Int>(_2349_x >> 4LL)];
	if (_22924_s.len() < _2429_sz) {
		_22934_r = 65533LL;
		_22943_size = 1LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	jule::U8 _2479_s1 = _22924_s[1LL];
	if ((_2479_s1 < _2439_accept._field_lo) || (_2439_accept._field_hi < _2479_s1)) {
		_22934_r = 65533LL;
		_22943_size = 1LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	if (_2429_sz <= 2LL) {
		_22934_r = static_cast<jule::I32>((static_cast<jule::I32>(_2339_s0 & 31LL) << 6LL) | static_cast<jule::I32>(_2479_s1 & 63LL));
		_22943_size = 2LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	jule::U8 _2549_s2 = _22924_s[2LL];
	if ((_2549_s2 < 128LL) || (191LL < _2549_s2)) {
		_22934_r = 65533LL;
		_22943_size = 1LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	if (_2429_sz <= 3LL) {
		_22934_r = static_cast<jule::I32>(((static_cast<jule::I32>(_2339_s0 & 15LL) << 12LL) | (static_cast<jule::I32>(_2479_s1 & 63LL) << 6LL)) | static_cast<jule::I32>(_2549_s2 & 63LL));
		_22943_size = 3LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	jule::U8 _2619_s3 = _22924_s[3LL];
	if ((_2619_s3 < 128LL) || (191LL < _2619_s3)) {
		_22934_r = 65533LL;
		_22943_size = 1LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	_22934_r = static_cast<jule::I32>((((static_cast<jule::I32>(_2339_s0 & 7LL) << 18LL) | (static_cast<jule::I32>(_2479_s1 & 63LL) << 12LL)) | (static_cast<jule::I32>(_2549_s2 & 63LL) << 6LL)) | static_cast<jule::I32>(_2619_s3 & 63LL));
	_22943_size = 4LL;
	return std::make_tuple(_22934_r,_22943_size);
}



inline std::tuple<jule::I32,jule::Int> _1b818a2be_decode_last_rune(jule::Slice<jule::U8> _27625_p) {
	jule::I32 _27638_r = jule::I32();
	jule::Int _27647_size = jule::Int();
	if (_27625_p.len() == 0LL) {
		_27638_r = 65533LL;
		_27647_size = 0LL;
		return std::make_tuple(_27638_r,_27647_size);
	}
	jule::I64 _2809_end = _27625_p.len();
	jule::I64 _28113_start = _2809_end - 1LL;
	_27638_r=static_cast<jule::I32>(_27625_p[static_cast<jule::Int>(_28113_start)]);
	if (_27638_r < 128LL) {
		_27638_r = _27638_r;
		_27647_size = 1LL;
		return std::make_tuple(_27638_r,_27647_size);
	}
	jule::I64 _28913_lim = _2809_end - 4LL;
	if (_28913_lim < 0LL) {
		_28913_lim=0LL;
	}
	(_28113_start)--;
	_iter_begin_4703896704:;
	if (!(_28113_start >= _28913_lim)) { goto _iter_end_4703896704; }
	{
		if (_1b818a2be_rune_start(_27625_p[static_cast<jule::Int>(_28113_start)])) {
			goto _iter_end_4703896704;
		}
	}
	_iter_next_4703896704:;
	(_28113_start)--;
	goto _iter_begin_4703896704;
	_iter_end_4703896704:;
	if (_28113_start < 0LL) {
		_28113_start=0LL;
	}
	std::tie(_27638_r,_27647_size) = _1b818a2be_decode_rune(_27625_p.slice(static_cast<jule::Int>(_28113_start),static_cast<jule::Int>(_2809_end)));
	if ((_28113_start + _27647_size) != _2809_end) {
		_27638_r = 65533LL;
		_27647_size = 1LL;
		return std::make_tuple(_27638_r,_27647_size);
	}
	_27638_r = _27638_r;
	_27647_size = _27647_size;
	return std::make_tuple(_27638_r,_27647_size);
}



inline std::tuple<jule::I32,jule::Int> _1b818a2be_decode_last_rune_str(jule::Str _31729_s) {
	jule::I32 _31739_r = jule::I32();
	jule::Int _31748_size = jule::Int();
	if (_31729_s.len() == 0LL) {
		_31739_r = 65533LL;
		_31748_size = 0LL;
		return std::make_tuple(_31739_r,_31748_size);
	}
	jule::I64 _3219_end = _31729_s.len();
	jule::I64 _32213_start = _3219_end - 1LL;
	_31739_r=static_cast<jule::I32>(_31729_s[static_cast<jule::Int>(_32213_start)]);
	if (_31739_r < 128LL) {
		_31739_r = _31739_r;
		_31748_size = 1LL;
		return std::make_tuple(_31739_r,_31748_size);
	}
	jule::I64 _33013_lim = _3219_end - 4LL;
	if (_33013_lim < 0LL) {
		_33013_lim=0LL;
	}
	(_32213_start)--;
	_iter_begin_4703932560:;
	if (!(_32213_start >= _33013_lim)) { goto _iter_end_4703932560; }
	{
		if (_1b818a2be_rune_start(_31729_s[static_cast<jule::Int>(_32213_start)])) {
			goto _iter_end_4703932560;
		}
	}
	_iter_next_4703932560:;
	(_32213_start)--;
	goto _iter_begin_4703932560;
	_iter_end_4703932560:;
	if (_32213_start < 0LL) {
		_32213_start=0LL;
	}
	std::tie(_31739_r,_31748_size) = _1b818a2be_decode_rune_str(_31729_s.slice(static_cast<jule::Int>(_32213_start),static_cast<jule::Int>(_3219_end)));
	if ((_32213_start + _31748_size) != _3219_end) {
		_31739_r = 65533LL;
		_31748_size = 1LL;
		return std::make_tuple(_31739_r,_31748_size);
	}
	_31739_r = _31739_r;
	_31748_size = _31748_size;
	return std::make_tuple(_31739_r,_31748_size);
}



inline jule::Int _1b818a2be_rune_len(jule::I32 _35217_r) {
	{
		if (!((_35217_r < 0LL))) { goto _case_end_4703942112; }
		_case_begin_4703942112:;
		{
			return -1LL;
		}
		goto _match_end_4703931936;
		_case_end_4703942112:;
		if (!((_35217_r <= 127LLU))) { goto _case_end_4703942384; }
		_case_begin_4703942384:;
		{
			return 1LL;
		}
		goto _match_end_4703931936;
		_case_end_4703942384:;
		if (!((_35217_r <= 2047LLU))) { goto _case_end_4703942496; }
		_case_begin_4703942496:;
		{
			return 2LL;
		}
		goto _match_end_4703931936;
		_case_end_4703942496:;
		if (!(((55296LL <= _35217_r) && (_35217_r <= 57343LL)))) { goto _case_end_4703942608; }
		_case_begin_4703942608:;
		{
			return -1LL;
		}
		goto _match_end_4703931936;
		_case_end_4703942608:;
		if (!((_35217_r <= 65535LLU))) { goto _case_end_4703941600; }
		_case_begin_4703941600:;
		{
			return 3LL;
		}
		goto _match_end_4703931936;
		_case_end_4703941600:;
		if (!((_35217_r <= 1114111LL))) { goto _case_end_4703941712; }
		_case_begin_4703941712:;
		{
			return 4LL;
		}
		goto _match_end_4703931936;
		_case_end_4703941712:;
		_case_begin_4703940544:;
		{
			return -1LL;
		}
		goto _match_end_4703931936;
		_case_end_4703940544:;
		_match_end_4703931936:;
	}
}



inline jule::Int _1b818a2be_encode_rune(jule::Slice<jule::U8> _36724_p,jule::I32 _36739_r) {
	jule::U32 _3699_i = static_cast<jule::U32>(_36739_r);
	{
		if (!((_3699_i <= 127LLU))) { goto _case_end_4703959440; }
		_case_begin_4703959440:;
		{
			_36724_p[0LL]=static_cast<jule::U8>(_36739_r);
			return 1LL;
		}
		goto _match_end_4703949312;
		_case_end_4703959440:;
		if (!((_3699_i <= 2047LLU))) { goto _case_end_4703959552; }
		_case_begin_4703959552:;
		{
			_36724_p[0LL]=static_cast<jule::U8>(192LL | static_cast<jule::U8>(_36739_r >> 6LL));
			_36724_p[1LL]=static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_36739_r) & 63LL));
			return 2LL;
		}
		goto _match_end_4703949312;
		_case_end_4703959552:;
		if (!((_3699_i > 1114111LL) || ((55296LL <= _3699_i) && (_3699_i <= 57343LL)))) { goto _case_end_4703949744; }
		_case_begin_4703949744:;
		{
			_36739_r=65533LL;
			goto _case_begin_4703949856;
		}
		goto _match_end_4703949312;
		_case_end_4703949744:;
		if (!((_3699_i <= 65535LLU))) { goto _case_end_4703949856; }
		_case_begin_4703949856:;
		{
			_36724_p[0LL]=static_cast<jule::U8>(224LL | static_cast<jule::U8>(_36739_r >> 12LL));
			_36724_p[1LL]=static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_36739_r >> 6LL) & 63LL));
			_36724_p[2LL]=static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_36739_r) & 63LL));
			return 3LL;
		}
		goto _match_end_4703949312;
		_case_end_4703949856:;
		_case_begin_4703949440:;
		{
			_36724_p[0LL]=static_cast<jule::U8>(240LL | static_cast<jule::U8>(_36739_r >> 18LL));
			_36724_p[1LL]=static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_36739_r >> 12LL) & 63LL));
			_36724_p[2LL]=static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_36739_r >> 6LL) & 63LL));
			_36724_p[3LL]=static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_36739_r) & 63LL));
			return 4LL;
		}
		goto _match_end_4703949312;
		_case_end_4703949440:;
		_match_end_4703949312:;
	}
}



inline jule::Slice<jule::U8> _1b818a2be_append_rune(jule::Slice<jule::U8> _39824_p,jule::I32 _39835_r) {
	if (static_cast<jule::U32>(_39835_r) <= 127LLU) {
		return jule::append(_39824_p,jule::Slice<jule::U8>({static_cast<jule::U8>(_39835_r)}));
	}
	return _1b818a2be_append_rune_non_ascii(_39824_p,_39835_r);
}



inline jule::Slice<jule::U8> _1b818a2be_append_rune_non_ascii(jule::Slice<jule::U8> _40530_p,jule::I32 _40545_r) {
	jule::U32 _4079_i = static_cast<jule::U32>(_40545_r);
	{
		if (!((_4079_i <= 2047LLU))) { goto _case_end_4703983120; }
		_case_begin_4703983120:;
		{
			return jule::append(_40530_p,jule::Slice<jule::U8>({static_cast<jule::U8>(192LL | static_cast<jule::U8>(_40545_r >> 6LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r) & 63LL))}));
		}
		goto _match_end_4703979904;
		_case_end_4703983120:;
		if (!((_4079_i > 1114111LL) || ((55296LL <= _4079_i) && (_4079_i <= 57343LL)))) { goto _case_end_4703983232; }
		_case_begin_4703983232:;
		{
			_40545_r=65533LL;
			goto _case_begin_4703983344;
		}
		goto _match_end_4703979904;
		_case_end_4703983232:;
		if (!((_4079_i <= 65535LLU))) { goto _case_end_4703983344; }
		_case_begin_4703983344:;
		{
			return jule::append(_40530_p,jule::Slice<jule::U8>({static_cast<jule::U8>(224LL | static_cast<jule::U8>(_40545_r >> 12LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r >> 6LL) & 63LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r) & 63LL))}));
		}
		goto _match_end_4703979904;
		_case_end_4703983344:;
		_case_begin_4703980032:;
		{
			return jule::append(_40530_p,jule::Slice<jule::U8>({static_cast<jule::U8>(240LL | static_cast<jule::U8>(_40545_r >> 18LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r >> 12LL) & 63LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r >> 6LL) & 63LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r) & 63LL))}));
		}
		goto _match_end_4703979904;
		_case_end_4703980032:;
		_match_end_4703979904:;
	}
}



inline jule::Int _1b818a2be_rune_count(jule::Slice<jule::U8> _42319_p) {
	jule::Int _42332_n = jule::Int();
	jule::Int _42413_i = 0LL;
	_iter_begin_4703982096:;
	if (!(_42413_i < _42319_p.len())) { goto _iter_end_4703982096; }
	{
		(_42332_n)++;
		jule::U8 _42717_c = _42319_p[static_cast<jule::Int>(_42413_i)];
		if (_42717_c < 128LL) {
			(_42413_i)++;
			goto _iter_next_4703982096;
		}
		jule::U8 _43313_x = _1b818a2be_FIRST[static_cast<jule::Int>(_42717_c)];
		if (_43313_x == 241LL) {
			(_42413_i)++;
			goto _iter_next_4703982096;
		}
		jule::Int _43817_size = static_cast<jule::Int>(_43313_x & 7LL);
		if ((_42413_i + _43817_size) > _42319_p.len()) {
			(_42413_i)++;
			goto _iter_next_4703982096;
		}
		_1b818a2be_accept_range _44313_accept = _1b818a2be_ACCEPT_RANGES[static_cast<jule::Int>(_43313_x >> 4LL)];
		_42717_c=_42319_p[static_cast<jule::Int>(_42413_i + 1LL)];
		if ((_42717_c < _44313_accept._field_lo) || (_44313_accept._field_hi < _42717_c)) {
			_43817_size=1LL;
		} else if (_43817_size == 2LL) {
		} else {
			_42717_c=_42319_p[static_cast<jule::Int>(_42413_i + 2LL)];
			if ((_42717_c < 128LL) || (191LL < _42717_c)) {
				_43817_size=1LL;
			} else if (_43817_size == 3LL) {
			} else {
				_42717_c=_42319_p[static_cast<jule::Int>(_42413_i + 3LL)];
				if ((_42717_c < 128LL) || (191LL < _42717_c)) {
					_43817_size=1LL;
				}
			}
		}
		_42413_i+=_43817_size;
	}
	_iter_next_4703982096:;
	goto _iter_begin_4703982096;
	_iter_end_4703982096:;
	_42332_n = _42332_n;
	return _42332_n;
}



inline jule::Int _1b818a2be_rune_count_str(jule::Str _46623_s) {
	jule::Int _46633_n = jule::Int();
	jule::Int _46713_i = 0LL;
	_iter_begin_4704019136:;
	if (!(_46713_i < _46623_s.len())) { goto _iter_end_4704019136; }
	{
		jule::U8 _46917_c = _46623_s[static_cast<jule::Int>(_46713_i)];
		if (_46917_c < 128LL) {
			(_46713_i)++;
			goto _iter_next_4704019136;
		}
		jule::U8 _47513_x = _1b818a2be_FIRST[static_cast<jule::Int>(_46917_c)];
		if (_47513_x == 241LL) {
			(_46713_i)++;
			goto _iter_next_4704019136;
		}
		jule::Int _48017_size = static_cast<jule::Int>(_47513_x & 7LL);
		if ((_46713_i + _48017_size) > _46623_s.len()) {
			(_46713_i)++;
			goto _iter_next_4704019136;
		}
		_1b818a2be_accept_range _48513_accept = _1b818a2be_ACCEPT_RANGES[static_cast<jule::Int>(_47513_x >> 4LL)];
		_46917_c=_46623_s[static_cast<jule::Int>(_46713_i + 1LL)];
		if ((_46917_c < _48513_accept._field_lo) || (_48513_accept._field_hi < _46917_c)) {
			_48017_size=1LL;
		} else if (_48017_size == 2LL) {
		} else {
			_46917_c=_46623_s[static_cast<jule::Int>(_46713_i + 2LL)];
			if ((_46917_c < 128LL) || (191LL < _46917_c)) {
				_48017_size=1LL;
			} else if (_48017_size == 3LL) {
			} else {
				_46917_c=_46623_s[static_cast<jule::Int>(_46713_i + 3LL)];
				if ((_46917_c < 128LL) || (191LL < _46917_c)) {
					_48017_size=1LL;
				}
			}
		}
		_46713_i+=_48017_size;
	}
	_iter_next_4704019136:;
	(_46633_n)++;
	goto _iter_begin_4704019136;
	_iter_end_4704019136:;
	_46633_n = _46633_n;
	return _46633_n;
}



inline jule::Bool _1b818a2be_rune_start(jule::U8 _51019_b) {
	return (_51019_b & 192LL) != 128LL;
}



inline jule::Bool _1b818a2be_valid(jule::Slice<jule::U8> _51314_p) {
	jule::Slice<jule::U8> _51613_cp = (*((&(_51314_p))));
	_iter_begin_4704043632:;
	if (!(_51613_cp.len() >= 8LL)) { goto _iter_end_4704043632; }
	{
		jule::U32 _52213_first32 = ((static_cast<jule::U32>(_51613_cp[0LL]) | (static_cast<jule::U32>(_51613_cp[1LL]) << 8LL)) | (static_cast<jule::U32>(_51613_cp[2LL]) << 16LL)) | (static_cast<jule::U32>(_51613_cp[3LL]) << 24LL);
		jule::U32 _52313_second32 = ((static_cast<jule::U32>(_51613_cp[4LL]) | (static_cast<jule::U32>(_51613_cp[5LL]) << 8LL)) | (static_cast<jule::U32>(_51613_cp[6LL]) << 16LL)) | (static_cast<jule::U32>(_51613_cp[7LL]) << 24LL);
		if (((_52213_first32 | _52313_second32) & 2155905152LL) != 0LL) {
			goto _iter_end_4704043632;
		}
		_51613_cp=_51613_cp.slice(8LL);
	}
	_iter_next_4704043632:;
	goto _iter_begin_4704043632;
	_iter_end_4704043632:;
	jule::Int _53013_i = 0LL;
	_iter_begin_4704042288:;
	if (!(_53013_i < _51613_cp.len())) { goto _iter_end_4704042288; }
	{
		jule::U8 _53213_pi = _51613_cp[static_cast<jule::Int>(_53013_i)];
		if (_53213_pi < 128LL) {
			(_53013_i)++;
			goto _iter_next_4704042288;
		}
		jule::U8 _53713_x = _1b818a2be_FIRST[static_cast<jule::Int>(_53213_pi)];
		if (_53713_x == 241LL) {
			return false;
		}
		jule::Int _54113_size = static_cast<jule::Int>(_53713_x & 7LL);
		if ((_53013_i + _54113_size) > _51613_cp.len()) {
			return false;
		}
		_1b818a2be_accept_range _54513_accept = _1b818a2be_ACCEPT_RANGES[static_cast<jule::Int>(_53713_x >> 4LL)];
		jule::U8 _54617_c = _51613_cp[static_cast<jule::Int>(_53013_i + 1LL)];
		if ((_54617_c < _54513_accept._field_lo) || (_54513_accept._field_hi < _54617_c)) {
			return false;
		} else if (_54113_size == 2LL) {
		} else {
			_54617_c=_51613_cp[static_cast<jule::Int>(_53013_i + 2LL)];
			if ((_54617_c < 128LL) || (191LL < _54617_c)) {
				return false;
			} else if (_54113_size == 3LL) {
			} else {
				_54617_c=_51613_cp[static_cast<jule::Int>(_53013_i + 3LL)];
				if ((_54617_c < 128LL) || (191LL < _54617_c)) {
					return false;
				}
			}
		}
		_53013_i+=_54113_size;
	}
	_iter_next_4704042288:;
	goto _iter_begin_4704042288;
	_iter_end_4704042288:;
	return true;
}



inline jule::Bool _1b818a2be_valid_str(jule::Str _56822_s) {
	_iter_begin_4704081808:;
	if (!(_56822_s.len() >= 8LL)) { goto _iter_end_4704081808; }
	{
		jule::U32 _57313_first32 = ((static_cast<jule::U32>(_56822_s[0LL]) | (static_cast<jule::U32>(_56822_s[1LL]) << 8LL)) | (static_cast<jule::U32>(_56822_s[2LL]) << 16LL)) | (static_cast<jule::U32>(_56822_s[3LL]) << 24LL);
		jule::U32 _57413_second32 = ((static_cast<jule::U32>(_56822_s[4LL]) | (static_cast<jule::U32>(_56822_s[5LL]) << 8LL)) | (static_cast<jule::U32>(_56822_s[6LL]) << 16LL)) | (static_cast<jule::U32>(_56822_s[7LL]) << 24LL);
		if (((_57313_first32 | _57413_second32) & 2155905152LL) != 0LL) {
			goto _iter_end_4704081808;
		}
		_56822_s=_56822_s.slice(8LL);
	}
	_iter_next_4704081808:;
	goto _iter_begin_4704081808;
	_iter_end_4704081808:;
	jule::Int _58113_i = 0LL;
	_iter_begin_4704096768:;
	if (!(_58113_i < _56822_s.len())) { goto _iter_end_4704096768; }
	{
		jule::U8 _58313_si = _56822_s[static_cast<jule::Int>(_58113_i)];
		if (_58313_si < 128LL) {
			(_58113_i)++;
			goto _iter_next_4704096768;
		}
		jule::U8 _58813_x = _1b818a2be_FIRST[static_cast<jule::Int>(_58313_si)];
		if (_58813_x == 241LL) {
			return false;
		}
		jule::Int _59213_size = static_cast<jule::Int>(_58813_x & 7LL);
		if ((_58113_i + _59213_size) > _56822_s.len()) {
			return false;
		}
		_1b818a2be_accept_range _59613_accept = _1b818a2be_ACCEPT_RANGES[static_cast<jule::Int>(_58813_x >> 4LL)];
		jule::U8 _59717_c = _56822_s[static_cast<jule::Int>(_58113_i + 1LL)];
		if ((_59717_c < _59613_accept._field_lo) || (_59613_accept._field_hi < _59717_c)) {
			return false;
		} else if (_59213_size == 2LL) {
		} else {
			_59717_c=_56822_s[static_cast<jule::Int>(_58113_i + 2LL)];
			if ((_59717_c < 128LL) || (191LL < _59717_c)) {
				return false;
			} else if (_59213_size == 3LL) {
			} else {
				_59717_c=_56822_s[static_cast<jule::Int>(_58113_i + 3LL)];
				if ((_59717_c < 128LL) || (191LL < _59717_c)) {
					return false;
				}
			}
		}
		_58113_i+=_59213_size;
	}
	_iter_next_4704096768:;
	goto _iter_begin_4704096768;
	_iter_end_4704096768:;
	return true;
}



inline jule::Bool _1b818a2be_valid_rune(jule::I32 _62019_r) {
	{
		if (!(((0LL <= _62019_r) && (_62019_r < 55296LL)))) { goto _case_end_4704121520; }
		_case_begin_4704121520:;
		{
			return true;
		}
		goto _match_end_4704120976;
		_case_end_4704121520:;
		if (!(((57343LL < _62019_r) && (_62019_r <= 1114111LL)))) { goto _case_end_4704121632; }
		_case_begin_4704121632:;
		{
			return true;
		}
		goto _match_end_4704120976;
		_case_end_4704121632:;
		_case_begin_4704121168:;
		{
			return false;
		}
		goto _match_end_4704120976;
		_case_end_4704121168:;
		_match_end_4704120976:;
	}
}



inline jule::Bool _1d1da4277_is_unary_op(jule::Str _31120_kind) {
	{
		auto _range_expr = _1d1da4277_UNARY_OPS;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _1d1da4277_op = *_range_begin;
			_iter_begin_4704329360:;
			{
				if (_31120_kind == _1d1da4277_op) {
					return true;
				}
			}
			_iter_next_4704329360:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d1da4277_op = *_range_begin; goto _iter_begin_4704329360; }
			_iter_end_4704329360:;
		}
	}
	return false;
}



inline jule::Bool _1d1da4277_is_bin_op(jule::Str _32218_kind) {
	{
		auto _range_expr = _1d1da4277_BIN_OPS;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _1d1da4277_op = *_range_begin;
			_iter_begin_4704331072:;
			{
				if (_32218_kind == _1d1da4277_op) {
					return true;
				}
			}
			_iter_next_4704331072:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d1da4277_op = *_range_begin; goto _iter_begin_4704331072; }
			_iter_end_4704331072:;
		}
	}
	return false;
}



inline jule::Bool _1d1da4277_is_weak_op(jule::Str _33319_kind) {
	{
		auto _range_expr = _1d1da4277_WEAK_OPS;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _1d1da4277_op = *_range_begin;
			_iter_begin_4704333808:;
			{
				if (_33319_kind == _1d1da4277_op) {
					return true;
				}
			}
			_iter_next_4704333808:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d1da4277_op = *_range_begin; goto _iter_begin_4704333808; }
			_iter_end_4704333808:;
		}
	}
	return false;
}



inline jule::Bool _1d1da4277_is_str(jule::Str _34415_k) {
	return (_34415_k != jule::Str("", 0)) && ((_34415_k[0LL] == '\"') || _1d1da4277_is_raw_str(_34415_k));
}



inline jule::Bool _1d1da4277_is_raw_str(jule::Str _34619_k) {
	return (_34619_k != jule::Str("", 0)) && (_34619_k[0LL] == '`');
}



inline jule::Bool _1d1da4277_is_rune(jule::Str _34916_k) {
	return (_34916_k != jule::Str("", 0)) && (_34916_k[0LL] == '\'');
}



inline jule::Bool _1d1da4277_is_nil(jule::Str _35115_k) {
	return _35115_k == jule::Str("nil", 3);
}



inline jule::Bool _1d1da4277_is_bool(jule::Str _35316_k) {
	return (_35316_k == jule::Str("true", 4)) || (_35316_k == jule::Str("false", 5));
}



inline jule::Bool _1d1da4277_contains_any(jule::Str _35517_s,jule::Str _35525_bytes) {
	{
		auto _range_expr = _35525_bytes;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::U8 _1d1da4277_b = *_range_begin;
			_iter_begin_4704345024:;
			{
				jule::Int _35713_i = _35517_s.find(static_cast<jule::Str>(_1d1da4277_b));
				if (_35713_i >= 0LL) {
					return true;
				}
			}
			_iter_next_4704345024:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d1da4277_b = *_range_begin; goto _iter_begin_4704345024; }
			_iter_end_4704345024:;
		}
	}
	return false;
}



inline jule::Bool _1d1da4277_is_float(jule::Str _36717_k) {
	if (_36717_k.has_prefix(jule::Str("0x", 2))) {
		return _1d1da4277_contains_any(_36717_k,jule::Str(".pP", 3));
	}
	return _1d1da4277_contains_any(_36717_k,jule::Str(".eE", 3));
}



inline jule::Bool _1d1da4277_is_num(jule::Str _37615_k) {
	if (_37615_k == jule::Str("", 0)) {
		return false;
	}
	jule::U8 _3819_b = _37615_k[0LL];
	return (_3819_b == '.') || (('0' <= _3819_b) && (_3819_b <= '9'));
}



inline jule::Bool _1d1da4277_is_lit(jule::Str _38615_k) {
	return (((_1d1da4277_is_num(_38615_k) || _1d1da4277_is_str(_38615_k)) || _1d1da4277_is_rune(_38615_k)) || _1d1da4277_is_nil(_38615_k)) || _1d1da4277_is_bool(_38615_k);
}



inline jule::Bool _1d1da4277_is_ignore_ident(jule::Str _39124_ident) {
	return _39124_ident == jule::Str("_", 1);
}



inline jule::Bool _1d1da4277_is_anon_ident(jule::Str _39322_ident) {
	return _39322_ident == jule::Str("<anonymous>", 11);
}



inline jule::Bool _1d1da4277_is_punct(jule::I32 _39617_r) {
	{
		auto _range_expr = _1d1da4277_PUNCTS;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::I32 _1d1da4277_cr = *_range_begin;
			_iter_begin_4704360432:;
			{
				if (_39617_r == _1d1da4277_cr) {
					return true;
				}
			}
			_iter_next_4704360432:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d1da4277_cr = *_range_begin; goto _iter_begin_4704360432; }
			_iter_end_4704360432:;
		}
	}
	return false;
}



inline jule::Bool _1d1da4277_is_space(jule::I32 _40717_r) {
	{
		auto _range_expr = _1d1da4277_SPACES;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::I32 _1d1da4277_cr = *_range_begin;
			_iter_begin_4704369552:;
			{
				if (_40717_r == _1d1da4277_cr) {
					return true;
				}
			}
			_iter_next_4704369552:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d1da4277_cr = *_range_begin; goto _iter_begin_4704369552; }
			_iter_end_4704369552:;
		}
	}
	return false;
}



inline jule::Bool _1d1da4277_is_letter(jule::I32 _41818_r) {
	return _1d2264b43_is_letter(_41818_r);
}



inline jule::Bool _1d1da4277_is_ident_rune(jule::Str _42422_s) {
	if (_42422_s == jule::Str("", 0)) {
		return false;
	}
	if (_42422_s[0LL] != '_') {
		jule::I32 _43014_r;
		std::tie(_43014_r,std::ignore) = _1b818a2be_decode_rune_str(_42422_s);
		if ((!(_1d1da4277_is_letter(_43014_r)))) {
			return false;
		}
	}
	return true;
}



inline jule::Bool _1d1da4277_is_decimal(jule::U8 _44019_b) {
	return ('0' <= _44019_b) && (_44019_b <= '9');
}



inline jule::Bool _1d1da4277_is_binary(jule::U8 _44218_b) {
	return (_44218_b == '0') || (_44218_b == '1');
}



inline jule::Bool _1d1da4277_is_octal(jule::U8 _44417_b) {
	return ('0' <= _44417_b) && (_44417_b <= '7');
}



inline jule::Bool _1d1da4277_is_hex(jule::U8 _44715_b) {
	{
		if (!((('0' <= _44715_b) && (_44715_b <= '9')))) { goto _case_end_4704383216; }
		_case_begin_4704383216:;
		{
			return true;
		}
		goto _match_end_4704380576;
		_case_end_4704383216:;
		if (!((('a' <= _44715_b) && (_44715_b <= 'f')))) { goto _case_end_4704383328; }
		_case_begin_4704383328:;
		{
			return true;
		}
		goto _match_end_4704380576;
		_case_end_4704383328:;
		if (!((('A' <= _44715_b) && (_44715_b <= 'F')))) { goto _case_end_4704383440; }
		_case_begin_4704383440:;
		{
			return true;
		}
		goto _match_end_4704380576;
		_case_end_4704383440:;
		_case_begin_4704378336:;
		{
			return false;
		}
		goto _match_end_4704380576;
		_case_end_4704378336:;
		_match_end_4704380576:;
	}
}



inline jule::Bool _1d1da4277_is_assign(jule::Uint _45918_id) {
	return ((((((_45918_id == 2LLU) || (_45918_id == 31LLU)) || (_45918_id == 34LLU)) || (_45918_id == 20LLU)) || (_45918_id == 28LLU)) || (_45918_id == 3LLU)) || (_45918_id == 7LLU);
}



inline jule::Bool _1d1da4277_is_postfix_op(jule::Str _47222_kind) {
	{
		auto _range_expr = _1d1da4277_POSTFIX_OPS;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _1d1da4277_op = *_range_begin;
			_iter_begin_4704390560:;
			{
				if (_47222_kind == _1d1da4277_op) {
					return true;
				}
			}
			_iter_next_4704390560:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d1da4277_op = *_range_begin; goto _iter_begin_4704390560; }
			_iter_end_4704390560:;
		}
	}
	return false;
}



inline jule::Bool _1d1da4277_is_assign_op(jule::Str _48321_kind) {
	if (_1d1da4277_is_postfix_op(_48321_kind)) {
		return true;
	}
	{
		auto _range_expr = _1d1da4277_ASSING_OPS;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _1d1da4277_op = *_range_begin;
			_iter_begin_4704394192:;
			{
				if (_48321_kind == _1d1da4277_op) {
					return true;
				}
			}
			_iter_next_4704394192:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d1da4277_op = *_range_begin; goto _iter_begin_4704394192; }
			_iter_end_4704394192:;
		}
	}
	return false;
}



inline jule::Ref<_1d1ee01b5_File> _1d1ee01b5_new_file_set(jule::Str _6421_path) {
	return jule::new_struct<_1d1ee01b5_File>(new( std::nothrow ) _1d1ee01b5_File(jule::Slice<jule::U8>(),_6421_path,jule::Slice<_1d1da4277_Token>()));
}



inline _1d0557e9e_Log _1d215b155_make_err(jule::Int _10313_row,jule::Int _10323_col,jule::Ref<_1d1ee01b5_File>& _10334_f,jule::Str _10344_fmt,jule::Slice<jule::Any> _10357_args) {
	return _1d0557e9e_Log(1LLU,_10313_row,_10323_col,_10334_f->_method_path(),_1d0557e9e_logf(_10344_fmt,_10357_args),jule::Str(),jule::Str());
}



inline jule::Bool _1d215b155_bytes_has_prefix(jule::Slice<jule::U8>& _11322_bytes,jule::Str _11337_prefix) {
	if (_11322_bytes.len() < _11337_prefix.len()) {
		return false;
	}
	{
		auto _range_expr = _11337_prefix;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1d215b155_i = 0;
			_iter_begin_4704406912:;
			{
				if (_11322_bytes[static_cast<jule::Int>(_1d215b155_i)] != _11337_prefix[static_cast<jule::Int>(_1d215b155_i)]) {
					return false;
				}
			}
			_iter_next_4704406912:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1d215b155_i; goto _iter_begin_4704406912; }
			_iter_end_4704406912:;
		}
	}
	return true;
}



inline jule::Str _1d215b155_float_fmt_e(jule::Slice<jule::U8>& _12517_txt,jule::Int _12534_i) {
	jule::Str _12544_lit = jule::Str();
	(_12534_i)++;
	if (_12534_i >= _12517_txt.len()) {
		return _12544_lit;
	}
	jule::U8 _13113_b = _12517_txt[static_cast<jule::Int>(_12534_i)];
	if ((_13113_b == '+') || (_13113_b == '-')) {
		(_12534_i)++;
		if (_12534_i >= _12517_txt.len()) {
			return _12544_lit;
		}
	}
	jule::Int _1399_first = _12534_i;
	_iter_begin_4704417104:;
	if (!(_12534_i < _12517_txt.len())) { goto _iter_end_4704417104; }
	{
		_13113_b=_12517_txt[static_cast<jule::Int>(_12534_i)];
		if ((!(_1d1da4277_is_decimal(_13113_b)))) {
			goto _iter_end_4704417104;
		}
	}
	_iter_next_4704417104:;
	(_12534_i)++;
	goto _iter_begin_4704417104;
	_iter_end_4704417104:;
	if (_12534_i == _1399_first) {
		_12544_lit = jule::Str("", 0);
		return _12544_lit;
	}
	_12544_lit = static_cast<jule::Str>(_12517_txt.slice(0LL,static_cast<jule::Int>(_12534_i)));
	return _12544_lit;
}



inline jule::Str _1d215b155_float_fmt_p(jule::Slice<jule::U8>& _15317_txt,jule::Int _15330_i) {
	return _1d215b155_float_fmt_e(_15317_txt,_15330_i);
}



inline jule::Str _1d215b155_float_fmt_dotnp(jule::Slice<jule::U8>& _15521_txt,jule::Int _15538_i) {
	if (_15521_txt[static_cast<jule::Int>(_15538_i)] != '.') {
		return jule::Str("", 0);
	}
	(_15538_i)++;
	_julec_label_loop:;
	_iter_begin_4704428496:;
	if (!(_15538_i < _15521_txt.len())) { goto _iter_end_4704428496; }
	{
		jule::U8 _16313_b = _15521_txt[static_cast<jule::Int>(_15538_i)];
		{
			if (!((_1d1da4277_is_decimal(_16313_b)))) { goto _case_end_4704431952; }
			_case_begin_4704431952:;
			{
				goto _iter_next_4704428496;
			}
			goto _match_end_4704431472;
			_case_end_4704431952:;
			if (!((_1d215b155_is_float_fmt_p(_16313_b,_15538_i)))) { goto _case_end_4704432064; }
			_case_begin_4704432064:;
			{
				return _1d215b155_float_fmt_p(_15521_txt,_15538_i);
			}
			goto _match_end_4704431472;
			_case_end_4704432064:;
			_case_begin_4704431600:;
			{
				goto _iter_end_4704428496;
			}
			goto _match_end_4704431472;
			_case_end_4704431600:;
			_match_end_4704431472:;
		}
	}
	_iter_next_4704428496:;
	(_15538_i)++;
	goto _iter_begin_4704428496;
	_iter_end_4704428496:;
	return jule::Str("", 0);
}



inline jule::Str _1d215b155_float_fmt_dotfp(jule::Slice<jule::U8>& _17321_txt,jule::Int _17338_i) {
	_17338_i+=2LL;
	return _1d215b155_float_fmt_e(_17321_txt,_17338_i);
}



inline jule::Str _1d215b155_float_fmt_dotp(jule::Slice<jule::U8>& _18020_txt,jule::Int _18037_i) {
	(_18037_i)++;
	return _1d215b155_float_fmt_e(_18020_txt,_18037_i);
}



inline jule::Str _1d215b155_float_num(jule::Slice<jule::U8>& _18715_txt,jule::Int _18732_i) {
	jule::Str _18742_lit = jule::Str();
	(_18732_i)++;
	_iter_begin_4704441968:;
	if (!(_18732_i < _18715_txt.len())) { goto _iter_end_4704441968; }
	{
		jule::U8 _19013_b = _18715_txt[static_cast<jule::Int>(_18732_i)];
		if ((_18732_i > 1LL) && ((_19013_b == 'e') || (_19013_b == 'E'))) {
			_18742_lit = _1d215b155_float_fmt_e(_18715_txt,_18732_i);
			return _18742_lit;
		}
		if ((!(_1d1da4277_is_decimal(_19013_b)))) {
			goto _iter_end_4704441968;
		}
	}
	_iter_next_4704441968:;
	(_18732_i)++;
	goto _iter_begin_4704441968;
	_iter_end_4704441968:;
	if (_18732_i == 1LL) {
		return _18742_lit;
	}
	_18742_lit = static_cast<jule::Str>(_18715_txt.slice(0LL,static_cast<jule::Int>(_18732_i)));
	return _18742_lit;
}



inline jule::Str _1d215b155_common_num(jule::Slice<jule::U8>& _20516_txt) {
	jule::Str _20531_lit = jule::Str();
	jule::Int _20613_i = 0LL;
	_julec_label_loop:;
	_iter_begin_4704451168:;
	if (!(_20613_i < _20516_txt.len())) { goto _iter_end_4704451168; }
	{
		jule::U8 _20913_b = _20516_txt[static_cast<jule::Int>(_20613_i)];
		{
			if (!((_20913_b == '.'))) { goto _case_end_4704454496; }
			_case_begin_4704454496:;
			{
				_20531_lit = _1d215b155_float_num(_20516_txt,_20613_i);
				return _20531_lit;
			}
			goto _match_end_4704454304;
			_case_end_4704454496:;
			if (!((_1d215b155_is_float_fmt_e(_20913_b,_20613_i)))) { goto _case_end_4704454624; }
			_case_begin_4704454624:;
			{
				_20531_lit = _1d215b155_float_fmt_e(_20516_txt,_20613_i);
				return _20531_lit;
			}
			goto _match_end_4704454304;
			_case_end_4704454624:;
			if (!(((!(_1d1da4277_is_decimal(_20913_b)))))) { goto _case_end_4704454752; }
			_case_begin_4704454752:;
			{
				goto _iter_end_4704451168;
			}
			goto _match_end_4704454304;
			_case_end_4704454752:;
			_match_end_4704454304:;
		}
	}
	_iter_next_4704451168:;
	(_20613_i)++;
	goto _iter_begin_4704451168;
	_iter_end_4704451168:;
	if (_20613_i == 0LL) {
		return _20531_lit;
	}
	_20531_lit = static_cast<jule::Str>(_20516_txt.slice(0LL,static_cast<jule::Int>(_20613_i)));
	return _20531_lit;
}



inline jule::Str _1d215b155_binary_num(jule::Slice<jule::U8>& _22316_txt) {
	jule::Str _22331_lit = jule::Str();
	if ((!(_1d215b155_bytes_has_prefix(_22316_txt,jule::Str("0b", 2))))) {
		_22331_lit = jule::Str("", 0);
		return _22331_lit;
	}
	if (_22316_txt.len() < 2LL) {
		return _22331_lit;
	}
	
	jule::Int _23213_i = 2LL;
	_iter_begin_4704461760:;
	if (!(_23213_i < _22316_txt.len())) { goto _iter_end_4704461760; }
	{
		if ((!(_1d1da4277_is_binary(_22316_txt[static_cast<jule::Int>(_23213_i)])))) {
			goto _iter_end_4704461760;
		}
	}
	_iter_next_4704461760:;
	(_23213_i)++;
	goto _iter_begin_4704461760;
	_iter_end_4704461760:;
	if (_23213_i == 2LL) {
		return _22331_lit;
	}
	_22331_lit = static_cast<jule::Str>(_22316_txt.slice(0LL,static_cast<jule::Int>(_23213_i)));
	return _22331_lit;
}



inline jule::Bool _1d215b155_is_float_fmt_e(jule::U8 _24519_b,jule::Int _24528_i) {
	return (_24528_i > 0LL) && ((_24519_b == 'e') || (_24519_b == 'E'));
}



inline jule::Bool _1d215b155_is_float_fmt_p(jule::U8 _24619_b,jule::Int _24628_i) {
	return (_24628_i > 0LL) && ((_24619_b == 'p') || (_24619_b == 'P'));
}



inline jule::Bool _1d215b155_is_float_fmt_dotnp(jule::Slice<jule::U8>& _24824_txt,jule::Int _24841_i) {
	if (_24824_txt[static_cast<jule::Int>(_24841_i)] != '.') {
		return false;
	}
	(_24841_i)++;
	_julec_label_loop:;
	_iter_begin_4704476064:;
	if (!(_24841_i < _24824_txt.len())) { goto _iter_end_4704476064; }
	{
		jule::U8 _25613_b = _24824_txt[static_cast<jule::Int>(_24841_i)];
		{
			if (!((_1d1da4277_is_decimal(_25613_b)))) { goto _case_end_4704482176; }
			_case_begin_4704482176:;
			{
				goto _iter_next_4704476064;
			}
			goto _match_end_4704481696;
			_case_end_4704482176:;
			if (!((_1d215b155_is_float_fmt_p(_25613_b,_24841_i)))) { goto _case_end_4704482288; }
			_case_begin_4704482288:;
			{
				return true;
			}
			goto _match_end_4704481696;
			_case_end_4704482288:;
			_case_begin_4704481824:;
			{
				goto _iter_end_4704476064;
			}
			goto _match_end_4704481696;
			_case_end_4704481824:;
			_match_end_4704481696:;
		}
	}
	_iter_next_4704476064:;
	(_24841_i)++;
	goto _iter_begin_4704476064;
	_iter_end_4704476064:;
	return false;
}



inline jule::Bool _1d215b155_is_float_fmt_dotp(jule::Slice<jule::U8>& _26723_txt,jule::Int _26736_i) {
	{
		if (!((_26723_txt.len() < 3LL))) { goto _case_end_4704487552; }
		_case_begin_4704487552:;
		{
			goto _case_begin_4704487664;
		}
		goto _match_end_4704487008;
		_case_end_4704487552:;
		if (!((_26723_txt[static_cast<jule::Int>(_26736_i)] != '.'))) { goto _case_end_4704487664; }
		_case_begin_4704487664:;
		{
			goto _case_begin_4704487776;
		}
		goto _match_end_4704487008;
		_case_end_4704487664:;
		if (!(((_26723_txt[static_cast<jule::Int>(_26736_i + 1LL)] != 'p') && (_26723_txt[static_cast<jule::Int>(_26736_i + 1LL)] != 'P')))) { goto _case_end_4704487776; }
		_case_begin_4704487776:;
		{
			return false;
		}
		goto _match_end_4704487008;
		_case_end_4704487776:;
		_case_begin_4704487184:;
		{
			return true;
		}
		goto _match_end_4704487008;
		_case_end_4704487184:;
		_match_end_4704487008:;
	}
}



inline jule::Bool _1d215b155_is_float_fmt_dotfp(jule::Slice<jule::U8>& _27624_txt,jule::Int _27637_i) {
	{
		if (!((_27624_txt.len() < 4LL))) { goto _case_end_4704496128; }
		_case_begin_4704496128:;
		{
			goto _case_begin_4704496240;
		}
		goto _match_end_4704495568;
		_case_end_4704496128:;
		if (!((_27624_txt[static_cast<jule::Int>(_27637_i)] != '.'))) { goto _case_end_4704496240; }
		_case_begin_4704496240:;
		{
			goto _case_begin_4704496352;
		}
		goto _match_end_4704495568;
		_case_end_4704496240:;
		if (!(((_27624_txt[static_cast<jule::Int>(_27637_i + 1LL)] != 'f') && (_27624_txt[static_cast<jule::Int>(_27637_i + 1LL)] != 'F')))) { goto _case_end_4704496352; }
		_case_begin_4704496352:;
		{
			goto _case_begin_4704497440;
		}
		goto _match_end_4704495568;
		_case_end_4704496352:;
		if (!(((_27624_txt[static_cast<jule::Int>(_27637_i + 2LL)] != 'p') && (_27624_txt[static_cast<jule::Int>(_27637_i + 1LL)] != 'P')))) { goto _case_end_4704497440; }
		_case_begin_4704497440:;
		{
			return false;
		}
		goto _match_end_4704495568;
		_case_end_4704497440:;
		_case_begin_4704495744:;
		{
			return true;
		}
		goto _match_end_4704495568;
		_case_end_4704495744:;
		_match_end_4704495568:;
	}
}



inline jule::Str _1d215b155_octal_num(jule::Slice<jule::U8>& _28615_txt) {
	jule::Str _28630_lit = jule::Str();
	if (_28615_txt[0LL] != '0') {
		_28630_lit = jule::Str("", 0);
		return _28630_lit;
	}
	if (_28615_txt.len() < 2LL) {
		return _28630_lit;
	}
	jule::Int _29413_octal_start = 1LL;
	if (_28615_txt[1LL] == 'o') {
		if (_28615_txt.len() < 3LL) {
			return _28630_lit;
		}
		(_29413_octal_start)++;
	}
	jule::Int _30313_i = _29413_octal_start;
	_iter_begin_4704514016:;
	if (!(_30313_i < _28615_txt.len())) { goto _iter_end_4704514016; }
	{
		jule::U8 _30513_b = _28615_txt[static_cast<jule::Int>(_30313_i)];
		if (_1d215b155_is_float_fmt_e(_30513_b,_30313_i)) {
			_28630_lit = _1d215b155_float_fmt_e(_28615_txt,_30313_i);
			return _28630_lit;
		}
		if ((!(_1d1da4277_is_octal(_30513_b)))) {
			goto _iter_end_4704514016;
		}
	}
	_iter_next_4704514016:;
	(_30313_i)++;
	goto _iter_begin_4704514016;
	_iter_end_4704514016:;
	if (_30313_i == _29413_octal_start) {
		return _28630_lit;
	}
	_28630_lit = static_cast<jule::Str>(_28615_txt.slice(0LL,static_cast<jule::Int>(_30313_i)));
	return _28630_lit;
}



inline jule::Str _1d215b155_hex_num(jule::Slice<jule::U8>& _32013_txt) {
	jule::Str _32028_lit = jule::Str();
	if (_32013_txt.len() < 3LL) {
		return _32028_lit;
	}
	if ((_32013_txt[0LL] != '0') || ((_32013_txt[1LL] != 'x') && (_32013_txt[1LL] != 'X'))) {
		return _32028_lit;
	}
	
	jule::Int _32913_i = 2LL;
	_julec_label_loop:;
	_iter_begin_4704529680:;
	if (!(_32913_i < _32013_txt.len())) { goto _iter_end_4704529680; }
	{
		jule::U8 _33213_b = _32013_txt[static_cast<jule::Int>(_32913_i)];
		{
			if (!((_1d215b155_is_float_fmt_dotp(_32013_txt,_32913_i)))) { goto _case_end_4704532960; }
			_case_begin_4704532960:;
			{
				_32028_lit = _1d215b155_float_fmt_dotp(_32013_txt,_32913_i);
				return _32028_lit;
			}
			goto _match_end_4704532736;
			_case_end_4704532960:;
			if (!((_1d215b155_is_float_fmt_dotfp(_32013_txt,_32913_i)))) { goto _case_end_4704533088; }
			_case_begin_4704533088:;
			{
				_32028_lit = _1d215b155_float_fmt_dotfp(_32013_txt,_32913_i);
				return _32028_lit;
			}
			goto _match_end_4704532736;
			_case_end_4704533088:;
			if (!((_1d215b155_is_float_fmt_p(_33213_b,_32913_i)))) { goto _case_end_4704533216; }
			_case_begin_4704533216:;
			{
				_32028_lit = _1d215b155_float_fmt_p(_32013_txt,_32913_i);
				return _32028_lit;
			}
			goto _match_end_4704532736;
			_case_end_4704533216:;
			if (!((_1d215b155_is_float_fmt_dotnp(_32013_txt,_32913_i)))) { goto _case_end_4704533344; }
			_case_begin_4704533344:;
			{
				_32028_lit = _1d215b155_float_fmt_dotnp(_32013_txt,_32913_i);
				return _32028_lit;
			}
			goto _match_end_4704532736;
			_case_end_4704533344:;
			if (!(((!(_1d1da4277_is_hex(_33213_b)))))) { goto _case_end_4704533472; }
			_case_begin_4704533472:;
			{
				goto _iter_end_4704529680;
			}
			goto _match_end_4704532736;
			_case_end_4704533472:;
			_match_end_4704532736:;
		}
	}
	_iter_next_4704529680:;
	(_32913_i)++;
	goto _iter_begin_4704529680;
	_iter_end_4704529680:;
	if (_32913_i == 2LL) {
		return _32028_lit;
	}
	_32028_lit = static_cast<jule::Str>(_32013_txt.slice(0LL,static_cast<jule::Int>(_32913_i)));
	return _32028_lit;
}



inline jule::Str _1d215b155_hex_escape(jule::Slice<jule::U8>& _35716_txt,jule::Int _35729_n) {
	jule::Str _35739_seq = jule::Str();
	if (_35716_txt.len() < _35729_n) {
		return _35739_seq;
	}
	
	jule::Int _36313_i = 2LL;
	_iter_begin_4704546208:;
	if (!(_36313_i < _35729_n)) { goto _iter_end_4704546208; }
	{
		if ((!(_1d1da4277_is_hex(_35716_txt[static_cast<jule::Int>(_36313_i)])))) {
			return _35739_seq;
		}
	}
	_iter_next_4704546208:;
	(_36313_i)++;
	goto _iter_begin_4704546208;
	_iter_end_4704546208:;
	_35739_seq=static_cast<jule::Str>(_35716_txt.slice(0LL,static_cast<jule::Int>(_35729_n)));
	return _35739_seq;
}



inline jule::Str _1d215b155_big_unicode_point_escape(jule::Slice<jule::U8>& _37530_txt) {
	return _1d215b155_hex_escape(_37530_txt,10LL);
}



inline jule::Str _1d215b155_little_unicode_point_escape(jule::Slice<jule::U8>& _37733_txt) {
	return _1d215b155_hex_escape(_37733_txt,6LL);
}



inline jule::Str _1d215b155_hex_byte_escape(jule::Slice<jule::U8>& _37921_txt) {
	return _1d215b155_hex_escape(_37921_txt,4LL);
}



inline jule::Str _1d215b155_byte_escape(jule::Slice<jule::U8>& _38217_txt) {
	jule::Str _38232_seq = jule::Str();
	if (_38217_txt.len() < 4LL) {
		return _38232_seq;
	}
	if (((!(_1d1da4277_is_octal(_38217_txt[1LL]))) || (!(_1d1da4277_is_octal(_38217_txt[2LL])))) || (!(_1d1da4277_is_octal(_38217_txt[3LL])))) {
		return _38232_seq;
	}
	_38232_seq = static_cast<jule::Str>(_38217_txt.slice(0LL,4LL));
	return _38232_seq;
}



inline jule::Slice<_1d0557e9e_Log> _1d215b155_lex(jule::Ref<_1d1ee01b5_File> _77816_f) {
	if ((!(jule::real(_77816_f)))) {
		return nullptr;
	}
	_1d215b155_Lex _78313_lex = _1d215b155_Lex(jule::Slice<_1d1da4277_Token>(),_77816_f,0LL,jule::Int(),-1LL,jule::Slice<_1d0557e9e_Log>());
	_78313_lex._method_new_line();
	_78313_lex._method_lex();
	if (_78313_lex._field_errors.len() > 0LL) {
		return _78313_lex._field_errors;
	}
	_77816_f->_field__tokens=_78313_lex._field_tokens;
	return nullptr;
}



inline jule::Ref<_1d1ee1617_FileInfo> _1d1ee1617_parse_file(jule::Ref<_1d1ee01b5_File> _2223_f) {
	if ((!(jule::real(_2223_f)))) {
		return jule::new_ref<_1d1ee1617_FileInfo>();
	}
	jule::Ref<_1d1ee1617_FileInfo> _2713_finf = jule::new_struct<_1d1ee1617_FileInfo>(new( std::nothrow ) _1d1ee1617_FileInfo());
	std::tie(_2713_finf->_field_ast,_2713_finf->_field_errors) = _1d1ee1617_parse_fileset(_2223_f);
	if (_2713_finf->_field_errors.len() > 0LL) {
		jule::drop(_2713_finf->_field_ast);
	}
	return _2713_finf;
}



inline jule::Ref<_1d1ee1617_PackageInfo> _1d1ee1617_parse_package(jule::Slice<jule::Ref<_1d1ee01b5_File>> _3926_filesets) {
	if (_3926_filesets == nullptr) {
		return jule::new_ref<_1d1ee1617_PackageInfo>();
	}
	jule::Ref<_1d1ee1617_PackageInfo> _4413_pinf = jule::new_struct<_1d1ee1617_PackageInfo>(new( std::nothrow ) _1d1ee1617_PackageInfo());
	_4413_pinf->_field_files=jule::Slice<jule::Ref<_1d1ee1617_FileInfo>>::alloc(0LL,static_cast<jule::Int>(static_cast<jule::I64>(_3926_filesets.len())));
	{
		auto _range_expr = _3926_filesets;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d1ee01b5_File> _1d1ee1617_f = *_range_begin;
			_iter_begin_4705296528:;
			{
				if ((!(jule::real(_1d1ee1617_f)))) {
					goto _iter_next_4705296528;
				}
				jule::Ref<_1d1ee1617_FileInfo> _5117_finfo = _1d1ee1617_parse_file(_1d1ee1617_f);
				_4413_pinf->_field_files=jule::append(_4413_pinf->_field_files,jule::Slice<jule::Ref<_1d1ee1617_FileInfo>>({_5117_finfo}));
			}
			_iter_next_4705296528:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d1ee1617_f = *_range_begin; goto _iter_begin_4705296528; }
			_iter_end_4705296528:;
		}
	}
	return _4413_pinf;
}



inline std::tuple<jule::Ref<_1d21640e7_Ast>,jule::Slice<_1d0557e9e_Log>> _1d1ee1617_parse_fileset(jule::Ref<_1d1ee01b5_File> _5822_f) {
	jule::Ref<_1d21abb45_Parser> _5913_p = jule::new_struct<_1d21abb45_Parser>(new( std::nothrow ) _1d21abb45_Parser());
	_5913_p->_method_parse(_5822_f);
	return std::make_tuple(_5913_p->_field_ast,_5913_p->_field_errors);
}



inline jule::Ref<_1d1e5192e_ScopeTree> _1d21a4698_new_scope(void) {
	return jule::new_struct<_1d1e5192e_ScopeTree>(new( std::nothrow ) _1d1e5192e_ScopeTree());
}



inline std::tuple<jule::Bool,jule::Bool> _1d21a4698_is_st(_1d1da4277_Token _4410_current,_1d1da4277_Token _4426_prev) {
	jule::Bool _4441_ok = jule::Bool();
	jule::Bool _4451_terminated = jule::Bool();
	_4441_ok=(_4410_current._field_id == 5LLU) || (_4426_prev._field_row < _4410_current._field_row);
	_4451_terminated=_4410_current._field_id == 5LLU;
	return std::make_tuple(_4441_ok,_4451_terminated);
}



inline jule::Bool _1d21a4698_prev_is_incomplete_binary_expr(jule::Slice<_1d1da4277_Token>& _5036_tokens,jule::Int& _5054_i) {
	if ((_5054_i > 1LL) && (_5036_tokens[static_cast<jule::Int>(_5054_i - 2LL)]._field_id == 23LLU)) {
		return false;
	}
	{
		_1d1da4277_Token* _5713_prev = (&(_5036_tokens[static_cast<jule::Int>(_5054_i - 1LL)]));
		return ((_5713_prev->_field_id == 7LLU) && _1d1da4277_is_bin_op(_5713_prev->_field_kind)) && (_5713_prev->_field_row < _5036_tokens[static_cast<jule::Int>(_5054_i)]._field_row);
	}
}



inline std::tuple<jule::Int,jule::Bool> _1d21a4698_next_st_pos(jule::Slice<_1d1da4277_Token>& _6517_tokens,jule::Int _6534_start) {
	jule::Int _6613_brace_n = 0LL;
	jule::Int _6713_i = _6534_start;
	_iter_begin_4705325232:;
	if (!(_6713_i < _6517_tokens.len())) { goto _iter_end_4705325232; }
	{
		jule::Bool _6917_ok = false;
		jule::Bool _7017_terminated = false;
		_1d1da4277_Token _7113_tok = _6517_tokens[static_cast<jule::Int>(_6713_i)];
		{
			auto _match_expr{ _7113_tok._field_id };
			if (!((3LLU) == _match_expr)) { goto _case_end_4705331264; }
			_case_begin_4705331264:;
			{
				{
					auto _match_expr{ _7113_tok._field_kind };
					if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4705339536; }
					_case_begin_4705339536:;
					{
						if ((_6613_brace_n == 0LL) && (_6713_i > _6534_start)) {
							if ((!(_1d21a4698_prev_is_incomplete_binary_expr(_6517_tokens,_6713_i)))) {
								std::tie(_6917_ok,_7017_terminated) = _1d21a4698_is_st(_7113_tok,_6517_tokens[static_cast<jule::Int>(_6713_i - 1LL)]);
								if (_6917_ok) {
									goto _julec_label_return;
								}
							}
						}
						(_6613_brace_n)++;
					}
					goto _match_end_4705331776;
					_case_end_4705339536:;
					_case_begin_4705332896:;
					{
						(_6613_brace_n)--;
						if ((_6613_brace_n == 0LL) && ((_6713_i + 1LL) < _6517_tokens.len())) {
							std::tie(_6917_ok,_7017_terminated) = _1d21a4698_is_st(_6517_tokens[static_cast<jule::Int>(_6713_i + 1LL)],_7113_tok);
							if (_6917_ok) {
								(_6713_i)++;
								goto _julec_label_return;
							}
						}
					}
					goto _match_end_4705331776;
					_case_end_4705332896:;
					_match_end_4705331776:;
				}
				goto _iter_next_4705325232;
			}
			goto _match_end_4705329120;
			_case_end_4705331264:;
			_match_end_4705329120:;
		}
		if (_6613_brace_n != 0LL) {
			goto _iter_next_4705325232;
		}
		if (_6713_i > _6534_start) {
			if (_1d21a4698_prev_is_incomplete_binary_expr(_6517_tokens,_6713_i)) {
				goto _iter_next_4705325232;
			}
			std::tie(_6917_ok,_7017_terminated) = _1d21a4698_is_st(_7113_tok,_6517_tokens[static_cast<jule::Int>(_6713_i - 1LL)]);
		} else {
			std::tie(_6917_ok,_7017_terminated) = _1d21a4698_is_st(_7113_tok,_7113_tok);
		}
		if ((!(_6917_ok))) {
			goto _iter_next_4705325232;
		}
		_julec_label_return:;
		if (_7017_terminated) {
			(_6713_i)++;
		}
		return std::make_tuple(_6713_i,_7017_terminated);
	}
	_iter_next_4705325232:;
	(_6713_i)++;
	goto _iter_begin_4705325232;
	_iter_end_4705325232:;
	return std::make_tuple(_6713_i,false);
}



inline std::tuple<jule::Slice<_1d1da4277_Token>,jule::Bool> _1d21a4698_skip_st(jule::Int& _12817_i,jule::Slice<_1d1da4277_Token> _12829_tokens) {
	jule::Int _1299_start = _12817_i;
	jule::Bool _13013_terminated = false;
	std::tie(_12817_i,_13013_terminated) = _1d21a4698_next_st_pos(_12829_tokens,_1299_start);
	jule::Slice<_1d1da4277_Token> _13213_st_tokens = _12829_tokens.slice(static_cast<jule::Int>(_1299_start),static_cast<jule::Int>(_12817_i));
	if (_13013_terminated) {
		if (_13213_st_tokens.len() == 1LL) {
			std::tie(_13213_st_tokens,_13013_terminated) = _1d21a4698_skip_st(_12817_i,_12829_tokens);
			return std::make_tuple(_13213_st_tokens,_13013_terminated);
		}
		_13213_st_tokens=_13213_st_tokens.slice(0LL,static_cast<jule::Int>(_13213_st_tokens.len() - 1LL));
	}
	return std::make_tuple(_13213_st_tokens,_13013_terminated);
}



inline jule::Slice<jule::Ref<_1d21a4698_Stmt>> _1d21a4698_split_stms(jule::Slice<_1d1da4277_Token>& _15020_tokens) {
	jule::Slice<jule::Ref<_1d21a4698_Stmt>> _15113_stms = nullptr;
	jule::Int _15213_pos = 0LL;
	_iter_begin_4705368608:;
	if (!(_15213_pos < _15020_tokens.len())) { goto _iter_end_4705368608; }
	{
		jule::Slice<_1d1da4277_Token> _15418_tokens;
		jule::Bool _15426_terminated;
		std::tie(_15418_tokens,_15426_terminated) = _1d21a4698_skip_st(_15213_pos,_15020_tokens);
		_15113_stms=jule::append(_15113_stms,jule::Slice<jule::Ref<_1d21a4698_Stmt>>({jule::new_struct<_1d21a4698_Stmt>(new( std::nothrow ) _1d21a4698_Stmt(_15418_tokens,_15426_terminated))}));
	}
	_iter_next_4705368608:;
	goto _iter_begin_4705368608;
	_iter_end_4705368608:;
	return _15113_stms;
}



inline jule::Slice<_1d1da4277_Token> _1d21b6e08_is_fn_call(jule::Slice<_1d1da4277_Token>& _4020_tokens) {
	{
		auto _match_expr{ _4020_tokens[0LL]._field_id };
		if (!((3LLU) == _match_expr || (2LLU) == _match_expr || (1LLU) == _match_expr)) { goto _case_end_4705379504; }
		goto _match_end_4705368000;
		_case_end_4705379504:;
		_case_begin_4705372320:;
		{
			_1d1da4277_Token _4813_tok = _4020_tokens[static_cast<jule::Int>(_4020_tokens.len() - 1LL)];
			if ((_4813_tok._field_id != 3LLU) && (_4813_tok._field_kind != jule::Str(")", 1))) {
				return nullptr;
			}
		}
		goto _match_end_4705368000;
		_case_end_4705372320:;
		_match_end_4705368000:;
	}
	_1d1da4277_Token _5313_tok = _4020_tokens[static_cast<jule::Int>(_4020_tokens.len() - 1LL)];
	if ((_5313_tok._field_id != 3LLU) || (_5313_tok._field_kind != jule::Str(")", 1))) {
		return nullptr;
	}
	jule::Int _5713_brace_n = 0LL;
	jule::I64 _6013_i = _4020_tokens.len() - 1LL;
	_iter_begin_4705383552:;
	if (!(_6013_i >= 1LL)) { goto _iter_end_4705383552; }
	{
		_5313_tok=_4020_tokens[static_cast<jule::Int>(_6013_i)];
		if (_5313_tok._field_id == 3LLU) {
			{
				auto _match_expr{ _5313_tok._field_kind };
				if (!((jule::Str(")", 1)) == _match_expr)) { goto _case_end_4705388784; }
				_case_begin_4705388784:;
				{
					(_5713_brace_n)++;
				}
				goto _match_end_4705388080;
				_case_end_4705388784:;
				if (!((jule::Str("(", 1)) == _match_expr)) { goto _case_end_4705388896; }
				_case_begin_4705388896:;
				{
					(_5713_brace_n)--;
				}
				goto _match_end_4705388080;
				_case_end_4705388896:;
				_match_end_4705388080:;
			}
			if (_5713_brace_n == 0LL) {
				return _4020_tokens.slice(0LL,static_cast<jule::Int>(_6013_i));
			}
		}
	}
	_iter_next_4705383552:;
	(_6013_i)--;
	goto _iter_begin_4705383552;
	_iter_end_4705383552:;
	return nullptr;
}



inline jule::Ref<_1d21b6e08_CallData> _1d21b6e08_get_call_data(jule::Slice<_1d1da4277_Token>& _8223_tokens) {
	jule::Ref<_1d21b6e08_CallData> _8313_data = jule::new_struct<_1d21b6e08_CallData>(new( std::nothrow ) _1d21b6e08_CallData());
	std::tie(_8313_data->_field_expr_tokens,_8313_data->_field_args_tokens) = _1d21abb45_range_last(_8223_tokens);
	if (_8313_data->_field_expr_tokens.len() == 0LL) {
		return _8313_data;
	}
	_1d1da4277_Token _909_token = _8313_data->_field_expr_tokens[static_cast<jule::Int>(_8313_data->_field_expr_tokens.len() - 1LL)];
	if ((_909_token._field_id == 3LLU) && (_909_token._field_kind == jule::Str("]", 1))) {
		std::tie(_8313_data->_field_expr_tokens,_8313_data->_field_generics_tokens) = _1d21abb45_range_last(_8313_data->_field_expr_tokens);
	}
	return _8313_data;
}



inline jule::Slice<_1d1da4277_Token> _1d21b6e08_get_block_expr(jule::Slice<_1d1da4277_Token>& _9824_tokens) {
	jule::Int _9913_brace_n = 0LL;
	{
		auto _range_expr = _9824_tokens;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1d21b6e08_i = 0;
			_1d1da4277_Token _1d21b6e08_tok = *_range_begin;
			_iter_begin_4705402736:;
			{
				if (_1d21b6e08_tok._field_id == 3LLU) {
					{
						auto _match_expr{ _1d21b6e08_tok._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr)) { goto _case_end_4705407088; }
						_case_begin_4705407088:;
						{
							if (_9913_brace_n > 0LL) {
								(_9913_brace_n)++;
								goto _match_end_4705405504;
							}
							return _9824_tokens.slice(0LL,static_cast<jule::Int>(_1d21b6e08_i));
						}
						goto _match_end_4705405504;
						_case_end_4705407088:;
						if (!((jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4705407440; }
						_case_begin_4705407440:;
						{
							(_9913_brace_n)++;
						}
						goto _match_end_4705405504;
						_case_end_4705407440:;
						_case_begin_4705406288:;
						{
							(_9913_brace_n)--;
						}
						goto _match_end_4705405504;
						_case_end_4705406288:;
						_match_end_4705405504:;
					}
				}
			}
			_iter_next_4705402736:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1d21b6e08_i; _1d21b6e08_tok = *_range_begin; goto _iter_begin_4705402736; }
			_iter_end_4705402736:;
		}
	}
	return nullptr;
}



inline std::tuple<jule::Slice<_1d1da4277_Token>,jule::Slice<_1d1da4277_Token>> _1d21b6e08_split_colon(jule::Slice<_1d1da4277_Token>& _12421_tokens) {
	jule::Int _12513_range_n = 0LL;
	{
		auto _range_expr = _12421_tokens;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1d21b6e08_i = 0;
			_1d1da4277_Token _1d21b6e08_token = *_range_begin;
			_iter_begin_4705410832:;
			{
				{
					auto _match_expr{ _1d21b6e08_token._field_id };
					if (!((3LLU) == _match_expr)) { goto _case_end_4705413648; }
					_case_begin_4705413648:;
					{
						{
							auto _match_expr{ _1d21b6e08_token._field_kind };
							if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4705416256; }
							_case_begin_4705416256:;
							{
								(_12513_range_n)++;
								goto _iter_next_4705410832;
							}
							goto _match_end_4705414320;
							_case_end_4705416256:;
							_case_begin_4705415440:;
							{
								(_12513_range_n)--;
							}
							goto _match_end_4705414320;
							_case_end_4705415440:;
							_match_end_4705414320:;
						}
					}
					goto _match_end_4705412816;
					_case_end_4705413648:;
					if (!((11LLU) == _match_expr)) { goto _case_end_4705413760; }
					_case_begin_4705413760:;
					{
						if (_12513_range_n < 1LL) {
							jule::Slice<_1d1da4277_Token> _14225_l = _12421_tokens.slice(0LL,static_cast<jule::Int>(_1d21b6e08_i));
							jule::Slice<_1d1da4277_Token> _14325_r = _12421_tokens.slice(static_cast<jule::Int>(_1d21b6e08_i + 1LL));
							return std::make_tuple(_14225_l,_14325_r);
						}
					}
					goto _match_end_4705412816;
					_case_end_4705413760:;
					_match_end_4705412816:;
				}
			}
			_iter_next_4705410832:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1d21b6e08_i; _1d21b6e08_token = *_range_begin; goto _iter_begin_4705410832; }
			_iter_end_4705410832:;
		}
	}
	return std::make_tuple(nullptr,nullptr);
}



inline jule::Slice<_1d1da4277_Token> _1d21b6e08_eliminate_comments(jule::Slice<_1d1da4277_Token>& _18228_tokens) {
	jule::Slice<_1d1da4277_Token> _18313_cutted = nullptr;
	{
		auto _range_expr = _18228_tokens;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			_1d1da4277_Token _1d21b6e08_token = *_range_begin;
			_iter_begin_4705425008:;
			{
				if (_1d21b6e08_token._field_id != 18LLU) {
					_18313_cutted=jule::append(_18313_cutted,jule::Slice<_1d1da4277_Token>({_1d21b6e08_token}));
				}
			}
			_iter_next_4705425008:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d21b6e08_token = *_range_begin; goto _iter_begin_4705425008; }
			_iter_end_4705425008:;
		}
	}
	return _18313_cutted;
}



inline jule::Int _1d21b6e08_find_lowest_prec_op(jule::Slice<_1d1da4277_Token>& _19425_tokens) {
	_1d21b6e08_Precedencer _19513_prec = _1d21b6e08_Precedencer();
	jule::Int _19613_brace_n = 0LL;
	{
		auto _range_expr = _19425_tokens;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1d21b6e08_i = 0;
			_1d1da4277_Token _1d21b6e08_token = *_range_begin;
			_iter_begin_4705432416:;
			{
				{
					if (!((_1d21b6e08_token._field_id == 3LLU))) { goto _case_end_4705434944; }
					_case_begin_4705434944:;
					{
						{
							auto _match_expr{ _1d21b6e08_token._field_kind };
							if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr)) { goto _case_end_4705438272; }
							_case_begin_4705438272:;
							{
								(_19613_brace_n)++;
							}
							goto _match_end_4705436304;
							_case_end_4705438272:;
							_case_begin_4705436560:;
							{
								(_19613_brace_n)--;
							}
							goto _match_end_4705436304;
							_case_end_4705436560:;
							_match_end_4705436304:;
						}
						goto _iter_next_4705432416;
					}
					goto _match_end_4705434672;
					_case_end_4705434944:;
					if (!((_1d21b6e08_i == 0LL))) { goto _case_end_4705435072; }
					_case_begin_4705435072:;
					{
						goto _iter_next_4705432416;
					}
					goto _match_end_4705434672;
					_case_end_4705435072:;
					if (!((_1d21b6e08_token._field_id != 7LLU))) { goto _case_end_4705435200; }
					_case_begin_4705435200:;
					{
						goto _iter_next_4705432416;
					}
					goto _match_end_4705434672;
					_case_end_4705435200:;
					if (!((_19613_brace_n > 0LL))) { goto _case_end_4705435328; }
					_case_begin_4705435328:;
					{
						goto _iter_next_4705432416;
					}
					goto _match_end_4705434672;
					_case_end_4705435328:;
					_match_end_4705434672:;
				}
				_1d1da4277_Token _22113_left = _19425_tokens[static_cast<jule::Int>(_1d21b6e08_i - 1LL)];
				if ((_22113_left._field_id == 7LLU) || (_22113_left._field_id == 11LLU)) {
					goto _iter_next_4705432416;
				}
				if (((_1d21b6e08_i > 1LL) && (_22113_left._field_id == 3LLU)) && (_22113_left._field_kind == jule::Str("]", 1))) {
					_1d1da4277_Token _22917_lleft = _19425_tokens[static_cast<jule::Int>(_1d21b6e08_i - 2LL)];
					if ((_22917_lleft._field_id == 3LLU) && (_22917_lleft._field_kind == jule::Str("[", 1))) {
						if ((_1d21b6e08_token._field_kind == jule::Str("&", 1)) || (_1d21b6e08_token._field_kind == jule::Str("*", 1))) {
							goto _iter_next_4705432416;
						}
					}
				}
				jule::Int _23813_p = _1d21b6e08_token._method_prec();
				if (_23813_p != -1LL) {
					_19513_prec._method_set(_23813_p,jule::Any(_1d21b6e08_i));
				}
			}
			_iter_next_4705432416:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1d21b6e08_i; _1d21b6e08_token = *_range_begin; goto _iter_begin_4705432416; }
			_iter_end_4705432416:;
		}
	}
	jule::Any _2449_data = _19513_prec._method_get_lower();
	if (_2449_data == nullptr) {
		return -1LL;
	}
	return _2449_data.operator jule::Int();
}



inline jule::Ref<_1d1e5192e_IdentExpr> _1d21b6e08_build_ident_expr(_1d1da4277_Token& _25126_token) {
	return jule::new_struct<_1d1e5192e_IdentExpr>(new( std::nothrow ) _1d1e5192e_IdentExpr(_25126_token,_25126_token._field_kind,false));
}



inline std::tuple<jule::Slice<_1d1da4277_Token>,jule::Int> _1d21b6e08_get_range_expr_tokens(jule::Slice<_1d1da4277_Token>& _25931_tokens) {
	jule::Int _26013_range_n = 0LL;
	jule::I64 _26113_i = _25931_tokens.len() - 1LL;
	_iter_begin_4705462080:;
	if (!(_26113_i >= 0LL)) { goto _iter_end_4705462080; }
	{
		_1d1da4277_Token _26313_tok = _25931_tokens[static_cast<jule::Int>(_26113_i)];
		if (_26313_tok._field_id == 3LLU) {
			{
				auto _match_expr{ _26313_tok._field_kind };
				if (!((jule::Str("}", 1)) == _match_expr || (jule::Str("]", 1)) == _match_expr || (jule::Str(")", 1)) == _match_expr)) { goto _case_end_4705468128; }
				_case_begin_4705468128:;
				{
					(_26013_range_n)++;
				}
				goto _match_end_4705466544;
				_case_end_4705468128:;
				_case_begin_4705467328:;
				{
					(_26013_range_n)--;
				}
				goto _match_end_4705466544;
				_case_end_4705467328:;
				_match_end_4705466544:;
			}
		}
		if (_26013_range_n == 0LL) {
			return std::make_tuple(_25931_tokens.slice(0LL,static_cast<jule::Int>(_26113_i)),_26013_range_n);
		}
	}
	_iter_next_4705462080:;
	(_26113_i)--;
	goto _iter_begin_4705462080;
	_iter_end_4705462080:;
	return std::make_tuple(nullptr,_26013_range_n);
}



inline jule::Bool _1d21bd937_check_assign_tokens(jule::Slice<_1d1da4277_Token>& _1625_tokens) {
	if ((_1625_tokens.len() == 0LL) || (!(_1d1da4277_is_assign(_1625_tokens[0LL]._field_id)))) {
		return false;
	}
	jule::Int _2113_brace_n = 0LL;
	{
		auto _range_expr = _1625_tokens;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			_1d1da4277_Token _1d21bd937_t = *_range_begin;
			_iter_begin_4705475632:;
			{
				if (_1d21bd937_t._field_id == 3LLU) {
					{
						auto _match_expr{ _1d21bd937_t._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4705479424; }
						_case_begin_4705479424:;
						{
							(_2113_brace_n)++;
						}
						goto _match_end_4705477840;
						_case_end_4705479424:;
						_case_begin_4705478624:;
						{
							(_2113_brace_n)--;
						}
						goto _match_end_4705477840;
						_case_end_4705478624:;
						_match_end_4705477840:;
					}
				}
				if (_2113_brace_n < 0LL) {
					return false;
				} else if (_2113_brace_n > 0LL) {
					goto _iter_next_4705475632;
				} else if ((_1d21bd937_t._field_id == 7LLU) && _1d1da4277_is_assign_op(_1d21bd937_t._field_kind)) {
					return true;
				}
			}
			_iter_next_4705475632:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d21bd937_t = *_range_begin; goto _iter_begin_4705475632; }
			_iter_end_4705475632:;
		}
	}
	return false;
}



inline _1d0557e9e_Log _1d21abb45_make_err(jule::Int _5113_row,jule::Int _5123_col,jule::Ref<_1d1ee01b5_File>& _5134_f,jule::Str _5144_fmt,jule::Slice<jule::Any> _5157_args) {
	return _1d0557e9e_Log(1LLU,_5113_row,_5123_col,_5134_f->_method_path(),_1d0557e9e_logf(_5144_fmt,_5157_args),jule::Str(),jule::Str());
}



inline jule::Slice<_1d1da4277_Token> _1d21abb45_range(jule::Int& _7015_i,jule::Str _7023_open,jule::Str _7040_close,jule::Slice<_1d1da4277_Token>& _7063_tokens) {
	if (_7015_i >= _7063_tokens.len()) {
		return nullptr;
	}
	_1d1da4277_Token _759_tok = _7063_tokens[static_cast<jule::Int>(_7015_i)];
	if ((_759_tok._field_id != 3LLU) || (_759_tok._field_kind != _7023_open)) {
		return nullptr;
	}
	(_7015_i)++;
	jule::Int _8113_range_n = 1LL;
	jule::Int _829_start = _7015_i;
	_iter_begin_4705496512:;
	if (!((_8113_range_n != 0LL) && (_7015_i < _7063_tokens.len()))) { goto _iter_end_4705496512; }
	{
		_1d1da4277_Token _8413_token = _7063_tokens[static_cast<jule::Int>(_7015_i)];
		if (_8413_token._field_id == 3LLU) {
			{
				auto _match_expr{ _8413_token._field_kind };
				if (!((_7023_open) == _match_expr)) { goto _case_end_4705502064; }
				_case_begin_4705502064:;
				{
					(_8113_range_n)++;
				}
				goto _match_end_4705501232;
				_case_end_4705502064:;
				if (!((_7040_close) == _match_expr)) { goto _case_end_4705502176; }
				_case_begin_4705502176:;
				{
					(_8113_range_n)--;
				}
				goto _match_end_4705501232;
				_case_end_4705502176:;
				_match_end_4705501232:;
			}
		}
	}
	_iter_next_4705496512:;
	(_7015_i)++;
	goto _iter_begin_4705496512;
	_iter_end_4705496512:;
	return _7063_tokens.slice(static_cast<jule::Int>(_829_start),static_cast<jule::Int>(_7015_i - 1LL));
}



inline std::tuple<jule::Slice<_1d1da4277_Token>,jule::Slice<_1d1da4277_Token>> _1d21abb45_range_last(jule::Slice<_1d1da4277_Token>& _10320_tokens) {
	jule::Slice<_1d1da4277_Token> _10339_cutted = jule::Slice<_1d1da4277_Token>();
	jule::Slice<_1d1da4277_Token> _10356_cut = jule::Slice<_1d1da4277_Token>();
	if (_10320_tokens.len() == 0LL) {
		_10339_cutted = _10320_tokens;
		_10356_cut = nullptr;
		return std::make_tuple(_10339_cutted,_10356_cut);
	} else if (_10320_tokens[static_cast<jule::Int>(_10320_tokens.len() - 1LL)]._field_id != 3LLU) {
		_10339_cutted = _10320_tokens;
		_10356_cut = nullptr;
		return std::make_tuple(_10339_cutted,_10356_cut);
	}
	jule::Int _11013_brace_n = 0LL;
	jule::I64 _11113_i = _10320_tokens.len() - 1LL;
	_iter_begin_4705504304:;
	if (!(_11113_i >= 0LL)) { goto _iter_end_4705504304; }
	{
		_1d1da4277_Token _11313_token = _10320_tokens[static_cast<jule::Int>(_11113_i)];
		if (_11313_token._field_id == 3LLU) {
			{
				auto _match_expr{ _11313_token._field_kind };
				if (!((jule::Str("}", 1)) == _match_expr || (jule::Str("]", 1)) == _match_expr || (jule::Str(")", 1)) == _match_expr)) { goto _case_end_4705518560; }
				_case_begin_4705518560:;
				{
					(_11013_brace_n)++;
					goto _iter_next_4705504304;
				}
				goto _match_end_4705516976;
				_case_end_4705518560:;
				_case_begin_4705517760:;
				{
					(_11013_brace_n)--;
				}
				goto _match_end_4705516976;
				_case_end_4705517760:;
				_match_end_4705516976:;
			}
		}
		if (_11013_brace_n == 0LL) {
			_10339_cutted = _10320_tokens.slice(0LL,static_cast<jule::Int>(_11113_i));
			_10356_cut = _10320_tokens.slice(static_cast<jule::Int>(_11113_i));
			return std::make_tuple(_10339_cutted,_10356_cut);
		}
	}
	_iter_next_4705504304:;
	(_11113_i)--;
	goto _iter_begin_4705504304;
	_iter_end_4705504304:;
	_10339_cutted = _10320_tokens;
	_10356_cut = nullptr;
	return std::make_tuple(_10339_cutted,_10356_cut);
}



inline std::tuple<jule::Slice<jule::Slice<_1d1da4277_Token>>,jule::Slice<_1d0557e9e_Log>> _1d21abb45_parts(jule::Slice<_1d1da4277_Token>& _14115_tokens,jule::Uint _14132_id,jule::Bool _14145_expr_must) {
	if (_14115_tokens.len() == 0LL) {
		return std::make_tuple(nullptr,nullptr);
	}
	jule::Slice<jule::Slice<_1d1da4277_Token>> _14613_parts = nullptr;
	jule::Slice<_1d0557e9e_Log> _14713_errors = nullptr;
	jule::Int _14913_range_n = 0LL;
	jule::Int _15013_last = 0LL;
	{
		auto _range_expr = _14115_tokens;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1d21abb45_i = 0;
			_1d1da4277_Token _1d21abb45_token = *_range_begin;
			_iter_begin_4705532304:;
			{
				if (_1d21abb45_token._field_id == 3LLU) {
					{
						auto _match_expr{ _1d21abb45_token._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4705536704; }
						_case_begin_4705536704:;
						{
							(_14913_range_n)++;
							goto _iter_next_4705532304;
						}
						goto _match_end_4705535120;
						_case_end_4705536704:;
						_case_begin_4705535904:;
						{
							(_14913_range_n)--;
						}
						goto _match_end_4705535120;
						_case_end_4705535904:;
						_match_end_4705535120:;
					}
				}
				if (_14913_range_n > 0LL) {
					goto _iter_next_4705532304;
				}
				if (_1d21abb45_token._field_id == _14132_id) {
					if (_14145_expr_must && ((_1d21abb45_i - _15013_last) <= 0LL)) {
						_1d0557e9e_Log _17021_err = _1d21abb45_make_err(_1d21abb45_token._field_row,_1d21abb45_token._field_column,_1d21abb45_token._field_file,jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
						_14713_errors=jule::append(_14713_errors,jule::Slice<_1d0557e9e_Log>({_17021_err}));
					}
					_14613_parts=jule::append(_14613_parts,jule::Slice<jule::Slice<_1d1da4277_Token>>({_14115_tokens.slice(static_cast<jule::Int>(_15013_last),static_cast<jule::Int>(_1d21abb45_i))}));
					_15013_last=static_cast<jule::Int>(_1d21abb45_i + 1LL);
				}
			}
			_iter_next_4705532304:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1d21abb45_i; _1d21abb45_token = *_range_begin; goto _iter_begin_4705532304; }
			_iter_end_4705532304:;
		}
	}
	if (_15013_last < _14115_tokens.len()) {
		_14613_parts=jule::append(_14613_parts,jule::Slice<jule::Slice<_1d1da4277_Token>>({_14115_tokens.slice(static_cast<jule::Int>(_15013_last))}));
	} else if ((!(_14145_expr_must))) {
		_14613_parts=jule::append(_14613_parts,jule::Slice<jule::Slice<_1d1da4277_Token>>({jule::Slice<_1d1da4277_Token>({})}));
	}
	return std::make_tuple(_14613_parts,_14713_errors);
}



inline jule::Str _1d21abb45_get_close_kind_of_brace(jule::Str _18728_left) {
	{
		auto _match_expr{ _18728_left };
		if (!((jule::Str(")", 1)) == _match_expr)) { goto _case_end_4705550432; }
		_case_begin_4705550432:;
		{
			return jule::Str("(", 1);
		}
		goto _match_end_4705546512;
		_case_end_4705550432:;
		if (!((jule::Str("}", 1)) == _match_expr)) { goto _case_end_4705550544; }
		_case_begin_4705550544:;
		{
			return jule::Str("{", 1);
		}
		goto _match_end_4705546512;
		_case_end_4705550544:;
		if (!((jule::Str("]", 1)) == _match_expr)) { goto _case_end_4705550656; }
		_case_begin_4705550656:;
		{
			return jule::Str("[", 1);
		}
		goto _match_end_4705546512;
		_case_end_4705550656:;
		_case_begin_4705546880:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4705546512;
		_case_end_4705546880:;
		_match_end_4705546512:;
	}
}



inline _1d0557e9e_Log _1d21abb45_compiler_err(_1d1da4277_Token& _19618_token,jule::Str& _19633_fmt,jule::Slice<jule::Any> _19646_args) {
	return _1d0557e9e_Log(1LLU,_19618_token._field_row,_19618_token._field_column,_19618_token._field_file->_method_path(),_1d0557e9e_logf(_19633_fmt,_19646_args),_19618_token._field_file->_method_get_row(_19618_token._field_row),jule::Str());
}



inline void _1d21abb45_push_suggestion(_1d0557e9e_Log* _20731_log,jule::Str _20742_fmt,jule::Slice<jule::Any> _20755_args) {
	_20731_log->_field_suggestion=_1d0557e9e_logf(_20742_fmt,_20755_args);
}



inline jule::Ref<_1d1e5192e_Comment> _1d21abb45_build_comment(_1d1da4277_Token& _21123_token) {
	_21123_token._field_kind=_21123_token._field_kind.slice(2LL).trim(jule::Str(" \n\r\t\v", 5));
	return jule::new_struct<_1d1e5192e_Comment>(new( std::nothrow ) _1d1e5192e_Comment(_21123_token,_21123_token._field_kind));
}



inline jule::Str _1d21abb45_tokstoa(jule::Slice<_1d1da4277_Token>& _22013_tokens) {
	jule::Str _22113_s = jule::Str("", 0);
	{
		auto _range_expr = _22013_tokens;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			_1d1da4277_Token _1d21abb45_token = *_range_begin;
			_iter_begin_4705566352:;
			{
				_22113_s+=_1d21abb45_token._field_kind;
			}
			_iter_next_4705566352:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d21abb45_token = *_range_begin; goto _iter_begin_4705566352; }
			_iter_end_4705566352:;
		}
	}
	return _22113_s;
}



inline jule::Ref<_1d1e5192e_TypeDecl> _1b87d0ddc_build_void_type(void) {
	return jule::new_struct<_1d1e5192e_TypeDecl>(new( std::nothrow ) _1d1e5192e_TypeDecl());
}



inline jule::Ref<_1d1e5192e_TypeDecl> _1b87d0ddc_build_prim_type(_1d1da4277_Token _2024_token) {
	return jule::new_struct<_1d1e5192e_TypeDecl>(new( std::nothrow ) _1d1e5192e_TypeDecl(_2024_token,jule::Any(jule::new_struct<_1d1e5192e_IdentTypeDecl>(new( std::nothrow ) _1d1e5192e_IdentTypeDecl(_2024_token,_2024_token._field_kind,false,nullptr)))));
}



inline std::tuple<jule::Slice<_1d1da4277_Token>,jule::Int> _1b87d0ddc_split_map_range(jule::Slice<_1d1da4277_Token>& _3525_tokens,jule::Int& _3547_i) {
	jule::Slice<_1d1da4277_Token> _3557_range_tokens = jule::Slice<_1d1da4277_Token>();
	jule::Int _3580_colon = jule::Int();
	_3580_colon=-1LL;
	jule::Int _3713_range_n = 0LL;
	jule::Int _389_start = _3547_i;
	_iter_begin_4705575552:;
	if (!(_3547_i < _3525_tokens.len())) { goto _iter_end_4705575552; }
	{
		_1d1da4277_Token _4013_token = _3525_tokens[static_cast<jule::Int>(_3547_i)];
		if (_4013_token._field_id == 3LLU) {
			{
				auto _match_expr{ _4013_token._field_kind };
				if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4705580816; }
				_case_begin_4705580816:;
				{
					(_3713_range_n)++;
					goto _iter_next_4705575552;
				}
				goto _match_end_4705579232;
				_case_end_4705580816:;
				_case_begin_4705580016:;
				{
					(_3713_range_n)--;
				}
				goto _match_end_4705579232;
				_case_end_4705580016:;
				_match_end_4705579232:;
			}
		}
		if (_3713_range_n == 0LL) {
			if ((_389_start + 1LL) > _3547_i) {
				return std::make_tuple(_3557_range_tokens,_3580_colon);
			}
			_3557_range_tokens=_3525_tokens.slice(static_cast<jule::Int>(_389_start + 1LL),static_cast<jule::Int>(_3547_i));
			goto _iter_end_4705575552;
		} else if (_3713_range_n != 1LL) {
			goto _iter_next_4705575552;
		}
		if ((_3580_colon == -1LL) && (_4013_token._field_id == 11LLU)) {
			_3580_colon=static_cast<jule::Int>((_3547_i - _389_start) - 1LL);
		}
	}
	_iter_next_4705575552:;
	(_3547_i)++;
	goto _iter_begin_4705575552;
	_iter_end_4705575552:;
	return std::make_tuple(_3557_range_tokens,_3580_colon);
}



inline void _1b9d678e5_lshift_unsig(_1b9d678e5_Const& _55822_c,_1b9d678e5_Const& _55833_x) {
	jule::U64 _5599_l = _55822_c._method_as_u64();
	jule::U64 _5609_r = _55833_x._method_as_u64();
	_55822_c._method_set_u64(static_cast<jule::U64>(_5599_l << _5609_r));
}



inline void _1b9d678e5_rshift_unsig(_1b9d678e5_Const& _56422_c,_1b9d678e5_Const& _56433_x) {
	jule::U64 _5659_l = _56422_c._method_as_u64();
	jule::U64 _5669_r = _56433_x._method_as_u64();
	_56422_c._method_set_u64(static_cast<jule::U64>(_5659_l >> _5669_r));
}



inline jule::Bool _1b9d698d6_check_bit(jule::Str _914_v,jule::Int _922_bit,jule::Fn<jule::Bool(jule::Str,jule::Int,jule::Int)> _932_checker) {
	{
		if (!((_914_v == jule::Str("", 0)))) { goto _case_end_4708793504; }
		_case_begin_4708793504:;
		{
			return false;
		}
		goto _match_end_4708791088;
		_case_end_4708793504:;
		if (!((_914_v.len() == 1LL))) { goto _case_end_4708792336; }
		_case_begin_4708792336:;
		{
			return true;
		}
		goto _match_end_4708791088;
		_case_end_4708792336:;
		if (!((_914_v.has_prefix(jule::Str("0x", 2))))) { goto _case_end_4708792448; }
		_case_begin_4708792448:;
		{
			return _932_checker(_914_v.slice(2LL),16LL,_922_bit);
		}
		goto _match_end_4708791088;
		_case_end_4708792448:;
		if (!((_914_v.has_prefix(jule::Str("0b", 2))))) { goto _case_end_4708792560; }
		_case_begin_4708792560:;
		{
			return _932_checker(_914_v.slice(2LL),2LL,_922_bit);
		}
		goto _match_end_4708791088;
		_case_end_4708792560:;
		if (!((_914_v.has_prefix(jule::Str("0o", 2))))) { goto _case_end_4708791584; }
		_case_begin_4708791584:;
		{
			return _932_checker(_914_v.slice(2LL),8LL,_922_bit);
		}
		goto _match_end_4708791088;
		_case_end_4708791584:;
		if (!((_914_v[0LL] == '0'))) { goto _case_end_4708791696; }
		_case_begin_4708791696:;
		{
			return _932_checker(_914_v.slice(1LL),8LL,_922_bit);
		}
		goto _match_end_4708791088;
		_case_end_4708791696:;
		_case_begin_4708791280:;
		{
			return _932_checker(_914_v,10LL,_922_bit);
		}
		goto _match_end_4708791088;
		_case_end_4708791280:;
		_match_end_4708791088:;
	}
}



inline jule::Str _1b9d698d6_real_kind_of(jule::Str _2421_kind) {
	{
		auto _match_expr{ _2421_kind };
		if (!((jule::Str("int", 3)) == _match_expr)) { goto _case_end_4708805120; }
		_case_begin_4708805120:;
		{
			return jule::Str("i64", 3);
		}
		goto _match_end_4708790672;
		_case_end_4708805120:;
		if (!((jule::Str("uint", 4)) == _match_expr || (jule::Str("uintptr", 7)) == _match_expr)) { goto _case_end_4708805232; }
		_case_begin_4708805232:;
		{
			return jule::Str("u64", 3);
		}
		goto _match_end_4708790672;
		_case_end_4708805232:;
		_case_begin_4708803696:;
		{
			return _2421_kind;
		}
		goto _match_end_4708790672;
		_case_end_4708803696:;
		_match_end_4708790672:;
	}
}



inline jule::Int _1b9d698d6_bitsize_of(jule::Str _4019_k) {
	{
		auto _match_expr{ _4019_k };
		if (!((jule::Str("i8", 2)) == _match_expr || (jule::Str("u8", 2)) == _match_expr)) { goto _case_end_4708808720; }
		_case_begin_4708808720:;
		{
			return 8LL;
		}
		goto _match_end_4708807520;
		_case_end_4708808720:;
		if (!((jule::Str("i16", 3)) == _match_expr || (jule::Str("u16", 3)) == _match_expr)) { goto _case_end_4708808832; }
		_case_begin_4708808832:;
		{
			return 16LL;
		}
		goto _match_end_4708807520;
		_case_end_4708808832:;
		if (!((jule::Str("i32", 3)) == _match_expr || (jule::Str("u32", 3)) == _match_expr || (jule::Str("f32", 3)) == _match_expr)) { goto _case_end_4708809008; }
		_case_begin_4708809008:;
		{
			return 32LL;
		}
		goto _match_end_4708807520;
		_case_end_4708809008:;
		if (!((jule::Str("i64", 3)) == _match_expr || (jule::Str("u64", 3)) == _match_expr || (jule::Str("f64", 3)) == _match_expr)) { goto _case_end_4708809120; }
		_case_begin_4708809120:;
		{
			return 64LL;
		}
		goto _match_end_4708807520;
		_case_end_4708809120:;
		if (!((jule::Str("uint", 4)) == _match_expr || (jule::Str("int", 3)) == _match_expr)) { goto _case_end_4708809232; }
		_case_begin_4708809232:;
		{
			return 64LL;
		}
		goto _match_end_4708807520;
		_case_end_4708809232:;
		_case_begin_4708807056:;
		{
			return -1LL;
		}
		goto _match_end_4708807520;
		_case_end_4708807056:;
		_match_end_4708807520:;
	}
}



inline jule::Str _1b9d698d6_int_from_bits(jule::U64 _7222_bits) {
	{
		auto _match_expr{ _7222_bits };
		if (!((8LL) == _match_expr)) { goto _case_end_4708813376; }
		_case_begin_4708813376:;
		{
			return jule::Str("i8", 2);
		}
		goto _match_end_4708812544;
		_case_end_4708813376:;
		if (!((16LL) == _match_expr)) { goto _case_end_4708813488; }
		_case_begin_4708813488:;
		{
			return jule::Str("i16", 3);
		}
		goto _match_end_4708812544;
		_case_end_4708813488:;
		if (!((32LL) == _match_expr)) { goto _case_end_4708813600; }
		_case_begin_4708813600:;
		{
			return jule::Str("i32", 3);
		}
		goto _match_end_4708812544;
		_case_end_4708813600:;
		if (!((64LL) == _match_expr)) { goto _case_end_4708814608; }
		_case_begin_4708814608:;
		{
			return jule::Str("i64", 3);
		}
		goto _match_end_4708812544;
		_case_end_4708814608:;
		_case_begin_4708812864:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4708812544;
		_case_end_4708812864:;
		_match_end_4708812544:;
	}
}



inline jule::Str _1b9d698d6_uint_from_bits(jule::U64 _8523_bits) {
	{
		auto _match_expr{ _8523_bits };
		if (!((8LL) == _match_expr)) { goto _case_end_4708817552; }
		_case_begin_4708817552:;
		{
			return jule::Str("u8", 2);
		}
		goto _match_end_4708815632;
		_case_end_4708817552:;
		if (!((16LL) == _match_expr)) { goto _case_end_4708817664; }
		_case_begin_4708817664:;
		{
			return jule::Str("u16", 3);
		}
		goto _match_end_4708815632;
		_case_end_4708817664:;
		if (!((32LL) == _match_expr)) { goto _case_end_4708818816; }
		_case_begin_4708818816:;
		{
			return jule::Str("u32", 3);
		}
		goto _match_end_4708815632;
		_case_end_4708818816:;
		if (!((64LL) == _match_expr)) { goto _case_end_4708818928; }
		_case_begin_4708818928:;
		{
			return jule::Str("u64", 3);
		}
		goto _match_end_4708815632;
		_case_end_4708818928:;
		_case_begin_4708815728:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4708815632;
		_case_end_4708815728:;
		_match_end_4708815632:;
	}
}



inline jule::Str _1b9d698d6_float_from_bits(jule::U64 _9924_bits) {
	{
		auto _match_expr{ _9924_bits };
		if (!((32LL) == _match_expr)) { goto _case_end_4708821728; }
		_case_begin_4708821728:;
		{
			return jule::Str("f32", 3);
		}
		goto _match_end_4708819840;
		_case_end_4708821728:;
		if (!((64LL) == _match_expr)) { goto _case_end_4708821840; }
		_case_begin_4708821840:;
		{
			return jule::Str("f64", 3);
		}
		goto _match_end_4708819840;
		_case_end_4708821840:;
		_case_begin_4708819936:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4708819840;
		_case_end_4708819936:;
		_match_end_4708819840:;
	}
}



inline jule::Bool _1b9d698d6_check_bit_int(jule::Str _10822_v,jule::Int _10830_bit) {
	return _1b9d698d6_check_bit(_10822_v,_10830_bit,jule::Fn<jule::Bool(jule::Str,jule::Int,jule::Int)>([=](jule::Str _10930_v,jule::Int _10938_base,jule::Int _10949_bit) mutable -> jule::Bool {
		jule::Int _11017_err;
		std::tie(std::ignore,_11017_err) = _1d0632de2_parse_int(_10930_v,_10938_base,_10949_bit);
		return _11017_err == 0LLU;
	}));
}



inline jule::Bool _1b9d698d6_check_bit_uint(jule::Str _11623_v,jule::Int _11631_bit) {
	return _1b9d698d6_check_bit(_11623_v,_11631_bit,jule::Fn<jule::Bool(jule::Str,jule::Int,jule::Int)>([=](jule::Str _11730_v,jule::Int _11738_base,jule::Int _11749_bit) mutable -> jule::Bool {
		jule::Int _11817_err;
		std::tie(std::ignore,_11817_err) = _1d0632de2_parse_uint(_11730_v,_11738_base,_11749_bit);
		return _11817_err == 0LLU;
	}));
}



inline jule::Bool _1b9d698d6_check_bit_float(jule::Str _12424_val,jule::Int _12434_bit) {
	jule::Int _12513_err;
	std::tie(std::ignore,_12513_err) = _1d05eae54_parse_float(_12424_val,_12434_bit);
	return _12513_err == 0LLU;
}



inline jule::U64 _1b9d698d6_bitsize_of_float(jule::F64 _13425_x) {
	{
		if (!(((-340282346638528860000000000000000000000.0 <= _13425_x) && (_13425_x <= 340282346638528860000000000000000000000.0)))) { goto _case_end_4708846224; }
		_case_begin_4708846224:;
		{
			return 32LL;
		}
		goto _match_end_4708844032;
		_case_end_4708846224:;
		_case_begin_4708844224:;
		{
			return 64LL;
		}
		goto _match_end_4708844032;
		_case_end_4708844224:;
		_match_end_4708844032:;
	}
}



inline jule::U64 _1b9d698d6_bitsize_of_int(jule::I64 _14823_x) {
	{
		if (!(((-128LL <= _14823_x) && (_14823_x <= 127LL)))) { goto _case_end_4708849296; }
		_case_begin_4708849296:;
		{
			return 8LL;
		}
		goto _match_end_4708846928;
		_case_end_4708849296:;
		if (!(((-32768LL <= _14823_x) && (_14823_x <= 32767LL)))) { goto _case_end_4708848864; }
		_case_begin_4708848864:;
		{
			return 16LL;
		}
		goto _match_end_4708846928;
		_case_end_4708848864:;
		if (!(((-2147483648LL <= _14823_x) && (_14823_x <= 2147483647LL)))) { goto _case_end_4708848976; }
		_case_begin_4708848976:;
		{
			return 32LL;
		}
		goto _match_end_4708846928;
		_case_end_4708848976:;
		_case_begin_4708847072:;
		{
			return 64LL;
		}
		goto _match_end_4708846928;
		_case_end_4708847072:;
		_match_end_4708846928:;
	}
}



inline jule::U64 _1b9d698d6_bitsize_of_uint(jule::U64 _16424_x) {
	{
		if (!((_16424_x <= 255LL))) { goto _case_end_4708854768; }
		_case_begin_4708854768:;
		{
			return 8LL;
		}
		goto _match_end_4708852784;
		_case_end_4708854768:;
		if (!((_16424_x <= 65535LL))) { goto _case_end_4708854336; }
		_case_begin_4708854336:;
		{
			return 16LL;
		}
		goto _match_end_4708852784;
		_case_end_4708854336:;
		if (!((_16424_x <= 4294967295LL))) { goto _case_end_4708854448; }
		_case_begin_4708854448:;
		{
			return 32LL;
		}
		goto _match_end_4708852784;
		_case_end_4708854448:;
		_case_begin_4708852880:;
		{
			return 64LL;
		}
		goto _match_end_4708852784;
		_case_end_4708852880:;
		_match_end_4708852784:;
	}
}



inline jule::F64 _1b9d841c5_min(jule::Str _4316_k) {
	_4316_k=_1b9d698d6_real_kind_of(_4316_k);
	{
		auto _match_expr{ _4316_k };
		if (!((jule::Str("i8", 2)) == _match_expr)) { goto _case_end_4708859408; }
		_case_begin_4708859408:;
		{
			return -128LL;
		}
		goto _match_end_4708854032;
		_case_end_4708859408:;
		if (!((jule::Str("i16", 3)) == _match_expr)) { goto _case_end_4708858928; }
		_case_begin_4708858928:;
		{
			return -32768LL;
		}
		goto _match_end_4708854032;
		_case_end_4708858928:;
		if (!((jule::Str("i32", 3)) == _match_expr)) { goto _case_end_4708859040; }
		_case_begin_4708859040:;
		{
			return -2147483648LL;
		}
		goto _match_end_4708854032;
		_case_end_4708859040:;
		if (!((jule::Str("i64", 3)) == _match_expr)) { goto _case_end_4708858528; }
		_case_begin_4708858528:;
		{
			return jule::MIN_I64;
		}
		goto _match_end_4708854032;
		_case_end_4708858528:;
		if (!((jule::Str("f32", 3)) == _match_expr)) { goto _case_end_4708858640; }
		_case_begin_4708858640:;
		{
			return -340282346638528860000000000000000000000.0;
		}
		goto _match_end_4708854032;
		_case_end_4708858640:;
		if (!((jule::Str("f64", 3)) == _match_expr)) { goto _case_end_4708858752; }
		_case_begin_4708858752:;
		{
			return jule::MIN_F64;
		}
		goto _match_end_4708854032;
		_case_end_4708858752:;
		_case_begin_4708857232:;
		{
			return 0LL;
		}
		goto _match_end_4708854032;
		_case_end_4708857232:;
		_match_end_4708854032:;
	}
}



inline jule::F64 _1b9d841c5_max(jule::Str _5816_k) {
	_5816_k=_1b9d698d6_real_kind_of(_5816_k);
	{
		auto _match_expr{ _5816_k };
		if (!((jule::Str("i8", 2)) == _match_expr)) { goto _case_end_4708864992; }
		_case_begin_4708864992:;
		{
			return 127LL;
		}
		goto _match_end_4708861856;
		_case_end_4708864992:;
		if (!((jule::Str("i16", 3)) == _match_expr)) { goto _case_end_4708865104; }
		_case_begin_4708865104:;
		{
			return 32767LL;
		}
		goto _match_end_4708861856;
		_case_end_4708865104:;
		if (!((jule::Str("i32", 3)) == _match_expr)) { goto _case_end_4708864592; }
		_case_begin_4708864592:;
		{
			return 2147483647LL;
		}
		goto _match_end_4708861856;
		_case_end_4708864592:;
		if (!((jule::Str("i64", 3)) == _match_expr)) { goto _case_end_4708864704; }
		_case_begin_4708864704:;
		{
			return jule::MAX_I64;
		}
		goto _match_end_4708861856;
		_case_end_4708864704:;
		if (!((jule::Str("u8", 2)) == _match_expr)) { goto _case_end_4708864816; }
		_case_begin_4708864816:;
		{
			return 255LL;
		}
		goto _match_end_4708861856;
		_case_end_4708864816:;
		if (!((jule::Str("u16", 3)) == _match_expr)) { goto _case_end_4708864064; }
		_case_begin_4708864064:;
		{
			return 65535LL;
		}
		goto _match_end_4708861856;
		_case_end_4708864064:;
		if (!((jule::Str("u32", 3)) == _match_expr)) { goto _case_end_4708864176; }
		_case_begin_4708864176:;
		{
			return 4294967295LL;
		}
		goto _match_end_4708861856;
		_case_end_4708864176:;
		if (!((jule::Str("u64", 3)) == _match_expr)) { goto _case_end_4708864288; }
		_case_begin_4708864288:;
		{
			return jule::MAX_U64;
		}
		goto _match_end_4708861856;
		_case_end_4708864288:;
		if (!((jule::Str("f32", 3)) == _match_expr)) { goto _case_end_4708865632; }
		_case_begin_4708865632:;
		{
			return 340282346638528860000000000000000000000.0;
		}
		goto _match_end_4708861856;
		_case_end_4708865632:;
		if (!((jule::Str("f64", 3)) == _match_expr)) { goto _case_end_4708865744; }
		_case_begin_4708865744:;
		{
			return jule::MAX_F64;
		}
		goto _match_end_4708861856;
		_case_end_4708865744:;
		_case_begin_4708863664:;
		{
			return 0LL;
		}
		goto _match_end_4708861856;
		_case_end_4708863664:;
		_match_end_4708861856:;
	}
}



inline jule::Bool _1b9e404b2_is_i8_compatible(jule::Str _629_k) {
	_629_k=_1b9d698d6_real_kind_of(_629_k);
	return _629_k == jule::Str("i8", 2);
}



inline jule::Bool _1b9e404b2_is_i16_compatible(jule::Str _1230_k) {
	_1230_k=_1b9d698d6_real_kind_of(_1230_k);
	return ((_1230_k == jule::Str("i8", 2)) || (_1230_k == jule::Str("i16", 3))) || (_1230_k == jule::Str("u8", 2));
}



inline jule::Bool _1b9e404b2_is_i32_compatible(jule::Str _2030_k) {
	_2030_k=_1b9d698d6_real_kind_of(_2030_k);
	return ((((_2030_k == jule::Str("i8", 2)) || (_2030_k == jule::Str("i16", 3))) || (_2030_k == jule::Str("i32", 3))) || (_2030_k == jule::Str("u8", 2))) || (_2030_k == jule::Str("u16", 3));
}



inline jule::Bool _1b9e404b2_is_i64_compatible(jule::Str _3030_k) {
	_3030_k=_1b9d698d6_real_kind_of(_3030_k);
	return ((((((_3030_k == jule::Str("i8", 2)) || (_3030_k == jule::Str("i16", 3))) || (_3030_k == jule::Str("i32", 3))) || (_3030_k == jule::Str("i64", 3))) || (_3030_k == jule::Str("u8", 2))) || (_3030_k == jule::Str("u16", 3))) || (_3030_k == jule::Str("u32", 3));
}



inline jule::Bool _1b9e404b2_is_u8_compatible(jule::Str _4229_k) {
	_4229_k=_1b9d698d6_real_kind_of(_4229_k);
	return _4229_k == jule::Str("u8", 2);
}



inline jule::Bool _1b9e404b2_is_u16_compatible(jule::Str _4830_k) {
	_4830_k=_1b9d698d6_real_kind_of(_4830_k);
	return (_4830_k == jule::Str("u8", 2)) || (_4830_k == jule::Str("u16", 3));
}



inline jule::Bool _1b9e404b2_is_u32_compatible(jule::Str _5430_k) {
	_5430_k=_1b9d698d6_real_kind_of(_5430_k);
	return ((_5430_k == jule::Str("u8", 2)) || (_5430_k == jule::Str("u16", 3))) || (_5430_k == jule::Str("u32", 3));
}



inline jule::Bool _1b9e404b2_is_u64_compatible(jule::Str _6230_k) {
	_6230_k=_1b9d698d6_real_kind_of(_6230_k);
	return (((_6230_k == jule::Str("u8", 2)) || (_6230_k == jule::Str("u16", 3))) || (_6230_k == jule::Str("u32", 3))) || (_6230_k == jule::Str("u64", 3));
}



inline jule::Bool _1b9e404b2_is_f32_compatible(jule::Str _7130_k) {
	_7130_k=_1b9d698d6_real_kind_of(_7130_k);
	return _7130_k == jule::Str("f32", 3);
}



inline jule::Bool _1b9e404b2_is_f64_compatible(jule::Str _7730_k) {
	_7730_k=_1b9d698d6_real_kind_of(_7730_k);
	return (_7730_k == jule::Str("f64", 3)) || (_7730_k == jule::Str("f32", 3));
}



inline jule::Bool _1b9e404b2_types_are_compatible(jule::Str _8633_k1,jule::Str _8642_k2) {
	_8633_k1=_1b9d698d6_real_kind_of(_8633_k1);
	{
		auto _match_expr{ _8633_k1 };
		if (!((jule::Str("any", 3)) == _match_expr)) { goto _case_end_4708894896; }
		_case_begin_4708894896:;
		{
			return true;
		}
		goto _match_end_4708893952;
		_case_end_4708894896:;
		if (!((jule::Str("i8", 2)) == _match_expr)) { goto _case_end_4708895840; }
		_case_begin_4708895840:;
		{
			return _1b9e404b2_is_i8_compatible(_8642_k2);
		}
		goto _match_end_4708893952;
		_case_end_4708895840:;
		if (!((jule::Str("i16", 3)) == _match_expr)) { goto _case_end_4708895952; }
		_case_begin_4708895952:;
		{
			return _1b9e404b2_is_i16_compatible(_8642_k2);
		}
		goto _match_end_4708893952;
		_case_end_4708895952:;
		if (!((jule::Str("i32", 3)) == _match_expr)) { goto _case_end_4708896064; }
		_case_begin_4708896064:;
		{
			return _1b9e404b2_is_i32_compatible(_8642_k2);
		}
		goto _match_end_4708893952;
		_case_end_4708896064:;
		if (!((jule::Str("i64", 3)) == _match_expr)) { goto _case_end_4708896176; }
		_case_begin_4708896176:;
		{
			return _1b9e404b2_is_i64_compatible(_8642_k2);
		}
		goto _match_end_4708893952;
		_case_end_4708896176:;
		if (!((jule::Str("u8", 2)) == _match_expr)) { goto _case_end_4708895200; }
		_case_begin_4708895200:;
		{
			return _1b9e404b2_is_u8_compatible(_8642_k2);
		}
		goto _match_end_4708893952;
		_case_end_4708895200:;
		if (!((jule::Str("u16", 3)) == _match_expr)) { goto _case_end_4708895312; }
		_case_begin_4708895312:;
		{
			return _1b9e404b2_is_u16_compatible(_8642_k2);
		}
		goto _match_end_4708893952;
		_case_end_4708895312:;
		if (!((jule::Str("u32", 3)) == _match_expr)) { goto _case_end_4708895424; }
		_case_begin_4708895424:;
		{
			return _1b9e404b2_is_u32_compatible(_8642_k2);
		}
		goto _match_end_4708893952;
		_case_end_4708895424:;
		if (!((jule::Str("u64", 3)) == _match_expr)) { goto _case_end_4708895536; }
		_case_begin_4708895536:;
		{
			return _1b9e404b2_is_u64_compatible(_8642_k2);
		}
		goto _match_end_4708893952;
		_case_end_4708895536:;
		if (!((jule::Str("f32", 3)) == _match_expr)) { goto _case_end_4708895648; }
		_case_begin_4708895648:;
		{
			return _1b9e404b2_is_f32_compatible(_8642_k2);
		}
		goto _match_end_4708893952;
		_case_end_4708895648:;
		if (!((jule::Str("f64", 3)) == _match_expr)) { goto _case_end_4708896320; }
		_case_begin_4708896320:;
		{
			return _1b9e404b2_is_f64_compatible(_8642_k2);
		}
		goto _match_end_4708893952;
		_case_end_4708896320:;
		if (!((jule::Str("bool", 4)) == _match_expr)) { goto _case_end_4708896448; }
		_case_begin_4708896448:;
		{
			return _8642_k2 == jule::Str("bool", 4);
		}
		goto _match_end_4708893952;
		_case_end_4708896448:;
		if (!((jule::Str("str", 3)) == _match_expr)) { goto _case_end_4708896576; }
		_case_begin_4708896576:;
		{
			return _8642_k2 == jule::Str("str", 3);
		}
		goto _match_end_4708893952;
		_case_end_4708896576:;
		_case_begin_4708894272:;
		{
			return false;
		}
		goto _match_end_4708893952;
		_case_end_4708894272:;
		_match_end_4708893952:;
	}
}



inline jule::Bool _1b9e404b2_is_i16_greater(jule::Str _10727_k) {
	_10727_k=_1b9d698d6_real_kind_of(_10727_k);
	return _10727_k == jule::Str("u8", 2);
}



inline jule::Bool _1b9e404b2_is_i32_greater(jule::Str _11327_k) {
	_11327_k=_1b9d698d6_real_kind_of(_11327_k);
	return (_11327_k == jule::Str("i8", 2)) || (_11327_k == jule::Str("i16", 3));
}



inline jule::Bool _1b9e404b2_is_i64_greater(jule::Str _11927_k) {
	_11927_k=_1b9d698d6_real_kind_of(_11927_k);
	return ((_11927_k == jule::Str("i8", 2)) || (_11927_k == jule::Str("i16", 3))) || (_11927_k == jule::Str("i32", 3));
}



inline jule::Bool _1b9e404b2_is_u8_greater(jule::Str _12726_k) {
	_12726_k=_1b9d698d6_real_kind_of(_12726_k);
	return _12726_k == jule::Str("i8", 2);
}



inline jule::Bool _1b9e404b2_is_u16_greater(jule::Str _13327_k) {
	_13327_k=_1b9d698d6_real_kind_of(_13327_k);
	return ((_13327_k == jule::Str("u8", 2)) || (_13327_k == jule::Str("i8", 2))) || (_13327_k == jule::Str("i16", 3));
}



inline jule::Bool _1b9e404b2_is_u32_greater(jule::Str _14127_k) {
	_14127_k=_1b9d698d6_real_kind_of(_14127_k);
	return ((((_14127_k == jule::Str("u8", 2)) || (_14127_k == jule::Str("u16", 3))) || (_14127_k == jule::Str("i8", 2))) || (_14127_k == jule::Str("i16", 3))) || (_14127_k == jule::Str("i32", 3));
}



inline jule::Bool _1b9e404b2_is_u64_greater(jule::Str _15127_k) {
	_15127_k=_1b9d698d6_real_kind_of(_15127_k);
	return ((((((_15127_k == jule::Str("u8", 2)) || (_15127_k == jule::Str("u16", 3))) || (_15127_k == jule::Str("u32", 3))) || (_15127_k == jule::Str("i8", 2))) || (_15127_k == jule::Str("i16", 3))) || (_15127_k == jule::Str("i32", 3))) || (_15127_k == jule::Str("i64", 3));
}



inline jule::Bool _1b9e404b2_is_f32_greater(jule::Str _16323_k) {
	return _16323_k != jule::Str("f64", 3);
}



inline jule::Bool _1b9e404b2_is_f64_greater(jule::Str _16523_k) {
	return true;
}



inline jule::Bool _1b9e404b2_is_greater(jule::Str _16823_k1,jule::Str _16832_k2) {
	_16823_k1=_1b9d698d6_real_kind_of(_16823_k1);
	{
		auto _match_expr{ _16823_k1 };
		if (!((jule::Str("i16", 3)) == _match_expr)) { goto _case_end_4708925584; }
		_case_begin_4708925584:;
		{
			return _1b9e404b2_is_i16_greater(_16832_k2);
		}
		goto _match_end_4708919504;
		_case_end_4708925584:;
		if (!((jule::Str("i32", 3)) == _match_expr)) { goto _case_end_4708925696; }
		_case_begin_4708925696:;
		{
			return _1b9e404b2_is_i32_greater(_16832_k2);
		}
		goto _match_end_4708919504;
		_case_end_4708925696:;
		if (!((jule::Str("i64", 3)) == _match_expr)) { goto _case_end_4708926528; }
		_case_begin_4708926528:;
		{
			return _1b9e404b2_is_i64_greater(_16832_k2);
		}
		goto _match_end_4708919504;
		_case_end_4708926528:;
		if (!((jule::Str("u16", 3)) == _match_expr)) { goto _case_end_4708926640; }
		_case_begin_4708926640:;
		{
			return _1b9e404b2_is_u16_greater(_16832_k2);
		}
		goto _match_end_4708919504;
		_case_end_4708926640:;
		if (!((jule::Str("u8", 2)) == _match_expr)) { goto _case_end_4708926752; }
		_case_begin_4708926752:;
		{
			return _1b9e404b2_is_u8_greater(_16832_k2);
		}
		goto _match_end_4708919504;
		_case_end_4708926752:;
		if (!((jule::Str("u32", 3)) == _match_expr)) { goto _case_end_4708926880; }
		_case_begin_4708926880:;
		{
			return _1b9e404b2_is_u32_greater(_16832_k2);
		}
		goto _match_end_4708919504;
		_case_end_4708926880:;
		if (!((jule::Str("u64", 3)) == _match_expr)) { goto _case_end_4708925888; }
		_case_begin_4708925888:;
		{
			return _1b9e404b2_is_u64_greater(_16832_k2);
		}
		goto _match_end_4708919504;
		_case_end_4708925888:;
		if (!((jule::Str("f32", 3)) == _match_expr)) { goto _case_end_4708926016; }
		_case_begin_4708926016:;
		{
			return _1b9e404b2_is_f32_greater(_16832_k2);
		}
		goto _match_end_4708919504;
		_case_end_4708926016:;
		if (!((jule::Str("f64", 3)) == _match_expr)) { goto _case_end_4708926144; }
		_case_begin_4708926144:;
		{
			return _1b9e404b2_is_f64_greater(_16832_k2);
		}
		goto _match_end_4708919504;
		_case_end_4708926144:;
		if (!((jule::Str("any", 3)) == _match_expr)) { goto _case_end_4708926272; }
		_case_begin_4708926272:;
		{
			return true;
		}
		goto _match_end_4708919504;
		_case_end_4708926272:;
		_case_begin_4708924960:;
		{
			return false;
		}
		goto _match_end_4708919504;
		_case_end_4708924960:;
		_match_end_4708919504:;
	}
}



inline jule::Bool _1b9e28c5e_is_sig_int(jule::Str _2723_k) {
	_2723_k=_1b9d698d6_real_kind_of(_2723_k);
	return (((_2723_k == jule::Str("i8", 2)) || (_2723_k == jule::Str("i16", 3))) || (_2723_k == jule::Str("i32", 3))) || (_2723_k == jule::Str("i64", 3));
}



inline jule::Bool _1b9e28c5e_is_unsig_int(jule::Str _3825_k) {
	_3825_k=_1b9d698d6_real_kind_of(_3825_k);
	return (((_3825_k == jule::Str("u8", 2)) || (_3825_k == jule::Str("u16", 3))) || (_3825_k == jule::Str("u32", 3))) || (_3825_k == jule::Str("u64", 3));
}



inline jule::Bool _1b9e28c5e_is_int(jule::Str _4915_k) {
	return _1b9e28c5e_is_sig_int(_4915_k) || _1b9e28c5e_is_unsig_int(_4915_k);
}



inline jule::Bool _1b9e28c5e_is_float(jule::Str _5417_k) {
	return (_5417_k == jule::Str("f32", 3)) || (_5417_k == jule::Str("f64", 3));
}



inline jule::Bool _1b9e28c5e_is_num(jule::Str _5915_k) {
	return _1b9e28c5e_is_int(_5915_k) || _1b9e28c5e_is_float(_5915_k);
}



inline jule::Bool _1b9e28c5e_is_sig_num(jule::Str _6419_k) {
	return _1b9e28c5e_is_sig_int(_6419_k) || _1b9e28c5e_is_float(_6419_k);
}



inline std::tuple<jule::Str,jule::Bool> _1ba0423e9_is_byte_lit(jule::Str _1524_kind) {
	if (_1524_kind.len() < 3LL) {
		return std::make_tuple(jule::Str("", 0),false);
	}
	_1524_kind=_1524_kind.slice(1LL,static_cast<jule::Int>(_1524_kind.len() - 1LL));
	jule::Bool _2113_is_byte = false;
	{
		if (!(((_1524_kind.len() == 1LL) && (_1524_kind[0LL] <= 255LL)))) { goto _case_end_4708963840; }
		_case_begin_4708963840:;
		{
			_2113_is_byte=true;
		}
		goto _match_end_4708963648;
		_case_end_4708963840:;
		if (!(((_1524_kind[0LL] == '\\') && (_1524_kind[1LL] == 'x')))) { goto _case_end_4708963968; }
		_case_begin_4708963968:;
		{
			_2113_is_byte=true;
		}
		goto _match_end_4708963648;
		_case_end_4708963968:;
		if (!((((_1524_kind[0LL] == '\\') && (_1524_kind[1LL] >= '0')) && (_1524_kind[1LL] <= '7')))) { goto _case_end_4708964096; }
		_case_begin_4708964096:;
		{
			_2113_is_byte=true;
		}
		goto _match_end_4708963648;
		_case_end_4708964096:;
		_match_end_4708963648:;
	}
	return std::make_tuple(_1524_kind,_2113_is_byte);
}



inline jule::I32 _1ba0423e9_to_rune(jule::Slice<jule::U8> _4016_bytes) {
	if (_4016_bytes.len() == 0LL) {
		return 0LL;
	}
	jule::I32 _4513_r = 0LL;
	if ((_4016_bytes[0LL] == '\\') && (_4016_bytes.len() > 1LL)) {
		jule::Int _4717_i = 0LL;
		_4513_r=static_cast<jule::I32>(_1ba0423e9_rune_from_esq_seq(_4016_bytes,_4717_i));
	} else {
		std::tie(_4513_r,std::ignore) = _1b818a2be_decode_rune(_4016_bytes);
	}
	return _4513_r;
}



inline jule::Str _1ba0423e9_to_raw_str(jule::Slice<jule::U8> _5919_bytes) {
	return static_cast<jule::Str>(_5919_bytes);
}



inline jule::Str _1ba0423e9_to_str(jule::Slice<jule::U8> _6415_bytes) {
	if (_6415_bytes.len() == 0LL) {
		return jule::Str("", 0);
	}
	jule::Str _6913_s = jule::Str("", 0);
	jule::Int _7013_i = 0LL;
	_iter_begin_4708983200:;
	if (!(_7013_i < _6415_bytes.len())) { goto _iter_end_4708983200; }
	{
		jule::U8 _7213_b = _6415_bytes[static_cast<jule::Int>(_7013_i)];
		if (_7213_b == '\\') {
			_6913_s+=_1ba0423e9_str_esq_seq(_6415_bytes,_7013_i);
		} else {
			jule::I32 _7618_r;
			jule::Int _7621_size;
			std::tie(_7618_r,_7621_size) = _1b818a2be_decode_rune(_6415_bytes.slice(static_cast<jule::Int>(_7013_i)));
			_7013_i+=_7621_size;
			_6913_s+=static_cast<jule::Str>(_7618_r);
		}
	}
	_iter_next_4708983200:;
	goto _iter_begin_4708983200;
	_iter_end_4708983200:;
	return _6913_s;
}



inline std::tuple<jule::U8,jule::Bool> _1ba0423e9_try_btoa_common_esq(jule::Slice<jule::U8> _8424_bytes) {
	jule::U8 _8441_seq = jule::U8();
	jule::Bool _8452_ok = jule::Bool();
	if ((_8424_bytes.len() < 2LL) || (_8424_bytes[0LL] != '\\')) {
		return std::make_tuple(_8441_seq,_8452_ok);
	}
	{
		auto _match_expr{ _8424_bytes[1LL] };
		if (!(('\\') == _match_expr)) { goto _case_end_4708998416; }
		_case_begin_4708998416:;
		{
			_8441_seq='\\';
		}
		goto _match_end_4708996016;
		_case_end_4708998416:;
		if (!(('\'') == _match_expr)) { goto _case_end_4708998528; }
		_case_begin_4708998528:;
		{
			_8441_seq='\'';
		}
		goto _match_end_4708996016;
		_case_end_4708998528:;
		if (!(('\"') == _match_expr)) { goto _case_end_4708998640; }
		_case_begin_4708998640:;
		{
			_8441_seq='\"';
		}
		goto _match_end_4708996016;
		_case_end_4708998640:;
		if (!(('a') == _match_expr)) { goto _case_end_4708998768; }
		_case_begin_4708998768:;
		{
			_8441_seq='\a';
		}
		goto _match_end_4708996016;
		_case_end_4708998768:;
		if (!(('b') == _match_expr)) { goto _case_end_4708998896; }
		_case_begin_4708998896:;
		{
			_8441_seq='\b';
		}
		goto _match_end_4708996016;
		_case_end_4708998896:;
		if (!(('f') == _match_expr)) { goto _case_end_4708999024; }
		_case_begin_4708999024:;
		{
			_8441_seq='\f';
		}
		goto _match_end_4708996016;
		_case_end_4708999024:;
		if (!(('n') == _match_expr)) { goto _case_end_4708999152; }
		_case_begin_4708999152:;
		{
			_8441_seq='\n';
		}
		goto _match_end_4708996016;
		_case_end_4708999152:;
		if (!(('r') == _match_expr)) { goto _case_end_4708999280; }
		_case_begin_4708999280:;
		{
			_8441_seq='\r';
		}
		goto _match_end_4708996016;
		_case_end_4708999280:;
		if (!(('t') == _match_expr)) { goto _case_end_4708999408; }
		_case_begin_4708999408:;
		{
			_8441_seq='\t';
		}
		goto _match_end_4708996016;
		_case_end_4708999408:;
		if (!(('v') == _match_expr)) { goto _case_end_4708999536; }
		_case_begin_4708999536:;
		{
			_8441_seq='\v';
		}
		goto _match_end_4708996016;
		_case_end_4708999536:;
		_match_end_4708996016:;
	}
	_8452_ok=_8441_seq != 0LL;
	return std::make_tuple(_8441_seq,_8452_ok);
}



inline jule::I32 _1ba0423e9_rune_from_esq_seq(jule::Slice<jule::U8> _10622_bytes,jule::Int& _10642_i) {
	jule::U8 _10710_b;
	jule::Bool _10713_ok;
	std::tie(_10710_b,_10713_ok) = _1ba0423e9_try_btoa_common_esq(_10622_bytes.slice(static_cast<jule::Int>(_10642_i)));
	(_10642_i)++;
	if (_10713_ok) {
		(_10642_i)++;
		return static_cast<jule::I32>(_10710_b);
	}
	{
		auto _match_expr{ _10622_bytes[static_cast<jule::Int>(_10642_i)] };
		if (!(('u') == _match_expr)) { goto _case_end_4709016960; }
		_case_begin_4709016960:;
		{
			
			jule::U64 _11714_rc;
			std::tie(_11714_rc,std::ignore) = _1d0632de2_parse_uint(static_cast<jule::Str>(_10622_bytes.slice(static_cast<jule::Int>(_10642_i + 1LL),static_cast<jule::Int>(_10642_i + 5LL))),16LL,64LL);
			_10642_i+=5LL;
			jule::I32 _11913_r = static_cast<jule::I32>(_11714_rc);
			return _11913_r;
		}
		goto _match_end_4709010528;
		_case_end_4709016960:;
		if (!(('U') == _match_expr)) { goto _case_end_4709017536; }
		_case_begin_4709017536:;
		{
			
			jule::U64 _12414_rc;
			std::tie(_12414_rc,std::ignore) = _1d0632de2_parse_uint(static_cast<jule::Str>(_10622_bytes.slice(static_cast<jule::Int>(_10642_i + 1LL),static_cast<jule::Int>(_10642_i + 9LL))),16LL,64LL);
			_10642_i+=9LL;
			jule::I32 _12613_r = static_cast<jule::I32>(_12414_rc);
			return _12613_r;
		}
		goto _match_end_4709010528;
		_case_end_4709017536:;
		if (!(('x') == _match_expr)) { goto _case_end_4709017648; }
		_case_begin_4709017648:;
		{
			
			jule::Slice<jule::U8> _13113_seq = _10622_bytes.slice(static_cast<jule::Int>(_10642_i + 1LL),static_cast<jule::Int>(_10642_i + 3LL));
			_10642_i+=3LL;
			jule::U64 _13314_b;
			std::tie(_13314_b,std::ignore) = _1d0632de2_parse_uint(static_cast<jule::Str>(_13113_seq),16LL,64LL);
			return static_cast<jule::I32>(_13314_b);
		}
		goto _match_end_4709010528;
		_case_end_4709017648:;
		_case_begin_4709009424:;
		{
			
			jule::Slice<jule::U8> _13813_seq = _10622_bytes.slice(static_cast<jule::Int>(_10642_i),static_cast<jule::Int>(_10642_i + 3LL));
			_10642_i+=3LL;
			jule::U64 _14014_b;
			std::tie(_14014_b,std::ignore) = _1d0632de2_parse_uint(static_cast<jule::Str>(_13813_seq.slice(1LL)),8LL,64LL);
			return static_cast<jule::I32>(_14014_b);
		}
		goto _match_end_4709010528;
		_case_end_4709009424:;
		_match_end_4709010528:;
	}
}



inline jule::Str _1ba0423e9_str_esq_seq(jule::Slice<jule::U8> _14516_bytes,jule::Int& _14536_i) {
	jule::I32 _1469_r = _1ba0423e9_rune_from_esq_seq(_14516_bytes,_14536_i);
	if (_1469_r <= 255LL) {
		return static_cast<jule::Str>(_1469_r);
	}
	return _1ba0423e9_to_str(static_cast<jule::Slice<jule::U8>>(static_cast<jule::Str>(_1469_r)));
}



inline jule::Bool _1d21d97ee_kind_uses_generics(jule::Ref<_1b951b088_TypeKind> _37523_k,jule::Slice<jule::Ref<_1d1e5192e_GenericDecl>>& _37538_generics) {
	jule::Str _3769_pk = _37523_k->_method_to_str();
	{
		auto _range_expr = _37538_generics;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d1e5192e_GenericDecl> _1d21d97ee_g = *_range_begin;
			_iter_begin_4709991792:;
			{
				if (_3769_pk.find(_1d21d97ee_g->_field_ident) != -1LL) {
					return true;
				}
			}
			_iter_next_4709991792:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d21d97ee_g = *_range_begin; goto _iter_begin_4709991792; }
			_iter_end_4709991792:;
		}
	}
	return false;
}



inline jule::Bool _1d21d97ee_parameter_uses_generics(jule::Ref<_1d21d97ee_Param>& _38529_p,jule::Slice<jule::Ref<_1d1e5192e_GenericDecl>>& _38541_generics) {
	if (_38529_p->_method_is_self()) {
		return false;
	}
	return _1d21d97ee_kind_uses_generics(_38529_p->_field_kind->_field_kind,_38541_generics);
}



inline jule::Str _1b8b10cbb_str_repeat(jule::Str _8715_sub,jule::Int _8729_n) {
	if (_8729_n == 0LL) {
		return jule::Str("", 0);
	}
	jule::Str _9213_s = jule::Str("", 0);
	_iter_begin_4710002672:;
	if (!(_8729_n > 0LL)) { goto _iter_end_4710002672; }
	{
		_9213_s+=_8715_sub;
	}
	_iter_next_4710002672:;
	(_8729_n)--;
	goto _iter_begin_4710002672;
	_iter_end_4710002672:;
	return _9213_s;
}



inline jule::Str _1b8b10cbb_build_doc(jule::Ref<_1d1e5192e_CommentGroup> _9918_cg) {
	if ((!(jule::real(_9918_cg)))) {
		return jule::Str("", 0);
	}
	jule::Str _10413_doc = jule::Str("", 0);
	{
		auto _range_expr = _9918_cg->_field_comments;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d1e5192e_Comment> _1b8b10cbb_c = *_range_begin;
			_iter_begin_4710005840:;
			{
				_10413_doc+=_1b8b10cbb_c->_field_text;
				_10413_doc+=jule::Str(" ", 1);
			}
			_iter_next_4710005840:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b8b10cbb_c = *_range_begin; goto _iter_begin_4710005840; }
			_iter_end_4710005840:;
		}
	}
	return _10413_doc;
}



inline jule::Ref<_1b951b088_TypeSymbol> _1b8b10cbb_build_type(jule::Ref<_1d1e5192e_TypeDecl> _11219_t) {
	if ((!(jule::real(_11219_t)))) {
		return jule::new_ref<_1b951b088_TypeSymbol>();
	}
	return jule::new_struct<_1b951b088_TypeSymbol>(new( std::nothrow ) _1b951b088_TypeSymbol(_11219_t,jule::Ref<_1b951b088_TypeKind>()));
}



inline jule::Ref<_1b9523799_Value> _1b8b10cbb_build_expr(jule::Ref<_1d1e5192e_Expr> _12119_expr) {
	if ((!(jule::real(_12119_expr)))) {
		return jule::new_ref<_1b9523799_Value>();
	}
	return jule::new_struct<_1b9523799_Value>(new( std::nothrow ) _1b9523799_Value(_12119_expr,jule::Ref<_1b9523799_Data>()));
}



inline jule::Ref<_1b951b088_TypeAlias> _1b8b10cbb_build_type_alias(jule::Ref<_1d1e5192e_TypeAliasDecl> _13125_decl) {
	return jule::new_struct<_1b951b088_TypeAlias>(new( std::nothrow ) _1b951b088_TypeAlias(_13125_decl->_field_scope,_13125_decl->_field_public,_13125_decl->_field_cpp_linked,jule::Bool(),_13125_decl->_field_token,_13125_decl->_field_ident,_1b8b10cbb_build_type(_13125_decl->_field_kind),_1b8b10cbb_build_doc(_13125_decl->_field_doc_comments),jule::Slice<jule::Any>()));
}



inline jule::Ref<_1d21c0b59_Field> _1b8b10cbb_build_field(jule::Ref<_1d1e5192e_FieldDecl> _14320_decl) {
	return jule::new_struct<_1d21c0b59_Field>(new( std::nothrow ) _1d21c0b59_Field(jule::Ref<_1d21c0b59_Struct>(),_14320_decl->_field_token,_14320_decl->_field_public,_14320_decl->_field_mutable,_14320_decl->_field_ident,_1b8b10cbb_build_type(_14320_decl->_field_kind)));
}



inline jule::Slice<jule::Ref<_1d21c0b59_Field>> _1b8b10cbb_build_fields(jule::Slice<jule::Ref<_1d1e5192e_FieldDecl>>& _15322_decls) {
	jule::Slice<jule::Ref<_1d21c0b59_Field>> _15413_fields = jule::Slice<jule::Ref<_1d21c0b59_Field>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_15322_decls.len())));
	{
		auto _range_expr = _15322_decls;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1b8b10cbb_i = 0;
			jule::Ref<_1d1e5192e_FieldDecl> _1b8b10cbb_decl = *_range_begin;
			_iter_begin_4710022736:;
			{
				_15413_fields[static_cast<jule::Int>(_1b8b10cbb_i)]=_1b8b10cbb_build_field(_1b8b10cbb_decl);
			}
			_iter_next_4710022736:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1b8b10cbb_i; _1b8b10cbb_decl = *_range_begin; goto _iter_begin_4710022736; }
			_iter_end_4710022736:;
		}
	}
	return _15413_fields;
}



inline jule::Ref<_1d21c0b59_Struct> _1b8b10cbb_build_struct(jule::Ref<_1d1e5192e_StructDecl> _16121_decl) {
	return jule::new_struct<_1d21c0b59_Struct>(new( std::nothrow ) _1d21c0b59_Struct(jule::Ref<_1b912748b_Sema>(),jule::Slice<jule::Ref<_1d21c0b59_Struct>>(),jule::Slice<jule::Ref<_1d21c0b59_Struct>>(),_16121_decl->_field_token,_16121_decl->_field_ident,_1b8b10cbb_build_fields(_16121_decl->_field_fields),jule::Slice<jule::Ref<_1d21d97ee_Fn>>(),jule::Slice<jule::Ref<_1b919cb2c_Var>>(),_16121_decl->_field_public,_16121_decl->_field_cpp_linked,_16121_decl->_field_directives,_1b8b10cbb_build_doc(_16121_decl->_field_doc_comments),_16121_decl->_field_generics,jule::Slice<jule::Ref<_1b8cd2894_Trait>>(),jule::Slice<jule::Ref<_1d21c0b59_StructIns>>()));
}



inline jule::Ref<_1d21d97ee_Param> _1b8b10cbb_build_param(jule::Ref<_1d1e5192e_ParamDecl> _17420_decl) {
	return jule::new_struct<_1d21d97ee_Param>(new( std::nothrow ) _1d21d97ee_Param(_17420_decl->_field_token,_17420_decl->_field_mutable,_17420_decl->_field_variadic,_17420_decl->_field_reference,_1b8b10cbb_build_type(_17420_decl->_field_kind),_17420_decl->_field_ident));
}



inline jule::Slice<jule::Ref<_1d21d97ee_Param>> _1b8b10cbb_build_params(jule::Slice<jule::Ref<_1d1e5192e_ParamDecl>>& _18522_decls) {
	jule::Slice<jule::Ref<_1d21d97ee_Param>> _18613_params = jule::Slice<jule::Ref<_1d21d97ee_Param>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_18522_decls.len())));
	{
		auto _range_expr = _18522_decls;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1b8b10cbb_i = 0;
			jule::Ref<_1d1e5192e_ParamDecl> _1b8b10cbb_decl = *_range_begin;
			_iter_begin_4710036848:;
			{
				_18613_params[static_cast<jule::Int>(_1b8b10cbb_i)]=_1b8b10cbb_build_param(_1b8b10cbb_decl);
			}
			_iter_next_4710036848:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1b8b10cbb_i; _1b8b10cbb_decl = *_range_begin; goto _iter_begin_4710036848; }
			_iter_end_4710036848:;
		}
	}
	return _18613_params;
}



inline jule::Ref<_1d21d97ee_RetType> _1b8b10cbb_build_ret_type(jule::Ref<_1d1e5192e_RetTypeDecl> _19323_decl) {
	if ((_19323_decl->_field_idents == nullptr) && (!(jule::real(_19323_decl->_field_kind)))) {
		return jule::new_ref<_1d21d97ee_RetType>();
	}
	return jule::new_struct<_1d21d97ee_RetType>(new( std::nothrow ) _1d21d97ee_RetType(_1b8b10cbb_build_type(_19323_decl->_field_kind),_19323_decl->_field_idents));
}



inline jule::Ref<_1d21d97ee_Fn> _1b8b10cbb_build_fn(jule::Ref<_1d1e5192e_FnDecl> _20317_decl) {
	return jule::new_struct<_1d21d97ee_Fn>(new( std::nothrow ) _1d21d97ee_Fn(jule::Ref<_1b912748b_Sema>(),_20317_decl->_field_token,_20317_decl->_field_global,_20317_decl->_field_unsafety,_20317_decl->_field_public,_20317_decl->_field_cpp_linked,_20317_decl->_field_statically,_20317_decl->_field_ident,_20317_decl->_field_directives,_1b8b10cbb_build_doc(_20317_decl->_field_doc_comments),_20317_decl->_field_scope,_20317_decl->_field_generics,_1b8b10cbb_build_ret_type(_20317_decl->_field_result),_1b8b10cbb_build_params(_20317_decl->_field_params),jule::Ref<_1d21c0b59_Struct>(),jule::Slice<jule::Ref<_1d21d97ee_FnIns>>()));
}



inline jule::Slice<jule::Ref<_1d21d97ee_Fn>> _1b8b10cbb_build_methods(jule::Slice<jule::Ref<_1d1e5192e_FnDecl>>& _22123_decls) {
	jule::Slice<jule::Ref<_1d21d97ee_Fn>> _22213_methods = jule::Slice<jule::Ref<_1d21d97ee_Fn>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_22123_decls.len())));
	{
		auto _range_expr = _22123_decls;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1b8b10cbb_i = 0;
			jule::Ref<_1d1e5192e_FnDecl> _1b8b10cbb_decl = *_range_begin;
			_iter_begin_4710053072:;
			{
				_22213_methods[static_cast<jule::Int>(_1b8b10cbb_i)]=_1b8b10cbb_build_fn(_1b8b10cbb_decl);
			}
			_iter_next_4710053072:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1b8b10cbb_i; _1b8b10cbb_decl = *_range_begin; goto _iter_begin_4710053072; }
			_iter_end_4710053072:;
		}
	}
	return _22213_methods;
}



inline jule::Ref<_1b8cd2894_Trait> _1b8b10cbb_build_trait(jule::Ref<_1d1e5192e_TraitDecl> _22920_decl) {
	return jule::new_struct<_1b8cd2894_Trait>(new( std::nothrow ) _1b8cd2894_Trait(_22920_decl->_field_token,_22920_decl->_field_ident,_22920_decl->_field_public,jule::Bool(),_1b8b10cbb_build_doc(_22920_decl->_field_doc_comments),_1b8b10cbb_build_methods(_22920_decl->_field_methods),jule::Slice<jule::Ref<_1d21c0b59_Struct>>()));
}



inline jule::Ref<_1b8dae520_EnumItem> _1b8b10cbb_build_enum_item(jule::Ref<_1d1e5192e_EnumItemDecl> _23924_decl) {
	return jule::new_struct<_1b8dae520_EnumItem>(new( std::nothrow ) _1b8dae520_EnumItem(_23924_decl->_field_token,_23924_decl->_field_ident,_1b8b10cbb_build_expr(_23924_decl->_field_expr)));
}



inline jule::Slice<jule::Ref<_1b8dae520_EnumItem>> _1b8b10cbb_build_enum_items(jule::Slice<jule::Ref<_1d1e5192e_EnumItemDecl>>& _24726_decls) {
	jule::Slice<jule::Ref<_1b8dae520_EnumItem>> _24813_items = jule::Slice<jule::Ref<_1b8dae520_EnumItem>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_24726_decls.len())));
	{
		auto _range_expr = _24726_decls;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1b8b10cbb_i = 0;
			jule::Ref<_1d1e5192e_EnumItemDecl> _1b8b10cbb_decl = *_range_begin;
			_iter_begin_4710065264:;
			{
				_24813_items[static_cast<jule::Int>(_1b8b10cbb_i)]=_1b8b10cbb_build_enum_item(_1b8b10cbb_decl);
			}
			_iter_next_4710065264:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1b8b10cbb_i; _1b8b10cbb_decl = *_range_begin; goto _iter_begin_4710065264; }
			_iter_end_4710065264:;
		}
	}
	return _24813_items;
}



inline jule::Ref<_1b8dae520_Enum> _1b8b10cbb_build_enum(jule::Ref<_1d1e5192e_EnumDecl> _25519_decl) {
	return jule::new_struct<_1b8dae520_Enum>(new( std::nothrow ) _1b8dae520_Enum(_25519_decl->_field_token,_25519_decl->_field_public,_25519_decl->_field_ident,_1b8b10cbb_build_type(_25519_decl->_field_kind),_1b8b10cbb_build_enum_items(_25519_decl->_field_items),_1b8b10cbb_build_doc(_25519_decl->_field_doc_comments)));
}



inline jule::Ref<_1b919cb2c_Var> _1b8b10cbb_build_var(jule::Ref<_1d1e5192e_VarDecl> _26618_decl) {
	return jule::new_struct<_1b919cb2c_Var>(new( std::nothrow ) _1b919cb2c_Var(jule::Ref<_1b8cd2c4b_Scope>(),_26618_decl->_field_token,_26618_decl->_field_ident,_26618_decl->_field_cpp_linked,_26618_decl->_field_constant,_26618_decl->_field_mutable,_26618_decl->_field_public,jule::Bool(),_26618_decl->_field_statically,_26618_decl->_field_reference,_1b8b10cbb_build_doc(_26618_decl->_field_doc_comments),_1b8b10cbb_build_type(_26618_decl->_field_kind),_1b8b10cbb_build_expr(_26618_decl->_field_expr),_1b8b10cbb_ReferenceStack::_static_method_new(),_26618_decl->_field_directives,jule::Slice<jule::Ref<_1b919cb2c_Var>>()));
}



inline jule::Slice<jule::Ref<_1b919cb2c_Var>> _1b8b10cbb_build_vars(jule::Slice<jule::Ref<_1d1e5192e_VarDecl>> _28419_decls) {
	jule::Slice<jule::Ref<_1b919cb2c_Var>> _28513_vars = jule::Slice<jule::Ref<_1b919cb2c_Var>>::alloc(0LL,static_cast<jule::Int>(static_cast<jule::I64>(_28419_decls.len())));
	{
		auto _range_expr = _28419_decls;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d1e5192e_VarDecl> _1b8b10cbb_decl = *_range_begin;
			_iter_begin_4710081344:;
			{
				_28513_vars=jule::append(_28513_vars,jule::Slice<jule::Ref<_1b919cb2c_Var>>({_1b8b10cbb_build_var(_1b8b10cbb_decl)}));
			}
			_iter_next_4710081344:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b8b10cbb_decl = *_range_begin; goto _iter_begin_4710081344; }
			_iter_end_4710081344:;
		}
	}
	return _28513_vars;
}



inline jule::Ref<_1b8dacd8c_Impl> _1b8b10cbb_build_impl(jule::Ref<_1d1e5192e_Impl> _29219_decl) {
	return jule::new_struct<_1b8dacd8c_Impl>(new( std::nothrow ) _1b8dacd8c_Impl(_29219_decl->_field_base,_29219_decl->_field_dest,_1b8b10cbb_build_methods(_29219_decl->_field_methods),_1b8b10cbb_build_vars(_29219_decl->_field_statics)));
}



inline jule::Ref<_1b8cd2c4b_ScopeChecker> _1b8cd2c4b_new_scope_checker_base(jule::Ref<_1b912748b_Sema> _3831_s,jule::Ref<_1d21d97ee_FnIns> _3845_owner) {
	return jule::new_struct<_1b8cd2c4b_ScopeChecker>(new( std::nothrow ) _1b8cd2c4b_ScopeChecker(_3831_s,_3845_owner,jule::Ref<_1b8cd2c4b_ScopeChecker>(),jule::Int(),jule::new_struct<_1b9390d86_SymbolTable>(new( std::nothrow ) _1b9390d86_SymbolTable()),jule::Ref<_1b8cd2c4b_Scope>(),jule::Ref<_1d1e5192e_ScopeTree>(),jule::Uintptr(),jule::Uintptr(),jule::Ref<jule::Slice<jule::Ref<_1b8cd2c4b_ScopeLabel>>>(),jule::Ref<jule::Slice<jule::Ref<_1b8cd2c4b_ScopeGoto>>>(),jule::Int()));
}



inline jule::Ref<_1b8cd2c4b_ScopeChecker> _1b8cd2c4b_new_scope_checker(jule::Ref<_1b912748b_Sema> _4626_s,jule::Ref<_1d21d97ee_FnIns> _4640_owner) {
	jule::Ref<_1b8cd2c4b_ScopeChecker> _4713_base = _1b8cd2c4b_new_scope_checker_base(_4626_s,_4640_owner);
	_4713_base->_field_labels=jule::new_ref<jule::Slice<jule::Ref<_1b8cd2c4b_ScopeLabel>>>(nullptr);
	_4713_base->_field_gotos=jule::new_ref<jule::Slice<jule::Ref<_1b8cd2c4b_ScopeGoto>>>(nullptr);
	return _4713_base;
}



inline jule::Ref<_1b8cd2c4b_ScopeLabel> _1b8cd2c4b_find_label_parent(jule::Str _5622_ident,jule::Ref<_1b8cd2c4b_ScopeChecker> _5638_scope) {
	jule::Ref<_1b8cd2c4b_ScopeLabel> _5713_label = _5638_scope->_method_find_label_scope(_5622_ident);
	_iter_begin_4710096192:;
	if (!((!(jule::real(_5713_label))))) { goto _iter_end_4710096192; }
	{
		if ((!(jule::real(_5638_scope->_field_parent))) || jule::real(_5638_scope->_field_owner)) {
			return jule::new_ref<_1b8cd2c4b_ScopeLabel>();
		}
		_5638_scope=_5638_scope->_field_parent;
		_5713_label=_5638_scope->_method_find_label_scope(_5622_ident);
	}
	_iter_next_4710096192:;
	goto _iter_begin_4710096192;
	_iter_end_4710096192:;
	return _5713_label;
}



inline jule::Int _1b8cd2c4b_count_match_type(jule::Ref<_1b8cd2c4b_Match> _7021_m,jule::Ref<_1b951b088_TypeKind> _7032_t) {
	jule::Int _7113_n = 0LL;
	jule::Str _729_kind = _7032_t->_method_to_str();
	_julec_label_loop:;
	{
		auto _range_expr = _7021_m->_field_cases;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b8cd2c4b_Case> _1b8cd2c4b_c = *_range_begin;
			_iter_begin_4710105872:;
			{
				if ((!(jule::real(_1b8cd2c4b_c)))) {
					goto _iter_next_4710105872;
				}
				{
					auto _range_expr = _1b8cd2c4b_c->_field_exprs;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Any _1b8cd2c4b_expr = *_range_begin;
						_iter_begin_4710108464:;
						{
							if (_1b8cd2c4b_expr == nullptr) {
								goto _iter_end_4710105872;
							}
							if (_729_kind == _1b8cd2c4b_expr.operator jule::Ref<_1b951b088_TypeKind>()->_method_to_str()) {
								(_7113_n)++;
							}
						}
						_iter_next_4710108464:;
						++_range_begin;
						if (_range_begin != _range_end) { _1b8cd2c4b_expr = *_range_begin; goto _iter_begin_4710108464; }
						_iter_end_4710108464:;
					}
				}
			}
			_iter_next_4710105872:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b8cd2c4b_c = *_range_begin; goto _iter_begin_4710105872; }
			_iter_end_4710105872:;
		}
	}
	return _7113_n;
}



inline jule::Slice<jule::Ref<_1b9523799_Data>> _1b8cd2c4b_get_datas_from_tuple_data(jule::Ref<_1b9523799_Data> _9434_d) {
	if (jule::real(_9434_d->_field_kind->_method_tup())) {
		{
			auto _match_expr{ _9434_d->_field_model };
			if (!(_match_expr.type_is<jule::Ref<_1b8dbae99_TupleExprModel>>())) { goto _case_end_4710115888; }
			_case_begin_4710115888:;
			{
				return _9434_d->_field_model.operator jule::Ref<_1b8dbae99_TupleExprModel>()->_field_datas;
			}
			goto _match_end_4710113872;
			_case_end_4710115888:;
			_case_begin_4710114560:;
			{
				jule::Ref<_1b951b088_Tuple> _10121_t = _9434_d->_field_kind->_method_tup();
				jule::Slice<jule::Ref<_1b9523799_Data>> _10221_r = jule::Slice<jule::Ref<_1b9523799_Data>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_10121_t->_field_types.len())));
				{
					auto _range_expr = _10121_t->_field_types;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Int _1b8cd2c4b_i = 0;
						jule::Ref<_1b951b088_TypeKind> _1b8cd2c4b_kind = *_range_begin;
						_iter_begin_4710120784:;
						{
							_10221_r[static_cast<jule::Int>(_1b8cd2c4b_i)]=jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(_1b8cd2c4b_kind,jule::Ref<_1b951b088_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1b9d678e5_Const>()));
						}
						_iter_next_4710120784:;
						++_range_begin;
						if (_range_begin != _range_end) { ++_1b8cd2c4b_i; _1b8cd2c4b_kind = *_range_begin; goto _iter_begin_4710120784; }
						_iter_end_4710120784:;
					}
				}
				return _10221_r;
			}
			goto _match_end_4710113872;
			_case_end_4710114560:;
			_match_end_4710113872:;
		}
	} else {
		return jule::Slice<jule::Ref<_1b9523799_Data>>({_9434_d});
	}
}



inline jule::Slice<jule::Any> _1b8cd2c4b_get_expr_models(jule::Any _11624_m) {
	{
		auto _match_expr{ _11624_m };
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_TupleExpr>>())) { goto _case_end_4710113472; }
		_case_begin_4710113472:;
		{
			jule::Ref<_1d1e5192e_TupleExpr> _11917_tup = _11624_m.operator jule::Ref<_1d1e5192e_TupleExpr>();
			jule::Slice<jule::Any> _12017_models = jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::Int>(static_cast<jule::I64>(_11917_tup->_field_expr.len())));
			{
				auto _range_expr = _11917_tup->_field_expr;
				if (_range_expr.begin() != _range_expr.end()) {
					auto _range_begin = _range_expr.begin();
					const auto _range_end = _range_expr.end();
					jule::Ref<_1d1e5192e_Expr> _1b8cd2c4b_expr = *_range_begin;
					_iter_begin_4710132560:;
					{
						_12017_models=jule::append(_12017_models,jule::Slice<jule::Any>({_1b8cd2c4b_expr->_field_kind}));
					}
					_iter_next_4710132560:;
					++_range_begin;
					if (_range_begin != _range_end) { _1b8cd2c4b_expr = *_range_begin; goto _iter_begin_4710132560; }
					_iter_end_4710132560:;
				}
			}
			return _12017_models;
		}
		goto _match_end_4710125632;
		_case_end_4710113472:;
		_case_begin_4710127984:;
		{
			return jule::Slice<jule::Any>({_11624_m});
		}
		goto _match_end_4710125632;
		_case_end_4710127984:;
		_match_end_4710125632:;
	}
}



inline jule::Bool _1b8cd2c4b_check_mut(jule::Ref<_1b912748b_Sema> _13118_s,jule::Ref<_1b9523799_Data> _13128_left,jule::Ref<_1b9523799_Data> _13145_right,_1d1da4277_Token _13159_error_token) {
	jule::Bool _13181_ok = jule::Bool();
	{
		if (!(((!(_13128_left->_field_mutable))))) { goto _case_end_4710140496; }
		_case_begin_4710140496:;
		{
			_13118_s->_method_push_err(_13159_error_token,jule::Str("cannot assign to immutable define", 33),jule::Slice<jule::Any>({}));
			_13181_ok = false;
			return _13181_ok;
		}
		goto _match_end_4710138832;
		_case_end_4710140496:;
		if (!(((jule::real(_13145_right) && (!(_13145_right->_field_mutable))) && _13145_right->_field_kind->_method_mutable()))) { goto _case_end_4710140016; }
		_case_begin_4710140016:;
		{
			_13118_s->_method_push_err(_13159_error_token,jule::Str("cannot assign mutable type used immutable define to mutable define", 66),jule::Slice<jule::Any>({}));
			_13181_ok = false;
			return _13181_ok;
		}
		goto _match_end_4710138832;
		_case_end_4710140016:;
		_case_begin_4710138960:;
		{
			_13181_ok = true;
			return _13181_ok;
		}
		goto _match_end_4710138832;
		_case_end_4710138960:;
		_match_end_4710138832:;
	}
}



inline jule::Bool _1b8cd2c4b_check_assign(jule::Ref<_1b912748b_Sema> _14621_s,jule::Ref<_1b9523799_Data> _14635_left,jule::Ref<_1b9523799_Data> _14652_right,_1d1da4277_Token _14666_error_token) {
	jule::Bool _14688_ok = jule::Bool();
	jule::Ref<_1d21d97ee_FnIns> _1479_f = _14635_left->_field_kind->_method_fnc();
	if ((jule::real(_1479_f) && jule::real(_1479_f->_field_decl)) && _1479_f->_field_decl->_field_global) {
		_14621_s->_method_push_err(_14666_error_token,jule::Str("type is not support assignment", 30),jule::Slice<jule::Any>({}));
		_14688_ok = false;
		return _14688_ok;
	}
	{
		if (!((_14635_left->_method_is_const()))) { goto _case_end_4710157504; }
		_case_begin_4710157504:;
		{
			_14621_s->_method_push_err(_14666_error_token,jule::Str("constants is can't assign", 25),jule::Slice<jule::Any>({}));
			_14621_s->_method_push_suggestion(jule::Str("remove constant qualifer if you need to assign", 46),jule::Slice<jule::Any>({}));
			_14688_ok = false;
			return _14688_ok;
		}
		goto _match_end_4710155120;
		_case_end_4710157504:;
		if (!(((!(_14635_left->_field_lvalue))))) { goto _case_end_4710157008; }
		_case_begin_4710157008:;
		{
			_14621_s->_method_push_err(_14666_error_token,jule::Str("assignment required lvalue", 26),jule::Slice<jule::Any>({}));
			_14688_ok = false;
			return _14688_ok;
		}
		goto _match_end_4710155120;
		_case_end_4710157008:;
		if (!(((!(_1b8cd2c4b_check_mut(_14621_s,_14635_left,_14652_right,_14666_error_token)))))) { goto _case_end_4710157120; }
		_case_begin_4710157120:;
		{
			_14688_ok = false;
			return _14688_ok;
		}
		goto _match_end_4710155120;
		_case_end_4710157120:;
		_case_begin_4710156016:;
		{
			_14688_ok = true;
			return _14688_ok;
		}
		goto _match_end_4710155120;
		_case_end_4710156016:;
		_match_end_4710155120:;
	}
}



inline jule::Bool _1b8cd2c4b_is_valid_ast_st_for_next_st(jule::Any _17136_n) {
	{
		auto _match_expr{ _17136_n };
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_AssignSt>>())) { goto _case_end_4710167568; }
		_case_begin_4710167568:;
		{
			return (!(_17136_n.operator jule::Ref<_1d1e5192e_AssignSt>()->_field_declarative));
		}
		goto _match_end_4710150192;
		_case_end_4710167568:;
		if (!(_match_expr.type_is<jule::Ref<_1d1e5192e_FnCallExpr>>() || _match_expr.type_is<jule::Ref<_1d1e5192e_Expr>>())) { goto _case_end_4710167680; }
		_case_begin_4710167680:;
		{
			return true;
		}
		goto _match_end_4710150192;
		_case_end_4710167680:;
		_case_begin_4710165808:;
		{
			return false;
		}
		goto _match_end_4710150192;
		_case_end_4710165808:;
		_match_end_4710150192:;
	}
}



inline jule::Bool _1b8cd2c4b_is_valid_st_for_next_st(jule::Any _18528_st) {
	{
		auto _match_expr{ _18528_st };
		if (!(_match_expr.type_is<jule::Ref<_1b8dbae99_FnCallExprModel>>() || _match_expr.type_is<jule::Ref<_1b8cd2c4b_Postfix>>() || _match_expr.type_is<jule::Ref<_1b8cd2c4b_Assign>>() || _match_expr.type_is<jule::Ref<_1b8cd2c4b_MultiAssign>>())) { goto _case_end_4710170736; }
		_case_begin_4710170736:;
		{
			return true;
		}
		goto _match_end_4710169664;
		_case_end_4710170736:;
		if (!(_match_expr.type_is<jule::Ref<_1b9523799_Data>>())) { goto _case_end_4710170848; }
		_case_begin_4710170848:;
		{
			{
				auto _match_expr{ _18528_st.operator jule::Ref<_1b9523799_Data>()->_field_model };
				if (!(_match_expr.type_is<jule::Ref<_1b8dbae99_FnCallExprModel>>())) { goto _case_end_4710178688; }
				_case_begin_4710178688:;
				{
					return true;
				}
				goto _match_end_4710171808;
				_case_end_4710178688:;
				_case_begin_4710178384:;
				{
					return false;
				}
				goto _match_end_4710171808;
				_case_end_4710178384:;
				_match_end_4710171808:;
			}
		}
		goto _match_end_4710169664;
		_case_end_4710170848:;
		_case_begin_4710170208:;
		{
			return false;
		}
		goto _match_end_4710169664;
		_case_end_4710170208:;
		_match_end_4710169664:;
	}
}



inline jule::Bool _1b8cd2c4b_st_is_def(jule::Any _20414_st) {
	{
		auto _match_expr{ _20414_st };
		if (!(_match_expr.type_is<jule::Ref<_1b919cb2c_Var>>())) { goto _case_end_4710176912; }
		_case_begin_4710176912:;
		{
			return true;
		}
		goto _match_end_4710180256;
		_case_end_4710176912:;
		_case_begin_4710179440:;
		{
			return false;
		}
		goto _match_end_4710180256;
		_case_end_4710179440:;
		_match_end_4710180256:;
	}
}



inline jule::Ref<_1b919cb2c_Var> _1b8e0c01d_find_var_in_package(jule::Slice<jule::Ref<_1b9390d86_SymbolTable>>& _2729_files,jule::Str _2752_ident,jule::Bool _2764_cpp_linked) {
	{
		auto _range_expr = _2729_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b9390d86_SymbolTable> _1b8e0c01d_f = *_range_begin;
			_iter_begin_4710183856:;
			{
				jule::Ref<_1b919cb2c_Var> _2917_v = _1b8e0c01d_f->_method_find_var(_2752_ident,_2764_cpp_linked);
				if (jule::real(_2917_v)) {
					return _2917_v;
				}
			}
			_iter_next_4710183856:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b8e0c01d_f = *_range_begin; goto _iter_begin_4710183856; }
			_iter_end_4710183856:;
		}
	}
	return jule::new_ref<_1b919cb2c_Var>();
}



inline jule::Ref<_1b951b088_TypeAlias> _1b8e0c01d_find_type_alias_in_package(jule::Slice<jule::Ref<_1b9390d86_SymbolTable>>& _3936_files,jule::Str _3959_ident,jule::Bool _3971_cpp_linked) {
	{
		auto _range_expr = _3936_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b9390d86_SymbolTable> _1b8e0c01d_f = *_range_begin;
			_iter_begin_4710190768:;
			{
				jule::Ref<_1b951b088_TypeAlias> _4117_ta = _1b8e0c01d_f->_method_find_type_alias(_3959_ident,_3971_cpp_linked);
				if (jule::real(_4117_ta)) {
					return _4117_ta;
				}
			}
			_iter_next_4710190768:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b8e0c01d_f = *_range_begin; goto _iter_begin_4710190768; }
			_iter_end_4710190768:;
		}
	}
	return jule::new_ref<_1b951b088_TypeAlias>();
}



inline jule::Ref<_1d21c0b59_Struct> _1b8e0c01d_find_struct_in_package(jule::Slice<jule::Ref<_1b9390d86_SymbolTable>>& _5132_files,jule::Str _5155_ident,jule::Bool _5167_cpp_linked) {
	{
		auto _range_expr = _5132_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b9390d86_SymbolTable> _1b8e0c01d_f = *_range_begin;
			_iter_begin_4710197648:;
			{
				jule::Ref<_1d21c0b59_Struct> _5317_s = _1b8e0c01d_f->_method_find_struct(_5155_ident,_5167_cpp_linked);
				if (jule::real(_5317_s)) {
					return _5317_s;
				}
			}
			_iter_next_4710197648:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b8e0c01d_f = *_range_begin; goto _iter_begin_4710197648; }
			_iter_end_4710197648:;
		}
	}
	return jule::new_ref<_1d21c0b59_Struct>();
}



inline jule::Ref<_1d21d97ee_Fn> _1b8e0c01d_find_fn_in_package(jule::Slice<jule::Ref<_1b9390d86_SymbolTable>>& _6328_files,jule::Str _6351_ident,jule::Bool _6363_cpp_linked) {
	{
		auto _range_expr = _6328_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b9390d86_SymbolTable> _1b8e0c01d_file = *_range_begin;
			_iter_begin_4710203120:;
			{
				jule::Ref<_1d21d97ee_Fn> _6517_f = _1b8e0c01d_file->_method_find_fn(_6351_ident,_6363_cpp_linked);
				if (jule::real(_6517_f)) {
					return _6517_f;
				}
			}
			_iter_next_4710203120:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b8e0c01d_file = *_range_begin; goto _iter_begin_4710203120; }
			_iter_end_4710203120:;
		}
	}
	return jule::new_ref<_1d21d97ee_Fn>();
}



inline jule::Ref<_1b8cd2894_Trait> _1b8e0c01d_find_trait_in_package(jule::Slice<jule::Ref<_1b9390d86_SymbolTable>>& _7531_files,jule::Str _7554_ident) {
	{
		auto _range_expr = _7531_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b9390d86_SymbolTable> _1b8e0c01d_f = *_range_begin;
			_iter_begin_4710226160:;
			{
				jule::Ref<_1b8cd2894_Trait> _7717_t = _1b8e0c01d_f->_method_find_trait(_7554_ident);
				if (jule::real(_7717_t)) {
					return _7717_t;
				}
			}
			_iter_next_4710226160:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b8e0c01d_f = *_range_begin; goto _iter_begin_4710226160; }
			_iter_end_4710226160:;
		}
	}
	return jule::new_ref<_1b8cd2894_Trait>();
}



inline jule::Ref<_1b8dae520_Enum> _1b8e0c01d_find_enum_in_package(jule::Slice<jule::Ref<_1b9390d86_SymbolTable>>& _8730_files,jule::Str _8753_ident) {
	{
		auto _range_expr = _8730_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b9390d86_SymbolTable> _1b8e0c01d_f = *_range_begin;
			_iter_begin_4710233584:;
			{
				jule::Ref<_1b8dae520_Enum> _8917_e = _1b8e0c01d_f->_method_find_enum(_8753_ident);
				if (jule::real(_8917_e)) {
					return _8917_e;
				}
			}
			_iter_next_4710233584:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b8e0c01d_f = *_range_begin; goto _iter_begin_4710233584; }
			_iter_end_4710233584:;
		}
	}
	return jule::new_ref<_1b8dae520_Enum>();
}



inline jule::Bool _1b912748b_is_valid_model_for_ref(jule::Any _1527_m) {
	{
		auto _match_expr{ _1527_m };
		if (!(_match_expr.type_is<jule::Ref<_1b919cb2c_Var>>())) { goto _case_end_4710234240; }
		_case_begin_4710234240:;
		{
			return true;
		}
		goto _match_end_4710239184;
		_case_end_4710234240:;
		if (!(_match_expr.type_is<jule::Ref<_1b8dbae99_StructSubIdentExprModel>>())) { goto _case_end_4710234352; }
		_case_begin_4710234352:;
		{
			jule::Ref<_1b8dbae99_StructSubIdentExprModel> _2113_model = _1527_m.operator jule::Ref<_1b8dbae99_StructSubIdentExprModel>();
			return _1b912748b_is_valid_model_for_ref(_2113_model->_field_expr);
		}
		goto _match_end_4710239184;
		_case_end_4710234352:;
		if (!(_match_expr.type_is<jule::Ref<_1b8dbae99_TraitSubIdentExprModel>>())) { goto _case_end_4710234464; }
		_case_begin_4710234464:;
		{
			jule::Ref<_1b8dbae99_TraitSubIdentExprModel> _2513_model = _1527_m.operator jule::Ref<_1b8dbae99_TraitSubIdentExprModel>();
			return _1b912748b_is_valid_model_for_ref(_2513_model->_field_expr);
		}
		goto _match_end_4710239184;
		_case_end_4710234464:;
		_case_begin_4710238672:;
		{
			return false;
		}
		goto _match_end_4710239184;
		_case_end_4710238672:;
		_match_end_4710239184:;
	}
}



inline _1d0557e9e_Log _1b912748b_compiler_err(_1d1da4277_Token& _3318_token,jule::Bool _3332_line,jule::Str _3344_fmt,jule::Slice<jule::Any> _3357_args) {
	_1d0557e9e_Log _3413_log = _1d0557e9e_Log(1LLU,_3318_token._field_row,_3318_token._field_column,_3318_token._field_file->_method_path(),_1d0557e9e_logf(_3344_fmt,_3357_args),jule::Str(),jule::Str());
	if (_3332_line) {
		_3413_log._field_line=_3318_token._field_file->_method_get_row(_3318_token._field_row);
	}
	return _3413_log;
}



inline jule::Bool _1b912748b_imp_is_lookupable(jule::Ref<_1b8e0c01d_ImportInfo>& _4723_i,jule::Str _4739_ident) {
	if (_4723_i->_field_cpp_linked) {
		return false;
	}
	if ((!(_4723_i->_field_import_all))) {
		if (_4723_i->_field_selected.len() > 0LL) {
			return _4723_i->_method_exist_ident(_4739_ident);
		}
	}
	return _4723_i->_field_import_all;
}



inline jule::Slice<jule::Ref<_1b919cb2c_Var>> _1b912748b_build_ret_vars(jule::Ref<_1d21d97ee_FnIns>& _6024_f) {
	if (_6024_f->_field_decl->_method_is_void() || (!(jule::real(_6024_f->_field_result)))) {
		return nullptr;
	}
	jule::Slice<jule::Ref<_1b919cb2c_Var>> _6513_vars = nullptr;
	jule::Slice<jule::Ref<_1b951b088_TypeKind>> _6613_types = _1b9176ba0_get_fn_result_types(_6024_f);
	{
		auto _range_expr = _6024_f->_field_decl->_field_result->_field_idents;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1b912748b_i = 0;
			_1d1da4277_Token _1b912748b_ident = *_range_begin;
			_iter_begin_4710268448:;
			{
				if (_1d1da4277_is_ignore_ident(_1b912748b_ident._field_kind)) {
					goto _iter_next_4710268448;
				}
				jule::Ref<_1b919cb2c_Var> _7217_v = jule::new_struct<_1b919cb2c_Var>(new( std::nothrow ) _1b919cb2c_Var(_6024_f->_field_scope,_1b912748b_ident,_1b912748b_ident._field_kind,jule::Bool(),jule::Bool(),true,jule::Bool(),true,jule::Bool(),jule::Bool(),jule::Str(),jule::new_struct<_1b951b088_TypeSymbol>(new( std::nothrow ) _1b951b088_TypeSymbol(jule::Ref<_1d1e5192e_TypeDecl>(),_6613_types[static_cast<jule::Int>(_1b912748b_i)])),jule::new_struct<_1b9523799_Value>(new( std::nothrow ) _1b9523799_Value(jule::Ref<_1d1e5192e_Expr>(),jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data()))),jule::Ref<_1b8b10cbb_ReferenceStack>(),jule::Slice<jule::Ref<_1d1e5192e_Directive>>(),jule::Slice<jule::Ref<_1b919cb2c_Var>>()));
				_6513_vars=jule::append(_6513_vars,jule::Slice<jule::Ref<_1b919cb2c_Var>>({_7217_v}));
			}
			_iter_next_4710268448:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1b912748b_i; _1b912748b_ident = *_range_begin; goto _iter_begin_4710268448; }
			_iter_end_4710268448:;
		}
	}
	return _6513_vars;
}



inline jule::Slice<jule::Ref<_1b919cb2c_Var>> _1b912748b_build_param_vars(jule::Ref<_1d21d97ee_FnIns>& _8926_f) {
	if (_8926_f->_field_params.len() == 0LL) {
		return nullptr;
	}
	jule::Slice<jule::Ref<_1b919cb2c_Var>> _9413_vars = jule::Slice<jule::Ref<_1b919cb2c_Var>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_8926_f->_field_params.len())));
	{
		auto _range_expr = _8926_f->_field_params;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1b912748b_i = 0;
			jule::Ref<_1d21d97ee_ParamIns> _1b912748b_p = *_range_begin;
			_iter_begin_4710282512:;
			{
				jule::Ref<_1b919cb2c_Var> _9617_v = jule::new_struct<_1b919cb2c_Var>(new( std::nothrow ) _1b919cb2c_Var(_8926_f->_field_scope,_1b912748b_p->_field_decl->_field_token,_1b912748b_p->_field_decl->_field_ident,jule::Bool(),jule::Bool(),_1b912748b_p->_field_decl->_field_mutable,jule::Bool(),true,jule::Bool(),jule::Bool(),jule::Str(),jule::new_struct<_1b951b088_TypeSymbol>(new( std::nothrow ) _1b951b088_TypeSymbol()),jule::new_struct<_1b9523799_Value>(new( std::nothrow ) _1b9523799_Value(jule::Ref<_1d1e5192e_Expr>(),jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data()))),jule::Ref<_1b8b10cbb_ReferenceStack>(),jule::Slice<jule::Ref<_1d1e5192e_Directive>>(),jule::Slice<jule::Ref<_1b919cb2c_Var>>()));
				{
					if (!((_1b912748b_p->_field_decl->_method_is_self()))) { goto _case_end_4710290416; }
					_case_begin_4710290416:;
					{
						_9617_v->_field_kind->_field_kind=jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_8926_f->_field_owner));
						_9617_v->_field_reference=true;
						if (_1b912748b_p->_field_decl->_method_is_ref()) {
							_9617_v->_field_ident=_9617_v->_field_ident.slice(1LL);
							_9617_v->_field_kind->_field_kind->_field_kind=jule::new_struct<_1b951b088_Ref>(new( std::nothrow ) _1b951b088_Ref(_9617_v->_field_kind->_field_kind->_method_clone()));
						}
					}
					goto _match_end_4710289456;
					_case_end_4710290416:;
					if (!((_1b912748b_p->_field_decl->_field_variadic))) { goto _case_end_4710293296; }
					_case_begin_4710293296:;
					{
						_9617_v->_field_kind->_field_kind=jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1b951b088_Slc>(new( std::nothrow ) _1b951b088_Slc(_1b912748b_p->_field_kind->_method_clone()))));
					}
					goto _match_end_4710289456;
					_case_end_4710293296:;
					_case_begin_4710289584:;
					{
						_9617_v->_field_kind->_field_kind=_1b912748b_p->_field_kind->_method_clone();
					}
					goto _match_end_4710289456;
					_case_end_4710289584:;
					_match_end_4710289456:;
				}
				_9413_vars[static_cast<jule::Int>(_1b912748b_i)]=_9617_v;
			}
			_iter_next_4710282512:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1b912748b_i; _1b912748b_p = *_range_begin; goto _iter_begin_4710282512; }
			_iter_end_4710282512:;
		}
	}
	return _9413_vars;
}



inline jule::Slice<jule::Ref<_1b951b088_TypeAlias>> _1b912748b_build_generic_type_aliases(jule::Ref<_1d21d97ee_FnIns>& _13736_f) {
	jule::I64 _13813_size = _13736_f->_field_generics.len();
	if (jule::real(_13736_f->_field_decl->_field_owner)) {
		_13813_size+=static_cast<jule::I64>(_13736_f->_field_decl->_field_owner->_field_generics.len());
	}
	if (_13813_size == 0LL) {
		return nullptr;
	}
	jule::Slice<jule::Ref<_1b951b088_TypeAlias>> _14713_aliases = jule::Slice<jule::Ref<_1b951b088_TypeAlias>>::alloc(static_cast<jule::Int>(_13813_size));
	{
		auto _range_expr = _13736_f->_field_generics;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1b912748b_i = 0;
			jule::Ref<_1b951b088_TypeKind> _1b912748b_g = *_range_begin;
			_iter_begin_4710310480:;
			{
				jule::Ref<_1d1e5192e_GenericDecl> _15017_decl = _13736_f->_field_decl->_field_generics[static_cast<jule::Int>(_1b912748b_i)];
				_14713_aliases[static_cast<jule::Int>(_1b912748b_i)]=jule::new_struct<_1b951b088_TypeAlias>(new( std::nothrow ) _1b951b088_TypeAlias(_13736_f->_field_decl->_field_scope,jule::Bool(),jule::Bool(),true,_15017_decl->_field_token,_15017_decl->_field_ident,jule::new_struct<_1b951b088_TypeSymbol>(new( std::nothrow ) _1b951b088_TypeSymbol(jule::Ref<_1d1e5192e_TypeDecl>(),_1b912748b_g)),jule::Str(),jule::Slice<jule::Any>()));
			}
			_iter_next_4710310480:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1b912748b_i; _1b912748b_g = *_range_begin; goto _iter_begin_4710310480; }
			_iter_end_4710310480:;
		}
	}
	if (jule::real(_13736_f->_field_decl->_field_owner)) {
		jule::Ref<_1d21c0b59_StructIns> _16117_owner = _13736_f->_field_owner;
		{
			auto _range_expr = _16117_owner->_field_generics;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Int _1b912748b_i = 0;
				jule::Ref<_1b951b088_TypeKind> _1b912748b_g = *_range_begin;
				_iter_begin_4710320128:;
				{
					jule::Ref<_1d1e5192e_GenericDecl> _16321_decl = _16117_owner->_field_decl->_field_generics[static_cast<jule::Int>(_1b912748b_i)];
					_14713_aliases[static_cast<jule::Int>(_13736_f->_field_generics.len() + _1b912748b_i)]=jule::new_struct<_1b951b088_TypeAlias>(new( std::nothrow ) _1b951b088_TypeAlias(_13736_f->_field_decl->_field_scope,jule::Bool(),jule::Bool(),true,_16321_decl->_field_token,_16321_decl->_field_ident,jule::new_struct<_1b951b088_TypeSymbol>(new( std::nothrow ) _1b951b088_TypeSymbol(jule::Ref<_1d1e5192e_TypeDecl>(),_1b912748b_g)),jule::Str(),jule::Slice<jule::Any>()));
				}
				_iter_next_4710320128:;
				++_range_begin;
				if (_range_begin != _range_end) { ++_1b912748b_i; _1b912748b_g = *_range_begin; goto _iter_begin_4710320128; }
				_iter_end_4710320128:;
			}
		}
	}
	return _14713_aliases;
}



inline jule::Ref<_1b9390d86_SymbolTable> _1b912748b_find_file(jule::Slice<jule::Ref<_1b9390d86_SymbolTable>>& _17719_files,jule::Ref<_1d1ee01b5_File>& _17743_handler) {
	{
		auto _range_expr = _17719_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b9390d86_SymbolTable> _1b912748b_fl = *_range_begin;
			_iter_begin_4710329056:;
			{
				if ((_1b912748b_fl->_field_file).alloc == (_17743_handler).alloc) {
					return _1b912748b_fl;
				}
			}
			_iter_next_4710329056:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b912748b_fl = *_range_begin; goto _iter_begin_4710329056; }
			_iter_end_4710329056:;
		}
	}
	return jule::new_ref<_1b9390d86_SymbolTable>();
}



inline std::tuple<jule::Bool,jule::Bool> _1b912748b_conditional_has_ret(jule::Ref<_1b8cd2c4b_Conditional> _18628_c) {
	jule::Bool _18647_ok = jule::Bool();
	jule::Bool _18657_breaking = jule::Bool();
	jule::Bool _18713_breaked = false;
	{
		auto _range_expr = _18628_c->_field_elifs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b8cd2c4b_If> _1b912748b_elif = *_range_begin;
			_iter_begin_4710335040:;
			{
				if ((!(jule::real(_1b912748b_elif)))) {
					_18647_ok = false;
					_18657_breaking = false;
					return std::make_tuple(_18647_ok,_18657_breaking);
				}
				std::tie(_18647_ok,std::ignore,_18657_breaking) = _1b912748b___has_ret(_1b912748b_elif->_field_scope);
				_18713_breaked=_18713_breaked || _18657_breaking;
				if ((!(_18647_ok))) {
					_18647_ok = false;
					_18657_breaking = _18713_breaked;
					return std::make_tuple(_18647_ok,_18657_breaking);
				}
			}
			_iter_next_4710335040:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b912748b_elif = *_range_begin; goto _iter_begin_4710335040; }
			_iter_end_4710335040:;
		}
	}
	if ((!(jule::real(_18628_c->_field_default)))) {
		_18647_ok = false;
		_18657_breaking = _18713_breaked;
		return std::make_tuple(_18647_ok,_18657_breaking);
	}
	std::tie(_18647_ok,std::ignore,_18657_breaking) = _1b912748b___has_ret(_18628_c->_field_default->_field_scope);
	_18713_breaked=_18713_breaked || _18657_breaking;
	_18647_ok = _18647_ok;
	_18657_breaking = _18713_breaked;
	return std::make_tuple(_18647_ok,_18657_breaking);
}



inline jule::Bool _1b912748b_match_has_ret(jule::Ref<_1b8cd2c4b_Match> _20822_m) {
	if ((!(jule::real(_20822_m->_field_default)))) {
		return false;
	}
	jule::Bool _21313_ok = true;
	jule::Bool _21413_falled = false;
	jule::Bool _21513_breaked = false;
	{
		auto _range_expr = _20822_m->_field_cases;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b8cd2c4b_Case> _1b912748b_c = *_range_begin;
			_iter_begin_4710349072:;
			{
				if ((!(jule::real(_1b912748b_c)))) {
					return false;
				}
				std::tie(_21313_ok,_21413_falled,_21513_breaked) = _1b912748b___has_ret(_1b912748b_c->_field_scope);
				if (((!(_21313_ok)) && (!(_21413_falled))) || _21513_breaked) {
					return false;
				}
				{
					if (!(((!(_21313_ok))))) { goto _case_end_4710353456; }
					_case_begin_4710353456:;
					{
						if ((!(_21413_falled))) {
							return false;
						}
						goto _case_begin_4710353568;
					}
					goto _match_end_4710353072;
					_case_end_4710353456:;
					if (!((_21413_falled))) { goto _case_end_4710353568; }
					_case_begin_4710353568:;
					{
						if ((!(jule::real(_1b912748b_c->_field_next)))) {
							return false;
						}
						goto _iter_next_4710349072;
					}
					goto _match_end_4710353072;
					_case_end_4710353568:;
					_match_end_4710353072:;
				}
				_21413_falled=false;
			}
			_iter_next_4710349072:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b912748b_c = *_range_begin; goto _iter_begin_4710349072; }
			_iter_end_4710349072:;
		}
	}
	return _1b912748b_has_ret(_20822_m->_field_default->_field_scope);
}



inline std::tuple<jule::Bool,jule::Bool,jule::Bool> _1b912748b___has_ret(jule::Ref<_1b8cd2c4b_Scope> _24418_s) {
	jule::Bool _24431_ok = jule::Bool();
	jule::Bool _24441_falled = jule::Bool();
	jule::Bool _24455_breaked = jule::Bool();
	if ((!(jule::real(_24418_s)))) {
		_24431_ok = false;
		_24441_falled = false;
		_24455_breaked = false;
		return std::make_tuple(_24431_ok,_24441_falled,_24455_breaked);
	}
	{
		auto _range_expr = _24418_s->_field_stmts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Any _1b912748b_st = *_range_begin;
			_iter_begin_4710361616:;
			{
				{
					auto _match_expr{ _1b912748b_st };
					if (!(_match_expr.type_is<jule::Ref<_1b8cd2c4b_FallSt>>())) { goto _case_end_4710365552; }
					_case_begin_4710365552:;
					{
						_24441_falled=true;
					}
					goto _match_end_4710364432;
					_case_end_4710365552:;
					if (!(_match_expr.type_is<jule::Ref<_1b8cd2c4b_BreakSt>>())) { goto _case_end_4710365872; }
					_case_begin_4710365872:;
					{
						_24431_ok = false;
						_24441_falled = false;
						_24455_breaked = true;
						return std::make_tuple(_24431_ok,_24441_falled,_24455_breaked);
					}
					goto _match_end_4710364432;
					_case_end_4710365872:;
					if (!(_match_expr.type_is<jule::Ref<_1b8cd2c4b_ContSt>>())) { goto _case_end_4710365984; }
					_case_begin_4710365984:;
					{
						_24431_ok = false;
						_24441_falled = false;
						_24455_breaked = true;
						return std::make_tuple(_24431_ok,_24441_falled,_24455_breaked);
					}
					goto _match_end_4710364432;
					_case_end_4710365984:;
					if (!(_match_expr.type_is<jule::Ref<_1b8cd2c4b_InfIter>>())) { goto _case_end_4710366112; }
					_case_begin_4710366112:;
					{
						_24431_ok=_1b912748b_has_ret(_1b912748b_st.operator jule::Ref<_1b8cd2c4b_InfIter>()->_field_scope);
						if (_24431_ok) {
							_24431_ok = true;
							_24441_falled = false;
							_24455_breaked = false;
							return std::make_tuple(_24431_ok,_24441_falled,_24455_breaked);
						}
					}
					goto _match_end_4710364432;
					_case_end_4710366112:;
					if (!(_match_expr.type_is<jule::Ref<_1b8cd2c4b_RetSt>>())) { goto _case_end_4710366240; }
					_case_begin_4710366240:;
					{
						_24431_ok = true;
						_24441_falled = _24441_falled;
						_24455_breaked = _24455_breaked;
						return std::make_tuple(_24431_ok,_24441_falled,_24455_breaked);
					}
					goto _match_end_4710364432;
					_case_end_4710366240:;
					if (!(_match_expr.type_is<jule::Ref<_1b8cd2c4b_Scope>>())) { goto _case_end_4710366368; }
					_case_begin_4710366368:;
					{
						_24431_ok=_1b912748b_has_ret(_1b912748b_st.operator jule::Ref<_1b8cd2c4b_Scope>());
						if (_24431_ok) {
							_24431_ok = true;
							_24441_falled = false;
							_24455_breaked = false;
							return std::make_tuple(_24431_ok,_24441_falled,_24455_breaked);
						}
					}
					goto _match_end_4710364432;
					_case_end_4710366368:;
					if (!(_match_expr.type_is<jule::Ref<_1b9523799_Data>>())) { goto _case_end_4710366496; }
					_case_begin_4710366496:;
					{
						{
							auto _match_expr{ _1b912748b_st.operator jule::Ref<_1b9523799_Data>()->_field_model };
							if (!(_match_expr.type_is<jule::Ref<_1b8dbae99_BuiltinPanicCallExprModel>>())) { goto _case_end_4710385152; }
							_case_begin_4710385152:;
							{
								_24431_ok = true;
								_24441_falled = _24441_falled;
								_24455_breaked = _24455_breaked;
								return std::make_tuple(_24431_ok,_24441_falled,_24455_breaked);
							}
							goto _match_end_4710384512;
							_case_end_4710385152:;
							_match_end_4710384512:;
						}
					}
					goto _match_end_4710364432;
					_case_end_4710366496:;
					if (!(_match_expr.type_is<jule::Ref<_1b8cd2c4b_Recover>>())) { goto _case_end_4710366624; }
					_case_begin_4710366624:;
					{
						jule::Bool _28218_ok;
						jule::Bool _28222__falled;
						jule::Bool _28231__breaked;
						std::tie(_28218_ok,_28222__falled,_28231__breaked) = _1b912748b___has_ret(_1b912748b_st.operator jule::Ref<_1b8cd2c4b_Recover>()->_field_scope);
						if (_28218_ok) {
							_24431_ok = true;
							_24441_falled = _28222__falled;
							_24455_breaked = _28231__breaked;
							return std::make_tuple(_24431_ok,_24441_falled,_24455_breaked);
						}
					}
					goto _match_end_4710364432;
					_case_end_4710366624:;
					if (!(_match_expr.type_is<jule::Ref<_1b8cd2c4b_Conditional>>())) { goto _case_end_4710366752; }
					_case_begin_4710366752:;
					{
						std::tie(_24431_ok,_24455_breaked) = _1b912748b_conditional_has_ret(_1b912748b_st.operator jule::Ref<_1b8cd2c4b_Conditional>());
						if (_24431_ok) {
							_24431_ok = true;
							_24441_falled = false;
							_24455_breaked = false;
							return std::make_tuple(_24431_ok,_24441_falled,_24455_breaked);
						}
						if (_24455_breaked) {
							_24431_ok = false;
							_24441_falled = false;
							_24455_breaked = _24455_breaked;
							return std::make_tuple(_24431_ok,_24441_falled,_24455_breaked);
						}
					}
					goto _match_end_4710364432;
					_case_end_4710366752:;
					if (!(_match_expr.type_is<jule::Ref<_1b8cd2c4b_Match>>())) { goto _case_end_4710366880; }
					_case_begin_4710366880:;
					{
						_24431_ok=_1b912748b_match_has_ret(_1b912748b_st.operator jule::Ref<_1b8cd2c4b_Match>());
						if (_24431_ok) {
							_24431_ok = true;
							_24441_falled = false;
							_24455_breaked = false;
							return std::make_tuple(_24431_ok,_24441_falled,_24455_breaked);
						}
					}
					goto _match_end_4710364432;
					_case_end_4710366880:;
					_match_end_4710364432:;
				}
			}
			_iter_next_4710361616:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b912748b_st = *_range_begin; goto _iter_begin_4710361616; }
			_iter_end_4710361616:;
		}
	}
	_24431_ok = false;
	_24441_falled = _24441_falled;
	_24455_breaked = _24455_breaked;
	return std::make_tuple(_24431_ok,_24441_falled,_24455_breaked);
}



inline jule::Bool _1b912748b_has_ret(jule::Ref<_1b8cd2c4b_Scope> _30816_s) {
	jule::Bool _30910_ok;
	std::tie(_30910_ok,std::ignore,std::ignore) = _1b912748b___has_ret(_30816_s);
	return _30910_ok;
}



inline void _1b912748b_push_suggestion(_1d0557e9e_Log* _31331_log,jule::Str _31342_fmt,jule::Slice<jule::Any> _31355_args) {
	_31331_log->_field_suggestion=_1d0557e9e_logf(_31342_fmt,_31355_args);
}



inline jule::Slice<jule::Ref<_1b951b088_TypeKind>> _1b9176ba0_get_fn_result_types(jule::Ref<_1d21d97ee_FnIns>& _2529_f) {
	{
		if (!((_2529_f->_field_decl->_method_is_void() || (!(jule::real(_2529_f->_field_result)))))) { goto _case_end_4710410736; }
		_case_begin_4710410736:;
		{
			return nullptr;
		}
		goto _match_end_4710409168;
		_case_end_4710410736:;
		if (!(((!(jule::real(_2529_f->_field_result->_method_tup())))))) { goto _case_end_4710411760; }
		_case_begin_4710411760:;
		{
			return jule::Slice<jule::Ref<_1b951b088_TypeKind>>({_2529_f->_field_result});
		}
		goto _match_end_4710409168;
		_case_end_4710411760:;
		_case_begin_4710409280:;
		{
			return _2529_f->_field_result->_method_tup()->_field_types;
		}
		goto _match_end_4710409168;
		_case_end_4710409280:;
		_match_end_4710409168:;
	}
}



inline jule::Bool _1b9176ba0_trait_has_reference_receiver(jule::Ref<_1b8cd2894_Trait>& _3834_t) {
	{
		auto _range_expr = _3834_t->_field_methods;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d21d97ee_Fn> _1b9176ba0_f = *_range_begin;
			_iter_begin_4710414000:;
			{
				if (_1b9176ba0_f->_field_statically) {
					goto _iter_next_4710414000;
				}
				jule::Ref<_1d21d97ee_Param> _4513_p = _1b9176ba0_f->_field_params[0LL];
				if (_4513_p->_method_is_ref() && _4513_p->_method_is_self()) {
					return true;
				}
			}
			_iter_next_4710414000:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b9176ba0_f = *_range_begin; goto _iter_begin_4710414000; }
			_iter_end_4710414000:;
		}
	}
	return false;
}



inline jule::Bool _1b9176ba0_float_assignable(jule::Str _5321_kind,jule::Ref<_1b9523799_Data>& _5333_d) {
	jule::Str _549_value = _1d061d5e7_fmt_float(static_cast<jule::F64>(_5333_d->_field_constant->_method_as_f64()),'g',-1LL,64LL);
	return _1b9d698d6_check_bit_float(_549_value,static_cast<jule::Int>(_1b9d698d6_bitsize_of(_5321_kind)));
}



inline jule::Bool _1b9176ba0_sig_assignable(jule::Str _5819_kind,jule::Ref<_1b9523799_Data>& _5831_d) {
	jule::F64 _599_min = _1b9d841c5_min(_5819_kind);
	jule::F64 _609_max = _1b9d841c5_max(_5819_kind);
	{
		if (!((_5831_d->_field_constant->_method_is_f64()))) { goto _case_end_4710430096; }
		_case_begin_4710430096:;
		{
			jule::F64 _6413_x = static_cast<jule::F64>(_5831_d->_field_constant->_method_read_f64());
			jule::F64 _6514_i;
			jule::F64 _6517_frac;
			std::tie(_6514_i,_6517_frac) = _1d19edad6_modf(_6413_x);
			if (_6517_frac != 0LL) {
				return false;
			}
			return (_6514_i >= _599_min) && (_6514_i <= _609_max);
		}
		goto _match_end_4710429760;
		_case_end_4710430096:;
		if (!((_5831_d->_field_constant->_method_is_u64()))) { goto _case_end_4710430208; }
		_case_begin_4710430208:;
		{
			jule::F64 _7213_x = static_cast<jule::F64>(_5831_d->_field_constant->_method_read_u64());
			if (_7213_x <= _609_max) {
				return true;
			}
		}
		goto _match_end_4710429760;
		_case_end_4710430208:;
		if (!((_5831_d->_field_constant->_method_is_i64()))) { goto _case_end_4710430320; }
		_case_begin_4710430320:;
		{
			jule::F64 _7813_x = static_cast<jule::F64>(_5831_d->_field_constant->_method_read_i64());
			return (_599_min <= _7813_x) && (_7813_x <= _609_max);
		}
		goto _match_end_4710429760;
		_case_end_4710430320:;
		_match_end_4710429760:;
	}
	return false;
}



inline jule::Bool _1b9176ba0_unsig_assignable(jule::Str _8521_kind,jule::Ref<_1b9523799_Data>& _8533_d) {
	jule::F64 _869_max = _1b9d841c5_max(_8521_kind);
	{
		if (!((_8533_d->_field_constant->_method_is_f64()))) { goto _case_end_4710445376; }
		_case_begin_4710445376:;
		{
			jule::F64 _9013_x = _8533_d->_field_constant->_method_read_f64();
			if (_9013_x < 0LL) {
				return false;
			}
			jule::F64 _9514_i;
			jule::F64 _9517_frac;
			std::tie(_9514_i,_9517_frac) = _1d19edad6_modf(_9013_x);
			if (_9517_frac != 0LL) {
				return false;
			}
			return _9514_i <= _869_max;
		}
		goto _match_end_4710445120;
		_case_end_4710445376:;
		if (!((_8533_d->_field_constant->_method_is_u64()))) { goto _case_end_4710445488; }
		_case_begin_4710445488:;
		{
			jule::F64 _10213_x = static_cast<jule::F64>(_8533_d->_field_constant->_method_read_u64());
			if (_10213_x <= _869_max) {
				return true;
			}
		}
		goto _match_end_4710445120;
		_case_end_4710445488:;
		if (!((_8533_d->_field_constant->_method_is_i64()))) { goto _case_end_4710445600; }
		_case_begin_4710445600:;
		{
			jule::F64 _10813_x = static_cast<jule::F64>(_8533_d->_field_constant->_method_read_i64());
			return (0LL <= _10813_x) && (_10813_x <= _869_max);
		}
		goto _match_end_4710445120;
		_case_end_4710445600:;
		_match_end_4710445120:;
	}
	return false;
}



inline jule::Bool _1b9176ba0_int_assignable(jule::Str _11519_kind,jule::Ref<_1b9523799_Data>& _11531_d) {
	{
		if (!((_1b9e28c5e_is_sig_int(_11519_kind)))) { goto _case_end_4710460528; }
		_case_begin_4710460528:;
		{
			return _1b9176ba0_sig_assignable(_11519_kind,_11531_d);
		}
		goto _match_end_4710459472;
		_case_end_4710460528:;
		if (!((_1b9e28c5e_is_unsig_int(_11519_kind)))) { goto _case_end_4710460640; }
		_case_begin_4710460640:;
		{
			return _1b9176ba0_unsig_assignable(_11519_kind,_11531_d);
		}
		goto _match_end_4710459472;
		_case_end_4710460640:;
		_case_begin_4710459648:;
		{
			return false;
		}
		goto _match_end_4710459472;
		_case_end_4710459648:;
		_match_end_4710459472:;
	}
}



inline jule::Any _1b9523799_find_builtins_import(jule::Str _4625_ident,jule::Ref<_1b8e0c01d_ImportInfo> _4637_imp) {
	return _1b9c0b525_find_package_builtin_def(_4637_imp->_field_link_path,_4625_ident);
}



inline jule::Any _1b9523799_find_builtins_sema(jule::Str _5023_ident,jule::Ref<_1b912748b_Sema> _5039_s) {
	{
		auto _range_expr = _5039_s->_field_file->_field_imports;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b8e0c01d_ImportInfo> _1b9523799_imp = *_range_begin;
			_iter_begin_4710467328:;
			{
				if (_1b9523799_imp->_field_import_all || _1b9523799_imp->_method_exist_ident(_5023_ident)) {
					jule::Any _5321_def = _1b9523799_find_builtins_import(_5023_ident,_1b9523799_imp);
					if (_5321_def != nullptr) {
						return _5321_def;
					}
				}
			}
			_iter_next_4710467328:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b9523799_imp = *_range_begin; goto _iter_begin_4710467328; }
			_iter_end_4710467328:;
		}
	}
	return jule::Any(nullptr);
}



inline jule::Bool _1b9523799_is_ok_for_shifting(jule::Ref<_1b9523799_Data> _6227_d) {
	jule::Ref<_1b951b088_Prim> _639_prim = _6227_d->_field_kind->_method_prim();
	if ((!(jule::real(_639_prim))) || (!(_1b9e28c5e_is_int(_639_prim->_method_to_str())))) {
		return false;
	}
	if ((!(_6227_d->_method_is_const()))) {
		return true;
	}
	{
		if (!((_6227_d->_field_constant->_method_is_i64()))) { goto _case_end_4710479200; }
		_case_begin_4710479200:;
		{
			return _6227_d->_field_constant->_method_read_i64() >= 0LL;
		}
		goto _match_end_4710478976;
		_case_end_4710479200:;
		if (!((_6227_d->_field_constant->_method_is_u64()))) { goto _case_end_4710479312; }
		_case_begin_4710479312:;
		{
			return true;
		}
		goto _match_end_4710478976;
		_case_end_4710479312:;
		_case_begin_4710478064:;
		{
			return false;
		}
		goto _match_end_4710478976;
		_case_end_4710478064:;
		_match_end_4710478976:;
	}
}



inline jule::Bool _1b9523799_is_instanced_struct(jule::Ref<_1d21c0b59_StructIns> _7924_s) {
	return _7924_s->_field_decl->_field_generics.len() == _7924_s->_field_generics.len();
}



inline void _1b9523799_normalize_bitsize(jule::Ref<_1b9523799_Data> _8326_d) {
	if ((!(_8326_d->_method_is_const()))) {
		return;
	}
	jule::Str _8813_kind = jule::Str("", 0);
	{
		if (!((_8326_d->_field_constant->_method_is_i64()))) { goto _case_end_4710488640; }
		_case_begin_4710488640:;
		{
			jule::I64 _9113_x = _8326_d->_field_constant->_method_read_i64();
			_8813_kind=_1b9d698d6_int_from_bits(static_cast<jule::U64>(_1b9d698d6_bitsize_of_int(_9113_x)));
		}
		goto _match_end_4710487344;
		_case_end_4710488640:;
		if (!((_8326_d->_field_constant->_method_is_u64()))) { goto _case_end_4710488752; }
		_case_begin_4710488752:;
		{
			jule::U64 _9513_x = _8326_d->_field_constant->_method_read_u64();
			_8813_kind=_1b9d698d6_uint_from_bits(static_cast<jule::U64>(_1b9d698d6_bitsize_of_uint(_9513_x)));
		}
		goto _match_end_4710487344;
		_case_end_4710488752:;
		_case_begin_4710487600:;
		{
			return;
		}
		goto _match_end_4710487344;
		_case_end_4710487600:;
		_match_end_4710487344:;
	}
	if (jule::real(_8326_d->_field_kind->_method_enm())) {
		return;
	}
	_8326_d->_field_kind->_field_kind=_1b951b088_build_prim_type(_8813_kind);
}



inline void _1b9523799_normalize_type(jule::Ref<_1b9523799_Data> _11023_d) {
	{
		if (!((_1b9176ba0_int_assignable(jule::Str("int", 3),_11023_d)))) { goto _case_end_4710498752; }
		_case_begin_4710498752:;
		{
			_11023_d->_field_kind->_field_kind=_1b951b088_build_prim_type(jule::Str("int", 3));
			_11023_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_11023_d->_field_constant->_method_as_f64()));
		}
		goto _match_end_4710498512;
		_case_end_4710498752:;
		if (!((_1b9176ba0_int_assignable(jule::Str("uint", 4),_11023_d)))) { goto _case_end_4710498880; }
		_case_begin_4710498880:;
		{
			_11023_d->_field_kind->_field_kind=_1b951b088_build_prim_type(jule::Str("uint", 4));
			_11023_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_11023_d->_field_constant->_method_as_f64()));
		}
		goto _match_end_4710498512;
		_case_end_4710498880:;
		_match_end_4710498512:;
	}
}



inline void _1b9523799_apply_cast_kind_model(jule::Ref<_1b9523799_Data> _12230_d) {
	_12230_d->_field_model=jule::Any(jule::new_struct<_1b8dbae99_CastingExprModel>(new( std::nothrow ) _1b8dbae99_CastingExprModel(_12230_d->_field_model,_12230_d->_field_cast_kind,_12230_d->_field_kind)));
}



inline void _1b9523799_apply_cast_kind(jule::Ref<_1b9523799_Data> _13024_d) {
	if ((!(jule::real(_13024_d->_field_cast_kind)))) {
		return;
	}
	_1b9523799_apply_cast_kind_model(_13024_d);
	_13024_d->_field_kind=_13024_d->_field_cast_kind;
	jule::drop(_13024_d->_field_cast_kind);
}



inline jule::Ref<_1b9523799_Data> _1b9523799_build_void_data(void) {
	return jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_1b951b088_build_prim_type(jule::Str("void", 4)))),jule::Ref<_1b951b088_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),false,jule::Ref<_1b9d678e5_Const>()));
}



inline jule::Str _1b9523799_kind_by_bitsize(jule::Any _15120_expr) {
	{
		auto _match_expr{ _15120_expr };
		if (!(_match_expr.type_is<jule::F64>())) { goto _case_end_4710516896; }
		_case_begin_4710516896:;
		{
			jule::F64 _15413_x = _15120_expr.operator jule::F64();
			return _1b9d698d6_float_from_bits(static_cast<jule::U64>(_1b9d698d6_bitsize_of_float(_15413_x)));
		}
		goto _match_end_4710512848;
		_case_end_4710516896:;
		if (!(_match_expr.type_is<jule::I64>())) { goto _case_end_4710517008; }
		_case_begin_4710517008:;
		{
			jule::I64 _15813_x = _15120_expr.operator jule::I64();
			return _1b9d698d6_int_from_bits(static_cast<jule::U64>(_1b9d698d6_bitsize_of_int(_15813_x)));
		}
		goto _match_end_4710512848;
		_case_end_4710517008:;
		if (!(_match_expr.type_is<jule::U64>())) { goto _case_end_4710517120; }
		_case_begin_4710517120:;
		{
			jule::U64 _16213_x = _15120_expr.operator jule::U64();
			return _1b9d698d6_uint_from_bits(static_cast<jule::U64>(_1b9d698d6_bitsize_of_uint(_16213_x)));
		}
		goto _match_end_4710512848;
		_case_end_4710517120:;
		_case_begin_4710514336:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4710512848;
		_case_end_4710514336:;
		_match_end_4710512848:;
	}
}



inline jule::Str _1b9523799_check_data_for_integer_indexing(jule::Ref<_1b9523799_Data> _17040_d) {
	jule::Str _17052_err_fmt = jule::Str("", 0);
	if ((!(jule::real(_17040_d)))) {
		_17052_err_fmt = jule::Str("", 0);
		return _17052_err_fmt;
	}
	jule::Ref<_1b951b088_TypeKind> _17513_kind = _17040_d->_field_kind;
	if (jule::real(_17513_kind->_method_ref())) {
		_17513_kind=_17513_kind->_method_ref()->_field_elem;
	}
	{
		if (!(((!(jule::real(_17513_kind->_method_prim())))))) { goto _case_end_4710533408; }
		_case_begin_4710533408:;
		{
			_17052_err_fmt = jule::Str("invalid expression", 18);
			return _17052_err_fmt;
		}
		goto _match_end_4710528080;
		_case_end_4710533408:;
		if (!(((!(_1b9e28c5e_is_int(_17513_kind->_method_prim()->_method_to_str())))))) { goto _case_end_4710533520; }
		_case_begin_4710533520:;
		{
			_17052_err_fmt = jule::Str("invalid expression", 18);
			return _17052_err_fmt;
		}
		goto _match_end_4710528080;
		_case_end_4710533520:;
		if (!((_17040_d->_method_is_const()))) { goto _case_end_4710531152; }
		_case_begin_4710531152:;
		{
			if (_17040_d->_field_constant->_method_as_f64() < 0LL) {
				_17052_err_fmt = jule::Str("overflow the limit of data-type", 31);
				return _17052_err_fmt;
			}
		}
		goto _match_end_4710528080;
		_case_end_4710531152:;
		_case_begin_4710528176:;
		{
			_17040_d->_field_cast_kind=jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_1b951b088_build_prim_type(jule::Str("int", 3))));
			_1b9523799_apply_cast_kind(_17040_d);
		}
		goto _match_end_4710528080;
		_case_end_4710528176:;
		_match_end_4710528080:;
	}
	_17052_err_fmt = jule::Str("", 0);
	return _17052_err_fmt;
}



inline jule::Bool _1b951b088_can_get_ptr(jule::Ref<_1b9523799_Data>& _55921_d) {
	if ((!(_55921_d->_field_lvalue)) || _55921_d->_method_is_const()) {
		return false;
	}
	{
		if (!((jule::real(_55921_d->_field_kind->_method_fnc()) || jule::real(_55921_d->_field_kind->_method_enm())))) { goto _case_end_4710541104; }
		_case_begin_4710541104:;
		{
			return false;
		}
		goto _match_end_4710540032;
		_case_end_4710541104:;
		_case_begin_4710540128:;
		{
			return true;
		}
		goto _match_end_4710540032;
		_case_end_4710540128:;
		_match_end_4710540032:;
	}
}



inline jule::Bool _1b951b088_is_valid_for_ref_type(jule::Ref<_1b951b088_TypeKind>& _57431_t) {
	jule::Ref<_1d21c0b59_StructIns> _57513_s = _57431_t->_method_strct();
	if ((jule::real(_57513_s) && jule::real(_57513_s->_field_decl)) && _57513_s->_field_decl->_field_cpp_linked) {
		return false;
	}
	return (!(((jule::real(_57431_t->_method_enm()) || jule::real(_57431_t->_method_ptr())) || jule::real(_57431_t->_method_ref())) || jule::real(_57431_t->_method_arr())));
}



inline jule::Bool _1b951b088_is_valid_for_ref(jule::Ref<_1b951b088_TypeKind>& _58326_t) {
	return (!(jule::real(_58326_t->_method_fnc())));
}



inline jule::Str _1b951b088_build_link_path_by_tokens(jule::Slice<_1d1da4277_Token>& _58731_tokens) {
	jule::Str _58813_s = _58731_tokens[0LL]._field_kind;
	{
		auto _range_expr = _58731_tokens.slice(1LL);
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			_1d1da4277_Token _1b951b088_token = *_range_begin;
			_iter_begin_4710556592:;
			{
				_58813_s+=jule::Str("::", 2);
				_58813_s+=_1b951b088_token._field_kind;
			}
			_iter_next_4710556592:;
			++_range_begin;
			if (_range_begin != _range_end) { _1b951b088_token = *_range_begin; goto _iter_begin_4710556592; }
			_iter_end_4710556592:;
		}
	}
	return _58813_s;
}



inline jule::Ref<_1b951b088_Prim> _1b951b088_build_prim_type(jule::Str _59620_kind) {
	return jule::new_struct<_1b951b088_Prim>(new( std::nothrow ) _1b951b088_Prim(_59620_kind));
}



inline jule::Ref<_1d21c0b59_Struct> _1b951b088_get_struct_from_kind(jule::Ref<_1b951b088_TypeKind> _60229_k) {
	{
		if (!(((!(jule::real(_60229_k)))))) { goto _case_end_4710563168; }
		_case_begin_4710563168:;
		{
			return jule::new_ref<_1d21c0b59_Struct>();
		}
		goto _match_end_4710560544;
		_case_end_4710563168:;
		if (!((jule::real(_60229_k->_method_strct())))) { goto _case_end_4710562176; }
		_case_begin_4710562176:;
		{
			return _60229_k->_method_strct()->_field_decl;
		}
		goto _match_end_4710560544;
		_case_end_4710562176:;
		if (!((jule::real(_60229_k->_method_ref())))) { goto _case_end_4710562384; }
		_case_begin_4710562384:;
		{
			return _1b951b088_get_struct_from_kind(_60229_k->_method_ref()->_field_elem);
		}
		goto _match_end_4710560544;
		_case_end_4710562384:;
		if (!((jule::real(_60229_k->_method_slc())))) { goto _case_end_4710562832; }
		_case_begin_4710562832:;
		{
			return _1b951b088_get_struct_from_kind(_60229_k->_method_slc()->_field_elem);
		}
		goto _match_end_4710560544;
		_case_end_4710562832:;
		if (!((jule::real(_60229_k->_method_arr())))) { goto _case_end_4710562944; }
		_case_begin_4710562944:;
		{
			return _1b951b088_get_struct_from_kind(_60229_k->_method_arr()->_field_elem);
		}
		goto _match_end_4710560544;
		_case_end_4710562944:;
		if (!((jule::real(_60229_k->_method_ptr())))) { goto _case_end_4710561776; }
		_case_begin_4710561776:;
		{
			return jule::new_ref<_1d21c0b59_Struct>();
		}
		goto _match_end_4710560544;
		_case_end_4710561776:;
		_case_begin_4710560816:;
		{
			return jule::new_ref<_1d21c0b59_Struct>();
		}
		goto _match_end_4710560544;
		_case_end_4710560816:;
		_match_end_4710560544:;
	}
}



inline jule::Bool _1b951b088_is_prim(jule::Str _63112_kind) {
	return (((((((((((((((_63112_kind == jule::Str("i8", 2)) || (_63112_kind == jule::Str("i16", 3))) || (_63112_kind == jule::Str("i32", 3))) || (_63112_kind == jule::Str("i64", 3))) || (_63112_kind == jule::Str("u8", 2))) || (_63112_kind == jule::Str("u16", 3))) || (_63112_kind == jule::Str("u32", 3))) || (_63112_kind == jule::Str("u64", 3))) || (_63112_kind == jule::Str("f32", 3))) || (_63112_kind == jule::Str("f64", 3))) || (_63112_kind == jule::Str("int", 3))) || (_63112_kind == jule::Str("uint", 4))) || (_63112_kind == jule::Str("uintptr", 7))) || (_63112_kind == jule::Str("bool", 4))) || (_63112_kind == jule::Str("str", 3))) || (_63112_kind == jule::Str("any", 3));
}



inline std::tuple<jule::Ref<_1b9390d86_SymbolTable>,jule::Slice<_1d0557e9e_Log>> _1b9960323_build_symbols(jule::Ref<_1d21640e7_Ast>& _1523_ast,jule::Trait<_1b8e0c01d_Importer>& _1539_importer,jule::Ref<_1b8b10cbb_SymbolBuilder> _1563_owner) {
	jule::Ref<_1b8b10cbb_SymbolBuilder> _1613_sb = jule::new_struct<_1b8b10cbb_SymbolBuilder>(new( std::nothrow ) _1b8b10cbb_SymbolBuilder(_1563_owner,_1539_importer,jule::Slice<_1d0557e9e_Log>(),_1523_ast,jule::Ref<_1b9390d86_SymbolTable>()));
	_1613_sb->_method_build();
	if (_1613_sb->_field_errors.len() == 0LL) {
		return std::make_tuple(_1613_sb->_field_table,nullptr);
	}
	return std::make_tuple(jule::new_ref<_1b9390d86_SymbolTable>(),_1613_sb->_field_errors);
}



inline std::tuple<jule::Ref<_1b8e0c01d_Package>,jule::Slice<_1d0557e9e_Log>> _1b9960323___analyze_package(jule::Slice<jule::Ref<_1d21640e7_Ast>>& _2927_files,jule::Trait<_1b8e0c01d_Importer>& _2947_importer,jule::Int& _2968_flags) {
	jule::Slice<jule::Ref<_1b9390d86_SymbolTable>> _3113_tables = jule::Slice<jule::Ref<_1b9390d86_SymbolTable>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_2927_files.len())));
	{
		auto _range_expr = _2927_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1b9960323_i = 0;
			jule::Ref<_1d21640e7_Ast> _1b9960323_f = *_range_begin;
			_iter_begin_4710590144:;
			{
				jule::Ref<_1b9390d86_SymbolTable> _3318_table;
				jule::Slice<_1d0557e9e_Log> _3329_errors;
				std::tie(_3318_table,_3329_errors) = _1b9960323_build_symbols(_1b9960323_f,_2947_importer,jule::new_ref<_1b8b10cbb_SymbolBuilder>());
				if (_3329_errors.len() > 0LL) {
					return std::make_tuple(jule::new_ref<_1b8e0c01d_Package>(),_3329_errors);
				}
				_3113_tables[static_cast<jule::Int>(_1b9960323_i)]=_3318_table;
			}
			_iter_next_4710590144:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1b9960323_i; _1b9960323_f = *_range_begin; goto _iter_begin_4710590144; }
			_iter_end_4710590144:;
		}
	}
	jule::Ref<_1b912748b_Sema> _4013_sema = jule::new_struct<_1b912748b_Sema>(new( std::nothrow ) _1b912748b_Sema(jule::Slice<_1d0557e9e_Log>(),jule::Slice<jule::Ref<_1b9390d86_SymbolTable>>(),jule::Ref<_1b9390d86_SymbolTable>(),_2968_flags));
	_4013_sema->_method_check(_3113_tables);
	if (_4013_sema->_field_errors.len() > 0LL) {
		return std::make_tuple(jule::new_ref<_1b8e0c01d_Package>(),_4013_sema->_field_errors);
	}
	jule::Ref<_1b8e0c01d_Package> _4813_pkg = jule::new_struct<_1b8e0c01d_Package>(new( std::nothrow ) _1b8e0c01d_Package(_4013_sema->_field_files));
	return std::make_tuple(_4813_pkg,nullptr);
}



inline std::tuple<jule::Ref<_1b8e0c01d_Package>,jule::Slice<_1d0557e9e_Log>> _1b9960323_analyze_package(jule::Slice<jule::Ref<_1d21640e7_Ast>> _7228_files,jule::Trait<_1b8e0c01d_Importer> _7247_importer,jule::Int _7267_flags) {
	if (_7228_files.len() == 0LL) {
		return std::make_tuple(jule::new_ref<_1b8e0c01d_Package>(),nullptr);
	}
	jule::Ref<_1b8e0c01d_Package> _7714_package;
	jule::Slice<_1d0557e9e_Log> _7727_logs;
	std::tie(_7714_package,_7727_logs) = _1b9960323___analyze_package(_7228_files,_7247_importer,_7267_flags);
	return std::make_tuple(_7714_package,_7727_logs);
}



inline std::tuple<jule::Ref<_1b9390d86_SymbolTable>,jule::Slice<_1d0557e9e_Log>> _1b9960323_analyze_file(jule::Ref<_1d21640e7_Ast> _9825_f,jule::Trait<_1b8e0c01d_Importer> _9838_importer,jule::Int _9858_flags) {
	jule::Slice<jule::Ref<_1d21640e7_Ast>> _9913_files = jule::Slice<jule::Ref<_1d21640e7_Ast>>({_9825_f});
	jule::Ref<_1b8e0c01d_Package> _10014_pkg;
	jule::Slice<_1d0557e9e_Log> _10023_errors;
	std::tie(_10014_pkg,_10023_errors) = _1b9960323_analyze_package(_9913_files,_9838_importer,_9858_flags);
	if (_10023_errors.len() > 0LL) {
		return std::make_tuple(jule::new_ref<_1b9390d86_SymbolTable>(),_10023_errors);
	}
	jule::Ref<_1b9390d86_SymbolTable> _10713_table = _10014_pkg->_field_files[0LL];
	return std::make_tuple(_10713_table,nullptr);
}



inline void _1b9c0b525_init(void) {
	_1b9c0b525_BUILTIN_FN_OUT->_field_caller=jule::Fn<jule::Ref<_1b9523799_Data>(jule::Ref<_1b9523799_Eval>&,jule::Ref<_1d1e5192e_FnCallExpr>&,jule::Ref<_1b9523799_Data>&)>(_1b9c0b525_builtin_caller_out);
	_1b9c0b525_BUILTIN_FN_OUTLN->_field_caller=jule::Fn<jule::Ref<_1b9523799_Data>(jule::Ref<_1b9523799_Eval>&,jule::Ref<_1d1e5192e_FnCallExpr>&,jule::Ref<_1b9523799_Data>&)>(_1b9c0b525_builtin_caller_outln);
	_1b9c0b525_BUILTIN_FN_NEW->_field_caller=jule::Fn<jule::Ref<_1b9523799_Data>(jule::Ref<_1b9523799_Eval>&,jule::Ref<_1d1e5192e_FnCallExpr>&,jule::Ref<_1b9523799_Data>&)>(_1b9c0b525_builtin_caller_new);
	_1b9c0b525_BUILTIN_FN_REAL->_field_caller=jule::Fn<jule::Ref<_1b9523799_Data>(jule::Ref<_1b9523799_Eval>&,jule::Ref<_1d1e5192e_FnCallExpr>&,jule::Ref<_1b9523799_Data>&)>(_1b9c0b525_builtin_caller_real);
	_1b9c0b525_BUILTIN_FN_DROP->_field_caller=jule::Fn<jule::Ref<_1b9523799_Data>(jule::Ref<_1b9523799_Eval>&,jule::Ref<_1d1e5192e_FnCallExpr>&,jule::Ref<_1b9523799_Data>&)>(_1b9c0b525_builtin_caller_drop);
	_1b9c0b525_BUILTIN_FN_PANIC->_field_caller=jule::Fn<jule::Ref<_1b9523799_Data>(jule::Ref<_1b9523799_Eval>&,jule::Ref<_1d1e5192e_FnCallExpr>&,jule::Ref<_1b9523799_Data>&)>(_1b9c0b525_builtin_caller_panic);
	_1b9c0b525_BUILTIN_FN_MAKE->_field_caller=jule::Fn<jule::Ref<_1b9523799_Data>(jule::Ref<_1b9523799_Eval>&,jule::Ref<_1d1e5192e_FnCallExpr>&,jule::Ref<_1b9523799_Data>&)>(_1b9c0b525_builtin_caller_make);
	_1b9c0b525_BUILTIN_FN_APPEND->_field_caller=jule::Fn<jule::Ref<_1b9523799_Data>(jule::Ref<_1b9523799_Eval>&,jule::Ref<_1d1e5192e_FnCallExpr>&,jule::Ref<_1b9523799_Data>&)>(_1b9c0b525_builtin_caller_append);
	_1b9c0b525_BUILTIN_FN_COPY->_field_caller=jule::Fn<jule::Ref<_1b9523799_Data>(jule::Ref<_1b9523799_Eval>&,jule::Ref<_1d1e5192e_FnCallExpr>&,jule::Ref<_1b9523799_Data>&)>(_1b9c0b525_builtin_caller_copy);
	_1b9c0b525_BUILTIN_FN_RECOVER->_field_caller=jule::Fn<jule::Ref<_1b9523799_Data>(jule::Ref<_1b9523799_Eval>&,jule::Ref<_1d1e5192e_FnCallExpr>&,jule::Ref<_1b9523799_Data>&)>(_1b9c0b525_builtin_caller_recover);
	_1b9c0b525_BUILTIN_FN_CLONE->_field_caller=jule::Fn<jule::Ref<_1b9523799_Data>(jule::Ref<_1b9523799_Eval>&,jule::Ref<_1d1e5192e_FnCallExpr>&,jule::Ref<_1b9523799_Data>&)>(_1b9c0b525_builtin_caller_clone);
	_1b9c0b525_BUILTIN_FN_STD_MEM_SIZE_OF->_field_caller=jule::Fn<jule::Ref<_1b9523799_Data>(jule::Ref<_1b9523799_Eval>&,jule::Ref<_1d1e5192e_FnCallExpr>&,jule::Ref<_1b9523799_Data>&)>(_1b9c0b525_builtin_caller_std_mem_size_of);
	_1b9c0b525_BUILTIN_FN_STD_MEM_ALIGN_OF->_field_caller=jule::Fn<jule::Ref<_1b9523799_Data>(jule::Ref<_1b9523799_Eval>&,jule::Ref<_1d1e5192e_FnCallExpr>&,jule::Ref<_1b9523799_Data>&)>(_1b9c0b525_builtin_caller_std_mem_align_of);
	_1b9c0b525_BUILTIN_FN_STD_JULE_INTEGRATED_TO_STR->_field_caller=jule::Fn<jule::Ref<_1b9523799_Data>(jule::Ref<_1b9523799_Eval>&,jule::Ref<_1d1e5192e_FnCallExpr>&,jule::Ref<_1b9523799_Data>&)>(_1b9c0b525_builtin_caller_std_jule_integrated_to_str);
	jule::Ref<_1d21d97ee_Fn> _11213_error_method = _1b9c0b525_BUILTIN_TRAIT_ERROR->_method_find_method(jule::Str("error", 5));
	jule::Ref<_1d21d97ee_FnIns> _11313_error_method_ins = _11213_error_method->_method_instance();
	_11313_error_method_ins->_field_result=jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_1b951b088_build_prim_type(jule::Str("str", 3))));
	_11313_error_method_ins->_field_caller=jule::Fn<jule::Ref<_1b9523799_Data>(jule::Ref<_1b9523799_Eval>&,jule::Ref<_1d1e5192e_FnCallExpr>&,jule::Ref<_1b9523799_Data>&)>(_1b9c0b525_builtin_caller_common);
	_11213_error_method->_method_append_instance(_11313_error_method_ins);
	jule::Ref<_1d21d97ee_Fn> _11813_dispose_method = _1b9c0b525_BUILTIN_TRAIT_DISPOSE->_method_find_method(jule::Str("dispose", 7));
	jule::Ref<_1d21d97ee_FnIns> _11913_dispose_method_ins = _11813_dispose_method->_method_instance();
	_11913_dispose_method_ins->_field_caller=jule::Fn<jule::Ref<_1b9523799_Data>(jule::Ref<_1b9523799_Eval>&,jule::Ref<_1d1e5192e_FnCallExpr>&,jule::Ref<_1b9523799_Data>&)>(_1b9c0b525_builtin_caller_common);
	_11813_dispose_method->_method_append_instance(_11913_dispose_method_ins);
}



inline jule::Ref<_1d21d97ee_FnIns> _1b9c0b525_find_builtin_fn(jule::Str _12420_ident) {
	{
		auto _match_expr{ _12420_ident };
		if (!((jule::Str("out", 3)) == _match_expr)) { goto _case_end_4710646832; }
		_case_begin_4710646832:;
		{
			return _1b9c0b525_BUILTIN_FN_OUT;
		}
		goto _match_end_4710644256;
		_case_end_4710646832:;
		if (!((jule::Str("outln", 5)) == _match_expr)) { goto _case_end_4710647408; }
		_case_begin_4710647408:;
		{
			return _1b9c0b525_BUILTIN_FN_OUTLN;
		}
		goto _match_end_4710644256;
		_case_end_4710647408:;
		if (!((jule::Str("new", 3)) == _match_expr)) { goto _case_end_4710646416; }
		_case_begin_4710646416:;
		{
			return _1b9c0b525_BUILTIN_FN_NEW;
		}
		goto _match_end_4710644256;
		_case_end_4710646416:;
		if (!((jule::Str("real", 4)) == _match_expr)) { goto _case_end_4710646624; }
		_case_begin_4710646624:;
		{
			return _1b9c0b525_BUILTIN_FN_REAL;
		}
		goto _match_end_4710644256;
		_case_end_4710646624:;
		if (!((jule::Str("drop", 4)) == _match_expr)) { goto _case_end_4710647072; }
		_case_begin_4710647072:;
		{
			return _1b9c0b525_BUILTIN_FN_DROP;
		}
		goto _match_end_4710644256;
		_case_end_4710647072:;
		if (!((jule::Str("panic", 5)) == _match_expr)) { goto _case_end_4710647184; }
		_case_begin_4710647184:;
		{
			return _1b9c0b525_BUILTIN_FN_PANIC;
		}
		goto _match_end_4710644256;
		_case_end_4710647184:;
		if (!((jule::Str("make", 4)) == _match_expr)) { goto _case_end_4710646016; }
		_case_begin_4710646016:;
		{
			return _1b9c0b525_BUILTIN_FN_MAKE;
		}
		goto _match_end_4710644256;
		_case_end_4710646016:;
		if (!((jule::Str("append", 6)) == _match_expr)) { goto _case_end_4710646128; }
		_case_begin_4710646128:;
		{
			return _1b9c0b525_BUILTIN_FN_APPEND;
		}
		goto _match_end_4710644256;
		_case_end_4710646128:;
		if (!((jule::Str("copy", 4)) == _match_expr)) { goto _case_end_4710646240; }
		_case_begin_4710646240:;
		{
			return _1b9c0b525_BUILTIN_FN_COPY;
		}
		goto _match_end_4710644256;
		_case_end_4710646240:;
		if (!((jule::Str("recover", 7)) == _match_expr)) { goto _case_end_4710645408; }
		_case_begin_4710645408:;
		{
			return _1b9c0b525_BUILTIN_FN_RECOVER;
		}
		goto _match_end_4710644256;
		_case_end_4710645408:;
		if (!((jule::Str("clone", 5)) == _match_expr)) { goto _case_end_4710645520; }
		_case_begin_4710645520:;
		{
			return _1b9c0b525_BUILTIN_FN_CLONE;
		}
		goto _match_end_4710644256;
		_case_end_4710645520:;
		_case_begin_4710645024:;
		{
			return jule::new_ref<_1d21d97ee_FnIns>();
		}
		goto _match_end_4710644256;
		_case_end_4710645024:;
		_match_end_4710644256:;
	}
}



inline jule::Ref<_1b951b088_TypeAlias> _1b9c0b525_find_builtin_type_alias(jule::Str _14128_ident) {
	{
		auto _match_expr{ _14128_ident };
		if (!((jule::Str("byte", 4)) == _match_expr)) { goto _case_end_4710655664; }
		_case_begin_4710655664:;
		{
			return _1b9c0b525_BUILTIN_TYPE_ALIAS_BYTE;
		}
		goto _match_end_4710652096;
		_case_end_4710655664:;
		if (!((jule::Str("rune", 4)) == _match_expr)) { goto _case_end_4710654672; }
		_case_begin_4710654672:;
		{
			return _1b9c0b525_BUILTIN_TYPE_ALIAS_RUNE;
		}
		goto _match_end_4710652096;
		_case_end_4710654672:;
		_case_begin_4710652944:;
		{
			return jule::new_ref<_1b951b088_TypeAlias>();
		}
		goto _match_end_4710652096;
		_case_end_4710652944:;
		_match_end_4710652096:;
	}
}



inline jule::Ref<_1b8cd2894_Trait> _1b9c0b525_find_builtin_trait(jule::Str _14923_ident) {
	{
		auto _match_expr{ _14923_ident };
		if (!((jule::Str("Error", 5)) == _match_expr)) { goto _case_end_4710658720; }
		_case_begin_4710658720:;
		{
			return _1b9c0b525_BUILTIN_TRAIT_ERROR;
		}
		goto _match_end_4710655328;
		_case_end_4710658720:;
		if (!((jule::Str("Dispose", 7)) == _match_expr)) { goto _case_end_4710657728; }
		_case_begin_4710657728:;
		{
			return _1b9c0b525_BUILTIN_TRAIT_DISPOSE;
		}
		goto _match_end_4710655328;
		_case_end_4710657728:;
		_case_begin_4710654080:;
		{
			return jule::new_ref<_1b8cd2894_Trait>();
		}
		goto _match_end_4710655328;
		_case_end_4710654080:;
		_match_end_4710655328:;
	}
}



inline jule::Any _1b9c0b525_find_builtin_def(jule::Str _15721_ident) {
	jule::Ref<_1d21d97ee_FnIns> _15813_f = _1b9c0b525_find_builtin_fn(_15721_ident);
	if (jule::real(_15813_f)) {
		return jule::Any(_15813_f);
	}
	jule::Ref<_1b951b088_TypeAlias> _16313_ta = _1b9c0b525_find_builtin_type_alias(_15721_ident);
	if (jule::real(_16313_ta)) {
		return jule::Any(_16313_ta);
	}
	jule::Ref<_1b8cd2894_Trait> _16813_t = _1b9c0b525_find_builtin_trait(_15721_ident);
	if (jule::real(_16813_t)) {
		return jule::Any(_16813_t);
	}
	return jule::Any(nullptr);
}



inline jule::Any _1b9c0b525_find_builtin_def_std_mem(jule::Str _17629_ident) {
	{
		auto _match_expr{ _17629_ident };
		if (!((jule::Str("size_of", 7)) == _match_expr)) { goto _case_end_4710667648; }
		_case_begin_4710667648:;
		{
			return jule::Any(_1b9c0b525_BUILTIN_FN_STD_MEM_SIZE_OF);
		}
		goto _match_end_4710665136;
		_case_end_4710667648:;
		if (!((jule::Str("align_of", 8)) == _match_expr)) { goto _case_end_4710668208; }
		_case_begin_4710668208:;
		{
			return jule::Any(_1b9c0b525_BUILTIN_FN_STD_MEM_ALIGN_OF);
		}
		goto _match_end_4710665136;
		_case_end_4710668208:;
		_case_begin_4710666320:;
		{
			return jule::Any(nullptr);
		}
		goto _match_end_4710665136;
		_case_end_4710666320:;
		_match_end_4710665136:;
	}
}



inline jule::Any _1b9c0b525_find_builtin_def_std_jule_integrated(jule::Str _18441_ident) {
	{
		auto _match_expr{ _18441_ident };
		if (!((jule::Str("to_str", 6)) == _match_expr)) { goto _case_end_4710671072; }
		_case_begin_4710671072:;
		{
			return jule::Any(_1b9c0b525_BUILTIN_FN_STD_JULE_INTEGRATED_TO_STR);
		}
		goto _match_end_4710670032;
		_case_end_4710671072:;
		_case_begin_4710669184:;
		{
			return jule::Any(nullptr);
		}
		goto _match_end_4710670032;
		_case_end_4710669184:;
		_match_end_4710670032:;
	}
}



inline jule::Any _1b9c0b525_find_package_builtin_def(jule::Str _19129_link_path,jule::Str _19145_ident) {
	{
		auto _match_expr{ _19129_link_path };
		if (!((jule::Str("std::mem", 8)) == _match_expr)) { goto _case_end_4710674416; }
		_case_begin_4710674416:;
		{
			return _1b9c0b525_find_builtin_def_std_mem(_19145_ident);
		}
		goto _match_end_4710671888;
		_case_end_4710674416:;
		if (!((jule::Str("std::jule::integrated", 21)) == _match_expr)) { goto _case_end_4710674976; }
		_case_begin_4710674976:;
		{
			return _1b9c0b525_find_builtin_def_std_jule_integrated(_19145_ident);
		}
		goto _match_end_4710671888;
		_case_end_4710674976:;
		_case_begin_4710672992:;
		{
			return jule::Any(nullptr);
		}
		goto _match_end_4710671888;
		_case_end_4710672992:;
		_match_end_4710671888:;
	}
}



inline jule::Ref<_1b9523799_Data> _1b9c0b525_builtin_caller_common_plain(jule::Ref<_1b9523799_Eval>& _19937_e,jule::Ref<_1d1e5192e_FnCallExpr>& _19952_fc,jule::Ref<_1b9523799_Data>& _19974_d) {
	jule::Ref<_1d21d97ee_FnIns> _20013_f = _19974_d->_field_kind->_method_fnc();
	_1b9176ba0_FnCallArgChecker _20213_fcac = _1b9176ba0_FnCallArgChecker(_19937_e,_19952_fc->_field_args,_19952_fc->_field_token,_20013_f,false,jule::Slice<jule::Any>());
	_20213_fcac._method_check();
	jule::Ref<_1b8dbae99_FnCallExprModel> _21113_model = jule::new_struct<_1b8dbae99_FnCallExprModel>(new( std::nothrow ) _1b8dbae99_FnCallExprModel(_20013_f,_19952_fc->_field_concurrent,_19974_d->_field_model,_20213_fcac._field_arg_models));
	if ((!(jule::real(_20013_f->_field_result)))) {
		_19974_d=_1b9523799_build_void_data();
	} else {
		_19974_d=jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(_20013_f->_field_result,jule::Ref<_1b951b088_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1b9d678e5_Const>()));
	}
	_19974_d->_field_model=jule::Any(_21113_model);
	return _19974_d;
}



inline jule::Ref<_1b9523799_Data> _1b9c0b525_builtin_caller_common(jule::Ref<_1b9523799_Eval>& _23031_e,jule::Ref<_1d1e5192e_FnCallExpr>& _23046_fc,jule::Ref<_1b9523799_Data>& _23068_d) {
	if (_23046_fc->_field_generics.len() > 0LL) {
		_23031_e->_method_push_err(_23046_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	return _1b9c0b525_builtin_caller_common_plain(_23031_e,_23046_fc,_23068_d);
}



inline jule::Ref<_1b9523799_Data> _1b9c0b525_builtin_caller_common_mut(jule::Ref<_1b9523799_Eval>& _23835_e,jule::Ref<_1d1e5192e_FnCallExpr>& _23850_fc,jule::Ref<_1b9523799_Data>& _23872_d) {
	if ((!(_23872_d->_field_mutable))) {
		_23835_e->_method_push_err(_23850_fc->_field_token,jule::Str("mutable operation cannot used with immutable define", 51),jule::Slice<jule::Any>({}));
	}
	return _1b9c0b525_builtin_caller_common(_23835_e,_23850_fc,_23872_d);
}



inline jule::Ref<_1b9523799_Data> _1b9c0b525_builtin_caller_out(jule::Ref<_1b9523799_Eval>& _24528_e,jule::Ref<_1d1e5192e_FnCallExpr>& _24543_fc,jule::Ref<_1b9523799_Data>& ) {
	if (_24543_fc->_field_generics.len() > 0LL) {
		_24528_e->_method_push_err(_24543_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_24543_fc->_field_args.len() < 1LL) {
		_24528_e->_method_push_err(_24543_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("v", 1))}));
		return jule::new_ref<_1b9523799_Data>();
	}
	if (_24543_fc->_field_args.len() > 1LL) {
		_24528_e->_method_push_err(_24543_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1b9523799_Data> _25713_expr = _24528_e->_method_eval_expr(_24543_fc->_field_args[0LL]);
	if ((!(jule::real(_25713_expr)))) {
		return jule::new_ref<_1b9523799_Data>();
	}
	if ((_25713_expr->_method_is_void() || jule::real(_25713_expr->_field_kind->_method_fnc())) || jule::real(_25713_expr->_field_kind->_method_tup())) {
		_24528_e->_method_push_err(_24543_fc->_field_args[0LL]->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b9523799_Data>();
	}
	jule::Ref<_1b9523799_Data> _26713_d = _1b9523799_build_void_data();
	_26713_d->_field_model=jule::Any(jule::new_struct<_1b8dbae99_BuiltinOutCallExprModel>(new( std::nothrow ) _1b8dbae99_BuiltinOutCallExprModel(_25713_expr->_field_model)));
	return _26713_d;
}



inline jule::Ref<_1b9523799_Data> _1b9c0b525_builtin_caller_outln(jule::Ref<_1b9523799_Eval>& _27230_e,jule::Ref<_1d1e5192e_FnCallExpr>& _27245_fc,jule::Ref<_1b9523799_Data>& _27267_d) {
	_27267_d=_1b9c0b525_builtin_caller_out(_27230_e,_27245_fc,_27267_d);
	if ((!(jule::real(_27267_d)))) {
		return jule::new_ref<_1b9523799_Data>();
	}
	_27267_d->_field_model=jule::Any(jule::new_struct<_1b8dbae99_BuiltinOutlnCallExprModel>(new( std::nothrow ) _1b8dbae99_BuiltinOutlnCallExprModel(_27267_d->_field_model.operator jule::Ref<_1b8dbae99_BuiltinOutCallExprModel>()->_field_expr)));
	return _27267_d;
}



inline jule::Ref<_1b9523799_Data> _1b9c0b525_builtin_caller_new(jule::Ref<_1b9523799_Eval>& _28428_e,jule::Ref<_1d1e5192e_FnCallExpr>& _28443_fc,jule::Ref<_1b9523799_Data>& _28465_d) {
	if (_28443_fc->_field_generics.len() > 0LL) {
		_28428_e->_method_push_err(_28443_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_28443_fc->_field_args.len() < 1LL) {
		_28428_e->_method_push_err(_28443_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type", 4))}));
		return jule::new_ref<_1b9523799_Data>();
	}
	if (_28443_fc->_field_args.len() > 2LL) {
		_28428_e->_method_push_err(_28443_fc->_field_args[2LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1b9523799_Data> _29613_t = _28428_e->_method_eval_expr_kind(_28443_fc->_field_args[0LL]->_field_kind);
	if ((!(jule::real(_29613_t)))) {
		return jule::new_ref<_1b9523799_Data>();
	}
	if ((!(_29613_t->_field_decl))) {
		_28428_e->_method_push_err(_28443_fc->_field_args[0LL]->_field_token,jule::Str("invalid data-type", 17),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b9523799_Data>();
	}
	if ((!(_1b951b088_is_valid_for_ref_type(_29613_t->_field_kind)))) {
		jule::Ref<_1d21c0b59_StructIns> _30717_s = _29613_t->_field_kind->_method_strct();
		if ((jule::real(_30717_s) && jule::real(_30717_s->_field_decl)) && _30717_s->_field_decl->_field_cpp_linked) {
			_28428_e->_method_push_err(_28443_fc->_field_args[0LL]->_field_token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>({}));
		} else {
			_28428_e->_method_push_err(_28443_fc->_field_args[0LL]->_field_token,jule::Str("invalid data-type", 17),jule::Slice<jule::Any>({}));
		}
		return jule::new_ref<_1b9523799_Data>();
	}
	_28465_d->_field_kind=jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),jule::new_struct<_1b951b088_Ref>(new( std::nothrow ) _1b951b088_Ref(_29613_t->_field_kind->_method_clone()))));
	if (_28443_fc->_field_args.len() == 2LL) {
		jule::Ref<_1b9523799_Data> _31917_init = _28428_e->_field_s->_method_evalp(_28443_fc->_field_args[1LL],_28428_e->_field_lookup,_29613_t->_field_kind);
		if (jule::real(_31917_init)) {
			_29613_t->_field_mutable=true;
			_1b8cd2c4b_check_mut(_28428_e->_field_s,_29613_t,_31917_init,_28443_fc->_field_args[1LL]->_field_token);
			_28428_e->_field_s->_method_check_assign_type(false,_29613_t->_field_kind,_31917_init,_28443_fc->_field_args[1LL]->_field_token,false);
			if (jule::real(_31917_init->_field_kind->_method_ref())) {
				_31917_init->_field_model=jule::Any(jule::new_struct<_1b8dbae99_ExplicitDerefExprModel>(new( std::nothrow ) _1b8dbae99_ExplicitDerefExprModel(_31917_init->_field_model)));
			}
			_28465_d->_field_model=jule::Any(jule::new_struct<_1b8dbae99_BuiltinNewCallExprModel>(new( std::nothrow ) _1b8dbae99_BuiltinNewCallExprModel(_29613_t->_field_kind,_31917_init->_field_model)));
		}
	} else {
		_28465_d->_field_model=jule::Any(jule::new_struct<_1b8dbae99_BuiltinNewCallExprModel>(new( std::nothrow ) _1b8dbae99_BuiltinNewCallExprModel(_29613_t->_field_kind,jule::Any())));
	}
	return _28465_d;
}



inline jule::Ref<_1b9523799_Data> _1b9c0b525_builtin_caller_real(jule::Ref<_1b9523799_Eval>& _34329_e,jule::Ref<_1d1e5192e_FnCallExpr>& _34344_fc,jule::Ref<_1b9523799_Data>& _34366_d) {
	if (_34344_fc->_field_generics.len() > 0LL) {
		_34329_e->_method_push_err(_34344_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_34344_fc->_field_args.len() < 1LL) {
		_34329_e->_method_push_err(_34344_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("ref", 3))}));
		return jule::new_ref<_1b9523799_Data>();
	}
	if (_34344_fc->_field_args.len() > 1LL) {
		_34329_e->_method_push_err(_34344_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1b9523799_Data> _35513_ref = _34329_e->_method_eval_expr(_34344_fc->_field_args[0LL]);
	if ((!(jule::real(_35513_ref)))) {
		return jule::new_ref<_1b9523799_Data>();
	}
	if ((!(jule::real(_35513_ref->_field_kind->_method_ref())))) {
		_34329_e->_method_push_err(_34344_fc->_field_args[0LL]->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		_34329_e->_method_push_suggestion(jule::Str("expression must be reference type", 33),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b9523799_Data>();
	}
	_34366_d->_field_kind=_1b9c0b525_BUILTIN_FN_REAL->_field_result;
	_34366_d->_field_model=jule::Any(jule::new_struct<_1b8dbae99_BuiltinRealCallExprModel>(new( std::nothrow ) _1b8dbae99_BuiltinRealCallExprModel(_35513_ref->_field_model)));
	return _34366_d;
}



inline jule::Ref<_1b9523799_Data> _1b9c0b525_builtin_caller_drop(jule::Ref<_1b9523799_Eval>& _37129_e,jule::Ref<_1d1e5192e_FnCallExpr>& _37144_fc,jule::Ref<_1b9523799_Data>& ) {
	if (_37144_fc->_field_generics.len() > 0LL) {
		_37129_e->_method_push_err(_37144_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_37144_fc->_field_args.len() < 1LL) {
		_37129_e->_method_push_err(_37144_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("ref", 3))}));
		return jule::new_ref<_1b9523799_Data>();
	}
	if (_37144_fc->_field_args.len() > 1LL) {
		_37129_e->_method_push_err(_37144_fc->_field_args[2LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1b9523799_Data> _38313_ref = _37129_e->_method_eval_expr(_37144_fc->_field_args[0LL]);
	if ((!(jule::real(_38313_ref)))) {
		return jule::new_ref<_1b9523799_Data>();
	}
	if ((!(jule::real(_38313_ref->_field_kind->_method_ref())))) {
		_37129_e->_method_push_err(_37144_fc->_field_args[0LL]->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		_37129_e->_method_push_suggestion(jule::Str("expression must be reference type", 33),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b9523799_Data>();
	}
	_1b8cd2c4b_check_mut(_37129_e->_field_s,_38313_ref,jule::new_ref<_1b9523799_Data>(),_37144_fc->_field_args[0LL]->_field_token);
	jule::Ref<_1b9523799_Data> _39613_d = _1b9523799_build_void_data();
	_39613_d->_field_model=jule::Any(jule::new_struct<_1b8dbae99_BuiltinDropCallExprModel>(new( std::nothrow ) _1b8dbae99_BuiltinDropCallExprModel(_38313_ref->_field_model)));
	return _39613_d;
}



inline jule::Ref<_1b9523799_Data> _1b9c0b525_builtin_caller_panic(jule::Ref<_1b9523799_Eval>& _40130_e,jule::Ref<_1d1e5192e_FnCallExpr>& _40145_fc,jule::Ref<_1b9523799_Data>& ) {
	if (_40145_fc->_field_generics.len() > 0LL) {
		_40130_e->_method_push_err(_40145_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_40145_fc->_field_args.len() < 1LL) {
		_40130_e->_method_push_err(_40145_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("error", 5))}));
		return jule::new_ref<_1b9523799_Data>();
	}
	if (_40145_fc->_field_args.len() > 1LL) {
		_40130_e->_method_push_err(_40145_fc->_field_args[2LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1b9523799_Data> _41313_expr = _40130_e->_method_eval_expr(_40145_fc->_field_args[0LL]);
	if ((!(jule::real(_41313_expr)))) {
		return jule::new_ref<_1b9523799_Data>();
	}
	if (jule::real(_41313_expr->_field_kind->_method_strct())) {
		jule::Ref<_1d21c0b59_StructIns> _41913_s = _41313_expr->_field_kind->_method_strct();
		if (_41913_s->_field_decl->_method_is_implements(_1b9c0b525_BUILTIN_TRAIT_ERROR)) {
			_41313_expr->_field_cast_kind=jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_1b9c0b525_BUILTIN_TRAIT_ERROR));
			_1b9523799_apply_cast_kind(_41313_expr);
		}
	}
	jule::Ref<_1b9523799_Data> _42813_d = _1b9523799_build_void_data();
	_42813_d->_field_model=jule::Any(jule::new_struct<_1b8dbae99_BuiltinPanicCallExprModel>(new( std::nothrow ) _1b8dbae99_BuiltinPanicCallExprModel(_41313_expr->_field_model)));
	return _42813_d;
}



inline jule::Ref<_1b9523799_Data> _1b9c0b525_builtin_caller_make(jule::Ref<_1b9523799_Eval>& _43329_e,jule::Ref<_1d1e5192e_FnCallExpr>& _43344_fc,jule::Ref<_1b9523799_Data>& _43366_d) {
	if (_43344_fc->_field_generics.len() > 0LL) {
		_43329_e->_method_push_err(_43344_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_43344_fc->_field_args.len() < 2LL) {
		if (_43344_fc->_field_args.len() == 1LL) {
			_43329_e->_method_push_err(_43344_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("size", 4))}));
			return jule::new_ref<_1b9523799_Data>();
		}
		_43329_e->_method_push_err(_43344_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type, size", 10))}));
		return jule::new_ref<_1b9523799_Data>();
	}
	if (_43344_fc->_field_args.len() > 3LL) {
		_43329_e->_method_push_err(_43344_fc->_field_args[3LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1b9523799_Data> _44913_t = _43329_e->_method_eval_expr_kind(_43344_fc->_field_args[0LL]->_field_kind);
	if ((!(jule::real(_44913_t)))) {
		return jule::new_ref<_1b9523799_Data>();
	}
	if ((!(_44913_t->_field_decl)) || (!(jule::real(_44913_t->_field_kind->_method_slc())))) {
		_43329_e->_method_push_err(_43344_fc->_field_args[0LL]->_field_token,jule::Str("invalid data-type", 17),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b9523799_Data>();
	}
	_43366_d->_field_kind=_44913_t->_field_kind;
	jule::Ref<_1b9523799_Data> _46113_len = _43329_e->_field_s->_method_evalp(_43344_fc->_field_args[1LL],_43329_e->_field_lookup,_44913_t->_field_kind);
	if ((!(jule::real(_46113_len)))) {
		return _43366_d;
	}
	_43329_e->_method_check_integer_indexing_by_data(_46113_len,_43344_fc->_field_args[1LL]->_field_token);
	if (_43344_fc->_field_args.len() == 3LL) {
		jule::Ref<_1b9523799_Data> _46917_cap = _43329_e->_field_s->_method_evalp(_43344_fc->_field_args[2LL],_43329_e->_field_lookup,_44913_t->_field_kind);
		if ((!(jule::real(_46917_cap)))) {
			return _43366_d;
		}
		_43329_e->_method_check_integer_indexing_by_data(_46917_cap,_43344_fc->_field_args[2LL]->_field_token);
		_43366_d->_field_model=jule::Any(jule::new_struct<_1b8dbae99_BuiltinMakeCallExprModel>(new( std::nothrow ) _1b8dbae99_BuiltinMakeCallExprModel(_44913_t->_field_kind,_46113_len->_field_model,_46917_cap->_field_model)));
	} else {
		_43366_d->_field_model=jule::Any(jule::new_struct<_1b8dbae99_BuiltinMakeCallExprModel>(new( std::nothrow ) _1b8dbae99_BuiltinMakeCallExprModel(_44913_t->_field_kind,_46113_len->_field_model,jule::Any())));
	}
	return _43366_d;
}



inline jule::Ref<_1b9523799_Data> _1b9c0b525_builtin_caller_append(jule::Ref<_1b9523799_Eval>& _49031_e,jule::Ref<_1d1e5192e_FnCallExpr>& _49046_fc,jule::Ref<_1b9523799_Data>& _49068_d) {
	if (_49046_fc->_field_generics.len() > 0LL) {
		_49031_e->_method_push_err(_49046_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_49046_fc->_field_args.len() < 2LL) {
		if (_49046_fc->_field_args.len() == 1LL) {
			_49031_e->_method_push_err(_49046_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src", 3))}));
			return jule::new_ref<_1b9523799_Data>();
		}
		_49031_e->_method_push_err(_49046_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src, values", 11))}));
		return jule::new_ref<_1b9523799_Data>();
	}
	jule::Ref<_1b9523799_Data> _50313_t = _49031_e->_method_eval_expr(_49046_fc->_field_args[0LL]);
	if ((!(jule::real(_50313_t)))) {
		return jule::new_ref<_1b9523799_Data>();
	}
	jule::Bool _50813_ref = false;
	if (jule::real(_50313_t->_field_kind->_method_ref())) {
		_50313_t->_field_kind=_50313_t->_field_kind->_method_ref()->_field_elem;
		_50813_ref=true;
	}
	if ((!(jule::real(_50313_t->_field_kind->_method_slc())))) {
		_49031_e->_method_push_err(_49046_fc->_field_args[0LL]->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b9523799_Data>();
	}
	jule::Ref<_1d21d97ee_FnIns> _51913_f = jule::new_struct<_1d21d97ee_FnIns>(new( std::nothrow ) _1d21d97ee_FnIns(jule::Ref<_1d21c0b59_StructIns>(),jule::Ref<_1d21d97ee_Fn>(),jule::Slice<jule::Ref<_1b951b088_TypeKind>>(),jule::Slice<jule::Ref<_1d21d97ee_ParamIns>>({jule::new_struct<_1d21d97ee_ParamIns>(new( std::nothrow ) _1d21d97ee_ParamIns(jule::new_struct<_1d21d97ee_Param>(new( std::nothrow ) _1d21d97ee_Param(_1d1da4277_Token(),true,jule::Bool(),jule::Bool(),jule::Ref<_1b951b088_TypeSymbol>(),jule::Str())),_50313_t->_field_kind->_method_clone())),jule::new_struct<_1d21d97ee_ParamIns>(new( std::nothrow ) _1d21d97ee_ParamIns(jule::new_struct<_1d21d97ee_Param>(new( std::nothrow ) _1d21d97ee_Param(_1d1da4277_Token(),true,true,jule::Bool(),jule::Ref<_1b951b088_TypeSymbol>(),jule::Str())),_50313_t->_field_kind->_method_slc()->_field_elem->_method_clone()))}),_50313_t->_field_kind->_method_clone(),jule::Ref<_1b8cd2c4b_Scope>(),jule::Ref<_1b8b10cbb_ReferenceStack>(),jule::Ref<_1b8b10cbb_ReferenceStack>(),jule::Fn<jule::Ref<_1b9523799_Data>(jule::Ref<_1b9523799_Eval>&,jule::Ref<_1d1e5192e_FnCallExpr>&,jule::Ref<_1b9523799_Data>&)>(_1b9c0b525_builtin_caller_common_plain),jule::Bool(),jule::Bool()));
	_49068_d->_field_kind=jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_51913_f));
	_49068_d->_field_model=jule::Any(jule::new_struct<_1b8dbae99_CommonIdentExprModel>(new( std::nothrow ) _1b8dbae99_CommonIdentExprModel(jule::Str("append", 6))));
	_49068_d=_1b9c0b525_builtin_caller_common_plain(_49031_e,_49046_fc,_49068_d);
	if (jule::real(_49068_d)) {
		jule::Ref<_1b8dbae99_FnCallExprModel> _54317_model = _49068_d->_field_model.operator jule::Ref<_1b8dbae99_FnCallExprModel>();
		if (_50813_ref) {
			_54317_model->_field_args[0LL]=jule::Any(jule::new_struct<_1b8dbae99_ExplicitDerefExprModel>(new( std::nothrow ) _1b8dbae99_ExplicitDerefExprModel(_50313_t->_field_model)));
		}
		_49068_d->_field_model=jule::Any(jule::new_struct<_1b8dbae99_BuiltinAppendCallExprModel>(new( std::nothrow ) _1b8dbae99_BuiltinAppendCallExprModel(_54317_model->_field_args[0LL],_54317_model->_field_args[1LL])));
	}
	return _49068_d;
}



inline jule::Ref<_1b9523799_Data> _1b9c0b525_builtin_caller_copy(jule::Ref<_1b9523799_Eval>& _55729_e,jule::Ref<_1d1e5192e_FnCallExpr>& _55744_fc,jule::Ref<_1b9523799_Data>& _55766_d) {
	if (_55744_fc->_field_generics.len() > 0LL) {
		_55729_e->_method_push_err(_55744_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_55744_fc->_field_args.len() < 2LL) {
		if (_55744_fc->_field_args.len() == 1LL) {
			_55729_e->_method_push_err(_55744_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src", 3))}));
			return jule::new_ref<_1b9523799_Data>();
		}
		_55729_e->_method_push_err(_55744_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src, values", 11))}));
		return jule::new_ref<_1b9523799_Data>();
	}
	if (_55744_fc->_field_args.len() > 2LL) {
		_55729_e->_method_push_err(_55744_fc->_field_args[2LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1b9523799_Data> _57313_t = _55729_e->_method_eval_expr(_55744_fc->_field_args[0LL]);
	if ((!(jule::real(_57313_t)))) {
		return jule::new_ref<_1b9523799_Data>();
	}
	jule::Bool _57813_ref = false;
	if (jule::real(_57313_t->_field_kind->_method_ref())) {
		_57313_t->_field_kind=_57313_t->_field_kind->_method_ref()->_field_elem;
		_57813_ref=false;
	}
	if ((!(jule::real(_57313_t->_field_kind->_method_slc())))) {
		_55729_e->_method_push_err(_55744_fc->_field_args[0LL]->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b9523799_Data>();
	}
	if ((!(_57313_t->_field_mutable))) {
		_55729_e->_method_push_err(_55744_fc->_field_args[0LL]->_field_token,jule::Str("mutable operation cannot used with immutable define", 51),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1d21d97ee_FnIns> _59313_f = jule::new_struct<_1d21d97ee_FnIns>(new( std::nothrow ) _1d21d97ee_FnIns(jule::Ref<_1d21c0b59_StructIns>(),jule::Ref<_1d21d97ee_Fn>(),jule::Slice<jule::Ref<_1b951b088_TypeKind>>(),jule::Slice<jule::Ref<_1d21d97ee_ParamIns>>({jule::new_struct<_1d21d97ee_ParamIns>(new( std::nothrow ) _1d21d97ee_ParamIns(jule::new_struct<_1d21d97ee_Param>(new( std::nothrow ) _1d21d97ee_Param()),_57313_t->_field_kind->_method_clone())),jule::new_struct<_1d21d97ee_ParamIns>(new( std::nothrow ) _1d21d97ee_ParamIns(jule::new_struct<_1d21d97ee_Param>(new( std::nothrow ) _1d21d97ee_Param(_1d1da4277_Token(),true,jule::Bool(),jule::Bool(),jule::Ref<_1b951b088_TypeSymbol>(),jule::Str())),_57313_t->_field_kind->_method_clone()))}),_1b9c0b525_BUILTIN_FN_COPY->_field_result,jule::Ref<_1b8cd2c4b_Scope>(),jule::Ref<_1b8b10cbb_ReferenceStack>(),jule::Ref<_1b8b10cbb_ReferenceStack>(),jule::Fn<jule::Ref<_1b9523799_Data>(jule::Ref<_1b9523799_Eval>&,jule::Ref<_1d1e5192e_FnCallExpr>&,jule::Ref<_1b9523799_Data>&)>(_1b9c0b525_builtin_caller_common_plain),jule::Bool(),jule::Bool()));
	_55766_d->_field_kind=jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_59313_f));
	_55766_d->_field_model=jule::Any(jule::new_struct<_1b8dbae99_CommonIdentExprModel>(new( std::nothrow ) _1b8dbae99_CommonIdentExprModel(jule::Str("copy", 4))));
	_55766_d=_1b9c0b525_builtin_caller_common_plain(_55729_e,_55744_fc,_55766_d);
	if (jule::real(_55766_d) && _57813_ref) {
		_55766_d->_field_model.operator jule::Ref<_1b8dbae99_FnCallExprModel>()->_field_args[0LL]=jule::Any(jule::new_struct<_1b8dbae99_ExplicitDerefExprModel>(new( std::nothrow ) _1b8dbae99_ExplicitDerefExprModel(_57313_t->_field_model)));
	}
	return _55766_d;
}



inline jule::Ref<_1b9523799_Data> _1b9c0b525_builtin_caller_recover(jule::Ref<_1b9523799_Eval>& _62232_e,jule::Ref<_1d1e5192e_FnCallExpr>& _62247_fc,jule::Ref<_1b9523799_Data>& ) {
	if (_62247_fc->_field_generics.len() > 0LL) {
		_62232_e->_method_push_err(_62247_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	
	if (_62247_fc->_field_args.len() < 1LL) {
		_62232_e->_method_push_err(_62247_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("handler", 7))}));
		return jule::new_ref<_1b9523799_Data>();
	}
	if (_62247_fc->_field_args.len() > 1LL) {
		_62232_e->_method_push_err(_62247_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1b9523799_Data> _63613_t = _62232_e->_method_eval_expr(_62247_fc->_field_args[0LL]);
	if ((!(jule::real(_63613_t)))) {
		return jule::new_ref<_1b9523799_Data>();
	}
	if ((!(jule::real(_63613_t->_field_kind->_method_fnc())))) {
		_62232_e->_method_push_err(_62247_fc->_field_args[0LL]->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1b9523799_Data>();
	}
	jule::Str _6469_tkind = _63613_t->_field_kind->_method_fnc()->_method_to_str();
	if (_6469_tkind != jule::Str("fn(Error)", 9)) {
		_62232_e->_method_push_err(_62247_fc->_field_args[0LL]->_field_token,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_6469_tkind),jule::Any(jule::Str("fn(Error)", 9))}));
	}
	jule::Ref<_1b9523799_Data> _65113_d = _1b9523799_build_void_data();
	_65113_d->_field_kind=_63613_t->_field_kind->_method_clone();
	_65113_d->_field_model=jule::Any(jule::new_struct<_1b8cd2c4b_Recover>(new( std::nothrow ) _1b8cd2c4b_Recover(jule::Ref<_1d21d97ee_FnIns>(),_63613_t->_field_model,jule::Ref<_1b8cd2c4b_Scope>(),jule::Ref<_1d21d97ee_FnIns>())));
	return _65113_d;
}



inline jule::Ref<_1b9523799_Data> _1b9c0b525_builtin_caller_clone(jule::Ref<_1b9523799_Eval>& _65930_e,jule::Ref<_1d1e5192e_FnCallExpr>& _65945_fc,jule::Ref<_1b9523799_Data>& ) {
	if (_65945_fc->_field_generics.len() > 0LL) {
		_65930_e->_method_push_err(_65945_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_65945_fc->_field_args.len() < 1LL) {
		_65930_e->_method_push_err(_65945_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("expr", 4))}));
		return jule::new_ref<_1b9523799_Data>();
	}
	if (_65945_fc->_field_args.len() > 1LL) {
		_65930_e->_method_push_err(_65945_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1b9523799_Data> _67213_d = _65930_e->_method_eval_expr_kind(_65945_fc->_field_args[0LL]->_field_kind);
	if ((!(jule::real(_67213_d)))) {
		return jule::new_ref<_1b9523799_Data>();
	}
	jule::Fn<void(jule::Ref<_1b951b088_TypeKind>)> _6779_check_kind = jule::Fn<void(jule::Ref<_1b951b088_TypeKind>)>([=](jule::Ref<_1b951b088_TypeKind> _67729_k) mutable -> void {
		{
			if (!((jule::real(_67729_k->_method_slc())))) { goto _case_end_4711032592; }
			_case_begin_4711032592:;
			{
				if ((!(_67729_k->_method_slc()->_field_elem->_method_supports_cloning()))) {
					_65930_e->_method_push_err(_65945_fc->_field_args[0LL]->_field_token,jule::Str("internal types of \"@\" is not supports cloning", 45),jule::Slice<jule::Any>({jule::Any(_67729_k->_method_to_str())}));
				}
			}
			goto _match_end_4711027728;
			_case_end_4711032592:;
			if (!((jule::real(_67729_k->_method_map())))) { goto _case_end_4711028752; }
			_case_begin_4711028752:;
			{
				jule::Ref<_1b951b088_Map> _68517_m = _67729_k->_method_map();
				if ((!(_68517_m->_field_key->_method_supports_cloning())) || (!(_68517_m->_field_val->_method_supports_cloning()))) {
					_65930_e->_method_push_err(_65945_fc->_field_args[0LL]->_field_token,jule::Str("internal types of \"@\" is not supports cloning", 45),jule::Slice<jule::Any>({jule::Any(_67729_k->_method_to_str())}));
				}
			}
			goto _match_end_4711027728;
			_case_end_4711028752:;
			if (!((jule::real(_67729_k->_method_arr())))) { goto _case_end_4711028224; }
			_case_begin_4711028224:;
			{
				if ((!(_67729_k->_method_arr()->_field_elem->_method_supports_cloning()))) {
					_65930_e->_method_push_err(_65945_fc->_field_args[0LL]->_field_token,jule::Str("internal types of \"@\" is not supports cloning", 45),jule::Slice<jule::Any>({jule::Any(_67729_k->_method_to_str())}));
				}
			}
			goto _match_end_4711027728;
			_case_end_4711028224:;
			if (!((jule::real(_67729_k->_method_ref())))) { goto _case_end_4711028336; }
			_case_begin_4711028336:;
			{
				if ((!(_67729_k->_method_ref()->_field_elem->_method_supports_cloning()))) {
					_65930_e->_method_push_err(_65945_fc->_field_args[0LL]->_field_token,jule::Str("internal types of \"@\" is not supports cloning", 45),jule::Slice<jule::Any>({jule::Any(_67729_k->_method_to_str())}));
				}
			}
			goto _match_end_4711027728;
			_case_end_4711028336:;
			if (!((jule::real(_67729_k->_method_strct())))) { goto _case_end_4711028448; }
			_case_begin_4711028448:;
			{
				jule::Ref<_1d21c0b59_StructIns> _70117_s = _67213_d->_field_kind->_method_strct();
				if ((!(_70117_s->_field_mutable))) {
					_65930_e->_method_push_err(_65945_fc->_field_args[0LL]->_field_token,jule::Str("struct \"@\" is not breaks immutability, do not needs cloning", 59),jule::Slice<jule::Any>({jule::Any(_67213_d->_field_kind->_method_to_str())}));
				}
				if (((!(jule::real(_70117_s->_field_decl))) || _70117_s->_field_decl->_field_cpp_linked) || (!(_70117_s->_field_decl->_method_is_derives(jule::Str("Clone", 5))))) {
					_65930_e->_method_push_err(_65945_fc->_field_args[0LL]->_field_token,jule::Str("type \"@\" is not derives: @", 26),jule::Slice<jule::Any>({jule::Any(_67213_d->_field_kind->_method_to_str()),jule::Any(jule::Str("Clone", 5))}));
				}
			}
			goto _match_end_4711027728;
			_case_end_4711028448:;
			_case_begin_4711027920:;
			{
				_65930_e->_method_push_err(_65945_fc->_field_args[0LL]->_field_token,jule::Str("type \"@\" is not derives: @", 26),jule::Slice<jule::Any>({jule::Any(_67213_d->_field_kind->_method_to_str()),jule::Any(jule::Str("Clone", 5))}));
			}
			goto _match_end_4711027728;
			_case_end_4711027920:;
			_match_end_4711027728:;
		}
	});
	{
		if (!(((!(_67213_d->_field_lvalue))))) { goto _case_end_4711016576; }
		_case_begin_4711016576:;
		{
			_65930_e->_method_push_err(_65945_fc->_field_args[0LL]->_field_token,jule::Str("non-lvalue expressions cannot be clone", 38),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4711057264;
		_case_end_4711016576:;
		if (!(((!(_67213_d->_field_kind->_method_supports_cloning()))))) { goto _case_end_4711070208; }
		_case_begin_4711070208:;
		{
			_6779_check_kind(_67213_d->_field_kind);
		}
		goto _match_end_4711057264;
		_case_end_4711070208:;
		_match_end_4711057264:;
	}
	_67213_d->_field_mutable=true;
	_67213_d->_field_model=jule::Any(jule::new_struct<_1b8dbae99_BuiltinCloneCallExprModel>(new( std::nothrow ) _1b8dbae99_BuiltinCloneCallExprModel(_67213_d->_field_model)));
	return _67213_d;
}



inline jule::Ref<_1b9523799_Data> _1b9c0b525_builtin_caller_std_mem_size_of(jule::Ref<_1b9523799_Eval>& _72740_e,jule::Ref<_1d1e5192e_FnCallExpr>& _72755_fc,jule::Ref<_1b9523799_Data>& ) {
	if (_72755_fc->_field_generics.len() > 0LL) {
		_72740_e->_method_push_err(_72755_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1b9523799_Data> _73113_result = jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_1b951b088_build_prim_type(jule::Str("uint", 4)))),jule::Ref<_1b951b088_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1b9d678e5_Const>()));
	if (_72755_fc->_field_args.len() < 1LL) {
		_72740_e->_method_push_err(_72755_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type|expr", 9))}));
		return _73113_result;
	}
	if (_72755_fc->_field_args.len() > 1LL) {
		_72740_e->_method_push_err(_72755_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1b9523799_Data> _74313_d = _72740_e->_method_eval_expr_kind(_72755_fc->_field_args[0LL]->_field_kind);
	if ((!(jule::real(_74313_d)))) {
		return _73113_result;
	}
	_73113_result->_field_model=jule::Any(jule::new_struct<_1b8dbae99_SizeofExprModel>(new( std::nothrow ) _1b8dbae99_SizeofExprModel(_74313_d->_field_model)));
	return _73113_result;
}



inline jule::Ref<_1b9523799_Data> _1b9c0b525_builtin_caller_std_mem_align_of(jule::Ref<_1b9523799_Eval>& _75241_e,jule::Ref<_1d1e5192e_FnCallExpr>& _75256_fc,jule::Ref<_1b9523799_Data>& ) {
	if (_75256_fc->_field_generics.len() > 0LL) {
		_75241_e->_method_push_err(_75256_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1b9523799_Data> _75613_result = jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_1b951b088_build_prim_type(jule::Str("uint", 4)))),jule::Ref<_1b951b088_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_1b9d678e5_Const>()));
	if (_75256_fc->_field_args.len() < 1LL) {
		_75241_e->_method_push_err(_75256_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type|expr", 9))}));
		return _75613_result;
	}
	if (_75256_fc->_field_args.len() > 1LL) {
		_75241_e->_method_push_err(_75256_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1b9523799_Data> _76813_d = _75241_e->_method_eval_expr_kind(_75256_fc->_field_args[0LL]->_field_kind);
	if ((!(jule::real(_76813_d)))) {
		return _75613_result;
	}
	_75613_result->_field_model=jule::Any(jule::new_struct<_1b8dbae99_AlignofExprModel>(new( std::nothrow ) _1b8dbae99_AlignofExprModel(_76813_d->_field_model)));
	return _75613_result;
}



inline jule::Ref<_1b9523799_Data> _1b9c0b525_builtin_caller_std_jule_integrated_to_str(jule::Ref<_1b9523799_Eval>& _77751_e,jule::Ref<_1d1e5192e_FnCallExpr>& _77766_fc,jule::Ref<_1b9523799_Data>& ) {
	if (_77766_fc->_field_generics.len() > 0LL) {
		_77751_e->_method_push_err(_77766_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_77766_fc->_field_args.len() < 1LL) {
		_77751_e->_method_push_err(_77766_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("expr", 4))}));
		return jule::new_ref<_1b9523799_Data>();
	}
	if (_77766_fc->_field_args.len() > 1LL) {
		_77751_e->_method_push_err(_77766_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1b9523799_Data> _79013_d = _77751_e->_method_eval_expr_kind(_77766_fc->_field_args[0LL]->_field_kind);
	if ((!(jule::real(_79013_d)))) {
		return jule::new_ref<_1b9523799_Data>();
	}
	return jule::new_struct<_1b9523799_Data>(new( std::nothrow ) _1b9523799_Data(jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_1b951b088_build_prim_type(jule::Str("str", 3)))),jule::Ref<_1b951b088_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_1b8dbae99_IntegratedToStrExprModel>(new( std::nothrow ) _1b8dbae99_IntegratedToStrExprModel(_79013_d->_field_model))),jule::Bool(),jule::Ref<_1b9d678e5_Const>()));
}



inline std::tuple<jule::Bool,jule::Bool> _1d1958e4d_check_os(jule::Str _1013_arg) {
	jule::Bool _1025_ok = jule::Bool();
	jule::Bool _1035_exist = jule::Bool();
	_1025_ok=false;
	_1035_exist=true;
	{
		auto _match_expr{ _1013_arg };
		if (!((jule::Str("windows", 7)) == _match_expr)) { goto _case_end_4717989504; }
		_case_begin_4717989504:;
		{
			_1025_ok=_1d0626eb3_is_windows(_1d1c2a4b6_OS);
		}
		goto _match_end_4717987568;
		_case_end_4717989504:;
		if (!((jule::Str("darwin", 6)) == _match_expr)) { goto _case_end_4717988640; }
		_case_begin_4717988640:;
		{
			_1025_ok=_1d0626eb3_is_darwin(_1d1c2a4b6_OS);
		}
		goto _match_end_4717987568;
		_case_end_4717988640:;
		if (!((jule::Str("linux", 5)) == _match_expr)) { goto _case_end_4717988752; }
		_case_begin_4717988752:;
		{
			_1025_ok=_1d0626eb3_is_linux(_1d1c2a4b6_OS);
		}
		goto _match_end_4717987568;
		_case_end_4717988752:;
		if (!((jule::Str("unix", 4)) == _match_expr)) { goto _case_end_4717988864; }
		_case_begin_4717988864:;
		{
			_1025_ok=_1d0626eb3_is_unix(_1d1c2a4b6_OS);
		}
		goto _match_end_4717987568;
		_case_end_4717988864:;
		_case_begin_4717986960:;
		{
			_1025_ok=true;
			_1035_exist=false;
		}
		goto _match_end_4717987568;
		_case_end_4717986960:;
		_match_end_4717987568:;
	}
	return std::make_tuple(_1025_ok,_1035_exist);
}



inline std::tuple<jule::Bool,jule::Bool> _1d1958e4d_check_arch(jule::Str _2715_arg) {
	jule::Bool _2727_ok = jule::Bool();
	jule::Bool _2737_exist = jule::Bool();
	_2727_ok=false;
	_2737_exist=true;
	{
		auto _match_expr{ _2715_arg };
		if (!((jule::Str("i386", 4)) == _match_expr)) { goto _case_end_4717996736; }
		_case_begin_4717996736:;
		{
			_2727_ok=_1d0626eb3_is_i386(_1d1c2a4b6_ARCH);
		}
		goto _match_end_4717994800;
		_case_end_4717996736:;
		if (!((jule::Str("amd64", 5)) == _match_expr)) { goto _case_end_4717995872; }
		_case_begin_4717995872:;
		{
			_2727_ok=_1d0626eb3_is_amd64(_1d1c2a4b6_ARCH);
		}
		goto _match_end_4717994800;
		_case_end_4717995872:;
		if (!((jule::Str("arm64", 5)) == _match_expr)) { goto _case_end_4717995984; }
		_case_begin_4717995984:;
		{
			_2727_ok=_1d0626eb3_is_arm64(_1d1c2a4b6_ARCH);
		}
		goto _match_end_4717994800;
		_case_end_4717995984:;
		if (!((jule::Str("64bit", 5)) == _match_expr)) { goto _case_end_4717996096; }
		_case_begin_4717996096:;
		{
			_2727_ok=_1d0626eb3_is_64bit(_1d1c2a4b6_ARCH);
		}
		goto _match_end_4717994800;
		_case_end_4717996096:;
		if (!((jule::Str("32bit", 5)) == _match_expr)) { goto _case_end_4717995296; }
		_case_begin_4717995296:;
		{
			_2727_ok=_1d0626eb3_is_32bit(_1d1c2a4b6_ARCH);
		}
		goto _match_end_4717994800;
		_case_end_4717995296:;
		_case_begin_4717994192:;
		{
			_2727_ok=true;
			_2737_exist=false;
		}
		goto _match_end_4717994800;
		_case_end_4717994192:;
		_match_end_4717994800:;
	}
	return std::make_tuple(_2727_ok,_2737_exist);
}



inline jule::Bool _1d1958e4d_is_pass_file_annotation(jule::Str _4632_p) {
	_4632_p=_1d0680a33_base(_4632_p);
	jule::I64 _489_n = _4632_p.len();
	_4632_p=_4632_p.slice(0LL,static_cast<jule::Int>(_489_n - _1d0680a33_ext(_4632_p).len()));
	jule::Str _5413_a1 = jule::Str("", 0);
	jule::Str _5713_a2 = jule::Str("", 0);
	jule::Int _6013_i = _4632_p.rfind(jule::Str("_", 1));
	if (_6013_i == -1LL) {
		jule::Bool _6318_ok;
		jule::Bool _6326_exist;
		std::tie(_6318_ok,_6326_exist) = _1d1958e4d_check_os(_4632_p);
		if (_6326_exist) {
			return _6318_ok;
		}
		std::tie(_6318_ok,_6326_exist) = _1d1958e4d_check_arch(_4632_p);
		return (!(_6326_exist)) || _6318_ok;
	}
	if ((_6013_i + 1LL) >= _489_n) {
		return true;
	}
	_5413_a1=_4632_p.slice(static_cast<jule::Int>(_6013_i + 1LL));
	_4632_p=_4632_p.slice(0LL,static_cast<jule::Int>(_6013_i));
	_6013_i=static_cast<jule::Int>(_4632_p.rfind(jule::Str("_", 1)));
	if (_6013_i != -1LL) {
		_5713_a2=_4632_p.slice(static_cast<jule::Int>(_6013_i + 1LL));
	}
	if (_5713_a2 == jule::Str("", 0)) {
		jule::Bool _8418_ok;
		jule::Bool _8426_exist;
		std::tie(_8418_ok,_8426_exist) = _1d1958e4d_check_os(_5413_a1);
		if (_8426_exist) {
			return _8418_ok;
		}
		std::tie(_8418_ok,_8426_exist) = _1d1958e4d_check_arch(_5413_a1);
		return (!(_8426_exist)) || _8418_ok;
	}
	jule::Bool _9214_ok;
	jule::Bool _9222_exist;
	std::tie(_9214_ok,_9222_exist) = _1d1958e4d_check_arch(_5413_a1);
	if (_9222_exist) {
		if ((!(_9214_ok))) {
			return false;
		}
		jule::Bool _9714_ok;
		jule::Bool _9718_exist;
		std::tie(_9714_ok,_9718_exist) = _1d1958e4d_check_os(_5713_a2);
		return (!(_9718_exist)) || _9714_ok;
	}
	std::tie(_9214_ok,_9222_exist) = _1d1958e4d_check_os(_5413_a1);
	return (!(_9222_exist)) || _9214_ok;
}



inline jule::Bool _1d1996397_eval_directive_ident(jule::Str _625_ident) {
	if (_625_ident == jule::Str("", 0)) {
		return false;
	}
	{
		auto _range_expr = _1d1956852_FLAGS;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _1d1996397_flag = *_range_begin;
			_iter_begin_4718028400:;
			{
				if (_1d1996397_flag == _625_ident) {
					return true;
				}
			}
			_iter_next_4718028400:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d1996397_flag = *_range_begin; goto _iter_begin_4718028400; }
			_iter_end_4718028400:;
		}
	}
	return false;
}



inline jule::Bool _1d1996397_eval_directive_part(jule::Str _2228_part) {
	jule::Bool _239_logical_not = _2228_part[0LL] == '!';
	if (_239_logical_not) {
		_2228_part=_2228_part.slice(1LL);
	}
	jule::Bool _2813_result = _1d1996397_eval_directive_ident(_2228_part);
	if (_239_logical_not) {
		_2813_result=(!(_2813_result));
	}
	return _2813_result;
}



inline jule::Slice<jule::Str> _1d1996397_split_operans(jule::Str _3718_op,jule::Str _3727_expr) {
	jule::Slice<jule::Str> _3813_parts = jule::Slice<jule::Str>::alloc(0LL,10LL);
	jule::Int _4013_range_n = 0LL;
	jule::Int _4113_i = 0LL;
	jule::Int _4213_last = 0LL;
	_iter_begin_4718040272:;
	if (!(_4113_i < (_3727_expr.len() - 1LL))) { goto _iter_end_4718040272; }
	{
		jule::U8 _4413_b = _3727_expr[static_cast<jule::Int>(_4113_i)];
		if (_4413_b == '(') {
			(_4013_range_n)++;
			goto _iter_next_4718040272;
		} else if (_4413_b == ')') {
			(_4013_range_n)--;
		}
		if (_4013_range_n > 0LL) {
			goto _iter_next_4718040272;
		}
		{
			auto _match_expr{ _3718_op };
			if (!((jule::Str("||", 2)) == _match_expr)) { goto _case_end_4718046528; }
			_case_begin_4718046528:;
			{
				if ((_4413_b == '|') && (_3727_expr[static_cast<jule::Int>(_4113_i + 1LL)] == '|')) {
					_3813_parts=jule::append(_3813_parts,jule::Slice<jule::Str>({_3727_expr.slice(static_cast<jule::Int>(_4213_last),static_cast<jule::Int>(_4113_i))}));
					_4213_last=static_cast<jule::Int>(_4113_i + 2LL);
				}
			}
			goto _match_end_4718045920;
			_case_end_4718046528:;
			if (!((jule::Str("&&", 2)) == _match_expr)) { goto _case_end_4718044144; }
			_case_begin_4718044144:;
			{
				if ((_4413_b == '&') && (_3727_expr[static_cast<jule::Int>(_4113_i + 1LL)] == '&')) {
					_3813_parts=jule::append(_3813_parts,jule::Slice<jule::Str>({_3727_expr.slice(static_cast<jule::Int>(_4213_last),static_cast<jule::Int>(_4113_i))}));
					_4213_last=static_cast<jule::Int>(_4113_i + 2LL);
				}
			}
			goto _match_end_4718045920;
			_case_end_4718044144:;
			_match_end_4718045920:;
		}
	}
	_iter_next_4718040272:;
	(_4113_i)++;
	goto _iter_begin_4718040272;
	_iter_end_4718040272:;
	if (_4213_last < _3727_expr.len()) {
		_3813_parts=jule::append(_3813_parts,jule::Slice<jule::Str>({_3727_expr.slice(static_cast<jule::Int>(_4213_last))}));
	} else {
		_3813_parts=jule::append(_3813_parts,jule::Slice<jule::Str>({jule::Str("", 0)}));
	}
	return _3813_parts;
}



inline jule::Bool _1d1996397_eval_directive_expr(jule::Str _8724_expr) {
	if (_8724_expr == jule::Str("", 0)) {
		return false;
	}
	jule::Bool _9213_result = false;
	jule::Slice<jule::Str> _949_logical_or_parts = _1d1996397_split_operans(jule::Str("||", 2),_8724_expr);
	{
		auto _range_expr = _949_logical_or_parts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _1d1996397_part = *_range_begin;
			_iter_begin_4718064336:;
			{
				if (_1d1996397_part == jule::Str("", 0)) {
					return false;
				}
				jule::Bool _10017_and = true;
				jule::Slice<jule::Str> _10113_logical_and_parts = _1d1996397_split_operans(jule::Str("&&", 2),_1d1996397_part);
				{
					auto _range_expr = _10113_logical_and_parts;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Str _1d1996397_and_part = *_range_begin;
						_iter_begin_4718068896:;
						{
							if (_1d1996397_and_part.find(jule::Str("(", 1)) != -1LL) {
								if (_1d1996397_and_part[static_cast<jule::Int>(_1d1996397_and_part.len() - 1LL)] != ')') {
									return false;
								}
								jule::Str _10721__expr = _1d1996397_and_part.slice(1LL,static_cast<jule::Int>(_1d1996397_and_part.len() - 1LL));
								_10017_and=_10017_and && _1d1996397_eval_directive_expr(_10721__expr);
							} else {
								_10017_and=_10017_and && _1d1996397_eval_directive_part(_1d1996397_and_part);
							}
						}
						_iter_next_4718068896:;
						++_range_begin;
						if (_range_begin != _range_end) { _1d1996397_and_part = *_range_begin; goto _iter_begin_4718068896; }
						_iter_end_4718068896:;
					}
				}
				_9213_result=_9213_result || _10017_and;
			}
			_iter_next_4718064336:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d1996397_part = *_range_begin; goto _iter_begin_4718064336; }
			_iter_end_4718064336:;
		}
	}
	return _9213_result;
}



inline void _1d1956852_set_os_flags(void) {
	{
		auto _match_expr{ _1d1c2a4b6_OS };
		if (!((jule::Str("windows", 7)) == _match_expr)) { goto _case_end_4718077744; }
		_case_begin_4718077744:;
		{
			_1d1956852_FLAGS=jule::append(_1d1956852_FLAGS,jule::Slice<jule::Str>({jule::Str("windows", 7)}));
		}
		goto _match_end_4718064032;
		_case_end_4718077744:;
		if (!((jule::Str("linux", 5)) == _match_expr)) { goto _case_end_4718079360; }
		_case_begin_4718079360:;
		{
			_1d1956852_FLAGS=jule::append(_1d1956852_FLAGS,jule::Slice<jule::Str>({jule::Str("linux", 5)}));
		}
		goto _match_end_4718064032;
		_case_end_4718079360:;
		if (!((jule::Str("darwin", 6)) == _match_expr)) { goto _case_end_4718064960; }
		_case_begin_4718064960:;
		{
			_1d1956852_FLAGS=jule::append(_1d1956852_FLAGS,jule::Slice<jule::Str>({jule::Str("darwin", 6)}));
		}
		goto _match_end_4718064032;
		_case_end_4718064960:;
		_match_end_4718064032:;
	}
	if (_1d0626eb3_is_unix(_1d1c2a4b6_OS)) {
		_1d1956852_FLAGS=jule::append(_1d1956852_FLAGS,jule::Slice<jule::Str>({jule::Str("unix", 4)}));
	}
}



inline void _1d1956852_set_arch_flags(void) {
	{
		auto _match_expr{ _1d1c2a4b6_ARCH };
		if (!((jule::Str("i386", 4)) == _match_expr)) { goto _case_end_4718069952; }
		_case_begin_4718069952:;
		{
			_1d1956852_FLAGS=jule::append(_1d1956852_FLAGS,jule::Slice<jule::Str>({jule::Str("i386", 4)}));
		}
		goto _match_end_4718083920;
		_case_end_4718069952:;
		if (!((jule::Str("amd64", 5)) == _match_expr)) { goto _case_end_4718070144; }
		_case_begin_4718070144:;
		{
			_1d1956852_FLAGS=jule::append(_1d1956852_FLAGS,jule::Slice<jule::Str>({jule::Str("amd64", 5)}));
		}
		goto _match_end_4718083920;
		_case_end_4718070144:;
		if (!((jule::Str("arm64", 5)) == _match_expr)) { goto _case_end_4718080608; }
		_case_begin_4718080608:;
		{
			_1d1956852_FLAGS=jule::append(_1d1956852_FLAGS,jule::Slice<jule::Str>({jule::Str("arm64", 5)}));
		}
		goto _match_end_4718083920;
		_case_end_4718080608:;
		_match_end_4718083920:;
	}
	if (_1d0626eb3_is_64bit(_1d1c2a4b6_ARCH)) {
		_1d1956852_FLAGS=jule::append(_1d1956852_FLAGS,jule::Slice<jule::Str>({jule::Str("64bit", 5)}));
	}
	if (_1d0626eb3_is_32bit(_1d1c2a4b6_ARCH)) {
		_1d1956852_FLAGS=jule::append(_1d1956852_FLAGS,jule::Slice<jule::Str>({jule::Str("32bit", 5)}));
	}
}



inline void _1d1956852_init_flags(void) {
	_1d1956852_set_os_flags();
	_1d1956852_set_arch_flags();
}



inline void _1d1c2a7b3_exit_err(jule::Str _2213_msg) {
	
	jule::outln(_2213_msg);
	_1d06d0d80_exit(1LL);
}



inline jule::Slice<jule::U8> _1d1c2a7b3_read_buff(jule::Str _3014_path) {
	jule::Slice<jule::U8> _3114_buffer;
	jule::Int _3122_err;
	std::tie(_3114_buffer,_3122_err) = _1d1ee0946_read_file(_3014_path);
	if (_3122_err != 0LLU) {
		_1d1c2a7b3_exit_err(jule::Str("error: file cannot read", 23));
	}
	return _3114_buffer;
}



inline _1d0557e9e_Log _1d1c2a7b3_flat_compiler_err(jule::Str _4022_text) {
	return _1d0557e9e_Log(1LLU,jule::Int(),jule::Int(),jule::Str(),_4022_text,jule::Str(),jule::Str());
}



inline std::tuple<jule::Slice<jule::Ref<_1d1e19221_DirEntry>>,jule::Str> _1d1c2a7b3_read_package_dirents(jule::Str _4825_path) {
	jule::Str _4851_err_msg = jule::Str();
	jule::Slice<jule::Ref<_1d1e19221_DirEntry>> _4914_dirents;
	jule::Int _4923_err;
	std::tie(_4914_dirents,_4923_err) = _1d2177c10_read_dir(_4825_path);
	if (_4923_err != 0LLU) {
		_4851_err_msg = jule::Str("connot read package directory: ", 31) + _4825_path;
		return std::make_tuple(nullptr,_4851_err_msg);
	}
	jule::Slice<jule::Ref<_1d1e19221_DirEntry>> _5413_passed_dirents = nullptr;
	{
		auto _range_expr = _4914_dirents;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d1e19221_DirEntry> _1d1c2a7b3_dirent = *_range_begin;
			_iter_begin_4718104576:;
			{
				jule::Str _5613_name = _1d1c2a7b3_dirent->_field_name;
				if (_1d1c2a7b3_dirent->_field_stat->_method_is_dir() || (!(_5613_name.has_suffix(jule::Str(".jule", 5))))) {
					goto _iter_next_4718104576;
				}
				_5413_passed_dirents=jule::append(_5413_passed_dirents,jule::Slice<jule::Ref<_1d1e19221_DirEntry>>({_1d1c2a7b3_dirent}));
			}
			_iter_next_4718104576:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d1c2a7b3_dirent = *_range_begin; goto _iter_begin_4718104576; }
			_iter_end_4718104576:;
		}
	}
	_4851_err_msg = jule::Str("", 0);
	return std::make_tuple(_5413_passed_dirents,_4851_err_msg);
}



inline jule::Str _1d1c2a7b3_concat_all_parts(jule::Slice<jule::Str> _7021_parts) {
	jule::Str _7113_s = jule::Str("", 0);
	{
		auto _range_expr = _7021_parts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _1d1c2a7b3_part = *_range_begin;
			_iter_begin_4718114928:;
			{
				_7113_s+=_1d1c2a7b3_part;
			}
			_iter_next_4718114928:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d1c2a7b3_part = *_range_begin; goto _iter_begin_4718114928; }
			_iter_end_4718114928:;
		}
	}
	return _7113_s;
}



inline jule::Bool _1d1c2a7b3_is_pass_build_directives(jule::Ref<_1d21640e7_Ast>& _7934_file) {
	{
		auto _range_expr = _7934_file->_field_top_directives;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d1e5192e_Directive> _1d1c2a7b3_td = *_range_begin;
			_iter_begin_4718116336:;
			{
				if (_1d1c2a7b3_td->_field_tag != jule::Str("build", 5)) {
					goto _iter_next_4718116336;
				}
				jule::Str _8513_expr = _1d1c2a7b3_concat_all_parts(_1d1c2a7b3_td->_field_args);
				jule::Bool _8613_result = _1d1996397_eval_directive_expr(_8513_expr);
				if ((!(_8613_result))) {
					return false;
				}
			}
			_iter_next_4718116336:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d1c2a7b3_td = *_range_begin; goto _iter_begin_4718116336; }
			_iter_end_4718116336:;
		}
	}
	return true;
}



inline void _1d1818549_push_passes(jule::Ref<_1b8e0c01d_Package>& _11321_p,jule::Slice<jule::Str>& _11345_passes) {
	{
		auto _range_expr = _11321_p->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b9390d86_SymbolTable> _1d1818549_f = *_range_begin;
			_iter_begin_4718185888:;
			{
				_julec_label_push:;
				{
					auto _range_expr = _1d1818549_f->_field_passes;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						_1b8b10cbb_Pass _1d1818549_pass = *_range_begin;
						_iter_begin_4718188176:;
						{
							if (_1d1818549_pass._field_text == jule::Str("", 0)) {
								goto _iter_next_4718188176;
							}
							{
								auto _range_expr = _11345_passes;
								if (_range_expr.begin() != _range_expr.end()) {
									auto _range_begin = _range_expr.begin();
									const auto _range_end = _range_expr.end();
									jule::Str _1d1818549_cpass = *_range_begin;
									_iter_begin_4718190928:;
									{
										if (_1d1818549_cpass == _1d1818549_pass._field_text) {
											goto _iter_next_4718188176;
										}
									}
									_iter_next_4718190928:;
									++_range_begin;
									if (_range_begin != _range_end) { _1d1818549_cpass = *_range_begin; goto _iter_begin_4718190928; }
									_iter_end_4718190928:;
								}
							}
							_11345_passes=jule::append(_11345_passes,jule::Slice<jule::Str>({_1d1818549_pass._field_text}));
						}
						_iter_next_4718188176:;
						++_range_begin;
						if (_range_begin != _range_end) { _1d1818549_pass = *_range_begin; goto _iter_begin_4718188176; }
						_iter_end_4718188176:;
					}
				}
			}
			_iter_next_4718185888:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d1818549_f = *_range_begin; goto _iter_begin_4718185888; }
			_iter_end_4718185888:;
		}
	}
}



inline jule::Slice<jule::Str> _1d1818549_get_all_unique_passes(jule::Ref<_1b8e0c01d_Package>& _13031_pkg,jule::Slice<jule::Ref<_1b8e0c01d_ImportInfo>> _13056_uses) {
	jule::Slice<jule::Str> _13113_passes = nullptr;
	_1d1818549_push_passes(_13031_pkg,_13113_passes);
	{
		auto _range_expr = _13056_uses;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b8e0c01d_ImportInfo> _1d1818549_u = *_range_begin;
			_iter_begin_4718197952:;
			{
				if ((!(_1d1818549_u->_field_cpp_linked))) {
					_1d1818549_push_passes(_1d1818549_u->_field_package,_13113_passes);
				}
			}
			_iter_next_4718197952:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d1818549_u = *_range_begin; goto _iter_begin_4718197952; }
			_iter_end_4718197952:;
		}
	}
	return _13113_passes;
}



inline jule::Bool _1d0616dd7_is_exist_0(jule::Slice<jule::Any> _3016_arr,jule::Ref<_1d21d97ee_FnIns> _3028_t) {
	{
		auto _range_expr = _3016_arr;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Any _1d0616dd7_ref = *_range_begin;
			_iter_begin_4718372336:;
			{
				{
					auto _match_expr{ _1d0616dd7_ref };
					if (!(_match_expr.type_is<jule::Ref<_1d21d97ee_FnIns>>())) { goto _case_end_4718374192; }
					_case_begin_4718374192:;
					{
						if ((_1d0616dd7_ref.operator jule::Ref<_1d21d97ee_FnIns>()).alloc == (_3028_t).alloc) {
							return true;
						}
					}
					goto _match_end_4718373760;
					_case_end_4718374192:;
					_match_end_4718373760:;
				}
			}
			_iter_next_4718372336:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d0616dd7_ref = *_range_begin; goto _iter_begin_4718372336; }
			_iter_end_4718372336:;
		}
	}
	return false;
}

inline jule::Bool _1d0616dd7_is_exist_1(jule::Slice<jule::Any> _3016_arr,jule::Ref<_1b919cb2c_Var> _3028_t) {
	{
		auto _range_expr = _3016_arr;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Any _1d0616dd7_ref = *_range_begin;
			_iter_begin_4718380528:;
			{
				{
					auto _match_expr{ _1d0616dd7_ref };
					if (!(_match_expr.type_is<jule::Ref<_1b919cb2c_Var>>())) { goto _case_end_4718382384; }
					_case_begin_4718382384:;
					{
						if ((_1d0616dd7_ref.operator jule::Ref<_1b919cb2c_Var>()).alloc == (_3028_t).alloc) {
							return true;
						}
					}
					goto _match_end_4718381952;
					_case_end_4718382384:;
					_match_end_4718381952:;
				}
			}
			_iter_next_4718380528:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d0616dd7_ref = *_range_begin; goto _iter_begin_4718380528; }
			_iter_end_4718380528:;
		}
	}
	return false;
}

inline jule::Bool _1d0616dd7_is_exist_2(jule::Slice<jule::Any> _3016_arr,jule::Ref<_1d21c0b59_StructIns> _3028_t) {
	{
		auto _range_expr = _3016_arr;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Any _1d0616dd7_ref = *_range_begin;
			_iter_begin_4718388784:;
			{
				{
					auto _match_expr{ _1d0616dd7_ref };
					if (!(_match_expr.type_is<jule::Ref<_1d21c0b59_StructIns>>())) { goto _case_end_4718390640; }
					_case_begin_4718390640:;
					{
						if ((_1d0616dd7_ref.operator jule::Ref<_1d21c0b59_StructIns>()).alloc == (_3028_t).alloc) {
							return true;
						}
					}
					goto _match_end_4718390208;
					_case_end_4718390640:;
					_match_end_4718390208:;
				}
			}
			_iter_next_4718388784:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d0616dd7_ref = *_range_begin; goto _iter_begin_4718388784; }
			_iter_end_4718388784:;
		}
	}
	return false;
}

inline jule::Bool _1d0616dd7_is_exist_3(jule::Slice<jule::Any> _3016_arr,jule::Ref<_1b8cd2894_Trait> _3028_t) {
	{
		auto _range_expr = _3016_arr;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Any _1d0616dd7_ref = *_range_begin;
			_iter_begin_4718396976:;
			{
				{
					auto _match_expr{ _1d0616dd7_ref };
					if (!(_match_expr.type_is<jule::Ref<_1b8cd2894_Trait>>())) { goto _case_end_4718398832; }
					_case_begin_4718398832:;
					{
						if ((_1d0616dd7_ref.operator jule::Ref<_1b8cd2894_Trait>()).alloc == (_3028_t).alloc) {
							return true;
						}
					}
					goto _match_end_4718398400;
					_case_end_4718398832:;
					_match_end_4718398400:;
				}
			}
			_iter_next_4718396976:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d0616dd7_ref = *_range_begin; goto _iter_begin_4718396976; }
			_iter_end_4718396976:;
		}
	}
	return false;
}



inline jule::Bool _1d0616dd7_is_exist_ref(jule::Slice<jule::Any> _4321_refs,jule::Any _4334_ref) {
	{
		auto _match_expr{ _4334_ref };
		if (!(_match_expr.type_is<jule::Ref<_1d21d97ee_FnIns>>())) { goto _case_end_4718364208; }
		_case_begin_4718364208:;
		{
			return _1d0616dd7_is_exist_0(_4321_refs,_4334_ref.operator jule::Ref<_1d21d97ee_FnIns>());
		}
		goto _match_end_4718363424;
		_case_end_4718364208:;
		if (!(_match_expr.type_is<jule::Ref<_1b919cb2c_Var>>())) { goto _case_end_4718364320; }
		_case_begin_4718364320:;
		{
			return _1d0616dd7_is_exist_1(_4321_refs,_4334_ref.operator jule::Ref<_1b919cb2c_Var>());
		}
		goto _match_end_4718363424;
		_case_end_4718364320:;
		if (!(_match_expr.type_is<jule::Ref<_1d21c0b59_StructIns>>())) { goto _case_end_4718364432; }
		_case_begin_4718364432:;
		{
			return _1d0616dd7_is_exist_2(_4321_refs,_4334_ref.operator jule::Ref<_1d21c0b59_StructIns>());
		}
		goto _match_end_4718363424;
		_case_end_4718364432:;
		if (!(_match_expr.type_is<jule::Ref<_1b8cd2894_Trait>>())) { goto _case_end_4718365504; }
		_case_begin_4718365504:;
		{
			return _1d0616dd7_is_exist_3(_4321_refs,_4334_ref.operator jule::Ref<_1b8cd2894_Trait>());
		}
		goto _match_end_4718363424;
		_case_end_4718365504:;
		_case_begin_4718363680:;
		{
			return false;
		}
		goto _match_end_4718363424;
		_case_end_4718363680:;
		_match_end_4718363424:;
	}
}



inline jule::Bool _1d0616dd7_is_dead(jule::Any _5416_ref) {
	jule::Bool _5428_dead = jule::Bool();
	if (_1d0616dd7_is_exist_ref(_1d0616dd7_deads,_5416_ref)) {
		_5428_dead = true;
		return _5428_dead;
	}
	{
		auto _match_expr{ _5416_ref };
		if (!(_match_expr.type_is<jule::Ref<_1d21d97ee_FnIns>>())) { goto _case_end_4718404256; }
		_case_begin_4718404256:;
		{
			if (_5416_ref.operator jule::Ref<_1d21d97ee_FnIns>()->_field_decl->_method_is_init()) {
				goto _match_end_4718389872;
			}
			goto _case_begin_4718377024;
		}
		goto _match_end_4718389872;
		_case_end_4718404256:;
		_case_begin_4718377024:;
		{
			if (_1d0616dd7_is_exist_ref(jule::Slice<jule::Any>({_1d0616dd7_current,_1d0616dd7_main_current}),_5416_ref)) {
				_5428_dead = true;
				return _5428_dead;
			}
			if (_1d0616dd7_is_exist_ref(_1d0616dd7_checking,_5416_ref)) {
				_5428_dead = true;
				return _5428_dead;
			}
		}
		goto _match_end_4718389872;
		_case_end_4718377024:;
		_match_end_4718389872:;
	}
	jule::Any _7513_old = _1d0616dd7_current;
	_1d0616dd7_current=_5416_ref;
	jule::I64 _779_len = _1d0616dd7_checking.len();
	_1d0616dd7_checking=jule::append(_1d0616dd7_checking,jule::Slice<jule::Any>({_5416_ref}));
	__JULE_DEFER({
		_1d0616dd7_current=_7513_old;
		_1d0616dd7_drop_ref(_1d0616dd7_checking,_779_len);
	});
	{
		auto _match_expr{ _5416_ref };
		if (!(_match_expr.type_is<jule::Ref<_1d21d97ee_FnIns>>())) { goto _case_end_4718410624; }
		_case_begin_4718410624:;
		{
			_5428_dead = _1d0616dd7_is_fn_dead(_5416_ref.operator jule::Ref<_1d21d97ee_FnIns>());
			return _5428_dead;
		}
		goto _match_end_4718408496;
		_case_end_4718410624:;
		if (!(_match_expr.type_is<jule::Ref<_1b919cb2c_Var>>())) { goto _case_end_4718410736; }
		_case_begin_4718410736:;
		{
			_5428_dead = _1d0616dd7_is_var_dead(_5416_ref.operator jule::Ref<_1b919cb2c_Var>());
			return _5428_dead;
		}
		goto _match_end_4718408496;
		_case_end_4718410736:;
		if (!(_match_expr.type_is<jule::Ref<_1d21c0b59_StructIns>>())) { goto _case_end_4718410848; }
		_case_begin_4718410848:;
		{
			_5428_dead = _1d0616dd7_is_struct_dead(_5416_ref.operator jule::Ref<_1d21c0b59_StructIns>());
			return _5428_dead;
		}
		goto _match_end_4718408496;
		_case_end_4718410848:;
		if (!(_match_expr.type_is<jule::Ref<_1b8cd2894_Trait>>())) { goto _case_end_4718408608; }
		_case_begin_4718408608:;
		{
			_5428_dead = _1d0616dd7_is_trait_dead(_5416_ref.operator jule::Ref<_1b8cd2894_Trait>());
			return _5428_dead;
		}
		goto _match_end_4718408496;
		_case_end_4718408608:;
		_case_begin_4718406144:;
		{
			_5428_dead = false;
			return _5428_dead;
		}
		goto _match_end_4718408496;
		_case_end_4718406144:;
		_match_end_4718408496:;
	}
}



inline void _1d0616dd7_drop_ref(jule::Slice<jule::Any>& _10618_refs,jule::Int _10631_pos) {
	_10618_refs=_10618_refs.slice(0LL,static_cast<jule::Int>(_10631_pos));
}



inline jule::Bool _1d0616dd7_is_all_references_are_dead_0(jule::Ref<_1b8b10cbb_ReferenceStack> _11438_references) {
	jule::Int _11513_i = 0LL;
	_iter_begin_4718431040:;
	if (!(_11513_i < _11438_references->_method_len())) { goto _iter_end_4718431040; }
	{
		jule::Any _11717_ref = _11438_references->_method_at(_11513_i);
		{
			auto _match_expr{ _1d0616dd7_current };
			if (!(_match_expr.type_is<jule::Ref<_1d21d97ee_FnIns>>())) { goto _case_end_4718433552; }
			_case_begin_4718433552:;
			{
				{
					auto _match_expr{ _11717_ref };
					if (!(_match_expr.type_is<jule::Ref<_1d21d97ee_FnIns>>())) { goto _case_end_4718436000; }
					_case_begin_4718436000:;
					{
						if ((_1d0616dd7_current.operator jule::Ref<_1d21d97ee_FnIns>()).alloc == (_11717_ref.operator jule::Ref<_1d21d97ee_FnIns>()).alloc) {
							goto _iter_next_4718431040;
						}
					}
					goto _match_end_4718433664;
					_case_end_4718436000:;
					_match_end_4718433664:;
				}
			}
			goto _match_end_4718432800;
			_case_end_4718433552:;
			_match_end_4718432800:;
		}
		{
			auto _match_expr{ _1d0616dd7_main_current };
			if (!(_match_expr.type_is<jule::Ref<_1d21d97ee_FnIns>>())) { goto _case_end_4718439024; }
			_case_begin_4718439024:;
			{
				{
					auto _match_expr{ _11717_ref };
					if (!(_match_expr.type_is<jule::Ref<_1d21d97ee_FnIns>>())) { goto _case_end_4718437152; }
					_case_begin_4718437152:;
					{
						if ((_1d0616dd7_main_current.operator jule::Ref<_1d21d97ee_FnIns>()).alloc == (_11717_ref.operator jule::Ref<_1d21d97ee_FnIns>()).alloc) {
							goto _iter_next_4718431040;
						}
					}
					goto _match_end_4718439136;
					_case_end_4718437152:;
					_match_end_4718439136:;
				}
			}
			goto _match_end_4718437696;
			_case_end_4718439024:;
			_match_end_4718437696:;
		}
		if ((!(_1d0616dd7_is_dead(_11717_ref)))) {
			return false;
		}
	}
	_iter_next_4718431040:;
	(_11513_i)++;
	goto _iter_begin_4718431040;
	_iter_end_4718431040:;
	return true;
}

inline jule::Bool _1d0616dd7_is_all_references_are_dead_1(jule::Ref<_1b8b10cbb_ReferenceStack> _11438_references) {
	jule::Int _11513_i = 0LL;
	_iter_begin_4718450208:;
	if (!(_11513_i < _11438_references->_method_len())) { goto _iter_end_4718450208; }
	{
		jule::Any _11717_ref = _11438_references->_method_at(_11513_i);
		{
			auto _match_expr{ _1d0616dd7_current };
			if (!(_match_expr.type_is<jule::Ref<_1b919cb2c_Var>>())) { goto _case_end_4718453360; }
			_case_begin_4718453360:;
			{
				{
					auto _match_expr{ _11717_ref };
					if (!(_match_expr.type_is<jule::Ref<_1b919cb2c_Var>>())) { goto _case_end_4718454992; }
					_case_begin_4718454992:;
					{
						if ((_1d0616dd7_current.operator jule::Ref<_1b919cb2c_Var>()).alloc == (_11717_ref.operator jule::Ref<_1b919cb2c_Var>()).alloc) {
							goto _iter_next_4718450208;
						}
					}
					goto _match_end_4718453552;
					_case_end_4718454992:;
					_match_end_4718453552:;
				}
			}
			goto _match_end_4718452784;
			_case_end_4718453360:;
			_match_end_4718452784:;
		}
		{
			auto _match_expr{ _1d0616dd7_main_current };
			if (!(_match_expr.type_is<jule::Ref<_1b919cb2c_Var>>())) { goto _case_end_4718458160; }
			_case_begin_4718458160:;
			{
				{
					auto _match_expr{ _11717_ref };
					if (!(_match_expr.type_is<jule::Ref<_1b919cb2c_Var>>())) { goto _case_end_4718454448; }
					_case_begin_4718454448:;
					{
						if ((_1d0616dd7_main_current.operator jule::Ref<_1b919cb2c_Var>()).alloc == (_11717_ref.operator jule::Ref<_1b919cb2c_Var>()).alloc) {
							goto _iter_next_4718450208;
						}
					}
					goto _match_end_4718458272;
					_case_end_4718454448:;
					_match_end_4718458272:;
				}
			}
			goto _match_end_4718456832;
			_case_end_4718458160:;
			_match_end_4718456832:;
		}
		if ((!(_1d0616dd7_is_dead(_11717_ref)))) {
			return false;
		}
	}
	_iter_next_4718450208:;
	(_11513_i)++;
	goto _iter_begin_4718450208;
	_iter_end_4718450208:;
	return true;
}

inline jule::Bool _1d0616dd7_is_all_references_are_dead_2(jule::Ref<_1b8b10cbb_ReferenceStack> _11438_references) {
	jule::Int _11513_i = 0LL;
	_iter_begin_4718485744:;
	if (!(_11513_i < _11438_references->_method_len())) { goto _iter_end_4718485744; }
	{
		jule::Any _11717_ref = _11438_references->_method_at(_11513_i);
		{
			auto _match_expr{ _1d0616dd7_current };
			if (!(_match_expr.type_is<jule::Ref<_1d21c0b59_StructIns>>())) { goto _case_end_4718488864; }
			_case_begin_4718488864:;
			{
				{
					auto _match_expr{ _11717_ref };
					if (!(_match_expr.type_is<jule::Ref<_1d21c0b59_StructIns>>())) { goto _case_end_4718490672; }
					_case_begin_4718490672:;
					{
						if ((_1d0616dd7_current.operator jule::Ref<_1d21c0b59_StructIns>()).alloc == (_11717_ref.operator jule::Ref<_1d21c0b59_StructIns>()).alloc) {
							goto _iter_next_4718485744;
						}
					}
					goto _match_end_4718489040;
					_case_end_4718490672:;
					_match_end_4718489040:;
				}
			}
			goto _match_end_4718488320;
			_case_end_4718488864:;
			_match_end_4718488320:;
		}
		{
			auto _match_expr{ _1d0616dd7_main_current };
			if (!(_match_expr.type_is<jule::Ref<_1d21c0b59_StructIns>>())) { goto _case_end_4718493696; }
			_case_begin_4718493696:;
			{
				{
					auto _match_expr{ _11717_ref };
					if (!(_match_expr.type_is<jule::Ref<_1d21c0b59_StructIns>>())) { goto _case_end_4718491824; }
					_case_begin_4718491824:;
					{
						if ((_1d0616dd7_main_current.operator jule::Ref<_1d21c0b59_StructIns>()).alloc == (_11717_ref.operator jule::Ref<_1d21c0b59_StructIns>()).alloc) {
							goto _iter_next_4718485744;
						}
					}
					goto _match_end_4718493808;
					_case_end_4718491824:;
					_match_end_4718493808:;
				}
			}
			goto _match_end_4718492368;
			_case_end_4718493696:;
			_match_end_4718492368:;
		}
		if ((!(_1d0616dd7_is_dead(_11717_ref)))) {
			return false;
		}
	}
	_iter_next_4718485744:;
	(_11513_i)++;
	goto _iter_begin_4718485744;
	_iter_end_4718485744:;
	return true;
}



inline jule::Bool _1d0616dd7_is_fn_dead(jule::Ref<_1d21d97ee_FnIns> _14319_f) {
	if (_14319_f->_field_decl->_field_cpp_linked) {
		return false;
	}
	if (_14319_f->_field_decl->_method_is_entry_point() || _14319_f->_field_decl->_method_is_init()) {
		return (!(_14319_f->_field_decl->_field_statically));
	}
	if (jule::real(_14319_f->_field_owner)) {
		if (_1d0616dd7_is_exist_ref(_1d0616dd7_checking,jule::Any(_14319_f->_field_owner))) {
			return true;
		}
		return _1d0616dd7_is_dead(jule::Any(_14319_f->_field_owner));
	}
	return _1d0616dd7_is_all_references_are_dead_0(_14319_f->_field_references);
}



inline jule::Bool _1d0616dd7_is_var_dead(jule::Ref<_1b919cb2c_Var> _16920_v) {
	if (_16920_v->_field_constant) {
		return true;
	}
	if (_16920_v->_field_cpp_linked) {
		return false;
	}
	return _1d0616dd7_is_all_references_are_dead_1(_16920_v->_field_references);
}



inline jule::Bool _1d0616dd7_kind_is_dead(jule::Ref<_1b951b088_TypeKind> _18121_k) {
	{
		if (!((jule::real(_18121_k->_method_ref())))) { goto _case_end_4718460320; }
		_case_begin_4718460320:;
		{
			return _1d0616dd7_kind_is_dead(_18121_k->_method_ref()->_field_elem);
		}
		goto _match_end_4718446064;
		_case_end_4718460320:;
		if (!((jule::real(_18121_k->_method_ptr())))) { goto _case_end_4718460432; }
		_case_begin_4718460432:;
		{
			return _1d0616dd7_kind_is_dead(_18121_k->_method_ptr()->_field_elem);
		}
		goto _match_end_4718446064;
		_case_end_4718460432:;
		if (!((jule::real(_18121_k->_method_slc())))) { goto _case_end_4718463664; }
		_case_begin_4718463664:;
		{
			return _1d0616dd7_kind_is_dead(_18121_k->_method_slc()->_field_elem);
		}
		goto _match_end_4718446064;
		_case_end_4718463664:;
		if (!((jule::real(_18121_k->_method_arr())))) { goto _case_end_4718463776; }
		_case_begin_4718463776:;
		{
			return _1d0616dd7_kind_is_dead(_18121_k->_method_arr()->_field_elem);
		}
		goto _match_end_4718446064;
		_case_end_4718463776:;
		if (!((jule::real(_18121_k->_method_trt())))) { goto _case_end_4718463888; }
		_case_begin_4718463888:;
		{
			jule::Ref<_1b8cd2894_Trait> _19617_t = _18121_k->_method_trt();
			if (_1d0616dd7_is_dead(jule::Any(_19617_t))) {
				return true;
			}
		}
		goto _match_end_4718446064;
		_case_end_4718463888:;
		if (!((jule::real(_18121_k->_method_strct())))) { goto _case_end_4718464000; }
		_case_begin_4718464000:;
		{
			jule::Ref<_1d21c0b59_StructIns> _20217_s = _18121_k->_method_strct();
			if (_1d0616dd7_is_dead(jule::Any(_20217_s))) {
				return true;
			}
		}
		goto _match_end_4718446064;
		_case_end_4718464000:;
		_match_end_4718446064:;
	}
	return false;
}



inline jule::Bool _1d0616dd7_is_any_generic_is_dead(jule::Slice<jule::Ref<_1b951b088_TypeKind>>& _21032_generics) {
	{
		auto _range_expr = _21032_generics;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b951b088_TypeKind> _1d0616dd7_g = *_range_begin;
			_iter_begin_4718477280:;
			{
				if (_1d0616dd7_kind_is_dead(_1d0616dd7_g)) {
					return true;
				}
			}
			_iter_next_4718477280:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d0616dd7_g = *_range_begin; goto _iter_begin_4718477280; }
			_iter_end_4718477280:;
		}
	}
	return false;
}



inline jule::Bool _1d0616dd7_is_struct_dead(jule::Ref<_1d21c0b59_StructIns> _21923_s) {
	return false;
	if (_21923_s->_field_decl->_field_cpp_linked) {
		return false;
	}
	return _1d0616dd7_is_all_references_are_dead_2(_21923_s->_field_references);
}



inline jule::Bool _1d0616dd7_is_trait_dead(jule::Ref<_1b8cd2894_Trait> _23622_t) {
	return false;
	{
		auto _range_expr = _23622_t->_field_implemented;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d21c0b59_Struct> _1d0616dd7_imp = *_range_begin;
			_iter_begin_4718490096:;
			{
				jule::Int _24117_i = 0LL;
				_iter_begin_4718500656:;
				if (!(_24117_i < _1d0616dd7_imp->_field_instances.len())) { goto _iter_end_4718500656; }
				{
					jule::Ref<_1d21c0b59_StructIns> _24321_ins = _1d0616dd7_imp->_field_instances[static_cast<jule::Int>(_24117_i)];
					if ((!(_1d0616dd7_is_struct_dead(_24321_ins)))) {
						return false;
					}
				}
				_iter_next_4718500656:;
				(_24117_i)++;
				goto _iter_begin_4718500656;
				_iter_end_4718500656:;
			}
			_iter_next_4718490096:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d0616dd7_imp = *_range_begin; goto _iter_begin_4718490096; }
			_iter_end_4718490096:;
		}
	}
	return true;
}



inline void _1d0616dd7_eliminate_dead_functions(jule::Slice<jule::Ref<_1d21d97ee_Fn>>& _25434_funcs) {
	jule::Int _25513_i = 0LL;
	_iter_begin_4718490320:;
	if (!(_25513_i < _25434_funcs.len())) { goto _iter_end_4718490320; }
	{
		jule::Ref<_1d21d97ee_Fn> _25717_f = _25434_funcs[static_cast<jule::Int>(_25513_i)];
		jule::Int _25817_j = 0LL;
		_iter_begin_4718509584:;
		if (!(_25817_j < _25717_f->_field_instances.len())) { goto _iter_end_4718509584; }
		{
			jule::Ref<_1d21d97ee_FnIns> _26021_ins = _25717_f->_field_instances[static_cast<jule::Int>(_25817_j)];
			_1d0616dd7_main_current=jule::Any(_26021_ins);
			if (_1d0616dd7_is_fn_dead(_26021_ins)) {
				_1d0616dd7_deads=jule::append(_1d0616dd7_deads,jule::Slice<jule::Any>({jule::Any(_26021_ins)}));
				_25717_f->_field_instances=jule::append(_25717_f->_field_instances.slice(0LL,static_cast<jule::Int>(_25817_j)),_25717_f->_field_instances.slice(static_cast<jule::Int>(_25817_j + 1LL)));
				goto _iter_next_4718509584;
			}
			_1d063d21b_eliminate_dead_code_of_scope(_26021_ins->_field_scope);
			(_25817_j)++;
		}
		_iter_next_4718509584:;
		goto _iter_begin_4718509584;
		_iter_end_4718509584:;
		if (_25717_f->_field_instances.len() == 0LL) {
			_25434_funcs=jule::append(_25434_funcs.slice(0LL,static_cast<jule::Int>(_25513_i)),_25434_funcs.slice(static_cast<jule::Int>(_25513_i + 1LL)));
			goto _iter_next_4718490320;
		}
		(_25513_i)++;
	}
	_iter_next_4718490320:;
	goto _iter_begin_4718490320;
	_iter_end_4718490320:;
}



inline void _1d0616dd7_eliminate_dead_globals(jule::Ref<_1b8e0c01d_Package>& _28032_pkg) {
	{
		auto _range_expr = _28032_pkg->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b9390d86_SymbolTable> _1d0616dd7_f = *_range_begin;
			_iter_begin_4718522304:;
			{
				jule::Int _28217_i = 0LL;
				_iter_begin_4718526048:;
				if (!(_28217_i < _1d0616dd7_f->_field_vars.len())) { goto _iter_end_4718526048; }
				{
					jule::Ref<_1b919cb2c_Var> _28421_v = _1d0616dd7_f->_field_vars[static_cast<jule::Int>(_28217_i)];
					_1d0616dd7_main_current=jule::Any(_28421_v);
					if (_1d0616dd7_is_var_dead(_28421_v)) {
						_1d0616dd7_deads=jule::append(_1d0616dd7_deads,jule::Slice<jule::Any>({jule::Any(_28421_v)}));
						_1d0616dd7_f->_field_vars=jule::append(_1d0616dd7_f->_field_vars.slice(0LL,static_cast<jule::Int>(_28217_i)),_1d0616dd7_f->_field_vars.slice(static_cast<jule::Int>(_28217_i + 1LL)));
					} else {
						(_28217_i)++;
					}
				}
				_iter_next_4718526048:;
				goto _iter_begin_4718526048;
				_iter_end_4718526048:;
			}
			_iter_next_4718522304:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d0616dd7_f = *_range_begin; goto _iter_begin_4718522304; }
			_iter_end_4718522304:;
		}
	}
}



inline void _1d0616dd7_eliminate_dead_functions_package(jule::Ref<_1b8e0c01d_Package>& _29642_pkg) {
	{
		auto _range_expr = _29642_pkg->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b9390d86_SymbolTable> _1d0616dd7_f = *_range_begin;
			_iter_begin_4718524944:;
			{
				_1d0616dd7_eliminate_dead_functions(_1d0616dd7_f->_field_funcs);
			}
			_iter_next_4718524944:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d0616dd7_f = *_range_begin; goto _iter_begin_4718524944; }
			_iter_end_4718524944:;
		}
	}
}



inline void _1d0616dd7_eliminate_dead_structs(jule::Ref<_1b8e0c01d_Package>& _30232_pkg) {
	{
		auto _range_expr = _30232_pkg->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b9390d86_SymbolTable> _1d0616dd7_f = *_range_begin;
			_iter_begin_4718527072:;
			{
				jule::Int _30417_i = 0LL;
				_iter_begin_4718539344:;
				if (!(_30417_i < _1d0616dd7_f->_field_structs.len())) { goto _iter_end_4718539344; }
				{
					jule::Ref<_1d21c0b59_Struct> _30621_s = _1d0616dd7_f->_field_structs[static_cast<jule::Int>(_30417_i)];
					jule::Int _30721_j = 0LL;
					_iter_begin_4718543296:;
					if (!(_30721_j < _30621_s->_field_instances.len())) { goto _iter_end_4718543296; }
					{
						jule::Ref<_1d21c0b59_StructIns> _30925_ins = _30621_s->_field_instances[static_cast<jule::Int>(_30721_j)];
						_1d0616dd7_main_current=jule::Any(_30925_ins);
						if (_1d0616dd7_is_struct_dead(_30925_ins)) {
							_1d0616dd7_deads=jule::append(_1d0616dd7_deads,jule::Slice<jule::Any>({jule::Any(_30925_ins)}));
							_30621_s->_field_instances=jule::append(_30621_s->_field_instances.slice(0LL,static_cast<jule::Int>(_30721_j)),_30621_s->_field_instances.slice(static_cast<jule::Int>(_30721_j + 1LL)));
							goto _iter_next_4718543296;
						}
						(_30721_j)++;
					}
					_iter_next_4718543296:;
					goto _iter_begin_4718543296;
					_iter_end_4718543296:;
					if (_30621_s->_field_instances.len() == 0LL) {
						_1d0616dd7_f->_field_structs=jule::append(_1d0616dd7_f->_field_structs.slice(0LL,static_cast<jule::Int>(_30417_i)),_1d0616dd7_f->_field_structs.slice(static_cast<jule::Int>(_30417_i + 1LL)));
						goto _iter_next_4718539344;
					}
					(_30417_i)++;
				}
				_iter_next_4718539344:;
				goto _iter_begin_4718539344;
				_iter_end_4718539344:;
			}
			_iter_next_4718527072:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d0616dd7_f = *_range_begin; goto _iter_begin_4718527072; }
			_iter_end_4718527072:;
		}
	}
}



inline void _1d0616dd7_eliminate_dead_traits(jule::Ref<_1b8e0c01d_Package>& _32831_pkg) {
	{
		auto _range_expr = _32831_pkg->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b9390d86_SymbolTable> _1d0616dd7_f = *_range_begin;
			_iter_begin_4718549424:;
			{
				jule::Int _33017_i = 0LL;
				_iter_begin_4718559936:;
				if (!(_33017_i < _1d0616dd7_f->_field_traits.len())) { goto _iter_end_4718559936; }
				{
					jule::Ref<_1b8cd2894_Trait> _33221_t = _1d0616dd7_f->_field_traits[static_cast<jule::Int>(_33017_i)];
					_1d0616dd7_main_current=jule::Any(_33221_t);
					if (_1d0616dd7_is_trait_dead(_33221_t)) {
						_1d0616dd7_deads=jule::append(_1d0616dd7_deads,jule::Slice<jule::Any>({jule::Any(_33221_t)}));
						_1d0616dd7_f->_field_traits=jule::append(_1d0616dd7_f->_field_traits.slice(0LL,static_cast<jule::Int>(_33017_i)),_1d0616dd7_f->_field_traits.slice(static_cast<jule::Int>(_33017_i + 1LL)));
					} else {
						(_33017_i)++;
					}
				}
				_iter_next_4718559936:;
				goto _iter_begin_4718559936;
				_iter_end_4718559936:;
			}
			_iter_next_4718549424:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d0616dd7_f = *_range_begin; goto _iter_begin_4718549424; }
			_iter_end_4718549424:;
		}
	}
}



inline void _1d0616dd7_catch_alive_init(jule::Ref<_1b8e0c01d_Package>& _34426_pkg) {
	
	
	jule::Ref<_1d21d97ee_Fn> _34713_f = _34426_pkg->_method_find_fn(jule::Str("init", 4),false);
	if ((!(jule::real(_34713_f)))) {
		return;
	}
	jule::I64 _3529_n = _1d0616dd7_deads.len();
	__JULE_DEFER({
		_1d0616dd7_deads=_1d0616dd7_deads.slice(0LL,static_cast<jule::Int>(_3529_n));
		_1d0616dd7_checking=nullptr;
		_1d0616dd7_current=jule::Any(nullptr);
	});
	jule::Ref<_1d21d97ee_FnIns> _36013_ins = _34713_f->_field_instances[0LL];
	jule::Int _36113_i = 0LL;
	_iter_begin_4718576976:;
	if (!(_36113_i < _36013_ins->_field_refers->_method_len())) { goto _iter_end_4718576976; }
	{
		if ((!(_1d0616dd7_is_dead(_36013_ins->_field_refers->_method_at(_36113_i))))) {
			_34713_f->_field_statically=true;
			return;
		}
	}
	_iter_next_4718576976:;
	(_36113_i)++;
	goto _iter_begin_4718576976;
	_iter_end_4718576976:;
}



inline void _1d0616dd7_eliminate_package(jule::Ref<_1b8e0c01d_Package>& _37027_pkg) {
	_1d0616dd7_deads=jule::Slice<jule::Any>::alloc(0LL,2000LL);
	_1d0616dd7_catch_alive_init(_37027_pkg);
	_1d0616dd7_eliminate_dead_globals(_37027_pkg);
	_1d0616dd7_eliminate_dead_functions_package(_37027_pkg);
}



inline void _1d0616dd7_eliminate(jule::Ref<_1d1818549_IR>& _38123_ir) {
	jule::I64 _38213_i = _38123_ir->_field_used.len() - 1LL;
	_iter_begin_4718586592:;
	if (!(_38213_i >= 0LL)) { goto _iter_end_4718586592; }
	{
		jule::Ref<_1b8e0c01d_ImportInfo> _38417_u = _38123_ir->_field_used[static_cast<jule::Int>(_38213_i)];
		if ((!(_38417_u->_field_cpp_linked))) {
			_1d0616dd7_eliminate_package(_38417_u->_field_package);
		}
	}
	_iter_next_4718586592:;
	(_38213_i)--;
	goto _iter_begin_4718586592;
	_iter_end_4718586592:;
	_1d0616dd7_eliminate_package(_38123_ir->_field_main);
	_1d0616dd7_deads=nullptr;
	_1d0616dd7_checking=nullptr;
	_1d0616dd7_current=jule::Any(nullptr);
}



inline void _1d063d21b_eliminate_dead_code_of_scope(jule::Ref<_1b8cd2c4b_Scope> _7337_s) {
	jule::Ref<_1d063d21b_ScopeDeadCode> _7413_sdc = jule::new_struct<_1d063d21b_ScopeDeadCode>(new( std::nothrow ) _1d063d21b_ScopeDeadCode(jule::Ref<_1d063d21b_ScopeDeadCode>(),_7337_s,(&(_7337_s->_field_stmts)),jule::Int()));
	{
		_7413_sdc->_method_optimize_stmts();
	}
}



inline jule::U64 _1ba3a81dd_unix(void) {
	return static_cast<jule::U64>(time(nullptr));
}



inline jule::U64 _1ba3a81dd_unix_year_to_seconds(jule::Uint _25725_y,jule::Bool& _25743_leap) {
	if ((_25725_y - 2LL) <= 136LL) {
		jule::Uint _25917_leaps = (_25725_y - 68LL) >> 2LL;
		_25743_leap=((_25725_y - 68LL) & 3LL) == 0LL;
		if (_25743_leap) {
			(_25917_leaps)--;
		}
		return static_cast<jule::Uint>((31536000LL * (_25725_y - 70LL)) + (86400LL * _25917_leaps));
	}
	jule::Uint _26713_leaps = 0LLU;
	jule::Uint _26813_centuries = 0LLU;
	jule::Uint _26913_cycles = jule::div(_25725_y - 100LL,400LL);
	jule::Uint _27013_rem = jule::mod(_25725_y - 100LL,400LL);
	if (_27013_rem < 0LL) {
		(_26913_cycles)--;
		_27013_rem+=400LL;
	}
	if (_27013_rem == 0LL) {
		_25743_leap=true;
		_26813_centuries=0LL;
		_26713_leaps=0LL;
	} else {
		if (_27013_rem >= 200LL) {
			if (_27013_rem >= 300LL) {
				_26813_centuries=3LL;
				_27013_rem-=300LL;
			} else {
				_26813_centuries=2LL;
				_27013_rem-=200LL;
			}
		} else {
			if (_27013_rem >= 100LL) {
				_26813_centuries=1LL;
				_27013_rem-=100LL;
			} else {
				_26813_centuries=0LL;
			}
		}
		if (_27013_rem == 0LL) {
			_25743_leap=false;
			_26713_leaps=0LL;
		} else {
			_26713_leaps=static_cast<jule::Uint>(jule::div(_27013_rem,4LL));
			_27013_rem = jule::mod(_27013_rem,4LL);
			_25743_leap=_27013_rem == 0LL;
		}
	}
	_26713_leaps+=static_cast<jule::Uint>((97LL * _26913_cycles) + (24LL * _26813_centuries));
	if (_25743_leap) {
		(_26713_leaps)++;
	}
	return static_cast<jule::Uint>(((((_25725_y - 100LL) * 31536000LL) + (_26713_leaps * 86400LL)) + 946684800LL) + 86400LL);
}



inline jule::U64 _1ba3a81dd_unix_month_to_seconds(jule::Uint _31426_m,jule::Bool _31439_leap) {
	jule::U64 _31613_t = 0LLU;
	{
		auto _match_expr{ _31426_m };
		if (!((1LL) == _match_expr)) { goto _case_end_4718699856; }
		_case_begin_4718699856:;
		{
			_31613_t=2678400LL;
		}
		goto _match_end_4718698784;
		_case_end_4718699856:;
		if (!((2LL) == _match_expr)) { goto _case_end_4718699968; }
		_case_begin_4718699968:;
		{
			_31613_t=5097600LL;
		}
		goto _match_end_4718698784;
		_case_end_4718699968:;
		if (!((3LL) == _match_expr)) { goto _case_end_4718700080; }
		_case_begin_4718700080:;
		{
			_31613_t=7776000LL;
		}
		goto _match_end_4718698784;
		_case_end_4718700080:;
		if (!((4LL) == _match_expr)) { goto _case_end_4718700208; }
		_case_begin_4718700208:;
		{
			_31613_t=10368000LL;
		}
		goto _match_end_4718698784;
		_case_end_4718700208:;
		if (!((5LL) == _match_expr)) { goto _case_end_4718700336; }
		_case_begin_4718700336:;
		{
			_31613_t=13046400LL;
		}
		goto _match_end_4718698784;
		_case_end_4718700336:;
		if (!((6LL) == _match_expr)) { goto _case_end_4718700464; }
		_case_begin_4718700464:;
		{
			_31613_t=15638400LL;
		}
		goto _match_end_4718698784;
		_case_end_4718700464:;
		if (!((7LL) == _match_expr)) { goto _case_end_4718700592; }
		_case_begin_4718700592:;
		{
			_31613_t=18316800LL;
		}
		goto _match_end_4718698784;
		_case_end_4718700592:;
		if (!((8LL) == _match_expr)) { goto _case_end_4718700720; }
		_case_begin_4718700720:;
		{
			_31613_t=20995200LL;
		}
		goto _match_end_4718698784;
		_case_end_4718700720:;
		if (!((9LL) == _match_expr)) { goto _case_end_4718700848; }
		_case_begin_4718700848:;
		{
			_31613_t=23587200LL;
		}
		goto _match_end_4718698784;
		_case_end_4718700848:;
		if (!((10LL) == _match_expr)) { goto _case_end_4718700976; }
		_case_begin_4718700976:;
		{
			_31613_t=26265600LL;
		}
		goto _match_end_4718698784;
		_case_end_4718700976:;
		if (!((11LL) == _match_expr)) { goto _case_end_4718701104; }
		_case_begin_4718701104:;
		{
			_31613_t=28857600LL;
		}
		goto _match_end_4718698784;
		_case_end_4718701104:;
		_match_end_4718698784:;
	}
	if (_31439_leap && (_31426_m >= 2LL)) {
		_31613_t+=86400LL;
	}
	return _31613_t;
}



inline jule::Str _1d173d293_gen_if(jule::Ref<_1b8cd2c4b_If> _12915_i) {
	jule::Str _13013_obj = jule::Str("if (", 4);
	_13013_obj+=_1d1921d28_gen_expr(_12915_i->_field_expr);
	_13013_obj+=jule::Str(") ", 2);
	_13013_obj+=_1d173d293_gen_scope(_12915_i->_field_scope);
	return _13013_obj;
}



inline jule::Str _1d173d293_gen_conditional(jule::Ref<_1b8cd2c4b_Conditional> _13724_c) {
	jule::Str _13813_obj = _1d173d293_gen_if(_13724_c->_field_elifs[0LL]);
	{
		auto _range_expr = _13724_c->_field_elifs.slice(1LL);
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b8cd2c4b_If> _1d173d293_elif = *_range_begin;
			_iter_begin_4719118272:;
			{
				_13813_obj+=jule::Str(" else ", 6);
				_13813_obj+=_1d173d293_gen_if(_1d173d293_elif);
			}
			_iter_next_4719118272:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d173d293_elif = *_range_begin; goto _iter_begin_4719118272; }
			_iter_end_4719118272:;
		}
	}
	if (jule::real(_13724_c->_field_default)) {
		_13813_obj+=jule::Str(" else ", 6);
		_13813_obj+=_1d173d293_gen_scope(_13724_c->_field_default->_field_scope);
	}
	return _13813_obj;
}



inline jule::Str _1d173d293_gen_inf_iter(jule::Ref<_1b8cd2c4b_InfIter> _15321_it) {
	jule::Str _1549_begin = _1ba1de70b_iter_begin_label_ident(((jule::Uintptr)((_15321_it).alloc)));
	jule::Str _1559_end = _1ba1de70b_iter_end_label_ident(((jule::Uintptr)((_15321_it).alloc)));
	jule::Str _1569_next = _1ba1de70b_iter_next_label_ident(((jule::Uintptr)((_15321_it).alloc)));
	jule::Str _1579_indent = _1ba263eab_indent();
	jule::Str _15913_obj = _1549_begin + jule::Str(":;\n", 3);
	_15913_obj+=_1579_indent;
	_15913_obj+=_1d173d293_gen_scope(_15321_it->_field_scope);
	_15913_obj+=jule::Str("\n", 1);
	_15913_obj+=_1579_indent;
	_15913_obj+=_1569_next + jule::Str(":;\n", 3);
	_15913_obj+=_1579_indent;
	_15913_obj+=(jule::Str("goto ", 5) + _1549_begin) + jule::Str(";\n", 2);
	_15913_obj+=_1579_indent;
	_15913_obj+=_1559_end + jule::Str(":;", 2);
	return _15913_obj;
}



inline jule::Str _1d173d293_gen_while_iter(jule::Ref<_1b8cd2c4b_WhileIter> _17323_it) {
	jule::Str _1749_begin = _1ba1de70b_iter_begin_label_ident(((jule::Uintptr)((_17323_it).alloc)));
	jule::Str _1759_end = _1ba1de70b_iter_end_label_ident(((jule::Uintptr)((_17323_it).alloc)));
	jule::Str _1769_next = _1ba1de70b_iter_next_label_ident(((jule::Uintptr)((_17323_it).alloc)));
	jule::Str _1779_indent = _1ba263eab_indent();
	jule::Str _17913_obj = _1749_begin + jule::Str(":;\n", 3);
	_17913_obj+=_1779_indent;
	if (_17323_it->_field_expr != nullptr) {
		_17913_obj+=jule::Str("if (!(", 6);
		_17913_obj+=_1d1921d28_gen_expr(_17323_it->_field_expr);
		_17913_obj+=jule::Str(")) { goto ", 10);
		_17913_obj+=_1759_end;
		_17913_obj+=jule::Str("; }\n", 4);
		_17913_obj+=_1779_indent;
	}
	_17913_obj+=_1d173d293_gen_scope(_17323_it->_field_scope);
	_17913_obj+=jule::Str("\n", 1);
	_17913_obj+=_1779_indent;
	_17913_obj+=_1769_next + jule::Str(":;\n", 3);
	_17913_obj+=_1779_indent;
	if (_17323_it->_field_next != nullptr) {
		_17913_obj+=_1d173d293_gen_st(_17323_it->_field_next);
		_17913_obj+=jule::Str("\n", 1);
		_17913_obj+=_1779_indent;
	}
	_17913_obj+=(jule::Str("goto ", 5) + _1749_begin) + jule::Str(";\n", 2);
	_17913_obj+=_1779_indent;
	_17913_obj+=_1759_end + jule::Str(":;", 2);
	return _17913_obj;
}



inline jule::Trait<_1d173d293_RangeSetter> _1d173d293_get_range_setter(jule::Ref<_1b8cd2c4b_RangeIter> _20625_it) {
	{
		if (!((jule::real(_20625_it->_field_expr->_field_kind->_method_slc())))) { goto _case_end_4719153024; }
		_case_begin_4719153024:;
		{
			return jule::new_struct<_1d173d293_IndexRangeSetter>(new( std::nothrow ) _1d173d293_IndexRangeSetter());
		}
		goto _match_end_4719145856;
		_case_end_4719153024:;
		if (!((jule::real(_20625_it->_field_expr->_field_kind->_method_arr())))) { goto _case_end_4719153200; }
		_case_begin_4719153200:;
		{
			return jule::new_struct<_1d173d293_IndexRangeSetter>(new( std::nothrow ) _1d173d293_IndexRangeSetter());
		}
		goto _match_end_4719145856;
		_case_end_4719153200:;
		if (!((jule::real(_20625_it->_field_expr->_field_kind->_method_map())))) { goto _case_end_4719152816; }
		_case_begin_4719152816:;
		{
			return jule::new_struct<_1d173d293_MapRangeSetter>(new( std::nothrow ) _1d173d293_MapRangeSetter());
		}
		goto _match_end_4719145856;
		_case_end_4719152816:;
		_case_begin_4719149520:;
		{
			return jule::new_struct<_1d173d293_IndexRangeSetter>(new( std::nothrow ) _1d173d293_IndexRangeSetter());
		}
		goto _match_end_4719145856;
		_case_end_4719149520:;
		_match_end_4719145856:;
	}
}



inline jule::Str _1d173d293_gen_range_iter(jule::Ref<_1b8cd2c4b_RangeIter> _21523_it) {
	_1ba263eab_add_indent();
	jule::Str _2189_begin = _1ba1de70b_iter_begin_label_ident(((jule::Uintptr)((_21523_it).alloc)));
	jule::Str _2199_end = _1ba1de70b_iter_end_label_ident(((jule::Uintptr)((_21523_it).alloc)));
	jule::Str _2209_next = _1ba1de70b_iter_next_label_ident(((jule::Uintptr)((_21523_it).alloc)));
	jule::Str _22113__indent = _1ba263eab_indent();
	jule::Trait<_1d173d293_RangeSetter> _2229_setter = _1d173d293_get_range_setter(_21523_it);
	jule::Str _22413_obj = jule::Str("{\n", 2);
	_22413_obj+=_22113__indent;
	if (_21523_it->_field_expr->_field_lvalue && _1d1d36270_is_opt_enabled(jule::Str("--opt-copy", 10))) {
		_22413_obj+=jule::Str("auto &_range_expr = ", 20);
	} else {
		_22413_obj+=jule::Str("auto _range_expr = ", 19);
	}
	_22413_obj+=_1d1921d28_gen_expr(_21523_it->_field_expr->_field_model) + jule::Str(";\n", 2);
	_22413_obj+=_22113__indent;
	_22413_obj+=jule::Str("if (_range_expr.begin() != _range_expr.end()) {\n", 48);
	_1ba263eab_add_indent();
	_22113__indent=_1ba263eab_indent();
	_22413_obj+=_22113__indent;
	_22413_obj+=jule::Str("auto _range_begin = _range_expr.begin();\n", 41);
	_22413_obj+=_22113__indent;
	_22413_obj+=jule::Str("const auto _range_end = _range_expr.end();\n", 43);
	_22413_obj+=_22113__indent;
	_22413_obj+=_2229_setter.get()._method_setup_vars(_21523_it->_field_key_a,_21523_it->_field_key_b);
	_22413_obj+=_2189_begin + jule::Str(":;\n", 3);
	_22413_obj+=_22113__indent;
	_22413_obj+=_1d173d293_gen_scope(_21523_it->_field_scope);
	_22413_obj+=jule::Str("\n", 1);
	_22413_obj+=_22113__indent;
	_22413_obj+=_2209_next + jule::Str(":;\n", 3);
	_22413_obj+=_22113__indent;
	_22413_obj+=_2229_setter.get()._method_next_steps(_21523_it->_field_key_a,_21523_it->_field_key_b,_2189_begin);
	_22413_obj+=_22113__indent;
	_22413_obj+=_2199_end + jule::Str(":;\n", 3);
	_1ba263eab_done_indent();
	_22113__indent=_1ba263eab_indent();
	_22413_obj+=_22113__indent;
	_22413_obj+=jule::Str("}\n", 2);
	_1ba263eab_done_indent();
	_22113__indent=_1ba263eab_indent();
	_22413_obj+=_22113__indent;
	_22413_obj+=jule::Str("}", 1);
	return _22413_obj;
}



inline jule::Str _1d173d293_gen_cont(jule::Ref<_1b8cd2c4b_ContSt> _27013_c) {
	return (jule::Str("goto ", 5) + _1ba1de70b_iter_next_label_ident(_27013_c->_field_it)) + jule::Str(";", 1);
}



inline jule::Str _1d173d293_gen_label(jule::Ref<_1b8cd2c4b_Label> _27414_l) {
	return _1ba1de70b_label_ident(_27414_l->_field_ident) + jule::Str(":;", 2);
}



inline jule::Str _1d173d293_gen_goto(jule::Ref<_1b8cd2c4b_GotoSt> _27813_gt) {
	return (jule::Str("goto ", 5) + _1ba1de70b_label_ident(_27813_gt->_field_ident)) + jule::Str(";", 1);
}



inline jule::Str _1d173d293_gen_postfix(jule::Ref<_1b8cd2c4b_Postfix> _28220_p) {
	return (((jule::Str("(", 1) + _1d1921d28_gen_expr(_28220_p->_field_expr)) + jule::Str(")", 1)) + _28220_p->_field_op) + jule::Str(";", 1);
}



inline jule::Str _1d173d293_gen_div_by_zero_assign(jule::Ref<_1b8cd2c4b_Assign> _28631_a) {
	jule::Str _28713_obj = _1d1921d28_gen_expr(_28631_a->_field_l);
	_28713_obj+=jule::Str(" = ", 3);
	_28713_obj+=_1d1921d28_gen_div_by_zero_binop_expr_model(_28631_a->_field_op.slice(0LL,1LL),_28631_a->_field_l,_28631_a->_field_r);
	_28713_obj+=jule::Str(";", 1);
	return _28713_obj;
}



inline jule::Str _1d173d293_gen_assign(jule::Ref<_1b8cd2c4b_Assign> _29419_a) {
	{
		auto _match_expr{ _29419_a->_field_op };
		if (!((jule::Str("/=", 2)) == _match_expr || (jule::Str("%=", 2)) == _match_expr)) { goto _case_end_4719196752; }
		_case_begin_4719196752:;
		{
			return _1d173d293_gen_div_by_zero_assign(_29419_a);
		}
		goto _match_end_4719195520;
		_case_end_4719196752:;
		_match_end_4719195520:;
	}
	jule::Str _30113_obj = _1d1921d28_gen_expr(_29419_a->_field_l);
	_30113_obj+=_29419_a->_field_op;
	if (_1d1d36270_is_opt_enabled(jule::Str("--opt-append", 12))) {
		{
			auto _match_expr{ _29419_a->_field_r };
			if (!(_match_expr.type_is<jule::Ref<_1b8dbae99_BuiltinAppendCallExprModel>>())) { goto _case_end_4719201744; }
			_case_begin_4719201744:;
			{
				jule::Ref<_1b8dbae99_BuiltinAppendCallExprModel> _30621_model = _29419_a->_field_r.operator jule::Ref<_1b8dbae99_BuiltinAppendCallExprModel>();
				jule::Str _30718_expr;
				jule::Bool _30724_optimized;
				std::tie(_30718_expr,_30724_optimized) = _1d1921d28_gen_builtin_append_call_expr_model_assign(_29419_a->_field_l,_30621_model);
				if (_30724_optimized) {
					return _30718_expr;
				}
				_30113_obj+=_30718_expr;
			}
			goto _match_end_4719199904;
			_case_end_4719201744:;
			_case_begin_4719200960:;
			{
				_30113_obj+=_1d1921d28_gen_expr(_29419_a->_field_r);
			}
			goto _match_end_4719199904;
			_case_end_4719200960:;
			_match_end_4719199904:;
		}
	} else {
		_30113_obj+=_1d1921d28_gen_expr(_29419_a->_field_r);
	}
	_30113_obj+=jule::Str(";", 1);
	return _30113_obj;
}



inline jule::Str _1d173d293_gen_multi_assign(jule::Ref<_1b8cd2c4b_MultiAssign> _32325_a) {
	jule::Str _32413_obj = jule::Str("std::tie(", 9);
	{
		auto _range_expr = _32325_a->_field_l;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Any _1d173d293_l = *_range_begin;
			_iter_begin_4719209872:;
			{
				if (_1d173d293_l == nullptr) {
					_32413_obj+=jule::Str("std::ignore,", 12);
				} else {
					_32413_obj+=_1d1921d28_gen_expr(_1d173d293_l) + jule::Str(",", 1);
				}
			}
			_iter_next_4719209872:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d173d293_l = *_range_begin; goto _iter_begin_4719209872; }
			_iter_end_4719209872:;
		}
	}
	_32413_obj=_32413_obj.slice(0LL,static_cast<jule::Int>(_32413_obj.len() - 1LL));
	_32413_obj+=jule::Str(") = ", 4);
	_32413_obj+=_1d1921d28_gen_expr(_32325_a->_field_r);
	_32413_obj+=jule::Str(";", 1);
	return _32413_obj;
}



inline jule::Str _1d173d293_gen_case(jule::Ref<_1b8cd2c4b_Match> _34117_m,jule::Ref<_1b8cd2c4b_Case> _34132_c) {
	
	jule::Str _3449_end = _1ba1de70b_case_end_label_ident(((jule::Uintptr)((_34132_c).alloc)));
	jule::Str _34513_obj = jule::Str("", 0);
	if (_34132_c->_field_exprs.len() > 0LL) {
		_34513_obj+=jule::Str("if (!(", 6);
		{
			auto _range_expr = _34132_c->_field_exprs;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Int _1d173d293_i = 0;
				jule::Any _1d173d293_expr = *_range_begin;
				_iter_begin_4719222320:;
				{
					{
						if (!(((!(_34117_m->_field_type_match))))) { goto _case_end_4719225504; }
						_case_begin_4719225504:;
						{
							_34513_obj+=jule::Str("(", 1);
							_34513_obj+=_1d1921d28_gen_expr(_1d173d293_expr);
							_34513_obj+=jule::Str(")", 1);
							if (_34117_m->_field_expr->_method_is_const()) {
								if ((!(_34117_m->_field_expr->_field_constant->_method_is_bool())) || (!(_34117_m->_field_expr->_field_constant->_method_read_bool()))) {
									_34513_obj+=jule::Str(" == ", 4);
									_34513_obj+=_1d1921d28_gen_expr_model(_34117_m->_field_expr->_field_model);
								}
							} else {
								_34513_obj+=jule::Str(" == ", 4);
								_34513_obj+=jule::Str("_match_expr", 11);
							}
						}
						goto _match_end_4719224496;
						_case_end_4719225504:;
						_case_begin_4719224672:;
						{
							_34513_obj+=jule::Str("_match_expr", 11);
							_34513_obj+=(jule::Str(".type_is<", 9) + _1d1921d28_gen_expr(_1d173d293_expr)) + jule::Str(">()", 3);
						}
						goto _match_end_4719224496;
						_case_end_4719224672:;
						_match_end_4719224496:;
					}
					if ((_1d173d293_i + 1LL) < _34132_c->_field_exprs.len()) {
						_34513_obj+=jule::Str(" || ", 4);
					}
				}
				_iter_next_4719222320:;
				++_range_begin;
				if (_range_begin != _range_end) { ++_1d173d293_i; _1d173d293_expr = *_range_begin; goto _iter_begin_4719222320; }
				_iter_end_4719222320:;
			}
		}
		_34513_obj+=jule::Str(")) { goto ", 10);
		_34513_obj+=_3449_end + jule::Str("; }\n", 4);
	}
	if (_34132_c->_field_scope->_field_stmts.len() > 0LL) {
		_34513_obj+=_1ba263eab_indent();
		_34513_obj+=_1ba1de70b_case_begin_label_ident(((jule::Uintptr)((_34132_c).alloc))) + jule::Str(":;\n", 3);
		_34513_obj+=_1ba263eab_indent();
		_34513_obj+=_1d173d293_gen_scope(_34132_c->_field_scope);
		_34513_obj+=jule::Str("\n", 1);
	}
	_34513_obj+=_1ba263eab_indent();
	_34513_obj+=jule::Str("goto ", 5);
	_34513_obj+=_1ba1de70b_match_end_label_ident(((jule::Uintptr)((_34117_m).alloc))) + jule::Str(";", 1);
	_34513_obj+=jule::Str("\n", 1);
	_34513_obj+=_1ba263eab_indent();
	_34513_obj+=_3449_end + jule::Str(":;", 2);
	return _34513_obj;
}



inline jule::Str _1d173d293_gen_match(jule::Ref<_1b8cd2c4b_Match> _39618_m) {
	jule::Str _39713_obj = jule::Str("{\n", 2);
	_1ba263eab_add_indent();
	_39713_obj+=_1ba263eab_indent();
	if ((!(_39618_m->_field_expr->_method_is_const()))) {
		if (_39618_m->_field_expr->_field_lvalue && _1d1d36270_is_opt_enabled(jule::Str("--opt-copy", 10))) {
			_39713_obj+=jule::Str("auto &_match_expr{ ", 19);
		} else {
			_39713_obj+=jule::Str("auto _match_expr{ ", 18);
		}
		_39713_obj+=_1d1921d28_gen_expr(_39618_m->_field_expr->_field_model);
		_39713_obj+=jule::Str(" };\n", 4);
		_39713_obj+=_1ba263eab_indent();
	}
	if (_39618_m->_field_cases.len() > 0LL) {
		_39713_obj+=_1d173d293_gen_case(_39618_m,_39618_m->_field_cases[0LL]);
		{
			auto _range_expr = _39618_m->_field_cases.slice(1LL);
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_1b8cd2c4b_Case> _1d173d293_c = *_range_begin;
				_iter_begin_4719251824:;
				{
					_39713_obj+=jule::Str("\n", 1);
					_39713_obj+=_1ba263eab_indent();
					_39713_obj+=_1d173d293_gen_case(_39618_m,_1d173d293_c);
				}
				_iter_next_4719251824:;
				++_range_begin;
				if (_range_begin != _range_end) { _1d173d293_c = *_range_begin; goto _iter_begin_4719251824; }
				_iter_end_4719251824:;
			}
		}
	}
	if (jule::real(_39618_m->_field_default)) {
		_39713_obj+=jule::Str("\n", 1);
		_39713_obj+=_1d173d293_gen_case(_39618_m,_39618_m->_field_default);
	}
	_39713_obj+=jule::Str("\n", 1);
	_39713_obj+=_1ba263eab_indent();
	_39713_obj+=_1ba1de70b_match_end_label_ident(((jule::Uintptr)((_39618_m).alloc))) + jule::Str(":;", 2);
	_39713_obj+=jule::Str("\n", 1);
	_1ba263eab_done_indent();
	_39713_obj+=_1ba263eab_indent();
	_39713_obj+=jule::Str("}", 1);
	return _39713_obj;
}



inline jule::Str _1d173d293_gen_fall_st(jule::Ref<_1b8cd2c4b_FallSt> _44216_f) {
	return (jule::Str("goto ", 5) + _1ba1de70b_case_begin_label_ident(_44216_f->_field_dest_case)) + jule::Str(";", 1);
}



inline jule::Str _1d173d293_gen_break_st(jule::Ref<_1b8cd2c4b_BreakSt> _44617_b) {
	jule::Str _44713_obj = jule::Str("goto ", 5);
	if (_44617_b->_field_it != 0LL) {
		_44713_obj+=_1ba1de70b_iter_end_label_ident(_44617_b->_field_it);
	} else {
		_44713_obj+=_1ba1de70b_match_end_label_ident(_44617_b->_field_mtch);
	}
	_44713_obj+=jule::Str(";", 1);
	return _44713_obj;
}



inline jule::Str _1d173d293_gen_ret_vars(jule::Ref<_1b8cd2c4b_RetSt> _45821_r) {
	jule::Str _45913_obj = jule::Str("", 0);
	{
		auto _range_expr = _45821_r->_field_vars;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b919cb2c_Var> _1d173d293_v = *_range_begin;
			_iter_begin_4719266896:;
			{
				if (_1d1da4277_is_ignore_ident(_1d173d293_v->_field_ident)) {
					_45913_obj+=_1d1921d28_get_init_expr(_1d173d293_v->_field_kind->_field_kind);
				} else {
					_45913_obj+=_1ba1de70b_var_out_ident(_1d173d293_v);
				}
				_45913_obj+=jule::Str(",", 1);
			}
			_iter_next_4719266896:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d173d293_v = *_range_begin; goto _iter_begin_4719266896; }
			_iter_end_4719266896:;
		}
	}
	_45913_obj=_45913_obj.slice(0LL,static_cast<jule::Int>(_45913_obj.len() - 1LL));
	if (_45821_r->_field_vars.len() > 1LL) {
		_45913_obj=(jule::Str("return std::make_tuple(", 23) + _45913_obj) + jule::Str(")", 1);
	} else {
		_45913_obj=jule::Str("return ", 7) + _45913_obj;
	}
	_45913_obj+=jule::Str(";", 1);
	return _45913_obj;
}



inline jule::Str _1d173d293_gen_ret_expr_tuple(jule::Ref<_1b8cd2c4b_RetSt> _48227_r) {
	{
		auto _match_expr{ _48227_r->_field_expr };
		if (!(_match_expr.type_is<jule::Ref<_1b8dbae99_FnCallExprModel>>())) { goto _case_end_4719275632; }
		_case_begin_4719275632:;
		{
			return (jule::Str("return ", 7) + _1d1921d28_gen_expr_model(_48227_r->_field_expr)) + jule::Str(";", 1);
		}
		goto _match_end_4719272928;
		_case_end_4719275632:;
		_match_end_4719272928:;
	}
	jule::Slice<jule::Ref<_1b9523799_Data>> _48813_datas = _48227_r->_field_expr.operator jule::Ref<_1b8dbae99_TupleExprModel>()->_field_datas;
	jule::Str _48913_obj = jule::Str("", 0);
	{
		auto _range_expr = _48227_r->_field_vars;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1d173d293_i = 0;
			jule::Ref<_1b919cb2c_Var> _1d173d293_v = *_range_begin;
			_iter_begin_4719280592:;
			{
				if ((!(_1d1da4277_is_ignore_ident(_1d173d293_v->_field_ident)))) {
					jule::Str _49317_ident = _1ba1de70b_var_out_ident(_1d173d293_v);
					_48913_obj+=((_49317_ident + jule::Str(" = ", 3)) + _1d1921d28_gen_expr(_48813_datas[static_cast<jule::Int>(_1d173d293_i)]->_field_model)) + jule::Str(";\n", 2);
					_48913_obj+=_1ba263eab_indent();
				}
			}
			_iter_next_4719280592:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1d173d293_i; _1d173d293_v = *_range_begin; goto _iter_begin_4719280592; }
			_iter_end_4719280592:;
		}
	}
	_48913_obj+=jule::Str("return std::make_tuple(", 23);
	{
		auto _range_expr = _48813_datas;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1d173d293_i = 0;
			jule::Ref<_1b9523799_Data> _1d173d293_d = *_range_begin;
			_iter_begin_4719282944:;
			{
				jule::Ref<_1b919cb2c_Var> _50117_v = _48227_r->_field_vars[static_cast<jule::Int>(_1d173d293_i)];
				if (_1d1da4277_is_ignore_ident(_50117_v->_field_ident)) {
					_48913_obj+=_1d1921d28_gen_expr(_1d173d293_d->_field_model);
				} else {
					_48913_obj+=_1ba1de70b_var_out_ident(_50117_v);
				}
				_48913_obj+=jule::Str(",", 1);
			}
			_iter_next_4719282944:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1d173d293_i; _1d173d293_d = *_range_begin; goto _iter_begin_4719282944; }
			_iter_end_4719282944:;
		}
	}
	_48913_obj=_48913_obj.slice(0LL,static_cast<jule::Int>(_48913_obj.len() - 1LL));
	_48913_obj+=jule::Str(");", 2);
	return _48913_obj;
}



inline jule::Str _1d173d293_gen_ret_expr(jule::Ref<_1b8cd2c4b_RetSt> _51621_r) {
	if (_51621_r->_field_vars.len() == 0LL) {
		return (jule::Str("return ", 7) + _1d1921d28_gen_expr(_51621_r->_field_expr)) + jule::Str(";", 1);
	}
	if (_51621_r->_field_vars.len() > 1LL) {
		return _1d173d293_gen_ret_expr_tuple(_51621_r);
	}
	if ((!(_1d1da4277_is_ignore_ident(_51621_r->_field_vars[0LL]->_field_ident)))) {
		jule::Str _52613_ident = _1ba1de70b_var_out_ident(_51621_r->_field_vars[0LL]);
		jule::Str _52717_obj = ((_52613_ident + jule::Str(" = ", 3)) + _1d1921d28_gen_expr(_51621_r->_field_expr)) + jule::Str(";\n", 2);
		_52717_obj+=_1ba263eab_indent();
		_52717_obj+=(jule::Str("return ", 7) + _52613_ident) + jule::Str(";", 1);
		return _52717_obj;
	}
	return (jule::Str("return ", 7) + _1d1921d28_gen_expr(_51621_r->_field_expr)) + jule::Str(";", 1);
}



inline jule::Str _1d173d293_gen_ret_st(jule::Ref<_1b8cd2c4b_RetSt> _53619_r) {
	if ((_53619_r->_field_expr == nullptr) && (_53619_r->_field_vars.len() == 0LL)) {
		return jule::Str("return;", 7);
	}
	if (_53619_r->_field_expr == nullptr) {
		return _1d173d293_gen_ret_vars(_53619_r);
	}
	return _1d173d293_gen_ret_expr(_53619_r);
}



inline jule::Str _1d173d293_gen_ret_st_with_defaults(jule::Ref<_1b951b088_TypeKind> _54833_result) {
	jule::Str _54913_obj = jule::Str("return ", 7);
	if (jule::real(_54833_result->_method_tup())) {
		_54913_obj+=jule::Str("std::make_tuple(", 16);
		{
			auto _range_expr = _54833_result->_method_tup()->_field_types;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_1b951b088_TypeKind> _1d173d293_t = *_range_begin;
				_iter_begin_4719315440:;
				{
					_54913_obj+=_1d1921d28_get_init_expr(_1d173d293_t);
					_54913_obj+=jule::Str(",", 1);
				}
				_iter_next_4719315440:;
				++_range_begin;
				if (_range_begin != _range_end) { _1d173d293_t = *_range_begin; goto _iter_begin_4719315440; }
				_iter_end_4719315440:;
			}
		}
		_54913_obj=_54913_obj.slice(0LL,static_cast<jule::Int>(_54913_obj.len() - 1LL));
		_54913_obj+=jule::Str(")", 1);
	} else {
		_54913_obj+=_1d1921d28_get_init_expr(_54833_result);
	}
	_54913_obj+=jule::Str(";", 1);
	return _54913_obj;
}



inline jule::Str _1d173d293_gen_recover(jule::Ref<_1b8cd2c4b_Recover> _56520_r) {
	jule::Str _56613_obj = jule::Str("try ", 4);
	_56613_obj+=_1d173d293_gen_scope(_56520_r->_field_scope);
	_56613_obj+=jule::Str(" catch(jule::Exception e) ", 26);
	if (_56520_r->_field_handler->_method_is_anon()) {
		_1ba263eab_add_indent();
		_56613_obj+=jule::Str("{\n", 2);
		_56613_obj+=_1ba263eab_indent();
		_56613_obj+=_1d1921d28_gen_expr(_56520_r->_field_handler_expr);
		_56613_obj+=jule::Str("(jule::exception_to_error(e));", 30);
		if ((!(_56520_r->_field_scope_owner->_field_decl->_method_is_void()))) {
			_56613_obj+=jule::Str("\n", 1);
			_56613_obj+=_1ba263eab_indent();
			_1ba263eab_done_indent();
			_56613_obj+=_1d173d293_gen_ret_st_with_defaults(_56520_r->_field_scope_owner->_field_result);
		} else {
			_1ba263eab_done_indent();
		}
		_56613_obj+=jule::Str("\n", 1);
		_56613_obj+=_1ba263eab_indent();
		_56613_obj+=jule::Str("}", 1);
	} else {
		_56613_obj+=jule::Str("{\n", 2);
		_1ba263eab_add_indent();
		_56613_obj+=_1ba263eab_indent();
		_56613_obj+=_1d1921d28_gen_expr(_56520_r->_field_handler_expr);
		_56613_obj+=jule::Str("(jule::exception_to_error(e));\n", 31);
		_56613_obj+=_1ba263eab_indent();
		if (_56520_r->_field_scope_owner->_field_decl->_method_is_void()) {
			_1ba263eab_done_indent();
			_56613_obj+=jule::Str(" }", 2);
		} else {
			_56613_obj+=_1d173d293_gen_ret_st_with_defaults(_56520_r->_field_scope_owner->_field_result);
			_56613_obj+=jule::Str("\n", 1);
			_1ba263eab_done_indent();
			_56613_obj+=_1ba263eab_indent();
			_56613_obj+=jule::Str("}", 1);
		}
	}
	return _56613_obj;
}



inline jule::Str _1d173d293_gen_data_expr(jule::Ref<_1b9523799_Data> _61422_d) {
	return _1d1921d28_gen_expr(_61422_d->_field_model) + jule::Str(";", 1);
}



inline jule::Str _1d173d293_gen_scope_var(jule::Ref<_1b919cb2c_Var> _61822_v) {
	if (_61822_v->_field_constant) {
		return jule::Str("", 0);
	}
	return _1ba263eab_gen_var(_61822_v);
}



inline jule::Str _1d173d293_gen_st(jule::Any _62615_st) {
	{
		auto _match_expr{ _62615_st };
		if (!(_match_expr.type_is<jule::Ref<_1b8cd2c4b_Scope>>())) { goto _case_end_4719342848; }
		_case_begin_4719342848:;
		{
			return _1d173d293_gen_scope(_62615_st.operator jule::Ref<_1b8cd2c4b_Scope>());
		}
		goto _match_end_4719340320;
		_case_end_4719342848:;
		if (!(_match_expr.type_is<jule::Ref<_1b919cb2c_Var>>())) { goto _case_end_4719341856; }
		_case_begin_4719341856:;
		{
			return _1d173d293_gen_scope_var(_62615_st.operator jule::Ref<_1b919cb2c_Var>());
		}
		goto _match_end_4719340320;
		_case_end_4719341856:;
		if (!(_match_expr.type_is<jule::Ref<_1b9523799_Data>>())) { goto _case_end_4719341968; }
		_case_begin_4719341968:;
		{
			return _1d173d293_gen_data_expr(_62615_st.operator jule::Ref<_1b9523799_Data>());
		}
		goto _match_end_4719340320;
		_case_end_4719341968:;
		if (!(_match_expr.type_is<jule::Ref<_1b8cd2c4b_Conditional>>())) { goto _case_end_4719342080; }
		_case_begin_4719342080:;
		{
			return _1d173d293_gen_conditional(_62615_st.operator jule::Ref<_1b8cd2c4b_Conditional>());
		}
		goto _match_end_4719340320;
		_case_end_4719342080:;
		if (!(_match_expr.type_is<jule::Ref<_1b8cd2c4b_InfIter>>())) { goto _case_end_4719343120; }
		_case_begin_4719343120:;
		{
			return _1d173d293_gen_inf_iter(_62615_st.operator jule::Ref<_1b8cd2c4b_InfIter>());
		}
		goto _match_end_4719340320;
		_case_end_4719343120:;
		if (!(_match_expr.type_is<jule::Ref<_1b8cd2c4b_WhileIter>>())) { goto _case_end_4719343232; }
		_case_begin_4719343232:;
		{
			return _1d173d293_gen_while_iter(_62615_st.operator jule::Ref<_1b8cd2c4b_WhileIter>());
		}
		goto _match_end_4719340320;
		_case_end_4719343232:;
		if (!(_match_expr.type_is<jule::Ref<_1b8cd2c4b_RangeIter>>())) { goto _case_end_4719343344; }
		_case_begin_4719343344:;
		{
			return _1d173d293_gen_range_iter(_62615_st.operator jule::Ref<_1b8cd2c4b_RangeIter>());
		}
		goto _match_end_4719340320;
		_case_end_4719343344:;
		if (!(_match_expr.type_is<jule::Ref<_1b8cd2c4b_ContSt>>())) { goto _case_end_4719343456; }
		_case_begin_4719343456:;
		{
			return _1d173d293_gen_cont(_62615_st.operator jule::Ref<_1b8cd2c4b_ContSt>());
		}
		goto _match_end_4719340320;
		_case_end_4719343456:;
		if (!(_match_expr.type_is<jule::Ref<_1b8cd2c4b_Label>>())) { goto _case_end_4719343616; }
		_case_begin_4719343616:;
		{
			return _1d173d293_gen_label(_62615_st.operator jule::Ref<_1b8cd2c4b_Label>());
		}
		goto _match_end_4719340320;
		_case_end_4719343616:;
		if (!(_match_expr.type_is<jule::Ref<_1b8cd2c4b_GotoSt>>())) { goto _case_end_4719343728; }
		_case_begin_4719343728:;
		{
			return _1d173d293_gen_goto(_62615_st.operator jule::Ref<_1b8cd2c4b_GotoSt>());
		}
		goto _match_end_4719340320;
		_case_end_4719343728:;
		if (!(_match_expr.type_is<jule::Ref<_1b8cd2c4b_Postfix>>())) { goto _case_end_4719343840; }
		_case_begin_4719343840:;
		{
			return _1d173d293_gen_postfix(_62615_st.operator jule::Ref<_1b8cd2c4b_Postfix>());
		}
		goto _match_end_4719340320;
		_case_end_4719343840:;
		if (!(_match_expr.type_is<jule::Ref<_1b8cd2c4b_Assign>>())) { goto _case_end_4719343952; }
		_case_begin_4719343952:;
		{
			return _1d173d293_gen_assign(_62615_st.operator jule::Ref<_1b8cd2c4b_Assign>());
		}
		goto _match_end_4719340320;
		_case_end_4719343952:;
		if (!(_match_expr.type_is<jule::Ref<_1b8cd2c4b_MultiAssign>>())) { goto _case_end_4719344064; }
		_case_begin_4719344064:;
		{
			return _1d173d293_gen_multi_assign(_62615_st.operator jule::Ref<_1b8cd2c4b_MultiAssign>());
		}
		goto _match_end_4719340320;
		_case_end_4719344064:;
		if (!(_match_expr.type_is<jule::Ref<_1b8cd2c4b_Match>>())) { goto _case_end_4719344176; }
		_case_begin_4719344176:;
		{
			return _1d173d293_gen_match(_62615_st.operator jule::Ref<_1b8cd2c4b_Match>());
		}
		goto _match_end_4719340320;
		_case_end_4719344176:;
		if (!(_match_expr.type_is<jule::Ref<_1b8cd2c4b_FallSt>>())) { goto _case_end_4719344288; }
		_case_begin_4719344288:;
		{
			return _1d173d293_gen_fall_st(_62615_st.operator jule::Ref<_1b8cd2c4b_FallSt>());
		}
		goto _match_end_4719340320;
		_case_end_4719344288:;
		if (!(_match_expr.type_is<jule::Ref<_1b8cd2c4b_BreakSt>>())) { goto _case_end_4719344400; }
		_case_begin_4719344400:;
		{
			return _1d173d293_gen_break_st(_62615_st.operator jule::Ref<_1b8cd2c4b_BreakSt>());
		}
		goto _match_end_4719340320;
		_case_end_4719344400:;
		if (!(_match_expr.type_is<jule::Ref<_1b8cd2c4b_RetSt>>())) { goto _case_end_4719344512; }
		_case_begin_4719344512:;
		{
			return _1d173d293_gen_ret_st(_62615_st.operator jule::Ref<_1b8cd2c4b_RetSt>());
		}
		goto _match_end_4719340320;
		_case_end_4719344512:;
		if (!(_match_expr.type_is<jule::Ref<_1b8cd2c4b_Recover>>())) { goto _case_end_4719344624; }
		_case_begin_4719344624:;
		{
			return _1d173d293_gen_recover(_62615_st.operator jule::Ref<_1b8cd2c4b_Recover>());
		}
		goto _match_end_4719340320;
		_case_end_4719344624:;
		_case_begin_4719341424:;
		{
			return jule::Str("<unimplemented_stmt>", 20);
		}
		goto _match_end_4719340320;
		_case_end_4719341424:;
		_match_end_4719340320:;
	}
}



inline jule::Str _1d173d293_gen_scope(jule::Ref<_1b8cd2c4b_Scope> _65118_s) {
	jule::Str _65213_obj = jule::Str("{\n", 2);
	_1ba263eab_add_indent();
	{
		auto _range_expr = _65118_s->_field_stmts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Any _1d173d293_st = *_range_begin;
			_iter_begin_4719373408:;
			{
				_65213_obj+=_1ba263eab_indent();
				_65213_obj+=_1d173d293_gen_st(_1d173d293_st);
				_65213_obj+=jule::Str("\n", 1);
			}
			_iter_next_4719373408:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d173d293_st = *_range_begin; goto _iter_begin_4719373408; }
			_iter_end_4719373408:;
		}
	}
	_1ba263eab_done_indent();
	_65213_obj+=_1ba263eab_indent();
	_65213_obj+=jule::Str("}", 1);
	if (_65118_s->_field_deferred) {
		_65213_obj=(jule::Str("__JULE_DEFER(", 13) + _65213_obj) + jule::Str(");", 2);
	}
	return _65213_obj;
}



inline jule::Str _1d173d293_gen_fn_scope(jule::Ref<_1d21d97ee_FnIns> _67321_f) {
	if (jule::real(_67321_f->_field_owner)) {
		return _1d173d293_gen_method_scope(_67321_f);
	}
	return _1d173d293_gen_scope(_67321_f->_field_scope);
}



inline jule::Str _1d173d293_gen_method_scope(jule::Ref<_1d21d97ee_FnIns> _68225_f) {
	return _1d173d293_gen_scope(_68225_f->_field_scope);
}



inline jule::Str _1d1921d28_concat_all_parts(jule::Slice<jule::Str> _8021_parts) {
	jule::Str _8113_s = jule::Str("", 0);
	{
		auto _range_expr = _8021_parts;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _1d1921d28_part = *_range_begin;
			_iter_begin_4719383760:;
			{
				_8113_s+=_1d1921d28_part;
			}
			_iter_next_4719383760:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d1921d28_part = *_range_begin; goto _iter_begin_4719383760; }
			_iter_end_4719383760:;
		}
	}
	return _8113_s;
}



inline jule::Str _1d1921d28_get_accessor(jule::Ref<_1b951b088_TypeKind> _8821_t) {
	if (jule::real(_8821_t->_method_ref()) || jule::real(_8821_t->_method_ptr())) {
		return jule::Str("->", 2);
	}
	return jule::Str(".", 1);
}



inline jule::Str _1d1921d28_decompose_common_esq(jule::U8 _9525_b) {
	{
		auto _match_expr{ _9525_b };
		if (!(('\\') == _match_expr)) { goto _case_end_4719389648; }
		_case_begin_4719389648:;
		{
			return jule::Str("\\\\", 2);
		}
		goto _match_end_4714426064;
		_case_end_4719389648:;
		if (!(('\'') == _match_expr)) { goto _case_end_4719389760; }
		_case_begin_4719389760:;
		{
			return jule::Str("'", 1);
		}
		goto _match_end_4714426064;
		_case_end_4719389760:;
		if (!(('\"') == _match_expr)) { goto _case_end_4719390720; }
		_case_begin_4719390720:;
		{
			return jule::Str("\\\"", 2);
		}
		goto _match_end_4714426064;
		_case_end_4719390720:;
		if (!(('\a') == _match_expr)) { goto _case_end_4719390832; }
		_case_begin_4719390832:;
		{
			return jule::Str("\\a", 2);
		}
		goto _match_end_4714426064;
		_case_end_4719390832:;
		if (!(('\b') == _match_expr)) { goto _case_end_4719390944; }
		_case_begin_4719390944:;
		{
			return jule::Str("\\b", 2);
		}
		goto _match_end_4714426064;
		_case_end_4719390944:;
		if (!(('\f') == _match_expr)) { goto _case_end_4719391056; }
		_case_begin_4719391056:;
		{
			return jule::Str("\\f", 2);
		}
		goto _match_end_4714426064;
		_case_end_4719391056:;
		if (!(('\n') == _match_expr)) { goto _case_end_4719390032; }
		_case_begin_4719390032:;
		{
			return jule::Str("\\n", 2);
		}
		goto _match_end_4714426064;
		_case_end_4719390032:;
		if (!(('\r') == _match_expr)) { goto _case_end_4719390144; }
		_case_begin_4719390144:;
		{
			return jule::Str("\\r", 2);
		}
		goto _match_end_4714426064;
		_case_end_4719390144:;
		if (!(('\t') == _match_expr)) { goto _case_end_4719390256; }
		_case_begin_4719390256:;
		{
			return jule::Str("\\t", 2);
		}
		goto _match_end_4714426064;
		_case_end_4719390256:;
		if (!(('\v') == _match_expr)) { goto _case_end_4719390384; }
		_case_begin_4719390384:;
		{
			return jule::Str("\\v", 2);
		}
		goto _match_end_4714426064;
		_case_end_4719390384:;
		_case_begin_4714426160:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4714426064;
		_case_end_4714426160:;
		_match_end_4714426064:;
	}
}



inline jule::Str _1d1921d28_sbtoa(jule::U8 _11110_b) {
	if (_11110_b == 0LL) {
		return jule::Str("\\x00", 4);
	}
	if (_11110_b <= 127LL) {
		jule::Str _11713_seq = _1d1921d28_decompose_common_esq(_11110_b);
		if (_11713_seq != jule::Str("", 0)) {
			return _11713_seq;
		}
		if ((32LL <= _11110_b) && (_11110_b <= 126LL)) {
			return static_cast<jule::Str>(_11110_b);
		}
	}
	jule::Str _1279_seq = _1d17893cc_fmt_uint(static_cast<jule::U64>(_11110_b),8LL);
	if (_1279_seq.len() == 2LL) {
		return jule::Str("\\0", 2) + _1279_seq;
	}
	return jule::Str("\\", 1) + _1279_seq;
}



inline jule::Str _1d1921d28_get_str_model(jule::Ref<_1b9d678e5_Const> _13418_c) {
	jule::Str _1359_content = _13418_c->_method_read_str();
	jule::Slice<jule::U8> _1369_bytes = static_cast<jule::Slice<jule::U8>>(_1359_content);
	jule::Str _1379_len = _1d17893cc_fmt_int(static_cast<jule::I64>(_1369_bytes.len()),10LL);
	jule::Str _13913_lit = jule::Str("", 0);
	{
		auto _range_expr = _1369_bytes;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::U8 _1d1921d28_b = *_range_begin;
			_iter_begin_4719410672:;
			{
				_13913_lit+=_1d1921d28_sbtoa(_1d1921d28_b);
			}
			_iter_next_4719410672:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d1921d28_b = *_range_begin; goto _iter_begin_4719410672; }
			_iter_end_4719410672:;
		}
	}
	return ((((_1ba1de70b_as_jt(jule::Str("str", 3)) + jule::Str("(\"", 2)) + _13913_lit) + jule::Str("\", ", 3)) + _1379_len) + jule::Str(")", 1);
}



inline jule::Str _1d1921d28_get_bool_model(jule::Ref<_1b9d678e5_Const> _14719_c) {
	if (_14719_c->_method_read_bool()) {
		return jule::Str("true", 4);
	}
	return jule::Str("false", 5);
}



inline jule::Str _1d1921d28_get_nil_model(void) {
	return jule::Str("nullptr", 7);
}



inline jule::Str _1d1921d28_gen_float_special_cases(jule::F64 _15628_x) {
	{
		if (!((_1d186ec98_is_nan(_15628_x)))) { goto _case_end_4719417280; }
		_case_begin_4719417280:;
		{
			return jule::Str("NAN", 3);
		}
		goto _match_end_4719416720;
		_case_end_4719417280:;
		if (!((_1d186ec98_is_inf(_15628_x,1LL)))) { goto _case_end_4719417392; }
		_case_begin_4719417392:;
		{
			return jule::Str("INFINITY", 8);
		}
		goto _match_end_4719416720;
		_case_end_4719417392:;
		if (!((_1d186ec98_is_inf(_15628_x,-1LL)))) { goto _case_end_4719417504; }
		_case_begin_4719417504:;
		{
			return jule::Str("-INFINITY", 9);
		}
		goto _match_end_4719416720;
		_case_end_4719417504:;
		_case_begin_4719416912:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4719416720;
		_case_end_4719416912:;
		_match_end_4719416720:;
	}
}



inline jule::Str _1d1921d28_ftoa(jule::F64 _1659_f,jule::Int _16517_bitsize) {
	if (_16517_bitsize != 32LL) {
		if (_1659_f == static_cast<jule::F64>(static_cast<jule::I64>(_1659_f))) {
			return _1d1921d28_i64toa(static_cast<jule::I64>(_1659_f));
		}
		if (_1659_f == static_cast<jule::F64>(static_cast<jule::U64>(_1659_f))) {
			return _1d1921d28_u64toa(static_cast<jule::U64>(_1659_f));
		}
	}
	jule::Str _17513_m = _1d061d5e7_fmt_float(_1659_f,'f',-1LL,_16517_bitsize);
	if (_17513_m.find(jule::Str(".", 1)) == -1LL) {
		_17513_m+=jule::Str(".0", 2);
	}
	return _17513_m;
}



inline jule::Str _1d1921d28_get_f32_model(jule::Ref<_1b9d678e5_Const> _18218_c) {
	jule::F64 _1839_x = _18218_c->_method_as_f64();
	jule::Str _1869_f = _1d1921d28_gen_float_special_cases(_1839_x);
	if (_1869_f != jule::Str("", 0)) {
		return _1869_f;
	}
	{
		if (!((_1839_x == 340282346638528860000000000000000000000.0))) { goto _case_end_4719433776; }
		_case_begin_4719433776:;
		{
			return jule::Str("jule::MAX_F32", 13);
		}
		goto _match_end_4719433216;
		_case_end_4719433776:;
		if (!((_1839_x == -340282346638528860000000000000000000000.0))) { goto _case_end_4719433888; }
		_case_begin_4719433888:;
		{
			return jule::Str("jule::MIN_F32", 13);
		}
		goto _match_end_4719433216;
		_case_end_4719433888:;
		_match_end_4719433216:;
	}
	return _1d1921d28_ftoa(_1839_x,32LL) + jule::Str("f", 1);
}



inline jule::Str _1d1921d28_get_f64_model(jule::Ref<_1b9d678e5_Const> _19918_c) {
	jule::F64 _2009_x = _19918_c->_method_as_f64();
	jule::Str _2039_f = _1d1921d28_gen_float_special_cases(_2009_x);
	if (_2039_f != jule::Str("", 0)) {
		return _2039_f;
	}
	{
		if (!((_2009_x == jule::MAX_F64))) { goto _case_end_4719440304; }
		_case_begin_4719440304:;
		{
			return jule::Str("jule::MAX_F64", 13);
		}
		goto _match_end_4719439776;
		_case_end_4719440304:;
		if (!((_2009_x == jule::MIN_F64))) { goto _case_end_4719440416; }
		_case_begin_4719440416:;
		{
			return jule::Str("jule::MIN_F64", 13);
		}
		goto _match_end_4719439776;
		_case_end_4719440416:;
		_match_end_4719439776:;
	}
	return _1d1921d28_ftoa(_2009_x,64LL);
}



inline jule::Str _1d1921d28_get_float_model(jule::Ref<_1b9523799_Data> _21624_d) {
	{
		if (!((_21624_d->_field_kind->_method_prim()->_method_is_f32()))) { goto _case_end_4719445328; }
		_case_begin_4719445328:;
		{
			return _1d1921d28_get_f32_model(_21624_d->_field_constant);
		}
		goto _match_end_4719443088;
		_case_end_4719445328:;
		_case_begin_4719443968:;
		{
			return _1d1921d28_get_f64_model(_21624_d->_field_constant);
		}
		goto _match_end_4719443088;
		_case_end_4719443968:;
		_match_end_4719443088:;
	}
}



inline jule::Str _1d1921d28_i64toa(jule::I64 _22311_x) {
	{
		if (!((_22311_x == jule::MAX_I64))) { goto _case_end_4719446848; }
		_case_begin_4719446848:;
		{
			return jule::Str("jule::MAX_I64", 13);
		}
		goto _match_end_4719444208;
		_case_end_4719446848:;
		if (!((_22311_x == jule::MIN_I64))) { goto _case_end_4719446976; }
		_case_begin_4719446976:;
		{
			return jule::Str("jule::MIN_I64", 13);
		}
		goto _match_end_4719444208;
		_case_end_4719446976:;
		_match_end_4719444208:;
	}
	jule::Str _2299_fmt = _1d17893cc_fmt_int(_22311_x,10LL);
	if (_1d0626eb3_is_64bit(jule::Str("amd64", 5))) {
		return _2299_fmt + jule::Str("LL", 2);
	}
	return _2299_fmt + jule::Str("L", 1);
}



inline jule::Str _1d1921d28_get_i64_model(jule::Ref<_1b9d678e5_Const> _23618_c) {
	return _1d1921d28_i64toa(static_cast<jule::I64>(_23618_c->_method_read_i64()));
}



inline jule::Str _1d1921d28_u64toa(jule::U64 _24011_x) {
	{
		if (!((_24011_x == jule::MAX_U64))) { goto _case_end_4719455360; }
		_case_begin_4719455360:;
		{
			return jule::Str("jule::MAX_U64", 13);
		}
		goto _match_end_4719455200;
		_case_end_4719455360:;
		_match_end_4719455200:;
	}
	jule::Str _2469_fmt = _1d17893cc_fmt_uint(_24011_x,10LL);
	if (_1d0626eb3_is_64bit(jule::Str("amd64", 5))) {
		return _2469_fmt + jule::Str("LLU", 3);
	}
	return _2469_fmt + jule::Str("LU", 2);
}



inline jule::Str _1d1921d28_get_u64_model(jule::Ref<_1b9d678e5_Const> _25318_c) {
	return _1d1921d28_u64toa(static_cast<jule::U64>(_25318_c->_method_read_u64()));
}



inline jule::Str _1d1921d28_gen_const_expr(jule::Ref<_1b9523799_Data> _25723_d) {
	{
		if (!((_25723_d->_field_constant->_method_is_str()))) { goto _case_end_4719462432; }
		_case_begin_4719462432:;
		{
			return _1d1921d28_get_str_model(_25723_d->_field_constant);
		}
		goto _match_end_4719461664;
		_case_end_4719462432:;
		if (!((_25723_d->_field_constant->_method_is_bool()))) { goto _case_end_4719462544; }
		_case_begin_4719462544:;
		{
			return _1d1921d28_get_bool_model(_25723_d->_field_constant);
		}
		goto _match_end_4719461664;
		_case_end_4719462544:;
		if (!((_25723_d->_field_constant->_method_is_f64()))) { goto _case_end_4719463632; }
		_case_begin_4719463632:;
		{
			return _1d1921d28_get_float_model(_25723_d);
		}
		goto _match_end_4719461664;
		_case_end_4719463632:;
		if (!((_25723_d->_field_constant->_method_is_i64()))) { goto _case_end_4719463744; }
		_case_begin_4719463744:;
		{
			return _1d1921d28_get_i64_model(_25723_d->_field_constant);
		}
		goto _match_end_4719461664;
		_case_end_4719463744:;
		if (!((_25723_d->_field_constant->_method_is_u64()))) { goto _case_end_4719463856; }
		_case_begin_4719463856:;
		{
			return _1d1921d28_get_u64_model(_25723_d->_field_constant);
		}
		goto _match_end_4719461664;
		_case_end_4719463856:;
		if (!((_25723_d->_field_constant->_method_is_nil()))) { goto _case_end_4719463968; }
		_case_begin_4719463968:;
		{
			return _1d1921d28_get_nil_model();
		}
		goto _match_end_4719461664;
		_case_end_4719463968:;
		_case_begin_4719459456:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4719461664;
		_case_end_4719459456:;
		_match_end_4719461664:;
	}
}



inline jule::Str _1d1921d28_gen_const_expr_model(jule::Ref<_1b9d678e5_Const> _26925_m) {
	{
		if (!((_26925_m->_method_is_str()))) { goto _case_end_4719473680; }
		_case_begin_4719473680:;
		{
			return _1d1921d28_get_str_model(_26925_m);
		}
		goto _match_end_4719472912;
		_case_end_4719473680:;
		if (!((_26925_m->_method_is_bool()))) { goto _case_end_4719473792; }
		_case_begin_4719473792:;
		{
			return _1d1921d28_get_bool_model(_26925_m);
		}
		goto _match_end_4719472912;
		_case_end_4719473792:;
		if (!((_26925_m->_method_is_f64()))) { goto _case_end_4719475008; }
		_case_begin_4719475008:;
		{
			return _1d1921d28_get_f64_model(_26925_m);
		}
		goto _match_end_4719472912;
		_case_end_4719475008:;
		if (!((_26925_m->_method_is_i64()))) { goto _case_end_4719475120; }
		_case_begin_4719475120:;
		{
			return _1d1921d28_get_i64_model(_26925_m);
		}
		goto _match_end_4719472912;
		_case_end_4719475120:;
		if (!((_26925_m->_method_is_u64()))) { goto _case_end_4719475232; }
		_case_begin_4719475232:;
		{
			return _1d1921d28_get_u64_model(_26925_m);
		}
		goto _match_end_4719472912;
		_case_end_4719475232:;
		if (!((_26925_m->_method_is_nil()))) { goto _case_end_4719475344; }
		_case_begin_4719475344:;
		{
			return _1d1921d28_get_nil_model();
		}
		goto _match_end_4719472912;
		_case_end_4719475344:;
		_case_begin_4719469264:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4719472912;
		_case_end_4719469264:;
		_match_end_4719472912:;
	}
}



inline jule::Str _1d1921d28_gen_div_by_zero_binop_expr_model(jule::Str _28137_op,jule::Any _28150_l,jule::Any _28168_r) {
	jule::Str _28213_op_func = jule::Str("", 0);
	{
		auto _match_expr{ _28137_op };
		if (!((jule::Str("/", 1)) == _match_expr)) { goto _case_end_4719483856; }
		_case_begin_4719483856:;
		{
			_28213_op_func=jule::Str("div", 3);
		}
		goto _match_end_4719483456;
		_case_end_4719483856:;
		if (!((jule::Str("%", 1)) == _match_expr)) { goto _case_end_4719483968; }
		_case_begin_4719483968:;
		{
			_28213_op_func=jule::Str("mod", 3);
		}
		goto _match_end_4719483456;
		_case_end_4719483968:;
		_match_end_4719483456:;
	}
	if (_1d1d36270_is_opt_enabled(jule::Str("--opt-math", 10))) {
		{
			auto _match_expr{ _28168_r };
			if (!(_match_expr.type_is<jule::Ref<_1b9d678e5_Const>>())) { goto _case_end_4719486720; }
			_case_begin_4719486720:;
			{
				_28213_op_func=jule::Str("unsafe_", 7) + _28213_op_func;
			}
			goto _match_end_4719485104;
			_case_end_4719486720:;
			_match_end_4719485104:;
		}
	}
	jule::Str _29513_obj = jule::Str("jule::", 6);
	_29513_obj+=_28213_op_func;
	_29513_obj+=jule::Str("(", 1);
	_29513_obj+=_1d1921d28_gen_expr(_28150_l);
	_29513_obj+=jule::Str(",", 1);
	_29513_obj+=_1d1921d28_gen_expr(_28168_r);
	_29513_obj+=jule::Str(")", 1);
	return _29513_obj;
}



inline jule::Str _1d1921d28_gen_binop_expr_model(jule::Ref<_1b8dbae99_BinopExprModel> _30529_m) {
	{
		auto _match_expr{ _30529_m->_field_op };
		if (!((jule::Str("/", 1)) == _match_expr || (jule::Str("%", 1)) == _match_expr)) { goto _case_end_4719491552; }
		_case_begin_4719491552:;
		{
			return _1d1921d28_gen_div_by_zero_binop_expr_model(_30529_m->_field_op,_30529_m->_field_left,_30529_m->_field_right);
		}
		goto _match_end_4719490480;
		_case_end_4719491552:;
		_match_end_4719490480:;
	}
	jule::Str _31213_obj = jule::Str("(", 1);
	_31213_obj+=_1d1921d28_gen_expr_model(_30529_m->_field_left);
	_31213_obj+=jule::Str(" ", 1);
	_31213_obj+=_30529_m->_field_op;
	_31213_obj+=jule::Str(" ", 1);
	_31213_obj+=_1d1921d28_gen_expr_model(_30529_m->_field_right);
	_31213_obj+=jule::Str(")", 1);
	return _31213_obj;
}



inline jule::Str _1d1921d28_gen_var_expr_model(jule::Ref<_1b919cb2c_Var> _32227_m) {
	if (_32227_m->_field_cpp_linked) {
		jule::Ref<_1d1e5192e_Directive> _32413_d = _1ba1e2b3d_find_directive(_32227_m->_field_directives,jule::Str("namespace", 9));
		if (jule::real(_32413_d)) {
			return (_1d1921d28_concat_all_parts(_32413_d->_field_args) + jule::Str("::", 2)) + _1ba1de70b_var_out_ident(_32227_m);
		}
	}
	return _1ba1de70b_var_out_ident(_32227_m);
}



inline jule::Str _1d1921d28_gen_struct_expr_model(jule::Ref<_1d21c0b59_Struct> _33226_m) {
	return _1ba1e2b3d_gen_struct_kind(_33226_m);
}



inline jule::Str _1d1921d28_gen_struct_ins_expr_model(jule::Ref<_1d21c0b59_StructIns> _33634_m) {
	return _1ba1e2b3d_gen_struct_kind_ins(_33634_m);
}



inline jule::Str _1d1921d28_gen_unary_expr_model(jule::Ref<_1b8dbae99_UnaryExprModel> _34029_m) {
	{
		auto _match_expr{ _34029_m->_field_op };
		if (!((jule::Str("^", 1)) == _match_expr)) { goto _case_end_4719507216; }
		_case_begin_4719507216:;
		{
			return (jule::Str("(~(", 3) + _1d1921d28_gen_expr(_34029_m->_field_expr)) + jule::Str("))", 2);
		}
		goto _match_end_4719501344;
		_case_end_4719507216:;
		_case_begin_4719505504:;
		{
			return (((jule::Str("(", 1) + _34029_m->_field_op) + jule::Str("(", 1)) + _1d1921d28_gen_expr(_34029_m->_field_expr)) + jule::Str("))", 2);
		}
		goto _match_end_4719501344;
		_case_end_4719505504:;
		_match_end_4719501344:;
	}
}



inline jule::Str _1d1921d28_gen_get_ref_ptr_expr_model(jule::Ref<_1b8dbae99_GetRefPtrExprModel> _34735_m) {
	return (jule::Str("(", 1) + _1d1921d28_gen_expr(_34735_m->_field_expr)) + jule::Str(").alloc", 7);
}



inline jule::Str _1d1921d28_gen_cpp_struct_lit_expr_model(jule::Ref<_1b8dbae99_StructLitExprModel> _35138_m) {
	jule::Str _35213_obj = jule::Str("(", 1) + _1ba1e2b3d_gen_struct_kind_ins(_35138_m->_field_strct);
	_35213_obj+=jule::Str("){", 2);
	if (_35138_m->_field_args.len() > 0LL) {
		_julec_label_iter:;
		{
			auto _range_expr = _35138_m->_field_strct->_field_fields;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_1d21c0b59_FieldIns> _1d1921d28_f = *_range_begin;
				_iter_begin_4719515488:;
				{
					if (_35138_m->_field_strct->_field_decl->_field_cpp_linked) {
						{
							auto _range_expr = _35138_m->_field_args;
							if (_range_expr.begin() != _range_expr.end()) {
								auto _range_begin = _range_expr.begin();
								const auto _range_end = _range_expr.end();
								jule::Ref<_1b8dbae99_StructArgExprModel> _1d1921d28_arg = *_range_begin;
								_iter_begin_4719518352:;
								{
									if (_1d1921d28_arg->_field_field == _1d1921d28_f) {
										_35213_obj+=jule::Str(".", 1);
										_35213_obj+=_1ba1de70b_field_out_ident(_1d1921d28_f->_field_decl);
										_35213_obj+=jule::Str("=", 1);
										_35213_obj+=_1d1921d28_gen_expr(_1d1921d28_arg->_field_expr) + jule::Str(",", 1);
										goto _iter_next_4719515488;
									}
								}
								_iter_next_4719518352:;
								++_range_begin;
								if (_range_begin != _range_end) { _1d1921d28_arg = *_range_begin; goto _iter_begin_4719518352; }
								_iter_end_4719518352:;
							}
						}
						goto _iter_next_4719515488;
					}
					_35213_obj+=_1ba1de70b_field_out_ident(_1d1921d28_f->_field_decl) + jule::Str(": ", 2);
					{
						auto _range_expr = _35138_m->_field_args;
						if (_range_expr.begin() != _range_expr.end()) {
							auto _range_begin = _range_expr.begin();
							const auto _range_end = _range_expr.end();
							jule::Ref<_1b8dbae99_StructArgExprModel> _1d1921d28_arg = *_range_begin;
							_iter_begin_4719519200:;
							{
								if (_1d1921d28_arg->_field_field == _1d1921d28_f) {
									_35213_obj+=_1d1921d28_gen_expr(_1d1921d28_arg->_field_expr) + jule::Str(",", 1);
									goto _iter_next_4719515488;
								}
							}
							_iter_next_4719519200:;
							++_range_begin;
							if (_range_begin != _range_end) { _1d1921d28_arg = *_range_begin; goto _iter_begin_4719519200; }
							_iter_end_4719519200:;
						}
					}
					_35213_obj+=_1d1921d28_get_init_expr(_1d1921d28_f->_field_kind) + jule::Str(",", 1);
				}
				_iter_next_4719515488:;
				++_range_begin;
				if (_range_begin != _range_end) { _1d1921d28_f = *_range_begin; goto _iter_begin_4719515488; }
				_iter_end_4719515488:;
			}
		}
		_35213_obj=_35213_obj.slice(0LL,static_cast<jule::Int>(_35213_obj.len() - 1LL));
	}
	_35213_obj+=jule::Str("}", 1);
	return _35213_obj;
}



inline jule::Str _1d1921d28_gen_struct_lit_expr_model(jule::Ref<_1b8dbae99_StructLitExprModel> _38534_m) {
	if (_38534_m->_field_strct->_field_decl->_field_cpp_linked) {
		return _1d1921d28_gen_cpp_struct_lit_expr_model(_38534_m);
	}
	jule::Str _39013_obj = _1ba1de70b_struct_ins_out_ident(_38534_m->_field_strct);
	_39013_obj+=jule::Str("(", 1);
	if (_38534_m->_field_args.len() > 0LL) {
		_julec_label_iter:;
		{
			auto _range_expr = _38534_m->_field_strct->_field_fields;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_1d21c0b59_FieldIns> _1d1921d28_f = *_range_begin;
				_iter_begin_4719535872:;
				{
					{
						auto _range_expr = _38534_m->_field_args;
						if (_range_expr.begin() != _range_expr.end()) {
							auto _range_begin = _range_expr.begin();
							const auto _range_end = _range_expr.end();
							jule::Ref<_1b8dbae99_StructArgExprModel> _1d1921d28_arg = *_range_begin;
							_iter_begin_4719537760:;
							{
								if (_1d1921d28_arg->_field_field == _1d1921d28_f) {
									_39013_obj+=_1d1921d28_gen_expr(_1d1921d28_arg->_field_expr) + jule::Str(",", 1);
									goto _iter_next_4719535872;
								}
							}
							_iter_next_4719537760:;
							++_range_begin;
							if (_range_begin != _range_end) { _1d1921d28_arg = *_range_begin; goto _iter_begin_4719537760; }
							_iter_end_4719537760:;
						}
					}
					_39013_obj+=_1d1921d28_get_init_expr(_1d1921d28_f->_field_kind) + jule::Str(",", 1);
				}
				_iter_next_4719535872:;
				++_range_begin;
				if (_range_begin != _range_end) { _1d1921d28_f = *_range_begin; goto _iter_begin_4719535872; }
				_iter_end_4719535872:;
			}
		}
		_39013_obj=_39013_obj.slice(0LL,static_cast<jule::Int>(_39013_obj.len() - 1LL));
	}
	_39013_obj+=jule::Str(")", 1);
	return _39013_obj;
}



inline jule::Str _1d1921d28_gen_alloc_struct_lit_expr_model(jule::Ref<_1b8dbae99_AllocStructLitExprModel> _40940_m) {
	jule::Str _41013_obj = jule::Str("jule::new_struct<", 17);
	_41013_obj+=_1ba1de70b_struct_ins_out_ident(_40940_m->_field_lit->_field_strct);
	_41013_obj+=jule::Str(">(new( std::nothrow ) ", 22);
	_41013_obj+=_1d1921d28_gen_struct_lit_expr_model(_40940_m->_field_lit);
	_41013_obj+=jule::Str(")", 1);
	return _41013_obj;
}



inline jule::Str _1d1921d28_gen_casting_expr_model(jule::Ref<_1b8dbae99_CastingExprModel> _41831_m) {
	jule::Str _41913_obj = jule::Str("", 0);
	{
		if (!((jule::real(_41831_m->_field_kind->_method_prim()) && _41831_m->_field_kind->_method_prim()->_method_is_any()))) { goto _case_end_4719553312; }
		_case_begin_4719553312:;
		{
			_41913_obj+=_1ba1e2b3d_gen_type_kind(_41831_m->_field_kind);
			_41913_obj+=jule::Str("(", 1);
			_41913_obj+=_1d1921d28_gen_expr_model(_41831_m->_field_expr);
			_41913_obj+=jule::Str(")", 1);
		}
		goto _match_end_4719549456;
		_case_end_4719553312:;
		if (!((jule::real(_41831_m->_field_expr_kind->_method_ptr())) || (jule::real(_41831_m->_field_kind->_method_ptr())))) { goto _case_end_4719553424; }
		_case_begin_4719553424:;
		{
			_41913_obj+=jule::Str("((", 2);
			_41913_obj+=_1ba1e2b3d_gen_type_kind(_41831_m->_field_kind);
			_41913_obj+=jule::Str(")(", 2);
			_41913_obj+=_1d1921d28_gen_expr(_41831_m->_field_expr);
			_41913_obj+=jule::Str("))", 2);
		}
		goto _match_end_4719549456;
		_case_end_4719553424:;
		if (!((jule::real(_41831_m->_field_expr_kind->_method_trt())) || (jule::real(_41831_m->_field_expr_kind->_method_prim()) && _41831_m->_field_expr_kind->_method_prim()->_method_is_any()))) { goto _case_end_4719552944; }
		_case_begin_4719552944:;
		{
			_41913_obj+=_1d1921d28_gen_expr_model(_41831_m->_field_expr);
			_41913_obj+=_1d1921d28_get_accessor(_41831_m->_field_expr_kind);
			_41913_obj+=jule::Str("operator ", 9);
			_41913_obj+=_1ba1e2b3d_gen_type_kind(_41831_m->_field_kind);
			_41913_obj+=jule::Str("()", 2);
		}
		goto _match_end_4719549456;
		_case_end_4719552944:;
		_case_begin_4719549584:;
		{
			_41913_obj+=jule::Str("static_cast<", 12);
			_41913_obj+=_1ba1e2b3d_gen_type_kind(_41831_m->_field_kind);
			_41913_obj+=jule::Str(">(", 2);
			_41913_obj+=_1d1921d28_gen_expr(_41831_m->_field_expr);
			_41913_obj+=jule::Str(")", 1);
		}
		goto _match_end_4719549456;
		_case_end_4719549584:;
		_match_end_4719549456:;
	}
	return _41913_obj;
}



inline jule::Str _1d1921d28_gen_arg_expr_models(jule::Slice<jule::Any> _45328_models) {
	if (_45328_models.len() == 0LL) {
		return jule::Str("", 0);
	}
	jule::Str _45813_obj = jule::Str("", 0);
	{
		auto _range_expr = _45328_models;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Any _1d1921d28_m = *_range_begin;
			_iter_begin_4719565936:;
			{
				_45813_obj+=_1d1921d28_gen_expr(_1d1921d28_m) + jule::Str(",", 1);
			}
			_iter_next_4719565936:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d1921d28_m = *_range_begin; goto _iter_begin_4719565936; }
			_iter_end_4719565936:;
		}
	}
	_45813_obj=_45813_obj.slice(0LL,static_cast<jule::Int>(_45813_obj.len() - 1LL));
	return _45813_obj;
}



inline jule::Str _1d1921d28_gen_expr_model_for_call(jule::Any _46632_expr) {
	{
		auto _match_expr{ _46632_expr };
		if (!(_match_expr.type_is<jule::Ref<_1d21d97ee_FnIns>>())) { goto _case_end_4719573136; }
		_case_begin_4719573136:;
		{
			return _1d1921d28_gen_fn_ins_expr_model(_46632_expr.operator jule::Ref<_1d21d97ee_FnIns>());
		}
		goto _match_end_4719570016;
		_case_end_4719573136:;
		_case_begin_4719571648:;
		{
			return _1d1921d28_gen_expr_model(_46632_expr);
		}
		goto _match_end_4719570016;
		_case_end_4719571648:;
		_match_end_4719570016:;
	}
}



inline jule::Str _1d1921d28_gen_fn_call_expr_model(jule::Ref<_1b8dbae99_FnCallExprModel> _47331_m) {
	jule::Str _47413_obj = _1d1921d28_gen_expr_model_for_call(_47331_m->_field_expr);
	if ((!(_47331_m->_field_func->_method_is_builtin()))) {
		if (_47331_m->_field_func->_field_decl->_field_cpp_linked && (_47331_m->_field_func->_field_generics.len() > 0LL)) {
			if ((!(_1ba1e2b3d_has_directive(_47331_m->_field_func->_field_decl->_field_directives,jule::Str("cdef", 4))))) {
				_47413_obj+=jule::Str("<", 1);
				{
					auto _range_expr = _47331_m->_field_func->_field_generics;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Ref<_1b951b088_TypeKind> _1d1921d28_g = *_range_begin;
						_iter_begin_4719579872:;
						{
							_47413_obj+=_1ba1e2b3d_gen_type_kind(_1d1921d28_g) + jule::Str(",", 1);
						}
						_iter_next_4719579872:;
						++_range_begin;
						if (_range_begin != _range_end) { _1d1921d28_g = *_range_begin; goto _iter_begin_4719579872; }
						_iter_end_4719579872:;
					}
				}
				_47413_obj=_47413_obj.slice(0LL,static_cast<jule::Int>(_47413_obj.len() - 1LL));
				_47413_obj+=jule::Str(">", 1);
			}
		}
	}
	_47413_obj+=jule::Str("(", 1);
	_47413_obj+=_1d1921d28_gen_arg_expr_models(_47331_m->_field_args);
	_47413_obj+=jule::Str(")", 1);
	if (_47331_m->_field_is_co) {
		_47413_obj=(jule::Str("__JULE_CO(", 10) + _47413_obj) + jule::Str(")", 1);
	}
	return _47413_obj;
}



inline jule::Str _1d1921d28_gen_slice_expr_model(jule::Ref<_1b8dbae99_SliceExprModel> _49829_m) {
	jule::Str _49913_obj = _1ba1e2b3d_as_slice_kind(_49829_m->_field_elem_kind);
	_49913_obj+=jule::Str("({", 2);
	_49913_obj+=_1d1921d28_gen_arg_expr_models(_49829_m->_field_elems);
	_49913_obj+=jule::Str("})", 2);
	return _49913_obj;
}



inline jule::Str _1d1921d28_gen_indexing_expr_model(jule::Ref<_1b8dbae99_IndexigExprModel> _50632_m) {
	jule::Str _50713_obj = _1d1921d28_gen_expr_model(_50632_m->_field_expr->_field_model);
	if ((_50632_m->_field_index->_method_is_const() && jule::real(_50632_m->_field_expr->_field_kind->_method_arr())) && _1d1d36270_is_opt_enabled(jule::Str("--opt-access", 12))) {
		_50713_obj+=jule::Str(".__at(", 6);
		_50713_obj+=_1d1921d28_gen_expr(_50632_m->_field_index->_field_model);
		_50713_obj+=jule::Str(")", 1);
	} else {
		_50713_obj+=jule::Str("[", 1);
		_50713_obj+=_1d1921d28_gen_expr(_50632_m->_field_index->_field_model);
		_50713_obj+=jule::Str("]", 1);
	}
	return _50713_obj;
}



inline jule::Str _1d1921d28_gen_anon_fn_expr_model(jule::Ref<_1b8dbae99_AnonFnExprModel> _52031_m) {
	jule::Str _52113_obj = _1ba1e2b3d_gen_fn_kind(_52031_m->_field_func);
	_52113_obj+=jule::Str("([=]", 4);
	_52113_obj+=_1ba263eab_gen_params_ins(_52031_m->_field_func->_field_params);
	_52113_obj+=jule::Str(" mutable -> ", 12);
	_52113_obj+=_1ba263eab_gen_fn_ins_result(_52031_m->_field_func);
	_52113_obj+=jule::Str(" ", 1);
	_52113_obj+=_1d173d293_gen_fn_scope(_52031_m->_field_func);
	_52113_obj+=jule::Str(")", 1);
	return _52113_obj;
}



inline jule::Str _1d1921d28_gen_map_expr_model(jule::Ref<_1b8dbae99_MapExprModel> _53227_m) {
	jule::Str _53313_obj = _1ba1de70b_as_jt(jule::Str("map", 3));
	_53313_obj+=jule::Str("<", 1);
	_53313_obj+=_1ba1e2b3d_gen_type_kind(_53227_m->_field_key_kind);
	_53313_obj+=jule::Str(",", 1);
	_53313_obj+=_1ba1e2b3d_gen_type_kind(_53227_m->_field_val_kind);
	_53313_obj+=jule::Str(">({", 3);
	if (_53227_m->_field_entries.len() > 0LL) {
		{
			auto _range_expr = _53227_m->_field_entries;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_1b8dbae99_KeyValPairExprModel> _1d1921d28_pair = *_range_begin;
				_iter_begin_4719609008:;
				{
					jule::Str _54121_pair_obj = jule::Str("{", 1);
					_54121_pair_obj+=_1d1921d28_gen_expr(_1d1921d28_pair->_field_key);
					_54121_pair_obj+=jule::Str(",", 1);
					_54121_pair_obj+=_1d1921d28_gen_expr(_1d1921d28_pair->_field_val);
					_54121_pair_obj+=jule::Str("}", 1);
					_53313_obj+=_54121_pair_obj;
					_53313_obj+=jule::Str(",", 1);
				}
				_iter_next_4719609008:;
				++_range_begin;
				if (_range_begin != _range_end) { _1d1921d28_pair = *_range_begin; goto _iter_begin_4719609008; }
				_iter_end_4719609008:;
			}
		}
		_53313_obj=_53313_obj.slice(0LL,static_cast<jule::Int>(_53313_obj.len() - 1LL));
	}
	_53313_obj+=jule::Str("})", 2);
	return _53313_obj;
}



inline jule::Str _1d1921d28_gen_slicing_expr_model(jule::Ref<_1b8dbae99_SlicingExprModel> _55531_m) {
	jule::Str _55613_obj = _1d1921d28_gen_expr_model(_55531_m->_field_expr);
	_55613_obj+=jule::Str(".slice(", 7);
	_55613_obj+=_1d1921d28_gen_expr(_55531_m->_field_left);
	if (_55531_m->_field_right != nullptr) {
		_55613_obj+=jule::Str(",", 1);
		_55613_obj+=_1d1921d28_gen_expr(_55531_m->_field_right);
	}
	_55613_obj+=jule::Str(")", 1);
	return _55613_obj;
}



inline jule::Str _1d1921d28_gen_trait_sub_ident_expr_model(jule::Ref<_1b8dbae99_TraitSubIdentExprModel> _56739_m) {
	jule::Str _56813_obj = _1d1921d28_gen_expr_model(_56739_m->_field_expr);
	_56813_obj+=jule::Str(".get()._method_", 15);
	_56813_obj+=_56739_m->_field_ident;
	return _56813_obj;
}



inline jule::Str _1d1921d28_gen_struct_sub_ident_expr_model(jule::Ref<_1b8dbae99_StructSubIdentExprModel> _57440_m) {
	jule::Str _57513_obj = _1d1921d28_gen_expr_model(_57440_m->_field_expr);
	_57513_obj+=_1d1921d28_get_accessor(_57440_m->_field_expr_kind);
	if (jule::real(_57440_m->_field_field)) {
		_57513_obj+=_1ba1de70b_field_out_ident(_57440_m->_field_field->_field_decl);
	} else {
		_57513_obj+=_1ba1de70b_fn_ins_out_ident(_57440_m->_field_method);
	}
	return _57513_obj;
}



inline jule::Str _1d1921d28_gen_common_ident_expr_model(jule::Ref<_1b8dbae99_CommonIdentExprModel> _58532_m) {
	return _58532_m->_field_ident;
}



inline jule::Str _1d1921d28_gen_common_sub_ident_expr_model(jule::Ref<_1b8dbae99_CommonSubIdentExprModel> _58940_m) {
	jule::Str _59013_obj = _1d1921d28_gen_expr_model(_58940_m->_field_expr);
	_59013_obj+=_1d1921d28_get_accessor(_58940_m->_field_expr_kind);
	_59013_obj+=_58940_m->_field_ident;
	return _59013_obj;
}



inline jule::Str _1d1921d28_gen_array_expr_model(jule::Ref<_1b8dbae99_ArrayExprModel> _59629_m) {
	jule::Str _59713_obj = _1ba1e2b3d_gen_array_kind(_59629_m->_field_kind);
	_59713_obj+=jule::Str("({", 2);
	_59713_obj+=_1d1921d28_gen_arg_expr_models(_59629_m->_field_elems);
	_59713_obj+=jule::Str("})", 2);
	return _59713_obj;
}



inline jule::Str _1d1921d28_gen_fn_ins_expr_model_common(jule::Ref<_1d21d97ee_FnIns> _60637_m) {
	return ((_1ba1e2b3d_gen_fn_kind(_60637_m) + jule::Str("(", 1)) + _1d1921d28_gen_fn_ins_expr_model(_60637_m)) + jule::Str(")", 1);
}



inline jule::Str _1d1921d28_gen_fn_ins_expr_model(jule::Ref<_1d21d97ee_FnIns> _61130_m) {
	if (jule::real(_61130_m->_field_decl) && _61130_m->_field_decl->_field_cpp_linked) {
		jule::Ref<_1d1e5192e_Directive> _61313_d = _1ba1e2b3d_find_directive(_61130_m->_field_decl->_field_directives,jule::Str("namespace", 9));
		if (jule::real(_61313_d)) {
			return (_1d1921d28_concat_all_parts(_61313_d->_field_args) + jule::Str("::", 2)) + _1ba1de70b_fn_ins_out_ident(_61130_m);
		}
	}
	return _1ba1de70b_fn_ins_out_ident(_61130_m);
}



inline jule::Str _1d1921d28_gen_tuple_expr_model(jule::Ref<_1b8dbae99_TupleExprModel> _62129_m) {
	jule::Str _62213_obj = jule::Str("std::make_tuple(", 16);
	{
		auto _range_expr = _62129_m->_field_datas;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b9523799_Data> _1d1921d28_d = *_range_begin;
			_iter_begin_4719661280:;
			{
				_62213_obj+=_1d1921d28_gen_expr(_1d1921d28_d->_field_model) + jule::Str(",", 1);
			}
			_iter_next_4719661280:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d1921d28_d = *_range_begin; goto _iter_begin_4719661280; }
			_iter_end_4719661280:;
		}
	}
	_62213_obj=_62213_obj.slice(0LL,static_cast<jule::Int>(_62213_obj.len() - 1LL));
	_62213_obj+=jule::Str(")", 1);
	return _62213_obj;
}



inline jule::Str _1d1921d28_gen_builtin_new_call_expr_model(jule::Ref<_1b8dbae99_BuiltinNewCallExprModel> _63140_m) {
	jule::Str _63213_obj = jule::Str("jule::new_ref<", 14);
	_63213_obj+=_1ba1e2b3d_gen_type_kind(_63140_m->_field_kind);
	_63213_obj+=jule::Str(">(", 2);
	if (_63140_m->_field_init != nullptr) {
		_63213_obj+=_1d1921d28_gen_expr(_63140_m->_field_init);
	}
	_63213_obj+=jule::Str(")", 1);
	return _63213_obj;
}



inline jule::Str _1d1921d28_gen_builtin_out_call_expr_model(jule::Ref<_1b8dbae99_BuiltinOutCallExprModel> _64240_m) {
	jule::Str _64313_obj = jule::Str("jule::out(", 10);
	_64313_obj+=_1d1921d28_gen_expr(_64240_m->_field_expr);
	_64313_obj+=jule::Str(")", 1);
	return _64313_obj;
}



inline jule::Str _1d1921d28_gen_builtin_outln_call_expr_model(jule::Ref<_1b8dbae99_BuiltinOutlnCallExprModel> _64942_m) {
	jule::Str _65013_obj = jule::Str("jule::outln(", 12);
	_65013_obj+=_1d1921d28_gen_expr(_64942_m->_field_expr);
	_65013_obj+=jule::Str(")", 1);
	return _65013_obj;
}



inline jule::Str _1d1921d28_gen_builtin_real_call_expr_model(jule::Ref<_1b8dbae99_BuiltinRealCallExprModel> _65641_m) {
	jule::Str _65713_obj = jule::Str("jule::real(", 11);
	_65713_obj+=_1d1921d28_gen_expr(_65641_m->_field_expr);
	_65713_obj+=jule::Str(")", 1);
	return _65713_obj;
}



inline jule::Str _1d1921d28_gen_builtin_drop_call_expr_model(jule::Ref<_1b8dbae99_BuiltinDropCallExprModel> _66341_m) {
	jule::Str _66413_obj = jule::Str("jule::drop(", 11);
	_66413_obj+=_1d1921d28_gen_expr(_66341_m->_field_expr);
	_66413_obj+=jule::Str(")", 1);
	return _66413_obj;
}



inline jule::Str _1d1921d28_gen_builtin_panic_call_expr_model(jule::Ref<_1b8dbae99_BuiltinPanicCallExprModel> _67042_m) {
	jule::Str _67113_obj = jule::Str("jule::panic(", 12);
	_67113_obj+=_1d1921d28_gen_expr(_67042_m->_field_expr);
	_67113_obj+=jule::Str(")", 1);
	return _67113_obj;
}



inline jule::Str _1d1921d28_gen_builtin_make_call_expr_model(jule::Ref<_1b8dbae99_BuiltinMakeCallExprModel> _67741_m) {
	jule::Str _67813_obj = jule::Str("", 0);
	if (_67741_m->_field_len != nullptr) {
		_67813_obj+=_1d1921d28_gen_expr(_67741_m->_field_len);
	} else {
		_67813_obj+=jule::Str("0", 1);
	}
	if (_67741_m->_field_cap != nullptr) {
		_67813_obj+=jule::Str(",", 1) + _1d1921d28_gen_expr(_67741_m->_field_cap);
	}
	if (jule::real(_67741_m->_field_kind->_method_slc()->_field_elem->_method_enm())) {
		_67813_obj+=jule::Str(",", 1);
		_67813_obj+=_1d1921d28_get_init_expr(_67741_m->_field_kind->_method_slc()->_field_elem);
		if (_67741_m->_field_cap != nullptr) {
			_67813_obj=(_1ba1e2b3d_gen_type_kind(_67741_m->_field_kind) + jule::Str("::alloc(", 8)) + _67813_obj;
		} else {
			_67813_obj=(_1ba1e2b3d_gen_type_kind(_67741_m->_field_kind) + jule::Str("::alloc_def(", 12)) + _67813_obj;
		}
	} else {
		_67813_obj=(_1ba1e2b3d_gen_type_kind(_67741_m->_field_kind) + jule::Str("::alloc(", 8)) + _67813_obj;
	}
	_67813_obj+=jule::Str(")", 1);
	return _67813_obj;
}



inline jule::Str _1d1921d28_gen_builtin_append_call_expr_model_assign_opt(jule::Bool _7055_same_dest,jule::Str& _7066_dest_expr,jule::Ref<_1b951b088_TypeKind>& _70710_dest_kind,jule::Ref<_1b8dbae99_SliceExprModel>& _70810_s,jule::Ref<_1b8dbae99_BuiltinAppendCallExprModel>& _70910_m) {
	jule::Str _71013_obj = jule::Str("", 0);
	if ((!(_7055_same_dest))) {
		_71013_obj+=(((((_7066_dest_expr + jule::Str(" = jule::alloc_for_append(", 26)) + _1d1921d28_gen_expr_model(_70910_m->_field_dest)) + jule::Str(",", 1)) + _1d17893cc_itoa(static_cast<jule::I64>(_70810_s->_field_elems.len()))) + jule::Str(")", 1)) + jule::Str(";", 1);
	}
	{
		auto _range_expr = _70810_s->_field_elems;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Any _1d1921d28_e = *_range_begin;
			_iter_begin_4719700640:;
			{
				_71013_obj+=_7066_dest_expr;
				_71013_obj+=_1d1921d28_get_accessor(_70710_dest_kind);
				_71013_obj+=jule::Str("push(", 5);
				_71013_obj+=_1d1921d28_gen_expr_model(_1d1921d28_e);
				_71013_obj+=jule::Str(");", 2);
			}
			_iter_next_4719700640:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d1921d28_e = *_range_begin; goto _iter_begin_4719700640; }
			_iter_end_4719700640:;
		}
	}
	return _71013_obj;
}



inline std::tuple<jule::Str,jule::Bool> _1d1921d28_gen_builtin_append_call_expr_model_assign(jule::Any _72450_dest,jule::Ref<_1b8dbae99_BuiltinAppendCallExprModel> _72471_m) {
	jule::Bool _724110_optimized = jule::Bool();
	{
		auto _match_expr{ _72471_m->_field_elements };
		if (!(_match_expr.type_is<jule::Ref<_1b8dbae99_SliceExprModel>>())) { goto _case_end_4719709264; }
		_case_begin_4719709264:;
		{
			{
				auto _match_expr{ _72450_dest };
				if (!(_match_expr.type_is<jule::Ref<_1b919cb2c_Var>>())) { goto _case_end_4719710992; }
				_case_begin_4719710992:;
				{
					jule::Ref<_1b8dbae99_SliceExprModel> _72921_s = _72471_m->_field_elements.operator jule::Ref<_1b8dbae99_SliceExprModel>();
					jule::Str _73017_dest_expr = _1d1921d28_gen_expr_model(_72450_dest);
					jule::Ref<_1b919cb2c_Var> _73121_dest_var = _72450_dest.operator jule::Ref<_1b919cb2c_Var>();
					jule::Bool _73217_same_dest = _1ba1e2b3d_any_equals_0(_73121_dest_var,_72471_m->_field_dest);
					_724110_optimized = true;
					return std::make_tuple(_1d1921d28_gen_builtin_append_call_expr_model_assign_opt(_73217_same_dest,_73017_dest_expr,_73121_dest_var->_field_kind->_field_kind,_72921_s,_72471_m),_724110_optimized);
				}
				goto _match_end_4719709408;
				_case_end_4719710992:;
				if (!(_match_expr.type_is<jule::Ref<_1b8dbae99_StructSubIdentExprModel>>())) { goto _case_end_4719711184; }
				_case_begin_4719711184:;
				{
					jule::Ref<_1b8dbae99_SliceExprModel> _73721_s = _72471_m->_field_elements.operator jule::Ref<_1b8dbae99_SliceExprModel>();
					jule::Str _73817_dest_expr = _1d1921d28_gen_expr_model(_72450_dest);
					jule::Ref<_1d21c0b59_FieldIns> _73921_dest_field = _72450_dest.operator jule::Ref<_1b8dbae99_StructSubIdentExprModel>()->_field_field;
					jule::Bool _74017_same_dest = _1ba1e2b3d_any_equals_1(_73921_dest_field,_72471_m->_field_dest);
					_724110_optimized = true;
					return std::make_tuple(_1d1921d28_gen_builtin_append_call_expr_model_assign_opt(_74017_same_dest,_73817_dest_expr,_73921_dest_field->_field_kind,_73721_s,_72471_m),_724110_optimized);
				}
				goto _match_end_4719709408;
				_case_end_4719711184:;
				_match_end_4719709408:;
			}
		}
		goto _match_end_4719708656;
		_case_end_4719709264:;
		_match_end_4719708656:;
	}
	_724110_optimized = false;
	return std::make_tuple(_1d1921d28_gen_builtin_append_call_expr_model(_72471_m),_724110_optimized);
}



inline jule::Str _1d1921d28_gen_builtin_append_call_expr_model(jule::Ref<_1b8dbae99_BuiltinAppendCallExprModel> _74943_m) {
	return (((jule::Str("jule::append(", 13) + _1d1921d28_gen_expr_model(_74943_m->_field_dest)) + jule::Str(",", 1)) + _1d1921d28_gen_expr_model(_74943_m->_field_elements)) + jule::Str(")", 1);
}



inline jule::Str _1d1921d28_gen_builtin_clone_call_expr_model(jule::Ref<_1b8dbae99_BuiltinCloneCallExprModel> _75342_m) {
	jule::Str _75413_obj = jule::Str("jule::clone(", 12);
	_75413_obj+=_1d1921d28_gen_expr_model(_75342_m->_field_expr);
	_75413_obj+=jule::Str(")", 1);
	return _75413_obj;
}



inline jule::Str _1d1921d28_gen_sizeof_expr_model(jule::Ref<_1b8dbae99_SizeofExprModel> _76030_m) {
	jule::Str _76113_obj = jule::Str("sizeof(", 7);
	_76113_obj+=_1d1921d28_gen_expr(_76030_m->_field_expr);
	_76113_obj+=jule::Str(")", 1);
	return _76113_obj;
}



inline jule::Str _1d1921d28_gen_alignof_expr_model(jule::Ref<_1b8dbae99_AlignofExprModel> _76731_m) {
	jule::Str _76813_obj = jule::Str("alignof(", 8);
	_76813_obj+=_1d1921d28_gen_expr(_76731_m->_field_expr);
	_76813_obj+=jule::Str(")", 1);
	return _76813_obj;
}



inline jule::Str _1d1921d28_gen_rune_expr_model(jule::Ref<_1b8dbae99_RuneExprModel> _77424_m) {
	if (_77424_m->_field_code <= 127LL) {
		jule::Str _77617_b = _1d1921d28_sbtoa(static_cast<jule::U8>(_77424_m->_field_code));
		if (_77617_b == jule::Str("'", 1)) {
			_77617_b=jule::Str("\\'", 2);
		}
		return (jule::Str("'", 1) + _77617_b) + jule::Str("'", 1);
	}
	return _1d1921d28_i64toa(static_cast<jule::I64>(_77424_m->_field_code));
}



inline jule::Str _1d1921d28_gen_builtin_error_trait_sub_ident_expr_model(jule::Ref<_1b8dbae99_BuiltinErrorTraitSubIdentExprModel> _78553_m) {
	jule::Str _78613_obj = _1d1921d28_gen_expr_model(_78553_m->_field_expr);
	_78613_obj+=jule::Str(".get().", 7);
	_78613_obj+=jule::Str("_method_", 8) + _78553_m->_field_ident;
	return _78613_obj;
}



inline jule::Str _1d1921d28_gen_explicit_deref_expr_model(jule::Ref<_1b8dbae99_ExplicitDerefExprModel> _79238_m) {
	jule::Str _79313_obj = _1d1921d28_gen_expr_model(_79238_m->_field_expr);
	_79313_obj+=jule::Str(".get()", 6);
	return _79313_obj;
}



inline jule::Str _1d1921d28_gen_struct_static_ident_expr_model(jule::Ref<_1b8dbae99_StructStaticIdentExprModel> _79843_m) {
	jule::Str _79913_obj = _1ba1de70b_struct_ins_out_ident(_79843_m->_field_structure);
	_79913_obj+=jule::Str("::", 2);
	_79913_obj+=_1ba1de70b_fn_ins_out_ident(_79843_m->_field_method);
	return _79913_obj;
}



inline jule::Str _1d1921d28_gen_integrated_to_str_expr_model(jule::Ref<_1b8dbae99_IntegratedToStrExprModel> _80541_m) {
	return (jule::Str("jule::to_str(", 13) + _1d1921d28_gen_expr_model(_80541_m->_field_expr)) + jule::Str(")", 1);
}



inline jule::Str _1d1921d28_gen_ternary_expr_model(jule::Ref<_1b8dbae99_TernaryExprModel> _80931_m) {
	return (((((jule::Str("(", 1) + _1d1921d28_gen_expr_model(_80931_m->_field_condition)) + jule::Str(") ? (", 5)) + _1d1921d28_gen_expr_model(_80931_m->_field_true_expr)) + jule::Str(") : (", 5)) + _1d1921d28_gen_expr_model(_80931_m->_field_false_expr)) + jule::Str(")", 1);
}



inline jule::Str _1d1921d28_gen_expr_model(jule::Any _81923_m) {
	{
		auto _match_expr{ _81923_m };
		if (!(_match_expr.type_is<jule::Ref<_1b951b088_TypeKind>>())) { goto _case_end_4719770960; }
		_case_begin_4719770960:;
		{
			return _1ba1e2b3d_gen_type_kind(_81923_m.operator jule::Ref<_1b951b088_TypeKind>());
		}
		goto _match_end_4719765040;
		_case_end_4719770960:;
		if (!(_match_expr.type_is<jule::Ref<_1b9d678e5_Const>>())) { goto _case_end_4719770560; }
		_case_begin_4719770560:;
		{
			return _1d1921d28_gen_const_expr_model(_81923_m.operator jule::Ref<_1b9d678e5_Const>());
		}
		goto _match_end_4719765040;
		_case_end_4719770560:;
		if (!(_match_expr.type_is<jule::Ref<_1b919cb2c_Var>>())) { goto _case_end_4719770672; }
		_case_begin_4719770672:;
		{
			return _1d1921d28_gen_var_expr_model(_81923_m.operator jule::Ref<_1b919cb2c_Var>());
		}
		goto _match_end_4719765040;
		_case_end_4719770672:;
		if (!(_match_expr.type_is<jule::Ref<_1b8cd2894_Trait>>())) { goto _case_end_4719770784; }
		_case_begin_4719770784:;
		{
			return _1ba1de70b_trait_out_ident(_81923_m.operator jule::Ref<_1b8cd2894_Trait>());
		}
		goto _match_end_4719765040;
		_case_end_4719770784:;
		if (!(_match_expr.type_is<jule::Ref<_1d21c0b59_Struct>>())) { goto _case_end_4719770064; }
		_case_begin_4719770064:;
		{
			return _1d1921d28_gen_struct_expr_model(_81923_m.operator jule::Ref<_1d21c0b59_Struct>());
		}
		goto _match_end_4719765040;
		_case_end_4719770064:;
		if (!(_match_expr.type_is<jule::Ref<_1d21c0b59_StructIns>>())) { goto _case_end_4719770176; }
		_case_begin_4719770176:;
		{
			return _1d1921d28_gen_struct_ins_expr_model(_81923_m.operator jule::Ref<_1d21c0b59_StructIns>());
		}
		goto _match_end_4719765040;
		_case_end_4719770176:;
		if (!(_match_expr.type_is<jule::Ref<_1d21d97ee_FnIns>>())) { goto _case_end_4719770288; }
		_case_begin_4719770288:;
		{
			return _1d1921d28_gen_fn_ins_expr_model_common(_81923_m.operator jule::Ref<_1d21d97ee_FnIns>());
		}
		goto _match_end_4719765040;
		_case_end_4719770288:;
		if (!(_match_expr.type_is<jule::Ref<_1b8dbae99_BinopExprModel>>())) { goto _case_end_4719771424; }
		_case_begin_4719771424:;
		{
			return _1d1921d28_gen_binop_expr_model(_81923_m.operator jule::Ref<_1b8dbae99_BinopExprModel>());
		}
		goto _match_end_4719765040;
		_case_end_4719771424:;
		if (!(_match_expr.type_is<jule::Ref<_1b8dbae99_UnaryExprModel>>())) { goto _case_end_4719771536; }
		_case_begin_4719771536:;
		{
			return _1d1921d28_gen_unary_expr_model(_81923_m.operator jule::Ref<_1b8dbae99_UnaryExprModel>());
		}
		goto _match_end_4719765040;
		_case_end_4719771536:;
		if (!(_match_expr.type_is<jule::Ref<_1b8dbae99_GetRefPtrExprModel>>())) { goto _case_end_4719771648; }
		_case_begin_4719771648:;
		{
			return _1d1921d28_gen_get_ref_ptr_expr_model(_81923_m.operator jule::Ref<_1b8dbae99_GetRefPtrExprModel>());
		}
		goto _match_end_4719765040;
		_case_end_4719771648:;
		if (!(_match_expr.type_is<jule::Ref<_1b8dbae99_StructLitExprModel>>())) { goto _case_end_4719772528; }
		_case_begin_4719772528:;
		{
			return _1d1921d28_gen_struct_lit_expr_model(_81923_m.operator jule::Ref<_1b8dbae99_StructLitExprModel>());
		}
		goto _match_end_4719765040;
		_case_end_4719772528:;
		if (!(_match_expr.type_is<jule::Ref<_1b8dbae99_AllocStructLitExprModel>>())) { goto _case_end_4719772640; }
		_case_begin_4719772640:;
		{
			return _1d1921d28_gen_alloc_struct_lit_expr_model(_81923_m.operator jule::Ref<_1b8dbae99_AllocStructLitExprModel>());
		}
		goto _match_end_4719765040;
		_case_end_4719772640:;
		if (!(_match_expr.type_is<jule::Ref<_1b8dbae99_CastingExprModel>>())) { goto _case_end_4719772752; }
		_case_begin_4719772752:;
		{
			return _1d1921d28_gen_casting_expr_model(_81923_m.operator jule::Ref<_1b8dbae99_CastingExprModel>());
		}
		goto _match_end_4719765040;
		_case_end_4719772752:;
		if (!(_match_expr.type_is<jule::Ref<_1b8dbae99_FnCallExprModel>>())) { goto _case_end_4719772864; }
		_case_begin_4719772864:;
		{
			return _1d1921d28_gen_fn_call_expr_model(_81923_m.operator jule::Ref<_1b8dbae99_FnCallExprModel>());
		}
		goto _match_end_4719765040;
		_case_end_4719772864:;
		if (!(_match_expr.type_is<jule::Ref<_1b8dbae99_SliceExprModel>>())) { goto _case_end_4719772976; }
		_case_begin_4719772976:;
		{
			return _1d1921d28_gen_slice_expr_model(_81923_m.operator jule::Ref<_1b8dbae99_SliceExprModel>());
		}
		goto _match_end_4719765040;
		_case_end_4719772976:;
		if (!(_match_expr.type_is<jule::Ref<_1b8dbae99_ArrayExprModel>>())) { goto _case_end_4719773088; }
		_case_begin_4719773088:;
		{
			return _1d1921d28_gen_array_expr_model(_81923_m.operator jule::Ref<_1b8dbae99_ArrayExprModel>());
		}
		goto _match_end_4719765040;
		_case_end_4719773088:;
		if (!(_match_expr.type_is<jule::Ref<_1b8dbae99_IndexigExprModel>>())) { goto _case_end_4719773200; }
		_case_begin_4719773200:;
		{
			return _1d1921d28_gen_indexing_expr_model(_81923_m.operator jule::Ref<_1b8dbae99_IndexigExprModel>());
		}
		goto _match_end_4719765040;
		_case_end_4719773200:;
		if (!(_match_expr.type_is<jule::Ref<_1b8dbae99_AnonFnExprModel>>())) { goto _case_end_4719773312; }
		_case_begin_4719773312:;
		{
			return _1d1921d28_gen_anon_fn_expr_model(_81923_m.operator jule::Ref<_1b8dbae99_AnonFnExprModel>());
		}
		goto _match_end_4719765040;
		_case_end_4719773312:;
		if (!(_match_expr.type_is<jule::Ref<_1b8dbae99_MapExprModel>>())) { goto _case_end_4719773424; }
		_case_begin_4719773424:;
		{
			return _1d1921d28_gen_map_expr_model(_81923_m.operator jule::Ref<_1b8dbae99_MapExprModel>());
		}
		goto _match_end_4719765040;
		_case_end_4719773424:;
		if (!(_match_expr.type_is<jule::Ref<_1b8dbae99_SlicingExprModel>>())) { goto _case_end_4719773536; }
		_case_begin_4719773536:;
		{
			return _1d1921d28_gen_slicing_expr_model(_81923_m.operator jule::Ref<_1b8dbae99_SlicingExprModel>());
		}
		goto _match_end_4719765040;
		_case_end_4719773536:;
		if (!(_match_expr.type_is<jule::Ref<_1b8dbae99_TraitSubIdentExprModel>>())) { goto _case_end_4719773648; }
		_case_begin_4719773648:;
		{
			return _1d1921d28_gen_trait_sub_ident_expr_model(_81923_m.operator jule::Ref<_1b8dbae99_TraitSubIdentExprModel>());
		}
		goto _match_end_4719765040;
		_case_end_4719773648:;
		if (!(_match_expr.type_is<jule::Ref<_1b8dbae99_StructSubIdentExprModel>>())) { goto _case_end_4719773760; }
		_case_begin_4719773760:;
		{
			return _1d1921d28_gen_struct_sub_ident_expr_model(_81923_m.operator jule::Ref<_1b8dbae99_StructSubIdentExprModel>());
		}
		goto _match_end_4719765040;
		_case_end_4719773760:;
		if (!(_match_expr.type_is<jule::Ref<_1b8dbae99_CommonIdentExprModel>>())) { goto _case_end_4719773872; }
		_case_begin_4719773872:;
		{
			return _1d1921d28_gen_common_ident_expr_model(_81923_m.operator jule::Ref<_1b8dbae99_CommonIdentExprModel>());
		}
		goto _match_end_4719765040;
		_case_end_4719773872:;
		if (!(_match_expr.type_is<jule::Ref<_1b8dbae99_CommonSubIdentExprModel>>())) { goto _case_end_4719773984; }
		_case_begin_4719773984:;
		{
			return _1d1921d28_gen_common_sub_ident_expr_model(_81923_m.operator jule::Ref<_1b8dbae99_CommonSubIdentExprModel>());
		}
		goto _match_end_4719765040;
		_case_end_4719773984:;
		if (!(_match_expr.type_is<jule::Ref<_1b8dbae99_TupleExprModel>>())) { goto _case_end_4719774096; }
		_case_begin_4719774096:;
		{
			return _1d1921d28_gen_tuple_expr_model(_81923_m.operator jule::Ref<_1b8dbae99_TupleExprModel>());
		}
		goto _match_end_4719765040;
		_case_end_4719774096:;
		if (!(_match_expr.type_is<jule::Ref<_1b8dbae99_BuiltinOutCallExprModel>>())) { goto _case_end_4719774208; }
		_case_begin_4719774208:;
		{
			return _1d1921d28_gen_builtin_out_call_expr_model(_81923_m.operator jule::Ref<_1b8dbae99_BuiltinOutCallExprModel>());
		}
		goto _match_end_4719765040;
		_case_end_4719774208:;
		if (!(_match_expr.type_is<jule::Ref<_1b8dbae99_BuiltinOutlnCallExprModel>>())) { goto _case_end_4719774320; }
		_case_begin_4719774320:;
		{
			return _1d1921d28_gen_builtin_outln_call_expr_model(_81923_m.operator jule::Ref<_1b8dbae99_BuiltinOutlnCallExprModel>());
		}
		goto _match_end_4719765040;
		_case_end_4719774320:;
		if (!(_match_expr.type_is<jule::Ref<_1b8dbae99_BuiltinNewCallExprModel>>())) { goto _case_end_4719774432; }
		_case_begin_4719774432:;
		{
			return _1d1921d28_gen_builtin_new_call_expr_model(_81923_m.operator jule::Ref<_1b8dbae99_BuiltinNewCallExprModel>());
		}
		goto _match_end_4719765040;
		_case_end_4719774432:;
		if (!(_match_expr.type_is<jule::Ref<_1b8dbae99_BuiltinRealCallExprModel>>())) { goto _case_end_4719774544; }
		_case_begin_4719774544:;
		{
			return _1d1921d28_gen_builtin_real_call_expr_model(_81923_m.operator jule::Ref<_1b8dbae99_BuiltinRealCallExprModel>());
		}
		goto _match_end_4719765040;
		_case_end_4719774544:;
		if (!(_match_expr.type_is<jule::Ref<_1b8dbae99_BuiltinDropCallExprModel>>())) { goto _case_end_4719774656; }
		_case_begin_4719774656:;
		{
			return _1d1921d28_gen_builtin_drop_call_expr_model(_81923_m.operator jule::Ref<_1b8dbae99_BuiltinDropCallExprModel>());
		}
		goto _match_end_4719765040;
		_case_end_4719774656:;
		if (!(_match_expr.type_is<jule::Ref<_1b8dbae99_BuiltinPanicCallExprModel>>())) { goto _case_end_4719774768; }
		_case_begin_4719774768:;
		{
			return _1d1921d28_gen_builtin_panic_call_expr_model(_81923_m.operator jule::Ref<_1b8dbae99_BuiltinPanicCallExprModel>());
		}
		goto _match_end_4719765040;
		_case_end_4719774768:;
		if (!(_match_expr.type_is<jule::Ref<_1b8dbae99_BuiltinMakeCallExprModel>>())) { goto _case_end_4719774896; }
		_case_begin_4719774896:;
		{
			return _1d1921d28_gen_builtin_make_call_expr_model(_81923_m.operator jule::Ref<_1b8dbae99_BuiltinMakeCallExprModel>());
		}
		goto _match_end_4719765040;
		_case_end_4719774896:;
		if (!(_match_expr.type_is<jule::Ref<_1b8dbae99_BuiltinAppendCallExprModel>>())) { goto _case_end_4719775024; }
		_case_begin_4719775024:;
		{
			return _1d1921d28_gen_builtin_append_call_expr_model(_81923_m.operator jule::Ref<_1b8dbae99_BuiltinAppendCallExprModel>());
		}
		goto _match_end_4719765040;
		_case_end_4719775024:;
		if (!(_match_expr.type_is<jule::Ref<_1b8dbae99_BuiltinCloneCallExprModel>>())) { goto _case_end_4719775152; }
		_case_begin_4719775152:;
		{
			return _1d1921d28_gen_builtin_clone_call_expr_model(_81923_m.operator jule::Ref<_1b8dbae99_BuiltinCloneCallExprModel>());
		}
		goto _match_end_4719765040;
		_case_end_4719775152:;
		if (!(_match_expr.type_is<jule::Ref<_1b8dbae99_SizeofExprModel>>())) { goto _case_end_4719775280; }
		_case_begin_4719775280:;
		{
			return _1d1921d28_gen_sizeof_expr_model(_81923_m.operator jule::Ref<_1b8dbae99_SizeofExprModel>());
		}
		goto _match_end_4719765040;
		_case_end_4719775280:;
		if (!(_match_expr.type_is<jule::Ref<_1b8dbae99_AlignofExprModel>>())) { goto _case_end_4719775408; }
		_case_begin_4719775408:;
		{
			return _1d1921d28_gen_alignof_expr_model(_81923_m.operator jule::Ref<_1b8dbae99_AlignofExprModel>());
		}
		goto _match_end_4719765040;
		_case_end_4719775408:;
		if (!(_match_expr.type_is<jule::Ref<_1b8dbae99_RuneExprModel>>())) { goto _case_end_4719775536; }
		_case_begin_4719775536:;
		{
			return _1d1921d28_gen_rune_expr_model(_81923_m.operator jule::Ref<_1b8dbae99_RuneExprModel>());
		}
		goto _match_end_4719765040;
		_case_end_4719775536:;
		if (!(_match_expr.type_is<jule::Ref<_1b8dbae99_BuiltinErrorTraitSubIdentExprModel>>())) { goto _case_end_4719775664; }
		_case_begin_4719775664:;
		{
			return _1d1921d28_gen_builtin_error_trait_sub_ident_expr_model(_81923_m.operator jule::Ref<_1b8dbae99_BuiltinErrorTraitSubIdentExprModel>());
		}
		goto _match_end_4719765040;
		_case_end_4719775664:;
		if (!(_match_expr.type_is<jule::Ref<_1b8dbae99_ExplicitDerefExprModel>>())) { goto _case_end_4719775792; }
		_case_begin_4719775792:;
		{
			return _1d1921d28_gen_explicit_deref_expr_model(_81923_m.operator jule::Ref<_1b8dbae99_ExplicitDerefExprModel>());
		}
		goto _match_end_4719765040;
		_case_end_4719775792:;
		if (!(_match_expr.type_is<jule::Ref<_1b8dbae99_StructStaticIdentExprModel>>())) { goto _case_end_4719775920; }
		_case_begin_4719775920:;
		{
			return _1d1921d28_gen_struct_static_ident_expr_model(_81923_m.operator jule::Ref<_1b8dbae99_StructStaticIdentExprModel>());
		}
		goto _match_end_4719765040;
		_case_end_4719775920:;
		if (!(_match_expr.type_is<jule::Ref<_1b8dbae99_IntegratedToStrExprModel>>())) { goto _case_end_4719776048; }
		_case_begin_4719776048:;
		{
			return _1d1921d28_gen_integrated_to_str_expr_model(_81923_m.operator jule::Ref<_1b8dbae99_IntegratedToStrExprModel>());
		}
		goto _match_end_4719765040;
		_case_end_4719776048:;
		if (!(_match_expr.type_is<jule::Ref<_1b8dbae99_TernaryExprModel>>())) { goto _case_end_4719776176; }
		_case_begin_4719776176:;
		{
			return _1d1921d28_gen_ternary_expr_model(_81923_m.operator jule::Ref<_1b8dbae99_TernaryExprModel>());
		}
		goto _match_end_4719765040;
		_case_end_4719776176:;
		_case_begin_4719766848:;
		{
			return jule::Str("<unimplemented_expression_model>", 32);
		}
		goto _match_end_4719765040;
		_case_end_4719766848:;
		_match_end_4719765040:;
	}
}



inline jule::Str _1d1921d28_gen_expr(jule::Any _95217_e) {
	jule::Str _95313_obj = _1d1921d28_gen_expr_model(_95217_e);
	if (_95313_obj[0LL] != '(') {
		return _95313_obj;
	}
	{
		auto _match_expr{ _95217_e };
		if (!(_match_expr.type_is<jule::Ref<_1b8dbae99_BinopExprModel>>())) { goto _case_end_4719839504; }
		_case_begin_4719839504:;
		{
			_95313_obj=_95313_obj.slice(1LL,static_cast<jule::Int>(_95313_obj.len() - 1LL));
		}
		goto _match_end_4719840144;
		_case_end_4719839504:;
		_match_end_4719840144:;
	}
	return _95313_obj;
}



inline jule::Str _1d1921d28_gen_val(jule::Ref<_1b9523799_Value> _96516_v) {
	if (_96516_v->_field_data->_method_is_const()) {
		return _1d1921d28_gen_const_expr(_96516_v->_field_data);
	}
	return _1d1921d28_gen_expr(_96516_v->_field_data->_field_model);
}



inline jule::Str _1d1921d28_get_init_expr(jule::Ref<_1b951b088_TypeKind> _97222_t) {
	if (jule::real(_97222_t->_method_ptr())) {
		return jule::Str("nullptr", 7);
	}
	jule::Ref<_1b8dae520_Enum> _97713_enm = _97222_t->_method_enm();
	if ((!(jule::real(_97713_enm)))) {
		return _1ba1e2b3d_gen_type_kind(_97222_t) + jule::Str("()", 2);
	}
	return _1d1921d28_gen_val(_97713_enm->_field_items[0LL]->_field_value);
}



inline jule::Str _1ba1e01ce_get_derive_fn_decl_clone(jule::Ref<_1d21c0b59_Struct>& _730_s) {
	jule::Str _813_obj = _1ba1e2b3d_gen_struct_kind(_730_s);
	_813_obj+=jule::Str(" clone(void) const ", 19);
	return _813_obj;
}



inline jule::Str _1ba1e01ce_get_derive_fn_def_clone(jule::Ref<_1d21c0b59_Struct>& _1329_s) {
	jule::Str _1413_obj = _1ba1e2b3d_gen_struct_kind(_1329_s);
	_1413_obj+=(jule::Str(" ", 1) + _1413_obj) + jule::Str("::clone(void) const ", 20);
	return _1413_obj;
}



inline jule::Str _1ba1de70b_as_ident(jule::Str _2513_ident) {
	return jule::Str("_", 1) + _2513_ident;
}



inline jule::Str _1ba1de70b_as_jt(jule::Str _2814_id) {
	if ((97LL <= _2814_id[0LL]) && (_2814_id[0LL] <= 122LL)) {
		_2814_id[0LL]-=32LL;
	}
	return jule::Str("jule::", 6) + _2814_id;
}



inline jule::Str _1ba1de70b_get_addr_as_ident(jule::Uintptr _3622_addr) {
	return jule::Str("_", 1) + _1d17893cc_fmt_uint(static_cast<jule::U64>(_3622_addr),15LL);
}



inline jule::Str _1ba1de70b_as_out_ident(jule::Str _4517_ident,jule::Uintptr _4529_addr) {
	if (_4529_addr != 0LL) {
		return (_1ba1de70b_get_addr_as_ident(_4529_addr) + jule::Str("_", 1)) + _4517_ident;
	}
	return _1ba1de70b_as_ident(_4517_ident);
}



inline jule::Str _1ba1de70b_as_local_ident(jule::Int _5819_row,jule::Int _5829_col,jule::Str _5843_ident) {
	_5843_ident=((_1d17893cc_itoa(_5819_row) + _1d17893cc_itoa(_5829_col)) + jule::Str("_", 1)) + _5843_ident;
	return _1ba1de70b_as_ident(_5843_ident);
}



inline jule::Str _1ba1de70b_fn_out_ident(jule::Ref<_1d21d97ee_Fn>& _6418_f) {
	{
		if (!((_6418_f->_field_cpp_linked))) { goto _case_end_4719874224; }
		_case_begin_4719874224:;
		{
			return _6418_f->_field_ident;
		}
		goto _match_end_4719872000;
		_case_end_4719874224:;
		if (!((_6418_f->_field_ident == jule::Str("main", 4)))) { goto _case_end_4719876208; }
		_case_begin_4719876208:;
		{
			return jule::Str("entry_point", 11);
		}
		goto _match_end_4719872000;
		_case_end_4719876208:;
		if (!((_6418_f->_method_is_method()))) { goto _case_end_4719876320; }
		_case_begin_4719876320:;
		{
			if (_6418_f->_field_statically) {
				return jule::Str("_static_method_", 15) + _6418_f->_field_ident;
			}
			return jule::Str("_method_", 8) + _6418_f->_field_ident;
		}
		goto _match_end_4719872000;
		_case_end_4719876320:;
		_case_begin_4719872192:;
		{
			return _1ba1de70b_as_out_ident(_6418_f->_field_ident,static_cast<jule::Uintptr>(_6418_f->_field_token._field_file->_method_addr()));
		}
		goto _match_end_4719872000;
		_case_end_4719872192:;
		_match_end_4719872000:;
	}
}



inline jule::Str _1ba1de70b_fn_ins_out_ident(jule::Ref<_1d21d97ee_FnIns>& _8426_f) {
	if (_8426_f->_method_is_builtin()) {
		return jule::Str("jule::", 6) + _8426_f->_field_decl->_field_ident;
	}
	if (_8426_f->_field_decl->_field_cpp_linked || (_8426_f->_field_generics.len() == 0LL)) {
		return _1ba1de70b_fn_out_ident(_8426_f->_field_decl);
	}
	{
		auto _range_expr = _8426_f->_field_decl->_field_instances;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ba1de70b_i = 0;
			jule::Ref<_1d21d97ee_FnIns> _1ba1de70b_ins = *_range_begin;
			_iter_begin_4719884704:;
			{
				jule::Ref<_1b951b088_TypeKind> _9413_kind = jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_1ba1de70b_ins));
				if (_8426_f->_method_equals(_9413_kind)) {
					return (_1ba1de70b_fn_out_ident(_8426_f->_field_decl) + jule::Str("_", 1)) + _1d17893cc_itoa(_1ba1de70b_i);
				}
			}
			_iter_next_4719884704:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ba1de70b_i; _1ba1de70b_ins = *_range_begin; goto _iter_begin_4719884704; }
			_iter_end_4719884704:;
		}
	}
	return jule::Str("__?__", 5);
}



inline jule::Str _1ba1de70b_trait_out_ident(jule::Ref<_1b8cd2894_Trait> _10420_t) {
	if (_10420_t->_method_is_builtin()) {
		return jule::Str("jule::", 6) + _10420_t->_field_ident;
	}
	return _1ba1de70b_as_out_ident(_10420_t->_field_ident,static_cast<jule::Uintptr>(_10420_t->_field_token._field_file->_method_addr()));
}



inline jule::Str _1ba1de70b_param_out_ident(jule::Ref<_1d21d97ee_Param>& _11221_p) {
	if (_1d1da4277_is_anon_ident(_11221_p->_field_ident) || _1d1da4277_is_ignore_ident(_11221_p->_field_ident)) {
		return jule::Str("", 0);
	}
	return _1ba1de70b_as_local_ident(_11221_p->_field_token._field_row,_11221_p->_field_token._field_column,_11221_p->_field_ident);
}



inline jule::Str _1ba1de70b_struct_out_ident(jule::Ref<_1d21c0b59_Struct>& _12022_s) {
	if (_12022_s->_field_cpp_linked) {
		if (_1ba1e2b3d_has_directive(_12022_s->_field_directives,jule::Str("typedef", 7))) {
			return _12022_s->_field_ident;
		}
		return jule::Str("struct ", 7) + _12022_s->_field_ident;
	}
	return _1ba1de70b_as_out_ident(_12022_s->_field_ident,static_cast<jule::Uintptr>(_12022_s->_field_token._field_file->_method_addr()));
}



inline jule::Str _1ba1de70b_struct_ins_out_ident(jule::Ref<_1d21c0b59_StructIns>& _13130_s) {
	if (_13130_s->_field_decl->_field_cpp_linked || (_13130_s->_field_generics.len() == 0LL)) {
		return _1ba1de70b_struct_out_ident(_13130_s->_field_decl);
	}
	{
		auto _range_expr = _13130_s->_field_decl->_field_instances;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ba1de70b_i = 0;
			jule::Ref<_1d21c0b59_StructIns> _1ba1de70b_ins = *_range_begin;
			_iter_begin_4719906208:;
			{
				jule::Ref<_1b951b088_TypeKind> _13713_kind = jule::new_struct<_1b951b088_TypeKind>(new( std::nothrow ) _1b951b088_TypeKind(jule::Str(),jule::Bool(),_1ba1de70b_ins));
				if (_13130_s->_method_equals(_13713_kind)) {
					return (_1ba1de70b_struct_out_ident(_13130_s->_field_decl) + jule::Str("_", 1)) + _1d17893cc_itoa(_1ba1de70b_i);
				}
			}
			_iter_next_4719906208:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ba1de70b_i; _1ba1de70b_ins = *_range_begin; goto _iter_begin_4719906208; }
			_iter_end_4719906208:;
		}
	}
	return jule::Str("__?__", 5);
}



inline jule::Str _1ba1de70b_field_out_ident(jule::Ref<_1d21c0b59_Field>& _14721_f) {
	if (_14721_f->_field_owner->_field_cpp_linked) {
		return _14721_f->_field_ident;
	}
	return jule::Str("_field_", 7) + _14721_f->_field_ident;
}



inline jule::Str _1ba1de70b_var_out_ident(jule::Ref<_1b919cb2c_Var> _15522_v) {
	{
		if (!((_15522_v->_field_cpp_linked))) { goto _case_end_4719916528; }
		_case_begin_4719916528:;
		{
			return _15522_v->_field_ident;
		}
		goto _match_end_4719913280;
		_case_end_4719916528:;
		if (!((_15522_v->_field_ident == jule::Str("self", 4)))) { goto _case_end_4719918320; }
		_case_begin_4719918320:;
		{
			if (jule::real(_15522_v->_field_kind->_field_kind->_method_ref())) {
				return jule::Str("this->self", 10);
			}
			return jule::Str("(*this)", 7);
		}
		goto _match_end_4719913280;
		_case_end_4719918320:;
		if (!((jule::real(_15522_v->_field_scope)))) { goto _case_end_4719918432; }
		_case_begin_4719918432:;
		{
			return _1ba1de70b_as_local_ident(_15522_v->_field_token._field_row,_15522_v->_field_token._field_column,_15522_v->_field_ident);
		}
		goto _match_end_4719913280;
		_case_end_4719918432:;
		_case_begin_4719915120:;
		{
			return _1ba1de70b_as_out_ident(_15522_v->_field_ident,static_cast<jule::Uintptr>(_15522_v->_field_token._field_file->_method_addr()));
		}
		goto _match_end_4719913280;
		_case_end_4719915120:;
		_match_end_4719913280:;
	}
}



inline jule::Str _1ba1de70b_iter_begin_label_ident(jule::Uintptr _17527_it) {
	return jule::Str("_iter_begin_", 12) + _1d17893cc_itoa(static_cast<jule::Int>(_17527_it));
}



inline jule::Str _1ba1de70b_iter_end_label_ident(jule::Uintptr _18025_it) {
	return jule::Str("_iter_end_", 10) + _1d17893cc_itoa(static_cast<jule::Int>(_18025_it));
}



inline jule::Str _1ba1de70b_iter_next_label_ident(jule::Uintptr _18526_it) {
	return jule::Str("_iter_next_", 11) + _1d17893cc_itoa(static_cast<jule::Int>(_18526_it));
}



inline jule::Str _1ba1de70b_label_ident(jule::Str _19016_ident) {
	return jule::Str("_julec_label_", 13) + _19016_ident;
}



inline jule::Str _1ba1de70b_match_end_label_ident(jule::Uintptr _19526_m) {
	return jule::Str("_match_end_", 11) + _1d17893cc_itoa(static_cast<jule::Int>(_19526_m));
}



inline jule::Str _1ba1de70b_case_begin_label_ident(jule::Uintptr _20027_c) {
	return jule::Str("_case_begin_", 12) + _1d17893cc_itoa(static_cast<jule::Int>(_20027_c));
}



inline jule::Str _1ba1de70b_case_end_label_ident(jule::Uintptr _20525_c) {
	return jule::Str("_case_end_", 10) + _1d17893cc_itoa(static_cast<jule::Int>(_20525_c));
}



inline jule::Bool _1ba1e2b3d_any_equals_0(jule::Ref<_1b919cb2c_Var>& _2619_first,jule::Any& _2631_other) {
	{
		auto _match_expr{ _2631_other };
		if (!(_match_expr.type_is<jule::Ref<_1b919cb2c_Var>>())) { goto _case_end_4719722528; }
		_case_begin_4719722528:;
		{
			return (_2619_first).alloc == (_2631_other.operator jule::Ref<_1b919cb2c_Var>()).alloc;
		}
		goto _match_end_4719721664;
		_case_end_4719722528:;
		_case_begin_4719722144:;
		{
			return false;
		}
		goto _match_end_4719721664;
		_case_end_4719722144:;
		_match_end_4719721664:;
	}
}

inline jule::Bool _1ba1e2b3d_any_equals_1(jule::Ref<_1d21c0b59_FieldIns>& _2619_first,jule::Any& _2631_other) {
	{
		auto _match_expr{ _2631_other };
		if (!(_match_expr.type_is<jule::Ref<_1d21c0b59_FieldIns>>())) { goto _case_end_4719735824; }
		_case_begin_4719735824:;
		{
			return (_2619_first).alloc == (_2631_other.operator jule::Ref<_1d21c0b59_FieldIns>()).alloc;
		}
		goto _match_end_4719734960;
		_case_end_4719735824:;
		_case_begin_4719735440:;
		{
			return false;
		}
		goto _match_end_4719734960;
		_case_end_4719735440:;
		_match_end_4719734960:;
	}
}



inline jule::Ref<_1d1e5192e_Directive> _1ba1e2b3d_find_directive(jule::Slice<jule::Ref<_1d1e5192e_Directive>>& _3424_directives,jule::Str _3466_tag) {
	{
		auto _range_expr = _3424_directives;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d1e5192e_Directive> _1ba1e2b3d_dr = *_range_begin;
			_iter_begin_4719936016:;
			{
				if (_1ba1e2b3d_dr->_field_tag == _3466_tag) {
					return _1ba1e2b3d_dr;
				}
			}
			_iter_next_4719936016:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ba1e2b3d_dr = *_range_begin; goto _iter_begin_4719936016; }
			_iter_end_4719936016:;
		}
	}
	return jule::new_ref<_1d1e5192e_Directive>();
}



inline jule::Bool _1ba1e2b3d_has_directive(jule::Slice<jule::Ref<_1d1e5192e_Directive>>& _4419_directives,jule::Str _4461_tag) {
	return jule::real(_1ba1e2b3d_find_directive((*((&(_4419_directives)))),_4461_tag));
}



inline jule::Str _1ba1e2b3d_gen_prim_kind(jule::Ref<_1b951b088_Prim> _4918_p) {
	return _1ba1de70b_as_jt(_4918_p->_method_to_str());
}



inline jule::Str _1ba1e2b3d_gen_tuple_kind(jule::Ref<_1b951b088_Tuple> _5423_t) {
	jule::Str _5513_obj = jule::Str("std::tuple<", 11);
	{
		auto _range_expr = _5423_t->_field_types;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b951b088_TypeKind> _1ba1e2b3d_tk = *_range_begin;
			_iter_begin_4719943792:;
			{
				_5513_obj+=_1ba1e2b3d_gen_type_kind(_1ba1e2b3d_tk) + jule::Str(",", 1);
			}
			_iter_next_4719943792:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ba1e2b3d_tk = *_range_begin; goto _iter_begin_4719943792; }
			_iter_end_4719943792:;
		}
	}
	_5513_obj=_5513_obj.slice(0LL,static_cast<jule::Int>(_5513_obj.len() - 1LL));
	return _5513_obj + jule::Str(">", 1);
}



inline jule::Str _1ba1e2b3d_as_ref_kind(jule::Str _6416_elem) {
	jule::Str _659_ref = _1ba1de70b_as_jt(jule::Str("ref", 3));
	return ((_659_ref + jule::Str("<", 1)) + _6416_elem) + jule::Str(">", 1);
}



inline jule::Str _1ba1e2b3d_gen_ref_kind(jule::Ref<_1b951b088_Ref> _7021_r) {
	jule::Str _719_elem = _1ba1e2b3d_gen_type_kind(_7021_r->_field_elem);
	return _1ba1e2b3d_as_ref_kind(_719_elem);
}



inline jule::Str _1ba1e2b3d_gen_ptr_kind(jule::Ref<_1b951b088_Ptr> _7621_p) {
	
	if (_7621_p->_method_is_unsafe()) {
		return jule::Str("void*", 5);
	}
	jule::Str _829_elem = _1ba1e2b3d_gen_type_kind(_7621_p->_field_elem);
	return _829_elem + jule::Str("*", 1);
}



inline jule::Str _1ba1e2b3d_gen_enum_kind(jule::Ref<_1b8dae520_Enum> _8722_e) {
	return _1ba1e2b3d_gen_type_kind(_8722_e->_field_kind->_field_kind);
}



inline jule::Str _1ba1e2b3d_as_slice_kind(jule::Ref<_1b951b088_TypeKind> _9122_elem) {
	jule::Str _929_elem_s = _1ba1e2b3d_gen_type_kind(_9122_elem);
	jule::Str _939_slc = _1ba1de70b_as_jt(jule::Str("slice", 5));
	return ((_939_slc + jule::Str("<", 1)) + _929_elem_s) + jule::Str(">", 1);
}



inline jule::Str _1ba1e2b3d_gen_slice_kind(jule::Ref<_1b951b088_Slc> _9823_s) {
	return _1ba1e2b3d_as_slice_kind(_9823_s->_field_elem);
}



inline jule::Str _1ba1e2b3d_gen_map_kind(jule::Ref<_1b951b088_Map> _10321_m) {
	jule::Str _1049_key = _1ba1e2b3d_gen_type_kind(_10321_m->_field_key);
	jule::Str _1059_val = _1ba1e2b3d_gen_type_kind(_10321_m->_field_val);
	jule::Str _1069__map = _1ba1de70b_as_jt(jule::Str("map", 3));
	return ((((_1069__map + jule::Str("<", 1)) + _1049_key) + jule::Str(",", 1)) + _1059_val) + jule::Str(">", 1);
}



inline jule::Str _1ba1e2b3d_gen_trait_kind_from_ident(jule::Str _11030_ident) {
	jule::Str _1119_trt = _1ba1de70b_as_jt(jule::Str("trait", 5));
	return ((_1119_trt + jule::Str("<", 1)) + _11030_ident) + jule::Str(">", 1);
}



inline jule::Str _1ba1e2b3d_gen_trait_kind(jule::Ref<_1b8cd2894_Trait> _11619_t) {
	jule::Str _1179_ident = _1ba1de70b_trait_out_ident(_11619_t);
	return _1ba1e2b3d_gen_trait_kind_from_ident(_1179_ident);
}



inline jule::Str _1ba1e2b3d_gen_struct_kind(jule::Ref<_1d21c0b59_Struct> _12220_s) {
	jule::Str _12313_rep = jule::Str("", 0);
	if (_12220_s->_field_cpp_linked && (!(_1ba1e2b3d_has_directive(_12220_s->_field_directives,jule::Str("typedef", 7))))) {
		_12313_rep+=jule::Str("struct ", 7);
	}
	_12313_rep+=_1ba1de70b_struct_out_ident(_12220_s);
	return _12313_rep;
}



inline jule::Str _1ba1e2b3d_gen_struct_kind_ins(jule::Ref<_1d21c0b59_StructIns> _13328_s) {
	if (_13328_s->_field_decl->_field_cpp_linked) {
		jule::Str _13517_ident = _1ba1de70b_struct_ins_out_ident(_13328_s);
		if (_13328_s->_field_generics.len() > 0LL) {
			_13517_ident+=jule::Str("<", 1);
			{
				auto _range_expr = _13328_s->_field_generics;
				if (_range_expr.begin() != _range_expr.end()) {
					auto _range_begin = _range_expr.begin();
					const auto _range_end = _range_expr.end();
					jule::Ref<_1b951b088_TypeKind> _1ba1e2b3d_g = *_range_begin;
					_iter_begin_4719980992:;
					{
						_13517_ident+=_1ba1e2b3d_gen_type_kind(_1ba1e2b3d_g) + jule::Str(",", 1);
					}
					_iter_next_4719980992:;
					++_range_begin;
					if (_range_begin != _range_end) { _1ba1e2b3d_g = *_range_begin; goto _iter_begin_4719980992; }
					_iter_end_4719980992:;
				}
			}
			_13517_ident=_13517_ident.slice(0LL,static_cast<jule::Int>(_13517_ident.len() - 1LL));
			_13517_ident+=jule::Str(">", 1);
		}
		jule::Ref<_1d1e5192e_Directive> _14413_d = _1ba1e2b3d_find_directive(_13328_s->_field_decl->_field_directives,jule::Str("namespace", 9));
		if (jule::real(_14413_d)) {
			_13517_ident=(_1d1921d28_concat_all_parts(_14413_d->_field_args) + jule::Str("::", 2)) + _13517_ident;
		}
		return _13517_ident;
	}
	return _1ba1de70b_struct_ins_out_ident(_13328_s);
}



inline jule::Str _1ba1e2b3d_gen_array_kind(jule::Ref<_1b951b088_Arr> _15423_a) {
	jule::Str _1559_arr = _1ba1de70b_as_jt(jule::Str("array", 5));
	jule::Str _1569_elem = _1ba1e2b3d_gen_type_kind(_15423_a->_field_elem);
	jule::Str _1579_size = _1d17893cc_itoa(_15423_a->_field_n);
	return ((((_1559_arr + jule::Str("<", 1)) + _1569_elem) + jule::Str(",", 1)) + _1579_size) + jule::Str(">", 1);
}



inline jule::Str _1ba1e2b3d_gen_fn_anon_decl(jule::Ref<_1d21d97ee_FnIns> _16125_f) {
	jule::Str _16213_decl = _1ba263eab_gen_fn_ins_result(_16125_f);
	_16213_decl+=jule::Str("(", 1);
	if (_16125_f->_field_params.len() > 0LL) {
		{
			auto _range_expr = _16125_f->_field_params;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_1d21d97ee_ParamIns> _1ba1e2b3d_param = *_range_begin;
				_iter_begin_4719996736:;
				{
					if (_1ba1e2b3d_param->_field_decl->_method_is_self()) {
						goto _iter_next_4719996736;
					}
					_16213_decl+=_1ba263eab_gen_param_ins_prototype(_1ba1e2b3d_param);
					_16213_decl+=jule::Str(",", 1);
				}
				_iter_next_4719996736:;
				++_range_begin;
				if (_range_begin != _range_end) { _1ba1e2b3d_param = *_range_begin; goto _iter_begin_4719996736; }
				_iter_end_4719996736:;
			}
		}
		_16213_decl=_16213_decl.slice(0LL,static_cast<jule::Int>(_16213_decl.len() - 1LL));
	} else {
		_16213_decl+=jule::Str("void", 4);
	}
	_16213_decl+=jule::Str(")", 1);
	return _16213_decl;
}



inline jule::Str _1ba1e2b3d_gen_fn_kind(jule::Ref<_1d21d97ee_FnIns> _18420_f) {
	jule::Str _1859_fnc = _1ba1de70b_as_jt(jule::Str("fn", 2));
	jule::Str _1869_decl = _1ba1e2b3d_gen_fn_anon_decl(_18420_f);
	return ((_1859_fnc + jule::Str("<", 1)) + _1869_decl) + jule::Str(">", 1);
}



inline jule::Str _1ba1e2b3d_gen_type_kind(jule::Ref<_1b951b088_TypeKind> _19122_k) {
	{
		if (!((_19122_k->_method_cpp_linked()))) { goto _case_end_4720010000; }
		_case_begin_4720010000:;
		{
			return _19122_k->_field_cpp_ident;
		}
		goto _match_end_4720007280;
		_case_end_4720010000:;
		if (!((jule::real(_19122_k->_method_prim())))) { goto _case_end_4720009568; }
		_case_begin_4720009568:;
		{
			return _1ba1e2b3d_gen_prim_kind(_19122_k->_method_prim());
		}
		goto _match_end_4720007280;
		_case_end_4720009568:;
		if (!((jule::real(_19122_k->_method_tup())))) { goto _case_end_4720009760; }
		_case_begin_4720009760:;
		{
			return _1ba1e2b3d_gen_tuple_kind(_19122_k->_method_tup());
		}
		goto _match_end_4720007280;
		_case_end_4720009760:;
		if (!((jule::real(_19122_k->_method_ref())))) { goto _case_end_4720010208; }
		_case_begin_4720010208:;
		{
			return _1ba1e2b3d_gen_ref_kind(_19122_k->_method_ref());
		}
		goto _match_end_4720007280;
		_case_end_4720010208:;
		if (!((jule::real(_19122_k->_method_ptr())))) { goto _case_end_4720010320; }
		_case_begin_4720010320:;
		{
			return _1ba1e2b3d_gen_ptr_kind(_19122_k->_method_ptr());
		}
		goto _match_end_4720007280;
		_case_end_4720010320:;
		if (!((jule::real(_19122_k->_method_enm())))) { goto _case_end_4720010432; }
		_case_begin_4720010432:;
		{
			return _1ba1e2b3d_gen_enum_kind(_19122_k->_method_enm());
		}
		goto _match_end_4720007280;
		_case_end_4720010432:;
		if (!((jule::real(_19122_k->_method_slc())))) { goto _case_end_4720008608; }
		_case_begin_4720008608:;
		{
			return _1ba1e2b3d_gen_slice_kind(_19122_k->_method_slc());
		}
		goto _match_end_4720007280;
		_case_end_4720008608:;
		if (!((jule::real(_19122_k->_method_map())))) { goto _case_end_4720008720; }
		_case_begin_4720008720:;
		{
			return _1ba1e2b3d_gen_map_kind(_19122_k->_method_map());
		}
		goto _match_end_4720007280;
		_case_end_4720008720:;
		if (!((jule::real(_19122_k->_method_trt())))) { goto _case_end_4720008832; }
		_case_begin_4720008832:;
		{
			return _1ba1e2b3d_gen_trait_kind(_19122_k->_method_trt());
		}
		goto _match_end_4720007280;
		_case_end_4720008832:;
		if (!((jule::real(_19122_k->_method_strct())))) { goto _case_end_4720010624; }
		_case_begin_4720010624:;
		{
			return _1ba1e2b3d_gen_struct_kind_ins(_19122_k->_method_strct());
		}
		goto _match_end_4720007280;
		_case_end_4720010624:;
		if (!((jule::real(_19122_k->_method_arr())))) { goto _case_end_4720010736; }
		_case_begin_4720010736:;
		{
			return _1ba1e2b3d_gen_array_kind(_19122_k->_method_arr());
		}
		goto _match_end_4720007280;
		_case_end_4720010736:;
		if (!((jule::real(_19122_k->_method_fnc())))) { goto _case_end_4720010848; }
		_case_begin_4720010848:;
		{
			return _1ba1e2b3d_gen_fn_kind(_19122_k->_method_fnc());
		}
		goto _match_end_4720007280;
		_case_end_4720010848:;
		_case_begin_4720006864:;
		{
			return jule::Str("[<unimplemented_type_kind>]", 27);
		}
		goto _match_end_4720007280;
		_case_end_4720006864:;
		_match_end_4720007280:;
	}
}



inline void _1ba263eab_add_indent(void) {
	(_1ba263eab_INDENT)++;
}



inline void _1ba263eab_done_indent(void) {
	(_1ba263eab_INDENT)--;
}



inline jule::Str _1ba263eab_indent(void) {
	
	if (_1ba263eab_INDENT == 0LL) {
		return jule::Str("", 0);
	}
	jule::Str _6213_s = jule::Str("", 0);
	jule::Int _6313_i = 0LL;
	_iter_begin_4720032368:;
	if (!(_6313_i < _1ba263eab_INDENT)) { goto _iter_end_4720032368; }
	{
		_6213_s+=jule::Str("\t", 1);
	}
	_iter_next_4720032368:;
	(_6313_i)++;
	goto _iter_begin_4720032368;
	_iter_end_4720032368:;
	return _6213_s;
}



inline jule::Bool _1ba263eab_is_cpp_header_file(jule::Str _7023_path) {
	jule::Int _719_offset = _7023_path.rfind(jule::Str(".", 1));
	if (_719_offset == -1LL) {
		return false;
	}
	return _1d05571bd_is_valid_header_ext(_7023_path.slice(static_cast<jule::Int>(_719_offset)));
}



inline jule::Str _1ba263eab_gen_links(jule::Ref<_1d1818549_IR>& _7919_ir) {
	jule::Str _8013_obj = jule::Str("", 0);
	{
		auto _range_expr = _7919_ir->_field_used;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b8e0c01d_ImportInfo> _1ba263eab_pkg = *_range_begin;
			_iter_begin_4720040128:;
			{
				{
					if (!(((!(_1ba263eab_pkg->_field_cpp_linked))))) { goto _case_end_4720042048; }
					_case_begin_4720042048:;
					{
						goto _iter_next_4720040128;
					}
					goto _match_end_4720041808;
					_case_end_4720042048:;
					if (!((_1d05571bd_is_std_header_path(_1ba263eab_pkg->_field_path)))) { goto _case_end_4720042176; }
					_case_begin_4720042176:;
					{
						_8013_obj+=(jule::Str("#include ", 9) + _1ba263eab_pkg->_field_path) + jule::Str("\n", 1);
					}
					goto _match_end_4720041808;
					_case_end_4720042176:;
					_match_end_4720041808:;
				}
			}
			_iter_next_4720040128:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ba263eab_pkg = *_range_begin; goto _iter_begin_4720040128; }
			_iter_end_4720040128:;
		}
	}
	{
		auto _range_expr = _7919_ir->_field_used;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b8e0c01d_ImportInfo> _1ba263eab_pkg = *_range_begin;
			_iter_begin_4720045088:;
			{
				{
					if (!(((!(_1ba263eab_pkg->_field_cpp_linked))))) { goto _case_end_4720047072; }
					_case_begin_4720047072:;
					{
						goto _iter_next_4720045088;
					}
					goto _match_end_4720046832;
					_case_end_4720047072:;
					if (!((_1ba263eab_is_cpp_header_file(_1ba263eab_pkg->_field_path)))) { goto _case_end_4720047200; }
					_case_begin_4720047200:;
					{
						_8013_obj+=(jule::Str("#include \"", 10) + _1ba263eab_pkg->_field_path) + jule::Str("\"\n", 2);
					}
					goto _match_end_4720046832;
					_case_end_4720047200:;
					_match_end_4720046832:;
				}
			}
			_iter_next_4720045088:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ba263eab_pkg = *_range_begin; goto _iter_begin_4720045088; }
			_iter_end_4720045088:;
		}
	}
	return _8013_obj;
}



inline jule::Str _1ba263eab_gen_fn_result(jule::Ref<_1d21d97ee_Fn>& _10423_f) {
	if (_10423_f->_method_is_void()) {
		return jule::Str("void", 4);
	}
	return _1ba1e2b3d_gen_type_kind(_10423_f->_field_result->_field_kind->_field_kind);
}



inline jule::Str _1ba263eab_gen_fn_ins_result(jule::Ref<_1d21d97ee_FnIns>& _11227_f) {
	if (_11227_f->_field_decl->_method_is_void()) {
		return jule::Str("void", 4);
	}
	return _1ba1e2b3d_gen_type_kind(_11227_f->_field_result);
}



inline jule::Str _1ba263eab_gen_param_prototype(jule::Ref<_1d21d97ee_Param>& _12029_p) {
	jule::Str _12113_obj = jule::Str("", 0);
	if (_12029_p->_field_variadic) {
		_12113_obj+=_1ba1de70b_as_jt(jule::Str("slice", 5));
		_12113_obj+=jule::Str("<", 1);
		_12113_obj+=_1ba1e2b3d_gen_type_kind(_12029_p->_field_kind->_field_kind);
		_12113_obj+=jule::Str(">", 1);
	} else {
		_12113_obj+=_1ba1e2b3d_gen_type_kind(_12029_p->_field_kind->_field_kind);
	}
	return _12113_obj;
}



inline jule::Str _1ba263eab_gen_param_ins(jule::Ref<_1d21d97ee_ParamIns>& _13423_p) {
	jule::Str _13513_obj = _1ba263eab_gen_param_ins_prototype(_13423_p);
	_13513_obj+=jule::Str(" ", 1);
	_13513_obj+=_1ba1de70b_param_out_ident(_13423_p->_field_decl);
	return _13513_obj;
}



inline jule::Str _1ba263eab_gen_param_ins_prototype(jule::Ref<_1d21d97ee_ParamIns>& _14233_p) {
	jule::Str _14313_obj = jule::Str("", 0);
	if (_14233_p->_field_decl->_field_variadic) {
		_14313_obj+=_1ba1de70b_as_jt(jule::Str("slice", 5));
		_14313_obj+=jule::Str("<", 1);
		_14313_obj+=_1ba1e2b3d_gen_type_kind(_14233_p->_field_kind);
		_14313_obj+=jule::Str(">", 1);
	} else {
		_14313_obj+=_1ba1e2b3d_gen_type_kind(_14233_p->_field_kind);
	}
	if (_14233_p->_field_decl->_field_reference) {
		_14313_obj+=jule::Str("&", 1);
	}
	return _14313_obj;
}



inline jule::Str _1ba263eab_gen_param(jule::Ref<_1d21d97ee_Param>& _16119_p) {
	jule::Str _16213_obj = _1ba263eab_gen_param_prototype(_16119_p);
	if (((_16119_p->_field_ident != jule::Str("", 0)) && (!(_1d1da4277_is_ignore_ident(_16119_p->_field_ident)))) && (!(_1d1da4277_is_anon_ident(_16119_p->_field_ident)))) {
		_16213_obj+=jule::Str(" ", 1) + _1ba1de70b_param_out_ident(_16119_p);
	}
	return _16213_obj;
}



inline jule::Str _1ba263eab_gen_params(jule::Slice<jule::Ref<_1d21d97ee_Param>>& _17020_params) {
	{
		if (!((_17020_params.len() == 0LL))) { goto _case_end_4720076864; }
		_case_begin_4720076864:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_4720076624;
		_case_end_4720076864:;
		if (!(((_17020_params.len() == 1LL) && _17020_params[0LL]->_method_is_self()))) { goto _case_end_4720076992; }
		_case_begin_4720076992:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_4720076624;
		_case_end_4720076992:;
		_match_end_4720076624:;
	}
	jule::Str _17913_obj = jule::Str("(", 1);
	{
		auto _range_expr = _17020_params;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d21d97ee_Param> _1ba263eab_p = *_range_begin;
			_iter_begin_4720080960:;
			{
				if ((!(_1ba263eab_p->_method_is_self()))) {
					_17913_obj+=_1ba263eab_gen_param(_1ba263eab_p) + jule::Str(",", 1);
				}
			}
			_iter_next_4720080960:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ba263eab_p = *_range_begin; goto _iter_begin_4720080960; }
			_iter_end_4720080960:;
		}
	}
	_17913_obj=_17913_obj.slice(0LL,static_cast<jule::Int>(_17913_obj.len() - 1LL));
	return _17913_obj + jule::Str(")", 1);
}



inline jule::Str _1ba263eab_gen_params_ins(jule::Slice<jule::Ref<_1d21d97ee_ParamIns>>& _19124_params) {
	{
		if (!((_19124_params.len() == 0LL))) { goto _case_end_4720086720; }
		_case_begin_4720086720:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_4720086560;
		_case_end_4720086720:;
		if (!(((_19124_params.len() == 1LL) && _19124_params[0LL]->_field_decl->_method_is_self()))) { goto _case_end_4720086848; }
		_case_begin_4720086848:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_4720086560;
		_case_end_4720086848:;
		_match_end_4720086560:;
	}
	jule::Str _20013_obj = jule::Str("(", 1);
	{
		auto _range_expr = _19124_params;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d21d97ee_ParamIns> _1ba263eab_p = *_range_begin;
			_iter_begin_4720091040:;
			{
				if ((!(_1ba263eab_p->_field_decl->_method_is_self()))) {
					_20013_obj+=_1ba263eab_gen_param_ins(_1ba263eab_p) + jule::Str(",", 1);
				}
			}
			_iter_next_4720091040:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ba263eab_p = *_range_begin; goto _iter_begin_4720091040; }
			_iter_end_4720091040:;
		}
	}
	_20013_obj=_20013_obj.slice(0LL,static_cast<jule::Int>(_20013_obj.len() - 1LL));
	return _20013_obj + jule::Str(")", 1);
}



inline jule::Str _1ba263eab_gen_params_prototypes(jule::Slice<jule::Ref<_1d21d97ee_ParamIns>>& _21331_params) {
	{
		if (!((_21331_params.len() == 0LL))) { goto _case_end_4720097024; }
		_case_begin_4720097024:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_4720096864;
		_case_end_4720097024:;
		if (!(((_21331_params.len() == 1LL) && _21331_params[0LL]->_field_decl->_method_is_self()))) { goto _case_end_4720097152; }
		_case_begin_4720097152:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_4720096864;
		_case_end_4720097152:;
		_match_end_4720096864:;
	}
	jule::Str _22213_obj = jule::Str("(", 1);
	{
		auto _range_expr = _21331_params;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d21d97ee_ParamIns> _1ba263eab_p = *_range_begin;
			_iter_begin_4720101696:;
			{
				if ((!(_1ba263eab_p->_field_decl->_method_is_self()))) {
					_22213_obj+=_1ba263eab_gen_param_ins_prototype(_1ba263eab_p) + jule::Str(",", 1);
				}
			}
			_iter_next_4720101696:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ba263eab_p = *_range_begin; goto _iter_begin_4720101696; }
			_iter_end_4720101696:;
		}
	}
	_22213_obj=_22213_obj.slice(0LL,static_cast<jule::Int>(_22213_obj.len() - 1LL));
	return _22213_obj + jule::Str(")", 1);
}



inline jule::Str _1ba263eab_gen_trait(jule::Ref<_1b8cd2894_Trait>& _23519_t) {
	
	jule::Str _2379_outid = _1ba1de70b_trait_out_ident(_23519_t);
	jule::Str _23913_obj = jule::Str("struct ", 7);
	_23913_obj+=_2379_outid;
	_23913_obj+=jule::Str(" {\n", 3);
	_23913_obj+=jule::Str("\t", 1);
	_23913_obj+=jule::Str("virtual ~", 9);
	_23913_obj+=_2379_outid;
	_23913_obj+=jule::Str("(void) {}\n\n", 11);
	{
		auto _range_expr = _23519_t->_field_methods;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d21d97ee_Fn> _1ba263eab_f = *_range_begin;
			_iter_begin_4720112352:;
			{
				_23913_obj+=jule::Str("\t", 1);
				_23913_obj+=jule::Str("virtual ", 8);
				_23913_obj+=_1ba263eab_gen_fn_result(_1ba263eab_f);
				_23913_obj+=jule::Str(" _method_", 9);
				_23913_obj+=_1ba263eab_f->_field_ident;
				_23913_obj+=_1ba263eab_gen_params(_1ba263eab_f->_field_params);
				_23913_obj+=jule::Str(" {", 2);
				if ((!(_1ba263eab_f->_method_is_void()))) {
					_23913_obj+=jule::Str(" return {}; ", 12);
				}
				_23913_obj+=jule::Str("}\n", 2);
			}
			_iter_next_4720112352:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ba263eab_f = *_range_begin; goto _iter_begin_4720112352; }
			_iter_end_4720112352:;
		}
	}
	_23913_obj+=jule::Str("};", 2);
	return _23913_obj;
}



inline jule::Str _1ba263eab_gen_traits_tbl(jule::Ref<_1b9390d86_SymbolTable>& _26424_tbl) {
	jule::Str _26513_obj = jule::Str("", 0);
	{
		auto _range_expr = _26424_tbl->_field_traits;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b8cd2894_Trait> _1ba263eab_t = *_range_begin;
			_iter_begin_4720119360:;
			{
				_26513_obj+=_1ba263eab_gen_trait(_1ba263eab_t) + jule::Str("\n\n", 2);
			}
			_iter_next_4720119360:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ba263eab_t = *_range_begin; goto _iter_begin_4720119360; }
			_iter_end_4720119360:;
		}
	}
	return _26513_obj;
}



inline jule::Str _1ba263eab_gen_traits_pkg(jule::Ref<_1b8e0c01d_Package>& _27324_pkg) {
	jule::Str _27413_obj = jule::Str("", 0);
	{
		auto _range_expr = _27324_pkg->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b9390d86_SymbolTable> _1ba263eab_tbl = *_range_begin;
			_iter_begin_4720123312:;
			{
				_27413_obj+=_1ba263eab_gen_traits_tbl(_1ba263eab_tbl);
			}
			_iter_next_4720123312:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ba263eab_tbl = *_range_begin; goto _iter_begin_4720123312; }
			_iter_end_4720123312:;
		}
	}
	return _27413_obj;
}



inline jule::Str _1ba263eab_gen_traits(jule::Ref<_1d1818549_IR>& _28220_ir) {
	jule::Str _28313_obj = jule::Str("", 0);
	{
		auto _range_expr = _28220_ir->_field_used;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b8e0c01d_ImportInfo> _1ba263eab_u = *_range_begin;
			_iter_begin_4720127056:;
			{
				if ((!(_1ba263eab_u->_field_cpp_linked))) {
					_28313_obj+=_1ba263eab_gen_traits_pkg(_1ba263eab_u->_field_package);
				}
			}
			_iter_next_4720127056:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ba263eab_u = *_range_begin; goto _iter_begin_4720127056; }
			_iter_end_4720127056:;
		}
	}
	_28313_obj+=_1ba263eab_gen_traits_pkg(_28220_ir->_field_main);
	return _28313_obj;
}



inline jule::Str _1ba263eab_gen_trait_prototype(jule::Ref<_1b8cd2894_Trait>& _29425_t) {
	return (jule::Str("struct ", 7) + _1ba1de70b_trait_out_ident(_29425_t)) + jule::Str(";", 1);
}



inline jule::Str _1ba263eab_gen_trait_prototypes(jule::Ref<_1b8e0c01d_Package>& _29930_p) {
	jule::Str _30013_obj = jule::Str("", 0);
	{
		auto _range_expr = _29930_p->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b9390d86_SymbolTable> _1ba263eab_f = *_range_begin;
			_iter_begin_4720133952:;
			{
				{
					auto _range_expr = _1ba263eab_f->_field_traits;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Ref<_1b8cd2894_Trait> _1ba263eab_t = *_range_begin;
						_iter_begin_4720135744:;
						{
							if (_1ba263eab_t->_field_token._field_id != 0LLU) {
								_30013_obj+=_1ba263eab_gen_trait_prototype(_1ba263eab_t) + jule::Str("\n", 1);
							}
						}
						_iter_next_4720135744:;
						++_range_begin;
						if (_range_begin != _range_end) { _1ba263eab_t = *_range_begin; goto _iter_begin_4720135744; }
						_iter_end_4720135744:;
					}
				}
			}
			_iter_next_4720133952:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ba263eab_f = *_range_begin; goto _iter_begin_4720133952; }
			_iter_end_4720133952:;
		}
	}
	return _30013_obj;
}



inline jule::Str _1ba263eab_gen_struct_plain_prototype(jule::Ref<_1d21c0b59_Struct>& _31236_s) {
	jule::Str _31313_obj = jule::Str("", 0);
	{
		auto _range_expr = _31236_s->_field_instances;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d21c0b59_StructIns> _1ba263eab_ins = *_range_begin;
			_iter_begin_4720140240:;
			{
				_31313_obj+=jule::Str("\nstruct ", 8);
				_31313_obj+=_1ba1de70b_struct_ins_out_ident(_1ba263eab_ins);
				_31313_obj+=jule::Str(";", 1);
				_31313_obj+=jule::Str("\n", 1);
			}
			_iter_next_4720140240:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ba263eab_ins = *_range_begin; goto _iter_begin_4720140240; }
			_iter_end_4720140240:;
		}
	}
	return _31313_obj;
}



inline jule::Str _1ba263eab_gen_struct_plain_prototypes(jule::Slice<jule::Ref<_1d21c0b59_Struct>>& _32437_structs) {
	jule::Str _32513_obj = jule::Str("", 0);
	{
		auto _range_expr = _32437_structs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d21c0b59_Struct> _1ba263eab_s = *_range_begin;
			_iter_begin_4720144480:;
			{
				if ((!(_1ba263eab_s->_field_cpp_linked)) && (_1ba263eab_s->_field_token._field_id != 0LLU)) {
					_32513_obj+=_1ba263eab_gen_struct_plain_prototype(_1ba263eab_s) + jule::Str("\n", 1);
				}
			}
			_iter_next_4720144480:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ba263eab_s = *_range_begin; goto _iter_begin_4720144480; }
			_iter_end_4720144480:;
		}
	}
	return _32513_obj;
}



inline jule::Str _1ba263eab_gen_struct_traits(jule::Ref<_1d21c0b59_Struct>& _33523_s) {
	if (_33523_s->_field_implements.len() == 0LL) {
		return jule::Str("", 0);
	}
	jule::Str _34013_obj = jule::Str(": ", 2);
	{
		auto _range_expr = _33523_s->_field_implements;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b8cd2894_Trait> _1ba263eab_i = *_range_begin;
			_iter_begin_4720151104:;
			{
				_34013_obj+=jule::Str("public ", 7);
				_34013_obj+=_1ba1de70b_trait_out_ident(_1ba263eab_i);
				_34013_obj+=jule::Str(",", 1);
			}
			_iter_next_4720151104:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ba263eab_i = *_range_begin; goto _iter_begin_4720151104; }
			_iter_end_4720151104:;
		}
	}
	_34013_obj=_34013_obj.slice(0LL,static_cast<jule::Int>(_34013_obj.len() - 1LL));
	return _34013_obj;
}



inline jule::Str _1ba263eab_gen_field_decl(jule::Ref<_1d21c0b59_FieldIns>& _35124_f) {
	jule::Str _35213_obj = _1ba1e2b3d_gen_type_kind(_35124_f->_field_kind) + jule::Str(" ", 1);
	_35213_obj+=_1ba1de70b_field_out_ident(_35124_f->_field_decl);
	_35213_obj+=(jule::Str("{", 1) + _1d1921d28_get_init_expr(_35124_f->_field_kind)) + jule::Str("}", 1);
	_35213_obj+=jule::Str(";", 1);
	return _35213_obj;
}



inline jule::Str _1ba263eab_gen_struct_self_field_type_kind(jule::Ref<_1d21c0b59_StructIns>& _36041_s) {
	return _1ba1e2b3d_as_ref_kind(_1ba1e2b3d_gen_struct_kind_ins(_36041_s));
}



inline jule::Str _1ba263eab_gen_struct_self_field(jule::Ref<_1d21c0b59_StructIns>& _36531_s) {
	jule::Str _36613_obj = _1ba263eab_gen_struct_self_field_type_kind(_36531_s);
	_36613_obj+=jule::Str(" self{};", 8);
	return _36613_obj;
}



inline jule::Str _1ba263eab_gen_struct_self_field_init_st(jule::Ref<_1d21c0b59_StructIns>& _37139_s) {
	jule::Str _37213_obj = jule::Str("this->self = ", 13);
	_37213_obj+=_1ba263eab_gen_struct_self_field_type_kind(_37139_s);
	_37213_obj+=jule::Str("::make(this, nullptr);", 22);
	return _37213_obj;
}



inline jule::Str _1ba263eab_gen_struct_constructor(jule::Ref<_1d21c0b59_StructIns>& _37832_s) {
	jule::Str _37913_obj = _1ba1de70b_struct_ins_out_ident(_37832_s);
	_37913_obj+=jule::Str("(", 1);
	if (_37832_s->_field_fields.len() > 0LL) {
		{
			auto _range_expr = _37832_s->_field_fields;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_1d21c0b59_FieldIns> _1ba263eab_f = *_range_begin;
				_iter_begin_4720168208:;
				{
					_37913_obj+=_1ba1e2b3d_gen_type_kind(_1ba263eab_f->_field_kind);
					_37913_obj+=(jule::Str(" __param_", 9) + _1ba263eab_f->_field_decl->_field_ident) + jule::Str(", ", 2);
				}
				_iter_next_4720168208:;
				++_range_begin;
				if (_range_begin != _range_end) { _1ba263eab_f = *_range_begin; goto _iter_begin_4720168208; }
				_iter_end_4720168208:;
			}
		}
		_37913_obj=_37913_obj.slice(0LL,static_cast<jule::Int>(_37913_obj.len() - 2LL));
	} else {
		_37913_obj+=jule::Str("void", 4);
	}
	_37913_obj+=jule::Str(") {\n", 4);
	_1ba263eab_add_indent();
	_37913_obj+=_1ba263eab_indent();
	_37913_obj+=_1ba263eab_gen_struct_self_field_init_st(_37832_s);
	_37913_obj+=jule::Str("\n", 1);
	if (_37832_s->_field_fields.len() > 0LL) {
		{
			auto _range_expr = _37832_s->_field_fields;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_1d21c0b59_FieldIns> _1ba263eab_f = *_range_begin;
				_iter_begin_4720174768:;
				{
					_37913_obj+=jule::Str("\n", 1);
					_37913_obj+=_1ba263eab_indent();
					_37913_obj+=jule::Str("this->", 6);
					_37913_obj+=_1ba1de70b_field_out_ident(_1ba263eab_f->_field_decl);
					_37913_obj+=jule::Str(" = ", 3);
					_37913_obj+=jule::Str("__param_", 8) + _1ba263eab_f->_field_decl->_field_ident;
					_37913_obj+=jule::Str(";", 1);
				}
				_iter_next_4720174768:;
				++_range_begin;
				if (_range_begin != _range_end) { _1ba263eab_f = *_range_begin; goto _iter_begin_4720174768; }
				_iter_end_4720174768:;
			}
		}
	}
	_1ba263eab_done_indent();
	_37913_obj+=(jule::Str("\n", 1) + _1ba263eab_indent()) + jule::Str("}", 1);
	return _37913_obj;
}



inline jule::Str _1ba263eab_gen_struct_destructor(jule::Ref<_1d21c0b59_StructIns>& _41531_s) {
	jule::Str _41613_obj = jule::Str("~", 1);
	_41613_obj+=_1ba1de70b_struct_ins_out_ident(_41531_s);
	_41613_obj+=jule::Str("(void) { ", 9);
	if (_41531_s->_field_decl->_method_is_implements(_1b9c0b525_BUILTIN_TRAIT_DISPOSE)) {
		jule::Ref<_1d21d97ee_Fn> _42213_dispose_method = _41531_s->_method_find_method(jule::Str("dispose", 7),false);
		_41613_obj+=jule::Str("this->", 6);
		_41613_obj+=_1ba1de70b_fn_out_ident(_42213_dispose_method);
		_41613_obj+=jule::Str("(); ", 4);
	}
	_41613_obj+=jule::Str("this->self.ref = nullptr; }", 27);
	return _41613_obj;
}



inline jule::Str _1ba263eab_gen_struct_operators(jule::Ref<_1d21c0b59_StructIns>& _43230_s) {
	jule::Str _4339_out_ident = _1ba1de70b_struct_ins_out_ident(_43230_s);
	jule::Str _43413_obj = jule::Str("", 0);
	_43413_obj+=_1ba263eab_indent();
	_43413_obj+=jule::Str("inline bool operator==(const ", 29);
	_43413_obj+=_4339_out_ident;
	_43413_obj+=jule::Str(" &_Src) const {", 15);
	if (_43230_s->_field_fields.len() > 0LL) {
		_1ba263eab_add_indent();
		_43413_obj+=jule::Str("\n", 1);
		_43413_obj+=_1ba263eab_indent();
		_43413_obj+=jule::Str("return ", 7);
		_1ba263eab_add_indent();
		jule::Int _44617_n = 0LL;
		{
			auto _range_expr = _43230_s->_field_fields;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_1d21c0b59_FieldIns> _1ba263eab_f = *_range_begin;
				_iter_begin_4720195184:;
				{
					jule::Ref<_1d21c0b59_StructIns> _44917_strct = _1ba263eab_f->_field_kind->_method_strct();
					if ((jule::real(_44917_strct) && jule::real(_44917_strct->_field_decl)) && _44917_strct->_field_decl->_field_cpp_linked) {
						goto _iter_next_4720195184;
					}
					(_44617_n)++;
					_43413_obj+=jule::Str("\n", 1);
					_43413_obj+=_1ba263eab_indent();
					_43413_obj+=jule::Str("this->", 6);
					jule::Str _45817_f_ident = _1ba1de70b_field_out_ident(_1ba263eab_f->_field_decl);
					_43413_obj+=_45817_f_ident;
					_43413_obj+=jule::Str(" == _Src.", 9);
					_43413_obj+=_45817_f_ident;
					_43413_obj+=jule::Str(" &&", 3);
				}
				_iter_next_4720195184:;
				++_range_begin;
				if (_range_begin != _range_end) { _1ba263eab_f = *_range_begin; goto _iter_begin_4720195184; }
				_iter_end_4720195184:;
			}
		}
		_1ba263eab_done_indent();
		if (_44617_n > 0LL) {
			_43413_obj=_43413_obj.slice(0LL,static_cast<jule::Int>(_43413_obj.len() - 3LL));
		} else {
			_43413_obj+=jule::Str("true", 4);
		}
		_43413_obj+=jule::Str(";\n", 2);
		_1ba263eab_done_indent();
		_43413_obj+=_1ba263eab_indent();
		_43413_obj+=jule::Str("}", 1);
	} else {
		_43413_obj+=jule::Str(" return true; }", 15);
	}
	_43413_obj+=jule::Str("\n\n", 2);
	_43413_obj+=_1ba263eab_indent();
	_43413_obj+=jule::Str("inline bool operator!=(const ", 29);
	_43413_obj+=_4339_out_ident;
	_43413_obj+=jule::Str(" &_Src) const { return !this->operator==(_Src); }", 49);
	return _43413_obj;
}



inline jule::Str _1ba263eab_gen_struct_derive_defs_prototypes(jule::Ref<_1d21c0b59_StructIns>& _48539_s) {
	jule::Str _48613_obj = jule::Str("", 0);
	if (_48539_s->_field_decl->_method_is_derives(jule::Str("Clone", 5))) {
		_48613_obj+=_1ba263eab_indent();
		_48613_obj+=_1ba1e01ce_get_derive_fn_decl_clone(_48539_s->_field_decl);
		_48613_obj+=jule::Str(";\n\n", 3);
	}
	return _48613_obj;
}



inline jule::Str _1ba263eab_gen_struct_ins_prototype(jule::Ref<_1d21c0b59_StructIns>& _49734_s) {
	jule::Str _49813_obj = jule::Str("struct ", 7);
	jule::Str _4999_out_ident = _1ba1de70b_struct_ins_out_ident(_49734_s);
	_49813_obj+=_4999_out_ident;
	_49813_obj+=_1ba263eab_gen_struct_traits(_49734_s->_field_decl);
	_49813_obj+=jule::Str(" {\n", 3);
	_1ba263eab_add_indent();
	_49813_obj+=_1ba263eab_indent();
	_49813_obj+=_1ba263eab_gen_struct_self_field(_49734_s);
	_49813_obj+=jule::Str("\n\n", 2);
	if (_49734_s->_field_fields.len() > 0LL) {
		{
			auto _range_expr = _49734_s->_field_fields;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_1d21c0b59_FieldIns> _1ba263eab_f = *_range_begin;
				_iter_begin_4720221536:;
				{
					_49813_obj+=_1ba263eab_indent();
					_49813_obj+=_1ba263eab_gen_field_decl(_1ba263eab_f);
					_49813_obj+=jule::Str("\n", 1);
				}
				_iter_next_4720221536:;
				++_range_begin;
				if (_range_begin != _range_end) { _1ba263eab_f = *_range_begin; goto _iter_begin_4720221536; }
				_iter_end_4720221536:;
			}
		}
		_49813_obj+=jule::Str("\n\n", 2);
		_49813_obj+=_1ba263eab_indent();
		_49813_obj+=_1ba263eab_gen_struct_constructor(_49734_s);
		_49813_obj+=jule::Str("\n\n", 2);
	}
	_49813_obj+=_1ba263eab_indent();
	_49813_obj+=_1ba263eab_gen_struct_destructor(_49734_s);
	_49813_obj+=jule::Str("\n\n", 2);
	_49813_obj+=_1ba263eab_indent();
	_49813_obj+=_4999_out_ident;
	_49813_obj+=jule::Str("(void) { ", 9);
	_49813_obj+=_1ba263eab_gen_struct_self_field_init_st(_49734_s);
	_49813_obj+=jule::Str(" }\n\n", 4);
	{
		auto _range_expr = _49734_s->_field_methods;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d21d97ee_Fn> _1ba263eab_f = *_range_begin;
			_iter_begin_4720227424:;
			{
				_49813_obj+=_1ba263eab_gen_fn_prototype(_1ba263eab_f,true);
				_49813_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_4720227424:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ba263eab_f = *_range_begin; goto _iter_begin_4720227424; }
			_iter_end_4720227424:;
		}
	}
	_49813_obj+=_1ba263eab_gen_struct_derive_defs_prototypes(_49734_s);
	_49813_obj+=_1ba263eab_gen_struct_operators(_49734_s);
	_49813_obj+=jule::Str("\n", 1);
	_1ba263eab_done_indent();
	_49813_obj+=_1ba263eab_indent() + jule::Str("};", 2);
	return _49813_obj;
}



inline jule::Str _1ba263eab_gen_struct_prototype(jule::Ref<_1d21c0b59_Struct>& _54730_s) {
	jule::Str _54813_obj = jule::Str("", 0);
	{
		auto _range_expr = _54730_s->_field_instances;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d21c0b59_StructIns> _1ba263eab_ins = *_range_begin;
			_iter_begin_4720233696:;
			{
				_54813_obj+=_1ba263eab_gen_struct_ins_prototype(_1ba263eab_ins) + jule::Str("\n\n", 2);
			}
			_iter_next_4720233696:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ba263eab_ins = *_range_begin; goto _iter_begin_4720233696; }
			_iter_end_4720233696:;
		}
	}
	return _54813_obj;
}



inline jule::Str _1ba263eab_gen_struct_prototypes(jule::Slice<jule::Ref<_1d21c0b59_Struct>>& _55631_structs) {
	jule::Str _55713_obj = jule::Str("", 0);
	{
		auto _range_expr = _55631_structs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d21c0b59_Struct> _1ba263eab_s = *_range_begin;
			_iter_begin_4720237488:;
			{
				if ((!(_1ba263eab_s->_field_cpp_linked)) && (_1ba263eab_s->_field_token._field_id != 0LLU)) {
					_55713_obj+=_1ba263eab_gen_struct_prototype(_1ba263eab_s) + jule::Str("\n", 1);
				}
			}
			_iter_next_4720237488:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ba263eab_s = *_range_begin; goto _iter_begin_4720237488; }
			_iter_end_4720237488:;
		}
	}
	return _55713_obj;
}



inline jule::Str _1ba263eab_gen_fn_decl_head(jule::Ref<_1d21d97ee_FnIns>& _56626_f,jule::Bool _56637_method) {
	jule::Str _56713_obj = jule::Str("", 0);
	if (_56637_method && _56626_f->_field_decl->_field_statically) {
		_56713_obj+=jule::Str("static ", 7);
	}
	if ((!(_56626_f->_field_decl->_method_is_entry_point()))) {
		_56713_obj+=jule::Str("inline ", 7);
	}
	_56713_obj+=_1ba263eab_gen_fn_ins_result(_56626_f) + jule::Str(" ", 1);
	if ((!(_56637_method)) && jule::real(_56626_f->_field_decl->_field_owner)) {
		_56713_obj+=_1ba1de70b_struct_ins_out_ident(_56626_f->_field_owner) + jule::Str("::", 2);
	}
	_56713_obj+=_1ba1de70b_fn_ins_out_ident(_56626_f);
	return _56713_obj;
}



inline jule::Str _1ba263eab_gen_fn_prototype(jule::Ref<_1d21d97ee_Fn>& _58726_f,jule::Bool _58734_method) {
	jule::Str _58813_obj = jule::Str("", 0);
	{
		auto _range_expr = _58726_f->_field_instances;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d21d97ee_FnIns> _1ba263eab_c = *_range_begin;
			_iter_begin_4720251744:;
			{
				_58813_obj+=_1ba263eab_indent();
				_58813_obj+=_1ba263eab_gen_fn_decl_head(_1ba263eab_c,_58734_method);
				_58813_obj+=_1ba263eab_gen_params_prototypes(_1ba263eab_c->_field_params);
				_58813_obj+=jule::Str(";\n", 2);
			}
			_iter_next_4720251744:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ba263eab_c = *_range_begin; goto _iter_begin_4720251744; }
			_iter_end_4720251744:;
		}
	}
	return _58813_obj;
}



inline jule::Str _1ba263eab_gen_fn_prototypes(jule::Ref<_1b8e0c01d_Package>& _59927_pkg) {
	jule::Str _60013_obj = jule::Str("", 0);
	{
		auto _range_expr = _59927_pkg->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b9390d86_SymbolTable> _1ba263eab_file = *_range_begin;
			_iter_begin_4720256832:;
			{
				{
					auto _range_expr = _1ba263eab_file->_field_funcs;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Ref<_1d21d97ee_Fn> _1ba263eab_f = *_range_begin;
						_iter_begin_4720258720:;
						{
							if ((!(_1ba263eab_f->_field_cpp_linked)) && (_1ba263eab_f->_field_token._field_id != 0LLU)) {
								_60013_obj+=_1ba263eab_gen_fn_prototype(_1ba263eab_f,false);
							}
						}
						_iter_next_4720258720:;
						++_range_begin;
						if (_range_begin != _range_end) { _1ba263eab_f = *_range_begin; goto _iter_begin_4720258720; }
						_iter_end_4720258720:;
					}
				}
			}
			_iter_next_4720256832:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ba263eab_file = *_range_begin; goto _iter_begin_4720256832; }
			_iter_end_4720256832:;
		}
	}
	return _60013_obj;
}



inline jule::Str _1ba263eab_gen_prototypes(jule::Ref<_1d1818549_IR>& _61224_ir) {
	jule::Str _61313_obj = jule::Str("", 0);
	{
		auto _range_expr = _61224_ir->_field_used;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b8e0c01d_ImportInfo> _1ba263eab_u = *_range_begin;
			_iter_begin_4720260000:;
			{
				if ((!(_1ba263eab_u->_field_cpp_linked))) {
					_61313_obj+=_1ba263eab_gen_trait_prototypes(_1ba263eab_u->_field_package);
				}
			}
			_iter_next_4720260000:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ba263eab_u = *_range_begin; goto _iter_begin_4720260000; }
			_iter_end_4720260000:;
		}
	}
	_61313_obj+=_1ba263eab_gen_trait_prototypes(_61224_ir->_field_main);
	_61313_obj+=_1ba263eab_gen_struct_plain_prototypes(_61224_ir->_field_ordered._field_structs);
	_61313_obj+=_1ba263eab_gen_traits(_61224_ir) + jule::Str("\n", 1);
	_61313_obj+=_1ba263eab_gen_struct_prototypes(_61224_ir->_field_ordered._field_structs);
	{
		auto _range_expr = _61224_ir->_field_used;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b8e0c01d_ImportInfo> _1ba263eab_u = *_range_begin;
			_iter_begin_4720269280:;
			{
				if ((!(_1ba263eab_u->_field_cpp_linked))) {
					_61313_obj+=_1ba263eab_gen_fn_prototypes(_1ba263eab_u->_field_package);
				}
			}
			_iter_next_4720269280:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ba263eab_u = *_range_begin; goto _iter_begin_4720269280; }
			_iter_end_4720269280:;
		}
	}
	_61313_obj+=_1ba263eab_gen_fn_prototypes(_61224_ir->_field_main);
	return _61313_obj;
}



inline jule::Str _1ba263eab_gen_var_init_expr(jule::Ref<_1b919cb2c_Var>& _64027_v,jule::Str _64036_init) {
	jule::Str _64113_obj = jule::Str("", 0);
	if (_64027_v->_field_statically) {
		_64113_obj+=jule::Str("static ", 7);
	}
	_64113_obj+=_1ba1e2b3d_gen_type_kind(_64027_v->_field_kind->_field_kind) + jule::Str(" ", 1);
	if (_64027_v->_field_reference) {
		_64113_obj+=jule::Str("&", 1);
	}
	_64113_obj+=_1ba1de70b_var_out_ident(_64027_v);
	if (_64036_init != jule::Str("", 0)) {
		_64113_obj+=jule::Str(" = ", 3) + _64036_init;
	}
	_64113_obj+=jule::Str(";", 1);
	return _64113_obj;
}



inline jule::Str _1ba263eab_gen_var(jule::Ref<_1b919cb2c_Var> _65916_v) {
	if (_1d1da4277_is_ignore_ident(_65916_v->_field_ident)) {
		return jule::Str("", 0);
	}
	if (jule::real(_65916_v->_field_value) && jule::real(_65916_v->_field_value->_field_expr)) {
		if (_65916_v->_field_value->_field_data->_field_model != nullptr) {
			return _1ba263eab_gen_var_init_expr(_65916_v,_1d1921d28_gen_val(_65916_v->_field_value));
		}
		return _1ba263eab_gen_var_init_expr(_65916_v,jule::Str("", 0));
	}
	return _1ba263eab_gen_var_init_expr(_65916_v,_1d1921d28_get_init_expr(_65916_v->_field_kind->_field_kind));
}



inline jule::Str _1ba263eab_gen_globals(jule::Slice<jule::Ref<_1b919cb2c_Var>>& _67421_globals) {
	jule::Str _67513_obj = jule::Str("", 0);
	{
		auto _range_expr = _67421_globals;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b919cb2c_Var> _1ba263eab_v = *_range_begin;
			_iter_begin_4720288176:;
			{
				if (_1ba263eab_v->_field_token._field_id != 0LLU) {
					_67513_obj+=_1ba263eab_gen_var(_1ba263eab_v) + jule::Str("\n", 1);
				}
			}
			_iter_next_4720288176:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ba263eab_v = *_range_begin; goto _iter_begin_4720288176; }
			_iter_end_4720288176:;
		}
	}
	return _67513_obj;
}



inline jule::Str _1ba263eab_gen_fn(jule::Ref<_1d21d97ee_Fn>& _68716_f) {
	jule::Str _68813_obj = jule::Str("", 0);
	{
		auto _range_expr = _68716_f->_field_instances;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d21d97ee_FnIns> _1ba263eab_ins = *_range_begin;
			_iter_begin_4720293312:;
			{
				_68813_obj+=_1ba263eab_gen_fn_decl_head(_1ba263eab_ins,false);
				_68813_obj+=_1ba263eab_gen_params_ins(_1ba263eab_ins->_field_params) + jule::Str(" ", 1);
				_68813_obj+=_1d173d293_gen_fn_scope(_1ba263eab_ins);
				_68813_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_4720293312:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ba263eab_ins = *_range_begin; goto _iter_begin_4720293312; }
			_iter_end_4720293312:;
		}
	}
	return _68813_obj;
}



inline jule::Str _1ba263eab_gen_pkg_fns(jule::Ref<_1b8e0c01d_Package>& _69921_p) {
	jule::Str _70013_obj = jule::Str("", 0);
	{
		auto _range_expr = _69921_p->_field_files;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b9390d86_SymbolTable> _1ba263eab_f = *_range_begin;
			_iter_begin_4720298448:;
			{
				{
					auto _range_expr = _1ba263eab_f->_field_funcs;
					if (_range_expr.begin() != _range_expr.end()) {
						auto _range_begin = _range_expr.begin();
						const auto _range_end = _range_expr.end();
						jule::Ref<_1d21d97ee_Fn> _1ba263eab_f = *_range_begin;
						_iter_begin_4720300288:;
						{
							if ((!(_1ba263eab_f->_field_cpp_linked)) && (_1ba263eab_f->_field_token._field_id != 0LLU)) {
								_70013_obj+=_1ba263eab_gen_fn(_1ba263eab_f) + jule::Str("\n\n", 2);
							}
						}
						_iter_next_4720300288:;
						++_range_begin;
						if (_range_begin != _range_end) { _1ba263eab_f = *_range_begin; goto _iter_begin_4720300288; }
						_iter_end_4720300288:;
					}
				}
			}
			_iter_next_4720298448:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ba263eab_f = *_range_begin; goto _iter_begin_4720298448; }
			_iter_end_4720298448:;
		}
	}
	return _70013_obj;
}



inline jule::Str _1ba263eab_gen_struct_method_defs(jule::Ref<_1d21c0b59_StructIns>& _71232_s) {
	jule::Str _71313_obj = jule::Str("", 0);
	{
		auto _range_expr = _71232_s->_field_methods;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d21d97ee_Fn> _1ba263eab_f = *_range_begin;
			_iter_begin_4720305232:;
			{
				_71313_obj+=_1ba263eab_indent();
				_71313_obj+=_1ba263eab_gen_fn(_1ba263eab_f);
				_71313_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_4720305232:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ba263eab_f = *_range_begin; goto _iter_begin_4720305232; }
			_iter_end_4720305232:;
		}
	}
	return _71313_obj;
}



inline jule::Str _1ba263eab_gen_struct_ostream(jule::Ref<_1d21c0b59_StructIns>& _72328_s) {
	jule::Str _72413_obj = jule::Str("", 0);
	_72413_obj+=_1ba263eab_indent();
	_72413_obj+=jule::Str("std::ostream &operator<<(std::ostream &_Stream, const ", 54);
	_72413_obj+=_1ba1de70b_struct_ins_out_ident(_72328_s);
	_72413_obj+=jule::Str(" &_Src) {\n", 10);
	_1ba263eab_add_indent();
	_72413_obj+=_1ba263eab_indent();
	_72413_obj+=jule::Str("_Stream << \"", 12);
	_72413_obj+=_72328_s->_field_decl->_field_ident;
	_72413_obj+=jule::Str("{\";\n", 4);
	{
		auto _range_expr = _72328_s->_field_fields;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1ba263eab_i = 0;
			jule::Ref<_1d21c0b59_FieldIns> _1ba263eab_f = *_range_begin;
			_iter_begin_4720312752:;
			{
				_72413_obj+=_1ba263eab_indent();
				_72413_obj+=jule::Str("_Stream << \"", 12);
				_72413_obj+=_1ba263eab_f->_field_decl->_field_ident;
				_72413_obj+=jule::Str(":", 1);
				jule::Ref<_1d21c0b59_StructIns> _74213_strct = _1ba263eab_f->_field_kind->_method_strct();
				if ((jule::real(_74213_strct) && jule::real(_74213_strct->_field_decl)) && _74213_strct->_field_decl->_field_cpp_linked) {
					_72413_obj+=(jule::Str(" cpp.", 5) + _1ba1de70b_field_out_ident(_1ba263eab_f->_field_decl)) + jule::Str("\"", 1);
				} else {
					_72413_obj+=jule::Str("\" << _Src.", 10);
					_72413_obj+=_1ba1de70b_field_out_ident(_1ba263eab_f->_field_decl);
				}
				if ((_1ba263eab_i + 1LL) < _72328_s->_field_fields.len()) {
					_72413_obj+=jule::Str(" << \", \"", 8);
				}
				_72413_obj+=jule::Str(";\n", 2);
			}
			_iter_next_4720312752:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1ba263eab_i; _1ba263eab_f = *_range_begin; goto _iter_begin_4720312752; }
			_iter_end_4720312752:;
		}
	}
	_72413_obj+=_1ba263eab_indent();
	_72413_obj+=jule::Str("_Stream << \"}\";\n", 16);
	_72413_obj+=_1ba263eab_indent();
	_72413_obj+=jule::Str("return _Stream;\n", 16);
	_1ba263eab_done_indent();
	_72413_obj+=_1ba263eab_indent();
	_72413_obj+=jule::Str("}", 1);
	return _72413_obj;
}



inline jule::Str _1ba263eab_gen_struct_derive_defs(jule::Ref<_1d21c0b59_StructIns>& _76532_s) {
	jule::Str _76613_obj = jule::Str("", 0);
	if (_76532_s->_field_decl->_method_is_derives(jule::Str("Clone", 5))) {
		_76613_obj+=_1ba263eab_indent();
		_76613_obj+=_1ba1e01ce_get_derive_fn_def_clone(_76532_s->_field_decl);
		_76613_obj+=jule::Str("{\n", 2);
		_1ba263eab_add_indent();
		_76613_obj+=_1ba263eab_indent();
		_76613_obj+=_1ba1e2b3d_gen_struct_kind_ins(_76532_s);
		_76613_obj+=jule::Str(" clone;\n", 8);
		{
			auto _range_expr = _76532_s->_field_fields;
			if (_range_expr.begin() != _range_expr.end()) {
				auto _range_begin = _range_expr.begin();
				const auto _range_end = _range_expr.end();
				jule::Ref<_1d21c0b59_FieldIns> _1ba263eab_f = *_range_begin;
				_iter_begin_4720330368:;
				{
					jule::Str _77717_ident = _1ba1de70b_field_out_ident(_1ba263eab_f->_field_decl);
					_76613_obj+=_1ba263eab_indent();
					_76613_obj+=jule::Str("clone.", 6);
					_76613_obj+=_77717_ident;
					_76613_obj+=jule::Str(" = jule::clone(this->", 21);
					_76613_obj+=_77717_ident;
					_76613_obj+=jule::Str(");\n", 3);
				}
				_iter_next_4720330368:;
				++_range_begin;
				if (_range_begin != _range_end) { _1ba263eab_f = *_range_begin; goto _iter_begin_4720330368; }
				_iter_end_4720330368:;
			}
		}
		_76613_obj+=_1ba263eab_indent();
		_76613_obj+=jule::Str("return clone;\n", 14);
		_1ba263eab_done_indent();
		_76613_obj+=_1ba263eab_indent();
		_76613_obj+=jule::Str("}", 1);
	}
	return _76613_obj;
}



inline jule::Str _1ba263eab_gen_struct_ins(jule::Ref<_1d21c0b59_StructIns>& _79724_s) {
	jule::Str _79813_obj = _1ba263eab_gen_struct_method_defs(_79724_s);
	_79813_obj+=jule::Str("\n\n", 2);
	_79813_obj+=_1ba263eab_gen_struct_derive_defs(_79724_s);
	_79813_obj+=jule::Str("\n\n", 2);
	_79813_obj+=_1ba263eab_gen_struct_ostream(_79724_s);
	return _79813_obj;
}



inline jule::Str _1ba263eab_gen_struct(jule::Ref<_1d21c0b59_Struct>& _80720_s) {
	jule::Str _80813_obj = jule::Str("", 0);
	{
		auto _range_expr = _80720_s->_field_instances;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d21c0b59_StructIns> _1ba263eab_ins = *_range_begin;
			_iter_begin_4720341728:;
			{
				_80813_obj+=_1ba263eab_gen_struct_ins(_1ba263eab_ins) + jule::Str("\n\n", 2);
			}
			_iter_next_4720341728:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ba263eab_ins = *_range_begin; goto _iter_begin_4720341728; }
			_iter_end_4720341728:;
		}
	}
	return _80813_obj;
}



inline jule::Str _1ba263eab_gen_structs(jule::Slice<jule::Ref<_1d21c0b59_Struct>>& _81621_structs) {
	jule::Str _81713_obj = jule::Str("", 0);
	{
		auto _range_expr = _81621_structs;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1d21c0b59_Struct> _1ba263eab_s = *_range_begin;
			_iter_begin_4720345616:;
			{
				if ((!(_1ba263eab_s->_field_cpp_linked)) && (_1ba263eab_s->_field_token._field_id != 0LLU)) {
					_81713_obj+=_1ba263eab_gen_struct(_1ba263eab_s);
					_81713_obj+=jule::Str("\n\n", 2);
				}
			}
			_iter_next_4720345616:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ba263eab_s = *_range_begin; goto _iter_begin_4720345616; }
			_iter_end_4720345616:;
		}
	}
	return _81713_obj;
}



inline jule::Str _1ba263eab_gen_fns(jule::Ref<_1d1818549_IR>& _82817_ir) {
	jule::Str _82913_obj = jule::Str("", 0);
	{
		auto _range_expr = _82817_ir->_field_used;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b8e0c01d_ImportInfo> _1ba263eab_u = *_range_begin;
			_iter_begin_4720351008:;
			{
				if ((!(_1ba263eab_u->_field_cpp_linked))) {
					_82913_obj+=_1ba263eab_gen_pkg_fns(_1ba263eab_u->_field_package);
				}
			}
			_iter_next_4720351008:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ba263eab_u = *_range_begin; goto _iter_begin_4720351008; }
			_iter_end_4720351008:;
		}
	}
	_82913_obj+=_1ba263eab_gen_pkg_fns(_82817_ir->_field_main);
	return _82913_obj;
}



inline void _1ba263eab_push_init(jule::Ref<_1b8e0c01d_Package>& _84119_pkg,jule::Str& _84139_obj) {
	
	
	jule::Ref<_1d21d97ee_Fn> _8459_f = _84119_pkg->_method_find_fn(jule::Str("init", 4),false);
	if ((!(jule::real(_8459_f)))) {
		return;
	}
	_84139_obj+=(jule::Str("\n\t", 2) + _1ba1de70b_fn_out_ident(_8459_f)) + jule::Str("();", 3);
}



inline jule::Str _1ba263eab_gen_init_caller(jule::Ref<_1d1818549_IR>& _85425_ir) {
	jule::Str _85513_obj = jule::Str("void ", 5);
	_85513_obj+=jule::Str("__jule_call_initializers", 24);
	_85513_obj+=jule::Str("(void) {", 8);
	{
		auto _range_expr = _85425_ir->_field_used;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b8e0c01d_ImportInfo> _1ba263eab_u = *_range_begin;
			_iter_begin_4720363664:;
			{
				if ((!(_1ba263eab_u->_field_cpp_linked))) {
					_1ba263eab_push_init(_1ba263eab_u->_field_package,_85513_obj);
				}
			}
			_iter_next_4720363664:;
			++_range_begin;
			if (_range_begin != _range_end) { _1ba263eab_u = *_range_begin; goto _iter_begin_4720363664; }
			_iter_end_4720363664:;
		}
	}
	_1ba263eab_push_init(_85425_ir->_field_main,_85513_obj);
	_85513_obj+=jule::Str("\n}", 2);
	return _85513_obj;
}



inline void _1ba263eab_append_standard(jule::Str& _87029_obj_code,jule::Str _87044_compiler,jule::Str _87059_compiler_cmd) {
	_1ba3a81dd_AbsTime _8719_time = _1ba3a81dd_Time::_static_method_now()._method_abs();
	jule::Str _87313_time_str = jule::Str("", 0);
	_87313_time_str+=_1d17893cc_fmt_uint(_8719_time._field_day,10LL);
	_87313_time_str+=jule::Str("/", 1);
	_87313_time_str+=_1d17893cc_fmt_uint(_8719_time._field_month,10LL);
	_87313_time_str+=jule::Str("/", 1);
	_87313_time_str+=_1d17893cc_fmt_uint(_8719_time._field_year,10LL);
	_87313_time_str+=jule::Str(" ", 1);
	_87313_time_str+=_1d17893cc_fmt_uint(_8719_time._field_hour,10LL);
	_87313_time_str+=jule::Str(".", 1);
	_87313_time_str+=_1d17893cc_fmt_uint(_8719_time._field_minute,10LL);
	_87313_time_str+=jule::Str(" (DD/MM/YYYY) (HH.MM) UTC", 25);
	jule::Str _88513_s = jule::Str("", 0);
	_88513_s+=jule::Str("// Auto generated by JuleC.\n", 28);
	_88513_s+=jule::Str("// JuleC version: ", 18);
	_88513_s+=jule::Str("beta 0.0.5 @master", 18);
	_88513_s+=jule::Str("\n", 1);
	_88513_s+=jule::Str("// Date: ", 9);
	_88513_s+=_87313_time_str;
	_88513_s+=jule::Str("\n//\n// Recommended Compile Command;\n// ", 39);
	_88513_s+=_87044_compiler;
	_88513_s+=jule::Str(" ", 1);
	_88513_s+=_87059_compiler_cmd;
	_88513_s+=jule::Str("\n\n#include \"", 12);
	_88513_s+=_1d062ea48_PATH_API;
	_88513_s+=jule::Str("\"\n\n", 3);
	_88513_s+=_87029_obj_code;
	_88513_s+=jule::Str("\nint main(int argc, char *argv[], char *envp[]) {\n    std::set_terminate(&jule::terminate_handler);\n    jule::set_sig_handler(jule::signal_handler);\n    jule::setup_command_line_args(argc, argv);\n    jule::setup_environment_variables(envp);\n\n    __jule_call_initializers();\n    entry_point();\n\n    return EXIT_SUCCESS;\n}", 320);
	_87029_obj_code=_88513_s;
}



inline jule::Str _1ba263eab_gen(jule::Ref<_1d1818549_IR>& _91917_ir) {
	jule::Str _92013_obj = jule::Str("", 0);
	_92013_obj+=_1ba263eab_gen_links(_91917_ir) + jule::Str("\n", 1);
	_92013_obj+=_1ba263eab_gen_prototypes(_91917_ir) + jule::Str("\n\n", 2);
	_92013_obj+=_1ba263eab_gen_globals(_91917_ir->_field_ordered._field_globals) + jule::Str("\n", 1);
	_92013_obj+=_1ba263eab_gen_structs(_91917_ir->_field_ordered._field_structs);
	_92013_obj+=_1ba263eab_gen_fns(_91917_ir) + jule::Str("\n", 1);
	_92013_obj+=_1ba263eab_gen_init_caller(_91917_ir) + jule::Str("\n", 1);
	return _92013_obj;
}



inline jule::Str _1d051806e_str_repeat(jule::Str _3015_sub,jule::Int _3029_n) {
	if (_3029_n == 0LL) {
		return jule::Str("", 0);
	}
	jule::Str _3513_s = jule::Str("", 0);
	_iter_begin_4720484208:;
	if (!(_3029_n > 0LL)) { goto _iter_end_4720484208; }
	{
		_3513_s+=_3015_sub;
	}
	_iter_next_4720484208:;
	(_3029_n)--;
	goto _iter_begin_4720484208;
	_iter_end_4720484208:;
	return _3513_s;
}



inline void _1d051806e_print_error_message(jule::Str _4224_msg) {
	jule::outln(_4224_msg);
}



inline void _1d051806e_help(void) {
	if (_1d070a5e6_ARGS.len() > 2LL) {
		_1d051806e_print_error_message(jule::Str("invalid command: ", 17) + _1d070a5e6_ARGS[2LL]);
		return;
	}
	jule::I64 _5113_max = _1d051806e_HELP_MAP[0LL][0LL].len();
	{
		auto _range_expr = _1d051806e_HELP_MAP;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Array<jule::Str,2> _1d051806e_k = *_range_begin;
			_iter_begin_4720492416:;
			{
				jule::I64 _5313_n = _1d051806e_k[0LL].len();
				if (_5313_n > _5113_max) {
					_5113_max=_5313_n;
				}
			}
			_iter_next_4720492416:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d051806e_k = *_range_begin; goto _iter_begin_4720492416; }
			_iter_end_4720492416:;
		}
	}
	jule::Str _5913_s = jule::Str("", 0);
	
	{
		auto _range_expr = _1d051806e_HELP_MAP;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Int _1d051806e_i = 0;
			jule::Array<jule::Str,2> _1d051806e_part = *_range_begin;
			_iter_begin_4720498304:;
			{
				_5913_s+=_1d051806e_part[0LL];
				_5913_s+=_1d051806e_str_repeat(jule::Str(" ", 1),static_cast<jule::I64>((_5113_max - _1d051806e_part[0LL].len()) + 5LL));
				_5913_s+=_1d051806e_part[1LL];
				if ((_1d051806e_i + 1LL) < 4LL) {
					_5913_s+=jule::Str("\n", 1);
				}
			}
			_iter_next_4720498304:;
			++_range_begin;
			if (_range_begin != _range_end) { ++_1d051806e_i; _1d051806e_part = *_range_begin; goto _iter_begin_4720498304; }
			_iter_end_4720498304:;
		}
	}
	jule::outln(_5913_s);
}



inline void _1d051806e_version(void) {
	if (_1d070a5e6_ARGS.len() > 2LL) {
		_1d051806e_print_error_message(jule::Str("invalid command: ", 17) + _1d070a5e6_ARGS[2LL]);
		return;
	}
	jule::out(jule::Str("julec version ", 14));
	jule::outln(jule::Str("beta 0.0.5 @master", 18));
}



inline void _1d051806e_tool_distos(void) {
	jule::out(jule::Str("supported operating systems:\n ", 30));
	{
		auto _range_expr = _1d0626eb3_DISTOS;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _1d051806e_os = *_range_begin;
			_iter_begin_4720499952:;
			{
				jule::out(_1d051806e_os);
				jule::out(jule::Str(" ", 1));
			}
			_iter_next_4720499952:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d051806e_os = *_range_begin; goto _iter_begin_4720499952; }
			_iter_end_4720499952:;
		}
	}
	jule::outln(jule::Str("", 0));
}



inline void _1d051806e_tool_distarch(void) {
	jule::out(jule::Str("supported architects:\n ", 23));
	{
		auto _range_expr = _1d0626eb3_DISTARCH;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _1d051806e_arch = *_range_begin;
			_iter_begin_4720511744:;
			{
				jule::out(_1d051806e_arch);
				jule::out(jule::Str(" ", 1));
			}
			_iter_next_4720511744:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d051806e_arch = *_range_begin; goto _iter_begin_4720511744; }
			_iter_end_4720511744:;
		}
	}
	jule::outln(jule::Str("", 0));
}



inline void _1d051806e_tool(void) {
	if (_1d070a5e6_ARGS.len() == 2LL) {
		jule::outln(jule::Str("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;
	} else if (_1d070a5e6_ARGS.len() > 3LL) {
		_1d051806e_print_error_message(jule::Str("invalid command: ", 17) + _1d070a5e6_ARGS[3LL]);
		return;
	}
	jule::Str _1149_cmd = _1d070a5e6_ARGS[2LL];
	{
		auto _match_expr{ _1149_cmd };
		if (!((jule::Str("distos", 6)) == _match_expr)) { goto _case_end_4720523040; }
		_case_begin_4720523040:;
		{
			_1d051806e_tool_distos();
		}
		goto _match_end_4720521488;
		_case_end_4720523040:;
		if (!((jule::Str("distarch", 8)) == _match_expr)) { goto _case_end_4720524000; }
		_case_begin_4720524000:;
		{
			_1d051806e_tool_distarch();
		}
		goto _match_end_4720521488;
		_case_end_4720524000:;
		_case_begin_4720522032:;
		{
			_1d051806e_print_error_message(jule::Str("Undefined command: ", 19) + _1149_cmd);
		}
		goto _match_end_4720521488;
		_case_end_4720522032:;
		_match_end_4720521488:;
	}
}



inline void _1d051806e_julenv(void) {
	jule::outln(jule::Str("julec version: beta 0.0.5 @master", 33));
	jule::outln(jule::Str("architecture: amd64", 19));
	jule::outln(jule::Str("operating system: darwin", 24));
}



inline jule::Bool _1d051806e_process_command(void) {
	{
		auto _match_expr{ _1d070a5e6_ARGS[1LL] };
		if (!((jule::Str("help", 4)) == _match_expr)) { goto _case_end_4720528368; }
		_case_begin_4720528368:;
		{
			_1d051806e_help();
		}
		goto _match_end_4720522560;
		_case_end_4720528368:;
		if (!((jule::Str("version", 7)) == _match_expr)) { goto _case_end_4720528480; }
		_case_begin_4720528480:;
		{
			_1d051806e_version();
		}
		goto _match_end_4720522560;
		_case_end_4720528480:;
		if (!((jule::Str("tool", 4)) == _match_expr)) { goto _case_end_4720528592; }
		_case_begin_4720528592:;
		{
			_1d051806e_tool();
		}
		goto _match_end_4720522560;
		_case_end_4720528592:;
		if (!((jule::Str("julenv", 6)) == _match_expr)) { goto _case_end_4720529680; }
		_case_begin_4720529680:;
		{
			_1d051806e_julenv();
		}
		goto _match_end_4720522560;
		_case_end_4720529680:;
		_case_begin_4720527984:;
		{
			return false;
		}
		goto _match_end_4720522560;
		_case_end_4720527984:;
		_match_end_4720522560:;
	}
	return true;
}



inline void _1d051806e_exit_err(jule::Str _14313_msg) {
	jule::outln(_14313_msg);
	_1d06d0d80_exit(1LL);
}



void entry_point(void) {
	if (_1d070a5e6_ARGS.len() < 2LL) {
		return;
	}
	if (_1d051806e_process_command()) {
		return;
	}
	_1d055b656_compile_command();
}



inline void _1d0539b0c___init_common(void) {
	_1d055b656_COMPILER=jule::Str("clang", 5);
	_1d055b656_COMPILER_PATH=jule::Str("clang++", 7);
}



inline void _1d0556222_init(void) {
	_1d0539b0c___init_common();
}



inline jule::Int _1d055b656_system(jule::Str _8211_cmd) {
	return static_cast<jule::Int>(static_cast<jule::Int>(system(((char*)((&(_8211_cmd[0LL])))))));
}



inline std::tuple<jule::Str,jule::Str> _1d055b656_get_option(jule::Slice<jule::Str>& _8616_args,jule::Int& _8634_i) {
	jule::Str _8644_arg = jule::Str();
	jule::Str _8654_content = jule::Str();
	_iter_begin_4720545440:;
	if (!(_8634_i < _8616_args.len())) { goto _iter_end_4720545440; }
	{
		_8644_arg=_8616_args[static_cast<jule::Int>(_8634_i)];
		jule::Int _8917_j = 0LL;
		jule::Slice<jule::I32> _9017_runes = static_cast<jule::Slice<jule::I32>>(_8644_arg);
		jule::I32 _9117_r = _9017_runes[static_cast<jule::Int>(_8917_j)];
		if (_9117_r != '-') {
			_8654_content+=_8644_arg;
			_8644_arg=jule::Str("", 0);
			goto _iter_next_4720545440;
		}
		(_8917_j)++;
		if (_8917_j >= _9017_runes.len()) {
			_1d051806e_exit_err(jule::Str("undefined syntax: ", 18) + _8644_arg);
		}
		_9117_r=_9017_runes[static_cast<jule::Int>(_8917_j)];
		if (_9117_r == '-') {
			(_8917_j)++;
			if (_8917_j >= _9017_runes.len()) {
				_1d051806e_exit_err(jule::Str("undefined syntax: ", 18) + _8644_arg);
			}
			_9117_r=_9017_runes[static_cast<jule::Int>(_8917_j)];
		}
		if ((!(_1d1da4277_is_ident_rune(static_cast<jule::Str>(_9117_r))))) {
			_1d051806e_exit_err(jule::Str("undefined syntax: ", 18) + _8644_arg);
		}
		(_8917_j)++;
		_iter_begin_4720560128:;
		if (!(_8917_j < _9017_runes.len())) { goto _iter_end_4720560128; }
		{
			_9117_r=_9017_runes[static_cast<jule::Int>(_8917_j)];
			if (((((!(_1d1da4277_is_space(_9117_r))) && (!(_1d1da4277_is_letter(_9117_r)))) && (!(_1d1da4277_is_decimal(static_cast<jule::U8>(_9117_r))))) && (_9117_r != '_')) && (_9117_r != '-')) {
				_1d051806e_exit_err(jule::Str("undefined syntax: ", 18) + static_cast<jule::Str>(_9017_runes.slice(static_cast<jule::Int>(_8917_j))));
			}
		}
		_iter_next_4720560128:;
		(_8917_j)++;
		goto _iter_begin_4720560128;
		_iter_end_4720560128:;
		goto _iter_end_4720545440;
	}
	_iter_next_4720545440:;
	(_8634_i)++;
	goto _iter_begin_4720545440;
	_iter_end_4720545440:;
	return std::make_tuple(_8644_arg,_8654_content);
}



inline jule::Str _1d055b656_get_option_value(jule::Slice<jule::Str>& _13022_args,jule::Int& _13040_i) {
	(_13040_i)++;
	if (_13040_i < _13022_args.len()) {
		jule::Str _13313_arg = _13022_args[static_cast<jule::Int>(_13040_i)];
		return _13313_arg;
	}
	return jule::Str("", 0);
}



inline void _1d055b656_parse_out_option(jule::Slice<jule::Str>& _13922_args,jule::Int& _13940_i) {
	jule::Str _1409_value = _1d055b656_get_option_value(_13922_args,_13940_i);
	if (_1409_value == jule::Str("", 0)) {
		_1d051806e_exit_err(jule::Str("missing option value: -o --out", 30));
	}
	_1d055b656_OUT=_1409_value;
}



inline void _1d055b656_parse_opt_option(jule::Slice<jule::Str>& _14722_args,jule::Int& _14740_i) {
	jule::Str _1489_value = _1d055b656_get_option_value(_14722_args,_14740_i);
	if (_1489_value == jule::Str("", 0)) {
		_1d051806e_exit_err(jule::Str("missing option value: --opt", 27));
	}
	{
		auto _match_expr{ _1489_value };
		if (!((jule::Str("L0", 2)) == _match_expr)) { goto _case_end_4720583248; }
		_case_begin_4720583248:;
		{
			_1d1d36270_push_opt_level(0LLU);
		}
		goto _match_end_4720581536;
		_case_end_4720583248:;
		if (!((jule::Str("L1", 2)) == _match_expr)) { goto _case_end_4720584256; }
		_case_begin_4720584256:;
		{
			_1d1d36270_push_opt_level(1LLU);
		}
		goto _match_end_4720581536;
		_case_end_4720584256:;
		_case_begin_4720580816:;
		{
			_1d051806e_exit_err(jule::Str("invalid optimization level: ", 28) + _1489_value);
		}
		goto _match_end_4720581536;
		_case_end_4720580816:;
		_match_end_4720581536:;
	}
}



inline void _1d055b656_check_target_arch(jule::Str _16022_arch) {
	{
		auto _range_expr = _1d0626eb3_DISTARCH;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _1d055b656_distarch = *_range_begin;
			_iter_begin_4720586576:;
			{
				if (_16022_arch == _1d055b656_distarch) {
					return;
				}
			}
			_iter_next_4720586576:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d055b656_distarch = *_range_begin; goto _iter_begin_4720586576; }
			_iter_end_4720586576:;
		}
	}
	_1d051806e_exit_err(jule::Str("unsupported/undefined architecture: ", 36) + _16022_arch);
}



inline void _1d055b656_check_target_os(jule::Str _17020_os) {
	{
		auto _range_expr = _1d0626eb3_DISTOS;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _1d055b656_distos = *_range_begin;
			_iter_begin_4720589872:;
			{
				if (_17020_os == _1d055b656_distos) {
					return;
				}
			}
			_iter_next_4720589872:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d055b656_distos = *_range_begin; goto _iter_begin_4720589872; }
			_iter_end_4720589872:;
		}
	}
	_1d051806e_exit_err(jule::Str("unsupported/undefined operating system: ", 40) + _17020_os);
}



inline void _1d055b656_parse_target_option(jule::Slice<jule::Str>& _18025_args,jule::Int& _18043_i) {
	jule::Str _1819_value = _1d055b656_get_option_value(_18025_args,_18043_i);
	if (_1819_value == jule::Str("", 0)) {
		_1d051806e_exit_err(jule::Str("missing option value: --target", 30));
	}
	jule::Slice<jule::Str> _1869_parts = _1819_value.split(jule::Str("-", 1),-1LL);
	if (_1869_parts.len() != 2LL) {
		_1d051806e_exit_err(jule::Str("undefined platform target format: ", 34) + _1819_value);
	}
	jule::Str _19110_os = _1869_parts[0LL];
	jule::Str _19114_arch = _1869_parts[1LL];
	std::tie(_19110_os,_19114_arch) = std::make_tuple(_1869_parts[0LL],_1869_parts[1LL]);
	if (_19110_os != jule::Str("native", 6)) {
		_1d055b656_check_target_os(_19110_os);
		_1d1c2a4b6_OS=_19110_os;
	}
	if (_19114_arch != jule::Str("native", 6)) {
		_1d055b656_check_target_arch(_19114_arch);
		_1d1c2a4b6_ARCH=_19114_arch;
	}
}



inline void _1d055b656_parse_compiler_option(jule::Slice<jule::Str>& _20427_args,jule::Int& _20445_i) {
	jule::Str _2059_value = _1d055b656_get_option_value(_20427_args,_20445_i);
	{
		auto _match_expr{ _2059_value };
		if (!((jule::Str("", 0)) == _match_expr)) { goto _case_end_4720581376; }
		_case_begin_4720581376:;
		{
			_1d051806e_exit_err(jule::Str("missing option value: --compiler", 32));
		}
		goto _match_end_4720608784;
		_case_end_4720581376:;
		if (!((jule::Str("clang", 5)) == _match_expr)) { goto _case_end_4720610096; }
		_case_begin_4720610096:;
		{
			_1d055b656_COMPILER=jule::Str("clang", 5);
			_1d055b656_COMPILER_PATH=jule::Str("clang++", 7);
		}
		goto _match_end_4720608784;
		_case_end_4720610096:;
		if (!((jule::Str("gcc", 3)) == _match_expr)) { goto _case_end_4720611488; }
		_case_begin_4720611488:;
		{
			_1d055b656_COMPILER=jule::Str("gcc", 3);
			_1d055b656_COMPILER_PATH=jule::Str("g++", 3);
		}
		goto _match_end_4720608784;
		_case_end_4720611488:;
		_case_begin_4720609312:;
		{
			_1d051806e_exit_err(jule::Str("invalid option value for --compiler: ", 37) + _2059_value);
		}
		goto _match_end_4720608784;
		_case_end_4720609312:;
		_match_end_4720608784:;
	}
}



inline jule::Str _1d055b656_parse_options(jule::Slice<jule::Str>& _22319_args) {
	jule::Str _22413_cmd = jule::Str("", 0);
	jule::Int _22813_i = 1LL;
	_iter_begin_4720615328:;
	if (!(_22813_i < _22319_args.len())) { goto _iter_end_4720615328; }
	{
		jule::Str _23014_arg;
		jule::Str _23019_content;
		std::tie(_23014_arg,_23019_content) = _1d055b656_get_option(_22319_args,_22813_i);
		_22413_cmd+=_23019_content;
		{
			auto _match_expr{ _23014_arg };
			if (!((jule::Str("", 0)) == _match_expr)) { goto _case_end_4720621936; }
			goto _match_end_4720617296;
			_case_end_4720621936:;
			if (!((jule::Str("-o", 2)) == _match_expr || (jule::Str("--out", 5)) == _match_expr)) { goto _case_end_4720620512; }
			_case_begin_4720620512:;
			{
				_1d055b656_parse_out_option(_22319_args,_22813_i);
			}
			goto _match_end_4720617296;
			_case_end_4720620512:;
			if (!((jule::Str("-t", 2)) == _match_expr || (jule::Str("--transpile", 11)) == _match_expr)) { goto _case_end_4720620768; }
			_case_begin_4720620768:;
			{
				_1d055b656_MODE=1LLU;
			}
			goto _match_end_4720617296;
			_case_end_4720620768:;
			if (!((jule::Str("-c", 2)) == _match_expr || (jule::Str("--compile", 9)) == _match_expr)) { goto _case_end_4720620000; }
			_case_begin_4720620000:;
			{
				_1d055b656_MODE=0LLU;
			}
			goto _match_end_4720617296;
			_case_end_4720620000:;
			if (!((jule::Str("--compiler", 10)) == _match_expr)) { goto _case_end_4720620112; }
			_case_begin_4720620112:;
			{
				_1d055b656_parse_compiler_option(_22319_args,_22813_i);
			}
			goto _match_end_4720617296;
			_case_end_4720620112:;
			if (!((jule::Str("--opt", 5)) == _match_expr)) { goto _case_end_4720620224; }
			_case_begin_4720620224:;
			{
				_1d055b656_parse_opt_option(_22319_args,_22813_i);
			}
			goto _match_end_4720617296;
			_case_end_4720620224:;
			if (!((jule::Str("--target", 8)) == _match_expr)) { goto _case_end_4720622048; }
			_case_begin_4720622048:;
			{
				_1d055b656_parse_target_option(_22319_args,_22813_i);
			}
			goto _match_end_4720617296;
			_case_end_4720622048:;
			if (!((jule::Str("--shadowing", 11)) == _match_expr)) { goto _case_end_4720622160; }
			_case_begin_4720622160:;
			{
				_1d055b656_SEMA_FLAGS|=1LL;
			}
			goto _match_end_4720617296;
			_case_end_4720622160:;
			if (!((jule::Str("--opt-copy", 10)) == _match_expr)) { goto _case_end_4720622272; }
			_case_begin_4720622272:;
			{
				_1d1d36270_OPTIMIZATIONS=jule::append(_1d1d36270_OPTIMIZATIONS,jule::Slice<jule::Str>({jule::Str("--opt-copy", 10)}));
			}
			goto _match_end_4720617296;
			_case_end_4720622272:;
			if (!((jule::Str("--opt-deadcode", 14)) == _match_expr)) { goto _case_end_4720622384; }
			_case_begin_4720622384:;
			{
				_1d1d36270_OPTIMIZATIONS=jule::append(_1d1d36270_OPTIMIZATIONS,jule::Slice<jule::Str>({jule::Str("--opt-deadcode", 14)}));
			}
			goto _match_end_4720617296;
			_case_end_4720622384:;
			if (!((jule::Str("--opt-append", 12)) == _match_expr)) { goto _case_end_4720622496; }
			_case_begin_4720622496:;
			{
				_1d1d36270_OPTIMIZATIONS=jule::append(_1d1d36270_OPTIMIZATIONS,jule::Slice<jule::Str>({jule::Str("--opt-append", 12)}));
			}
			goto _match_end_4720617296;
			_case_end_4720622496:;
			if (!((jule::Str("--opt-math", 10)) == _match_expr)) { goto _case_end_4720622608; }
			_case_begin_4720622608:;
			{
				_1d1d36270_OPTIMIZATIONS=jule::append(_1d1d36270_OPTIMIZATIONS,jule::Slice<jule::Str>({jule::Str("--opt-math", 10)}));
			}
			goto _match_end_4720617296;
			_case_end_4720622608:;
			if (!((jule::Str("--opt-access", 12)) == _match_expr)) { goto _case_end_4720622720; }
			_case_begin_4720622720:;
			{
				_1d1d36270_OPTIMIZATIONS=jule::append(_1d1d36270_OPTIMIZATIONS,jule::Slice<jule::Str>({jule::Str("--opt-access", 12)}));
			}
			goto _match_end_4720617296;
			_case_end_4720622720:;
			_case_begin_4720619408:;
			{
				_1d051806e_exit_err(jule::Str("undefined option: ", 18) + _23014_arg);
			}
			goto _match_end_4720617296;
			_case_end_4720619408:;
			_match_end_4720617296:;
		}
	}
	_iter_next_4720615328:;
	(_22813_i)++;
	goto _iter_begin_4720615328;
	_iter_end_4720615328:;
	_22413_cmd=_22413_cmd.trim(jule::Str(" \t\r\n\v", 5));
	return _22413_cmd;
}



inline void _1d055b656_write_output(jule::Str _27017_path,jule::Str _27028_content) {
	jule::Str _2719_dir = _1d0680a33_dir(_27017_path);
	jule::Int _27317_err;
	std::tie(std::ignore,_27317_err) = _1d1edea66_stat(_2719_dir);
	if (_27317_err != 0LLU) {
		_27317_err=_1d2177c10_create_dir(_2719_dir);
		if (_27317_err != 0LLU) {
			_1d051806e_exit_err(jule::Str("a problem occurs when code generation", 37));
		}
	}
	jule::Ref<_1d1ee0946_File> _28114_f;
	std::tie(_28114_f,_27317_err) = _1d1da163c_open(_27017_path,1538LL,438LL);
	if (_27317_err != 0LLU) {
		_1d051806e_exit_err(jule::Str("a problem occurs when code generation", 37));
	}
	std::tie(std::ignore,_27317_err) = _28114_f->_method_write(static_cast<jule::Slice<jule::U8>>(_27028_content));
	if (_27317_err != 0LLU) {
		_1d051806e_exit_err(jule::Str("a problem occurs when code generation", 37));
	}
	_28114_f->_method_close();
}



inline void _1d055b656_clear_objects(void) {
	if (_1d1da163c_remove_file(_1d055b656_get_compile_path()) != 0LLU) {
		jule::outln(jule::Str("a problem occurs when object cleaning", 37));
		return;
	}
	_1d2177c10_remove_dir(_1d055b656_OUT_DIR);
}



inline void _1d055b656_compile_ir(jule::Str _30715_compiler,jule::Str _30730_compiler_cmd) {
	jule::Int _3089_status = _1d055b656_system((_30715_compiler + jule::Str(" ", 1)) + _30730_compiler_cmd);
	if (_3089_status != 0LL) {
		jule::out(jule::Str("external compiler failed with status code: ", 43));
		jule::outln(_3089_status);
		_1d051806e_exit_err(jule::Str("", 0));
	}
	_1d055b656_clear_objects();
}



inline void _1d055b656_do_spell(jule::Str _31913_obj,jule::Str _31923_compiler,jule::Str _31938_compiler_cmd) {
	jule::Str _3209_path = _1d055b656_get_compile_path();
	_1d055b656_write_output(_3209_path,_31913_obj);
	{
		auto _match_expr{ _1d055b656_MODE };
		if (!((0LLU) == _match_expr)) { goto _case_end_4720658720; }
		_case_begin_4720658720:;
		{
			_1d055b656_compile_ir(_31923_compiler,_31938_compiler_cmd);
		}
		goto _match_end_4720657408;
		_case_end_4720658720:;
		_match_end_4720657408:;
	}
}



inline void _1d055b656_check_mode(void) {
	if ((_1d055b656_MODE != 1LLU) && (_1d055b656_MODE != 0LLU)) {
		jule::outln(_1d0557e9e_logf(jule::Str("\"@\" is invalid value for the \"@\" key", 36),jule::Slice<jule::Any>({jule::Any(_1d055b656_MODE),jule::Any(jule::Str("mode", 4))})));
		_1d051806e_exit_err(jule::Str("", 0));
	}
}



inline void _1d055b656_check_compiler(void) {
	if ((_1d055b656_COMPILER != jule::Str("gcc", 3)) && (_1d055b656_COMPILER != jule::Str("clang", 5))) {
		jule::outln(_1d0557e9e_logf(jule::Str("\"@\" is invalid value for the \"@\" key", 36),jule::Slice<jule::Any>({jule::Any(_1d055b656_COMPILER),jule::Any(jule::Str("compiler", 8))})));
		_1d051806e_exit_err(jule::Str("", 0));
	}
}



inline void _1d055b656_set(void) {
	_1d055b656_check_mode();
	_1d055b656_check_compiler();
	_1d1956852_init_flags();
}



inline jule::Bool _1d055b656_is_cpp_source_file(jule::Str _35023_path) {
	jule::Int _3519_offset = _35023_path.rfind(jule::Str(".", 1));
	if (_3519_offset == -1LL) {
		return false;
	}
	return _1d05571bd_is_valid_cpp_ext(_35023_path.slice(static_cast<jule::Int>(_3519_offset)));
}



inline std::tuple<jule::Str,jule::Str> _1d055b656_gen_compile_cmd(jule::Str _35920_source_path,jule::Ref<_1d1818549_IR>& _35939_ir) {
	jule::Str _3609_compiler = _1d055b656_COMPILER_PATH;
	
	
	
	jule::Str _3659_SET_STD = jule::Str("--std=", 6) + _1d055b656_CPP_STD;
	jule::Str _36713_cmd = jule::Str("-O0 ", 4);
	{
		auto _match_expr{ _1d055b656_COMPILER };
		if (!((jule::Str("gcc", 3)) == _match_expr)) { goto _case_end_4720681136; }
		_case_begin_4720681136:;
		{
			_36713_cmd+=jule::Str("-w ", 3);
		}
		goto _match_end_4720679424;
		_case_end_4720681136:;
		if (!((jule::Str("clang", 5)) == _match_expr)) { goto _case_end_4720681248; }
		_case_begin_4720681248:;
		{
			_36713_cmd+=jule::Str("-Wno-everything ", 16);
		}
		goto _match_end_4720679424;
		_case_end_4720681248:;
		_match_end_4720679424:;
	}
	_36713_cmd+=_3659_SET_STD + jule::Str(" ", 1);
	{
		auto _range_expr = _35939_ir->_field_passes;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Str _1d055b656_pass = *_range_begin;
			_iter_begin_4720683664:;
			{
				_36713_cmd+=_1d055b656_pass + jule::Str(" ", 1);
			}
			_iter_next_4720683664:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d055b656_pass = *_range_begin; goto _iter_begin_4720683664; }
			_iter_end_4720683664:;
		}
	}
	{
		auto _range_expr = _35939_ir->_field_used;
		if (_range_expr.begin() != _range_expr.end()) {
			auto _range_begin = _range_expr.begin();
			const auto _range_end = _range_expr.end();
			jule::Ref<_1b8e0c01d_ImportInfo> _1d055b656_u = *_range_begin;
			_iter_begin_4720684672:;
			{
				if (_1d055b656_u->_field_cpp_linked && _1d055b656_is_cpp_source_file(_1d055b656_u->_field_path)) {
					_36713_cmd+=_1d055b656_u->_field_path + jule::Str(" ", 1);
				}
			}
			_iter_next_4720684672:;
			++_range_begin;
			if (_range_begin != _range_end) { _1d055b656_u = *_range_begin; goto _iter_begin_4720684672; }
			_iter_end_4720684672:;
		}
	}
	if (_1d055b656_OUT != jule::Str("", 0)) {
		_36713_cmd+=(jule::Str("-o ", 3) + _1d055b656_OUT) + jule::Str(" ", 1);
	}
	_36713_cmd+=_35920_source_path;
	return std::make_tuple(_3609_compiler,_36713_cmd);
}



inline jule::Str _1d055b656_get_compile_path(void) {
	return _1d0680a33_join(jule::Slice<jule::Str>({_1d055b656_OUT_DIR,_1d055b656_OUT_NAME}));
}



inline void _1d055b656_apply_target_independent_optimizations(jule::Ref<_1d1818549_IR>& _40848_ir) {
	if (_1d1d36270_is_opt_enabled(jule::Str("--opt-deadcode", 14))) {
		_1d0616dd7_eliminate(_40848_ir);
	}
}



inline void _1d055b656_compile_command(void) {
	jule::Str _4169_path = _1d055b656_parse_options(_1d070a5e6_ARGS);
	if (_4169_path == jule::Str("", 0)) {
		_1d051806e_exit_err(_1d0557e9e_logf(jule::Str("missing compile path", 20),jule::Slice<jule::Any>({})));
	}
	jule::Ref<_1d2151920_Status> _42210_inf;
	jule::Int _42215_err;
	std::tie(_42210_inf,_42215_err) = _1d1edea66_stat(_1d062ea48_PATH_STDLIB);
	if ((_42215_err != 0LLU) || (!(_42210_inf->_method_is_dir()))) {
		_1d051806e_exit_err(_1d0557e9e_logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>({})));
	}
	_1d055b656_set();
	jule::Ref<_1d1818549_IR> _42914_ir;
	jule::Slice<_1d0557e9e_Log> _42918_logs;
	std::tie(_42914_ir,_42918_logs) = _1d1818549_IR::_static_method_build(_4169_path,_1d055b656_SEMA_FLAGS);
	if ((!(jule::real(_42914_ir))) && (_42918_logs == nullptr)) {
		_1d051806e_exit_err(_1d0557e9e_logf(jule::Str("there is no Jule source code in this package: @", 47),jule::Slice<jule::Any>({jule::Any(_4169_path)})));
	}
	if (_42918_logs != nullptr) {
		_1d0518e60_Logger::_static_method_print_logs(_42918_logs);
		_1d051806e_exit_err(jule::Str("", 0));
	}
	
	jule::Ref<_1d21d97ee_Fn> _44113_f = _42914_ir->_field_main->_method_find_fn(jule::Str("main", 4),false);
	if ((!(jule::real(_44113_f)))) {
		_1d051806e_exit_err(_1d0557e9e_logf(jule::Str("entry point (main) function is not defined", 42),jule::Slice<jule::Any>({})));
	}
	_44113_f->_field_statically=true;
	_44113_f=_42914_ir->_field_main->_method_find_fn(jule::Str("init", 4),false);
	if (jule::real(_44113_f)) {
		_44113_f->_field_statically=true;
	}
	_42914_ir->_method_order();
	_1d055b656_apply_target_independent_optimizations(_42914_ir);
	jule::Str _45710_compiler;
	jule::Str _45720_compiler_cmd;
	std::tie(_45710_compiler,_45720_compiler_cmd) = _1d055b656_gen_compile_cmd(_1d055b656_get_compile_path(),_42914_ir);
	jule::Str _45913_obj = _1ba263eab_gen(_42914_ir);
	_1ba263eab_append_standard(_45913_obj,_45710_compiler,_45720_compiler_cmd);
	_1d055b656_do_spell(_45913_obj,_45710_compiler,_45720_compiler_cmd);
}




void __jule_call_initializers(void) {
	_1d070a5e6_init();
	_1d062ea48_init();
	_1b9c0b525_init();
	_1d0556222_init();
}

int main(int argc, char *argv[], char *envp[]) {
    std::set_terminate(&jule::terminate_handler);
    jule::set_sig_handler(jule::signal_handler);
    jule::setup_command_line_args(argc, argv);
    jule::setup_environment_variables(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}